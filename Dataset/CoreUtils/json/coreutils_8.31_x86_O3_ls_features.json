{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    rax ; __gmon_start__"], ["call~rax"]], [1, 0, 2, 1, 0, 4, 1, 1, 0, 1, 0.0, ["sub     rsp, 8; _init", "mov     rax, cs:__gmon_start___ptr", "test    rax, rax", "jz      short loc_323A"], ["sub~rsp,0", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 3, 1, 7, 0.0, 1, 2], "succs": [[2], [0, 2], []], "fname": "init_proc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0.0, ["push    cs:qword_226C90", "jmp     cs:qword_226C98"], ["push~<TAG>", "jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 100, 2, 0.0, 2, 0], "succs": [[]], "fname": "sub_3240", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_toupper_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_toupper_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getenv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 16, 1, 0.0, 1, 0], "succs": [[]], "fname": "getenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigprocmask_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigprocmask", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__snprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__snprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:raise_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "raise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:abort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 30, 1, 0.0, 1, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__errno_location_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 84, 1, 0.0, 1, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strncmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 11, 1, 0.0, 1, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:localtime_r_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "localtime_r", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "strcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fpending_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:isatty_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "isatty", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigaction_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigaction", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswcntrl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswcntrl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:wcswidth_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "wcswidth", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:localeconv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "localeconv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbstowcs_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbstowcs", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:readlink_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "readlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:clock_gettime_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "clock_gettime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:setenv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "setenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:textdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fclose_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:opendir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "opendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpwuid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpwuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:bindtextdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dcgettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 119, 1, 0.0, 1, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_get_mb_cur_max_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 7, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strlen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 65, 1, 0.0, 1, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__lxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__lxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__stack_chk_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 47, 1, 0.0, 1, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getopt_long_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbrtowc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getgrgid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getgrgid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstatat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstatat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:snprintf_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "snprintf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__overflow_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 26, 1, 0.0, 1, 0], "succs": [[]], "fname": "__overflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strrchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 17, 1, 0.0, 1, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:gmtime_r_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "gmtime_r", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:lseek_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__assert_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__strtoul_internal_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__strtoul_internal", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fnmatch_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "fnmatch", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 46, 1, 0.0, 1, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ioctl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getcwd_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getcwd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strspn_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strspn", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:closedir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "closedir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 7, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_setjmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "_setjmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fputs_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 48, 1, 0.0, 1, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:calloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 42, 1, 0.0, 1, 0], "succs": [[]], "fname": "strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:signal_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "signal", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dirfd_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "dirfd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpwnam_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpwnam", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__memcpy_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__memcpy_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigemptyset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigemptyset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 22, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getgrnam_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getgrnam", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:tzset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "tzset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fileno_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:tcgetpgrp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "tcgetpgrp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__xstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "__xstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:readdir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "readdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:wcwidth_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 8, 1, 0.0, 1, 0], "succs": [[]], "fname": "wcwidth", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fflush_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:nl_langinfo_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strcoll_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 28, 1, 0.0, 1, 0], "succs": [[]], "fname": "strcoll", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mktime_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mktime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__freading_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fwrite_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "fwrite_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:realloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:stpncpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "stpncpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:setlocale_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__printf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 18, 1, 0.0, 1, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:timegm_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "timegm", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strftime_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strftime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mempcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "mempcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memmove_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:error_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 28, 1, 0.0, 1, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fseeko_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:unsetenv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "unsetenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strtoul_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strtoul", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_atexit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:wcstombs_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "wcstombs", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:gethostname_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "gethostname", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigismember_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigismember", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fwrite_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 45, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fflush_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "fflush_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbsinit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswprint_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigaddset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigaddset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_tolower_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_tolower_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_b_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 8, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__sprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 13, 1, 0.0, 1, 0], "succs": [[]], "fname": "__sprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:freefun"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 92, 1, 0.0, 1, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:chunkfun"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 27, 1, 0.0, 1, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_finalize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 164, 0, 0, 2, 1, 1, 0, 0, 0.04268637154543195, ["test    r14, r14", "jz      loc_4E0D"], ["test~r14,r14", "jz~FOO"]], [1, 0, 172, 0, 0, 2, 0, 1, 15, 10, 0.021987209906672994, ["cmp     cs:print_hyperlink, 0", "jz      loc_43FF"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 166, 0, 0, 2, 1, 1, 16, 7, 0.00158746299685897, ["test    edx, edx", "jz      loc_43FF"], ["test~edx,edx", "jz~FOO"]], [0, 0, 165, 0, 0, 2, 1, 1, 15, 6, 0.21000271168056403, ["test    edx, edx", "jnz     short loc_4442"], ["test~edx,edx", "jnz~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 23, -1, 0.009716855354439247, ["cmp     cs:print_block_size, 0", "jnz     loc_4501"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 72, 0, 0, 2, 0, 1, 22, -1, 0.01208957584796511, ["cmp     cs:print_scontext, 0", "jnz     loc_4501"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 45, 0, 0, 2, 0, 1, 26, -1, 0.1209974465008022, ["cmp     cs:cwd_n_used, 0", "jnz     loc_4A9B"], ["cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 46, 0, 1, 6, 0, 2, 26, -1, 0.0002598693873861659, ["lea     rdi, asc_20D7B+1; name", "mov     rcx, r15; command_line_arg", "mov     edx, 1; inode", "mov     esi, 3; type", "call    gobble_file", "jmp     loc_45FC"], ["lea~rdi,<TAG>", "mov~rcx,r15", "mov~edx,0", "mov~esi,0", "call~FOO", "jmp~FOO"]], [2, 1, 46, 0, 2, 12, 0, 3, 26, -1, 0.0002598693873861659, ["mov     edi, 20h ; ' '; n", "call    xmalloc", "lea     rdi, asc_20D7B+1; string", "mov     rbx, rax", "mov     qword ptr [rax+8], 0", "call    xstrdup", "mov     [rbx], rax", "mov     rax, cs:pending_dirs", "mov     byte ptr [rbx+10h], 1", "mov     cs:pending_dirs, rbx", "mov     [rbx+18h], rax", "jmp     loc_45FC"], ["mov~edi,<STR>", "call~FOO", "lea~rdi,<TAG>", "mov~rbx,rax", "mov~[word ptr [rax+0],0", "call~FOO", "mov~<TAG>,rax", "mov~rax,<TAG>", "mov~[yte ptr [rbx+0],0", "mov~<TAG>,rbx", "mov~[rbx+0],rax", "jmp~FOO"]], [2, 0, 47, 1, 1, 8, 1, 2, 25, -1, 0.12164147063475922, ["mov     rdi, [rbx+r13*8]; name", "xor     esi, esi; type", "mov     rcx, r15; command_line_arg", "mov     edx, 1; inode", "add     r13, 1", "call    gobble_file", "cmp     ebp, r13d", "jg      short loc_45E0"], ["mov~rdi,<TAG>", "xor~esi,esi", "mov~rcx,r15", "mov~edx,0", "add~r13,0", "call~FOO", "cmp~ebp,r13d", "jg~FOO"]], [1, 0, 2, 0, 0, 5, 0, 1, 10, -1, 0.0022371364653243847, ["mov     eax, cs:ls_mode; jumptable 0000000000003B4C case 0", "mov     rcx, cs:Version; version", "lea     rsi, domainname+7; \"ls\"", "cmp     eax, 1", "jz      short loc_3E1C"], ["mov~eax,<TAG>", "mov~rcx,<TAG>", "lea~rsi,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 274, 1, 0, 3, 0, 1, 9, 16, 0.08622014326712313, ["movsxd  rax, dword ptr [r13+rax*4+0]", "add     rax, r13", "jmp     rax; switch jump"], ["movsxd~rax,[word ptr [r13+0]", "add~rax,r13", "jmp~rax"]], [0, 0, 32, 0, 1, 9, 1, 2, 32, -1, 0.006214267959234402, ["lea     rcx, [rdx-10h]", "movdqu  xmm0, xmmword ptr [rdx-10h]", "mov     rsi, r12; entry", "mov     rdi, rax; table", "mov     cs:dev_ino_obstack.next_free, rcx", "movaps  xmmword ptr [rsp+88h+di_0.st_ino], xmm0", "call    hash_delete", "test    found, found", "jz      loc_52BA"], ["lea~rcx,[rdx-10h]+0]", "movdqu~xmm0,[mmword ptr [rdx-10h]+0]", "mov~rsi,r12", "mov~rdi,rax", "mov~<TAG>,rcx", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "test~found,found", "jz~FOO"]], [1, 0, 32, 1, 0, 5, 0, 0, 31, -1, 0.010259191467245158, ["mov     rdx, cs:dev_ino_obstack.next_free", "mov     rcx, rdx", "sub     rcx, cs:dev_ino_obstack.object_base", "cmp     rcx, 0Fh", "jbe     loc_529B"], ["mov~rdx,<TAG>", "mov~rcx,rdx", "sub~rcx,<TAG>", "cmp~rcx,0", "jbe~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 28, -1, 0.002609992542878449, ["cmp     eax, 7Eh ; '~'", "jz      short loc_4A2D"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 62, 0, 0, 3, 0, 0, 27, -1, 0.005208686416740108, ["lea     ecx, [rax-2Dh]", "cmp     ecx, 1", "jbe     short loc_4A2D"], ["lea~ecx,[rax-2Dh]+0]", "cmp~ecx,0", "jbe~FOO"]], [0, 0, 137, 0, 0, 2, 1, 1, 22, 7, 0.003095835310600411, ["test    rax, rax", "jnz     loc_4D79"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 143, 0, 0, 1, 0, 1, 21, 8, 0.010835423587101439, ["jle     loc_502C"], ["jle~FOO"]], [0, 0, 51, 0, 0, 2, 0, 1, 29, -1, 0.00633855331841909, ["mov     cs:hostname, rax", "jmp     loc_4531"], ["mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 52, 0, 0, 2, 0, 1, 29, -1, 0.0, ["lea     rax, a8+6; \"\"", "jmp     loc_4A50"], ["lea~rax,<TAG>", "jmp~FOO"]], [0, 0, 53, 0, 1, 3, 1, 2, 28, -1, 0.010451268840530586, ["call    xgethostname", "test    rax, rax", "jz      loc_4E01"], ["call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 274, 0, 0, 2, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     cs:time_type_0, 1; jumptable 0000000000003B4C case 230", "jmp     loc_3B08"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 161, 0, 0, 2, 0, 1, 17, 8, 0.01981786545544935, ["lea     r13, posix_prefix_10077; \"posix-\"", "jmp     short loc_441C"], ["lea~r13,<TAG>", "jmp~FOO"]], [0, 0, 163, 0, 1, 5, 1, 2, 17, 9, 0.02346733554787246, ["lea     rdi, aTimeStyle; \"TIME_STYLE\"", "call    _getenv", "test    rax, rax", "mov     r14, rax", "jnz     loc_4408"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~r14,rax", "jnz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 33, -1, 0.006033489254965765, ["cmp     cs:ind.len, 1", "jnz     loc_4838"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 18, 0, 0, 3, 0, 1, 32, -1, 0.009016337875398277, ["mov     rax, cs:off_227068", "cmp     word ptr [rax], 5B1Bh", "jz      loc_5009"], ["mov~rax,<TAG>", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 30, -1, 0.024947461189071925, ["cmp     cs:dired, 0", "jnz     loc_4B02"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 29, -1, 0.06240254897973019, ["cmp     cs:print_with_color, 0", "jz      short loc_46FC"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 10, 0, 0, 3, 1, 1, 34, -1, 0.004011027500960387, ["mov     edi, cs:interrupt_signal; sig", "test    edi, edi", "jz      loc_46FC"], ["mov~edi,<TAG>", "test~edi,edi", "jz~FOO"]], [0, 0, 9, 0, 1, 2, 0, 2, 35, -1, 0.0, ["call    _raise", "jmp     loc_46FC"], ["call~FOO", "jmp~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 30, -1, 0.03281133482475764, ["cmp     cs:used_color, 0", "jnz     loc_481C"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 274, 0, 1, 6, 1, 2, 13, 16, 0.0, ["mov     edi, 1; fd", "call    _isatty", "test    eax, eax", "setnz   al", "movzx   eax, al", "jmp     loc_42A9"], ["mov~edi,0", "call~FOO", "test~eax,eax", "setnz~al", "movzx~eax,al", "jmp~FOO"]], [1, 0, 274, 0, 0, 3, 1, 1, 12, 16, 0.0026212912118952388, ["xor     eax, eax", "cmp     edx, 2", "jnz     loc_42A9"], ["xor~eax,eax", "cmp~edx,0", "jnz~FOO"]], [1, 0, 36, 1, 0, 3, 0, 1, 27, -1, 0.09737192958669469, ["sub     r14d, 1", "mov     rbx, cs:pending_dirs", "jg      short loc_4654"], ["sub~r14d,0", "mov~rbx,<TAG>", "jg~FOO"]], [1, 0, 42, 0, 0, 2, 0, 1, 28, -1, 0.01462047770772603, ["cmp     cs:cwd_n_used, 0", "jz      loc_460A"], ["cmp~<TAG>,0", "jz~FOO"]], [14, 0, 289, 0, 1, 19, 1, 2, 2, 19, 0.02612252276681807, ["lea     rdi, name; \"QUOTING_STYLE\"", "mov     cs:time_type_0, 0", "mov     cs:sort_type_0, 0", "mov     cs:sort_reverse, 0", "mov     cs:numeric_ids, 0", "mov     cs:print_block_size, 0", "mov     cs:indicator_style_0, 0", "mov     cs:print_inode, 0", "mov     cs:dereference, 1", "mov     cs:recursive, 0", "mov     cs:immediate_dirs, 0", "mov     cs:ignore_mode, 0", "mov     cs:ignore_patterns, 0", "mov     cs:hide_patterns, 0", "mov     cs:print_scontext, 0", "call    _getenv", "test    rax, rax", "mov     r12, rax", "jz      short loc_3A4E"], ["lea~rdi,<TAG>", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "call~FOO", "test~rax,rax", "mov~r12,rax", "jz~FOO"]], [1, 0, 290, 0, 0, 2, 0, 1, 4, 20, 0.0032766140148690484, ["mov     cs:format_0, 1", "jmp     loc_398B"], ["mov~<TAG>,0", "jmp~FOO"]], [2, 0, 290, 0, 1, 5, 1, 2, 1, 20, 0.0032766140148690484, ["mov     esi, 7; s", "xor     edi, edi; o", "mov     cs:format_0, 2", "call    set_quoting_style", "jmp     loc_398B"], ["mov~esi,0", "xor~edi,edi", "mov~<TAG>,0", "call~FOO", "jmp~FOO"]], [3, 0, 290, 0, 1, 6, 1, 2, 4, 20, 0.0032766140148690484, ["mov     esi, 3; s", "xor     edi, edi; o", "mov     cs:format_0, 2", "call    set_quoting_style", "mov     cs:qmark_funny_chars, 1", "jmp     loc_398B"], ["mov~esi,0", "xor~edi,edi", "mov~<TAG>,0", "call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [2, 0, 290, 0, 1, 4, 1, 1, 2, 20, 0.0032766140148690484, ["mov     esi, 7; s", "xor     edi, edi; o", "mov     cs:format_0, 0", "call    set_quoting_style"], ["mov~esi,0", "xor~edi,edi", "mov~<TAG>,0", "call~FOO"]], [0, 0, 35, 0, 0, 1, 0, 1, 28, -1, 0.008338417734390889, ["jmp     loc_4CC9"], ["jmp~FOO"]], [1, 0, 1, 0, 0, 4, 0, 0, 11, -1, 0.0, ["cmp     eax, 2", "lea     rsi, aVdir; \"vdir\"", "lea     rax, aVdir+1; \"dir\"", "cmovz   rsi, rax; command_name"], ["cmp~eax,0", "lea~rsi,<TAG>", "lea~rax,<TAG>", "cmovz~rsi,rax"]], [1, 0, 93, 0, 0, 2, 0, 1, 26, 6, 0.0, ["mov     cs:color_symlink_as_referent, 1", "jmp     loc_4C2A"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 94, 0, 1, 6, 1, 2, 25, 6, 0.002033760423022168, ["mov     rdi, cs:s1; s1", "lea     rsi, aTarget; \"target\"", "mov     edx, 6; n", "call    _strncmp", "test    eax, eax", "jnz     loc_4C2A"], ["mov~rdi,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 93, 0, 0, 3, 0, 1, 25, 6, 0.002101552437122907, ["mov     rbx, argv_0", "mov     argv_0, r15", "jmp     short loc_4C2A"], ["mov~rbx,argv_0", "mov~argv_0,r15", "jmp~FOO"]], [0, 0, 100, 0, 1, 6, 2, 2, 24, 7, 0.002903757937314984, ["mov     rsi, [rsp+88h+argc]; name", "lea     rdi, [rbx+5]; pattern", "xor     edx, edx; flags", "call    _fnmatch", "test    eax, eax", "jnz     short loc_4BC7"], ["mov~rsi,[rsp+0]", "lea~rdi,[rbx+0]", "xor~edx,edx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 13, 0, 2, 7, 2, 3, 33, -1, 0.012857885341106818, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "call    _fflush_unlocked", "xor     edi, edi; init", "call    signal_setup", "mov     ebx, cs:stop_signal_count", "test    ebx, ebx", "jz      short loc_487F"], ["mov~rdi,<TAG>", "call~FOO", "xor~edi,edi", "call~FOO", "mov~ebx,<TAG>", "test~ebx,ebx", "jz~FOO"]], [2, 0, 12, 1, 1, 4, 0, 2, 35, -1, 0.00012428535918468804, ["mov     edi, 13h; sig", "call    _raise", "sub     ebx, 1", "jnz     short loc_4870"], ["mov~edi,0", "call~FOO", "sub~ebx,0", "jnz~FOO"]], [1, 0, 274, 0, 1, 4, 1, 2, 10, 15, 8.452273552944693e-05, ["mov     esi, 7; jumptable 0000000000003B4C case 229", "xor     edi, edi; o", "call    set_quoting_style", "jmp     loc_3B08"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "jmp~FOO"]], [4, 0, 62, 2, 0, 7, 1, 1, 29, -1, 0.00033331073599529977, ["cmp     eax, 5Fh ; '_'", "setz    cl", "add     eax, 1", "or      [rdx], cl", "add     rdx, 1", "cmp     eax, 100h", "jz      short loc_4A42"], ["cmp~eax,0", "setz~cl", "add~eax,0", "or~<TAG>,cl", "add~rdx,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 94, 0, 0, 2, 0, 0, 23, 7, 0.0032088220007683095, ["mov     rbx, argv_0", "mov     argv_0, r15"], ["mov~rbx,argv_0", "mov~argv_0,r15"]], [0, 1, 100, 1, 0, 4, 0, 1, 22, 8, 0.011321266354823402, ["mov     rax, rbx", "sub     rax, r14", "cmp     rax, 10C3h", "ja      short loc_4C1D"], ["mov~rax,rbx", "sub~rax,r14", "cmp~rax,<STR>", "ja~FOO"]], [1, 0, 16, 0, 0, 3, 0, 1, 34, -1, 0.0030280432964996723, ["mov     rax, cs:ind.string", "cmp     byte ptr [rax], 6Dh ; 'm'", "jnz     loc_4838"], ["mov~rax,<TAG>", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 32, 1, 0, 3, 0, 1, 32, -1, 0.001197658915779721, ["add     cs:dired_pos, 1", "mov     rbx, cs:pending_dirs", "jmp     loc_4654"], ["add~<TAG>,0", "mov~rbx,<TAG>", "jmp~FOO"]], [1, 0, 33, 0, 1, 3, 0, 2, 31, -1, 0.0016326576729261293, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     loc_4AEE"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [1, 0, 33, 0, 0, 3, 0, 0, 31, -1, 0.0016326576729261293, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [1, 0, 62, 0, 0, 2, 0, 1, 25, -1, 0.026269405464036336, ["cmp     eax, 5Ah ; 'Z'", "jle     short loc_49F0"], ["cmp~eax,0", "jle~FOO"]], [0, 0, 62, 0, 0, 3, 1, 1, 24, -1, 0.02783992045737012, ["lea     rdx, RFC3986", "xor     eax, eax", "jmp     short loc_4A20"], ["lea~rdx,<TAG>", "xor~eax,eax", "jmp~FOO"]], [4, 0, 62, 2, 0, 6, 1, 1, 27, -1, 0.011722369104919441, ["add     eax, 1", "mov     ecx, 1", "or      [rdx], cl", "add     rdx, 1", "cmp     eax, 100h", "jnz     short loc_4A20"], ["add~eax,0", "mov~ecx,0", "or~<TAG>,cl", "add~rdx,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 19, 0, 0, 2, 0, 1, 31, -1, 0.02994147289449303, ["cmp     qword ptr cs:color_indicator, 2", "jnz     short loc_4838"], ["cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 274, 0, 3, 14, 3, 3, 11, 16, 1.1298669016789822e-05, ["mov     rdi, cs:optarg@@GLIBC_2_2_5; arg", "call    quote", "lea     rsi, aInvalidLineWid; \"invalid line width\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     argv_0, rax", "call    _dcgettext", "lea     rdx, aSS_0; \"%s: %s\"", "mov     rcx, rax", "mov     r8, rbx", "xor     esi, esi; errnum", "mov     edi, 2; status", "xor     eax, eax", "call    _error"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~argv_0,rax", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8,rbx", "xor~esi,esi", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [0, 0, 274, 0, 1, 4, 1, 2, 10, 15, 0.0011804936301580595, ["mov     rdi, cs:optarg@@GLIBC_2_2_5; jumptable 0000000000003B4C case 250", "call    set_line_length", "test    al, al", "jnz     loc_3B08"], ["mov~rdi,<TAG>", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 14, 0, 0, 1, 0, 1, 35, -1, 7.909068311752875e-05, ["jmp     loc_4850"], ["jmp~FOO"]], [2, 0, 118, 0, 1, 9, 0, 1, 19, 11, 0.044064809165480306, ["mov     rdi, rax; string", "lea     r15, indicator_name", "mov     word ptr [rsp+88h+s1], 3F3Fh", "mov     [rsp+88h+var_41], 0", "call    xstrdup", "mov     dword ptr [rsp+88h+argc], ebp", "mov     cs:color_buf, rax", "mov     [rsp+88h+di_0.st_ino], rax", "mov     [rsp+88h+argv], argv_0"], ["mov~rdi,rax", "lea~r15,<TAG>", "mov~[ord ptr [rsp+0],0", "mov~[rsp+0],0", "call~FOO", "mov~[word ptr [rsp+0],ebp", "mov~<TAG>,rax", "mov~[rsp+0],rax", "mov~[rsp+0],argv_0"]], [1, 0, 131, 0, 0, 2, 0, 1, 18, 8, 0.04553363613766298, ["cmp     byte ptr [rax], 0", "jnz     loc_4E8E"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 1, 62, 0, 0, 3, 0, 1, 26, -1, 0.013417169457437914, ["lea     ecx, [rax-61h]", "cmp     ecx, 19h", "ja      short loc_49FD"], ["lea~ecx,[rax-61h]+0]", "cmp~ecx,<STR>", "ja~FOO"]], [1, 0, 274, 0, 0, 2, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     cs:ignore_mode, 2; jumptable 0000000000003B4C case 228", "jmp     loc_3B08"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 161, 0, 1, 6, 1, 2, 18, 7, 0.02223578062504237, ["mov     edx, 6; n", "mov     rsi, r13; s2", "mov     rdi, r14; s1", "call    _strncmp", "test    eax, eax", "jnz     loc_4CE9"], ["mov~edx,0", "mov~rsi,r13", "mov~rdi,r14", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 161, 1, 0, 1, 0, 0, 20, 8, 0.00028246672541974553, ["add     r14, 6"], ["add~r14,0"]], [0, 0, 151, 0, 0, 2, 0, 1, 18, 10, 0.022201884617992, ["lea     r14, dirname+11h; \"locale\"", "jmp     loc_4CF3"], ["lea~r14,<TAG>", "jmp~FOO"]], [1, 0, 92, 0, 0, 2, 0, 1, 20, 5, 0.05375906718188597, ["cmp     cs:directories_first, 0", "jnz     loc_445F"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 103, 0, 0, 2, 0, 1, 19, 6, 0.01707228888436942, ["cmp     byte ptr [rax], 0", "jnz     loc_4C2A"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 95, 0, 0, 2, 0, 1, 24, 6, 0.028212776534924187, ["cmp     qword ptr cs:unk_2270D0, 6", "jnz     loc_4C2A"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 93, 0, 0, 1, 0, 0, 20, 6, 0.006304657311368721, ["mov     cs:print_with_color, 0"], ["mov~<TAG>,0"]], [1, 0, 288, 0, 1, 7, 1, 2, 3, 20, 0.0002033760423022168, ["lea     rdx, quoting_style_vals; vallist", "lea     rsi, quoting_style_args; arglist", "mov     ecx, 4; valsize", "mov     rdi, rax; arg", "call    argmatch", "test    eax, eax", "js      loc_4772"], ["lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~ecx,0", "mov~rdi,rax", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 274, 0, 1, 8, 0, 2, 10, 15, 8.452273552944693e-05, ["mov     edi, 10h; jumptable 0000000000003B4C case 267", "call    xmalloc", "mov     rdx, cs:optarg@@GLIBC_2_2_5", "mov     [rax], rdx", "mov     rdx, cs:hide_patterns", "mov     cs:hide_patterns, rax", "mov     [rax+8], rdx", "jmp     loc_3B08"], ["mov~edi,0", "call~FOO", "mov~rdx,<TAG>", "mov~<TAG>,rdx", "mov~rdx,<TAG>", "mov~<TAG>,rax", "mov~[rax+0],rdx", "jmp~FOO"]], [0, 0, 274, 0, 0, 2, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     cs:print_scontext, r15b; jumptable 0000000000003B4C case 221", "jmp     loc_3B08"], ["mov~<TAG>,r15b", "jmp~FOO"]], [0, 0, 136, 0, 0, 6, 0, 1, 21, 7, 0.006852642758683027, ["lea     rax, unk_1E918", "mov     [rsp+88h+argc], rax", "movq    xmm0, [rsp+88h+argc]", "punpcklqdq xmm0, xmm0", "movaps  xmmword ptr cs:long_time_format, xmm0", "jmp     loc_4D79"], ["lea~rax,<TAG>", "mov~[rsp+0],rax", "movq~xmm0,[rsp+0]", "punpcklqdq~xmm0,xmm0", "movaps~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 20, 8, 0.019145594648950354, ["cmp     rax, 1", "jz      loc_521C"], ["cmp~rax,0", "jz~FOO"]], [2, 0, 274, 0, 0, 3, 0, 1, 10, 15, 0.0031577607080962786, ["mov     cs:sort_type_0, 3; jumptable 0000000000003B4C case 249", "mov     byte ptr [rsp+88h+argc], 1", "jmp     loc_3B08"], ["mov~<TAG>,0", "mov~[yte ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 84, 0, 0, 1, 0, 0, 18, 4, 0.021354484441732765, ["mov     cs:check_symlink_mode, 1"], ["mov~<TAG>,0"]], [1, 0, 90, 0, 1, 4, 1, 2, 22, 5, 0.011083994305470815, ["mov     edi, 0Dh; type", "call    is_colored", "test    al, al", "jnz     loc_445F"], ["mov~edi,0", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 88, 0, 0, 2, 0, 1, 24, 5, 1.1298669016789822e-05, ["cmp     cs:color_symlink_as_referent, 0", "jnz     loc_445F"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 86, 0, 0, 2, 0, 1, 25, 5, 0.0022710324723747544, ["cmp     cs:format_0, 0", "jz      loc_445F"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 85, 0, 0, 2, 0, 1, 17, 4, 0.14636295844349537, ["cmp     cs:directories_first, 0", "jz      short loc_4466"], ["cmp~<TAG>,0", "jz~FOO"]], [3, 0, 118, 1, 2, 17, 1, 3, 21, 11, 0.014699568390843559, ["mov     edi, 28h ; '('; n", "lea     rbx, [rsp+88h+src]", "call    xmalloc", "mov     r14, rax", "mov     rax, cs:color_ext_list", "mov     edx, 1; equals_end", "mov     rcx, r14; output_count", "mov     rsi, rbx; src", "mov     rdi, r12; dest", "add     [rsp+88h+src], 1", "mov     cs:color_ext_list, r14", "mov     [r14+20h], rax", "mov     rax, [rsp+88h+di_0.st_ino]", "mov     [r14+8], rax", "call    get_funky_string", "test    al, al", "jnz     loc_515F"], ["mov~edi,0", "lea~rbx,[rsp+0]", "call~FOO", "mov~r14,rax", "mov~rax,<TAG>", "mov~edx,0", "mov~rcx,r14", "mov~rsi,rbx", "mov~rdi,r12", "add~[rsp+0],0", "mov~<TAG>,r14", "mov~[r14+0],rax", "mov~rax,[rsp+0]", "mov~[r14+0],rax", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 118, 0, 0, 4, 0, 1, 20, 10, 0.04948817029353942, ["mov     rax, [rsp+88h+src]", "movzx   edx, byte ptr [rax]", "cmp     dl, 2Ah ; '*'", "jz      loc_505F"], ["mov~rax,[rsp+0]", "movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [1, 0, 91, 0, 0, 2, 0, 1, 21, 4, 0.032675750796556165, ["cmp     cs:print_with_color, 0", "jz      loc_4466"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 99, 0, 3, 13, 4, 4, 23, 9, 0.016744627482882517, ["lea     rsi, aUnparsableValu; \"unparsable value for LS_COLORS environm\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     rdi, cs:color_buf; ptr", "call    free", "mov     rdi, cs:color_ext_list", "jmp     short loc_4FC3"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~rdi,<TAG>", "call~FOO", "mov~rdi,<TAG>", "jmp~FOO"]], [0, 0, 100, 0, 0, 3, 0, 1, 22, 10, 0.012970872031274715, ["mov     ebp, dword ptr [rsp+88h+argc]", "mov     rbx, [rsp+88h+argv]", "jmp     loc_4F81"], ["mov~ebp,[word ptr [rsp+0]", "mov~rbx,[rsp+0]", "jmp~FOO"]], [1, 0, 100, 0, 3, 15, 4, 3, 28, 10, 0.003479990057171265, ["mov     rdi, rbx; arg", "mov     ebp, dword ptr [rsp+88h+argc]", "mov     rbx, [rsp+88h+argv]", "call    quote", "lea     rsi, aUnrecognizedPr; \"unrecognized prefix: %s\"", "mov     r14, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, r14", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,rbx", "mov~ebp,[word ptr [rsp+0]", "mov~rbx,[rsp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~r14,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,r14", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 161, 0, 1, 4, 1, 2, 19, 6, 0.009807244706573565, ["mov     edi, 2; category", "call    hard_locale", "test    al, al", "jnz     short loc_4418"], ["mov~edi,0", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 274, 0, 0, 2, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     cs:directories_first, r15b; jumptable 0000000000003B4C case 266", "jmp     loc_3B08"], ["mov~<TAG>,r15b", "jmp~FOO"]], [1, 0, 118, 0, 0, 6, 0, 1, 23, 11, 0.01326463742571125, ["lea     rdx, [rax+1]", "mov     [rsp+88h+src], rdx", "movzx   edx, byte ptr [rax]", "mov     [rsp+88h+s1], dl", "cmp     byte ptr [rax+1], 0", "jz      loc_50AD"], ["lea~rdx,[rax+0]", "mov~[rsp+0],rdx", "movzx~edx,<TAG>", "mov~[rsp+0],dl", "cmp~[yte ptr [rax+0],0", "jz~FOO"]], [1, 0, 118, 0, 0, 8, 0, 1, 24, 11, 0.01142295437597451, ["lea     rdx, [rax+2]", "mov     [rsp+88h+src], rdx", "movzx   edx, byte ptr [rax+1]", "mov     [rsp+88h+s1+1], dl", "lea     rdx, [rax+3]", "mov     [rsp+88h+src], rdx", "cmp     byte ptr [rax+2], 3Dh ; '='", "jnz     loc_50AD"], ["lea~rdx,[rax+0]", "mov~[rsp+0],rdx", "movzx~edx,[yte ptr [rax+0]", "mov~[rsp+0],dl", "lea~rdx,[rax+0]", "mov~[rsp+0],rdx", "cmp~[yte ptr [rax+0],0", "jnz~FOO"]], [1, 0, 118, 0, 0, 5, 0, 1, 22, 11, 0.003943235486859648, ["mov     rax, [rsp+88h+src]", "lea     rdx, [rax+1]", "mov     [rsp+88h+src], rdx", "cmp     byte ptr [rax], 3Dh ; '='", "jnz     loc_50AD"], ["mov~rax,[rsp+0]", "lea~rdx,[rax+0]", "mov~[rsp+0],rdx", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 101, 0, 0, 1, 0, 1, 24, 11, 5.649334508394911e-05, ["jmp     loc_50AD"], ["jmp~FOO"]], [1, 0, 32, 0, 4, 10, 0, 4, 30, -1, 0.0034460940501208955, ["movzx   edx, byte ptr [thispend+10h]; command_line_arg", "mov     rsi, [thispend+8]; realname", "call    print_dir", "mov     rdi, [thispend]; ptr", "call    free", "mov     rdi, [thispend+8]; ptr", "call    free", "mov     rdi, thispend; ptr", "call    free", "mov     cs:print_dir_name, 1"], ["movzx~edx,[yte ptr [thispend+0]", "mov~rsi,[thispend+0]", "call~FOO", "mov~rdi,<TAG>", "call~FOO", "mov~rdi,[thispend+0]", "call~FOO", "mov~rdi,thispend", "call~FOO", "mov~<TAG>,0"]], [0, 0, 32, 0, 0, 6, 1, 1, 29, -1, 0.021885521885521887, ["mov     rax, [thispend+18h]", "mov     rdi, [thispend]; name", "mov     cs:pending_dirs, rax", "mov     rax, cs:active_dir_set", "test    rax, rax", "jz      short loc_4620"], ["mov~rax,[thispend+0]", "mov~rdi,<TAG>", "mov~<TAG>,rax", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 32, 0, 0, 2, 1, 1, 30, -1, 0.013162949404560143, ["test    rdi, rdi", "jnz     short loc_4620"], ["test~rdi,rdi", "jnz~FOO"]], [2, 0, 0, 1, 2, 10, 2, 2, 11, -1, 0.0, ["sub     rsp, 8", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "lea     r9, aDavidMackenzie; \"David MacKenzie\"", "push    0", "lea     r8, aRichardMStallm; \"Richard M. Stallman\"", "lea     rdx, package; \"GNU \"", "xor     eax, eax", "call    version_etc", "xor     edi, edi; status", "call    _exit"], ["sub~rsp,0", "mov~rdi,<TAG>", "lea~r9,<TAG>", "push~0", "lea~r8,<TAG>", "lea~rdx,<TAG>", "xor~eax,eax", "call~FOO", "xor~edi,edi", "call~FOO"]], [2, 0, 141, 1, 1, 7, 1, 2, 20, 9, 0.00986938738616591, ["add     r14, 1", "mov     esi, 0Ah; c", "mov     rdi, r14; s", "call    _strchr", "test    rax, rax", "mov     r13, rax", "jz      loc_5057"], ["add~r14,0", "mov~esi,0", "mov~rdi,r14", "call~FOO", "test~rax,rax", "mov~r13,rax", "jz~FOO"]], [1, 0, 157, 0, 0, 2, 0, 1, 19, 10, 0.011242175671705873, ["cmp     byte ptr [r14], 2Bh ; '+'", "jz      loc_4E31"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 286, 0, 1, 5, 1, 1, 4, 19, 0.0016157096694009445, ["lea     rdx, quoting_style_vals", "cdqe", "xor     edi, edi; o", "mov     esi, [rdx+rax*4]; s", "call    set_quoting_style"], ["lea~rdx,<TAG>", "cdqe~", "xor~edi,edi", "mov~esi,<TAG>", "call~FOO"]], [0, 0, 283, 0, 1, 4, 1, 2, 5, 18, 0.0001581813662350575, ["mov     rdi, rax; spec", "call    set_line_length", "test    al, al", "jnz     loc_3A76"], ["mov~rdi,rax", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 284, 0, 0, 2, 0, 1, 4, 18, 0.0002937653944365354, ["cmp     byte ptr [rax], 0", "jnz     loc_47AD"], ["cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 274, 0, 0, 3, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     cs:sort_type_0, 1; jumptable 0000000000003B4C case 219", "mov     byte ptr [rsp+88h+argc], 1", "jmp     loc_3B08"], ["mov~<TAG>,0", "mov~[yte ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 32, 0, 0, 1, 0, 0, 31, -1, 0.0018190857117031613, ["mov     thispend, cs:pending_dirs"], ["mov~thispend,<TAG>"]], [0, 0, 32, 0, 4, 9, 0, 5, 33, -1, 0.00063272546494023, ["mov     rdi, found; ptr", "call    free", "mov     rdi, [thispend]; ptr", "call    free", "mov     rdi, [thispend+8]; ptr", "call    free", "mov     rdi, thispend; ptr", "call    free", "jmp     loc_464D"], ["mov~rdi,found", "call~FOO", "mov~rdi,<TAG>", "call~FOO", "mov~rdi,[thispend+0]", "call~FOO", "mov~rdi,thispend", "call~FOO", "jmp~FOO"]], [1, 0, 134, 0, 0, 3, 0, 1, 16, 5, 0.23010869319594152, ["cmp     cs:print_with_color, 0", "movsxd  r13, cs:optind@@GLIBC_2_2_5", "jnz     loc_4B59"], ["cmp~<TAG>,0", "movsxd~r13,<TAG>", "jnz~FOO"]], [0, 0, 135, 0, 1, 2, 0, 2, 22, 6, 0.027421869703748897, ["call    abformat_init", "jmp     loc_4442"], ["call~FOO", "jmp~FOO"]], [1, 0, 135, 0, 0, 2, 0, 1, 17, 6, 0.0015140216482498361, ["mov     cs:sort_type_0, 4", "jmp     loc_4442"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 96, 0, 0, 3, 0, 1, 23, 7, 0.01396515490475222, ["mov     ebp, dword ptr [rsp+88h+argc]", "mov     rbx, [rsp+88h+argv]", "jmp     loc_4FCF"], ["mov~ebp,[word ptr [rsp+0]", "mov~rbx,[rsp+0]", "jmp~FOO"]], [0, 0, 118, 0, 0, 2, 1, 1, 22, 8, 0.029738096852190813, ["test    dl, dl", "jz      loc_525B"], ["test~dl,dl", "jz~FOO"]], [0, 0, 136, 0, 0, 6, 0, 1, 23, 7, 0.0, ["lea     rax, aYMDHMSNZ; \"%Y-%m-%d %H:%M:%S.%N %z\"", "mov     [rsp+88h+argc], rax", "movq    xmm0, [rsp+88h+argc]", "punpcklqdq xmm0, xmm0", "movaps  xmmword ptr cs:long_time_format, xmm0", "jmp     loc_4D79"], ["lea~rax,<TAG>", "mov~[rsp+0],rax", "movq~xmm0,[rsp+0]", "punpcklqdq~xmm0,xmm0", "movaps~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 274, 0, 0, 2, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     r14, cs:optarg@@GLIBC_2_2_5; jumptable 0000000000003B4C case 275", "jmp     loc_3B08"], ["mov~r14,<TAG>", "jmp~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 33, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 32, -1, 0.00634985198743588, ["mov     rsi, [rsp+88h+var_40]", "xor     rsi, fs:28h", "mov     eax, cs:exit_status", "jnz     loc_5313"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~eax,<TAG>", "jnz~FOO"]], [0, 0, 274, 0, 0, 2, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     cs:print_author, r15b; jumptable 0000000000003B4C case 259", "jmp     loc_3B08"], ["mov~<TAG>,r15b", "jmp~FOO"]], [1, 0, 118, 1, 0, 3, 0, 1, 22, 11, 5.649334508394911e-05, ["add     rax, 1", "mov     [rsp+88h+src], rax", "jmp     loc_4EBE"], ["add~rax,0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 1, 118, 0, 0, 2, 0, 1, 21, 9, 0.03229159604998531, ["cmp     dl, 3Ah ; ':'", "jz      loc_524D"], ["cmp~dl,<STR>", "jz~FOO"]], [0, 0, 32, 0, 0, 2, 1, 1, 28, -1, 0.08837818904933, ["test    rbx, rbx", "jz      loc_46E6"], ["test~rbx,rbx", "jz~FOO"]], [1, 0, 33, 0, 0, 2, 0, 1, 30, -1, 0.0030280432964996723, ["cmp     qword ptr [rbx+18h], 0", "jnz     loc_4654"], ["cmp~[word ptr [rbx+0],0", "jnz~FOO"]], [1, 0, 32, 0, 0, 2, 0, 1, 31, -1, 0.0, ["mov     cs:print_dir_name, 0", "jmp     loc_4654"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 274, 0, 0, 3, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     cs:format_0, 0; jumptable 0000000000003B4C case 265", "lea     r14, aFullIso; \"full-iso\"", "jmp     loc_3B08"], ["mov~<TAG>,0", "lea~r14,<TAG>", "jmp~FOO"]], [0, 0, 137, 0, 0, 2, 0, 1, 21, 8, 0.0038358981312001444, ["mov     r15, r14", "jmp     loc_4E6D"], ["mov~r15,r14", "jmp~FOO"]], [1, 0, 178, 0, 0, 3, 0, 0, 12, 9, 0.2281540234560369, ["mov     eax, cs:indicator_style_0", "cmp     eax, 1", "jbe     short loc_439F"], ["mov~eax,<TAG>", "cmp~eax,0", "jbe~FOO"]], [1, 1, 179, 0, 1, 5, 0, 2, 12, 10, 0.0, ["mov     edx, 1; i", "mov     esi, 20h ; ' '; c", "mov     rdi, rax; o", "call    set_char_quoting", "jmp     loc_435C"], ["mov~edx,0", "mov~esi,<STR>", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [2, 0, 180, 0, 1, 7, 2, 2, 11, 10, 0.22666259914582063, ["xor     edi, edi; o", "mov     cs:align_variable_outer_quotes, al", "and     cs:align_variable_outer_quotes, 1", "call    clone_quoting_options", "cmp     r13d, 7", "mov     cs:filename_quoting_options, rax", "jz      loc_4DA0"], ["xor~edi,edi", "mov~<TAG>,al", "and~<TAG>,0", "call~FOO", "cmp~r13d,0", "mov~<TAG>,rax", "jz~FOO"]], [2, 0, 274, 0, 0, 3, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     cs:sort_type_0, 0FFFFFFFFh; jumptable 0000000000003B4C case 216", "mov     byte ptr [rsp+88h+argc], 1", "jmp     loc_3B08"], ["mov~<TAG>,0", "mov~[yte ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 89, 0, 1, 4, 1, 2, 23, 5, 0.00890335118523038, ["mov     edi, 0Eh; type", "call    is_colored", "test    al, al", "jz      short loc_4C71"], ["mov~edi,0", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 81, 0, 0, 2, 0, 1, 20, 4, 0.002327525817458703, ["cmp     cs:indicator_style_0, 3", "jz      short loc_4967"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 82, 0, 0, 3, 0, 1, 19, 4, 0.006948681445325741, ["cmp     cs:immediate_dirs, 0", "mov     eax, 2", "jnz     short loc_4967"], ["cmp~<TAG>,0", "mov~eax,0", "jnz~FOO"]], [1, 0, 292, 0, 1, 4, 1, 2, 3, 21, 0.0033444060289697874, ["mov     edi, 1; fd", "call    _isatty", "test    eax, eax", "jnz     loc_4DB7"], ["mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 294, 1, 0, 2, 0, 1, 2, 22, 9.038935213431858e-05, ["sub     eax, 1", "jz      loc_425A"], ["sub~eax,0", "jz~FOO"]], [1, 0, 150, 0, 1, 7, 1, 2, 19, 9, 0.024015320995186766, ["lea     rdx, time_style_types; vallist", "lea     rsi, time_style_args; arglist", "mov     ecx, 4; valsize", "mov     rdi, r14; arg", "call    argmatch", "test    rax, rax", "js      loc_50C2"], ["lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~ecx,0", "mov~rdi,r14", "call~FOO", "test~rax,rax", "js~FOO"]], [1, 0, 137, 0, 0, 1, 0, 0, 22, 8, 0.0015366189862834158, ["mov     byte ptr [r13+0], 0"], ["mov~[yte ptr [r13+0],0"]], [1, 0, 139, 0, 1, 6, 1, 2, 21, 9, 0.004575960951799878, ["lea     r15, [rax+1]", "mov     esi, 0Ah; c", "mov     rdi, r15; s", "call    _strchr", "test    rax, rax", "jnz     loc_5269"], ["lea~r15,[rax+0]", "mov~esi,0", "mov~rdi,r15", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 1, 285, 0, 1, 6, 1, 2, 3, 18, 0.03864144803742119, ["lea     rdi, aColumns; \"COLUMNS\"", "mov     cs:line_length, 50h", "call    _getenv", "test    rax, rax", "mov     r12, rax", "jz      short loc_3A76"], ["lea~rdi,<TAG>", "mov~<TAG>,<STR>", "call~FOO", "test~rax,rax", "mov~r12,rax", "jz~FOO"]], [1, 0, 286, 0, 3, 14, 4, 4, 4, 19, 0.0016157096694009445, ["mov     rdi, r12; arg", "call    quote", "lea     rsi, aIgnoringInvali; \"ignoring invalid value of environment v\"...", "mov     r12, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_3A4E"], ["mov~rdi,r12", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 83, 0, 0, 2, 0, 1, 18, 3, 0.18977244480600186, ["cmp     cs:dereference, 1", "jz      loc_4941"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 87, 0, 1, 4, 1, 2, 24, 4, 0.005920502564797867, ["mov     edi, 0Ch; type", "call    is_colored", "test    al, al", "jz      loc_4466"], ["mov~edi,0", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 84, 0, 0, 1, 0, 1, 26, 4, 0.00047454409870517254, ["jmp     loc_4466"], ["jmp~FOO"]], [1, 0, 100, 0, 1, 6, 1, 2, 23, 8, 0.005513750480193433, ["lea     rsi, s2; \"TERM \"", "mov     edx, 5; n", "mov     rdi, rbx; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_4BC7"], ["lea~rsi,<TAG>", "mov~edx,0", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 78, 0, 0, 2, 0, 1, 19, 2, 0.18265428332542427, ["cmp     cs:recursive, 0", "jz      short loc_44CB"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 79, 0, 0, 2, 0, 1, 20, 3, 0.002677784556979188, ["mov     cs:dereference, eax", "jmp     loc_4473"], ["mov~<TAG>,eax", "jmp~FOO"]], [0, 0, 12, 0, 0, 1, 0, 0, 34, -1, 0.0030732379725668317, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [0, 0, 14, 0, 2, 4, 0, 2, 32, -1, 0.015524371229069215, ["lea     rdi, color_indicator; ind", "call    put_indicator", "lea     rdi, ind; ind", "call    put_indicator"], ["lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO"]], [1, 0, 274, 0, 1, 4, 1, 2, 13, 16, 1.1298669016789822e-05, ["mov     edi, 1; fd", "call    _isatty", "test    eax, eax", "jz      loc_4112"], ["mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 274, 0, 0, 2, 0, 1, 12, 16, 0.0021806431202404356, ["cmp     eax, 2", "jz      loc_427B"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 136, 0, 0, 6, 0, 1, 22, 7, 0.0069091361037669765, ["mov     [rsp+88h+argc], r14", "movq    xmm0, [rsp+88h+argc]", "mov     [rsp+88h+argc], r15", "movhps  xmm0, [rsp+88h+argc]", "movaps  xmmword ptr cs:long_time_format, xmm0", "jmp     loc_4D79"], ["mov~[rsp+0],r14", "movq~xmm0,[rsp+0]", "mov~[rsp+0],r15", "movhps~xmm0,[rsp+0]", "movaps~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 48, 0, 0, 2, 0, 1, 25, -1, 0.005355569113958376, ["cmp     cs:immediate_dirs, 0", "jz      loc_4902"], ["cmp~<TAG>,0", "jz~FOO"]], [7, 1, 298, 1, 5, 34, 1, 6, 0, 21, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     ebp, edi", "mov     rbx, argv_0", "sub     rsp, 58h", "mov     argc_0, [argv_0]; argv0", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "call    set_program_name", "lea     rsi, a8+6; locale", "mov     edi, 6; category", "call    _setlocale", "lea     rsi, dirname; \"/usr/local/share/locale\"", "lea     rdi, domainname; \"coreutils\"", "call    _bindtextdomain", "lea     rdi, domainname; \"coreutils\"", "call    _textdomain", "lea     rdi, close_stdout", "mov     cs:exit_failure, 2", "call    atexit", "mov     eax, cs:ls_mode", "mov     cs:exit_status, 0", "movdqa  xmm0, cs:xmmword_20D00", "mov     cs:print_dir_name, 1", "mov     cs:pending_dirs, 0", "cmp     eax, 2", "mov     cs:qmark_funny_chars, 0", "movaps  xmmword ptr cs:current_time.tv_sec, xmm0", "jz      loc_4757"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~ebp,edi", "mov~rbx,argv_0", "sub~rsp,<STR>", "mov~argc_0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "mov~<TAG>,0", "call~FOO", "mov~eax,<TAG>", "mov~<TAG>,0", "movdqa~xmm0,<TAG>", "mov~<TAG>,0", "mov~<TAG>,0", "cmp~eax,0", "mov~<TAG>,0", "movaps~<TAG>,xmm0", "jz~FOO"]], [3, 0, 281, 0, 1, 8, 1, 2, 4, 17, 0.05079881589948704, ["lea     r12, [rsp+88h+di_0]", "xor     eax, eax", "mov     esi, 5413h; request", "mov     edi, 1; fd", "mov     rdx, r12", "call    _ioctl", "cmp     eax, 0FFFFFFFFh", "jz      short loc_3AA5"], ["lea~r12,[rsp+0]", "xor~eax,eax", "mov~esi,0", "mov~edi,0", "mov~rdx,r12", "call~FOO", "cmp~eax,0", "jz~FOO"]], [1, 0, 282, 0, 3, 14, 4, 4, 6, 18, 0.0, ["mov     rdi, r12; arg", "call    quote", "lea     rsi, aIgnoringInvali_0; \"ignoring invalid width in environment v\"...", "mov     r12, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_3A76"], ["mov~rdi,r12", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 274, 0, 1, 11, 0, 2, 10, 15, 8.452273552944693e-05, ["mov     r9, cs:argmatch_die; jumptable 0000000000003B4C case 274", "mov     rsi, cs:optarg@@GLIBC_2_2_5; arg", "lea     rdx, time_args; arglist", "lea     rcx, time_types; vallist", "lea     rdi, context; \"--time\"", "mov     r8d, 4; valsize", "call    __xargmatch_internal", "lea     rdx, time_types", "mov     eax, [rdx+rax*4]", "mov     cs:time_type_0, eax", "jmp     loc_3B08"], ["mov~r9,<TAG>", "mov~rsi,<TAG>", "lea~rdx,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "mov~r8d,0", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>", "mov~<TAG>,eax", "jmp~FOO"]], [1, 0, 274, 0, 0, 2, 0, 1, 13, 15, 0.004581610286308273, ["mov     cs:print_with_color, 0", "jmp     loc_3B08"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 275, 0, 3, 14, 4, 4, 7, 16, 0.0015535669898086005, ["mov     rdi, r13; arg", "call    quote", "lea     rsi, aIgnoringInvali_1; \"ignoring invalid tab size in environmen\"...", "mov     r13, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, r13", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_3AEA"], ["mov~rdi,r13", "call~FOO", "lea~rsi,<TAG>", "mov~r13,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,r13", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 277, 0, 1, 8, 4, 2, 6, 17, 0.0004519467606715929, ["xor     r8d, r8d; valid_suffixes", "xor     edx, edx; strtol_base", "xor     esi, esi; ptr", "mov     rcx, r12; val", "mov     rdi, rax; s", "call    xstrtoul", "test    eax, eax", "jnz     loc_4C95"], ["xor~r8d,r8d", "xor~edx,edx", "xor~esi,esi", "mov~rcx,r12", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 280, 0, 0, 3, 1, 1, 5, 17, 0.00019207737328542698, ["movzx   eax, word ptr [rsp+88h+di_0.st_ino+2]", "test    ax, ax", "jz      short loc_3AA5"], ["movzx~eax,[ord ptr [rsp+0]", "test~ax,ax", "jz~FOO"]], [0, 0, 279, 0, 0, 1, 0, 0, 6, 17, 0.0, ["mov     cs:line_length, rax"], ["mov~<TAG>,rax"]], [1, 0, 274, 0, 0, 3, 0, 1, 11, 15, 0.0075983549137911555, ["mov     cs:print_with_color, r15b", "mov     cs:tabsize, 0", "jmp     loc_3B08"], ["mov~<TAG>,r15b", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 274, 0, 0, 3, 1, 1, 10, 16, 0.005378166451991955, ["mov     rsi, cs:optarg@@GLIBC_2_2_5; jumptable 0000000000003B4C case 261", "test    rsi, rsi", "jz      loc_428D"], ["mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [2, 0, 274, 0, 1, 10, 0, 2, 11, 16, 0.003254016676835469, ["mov     r9, cs:argmatch_die; exit_fn", "lea     rdx, when_args; arglist", "lea     rcx, when_types; vallist", "lea     rdi, aColor; \"--color\"", "mov     r8d, 4; valsize", "call    __xargmatch_internal", "lea     rdx, when_types", "mov     eax, [rdx+rax*4]", "cmp     eax, 1", "jz      loc_428D"], ["mov~r9,<TAG>", "lea~rdx,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "mov~r8d,0", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 274, 0, 0, 1, 0, 0, 11, 16, 0.005615438501344542, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 274, 0, 0, 3, 1, 1, 10, 17, 0.005389465121008745, ["mov     rsi, cs:optarg@@GLIBC_2_2_5; jumptable 0000000000003B4C case 268", "test    rsi, rsi", "jz      loc_42A4"], ["mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [2, 0, 274, 0, 1, 10, 0, 2, 11, 17, 0.0021806431202404356, ["mov     r9, cs:argmatch_die; exit_fn", "lea     rdx, when_args; arglist", "lea     rcx, when_types; vallist", "lea     rdi, aHyperlink; \"--hyperlink\"", "mov     r8d, 4; valsize", "call    __xargmatch_internal", "lea     rdx, when_types", "mov     edx, [rdx+rax*4]", "cmp     edx, 1", "jz      loc_42A4"], ["mov~r9,<TAG>", "lea~rdx,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "mov~r8d,0", "call~FOO", "lea~rdx,<TAG>", "mov~edx,<TAG>", "cmp~edx,0", "jz~FOO"]], [4, 0, 274, 1, 2, 17, 4, 3, 10, 15, 8.452273552944693e-05, ["lea     rsi, msgid; jumptable 0000000000003B4C case 215", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "sub     rsp, 8", "mov     rdi, cs:optarg@@GLIBC_2_2_5; n_str", "lea     r8, a8+6; suffixes", "push    2; err_exit", "xor     edx, edx; min", "mov     r9, rax; err", "or      rcx, 0FFFFFFFFFFFFFFFFh; max", "xor     esi, esi; base", "call    xnumtoumax", "mov     cs:tabsize, rax", "pop     rax", "pop     rdx", "jmp     loc_3B08"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "sub~rsp,0", "mov~rdi,<TAG>", "lea~r8,<TAG>", "push~0", "xor~edx,edx", "mov~r9,rax", "or~rcx,0", "xor~esi,esi", "call~FOO", "mov~<TAG>,rax", "pop~rax", "pop~rdx", "jmp~FOO"]], [1, 0, 274, 0, 0, 2, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     cs:time_type_0, 2; jumptable 0000000000003B4C case 248", "jmp     loc_3B08"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 77, 0, 1, 9, 2, 2, 20, 1, 0.004745440987051725, ["lea     r8, dev_ino_free; data_freer", "lea     rcx, dev_ino_compare; comparator", "lea     rdx, dev_ino_hash; hasher", "xor     esi, esi; tuning", "mov     edi, 1Eh; candidate", "call    hash_initialize", "test    rax, rax", "mov     cs:active_dir_set, rax", "jz      loc_5318"], ["lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [1, 0, 274, 0, 0, 2, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     cs:indicator_style_0, 2; jumptable 0000000000003B4C case 263", "jmp     loc_3B08"], ["mov~<TAG>,0", "jmp~FOO"]], [2, 0, 136, 0, 2, 10, 2, 2, 25, 7, 0.0, ["mov     rsi, cs:long_time_format; msgid", "mov     edx, 2; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, cs:long_time_format+8; msgid", "mov     edx, 2; category", "xor     edi, edi; domainname", "mov     cs:long_time_format, rax", "call    _dcgettext", "mov     cs:long_time_format+8, rax"], ["mov~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~<TAG>,rax", "call~FOO", "mov~<TAG>,rax"]], [1, 0, 137, 0, 1, 4, 1, 2, 24, 7, 0.001581813662350575, ["mov     edi, 2; category", "call    hard_locale", "test    al, al", "jz      short loc_4D79"], ["mov~edi,0", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 62, 0, 0, 3, 0, 0, 27, -1, 3.3896007050369466e-05, ["lea     ecx, [rax-30h]", "cmp     ecx, 9", "jbe     short loc_4A2D"], ["lea~ecx,[rax-30h]+0]", "cmp~ecx,0", "jbe~FOO"]], [1, 0, 118, 2, 1, 12, 2, 2, 27, 11, 0.0037172621065238516, ["lea     rax, color_indicator", "movsxd  rcx, ebp", "lea     rsi, [rsp+88h+src]; src", "shl     rcx, 4", "xor     edx, edx; equals_end", "mov     rdi, r12; dest", "add     rcx, rax; output_count", "mov     rax, [rsp+88h+di_0.st_ino]", "mov     [rcx+8], rax", "call    get_funky_string", "test    al, al", "jnz     loc_4EBE"], ["lea~rax,<TAG>", "movsxd~rcx,ebp", "lea~rsi,[rsp+0]", "shl~rcx,0", "xor~edx,edx", "mov~rdi,r12", "add~rcx,rax", "mov~rax,[rsp+0]", "mov~[rcx+0],rax", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 118, 0, 1, 4, 1, 2, 26, 12, 0.009287505931801233, ["mov     rdi, rbx; s1", "call    _strcmp", "test    eax, eax", "jz      loc_519D"], ["mov~rdi,rbx", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 43, 0, 1, 4, 1, 2, 28, -1, 0.0, ["mov     esi, 1; command_line_arg", "xor     edi, edi; dirname", "call    extract_dirs_from_files", "jmp     loc_4AAD"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "jmp~FOO"]], [1, 0, 44, 0, 1, 3, 0, 2, 27, -1, 0.019139945314441957, ["call    sort_files", "cmp     cs:immediate_dirs, 0", "jz      loc_4DF0"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 274, 0, 0, 3, 1, 1, 12, 15, 0.01527580051069984, ["mov     cs:print_hyperlink, al", "and     cs:print_hyperlink, 1", "jmp     loc_3B08"], ["mov~<TAG>,al", "and~<TAG>,0", "jmp~FOO"]], [0, 0, 118, 0, 1, 9, 2, 2, 23, 11, 0.0022145391272908052, ["mov     rax, [rsp+88h+di_0.st_ino]", "lea     rcx, [r14+10h]; output_count", "xor     edx, edx; equals_end", "mov     rsi, rbx; src", "mov     rdi, r12; dest", "mov     [r14+18h], rax", "call    get_funky_string", "test    al, al", "jnz     loc_4EBE"], ["mov~rax,[rsp+0]", "lea~rcx,[r14+0]", "xor~edx,edx", "mov~rsi,rbx", "mov~rdi,r12", "mov~[r14+0],rax", "call~FOO", "test~al,al", "jnz~FOO"]], [2, 0, 274, 0, 0, 3, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     cs:sort_type_0, 2; jumptable 0000000000003B4C case 214", "mov     byte ptr [rsp+88h+argc], 1", "jmp     loc_3B08"], ["mov~<TAG>,0", "mov~[yte ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 274, 0, 0, 2, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     cs:dereference, 4; jumptable 0000000000003B4C case 262", "jmp     loc_3B08"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 2, 1, 1, 10, -1, 0.0, ["xor     edi, edi; jumptable 0000000000003B4C case 1", "call    usage"], ["xor~edi,edi", "call~FOO"]], [1, 0, 278, 0, 1, 6, 1, 2, 5, 16, 0.05967956974668384, ["lea     rdi, aTabsize; \"TABSIZE\"", "call    _getenv", "test    rax, rax", "mov     r13, rax", "mov     cs:tabsize, 8", "jz      short loc_3AEA"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~r13,rax", "mov~<TAG>,0", "jz~FOO"]], [1, 0, 193, 0, 0, 2, 0, 1, 8, 13, 0.21476510067114093, ["cmp     cs:output_block_size, 0", "jz      loc_4972"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 274, 0, 1, 9, 0, 2, 7, 14, 0.29925654757869524, ["lea     rcx, long_options; longopts", "lea     rdx, shortopts; \"abcdfghiklmnopqrstuvw:xABCDFGHI:LNQRST:\"...", "mov     r8, r12; longind", "mov     rsi, argv_0; argv", "mov     edi, ebp; argc", "mov     dword ptr [rsp+88h+di_0.st_ino], 0FFFFFFFFh", "call    _getopt_long", "cmp     eax, 0FFFFFFFFh", "jz      loc_42BB"], ["lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~r8,r12", "mov~rsi,argv_0", "mov~edi,ebp", "mov~[word ptr [rsp+0],0", "call~FOO", "cmp~eax,0", "jz~FOO"]], [3, 0, 69, 0, 0, 4, 0, 1, 24, -1, 0.007694393600433869, ["cmp     cs:recursive, 0", "mov     cs:format_needs_stat, 0", "mov     eax, 1", "jnz     loc_450A"], ["cmp~<TAG>,0", "mov~<TAG>,0", "mov~eax,0", "jnz~FOO"]], [0, 0, 274, 0, 0, 2, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     cs:recursive, r15b; jumptable 0000000000003B4C case 213", "jmp     loc_3B08"], ["mov~<TAG>,r15b", "jmp~FOO"]], [0, 0, 75, 0, 1, 6, 2, 1, 21, -1, 0.0008474001762592367, ["mov     r8, cs:freefun; freefun", "mov     rcx, cs:chunkfun; chunkfun", "lea     rdi, dev_ino_obstack; h", "xor     edx, edx; alignment", "xor     esi, esi; size", "call    _obstack_begin"], ["mov~r8,<TAG>", "mov~rcx,<TAG>", "lea~rdi,<TAG>", "xor~edx,edx", "xor~esi,esi", "call~FOO"]], [1, 0, 36, 0, 1, 3, 0, 2, 29, -1, 0.011818407791562154, ["call    print_current_files", "cmp     cs:pending_dirs, 0", "jz      loc_46E6"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 34, 0, 0, 2, 1, 1, 29, -1, 0.005943099902831446, ["test    rbx, rbx", "jz      loc_46E6"], ["test~rbx,rbx", "jz~FOO"]], [1, 0, 68, 0, 0, 2, 0, 1, 25, -1, 0.0049036223532867825, ["cmp     cs:print_with_color, 0", "jnz     loc_450A"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 102, 0, 1, 5, 1, 2, 19, 7, 0.01606670734187513, ["lea     rdi, aColorterm+5; name", "call    _getenv", "test    rax, rax", "mov     [rsp+88h+argc], rax", "jz      short loc_4C23"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 101, 0, 0, 3, 0, 1, 20, 7, 0.012575418615687072, ["mov     rax, [rsp+88h+argc]", "cmp     byte ptr [rax], 0", "jz      short loc_4C23"], ["mov~rax,[rsp+0]", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 33, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___9964; \"main\"", "lea     rsi, file; \"src/ls.c\"", "lea     rdi, aFound; \"found\"", "mov     edx, 640h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 274, 0, 1, 4, 1, 2, 10, 15, 8.452273552944693e-05, ["mov     esi, 5; jumptable 0000000000003B4C case 212", "xor     edi, edi; o", "call    set_quoting_style", "jmp     loc_3B08"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "jmp~FOO"]], [2, 0, 274, 0, 1, 12, 0, 2, 10, 15, 8.452273552944693e-05, ["mov     r9, cs:argmatch_die; jumptable 0000000000003B4C case 273", "mov     rsi, cs:optarg@@GLIBC_2_2_5; arg", "lea     rdx, sort_args; arglist", "lea     rcx, sort_types; vallist", "lea     rdi, aSort; \"--sort\"", "mov     r8d, 4; valsize", "call    __xargmatch_internal", "lea     rdx, sort_types", "mov     byte ptr [rsp+88h+argc], 1", "mov     eax, [rdx+rax*4]", "mov     cs:sort_type_0, eax", "jmp     loc_3B08"], ["mov~r9,<TAG>", "mov~rsi,<TAG>", "lea~rdx,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "mov~r8d,0", "call~FOO", "lea~rdx,<TAG>", "mov~[yte ptr [rsp+0],0", "mov~eax,<TAG>", "mov~<TAG>,eax", "jmp~FOO"]], [0, 0, 275, 0, 0, 2, 0, 0, 7, 16, 0.0015535669898086005, ["mov     rax, [rsp+88h+di_0.st_ino]", "mov     cs:tabsize, rax"], ["mov~rax,[rsp+0]", "mov~<TAG>,rax"]], [0, 0, 274, 0, 1, 4, 2, 2, 10, 15, 8.452273552944693e-05, ["xor     esi, esi; jumptable 0000000000003B4C case 209", "xor     edi, edi; o", "call    set_quoting_style", "jmp     loc_3B08"], ["xor~esi,esi", "xor~edi,edi", "call~FOO", "jmp~FOO"]], [2, 0, 1, 0, 3, 13, 3, 3, 22, -1, 0.0015366189862834158, ["mov     rdi, r14; arg", "call    quote", "lea     rsi, aInvalidTimeSty; \"invalid time style format %s\"", "mov     argv_0, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "mov     edi, 2; status", "xor     eax, eax", "call    _error"], ["mov~rdi,r14", "call~FOO", "lea~rsi,<TAG>", "mov~argv_0,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [0, 0, 101, 0, 0, 1, 0, 1, 28, 11, 5.649334508394911e-05, ["jmp     loc_4F49"], ["jmp~FOO"]], [1, 0, 118, 1, 0, 4, 1, 1, 27, 11, 0.0030732379725668317, ["add     rbp, 1", "mov     rsi, [r15+rbp*8]", "test    rsi, rsi", "jnz     short loc_4F2C"], ["add~rbp,0", "mov~rsi,<TAG>", "test~rsi,rsi", "jnz~FOO"]], [0, 0, 66, 0, 0, 2, 0, 1, 27, -1, 0.0, ["movzx   eax, cs:directories_first", "jmp     loc_450A"], ["movzx~eax,<TAG>", "jmp~FOO"]], [1, 0, 67, 0, 0, 2, 0, 1, 26, -1, 0.002463109845660181, ["cmp     cs:indicator_style_0, 0", "jnz     loc_450A"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 189, 0, 0, 1, 0, 1, 11, 14, 0.001067724222086638, ["jmp     loc_49BA"], ["jmp~FOO"]], [0, 0, 191, 0, 1, 4, 1, 2, 10, 15, 0.001141165570695772, ["lea     rdi, aLsBlockSize+3; name", "call    _getenv", "test    rax, rax", "jnz     loc_49A0"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "jnz~FOO"]], [2, 0, 74, 1, 2, 9, 1, 3, 20, -1, 0.17571690054911532, ["lea     rdi, aTz; \"TZ\"", "call    _getenv", "mov     rdi, rax; name", "call    tzalloc", "mov     cs:localtz, rax", "mov     eax, cs:sort_type_0", "sub     eax, 2", "and     eax, 0FFFFFFFDh", "jz      short loc_4501"], ["lea~rdi,<TAG>", "call~FOO", "mov~rdi,rax", "call~FOO", "mov~<TAG>,rax", "mov~eax,<TAG>", "sub~eax,0", "and~eax,0", "jz~FOO"]], [1, 0, 274, 0, 0, 2, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     cs:dereference, 5; jumptable 0000000000003B4C case 207", "jmp     loc_3B08"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 138, 0, 0, 2, 0, 1, 23, 7, 0.003909339479809279, ["cmp     rax, 3", "jnz     short loc_4D79"], ["cmp~rax,0", "jnz~FOO"]], [0, 0, 136, 0, 0, 8, 0, 1, 23, 7, 0.0007683094931417079, ["lea     rsi, aYMD; \"%Y-%m-%d \"", "lea     rax, aMDHM; \"%m-%d %H:%M\"", "mov     [rsp+88h+argc], rsi", "movq    xmm0, [rsp+88h+argc]", "mov     [rsp+88h+argc], rax", "movhps  xmm0, [rsp+88h+argc]", "movaps  xmmword ptr cs:long_time_format, xmm0", "jmp     loc_4D79"], ["lea~rsi,<TAG>", "lea~rax,<TAG>", "mov~[rsp+0],rsi", "movq~xmm0,[rsp+0]", "mov~[rsp+0],rax", "movhps~xmm0,[rsp+0]", "movaps~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 173, 0, 0, 2, 0, 1, 14, 9, 0.024314735724131696, ["cmp     cs:format_0, 0", "jz      loc_48F0"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 73, 0, 0, 2, 0, 1, 21, -1, 0.014439699003457393, ["cmp     cs:format_0, 0", "jnz     loc_4897"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 171, 0, 0, 1, 0, 1, 16, 9, 0.000824802838225657, ["jmp     loc_43D5"], ["jmp~FOO"]], [1, 0, 170, 0, 0, 1, 0, 0, 15, 8, 0.004304792895396922, ["mov     cs:dired, 0"], ["mov~<TAG>,0"]], [2, 0, 186, 2, 1, 15, 3, 2, 9, 12, 0.22164599010236594, ["mov     rax, cs:line_length", "mov     ecx, 3", "xor     edx, edx", "div     rcx", "test    rdx, rdx", "setnz   dl", "xor     edi, edi; o", "movzx   edx, dl", "add     rax, rdx", "mov     cs:max_idx, rax", "call    get_quoting_style", "mov     edx, cs:format_0", "mov     r13d, eax", "cmp     edx, 4", "jz      loc_47A6"], ["mov~rax,<TAG>", "mov~ecx,0", "xor~edx,edx", "div~,rcx", "test~rdx,rdx", "setnz~dl", "xor~edi,edi", "movzx~edx,dl", "add~rax,rdx", "mov~<TAG>,rax", "call~FOO", "mov~edx,<TAG>", "mov~r13d,eax", "cmp~edx,0", "jz~FOO"]], [1, 0, 188, 0, 0, 2, 0, 1, 11, 13, 0.009626466002304929, ["cmp     byte ptr [rsp+88h+argv], 0", "jz      loc_42C9"], ["cmp~[yte ptr [rsp+0],0", "jz~FOO"]], [2, 0, 187, 0, 0, 3, 0, 1, 12, 13, 0.0, ["mov     cs:human_output_opts, 0", "mov     cs:output_block_size, 400h", "jmp     loc_42C9"], ["mov~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [3, 0, 274, 0, 0, 6, 1, 0, 6, 15, 0.07120421214380945, ["lea     r13, off_1CF38", "mov     byte ptr [rsp+88h+argv], 0", "mov     byte ptr [rsp+88h+argc], 0", "xor     r14d, r14d", "mov     r15d, 1", "nop     dword ptr [rax+00h]"], ["lea~r13,<TAG>", "mov~[yte ptr [rsp+0],0", "mov~[yte ptr [rsp+0],0", "xor~r14d,r14d", "mov~r15d,0", "nop~[word ptr [rax+0]"]], [1, 0, 3, 0, 3, 15, 1, 3, 20, -1, 0.003491288726188055, ["lea     rdi, aTimeStyle_0; \"time style\"", "mov     rdx, rax; problem", "mov     rsi, r14; value", "lea     argc_0, aPosixS; \"  - [posix-]%s\\n\"", "call    argmatch_invalid", "mov     argv_0, cs:stderr@@GLIBC_2_2_5", "lea     rsi, aValidArguments; \"Valid arguments are:\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "lea     rbx, time_style_args", "call    _fputs_unlocked", "lea     rcx, aFullIso; \"full-iso\""], ["lea~rdi,<TAG>", "mov~rdx,rax", "mov~rsi,r14", "lea~argc_0,<TAG>", "call~FOO", "mov~argv_0,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "lea~rbx,<TAG>", "call~FOO", "lea~rcx,<TAG>"]], [1, 0, 66, 0, 0, 2, 1, 0, 21, -1, 0.1591643504395182, ["mov     cs:format_needs_stat, 1", "xor     eax, eax"], ["mov~<TAG>,0", "xor~eax,eax"]], [1, 0, 185, 0, 0, 2, 0, 1, 10, 12, 0.0036268727543895328, ["cmp     edx, 1", "jz      loc_47A6"], ["cmp~edx,0", "jz~FOO"]], [2, 2, 274, 0, 0, 5, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     cs:human_output_opts, 90h; jumptable 0000000000003B4C case 272", "mov     cs:file_human_output_opts, 90h", "mov     cs:output_block_size, 1", "mov     cs:file_output_block_size, 1", "jmp     loc_3B08"], ["mov~<TAG>,<STR>", "mov~<TAG>,<STR>", "mov~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 6, 1, 1, 11, -1, 0.0, ["mov     r8, cs:optarg@@GLIBC_2_2_5; arg", "mov     esi, dword ptr [rsp+88h+di_0.st_ino]; opt_idx", "lea     rcx, long_options; long_options", "xor     edx, edx; c", "mov     edi, eax; err", "call    xstrtol_fatal"], ["mov~r8,<TAG>", "mov~esi,[word ptr [rsp+0]", "lea~rcx,<TAG>", "xor~edx,edx", "mov~edi,eax", "call~FOO"]], [0, 0, 274, 0, 1, 6, 1, 2, 10, 16, 0.0022032404582740155, ["mov     rdi, cs:optarg@@GLIBC_2_2_5; jumptable 0000000000003B4C case 260", "lea     rdx, output_block_size; block_size", "lea     rsi, human_output_opts; opts", "call    human_options", "test    eax, eax", "jnz     loc_52F8"], ["mov~rdi,<TAG>", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 31, -1, 0.018846179920005424, ["mov     rbx, cs:active_dir_set", "test    rbx, rbx", "jz      short loc_472E"], ["mov~rbx,<TAG>", "test~rbx,rbx", "jz~FOO"]], [1, 0, 7, 0, 4, 16, 1, 5, 31, -1, 0.0, ["lea     rsi, dired_obstack; os", "lea     rdi, prefix; \"//DIRED//\"", "call    dired_dump_obstack", "lea     rsi, subdired_obstack; os", "lea     rdi, aSubdired; \"//SUBDIRED//\"", "call    dired_dump_obstack", "mov     rdi, cs:filename_quoting_options; o", "call    get_quoting_style", "lea     rdx, quoting_style_args", "mov     eax, eax", "lea     rsi, aDiredOptionsQu; \"//DIRED-OPTIONS// --quoting-style=%s\\n\"", "mov     edi, 1", "mov     rdx, [rdx+rax*8]", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_4709"], ["lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rdi,<TAG>", "call~FOO", "lea~rdx,<TAG>", "mov~eax,eax", "lea~rsi,<TAG>", "mov~edi,0", "mov~rdx,<TAG>", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 3, 1, 1, 9, 2, 2, 21, -1, 0.001977267077938219, ["mov     rdi, cs:stderr@@GLIBC_2_2_5", "add     rbx, 8", "xor     eax, eax", "mov     rdx, rbp", "mov     esi, 1", "call    ___fprintf_chk", "mov     rcx, [rbx]", "test    rcx, rcx", "jnz     short loc_510E"], ["mov~rdi,<TAG>", "add~rbx,0", "xor~eax,eax", "mov~rdx,rbp", "mov~esi,0", "call~FOO", "mov~rcx,<TAG>", "test~rcx,rcx", "jnz~FOO"]], [1, 0, 183, 0, 0, 2, 0, 1, 11, 12, 0.0024405125076266015, ["cmp     cs:line_length, 0", "jnz     short loc_431F"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 274, 0, 0, 2, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     cs:qmark_funny_chars, 0; jumptable 0000000000003B4C case 271", "jmp     loc_3B08"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 9, -1, 0.0, ["mov     edi, 2; jumptable 0000000000003B4C default case", "call    usage"], ["mov~edi,0", "call~FOO"]], [2, 0, 274, 1, 0, 3, 0, 1, 8, 17, 0.08535014575283031, ["add     eax, 83h", "cmp     eax, 113h; switch 276 cases", "ja      loc_5155; jumptable 0000000000003B4C default case"], ["add~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 1, 0, 2, 8, 1, 2, 22, -1, 0.0004406480916548031, ["mov     rbx, cs:stderr@@GLIBC_2_2_5", "lea     rsi, aFormatEGHMForA; \"  - +FORMAT (e.g., +%H:%M) for a 'date'\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked"], ["mov~rbx,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO"]], [0, 0, 182, 0, 0, 3, 2, 1, 12, 11, 0.0010225295460194789, ["xor     eax, eax", "test    edx, edx", "jnz     short loc_4337"], ["xor~eax,eax", "test~edx,edx", "jnz~FOO"]], [2, 0, 65, 0, 0, 4, 1, 1, 22, -1, 0.16076876143990237, ["mov     cs:format_needs_type, al", "and     cs:format_needs_type, 1", "cmp     cs:dired, 0", "jnz     loc_4A5C"], ["mov~<TAG>,al", "and~<TAG>,0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 5, 0, 1, 4, 1, 2, 32, -1, 0.006304657311368721, ["mov     rdi, rbx; table", "call    hash_get_n_entries", "test    rax, rax", "jnz     loc_52D9"], ["mov~rdi,rbx", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 274, 0, 0, 2, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     cs:sort_reverse, r15b; jumptable 0000000000003B4C case 245", "jmp     loc_3B08"], ["mov~<TAG>,r15b", "jmp~FOO"]], [0, 0, 132, 0, 1, 5, 1, 2, 17, 8, 0.08177976634352473, ["lea     rdi, aLsColors; \"LS_COLORS\"", "call    _getenv", "test    rax, rax", "mov     [rsp+88h+src], rax", "jz      short loc_4B78"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 274, 0, 1, 10, 0, 2, 10, 15, 8.452273552944693e-05, ["mov     rdx, cs:optarg@@GLIBC_2_2_5; jumptable 0000000000003B4C case 204", "mov     edi, 10h; n", "mov     [rsp+88h+var_70], rdx", "call    xmalloc", "mov     rdx, [rsp+88h+var_70]", "mov     [rax], rdx", "mov     rdx, cs:ignore_patterns", "mov     [rax+8], rdx", "mov     cs:ignore_patterns, rax", "jmp     loc_3B08"], ["mov~rdx,<TAG>", "mov~edi,0", "mov~[rsp+0],rdx", "call~FOO", "mov~rdx,[rsp+0]", "mov~<TAG>,rdx", "mov~rdx,<TAG>", "mov~[rax+0],rdx", "mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 3, 0, 1, 2, 0, 1, 33, -1, 3.3896007050369466e-05, ["mov     rdi, rbx; table", "call    hash_free"], ["mov~rdi,rbx", "call~FOO"]], [0, 0, 118, 0, 0, 3, 1, 0, 25, 13, 0.009694258016405667, ["lea     rsi, aLc; \"lc\"", "lea     rbx, [rsp+88h+s1]", "xor     ebp, ebp"], ["lea~rsi,<TAG>", "lea~rbx,[rsp+0]", "xor~ebp,ebp"]], [1, 0, 63, 0, 0, 2, 0, 1, 23, -1, 0.1571983820305968, ["cmp     cs:print_hyperlink, 0", "jnz     loc_49DF"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 64, 0, 2, 15, 4, 3, 23, -1, 0.0, ["mov     r15, cs:freefun", "mov     r14, cs:chunkfun", "lea     rdi, dired_obstack; h", "xor     edx, edx; alignment", "xor     esi, esi; size", "mov     r8, r15; freefun", "mov     rcx, r14; chunkfun", "call    _obstack_begin", "lea     rdi, subdired_obstack; h", "mov     r8, r15; freefun", "mov     rcx, r14; chunkfun", "xor     edx, edx; alignment", "xor     esi, esi; size", "call    _obstack_begin", "jmp     loc_4524"], ["mov~r15,<TAG>", "mov~r14,<TAG>", "lea~rdi,<TAG>", "xor~edx,edx", "xor~esi,esi", "mov~r8,r15", "mov~rcx,r14", "call~FOO", "lea~rdi,<TAG>", "mov~r8,r15", "mov~rcx,r14", "xor~edx,edx", "xor~esi,esi", "call~FOO", "jmp~FOO"]], [1, 0, 274, 0, 0, 2, 0, 1, 10, 15, 0.0031577607080962786, ["mov     cs:format_0, 0; jumptable 0000000000003B4C case 239", "jmp     short loc_3B08"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 274, 0, 0, 2, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     byte ptr [rsp+88h+argv], 1; jumptable 0000000000003B4C case 238", "jmp     short loc_3B08"], ["mov~[yte ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 274, 0, 0, 2, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     cs:print_inode, r15b; jumptable 0000000000003B4C case 236", "jmp     short loc_3B08"], ["mov~<TAG>,r15b", "jmp~FOO"]], [4, 0, 274, 0, 0, 5, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     cs:human_output_opts, 0B0h; jumptable 0000000000003B4C case 235", "mov     cs:file_human_output_opts, 0B0h", "mov     cs:output_block_size, 1", "mov     cs:file_output_block_size, 1", "jmp     loc_3B08"], ["mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [2, 0, 274, 0, 0, 3, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     cs:format_0, 0; jumptable 0000000000003B4C case 234", "mov     cs:print_owner, 0", "jmp     loc_3B08"], ["mov~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [4, 0, 274, 0, 0, 5, 0, 1, 11, 15, 0.006135177276116874, ["mov     cs:print_block_size, 0", "mov     cs:print_with_color, 0", "mov     cs:print_hyperlink, 0", "mov     byte ptr [rsp+88h+argc], 1", "jmp     loc_3B08"], ["mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~[yte ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 274, 0, 0, 2, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     cs:immediate_dirs, r15b; jumptable 0000000000003B4C case 231", "jmp     loc_3B08"], ["mov~<TAG>,r15b", "jmp~FOO"]], [1, 0, 274, 0, 0, 2, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     cs:dereference, 3; jumptable 0000000000003B4C case 203", "jmp     loc_3B08"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 274, 0, 0, 2, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     cs:print_group, 0; jumptable 0000000000003B4C case 202", "jmp     loc_3B08"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 274, 0, 0, 2, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     cs:indicator_style_0, 3; jumptable 0000000000003B4C case 201", "jmp     loc_3B08"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 274, 0, 0, 2, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     cs:dired, r15b; jumptable 0000000000003B4C case 199", "jmp     loc_3B08"], ["mov~<TAG>,r15b", "jmp~FOO"]], [1, 0, 274, 0, 0, 2, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     cs:format_0, 2; jumptable 0000000000003B4C case 198", "jmp     loc_3B08"], ["mov~<TAG>,0", "jmp~FOO"]], [2, 0, 274, 0, 2, 15, 0, 3, 10, 15, 8.452273552944693e-05, ["mov     edi, 10h; jumptable 0000000000003B4C case 197", "call    xmalloc", "mov     rdx, cs:ignore_patterns", "lea     rsi, asc_1E80D+1; \"*~\"", "mov     edi, 10h; n", "mov     cs:ignore_patterns, rax", "mov     [rax], rsi", "mov     [rax+8], rdx", "call    xmalloc", "mov     rdx, cs:ignore_patterns", "lea     rsi, asc_1E80D; \".*~\"", "mov     [rax], rsi", "mov     [rax+8], rdx", "mov     cs:ignore_patterns, rax", "jmp     loc_3B08"], ["mov~edi,0", "call~FOO", "mov~rdx,<TAG>", "lea~rsi,<TAG>", "mov~edi,0", "mov~<TAG>,rax", "mov~<TAG>,rsi", "mov~[rax+0],rdx", "call~FOO", "mov~rdx,<TAG>", "lea~rsi,<TAG>", "mov~<TAG>,rsi", "mov~[rax+0],rdx", "mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 274, 0, 0, 2, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     cs:ignore_mode, 1; jumptable 0000000000003B4C case 196", "jmp     loc_3B08"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 274, 0, 0, 2, 0, 1, 10, 15, 0.0011804936301580595, ["cmp     cs:format_0, 0; jumptable 0000000000003B4C case 180", "jz      loc_3B08"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 274, 0, 0, 2, 0, 1, 11, 15, 0.0, ["mov     cs:format_0, 1", "jmp     loc_3B08"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 274, 0, 2, 12, 1, 3, 10, 15, 8.452273552944693e-05, ["mov     r9, cs:argmatch_die; jumptable 0000000000003B4C case 270", "mov     rsi, cs:optarg@@GLIBC_2_2_5; arg", "lea     rcx, quoting_style_vals; vallist", "lea     rdx, quoting_style_args; arglist", "lea     rdi, aQuotingStyle_0; \"--quoting-style\"", "mov     r8d, 4; valsize", "call    __xargmatch_internal", "lea     rdx, quoting_style_vals", "xor     edi, edi; o", "mov     esi, [rdx+rax*4]; s", "call    set_quoting_style", "jmp     loc_3B08"], ["mov~r9,<TAG>", "mov~rsi,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "lea~rdi,<TAG>", "mov~r8d,0", "call~FOO", "lea~rdx,<TAG>", "xor~edi,edi", "mov~esi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 274, 0, 1, 11, 0, 2, 10, 15, 8.452273552944693e-05, ["mov     r9, cs:argmatch_die; jumptable 0000000000003B4C case 269", "mov     rsi, cs:optarg@@GLIBC_2_2_5; arg", "lea     rdx, indicator_style_args; arglist", "lea     rcx, indicator_style_types; vallist", "lea     rdi, aIndicatorStyle_0; \"--indicator-style\"", "mov     r8d, 4; valsize", "call    __xargmatch_internal", "lea     rdx, indicator_style_types", "mov     eax, [rdx+rax*4]", "mov     cs:indicator_style_0, eax", "jmp     loc_3B08"], ["mov~r9,<TAG>", "mov~rsi,<TAG>", "lea~rdx,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "mov~r8d,0", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>", "mov~<TAG>,eax", "jmp~FOO"]], [1, 0, 274, 0, 1, 11, 0, 2, 10, 15, 8.452273552944693e-05, ["mov     r9, cs:argmatch_die; jumptable 0000000000003B4C case 264", "mov     rsi, cs:optarg@@GLIBC_2_2_5; arg", "lea     rdx, format_args; arglist", "lea     rcx, format_types; vallist", "lea     rdi, aFormat; \"--format\"", "mov     r8d, 4; valsize", "call    __xargmatch_internal", "lea     rdx, format_types", "mov     eax, [rdx+rax*4]", "mov     cs:format_0, eax", "jmp     loc_3B08"], ["mov~r9,<TAG>", "mov~rsi,<TAG>", "lea~rdx,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "mov~r8d,0", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>", "mov~<TAG>,eax", "jmp~FOO"]], [0, 0, 274, 0, 0, 5, 0, 1, 11, 15, 0.003061939303550042, ["mov     eax, cs:human_output_opts", "mov     cs:file_human_output_opts, eax", "mov     rax, cs:output_block_size", "mov     cs:file_output_block_size, rax", "jmp     loc_3B08"], ["mov~eax,<TAG>", "mov~<TAG>,eax", "mov~rax,<TAG>", "mov~<TAG>,rax", "jmp~FOO"]], [2, 0, 274, 0, 0, 3, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     cs:sort_type_0, 4; jumptable 0000000000003B4C case 247", "mov     byte ptr [rsp+88h+argc], 1", "jmp     loc_3B08"], ["mov~<TAG>,0", "mov~[yte ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 274, 0, 0, 2, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     cs:print_block_size, r15b; jumptable 0000000000003B4C case 246", "jmp     loc_3B08"], ["mov~<TAG>,r15b", "jmp~FOO"]], [0, 0, 274, 0, 0, 2, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     cs:qmark_funny_chars, r15b; jumptable 0000000000003B4C case 244", "jmp     loc_3B08"], ["mov~<TAG>,r15b", "jmp~FOO"]], [1, 0, 274, 0, 0, 2, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     cs:indicator_style_0, 1; jumptable 0000000000003B4C case 243", "jmp     loc_3B08"], ["mov~<TAG>,0", "jmp~FOO"]], [2, 0, 274, 0, 0, 3, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     cs:format_0, 0; jumptable 0000000000003B4C case 242", "mov     cs:print_group, 0", "jmp     loc_3B08"], ["mov~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 274, 0, 0, 2, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     cs:format_0, 4; jumptable 0000000000003B4C case 240", "jmp     loc_3B08"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 274, 0, 0, 2, 0, 1, 10, 15, 8.452273552944693e-05, ["mov     cs:format_0, 3; jumptable 0000000000003B4C case 251", "jmp     loc_3B08"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 35, 0, 0, 4, 0, 0, 30, -1, 0.008451404424558787, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     [rdi+30h], rax", "jbe     loc_523E"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~[rdi+0],rax", "jbe~FOO"]], [3, 0, 181, 1, 0, 8, 2, 0, 12, 11, 0.0010225295460194789, ["mov     eax, r13d", "and     eax, 0FFFFFFFDh", "sub     eax, 1", "setz    al", "cmp     r13d, 6", "setz    dl", "or      eax, edx", "movzx   eax, al"], ["mov~eax,r13d", "and~eax,0", "sub~eax,0", "setz~al", "cmp~r13d,0", "setz~dl", "or~eax,edx", "movzx~eax,al"]], [0, 0, 0, 0, 1, 1, 0, 1, 21, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 140, 0, 0, 2, 0, 1, 22, 8, 0.006236865297267981, ["cmp     rax, 2", "jz      loc_51ED"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 274, 0, 0, 1, 0, 0, 10, 16, 0.0, ["mov     cs:numeric_ids, r15b; jumptable 0000000000003B4C case 241"], ["mov~<TAG>,r15b"]], [0, 0, 181, 0, 0, 2, 1, 1, 10, 11, 0.21974781370754526, ["xor     eax, eax", "jmp     loc_4337"], ["xor~eax,eax", "jmp~FOO"]], [2, 1, 174, 0, 2, 9, 1, 3, 13, 8, 0.23086570402006643, ["xor     edi, edi; o", "call    clone_quoting_options", "mov     edx, 1; i", "mov     esi, 3Ah ; ':'; c", "mov     rdi, rax; o", "mov     cs:dirname_quoting_options, rax", "call    set_char_quoting", "cmp     cs:dired, 0", "jz      short loc_43DC"], ["xor~edi,edi", "call~FOO", "mov~edx,0", "mov~esi,<STR>", "mov~rdi,rax", "mov~<TAG>,rax", "call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 177, 1, 0, 6, 1, 1, 13, 9, 0.0025986938738616593, ["lea     rdx, asc_1E8A1; \"*=>@|\"", "sub     eax, 2", "movsx   esi, byte ptr [rdx+rax]; c", "lea     r13, [rax+rdx]", "test    sil, sil", "jz      short loc_439F"], ["lea~rdx,<TAG>", "sub~eax,0", "movsx~esi,<TAG>", "lea~r13,<TAG>", "test~sil,sil", "jz~FOO"]], [2, 0, 176, 1, 1, 7, 1, 2, 15, 9, 0.001977267077938219, ["mov     rdi, cs:filename_quoting_options; o", "add     r13, 1", "mov     edx, 1; i", "call    set_char_quoting", "movsx   esi, byte ptr [r13+0]", "test    sil, sil", "jnz     short loc_4380"], ["mov~rdi,<TAG>", "add~r13,0", "mov~edx,0", "call~FOO", "movsx~esi,[yte ptr [r13+0]", "test~sil,sil", "jnz~FOO"]], [3, 0, 80, 1, 0, 4, 1, 0, 21, 4, 0.0, ["cmp     cs:format_0, 1", "sbb     eax, eax", "and     eax, 0FFFFFFFEh", "add     eax, 4"], ["cmp~<TAG>,0", "sbb~eax,eax", "and~eax,0", "add~eax,0"]], [1, 0, 296, 0, 0, 2, 0, 1, 1, 21, 6.779201410073893e-05, ["cmp     eax, 3", "jz      short loc_3975"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 176, 0, 0, 1, 0, 0, 14, 10, 0.0013106456059476194, ["xchg    ax, ax"], ["xchg~ax,ax"]], [1, 0, 62, 0, 0, 2, 0, 1, 26, -1, 0.008298872392832125, ["cmp     eax, 41h ; 'A'", "jge     short loc_4A2D"], ["cmp~eax,0", "jge~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 33, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 104, 0, 1, 4, 1, 2, 18, 7, 0.035410028698619304, ["lea     rdi, aColorterm; \"COLORTERM\"", "call    _getenv", "test    rax, rax", "jz      short loc_4B92"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 33, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___9964; \"main\"", "lea     rsi, file; \"src/ls.c\"", "lea     rdi, aHashGetNEntrie; \"hash_get_n_entries (active_dir_set) == \"...", "mov     edx, 674h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 192, 0, 2, 9, 1, 3, 9, 15, 0.005649334508394911, ["lea     rdi, aLsBlockSize; \"LS_BLOCK_SIZE\"", "call    _getenv", "lea     rdx, output_block_size; block_size", "lea     rsi, human_output_opts; opts", "mov     r13, rax", "mov     rdi, rax; spec", "call    human_options", "test    r13, r13", "jz      loc_51D3"], ["lea~rdi,<TAG>", "call~FOO", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~r13,rax", "mov~rdi,rax", "call~FOO", "test~r13,r13", "jz~FOO"]], [3, 0, 274, 1, 1, 7, 0, 2, 11, 16, 0.0, ["mov     edi, 1; fd", "call    _isatty", "cmp     eax, 1", "sbb     eax, eax", "add     eax, 2", "mov     cs:format_0, eax", "jmp     loc_3BD7"], ["mov~edi,0", "call~FOO", "cmp~eax,0", "sbb~eax,eax", "add~eax,0", "mov~<TAG>,eax", "jmp~FOO"]], [3, 0, 274, 0, 0, 4, 0, 1, 10, 16, 0.0021806431202404356, ["cmp     cs:format_0, 0; jumptable 0000000000003B4C case 233", "mov     cs:ignore_mode, 2", "mov     cs:sort_type_0, 0FFFFFFFFh", "jz      loc_4D83"], ["cmp~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "jz~FOO"]], [0, 0, 189, 0, 0, 4, 0, 0, 10, 14, 0.005462906469617879, ["mov     eax, cs:human_output_opts", "mov     cs:file_human_output_opts, eax", "mov     rax, cs:output_block_size", "mov     cs:file_output_block_size, rax"], ["mov~eax,<TAG>", "mov~<TAG>,eax", "mov~rax,<TAG>", "mov~<TAG>,rax"]], [0, 0, 99, 0, 0, 2, 1, 1, 24, 8, 0.0169818995322351, ["test    rdi, rdi", "jnz     short loc_4FB7"], ["test~rdi,rdi", "jnz~FOO"]], [0, 0, 99, 0, 1, 3, 0, 1, 25, 9, 0.0, ["mov     r14, [rdi+20h]", "call    free", "mov     rdi, r14; ptr"], ["mov~r14,[rdi+0]", "call~FOO", "mov~rdi,r14"]], [0, 0, 100, 0, 0, 6, 0, 1, 21, 9, 0.010846722256118229, ["lea     r14, G_line", "mov     rax, r12", "mov     r12, argv_0", "mov     r15, rax", "mov     argv_0, r14", "jmp     short loc_4BDB"], ["lea~r14,<TAG>", "mov~rax,r12", "mov~r12,argv_0", "mov~r15,rax", "mov~argv_0,r14", "jmp~FOO"]], [1, 0, 96, 0, 0, 1, 0, 0, 25, 7, 0.014100738932953698, ["mov     cs:print_with_color, 0"], ["mov~<TAG>,0"]], [1, 0, 0, 0, 1, 5, 0, 1, 23, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___9809; \"dev_ino_pop\"", "lea     rsi, file; \"src/ls.c\"", "lea     rdi, assertion; \"dev_ino_size <= obstack_object_size (&d\"...", "mov     edx, 403h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 100, 1, 0, 7, 2, 0, 24, 9, 7.909068311752875e-05, ["xor     eax, eax", "mov     rdi, rbx", "or      rcx, 0FFFFFFFFFFFFFFFFh", "repne scasb", "mov     rax, rcx", "not     rax", "add     rbx, rax"], ["xor~eax,eax", "mov~rdi,rbx", "or~rcx,0", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "add~rbx,rax"]], [15, 0, 50, 1, 1, 22, 1, 2, 24, -1, 0.13178767541183647, ["mov     r14d, ebp", "mov     edi, 4E20h; n", "mov     cs:cwd_n_alloc, 64h", "sub     r14d, r13d", "lea     r15, a8+6; \"\"", "call    xmalloc", "test    r14d, r14d", "mov     cs:cwd_file, rax", "mov     cs:cwd_n_used, 0", "mov     cs:cwd_some_quoted, 0", "mov     cs:any_has_acl, 0", "mov     cs:inode_number_width, 0", "mov     cs:block_size_width, 0", "mov     cs:nlink_width, 0", "mov     cs:owner_width, 0", "mov     cs:group_width, 0", "mov     cs:author_width, 0", "mov     cs:scontext_width, 0", "mov     cs:major_device_number_width, 0", "mov     cs:minor_device_number_width, 0", "mov     cs:file_size_width, 0", "jle     loc_47F1"], ["mov~r14d,ebp", "mov~edi,0", "mov~<TAG>,0", "sub~r14d,r13d", "lea~r15,<TAG>", "call~FOO", "test~r14d,r14d", "mov~<TAG>,rax", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "jle~FOO"]], [1, 0, 168, 0, 0, 2, 0, 1, 15, 7, 0.002802069916163876, ["cmp     byte ptr [rsp+88h+argc], 0", "jz      loc_4DD9"], ["cmp~[yte ptr [rsp+0],0", "jz~FOO"]], [2, 0, 169, 1, 0, 5, 0, 1, 14, 7, 0.21200822543104422, ["mov     eax, cs:time_type_0", "mov     edx, cs:format_0", "sub     eax, 1", "cmp     eax, 1", "ja      short loc_43FB"], ["mov~eax,<TAG>", "mov~edx,<TAG>", "sub~eax,0", "cmp~eax,0", "ja~FOO"]]], "func_feature": [150, 150, 396, 2, 299, 492, 0, 1351, 0.02078, 176, 36], "succs": [[22, 23], [0, 212], [0, 111], [0, 109], [186, 219], [219, 4], [33, 177], [6], [6], [9, 6], [41, 100], [256, 129, 258, 259, 260, 262, 263, 264, 265, 10, 267, 268, 273, 21, 155, 288, 162, 165, 167, 168, 170, 48, 243, 180, 181, 182, 187, 266, 66, 195, 196, 246, 198, 75, 76, 79, 207, 92, 221, 223, 228, 229, 252, 106, 235, 237, 61, 242, 115, 244, 245, 118, 248, 249, 250, 251, 124, 253, 254, 255], [194, 108], [12, 294], [49, 58], [58, 14], [114, 110], [16, 272], [296], [18], [18, 19], [185], [67], [69, 22], [147, 52], [24, 147], [224, 225], [26, 30], [26, 29], [26], [26, 59], [178], [178, 31], [40, 121], [33, 189], [74, 138], [35], [35], [35], [35], [190], [100], [70], [42, 70], [70], [44, 295], [146, 28], [28, 47], [185], [56, 20], [73], [50, 143], [147, 62], [121], [53], [53], [65, 282], [56], [56, 20], [25, 147], [79], [185, 60], [46], [86], [284, 63], [58, 15], [185], [91, 102], [67], [135], [80, 87], [192, 70], [43, 70], [70], [139, 103], [185], [185], [110], [17, 77], [185], [140], [80, 130], [80, 141], [80, 142], [80, 140], [89, 95], [120, 85], [81, 140], [290], [88], [88], [68, 109], [185], [89, 94], [89, 239], [89, 179], [89], [107], [97, 99], [97, 13], [], [137, 125], [101, 135], [138], [153, 154], [104, 153], [185], [121], [107], [236, 84], [109], [109], [72], [112, 93], [110], [185], [], [283, 116], [185], [86], [113, 119], [98, 27], [121, 123], [121], [185], [150], [275, 276], [126], [126, 127], [185], [82, 141], [145, 278], [145, 131], [36, 38], [280, 133], [218, 78], [150], [136, 199], [105, 153], [138], [144, 132], [83, 140], [140], [45, 295], [169, 206], [144], [47], [46], [161, 156], [156, 148], [110], [8, 7], [37, 279], [183, 159], [153], [185], [185], [217], [157, 197], [160, 183], [183], [185], [161, 163], [161, 149], [178], [164, 166], [32, 164], [185], [185], [188, 271], [185], [110], [171, 110], [58, 15], [200, 86], [201, 174], [34], [176, 34], [185], [96, 86], [185], [185], [], [217, 158], [286, 214], [184, 230], [233, 191], [185], [206], [27, 269], [122, 27], [233, 203], [73, 193], [73, 292], [], [185], [185], [217], [185], [294], [90], [90, 175], [233], [233, 202], [215], [289, 204], [211, 219], [185], [172, 110], [110], [1, 213], [219, 5], [213], [298], [274, 220], [216, 214], [214], [185], [226], [233], [274, 227], [185], [], [261, 222], [234, 117], [224], [226, 231], [232, 270], [185], [], [11, 229], [229], [128, 270], [240, 241], [285, 238], [185], [64, 284], [185], [117], [175], [296, 57], [240], [185], [185], [185], [185], [185], [185], [185], [185], [185], [185], [185], [185], [185], [185], [185, 257], [185], [185], [185], [185], [185], [185], [185], [185], [185], [185], [185], [185], [54, 55], [128], [], [208, 209], [242], [128], [210, 298], [281, 275], [275, 277], [145], [134, 39], [], [277], [58, 173], [], [192, 71], [], [289, 205], [247], [247, 287], [215], [291, 293], [290], [51], [72], [], [51], [9, 151], [2, 3], [297, 3]], "fname": "main", "n_num": 299}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 0, 0, 1, 12, 2, 1, 0, 0, 0.0, ["xor     ebp, ebp", "mov     r9, rdx; rtld_fini", "pop     rsi; argc", "mov     rdx, rsp; ubp_av", "and     rsp, 0FFFFFFFFFFFFFFF0h", "push    rax", "push    rsp; stack_end", "lea     r8, __libc_csu_fini; fini", "lea     rcx, __libc_csu_init; init", "lea     rdi, main; main", "call    cs:__libc_start_main_ptr", "hlt"], ["xor~ebp,ebp", "mov~r9,rdx", "pop~rsi", "mov~rdx,rsp", "and~rsp,0", "push~rax", "push~rsp", "lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "call~<TAG>", "hlt"]]], "func_feature": [1, 2, 1, 0, 1, 0, 0, 12, 0.0, 4, 0], "succs": [[]], "fname": "_start", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_deregisterTMCloneTable_ptr", "test    rax, rax", "jz      short loc_5380"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 6, 0, 1, 0, 1, 0.0, ["lea     rdi, __bss_start", "push    rbp", "lea     rax, __bss_start", "cmp     rax, rdi", "mov     rbp, rsp", "jz      short loc_5380"], ["lea~rdi,<TAG>", "push~rbp", "lea~rax,<TAG>", "cmp~rax,rdi", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, -1, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 13, 0.04167, 2, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "deregister_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [3, 0, 3, 2, 0, 11, 0, 1, 0, 0, 0.0, ["lea     rdi, __bss_start", "lea     rsi, __bss_start", "push    rbp", "sub     rsi, rdi", "mov     rbp, rsp", "sar     rsi, 3", "mov     rax, rsi", "shr     rax, 3Fh", "add     rsi, rax", "sar     rsi, 1", "jz      short loc_53D0"], ["lea~rdi,<TAG>", "lea~rsi,<TAG>", "push~rbp", "sub~rsi,rdi", "mov~rbp,rsp", "sar~rsi,0", "mov~rax,rsi", "shr~rax,0", "add~rsi,rax", "sar~rsi,0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_registerTMCloneTable_ptr", "test    rax, rax", "jz      short loc_53D0"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, 0, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 18, 0.04167, 2, 2], "succs": [[], [0, 2], [0, 3], []], "fname": "register_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 0, 0, 1, 4, 0, 1, 0, 0, 0.0, ["call    deregister_tm_clones", "mov     cs:completed_7698, 1", "pop     rbp", "retn"], ["call~FOO", "mov~<TAG>,0", "pop~rbp", "retn"]], [1, 0, 2, 0, 0, 4, 0, 1, 1, -1, 0.16666666666666666, ["cmp     cs:__cxa_finalize_ptr, 0", "push    rbp", "mov     rbp, rsp", "jz      short loc_5403"], ["cmp~<TAG>,0", "push~rbp", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     rdi, cs:__dso_handle", "call    __cxa_finalize"], ["mov~rdi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:completed_7698, 0", "jnz     short locret_5418"], ["cmp~<TAG>,0", "jnz~FOO"]]], "func_feature": [2, 0, 4, 0, 5, 5, 0, 13, 0.03333, 3, 0], "succs": [[], [0, 2], [0], [], [1, 3]], "fname": "__do_global_dtors_aux", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "pop     rbp", "jmp     register_tm_clones"], ["push~rbp", "mov~rbp,rsp", "pop~rbp", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "frame_dummy", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 1, 0, 5, 1, 0, 0, 0, 0.0, ["mov     rax, [p]", "xor     edx, edx", "div     table_size", "mov     rax, rdx", "retn"], ["mov~rax,<TAG>", "xor~edx,edx", "div~,table_size", "mov~rax,rdx", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 0, 1], "succs": [[]], "fname": "dev_ino_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.0, ["xor     eax, eax", "mov     rdx, [b]", "cmp     [a], rdx", "jz      short loc_5450"], ["xor~eax,eax", "mov~rdx,<TAG>", "cmp~<TAG>,rdx", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["mov     rax, [b+8]", "cmp     [a+8], rax", "setz    al", "retn"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "setz~al", "retn"]]], "func_feature": [0, 1, 1, 0, 3, 2, 0, 9, 0.0, 0, 0], "succs": [[1, 2], [], []], "fname": "dev_ino_compare", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     eax, cs:interrupt_signal", "test    eax, eax", "jnz     short locret_5470"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.0, ["mov     cs:interrupt_signal, edi"], ["mov~<TAG>,edi"]]], "func_feature": [0, 1, 1, 0, 3, 3, 0, 5, 0.0, 1, 0], "succs": [[1, 2], [], [1]], "fname": "sighandler", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     free"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 1, 0.0, 0, 0], "succs": [[1], []], "fname": "dev_ino_free", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 44, 0, 0, 1, 0, 1, 0, 0, 0.022198731501057084, ["jmp     loc_54FE; jumptable 0000000000005551 default case"], ["jmp~FOO"]], [2, 0, 44, 1, 0, 6, 0, 0, 8, 11, 0.020084566596194505, ["add     r8, 1", "lea     ecx, [r13+rcx*8-30h]", "movzx   r13d, byte ptr [p]", "lea     r14d, [r13-30h]", "cmp     r14b, 7", "jbe     short loc_5569"], ["add~r8,0", "lea~ecx,[r13+0]", "movzx~r13d,<TAG>", "lea~r14d,[r13-30h]+0]", "cmp~r14b,0", "jbe~FOO"]], [0, 1, 44, 0, 0, 4, 0, 1, 8, 3, 0.21088794926004228, ["movzx   r13d, byte ptr [r8]", "lea     ecx, [r13-30h]", "cmp     cl, 36h ; '6'", "ja      short loc_5648"], ["movzx~r13d,<TAG>", "lea~ecx,[r13-30h]+0]", "cmp~cl,<STR>", "ja~FOO"]], [2, 0, 44, 2, 0, 4, 0, 1, 10, 4, 0.011099365750528542, ["shl     r14d, 4", "add     r8, 1", "lea     r14d, [r13+r14-37h]", "jmp     loc_55F8"], ["shl~r14d,0", "add~r8,0", "lea~r14d,[r13+0]", "jmp~FOO"]], [2, 0, 44, 2, 0, 4, 0, 1, 11, 0, 0.0010570824524312897, ["shl     r14d, 4", "add     r8, 1", "lea     r14d, [r13+r14-57h]", "jmp     loc_55F8"], ["shl~r14d,0", "add~r8,0", "lea~r14d,[r13+0]", "jmp~FOO"]], [0, 0, 44, 0, 0, 2, 1, 0, 7, 4, 0.15116279069767444, ["xor     r14d, r14d; jumptable 0000000000005551 cases 88,120", "nop     dword ptr [rax+rax+00h]"], ["xor~r14d,r14d", "nop~[word ptr [rax+0]"]], [1, 0, 44, 0, 0, 2, 0, 1, 7, 10, 0.0, ["mov     ecx, 0Bh; jumptable 0000000000005551 case 118", "jmp     loc_54FE; jumptable 0000000000005551 default case"], ["mov~ecx,0", "jmp~FOO"]], [0, 0, 44, 1, 0, 4, 0, 1, 6, 5, 0.44714587737843553, ["movzx   r13d, cl", "movsxd  r13, dword ptr [r11+r13*4]", "add     r13, r11", "jmp     r13; switch jump"], ["movzx~r13d,cl", "movsxd~r13,<TAG>", "add~r13,r11", "jmp~r13"]], [1, 0, 44, 0, 0, 2, 0, 1, 7, 12, 0.04281183932346723, ["cmp     cl, 3Fh ; '?'", "jz      short loc_55C0"], ["cmp~cl,0", "jz~FOO"]], [1, 0, 44, 0, 0, 5, 0, 1, 6, 11, 0.08905919661733616, ["movzx   ecx, byte ptr [p+1]", "lea     r14, [p+1]", "lea     r13d, [rcx-40h]", "cmp     r13b, 3Eh ; '>'", "ja      loc_5588"], ["movzx~ecx,[yte ptr [p+0]", "lea~r14,[p+0]", "lea~r13d,[rcx-40h]+0]", "cmp~r13b,0", "ja~FOO"]], [0, 0, 1, 0, 0, 1, 1, 0, 8, -1, 0.0015856236786469346, ["xor     eax, eax"], ["xor~eax,eax"]], [3, 0, 44, 2, 0, 6, 0, 1, 6, 9, 0.3580866807610994, ["mov     [r9], cl; jumptable 0000000000005551 default case", "movzx   ecx, byte ptr [r8]", "add     count, 1", "add     r9, 1", "cmp     cl, 3Dh ; '='", "jnz     short loc_54D0"], ["mov~<TAG>,cl", "movzx~ecx,<TAG>", "add~count,0", "add~r9,0", "cmp~cl,0", "jnz~FOO"]], [2, 0, 44, 1, 0, 4, 0, 1, 5, 6, 0.4704016913319239, ["movzx   ecx, byte ptr [r8+1]", "add     r8, 2", "cmp     cl, 78h ; 'x'; switch 121 cases", "ja      short loc_54FE; jumptable 0000000000005551 default case"], ["movzx~ecx,[yte ptr [r8+0]", "add~r8,0", "cmp~cl,0", "ja~FOO"]], [2, 0, 44, 1, 0, 5, 0, 1, 7, 10, 0.039640591966173366, ["movzx   r13d, byte ptr [r8]; jumptable 0000000000005551 cases 48-55", "sub     ecx, 30h ; '0'", "lea     r14d, [r13-30h]", "cmp     r14b, 7", "ja      short loc_54FE; jumptable 0000000000005551 default case"], ["movzx~r13d,<TAG>", "sub~ecx,0", "lea~r14d,[r13-30h]+0]", "cmp~r14b,0", "ja~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 7, 10, 0.0, ["mov     ecx, 1Bh; jumptable 0000000000005551 case 101", "jmp     loc_54FE; jumptable 0000000000005551 default case"], ["mov~ecx,0", "jmp~FOO"]], [0, 1, 44, 0, 0, 2, 0, 1, 7, 10, 0.0, ["mov     ecx, 20h ; ' '; jumptable 0000000000005551 case 95", "jmp     loc_54FE; jumptable 0000000000005551 default case"], ["mov~ecx,<STR>", "jmp~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 7, 10, 0.0, ["mov     ecx, 7; jumptable 0000000000005551 case 97", "jmp     loc_54FE; jumptable 0000000000005551 default case"], ["mov~ecx,0", "jmp~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 7, 10, 0.0, ["mov     ecx, 7Fh; jumptable 0000000000005551 case 63", "jmp     loc_54FE; jumptable 0000000000005551 default case"], ["mov~ecx,0", "jmp~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 7, 10, 0.0, ["mov     ecx, 8; jumptable 0000000000005551 case 98", "jmp     loc_54FE; jumptable 0000000000005551 default case"], ["mov~ecx,0", "jmp~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 7, 10, 0.0, ["mov     ecx, 0Ch; jumptable 0000000000005551 case 102", "jmp     loc_54FE; jumptable 0000000000005551 default case"], ["mov~ecx,0", "jmp~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 7, 10, 0.0, ["mov     ecx, 0Ah; jumptable 0000000000005551 case 110", "jmp     loc_54FE; jumptable 0000000000005551 default case"], ["mov~ecx,0", "jmp~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 7, 10, 0.0, ["mov     ecx, 0Dh; jumptable 0000000000005551 case 114", "jmp     loc_54FE; jumptable 0000000000005551 default case"], ["mov~ecx,0", "jmp~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 7, 10, 0.0, ["mov     ecx, 9; jumptable 0000000000005551 case 116", "jmp     loc_54FE; jumptable 0000000000005551 default case"], ["mov~ecx,0", "jmp~FOO"]], [2, 0, 44, 1, 0, 2, 1, 0, 7, 10, 0.027748414376321355, ["add     r8, 2", "and     ecx, 1Fh"], ["add~r8,0", "and~ecx,0"]], [1, 0, 44, 1, 0, 4, 1, 1, 9, 2, 0.1178646934460888, ["mov     r15, rax", "shl     r15, cl", "test    r15d, 7E0000h", "jnz     loc_56F0"], ["mov~r15,rax", "shl~r15,cl", "test~r15d,0", "jnz~FOO"]], [2, 1, 44, 2, 0, 7, 0, 0, 12, 3, 0.023255813953488372, ["add     r8, 1", "shl     r14d, 4", "lea     r14d, [r13+r14-30h]", "movzx   r13d, byte ptr [p]", "lea     ecx, [r13-30h]", "cmp     cl, 36h ; '6'", "jbe     short loc_5605"], ["add~r8,0", "shl~r14d,0", "lea~r14d,[r13+0]", "movzx~r13d,<TAG>", "lea~ecx,[r13-30h]+0]", "cmp~cl,<STR>", "jbe~FOO"]], [0, 0, 44, 0, 0, 2, 1, 1, 2, 12, 0.07029598308668077, ["test    r12b, r12b", "jz      short loc_5520"], ["test~r12b,r12b", "jz~FOO"]], [1, 0, 44, 0, 0, 3, 0, 1, 1, 10, 0.35650105708245244, ["movzx   ecx, byte ptr [p]", "cmp     cl, 3Dh ; '='", "jz      short loc_5512"], ["movzx~ecx,<TAG>", "cmp~cl,0", "jz~FOO"]], [0, 0, 44, 0, 0, 1, 0, 0, 13, 12, 0.019027484143763214, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 1, 44, 0, 0, 2, 0, 1, 5, 12, 0.022463002114164906, ["cmp     cl, 3Ah ; ':'", "jnz     loc_5520"], ["cmp~cl,<STR>", "jnz~FOO"]], [0, 0, 44, 0, 0, 2, 1, 1, 4, 13, 0.04254756871035941, ["test    cl, cl", "jz      short loc_55B5"], ["test~cl,cl", "jz~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 3, -1, 0.015856236786469344, ["mov     eax, edx", "mov     r14, p", "jmp     short loc_558F"], ["mov~eax,edx", "mov~r14,p", "jmp~FOO"]], [0, 0, 0, 0, 0, 10, 0, 0, 4, -1, 0.0, ["mov     [dest], q", "mov     [src], r14", "mov     [output_count], r10", "pop     output_count", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~<TAG>,q", "mov~<TAG>,r14", "mov~<TAG>,r10", "pop~output_count", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 1, 0, 0, 3, 0, 1, 5, -1, 0.0021141649048625794, ["mov     r14, p", "mov     eax, 1", "jmp     short loc_558F"], ["mov~r14,p", "mov~eax,0", "jmp~FOO"]], [0, 0, 1, 0, 0, 3, 1, 1, 7, -1, 0.0015856236786469346, ["mov     r14, r8; jumptable 0000000000005551 case 0", "xor     eax, eax", "jmp     short loc_558F"], ["mov~r14,r8", "xor~eax,eax", "jmp~FOO"]], [0, 0, 44, 0, 0, 2, 1, 1, 10, 1, 0.08826638477801269, ["test    r15, rbp", "jnz     loc_5708"], ["test~r15,rbp", "jnz~FOO"]], [1, 0, 44, 0, 0, 2, 1, 1, 11, 4, 0.06871035940803383, ["test    r15d, 3FFh", "jz      short loc_5648"], ["test~r15d,0", "jz~FOO"]], [0, 0, 44, 0, 0, 1, 0, 1, 3, 8, 0.6506342494714588, ["jle     loc_55A8"], ["jle~FOO"]], [3, 0, 44, 3, 0, 5, 0, 1, 3, 11, 0.09328752642706131, ["mov     [q], cl", "add     p, 1", "add     r10, 1", "add     r9, 1", "jmp     short loc_54BF"], ["mov~<TAG>,cl", "add~p,0", "add~r10,0", "add~r9,0", "jmp~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 5, 12, 0.10068710359408034, ["cmp     cl, 5Eh ; '^'", "jnz     short loc_5520"], ["cmp~cl,0", "jnz~FOO"]], [2, 0, 44, 0, 0, 14, 1, 0, 0, 11, 0.0, ["mov     r8, [src]", "mov     r9, [dest]", "lea     r11, off_1CD40", "push    r15", "xor     r10d, r10d", "push    r14", "mov     eax, 1", "push    r13", "push    r12", "mov     r12d, edx", "push    rbp", "mov     rbp, 7E000000000000h", "push    rbx", "mov     rbx, output_count"], ["mov~r8,<TAG>", "mov~r9,<TAG>", "lea~r11,<TAG>", "push~r15", "xor~r10d,r10d", "push~r14", "mov~eax,0", "push~r13", "push~r12", "mov~r12d,edx", "push~rbp", "mov~rbp,0", "push~rbx", "mov~rbx,output_count"]], [1, 0, 44, 0, 0, 2, 0, 1, 4, 7, 0.5895877378435518, ["cmp     cl, 5Ch ; '\\'", "jz      short loc_5538"], ["cmp~cl,0", "jz~FOO"]], [3, 0, 44, 2, 0, 5, 0, 1, 8, 11, 0.022198731501057084, ["mov     byte ptr [r9], 7Fh", "add     count, 1", "add     r9, 1", "mov     r8, p", "jmp     loc_54BF"], ["mov~<TAG>,0", "add~count,0", "add~r9,0", "mov~r8,p", "jmp~FOO"]], [2, 0, 44, 2, 0, 4, 0, 1, 9, 11, 0.17019027484143764, ["mov     [r9], r14b", "add     count, 1", "add     r9, 1", "jmp     loc_54BF"], ["mov~<TAG>,r14b", "add~count,0", "add~r9,0", "jmp~FOO"]], [0, 0, 44, 0, 0, 1, 0, 0, 2, 9, 0.32478858350951373, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]]], "func_feature": [0, 10, 36, 0, 45, 75, 3, 148, 0.10384, 1, 21], "succs": [[11], [0, 1], [24, 43], [2], [2], [2], [11], [34, 5, 6, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], [10, 42], [8, 23], [32], [26, 37], [11, 7], [1, 11], [11], [11], [11], [11], [11], [11], [11], [11], [11], [11], [3, 35], [24, 28], [38, 31], [26, 44], [43], [33, 38], [33, 29], [32], [], [32], [32], [4, 36], [25, 43], [41, 30], [27], [9, 38], [27], [12, 39], [27], [27], [37]], "fname": "get_funky_string", "n_num": 45}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 4, 0, 0, 3, 0, 1, 0, 0, 0.15000000000000002, ["cmp     len, 1", "mov     rsi, [rdi+8]", "jz      short loc_5770"], ["cmp~len,0", "mov~rsi,[rdi+0]", "jz~FOO"]], [1, 0, 5, 2, 0, 8, 2, 1, 0, 2, 0.0, ["lea     rax, color_indicator", "mov     edi, edi", "shl     type, 4", "add     rdi, rax", "xor     eax, eax", "mov     len, [rdi]", "test    len, len", "jz      short locret_5767"], ["lea~rax,<TAG>", "mov~edi,edi", "shl~type,0", "add~rdi,rax", "xor~eax,eax", "mov~len,<TAG>", "test~len,len", "jz~FOO"]], [2, 0, 1, 0, 0, 7, 1, 0, 3, -1, 0.0, ["lea     rdi, a00; \"00\"", "mov     ecx, 2", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "setnz   al"], ["lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "setnz~al"]], [2, 0, 2, 0, 0, 3, 0, 1, 2, -1, 0.15000000000000002, ["cmp     len, 2", "mov     eax, 1", "jnz     short locret_5767"], ["cmp~len,0", "mov~eax,0", "jnz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["cmp     byte ptr [rsi], 30h ; '0'", "setnz   al", "retn"], ["cmp~<TAG>,0", "setnz~al", "retn"]]], "func_feature": [0, 3, 3, 0, 6, 7, 7, 25, 0.05, 2, 2], "succs": [[3, 5], [0, 4], [4], [2, 4], [], []], "fname": "is_colored", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.23809523809523808, ["mov     rdx, [rsp+18h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_57FA"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [2, 0, 3, 0, 0, 3, 0, 1, 2, 2, 0.03571428571428571, ["mov     cs:line_length, 0FFFFFFFFFFFFFFFFh", "mov     eax, 1", "jmp     short loc_57B2"], ["mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 4, 0, 1, 1, 2, 0.07142857142857142, ["mov     rax, [rsp+18h+val]", "mov     cs:line_length, rax", "mov     eax, 1", "jmp     short loc_57B2"], ["mov~rax,<TAG>", "mov~<TAG>,rax", "mov~eax,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 1, 0, 2, 2, 0.03571428571428571, ["xor     eax, eax"], ["xor~eax,eax"]], [1, 0, 5, 0, 0, 2, 0, 1, 1, 3, 0.047619047619047616, ["cmp     eax, 1", "jz      short loc_57D0"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 3, -1, 0.0, ["add     rsp, 18h", "retn"], ["add~rsp,0", "retn"]], [1, 0, 7, 1, 1, 11, 4, 2, 0, 3, 0.0, ["sub     rsp, 18h", "lea     r8, a8+6; valid_suffixes", "xor     edx, edx; strtol_base", "xor     esi, esi; ptr", "mov     rcx, rsp; val", "mov     rax, fs:28h", "mov     [rsp+18h+var_10], rax", "xor     eax, eax", "call    xstrtoumax", "test    eax, eax", "jz      short loc_57E8"], ["sub~rsp,0", "lea~r8,<TAG>", "xor~edx,edx", "xor~esi,esi", "mov~rcx,rsp", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 6, 7, 1, 8, 9, 2, 27, 0.05357, 3, 2], "succs": [[5, 7], [0], [0], [0], [1, 3], [], [2, 4], []], "fname": "set_line_length", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 0, 1, 0, 8, 0, 0, 0, 0, 0.0, ["add     rsp, 658h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 7, 1, 0.052552552552552555, ["mov     rax, [rsp+688h+var_40]", "xor     rax, fs:28h", "jnz     loc_5A96"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 25, 0, 0, 2, 0, 1, 5, 3, 0.036036036036036036, ["cmp     [rsp+688h+pb+8], 0", "jnz     loc_588E"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 26, 0, 0, 3, 0, 1, 4, 4, 0.2147147147147147, ["cmp     [rsp+688h+pb], 0", "mov     r13d, 0Ch", "jz      loc_5981"], ["cmp~[rsp+0],0", "mov~r13d,0", "jz~FOO"]], [2, 0, 37, 1, 0, 4, 0, 1, 3, 5, 0.21884384384384384, ["mov     [rdi+rsi], rax", "add     rsi, 8", "cmp     rsi, 10h", "jnz     short loc_5830"], ["mov~<TAG>,rax", "add~rsi,0", "cmp~rsi,0", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 15, 2, 0.00563063063063063, ["jmp     loc_5958"], ["jmp~FOO"]], [2, 1, 16, 2, 1, 11, 1, 1, 14, 3, 0.10698198198198199, ["lea     rdi, [i+rbp]", "lea     rax, abformat", "lea     rdx, aS_0+2; format", "mov     rcx, fmt", "mov     esi, 80h; maxlen", "shl     rdi, 7", "add     rdi, rax; s", "xor     eax, eax", "call    _snprintf", "cmp     eax, 7Fh", "jbe     short loc_5A5A"], ["lea~rdi,<TAG>", "lea~rax,<TAG>", "lea~rdx,<TAG>", "mov~rcx,fmt", "mov~esi,<STR>", "shl~rdi,0", "add~rdi,rax", "xor~eax,eax", "call~FOO", "cmp~eax,0", "jbe~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 6, 2, 0.02927927927927928, ["jmp     short loc_5958"], ["jmp~FOO"]], [3, 1, 23, 0, 2, 14, 2, 3, 8, 2, 0.21771771771771772, ["call    ___ctype_b_loc", "movzx   edx, byte ptr [rbx]", "mov     rax, [rax]", "xor     r9d, r9d; flags", "mov     rcx, [rsp+688h+width]; width", "mov     rsi, r15; dest", "mov     rdi, rbx; src", "movzx   r8d, word ptr [rax+rdx*2]", "mov     edx, 80h; dest_size", "shr     r8w, 0Bh", "and     r8d, 1; align", "call    mbsalign", "cmp     rax, 7Fh", "ja      short loc_5958"], ["call~FOO", "movzx~edx,<TAG>", "mov~rax,<TAG>", "xor~r9d,r9d", "mov~rcx,<TAG>", "mov~rsi,r15", "mov~rdi,rbx", "movzx~r8d,<TAG>", "mov~edx,<STR>", "shr~r8w,0", "and~r8d,0", "call~FOO", "cmp~rax,0", "ja~FOO"]], [1, 0, 23, 0, 2, 9, 1, 3, 7, 2, 0.22897897897897898, ["mov     edi, r12d; item", "mov     [rsp+688h+var_660], r13", "call    _nl_langinfo", "mov     esi, 25h ; '%'; c", "mov     rdi, rax; s", "mov     rbx, rax", "call    _strchr", "test    rax, rax", "jnz     short loc_5958"], ["mov~edi,r12d", "mov~[rsp+0],r13", "call~FOO", "mov~esi,0", "mov~rdi,rax", "mov~rbx,rax", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 13, 4, 0.11636636636636637, ["xor     ebx, ebx", "jmp     short loc_5A64"], ["xor~ebx,ebx", "jmp~FOO"]], [2, 0, 16, 1, 0, 3, 0, 1, 15, 4, 0.06531531531531531, ["add     rbx, 1", "cmp     rbx, 0Ch", "jz      short loc_5A41"], ["add~rbx,0", "cmp~rbx,0", "jz~FOO"]], [1, 0, 16, 1, 0, 7, 1, 1, 12, 4, 0.24174174174174173, ["lea     rax, long_time_format", "imul    rbp, recent, 0Ch", "mov     r12, [rax+recent*8]", "mov     rax, [rsp+688h+var_678]", "mov     rax, [rax+recent*8]", "test    rax, rax", "jz      loc_5A56"], ["lea~rax,<TAG>", "imul~rbp,recent,0", "mov~r12,<TAG>", "mov~rax,[rsp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 16, 0, 0, 2, 1, 0, 11, 5, 0.19519519519519518, ["xor     r13d, r13d", "mov     [rsp+688h+var_670], r15"], ["xor~r13d,r13d", "mov~[rsp+0],r15"]], [0, 0, 23, 0, 0, 2, 0, 0, 10, 5, 0.21546546546546547, ["cmp     r13, rbp", "jbe     short loc_598F"], ["cmp~r13,rbp", "jbe~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 23, 0, 0, 4, 0, 0, 5, 4, 0.19519519519519518, ["lea     rax, [rsp+688h+abmon]", "mov     [rsp+688h+dest], rax", "lea     rax, [rsp+688h+var_660]", "mov     [rsp+688h+width], rax"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~<TAG>,rax"]], [2, 0, 23, 2, 0, 7, 0, 1, 9, 3, 0.21771771771771772, ["mov     rax, [rsp+688h+var_660]", "cmp     rbp, rax", "cmovb   rbp, rax", "sub     r15, 0FFFFFFFFFFFFFF80h", "add     r12d, 1", "cmp     r15, r14", "jnz     short loc_58B8"], ["mov~rax,[rsp+0]", "cmp~rbp,rax", "cmovb~rbp,rax", "sub~r15,0", "add~r12d,0", "cmp~r15,r14", "jnz~FOO"]], [4, 2, 16, 2, 1, 15, 1, 2, 15, 2, 0.057057057057057055, ["sub     rsp, 8", "lea     r8, aSSS; \"%.*s%s%s\"", "xor     eax, eax", "push    rbp", "push    r14", "mov     r9d, ebx", "push    fmt", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     esi, 80h", "mov     rdi, nfmt", "call    ___snprintf_chk", "add     rsp, 20h", "cmp     eax, 7Fh", "ja      loc_5958"], ["sub~rsp,0", "lea~r8,<TAG>", "xor~eax,eax", "push~rbp", "push~r14", "mov~r9d,ebx", "push~fmt", "mov~rcx,0", "mov~edx,0", "mov~esi,<STR>", "mov~rdi,nfmt", "call~FOO", "add~rsp,<STR>", "cmp~eax,0", "ja~FOO"]], [0, 1, 16, 0, 0, 2, 0, 1, 14, 2, 0.08258258258258258, ["cmp     rbx, 80h", "jg      loc_5958"], ["cmp~rbx,<STR>", "jg~FOO"]], [1, 0, 37, 1, 0, 13, 2, 0, 0, 8, 0.0, ["push    r15", "push    r14", "xor     esi, esi", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 658h", "lea     rdi, [rsp+688h+pb]", "mov     rax, fs:28h", "mov     [rsp+688h+var_40], rax", "xor     eax, eax", "mov     [rsp+688h+var_678], rdi"], ["push~r15", "push~r14", "xor~esi,esi", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "lea~rdi,[rsp+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~[rsp+0],rdi"]], [0, 0, 23, 0, 0, 2, 0, 1, 11, 4, 0.0075075075075075074, ["mov     r13, rbp", "jmp     loc_58A1"], ["mov~r13,rbp", "jmp~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 17, 5, 0.046546546546546545, ["mov     r13d, 1", "jmp     loc_5997"], ["mov~r13d,0", "jmp~FOO"]], [1, 0, 23, 0, 0, 5, 1, 0, 6, 3, 0.2222222222222222, ["mov     r15, [rsp+688h+dest]", "mov     r12d, 2000Eh", "xor     ebp, ebp", "lea     r14, [r15+600h]", "nop     dword ptr [rax]"], ["mov~r15,[rsp+0]", "mov~r12d,0", "xor~ebp,ebp", "lea~r14,[r15+0]", "nop~<TAG>"]], [2, 0, 16, 2, 0, 4, 0, 1, 16, 3, 0.04279279279279279, ["sub     r14, 0FFFFFFFFFFFFFF80h", "sub     nfmt, 0FFFFFFFFFFFFFF80h", "cmp     r14, r15", "jnz     short loc_59E8"], ["sub~r14,0", "sub~nfmt,0", "cmp~r14,r15", "jnz~FOO"]], [0, 0, 16, 0, 0, 1, 0, 0, 17, 4, 0.026276276276276277, ["mov     r13, [rsp+688h+width]"], ["mov~r13,<TAG>"]], [0, 0, 37, 0, 0, 5, 1, 1, 1, 7, 0.04316816816816817, ["lea     rax, long_time_format", "mov     rax, [rax+rsi]", "movzx   edx, byte ptr [rax]", "test    dl, dl", "jz      short loc_585B"], ["lea~rax,<TAG>", "mov~rax,<TAG>", "movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [0, 0, 37, 0, 0, 1, 0, 0, 2, 9, 0.018018018018018018, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 16, 1, 0, 2, 0, 1, 16, 3, 0.08821321321321321, ["sub     r13, 1", "jz      loc_594D"], ["sub~r13,0", "jz~FOO"]], [1, 0, 37, 1, 0, 3, 0, 1, 5, 8, 0.0022522522522522522, ["movzx   edx, byte ptr [rax+2]", "add     rax, 1", "jmp     loc_5853"], ["movzx~edx,[yte ptr [rax+0]", "add~rax,0", "jmp~FOO"]], [1, 0, 37, 0, 0, 2, 0, 1, 4, 7, 0.05780780780780781, ["cmp     cl, 25h ; '%'", "jz      loc_5940"], ["cmp~cl,0", "jz~FOO"]], [1, 0, 37, 0, 0, 3, 0, 1, 3, 8, 0.0503003003003003, ["cmp     dl, 25h ; '%'", "movzx   ecx, byte ptr [rax+1]", "jz      short loc_5860"], ["cmp~dl,0", "movzx~ecx,[yte ptr [rax+0]", "jz~FOO"]], [1, 0, 37, 1, 0, 3, 1, 1, 5, 7, 0.05818318318318318, ["add     rax, 1", "test    dl, dl", "jnz     short loc_5848"], ["add~rax,0", "test~dl,dl", "jnz~FOO"]], [0, 0, 37, 0, 0, 1, 0, 0, 4, 8, 0.009384384384384385, ["mov     edx, ecx"], ["mov~edx,ecx"]], [1, 0, 37, 0, 0, 2, 0, 1, 5, 6, 0.06756756756756757, ["cmp     cl, 62h ; 'b'", "jnz     short loc_5851"], ["cmp~cl,0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 0, 17, 2, 0.00563063063063063, ["mov     cs:use_abformat, 1", "nop     dword ptr [rax+00h]"], ["mov~<TAG>,0", "nop~[word ptr [rax+0]"]], [0, 0, 37, 0, 0, 2, 1, 1, 2, 6, 0.10960960960960961, ["xor     eax, eax", "jmp     short loc_586E"], ["xor~eax,eax", "jmp~FOO"]], [1, 0, 16, 2, 0, 11, 0, 0, 13, 3, 0.09009009009009009, ["imul    r11, recent, 600h", "lea     rsi, abformat", "mov     [rsp+688h+width], recent", "mov     r14, [rsp+688h+dest]", "mov     rbx, rax", "lea     rbp, [rax+2]", "sub     rbx, fmt", "lea     r15, [rsi+r11]", "mov     recent, r15", "mov     r15, [rsp+688h+var_670]", "nop     dword ptr [rax]"], ["imul~r11,recent,0", "lea~rsi,<TAG>", "mov~<TAG>,recent", "mov~r14,[rsp+0]", "mov~rbx,rax", "lea~rbp,[rax+0]", "sub~rbx,fmt", "lea~r15,<TAG>", "mov~recent,r15", "mov~r15,[rsp+0]", "nop~<TAG>"]]], "func_feature": [7, 15, 32, 4, 38, 56, 1, 165, 0.0906, 6, 18], "succs": [[], [0, 15], [16, 7], [16, 2], [26, 3], [1], [11, 5], [1], [17, 1], [8, 1], [6], [28, 6], [10, 37], [12], [13, 21], [], [23], [9, 14], [24, 1], [1, 18], [26], [23], [12], [9], [25, 19], [28], [27, 36], [31], [35, 22], [32], [34, 29], [33, 30], [36, 31], [32], [33, 4], [1], [4], [19]], "fname": "abformat_init", "n_num": 38}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 3, 0, 0, 1, 0, 1, 1, -1, 0.15000000000000002, ["jl      short loc_5AC0"], ["jl~FOO"]], [0, 0, 5, 0, 0, 3, 0, 1, 0, 1, 0.0, ["mov     rax, [b+48h]", "cmp     [a+48h], rax", "jg      short loc_5AD0"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 2, -1, 0.1, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []]], "func_feature": [0, 0, 3, 0, 6, 5, 0, 11, 0.04167, 0, 0], "succs": [[], [0, 3], [1, 4], [5], [], []], "fname": "strcmp_size", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 3, 0, 0, 1, 0, 1, 1, -1, 0.15000000000000002, ["jl      short loc_5B00"], ["jl~FOO"]], [0, 0, 5, 0, 0, 4, 0, 1, 0, 1, 0.0, ["mov     rdx, [a+48h]", "cmp     [b+48h], rdx", "mov     rax, b", "jg      short loc_5B10"], ["mov~rdx,[a+0]", "cmp~[b+0],rdx", "mov~rax,b", "jg~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 2, -1, 0.1, ["mov     b, [a]; s2", "mov     a, [b]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 3, 0, 6, 5, 0, 12, 0.04167, 0, 0], "succs": [[], [0, 5], [1, 3], [], [], [4]], "fname": "rev_strcmp_size", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[], [0]], "fname": "strcmp_name", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     rax, b", "mov     b, [a]; s2", "mov     a, [b]; s1", "jmp     _strcmp"], ["mov~rax,b", "mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "rev_strcmp_name", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 36, 0, 0, 5, 2, 1, 0, 0, 0.04993252361673414, ["test    rax, rax", "mov     eax, 1", "cmovs   rcx, rax", "test    rcx, rcx", "jnz     short loc_5EBE"], ["test~rax,rax", "mov~eax,0", "cmovs~rcx,rax", "test~rcx,rcx", "jnz~FOO"]], [1, 0, 37, 0, 0, 2, 0, 1, 2, 7, 0.0, ["mov     ecx, 1", "jmp     short loc_5E73"], ["mov~ecx,0", "jmp~FOO"]], [1, 0, 38, 1, 1, 7, 1, 1, 1, 7, 0.002699055330634278, ["mov     rdi, cs:sorted_file; ptr", "call    free", "mov     edx, 18h", "xor     ecx, ecx", "mov     rax, rdx", "mul     rbx", "jo      short loc_5EC3"], ["mov~rdi,<TAG>", "call~FOO", "mov~edx,0", "xor~ecx,ecx", "mov~rax,rdx", "mul~,rbx", "jo~FOO"]], [0, 0, 2, 0, 0, 2, 0, 0, 4, -1, 0.01417004048582996, ["mov     rsi, cs:cwd_n_used; n", "mov     rdi, cs:sorted_file; base"], ["mov~rsi,<TAG>", "mov~rdi,<TAG>"]], [0, 0, 19, 0, 1, 5, 1, 2, 3, 2, 0.23076923076923075, ["lea     rdi, failed_strcoll; env", "call    __setjmp", "test    eax, eax", "mov     ecx, cs:sort_type_0", "jz      loc_5E00"], ["lea~rdi,<TAG>", "call~FOO", "test~eax,eax", "mov~ecx,<TAG>", "jz~FOO"]], [0, 0, 21, 0, 0, 2, 0, 0, 8, 4, 0.0, ["lea     rdx, [r8+rdx+320h]", "mov     [rdi+rax*8], rdx"], ["lea~rdx,[r8+0]", "mov~<TAG>,rdx"]], [1, 0, 22, 1, 0, 5, 0, 0, 7, 4, 0.010796221322537112, ["lea     rsi, [r8+rdx+258h]", "add     rax, 4", "cmp     rbx, rax", "mov     [rdi+rcx*8], rsi", "jbe     short loc_5C8C"], ["lea~rsi,[r8+0]", "add~rax,0", "cmp~rbx,rax", "mov~<TAG>,rsi", "jbe~FOO"]], [1, 0, 8, 0, 0, 5, 1, 1, 10, -1, 0.021592442645074223, ["mov     rdx, r11", "and     rdx, 0FFFFFFFFFFFFFFFEh", "cmp     r11, rdx", "lea     rax, [r9+rdx]", "jz      short loc_5DF4"], ["mov~rdx,r11", "and~rdx,0", "cmp~r11,rdx", "lea~rax,<TAG>", "jz~FOO"]], [5, 0, 10, 2, 0, 13, 0, 0, 9, -1, 0.033738191632928474, ["movdqa  xmm0, xmm1", "add     rax, 1", "add     rdx, 10h", "psllq   xmm0, 1", "paddq   xmm0, xmm1", "psllq   xmm0, 3", "paddq   xmm0, xmm1", "psllq   xmm0, 3", "paddq   xmm0, xmm3", "movaps  xmmword ptr [rdx-10h], xmm0", "paddq   xmm1, xmm2", "cmp     rax, r8", "jb      short loc_5D48"], ["movdqa~xmm0,xmm1", "add~rax,0", "add~rdx,0", "psllq~xmm0,0", "paddq~xmm0,xmm1", "psllq~xmm0,0", "paddq~xmm0,xmm1", "psllq~xmm0,0", "paddq~xmm0,xmm3", "movaps~[mmword ptr [rdx-10h]+0],xmm0", "paddq~xmm1,xmm2", "cmp~rax,r8", "jb~FOO"]], [3, 0, 32, 0, 0, 8, 1, 0, 2, 6, 0.044534412955465584, ["mov     rdi, cs:sorted_file", "lea     rax, [rbx-1]", "mov     r8, cs:cwd_file", "mov     rdx, rdi", "shr     rdx, 3", "and     edx, 1", "cmp     rax, 4", "jbe     loc_5EB0"], ["mov~rdi,<TAG>", "lea~rax,[rbx-1]+0]", "mov~r8,<TAG>", "mov~rdx,rdi", "shr~rdx,0", "and~edx,0", "cmp~rax,0", "jbe~FOO"]], [0, 0, 33, 0, 0, 2, 1, 1, 1, 4, 0.11133603238866396, ["test    rbx, rbx", "jz      loc_5C8C"], ["test~rbx,rbx", "jz~FOO"]], [5, 0, 28, 2, 0, 13, 0, 1, 5, 5, 0.059379217273954114, ["movdqa  xmm0, xmm1", "add     rax, 1", "add     rdx, 10h", "psllq   xmm0, 1", "paddq   xmm0, xmm1", "psllq   xmm0, 3", "paddq   xmm0, xmm1", "psllq   xmm0, 3", "paddq   xmm0, xmm3", "movaps  xmmword ptr [rdx-10h], xmm0", "paddq   xmm1, xmm2", "cmp     rcx, rax", "ja      short loc_5BE0"], ["movdqa~xmm0,xmm1", "add~rax,0", "add~rdx,0", "psllq~xmm0,0", "paddq~xmm0,xmm1", "psllq~xmm0,0", "paddq~xmm0,xmm1", "psllq~xmm0,0", "paddq~xmm0,xmm3", "movaps~[mmword ptr [rdx-10h]+0],xmm0", "paddq~xmm1,xmm2", "cmp~rcx,rax", "ja~FOO"]], [1, 0, 28, 1, 0, 16, 1, 0, 4, 6, 0.04723346828609986, ["lea     rax, [rsi+1]", "mov     [rsp+38h+var_28], r8", "mov     r9, rbx", "mov     [rsp+38h+var_30], rsi", "movq    xmm3, [rsp+38h+var_28]", "sub     r9, rdx", "mov     [rsp+38h+var_38], rax", "lea     rdx, [rdi+rdx*8]", "movq    xmm1, [rsp+38h+var_30]", "mov     rcx, r9", "punpcklqdq xmm3, xmm3", "movhps  xmm1, [rsp+38h+var_38]", "movdqa  xmm2, cs:xmmword_20CE0", "shr     rcx, 1", "xor     eax, eax", "xchg    ax, ax"], ["lea~rax,[rsi+0]", "mov~[rsp+0],r8", "mov~r9,rbx", "mov~[rsp+0],rsi", "movq~xmm3,[rsp+0]", "sub~r9,rdx", "mov~<TAG>,rax", "lea~rdx,<TAG>", "movq~xmm1,[rsp+0]", "mov~rcx,r9", "punpcklqdq~xmm3,xmm3", "movhps~xmm1,<TAG>", "movdqa~xmm2,<TAG>", "shr~rcx,0", "xor~eax,eax", "xchg~ax,ax"]], [1, 0, 20, 0, 0, 2, 0, 1, 2, 3, 0.242914979757085, ["cmp     cs:sort_type_0, 0FFFFFFFFh", "jz      loc_5E4C"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 26, 0, 0, 5, 1, 1, 6, 4, 0.07017543859649122, ["mov     rdx, r9", "and     rdx, 0FFFFFFFFFFFFFFFEh", "cmp     r9, rdx", "lea     rax, [rsi+rdx]", "jz      short loc_5C8C"], ["mov~rdx,r9", "and~rdx,0", "cmp~r9,rdx", "lea~rax,<TAG>", "jz~FOO"]], [1, 0, 25, 1, 0, 8, 0, 0, 4, 4, 0.06342780026990553, ["lea     rdx, [rax+rax*4]", "lea     rdx, [rdx+rdx*4]", "shl     rdx, 3", "lea     rcx, [r8+rdx]", "mov     [rdi+rax*8], rcx", "lea     rcx, [rax+1]", "cmp     rbx, rcx", "jbe     short loc_5C8C"], ["lea~rdx,<TAG>", "lea~rdx,<TAG>", "shl~rdx,0", "lea~rcx,<TAG>", "mov~<TAG>,rcx", "lea~rcx,[rax+0]", "cmp~rbx,rcx", "jbe~FOO"]], [0, 0, 24, 0, 0, 5, 0, 0, 5, 4, 0.02834008097165992, ["lea     rsi, [r8+rdx+0C8h]", "mov     [rdi+rcx*8], rsi", "lea     rcx, [rax+2]", "cmp     rbx, rcx", "jbe     short loc_5C8C"], ["lea~rsi,[r8+0]", "mov~<TAG>,rsi", "lea~rcx,[rax+0]", "cmp~rbx,rcx", "jbe~FOO"]], [0, 0, 23, 0, 0, 5, 0, 0, 6, 4, 0.020242914979757085, ["lea     rsi, [r8+rdx+190h]", "mov     [rdi+rcx*8], rsi", "lea     rcx, [rax+3]", "cmp     rbx, rcx", "jbe     short loc_5C8C"], ["lea~rsi,[r8+0]", "mov~<TAG>,rsi", "lea~rcx,[rax+0]", "cmp~rbx,rcx", "jbe~FOO"]], [0, 0, 30, 0, 0, 3, 2, 1, 3, 7, 0.018893387314439944, ["xor     esi, esi", "test    rdx, rdx", "jz      short loc_5B9E"], ["xor~esi,esi", "test~rdx,rdx", "jz~FOO"]], [0, 0, 29, 0, 0, 2, 0, 0, 4, 7, 0.0, ["mov     [rdi], r8", "mov     rsi, rdx"], ["mov~<TAG>,r8", "mov~rsi,rdx"]], [1, 0, 7, 1, 0, 8, 0, 0, 8, -1, 0.08232118758434548, ["lea     rdx, [rax+rax*4]", "lea     rdx, [rdx+rdx*4]", "shl     rdx, 3", "lea     r8, [r10+rdx]", "mov     [rdi+rax*8], r8", "lea     r8, [rax+1]", "cmp     r8, rsi", "jnb     short loc_5DF4"], ["lea~rdx,<TAG>", "lea~rdx,<TAG>", "shl~rdx,0", "lea~r8,<TAG>", "mov~<TAG>,r8", "lea~r8,[rax+0]", "cmp~r8,rsi", "jnb~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 7, -1, 0.0796221322537112, ["xor     eax, eax", "jmp     loc_5D8C"], ["xor~eax,eax", "jmp~FOO"]], [1, 0, 34, 1, 1, 8, 0, 2, 3, 5, 0.06882591093117409, ["lea     rdi, [rbx+rbx*2]", "shl     rdi, 3; n", "call    xmalloc", "mov     rbx, cs:cwd_n_used", "mov     cs:sorted_file, rax", "lea     rax, [rbx+rbx*2]", "mov     cs:sorted_file_alloc, rax", "jmp     loc_5B62"], ["lea~rdi,<TAG>", "shl~rdi,0", "call~FOO", "mov~rbx,<TAG>", "mov~<TAG>,rax", "lea~rax,<TAG>", "mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 26, 0, 0, 2, 1, 1, 3, 5, 0.03778677462887989, ["xor     eax, eax", "jmp     loc_5C24"], ["xor~eax,eax", "jmp~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 4, 1, 0.20242914979757085, ["cmp     ecx, 3", "jz      loc_5ECA"], ["cmp~ecx,0", "jz~FOO"]], [3, 0, 14, 0, 0, 7, 1, 0, 6, -1, 0.1632928475033738, ["mov     rdx, rdi", "lea     rax, [rsi-1]", "mov     r10, cs:cwd_file", "shr     rdx, 3", "and     edx, 1", "cmp     rax, 4", "jbe     loc_5EB7"], ["mov~rdx,rdi", "lea~rax,[rsi-1]+0]", "mov~r10,<TAG>", "shr~rdx,0", "and~edx,0", "cmp~rax,0", "jbe~FOO"]], [0, 0, 6, 0, 0, 5, 0, 0, 9, -1, 0.06072874493927125, ["lea     r9, [r10+rdx+0C8h]", "mov     [rdi+r8*8], r9", "lea     r8, [rax+2]", "cmp     r8, rsi", "jnb     short loc_5DF4"], ["lea~r9,[r10+0]", "mov~<TAG>,r9", "lea~r8,[rax+0]", "cmp~r8,rsi", "jnb~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 10, 1, 0, 16, 1, 0, 8, -1, 0.044534412955465584, ["lea     rax, [r9+1]", "mov     [rsp+38h+var_10], r10", "mov     r11, rsi", "mov     [rsp+38h+var_18], r9", "movq    xmm3, [rsp+38h+var_10]", "sub     r11, rdx", "mov     [rsp+38h+var_20], rax", "lea     rdx, [rdi+rdx*8]", "movq    xmm1, [rsp+38h+var_18]", "mov     r8, r11", "punpcklqdq xmm3, xmm3", "movhps  xmm1, [rsp+38h+var_20]", "movdqa  xmm2, cs:xmmword_20CE0", "shr     r8, 1", "xor     eax, eax", "nop     word ptr [rax+rax+00h]"], ["lea~rax,[r9+0]", "mov~[rsp+0],r10", "mov~r11,rsi", "mov~[rsp+0],r9", "movq~xmm3,[rsp+0]", "sub~r11,rdx", "mov~[rsp+0],rax", "lea~rdx,<TAG>", "movq~xmm1,[rsp+0]", "mov~r8,r11", "punpcklqdq~xmm3,xmm3", "movhps~xmm1,[rsp+0]", "movdqa~xmm2,<TAG>", "shr~r8,0", "xor~eax,eax", "nop~[ord ptr [rax+0]"]], [0, 0, 12, 0, 0, 3, 2, 1, 7, -1, 0.06207827260458839, ["xor     r9d, r9d", "test    rdx, rdx", "jz      short loc_5D00"], ["xor~r9d,r9d", "test~rdx,rdx", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 0, 0, 8, -1, 0.0, ["mov     [rdi], r10", "mov     r9, rdx"], ["mov~<TAG>,r10", "mov~r9,rdx"]], [2, 0, 1, 1, 1, 13, 0, 1, 5, -1, 0.01147098515519568, ["cmp     ecx, 4", "mov     edx, 0", "cmovz   edx, cs:time_type_0", "cdqe", "movzx   r8d, cs:directories_first", "add     edx, ecx", "lea     rdx, [rax+rdx*2]", "movzx   eax, cs:sort_reverse", "lea     rax, [rax+rdx*2]", "lea     rdx, [r8+rax*2]", "lea     rax, sort_functions", "mov     rdx, [rax+rdx*8]; cmp", "call    mpsort"], ["cmp~ecx,0", "mov~edx,0", "cmovz~edx,<TAG>", "cdqe~", "movzx~r8d,<TAG>", "add~edx,ecx", "lea~rdx,<TAG>", "movzx~eax,<TAG>", "lea~rax,<TAG>", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~rdx,<TAG>", "call~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 6, -1, 0.018893387314439944, ["mov     eax, 1", "jmp     short loc_5E0E"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 15, 0, 0, 4, 1, 1, 5, -1, 0.18556005398110662, ["mov     rsi, cs:cwd_n_used", "mov     rdi, cs:sorted_file", "test    rsi, rsi", "jz      loc_5DF4"], ["mov~rsi,<TAG>", "mov~rdi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [0, 0, 5, 0, 0, 5, 0, 0, 10, -1, 0.04183535762483131, ["lea     r9, [r10+rdx+190h]", "mov     [rdi+r8*8], r9", "lea     r8, [rax+3]", "cmp     r8, rsi", "jnb     short loc_5DF4"], ["lea~r9,[r10+0]", "mov~<TAG>,r9", "lea~r8,[rax+0]", "cmp~r8,rsi", "jnb~FOO"]], [2, 0, 39, 2, 0, 8, 0, 1, 0, 5, 0.0, ["push    rbx", "sub     rsp, 30h", "mov     rbx, cs:cwd_n_used", "mov     rax, rbx", "shr     rax, 1", "add     rax, rbx", "cmp     rax, cs:sorted_file_alloc", "ja      loc_5E58"], ["push~rbx", "sub~rsp,0", "mov~rbx,<TAG>", "mov~rax,rbx", "shr~rax,0", "add~rax,rbx", "cmp~rax,<TAG>", "ja~FOO"]], [0, 1, 0, 0, 1, 5, 0, 1, 5, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___10745; \"sort_files\"", "lea     rsi, file; \"src/ls.c\"", "lea     rdi, aSortTypeSortVe; \"sort_type != sort_version\"", "mov     edx, 0EEAh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,<STR>", "call~FOO"]], [1, 0, 4, 1, 0, 5, 0, 0, 11, -1, 0.021592442645074223, ["lea     r9, [r10+rdx+258h]", "add     rax, 4", "cmp     rsi, rax", "mov     [rdi+r8*8], r9", "jbe     short loc_5DF4"], ["lea~r9,[r10+0]", "add~rax,0", "cmp~rsi,rax", "mov~<TAG>,r9", "jbe~FOO"]], [1, 0, 0, 1, 0, 3, 0, 0, 3, -1, 0.0, ["add     rsp, 30h", "pop     rbx", "retn"], ["add~rsp,0", "pop~rbx", "retn"]], [0, 0, 3, 0, 0, 2, 0, 0, 12, -1, 0.0, ["lea     rdx, [r10+rdx+320h]", "mov     [rdi+rax*8], rdx"], ["lea~rdx,[r10+0]", "mov~<TAG>,rdx"]]], "func_feature": [6, 18, 23, 6, 40, 61, 3, 218, 0.05378, 14, 16], "succs": [[27, 22], [0], [0, 1], [31], [24, 3], [13], [5, 13], [32, 20], [8, 7], [18, 23], [9, 13], [11, 14], [11], [4, 38], [13, 15], [16, 13], [17, 13], [13, 6], [19, 12], [12], [32, 26], [20], [10], [15], [33, 36], [21, 29], [32, 34], [], [8], [28, 30], [28], [38], [31], [32, 25], [32, 37], [10, 2], [], [32, 39], [], [32]], "fname": "sort_files", "n_num": 40}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     rax, b", "mov     b, [a]; s2", "mov     a, [b]; s1", "jmp     filevercmp"], ["mov~rax,b", "mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "rev_xstrcoll_version", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     filevercmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "xstrcoll_version", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 7, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     [__o1+18h], rcx", "jmp     short loc_5F5F"], ["mov~[__o1+0],rcx", "jmp~FOO"]], [0, 0, 8, 3, 0, 12, 1, 1, 2, 4, 0.20909090909090908, ["mov     rdx, [__o1+30h]", "mov     rcx, [__o1+20h]", "add     rax, rdx", "not     rdx", "mov     r8, rcx", "and     rax, rdx", "mov     rdx, [__o1+8]", "mov     [__o1+18h], rax", "sub     r8, rdx", "sub     rax, rdx", "cmp     rax, r8", "ja      short loc_5FBC"], ["mov~rdx,[__o1+0]", "mov~rcx,[__o1+0]", "add~rax,rdx", "not~rdx", "mov~r8,rcx", "and~rax,rdx", "mov~rdx,[__o1+0]", "mov~[__o1+0],rax", "sub~r8,rdx", "sub~rax,rdx", "cmp~rax,r8", "ja~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 7, -1, 0.0, [], []], [1, 0, 1, 0, 0, 5, 0, 1, 6, 0, 0.07272727272727272, ["pop     rbx", "pop     rbp", "pop     r12", "mov     esi, 0Ah; int", "jmp     ___overflow"], ["pop~rbx", "pop~rbp", "pop~r12", "mov~esi,0", "jmp~FOO"]], [1, 0, 9, 0, 0, 2, 1, 1, 2, 5, 0.0, ["or      byte ptr [__o1+50h], 2", "jmp     loc_5F38"], ["or~[yte ptr [__o1+0],0", "jmp~FOO"]], [0, 0, 10, 0, 0, 2, 0, 1, 1, 5, 0.08181818181818182, ["cmp     rax, __value", "jz      loc_5FC2"], ["cmp~rax,__value", "jz~FOO"]], [1, 0, 11, 1, 0, 10, 1, 1, 0, 6, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rax, [__o+18h]", "mov     rbx, [__o+10h]", "mov     rbp, rax", "sub     rbp, rbx", "shr     rbp, 3", "test    n_pos, n_pos", "jz      loc_5FB7"], ["push~r12", "push~rbp", "push~rbx", "mov~rax,[__o+0]", "mov~rbx,[__o+0]", "mov~rbp,rax", "sub~rbp,rbx", "shr~rbp,0", "test~n_pos,n_pos", "jz~FOO"]], [0, 0, 4, 0, 0, 4, 0, 0, 5, 1, 0.24545454545454545, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_5FCB"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [2, 0, 6, 1, 1, 8, 1, 2, 4, 2, 0.2636363636363636, ["mov     rdx, [rbx]", "xor     eax, eax", "mov     rsi, rbp", "mov     edi, 1", "add     rbx, 8", "call    ___printf_chk", "cmp     r12, rbx", "jnz     short loc_5F80"], ["mov~rdx,<TAG>", "xor~eax,eax", "mov~rsi,rbp", "mov~edi,0", "add~rbx,0", "call~FOO", "cmp~r12,rbx", "jnz~FOO"]], [1, 0, 1, 0, 0, 3, 0, 0, 6, -1, 0.06363636363636363, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [0, 0, 6, 0, 1, 7, 0, 1, 3, 3, 0.2636363636363636, ["mov     rax, [__o1+18h]", "lea     r12, [__value+n_pos*8]", "lea     n_pos, aLu_0; \" %lu\"", "mov     [__o1+10h], rax", "mov     __o1, cs:stdout@@GLIBC_2_2_5; stream", "call    _fputs_unlocked", "xchg    ax, ax"], ["mov~rax,[__o1+0]", "lea~r12,<TAG>", "lea~n_pos,<TAG>", "mov~[__o1+0],rax", "mov~__o1,<TAG>", "call~FOO", "xchg~ax,ax"]], [0, 0, 0, 0, 0, 4, 0, 0, 1, -1, 0.0, ["pop     rbx", "pop     rbp", "pop     r12", "retn"], ["pop~rbx", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [2, 4, 9, 0, 12, 15, 2, 59, 0.1, 2, 5], "succs": [[10], [0, 10], [], [2], [1], [1, 4], [11, 5], [9, 3], [8, 7], [11], [8], []], "fname": "dired_dump_obstack", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     eax, cs:interrupt_signal", "test    eax, eax", "jnz     short locret_5FF9"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 1, 1, 0, 3, 0, 0, 0, 1, 0.0, ["mov     eax, cs:stop_signal_count", "add     eax, 1", "mov     cs:stop_signal_count, eax"], ["mov~eax,<TAG>", "add~eax,0", "mov~<TAG>,eax"]]], "func_feature": [0, 1, 1, 0, 3, 3, 0, 7, 0.0, 2, 1], "succs": [[1, 2], [], [1]], "fname": "stophandler", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 6, 0, 0, 2, 0, 1, 0, 0, 0.022435897435897436, ["cmp     edx, 4000h", "jz      short loc_605E"], ["cmp~edx,0", "jz~FOO"]], [2, 0, 8, 0, 0, 4, 1, 1, 3, 4, 0.022435897435897436, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_6034"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 3, 0, 0, 1, 0, 1, 3, 1, 0.14423076923076922, ["jl      short loc_603C"], ["jl~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 3, 3, 0.0641025641025641, ["cmp     edx, 4000h", "jz      short loc_6082"], ["cmp~edx,0", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 1, 4, 0.028846153846153844, ["cmp     ecx, 9", "jz      short loc_6048"], ["cmp~ecx,0", "jz~FOO"]], [3, 0, 13, 0, 0, 9, 1, 1, 0, 4, 0.0, ["mov     edx, [b+0A8h]", "mov     ecx, [a+0A8h]", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      eax, edx", "cmp     ecx, 3", "jz      short loc_6048"], ["mov~edx,[b+0]", "mov~ecx,[a+0]", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~eax,edx", "cmp~ecx,0", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 3, -1, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 5, 0, 0, 3, 0, 1, 2, 2, 0.1955128205128205, ["mov     rax, [b+48h]", "cmp     [a+48h], rax", "jg      short loc_605E"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [2, 0, 6, 0, 0, 4, 1, 1, 2, 3, 0.009615384615384616, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_6082"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 1, 3, 0.08012820512820512, ["test    al, al", "jnz     short loc_6082"], ["test~al,al", "jnz~FOO"]], [1, 0, 9, 0, 0, 4, 2, 1, 2, 4, 0.04807692307692307, ["mov     edx, [a+0ACh]", "and     edx, 0F000h", "test    al, al", "jz      short loc_6068"], ["mov~edx,[a+0]", "and~edx,0", "test~al,al", "jz~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 4, 0, 0.0641025641025641, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 5, -1, 0.0, [], []]], "func_feature": [0, 6, 11, 0, 14, 21, 0, 40, 0.04853, 0, 0], "succs": [[8, 7], [0, 4], [], [2, 12], [8, 2], [10, 11], [10, 5], [], [3, 7], [8, 7], [8, 9], [1, 4], [13], []], "fname": "strcmp_df_size", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[3, 0, 13, 0, 0, 10, 1, 1, 0, 0, 0.0, ["mov     rdx, b", "mov     esi, [a+0A8h]", "mov     ecx, [b+0A8h]", "cmp     ecx, 3", "setz    al", "cmp     ecx, 9", "setz    cl", "or      eax, ecx", "cmp     esi, 3", "jz      short loc_60E8"], ["mov~rdx,b", "mov~esi,[a+0]", "mov~ecx,[b+0]", "cmp~ecx,0", "setz~al", "cmp~ecx,0", "setz~cl", "or~eax,ecx", "cmp~esi,0", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 0, 3, 0.022435897435897436, ["cmp     ecx, 4000h", "jz      short loc_60FE"], ["cmp~ecx,0", "jz~FOO"]], [2, 0, 8, 0, 0, 4, 1, 1, 0, 4, 0.022435897435897436, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_60D7"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 0, -1, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 5, 0, 0, 3, 0, 1, 0, 2, 0.1955128205128205, ["mov     rax, [a+48h]", "cmp     [b+48h], rax", "jg      short loc_60FE"], ["mov~rax,[a+0]", "cmp~[b+0],rax", "jg~FOO"]], [2, 0, 6, 0, 0, 4, 1, 1, 0, 3, 0.009615384615384616, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_6122"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 0, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 3, 0, 0, 1, 0, 1, 0, 1, 0.14423076923076922, ["jl      short loc_60DF"], ["jl~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 0, 3, 0.0641025641025641, ["cmp     ecx, 4000h", "jz      short loc_6122"], ["cmp~ecx,0", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 0, 4, 0.028846153846153844, ["cmp     esi, 9", "jz      short loc_60E8"], ["cmp~esi,0", "jz~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 0, 3, 0.08012820512820512, ["test    al, al", "jnz     short loc_6122"], ["test~al,al", "jnz~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0641025641025641, ["mov     rsi, [a]; s2", "mov     a, [b]; s1", "jmp     _strcmp"], ["mov~rsi,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [1, 0, 9, 0, 0, 4, 2, 1, 0, 4, 0.04807692307692307, ["mov     ecx, [a+0ACh]", "and     ecx, 0F000h", "test    al, al", "jz      short loc_6108"], ["mov~ecx,[a+0]", "and~ecx,0", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0.0, [], []]], "func_feature": [0, 6, 11, 0, 14, 21, 0, 41, 0.04853, 0, 0], "succs": [[9, 10], [3, 4], [8, 1], [], [3, 7], [3, 4], [], [11, 6], [4, 6], [10, 12], [4, 5], [13], [8, 2], []], "fname": "rev_strcmp_df_size", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.02727272727272727, ["cmp     edx, 4000h", "jz      short loc_619E"], ["cmp~edx,0", "jz~FOO"]], [2, 0, 6, 0, 0, 4, 1, 1, 3, 2, 0.03636363636363636, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_6174"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 1, 0.06363636363636363, ["cmp     edx, 4000h", "jz      short loc_61C2"], ["cmp~edx,0", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 1, 2, 0.045454545454545456, ["cmp     ecx, 9", "jz      short loc_6188"], ["cmp~ecx,0", "jz~FOO"]], [3, 0, 11, 0, 0, 9, 1, 1, 0, 2, 0.0, ["mov     edx, [b+0A8h]", "mov     ecx, [a+0A8h]", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      eax, edx", "cmp     ecx, 3", "jz      short loc_6188"], ["mov~edx,[b+0]", "mov~ecx,[a+0]", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~eax,edx", "cmp~ecx,0", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 3, -1, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [2, 0, 3, 0, 0, 4, 1, 1, 2, 1, 0.02727272727272727, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_61C2"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 2, 0, 0.07272727272727272, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 1, 1, 0.07272727272727272, ["test    al, al", "jnz     short loc_61C2"], ["test~al,al", "jnz~FOO"]], [1, 0, 7, 0, 0, 4, 2, 1, 2, 2, 0.07272727272727272, ["mov     edx, [a+0ACh]", "and     edx, 0F000h", "test    al, al", "jz      short loc_61A8"], ["mov~edx,[a+0]", "and~edx,0", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []]], "func_feature": [0, 6, 9, 0, 12, 17, 0, 36, 0.03485, 0, 0], "succs": [[8, 6], [0, 3], [], [8, 2], [9, 10], [9, 4], [], [8, 6], [11], [8, 7], [1, 3], []], "fname": "strcmp_df_name", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.02727272727272727, ["cmp     ecx, 4000h", "jz      short loc_622E"], ["cmp~ecx,0", "jz~FOO"]], [2, 0, 6, 0, 0, 4, 1, 1, 3, 2, 0.03636363636363636, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_6207"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 7, 0, 0, 4, 2, 1, 2, 2, 0.07272727272727272, ["mov     ecx, [a+0ACh]", "and     ecx, 0F000h", "test    al, al", "jz      short loc_6238"], ["mov~ecx,[a+0]", "and~ecx,0", "test~al,al", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 1, 2, 0.045454545454545456, ["cmp     esi, 9", "jz      short loc_6218"], ["cmp~esi,0", "jz~FOO"]], [2, 0, 3, 0, 0, 4, 1, 1, 2, 1, 0.02727272727272727, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_6252"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 1, 1, 0.07272727272727272, ["test    al, al", "jnz     short loc_6252"], ["test~al,al", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 1, 0.06363636363636363, ["cmp     ecx, 4000h", "jz      short loc_6252"], ["cmp~ecx,0", "jz~FOO"]], [3, 0, 11, 0, 0, 10, 1, 1, 0, 2, 0.0, ["mov     rdx, b", "mov     esi, [a+0A8h]", "mov     ecx, [b+0A8h]", "cmp     ecx, 3", "setz    al", "cmp     ecx, 9", "setz    cl", "or      eax, ecx", "cmp     esi, 3", "jz      short loc_6218"], ["mov~rdx,b", "mov~esi,[a+0]", "mov~ecx,[b+0]", "cmp~ecx,0", "setz~al", "cmp~ecx,0", "setz~cl", "or~eax,ecx", "cmp~esi,0", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 3, -1, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 1, 0, 0, 3, 0, 1, 2, 0, 0.07272727272727272, ["mov     rsi, [a]; s2", "mov     a, [b]; s1", "jmp     _strcmp"], ["mov~rsi,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []]], "func_feature": [0, 6, 9, 0, 12, 17, 0, 37, 0.03485, 0, 0], "succs": [[8, 10], [0, 6], [1, 6], [2, 5], [8, 10], [10, 4], [9, 10], [3, 5], [], [], [11], []], "fname": "rev_strcmp_df_name", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[3, 0, 11, 0, 0, 10, 1, 1, 0, 0, 0.0, ["mov     rdx, b", "mov     esi, [a+0A8h]", "mov     ecx, [b+0A8h]", "cmp     ecx, 3", "setz    al", "cmp     ecx, 9", "setz    cl", "or      eax, ecx", "cmp     esi, 3", "jz      short loc_62A8"], ["mov~rdx,b", "mov~esi,[a+0]", "mov~ecx,[b+0]", "cmp~ecx,0", "setz~al", "cmp~ecx,0", "setz~cl", "or~eax,ecx", "cmp~esi,0", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 0, 1, 0.02727272727272727, ["cmp     ecx, 4000h", "jz      short loc_62BE"], ["cmp~ecx,0", "jz~FOO"]], [2, 0, 6, 0, 0, 4, 1, 1, 0, 2, 0.03636363636363636, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_6297"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 0, -1, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [2, 0, 3, 0, 0, 4, 1, 1, 0, 1, 0.02727272727272727, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_62E2"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 0, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [1, 0, 3, 0, 0, 2, 0, 1, 0, 1, 0.06363636363636363, ["cmp     ecx, 4000h", "jz      short loc_62E2"], ["cmp~ecx,0", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 0, 2, 0.045454545454545456, ["cmp     esi, 9", "jz      short loc_62A8"], ["cmp~esi,0", "jz~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.07272727272727272, ["mov     rsi, [a]; s2", "mov     a, [b]; s1", "jmp     filevercmp"], ["mov~rsi,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 0, 1, 0.07272727272727272, ["test    al, al", "jnz     short loc_62E2"], ["test~al,al", "jnz~FOO"]], [1, 0, 7, 0, 0, 4, 2, 1, 0, 2, 0.07272727272727272, ["mov     ecx, [a+0ACh]", "and     ecx, 0F000h", "test    al, al", "jz      short loc_62C8"], ["mov~ecx,[a+0]", "and~ecx,0", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0.0, [], []]], "func_feature": [0, 6, 9, 0, 12, 17, 0, 37, 0.03485, 0, 0], "succs": [[9, 7], [8, 3], [1, 6], [], [8, 3], [], [8, 5], [9, 10], [11], [8, 4], [2, 6], []], "fname": "rev_xstrcoll_df_version", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 7, 0, 0, 4, 2, 1, 0, 0, 0.07272727272727272, ["mov     edx, [a+0ACh]", "and     edx, 0F000h", "test    al, al", "jz      short loc_6358"], ["mov~edx,[a+0]", "and~edx,0", "test~al,al", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 1, 2, 0.045454545454545456, ["cmp     ecx, 9", "jz      short loc_6338"], ["cmp~ecx,0", "jz~FOO"]], [2, 0, 6, 0, 0, 4, 1, 1, 3, 2, 0.03636363636363636, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_6324"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 1, 0.06363636363636363, ["cmp     edx, 4000h", "jz      short loc_6372"], ["cmp~edx,0", "jz~FOO"]], [2, 0, 3, 0, 0, 4, 1, 1, 2, 1, 0.02727272727272727, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_6372"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 1, 1, 0.07272727272727272, ["test    al, al", "jnz     short loc_6372"], ["test~al,al", "jnz~FOO"]], [3, 0, 11, 0, 0, 9, 1, 1, 0, 2, 0.0, ["mov     edx, [b+0A8h]", "mov     ecx, [a+0A8h]", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      eax, edx", "cmp     ecx, 3", "jz      short loc_6338"], ["mov~edx,[b+0]", "mov~ecx,[a+0]", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~eax,edx", "cmp~ecx,0", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, 1, 0.02727272727272727, ["cmp     edx, 4000h", "jz      short loc_634E"], ["cmp~edx,0", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [1, 0, 0, 0, 0, 2, 0, 0, 3, -1, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 1, 0, 0, 3, 0, 1, 2, 0, 0.07272727272727272, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     filevercmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []]], "func_feature": [0, 6, 9, 0, 12, 17, 0, 36, 0.03485, 0, 0], "succs": [[2, 3], [0, 5], [3, 7], [8, 10], [9, 10], [10, 4], [1, 5], [9, 10], [], [], [11], []], "fname": "xstrcoll_df_version", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 3, 0, 0.11666666666666667, ["mov     rax, [rsp+0D8h+var_40]", "xor     rax, fs:28h", "jnz     loc_6520"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 8, 0, 0.1125, ["jmp     loc_63EB"], ["jmp~FOO"]], [1, 0, 7, 1, 0, 3, 0, 1, 7, 0, 0.14166666666666666, ["add     rbx, 4", "cmp     rbx, rbp", "jnz     short loc_64E0"], ["add~rbx,0", "cmp~rbx,rbp", "jnz~FOO"]], [1, 0, 11, 0, 1, 7, 1, 2, 3, 0, 0.11666666666666667, ["mov     r14d, [rbp+0]", "xor     esi, esi; act", "mov     rdx, r13; oact", "mov     edi, r14d; sig", "call    _sigaction", "cmp     qword ptr [rsp+0D8h+act.__sigaction_handler], 1", "jz      short loc_6453"], ["mov~r14d,[rbp+0]", "xor~esi,esi", "mov~rdx,r13", "mov~edi,r14d", "call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 11, 1, 0, 3, 0, 1, 4, 0, 0.15833333333333333, ["add     rbp, 4", "cmp     rbp, r12", "jnz     short loc_6430"], ["add~rbp,0", "cmp~rbp,r12", "jnz~FOO"]], [0, 0, 11, 0, 1, 6, 0, 1, 2, 0, 0.07916666666666666, ["lea     r15, caught_signals", "mov     init, r13; set", "mov     rbp, rbx", "mov     r13, rsp", "call    _sigemptyset", "nop     dword ptr [rax]"], ["lea~r15,<TAG>", "mov~init,r13", "mov~rbp,rbx", "mov~r13,rsp", "call~FOO", "nop~<TAG>"]], [1, 0, 6, 1, 0, 3, 0, 1, 2, 0, 0.0125, ["add     rbx, 4", "cmp     rbx, r12", "jz      short loc_63EB"], ["add~rbx,0", "cmp~rbx,r12", "jz~FOO"]], [0, 0, 6, 0, 1, 6, 1, 2, 1, 0, 0.029166666666666667, ["mov     ebp, [rbx]", "mov     rdi, r13; set", "mov     esi, ebp; signo", "call    _sigismember", "test    eax, eax", "jz      short loc_63C0"], ["mov~ebp,<TAG>", "mov~rdi,r13", "mov~esi,ebp", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 6, 1, 1, 6, 1, 2, 2, 0, 0.0125, ["xor     esi, esi; handler", "mov     edi, ebp; sig", "add     rbx, 4", "call    _signal", "cmp     rbx, r12", "jnz     short loc_63C9"], ["xor~esi,esi", "mov~edi,ebp", "add~rbx,0", "call~FOO", "cmp~rbx,r12", "jnz~FOO"]], [0, 0, 12, 0, 0, 1, 0, 1, 1, 0, 0.0375, ["jmp     short loc_6418"], ["jmp~FOO"]], [0, 0, 11, 0, 1, 3, 0, 1, 4, 0, 0.0, ["mov     esi, r14d; signo", "mov     rdi, r15; set", "call    _sigaddset"], ["mov~esi,r14d", "mov~rdi,r15", "call~FOO"]], [1, 0, 7, 0, 1, 8, 1, 1, 7, 0, 0.0, ["lea     rax, sighandler", "cmp     r14d, 14h", "mov     rsi, r13; act", "mov     edi, r14d; sig", "cmovz   rax, r15", "xor     edx, edx; oact", "mov     qword ptr [rsp+0D8h+act.__sigaction_handler], rax", "call    _sigaction"], ["lea~rax,<TAG>", "cmp~r14d,0", "mov~rsi,r13", "mov~edi,r14d", "cmovz~rax,r15", "xor~edx,edx", "mov~<TAG>,rax", "call~FOO"]], [0, 0, 7, 0, 1, 6, 1, 2, 6, 0, 0.16666666666666666, ["mov     r14d, [rbx]", "mov     rdi, r12; set", "mov     esi, r14d; signo", "call    _sigismember", "test    eax, eax", "jz      short loc_6512"], ["mov~r14d,<TAG>", "mov~rdi,r12", "mov~esi,r14d", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 7, 0, 0, 20, 0, 0, 5, 0, 0.1625, ["movdqa  xmm0, xmmword ptr cs:caught_signals.__val", "lea     r12, caught_signals", "lea     r15, stophandler", "mov     [rsp+0D8h+act.sa_flags], 10000000h", "movups  xmmword ptr [rsp+0D8h+act.sa_mask.__val], xmm0", "movdqa  xmm0, xmmword ptr cs:caught_signals.__val+10h", "movups  xmmword ptr [rsp+0D8h+act.sa_mask.__val+10h], xmm0", "movdqa  xmm0, xmmword ptr cs:caught_signals.__val+20h", "movups  xmmword ptr [rsp+0D8h+act.sa_mask.__val+20h], xmm0", "movdqa  xmm0, xmmword ptr cs:caught_signals.__val+30h", "movups  xmmword ptr [rsp+0D8h+act.sa_mask.__val+30h], xmm0", "movdqa  xmm0, xmmword ptr cs:caught_signals.__val+40h", "movups  xmmword ptr [rsp+0D8h+act.sa_mask.__val+40h], xmm0", "movdqa  xmm0, xmmword ptr cs:caught_signals.__val+50h", "movups  xmmword ptr [rsp+0D8h+act.sa_mask.__val+50h], xmm0", "movdqa  xmm0, xmmword ptr cs:caught_signals.__val+60h", "movups  xmmword ptr [rsp+0D8h+act.sa_mask.__val+60h], xmm0", "movdqa  xmm0, xmmword ptr cs:caught_signals.__val+70h", "movups  xmmword ptr [rsp+0D8h+act.sa_mask.__val+70h], xmm0", "nop     dword ptr [rax]"], ["movdqa~xmm0,<TAG>", "lea~r12,<TAG>", "lea~r15,<TAG>", "mov~[rsp+0],0", "movups~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "nop~<TAG>"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, 0, 0.0, ["add     rsp, 0A8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 16, 1, 0, 15, 2, 1, 0, 0, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "lea     r13, caught_signals", "push    rbp", "push    rbx", "lea     rbx, sig_9937", "sub     rsp, 0A8h", "lea     r12, [rbx+30h]", "mov     rax, fs:28h", "mov     [rsp+0D8h+var_40], rax", "xor     eax, eax", "test    dil, dil", "jz      short loc_63C9"], ["push~r15", "push~r14", "push~r13", "push~r12", "lea~r13,<TAG>", "push~rbp", "push~rbx", "lea~rbx,<TAG>", "sub~rsp,0", "lea~r12,[rbx+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~dil,dil", "jz~FOO"]]], "func_feature": [8, 8, 19, 1, 17, 24, 2, 100, 0.0674, 12, 6], "succs": [[], [0, 15], [1], [2, 13], [11, 5], [4, 14], [4], [8, 1], [9, 7], [8, 1], [6], [5], [3], [3, 12], [13], [], [8, 10]], "fname": "signal_setup", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[2, 0, 4, 0, 1, 4, 0, 2, 0, 0, 0.07142857142857142, ["mov     edi, 1; init", "call    signal_setup", "cmp     cs:stru_227080.string, 0", "jnz     short loc_657F"], ["mov~edi,0", "call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 6, 0, 1, 5, 1, 1, 1, 2, 0.09523809523809523, ["mov     edi, 1; fd", "mov     cs:used_color, 1", "call    _tcgetpgrp", "test    eax, eax", "jns     short loc_6590"], ["mov~edi,0", "mov~<TAG>,0", "call~FOO", "test~eax,eax", "jns~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [1, 0, 1, 0, 0, 6, 0, 1, 1, -1, 0.14285714285714285, ["mov     rdi, [ind+8]; ptr", "mov     rsi, [ind]; size", "mov     edx, 1; n", "pop     ind", "mov     rcx, cs:stdout@@GLIBC_2_2_5; stream", "jmp     _fwrite_unlocked"], ["mov~rdi,[ind+0]", "mov~rsi,<TAG>", "mov~edx,0", "pop~ind", "mov~rcx,<TAG>", "jmp~FOO"]], [0, 0, 2, 0, 3, 7, 0, 4, 3, 0, 0.07142857142857142, ["lea     rdi, color_indicator; ind", "call    put_indicator", "lea     rdi, stru_227090; ind", "call    put_indicator", "lea     rdi, ind; ind", "call    put_indicator", "jmp     loc_653D"], ["lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 2, 1, 0.07142857142857142, ["cmp     cs:stru_227080.string, 0", "jz      short loc_65A4"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 2, 0, 1, 3, 0, 2, 3, -1, 0.07142857142857142, ["lea     rdi, stru_227080; ind", "call    put_indicator", "jmp     short loc_653D"], ["lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 7, 0, 0, 4, 0, 1, 0, 3, 0.0, ["cmp     cs:used_color, 0", "push    rbx", "mov     rbx, ind", "jz      short loc_6560"], ["cmp~<TAG>,0", "push~rbx", "mov~rbx,ind", "jz~FOO"]]], "func_feature": [6, 1, 12, 0, 8, 11, 26, 31, 0.06548, 7, 0], "succs": [[4, 6], [0, 5], [], [2], [3], [4, 6], [3], [1, 3]], "fname": "put_indicator", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 4, 0, 0, 2, 0, 1, 0, 0, 0.042044911610129, ["cmp     [rsp+2078h+var_205A], 0", "jz      short loc_6A0C"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 5, 3, 0.07107023411371237, ["cmp     cs:align_variable_outer_quotes, 0", "jz      short loc_69FB"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 6, 3, 0.01027233635929288, ["cmp     cs:cwd_some_quoted, 1", "jnz     short loc_69FB"], ["cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 5, 1, 0, 2, 0, 0, 7, 3, 0.0, ["cmp     [rsp+2078h+var_2059], 1", "adc     r13, 0"], ["cmp~[rsp+0],0", "adc~r13,0"]], [0, 0, 3, 0, 1, 2, 0, 1, 7, 2, 0.0, ["mov     rdi, [rsp+2078h+buf]; ptr", "call    free"], ["mov~rdi,[rsp+0]", "call~FOO"]], [0, 0, 12, 0, 1, 5, 0, 1, 7, 7, 0.007166746297181079, ["call    ___ctype_b_loc", "mov     rsi, r14", "mov     rcx, [rax]", "mov     rax, rbx", "nop     word ptr [rax+rax+00h]"], ["call~FOO", "mov~rsi,r14", "mov~rcx,<TAG>", "mov~rax,rbx", "nop~[ord ptr [rax+0]"]], [0, 0, 13, 0, 0, 3, 0, 0, 6, 4, 0.01696129956999522, ["cmp     rbx, rsi", "mov     r14, rsi", "jnb     loc_69E0"], ["cmp~rbx,rsi", "mov~r14,rsi", "jnb~FOO"]], [1, 0, 63, 0, 0, 7, 0, 1, 22, 13, 0.0801481127568084, ["movzx   edx, byte ptr [rbp+3]", "cmp     rdi, 4", "lea     rsi, [rbp+4]", "lea     rbx, [r12+4]", "lea     rcx, [r15-4]", "mov     [r12+3], dl", "jz      loc_6958"], ["movzx~edx,[yte ptr [rbp+0]", "cmp~rdi,0", "lea~rsi,[rbp+0]", "lea~rbx,[r12+0]", "lea~rcx,[r15-4]+0]", "mov~[r12+0],dl", "jz~FOO"]], [1, 0, 63, 0, 0, 7, 0, 1, 21, 13, 0.08671763019589106, ["movzx   edx, byte ptr [rbp+2]", "cmp     rdi, 3", "lea     rsi, [rbp+3]", "lea     rbx, [r12+3]", "lea     rcx, [r15-3]", "mov     [r12+2], dl", "jz      loc_6958"], ["movzx~edx,[yte ptr [rbp+0]", "cmp~rdi,0", "lea~rsi,[rbp+0]", "lea~rbx,[r12+0]", "lea~rcx,[r15-3]+0]", "mov~[r12+0],dl", "jz~FOO"]], [2, 0, 92, 1, 1, 20, 2, 2, 0, 8, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12d, edx", "push    rbp", "push    rbx", "mov     rbx, name", "mov     name, options; o", "mov     rbp, options", "sub     rsp, 2048h", "mov     rax, fs:28h", "mov     [rsp+2078h+var_40], rax", "xor     eax, eax", "call    get_quoting_style", "cmp     eax, 2", "setbe   al", "and     al, cs:qmark_funny_chars", "mov     [rsp+2078h+var_2059], al", "jnz     loc_6AC0"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12d,edx", "push~rbp", "push~rbx", "mov~rbx,name", "mov~name,options", "mov~rbp,options", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "cmp~eax,0", "setbe~al", "and~al,<TAG>", "mov~[rsp+0],al", "jnz~FOO"]], [1, 0, 12, 0, 0, 3, 1, 1, 8, 6, 0.006808408982322025, ["movzx   edx, byte ptr [rax]", "test    byte ptr [rcx+rdx*2+1], 40h", "jnz     short loc_6C1D"], ["movzx~edx,<TAG>", "test~[yte ptr [rcx+0],0", "jnz~FOO"]], [1, 0, 12, 1, 0, 3, 0, 1, 9, 5, 0.00513616817964644, ["add     rax, 1", "cmp     rax, rsi", "jnz     short loc_6C10"], ["add~rax,0", "cmp~rax,rsi", "jnz~FOO"]], [1, 0, 12, 0, 0, 1, 0, 0, 9, 6, 0.0, ["mov     byte ptr [rax], 3Fh ; '?'"], ["mov~<TAG>,0"]], [0, 0, 2, 0, 0, 4, 1, 1, 7, 1, 0.02150023889154324, ["mov     rsi, [rsp+2078h+var_40]", "xor     rsi, fs:28h", "mov     rax, r13", "jnz     loc_6CBF"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~rax,r13", "jnz~FOO"]], [0, 0, 85, 0, 0, 3, 2, 1, 1, 7, 0.005056537665233316, ["xor     r14d, r14d", "test    r12d, r12d", "jz      loc_6A40"], ["xor~r14d,r14d", "test~r12d,r12d", "jz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 1, 10, 4, 0.003822264691829909, ["jmp     loc_69E0"], ["jmp~FOO"]], [1, 0, 63, 0, 0, 7, 0, 1, 23, 13, 0.07345914954610606, ["movzx   edx, byte ptr [rbp+4]", "cmp     rdi, 5", "lea     rsi, [rbp+5]", "lea     rbx, [r12+5]", "lea     rcx, [r15-5]", "mov     [r12+4], dl", "jz      loc_6958"], ["movzx~edx,[yte ptr [rbp+0]", "cmp~rdi,0", "lea~rsi,[rbp+0]", "lea~rbx,[r12+0]", "lea~rcx,[r15-5]+0]", "mov~[r12+0],dl", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 8, -1, 0.0, ["add     rsp, 2048h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 63, 0, 0, 3, 0, 1, 20, 10, 0.024247491638795984, ["movsb", "cmp     rdi, rcx", "jnz     short loc_69B0"], ["movsb~<TAG>,<TAG>", "cmp~rdi,rcx", "jnz~FOO"]], [0, 0, 63, 1, 0, 2, 0, 0, 19, 11, 0.024844720496894408, ["add     rcx, rdi", "nop     dword ptr [rax+rax+00000000h]"], ["add~rcx,rdi", "nop~[word ptr [rax+0]"]], [1, 0, 63, 0, 0, 7, 0, 1, 24, 13, 0.06665074056378403, ["movzx   edx, byte ptr [rbp+5]", "cmp     rdi, 6", "lea     rsi, [rbp+6]", "lea     rbx, [r12+6]", "lea     rcx, [r15-6]", "mov     [r12+5], dl", "jz      loc_6958"], ["movzx~edx,[yte ptr [rbp+0]", "cmp~rdi,0", "lea~rsi,[rbp+0]", "lea~rbx,[r12+0]", "lea~rcx,[r15-6]+0]", "mov~[r12+0],dl", "jz~FOO"]], [1, 0, 15, 0, 1, 5, 0, 1, 2, 6, 0.0035833731485905396, ["mov     rdi, name; s", "call    _strlen", "mov     [rsp+2078h+var_205A], 0", "mov     r13, rax", "mov     [rsp+2078h+buf], name"], ["mov~rdi,name", "call~FOO", "mov~[rsp+0],0", "mov~r13,rax", "mov~[rsp+0],name"]], [4, 0, 83, 0, 1, 12, 0, 2, 2, 8, 0.022256728778467905, ["lea     needs_general_quoting, [rsp+2078h+smallbuf]", "mov     r8, options; o", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, name; arg", "mov     esi, 2000h; buffersize", "mov     rdi, buf_0; buffer", "call    quotearg_buffer", "cmp     rax, 1FFFh", "mov     r13, rax", "mov     [rsp+2078h+var_205A], 0", "mov     [rsp+2078h+buf], buf_0", "ja      loc_6C58"], ["lea~needs_general_quoting,[rsp+0]", "mov~r8,options", "mov~rcx,0", "mov~rdx,name", "mov~esi,0", "mov~rdi,buf_0", "call~FOO", "cmp~rax,0", "mov~r13,rax", "mov~[rsp+0],0", "mov~[rsp+0],buf_0", "ja~FOO"]], [1, 0, 84, 0, 0, 2, 0, 1, 2, 9, 0.0013139034878165313, ["mov     r14d, 1", "jmp     loc_6627"], ["mov~r14d,0", "jmp~FOO"]], [0, 0, 89, 0, 0, 2, 1, 1, 1, 9, 0.005693581780538302, ["test    r12d, r12d", "jnz     loc_6CB4"], ["test~r12d,r12d", "jnz~FOO"]], [1, 0, 14, 0, 1, 3, 0, 2, 3, 5, 0.012422360248447204, ["call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "ja      short loc_6AA8"], ["call~FOO", "cmp~rax,0", "ja~FOO"]], [0, 0, 79, 0, 0, 2, 1, 1, 4, 6, 0.058090460264373305, ["test    r14d, r14d", "jz      loc_6A55"], ["test~r14d,r14d", "jz~FOO"]], [0, 0, 12, 0, 0, 4, 0, 0, 4, 5, 0.004777830864787386, ["mov     r14, [rsp+2078h+buf]", "lea     name, [r14+r13]", "cmp     r14, rbx", "jnb     loc_6B10"], ["mov~r14,[rsp+0]", "lea~name,<TAG>", "cmp~r14,rbx", "jnb~FOO"]], [1, 0, 81, 0, 0, 5, 0, 1, 3, 7, 0.040651377607899344, ["mov     rax, [rsp+2078h+buf]", "mov     [rsp+2078h+var_2059], 1", "movzx   eax, byte ptr [rax]", "cmp     [name], al", "jnz     short loc_6680"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "movzx~eax,<TAG>", "cmp~<TAG>,al", "jnz~FOO"]], [1, 0, 82, 0, 2, 14, 0, 3, 3, 8, 0.0, ["lea     buf_0, [rax+1]", "mov     rdi, r12; n", "call    xmalloc", "mov     r8, options; o", "mov     r15, rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, name; arg", "mov     rsi, r12; buffersize", "mov     rdi, rax; buffer", "mov     [rsp+2078h+buf], rax", "call    quotearg_buffer", "cmp     name, r15", "setnz   [rsp+2078h+var_205A]", "jmp     loc_665F"], ["lea~buf_0,[rax+0]", "mov~rdi,r12", "call~FOO", "mov~r8,options", "mov~r15,rax", "mov~rcx,0", "mov~rdx,name", "mov~rsi,r12", "mov~rdi,rax", "mov~[rsp+0],rax", "call~FOO", "cmp~name,r15", "setnz~[rsp+0]", "jmp~FOO"]], [0, 0, 80, 0, 1, 4, 0, 1, 4, 7, 0.0, ["mov     rdi, name; s", "call    _strlen", "cmp     r13, rax", "setnz   [rsp+2078h+var_2059]"], ["mov~rdi,name", "call~FOO", "cmp~r13,rax", "setnz~[rsp+0]"]], [0, 0, 10, 0, 1, 4, 1, 1, 5, 6, 0.002866698518872432, ["call    ___ctype_b_loc", "xor     r13d, r13d", "mov     rcx, [rax]", "mov     rax, r14"], ["call~FOO", "xor~r13d,r13d", "mov~rcx,<TAG>", "mov~rax,r14"]], [1, 0, 63, 0, 0, 7, 0, 1, 25, 13, 0.05972288580984233, ["movzx   edx, byte ptr [rbp+6]", "cmp     rdi, 7", "lea     rsi, [rbp+7]", "lea     rbx, [r12+7]", "lea     rcx, [r15-7]", "mov     [r12+6], dl", "jz      loc_6958"], ["movzx~edx,[yte ptr [rbp+0]", "cmp~rdi,0", "lea~rsi,[rbp+0]", "lea~rbx,[r12+0]", "lea~rcx,[r15-7]+0]", "mov~[r12+0],dl", "jz~FOO"]], [1, 0, 63, 0, 0, 7, 0, 1, 26, 13, 0.052675585284280936, ["movzx   edx, byte ptr [rbp+7]", "cmp     rdi, 8", "lea     rsi, [rbp+8]", "lea     rbx, [r12+8]", "lea     rcx, [r15-8]", "mov     [r12+7], dl", "jz      loc_6958"], ["movzx~edx,[yte ptr [rbp+0]", "cmp~rdi,0", "lea~rsi,[rbp+0]", "lea~rbx,[r12+0]", "lea~rcx,[r15-8]+0]", "mov~[r12+0],dl", "jz~FOO"]], [4, 0, 10, 1, 0, 8, 1, 1, 6, 5, 0.002508361204013378, ["movzx   edx, byte ptr [rax]", "movzx   edx, word ptr [rcx+rdx*2]", "and     dx, 4000h", "cmp     dx, 1", "sbb     r13, 0FFFFFFFFFFFFFFFFh", "add     rax, 1", "cmp     rbx, rax", "jnz     short loc_6A80"], ["movzx~edx,<TAG>", "movzx~edx,<TAG>", "and~dx,0", "cmp~dx,0", "sbb~r13,0", "add~rax,0", "cmp~rbx,rax", "jnz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 1, 7, 4, 0.0019111323459149545, ["jmp     loc_69E0"], ["jmp~FOO"]], [1, 0, 72, 0, 1, 6, 0, 1, 5, 5, 0.10642618251313903, ["call    ___ctype_get_mb_cur_max", "mov     name, [rsp+2078h+buf]", "cmp     rax, 1", "lea     rsi, [rbx+r13]", "mov     [rsp+2078h+var_2078], rsi", "jbe     loc_6BF0"], ["call~FOO", "mov~name,[rsp+0]", "cmp~rax,0", "lea~rsi,<TAG>", "mov~<TAG>,rsi", "jbe~FOO"]], [1, 0, 73, 0, 1, 4, 0, 2, 4, 6, 0.03997451823538779, ["mov     rsi, name; src", "call    _memcpy", "mov     [rsp+2078h+var_2059], 0", "jmp     loc_6689"], ["mov~rsi,name", "call~FOO", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 63, 0, 0, 4, 0, 1, 18, 12, 0.020664118490205444, ["mov     rcx, r15", "mov     rdi, r12", "mov     rsi, rbp", "jmp     loc_69A5"], ["mov~rcx,r15", "mov~rdi,r12", "mov~rsi,rbp", "jmp~FOO"]], [1, 0, 63, 0, 0, 7, 1, 1, 17, 13, 0.16041567128523648, ["mov     rdi, rbp", "lea     rcx, [r15-1]", "neg     rdi", "and     edi, 0Fh", "lea     rdx, [rdi+0Fh]", "cmp     rdx, rcx", "ja      loc_6C98"], ["mov~rdi,rbp", "lea~rcx,[r15-1]+0]", "neg~rdi", "and~edi,0", "lea~rdx,[rdi+0]", "cmp~rdx,rcx", "ja~FOO"]], [0, 0, 65, 0, 0, 2, 0, 0, 6, 5, 0.09472049689440994, ["cmp     rbx, rsi", "jnb     loc_6B10"], ["cmp~rbx,rsi", "jnb~FOO"]], [1, 0, 63, 0, 0, 7, 0, 1, 27, 13, 0.045508838987099856, ["movzx   edx, byte ptr [rbp+8]", "cmp     rdi, 9", "lea     rsi, [rbp+9]", "lea     rbx, [r12+9]", "lea     rcx, [r15-9]", "mov     [r12+8], dl", "jz      loc_6958"], ["movzx~edx,[yte ptr [rbp+0]", "cmp~rdi,0", "lea~rsi,[rbp+0]", "lea~rbx,[r12+0]", "lea~rcx,[r15-9]+0]", "mov~[r12+0],dl", "jz~FOO"]], [1, 0, 63, 2, 0, 9, 2, 0, 20, 12, 0.12099856665074056, ["mov     r11, r15", "lea     r9, [rbp+rdi+0]", "xor     edx, edx", "sub     r11, rdi", "xor     r8d, r8d", "add     rdi, r12", "mov     r10, r11", "shr     r10, 4", "nop     word ptr [rax+rax+00h]"], ["mov~r11,r15", "lea~r9,[rbp+0]", "xor~edx,edx", "sub~r11,rdi", "xor~r8d,r8d", "add~rdi,r12", "mov~r10,r11", "shr~r10,0", "nop~[ord ptr [rax+0]"]], [1, 0, 63, 0, 0, 5, 0, 1, 19, 13, 0.11102484472049688, ["movzx   edx, byte ptr [rbp+0]", "cmp     rdi, 1", "lea     rsi, [rbp+1]", "mov     [r12], dl", "jz      loc_6958"], ["movzx~edx,[yte ptr [rbp+0]", "cmp~rdi,0", "lea~rsi,[rbp+0]", "mov~<TAG>,dl", "jz~FOO"]], [1, 0, 63, 0, 0, 7, 0, 1, 20, 13, 0.09316770186335403, ["movzx   edx, byte ptr [rbp+1]", "cmp     rdi, 2", "lea     rsi, [rbp+2]", "lea     rbx, [r12+2]", "lea     rcx, [r15-2]", "mov     [r12+1], dl", "jz      loc_6958"], ["movzx~edx,[yte ptr [rbp+0]", "cmp~rdi,0", "lea~rsi,[rbp+0]", "lea~rbx,[r12+0]", "lea~rcx,[r15-2]+0]", "mov~[r12+0],dl", "jz~FOO"]], [1, 0, 63, 0, 0, 7, 0, 1, 28, 13, 0.03822264691829909, ["movzx   edx, byte ptr [rbp+9]", "cmp     rdi, 0Ah", "lea     rsi, [rbp+0Ah]", "lea     rbx, [r12+0Ah]", "lea     rcx, [r15-0Ah]", "mov     [r12+9], dl", "jz      loc_6958"], ["movzx~edx,[yte ptr [rbp+0]", "cmp~rdi,0", "lea~rsi,[rbp+0]", "lea~rbx,[r12+0]", "lea~rcx,[r15-0Ah]+0]", "mov~[r12+0],dl", "jz~FOO"]], [1, 0, 63, 0, 0, 7, 0, 1, 29, 13, 0.03081700907787864, ["movzx   edx, byte ptr [rbp+0Ah]", "cmp     rdi, 0Bh", "lea     rsi, [rbp+0Bh]", "lea     rbx, [r12+0Bh]", "lea     rcx, [r15-0Bh]", "mov     [r12+0Ah], dl", "jz      short loc_6958"], ["movzx~edx,[yte ptr [rbp+0]", "cmp~rdi,0", "lea~rsi,[rbp+0]", "lea~rbx,[r12+0]", "lea~rcx,[r15-0Bh]+0]", "mov~[r12+0],dl", "jz~FOO"]], [1, 0, 63, 0, 0, 7, 0, 1, 30, 13, 0.023291925465838508, ["movzx   edx, byte ptr [rbp+0Bh]", "cmp     rdi, 0Ch", "lea     rsi, [rbp+0Ch]", "lea     rbx, [r12+0Ch]", "lea     rcx, [r15-0Ch]", "mov     [r12+0Bh], dl", "jz      short loc_6958"], ["movzx~edx,[yte ptr [rbp+0]", "cmp~rdi,0", "lea~rsi,[rbp+0]", "lea~rbx,[r12+0]", "lea~rcx,[r15-0Ch]+0]", "mov~[r12+0],dl", "jz~FOO"]], [1, 0, 63, 0, 0, 7, 0, 1, 31, 13, 0.01564739608217869, ["movzx   edx, byte ptr [rbp+0Ch]", "cmp     rdi, 0Dh", "lea     rsi, [rbp+0Dh]", "lea     rbx, [r12+0Dh]", "lea     rcx, [r15-0Dh]", "mov     [r12+0Ch], dl", "jz      short loc_6958"], ["movzx~edx,[yte ptr [rbp+0]", "cmp~rdi,0", "lea~rsi,[rbp+0]", "lea~rbx,[r12+0]", "lea~rcx,[r15-0Dh]+0]", "mov~[r12+0],dl", "jz~FOO"]], [1, 0, 63, 0, 0, 7, 0, 1, 32, 13, 0.007883420926899188, ["movzx   edx, byte ptr [rbp+0Dh]", "cmp     rdi, 0Fh", "lea     rsi, [rbp+0Eh]", "lea     rbx, [r12+0Eh]", "lea     rcx, [r15-0Eh]", "mov     [r12+0Dh], dl", "jnz     short loc_6958"], ["movzx~edx,[yte ptr [rbp+0]", "cmp~rdi,0", "lea~rsi,[rbp+0]", "lea~rbx,[r12+0]", "lea~rcx,[r15-0Eh]+0]", "mov~[r12+0],dl", "jnz~FOO"]], [0, 0, 63, 0, 0, 4, 0, 1, 19, 13, 0.01152651696129957, ["mov     rcx, r15", "mov     rbx, r12", "mov     rsi, rbp", "jmp     loc_6958"], ["mov~rcx,r15", "mov~rbx,r12", "mov~rsi,rbp", "jmp~FOO"]], [0, 0, 63, 0, 0, 5, 0, 0, 33, 13, 0.0, ["movzx   edx, byte ptr [rbp+0Eh]", "lea     rsi, [rbp+0Fh]", "lea     rbx, [r12+0Fh]", "lea     rcx, [r15-0Fh]", "mov     [r12+0Eh], dl"], ["movzx~edx,[yte ptr [rbp+0]", "lea~rsi,[rbp+0]", "lea~rbx,[r12+0]", "lea~rcx,[r15-0Fh]+0]", "mov~[r12+0],dl"]], [0, 0, 63, 0, 0, 2, 1, 1, 18, 14, 0.13115145723841376, ["test    rdi, rdi", "jz      loc_6CA6"], ["test~rdi,rdi", "jz~FOO"]], [0, 0, 8, 0, 1, 6, 1, 2, 4, 4, 0.006688963210702341, ["mov     rdi, [rsp+2078h+buf]; string", "mov     rsi, r13; nbytes", "xor     edx, edx; flags", "call    mbsnwidth", "movsxd  r13, eax", "jmp     loc_69E0"], ["mov~rdi,[rsp+0]", "mov~rsi,r13", "xor~edx,edx", "call~FOO", "movsxd~r13,eax", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 63, 0, 0, 7, 1, 0, 7, 8, 0.09854276158623984, ["lea     rax, [rsp+2078h+c]", "lea     r14, [rsp+2078h+ps]", "mov     r12, rbx", "mov     options, rbx", "xor     r13d, r13d", "mov     [rsp+2078h+pwc], rax", "nop     word ptr [rax+rax+00000000h]"], ["lea~rax,[rsp+0]", "lea~r14,[rsp+0]", "mov~r12,rbx", "mov~options,rbx", "xor~r13d,r13d", "mov~[rsp+0],rax", "nop~[ord ptr [rax+0]"]], [1, 0, 63, 0, 0, 3, 0, 1, 8, 7, 0.1759436215957955, ["movzx   eax, byte ptr [rbp+0]", "cmp     al, 3Fh ; '?'", "jg      loc_6B60"], ["movzx~eax,[yte ptr [rbp+0]", "cmp~al,0", "jg~FOO"]], [0, 0, 63, 0, 0, 2, 0, 0, 17, 5, 0.08516483516483515, ["cmp     rbp, [rsp+2078h+var_2078]", "jb      loc_66D0"], ["cmp~rbp,<TAG>", "jb~FOO"]], [3, 0, 63, 3, 0, 6, 0, 0, 10, 5, 0.017200191113234592, ["mov     [r12], al", "add     rbp, 1", "add     r13, 1", "add     r12, 1", "cmp     rbp, [rsp+2078h+var_2078]", "jb      loc_66D0"], ["mov~<TAG>,al", "add~rbp,0", "add~r13,0", "add~r12,0", "cmp~rbp,<TAG>", "jb~FOO"]], [0, 0, 63, 0, 0, 3, 0, 0, 13, 5, 0.028308647873865264, ["cmp     rbp, [rsp+2078h+var_2078]", "mov     r12, rbx", "jb      loc_66D0"], ["cmp~rbp,<TAG>", "mov~r12,rbx", "jb~FOO"]], [1, 0, 63, 0, 0, 2, 0, 1, 9, 6, 0.02460582895365504, ["cmp     al, 25h ; '%'", "jge     loc_6B78"], ["cmp~al,0", "jge~FOO"]], [1, 0, 63, 0, 0, 3, 0, 0, 10, 6, 0.005613951266125179, ["lea     edx, [rax-20h]", "cmp     dl, 3", "jbe     loc_6B78"], ["lea~edx,[rax-20h]+0]", "cmp~dl,0", "jbe~FOO"]], [1, 0, 74, 0, 0, 4, 0, 0, 3, 7, 0.011446886446886446, ["lea     rax, [rsp+2078h+smallbuf]", "mov     [rsp+2078h+var_205A], 0", "mov     [rsp+2078h+buf], buf_0", "mov     rdi, buf_0; dest"], ["lea~rax,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],buf_0", "mov~rdi,buf_0"]], [1, 0, 76, 0, 1, 6, 0, 2, 2, 8, 0.014532568880394966, ["mov     rdi, name; s", "call    _strlen", "cmp     rax, 1FFFh", "mov     r13, rax", "lea     rdx, [rax+1]; n", "ja      loc_6C30"], ["mov~rdi,name", "call~FOO", "cmp~rax,0", "mov~r13,rax", "lea~rdx,[rax+0]", "ja~FOO"]], [1, 0, 63, 0, 0, 2, 0, 0, 10, 8, 0.1471571906354515, ["mov     qword ptr [rsp+2078h+ps.__count], 0", "nop     dword ptr [rax+00000000h]"], ["mov~[word ptr [rsp+0],0", "nop~[word ptr [rax+0]"]], [1, 0, 63, 0, 0, 2, 0, 1, 9, 7, 0.14273769708552317, ["cmp     al, 41h ; 'A'", "jl      loc_66F0"], ["cmp~al,0", "jl~FOO"]], [1, 0, 63, 0, 0, 3, 0, 1, 11, 6, 0.005613951266125179, ["lea     edx, [rax-61h]", "cmp     dl, 1Dh", "ja      loc_66F0"], ["lea~edx,[rax-61h]+0]", "cmp~dl,0", "ja~FOO"]], [0, 0, 74, 0, 1, 9, 0, 2, 3, 7, 0.011446886446886446, ["mov     rdi, rdx; n", "mov     [rsp+2078h+var_2078], rdx", "call    xmalloc", "cmp     name, rax", "mov     [rsp+2078h+buf], rax", "mov     rdx, [rsp+2078h+var_2078]", "setnz   [rsp+2078h+var_205A]", "mov     rdi, rax", "jmp     loc_6AF6"], ["mov~rdi,rdx", "mov~<TAG>,rdx", "call~FOO", "cmp~name,rax", "mov~[rsp+0],rax", "mov~rdx,<TAG>", "setnz~[rsp+0]", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 5, 4, 0.0019111323459149545, ["xor     r13d, r13d", "jmp     loc_69E0"], ["xor~r13d,r13d", "jmp~FOO"]], [1, 0, 63, 1, 1, 10, 0, 2, 11, 7, 0.2827281414237936, ["mov     rdx, [rsp+2078h+var_2078]", "mov     rdi, [rsp+2078h+pwc]; pwc", "mov     rcx, r14; ps", "mov     rsi, rbp; s", "lea     rbx, [r12+1]", "sub     rdx, rbp; n", "call    rpl_mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     r15, rax", "jz      loc_6BA0"], ["mov~rdx,<TAG>", "mov~rdi,[rsp+0]", "mov~rcx,r14", "mov~rsi,rbp", "lea~rbx,[r12+0]", "sub~rdx,rbp", "call~FOO", "cmp~rax,0", "mov~r15,rax", "jz~FOO"]], [0, 0, 63, 0, 1, 4, 1, 2, 16, 6, 0.22193024366937408, ["mov     rdi, r14; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_6700"], ["mov~rdi,r14", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 63, 0, 0, 2, 0, 1, 12, 7, 0.25489727663640704, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_6BC0"], ["cmp~rax,0", "jz~FOO"]], [2, 0, 63, 1, 0, 5, 0, 1, 15, 7, 0.02436693741041567, ["mov     byte ptr [r12], 3Fh ; '?'", "add     r13, 1", "mov     r12, rbx", "mov     rbp, rdx", "jmp     loc_69C5"], ["mov~<TAG>,0", "add~r13,0", "mov~r12,rbx", "mov~rbp,rdx", "jmp~FOO"]], [0, 0, 63, 0, 1, 4, 1, 2, 14, 8, 0.21279264214046822, ["call    _wcwidth", "test    eax, eax", "lea     rdx, [rbp+r15+0]", "js      loc_6B20"], ["call~FOO", "test~eax,eax", "lea~rdx,[rbp+0]", "js~FOO"]], [0, 0, 63, 0, 1, 4, 1, 2, 14, 8, 0.022634973721930244, ["call    _wcwidth", "test    eax, eax", "lea     rdx, [rbp+1]", "js      short loc_6B20"], ["call~FOO", "test~eax,eax", "lea~rdx,[rbp+0]", "js~FOO"]], [0, 0, 63, 0, 0, 3, 1, 1, 13, 9, 0.24402771141901575, ["test    rax, rax", "mov     edi, [rsp+2078h+c]; c", "jz      loc_6B38"], ["test~rax,rax", "mov~edi,[rsp+0]", "jz~FOO"]], [2, 0, 63, 2, 0, 6, 0, 1, 21, 11, 0.12040133779264213, ["movdqa  xmm0, xmmword ptr [r9+rdx]", "add     r8, 1", "movups  xmmword ptr [rdi+rdx], xmm0", "add     rdx, 10h", "cmp     r10, r8", "ja      short loc_6978"], ["movdqa~xmm0,<TAG>", "add~r8,0", "movups~<TAG>,xmm0", "add~rdx,0", "cmp~r10,r8", "ja~FOO"]], [0, 0, 63, 0, 0, 5, 0, 1, 15, 8, 0.004061156235069278, ["movzx   ecx, byte ptr [rbp+0]", "mov     rbp, rdx", "mov     [r12], cl", "mov     r12, rbx", "jmp     loc_69C0"], ["movzx~ecx,[yte ptr [rbp+0]", "mov~rbp,rdx", "mov~<TAG>,cl", "mov~r12,rbx", "jmp~FOO"]], [0, 0, 63, 0, 0, 8, 1, 1, 15, 12, 0.1978021978021978, ["lea     rdx, [r12+10h]", "cmp     rbp, rdx", "lea     rdx, [rbp+10h]", "setnb   cl", "cmp     r12, rdx", "setnb   dl", "or      cl, dl", "jz      loc_6BD0"], ["lea~rdx,[r12+0]", "cmp~rbp,rdx", "lea~rdx,[rbp+0]", "setnb~cl", "cmp~r12,rdx", "setnb~dl", "or~cl,dl", "jz~FOO"]], [1, 0, 63, 0, 0, 2, 0, 1, 10, 6, 0.009436215957955088, ["cmp     al, 5Fh ; '_'", "jle     short loc_6B78"], ["cmp~al,0", "jle~FOO"]], [1, 0, 63, 0, 0, 2, 0, 0, 16, 12, 0.16543239369326326, ["cmp     r15, 16h", "jbe     loc_6BD0"], ["cmp~r15,0", "jbe~FOO"]], [0, 0, 8, 0, 0, 1, 0, 1, 11, 4, 0.007644529383659818, ["jmp     loc_69E0"], ["jmp~FOO"]], [1, 0, 63, 2, 0, 7, 1, 1, 22, 10, 0.11980410893454371, ["mov     rdx, r11", "and     rdx, 0FFFFFFFFFFFFFFF0h", "add     rsi, rdx", "sub     rcx, rdx", "cmp     rdx, r11", "lea     rdi, [rbx+rdx]", "jz      short loc_69B6"], ["mov~rdx,r11", "and~rdx,0", "add~rsi,rdx", "sub~rcx,rdx", "cmp~rdx,r11", "lea~rdi,<TAG>", "jz~FOO"]], [3, 0, 63, 2, 0, 3, 0, 0, 12, 6, 0.01923076923076923, ["add     rbp, 1", "mov     byte ptr [r12], 3Fh ; '?'", "add     r13, 1"], ["add~rbp,0", "mov~<TAG>,0", "add~r13,0"]], [2, 0, 63, 1, 0, 4, 0, 1, 13, 6, 0.0022694696607740085, ["mov     byte ptr [r12], 3Fh ; '?'", "add     r13, 1", "mov     rbp, [rsp+2078h+var_2078]", "jmp     short loc_6BAD"], ["mov~<TAG>,0", "add~r13,0", "mov~rbp,<TAG>", "jmp~FOO"]], [0, 0, 63, 0, 0, 1, 0, 0, 21, 9, 0.14608217869087434, ["lea     rdx, [r12+r15]"], ["lea~rdx,<TAG>"]], [0, 0, 8, 0, 0, 1, 0, 1, 14, 4, 0.005733397037744864, ["jmp     loc_69E0"], ["jmp~FOO"]], [0, 0, 63, 1, 0, 2, 0, 0, 19, 8, 0.1798853320592451, ["add     rbp, r15", "mov     r12, rdx"], ["add~rbp,r15", "mov~r12,rdx"]], [0, 0, 63, 0, 0, 1, 0, 1, 18, 9, 0.026994744386048732, ["jmp     loc_69BA"], ["jmp~FOO"]], [0, 0, 63, 1, 0, 2, 0, 0, 16, 7, 0.1907548972766364, ["cdqe", "add     r13, rax"], ["cdqe~", "add~r13,rax"]], [0, 0, 63, 0, 0, 4, 0, 0, 16, 11, 0.02818920210224558, ["lea     rdx, [r12+r15]", "mov     rdi, r12", "mov     rsi, rbp", "nop     word ptr [rax+rax+00h]"], ["lea~rdx,<TAG>", "mov~rdi,r12", "mov~rsi,rbp", "nop~[ord ptr [rax+0]"]], [0, 0, 8, 0, 0, 1, 0, 0, 18, 4, 0.037267080745341616, ["nop"], ["nop"]], [0, 0, 63, 0, 0, 3, 0, 1, 17, 10, 0.027591973244147156, ["movsb", "cmp     rdx, rdi", "jnz     short loc_6BE0"], ["movsb~<TAG>,<TAG>", "cmp~rdx,rdi", "jnz~FOO"]]], "func_feature": [20, 23, 83, 2, 93, 147, 1, 417, 0.05586, 4, 22], "succs": [[4, 13], [0, 2], [0, 3], [0], [13], [10], [1, 5], [16, 42], [42, 7], [24, 14], [11, 12], [10, 15], [11], [17, 54], [21, 22], [1], [42, 20], [], [18, 85], [18], [32, 42], [25], [28, 29], [22], [63, 23], [27, 53], [25, 36], [68, 31], [26, 30], [28], [26], [34], [33, 42], [41, 42], [34, 35], [1], [40, 6], [36], [19], [52, 38], [68, 55], [42, 45], [76], [42, 44], [8, 42], [42, 46], [42, 47], [48, 42], [49, 42], [42, 51], [42], [42], [50, 43], [1], [], [56], [65, 60], [56, 91], [56, 81], [56, 86], [58, 61], [64, 58], [37], [67, 62], [69], [64, 79], [64, 58], [37], [1], [83, 71], [57, 69], [75, 84], [70], [72, 78], [72, 77], [73, 74], [82, 76], [89], [80, 90], [66, 58], [90, 39], [1], [19, 85], [59], [59], [87], [1], [89], [87], [70], [92], [1], [88, 92]], "fname": "quote_name_width", "n_num": 93}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 37, 0, 0, 2, 0, 1, 0, 0, 0.005398110661268556, ["cmp     cs:format_0, 4", "jz      loc_6EC8"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 39, 1, 0, 9, 1, 1, 0, 6, 0.0, ["push    rbp", "push    rbx", "mov     rbp, f", "sub     rsp, 2A8h", "mov     rax, fs:28h", "mov     [rsp+2B8h+var_20], rax", "xor     eax, eax", "cmp     cs:print_inode, 0", "jz      loc_6DE0"], ["push~rbp", "push~rbx", "mov~rbp,f", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~<TAG>,0", "jz~FOO"]], [2, 0, 29, 0, 0, 3, 0, 1, 4, 5, 0.014507422402159244, ["cmp     byte ptr [f+0B8h], 0", "mov     eax, 2", "jz      loc_6D2C"], ["cmp~[yte ptr [f+0],0", "mov~eax,0", "jz~FOO"]], [1, 0, 31, 0, 0, 2, 0, 1, 3, 6, 0.010796221322537112, ["cmp     cs:format_0, 4", "jnz     loc_6D21"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 20, 0, 0, 5, 1, 1, 5, 3, 0.21794871794871795, ["movzx   edi, byte ptr [f+0B8h]", "mov     esi, [f+0A8h]", "mov     ecx, [f+30h]", "test    dil, dil", "jz      loc_6E40"], ["movzx~edi,[yte ptr [f+0]", "mov~esi,[f+0]", "mov~ecx,[f+0]", "test~dil,dil", "jz~FOO"]], [0, 0, 21, 1, 1, 8, 1, 2, 4, 2, 0.25506072874493924, ["mov     edx, [f+0C4h]; needs_general_quoting", "mov     rsi, cs:filename_quoting_options; options", "mov     rdi, [f+0]; name", "call    quote_name_width", "mov     edx, cs:indicator_style_0", "add     rax, len", "test    edx, edx", "jz      short loc_6DB8"], ["mov~edx,[f+0]", "mov~rsi,<TAG>", "mov~rdi,[f+0]", "call~FOO", "mov~edx,<TAG>", "add~rax,len", "test~edx,edx", "jz~FOO"]], [1, 1, 5, 0, 0, 4, 0, 1, 12, 3, 0.009784075573549258, ["cmp     ecx, 0C000h", "setz    dl", "cmp     ecx, 1000h", "jz      short loc_6EF0"], ["cmp~ecx,0", "setz~dl", "cmp~ecx,<STR>", "jz~FOO"]], [2, 0, 6, 0, 0, 3, 1, 1, 11, 3, 0.03070175438596491, ["and     ecx, 0F000h", "cmp     ecx, 0A000h", "jz      short loc_6EF0"], ["and~ecx,0", "cmp~ecx,0", "jz~FOO"]], [1, 0, 23, 1, 1, 4, 0, 2, 5, 4, 0.010796221322537112, ["mov     rdi, [f+0B0h]; s", "call    _strlen", "add     rax, 1", "jmp     loc_6D50"], ["mov~rdi,[f+0]", "call~FOO", "add~rax,0", "jmp~FOO"]], [1, 0, 25, 0, 0, 2, 0, 1, 4, 5, 0.020242914979757085, ["cmp     cs:format_0, 4", "jz      loc_6F00"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 13, 3, 0.0006747638326585695, ["jmp     short loc_6EF0"], ["jmp~FOO"]], [2, 0, 6, 0, 0, 4, 0, 1, 12, 3, 0.029689608636977057, ["cmp     esi, 7", "setz    dl", "cmp     esi, 1", "jnz     loc_6E90"], ["cmp~esi,0", "setz~dl", "cmp~esi,0", "jnz~FOO"]], [1, 0, 14, 0, 0, 3, 0, 1, 7, 4, 0.0816464237516869, ["cmp     r8d, 4000h", "setz    r8b", "jmp     short loc_6E5A"], ["cmp~r8d,0", "setz~r8b", "jmp~FOO"]], [2, 0, 17, 0, 0, 4, 1, 1, 6, 3, 0.11470985155195682, ["mov     r8d, ecx", "and     r8d, 0F000h", "cmp     r8d, 8000h", "jnz     loc_6EB8"], ["mov~r8d,ecx", "and~r8d,0", "cmp~r8d,0", "jnz~FOO"]], [2, 0, 3, 0, 0, 3, 0, 1, 13, 2, 0.004048582995951417, ["cmp     dl, 1", "sbb     len, 0FFFFFFFFFFFFFFFFh", "jmp     loc_6DB8"], ["cmp~dl,0", "sbb~len,0", "jmp~FOO"]], [2, 0, 31, 1, 0, 4, 0, 1, 2, 5, 0.015519568151147098, ["movsxd  rbx, cs:inode_number_width", "add     rbx, 1", "cmp     cs:print_block_size, 0", "jz      loc_6EA0"], ["movsxd~rbx,<TAG>", "add~rbx,0", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 11, 4, 0.06376518218623481, ["cmp     esi, 6", "jnz     short loc_6F18"], ["cmp~esi,0", "jnz~FOO"]], [1, 0, 25, 0, 0, 2, 0, 1, 3, 4, 0.02834008097165992, ["cmp     cs:print_scontext, 0", "jnz     loc_6D45"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 28, 1, 0, 2, 0, 0, 3, 5, 0.014507422402159244, ["movsxd  rax, cs:block_size_width", "add     rax, 1"], ["movsxd~rax,<TAG>", "add~rax,0"]], [1, 0, 4, 0, 0, 2, 0, 1, 7, 2, 0.016194331983805668, ["cmp     edx, 3", "jnz     short loc_6DB8"], ["cmp~edx,0", "jnz~FOO"]], [0, 0, 27, 1, 0, 1, 0, 0, 4, 4, 0.07489878542510121, ["add     len, rax"], ["add~len,rax"]], [1, 1, 28, 1, 2, 10, 0, 3, 5, 5, 0.0, ["mov     rdi, [f+58h]; n", "mov     r8, cs:output_block_size; to_block_size", "mov     rsi, rsp; buf", "mov     edx, cs:human_output_opts; opts", "mov     ecx, 200h; from_block_size", "call    human_readable", "mov     rdi, rax; s", "call    _strlen", "add     rax, 1", "jmp     loc_6D2C"], ["mov~rdi,[f+0]", "mov~r8,<TAG>", "mov~rsi,rsp", "mov~edx,<TAG>", "mov~ecx,<STR>", "call~FOO", "mov~rdi,rax", "call~FOO", "add~rax,0", "jmp~FOO"]], [0, 0, 22, 0, 0, 1, 0, 1, 4, 3, 0.03711201079622132, ["jmp     loc_6D53"], ["jmp~FOO"]], [3, 0, 3, 0, 0, 4, 1, 0, 8, 2, 0.0, ["and     ecx, 49h", "cmp     ecx, 1", "sbb     len, 0FFFFFFFFFFFFFFFFh", "nop     dword ptr [rax]"], ["and~ecx,0", "cmp~ecx,0", "sbb~len,0", "nop~<TAG>"]], [1, 0, 26, 0, 0, 2, 0, 1, 3, 3, 0.16666666666666666, ["cmp     cs:print_scontext, 0", "jz      short loc_6D53"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 32, 0, 0, 2, 0, 1, 2, 4, 0.07354925775978408, ["cmp     cs:print_block_size, 0", "jz      loc_6D2F"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 3, 1, 0, 2, 0, 1, 9, 2, 0.013157894736842105, ["add     len, 1", "jmp     loc_6DB8"], ["add~len,0", "jmp~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 8, 3, 0.16599190283400808, ["test    r8b, r8b", "jnz     loc_6EF0"], ["test~r8b,r8b", "jnz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 12, 3, 0.0016869095816464236, ["nop     dword ptr [len]"], ["nop~<TAG>"]], [0, 0, 33, 0, 2, 7, 0, 3, 2, 5, 0.012145748987854251, ["mov     f, [f+20h]; i", "mov     rsi, rsp; buf", "call    umaxtostr", "mov     rdi, rax; s", "call    _strlen", "lea     rbx, [rax+1]", "jmp     loc_6DE2"], ["mov~f,[f+0]", "mov~rsi,rsp", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rbx,[rax+0]", "jmp~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 6, 2, 0.08974358974358974, ["cmp     esi, 5", "jz      loc_6DB8"], ["cmp~esi,0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 5, 1, 0.04993252361673414, ["mov     rcx, [rsp+2B8h+var_20]", "xor     rcx, fs:28h", "jnz     loc_6F29"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 9, 2, 0.13798920377867746, ["cmp     edx, 1", "jz      loc_6DB8"], ["cmp~edx,0", "jz~FOO"]], [1, 0, 23, 1, 0, 2, 0, 0, 4, 4, 0.013495276653171389, ["movsxd  rax, cs:scontext_width", "add     rax, 1"], ["movsxd~rax,<TAG>", "add~rax,0"]], [0, 0, 22, 1, 0, 1, 0, 0, 5, 3, 0.044534412955465584, ["add     len, rax"], ["add~len,rax"]], [2, 0, 14, 0, 0, 5, 1, 0, 7, 4, 0.0816464237516869, ["cmp     esi, 3", "setz    r8b", "cmp     esi, 9", "setz    r9b", "or      r8d, r9d"], ["cmp~esi,0", "setz~r8b", "cmp~esi,0", "setz~r9b", "or~r8d,r9d"]], [1, 0, 0, 1, 0, 4, 0, 0, 6, -1, 0.0, ["add     rsp, 2A8h", "pop     rbx", "pop     f", "retn"], ["add~rsp,0", "pop~rbx", "pop~f", "retn"]], [0, 0, 33, 0, 0, 1, 1, 0, 1, 5, 0.019568151147098516, ["xor     ebx, ebx"], ["xor~ebx,ebx"]], [0, 0, 11, 0, 0, 2, 1, 1, 10, 4, 0.12348178137651822, ["test    dil, dil", "jz      short loc_6EE8"], ["test~dil,dil", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [7, 11, 37, 1, 40, 60, 5, 124, 0.05125, 12, 11], "succs": [[29, 15], [0, 37], [20, 21], [2, 18], [13, 30], [4, 31], [26, 14], [26, 6], [34], [8, 33], [26], [10, 14], [27], [19, 12], [31], [17, 18], [11, 28], [33, 22], [20], [31, 23], [24], [20], [5], [31], [9, 5], [24, 3], [31], [32, 26], [26], [25], [35, 31], [36, 39], [38, 31], [34], [5], [27], [], [25], [16, 7], []], "fname": "length_of_file_name_and_frills", "n_num": 40}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 23, 2, 0, 7, 0, 0, 0, 0, 0.0, ["mov     r13, [rcx+8]", "add     r13, rax", "sub     r13, rdx", "mov     [rcx+8], r13", "mov     [rsi], rax", "cmp     r10, [rcx+8]", "setnbe  byte ptr [rcx]"], ["mov~r13,[rcx+0]", "add~r13,rax", "sub~r13,rdx", "mov~[rcx+0],r13", "mov~<TAG>,rax", "cmp~r10,[rcx+0]", "setnbe~<TAG>"]], [0, 0, 23, 1, 0, 11, 1, 0, 8, -1, 0.013749338974087784, ["xor     edx, edx", "mov     rax, filesno", "div     rdi", "mov     rax, name_length", "cmp     rsi, idx", "mov     rsi, [rcx+10h]", "cmovnz  rax, r11", "lea     rsi, [rsi+idx*8]", "mov     idx, [rsi]", "cmp     rdx, rax", "jnb     short loc_7203"], ["xor~edx,edx", "mov~rax,filesno", "div~,rdi", "mov~rax,name_length", "cmp~rsi,idx", "mov~rsi,[rcx+0]", "cmovnz~rax,r11", "lea~rsi,<TAG>", "mov~idx,<TAG>", "cmp~rdx,rax", "jnb~FOO"]], [1, 0, 55, 1, 0, 5, 1, 0, 2, -1, 0.010312004230565839, ["mov     edx, 18h", "xor     esi, esi", "mov     rax, rdx", "mul     rcx", "jo      loc_7346"], ["mov~edx,0", "xor~esi,esi", "mov~rax,rdx", "mul~,rcx", "jo~FOO"]], [1, 0, 61, 0, 0, 5, 0, 0, 1, 2, 0.005552617662612374, ["mov     rax, rcx", "mov     by_columns, cs:column_info_0; p", "shr     rax, 1", "cmp     max_cols, rax", "jb      loc_730F"], ["mov~rax,rcx", "mov~by_columns,<TAG>", "shr~rax,0", "cmp~max_cols,rax", "jb~FOO"]], [2, 0, 48, 1, 0, 6, 1, 0, 8, -1, 0.1634056054997356, ["mov     edx, 8", "shr     rcx, 1", "xor     esi, esi", "mov     rax, rdx", "mul     rcx", "jo      loc_7355"], ["mov~edx,0", "shr~rcx,0", "xor~esi,esi", "mov~rax,rdx", "mul~,rcx", "jo~FOO"]], [0, 0, 49, 1, 0, 5, 1, 1, 7, -1, 0.15441565309360128, ["xor     edx, edx", "mov     rax, rcx", "div     rdi", "cmp     rsi, rax", "jnz     loc_7350"], ["xor~edx,edx", "mov~rax,rcx", "div~,rdi", "cmp~rsi,rax", "jnz~FOO"]], [1, 0, 23, 1, 0, 3, 0, 0, 9, -1, 0.02551560021152829, ["add     filesno, 1", "cmp     filesno, r9", "jb      loc_7180"], ["add~filesno,0", "cmp~filesno,r9", "jb~FOO"]], [1, 0, 23, 1, 0, 4, 0, 1, 8, -1, 0.03529878371232152, ["add     rcx, 18h", "cmp     max_cols, rdi", "mov     rsi, rdi", "jnz     short loc_71C0"], ["add~rcx,0", "cmp~max_cols,rdi", "mov~rsi,rdi", "jnz~FOO"]], [1, 0, 51, 1, 1, 6, 0, 2, 5, -1, 0.060814383923849816, ["lea     r12, [max_cols+max_cols+0]", "lea     rsi, [r12+max_cols]", "shl     rsi, 4; n", "call    xrealloc", "mov     cs:column_info_0, rax", "jmp     loc_6FB5"], ["lea~r12,[max_cols+0]", "lea~rsi,<TAG>", "shl~rsi,0", "call~FOO", "mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 52, 0, 0, 2, 1, 1, 4, -1, 0.04891591750396616, ["test    rcx, rcx", "jnz     short loc_7350"], ["test~rcx,rcx", "jnz~FOO"]], [0, 0, 38, 0, 0, 2, 1, 1, 4, -1, 0.05684822845055526, ["xor     eax, eax", "jmp     loc_7111"], ["xor~eax,eax", "jmp~FOO"]], [4, 0, 38, 0, 0, 9, 1, 0, 3, -1, 0.10153358011634056, ["mov     r8, [r9+rdi*8-8]", "mov     byte ptr [r9+rdi*8-18h], 1", "lea     r10, [rsi+1]", "mov     [r9+rdi*8-10h], rdi", "mov     rax, r8", "shr     rax, 3", "and     eax, 1", "cmp     rsi, 4", "jbe     loc_7308"], ["mov~r8,[r9+0]", "mov~[yte ptr [r9+0],0", "lea~r10,[rsi+0]", "mov~[r9+0],rdi", "mov~rax,r8", "shr~rax,0", "and~eax,0", "cmp~rsi,0", "jbe~FOO"]], [0, 0, 53, 0, 0, 2, 1, 1, 3, -1, 0.0372818614489688, ["test    rax, rax", "js      loc_7350"], ["test~rax,rax", "js~FOO"]], [1, 0, 54, 0, 0, 2, 0, 1, 3, -1, 0.0, ["mov     esi, 1", "jmp     loc_6F88"], ["mov~esi,0", "jmp~FOO"]], [0, 0, 46, 0, 0, 2, 1, 1, 9, -1, 0.18032786885245902, ["test    rax, rax", "js      loc_7350"], ["test~rax,rax", "js~FOO"]], [1, 0, 47, 0, 0, 2, 0, 1, 9, -1, 0.0, ["mov     esi, 1", "jmp     loc_7009"], ["mov~esi,0", "jmp~FOO"]], [1, 0, 38, 0, 0, 4, 0, 0, 7, -1, 0.018244315177154944, ["mov     qword ptr [r8+rdx*8], 3", "lea     rdx, [rax+3]", "cmp     rsi, rdx", "jb      short loc_715D"], ["mov~<TAG>,0", "lea~rdx,[rax+0]", "cmp~rsi,rdx", "jb~FOO"]], [1, 0, 38, 0, 0, 4, 0, 0, 6, -1, 0.026969857218402962, ["mov     qword ptr [r8+rdx*8], 3", "lea     rdx, [rax+2]", "cmp     rsi, rdx", "jb      short loc_715D"], ["mov~<TAG>,0", "lea~rdx,[rax+0]", "cmp~rsi,rdx", "jb~FOO"]], [1, 0, 38, 0, 0, 5, 1, 1, 7, -1, 0.03648863035430989, ["mov     rdx, r13", "and     rdx, 0FFFFFFFFFFFFFFFEh", "cmp     r13, rdx", "lea     rax, [rcx+rdx]", "jz      short loc_715D"], ["mov~rdx,r13", "and~rdx,0", "cmp~r13,rdx", "lea~rax,<TAG>", "jz~FOO"]], [2, 0, 38, 2, 0, 5, 0, 1, 6, -1, 0.03622421998942359, ["add     rax, 1", "add     rdx, 10h", "movaps  xmmword ptr [rdx-10h], xmm0", "cmp     r12, rax", "ja      short loc_70F0"], ["add~rax,0", "add~rdx,0", "movaps~[mmword ptr [rdx-10h]+0],xmm0", "cmp~r12,rax", "ja~FOO"]], [0, 0, 52, 0, 0, 2, 1, 1, 4, -1, 0.04891591750396616, ["test    rsi, rsi", "jnz     loc_7350"], ["test~rsi,rsi", "jnz~FOO"]], [0, 0, 45, 0, 0, 2, 1, 1, 10, -1, 0.1872025383395029, ["test    rsi, rsi", "jnz     loc_7350"], ["test~rsi,rsi", "jnz~FOO"]], [0, 0, 23, 0, 1, 6, 1, 2, 4, -1, 0.20571126388154415, ["mov     rax, cs:sorted_file", "mov     rdi, [rax+filesno*8]; f", "call    length_of_file_name_and_frills", "test    max_cols, max_cols", "mov     r8, rax", "jz      loc_72E8"], ["mov~rax,<TAG>", "mov~rdi,<TAG>", "call~FOO", "test~max_cols,max_cols", "mov~r8,rax", "jz~FOO"]], [1, 0, 23, 1, 0, 3, 0, 0, 9, -1, 0.03662083553675304, ["add     filesno, 1", "cmp     filesno, r9", "jb      loc_7180"], ["add~filesno,0", "cmp~filesno,r9", "jb~FOO"]], [1, 0, 23, 1, 0, 4, 0, 0, 5, -1, 0.01718667371760973, ["mov     r9, cs:cwd_n_used", "add     filesno, 1", "cmp     filesno, r9", "jb      loc_7180"], ["mov~r9,<TAG>", "add~filesno,0", "cmp~filesno,r9", "jb~FOO"]], [0, 0, 23, 0, 0, 2, 1, 0, 3, -1, 0.1708090957165521, ["xor     r12d, r12d", "nop     dword ptr [rax+00000000h]"], ["xor~r12d,r12d", "nop~[word ptr [rax+0]"]], [1, 0, 38, 0, 0, 5, 1, 0, 2, -1, 0.07905869910100476, ["mov     r9, cs:column_info_0", "mov     edi, 3", "xor     esi, esi", "movdqa  xmm0, cs:xmmword_20CF0", "nop     dword ptr [rax+rax+00000000h]"], ["mov~r9,<TAG>", "mov~edi,0", "xor~esi,esi", "movdqa~xmm0,<TAG>", "nop~[word ptr [rax+0]"]], [0, 0, 39, 0, 0, 2, 1, 1, 1, -1, 0.22686409307244845, ["test    max_cols, max_cols", "jz      loc_716D"], ["test~max_cols,max_cols", "jz~FOO"]], [1, 0, 55, 1, 0, 5, 1, 0, 2, 1, 0.010312004230565839, ["mov     edx, 30h ; '0'", "xor     ecx, ecx", "mov     rax, rdx", "mul     max_cols", "jo      short loc_735F"], ["mov~edx,0", "xor~ecx,ecx", "mov~rax,rdx", "mul~,max_cols", "jo~FOO"]], [1, 0, 38, 0, 0, 4, 0, 1, 5, -1, 0.06372289793759915, ["lea     rdx, [rax+1]", "mov     qword ptr [r8+rax*8], 3", "cmp     rdx, rsi", "ja      short loc_715D"], ["lea~rdx,[rax+0]", "mov~<TAG>,0", "cmp~rdx,rsi", "ja~FOO"]], [0, 0, 53, 0, 0, 2, 1, 1, 3, -1, 0.0372818614489688, ["test    rax, rax", "js      short loc_7350"], ["test~rax,rax", "js~FOO"]], [1, 0, 54, 0, 0, 2, 0, 1, 3, 0, 0.0, ["mov     ecx, 1", "jmp     short loc_731E"], ["mov~ecx,0", "jmp~FOO"]], [1, 0, 23, 1, 0, 4, 0, 1, 8, -1, 0.04640401903754627, ["add     rcx, 18h", "cmp     max_cols, rdi", "mov     rsi, rdi", "jnz     short loc_7270"], ["add~rcx,0", "cmp~max_cols,rdi", "mov~rsi,rdi", "jnz~FOO"]], [1, 0, 23, 0, 0, 3, 0, 1, 7, -1, 0.0709941829719725, ["cmp     byte ptr [rcx], 0", "lea     rdi, [rsi+1]", "jz      short loc_72C3"], ["cmp~<TAG>,0", "lea~rdi,[rsi+0]", "jz~FOO"]], [0, 0, 23, 2, 0, 15, 2, 0, 8, -1, 0.013749338974087784, ["lea     rax, [r13+rdi+0]", "xor     edx, edx", "div     rdi", "xor     edx, edx", "mov     r14, rax", "mov     rax, filesno", "div     r14", "mov     rdx, name_length", "cmp     idx, rsi", "mov     rsi, [rcx+10h]", "cmovnz  rdx, r11", "lea     rsi, [rsi+idx*8]", "mov     idx, [rsi]", "cmp     rax, rdx", "jnb     short loc_72C3"], ["lea~rax,[r13+0]", "xor~edx,edx", "div~,rdi", "xor~edx,edx", "mov~r14,rax", "mov~rax,filesno", "div~,r14", "mov~rdx,name_length", "cmp~idx,rsi", "mov~rsi,[rcx+0]", "cmovnz~rdx,r11", "lea~rsi,<TAG>", "mov~idx,<TAG>", "cmp~rax,rdx", "jnb~FOO"]], [0, 0, 23, 2, 0, 8, 0, 0, 9, -1, 0.0, ["mov     r14, [rcx+8]", "sub     r14, rax", "mov     rax, r14", "add     rax, rdx", "mov     [rcx+8], rax", "mov     [rsi], rdx", "cmp     [rcx+8], r10", "setb    byte ptr [rcx]"], ["mov~r14,[rcx+0]", "sub~r14,rax", "mov~rax,r14", "add~rax,rdx", "mov~[rcx+0],rax", "mov~<TAG>,rdx", "cmp~[rcx+0],r10", "setb~<TAG>"]], [0, 0, 6, 0, 0, 1, 0, 1, 6, -1, 0.004759386567953464, ["jmp     loc_721C"], ["jmp~FOO"]], [0, 0, 6, 0, 0, 1, 0, 1, 10, -1, 0.009518773135906928, ["jmp     loc_721C"], ["jmp~FOO"]], [1, 0, 51, 1, 1, 5, 0, 1, 5, -1, 0.060814383923849816, ["lea     rsi, [rcx+rcx*2]", "shl     rsi, 3; n", "call    xrealloc", "mov     r12, cs:max_idx", "mov     cs:column_info_0, rax"], ["lea~rsi,<TAG>", "shl~rsi,0", "call~FOO", "mov~r12,<TAG>", "mov~<TAG>,rax"]], [0, 0, 43, 0, 1, 5, 0, 1, 11, -1, 0.1940772078265468, ["lea     rdi, ds:0[rcx*8]; n", "call    xmalloc", "mov     rdx, cs:column_info_alloc_11173", "cmp     r12, rdx", "jbe     short loc_706B"], ["lea~rdi,<TAG>", "call~FOO", "mov~rdx,<TAG>", "cmp~r12,rdx", "jbe~FOO"]], [0, 0, 23, 0, 0, 6, 2, 1, 5, -1, 0.16631411951348493, ["xor     esi, esi", "test    bl, bl", "mov     rcx, cs:column_info_0", "mov     r9, cs:cwd_n_used", "mov     r10, cs:line_length", "jnz     loc_7260"], ["xor~esi,esi", "test~bl,bl", "mov~rcx,<TAG>", "mov~r9,<TAG>", "mov~r10,<TAG>", "jnz~FOO"]], [2, 0, 4, 1, 0, 5, 0, 1, 4, -1, 0.0452141723955579, ["mov     rdx, cs:column_info_0", "lea     rax, [max_cols+max_cols*2+0]", "shl     rax, 3", "cmp     byte ptr [rdx+rax-18h], 0", "jnz     short loc_7254"], ["mov~rdx,<TAG>", "lea~rax,[max_cols+0]", "shl~rax,0", "cmp~[yte ptr [rdx+0],0", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 0, 3, -1, 0.074034902168165, ["cmp     max_cols, 1", "jbe     short loc_7254"], ["cmp~max_cols,0", "jbe~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 5, -1, 0.03067160232681121, ["lea     rax, [rdx+rax-30h]", "jmp     short loc_724A"], ["lea~rax,[rdx+0]", "jmp~FOO"]], [0, 0, 23, 0, 0, 2, 0, 0, 6, -1, 0.06649920676890535, ["lea     r11, [name_length+2]", "nop"], ["lea~r11,[name_length+0]", "nop"]], [0, 0, 24, 0, 0, 2, 1, 1, 2, -1, 0.23479640401903754, ["test    r11, r11", "jz      loc_721C"], ["test~r11,r11", "jz~FOO"]], [1, 0, 38, 1, 0, 4, 0, 1, 6, -1, 0.1047065044949762, ["add     rdi, 3", "cmp     max_cols, r10", "mov     rsi, r10", "jnz     loc_70A0"], ["add~rdi,0", "cmp~max_cols,r10", "mov~rsi,r10", "jnz~FOO"]], [1, 0, 23, 0, 0, 3, 0, 1, 7, -1, 0.05988894764674775, ["cmp     byte ptr [rcx], 0", "lea     rdi, [rsi+1]", "jz      short loc_7203"], ["cmp~<TAG>,0", "lea~rdi,[rsi+0]", "jz~FOO"]], [2, 0, 3, 1, 0, 3, 0, 1, 7, -1, 0.0, ["sub     rax, 18h", "cmp     byte ptr [rax+18h], 0", "jnz     short loc_7254"], ["sub~rax,0", "cmp~[yte ptr [rax+0],0", "jnz~FOO"]], [2, 0, 3, 1, 0, 3, 0, 1, 6, -1, 0.015864621893178214, ["sub     cols, 1", "cmp     cols, 1", "jnz     short loc_7240"], ["sub~cols,0", "cmp~cols,0", "jnz~FOO"]], [0, 0, 23, 0, 0, 3, 0, 0, 6, -1, 0.07760444209413009, ["lea     r13, [r9-1]", "lea     r11, [name_length+2]", "nop     dword ptr [rax+rax+00000000h]"], ["lea~r13,[r9-1]+0]", "lea~r11,[name_length+0]", "nop~[word ptr [rax+0]"]], [0, 0, 38, 0, 0, 3, 2, 1, 4, -1, 0.035430988894764676, ["xor     ecx, ecx", "test    rax, rax", "jz      short loc_70D9"], ["xor~ecx,ecx", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 50, 4, 0, 12, 1, 1, 6, -1, 0.14542570068746694, ["mov     rax, cs:column_info_alloc_11173", "mov     rdi, r12", "sub     rdi, rax", "add     rax, 1", "add     rax, r12", "mov     rcx, rdi", "mov     rsi, rax", "setb    al", "movzx   eax, al", "imul    rcx, rsi", "test    rax, rax", "jnz     loc_7350"], ["mov~rax,<TAG>", "mov~rdi,r12", "sub~rdi,rax", "add~rax,0", "add~rax,r12", "mov~rcx,rdi", "mov~rsi,rax", "setb~al", "movzx~eax,al", "imul~rcx,rsi", "test~rax,rax", "jnz~FOO"]], [2, 0, 38, 1, 0, 4, 0, 0, 8, -1, 0.009254362771020624, ["add     rax, 4", "mov     qword ptr [r8+rdx*8], 3", "cmp     rsi, rax", "jb      short loc_715D"], ["add~rax,0", "mov~<TAG>,0", "cmp~rsi,rax", "jb~FOO"]], [0, 0, 42, 0, 0, 6, 0, 0, 12, -1, 0.005023796932839768, ["mov     rcx, cs:column_info_0", "lea     rsi, [rdx+rdx*2]", "lea     rdx, ds:8[rdx*8]", "lea     rcx, [rcx+rsi*8+10h]", "lea     rsi, ds:8[r12*8]", "nop     dword ptr [rax+00h]"], ["mov~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdx,<TAG>", "lea~rcx,[rcx+0]", "lea~rsi,<TAG>", "nop~[word ptr [rax+0]"]], [1, 0, 38, 0, 0, 1, 0, 0, 9, -1, 0.0, ["mov     qword ptr [r8+rax*8], 3"], ["mov~<TAG>,0"]], [1, 0, 38, 0, 0, 2, 0, 0, 5, -1, 0.0, ["mov     qword ptr [r8], 3", "mov     rcx, rax"], ["mov~<TAG>,0", "mov~rcx,rax"]], [0, 0, 62, 0, 0, 13, 0, 0, 0, 3, 0.0, ["mov     r11, cs:cwd_n_used", "mov     rcx, cs:max_idx", "push    r14", "push    r13", "push    r12", "push    rbp", "cmp     r11, rcx", "mov     rbp, rcx", "push    rbx", "cmovbe  rbp, r11", "cmp     max_cols, cs:column_info_alloc_11173", "mov     ebx, edi", "jbe     loc_7079"], ["mov~r11,<TAG>", "mov~rcx,<TAG>", "push~r14", "push~r13", "push~r12", "push~rbp", "cmp~r11,rcx", "mov~rbp,rcx", "push~rbx", "cmovbe~rbp,r11", "cmp~max_cols,<TAG>", "mov~ebx,edi", "jbe~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 4, -1, 0.0, ["pop     by_columns", "mov     rax, cols", "pop     cols", "pop     r12", "pop     r13", "pop     r14", "retn"], ["pop~by_columns", "mov~rax,cols", "pop~cols", "pop~r12", "pop~r13", "pop~r14", "retn"]], [2, 0, 42, 3, 0, 6, 0, 1, 13, -1, 0.010840824960338445, ["mov     [rcx], rax", "add     rax, rdx", "add     rdx, 8", "add     rcx, 18h", "cmp     rdx, rsi", "jnz     short loc_7058"], ["mov~<TAG>,rax", "add~rax,rdx", "add~rdx,0", "add~rcx,0", "cmp~rdx,rsi", "jnz~FOO"]], [1, 0, 38, 1, 0, 7, 1, 0, 5, -1, 0.03595980962453728, ["mov     r13, r10", "lea     rdx, [r8+rax*8]", "sub     r13, rax", "xor     eax, eax", "mov     r12, r13", "shr     r12, 1", "nop     dword ptr [rax+rax+00h]"], ["mov~r13,r10", "lea~rdx,<TAG>", "sub~r13,rax", "xor~eax,eax", "mov~r12,r13", "shr~r12,0", "nop~[word ptr [rax+0]"]], [0, 0, 40, 0, 0, 2, 0, 0, 12, -1, 0.21152829190904282, ["mov     r11, cs:cwd_n_used", "mov     cs:column_info_alloc_11173, r12"], ["mov~r11,<TAG>", "mov~<TAG>,r12"]]], "func_feature": [5, 27, 38, 0, 63, 102, 2, 271, 0.06071, 8, 33], "succs": [[7], [0, 7], [12, 13], [2, 28], [14, 15], [52, 4], [42, 22], [6, 47], [53], [8, 52], [29], [10, 51], [52, 20], [12], [52, 21], [14], [46, 54], [16, 46], [29, 46], [18, 19], [52, 38], [52, 39], [40, 24], [37, 22], [36, 22], [22], [11], [26, 45], [30, 31], [17, 46], [9, 52], [30], [33, 23], [32, 34], [32, 35], [32], [42], [42], [53], [62, 55], [50, 44], [59, 43], [41, 59], [49], [47], [25, 42], [11, 45], [1, 7], [49, 59], [48, 59], [33], [57, 61], [], [52, 5], [56, 46], [60], [46], [61], [27, 3], [], [60, 62], [19], [27]], "fname": "calculate_columns", "n_num": 63}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 8, 0, 0, 1, 0, 0, 0, 0, 0.026143790849673203, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 10, 0, 0, 2, 0, 1, 4, 4, 0.0196078431372549, ["cmp     edx, 4000h", "jz      short loc_73CE"], ["cmp~edx,0", "jz~FOO"]], [1, 0, 14, 0, 0, 4, 2, 1, 2, 4, 0.032679738562091505, ["mov     edx, [a+0ACh]", "and     edx, 0F000h", "test    al, al", "jz      short loc_73D8"], ["mov~edx,[a+0]", "and~edx,0", "test~al,al", "jz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 1, 4, 0.0196078431372549, ["cmp     ecx, 9", "jz      short loc_73B8"], ["cmp~ecx,0", "jz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 4, -1, 0.09259259259259257, ["mov     rsi, rax; s2", "mov     rdi, rbp; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_7458"], ["mov~rsi,rax", "mov~rdi,rbp", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 3, 1, 0.10893246187363834, ["test    rbp, rbp", "lea     rax, a8+6; \"\"", "jnz     short loc_7435"], ["test~rbp,rbp", "lea~rax,<TAG>", "jnz~FOO"]], [0, 0, 4, 0, 0, 3, 1, 0, 3, -1, 0.05446623093681917, ["lea     rdx, a8+6; \"\"", "test    rbp, rbp", "cmovz   rbp, rdx"], ["lea~rdx,<TAG>", "test~rbp,rbp", "cmovz~rbp,rdx"]], [2, 0, 7, 0, 2, 15, 1, 3, 2, 2, 0.2058823529411765, ["push    r12", "push    rbp", "push    rbx", "mov     r12, [a]", "mov     rbx, b", "mov     esi, 2Eh ; '.'; c", "mov     a, r12; s", "call    _strrchr", "mov     b, [b]", "mov     esi, 2Eh ; '.'; c", "mov     rbp, rax", "mov     rdi, rbx; s", "call    _strrchr", "test    rax, rax", "jz      short loc_7460"], ["push~r12", "push~rbp", "push~rbx", "mov~r12,<TAG>", "mov~rbx,b", "mov~esi,0", "mov~a,r12", "call~FOO", "mov~b,<TAG>", "mov~esi,0", "mov~rbp,rax", "mov~rdi,rbx", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 3, 3, 0.06535947712418301, ["cmp     edx, 4000h", "jz      short loc_73F8"], ["cmp~edx,0", "jz~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 1, 3, 0.06535947712418301, ["test    al, al", "jnz     short loc_73F8"], ["test~al,al", "jnz~FOO"]], [2, 0, 9, 0, 0, 4, 1, 1, 2, 3, 0.00980392156862745, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_73F8"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [2, 0, 13, 0, 0, 4, 1, 1, 3, 4, 0.022875816993464054, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_73A4"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 1, 4, 0, 0.025054466230936823, ["jmp     short loc_7444"], ["jmp~FOO"]], [3, 0, 18, 0, 0, 9, 1, 1, 0, 4, 0.0, ["mov     edx, [b+0A8h]", "mov     ecx, [a+0A8h]", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      eax, edx", "cmp     ecx, 3", "jz      short loc_73B8"], ["mov~edx,[b+0]", "mov~ecx,[a+0]", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~eax,edx", "cmp~ecx,0", "jz~FOO"]], [0, 0, 1, 0, 0, 6, 0, 1, 5, -1, 0.04575163398692811, ["mov     rsi, rbx; s2", "mov     rdi, r12; s1", "pop     rbx", "pop     rbp", "pop     r12", "jmp     _strcmp"], ["mov~rsi,rbx", "mov~rdi,r12", "pop~rbx", "pop~rbp", "pop~r12", "jmp~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [1, 0, 0, 0, 0, 2, 0, 0, 3, -1, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []], [0, 0, 0, 0, 0, 4, 0, 0, 5, -1, 0.0, ["pop     rbx", "pop     rbp", "pop     r12", "retn"], ["pop~rbx", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [3, 10, 16, 0, 19, 26, 0, 71, 0.0418, 1, 0], "succs": [[7], [0, 16], [8, 11], [9, 2], [18, 14], [12, 4], [4], [5, 6], [15, 7], [10, 7], [16, 7], [8, 1], [14], [9, 3], [17], [], [], [], []], "fname": "strcmp_df_extension", "n_num": 19}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 12, 0, 0, 4, 2, 1, 0, 0, 0.03958333333333333, ["mov     edx, [a+0ACh]", "and     edx, 0F000h", "test    al, al", "jz      short loc_74D8"], ["mov~edx,[a+0]", "and~edx,0", "test~al,al", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 1, 5, 0.022916666666666665, ["cmp     ecx, 9", "jz      short loc_74B8"], ["cmp~ecx,0", "jz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 2, 3, 0.20208333333333334, ["mov     rax, [b+80h]", "cmp     [a+80h], rax", "jg      short loc_74CE"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 3, 4, 0.06041666666666667, ["cmp     edx, 4000h", "jz      short loc_74F8"], ["cmp~edx,0", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 4, 0.06875, ["test    al, al", "jnz     short loc_74F8"], ["test~al,al", "jnz~FOO"]], [2, 0, 8, 0, 0, 4, 1, 1, 2, 4, 0.0125, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_74F8"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 5, 4, 0.025, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [2, 0, 11, 0, 0, 4, 1, 1, 3, 5, 0.029166666666666667, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_74A4"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 4, 5, 0.029166666666666667, ["cmp     edx, 4000h", "jz      short loc_74CE"], ["cmp~edx,0", "jz~FOO"]], [3, 0, 16, 0, 0, 9, 1, 1, 0, 5, 0.0, ["mov     edx, [b+0A8h]", "mov     ecx, [a+0A8h]", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      eax, edx", "cmp     ecx, 3", "jz      short loc_74B8"], ["mov~edx,[b+0]", "mov~ecx,[a+0]", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~eax,edx", "cmp~ecx,0", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, -1, 0.041666666666666664, ["mov     eax, 0FFFFFFFFh"], ["mov~eax,0"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, 2, 0.14791666666666667, ["jl      short loc_74AC"], ["jl~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, 1, 0.09583333333333333, ["mov     rax, [b+88h]", "sub     eax, [a+88h]", "jnz     short locret_74D3"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 5, 0, 0.05, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]]], "func_feature": [0, 6, 12, 0, 17, 25, 0, 44, 0.04853, 0, 1], "succs": [[3, 7], [0, 4], [10, 12], [2, 11], [2, 5], [2, 10], [2], [8, 3], [10, 6], [1, 4], [13], [], [11, 14], [], [16, 13], [], [15]], "fname": "strcmp_df_ctime", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 7, 0, 0, 3, 0, 1, 0, 0, 0.20208333333333334, ["mov     rax, [a+60h]", "cmp     [b+60h], rax", "jg      short loc_758E"], ["mov~rax,[a+0]", "cmp~[b+0],rax", "jg~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 3, 4, 0.06041666666666667, ["cmp     ecx, 4000h", "jz      short loc_75B8"], ["cmp~ecx,0", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 4, 0.06875, ["test    al, al", "jnz     short loc_75B8"], ["test~al,al", "jnz~FOO"]], [2, 0, 8, 0, 0, 4, 1, 1, 2, 4, 0.0125, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_75B8"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 5, 4, 0.025, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 9, 0, 0, 2, 0, 1, 4, 5, 0.029166666666666667, ["cmp     ecx, 4000h", "jz      short loc_758E"], ["cmp~ecx,0", "jz~FOO"]], [2, 0, 11, 0, 0, 4, 1, 1, 3, 5, 0.029166666666666667, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_7567"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, 2, 0.14791666666666667, ["jl      short loc_756F"], ["jl~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 5, 0, 0.05, ["mov     rsi, [a]; s2", "mov     a, [b]; s1", "jmp     _strcmp"], ["mov~rsi,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, 1, 0.09583333333333333, ["mov     rax, [a+68h]", "sub     eax, [b+68h]", "jnz     short locret_7593"], ["mov~rax,[a+0]", "sub~eax,[b+0]", "jnz~FOO"]], [1, 0, 12, 0, 0, 4, 2, 1, 2, 5, 0.03958333333333333, ["mov     ecx, [a+0ACh]", "and     ecx, 0F000h", "test    al, al", "jz      short loc_7598"], ["mov~ecx,[a+0]", "and~ecx,0", "test~al,al", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 1, 5, 0.022916666666666665, ["cmp     esi, 9", "jz      short loc_7578"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, -1, 0.041666666666666664, ["mov     eax, 0FFFFFFFFh"], ["mov~eax,0"]], [3, 0, 16, 0, 0, 10, 1, 1, 0, 5, 0.0, ["mov     rdx, b", "mov     esi, [a+0A8h]", "mov     ecx, [b+0A8h]", "cmp     ecx, 3", "setz    al", "cmp     ecx, 9", "setz    cl", "or      eax, ecx", "cmp     esi, 3", "jz      short loc_7578"], ["mov~rdx,b", "mov~esi,[a+0]", "mov~ecx,[b+0]", "cmp~ecx,0", "setz~al", "cmp~ecx,0", "setz~cl", "or~eax,ecx", "cmp~esi,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []]], "func_feature": [0, 6, 12, 0, 17, 25, 0, 45, 0.04853, 0, 1], "succs": [[12, 7], [0, 15], [0, 3], [0, 12], [0], [4, 12], [1, 5], [9, 15], [16], [8, 14], [1, 6], [10, 2], [14], [2, 11], [], [], []], "fname": "rev_strcmp_df_atime", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 9, 0, 0, 2, 0, 1, 0, 0, 0.029166666666666667, ["cmp     edx, 4000h", "jz      short loc_763E"], ["cmp~edx,0", "jz~FOO"]], [2, 0, 11, 0, 0, 4, 1, 1, 3, 5, 0.029166666666666667, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_7614"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, 2, 0.14791666666666667, ["jl      short loc_761C"], ["jl~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 3, 4, 0.06041666666666667, ["cmp     edx, 4000h", "jz      short loc_7668"], ["cmp~edx,0", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 1, 5, 0.022916666666666665, ["cmp     ecx, 9", "jz      short loc_7628"], ["cmp~ecx,0", "jz~FOO"]], [3, 0, 16, 0, 0, 9, 1, 1, 0, 5, 0.0, ["mov     edx, [b+0A8h]", "mov     ecx, [a+0A8h]", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      eax, edx", "cmp     ecx, 3", "jz      short loc_7628"], ["mov~edx,[b+0]", "mov~ecx,[a+0]", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~eax,edx", "cmp~ecx,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, 1, 0.09583333333333333, ["mov     rax, [b+78h]", "sub     eax, [a+78h]", "jnz     short locret_7643"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, -1, 0.041666666666666664, ["mov     eax, 0FFFFFFFFh"], ["mov~eax,0"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 4, 0.06875, ["test    al, al", "jnz     short loc_7668"], ["test~al,al", "jnz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 5, 4, 0.025, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 7, 0, 0, 3, 0, 1, 2, 3, 0.20208333333333334, ["mov     rax, [b+70h]", "cmp     [a+70h], rax", "jg      short loc_763E"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [2, 0, 8, 0, 0, 4, 1, 1, 2, 4, 0.0125, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_7668"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 5, 0, 0.05, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [1, 0, 12, 0, 0, 4, 2, 1, 2, 5, 0.03958333333333333, ["mov     edx, [a+0ACh]", "and     edx, 0F000h", "test    al, al", "jz      short loc_7648"], ["mov~edx,[a+0]", "and~edx,0", "test~al,al", "jz~FOO"]]], "func_feature": [0, 6, 12, 0, 17, 25, 0, 44, 0.04853, 0, 1], "succs": [[9, 11], [0, 4], [], [8, 2], [2, 12], [16, 10], [10, 5], [], [15, 7], [7], [12, 13], [12], [9, 3], [9, 12], [], [14], [1, 4]], "fname": "strcmp_df_mtime", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[3, 0, 1, 2, 1, 13, 0, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbx, [a]", "mov     rbp, [b]", "call    ___errno_location", "mov     dword ptr [rax], 0", "add     rsp, 8", "mov     rsi, rbp; s2", "mov     rdi, rbx; s1", "pop     rbx", "pop     rbp", "jmp     _strcoll"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,<TAG>", "mov~rbp,<TAG>", "call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rsi,rbp", "mov~rdi,rbx", "pop~rbx", "pop~rbp", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 0, 2, 0, 2, 1, 0, 13, 0.0, 0, 2], "succs": [[1], []], "fname": "xstrcoll_name", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[3, 0, 1, 2, 1, 13, 0, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbx, [b]", "mov     rbp, [a]", "call    ___errno_location", "mov     dword ptr [rax], 0", "add     rsp, 8", "mov     rsi, rbp; s2", "mov     rdi, rbx; s1", "pop     rbx", "pop     rbp", "jmp     _strcoll"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,<TAG>", "mov~rbp,<TAG>", "call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rsi,rbp", "mov~rdi,rbx", "pop~rbx", "pop~rbp", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 0, 2, 0, 2, 1, 0, 13, 0.0, 0, 2], "succs": [[1], []], "fname": "rev_xstrcoll_name", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 5, 0, 0, 1, 0, 1, 1, -1, 0.11904761904761904, ["jl      short loc_7720"], ["jl~FOO"]], [0, 0, 7, 0, 0, 4, 0, 1, 0, 1, 0.0, ["mov     rax, [a+80h]", "cmp     [b+80h], rax", "mov     rdx, b", "jg      short loc_7730"], ["mov~rax,[a+0]", "cmp~[b+0],rax", "mov~rdx,b", "jg~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 3, 1, 0, 3, 0, 1, 2, -1, 0.11904761904761904, ["mov     rax, [a+88h]", "sub     eax, [b+88h]", "jnz     short locret_7725"], ["mov~rax,[a+0]", "sub~eax,[b+0]", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 1, 0, 0, 3, 0, 1, 3, -1, 0.07142857142857142, ["mov     b, [a]; s2", "mov     a, [b]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []]], "func_feature": [0, 0, 4, 0, 8, 8, 0, 15, 0.04167, 0, 1], "succs": [[3], [0, 4], [1, 5], [], [3, 6], [], [7], []], "fname": "rev_strcmp_ctime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 5, 0, 0, 1, 0, 1, 1, -1, 0.11904761904761904, ["jl      short loc_7760"], ["jl~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 3, -1, 0.07142857142857142, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 3, 1, 0, 3, 0, 1, 2, -1, 0.11904761904761904, ["mov     rax, [b+78h]", "sub     eax, [a+78h]", "jnz     short locret_7765"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 0, 1, 0.0, ["mov     rax, [b+70h]", "cmp     [a+70h], rax", "jg      short loc_7770"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]]], "func_feature": [0, 0, 4, 0, 8, 8, 0, 14, 0.04167, 0, 1], "succs": [[4], [0, 5], [], [2], [], [3, 4], [1, 7], []], "fname": "strcmp_mtime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 5, 0, 0, 1, 0, 1, 1, -1, 0.11904761904761904, ["jl      short loc_77B0"], ["jl~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 3, 0, 1, 0, 1, 0.0, ["mov     rax, [b+80h]", "cmp     [a+80h], rax", "jg      short loc_77C0"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 3, -1, 0.07142857142857142, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 2, -1, 0.11904761904761904, ["mov     rax, [b+88h]", "sub     eax, [a+88h]", "jnz     short locret_77B5"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []]], "func_feature": [0, 0, 4, 0, 8, 8, 0, 14, 0.04167, 0, 1], "succs": [[6], [0, 5], [], [1, 2], [7], [4, 6], [], []], "fname": "strcmp_ctime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 3, 1, 0, 3, 0, 1, 0, 0, 0.11904761904761904, ["mov     rax, [b+68h]", "sub     eax, [a+68h]", "jnz     short locret_77F5"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 1, -1, 0.11904761904761904, ["jl      short loc_77F0"], ["jl~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 3, 0, 1, 0, 1, 0.0, ["mov     rax, [b+60h]", "cmp     [a+60h], rax", "jg      short loc_7800"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 3, -1, 0.07142857142857142, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, -1, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []]], "func_feature": [0, 0, 4, 0, 8, 8, 0, 14, 0.04167, 0, 1], "succs": [[4, 6], [0, 5], [], [1, 2], [7], [6], [], []], "fname": "strcmp_atime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 3, -1, 0.07142857142857142, ["mov     b, [a]; s2", "mov     a, [b]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 4, 0, 1, 0, 1, 0.0, ["mov     rax, [a+70h]", "cmp     [b+70h], rax", "mov     rdx, b", "jg      short loc_7840"], ["mov~rax,[a+0]", "cmp~[b+0],rax", "mov~rdx,b", "jg~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 2, -1, 0.11904761904761904, ["mov     rax, [a+78h]", "sub     eax, [b+78h]", "jnz     short locret_783D"], ["mov~rax,[a+0]", "sub~eax,[b+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 1, -1, 0.11904761904761904, ["jl      short loc_7838"], ["jl~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, -1, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 4, 0, 8, 8, 0, 15, 0.04167, 0, 1], "succs": [[], [0], [], [2, 5], [1, 7], [4, 6], [7], []], "fname": "rev_strcmp_mtime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 3, -1, 0.07142857142857142, ["mov     b, [a]; s2", "mov     a, [b]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 4, 0, 1, 0, 1, 0.0, ["mov     rax, [a+60h]", "cmp     [b+60h], rax", "mov     rdx, b", "jg      short loc_7880"], ["mov~rax,[a+0]", "cmp~[b+0],rax", "mov~rdx,b", "jg~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 2, -1, 0.11904761904761904, ["mov     rax, [a+68h]", "sub     eax, [b+68h]", "jnz     short locret_787D"], ["mov~rax,[a+0]", "sub~eax,[b+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 1, -1, 0.11904761904761904, ["jl      short loc_7878"], ["jl~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, -1, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]]], "func_feature": [0, 0, 4, 0, 8, 8, 0, 15, 0.04167, 0, 1], "succs": [[], [0], [], [2, 5], [1, 6], [4, 7], [], [6]], "fname": "rev_strcmp_atime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 5, 0, 0, 1, 0, 1, 0, 0, 0.11904761904761904, ["jl      short loc_78E0"], ["jl~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 0, 1, 0.0, ["mov     rax, [a+80h]", "cmp     [b+80h], rax", "jg      short loc_78F0"], ["mov~rax,[a+0]", "cmp~[b+0],rax", "jg~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, -1, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 3, 1, 0, 3, 0, 1, 2, -1, 0.11904761904761904, ["mov     rax, [a+88h]", "sub     eax, [b+88h]", "jnz     short locret_78E5"], ["mov~rax,[a+0]", "sub~eax,[b+0]", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [3, 0, 1, 2, 1, 13, 0, 2, 3, -1, 0.07142857142857142, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbp, [a]", "mov     rbx, [b]", "call    ___errno_location", "mov     dword ptr [rax], 0", "add     rsp, 8", "mov     rsi, rbp; s2", "mov     rdi, rbx; s1", "pop     rbx", "pop     rbp", "jmp     _strcoll"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,<TAG>", "mov~rbx,<TAG>", "call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rsi,rbp", "mov~rdi,rbx", "pop~rbx", "pop~rbp", "jmp~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]]], "func_feature": [1, 0, 5, 0, 8, 8, 0, 24, 0.04167, 0, 3], "succs": [[2, 4], [0, 7], [3], [], [3, 6], [], [5], []], "fname": "rev_xstrcoll_ctime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 5, 0, 0, 1, 0, 1, 1, -1, 0.11904761904761904, ["jl      short loc_7940"], ["jl~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 3, 1, 0, 3, 0, 1, 2, -1, 0.11904761904761904, ["mov     rax, [b+68h]", "sub     eax, [a+68h]", "jnz     short locret_7945"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 0, 1, 0.0, ["mov     rax, [b+60h]", "cmp     [a+60h], rax", "jg      short loc_7950"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [3, 0, 1, 2, 1, 13, 0, 2, 3, -1, 0.07142857142857142, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbp, [b]", "mov     rbx, [a]", "call    ___errno_location", "mov     dword ptr [rax], 0", "add     rsp, 8", "mov     rsi, rbp; s2", "mov     rdi, rbx; s1", "pop     rbx", "pop     rbp", "jmp     _strcoll"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,<TAG>", "mov~rbx,<TAG>", "call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rsi,rbp", "mov~rdi,rbx", "pop~rbx", "pop~rbp", "jmp~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]]], "func_feature": [1, 0, 5, 0, 8, 8, 0, 24, 0.04167, 0, 3], "succs": [[2], [0, 3], [], [2, 6], [1, 7], [], [5], []], "fname": "xstrcoll_atime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 5, 0, 0, 1, 0, 1, 1, -1, 0.11904761904761904, ["jl      short loc_79B0"], ["jl~FOO"]], [3, 0, 1, 2, 1, 13, 0, 2, 3, -1, 0.07142857142857142, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbp, [b]", "mov     rbx, [a]", "call    ___errno_location", "mov     dword ptr [rax], 0", "add     rsp, 8", "mov     rsi, rbp; s2", "mov     rdi, rbx; s1", "pop     rbx", "pop     rbp", "jmp     _strcoll"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,<TAG>", "mov~rbx,<TAG>", "call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rsi,rbp", "mov~rdi,rbx", "pop~rbx", "pop~rbp", "jmp~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 2, -1, 0.11904761904761904, ["mov     rax, [b+88h]", "sub     eax, [a+88h]", "jnz     short locret_79B5"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 3, 0, 1, 0, 1, 0.0, ["mov     rax, [b+80h]", "cmp     [a+80h], rax", "jg      short loc_79C0"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [1, 0, 5, 0, 8, 8, 0, 24, 0.04167, 0, 3], "succs": [[7], [0, 3], [6], [2, 7], [], [1, 4], [], []], "fname": "xstrcoll_ctime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 3, 1, 0, 3, 0, 1, 0, 0, 0.11904761904761904, ["mov     rax, [b+78h]", "sub     eax, [a+78h]", "jnz     short locret_7A15"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 1, -1, 0.11904761904761904, ["jl      short loc_7A10"], ["jl~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 3, 0, 1, 0, 1, 0.0, ["mov     rax, [b+70h]", "cmp     [a+70h], rax", "jg      short loc_7A20"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [3, 0, 1, 2, 1, 13, 0, 2, 3, -1, 0.07142857142857142, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbp, [b]", "mov     rbx, [a]", "call    ___errno_location", "mov     dword ptr [rax], 0", "add     rsp, 8", "mov     rsi, rbp; s2", "mov     rdi, rbx; s1", "pop     rbx", "pop     rbp", "jmp     _strcoll"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,<TAG>", "mov~rbx,<TAG>", "call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rsi,rbp", "mov~rdi,rbx", "pop~rbx", "pop~rbp", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [1, 0, 1, 0, 0, 1, 0, 0, 2, -1, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [1, 0, 5, 0, 8, 8, 0, 24, 0.04167, 0, 3], "succs": [[4, 7], [0, 6], [], [1, 2], [5], [], [7], []], "fname": "xstrcoll_mtime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 3, 1, 0, 3, 0, 1, 0, 0, 0.11904761904761904, ["mov     rax, [a+78h]", "sub     eax, [b+78h]", "jnz     short locret_7A75"], ["mov~rax,[a+0]", "sub~eax,[b+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 1, -1, 0.11904761904761904, ["jl      short loc_7A70"], ["jl~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 3, 0, 1, 0, 1, 0.0, ["mov     rax, [a+70h]", "cmp     [b+70h], rax", "jg      short loc_7A80"], ["mov~rax,[a+0]", "cmp~[b+0],rax", "jg~FOO"]], [3, 0, 1, 2, 1, 13, 0, 2, 3, -1, 0.07142857142857142, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbp, [a]", "mov     rbx, [b]", "call    ___errno_location", "mov     dword ptr [rax], 0", "add     rsp, 8", "mov     rsi, rbp; s2", "mov     rdi, rbx; s1", "pop     rbx", "pop     rbp", "jmp     _strcoll"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,<TAG>", "mov~rbx,<TAG>", "call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rsi,rbp", "mov~rdi,rbx", "pop~rbx", "pop~rbp", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [1, 0, 1, 0, 0, 1, 0, 0, 2, -1, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [1, 0, 5, 0, 8, 8, 0, 24, 0.04167, 0, 3], "succs": [[4, 7], [0, 6], [], [1, 2], [5], [], [7], []], "fname": "rev_xstrcoll_mtime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 3, 1, 0, 3, 0, 1, 0, 0, 0.11904761904761904, ["mov     rax, [a+68h]", "sub     eax, [b+68h]", "jnz     short locret_7AD5"], ["mov~rax,[a+0]", "sub~eax,[b+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 1, -1, 0.11904761904761904, ["jl      short loc_7AD0"], ["jl~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 3, 0, 1, 0, 1, 0.0, ["mov     rax, [a+60h]", "cmp     [b+60h], rax", "jg      short loc_7AE0"], ["mov~rax,[a+0]", "cmp~[b+0],rax", "jg~FOO"]], [3, 0, 1, 2, 1, 13, 0, 2, 3, -1, 0.07142857142857142, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbp, [a]", "mov     rbx, [b]", "call    ___errno_location", "mov     dword ptr [rax], 0", "add     rsp, 8", "mov     rsi, rbp; s2", "mov     rdi, rbx; s1", "pop     rbx", "pop     rbp", "jmp     _strcoll"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,<TAG>", "mov~rbx,<TAG>", "call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rsi,rbp", "mov~rdi,rbx", "pop~rbx", "pop~rbp", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [1, 0, 1, 0, 0, 1, 0, 0, 2, -1, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [1, 0, 5, 0, 8, 8, 0, 24, 0.04167, 0, 3], "succs": [[4, 7], [0, 6], [], [1, 2], [5], [], [7], []], "fname": "rev_xstrcoll_atime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 6, 0, 1, 2, -1, 0.13333333333333333, ["pop     rbx", "mov     rsi, r12; s2", "mov     rdi, rbp; s1", "pop     rbp", "pop     r12", "jmp     _strcmp"], ["pop~rbx", "mov~rsi,r12", "mov~rdi,rbp", "pop~rbp", "pop~r12", "jmp~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 1, 2, 0.06666666666666667, ["test    rbx, rbx", "lea     rax, a8+6; \"\"", "jz      short loc_7B3D"], ["test~rbx,rbx", "lea~rax,<TAG>", "jz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 2, 1, 0.03333333333333333, ["mov     rsi, rax; s2", "mov     rdi, rbx; s1", "call    _strcmp", "test    eax, eax", "jz      short loc_7B3D"], ["mov~rsi,rax", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 3, 0, 1, 8, 2, 2, 1, 1, 0.06666666666666667, ["lea     rdx, a8+6; \"\"", "test    rbx, rbx", "mov     rsi, rax; s2", "cmovz   rbx, rdx", "mov     rdi, rbx; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_7B6B"], ["lea~rdx,<TAG>", "test~rbx,rbx", "mov~rsi,rax", "cmovz~rbx,rdx", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, 0, 0.0, ["pop     rbx", "pop     rbp", "pop     r12", "retn"], ["pop~rbx", "pop~rbp", "pop~r12", "retn"]], [2, 0, 6, 0, 2, 15, 1, 3, 0, 2, 0.0, ["push    r12", "push    rbp", "mov     r12, a", "push    rbx", "mov     rbp, [b]", "mov     esi, 2Eh ; '.'; c", "mov     a, rbp; s", "call    _strrchr", "mov     a, [a]", "mov     esi, 2Eh ; '.'; c", "mov     rbx, rax", "mov     rdi, r12; s", "call    _strrchr", "test    rax, rax", "jz      short loc_7B50"], ["push~r12", "push~rbp", "mov~r12,a", "push~rbx", "mov~rbp,<TAG>", "mov~esi,0", "mov~a,rbp", "call~FOO", "mov~a,<TAG>", "mov~esi,0", "mov~rbx,rax", "mov~rdi,r12", "call~FOO", "test~rax,rax", "jz~FOO"]]], "func_feature": [4, 5, 9, 0, 7, 9, 0, 41, 0.04286, 1, 0], "succs": [[], [0], [1, 3], [1, 5], [1, 5], [], [2, 4]], "fname": "rev_strcmp_extension", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 6, 0, 1, 2, -1, 0.13333333333333333, ["pop     rbx", "mov     rsi, r12; s2", "mov     rdi, rbp; s1", "pop     rbp", "pop     r12", "jmp     _strcmp"], ["pop~rbx", "mov~rsi,r12", "mov~rdi,rbp", "pop~rbp", "pop~r12", "jmp~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 1, 2, 0.06666666666666667, ["test    rbx, rbx", "lea     rax, a8+6; \"\"", "jz      short loc_7BBD"], ["test~rbx,rbx", "lea~rax,<TAG>", "jz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 2, 1, 0.03333333333333333, ["mov     rsi, rax; s2", "mov     rdi, rbx; s1", "call    _strcmp", "test    eax, eax", "jz      short loc_7BBD"], ["mov~rsi,rax", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 3, 0, 1, 8, 2, 2, 1, 1, 0.06666666666666667, ["lea     rdx, a8+6; \"\"", "test    rbx, rbx", "mov     rsi, rax; s2", "cmovz   rbx, rdx", "mov     rdi, rbx; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_7BEB"], ["lea~rdx,<TAG>", "test~rbx,rbx", "mov~rsi,rax", "cmovz~rbx,rdx", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, 0, 0.0, ["pop     rbx", "pop     rbp", "pop     r12", "retn"], ["pop~rbx", "pop~rbp", "pop~r12", "retn"]], [2, 0, 6, 0, 2, 15, 1, 3, 0, 2, 0.0, ["push    r12", "push    rbp", "mov     r12, b", "push    rbx", "mov     rbp, [a]", "mov     esi, 2Eh ; '.'; c", "mov     a, rbp; s", "call    _strrchr", "mov     b, [b]", "mov     esi, 2Eh ; '.'; c", "mov     rbx, rax", "mov     rdi, r12; s", "call    _strrchr", "test    rax, rax", "jz      short loc_7BD0"], ["push~r12", "push~rbp", "mov~r12,b", "push~rbx", "mov~rbp,<TAG>", "mov~esi,0", "mov~a,rbp", "call~FOO", "mov~b,<TAG>", "mov~esi,0", "mov~rbx,rax", "mov~rdi,r12", "call~FOO", "test~rax,rax", "jz~FOO"]]], "func_feature": [4, 5, 9, 0, 7, 9, 0, 41, 0.04286, 1, 0], "succs": [[], [0], [1, 3], [1, 5], [1, 5], [], [2, 4]], "fname": "strcmp_extension", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 10, 0, 0, 4, 2, 1, 0, 0, 0.05494505494505495, ["mov     edx, [a+0ACh]", "and     edx, 0F000h", "test    al, al", "jz      short loc_7C58"], ["mov~edx,[a+0]", "and~edx,0", "test~al,al", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 1, 3, 0.03296703296703297, ["cmp     ecx, 9", "jz      short loc_7C38"], ["cmp~ecx,0", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 5, 2, 0.02197802197802198, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 6, 0, 0, 2, 0, 1, 4, 3, 0.03296703296703297, ["cmp     edx, 4000h", "jz      short loc_7C4E"], ["cmp~edx,0", "jz~FOO"]], [2, 0, 9, 0, 0, 4, 1, 1, 3, 3, 0.038461538461538464, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_7C24"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 3, 2, 0.06593406593406594, ["cmp     edx, 4000h", "jz      short loc_7C78"], ["cmp~edx,0", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [1, 0, 1, 1, 0, 8, 0, 1, 3, -1, 0.05494505494505495, ["add     rsp, 8", "mov     rsi, r13; s2", "mov     rdi, r12; s1", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "jmp     _strcoll"], ["add~rsp,0", "mov~rsi,r13", "mov~rdi,r12", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "jmp~FOO"]], [2, 0, 5, 0, 0, 4, 1, 1, 2, 2, 0.016483516483516484, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_7C78"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 1, 2, 0.06593406593406594, ["test    al, al", "jnz     short loc_7C78"], ["test~al,al", "jnz~FOO"]], [3, 0, 14, 0, 0, 9, 1, 1, 0, 3, 0.0, ["mov     edx, [b+0A8h]", "mov     ecx, [a+0A8h]", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      eax, edx", "cmp     ecx, 3", "jz      short loc_7C38"], ["mov~edx,[b+0]", "mov~ecx,[a+0]", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~eax,edx", "cmp~ecx,0", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [1, 0, 0, 0, 0, 2, 0, 0, 3, -1, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [4, 0, 3, 1, 4, 28, 3, 5, 2, 1, 0.14835164835164835, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, a", "sub     rsp, 8", "mov     r12, [b]", "mov     esi, 2Eh ; '.'; c", "mov     a, r12; s", "call    _strrchr", "mov     r13, [a]", "mov     esi, 2Eh ; '.'; c", "mov     rbp, rax", "mov     rdi, r13; s", "call    _strrchr", "mov     a, rax", "lea     rax, a8+6; \"\"", "test    rbx, rbx", "cmovz   rbx, rax", "test    rbp, rbp", "cmovz   rbp, rax", "call    ___errno_location", "mov     rsi, rbx; s2", "mov     dword ptr [rax], 0", "mov     rdi, rbp; s1", "call    _strcoll", "test    eax, eax", "jnz     short loc_7CF0"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,a", "sub~rsp,0", "mov~r12,<TAG>", "mov~esi,0", "mov~a,r12", "call~FOO", "mov~r13,<TAG>", "mov~esi,0", "mov~rbp,rax", "mov~rdi,r13", "call~FOO", "mov~a,rax", "lea~rax,<TAG>", "test~rbx,rbx", "cmovz~rbx,rax", "test~rbp,rbp", "cmovz~rbp,rax", "call~FOO", "mov~rsi,rbx", "mov~<TAG>,0", "mov~rdi,rbp", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]]], "func_feature": [4, 9, 14, 0, 15, 20, 0, 76, 0.03553, 1, 3], "succs": [[4, 5], [0, 9], [13], [2, 12], [3, 5], [11, 13], [], [6], [12, 13], [8, 13], [1, 9], [], [], [14, 7], []], "fname": "rev_xstrcoll_df_extension", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 5, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     rax, [a+48h]", "cmp     [b+48h], rax", "jg      short loc_7D40"], ["mov~rax,[a+0]", "cmp~[b+0],rax", "jg~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0.0, [], []], [3, 0, 1, 2, 1, 13, 0, 2, 2, 0, 0.1, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbx, [b]", "mov     rbp, [a]", "call    ___errno_location", "mov     dword ptr [rax], 0", "add     rsp, 8", "mov     rsi, rbp; s2", "mov     rdi, rbx; s1", "pop     rbx", "pop     rbp", "jmp     _strcoll"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,<TAG>", "mov~rbp,<TAG>", "call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rsi,rbp", "mov~rdi,rbx", "pop~rbx", "pop~rbp", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 0, 0.15000000000000002, ["mov     eax, 1", "jge     short loc_7D18"], ["mov~eax,0", "jge~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [1, 0, 4, 0, 6, 5, 0, 21, 0.04167, 0, 2], "succs": [[], [0, 4], [], [2], [3, 5], []], "fname": "rev_xstrcoll_size", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, -1, 0.15000000000000002, ["mov     eax, 1", "jge     short loc_7D68"], ["mov~eax,0", "jge~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [3, 0, 1, 2, 1, 13, 0, 2, 2, -1, 0.1, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbx, [a]", "mov     rbp, [b]", "call    ___errno_location", "mov     dword ptr [rax], 0", "add     rsp, 8", "mov     rsi, rbp; s2", "mov     rdi, rbx; s1", "pop     rbx", "pop     rbp", "jmp     _strcoll"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,<TAG>", "mov~rbp,<TAG>", "call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rsi,rbp", "mov~rdi,rbx", "pop~rbx", "pop~rbp", "jmp~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 5, 0, 0, 3, 0, 1, 0, 1, 0.0, ["mov     rax, [b+48h]", "cmp     [a+48h], rax", "jg      short loc_7D90"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]]], "func_feature": [1, 0, 4, 0, 6, 5, 0, 21, 0.04167, 0, 2], "succs": [[], [0, 3], [], [2], [], [1, 4]], "fname": "xstrcoll_size", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[4, 0, 3, 1, 4, 28, 3, 5, 0, 0, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbp, b", "mov     esi, 2Eh ; '.'; c", "sub     rsp, 8", "mov     r12, [a]", "mov     a, r12; s", "call    _strrchr", "mov     r13, [b+0]", "mov     esi, 2Eh ; '.'; c", "mov     rbx, rax", "mov     rdi, r13; s", "call    _strrchr", "mov     b, rax", "lea     rax, a8+6; \"\"", "test    rbp, rbp", "cmovz   rbp, rax", "test    rbx, rbx", "cmovz   rbx, rax", "call    ___errno_location", "mov     rsi, rbp; s2", "mov     dword ptr [rax], 0", "mov     rdi, rbx; s1", "call    _strcoll", "test    eax, eax", "jnz     short loc_7E20"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbp,b", "mov~esi,0", "sub~rsp,0", "mov~r12,<TAG>", "mov~a,r12", "call~FOO", "mov~r13,[b+0]", "mov~esi,0", "mov~rbx,rax", "mov~rdi,r13", "call~FOO", "mov~b,rax", "lea~rax,<TAG>", "test~rbp,rbp", "cmovz~rbp,rax", "test~rbx,rbx", "cmovz~rbx,rax", "call~FOO", "mov~rsi,rbp", "mov~<TAG>,0", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [1, 0, 1, 1, 0, 8, 0, 1, 0, -1, 0.16666666666666666, ["add     rsp, 8", "mov     rsi, r13; s2", "mov     rdi, r12; s1", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "jmp     _strcoll"], ["add~rsp,0", "mov~rsi,r13", "mov~rdi,r12", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0.0, [], []]], "func_feature": [4, 3, 6, 0, 4, 3, 0, 42, 0.04167, 1, 3], "succs": [[1, 2], [], [3], []], "fname": "xstrcoll_extension", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[4, 0, 3, 1, 4, 28, 3, 5, 0, 0, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbp, a", "sub     rsp, 8", "mov     r12, [b]", "mov     esi, 2Eh ; '.'; c", "mov     a, r12; s", "call    _strrchr", "mov     r13, [a+0]", "mov     esi, 2Eh ; '.'; c", "mov     rbx, rax", "mov     rdi, r13; s", "call    _strrchr", "mov     a, rax", "lea     rax, a8+6; \"\"", "test    rbp, rbp", "cmovz   rbp, rax", "test    rbx, rbx", "cmovz   rbx, rax", "call    ___errno_location", "mov     rsi, rbp; s2", "mov     dword ptr [rax], 0", "mov     rdi, rbx; s1", "call    _strcoll", "test    eax, eax", "jnz     short loc_7EB0"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbp,a", "sub~rsp,0", "mov~r12,<TAG>", "mov~esi,0", "mov~a,r12", "call~FOO", "mov~r13,[a+0]", "mov~esi,0", "mov~rbx,rax", "mov~rdi,r13", "call~FOO", "mov~a,rax", "lea~rax,<TAG>", "test~rbp,rbp", "cmovz~rbp,rax", "test~rbx,rbx", "cmovz~rbx,rax", "call~FOO", "mov~rsi,rbp", "mov~<TAG>,0", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [1, 0, 1, 1, 0, 8, 0, 1, 0, -1, 0.16666666666666666, ["add     rsp, 8", "mov     rsi, r13; s2", "mov     rdi, r12; s1", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "jmp     _strcoll"], ["add~rsp,0", "mov~rsi,r13", "mov~rdi,r12", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0.0, [], []]], "func_feature": [4, 3, 6, 0, 4, 3, 0, 42, 0.04167, 1, 3], "succs": [[1, 2], [], [3], []], "fname": "rev_xstrcoll_extension", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 9, 0, 0, 2, 0, 1, 0, 0, 0.029166666666666667, ["cmp     edx, 4000h", "jz      short loc_7F1E"], ["cmp~edx,0", "jz~FOO"]], [2, 0, 11, 0, 0, 4, 1, 1, 3, 5, 0.029166666666666667, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_7EF4"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, 2, 0.14791666666666667, ["jl      short loc_7EFC"], ["jl~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 3, 4, 0.06041666666666667, ["cmp     edx, 4000h", "jz      short loc_7F48"], ["cmp~edx,0", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 1, 5, 0.022916666666666665, ["cmp     ecx, 9", "jz      short loc_7F08"], ["cmp~ecx,0", "jz~FOO"]], [3, 0, 16, 0, 0, 9, 1, 1, 0, 5, 0.0, ["mov     edx, [b+0A8h]", "mov     ecx, [a+0A8h]", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      eax, edx", "cmp     ecx, 3", "jz      short loc_7F08"], ["mov~edx,[b+0]", "mov~ecx,[a+0]", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~eax,edx", "cmp~ecx,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, 1, 0.09583333333333333, ["mov     rax, [b+88h]", "sub     eax, [a+88h]", "jnz     short locret_7F23"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, -1, 0.041666666666666664, ["mov     eax, 0FFFFFFFFh"], ["mov~eax,0"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 4, 0.06875, ["test    al, al", "jnz     short loc_7F48"], ["test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []], [3, 0, 1, 2, 1, 13, 0, 2, 5, 0, 0.05, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbp, [b]", "mov     rbx, [a]", "call    ___errno_location", "mov     dword ptr [rax], 0", "add     rsp, 8", "mov     rsi, rbp; s2", "mov     rdi, rbx; s1", "pop     rbx", "pop     rbp", "jmp     _strcoll"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,<TAG>", "mov~rbx,<TAG>", "call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rsi,rbp", "mov~rdi,rbx", "pop~rbx", "pop~rbp", "jmp~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 5, 4, 0.025, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 7, 0, 0, 3, 0, 1, 2, 3, 0.20208333333333334, ["mov     rax, [b+80h]", "cmp     [a+80h], rax", "jg      short loc_7F1E"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [1, 0, 12, 0, 0, 4, 2, 1, 2, 5, 0.03958333333333333, ["mov     edx, [a+0ACh]", "and     edx, 0F000h", "test    al, al", "jz      short loc_7F28"], ["mov~edx,[a+0]", "and~edx,0", "test~al,al", "jz~FOO"]], [2, 0, 8, 0, 0, 4, 1, 1, 2, 4, 0.0125, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_7F48"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]]], "func_feature": [1, 6, 13, 0, 17, 25, 0, 54, 0.04853, 0, 3], "succs": [[9, 13], [0, 4], [], [8, 2], [2, 14], [10, 15], [10, 5], [], [12, 7], [7], [16, 14], [], [11], [14], [9, 3], [1, 4], [9, 14]], "fname": "xstrcoll_df_ctime", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 9, 0, 0, 2, 0, 1, 0, 0, 0.029166666666666667, ["cmp     edx, 4000h", "jz      short loc_7FFE"], ["cmp~edx,0", "jz~FOO"]], [2, 0, 11, 0, 0, 4, 1, 1, 3, 5, 0.029166666666666667, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_7FD4"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, 2, 0.14791666666666667, ["jl      short loc_7FDC"], ["jl~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 3, 4, 0.06041666666666667, ["cmp     edx, 4000h", "jz      short loc_8028"], ["cmp~edx,0", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 1, 5, 0.022916666666666665, ["cmp     ecx, 9", "jz      short loc_7FE8"], ["cmp~ecx,0", "jz~FOO"]], [3, 0, 16, 0, 0, 9, 1, 1, 0, 5, 0.0, ["mov     edx, [b+0A8h]", "mov     ecx, [a+0A8h]", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      eax, edx", "cmp     ecx, 3", "jz      short loc_7FE8"], ["mov~edx,[b+0]", "mov~ecx,[a+0]", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~eax,edx", "cmp~ecx,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, 1, 0.09583333333333333, ["mov     rax, [b+78h]", "sub     eax, [a+78h]", "jnz     short locret_8003"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, -1, 0.041666666666666664, ["mov     eax, 0FFFFFFFFh"], ["mov~eax,0"]], [3, 0, 1, 2, 1, 13, 0, 2, 5, 0, 0.05, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbp, [b]", "mov     rbx, [a]", "call    ___errno_location", "mov     dword ptr [rax], 0", "add     rsp, 8", "mov     rsi, rbp; s2", "mov     rdi, rbx; s1", "pop     rbx", "pop     rbp", "jmp     _strcoll"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,<TAG>", "mov~rbx,<TAG>", "call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rsi,rbp", "mov~rdi,rbx", "pop~rbx", "pop~rbp", "jmp~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 4, 0.06875, ["test    al, al", "jnz     short loc_8028"], ["test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []], [0, 0, 8, 0, 0, 1, 0, 0, 5, 4, 0.025, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 7, 0, 0, 3, 0, 1, 2, 3, 0.20208333333333334, ["mov     rax, [b+70h]", "cmp     [a+70h], rax", "jg      short loc_7FFE"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [2, 0, 8, 0, 0, 4, 1, 1, 2, 4, 0.0125, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_8028"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 12, 0, 0, 4, 2, 1, 2, 5, 0.03958333333333333, ["mov     edx, [a+0ACh]", "and     edx, 0F000h", "test    al, al", "jz      short loc_8008"], ["mov~edx,[a+0]", "and~edx,0", "test~al,al", "jz~FOO"]]], "func_feature": [1, 6, 13, 0, 17, 25, 0, 54, 0.04853, 0, 3], "succs": [[9, 13], [0, 4], [], [8, 2], [2, 14], [16, 11], [11, 5], [], [10, 7], [7], [12], [14, 15], [], [14], [9, 3], [9, 14], [1, 4]], "fname": "xstrcoll_df_mtime", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 7, 0, 0, 3, 0, 1, 0, 0, 0.20208333333333334, ["mov     rax, [b+60h]", "cmp     [a+60h], rax", "jg      short loc_80CE"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 3, 4, 0.06041666666666667, ["cmp     edx, 4000h", "jz      short loc_80F8"], ["cmp~edx,0", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 4, 0.06875, ["test    al, al", "jnz     short loc_80F8"], ["test~al,al", "jnz~FOO"]], [2, 0, 8, 0, 0, 4, 1, 1, 2, 4, 0.0125, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_80F8"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 5, 4, 0.025, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, 2, 0.14791666666666667, ["jl      short loc_80AC"], ["jl~FOO"]], [1, 0, 12, 0, 0, 4, 2, 1, 2, 5, 0.03958333333333333, ["mov     edx, [a+0ACh]", "and     edx, 0F000h", "test    al, al", "jz      short loc_80D8"], ["mov~edx,[a+0]", "and~edx,0", "test~al,al", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 1, 5, 0.022916666666666665, ["cmp     ecx, 9", "jz      short loc_80B8"], ["cmp~ecx,0", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []], [3, 0, 1, 2, 1, 13, 0, 2, 5, 0, 0.05, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbp, [b]", "mov     rbx, [a]", "call    ___errno_location", "mov     dword ptr [rax], 0", "add     rsp, 8", "mov     rsi, rbp; s2", "mov     rdi, rbx; s1", "pop     rbx", "pop     rbp", "jmp     _strcoll"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,<TAG>", "mov~rbx,<TAG>", "call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rsi,rbp", "mov~rdi,rbx", "pop~rbx", "pop~rbp", "jmp~FOO"]], [2, 0, 11, 0, 0, 4, 1, 1, 3, 5, 0.029166666666666667, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_80A4"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 4, 5, 0.029166666666666667, ["cmp     edx, 4000h", "jz      short loc_80CE"], ["cmp~edx,0", "jz~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, 1, 0.09583333333333333, ["mov     rax, [b+68h]", "sub     eax, [a+68h]", "jnz     short locret_80D3"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [3, 0, 16, 0, 0, 9, 1, 1, 0, 5, 0.0, ["mov     edx, [b+0A8h]", "mov     ecx, [a+0A8h]", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      eax, edx", "cmp     ecx, 3", "jz      short loc_80B8"], ["mov~edx,[b+0]", "mov~ecx,[a+0]", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~eax,edx", "cmp~ecx,0", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, -1, 0.041666666666666664, ["mov     eax, 0FFFFFFFFh"], ["mov~eax,0"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [1, 6, 13, 0, 17, 25, 0, 54, 0.04853, 0, 3], "succs": [[5, 14], [0, 15], [0, 3], [0, 14], [0], [12, 15], [1, 10], [2, 6], [], [8], [1, 11], [4, 14], [16, 9], [2, 7], [16], [], []], "fname": "xstrcoll_df_atime", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 9, 0, 0, 2, 0, 1, 0, 0, 0.029166666666666667, ["cmp     edx, 4000h", "jz      short loc_819E"], ["cmp~edx,0", "jz~FOO"]], [2, 0, 11, 0, 0, 4, 1, 1, 3, 5, 0.029166666666666667, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_8174"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, 2, 0.14791666666666667, ["jl      short loc_817C"], ["jl~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 3, 4, 0.06041666666666667, ["cmp     edx, 4000h", "jz      short loc_81C8"], ["cmp~edx,0", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 1, 5, 0.022916666666666665, ["cmp     ecx, 9", "jz      short loc_8188"], ["cmp~ecx,0", "jz~FOO"]], [3, 0, 16, 0, 0, 9, 1, 1, 0, 5, 0.0, ["mov     edx, [b+0A8h]", "mov     ecx, [a+0A8h]", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      eax, edx", "cmp     ecx, 3", "jz      short loc_8188"], ["mov~edx,[b+0]", "mov~ecx,[a+0]", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~eax,edx", "cmp~ecx,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, 1, 0.09583333333333333, ["mov     rax, [b+68h]", "sub     eax, [a+68h]", "jnz     short locret_81A3"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, -1, 0.041666666666666664, ["mov     eax, 0FFFFFFFFh"], ["mov~eax,0"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 4, 0.06875, ["test    al, al", "jnz     short loc_81C8"], ["test~al,al", "jnz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 5, 4, 0.025, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 7, 0, 0, 3, 0, 1, 2, 3, 0.20208333333333334, ["mov     rax, [b+60h]", "cmp     [a+60h], rax", "jg      short loc_819E"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [2, 0, 8, 0, 0, 4, 1, 1, 2, 4, 0.0125, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_81C8"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 12, 0, 0, 4, 2, 1, 2, 5, 0.03958333333333333, ["mov     edx, [a+0ACh]", "and     edx, 0F000h", "test    al, al", "jz      short loc_81A8"], ["mov~edx,[a+0]", "and~edx,0", "test~al,al", "jz~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 5, 0, 0.05, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []]], "func_feature": [0, 6, 12, 0, 17, 25, 0, 44, 0.04853, 0, 1], "succs": [[9, 11], [0, 4], [], [8, 2], [2, 12], [10, 14], [10, 5], [], [15, 7], [7], [12, 13], [12], [9, 3], [9, 12], [1, 4], [16], []], "fname": "strcmp_df_atime", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 9, 0, 0, 2, 0, 1, 0, 0, 0.029166666666666667, ["cmp     ecx, 4000h", "jz      short loc_824E"], ["cmp~ecx,0", "jz~FOO"]], [2, 0, 11, 0, 0, 4, 1, 1, 3, 5, 0.029166666666666667, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_8227"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 12, 0, 0, 4, 2, 1, 2, 5, 0.03958333333333333, ["mov     ecx, [a+0ACh]", "and     ecx, 0F000h", "test    al, al", "jz      short loc_8258"], ["mov~ecx,[a+0]", "and~ecx,0", "test~al,al", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 1, 5, 0.022916666666666665, ["cmp     esi, 9", "jz      short loc_8238"], ["cmp~esi,0", "jz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 2, 3, 0.20208333333333334, ["mov     rax, [a+80h]", "cmp     [b+80h], rax", "jg      short loc_824E"], ["mov~rax,[a+0]", "cmp~[b+0],rax", "jg~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 3, 4, 0.06041666666666667, ["cmp     ecx, 4000h", "jz      short loc_8278"], ["cmp~ecx,0", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 4, 0.06875, ["test    al, al", "jnz     short loc_8278"], ["test~al,al", "jnz~FOO"]], [2, 0, 8, 0, 0, 4, 1, 1, 2, 4, 0.0125, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_8278"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 5, 4, 0.025, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, -1, 0.041666666666666664, ["mov     eax, 0FFFFFFFFh"], ["mov~eax,0"]], [3, 0, 16, 0, 0, 10, 1, 1, 0, 5, 0.0, ["mov     rdx, b", "mov     esi, [a+0A8h]", "mov     ecx, [b+0A8h]", "cmp     ecx, 3", "setz    al", "cmp     ecx, 9", "setz    cl", "or      eax, ecx", "cmp     esi, 3", "jz      short loc_8238"], ["mov~rdx,b", "mov~esi,[a+0]", "mov~ecx,[b+0]", "cmp~ecx,0", "setz~al", "cmp~ecx,0", "setz~cl", "or~eax,ecx", "cmp~esi,0", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, 2, 0.14791666666666667, ["jl      short loc_822F"], ["jl~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, 1, 0.09583333333333333, ["mov     rax, [a+88h]", "sub     eax, [b+88h]", "jnz     short locret_8253"], ["mov~rax,[a+0]", "sub~eax,[b+0]", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 5, 0, 0.05, ["mov     rsi, [a]; s2", "mov     a, [b]; s1", "jmp     _strcmp"], ["mov~rsi,<TAG>", "mov~a,<TAG>", "jmp~FOO"]]], "func_feature": [0, 6, 12, 0, 17, 25, 0, 45, 0.04853, 0, 1], "succs": [[8, 9], [0, 5], [1, 5], [2, 6], [9, 11], [4, 14], [4, 7], [9, 4], [4], [12], [3, 6], [13, 14], [], [16, 12], [], [], [15]], "fname": "rev_strcmp_df_ctime", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 7, 0, 0, 3, 0, 1, 0, 0, 0.20208333333333334, ["mov     rax, [a+70h]", "cmp     [b+70h], rax", "jg      short loc_830E"], ["mov~rax,[a+0]", "cmp~[b+0],rax", "jg~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 3, 4, 0.06041666666666667, ["cmp     ecx, 4000h", "jz      short loc_8338"], ["cmp~ecx,0", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 4, 0.06875, ["test    al, al", "jnz     short loc_8338"], ["test~al,al", "jnz~FOO"]], [2, 0, 8, 0, 0, 4, 1, 1, 2, 4, 0.0125, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_8338"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 5, 4, 0.025, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 9, 0, 0, 2, 0, 1, 4, 5, 0.029166666666666667, ["cmp     ecx, 4000h", "jz      short loc_830E"], ["cmp~ecx,0", "jz~FOO"]], [2, 0, 11, 0, 0, 4, 1, 1, 3, 5, 0.029166666666666667, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_82E7"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, 2, 0.14791666666666667, ["jl      short loc_82EF"], ["jl~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 5, 0, 0.05, ["mov     rsi, [a]; s2", "mov     a, [b]; s1", "jmp     _strcmp"], ["mov~rsi,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, 1, 0.09583333333333333, ["mov     rax, [a+78h]", "sub     eax, [b+78h]", "jnz     short locret_8313"], ["mov~rax,[a+0]", "sub~eax,[b+0]", "jnz~FOO"]], [1, 0, 12, 0, 0, 4, 2, 1, 2, 5, 0.03958333333333333, ["mov     ecx, [a+0ACh]", "and     ecx, 0F000h", "test    al, al", "jz      short loc_8318"], ["mov~ecx,[a+0]", "and~ecx,0", "test~al,al", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 1, 5, 0.022916666666666665, ["cmp     esi, 9", "jz      short loc_82F8"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, -1, 0.041666666666666664, ["mov     eax, 0FFFFFFFFh"], ["mov~eax,0"]], [3, 0, 16, 0, 0, 10, 1, 1, 0, 5, 0.0, ["mov     rdx, b", "mov     esi, [a+0A8h]", "mov     ecx, [b+0A8h]", "cmp     ecx, 3", "setz    al", "cmp     ecx, 9", "setz    cl", "or      eax, ecx", "cmp     esi, 3", "jz      short loc_82F8"], ["mov~rdx,b", "mov~esi,[a+0]", "mov~ecx,[b+0]", "cmp~ecx,0", "setz~al", "cmp~ecx,0", "setz~cl", "or~eax,ecx", "cmp~esi,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []]], "func_feature": [0, 6, 12, 0, 17, 25, 0, 45, 0.04853, 0, 1], "succs": [[12, 7], [0, 15], [0, 3], [0, 12], [0], [4, 12], [1, 5], [9, 15], [16], [8, 14], [1, 6], [10, 2], [14], [2, 11], [], [], []], "fname": "rev_strcmp_df_mtime", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 9, 0, 0, 2, 0, 1, 0, 0, 0.029166666666666667, ["cmp     edx, 4000h", "jz      short loc_83BE"], ["cmp~edx,0", "jz~FOO"]], [2, 0, 11, 0, 0, 4, 1, 1, 3, 5, 0.029166666666666667, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_8394"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, 2, 0.14791666666666667, ["jl      short loc_839C"], ["jl~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 3, 4, 0.06041666666666667, ["cmp     edx, 4000h", "jz      short loc_83E8"], ["cmp~edx,0", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 1, 5, 0.022916666666666665, ["cmp     ecx, 9", "jz      short loc_83A8"], ["cmp~ecx,0", "jz~FOO"]], [3, 0, 16, 0, 0, 9, 1, 1, 0, 5, 0.0, ["mov     edx, [b+0A8h]", "mov     ecx, [a+0A8h]", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      eax, edx", "cmp     ecx, 3", "jz      short loc_83A8"], ["mov~edx,[b+0]", "mov~ecx,[a+0]", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~eax,edx", "cmp~ecx,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, 1, 0.09583333333333333, ["mov     rax, [a+88h]", "sub     eax, [b+88h]", "jnz     short locret_83C3"], ["mov~rax,[a+0]", "sub~eax,[b+0]", "jnz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, -1, 0.041666666666666664, ["mov     eax, 0FFFFFFFFh"], ["mov~eax,0"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 4, 0.06875, ["test    al, al", "jnz     short loc_83E8"], ["test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []], [3, 0, 1, 2, 1, 13, 0, 2, 5, 0, 0.05, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbp, [a]", "mov     rbx, [b]", "call    ___errno_location", "mov     dword ptr [rax], 0", "add     rsp, 8", "mov     rsi, rbp; s2", "mov     rdi, rbx; s1", "pop     rbx", "pop     rbp", "jmp     _strcoll"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,<TAG>", "mov~rbx,<TAG>", "call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rsi,rbp", "mov~rdi,rbx", "pop~rbx", "pop~rbp", "jmp~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 5, 4, 0.025, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 7, 0, 0, 3, 0, 1, 2, 3, 0.20208333333333334, ["mov     rax, [a+80h]", "cmp     [b+80h], rax", "jg      short loc_83BE"], ["mov~rax,[a+0]", "cmp~[b+0],rax", "jg~FOO"]], [1, 0, 12, 0, 0, 4, 2, 1, 2, 5, 0.03958333333333333, ["mov     edx, [a+0ACh]", "and     edx, 0F000h", "test    al, al", "jz      short loc_83C8"], ["mov~edx,[a+0]", "and~edx,0", "test~al,al", "jz~FOO"]], [2, 0, 8, 0, 0, 4, 1, 1, 2, 4, 0.0125, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_83E8"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]]], "func_feature": [1, 6, 13, 0, 17, 25, 0, 54, 0.04853, 0, 3], "succs": [[9, 13], [0, 4], [], [8, 2], [2, 14], [10, 15], [10, 5], [], [12, 7], [7], [16, 14], [], [11], [14], [9, 3], [1, 4], [9, 14]], "fname": "rev_xstrcoll_df_ctime", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 9, 0, 0, 2, 0, 1, 0, 0, 0.029166666666666667, ["cmp     edx, 4000h", "jz      short loc_849E"], ["cmp~edx,0", "jz~FOO"]], [2, 0, 11, 0, 0, 4, 1, 1, 3, 5, 0.029166666666666667, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_8474"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, 2, 0.14791666666666667, ["jl      short loc_847C"], ["jl~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 3, 4, 0.06041666666666667, ["cmp     edx, 4000h", "jz      short loc_84C8"], ["cmp~edx,0", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 1, 5, 0.022916666666666665, ["cmp     ecx, 9", "jz      short loc_8488"], ["cmp~ecx,0", "jz~FOO"]], [3, 0, 16, 0, 0, 9, 1, 1, 0, 5, 0.0, ["mov     edx, [b+0A8h]", "mov     ecx, [a+0A8h]", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      eax, edx", "cmp     ecx, 3", "jz      short loc_8488"], ["mov~edx,[b+0]", "mov~ecx,[a+0]", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~eax,edx", "cmp~ecx,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, 1, 0.09583333333333333, ["mov     rax, [a+78h]", "sub     eax, [b+78h]", "jnz     short locret_84A3"], ["mov~rax,[a+0]", "sub~eax,[b+0]", "jnz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, -1, 0.041666666666666664, ["mov     eax, 0FFFFFFFFh"], ["mov~eax,0"]], [0, 0, 7, 0, 0, 3, 0, 1, 2, 3, 0.20208333333333334, ["mov     rax, [a+70h]", "cmp     [b+70h], rax", "jg      short loc_849E"], ["mov~rax,[a+0]", "cmp~[b+0],rax", "jg~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 4, 0.06875, ["test    al, al", "jnz     short loc_84C8"], ["test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []], [3, 0, 1, 2, 1, 13, 0, 2, 5, 0, 0.05, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbp, [a]", "mov     rbx, [b]", "call    ___errno_location", "mov     dword ptr [rax], 0", "add     rsp, 8", "mov     rsi, rbp; s2", "mov     rdi, rbx; s1", "pop     rbx", "pop     rbp", "jmp     _strcoll"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,<TAG>", "mov~rbx,<TAG>", "call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rsi,rbp", "mov~rdi,rbx", "pop~rbx", "pop~rbp", "jmp~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 5, 4, 0.025, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [2, 0, 8, 0, 0, 4, 1, 1, 2, 4, 0.0125, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_84C8"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 12, 0, 0, 4, 2, 1, 2, 5, 0.03958333333333333, ["mov     edx, [a+0ACh]", "and     edx, 0F000h", "test    al, al", "jz      short loc_84A8"], ["mov~edx,[a+0]", "and~edx,0", "test~al,al", "jz~FOO"]]], "func_feature": [1, 6, 13, 0, 17, 25, 0, 54, 0.04853, 0, 3], "succs": [[9, 14], [0, 4], [], [8, 2], [2, 10], [16, 11], [11, 5], [], [13, 7], [7], [9, 3], [10, 15], [], [12], [10], [9, 10], [1, 4]], "fname": "rev_xstrcoll_df_mtime", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 8, 0, 0, 1, 0, 0, 0, 0, 0.025, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 9, 0, 0, 2, 0, 1, 4, 5, 0.029166666666666667, ["cmp     edx, 4000h", "jz      short loc_856E"], ["cmp~edx,0", "jz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 2, 3, 0.20208333333333334, ["mov     rax, [a+60h]", "cmp     [b+60h], rax", "jg      short loc_856E"], ["mov~rax,[a+0]", "cmp~[b+0],rax", "jg~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 3, 4, 0.06041666666666667, ["cmp     edx, 4000h", "jz      short loc_8598"], ["cmp~edx,0", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 4, 0.06875, ["test    al, al", "jnz     short loc_8598"], ["test~al,al", "jnz~FOO"]], [2, 0, 8, 0, 0, 4, 1, 1, 2, 4, 0.0125, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_8598"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 12, 0, 0, 4, 2, 1, 2, 5, 0.03958333333333333, ["mov     edx, [a+0ACh]", "and     edx, 0F000h", "test    al, al", "jz      short loc_8578"], ["mov~edx,[a+0]", "and~edx,0", "test~al,al", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 1, 5, 0.022916666666666665, ["cmp     ecx, 9", "jz      short loc_8558"], ["cmp~ecx,0", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []], [3, 0, 1, 2, 1, 13, 0, 2, 5, 0, 0.05, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbp, [a]", "mov     rbx, [b]", "call    ___errno_location", "mov     dword ptr [rax], 0", "add     rsp, 8", "mov     rsi, rbp; s2", "mov     rdi, rbx; s1", "pop     rbx", "pop     rbp", "jmp     _strcoll"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,<TAG>", "mov~rbx,<TAG>", "call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rsi,rbp", "mov~rdi,rbx", "pop~rbx", "pop~rbp", "jmp~FOO"]], [2, 0, 11, 0, 0, 4, 1, 1, 3, 5, 0.029166666666666667, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_8544"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, 1, 0.09583333333333333, ["mov     rax, [a+68h]", "sub     eax, [b+68h]", "jnz     short locret_8573"], ["mov~rax,[a+0]", "sub~eax,[b+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, 2, 0.14791666666666667, ["jl      short loc_854C"], ["jl~FOO"]], [3, 0, 16, 0, 0, 9, 1, 1, 0, 5, 0.0, ["mov     edx, [b+0A8h]", "mov     ecx, [a+0A8h]", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      eax, edx", "cmp     ecx, 3", "jz      short loc_8558"], ["mov~edx,[b+0]", "mov~ecx,[a+0]", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~eax,edx", "cmp~ecx,0", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, -1, 0.041666666666666664, ["mov     eax, 0FFFFFFFFh"], ["mov~eax,0"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [1, 6, 13, 0, 17, 25, 0, 54, 0.04853, 0, 3], "succs": [[2], [0, 14], [12, 14], [2, 15], [2, 5], [2, 14], [10, 3], [4, 6], [], [8], [1, 3], [16, 9], [11, 15], [4, 7], [16], [], []], "fname": "rev_xstrcoll_df_atime", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.02727272727272727, ["cmp     edx, 4000h", "jz      short loc_863E"], ["cmp~edx,0", "jz~FOO"]], [2, 0, 6, 0, 0, 4, 1, 1, 3, 2, 0.03636363636363636, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_8614"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 1, 0.06363636363636363, ["cmp     edx, 4000h", "jz      short loc_8662"], ["cmp~edx,0", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 1, 2, 0.045454545454545456, ["cmp     ecx, 9", "jz      short loc_8628"], ["cmp~ecx,0", "jz~FOO"]], [3, 0, 11, 0, 0, 9, 1, 1, 0, 2, 0.0, ["mov     edx, [b+0A8h]", "mov     ecx, [a+0A8h]", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      eax, edx", "cmp     ecx, 3", "jz      short loc_8628"], ["mov~edx,[b+0]", "mov~ecx,[a+0]", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~eax,edx", "cmp~ecx,0", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 3, -1, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [2, 0, 3, 0, 0, 4, 1, 1, 2, 1, 0.02727272727272727, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_8662"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [3, 0, 1, 2, 1, 13, 0, 2, 2, 0, 0.07272727272727272, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbx, [a]", "mov     rbp, [b]", "call    ___errno_location", "mov     dword ptr [rax], 0", "add     rsp, 8", "mov     rsi, rbp; s2", "mov     rdi, rbx; s1", "pop     rbx", "pop     rbp", "jmp     _strcoll"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,<TAG>", "mov~rbp,<TAG>", "call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rsi,rbp", "mov~rdi,rbx", "pop~rbx", "pop~rbp", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 1, 1, 0.07272727272727272, ["test    al, al", "jnz     short loc_8662"], ["test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [1, 0, 7, 0, 0, 4, 2, 1, 2, 2, 0.07272727272727272, ["mov     edx, [a+0ACh]", "and     edx, 0F000h", "test    al, al", "jz      short loc_8648"], ["mov~edx,[a+0]", "and~edx,0", "test~al,al", "jz~FOO"]]], "func_feature": [1, 6, 10, 0, 12, 17, 0, 46, 0.03485, 0, 2], "succs": [[8, 6], [0, 3], [], [8, 2], [9, 11], [9, 4], [], [8, 6], [10], [8, 7], [], [1, 3]], "fname": "xstrcoll_df_name", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 7, 0, 0, 4, 2, 1, 0, 0, 0.07272727272727272, ["mov     edx, [a+0ACh]", "and     edx, 0F000h", "test    al, al", "jz      short loc_86F8"], ["mov~edx,[a+0]", "and~edx,0", "test~al,al", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 1, 2, 0.045454545454545456, ["cmp     ecx, 9", "jz      short loc_86D8"], ["cmp~ecx,0", "jz~FOO"]], [2, 0, 6, 0, 0, 4, 1, 1, 3, 2, 0.03636363636363636, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_86C4"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 1, 0.06363636363636363, ["cmp     edx, 4000h", "jz      short loc_8712"], ["cmp~edx,0", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [3, 0, 1, 2, 1, 13, 0, 2, 2, 0, 0.07272727272727272, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbx, [b]", "mov     rbp, [a]", "call    ___errno_location", "mov     dword ptr [rax], 0", "add     rsp, 8", "mov     rsi, rbp; s2", "mov     rdi, rbx; s1", "pop     rbx", "pop     rbp", "jmp     _strcoll"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,<TAG>", "mov~rbp,<TAG>", "call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rsi,rbp", "mov~rdi,rbx", "pop~rbx", "pop~rbp", "jmp~FOO"]], [2, 0, 3, 0, 0, 4, 1, 1, 2, 1, 0.02727272727272727, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_8712"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 1, 1, 0.07272727272727272, ["test    al, al", "jnz     short loc_8712"], ["test~al,al", "jnz~FOO"]], [3, 0, 11, 0, 0, 9, 1, 1, 0, 2, 0.0, ["mov     edx, [b+0A8h]", "mov     ecx, [a+0A8h]", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      eax, edx", "cmp     ecx, 3", "jz      short loc_86D8"], ["mov~edx,[b+0]", "mov~ecx,[a+0]", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~eax,edx", "cmp~ecx,0", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, 1, 0.02727272727272727, ["cmp     edx, 4000h", "jz      short loc_86EE"], ["cmp~edx,0", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [1, 0, 0, 0, 0, 2, 0, 0, 3, -1, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]]], "func_feature": [1, 6, 10, 0, 12, 17, 0, 46, 0.03485, 0, 2], "succs": [[2, 3], [0, 7], [9, 3], [10, 5], [], [4], [11, 5], [5, 6], [1, 7], [11, 5], [], []], "fname": "rev_xstrcoll_df_name", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 6, 0, 0, 2, 0, 1, 0, 0, 0.026556776556776556, ["cmp     edx, 4000h", "jz      short loc_879E"], ["cmp~edx,0", "jz~FOO"]], [2, 0, 9, 0, 0, 4, 1, 1, 3, 4, 0.021062271062271064, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_8774"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [1, 0, 7, 0, 0, 2, 0, 1, 3, 3, 0.061355311355311366, ["cmp     edx, 4000h", "jz      short loc_87C2"], ["cmp~edx,0", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 1, 4, 0.027472527472527476, ["cmp     ecx, 9", "jz      short loc_8788"], ["cmp~ecx,0", "jz~FOO"]], [3, 0, 14, 0, 0, 9, 1, 1, 0, 4, 0.0, ["mov     edx, [b+0A8h]", "mov     ecx, [a+0A8h]", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      eax, edx", "cmp     ecx, 3", "jz      short loc_8788"], ["mov~edx,[b+0]", "mov~ecx,[a+0]", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~eax,edx", "cmp~ecx,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 1, 0.11172161172161173, ["mov     eax, 1", "jl      short locret_87A3"], ["mov~eax,0", "jl~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, -1, 0.03663003663003663, ["mov     eax, 0FFFFFFFFh"], ["mov~eax,0"]], [0, 0, 7, 0, 0, 2, 1, 1, 1, 3, 0.07692307692307693, ["test    al, al", "jnz     short loc_87C2"], ["test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 5, -1, 0.0, [], []], [3, 0, 1, 2, 1, 13, 0, 2, 4, 0, 0.05494505494505495, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbx, [b]", "mov     rbp, [a]", "call    ___errno_location", "mov     dword ptr [rax], 0", "add     rsp, 8", "mov     rsi, rbp; s2", "mov     rdi, rbx; s1", "pop     rbx", "pop     rbp", "jmp     _strcoll"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,<TAG>", "mov~rbp,<TAG>", "call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rsi,rbp", "mov~rdi,rbx", "pop~rbx", "pop~rbp", "jmp~FOO"]], [0, 0, 5, 0, 0, 3, 0, 1, 2, 2, 0.16849816849816854, ["mov     rax, [a+48h]", "cmp     [b+48h], rax", "jg      short loc_879E"], ["mov~rax,[a+0]", "cmp~[b+0],rax", "jg~FOO"]], [2, 0, 6, 0, 0, 4, 1, 1, 2, 3, 0.013736263736263738, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_87C2"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 10, 0, 0, 4, 2, 1, 2, 4, 0.04395604395604396, ["mov     edx, [a+0ACh]", "and     edx, 0F000h", "test    al, al", "jz      short loc_87A8"], ["mov~edx,[a+0]", "and~edx,0", "test~al,al", "jz~FOO"]]], "func_feature": [1, 6, 12, 0, 15, 22, 0, 51, 0.04286, 0, 2], "succs": [[8, 12], [0, 3], [], [2, 12], [9, 14], [9, 4], [], [11, 6], [6], [12, 13], [], [10], [8, 7], [8, 12], [1, 3]], "fname": "rev_xstrcoll_df_size", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 6, 0, 0, 2, 0, 1, 0, 0, 0.026556776556776556, ["cmp     edx, 4000h", "jz      short loc_885E"], ["cmp~edx,0", "jz~FOO"]], [2, 0, 9, 0, 0, 4, 1, 1, 3, 4, 0.021062271062271064, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_8834"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [1, 0, 7, 0, 0, 2, 0, 1, 3, 3, 0.061355311355311366, ["cmp     edx, 4000h", "jz      short loc_8882"], ["cmp~edx,0", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 1, 4, 0.027472527472527476, ["cmp     ecx, 9", "jz      short loc_8848"], ["cmp~ecx,0", "jz~FOO"]], [3, 0, 14, 0, 0, 9, 1, 1, 0, 4, 0.0, ["mov     edx, [b+0A8h]", "mov     ecx, [a+0A8h]", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      eax, edx", "cmp     ecx, 3", "jz      short loc_8848"], ["mov~edx,[b+0]", "mov~ecx,[a+0]", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~eax,edx", "cmp~ecx,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 1, 0.11172161172161173, ["mov     eax, 1", "jl      short locret_8863"], ["mov~eax,0", "jl~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, -1, 0.03663003663003663, ["mov     eax, 0FFFFFFFFh"], ["mov~eax,0"]], [3, 0, 1, 2, 1, 13, 0, 2, 4, 0, 0.05494505494505495, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbx, [a]", "mov     rbp, [b]", "call    ___errno_location", "mov     dword ptr [rax], 0", "add     rsp, 8", "mov     rsi, rbp; s2", "mov     rdi, rbx; s1", "pop     rbx", "pop     rbp", "jmp     _strcoll"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,<TAG>", "mov~rbp,<TAG>", "call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rsi,rbp", "mov~rdi,rbx", "pop~rbx", "pop~rbp", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 1, 3, 0.07692307692307693, ["test    al, al", "jnz     short loc_8882"], ["test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 5, -1, 0.0, [], []], [0, 0, 5, 0, 0, 3, 0, 1, 2, 2, 0.16849816849816854, ["mov     rax, [b+48h]", "cmp     [a+48h], rax", "jg      short loc_885E"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [1, 0, 10, 0, 0, 4, 2, 1, 2, 4, 0.04395604395604396, ["mov     edx, [a+0ACh]", "and     edx, 0F000h", "test    al, al", "jz      short loc_8868"], ["mov~edx,[a+0]", "and~edx,0", "test~al,al", "jz~FOO"]], [2, 0, 6, 0, 0, 4, 1, 1, 2, 3, 0.013736263736263738, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_8882"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]]], "func_feature": [1, 6, 12, 0, 15, 22, 0, 51, 0.04286, 0, 2], "succs": [[8, 12], [0, 3], [], [2, 12], [10, 13], [10, 4], [], [9, 6], [6], [11], [12, 14], [], [8, 7], [1, 3], [8, 12]], "fname": "xstrcoll_df_size", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 10, 0, 0, 2, 0, 1, 0, 0, 0.0196078431372549, ["cmp     edx, 4000h", "jz      short loc_891E"], ["cmp~edx,0", "jz~FOO"]], [2, 0, 13, 0, 0, 4, 1, 1, 3, 4, 0.022875816993464054, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_88F4"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [1, 0, 9, 0, 0, 2, 0, 1, 3, 3, 0.06535947712418301, ["cmp     edx, 4000h", "jz      short loc_8948"], ["cmp~edx,0", "jz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 1, 4, 0.0196078431372549, ["cmp     ecx, 9", "jz      short loc_8908"], ["cmp~ecx,0", "jz~FOO"]], [3, 0, 18, 0, 0, 9, 1, 1, 0, 4, 0.0, ["mov     edx, [b+0A8h]", "mov     ecx, [a+0A8h]", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      eax, edx", "cmp     ecx, 3", "jz      short loc_8908"], ["mov~edx,[b+0]", "mov~ecx,[a+0]", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~eax,edx", "cmp~ecx,0", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 3, -1, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [2, 0, 9, 0, 0, 4, 1, 1, 2, 3, 0.00980392156862745, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_8948"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 1, 0, 3, -1, 0.05446623093681917, ["lea     rdx, a8+6; \"\"", "test    rbp, rbp", "cmovz   rbp, rdx"], ["lea~rdx,<TAG>", "test~rbp,rbp", "cmovz~rbp,rdx"]], [2, 0, 7, 0, 2, 15, 1, 3, 2, 2, 0.2058823529411765, ["push    r12", "push    rbp", "push    rbx", "mov     r12, [b]", "mov     rbx, a", "mov     esi, 2Eh ; '.'; c", "mov     a, r12; s", "call    _strrchr", "mov     a, [a]", "mov     esi, 2Eh ; '.'; c", "mov     rbp, rax", "mov     rdi, rbx; s", "call    _strrchr", "test    rax, rax", "jz      short loc_89B0"], ["push~r12", "push~rbp", "push~rbx", "mov~r12,<TAG>", "mov~rbx,a", "mov~esi,0", "mov~a,r12", "call~FOO", "mov~a,<TAG>", "mov~esi,0", "mov~rbp,rax", "mov~rdi,rbx", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 1, 4, 0, 0.02505446623093682, ["jmp     short loc_8994"], ["jmp~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 3, 1, 0.10893246187363834, ["test    rbp, rbp", "lea     rax, a8+6; \"\"", "jnz     short loc_8985"], ["test~rbp,rbp", "lea~rax,<TAG>", "jnz~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 1, 3, 0.06535947712418301, ["test    al, al", "jnz     short loc_8948"], ["test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 5, -1, 0.0, ["pop     rbx", "pop     rbp", "pop     r12", "retn"], ["pop~rbx", "pop~rbp", "pop~r12", "retn"]], [0, 0, 3, 0, 1, 5, 1, 2, 4, -1, 0.09259259259259257, ["mov     rsi, rax; s2", "mov     rdi, rbp; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_89A8"], ["mov~rsi,rax", "mov~rdi,rbp", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 5, 3, 0.026143790849673203, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 14, 0, 0, 4, 2, 1, 2, 4, 0.032679738562091505, ["mov     edx, [a+0ACh]", "and     edx, 0F000h", "test    al, al", "jz      short loc_8928"], ["mov~edx,[a+0]", "and~edx,0", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []], [0, 0, 1, 0, 0, 6, 0, 1, 5, -1, 0.04575163398692811, ["mov     rsi, rbx; s2", "mov     rdi, r12; s1", "pop     rbx", "pop     rbp", "pop     r12", "jmp     _strcmp"], ["mov~rsi,rbx", "mov~rdi,r12", "pop~rbx", "pop~rbp", "pop~r12", "jmp~FOO"]]], "func_feature": [3, 10, 16, 0, 19, 26, 0, 71, 0.0418, 1, 0], "succs": [[6, 15], [0, 3], [], [9, 2], [16, 12], [12, 4], [], [9, 6], [14], [8, 11], [18], [10, 14], [9, 7], [], [18, 13], [9], [1, 3], [], [17]], "fname": "rev_strcmp_df_extension", "n_num": 19}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 6, 0, 0, 2, 0, 1, 0, 0, 0.03296703296703297, ["cmp     edx, 4000h", "jz      short loc_8A1E"], ["cmp~edx,0", "jz~FOO"]], [2, 0, 9, 0, 0, 4, 1, 1, 3, 3, 0.038461538461538464, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_89F4"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [1, 0, 5, 0, 0, 2, 0, 1, 3, 2, 0.06593406593406594, ["cmp     edx, 4000h", "jz      short loc_8A48"], ["cmp~edx,0", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 1, 3, 0.03296703296703297, ["cmp     ecx, 9", "jz      short loc_8A08"], ["cmp~ecx,0", "jz~FOO"]], [3, 0, 14, 0, 0, 9, 1, 1, 0, 3, 0.0, ["mov     edx, [b+0A8h]", "mov     ecx, [a+0A8h]", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      eax, edx", "cmp     ecx, 3", "jz      short loc_8A08"], ["mov~edx,[b+0]", "mov~ecx,[a+0]", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~eax,edx", "cmp~ecx,0", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 3, -1, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [2, 0, 5, 0, 0, 4, 1, 1, 2, 2, 0.016483516483516484, ["mov     eax, [b+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_8A48"], ["mov~eax,[b+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [1, 0, 1, 1, 0, 8, 0, 1, 3, -1, 0.05494505494505495, ["add     rsp, 8", "mov     rsi, r13; s2", "mov     rdi, r12; s1", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "jmp     _strcoll"], ["add~rsp,0", "mov~rsi,r13", "mov~rdi,r12", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "jmp~FOO"]], [4, 0, 3, 1, 4, 28, 3, 5, 2, 1, 0.14835164835164835, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, b", "mov     esi, 2Eh ; '.'; c", "sub     rsp, 8", "mov     r12, [a]", "mov     a, r12; s", "call    _strrchr", "mov     r13, [b]", "mov     esi, 2Eh ; '.'; c", "mov     rbp, rax", "mov     rdi, r13; s", "call    _strrchr", "mov     b, rax", "lea     rax, a8+6; \"\"", "test    rbx, rbx", "cmovz   rbx, rax", "test    rbp, rbp", "cmovz   rbp, rax", "call    ___errno_location", "mov     rsi, rbx; s2", "mov     dword ptr [rax], 0", "mov     rdi, rbp; s1", "call    _strcoll", "test    eax, eax", "jnz     short loc_8AC0"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,b", "mov~esi,0", "sub~rsp,0", "mov~r12,<TAG>", "mov~a,r12", "call~FOO", "mov~r13,<TAG>", "mov~esi,0", "mov~rbp,rax", "mov~rdi,r13", "call~FOO", "mov~b,rax", "lea~rax,<TAG>", "test~rbx,rbx", "cmovz~rbx,rax", "test~rbp,rbp", "cmovz~rbp,rax", "call~FOO", "mov~rsi,rbx", "mov~<TAG>,0", "mov~rdi,rbp", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 1, 2, 0.06593406593406594, ["test    al, al", "jnz     short loc_8A48"], ["test~al,al", "jnz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 5, 2, 0.02197802197802198, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [1, 0, 10, 0, 0, 4, 2, 1, 2, 3, 0.05494505494505495, ["mov     edx, [a+0ACh]", "and     edx, 0F000h", "test    al, al", "jz      short loc_8A28"], ["mov~edx,[a+0]", "and~edx,0", "test~al,al", "jz~FOO"]]], "func_feature": [4, 9, 14, 0, 15, 20, 0, 76, 0.03553, 1, 3], "succs": [[12, 6], [0, 3], [], [2, 10], [11, 14], [11, 4], [], [10, 6], [], [8], [9, 13], [10, 7], [10], [], [1, 3]], "fname": "xstrcoll_df_extension", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[2, 0, 0, 1, 0, 6, 0, 0, 0, 0, 0.0, ["lea     type, [rax+1]", "mov     [rdi+28h], rdx", "mov     [rax], cl", "mov     eax, 1", "add     cs:dired_pos, 1", "retn"], ["lea~type,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,cl", "mov~eax,0", "add~<TAG>,0", "retn"]], [0, 0, 2, 0, 0, 4, 0, 0, 4, 1, 0.07509881422924901, ["mov     stat_ok, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_8C10"], ["mov~stat_ok,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [1, 0, 17, 0, 0, 3, 1, 1, 1, 4, 0.017786561264822132, ["xor     eax, eax", "cmp     edx, 5", "jz      locret_8BA0"], ["xor~eax,eax", "cmp~edx,0", "jz~FOO"]], [0, 0, 23, 0, 0, 2, 1, 1, 0, 5, 0.0, ["test    dil, dil", "jz      short loc_8B00"], ["test~dil,dil", "jz~FOO"]], [2, 0, 3, 0, 0, 3, 0, 1, 6, 2, 0.023715415019762844, ["mov     esi, 40h ; '@'", "mov     ecx, 40h ; '@'", "jmp     loc_8B58"], ["mov~esi,0", "mov~ecx,0", "jmp~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 5, 3, 0.04841897233201581, ["cmp     edx, 6", "jz      loc_8C00"], ["cmp~edx,0", "jz~FOO"]], [2, 0, 9, 0, 0, 3, 1, 1, 5, 3, 0.04841897233201581, ["and     esi, 0F000h", "cmp     esi, 0A000h", "jz      short loc_8C00"], ["and~esi,0", "cmp~esi,0", "jz~FOO"]], [1, 0, 15, 0, 0, 4, 1, 1, 2, 3, 0.04150197628458498, ["cmp     eax, 4000h", "setz    al", "test    al, al", "jz      short loc_8B1D"], ["cmp~eax,0", "setz~al", "test~al,al", "jz~FOO"]], [2, 0, 19, 0, 0, 4, 1, 1, 1, 4, 0.023715415019762844, ["mov     eax, esi", "and     eax, 0F000h", "cmp     eax, 8000h", "jnz     loc_8B88"], ["mov~eax,esi", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [2, 0, 15, 0, 0, 7, 2, 1, 2, 3, 0.043478260869565216, ["cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    cl", "or      eax, ecx", "test    al, al", "jnz     short loc_8B94"], ["cmp~edx,0", "setz~al", "cmp~edx,0", "setz~cl", "or~eax,ecx", "test~al,al", "jnz~FOO"]], [2, 0, 3, 0, 0, 3, 0, 1, 3, 2, 0.029644268774703556, ["mov     esi, 2Fh ; '/'", "mov     ecx, 2Fh ; '/'", "jmp     short loc_8B58"], ["mov~esi,0", "mov~ecx,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 13, 0, 0, 2, 0, 1, 3, 5, 0.09486166007905138, ["cmp     cs:indicator_style_0, 1", "jz      short locret_8AF6"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 12, 0, 0, 2, 1, 1, 4, 4, 0.10079051383399208, ["test    dil, dil", "jnz     short loc_8BA8"], ["test~dil,dil", "jnz~FOO"]], [4, 0, 0, 3, 1, 6, 0, 1, 5, 0, 0.0, ["sub     rsp, 8", "call    ___overflow", "add     cs:dired_pos, 1", "mov     eax, 1", "add     rsp, 8", "retn"], ["sub~rsp,0", "call~FOO", "add~<TAG>,0", "mov~eax,0", "add~rsp,0", "retn"]], [2, 0, 7, 0, 0, 4, 0, 1, 6, 3, 0.029644268774703556, ["cmp     edx, 7", "setz    al", "cmp     edx, 1", "jz      loc_8BCB"], ["cmp~edx,0", "setz~al", "cmp~edx,0", "jz~FOO"]], [1, 1, 7, 0, 0, 4, 0, 1, 6, 3, 0.029644268774703556, ["cmp     esi, 0C000h", "setz    al", "cmp     esi, 1000h", "jnz     loc_8B43"], ["cmp~esi,0", "setz~al", "cmp~esi,<STR>", "jnz~FOO"]], [2, 0, 5, 0, 0, 4, 1, 1, 7, 3, 0.03162055335968379, ["test    al, al", "mov     esi, 3Dh ; '='; int", "mov     ecx, 3Dh ; '='", "jz      short locret_8AF6"], ["test~al,al", "mov~esi,0", "mov~ecx,0", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 8, 2, 0.005928853754940711, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [2, 0, 3, 0, 0, 3, 0, 1, 7, 2, 0.011857707509881422, ["mov     esi, 7Ch ; '|'", "mov     ecx, 7Ch ; '|'", "jmp     loc_8B58"], ["mov~esi,0", "mov~ecx,0", "jmp~FOO"]], [1, 0, 5, 0, 0, 2, 1, 1, 3, 3, 0.011857707509881422, ["and     esi, 49h", "jz      locret_8AF6"], ["and~esi,0", "jz~FOO"]], [1, 0, 6, 0, 0, 3, 1, 1, 2, 4, 0.011857707509881422, ["xor     eax, eax", "cmp     cs:indicator_style_0, 3", "jz      loc_8BE0"], ["xor~eax,eax", "cmp~<TAG>,0", "jz~FOO"]], [2, 0, 3, 0, 0, 3, 0, 1, 4, 2, 0.011857707509881422, ["mov     esi, 2Ah ; '*'", "mov     ecx, 2Ah ; '*'", "jmp     loc_8B58"], ["mov~esi,0", "mov~ecx,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [1, 11, 19, 0, 24, 35, 3, 77, 0.02882, 3, 4], "succs": [[], [0, 14], [9, 11], [8, 2], [1], [4, 15], [16, 4], [10, 12], [21, 7], [10, 12], [1], [], [13, 23], [5, 6], [], [17, 19], [17, 19], [18, 23], [1], [1], [22, 23], [20, 23], [1], []], "fname": "print_type_indicator", "n_num": 24}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 25, 0, 3, 7, 0, 4, 0, 0, 0.0, ["mov     rdi, [f+0]; ptr", "call    free", "mov     rdi, [f+8]; ptr", "call    free", "mov     rdi, [f+10h]; ptr", "call    free", "jmp     loc_8CC3"], ["mov~rdi,[f+0]", "call~FOO", "mov~rdi,[f+0]", "call~FOO", "mov~rdi,[f+0]", "call~FOO", "jmp~FOO"]], [1, 0, 25, 0, 0, 2, 0, 1, 8, 7, 0.3041871921182266, ["cmp     dword ptr [f+0A8h], 9", "jnz     loc_8CC3"], ["cmp~[word ptr [f+0],0", "jnz~FOO"]], [2, 1, 27, 0, 2, 11, 0, 2, 2, 8, 0.0, ["mov     edi, 20h ; ' '; n", "call    xmalloc", "mov     rdi, dirname; string", "mov     rbx, rax", "call    xstrdup", "mov     [rbx+8], rax", "mov     rax, cs:pending_dirs", "mov     qword ptr [rbx], 0", "mov     byte ptr [rbx+10h], 0", "mov     cs:pending_dirs, rbx", "mov     [rbx+18h], rax"], ["mov~edi,<STR>", "call~FOO", "mov~rdi,dirname", "mov~rbx,rax", "call~FOO", "mov~[rbx+0],rax", "mov~rax,<TAG>", "mov~<TAG>,0", "mov~[yte ptr [rbx+0],0", "mov~<TAG>,rbx", "mov~[rbx+0],rax"]], [1, 0, 28, 0, 0, 2, 0, 1, 1, 8, 0.0012315270935960591, ["cmp     cs:active_dir_set, 0", "jz      short loc_8C89"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 1, 25, 0, 2, 14, 3, 3, 7, 10, 0.1307471264367816, ["xor     edx, edx; base_in_result", "mov     rsi, r15; base", "mov     rdi, dirname; dir", "call    file_name_concat", "mov     rcx, [f+8]", "mov     edi, 20h ; ' '; n", "mov     r15, rax", "mov     [rsp+48h+string], rcx", "call    xmalloc", "mov     rcx, [rsp+48h+string]", "mov     rdx, rax", "xor     eax, eax", "test    rcx, rcx", "jz      short loc_8D9C"], ["xor~edx,edx", "mov~rsi,r15", "mov~rdi,dirname", "call~FOO", "mov~rcx,[f+0]", "mov~edi,<STR>", "mov~r15,rax", "mov~[rsp+0],rcx", "call~FOO", "mov~rcx,[rsp+0]", "mov~rdx,rax", "xor~eax,eax", "test~rcx,rcx", "jz~FOO"]], [1, 0, 25, 0, 0, 2, 0, 1, 6, 11, 0.17959770114942528, ["cmp     byte ptr [r15], 2Fh ; '/'", "jz      loc_8E10"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 2, 2, 0, 9, 0, 1, 4, -1, 0.0012315270935960591, ["mov     rcx, [rax]", "cmp     dword ptr [f+0A8h], 9", "mov     [rsi+j*8], f", "setnz   cl", "add     rax, 8", "movzx   ecx, cl", "add     j, rcx", "cmp     rdi, rax", "jnz     short loc_8CF0"], ["mov~rcx,<TAG>", "cmp~[word ptr [f+0],0", "mov~<TAG>,f", "setnz~cl", "add~rax,0", "movzx~ecx,cl", "add~j,rcx", "cmp~rdi,rax", "jnz~FOO"]], [0, 0, 2, 0, 0, 5, 1, 0, 3, -1, 0.0332512315270936, ["mov     rsi, cs:sorted_file", "lea     rdi, [rsi+rdx*8]", "mov     rax, rsi", "xor     edx, edx", "nop     dword ptr [rax]"], ["mov~rsi,<TAG>", "lea~rdi,<TAG>", "mov~rax,rsi", "xor~edx,edx", "nop~<TAG>"]], [1, 0, 25, 0, 0, 6, 2, 1, 6, 2, 0.07635467980295567, ["xor     edx, edx", "cmp     byte ptr [rax+1], 2Eh ; '.'", "setz    dl", "movzx   eax, byte ptr [rax+rdx+1]", "test    al, al", "jz      loc_8CC3"], ["xor~edx,edx", "cmp~[yte ptr [rax+0],0", "setz~dl", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [1, 0, 25, 0, 1, 4, 0, 2, 5, 3, 0.23029556650246305, ["mov     rdi, r15; name", "call    last_component", "cmp     byte ptr [rax], 2Eh ; '.'", "jz      loc_8E80"], ["mov~rdi,r15", "call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 25, 0, 1, 4, 0, 1, 8, 10, 0.0, ["mov     rdi, rcx; string", "mov     [rsp+48h+string], rdx", "call    xstrdup", "mov     rdx, [rsp+48h+string]"], ["mov~rdi,rcx", "mov~[rsp+0],rdx", "call~FOO", "mov~rdx,[rsp+0]"]], [1, 0, 25, 0, 0, 2, 0, 1, 7, 1, 0.041666666666666664, ["cmp     al, 2Fh ; '/'", "jz      loc_8CC3"], ["cmp~al,0", "jz~FOO"]], [0, 0, 25, 0, 0, 1, 0, 1, 8, 0, 0.028119868637110017, ["jmp     loc_8D4E"], ["jmp~FOO"]], [2, 0, 26, 1, 0, 5, 0, 1, 1, 7, 0.09605911330049262, ["mov     rbx, cs:cwd_n_used", "lea     r12, ds:0FFFFFFFFFFFFFFF8h[i*8]", "sub     i, 1", "cmp     i, 0FFFFFFFFFFFFFFFFh", "jz      short loc_8CD1"], ["mov~rbx,<TAG>", "lea~r12,<TAG>", "sub~i,0", "cmp~i,0", "jz~FOO"]], [1, 0, 29, 1, 0, 11, 1, 1, 0, 8, 0.0, ["push    r15", "push    r14", "mov     r14d, esi", "push    r13", "push    r12", "mov     r13, dirname", "push    rbp", "push    rbx", "sub     rsp, 18h", "test    dirname, dirname", "jz      short loc_8C89"], ["push~r15", "push~r14", "mov~r14d,esi", "push~r13", "push~r12", "mov~r13,dirname", "push~rbp", "push~rbx", "sub~rsp,0", "test~dirname,dirname", "jz~FOO"]], [0, 0, 25, 0, 0, 1, 0, 0, 2, 6, 0.10344827586206896, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 25, 0, 0, 4, 2, 1, 8, 9, 0.1282840722495895, ["mov     [rdx+8], rax", "xor     eax, eax", "test    name, name", "jz      short loc_8DB9"], ["mov~[rdx+0],rax", "xor~eax,eax", "test~name,name", "jz~FOO"]], [0, 1, 25, 0, 1, 9, 2, 2, 5, 10, 0.15496715927750412, ["mov     rcx, [f+8]", "mov     edi, 20h ; ' '; n", "mov     [rsp+48h+string], rcx", "call    xmalloc", "mov     rcx, [rsp+48h+string]", "mov     rdx, rax", "xor     eax, eax", "test    rcx, rcx", "jz      short loc_8E44"], ["mov~rcx,[f+0]", "mov~edi,<STR>", "mov~[rsp+0],rcx", "call~FOO", "mov~rcx,[rsp+0]", "mov~rdx,rax", "xor~eax,eax", "test~rcx,rcx", "jz~FOO"]], [0, 0, 25, 0, 0, 3, 1, 1, 4, 4, 0.3696633825944171, ["test    dirname, dirname", "mov     r15, [f+0]", "jz      loc_8E10"], ["test~dirname,dirname", "mov~r15,[f+0]", "jz~FOO"]], [0, 0, 25, 0, 1, 4, 0, 1, 9, 9, 0.0, ["mov     rdi, name; string", "mov     [rsp+48h+string], rdx", "call    xstrdup", "mov     rdx, [rsp+48h+string]"], ["mov~rdi,name", "mov~[rsp+0],rdx", "call~FOO", "mov~rdx,[rsp+0]"]], [1, 0, 25, 0, 0, 5, 0, 1, 3, 5, 0.3967569786535304, ["mov     rax, cs:sorted_file", "mov     rbp, [rax+r12]", "mov     eax, [f+0A8h]", "cmp     eax, 3", "jz      short loc_8D30"], ["mov~rax,<TAG>", "mov~rbp,<TAG>", "mov~eax,[f+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 25, 0, 0, 2, 0, 1, 4, 5, 0.017241379310344827, ["cmp     eax, 9", "jz      short loc_8D30"], ["cmp~eax,0", "jz~FOO"]], [3, 0, 25, 2, 0, 4, 0, 1, 5, 6, 0.3721264367816092, ["sub     i, 1", "sub     r12, 8", "cmp     i, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_8CA8"], ["sub~i,0", "sub~r12,0", "cmp~i,0", "jnz~FOO"]], [0, 0, 25, 0, 1, 4, 0, 1, 6, 10, 0.0, ["mov     rdi, rcx; string", "mov     [rsp+48h+string], rdx", "call    xstrdup", "mov     rdx, [rsp+48h+string]"], ["mov~rdi,rcx", "mov~[rsp+0],rdx", "call~FOO", "mov~rdx,[rsp+0]"]], [0, 0, 25, 0, 0, 4, 2, 1, 6, 9, 0.15250410509031198, ["mov     [rdx+8], rax", "xor     eax, eax", "test    r15, r15", "jz      short loc_8E61"], ["mov~[rdx+0],rax", "xor~eax,eax", "test~r15,r15", "jz~FOO"]], [0, 0, 25, 0, 1, 7, 0, 1, 9, 8, 0.12582101806239737, ["mov     [rdx], rax", "mov     rax, cs:pending_dirs", "mov     rdi, name; ptr", "mov     [rdx+10h], r14b", "mov     cs:pending_dirs, rdx", "mov     [rdx+18h], rax", "call    free"], ["mov~<TAG>,rax", "mov~rax,<TAG>", "mov~rdi,name", "mov~[rdx+0],r14b", "mov~<TAG>,rdx", "mov~[rdx+0],rax", "call~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 2, -1, 0.09605911330049262, ["mov     rdx, cs:cwd_n_used", "test    rdx, rdx", "jz      short loc_8D10"], ["mov~rdx,<TAG>", "test~rdx,rdx", "jz~FOO"]], [0, 0, 25, 0, 1, 4, 0, 1, 7, 9, 0.0, ["mov     rdi, r15; string", "mov     [rsp+48h+string], rdx", "call    xstrdup", "mov     rdx, [rsp+48h+string]"], ["mov~rdi,r15", "mov~[rsp+0],rdx", "call~FOO", "mov~rdx,[rsp+0]"]], [1, 0, 0, 1, 0, 9, 0, 0, 3, -1, 0.0, ["mov     cs:cwd_n_used, rdx", "add     rsp, 18h", "pop     rbx", "pop     rbp", "pop     r12", "pop     dirname", "pop     command_line_arg", "pop     r15", "retn"], ["mov~<TAG>,rdx", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~dirname", "pop~command_line_arg", "pop~r15", "retn"]], [0, 0, 25, 0, 0, 6, 0, 1, 7, 8, 0.1500410509031199, ["mov     [rdx], rax", "mov     rax, cs:pending_dirs", "mov     [rdx+10h], r14b", "mov     cs:pending_dirs, rdx", "mov     [rdx+18h], rax", "jmp     loc_8DDA"], ["mov~<TAG>,rax", "mov~rax,<TAG>", "mov~[rdx+0],r14b", "mov~<TAG>,rdx", "mov~[rdx+0],rax", "jmp~FOO"]]], "func_feature": [14, 15, 35, 0, 30, 47, 2, 154, 0.10632, 5, 7], "succs": [[22], [0, 22], [13], [2, 13], [16, 10], [17, 4], [28, 6], [6], [11, 22], [8, 5], [16], [12, 22], [5], [26, 15], [3, 13], [20], [25, 19], [24, 23], [17, 9], [25], [18, 21], [18, 22], [26, 20], [24], [27, 29], [1], [28, 7], [29], [], [1]], "fname": "extract_dirs_from_files", "n_num": 30}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 138, 0, 0, 2, 0, 1, 0, 0, 0.0019157088122605365, ["mov     r12d, 1", "jmp     loc_8F21"], ["mov~r12d,0", "jmp~FOO"]], [0, 0, 142, 0, 0, 2, 1, 1, 1, 12, 0.0032088122605363986, ["test    ebx, ebx", "jnz     loc_99FD"], ["test~ebx,ebx", "jnz~FOO"]], [2, 0, 42, 0, 0, 6, 0, 1, 10, 3, 0.0010057471264367816, ["lea     rcx, [rax+1]", "mov     [rsp+2098h+stack], 1", "mov     [rsp+2098h+var_2068], 2", "mov     [rdi+28h], rcx", "mov     [rax], dl", "jmp     loc_93A6"], ["lea~rcx,[rax+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rdi+0],rcx", "mov~<TAG>,dl", "jmp~FOO"]], [0, 0, 44, 0, 0, 6, 0, 0, 9, 4, 0.009386973180076629, ["mov     rax, [rsp+2098h+s]", "mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "movzx   edx, byte ptr [rax]", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_99CF"], ["mov~rax,<TAG>", "mov~rdi,<TAG>", "movzx~edx,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [2, 0, 37, 1, 0, 5, 0, 1, 13, 4, 0.010584291187739464, ["movzx   edx, al", "add     r12, 1", "cmp     byte ptr [r14+rdx], 0", "mov     r8, rdx", "jz      loc_9680"], ["movzx~edx,al", "add~r12,0", "cmp~<TAG>,0", "mov~r8,rdx", "jz~FOO"]], [1, 0, 37, 1, 0, 5, 1, 1, 14, 3, 0.0015804597701149425, ["mov     [r13+0], al", "movzx   eax, byte ptr [r12]", "add     r13, 1", "test    al, al", "jnz     short loc_93FC"], ["mov~[r13+0],al", "movzx~eax,<TAG>", "add~r13,0", "test~al,al", "jnz~FOO"]], [0, 0, 37, 0, 0, 3, 1, 1, 12, 3, 0.0917624521072797, ["movzx   eax, byte ptr [r12]", "test    al, al", "jz      short loc_9422"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 10, -1, 0.01360153256704981, ["lea     rax, [rbx+rbp]", "mov     rbx, [rsp+2098h+var_40]", "xor     rbx, fs:28h", "jnz     loc_99EE"], ["lea~rax,<TAG>", "mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "jnz~FOO"]], [0, 0, 5, 0, 0, 4, 0, 1, 9, -1, 0.03328544061302682, ["mov     rsi, [rsp+2098h+s]", "lea     rax, [rsp+2098h+smallbuf]", "cmp     rsi, rax", "jz      short loc_95F7"], ["mov~rsi,<TAG>", "lea~rax,[rsp+0]", "cmp~rsi,rax", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 10, -1, 0.006704980842911878, ["cmp     [rsp+2098h+name], rsi", "jz      short loc_95F7"], ["cmp~[rsp+0],rsi", "jz~FOO"]], [0, 0, 3, 0, 1, 2, 0, 1, 11, -1, 0.0, ["mov     rdi, rsi; ptr", "call    free"], ["mov~rdi,rsi", "call~FOO"]], [1, 0, 40, 0, 0, 2, 0, 1, 9, 2, 0.0, ["mov     esi, 1", "jmp     loc_93C9"], ["mov~esi,0", "jmp~FOO"]], [1, 0, 41, 1, 1, 8, 1, 1, 8, 2, 0.11125478927203065, ["mov     r12, cs:hostname", "mov     rdi, r12; s", "call    _strlen", "lea     rcx, [rax+1]", "mov     eax, 3", "xor     esi, esi", "mul     rcx", "jo      loc_9A08"], ["mov~r12,<TAG>", "mov~rdi,r12", "call~FOO", "lea~rcx,[rax+0]", "mov~eax,0", "xor~esi,esi", "mul~,rcx", "jo~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 10, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 39, 0, 0, 2, 1, 1, 9, 1, 0.10512452107279693, ["test    rax, rax", "js      loc_9A12"], ["test~rax,rax", "js~FOO"]], [0, 0, 38, 0, 0, 2, 1, 1, 10, 1, 0.09683908045977012, ["test    rsi, rsi", "jnz     loc_9A12"], ["test~rsi,rsi", "jnz~FOO"]], [0, 0, 30, 0, 0, 2, 1, 1, 14, 1, 0.06767241379310344, ["test    rax, rax", "js      loc_9A12"], ["test~rax,rax", "js~FOO"]], [0, 0, 29, 0, 0, 2, 1, 1, 15, 1, 0.06321839080459771, ["test    rsi, rsi", "jnz     loc_9A12"], ["test~rsi,rsi", "jnz~FOO"]], [1, 0, 123, 1, 1, 10, 0, 2, 10, 12, 0.10871647509578544, ["mov     rdi, [rsp+2098h+skip_quotes]; pwc", "mov     rdx, r14", "mov     rcx, r13; ps", "sub     rdx, r12; n", "mov     rsi, r12; s", "lea     rbp, [rbx+1]", "call    rpl_mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     r15, rax", "jz      loc_9870"], ["mov~rdi,[rsp+0]", "mov~rdx,r14", "mov~rcx,r13", "sub~rdx,r12", "mov~rsi,r12", "lea~rbp,[rbx+0]", "call~FOO", "cmp~rax,0", "mov~r15,rax", "jz~FOO"]], [0, 0, 123, 0, 1, 4, 1, 2, 15, 11, 0.18979885057471266, ["mov     rdi, r13; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_8FF8"], ["mov~rdi,r13", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 123, 0, 0, 2, 0, 0, 9, 13, 0.05531609195402299, ["mov     qword ptr [rsp+2098h+ps.__count], 0", "nop     word ptr [rax+rax+00h]"], ["mov~[word ptr [rsp+0],0", "nop~[ord ptr [rax+0]"]], [1, 0, 123, 0, 0, 7, 0, 1, 30, 17, 0.00617816091954023, ["movzx   ecx, byte ptr [r12+0Ch]", "cmp     rax, 0Dh", "lea     rsi, [r12+0Dh]", "lea     rbp, [rbx+0Dh]", "mov     [rbx+0Ch], cl", "lea     rcx, [r15-0Dh]", "jz      short loc_924E"], ["movzx~ecx,[yte ptr [r12+0]", "cmp~rax,0", "lea~rsi,[r12+0]", "lea~rbp,[rbx+0]", "mov~[rbx+0],cl", "lea~rcx,[r15-0Dh]+0]", "jz~FOO"]], [1, 0, 123, 0, 0, 7, 0, 1, 29, 17, 0.009195402298850575, ["movzx   ecx, byte ptr [r12+0Bh]", "cmp     rax, 0Ch", "lea     rsi, [r12+0Ch]", "lea     rbp, [rbx+0Ch]", "mov     [rbx+0Bh], cl", "lea     rcx, [r15-0Ch]", "jz      short loc_924E"], ["movzx~ecx,[yte ptr [r12+0]", "cmp~rax,0", "lea~rsi,[r12+0]", "lea~rbp,[rbx+0]", "mov~[rbx+0],cl", "lea~rcx,[r15-0Ch]+0]", "jz~FOO"]], [1, 0, 123, 0, 0, 2, 0, 1, 11, 12, 0.09760536398467433, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_9880"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 123, 0, 1, 4, 1, 2, 13, 13, 0.009371008939974463, ["call    _wcwidth", "test    eax, eax", "lea     rcx, [r12+1]", "js      short loc_9810"], ["call~FOO", "test~eax,eax", "lea~rcx,[r12+0]", "js~FOO"]], [0, 0, 123, 0, 0, 3, 1, 1, 12, 14, 0.09324712643678161, ["test    rax, rax", "mov     edi, [rsp+2098h+c]; c", "jz      loc_9820"], ["test~rax,rax", "mov~edi,[rsp+0]", "jz~FOO"]], [1, 0, 12, 0, 1, 6, 0, 2, 10, -1, 0.0, ["mov     esi, 8; length", "mov     rdi, __o1; h", "call    _obstack_newchunk", "mov     rcx, [__o1+18h]", "mov     rax, cs:dired_pos", "jmp     loc_957E"], ["mov~esi,0", "mov~rdi,__o1", "call~FOO", "mov~rcx,[__o1+0]", "mov~rax,<TAG>", "jmp~FOO"]], [1, 0, 13, 1, 0, 5, 0, 0, 9, -1, 0.012452107279693488, ["mov     rcx, [__o1+18h]", "mov     rdx, [__o1+20h]", "sub     rdx, rcx", "cmp     rdx, 7", "jbe     loc_98F0"], ["mov~rcx,[__o1+0]", "mov~rdx,[__o1+0]", "sub~rdx,rcx", "cmp~rdx,0", "jbe~FOO"]], [2, 0, 65, 0, 0, 3, 0, 1, 6, 7, 0.0165948275862069, ["cmp     byte ptr [rsp+2098h+var_2068], 0", "mov     ebp, 1", "jz      loc_9324"], ["cmp~[yte ptr [rsp+0],0", "mov~ebp,0", "jz~FOO"]], [1, 0, 67, 0, 0, 2, 0, 1, 5, 8, 0.01867816091954023, ["cmp     byte ptr [rsp+2098h+ptr], 0", "jz      loc_9628"], ["cmp~[yte ptr [rsp+0],0", "jz~FOO"]], [1, 0, 123, 0, 0, 7, 0, 1, 31, 17, 0.003113026819923372, ["movzx   ecx, byte ptr [r12+0Dh]", "cmp     rax, 0Fh", "lea     rsi, [r12+0Eh]", "lea     rbp, [rbx+0Eh]", "mov     [rbx+0Dh], cl", "lea     rcx, [r15-0Eh]", "jnz     short loc_924E"], ["movzx~ecx,[yte ptr [r12+0]", "cmp~rax,0", "lea~rsi,[r12+0]", "lea~rbp,[rbx+0]", "mov~[rbx+0],cl", "lea~rcx,[r15-0Eh]+0]", "jnz~FOO"]], [0, 0, 123, 0, 0, 5, 0, 1, 14, 12, 0.0052362707535121384, ["movzx   eax, byte ptr [r12]", "mov     r12, rcx", "mov     [rbx], al", "mov     rbx, rbp", "jmp     loc_92B8"], ["movzx~eax,<TAG>", "mov~r12,rcx", "mov~<TAG>,al", "mov~rbx,rbp", "jmp~FOO"]], [2, 0, 32, 1, 1, 8, 1, 1, 13, 2, 0.07552681992337165, ["mov     rdi, [rsp+2098h+var_2090]; s", "mov     byte ptr [r13+0], 0", "call    _strlen", "lea     rcx, [rax+1]", "mov     eax, 3", "xor     esi, esi", "mul     rcx", "jo      loc_99F3"], ["mov~rdi,[rsp+0]", "mov~[yte ptr [r13+0],0", "call~FOO", "lea~rcx,[rax+0]", "mov~eax,0", "xor~esi,esi", "mul~,rcx", "jo~FOO"]], [0, 0, 123, 0, 1, 4, 1, 2, 13, 13, 0.08339719029374205, ["call    _wcwidth", "test    eax, eax", "lea     rcx, [r12+r15]", "js      loc_9810"], ["call~FOO", "test~eax,eax", "lea~rcx,<TAG>", "js~FOO"]], [1, 0, 123, 0, 0, 2, 0, 1, 8, 12, 0.05411877394636015, ["cmp     al, 41h ; 'A'", "jl      loc_8FE9"], ["cmp~al,0", "jl~FOO"]], [1, 0, 123, 0, 0, 3, 0, 1, 7, 12, 0.06886973180076629, ["movzx   eax, byte ptr [r12]", "cmp     al, 3Fh ; '?'", "jg      loc_9840"], ["movzx~eax,<TAG>", "cmp~al,0", "jg~FOO"]], [0, 0, 64, 0, 0, 4, 0, 0, 7, 9, 0.011494252873563218, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_99C0"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [1, 0, 31, 0, 0, 2, 0, 1, 14, 2, 0.0, ["mov     esi, 1", "jmp     loc_9445"], ["mov~esi,0", "jmp~FOO"]], [0, 0, 123, 0, 0, 5, 0, 0, 32, 17, 0.0, ["movzx   ecx, byte ptr [r12+0Eh]", "lea     rsi, [r12+0Fh]", "lea     rbp, [rbx+0Fh]", "mov     [rbx+0Eh], cl", "lea     rcx, [r15-0Fh]"], ["movzx~ecx,[yte ptr [r12+0]", "lea~rsi,[r12+0]", "lea~rbp,[rbx+0]", "mov~[rbx+0],cl", "lea~rcx,[r15-0Fh]+0]"]], [1, 0, 123, 0, 0, 3, 0, 1, 10, 11, 0.0021072796934865903, ["lea     edx, [rax-61h]", "cmp     dl, 1Dh", "ja      loc_8FE9"], ["lea~edx,[rax-61h]+0]", "cmp~dl,0", "ja~FOO"]], [1, 0, 123, 0, 0, 2, 0, 1, 9, 11, 0.006752873563218391, ["cmp     al, 5Fh ; '_'", "jle     short loc_9858"], ["cmp~al,0", "jle~FOO"]], [0, 1, 62, 0, 0, 3, 0, 0, 8, 8, 0.0034003831417624523, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 20h ; ' '"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,<STR>"]], [0, 0, 123, 0, 0, 8, 1, 1, 14, 16, 0.0778256704980843, ["lea     rax, [r12+10h]", "cmp     rbx, rax", "lea     rax, [rbx+10h]", "setnb   cl", "cmp     r12, rax", "setnb   al", "or      cl, al", "jz      loc_9890"], ["lea~rax,[r12+0]", "cmp~rbx,rax", "lea~rax,[rbx+0]", "setnb~cl", "cmp~r12,rax", "setnb~al", "or~cl,al", "jz~FOO"]], [2, 0, 123, 2, 0, 4, 0, 1, 9, 10, 0.026484674329501915, ["mov     [rbx], al", "add     r12, 1", "add     rbx, 1", "jmp     loc_92D0"], ["mov~<TAG>,al", "add~r12,0", "add~rbx,0", "jmp~FOO"]], [1, 0, 123, 0, 0, 2, 0, 1, 8, 11, 0.014272030651340997, ["cmp     al, 25h ; '%'", "jge     loc_9858"], ["cmp~al,0", "jge~FOO"]], [1, 0, 123, 0, 0, 3, 0, 0, 9, 11, 0.0021072796934865903, ["lea     edx, [rax-20h]", "cmp     dl, 3", "jbe     loc_9858"], ["lea~edx,[rax-20h]+0]", "cmp~dl,0", "jbe~FOO"]], [1, 0, 123, 0, 0, 2, 0, 0, 15, 16, 0.06513409961685825, ["cmp     r15, 16h", "jbe     loc_9890"], ["cmp~r15,0", "jbe~FOO"]], [2, 0, 61, 1, 0, 4, 0, 1, 9, 7, 0.008764367816091955, ["add     cs:dired_pos, 1", "movzx   r12d, byte ptr [rsp+2098h+var_2068]", "mov     ebp, 1", "jmp     loc_9324"], ["add~<TAG>,0", "movzx~r12d,[yte ptr [rsp+0]", "mov~ebp,0", "jmp~FOO"]], [0, 1, 62, 0, 1, 3, 0, 2, 8, 8, 0.0034003831417624523, ["mov     esi, 20h ; ' '; int", "call    ___overflow", "jmp     loc_9658"], ["mov~esi,<STR>", "call~FOO", "jmp~FOO"]], [1, 0, 123, 1, 0, 9, 2, 0, 19, 16, 0.09727011494252874, ["mov     r8, r15", "lea     r9, [r12+rax]", "lea     rdi, [rbx+rax]", "sub     r8, rax", "xor     r11d, r11d", "xor     eax, eax", "mov     r10, r8", "shr     r10, 4", "nop     dword ptr [rax+rax+00000000h]"], ["mov~r8,r15", "lea~r9,<TAG>", "lea~rdi,<TAG>", "sub~r8,rax", "xor~r11d,r11d", "xor~eax,eax", "mov~r10,r8", "shr~r10,0", "nop~[word ptr [rax+0]"]], [1, 0, 123, 0, 0, 5, 0, 1, 18, 17, 0.04521072796934866, ["movzx   edi, byte ptr [r12]", "cmp     rax, 1", "lea     rsi, [r12+1]", "mov     [rbx], dil", "jz      loc_924E"], ["movzx~edi,<TAG>", "cmp~rax,0", "lea~rsi,[r12+0]", "mov~<TAG>,dil", "jz~FOO"]], [1, 0, 123, 0, 0, 7, 0, 1, 19, 17, 0.03673371647509579, ["movzx   ecx, byte ptr [r12+1]", "cmp     rax, 2", "lea     rsi, [r12+2]", "lea     rbp, [rbx+2]", "mov     [rbx+1], cl", "lea     rcx, [r15-2]", "jz      loc_924E"], ["movzx~ecx,[yte ptr [r12+0]", "cmp~rax,0", "lea~rsi,[r12+0]", "lea~rbp,[rbx+0]", "mov~[rbx+0],cl", "lea~rcx,[r15-2]+0]", "jz~FOO"]], [1, 0, 123, 0, 0, 7, 0, 1, 20, 17, 0.034195402298850576, ["movzx   ecx, byte ptr [r12+2]", "cmp     rax, 3", "lea     rsi, [r12+3]", "lea     rbp, [rbx+3]", "mov     [rbx+2], cl", "lea     rcx, [r15-3]", "jz      loc_924E"], ["movzx~ecx,[yte ptr [r12+0]", "cmp~rax,0", "lea~rsi,[r12+0]", "lea~rbp,[rbx+0]", "mov~[rbx+0],cl", "lea~rcx,[r15-3]+0]", "jz~FOO"]], [1, 0, 123, 0, 0, 7, 0, 1, 21, 17, 0.031609195402298854, ["movzx   ecx, byte ptr [r12+3]", "cmp     rax, 4", "lea     rsi, [r12+4]", "lea     rbp, [rbx+4]", "mov     [rbx+3], cl", "lea     rcx, [r15-4]", "jz      loc_924E"], ["movzx~ecx,[yte ptr [r12+0]", "cmp~rax,0", "lea~rsi,[r12+0]", "lea~rbp,[rbx+0]", "mov~[rbx+0],cl", "lea~rcx,[r15-4]+0]", "jz~FOO"]], [1, 0, 123, 0, 0, 7, 0, 1, 22, 17, 0.028975095785440615, ["movzx   ecx, byte ptr [r12+4]", "cmp     rax, 5", "lea     rsi, [r12+5]", "lea     rbp, [rbx+5]", "mov     [rbx+4], cl", "lea     rcx, [r15-5]", "jz      loc_924E"], ["movzx~ecx,[yte ptr [r12+0]", "cmp~rax,0", "lea~rsi,[r12+0]", "lea~rbp,[rbx+0]", "mov~[rbx+0],cl", "lea~rcx,[r15-5]+0]", "jz~FOO"]], [1, 0, 123, 0, 0, 7, 0, 1, 23, 17, 0.026293103448275863, ["movzx   ecx, byte ptr [r12+5]", "cmp     rax, 6", "lea     rsi, [r12+6]", "lea     rbp, [rbx+6]", "mov     [rbx+5], cl", "lea     rcx, [r15-6]", "jz      loc_924E"], ["movzx~ecx,[yte ptr [r12+0]", "cmp~rax,0", "lea~rsi,[r12+0]", "lea~rbp,[rbx+0]", "mov~[rbx+0],cl", "lea~rcx,[r15-6]+0]", "jz~FOO"]], [1, 0, 123, 0, 0, 7, 0, 1, 24, 17, 0.023563218390804597, ["movzx   ecx, byte ptr [r12+6]", "cmp     rax, 7", "lea     rsi, [r12+7]", "lea     rbp, [rbx+7]", "mov     [rbx+6], cl", "lea     rcx, [r15-7]", "jz      loc_924E"], ["movzx~ecx,[yte ptr [r12+0]", "cmp~rax,0", "lea~rsi,[r12+0]", "lea~rbp,[rbx+0]", "mov~[rbx+0],cl", "lea~rcx,[r15-7]+0]", "jz~FOO"]], [1, 0, 123, 0, 0, 7, 0, 1, 25, 17, 0.02078544061302682, ["movzx   ecx, byte ptr [r12+7]", "cmp     rax, 8", "lea     rsi, [r12+8]", "lea     rbp, [rbx+8]", "mov     [rbx+7], cl", "lea     rcx, [r15-8]", "jz      loc_924E"], ["movzx~ecx,[yte ptr [r12+0]", "cmp~rax,0", "lea~rsi,[r12+0]", "lea~rbp,[rbx+0]", "mov~[rbx+0],cl", "lea~rcx,[r15-8]+0]", "jz~FOO"]], [1, 0, 123, 0, 0, 7, 0, 1, 26, 17, 0.017959770114942528, ["movzx   ecx, byte ptr [r12+8]", "cmp     rax, 9", "lea     rsi, [r12+9]", "lea     rbp, [rbx+9]", "mov     [rbx+8], cl", "lea     rcx, [r15-9]", "jz      loc_924E"], ["movzx~ecx,[yte ptr [r12+0]", "cmp~rax,0", "lea~rsi,[r12+0]", "lea~rbp,[rbx+0]", "mov~[rbx+0],cl", "lea~rcx,[r15-9]+0]", "jz~FOO"]], [1, 0, 123, 0, 0, 7, 0, 1, 27, 17, 0.015086206896551725, ["movzx   ecx, byte ptr [r12+9]", "cmp     rax, 0Ah", "lea     rsi, [r12+0Ah]", "lea     rbp, [rbx+0Ah]", "mov     [rbx+9], cl", "lea     rcx, [r15-0Ah]", "jz      loc_924E"], ["movzx~ecx,[yte ptr [r12+0]", "cmp~rax,0", "lea~rsi,[r12+0]", "lea~rbp,[rbx+0]", "mov~[rbx+0],cl", "lea~rcx,[r15-0Ah]+0]", "jz~FOO"]], [1, 0, 123, 0, 0, 7, 0, 1, 28, 17, 0.012164750957854407, ["movzx   ecx, byte ptr [r12+0Ah]", "cmp     rax, 0Bh", "lea     rsi, [r12+0Bh]", "lea     rbp, [rbx+0Bh]", "mov     [rbx+0Ah], cl", "lea     rcx, [r15-0Bh]", "jz      short loc_924E"], ["movzx~ecx,[yte ptr [r12+0]", "cmp~rax,0", "lea~rsi,[r12+0]", "lea~rbp,[rbx+0]", "mov~[rbx+0],cl", "lea~rcx,[r15-0Bh]+0]", "jz~FOO"]], [0, 0, 123, 0, 0, 4, 0, 1, 18, 17, 0.0059865900383141765, ["mov     rcx, r15", "mov     rbp, rbx", "mov     rsi, r12", "jmp     loc_924E"], ["mov~rcx,r15", "mov~rbp,rbx", "mov~rsi,r12", "jmp~FOO"]], [0, 0, 27, 0, 1, 7, 0, 1, 16, -1, 0.059003831417624525, ["lea     rdi, [rcx+rcx*2]; n", "call    xmalloc", "mov     r9, [rsp+2098h+var_2090]", "mov     r12, rax", "lea     r11, RFC3986", "mov     r13, r12", "mov     r14, r9"], ["lea~rdi,<TAG>", "call~FOO", "mov~r9,[rsp+0]", "mov~r12,rax", "lea~r11,<TAG>", "mov~r13,r12", "mov~r14,r9"]], [2, 0, 123, 1, 0, 2, 0, 0, 11, 11, 0.010632183908045977, ["add     r12, 1", "mov     byte ptr [rbx], 3Fh ; '?'"], ["add~r12,0", "mov~<TAG>,0"]], [2, 0, 27, 1, 0, 3, 0, 1, 19, -1, 0.0005986590038314177, ["mov     byte ptr [r13+0], 2Fh ; '/'", "add     r13, 1", "jmp     loc_9475"], ["mov~[yte ptr [r13+0],0", "add~r13,0", "jmp~FOO"]], [2, 0, 27, 1, 0, 3, 0, 1, 18, -1, 0.02313218390804598, ["add     r14, 1", "cmp     al, 2Fh ; '/'", "jz      loc_9670"], ["add~r14,0", "cmp~al,0", "jz~FOO"]], [0, 0, 123, 0, 0, 2, 0, 1, 12, 10, 0.02303639846743295, ["mov     rbx, rbp", "jmp     loc_92D0"], ["mov~rbx,rbp", "jmp~FOO"]], [1, 0, 123, 0, 0, 3, 0, 1, 12, 11, 0.003879310344827586, ["mov     byte ptr [rbx], 3Fh ; '?'", "mov     r12, r14", "jmp     short loc_9877"], ["mov~<TAG>,0", "mov~r12,r14", "jmp~FOO"]], [0, 0, 27, 0, 0, 3, 1, 1, 17, -1, 0.057590996168582376, ["movzx   eax, byte ptr [r14]", "test    al, al", "jz      short loc_94AA"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [3, 0, 27, 1, 1, 10, 1, 2, 20, -1, 4.789272030651341e-05, ["lea     rcx, a02x; \"%%%02x\"", "mov     rdi, r13", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "xor     eax, eax", "mov     [rsp+2098h+color], r11", "add     r13, 3", "call    ___sprintf_chk", "mov     r11, [rsp+2098h+color]", "jmp     loc_9475"], ["lea~rcx,<TAG>", "mov~rdi,r13", "mov~rdx,0", "mov~esi,0", "xor~eax,eax", "mov~[rsp+0],r11", "add~r13,0", "call~FOO", "mov~r11,[rsp+0]", "jmp~FOO"]], [1, 0, 123, 0, 0, 7, 1, 1, 16, 17, 0.06317049808429119, ["mov     rax, r12", "lea     rcx, [r15-1]", "neg     rax", "and     eax, 0Fh", "lea     rsi, [rax+0Fh]", "cmp     rsi, rcx", "ja      loc_9990"], ["mov~rax,r12", "lea~rcx,[r15-1]+0]", "neg~rax", "and~eax,0", "lea~rsi,[rax+0]", "cmp~rsi,rcx", "ja~FOO"]], [1, 0, 27, 1, 0, 5, 1, 1, 20, -1, 0.0016044061302681993, ["mov     [r13+0], al", "movzx   eax, byte ptr [r14]", "add     r13, 1", "test    al, al", "jnz     short loc_947D"], ["mov~[r13+0],al", "movzx~eax,<TAG>", "add~r13,0", "test~al,al", "jnz~FOO"]], [2, 0, 123, 2, 0, 6, 0, 0, 20, 15, 0.09995210727969349, ["movdqa  xmm0, xmmword ptr [r9+rax]", "add     r11, 1", "movups  xmmword ptr [rdi+rax], xmm0", "add     rax, 10h", "cmp     r11, r10", "jb      short loc_9270"], ["movdqa~xmm0,<TAG>", "add~r11,0", "movups~<TAG>,xmm0", "add~rax,0", "cmp~r11,r10", "jb~FOO"]], [0, 0, 123, 0, 0, 2, 1, 1, 17, 18, 0.05167624521072797, ["test    rax, rax", "jz      loc_99A5"], ["test~rax,rax", "jz~FOO"]], [1, 0, 123, 0, 0, 4, 0, 1, 14, 12, 0.01190932311621968, ["mov     byte ptr [rbx], 3Fh ; '?'", "mov     r12, rcx", "mov     rbx, rbp", "jmp     loc_92B8"], ["mov~<TAG>,0", "mov~r12,rcx", "mov~rbx,rbp", "jmp~FOO"]], [0, 0, 123, 1, 0, 2, 0, 0, 18, 12, 0.15828544061302682, ["add     r12, r15", "mov     rbx, rax"], ["add~r12,r15", "mov~rbx,rax"]], [1, 0, 27, 0, 0, 4, 0, 1, 19, -1, 0.012092911877394636, ["movzx   edx, al", "cmp     byte ptr [r11+rdx], 0", "mov     r8, rdx", "jz      loc_96B0"], ["movzx~edx,al", "cmp~<TAG>,0", "mov~r8,rdx", "jz~FOO"]], [0, 0, 123, 0, 0, 4, 0, 0, 15, 15, 0.016858237547892722, ["lea     rax, [rbx+r15]", "mov     rdi, rbx", "mov     rsi, r12", "nop     word ptr [rax+rax+00h]"], ["lea~rax,<TAG>", "mov~rdi,rbx", "mov~rsi,r12", "nop~[ord ptr [rax+0]"]], [1, 0, 123, 2, 0, 7, 1, 1, 21, 14, 0.10263409961685824, ["mov     rax, r8", "and     rax, 0FFFFFFFFFFFFFFF0h", "add     rsi, rax", "sub     rcx, rax", "cmp     rax, r8", "lea     rdi, [rbp+rax+0]", "jz      short loc_92AE"], ["mov~rax,r8", "and~rax,0", "add~rsi,rax", "sub~rcx,rax", "cmp~rax,r8", "lea~rdi,[rbp+0]", "jz~FOO"]], [3, 0, 37, 1, 1, 8, 1, 2, 14, 4, 9.578544061302682e-05, ["lea     rcx, a02x; \"%%%02x\"", "mov     rdi, r13", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "xor     eax, eax", "add     r13, 3", "call    ___sprintf_chk", "jmp     loc_93F3"], ["lea~rcx,<TAG>", "mov~rdi,r13", "mov~rdx,0", "mov~esi,0", "xor~eax,eax", "add~r13,0", "call~FOO", "jmp~FOO"]], [0, 0, 123, 0, 0, 2, 0, 0, 18, 15, 0.015613026819923373, ["lea     rax, [rdi+rcx]", "nop     word ptr [rax+rax+00h]"], ["lea~rax,<TAG>", "nop~[ord ptr [rax+0]"]], [0, 0, 123, 0, 0, 4, 0, 1, 17, 16, 0.011015325670498085, ["mov     rcx, r15", "mov     rdi, rbx", "mov     rsi, r12", "jmp     loc_929E"], ["mov~rcx,r15", "mov~rdi,rbx", "mov~rsi,r12", "jmp~FOO"]], [0, 0, 123, 0, 0, 3, 0, 1, 16, 14, 0.01954022988505747, ["movsb", "cmp     rax, rdi", "jnz     short loc_98A0"], ["movsb~<TAG>,<TAG>", "cmp~rax,rdi", "jnz~FOO"]], [0, 0, 123, 0, 0, 1, 0, 1, 17, 13, 0.022222222222222223, ["jmp     loc_92B2"], ["jmp~FOO"]], [0, 0, 123, 0, 0, 3, 0, 1, 19, 14, 0.018295019157088123, ["movsb", "cmp     rdi, rax", "jnz     short loc_92A8"], ["movsb~<TAG>,<TAG>", "cmp~rdi,rax", "jnz~FOO"]], [0, 0, 123, 0, 0, 1, 0, 0, 20, 13, 0.12753831417624523, ["lea     rax, [rbx+r15]"], ["lea~rax,<TAG>"]], [0, 0, 75, 0, 0, 4, 0, 0, 5, 8, 0.018199233716475097, ["cmp     rsi, rcx", "mov     r14, rsi", "mov     options, rcx", "jnb     loc_92FC"], ["cmp~rsi,rcx", "mov~r14,rsi", "mov~options,rcx", "jnb~FOO"]], [1, 0, 132, 0, 1, 6, 0, 1, 4, 9, 0.047365900383141764, ["call    ___ctype_get_mb_cur_max", "mov     rsi, [rsp+2098h+s]", "cmp     rax, 1", "lea     r14, [rsi+rbx]", "mov     rcx, r14", "jbe     loc_98B0"], ["call~FOO", "mov~rsi,<TAG>", "cmp~rax,0", "lea~r14,<TAG>", "mov~rcx,r14", "jbe~FOO"]], [0, 0, 53, 0, 2, 5, 0, 3, 8, 7, 0.003807471264367816, ["lea     rdi, color_indicator; ind", "call    put_indicator", "lea     rdi, ind; ind", "call    put_indicator", "jmp     loc_933C"], ["lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 55, 0, 0, 2, 0, 1, 7, 8, 0.0075909961685823755, ["cmp     rax, 2", "jnz     short loc_97B2"], ["cmp~rax,0", "jnz~FOO"]], [1, 0, 55, 0, 0, 2, 0, 1, 7, 8, 0.0075909961685823755, ["cmp     byte ptr [rsi], 30h ; '0'", "jnz     loc_97B2"], ["cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 54, 0, 0, 7, 1, 1, 8, 7, 0.001903735632183908, ["lea     rdi, a00; \"00\"", "mov     ecx, 2", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jz      loc_933C"], ["lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jz~FOO"]], [0, 0, 123, 0, 0, 1, 0, 0, 16, 10, 0.1417624521072797, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 74, 0, 1, 5, 0, 1, 6, 11, 0.002681992337164751, ["call    ___ctype_b_loc", "mov     rsi, rbp", "mov     rcx, [rax]", "mov     rax, r14", "nop     dword ptr [rax]"], ["call~FOO", "mov~rsi,rbp", "mov~rcx,<TAG>", "mov~rax,r14", "nop~<TAG>"]], [0, 1, 0, 1, 0, 8, 0, 0, 11, -1, 0.0, ["add     rsp, 2068h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 123, 0, 0, 2, 0, 0, 10, 9, 0.20565134099616858, ["cmp     r12, r14", "jb      loc_8FC8"], ["cmp~r12,r14", "jb~FOO"]], [1, 0, 74, 0, 0, 3, 1, 1, 7, 10, 0.005555555555555556, ["movzx   edx, byte ptr [rax]", "test    byte ptr [rcx+rdx*2+1], 40h", "jnz     short loc_98DD"], ["movzx~edx,<TAG>", "test~[yte ptr [rcx+0],0", "jnz~FOO"]], [1, 0, 74, 1, 0, 3, 0, 1, 8, 9, 0.010919540229885057, ["add     rax, 1", "cmp     rax, rsi", "jnz     short loc_98D0"], ["add~rax,0", "cmp~rax,rsi", "jnz~FOO"]], [1, 0, 74, 0, 0, 1, 0, 0, 8, 10, 0.0, ["mov     byte ptr [rax], 3Fh ; '?'"], ["mov~<TAG>,0"]], [1, 0, 136, 0, 2, 11, 0, 3, 3, 10, 0.0, ["lea     buf, [rax+1]", "mov     rdi, r13; n", "call    xmalloc", "mov     rdx, [rsp+2098h+name]; arg", "mov     r8, options; o", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rsi, r13; buffersize", "mov     rdi, rax; buffer", "mov     [rsp+2098h+s], rax", "call    quotearg_buffer", "jmp     loc_8F55"], ["lea~buf,[rax+0]", "mov~rdi,r13", "call~FOO", "mov~rdx,[rsp+0]", "mov~r8,options", "mov~rcx,0", "mov~rsi,r13", "mov~rdi,rax", "mov~<TAG>,rax", "call~FOO", "jmp~FOO"]], [3, 0, 137, 0, 1, 11, 0, 2, 2, 10, 0.011829501915708812, ["lea     r13, [rsp+2098h+smallbuf]", "mov     rdx, [rsp+2098h+name]; arg", "mov     r8, options; o", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     esi, 2000h; buffersize", "mov     rdi, buf; buffer", "call    quotearg_buffer", "cmp     rax, 1FFFh", "mov     needs_general_quoting, rax", "mov     [rsp+2098h+s], buf", "ja      loc_9950"], ["lea~r13,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8,options", "mov~rcx,0", "mov~esi,0", "mov~rdi,buf", "call~FOO", "cmp~rax,0", "mov~needs_general_quoting,rax", "mov~<TAG>,buf", "ja~FOO"]], [0, 0, 70, 1, 0, 3, 0, 1, 11, 8, 0.17768199233716475, ["mov     r15, [rsp+2098h+stack]", "sub     rbx, [rsp+2098h+s]", "jmp     short loc_92FC"], ["mov~r15,[rsp+0]", "sub~rbx,<TAG>", "jmp~FOO"]], [0, 0, 70, 0, 0, 1, 0, 1, 9, 8, 0.013409961685823755, ["jmp     loc_92FC"], ["jmp~FOO"]], [2, 0, 42, 0, 0, 3, 0, 1, 7, 3, 0.1021072796934866, ["mov     [rsp+2098h+stack], 0", "mov     [rsp+2098h+var_2068], 0", "jmp     loc_93A6"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 49, 0, 0, 4, 1, 1, 6, 4, 0.13194444444444445, ["movzx   eax, cs:align_variable_outer_quotes", "test    al, al", "mov     byte ptr [rsp+2098h+skip_quotes], al", "jz      loc_96E0"], ["movzx~eax,<TAG>", "test~al,al", "mov~[yte ptr [rsp+0],al", "jz~FOO"]], [0, 0, 70, 0, 1, 5, 0, 1, 2, 8, 0.006704980842911878, ["mov     r14, [rsp+2098h+name]", "mov     rdi, r14; s", "call    _strlen", "mov     [rsp+2098h+s], r14", "mov     needs_general_quoting, rax"], ["mov~r14,[rsp+0]", "mov~rdi,r14", "call~FOO", "mov~<TAG>,r14", "mov~needs_general_quoting,rax"]], [0, 0, 139, 0, 0, 3, 2, 1, 1, 9, 0.0036398467432950193, ["xor     r12d, r12d", "test    ebx, ebx", "jz      loc_92E8"], ["xor~r12d,r12d", "test~ebx,ebx", "jz~FOO"]], [3, 0, 20, 2, 3, 22, 2, 4, 18, -1, 0.02681992337164751, ["mov     byte ptr [r13+0], 0", "cmp     byte ptr [r12], 2Fh ; '/'", "lea     rax, a8+6; \"\"", "mov     r14, [rsp+2098h+ptr]", "lea     rcx, prefix+8; \"/\"", "lea     rsi, a8FileSSS; \"\\x1B]8;;file://%s%s%s\\a\"", "mov     r8, r12", "mov     edi, 1", "cmovz   rcx, rax", "mov     rdx, r14", "xor     eax, eax", "call    ___printf_chk", "mov     rdi, r14; ptr", "call    free", "mov     rdi, r12; ptr", "call    free", "mov     rdx, rbx", "mov     r12, [rsp+2098h+stack]", "sub     rdx, [rsp+2098h+var_2068]; n", "add     r12, [rsp+2098h+s]", "test    r15, r15", "jz      loc_9715"], ["mov~[yte ptr [r13+0],0", "cmp~<TAG>,0", "lea~rax,<TAG>", "mov~r14,[rsp+0]", "lea~rcx,<TAG>", "lea~rsi,<TAG>", "mov~r8,r12", "mov~edi,0", "cmovz~rcx,rax", "mov~rdx,r14", "xor~eax,eax", "call~FOO", "mov~rdi,r14", "call~FOO", "mov~rdi,r12", "call~FOO", "mov~rdx,rbx", "mov~r12,[rsp+0]", "sub~rdx,[rsp+0]", "add~r12,<TAG>", "test~r15,r15", "jz~FOO"]], [0, 0, 69, 0, 0, 4, 2, 1, 3, 7, 0.25114942528735634, ["movzx   r12d, cs:align_variable_outer_quotes", "xor     ebp, ebp", "test    r12b, r12b", "jz      short loc_9324"], ["movzx~r12d,<TAG>", "xor~ebp,ebp", "test~r12b,r12b", "jz~FOO"]], [0, 0, 133, 0, 0, 2, 1, 1, 4, 8, 0.036542145593869736, ["test    r12d, r12d", "jz      loc_92FC"], ["test~r12d,r12d", "jz~FOO"]], [0, 0, 70, 0, 0, 2, 1, 1, 6, 8, 0.003352490421455939, ["xor     ebx, ebx", "jmp     loc_92FC"], ["xor~ebx,ebx", "jmp~FOO"]], [1, 0, 20, 0, 0, 5, 1, 1, 6, -1, 0.09099616858237548, ["test    r15, r15", "mov     r12, [rsp+2098h+s]", "mov     rdx, rbx; n", "mov     byte ptr [rsp+2098h+skip_quotes], 0", "jnz     loc_950E"], ["test~r15,r15", "mov~r12,<TAG>", "mov~rdx,rbx", "mov~[yte ptr [rsp+0],0", "jnz~FOO"]], [1, 0, 51, 0, 0, 2, 0, 1, 5, 5, 0.2295977011494253, ["cmp     [rsp+2098h+var_2090], 0", "jz      loc_9700"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 1, 145, 1, 1, 25, 2, 2, 0, 10, 0.0, ["push    r15", "push    r14", "mov     r15, stack_0", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbp, options", "mov     ebx, edx", "sub     rsp, 2068h", "mov     rax, [rsp+2098h+absolute_name]", "mov     [rsp+2098h+name], name_0", "mov     name_0, options; o", "mov     [rsp+2098h+color], color_0", "mov     dword ptr [rsp+2098h+var_2068], r8d", "mov     [rsp+2098h+var_2090], rax", "mov     rax, fs:28h", "mov     [rsp+2098h+var_40], rax", "xor     eax, eax", "call    get_quoting_style", "cmp     eax, 2", "setbe   al", "and     al, cs:qmark_funny_chars", "mov     byte ptr [rsp+2098h+ptr], al", "jnz     loc_9738"], ["push~r15", "push~r14", "mov~r15,stack_0", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbp,options", "mov~ebx,edx", "sub~rsp,<STR>", "mov~rax,[rsp+0]", "mov~[rsp+0],name_0", "mov~name_0,options", "mov~[rsp+0],color_0", "mov~[word ptr [rsp+0],r8d", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "cmp~eax,0", "setbe~al", "and~al,<TAG>", "mov~[yte ptr [rsp+0],al", "jnz~FOO"]], [1, 0, 68, 0, 0, 2, 0, 1, 4, 8, 0.025814176245210728, ["cmp     cs:cwd_some_quoted, 1", "jnz     short loc_931F"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 7, -1, 0.04190613026819923, ["cmp     cs:dired, 0", "jz      short loc_953B"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 61, 0, 0, 2, 2, 0, 5, 7, 0.004382183908045977, ["xor     r12d, r12d", "xor     ebp, ebp"], ["xor~r12d,r12d", "xor~ebp,ebp"]], [1, 0, 17, 1, 0, 5, 0, 0, 8, -1, 0.01206896551724138, ["mov     rcx, [__o1+18h]", "mov     rax, [__o1+20h]", "sub     rax, rcx", "cmp     rax, 7", "jbe     loc_9910"], ["mov~rcx,[__o1+0]", "mov~rax,[__o1+0]", "sub~rax,rcx", "cmp~rax,0", "jbe~FOO"]], [1, 0, 60, 0, 0, 2, 0, 1, 4, 6, 0.2442528735632184, ["cmp     [rsp+2098h+color], 0", "jz      short loc_935E"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 16, 0, 1, 7, 0, 2, 9, -1, 0.0, ["mov     esi, 8; length", "mov     rdi, __o1; h", "mov     [rsp+2098h+color], rdx", "call    _obstack_newchunk", "mov     rcx, [__o1+18h]", "mov     rdx, [rsp+2098h+color]", "jmp     loc_952C"], ["mov~esi,0", "mov~rdi,__o1", "mov~[rsp+0],rdx", "call~FOO", "mov~rcx,[__o1+0]", "mov~rdx,[rsp+0]", "jmp~FOO"]], [1, 0, 11, 1, 1, 6, 0, 2, 7, -1, 0.06585249042145594, ["mov     rcx, cs:stdout@@GLIBC_2_2_5; stream", "mov     esi, 1; size", "mov     rdi, r12; ptr", "call    _fwrite_unlocked", "add     cs:dired_pos, rbx", "jmp     loc_9586"], ["mov~rcx,<TAG>", "mov~esi,0", "mov~rdi,r12", "call~FOO", "add~<TAG>,rbx", "jmp~FOO"]], [1, 0, 15, 1, 0, 3, 0, 0, 9, -1, 0.0014367816091954023, ["mov     rax, cs:dired_pos", "mov     [rcx], rax", "add     qword ptr [__o1+18h], 8"], ["mov~rax,<TAG>", "mov~<TAG>,rax", "add~[word ptr [__o1+0],0"]], [0, 0, 53, 0, 0, 1, 0, 1, 8, 7, 0.001903735632183908, ["jmp     loc_933C"], ["jmp~FOO"]], [0, 0, 59, 0, 0, 3, 1, 1, 5, 7, 0.028831417624521075, ["mov     rax, cs:stru_2270A0.len", "test    rax, rax", "jnz     loc_9780"], ["mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [0, 0, 134, 0, 1, 6, 0, 2, 3, 11, 0.0, ["mov     rdi, rdx; n", "mov     [rsp+2098h+skip_quotes], rdx", "call    xmalloc", "mov     rdx, [rsp+2098h+skip_quotes]", "mov     [rsp+2098h+s], rax", "jmp     loc_9767"], ["mov~rdi,rdx", "mov~[rsp+0],rdx", "call~FOO", "mov~rdx,[rsp+0]", "mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 135, 0, 1, 8, 0, 2, 2, 11, 0.007902298850574713, ["mov     rdi, [rsp+2098h+name]; s", "call    _strlen", "mov     needs_general_quoting, rax", "lea     rdx, [rax+1]; n", "lea     rax, [rsp+2098h+smallbuf]", "cmp     rbx, 1FFFh", "mov     [rsp+2098h+s], buf", "ja      loc_9930"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~needs_general_quoting,rax", "lea~rdx,[rax+0]", "lea~rax,[rsp+0]", "cmp~rbx,0", "mov~<TAG>,buf", "ja~FOO"]], [0, 0, 52, 0, 3, 6, 0, 3, 6, 6, 0.017432950191570883, ["lea     rdi, color_indicator; ind", "call    put_indicator", "mov     rdi, [rsp+2098h+color]; ind", "call    put_indicator", "lea     rdi, ind; ind", "call    put_indicator"], ["lea~rdi,<TAG>", "call~FOO", "mov~rdi,[rsp+0]", "call~FOO", "lea~rdi,<TAG>", "call~FOO"]], [0, 0, 46, 0, 0, 2, 1, 1, 8, 4, 0.013936781609195403, ["test    r12b, r12b", "jz      loc_97D0"], ["test~r12b,r12b", "jz~FOO"]], [2, 0, 14, 1, 1, 9, 0, 2, 8, -1, 0.02064176245210728, ["mov     rcx, cs:stdout@@GLIBC_2_2_5; stream", "mov     esi, 1; size", "mov     rdi, r12; ptr", "call    _fwrite_unlocked", "mov     rax, cs:dired_pos", "add     rax, rbx", "cmp     cs:dired, 0", "mov     cs:dired_pos, rax", "jz      short loc_9586"], ["mov~rcx,<TAG>", "mov~esi,0", "mov~rdi,r12", "call~FOO", "mov~rax,<TAG>", "add~rax,rbx", "cmp~<TAG>,0", "mov~<TAG>,rax", "jz~FOO"]], [1, 0, 135, 0, 0, 6, 0, 1, 3, 9, 0.024377394636015327, ["mov     rsi, [rsp+2098h+s]", "mov     rax, [rsp+2098h+name]", "mov     byte ptr [rsp+2098h+ptr], 1", "movzx   esi, byte ptr [rsi]", "cmp     [rax], sil", "jnz     short loc_8F7B"], ["mov~rsi,<TAG>", "mov~rax,[rsp+0]", "mov~[yte ptr [rsp+0],0", "movzx~esi,<TAG>", "cmp~<TAG>,sil", "jnz~FOO"]], [0, 0, 134, 0, 1, 4, 0, 1, 4, 9, 0.0, ["mov     rdi, rax; s", "call    _strlen", "cmp     rbx, rax", "setnz   byte ptr [rsp+2098h+ptr]"], ["mov~rdi,rax", "call~FOO", "cmp~rbx,rax", "setnz~[yte ptr [rsp+0]"]], [1, 0, 133, 0, 1, 5, 0, 2, 3, 10, 0.020450191570881227, ["mov     rsi, [rsp+2098h+name]; src", "mov     rdi, [rsp+2098h+s]; dest", "call    _memcpy", "mov     byte ptr [rsp+2098h+ptr], 0", "jmp     loc_8F84"], ["mov~rsi,[rsp+0]", "mov~rdi,<TAG>", "call~FOO", "mov~[yte ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 11, 1, 0, 2, 0, 0, 10, -1, 0.0010536398467432951, ["mov     [rcx], rax", "add     qword ptr [__o1+18h], 8"], ["mov~<TAG>,rax", "add~[word ptr [__o1+0],0"]], [1, 0, 58, 0, 0, 3, 0, 1, 6, 9, 0.020833333333333336, ["cmp     rax, 1", "mov     rsi, cs:stru_2270A0.string", "jz      loc_9980"], ["cmp~rax,0", "mov~rsi,<TAG>", "jz~FOO"]], [1, 0, 47, 0, 0, 2, 0, 1, 7, 4, 0.022988505747126436, ["cmp     cs:cwd_some_quoted, 1", "jnz     short loc_938F"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 8, -1, 0.06417624521072797, ["cmp     [rsp+2098h+var_2090], 0", "jz      short loc_95DA"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 125, 0, 0, 2, 0, 0, 5, 9, 0.03424329501915709, ["cmp     rsi, r14", "jnb     loc_999E"], ["cmp~rsi,r14", "jnb~FOO"]], [3, 0, 9, 0, 1, 7, 0, 2, 9, -1, 0.01939655172413793, ["mov     rcx, cs:stdout@@GLIBC_2_2_5; stream", "lea     rdi, a8; \"\\x1B]8;;\\a\"", "mov     edx, 6; n", "mov     esi, 1; size", "call    _fwrite_unlocked", "cmp     byte ptr [rsp+2098h+skip_quotes], 0", "jz      short loc_95DA"], ["mov~rcx,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "mov~esi,0", "call~FOO", "cmp~[yte ptr [rsp+0],0", "jz~FOO"]], [0, 0, 6, 0, 1, 3, 0, 2, 11, -1, 0.00014367816091954023, ["movzx   esi, dl; int", "call    ___overflow", "jmp     loc_95DA"], ["movzx~esi,dl", "call~FOO", "jmp~FOO"]], [0, 0, 8, 0, 0, 6, 0, 0, 10, -1, 0.013026819923371648, ["mov     rax, [rsp+2098h+s]", "mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "movzx   edx, byte ptr [rax+rbx-1]", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_99B3"], ["mov~rax,<TAG>", "mov~rdi,<TAG>", "movzx~edx,[yte ptr [rax+0]", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [0, 0, 123, 0, 0, 7, 0, 0, 6, 13, 0.03553639846743295, ["lea     rax, [rsp+2098h+c]", "lea     r13, [rsp+2098h+ps]", "mov     rbx, rsi", "mov     r12, rsi", "mov     [rsp+2098h+stack], stack_0", "mov     [rsp+2098h+skip_quotes], rax", "nop     dword ptr [rax+00000000h]"], ["lea~rax,[rsp+0]", "lea~r13,[rsp+0]", "mov~rbx,rsi", "mov~r12,rsi", "mov~[rsp+0],stack_0", "mov~[rsp+0],rax", "nop~[word ptr [rax+0]"]], [2, 0, 42, 0, 1, 5, 0, 2, 10, 3, 0.0010057471264367816, ["movzx   esi, dl; int", "call    ___overflow", "mov     [rsp+2098h+stack], 1", "mov     [rsp+2098h+var_2068], 2", "jmp     loc_93A6"], ["movzx~esi,dl", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 42, 0, 0, 3, 0, 0, 8, 3, 0.004022988505747126, ["mov     [rsp+2098h+stack], 0", "mov     [rsp+2098h+var_2068], 0", "mov     byte ptr [rsp+2098h+skip_quotes], 0"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[yte ptr [rsp+0],0"]], [0, 0, 6, 0, 0, 3, 0, 0, 11, -1, 0.00014367816091954023, ["lea     rcx, [rax+1]", "mov     [rdi+28h], rcx", "mov     [rax], dl"], ["lea~rcx,[rax+0]", "mov~[rdi+0],rcx", "mov~<TAG>,dl"]], [0, 0, 0, 0, 1, 1, 0, 1, 11, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 37, 0, 1, 5, 0, 1, 11, 4, 0.09348659003831418, ["lea     rdi, [rcx+rcx*2]; n", "lea     r14, RFC3986", "call    xmalloc", "mov     [rsp+2098h+ptr], rax", "mov     r13, rax"], ["lea~rdi,<TAG>", "lea~r14,<TAG>", "call~FOO", "mov~[rsp+0],rax", "mov~r13,rax"]]], "func_feature": [40, 42, 145, 3, 146, 231, 2, 655, 0.03721, 19, 32], "succs": [[100], [0, 125], [12], [2, 141], [5, 79], [32, 4], [32, 4], [144, 94], [9, 7], [10, 7], [7], [14], [11, 14], [], [13, 15], [145, 13], [17, 13], [13, 62], [63, 23], [18, 92], [18], [49, 30], [49, 21], [25, 67], [74, 31], [24, 33], [132], [26, 132], [36, 118], [116, 28], [49, 38], [19], [16, 37], [42, 74], [40, 20], [34, 44], [48, 41], [16], [49], [43, 20], [43, 39], [47], [77, 46], [95], [43, 45], [43, 20], [77, 70], [118], [47], [72], [49, 51], [49, 52], [49, 53], [49, 54], [49, 55], [56, 49], [49, 57], [49, 58], [49, 59], [49, 60], [49, 22], [49], [68], [66], [68], [64, 76], [95], [66], [65, 107], [68], [73, 81], [65, 107], [72, 78], [50, 61], [19], [19], [69, 71], [82], [80, 85], [6], [84], [80], [82, 83], [75], [84, 85], [75], [108, 93], [136, 86], [126], [88, 91], [88, 122], [88, 126], [95], [96], [], [35, 101], [97, 98], [96, 102], [97], [129], [129, 99], [108], [108], [12], [134, 103], [108], [105, 100], [120, 115], [114, 118], [108, 87], [108], [120, 115], [104, 111], [1, 106], [116, 29], [128, 117], [118], [121, 119], [112, 123], [121], [135], [128], [126], [133, 126], [131], [131, 124], [112], [3, 142], [27, 135], [130, 109], [109], [87], [135], [89, 90], [142, 127], [8, 137], [140, 110], [8, 139], [8], [138, 143], [35], [12], [12], [8], [], [6]], "fname": "quote_name", "n_num": 146}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[2, 1, 27, 0, 0, 6, 0, 1, 0, 0, 0.0, ["cmp     ecx, 2000h", "mov     eax, 0B0h", "mov     ecx, 0D0h", "cmovnz  rax, rcx", "mov     rbx, rax", "jmp     loc_9C50"], ["cmp~ecx,0", "mov~eax,0", "mov~ecx,<STR>", "cmovnz~rax,rcx", "mov~rbx,rax", "jmp~FOO"]], [2, 0, 28, 0, 0, 3, 0, 1, 9, 8, 0.0012918307086614172, ["cmp     ecx, 6000h", "mov     ebx, 0A0h", "jz      loc_9C50"], ["cmp~ecx,0", "mov~ebx,0", "jz~FOO"]], [1, 0, 31, 0, 0, 4, 1, 1, 8, 8, 0.005905511811023622, ["mov     rax, qword ptr cs:unk_227130", "mov     ebx, 70h ; 'p'", "test    rax, rax", "jz      short loc_9C50"], ["mov~rax,<TAG>", "mov~ebx,0", "test~rax,rax", "jz~FOO"]], [1, 1, 32, 0, 0, 3, 0, 1, 7, 8, 0.007904773622047244, ["cmp     cs:color_symlink_as_referent, 0", "mov     ebx, 0D0h", "jnz     short loc_9C50"], ["cmp~<TAG>,0", "mov~ebx,<STR>", "jnz~FOO"]], [1, 0, 27, 0, 0, 2, 0, 1, 12, 8, 0.004705954724409449, ["mov     ebx, 0E0h", "jmp     loc_9C50"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 11, 9, 0.006735974409448819, ["cmp     rax, 2", "jnz     loc_A202"], ["cmp~rax,0", "jnz~FOO"]], [2, 0, 43, 0, 0, 7, 1, 1, 12, 9, 0.0013533464566929134, ["lea     rdi, a00; \"00\"", "mov     ecx, 2", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_A202"], ["lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [0, 0, 115, 0, 0, 2, 1, 1, 3, 13, 0.00018454724409448819, ["test    al, al", "jz      loc_9BA7"], ["test~al,al", "jz~FOO"]], [1, 0, 116, 0, 0, 3, 0, 1, 2, 13, 0.006151574803149606, ["cmp     cs:color_symlink_as_referent, 0", "movzx   eax, byte ptr [f+0B9h]", "jnz     loc_9E06"], ["cmp~<TAG>,0", "movzx~eax,[yte ptr [f+0]", "jnz~FOO"]], [0, 0, 63, 0, 0, 3, 1, 1, 7, 10, 0.012795275590551181, ["mov     rax, qword ptr cs:unk_227170", "test    rax, rax", "jz      loc_9F21"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 64, 0, 0, 2, 1, 1, 6, 11, 0.04810531496062992, ["test    r8d, 400h", "jnz     loc_A002"], ["test~r8d,0", "jnz~FOO"]], [1, 0, 30, 0, 0, 3, 0, 1, 9, 9, 0.004613681102362204, ["cmp     rax, 1", "mov     rsi, qword ptr cs:unk_227138", "jz      loc_A058"], ["cmp~rax,0", "mov~rsi,<TAG>", "jz~FOO"]], [2, 0, 58, 0, 0, 3, 0, 1, 9, 9, 0.002921998031496063, ["cmp     byte ptr [rsi], 30h ; '0'", "mov     eax, 11h", "jnz     loc_A164"], ["cmp~<TAG>,0", "mov~eax,0", "jnz~FOO"]], [1, 0, 62, 0, 0, 3, 0, 1, 8, 9, 0.01328740157480315, ["cmp     rax, 1", "mov     rsi, cs:off_227178", "jz      loc_A20C"], ["cmp~rax,0", "mov~rsi,<TAG>", "jz~FOO"]], [0, 0, 113, 0, 0, 2, 0, 1, 4, 12, 0.0034756397637795275, ["mov     r8d, [rbp+0ACh]", "jmp     loc_9BAB"], ["mov~r8d,[rbp+0]", "jmp~FOO"]], [0, 0, 57, 0, 0, 1, 0, 1, 10, 13, 0.0026759350393700788, ["jmp     loc_9F21"], ["jmp~FOO"]], [1, 1, 28, 0, 0, 3, 0, 1, 10, 8, 0.0024298720472440945, ["cmp     rax, 2", "mov     ebx, 0D0h", "jnz     short loc_9C50"], ["cmp~rax,0", "mov~ebx,<STR>", "jnz~FOO"]], [2, 0, 43, 0, 0, 3, 0, 1, 11, 9, 0.005013533464566929, ["cmp     byte ptr [rsi], 30h ; '0'", "mov     eax, 0Eh", "jnz     loc_A164"], ["cmp~<TAG>,0", "mov~eax,0", "jnz~FOO"]], [1, 0, 47, 0, 0, 3, 0, 1, 10, 10, 0.013779527559055118, ["cmp     rax, 1", "mov     rsi, cs:off_227148", "jz      loc_A21F"], ["cmp~rax,0", "mov~rsi,<TAG>", "jz~FOO"]], [2, 0, 59, 0, 0, 3, 0, 1, 9, 8, 0.010857529527559055, ["cmp     rax, 2", "mov     ebx, 110h", "jnz     loc_9C50"], ["cmp~rax,0", "mov~ebx,0", "jnz~FOO"]], [0, 0, 42, 0, 0, 1, 0, 1, 12, 11, 0.0012918307086614172, ["jmp     loc_9FAB"], ["jmp~FOO"]], [2, 0, 43, 0, 0, 3, 0, 1, 9, 9, 0.001968503937007874, ["cmp     byte ptr [rsi], 30h ; '0'", "mov     eax, 14h", "jnz     loc_A164"], ["cmp~<TAG>,0", "mov~eax,0", "jnz~FOO"]], [1, 0, 47, 0, 0, 3, 0, 1, 8, 9, 0.007166584645669292, ["cmp     rax, 1", "mov     rsi, cs:off_2271A8", "jz      short loc_A232"], ["cmp~rax,0", "mov~rsi,<TAG>", "jz~FOO"]], [0, 0, 6, 0, 3, 7, 0, 4, 8, 3, 0.011257381889763779, ["lea     rdi, color_indicator; ind", "call    put_indicator", "lea     rdi, stru_227090; ind", "call    put_indicator", "lea     rdi, ind; ind", "call    put_indicator", "jmp     loc_9D3A"], ["lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 7, 4, 0.036909448818897635, ["cmp     cs:stru_227080.string, 0", "jz      loc_9E1A"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 42, 0, 0, 1, 0, 1, 10, 10, 0.0012918307086614172, ["jmp     loc_A07C"], ["jmp~FOO"]], [0, 1, 27, 0, 0, 2, 0, 1, 6, 8, 0.01930056594488189, ["mov     ebx, 50h ; 'P'", "jmp     loc_9C50"], ["mov~ebx,<STR>", "jmp~FOO"]], [0, 0, 33, 0, 1, 8, 1, 2, 5, 9, 0.03461798720472441, ["mov     rdi, name; s", "mov     [rsp+0D8h+stack], stack_0", "call    _strlen", "mov     rbx, cs:color_ext_list", "mov     r12, rax", "mov     r9, [rsp+0D8h+stack]", "test    rbx, rbx", "jz      short loc_9EB1"], ["mov~rdi,name", "mov~[rsp+0],stack_0", "call~FOO", "mov~rbx,<TAG>", "mov~r12,rax", "mov~r9,[rsp+0]", "test~rbx,rbx", "jz~FOO"]], [0, 0, 32, 0, 0, 3, 1, 1, 8, 9, 0.00043061023622047243, ["mov     rbx, [rbx+20h]", "test    rbx, rbx", "jnz     short loc_9E80"], ["mov~rbx,[rbx+0]", "test~rbx,rbx", "jnz~FOO"]], [2, 0, 58, 0, 0, 7, 1, 1, 10, 9, 0.0044598917322834645, ["lea     rdi, a00; \"00\"", "mov     ecx, 2", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jz      loc_9F21"], ["lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jz~FOO"]], [1, 0, 113, 0, 0, 2, 0, 1, 4, 12, 0.02639025590551181, ["mov     eax, 0FFFFFFFFh", "jmp     loc_9BAB"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 3, 11, 0.0026759350393700788, ["mov     rax, qword ptr cs:unk_227120", "test    rax, rax", "jz      loc_9E43"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [2, 0, 115, 0, 0, 7, 1, 1, 6, 9, 0.0053518700787401575, ["lea     f, a00; \"00\"", "mov     ecx, 2", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jz      loc_9E43"], ["lea~f,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jz~FOO"]], [2, 0, 114, 0, 0, 3, 0, 1, 5, 9, 0.00788939468503937, ["cmp     byte ptr [rsi], 30h ; '0'", "mov     eax, 0Ch", "jz      loc_9E43"], ["cmp~<TAG>,0", "mov~eax,0", "jz~FOO"]], [4, 1, 27, 1, 0, 11, 1, 0, 11, 8, 0.0, ["lea     rdi, a00; \"00\"", "mov     ecx, 2", "repe cmpsb", "setnbe  al", "sbb     al, 0", "movsx   eax, al", "cmp     eax, 1", "sbb     rbx, rbx", "and     rbx, 0FFFFFFFFFFFFFFA0h", "add     rbx, 0D0h", "nop     dword ptr [rax+rax+00h]"], ["lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "movsx~eax,al", "cmp~eax,0", "sbb~rbx,rbx", "and~rbx,0", "add~rbx,<STR>", "nop~[word ptr [rax+0]"]], [0, 0, 27, 0, 0, 1, 0, 1, 11, 8, 0.0016609251968503938, ["jmp     loc_9C50"], ["jmp~FOO"]], [0, 0, 35, 0, 0, 1, 0, 1, 11, 9, 0.0006459153543307086, ["jmp     loc_A0C9"], ["jmp~FOO"]], [2, 0, 36, 0, 0, 3, 0, 1, 10, 9, 0.002306840551181102, ["cmp     byte ptr [rsi], 30h ; '0'", "mov     eax, 13h", "jnz     loc_A164"], ["cmp~<TAG>,0", "mov~eax,0", "jnz~FOO"]], [2, 0, 65, 0, 0, 7, 1, 1, 9, 8, 0.0034756397637795275, ["lea     rdi, a00; \"00\"", "mov     ecx, 2", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_9C50"], ["lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [2, 0, 66, 0, 0, 3, 0, 1, 8, 8, 0.0073511318897637795, ["cmp     rax, 2", "mov     ebx, 100h", "jnz     loc_9C50"], ["cmp~rax,0", "mov~ebx,0", "jnz~FOO"]], [0, 0, 26, 1, 0, 2, 0, 0, 7, 7, 0.1530511811023622, ["lea     rcx, color_indicator", "add     rcx, rbx"], ["lea~rcx,<TAG>", "add~rcx,rbx"]], [1, 0, 27, 0, 0, 2, 0, 1, 6, 8, 0.005613312007874015, ["mov     ebx, 0C0h", "jmp     loc_9C50"], ["mov~ebx,0", "jmp~FOO"]], [0, 2, 30, 0, 0, 3, 0, 1, 7, 8, 0.008489173228346457, ["cmp     ecx, 1000h", "mov     ebx, 80h", "jz      loc_9C50"], ["cmp~ecx,<STR>", "mov~ebx,<STR>", "jz~FOO"]], [1, 1, 29, 0, 0, 3, 0, 1, 8, 8, 0.0024606299212598425, ["cmp     ecx, 0C000h", "mov     ebx, 90h", "jz      loc_9C50"], ["cmp~ecx,0", "mov~ebx,<STR>", "jz~FOO"]], [0, 1, 27, 0, 0, 2, 0, 1, 13, 8, 0.004152312992125984, ["mov     ebx, 160h", "jmp     loc_9C50"], ["mov~ebx,<STR>", "jmp~FOO"]], [1, 1, 27, 0, 0, 4, 0, 1, 10, 8, 0.0008304625984251969, ["cmp     byte ptr [rsi], 30h ; '0'", "mov     eax, 0D0h", "cmovnz  rbx, rax", "jmp     loc_9C50"], ["cmp~<TAG>,0", "mov~eax,<STR>", "cmovnz~rbx,rax", "jmp~FOO"]], [2, 0, 36, 0, 0, 3, 0, 1, 10, 8, 0.00359867125984252, ["cmp     rax, 2", "mov     ebx, 130h", "jnz     loc_9C50"], ["cmp~rax,0", "mov~ebx,0", "jnz~FOO"]], [2, 0, 35, 0, 0, 7, 1, 1, 11, 8, 0.0007074311023622048, ["lea     rdi, a00; \"00\"", "mov     ecx, 2", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_9C50"], ["lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [1, 1, 34, 0, 0, 3, 1, 1, 8, 8, 0.0211306594488189, ["and     r8d, 200h", "mov     ebx, 60h ; '`'", "jz      loc_9C50"], ["and~r8d,<STR>", "mov~ebx,0", "jz~FOO"]], [0, 0, 33, 0, 0, 3, 1, 1, 9, 8, 0.010396161417322835, ["mov     rax, qword ptr cs:unk_227180", "test    rax, rax", "jz      loc_9C50"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [2, 0, 28, 0, 0, 3, 0, 1, 11, 8, 0.003813976377952756, ["cmp     rax, 2", "mov     ebx, 120h", "jnz     loc_9C50"], ["cmp~rax,0", "mov~ebx,0", "jnz~FOO"]], [5, 0, 27, 1, 0, 11, 1, 1, 12, 8, 0.0, ["lea     rdi, a00; \"00\"", "mov     ecx, 2", "repe cmpsb", "setnbe  al", "sbb     al, 0", "movsx   eax, al", "cmp     eax, 1", "sbb     rbx, rbx", "and     bl, 40h", "add     rbx, 120h", "jmp     loc_9C50"], ["lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "movsx~eax,al", "cmp~eax,0", "sbb~rbx,rbx", "and~bl,0", "add~rbx,0", "jmp~FOO"]], [1, 0, 27, 1, 0, 3, 0, 1, 6, 8, 0.01164185531496063, ["shl     rcx, 4", "mov     rbx, rcx", "jmp     loc_9C50"], ["shl~rcx,0", "mov~rbx,rcx", "jmp~FOO"]], [1, 0, 27, 1, 0, 4, 0, 1, 6, 8, 0.01696296751968504, ["mov     ecx, eax", "shl     rcx, 4", "mov     rbx, rcx", "jmp     loc_9C50"], ["mov~ecx,eax", "shl~rcx,0", "mov~rbx,rcx", "jmp~FOO"]], [1, 0, 27, 0, 0, 2, 0, 1, 11, 8, 0.010519192913385827, ["mov     ebx, 150h", "jmp     loc_9C50"], ["mov~ebx,0", "jmp~FOO"]], [2, 0, 44, 0, 0, 3, 0, 1, 9, 8, 0.005505659448818897, ["cmp     rax, 2", "mov     ebx, 140h", "jnz     loc_9C50"], ["cmp~rax,0", "mov~ebx,0", "jnz~FOO"]], [0, 0, 27, 0, 0, 1, 0, 1, 11, 8, 0.0016609251968503938, ["jmp     loc_9C50"], ["jmp~FOO"]], [0, 0, 27, 0, 0, 1, 0, 1, 12, 8, 0.0008304625984251969, ["jmp     loc_9C50"], ["jmp~FOO"]], [1, 0, 128, 1, 0, 17, 2, 1, 0, 8, 0.0, ["push    r15", "push    r14", "mov     r9, stack_0; stack", "push    r13", "push    r12", "mov     r14d, esi", "push    rbp", "push    rbx", "mov     rbp, f", "mov     r13, start_col", "sub     rsp, 0A8h", "mov     rax, fs:28h", "mov     [rsp+0D8h+var_40], rax", "xor     eax, eax", "test    sil, sil", "movzx   eax, cs:print_with_color", "jz      loc_9B88"], ["push~r15", "push~r14", "mov~r9,stack_0", "push~r13", "push~r12", "mov~r14d,esi", "push~rbp", "push~rbx", "mov~rbp,f", "mov~r13,start_col", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~sil,sil", "movzx~eax,<TAG>", "jz~FOO"]], [1, 1, 29, 0, 0, 3, 0, 1, 11, 9, 0.0025221456692913384, ["cmp     byte ptr [rsi], 30h ; '0'", "mov     eax, 12h", "jnz     loc_A164"], ["cmp~<TAG>,0", "mov~eax,<STR>", "jnz~FOO"]], [1, 0, 32, 0, 0, 3, 0, 1, 10, 9, 0.008673720472440945, ["cmp     rax, 1", "mov     rsi, cs:off_227188", "jz      loc_A258"], ["cmp~rax,0", "mov~rsi,<TAG>", "jz~FOO"]], [2, 0, 25, 0, 0, 3, 0, 1, 8, 6, 0.1547121062992126, ["cmp     qword ptr [rcx+8], 0", "mov     r12d, 1", "jnz     loc_9A71"], ["cmp~[word ptr [rcx+0],0", "mov~r12d,0", "jnz~FOO"]], [0, 0, 26, 0, 0, 2, 0, 1, 9, 7, 0.004798228346456693, ["lea     rcx, [rbx+10h]", "jmp     loc_9C5A"], ["lea~rcx,[rbx+0]", "jmp~FOO"]], [0, 0, 122, 0, 0, 3, 1, 1, 1, 7, 0.006828248031496063, ["test    al, al", "mov     r15, [f+8]", "jnz     loc_9CC0"], ["test~al,al", "mov~r15,[f+0]", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 7, 1, 0.015501968503937008, ["mov     rcx, [rsp+0D8h+var_40]", "xor     rcx, fs:28h", "mov     rax, len", "jnz     loc_A26B"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,len", "jnz~FOO"]], [0, 0, 19, 0, 0, 2, 2, 0, 2, 6, 0.004675196850393701, ["xor     ecx, ecx; color", "xor     r12d, r12d"], ["xor~ecx,ecx", "xor~r12d,r12d"]], [0, 0, 117, 0, 0, 3, 1, 1, 1, 7, 0.0009227362204724409, ["test    al, al", "mov     r15, [f]", "jz      loc_9A6C"], ["test~al,al", "mov~r15,<TAG>", "jz~FOO"]], [0, 0, 24, 0, 0, 3, 1, 1, 9, 7, 0.031803641732283464, ["mov     rax, cs:stru_2270A0.len", "test    rax, rax", "jz      loc_9A6C"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 2, 49, 0, 0, 4, 1, 1, 6, 10, 0.023314468503937008, ["mov     eax, r8d", "and     eax, 202h", "cmp     eax, 202h", "jz      loc_A1A3"], ["mov~eax,r8d", "and~eax,<STR>", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 65, 0, 0, 2, 0, 1, 5, 10, 0.031496062992125984, ["cmp     ecx, 4000h", "jz      loc_A069"], ["cmp~ecx,0", "jz~FOO"]], [2, 0, 43, 0, 0, 7, 0, 1, 4, 10, 0.02906619094488189, ["mov     ecx, [f+0A8h]", "lea     rdx, filetype_indicator_11085", "mov     ecx, [rdx+rcx*4]", "cmp     ecx, 7", "setz    dl", "cmp     ecx, 5", "jz      loc_9E5B"], ["mov~ecx,[f+0]", "lea~rdx,<TAG>", "mov~ecx,<TAG>", "cmp~ecx,0", "setz~dl", "cmp~ecx,0", "jz~FOO"]], [1, 0, 41, 0, 0, 2, 0, 0, 9, 10, 0.033464566929133854, ["cmp     qword ptr [f+28h], 1", "jbe     loc_9E5B"], ["cmp~[word ptr [f+0],0", "jbe~FOO"]], [0, 0, 40, 0, 0, 3, 1, 1, 10, 10, 0.014087106299212598, ["mov     rax, qword ptr cs:unk_2271C0", "test    rax, rax", "jz      loc_9E5B"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [2, 0, 35, 0, 0, 7, 1, 1, 13, 9, 0.00043061023622047243, ["lea     rdi, a00; \"00\"", "mov     ecx, 2", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jz      loc_9E5B"], ["lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jz~FOO"]], [2, 0, 35, 0, 0, 3, 0, 1, 12, 9, 0.0016301673228346456, ["cmp     byte ptr [rsi], 30h ; '0'", "mov     eax, 16h", "jnz     loc_A164"], ["cmp~<TAG>,0", "mov~eax,0", "jnz~FOO"]], [0, 0, 32, 0, 0, 1, 0, 0, 6, 10, 0.012795275590551181, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 41, 0, 0, 2, 1, 1, 7, 9, 0.02432947834645669, ["test    r8b, 2", "jz      short loc_A0C9"], ["test~r8b,0", "jz~FOO"]], [0, 0, 48, 0, 0, 3, 1, 1, 7, 10, 0.007135826771653543, ["mov     rax, qword ptr cs:unk_2271A0", "test    rax, rax", "jz      loc_A07C"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [2, 0, 43, 0, 0, 7, 1, 1, 10, 9, 0.0027066929133858267, ["lea     rdi, a00; \"00\"", "mov     ecx, 2", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jz      loc_A07C"], ["lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jz~FOO"]], [1, 0, 22, 0, 0, 3, 0, 1, 10, 7, 0.01937746062992126, ["cmp     rax, 1", "mov     rsi, cs:stru_2270A0.string", "jz      loc_A172"], ["cmp~rax,0", "mov~rsi,<TAG>", "jz~FOO"]], [0, 0, 40, 0, 0, 3, 1, 1, 8, 9, 0.008243110236220472, ["mov     rax, qword ptr cs:unk_227190", "test    rax, rax", "jz      short loc_A0C9"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [2, 0, 66, 0, 0, 3, 0, 1, 8, 9, 0.003229576771653543, ["cmp     byte ptr [rsi], 30h ; '0'", "mov     eax, 10h", "jnz     loc_A164"], ["cmp~<TAG>,0", "mov~eax,0", "jnz~FOO"]], [1, 0, 20, 0, 0, 3, 1, 1, 11, 6, 0.007105068897637795, ["xor     ecx, ecx", "cmp     rax, 2", "jnz     loc_9A71"], ["xor~ecx,ecx", "cmp~rax,0", "jnz~FOO"]], [1, 0, 39, 0, 0, 3, 0, 1, 9, 9, 0.006951279527559055, ["cmp     rax, 1", "mov     rsi, cs:off_227198", "jz      loc_A245"], ["cmp~rax,0", "mov~rsi,<TAG>", "jz~FOO"]], [2, 0, 18, 1, 1, 13, 1, 2, 3, 5, 0.1218011811023622, ["mov     edx, [f+0C4h]; needs_general_quoting", "mov     rsi, cs:filename_quoting_options; options", "sub     rsp, 8", "xor     r14d, 1", "push    qword ptr [f+10h]; absolute_name", "mov     rdi, name; name", "movzx   r8d, r14b; allow_pad", "call    quote_name", "mov     f, rax", "pop     len", "pop     rdx", "lea     rbx, [rsp+0D8h+oset]", "jmp     short loc_9AFC"], ["mov~edx,[f+0]", "mov~rsi,<TAG>", "sub~rsp,0", "xor~r14d,0", "push~[word ptr [f+0]", "mov~rdi,name", "movzx~r8d,r14b", "call~FOO", "mov~f,rax", "pop~len", "pop~rdx", "lea~rbx,[rsp+0]", "jmp~FOO"]], [2, 0, 19, 0, 0, 10, 3, 1, 12, 6, 0.0, ["lea     rdi, a00; \"00\"", "mov     ecx, 2", "repe cmpsb", "setnbe  al", "sbb     al, 0", "xor     r12d, r12d", "test    al, al", "setnz   r12b", "xor     ecx, ecx", "jmp     loc_9A71"], ["lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "xor~r12d,r12d", "test~al,al", "setnz~r12b", "xor~ecx,ecx", "jmp~FOO"]], [1, 0, 19, 0, 0, 5, 2, 1, 11, 6, 0.0005843996062992126, ["xor     r12d, r12d", "cmp     byte ptr [rsi], 30h ; '0'", "setnz   r12b", "xor     ecx, ecx", "jmp     loc_9A71"], ["xor~r12d,r12d", "cmp~<TAG>,0", "setnz~r12b", "xor~ecx,ecx", "jmp~FOO"]], [1, 0, 71, 0, 0, 2, 1, 1, 5, 11, 0.03875492125984252, ["test    r8d, 800h", "jz      short loc_9F14"], ["test~r8d,0", "jz~FOO"]], [0, 0, 70, 0, 0, 3, 1, 1, 6, 10, 0.007935531496062992, ["mov     rax, qword ptr cs:unk_227160", "test    rax, rax", "jz      short loc_9F14"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 65, 0, 0, 1, 0, 1, 9, 12, 0.0034141240157480315, ["jmp     loc_9F14"], ["jmp~FOO"]], [0, 0, 32, 2, 1, 9, 1, 2, 8, 8, 0.006582185039370078, ["mov     rsi, [rbx+8]; s2", "mov     rdi, r12", "mov     [rsp+0D8h+stack], stack_0", "sub     rdi, rdx", "add     rdi, name; s1", "call    c_strncasecmp", "test    eax, eax", "mov     r9, [rsp+0D8h+stack]", "jz      short loc_9EBB"], ["mov~rsi,[rbx+0]", "mov~rdi,r12", "mov~[rsp+0],stack_0", "sub~rdi,rdx", "add~rdi,name", "call~FOO", "test~eax,eax", "mov~r9,[rsp+0]", "jz~FOO"]], [0, 0, 32, 0, 0, 3, 0, 0, 7, 9, 0.011626476377952756, ["mov     rdx, [rbx]; n", "cmp     r12, rdx", "jb      short loc_9EA8"], ["mov~rdx,<TAG>", "cmp~r12,rdx", "jb~FOO"]], [2, 0, 110, 0, 0, 4, 1, 1, 4, 11, 0.0655757874015748, ["mov     ecx, r8d", "and     ecx, 0F000h", "cmp     ecx, 8000h", "jz      loc_9EC4"], ["mov~ecx,r8d", "and~ecx,0", "cmp~ecx,0", "jz~FOO"]], [1, 0, 121, 0, 0, 3, 0, 1, 2, 12, 0.01236466535433071, ["cmp     byte ptr [f+0B9h], 0", "mov     r8d, [f+0ACh]", "jnz     loc_9D79"], ["cmp~[yte ptr [f+0],0", "mov~r8d,[f+0]", "jnz~FOO"]], [0, 0, 18, 0, 2, 10, 2, 3, 6, 7, 0.023068405511811024, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "call    _fflush_unlocked", "lea     rsi, caught_signals; set", "xor     edi, edi; how", "mov     rdx, rbx; oset", "call    _sigprocmask", "mov     r14d, cs:interrupt_signal", "mov     eax, cs:stop_signal_count", "test    eax, eax", "jz      short loc_9B40"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~rdx,rbx", "call~FOO", "mov~r14d,<TAG>", "mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 5, 8, 0.03549458661417323, ["cmp     cs:used_color, 0", "jz      short loc_9AA8"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 18, 0, 2, 5, 0, 3, 6, 8, 0.0, ["lea     rdi, color_indicator; ind", "call    put_indicator", "lea     rdi, ind; ind", "call    put_indicator", "jmp     loc_9AA8"], ["lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [2, 0, 18, 1, 0, 3, 0, 0, 7, 6, 0.004798228346456693, ["sub     eax, 1", "mov     r14d, 13h", "mov     cs:stop_signal_count, eax"], ["sub~eax,0", "mov~r14d,0", "mov~<TAG>,eax"]], [1, 0, 69, 0, 0, 3, 0, 1, 7, 9, 0.008796751968503937, ["cmp     rax, 1", "mov     rsi, cs:off_227168", "jz      loc_A1EF"], ["cmp~rax,0", "mov~rsi,<TAG>", "jz~FOO"]], [1, 0, 118, 0, 0, 3, 0, 1, 4, 10, 0.004152312992125984, ["cmp     rax, 1", "mov     symlink_target, qword ptr cs:unk_227128", "jz      loc_A156"], ["cmp~rax,0", "mov~symlink_target,<TAG>", "jz~FOO"]], [1, 0, 18, 0, 2, 6, 1, 2, 8, 5, 0.0044291338582677165, ["mov     edi, r14d; sig", "call    _raise", "xor     edx, edx; oset", "mov     rsi, rbx; set", "mov     edi, 2; how", "call    _sigprocmask"], ["mov~edi,r14d", "call~FOO", "xor~edx,edx", "mov~rsi,rbx", "mov~edi,0", "call~FOO"]], [0, 0, 18, 0, 1, 4, 1, 2, 7, 6, 0.004798228346456693, ["xor     esi, esi; handler", "mov     edi, r14d; sig", "call    _signal", "jmp     short loc_9AE5"], ["xor~esi,esi", "mov~edi,r14d", "call~FOO", "jmp~FOO"]], [1, 0, 116, 0, 0, 2, 0, 1, 5, 9, 0.002906619094488189, ["cmp     rax, 2", "jnz     short loc_9D16"], ["cmp~rax,0", "jnz~FOO"]], [0, 0, 18, 0, 0, 3, 1, 1, 4, 4, 0.12112450787401574, ["mov     eax, cs:interrupt_signal", "test    eax, eax", "jnz     short loc_9B10"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [0, 0, 18, 0, 0, 3, 1, 1, 5, 3, 0.07258858267716535, ["mov     eax, cs:stop_signal_count", "test    eax, eax", "jz      short loc_9B50"], ["mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 0, 112, 0, 0, 4, 2, 1, 3, 11, 0.01676304133858268, ["movzx   edx, byte ptr [rbp+0B8h]", "xor     eax, eax", "test    dl, dl", "jz      loc_9BBA"], ["movzx~edx,[yte ptr [rbp+0]", "xor~eax,eax", "test~dl,dl", "jz~FOO"]], [0, 0, 35, 0, 0, 2, 1, 1, 5, 9, 0.019485113188976378, ["test    eax, eax", "jnz     loc_A140"], ["test~eax,eax", "jnz~FOO"]], [1, 0, 36, 0, 0, 2, 0, 1, 7, 10, 0.0016609251968503938, ["mov     ecx, 7", "jmp     loc_9BD9"], ["mov~ecx,0", "jmp~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 6, 2, 0.06588336614173228, ["test    r12d, r12d", "jnz     loc_9D20"], ["test~r12d,r12d", "jnz~FOO"]], [0, 0, 56, 0, 0, 3, 1, 1, 7, 12, 0.0483513779527559, ["mov     rax, qword ptr cs:unk_2271B0", "test    rax, rax", "jz      short loc_9F63"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 6, 0, 1, 2, 0, 1, 8, 3, 0.011257381889763779, ["lea     rdi, stru_227080; ind", "call    put_indicator"], ["lea~rdi,<TAG>", "call~FOO"]], [1, 0, 55, 0, 0, 3, 0, 1, 8, 11, 0.012057086614173228, ["cmp     rax, 1", "mov     rsi, cs:off_2271B8", "jz      loc_A183"], ["cmp~rax,0", "mov~rsi,<TAG>", "jz~FOO"]], [1, 0, 53, 0, 0, 2, 0, 1, 9, 10, 0.005997785433070866, ["cmp     rax, 2", "jnz     loc_A18C"], ["cmp~rax,0", "jnz~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 9, 2, 0.015686515748031496, ["mov     rcx, cs:line_length", "test    rcx, rcx", "jz      loc_9B59"], ["mov~rcx,<TAG>", "test~rcx,rcx", "jz~FOO"]], [0, 0, 34, 0, 0, 2, 1, 1, 6, 9, 0.00812007874015748, ["test    dl, dl", "jz      loc_A140"], ["test~dl,dl", "jz~FOO"]], [1, 0, 41, 0, 0, 2, 0, 1, 6, 9, 0.009965551181102362, ["cmp     ecx, 0A000h", "jz      loc_A14C"], ["cmp~ecx,0", "jz~FOO"]], [2, 0, 52, 0, 0, 7, 1, 1, 10, 10, 0.0007074311023622048, ["lea     rdi, a00; \"00\"", "mov     ecx, 2", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_A18C"], ["lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [0, 0, 4, 2, 0, 9, 2, 1, 10, 2, 0.007627952755905512, ["xor     edx, edx", "mov     rax, start_col", "div     rcx", "xor     edx, edx", "mov     rsi, rax", "lea     rax, [len+start_col-1]", "div     rcx", "cmp     rsi, rax", "jz      loc_9B59"], ["xor~edx,edx", "mov~rax,start_col", "div~,rcx", "xor~edx,edx", "mov~rsi,rax", "lea~rax,[len+0]", "div~,rcx", "cmp~rsi,rax", "jz~FOO"]], [1, 0, 49, 0, 0, 2, 1, 1, 8, 11, 0.042568897637795276, ["and     r8d, 49h", "jz      short loc_9FAB"], ["and~r8d,0", "jz~FOO"]], [1, 0, 52, 0, 0, 2, 0, 1, 9, 10, 0.0053826279527559055, ["cmp     byte ptr [rsi], 30h ; '0'", "jz      loc_9F63"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 51, 0, 0, 2, 0, 1, 10, 9, 0.011780265748031496, ["cmp     byte ptr [f+0C0h], 0", "jz      loc_9F63"], ["cmp~[yte ptr [f+0],0", "jz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 11, 2, 0.0, ["lea     rdi, stru_2271D0; ind", "call    put_indicator", "jmp     loc_9B59"], ["lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [0, 0, 48, 0, 0, 3, 1, 1, 9, 11, 0.014640748031496063, ["mov     rax, qword ptr cs:unk_227140", "test    rax, rax", "jz      short loc_9FAB"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 8, -1, 0.0, ["add     rsp, 0A8h", "pop     rbx", "pop     rbp", "pop     used_color_this_time", "pop     start_col", "pop     r14", "pop     name", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~used_color_this_time", "pop~start_col", "pop~r14", "pop~name", "retn"]], [0, 0, 112, 0, 0, 3, 1, 1, 4, 11, 0.06606791338582677, ["movzx   edx, byte ptr [f+0B8h]", "test    dl, dl", "jnz     loc_9D8A"], ["movzx~edx,[yte ptr [f+0]", "test~dl,dl", "jnz~FOO"]], [0, 0, 113, 0, 0, 1, 0, 0, 3, 12, 0.01620939960629921, ["mov     r8d, [rbp+30h]"], ["mov~r8d,[rbp+0]"]], [1, 0, 39, 0, 0, 3, 0, 1, 11, 10, 0.011626476377952756, ["cmp     rax, 1", "mov     rsi, qword ptr cs:unk_2271C8", "jz      loc_9E4D"], ["cmp~rax,0", "mov~rsi,<TAG>", "jz~FOO"]], [1, 0, 36, 0, 0, 2, 0, 1, 12, 9, 0.006612942913385826, ["cmp     rax, 2", "jnz     short loc_9FF8"], ["cmp~rax,0", "jnz~FOO"]]], "func_feature": [16, 61, 133, 1, 129, 217, 3, 468, 0.01548, 41, 13], "succs": [[40], [0, 40], [40, 11], [40, 2], [40], [4, 6], [72, 4], [126, 14], [126, 7], [13, 110], [9, 110], [16, 45], [53, 15], [19, 12], [125], [110], [40, 34], [20, 53], [17, 5], [40, 29], [72], [25, 53], [21, 55], [114], [111, 23], [77], [40], [26, 76], [26, 92], [35, 110], [125], [100, 30], [41, 30], [53, 30], [40], [40], [48], [36, 53], [40, 10], [40, 38], [61], [40], [40, 43], [40, 1], [40], [40], [40, 47], [40, 48], [40, 49], [40, 60], [40, 51], [40], [40], [40], [40], [40, 79], [40], [40], [67, 63], [57, 53], [50, 59], [68, 85], [61], [66, 94], [], [64, 124], [85], [8, 66], [80, 66], [77, 78], [116, 69], [107, 27], [73, 27], [27, 127], [27, 44], [27, 53], [92], [48, 81], [77, 22], [56, 77], [83, 87], [48, 84], [90, 53], [85, 86], [37, 46], [104], [85], [85], [89, 10], [10, 99], [10], [28, 62], [91, 28], [88, 70], [106, 31], [98, 102], [97, 95], [95], [101], [82, 39], [33, 103], [104], [101], [32, 41], [96, 105], [96, 109], [93, 71], [115, 52], [107], [24, 65], [112, 119], [114], [120, 113], [121, 117], [65, 118], [3, 52], [42, 108], [121, 119], [65, 122], [72, 123], [121, 119], [54, 119], [65], [72, 18], [], [93, 71], [125], [128, 75], [74, 44]], "fname": "print_name_with_quoting", "n_num": 129}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, 0, 0.06436781609195402, ["mov     f, [rsp+2B8h+var_20]", "xor     f, fs:28h", "mov     rax, width", "jnz     loc_A480"], ["mov~f,[rsp+0]", "xor~f,<TAG>", "mov~rax,width", "jnz~FOO"]], [0, 0, 4, 0, 1, 9, 3, 2, 4, 0, 0.11954022988505747, ["mov     rcx, start_col; start_col", "xor     edx, edx; stack", "xor     esi, esi; symlink_target", "mov     rdi, f; f", "call    print_name_with_quoting", "mov     start_col, rax", "mov     eax, cs:indicator_style_0", "test    eax, eax", "jz      short loc_A3A1"], ["mov~rcx,start_col", "xor~edx,edx", "xor~esi,esi", "mov~rdi,f", "call~FOO", "mov~start_col,rax", "mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 3, 0, 0.20229885057471264, ["cmp     cs:print_scontext, 0", "jz      short loc_A36A"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 5, 0, 1, 4, 1, 1, 5, 0, 0.011494252873563218, ["lea     rsi, aS; \"%*s \"", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk"], ["lea~rsi,<TAG>", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 14, 0, 0, 3, 0, 1, 3, 0, 0.09195402298850575, ["cmp     byte ptr [f+0B8h], 0", "lea     rcx, s; \"?\"", "jnz     loc_A400"], ["cmp~[yte ptr [f+0],0", "lea~rcx,<TAG>", "jnz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 2, 0, 0.25862068965517243, ["cmp     cs:print_block_size, 0", "jz      short loc_A336"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 30, 1, 0, 10, 1, 1, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, start_col", "mov     rbx, f", "sub     rsp, 2A8h", "mov     rax, fs:28h", "mov     [rsp+2B8h+var_20], rax", "xor     eax, eax", "cmp     cs:print_with_color, 0", "jz      short loc_A2AB"], ["push~rbp", "push~rbx", "mov~rbp,start_col", "mov~rbx,f", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 11, 0, 0, 3, 1, 1, 4, 0, 0.0396551724137931, ["xor     edx, edx", "cmp     cs:format_0, 4", "jz      short loc_A323"], ["xor~edx,edx", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 5, 0, 0.005747126436781609, ["mov     edx, cs:block_size_width"], ["mov~edx,<TAG>"]], [1, 1, 12, 0, 1, 10, 1, 2, 4, 0, 0.029310344827586206, ["mov     edx, cs:human_output_opts; opts", "mov     rdi, [f+58h]; n", "mov     ecx, 200h; from_block_size", "mov     r8, cs:output_block_size; to_block_size", "mov     rsi, rsp; buf", "call    human_readable", "xor     edx, edx", "cmp     cs:format_0, 4", "mov     rcx, rax", "jnz     loc_A31D"], ["mov~edx,<TAG>", "mov~rdi,[f+0]", "mov~ecx,<STR>", "mov~r8,<TAG>", "mov~rsi,rsp", "call~FOO", "xor~edx,edx", "cmp~<TAG>,0", "mov~rcx,rax", "jnz~FOO"]], [0, 0, 3, 1, 1, 6, 0, 1, 5, 0, 0.0, ["movzx   edi, byte ptr [f+0B8h]; stat_ok", "mov     edx, [f+0A8h]; type", "mov     esi, [f+30h]; mode", "call    print_type_indicator", "movzx   eax, al", "add     width, rax"], ["movzx~edi,[yte ptr [f+0]", "mov~edx,[f+0]", "mov~esi,[f+0]", "call~FOO", "movzx~eax,al", "add~width,rax"]], [2, 0, 25, 0, 0, 7, 1, 1, 4, 0, 0.017816091954022988, ["lea     rdi, a00; \"00\"", "mov     ecx, 2", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jz      loc_A2AB"], ["lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jz~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 3, 0, 0.008620689655172414, ["cmp     rax, 2", "jnz     short loc_A441"], ["cmp~rax,0", "jnz~FOO"]], [0, 0, 29, 0, 0, 3, 1, 1, 1, 0, 0.006896551724137931, ["mov     rax, cs:stru_2270A0.len", "test    rax, rax", "jnz     loc_A3C8"], ["mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 1, 5, 0, 0.005747126436781609, ["jmp     loc_A323"], ["jmp~FOO"]], [1, 0, 9, 0, 1, 4, 1, 1, 5, 0, 0.05172413793103448, ["lea     rsi, aS; \"%*s \"", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk"], ["lea~rsi,<TAG>", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 1, 0, 0.20229885057471264, ["cmp     cs:print_inode, 0", "jz      short loc_A2F5"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 24, 0, 0, 2, 0, 1, 3, 0, 0.028160919540229885, ["cmp     byte ptr [rsi], 30h ; '0'", "jz      loc_A2AB"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 23, 0, 3, 7, 0, 4, 4, 0, 0.0396551724137931, ["lea     rdi, color_indicator; ind", "call    put_indicator", "lea     rdi, stru_2270A0; ind", "call    put_indicator", "lea     rdi, ind; ind", "call    put_indicator", "jmp     loc_A2AB"], ["lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 28, 0, 0, 3, 0, 1, 2, 0, 0.011494252873563218, ["cmp     rax, 1", "mov     start_col, cs:stru_2270A0.string", "jz      short loc_A438"], ["cmp~rax,0", "mov~start_col,<TAG>", "jz~FOO"]], [1, 0, 21, 0, 0, 3, 0, 1, 2, 0, 0.05172413793103448, ["cmp     byte ptr [f+0B8h], 0", "lea     rcx, s; \"?\"", "jz      short loc_A2D1"], ["cmp~[yte ptr [f+0],0", "lea~rcx,<TAG>", "jz~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 6, 0, 0.0, ["add     rsp, 2A8h", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [0, 0, 20, 0, 0, 3, 1, 1, 3, 0, 0.011494252873563218, ["mov     rdi, [f+20h]; i", "test    rdi, rdi", "jnz     loc_A470"], ["mov~rdi,[f+0]", "test~rdi,rdi", "jnz~FOO"]], [1, 0, 7, 0, 0, 4, 1, 1, 4, 0, 0.052873563218390804, ["xor     edx, edx", "cmp     cs:format_0, 4", "mov     rcx, [f+0B0h]", "jz      short loc_A357"], ["xor~edx,edx", "cmp~<TAG>,0", "mov~rcx,[f+0]", "jz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 5, 0, 0.0, ["mov     edx, cs:scontext_width"], ["mov~edx,<TAG>"]], [1, 0, 18, 0, 0, 3, 1, 1, 3, 0, 0.08275862068965517, ["xor     edx, edx", "cmp     cs:format_0, 4", "jz      short loc_A2E2"], ["xor~edx,edx", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 19, 0, 1, 4, 0, 2, 4, 0, 0.0, ["mov     rsi, rsp; buf", "call    umaxtostr", "mov     rcx, rax", "jmp     loc_A2D1"], ["mov~rsi,rsp", "call~FOO", "mov~rcx,rax", "jmp~FOO"]], [0, 0, 17, 0, 0, 1, 0, 0, 4, 0, 0.0, ["mov     edx, cs:inode_number_width"], ["mov~edx,<TAG>"]], [0, 0, 24, 0, 0, 1, 0, 1, 5, 0, 0.0011494252873563218, ["jmp     short loc_A441"], ["jmp~FOO"]], [1, 0, 16, 0, 1, 4, 1, 1, 4, 0, 0.09195402298850575, ["lea     rsi, aS; \"%*s \"", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk"], ["lea~rsi,<TAG>", "mov~edi,0", "xor~eax,eax", "call~FOO"]]], "func_feature": [11, 15, 33, 1, 31, 47, 5, 114, 0.04798, 19, 3], "succs": [[], [0, 22], [1, 11], [24, 2], [2], [8, 10], [3, 5], [17, 14], [16, 9], [16], [9, 15], [1], [17, 29], [19, 12], [17, 20], [16], [3], [21, 6], [17, 19], [17], [18, 13], [26, 23], [], [26, 27], [25, 4], [4], [28, 30], [26], [30], [19], [6]], "fname": "print_file_name_and_frills", "n_num": 31}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 22, 0, 0, 4, 0, 1, 0, 0, 0.1600790513833992, ["lea     rcx, [rax+1]", "mov     [rdi+28h], rcx", "mov     [rax], dl", "jmp     loc_A4CC"], ["lea~rcx,[rax+0]", "mov~[rdi+0],rcx", "mov~<TAG>,dl", "jmp~FOO"]], [0, 0, 22, 0, 0, 4, 0, 0, 8, 4, 0.3537549407114624, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_A5F0"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [0, 0, 22, 0, 1, 4, 1, 2, 3, 4, 0.19565217391304346, ["mov     rdi, f; f", "call    length_of_file_name_and_frills", "test    filesno, filesno", "jz      loc_A5E0"], ["mov~rdi,f", "call~FOO", "test~filesno,filesno", "jz~FOO"]], [1, 0, 22, 0, 0, 4, 0, 1, 2, 4, 0.40316205533596833, ["cmp     cs:line_length, 0", "mov     rax, cs:sorted_file", "mov     r12, [rax+filesno*8]", "jz      short loc_A4C0"], ["cmp~<TAG>,0", "mov~rax,<TAG>", "mov~r12,<TAG>", "jz~FOO"]], [0, 0, 22, 0, 0, 2, 0, 0, 4, 8, 0.13043478260869565, ["lea     pos, [r13+2]", "mov     pos, rbp"], ["lea~pos,[r13+0]", "mov~pos,rbp"]], [0, 0, 22, 0, 0, 3, 1, 1, 3, 3, 0.17391304347826086, ["test    filesno, filesno", "mov     rbp, pos", "jnz     loc_A590"], ["test~filesno,filesno", "mov~rbp,pos", "jnz~FOO"]], [0, 0, 22, 0, 1, 7, 0, 2, 7, 5, 0.1541501976284585, ["movsx   esi, r14b; int", "mov     [rsp+48h+var_3C], ecx", "mov     [rsp+48h+separator], dl", "call    ___overflow", "movzx   edx, [rsp+48h+separator]", "mov     ecx, [rsp+48h+var_3C]", "jmp     loc_A569"], ["movsx~esi,r14b", "mov~[rsp+0],ecx", "mov~[rsp+0],dl", "call~FOO", "movzx~edx,[rsp+0]", "mov~ecx,[rsp+0]", "jmp~FOO"]], [0, 0, 22, 0, 0, 4, 0, 0, 6, 6, 0.341897233201581, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_A600"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [2, 0, 1, 1, 0, 9, 0, 1, 2, 0, 0.04150197628458498, ["add     rsp, 18h", "mov     esi, 0Ah; int", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "jmp     ___overflow"], ["add~rsp,0", "mov~esi,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "jmp~FOO"]], [0, 0, 22, 0, 0, 5, 1, 1, 4, 9, 0.14624505928853754, ["mov     rdx, cs:line_length", "lea     rbp, [pos+2]", "lea     rcx, [len+rbp]", "test    rdx, rdx", "jz      loc_A5D8"], ["mov~rdx,<TAG>", "lea~rbp,[pos+0]", "lea~rcx,<TAG>", "test~rdx,rdx", "jz~FOO"]], [0, 2, 22, 0, 0, 3, 0, 1, 5, 7, 0.20553359683794464, ["mov     ecx, 20h ; ' '", "mov     edx, 20h ; ' '", "jmp     short loc_A549"], ["mov~ecx,<STR>", "mov~edx,<STR>", "jmp~FOO"]], [0, 0, 22, 0, 0, 2, 0, 1, 5, 8, 0.029644268774703556, ["mov     pos, rcx", "jmp     short loc_A597"], ["mov~pos,rcx", "jmp~FOO"]], [2, 0, 23, 1, 0, 9, 0, 1, 0, 2, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "cmp     cs:cwd_n_used, 0", "jz      loc_A5A8"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 22, 0, 0, 2, 0, 0, 5, 8, 0.0909090909090909, ["cmp     rdx, rcx", "jbe     short loc_A53A"], ["cmp~rdx,rcx", "jbe~FOO"]], [0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 0.11857707509881422, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_A620"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [0, 0, 22, 1, 0, 4, 0, 0, 6, 8, 0.003952569169960474, ["mov     rdx, r15", "sub     rdx, len", "cmp     rdx, pos", "jnb     loc_A5D8"], ["mov~rdx,r15", "sub~rdx,len", "cmp~rdx,pos", "jnb~FOO"]], [1, 0, 22, 1, 1, 6, 0, 1, 4, 2, 0.4703557312252964, ["mov     rsi, pos; start_col", "mov     rdi, f; f", "add     filesno, 1", "call    print_file_name_and_frills", "cmp     cs:cwd_n_used, filesno", "jbe     loc_A5A8"], ["mov~rsi,pos", "mov~rdi,f", "add~filesno,0", "call~FOO", "cmp~<TAG>,filesno", "jbe~FOO"]], [1, 0, 22, 0, 0, 5, 2, 1, 1, 5, 0.035573122529644265, ["mov     r14d, edi", "xor     r13d, r13d", "xor     ebx, ebx", "mov     r15, 0FFFFFFFFFFFFFFFDh", "jmp     short loc_A4E8"], ["mov~r14d,edi", "xor~r13d,r13d", "xor~ebx,ebx", "mov~r15,0", "jmp~FOO"]], [2, 0, 22, 0, 0, 4, 1, 0, 6, 7, 0.0909090909090909, ["mov     pos, len", "mov     ecx, 0Ah", "mov     edx, 0Ah", "xor     ebp, ebp"], ["mov~pos,len", "mov~ecx,0", "mov~edx,0", "xor~ebp,ebp"]], [2, 0, 0, 1, 0, 11, 0, 0, 2, -1, 0.0, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah", "add     rsp, 18h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 22, 1, 0, 3, 0, 1, 4, 3, 0.015810276679841896, ["mov     rbp, pos", "add     pos, len", "jmp     loc_A4CC"], ["mov~rbp,pos", "add~pos,len", "jmp~FOO"]], [0, 0, 22, 0, 1, 3, 0, 2, 9, 3, 0.1600790513833992, ["mov     esi, ecx; int", "call    ___overflow", "jmp     loc_A4CC"], ["mov~esi,ecx", "call~FOO", "jmp~FOO"]], [0, 0, 22, 0, 0, 3, 0, 0, 7, 5, 0.1541501976284585, ["lea     rsi, [rax+1]", "mov     [rdi+28h], rsi", "mov     [rax], r14b"], ["lea~rsi,[rax+0]", "mov~[rdi+0],rsi", "mov~<TAG>,r14b"]]], "func_feature": [4, 6, 17, 1, 24, 33, 1, 105, 0.14485, 4, 6], "succs": [[17], [0, 22], [10, 21], [2, 5], [11], [17, 4], [1], [6, 23], [], [8], [12, 14], [7], [11], [18, 15], [16, 19], [9, 20], [19, 12], [3, 15], [3], [7], [], [17], [17], [1]], "fname": "print_with_separator", "n_num": 24}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 11, 0, 0, 2, 1, 0, 0, 0, 0.009307593814636068, ["test    r8d, r8d", "jns     loc_A965"], ["test~r8d,r8d", "jns~FOO"]], [0, 0, 12, 0, 1, 7, 1, 2, 21, -1, 0.0008864375061558161, ["xor     edx, edx; flags", "mov     rsi, rax; nbytes", "mov     rdi, r14; string", "call    mbsnwidth", "mov     r8d, eax", "mov     cs:width_10774, eax", "jmp     loc_B1FD"], ["xor~edx,edx", "mov~rsi,rax", "mov~rdi,r14", "call~FOO", "mov~r8d,eax", "mov~<TAG>,eax", "jmp~FOO"]], [0, 0, 12, 0, 0, 1, 0, 0, 19, -1, 0.013592041761055846, ["mov     r8d, cs:width_10774"], ["mov~r8d,<TAG>"]], [1, 0, 55, 0, 1, 8, 2, 2, 15, 9, 0.0066975278242883875, ["lea     rsi, aLu; \"%*lu \"", "xor     ecx, ecx", "mov     edx, ebp", "mov     edi, 1", "xor     eax, eax", "movsxd  r12, ebp", "call    ___printf_chk", "jmp     loc_AD18"], ["lea~rsi,<TAG>", "xor~ecx,ecx", "mov~edx,ebp", "mov~edi,0", "xor~eax,eax", "movsxd~r12,ebp", "call~FOO", "jmp~FOO"]], [0, 0, 61, 0, 0, 4, 1, 1, 14, 10, 0.027922781443908206, ["mov     r12, [f+0B0h]", "mov     ebp, cs:scontext_width", "test    r12, r12", "jz      loc_B250"], ["mov~r12,[f+0]", "mov~ebp,<TAG>", "test~r12,r12", "jz~FOO"]], [1, 0, 98, 0, 0, 3, 0, 1, 12, 13, 0.012853343839259334, ["cmp     cs:numeric_ids, 0", "mov     r14d, [f+34h]", "jz      loc_B270"], ["cmp~<TAG>,0", "mov~r14d,[f+0]", "jz~FOO"]], [1, 0, 100, 0, 0, 3, 0, 1, 11, 14, 0.02275189599133261, ["cmp     byte ptr [f+0B8h], 0", "mov     ebp, cs:owner_width", "jz      loc_AE98"], ["cmp~[yte ptr [f+0],0", "mov~ebp,<TAG>", "jz~FOO"]], [0, 0, 123, 0, 1, 4, 0, 2, 7, 18, 0.0, ["lea     rsi, [rsp+1348h+hbuf]; buf", "call    umaxtostr", "mov     r9, rax", "jmp     loc_A6F1"], ["lea~rsi,[rsp+0]", "call~FOO", "mov~r9,rax", "jmp~FOO"]], [0, 0, 124, 0, 0, 3, 1, 1, 6, 18, 0.0008371909780360484, ["mov     rdi, [f+20h]; i", "test    rdi, rdi", "jnz     loc_B000"], ["mov~rdi,[f+0]", "test~rdi,rdi", "jnz~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 22, -1, 0.0, ["add     rsp, 1318h", "pop     f", "pop     rbp", "pop     w", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~f", "pop~rbp", "pop~w", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 21, -1, 0.013789027873534917, ["mov     rax, [rsp+1348h+var_40]", "xor     rax, fs:28h", "jnz     loc_B30B"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 10, 0, 0, 3, 1, 1, 21, -1, 0.0, ["mov     cs:width_10774, 0", "xor     r8d, r8d", "jmp     loc_A965"], ["mov~<TAG>,0", "xor~r8d,r8d", "jmp~FOO"]], [0, 0, 84, 0, 1, 5, 1, 2, 14, 13, 0.0030532847434255887, ["mov     edi, r14d; gid", "call    getgroup", "test    rax, rax", "mov     r12, rax", "jnz     loc_AF17"], ["mov~edi,r14d", "call~FOO", "test~rax,rax", "mov~r12,rax", "jnz~FOO"]], [1, 0, 85, 0, 0, 3, 0, 1, 13, 12, 0.014773958435930268, ["cmp     cs:numeric_ids, 0", "mov     r14d, [f+38h]", "jz      loc_B290"], ["cmp~<TAG>,0", "mov~r14d,[f+0]", "jz~FOO"]], [1, 0, 25, 3, 0, 7, 0, 0, 22, 4, 0.01420762336255294, ["lea     rdx, [recent+recent]", "add     recent, rdx", "movsxd  rdx, [rsp+1348h+when_local.tm_mon]", "lea     rdx, [rdx+rax*4]", "lea     rax, abformat", "shl     rdx, 7", "add     rdx, rax; format"], ["lea~rdx,<TAG>", "add~recent,rdx", "movsxd~rdx,[rsp+0]", "lea~rdx,<TAG>", "lea~rax,<TAG>", "shl~rdx,0", "add~rdx,rax"]], [1, 0, 27, 0, 0, 3, 0, 1, 21, 5, 0.03851078498965823, ["cmp     cs:use_abformat, 0", "mov     r8, cs:localtz; tz", "jz      loc_B180"], ["cmp~<TAG>,0", "mov~r8,<TAG>", "jz~FOO"]], [4, 0, 109, 2, 2, 17, 1, 3, 8, 12, 0.1771397616468039, ["sub     rsp, 8", "mov     r9d, cs:nlink_width", "lea     rcx, aSS; \"%s %*s \"", "push    rax", "mov     r8, r12", "mov     rdi, p", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "xor     eax, eax", "call    ___sprintf_chk", "mov     rdi, p; s", "call    _strlen", "add     p, rax", "cmp     cs:dired, 0", "pop     r8", "pop     r9", "jnz     loc_AC48"], ["sub~rsp,0", "mov~r9d,<TAG>", "lea~rcx,<TAG>", "push~rax", "mov~r8,r12", "mov~rdi,p", "mov~rdx,0", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~rdi,p", "call~FOO", "add~p,rax", "cmp~<TAG>,0", "pop~r8", "pop~r9", "jnz~FOO"]], [0, 0, 110, 0, 1, 4, 0, 2, 8, 13, 0.0, ["mov     rdi, [f+28h]; i", "lea     rsi, [rsp+1348h+hbuf]; buf", "call    umaxtostr", "jmp     loc_A7E2"], ["mov~rdi,[f+0]", "lea~rsi,[rsp+0]", "call~FOO", "jmp~FOO"]], [0, 0, 111, 0, 0, 3, 1, 1, 7, 13, 0.16945730326012018, ["test    dl, dl", "lea     rax, s; \"?\"", "jnz     loc_AC78"], ["test~dl,dl", "lea~rax,<TAG>", "jnz~FOO"]], [1, 0, 90, 0, 1, 7, 1, 1, 13, 12, 0.019797104304146558, ["lea     rsi, aLu; \"%*lu \"", "mov     ecx, r14d", "mov     edx, ebp", "mov     edi, 1", "xor     eax, eax", "movsxd  r12, ebp", "call    ___printf_chk"], ["lea~rsi,<TAG>", "mov~ecx,r14d", "mov~edx,ebp", "mov~edi,0", "xor~eax,eax", "movsxd~r12,ebp", "call~FOO"]], [0, 0, 91, 0, 0, 1, 0, 1, 14, 13, 0.004481434058898848, ["jmp     loc_AE14"], ["jmp~FOO"]], [1, 0, 34, 0, 0, 4, 0, 1, 20, 6, 0.010276108867658148, ["lea     rsi, [rcx-0F0C2ACh]", "mov     eax, 1", "cmp     rsi, rdx", "jl      loc_ABF0"], ["lea~rsi,[rcx-0F0C2ACh]+0]", "mov~eax,0", "cmp~rsi,rdx", "jl~FOO"]], [0, 0, 40, 0, 0, 3, 0, 1, 19, 7, 0.03637676877113494, ["mov     rdi, cs:current_time.tv_nsec", "mov     r9, [rsp+1348h+when_timespec.tv_nsec]; ns", "jg      loc_B220"], ["mov~rdi,<TAG>", "mov~r9,[rsp+0]", "jg~FOO"]], [1, 0, 107, 0, 0, 2, 0, 1, 9, 11, 0.1844282478085295, ["cmp     cs:print_owner, 0", "jnz     short loc_A850"], ["cmp~<TAG>,0", "jnz~FOO"]], [3, 0, 108, 1, 1, 7, 0, 2, 9, 12, 0.0, ["mov     rcx, cs:stdout@@GLIBC_2_2_5; stream", "lea     rdi, asc_1E664; \"  \"", "mov     edx, 2; n", "mov     esi, 1; size", "call    _fwrite_unlocked", "add     cs:dired_pos, 2", "jmp     loc_A82A"], ["mov~rcx,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "mov~esi,0", "call~FOO", "add~<TAG>,0", "jmp~FOO"]], [1, 0, 24, 0, 1, 6, 1, 2, 23, 3, 0.02506648281296169, ["mov     rcx, rbp; tp", "mov     esi, 3E9h; maxsize", "mov     rdi, p; s", "call    nstrftime", "test    s, s", "jz      loc_AE50"], ["mov~rcx,rbp", "mov~esi,0", "mov~rdi,p", "call~FOO", "test~s,s", "jz~FOO"]], [0, 0, 25, 0, 0, 3, 0, 1, 22, 4, 0.01420762336255294, ["lea     rdx, long_time_format", "mov     rdx, [rdx+recent*8]", "jmp     loc_AC22"], ["lea~rdx,<TAG>", "mov~rdx,<TAG>", "jmp~FOO"]], [1, 0, 106, 0, 0, 2, 0, 1, 10, 10, 0.10282675071407467, ["cmp     cs:print_group, 0", "jnz     short loc_A850"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 10, 1, 0, 2, 0, 1, 24, -1, 0.00443218753077908, ["add     p, s", "jmp     loc_AE5B"], ["add~p,s", "jmp~FOO"]], [0, 0, 89, 0, 0, 4, 0, 1, 14, 11, 0.04821235102925244, ["mov     rax, cs:dired_pos", "lea     rax, [r12+rax+1]", "mov     cs:dired_pos, rax", "jmp     loc_A876"], ["mov~rax,<TAG>", "lea~rax,[r12+0]", "mov~<TAG>,rax", "jmp~FOO"]], [2, 0, 94, 1, 0, 3, 0, 1, 16, 12, 0.022357923766374473, ["sub     ebp, 1", "cmp     ebp, 0FFFFFFFFh", "jz      loc_AE2F"], ["sub~ebp,0", "cmp~ebp,0", "jz~FOO"]], [1, 0, 105, 0, 0, 2, 0, 1, 11, 9, 0.10386092780458978, ["cmp     cs:print_author, 0", "jz      loc_AE80"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 32, 0, 0, 3, 1, 0, 21, 6, 0.006599034768048853, ["xor     eax, eax", "cmp     edi, r9d", "jns     loc_ABF0"], ["xor~eax,eax", "cmp~edi,r9d", "jns~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 22, 7, 0.005417118093174431, ["mov     eax, 0", "jle     loc_B240"], ["mov~eax,0", "jle~FOO"]], [0, 0, 33, 0, 0, 3, 1, 1, 20, 6, 0.02043730916970356, ["xor     eax, eax", "cmp     six_months_ago, rdx", "jg      loc_ABF0"], ["xor~eax,eax", "cmp~six_months_ago,rdx", "jg~FOO"]], [0, 0, 34, 0, 1, 9, 0, 2, 19, 7, 0.04634098296070134, ["lea     rdi, current_time; ts", "call    gettime", "mov     rcx, cs:current_time.tv_sec", "mov     rdx, [rsp+1348h+when_timespec.tv_sec]", "mov     rdi, cs:current_time.tv_nsec", "mov     r9, [rsp+1348h+when_timespec.tv_nsec]", "lea     rsi, [rcx-0F0C2ACh]", "cmp     rsi, rdx", "jge     loc_B235"], ["lea~rdi,<TAG>", "call~FOO", "mov~rcx,<TAG>", "mov~rdx,[rsp+0]", "mov~rdi,<TAG>", "mov~r9,[rsp+0]", "lea~rsi,[rcx-0F0C2ACh]+0]", "cmp~rsi,rdx", "jge~FOO"]], [0, 0, 41, 0, 0, 4, 0, 1, 18, 8, 0.08953018812173742, ["mov     rcx, cs:current_time.tv_sec", "mov     rdx, [rsp+1348h+when_timespec.tv_sec]", "cmp     rcx, rdx", "jl      loc_B018"], ["mov~rcx,<TAG>", "mov~rdx,[rsp+0]", "cmp~rcx,rdx", "jl~FOO"]], [0, 0, 38, 0, 0, 2, 0, 1, 20, 8, 0.01792573623559539, ["cmp     edi, r9d", "js      loc_B018"], ["cmp~edi,r9d", "js~FOO"]], [6, 2, 44, 2, 3, 44, 7, 4, 15, 5, 0.1971830985915493, ["mov     edx, cs:major_device_number_width", "mov     eax, cs:minor_device_number_width", "lea     rsi, [rsp+1348h+hbuf]; buf", "mov     r12d, cs:file_size_width", "lea     eax, [rdx+rax+2]", "sub     r12d, eax", "mov     rax, [f+40h]", "movzx   edx, al", "shr     rax, 0Ch", "mov     rdi, rax", "xor     dil, dil", "or      edi, edx; i", "call    umaxtostr", "mov     r15, rax", "mov     rax, [f+40h]", "lea     rsi, [rsp+1348h+hbuf_0]; buf", "mov     r14d, cs:minor_device_number_width", "mov     rdi, rax", "shr     rax, 20h", "shr     rdi, 8", "mov     edx, edi", "mov     rdi, rax", "and     edx, 0FFFh", "and     edi, 0FFFFF000h", "or      edi, edx; i", "call    umaxtostr", "test    r12d, r12d", "mov     r8d, 0", "push    r15", "cmovns  r8d, r12d", "add     r8d, cs:major_device_number_width", "push    r14", "lea     rcx, unk_1E66D", "mov     r9, rax", "mov     esi, 1", "mov     rdi, p", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "xor     eax, eax", "call    ___sprintf_chk", "movsxd  rax, cs:file_size_width", "pop     rsi", "pop     rdi", "lea     blanks_width, [p+rax+1]", "jmp     loc_A93C"], ["mov~edx,<TAG>", "mov~eax,<TAG>", "lea~rsi,[rsp+0]", "mov~r12d,<TAG>", "lea~eax,[rdx+0]", "sub~r12d,eax", "mov~rax,[f+0]", "movzx~edx,al", "shr~rax,0", "mov~rdi,rax", "xor~dil,dil", "or~edi,edx", "call~FOO", "mov~r15,rax", "mov~rax,[f+0]", "lea~rsi,[rsp+0]", "mov~r14d,<TAG>", "mov~rdi,rax", "shr~rax,<STR>", "shr~rdi,0", "mov~edx,edi", "mov~rdi,rax", "and~edx,<STR>", "and~edi,0", "or~edi,edx", "call~FOO", "test~r12d,r12d", "mov~r8d,0", "push~r15", "cmovns~r8d,r12d", "add~r8d,<TAG>", "push~r14", "lea~rcx,<TAG>", "mov~r9,rax", "mov~esi,0", "mov~rdi,p", "mov~rdx,0", "xor~eax,eax", "call~FOO", "movsxd~rax,<TAG>", "pop~rsi", "pop~rdi", "lea~blanks_width,[p+0]", "jmp~FOO"]], [1, 1, 51, 0, 0, 4, 1, 1, 14, 6, 0.20388062641583768, ["mov     eax, [f+30h]", "and     eax, 0B000h", "cmp     eax, 2000h", "jz      loc_B0A8"], ["mov~eax,[f+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [0, 0, 102, 0, 0, 1, 0, 0, 12, 12, 0.002363833349748843, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 31, 0, 0, 1, 0, 1, 22, 7, 0.0006894513936767458, ["jmp     loc_B04C"], ["jmp~FOO"]], [1, 0, 28, 1, 0, 4, 0, 1, 22, 6, 0.0018385370498046557, ["mov     eax, r9d", "sub     eax, edi", "shr     eax, 1Fh", "jmp     loc_ABF0"], ["mov~eax,r9d", "sub~eax,edi", "shr~eax,0", "jmp~FOO"]], [0, 0, 35, 0, 0, 3, 0, 1, 21, 7, 0.013362224629830263, ["lea     rax, [rcx-0F0C2ACh]", "cmp     rax, rdx", "jl      loc_B065"], ["lea~rax,[rcx-0F0C2ACh]+0]", "cmp~rax,rdx", "jl~FOO"]], [1, 0, 29, 0, 0, 2, 0, 1, 21, 6, 0.0028562986309465183, ["mov     eax, 0", "jl      loc_ABF0"], ["mov~eax,0", "jl~FOO"]], [1, 0, 30, 0, 0, 3, 0, 1, 20, 6, 0.019550871663547745, ["cmp     rcx, rdx", "mov     eax, 1", "jg      loc_ABF0"], ["cmp~rcx,rdx", "mov~eax,0", "jg~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 18, 2, 0.03092681965921403, ["cmp     byte ptr [p], 0", "jnz     loc_B315"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 42, 0, 1, 7, 1, 2, 17, 3, 0.11326701467546539, ["lea     rbp, [rsp+1348h+when_local]", "mov     rdi, cs:localtz; tz", "lea     rsi, [rsp+1348h+when_timespec]; t", "mov     rdx, rbp; tm", "call    localtime_rz", "test    rax, rax", "jz      loc_AE50"], ["lea~rbp,[rsp+0]", "mov~rdi,<TAG>", "lea~rsi,[rsp+0]", "mov~rdx,rbp", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 130, 0, 0, 2, 0, 1, 5, 18, 0.0009849305623953512, ["cmp     eax, 2", "jnz     loc_B310"], ["cmp~eax,0", "jnz~FOO"]], [4, 0, 141, 0, 0, 12, 0, 1, 1, 19, 0.003471880232443613, ["mov     eax, [rdi+0A8h]", "lea     rdx, filetype_letter; \"?pcdb-lswd\"", "cmp     cs:any_has_acl, 0", "lea     r12, [rsp+1348h+modebuf]", "mov     r10d, 3F3Fh", "movzx   eax, byte ptr [rdx+rax]", "mov     [rsp+1348h+modebuf], al", "mov     rax, 3F3F3F3F3F3F3F3Fh", "mov     qword ptr [rsp+1348h+modebuf+1], rax", "mov     [r12+9], r10w", "mov     [rsp+1348h+modebuf+0Bh], 0", "jz      loc_A695"], ["mov~eax,[rdi+0]", "lea~rdx,<TAG>", "cmp~<TAG>,0", "lea~r12,[rsp+0]", "mov~r10d,0", "movzx~eax,<TAG>", "mov~[rsp+0],al", "mov~rax,0", "mov~[word ptr [rsp+0],rax", "mov~[r12+0],r10w", "mov~[rsp+0],0", "jz~FOO"]], [1, 1, 143, 1, 0, 13, 1, 1, 0, 20, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, f", "sub     rsp, 1318h", "mov     rax, fs:28h", "mov     [rsp+1348h+var_40], rax", "xor     eax, eax", "cmp     byte ptr [f+0B8h], 0", "jz      loc_AA18"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,f", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~[yte ptr [f+0],0", "jz~FOO"]], [0, 1, 9, 0, 0, 4, 0, 1, 19, -1, 0.009307593814636068, ["mov     ecx, 20h ; ' '", "lea     rbp, [r12+1]", "mov     [r12], cx", "jmp     loc_A991"], ["mov~ecx,<STR>", "lea~rbp,[r12+0]", "mov~<TAG>,cx", "jmp~FOO"]], [1, 0, 101, 2, 1, 7, 0, 2, 10, 11, 0.10021668472372698, ["mov     rsi, cs:stdout@@GLIBC_2_2_5; stream", "mov     rdi, r13; s", "sub     p, r13", "call    _fputs_unlocked", "add     cs:dired_pos, rbp", "cmp     cs:print_owner, 0", "jnz     loc_ADF0"], ["mov~rsi,<TAG>", "mov~rdi,r13", "sub~p,r13", "call~FOO", "add~<TAG>,rbp", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 102, 0, 0, 1, 0, 1, 13, 12, 0.002363833349748843, ["jmp     loc_A850"], ["jmp~FOO"]], [1, 0, 139, 0, 0, 3, 0, 1, 2, 19, 0.0005909583374372107, ["mov     eax, [f+0BCh]", "cmp     eax, 1", "jz      loc_AE70"], ["mov~eax,[f+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 141, 0, 1, 6, 0, 2, 1, 19, 0.003471880232443613, ["lea     r12, [rsp+1348h+modebuf]", "lea     f, [f+18h]; statp", "mov     rsi, r12; str", "call    filemodestring", "cmp     cs:any_has_acl, 0", "jnz     loc_AA6B"], ["lea~r12,[rsp+0]", "lea~f,[f+0]", "mov~rsi,r12", "call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 135, 0, 0, 2, 0, 1, 3, 18, 0.0032748941199645426, ["mov     [rsp+1348h+modebuf+0Ah], 2Eh ; '.'", "jmp     loc_A69D"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 137, 0, 0, 2, 0, 1, 3, 18, 0.003767359401162218, ["cmp     eax, 2", "jnz     loc_A69D"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 97, 0, 1, 5, 1, 2, 13, 14, 0.0024130798778686105, ["mov     edi, r14d; uid", "call    getuser", "test    rax, rax", "mov     r12, rax", "jnz     loc_AE9F"], ["mov~edi,r14d", "call~FOO", "test~rax,rax", "mov~r12,rax", "jnz~FOO"]], [1, 0, 103, 0, 0, 2, 0, 1, 12, 8, 0.1029252437703142, ["cmp     cs:print_scontext, 0", "jz      loc_A8A0"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 75, 0, 0, 2, 0, 1, 12, 9, 0.14375061558160152, ["cmp     cs:print_author, 0", "jnz     loc_AD38"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 76, 0, 0, 4, 0, 1, 15, 10, 0.041170097508125676, ["mov     rax, cs:dired_pos", "lea     rax, [r12+rax+1]", "mov     cs:dired_pos, rax", "jmp     loc_A883"], ["mov~rax,<TAG>", "lea~rax,[r12+0]", "mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 88, 0, 0, 2, 0, 1, 11, 10, 0.13030631340490495, ["cmp     cs:print_group, 0", "jnz     loc_AD90"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 115, 1, 0, 6, 1, 1, 10, 15, 0.02905545159066286, ["add     blocks, 1", "movzx   eax, byte ptr [blocks-1]", "lea     rbp, [p+1]", "test    al, al", "mov     [p-1], al", "jnz     loc_AC90"], ["add~blocks,0", "movzx~eax,[yte ptr [blocks-1]+0]", "lea~rbp,[p+0]", "test~al,al", "mov~[p-1]+0],al", "jnz~FOO"]], [0, 0, 115, 0, 0, 2, 0, 1, 9, 16, 0.009603072983354674, ["mov     rdx, p", "jmp     loc_A7B1"], ["mov~rdx,p", "jmp~FOO"]], [0, 1, 115, 0, 1, 8, 0, 1, 9, 16, 0.009603072983354674, ["lea     edx, [pad-1]", "mov     esi, 20h ; ' '; c", "mov     rdi, p; s", "movsxd  rdx, edx", "lea     pad, [rdx+1]", "mov     rdx, r14; n", "call    _memset", "lea     rdx, [p+pad+0]"], ["lea~edx,[pad-1]+0]", "mov~esi,<STR>", "mov~rdi,p", "movsxd~rdx,edx", "lea~pad,[rdx+0]", "mov~rdx,r14", "call~FOO", "lea~rdx,[p+0]"]], [2, 0, 135, 0, 0, 4, 0, 1, 4, 18, 0.0004924652811976756, ["mov     eax, cs:time_type_0", "mov     [rsp+1348h+modebuf+0Ah], 2Bh ; '+'", "cmp     eax, 1", "jnz     loc_A6AC"], ["mov~eax,<TAG>", "mov~[rsp+0],0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 135, 0, 0, 1, 0, 0, 2, 18, 0.019944843888505863, ["mov     [rsp+1348h+modebuf+0Ah], 0"], ["mov~[rsp+0],0"]], [2, 0, 122, 0, 1, 9, 1, 1, 6, 17, 0.019600118191667487, ["lea     r13, [rsp+1348h+buf]", "mov     r8d, cs:inode_number_width", "lea     rcx, aS; \"%*s \"", "mov     edx, 0E3Bh", "mov     esi, 1", "xor     eax, eax", "mov     rdi, p", "mov     rbp, p", "call    ___sprintf_chk"], ["lea~r13,[rsp+0]", "mov~r8d,<TAG>", "lea~rcx,<TAG>", "mov~edx,0", "mov~esi,0", "xor~eax,eax", "mov~rdi,p", "mov~rbp,p", "call~FOO"]], [0, 0, 125, 0, 0, 3, 1, 1, 5, 18, 0.003939722249581405, ["test    dl, dl", "lea     r9, s; \"?\"", "jz      short loc_A6F1"], ["test~dl,dl", "lea~r9,<TAG>", "jz~FOO"]], [0, 0, 95, 0, 0, 1, 0, 0, 12, 16, 0.010588003545750025, ["lea     r12, s; \"?\""], ["lea~r12,<TAG>"]], [1, 0, 62, 0, 0, 3, 0, 1, 13, 8, 0.1405495912538166, ["cmp     cs:print_scontext, 0", "mov     rbp, r13", "jnz     loc_ACA0"], ["cmp~<TAG>,0", "mov~rbp,r13", "jnz~FOO"]], [0, 0, 63, 0, 0, 4, 0, 1, 16, 9, 0.03412784398699892, ["mov     rax, cs:dired_pos", "lea     rax, [r12+rax+1]", "mov     cs:dired_pos, rax", "jmp     loc_A890"], ["mov~rax,<TAG>", "lea~rax,[r12+0]", "mov~<TAG>,rax", "jmp~FOO"]], [0, 1, 117, 0, 1, 8, 0, 2, 8, 18, 0.0, ["mov     rdi, [f+58h]; n", "mov     r8, cs:output_block_size; to_block_size", "lea     rsi, [rsp+1348h+hbuf]; buf", "mov     edx, cs:human_output_opts; opts", "mov     ecx, 200h; from_block_size", "call    human_readable", "mov     r15, rax", "jmp     loc_A774"], ["mov~rdi,[f+0]", "mov~r8,<TAG>", "lea~rsi,[rsp+0]", "mov~edx,<TAG>", "mov~ecx,<STR>", "call~FOO", "mov~r15,rax", "jmp~FOO"]], [0, 0, 118, 0, 0, 3, 1, 1, 7, 18, 0.0070915000492465284, ["test    dl, dl", "lea     r15, s; \"?\"", "jnz     loc_B078"], ["test~dl,dl", "lea~r15,<TAG>", "jnz~FOO"]], [0, 0, 78, 0, 0, 1, 0, 1, 15, 12, 0.0038412291933418697, ["jmp     loc_ADB4"], ["jmp~FOO"]], [1, 0, 134, 0, 0, 3, 0, 1, 3, 17, 0.04594701073574313, ["mov     eax, cs:time_type_0", "cmp     eax, 1", "jz      loc_AAA0"], ["mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 53, 0, 0, 2, 0, 1, 13, 7, 0.23229587314094358, ["cmp     byte ptr [f+0B8h], 0", "jz      loc_AAF0"], ["cmp~[yte ptr [f+0],0", "jz~FOO"]], [0, 0, 54, 0, 0, 5, 0, 1, 16, 8, 0.018615187629272136, ["mov     rax, cs:dired_pos", "mov     rbp, r13", "lea     rax, [r12+rax+1]", "mov     cs:dired_pos, rax", "jmp     loc_A8A0"], ["mov~rax,<TAG>", "mov~rbp,r13", "lea~rax,[r12+0]", "mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 132, 0, 0, 1, 0, 0, 4, 18, 0.00221609376538954, ["jb      loc_AAD8"], ["jb~FOO"]], [1, 0, 127, 0, 0, 5, 0, 1, 4, 16, 0.0625430907121048, ["cmp     cs:print_inode, 0", "movzx   edx, byte ptr [f+0B8h]", "movdqu  xmm0, xmmword ptr [f+80h]", "movaps  xmmword ptr [rsp+1348h+when_timespec.tv_sec], xmm0", "jnz     loc_A6D9"], ["cmp~<TAG>,0", "movzx~edx,[yte ptr [f+0]", "movdqu~xmm0,[mmword ptr [f+0]", "movaps~[mmword ptr [rsp+0],xmm0", "jnz~FOO"]], [0, 0, 128, 0, 0, 1, 0, 0, 5, 17, 0.0063035555993302475, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 8, 2, 2, 14, 1, 3, 19, -1, 0.052792278144390824, ["mov     rsi, cs:stdout@@GLIBC_2_2_5; stream", "mov     rdi, r13; s", "sub     p, r13", "call    _fputs_unlocked", "lea     rdx, dired_obstack; stack", "xor     esi, esi; symlink_target", "mov     rcx, rbp; start_col", "mov     rdi, f; f", "add     cs:dired_pos, rbp", "call    print_name_with_quoting", "mov     edx, [f+0A8h]; type", "mov     r12, rax", "cmp     edx, 6", "jz      loc_AB10"], ["mov~rsi,<TAG>", "mov~rdi,r13", "sub~p,r13", "call~FOO", "lea~rdx,<TAG>", "xor~esi,esi", "mov~rcx,rbp", "mov~rdi,f", "add~<TAG>,rbp", "call~FOO", "mov~edx,[f+0]", "mov~r12,rax", "cmp~edx,0", "jz~FOO"]], [2, 0, 9, 0, 2, 10, 1, 2, 18, -1, 0.04919728159164779, ["lea     rcx, aS; \"%*s \"", "mov     r9, rbp", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "mov     rdi, p", "xor     eax, eax", "call    ___sprintf_chk", "mov     rdi, p; s", "call    _strlen", "lea     rbp, [p+rax]"], ["lea~rcx,<TAG>", "mov~r9,rbp", "mov~rdx,0", "mov~esi,0", "mov~rdi,p", "xor~eax,eax", "call~FOO", "mov~rdi,p", "call~FOO", "lea~rbp,<TAG>"]], [0, 0, 71, 0, 1, 5, 1, 2, 15, 12, 0.003693489608982567, ["mov     edi, r14d; uid", "call    getuser", "test    rax, rax", "mov     r12, rax", "jnz     loc_AF8F"], ["mov~edi,r14d", "call~FOO", "test~rax,rax", "mov~r12,rax", "jnz~FOO"]], [1, 0, 72, 0, 0, 3, 0, 1, 14, 11, 0.016694573032601204, ["cmp     cs:numeric_ids, 0", "mov     r14d, [f+34h]", "jz      loc_B2B0"], ["cmp~<TAG>,0", "mov~r14d,[f+0]", "jz~FOO"]], [0, 0, 128, 0, 0, 2, 0, 0, 6, 17, 0.0063035555993302475, ["movdqu  xmm0, xmmword ptr [f+60h]", "movaps  xmmword ptr [rsp+1348h+when_timespec.tv_sec], xmm0"], ["movdqu~xmm0,[mmword ptr [f+0]", "movaps~[mmword ptr [rsp+0],xmm0"]], [0, 0, 65, 0, 0, 1, 0, 1, 16, 11, 0.0032010243277848915, ["jmp     loc_AD5C"], ["jmp~FOO"]], [0, 1, 112, 0, 0, 2, 0, 0, 11, 14, 0.0330936668964838, ["mov     byte ptr [rdx], 20h ; ' '", "movzx   edx, byte ptr [f+0B8h]"], ["mov~<TAG>,<STR>", "movzx~edx,[yte ptr [f+0]"]], [0, 0, 120, 0, 0, 3, 0, 1, 5, 15, 0.09455333398995372, ["lea     r13, [rsp+1348h+buf]", "mov     rbp, p", "jmp     loc_A75C"], ["lea~r13,[rsp+0]", "mov~rbp,p", "jmp~FOO"]], [1, 0, 127, 0, 0, 3, 0, 1, 6, 16, 0.02501723628484192, ["cmp     cs:print_inode, 0", "movzx   edx, byte ptr [f+0B8h]", "jz      loc_AAC1"], ["cmp~<TAG>,0", "movzx~edx,[yte ptr [f+0]", "jz~FOO"]], [1, 0, 94, 2, 3, 14, 1, 4, 13, 15, 0.01349354870481631, ["xor     esi, esi; flags", "mov     rdi, r12; string", "call    gnu_mbswidth", "mov     rsi, cs:stdout@@GLIBC_2_2_5; stream", "sub     ebp, eax", "mov     eax, 0", "cmovs   ebp, eax", "mov     rdi, r12; s", "call    _fputs_unlocked", "mov     rdi, r12; s", "movsxd  r12, ebp", "call    _strlen", "add     r12, rax", "jmp     short loc_AEEF"], ["xor~esi,esi", "mov~rdi,r12", "call~FOO", "mov~rsi,<TAG>", "sub~ebp,eax", "mov~eax,0", "cmovs~ebp,eax", "mov~rdi,r12", "call~FOO", "mov~rdi,r12", "movsxd~r12,ebp", "call~FOO", "add~r12,rax", "jmp~FOO"]], [0, 0, 128, 0, 0, 3, 0, 1, 5, 17, 0.006746774352408155, ["movdqu  xmm0, xmmword ptr [f+70h]", "movaps  xmmword ptr [rsp+1348h+when_timespec.tv_sec], xmm0", "jmp     loc_A6C5"], ["movdqu~xmm0,[mmword ptr [f+0]", "movaps~[mmword ptr [rsp+0],xmm0", "jmp~FOO"]], [0, 1, 94, 0, 0, 3, 0, 0, 15, 13, 0.007830197971043042, ["lea     rdx, [rcx+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rcx], 20h ; ' '"], ["lea~rdx,[rcx+0]", "mov~[rdi+0],rdx", "mov~<TAG>,<STR>"]], [0, 0, 94, 0, 0, 4, 0, 0, 14, 14, 0.016005121638924456, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rcx, [rdi+28h]", "cmp     rcx, [rdi+30h]", "jb      short loc_AED8"], ["mov~rdi,<TAG>", "mov~rcx,[rdi+0]", "cmp~rcx,[rdi+0]", "jb~FOO"]], [0, 1, 68, 0, 0, 3, 0, 0, 17, 11, 0.006549788239929085, ["lea     rdx, [rcx+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rcx], 20h ; ' '"], ["lea~rdx,[rcx+0]", "mov~[rdi+0],rdx", "mov~<TAG>,<STR>"]], [0, 0, 68, 0, 0, 4, 0, 0, 16, 12, 0.017285531370038413, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rcx, [rdi+28h]", "cmp     rcx, [rdi+30h]", "jb      short loc_AFC8"], ["mov~rdi,<TAG>", "mov~rcx,[rdi+0]", "cmp~rcx,[rdi+0]", "jb~FOO"]], [1, 0, 49, 0, 1, 7, 0, 1, 15, 8, 0.0002462326405988378, ["mov     rdi, [f+48h]; n", "mov     r8, cs:file_output_block_size; to_block_size", "lea     rsi, [rsp+1348h+hbuf]; buf", "mov     edx, cs:file_human_output_opts; opts", "mov     ecx, 1; from_block_size", "call    human_readable", "mov     r14, rax"], ["mov~rdi,[f+0]", "mov~r8,<TAG>", "lea~rsi,[rsp+0]", "mov~edx,<TAG>", "mov~ecx,0", "call~FOO", "mov~r14,rax"]], [1, 0, 59, 2, 3, 14, 1, 3, 15, 12, 0.01615286122328376, ["xor     esi, esi; flags", "mov     rdi, r12; string", "call    gnu_mbswidth", "mov     rsi, cs:stdout@@GLIBC_2_2_5; stream", "sub     ebp, eax", "mov     eax, 0", "cmovs   ebp, eax", "mov     rdi, r12; s", "call    _fputs_unlocked", "mov     rdi, r12; s", "movsxd  r12, ebp", "call    _strlen", "add     r12, rax", "nop     word ptr [rax+rax+00000000h]"], ["xor~esi,esi", "mov~rdi,r12", "call~FOO", "mov~rsi,<TAG>", "sub~ebp,eax", "mov~eax,0", "cmovs~ebp,eax", "mov~rdi,r12", "call~FOO", "mov~rdi,r12", "movsxd~r12,ebp", "call~FOO", "add~r12,rax", "nop~[ord ptr [rax+0]"]], [0, 1, 94, 0, 1, 3, 0, 2, 15, 13, 0.007830197971043042, ["mov     esi, 20h ; ' '; int", "call    ___overflow", "jmp     short loc_AEE3"], ["mov~esi,<STR>", "call~FOO", "jmp~FOO"]], [0, 0, 49, 0, 0, 2, 0, 1, 14, 8, 0.0221609376538954, ["lea     r14, s; \"?\"", "jmp     loc_A8E6"], ["lea~r14,<TAG>", "jmp~FOO"]], [0, 0, 48, 1, 1, 7, 2, 2, 15, 7, 0.022653402935093075, ["mov     r12d, cs:file_size_width", "xor     esi, esi; flags", "mov     rdi, size; string", "call    gnu_mbswidth", "sub     r12d, eax", "test    r12d, r12d", "jle     short loc_A91E"], ["mov~r12d,<TAG>", "xor~esi,esi", "mov~rdi,size", "call~FOO", "sub~r12d,eax", "test~r12d,r12d", "jle~FOO"]], [0, 0, 59, 0, 0, 4, 0, 0, 16, 11, 0.015167930660888408, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rdx, [rdi+28h]", "cmp     rdx, [rdi+30h]", "jnb     loc_B170"], ["mov~rdi,<TAG>", "mov~rdx,[rdi+0]", "cmp~rdx,[rdi+0]", "jnb~FOO"]], [2, 0, 59, 1, 0, 3, 0, 1, 18, 9, 0.011031222298827933, ["sub     ebp, 1", "cmp     ebp, 0FFFFFFFFh", "jnz     short loc_ACF0"], ["sub~ebp,0", "cmp~ebp,0", "jnz~FOO"]], [0, 0, 47, 0, 0, 2, 0, 1, 17, 7, 0.0, ["mov     rbp, p", "jmp     loc_A91E"], ["mov~rbp,p", "jmp~FOO"]], [1, 0, 47, 1, 0, 6, 1, 1, 16, 6, 0.020240323057224466, ["add     size, 1", "movzx   eax, byte ptr [size-1]", "lea     r12, [p+1]", "test    al, al", "mov     [p-1], al", "jnz     loc_AB00"], ["add~size,0", "movzx~eax,[yte ptr [size-1]+0]", "lea~r12,[p+0]", "test~al,al", "mov~[p-1]+0],al", "jnz~FOO"]], [1, 0, 14, 0, 1, 8, 2, 2, 20, -1, 0.007485472274204669, ["lea     r14, [rsp+1348h+hbuf]", "xor     r9d, r9d; ns", "mov     rcx, r15; tp", "mov     esi, 3E9h; maxsize", "mov     rdi, r14; s", "call    nstrftime", "test    rax, rax", "jnz     loc_B2F0"], ["lea~r14,[rsp+0]", "xor~r9d,r9d", "mov~rcx,r15", "mov~esi,0", "mov~rdi,r14", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 22, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 1, 59, 0, 0, 3, 0, 0, 17, 10, 0.004776913227617453, ["lea     rcx, [rdx+1]", "mov     [rdi+28h], rcx", "mov     byte ptr [rdx], 20h ; ' '"], ["lea~rcx,[rdx+0]", "mov~[rdi+0],rcx", "mov~<TAG>,<STR>"]], [0, 0, 82, 0, 0, 1, 0, 0, 13, 15, 0.013789027873534917, ["lea     r12, s; \"?\""], ["lea~r12,<TAG>"]], [1, 0, 87, 0, 0, 3, 0, 1, 12, 13, 0.029794149512459372, ["cmp     byte ptr [f+0B8h], 0", "mov     ebp, cs:group_width", "jz      loc_AF10"], ["cmp~[yte ptr [f+0],0", "mov~ebp,<TAG>", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 20, -1, 0.02326898453659017, ["cmp     qword ptr [f+8], 0", "jz      loc_A9E9"], ["cmp~[word ptr [f+0],0", "jz~FOO"]], [0, 1, 59, 0, 1, 3, 0, 2, 17, 10, 0.004776913227617453, ["mov     esi, 20h ; ' '; int", "call    ___overflow", "jmp     loc_AD10"], ["mov~esi,<STR>", "call~FOO", "jmp~FOO"]], [1, 1, 47, 2, 1, 8, 0, 1, 16, 7, 0.0, ["lea     r12d, [pad-1]", "mov     rdi, p; s", "mov     esi, 20h ; ' '; c", "movsxd  r12, r12d", "add     r12, 1", "mov     rdx, pad; n", "add     p, pad", "call    _memset"], ["lea~r12d,[pad-1]+0]", "mov~rdi,p", "mov~esi,<STR>", "movsxd~r12,r12d", "add~r12,0", "mov~rdx,pad", "add~p,pad", "call~FOO"]], [1, 0, 20, 0, 0, 3, 0, 1, 19, 1, 0.01575888899832562, ["cmp     byte ptr [f+0B8h], 0", "lea     rbp, s; \"?\"", "jz      loc_A955"], ["cmp~[yte ptr [f+0],0", "lea~rbp,<TAG>", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 6, 14, 0.13478774746380381, ["cmp     cs:print_block_size, 0", "jz      short loc_A7D3"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 122, 1, 0, 7, 2, 1, 7, 16, 0.02462326405988378, ["mov     eax, [rbp+0]", "add     rbp, 4", "lea     edx, [rax-1010101h]", "not     eax", "and     edx, eax", "and     edx, 80808080h", "jz      short loc_A71E"], ["mov~eax,[rbp+0]", "add~rbp,0", "lea~edx,[rax-1010101h]+0]", "not~eax", "and~edx,eax", "and~edx,0", "jz~FOO"]], [0, 1, 44, 0, 0, 1, 0, 0, 17, 5, 0.013001083423618635, ["mov     byte ptr [rbp+0], 20h ; ' '"], ["mov~[yte ptr [rbp+0],<STR>"]], [0, 0, 19, 0, 1, 5, 0, 2, 20, 0, 0.0, ["mov     rdi, [rsp+1348h+when_timespec.tv_sec]; i", "lea     rsi, [rsp+1348h+hbuf_0]; buf", "call    imaxtostr", "mov     rbp, rax", "jmp     loc_A955"], ["mov~rdi,[rsp+0]", "lea~rsi,[rsp+0]", "call~FOO", "mov~rbp,rax", "jmp~FOO"]], [1, 0, 74, 0, 0, 3, 0, 1, 13, 12, 0.03683640303358613, ["cmp     byte ptr [f+0B8h], 0", "mov     ebp, cs:author_width", "jz      loc_AF88"], ["cmp~[yte ptr [f+0],0", "mov~ebp,<TAG>", "jz~FOO"]], [1, 0, 81, 2, 3, 14, 1, 4, 14, 14, 0.015414163301487246, ["xor     esi, esi; flags", "mov     rdi, r12; string", "call    gnu_mbswidth", "mov     rsi, cs:stdout@@GLIBC_2_2_5; stream", "sub     ebp, eax", "mov     eax, 0", "cmovs   ebp, eax", "mov     rdi, r12; s", "call    _fputs_unlocked", "mov     rdi, r12; s", "movsxd  r12, ebp", "call    _strlen", "add     r12, rax", "jmp     short loc_AF67"], ["xor~esi,esi", "mov~rdi,r12", "call~FOO", "mov~rsi,<TAG>", "sub~ebp,eax", "mov~eax,0", "cmovs~ebp,eax", "mov~rdi,r12", "call~FOO", "mov~rdi,r12", "movsxd~r12,ebp", "call~FOO", "add~r12,rax", "jmp~FOO"]], [2, 0, 43, 0, 0, 4, 0, 1, 16, 4, 0.2096424702058505, ["mov     byte ptr [p], 1", "cmp     byte ptr [f+0B8h], 0", "lea     rbp, s; \"?\"", "jnz     loc_AB80"], ["mov~<TAG>,0", "cmp~[yte ptr [f+0],0", "lea~rbp,<TAG>", "jnz~FOO"]], [1, 0, 15, 2, 0, 5, 0, 1, 20, -1, 0.0, ["movsxd  rdx, [rsp+1348h+tm.tm_mon]", "lea     rax, abformat", "shl     rdx, 7", "add     rdx, rax", "jmp     loc_B1D2"], ["movsxd~rdx,[rsp+0]", "lea~rax,<TAG>", "shl~rdx,0", "add~rdx,rax", "jmp~FOO"]], [1, 0, 16, 0, 0, 4, 0, 1, 19, -1, 0.018319708460553533, ["cmp     cs:use_abformat, 0", "mov     r8, cs:localtz; tz", "mov     rdx, cs:long_time_format; format", "jnz     loc_B2D0"], ["cmp~<TAG>,0", "mov~r8,<TAG>", "mov~rdx,<TAG>", "jnz~FOO"]], [3, 0, 120, 1, 0, 10, 1, 0, 8, 15, 0.029547916871860536, ["mov     eax, edx", "shr     eax, 10h", "test    edx, 8080h", "cmovz   edx, eax", "lea     rax, [rbp+2]", "cmovz   rbp, rax", "mov     eax, edx", "add     al, dl", "movzx   edx, byte ptr [f+0B8h]", "sbb     rbp, 3"], ["mov~eax,edx", "shr~eax,0", "test~edx,0", "cmovz~edx,eax", "lea~rax,[rbp+0]", "cmovz~rbp,rax", "mov~eax,edx", "add~al,dl", "movzx~edx,[yte ptr [f+0]", "sbb~rbp,0"]], [4, 0, 4, 1, 2, 14, 2, 3, 21, -1, 0.0066975278242883875, ["mov     rcx, cs:stdout@@GLIBC_2_2_5; stream", "lea     rdi, asc_1E677; \" -> \"", "mov     edx, 4; n", "mov     esi, 1; size", "call    _fwrite_unlocked", "lea     rcx, [rbp+w+4]; start_col", "xor     edx, edx; stack", "mov     esi, 1; symlink_target", "mov     rdi, f; f", "add     cs:dired_pos, 4", "call    print_name_with_quoting", "mov     edx, cs:indicator_style_0", "test    edx, edx", "jz      loc_A9E9"], ["mov~rcx,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "mov~esi,0", "call~FOO", "lea~rcx,[rbp+0]", "xor~edx,edx", "mov~esi,0", "mov~rdi,f", "add~<TAG>,0", "call~FOO", "mov~edx,<TAG>", "test~edx,edx", "jz~FOO"]], [0, 0, 18, 0, 0, 3, 1, 1, 17, -1, 0.09928100068945139, ["mov     r8d, cs:width_10774", "test    r8d, r8d", "js      loc_B190"], ["mov~r8d,<TAG>", "test~r8d,r8d", "js~FOO"]], [2, 0, 81, 1, 0, 3, 0, 1, 17, 11, 0.01915689943858958, ["sub     ebp, 1", "cmp     ebp, 0FFFFFFFFh", "jz      loc_ADCF"], ["sub~ebp,0", "cmp~ebp,0", "jz~FOO"]], [0, 1, 81, 0, 1, 3, 0, 2, 16, 12, 0.007189993105486064, ["mov     esi, 20h ; ' '; int", "call    ___overflow", "jmp     short loc_AF5B"], ["mov~esi,<STR>", "call~FOO", "jmp~FOO"]], [0, 1, 81, 0, 0, 3, 0, 0, 16, 12, 0.007189993105486064, ["lea     rdx, [rcx+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rcx], 20h ; ' '"], ["lea~rdx,[rcx+0]", "mov~[rdi+0],rdx", "mov~<TAG>,<STR>"]], [1, 0, 64, 0, 1, 7, 1, 1, 15, 10, 0.01595587511080469, ["lea     rsi, aLu; \"%*lu \"", "mov     ecx, r14d", "mov     edx, ebp", "mov     edi, 1", "xor     eax, eax", "movsxd  r12, ebp", "call    ___printf_chk"], ["lea~rsi,<TAG>", "mov~ecx,r14d", "mov~edx,ebp", "mov~edi,0", "xor~eax,eax", "movsxd~r12,ebp", "call~FOO"]], [0, 0, 116, 1, 1, 7, 2, 2, 8, 17, 0.01615286122328376, ["mov     r14d, cs:block_size_width", "xor     esi, esi; flags", "mov     rdi, blocks; string", "call    gnu_mbswidth", "sub     r14d, eax", "test    r14d, r14d", "jle     loc_AC90"], ["mov~r14d,<TAG>", "xor~esi,esi", "mov~rdi,blocks", "call~FOO", "sub~r14d,eax", "test~r14d,r14d", "jle~FOO"]], [1, 0, 3, 0, 1, 5, 1, 2, 22, -1, 0.0, ["mov     esi, [f+0ACh]; mode", "xor     edx, edx; type", "mov     edi, 1; stat_ok", "call    print_type_indicator", "jmp     loc_A9E9"], ["mov~esi,[f+0]", "xor~edx,edx", "mov~edi,0", "call~FOO", "jmp~FOO"]], [0, 0, 81, 0, 0, 4, 0, 0, 15, 13, 0.016645326504481434, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rcx, [rdi+28h]", "cmp     rcx, [rdi+30h]", "jb      short loc_AF50"], ["mov~rdi,<TAG>", "mov~rcx,[rdi+0]", "cmp~rcx,[rdi+0]", "jb~FOO"]], [1, 0, 17, 0, 1, 8, 1, 2, 18, -1, 0.04240126071111987, ["lea     r15, [rsp+1348h+tm]", "mov     rdi, cs:localtz; tz", "lea     rsi, [rsp+1348h+t]; t", "mov     [rsp+1348h+t], 0", "mov     rdx, r15; tm", "call    localtime_rz", "test    rax, rax", "jz      short loc_B1F6"], ["lea~r15,[rsp+0]", "mov~rdi,<TAG>", "lea~rsi,[rsp+0]", "mov~[rsp+0],0", "mov~rdx,r15", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 69, 0, 0, 1, 0, 0, 14, 14, 0.016990052201319807, ["lea     r12, s; \"?\""], ["lea~r12,<TAG>"]], [2, 0, 68, 1, 0, 3, 0, 1, 18, 10, 0.01595587511080469, ["sub     ebp, 1", "cmp     ebp, 0FFFFFFFFh", "jz      loc_AD77"], ["sub~ebp,0", "cmp~ebp,0", "jz~FOO"]], [1, 0, 68, 2, 3, 14, 1, 4, 15, 13, 0.017334777898158182, ["xor     esi, esi; flags", "mov     rdi, r12; string", "call    gnu_mbswidth", "mov     rsi, cs:stdout@@GLIBC_2_2_5; stream", "sub     ebp, eax", "mov     eax, 0", "cmovs   ebp, eax", "mov     rdi, r12; s", "call    _fputs_unlocked", "mov     rdi, r12; s", "movsxd  r12, ebp", "call    _strlen", "add     r12, rax", "jmp     short loc_AFDF"], ["xor~esi,esi", "mov~rdi,r12", "call~FOO", "mov~rsi,<TAG>", "sub~ebp,eax", "mov~eax,0", "cmovs~ebp,eax", "mov~rdi,r12", "call~FOO", "mov~rdi,r12", "movsxd~r12,ebp", "call~FOO", "add~r12,rax", "jmp~FOO"]], [1, 0, 77, 0, 1, 7, 1, 1, 14, 11, 0.017876489707475622, ["lea     rsi, aLu; \"%*lu \"", "mov     ecx, r14d", "mov     edx, ebp", "mov     edi, 1", "xor     eax, eax", "movsxd  r12, ebp", "call    ___printf_chk"], ["lea~rsi,<TAG>", "mov~ecx,r14d", "mov~edx,ebp", "mov~edi,0", "xor~eax,eax", "movsxd~r12,ebp", "call~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 20, -1, 0.01662070324042155, ["mov     eax, cs:indicator_style_0", "test    eax, eax", "jz      short loc_A9E9"], ["mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 1, 68, 0, 1, 3, 0, 2, 17, 11, 0.006549788239929085, ["mov     esi, 20h ; ' '; int", "call    ___overflow", "jmp     short loc_AFD3"], ["mov~esi,<STR>", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 1, 3, 0, 1, 21, -1, 0.0, ["movzx   edi, byte ptr [f+0B8h]; stat_ok", "mov     esi, [f+30h]; mode", "call    print_type_indicator"], ["movzx~edi,[yte ptr [f+0]", "mov~esi,[f+0]", "call~FOO"]], [0, 0, 28, 0, 0, 1, 0, 0, 23, 6, 0.0006894513936767458, ["nop     dword ptr [recent]"], ["nop~<TAG>"]]], "func_feature": [57, 55, 164, 1, 144, 218, 1, 670, 0.03091, 44, 39], "succs": [[11, 84], [0], [0], [79], [99, 3], [59, 19], [5, 71], [69], [69, 7], [], [9, 108], [84], [121, 76], [139, 12], [25], [26, 14], [24, 23], [16], [16, 17], [29], [19], [34, 15], [21, 37], [27, 53], [23], [28, 46], [25], [53, 31], [52], [63], [29, 95], [40, 60], [41, 15], [32, 143], [32, 15], [34, 45], [35, 22], [43, 35], [122], [98, 38], [53], [45], [15], [33, 42], [42, 15], [44, 15], [115, 52], [36, 46], [], [48, 87], [68, 55], [56, 50], [83], [6, 63], [53], [57, 58], [68, 55], [77], [67, 77], [92, 20], [78, 54], [72, 120], [61], [61, 111], [89, 65], [64], [64], [80, 82], [77], [117], [8, 69], [92], [4, 78], [72], [132], [74, 132], [139], [80, 81], [101, 39], [78], [49, 93], [90, 70], [81], [112, 140], [83], [88, 138], [131, 85], [91], [131], [18], [116], [90, 70], [95], [91], [30], [100, 94], [137], [96, 141], [102], [103], [30], [102], [114, 106], [113, 109], [79, 103], [106], [105, 118], [1, 2], [], [104], [121], [13, 110], [10, 126], [104], [106], [127, 119], [18, 75], [117, 125], [122], [127], [136, 86], [134], [47, 127], [107], [107, 123], [116], [10, 133], [84, 135], [62, 134], [128], [128], [73], [65, 66], [10], [129, 130], [2, 124], [138], [73, 97], [97], [62], [10, 142], [137], [10], [15]], "fname": "print_long_format", "n_num": 144}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 14, 0, 0, 3, 0, 1, 0, 0, 0.010350877192982456, ["cmp     rax, 1", "mov     rsi, cs:stru_2270A0.string", "jz      short loc_B778"], ["cmp~rax,0", "mov~rsi,<TAG>", "jz~FOO"]], [0, 0, 14, 0, 0, 3, 1, 1, 5, -1, 0.01175438596491228, ["mov     rax, cs:stru_2270A0.len", "test    rax, rax", "jz      short loc_B720"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 1, 1, 0, 8, 0, 1, 3, -1, 0.0010526315789473684, ["add     rsp, 38h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "jmp     print_with_separator"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "jmp~FOO"]], [0, 1, 2, 0, 0, 2, 0, 1, 3, -1, 0.0007017543859649122, ["mov     edi, 20h ; ' '", "jmp     loc_B4F5"], ["mov~edi,<STR>", "jmp~FOO"]], [1, 0, 2, 0, 0, 1, 0, 0, 2, -1, 0.0007017543859649122, ["mov     edi, 2Ch ; ','; jumptable 000000000000B37F case 4"], ["mov~edi,0"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [1, 0, 14, 0, 0, 2, 0, 1, 7, -1, 0.005350877192982456, ["cmp     rax, 2", "jnz     short loc_B77D"], ["cmp~rax,0", "jnz~FOO"]], [0, 0, 21, 0, 0, 2, 0, 0, 11, -1, 0.014035087719298244, ["cmp     rsi, r8", "jnb     loc_B840"], ["cmp~rsi,r8", "jnb~FOO"]], [0, 0, 21, 2, 0, 9, 2, 0, 10, -1, 0.01543859649122807, ["xor     edx, edx", "mov     rax, rbp", "div     rcx", "xor     edx, edx", "mov     r9, rax", "mov     rax, r12", "div     rcx", "cmp     r9, rax", "jbe     loc_B7B0"], ["xor~edx,edx", "mov~rax,rbp", "div~,rcx", "xor~edx,edx", "mov~r9,rax", "mov~rax,r12", "div~,rcx", "cmp~r9,rax", "jbe~FOO"]], [0, 0, 21, 3, 0, 8, 1, 1, 13, -1, 0.012456140350877193, ["mov     rax, rbx", "xor     edx, edx", "div     rcx", "add     rcx, rbx", "sub     rcx, rdx", "mov     rbx, rcx", "cmp     rbp, rbx", "ja      short loc_B645"], ["mov~rax,rbx", "xor~edx,edx", "div~,rcx", "add~rcx,rbx", "sub~rcx,rdx", "mov~rbx,rcx", "cmp~rbp,rbx", "ja~FOO"]], [1, 0, 21, 0, 1, 4, 0, 2, 12, -1, 0.004736842105263157, ["mov     esi, 9; int", "call    ___overflow", "mov     rcx, cs:tabsize", "jmp     loc_B698"], ["mov~esi,0", "call~FOO", "mov~rcx,<TAG>", "jmp~FOO"]], [1, 0, 21, 0, 0, 3, 0, 0, 12, -1, 0.004736842105263157, ["lea     rax, [rsi+1]", "mov     [rdi+28h], rax", "mov     byte ptr [rsi], 9"], ["lea~rax,[rsi+0]", "mov~[rdi+0],rax", "mov~<TAG>,0"]], [1, 0, 76, 0, 0, 2, 0, 1, 0, 5, 0.0, ["cmp     cs:format_0, 4; switch 5 cases", "ja      locret_B870; jumptable 000000000000B37F default case"], ["cmp~<TAG>,0", "ja~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 6, -1, 0.00017543859649122806, ["jmp     loc_B55F"], ["jmp~FOO"]], [2, 0, 5, 1, 1, 5, 0, 2, 5, -1, 0.0010526315789473684, ["mov     esi, 0Ah; int", "add     i, 1", "call    ___overflow", "cmp     cs:cwd_n_used, i", "ja      loc_B520"], ["mov~esi,0", "add~i,0", "call~FOO", "cmp~<TAG>,i", "ja~FOO"]], [0, 0, 23, 0, 0, 4, 0, 0, 6, 4, 0.010175438596491228, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_B903"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [0, 0, 23, 1, 0, 6, 2, 1, 5, 5, 0.03725146198830409, ["xor     edx, edx", "mov     rax, r13", "div     rbp", "test    rdx, rdx", "mov     r15, rdx", "jz      short loc_B400"], ["xor~edx,edx", "mov~rax,r13", "div~,rbp", "test~rdx,rdx", "mov~r15,rdx", "jz~FOO"]], [1, 0, 28, 0, 0, 2, 0, 1, 2, 3, 0.008596491228070175, ["cmp     cs:line_length, 0; jumptable 000000000000B37F case 3", "jz      loc_B860"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 74, 2, 0, 12, 0, 1, 1, 4, 0.012982456140350877, ["push    r15", "push    r14", "lea     rdx, off_1CF24", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 38h", "mov     eax, cs:format_0", "movsxd  rax, dword ptr [rdx+rax*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["push~r15", "push~r14", "lea~rdx,<TAG>", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~eax,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [0, 0, 21, 0, 0, 2, 0, 1, 12, -1, 0.01087719298245614, ["mov     rbx, r12", "jmp     loc_B640"], ["mov~rbx,r12", "jmp~FOO"]], [0, 1, 21, 0, 1, 3, 0, 2, 11, -1, 0.003947368421052632, ["mov     esi, 20h ; ' '; int", "call    ___overflow", "jmp     short loc_B7C0"], ["mov~esi,<STR>", "call~FOO", "jmp~FOO"]], [0, 1, 21, 0, 0, 3, 0, 0, 11, -1, 0.003947368421052632, ["lea     rax, [rsi+1]", "mov     [rdi+28h], rax", "mov     byte ptr [rsi], 20h ; ' '"], ["lea~rax,[rsi+0]", "mov~[rdi+0],rax", "mov~<TAG>,<STR>"]], [2, 0, 14, 0, 0, 7, 1, 1, 8, -1, 0.0022807017543859647, ["mov     ecx, 2", "mov     rdi, rbp", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     short loc_B77D"], ["mov~ecx,0", "mov~rdi,rbp", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [0, 0, 23, 0, 0, 7, 1, 1, 8, 8, 0.03046783625730994, ["mov     rcx, cs:tabsize", "mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "lea     r8, [rbx+1]", "test    rcx, rcx", "mov     rsi, [rdi+28h]", "mov     r9, [rdi+30h]", "jz      loc_B7E0"], ["mov~rcx,<TAG>", "mov~rdi,<TAG>", "lea~r8,[rbx+0]", "test~rcx,rcx", "mov~rsi,[rdi+0]", "mov~r9,[rdi+0]", "jz~FOO"]], [0, 0, 23, 3, 0, 8, 1, 1, 12, 4, 0.014035087719298244, ["mov     rax, rbx", "xor     edx, edx", "div     rcx", "add     rcx, rbx", "sub     rcx, rdx", "mov     rbx, rcx", "cmp     r14, rbx", "ja      short loc_B47D"], ["mov~rax,rbx", "xor~edx,edx", "div~,rcx", "add~rcx,rbx", "sub~rcx,rdx", "mov~rbx,rcx", "cmp~r14,rbx", "ja~FOO"]], [0, 0, 23, 0, 0, 2, 0, 0, 7, 4, 0.03964912280701754, ["cmp     r14, rbx", "jbe     short loc_B4E6"], ["cmp~r14,rbx", "jbe~FOO"]], [0, 0, 14, 0, 0, 1, 0, 0, 9, -1, 0.0009649122807017543, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 5, 0, 0, 1, 0, 0, 3, -1, 0.002105263157894737, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 6, 0, 0, 3, 1, 1, 2, -1, 0.0019298245614035087, ["xor     ebx, ebx; jumptable 000000000000B37F case 1", "cmp     cs:cwd_n_used, 0", "jz      short loc_B55F"], ["xor~ebx,ebx", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 23, 0, 0, 4, 1, 0, 7, 3, 0.003157894736842105, ["lea     rdx, [rax+1]", "xor     ebx, ebx", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "xor~ebx,ebx", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [0, 0, 14, 0, 1, 7, 0, 1, 5, -1, 0.01649122807017544, ["mov     rax, cs:sorted_file", "mov     rdi, [rax+i*8]; f", "call    print_long_format", "mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_B892"], ["mov~rax,<TAG>", "mov~rdi,<TAG>", "call~FOO", "mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 4, -1, 0.017894736842105262, ["cmp     cs:print_with_color, 0", "jz      short loc_B720"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 7, -1, 0.0023684210526315787, ["cmp     byte ptr [rsi], 30h ; '0'", "jz      short loc_B720"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 14, 0, 3, 7, 0, 4, 8, -1, 0.002719298245614035, ["lea     rdi, color_indicator; ind", "call    put_indicator", "lea     rdi, stru_2270A0; ind", "call    put_indicator", "lea     rdi, ind; ind", "call    put_indicator", "jmp     loc_B720"], ["lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []], [2, 0, 1, 1, 0, 9, 0, 1, 5, 0, 0.004210526315789474, ["add     rsp, 38h", "mov     esi, 0Ah; int", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "jmp     ___overflow"], ["add~rsp,0", "mov~esi,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "jmp~FOO"]], [0, 1, 23, 0, 1, 5, 0, 2, 10, 6, 0.00435672514619883, ["mov     esi, 20h ; ' '; int", "mov     [rsp+68h+var_60], r8", "call    ___overflow", "mov     r8, [rsp+68h+var_60]", "jmp     loc_B7F4"], ["mov~esi,<STR>", "mov~[rsp+0],r8", "call~FOO", "mov~r8,[rsp+0]", "jmp~FOO"]], [0, 0, 23, 0, 0, 2, 0, 0, 9, 7, 0.012573099415204675, ["cmp     rsi, r9", "jnb     loc_B8DB"], ["cmp~rsi,r9", "jnb~FOO"]], [1, 0, 23, 0, 1, 4, 0, 2, 11, 5, 0.005087719298245614, ["mov     esi, 9; int", "call    ___overflow", "mov     rcx, cs:tabsize", "jmp     loc_B4D0"], ["mov~esi,0", "call~FOO", "mov~rcx,<TAG>", "jmp~FOO"]], [0, 0, 23, 0, 0, 2, 0, 0, 10, 6, 0.014035087719298244, ["cmp     rsi, r9", "jnb     loc_B914"], ["cmp~rsi,r9", "jnb~FOO"]], [0, 0, 21, 1, 2, 14, 0, 2, 6, -1, 0.05035087719298245, ["mov     rax, cs:sorted_file", "mov     r12, [rax+r15]", "mov     rdi, r12; f", "call    length_of_file_name_and_frills", "mov     rdx, [rsp+68h+var_50]", "mov     [rsp+68h+var_60], rax", "mov     rsi, rbx; start_col", "mov     rdi, r12; f", "mov     rax, [rdx+10h]", "mov     rbp, [rax+r14]", "call    print_file_name_and_frills", "add     r13, [rsp+68h+var_58]", "cmp     r13, cs:cwd_n_used", "jnb     loc_B800"], ["mov~rax,<TAG>", "mov~r12,<TAG>", "mov~rdi,r12", "call~FOO", "mov~rdx,[rsp+0]", "mov~[rsp+0],rax", "mov~rsi,rbx", "mov~rdi,r12", "mov~rax,[rdx+0]", "mov~rbp,<TAG>", "call~FOO", "add~r13,[rsp+0]", "cmp~r13,<TAG>", "jnb~FOO"]], [1, 0, 21, 2, 0, 4, 0, 1, 9, -1, 0.019473684210526313, ["add     r15, [rsp+68h+var_48]", "add     r14, 8", "mov     rbx, rbp", "jmp     loc_B5F0"], ["add~r15,[rsp+0]", "add~r14,0", "mov~rbx,rbp", "jmp~FOO"]], [0, 0, 21, 0, 0, 5, 2, 0, 5, -1, 0.02789473684210526, ["mov     r13, [rsp+68h+var_40]", "xor     r14d, r14d", "xor     ebx, ebx", "lea     r15, ds:0[r13*8]", "nop     word ptr [rax+rax+00h]"], ["mov~r13,[rsp+0]", "xor~r14d,r14d", "xor~ebx,ebx", "lea~r15,<TAG>", "nop~[ord ptr [rax+0]"]], [1, 0, 21, 0, 0, 3, 0, 0, 8, -1, 0.007719298245614035, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [0, 0, 21, 0, 0, 4, 0, 0, 7, -1, 0.019999999999999997, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_B8F4"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [1, 0, 21, 1, 0, 4, 0, 1, 9, -1, 0.018421052631578946, ["add     [rsp+68h+var_40], 1", "mov     rax, [rsp+68h+var_40]", "cmp     [rsp+68h+var_58], rax", "jnz     loc_B5D8"], ["add~[rsp+0],0", "mov~rax,[rsp+0]", "cmp~[rsp+0],rax", "jnz~FOO"]], [1, 0, 21, 0, 1, 3, 0, 2, 8, -1, 0.007719298245614035, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     loc_B820"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 7, -1, 0.002105263157894737, ["jmp     loc_B55F"], ["jmp~FOO"]], [3, 0, 14, 2, 1, 6, 0, 2, 6, -1, 0.007894736842105263, ["mov     esi, 0Ah; int", "add     i, 1", "call    ___overflow", "add     cs:dired_pos, 1", "cmp     cs:cwd_n_used, i", "ja      loc_B6E0"], ["mov~esi,0", "add~i,0", "call~FOO", "add~<TAG>,0", "cmp~<TAG>,i", "ja~FOO"]], [0, 0, 23, 2, 0, 9, 2, 0, 9, 7, 0.014912280701754385, ["xor     edx, edx", "mov     rax, r14", "div     rcx", "xor     edx, edx", "mov     r10, rax", "mov     rax, r8", "div     rcx", "cmp     r10, rax", "jbe     loc_B7E0"], ["xor~edx,edx", "mov~rax,r14", "div~,rcx", "xor~edx,edx", "mov~r10,rax", "mov~rax,r8", "div~,rcx", "cmp~r10,rax", "jbe~FOO"]], [0, 0, 21, 2, 0, 3, 0, 0, 7, -1, 0.025789473684210525, ["add     rbp, rbx", "add     rbx, [rsp+68h+var_60]", "nop     word ptr [rax+rax+00h]"], ["add~rbp,rbx", "add~rbx,[rsp+0]", "nop~[ord ptr [rax+0]"]], [0, 0, 5, 0, 1, 8, 1, 1, 4, -1, 0.002807017543859649, ["mov     rax, cs:sorted_file", "xor     esi, esi; start_col", "mov     rdi, [rax+i*8]; f", "call    print_file_name_and_frills", "mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_B872"], ["mov~rax,<TAG>", "xor~esi,esi", "mov~rdi,<TAG>", "call~FOO", "mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn; jumptable 000000000000B37F default case"], ["retn"]], [1, 0, 22, 2, 1, 16, 2, 2, 3, -1, 0.011228070175438596, ["mov     edi, 1; by_columns", "call    calculate_columns", "lea     rdx, [rax+rax*2]", "mov     rcx, rax", "mov     rax, cs:column_info_0", "lea     rax, [rax+rdx*8-18h]", "xor     edx, edx", "mov     [rsp+68h+var_50], rax", "mov     rax, cs:cwd_n_used", "div     rcx", "test    rdx, rdx", "setnz   dl", "movzx   edx, dl", "add     rdx, rax", "mov     [rsp+68h+var_58], rdx", "jz      short loc_B55F"], ["mov~edi,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~rax,<TAG>", "lea~rax,[rax+0]", "xor~edx,edx", "mov~[rsp+0],rax", "mov~rax,<TAG>", "div~,rcx", "test~rdx,rdx", "setnz~dl", "movzx~edx,dl", "add~rdx,rax", "mov~[rsp+0],rdx", "jz~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 2, -1, 0.007894736842105263, ["cmp     cs:line_length, 0; jumptable 000000000000B37F case 2", "jz      loc_B860"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 5, 1, 0, 6, 0, 1, 5, -1, 0.0003508771929824561, ["add     i, 1", "cmp     cs:cwd_n_used, rbx", "lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah", "ja      short loc_B520"], ["add~i,0", "cmp~<TAG>,rbx", "lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0", "ja~FOO"]], [0, 0, 21, 0, 0, 2, 0, 0, 8, -1, 0.03964912280701754, ["cmp     rbp, rbx", "jbe     short loc_B6AE"], ["cmp~rbp,rbx", "jbe~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 10, -1, 0.003508771929824561, ["jmp     loc_B55F"], ["jmp~FOO"]], [0, 0, 4, 0, 0, 4, 0, 0, 4, 1, 0.015789473684210527, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_B92A"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [1, 0, 24, 0, 3, 18, 2, 3, 3, 2, 0.012280701754385963, ["xor     edi, edi; by_columns", "call    calculate_columns", "lea     rdx, [rax+rax*2]", "mov     rbp, rax", "mov     rax, cs:column_info_0", "lea     r12, [rax+rdx*8-18h]", "mov     rax, cs:sorted_file", "mov     rbx, [rax]", "mov     rdi, rbx; f", "call    length_of_file_name_and_frills", "mov     [rsp+68h+var_60], rax", "mov     rax, [r12+10h]", "xor     esi, esi; start_col", "mov     rdi, rbx; f", "mov     r14, [rax]", "call    print_file_name_and_frills", "cmp     cs:cwd_n_used, 1", "jbe     loc_B8BA"], ["xor~edi,edi", "call~FOO", "lea~rdx,<TAG>", "mov~rbp,rax", "mov~rax,<TAG>", "lea~r12,[rax+0]", "mov~rax,<TAG>", "mov~rbx,<TAG>", "mov~rdi,rbx", "call~FOO", "mov~[rsp+0],rax", "mov~rax,[r12+0]", "xor~esi,esi", "mov~rdi,rbx", "mov~r14,<TAG>", "call~FOO", "cmp~<TAG>,0", "jbe~FOO"]], [1, 0, 23, 1, 2, 13, 0, 2, 8, 2, 0.03725146198830409, ["mov     rax, cs:sorted_file", "mov     rsi, rbx; start_col", "mov     r14, [rax+r13*8]", "add     r13, 1", "mov     rdi, r14; f", "call    print_file_name_and_frills", "mov     rdi, r14; f", "call    length_of_file_name_and_frills", "cmp     r13, cs:cwd_n_used", "mov     rcx, rax", "mov     rax, [r12+10h]", "mov     r14, [rax+r15*8]", "jnb     loc_B8BA"], ["mov~rax,<TAG>", "mov~rsi,rbx", "mov~r14,<TAG>", "add~r13,0", "mov~rdi,r14", "call~FOO", "mov~rdi,r14", "call~FOO", "cmp~r13,<TAG>", "mov~rcx,rax", "mov~rax,[r12+0]", "mov~r14,<TAG>", "jnb~FOO"]], [0, 0, 23, 0, 0, 2, 0, 1, 11, 5, 0.012573099415204679, ["mov     rbx, r8", "jmp     loc_B478"], ["mov~rbx,r8", "jmp~FOO"]], [0, 1, 23, 0, 0, 3, 0, 0, 10, 6, 0.00435672514619883, ["lea     rax, [rsi+1]", "mov     [rdi+28h], rax", "mov     byte ptr [rsi], 20h ; ' '"], ["lea~rax,[rsi+0]", "mov~[rdi+0],rax", "mov~<TAG>,<STR>"]], [1, 0, 23, 0, 0, 3, 0, 0, 11, 5, 0.005087719298245614, ["lea     rax, [rsi+1]", "mov     [rdi+28h], rax", "mov     byte ptr [rsi], 9"], ["lea~rax,[rsi+0]", "mov~[rdi+0],rax", "mov~<TAG>,0"]], [3, 0, 14, 2, 0, 7, 0, 1, 6, -1, 0.005964912280701754, ["lea     rdx, [rax+1]", "add     i, 1", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah", "add     cs:dired_pos, 1", "cmp     cs:cwd_n_used, i", "ja      loc_B6E0"], ["lea~rdx,[rax+0]", "add~i,0", "mov~[rdi+0],rdx", "mov~<TAG>,0", "add~<TAG>,0", "cmp~<TAG>,i", "ja~FOO"]], [0, 0, 14, 0, 0, 1, 0, 0, 3, -1, 0.006842105263157894, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 21, 0, 0, 4, 0, 0, 4, -1, 0.014035087719298244, ["lea     rax, ds:0[rdx*8]", "mov     [rsp+68h+var_40], 0", "mov     [rsp+68h+var_48], rax", "nop     dword ptr [rax]"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],rax", "nop~<TAG>"]], [1, 0, 1, 0, 0, 4, 0, 1, 5, -1, 0.0038596491228070173, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah", "jmp     loc_B55F"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 23, 0, 0, 2, 0, 1, 8, 3, 0.023216374269005843, ["mov     rbx, r14", "jmp     loc_B422"], ["mov~rbx,r14", "jmp~FOO"]], [1, 0, 23, 0, 1, 4, 1, 2, 7, 3, 0.003157894736842105, ["mov     esi, 0Ah; int", "xor     ebx, ebx", "call    ___overflow", "jmp     loc_B422"], ["mov~esi,0", "xor~ebx,ebx", "call~FOO", "jmp~FOO"]], [0, 0, 21, 0, 0, 2, 0, 0, 10, -1, 0.012456140350877193, ["cmp     rsi, r8", "jnb     short loc_B7D0"], ["cmp~rsi,r8", "jnb~FOO"]], [0, 0, 21, 0, 0, 7, 1, 1, 9, -1, 0.031578947368421054, ["mov     rcx, cs:tabsize", "mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "lea     r12, [rbx+1]", "test    rcx, rcx", "mov     rsi, [rdi+28h]", "mov     r8, [rdi+30h]", "jz      loc_B7B0"], ["mov~rcx,<TAG>", "mov~rdi,<TAG>", "lea~r12,[rbx+0]", "test~rcx,rcx", "mov~rsi,[rdi+0]", "mov~r8,[rdi+0]", "jz~FOO"]], [1, 0, 15, 0, 0, 4, 1, 1, 2, -1, 0.005087719298245614, ["xor     ebx, ebx; jumptable 000000000000B37F case 0", "cmp     cs:cwd_n_used, 0", "lea     rbp, a00; \"00\"", "jz      loc_B55F"], ["xor~ebx,ebx", "cmp~<TAG>,0", "lea~rbp,<TAG>", "jz~FOO"]], [1, 0, 23, 0, 0, 4, 1, 1, 4, 6, 0.01263157894736842, ["xor     ebx, ebx", "mov     r13d, 1", "mov     rcx, [rsp+68h+var_60]", "jmp     short loc_B45D"], ["xor~ebx,ebx", "mov~r13d,0", "mov~rcx,[rsp+0]", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 38h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 23, 2, 0, 3, 0, 0, 6, 5, 0.023216374269005843, ["add     r14, rbx", "add     rbx, rcx", "nop     dword ptr [rax+rax+00h]"], ["add~r14,rbx", "add~rbx,rcx", "nop~[word ptr [rax+0]"]], [1, 0, 0, 1, 0, 8, 0, 0, 7, -1, 0.0, ["add     rsp, 38h", "pop     i", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~i", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [21, 24, 63, 5, 77, 114, 3, 351, 0.01093, 15, 34], "succs": [[32, 6], [0, 30], [5], [2], [2], [], [33, 22], [10, 11], [70, 7], [41, 71], [9], [9], [18, 52], [74], [51, 13], [29, 69], [75, 15], [3, 59], [72, 17, 28, 54, 4], [56], [19], [19], [33, 26], [49, 37], [68, 23], [68, 23], [30], [51], [74, 27], [60], [64, 48], [1, 30], [33, 30], [30], [], [34], [61], [36, 62], [24], [38, 63], [50, 44], [40], [40], [45], [43, 46], [57, 42], [45], [74], [31, 47], [37, 39], [56], [14, 55], [], [66, 74], [3, 53], [74, 51], [41, 71], [74], [67, 35], [73, 58], [16, 58], [25], [61], [24], [76, 31], [31], [42], [74], [60], [60], [20, 21], [8, 70], [65, 74], [16], [], [25], []], "fname": "print_current_files", "n_num": 77}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 135, 0, 0, 3, 0, 1, 0, 0, 0.09419887292388236, ["cmp     cs:dereference, 5", "mov     r12, name", "jz      loc_C6D8"], ["cmp~<TAG>,0", "mov~r12,name", "jz~FOO"]], [1, 0, 173, 0, 0, 5, 0, 1, 5, 16, 0.11304396282706354, ["movzx   edx, byte ptr [name]", "lea     rax, [f+18h]", "mov     [rbp+stat_buf], rax", "cmp     dl, 2Fh ; '/'", "jnz     loc_C128"], ["movzx~edx,<TAG>", "lea~rax,[f+0]", "mov~[rbp+0],rax", "cmp~dl,0", "jnz~FOO"]], [0, 0, 55, 0, 0, 3, 1, 1, 15, -1, 0.1603683001268818, ["test    r15d, r15d", "mov     r12, [f+58h]", "jz      short loc_BC0F"], ["test~r15d,r15d", "mov~r12,[f+0]", "jz~FOO"]], [1, 0, 56, 0, 0, 2, 0, 1, 14, -1, 0.08650252048969514, ["mov     dword ptr [f+0A8h], 6", "jmp     loc_BBFD"], ["mov~[word ptr [f+0],0", "jmp~FOO"]], [1, 0, 56, 0, 0, 3, 0, 1, 16, -1, 0.00048009327526490864, ["mov     dword ptr [f+0A8h], 9", "mov     r15d, r13d", "jmp     loc_BBFD"], ["mov~[word ptr [f+0],0", "mov~r15d,r13d", "jmp~FOO"]], [1, 0, 56, 0, 0, 3, 0, 1, 15, -1, 0.0014402798257947258, ["mov     dword ptr [f+0A8h], 3", "mov     r15d, r13d", "jmp     loc_BBFD"], ["mov~[word ptr [f+0],0", "mov~r15d,r13d", "jmp~FOO"]], [1, 0, 56, 0, 0, 2, 0, 0, 14, -1, 0.07113953568121807, ["mov     dword ptr [f+0A8h], 5", "mov     r15d, r13d"], ["mov~[word ptr [f+0],0", "mov~r15d,r13d"]], [2, 0, 142, 0, 0, 4, 0, 0, 8, 14, 0.005192437387835352, ["mov     r15d, cs:dereference", "mov     cs:exit_status, 2", "cmp     r15d, 3", "jb      loc_BE10"], ["mov~r15d,<TAG>", "mov~<TAG>,0", "cmp~r15d,0", "jb~FOO"]], [3, 0, 148, 0, 4, 18, 3, 5, 7, 15, 0.009824765954528308, ["lea     rsi, aErrorCanonical; \"error canonicalizing %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, full_name; arg", "mov     edi, 4; s", "mov     [rbp+format], rax", "call    quotearg_style", "mov     dirname, rax", "call    ___errno_location", "mov     rdx, [rbp+format]; format", "mov     esi, [rax]; errnum", "xor     edi, edi; status", "xor     eax, eax", "mov     rcx, r15", "call    _error", "cmp     byte ptr [rbp+var_384], 0", "jz      loc_C9BF"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,full_name", "mov~edi,0", "mov~[rbp+0],rax", "call~FOO", "mov~dirname,rax", "call~FOO", "mov~rdx,[rbp+0]", "mov~esi,<TAG>", "xor~edi,edi", "xor~eax,eax", "mov~rcx,r15", "call~FOO", "cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [0, 0, 131, 0, 0, 1, 0, 0, 7, 14, 0.09256084039184756, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 70, 0, 0, 2, 0, 1, 19, 3, 0.016700387503857893, ["cmp     cs:indicator_style_0, 1", "ja      short loc_C450"], ["cmp~<TAG>,0", "ja~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 20, 4, 0.0018260690648468846, ["mov     dword ptr [f+0C4h], 0FFFFFFFFh", "jmp     loc_C401"], ["mov~[word ptr [f+0],0", "jmp~FOO"]], [0, 0, 71, 0, 0, 1, 0, 1, 21, 4, 0.0006086896882822949, ["jmp     loc_C401"], ["jmp~FOO"]], [0, 0, 75, 0, 0, 3, 1, 1, 18, 4, 0.024073248516854703, ["mov     ecx, [f+0C4h]", "test    ecx, ecx", "jz      loc_C920"], ["mov~ecx,[f+0]", "test~ecx,ecx", "jz~FOO"]], [1, 0, 47, 0, 0, 3, 0, 1, 19, -1, 0.02196426734336957, ["cmp     cs:numeric_ids, 0", "mov     r15d, [f+34h]", "jz      loc_C890"], ["cmp~<TAG>,0", "mov~r15d,[f+0]", "jz~FOO"]], [1, 0, 48, 0, 0, 2, 0, 1, 18, -1, 0.08118720208497651, ["cmp     cs:print_owner, 0", "jnz     loc_C600"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 54, 0, 0, 2, 0, 1, 16, -1, 0.0605946298137924, ["cmp     cs:print_block_size, 0", "jz      short loc_BC80"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 141, 0, 0, 2, 0, 1, 9, 15, 0.0017117611421647637, ["cmp     r15d, 4", "ja      loc_BB1A"], ["cmp~r15d,0", "ja~FOO"]], [1, 0, 69, 0, 0, 2, 0, 1, 20, 3, 0.002777682521175543, ["cmp     cs:check_symlink_mode, 0", "jnz     short loc_C450"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 66, 0, 0, 1, 0, 0, 21, 2, 0.0005658242172764995, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 138, 0, 0, 1, 0, 1, 10, 15, 0.0003300641267446247, ["jmp     loc_BF1D"], ["jmp~FOO"]], [3, 0, 24, 2, 0, 10, 1, 0, 24, -1, 0.000823017043311272, ["mov     ecx, edx", "shr     ecx, 10h", "test    edx, 8080h", "cmovz   edx, ecx", "lea     rcx, [rax+2]", "mov     esi, edx", "cmovz   rax, rcx", "add     sil, dl", "sbb     rax, 3", "sub     eax, r13d"], ["mov~ecx,edx", "shr~ecx,0", "test~edx,0", "cmovz~edx,ecx", "lea~rcx,[rax+0]", "mov~esi,edx", "cmovz~rax,rcx", "add~sil,dl", "sbb~rax,0", "sub~eax,r13d"]], [2, 0, 26, 1, 0, 7, 2, 1, 23, -1, 0.003909330955728541, ["mov     ecx, [rax]", "add     rax, 4", "lea     edx, [rcx-1010101h]", "not     ecx", "and     edx, ecx", "and     edx, 80808080h", "jz      short loc_C522"], ["mov~ecx,<TAG>", "add~rax,0", "lea~edx,[rcx-1010101h]+0]", "not~ecx", "and~edx,ecx", "and~edx,0", "jz~FOO"]], [1, 0, 96, 0, 0, 3, 1, 0, 17, 10, 0.009361818867665718, ["test    eax, eax", "mov     dword ptr [f+0BCh], 0", "jns     short loc_CA4D"], ["test~eax,eax", "mov~[word ptr [f+0],0", "jns~FOO"]], [1, 0, 98, 0, 0, 2, 0, 1, 16, 11, 0.004149377593360996, ["cmp     edx, 5Fh ; '_'", "jnz     short loc_CA0B"], ["cmp~edx,0", "jnz~FOO"]], [0, 0, 97, 0, 0, 2, 0, 0, 16, 11, 0.004149377593360996, ["mov     rdx, [f+18h]", "mov     cs:unsupported_device_10320, rdx"], ["mov~rdx,[f+0]", "mov~<TAG>,rdx"]], [1, 0, 99, 0, 0, 4, 1, 1, 15, 12, 0.011059291519495217, ["mov     edx, [r8]", "lea     ecx, [rdx-16h]", "and     ecx, 0FFFFFFEFh", "jz      short loc_CA00"], ["mov~edx,<TAG>", "lea~ecx,[rdx-16h]+0]", "and~ecx,0", "jz~FOO"]], [2, 0, 233, 0, 1, 10, 0, 2, 3, 20, 0.000411508521655636, ["mov     r8, cs:filename_quoting_options; o", "lea     rdi, [rbp+buf]; buffer", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, name; arg", "mov     esi, 2; buffersize", "call    quotearg_buffer", "mov     r12, rax", "movzx   eax, [rbp+buf]", "cmp     [name], al", "jz      loc_C6B0"], ["mov~r8,<TAG>", "lea~rdi,[rbp+0]", "mov~rcx,0", "mov~rdx,name", "mov~esi,0", "call~FOO", "mov~r12,rax", "movzx~eax,[rbp+0]", "cmp~<TAG>,al", "jz~FOO"]], [1, 0, 234, 0, 0, 2, 0, 1, 2, 19, 0.00048009327526490864, ["cmp     cs:align_variable_outer_quotes, 0", "jnz     loc_C1F0"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 130, 0, 1, 6, 1, 2, 7, 13, 0.21791090840506155, ["mov     rdx, [rbp+stat_buf]; stat_buf", "mov     rsi, r12; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jz      loc_BB40"], ["mov~rdx,[rbp+0]", "mov~rsi,r12", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 142, 0, 0, 3, 0, 0, 6, 14, 0.1086062434987369, ["mov     r15d, cs:dereference", "cmp     r15d, 3", "jb      loc_BE10"], ["mov~r15d,<TAG>", "cmp~r15d,0", "jb~FOO"]], [1, 0, 133, 0, 0, 2, 0, 1, 8, 14, 0.004193386143593613, ["cmp     r15d, 5", "jnz     loc_BE10"], ["cmp~r15d,0", "jnz~FOO"]], [1, 0, 138, 0, 0, 2, 0, 1, 8, 14, 0.01022741561217608, ["cmp     byte ptr [rbp+var_384], 0", "jz      loc_BE10"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [0, 0, 131, 0, 0, 1, 0, 1, 12, 14, 1.7146188402318165e-05, ["jmp     loc_BE10"], ["jmp~FOO"]], [1, 0, 132, 0, 1, 4, 0, 2, 11, 14, 0.0028291210863824975, ["call    ___errno_location", "cmp     dword ptr [rax], 2", "mov     r15, rax", "jz      loc_BE10"], ["call~FOO", "cmp~<TAG>,0", "mov~r15,rax", "jz~FOO"]], [2, 0, 134, 0, 0, 3, 0, 1, 8, 14, 0.003765017203342364, ["cmp     eax, 5", "mov     cs:exit_status, 1", "jnz     loc_BE10"], ["cmp~eax,0", "mov~<TAG>,0", "jnz~FOO"]], [1, 0, 134, 0, 0, 2, 0, 1, 8, 14, 0.003765017203342364, ["cmp     eax, 5", "jnz     loc_BE10"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 211, 0, 0, 3, 0, 1, 9, 18, 0.008076426277105265, ["cmp     rax, 1", "mov     rsi, cs:off_227188", "jz      loc_CAC6"], ["cmp~rax,0", "mov~rsi,<TAG>", "jz~FOO"]], [0, 0, 212, 0, 0, 3, 1, 1, 8, 19, 0.010896974269286604, ["mov     rax, qword ptr cs:unk_227180", "test    rax, rax", "jz      short loc_C832"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [2, 0, 207, 0, 0, 7, 1, 1, 11, 17, 0.0011145022461506809, ["lea     rdi, a00; \"00\"", "mov     ecx, 2", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_BDE0"], ["lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [1, 0, 208, 0, 0, 2, 0, 1, 10, 17, 0.007973549146691359, ["cmp     rax, 2", "jnz     loc_BDE0"], ["cmp~rax,0", "jnz~FOO"]], [2, 0, 65, 0, 1, 6, 1, 2, 19, 1, 0.03196049518192106, ["mov     rdi, r15; ptr", "call    free", "mov     eax, [f+30h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_CAEE"], ["mov~rdi,r15", "call~FOO", "mov~eax,[f+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 67, 0, 1, 6, 1, 2, 20, 2, 0.010150543534172354, ["lea     rdx, [rbp+linkstats]; stat_buf", "mov     rsi, r15; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jnz     short loc_C418"], ["lea~rdx,[rbp+0]", "mov~rsi,r15", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 66, 0, 0, 4, 0, 1, 21, 2, 0.0, ["mov     eax, [rbp+linkstats.st_mode]", "mov     byte ptr [f+0B9h], 1", "mov     [f+0ACh], eax", "jmp     short loc_C418"], ["mov~eax,[rbp+0]", "mov~[yte ptr [f+0],0", "mov~[f+0],eax", "jmp~FOO"]], [0, 0, 66, 0, 0, 2, 1, 1, 18, 2, 0.022375775865025205, ["xor     r15d, r15d", "jmp     loc_C418"], ["xor~r15d,r15d", "jmp~FOO"]], [2, 0, 44, 0, 1, 8, 1, 1, 20, -1, 0.0063440897088577215, ["lea     rcx, aLu_0+1; \"%lu\"", "mov     r8d, r15d", "mov     edx, 15h", "mov     esi, 1", "mov     rdi, r13", "xor     eax, eax", "call    ___sprintf_chk", "mov     rax, r13"], ["lea~rcx,<TAG>", "mov~r8d,r15d", "mov~edx,0", "mov~esi,0", "mov~rdi,r13", "xor~eax,eax", "call~FOO", "mov~rax,r13"]], [0, 0, 46, 0, 1, 5, 1, 2, 20, -1, 0.010150543534172354, ["mov     edi, r15d; uid", "call    getuser", "test    rax, rax", "mov     rdi, rax; string", "jz      loc_C611"], ["mov~edi,r15d", "call~FOO", "test~rax,rax", "mov~rdi,rax", "jz~FOO"]], [0, 0, 8, 0, 1, 2, 0, 1, 8, -1, 0.01195089331641576, ["call    ___errno_location", "mov     r15, rax"], ["call~FOO", "mov~r15,rax"]], [0, 0, 130, 0, 0, 2, 1, 1, 9, 13, 0.01664894893865094, ["test    eax, eax", "jnz     loc_BE2C"], ["test~eax,eax", "jnz~FOO"]], [0, 0, 57, 0, 0, 1, 0, 0, 20, -1, 0.024433318473303385, ["mov     r15d, cs:format_0"], ["mov~r15d,<TAG>"]], [2, 0, 230, 0, 0, 3, 0, 1, 4, 19, 0.005915434998799767, ["mov     dword ptr [f+0C4h], 1", "mov     cs:cwd_some_quoted, 1", "jmp     loc_BA51"], ["mov~[word ptr [f+0],0", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 232, 0, 1, 4, 0, 2, 4, 20, 0.00015431569562086349, ["mov     rdi, name; s", "call    _strlen", "cmp     r12, rax", "jnz     loc_C224"], ["mov~rdi,name", "call~FOO", "cmp~r12,rax", "jnz~FOO"]], [1, 0, 90, 0, 0, 2, 0, 1, 13, 7, 0.12329824080106992, ["cmp     cs:check_symlink_mode, 0", "jz      loc_C43B"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 91, 0, 0, 4, 1, 1, 12, 8, 0.19316895854051644, ["mov     eax, [f+30h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_C358"], ["mov~eax,[f+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 91, 0, 0, 1, 0, 0, 17, 8, 0.0013716950721854532, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 206, 0, 0, 3, 1, 1, 9, 19, 0.012010904975823874, ["mov     rax, qword ptr cs:unk_2271A0", "test    rax, rax", "jz      loc_BA82"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 207, 0, 0, 1, 0, 1, 11, 20, 0.0009773327389321353, ["jmp     loc_C832"], ["jmp~FOO"]], [1, 0, 111, 0, 0, 2, 0, 1, 15, 11, 0.005709680737971949, ["mov     byte ptr [f+0C0h], 0", "jmp     loc_BB66"], ["mov~[yte ptr [f+0],0", "jmp~FOO"]], [1, 0, 112, 0, 0, 2, 0, 1, 14, 12, 0.00196323857206543, ["mov     dword ptr [rax], 5Fh ; '_'", "jmp     loc_BF02"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 112, 0, 0, 2, 0, 0, 14, 12, 0.00196323857206543, ["mov     dword ptr [rax], 5Fh ; '_'", "mov     cs:unsupported_device_10326, r13"], ["mov~<TAG>,0", "mov~<TAG>,r13"]], [0, 0, 5, 0, 2, 7, 0, 3, 20, -1, 0.0038921847673262237, ["mov     rdi, [f+20h]; i", "lea     rsi, [rbp+buf]; buf", "call    umaxtostr", "mov     rdi, rax; s", "call    _strlen", "cmp     eax, cs:inode_number_width", "jle     loc_BCBE"], ["mov~rdi,[f+0]", "lea~rsi,[rbp+0]", "call~FOO", "mov~rdi,rax", "call~FOO", "cmp~eax,<TAG>", "jle~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 19, -1, 0.016700387503857893, ["movzx   eax, cs:print_inode", "test    al, al", "jnz     loc_C020"], ["movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [1, 0, 229, 0, 0, 3, 0, 1, 2, 18, 0.04711772572957032, ["cmp     byte ptr [rbp+var_384], 0", "movzx   r8d, cs:print_hyperlink", "jnz     short loc_BAD0"], ["cmp~[yte ptr [rbp+0],0", "movzx~r8d,<TAG>", "jnz~FOO"]], [8, 0, 235, 2, 0, 18, 2, 1, 1, 19, 0.024176125647268613, ["lea     rax, [rcx+rcx*4]", "lea     rax, [rax+rax*4]", "lea     r14, [rdi+rax*8]", "xor     eax, eax", "lea     rdi, [f+8]", "mov     rcx, f", "mov     qword ptr [f], 0", "mov     qword ptr [f+0BCh], 0", "and     rdi, 0FFFFFFFFFFFFFFF8h", "sub     rcx, rdi", "add     ecx, 0C4h", "shr     ecx, 3", "rep stosq", "mov     qword ptr [f+20h], 0", "mov     [f+0A8h], r13d", "mov     dword ptr [f+0C4h], 0FFFFFFFFh", "cmp     cs:cwd_some_quoted, 0", "jnz     short loc_BA51"], ["lea~rax,<TAG>", "lea~rax,<TAG>", "lea~r14,<TAG>", "xor~eax,eax", "lea~rdi,[f+0]", "mov~rcx,f", "mov~<TAG>,0", "mov~[word ptr [f+0],0", "and~rdi,0", "sub~rcx,rdi", "add~ecx,0", "shr~ecx,0", "stosq~<TAG>,", "mov~[word ptr [f+0],0", "mov~[f+0],r13d", "mov~[word ptr [f+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 230, 0, 0, 2, 0, 1, 5, 19, 0.001971811666266589, ["mov     dword ptr [f+0C4h], 0", "jmp     loc_BA51"], ["mov~[word ptr [f+0],0", "jmp~FOO"]], [1, 0, 242, 1, 0, 19, 1, 1, 0, 20, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "mov     r15, dirname", "push    rbx", "mov     r13d, esi", "mov     rbx, name", "sub     rsp, 378h", "mov     dirname, cs:cwd_n_used", "mov     [rbp+var_384], edx", "mov     rax, fs:28h", "mov     [rbp+var_38], rax", "xor     eax, eax", "cmp     rcx, cs:cwd_n_alloc", "mov     name, cs:cwd_file; p", "jnz     short loc_B9E7"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "mov~r15,dirname", "push~rbx", "mov~r13d,esi", "mov~rbx,name", "sub~rsp,0", "mov~dirname,<TAG>", "mov~[rbp+0],edx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "cmp~rcx,<TAG>", "mov~name,<TAG>", "jnz~FOO"]], [2, 0, 236, 2, 1, 8, 0, 1, 4, 20, 0.016186001851788347, ["lea     rax, [rcx+rcx*4]", "lea     rsi, [rax+rax*4]", "shl     rsi, 4; n", "call    xrealloc", "shl     cs:cwd_n_alloc, 1", "mov     rcx, cs:cwd_n_used", "mov     rdi, rax", "mov     cs:cwd_file, rax"], ["lea~rax,<TAG>", "lea~rsi,<TAG>", "shl~rsi,0", "call~FOO", "shl~<TAG>,0", "mov~rcx,<TAG>", "mov~rdi,rax", "mov~<TAG>,rax"]], [0, 1, 53, 0, 2, 12, 1, 3, 16, -1, 0.0951441994444635, ["mov     r8, cs:output_block_size; to_block_size", "mov     edx, cs:human_output_opts; opts", "lea     r13, [rbp+buf]", "mov     ecx, 200h; from_block_size", "mov     rdi, blocks; n", "mov     rsi, r13; buf", "call    human_readable", "xor     esi, esi; flags", "mov     rdi, rax; string", "call    gnu_mbswidth", "cmp     eax, cs:block_size_width", "jle     short loc_BC4B"], ["mov~r8,<TAG>", "mov~edx,<TAG>", "lea~r13,[rbp+0]", "mov~ecx,<STR>", "mov~rdi,blocks", "mov~rsi,r13", "call~FOO", "xor~esi,esi", "mov~rdi,rax", "call~FOO", "cmp~eax,<TAG>", "jle~FOO"]], [0, 0, 154, 0, 0, 2, 0, 1, 4, 16, 0.017071888252574784, ["mov     r12, name", "jmp     loc_BAF6"], ["mov~r12,name", "jmp~FOO"]], [1, 0, 169, 0, 0, 5, 0, 1, 3, 17, 0.034846770229644615, ["movzx   edx, byte ptr [name]", "lea     rax, [f+18h]", "mov     [rbp+stat_buf], rax", "cmp     dl, 2Fh ; '/'", "jz      loc_C298"], ["movzx~edx,<TAG>", "lea~rax,[f+0]", "mov~[rbp+0],rax", "cmp~dl,0", "jz~FOO"]], [0, 0, 52, 0, 0, 1, 0, 0, 17, -1, 0.0, ["mov     cs:block_size_width, eax"], ["mov~<TAG>,eax"]], [0, 0, 19, 0, 0, 2, 0, 1, 19, -1, 0.0, ["mov     cs:scontext_width, eax", "jmp     loc_BCA1"], ["mov~<TAG>,eax", "jmp~FOO"]], [0, 0, 20, 0, 1, 4, 0, 2, 18, -1, 0.0044408627962004045, ["mov     rdi, [f+0B0h]; s", "call    _strlen", "cmp     eax, cs:scontext_width", "jg      loc_C240"], ["mov~rdi,[f+0]", "call~FOO", "cmp~eax,<TAG>", "jg~FOO"]], [2, 0, 44, 1, 0, 7, 2, 1, 21, -1, 0.003909330955728541, ["mov     ecx, [rax]", "add     rax, 4", "lea     edx, [rcx-1010101h]", "not     ecx", "and     edx, ecx", "and     edx, 80808080h", "jz      short loc_C632"], ["mov~ecx,<TAG>", "add~rax,0", "lea~edx,[rcx-1010101h]+0]", "not~ecx", "and~edx,ecx", "and~edx,0", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 21, -1, 0.0, ["mov     cs:inode_number_width, eax", "jmp     loc_BCBE"], ["mov~<TAG>,eax", "jmp~FOO"]], [1, 0, 205, 0, 0, 3, 0, 1, 10, 18, 0.009087479853228627, ["cmp     rax, 1", "mov     rdi, cs:off_2271A8; s1", "jz      loc_CAD0"], ["cmp~rax,0", "mov~rdi,<TAG>", "jz~FOO"]], [1, 0, 119, 0, 0, 3, 0, 1, 11, 13, 0.015500154315695621, ["cmp     rax, 1", "mov     rsi, cs:off_2271B8", "jz      loc_C970"], ["cmp~rax,0", "mov~rsi,<TAG>", "jz~FOO"]], [0, 0, 120, 0, 0, 3, 1, 1, 10, 11, 0.01728335790953671, ["mov     rax, qword ptr cs:unk_2271B0", "test    rax, rax", "jz      loc_BB66"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 51, 0, 0, 3, 1, 1, 17, -1, 0.09075477521347004, ["mov     edx, cs:format_0", "test    edx, edx", "jnz     loc_C688"], ["mov~edx,<TAG>", "test~edx,edx", "jnz~FOO"]], [0, 0, 94, 0, 0, 2, 0, 1, 18, 9, 0.008058708549089537, ["mov     r13d, cs:format_0", "jmp     loc_C338"], ["mov~r13d,<TAG>", "jmp~FOO"]], [1, 0, 95, 0, 2, 12, 3, 2, 18, 10, 0.0, ["mov     rdx, r12; arg", "mov     esi, 3; s", "xor     edi, edi; n", "mov     [rbp+stat_buf], r8", "call    quotearg_n_style_colon", "mov     r8, [rbp+stat_buf]", "lea     rdx, aS_0+2; format", "mov     rcx, rax", "xor     edi, edi; status", "xor     eax, eax", "mov     esi, [r8]; errnum", "call    _error"], ["mov~rdx,r12", "mov~esi,0", "xor~edi,edi", "mov~[rbp+0],r8", "call~FOO", "mov~r8,[rbp+0]", "lea~rdx,<TAG>", "mov~rcx,rax", "xor~edi,edi", "xor~eax,eax", "mov~esi,<TAG>", "call~FOO"]], [1, 0, 199, 0, 0, 2, 0, 1, 11, 17, 0.008538801824354446, ["cmp     rax, 2", "jnz     loc_BDE0"], ["cmp~rax,0", "jnz~FOO"]], [0, 0, 226, 0, 0, 2, 1, 1, 3, 18, 0.015751631745596285, ["test    r8b, r8b", "jnz     loc_BF60"], ["test~r8b,r8b", "jnz~FOO"]], [3, 0, 42, 2, 0, 10, 1, 0, 22, -1, 0.0014402798257947258, ["mov     ecx, edx", "shr     ecx, 10h", "test    edx, 8080h", "cmovz   edx, ecx", "lea     rcx, [rax+2]", "mov     esi, edx", "cmovz   rax, rcx", "add     sil, dl", "sbb     rax, 3", "sub     eax, r13d"], ["mov~ecx,edx", "shr~ecx,0", "test~edx,0", "cmovz~edx,ecx", "lea~rcx,[rax+0]", "mov~esi,edx", "cmovz~rax,rcx", "add~sil,dl", "sbb~rax,0", "sub~eax,r13d"]], [0, 0, 73, 0, 1, 4, 0, 2, 20, 5, 0.0027090977675662702, ["mov     rdi, r12; s", "call    _strlen", "cmp     r13, rax", "jnz     loc_C95A"], ["mov~rdi,r12", "call~FOO", "cmp~r13,rax", "jnz~FOO"]], [2, 0, 74, 0, 1, 11, 0, 2, 19, 5, 0.008075854737491856, ["mov     r12, [f+8]", "mov     r8, cs:filename_quoting_options; o", "lea     rdi, [rbp+buf]; buffer", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     esi, 2; buffersize", "mov     rdx, r12; arg", "call    quotearg_buffer", "mov     r13, rax", "movzx   eax, [rbp+buf]", "cmp     [r12], al", "jz      loc_CA60"], ["mov~r12,[f+0]", "mov~r8,<TAG>", "lea~rdi,[rbp+0]", "mov~rcx,0", "mov~esi,0", "mov~rdx,r12", "call~FOO", "mov~r13,rax", "movzx~eax,[rbp+0]", "cmp~<TAG>,al", "jz~FOO"]], [1, 0, 39, 0, 0, 2, 0, 1, 19, -1, 0.05912005761119304, ["cmp     cs:print_group, 0", "jnz     loc_C578"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 41, 0, 0, 2, 0, 1, 22, -1, 0.007355714824594493, ["cmp     cs:owner_width, eax", "jge     loc_BC66"], ["cmp~<TAG>,eax", "jge~FOO"]], [0, 0, 40, 0, 0, 2, 0, 1, 23, -1, 0.0, ["mov     cs:owner_width, eax", "jmp     loc_BC66"], ["mov~<TAG>,eax", "jmp~FOO"]], [0, 0, 17, 0, 2, 7, 0, 3, 19, -1, 0.036692843180960874, ["mov     rdi, [f+28h]; i", "lea     rsi, [rbp+b]; buf", "call    umaxtostr", "mov     rdi, rax; s", "call    _strlen", "cmp     eax, cs:nlink_width", "jle     short loc_C076"], ["mov~rdi,[f+0]", "lea~rsi,[rbp+0]", "call~FOO", "mov~rdi,rax", "call~FOO", "cmp~eax,<TAG>", "jle~FOO"]], [0, 0, 18, 0, 0, 3, 1, 1, 18, -1, 0.0587085490895374, ["mov     eax, cs:format_0", "test    eax, eax", "jz      loc_C050"], ["mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [3, 0, 7, 0, 3, 16, 3, 4, 9, -1, 0.010596344432632627, ["lea     rsi, aCannotAccessS; \"cannot access %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, r12; arg", "mov     edi, 4; s", "mov     type, rax", "call    quotearg_style", "mov     esi, [r15]; errnum", "mov     rcx, rax", "xor     edi, edi; status", "xor     eax, eax", "mov     rdx, r13; format", "call    _error", "cmp     byte ptr [rbp+var_384], 0", "jz      loc_C4C0"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,r12", "mov~edi,0", "mov~type,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,rax", "xor~edi,edi", "xor~eax,eax", "mov~rdx,r13", "call~FOO", "cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 1, 12, -1, 0.00027433901443709065, ["jmp     loc_BE34"], ["jmp~FOO"]], [1, 0, 221, 0, 0, 2, 0, 1, 4, 17, 0.014665706480116138, ["cmp     cs:format_needs_stat, 0", "jnz     loc_BDE0"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 30, 0, 0, 2, 0, 1, 20, -1, 0.03427523061623401, ["cmp     cs:print_author, 0", "jnz     loc_C4F0"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 32, 0, 0, 2, 0, 1, 23, -1, 0.006584136346490176, ["cmp     cs:group_width, eax", "jge     loc_BC73"], ["cmp~<TAG>,eax", "jge~FOO"]], [0, 0, 31, 0, 0, 2, 0, 1, 24, -1, 0.0, ["mov     cs:group_width, eax", "jmp     loc_BC73"], ["mov~<TAG>,eax", "jmp~FOO"]], [1, 0, 220, 0, 0, 2, 0, 1, 5, 20, 0.012731044888721238, ["cmp     r13d, 3", "jz      loc_C7A0"], ["cmp~r13d,0", "jz~FOO"]], [1, 0, 198, 0, 1, 7, 1, 2, 12, 18, 0.001243098659168067, ["lea     rsi, a00; \"00\"", "mov     edx, 2; n", "mov     byte ptr [rbp+stat_buf], r8b", "call    _strncmp", "test    eax, eax", "movzx   r8d, byte ptr [rbp+stat_buf]", "jz      loc_BA82"], ["lea~rsi,<TAG>", "mov~edx,0", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 8, 0, 2, 11, 1, 3, 21, -1, 0.004080792839751724, ["mov     rdi, [f+48h]; n", "mov     r8, cs:file_output_block_size; to_block_size", "lea     rsi, [rbp+buf]; buf", "mov     edx, cs:file_human_output_opts; opts", "mov     ecx, 1; from_block_size", "call    human_readable", "xor     esi, esi; flags", "mov     rdi, rax; string", "call    gnu_mbswidth", "cmp     eax, cs:file_size_width", "jle     loc_BCAF"], ["mov~rdi,[f+0]", "mov~r8,<TAG>", "lea~rsi,[rbp+0]", "mov~edx,<TAG>", "mov~ecx,0", "call~FOO", "xor~esi,esi", "mov~rdi,rax", "call~FOO", "cmp~eax,<TAG>", "jle~FOO"]], [1, 1, 15, 0, 0, 4, 1, 1, 20, -1, 0.029868660196838245, ["mov     eax, [f+30h]", "and     eax, 0B000h", "cmp     eax, 2000h", "jnz     loc_C250"], ["mov~eax,[f+0]", "and~eax,<STR>", "cmp~eax,0", "jnz~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 10, -1, 0.0030348753472103154, ["mov     cs:exit_status, 2", "xor     r12d, r12d", "jmp     loc_BCD1"], ["mov~<TAG>,0", "xor~r12d,r12d", "jmp~FOO"]], [0, 0, 16, 0, 0, 1, 0, 0, 20, -1, 0.0, ["mov     cs:nlink_width, eax"], ["mov~<TAG>,eax"]], [0, 0, 174, 0, 0, 1, 0, 1, 13, 17, 0.002914852028394088, ["jmp     loc_BDE0"], ["jmp~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 17, -1, 0.06762456705874284, ["cmp     cs:print_scontext, 0", "jz      short loc_BCA1"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 23, 0, 0, 2, 0, 1, 24, -1, 0.005812557868385858, ["cmp     cs:author_width, eax", "jge     loc_BC80"], ["cmp~<TAG>,eax", "jge~FOO"]], [0, 0, 22, 0, 0, 2, 0, 1, 25, -1, 0.0, ["mov     cs:author_width, eax", "jmp     loc_BC80"], ["mov~<TAG>,eax", "jmp~FOO"]], [0, 0, 196, 0, 0, 3, 1, 1, 6, 19, 0.022815861367351368, ["movzx   eax, cs:print_inode", "test    al, al", "jnz     loc_BD00"], ["movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [1, 0, 219, 0, 0, 2, 0, 1, 6, 20, 0.006169770126767486, ["cmp     cs:print_with_color, 0", "jz      loc_BA82"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 197, 0, 0, 1, 0, 1, 12, 20, 0.0007972977607077947, ["jmp     loc_BA82"], ["jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 22, -1, 0.00012002331881622716, ["mov     cs:file_size_width, eax", "jmp     loc_BCAF"], ["mov~<TAG>,eax", "jmp~FOO"]], [0, 0, 8, 0, 0, 1, 0, 1, 24, -1, 8.573094201159082e-05, ["jmp     loc_C288"], ["jmp~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 18, -1, 0.004200816158567951, ["cmp     cs:print_scontext, 0", "jnz     loc_BC89"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 58, 0, 0, 2, 0, 1, 15, -1, 0.0029319982167964062, ["cmp     cs:immediate_dirs, 0", "jnz     short loc_C4A8"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 59, 0, 0, 2, 0, 1, 14, -1, 0.008744556085182265, ["cmp     byte ptr [rbp+var_384], 0", "jz      short loc_C4A8"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 19, -1, 0.00048009327526490864, ["jmp     loc_BCAF"], ["jmp~FOO"]], [0, 0, 137, 0, 0, 4, 1, 1, 7, 15, 0.008095858623961227, ["mov     r8d, cs:exit_status", "mov     eax, cs:dereference", "test    r8d, r8d", "jnz     loc_CA93"], ["mov~r8d,<TAG>", "mov~eax,<TAG>", "test~r8d,r8d", "jnz~FOO"]], [2, 0, 138, 0, 4, 17, 3, 4, 6, 16, 0.0014059874489900895, ["lea     rsi, aErrorCanonical; \"error canonicalizing %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, full_name; arg", "mov     edi, 4; s", "mov     dirname, rax", "call    quotearg_style", "mov     r12, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "mov     rdx, r15; format", "xor     edi, edi; status", "xor     eax, eax", "mov     r12, full_name", "call    _error"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,full_name", "mov~edi,0", "mov~dirname,rax", "call~FOO", "mov~r12,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "mov~rdx,r15", "xor~edi,edi", "xor~eax,eax", "mov~r12,full_name", "call~FOO"]], [1, 0, 121, 0, 0, 2, 0, 1, 9, 11, 0.1204348273378828, ["cmp     cs:print_with_color, 0", "jz      loc_BB66"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 123, 0, 0, 3, 0, 1, 8, 12, 0.22332910394019412, ["cmp     r13d, 5", "mov     byte ptr [f+0B8h], 1", "jz      loc_BE90"], ["cmp~r13d,0", "mov~[yte ptr [f+0],0", "jz~FOO"]], [2, 0, 122, 0, 0, 4, 1, 1, 9, 11, 0.10140255821130963, ["mov     eax, [f+30h]", "and     eax, 0F000h", "cmp     eax, 8000h", "jz      loc_BE90"], ["mov~eax,[f+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 193, 0, 0, 2, 0, 1, 7, 19, 0.010416309454408286, ["cmp     cs:format_needs_type, 0", "jz      short loc_BAC8"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 132, 0, 0, 1, 0, 1, 9, 15, 9.573288524627643e-05, ["jmp     loc_BB24"], ["jmp~FOO"]], [1, 0, 213, 0, 0, 2, 0, 1, 9, 18, 0.003350650983619675, ["cmp     byte ptr [rsi], 30h ; '0'", "jz      loc_C7F0"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 217, 0, 0, 3, 0, 1, 8, 18, 0.00650412080061269, ["cmp     rax, 1", "mov     rsi, cs:off_227198", "jz      loc_CAA1"], ["cmp~rax,0", "mov~rsi,<TAG>", "jz~FOO"]], [1, 0, 192, 0, 0, 5, 1, 1, 8, 18, 0.00999622783855149, ["test    r13d, r13d", "setz    cl", "cmp     r13d, 6", "mov     edx, ecx", "jz      loc_BD14"], ["test~r13d,r13d", "setz~cl", "cmp~r13d,0", "mov~edx,ecx", "jz~FOO"]], [0, 0, 78, 0, 1, 4, 0, 2, 16, 4, 0.0345324234422687, ["mov     rdi, r13; string", "call    xstrdup", "mov     r15, rax", "jmp     loc_C3E9"], ["mov~rdi,r13", "call~FOO", "mov~r15,rax", "jmp~FOO"]], [1, 0, 83, 0, 0, 2, 0, 1, 15, 5, 0.04463152841123421, ["cmp     byte ptr [r13+0], 2Fh ; '/'", "jz      loc_C6A0"], ["cmp~[yte ptr [r13+0],0", "jz~FOO"]], [0, 0, 82, 0, 1, 4, 1, 2, 16, 5, 0.007715784781043174, ["mov     rdi, r12; file", "call    dir_len", "test    rax, rax", "jz      loc_C6A0"], ["mov~rdi,r12", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 42, 0, 1, 6, 2, 2, 21, -1, 0.007715784781043174, ["xor     esi, esi; flags", "call    gnu_mbswidth", "mov     edx, 0", "test    eax, eax", "cmovs   eax, edx", "jmp     loc_C66C"], ["xor~esi,esi", "call~FOO", "mov~edx,0", "test~eax,eax", "cmovs~eax,edx", "jmp~FOO"]], [0, 0, 191, 0, 0, 2, 1, 1, 9, 18, 0.006601282534892494, ["test    cl, cl", "jnz     loc_BD14"], ["test~cl,cl", "jnz~FOO"]], [3, 0, 88, 0, 4, 18, 3, 5, 15, 5, 0.017386235039950577, ["lea     rsi, aCannotReadSymb; \"cannot read symbolic link %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, r12; arg", "mov     edi, 4; s", "mov     r13, rax", "call    quotearg_style", "mov     r15, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "xor     edi, edi; status", "xor     eax, eax", "mov     rcx, r15", "mov     rdx, r13; format", "call    _error", "cmp     byte ptr [rbp+var_384], 0", "jz      loc_CA76"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,r12", "mov~edi,0", "mov~r13,rax", "call~FOO", "mov~r15,rax", "call~FOO", "mov~esi,<TAG>", "xor~edi,edi", "xor~eax,eax", "mov~rcx,r15", "mov~rdx,r13", "call~FOO", "cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [0, 0, 89, 0, 1, 7, 1, 2, 14, 6, 0.06405815987106067, ["mov     rsi, [f+48h]; size", "mov     rdi, r12; file", "call    areadlink_with_size", "test    rax, rax", "mov     r13, rax", "mov     [f+8], rax", "jz      loc_C730"], ["mov~rsi,[f+0]", "mov~rdi,r12", "call~FOO", "test~rax,rax", "mov~r13,rax", "mov~[f+0],rax", "jz~FOO"]], [1, 0, 150, 0, 1, 6, 1, 2, 5, 16, 0.0038450327492198485, ["mov     esi, 2; can_mode", "mov     rdi, full_name; name", "call    canonicalize_filename_mode", "test    rax, rax", "mov     [f+10h], rax", "jz      loc_C980"], ["mov~esi,0", "mov~rdi,full_name", "call~FOO", "test~rax,rax", "mov~[f+0],rax", "jz~FOO"]], [1, 0, 171, 0, 0, 5, 0, 1, 4, 17, 0.004480870569139148, ["movzx   edx, byte ptr [name]", "lea     rax, [f+18h]", "mov     [rbp+stat_buf], rax", "cmp     dl, 2Fh ; '/'", "jz      loc_C2A0"], ["movzx~edx,<TAG>", "lea~rax,[f+0]", "mov~[rbp+0],rax", "cmp~dl,0", "jz~FOO"]], [1, 0, 208, 0, 0, 2, 0, 1, 10, 18, 0.0028634134631871336, ["cmp     byte ptr [rsi], 30h ; '0'", "jnz     short loc_CAAA"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 9, 0, 0, 4, 0, 1, 23, -1, 0.004337985665786496, ["mov     eax, cs:major_device_number_width", "lea     eax, [rdx+rax+2]", "cmp     eax, cs:file_size_width", "jle     loc_BCAF"], ["mov~eax,<TAG>", "lea~eax,[rdx+0]", "cmp~eax,<TAG>", "jle~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 10, 19, 0.006189774013236858, ["cmp     cs:format_needs_type, 0", "jnz     loc_BD58"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 143, 0, 0, 2, 0, 1, 6, 15, 0.020700879027925428, ["mov     r12, name", "jmp     loc_BAFF"], ["mov~r12,name", "jmp~FOO"]], [0, 0, 169, 0, 0, 3, 1, 1, 6, 16, 0.01982242264211332, ["movzx   ecx, byte ptr [dirname]", "test    cl, cl", "jz      loc_C2BA"], ["movzx~ecx,<TAG>", "test~cl,cl", "jz~FOO"]], [0, 0, 144, 0, 0, 1, 0, 1, 11, 16, 0.005429340557594047, ["jmp     loc_C2BA"], ["jmp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 11, -1, 5.14385652069545e-05, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 116, 0, 0, 2, 0, 1, 12, 12, 0.006815609889921471, ["cmp     rax, 2", "jnz     short loc_BEDF"], ["cmp~rax,0", "jnz~FOO"]], [0, 0, 12, 0, 0, 1, 0, 0, 22, -1, 0.0, ["mov     cs:major_device_number_width, eax"], ["mov~<TAG>,eax"]], [2, 2, 13, 0, 2, 16, 3, 3, 21, -1, 0.01860361441651521, ["mov     rax, [f+40h]", "lea     r13, [rbp+buf]", "mov     rsi, r13; buf", "mov     rdi, rax", "shr     rax, 20h", "shr     rdi, 8", "mov     edx, edi", "mov     rdi, rax", "and     edx, 0FFFh", "and     edi, 0FFFFF000h", "or      edi, edx; i", "call    umaxtostr", "mov     rdi, rax; s", "call    _strlen", "cmp     eax, cs:major_device_number_width", "jle     short loc_C0D1"], ["mov~rax,[f+0]", "lea~r13,[rbp+0]", "mov~rsi,r13", "mov~rdi,rax", "shr~rax,<STR>", "shr~rdi,0", "mov~edx,edi", "mov~rdi,rax", "and~edx,<STR>", "and~edi,0", "or~edi,edx", "call~FOO", "mov~rdi,rax", "call~FOO", "cmp~eax,<TAG>", "jle~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 10, -1, 0.003840746202119269, ["mov     edi, cs:exit_status", "test    edi, edi", "jnz     short loc_C4D4"], ["mov~edi,<TAG>", "test~edi,edi", "jnz~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 11, -1, 0.0, ["mov     cs:exit_status, 1"], ["mov~<TAG>,0"]], [0, 0, 4, 0, 0, 2, 1, 1, 8, -1, 0.002983436782003361, ["xor     r12d, r12d", "jmp     loc_BCBE"], ["xor~r12d,r12d", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 12, 18, 0.002083261890881657, ["cmp     cs:format_needs_type, 0", "jz      loc_BAC8"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 3, 1, 1, 4, 0, 1, 9, -1, 0.009001748911217036, ["mov     rdi, name; string", "call    xstrdup", "add     cs:cwd_n_used, 1", "mov     [f], rax"], ["mov~rdi,name", "call~FOO", "add~<TAG>,0", "mov~<TAG>,rax"]], [1, 0, 181, 0, 0, 3, 1, 1, 11, 18, 0.008950310346010083, ["xor     r12d, r12d", "cmp     r13d, 5", "jnz     loc_BCBE"], ["xor~r12d,r12d", "cmp~r13d,0", "jnz~FOO"]], [1, 0, 179, 0, 0, 3, 0, 1, 13, 18, 0.004355131854188814, ["cmp     cs:print_with_color, 0", "mov     byte ptr [rbp+stat_buf], r8b", "jz      loc_BCBE"], ["cmp~<TAG>,0", "mov~[yte ptr [rbp+0],r8b", "jz~FOO"]], [1, 0, 175, 0, 1, 5, 1, 2, 17, 18, 0.001131648434552999, ["mov     edi, 15h; type", "call    is_colored", "test    al, al", "movzx   r8d, byte ptr [rbp+stat_buf]", "jz      loc_BCBE"], ["mov~edi,0", "call~FOO", "test~al,al", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 165, 0, 0, 3, 0, 1, 6, 18, 0.01627173279379994, ["cmp     byte ptr [dirname+1], 0", "mov     rax, full_name", "jz      loc_C1C7"], ["cmp~[yte ptr [dirname+0],0", "mov~rax,full_name", "jz~FOO"]], [3, 0, 166, 1, 2, 19, 2, 3, 5, 19, 0.021347004560886115, ["mov     rdi, name; s", "mov     [rbp+var_386], r8b", "mov     [rbp+var_385], dl", "mov     byte ptr [rbp+format], cl", "call    _strlen", "mov     rdi, dirname; s", "mov     r12, rax", "call    _strlen", "lea     rax, [r12+rax+20h]", "movzx   ecx, byte ptr [rbp+format]", "movzx   edx, [rbp+var_385]", "movzx   r8d, [rbp+var_386]", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rdi, [rsp+3A0h+format+7]", "and     rdi, 0FFFFFFFFFFFFFFF0h", "cmp     cl, 2Eh ; '.'", "mov     r12, rdi", "jz      loc_C2C8"], ["mov~rdi,name", "mov~[rbp+0],r8b", "mov~[rbp+0],dl", "mov~[yte ptr [rbp+0],cl", "call~FOO", "mov~rdi,dirname", "mov~r12,rax", "call~FOO", "lea~rax,[r12+0]", "movzx~ecx,[yte ptr [rbp+0]", "movzx~edx,[rbp+0]", "movzx~r8d,[rbp+0]", "and~rax,0", "sub~rsp,rax", "lea~rdi,[rsp+0]", "and~rdi,0", "cmp~cl,0", "mov~r12,rdi", "jz~FOO"]], [1, 0, 201, 0, 0, 2, 0, 1, 11, 18, 0.003000582970405679, ["cmp     byte ptr [rdi], 30h ; '0'", "jnz     short loc_CAAA"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 215, 0, 0, 2, 0, 1, 9, 17, 0.006222637541007968, ["cmp     rax, 2", "jnz     loc_BDE0"], ["cmp~rax,0", "jnz~FOO"]], [0, 0, 164, 0, 0, 1, 0, 1, 7, 21, 0.000102877130413909, ["jmp     loc_C195"], ["jmp~FOO"]], [0, 0, 111, 0, 0, 1, 0, 1, 13, 11, 0.0028548403689859746, ["jmp     loc_BB66"], ["jmp~FOO"]], [1, 0, 116, 0, 0, 2, 0, 1, 12, 12, 0.006815609889921471, ["cmp     byte ptr [rsi], 30h ; '0'", "jnz     loc_BEDF"], ["cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 115, 0, 0, 7, 1, 1, 13, 11, 0.0028548403689859746, ["lea     rdi, a00; \"00\"", "mov     ecx, 2", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jz      loc_BB66"], ["lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 11, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 10, -1, 0.008195878056308083, ["mov     name, [rbp+var_38]", "xor     name, fs:28h", "mov     rax, r12", "jnz     loc_CADA"], ["mov~name,[rbp+0]", "xor~name,<TAG>", "mov~rax,r12", "jnz~FOO"]], [0, 0, 132, 0, 0, 2, 0, 1, 7, 15, 0.0019295177348742042, ["mov     r12, name", "jmp     loc_BB24"], ["mov~r12,name", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 239, 0, 0, 2, 1, 1, 2, 22, 0.008247316621515038, ["test    rax, rax", "js      loc_CADF"], ["test~rax,rax", "js~FOO"]], [0, 0, 238, 0, 0, 2, 1, 1, 3, 21, 0.012208086142450534, ["test    rsi, rsi", "jnz     loc_CADF"], ["test~rsi,rsi", "jnz~FOO"]], [1, 0, 3, 1, 1, 6, 1, 2, 11, -1, 0.000102877130413909, ["mov     rdi, name; string", "xor     r12d, r12d", "call    xstrdup", "add     cs:cwd_n_used, 1", "mov     [f], rax", "jmp     loc_BCD1"], ["mov~rdi,name", "xor~r12d,r12d", "call~FOO", "add~<TAG>,0", "mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 24, 0, 1, 6, 2, 2, 23, -1, 0.007715784781043174, ["xor     esi, esi; flags", "call    gnu_mbswidth", "mov     edx, 0", "test    eax, eax", "cmovs   eax, edx", "jmp     loc_C55C"], ["xor~esi,esi", "call~FOO", "mov~edx,0", "test~eax,eax", "cmovs~eax,edx", "jmp~FOO"]], [0, 0, 28, 0, 1, 5, 1, 2, 22, -1, 0.010767806316655807, ["mov     edi, r15d; uid", "call    getuser", "test    rax, rax", "mov     rdi, rax; string", "jz      loc_C501"], ["mov~edi,r15d", "call~FOO", "test~rax,rax", "mov~rdi,rax", "jz~FOO"]], [0, 0, 103, 0, 0, 2, 0, 1, 13, 10, 0.026130791125132884, ["cmp     rdx, cs:unsupported_device_10320", "jz      loc_C6E0"], ["cmp~rdx,<TAG>", "jz~FOO"]], [0, 0, 106, 0, 0, 4, 1, 1, 12, 10, 0.03340077500771579, ["lea     rax, UNKNOWN_SECURITY_CONTEXT; \"?\"", "test    r13d, r13d", "mov     [f+0B0h], rax", "jz      loc_C2E0"], ["lea~rax,<TAG>", "test~r13d,r13d", "mov~[f+0],rax", "jz~FOO"]], [1, 0, 109, 0, 0, 2, 0, 1, 11, 9, 0.18747642399094683, ["cmp     cs:print_scontext, 0", "jz      short loc_BBD0"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 110, 0, 0, 4, 1, 1, 10, 10, 0.22355200438942424, ["mov     r13d, cs:format_0", "test    r13d, r13d", "mov     r15d, r13d", "jz      short loc_BB7E"], ["mov~r13d,<TAG>", "test~r13d,r13d", "mov~r15d,r13d", "jz~FOO"]], [0, 0, 114, 0, 1, 4, 0, 2, 13, 13, 0.006018312129213676, ["mov     type, [f+18h]", "call    ___errno_location", "cmp     r13, cs:unsupported_device_10326", "jz      loc_C720"], ["mov~type,[f+0]", "call~FOO", "cmp~r13,<TAG>", "jz~FOO"]], [0, 0, 167, 0, 0, 4, 1, 1, 4, 16, 0.03184733033846576, ["movzx   ecx, byte ptr [dirname]", "mov     r12, name", "test    cl, cl", "jnz     loc_C138"], ["movzx~ecx,<TAG>", "mov~r12,name", "test~cl,cl", "jnz~FOO"]], [1, 0, 170, 0, 0, 5, 0, 1, 10, 17, 0.015078072311191891, ["movzx   edx, byte ptr [name]", "lea     rax, [f+18h]", "mov     [rbp+stat_buf], rax", "cmp     dl, 2Fh ; '/'", "jnz     loc_BAE7"], ["movzx~edx,<TAG>", "lea~rax,[f+0]", "mov~[rbp+0],rax", "cmp~dl,0", "jnz~FOO"]], [2, 0, 94, 0, 0, 3, 0, 1, 14, 9, 0.008144439491101128, ["mov     dword ptr [r8], 5Fh ; '_'", "mov     dword ptr [f+0BCh], 0", "jmp     loc_C338"], ["mov~<TAG>,0", "mov~[word ptr [f+0],0", "jmp~FOO"]], [0, 0, 0, 0, 0, 8, 0, 0, 11, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     f", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~f", "pop~r15", "pop~rbp", "retn"]], [0, 0, 153, 0, 0, 2, 1, 1, 5, 15, 0.08905273024473324, ["test    r8b, r8b", "jnz     loc_BF86"], ["test~r8b,r8b", "jnz~FOO"]], [1, 0, 154, 0, 0, 2, 0, 1, 8, 16, 0.039659133774561914, ["mov     byte ptr [rax], 0", "jmp     loc_BAF6"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 11, 0, 2, 13, 2, 3, 22, -1, 0.011539384794760126, ["mov     len, [f+40h]", "mov     rsi, r13; buf", "movzx   edx, al", "shr     rax, 0Ch", "mov     rdi, rax", "xor     dil, dil", "or      edi, edx; i", "call    umaxtostr", "mov     rdi, rax; s", "call    _strlen", "mov     edx, cs:minor_device_number_width", "cmp     eax, edx", "jle     short loc_C106"], ["mov~len,[f+0]", "mov~rsi,r13", "movzx~edx,al", "shr~rax,0", "mov~rdi,rax", "xor~dil,dil", "or~edi,edx", "call~FOO", "mov~rdi,rax", "call~FOO", "mov~edx,<TAG>", "cmp~eax,edx", "jle~FOO"]], [0, 0, 37, 0, 1, 5, 1, 2, 21, -1, 0.01045917492541408, ["mov     edi, r15d; gid", "call    getgroup", "test    rax, rax", "mov     rdi, rax; string", "jz      loc_C589"], ["mov~edi,r15d", "call~FOO", "test~rax,rax", "mov~rdi,rax", "jz~FOO"]], [1, 0, 38, 0, 0, 3, 0, 1, 20, -1, 0.023044477212715613, ["cmp     cs:numeric_ids, 0", "mov     r15d, [f+38h]", "jz      loc_C8F0"], ["cmp~<TAG>,0", "mov~r15d,[f+0]", "jz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 0, 23, -1, 0.0, ["mov     cs:minor_device_number_width, eax", "mov     edx, eax"], ["mov~<TAG>,eax", "mov~edx,eax"]], [1, 0, 152, 0, 1, 6, 1, 2, 6, 15, 0.015541590937667892, ["mov     esi, 2; can_mode", "mov     rdi, full_name; name", "call    canonicalize_filename_mode", "test    rax, rax", "mov     [f+10h], rax", "jnz     loc_BAFF"], ["mov~esi,0", "mov~rdi,full_name", "call~FOO", "test~rax,rax", "mov~[f+0],rax", "jnz~FOO"]], [2, 0, 35, 0, 1, 8, 1, 1, 21, -1, 0.006652721100099448, ["lea     rcx, aLu_0+1; \"%lu\"", "mov     r8d, r15d", "mov     edx, 15h", "mov     esi, 1", "mov     rdi, r13", "xor     eax, eax", "call    ___sprintf_chk", "mov     rax, r13"], ["lea~rcx,<TAG>", "mov~r8d,r15d", "mov~edx,0", "mov~esi,0", "mov~rdi,r13", "xor~eax,eax", "call~FOO", "mov~rax,r13"]], [0, 0, 189, 0, 0, 2, 1, 1, 8, 17, 0.006559845912920225, ["test    dl, dl", "jz      loc_BDE0"], ["test~dl,dl", "jz~FOO"]], [1, 0, 190, 0, 0, 4, 1, 1, 7, 18, 0.014525679274830538, ["test    r13d, r13d", "setz    dl", "cmp     r13d, 6", "jz      short loc_BD14"], ["test~r13d,r13d", "setz~dl", "cmp~r13d,0", "jz~FOO"]], [1, 0, 101, 0, 1, 8, 1, 2, 14, 10, 0.015362984808477077, ["mov     rsi, [rbp+stat_buf]; sb", "mov     dword ptr [r8], 0", "mov     rdi, r12; name", "mov     [rbp+format], r8", "call    file_has_acl", "test    eax, eax", "mov     r8, [rbp+format]", "jle     loc_C9F0"], ["mov~rsi,[rbp+0]", "mov~<TAG>,0", "mov~rdi,r12", "mov~[rbp+0],r8", "call~FOO", "test~eax,eax", "mov~r8,[rbp+0]", "jle~FOO"]], [1, 0, 141, 0, 0, 2, 0, 0, 7, 15, 0.012644742407096237, ["cmp     r15d, 4", "jbe     loc_BF10"], ["cmp~r15d,0", "jbe~FOO"]], [1, 0, 33, 0, 1, 6, 2, 2, 22, -1, 0.007715784781043174, ["xor     esi, esi; flags", "call    gnu_mbswidth", "mov     edx, 0", "test    eax, eax", "cmovs   eax, edx", "jmp     loc_C5E4"], ["xor~esi,esi", "call~FOO", "mov~edx,0", "test~eax,eax", "cmovs~eax,edx", "jmp~FOO"]], [1, 0, 188, 0, 0, 2, 0, 1, 8, 17, 0.019239452236434508, ["cmp     cs:dereference, 5", "jz      loc_BDE0"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 86, 0, 0, 3, 1, 1, 16, 4, 0.008204451150509221, ["mov     esi, cs:exit_status", "test    esi, esi", "jnz     loc_C783"], ["mov~esi,<TAG>", "test~esi,esi", "jnz~FOO"]], [2, 0, 26, 0, 1, 8, 1, 1, 22, -1, 0.006961352491341175, ["lea     rcx, aLu_0+1; \"%lu\"", "mov     r8d, r15d", "mov     edx, 15h", "mov     esi, 1", "mov     rdi, r13", "xor     eax, eax", "call    ___sprintf_chk", "mov     rax, r13"], ["lea~rcx,<TAG>", "mov~r8d,r15d", "mov~edx,0", "mov~esi,0", "mov~rdi,r13", "xor~eax,eax", "call~FOO", "mov~rax,r13"]], [1, 0, 29, 0, 0, 3, 0, 1, 21, -1, 0.02412468708206166, ["cmp     cs:numeric_ids, 0", "mov     r15d, [f+34h]", "jz      loc_C8C0"], ["cmp~<TAG>,0", "mov~r15d,[f+0]", "jz~FOO"]], [1, 0, 187, 0, 0, 2, 0, 1, 9, 17, 0.003523541716676383, ["cmp     cs:color_symlink_as_referent, 0", "jnz     loc_BDE0"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 61, 0, 0, 2, 0, 1, 13, -1, 0.0846678783306471, ["cmp     eax, 4000h", "jz      loc_C480"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 94, 0, 0, 4, 0, 0, 15, 9, 0.0016117417098179074, ["mov     r13d, cs:format_0", "mov     dword ptr [f+0BCh], 2", "mov     cs:any_has_acl, 1", "nop     word ptr [rax+rax+00h]"], ["mov~r13d,<TAG>", "mov~[word ptr [f+0],0", "mov~<TAG>,0", "nop~[ord ptr [rax+0]"]], [1, 0, 131, 0, 1, 4, 0, 1, 8, 14, 0.0080890001486003, ["mov     rdx, [rbp+stat_buf]; stat_buf", "mov     rsi, r12; filename", "mov     edi, 1; ver", "call    ___xstat"], ["mov~rdx,[rbp+0]", "mov~rsi,r12", "mov~edi,0", "call~FOO"]], [0, 0, 132, 0, 0, 1, 0, 1, 9, 15, 9.573288524627643e-05, ["jmp     loc_BB24"], ["jmp~FOO"]], [0, 0, 167, 0, 0, 1, 0, 0, 7, 20, 0.012562440702765111, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [2, 0, 137, 0, 1, 6, 0, 2, 9, 14, 0.010360298572294046, ["mov     rdx, [rbp+stat_buf]; stat_buf", "mov     rsi, r12; filename", "mov     edi, 1; ver", "call    ___xstat", "cmp     r15d, 3", "jz      loc_BB38"], ["mov~rdx,[rbp+0]", "mov~rsi,r12", "mov~edi,0", "call~FOO", "cmp~r15d,0", "jz~FOO"]], [2, 0, 133, 0, 0, 4, 1, 1, 11, 14, 0.0026576592023593157, ["mov     edx, [f+30h]", "and     edx, 0F000h", "cmp     edx, 4000h", "jz      loc_BB38"], ["mov~edx,[f+0]", "and~edx,0", "cmp~edx,0", "jz~FOO"]], [0, 0, 136, 0, 0, 2, 1, 1, 10, 15, 0.0063440897088577215, ["test    eax, eax", "js      loc_C700"], ["test~eax,eax", "js~FOO"]], [1, 0, 186, 0, 0, 2, 0, 1, 10, 17, 0.0030777408182161106, ["cmp     cs:check_symlink_mode, 0", "jnz     loc_BDE0"], ["cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 156, 2, 0, 6, 1, 1, 9, 17, 0.0026576592023593157, ["add     rcx, 1", "add     rax, 1", "mov     [rax-1], dl", "movzx   edx, byte ptr [rcx]", "test    dl, dl", "jnz     short loc_C1D0"], ["add~rcx,0", "add~rax,0", "mov~[rax-1]+0],dl", "movzx~edx,<TAG>", "test~dl,dl", "jnz~FOO"]], [0, 0, 156, 0, 0, 2, 0, 0, 8, 18, 0.0012859641301738625, ["mov     rcx, name", "xchg    ax, ax"], ["mov~rcx,name", "xchg~ax,ax"]], [2, 0, 93, 0, 0, 4, 1, 1, 15, 8, 0.020301087068344707, ["mov     eax, [f+30h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_BBE4"], ["mov~eax,[f+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [0, 0, 185, 0, 0, 2, 1, 1, 11, 17, 0.002597647542951202, ["test    al, al", "jnz     loc_BDE0"], ["test~al,al", "jnz~FOO"]], [0, 0, 182, 0, 0, 2, 1, 1, 13, 17, 0.0038750385789239053, ["test    dl, dl", "jnz     loc_BDE0"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 92, 0, 0, 3, 1, 1, 16, 7, 0.007835808099859402, ["test    r13d, r13d", "mov     r15d, r13d", "jz      short loc_C365"], ["test~r13d,r13d", "mov~r15d,r13d", "jz~FOO"]], [1, 0, 85, 0, 0, 2, 0, 1, 17, 4, 0.0, ["mov     cs:exit_status, 1", "jmp     loc_C783"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 180, 0, 0, 2, 0, 1, 12, 17, 0.010870683447069717, ["cmp     cs:indicator_style_0, 3", "jz      short loc_BDE0"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 214, 0, 0, 7, 1, 1, 10, 17, 0.0011230753403518399, ["lea     rdi, a00; \"00\"", "mov     ecx, 2", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_BDE0"], ["lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [1, 0, 85, 0, 0, 1, 0, 0, 16, 4, 0.005718253832173098, ["mov     cs:exit_status, 2"], ["mov~<TAG>,0"]], [0, 0, 167, 0, 0, 4, 1, 1, 5, 16, 0.0030534503846461596, ["movzx   ecx, byte ptr [dirname]", "mov     r12, name", "test    cl, cl", "jnz     loc_C138"], ["movzx~ecx,<TAG>", "mov~r12,name", "test~cl,cl", "jnz~FOO"]], [0, 0, 84, 0, 0, 3, 1, 1, 17, 3, 0.013271149823394248, ["mov     r13, [f+8]", "test    r13, r13", "jnz     loc_C381"], ["mov~r13,[f+0]", "test~r13,r13", "jnz~FOO"]], [0, 0, 62, 0, 0, 2, 0, 1, 20, 0, 0.0028805596515894516, ["mov     r13d, cs:format_0", "jmp     loc_BBE4"], ["mov~r13d,<TAG>", "jmp~FOO"]], [0, 0, 77, 0, 0, 2, 1, 1, 17, 3, 0.03722437502143266, ["test    r15, r15", "jz      loc_C790"], ["test~r15,r15", "jz~FOO"]], [1, 0, 178, 0, 1, 5, 1, 2, 14, 17, 0.006412674462466994, ["mov     edi, 0Eh; type", "call    is_colored", "test    al, al", "movzx   r8d, byte ptr [rbp+stat_buf]", "jnz     short loc_BDE0"], ["mov~edi,0", "call~FOO", "test~al,al", "movzx~r8d,[yte ptr [rbp+0]", "jnz~FOO"]], [0, 0, 163, 0, 0, 2, 0, 1, 6, 20, 0.008538801824354446, ["mov     rsi, dirname", "jmp     short loc_C1A3"], ["mov~rsi,dirname", "jmp~FOO"]], [0, 0, 163, 0, 0, 1, 0, 0, 8, 20, 0.0, ["mov     rdi, rax"], ["mov~rdi,rax"]], [1, 0, 163, 1, 0, 6, 1, 1, 7, 19, 0.012911079866945578, ["lea     rax, [rdi+1]", "add     rsi, 1", "mov     [rax-1], cl", "movzx   ecx, byte ptr [rsi]", "test    cl, cl", "jnz     short loc_C1A0"], ["lea~rax,[rdi+0]", "add~rsi,0", "mov~[rax-1]+0],cl", "movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [0, 0, 160, 0, 0, 2, 0, 0, 8, 18, 0.01327114982339426, ["cmp     dirname, rsi", "jnb     short loc_C1C7"], ["cmp~dirname,rsi", "jnb~FOO"]], [1, 0, 108, 0, 1, 8, 0, 2, 11, 11, 0.03401803779019924, ["mov     rdx, [f+18h]", "mov     [rbp+format], rdx", "call    ___errno_location", "mov     rdx, [rbp+format]", "cmp     rdx, cs:unsupported_device_10314", "mov     r8, rax", "mov     dword ptr [rax], 5Fh ; '_'", "jz      short loc_BBAE"], ["mov~rdx,[f+0]", "mov~[rbp+0],rdx", "call~FOO", "mov~rdx,[rbp+0]", "cmp~rdx,<TAG>", "mov~r8,rax", "mov~<TAG>,0", "jz~FOO"]], [0, 1, 241, 1, 0, 5, 1, 0, 1, 23, 8.573094201159082e-05, ["mov     edx, 190h", "xor     esi, esi", "mov     rax, rdx", "mul     rcx", "jo      loc_CAE4"], ["mov~edx,<STR>", "xor~esi,esi", "mov~rax,rdx", "mul~,rcx", "jo~FOO"]], [0, 0, 107, 0, 0, 1, 0, 0, 12, 11, 0.0, ["mov     cs:unsupported_device_10314, rdx"], ["mov~<TAG>,rdx"]], [1, 0, 240, 0, 0, 2, 0, 1, 2, 23, 0.0, ["mov     esi, 1", "jmp     loc_B9AC"], ["mov~esi,0", "jmp~FOO"]], [1, 0, 177, 0, 1, 5, 1, 2, 15, 17, 0.0027433901443709064, ["mov     edi, 10h; type", "call    is_colored", "test    al, al", "movzx   r8d, byte ptr [rbp+stat_buf]", "jnz     short loc_BDE0"], ["mov~edi,0", "call~FOO", "test~al,al", "movzx~r8d,[yte ptr [rbp+0]", "jnz~FOO"]], [0, 0, 218, 0, 0, 3, 1, 1, 7, 19, 0.0075500382931540985, ["mov     rax, qword ptr cs:unk_227190", "test    rax, rax", "jz      short loc_C7F0"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 9, 18, 0.0012345255649669079, ["cmp     byte ptr [rsi-1], 2Fh ; '/'", "jz      short loc_C1C7"], ["cmp~[yte ptr [rsi-1]+0],0", "jz~FOO"]], [2, 0, 35, 1, 0, 7, 2, 1, 22, -1, 0.003909330955728541, ["mov     ecx, [rax]", "add     rax, 4", "lea     edx, [rcx-1010101h]", "not     ecx", "and     edx, ecx", "and     edx, 80808080h", "jz      short loc_C5AA"], ["mov~ecx,<TAG>", "add~rax,0", "lea~edx,[rcx-1010101h]+0]", "not~ecx", "and~edx,ecx", "and~edx,0", "jz~FOO"]], [1, 0, 176, 0, 1, 5, 1, 2, 16, 17, 0.0019546654778642707, ["mov     edi, 11h; type", "call    is_colored", "test    al, al", "movzx   r8d, byte ptr [rbp+stat_buf]", "jnz     short loc_BDE0"], ["mov~edi,0", "call~FOO", "test~al,al", "movzx~r8d,[yte ptr [rbp+0]", "jnz~FOO"]], [1, 0, 158, 0, 0, 2, 0, 0, 10, 18, 0.0, ["mov     byte ptr [rax], 2Fh ; '/'", "lea     rax, [rdi+2]"], ["mov~<TAG>,0", "lea~rax,[rdi+0]"]], [1, 0, 92, 0, 0, 1, 0, 0, 13, 9, 0.004732347999039814, ["mov     dword ptr [f+0BCh], 0"], ["mov~[word ptr [f+0],0"]], [0, 0, 157, 0, 0, 2, 1, 1, 7, 17, 0.03554404855800556, ["test    dl, dl", "jz      short loc_C1E2"], ["test~dl,dl", "jz~FOO"]], [1, 0, 80, 0, 2, 10, 0, 3, 17, 5, 0.005178148897500086, ["mov     rdi, r13; s", "mov     [rbp+stat_buf], rax", "call    _strlen", "mov     rdx, [rbp+stat_buf]", "lea     rdi, [rdx+rax+2]; n", "call    xmalloc", "mov     rdx, [rbp+stat_buf]", "mov     r15, rax", "cmp     byte ptr [r12+rdx-1], 2Fh ; '/'", "jz      short loc_C3D3"], ["mov~rdi,r13", "mov~[rbp+0],rax", "call~FOO", "mov~rdx,[rbp+0]", "lea~rdi,[rdx+0]", "call~FOO", "mov~rdx,[rbp+0]", "mov~r15,rax", "cmp~[yte ptr [r12+0],0", "jz~FOO"]], [1, 0, 79, 1, 0, 1, 0, 0, 18, 5, 0.0, ["add     rdx, 1; n"], ["add~rdx,0"]], [0, 0, 213, 0, 0, 1, 0, 0, 11, 20, 0.0016803264634271803, ["nop"], ["nop"]], [3, 0, 33, 2, 0, 10, 1, 0, 23, -1, 0.001131648434552999, ["mov     ecx, edx", "shr     ecx, 10h", "test    edx, 8080h", "cmovz   edx, ecx", "lea     rcx, [rax+2]", "mov     esi, edx", "cmovz   rax, rcx", "add     sil, dl", "sbb     rax, 3", "sub     eax, r13d"], ["mov~ecx,edx", "shr~ecx,0", "test~edx,0", "cmovz~edx,ecx", "lea~rcx,[rax+0]", "mov~esi,edx", "cmovz~rax,rcx", "add~sil,dl", "sbb~rax,0", "sub~eax,r13d"]], [0, 0, 78, 0, 2, 6, 0, 2, 18, 4, 0.0026748053907616337, ["mov     rsi, r12; src", "mov     rdi, r15; dest", "call    _stpncpy", "mov     rsi, r13; src", "mov     rdi, rax; dest", "call    _strcpy"], ["mov~rsi,r12", "mov~rdi,r15", "call~FOO", "mov~rsi,r13", "mov~rdi,rax", "call~FOO"]], [0, 0, 174, 0, 0, 1, 0, 0, 18, 17, 0.002914852028394088, ["xchg    ax, ax"], ["xchg~ax,ax"]]], "func_feature": [74, 114, 271, 2, 243, 396, 3, 938, 0.01944, 58, 22], "succs": [[9, 163], [0, 139], [16, 67], [2], [2], [2], [2], [17, 29], [116, 7], [29], [18, 42], [10], [10], [10, 85], [45, 46], [86, 14], [104, 67], [20, 31], [42, 19], [41], [202], [105], [21, 22], [80, 79], [25, 23], [23], [24, 25], [50, 51], [27, 62], [119, 47], [29, 190], [29, 199], [202, 29], [29], [92, 29], [200, 29], [122, 29], [40, 135], [37, 55], [1, 55], [1, 39], [49, 218], [41, 43], [41], [41], [73], [129, 45], [91], [119, 47], [3], [62], [64, 50], [3, 132], [52, 197], [52], [107, 75], [55], [173], [57], [57], [74, 149], [60, 149], [82, 69], [28, 62], [62], [226, 63], [63], [78, 70], [179], [68, 175], [78], [90], [90, 71], [73, 83], [149], [81, 155], [142, 159], [76, 173], [112, 15], [208], [79], [1, 98], [93, 134], [87], [11, 12], [11, 84], [94, 183], [88, 86], [86], [100, 102], [89, 61], [145, 101], [91], [97, 1], [104, 195], [96, 94], [94], [107, 108], [107, 103], [61, 110], [144, 99], [162], [100], [1], [72, 90], [104, 106], [104], [121, 188], [107, 230], [107], [61], [110], [72, 115], [4, 5], [113, 5], [61], [35, 36], [116], [77, 173], [120, 118], [173, 118], [147, 125], [199], [176, 38], [123, 156], [192, 130], [219], [128, 126], [237, 126], [87], [192, 137], [193, 215], [131, 127], [138, 117], [216, 133], [56, 176], [61, 111], [141, 150], [30], [201, 138], [138], [147], [160, 174], [181], [181, 143], [146, 167], [167], [149], [210, 147], [162], [149, 213], [220, 149], [242, 149], [236, 157], [153, 221], [176, 109], [1, 214], [221], [173], [174, 158], [173, 174], [], [161, 178], [199], [], [164, 166], [66, 164], [162], [105], [168, 194], [177, 189], [170, 235], [225, 53], [225, 172], [58, 59], [154, 179], [140, 175], [208], [], [185, 30], [179], [184, 136], [186, 191], [186, 182], [136], [8, 30], [232], [192, 1], [192, 187], [26, 198], [32, 31], [95], [1, 196], [217, 212], [22], [169, 194], [1, 205], [114, 6], [208], [48], [199], [154], [48, 204], [48, 33], [34, 203], [209, 1], [180, 206], [206], [211, 197], [1, 148], [1, 150], [132, 54], [217], [1, 151], [1, 239], [217], [185, 154], [44, 127], [197], [44, 13], [1, 229], [223], [223], [224, 222], [236, 231], [227, 171], [228, 165], [171], [165], [233, 1], [124, 38], [234, 236], [232, 240], [152, 1], [236], [53], [180, 207], [241, 238], [241], [38], [95], [219], [1]], "fname": "gobble_file", "n_num": 243}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 64, 0, 0, 2, 0, 1, 0, 0, 0.0862026862026862, ["cmp     byte ptr [next+13h], 2Eh ; '.'", "jz      loc_D169"], ["cmp~[yte ptr [next+0],0", "jz~FOO"]], [1, 0, 64, 0, 0, 4, 0, 1, 7, 13, 0.15799755799755802, ["lea     rbp, [next+13h]", "mov     eax, cs:ignore_mode", "cmp     eax, 2", "jz      loc_D190"], ["lea~rbp,[next+0]", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 10, 7, 0.02554945054945055, ["cmp     dword ptr [r13+0], 4Bh ; 'K'", "jz      loc_CEBD"], ["cmp~[word ptr [r13+0],0", "jz~FOO"]], [0, 0, 64, 0, 0, 3, 1, 1, 9, 8, 0.013827838827838827, ["mov     ecx, cs:exit_status", "test    ecx, ecx", "jnz     loc_D005"], ["mov~ecx,<TAG>", "test~ecx,ecx", "jnz~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 10, 8, 0.0, ["mov     cs:exit_status, 1", "jmp     loc_D005"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 64, 0, 0, 1, 0, 0, 9, 8, 0.007417582417582417, ["mov     cs:exit_status, 2"], ["mov~<TAG>,0"]], [0, 0, 64, 0, 0, 2, 1, 1, 9, 14, 0.0326007326007326, ["test    eax, eax", "jnz     loc_D190"], ["test~eax,eax", "jnz~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 12, 11, 0.031135531135531136, ["cmp     cs:print_block_size, 0", "jnz     loc_CEBD"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 11, 11, 0.03708791208791209, ["cmp     cs:sort_type_0, 0FFFFFFFFh", "jnz     loc_CEBD"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 22, 0, 1, 4, 1, 2, 8, 6, 0.14313186813186812, ["mov     rdi, dirp; dirp", "call    _closedir", "test    eax, eax", "jnz     loc_D402"], ["mov~rdi,dirp", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 64, 0, 0, 3, 1, 1, 7, 7, 0.16840659340659342, ["mov     esi, [r13+0]", "test    esi, esi", "jz      short loc_D010"], ["mov~esi,[r13+0]", "test~esi,esi", "jz~FOO"]], [0, 0, 64, 0, 0, 3, 1, 1, 10, 13, 0.026617826617826613, ["mov     r15, cs:hide_patterns", "test    r15, r15", "jnz     short loc_CE35"], ["mov~r15,<TAG>", "test~r15,r15", "jnz~FOO"]], [1, 0, 64, 1, 1, 7, 1, 2, 10, 11, 0.06105006105006105, ["mov     rcx, [rsp+388h+name]; command_line_arg", "xor     edx, edx; inode", "mov     rdi, rbp; name", "call    gobble_file", "add     [rsp+388h+total_blocks], rax", "cmp     cs:format_0, 1", "jnz     loc_CEBD"], ["mov~rcx,[rsp+0]", "xor~edx,edx", "mov~rdi,rbp", "call~FOO", "add~[rsp+0],rax", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 17, 0, 1, 3, 0, 2, 9, 5, 0.11794871794871795, ["call    sort_files", "cmp     cs:recursive, 0", "jz      short loc_D03A"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 10, 6, 0.0008241758241758242, ["mov     cs:exit_status, 2", "jmp     loc_D020"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 19, 0, 0, 3, 1, 1, 10, 6, 0.007600732600732601, ["mov     edx, cs:exit_status", "test    edx, edx", "jnz     loc_D020"], ["mov~edx,<TAG>", "test~edx,edx", "jnz~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 11, 6, 0.0, ["mov     cs:exit_status, 1", "jmp     loc_D020"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 64, 0, 0, 3, 1, 1, 12, 13, 0.001282051282051282, ["mov     r15, [r15+8]", "test    r15, r15", "jz      loc_D190"], ["mov~r15,[r15+0]", "test~r15,r15", "jz~FOO"]], [1, 0, 64, 0, 1, 6, 1, 2, 11, 12, 0.022588522588522588, ["mov     rdi, [r15]; pattern", "mov     edx, 4; flags", "mov     rsi, rbp; name", "call    _fnmatch", "test    eax, eax", "jnz     short loc_CE28"], ["mov~rdi,<TAG>", "mov~edx,0", "mov~rsi,rbp", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 66, 0, 0, 2, 0, 1, 10, 11, 0.003021978021978022, ["mov     cs:exit_status, 1", "jmp     loc_CF37"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 68, 0, 0, 3, 1, 1, 9, 12, 0.0024725274725274724, ["mov     r9d, cs:exit_status", "test    r9d, r9d", "jnz     loc_CF35"], ["mov~r9d,<TAG>", "test~r9d,r9d", "jnz~FOO"]], [1, 0, 92, 0, 2, 14, 1, 3, 4, 5, 0.02564102564102564, ["mov     rdx, [rsp+388h+dir_stat.st_ino]", "mov     edi, 10h; n", "mov     r12, [rsp+388h+dir_stat.st_dev]", "mov     [rsp+388h+total_blocks], rdx", "call    xmalloc", "mov     rdx, [rsp+388h+total_blocks]", "mov     rdi, cs:active_dir_set; table", "mov     rsi, rax; entry", "mov     [rax+8], r12", "mov     rbp, rax", "mov     [rax], rdx", "call    hash_insert", "test    rax, rax", "jz      loc_D50D"], ["mov~rdx,[rsp+0]", "mov~edi,0", "mov~r12,[rsp+0]", "mov~[rsp+0],rdx", "call~FOO", "mov~rdx,[rsp+0]", "mov~rdi,<TAG>", "mov~rsi,rax", "mov~[rax+0],r12", "mov~rbp,rax", "mov~<TAG>,rdx", "call~FOO", "test~rax,rax", "jz~FOO"]], [2, 0, 98, 0, 1, 6, 1, 2, 3, 5, 0.0057692307692307696, ["mov     esi, eax; fildes", "mov     edi, 1; ver", "call    ___fxstat", "shr     eax, 1Fh", "test    al, al", "jz      short loc_CBFB"], ["mov~esi,eax", "mov~edi,0", "call~FOO", "shr~eax,0", "test~al,al", "jz~FOO"]], [2, 0, 98, 0, 1, 6, 1, 2, 3, 5, 0.0057692307692307696, ["mov     rsi, [rsp+388h+name]; filename", "mov     edi, 1; ver", "call    ___xstat", "shr     eax, 1Fh", "test    al, al", "jnz     short loc_CB8B"], ["mov~rsi,[rsp+0]", "mov~edi,0", "call~FOO", "shr~eax,0", "test~al,al", "jnz~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 13, 11, 0.025091575091575093, ["cmp     cs:recursive, 0", "jnz     loc_CEBD"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 64, 0, 2, 5, 1, 3, 14, 12, 0.018956043956043955, ["call    sort_files", "call    print_current_files", "mov     rax, cs:cwd_n_used", "test    rax, rax", "jz      short loc_D26D"], ["call~FOO", "call~FOO", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 90, 0, 0, 2, 0, 1, 5, 4, 0.03296703296703297, ["cmp     rbp, rax", "jz      short loc_CC97"], ["cmp~rbp,rax", "jz~FOO"]], [3, 0, 21, 0, 3, 16, 3, 4, 9, 7, 0.020054945054945057, ["lea     rsi, aClosingDirecto; \"closing directory %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, [rsp+388h+name]; arg", "mov     edi, 4; s", "mov     rbx, rax", "call    quotearg_style", "mov     esi, [r13+0]; errnum", "mov     rcx, rax", "xor     edi, edi; status", "xor     eax, eax", "mov     rdx, rbx; format", "call    _error", "cmp     byte ptr [rsp+388h+var_36C], 0", "jz      short loc_D4A4"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,[rsp+0]", "mov~edi,0", "mov~rbx,rax", "call~FOO", "mov~esi,[r13+0]", "mov~rcx,rax", "xor~edi,edi", "xor~eax,eax", "mov~rdx,rbx", "call~FOO", "cmp~[yte ptr [rsp+0],0", "jz~FOO"]], [0, 0, 15, 0, 0, 3, 1, 1, 10, 4, 0.10659340659340659, ["mov     eax, cs:format_0", "test    eax, eax", "jz      short loc_D051"], ["mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 0, 16, 0, 1, 3, 1, 1, 10, 5, 0.0, ["mov     rdi, [rsp+388h+name]; dirname", "xor     esi, esi; command_line_arg", "call    extract_dirs_from_files"], ["mov~rdi,[rsp+0]", "xor~esi,esi", "call~FOO"]], [0, 0, 64, 0, 0, 1, 0, 1, 12, 11, 0.01407203907203907, ["jmp     short loc_CEBD"], ["jmp~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 11, 3, 0.03470695970695971, ["cmp     cs:print_block_size, 0", "jz      loc_D127"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 11, 8, 0.05934065934065934, ["cmp     cs:dired, 0", "jnz     loc_D47A"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 64, 0, 2, 4, 0, 2, 13, 14, 0.0056776556776556774, ["lea     rdi, color_indicator; ind", "call    put_indicator", "lea     rdi, ind; ind", "call    put_indicator"], ["lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO"]], [0, 0, 64, 0, 0, 1, 0, 1, 12, 15, 0.00641025641025641, ["jmp     loc_CE50"], ["jmp~FOO"]], [1, 0, 64, 1, 3, 10, 0, 4, 16, 12, 0.0056776556776556774, ["mov     r15, [r12]", "add     r12, 8", "mov     rdi, [r15]; ptr", "call    free", "mov     rdi, [r15+8]; ptr", "call    free", "mov     rdi, [r15+10h]; ptr", "call    free", "cmp     r12, rbp", "jnz     short loc_D246"], ["mov~r15,<TAG>", "add~r12,0", "mov~rdi,<TAG>", "call~FOO", "mov~rdi,[r15+0]", "call~FOO", "mov~rdi,[r15+0]", "call~FOO", "cmp~r12,rbp", "jnz~FOO"]], [0, 0, 64, 0, 0, 2, 0, 0, 15, 13, 0.00641025641025641, ["mov     next, cs:sorted_file", "lea     rbp, [r12+rax*8]"], ["mov~next,<TAG>", "lea~rbp,<TAG>"]], [3, 0, 73, 1, 1, 7, 0, 2, 6, 13, 0.0, ["mov     rcx, cs:stdout@@GLIBC_2_2_5; stream", "lea     rdi, asc_1E664; \"  \"", "mov     edx, 2; n", "mov     esi, 1; size", "call    _fwrite_unlocked", "add     cs:dired_pos, 2", "jmp     loc_CF28"], ["mov~rcx,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "mov~esi,0", "call~FOO", "add~<TAG>,0", "jmp~FOO"]], [2, 0, 74, 0, 0, 3, 0, 1, 5, 13, 0.04624542124542125, ["cmp     cs:dired, 0", "mov     cs:first_10256, 0", "jnz     loc_D450"], ["cmp~<TAG>,0", "mov~<TAG>,0", "jnz~FOO"]], [2, 0, 4, 0, 5, 19, 5, 5, 6, 3, 0.001098901098901099, ["mov     rdi, rbp; ptr", "call    free", "mov     rdx, [rsp+388h+name]; arg", "mov     esi, 3; s", "xor     edi, edi; n", "call    quotearg_n_style_colon", "lea     rsi, aSNotListingAlr; \"%s: not listing already-listed director\"...", "mov     realname, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     edi, edi; status", "mov     rdx, rax; format", "mov     rcx, rbx", "xor     esi, esi; errnum", "xor     eax, eax", "call    _error", "mov     rdi, dirp; dirp", "call    _closedir"], ["mov~rdi,rbp", "call~FOO", "mov~rdx,[rsp+0]", "mov~esi,0", "xor~edi,edi", "call~FOO", "lea~rsi,<TAG>", "mov~realname,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~edi,edi", "mov~rdx,rax", "mov~rcx,rbx", "xor~esi,esi", "xor~eax,eax", "call~FOO", "mov~rdi,dirp", "call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.001098901098901099, ["mov     cs:exit_status, 2", "jmp     loc_D140"], ["mov~<TAG>,0", "jmp~FOO"]], [3, 0, 6, 0, 3, 16, 3, 4, 1, 3, 0.0005494505494505495, ["lea     rsi, aCannotOpenDire; \"cannot open directory %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, [rsp+388h+name]; arg", "mov     edi, 4; s", "mov     realname, rax", "call    quotearg_style", "mov     esi, [r13+0]; errnum", "mov     rcx, rax", "xor     edi, edi; status", "xor     eax, eax", "mov     rdx, rbx; format", "call    _error", "cmp     byte ptr [rsp+388h+var_36C], 0", "jnz     loc_CC88"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,[rsp+0]", "mov~edi,0", "mov~realname,rax", "call~FOO", "mov~esi,[r13+0]", "mov~rcx,rax", "xor~edi,edi", "xor~eax,eax", "mov~rdx,rbx", "call~FOO", "cmp~[yte ptr [rsp+0],0", "jnz~FOO"]], [0, 0, 64, 0, 2, 10, 2, 3, 12, 13, 0.03504273504273504, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "call    _fflush_unlocked", "lea     rsi, caught_signals; set", "xor     edi, edi; how", "mov     rdx, rbx; oset", "call    _sigprocmask", "mov     ebp, cs:interrupt_signal", "mov     eax, cs:stop_signal_count", "test    eax, eax", "jz      loc_CFA0"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~rdx,rbx", "call~FOO", "mov~ebp,<TAG>", "mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 11, 14, 0.03724053724053724, ["cmp     cs:used_color, 0", "jz      short loc_CE68"], ["cmp~<TAG>,0", "jz~FOO"]], [3, 0, 12, 1, 1, 7, 0, 2, 12, 8, 0.0, ["mov     rcx, cs:stdout@@GLIBC_2_2_5; stream", "lea     rdi, asc_1E664; \"  \"", "mov     edx, 2; n", "mov     esi, 1; size", "call    _fwrite_unlocked", "add     cs:dired_pos, 2", "jmp     loc_D05E"], ["mov~rcx,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "mov~esi,0", "call~FOO", "add~<TAG>,0", "jmp~FOO"]], [2, 0, 64, 1, 0, 3, 0, 0, 13, 12, 0.013904151404151405, ["sub     eax, 1", "mov     ebp, 13h", "mov     cs:stop_signal_count, eax"], ["sub~eax,0", "mov~ebp,0", "mov~<TAG>,eax"]], [0, 1, 9, 0, 0, 3, 0, 0, 13, 6, 0.01607142857142857, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 20h ; ' '"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,<STR>"]], [1, 0, 11, 1, 3, 15, 1, 3, 12, 7, 0.04652014652014652, ["lea     rsi, aTotal; \"total\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, cs:stdout@@GLIBC_2_2_5; stream", "mov     rbx, rax", "mov     rdi, p; s", "call    _fputs_unlocked", "mov     rdi, p; s", "call    _strlen", "mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "add     cs:dired_pos, rax", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_D4C1"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,<TAG>", "mov~rbx,rax", "mov~rdi,p", "call~FOO", "mov~rdi,p", "call~FOO", "mov~rdi,<TAG>", "add~<TAG>,rax", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [1, 0, 87, 1, 0, 7, 0, 1, 6, 14, 0.03882783882783883, ["mov     rax, cs:dev_ino_obstack.next_free", "mov     rdx, cs:dev_ino_obstack.chunk_limit", "mov     rbp, [rsp+388h+dir_stat.st_ino]", "mov     r12, [rsp+388h+dir_stat.st_dev]", "sub     rdx, rax", "cmp     rdx, 0Fh", "ja      short loc_CCD0"], ["mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~rbp,[rsp+0]", "mov~r12,[rsp+0]", "sub~rdx,rax", "cmp~rdx,0", "ja~FOO"]], [1, 0, 64, 0, 2, 6, 1, 2, 14, 11, 0.032844932844932846, ["mov     edi, ebp; sig", "call    _raise", "xor     edx, edx; oset", "mov     rsi, rbx; set", "mov     edi, 2; how", "call    _sigprocmask"], ["mov~edi,ebp", "call~FOO", "xor~edx,edx", "mov~rsi,rbx", "mov~edi,0", "call~FOO"]], [0, 0, 64, 0, 1, 4, 1, 2, 13, 12, 0.013904151404151405, ["xor     esi, esi; handler", "mov     edi, ebp; sig", "call    _signal", "jmp     loc_CEA7"], ["xor~esi,esi", "mov~edi,ebp", "call~FOO", "jmp~FOO"]], [0, 0, 64, 0, 0, 1, 0, 1, 11, 14, 0.001282051282051282, ["jmp     loc_D190"], ["jmp~FOO"]], [0, 0, 64, 0, 0, 3, 1, 1, 10, 10, 0.19908424908424907, ["mov     eax, cs:interrupt_signal", "test    eax, eax", "jnz     short loc_CED5"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [0, 0, 64, 0, 0, 2, 1, 1, 9, 11, 0.04636752136752137, ["test    eax, eax", "jz      loc_CEBD"], ["test~eax,eax", "jz~FOO"]], [2, 0, 64, 0, 0, 5, 1, 1, 10, 11, 0.007692307692307693, ["xor     eax, eax", "cmp     byte ptr [next+14h], 2Eh ; '.'", "setz    al", "cmp     byte ptr [next+rax+14h], 0", "jz      loc_CEBD"], ["xor~eax,eax", "cmp~[yte ptr [next+0],0", "setz~al", "cmp~[yte ptr [next+0],0", "jz~FOO"]], [1, 0, 64, 0, 1, 6, 1, 2, 10, 11, 0.024877899877899873, ["mov     rdi, [r15]; pattern", "mov     edx, 4; flags", "mov     rsi, rbp; name", "call    _fnmatch", "test    eax, eax", "jz      loc_CEBD"], ["mov~rdi,<TAG>", "mov~edx,0", "mov~rsi,rbp", "call~FOO", "test~eax,eax", "jz~FOO"]], [13, 0, 64, 0, 0, 14, 0, 1, 15, 11, 0.016758241758241758, ["mov     cs:cwd_n_used, 0", "mov     cs:cwd_some_quoted, 0", "mov     cs:any_has_acl, 0", "mov     cs:inode_number_width, 0", "mov     cs:block_size_width, 0", "mov     cs:nlink_width, 0", "mov     cs:owner_width, 0", "mov     cs:group_width, 0", "mov     cs:author_width, 0", "mov     cs:scontext_width, 0", "mov     cs:major_device_number_width, 0", "mov     cs:minor_device_number_width, 0", "mov     cs:file_size_width, 0", "jmp     loc_CEBD"], ["mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 86, 0, 1, 4, 0, 1, 7, 14, 0.0, ["lea     rdi, dev_ino_obstack; h", "mov     esi, 10h; length", "call    _obstack_newchunk", "mov     rax, cs:dev_ino_obstack.next_free"], ["lea~rdi,<TAG>", "mov~esi,0", "call~FOO", "mov~rax,<TAG>"]], [0, 1, 9, 0, 1, 3, 0, 2, 13, 6, 0.01607142857142857, ["mov     esi, 20h ; ' '; int", "call    ___overflow", "jmp     loc_D0B2"], ["mov~esi,<STR>", "call~FOO", "jmp~FOO"]], [0, 0, 64, 0, 0, 3, 1, 1, 11, 9, 0.15531135531135531, ["mov     eax, cs:stop_signal_count", "test    eax, eax", "jz      loc_CDD0"], ["mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [2, 0, 64, 1, 0, 5, 1, 1, 9, 12, 0.06251526251526252, ["movzx   eax, byte ptr [next+12h]", "xor     esi, esi", "sub     eax, 1", "cmp     al, 0Dh", "ja      short loc_D1DD"], ["movzx~eax,[yte ptr [next+0]", "xor~esi,esi", "sub~eax,0", "cmp~al,0", "ja~FOO"]], [0, 0, 64, 0, 0, 3, 1, 1, 8, 13, 0.08775946275946275, ["mov     r15, cs:ignore_patterns", "test    r15, r15", "jz      short loc_D1C1"], ["mov~r15,<TAG>", "test~r15,r15", "jz~FOO"]], [0, 0, 64, 0, 0, 3, 1, 1, 11, 12, 0.0018315018315018315, ["mov     r15, [r15+8]", "test    r15, r15", "jnz     short loc_D1A0"], ["mov~r15,[r15+0]", "test~r15,r15", "jnz~FOO"]], [1, 0, 6, 0, 1, 3, 0, 2, 15, 4, 0.005357142857142857, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     loc_D11F"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [1, 1, 8, 2, 3, 18, 0, 3, 14, 5, 0.025915750915750917, ["mov     r8, cs:output_block_size; to_block_size", "mov     edx, cs:human_output_opts; opts", "lea     rsi, [rsp+388h+buf]; buf", "mov     rdi, [rsp+388h+total_blocks]; n", "mov     ecx, 200h; from_block_size", "add     cs:dired_pos, 1", "call    human_readable", "mov     rsi, cs:stdout@@GLIBC_2_2_5; stream", "mov     p, rax", "mov     rdi, p; s", "call    _fputs_unlocked", "mov     rdi, p; s", "call    _strlen", "mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "add     cs:dired_pos, rax", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_D4D0"], ["mov~r8,<TAG>", "mov~edx,<TAG>", "lea~rsi,[rsp+0]", "mov~rdi,[rsp+0]", "mov~ecx,<STR>", "add~<TAG>,0", "call~FOO", "mov~rsi,<TAG>", "mov~p,rax", "mov~rdi,p", "call~FOO", "mov~rdi,p", "call~FOO", "mov~rdi,<TAG>", "add~<TAG>,rax", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [0, 0, 85, 0, 0, 4, 0, 0, 7, 13, 0.05311355311355311, ["lea     rdx, [rax+10h]", "mov     cs:dev_ino_obstack.next_free, rdx", "mov     [rax+8], r12", "mov     [rax], rbp"], ["lea~rdx,[rax+0]", "mov~<TAG>,rdx", "mov~[rax+0],r12", "mov~<TAG>,rbp"]], [1, 0, 76, 0, 1, 3, 0, 2, 6, 15, 0.004212454212454212, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     loc_CF0C"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [0, 0, 78, 0, 0, 4, 0, 0, 5, 16, 0.004395604395604396, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_D4DF"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [1, 0, 79, 0, 0, 2, 0, 1, 4, 14, 0.019230769230769232, ["cmp     cs:first_10256, 0", "jnz     short loc_CF14"], ["cmp~<TAG>,0", "jnz~FOO"]], [14, 0, 81, 0, 0, 15, 0, 1, 3, 11, 0.0945054945054945, ["cmp     cs:recursive, 0", "mov     cs:cwd_n_used, 0", "mov     cs:cwd_some_quoted, 0", "mov     cs:any_has_acl, 0", "mov     cs:inode_number_width, 0", "mov     cs:block_size_width, 0", "mov     cs:nlink_width, 0", "mov     cs:owner_width, 0", "mov     cs:group_width, 0", "mov     cs:author_width, 0", "mov     cs:scontext_width, 0", "mov     cs:major_device_number_width, 0", "mov     cs:minor_device_number_width, 0", "mov     cs:file_size_width, 0", "jnz     loc_CEE3"], ["cmp~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "jnz~FOO"]], [1, 0, 80, 0, 0, 2, 0, 1, 4, 10, 0.08141025641025641, ["cmp     cs:print_dir_name, 0", "jnz     loc_CEE3"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 84, 0, 0, 3, 1, 1, 2, 12, 0.075, ["mov     rax, cs:cwd_n_used", "test    rax, rax", "jz      short loc_CD27"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 101, 0, 0, 3, 0, 1, 1, 7, 0.008882783882783882, ["cmp     cs:active_dir_set, 0", "mov     name_0, dirp", "jz      loc_CCE2"], ["cmp~<TAG>,0", "mov~name_0,dirp", "jz~FOO"]], [3, 0, 64, 0, 3, 16, 3, 4, 8, 9, 0.02847985347985348, ["lea     rsi, aReadingDirecto; \"reading directory %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, [rsp+388h+name]; arg", "mov     edi, 4; s", "mov     rbp, rax", "call    quotearg_style", "mov     esi, [r13+0]; errnum", "mov     rcx, rax", "xor     edi, edi; status", "xor     eax, eax", "mov     rdx, rbp; format", "call    _error", "cmp     [rsp+388h+command_line_arg], 0", "jz      loc_D2F0"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,[rsp+0]", "mov~edi,0", "mov~rbp,rax", "call~FOO", "mov~esi,[r13+0]", "mov~rcx,rax", "xor~edi,edi", "xor~eax,eax", "mov~rdx,rbp", "call~FOO", "cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 83, 0, 0, 3, 0, 0, 3, 13, 0.0010073260073260072, ["mov     r12, cs:sorted_file", "lea     rbp, [r12+rax*8]", "nop     dword ptr [rax+00000000h]"], ["mov~r12,<TAG>", "lea~rbp,<TAG>", "nop~[word ptr [rax+0]"]], [1, 0, 76, 0, 0, 3, 0, 0, 6, 15, 0.004212454212454212, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [1, 0, 75, 1, 0, 1, 0, 0, 7, 14, 0.020604395604395604, ["add     cs:dired_pos, 1"], ["add~<TAG>,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 3, 1, 0.01868131868131868, ["mov     rax, [rsp+388h+var_40]", "xor     rax, fs:28h", "jnz     loc_D512"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 5, 3, 0.001510989010989011, ["mov     r10d, cs:exit_status", "test    r10d, r10d", "jnz     loc_CBD8"], ["mov~r10d,<TAG>", "test~r10d,r10d", "jnz~FOO"]], [3, 0, 7, 0, 3, 16, 3, 4, 4, 4, 0.0029304029304029304, ["lea     rsi, aCannotDetermin; \"cannot determine device and inode of %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, [rsp+388h+name]; arg", "mov     edi, 4; s", "mov     realname, rax", "call    quotearg_style", "mov     esi, [r13+0]; errnum", "mov     rcx, rax", "xor     edi, edi; status", "xor     eax, eax", "mov     rdx, rbx; format", "call    _error", "cmp     byte ptr [rsp+388h+var_36C], 0", "jz      loc_D30D"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,[rsp+0]", "mov~edi,0", "mov~realname,rax", "call~FOO", "mov~esi,[r13+0]", "mov~rcx,rax", "xor~edi,edi", "xor~eax,eax", "mov~rdx,rbx", "call~FOO", "cmp~[yte ptr [rsp+0],0", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 12, 2, 0.031043956043956045, ["cmp     cs:cwd_n_used, 0", "jz      short loc_D140"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 5, 1, 0, 1, 0, 0, 16, 3, 0.003663003663003663, ["add     cs:dired_pos, 1"], ["add~<TAG>,0"]], [1, 0, 6, 0, 0, 3, 0, 0, 15, 4, 0.005357142857142857, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [1, 0, 83, 1, 3, 10, 0, 4, 4, 12, 0.007509157509157509, ["mov     r15, [r12]", "add     r12, 8", "mov     rdi, [r15]; ptr", "call    free", "mov     rdi, [r15+8]; ptr", "call    free", "mov     rdi, [r15+10h]; ptr", "call    free", "cmp     rbp, r12", "jnz     short loc_CD00"], ["mov~r15,<TAG>", "add~r12,0", "mov~rdi,<TAG>", "call~FOO", "mov~rdi,[r15+0]", "call~FOO", "mov~rdi,[r15+0]", "call~FOO", "cmp~rbp,r12", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 6, 3, 0.0, ["mov     cs:exit_status, 1", "jmp     loc_CBD8"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 72, 0, 0, 2, 0, 1, 6, 12, 0.05576923076923077, ["cmp     cs:print_hyperlink, 0", "jnz     loc_D32C"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 66, 0, 0, 1, 1, 0, 7, 11, 0.027884615384615386, ["xor     ebp, ebp"], ["xor~ebp,ebp"]], [0, 0, 3, 0, 1, 2, 0, 1, 13, 2, 0.0, ["call    print_current_files", "nop     word ptr [rax+rax+00000000h]"], ["call~FOO", "nop~[ord ptr [rax+0]"]], [1, 0, 71, 0, 1, 6, 1, 2, 7, 11, 0.03328754578754579, ["mov     rdi, [rsp+388h+name]; name", "mov     esi, 2; can_mode", "call    canonicalize_filename_mode", "test    rax, rax", "mov     rbp, rax", "jnz     loc_CF37"], ["mov~rdi,[rsp+0]", "mov~esi,0", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jnz~FOO"]], [2, 0, 105, 1, 2, 22, 2, 3, 0, 4, 0.0, ["push    r15", "push    r14", "mov     r14, name_0", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, realname", "sub     rsp, 358h", "mov     [rsp+388h+name], name_0", "mov     [rsp+388h+var_36C], edx", "mov     [rsp+388h+command_line_arg], dl", "mov     rax, fs:28h", "mov     [rsp+388h+var_40], rax", "xor     eax, eax", "call    ___errno_location", "mov     rdi, name_0; name", "mov     dword ptr [rax], 0", "mov     r13, rax", "call    _opendir", "test    dirp, dirp", "jz      loc_D3A0"], ["push~r15", "push~r14", "mov~r14,name_0", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,realname", "sub~rsp,0", "mov~[rsp+0],name_0", "mov~[rsp+0],edx", "mov~[rsp+0],dl", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~rdi,name_0", "mov~<TAG>,0", "mov~r13,rax", "call~FOO", "test~dirp,dirp", "jz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 6, 2, 0.002197802197802198, ["mov     rdi, dirp; dirp", "call    _closedir", "jmp     loc_D140"], ["mov~rdi,dirp", "call~FOO", "jmp~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 2, 2, 0.0004578754578754579, ["mov     r11d, cs:exit_status", "test    r11d, r11d", "jnz     loc_D140"], ["mov~r11d,<TAG>", "test~r11d,r11d", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 2, 0.0, ["mov     cs:exit_status, 1", "jmp     loc_D140"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 358h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 100, 0, 1, 5, 1, 2, 2, 6, 0.0029304029304029304, ["mov     rdi, dirp; dirp", "call    _dirfd", "test    eax, eax", "lea     rdx, [rsp+388h+dir_stat]; stat_buf", "js      short loc_CBE5"], ["mov~rdi,dirp", "call~FOO", "test~eax,eax", "lea~rdx,[rsp+0]", "js~FOO"]], [3, 0, 70, 0, 3, 16, 3, 4, 8, 12, 0.006684981684981685, ["lea     rsi, aErrorCanonical; \"error canonicalizing %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, [rsp+388h+name]; arg", "mov     edi, 4; s", "mov     r12, rax", "call    quotearg_style", "mov     esi, [r13+0]; errnum", "mov     rcx, rax", "xor     edi, edi; status", "xor     eax, eax", "mov     rdx, r12; format", "call    _error", "cmp     byte ptr [rsp+388h+var_36C], 0", "jz      loc_D4EE"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,[rsp+0]", "mov~edi,0", "mov~r12,rax", "call~FOO", "mov~esi,[r13+0]", "mov~rcx,rax", "xor~edi,edi", "xor~eax,eax", "mov~rdx,r12", "call~FOO", "cmp~[yte ptr [rsp+0],0", "jz~FOO"]], [0, 0, 64, 0, 0, 1, 0, 0, 11, 14, 0.002564102564102564, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 66, 0, 0, 2, 0, 1, 9, 11, 0.006043956043956044, ["mov     cs:exit_status, 2", "jmp     loc_CF37"], ["mov~<TAG>,0", "jmp~FOO"]], [6, 0, 65, 2, 3, 22, 2, 4, 8, 10, 0.08333333333333333, ["test    realname, realname", "cmovz   realname, [rsp+388h+name]", "mov     rsi, cs:dirname_quoting_options; options", "sub     rsp, 8", "lea     r9, subdired_obstack; stack", "mov     r8d, 1; allow_pad", "push    absolute_name; absolute_name", "xor     ecx, ecx; color", "mov     edx, 0FFFFFFFFh; needs_general_quoting", "mov     rdi, rbx; name", "call    quote_name", "mov     rdi, absolute_name; ptr", "call    free", "mov     rcx, cs:stdout@@GLIBC_2_2_5; stream", "lea     rdi, aValidArguments+13h; ptr", "mov     edx, 2; n", "mov     esi, 1; size", "call    _fwrite_unlocked", "pop     rdi", "add     cs:dired_pos, 2", "pop     r8", "jmp     loc_CDBE"], ["test~realname,realname", "cmovz~realname,[rsp+0]", "mov~rsi,<TAG>", "sub~rsp,0", "lea~r9,<TAG>", "mov~r8d,0", "push~absolute_name", "xor~ecx,ecx", "mov~edx,0", "mov~rdi,rbx", "call~FOO", "mov~rdi,absolute_name", "call~FOO", "mov~rcx,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "mov~esi,0", "call~FOO", "pop~rdi", "add~<TAG>,0", "pop~r8", "jmp~FOO"]], [0, 0, 64, 0, 0, 1, 0, 0, 9, 12, 0.020757020757020756, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 64, 0, 1, 6, 1, 2, 6, 8, 0.3336385836385837, ["mov     dword ptr [r13+0], 0", "mov     rdi, dirp; dirp", "call    _readdir", "test    rax, rax", "mov     r12, rax", "jz      loc_CFB0"], ["mov~[word ptr [r13+0],0", "mov~rdi,dirp", "call~FOO", "test~rax,rax", "mov~r12,rax", "jz~FOO"]], [1, 0, 64, 0, 0, 3, 0, 0, 5, 9, 0.1739010989010989, ["lea     rbx, [rsp+388h+dir_stat]", "mov     [rsp+388h+total_blocks], 0", "nop     dword ptr [rax+00h]"], ["lea~rbx,[rsp+0]", "mov~[rsp+0],0", "nop~[word ptr [rax+0]"]], [1, 0, 4, 0, 0, 1, 0, 0, 5, 3, 0.0009615384615384616, ["mov     cs:exit_status, 2"], ["mov~<TAG>,0"]], [0, 0, 64, 0, 0, 3, 0, 0, 10, 12, 0.0, ["lea     rcx, CSWTCH_920", "movzx   eax, al", "mov     esi, [rcx+rax*4]; type"], ["lea~rcx,<TAG>", "movzx~eax,al", "mov~esi,<TAG>"]]], "func_feature": [69, 61, 147, 2, 106, 164, 1, 527, 0.03274, 53, 17], "succs": [[53, 6], [0, 61], [9, 52], [2, 4], [2], [2], [11, 61], [24, 52], [52, 7], [27, 13], [9, 73], [18, 51], [8, 52], [28, 29], [13], [16, 13], [13], [18, 61], [17, 30], [100], [88, 19], [26, 77], [81, 21], [81, 21], [25, 52], [56, 36], [48, 39], [14, 15], [32, 31], [28], [52], [32, 82], [44, 47], [42], [33], [56, 35], [35], [87], [37, 87], [40], [79], [40, 93], [50, 45], [42, 34], [47], [49], [64], [58, 46], [57, 65], [52], [49], [61], [43, 59], [52, 54], [98, 52], [52, 62], [52], [65], [64], [43, 102], [105, 12], [60, 101], [60, 55], [83], [84, 63], [71], [76], [66, 75], [67, 38], [68, 70], [68, 103], [74, 69], [96, 71], [3, 5], [85], [76], [38], [], [], [78, 95], [92, 86], [80, 104], [89, 79], [82], [83], [85, 69], [92], [88, 90], [100], [79], [97, 100], [72, 41], [79], [94, 79], [79], [], [22, 23], [99, 20], [61], [100], [103], [55], [1, 10], [102], [92], [12]], "fname": "print_dir", "n_num": 106}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 6, 0, 1, 6, 1, 2, 0, 0, 0.03676470588235294, ["lea     rsi, aEn; \"en_\"", "mov     edx, 3; n", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_DC7E"], ["lea~rsi,<TAG>", "mov~edx,0", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 7, 0, 3, 12, 3, 4, 5, 3, 0.10110294117647059, ["call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, package; \"GNU \"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "xor     esi, esi; locale", "mov     edi, 5; category", "call    _setlocale", "test    rax, rax", "jz      short loc_DC43"], ["call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 13, 0, 1, 4, 1, 2, 3, 4, 0.17279411764705882, ["mov     rdi, rbp; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_DB08"], ["mov~rdi,rbp", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 13, 0, 0, 40, 0, 1, 2, 5, 0.13970588235294118, ["lea     rax, asc_1EB71+1; \"[\"", "lea     rcx, domainname; \"coreutils\"", "lea     rbx, [rsp+0B8h+var_A8]", "mov     [rsp+0B8h+var_B0], rax", "lea     rax, aTestInvocation; \"test invocation\"", "movq    xmm1, [rsp+0B8h+var_B0]", "movdqa  xmm0, xmm1", "mov     [rsp+0B8h+var_B0], rax", "lea     rax, aMultiCallInvoc; \"Multi-call invocation\"", "movq    rsi, xmm1", "movhps  xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rcx", "movaps  [rsp+0B8h+var_A8], xmm0", "movq    xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "lea     rax, aSha224sum; \"sha224sum\"", "movhps  xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "lea     rax, aSha256sum; \"sha256sum\"", "movaps  [rsp+0B8h+var_98], xmm0", "movq    xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "movhps  xmm0, cs:off_226A08", "lea     rax, aSha384sum; \"sha384sum\"", "movaps  [rsp+0B8h+var_88], xmm0", "movq    xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "movhps  xmm0, cs:off_226A08", "lea     rax, aSha512sum; \"sha512sum\"", "movaps  [rsp+0B8h+var_78], xmm0", "movq    xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "movhps  xmm0, cs:off_226A08", "movaps  [rsp+0B8h+var_68], xmm0", "movq    xmm0, [rsp+0B8h+var_B0]", "movhps  xmm0, cs:off_226A08", "movaps  [rsp+0B8h+var_58], xmm0", "pxor    xmm0, xmm0", "movaps  [rsp+0B8h+var_48], xmm0", "jmp     loc_DB14"], ["lea~rax,<TAG>", "lea~rcx,<TAG>", "lea~rbx,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,<TAG>", "movq~xmm1,[rsp+0]", "movdqa~xmm0,xmm1", "mov~[rsp+0],rax", "lea~rax,<TAG>", "movq~rsi,xmm1", "movhps~xmm0,[rsp+0]", "mov~[rsp+0],rcx", "movaps~[rsp+0],xmm0", "movq~xmm0,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,<TAG>", "movhps~xmm0,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,<TAG>", "movaps~[rsp+0],xmm0", "movq~xmm0,[rsp+0]", "mov~[rsp+0],rax", "movhps~xmm0,<TAG>", "lea~rax,<TAG>", "movaps~[rsp+0],xmm0", "movq~xmm0,[rsp+0]", "mov~[rsp+0],rax", "movhps~xmm0,<TAG>", "lea~rax,<TAG>", "movaps~[rsp+0],xmm0", "movq~xmm0,[rsp+0]", "mov~[rsp+0],rax", "movhps~xmm0,<TAG>", "movaps~[rsp+0],xmm0", "movq~xmm0,[rsp+0]", "movhps~xmm0,<TAG>", "movaps~[rsp+0],xmm0", "pxor~xmm0,xmm0", "movaps~[rsp+0],xmm0", "jmp~FOO"]], [1, 0, 13, 1, 0, 4, 1, 1, 4, 4, 0.0, ["add     rbx, 10h", "mov     rsi, [rbx]; s2", "test    rsi, rsi", "jz      short loc_DB20"], ["add~rbx,0", "mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [1, 0, 4, 0, 1, 6, 1, 2, 6, 1, 0.029411764705882353, ["lea     rsi, aEn; \"en_\"", "mov     edx, 3; n", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     loc_DC81"], ["lea~rsi,<TAG>", "mov~edx,0", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 5, 0, 3, 12, 3, 4, 5, 2, 0.10110294117647059, ["call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, package; \"GNU \"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "xor     esi, esi; locale", "mov     edi, 5; category", "call    _setlocale", "test    rax, rax", "jz      short loc_DB8A"], ["call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 3, 0, 2, 9, 1, 3, 7, 0, 0.01838235294117647, ["mov     r13, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aReportAnyTrans; \"Report any translation bugs to <https:/\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, r13; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "jmp     loc_DB8A"], ["mov~r13,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,r13", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 7, 1, 0.014705882352941176, ["mov     rbx, rbp"], ["mov~rbx,rbp"]], [2, 0, 2, 0, 2, 14, 2, 2, 6, -1, 0.05330882352941176, ["lea     rsi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rcx, rbp", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "cmp     rbp, rbx", "lea     rcx, aMultiCallInvoc+0Ah; \" invocation\"", "lea     rbp, a8+6; \"\"", "cmovz   rbp, rcx"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rbp", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "cmp~rbp,rbx", "lea~rcx,<TAG>", "lea~rbp,<TAG>", "cmovz~rbp,rcx"]], [32, 0, 15, 0, 62, 252, 32, 63, 1, 6, 0.051470588235294115, ["lea     rsi, aUsageSOptionFi; \"Usage: %s [OPTION]... [FILE]...\\n\"", "xor     edi, edi; domainname", "lea     rbp, domainname+7; \"ls\"", "call    _dcgettext", "mov     rdx, rbx", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aListInformatio; \"List information about the FILEs (the c\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aMandatoryArgum; \"\\nMandatory arguments to long options a\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aAAllDoNotIgnor; \"  -a, --all                  do not ign\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aBlockSizeSizeW; \"      --block-size=SIZE      with -l, s\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aBIgnoreBackups; \"  -B, --ignore-backups       do not lis\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aCListEntriesBy; \"  -C                         list entri\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aFDoNotSortEnab; \"  -f                         do not sor\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aGLikeLButDoNot; \"  -g                         like -l, b\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aGroupDirectori; \"      --group-directories-first\\n      \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aGNoGroupInALon; \"  -G, --no-group             in a long \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aHHumanReadable; \"  -h, --human-readable       with -l an\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aHDereferenceCo; \"  -H, --dereference-command-line\\n     \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aHyperlinkWhenH; \"      --hyperlink[=WHEN]     hyperlink \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aIndicatorStyle; \"      --indicator-style=WORD  append in\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aKKibibytesDefa; \"  -k, --kibibytes            default to\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aLUseALongListi; \"  -l                         use a long\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNNumericUidGid; \"  -n, --numeric-uid-gid      like -l, b\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aQHideControlCh; \"  -q, --hide-control-chars   print ? in\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aRReverseRevers; \"  -r, --reverse              reverse or\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aSSortByFileSiz; \"  -S                         sort by fi\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aTimeStyleTimeS; \"      --time-style=TIME_STYLE  time/dat\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aTSortByModific; \"  -t                         sort by mo\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aUWithLtSortByA; \"  -u                         with -lt: \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aWWidthColsSetO; \"  -w, --width=COLS           set output\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aHelpDisplayThi; \"      --help     display this help and \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aVersionOutputV; \"      --version  output version informa\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aTheSizeArgumen; \"\\nThe SIZE argument is an integer and o\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aTheTimeStyleAr; \"\\nThe TIME_STYLE argument can be full-i\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aUsingColorToDi; \"\\nUsing color to distinguish file types\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aExitStatus0IfO; \"\\nExit status:\\n 0  if OK,\\n 1  if mino\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     eax, cs:ls_mode", "cmp     eax, 1", "jz      short loc_DA1F"], ["lea~rsi,<TAG>", "xor~edi,edi", "lea~rbp,<TAG>", "call~FOO", "mov~rdx,rbx", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [2, 0, 17, 1, 0, 13, 2, 1, 0, 7, 0.0, ["push    r13", "push    r12", "mov     edx, 5; category", "push    rbp", "push    rbx", "mov     r12d, edi", "sub     rsp, 98h", "mov     rbx, cs:program_name", "mov     rax, fs:28h", "mov     [rsp+0B8h+var_30], rax", "xor     eax, eax", "test    edi, edi", "jz      short loc_D582"], ["push~r13", "push~r12", "mov~edx,0", "push~rbp", "push~rbx", "mov~r12d,edi", "sub~rsp,0", "mov~rbx,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~edi,edi", "jz~FOO"]], [1, 0, 10, 0, 0, 6, 2, 1, 4, 3, 0.21691176470588236, ["mov     rbx, [rbx+8]", "xor     edi, edi; domainname", "mov     edx, 5; category", "lea     rsi, aSOnlineHelpS; \"\\n%s online help: <%s>\\n\"", "test    rbx, rbx", "jz      loc_DBF8"], ["mov~rbx,[rbx+0]", "xor~edi,edi", "mov~edx,0", "lea~rsi,<TAG>", "test~rbx,rbx", "jz~FOO"]], [2, 0, 1, 0, 2, 11, 2, 3, 7, -1, 0.051470588235294115, ["lea     rsi, aOrAvailableLoc; \"or available locally via: info '(coreut\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rbp", "mov     rsi, rax", "mov     rdx, rbx", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_D57A"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rbp", "mov~rsi,rax", "mov~rdx,rbx", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 2, 0, 2, 13, 2, 3, 6, -1, 0.03860294117647059, ["lea     rsi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbx, rbp", "call    _dcgettext", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rcx, rbp", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "lea     rbp, aMultiCallInvoc+0Ah; \" invocation\"", "call    ___printf_chk", "jmp     loc_DBCB"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbx,rbp", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rbp", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "lea~rbp,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 2, 9, 2, 2, 1, -1, 0.003676470588235294, ["lea     rsi, aTrySHelpForMor; \"Try '%s --help' for more information.\\n\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     rcx, rbx", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~rcx,rbx", "mov~esi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 14, 0, 0, 4, 0, 0, 2, 6, 0.0, ["cmp     eax, 2", "lea     rbp, aVdir; \"vdir\"", "lea     rax, aVdir+1; \"dir\"", "cmovz   rbp, rax"], ["cmp~eax,0", "lea~rbp,<TAG>", "lea~rax,<TAG>", "cmovz~rbp,rax"]], [0, 0, 0, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     edi, r12d; status", "call    _exit"], ["mov~edi,r12d", "call~FOO"]]], "func_feature": [82, 55, 95, 9, 18, 26, 3, 418, 0.05719, 58, 2], "succs": [[8, 14], [0, 14], [12, 4], [2], [2, 12], [9, 7], [9, 5], [9], [7], [13], [16, 3], [10, 15], [1, 6], [17], [13], [17], [3], []], "fname": "usage", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.011363636363636364, ["mov     byte ptr [buffer+link_length+0], 0", "jmp     short loc_DD3B"], ["mov~[yte ptr [buffer+0],0", "jmp~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 3, 3, 0.32196969696969696, ["cmp     buf_size, link_length", "ja      short loc_DD80"], ["cmp~buf_size,link_length", "ja~FOO"]], [0, 0, 12, 0, 1, 4, 0, 2, 4, 2, 0.26515151515151514, ["mov     rdi, buffer; ptr", "call    free", "cmp     buf_size, r14", "ja      short loc_DD50"], ["mov~rdi,buffer", "call~FOO", "cmp~buf_size,r14", "ja~FOO"]], [5, 0, 12, 1, 0, 15, 0, 0, 0, 6, 0.0, ["push    r15", "push    r14", "mov     eax, 401h", "push    r13", "push    r12", "mov     r13, file", "push    rbp", "push    rbx", "lea     rbx, [size+1]", "mov     r14, 3FFFFFFFFFFFFFFFh", "mov     r15, 7FFFFFFFFFFFFFFEh", "sub     rsp, 8", "cmp     size, 401h", "cmovnb  rbx, rax", "nop     dword ptr [rax+00000000h]"], ["push~r15", "push~r14", "mov~eax,0", "push~r13", "push~r12", "mov~r13,file", "push~rbp", "push~rbx", "lea~rbx,[size+0]", "mov~r14,0", "mov~r15,0", "sub~rsp,0", "cmp~size,0", "cmovnb~rbx,rax", "nop~[word ptr [rax+0]"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, rbp", "pop     buf_size", "pop     rbp", "pop     r12", "pop     file", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,rbp", "pop~buf_size", "pop~rbp", "pop~r12", "pop~file", "pop~r14", "pop~r15", "retn"]], [0, 0, 12, 0, 1, 5, 1, 2, 1, 5, 0.21212121212121213, ["mov     rdi, buf_size; size", "call    malloc", "test    rax, rax", "mov     rbp, rax", "jz      short loc_DD3B"], ["mov~rdi,buf_size", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [0, 0, 1, 0, 1, 4, 1, 2, 4, -1, 0.011363636363636364, ["mov     rdi, buffer; ptr", "xor     ebp, ebp", "call    free", "jmp     short loc_DD3B"], ["mov~rdi,buffer", "xor~ebp,ebp", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 1, 4, 1, 2, 6, 0, 0.007575757575757576, ["call    ___errno_location", "xor     ebp, ebp", "mov     dword ptr [rax], 0Ch", "jmp     short loc_DD3B"], ["call~FOO", "xor~ebp,ebp", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 12, 1, 1, 6, 1, 2, 5, 5, 0.07575757575757576, ["add     buf_size, buf_size", "mov     rdi, buf_size; size", "call    malloc", "test    rax, rax", "mov     buffer, rax", "jnz     short loc_DD00"], ["add~buf_size,buf_size", "mov~rdi,buf_size", "call~FOO", "test~rax,rax", "mov~buffer,rax", "jnz~FOO"]], [1, 0, 12, 0, 1, 3, 0, 2, 3, 4, 0.06439393939393939, ["call    ___errno_location", "cmp     dword ptr [rax], 22h ; '\"'", "jz      short loc_DD16"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 12, 0, 1, 7, 1, 2, 2, 4, 0.3560606060606061, ["mov     rdx, buf_size; len", "mov     rsi, buffer; buf", "mov     rdi, file; path", "call    _readlink", "test    rax, rax", "mov     r12, rax", "js      short loc_DD68"], ["mov~rdx,buf_size", "mov~rsi,buffer", "mov~rdi,file", "call~FOO", "test~rax,rax", "mov~r12,rax", "js~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 5, 1, 0.15151515151515152, ["cmp     buf_size, r15", "ja      short loc_DD90"], ["cmp~buf_size,r15", "ja~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 6, 6, 0.09848484848484848, ["mov     buf_size, 7FFFFFFFFFFFFFFFh", "jmp     short loc_DCF0"], ["mov~buf_size,0", "jmp~FOO"]]], "func_feature": [7, 5, 18, 0, 13, 19, 2, 65, 0.12121, 0, 3], "succs": [[4], [0, 2], [8, 11], [5], [], [10, 4], [4], [4], [10, 4], [1, 6], [9, 1], [12, 7], [5]], "fname": "areadlink_with_size", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     edi, 1", "jmp     usage"], ["mov~edi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[1], []], "fname": "__argmatch_die", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 9, 0, 1, 4, 0, 2, 0, 0, 0.08823529411764705, ["mov     rdi, r13; s", "call    _strlen", "cmp     rax, arglen", "jz      loc_DEE8"], ["mov~rdi,r13", "call~FOO", "cmp~rax,arglen", "jz~FOO"]], [0, 0, 9, 0, 1, 6, 1, 2, 2, 2, 0.11029411764705882, ["mov     rsi, [rsp+58h+arg]; s2", "mov     rdx, arglen; n", "mov     rdi, r13; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_DE2C"], ["mov~rsi,<TAG>", "mov~rdx,arglen", "mov~rdi,r13", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 1, -1, 0.0, ["add     rsp, 28h", "mov     rax, r15", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arglist", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,r15", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arglist", "pop~r15", "retn"]], [2, 0, 17, 1, 1, 17, 1, 2, 0, 4, 0.0, ["push    r15", "push    r14", "mov     r14, arglist", "push    r13", "push    r12", "mov     r12, vallist_0", "push    rbp", "push    rbx", "mov     r15, 0FFFFFFFFFFFFFFFFh", "sub     rsp, 28h", "mov     [rsp+58h+arg], arg_0", "mov     [rsp+58h+vallist], vallist_0", "mov     [rsp+58h+valsize], valsize_0", "call    _strlen", "mov     r13, [arglist]", "test    r13, r13", "jz      loc_DED0"], ["push~r15", "push~r14", "mov~r14,arglist", "push~r13", "push~r12", "mov~r12,vallist_0", "push~rbp", "push~rbx", "mov~r15,0", "sub~rsp,0", "mov~<TAG>,arg_0", "mov~[rsp+0],vallist_0", "mov~[rsp+0],valsize_0", "call~FOO", "mov~r13,<TAG>", "test~r13,r13", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, 0, 0.014705882352941176, ["mov     matchind, i", "jmp     short loc_DED0"], ["mov~matchind,i", "jmp~FOO"]], [2, 0, 1, 0, 0, 3, 0, 0, 4, -1, 0.03676470588235294, ["cmp     [rsp+58h+ambiguous], 0", "mov     rax, 0FFFFFFFFFFFFFFFEh", "cmovnz  matchind, rax"], ["cmp~[rsp+0],0", "mov~rax,0", "cmovnz~matchind,rax"]], [0, 0, 9, 0, 1, 4, 0, 2, 4, 1, 0.09558823529411764, ["mov     rdi, r13; s", "call    _strlen", "cmp     rax, arglen", "jz      short loc_DEE8"], ["mov~rdi,r13", "call~FOO", "cmp~rax,arglen", "jz~FOO"]], [1, 0, 9, 2, 1, 11, 1, 1, 5, 4, 0.016544117647058824, ["mov     rdx, [rsp+58h+valsize]; n", "mov     rsi, r12; s2", "mov     rdi, rdx", "imul    rdi, matchind", "add     rdi, [rsp+58h+vallist]; s1", "call    _memcmp", "test    eax, eax", "movzx   eax, [rsp+58h+ambiguous]", "mov     ecx, 1", "cmovnz  eax, ecx", "mov     [rsp+58h+ambiguous], al"], ["mov~rdx,[rsp+0]", "mov~rsi,r12", "mov~rdi,rdx", "imul~rdi,matchind", "add~rdi,[rsp+0]", "call~FOO", "test~eax,eax", "movzx~eax,[rsp+0]", "mov~ecx,0", "cmovnz~eax,ecx", "mov~[rsp+0],al"]], [1, 0, 9, 0, 0, 2, 0, 1, 4, 5, 0.05514705882352941, ["cmp     matchind, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_DE00"], ["cmp~matchind,0", "jnz~FOO"]], [0, 0, 9, 0, 1, 6, 1, 2, 3, 2, 0.125, ["mov     rsi, [rsp+58h+arg]; s2", "mov     rdx, arglen; n", "mov     rdi, r13; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_DE7D"], ["mov~rsi,<TAG>", "mov~rdx,arglen", "mov~rdi,r13", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 9, 2, 0, 5, 1, 1, 3, 3, 0.09191176470588235, ["add     i, 1", "add     r12, [rsp+58h+valsize]", "mov     r13, [arglist+i*8]", "test    r13, r13", "jz      loc_DEC0"], ["add~i,0", "add~r12,[rsp+0]", "mov~r13,<TAG>", "test~r13,r13", "jz~FOO"]], [1, 0, 9, 1, 0, 4, 1, 1, 4, 3, 0.03676470588235294, ["add     i, 1", "mov     r13, [arglist+i*8]", "test    r13, r13", "jz      short loc_DEC0"], ["add~i,0", "mov~r13,<TAG>", "test~r13,r13", "jz~FOO"]], [1, 0, 9, 1, 0, 5, 1, 1, 6, 3, 0.025735294117647058, ["mov     matchind, i", "add     matchind, 1", "mov     r13, [arglist+i*8]", "test    r13, r13", "jnz     short loc_DE8A"], ["mov~matchind,i", "add~matchind,0", "mov~r13,<TAG>", "test~r13,r13", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 5, 4, 0.0625, ["cmp     matchind, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_DE78"], ["cmp~matchind,0", "jnz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 5, 4, 0.016544117647058824, ["mov     matchind, i", "jmp     short loc_DE2C"], ["mov~matchind,i", "jmp~FOO"]], [1, 0, 9, 0, 0, 1, 0, 0, 6, 4, 0.007352941176470588, ["mov     [rsp+58h+ambiguous], 1"], ["mov~[rsp+0],0"]], [1, 0, 16, 0, 0, 5, 2, 1, 1, 3, 0.05514705882352941, ["xor     ebx, ebx", "test    vallist_0, vallist_0", "mov     rbp, arglen", "mov     [rsp+58h+ambiguous], 0", "jnz     short loc_DE42"], ["xor~ebx,ebx", "test~vallist_0,vallist_0", "mov~rbp,arglen", "mov~[rsp+0],0", "jnz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 1, 2, 3, 0.044117647058823525, ["jmp     loc_DE8A"], ["jmp~FOO"]]], "func_feature": [6, 9, 20, 0, 18, 28, 3, 89, 0.04902, 0, 8], "succs": [[8, 4], [0, 10], [], [16, 2], [2], [2], [4, 13], [10], [14, 7], [11, 6], [1, 5], [9, 5], [9, 5], [12, 15], [10], [11], [1, 17], [9]], "fname": "argmatch", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 2, 0, 1, 4, 1, 1, 0, 0, 0.08333333333333333, ["lea     value, aAmbiguousArgum; \"ambiguous argument %s for %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax"], ["lea~value,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbx,rax"]], [2, 0, 4, 0, 0, 8, 0, 1, 0, 1, 0.0, ["cmp     problem, 0FFFFFFFFFFFFFFFFh", "push    r12", "mov     edx, 5; category", "push    rbp", "mov     r12, value", "push    rbx", "mov     rbp, context", "jz      short loc_DF50"], ["cmp~problem,0", "push~r12", "mov~edx,0", "push~rbp", "mov~r12,value", "push~rbx", "mov~rbp,context", "jz~FOO"]], [2, 0, 1, 0, 2, 18, 4, 3, 2, -1, 0.25, ["mov     rsi, context; arg", "mov     edi, 1; n", "call    quote_n", "mov     rdx, value; arg", "mov     context, rax", "mov     esi, 8; s", "xor     edi, edi; n", "call    quotearg_n_style", "mov     r8, rbp", "mov     rdx, format; format", "mov     rcx, rax", "pop     format", "pop     rbp", "pop     value", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "jmp     _error"], ["mov~rsi,context", "mov~edi,0", "call~FOO", "mov~rdx,value", "mov~context,rax", "mov~esi,0", "xor~edi,edi", "call~FOO", "mov~r8,rbp", "mov~rdx,format", "mov~rcx,rax", "pop~format", "pop~rbp", "pop~value", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "jmp~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 1, 0, 0.08333333333333333, ["lea     value, aInvalidArgumen; \"invalid argument %s for %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax", "jmp     short loc_DF16"], ["lea~value,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbx,rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []]], "func_feature": [4, 6, 7, 0, 5, 5, 1, 35, 0.08333, 2, 0], "succs": [[2], [0, 3], [4], [2], []], "fname": "argmatch_invalid", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[2, 0, 9, 2, 2, 13, 2, 3, 0, 0, 0.061111111111111116, ["mov     rdi, r15; arg", "add     i, 1", "add     rbp, valsize", "call    quote", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "lea     rdx, aS_0; \", %s\"", "mov     rcx, rax", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "mov     r15, [arglist+i*8]", "test    r15, r15", "jnz     short loc_DFF8"], ["mov~rdi,r15", "add~i,0", "add~rbp,valsize", "call~FOO", "mov~rdi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~r15,<TAG>", "test~r15,r15", "jnz~FOO"]], [0, 0, 9, 0, 1, 6, 1, 2, 3, 3, 0.08888888888888889, ["mov     rdx, valsize; n", "mov     rsi, rbp; s2", "mov     rdi, last_val; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_DFC0"], ["mov~rdx,valsize", "mov~rsi,rbp", "mov~rdi,last_val", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [2, 0, 1, 1, 0, 9, 0, 1, 2, 0, 0.08888888888888889, ["add     rsp, 8", "mov     esi, 0Ah; int", "pop     rbx", "pop     rbp", "pop     valsize", "pop     r13", "pop     arglist", "pop     r15", "jmp     ___overflow"], ["add~rsp,0", "mov~esi,0", "pop~rbx", "pop~rbp", "pop~valsize", "pop~r13", "pop~arglist", "pop~r15", "jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 5, 2, 0.044444444444444446, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [2, 0, 0, 1, 0, 11, 0, 0, 2, -1, 0.0, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah", "add     rsp, 8", "pop     rbx", "pop     rbp", "pop     valsize", "pop     r13", "pop     arglist", "pop     r15", "retn"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~valsize", "pop~r13", "pop~arglist", "pop~r15", "retn"]], [0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 0.23333333333333334, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_E078"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 2, 3, 0.18888888888888888, ["test    i, i", "jz      short loc_DFC0"], ["test~i,i", "jz~FOO"]], [2, 0, 10, 1, 2, 21, 2, 3, 0, 2, 0.0, ["push    r15", "push    r14", "mov     r14, arglist", "push    r13", "push    r12", "xor     edi, edi; domainname", "push    rbp", "push    rbx", "mov     rbp, vallist", "lea     vallist, aValidArguments_0; \"Valid arguments are:\"", "mov     r12, valsize", "mov     edx, 5; category", "sub     rsp, 8", "mov     rbx, cs:stderr@@GLIBC_2_2_5", "call    _dcgettext", "mov     rdi, rax; s", "mov     rsi, rbx; stream", "call    _fputs_unlocked", "mov     r15, [arglist]", "test    r15, r15", "jz      loc_E048"], ["push~r15", "push~r14", "mov~r14,arglist", "push~r13", "push~r12", "xor~edi,edi", "push~rbp", "push~rbx", "mov~rbp,vallist", "lea~vallist,<TAG>", "mov~r12,valsize", "mov~edx,0", "sub~rsp,0", "mov~rbx,<TAG>", "call~FOO", "mov~rdi,rax", "mov~rsi,rbx", "call~FOO", "mov~r15,<TAG>", "test~r15,r15", "jz~FOO"]], [2, 0, 9, 2, 2, 14, 2, 3, 3, 2, 0.1388888888888889, ["mov     rdi, r15; arg", "add     i, 1", "mov     last_val, rbp", "call    quote", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "lea     rdx, aS_1; \"\\n  - %s\"", "mov     rcx, rax", "mov     esi, 1", "xor     eax, eax", "add     rbp, valsize", "call    ___fprintf_chk", "mov     r15, [arglist+i*8]", "test    r15, r15", "jz      short loc_E048"], ["mov~rdi,r15", "add~i,0", "mov~last_val,rbp", "call~FOO", "mov~rdi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~esi,0", "xor~eax,eax", "add~rbp,valsize", "call~FOO", "mov~r15,<TAG>", "test~r15,r15", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 2, 1, 1, 4, 0.05555555555555556, ["xor     r13d, r13d", "xor     ebx, ebx", "jmp     short loc_DFF8"], ["xor~r13d,r13d", "xor~ebx,ebx", "jmp~FOO"]]], "func_feature": [7, 10, 14, 0, 11, 15, 1, 84, 0.08182, 4, 7], "succs": [[4, 7], [0, 9], [], [2], [6], [], [3, 5], [1, 9], [10, 6], [6, 7], [7]], "fname": "argmatch_valid", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.04940711462450593, ["cmp     r14, 0FFFFFFFFFFFFFFFFh", "jz      loc_E270"], ["cmp~r14,0", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 5, 2, 0.1442687747035573, ["cmp     [rsp+78h+var_61], 0", "jnz     loc_E1FD"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 2, 0, 1, 6, 1, 2, 1, 0, 0.005928853754940711, ["lea     rsi, aInvalidArgumen; \"invalid argument %s for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax", "jmp     short loc_E213"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rbx,rax", "jmp~FOO"]], [0, 1, 23, 1, 1, 19, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r13, arglist", "push    rbp", "push    rbx", "mov     rbx, vallist_0", "sub     rsp, 48h", "mov     [rsp+78h+context], context_0", "mov     context_0, arg_0; s", "mov     [rsp+78h+arg], arg_0", "mov     [rsp+78h+vallist], vallist_0", "mov     [rsp+78h+valsize], valsize_0", "mov     [rsp+78h+exit_fn], exit_fn_0", "call    _strlen", "mov     r15, [arglist+0]", "test    r15, r15", "jz      loc_E270"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r13,arglist", "push~rbp", "push~rbx", "mov~rbx,vallist_0", "sub~rsp,<STR>", "mov~[rsp+0],context_0", "mov~context_0,arg_0", "mov~[rsp+0],arg_0", "mov~[rsp+0],vallist_0", "mov~[rsp+0],valsize_0", "mov~[rsp+0],exit_fn_0", "call~FOO", "mov~r15,[arglist+0]", "test~r15,r15", "jz~FOO"]], [1, 0, 2, 0, 1, 5, 1, 1, 6, -1, 0.03359683794466403, ["lea     rsi, aAmbiguousArgum; \"ambiguous argument %s for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rbx,rax"]], [0, 1, 0, 1, 0, 9, 0, 0, 3, -1, 0.0, ["add     rsp, 48h", "mov     rax, r14", "pop     rbx", "pop     rbp", "pop     r12", "pop     arglist", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "mov~rax,r14", "pop~rbx", "pop~rbp", "pop~r12", "pop~arglist", "pop~r14", "pop~r15", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 5, -1, 0.017786561264822132, ["mov     r14, rbx", "jmp     short loc_E18A"], ["mov~r14,rbx", "jmp~FOO"]], [3, 0, 1, 0, 5, 23, 4, 6, 2, -1, 0.005928853754940711, ["mov     rsi, [rsp+78h+context]; arg", "mov     edi, 1; n", "mov     r14, 0FFFFFFFFFFFFFFFFh", "call    quote_n", "mov     rdx, [rsp+78h+arg]; arg", "mov     rbp, rax", "mov     esi, 8; s", "xor     edi, edi; n", "call    quotearg_n_style", "mov     r8, rbp", "mov     rcx, rax", "mov     rdx, rbx; format", "xor     eax, eax", "xor     esi, esi; errnum", "xor     edi, edi; status", "call    _error", "mov     rdx, [rsp+78h+valsize]; valsize", "mov     rsi, [rsp+78h+vallist]; vallist", "mov     rdi, arglist; arglist", "call    argmatch_valid", "mov     rax, [rsp+78h+exit_fn]", "call    rax", "jmp     loc_E18A"], ["mov~rsi,[rsp+0]", "mov~edi,0", "mov~r14,0", "call~FOO", "mov~rdx,[rsp+0]", "mov~rbp,rax", "mov~esi,0", "xor~edi,edi", "call~FOO", "mov~r8,rbp", "mov~rcx,rax", "mov~rdx,rbx", "xor~eax,eax", "xor~esi,esi", "xor~edi,edi", "call~FOO", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,arglist", "call~FOO", "mov~rax,[rsp+0]", "call~rax", "jmp~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 5, 3, 0.07312252964426877, ["mov     r14, [rsp+78h+var_60]"], ["mov~r14,[rsp+0]"]], [1, 0, 14, 2, 0, 5, 1, 1, 4, 4, 0.10869565217391304, ["add     rbx, 1", "add     r12, valsize_0", "mov     r14, [arglist+rbx*8+0]", "test    r14, r14", "jz      short loc_E170"], ["add~rbx,0", "add~r12,valsize_0", "mov~r14,[arglist+0]", "test~r14,r14", "jz~FOO"]], [0, 0, 14, 0, 1, 4, 0, 2, 4, 7, 0.06027667984189723, ["mov     rdi, r14; s", "call    _strlen", "cmp     rbp, rax", "jz      short loc_E1A0"], ["mov~rdi,r14", "call~FOO", "cmp~rbp,rax", "jz~FOO"]], [0, 0, 13, 0, 1, 4, 0, 2, 4, 6, 0.05632411067193675, ["mov     rdi, r15; s", "call    _strlen", "cmp     rbp, rax", "jz      short loc_E1A0"], ["mov~rdi,r15", "call~FOO", "cmp~rbp,rax", "jz~FOO"]], [1, 0, 14, 2, 1, 11, 1, 1, 6, 5, 0.018774703557312252, ["imul    rax, r15", "mov     rdi, [rsp+78h+vallist]", "mov     rdx, r15; n", "mov     rsi, r12; s2", "add     rdi, rax; s1", "call    _memcmp", "test    eax, eax", "movzx   eax, [rsp+78h+var_61]", "mov     ecx, 1", "cmovnz  eax, ecx", "mov     [rsp+78h+var_61], al"], ["imul~rax,r15", "mov~rdi,[rsp+0]", "mov~rdx,r15", "mov~rsi,r12", "add~rdi,rax", "call~FOO", "test~eax,eax", "movzx~eax,[rsp+0]", "mov~ecx,0", "cmovnz~eax,ecx", "mov~[rsp+0],al"]], [1, 0, 14, 0, 0, 3, 0, 1, 5, 6, 0.043478260869565216, ["mov     rax, [rsp+78h+var_60]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_E100"], ["mov~rax,[rsp+0]", "cmp~rax,0", "jnz~FOO"]], [0, 0, 14, 0, 1, 6, 1, 2, 3, 5, 0.0859683794466403, ["mov     rsi, [rsp+78h+arg]; s2", "mov     rdx, rbp; n", "mov     rdi, r14; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_E12A"], ["mov~rsi,[rsp+0]", "mov~rdx,rbp", "mov~rdi,r14", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 6, 5, 0.018774703557312252, ["mov     [rsp+78h+var_60], rbx", "jmp     short loc_E12A"], ["mov~[rsp+0],rbx", "jmp~FOO"]], [2, 0, 13, 0, 0, 5, 1, 1, 2, 5, 0.042490118577075096, ["mov     [rsp+78h+var_61], 0", "xor     ebx, ebx", "mov     r14, 0FFFFFFFFFFFFFFFFh", "mov     r12, [rsp+78h+arg]", "jmp     short loc_E1D3"], ["mov~[rsp+0],0", "xor~ebx,ebx", "mov~r14,0", "mov~r12,[rsp+0]", "jmp~FOO"]], [0, 0, 22, 0, 0, 3, 1, 1, 1, 6, 0.037549407114624504, ["test    vallist_0, vallist_0", "mov     rbp, rax", "jz      loc_E1A8"], ["test~vallist_0,vallist_0", "mov~rbp,rax", "jz~FOO"]], [1, 0, 13, 0, 0, 1, 0, 0, 6, 4, 0.016798418972332016, ["mov     [rsp+78h+var_61], 1"], ["mov~[rsp+0],0"]], [1, 0, 13, 0, 0, 2, 0, 1, 5, 5, 0.04150197628458498, ["cmp     r14, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_E1C0"], ["cmp~r14,0", "jnz~FOO"]], [2, 0, 14, 0, 0, 8, 1, 1, 2, 6, 0.030632411067193673, ["mov     r14, 0FFFFFFFFFFFFFFFFh", "mov     r12, vallist_0", "mov     [rsp+78h+var_61], 0", "mov     [rsp+78h+var_60], r14", "xor     ebx, ebx", "mov     r14, r15", "mov     r15, [rsp+78h+valsize]", "jmp     short loc_E13B"], ["mov~r14,0", "mov~r12,vallist_0", "mov~[rsp+0],0", "mov~[rsp+0],r14", "xor~ebx,ebx", "mov~r14,r15", "mov~r15,[rsp+0]", "jmp~FOO"]], [1, 0, 13, 1, 0, 4, 1, 1, 4, 3, 0.10869565217391304, ["add     rbx, 1", "mov     r15, [arglist+rbx*8+0]", "test    r15, r15", "jz      short loc_E175"], ["add~rbx,0", "mov~r15,[arglist+0]", "test~r15,r15", "jz~FOO"]], [0, 0, 13, 0, 1, 6, 1, 2, 3, 4, 0.09189723320158102, ["mov     rdx, rbp; n", "mov     rsi, r12; s2", "mov     rdi, r15; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_E1C5"], ["mov~rdx,rbp", "mov~rsi,r12", "mov~rdi,r15", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 13, 0, 0, 2, 0, 1, 6, 4, 0.016798418972332016, ["mov     r14, rbx", "jmp     short loc_E1C5"], ["mov~r14,rbx", "jmp~FOO"]]], "func_feature": [13, 15, 32, 1, 24, 35, 7, 135, 0.0462, 2, 7], "succs": [[2, 5], [0, 4], [7], [17, 2], [7], [], [5], [5], [1], [8, 14], [13, 6], [19, 6], [9], [12, 15], [9, 10], [9], [22], [16, 20], [21], [18, 23], [14], [1, 22], [11, 21], [21]], "fname": "__xargmatch_internal", "n_num": 24}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 3, 0, 1, 6, 1, 2, 0, 0, 0.25, ["mov     rdx, valsize; n", "mov     rsi, rbp; s2", "mov     rdi, value; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_E2B0"], ["mov~rdx,valsize", "mov~rsi,rbp", "mov~rdi,value", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 1, 2, 0.16666666666666666, ["mov     r12, valsize", "mov     r13, value", "mov     rbp, vallist", "lea     rbx, [arglist+8]", "jmp     short loc_E2BF"], ["mov~r12,valsize", "mov~r13,value", "mov~rbp,vallist", "lea~rbx,[arglist+0]", "jmp~FOO"]], [1, 0, 3, 2, 0, 5, 1, 1, 3, 1, 0.0, ["mov     r14, [rbx]", "add     rbp, valsize", "add     rbx, 8", "test    r14, r14", "jz      short loc_E2D1"], ["mov~r14,<TAG>", "add~rbp,valsize", "add~rbx,0", "test~r14,r14", "jz~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 1, 0, 0.0, ["pop     rbx", "mov     rax, r14", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "retn"], ["pop~rbx", "mov~rax,r14", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "retn"]], [0, 0, 4, 0, 0, 8, 1, 1, 0, 1, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     r14, [arglist]", "test    r14, r14", "jz      short loc_E2D1"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~r14,<TAG>", "test~r14,r14", "jz~FOO"]]], "func_feature": [1, 3, 5, 0, 5, 7, 0, 31, 0.08333, 0, 2], "succs": [[2, 3], [0], [0, 3], [], [1, 3]], "fname": "argmatch_to_argument", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [0, 0, 7, 0, 0, 2, 0, 1, 0, 0, 0.0, ["cmp     p1, p2", "jz      short loc_E340"], ["cmp~p1,p2", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 2, 0, 0.023809523809523808, ["jmp     short loc_E340"], ["jmp~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 1, 0, 0.11904761904761904, ["test    n, n", "jnz     short loc_E300"], ["test~n,n", "jnz~FOO"]], [5, 0, 4, 3, 0, 14, 0, 1, 2, 0, 0.16666666666666666, ["movzx   eax, byte ptr [p1]", "mov     ecx, eax", "lea     r8d, [rax+20h]", "sub     ecx, 41h ; 'A'", "cmp     cl, 1Ah", "movzx   ecx, byte ptr [p2]", "cmovb   eax, r8d", "mov     r8d, ecx", "lea     r10d, [rcx+20h]", "sub     r8d, 41h ; 'A'", "cmp     r8b, 1Ah", "cmovb   ecx, r10d", "sub     rdx, 1", "jnz     short loc_E2F0"], ["movzx~eax,<TAG>", "mov~ecx,eax", "lea~r8d,[rax+0]", "sub~ecx,0", "cmp~cl,0", "movzx~ecx,<TAG>", "cmovb~eax,r8d", "mov~r8d,ecx", "lea~r10d,[rcx+0]", "sub~r8d,0", "cmp~r8b,0", "cmovb~ecx,r10d", "sub~rdx,0", "jnz~FOO"]], [2, 0, 4, 2, 0, 4, 0, 1, 4, 0, 0.023809523809523808, ["add     p1, 1", "add     p2, 1", "cmp     al, cl", "jnz     short loc_E32F"], ["add~p1,0", "add~p2,0", "cmp~al,cl", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 3, 0, 0.07142857142857142, ["test    al, al", "jz      short loc_E32F"], ["test~al,al", "jz~FOO"]], [0, 0, 0, 1, 0, 4, 0, 0, 3, 0, 0.0, ["movzx   ecx, cl", "movzx   eax, al", "sub     eax, ecx", "retn"], ["movzx~ecx,cl", "movzx~eax,al", "sub~eax,ecx", "retn"]]], "func_feature": [0, 3, 6, 0, 8, 11, 1, 31, 0.0506, 0, 6], "succs": [[], [0, 3], [0], [2, 4], [6, 7], [4, 7], [5, 7], []], "fname": "c_strncasecmp", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[2, 0, 85, 0, 0, 4, 1, 1, 0, 0, 0.22039473684210525, ["mov     eax, [rsp+118h+st.st_mode]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      short loc_E630"], ["mov~eax,[rsp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 85, 0, 0, 2, 1, 1, 18, 6, 0.2630482456140351, ["test    al, al", "jz      loc_E600"], ["test~al,al", "jz~FOO"]], [1, 0, 85, 0, 0, 2, 0, 1, 20, 6, 0.03119517543859649, ["cmp     eax, 4000h", "jz      loc_E555"], ["cmp~eax,0", "jz~FOO"]], [4, 0, 85, 0, 0, 11, 1, 0, 5, 6, 0.08223684210526316, ["cmp     [rsp+118h+can_mode], 2", "movzx   edx, byte ptr [name_0]", "mov     [rsp+118h+name], name_0", "mov     [rsp+118h+ht], 0", "mov     [rsp+118h+extra_len], 0", "mov     [rsp+118h+extra_buf], 0", "setz    al", "and     eax, r13d", "mov     byte ptr [rsp+118h+saved_errno], al", "lea     rax, [rsp+118h+st]", "mov     [rsp+118h+stat_buf], rax"], ["cmp~[rsp+0],0", "movzx~edx,<TAG>", "mov~[rsp+0],name_0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "setz~al", "and~eax,r13d", "mov~[yte ptr [rsp+0],al", "lea~rax,[rsp+0]", "mov~[rsp+0],rax"]], [1, 1, 86, 0, 1, 7, 0, 2, 4, 7, 0.03640350877192983, ["mov     edi, 1000h; n", "call    xmalloc", "mov     rbp, rax", "lea     rbx, [rname+1000h]", "lea     r14, [dest+1]", "mov     byte ptr [rname], 2Fh ; '/'", "jmp     loc_E3E0"], ["mov~edi,<STR>", "call~FOO", "mov~rbp,rax", "lea~rbx,[rname+0]", "lea~r14,[dest+0]", "mov~<TAG>,0", "jmp~FOO"]], [0, 1, 86, 1, 1, 7, 0, 2, 6, 7, 0.009265350877192982, ["mov     rdi, rname; p", "mov     esi, 1000h; n", "call    xrealloc", "mov     rname, rax", "add     r14, p", "lea     rbx, [p+1000h]", "jmp     loc_E3E0"], ["mov~rdi,rname", "mov~esi,<STR>", "call~FOO", "mov~rname,rax", "add~r14,p", "lea~rbx,[p+0]", "jmp~FOO"]], [0, 0, 86, 1, 0, 2, 0, 0, 6, 7, 0.009265350877192982, ["add     r14, rname", "mov     rbx, dest"], ["add~r14,rname", "mov~rbx,dest"]], [0, 0, 85, 0, 0, 1, 0, 1, 21, 7, 0.002028508771929825, ["jmp     loc_E543"], ["jmp~FOO"]], [0, 0, 85, 0, 0, 2, 1, 1, 6, 5, 0.17719298245614035, ["test    dl, dl", "jz      loc_E565"], ["test~dl,dl", "jz~FOO"]], [0, 0, 85, 0, 0, 3, 0, 1, 13, 6, 0.04199561403508772, ["mov     edx, ecx", "mov     r15, end", "jmp     loc_E41D"], ["mov~edx,ecx", "mov~r15,end", "jmp~FOO"]], [0, 0, 85, 0, 0, 5, 0, 0, 15, 6, 0.054385964912280704, ["lea     rax, [rname+1]", "mov     edx, ecx", "mov     start, end", "cmp     dest, rax", "jbe     loc_E41D"], ["lea~rax,[rname+0]", "mov~edx,ecx", "mov~start,end", "cmp~dest,rax", "jbe~FOO"]], [1, 0, 85, 0, 0, 3, 0, 1, 17, 6, 0.02817982456140351, ["cmp     byte ptr [r14-2], 2Fh ; '/'", "mov     r14, dest", "jz      loc_E41D"], ["cmp~[yte ptr [r14-2]+0],0", "mov~r14,dest", "jz~FOO"]], [0, 0, 85, 0, 0, 2, 0, 1, 17, 6, 0.0042763157894736845, ["mov     r14, dest", "jmp     loc_E41D"], ["mov~r14,dest", "jmp~FOO"]], [1, 0, 85, 0, 0, 2, 0, 1, 7, 8, 0.4106359649122807, ["cmp     dl, 2Fh ; '/'", "jnz     short loc_E445"], ["cmp~dl,0", "jnz~FOO"]], [0, 0, 85, 0, 0, 4, 1, 1, 18, 5, 0.2881030701754386, ["movzx   edx, byte ptr [r13+0]", "mov     r15, r13", "test    dl, dl", "jnz     loc_E425"], ["movzx~edx,[yte ptr [r13+0]", "mov~r15,r13", "test~dl,dl", "jnz~FOO"]], [0, 0, 85, 0, 0, 1, 0, 0, 32, 8, 0.009210526315789475, ["mov     rax, dest"], ["mov~rax,dest"]], [0, 0, 85, 0, 0, 1, 0, 1, 31, 9, 0.0081140350877193, ["jmp     short loc_E95C"], ["jmp~FOO"]], [0, 0, 85, 0, 1, 4, 1, 2, 17, 7, 0.12637061403508773, ["call    ___lxstat", "test    eax, eax", "setnz   al", "jmp     loc_E513"], ["call~FOO", "test~eax,eax", "setnz~al", "jmp~FOO"]], [1, 0, 85, 0, 0, 6, 1, 1, 16, 8, 0.25975877192982455, ["mov     eax, [rsp+118h+var_FC]", "mov     rdx, [rsp+118h+stat_buf]; stat_buf", "mov     rsi, rname; filename", "mov     edi, 1; ver", "test    eax, eax", "jz      loc_E620"], ["mov~eax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,rname", "mov~edi,0", "test~eax,eax", "jz~FOO"]], [2, 0, 85, 1, 2, 14, 0, 3, 25, 8, 0.10734649122807018, ["mov     rax, [rsp+118h+extra_buf]", "add     rdx, 1; n", "mov     rsi, end; src", "lea     rdi, [rax+n]; dest", "call    _memmove", "mov     rdi, [rsp+118h+extra_buf]; dest", "mov     rdx, n; n", "mov     rsi, buf; src", "call    _memcpy", "cmp     byte ptr [buf], 2Fh ; '/'", "mov     end, rax", "mov     [rsp+118h+name], rax", "lea     name_0, [rname+1]", "jz      loc_E926"], ["mov~rax,[rsp+0]", "add~rdx,0", "mov~rsi,end", "lea~rdi,<TAG>", "call~FOO", "mov~rdi,[rsp+0]", "mov~rdx,n", "mov~rsi,buf", "call~FOO", "cmp~<TAG>,0", "mov~end,rax", "mov~[rsp+0],rax", "lea~name_0,[rname+0]", "jz~FOO"]], [0, 0, 85, 0, 0, 2, 0, 0, 24, 9, 0.05197368421052632, ["cmp     [rsp+118h+extra_len], rcx", "jnb     short loc_E7F6"], ["cmp~[rsp+0],rcx", "jnb~FOO"]], [0, 2, 85, 0, 1, 10, 0, 2, 24, 9, 0.04396929824561403, ["mov     [rsp+118h+name], len_0", "cmp     rcx, 1000h", "mov     eax, 1000h", "cmovnb  rax, rcx", "mov     rdi, rax; n", "mov     [rsp+118h+extra_len], rax", "call    xmalloc", "mov     rdx, [rsp+118h+name]", "mov     [rsp+118h+extra_buf], rax", "jmp     loc_E7F6"], ["mov~[rsp+0],len_0", "cmp~rcx,<STR>", "mov~eax,<STR>", "cmovnb~rax,rcx", "mov~rdi,rax", "mov~[rsp+0],rax", "call~FOO", "mov~rdx,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 85, 0, 1, 9, 0, 1, 25, 9, 0.0, ["mov     rdi, [rsp+118h+extra_buf]; p", "mov     rsi, rcx; n", "mov     [rsp+118h+name], rcx", "mov     [rsp+118h+len], len_0", "call    xrealloc", "mov     rcx, [rsp+118h+name]", "mov     rdx, [rsp+118h+len]", "mov     [rsp+118h+extra_buf], rax", "mov     [rsp+118h+extra_len], rcx"], ["mov~rdi,[rsp+0]", "mov~rsi,rcx", "mov~[rsp+0],rcx", "mov~[rsp+0],len_0", "call~FOO", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~[rsp+0],rax", "mov~[rsp+0],rcx"]], [0, 0, 85, 0, 0, 2, 0, 1, 26, 7, 0.0769188596491228, ["cmp     dest, rax", "ja      loc_E944"], ["cmp~dest,rax", "ja~FOO"]], [1, 0, 85, 0, 0, 2, 0, 1, 20, 8, 0.18218201754385965, ["cmp     [rsp+118h+ht], 0", "jz      loc_E848"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 85, 1, 0, 4, 0, 1, 9, 8, 0.024780701754385966, ["add     start, 1", "movzx   edx, byte ptr [start]", "cmp     dl, 2Fh ; '/'", "jz      short loc_E430"], ["add~start,0", "movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [0, 0, 85, 0, 0, 1, 0, 0, 8, 9, 0.02368421052631579, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 85, 0, 0, 2, 1, 1, 10, 7, 0.02587719298245614, ["test    dl, dl", "jz      loc_E6B0"], ["test~dl,dl", "jz~FOO"]], [0, 0, 85, 0, 1, 3, 0, 2, 27, 6, 0.11831140350877194, ["mov     rdi, buf; ptr", "call    free", "jmp     loc_E555"], ["mov~rdi,buf", "call~FOO", "jmp~FOO"]], [1, 0, 85, 0, 0, 3, 0, 1, 26, 7, 0.023410087719298246, ["mov     byte ptr [rname+0], 2Fh ; '/'", "mov     r14, rax", "jmp     loc_E83B"], ["mov~[yte ptr [rname+0],0", "mov~r14,rax", "jmp~FOO"]], [0, 0, 85, 0, 0, 2, 0, 1, 28, 7, 0.012883771929824562, ["mov     r14, dest", "jmp     loc_E83B"], ["mov~r14,dest", "jmp~FOO"]], [0, 0, 85, 0, 0, 3, 0, 1, 29, 7, 0.04577850877192983, ["lea     r14, [dest-1]", "cmp     rname, dest", "jz      loc_E83B"], ["lea~r14,[dest-1]+0]", "cmp~rname,dest", "jz~FOO"]], [1, 0, 85, 0, 0, 2, 0, 1, 30, 7, 0.015899122807017545, ["cmp     byte ptr [dest-1], 2Fh ; '/'", "jz      loc_E83B"], ["cmp~[yte ptr [dest-1]+0],0", "jz~FOO"]], [0, 0, 85, 0, 0, 2, 0, 1, 8, 7, 0.38092105263157894, ["mov     r13, start", "jmp     short loc_E455"], ["mov~r13,start", "jmp~FOO"]], [0, 0, 85, 0, 1, 6, 1, 2, 21, 7, 0.17615131578947368, ["mov     rdx, [rsp+118h+stat_buf]; stats", "mov     rsi, [rsp+118h+name]; file", "mov     rdi, [rsp+118h+ht]; ht", "call    seen_file", "test    al, al", "jz      loc_E770"], ["mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,[rsp+0]", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 85, 0, 1, 9, 2, 2, 21, 8, 0.0081140350877193, ["lea     r8, triple_free; data_freer", "lea     rcx, triple_compare_ino_str; comparator", "xor     esi, esi; tuning", "lea     rdx, triple_hash; hasher", "mov     edi, 7; candidate", "call    hash_initialize", "test    rax, rax", "mov     [rsp+118h+ht], rax", "jnz     loc_E63C"], ["lea~r8,<TAG>", "lea~rcx,<TAG>", "xor~esi,esi", "lea~rdx,<TAG>", "mov~edi,0", "call~FOO", "test~rax,rax", "mov~[rsp+0],rax", "jnz~FOO"]], [1, 0, 85, 0, 0, 2, 0, 1, 10, 6, 0.0, ["cmp     cl, 2Fh ; '/'", "jz      short loc_E462"], ["cmp~cl,0", "jz~FOO"]], [1, 0, 85, 1, 0, 4, 1, 1, 9, 6, 0.3821271929824561, ["add     end, 1", "movzx   ecx, byte ptr [end+0]", "test    cl, cl", "jnz     short loc_E450"], ["add~end,0", "movzx~ecx,[yte ptr [end+0]", "test~cl,cl", "jnz~FOO"]], [1, 0, 85, 0, 0, 2, 0, 1, 22, 6, 0.035910087719298246, ["cmp     [rsp+118h+can_mode], 2", "jz      loc_E555"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 85, 0, 0, 1, 0, 1, 20, 8, 0.00010964912280701755, ["jmp     short loc_E6F8"], ["jmp~FOO"]], [1, 0, 85, 0, 0, 2, 0, 1, 19, 7, 0.008004385964912281, ["cmp     byte ptr [dest-1], 2Fh ; '/'", "jz      loc_E5F1"], ["cmp~[yte ptr [dest-1]+0],0", "jz~FOO"]], [0, 0, 85, 0, 0, 2, 0, 1, 10, 5, 0.4194078947368421, ["cmp     end, start", "jz      loc_E565"], ["cmp~end,start", "jz~FOO"]], [0, 0, 85, 0, 0, 3, 1, 1, 11, 6, 0.02598684210526316, ["xor     ecx, ecx", "mov     r13, end", "jmp     loc_E462"], ["xor~ecx,ecx", "mov~r13,end", "jmp~FOO"]], [1, 0, 6, 0, 1, 3, 0, 1, 23, 5, 0.009594298245614035, ["call    ___errno_location", "mov     edx, 28h ; '('", "mov     r12, rax"], ["call~FOO", "mov~edx,0", "mov~r12,rax"]], [1, 0, 85, 1, 0, 4, 0, 1, 11, 8, 0.4106359649122807, ["mov     r12, end", "sub     r12, start", "cmp     r12, 1", "jz      loc_E5E8"], ["mov~r12,end", "sub~r12,start", "cmp~r12,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 22, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 85, 0, 0, 2, 0, 1, 12, 9, 0.22642543859649122, ["cmp     r12, 2", "jnz     short loc_E48A"], ["cmp~r12,0", "jnz~FOO"]], [1, 0, 85, 0, 0, 2, 0, 1, 13, 8, 0.06359649122807018, ["cmp     dl, 2Eh ; '.'", "jz      loc_E6C0"], ["cmp~dl,0", "jz~FOO"]], [0, 0, 5, 0, 2, 6, 0, 2, 24, 4, 0.0042763157894736845, ["mov     rdi, [rsp+118h+extra_buf]; ptr", "mov     [rsp+118h+saved_errno], edx", "call    free", "mov     rdi, rname; ptr", "call    free", "mov     edx, [rsp+118h+saved_errno]"], ["mov~rdi,[rsp+0]", "mov~[rsp+0],edx", "call~FOO", "mov~rdi,rname", "call~FOO", "mov~edx,[rsp+0]"]], [0, 0, 6, 0, 0, 2, 0, 1, 24, 5, 0.0018092105263157895, ["mov     edx, r15d", "jmp     loc_E670"], ["mov~edx,r15d", "jmp~FOO"]], [1, 0, 85, 0, 0, 2, 0, 1, 13, 10, 0.331140350877193, ["cmp     byte ptr [dest-1], 2Fh ; '/'", "jz      short loc_E499"], ["cmp~[yte ptr [dest-1]+0],0", "jz~FOO"]], [1, 0, 85, 0, 0, 2, 0, 1, 12, 7, 0.17719298245614035, ["cmp     dl, 2Eh ; '.'", "jnz     loc_E48A"], ["cmp~dl,0", "jnz~FOO"]], [1, 0, 85, 0, 0, 2, 0, 1, 14, 7, 0.05899122807017544, ["cmp     byte ptr [start+1], 2Eh ; '.'", "jnz     loc_E48A"], ["cmp~[yte ptr [start+0],0", "jnz~FOO"]], [2, 0, 85, 1, 0, 2, 0, 0, 14, 10, 0.0, ["mov     byte ptr [r14], 2Fh ; '/'", "add     r14, 1"], ["mov~<TAG>,0", "add~r14,0"]], [0, 0, 4, 0, 1, 4, 0, 1, 22, 3, 0.00405701754385965, ["mov     rdi, [rsp+118h+ht]; table", "mov     [rsp+118h+saved_errno], edx", "call    hash_free", "mov     edx, [rsp+118h+saved_errno]"], ["mov~rdi,[rsp+0]", "mov~[rsp+0],edx", "call~FOO", "mov~edx,[rsp+0]"]], [0, 0, 5, 0, 0, 1, 0, 1, 21, 4, 0.0076754385964912285, ["jmp     loc_E68A"], ["jmp~FOO"]], [1, 0, 91, 0, 0, 2, 0, 1, 3, 3, 0.02894736842105263, ["cmp     al, 2Fh ; '/'", "jz      loc_E880"], ["cmp~al,0", "jz~FOO"]], [0, 0, 85, 0, 0, 3, 0, 1, 14, 9, 0.3333333333333333, ["lea     rax, [dest+r12]", "cmp     rname_limit, rax", "ja      short loc_E4D3"], ["lea~rax,<TAG>", "cmp~rname_limit,rax", "ja~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 21, 2, 0.008388157894736842, ["mov     [r12], edx", "xor     ebp, ebp", "jmp     loc_E5B8"], ["mov~<TAG>,edx", "xor~ebp,ebp", "jmp~FOO"]], [1, 0, 6, 0, 2, 8, 0, 3, 20, 3, 0.028563596491228072, ["mov     rdi, [rsp+118h+extra_buf]; ptr", "mov     [rsp+118h+saved_errno], edx", "call    free", "mov     rdi, rname; ptr", "call    free", "cmp     [rsp+118h+ht], 0", "mov     edx, [rsp+118h+saved_errno]", "jz      loc_E69C"], ["mov~rdi,[rsp+0]", "mov~[rsp+0],edx", "call~FOO", "mov~rdi,rname", "call~FOO", "cmp~[rsp+0],0", "mov~edx,[rsp+0]", "jz~FOO"]], [0, 1, 88, 0, 1, 5, 0, 1, 5, 8, 0.010197368421052632, ["mov     rdi, rname; s", "call    _strlen", "cmp     rax, 0FFFh", "mov     r14, rax", "jbe     loc_E8A0"], ["mov~rdi,rname", "call~FOO", "cmp~rax,<STR>", "mov~r14,rax", "jbe~FOO"]], [0, 2, 85, 5, 1, 12, 0, 1, 15, 9, 0.0, ["sub     rname_limit, rname", "sub     dest, rname", "mov     rdi, rname; p", "lea     rax, [r12+new_size+1]", "add     new_size, 1000h", "cmp     r12, 1000h", "cmovge  rbx, rax", "mov     rsi, new_size; n", "call    xrealloc", "mov     rname, rax", "add     new_size, rname", "add     dest_offset, rname"], ["sub~rname_limit,rname", "sub~dest,rname", "mov~rdi,rname", "lea~rax,[r12+0]", "add~new_size,<STR>", "cmp~r12,<STR>", "cmovge~rbx,rax", "mov~rsi,new_size", "call~FOO", "mov~rname,rax", "add~new_size,rname", "add~dest_offset,rname"]], [0, 0, 85, 0, 0, 3, 0, 0, 16, 7, 0.039473684210526314, ["lea     rax, [dest-1]", "cmp     rname, dest", "jnb     loc_E98B"], ["lea~rax,[dest-1]+0]", "cmp~rname,dest", "jnb~FOO"]], [1, 0, 85, 0, 2, 9, 0, 3, 23, 10, 0.10296052631578947, ["mov     rdi, buf; s", "call    _strlen", "mov     rdi, end; s", "mov     start, rax", "call    _strlen", "cmp     [rsp+118h+extra_len], 0", "mov     rdx, rax", "lea     rcx, [n+len_0+1]", "jz      loc_E8BF"], ["mov~rdi,buf", "call~FOO", "mov~rdi,end", "mov~start,rax", "call~FOO", "cmp~[rsp+0],0", "mov~rdx,rax", "lea~rcx,[n+0]", "jz~FOO"]], [2, 0, 85, 0, 1, 8, 0, 2, 15, 8, 0.3355263157894737, ["mov     rdi, dest; dest", "mov     rdx, r12; n", "mov     rsi, start; src", "call    _memcpy", "cmp     byte ptr [rsp+118h+saved_errno], 0", "lea     r14, [r14+r12]", "mov     byte ptr [dest], 0", "jnz     short loc_E53B"], ["mov~rdi,dest", "mov~rdx,r12", "mov~rsi,start", "call~FOO", "cmp~[yte ptr [rsp+0],0", "lea~r14,<TAG>", "mov~<TAG>,0", "jnz~FOO"]], [1, 0, 85, 1, 0, 3, 0, 1, 18, 7, 0.025548245614035087, ["sub     dest, 1", "cmp     rname, dest", "jz      loc_E5F1"], ["sub~dest,0", "cmp~rname,dest", "jz~FOO"]], [0, 0, 85, 0, 1, 3, 1, 1, 17, 7, 0.12637061403508773, ["call    ___xstat", "test    eax, eax", "setnz   al"], ["call~FOO", "test~eax,eax", "setnz~al"]], [1, 0, 85, 0, 1, 5, 0, 2, 23, 6, 0.02324561403508772, ["call    ___errno_location", "cmp     [rsp+118h+can_mode], 2", "mov     buf, rax", "mov     r15d, [rax]", "jnz     short loc_E91E"], ["call~FOO", "cmp~[rsp+0],0", "mov~buf,rax", "mov~r15d,<TAG>", "jnz~FOO"]], [0, 0, 85, 0, 2, 10, 1, 3, 22, 7, 0.13322368421052633, ["mov     rdx, [rsp+118h+stat_buf]; stats", "mov     rsi, [rsp+118h+name]; file", "mov     rdi, [rsp+118h+ht]; ht", "call    record_file", "mov     rsi, [rsp+118h+st.st_size]; size", "mov     rdi, rname; file", "call    areadlink_with_size", "test    rax, rax", "mov     r12, rax", "jz      loc_E902"], ["mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,[rsp+0]", "call~FOO", "mov~rsi,[rsp+0]", "mov~rdi,rname", "call~FOO", "test~rax,rax", "mov~r12,rax", "jz~FOO"]], [1, 0, 85, 0, 0, 2, 0, 1, 24, 6, 0.014912280701754385, ["cmp     r15d, 0Ch", "jnz     loc_E555"], ["cmp~r15d,0", "jnz~FOO"]], [0, 0, 85, 0, 1, 6, 1, 2, 19, 5, 0.0356359649122807, ["call    ___errno_location", "mov     r12, rax", "mov     r15d, [rax]", "mov     eax, [rsp+118h+can_mode]", "test    eax, eax", "jz      loc_E739"], ["call~FOO", "mov~r12,rax", "mov~r15d,<TAG>", "mov~eax,[rsp+0]", "test~eax,eax", "jz~FOO"]], [1, 0, 85, 0, 1, 5, 0, 2, 21, 5, 0.01650219298245614, ["lea     rsi, prefix+8; accept", "mov     rdi, end; s", "call    _strspn", "cmp     byte ptr [end+rax+0], 0", "jnz     short loc_E739"], ["lea~rsi,<TAG>", "mov~rdi,end", "call~FOO", "cmp~[yte ptr [end+0],0", "jnz~FOO"]], [1, 0, 85, 0, 0, 2, 0, 1, 20, 6, 0.025, ["cmp     eax, 1", "jz      loc_E718"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 85, 0, 0, 2, 0, 1, 22, 5, 0.015844298245614036, ["cmp     r15d, 2", "jz      loc_E555"], ["cmp~r15d,0", "jz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 20, 4, 0.0061403508771929825, ["mov     edx, r15d"], ["mov~edx,r15d"]], [1, 0, 85, 0, 0, 1, 0, 0, 16, 7, 0.07834429824561404, ["mov     [rsp+118h+st.st_mode], 0"], ["mov~[rsp+0],0"]], [1, 0, 3, 0, 1, 4, 1, 2, 3, 2, 0.0003289473684210526, ["call    ___errno_location", "xor     ebp, ebp", "mov     dword ptr [rax], 2", "jmp     loc_E5B8"], ["call~FOO", "xor~ebp,ebp", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 93, 0, 0, 3, 1, 1, 2, 3, 0.019736842105263157, ["movzx   eax, byte ptr [name_0]", "test    al, al", "jz      loc_E932"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 85, 0, 0, 2, 0, 1, 17, 6, 0.09067982456140351, ["cmp     byte ptr [end+0], 0", "jz      short loc_E555"], ["cmp~[yte ptr [end+0],0", "jz~FOO"]], [0, 0, 85, 0, 0, 3, 0, 0, 27, 8, 0.046162280701754384, ["lea     rax, [dest-1]", "cmp     rname, dest", "jnb     short loc_E954"], ["lea~rax,[dest-1]+0]", "cmp~rname,dest", "jnb~FOO"]], [1, 0, 85, 0, 0, 2, 0, 1, 18, 5, 0.03667763157894737, ["cmp     [rsp+118h+can_mode], 2", "jnz     loc_E979"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 85, 0, 0, 2, 0, 1, 28, 8, 0.030701754385964914, ["cmp     byte ptr [r14-2], 2Fh ; '/'", "jnz     short loc_E95F"], ["cmp~[yte ptr [r14-2]+0],0", "jnz~FOO"]], [1, 0, 7, 0, 1, 4, 0, 2, 19, 4, 0.029331140350877194, ["call    ___errno_location", "mov     edx, 14h", "mov     r12, rax", "jmp     loc_E73C"], ["call~FOO", "mov~edx,0", "mov~r12,rax", "jmp~FOO"]], [0, 0, 9, 0, 0, 3, 0, 0, 7, 4, 0.06661184210526316, ["lea     rax, [rname+1]", "cmp     dest, rax", "jbe     short loc_E579"], ["lea~rax,[rname+0]", "cmp~dest,rax", "jbe~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 8, 4, 0.008333333333333333, ["cmp     byte ptr [dest-1], 2Fh ; '/'", "jnz     short loc_E579"], ["cmp~[yte ptr [dest-1]+0],0", "jnz~FOO"]], [1, 0, 7, 1, 0, 1, 0, 0, 9, 4, 0.0, ["sub     dest, 1"], ["sub~dest,0"]], [1, 0, 6, 0, 0, 4, 0, 1, 8, 3, 0.043914473684210524, ["lea     rax, [dest+1]", "mov     byte ptr [dest], 0", "cmp     rname_limit, rax", "jz      short loc_E598"], ["lea~rax,[dest+0]", "mov~<TAG>,0", "cmp~rname_limit,rax", "jz~FOO"]], [3, 0, 96, 1, 0, 19, 4, 1, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 0E8h", "mov     rax, fs:28h", "mov     [rsp+118h+var_40], rax", "xor     eax, eax", "mov     eax, esi", "and     eax, 4", "setnz   r13b", "and     esi, 3", "mov     [rsp+118h+var_FC], eax", "lea     eax, [rsi-1]", "mov     [rsp+118h+can_mode], esi", "test    esi, eax", "jnz     loc_E8F0"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~eax,esi", "and~eax,0", "setnz~r13b", "and~esi,0", "mov~[rsp+0],eax", "lea~eax,[rsi-1]+0]", "mov~[rsp+0],esi", "test~esi,eax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.020394736842105264, ["mov     rdi, [rsp+118h+var_40]", "xor     rdi, fs:28h", "mov     rax, rbp", "jnz     loc_E993"], ["mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "mov~rax,rbp", "jnz~FOO"]], [0, 0, 5, 1, 1, 5, 0, 1, 9, 3, 0.0, ["sub     dest, rname", "mov     rdi, rname; p", "lea     rsi, [r14+1]; n", "call    xrealloc", "mov     rname, rax"], ["sub~dest,rname", "mov~rdi,rname", "lea~rsi,[r14+0]", "call~FOO", "mov~rname,rax"]], [0, 0, 95, 0, 0, 3, 1, 1, 1, 3, 0.009978070175438596, ["test    name_0, name_0", "mov     r15, name_0", "jz      loc_E8F0"], ["test~name_0,name_0", "mov~r15,name_0", "jz~FOO"]], [0, 0, 4, 0, 1, 5, 1, 2, 9, 2, 0.02768640350877193, ["mov     rdi, [rsp+118h+extra_buf]; ptr", "call    free", "mov     rax, [rsp+118h+ht]", "test    rax, rax", "jz      short loc_E5B8"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 1, 10, 2, 0.0, ["mov     rdi, rax; table", "call    hash_free", "nop     dword ptr [rax+00h]"], ["mov~rdi,rax", "call~FOO", "nop~[word ptr [rax+0]"]], [0, 0, 89, 0, 1, 4, 1, 2, 4, 2, 0.0016447368421052633, ["call    xgetcwd", "test    rax, rax", "mov     rbp, rax", "jz      loc_E5B8"], ["call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [1, 0, 3, 0, 1, 4, 1, 2, 1, 2, 0.0006578947368421052, ["call    ___errno_location", "xor     ebp, ebp", "mov     dword ptr [rax], 16h", "jmp     loc_E5B8"], ["call~FOO", "xor~ebp,ebp", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 0E8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [36, 28, 108, 2, 97, 152, 3, 373, 0.07596, 5, 17], "succs": [[24, 2], [0, 70], [14, 7], [8], [3], [3], [3], [78], [83, 13], [8], [8, 62], [8, 65], [8], [33, 26], [83, 13], [31], [15], [1], [17, 66], [29, 23], [19, 22], [19], [19], [28, 79], [34, 35], [25, 27], [25], [33, 42], [14], [28], [28], [32, 28], [16, 28], [37], [68, 38], [34, 45], [41, 37], [41, 36], [43, 14], [65], [9, 39], [83, 44], [41], [48], [51, 46], [], [50, 47], [50, 52], [54], [48], [57, 53], [9, 50], [50, 10], [57], [58], [54], [4, 94], [64, 61], [89], [58, 55], [5, 6], [64], [11, 12], [20, 21], [18, 75], [40, 9], [1], [49, 69], [67, 63], [49, 14], [72, 74], [73, 74], [75, 71], [74, 14], [59], [78], [89], [56, 76], [80, 14], [81, 30], [82, 14], [30, 31], [59], [84, 86], [85, 86], [86], [90, 92], [91, 95], [], [88, 96], [92], [77, 95], [89, 93], [89], [89, 60], [89], []], "fname": "canonicalize_filename_mode", "n_num": 97}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:file_name, file", "retn"], ["mov~<TAG>,file", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:ignore_EPIPE, dil", "retn"], ["mov~<TAG>,dil", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_ignore_EPIPE", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 0, 1, 0, 4, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [0, 0, 2, 0, 1, 4, 1, 2, 1, -1, 0.09523809523809523, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jnz     short loc_EA42"], ["mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 3, 0, 1, 8, 2, 2, 2, 1, 0.11904761904761903, ["lea     rsi, aWriteError; \"write error\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdi, cs:file_name; arg", "mov     rbp, rax", "test    rdi, rdi", "jz      short loc_EA4D"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdi,<TAG>", "mov~rbp,rax", "test~rdi,rdi", "jz~FOO"]], [1, 0, 7, 0, 1, 4, 0, 2, 1, 2, 0.07142857142857142, ["call    ___errno_location", "cmp     cs:ignore_EPIPE, 0", "mov     rbx, rax", "jz      short loc_EA03"], ["call~FOO", "cmp~<TAG>,0", "mov~rbx,rax", "jz~FOO"]], [0, 1, 6, 0, 0, 2, 0, 1, 2, 2, 0.04166666666666666, ["cmp     dword ptr [rax], 20h ; ' '", "jnz     short loc_EA03"], ["cmp~<TAG>,<STR>", "jnz~FOO"]], [1, 0, 8, 1, 1, 7, 1, 2, 0, 3, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jz      short loc_E9EC"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     edi, cs:exit_failure; status", "call    __exit"], ["mov~edi,<TAG>", "call~FOO"]], [0, 0, 1, 0, 1, 7, 2, 2, 3, 0, 0.014880952380952378, ["mov     esi, [rbx]; errnum", "lea     rdx, aS_0+2; format", "mov     rcx, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_EA42"], ["mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 2, 8, 2, 2, 3, -1, 0.014880952380952378, ["call    quotearg_colon", "mov     esi, [rbx]; errnum", "lea     rdx, aSS_0; \"%s: %s\"", "mov     rcx, rax", "mov     r8, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO"]]], "func_feature": [8, 8, 14, 0, 9, 12, 0, 46, 0.03968, 8, 2], "succs": [[], [0, 6], [8, 7], [2, 4], [1, 2], [1, 3], [], [6], [6]], "fname": "close_stdout", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 0, 1, 0, 5, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "mov     rax, length", "pop     file", "pop     prefix_length", "retn"], ["add~rsp,0", "mov~rax,length", "pop~file", "pop~prefix_length", "retn"]], [1, 0, 4, 0, 0, 3, 0, 1, 3, -1, 0.07142857142857142, ["cmp     byte ptr [file+length-1], 2Fh ; '/'", "lea     rax, [length-1]", "jnz     short loc_EAB3"], ["cmp~[yte ptr [file+0],0", "lea~rax,[length-1]+0]", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 2, -1, 0.19047619047619047, ["cmp     prefix_length, length", "jnz     short loc_EAA0"], ["cmp~prefix_length,length", "jnz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 4, -1, 0.023809523809523808, ["mov     length, rax"], ["mov~length,rax"]], [1, 0, 0, 1, 0, 6, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "mov     rdx, length", "mov     rax, rdx", "pop     file", "pop     prefix_length", "retn"], ["add~rsp,0", "mov~rdx,length", "mov~rax,rdx", "pop~file", "pop~prefix_length", "retn"]], [2, 0, 7, 2, 1, 12, 1, 1, 0, 1, 0.0, ["push    rbp", "push    rbx", "xor     ebp, ebp", "mov     rbx, file", "sub     rsp, 8", "cmp     byte ptr [file], 2Fh ; '/'", "setz    bpl", "call    last_component", "mov     rcx, rax", "sub     rcx, file", "cmp     length, prefix_length", "jbe     short loc_EAC0"], ["push~rbp", "push~rbx", "xor~ebp,ebp", "mov~rbx,file", "sub~rsp,0", "cmp~<TAG>,0", "setz~bpl", "call~FOO", "mov~rcx,rax", "sub~rcx,file", "cmp~length,prefix_length", "jbe~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 2, 1, 0.023809523809523808, ["jmp     short loc_EAC0"], ["jmp~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 1, 2, 0.11904761904761904, ["cmp     byte ptr [rax-1], 2Fh ; '/'", "lea     rdx, [length-1]", "jz      short loc_EAAE"], ["cmp~[yte ptr [rax-1]+0],0", "lea~rdx,[length-1]+0]", "jz~FOO"]]], "func_feature": [1, 1, 5, 0, 8, 10, 1, 33, 0.05357, 0, 4], "succs": [[], [0, 3], [0, 1], [2], [], [4, 7], [4], [2, 6]], "fname": "dir_len", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 5, 0, 0, 1, 1, 0, 0, 0, 0.026143790849673203, ["xor     eax, eax"], ["xor~eax,eax"]], [0, 0, 6, 0, 0, 3, 1, 1, 3, -1, 0.10566448801742921, ["test    ebx, ebx", "mov     esi, ebx", "jz      short loc_EB55"], ["test~ebx,ebx", "mov~esi,ebx", "jz~FOO"]], [2, 0, 2, 0, 0, 3, 0, 1, 5, -1, 0.0, ["mov     byte ptr [dir], 2Eh ; '.'", "mov     ebx, 1", "jmp     short loc_EB9B"], ["mov~<TAG>,0", "mov~ebx,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 4, -1, 0.0664488017429194, ["test    r12b, r12b", "jz      short loc_EB9B"], ["test~r12b,r12b", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 5, -1, 0.0196078431372549, ["mov     byte ptr [rcx+length], 0"], ["mov~<TAG>,0"]], [0, 0, 2, 0, 1, 5, 0, 1, 5, -1, 0.01851851851851852, ["mov     rdi, rcx; dest", "mov     rdx, rbx; n", "mov     rsi, file; src", "call    _memcpy", "mov     rcx, rax"], ["mov~rdi,rcx", "mov~rdx,rbx", "mov~rsi,file", "call~FOO", "mov~rcx,rax"]], [0, 0, 0, 0, 0, 5, 0, 0, 4, -1, 0.0, ["pop     rbx", "mov     rax, rcx", "pop     file", "pop     r12", "retn"], ["pop~rbx", "mov~rax,rcx", "pop~file", "pop~r12", "retn"]], [0, 0, 1, 0, 0, 2, 1, 1, 3, -1, 0.032679738562091505, ["xor     ecx, ecx", "jmp     short loc_EB9F"], ["xor~ecx,ecx", "jmp~FOO"]], [0, 0, 4, 0, 1, 8, 3, 2, 4, -1, 0.05773420479302833, ["xor     eax, eax", "test    rbx, rbx", "setz    al", "lea     rdi, [rbx+rax+1]; size", "call    malloc", "test    rax, rax", "mov     rcx, rax", "jz      short loc_EBB0"], ["xor~eax,eax", "test~rbx,rbx", "setz~al", "lea~rdi,[rbx+0]", "call~FOO", "test~rax,rax", "mov~rcx,rax", "jz~FOO"]], [1, 0, 14, 0, 0, 3, 0, 1, 3, -1, 0.03376906318082788, ["cmp     byte ptr [file+rbx-1], 2Fh ; '/'", "lea     rax, [rbx-1]", "jnz     short loc_EB70"], ["cmp~[yte ptr [file+0],0", "lea~rax,[rbx-1]+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 2, 0, 0, 3, -1, 0.023965141612200435, ["mov     rbx, rdx", "nop     dword ptr [rax+rax+00h]"], ["mov~rbx,rdx", "nop~[word ptr [rax+0]"]], [0, 0, 6, 0, 0, 1, 0, 1, 2, -1, 0.014161220043572984, ["jmp     short loc_EB68"], ["jmp~FOO"]], [2, 0, 8, 0, 1, 9, 3, 2, 2, -1, 0.14161220043572986, ["mov     rax, rbx", "xor     rax, 1", "lea     rdi, [rax+rbx+1]; size", "mov     r12d, eax", "and     r12d, 1", "call    malloc", "test    rax, rax", "mov     rcx, rax", "jz      short loc_EBB0"], ["mov~rax,rbx", "xor~rax,0", "lea~rdi,[rax+0]", "mov~r12d,eax", "and~r12d,0", "call~FOO", "test~rax,rax", "mov~rcx,rax", "jz~FOO"]], [1, 0, 18, 1, 1, 12, 1, 1, 0, 1, 0.0, ["push    r12", "xor     r12d, r12d", "push    rbp", "push    rbx", "cmp     byte ptr [file], 2Fh ; '/'", "mov     rbp, file", "setz    r12b", "call    last_component", "mov     rdx, rax", "sub     rdx, file", "cmp     rdx, r12", "jbe     loc_EBB8"], ["push~r12", "xor~r12d,r12d", "push~rbp", "push~rbx", "cmp~<TAG>,0", "mov~rbp,file", "setz~r12b", "call~FOO", "mov~rdx,rax", "sub~rdx,file", "cmp~rdx,r12", "jbe~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 2, -1, 0.10675381263616557, ["cmp     rbx, r12", "jnz     short loc_EB08"], ["cmp~rbx,r12", "jnz~FOO"]], [0, 0, 14, 0, 0, 1, 0, 0, 4, -1, 0.022875816993464054, ["mov     rbx, rax"], ["mov~rbx,rax"]], [0, 0, 9, 0, 0, 2, 0, 1, 1, 0, 0.029411764705882353, ["mov     rbx, rdx", "jmp     loc_EB1B"], ["mov~rbx,rdx", "jmp~FOO"]], [1, 0, 5, 1, 0, 6, 0, 0, 5, -1, 0.013071895424836602, ["mov     edx, eax", "add     eax, 1", "movzx   edi, byte ptr [file+rdx+0]", "cmp     eax, esi", "mov     [dir+rdx], dil", "jb      short loc_EB43"], ["mov~edx,eax", "add~eax,0", "movzx~edi,[yte ptr [file+0]", "cmp~eax,esi", "mov~<TAG>,dil", "jb~FOO"]], [1, 0, 16, 0, 0, 3, 0, 1, 1, -1, 0.022875816993464054, ["cmp     byte ptr [rax-1], 2Fh ; '/'", "lea     rbx, [rdx-1]", "jz      short loc_EB16"], ["cmp~[yte ptr [rax-1]+0],0", "lea~rbx,[rdx-1]+0]", "jz~FOO"]]], "func_feature": [4, 11, 15, 0, 19, 27, 1, 71, 0.0387, 0, 2], "succs": [[17], [0, 3], [4], [2, 4], [6], [4], [], [6], [5, 7], [8, 15], [8], [10], [1, 7], [16, 18], [9, 12], [14], [12], [17, 3], [11, 14]], "fname": "mdir_name", "n_num": 19}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 6, 1, 0, 4, 1, 1, 0, 0, 0.07777777777777778, ["add     p, 1", "movzx   edx, byte ptr [p]", "test    dl, dl", "jz      short locret_EC1A"], ["add~p,0", "movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 4, 2, 0.16666666666666669, ["test    sil, sil", "jz      short loc_EBFA"], ["test~sil,sil", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 0, 5, 2, 0.0, ["mov     base, p", "xor     esi, esi"], ["mov~base,p", "xor~esi,esi"]], [0, 0, 6, 0, 0, 3, 1, 1, 2, 3, 0.22222222222222224, ["mov     rcx, p", "xor     esi, esi", "jmp     short loc_EC05"], ["mov~rcx,p", "xor~esi,esi", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 1, 1, 0.23333333333333334, ["test    dl, dl", "jz      short locret_EC1A"], ["test~dl,dl", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 3, 2, 0.33333333333333337, ["cmp     dl, 2Fh ; '/'", "jnz     short loc_EBF0"], ["cmp~dl,0", "jnz~FOO"]], [2, 0, 6, 1, 0, 5, 1, 1, 4, 1, 0.022222222222222223, ["add     p, 1", "movzx   edx, byte ptr [rcx]", "mov     esi, 1", "test    dl, dl", "jnz     short loc_EC05"], ["add~p,0", "movzx~edx,<TAG>", "mov~esi,0", "test~dl,dl", "jnz~FOO"]], [1, 0, 10, 0, 0, 4, 0, 1, 0, 2, 0.0, ["movzx   edx, byte ptr [base]", "mov     rax, base", "cmp     dl, 2Fh ; '/'", "jnz     short loc_EBDC"], ["movzx~edx,<TAG>", "mov~rax,base", "cmp~dl,0", "jnz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 1, 3, 0.011111111111111112, ["nop     dword ptr [base+base+00h]"], ["nop~[word ptr [base+0]"]], [2, 0, 9, 1, 0, 4, 0, 1, 2, 2, 0.08888888888888889, ["add     base, 1", "movzx   edx, byte ptr [base]", "cmp     dl, 2Fh ; '/'", "jz      short loc_EBD0"], ["add~base,0", "movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 6, 8, 0, 11, 17, 8, 30, 0.10505, 0, 3], "succs": [[10, 5], [0, 2], [0], [5], [10, 3], [1, 6], [10, 5], [8, 4], [9], [9, 4], []], "fname": "last_component", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 5, 0, 0, 2, 0, 0, 0, 0, 0.047619047619047616, ["mov     len, rax", "nop     dword ptr [rax+rax+00h]"], ["mov~len,rax", "nop~[word ptr [rax+0]"]], [1, 0, 5, 0, 0, 3, 0, 1, 3, 3, 0.16666666666666666, ["cmp     byte ptr [name+len-1], 2Fh ; '/'", "lea     rax, [len-1]", "jz      short loc_EC40"], ["cmp~[yte ptr [name+0],0", "lea~rax,[len-1]+0]", "jz~FOO"]], [1, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0.0, ["mov     eax, 1", "pop     name", "retn"], ["mov~eax,0", "pop~name", "retn"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 1, 0.2857142857142857, ["cmp     len, 1", "jz      short loc_EC60"], ["cmp~len,0", "jz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 1, 2, 0.11904761904761904, ["cmp     byte ptr [name+len-1], 2Fh ; '/'", "lea     rdx, [len-1]", "jz      short loc_EC48"], ["cmp~[yte ptr [name+0],0", "lea~rdx,[len-1]+0]", "jz~FOO"]], [1, 0, 7, 0, 1, 5, 0, 1, 0, 3, 0.0, ["push    rbx", "mov     rbx, name", "call    _strlen", "cmp     len, 1", "jbe     short loc_EC3A"], ["push~rbx", "mov~rbx,name", "call~FOO", "cmp~len,0", "jbe~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     name", "retn"], ["pop~name", "retn"]], [0, 0, 0, 0, 0, 3, 0, 0, 4, -1, 0.0, ["mov     rax, len", "pop     name", "retn"], ["mov~rax,len", "pop~name", "retn"]]], "func_feature": [1, 0, 4, 0, 8, 9, 5, 23, 0.07738, 0, 0], "succs": [[3], [0, 7], [], [1, 2], [3, 6], [4, 6], [], []], "fname": "base_len", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 1, 2, 0.0, 0, 0], "succs": [[]], "fname": "file_has_acl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 7, 0, 0, 2, 1, 1, 0, 2, 0.0, ["test    ht, ht", "jz      short locret_ED00"], ["test~ht,ht", "jz~FOO"]], [1, 0, 1, 1, 0, 7, 0, 1, 3, -1, 0.07142857142857142, ["add     rsp, 8", "mov     rdi, ent; x", "pop     ent", "pop     stats", "pop     file", "pop     ht", "jmp     triple_free"], ["add~rsp,0", "mov~rdi,ent", "pop~ent", "pop~stats", "pop~file", "pop~ht", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 2, -1, 0.14285714285714285, ["cmp     ent, ent_from_table", "jz      short loc_ECF0"], ["cmp~ent,ent_from_table", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [2, 0, 5, 1, 3, 23, 1, 4, 1, 1, 0.11904761904761904, ["push    r13", "push    r12", "mov     r13, ht", "push    rbp", "push    rbx", "mov     r12, file", "mov     edi, 18h; n", "mov     rbp, stats", "sub     rsp, 8", "call    xmalloc", "mov     rdi, file; string", "mov     rbx, rax", "call    xstrdup", "mov     [ent], rax", "mov     rax, [stats+8]", "mov     rsi, ent; entry", "mov     rdi, ht; table", "mov     [ent+8], rax", "mov     rax, [stats+0]", "mov     [ent+10h], rax", "call    hash_insert", "test    ent_from_table, ent_from_table", "jz      short loc_ED02"], ["push~r13", "push~r12", "mov~r13,ht", "push~rbp", "push~rbx", "mov~r12,file", "mov~edi,0", "mov~rbp,stats", "sub~rsp,0", "call~FOO", "mov~rdi,file", "mov~rbx,rax", "call~FOO", "mov~<TAG>,rax", "mov~rax,[stats+0]", "mov~rsi,ent", "mov~rdi,ht", "mov~[ent+0],rax", "mov~rax,[stats+0]", "mov~[ent+0],rax", "call~FOO", "test~ent_from_table,ent_from_table", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [1, 0, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "pop     ent", "pop     stats", "pop     file", "pop     ht", "retn"], ["add~rsp,0", "pop~ent", "pop~stats", "pop~file", "pop~ht", "retn"]]], "func_feature": [4, 2, 8, 0, 8, 7, 1, 42, 0.04167, 0, 3], "succs": [[], [0, 5], [6], [2, 7], [], [3, 4], [], []], "fname": "record_file", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 28h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.3333333333333333, ["mov     rcx, [rsp+28h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_ED61"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 3, 0, 1, 9, 1, 1, 1, 2, 0.0, ["mov     rax, [stats+8]", "mov     [rsp+28h+new_ent.name], file", "mov     file, rsp; entry", "mov     [rsp+28h+new_ent.st_ino], rax", "mov     rax, [stats]", "mov     [rsp+28h+new_ent.st_dev], rax", "call    hash_lookup", "test    rax, rax", "setnz   al"], ["mov~rax,[stats+0]", "mov~<TAG>,file", "mov~file,rsp", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "call~FOO", "test~rax,rax", "setnz~al"]], [1, 0, 4, 1, 0, 6, 2, 1, 0, 2, 0.0, ["sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "test    ht, ht", "jz      short loc_ED4C"], ["sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~ht,ht", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 4, 4, 1, 5, 5, 1, 21, 0.06667, 1, 2], "succs": [[], [0, 4], [1], [1, 2], []], "fname": "seen_file", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[10, 1, 5, 2, 0, 21, 6, 1, 0, 0, 0.2380952380952381, ["mov     [str+3], al", "mov     eax, edi", "and     eax, 20h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFBBh", "add     eax, 72h ; 'r'", "mov     [str+4], al", "mov     eax, edi", "and     eax, 10h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB6h", "add     eax, 77h ; 'w'", "mov     [str+5], al", "mov     eax, edi", "and     eax, 8", "cmp     eax, 1", "sbb     eax, eax", "test    edi, 400h", "jz      loc_EEE8"], ["mov~[str+0],al", "mov~eax,edi", "and~eax,<STR>", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "test~edi,0", "jz~FOO"]], [2, 0, 6, 1, 0, 3, 1, 1, 2, 2, 0.1142857142857143, ["and     eax, 0FFFFFFB5h", "add     eax, 78h ; 'x'", "jmp     loc_EE28"], ["and~eax,0", "add~eax,0", "jmp~FOO"]], [2, 0, 6, 1, 0, 2, 1, 0, 2, 2, 0.1142857142857143, ["and     eax, 0FFFFFFE0h", "add     eax, 73h ; 's'"], ["and~eax,0", "add~eax,0"]], [2, 1, 0, 1, 0, 6, 1, 0, 6, -1, 0.0, ["and     eax, 0FFFFFFB5h", "add     eax, 78h ; 'x'", "mov     [str+9], al", "mov     eax, 20h ; ' '", "mov     [str+0Ah], ax", "retn"], ["and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,<STR>", "mov~[str+0],ax", "retn"]], [10, 1, 2, 2, 0, 21, 6, 1, 5, -1, 0.12380952380952381, ["mov     [str+6], al", "mov     eax, edi", "and     eax, 4", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFBBh", "add     eax, 72h ; 'r'", "mov     [str+7], al", "mov     eax, edi", "and     eax, 2", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB6h", "add     eax, 77h ; 'w'", "mov     [str+8], al", "mov     eax, edi", "and     eax, 1", "cmp     eax, 1", "sbb     eax, eax", "and     edi, 200h", "jz      short loc_EED0"], ["mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~edi,<STR>", "jz~FOO"]], [3, 0, 15, 0, 0, 5, 1, 1, 0, 4, 0.0, ["mov     edx, edi", "mov     eax, 2Dh ; '-'", "and     edx, 0F000h", "cmp     edx, 8000h", "jz      short loc_EDE0"], ["mov~edx,edi", "mov~eax,0", "and~edx,0", "cmp~edx,0", "jz~FOO"]], [1, 1, 10, 0, 0, 3, 0, 1, 5, 4, 0.02380952380952381, ["cmp     edx, 1000h", "mov     eax, 70h ; 'p'", "jz      short loc_EDE0"], ["cmp~edx,<STR>", "mov~eax,0", "jz~FOO"]], [2, 0, 11, 0, 0, 3, 0, 1, 4, 4, 0.0380952380952381, ["cmp     edx, 0A000h", "mov     eax, 6Ch ; 'l'", "jz      short loc_EDE0"], ["cmp~edx,0", "mov~eax,0", "jz~FOO"]], [10, 1, 8, 2, 0, 21, 6, 1, 1, 3, 0.2666666666666667, ["mov     [str], al", "mov     eax, edi", "and     eax, 100h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFBBh", "add     eax, 72h ; 'r'", "mov     [str+1], al", "mov     eax, edi", "and     eax, 80h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB6h", "add     eax, 77h ; 'w'", "mov     [str+2], al", "mov     eax, edi", "and     eax, 40h", "cmp     eax, 1", "sbb     eax, eax", "test    edi, 800h", "jz      loc_EEC0"], ["mov~<TAG>,al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,<STR>", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "test~edi,0", "jz~FOO"]], [2, 0, 3, 1, 0, 3, 1, 1, 4, 0, 0.07857142857142858, ["and     eax, 0FFFFFFB5h", "add     eax, 78h ; 'x'", "jmp     loc_EE6D"], ["and~eax,0", "add~eax,0", "jmp~FOO"]], [2, 0, 3, 1, 0, 2, 1, 0, 4, -1, 0.07857142857142858, ["and     eax, 0FFFFFFE0h", "add     eax, 73h ; 's'"], ["and~eax,0", "add~eax,0"]], [2, 0, 12, 0, 0, 3, 0, 1, 3, 4, 0.04285714285714286, ["cmp     edx, 2000h", "mov     eax, 63h ; 'c'", "jz      short loc_EDE0"], ["cmp~edx,0", "mov~eax,0", "jz~FOO"]], [2, 0, 13, 0, 0, 3, 0, 1, 2, 4, 0.0380952380952381, ["cmp     edx, 6000h", "mov     eax, 62h ; 'b'", "jz      short loc_EDE0"], ["cmp~edx,0", "mov~eax,0", "jz~FOO"]], [2, 0, 14, 0, 0, 3, 0, 1, 1, 4, 0.02380952380952381, ["cmp     edx, 4000h", "mov     eax, 64h ; 'd'", "jz      short loc_EDE0"], ["cmp~edx,0", "mov~eax,0", "jz~FOO"]], [3, 0, 9, 0, 0, 5, 0, 0, 6, 4, 0.0, ["cmp     edx, 0C000h", "mov     eax, 73h ; 's'", "mov     edx, 3Fh ; '?'", "cmovnz  eax, edx", "nop     dword ptr [rax+00000000h]"], ["cmp~edx,0", "mov~eax,0", "mov~edx,0", "cmovnz~eax,edx", "nop~[word ptr [rax+0]"]], [2, 1, 0, 1, 0, 6, 1, 0, 6, -1, 0.0, ["and     eax, 0FFFFFFE0h", "add     eax, 74h ; 't'", "mov     [str+9], al", "mov     eax, 20h ; ' '", "mov     [str+0Ah], ax", "retn"], ["and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,<STR>", "mov~[str+0],ax", "retn"]]], "func_feature": [0, 25, 11, 0, 16, 23, 0, 110, 0.07381, 0, 12], "succs": [[9, 10], [0], [0], [], [3, 15], [8, 13], [8, 14], [8, 6], [1, 2], [4], [4], [8, 7], [8, 11], [8, 12], [8], []], "fname": "strmode", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[3, 1, 0, 1, 0, 8, 1, 0, 0, 0, 0.0, ["cmp     edx, 1", "sbb     eax, eax", "and     eax, 0FFFFFFE0h", "add     eax, 74h ; 't'", "mov     [str+9], al", "mov     eax, 20h ; ' '", "mov     [str+0Ah], ax", "retn"], ["cmp~edx,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,<STR>", "mov~[str+0],ax", "retn"]], [10, 0, 2, 2, 0, 19, 6, 1, 5, -1, 0.12380952380952381, ["mov     [str+6], dl", "mov     edx, eax", "and     edx, 4", "cmp     edx, 1", "sbb     edx, edx", "and     edx, 0FFFFFFBBh", "add     edx, 72h ; 'r'", "mov     [str+7], dl", "mov     edx, eax", "and     edx, 2", "cmp     edx, 1", "sbb     edx, edx", "and     edx, 0FFFFFFB6h", "add     edx, 77h ; 'w'", "mov     [str+8], dl", "mov     edx, eax", "and     edx, 1", "test    ah, 2", "jz      short loc_F058"], ["mov~[str+0],dl", "mov~edx,eax", "and~edx,0", "cmp~edx,0", "sbb~edx,edx", "and~edx,0", "add~edx,0", "mov~[str+0],dl", "mov~edx,eax", "and~edx,0", "cmp~edx,0", "sbb~edx,edx", "and~edx,0", "add~edx,0", "mov~[str+0],dl", "mov~edx,eax", "and~edx,0", "test~ah,0", "jz~FOO"]], [2, 0, 14, 0, 0, 3, 0, 1, 1, 4, 0.02380952380952381, ["cmp     ecx, 4000h", "mov     edx, 64h ; 'd'", "jz      short loc_EF70"], ["cmp~ecx,0", "mov~edx,0", "jz~FOO"]], [3, 0, 15, 0, 0, 6, 1, 1, 0, 4, 0.0, ["mov     eax, [statp+18h]", "mov     edx, 2Dh ; '-'", "mov     ecx, eax", "and     ecx, 0F000h", "cmp     ecx, 8000h", "jz      short loc_EF70"], ["mov~eax,[statp+0]", "mov~edx,0", "mov~ecx,eax", "and~ecx,0", "cmp~ecx,0", "jz~FOO"]], [2, 0, 3, 1, 0, 2, 1, 0, 4, -1, 0.07857142857142858, ["and     edx, 0FFFFFFE0h", "add     edx, 73h ; 's'"], ["and~edx,0", "add~edx,0"]], [10, 1, 5, 2, 0, 21, 6, 1, 3, 1, 0.2380952380952381, ["mov     [str+3], dl", "mov     edx, eax", "and     edx, 20h", "cmp     edx, 1", "sbb     edx, edx", "and     edx, 0FFFFFFBBh", "add     edx, 72h ; 'r'", "mov     [str+4], dl", "mov     edx, eax", "and     edx, 10h", "cmp     edx, 1", "sbb     edx, edx", "and     edx, 0FFFFFFB6h", "add     edx, 77h ; 'w'", "mov     [str+5], dl", "mov     edx, eax", "and     edx, 8", "cmp     edx, 1", "sbb     edx, edx", "test    ah, 4", "jz      loc_F070"], ["mov~[str+0],dl", "mov~edx,eax", "and~edx,<STR>", "cmp~edx,0", "sbb~edx,edx", "and~edx,0", "add~edx,0", "mov~[str+0],dl", "mov~edx,eax", "and~edx,0", "cmp~edx,0", "sbb~edx,edx", "and~edx,0", "add~edx,0", "mov~[str+0],dl", "mov~edx,eax", "and~edx,0", "cmp~edx,0", "sbb~edx,edx", "test~ah,0", "jz~FOO"]], [2, 0, 3, 1, 0, 3, 1, 1, 4, 0, 0.07857142857142858, ["and     edx, 0FFFFFFB5h", "add     edx, 78h ; 'x'", "jmp     loc_EFF9"], ["and~edx,0", "add~edx,0", "jmp~FOO"]], [2, 0, 11, 0, 0, 3, 0, 1, 4, 4, 0.0380952380952381, ["cmp     ecx, 0A000h", "mov     edx, 6Ch ; 'l'", "jz      short loc_EF70"], ["cmp~ecx,0", "mov~edx,0", "jz~FOO"]], [2, 0, 12, 0, 0, 3, 0, 1, 3, 4, 0.04285714285714286, ["cmp     ecx, 2000h", "mov     edx, 63h ; 'c'", "jz      short loc_EF70"], ["cmp~ecx,0", "mov~edx,0", "jz~FOO"]], [10, 1, 8, 2, 0, 21, 6, 1, 1, 3, 0.2666666666666667, ["mov     [str], dl", "mov     edx, eax", "and     edx, 100h", "cmp     edx, 1", "sbb     edx, edx", "and     edx, 0FFFFFFBBh", "add     edx, 72h ; 'r'", "mov     [str+1], dl", "mov     edx, eax", "and     edx, 80h", "cmp     edx, 1", "sbb     edx, edx", "and     edx, 0FFFFFFB6h", "add     edx, 77h ; 'w'", "mov     [str+2], dl", "mov     edx, eax", "and     edx, 40h", "cmp     edx, 1", "sbb     edx, edx", "test    ah, 8", "jz      loc_F048"], ["mov~<TAG>,dl", "mov~edx,eax", "and~edx,0", "cmp~edx,0", "sbb~edx,edx", "and~edx,0", "add~edx,0", "mov~[str+0],dl", "mov~edx,eax", "and~edx,<STR>", "cmp~edx,0", "sbb~edx,edx", "and~edx,0", "add~edx,0", "mov~[str+0],dl", "mov~edx,eax", "and~edx,0", "cmp~edx,0", "sbb~edx,edx", "test~ah,0", "jz~FOO"]], [2, 0, 13, 0, 0, 3, 0, 1, 2, 4, 0.0380952380952381, ["cmp     ecx, 6000h", "mov     edx, 62h ; 'b'", "jz      short loc_EF70"], ["cmp~ecx,0", "mov~edx,0", "jz~FOO"]], [1, 1, 10, 0, 0, 3, 0, 1, 5, 4, 0.02380952380952381, ["cmp     ecx, 1000h", "mov     edx, 70h ; 'p'", "jz      short loc_EF70"], ["cmp~ecx,<STR>", "mov~edx,0", "jz~FOO"]], [3, 0, 9, 0, 0, 5, 0, 0, 6, 4, 0.0, ["cmp     ecx, 0C000h", "mov     edx, 73h ; 's'", "mov     ecx, 3Fh ; '?'", "cmovnz  edx, ecx", "nop     dword ptr [rax+00h]"], ["cmp~ecx,0", "mov~edx,0", "mov~ecx,0", "cmovnz~edx,ecx", "nop~[word ptr [rax+0]"]], [2, 0, 6, 1, 0, 3, 1, 1, 2, 2, 0.1142857142857143, ["and     edx, 0FFFFFFB5h", "add     edx, 78h ; 'x'", "jmp     loc_EFB7"], ["and~edx,0", "add~edx,0", "jmp~FOO"]], [2, 0, 6, 1, 0, 2, 1, 0, 2, 2, 0.1142857142857143, ["and     edx, 0FFFFFFE0h", "add     edx, 73h ; 's'"], ["and~edx,0", "add~edx,0"]], [3, 1, 0, 1, 0, 8, 1, 0, 6, -1, 0.0, ["cmp     edx, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB5h", "add     eax, 78h ; 'x'", "mov     [str+9], al", "mov     eax, 20h ; ' '", "mov     [str+0Ah], ax", "retn"], ["cmp~edx,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,<STR>", "mov~[str+0],ax", "retn"]]], "func_feature": [0, 25, 11, 0, 16, 23, 1, 113, 0.07381, 0, 12], "succs": [[], [0, 15], [9, 10], [9, 2], [1], [4, 6], [1], [9, 11], [9, 7], [13, 14], [8, 9], [9, 12], [9], [5], [5], []], "fname": "filemodestring", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 4, 1, 2, 0, 1, 0.0, ["sub     rsp, 8", "call    mfile_name_concat", "test    p, p", "jz      short loc_F093"], ["sub~rsp,0", "call~FOO", "test~p,p", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 1, 3, 0, 3, 2, 1, 7, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "file_name_concat", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 4, 1, 1, 6, 1, 2, 0, 0, 0.2777777777777778, ["lea     rdi, [dirlen+baselen+1]", "add     rdi, [rsp+48h+var_48]; size", "call    malloc", "test    rax, rax", "mov     dirbaselen, rax", "jz      short loc_F176"], ["lea~rdi,[dirlen+0]", "add~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~dirbaselen,rax", "jz~FOO"]], [3, 0, 5, 0, 0, 9, 1, 1, 2, -1, 0.034722222222222224, ["xor     eax, eax", "cmp     byte ptr [base+0], 2Fh ; '/'", "mov     edx, 0", "setnz   al", "mov     [rsp+48h+var_48], rax", "mov     eax, 2Fh ; '/'", "cmovz   eax, edx", "mov     [rsp+48h+sep], al", "jmp     short loc_F12E"], ["xor~eax,eax", "cmp~[yte ptr [base+0],0", "mov~edx,0", "setnz~al", "mov~<TAG>,rax", "mov~eax,0", "cmovz~eax,edx", "mov~[rsp+0],al", "jmp~FOO"]], [2, 0, 5, 0, 0, 3, 0, 1, 2, 0, 0.034722222222222224, ["mov     [rsp+48h+var_48], 0", "mov     [rsp+48h+sep], 0", "jmp     short loc_F12E"], ["mov~<TAG>,0", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 5, 0, 0, 8, 1, 0, 1, -1, 0.06944444444444445, ["xor     eax, eax", "cmp     byte ptr [base+0], 2Fh ; '/'", "mov     edx, 0", "setz    al", "mov     [rsp+48h+var_48], rax", "mov     eax, 2Eh ; '.'", "cmovnz  eax, edx", "mov     [rsp+48h+sep], al"], ["xor~eax,eax", "cmp~[yte ptr [base+0],0", "mov~edx,0", "setz~al", "mov~<TAG>,rax", "mov~eax,0", "cmovnz~eax,edx", "mov~[rsp+0],al"]], [0, 0, 3, 1, 1, 10, 1, 2, 3, -1, 0.16666666666666666, ["mov     rdi, p_concat; dest", "mov     rdx, dirlen; n", "mov     rsi, dir; src", "call    _mempcpy", "movzx   ecx, [rsp+48h+sep]", "mov     rdi, [rsp+48h+var_48]", "add     rdi, rax; dest", "test    base_in_result, base_in_result", "mov     [rax], cl", "jz      short loc_F168"], ["mov~rdi,p_concat", "mov~rdx,dirlen", "mov~rsi,dir", "call~FOO", "movzx~ecx,[rsp+0]", "mov~rdi,<TAG>", "add~rdi,rax", "test~base_in_result,base_in_result", "mov~<TAG>,cl", "jz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 4, -1, 0.0, ["mov     [base_in_result], p"], ["mov~<TAG>,p"]], [1, 0, 7, 0, 0, 2, 0, 1, 1, 1, 0.027777777777777776, ["cmp     byte ptr [dir+dirlen-1], 2Fh ; '/'", "jz      loc_F190"], ["cmp~[yte ptr [dir+0],0", "jz~FOO"]], [1, 0, 9, 3, 3, 22, 1, 4, 0, 2, 0.0, ["push    r15", "push    r14", "mov     r15, base_in_result", "push    r13", "push    r12", "mov     r12, dir", "push    rbp", "push    rbx", "mov     rbp, base", "sub     rsp, 18h", "call    last_component", "mov     rbx, rax", "mov     rdi, dirbase; name", "call    base_len", "sub     dirbase, dir", "mov     r13, rax", "mov     rdi, base; s", "add     rbx, dirbaselen", "call    _strlen", "test    dirbaselen, dirbaselen", "mov     r14, rax", "jz      short loc_F110"], ["push~r15", "push~r14", "mov~r15,base_in_result", "push~r13", "push~r12", "mov~r12,dir", "push~rbp", "push~rbx", "mov~rbp,base", "sub~rsp,0", "call~FOO", "mov~rbx,rax", "mov~rdi,dirbase", "call~FOO", "sub~dirbase,dir", "mov~r13,rax", "mov~rdi,base", "add~rbx,dirbaselen", "call~FOO", "test~dirbaselen,dirbaselen", "mov~r14,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 3, -1, 0.0, ["add     rsp, 18h", "mov     rax, p_concat", "pop     dirlen", "pop     base", "pop     dir", "pop     p_concat", "pop     baselen", "pop     base_in_result", "retn"], ["add~rsp,0", "mov~rax,p_concat", "pop~dirlen", "pop~base", "pop~dir", "pop~p_concat", "pop~baselen", "pop~base_in_result", "retn"]], [1, 0, 1, 0, 1, 4, 0, 1, 4, -1, 0.027777777777777776, ["mov     rdx, baselen; n", "mov     rsi, base; src", "call    _mempcpy", "mov     byte ptr [rax], 0"], ["mov~rdx,baselen", "mov~rsi,base", "call~FOO", "mov~<TAG>,0"]]], "func_feature": [6, 5, 12, 1, 10, 13, 1, 74, 0.06389, 0, 6], "succs": [[8, 4], [0], [0], [0], [9, 5], [9], [1, 2], [3, 6], [], [8]], "fname": "mfile_name_concat", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 91, 0, 0, 3, 0, 1, 0, 0, 0.014555893279297533, ["mov     r14, s2_pos", "mov     r8, rdi", "jmp     loc_F5C3"], ["mov~r14,s2_pos", "mov~r8,rdi", "jmp~FOO"]], [0, 0, 93, 0, 0, 2, 1, 1, 14, 7, 0.06612630867950016, ["test    al, al", "jnz     loc_F7FA"], ["test~al,al", "jnz~FOO"]], [1, 0, 90, 0, 0, 3, 0, 0, 16, 7, 0.00035460992907801415, ["lea     edi, [rax-30h]", "cmp     dil, 9", "jbe     short loc_F63C"], ["lea~edi,[rax-30h]+0]", "cmp~dil,0", "jbe~FOO"]], [1, 0, 90, 0, 0, 2, 0, 1, 15, 7, 0.018963188112124277, ["cmp     al, 41h ; 'A'", "jge     short loc_F63C"], ["cmp~al,0", "jge~FOO"]], [2, 0, 48, 0, 0, 4, 2, 0, 18, -1, 0.22066869300911854, ["xor     edx, edx", "xor     eax, eax", "mov     r10d, 1", "mov     r15, 3FFFFFF03FFFFFFh"], ["xor~edx,edx", "xor~eax,eax", "mov~r10d,0", "mov~r15,0"]], [0, 0, 51, 0, 0, 2, 0, 1, 17, -1, 0.1990459304289091, ["cmp     s1_len, s2_len", "jnz     loc_F400"], ["cmp~s1_len,s2_len", "jnz~FOO"]], [0, 0, 50, 0, 1, 8, 1, 2, 18, -1, 0.004457953394123607, ["mov     rdx, s1_len; n", "mov     rsi, r14; s2", "mov     rdi, rbx; s1", "mov     [rsp+48h+var_40], r9", "mov     [rsp+48h+var_48], r8", "call    _strncmp", "test    eax, eax", "jnz     loc_F400"], ["mov~rdx,s1_len", "mov~rsi,r14", "mov~rdi,rbx", "mov~[rsp+0],r9", "mov~<TAG>,r8", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 49, 2, 0, 7, 0, 1, 19, -1, 0.0, ["mov     r8, [rsp+48h+var_48]", "mov     r9, [rsp+48h+var_40]", "sub     r8, rbx", "sub     r15, r9", "mov     s1_len, r8", "mov     s2_len, r15", "jmp     loc_F400"], ["mov~r8,<TAG>", "mov~r9,[rsp+0]", "sub~r8,rbx", "sub~r15,r9", "mov~s1_len,r8", "mov~s2_len,r15", "jmp~FOO"]], [0, 0, 49, 0, 0, 1, 0, 0, 19, -1, 0.025118203309692666, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [1, 0, 90, 0, 0, 2, 0, 1, 16, 7, 0.013171225937183383, ["cmp     al, 7Eh ; '~'", "jz      short loc_F63C"], ["cmp~al,0", "jz~FOO"]], [0, 1, 90, 0, 0, 3, 0, 1, 15, 7, 0.031121242823370466, ["lea     edi, [rax-61h]", "cmp     dil, 19h", "ja      short loc_F609"], ["lea~edi,[rax-61h]+0]", "cmp~dil,<STR>", "ja~FOO"]], [0, 0, 90, 0, 0, 2, 1, 1, 17, 7, 0.01060030395136778, ["test    dl, dl", "jz      loc_F7D6"], ["test~dl,dl", "jz~FOO"]], [2, 0, 137, 0, 0, 8, 1, 1, 4, 13, 0.027203647416413373, ["mov     ecx, 2", "mov     rsi, r8", "mov     rdi, s2", "repe cmpsb", "setnbe  cl", "sbb     cl, 0", "test    cl, cl", "jz      loc_F350"], ["mov~ecx,0", "mov~rsi,r8", "mov~rdi,s2", "cmpsb~<TAG>,<TAG>", "setnbe~cl", "sbb~cl,0", "test~cl,cl", "jz~FOO"]], [2, 0, 138, 0, 0, 9, 1, 1, 3, 14, 0.02056737588652482, ["lea     r8, asc_20D7B+1; \".\"", "mov     ecx, 2", "mov     rdi, s1", "mov     rsi, r8", "repe cmpsb", "setnbe  cl", "sbb     cl, 0", "test    cl, cl", "jz      loc_F6F8"], ["lea~r8,<TAG>", "mov~ecx,0", "mov~rdi,s1", "mov~rsi,r8", "cmpsb~<TAG>,<TAG>", "setnbe~cl", "sbb~cl,0", "test~cl,cl", "jz~FOO"]], [0, 0, 90, 0, 0, 1, 1, 0, 18, 6, 0.001519756838905775, ["xor     r13d, r13d"], ["xor~r13d,r13d"]], [0, 0, 48, 0, 0, 2, 0, 1, 19, -1, 0.24569402228976694, ["cmp     s1_len, rax", "ja      short loc_F422"], ["cmp~s1_len,rax", "ja~FOO"]], [0, 0, 48, 0, 0, 2, 1, 1, 28, -1, 0.03368794326241135, ["test    r8d, r8d", "jz      loc_F414"], ["test~r8d,r8d", "jz~FOO"]], [0, 0, 53, 1, 0, 4, 0, 1, 17, 0, 0.01691995947315096, ["mov     r12, r8", "mov     r15, rdx", "sub     r12, rbx", "jmp     loc_F65C"], ["mov~r12,r8", "mov~r15,rdx", "sub~r12,rbx", "jmp~FOO"]], [0, 0, 55, 0, 0, 3, 1, 1, 16, 1, 0.03834853090172239, ["test    rsi, rsi", "mov     r9, r14", "jz      short loc_F80F"], ["test~rsi,rsi", "mov~r9,r14", "jz~FOO"]], [0, 0, 48, 0, 0, 2, 0, 0, 20, -1, 0.004103343465045592, ["cmp     s2_len, rdx", "jbe     loc_F33E"], ["cmp~s2_len,rdx", "jbe~FOO"]], [1, 0, 90, 0, 0, 3, 0, 1, 17, 5, 0.020921985815602836, ["cmp     dl, 2Eh ; '.'", "mov     eax, edx", "jz      loc_F740"], ["cmp~dl,0", "mov~eax,edx", "jz~FOO"]], [0, 0, 90, 0, 0, 2, 1, 1, 16, 6, 0.04333417764268821, ["test    dl, dl", "jnz     short loc_F618"], ["test~dl,dl", "jnz~FOO"]], [1, 0, 90, 0, 0, 5, 0, 1, 18, 8, 0.006737588652482269, ["mov     r15, rcx", "cmp     al, 5Ah ; 'Z'", "movzx   edx, byte ptr [r15+1]", "lea     rcx, [r15+1]", "jle     short loc_F5FC"], ["mov~r15,rcx", "cmp~al,0", "movzx~edx,[yte ptr [r15+0]", "lea~rcx,[r15+0]", "jle~FOO"]], [2, 0, 136, 0, 0, 9, 1, 1, 5, 12, 0.033738601823708206, ["lea     r8, asc_20D7B; \"..\"", "mov     ecx, 3", "mov     rdi, rbx", "mov     rsi, r8", "repe cmpsb", "setnbe  cl", "sbb     cl, 0", "test    cl, cl", "jz      loc_F6F8"], ["lea~r8,<TAG>", "mov~ecx,0", "mov~rdi,rbx", "mov~rsi,r8", "cmpsb~<TAG>,<TAG>", "setnbe~cl", "sbb~cl,0", "test~cl,cl", "jz~FOO"]], [0, 0, 48, 1, 0, 7, 0, 0, 20, -1, 0.23292806484295844, ["mov     r11, rdx", "mov     [rsp+48h+var_48], r14", "sub     r11, rax", "lea     rdi, [s1_len+r11]", "lea     r9, [r14+r11]", "mov     [rsp+48h+var_40], rdi", "nop     dword ptr [rax+00000000h]"], ["mov~r11,rdx", "mov~<TAG>,r14", "sub~r11,rax", "lea~rdi,<TAG>", "lea~r9,<TAG>", "mov~[rsp+0],rdi", "nop~[word ptr [rax+0]"]], [1, 0, 90, 0, 0, 4, 0, 1, 14, 8, 0.04142181695373184, ["cmp     al, 5Ah ; 'Z'", "movzx   edx, byte ptr [r15+1]", "lea     rcx, [r15+1]", "jg      short loc_F633"], ["cmp~al,0", "movzx~edx,[yte ptr [r15+0]", "lea~rcx,[r15+0]", "jg~FOO"]], [0, 0, 91, 0, 0, 3, 1, 1, 17, 6, 0.0070921985815602835, ["mov     r14, s2_pos", "xor     esi, esi", "jmp     loc_F5C3"], ["mov~r14,s2_pos", "xor~esi,esi", "jmp~FOO"]], [0, 0, 93, 0, 0, 2, 1, 1, 16, 7, 0.017730496453900707, ["test    al, al", "jnz     loc_F805"], ["test~al,al", "jnz~FOO"]], [0, 0, 56, 0, 0, 1, 0, 0, 17, -1, 0.025806315433975043, ["mov     r15, rcx"], ["mov~r15,rcx"]], [0, 0, 48, 0, 0, 2, 0, 0, 21, -1, 0.2662613981762918, ["cmp     s1_len, rax", "jbe     short loc_F451"], ["cmp~s1_len,rax", "jbe~FOO"]], [2, 0, 48, 2, 0, 3, 0, 1, 25, -1, 0.03525835866261398, ["add     rax, 1", "add     rdx, 1", "jmp     loc_F440"], ["add~rax,0", "add~rdx,0", "jmp~FOO"]], [0, 0, 53, 1, 0, 4, 1, 1, 18, -1, 0.05419790611279972, ["mov     r13, r15", "sub     r13, r9", "test    rsi, rsi", "jnz     loc_F65F"], ["mov~r13,r15", "sub~r13,r9", "test~rsi,rsi", "jnz~FOO"]], [0, 0, 52, 2, 0, 5, 0, 1, 16, -1, 0.11626646403242147, ["sub     rsi, rbx", "mov     r13, r15", "mov     r12, rsi", "sub     r13, r9", "jmp     loc_F65F"], ["sub~rsi,rbx", "mov~r13,r15", "mov~r12,rsi", "sub~r13,r9", "jmp~FOO"]], [0, 0, 52, 1, 0, 1, 0, 0, 18, -1, 0.054257007767646075, ["sub     r13, r14"], ["sub~r13,r14"]], [2, 0, 135, 0, 0, 8, 1, 1, 6, 11, 0.04017223910840932, ["mov     ecx, 3", "mov     rsi, r8", "mov     rdi, r15", "repe cmpsb", "setnbe  cl", "sbb     cl, 0", "test    cl, cl", "jz      loc_F350"], ["mov~ecx,0", "mov~rsi,r8", "mov~rdi,r15", "cmpsb~<TAG>,<TAG>", "setnbe~cl", "sbb~cl,0", "test~cl,cl", "jz~FOO"]], [1, 0, 48, 0, 0, 4, 0, 1, 22, -1, 0.14113475177304963, ["movzx   edi, byte ptr [rbx+rax]", "lea     ecx, [rdi-30h]", "cmp     cl, 9", "ja      short loc_F46C"], ["movzx~edi,<TAG>", "lea~ecx,[rdi-30h]+0]", "cmp~cl,0", "ja~FOO"]], [0, 0, 55, 1, 0, 7, 2, 1, 18, -1, 0.05389564336372847, ["test    rsi, rsi", "mov     r12, rsi", "mov     r9, r14", "cmovz   r12, r8", "sub     r12, rbx", "test    r13, r13", "jz      loc_F3EE"], ["test~rsi,rsi", "mov~r12,rsi", "mov~r9,r14", "cmovz~r12,r8", "sub~r12,rbx", "test~r13,r13", "jz~FOO"]], [0, 0, 56, 0, 0, 1, 0, 1, 19, -1, 0.010443262411347517, ["jmp     loc_F643"], ["jmp~FOO"]], [0, 0, 56, 0, 0, 2, 0, 1, 17, -1, 0.01288416075650118, ["mov     r15, rdx", "jmp     loc_F643"], ["mov~r15,rdx", "jmp~FOO"]], [1, 0, 134, 0, 0, 2, 0, 1, 7, 10, 0.046504559270516714, ["cmp     dl, 2Eh ; '.'", "jz      loc_F6B8"], ["cmp~dl,0", "jz~FOO"]], [0, 0, 48, 0, 0, 3, 0, 0, 22, -1, 0.11527355623100304, ["cmp     s2_len, rdx", "movzx   ecx, byte ptr [r9+rax]", "jbe     loc_F580"], ["cmp~s2_len,rdx", "movzx~ecx,<TAG>", "jbe~FOO"]], [0, 0, 53, 1, 0, 4, 0, 1, 17, -1, 0.01691995947315096, ["sub     rsi, rbx", "mov     r15, rdx", "mov     r12, rsi", "jmp     loc_F65C"], ["sub~rsi,rbx", "mov~r15,rdx", "mov~r12,rsi", "jmp~FOO"]], [0, 0, 55, 0, 0, 2, 0, 1, 17, -1, 0.011398176291793313, ["mov     r14, s2_pos", "jmp     loc_F3E6"], ["mov~r14,s2_pos", "jmp~FOO"]], [1, 0, 127, 0, 0, 3, 0, 1, 8, 13, 0.036955420466058764, ["cmp     al, 2Eh ; '.'", "mov     r9, r15", "jz      loc_F350"], ["cmp~al,0", "mov~r9,r15", "jz~FOO"]], [1, 0, 48, 0, 0, 3, 0, 0, 23, -1, 0.001266464032421479, ["lea     esi, [rcx-30h]", "cmp     sil, 9", "jbe     loc_F580"], ["lea~esi,[rcx-30h]+0]", "cmp~sil,0", "jbe~FOO"]], [0, 0, 48, 0, 0, 2, 0, 1, 23, -1, 0.1382725430597771, ["cmp     s1_len, rax", "jz      short loc_F4CE"], ["cmp~s1_len,rax", "jz~FOO"]], [2, 0, 125, 0, 0, 4, 1, 0, 9, 12, 0.05455927051671732, ["mov     r8, rbx", "xor     esi, esi", "mov     r12d, 1", "mov     r11, 3FFFFFF03FFFFFFh"], ["mov~r8,rbx", "xor~esi,esi", "mov~r12d,0", "mov~r11,0"]], [0, 0, 126, 0, 0, 4, 0, 1, 10, 13, 0.005572441742654508, ["mov     r9, s2_pos", "mov     r15, s2_pos", "mov     rbx, s1_pos", "jmp     loc_F268"], ["mov~r9,s2_pos", "mov~r15,s2_pos", "mov~rbx,s1_pos", "jmp~FOO"]], [1, 0, 48, 0, 0, 4, 0, 0, 24, -1, 0.08882978723404254, ["movzx   esi, byte ptr [rbx+rax]", "lea     ecx, [rsi-30h]", "cmp     cl, 9", "jbe     loc_F518"], ["movzx~esi,<TAG>", "lea~ecx,[rsi-30h]+0]", "cmp~cl,0", "jbe~FOO"]], [1, 0, 125, 0, 0, 2, 0, 1, 10, 11, 0.06923336710570753, ["cmp     dl, 2Eh ; '.'", "jz      loc_F6E8"], ["cmp~dl,0", "jz~FOO"]], [0, 0, 125, 0, 0, 2, 1, 1, 16, 7, 0.022602161431948667, ["test    dl, dl", "jnz     loc_F27D"], ["test~dl,dl", "jnz~FOO"]], [1, 0, 48, 0, 0, 4, 0, 1, 25, -1, 0.045098784194528875, ["movzx   edi, sil", "lea     ecx, [rdi-41h]", "cmp     ecx, 39h ; '9'", "ja      short loc_F498"], ["movzx~edi,sil", "lea~ecx,[rdi-41h]+0]", "cmp~ecx,0", "ja~FOO"]], [1, 0, 125, 0, 0, 4, 0, 1, 11, 10, 0.03605200945626478, ["cmp     dl, 5Ah ; 'Z'", "movzx   ecx, byte ptr [r8+1]", "lea     r13, [r8+1]", "jg      loc_F360"], ["cmp~dl,0", "movzx~ecx,[yte ptr [r8+0]", "lea~r13,[r8+0]", "jg~FOO"]], [0, 0, 125, 0, 0, 2, 0, 1, 15, 11, 0.0029635258358662615, ["mov     r8, r13", "jmp     loc_F286"], ["mov~r8,r13", "jmp~FOO"]], [1, 0, 125, 0, 0, 3, 1, 1, 17, 10, 0.005893279297534615, ["xor     esi, esi", "cmp     dl, 2Eh ; '.'", "jnz     loc_F286"], ["xor~esi,esi", "cmp~dl,0", "jnz~FOO"]], [0, 0, 48, 1, 0, 4, 1, 1, 26, -1, 0.0009625126646403241, ["mov     r8, r10", "shl     r8, cl", "test    r8, r15", "jnz     short loc_F4A4"], ["mov~r8,r10", "shl~r8,cl", "test~r8,r15", "jnz~FOO"]], [1, 0, 125, 0, 0, 2, 0, 1, 12, 9, 0.015543735224586287, ["cmp     dl, 41h ; 'A'", "jge     loc_F36D"], ["cmp~dl,0", "jge~FOO"]], [2, 0, 48, 1, 0, 3, 0, 1, 26, -1, 0.033472644376899695, ["add     edi, 100h", "cmp     sil, 7Eh ; '~'", "jz      short loc_F520"], ["add~edi,0", "cmp~sil,0", "jz~FOO"]], [0, 0, 48, 0, 0, 2, 0, 1, 26, -1, 0.034435157041540015, ["cmp     s2_len, rdx", "jz      short loc_F4B7"], ["cmp~s2_len,rdx", "jz~FOO"]], [0, 0, 48, 0, 0, 2, 1, 1, 25, -1, 0.03273809523809523, ["xor     edi, edi", "jmp     short loc_F4A4"], ["xor~edi,edi", "jmp~FOO"]], [1, 0, 125, 0, 0, 3, 0, 0, 13, 9, 0.00035460992907801415, ["lea     edi, [rdx-30h]", "cmp     dil, 9", "jbe     loc_F36D"], ["lea~edi,[rdx-30h]+0]", "cmp~dil,0", "jbe~FOO"]], [1, 0, 1, 0, 0, 3, 0, 1, 28, -1, 0.0004685916919959473, ["mov     edi, 1", "mov     ebp, edi", "jmp     loc_F33E"], ["mov~edi,0", "mov~ebp,edi", "jmp~FOO"]], [1, 0, 48, 0, 0, 4, 0, 1, 27, -1, 0.02686170212765957, ["movsx   edx, byte ptr [rdi+rax]", "lea     ecx, [rdx-30h]", "cmp     cl, 9", "ja      loc_F6A8"], ["movsx~edx,<TAG>", "lea~ecx,[rdx-30h]+0]", "cmp~cl,0", "ja~FOO"]], [1, 0, 125, 0, 0, 2, 0, 1, 13, 9, 0.008611955420466059, ["cmp     dl, 7Eh ; '~'", "jz      loc_F36D"], ["cmp~dl,0", "jz~FOO"]], [0, 1, 125, 0, 0, 3, 0, 1, 12, 9, 0.023142519419115166, ["lea     edi, [rdx-61h]", "cmp     dil, 19h", "ja      loc_F2AE"], ["lea~edi,[rdx-61h]+0]", "cmp~dil,<STR>", "ja~FOO"]], [1, 0, 48, 0, 0, 4, 0, 1, 27, -1, 0.000911854103343465, ["movzx   r8d, byte ptr [r9+rax]", "lea     ecx, [r8-30h]", "cmp     cl, 9", "ja      short loc_F4E8"], ["movzx~r8d,<TAG>", "lea~ecx,[r8-30h]+0]", "cmp~cl,0", "ja~FOO"]], [0, 0, 48, 0, 0, 1, 1, 0, 27, -1, 0.024759371833839916, ["xor     esi, esi"], ["xor~esi,esi"]], [0, 0, 125, 0, 0, 2, 1, 1, 14, 9, 0.007168186423505572, ["test    cl, cl", "jz      loc_F702"], ["test~cl,cl", "jz~FOO"]], [1, 0, 131, 0, 0, 2, 0, 1, 8, 9, 0.015526849037487335, ["cmp     al, 2Eh ; '.'", "jnz     short loc_F6F8"], ["cmp~al,0", "jnz~FOO"]], [0, 0, 48, 0, 0, 2, 0, 1, 28, -1, 0.03620820668693009, ["cmp     esi, edi", "jnz     loc_F5A7"], ["cmp~esi,edi", "jnz~FOO"]], [0, 0, 48, 1, 0, 4, 1, 1, 28, -1, 0.005521783181357649, ["mov     r14, r10", "shl     r14, cl", "test    r14, r15", "jnz     short loc_F4B9"], ["mov~r14,r10", "shl~r14,cl", "test~r14,r15", "jnz~FOO"]], [3, 0, 48, 1, 0, 5, 0, 1, 28, -1, 0.005521783181357649, ["add     esi, 100h", "mov     ecx, 0FFFFFFFFh", "cmp     r8b, 7Eh ; '~'", "cmovz   esi, ecx", "jmp     short loc_F4B9"], ["add~esi,0", "mov~ecx,0", "cmp~r8b,0", "cmovz~esi,ecx", "jmp~FOO"]], [0, 0, 125, 0, 0, 2, 1, 1, 15, 12, 0.001519756838905775, ["xor     esi, esi", "jmp     loc_F375"], ["xor~esi,esi", "jmp~FOO"]], [0, 0, 48, 0, 0, 2, 0, 1, 24, -1, 0.038449848024316106, ["cmp     s2_len, [rsp+48h+var_40]", "jz      short loc_F4C1"], ["cmp~s2_len,[rsp+0]", "jz~FOO"]], [1, 0, 48, 0, 0, 4, 0, 0, 25, -1, 0.02492401215805471, ["movzx   r8d, byte ptr [r9+s1_len]", "lea     ecx, [r8-30h]", "cmp     cl, 9", "jbe     short loc_F4C1"], ["movzx~r8d,<TAG>", "lea~ecx,[r8-30h]+0]", "cmp~cl,0", "jbe~FOO"]], [0, 0, 129, 0, 0, 6, 1, 1, 9, 8, 0.021479229989868287, ["movzx   edx, byte ptr [rbx+1]", "lea     r8, [rbx+1]", "lea     r14, [r15+1]", "movzx   eax, byte ptr [r15+1]", "test    dl, dl", "jz      loc_F5B6"], ["movzx~edx,[yte ptr [rbx+0]", "lea~r8,[rbx+0]", "lea~r14,[r15+0]", "movzx~eax,[yte ptr [r15+0]", "test~dl,dl", "jz~FOO"]], [1, 0, 48, 1, 0, 2, 0, 0, 25, -1, 0.0, ["add     rdx, 1", "movzx   ecx, byte ptr [r14+rdx]"], ["add~rdx,0", "movzx~ecx,<TAG>"]], [1, 0, 48, 0, 0, 2, 0, 1, 24, -1, 0.08923505572441742, ["cmp     cl, 30h ; '0'", "jz      short loc_F2D0"], ["cmp~cl,0", "jz~FOO"]], [1, 0, 48, 0, 0, 3, 0, 1, 23, -1, 0.10407801418439716, ["cmp     byte ptr [rbx+rax], 30h ; '0'", "mov     r14, [rsp+48h+var_48]", "jnz     loc_F2D9"], ["cmp~<TAG>,0", "mov~r14,<TAG>", "jnz~FOO"]], [0, 0, 48, 0, 0, 1, 0, 1, 26, -1, 0.004609929078014184, ["jmp     loc_F2D9"], ["jmp~FOO"]], [0, 0, 48, 0, 0, 2, 1, 0, 26, -1, 0.018642350557244173, ["xor     edi, edi", "nop     dword ptr [rax]"], ["xor~edi,edi", "nop~<TAG>"]], [0, 0, 48, 1, 0, 5, 1, 1, 25, -1, 0.07824214792299898, ["sub     rdx, rax", "xor     r8d, r8d", "mov     r9, rdx", "lea     rdi, [r14+rdx]", "jmp     short loc_F314"], ["sub~rdx,rax", "xor~r8d,r8d", "mov~r9,rdx", "lea~rdi,<TAG>", "jmp~FOO"]], [0, 0, 125, 0, 0, 3, 0, 1, 11, 10, 0.049130361364403914, ["lea     rdi, [r8+1]", "mov     r13, r8", "jmp     loc_F38C"], ["lea~rdi,[r8+0]", "mov~r13,r8", "jmp~FOO"]], [1, 0, 48, 0, 0, 4, 0, 1, 27, -1, 0.021985815602836876, ["movzx   esi, r8b", "lea     ecx, [rsi-41h]", "cmp     ecx, 39h ; '9'", "ja      short loc_F4FF"], ["movzx~esi,r8b", "lea~ecx,[rsi-41h]+0]", "cmp~ecx,0", "ja~FOO"]], [1, 0, 48, 0, 0, 2, 0, 1, 29, -1, 0.004204660587639311, ["mov     edi, 0FFFFFFFFh", "jmp     short loc_F4E8"], ["mov~edi,0", "jmp~FOO"]], [1, 0, 48, 0, 0, 5, 0, 0, 26, -1, 0.0830547112462006, ["movzx   esi, byte ptr [rbx+rax]", "lea     rdx, [rax+r9]", "lea     r11d, [rsi-30h]", "cmp     r11b, 9", "jbe     short loc_F2F0"], ["movzx~esi,<TAG>", "lea~rdx,<TAG>", "lea~r11d,[rsi-30h]+0]", "cmp~r11b,0", "jbe~FOO"]], [0, 0, 94, 0, 0, 1, 0, 0, 15, 8, 0.008232016210739615, ["mov     r8, r13"], ["mov~r8,r13"]], [0, 0, 48, 0, 0, 2, 1, 1, 28, -1, 0.015349544072948328, ["test    r8d, r8d", "jnz     short loc_F30C"], ["test~r8d,r8d", "jnz~FOO"]], [0, 0, 125, 0, 0, 2, 1, 1, 16, 8, 0.008096926713947988, ["test    dl, dl", "jz      loc_F705"], ["test~dl,dl", "jz~FOO"]], [0, 0, 48, 1, 0, 2, 0, 0, 29, -1, 0.0, ["movsx   r8d, sil", "sub     r8d, edx"], ["movsx~r8d,sil", "sub~r8d,edx"]], [1, 0, 48, 1, 0, 2, 0, 0, 29, -1, 0.006737588652482269, ["add     rax, 1", "movzx   ecx, byte ptr [rdi+rax]"], ["add~rax,0", "movzx~ecx,<TAG>"]], [0, 0, 125, 0, 0, 2, 0, 1, 13, 9, 0.0037993920972644373, ["mov     rsi, r13", "jmp     loc_F569"], ["mov~rsi,r13", "jmp~FOO"]], [0, 0, 125, 0, 0, 3, 1, 1, 12, 9, 0.07838568051334008, ["test    rsi, rsi", "movzx   r10d, byte ptr [r13+1]", "jz      loc_F7E6"], ["test~rsi,rsi", "movzx~r10d,[yte ptr [r13+0]", "jz~FOO"]], [0, 0, 125, 0, 0, 2, 1, 1, 13, 8, 0.07722053360351233, ["test    r10b, r10b", "jz      loc_F715"], ["test~r10b,r10b", "jz~FOO"]], [0, 0, 53, 0, 0, 2, 0, 0, 15, -1, 0.052431610942249234, ["mov     r14, s2_pos", "mov     r8, rdi"], ["mov~r14,s2_pos", "mov~r8,rdi"]], [0, 0, 48, 0, 0, 3, 0, 1, 27, -1, 0.026177811550151975, ["lea     rcx, [rax+r11]", "cmp     s2_len, rcx", "jz      short loc_F5A0"], ["lea~rcx,<TAG>", "cmp~s2_len,rcx", "jz~FOO"]], [2, 0, 48, 1, 0, 3, 0, 0, 27, -1, 0.04520010131712259, ["sub     ecx, 30h ; '0'", "cmp     cl, 9", "jbe     loc_F7EE"], ["sub~ecx,0", "cmp~cl,0", "jbe~FOO"]], [0, 0, 56, 0, 0, 2, 1, 1, 16, -1, 0.06955927051671731, ["test    rsi, rsi", "jnz     loc_F723"], ["test~rsi,rsi", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 29, -1, 5.0658561296859166e-05, ["mov     ebp, r8d"], ["mov~ebp,r8d"]], [1, 0, 48, 0, 0, 4, 0, 0, 28, -1, 0.008713272543059777, ["movzx   r8d, byte ptr [r9+rax]", "lea     ecx, [r8-30h]", "cmp     cl, 9", "jbe     short loc_F5A0"], ["movzx~r8d,<TAG>", "lea~ecx,[r8-30h]+0]", "cmp~cl,0", "jbe~FOO"]], [0, 0, 90, 0, 0, 1, 0, 0, 18, 4, 0.01160081053698075, ["lea     rdx, [r15+2]"], ["lea~rdx,[r15+0]"]], [1, 0, 125, 0, 0, 2, 0, 1, 15, 8, 0.01563660925363053, ["cmp     r10b, 7Eh ; '~'", "jz      loc_F3CA"], ["cmp~r10b,0", "jz~FOO"]], [2, 0, 125, 1, 0, 6, 0, 1, 14, 9, 0.019148936170212766, ["movsx   ecx, r10b", "lea     r8, [rdi+1]", "movzx   edx, byte ptr [rdi+1]", "sub     ecx, 41h ; 'A'", "cmp     ecx, 39h ; '9'", "ja      loc_F540"], ["movsx~ecx,r10b", "lea~r8,[rdi+0]", "movzx~edx,[yte ptr [rdi+0]", "sub~ecx,0", "cmp~ecx,0", "ja~FOO"]], [0, 0, 125, 1, 0, 4, 1, 1, 15, 8, 0.006627828436339073, ["mov     r14, r12", "shl     r14, cl", "test    r14, r11", "jz      loc_F540"], ["mov~r14,r12", "shl~r14,cl", "test~r14,r11", "jz~FOO"]], [0, 0, 90, 0, 0, 3, 1, 1, 14, 3, 0.08036136440391756, ["test    r13, r13", "movzx   edi, byte ptr [rcx+1]", "jz      loc_F7E1"], ["test~r13,r13", "movzx~edi,[yte ptr [rcx+0]", "jz~FOO"]], [1, 0, 90, 0, 0, 4, 0, 1, 13, 4, 0.10417933130699089, ["cmp     al, 2Eh ; '.'", "lea     rdx, [r15+1]", "mov     rcx, r15", "jz      loc_F744"], ["cmp~al,0", "lea~rdx,[r15+0]", "mov~rcx,r15", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 1, -1, 0.0, ["add     rsp, 18h", "mov     eax, ebp", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "mov~eax,ebp", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 141, 1, 1, 13, 1, 2, 0, 17, 0.0, ["push    r15", "push    r14", "mov     r15, s2", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, s1", "sub     rsp, 18h", "call    _strcmp", "test    eax, eax", "mov     ebp, eax", "jz      loc_F33E"], ["push~r15", "push~r14", "mov~r15,s2", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,s1", "sub~rsp,0", "call~FOO", "test~eax,eax", "mov~ebp,eax", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, -1, 0.00022796352583586625, ["mov     ebp, 1", "jmp     short loc_F33E"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 2, 1, 0, 2, 0, 1, 29, -1, 0.00782674772036474, ["sub     edi, esi", "jz      loc_F33E"], ["sub~edi,esi", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 30, -1, 0.0, ["mov     ebp, edi", "jmp     loc_F33E"], ["mov~ebp,edi", "jmp~FOO"]], [0, 0, 92, 0, 0, 2, 1, 1, 10, 7, 0.02142857142857143, ["test    al, al", "jz      loc_F33E"], ["test~al,al", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, -1, 0.00022796352583586625, ["mov     ebp, 0FFFFFFFFh", "jmp     loc_F33E"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 3, 0, 1, 28, -1, 0.0004685916919959473, ["mov     edi, 0FFFFFFFFh", "mov     ebp, edi", "jmp     loc_F33E"], ["mov~edi,0", "mov~ebp,edi", "jmp~FOO"]], [0, 0, 90, 0, 0, 2, 1, 1, 15, 2, 0.07001013171225937, ["test    dil, dil", "jz      short loc_F7C0"], ["test~dil,dil", "jz~FOO"]], [0, 0, 139, 0, 0, 3, 1, 1, 2, 15, 0.01388044579533941, ["movzx   eax, byte ptr [s2]", "test    al, al", "jz      loc_F350"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 92, 0, 0, 2, 0, 1, 14, 7, 0.040889902060114836, ["mov     r8, r13", "jmp     loc_F3D2"], ["mov~r8,r13", "jmp~FOO"]], [0, 0, 125, 0, 0, 2, 1, 1, 13, 8, 0.04934988179669031, ["test    cl, cl", "jz      loc_F738"], ["test~cl,cl", "jz~FOO"]], [1, 0, 125, 1, 0, 3, 0, 0, 18, 9, 0.006281661600810537, ["movzx   r10d, byte ptr [rdi+2]", "mov     rsi, r8", "add     rdi, 2"], ["movzx~r10d,[yte ptr [rdi+0]", "mov~rsi,r8", "add~rdi,0"]], [2, 0, 90, 1, 0, 6, 0, 1, 16, 7, 0.03454913880445795, ["movsx   ecx, dil", "movzx   eax, byte ptr [rdx+1]", "lea     r15, [rdx+1]", "sub     ecx, 41h ; 'A'", "cmp     ecx, 39h ; '9'", "ja      short loc_F788"], ["movsx~ecx,dil", "movzx~eax,[yte ptr [rdx+0]", "lea~r15,[rdx+0]", "sub~ecx,0", "cmp~ecx,0", "ja~FOO"]], [0, 0, 90, 0, 0, 2, 1, 1, 16, 8, 0.01749408983451536, ["test    dil, dil", "jnz     short loc_F756"], ["test~dil,dil", "jnz~FOO"]], [0, 0, 125, 0, 0, 2, 1, 1, 14, 8, 0.02082066869300912, ["test    r10b, r10b", "jnz     loc_F3A3"], ["test~r10b,r10b", "jnz~FOO"]], [0, 0, 90, 1, 0, 4, 1, 1, 17, 6, 0.007532928064842959, ["mov     r11, r10", "shl     r11, cl", "test    r11, r9", "jz      short loc_F788"], ["mov~r11,r10", "shl~r11,cl", "test~r11,r9", "jz~FOO"]], [0, 0, 92, 0, 0, 2, 0, 1, 15, 7, 0.01975683890577508, ["mov     r8, rdi", "jmp     loc_F3D2"], ["mov~r8,rdi", "jmp~FOO"]], [0, 0, 90, 0, 0, 2, 1, 1, 18, 5, 0.018573961499493415, ["test    al, al", "jnz     loc_F5E0"], ["test~al,al", "jnz~FOO"]], [1, 0, 90, 0, 0, 2, 0, 1, 17, 6, 0.024888551165146912, ["cmp     dil, 7Eh ; '~'", "jz      short loc_F775"], ["cmp~dil,0", "jz~FOO"]], [1, 0, 125, 0, 0, 3, 0, 1, 14, 11, 0.01884498480243161, ["cmp     cl, 2Eh ; '.'", "mov     edx, ecx", "jz      short loc_F388"], ["cmp~cl,0", "mov~edx,ecx", "jz~FOO"]], [0, 0, 125, 0, 0, 1, 0, 0, 15, 10, 0.018515704154002027, ["lea     rdi, [r8+2]"], ["lea~rdi,[r8+0]"]], [0, 0, 48, 0, 0, 1, 0, 0, 24, -1, 0.013221884498480243, ["xchg    ax, ax"], ["xchg~ax,ax"]], [0, 0, 90, 0, 0, 2, 1, 1, 18, 10, 0.01531661600810537, ["test    al, al", "jz      short loc_F7B8"], ["test~al,al", "jz~FOO"]], [1, 0, 90, 0, 0, 3, 1, 1, 19, 9, 0.007370820668693008, ["xor     r13d, r13d", "cmp     al, 2Eh ; '.'", "jnz     loc_F5EF"], ["xor~r13d,r13d", "cmp~al,0", "jnz~FOO"]], [2, 0, 48, 1, 0, 3, 0, 1, 25, -1, 0.008915906788247214, ["add     rax, 1", "cmp     byte ptr [rbx+rax], 30h ; '0'", "jz      short loc_F590"], ["add~rax,0", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 1, 0, 28, -1, 0.006623606889564336, ["xor     esi, esi", "mov     edi, 0FFFFFFFFh"], ["xor~esi,esi", "mov~edi,0"]], [1, 0, 90, 1, 0, 3, 0, 0, 20, 9, 0.00425531914893617, ["movzx   edi, byte ptr [rdx+2]", "mov     r13, r15", "add     rdx, 2"], ["movzx~edi,[yte ptr [rdx+0]", "mov~r13,r15", "add~rdx,0"]], [0, 0, 90, 0, 0, 2, 0, 1, 15, 9, 0.007767646065518406, ["mov     r13, rcx", "jmp     short loc_F7A8"], ["mov~r13,rcx", "jmp~FOO"]], [0, 0, 57, 0, 0, 2, 0, 1, 19, -1, 0.005311550151975683, ["mov     r9, r14", "jmp     loc_F3DD"], ["mov~r9,r14", "jmp~FOO"]], [0, 0, 91, 0, 0, 2, 1, 0, 11, 6, 0.0254305977710233, ["mov     rbx, s1_pos", "xor     esi, esi"], ["mov~rbx,s1_pos", "xor~esi,esi"]], [0, 0, 140, 0, 0, 3, 1, 1, 1, 16, 0.007041540020263424, ["movzx   edx, byte ptr [s1]", "test    dl, dl", "jz      loc_F6F8"], ["movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [0, 0, 91, 0, 0, 3, 1, 1, 15, 6, 0.08671057075312394, ["test    al, al", "mov     r14, s2_pos", "jnz     loc_F5C3"], ["test~al,al", "mov~r14,s2_pos", "jnz~FOO"]], [2, 0, 90, 0, 0, 5, 1, 0, 12, 5, 0.09412360688956432, ["mov     r15, s2_pos", "xor     r13d, r13d", "mov     r10d, 1", "mov     r9, 3FFFFFF03FFFFFFh", "nop     dword ptr [rax+00000000h]"], ["mov~r15,s2_pos", "xor~r13d,r13d", "mov~r10d,0", "mov~r9,0", "nop~[word ptr [rax+0]"]], [0, 0, 57, 0, 0, 3, 0, 1, 18, -1, 0.006446301925025329, ["mov     r9, r14", "mov     r15, rcx", "jmp     loc_F3DD"], ["mov~r9,r14", "mov~r15,rcx", "jmp~FOO"]], [0, 0, 54, 1, 0, 3, 1, 0, 17, -1, 0.017831813576494427, ["mov     r12, r8", "xor     esi, esi", "sub     r12, rbx"], ["mov~r12,r8", "xor~esi,esi", "sub~r12,rbx"]]], "func_feature": [2, 54, 108, 2, 142, 228, 4, 441, 0.03557, 2, 32], "succs": [[139], [0, 94], [9, 21], [2, 21], [15], [4, 6], [4, 7], [4], [4], [11, 21], [9, 21], [140, 14], [108, 23], [112, 12], [20], [24, 19], [98, 15], [33], [17, 41], [24, 106], [100, 22], [28, 20], [10, 3], [112, 34], [29], [10, 3], [139], [26, 42], [36], [40, 35], [29], [8, 5], [5], [5], [108, 39], [40, 45], [33, 31], [36], [36], [43, 68], [44, 78], [33], [141], [108, 46], [45, 78], [48, 73], [49], [46], [59, 51], [82, 52], [49, 138], [57, 55], [56, 64], [52], [52, 118], [57, 58], [60, 117], [58, 95], [65, 66], [58], [117, 63], [106], [61, 87], [67, 117], [117, 63], [66, 83], [69], [72, 86], [112, 75], [109, 30], [69, 71], [69], [126], [74, 30], [80, 30], [111, 47], [77], [81, 76], [128, 77], [77], [83], [85], [92], [70, 71], [83], [96, 62], [27], [89, 90], [27, 54], [90], [85], [121], [91, 93], [1, 102], [32], [99, 132], [16, 113], [32, 141], [106], [132, 84], [104], [88, 50], [101, 103], [50, 101], [114, 134], [104, 25], [], [137, 106], [106], [106, 110], [106], [136, 106], [106], [106], [18, 119], [108, 13], [138], [116, 126], [121], [122, 125], [38, 119], [123, 102], [124, 125], [138], [105, 37], [129, 124], [53, 127], [92], [131], [130, 135], [25, 133], [131, 79], [109], [120], [120], [97], [139], [112, 115], [97, 139], [105], [97], [31]], "fname": "filevercmp", "n_num": 142}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rsi, ts; tp", "xor     edi, edi; clock_id", "jmp     _clock_gettime"], ["mov~rsi,ts", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 1, 3, 0.0, 0, 0], "succs": [[], [0]], "fname": "gettime", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 28h", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 12, 3, 2, 0, 1, 0.0, ["sub     rsp, 28h", "xor     edi, edi; clock_id", "mov     rsi, rsp; tp", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "call    _clock_gettime", "mov     rcx, [rsp+28h+var_10]", "xor     rcx, fs:28h", "mov     rax, [rsp+28h+ts.tv_sec]", "mov     rdx, [rsp+28h+ts.tv_nsec]", "jnz     short loc_F86C"], ["sub~rsp,0", "xor~edi,edi", "mov~rsi,rsp", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,<TAG>", "mov~rdx,[rsp+0]", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 3, 3, 1, 3, 2, 0, 15, 0.0, 1, 2], "succs": [[], [0, 2], []], "fname": "current_timespec", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [2, 0, 3, 1, 1, 7, 2, 2, 0, 2, 0.0, ["sub     rsp, 8", "xor     esi, esi; locale", "call    _setlocale", "mov     rdx, rax", "mov     eax, 1", "test    p, p", "jz      short loc_F8B5"], ["sub~rsp,0", "xor~esi,esi", "call~FOO", "mov~rdx,rax", "mov~eax,0", "test~p,p", "jz~FOO"]], [2, 0, 2, 0, 0, 9, 2, 1, 1, 1, 0.16666666666666666, ["lea     rdi, aC; \"C\"", "mov     ecx, 2", "mov     rsi, p", "repe cmpsb", "setnbe  cl", "sbb     cl, 0", "xor     eax, eax", "test    cl, cl", "jnz     short loc_F8C0"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,p", "cmpsb~<TAG>,<TAG>", "setnbe~cl", "sbb~cl,0", "xor~eax,eax", "test~cl,cl", "jnz~FOO"]], [3, 0, 0, 1, 0, 10, 1, 0, 2, 0, 0.0, ["lea     rdi, aPosix; \"POSIX\"", "mov     ecx, 6", "mov     rsi, rdx", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "setnz   al", "add     rsp, 8", "retn"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,rdx", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "setnz~al", "add~rsp,0", "retn"]]], "func_feature": [1, 5, 3, 0, 4, 4, 3, 28, 0.04167, 2, 3], "succs": [[], [0, 2], [0, 3], []], "fname": "hard_locale", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 0, 1, 0, 6, 1, 0, 0, 0, 0.0, ["mov     rax, data", "xor     edx, edx", "ror     rax, 3", "div     n", "mov     rax, rdx", "retn"], ["mov~rax,data", "xor~edx,edx", "ror~rax,0", "div~,n", "mov~rax,rdx", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 6, 0.0, 0, 1], "succs": [[]], "fname": "raw_hasher", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["cmp     a, b", "setz    al", "retn"], ["cmp~a,b", "setz~al", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 0], "succs": [[]], "fname": "raw_comparator", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 20, 0, 1, 14, 0, 1, 0, 0, 0.0, ["push    r14", "push    r13", "mov     r13, table", "push    r12", "push    rbp", "mov     rbp, entry", "push    rbx", "mov     r14, bucket_head", "mov     entry, [table+10h]", "mov     r12d, ecx", "mov     table, entry", "call    qword ptr [table+30h]", "cmp     rax, [table+10h]", "jnb     loc_FA2E"], ["push~r14", "push~r13", "mov~r13,table", "push~r12", "push~rbp", "mov~rbp,entry", "push~rbx", "mov~r14,bucket_head", "mov~entry,[table+0]", "mov~r12d,ecx", "mov~table,entry", "call~[word ptr [table+0]", "cmp~rax,[table+0]", "jnb~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 0, -1, 0.0, ["pop     rbx", "mov     rax, rsi", "pop     entry", "pop     r12", "pop     table", "pop     bucket_head", "retn"], ["pop~rbx", "mov~rax,rsi", "pop~entry", "pop~r12", "pop~table", "pop~bucket_head", "retn"]], [0, 0, 2, 0, 0, 2, 1, 1, 0, -1, 0.04736842105263158, ["test    r12b, r12b", "jz      short loc_F9BB"], ["test~r12b,r12b", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 0, -1, 0.05263157894736842, ["test    r12b, r12b", "jz      short loc_F9BB"], ["test~r12b,r12b", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, -1, 0.002631578947368421, ["mov     qword ptr [rbx], 0", "jmp     short loc_F9BB"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 6, 0, 0, 0, -1, 0.0, ["mov     rdx, [rax+8]", "mov     [cursor+8], rdx", "mov     qword ptr [rax], 0", "mov     rdx, [table+48h]", "mov     [rax+8], rdx", "mov     [table+48h], rax"], ["mov~rdx,[rax+0]", "mov~[cursor+0],rdx", "mov~<TAG>,0", "mov~rdx,[table+0]", "mov~[rax+0],rdx", "mov~[table+0],rax"]], [0, 0, 17, 0, 0, 2, 0, 1, 0, -1, 0.08421052631578947, ["cmp     rsi, entry", "jz      loc_F9D3"], ["cmp~rsi,entry", "jz~FOO"]], [1, 0, 18, 2, 0, 7, 1, 1, 0, -1, 0.04736842105263158, ["shl     rax, 4", "add     rax, [table+0]", "mov     [bucket_head], rax", "mov     rsi, [rax]", "mov     rbx, rax", "test    rsi, rsi", "jz      loc_FA20"], ["shl~rax,0", "add~rax,[table+0]", "mov~<TAG>,rax", "mov~rsi,<TAG>", "mov~rbx,rax", "test~rsi,rsi", "jz~FOO"]], [0, 0, 8, 0, 0, 3, 0, 1, 0, -1, 0.013157894736842105, ["mov     rsi, [rax]", "cmp     rsi, entry", "jz      short loc_F99B"], ["mov~rsi,<TAG>", "cmp~rsi,entry", "jz~FOO"]], [0, 0, 8, 0, 0, 4, 1, 1, 0, -1, 0.02631578947368421, ["mov     cursor, [cursor+8]", "mov     rax, [cursor+8]", "test    rax, rax", "jz      loc_FA20"], ["mov~cursor,[cursor+0]", "mov~rax,[cursor+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 0, -1, 0.013157894736842105, ["mov     rsi, [rbx]"], ["mov~rsi,<TAG>"]], [0, 0, 9, 0, 0, 3, 0, 1, 0, -1, 0.09473684210526316, ["mov     rsi, [rax]", "cmp     entry, rsi", "jnz     short loc_F989"], ["mov~rsi,<TAG>", "cmp~entry,rsi", "jnz~FOO"]], [0, 0, 10, 0, 0, 3, 1, 1, 0, -1, 0.08947368421052632, ["mov     rax, [cursor+8]", "test    rax, rax", "jz      loc_FA20"], ["mov~rax,[cursor+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 0, -1, 0.031578947368421054, ["mov     rax, [rbx+8]", "test    rax, rax", "jz      short loc_FA10"], ["mov~rax,[rbx+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 0, -1, 0.03684210526315789, ["jmp     short loc_F99B"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 8, 1, 0, 0, -1, 0.0, ["xor     esi, esi", "pop     rbx", "mov     rax, rsi", "pop     entry", "pop     r12", "pop     table", "pop     bucket_head", "retn"], ["xor~esi,esi", "pop~rbx", "mov~rax,rsi", "pop~entry", "pop~r12", "pop~table", "pop~bucket_head", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 16, 0, 1, 4, 1, 2, 0, -1, 0.08157894736842106, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_F9D0"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [1, 0, 0, 0, 0, 13, 0, 0, 0, -1, 0.0, ["movdqu  xmm0, xmmword ptr [next]", "movups  xmmword ptr [rbx], xmm0", "mov     qword ptr [next], 0", "mov     rdx, [table+48h]", "mov     [next+8], rdx", "mov     [table+48h], next", "mov     next, rsi", "pop     rbx", "pop     entry", "pop     r12", "pop     table", "pop     bucket_head", "retn"], ["movdqu~xmm0,<TAG>", "movups~<TAG>,xmm0", "mov~<TAG>,0", "mov~rdx,[table+0]", "mov~[next+0],rdx", "mov~[table+0],next", "mov~next,rsi", "pop~rbx", "pop~entry", "pop~r12", "pop~table", "pop~bucket_head", "retn"]], [0, 0, 8, 0, 1, 4, 1, 2, 0, -1, 0.060526315789473685, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jz      short loc_F970"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 0, 0, -1, 0.007894736842105263, ["mov     rax, [cursor+8]", "mov     rsi, [rax]"], ["mov~rax,[cursor+0]", "mov~rsi,<TAG>"]]], "func_feature": [4, 9, 17, 0, 21, 29, 2, 92, 0.03283, 0, 2], "succs": [[16, 7], [], [1, 5], [1, 13], [1], [1], [17, 3], [6, 15], [2, 19], [8, 15], [3], [19, 14], [11, 15], [18, 4], [2], [], [], [10, 12], [], [9, 20], [2]], "fname": "hash_find_entry", "n_num": 21}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 22, 0, 0, 3, 1, 1, 0, 0, 0.40316205533596833, ["mov     r13, [bucket+8]", "test    cursor, cursor", "jz      short loc_FAF4"], ["mov~r13,[bucket+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 22, 0, 0, 3, 1, 1, 2, 4, 0.4110671936758893, ["mov     r15, [bucket]", "test    r15, r15", "jz      loc_FB56"], ["mov~r15,<TAG>", "test~r15,r15", "jz~FOO"]], [1, 0, 22, 1, 0, 3, 0, 1, 7, 8, 0.08102766798418971, ["mov     [rax], r15", "add     qword ptr [dst+18h], 1", "jmp     short loc_FB46"], ["mov~<TAG>,r15", "add~[word ptr [dst+0],0", "jmp~FOO"]], [2, 0, 22, 2, 0, 5, 0, 1, 6, 9, 0.26482213438735175, ["shl     rax, 4", "add     rax, [dst]", "cmp     qword ptr [rax], 0", "mov     cursor, rax", "jz      short loc_FB80"], ["shl~rax,0", "add~rax,<TAG>", "cmp~<TAG>,0", "mov~cursor,rax", "jz~FOO"]], [0, 0, 22, 0, 0, 2, 0, 1, 4, 2, 0.16897233201581027, ["mov     rsi, [dst+10h]", "jmp     short loc_FAA4"], ["mov~rsi,[dst+0]", "jmp~FOO"]], [0, 0, 22, 0, 1, 5, 0, 1, 5, 1, 0.2816205533596838, ["mov     rsi, [dst+10h]", "mov     rdi, r15", "call    qword ptr [dst+30h]", "cmp     rax, [dst+10h]", "jnb     loc_FBB0"], ["mov~rsi,[dst+0]", "mov~rdi,r15", "call~[word ptr [dst+0]", "cmp~rax,[dst+0]", "jnb~FOO"]], [1, 0, 22, 0, 0, 3, 1, 1, 4, 2, 0.3942687747035573, ["test    r12b, r12b", "mov     qword ptr [bucket+8], 0", "jnz     short loc_FB52"], ["test~r12b,r12b", "mov~[word ptr [bucket+0],0", "jnz~FOO"]], [1, 0, 22, 0, 1, 4, 1, 2, 8, 9, 0.07411067193675888, ["mov     edi, 10h; size", "call    malloc", "test    rax, rax", "jnz     short loc_FB37"], ["mov~edi,0", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 22, 0, 0, 3, 1, 1, 7, 10, 0.14624505928853754, ["mov     rax, [dst+48h]", "test    rax, rax", "jz      short loc_FB90"], ["mov~rax,[dst+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 22, 0, 0, 6, 1, 1, 7, 2, 0.06620553359683794, ["mov     rcx, [rax+8]", "test    next, next", "mov     [cursor+8], rcx", "mov     [rax+8], cursor", "mov     r13, next", "jz      short loc_FAF1"], ["mov~rcx,[rax+0]", "test~next,next", "mov~[cursor+0],rcx", "mov~[rax+0],cursor", "mov~r13,next", "jz~FOO"]], [2, 0, 22, 2, 0, 5, 0, 1, 6, 3, 0.16996047430830039, ["shl     rax, 4", "add     rax, [dst]", "mov     rdx, [cursor+8]", "cmp     qword ptr [rax], 0", "jnz     short loc_FA90"], ["shl~rax,0", "add~rax,<TAG>", "mov~rdx,[cursor+0]", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 0, 1, 0, 9, 1, 0, 9, -1, 0.0, ["add     rsp, 8", "xor     eax, eax", "pop     bucket", "pop     src", "pop     safe", "pop     r13", "pop     dst", "pop     r15", "retn"], ["add~rsp,0", "xor~eax,eax", "pop~bucket", "pop~src", "pop~safe", "pop~r13", "pop~dst", "pop~r15", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 22, 0, 1, 6, 0, 1, 5, 1, 0.19071146245059287, ["mov     r15, [cursor+0]", "mov     rdi, data", "call    qword ptr [dst+30h]", "mov     rsi, [dst+10h]", "cmp     rax, rsi", "jnb     loc_FBB0"], ["mov~r15,[cursor+0]", "mov~rdi,data", "call~[word ptr [dst+0]", "mov~rsi,[dst+0]", "cmp~rax,rsi", "jnb~FOO"]], [0, 0, 22, 0, 0, 2, 0, 0, 8, 9, 0.034584980237154145, ["mov     rdx, [rax+8]", "mov     [dst+48h], rdx"], ["mov~rdx,[rax+0]", "mov~[dst+0],rdx"]], [2, 0, 22, 1, 0, 9, 1, 1, 7, 2, 0.06620553359683794, ["mov     [rax], data", "add     qword ptr [dst+18h], 1", "test    next, next", "mov     qword ptr [cursor+0], 0", "mov     rax, [dst+48h]", "mov     [cursor+8], rax", "mov     [dst+48h], cursor", "mov     r13, next", "jnz     short loc_FAA4"], ["mov~<TAG>,data", "add~[word ptr [dst+0],0", "test~next,next", "mov~[word ptr [cursor+0],0", "mov~rax,[dst+0]", "mov~[cursor+0],rax", "mov~[dst+0],cursor", "mov~r13,next", "jnz~FOO"]], [0, 0, 22, 0, 0, 4, 0, 0, 9, 8, 0.11067193675889328, ["mov     rdx, [r13+8]", "mov     [rax], r15", "mov     [rax+8], rdx", "mov     [r13+8], rax"], ["mov~rdx,[r13+0]", "mov~<TAG>,r15", "mov~[rax+0],rdx", "mov~[r13+0],rax"]], [1, 0, 22, 1, 0, 3, 0, 0, 3, 5, 0.3636363636363636, ["add     bucket, 10h", "cmp     bucket, rax", "jb      loc_FA70"], ["add~bucket,0", "cmp~bucket,rax", "jb~FOO"]], [0, 0, 22, 0, 0, 4, 0, 0, 1, 5, 0.04150197628458498, ["mov     r14, dst", "mov     rbp, src", "mov     r12d, edx", "nop     word ptr [rax+rax+00000000h]"], ["mov~r14,dst", "mov~rbp,src", "mov~r12d,edx", "nop~[ord ptr [rax+0]"]], [2, 0, 22, 1, 0, 2, 0, 0, 8, 7, 0.2351778656126482, ["mov     qword ptr [bucket], 0", "sub     qword ptr [src+18h], 1"], ["mov~<TAG>,0", "sub~[word ptr [src+0],0"]], [0, 0, 22, 0, 0, 1, 0, 0, 5, 6, 0.3517786561264822, ["mov     rax, [src+8]"], ["mov~rax,[src+0]"]], [1, 0, 23, 1, 0, 11, 0, 0, 0, 6, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbx, [src]", "mov     rax, [src+8]", "cmp     bucket, rax", "jnb     loc_FB63"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,<TAG>", "mov~rax,[src+0]", "cmp~bucket,rax", "jnb~FOO"]], [0, 0, 22, 0, 0, 1, 0, 0, 8, 3, 0.15612648221343872, ["mov     data, [bucket]"], ["mov~data,<TAG>"]], [2, 0, 0, 1, 0, 9, 0, 0, 1, -1, 0.0, ["add     rsp, 8", "mov     eax, 1", "pop     bucket", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "mov~eax,0", "pop~bucket", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [4, 8, 15, 0, 24, 34, 3, 104, 0.16716, 0, 11], "succs": [[4, 6], [0, 17], [19], [8, 2], [13], [3, 12], [20, 5], [16, 11], [14, 7], [13, 22], [9, 15], [], [], [10, 12], [16], [13, 22], [19], [1, 23], [1], [20], [17], [18, 23], [6], []], "fname": "transfer_entries", "n_num": 24}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+10h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_buckets", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+18h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_buckets_used", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+20h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_entries", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 7, 1, 0, 4, 1, 1, 0, 0, 0.06944444444444445, ["mov     cursor, [cursor+8]", "add     bucket_length, 1", "test    cursor, cursor", "jnz     short loc_FC18"], ["mov~cursor,[cursor+0]", "add~bucket_length,0", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 4, -1, 0.08333333333333333, ["nop     dword ptr [max_bucket_length+00h]"], ["nop~[word ptr [max_bucket_length+0]"]], [1, 0, 7, 0, 0, 2, 0, 1, 2, -1, 0.3055555555555555, ["cmp     qword ptr [bucket], 0", "jz      short loc_FC2C"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 7, 1, 0, 3, 0, 0, 3, -1, 0.2361111111111111, ["add     bucket, 10h", "cmp     bucket, rdi", "jb      short loc_FC00"], ["add~bucket,0", "cmp~bucket,rdi", "jb~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 1, -1, 0.09722222222222221, ["xchg    ax, ax"], ["xchg~ax,ax"]], [0, 0, 7, 0, 0, 2, 0, 0, 4, -1, 0.16666666666666666, ["cmp     max_bucket_length, rcx", "cmovb   max_bucket_length, rcx"], ["cmp~max_bucket_length,rcx", "cmovb~max_bucket_length,rcx"]], [1, 0, 7, 0, 0, 4, 1, 1, 3, -1, 0.20833333333333331, ["mov     rdx, [cursor+8]", "mov     ecx, 1", "test    cursor, cursor", "jz      short loc_FC25"], ["mov~rdx,[cursor+0]", "mov~ecx,0", "test~cursor,cursor", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 9, 0, 0, 5, 1, 0, 0, 1, 0.0, ["mov     bucket, [table]", "mov     table, [table+8]", "xor     eax, eax", "cmp     bucket, rdi", "jnb     short locret_FC37"], ["mov~bucket,<TAG>", "mov~table,[table+0]", "xor~eax,eax", "cmp~bucket,rdi", "jnb~FOO"]]], "func_feature": [0, 3, 3, 0, 10, 13, 0, 24, 0.11667, 0, 2], "succs": [[0, 5], [0], [3, 6], [2, 7], [2], [3], [1, 5], [], [], [8, 4]], "fname": "hash_get_max_bucket_length", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 8, 1, 0, 3, 0, 0, 0, 0, 0.3214285714285714, ["add     bucket, 10h", "cmp     bucket, r8", "jb      short loc_FC50"], ["add~bucket,0", "cmp~bucket,r8", "jb~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 1, 3, 0.17857142857142855, ["cmp     qword ptr [bucket], 0", "jz      short loc_FC7D"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 8, 2, 0, 5, 1, 1, 2, 3, 0.125, ["mov     rax, [cursor+8]", "add     n_buckets_used, 1", "add     n_entries, 1", "test    cursor, cursor", "jz      short loc_FC7D"], ["mov~rax,[cursor+0]", "add~n_buckets_used,0", "add~n_entries,0", "test~cursor,cursor", "jz~FOO"]], [1, 0, 8, 1, 0, 4, 1, 1, 4, 3, 0.10714285714285714, ["mov     cursor, [cursor+8]", "add     n_entries, 1", "test    cursor, cursor", "jnz     short loc_FC70"], ["mov~cursor,[cursor+0]", "add~n_entries,0", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 3, 4, 0.07142857142857142, ["nop     word ptr [cursor+cursor+00000000h]"], ["nop~[ord ptr [cursor+0]"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.21428571428571427, ["xor     eax, eax", "cmp     [table+18h], rsi", "jz      short loc_FC90"], ["xor~eax,eax", "cmp~[table+0],rsi", "jz~FOO"]], [0, 0, 8, 0, 0, 6, 2, 0, 0, 2, 0.0, ["mov     bucket, [table]", "mov     r8, [table+8]", "xor     edx, edx", "xor     esi, esi", "cmp     bucket, r8", "jnb     short loc_FC86"], ["mov~bucket,<TAG>", "mov~r8,[table+0]", "xor~edx,edx", "xor~esi,esi", "cmp~bucket,r8", "jnb~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["cmp     [table+20h], rdx", "setz    al", "retn"], ["cmp~[table+0],rdx", "setz~al", "retn"]]], "func_feature": [0, 5, 4, 0, 9, 13, 0, 28, 0.1131, 0, 4], "succs": [[1, 5], [0, 2], [0, 4], [0, 3], [3], [8, 7], [1, 5], [], []], "fname": "hash_table_ok", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 13, 0, 0, 4, 1, 1, 0, 0, 0.08241758241758243, ["mov     rax, [rsi+8]", "mov     edx, 1", "test    rax, rax", "jz      short loc_FCF5"], ["mov~rax,[rsi+0]", "mov~edx,0", "test~rax,rax", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 2, 4, 0.14835164835164835, ["cmp     qword ptr [rsi], 0", "jz      short loc_FCFC"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 13, 1, 0, 3, 0, 0, 3, 3, 0.28571428571428575, ["add     rsi, 10h", "cmp     rsi, rdi", "jb      short loc_FCD0"], ["add~rsi,0", "cmp~rsi,rdi", "jb~FOO"]], [0, 0, 13, 0, 0, 2, 0, 0, 4, 4, 0.16483516483516486, ["cmp     rbx, rdx", "cmovb   rbx, rdx"], ["cmp~rbx,rdx", "cmovb~rbx,rdx"]], [0, 0, 13, 0, 0, 1, 0, 0, 4, 6, 0.03296703296703297, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 14, 1, 0, 14, 1, 0, 0, 3, 0.0, ["push    r13", "push    r12", "mov     r12, stream", "push    rbp", "push    rbx", "xor     ebx, ebx", "sub     rsp, 8", "mov     stream, [table]", "mov     rcx, [table+20h]", "mov     rbp, [table+10h]", "mov     r13, [table+18h]", "mov     table, [table+8]", "cmp     rsi, rdi", "jnb     short loc_FD05"], ["push~r13", "push~r12", "mov~r12,stream", "push~rbp", "push~rbx", "xor~ebx,ebx", "sub~rsp,0", "mov~stream,<TAG>", "mov~rcx,[table+0]", "mov~rbp,[table+0]", "mov~r13,[table+0]", "mov~table,[table+0]", "cmp~rsi,rdi", "jnb~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 1, 5, 0.03296703296703297, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 2, 0, 0, 2, 0, 0, 3, -1, 0.06043956043956045, ["pxor    xmm1, xmm1", "cvtsi2sd xmm1, rbp"], ["pxor~xmm1,xmm1", "cvtsi2sd~xmm1,rbp"]], [2, 0, 4, 0, 0, 11, 3, 0, 2, 1, 0.09890109890109891, ["mov     rax, r13", "mov     rdx, r13", "pxor    xmm0, xmm0", "shr     rax, 1", "and     edx, 1", "or      rax, rdx", "test    rbp, rbp", "cvtsi2sd xmm0, rax", "addsd   xmm0, xmm0", "mulsd   xmm0, cs:qword_20E18", "jns     short loc_FD4F"], ["mov~rax,r13", "mov~rdx,r13", "pxor~xmm0,xmm0", "shr~rax,0", "and~edx,0", "or~rax,rdx", "test~rbp,rbp", "cvtsi2sd~xmm0,rax", "addsd~xmm0,xmm0", "mulsd~xmm0,<TAG>", "jns~FOO"]], [0, 0, 4, 0, 0, 5, 1, 1, 2, 1, 0.09890109890109891, ["pxor    xmm0, xmm0", "test    rbp, rbp", "cvtsi2sd xmm0, r13", "mulsd   xmm0, cs:qword_20E18", "js      short loc_FDC9"], ["pxor~xmm0,xmm0", "test~rbp,rbp", "cvtsi2sd~xmm0,r13", "mulsd~xmm0,<TAG>", "js~FOO"]], [2, 0, 6, 0, 2, 13, 3, 3, 1, 2, 0.26373626373626374, ["lea     rdx, aEntriesLu; \"# entries:         %lu\\n\"", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rdx, aBucketsLu; \"# buckets:         %lu\\n\"", "xor     eax, eax", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "call    ___fprintf_chk", "test    r13, r13", "js      short loc_FDA0"], ["lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rdx,<TAG>", "xor~eax,eax", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "call~FOO", "test~r13,r13", "js~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 5, -1, 0.0, [], []], [4, 0, 1, 1, 1, 18, 1, 2, 4, -1, 0.07142857142857144, ["divsd   xmm0, xmm1", "lea     rdx, aBucketsUsedLu2; \"# buckets used:    %lu (%.2f%%)\\n\"", "mov     rcx, r13", "mov     rdi, stream", "mov     esi, 1", "mov     eax, 1", "call    ___fprintf_chk", "add     rsp, 8", "mov     rcx, rbx", "mov     rdi, stream", "pop     rbx", "pop     rbp", "pop     stream", "pop     r13", "lea     rdx, aMaxBucketLengt; \"max bucket length: %lu\\n\"", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["divsd~xmm0,xmm1", "lea~rdx,<TAG>", "mov~rcx,r13", "mov~rdi,stream", "mov~esi,0", "mov~eax,0", "call~FOO", "add~rsp,0", "mov~rcx,rbx", "mov~rdi,stream", "pop~rbx", "pop~rbp", "pop~stream", "pop~r13", "lea~rdx,<TAG>", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [2, 0, 2, 0, 0, 8, 2, 1, 3, 0, 0.06043956043956045, ["mov     rax, rbp", "pxor    xmm1, xmm1", "shr     rax, 1", "and     ebp, 1", "or      rax, rbp", "cvtsi2sd xmm1, rax", "addsd   xmm1, xmm1", "jmp     loc_FD58"], ["mov~rax,rbp", "pxor~xmm1,xmm1", "shr~rax,0", "and~ebp,0", "or~rax,rbp", "cvtsi2sd~xmm1,rax", "addsd~xmm1,xmm1", "jmp~FOO"]], [1, 0, 13, 1, 0, 4, 1, 1, 5, 5, 0.06043956043956045, ["mov     rax, [rax+8]", "add     rdx, 1", "test    rax, rax", "jnz     short loc_FCE8"], ["mov~rax,[rax+0]", "add~rdx,0", "test~rax,rax", "jnz~FOO"]]], "func_feature": [3, 13, 10, 0, 15, 22, 0, 88, 0.09744, 5, 4], "succs": [[3, 4], [0, 2], [1, 10], [2], [14], [10, 6], [1], [12], [13, 7], [13, 7], [8, 9], [], [11], [12], [3, 14]], "fname": "hash_print_statistics", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.022222222222222223, ["jmp     short loc_FE45"], ["jmp~FOO"]], [1, 0, 8, 2, 0, 6, 1, 1, 1, -1, 0.08888888888888889, ["shl     rax, 4", "add     rax, [table]", "mov     rsi, [rax]", "mov     rbx, rax", "test    rsi, rsi", "jnz     short loc_FE2B"], ["shl~rax,0", "add~rax,<TAG>", "mov~rsi,<TAG>", "mov~rbx,rax", "test~rsi,rsi", "jnz~FOO"]], [0, 0, 0, 0, 0, 5, 1, 0, 3, -1, 0.0, ["pop     rbx", "xor     eax, eax", "pop     entry", "pop     table", "retn"], ["pop~rbx", "xor~eax,eax", "pop~entry", "pop~table", "retn"]], [0, 0, 7, 0, 0, 3, 1, 1, 4, -1, 0.08888888888888889, ["mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_FE28"], ["mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 7, 0, 1, 4, 1, 2, 3, -1, 0.15555555555555556, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_FE50"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 5, -1, 0.05555555555555556, ["mov     rsi, [cursor]"], ["mov~rsi,<TAG>"]], [0, 0, 10, 0, 1, 10, 0, 1, 0, 1, 0.0, ["push    r12", "mov     r12, table", "push    rbp", "mov     rbp, entry", "push    rbx", "mov     entry, [table+10h]", "mov     table, entry", "call    qword ptr [table+30h]", "cmp     rax, [table+10h]", "jnb     short loc_FE5B"], ["push~r12", "mov~r12,table", "push~rbp", "mov~rbp,entry", "push~rbx", "mov~entry,[table+0]", "mov~table,entry", "call~[word ptr [table+0]", "cmp~rax,[table+0]", "jnb~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 2, -1, 0.2, ["cmp     entry, rsi", "jz      short loc_FE53"], ["cmp~entry,rsi", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, -1, 0.011111111111111112, ["mov     entry, [cursor]"], ["mov~entry,<TAG>"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 3, -1, 0.0, ["mov     rax, rbp", "pop     cursor", "pop     rbp", "pop     table", "retn"], ["mov~rax,rbp", "pop~cursor", "pop~rbp", "pop~table", "retn"]]], "func_feature": [3, 4, 8, 0, 11, 13, 1, 39, 0.05657, 0, 2], "succs": [[2], [0, 7], [], [2, 5], [8, 3], [7], [9, 1], [10, 4], [10], [], []], "fname": "hash_lookup", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 9, 0, 0, 2, 0, 1, 0, 0, 0.0, ["cmp     qword ptr [table+20h], 0", "jz      short loc_FE93"], ["cmp~[word ptr [table+0],0", "jz~FOO"]], [1, 0, 4, 1, 0, 3, 0, 0, 0, 1, 0.15277777777777776, ["add     bucket, 10h", "cmp     bucket, rcx", "jnb     short loc_FE98"], ["add~bucket,0", "cmp~bucket,rcx", "jnb~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 0, 2, 0.06944444444444445, ["mov     rax, [bucket]", "test    rax, rax", "jz      short loc_FE80"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 0, 2, 0.1388888888888889, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 7, 0, 0, 4, 0, 0, 0, 1, 0.09722222222222221, ["mov     rdx, [table]", "mov     rcx, [table+8]", "cmp     bucket, rcx", "jnb     short loc_FE98"], ["mov~rdx,<TAG>", "mov~rcx,[table+0]", "cmp~bucket,rcx", "jnb~FOO"]], [0, 0, 0, 0, 0, 2, 1, 0, 0, -1, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 6, 0, 0, 3, 1, 1, 0, 3, 0.1388888888888889, ["mov     rax, [bucket]", "test    rax, rax", "jnz     short locret_FE96"], ["mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 0, 1, 1, 2, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]]], "func_feature": [1, 3, 4, 0, 10, 11, 0, 22, 0.05972, 0, 2], "succs": [[4, 5], [9, 2], [8, 1], [1], [9, 7], [], [], [3, 6], [], []], "fname": "hash_get_first", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 10, 2, 0, 7, 0, 1, 0, 0, 0.07575757575757576, ["shl     rax, 4", "add     rax, [table+0]", "mov     rcx, [rax]", "mov     rdx, rax", "mov     rax, [rax+8]", "cmp     rcx, entry", "jz      short loc_FEF9"], ["shl~rax,0", "add~rax,[table+0]", "mov~rcx,<TAG>", "mov~rdx,rax", "mov~rax,[rax+0]", "cmp~rcx,entry", "jz~FOO"]], [1, 0, 12, 1, 1, 10, 0, 1, 0, 1, 0.0, ["push    rbp", "push    rbx", "mov     rbp, table", "mov     rbx, entry", "sub     rsp, 8", "mov     entry, [table+10h]", "mov     table, entry", "call    qword ptr [table+30h]", "cmp     rax, [table+10h]", "jnb     short loc_FF32"], ["push~rbp", "push~rbx", "mov~rbp,table", "mov~rbx,entry", "sub~rsp,0", "mov~entry,[table+0]", "mov~table,entry", "call~[word ptr [table+0]", "cmp~rax,[table+0]", "jnb~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 3, -1, 0.18181818181818182, ["mov     rcx, [table+8]", "jmp     short loc_FF10"], ["mov~rcx,[table+0]", "jmp~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 3, -1, 0.0946969696969697, ["test    rax, rax", "jz      short loc_FEFE"], ["test~rax,rax", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 2, -1, 0.13257575757575757, ["test    cursor, cursor", "jnz     short loc_FF28"], ["test~cursor,cursor", "jnz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 2, -1, 0.030303030303030304, ["nop     dword ptr [cursor+cursor+00h]"], ["nop~[word ptr [cursor+0]"]], [1, 0, 0, 1, 0, 4, 0, 0, 6, -1, 0.0, ["add     rsp, 8", "pop     entry", "pop     table", "retn"], ["add~rsp,0", "pop~entry", "pop~table", "retn"]], [0, 0, 4, 0, 0, 3, 1, 1, 5, -1, 0.030303030303030304, ["mov     rax, [bucket]", "test    rax, rax", "jnz     short loc_FF1B"], ["mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 1, 0, 5, -1, 0.030303030303030304, ["xor     eax, eax"], ["xor~eax,eax"]], [0, 0, 9, 0, 0, 4, 0, 1, 4, -1, 0.030303030303030304, ["mov     rcx, [cursor]", "mov     rax, [rax+8]", "cmp     rcx, entry", "jnz     short loc_FEE8"], ["mov~rcx,<TAG>", "mov~rax,[rax+0]", "cmp~rcx,entry", "jnz~FOO"]], [1, 0, 4, 1, 0, 3, 0, 1, 4, -1, 0.16666666666666669, ["add     bucket, 10h", "cmp     rcx, bucket", "ja      short loc_FF08"], ["add~bucket,0", "cmp~rcx,bucket", "ja~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 3, -1, 0.0, ["mov     cursor, [cursor]", "add     rsp, 8", "pop     entry", "pop     table", "retn"], ["mov~cursor,<TAG>", "add~rsp,0", "pop~entry", "pop~table", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [2, 4, 9, 0, 13, 17, 0, 45, 0.05944, 0, 6], "succs": [[4, 5], [0, 12], [10], [9, 2], [2, 11], [3], [], [10, 6], [6], [3, 4], [8, 7], [], []], "fname": "hash_get_next", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 10, 0, 0, 2, 0, 1, 6, -1, 0.17424242424242425, ["cmp     buffer_size, counter", "jz      short locret_FFA0"], ["cmp~buffer_size,counter", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 1, 0, 1, 0, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [0, 0, 12, 0, 0, 4, 0, 0, 0, 1, 0.0, ["mov     bucket, [table]", "mov     r10, [table+8]", "cmp     r10, bucket", "jbe     short loc_FFA2"], ["mov~bucket,<TAG>", "mov~r10,[table+0]", "cmp~r10,bucket", "jbe~FOO"]], [1, 0, 10, 1, 0, 6, 1, 1, 7, -1, 0.09848484848484848, ["mov     r8, [cursor]", "add     counter, 1", "mov     [buffer+counter*8-8], r8", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_FF70"], ["mov~r8,<TAG>", "add~counter,0", "mov~[buffer+0],r8", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 10, 0, 0, 5, 1, 1, 4, -1, 0.25, ["mov     [buffer+counter*8], rcx", "mov     rcx, [cursor+8]", "lea     rax, [counter+1]", "test    cursor, cursor", "jz      short loc_FF8A"], ["mov~<TAG>,rcx", "mov~rcx,[cursor+0]", "lea~rax,[counter+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 0, 3, -1, 0.2689393939393939, ["cmp     buffer_size, counter", "jbe     short loc_FF9A"], ["cmp~buffer_size,counter", "jbe~FOO"]], [0, 0, 10, 0, 0, 1, 1, 0, 1, -1, 0.07575757575757576, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [0, 0, 10, 0, 0, 1, 0, 0, 5, -1, 0.1590909090909091, ["nop     dword ptr [counter]"], ["nop~<TAG>"]], [0, 0, 10, 0, 0, 2, 0, 0, 5, -1, 0.17424242424242425, ["mov     r10, [table+8]", "mov     r8, counter"], ["mov~r10,[table+0]", "mov~r8,counter"]], [0, 0, 10, 0, 0, 3, 1, 1, 2, -1, 0.30303030303030304, ["mov     rcx, [bucket]", "test    rcx, rcx", "jz      short loc_FF91"], ["mov~rcx,<TAG>", "test~rcx,rcx", "jz~FOO"]], [1, 0, 10, 1, 0, 3, 0, 0, 3, -1, 0.20833333333333334, ["add     bucket, 10h", "cmp     bucket, r10", "jb      short loc_FF4F"], ["add~bucket,0", "cmp~bucket,r10", "jb~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     rax, counter", "retn"], ["mov~rax,counter", "retn"]]], "func_feature": [0, 5, 4, 0, 13, 17, 0, 34, 0.1317, 0, 2], "succs": [[], [0, 4], [], [2, 7], [9, 1], [8, 9], [12, 5], [10], [1], [11], [11, 6], [10, 12], []], "fname": "hash_get_entries", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 8, 0, 0, 2, 0, 1, 0, 0, 0.2111111111111111, ["mov     rbx, bucket", "jmp     short loc_FFEB"], ["mov~rbx,bucket", "jmp~FOO"]], [0, 0, 8, 0, 0, 3, 1, 1, 2, -1, 0.2777777777777778, ["mov     rdi, [bucket]", "test    rdi, rdi", "jz      short loc_10006"], ["mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [1, 0, 8, 1, 0, 4, 1, 1, 5, -1, 0.24444444444444446, ["mov     cursor, [cursor+8]", "add     counter, 1", "test    cursor, cursor", "jnz     short loc_FFE8"], ["mov~cursor,[cursor+0]", "add~counter,0", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 8, 0, 1, 4, 1, 2, 4, -1, 0.29444444444444445, ["mov     rsi, processor_data", "call    processor", "test    al, al", "jz      short loc_1000F"], ["mov~rsi,processor_data", "call~processor", "test~al,al", "jz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 6, -1, 0.1277777777777778, ["mov     rax, [table+8]"], ["mov~rax,[table+0]"]], [0, 0, 1, 0, 0, 2, 1, 1, 1, 0, 0.011111111111111112, ["xor     ebp, ebp", "jmp     short loc_1000F"], ["xor~ebp,ebp", "jmp~FOO"]], [1, 0, 10, 1, 0, 11, 0, 0, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r14, [table]", "mov     rax, [table+8]", "cmp     rax, bucket", "jbe     short loc_10021"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r14,<TAG>", "mov~rax,[table+0]", "cmp~rax,bucket", "jbe~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     bucket", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~bucket", "pop~r15", "retn"]], [1, 0, 8, 1, 0, 3, 0, 0, 3, -1, 0.17222222222222222, ["add     bucket, 10h", "cmp     bucket, rax", "jb      short loc_FFD5"], ["add~bucket,0", "cmp~bucket,rax", "jb~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 6, -1, 0.016666666666666666, ["mov     rdi, [cursor]"], ["mov~rdi,<TAG>"]], [0, 0, 8, 0, 0, 4, 1, 0, 1, -1, 0.07777777777777778, ["mov     r13, processor_data", "mov     r12, processor", "mov     r15, table", "xor     ebp, ebp"], ["mov~r13,processor_data", "mov~r12,processor", "mov~r15,table", "xor~ebp,ebp"]]], "func_feature": [1, 5, 6, 0, 11, 15, 0, 44, 0.1303, 0, 4], "succs": [[3], [0, 8], [9, 4], [2, 7], [8], [7], [10, 5], [], [1, 7], [3], [1]], "fname": "hash_do_for_each", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, rdx", "retn"], ["mov~rax,rdx", "retn"]], [0, 0, 3, 0, 0, 4, 2, 1, 0, 0, 0.0, ["movzx   ecx, byte ptr [string]", "xor     edx, edx", "test    cl, cl", "jz      short loc_1005D"], ["movzx~ecx,<TAG>", "xor~edx,edx", "test~cl,cl", "jz~FOO"]], [2, 0, 2, 5, 0, 10, 2, 1, 2, 0, 0.16666666666666666, ["mov     rax, value", "add     string, 1", "shl     rax, 5", "sub     rax, value", "xor     edx, edx", "add     rax, ch_0", "movzx   ecx, byte ptr [rdi]", "div     n_buckets", "test    cl, cl", "jnz     short loc_10040"], ["mov~rax,value", "add~string,0", "shl~rax,0", "sub~rax,value", "xor~edx,edx", "add~rax,ch_0", "movzx~ecx,<TAG>", "div~,n_buckets", "test~cl,cl", "jnz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 1, 0, 0.16666666666666666, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]]], "func_feature": [0, 4, 2, 0, 4, 5, 0, 17, 0.08333, 0, 5], "succs": [[], [0, 3], [0, 2], [2]], "fname": "hash_string", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["movaps  xmm0, cs:xmmword_20E20", "mov     byte ptr [tuning+10h], 0", "movups  xmmword ptr [tuning], xmm0", "retn"], ["movaps~xmm0,<TAG>", "mov~[yte ptr [tuning+0],0", "movups~<TAG>,xmm0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 4, 0.0, 1, 0], "succs": [[]], "fname": "hash_reset_tuning", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[4, 0, 1, 2, 0, 10, 0, 1, 0, 0, 0.00037537537537537537, ["shl     rbx, 4", "mov     qword ptr [table+18h], 0", "mov     qword ptr [table+20h], 0", "add     rbx, rax", "mov     [table+30h], hasher", "mov     [table+38h], comparator", "mov     [table+8], rbx", "mov     [table+40h], data_freer", "mov     qword ptr [table+48h], 0", "jmp     loc_10101"], ["shl~rbx,0", "mov~[word ptr [table+0],0", "mov~[word ptr [table+0],0", "add~rbx,rax", "mov~[table+0],hasher", "mov~[table+0],comparator", "mov~[table+0],rbx", "mov~[table+0],data_freer", "mov~[word ptr [table+0],0", "jmp~FOO"]], [1, 0, 3, 0, 1, 7, 1, 2, 15, -1, 0.024774774774774775, ["mov     [table+10h], rbx", "mov     esi, 10h; size", "mov     rdi, rbx; nmemb", "call    _calloc", "test    rax, rax", "mov     [table], rax", "jz      fail"], ["mov~[table+0],rbx", "mov~esi,0", "mov~rdi,rbx", "call~FOO", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [2, 0, 22, 0, 0, 8, 2, 1, 4, 9, 0.05930930930930931, ["mov     rax, candidate", "pxor    xmm0, xmm0", "shr     rax, 1", "and     r15d, 1", "or      rax, r15", "cvtsi2ss xmm0, rax", "addss   xmm0, xmm0", "jmp     short loc_101B1"], ["mov~rax,candidate", "pxor~xmm0,xmm0", "shr~rax,0", "and~r15d,0", "or~rax,r15", "cvtsi2ss~xmm0,rax", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 24, 0, 0, 3, 1, 1, 3, 10, 0.06756756756756757, ["test    candidate, candidate", "movss   xmm1, cs:dword_20E30", "js      short loc_1016F"], ["test~candidate,candidate", "movss~xmm1,<TAG>", "js~FOO"]], [0, 0, 24, 0, 0, 2, 1, 0, 11, 10, 0.036036036036036036, ["test    candidate, candidate", "jns     short loc_101A8"], ["test~candidate,candidate", "jns~FOO"]], [1, 0, 18, 0, 0, 5, 1, 1, 7, 6, 0.06081081081081081, ["subss   xmm0, cs:dword_20E4C", "mov     rax, 8000000000000000h", "cvttss2si r15, xmm0", "xor     r15, rax", "jmp     loc_101D8"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~r15,xmm0", "xor~r15,rax", "jmp~FOO"]], [0, 0, 20, 0, 0, 2, 0, 0, 6, 7, 0.13363363363363362, ["ucomiss xmm0, cs:dword_20E4C", "jnb     loc_10274"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [2, 0, 16, 1, 0, 3, 0, 1, 12, 4, 0.041916916916916916, ["add     rbx, 2", "cmp     rbx, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_10200"], ["add~rbx,0", "cmp~rbx,0", "jnz~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 11, 5, 0.07607607607607607, ["test    rsi, rsi", "jz      short loc_10265"], ["test~rsi,rsi", "jz~FOO"]], [1, 0, 16, 1, 0, 3, 1, 1, 14, 4, 0.004379379379379379, ["add     r8, 8", "test    rdx, rdx", "jz      short loc_10265"], ["add~r8,0", "test~rdx,rdx", "jz~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 11, 2, 0.15077577577577578, ["test    rax, rax", "jnz     short loc_10298"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 1, -1, 0.0, ["add     rsp, 8", "mov     rax, r14", "pop     rbx", "pop     data_freer", "pop     hasher", "pop     comparator", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,r14", "pop~rbx", "pop~data_freer", "pop~hasher", "pop~comparator", "pop~r14", "pop~r15", "retn"]], [1, 1, 37, 1, 1, 23, 3, 2, 0, 13, 0.0, ["push    r15", "push    r14", "lea     rax, raw_hasher", "push    r13", "push    r12", "mov     r12, hasher", "push    rbp", "push    rbx", "mov     r13, comparator", "mov     r15, candidate", "mov     edi, 50h ; 'P'; size", "mov     rbx, tuning", "sub     rsp, 8", "test    hasher, hasher", "mov     rbp, data_freer", "cmovz   r12, rax", "lea     rax, raw_comparator", "test    comparator, comparator", "cmovz   r13, rax", "call    malloc", "test    rax, rax", "mov     r14, rax", "jz      short loc_10101"], ["push~r15", "push~r14", "lea~rax,<TAG>", "push~r13", "push~r12", "mov~r12,hasher", "push~rbp", "push~rbx", "mov~r13,comparator", "mov~r15,candidate", "mov~edi,<STR>", "mov~rbx,tuning", "sub~rsp,0", "test~hasher,hasher", "mov~rbp,data_freer", "cmovz~r12,rax", "lea~rax,<TAG>", "test~comparator,comparator", "cmovz~r13,rax", "call~FOO", "test~rax,rax", "mov~r14,rax", "jz~FOO"]], [0, 0, 1, 0, 1, 3, 1, 1, 4, -1, 0.02515015015015015, ["mov     rdi, table; ptr", "xor     r14d, r14d", "call    free"], ["mov~rdi,table", "xor~r14d,r14d", "call~FOO"]], [0, 0, 25, 0, 0, 2, 0, 0, 2, 11, 0.017267267267267267, ["lea     table, default_tuning", "mov     [table+28h], rax"], ["lea~table,<TAG>", "mov~[table+0],rax"]], [0, 0, 36, 0, 0, 2, 1, 1, 1, 12, 0.026276276276276277, ["test    tuning, tuning", "jz      loc_10190"], ["test~tuning,tuning", "jz~FOO"]], [2, 0, 16, 2, 0, 10, 0, 0, 10, 3, 0.23385885885885885, ["mov     rax, rbx", "mov     rsi, rbx", "mul     rcx", "mov     rax, rdx", "shr     rax, 1", "lea     rax, [rax+rax*2]", "sub     rsi, rax", "cmp     rbx, 9", "mov     rax, rsi", "jbe     short loc_10260"], ["mov~rax,rbx", "mov~rsi,rbx", "mul~,rcx", "mov~rax,rdx", "shr~rax,0", "lea~rax,<TAG>", "sub~rsi,rax", "cmp~rbx,0", "mov~rax,rsi", "jbe~FOO"]], [0, 0, 16, 0, 0, 1, 0, 0, 9, 4, 0.22072072072072071, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [0, 0, 31, 0, 0, 3, 0, 0, 4, 12, 0.03753753753753754, ["movss   xmm0, cs:dword_20E38", "ucomiss xmm0, xmm1", "jbe     short fail"], ["movss~xmm0,<TAG>", "ucomiss~xmm0,xmm1", "jbe~FOO"]], [0, 0, 32, 0, 0, 3, 0, 1, 3, 13, 0.02177177177177177, ["movss   xmm1, dword ptr [tuning+8]", "ucomiss xmm1, cs:dword_20E34", "ja      short loc_10118"], ["movss~xmm1,[word ptr [tuning+0]", "ucomiss~xmm1,<TAG>", "ja~FOO"]], [1, 0, 7, 1, 0, 5, 1, 0, 12, 1, 0.11161161161161162, ["mov     edx, 8", "xor     ecx, ecx", "mov     rax, rdx", "mul     rbx", "jo      short loc_1030A"], ["mov~edx,0", "xor~ecx,ecx", "mov~rax,rdx", "mul~,rbx", "jo~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 2, 11, 0.03303303303303303, ["mov     [table+28h], tuning", "lea     table, default_tuning", "cmp     tuning, rax", "jz      loc_1019B"], ["mov~[table+0],tuning", "lea~table,<TAG>", "cmp~tuning,rax", "jz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 13, -1, 0.07557557557557558, ["test    rax, rax", "js      fail"], ["test~rax,rax", "js~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 13, 0, 0.0, ["mov     ecx, 1", "jmp     short loc_102A7"], ["mov~ecx,0", "jmp~FOO"]], [0, 0, 22, 0, 0, 2, 0, 0, 4, 9, 0.05930930930930931, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, candidate"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,candidate"]], [0, 0, 30, 0, 0, 3, 0, 0, 5, 11, 0.05555555555555555, ["movss   xmm0, dword ptr [tuning+0Ch]", "ucomiss xmm0, cs:dword_20E3C", "jbe     short fail"], ["movss~xmm0,[word ptr [tuning+0]", "ucomiss~xmm0,<TAG>", "jbe~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 14, -1, 0.04804804804804805, ["test    rcx, rcx", "jnz     fail"], ["test~rcx,rcx", "jnz~FOO"]], [3, 0, 16, 0, 0, 4, 0, 1, 12, 4, 0.041666666666666664, ["mov     r8d, 10h", "mov     edi, 9", "mov     esi, 3", "jmp     short loc_10249"], ["mov~r8d,0", "mov~edi,0", "mov~esi,0", "jmp~FOO"]], [0, 0, 21, 0, 0, 3, 0, 0, 5, 8, 0.13963963963963963, ["divss   xmm0, xmm1", "ucomiss xmm0, cs:dword_20E48", "jnb     fail"], ["divss~xmm0,xmm1", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 29, 0, 0, 3, 0, 0, 6, 10, 0.07207207207207207, ["movss   xmm0, dword ptr [tuning]", "ucomiss xmm0, cs:dword_20E40", "jb      short fail"], ["movss~xmm0,<TAG>", "ucomiss~xmm0,<TAG>", "jb~FOO"]], [1, 0, 16, 3, 0, 8, 1, 0, 13, 3, 0.03791291291291291, ["add     rsi, 2", "xor     edx, edx", "mov     rax, rbx", "div     rsi", "add     rdi, r8", "cmp     rdi, rbx", "mov     rax, rdx", "jb      short loc_10240"], ["add~rsi,0", "xor~edx,edx", "mov~rax,rbx", "div~,rsi", "add~rdi,r8", "cmp~rdi,rbx", "mov~rax,rdx", "jb~FOO"]], [0, 0, 26, 0, 0, 2, 0, 0, 9, 7, 0.11261261261261261, ["ucomiss xmm1, xmm0", "jbe     short fail"], ["ucomiss~xmm1,xmm0", "jbe~FOO"]], [0, 0, 27, 0, 0, 3, 0, 0, 8, 8, 0.1006006006006006, ["movss   xmm3, cs:dword_20E44", "ucomiss xmm3, xmm2", "jb      short fail"], ["movss~xmm3,<TAG>", "ucomiss~xmm3,xmm2", "jb~FOO"]], [0, 0, 28, 0, 0, 4, 0, 0, 7, 9, 0.08708708708708708, ["addss   xmm0, cs:dword_20E34", "movss   xmm2, dword ptr [tuning+4]", "ucomiss xmm2, xmm0", "jbe     short fail"], ["addss~xmm0,<TAG>", "movss~xmm2,[word ptr [tuning+0]", "ucomiss~xmm2,xmm0", "jbe~FOO"]], [0, 0, 18, 0, 0, 2, 0, 0, 7, 6, 0.06081081081081081, ["cvttss2si r15, xmm0", "nop     dword ptr [rax+00h]"], ["cvttss2si~r15,xmm0", "nop~[word ptr [rax+0]"]], [1, 0, 25, 0, 0, 2, 0, 1, 10, 6, 0.12312312312312312, ["cmp     byte ptr [tuning+10h], 0", "jnz     short loc_101D8"], ["cmp~[yte ptr [tuning+0],0", "jnz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 1, 13, -1, 0.00925925925925926, ["jmp     fail"], ["jmp~FOO"]], [5, 0, 17, 0, 0, 7, 1, 1, 8, 5, 0.23123123123123124, ["cmp     r15, 0Ah", "mov     ebx, 0Ah", "mov     rcx, 0AAAAAAAAAAAAAAABh", "cmovnb  rbx, r15", "or      rbx, 1", "cmp     rbx, 0FFFFFFFFFFFFFFFFh", "jz      fail"], ["cmp~r15,0", "mov~ebx,0", "mov~rcx,0", "cmovnb~rbx,r15", "or~rbx,0", "cmp~rbx,0", "jz~FOO"]]], "func_feature": [3, 19, 23, 0, 38, 63, 2, 162, 0.0694, 11, 12], "succs": [[11], [0, 13], [28], [24, 2], [24, 2], [37], [34, 5], [16, 36], [27, 7], [30, 7], [20, 7], [], [11, 15], [11], [3], [21, 14], [8, 10], [16], [25, 13], [18, 13], [22, 23], [19, 3], [26, 13], [22], [28], [29, 13], [1, 13], [30], [13, 6], [33, 13], [9, 10], [35, 13], [13, 31], [32, 13], [37], [4, 37], [13], [17, 13]], "fname": "hash_initialize", "n_num": 38}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 13, 0, 0, 2, 1, 1, 0, 0, 0.20329670329670332, ["test    rax, rax", "jz      short loc_10388"], ["test~rax,rax", "jz~FOO"]], [0, 0, 13, 0, 0, 4, 1, 1, 3, 5, 0.42307692307692313, ["mov     rbx, [bucket+8]", "mov     rax, [table+40h]", "test    cursor, cursor", "jz      short loc_1037D"], ["mov~rbx,[bucket+0]", "mov~rax,[table+0]", "test~cursor,cursor", "jz~FOO"]], [1, 0, 13, 0, 1, 11, 1, 2, 6, 4, 0.08241758241758243, ["mov     rdi, [cursor]", "call    rax", "mov     rcx, [cursor+8]", "mov     rdx, [table+48h]", "mov     rax, [table+40h]", "mov     qword ptr [cursor], 0", "test    next, next", "mov     [cursor+8], rdx", "mov     [table+48h], cursor", "mov     rbx, next", "jnz     short loc_10350"], ["mov~rdi,<TAG>", "call~rax", "mov~rcx,[cursor+0]", "mov~rdx,[table+0]", "mov~rax,[table+0]", "mov~<TAG>,0", "test~next,next", "mov~[cursor+0],rdx", "mov~[table+0],cursor", "mov~rbx,next", "jnz~FOO"]], [1, 0, 13, 1, 0, 3, 0, 1, 3, 7, 0.39560439560439564, ["add     bucket, 10h", "cmp     rax, bucket", "ja      short loc_10338"], ["add~bucket,0", "cmp~rax,bucket", "ja~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 2, 6, 0.4560439560439561, ["cmp     qword ptr [bucket], 0", "jz      short loc_1039D"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 13, 0, 0, 3, 0, 0, 5, 8, 0.37362637362637363, ["mov     qword ptr [bucket], 0", "mov     qword ptr [bucket+8], 0", "mov     rax, [table+8]"], ["mov~<TAG>,0", "mov~[word ptr [bucket+0],0", "mov~rax,[table+0]"]], [0, 0, 13, 0, 1, 2, 0, 1, 5, 9, 0.0, ["mov     rdi, [bucket]", "call    rax"], ["mov~rdi,<TAG>", "call~rax"]], [0, 0, 13, 0, 0, 1, 0, 0, 4, 4, 0.2692307692307693, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [0, 0, 14, 0, 0, 8, 0, 0, 0, 8, 0.0, ["push    r12", "push    rbp", "mov     rbp, table", "push    rbx", "mov     r12, [table]", "mov     rax, [table+8]", "cmp     bucket, rax", "jnb     short loc_103A6"], ["push~r12", "push~rbp", "mov~rbp,table", "push~rbx", "mov~r12,<TAG>", "mov~rax,[table+0]", "cmp~bucket,rax", "jnb~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 5, 3, 0.28571428571428575, ["test    rax, rax", "jz      short loc_103BB"], ["test~rax,rax", "jz~FOO"]], [0, 0, 13, 0, 0, 1, 0, 1, 8, 0, 0.11538461538461539, ["jmp     short loc_10388"], ["jmp~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 1, 7, 0.06593406593406594, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [2, 0, 0, 0, 0, 6, 0, 0, 1, -1, 0.0, ["mov     qword ptr [table+18h], 0", "mov     qword ptr [table+20h], 0", "pop     rbx", "pop     table", "pop     bucket", "retn"], ["mov~[word ptr [table+0],0", "mov~[word ptr [table+0],0", "pop~rbx", "pop~table", "pop~bucket", "retn"]], [1, 0, 13, 0, 0, 8, 1, 1, 7, 1, 0.1208791208791209, ["mov     rax, [cursor+8]", "mov     qword ptr [cursor], 0", "mov     [cursor+8], rdx", "mov     rdx, cursor", "mov     [table+48h], cursor", "test    next, next", "mov     rbx, next", "jnz     short loc_103C0"], ["mov~rax,[cursor+0]", "mov~<TAG>,0", "mov~[cursor+0],rdx", "mov~rdx,cursor", "mov~[table+0],cursor", "test~next,next", "mov~rbx,next", "jnz~FOO"]], [0, 0, 13, 0, 0, 2, 0, 0, 6, 2, 0.1263736263736264, ["mov     rdx, [table+48h]", "nop"], ["mov~rdx,[table+0]", "nop"]]], "func_feature": [2, 5, 10, 0, 15, 22, 0, 56, 0.19451, 0, 1], "succs": [[5, 6], [0, 7], [0, 9], [4, 12], [1, 3], [3], [5], [9], [11, 12], [2, 14], [5], [4], [], [10, 13], [13]], "fname": "hash_clear", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 19, 0, 0, 1, 0, 0, 0, 0, 0.06060606060606061, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 20, 0, 0, 2, 0, 0, 2, 2, 0.04004329004329004, ["cmp     bucket, rax", "jnb     short loc_1047F"], ["cmp~bucket,rax", "jnb~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 2, 1, 0.15584415584415584, ["mov     rdi, [table+48h]; ptr", "test    cursor, cursor", "jz      short loc_104A1"], ["mov~rdi,[table+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 0, 0, 1, 2, 0.24567099567099568, ["cmp     rax, bucket", "jbe     short loc_1047F"], ["cmp~rax,bucket", "jbe~FOO"]], [1, 0, 10, 1, 0, 3, 0, 1, 4, 2, 0.0670995670995671, ["add     bucket, 10h", "cmp     rax, bucket", "ja      short loc_10450"], ["add~bucket,0", "cmp~rax,bucket", "ja~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 3, 2, 0.04112554112554113, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [0, 0, 1, 0, 1, 7, 0, 2, 3, 0, 0.045454545454545456, ["mov     cursor, [table]; ptr", "call    free", "pop     rbx", "mov     rdi, table; ptr", "pop     rbp", "pop     table", "jmp     free"], ["mov~cursor,<TAG>", "call~FOO", "pop~rbx", "mov~rdi,table", "pop~rbp", "pop~table", "jmp~FOO"]], [0, 0, 19, 0, 0, 3, 1, 1, 4, 5, 0.11255411255411256, ["mov     rdi, [bucket+0]", "test    rdi, rdi", "jz      short loc_10436"], ["mov~rdi,[bucket+0]", "test~rdi,rdi", "jz~FOO"]], [1, 0, 19, 1, 0, 3, 0, 0, 5, 4, 0.20995670995670995, ["add     bucket, 10h", "cmp     bucket, rax", "jb      short loc_10408"], ["add~bucket,0", "cmp~bucket,rax", "jb~FOO"]], [0, 0, 19, 0, 0, 2, 0, 1, 5, 7, 0.04329004329004329, ["mov     rbx, bucket", "jmp     short loc_10423"], ["mov~rbx,bucket", "jmp~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 4, 1, 0.004329004329004329, ["mov     rbx, [cursor+8]", "call    free", "test    next, next", "mov     rdi, next", "jnz     short loc_10490"], ["mov~rbx,[cursor+0]", "call~FOO", "test~next,next", "mov~rdi,next", "jnz~FOO"]], [0, 0, 19, 0, 0, 1, 0, 0, 7, 7, 0.0, ["mov     rdi, [cursor]"], ["mov~rdi,<TAG>"]], [0, 0, 19, 0, 1, 4, 1, 2, 6, 6, 0.10173160173160173, ["call    qword ptr [table+40h]", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_10420"], ["call~[word ptr [table+0]", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 19, 0, 0, 1, 0, 0, 7, 5, 0.10173160173160173, ["mov     rax, [table+8]"], ["mov~rax,[table+0]"]], [0, 0, 12, 0, 0, 1, 0, 0, 6, 3, 0.19696969696969696, ["mov     bucket, [table]"], ["mov~bucket,<TAG>"]], [1, 0, 22, 0, 0, 8, 0, 1, 0, 3, 0.0, ["push    r12", "push    rbp", "mov     r12, table", "push    rbx", "cmp     qword ptr [table+40h], 0", "mov     rbp, [table]", "mov     rax, [table+8]", "jz      short loc_10443"], ["push~r12", "push~rbp", "mov~r12,table", "push~rbx", "cmp~[word ptr [table+0],0", "mov~rbp,<TAG>", "mov~rax,[table+0]", "jz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 1, 3, 0.01948051948051948, ["cmp     qword ptr [table+20h], 0", "jz      short loc_10443"], ["cmp~[word ptr [table+0],0", "jz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 2, 4, 0.12987012987012986, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 10, 0, 0, 3, 1, 1, 3, 3, 0.13636363636363635, ["mov     rdi, [bucket+8]; ptr", "test    cursor, cursor", "jz      short loc_10476"], ["mov~rdi,[bucket+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 4, 5, 0.0670995670995671, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 10, 0, 1, 5, 1, 2, 5, 4, 0.049783549783549784, ["mov     rbx, [cursor+8]", "call    free", "test    next, next", "mov     rdi, next", "jnz     short loc_10460"], ["mov~rbx,[cursor+0]", "call~FOO", "test~next,next", "mov~rdi,next", "jnz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 6, 3, 0.032467532467532464, ["mov     rax, [table+8]"], ["mov~rax,[table+0]"]]], "func_feature": [4, 6, 15, 0, 23, 34, 3, 60, 0.08093, 0, 2], "succs": [[8], [0, 2], [5, 7], [2, 18], [2, 19], [11], [], [6], [9, 10], [8, 15], [13], [11, 7], [13], [12, 14], [9], [3], [17, 3], [1, 3], [19], [4, 20], [21], [21, 22], [4]], "fname": "hash_free", "n_num": 23}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 24, 0, 0, 2, 1, 1, 0, 0, 0.04403409090909091, ["test    rdi, rdi", "jz      short loc_105BD"], ["test~rdi,rdi", "jz~FOO"]], [2, 0, 24, 2, 0, 10, 0, 0, 3, 6, 0.08664772727272728, ["mov     rax, rbx", "mov     rdi, rbx", "mul     r8", "mov     rax, rdx", "shr     rax, 1", "lea     rax, [rax+rax*2]", "sub     rdi, rax", "cmp     rbx, 9", "mov     rax, rdi", "jbe     short loc_105B8"], ["mov~rax,rbx", "mov~rdi,rbx", "mul~,r8", "mov~rax,rdx", "shr~rax,0", "lea~rax,<TAG>", "sub~rdi,rax", "cmp~rbx,0", "mov~rax,rdi", "jbe~FOO"]], [0, 0, 29, 0, 0, 3, 0, 0, 3, 3, 0.08775252525252526, ["divss   xmm0, dword ptr [r12+8]", "ucomiss xmm0, cs:dword_20E48", "jnb     loc_106B0"], ["divss~xmm0,[word ptr [r12+0]", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [2, 0, 30, 0, 0, 8, 2, 1, 2, 4, 0.017361111111111112, ["mov     rax, candidate", "pxor    xmm0, xmm0", "shr     rax, 1", "and     esi, 1", "or      rax, rsi", "cvtsi2ss xmm0, rax", "addss   xmm0, xmm0", "jmp     loc_104F9"], ["mov~rax,candidate", "pxor~xmm0,xmm0", "shr~rax,0", "and~esi,0", "or~rax,rsi", "cvtsi2ss~xmm0,rax", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 30, 0, 0, 2, 0, 0, 2, 4, 0.017361111111111112, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, candidate"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,candidate"]], [1, 0, 6, 0, 1, 8, 1, 2, 8, 4, 0.06818181818181818, ["mov     rax, [new_table+78h+storage.free_entry_list]", "mov     edx, 1; safe", "mov     rsi, r12; src", "mov     rdi, table; dst", "mov     [table+48h], rax", "call    transfer_entries", "test    al, al", "jz      loc_10723"], ["mov~rax,[new_table+0]", "mov~edx,0", "mov~rsi,r12", "mov~rdi,table", "mov~[table+0],rax", "call~FOO", "test~al,al", "jz~FOO"]], [3, 0, 8, 2, 1, 21, 2, 2, 7, 3, 0.10890151515151515, ["mov     [new_table+78h+storage.n_buckets], rbx", "shl     rbx, 4", "mov     [new_table+78h+storage.tuning], r12", "add     rbx, rax", "mov     rax, [table+40h]", "mov     r12, new_table", "movdqu  xmm0, xmmword ptr [table+30h]", "xor     edx, edx; safe", "mov     rsi, table; src", "mov     rdi, r12; dst", "mov     [new_table+78h+storage.bucket_limit], rbx", "mov     [new_table+78h+storage.data_freer], rax", "mov     rax, [table+48h]", "mov     [new_table+78h+storage.n_buckets_used], 0", "mov     [new_table+78h+storage.n_entries], 0", "movaps  xmmword ptr [new_table+78h+storage.hasher], xmm0", "mov     [new_table+78h+storage.free_entry_list], rax", "call    transfer_entries", "test    al, al", "mov     ebx, eax", "jnz     loc_106FC"], ["mov~[new_table+0],rbx", "shl~rbx,0", "mov~[new_table+0],r12", "add~rbx,rax", "mov~rax,[table+0]", "mov~r12,new_table", "movdqu~xmm0,[mmword ptr [table+0]", "xor~edx,edx", "mov~rsi,table", "mov~rdi,r12", "mov~[new_table+0],rbx", "mov~[new_table+0],rax", "mov~rax,[table+0]", "mov~[new_table+0],0", "mov~[new_table+0],0", "movaps~[mmword ptr [new_table+0],xmm0", "mov~[new_table+0],rax", "call~FOO", "test~al,al", "mov~ebx,eax", "jnz~FOO"]], [1, 0, 10, 0, 1, 6, 1, 2, 6, 3, 0.1259469696969697, ["mov     esi, 10h; size", "mov     rdi, rbx; nmemb", "call    _calloc", "test    rax, rax", "mov     [new_table+78h+storage.bucket], rax", "jz      loc_106B0"], ["mov~esi,0", "mov~rdi,rbx", "call~FOO", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 5, 3, 0.1590909090909091, ["cmp     [table+10h], rbx", "jz      loc_106F5"], ["cmp~[table+0],rbx", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 3, 4, 0.0, ["mov     ecx, 1", "jmp     loc_105DA"], ["mov~ecx,0", "jmp~FOO"]], [1, 0, 16, 1, 0, 5, 1, 0, 2, 4, 0.23989898989898992, ["mov     edx, 8", "xor     ecx, ecx", "mov     rax, rdx", "mul     rbx", "jo      loc_10728"], ["mov~edx,0", "xor~ecx,ecx", "mov~rax,rdx", "mul~,rbx", "jo~FOO"]], [3, 0, 24, 0, 0, 4, 0, 1, 5, 7, 0.026988636363636364, ["mov     edi, 10h", "mov     esi, 9", "mov     ecx, 3", "jmp     short loc_105A1"], ["mov~edi,0", "mov~esi,0", "mov~ecx,0", "jmp~FOO"]], [0, 0, 28, 0, 0, 2, 0, 0, 4, 7, 0.0928030303030303, ["ucomiss xmm0, cs:dword_20E4C", "jb      loc_106EB"], ["ucomiss~xmm0,<TAG>", "jb~FOO"]], [0, 0, 5, 0, 1, 6, 2, 2, 9, 3, 0.026515151515151516, ["xor     edx, edx; safe", "mov     rsi, r12; src", "mov     rdi, table; dst", "call    transfer_entries", "test    al, al", "jz      loc_10723"], ["xor~edx,edx", "mov~rsi,r12", "mov~rdi,table", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 24, 1, 0, 3, 1, 1, 7, 6, 0.0033143939393939395, ["add     rdi, 8", "test    rdx, rdx", "jz      short loc_105BD"], ["add~rdi,0", "test~rdx,rdx", "jz~FOO"]], [1, 0, 24, 3, 0, 8, 1, 0, 6, 6, 0.03551136363636364, ["add     rcx, 2", "xor     edx, edx", "mov     rax, rbx", "div     rcx", "add     rsi, rdi", "cmp     rsi, rbx", "mov     rax, rdx", "jb      short loc_10598"], ["add~rcx,0", "xor~edx,edx", "mov~rax,rbx", "div~,rcx", "add~rsi,rdi", "cmp~rsi,rbx", "mov~rax,rdx", "jb~FOO"]], [0, 0, 26, 0, 0, 2, 0, 1, 5, 6, 0.05397727272727273, ["cvttss2si rsi, xmm0", "jmp     loc_10538"], ["cvttss2si~rsi,xmm0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 10, 2, 0.005681818181818182, ["mov     rdi, [new_table+78h+storage.bucket]; ptr", "call    free", "jmp     short loc_106B2"], ["mov~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 1, 0, 4, 2, 0.0625, ["xor     ebx, ebx"], ["xor~ebx,ebx"]], [0, 0, 14, 0, 0, 2, 1, 1, 3, 3, 0.23421717171717174, ["test    rax, rax", "js      loc_106B0"], ["test~rax,rax", "js~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 4, 3, 0.17045454545454547, ["test    rcx, rcx", "jnz     loc_106B0"], ["test~rcx,rcx", "jnz~FOO"]], [0, 0, 32, 0, 0, 2, 1, 1, 1, 5, 0.008207070707070706, ["test    candidate, candidate", "js      loc_106CD"], ["test~candidate,candidate", "js~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, 1, 0.05681818181818182, ["mov     rcx, [rsp+78h+var_20]", "xor     rcx, fs:28h", "mov     eax, ebx", "jnz     short loc_10732"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [1, 0, 26, 0, 0, 5, 1, 0, 5, 6, 0.05397727272727273, ["subss   xmm0, cs:dword_20E4C", "mov     rax, 8000000000000000h", "cvttss2si rsi, xmm0", "xor     rsi, rax", "nop     dword ptr [rax+00h]"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rsi,xmm0", "xor~rsi,rax", "nop~[word ptr [rax+0]"]], [0, 0, 24, 0, 0, 2, 1, 1, 4, 5, 0.07291666666666667, ["test    rax, rax", "jnz     short loc_105C7"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, 2, 0.002840909090909091, ["mov     ebx, 1", "jmp     short loc_106B2"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 3, 0, 1, 9, 0, 2, 8, 2, 0.002840909090909091, ["mov     rdi, [table+0]; ptr", "call    free", "movdqa  xmm0, xmmword ptr [new_table+78h+storage.bucket]", "mov     rax, [new_table+78h+storage.free_entry_list]", "movups  xmmword ptr [table+0], xmm0", "movdqa  xmm0, xmmword ptr [new_table+78h+storage.n_buckets]", "mov     [table+48h], rax", "movups  xmmword ptr [table+10h], xmm0", "jmp     short loc_106B2"], ["mov~rdi,[table+0]", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rax,[new_table+0]", "movups~[mmword ptr [table+0],xmm0", "movdqa~xmm0,[mmword ptr [new_table+0]", "mov~[table+0],rax", "movups~[mmword ptr [table+0],xmm0", "jmp~FOO"]], [2, 0, 24, 1, 0, 3, 0, 1, 5, 5, 0.045928030303030304, ["add     rbx, 2", "cmp     rbx, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_10560"], ["add~rbx,0", "cmp~rbx,0", "jnz~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 6, -1, 0.0, ["add     rsp, 60h", "pop     rbx", "pop     table", "pop     r12", "retn"], ["add~rsp,0", "pop~rbx", "pop~table", "pop~r12", "retn"]], [5, 0, 25, 0, 0, 7, 1, 1, 1, 5, 0.17171717171717174, ["cmp     rsi, 0Ah", "mov     ebx, 0Ah", "mov     r8, 0AAAAAAAAAAAAAAABh", "cmovnb  rbx, rsi", "or      rbx, 1", "cmp     rbx, 0FFFFFFFFFFFFFFFFh", "jz      short loc_105C7"], ["cmp~rsi,0", "mov~ebx,0", "mov~r8,0", "cmovnb~rbx,rsi", "or~rbx,0", "cmp~rbx,0", "jz~FOO"]], [2, 0, 33, 1, 0, 11, 1, 1, 0, 6, 0.0, ["push    r12", "push    rbp", "mov     rbp, table", "push    rbx", "sub     rsp, 60h", "mov     r12, [table+28h]", "mov     rax, fs:28h", "mov     [rsp+78h+var_20], rax", "xor     eax, eax", "cmp     byte ptr [r12+10h], 0", "jnz     short loc_10538"], ["push~r12", "push~rbp", "mov~rbp,table", "push~rbx", "sub~rsp,0", "mov~r12,[table+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~[yte ptr [r12+0],0", "jnz~FOO"]], [0, 0, 24, 0, 0, 1, 0, 0, 2, 7, 0.05965909090909091, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]]], "func_feature": [8, 21, 30, 1, 34, 51, 3, 155, 0.063, 3, 12], "succs": [[11, 29], [0, 26], [19, 12], [2], [2], [17, 13], [28, 5], [19, 6], [27, 7], [20], [9, 20], [15], [16, 25], [17, 18], [29, 15], [26, 14], [31], [], [24], [24], [19, 21], [8, 19], [3, 4], [], [30, 23], [31], [10, 29], [24], [24], [1, 10], [], [33, 10], [22, 31], [1]], "fname": "hash_rehash", "n_num": 34}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 34, 0, 0, 4, 1, 1, 0, 0, 0.05112994350282486, ["mov     rcx, [table+28h]", "test    rdx, rdx", "movss   xmm2, dword ptr [rcx+8]", "js      loc_10A9C"], ["mov~rcx,[table+0]", "test~rdx,rdx", "movss~xmm2,[word ptr [rcx+0]", "js~FOO"]], [2, 0, 35, 0, 0, 9, 2, 1, 4, 6, 0.01652542372881356, ["mov     rax, rsi", "mov     rcx, rsi", "pxor    xmm1, xmm1", "shr     rax, 1", "and     ecx, 1", "or      rax, rcx", "cvtsi2ss xmm1, rax", "addss   xmm1, xmm1", "jmp     loc_108F6"], ["mov~rax,rsi", "mov~rcx,rsi", "pxor~xmm1,xmm1", "shr~rax,0", "and~ecx,0", "or~rax,rcx", "cvtsi2ss~xmm1,rax", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 35, 0, 0, 2, 0, 0, 4, 6, 0.01652542372881356, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rsi"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rsi"]], [0, 0, 24, 0, 0, 4, 0, 0, 14, 6, 0.0288135593220339, ["addss   xmm4, cs:dword_20E34", "movss   xmm5, dword ptr [rcx+4]", "ucomiss xmm5, xmm4", "jbe     short loc_109F0"], ["addss~xmm4,<TAG>", "movss~xmm5,[word ptr [rcx+0]", "ucomiss~xmm5,xmm4", "jbe~FOO"]], [0, 0, 25, 0, 0, 3, 0, 0, 13, 6, 0.03728813559322034, ["movss   xmm4, dword ptr [rcx]", "ucomiss xmm4, cs:dword_20E40", "jb      short loc_109F0"], ["movss~xmm4,<TAG>", "ucomiss~xmm4,<TAG>", "jb~FOO"]], [0, 0, 20, 0, 0, 6, 0, 0, 11, 5, 0.049764595103578155, ["movaps  xmm3, xmm0", "mov     [table+28h], rax", "movss   xmm2, cs:dword_20E30", "mulss   xmm3, xmm2", "ucomiss xmm1, xmm3", "jbe     loc_10869"], ["movaps~xmm3,xmm0", "mov~[table+0],rax", "movss~xmm2,<TAG>", "mulss~xmm3,xmm2", "ucomiss~xmm1,xmm3", "jbe~FOO"]], [0, 0, 28, 0, 0, 2, 0, 0, 10, 6, 0.08531073446327683, ["ucomiss xmm2, cs:dword_20E34", "jbe     loc_109F0"], ["ucomiss~xmm2,<TAG>", "jbe~FOO"]], [0, 0, 27, 0, 0, 3, 0, 0, 11, 6, 0.05254237288135594, ["movss   xmm3, cs:dword_20E38", "ucomiss xmm3, xmm2", "jbe     loc_109F0"], ["movss~xmm3,<TAG>", "ucomiss~xmm3,xmm2", "jbe~FOO"]], [0, 0, 26, 0, 0, 3, 0, 0, 12, 6, 0.04519774011299435, ["movss   xmm3, dword ptr [rcx+0Ch]", "ucomiss xmm3, cs:dword_20E3C", "jbe     loc_109F0"], ["movss~xmm3,[word ptr [rcx+0]", "ucomiss~xmm3,<TAG>", "jbe~FOO"]], [0, 0, 23, 0, 0, 3, 0, 0, 15, 6, 0.020856873822975523, ["movss   xmm6, cs:dword_20E44", "ucomiss xmm6, xmm5", "jb      short loc_109F0"], ["movss~xmm6,<TAG>", "ucomiss~xmm6,xmm5", "jb~FOO"]], [0, 0, 22, 0, 0, 2, 0, 0, 16, 5, 0.014077212806026366, ["ucomiss xmm2, xmm4", "jbe     short loc_109F0"], ["ucomiss~xmm2,xmm4", "jbe~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 14, 3, 0.007203389830508475, ["mov     rdx, [rax+8]", "mov     [table+48h], rdx"], ["mov~rdx,[rax+0]", "mov~[table+0],rdx"]], [0, 0, 7, 0, 0, 3, 1, 1, 13, 4, 0.04712806026365348, ["mov     rax, [table+48h]", "test    rax, rax", "jz      loc_10A60"], ["mov~rax,[table+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 14, 0, 0, 5, 1, 1, 14, 4, 0.02344632768361582, ["subss   xmm0, cs:dword_20E4C", "mov     rax, 8000000000000000h", "cvttss2si rsi, xmm0", "xor     rsi, rax", "jmp     loc_109C2"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rsi,xmm0", "xor~rsi,rax", "jmp~FOO"]], [0, 0, 16, 0, 0, 2, 0, 0, 13, 5, 0.06666666666666667, ["ucomiss xmm0, cs:dword_20E4C", "jnb     loc_10A7D"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 32, 0, 0, 2, 0, 0, 6, 4, 0.028389830508474576, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rdx"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rdx"]], [0, 0, 2, 0, 0, 3, 1, 1, 5, 1, 0.03220338983050847, ["mov     rcx, [rsp+38h+var_30]", "xor     rcx, fs:28h", "jnz     loc_10ADB"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 4, 0, 0, 3, 2, 1, 4, 2, 0.014689265536723164, ["xor     eax, eax", "test    matched_ent, matched_ent", "jz      short loc_10803"], ["xor~eax,eax", "test~matched_ent,matched_ent", "jz~FOO"]], [2, 0, 3, 1, 0, 7, 0, 1, 15, 2, 0.0018361581920903955, ["mov     rdx, [rbx+8]", "mov     [rax], entry", "mov     [rax+8], rdx", "mov     [rbx+8], rax", "mov     eax, 1", "add     qword ptr [table+20h], 1", "jmp     loc_10803"], ["mov~rdx,[rbx+0]", "mov~<TAG>,entry", "mov~[rax+0],rdx", "mov~[rbx+0],rax", "mov~eax,0", "add~[word ptr [table+0],0", "jmp~FOO"]], [3, 0, 3, 2, 0, 6, 0, 1, 8, 2, 0.020762711864406782, ["add     rsi, 1", "mov     [rbx], entry", "mov     eax, 1", "add     qword ptr [table+20h], 1", "mov     [table+18h], rsi", "jmp     loc_10803"], ["add~rsi,0", "mov~<TAG>,entry", "mov~eax,0", "add~[word ptr [table+0],0", "mov~[table+0],rsi", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 13, 2, 0.010451977401129945, ["mov     eax, 0FFFFFFFFh", "jmp     loc_10803"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 5, 2, 0.0, ["mov     [matched_ent], rsi"], ["mov~<TAG>,rsi"]], [0, 0, 18, 0, 0, 2, 0, 1, 11, 4, 0.08060263653483993, ["mulss   xmm0, xmm2", "jmp     short loc_109A3"], ["mulss~xmm0,xmm2", "jmp~FOO"]], [1, 0, 19, 0, 0, 3, 0, 1, 17, 4, 0.0072975517890772135, ["cmp     byte ptr [tuning+10h], 0", "mulss   xmm0, xmm3", "jz      short loc_10A14"], ["cmp~[yte ptr [tuning+0],0", "mulss~xmm0,xmm3", "jz~FOO"]], [0, 0, 19, 0, 0, 1, 0, 0, 10, 5, 0.08582862523540491, ["mulss   xmm0, cs:dword_20E50"], ["mulss~xmm0,<TAG>"]], [1, 0, 58, 2, 0, 7, 1, 1, 2, 4, 0.03220338983050847, ["shl     rax, 4", "add     rax, [table+0]", "mov     rsi, [rax]", "mov     rbx, rax", "mov     [rsp+38h+bucket], rax", "test    rsi, rsi", "jz      loc_108E0"], ["shl~rax,0", "add~rax,[table+0]", "mov~rsi,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "test~rsi,rsi", "jz~FOO"]], [0, 0, 59, 0, 1, 9, 0, 1, 1, 5, 0.01638418079096045, ["mov     r13, table", "mov     rbp, entry", "mov     r12, matched_ent", "mov     entry, [table+10h]", "mov     table, entry", "call    qword ptr [table+30h]", "mov     rdx, [table+10h]", "cmp     rax, rdx", "jnb     loc_109EB"], ["mov~r13,table", "mov~rbp,entry", "mov~r12,matched_ent", "mov~entry,[table+0]", "mov~table,entry", "call~[word ptr [table+0]", "mov~rdx,[table+0]", "cmp~rax,rdx", "jnb~FOO"]], [0, 0, 31, 0, 0, 4, 0, 0, 7, 3, 0.07231638418079096, ["movaps  xmm3, xmm0", "mulss   xmm3, xmm2", "ucomiss xmm1, xmm3", "jbe     loc_10A44"], ["movaps~xmm3,xmm0", "mulss~xmm3,xmm2", "ucomiss~xmm1,xmm3", "jbe~FOO"]], [2, 0, 32, 0, 0, 8, 2, 1, 6, 4, 0.028389830508474576, ["mov     rax, rdx", "pxor    xmm0, xmm0", "shr     rax, 1", "and     edx, 1", "or      rax, rdx", "cvtsi2ss xmm0, rax", "addss   xmm0, xmm0", "jmp     loc_10911"], ["mov~rax,rdx", "pxor~xmm0,xmm0", "shr~rax,0", "and~edx,0", "or~rax,rdx", "cvtsi2ss~xmm0,rax", "addss~xmm0,xmm0", "jmp~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 6, -1, 0.0, ["add     rsp, 18h", "pop     rbx", "pop     entry", "pop     matched_ent", "pop     table", "retn"], ["add~rsp,0", "pop~rbx", "pop~entry", "pop~matched_ent", "pop~table", "retn"]], [0, 0, 49, 0, 0, 2, 0, 1, 3, 3, 0.022033898305084745, ["cmp     entry, rsi", "jz      short loc_107F8"], ["cmp~entry,rsi", "jz~FOO"]], [1, 0, 5, 0, 1, 4, 1, 2, 14, 3, 0.014218455743879472, ["mov     edi, 10h; size", "call    malloc", "test    rax, rax", "jnz     loc_1088C"], ["mov~edi,0", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 37, 0, 0, 3, 1, 1, 3, 7, 0.024858757062146894, ["mov     rsi, [table+18h]", "test    rsi, rsi", "js      loc_10ABA"], ["mov~rsi,[table+0]", "test~rsi,rsi", "js~FOO"]], [0, 0, 17, 0, 0, 2, 0, 0, 12, 3, 0.08606403013182674, ["ucomiss xmm0, cs:dword_20E48", "jnb     loc_10A73"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 48, 0, 1, 4, 1, 2, 4, 5, 0.029096045197740113, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_107F0"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 36, 0, 0, 3, 1, 1, 7, 9, 0.11186440677966102, ["mov     rax, [table+18h]", "test    rax, rax", "js      short loc_108B0"], ["mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 37, 0, 0, 1, 0, 1, 6, 10, 0.023870056497175142, ["jmp     short loc_10828"], ["jmp~FOO"]], [0, 0, 45, 0, 0, 4, 1, 1, 8, 6, 0.014971751412429379, ["mov     rbx, [rbx+8]", "mov     rax, [rbx+8]", "test    rax, rax", "jz      short loc_10828"], ["mov~rbx,[rbx+0]", "mov~rax,[rbx+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 39, 0, 0, 2, 1, 1, 6, 3, 0.05918079096045198, ["test    rsi, rsi", "jz      short loc_10828"], ["test~rsi,rsi", "jz~FOO"]], [0, 0, 29, 0, 0, 3, 0, 1, 9, 6, 0.16638418079096046, ["lea     rax, default_tuning", "cmp     rcx, rax", "jz      loc_10A0C"], ["lea~rax,<TAG>", "cmp~rcx,rax", "jz~FOO"]], [0, 0, 30, 0, 0, 4, 0, 1, 11, 5, 0.13898305084745763, ["movaps  xmm3, xmm2", "mulss   xmm3, xmm0", "ucomiss xmm1, xmm3", "ja      loc_10928"], ["movaps~xmm3,xmm2", "mulss~xmm3,xmm0", "ucomiss~xmm1,xmm3", "ja~FOO"]], [0, 0, 30, 0, 0, 1, 0, 0, 8, 7, 0.06949152542372881, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 34, 0, 0, 2, 0, 0, 8, 8, 0.05677966101694915, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [0, 0, 46, 0, 0, 3, 1, 1, 5, 6, 0.022740112994350282, ["mov     rax, [rbx+8]", "test    rax, rax", "jnz     short loc_107DC"], ["mov~rax,[rbx+0]", "test~rax,rax", "jnz~FOO"]], [2, 0, 34, 0, 0, 8, 2, 1, 8, 8, 0.05677966101694915, ["mov     rdx, rax", "pxor    xmm1, xmm1", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm1, rdx", "addss   xmm1, xmm1", "jmp     loc_1083A"], ["mov~rdx,rax", "pxor~xmm1,xmm1", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm1,rdx", "addss~xmm1,xmm1", "jmp~FOO"]], [2, 0, 31, 0, 0, 8, 2, 1, 10, 6, 0.0635593220338983, ["mov     rdx, rax", "pxor    xmm0, xmm0", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0", "jmp     loc_10859"], ["mov~rdx,rax", "pxor~xmm0,xmm0", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 33, 0, 0, 5, 1, 1, 9, 7, 0.12796610169491526, ["mov     rax, [table+10h]", "mov     rcx, [table+28h]", "test    rax, rax", "movss   xmm2, dword ptr [rcx+8]", "js      loc_10A20"], ["mov~rax,[table+0]", "mov~rcx,[table+0]", "test~rax,rax", "movss~xmm2,[word ptr [rcx+0]", "js~FOO"]], [0, 0, 14, 0, 0, 1, 0, 0, 14, 4, 0.02344632768361582, ["cvttss2si rsi, xmm0; candidate"], ["cvttss2si~rsi,xmm0"]], [0, 0, 4, 0, 0, 1, 0, 0, 13, 3, 0.024717514124293787, ["mov     rsi, [table+18h]"], ["mov~rsi,[table+0]"]], [1, 0, 10, 0, 0, 3, 0, 1, 12, 4, 0.09613935969868173, ["mov     rbx, [rsp+38h+bucket]", "cmp     qword ptr [rbx], 0", "jz      loc_10A40"], ["mov~rbx,<TAG>", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 45, 0, 1, 4, 1, 2, 7, 5, 0.00903954802259887, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     loc_108D0"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 45, 0, 0, 3, 0, 1, 6, 5, 0.011299435028248588, ["mov     rsi, [rax]", "cmp     entry, rsi", "jnz     short loc_107C0"], ["mov~rsi,<TAG>", "cmp~entry,rsi", "jnz~FOO"]], [0, 0, 13, 0, 1, 4, 1, 2, 15, 3, 0.042090395480225994, ["mov     rdi, table; table", "call    hash_rehash", "test    al, al", "jz      loc_10A73"], ["mov~rdi,table", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 31, 0, 0, 2, 0, 0, 10, 6, 0.0635593220338983, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [0, 0, 40, 0, 0, 3, 0, 1, 8, 4, 0.0016949152542372883, ["mov     rax, [rbx+8]", "mov     rsi, [rax]", "jmp     loc_107F3"], ["mov~rax,[rbx+0]", "mov~rsi,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 60, 1, 0, 10, 2, 1, 0, 6, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+38h+var_30], rax", "xor     eax, eax", "test    entry, entry", "jz      loc_109EB"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~entry,entry", "jz~FOO"]], [0, 0, 40, 0, 0, 1, 0, 1, 7, 4, 0.009887005649717515, ["jmp     short loc_107F3"], ["jmp~FOO"]], [0, 0, 12, 0, 1, 7, 2, 2, 16, 5, 0.02824858757062147, ["xor     ecx, ecx; delete", "mov     rdx, rsp; bucket_head", "mov     rsi, entry; entry", "mov     rdi, table; table", "call    hash_find_entry", "test    rax, rax", "jz      loc_10869"], ["xor~ecx,ecx", "mov~rdx,rsp", "mov~rsi,entry", "mov~rdi,table", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 40, 0, 0, 1, 0, 0, 5, 4, 0.01709039548022599, ["mov     rsi, [rbx]"], ["mov~rsi,<TAG>"]]], "func_feature": [8, 29, 43, 1, 61, 93, 0, 218, 0.03951, 11, 7], "succs": [[28, 15], [0], [0], [9, 5], [3, 5], [24, 49], [5, 7], [8, 5], [4, 5], [10, 5], [5, 23], [18], [11, 31], [52], [13, 47], [27], [29, 55], [16, 21], [16], [16], [16], [16], [33], [33, 22], [22], [32, 30], [25, 59], [41, 19], [27], [], [17, 34], [18, 20], [1, 2], [20, 14], [43, 60], [42, 44], [35], [51, 35], [17, 35], [24, 6], [49, 39], [39], [46], [51, 36], [46], [40], [45, 53], [52], [19], [48, 12], [37, 54], [57, 50], [58, 20], [40], [38], [], [26, 59], [38], [49, 59], [], [38]], "fname": "hash_insert_if_absent", "n_num": 61}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 26, 0, 0, 3, 0, 0, 0, 0, 0.048396854204476716, ["movss   xmm3, dword ptr [rcx+0Ch]", "ucomiss xmm3, cs:dword_20E3C", "jbe     loc_10D90"], ["movss~xmm3,[word ptr [rcx+0]", "ucomiss~xmm3,<TAG>", "jbe~FOO"]], [0, 0, 27, 0, 0, 3, 0, 0, 11, 6, 0.056261343012704176, ["movss   xmm3, cs:dword_20E38", "ucomiss xmm3, xmm2", "jbe     loc_10D90"], ["movss~xmm3,<TAG>", "ucomiss~xmm3,xmm2", "jbe~FOO"]], [0, 0, 43, 0, 0, 3, 0, 1, 6, 4, 0.01088929219600726, ["mov     rsi, [rax]", "cmp     entry, rsi", "jnz     short loc_10B60"], ["mov~rsi,<TAG>", "cmp~entry,rsi", "jnz~FOO"]], [0, 0, 44, 0, 0, 3, 1, 1, 5, 5, 0.024349667271627348, ["mov     rax, [rbx+8]", "test    rax, rax", "jnz     short loc_10B7D"], ["mov~rax,[rbx+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 43, 0, 0, 4, 1, 1, 8, 5, 0.016031457955232913, ["mov     rbx, [rbx+8]", "mov     rax, [rbx+8]", "test    rax, rax", "jz      short loc_10B9C"], ["mov~rbx,[rbx+0]", "mov~rax,[rbx+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 14, 3, 0.007713248638838476, ["mov     rdx, [rax+8]", "mov     [table+48h], rdx"], ["mov~rdx,[rax+0]", "mov~[table+0],rdx"]], [0, 0, 7, 0, 0, 3, 1, 1, 13, 4, 0.050463803186126234, ["mov     rax, [table+48h]", "test    rax, rax", "jz      loc_10E00"], ["mov~rax,[table+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 38, 0, 0, 1, 0, 1, 7, 3, 0.008771929824561405, ["jmp     short loc_10B93"], ["jmp~FOO"]], [0, 0, 37, 0, 0, 3, 1, 1, 3, 7, 0.02661826981246219, ["mov     rsi, [table+18h]", "test    rsi, rsi", "js      loc_10E5D"], ["mov~rsi,[table+0]", "test~rsi,rsi", "js~FOO"]], [1, 0, 56, 2, 0, 7, 1, 1, 2, 3, 0.03327283726557774, ["shl     rax, 4", "add     rax, [table]", "mov     rsi, [rax]", "mov     rbx, rax", "mov     [rsp+28h+var_28], rax", "test    rsi, rsi", "jz      loc_10C80"], ["shl~rax,0", "add~rax,<TAG>", "mov~rsi,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "test~rsi,rsi", "jz~FOO"]], [0, 0, 13, 0, 1, 4, 1, 2, 15, 3, 0.04506957047791894, ["mov     rdi, table; table", "call    hash_rehash", "test    al, al", "jz      loc_10E13"], ["mov~rdi,table", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 14, 0, 0, 5, 1, 1, 14, 4, 0.025105868118572294, ["subss   xmm0, cs:dword_20E4C", "mov     rax, 8000000000000000h", "cvttss2si rsi, xmm0", "xor     rsi, rax", "jmp     loc_10D62"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rsi,xmm0", "xor~rsi,rax", "jmp~FOO"]], [0, 0, 14, 0, 0, 1, 0, 0, 14, 4, 0.025105868118572294, ["cvttss2si rsi, xmm0; candidate"], ["cvttss2si~rsi,xmm0"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 58, 1, 0, 9, 2, 1, 0, 5, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 10h", "mov     rax, fs:28h", "mov     [rsp+28h+var_20], rax", "xor     eax, eax", "test    entry, entry", "jz      loc_10D8B"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~entry,entry", "jz~FOO"]], [0, 0, 57, 0, 1, 8, 0, 1, 1, 4, 0.01693889897156685, ["mov     r12, table", "mov     rbp, entry", "mov     entry, [table+10h]", "mov     table, entry", "call    qword ptr [table+30h]", "mov     rdx, [table+10h]", "cmp     rax, rdx", "jnb     loc_10D8B"], ["mov~r12,table", "mov~rbp,entry", "mov~entry,[table+0]", "mov~table,entry", "call~[word ptr [table+0]", "mov~rdx,[table+0]", "cmp~rax,rdx", "jnb~FOO"]], [0, 0, 12, 0, 1, 7, 2, 2, 16, 5, 0.030248033877797946, ["xor     ecx, ecx; delete", "mov     rdx, rsp; bucket_head", "mov     rsi, entry; entry", "mov     rdi, table; table", "call    hash_find_entry", "test    rax, rax", "jz      loc_10BE4"], ["xor~ecx,ecx", "mov~rdx,rsp", "mov~rsi,entry", "mov~rdi,table", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 5, 0, 1, 4, 1, 2, 14, 3, 0.015224843718491633, ["mov     edi, 10h; size", "call    malloc", "test    rax, rax", "jnz     loc_10C09"], ["mov~edi,0", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 19, 0, 0, 1, 0, 0, 10, 5, 0.09190360959870944, ["mulss   xmm0, cs:dword_20E50"], ["mulss~xmm0,<TAG>"]], [0, 0, 29, 0, 0, 3, 0, 1, 9, 6, 0.1781609195402299, ["lea     rax, default_tuning", "cmp     rcx, rax", "jz      loc_10DAD"], ["lea~rax,<TAG>", "cmp~rcx,rax", "jz~FOO"]], [0, 0, 20, 0, 0, 6, 0, 0, 11, 5, 0.05328695301472071, ["movaps  xmm3, xmm0", "mov     [table+28h], rax", "movss   xmm2, cs:dword_20E30", "mulss   xmm3, xmm2", "ucomiss xmm1, xmm3", "jbe     loc_10BE4"], ["movaps~xmm3,xmm0", "mov~[table+0],rax", "movss~xmm2,<TAG>", "mulss~xmm3,xmm2", "ucomiss~xmm1,xmm3", "jbe~FOO"]], [0, 0, 38, 0, 0, 1, 0, 0, 5, 3, 0.0176950998185118, ["mov     rsi, [rbx]"], ["mov~rsi,<TAG>"]], [0, 0, 46, 0, 1, 4, 1, 2, 4, 4, 0.031155474894131886, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_10B90"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [2, 0, 32, 0, 0, 8, 2, 1, 6, 4, 0.030399274047186935, ["mov     rax, rdx", "pxor    xmm0, xmm0", "shr     rax, 1", "and     edx, 1", "or      rax, rdx", "cvtsi2ss xmm0, rax", "addss   xmm0, xmm0", "jmp     loc_10CB3"], ["mov~rax,rdx", "pxor~xmm0,xmm0", "shr~rax,0", "and~edx,0", "or~rax,rdx", "cvtsi2ss~xmm0,rax", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 34, 0, 0, 4, 1, 1, 5, 5, 0.05474894131881428, ["mov     rcx, [table+28h]", "test    rdx, rdx", "movss   xmm2, dword ptr [rcx+8]", "js      loc_10E3F"], ["mov~rcx,[table+0]", "test~rdx,rdx", "movss~xmm2,[word ptr [rcx+0]", "js~FOO"]], [0, 0, 35, 0, 0, 2, 0, 0, 4, 6, 0.0176950998185118, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rsi"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rsi"]], [0, 0, 25, 0, 0, 3, 0, 0, 13, 6, 0.039927404718693285, ["movss   xmm4, dword ptr [rcx]", "ucomiss xmm4, cs:dword_20E40", "jb      short loc_10D90"], ["movss~xmm4,<TAG>", "ucomiss~xmm4,<TAG>", "jb~FOO"]], [0, 0, 32, 0, 0, 2, 0, 0, 6, 4, 0.030399274047186935, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rdx"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rdx"]], [0, 0, 37, 0, 0, 2, 1, 1, 6, 2, 0.05852994555353903, ["test    rsi, rsi", "jnz     loc_10C21"], ["test~rsi,rsi", "jnz~FOO"]], [0, 0, 38, 0, 0, 3, 0, 1, 8, 3, 0.0012099213551119178, ["mov     rax, [rbx+8]", "mov     rsi, [rax]", "jmp     loc_10B93"], ["mov~rax,[rbx+0]", "mov~rsi,<TAG>", "jmp~FOO"]], [2, 0, 31, 0, 0, 8, 2, 1, 10, 6, 0.06805807622504538, ["mov     rdx, rax", "pxor    xmm0, xmm0", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0", "jmp     loc_10BD4"], ["mov~rdx,rax", "pxor~xmm0,xmm0", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 33, 0, 0, 5, 1, 1, 9, 7, 0.1370235934664247, ["mov     rax, [table+10h]", "mov     rcx, [table+28h]", "test    rax, rax", "movss   xmm2, dword ptr [rcx+8]", "js      loc_10DC0"], ["mov~rax,[table+0]", "mov~rcx,[table+0]", "test~rax,rax", "movss~xmm2,[word ptr [rcx+0]", "js~FOO"]], [1, 0, 3, 1, 0, 6, 0, 0, 15, 2, 0.0019661222020568663, ["mov     rdx, [rbx+8]", "mov     [rax], entry", "mov     rsi, entry", "mov     [rax+8], rdx", "mov     [rbx+8], rax", "add     qword ptr [table+20h], 1"], ["mov~rdx,[rbx+0]", "mov~<TAG>,entry", "mov~rsi,entry", "mov~[rax+0],rdx", "mov~[rbx+0],rax", "add~[word ptr [table+0],0"]], [0, 0, 36, 0, 0, 3, 1, 1, 7, 9, 0.11978221415607987, ["mov     rax, [table+18h]", "test    rax, rax", "js      loc_10C48"], ["mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 37, 0, 0, 1, 0, 1, 6, 10, 0.025559588626739262, ["jmp     short loc_10B9C"], ["jmp~FOO"]], [0, 0, 24, 0, 0, 4, 0, 0, 14, 6, 0.030852994555353903, ["addss   xmm4, cs:dword_20E34", "movss   xmm5, dword ptr [rcx+4]", "ucomiss xmm5, xmm4", "jbe     short loc_10D90"], ["addss~xmm4,<TAG>", "movss~xmm5,[word ptr [rcx+0]", "ucomiss~xmm5,xmm4", "jbe~FOO"]], [0, 0, 28, 0, 0, 2, 0, 0, 10, 6, 0.0913490623109498, ["ucomiss xmm2, cs:dword_20E34", "jbe     loc_10D90"], ["ucomiss~xmm2,<TAG>", "jbe~FOO"]], [0, 0, 23, 0, 0, 3, 0, 0, 15, 6, 0.022333131679774153, ["movss   xmm6, cs:dword_20E44", "ucomiss xmm6, xmm5", "jb      short loc_10D90"], ["movss~xmm6,<TAG>", "ucomiss~xmm6,xmm5", "jb~FOO"]], [0, 0, 22, 0, 0, 2, 0, 0, 16, 5, 0.015073603549102643, ["ucomiss xmm2, xmm4", "jbe     short loc_10D90"], ["ucomiss~xmm2,xmm4", "jbe~FOO"]], [0, 0, 34, 0, 0, 2, 0, 0, 8, 8, 0.06079854809437387, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [2, 0, 3, 2, 0, 6, 0, 1, 8, 2, 0.02223230490018149, ["add     rsi, 1", "mov     [rbx], entry", "add     qword ptr [table+20h], 1", "mov     [table+18h], rsi", "mov     rsi, entry", "jmp     loc_10C21"], ["add~rsi,0", "mov~<TAG>,entry", "add~[word ptr [table+0],0", "mov~[table+0],rsi", "mov~rsi,entry", "jmp~FOO"]], [0, 0, 31, 0, 0, 4, 0, 0, 7, 3, 0.07743496672716274, ["movaps  xmm3, xmm0", "mulss   xmm3, xmm2", "ucomiss xmm1, xmm3", "jbe     loc_10DE5"], ["movaps~xmm3,xmm0", "mulss~xmm3,xmm2", "ucomiss~xmm1,xmm3", "jbe~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 13, 3, 0.026467029643073202, ["mov     rsi, [table+18h]"], ["mov~rsi,[table+0]"]], [0, 0, 2, 0, 0, 4, 1, 1, 4, 1, 0.03327283726557774, ["mov     rcx, [rsp+28h+var_20]", "xor     rcx, fs:28h", "mov     rax, rsi", "jnz     loc_10E7E"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,rsi", "jnz~FOO"]], [0, 0, 47, 0, 0, 2, 0, 1, 3, 2, 0.02177858439201452, ["cmp     entry, rsi", "jz      loc_10C21"], ["cmp~entry,rsi", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 13, 2, 0.01119177253478524, ["xor     esi, esi", "jmp     loc_10C21"], ["xor~esi,esi", "jmp~FOO"]], [0, 0, 18, 0, 0, 2, 0, 1, 11, 4, 0.08630772333131681, ["mulss   xmm0, xmm2", "jmp     short loc_10D43"], ["mulss~xmm0,xmm2", "jmp~FOO"]], [1, 0, 19, 0, 0, 3, 0, 1, 17, 4, 0.007814075418431137, ["cmp     byte ptr [rcx+10h], 0", "mulss   xmm0, xmm3", "jz      short loc_10DB5"], ["cmp~[yte ptr [rcx+0],0", "mulss~xmm0,xmm3", "jz~FOO"]], [0, 0, 16, 0, 0, 2, 0, 0, 13, 5, 0.07138535995160315, ["ucomiss xmm0, cs:dword_20E4C", "jnb     loc_10E20"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 5, -1, 0.0, ["add     rsp, 10h", "pop     rbx", "pop     entry", "pop     table", "retn"], ["add~rsp,0", "pop~rbx", "pop~entry", "pop~table", "retn"]], [0, 0, 30, 0, 0, 1, 0, 0, 8, 7, 0.07441016333938294, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [2, 0, 34, 0, 0, 8, 2, 1, 8, 8, 0.06079854809437387, ["mov     rdx, rax", "pxor    xmm1, xmm1", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm1, rdx", "addss   xmm1, xmm1", "jmp     loc_10BB3"], ["mov~rdx,rax", "pxor~xmm1,xmm1", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm1,rdx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 17, 0, 0, 2, 0, 0, 12, 3, 0.09215567654769106, ["ucomiss xmm0, cs:dword_20E48", "jnb     loc_10E13"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 31, 0, 0, 2, 0, 0, 10, 6, 0.06805807622504538, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [0, 0, 30, 0, 0, 4, 0, 1, 11, 5, 0.14882032667876588, ["movaps  xmm3, xmm2", "mulss   xmm3, xmm0", "ucomiss xmm1, xmm3", "ja      loc_10CC8"], ["movaps~xmm3,xmm2", "mulss~xmm3,xmm0", "ucomiss~xmm1,xmm3", "ja~FOO"]], [2, 0, 35, 0, 0, 9, 2, 1, 4, 6, 0.0176950998185118, ["mov     rax, rsi", "mov     rcx, rsi", "pxor    xmm1, xmm1", "shr     rax, 1", "and     ecx, 1", "or      rax, rcx", "cvtsi2ss xmm1, rax", "addss   xmm1, xmm1", "jmp     loc_10C97"], ["mov~rax,rsi", "mov~rcx,rsi", "pxor~xmm1,xmm1", "shr~rax,0", "and~ecx,0", "or~rax,rcx", "cvtsi2ss~xmm1,rax", "addss~xmm1,xmm1", "jmp~FOO"]], [1, 0, 10, 0, 0, 3, 0, 1, 12, 4, 0.10294414196410569, ["mov     rbx, [rsp+28h+var_28]", "cmp     qword ptr [rbx], 0", "jz      loc_10DE0"], ["mov~rbx,<TAG>", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 43, 0, 1, 4, 1, 2, 7, 4, 0.009679370840895343, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     loc_10C70"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [8, 28, 41, 2, 59, 90, 2, 211, 0.04323, 11, 7], "succs": [[26, 20], [0, 20], [57, 7], [2, 34], [33, 2], [32], [17, 5], [28], [25, 55], [8, 44], [16, 45], [10], [10], [], [13, 15], [9, 13], [56, 13], [32, 45], [46], [18, 36], [56, 18], [28], [3, 21], [41], [27, 23], [24], [35, 20], [41], [33, 43], [28], [54], [53, 30], [43], [51, 39], [33], [20, 37], [1, 20], [20, 38], [20, 47], [31], [43], [40, 50], [40], [49, 58], [43, 22], [43], [52], [52, 46], [11, 12], [], [19], [31], [48, 45], [54], [56, 19], [24], [42, 6], [4, 29], []], "fname": "hash_insert", "n_num": 59}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 33, 0, 0, 2, 1, 1, 0, 0, 0.21204081632653063, ["test    rbx, rbx", "jz      loc_110F8"], ["test~rbx,rbx", "jz~FOO"]], [1, 0, 34, 0, 0, 7, 0, 1, 7, -1, 0.0953061224489796, ["mov     rdx, [rax+8]", "mov     [r14+8], rdx", "mov     qword ptr [rax], 0", "mov     rdx, [table+48h]", "mov     [rax+8], rdx", "mov     [table+48h], rax", "jmp     short loc_10F7E"], ["mov~rdx,[rax+0]", "mov~[r14+0],rdx", "mov~<TAG>,0", "mov~rdx,[table+0]", "mov~[rax+0],rdx", "mov~[table+0],rax", "jmp~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 4, -1, 0.04081632653061225, ["mov     qword ptr [bucket], 0", "jmp     loc_10F7E"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 34, 0, 0, 6, 0, 0, 4, -1, 0.04081632653061225, ["movdqu  xmm0, xmmword ptr [rax]", "movups  xmmword ptr [bucket], xmm0", "mov     qword ptr [rax], 0", "mov     rdx, [table+48h]", "mov     [rax+8], rdx", "mov     [table+48h], rax"], ["movdqu~xmm0,<TAG>", "movups~<TAG>,xmm0", "mov~<TAG>,0", "mov~rdx,[table+0]", "mov~[rax+0],rdx", "mov~[table+0],rax"]], [0, 0, 21, 0, 0, 3, 0, 0, 13, -1, 0.11714285714285715, ["movss   xmm3, dword ptr [rdx+8]", "ucomiss xmm3, cs:dword_20E34", "jbe     loc_110D0"], ["movss~xmm3,[word ptr [rdx+0]", "ucomiss~xmm3,<TAG>", "jbe~FOO"]], [0, 0, 23, 0, 0, 3, 0, 1, 12, -1, 0.22448979591836735, ["lea     rax, default_tuning", "cmp     rdx, rax", "jz      loc_11170"], ["lea~rax,<TAG>", "cmp~rdx,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 8, 1, 0, 2, -1, 0.0, ["xor     ebx, ebx", "mov     rax, rbx", "pop     rbx", "pop     table", "pop     bucket", "pop     entry", "pop     r14", "retn"], ["xor~ebx,ebx", "mov~rax,rbx", "pop~rbx", "pop~table", "pop~bucket", "pop~entry", "pop~r14", "retn"]], [1, 0, 48, 2, 0, 6, 1, 1, 1, -1, 0.019591836734693877, ["shl     rax, 4", "add     rax, [table+0]", "mov     rbx, [rax]", "mov     r12, rax", "test    rbx, rbx", "jz      loc_110F8"], ["shl~rax,0", "add~rax,[table+0]", "mov~rbx,<TAG>", "mov~r12,rax", "test~rbx,rbx", "jz~FOO"]], [0, 0, 41, 0, 0, 3, 1, 1, 4, -1, 0.012244897959183675, ["mov     rax, [bucket+8]", "test    rax, rax", "jz      loc_110F8"], ["mov~rax,[bucket+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 39, 0, 0, 4, 1, 1, 7, -1, 0.0038775510204081634, ["mov     r14, [r14+8]", "mov     rax, [r14+8]", "test    rax, rax", "jz      loc_110F8"], ["mov~r14,[r14+0]", "mov~rax,[r14+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 16, -1, 0.04183673469387755, ["cvttss2si rsi, xmm1; candidate"], ["cvttss2si~rsi,xmm1"]], [0, 0, 8, 0, 0, 2, 0, 0, 15, -1, 0.11306122448979593, ["ucomiss xmm1, cs:dword_20E4C", "jnb     loc_11150"], ["ucomiss~xmm1,<TAG>", "jnb~FOO"]], [0, 0, 39, 0, 1, 5, 1, 2, 6, -1, 0.009183673469387756, ["mov     rsi, rbx", "mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jz      short loc_10F00"], ["mov~rsi,rbx", "mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jz~FOO"]], [0, 0, 5, 0, 1, 4, 1, 2, 17, -1, 0.07142857142857142, ["mov     rdi, table; table", "call    hash_rehash", "test    al, al", "jnz     loc_10F93"], ["mov~rdi,table", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 6, 0, 0, 5, 1, 1, 16, -1, 0.04183673469387755, ["subss   xmm1, cs:dword_20E4C", "mov     rax, 8000000000000000h", "cvttss2si rsi, xmm1", "xor     rsi, rax", "jmp     loc_11086"], ["subss~xmm1,<TAG>", "mov~rax,0", "cvttss2si~rsi,xmm1", "xor~rsi,rax", "jmp~FOO"]], [2, 0, 31, 1, 0, 3, 0, 1, 6, -1, 0.21510204081632653, ["sub     qword ptr [table+20h], 1", "cmp     qword ptr [bucket], 0", "jz      short loc_10FA0"], ["sub~[word ptr [table+0],0", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 20, 0, 0, 3, 0, 0, 14, -1, 0.07714285714285715, ["movss   xmm4, cs:dword_20E38", "ucomiss xmm4, xmm3", "jbe     loc_110D0"], ["movss~xmm4,<TAG>", "ucomiss~xmm4,xmm3", "jbe~FOO"]], [0, 0, 39, 0, 0, 3, 0, 1, 8, -1, 0.01469387755102041, ["mov     rbx, [rax]", "cmp     entry, rbx", "jz      short loc_10F2D"], ["mov~rbx,<TAG>", "cmp~entry,rbx", "jz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 20, -1, 0.0008163265306122449, ["mov     r12, [cursor+8]", "call    free", "test    next, next", "mov     rdi, next", "jnz     short loc_110A0"], ["mov~r12,[cursor+0]", "call~FOO", "test~next,next", "mov~rdi,next", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 19, -1, 0.017959183673469388, ["nop"], ["nop"]], [0, 0, 4, 0, 0, 3, 1, 1, 18, -1, 0.052653061224489796, ["mov     rdi, [table+48h]; ptr", "test    cursor, cursor", "jz      short loc_110B1"], ["mov~rdi,[table+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 7, -1, 0.0, ["mov     rax, rbx", "pop     rbx", "pop     table", "pop     r12", "pop     entry", "pop     r14", "retn"], ["mov~rax,rbx", "pop~rbx", "pop~table", "pop~r12", "pop~entry", "pop~r14", "retn"]], [0, 0, 24, 0, 0, 4, 0, 0, 11, -1, 0.22775510204081634, ["movaps  xmm3, xmm2", "mulss   xmm3, xmm1", "ucomiss xmm3, xmm0", "jbe     short loc_10F93"], ["movaps~xmm3,xmm2", "mulss~xmm3,xmm1", "ucomiss~xmm3,xmm0", "jbe~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 19, -1, 0.0012244897959183673, ["mov     qword ptr [table+48h], 0", "jmp     loc_10F93"], ["mov~[word ptr [table+0],0", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 16, -1, 0.004081632653061225, ["jmp     loc_10F93"], ["jmp~FOO"]], [0, 0, 40, 0, 0, 4, 0, 1, 5, -1, 0.025714285714285714, ["mov     rbx, [rax]", "mov     r14, bucket", "cmp     entry, rbx", "jnz     short loc_10F19"], ["mov~rbx,<TAG>", "mov~r14,bucket", "cmp~entry,rbx", "jnz~FOO"]], [2, 0, 25, 0, 0, 8, 2, 1, 10, -1, 0.10857142857142857, ["mov     rcx, rax", "pxor    xmm1, xmm1", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_10FDC"], ["mov~rcx,rax", "pxor~xmm1,xmm1", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 27, 0, 0, 5, 1, 1, 9, -1, 0.22408163265306122, ["mov     rax, [table+10h]", "mov     rdx, [table+28h]", "test    rax, rax", "movss   xmm2, dword ptr [rdx]", "js      loc_11110"], ["mov~rax,[table+0]", "mov~rdx,[table+0]", "test~rax,rax", "movss~xmm2,<TAG>", "js~FOO"]], [0, 0, 35, 0, 0, 2, 0, 0, 7, -1, 0.013877551020408163, ["mov     rax, [r14+8]", "mov     rbx, [rax]"], ["mov~rax,[r14+0]", "mov~rbx,<TAG>"]], [0, 0, 18, 0, 0, 4, 0, 0, 15, -1, 0.07102040816326531, ["movss   xmm4, dword ptr [rdx+0Ch]", "ucomiss xmm4, cs:dword_20E3C", "pxor    xmm4, xmm4", "jbe     loc_110D4"], ["movss~xmm4,[word ptr [rdx+0]", "ucomiss~xmm4,<TAG>", "pxor~xmm4,xmm4", "jbe~FOO"]], [0, 0, 50, 0, 1, 12, 0, 1, 0, 1, 0.0, ["push    r14", "push    r13", "mov     r13, entry", "push    r12", "push    rbp", "mov     rbp, table", "push    rbx", "mov     entry, [table+10h]", "mov     table, entry", "call    qword ptr [table+30h]", "cmp     rax, [table+10h]", "jnb     loc_1117D"], ["push~r14", "push~r13", "mov~r13,entry", "push~r12", "push~rbp", "mov~rbp,table", "push~rbx", "mov~entry,[table+0]", "mov~table,entry", "call~[word ptr [table+0]", "cmp~rax,[table+0]", "jnb~FOO"]], [1, 0, 30, 1, 0, 5, 1, 1, 7, -1, 0.21306122448979592, ["mov     rax, [table+18h]", "sub     rax, 1", "test    rax, rax", "mov     [table+18h], rax", "js      loc_11130"], ["mov~rax,[table+0]", "sub~rax,0", "test~rax,rax", "mov~[table+0],rax", "js~FOO"]], [0, 0, 36, 0, 0, 3, 1, 1, 3, -1, 0.07183673469387755, ["mov     rax, [bucket+8]", "test    rax, rax", "jz      loc_110C0"], ["mov~rax,[bucket+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 17, 0, 0, 2, 0, 0, 16, -1, 0.05918367346938776, ["ucomiss xmm2, xmm4", "jb      loc_110D4"], ["ucomiss~xmm2,xmm4", "jb~FOO"]], [0, 0, 28, 0, 0, 2, 0, 0, 8, -1, 0.10489795918367348, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [0, 0, 35, 0, 0, 1, 0, 1, 6, -1, 0.02938775510204082, ["jmp     short loc_10F2D"], ["jmp~FOO"]], [2, 0, 28, 0, 0, 8, 2, 1, 8, -1, 0.10489795918367348, ["mov     rdx, rax", "pxor    xmm0, xmm0", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0", "jmp     loc_10FBE"], ["mov~rdx,rax", "pxor~xmm0,xmm0", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 16, 0, 0, 4, 0, 0, 17, -1, 0.0489795918367347, ["addss   xmm2, cs:dword_20E34", "movss   xmm5, dword ptr [rdx+4]", "ucomiss xmm5, xmm2", "jbe     loc_110D4"], ["addss~xmm2,<TAG>", "movss~xmm5,[word ptr [rdx+0]", "ucomiss~xmm5,xmm2", "jbe~FOO"]], [0, 0, 47, 0, 0, 2, 0, 1, 2, -1, 0.037551020408163265, ["cmp     entry, rbx", "jz      loc_10F54"], ["cmp~entry,rbx", "jz~FOO"]], [0, 0, 37, 0, 0, 1, 0, 0, 4, -1, 0.01469387755102041, ["mov     rbx, [bucket]"], ["mov~rbx,<TAG>"]], [0, 0, 46, 0, 1, 5, 1, 2, 3, -1, 0.011428571428571429, ["mov     rsi, rbx", "mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_10F50"], ["mov~rsi,rbx", "mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 1, 13, -1, 0.09551020408163266, ["movss   xmm3, cs:dword_20E30", "jmp     loc_11070"], ["movss~xmm3,<TAG>", "jmp~FOO"]], [0, 0, 25, 0, 0, 2, 0, 0, 10, -1, 0.10857142857142857, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [0, 0, 15, 0, 0, 3, 0, 0, 18, -1, 0.03795918367346939, ["movss   xmm6, cs:dword_20E44", "ucomiss xmm6, xmm5", "jb      short loc_110D4"], ["movss~xmm6,<TAG>", "ucomiss~xmm6,xmm5", "jb~FOO"]], [0, 0, 14, 0, 0, 2, 0, 0, 19, -1, 0.027755102040816326, ["ucomiss xmm3, xmm2", "jbe     short loc_110D4"], ["ucomiss~xmm3,xmm2", "jbe~FOO"]], [0, 0, 12, 0, 0, 1, 0, 0, 14, -1, 0.028979591836734694, ["pxor    xmm4, xmm4"], ["pxor~xmm4,xmm4"]], [1, 0, 11, 0, 0, 3, 0, 1, 20, -1, 0.018367346938775512, ["cmp     byte ptr [rdx+10h], 0", "mulss   xmm1, xmm5", "jnz     short loc_11074"], ["cmp~[yte ptr [rdx+0],0", "mulss~xmm1,xmm5", "jnz~FOO"]], [0, 0, 11, 0, 0, 5, 0, 1, 15, -1, 0.04204081632653062, ["mulss   xmm4, xmm1", "mov     [table+28h], rax", "movss   xmm3, cs:dword_20E30", "ucomiss xmm4, xmm0", "ja      loc_11070"], ["mulss~xmm4,xmm1", "mov~[table+0],rax", "movss~xmm3,<TAG>", "ucomiss~xmm4,xmm0", "ja~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 21, -1, 0.00040816326530612246, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 14, -1, 0.11673469387755102, ["mulss   xmm1, xmm3"], ["mulss~xmm1,xmm3"]]], "func_feature": [6, 18, 34, 0, 51, 77, 1, 182, 0.06413, 7, 4], "succs": [[6, 15], [0], [0], [0], [16, 45], [41, 4], [], [38, 6], [25, 6], [17, 6], [13], [10, 14], [9, 28], [20, 21], [13], [21, 31], [29, 45], [1, 12], [18, 23], [18], [19, 23], [], [21, 5], [21], [21], [35, 12], [22], [26, 42], [1], [33, 47], [49, 7], [34, 36], [2, 3], [37, 47], [27], [1], [27], [43, 47], [32, 40], [32], [8, 39], [50], [22], [44, 47], [46, 47], [47], [48, 11], [24, 50], [50], [], [11]], "fname": "hash_delete", "n_num": 51}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[2, 0, 0, 3, 1, 15, 2, 1, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, p", "mov     rbx, table_size", "sub     rsp, 8", "mov     p, [p]; x", "call    hash_pjw", "xor     tmp, [p+8]", "xor     edx, edx", "add     rsp, 8", "div     table_size", "pop     table_size", "pop     p", "mov     rax, rdx", "retn"], ["push~rbp", "push~rbx", "mov~rbp,p", "mov~rbx,table_size", "sub~rsp,0", "mov~p,<TAG>", "call~FOO", "xor~tmp,[p+0]", "xor~edx,edx", "add~rsp,0", "div~,table_size", "pop~table_size", "pop~p", "mov~rax,rdx", "retn"]]], "func_feature": [1, 2, 1, 0, 1, 0, 0, 15, 0.0, 0, 3], "succs": [[]], "fname": "triple_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 1, 0, 5, 1, 0, 0, 0, 0.0, ["mov     rax, [p+8]", "xor     edx, edx", "div     table_size", "mov     rax, rdx", "retn"], ["mov~rax,[p+0]", "xor~edx,edx", "div~,table_size", "mov~rax,rdx", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 0, 1], "succs": [[]], "fname": "triple_hash_no_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 2, 0, 0, 3, 0, 1, 0, 0, 0.16666666666666666, ["mov     rcx, [b+10h]", "cmp     [a+10h], rcx", "jnz     short locret_111DC"], ["mov~rcx,[b+0]", "cmp~[a+0],rcx", "jnz~FOO"]], [0, 0, 3, 0, 0, 4, 1, 1, 0, 2, 0.0, ["xor     eax, eax", "mov     rdx, [b+8]", "cmp     [a+8], rdx", "jz      short loc_111E0"], ["xor~eax,eax", "mov~rdx,[b+0]", "cmp~[a+0],rdx", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn"], ["retn"]], [2, 0, 0, 2, 1, 6, 0, 1, 2, 0, 0.0, ["sub     rsp, 8", "mov     b, [b]; dest", "mov     a, [a]; source", "call    same_name", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 1, 3, 0, 4, 4, 0, 14, 0.04167, 0, 2], "succs": [[2, 3], [0, 2], [], []], "fname": "triple_compare", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 2, 0, 0, 3, 0, 1, 0, 0, 0.16666666666666666, ["mov     rcx, [b+10h]", "cmp     [a+10h], rcx", "jnz     short locret_1120C"], ["mov~rcx,[b+0]", "cmp~[a+0],rcx", "jnz~FOO"]], [0, 0, 3, 0, 0, 4, 1, 1, 0, 2, 0.0, ["xor     eax, eax", "mov     rdx, [b+8]", "cmp     [a+8], rdx", "jz      short loc_11210"], ["xor~eax,eax", "mov~rdx,[b+0]", "cmp~[a+0],rdx", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn"], ["retn"]], [2, 0, 0, 2, 1, 8, 1, 1, 2, 0, 0.0, ["sub     rsp, 8", "mov     b, [b]; s2", "mov     a, [a]; s1", "call    _strcmp", "test    eax, eax", "setz    al", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "test~eax,eax", "setz~al", "add~rsp,0", "retn"]]], "func_feature": [1, 2, 3, 0, 4, 4, 0, 16, 0.04167, 0, 2], "succs": [[2, 3], [0, 2], [], []], "fname": "triple_compare_ino_str", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 1, 0, 1, 7, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, a", "mov     a, [a]; ptr", "call    free", "mov     rdi, a; ptr", "pop     a", "jmp     free"], ["push~rbx", "mov~rbx,a", "mov~a,<TAG>", "call~FOO", "mov~rdi,a", "pop~a", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 0, 2, 0, 2, 1, 1, 7, 0.0, 0, 0], "succs": [[1], []], "fname": "triple_free", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 44, 0, 0, 2, 0, 1, 0, 0, 0.02487625874722649, ["fstp    st", "jmp     short loc_11A10"], ["fstp~<TAG>,<TAG>", "jmp~FOO"]], [1, 0, 67, 0, 0, 2, 1, 1, 10, 8, 0.02920720259429937, ["test    bpl, 8", "jz      loc_11A00"], ["test~bpl,0", "jz~FOO"]], [1, 0, 77, 1, 0, 1, 0, 0, 15, 13, 0.010048643113159242, ["add     edi, 30h ; '0'"], ["add~edi,0"]], [0, 0, 81, 0, 0, 2, 1, 1, 14, 12, 0.013792882744495649, ["test    edi, edi", "jnz     loc_11805"], ["test~edi,edi", "jnz~FOO"]], [2, 0, 84, 1, 0, 3, 0, 1, 14, 13, 0.00912058371735791, ["add     edi, 1", "cmp     edi, 0Ah", "jz      loc_12044"], ["add~edi,0", "cmp~edi,0", "jz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 16, -1, 0.0003626898788189111, ["mov     dword ptr [rsp+0D8h+exponent], 3", "jmp     loc_11A4F"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 25, 1, 0, 3, 0, 0, 15, -1, 0.03225806451612903, ["imul    power, r12", "cmp     rdi, power", "jbe     loc_11FFE"], ["imul~power,r12", "cmp~rdi,power", "jbe~FOO"]], [0, 0, 97, 0, 0, 7, 0, 0, 9, 12, 0.002560163850486431, ["fstp    st(2)", "fxch    st(1)", "fld     st(2)", "fmul    st, st(2)", "fxch    st(1)", "fucomi  st, st(1)", "jb      loc_11F38"], ["fstp~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fld~<TAG>,<TAG>", "fmul~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "jb~FOO"]], [0, 0, 99, 0, 0, 8, 0, 0, 8, 12, 0.002986857825567503, ["fstp    st(3)", "fxch    st(1)", "fxch    st(2)", "fld     st(2)", "fmul    st, st(2)", "fxch    st(1)", "fucomi  st, st(1)", "jb      loc_11F10"], ["fstp~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fld~<TAG>,<TAG>", "fmul~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "jb~FOO"]], [0, 0, 126, 4, 0, 13, 2, 0, 3, 12, 0.004181600955794504, ["mov     divisor, [rsp+0D8h+exponent]", "xor     edx, edx", "div     divisor", "mov     rcx, rax", "lea     rax, [rdx+rdx*4]", "xor     edx, edx", "mov     rsi, rcx", "add     rax, rax", "div     divisor", "add     rdx, rdx", "mov     edi, eax", "cmp     divisor, r2", "jbe     loc_11E20"], ["mov~divisor,[rsp+0]", "xor~edx,edx", "div~,divisor", "mov~rcx,rax", "lea~rax,<TAG>", "xor~edx,edx", "mov~rsi,rcx", "add~rax,rax", "div~,divisor", "add~rdx,rdx", "mov~edi,eax", "cmp~divisor,r2", "jbe~FOO"]], [0, 0, 212, 1, 0, 6, 2, 1, 2, 13, 0.0018561187916026627, ["xor     edx, edx", "mov     psuffix_0, rsi", "div     rcx", "test    rdx, rdx", "mov     r8, rax", "jnz     loc_11374"], ["xor~edx,edx", "mov~psuffix_0,rsi", "div~,rcx", "test~rdx,rdx", "mov~r8,rax", "jnz~FOO"]], [0, 0, 44, 0, 0, 2, 0, 0, 12, 7, 0.0009387267451783581, ["fstp    st", "nop     word ptr [rax+rax+00h]"], ["fstp~<TAG>,<TAG>", "nop~[ord ptr [rax+0]"]], [1, 0, 65, 0, 0, 3, 0, 1, 11, 8, 0.0037549069807134325, ["mov     rax, [rsp+0D8h+buf]", "cmp     byte ptr [rax+r15-1], 30h ; '0'", "jnz     loc_11A08"], ["mov~rax,[rsp+0]", "cmp~[yte ptr [rax+0],0", "jnz~FOO"]], [1, 0, 81, 0, 0, 10, 1, 0, 11, 13, 0.004266939750810719, ["fstp    st(1)", "fnstcw  [rsp+0D8h+var_7A]", "movzx   eax, [rsp+0D8h+var_7A]", "or      ah, 0Ch", "mov     [rsp+0D8h+var_7C], ax", "fld     st", "fldcw   [rsp+0D8h+var_7C]", "fistp   [rsp+0D8h+var_88]", "fldcw   [rsp+0D8h+var_7A]", "mov     rax, [rsp+0D8h+var_88]"], ["fstp~<TAG>,<TAG>", "fnstcw~[rsp+0]", "movzx~eax,[rsp+0]", "or~ah,0", "mov~[rsp+0],ax", "fld~<TAG>,<TAG>", "fldcw~[rsp+0]", "fistp~<TAG>,[rsp+0]", "fldcw~[rsp+0]", "mov~rax,[rsp+0]"]], [0, 0, 83, 0, 0, 4, 0, 0, 10, 14, 0.008043181430278205, ["fld     cs:dword_20E4C", "fxch    st(1)", "fucomi  st, st(1)", "jnb     loc_11DE0"], ["fld~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "jnb~FOO"]], [1, 0, 46, 0, 0, 2, 2, 0, 12, 9, 0.0032428742106161462, ["and     eax, 0FFFFFFF8h", "xor     edx, edx"], ["and~eax,0", "xor~edx,edx"]], [3, 0, 47, 3, 0, 14, 2, 0, 11, 7, 0.005739033964840417, ["mov     rax, [decimal_point]", "lea     rcx, [p_0+8]", "and     rcx, 0FFFFFFFFFFFFFFF8h", "mov     [p_0], rax", "mov     eax, r13d", "mov     rdx, [decimal_point+rax-8]", "mov     [p_0+rax-8], rdx", "mov     rax, p_0", "sub     rax, rcx", "sub     decimal_point, rax", "add     eax, r13d", "and     eax, 0FFFFFFF8h", "cmp     eax, 8", "jb      loc_11EBC"], ["mov~rax,<TAG>", "lea~rcx,[p_0+0]", "and~rcx,0", "mov~<TAG>,rax", "mov~eax,r13d", "mov~rdx,[decimal_point+0]", "mov~[p_0+0],rdx", "mov~rax,p_0", "sub~rax,rcx", "sub~decimal_point,rax", "add~eax,r13d", "and~eax,0", "cmp~eax,0", "jb~FOO"]], [2, 0, 81, 0, 0, 13, 2, 1, 11, 13, 0.004266939750810719, ["fnstcw  [rsp+0D8h+var_7A]", "movzx   eax, [rsp+0D8h+var_7A]", "fsubr   st(1), st", "fxch    st(1)", "mov     rdx, 8000000000000000h", "or      ah, 0Ch", "mov     [rsp+0D8h+var_7C], ax", "fldcw   [rsp+0D8h+var_7C]", "fistp   [rsp+0D8h+var_88]", "fldcw   [rsp+0D8h+var_7A]", "mov     rax, [rsp+0D8h+var_88]", "xor     rax, rdx", "jmp     loc_11C16"], ["fnstcw~[rsp+0]", "movzx~eax,[rsp+0]", "fsubr~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "mov~rdx,0", "or~ah,0", "mov~[rsp+0],ax", "fldcw~[rsp+0]", "fistp~<TAG>,[rsp+0]", "fldcw~[rsp+0]", "mov~rax,[rsp+0]", "xor~rax,rdx", "jmp~FOO"]], [0, 0, 124, 0, 0, 3, 2, 0, 4, 11, 0.0033495477043864142, ["xor     ecx, ecx", "test    r2, r2", "setnz   cl"], ["xor~ecx,ecx", "test~r2,r2", "setnz~cl"]], [0, 0, 95, 0, 0, 7, 0, 0, 10, 12, 0.002048131080389145, ["fstp    st(2)", "fxch    st(1)", "fld     st(2)", "fmul    st, st(2)", "fxch    st(1)", "fucomi  st, st(1)", "jb      loc_11F5D"], ["fstp~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fld~<TAG>,<TAG>", "fmul~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "jb~FOO"]], [0, 0, 59, 0, 0, 3, 0, 1, 7, 8, 0.0038829151732377542, ["fld     cs:tbyte_20EB0", "fucomip st, st(1)", "ja      loc_11B50"], ["fld~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "ja~FOO"]], [1, 0, 60, 0, 0, 2, 0, 1, 6, 8, 0.013120839733742961, ["cmp     dword ptr [rsp+0D8h+inexact_style], 1", "jz      short loc_119B5"], ["cmp~[word ptr [rsp+0],0", "jz~FOO"]], [13, 1, 217, 5, 3, 61, 5, 4, 0, 14, 0.0, ["push    r15", "push    r14", "mov     eax, edx", "push    r13", "push    r12", "and     eax, 3", "push    rbp", "push    rbx", "mov     ebp, edx", "sub     rsp, 0A8h", "mov     dword ptr [rsp+0D8h+inexact_style], eax", "mov     eax, edx", "mov     [rsp+0D8h+buf], buf_0", "and     eax, 20h", "mov     qword ptr [rsp+0D8h+damt.value], from_block_size_0", "mov     [rsp+0D8h+to_block_size], to_block_size_0", "mov     rbx, fs:28h", "mov     [rsp+0D8h+var_40], rbx", "xor     ebx, ebx", "cmp     eax, 1", "mov     [rsp+0D8h+exponent], n_0", "mov     [rsp+0D8h+var_80], eax", "sbb     r14d, r14d", "and     r14d, 0FFFFFFE8h", "add     r14d, 400h", "cmp     eax, 1", "sbb     r12, r12", "mov     ebx, r14d", "call    _localeconv", "mov     r15, [l_0]", "and     r12, 0FFFFFFFFFFFFFFE8h", "mov     [rsp+0D8h+l], l_0", "add     r12, 400h", "mov     rdi, r15; s", "call    _strlen", "mov     rdx, [rsp+0D8h+l]", "mov     r13, rax", "sub     pointlen, 1", "cmp     rax, 10h", "lea     rax, asc_20D7B+1; \".\"", "mov     esi, 1", "cmovnb  pointlen, rsi", "cmovnb  r15, rax", "mov     rax, [rdx+8]", "mov     rcx, [rdx+10h]", "mov     rdi, rax; s", "mov     [rsp+0D8h+grouping], rcx", "mov     [rsp+0D8h+l], rax", "call    _strlen", "cmp     rax, 11h", "lea     rax, a8+6; \"\"", "mov     rsi, [rsp+0D8h+to_block_size]", "mov     rcx, rax", "cmovb   rcx, [rsp+0D8h+l]", "mov     rax, [rsp+0D8h+buf]", "add     rax, 287h", "mov     [rsp+0D8h+l], rcx", "mov     thousands_sep_0, qword ptr [rsp+0D8h+damt.value]", "mov     [rsp+0D8h+psuffix], rax", "cmp     rsi, rcx", "ja      loc_115C8"], ["push~r15", "push~r14", "mov~eax,edx", "push~r13", "push~r12", "and~eax,0", "push~rbp", "push~rbx", "mov~ebp,edx", "sub~rsp,0", "mov~[word ptr [rsp+0],eax", "mov~eax,edx", "mov~[rsp+0],buf_0", "and~eax,<STR>", "mov~[word ptr [rsp+0],from_block_size_0", "mov~[rsp+0],to_block_size_0", "mov~rbx,<TAG>", "mov~[rsp+0],rbx", "xor~ebx,ebx", "cmp~eax,0", "mov~[rsp+0],n_0", "mov~[rsp+0],eax", "sbb~r14d,r14d", "and~r14d,0", "add~r14d,0", "cmp~eax,0", "sbb~r12,r12", "mov~ebx,r14d", "call~FOO", "mov~r15,<TAG>", "and~r12,0", "mov~[rsp+0],l_0", "add~r12,0", "mov~rdi,r15", "call~FOO", "mov~rdx,[rsp+0]", "mov~r13,rax", "sub~pointlen,0", "cmp~rax,0", "lea~rax,<TAG>", "mov~esi,0", "cmovnb~pointlen,rsi", "cmovnb~r15,rax", "mov~rax,[rdx+0]", "mov~rcx,[rdx+0]", "mov~rdi,rax", "mov~[rsp+0],rcx", "mov~[rsp+0],rax", "call~FOO", "cmp~rax,0", "lea~rax,<TAG>", "mov~rsi,[rsp+0]", "mov~rcx,rax", "cmovb~rcx,[rsp+0]", "mov~rax,[rsp+0]", "add~rax,0", "mov~[rsp+0],rcx", "mov~thousands_sep_0,[word ptr [rsp+0]", "mov~[rsp+0],rax", "cmp~rsi,rcx", "ja~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 18, -1, 0.0003626898788189111, ["mov     dword ptr [rsp+0D8h+exponent], 5", "jmp     loc_11A4F"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 21, 1, 0, 3, 0, 0, 17, -1, 0.016299709848096946, ["imul    power, r12", "cmp     rdi, power", "jbe     loc_12018"], ["imul~power,r12", "cmp~rdi,power", "jbe~FOO"]], [0, 0, 80, 0, 0, 4, 1, 0, 12, 12, 0.011307390339648405, ["mov     qword ptr [rsp+0D8h+damt.value], rax", "test    rax, rax", "fild    qword ptr [rsp+0D8h+damt.value]", "jns     short loc_11C2A"], ["mov~[word ptr [rsp+0],rax", "test~rax,rax", "fild~<TAG>,[word ptr [rsp+0]", "jns~FOO"]], [0, 0, 79, 0, 0, 1, 0, 0, 13, 12, 0.0, ["fadd    cs:dword_20E48"], ["fadd~<TAG>,<TAG>"]], [1, 0, 76, 1, 0, 8, 0, 0, 16, 12, 0.012907492746202424, ["mov     rax, [rsp+0D8h+buf]", "lea     r8, [rax+286h]", "mov     [rax+286h], dil", "mov     eax, r13d", "sub     p_0, r13", "cmp     r13d, 8", "mov     r14, r8", "jnb     loc_12056"], ["mov~rax,[rsp+0]", "lea~r8,[rax+0]", "mov~[rax+0],dil", "mov~eax,r13d", "sub~p_0,r13", "cmp~r13d,0", "mov~r14,r8", "jnb~FOO"]], [1, 0, 77, 0, 0, 2, 0, 1, 16, 13, 0.000682710360129715, ["mov     edi, 30h ; '0'", "jmp     loc_11808"], ["mov~edi,0", "jmp~FOO"]], [1, 0, 124, 1, 0, 4, 0, 1, 4, 11, 0.0033495477043864142, ["setb    cl", "movzx   ecx, cl", "add     ecx, 2", "jmp     use_integer_arithmetic"], ["setb~cl", "movzx~ecx,cl", "add~ecx,0", "jmp~FOO"]], [2, 0, 123, 0, 0, 5, 1, 1, 4, 10, 0.021270694657791432, ["mov     r11d, ebp", "mov     r14, [rsp+0D8h+psuffix]", "mov     dword ptr [rsp+0D8h+exponent], 0FFFFFFFFh", "and     r11d, 10h", "jz      loc_11850"], ["mov~r11d,ebp", "mov~r14,[rsp+0]", "mov~[word ptr [rsp+0],0", "and~r11d,0", "jz~FOO"]], [0, 0, 124, 0, 0, 3, 2, 1, 3, 11, 0.00682710360129715, ["xor     ecx, ecx", "xor     edi, edi", "jmp     use_integer_arithmetic"], ["xor~ecx,ecx", "xor~edi,edi", "jmp~FOO"]], [0, 0, 93, 0, 0, 7, 0, 0, 11, 12, 0.0014507595152756445, ["fstp    st(2)", "fxch    st(1)", "fld     st(2)", "fmul    st, st(2)", "fxch    st(1)", "fucomi  st, st(1)", "jb      loc_11F7D"], ["fstp~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fld~<TAG>,<TAG>", "fmul~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "jb~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 19, -1, 0.00018134493940945556, ["mov     dword ptr [rsp+0D8h+exponent], 6", "jmp     loc_11A4F"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 19, 1, 0, 3, 0, 0, 18, -1, 0.00819252432155658, ["imul    power, r12", "cmp     rdi, power", "jbe     loc_12025"], ["imul~power,r12", "cmp~rdi,power", "jbe~FOO"]], [0, 0, 78, 0, 0, 3, 1, 1, 13, 11, 0.013270182625021335, ["mov     edx, dword ptr [rsp+0D8h+inexact_style]", "test    edx, edx", "jnz     loc_11488"], ["mov~edx,[word ptr [rsp+0]", "test~edx,edx", "jnz~FOO"]], [1, 0, 71, 0, 0, 2, 1, 1, 17, 12, 0.004522956135859362, ["test    r13b, 4", "jnz     loc_12198"], ["test~r13b,0", "jnz~FOO"]], [0, 0, 122, 0, 0, 2, 0, 0, 5, 11, 0.011947431302270013, ["cmp     amt, r12", "jb      loc_11E30"], ["cmp~amt,r12", "jb~FOO"]], [1, 0, 66, 0, 0, 2, 0, 1, 6, 10, 0.0014080901177675371, ["mov     dword ptr [rsp+0D8h+exponent], 0", "jmp     loc_11850"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 69, 0, 0, 2, 1, 1, 18, 11, 0.0030188598736985836, ["test    eax, eax", "jz      short loc_1184B"], ["test~eax,eax", "jz~FOO"]], [0, 0, 74, 0, 0, 1, 0, 1, 15, 10, 0.002261478067929681, ["jz      loc_11490"], ["jz~FOO"]], [0, 0, 76, 0, 0, 3, 0, 0, 14, 11, 0.004480286738351255, ["fxch    st(1)", "fucomi  st, st(1)", "jp      short loc_11C46"], ["fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "jp~FOO"]], [0, 1, 33, 0, 0, 2, 1, 1, 10, -1, 0.1295442908346134, ["test    bpl, 80h", "jz      loc_11AC4"], ["test~bpl,<STR>", "jz~FOO"]], [1, 0, 42, 0, 0, 2, 1, 1, 9, 5, 0.06586021505376344, ["test    bpl, 4", "jz      loc_11A3A"], ["test~bpl,0", "jz~FOO"]], [0, 0, 34, 1, 1, 12, 0, 2, 13, -1, 0.003626898788189111, ["mov     rax, r15", "mov     ebp, r14d", "mov     r15, r12", "mov     opts, rcx", "mov     rsi, [rsp+0D8h+inexact_style]; src", "mov     rdx, r15; n", "sub     r14, r15", "mov     r12, rax", "mov     rdi, r14; dest", "mov     r13, r14", "call    _memcpy", "jmp     loc_11A3A"], ["mov~rax,r15", "mov~ebp,r14d", "mov~r15,r12", "mov~opts,rcx", "mov~rsi,[rsp+0]", "mov~rdx,r15", "sub~r14,r15", "mov~r12,rax", "mov~rdi,r14", "mov~r13,r14", "call~FOO", "jmp~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 14, 0, 0.0007253797576378222, ["mov     r12, r15", "mov     r13, rax", "mov     ebp, r14d", "jmp     loc_11A3A"], ["mov~r12,r15", "mov~r13,rax", "mov~ebp,r14d", "jmp~FOO"]], [1, 0, 42, 0, 0, 2, 1, 1, 9, 5, 0.09005376344086022, ["test    bpl, 4", "jnz     loc_118C1"], ["test~bpl,0", "jnz~FOO"]], [3, 0, 44, 5, 0, 12, 1, 1, 8, 6, 0.06658559481140126, ["mov     rax, amt", "sub     p_0, 1", "mul     rcx", "shr     rdx, 3", "lea     rax, [rdx+rdx*4]", "add     rax, rax", "sub     amt, rax", "add     esi, 30h ; '0'", "test    rdx, rdx", "mov     [p_0+0], sil", "mov     rsi, rdx", "jnz     short loc_11890"], ["mov~rax,amt", "sub~p_0,0", "mul~,rcx", "shr~rdx,0", "lea~rax,<TAG>", "add~rax,rax", "sub~amt,rax", "add~esi,0", "test~rdx,rdx", "mov~[p_0+0],sil", "mov~rsi,rdx", "jnz~FOO"]], [1, 0, 44, 0, 0, 3, 0, 0, 7, 7, 0.06726830517153098, ["mov     r13, integerlim", "mov     rcx, 0CCCCCCCCCCCCCCCDh", "nop     dword ptr [rax]"], ["mov~r13,integerlim", "mov~rcx,0", "nop~<TAG>"]], [0, 0, 45, 0, 0, 3, 0, 1, 10, 8, 0.0085978835978836, ["fld     cs:flt_20EA4", "fmul    st(1), st", "jmp     loc_11582"], ["fld~<TAG>,<TAG>", "fmul~<TAG>,<TAG>", "jmp~FOO"]], [3, 0, 69, 1, 2, 19, 1, 3, 9, 9, 0.019798600443761735, ["sub     rsp, 10h", "lea     rcx, a1lf; \"%.1Lf\"", "mov     esi, 1", "fld     st", "fstp    [rsp+0E8h+var_E8]", "mov     base, [rsp+0E8h+buf]", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "xor     eax, eax", "mov     rdi, r14", "fstp    [rsp+0E8h+damt.value]", "call    ___sprintf_chk", "mov     rdi, r14; s", "call    _strlen", "pop     rcx", "pop     rsi", "cmp     rax, r13", "mov     decimal_point, rax", "fld     [rsp+0D8h+damt.value]", "ja      loc_11E58"], ["sub~rsp,0", "lea~rcx,<TAG>", "mov~esi,0", "fld~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "mov~base,[rsp+0]", "mov~rdx,0", "xor~eax,eax", "mov~rdi,r14", "fstp~<TAG>,[rsp+0]", "call~FOO", "mov~rdi,r14", "call~FOO", "pop~rcx", "pop~rsi", "cmp~rax,r13", "mov~decimal_point,rax", "fld~<TAG>,[rsp+0]", "ja~FOO"]], [0, 0, 73, 0, 0, 2, 0, 1, 16, 12, 6.400409626216078e-05, ["fstp    st(1)", "jmp     short loc_11C50"], ["fstp~<TAG>,<TAG>", "jmp~FOO"]], [1, 0, 68, 0, 0, 4, 1, 1, 19, 11, 0.0011734084314729476, ["movzx   edx, byte ptr [decimal_point]", "test    al, 2", "mov     [p_0], dl", "jnz     loc_121C7"], ["movzx~edx,<TAG>", "test~al,0", "mov~<TAG>,dl", "jnz~FOO"]], [1, 0, 91, 0, 0, 8, 0, 0, 12, 12, 0.0007680491551459293, ["fstp    st(2)", "fxch    st(1)", "fxch    st(2)", "fmul    st, st(1)", "fxch    st(2)", "mov     dword ptr [rsp+0D8h+exponent], 8", "fucomi  st, st(2)", "jb      loc_11F9D"], ["fstp~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fmul~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "mov~[word ptr [rsp+0],0", "fucomi~<TAG>,<TAG>", "jb~FOO"]], [0, 0, 73, 0, 0, 2, 0, 0, 15, 12, 0.002304147465437788, ["fstp    st(1)", "nop     dword ptr [rax+rax+00000000h]"], ["fstp~<TAG>,<TAG>", "nop~[word ptr [rax+0]"]], [1, 0, 32, 0, 0, 2, 0, 1, 11, -1, 0.11446065881549754, ["cmp     dword ptr [rsp+0D8h+exponent], 0FFFFFFFFh", "jz      loc_11D08"], ["cmp~[word ptr [rsp+0],0", "jz~FOO"]], [0, 0, 89, 0, 0, 1, 0, 0, 13, 11, 0.0009493940945553849, ["fstp    st(1)"], ["fstp~<TAG>,<TAG>"]], [0, 0, 66, 0, 0, 3, 2, 0, 17, 10, 0.021121351766513058, ["xor     ecx, ecx", "xor     edi, edi", "nop"], ["xor~ecx,ecx", "xor~edi,edi", "nop"]], [3, 0, 70, 3, 0, 15, 2, 0, 17, 11, 0.007744495647721454, ["mov     rax, [decimal_point]", "mov     rdi, decimal_point", "mov     [p_0], rax", "mov     eax, r13d", "mov     rdx, [decimal_point+rax-8]", "mov     [p_0+rax-8], rdx", "lea     rdx, [p_0+8]", "mov     rax, p_0", "and     rdx, 0FFFFFFFFFFFFFFF8h", "sub     rax, rdx", "sub     rdi, rax", "add     eax, r13d", "and     eax, 0FFFFFFF8h", "cmp     eax, 8", "jb      loc_1184B"], ["mov~rax,<TAG>", "mov~rdi,decimal_point", "mov~<TAG>,rax", "mov~eax,r13d", "mov~rdx,[decimal_point+0]", "mov~[p_0+0],rdx", "lea~rdx,[p_0+0]", "mov~rax,p_0", "and~rdx,0", "sub~rax,rdx", "sub~rdi,rax", "add~eax,r13d", "and~eax,0", "cmp~eax,0", "jb~FOO"]], [0, 0, 67, 0, 0, 1, 0, 1, 20, 11, 0.002858849633043182, ["jmp     loc_1184B"], ["jmp~FOO"]], [0, 0, 67, 0, 0, 2, 0, 1, 16, 11, 0.0038189110769755934, ["mov     r14, [rsp+0D8h+psuffix]", "jmp     loc_1184B"], ["mov~r14,[rsp+0]", "jmp~FOO"]], [0, 0, 67, 0, 0, 5, 0, 1, 18, 11, 0.0007147124082607954, ["mov     edx, [decimal_point]", "mov     [p_0], edx", "mov     edx, [decimal_point+rax-4]", "mov     [p_0+rax-4], edx", "jmp     loc_1184B"], ["mov~edx,<TAG>", "mov~<TAG>,edx", "mov~edx,[decimal_point+0]", "mov~[p_0+0],edx", "jmp~FOO"]], [0, 0, 67, 0, 0, 3, 0, 1, 20, 11, 0.0, ["movzx   edx, word ptr [decimal_point+rax-2]", "mov     [p_0+rax-2], dx", "jmp     loc_1184B"], ["movzx~edx,[ord ptr [decimal_point+0]", "mov~[p_0+0],dx", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 17, -1, 0.00020267963816350914, ["mov     [rsp+0D8h+psuffix], psuffix_0", "jmp     loc_11AC4"], ["mov~[rsp+0],psuffix_0", "jmp~FOO"]], [0, 0, 7, 0, 0, 6, 1, 1, 16, -1, 0.013334186721283496, ["movsxd  r14, dword ptr [rsp+0D8h+exponent]", "lea     rcx, power_letter", "test    eax, eax", "movzx   ecx, byte ptr [rcx+r14]", "mov     [rdi], cl", "jz      loc_11E4B"], ["movsxd~r14,[word ptr [rsp+0]", "lea~rcx,<TAG>", "test~eax,eax", "movzx~ecx,<TAG>", "mov~<TAG>,cl", "jz~FOO"]], [1, 0, 5, 0, 0, 3, 1, 1, 17, -1, 8.533879501621438e-05, ["test    eax, eax", "mov     byte ptr [rdi], 6Bh ; 'k'", "jnz     loc_11AB8"], ["test~eax,eax", "mov~<TAG>,0", "jnz~FOO"]], [1, 0, 120, 3, 0, 17, 2, 1, 6, 15, 0.012672811059907835, ["mov     rax, amt", "xor     edx, edx", "div     r12", "mov     r8, rax", "lea     eax, [rdx+rdx*4]", "xor     edx, edx", "mov     amt, r8", "lea     eax, [rdi+rax*2]", "div     ebx", "mov     r10d, eax", "mov     eax, ecx", "sar     eax, 1", "mov     edi, r10d", "lea     eax, [rax+rdx*2]", "add     ecx, eax", "cmp     ebx, eax", "ja      loc_11EA0"], ["mov~rax,amt", "xor~edx,edx", "div~,r12", "mov~r8,rax", "lea~eax,<TAG>", "xor~edx,edx", "mov~amt,r8", "lea~eax,<TAG>", "div~,ebx", "mov~r10d,eax", "mov~eax,ecx", "sar~eax,0", "mov~edi,r10d", "lea~eax,<TAG>", "add~ecx,eax", "cmp~ebx,eax", "ja~FOO"]], [0, 0, 80, 0, 0, 2, 1, 1, 16, 12, 0.0003413551800648575, ["xor     ecx, ecx", "jmp     short loc_11FDD"], ["xor~ecx,ecx", "jmp~FOO"]], [2, 0, 82, 1, 0, 3, 0, 1, 15, 12, 0.004416282642089094, ["add     rsi, 1", "cmp     amt, 0Ah", "jz      loc_12140"], ["add~rsi,0", "cmp~amt,0", "jz~FOO"]], [1, 0, 65, 0, 0, 2, 0, 1, 5, 9, 0.0905657962109575, ["cmp     dword ptr [rsp+0D8h+inexact_style], 1", "jz      loc_11D80"], ["cmp~[word ptr [rsp+0],0", "jz~FOO"]], [0, 0, 66, 0, 0, 3, 1, 1, 16, 10, 0.009856630824372761, ["mov     r14, [rsp+0D8h+psuffix]", "xor     edi, edi", "jmp     loc_11850"], ["mov~r14,[rsp+0]", "xor~edi,edi", "jmp~FOO"]], [0, 0, 66, 0, 0, 2, 0, 1, 11, 10, 0.042242703533026116, ["mov     r14, [rsp+0D8h+psuffix]", "jmp     loc_11850"], ["mov~r14,[rsp+0]", "jmp~FOO"]], [1, 0, 16, 0, 0, 5, 2, 1, 12, -1, 0.05677163338453661, ["mov     ebx, dword ptr [rsp+0D8h+exponent]", "mov     eax, ebp", "and     eax, 100h", "or      ebx, eax", "jz      short loc_11AC4"], ["mov~ebx,[word ptr [rsp+0]", "mov~eax,ebp", "and~eax,0", "or~ebx,eax", "jz~FOO"]], [1, 0, 17, 2, 0, 7, 0, 1, 19, -1, 0.00018134493940945556, ["imul    rax, r12", "cmp     rdi, power", "setnbe  al", "movzx   eax, al", "add     eax, 7", "mov     dword ptr [rsp+0D8h+exponent], eax", "jmp     loc_11A4F"], ["imul~rax,r12", "cmp~rdi,power", "setnbe~al", "movzx~eax,al", "add~eax,0", "mov~[word ptr [rsp+0],eax", "jmp~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 13, -1, 0.0003626898788189111, ["mov     dword ptr [rsp+0D8h+exponent], 0", "jmp     loc_11A4F"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 14, -1, 0.0003626898788189111, ["mov     dword ptr [rsp+0D8h+exponent], 1", "jmp     loc_11A4F"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 15, -1, 0.0003626898788189111, ["mov     dword ptr [rsp+0D8h+exponent], 2", "jmp     loc_11A4F"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 17, -1, 0.0003626898788189111, ["mov     dword ptr [rsp+0D8h+exponent], 4", "jmp     loc_11A4F"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 72, 1, 0, 5, 1, 0, 16, 11, 0.004650964328383684, ["add     rax, 1", "mov     qword ptr [rsp+0D8h+damt.value], rax", "test    rax, rax", "fild    qword ptr [rsp+0D8h+damt.value]", "jns     loc_1148C"], ["add~rax,0", "mov~[word ptr [rsp+0],rax", "test~rax,rax", "fild~<TAG>,[word ptr [rsp+0]", "jns~FOO"]], [1, 0, 15, 0, 0, 2, 1, 1, 13, -1, 0.05171530977982591, ["and     ebp, 40h", "jnz     loc_11B30"], ["and~ebp,0", "jnz~FOO"]], [0, 0, 62, 0, 0, 3, 1, 1, 6, 8, 0.06449479433350401, ["mov     r10d, dword ptr [rsp+0D8h+inexact_style]", "test    r10d, r10d", "jnz     short loc_11880"], ["mov~r10d,[word ptr [rsp+0]", "test~r10d,r10d", "jnz~FOO"]], [0, 0, 103, 0, 0, 4, 1, 1, 16, 14, 0.0037975763782215396, ["test    ecx, ecx", "setnz   cl", "movzx   ecx, cl", "jmp     loc_11740"], ["test~ecx,ecx", "setnz~cl", "movzx~ecx,cl", "jmp~FOO"]], [1, 0, 105, 3, 0, 17, 2, 0, 15, 15, 0.006379074927462025, ["mov     r2, r8", "xor     edx, edx", "div     r12", "mov     r8, rax", "lea     eax, [rdx+rdx*4]", "xor     edx, edx", "mov     rsi, r8", "lea     eax, [r10+rax*2]", "div     ebx", "mov     r10d, eax", "mov     eax, ecx", "sar     eax, 1", "mov     edi, r10d", "lea     eax, [rax+rdx*2]", "add     ecx, eax", "cmp     eax, ebx", "jb      loc_11F70"], ["mov~r2,r8", "xor~edx,edx", "div~,r12", "mov~r8,rax", "lea~eax,<TAG>", "xor~edx,edx", "mov~rsi,r8", "lea~eax,<TAG>", "div~,ebx", "mov~r10d,eax", "mov~eax,ecx", "sar~eax,0", "mov~edi,r10d", "lea~eax,<TAG>", "add~ecx,eax", "cmp~eax,ebx", "jb~FOO"]], [0, 0, 61, 1, 0, 3, 1, 1, 7, 8, 0.0003413551800648575, ["add     ecx, edi", "test    ecx, ecx", "jle     short loc_11880"], ["add~ecx,edi", "test~ecx,ecx", "jle~FOO"]], [0, 0, 13, 0, 0, 3, 1, 1, 14, -1, 0.043650793650793655, ["mov     ebx, dword ptr [rsp+0D8h+exponent]", "test    ebx, ebx", "jz      loc_121E2"], ["mov~ebx,[word ptr [rsp+0]", "test~ebx,ebx", "jz~FOO"]], [0, 1, 14, 0, 0, 5, 0, 1, 14, -1, 0.0, ["mov     rdi, [rsp+0D8h+buf]", "lea     rbx, [rdi+288h]", "mov     byte ptr [rdi+287h], 20h ; ' '", "mov     [rsp+0D8h+psuffix], rbx", "jmp     loc_11A67"], ["mov~rdi,[rsp+0]", "lea~rbx,[rdi+0]", "mov~[yte ptr [rdi+0],<STR>", "mov~[rsp+0],rbx", "jmp~FOO"]], [0, 0, 70, 0, 0, 3, 0, 1, 17, 10, 0.0022401433691756276, ["fadd    cs:dword_20E48", "fxch    st(1)", "jmp     loc_11490"], ["fadd~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "jmp~FOO"]], [1, 0, 118, 1, 0, 4, 0, 0, 7, 14, 0.00736047107014849, ["cmp     ebx, ecx", "setb    cl", "movzx   ecx, cl", "add     ecx, 2"], ["cmp~ebx,ecx", "setb~cl", "movzx~ecx,cl", "add~ecx,0"]], [1, 0, 60, 1, 0, 3, 1, 1, 7, 8, 0.023094811401263016, ["add     amt, 1", "test    r11d, r11d", "jz      short loc_11880"], ["add~amt,0", "test~r11d,r11d", "jz~FOO"]], [2, 0, 62, 2, 0, 9, 1, 1, 6, 9, 0.024556238265915686, ["mov     rax, amt", "movsxd  rounding, ecx", "and     eax, 1", "add     rax, rounding", "setnz   al", "movzx   eax, al", "add     edi, eax", "cmp     edi, 5", "jg      loc_1186B"], ["mov~rax,amt", "movsxd~rounding,ecx", "and~eax,0", "add~rax,rounding", "setnz~al", "movzx~eax,al", "add~edi,eax", "cmp~edi,0", "jg~FOO"]], [0, 0, 23, 1, 0, 3, 0, 0, 16, -1, 0.024321556579621095, ["imul    power, r12", "cmp     rdi, power", "jbe     loc_1200B"], ["imul~power,r12", "cmp~rdi,power", "jbe~FOO"]], [0, 0, 59, 0, 0, 2, 0, 1, 8, 8, 0.021398702850315754, ["cmp     amt, r12", "jz      loc_11EAD"], ["cmp~amt,r12", "jz~FOO"]], [0, 0, 45, 0, 0, 1, 0, 0, 9, 8, 6.400409626216078e-05, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [0, 0, 70, 0, 0, 2, 0, 1, 10, 10, 0.012843488649940263, ["fld     st", "jmp     short loc_11490"], ["fld~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 85, 0, 0, 3, 0, 1, 9, 11, 0.020310633213859022, ["fld     cs:tbyte_20EB0", "fucomip st, st(1)", "ja      loc_11BE0"], ["fld~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "ja~FOO"]], [1, 0, 4, 0, 0, 3, 0, 1, 18, -1, 0.0, ["lea     psuffix_0, [rdi+2]", "mov     byte ptr [rdi+1], 69h ; 'i'", "jmp     loc_11AB8"], ["lea~psuffix_0,[rdi+0]", "mov~[yte ptr [rdi+0],0", "jmp~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 17, -1, 0.004469619388974228, ["mov     r8d, [rsp+0D8h+var_80]", "test    r8d, r8d", "jnz     loc_11C78"], ["mov~r8d,[rsp+0]", "test~r8d,r8d", "jnz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 16, -1, 0.004405615292712067, ["mov     r9d, [rsp+0D8h+var_80]", "test    r9d, r9d", "jz      loc_11E40"], ["mov~r9d,[rsp+0]", "test~r9d,r9d", "jz~FOO"]], [1, 0, 10, 0, 0, 4, 0, 1, 15, -1, 0.026241679467485922, ["mov     rdi, [rsp+0D8h+psuffix]", "cmp     ebx, 1", "lea     rdx, [rdi+1]", "jnz     short loc_11A8F"], ["mov~rdi,[rsp+0]", "cmp~ebx,0", "lea~rdx,[rdi+0]", "jnz~FOO"]], [0, 0, 70, 0, 0, 2, 0, 1, 14, 10, 0.00896057347670251, ["fxch    st(1)", "jmp     short loc_11490"], ["fxch~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 45, 0, 0, 1, 0, 1, 7, 8, 0.00048003072196620584, ["jmp     loc_11880"], ["jmp~FOO"]], [0, 0, 70, 0, 0, 2, 0, 0, 17, 10, 0.0022401433691756276, ["fxch    st(1)", "xchg    ax, ax"], ["fxch~<TAG>,<TAG>", "xchg~ax,ax"]], [1, 0, 69, 0, 0, 2, 2, 0, 18, 13, 0.002304147465437788, ["and     eax, 0FFFFFFF8h", "xor     ecx, ecx"], ["and~eax,0", "xor~ecx,ecx"]], [1, 0, 58, 0, 0, 13, 1, 1, 15, 12, 0.007829834442737669, ["fstp    st(2)", "fxch    st(1)", "fnstcw  [rsp+0D8h+var_7A]", "movzx   eax, [rsp+0D8h+var_7A]", "or      ah, 0Ch", "mov     [rsp+0D8h+var_7C], ax", "fld     st", "fldcw   [rsp+0D8h+var_7C]", "fistp   [rsp+0D8h+var_88]", "fldcw   [rsp+0D8h+var_7A]", "fxch    st(1)", "mov     rax, [rsp+0D8h+var_88]", "jmp     loc_11530"], ["fstp~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fnstcw~[rsp+0]", "movzx~eax,[rsp+0]", "or~ah,0", "mov~[rsp+0],ax", "fld~<TAG>,<TAG>", "fldcw~[rsp+0]", "fistp~<TAG>,[rsp+0]", "fldcw~[rsp+0]", "fxch~<TAG>,<TAG>", "mov~rax,[rsp+0]", "jmp~FOO"]], [0, 0, 60, 0, 0, 4, 0, 0, 14, 13, 0.016641065028161803, ["fld     cs:dword_20E4C", "fxch    st(2)", "fucomi  st, st(2)", "jb      loc_11E68"], ["fld~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "jb~FOO"]], [1, 0, 88, 0, 0, 9, 2, 1, 8, 10, 0.039426523297491044, ["mov     ecx, [rsp+0D8h+var_80]", "xor     eax, eax", "lea     base, [r13+1]", "fdivrp  st(1), st", "test    ecx, ecx", "setz    al", "cmp     dword ptr [rsp+0D8h+inexact_style], 1", "lea     r13, [rbx+rax+1]", "jz      loc_11C88"], ["mov~ecx,[rsp+0]", "xor~eax,eax", "lea~base,[r13+0]", "fdivrp~<TAG>,<TAG>", "test~ecx,ecx", "setz~al", "cmp~[word ptr [rsp+0],0", "lea~r13,[rbx+0]", "jz~FOO"]], [1, 0, 69, 1, 0, 6, 0, 0, 19, 12, 0.0026028332479945382, ["mov     r8d, ecx", "add     ecx, 8", "mov     r9, [rdi+r8]", "cmp     ecx, eax", "mov     [rdx+r8], r9", "jb      short loc_12091"], ["mov~r8d,ecx", "add~ecx,0", "mov~r9,<TAG>", "cmp~ecx,eax", "mov~<TAG>,r9", "jb~FOO"]], [1, 0, 115, 3, 0, 17, 2, 1, 9, 15, 0.00736047107014849, ["mov     r2, r8", "xor     edx, edx", "div     r12", "mov     r8, rax", "lea     eax, [rdx+rdx*4]", "xor     edx, edx", "mov     rsi, r8", "lea     eax, [r10+rax*2]", "div     ebx", "mov     r10d, eax", "mov     eax, ecx", "sar     eax, 1", "mov     edi, r10d", "lea     eax, [rax+rdx*2]", "add     ecx, eax", "cmp     ebx, eax", "ja      loc_11F28"], ["mov~r2,r8", "xor~edx,edx", "div~,r12", "mov~r8,rax", "lea~eax,<TAG>", "xor~edx,edx", "mov~rsi,r8", "lea~eax,<TAG>", "div~,ebx", "mov~r10d,eax", "mov~eax,ecx", "sar~eax,0", "mov~edi,r10d", "lea~eax,<TAG>", "add~ecx,eax", "cmp~ebx,eax", "ja~FOO"]], [0, 0, 117, 0, 0, 2, 0, 1, 8, 13, 0.01945724526369688, ["cmp     r12, r8", "ja      loc_120B4"], ["cmp~r12,r8", "ja~FOO"]], [0, 0, 118, 0, 0, 4, 1, 1, 7, 14, 0.00736047107014849, ["test    ecx, ecx", "setnz   cl", "movzx   ecx, cl", "jmp     loc_11674"], ["test~ecx,ecx", "setnz~cl", "movzx~ecx,cl", "jmp~FOO"]], [1, 0, 79, 0, 0, 2, 1, 1, 15, 11, 0.010987369858337601, ["test    bpl, 8", "jnz     loc_120A8"], ["test~bpl,0", "jnz~FOO"]], [1, 0, 113, 1, 0, 4, 0, 0, 10, 14, 0.004565625533367469, ["cmp     ebx, ecx", "setb    cl", "movzx   ecx, cl", "add     ecx, 2"], ["cmp~ebx,ecx", "setb~cl", "movzx~ecx,cl", "add~ecx,0"]], [2, 0, 54, 1, 0, 3, 1, 1, 9, 7, 0.01947857996245093, ["add     dword ptr [rsp+0D8h+exponent], 1", "test    bpl, 8", "jz      loc_120F5"], ["add~[word ptr [rsp+0],0", "test~bpl,0", "jz~FOO"]], [0, 0, 112, 0, 0, 2, 0, 1, 11, 13, 0.013568868407578085, ["cmp     r12, r8", "ja      loc_120C1"], ["cmp~r12,r8", "ja~FOO"]], [0, 0, 113, 0, 0, 4, 1, 1, 10, 14, 0.004565625533367469, ["test    ecx, ecx", "setnz   cl", "movzx   ecx, cl", "jmp     loc_116B8"], ["test~ecx,ecx", "setnz~cl", "movzx~ecx,cl", "jmp~FOO"]], [1, 0, 92, 0, 0, 2, 0, 1, 9, 12, 0.01395289298515105, ["mov     dword ptr [rsp+0D8h+exponent], 1", "jmp     loc_117CC"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 16, -1, 0.0003093531319337771, ["lea     rax, [psuffix_0+1]", "mov     byte ptr [psuffix_0], 42h ; 'B'", "mov     [rsp+0D8h+psuffix], rax"], ["lea~rax,[psuffix_0+0]", "mov~<TAG>,0", "mov~[rsp+0],rax"]], [0, 0, 5, 0, 0, 3, 1, 1, 15, -1, 0.008939238777948456, ["test    eax, eax", "mov     rdx, [rsp+0D8h+psuffix]", "jnz     loc_11AB8"], ["test~eax,eax", "mov~rdx,[rsp+0]", "jnz~FOO"]], [1, 0, 43, 0, 0, 3, 0, 1, 10, 6, 0.012438129373613245, ["lea     r13, [integerlim-1]", "mov     byte ptr [integerlim-1], 31h ; '1'", "jmp     do_grouping"], ["lea~r13,[integerlim-1]+0]", "mov~[yte ptr [integerlim-1]+0],0", "jmp~FOO"]], [0, 0, 46, 0, 0, 2, 1, 1, 12, 7, 0.0037122375832053254, ["test    eax, eax", "jz      loc_11EBC"], ["test~eax,eax", "jz~FOO"]], [1, 0, 45, 0, 0, 4, 1, 1, 13, 7, 0.0016427718040621267, ["movzx   edx, byte ptr [decimal_point]", "test    al, 2", "mov     [p_0], dl", "jz      loc_11EBC"], ["movzx~edx,<TAG>", "test~al,0", "mov~<TAG>,dl", "jz~FOO"]], [0, 0, 44, 0, 0, 3, 0, 1, 14, 7, 0.0, ["movzx   edx, word ptr [decimal_point+rax-2]", "mov     [p_0+rax-2], dx", "jmp     loc_11EBC"], ["movzx~edx,[ord ptr [decimal_point+0]", "mov~[p_0+0],dx", "jmp~FOO"]], [0, 0, 44, 0, 0, 1, 0, 1, 14, 7, 0.0018774534903567162, ["jmp     loc_11EBC"], ["jmp~FOO"]], [0, 0, 44, 0, 0, 5, 0, 1, 12, 7, 0.00046936337258917906, ["mov     edx, [decimal_point]", "mov     [p_0], edx", "mov     edx, [decimal_point+rax-4]", "mov     [p_0+rax-4], edx", "jmp     loc_11EBC"], ["mov~edx,<TAG>", "mov~<TAG>,edx", "mov~edx,[decimal_point+0]", "mov~[p_0+0],edx", "jmp~FOO"]], [1, 0, 92, 0, 0, 2, 0, 1, 12, 12, 0.007851169141491723, ["mov     dword ptr [rsp+0D8h+exponent], 2", "jmp     loc_117CC"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [3, 0, 69, 1, 2, 18, 1, 2, 11, 9, 0.03430619559651818, ["fstp    [rsp+0D8h+damt.value]", "sub     rsp, 10h", "lea     rcx, a1lf; \"%.1Lf\"", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "xor     eax, eax", "mov     base, [rsp+0E8h+buf]", "mov     rdi, r14", "fstp    [rsp+0E8h+var_E8]", "call    ___sprintf_chk", "mov     rdi, r14; s", "call    _strlen", "mov     decimal_point, rax", "pop     buflen", "pop     rdx", "cmp     buflen, r13", "fld     [rsp+0D8h+damt.value]", "jbe     loc_11CD1"], ["fstp~<TAG>,[rsp+0]", "sub~rsp,0", "lea~rcx,<TAG>", "mov~rdx,0", "mov~esi,0", "xor~eax,eax", "mov~base,[rsp+0]", "mov~rdi,r14", "fstp~<TAG>,<TAG>", "call~FOO", "mov~rdi,r14", "call~FOO", "mov~decimal_point,rax", "pop~buflen", "pop~rdx", "cmp~buflen,r13", "fld~<TAG>,[rsp+0]", "jbe~FOO"]], [0, 0, 45, 0, 0, 3, 0, 1, 21, 8, 0.003360215053763441, ["fadd    cs:dword_20E48", "fxch    st(1)", "jmp     loc_11582"], ["fadd~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "jmp~FOO"]], [1, 0, 48, 1, 0, 5, 1, 1, 20, 9, 0.005088325652841782, ["add     rax, 1", "mov     [rsp+0D8h+inexact_style], rax", "test    rax, rax", "fild    [rsp+0D8h+inexact_style]", "js      loc_11ECA"], ["add~rax,0", "mov~[rsp+0],rax", "test~rax,rax", "fild~<TAG>,[rsp+0]", "js~FOO"]], [1, 0, 92, 0, 0, 2, 0, 1, 15, 12, 0.007851169141491723, ["mov     dword ptr [rsp+0D8h+exponent], 3", "jmp     loc_117CC"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 107, 0, 0, 2, 0, 0, 14, 13, 0.012928827444956478, ["cmp     r8, r12", "jb      loc_120CE"], ["cmp~r8,r12", "jb~FOO"]], [0, 0, 62, 0, 0, 2, 0, 0, 12, 9, 0.01668373442566991, ["fld     cs:flt_20EA4", "fmul    st(1), st"], ["fld~<TAG>,<TAG>", "fmul~<TAG>,<TAG>"]], [1, 0, 2, 0, 0, 6, 1, 1, 11, -1, 0.009173920464243045, ["mov     rax, [rsp+0D8h+psuffix]", "mov     rdi, [rsp+0D8h+var_40]", "xor     rdi, fs:28h", "mov     byte ptr [rax], 0", "mov     rax, p_0", "jnz     loc_121AD"], ["mov~rax,[rsp+0]", "mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "mov~<TAG>,0", "mov~rax,p_0", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 16, -1, 0.00012800819252432156, ["jmp     loc_11AC4"], ["jmp~FOO"]], [0, 0, 46, 0, 0, 2, 0, 1, 15, 9, 0.0, ["fadd    cs:dword_20E48", "jmp     short loc_11BDA"], ["fadd~<TAG>,<TAG>", "jmp~FOO"]], [1, 0, 47, 1, 0, 5, 1, 0, 14, 9, 0.002474825055470217, ["add     rax, 1", "mov     [rsp+0D8h+exponent], rax", "test    rax, rax", "fild    [rsp+0D8h+exponent]", "jns     short loc_11BDA"], ["add~rax,0", "mov~[rsp+0],rax", "test~rax,rax", "fild~<TAG>,[rsp+0]", "jns~FOO"]], [1, 0, 92, 0, 0, 2, 0, 1, 18, 12, 0.007851169141491723, ["mov     dword ptr [rsp+0D8h+exponent], 4", "jmp     loc_117CC"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 102, 0, 0, 2, 0, 0, 17, 13, 0.011435398532172727, ["cmp     r8, r12", "jb      loc_120DB"], ["cmp~r8,r12", "jb~FOO"]], [0, 0, 61, 0, 0, 3, 0, 0, 13, 8, 0.019691926949991466, ["fld     cs:tbyte_20EB0", "fucomip st, st(2)", "jbe     loc_11582"], ["fld~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "jbe~FOO"]], [0, 0, 62, 0, 0, 1, 0, 1, 13, 9, 0.0014507595152756445, ["jmp     loc_114DF"], ["jmp~FOO"]], [1, 0, 110, 3, 0, 17, 2, 1, 12, 15, 0.007296466973886329, ["mov     r2, r8", "xor     edx, edx", "div     r12", "mov     r8, rax", "lea     eax, [rdx+rdx*4]", "xor     edx, edx", "mov     rsi, r8", "lea     eax, [r10+rax*2]", "div     ebx", "mov     r10d, eax", "mov     eax, ecx", "sar     eax, 1", "mov     edi, r10d", "lea     eax, [rax+rdx*2]", "add     ecx, eax", "cmp     ebx, eax", "ja      loc_11F50"], ["mov~r2,r8", "xor~edx,edx", "div~,r12", "mov~r8,rax", "lea~eax,<TAG>", "xor~edx,edx", "mov~rsi,r8", "lea~eax,<TAG>", "div~,ebx", "mov~r10d,eax", "mov~eax,ecx", "sar~eax,0", "mov~edi,r10d", "lea~eax,<TAG>", "add~ecx,eax", "cmp~ebx,eax", "ja~FOO"]], [1, 0, 89, 0, 0, 4, 0, 1, 7, 11, 0.013419525516299711, ["fstp    st(2)", "fxch    st(1)", "mov     dword ptr [rsp+0D8h+exponent], 1", "jmp     loc_1144E"], ["fstp~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 103, 0, 0, 7, 0, 0, 6, 12, 0.015104966717869945, ["mov     dword ptr [rsp+0D8h+exponent], r14d", "fild    dword ptr [rsp+0D8h+exponent]", "fld     st", "fmul    st, st(1)", "fxch    st(2)", "fucomi  st, st(2)", "jb      loc_11EE0"], ["mov~[word ptr [rsp+0],r14d", "fild~<TAG>,[word ptr [rsp+0]", "fld~<TAG>,<TAG>", "fmul~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "jb~FOO"]], [1, 0, 92, 0, 0, 2, 0, 1, 21, 12, 0.007851169141491723, ["mov     dword ptr [rsp+0D8h+exponent], 5", "jmp     loc_117CC"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 97, 0, 0, 2, 0, 0, 20, 13, 0.00908858166922683, ["cmp     r8, r12", "jb      loc_120E8"], ["cmp~r8,r12", "jb~FOO"]], [1, 0, 108, 1, 0, 4, 0, 0, 13, 14, 0.00439494794333504, ["cmp     ebx, ecx", "setb    cl", "movzx   ecx, cl", "add     ecx, 2"], ["cmp~ebx,ecx", "setb~cl", "movzx~ecx,cl", "add~ecx,0"]], [0, 0, 108, 0, 0, 4, 1, 1, 13, 14, 0.00439494794333504, ["test    ecx, ecx", "setnz   cl", "movzx   ecx, cl", "jmp     loc_116FC"], ["test~ecx,ecx", "setnz~cl", "movzx~ecx,cl", "jmp~FOO"]], [0, 0, 45, 0, 0, 1, 0, 0, 19, 8, 0.010080645161290322, ["fxch    st(1)"], ["fxch~<TAG>,<TAG>"]], [0, 0, 46, 0, 0, 1, 0, 1, 21, 9, 6.400409626216078e-05, ["jmp     short loc_11580"], ["jmp~FOO"]], [0, 0, 46, 0, 0, 3, 0, 1, 18, 9, 0.006997781191329579, ["fstp    st(2)", "fxch    st(1)", "jmp     short loc_11580"], ["fstp~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 46, 0, 0, 1, 0, 0, 20, 9, 0.0014827615634067247, ["fxch    st(1)"], ["fxch~<TAG>,<TAG>"]], [0, 0, 43, 2, 1, 8, 0, 1, 8, 6, 0.07940774876258748, ["mov     r13, [rsp+0D8h+psuffix]", "mov     rdx, buflen; n", "mov     rsi, [rsp+0D8h+buf]; src", "sub     r13, buflen", "sub     buflen, nonintegerlen", "lea     r14, [p_0+r15+0]", "mov     rdi, p_0; dest", "call    _memmove"], ["mov~r13,[rsp+0]", "mov~rdx,buflen", "mov~rsi,[rsp+0]", "sub~r13,buflen", "sub~buflen,nonintegerlen", "lea~r14,[p_0+0]", "mov~rdi,p_0", "call~FOO"]], [3, 0, 44, 1, 2, 17, 2, 3, 11, 7, 0.027692438982761566, ["fdivp   st(1), st", "sub     rsp, 10h", "lea     rcx, a0lf; \"%.0Lf\"", "mov     rbx, [rsp+0E8h+buf]", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "xor     eax, eax", "mov     rdi, rbx", "fstp    [rsp+0E8h+var_E8]", "call    ___sprintf_chk", "mov     rdi, rbx; s", "xor     ebx, ebx", "call    _strlen", "pop     r13", "mov     r15, rax", "pop     r14", "jmp     loc_11A10"], ["fdivp~<TAG>,<TAG>", "sub~rsp,0", "lea~rcx,<TAG>", "mov~rbx,[rsp+0]", "mov~rdx,0", "mov~esi,0", "xor~eax,eax", "mov~rdi,rbx", "fstp~<TAG>,<TAG>", "call~FOO", "mov~rdi,rbx", "xor~ebx,ebx", "call~FOO", "pop~r13", "mov~r15,rax", "pop~r14", "jmp~FOO"]], [4, 0, 44, 1, 2, 17, 2, 3, 7, 7, 0.0240442054958184, ["sub     rsp, 10h", "lea     rcx, a0lf; \"%.0Lf\"", "mov     esi, 1", "mov     base, [rsp+0E8h+buf]", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "xor     eax, eax", "fstp    [rsp+0E8h+var_E8]", "mov     rdi, rbx", "call    ___sprintf_chk", "mov     rdi, rbx; s", "xor     ebx, ebx", "call    _strlen", "pop     rsi", "pop     rdi", "mov     decimal_point, rax", "mov     dword ptr [rsp+0D8h+exponent], 0FFFFFFFFh", "jmp     short loc_11A10"], ["sub~rsp,0", "lea~rcx,<TAG>", "mov~esi,0", "mov~base,[rsp+0]", "mov~rdx,0", "xor~eax,eax", "fstp~<TAG>,<TAG>", "mov~rdi,rbx", "call~FOO", "mov~rdi,rbx", "xor~ebx,ebx", "call~FOO", "pop~rsi", "pop~rdi", "mov~decimal_point,rax", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 89, 0, 0, 4, 0, 1, 8, 11, 0.0018987881891107698, ["fstp    st(2)", "fstp    st", "mov     dword ptr [rsp+0D8h+exponent], 2", "jmp     loc_1144E"], ["fstp~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 101, 0, 0, 5, 0, 0, 7, 12, 0.0033282130056323605, ["fld     st(1)", "fmul    st, st(3)", "fxch    st(1)", "fucomi  st, st(1)", "jb      loc_11EF8"], ["fld~<TAG>,<TAG>", "fmul~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "jb~FOO"]], [1, 0, 56, 0, 0, 10, 1, 0, 9, 12, 0.0022401433691756276, ["fstp    st(1)", "fnstcw  [rsp+0D8h+var_7A]", "movzx   eax, [rsp+0D8h+var_7A]", "or      ah, 0Ch", "mov     [rsp+0D8h+var_7C], ax", "fld     st", "fldcw   [rsp+0D8h+var_7C]", "fistp   [rsp+0D8h+var_88]", "fldcw   [rsp+0D8h+var_7A]", "mov     rax, [rsp+0D8h+var_88]"], ["fstp~<TAG>,<TAG>", "fnstcw~[rsp+0]", "movzx~eax,[rsp+0]", "or~ah,0", "mov~[rsp+0],ax", "fld~<TAG>,<TAG>", "fldcw~[rsp+0]", "fistp~<TAG>,[rsp+0]", "fldcw~[rsp+0]", "mov~rax,[rsp+0]"]], [0, 0, 58, 0, 0, 4, 0, 0, 8, 13, 0.0038829151732377542, ["fld     cs:dword_20E4C", "fxch    st(1)", "fucomi  st, st(1)", "jnb     loc_11DA8"], ["fld~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "jnb~FOO"]], [2, 0, 53, 1, 0, 7, 0, 0, 10, 8, 0.014208909370199694, ["mov     rax, r13", "mov     byte ptr [r14-1], 30h ; '0'", "not     rax", "add     r14, rax", "cmp     r13d, 8", "mov     eax, r13d", "jnb     short loc_1214A"], ["mov~rax,r13", "mov~[yte ptr [r14-1]+0],0", "not~rax", "add~r14,rax", "cmp~r13d,0", "mov~eax,r13d", "jnb~FOO"]], [0, 0, 86, 0, 0, 2, 1, 1, 13, 13, 0.022998805256869773, ["test    al, al", "jz      loc_11FD5"], ["test~al,al", "jz~FOO"]], [1, 0, 48, 0, 0, 2, 1, 1, 11, 8, 0.006400409626216078, ["and     r13d, 4", "jnz     loc_121B2"], ["and~r13d,0", "jnz~FOO"]], [1, 0, 31, 0, 0, 3, 0, 0, 12, -1, 0.05555555555555556, ["mov     rdi, [rsp+0D8h+to_block_size]", "cmp     rdi, 1", "jbe     loc_11FBB"], ["mov~rdi,[rsp+0]", "cmp~rdi,0", "jbe~FOO"]], [2, 0, 41, 1, 2, 21, 0, 3, 10, 4, 0.026284348864994027, ["mov     rdi, [rsp+0D8h+l]; s", "lea     rbx, [rsp+0D8h+var_78]", "mov     r15, integerlim", "sub     r15, p_0", "call    _strlen", "mov     rdi, rbx", "mov     ecx, 29h ; ')'", "mov     rdx, r15", "mov     rsi, p_0", "mov     [rsp+0D8h+inexact_style], rbx", "mov     qword ptr [rsp+0D8h+damt.value], rax", "call    ___memcpy_chk", "mov     rdi, r12", "mov     rcx, integerlim", "mov     r12, r15", "mov     r14d, ebp", "mov     rbx, 0FFFFFFFFFFFFFFFFh", "mov     p_0, [rsp+0D8h+grouping]", "mov     opts, qword ptr [rsp+0D8h+damt.value]", "mov     r15, rdi", "jmp     short loc_11954"], ["mov~rdi,[rsp+0]", "lea~rbx,[rsp+0]", "mov~r15,integerlim", "sub~r15,p_0", "call~FOO", "mov~rdi,rbx", "mov~ecx,0", "mov~rdx,r15", "mov~rsi,p_0", "mov~[rsp+0],rbx", "mov~[word ptr [rsp+0],rax", "call~FOO", "mov~rdi,r12", "mov~rcx,integerlim", "mov~r12,r15", "mov~r14d,ebp", "mov~rbx,0", "mov~p_0,[rsp+0]", "mov~opts,[word ptr [rsp+0]", "mov~r15,rdi", "jmp~FOO"]], [0, 0, 210, 2, 0, 8, 1, 1, 2, 12, 0.004245605052056665, ["mov     r9, [rsp+0D8h+exponent]", "xor     edx, edx", "mov     rsi, r9", "imul    rsi, multiplier", "mov     multiplier, amt", "div     multiplier", "cmp     rax, r9", "jnz     loc_11374"], ["mov~r9,[rsp+0]", "xor~edx,edx", "mov~rsi,r9", "imul~rsi,multiplier", "mov~multiplier,amt", "div~,multiplier", "cmp~rax,r9", "jnz~FOO"]], [0, 0, 211, 1, 0, 6, 2, 1, 1, 13, 0.0032855436081242534, ["xor     edx, edx", "mov     psuffix_0, rcx", "div     rsi", "test    rdx, rdx", "mov     rdi, rax", "jz      loc_11B00"], ["xor~edx,edx", "mov~psuffix_0,rcx", "div~,rsi", "test~rdx,rdx", "mov~rdi,rax", "jz~FOO"]], [1, 0, 89, 0, 0, 5, 0, 1, 9, 11, 0.0018987881891107698, ["fstp    st(3)", "fstp    st", "fxch    st(1)", "mov     dword ptr [rsp+0D8h+exponent], 3", "jmp     loc_1144E"], ["fstp~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 89, 0, 0, 5, 0, 1, 10, 11, 0.0018987881891107698, ["fstp    st(3)", "fstp    st", "fxch    st(1)", "mov     dword ptr [rsp+0D8h+exponent], 4", "jmp     loc_1144E"], ["fstp~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 89, 0, 0, 5, 0, 1, 11, 11, 0.0018987881891107698, ["fstp    st(3)", "fstp    st", "fxch    st(1)", "mov     dword ptr [rsp+0D8h+exponent], 5", "jmp     loc_1144E"], ["fstp~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 89, 0, 0, 5, 0, 1, 12, 11, 0.0018987881891107698, ["fstp    st(3)", "fstp    st", "fxch    st(1)", "mov     dword ptr [rsp+0D8h+exponent], 6", "jmp     loc_1144E"], ["fstp~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 89, 0, 0, 4, 0, 1, 13, 11, 0.0009493940945553849, ["fstp    st(2)", "fxch    st(1)", "mov     dword ptr [rsp+0D8h+exponent], 7", "jmp     loc_1144E"], ["fstp~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 29, 0, 0, 2, 0, 0, 13, -1, 0.04787506400409627, ["cmp     rdi, power", "jbe     loc_11FC8"], ["cmp~rdi,power", "jbe~FOO"]], [2, 0, 56, 0, 0, 13, 2, 1, 9, 12, 0.0022401433691756276, ["fnstcw  [rsp+0D8h+var_7A]", "movzx   eax, [rsp+0D8h+var_7A]", "fsubr   st(1), st", "fxch    st(1)", "mov     rdx, 8000000000000000h", "or      ah, 0Ch", "mov     [rsp+0D8h+var_7C], ax", "fldcw   [rsp+0D8h+var_7C]", "fistp   [rsp+0D8h+var_88]", "fldcw   [rsp+0D8h+var_7A]", "mov     rax, [rsp+0D8h+var_88]", "xor     rax, rdx", "jmp     loc_11B86"], ["fnstcw~[rsp+0]", "movzx~eax,[rsp+0]", "fsubr~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "mov~rdx,0", "or~ah,0", "mov~[rsp+0],ax", "fldcw~[rsp+0]", "fistp~<TAG>,[rsp+0]", "fldcw~[rsp+0]", "mov~rax,[rsp+0]", "xor~rax,rdx", "jmp~FOO"]], [0, 0, 27, 1, 0, 4, 0, 0, 14, -1, 0.04010923365762076, ["mov     rax, power", "imul    rax, power", "cmp     power, rdi", "jnb     loc_11FF1"], ["mov~rax,power", "imul~rax,power", "cmp~power,rdi", "jnb~FOO"]], [2, 0, 58, 0, 0, 12, 2, 0, 15, 12, 0.007829834442737669, ["fnstcw  [rsp+0D8h+var_7A]", "movzx   eax, [rsp+0D8h+var_7A]", "fsubr   st(2), st", "fxch    st(2)", "mov     rdx, 8000000000000000h", "or      ah, 0Ch", "mov     [rsp+0D8h+var_7C], ax", "fldcw   [rsp+0D8h+var_7C]", "fistp   [rsp+0D8h+var_88]", "fldcw   [rsp+0D8h+var_7A]", "mov     rax, [rsp+0D8h+var_88]", "xor     rax, rdx"], ["fnstcw~[rsp+0]", "movzx~eax,[rsp+0]", "fsubr~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "mov~rdx,0", "or~ah,0", "mov~[rsp+0],ax", "fldcw~[rsp+0]", "fistp~<TAG>,[rsp+0]", "fldcw~[rsp+0]", "mov~rax,[rsp+0]", "xor~rax,rdx"]], [0, 0, 41, 2, 1, 10, 1, 2, 13, 1, 0.0077658303464755085, ["mov     rax, [rsp+0D8h+inexact_style]", "sub     r12, rbx", "sub     rcx, rbx", "mov     rdi, rcx; dest", "mov     rdx, rbx; n", "lea     rsi, [rax+r12]; src", "call    _memcpy", "test    r12, r12", "mov     rcx, rax", "jz      loc_121F4"], ["mov~rax,[rsp+0]", "sub~r12,rbx", "sub~rcx,rbx", "mov~rdi,rcx", "mov~rdx,rbx", "lea~rsi,<TAG>", "call~FOO", "test~r12,r12", "mov~rcx,rax", "jz~FOO"]], [0, 0, 41, 0, 0, 2, 0, 0, 12, 2, 0.01828383683222393, ["cmp     rbx, r12", "jbe     short loc_11918"], ["cmp~rbx,r12", "jbe~FOO"]], [0, 0, 57, 0, 0, 4, 1, 0, 16, 11, 0.016961085509472607, ["mov     qword ptr [rsp+0D8h+damt.value], rax", "test    rax, rax", "fild    qword ptr [rsp+0D8h+damt.value]", "jns     short loc_11544"], ["mov~[word ptr [rsp+0],rax", "test~rax,rax", "fild~<TAG>,[word ptr [rsp+0]", "jns~FOO"]], [1, 0, 103, 1, 0, 4, 0, 0, 16, 14, 0.0037975763782215396, ["cmp     ecx, ebx", "setnbe  cl", "movzx   ecx, cl", "add     ecx, 2"], ["cmp~ecx,ebx", "setnbe~cl", "movzx~ecx,cl", "add~ecx,0"]], [0, 0, 56, 0, 0, 1, 0, 0, 17, 11, 0.0, ["fadd    cs:dword_20E48"], ["fadd~<TAG>,<TAG>"]], [0, 0, 55, 0, 0, 3, 1, 1, 17, 10, 0.016961085509472607, ["mov     r15d, dword ptr [rsp+0D8h+inexact_style]", "test    r15d, r15d", "jnz     short loc_11578"], ["mov~r15d,[word ptr [rsp+0]", "test~r15d,r15d", "jnz~FOO"]], [0, 0, 41, 1, 1, 6, 0, 1, 14, 4, 0.00014934289127837517, ["mov     rsi, [rsp+0D8h+l]; src", "sub     rcx, rbp", "mov     rdx, rbp; n", "mov     rdi, rcx; dest", "call    _memcpy", "mov     rcx, rax"], ["mov~rsi,[rsp+0]", "sub~rcx,rbp", "mov~rdx,rbp", "mov~rdi,rcx", "call~FOO", "mov~rcx,rax"]], [0, 0, 53, 0, 0, 3, 0, 0, 18, 11, 0.008661887694145758, ["fxch    st(2)", "fucomip st, st(2)", "jp      short loc_1155A"], ["fxch~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "jp~FOO"]], [0, 0, 51, 0, 0, 1, 0, 1, 19, 10, 0.0030188598736985836, ["jz      short loc_1157E"], ["jz~FOO"]], [0, 0, 49, 0, 0, 2, 0, 1, 20, 10, 6.400409626216078e-05, ["fstp    st(1)", "jmp     short loc_1155C"], ["fstp~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 49, 0, 0, 1, 0, 0, 19, 10, 0.004256272401433692, ["fstp    st(1)"], ["fstp~<TAG>,<TAG>"]], [0, 0, 41, 0, 0, 3, 1, 1, 11, 3, 0.024300221880867043, ["movzx   eax, byte ptr [r13+0]", "test    al, al", "jz      short loc_1196A"], ["movzx~eax,[yte ptr [r13+0]", "test~al,al", "jz~FOO"]], [2, 0, 41, 1, 0, 4, 0, 0, 12, 3, 0.0, ["cmp     al, 7Fh", "movzx   ebx, al", "cmovnb  rbx, r12", "add     r13, 1"], ["cmp~al,0", "movzx~ebx,al", "cmovnb~rbx,r12", "add~r13,0"]], [1, 0, 100, 3, 0, 17, 2, 1, 18, 15, 0.004608294930875576, ["mov     r2, r8", "xor     edx, edx", "div     r12", "mov     r8, rax", "lea     eax, [rdx+rdx*4]", "xor     edx, edx", "mov     rsi, r8", "lea     eax, [r10+rax*2]", "div     ebx", "mov     r10d, eax", "mov     eax, ecx", "sar     eax, 1", "mov     edi, r10d", "lea     eax, [rax+rdx*2]", "add     ecx, eax", "cmp     ebx, eax", "ja      loc_11F90"], ["mov~r2,r8", "xor~edx,edx", "div~,r12", "mov~r8,rax", "lea~eax,<TAG>", "xor~edx,edx", "mov~rsi,r8", "lea~eax,<TAG>", "div~,ebx", "mov~r10d,eax", "mov~eax,ecx", "sar~eax,0", "mov~edi,r10d", "lea~eax,<TAG>", "add~ecx,eax", "cmp~ebx,eax", "ja~FOO"]], [0, 0, 54, 0, 0, 1, 0, 0, 11, 11, 0.0, ["fadd    cs:dword_20E48"], ["fadd~<TAG>,<TAG>"]], [0, 0, 55, 0, 0, 4, 1, 0, 10, 11, 0.006507083119986346, ["mov     [rsp+0D8h+exponent], rax", "test    rax, rax", "fild    [rsp+0D8h+exponent]", "jns     short loc_11B9A"], ["mov~[rsp+0],rax", "test~rax,rax", "fild~<TAG>,[rsp+0]", "jns~FOO"]], [2, 0, 87, 1, 0, 6, 1, 1, 12, 14, 0.010112647209421403, ["mov     eax, edi", "and     eax, 1", "add     eax, ecx", "cmp     eax, 2", "setnle  al", "jmp     loc_117F1"], ["mov~eax,edi", "and~eax,0", "add~eax,ecx", "cmp~eax,0", "setnle~al", "jmp~FOO"]], [1, 0, 89, 0, 0, 2, 0, 1, 11, 15, 0.02011862092507254, ["cmp     dword ptr [rsp+0D8h+inexact_style], 1", "jz      loc_12032"], ["cmp~[word ptr [rsp+0],0", "jz~FOO"]], [0, 0, 127, 0, 0, 4, 1, 0, 2, 12, 0.011307390339648405, ["mov     qword ptr [rsp+0D8h+damt.value], rcx", "test    rcx, rcx", "fild    qword ptr [rsp+0D8h+damt.value]", "jns     short loc_11388"], ["mov~[word ptr [rsp+0],rcx", "test~rcx,rcx", "fild~<TAG>,[word ptr [rsp+0]", "jns~FOO"]], [0, 0, 213, 0, 0, 2, 1, 1, 1, 13, 0.0013014166239972691, ["test    rcx, rcx", "jz      loc_11374"], ["test~rcx,rcx", "jz~FOO"]], [1, 0, 98, 1, 0, 4, 0, 0, 19, 14, 0.002773510838026967, ["cmp     ebx, ecx", "setb    cl", "movzx   ecx, cl", "add     ecx, 2"], ["cmp~ebx,ecx", "setb~cl", "movzx~ecx,cl", "add~ecx,0"]], [0, 0, 126, 0, 0, 1, 0, 0, 3, 12, 0.0, ["fadd    cs:dword_20E48"], ["fadd~<TAG>,<TAG>"]], [0, 0, 98, 0, 0, 4, 1, 1, 19, 14, 0.002773510838026967, ["test    ecx, ecx", "setnz   cl", "movzx   ecx, cl", "jmp     loc_11784"], ["test~ecx,ecx", "setnz~cl", "movzx~ecx,cl", "jmp~FOO"]], [1, 0, 46, 1, 0, 6, 0, 0, 13, 8, 0.002581498549240485, ["mov     esi, edx", "add     edx, 8", "mov     rdi, [r15+rsi]", "cmp     edx, eax", "mov     [rcx+rsi], rdi", "jb      short loc_12182"], ["mov~esi,edx", "add~edx,0", "mov~rdi,<TAG>", "cmp~edx,eax", "mov~<TAG>,rdi", "jb~FOO"]], [0, 0, 125, 0, 0, 5, 1, 0, 3, 11, 0.016427718040621268, ["mov     rax, [rsp+0D8h+to_block_size]", "mov     qword ptr [rsp+0D8h+damt.value], rax", "test    rax, rax", "fild    qword ptr [rsp+0D8h+damt.value]", "jns     short loc_113A1"], ["mov~rax,[rsp+0]", "mov~[word ptr [rsp+0],rax", "test~rax,rax", "fild~<TAG>,[word ptr [rsp+0]", "jns~FOO"]], [0, 0, 124, 0, 0, 1, 0, 0, 4, 11, 0.0, ["fadd    cs:dword_20E48"], ["fadd~<TAG>,<TAG>"]], [0, 0, 53, 0, 0, 3, 1, 1, 11, 10, 0.008043181430278205, ["mov     r8d, dword ptr [rsp+0D8h+inexact_style]", "test    r8d, r8d", "jnz     short loc_11BD8"], ["mov~r8d,[word ptr [rsp+0]", "test~r8d,r8d", "jnz~FOO"]], [1, 0, 121, 0, 0, 3, 1, 1, 5, 9, 0.026156340672469705, ["test    bpl, 10h", "fmulp   st(1), st", "jz      loc_119A0"], ["test~bpl,0", "fmulp~<TAG>,<TAG>", "jz~FOO"]], [0, 0, 51, 0, 0, 3, 0, 0, 12, 10, 0.0021334698754053596, ["fxch    st(1)", "fucomip st, st(1)", "jp      short loc_11BB0"], ["fxch~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "jp~FOO"]], [0, 0, 49, 0, 0, 1, 0, 1, 13, 9, 0.001429424816521591, ["jz      short loc_11BDA"], ["jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 12, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 48, 0, 0, 2, 0, 1, 14, 10, 4.266939750810719e-05, ["fstp    st", "jmp     short loc_11BB8"], ["fstp~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 123, 0, 0, 5, 1, 0, 4, 10, 0.0213773681515617, ["fdivp   st(1), st", "mov     rax, [rsp+0D8h+exponent]", "test    rax, rax", "fild    [rsp+0D8h+exponent]", "jns     short loc_113B7"], ["fdivp~<TAG>,<TAG>", "mov~rax,[rsp+0]", "test~rax,rax", "fild~<TAG>,[rsp+0]", "jns~FOO"]], [0, 0, 122, 0, 0, 1, 0, 0, 5, 10, 0.0, ["fadd    cs:dword_20E48"], ["fadd~<TAG>,<TAG>"]], [0, 0, 48, 0, 0, 2, 0, 0, 13, 10, 0.0008960573476702509, ["fstp    st", "nop     word ptr [rax+rax+00h]"], ["fstp~<TAG>,<TAG>", "nop~[ord ptr [rax+0]"]], [1, 0, 95, 3, 0, 16, 2, 1, 21, 14, 0.001984126984126984, ["mov     r2, r8", "xor     edx, edx", "mov     esi, ecx", "div     r12", "sar     esi, 1", "mov     r8, rax", "lea     eax, [rdx+rdx*4]", "xor     edx, edx", "lea     eax, [r10+rax*2]", "div     ebx", "lea     edx, [rsi+rdx*2]", "mov     edi, eax", "mov     rsi, r8", "add     ecx, edx", "cmp     ebx, edx", "ja      loc_11FAE"], ["mov~r2,r8", "xor~edx,edx", "mov~esi,ecx", "div~,r12", "sar~esi,0", "mov~r8,rax", "lea~eax,<TAG>", "xor~edx,edx", "lea~eax,<TAG>", "div~,ebx", "lea~edx,<TAG>", "mov~edi,eax", "mov~rsi,r8", "add~ecx,edx", "cmp~ebx,edx", "ja~FOO"]], [0, 0, 93, 0, 0, 4, 1, 1, 22, 13, 0.001322751322751323, ["test    ecx, ecx", "setnz   cl", "movzx   ecx, cl", "jmp     loc_117C4"], ["test~ecx,ecx", "setnz~cl", "movzx~ecx,cl", "jmp~FOO"]], [1, 0, 63, 0, 0, 4, 0, 1, 12, 8, 0.002154804574159413, ["cmp     dword ptr [rsp+0D8h+inexact_style], 1", "fld     cs:flt_20EA4", "fmul    st(1), st", "jz      loc_11582"], ["cmp~[word ptr [rsp+0],0", "fld~<TAG>,<TAG>", "fmul~<TAG>,<TAG>", "jz~FOO"]], [1, 0, 93, 1, 0, 4, 0, 0, 22, 13, 0.001322751322751323, ["cmp     ecx, ebx", "setnbe  cl", "movzx   ecx, cl", "add     ecx, 2"], ["cmp~ecx,ebx", "setnbe~cl", "movzx~ecx,cl", "add~ecx,0"]], [1, 0, 92, 0, 0, 1, 0, 0, 23, 12, 0.005888376856118792, ["mov     dword ptr [rsp+0D8h+exponent], 6"], ["mov~[word ptr [rsp+0],0"]], [1, 0, 0, 1, 0, 8, 0, 0, 12, -1, 0.0, ["add     rsp, 0A8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 91, 0, 0, 2, 0, 1, 10, 11, 0.06216931216931217, ["cmp     rsi, 9", "ja      loc_121D8"], ["cmp~rsi,0", "ja~FOO"]], [0, 0, 46, 0, 0, 1, 0, 0, 12, 9, 0.006187062638675542, ["fstp    st(1)"], ["fstp~<TAG>,<TAG>"]], [0, 0, 45, 0, 0, 1, 0, 1, 13, 8, 0.012480798771121352, ["jmp     loc_119B5"], ["jmp~FOO"]], [0, 0, 87, 0, 0, 6, 3, 0, 12, 14, 0.010112647209421403, ["mov     ebx, dword ptr [rsp+0D8h+inexact_style]", "test    ebx, ebx", "setz    al", "test    ecx, ecx", "setnle  dl", "and     eax, edx"], ["mov~ebx,[word ptr [rsp+0]", "test~ebx,ebx", "setz~al", "test~ecx,ecx", "setnle~dl", "and~eax,edx"]]], "func_feature": [18, 113, 153, 6, 218, 325, 7, 1027, 0.01218, 10, 85], "succs": [[150], [0, 12], [27], [2, 110], [2, 68], [72], [90, 5], [19, 165], [164, 7], [18, 29], [9, 191], [150], [210, 11], [25], [17, 13], [196], [118, 15], [25], [30], [32, 166], [152, 156], [152, 20], [192, 163], [72], [34, 23], [26, 35], [35], [58, 36], [27], [30], [37, 69], [30], [53, 167], [72], [33, 73], [41, 99], [61, 39], [66, 38], [69], [57, 52], [51, 125], [40, 54], [131, 55], [161, 42], [42], [42], [161, 42], [43, 47], [47], [151], [49, 1], [78], [57, 62], [56, 168], [78], [72, 160], [105], [69], [57, 102], [57], [57], [57], [57], [131], [96, 63], [116, 63], [109, 87], [110], [67, 60], [80, 89], [69], [69], [131, 79], [72], [72], [72], [72], [72], [101, 86], [84, 85], [48, 83], [136], [176, 81], [88, 48], [98, 117], [84], [125], [108], [48, 91], [88, 100], [24, 77], [112, 92], [48], [125], [93, 14], [116], [116, 95], [64, 65], [64, 97], [125], [48], [125], [106], [175], [172, 103], [50, 94], [106, 59], [114, 111], [115, 107], [108], [28, 70], [113], [157, 118], [139, 124], [113], [214], [131], [132, 116], [46], [120, 118], [121, 118], [118], [118], [118], [214], [1, 130], [151], [147, 126], [214], [128, 82], [137], [203, 213], [131], [216], [216, 133], [214], [186, 135], [104, 151], [137], [144, 145], [105], [154, 140], [214], [208, 142], [129], [129], [151], [146], [146], [146], [46], [150], [150], [105], [8, 153], [188], [170, 155], [16, 159], [3, 4], [123, 119], [169, 74], [184], [191, 31], [162, 191], [105], [105], [105], [105], [105], [75, 171], [188], [76, 6], [175], [179, 45], [44, 173], [177, 178], [136], [178], [148, 180], [184], [181, 183], [149, 182], [127], [127], [185, 174], [174], [193, 195], [199], [187, 199], [158], [217, 189], [194, 197], [10, 191], [143], [197], [143], [122, 196], [205, 198], [205], [201, 215], [21, 141], [202, 207], [216, 204], [], [134], [200, 206], [200], [134], [209, 211], [212], [138, 151], [212], [214], [], [190, 71], [216], [152], [158]], "fname": "human_readable", "n_num": 218}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 16, 0, 1, 8, 2, 2, 0, 0, 0.12962962962962962, ["lea     rsi, [rsp+58h+ptr]; ptr", "lea     r8, valid_suffixes; \"eEgGkKmMpPtTyYzZ0\"", "xor     edx, edx; strtol_base", "mov     rcx, block_size; val", "mov     rdi, r15; s", "call    xstrtoumax", "test    eax, eax", "jnz     short loc_12348"], ["lea~rsi,[rsp+0]", "lea~r8,<TAG>", "xor~edx,edx", "mov~rcx,block_size", "mov~rdi,r15", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 18, 0, 1, 7, 1, 2, 3, 3, 0.14316239316239318, ["lea     rdx, block_size_opts; vallist", "lea     rsi, block_size_args; arglist", "mov     ecx, 4; valsize", "mov     rdi, r15; arg", "call    argmatch", "test    eax, eax", "js      short loc_122E8"], ["lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~ecx,0", "mov~rdi,r15", "call~FOO", "test~eax,eax", "js~FOO"]], [2, 2, 3, 1, 1, 9, 1, 2, 7, 2, 0.0, ["lea     rdi, aPosixlyCorrect; \"POSIXLY_CORRECT\"", "call    _getenv", "cmp     rax, 1", "sbb     rax, rax", "and     eax, 200h", "add     rax, 200h", "mov     [block_size+0], rax", "mov     eax, 4", "jmp     loc_12295"], ["lea~rdi,<TAG>", "call~FOO", "cmp~rax,0", "sbb~rax,rax", "and~eax,<STR>", "add~rax,<STR>", "mov~[block_size+0],rax", "mov~eax,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 6, 2, 0.07834757834757836, ["test    rdx, rdx", "jnz     loc_12295"], ["test~rdx,rdx", "jnz~FOO"]], [1, 0, 8, 0, 0, 3, 0, 1, 9, 4, 0.02849002849002849, ["cmp     byte ptr [rcx-2], 69h ; 'i'", "mov     ebx, r14d", "jnz     loc_12339"], ["cmp~[yte ptr [rcx-2]+0],0", "mov~ebx,r14d", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 8, 5, 0.06410256410256411, ["cmp     byte ptr [rcx-1], 42h ; 'B'", "jz      short loc_12400"], ["cmp~[yte ptr [rcx-1]+0],0", "jz~FOO"]], [1, 0, 14, 0, 0, 4, 0, 0, 5, 4, 0.10256410256410257, ["movzx   esi, byte ptr [r15]", "lea     edx, [rsi-30h]", "cmp     dl, 9", "jbe     short loc_12339"], ["movzx~esi,<TAG>", "lea~edx,[rsi-30h]+0]", "cmp~dl,0", "jbe~FOO"]], [1, 0, 3, 0, 0, 6, 2, 0, 4, 2, 0.019230769230769232, ["lea     rdx, block_size_opts", "cdqe", "mov     qword ptr [block_size+0], 1", "or      ebx, [rdx+rax*4]", "xor     eax, eax", "mov     [opts], ebx"], ["lea~rdx,<TAG>", "cdqe~", "mov~[word ptr [block_size+0],0", "or~ebx,<TAG>", "xor~eax,eax", "mov~<TAG>,ebx"]], [0, 0, 7, 0, 0, 2, 0, 1, 10, 5, 0.0014245014245014246, ["mov     r13d, [rsp+58h+var_4C]", "jmp     short loc_123F6"], ["mov~r13d,[rsp+0]", "jmp~FOO"]], [0, 0, 13, 0, 0, 3, 0, 1, 6, 5, 0.08974358974358974, ["mov     rcx, [rsp+58h+ptr]", "cmp     r15, rcx", "jnz     short loc_12329"], ["mov~rcx,[rsp+0]", "cmp~r15,rcx", "jnz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 1, 7, 6, 0.05698005698005698, ["jmp     loc_123F0"], ["jmp~FOO"]], [0, 0, 26, 0, 1, 5, 1, 2, 1, 5, 0.007834757834757835, ["lea     spec, aLsBlockSize+3; name", "call    _getenv", "test    rax, rax", "mov     spec, rax", "jnz     loc_12240"], ["lea~spec,<TAG>", "call~FOO", "test~rax,rax", "mov~spec,rax", "jnz~FOO"]], [1, 0, 27, 1, 0, 15, 2, 1, 0, 6, 0.0, ["push    r15", "push    r14", "mov     r15, spec", "push    r13", "push    r12", "mov     r12, opts", "push    rbp", "push    rbx", "mov     rbp, block_size", "sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "test    spec, spec", "jz      loc_12390"], ["push~r15", "push~r14", "mov~r15,spec", "push~r13", "push~r12", "mov~r12,opts", "push~rbp", "push~rbx", "mov~rbp,block_size", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~spec,spec", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 5, 1, 0.07122507122507123, ["mov     rcx, [rsp+58h+var_40]", "xor     rcx, fs:28h", "jnz     loc_1242B"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 1, 3, 0, 0, 4, 1, 1, 4, 2, 0.007478632478632479, ["mov     qword ptr [block_size+0], 200h", "xor     eax, eax", "mov     dword ptr [opts], 0", "jmp     loc_12295"], ["mov~[word ptr [block_size+0],<STR>", "xor~eax,eax", "mov~<TAG>,0", "jmp~FOO"]], [2, 0, 3, 0, 0, 4, 1, 1, 4, 2, 0.007478632478632479, ["mov     qword ptr [block_size+0], 400h", "xor     eax, eax", "mov     dword ptr [opts], 0", "jmp     loc_12295"], ["mov~[word ptr [block_size+0],0", "xor~eax,eax", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 5, 0, 1, 4, 1, 2, 3, 3, 0.019230769230769232, ["lea     rdi, aPosixlyCorrect; \"POSIXLY_CORRECT\"", "call    _getenv", "test    rax, rax", "jz      short loc_12414"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 0, 12, 1, 0, 5, 0, 1, 7, 4, 0.03133903133903134, ["add     r15, 1", "movzx   edi, byte ptr [r15]", "lea     edx, [rdi-30h]", "cmp     dl, 9", "ja      short loc_12320"], ["add~r15,0", "movzx~edi,<TAG>", "lea~edx,[rdi-30h]+0]", "cmp~dl,0", "ja~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 8, 5, 0.005698005698005698, ["cmp     r15, rcx", "jz      loc_123F0"], ["cmp~r15,rcx", "jz~FOO"]], [0, 0, 25, 0, 1, 5, 1, 2, 2, 4, 0.014957264957264958, ["lea     rdi, aBlocksize; \"BLOCKSIZE\"", "call    _getenv", "test    rax, rax", "mov     r15, rax", "jnz     loc_12240"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~r15,rax", "jnz~FOO"]], [0, 0, 5, 0, 0, 3, 0, 1, 6, 3, 0.06410256410256411, ["mov     rdx, [block_size+0]", "mov     [opts], ebx", "jmp     short loc_12354"], ["mov~rdx,[block_size+0]", "mov~<TAG>,ebx", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 9, 4, 0.017094017094017096, ["mov     ebx, r13d", "jmp     loc_12339"], ["mov~ebx,r13d", "jmp~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 1, 5, 0.07905982905982907, ["cmp     byte ptr [r15], 27h ; '''", "jz      short loc_122C0"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 28h", "pop     rbx", "pop     block_size", "pop     opts", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~block_size", "pop~opts", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 5, 0, 0, 2, 0, 0, 5, 3, 0.027065527065527065, ["mov     rdx, [block_size+0]", "mov     dword ptr [opts], 0"], ["mov~rdx,[block_size+0]", "mov~<TAG>,0"]], [1, 2, 19, 0, 0, 4, 1, 0, 2, 4, 0.048789173789173794, ["mov     r13d, 0A0h", "mov     [rsp+58h+var_4C], 1A0h", "mov     r14d, 180h", "xor     ebx, ebx"], ["mov~r13d,0", "mov~[rsp+0],<STR>", "mov~r14d,<STR>", "xor~ebx,ebx"]], [5, 0, 19, 1, 0, 6, 0, 1, 2, 4, 0.048789173789173794, ["add     r15, 1", "mov     r13d, 0A4h", "mov     [rsp+58h+var_4C], 1A4h", "mov     r14d, 184h", "mov     ebx, 4", "jmp     loc_1225C"], ["add~r15,0", "mov~r13d,0", "mov~[rsp+0],0", "mov~r14d,0", "mov~ebx,0", "jmp~FOO"]]], "func_feature": [7, 16, 29, 2, 28, 41, 2, 122, 0.04156, 7, 5], "succs": [[25, 6], [0, 7], [13], [2, 13], [8, 21], [4, 22], [9, 21], [13], [22], [10, 18], [5], [20, 23], [11, 23], [24, 17], [13], [13], [14, 15], [], [19, 21], [18, 5], [16, 23], [3], [21], [26, 27], [], [3], [1], [1]], "fname": "human_options", "n_num": 28}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 10, 0, 0, 2, 0, 1, 0, 0, 0.045454545454545456, ["cmp     edi, [tail]", "jnz     short loc_12454"], ["cmp~edi,<TAG>", "jnz~FOO"]], [0, 0, 11, 0, 0, 6, 1, 1, 0, 4, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, cs:user_alist", "test    tail, tail", "jz      short loc_1245D"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,<TAG>", "test~tail,tail", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 2, 2, 0.05454545454545454, ["jmp     short loc_124B0"], ["jmp~FOO"]], [0, 0, 4, 0, 2, 9, 0, 2, 2, 2, 0.09090909090909091, ["call    xmalloc", "lea     rdi, [rax+10h]; dest", "mov     [rax], ebp", "mov     rsi, name; src", "mov     tail, rax", "call    _strcpy", "mov     rax, cs:user_alist", "mov     cs:user_alist, match", "mov     [match+8], rax"], ["call~FOO", "lea~rdi,[rax+0]", "mov~<TAG>,ebp", "mov~rsi,name", "mov~tail,rax", "call~FOO", "mov~rax,<TAG>", "mov~<TAG>,match", "mov~[match+0],rax"]], [1, 0, 6, 0, 1, 6, 1, 2, 1, 3, 0.09090909090909091, ["mov     ebp, edi", "lea     r12, a8+6; \"\"", "call    _getpwuid", "test    pwent, pwent", "mov     edi, 18h", "jz      short loc_12488"], ["mov~ebp,edi", "lea~r12,<TAG>", "call~FOO", "test~pwent,pwent", "mov~edi,0", "jz~FOO"]], [1, 0, 5, 0, 1, 5, 1, 1, 2, 3, 0.0, ["mov     r12, [pwent]", "mov     rdi, r12; s", "call    _strlen", "lea     rdi, [rax+18h]", "and     rdi, 0FFFFFFFFFFFFFFF8h; n"], ["mov~r12,<TAG>", "mov~rdi,r12", "call~FOO", "lea~rdi,[rax+0]", "and~rdi,0"]], [0, 0, 1, 0, 0, 2, 1, 1, 4, 0, 0.04090909090909091, ["xor     eax, eax", "jmp     short loc_124BA"], ["xor~eax,eax", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 1, 0.21818181818181817, ["cmp     byte ptr [match+10h], 0", "jz      short loc_124C0"], ["cmp~[yte ptr [match+0],0", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 3, 2, 0.03636363636363636, ["cmp     [tail], edi", "jz      short loc_124B0"], ["cmp~<TAG>,edi", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 2, 3, 0.07272727272727272, ["mov     tail, [tail+8]", "test    tail, tail", "jnz     short loc_12450"], ["mov~tail,[tail+0]", "test~tail,tail", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 5, -1, 0.0, ["pop     match", "pop     rbp", "pop     r12", "retn"], ["pop~match", "pop~rbp", "pop~r12", "retn"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, -1, 0.04090909090909091, ["lea     rax, [match+10h]"], ["lea~rax,[match+0]"]]], "func_feature": [4, 5, 12, 0, 12, 17, 4, 43, 0.05758, 2, 0], "succs": [[9, 2], [0, 4], [7], [7], [3, 5], [3], [10], [11, 6], [9, 7], [8, 4], [], [10]], "fname": "getuser", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 15, 0, 0, 7, 1, 1, 0, 0, 0.0, ["push    r12", "push    rbp", "mov     r12, user", "push    rbx", "mov     rbx, cs:user_alist", "test    tail, tail", "jz      short loc_12520"], ["push~r12", "push~rbp", "mov~r12,user", "push~rbx", "mov~rbx,<TAG>", "test~tail,tail", "jz~FOO"]], [0, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.03571428571428572, ["mov     rax, cs:nouser_alist", "mov     cs:nouser_alist, tail", "mov     [tail+8], rax", "xor     eax, eax", "jmp     loc_12512"], ["mov~rax,<TAG>", "mov~<TAG>,tail", "mov~[tail+0],rax", "xor~eax,eax", "jmp~FOO"]], [1, 0, 4, 0, 4, 14, 2, 5, 0, 1, 0.1523809523809524, ["mov     rdi, user; name", "call    _getpwnam", "mov     rdi, user; s", "mov     rbp, rax", "call    _strlen", "lea     rdi, [rax+18h]", "and     rdi, 0FFFFFFFFFFFFFFF8h; n", "call    xmalloc", "lea     rdi, [rax+10h]; dest", "mov     rsi, user; src", "mov     tail, rax", "call    _strcpy", "test    pwent, pwent", "jz      short loc_125B0"], ["mov~rdi,user", "call~FOO", "mov~rdi,user", "mov~rbp,rax", "call~FOO", "lea~rdi,[rax+0]", "and~rdi,0", "call~FOO", "lea~rdi,[rax+0]", "mov~rsi,user", "mov~tail,rax", "call~FOO", "test~pwent,pwent", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 0, 3, 0.13333333333333336, ["cmp     [tail+10h], bpl", "jnz     short loc_12538"], ["cmp~[tail+0],bpl", "jnz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 0, 4, 0.1142857142857143, ["movzx   ebp, byte ptr [user]", "jmp     short loc_12541"], ["movzx~ebp,<TAG>", "jmp~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 0, 2, 0.0761904761904762, ["mov     tail, [tail+8]", "test    tail, tail", "jz      short loc_12560"], ["mov~tail,[tail+0]", "test~tail,tail", "jz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 0, 5, 0.01666666666666667, ["movzx   ebp, byte ptr [user]", "jmp     short loc_124F9"], ["movzx~ebp,<TAG>", "jmp~FOO"]], [0, 0, 10, 0, 0, 3, 1, 1, 0, 2, 0.2, ["mov     tail, cs:nouser_alist", "test    tail, tail", "jz      short loc_12560"], ["mov~tail,<TAG>", "test~tail,tail", "jz~FOO"]], [0, 0, 14, 0, 0, 3, 1, 1, 0, 3, 0.13333333333333336, ["mov     tail, [tail+8]", "test    tail, tail", "jz      short loc_12520"], ["mov~tail,[tail+0]", "test~tail,tail", "jz~FOO"]], [0, 0, 2, 0, 0, 6, 0, 1, 0, -1, 0.030952380952380953, ["mov     eax, [pwent+10h]", "mov     [tail], eax", "mov     rax, cs:user_alist", "mov     cs:user_alist, tail", "mov     [tail+8], rax", "jmp     loc_1250F"], ["mov~eax,[pwent+0]", "mov~<TAG>,eax", "mov~rax,<TAG>", "mov~<TAG>,tail", "mov~[tail+0],rax", "jmp~FOO"]], [0, 0, 14, 0, 1, 5, 1, 2, 0, 4, 0.028571428571428574, ["lea     rdi, [tail+10h]; s1", "mov     rsi, user; s2", "call    _strcmp", "test    eax, eax", "jnz     short loc_124F0"], ["lea~rdi,[tail+0]", "mov~rsi,user", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 0, 4, 0.08571428571428572, ["cmp     [tail+10h], bpl", "jnz     short loc_124F0"], ["cmp~[tail+0],bpl", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 0, -1, 0.02142857142857143, ["mov     rax, tail"], ["mov~rax,tail"]], [0, 0, 9, 0, 1, 5, 1, 2, 0, 3, 0.04285714285714286, ["lea     rdi, [tail+10h]; s1", "mov     rsi, user; s2", "call    _strcmp", "test    eax, eax", "jnz     short loc_12538"], ["lea~rdi,[tail+0]", "mov~rsi,user", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 0, -1, 0.0, ["pop     tail", "pop     rbp", "pop     user", "retn"], ["pop~tail", "pop~rbp", "pop~user", "retn"]], [0, 0, 0, 0, 0, 5, 1, 0, 0, -1, 0.0, ["pop     tail", "xor     eax, eax", "pop     rbp", "pop     user", "retn"], ["pop~tail", "xor~eax,eax", "pop~rbp", "pop~user", "retn"]]], "func_feature": [6, 10, 19, 0, 16, 23, 0, 69, 0.06696, 2, 0], "succs": [[6, 7], [14], [1, 9], [13, 5], [3], [2, 3], [11], [2, 4], [11, 7], [12], [8, 12], [8, 10], [14], [5, 15], [], []], "fname": "getuidbyname", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 10, 0, 0, 2, 0, 1, 0, 0, 0.045454545454545456, ["cmp     edi, [tail]", "jnz     short loc_125F4"], ["cmp~edi,<TAG>", "jnz~FOO"]], [0, 0, 11, 0, 0, 6, 1, 1, 0, 4, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, cs:group_alist", "test    tail, tail", "jz      short loc_125FD"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,<TAG>", "test~tail,tail", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 2, 2, 0.05454545454545454, ["jmp     short loc_12650"], ["jmp~FOO"]], [0, 0, 4, 0, 2, 9, 0, 2, 2, 2, 0.09090909090909091, ["call    xmalloc", "lea     rdi, [rax+10h]; dest", "mov     [rax], ebp", "mov     rsi, name; src", "mov     tail, rax", "call    _strcpy", "mov     rax, cs:group_alist", "mov     cs:group_alist, match", "mov     [match+8], rax"], ["call~FOO", "lea~rdi,[rax+0]", "mov~<TAG>,ebp", "mov~rsi,name", "mov~tail,rax", "call~FOO", "mov~rax,<TAG>", "mov~<TAG>,match", "mov~[match+0],rax"]], [1, 0, 6, 0, 1, 6, 1, 2, 1, 3, 0.09090909090909091, ["mov     ebp, edi", "lea     r12, a8+6; \"\"", "call    _getgrgid", "test    grent, grent", "mov     edi, 18h", "jz      short loc_12628"], ["mov~ebp,edi", "lea~r12,<TAG>", "call~FOO", "test~grent,grent", "mov~edi,0", "jz~FOO"]], [1, 0, 5, 0, 1, 5, 1, 1, 2, 3, 0.0, ["mov     r12, [grent]", "mov     rdi, r12; s", "call    _strlen", "lea     rdi, [rax+18h]", "and     rdi, 0FFFFFFFFFFFFFFF8h; n"], ["mov~r12,<TAG>", "mov~rdi,r12", "call~FOO", "lea~rdi,[rax+0]", "and~rdi,0"]], [0, 0, 1, 0, 0, 2, 1, 1, 4, 0, 0.04090909090909091, ["xor     eax, eax", "jmp     short loc_1265A"], ["xor~eax,eax", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 1, 0.21818181818181817, ["cmp     byte ptr [match+10h], 0", "jz      short loc_12660"], ["cmp~[yte ptr [match+0],0", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 3, 2, 0.03636363636363636, ["cmp     [tail], edi", "jz      short loc_12650"], ["cmp~<TAG>,edi", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 2, 3, 0.07272727272727272, ["mov     tail, [tail+8]", "test    tail, tail", "jnz     short loc_125F0"], ["mov~tail,[tail+0]", "test~tail,tail", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 5, -1, 0.0, ["pop     match", "pop     rbp", "pop     r12", "retn"], ["pop~match", "pop~rbp", "pop~r12", "retn"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, -1, 0.04090909090909091, ["lea     rax, [match+10h]"], ["lea~rax,[match+0]"]]], "func_feature": [4, 5, 12, 0, 12, 17, 2, 43, 0.05758, 2, 0], "succs": [[9, 2], [0, 4], [7], [7], [3, 5], [3], [10], [11, 6], [9, 7], [8, 4], [], [10]], "fname": "getgroup", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 15, 0, 0, 7, 1, 1, 0, 0, 0.0, ["push    r12", "push    rbp", "mov     r12, group", "push    rbx", "mov     rbx, cs:group_alist", "test    tail, tail", "jz      short loc_126C0"], ["push~r12", "push~rbp", "mov~r12,group", "push~rbx", "mov~rbx,<TAG>", "test~tail,tail", "jz~FOO"]], [0, 0, 0, 0, 0, 5, 1, 0, 0, -1, 0.0, ["pop     tail", "xor     eax, eax", "pop     rbp", "pop     group", "retn"], ["pop~tail", "xor~eax,eax", "pop~rbp", "pop~group", "retn"]], [0, 0, 9, 0, 1, 5, 1, 2, 0, 3, 0.04285714285714286, ["lea     rdi, [tail+10h]; s1", "mov     rsi, group; s2", "call    _strcmp", "test    eax, eax", "jnz     short loc_126D8"], ["lea~rdi,[tail+0]", "mov~rsi,group", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.03571428571428572, ["mov     rax, cs:nogroup_alist", "mov     cs:nogroup_alist, tail", "mov     [tail+8], rax", "xor     eax, eax", "jmp     loc_126B2"], ["mov~rax,<TAG>", "mov~<TAG>,tail", "mov~[tail+0],rax", "xor~eax,eax", "jmp~FOO"]], [1, 0, 4, 0, 4, 14, 2, 5, 0, 1, 0.1523809523809524, ["mov     rdi, group; name", "call    _getgrnam", "mov     rdi, group; s", "mov     rbp, rax", "call    _strlen", "lea     rdi, [rax+18h]", "and     rdi, 0FFFFFFFFFFFFFFF8h; n", "call    xmalloc", "lea     rdi, [rax+10h]; dest", "mov     rsi, group; src", "mov     tail, rax", "call    _strcpy", "test    grent, grent", "jz      short loc_12750"], ["mov~rdi,group", "call~FOO", "mov~rdi,group", "mov~rbp,rax", "call~FOO", "lea~rdi,[rax+0]", "and~rdi,0", "call~FOO", "lea~rdi,[rax+0]", "mov~rsi,group", "mov~tail,rax", "call~FOO", "test~grent,grent", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 0, 3, 0.13333333333333336, ["cmp     [tail+10h], bpl", "jnz     short loc_126D8"], ["cmp~[tail+0],bpl", "jnz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 0, 4, 0.1142857142857143, ["movzx   ebp, byte ptr [group]", "jmp     short loc_126E1"], ["movzx~ebp,<TAG>", "jmp~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 0, 2, 0.0761904761904762, ["mov     tail, [tail+8]", "test    tail, tail", "jz      short loc_12700"], ["mov~tail,[tail+0]", "test~tail,tail", "jz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 0, 5, 0.01666666666666667, ["movzx   ebp, byte ptr [group]", "jmp     short loc_12699"], ["movzx~ebp,<TAG>", "jmp~FOO"]], [0, 0, 10, 0, 0, 3, 1, 1, 0, 2, 0.2, ["mov     tail, cs:nogroup_alist", "test    tail, tail", "jz      short loc_12700"], ["mov~tail,<TAG>", "test~tail,tail", "jz~FOO"]], [0, 0, 14, 0, 0, 3, 1, 1, 0, 3, 0.13333333333333336, ["mov     tail, [tail+8]", "test    tail, tail", "jz      short loc_126C0"], ["mov~tail,[tail+0]", "test~tail,tail", "jz~FOO"]], [0, 0, 2, 0, 0, 6, 0, 1, 0, -1, 0.030952380952380953, ["mov     eax, [grent+10h]", "mov     [tail], eax", "mov     rax, cs:group_alist", "mov     cs:group_alist, tail", "mov     [tail+8], rax", "jmp     loc_126AF"], ["mov~eax,[grent+0]", "mov~<TAG>,eax", "mov~rax,<TAG>", "mov~<TAG>,tail", "mov~[tail+0],rax", "jmp~FOO"]], [0, 0, 14, 0, 1, 5, 1, 2, 0, 4, 0.028571428571428574, ["lea     rdi, [tail+10h]; s1", "mov     rsi, group; s2", "call    _strcmp", "test    eax, eax", "jnz     short loc_12690"], ["lea~rdi,[tail+0]", "mov~rsi,group", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 0, 4, 0.08571428571428572, ["cmp     [tail+10h], bpl", "jnz     short loc_12690"], ["cmp~[tail+0],bpl", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 0, -1, 0.02142857142857143, ["mov     rax, tail"], ["mov~rax,tail"]], [0, 0, 0, 0, 0, 4, 0, 0, 0, -1, 0.0, ["pop     tail", "pop     rbp", "pop     group", "retn"], ["pop~tail", "pop~rbp", "pop~group", "retn"]]], "func_feature": [6, 10, 19, 0, 16, 23, 0, 69, 0.06696, 2, 0], "succs": [[8, 9], [], [1, 7], [15], [11, 3], [2, 7], [5], [4, 5], [13], [4, 6], [9, 13], [14], [10, 14], [10, 12], [15], []], "fname": "getgidbyname", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[3, 0, 2, 5, 0, 12, 1, 1, 0, 0, 0.06666666666666667, ["mov     rax, i", "sub     p, 1", "mul     rsi", "shr     rdx, 3", "lea     rax, [rdx+rdx*4]", "add     rax, rax", "sub     i, rax", "add     edi, 30h ; '0'", "test    rdx, rdx", "mov     [p], dil", "mov     rdi, rdx", "jnz     short loc_127A0"], ["mov~rax,i", "sub~p,0", "mul~,rsi", "shr~rdx,0", "lea~rax,<TAG>", "add~rax,rax", "sub~i,rax", "add~edi,0", "test~rdx,rdx", "mov~<TAG>,dil", "mov~rdi,rdx", "jnz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 1, -1, 0.06666666666666667, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, -1, 0.0, ["mov     rax, p", "retn"], ["mov~rax,p", "retn"]], [2, 0, 0, 1, 0, 4, 0, 0, 2, 0, 0.0, ["sub     rcx, 2", "mov     byte ptr [rsi-1], 2Dh ; '-'", "mov     rax, p", "retn"], ["sub~rcx,0", "mov~[yte ptr [rsi-1]+0],0", "mov~rax,p", "retn"]], [2, 0, 3, 3, 0, 14, 1, 1, 1, 1, 0.1, ["mov     rax, i", "lea     rsi, [p-1]", "imul    r9", "mov     rax, i", "sar     rax, 3Fh", "sar     rdx, 2", "sub     rdx, rax", "lea     rax, [rdx+rdx*4]", "lea     eax, [r8+rax*2]", "sub     eax, edi", "test    rdx, rdx", "mov     i, rdx", "mov     [rcx-1], al", "jnz     short loc_127D0"], ["mov~rax,i", "lea~rsi,[p-1]+0]", "imul~,r9", "mov~rax,i", "sar~rax,0", "sar~rdx,0", "sub~rdx,rax", "lea~rax,<TAG>", "lea~eax,<TAG>", "sub~eax,edi", "test~rdx,rdx", "mov~i,rdx", "mov~[rcx-1]+0],al", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 2, 2, 0.0, ["mov     rcx, p"], ["mov~rcx,p"]], [4, 0, 6, 0, 0, 7, 1, 1, 0, 2, 0.0, ["test    i, i", "lea     rcx, [buf+14h]", "mov     byte ptr [buf+14h], 0", "mov     r9, 6666666666666667h", "mov     buf, 0CCCCCCCCCCCCCCCDh", "mov     r8d, 30h ; '0'", "js      short loc_127D3"], ["test~i,i", "lea~rcx,[buf+0]", "mov~[yte ptr [buf+0],0", "mov~r9,0", "mov~buf,0", "mov~r8d,0", "js~FOO"]]], "func_feature": [0, 3, 3, 0, 7, 8, 1, 41, 0.03333, 0, 9], "succs": [[0, 2], [0], [], [], [3, 5], [4], [1, 4]], "fname": "imaxtostr", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, p", "retn"], ["mov~rax,p", "retn"]], [3, 0, 2, 5, 0, 12, 1, 1, 1, 0, 0.5, ["mov     rax, i", "sub     p, 1", "mul     rsi", "shr     rdx, 3", "lea     rax, [rdx+rdx*4]", "add     rax, rax", "sub     i, rax", "add     edi, 30h ; '0'", "test    rdx, rdx", "mov     [p], dil", "mov     rdi, rdx", "jnz     short loc_12828"], ["mov~rax,i", "sub~p,0", "mul~,rsi", "shr~rdx,0", "lea~rax,<TAG>", "add~rax,rax", "sub~i,rax", "add~edi,0", "test~rdx,rdx", "mov~<TAG>,dil", "mov~rdi,rdx", "jnz~FOO"]], [2, 0, 2, 0, 0, 4, 0, 0, 0, 0, 0.0, ["lea     p, [buf+14h]", "mov     byte ptr [buf+14h], 0", "mov     buf, 0CCCCCCCCCCCCCCCDh", "nop     word ptr [rax+rax+00h]"], ["lea~p,[buf+0]", "mov~[yte ptr [buf+0],0", "mov~buf,0", "nop~[ord ptr [rax+0]"]]], "func_feature": [0, 1, 1, 0, 3, 3, 10, 18, 0.16667, 0, 5], "succs": [[], [0, 1], [1]], "fname": "umaxtostr", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 1, 30, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     dword ptr [r14], 0FFFDh", "mov     edx, 1"], ["mov~<TAG>,<STR>", "mov~edx,0"]], [1, 0, 30, 0, 1, 4, 0, 2, 10, 5, 0.017857142857142856, ["call    _wcwidth", "cmp     eax, 0FFFFFFFFh", "movsxd  rdx, eax", "jnz     short loc_12B87"], ["call~FOO", "cmp~eax,0", "movsxd~rdx,eax", "jnz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 1, 5, -1, 0.0012531328320802004, ["jmp     loc_12A2F"], ["jmp~FOO"]], [1, 0, 27, 0, 0, 4, 2, 1, 4, 3, 0.013157894736842105, ["xor     r13d, r13d", "test    bl, 1", "mov     src_chars, r14", "jnz     mbsalign_unibyte"], ["xor~r13d,r13d", "test~bl,0", "mov~src_chars,r14", "jnz~FOO"]], [2, 0, 1, 0, 0, 4, 1, 1, 4, -1, 0.0021929824561403508, ["mov     [rsp+68h+str_wc], 0", "xor     r13d, r13d", "mov     width, 0FFFFFFFFFFFFFFFFh", "jmp     mbsalign_cleanup"], ["mov~<TAG>,0", "xor~r13d,r13d", "mov~width,0", "jmp~FOO"]], [1, 0, 27, 0, 0, 2, 1, 1, 3, 4, 0.005952380952380952, ["test    bl, 1", "jnz     loc_12897"], ["test~bl,0", "jnz~FOO"]], [0, 0, 48, 0, 1, 6, 1, 2, 4, 4, 0.02882205513784461, ["mov     rsi, [rsp+68h+str_to_print]; s", "mov     rdi, str_wc_0; pwcs", "mov     rdx, src_chars; n", "call    _mbstowcs", "test    rax, rax", "jz      short loc_12ADE"], ["mov~rsi,[rsp+0]", "mov~rdi,str_wc_0", "mov~rdx,src_chars", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 52, 0, 1, 8, 1, 2, 3, 4, 0.02819548872180451, ["lea     r15, [rax+1]", "lea     rax, ds:0[src_chars*4]", "mov     rdi, rax; size", "mov     [rsp+68h+conversion], rax", "call    malloc", "test    rax, rax", "mov     [rsp+68h+str_wc], rax", "jz      loc_12C07"], ["lea~r15,[rax+0]", "lea~rax,<TAG>", "mov~rdi,rax", "mov~[rsp+0],rax", "call~FOO", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [2, 1, 3, 2, 0, 9, 2, 1, 14, -1, 0.0006265664160401002, ["add     rax, 1", "test    rdx, rdx", "mov     byte ptr [rax-1], 20h ; ' '", "setnz   sil", "cmp     dest_end, rax", "setnbe  cl", "sub     rdx, 1", "test    sil, cl", "jnz     short loc_12970"], ["add~rax,0", "test~rdx,rdx", "mov~[yte ptr [rax-1]+0],<STR>", "setnz~sil", "cmp~dest_end,rax", "setnbe~cl", "sub~rdx,0", "test~sil,cl", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 13, -1, 0.015977443609022556, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 34, 0, 1, 7, 1, 2, 8, 4, 0.02568922305764411, ["lea     rax, [r13+1]", "mov     rdi, rax; size", "mov     [rsp+68h+conversion], rax", "call    malloc", "test    rax, rax", "mov     r13, rax", "jnz     loc_12B3E"], ["lea~rax,[r13+0]", "mov~rdi,rax", "mov~[rsp+0],rax", "call~FOO", "test~rax,rax", "mov~r13,rax", "jnz~FOO"]], [0, 0, 36, 0, 0, 3, 0, 0, 7, 3, 0.07738095238095238, ["mov     rax, [width]", "cmp     rax, n_cols", "jnb     loc_129B8"], ["mov~rax,<TAG>", "cmp~rax,n_cols", "jnb~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 12, -1, 0.002506265664160401, ["mov     byte ptr [rax], 0"], ["mov~<TAG>,0"]], [1, 0, 5, 1, 1, 11, 0, 1, 11, -1, 0.06265664160401002, ["mov     rdx, dest_end", "mov     rsi, [rsp+68h+str_to_print]; src", "mov     byte ptr [rbp+0], 0", "sub     rdx, rbp", "mov     rdi, rbp; dest", "cmp     space_left, r14", "cmova   space_left, r14; n", "call    _mempcpy", "cmp     dest_end, rax", "lea     rdx, [r15-1]", "jbe     short loc_1298E"], ["mov~rdx,dest_end", "mov~rsi,[rsp+0]", "mov~[yte ptr [rbp+0],0", "sub~rdx,rbp", "mov~rdi,rbp", "cmp~space_left,r14", "cmova~space_left,r14", "call~FOO", "cmp~dest_end,rax", "lea~rdx,[r15-1]+0]", "jbe~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 12, -1, 0.03132832080200501, ["test    r15, r15", "jz      short loc_1298E"], ["test~r15,r15", "jz~FOO"]], [0, 0, 9, 0, 0, 4, 0, 0, 10, -1, 0.11278195488721804, ["lea     rbx, [dest+rax-1]", "lea     rax, [rdx-1]", "cmp     dest, dest_end", "jnb     short loc_1293E"], ["lea~rbx,[dest+0]", "lea~rax,[rdx-1]+0]", "cmp~dest,dest_end", "jnb~FOO"]], [0, 0, 10, 0, 0, 3, 1, 1, 9, -1, 0.13157894736842105, ["mov     rax, [rsp+68h+dest_size]", "test    rax, rax", "jz      mbsalign_cleanup"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [2, 0, 57, 1, 1, 17, 1, 2, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, width", "push    rbp", "push    rbx", "mov     ebx, r9d", "mov     rbp, dest", "sub     rsp, 38h", "mov     [rsp+68h+str_to_print], src_0", "mov     [rsp+68h+dest_size], dest_size_0", "mov     [rsp+68h+align], r8d", "call    _strlen", "test    bl, 2", "mov     r14, rax", "jz      loc_12A00"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,width", "push~rbp", "push~rbx", "mov~ebx,r9d", "mov~rbp,dest", "sub~rsp,0", "mov~[rsp+0],src_0", "mov~[rsp+0],dest_size_0", "mov~[rsp+0],r8d", "call~FOO", "test~bl,0", "mov~r14,rax", "jz~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 11, -1, 0.02882205513784461, ["test    rdx, rdx", "jz      short loc_1293E"], ["test~rdx,rdx", "jz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 12, -1, 0.014724310776942355, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 25, 0, 0, 3, 1, 0, 1, 3, 0.02631578947368421, ["mov     r15, r14", "mov     [rsp+68h+str_wc], 0", "xor     r13d, r13d"], ["mov~r15,r14", "mov~<TAG>,0", "xor~r13d,r13d"]], [1, 0, 56, 0, 1, 4, 0, 1, 1, 4, 0.009711779448621553, ["mov     r13, rax", "call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "jbe     loc_12897"], ["mov~r13,rax", "call~FOO", "cmp~rax,0", "jbe~FOO"]], [1, 0, 55, 0, 1, 6, 2, 2, 2, 5, 0.018796992481203006, ["mov     rsi, [rsp+68h+str_to_print]; s", "xor     edx, edx; n", "xor     edi, edi; pwcs", "call    _mbstowcs", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_12A50"], ["mov~rsi,[rsp+0]", "xor~edx,edx", "xor~edi,edi", "call~FOO", "cmp~rax,0", "jnz~FOO"]], [2, 0, 46, 0, 0, 7, 1, 1, 5, 5, 0.03320802005012531, ["mov     rdx, [rsp+68h+str_wc]", "mov     rcx, [rsp+68h+conversion]", "mov     byte ptr [rsp+68h+conversion], 0", "mov     dword ptr [rdx+rcx-4], 0", "mov     edi, [rdx]; wc", "test    edi, edi", "jz      loc_12BB6"], ["mov~rdx,<TAG>", "mov~rcx,[rsp+0]", "mov~[yte ptr [rsp+0],0", "mov~[word ptr [rdx+0],0", "mov~edi,<TAG>", "test~edi,edi", "jz~FOO"]], [0, 0, 35, 0, 1, 5, 0, 2, 9, 5, 0.018327067669172935, ["mov     rdi, [rsp+68h+str_wc]; s", "mov     rsi, src_chars; n", "call    _wcswidth", "movsxd  src_chars, eax", "jmp     loc_12B14"], ["mov~rdi,<TAG>", "mov~rsi,src_chars", "call~FOO", "movsxd~src_chars,eax", "jmp~FOO"]], [1, 1, 44, 1, 0, 5, 1, 1, 8, 6, 0.01331453634085213, ["mov     dword ptr [rdx], 0FFFDh", "add     rdx, 4", "mov     edi, [rdx]", "test    edi, edi", "jz      loc_12C1B"], ["mov~<TAG>,<STR>", "add~rdx,0", "mov~edi,<TAG>", "test~edi,edi", "jz~FOO"]], [0, 0, 44, 0, 0, 1, 0, 0, 6, 7, 0.013157894736842105, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 24, 0, 0, 3, 0, 0, 2, 2, 0.1575814536340852, ["mov     rax, [width]", "cmp     rax, n_cols", "jnb     loc_129BB"], ["mov~rax,<TAG>", "cmp~rax,n_cols", "jnb~FOO"]], [0, 0, 25, 0, 0, 3, 1, 1, 5, 3, 0.007518796992481203, ["mov     src_chars, r14", "xor     r13d, r13d", "jmp     mbsalign_unibyte"], ["mov~src_chars,r14", "xor~r13d,r13d", "jmp~FOO"]], [1, 0, 25, 0, 1, 8, 0, 2, 11, 3, 0.046992481203007516, ["mov     rdx, [rsp+68h+conversion]; n", "mov     rsi, [rsp+68h+str_wc]; pwcs", "mov     rdi, str_to_print_0; s", "mov     dword ptr [r14], 0", "call    _wcstombs", "mov     [rsp+68h+str_to_print], str_to_print_0", "mov     r14, n_used_bytes", "jmp     mbsalign_unibyte"], ["mov~rdx,[rsp+0]", "mov~rsi,<TAG>", "mov~rdi,str_to_print_0", "mov~<TAG>,0", "call~FOO", "mov~[rsp+0],str_to_print_0", "mov~r14,n_used_bytes", "jmp~FOO"]], [1, 0, 26, 0, 0, 2, 1, 1, 9, 3, 0.045426065162907266, ["test    bl, 1", "jnz     mbsalign_unibyte"], ["test~bl,0", "jnz~FOO"]], [0, 0, 26, 0, 0, 1, 0, 1, 10, 4, 0.013471177944862155, ["jmp     short loc_12B91"], ["jmp~FOO"]], [1, 0, 30, 1, 0, 5, 1, 1, 12, 4, 0.0009398496240601503, ["add     r14, 4", "mov     edi, [r14]; c", "mov     r15, rdx", "test    edi, edi", "jz      short loc_12B91"], ["add~r14,0", "mov~edi,<TAG>", "mov~r15,rdx", "test~edi,edi", "jz~FOO"]], [0, 0, 30, 1, 0, 3, 0, 0, 11, 4, 0.022869674185463658, ["add     rdx, r15", "cmp     [rsp+68h+str_to_print], rdx", "jnb     short loc_12B60"], ["add~rdx,r15", "cmp~[rsp+0],rdx", "jnb~FOO"]], [1, 0, 0, 1, 2, 13, 0, 2, 5, -1, 0.0, ["mov     rdi, [rsp+68h+str_wc]; ptr", "call    free", "mov     rdi, newstr; ptr", "call    free", "add     rsp, 38h", "mov     rax, ret", "pop     rbx", "pop     rbp", "pop     ret", "pop     newstr", "pop     r14", "pop     r15", "retn"], ["mov~rdi,<TAG>", "call~FOO", "mov~rdi,newstr", "call~FOO", "add~rsp,0", "mov~rax,ret", "pop~rbx", "pop~rbp", "pop~ret", "pop~newstr", "pop~r14", "pop~r15", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 10, -1, 0.0043859649122807015, ["mov     width, 0FFFFFFFFFFFFFFFFh", "jmp     mbsalign_cleanup"], ["mov~width,0", "jmp~FOO"]], [0, 0, 20, 0, 0, 3, 1, 1, 4, 0, 0.0021929824561403508, ["mov     rax, n_cols", "xor     edx, edx", "jmp     loc_128B7"], ["mov~rax,n_cols", "xor~edx,edx", "jmp~FOO"]], [0, 0, 22, 0, 0, 2, 0, 0, 3, 1, 0.13596491228070173, ["cmp     n_cols, rax", "jnb     loc_12C2F"], ["cmp~n_cols,rax", "jnb~FOO"]], [0, 0, 20, 0, 0, 2, 1, 0, 3, -1, 0.07142857142857141, ["mov     r14, n_used_bytes", "xor     edx, edx"], ["mov~r14,n_used_bytes", "xor~edx,edx"]], [0, 0, 23, 0, 0, 1, 1, 0, 8, 2, 0.05419799498746867, ["xor     r13d, r13d"], ["xor~r13d,r13d"]], [2, 1, 7, 2, 0, 9, 2, 1, 13, -1, 0.0018796992481203006, ["add     rbp, 1", "mov     byte ptr [rbp-1], 20h ; ' '", "cmp     dest_end, rbp", "setnbe  sil", "test    rax, rax", "setnz   dl", "sub     rax, 1", "test    sil, dl", "jnz     short loc_12920"], ["add~rbp,0", "mov~[yte ptr [rbp-1]+0],<STR>", "cmp~dest_end,rbp", "setnbe~sil", "test~rax,rax", "setnz~dl", "sub~rax,0", "test~sil,dl", "jnz~FOO"]], [0, 0, 19, 0, 0, 4, 1, 1, 4, -1, 0.07550125313283207, ["mov     [width], rax", "mov     eax, [rsp+68h+align]", "test    eax, eax", "jz      loc_129DD"], ["mov~<TAG>,rax", "mov~eax,[rsp+0]", "test~eax,eax", "jz~FOO"]], [0, 0, 37, 0, 1, 5, 0, 1, 6, 4, 0.03070175438596491, ["mov     rsi, src_chars; n", "mov     rdi, rdx; s", "call    _wcswidth", "movsxd  src_chars, eax", "nop     dword ptr [rax+00h]"], ["mov~rsi,src_chars", "mov~rdi,rdx", "call~FOO", "movsxd~src_chars,eax", "nop~[word ptr [rax+0]"]], [1, 0, 17, 0, 0, 3, 1, 1, 5, -1, 0.09837092731829573, ["xor     r15d, r15d", "cmp     eax, 1", "jz      short loc_128DB"], ["xor~r15d,r15d", "cmp~eax,0", "jz~FOO"]], [0, 0, 19, 1, 0, 7, 1, 1, 4, -1, 0.12061403508771928, ["sub     rax, n_cols", "mov     rdx, rax", "mov     n_spaces, n_cols", "mov     [width], rax", "mov     eax, [rsp+68h+align]", "test    eax, eax", "jnz     loc_128C7"], ["sub~rax,n_cols", "mov~rdx,rax", "mov~n_spaces,n_cols", "mov~<TAG>,rax", "mov~eax,[rsp+0]", "test~eax,eax", "jnz~FOO"]], [1, 0, 38, 0, 1, 6, 0, 2, 9, 4, 0.04307644110275688, ["mov     rdi, [rsp+68h+str_wc]; s", "mov     rsi, src_chars; n", "call    _wcswidth", "cmp     byte ptr [rsp+68h+conversion], 0", "movsxd  src_chars, eax", "jz      loc_12BC8"], ["mov~rdi,<TAG>", "mov~rsi,src_chars", "call~FOO", "cmp~[yte ptr [rsp+0],0", "movsxd~src_chars,eax", "jz~FOO"]], [0, 0, 16, 0, 0, 3, 1, 1, 5, -1, 0.08709273182957393, ["mov     n_cols, rdx", "xor     edx, edx", "jmp     loc_128DB"], ["mov~n_cols,rdx", "xor~edx,edx", "jmp~FOO"]], [0, 0, 31, 0, 0, 7, 2, 1, 9, 5, 0.03195488721804511, ["mov     r14, [rsp+68h+str_wc]", "mov     str_to_print_0, [width]", "xor     r15d, r15d", "mov     edi, [r14]", "mov     [rsp+68h+str_to_print], rax", "test    edi, edi", "jnz     short loc_12B6E"], ["mov~r14,<TAG>", "mov~str_to_print_0,<TAG>", "xor~r15d,r15d", "mov~edi,<TAG>", "mov~[rsp+0],rax", "test~edi,edi", "jnz~FOO"]], [1, 0, 34, 1, 2, 11, 3, 3, 10, 4, 0.041040100250626564, ["mov     rsi, [rsp+68h+str_wc]; pwcs", "xor     edx, edx; n", "xor     edi, edi; s", "call    _wcstombs", "add     rax, 1", "mov     rdi, rax; size", "mov     [rsp+68h+conversion], rax", "call    malloc", "test    rax, rax", "mov     r13, rax", "jz      loc_12BF2"], ["mov~rsi,<TAG>", "xor~edx,edx", "xor~edi,edi", "call~FOO", "add~rax,0", "mov~rdi,rax", "mov~[rsp+0],rax", "call~FOO", "test~rax,rax", "mov~r13,rax", "jz~FOO"]], [1, 0, 44, 1, 0, 4, 1, 1, 8, 5, 0.03430451127819549, ["add     rdx, 4", "mov     edi, [rdx]", "test    edi, edi", "jnz     short loc_12AB0"], ["add~rdx,0", "mov~edi,<TAG>", "test~edi,edi", "jnz~FOO"]], [2, 0, 16, 1, 0, 4, 1, 0, 6, -1, 0.0, ["mov     r15, rdx", "and     edx, 1", "shr     r15, 1", "add     rdx, r15"], ["mov~r15,rdx", "and~edx,0", "shr~r15,0", "add~rdx,r15"]], [0, 0, 44, 0, 1, 5, 1, 2, 7, 6, 0.040413533834586464, ["mov     [rsp+68h+var_40], rdx", "call    _iswprint", "test    eax, eax", "mov     rdx, [rsp+68h+var_40]", "jnz     short loc_12AF0"], ["mov~[rsp+0],rdx", "call~FOO", "test~eax,eax", "mov~rdx,[rsp+0]", "jnz~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 9, 7, 0.0018796992481203006, ["mov     byte ptr [rsp+68h+conversion], 1", "jmp     short loc_12AB0"], ["mov~[yte ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 15, 0, 0, 3, 1, 1, 6, -1, 0.1770050125313283, ["test    bl, 4", "lea     width, [rdx+r14]", "jz      short loc_128E9"], ["test~bl,0", "lea~width,<TAG>", "jz~FOO"]], [0, 0, 14, 0, 0, 2, 1, 0, 7, -1, 0.0, ["mov     r12, r14", "xor     edx, edx"], ["mov~r12,r14", "xor~edx,edx"]], [1, 0, 13, 0, 0, 2, 1, 1, 7, -1, 0.1607142857142857, ["and     ebx, 8", "jnz     loc_129F0"], ["and~ebx,0", "jnz~FOO"]], [0, 0, 11, 1, 0, 1, 0, 0, 8, -1, 0.06923558897243107, ["add     r12, r15"], ["add~r12,r15"]], [0, 0, 11, 0, 0, 2, 1, 1, 8, -1, 0.06923558897243107, ["xor     r15d, r15d", "jmp     loc_128F5"], ["xor~r15d,r15d", "jmp~FOO"]]], "func_feature": [17, 42, 55, 1, 58, 91, 1, 251, 0.04104, 0, 15], "succs": [[33], [0, 33], [4], [2, 27], [34], [20, 4], [28, 23], [3, 6], [8, 12], [8], [30, 47], [10, 39], [34], [12, 14], [9, 12], [18, 13], [34, 15], [20, 21], [19, 13], [40], [27], [20, 22], [5, 7], [26, 42], [48], [24, 52], [51], [37, 38], [27], [27], [35, 27], [29], [1, 29], [32, 29], [], [34], [41], [44, 36], [41], [37], [40, 13], [43, 46], [11], [50, 53], [43, 46], [48, 11], [53], [1, 31], [30, 47], [51, 45], [53], [25, 49], [51], [54, 55], [55], [56, 57], [16], [16]], "fname": "mbsalign", "n_num": 58}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 68, 0, 0, 3, 1, 1, 0, 0, 0.0750292654375183, ["mov     r8d, [rsp+88h+var_44]", "test    r8d, r8d", "jz      short loc_13118"], ["mov~r8d,[rsp+0]", "test~r8d,r8d", "jz~FOO"]], [1, 0, 68, 1, 2, 11, 3, 3, 12, 5, 0.04166666666666667, ["mov     rsi, [rsp+88h+ptr]; pwcs", "xor     edx, edx; n", "xor     edi, edi; s", "call    _wcstombs", "add     rax, 1", "mov     rdi, rax; size", "mov     [rsp+88h+n], rax", "call    malloc", "test    rax, rax", "mov     r13, rax", "jz      loc_130F9"], ["mov~rsi,[rsp+0]", "xor~edx,edx", "xor~edi,edi", "call~FOO", "add~rax,0", "mov~rdi,rax", "mov~[rsp+0],rax", "call~FOO", "test~rax,rax", "mov~r13,rax", "jz~FOO"]], [0, 0, 68, 0, 1, 7, 1, 2, 10, 5, 0.14640035118525022, ["lea     rax, [r13+1]", "mov     rdi, rax; size", "mov     [rsp+88h+n], rax", "call    malloc", "test    rax, rax", "mov     r13, rax", "jnz     loc_12FDF"], ["lea~rax,[r13+0]", "mov~rdi,rax", "mov~[rsp+0],rax", "call~FOO", "test~rax,rax", "mov~r13,rax", "jnz~FOO"]], [0, 0, 68, 0, 0, 3, 1, 1, 7, 12, 0.2358428446005268, ["mov     rcx, rdx", "xor     edx, edx", "jmp     loc_12D24"], ["mov~rcx,rdx", "xor~edx,edx", "jmp~FOO"]], [0, 0, 68, 0, 0, 5, 1, 1, 6, 13, 0.20602868012876793, ["mov     rcx, [rsp+88h+width]", "mov     [rcx], rax", "mov     eax, [rsp+88h+align]", "test    eax, eax", "jz      loc_12E7E"], ["mov~rcx,[rsp+0]", "mov~<TAG>,rax", "mov~eax,[rsp+0]", "test~eax,eax", "jz~FOO"]], [0, 0, 68, 1, 0, 8, 1, 1, 6, 13, 0.2775095112671934, ["mov     rcx, [rsp+88h+width]", "sub     rax, r15", "mov     rdx, rax", "mov     rax, r15", "mov     [rcx], rax", "mov     eax, [rsp+88h+align]", "test    eax, eax", "jnz     loc_12D11"], ["mov~rcx,[rsp+0]", "sub~rax,r15", "mov~rdx,rax", "mov~rax,r15", "mov~<TAG>,rax", "mov~eax,[rsp+0]", "test~eax,eax", "jnz~FOO"]], [2, 1, 68, 2, 0, 9, 2, 1, 15, 10, 0.014486391571553995, ["add     rdi, 1; dest", "mov     byte ptr [rdi-1], 20h ; ' '", "cmp     r14, rdi", "setnbe  r8b", "test    rax, rax", "setnz   dl", "sub     rax, 1", "test    r8b, dl", "jnz     short loc_12D68"], ["add~rdi,0", "mov~[yte ptr [rdi-1]+0],<STR>", "cmp~r14,rdi", "setnbe~r8b", "test~rax,rax", "setnz~dl", "sub~rax,0", "test~r8b,dl", "jnz~FOO"]], [0, 0, 68, 0, 0, 1, 0, 0, 14, 11, 0.013608428446005268, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 68, 0, 0, 4, 0, 0, 9, 3, 0.23928153350892598, ["mov     rax, [rsp+88h+width]", "mov     rax, [rax]", "cmp     rax, r15", "jnb     loc_12E50"], ["mov~rax,[rsp+0]", "mov~rax,<TAG>", "cmp~rax,r15", "jnb~FOO"]], [1, 0, 68, 0, 1, 7, 0, 2, 11, 4, 0.0585308750365818, ["mov     rdi, [rsp+88h+ptr]; s", "mov     rsi, r15; n", "mov     r13, [rsp+88h+var_40]", "call    _wcswidth", "cmp     byte ptr [rsp+88h+n], 0", "movsxd  r15, eax", "jz      loc_130CB"], ["mov~rdi,[rsp+0]", "mov~rsi,r15", "mov~r13,[rsp+0]", "call~FOO", "cmp~[yte ptr [rsp+0],0", "movsxd~r15,eax", "jz~FOO"]], [0, 0, 68, 0, 1, 4, 0, 1, 8, 4, 0.18437225636523266, ["mov     rsi, r15; n", "mov     rdi, rdx; s", "call    _wcswidth", "movsxd  r15, eax"], ["mov~rsi,r15", "mov~rdi,rdx", "call~FOO", "movsxd~r15,eax"]], [1, 0, 68, 0, 1, 4, 1, 2, 11, 6, 0.0044263974246414985, ["mov     byte ptr [rsp+88h+n], 1", "call    _iswprint", "test    eax, eax", "jz      short loc_12F62"], ["mov~[yte ptr [rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 1, 68, 1, 0, 5, 1, 1, 10, 7, 0.038959613696224756, ["mov     dword ptr [r13+0], 0FFFDh", "add     r13, 4", "mov     edi, [r13+0]; wc", "test    edi, edi", "jz      loc_13139"], ["mov~[word ptr [r13+0],<STR>", "add~r13,0", "mov~edi,[r13+0]", "test~edi,edi", "jz~FOO"]], [4, 1, 68, 1, 0, 25, 5, 0, 0, 6, 0.0, ["push    r15", "push    r14", "mov     eax, ecx", "push    r13", "push    r12", "and     eax, 2", "push    rbp", "push    rbx", "xor     r13d, r13d", "sub     rsp, 58h", "mov     r14, [width_0]", "mov     [rsp+88h+var_5C], eax", "mov     eax, ecx", "mov     [rsp+88h+src], src_0", "and     eax, 1", "mov     [rsp+88h+align], edx", "mov     [rsp+88h+width], width_0", "mov     [rsp+88h+var_44], eax", "mov     eax, ecx", "and     ecx, 8", "and     eax, 4", "mov     [rsp+88h+size], r14", "mov     [rsp+88h+var_54], ecx", "mov     [rsp+88h+var_58], eax", "nop     dword ptr [rax+00000000h]"], ["push~r15", "push~r14", "mov~eax,ecx", "push~r13", "push~r12", "and~eax,0", "push~rbp", "push~rbx", "xor~r13d,r13d", "sub~rsp,<STR>", "mov~r14,<TAG>", "mov~[rsp+0],eax", "mov~eax,ecx", "mov~[rsp+0],src_0", "and~eax,0", "mov~[rsp+0],edx", "mov~[rsp+0],width_0", "mov~[rsp+0],eax", "mov~eax,ecx", "and~ecx,0", "and~eax,0", "mov~[rsp+0],r14", "mov~[rsp+0],ecx", "mov~[rsp+0],eax", "nop~[word ptr [rax+0]"]], [0, 0, 68, 0, 0, 3, 1, 1, 6, 0, 0.0021949078138718174, ["mov     rax, r15", "xor     edx, edx", "jmp     loc_12CFD"], ["mov~rax,r15", "xor~edx,edx", "jmp~FOO"]], [0, 0, 68, 0, 0, 2, 1, 0, 5, 14, 0.18824992683640623, ["mov     r12, rax", "xor     edx, edx"], ["mov~r12,rax", "xor~edx,edx"]], [0, 0, 68, 0, 0, 3, 1, 1, 6, 4, 0.01262071992976295, ["mov     r9d, [rsp+88h+var_44]", "test    r9d, r9d", "jz      loc_12E20"], ["mov~r9d,[rsp+0]", "test~r9d,r9d", "jz~FOO"]], [0, 0, 68, 0, 1, 8, 1, 2, 5, 5, 0.33099209833187004, ["lea     r15, [rax+1]", "lea     rax, ds:0[r15*4]", "mov     rdi, rax; size", "mov     [rsp+88h+n], rax", "call    malloc", "test    rax, rax", "mov     [rsp+88h+ptr], rax", "jz      loc_13088"], ["lea~r15,[rax+0]", "lea~rax,<TAG>", "mov~rdi,rax", "mov~[rsp+0],rax", "call~FOO", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 68, 0, 1, 6, 2, 2, 4, 5, 0.3656716417910448, ["mov     rsi, [rsp+88h+src]; s", "xor     edx, edx; n", "xor     edi, edi; pwcs", "call    _mbstowcs", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_12EF0"], ["mov~rsi,[rsp+0]", "xor~edx,edx", "xor~edi,edi", "call~FOO", "cmp~rax,0", "jnz~FOO"]], [1, 0, 68, 1, 0, 4, 1, 1, 10, 5, 0.05896985659935616, ["add     r13, 4", "mov     edi, [r13+0]", "test    edi, edi", "jnz     short loc_12F59"], ["add~r13,0", "mov~edi,[r13+0]", "test~edi,edi", "jnz~FOO"]], [0, 0, 68, 0, 1, 3, 1, 2, 9, 6, 0.09174714661984197, ["call    _iswprint", "test    eax, eax", "jnz     short loc_12F88"], ["call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 68, 0, 1, 9, 0, 2, 13, 3, 0.12269534679543459, ["mov     rdx, [rsp+88h+n]; n", "mov     dword ptr [r12], 0", "mov     rdi, r13; s", "call    _wcstombs", "mov     r12, rax", "mov     rax, [rsp+88h+width]", "mov     rsi, r13", "mov     rax, [rax]", "jmp     loc_12CEF"], ["mov~rdx,[rsp+0]", "mov~<TAG>,0", "mov~rdi,r13", "call~FOO", "mov~r12,rax", "mov~rax,[rsp+0]", "mov~rsi,r13", "mov~rax,<TAG>", "jmp~FOO"]], [0, 0, 68, 0, 0, 2, 0, 1, 12, 4, 0.024802458296751536, ["mov     rsi, r12", "jmp     loc_13060"], ["mov~rsi,r12", "jmp~FOO"]], [0, 0, 68, 0, 0, 4, 0, 0, 15, 4, 0.08230904302019315, ["mov     rbx, nbuf", "mov     rsi, [rsp+88h+ptr]; pwcs", "mov     nbuf, rbp", "mov     rbp, [rsp+88h+var_40]"], ["mov~rbx,nbuf", "mov~rsi,[rsp+0]", "mov~nbuf,rbp", "mov~rbp,[rsp+0]"]], [0, 0, 68, 0, 0, 5, 0, 1, 12, 7, 0.07704126426690079, ["mov     [rsp+88h+var_40], size_0", "mov     size_0, r12", "mov     r12, nbuf", "mov     nbuf, rax", "jmp     short loc_13028"], ["mov~[rsp+0],size_0", "mov~size_0,r12", "mov~r12,nbuf", "mov~nbuf,rax", "jmp~FOO"]], [0, 0, 68, 0, 0, 7, 2, 1, 11, 5, 0.11479367866549604, ["mov     r12, [rsp+88h+ptr]", "mov     rax, [rsp+88h+width]", "xor     r15d, r15d", "mov     edi, [r12]", "mov     rax, [rax]", "test    edi, edi", "jz      loc_13131"], ["mov~r12,[rsp+0]", "mov~rax,[rsp+0]", "xor~r15d,r15d", "mov~edi,<TAG>", "mov~rax,<TAG>", "test~edi,edi", "jz~FOO"]], [1, 0, 68, 0, 0, 3, 1, 1, 7, 12, 0.24945127304653206, ["xor     ecx, ecx", "cmp     eax, 1", "jz      short loc_12D24"], ["xor~ecx,ecx", "cmp~eax,0", "jz~FOO"]], [0, 0, 68, 1, 0, 4, 0, 0, 14, 5, 0.04664179104477612, ["cdqe", "add     rax, r15", "cmp     rbx, rax", "jb      short loc_13050"], ["cdqe~", "add~rax,r15", "cmp~rbx,rax", "jb~FOO"]], [1, 0, 68, 0, 1, 3, 0, 2, 13, 6, 0.07989464442493416, ["call    _wcwidth", "cmp     eax, 0FFFFFFFFh", "jnz     short loc_13010"], ["call~FOO", "cmp~eax,0", "jnz~FOO"]], [1, 0, 68, 0, 1, 3, 0, 2, 3, 4, 0.3849868305531168, ["call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "ja      short loc_12EC0"], ["call~FOO", "cmp~rax,0", "ja~FOO"]], [0, 0, 68, 0, 1, 10, 1, 2, 2, 4, 0.497585601404741, ["mov     nbuf, [rsp+88h+width]", "mov     rsi, [rsp+88h+size]", "mov     rdi, [rsp+88h+src]; s", "mov     [rax], rsi", "call    _strlen", "mov     r11d, [rsp+88h+var_5C]", "mov     r12, rax", "mov     r13, rax", "test    r11d, r11d", "jz      loc_12E90"], ["mov~nbuf,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,[rsp+0]", "mov~<TAG>,rsi", "call~FOO", "mov~r11d,[rsp+0]", "mov~r12,rax", "mov~r13,rax", "test~r11d,r11d", "jz~FOO"]], [1, 0, 68, 0, 2, 6, 0, 3, 12, 7, 0.3786215978928885, ["mov     rdi, [rsp+88h+ptr]; ptr", "call    free", "mov     rdi, r13; ptr", "call    free", "cmp     r15, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_12DF6"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~rdi,r13", "call~FOO", "cmp~r15,0", "jnz~FOO"]], [0, 0, 68, 0, 0, 2, 1, 1, 11, 8, 0.5061457418788411, ["test    rbp, rbp", "jz      loc_12E08"], ["test~rbp,rbp", "jz~FOO"]], [2, 0, 68, 1, 0, 4, 1, 0, 8, 12, 0.0, ["mov     rcx, rdx", "and     edx, 1", "shr     rcx, 1", "add     rdx, rcx"], ["mov~rcx,rdx", "and~edx,0", "shr~rcx,0", "add~rdx,rcx"]], [1, 0, 68, 1, 0, 5, 1, 1, 15, 5, 0.008011413520632133, ["add     rbp, 4", "mov     edi, [rbp+0]; c", "mov     r15, rax", "test    edi, edi", "jz      short loc_13050"], ["add~rbp,0", "mov~edi,[rbp+0]", "mov~r15,rax", "test~edi,edi", "jz~FOO"]], [0, 0, 68, 0, 0, 1, 0, 0, 15, 5, 0.006913959613696225, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 68, 0, 1, 7, 1, 2, 1, 5, 0.5114135206321334, ["lea     rbp, [req+1]", "mov     rdi, buf; ptr", "mov     rsi, size_0; size", "call    _realloc", "test    rax, rax", "mov     rbx, rax", "jz      loc_130B0"], ["lea~rbp,[req+0]", "mov~rdi,buf", "mov~rsi,size_0", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 68, 0, 0, 3, 0, 1, 13, 6, 0.49561018437225635, ["mov     r13, nbuf", "mov     r14, r15", "jmp     loc_12C90"], ["mov~r13,nbuf", "mov~r14,r15", "jmp~FOO"]], [1, 1, 68, 1, 0, 5, 0, 0, 14, 6, 0.02030289727831431, ["mov     eax, 1", "mov     dword ptr [rbp+0], 0FFFDh", "add     rax, r15", "cmp     rbx, rax", "jnb     short loc_1301A"], ["mov~eax,0", "mov~[word ptr [rbp+0],<STR>", "add~rax,r15", "cmp~rbx,rax", "jnb~FOO"]], [0, 0, 68, 0, 0, 6, 1, 1, 7, 3, 0.030509218612818263, ["mov     rax, [rsp+88h+width]", "mov     r15, r12", "mov     rsi, [rsp+88h+src]", "xor     r13d, r13d", "mov     rax, [rax]", "jmp     loc_12CEF"], ["mov~rax,[rsp+0]", "mov~r15,r12", "mov~rsi,[rsp+0]", "xor~r13d,r13d", "mov~rax,<TAG>", "jmp~FOO"]], [0, 0, 68, 0, 1, 6, 1, 2, 6, 4, 0.30542142230026337, ["mov     rsi, [rsp+88h+src]; s", "mov     rdi, rax; pwcs", "mov     rdx, r15; n", "call    _mbstowcs", "test    rax, rax", "jz      loc_13096"], ["mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~rdx,r15", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 68, 1, 1, 11, 0, 1, 13, 9, 0.11808604038630377, ["mov     rdx, r14", "mov     byte ptr [rdi], 0", "mov     [rsp+88h+n], rcx", "sub     rdx, rdi", "cmp     rdx, r12", "cmova   rdx, r12; n", "call    _mempcpy", "mov     rcx, [rsp+88h+n]", "cmp     r14, rax", "lea     rdx, [rcx-1]", "jbe     short loc_12DD6"], ["mov~rdx,r14", "mov~<TAG>,0", "mov~[rsp+0],rcx", "sub~rdx,rdi", "cmp~rdx,r12", "cmova~rdx,r12", "call~FOO", "mov~rcx,[rsp+0]", "cmp~r14,rax", "lea~rdx,[rcx-1]+0]", "jbe~FOO"]], [0, 0, 68, 1, 0, 5, 0, 0, 12, 10, 0.11457418788410886, ["add     req, nbuf", "lea     rax, [rdx-1]", "mov     rdi, nbuf", "cmp     nbuf, r14", "jnb     short loc_12D86"], ["add~req,nbuf", "lea~rax,[rdx-1]+0]", "mov~rdi,nbuf", "cmp~nbuf,r14", "jnb~FOO"]], [0, 0, 68, 0, 0, 2, 1, 1, 13, 10, 0.026997366110623353, ["test    rdx, rdx", "jz      short loc_12D86"], ["test~rdx,rdx", "jz~FOO"]], [0, 0, 68, 0, 0, 4, 1, 1, 8, 11, 0.5017559262510974, ["mov     edi, [rsp+88h+var_58]", "lea     r15, [rdx+r12]", "test    edi, edi", "jz      short loc_12D35"], ["mov~edi,[rsp+0]", "lea~r15,<TAG>", "test~edi,edi", "jz~FOO"]], [0, 0, 68, 0, 0, 2, 1, 1, 14, 9, 0.026997366110623353, ["test    rcx, rcx", "jz      short loc_12DD6"], ["test~rcx,rcx", "jz~FOO"]], [0, 0, 68, 0, 0, 1, 0, 0, 15, 10, 0.013608428446005268, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 68, 0, 0, 7, 1, 1, 4, 3, 0.02787532923617208, ["mov     rax, [rsp+88h+width]", "mov     r15, r12", "mov     rsi, [rsp+88h+src]", "mov     [rsp+88h+ptr], 0", "xor     r13d, r13d", "mov     rax, [rax]", "jmp     loc_12CEF"], ["mov~rax,[rsp+0]", "mov~r15,r12", "mov~rsi,[rsp+0]", "mov~[rsp+0],0", "xor~r13d,r13d", "mov~rax,<TAG>", "jmp~FOO"]], [0, 0, 68, 0, 0, 3, 1, 1, 5, 4, 0.021729587357330993, ["mov     r10d, [rsp+88h+var_44]", "test    r10d, r10d", "jnz     short loc_12E9B"], ["mov~r10d,[rsp+0]", "test~r10d,r10d", "jnz~FOO"]], [0, 0, 1, 0, 1, 3, 0, 2, 2, -1, 0.0006584723441615452, ["mov     rdi, buf; ptr", "call    free", "jmp     loc_12E2A"], ["mov~rdi,buf", "call~FOO", "jmp~FOO"]], [0, 0, 68, 0, 0, 3, 1, 1, 9, 10, 0.5035118525021949, ["mov     eax, [rsp+88h+var_54]", "test    eax, eax", "jnz     loc_12E40"], ["mov~eax,[rsp+0]", "test~eax,eax", "jnz~FOO"]], [0, 0, 68, 0, 0, 2, 1, 0, 9, 11, 0.0, ["mov     r15, r12", "xor     edx, edx"], ["mov~r15,r12", "xor~edx,edx"]], [0, 0, 68, 1, 0, 1, 0, 0, 10, 9, 0.2452809482001756, ["add     r15, rcx"], ["add~r15,rcx"]], [0, 0, 68, 0, 0, 2, 1, 1, 10, 9, 0.2452809482001756, ["xor     ecx, ecx", "jmp     loc_12D44"], ["xor~ecx,ecx", "jmp~FOO"]], [2, 0, 68, 0, 0, 7, 1, 1, 7, 5, 0.28687445127304656, ["mov     rdx, [rsp+88h+ptr]", "mov     rsi, [rsp+88h+n]", "mov     byte ptr [rsp+88h+n], 0", "mov     dword ptr [rdx+rsi-4], 0", "mov     edi, [rdx]; wc", "test    edi, edi", "jz      loc_130BD"], ["mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~[yte ptr [rsp+0],0", "mov~[word ptr [rdx+0],0", "mov~edi,<TAG>", "test~edi,edi", "jz~FOO"]], [0, 0, 68, 0, 1, 5, 0, 2, 11, 6, 0.02158326016973954, ["mov     rdi, [rsp+88h+ptr]; s", "mov     rsi, r15; n", "call    _wcswidth", "movsxd  r15, eax", "jmp     loc_12FB4"], ["mov~rdi,[rsp+0]", "mov~rsi,r15", "call~FOO", "movsxd~r15,eax", "jmp~FOO"]], [0, 0, 1, 0, 1, 3, 1, 1, 7, -1, 0.008230904302019315, ["mov     rdi, nbuf; ptr", "xor     ebx, ebx", "call    free"], ["mov~rdi,nbuf", "xor~ebx,ebx", "call~FOO"]], [2, 0, 68, 0, 2, 7, 0, 3, 14, 8, 0.12159789288849868, ["mov     rdi, [rsp+88h+ptr]; ptr", "mov     byte ptr [rax], 0", "call    free", "mov     rdi, r13; ptr", "call    free", "cmp     r15, 0FFFFFFFFFFFFFFFFh", "jz      short loc_12E20"], ["mov~rdi,[rsp+0]", "mov~<TAG>,0", "call~FOO", "mov~rdi,r13", "call~FOO", "cmp~r15,0", "jz~FOO"]], [0, 0, 68, 0, 0, 2, 0, 0, 5, 1, 0.292654375182909, ["cmp     rax, r15", "jbe     loc_1314E"], ["cmp~rax,r15", "jbe~FOO"]], [2, 1, 68, 2, 0, 9, 2, 1, 16, 9, 0.014486391571553995, ["add     rax, 1", "mov     byte ptr [rax-1], 20h ; ' '", "cmp     r14, rax", "setnbe  sil", "test    rdx, rdx", "setnz   cl", "sub     rdx, 1", "test    sil, cl", "jnz     short loc_12DB8"], ["add~rax,0", "mov~[yte ptr [rax-1]+0],<STR>", "cmp~r14,rax", "setnbe~sil", "test~rdx,rdx", "setnz~cl", "sub~rdx,0", "test~sil,cl", "jnz~FOO"]], [0, 0, 68, 0, 0, 2, 1, 0, 10, 2, 0.079931226221832, ["mov     rsi, [rsp+88h+src]", "xor     r13d, r13d"], ["mov~rsi,[rsp+0]", "xor~r13d,r13d"]], [0, 0, 68, 0, 0, 2, 0, 0, 8, 7, 0.08955223880597014, ["mov     [rsp+88h+var_40], r12", "mov     r13, rdx"], ["mov~[rsp+0],r12", "mov~r13,rdx"]], [0, 0, 68, 0, 0, 2, 0, 0, 4, 2, 0.39921714954638576, ["cmp     r15, rax", "jbe     loc_12E58"], ["cmp~r15,rax", "jbe~FOO"]], [0, 1, 0, 1, 0, 9, 0, 0, 3, -1, 0.0, ["add     rsp, 58h", "mov     rax, rbx", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "mov~rax,rbx", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 68, 0, 0, 2, 0, 1, 15, 7, 0.11951273046532046, ["cmp     size_0, r15", "ja      short loc_12E2A"], ["cmp~size_0,r15", "ja~FOO"]], [0, 0, 1, 0, 1, 4, 1, 2, 6, -1, 0.000877963125548727, ["mov     rdi, nbuf; ptr", "xor     ebx, ebx", "call    free", "jmp     loc_12E2A"], ["mov~rdi,nbuf", "xor~ebx,ebx", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 2, 6, 1, 3, 12, -1, 0.0030728709394205445, ["mov     rdi, [rsp+88h+ptr]; ptr", "call    free", "mov     rdi, nbuf; ptr", "xor     ebx, ebx", "call    free", "jmp     loc_12E2A"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~rdi,nbuf", "xor~ebx,ebx", "call~FOO", "jmp~FOO"]], [1, 0, 68, 0, 0, 5, 1, 0, 3, 3, 0.0996488147497805, ["mov     rax, [rsp+88h+size]", "mov     rsi, [rsp+88h+src]; src", "mov     r15, r12", "mov     [rsp+88h+ptr], 0", "xor     r13d, r13d"], ["mov~rax,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r15,r12", "mov~[rsp+0],0", "xor~r13d,r13d"]], [0, 0, 68, 0, 0, 4, 0, 1, 12, 3, 0.05878694761486685, ["mov     rax, [rsp+88h+width]", "mov     rsi, [rsp+88h+src]", "mov     rax, [rax]", "jmp     loc_12CEF"], ["mov~rax,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rax,<TAG>", "jmp~FOO"]]], "func_feature": [26, 51, 73, 5, 69, 108, 0, 335, 0.14452, 0, 17], "succs": [[66, 68], [0, 25], [0, 25], [44], [26, 3], [26, 3], [41, 6], [6], [2, 60], [8, 1], [8], [19, 12], [11, 55], [36], [4], [4], [56, 39], [16, 40], [48, 17], [9, 20], [19, 12], [62], [21], [21], [28], [24, 22], [33, 44], [34, 23], [27, 38], [18, 47], [67, 29], [56, 37], [42, 31], [44], [28, 23], [23], [49, 30], [36], [34, 35], [62], [54, 39], [57, 45], [41, 43], [41, 7], [50, 51], [57, 46], [59], [62], [65, 47], [63], [52, 53], [50], [32], [32], [10, 61], [1], [63], [56, 64], [5, 14], [57, 59], [58], [20], [58, 15], [], [37, 63], [63], [63], [62], [62]], "fname": "ambsalign", "n_num": 69}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 33, 0, 0, 1, 0, 1, 0, 0, 0.0489795918367347, ["jmp     loc_132E0"], ["jmp~FOO"]], [1, 0, 33, 0, 0, 4, 1, 1, 5, 6, 0.16244897959183674, ["mov     ecx, [rsp+68h+var_60]", "mov     qword ptr [r12], 0", "test    ecx, ecx", "jz      short loc_1322C"], ["mov~ecx,[rsp+0]", "mov~<TAG>,0", "test~ecx,ecx", "jz~FOO"]], [1, 0, 33, 0, 0, 2, 0, 1, 10, 3, 0.012448979591836735, ["cmp     ebp, 7FFFFFFFh", "jz      short loc_13290"], ["cmp~ebp,0", "jz~FOO"]], [0, 0, 33, 0, 1, 4, 1, 2, 9, 4, 0.0426530612244898, ["mov     edi, [rsp+68h+wc]; wc", "call    _iswcntrl", "test    eax, eax", "jnz     short loc_1321D"], ["mov~edi,[rsp+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 33, 0, 0, 2, 0, 1, 8, 4, 0.04068027210884354, ["cmp     bytes, 0FFFFFFFFFFFFFFFEh", "jz      short loc_13340"], ["cmp~bytes,0", "jz~FOO"]], [1, 0, 33, 1, 1, 9, 0, 2, 7, 5, 0.0626530612244898, ["mov     rdx, plimit", "mov     rcx, r12; ps", "mov     rsi, p; s", "sub     rdx, p; n", "mov     rdi, r14; pwc", "call    rpl_mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     r15, rax", "jz      short loc_13330"], ["mov~rdx,plimit", "mov~rcx,r12", "mov~rsi,p", "sub~rdx,p", "mov~rdi,r14", "call~FOO", "cmp~rax,0", "mov~r15,rax", "jz~FOO"]], [1, 0, 33, 1, 0, 2, 0, 1, 11, 4, 0.011020408163265306, ["add     ebp, 1", "jmp     short loc_1321D"], ["add~ebp,0", "jmp~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 5, 2, 0.0071428571428571435, ["cmp     ebp, 7FFFFFFFh", "jz      loc_13295"], ["cmp~ebp,0", "jz~FOO"]], [2, 0, 9, 1, 0, 5, 1, 1, 4, 3, 0.012448979591836735, ["add     p, 1", "movzx   eax, byte ptr [p-1]", "movzx   eax, word ptr [rcx+rax*2]", "test    ah, 40h", "jnz     short loc_13385"], ["add~p,0", "movzx~eax,[yte ptr [p-1]+0]", "movzx~eax,<TAG>", "test~ah,0", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 1, 1, 5, 3, 0.004081632653061225, ["test    al, 2", "jnz     short loc_13394"], ["test~al,0", "jnz~FOO"]], [0, 0, 9, 1, 0, 4, 0, 1, 7, 2, 0.0032653061224489797, ["mov     ebp, eax", "sub     ebp, ebx", "cmp     plimit, p", "jz      loc_13295"], ["mov~ebp,eax", "sub~ebp,ebx", "cmp~plimit,p", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 6, 3, 0.007346938775510205, ["cmp     rsi, p", "jz      loc_13290"], ["cmp~rsi,p", "jz~FOO"]], [2, 0, 9, 1, 0, 4, 1, 1, 4, 3, 0.012857142857142857, ["add     p, 1", "movzx   edx, byte ptr [p-1]", "test    byte ptr [rcx+rdx*2+1], 40h", "jz      loc_1331C"], ["add~p,0", "movzx~edx,[yte ptr [p-1]+0]", "test~[yte ptr [rcx+0],0", "jz~FOO"]], [1, 0, 9, 1, 0, 4, 0, 1, 3, 4, 0.007959183673469388, ["mov     esi, 80000000h", "mov     rax, p", "add     rsi, p", "jmp     short loc_133C8"], ["mov~esi,0", "mov~rax,p", "add~rsi,p", "jmp~FOO"]], [2, 0, 50, 1, 1, 16, 1, 1, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "lea     r13, [string+nbytes]", "push    rbp", "push    rbx", "mov     ebp, edx", "mov     rbx, string", "sub     rsp, 38h", "mov     rax, fs:28h", "mov     [rsp+68h+var_40], rax", "xor     eax, eax", "call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "jbe     loc_13358"], ["push~r15", "push~r14", "push~r13", "push~r12", "lea~r13,<TAG>", "push~rbp", "push~rbx", "mov~ebp,edx", "mov~rbx,string", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "cmp~rax,0", "jbe~FOO"]], [1, 0, 9, 1, 0, 1, 0, 0, 6, 4, 0.0016326530612244899, ["add     ebp, 1"], ["add~ebp,0"]], [0, 0, 35, 0, 0, 2, 0, 0, 1, 3, 0.012653061224489797, ["cmp     p, plimit", "jnb     loc_1339E"], ["cmp~p,plimit", "jnb~FOO"]], [1, 0, 33, 1, 0, 4, 0, 1, 9, 3, 0.020816326530612245, ["mov     ecx, 7FFFFFFFh", "sub     ecx, ebp", "cmp     ecx, eax", "jl      short loc_13290"], ["mov~ecx,0", "sub~ecx,ebp", "cmp~ecx,eax", "jl~FOO"]], [1, 0, 33, 0, 1, 7, 2, 1, 8, 4, 0.07408163265306122, ["mov     edi, [rsp+68h+wc]; c", "test    bytes, bytes", "mov     eax, 1", "cmovz   bytes, rax", "call    _wcwidth", "test    eax, eax", "jns     short loc_13210"], ["mov~edi,[rsp+0]", "test~bytes,bytes", "mov~eax,0", "cmovz~bytes,rax", "call~FOO", "test~eax,eax", "jns~FOO"]], [1, 0, 33, 0, 1, 7, 2, 1, 9, 3, 0.02748299319727891, ["mov     edi, [rsp+68h+wc]; c", "test    bytes, bytes", "mov     eax, 1", "cmovz   bytes, rax", "call    _wcwidth", "test    eax, eax", "jns     short loc_132C0"], ["mov~edi,[rsp+0]", "test~bytes,bytes", "mov~eax,0", "cmovz~bytes,rax", "call~FOO", "test~eax,eax", "jns~FOO"]], [0, 0, 33, 1, 0, 1, 0, 0, 10, 4, 0.011020408163265306, ["add     ebp, eax"], ["add~ebp,eax"]], [0, 0, 3, 0, 0, 1, 0, 1, 7, 2, 0.0024489795918367346, ["jmp     loc_13295"], ["jmp~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 6, 3, 0.0069387755102040816, ["cmp     plimit, p", "jnz     short loc_13370"], ["cmp~plimit,p", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 2, 2, 0.0036734693877551023, ["xor     ebp, ebp", "jmp     loc_13295"], ["xor~ebp,ebp", "jmp~FOO"]], [0, 0, 19, 0, 0, 2, 0, 0, 1, 3, 0.0069387755102040816, ["cmp     p, plimit", "jnb     short loc_1339E"], ["cmp~p,plimit", "jnb~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 5, 2, 0.01326530612244898, ["mov     ebp, 0FFFFFFFFh", "jmp     loc_13295"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 8, 3, 0.007074829931972789, ["jmp     short loc_1331C"], ["jmp~FOO"]], [0, 0, 33, 0, 0, 3, 1, 1, 8, 3, 0.03340136054421769, ["mov     eax, [rsp+68h+var_5C]", "test    eax, eax", "jnz     short loc_1331C"], ["mov~eax,[rsp+0]", "test~eax,eax", "jnz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 1, 5, 4, 0.0069387755102040816, ["jmp     short loc_133B2"], ["jmp~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, 1, 0.03918367346938775, ["mov     rsi, [rsp+68h+var_40]", "xor     rsi, fs:28h", "mov     eax, ebp", "jnz     loc_133DD"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~eax,ebp", "jnz~FOO"]], [0, 0, 33, 0, 0, 2, 0, 0, 6, 2, 0.1626530612244898, ["cmp     p, plimit", "jnb     loc_13295"], ["cmp~p,plimit", "jnb~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 7, 2, 0.0067346938775510205, ["mov     ebp, 7FFFFFFFh"], ["mov~ebp,0"]], [0, 0, 33, 1, 1, 5, 1, 2, 10, 3, 0.06775510204081633, ["mov     rdi, r12; ps", "add     p, bytes", "call    _mbsinit", "test    eax, eax", "jnz     short loc_131D2"], ["mov~rdi,r12", "add~p,bytes", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 17, 0, 1, 4, 1, 2, 2, 5, 0.011428571428571429, ["call    ___ctype_b_loc", "and     ebp, 2", "mov     rcx, [rax]", "jnz     short loc_133A5"], ["call~FOO", "and~ebp,0", "mov~rcx,<TAG>", "jnz~FOO"]], [0, 0, 33, 0, 0, 3, 1, 1, 7, 4, 0.04829931972789115, ["mov     edx, [rsp+68h+var_5C]", "test    edx, edx", "jz      loc_131CB"], ["mov~edx,[rsp+0]", "test~edx,edx", "jz~FOO"]], [1, 0, 33, 1, 1, 9, 0, 2, 6, 5, 0.13938775510204082, ["mov     rdx, plimit", "mov     rcx, r12; ps", "mov     rsi, p; s", "sub     rdx, p; n", "mov     rdi, r14; pwc", "call    rpl_mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     r15, rax", "jz      loc_13330"], ["mov~rdx,plimit", "mov~rcx,r12", "mov~rsi,p", "sub~rdx,p", "mov~rdi,r14", "call~FOO", "cmp~rax,0", "mov~r15,rax", "jz~FOO"]], [1, 0, 33, 1, 0, 4, 0, 1, 10, 3, 0.025102040816326533, ["mov     ecx, 7FFFFFFFh", "sub     ecx, ebp", "cmp     eax, ecx", "jg      short loc_13290"], ["mov~ecx,0", "sub~ecx,ebp", "cmp~eax,ecx", "jg~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 38h", "pop     rbx", "pop     rbp", "pop     r12", "pop     plimit", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~plimit", "pop~r14", "pop~r15", "retn"]], [2, 0, 33, 0, 0, 9, 3, 1, 2, 6, 0.0236734693877551, ["mov     eax, ebp", "and     ebp, 1", "lea     r12, [rsp+68h+mbstate]", "and     eax, 2", "mov     [rsp+68h+var_5C], ebp", "lea     r14, [rsp+68h+wc]", "mov     [rsp+68h+var_60], eax", "xor     ebp, ebp", "jmp     short loc_131DB"], ["mov~eax,ebp", "and~ebp,0", "lea~r12,[rsp+0]", "and~eax,0", "mov~[rsp+0],ebp", "lea~r14,[rsp+0]", "mov~[rsp+0],eax", "xor~ebp,ebp", "jmp~FOO"]], [1, 0, 33, 0, 0, 2, 0, 1, 4, 4, 0.018775510204081632, ["cmp     al, 25h ; '%'", "jge     short loc_131CB"], ["cmp~al,0", "jge~FOO"]], [1, 0, 33, 0, 0, 3, 0, 1, 3, 5, 0.18122448979591838, ["movzx   eax, byte ptr [p]", "cmp     al, 3Fh ; '?'", "jle     short loc_131C0"], ["movzx~eax,<TAG>", "cmp~al,0", "jle~FOO"]], [1, 0, 33, 0, 0, 2, 0, 1, 7, 4, 0.10367346938775511, ["cmp     bytes, 0FFFFFFFFFFFFFFFEh", "jz      loc_13340"], ["cmp~bytes,0", "jz~FOO"]], [1, 1, 33, 1, 0, 3, 0, 1, 5, 4, 0.008979591836734694, ["sub     eax, 20h ; ' '", "cmp     al, 3", "ja      short loc_131F1"], ["sub~eax,<STR>", "cmp~al,0", "ja~FOO"]], [1, 0, 33, 1, 0, 3, 0, 1, 9, 3, 0.02448979591836735, ["add     ebp, 1", "mov     rbx, plimit", "jmp     loc_131D2"], ["add~ebp,0", "mov~rbx,plimit", "jmp~FOO"]], [2, 0, 33, 2, 0, 2, 0, 0, 5, 3, 0.0563265306122449, ["add     p, 1", "add     ebp, 1"], ["add~p,0", "add~ebp,0"]], [1, 0, 33, 0, 0, 2, 0, 1, 5, 4, 0.01469387755102041, ["cmp     al, 5Fh ; '_'", "jle     short loc_131CB"], ["cmp~al,0", "jle~FOO"]], [2, 0, 33, 1, 0, 3, 0, 0, 6, 4, 0.008979591836734694, ["sub     eax, 61h ; 'a'", "cmp     al, 1Dh", "jbe     short loc_131CB"], ["sub~eax,0", "cmp~al,0", "jbe~FOO"]], [0, 0, 33, 2, 1, 6, 1, 2, 11, 3, 0.022653061224489797, ["mov     rdi, r12; ps", "add     ebp, eax", "add     p, bytes", "call    _mbsinit", "test    eax, eax", "jnz     loc_131D2"], ["mov~rdi,r12", "add~ebp,eax", "add~p,bytes", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 3, 4, 0.007959183673469388, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 33, 0, 0, 2, 0, 1, 4, 5, 0.15183673469387757, ["cmp     al, 41h ; 'A'", "jl      short loc_131F1"], ["cmp~al,0", "jl~FOO"]]], "func_feature": [10, 20, 47, 3, 51, 83, 3, 178, 0.03506, 1, 21], "succs": [[5], [0, 35], [6, 31], [32, 2], [27, 19], [34, 4], [32], [29, 15], [9, 7], [22, 7], [12, 29], [10, 31], [25, 28], [12], [16, 24], [22], [38, 23], [20, 31], [17, 3], [25, 36], [32], [29], [8, 21], [29], [33, 23], [29], [25], [25, 43], [11], [49, 37], [40, 29], [29], [35, 30], [48, 13], [26, 44], [41, 34], [31, 47], [], [40], [42, 44], [50, 39], [18, 27], [1, 44], [30], [30], [44, 46], [1, 44], [5, 30], [8], [], [1, 45]], "fname": "mbsnwidth", "n_num": 51}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [2, 0, 1, 2, 1, 13, 0, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     ebp, esi", "mov     rbx, string", "sub     rsp, 8", "call    _strlen", "add     rsp, 8", "mov     edx, ebp", "mov     rdi, string", "pop     string", "pop     flags", "mov     rsi, rax", "jmp     mbsnwidth"], ["push~rbp", "push~rbx", "mov~ebp,esi", "mov~rbx,string", "sub~rsp,0", "call~FOO", "add~rsp,0", "mov~edx,ebp", "mov~rdi,string", "pop~string", "pop~flags", "mov~rsi,rax", "jmp~FOO"]]], "func_feature": [1, 0, 2, 0, 2, 1, 11, 13, 0.0, 0, 2], "succs": [[], [0]], "fname": "gnu_mbswidth", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 35, 0, 0, 2, 0, 1, 0, 0, 0.21122994652406415, ["cmp     [rsp+68h+b], 1", "ja      loc_13540"], ["cmp~[rsp+0],0", "ja~FOO"]], [0, 0, 35, 0, 0, 1, 0, 1, 1, 3, 0.07040998217468805, ["jnz     short loc_1347B"], ["jnz~FOO"]], [0, 0, 35, 0, 1, 7, 1, 2, 2, 3, 0.00980392156862745, ["mov     rbp, [r14]", "mov     r13, [r14+8]", "mov     base, rbp", "mov     n2, r13", "call    cmp", "test    eax, eax", "jle     short loc_1347B"], ["mov~rbp,<TAG>", "mov~r13,[r14+0]", "mov~base,rbp", "mov~n2,r13", "call~cmp", "test~eax,eax", "jle~FOO"]], [0, 0, 35, 0, 1, 3, 0, 2, 1, 3, 0.0516934046345811, ["mov     rdi, r14; base", "call    mpsort_with_tmp", "jmp     loc_1347B"], ["mov~rdi,r14", "call~FOO", "jmp~FOO"]], [0, 0, 35, 0, 0, 2, 0, 0, 3, 3, 0.0, ["mov     [r14], r13", "mov     [r14+8], rbp"], ["mov~<TAG>,r13", "mov~[r14+0],rbp"]], [0, 0, 8, 0, 0, 3, 0, 1, 7, -1, 0.00445632798573975, ["mov     rdx, [rsp+68h+p_tt]", "mov     p_tt_0, [rdx+t_0*8]", "jmp     short loc_134B0"], ["mov~rdx,[rsp+0]", "mov~p_tt_0,<TAG>", "jmp~FOO"]], [1, 0, 8, 1, 0, 5, 0, 1, 6, -1, 0.054367201426024955, ["add     [rsp+68h+t], 1", "mov     [base+r15*8-8], p_tt_0", "mov     rax, [rsp+68h+t]", "cmp     [rsp+68h+b], t_0", "jz      loc_13660"], ["add~<TAG>,0", "mov~[base+0],p_tt_0", "mov~rax,<TAG>", "cmp~[rsp+0],t_0", "jz~FOO"]], [0, 0, 17, 0, 0, 2, 0, 1, 7, -1, 0.014705882352941176, ["mov     rbp, [base]", "jmp     loc_135B3"], ["mov~rbp,<TAG>", "jmp~FOO"]], [0, 0, 19, 0, 1, 6, 1, 2, 7, -1, 0.013368983957219251, ["mov     rbp, [base+8]", "mov     rdi, r14", "mov     rsi, rbp", "call    cmp", "test    eax, eax", "jle     loc_13684"], ["mov~rbp,[base+0]", "mov~rdi,r14", "mov~rsi,rbp", "call~cmp", "test~eax,eax", "jle~FOO"]], [0, 0, 35, 0, 1, 5, 0, 1, 6, 5, 0.1122994652406417, ["mov     rdx, [rsp+68h+p_tt]; tmp", "mov     rsi, [rsp+68h+n]; n", "mov     rcx, cmp; cmp", "mov     rdi, base; base", "call    mpsort_with_tmp"], ["mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rcx,cmp", "mov~rdi,base", "call~FOO"]], [1, 0, 35, 0, 0, 2, 0, 1, 5, 6, 0.22905525846702315, ["cmp     [rsp+68h+n], 2", "ja      loc_1366F"], ["cmp~[rsp+0],0", "ja~FOO"]], [0, 0, 35, 0, 0, 1, 0, 1, 4, 7, 0.07932263814616755, ["jnz     short loc_13583"], ["jnz~FOO"]], [0, 0, 35, 0, 1, 7, 1, 2, 5, 7, 0.00980392156862745, ["mov     rbp, [r13+0]", "mov     r14, [r13+8]", "mov     rdi, rbp", "mov     rsi, r14", "call    cmp", "test    eax, eax", "jle     short loc_13583"], ["mov~rbp,[r13+0]", "mov~r14,[r13+0]", "mov~rdi,rbp", "mov~rsi,r14", "call~cmp", "test~eax,eax", "jle~FOO"]], [0, 0, 35, 0, 1, 5, 0, 2, 4, 0, 0.0606060606060606, ["mov     rdx, [rsp+68h+p_tt]; tmp", "mov     rcx, cmp; cmp", "mov     rdi, r13; base", "call    mpsort_with_tmp", "jmp     loc_13583"], ["mov~rdx,[rsp+0]", "mov~rcx,cmp", "mov~rdi,r13", "call~FOO", "jmp~FOO"]], [0, 0, 35, 0, 0, 2, 0, 0, 6, 7, 0.0, ["mov     [r13+0], r14", "mov     [r13+8], rbp"], ["mov~[r13+0],r14", "mov~[r13+0],rbp"]], [0, 0, 9, 0, 0, 3, 0, 0, 3, -1, 0.08823529411764705, ["mov     rbp, [base]", "mov     rax, [rsp+68h+p_tt]", "mov     [rax], rbp"], ["mov~rbp,<TAG>", "mov~rax,[rsp+0]", "mov~<TAG>,rbp"]], [3, 0, 35, 2, 0, 19, 0, 1, 0, 4, 0.11319073083778966, ["push    r15", "push    r14", "mov     rax, n_0", "push    r13", "push    r12", "shr     rax, 1", "push    rbp", "push    rbx", "lea     r14, [base+rax*8]", "mov     rbx, base", "mov     r12, cmp", "sub     rsp, 38h", "mov     [rsp+68h+blim], n_0", "sub     n_0, rax; n", "mov     [rsp+68h+p_tt], tmp_0", "cmp     rsi, 2", "mov     [rsp+68h+b], rax", "mov     [rsp+68h+var_40], r14", "ja      loc_13690"], ["push~r15", "push~r14", "mov~rax,n_0", "push~r13", "push~r12", "shr~rax,0", "push~rbp", "push~rbx", "lea~r14,<TAG>", "mov~rbx,base", "mov~r12,cmp", "sub~rsp,0", "mov~[rsp+0],n_0", "sub~n_0,rax", "mov~[rsp+0],tmp_0", "cmp~rsi,0", "mov~[rsp+0],rax", "mov~[rsp+0],r14", "ja~FOO"]], [1, 0, 16, 1, 0, 5, 0, 1, 9, -1, 0.03832442067736185, ["add     [rsp+68h+t], 1", "mov     [r15-8], rbp", "mov     rax, [rsp+68h+t]", "cmp     [rsp+68h+n], rax", "jz      short loc_13620"], ["add~<TAG>,0", "mov~[r15-8]+0],rbp", "mov~rax,<TAG>", "cmp~[rsp+0],rax", "jz~FOO"]], [1, 0, 16, 1, 1, 6, 1, 2, 8, -1, 0.1818181818181818, ["mov     rsi, r13", "mov     rdi, rbp", "add     r15, 8", "call    cmp", "test    eax, eax", "jle     short loc_13600"], ["mov~rsi,r13", "mov~rdi,rbp", "add~r15,0", "call~cmp", "test~eax,eax", "jle~FOO"]], [0, 0, 20, 0, 0, 3, 0, 1, 6, -1, 0.12477718360071301, ["mov     rbp, [base]", "mov     r14, rbp", "jnz     short loc_135B3"], ["mov~rbp,<TAG>", "mov~r14,rbp", "jnz~FOO"]], [0, 0, 16, 0, 0, 2, 0, 1, 10, -1, 0.00267379679144385, ["mov     rbp, [base+rax*8]", "jmp     short loc_135D0"], ["mov~rbp,<TAG>", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 7, -1, 0.0, ["add     rsp, 38h", "pop     base", "pop     p_tt_0", "pop     cmp", "pop     bb", "pop     b_0", "pop     r15", "retn"], ["add~rsp,0", "pop~base", "pop~p_tt_0", "pop~cmp", "pop~bb", "pop~b_0", "pop~r15", "retn"]], [0, 0, 10, 0, 0, 3, 0, 0, 10, -1, 0.0089126559714795, ["mov     rax, [rsp+68h+b]", "mov     [rsp+68h+t], r14", "mov     [rsp+68h+n], rax"], ["mov~rax,[rsp+0]", "mov~<TAG>,r14", "mov~[rsp+0],rax"]], [1, 0, 8, 0, 0, 6, 1, 0, 4, -1, 0.1853832442067736, ["mov     rax, [rsp+68h+var_40]", "mov     r14, [rsp+68h+b]", "xor     r15d, r15d", "mov     [rsp+68h+t], 0", "mov     r13, [rax]", "nop     word ptr [rax+rax+00h]"], ["mov~rax,[rsp+0]", "mov~r14,[rsp+0]", "xor~r15d,r15d", "mov~<TAG>,0", "mov~r13,<TAG>", "nop~[ord ptr [rax+0]"]], [1, 0, 9, 2, 1, 10, 0, 2, 10, -1, 0.10427807486631016, ["mov     rax, [rsp+68h+t]", "mov     rdx, [rsp+68h+n]", "mov     rdi, r15; dest", "sub     rdx, rax", "lea     rsi, [base+rax*8]; src", "shl     rdx, 3; n", "call    _memcpy", "mov     rax, [rsp+68h+p_tt]", "mov     rbp, [rax]", "jmp     loc_13492"], ["mov~rax,<TAG>", "mov~rdx,[rsp+0]", "mov~rdi,r15", "sub~rdx,rax", "lea~rsi,<TAG>", "shl~rdx,0", "call~FOO", "mov~rax,[rsp+0]", "mov~rbp,<TAG>", "jmp~FOO"]], [2, 0, 35, 1, 0, 8, 0, 1, 3, 1, 0.13101604278074866, ["mov     rax, [rsp+68h+blim]", "mov     rsi, [rsp+68h+b]", "shr     rax, 2", "sub     rsi, rax; n", "mov     [rsp+68h+n], rax", "lea     r13, [base+rax*8]", "cmp     rsi, 2", "ja      loc_1369D"], ["mov~rax,[rsp+0]", "mov~rsi,[rsp+0]", "shr~rax,0", "sub~rsi,rax", "mov~[rsp+0],rax", "lea~r13,<TAG>", "cmp~rsi,0", "ja~FOO"]], [0, 0, 17, 0, 0, 2, 0, 0, 8, -1, 0.007575757575757575, ["mov     [base], rbp", "mov     [base+8], r14"], ["mov~<TAG>,rbp", "mov~[base+0],r14"]], [1, 0, 1, 2, 0, 15, 0, 1, 7, -1, 0.0285204991087344, ["mov     rax, [rsp+68h+t]", "mov     b_0, [rsp+68h+b]", "lea     rdi, [base+r15*8]; dest", "mov     rcx, [rsp+68h+p_tt]", "add     rsp, 38h", "pop     base", "sub     r14, rax", "pop     p_tt_0", "lea     rdx, ds:0[r14*8]; n", "lea     rsi, [rcx+rax*8]; src", "pop     cmp", "pop     bb", "pop     r14", "pop     r15", "jmp     _memcpy"], ["mov~rax,<TAG>", "mov~b_0,[rsp+0]", "lea~rdi,<TAG>", "mov~rcx,[rsp+0]", "add~rsp,0", "pop~base", "sub~r14,rax", "pop~p_tt_0", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "pop~cmp", "pop~bb", "pop~r14", "pop~r15", "jmp~FOO"]], [1, 0, 8, 1, 0, 4, 0, 1, 6, -1, 0.0819964349376114, ["add     b_0, 1", "cmp     [rsp+68h+blim], b_0", "mov     [base+r15*8-8], bb", "jz      short loc_13508"], ["add~b_0,0", "cmp~[rsp+0],b_0", "mov~[base+0],bb", "jz~FOO"]], [0, 0, 16, 0, 0, 2, 0, 1, 10, -1, 0.0035650623885918, ["mov     r13, [base+r14*8]", "jmp     short loc_135D0"], ["mov~r13,<TAG>", "jmp~FOO"]], [1, 0, 16, 0, 0, 5, 0, 0, 7, -1, 0.15418894830659535, ["mov     r13, [r13+0]", "mov     r14, [rsp+68h+n]", "mov     r15, [rsp+68h+p_tt]", "mov     [rsp+68h+t], 0", "nop     dword ptr [rax+00000000h]"], ["mov~r13,[r13+0]", "mov~r14,[rsp+0]", "mov~r15,[rsp+0]", "mov~<TAG>,0", "nop~[word ptr [rax+0]"]], [1, 0, 8, 1, 1, 6, 1, 2, 5, -1, 0.1853832442067736, ["mov     rsi, bb", "mov     rdi, p_tt_0", "add     i, 1", "call    cmp", "test    eax, eax", "jle     short loc_134E0"], ["mov~rsi,bb", "mov~rdi,p_tt_0", "add~i,0", "call~cmp", "test~eax,eax", "jle~FOO"]], [0, 0, 8, 0, 0, 2, 0, 1, 7, -1, 0.0035650623885918, ["mov     bb, [base+b_0*8]", "jmp     short loc_134B0"], ["mov~bb,<TAG>", "jmp~FOO"]], [1, 0, 16, 1, 0, 4, 0, 1, 9, -1, 0.11764705882352941, ["add     r14, 1", "cmp     [rsp+68h+b], r14", "mov     [r15-8], r13", "jz      short loc_1362E"], ["add~r14,0", "cmp~[rsp+0],r14", "mov~[r15-8]+0],r13", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 8, -1, 0.0, [], []]], "func_feature": [9, 6, 34, 1, 35, 50, 4, 166, 0.07092, 0, 14], "succs": [[25, 15], [0, 2], [0, 4], [0], [0], [31], [5, 21], [30], [26, 7], [16, 7], [9, 19], [10, 12], [10, 14], [10], [10], [23], [1, 3], [20, 22], [17, 33], [8, 30], [18], [], [24], [31], [23], [11, 13], [30], [34], [32, 27], [18], [18], [28, 6], [31], [24, 29], []], "fname": "mpsort_with_tmp", "n_num": 35}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 2, 0, 1, 11, 1, 2, 0, 0, 0.09523809523809523, ["push    r12", "push    rbp", "push    rbx", "mov     r12, [base+8]", "mov     rbx, base", "mov     rbp, [base]", "mov     n, r12; n", "mov     base, rbp; base", "call    cmp", "test    eax, eax", "jle     short loc_136E9"], ["push~r12", "push~rbp", "push~rbx", "mov~r12,[base+0]", "mov~rbx,base", "mov~rbp,<TAG>", "mov~n,r12", "mov~base,rbp", "call~cmp", "test~eax,eax", "jle~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 1, -1, 0.09523809523809523, ["jnz     short locret_136F0"], ["jnz~FOO"]], [0, 0, 1, 0, 0, 4, 0, 1, 1, 0, 0.023809523809523808, ["lea     rax, [base+n*8]", "mov     rcx, cmp; cmp", "mov     cmp, rax; tmp", "jmp     mpsort_with_tmp"], ["lea~rax,<TAG>", "mov~rcx,cmp", "mov~cmp,rax", "jmp~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     n, 2", "ja      short loc_136F8"], ["cmp~n,0", "ja~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 3, -1, 0.0, ["mov     [base], r12", "mov     [base+8], rbp"], ["mov~<TAG>,r12", "mov~[base+0],rbp"]], [0, 0, 0, 0, 0, 4, 0, 0, 3, -1, 0.0, ["pop     base", "pop     rbp", "pop     r12", "retn"], ["pop~base", "pop~rbp", "pop~r12", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []]], "func_feature": [1, 1, 5, 0, 8, 8, 1, 25, 0.02679, 0, 0], "succs": [[4, 5], [0, 6], [7], [1, 2], [5], [], [], []], "fname": "mpsort", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 365, 0, 0, 1, 0, 0, 0, 0, 0.002525921998350424, ["mov     ecx, [rsp+4F8h+hour12]"], ["mov~ecx,[rsp+0]"]], [1, 0, 365, 0, 0, 2, 0, 1, 12, 18, 0.0044037940379403825, ["cmp     r14d, 45h ; 'E'; jumptable 0000000000013923 case 108", "jz      loc_13960; jumptable 0000000000013923 default case"], ["cmp~r14d,0", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 4C8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     maxsize", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~maxsize", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 4, -1, 0.005405325792388359, ["mov     rbx, [rsp+4F8h+var_40]", "xor     rbx, fs:28h", "mov     rax, rbp", "jnz     loc_153AC"], ["mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "mov~rax,rbp", "jnz~FOO"]], [0, 0, 365, 0, 0, 2, 0, 1, 19, 21, 0.007968068811122893, ["cmp     r8d, r9d", "jge     loc_153B1"], ["cmp~r8d,r9d", "jge~FOO"]], [7, 0, 365, 9, 0, 23, 0, 1, 18, 21, 0.011451337339460351, ["mov     ecx, 51EB851Fh", "mov     eax, r8d", "mov     esi, r8d", "imul    ecx", "mov     eax, edx", "mov     edx, r8d", "sar     edx, 1Fh", "sar     eax, 5", "sub     eax, edx", "imul    eax, 64h", "sub     esi, eax", "add     r10d, esi", "mov     eax, r10d", "imul    ecx", "mov     eax, r10d", "sar     eax, 1Fh", "mov     ecx, edx", "sar     ecx, 5", "sub     ecx, eax", "imul    ecx, 64h", "sub     r10d, ecx", "mov     ecx, r10d", "js      loc_15007"], ["mov~ecx,0", "mov~eax,r8d", "mov~esi,r8d", "imul~,ecx", "mov~eax,edx", "mov~edx,r8d", "sar~edx,0", "sar~eax,0", "sub~eax,edx", "imul~eax,,0", "sub~esi,eax", "add~r10d,esi", "mov~eax,r10d", "imul~,ecx", "mov~eax,r10d", "sar~eax,0", "mov~ecx,edx", "sar~ecx,0", "sub~ecx,eax", "imul~ecx,,0", "sub~r10d,ecx", "mov~ecx,r10d", "js~FOO"]], [0, 0, 365, 0, 0, 3, 1, 1, 14, 20, 0.020175464435803845, ["mov     esi, dword ptr [rsp+4F8h+pad]", "test    esi, esi", "jz      loc_1501D"], ["mov~esi,[word ptr [rsp+0]", "test~esi,esi", "jz~FOO"]], [4, 0, 365, 4, 0, 15, 0, 0, 13, 21, 0.01664801068300535, ["mov     rax, [rsp+4F8h+tp]", "mov     edx, 51EB851Fh", "mov     esi, [rax+14h]", "mov     eax, esi", "imul    edx", "mov     eax, esi", "sar     eax, 1Fh", "mov     ecx, edx", "sar     ecx, 5", "sub     ecx, eax", "mov     eax, esi", "imul    ecx, 64h", "sub     eax, ecx", "mov     ecx, eax", "jns     loc_14805"], ["mov~rax,[rsp+0]", "mov~edx,0", "mov~esi,[rax+0]", "mov~eax,esi", "imul~,edx", "mov~eax,esi", "sar~eax,0", "mov~ecx,edx", "sar~ecx,0", "sub~ecx,eax", "mov~eax,esi", "imul~ecx,,0", "sub~eax,ecx", "mov~ecx,eax", "jns~FOO"]], [2, 0, 365, 1, 0, 5, 0, 1, 14, 21, 0.0, ["neg     eax", "add     ecx, 64h ; 'd'", "cmp     esi, 0FFFFF893h", "cmovle  ecx, eax", "jmp     loc_14805"], ["neg~eax", "add~ecx,0", "cmp~esi,0", "cmovle~ecx,eax", "jmp~FOO"]], [0, 0, 365, 0, 0, 2, 0, 1, 14, 12, 0.015536997761281961, ["mov     r12, rbx", "jmp     loc_13843"], ["mov~r12,rbx", "jmp~FOO"]], [0, 0, 365, 0, 0, 4, 1, 1, 13, 13, 0.0620493107104984, ["mov     rax, [rsp+4F8h+tp]", "mov     ecx, [rax+20h]", "test    ecx, ecx", "js      loc_14FFF"], ["mov~rax,[rsp+0]", "mov~ecx,[rax+0]", "test~ecx,ecx", "js~FOO"]], [1, 0, 365, 0, 0, 4, 1, 1, 14, 19, 0.012953634971132319, ["mov     eax, dword ptr [rsp+4F8h+pad]", "mov     r10d, 2", "test    eax, eax", "jnz     do_number"], ["mov~eax,[word ptr [rsp+0]", "mov~r10d,0", "test~eax,eax", "jnz~FOO"]], [0, 0, 365, 0, 0, 3, 0, 1, 13, 20, 0.0025259219983504305, ["mov     rax, [rsp+4F8h+tp]", "mov     ecx, [rax+0Ch]", "jmp     do_number_spacepad"], ["mov~rax,[rsp+0]", "mov~ecx,[rax+0]", "jmp~FOO"]], [0, 0, 365, 0, 0, 3, 0, 1, 13, 20, 0.0025259219983504305, ["mov     rax, [rsp+4F8h+tp]", "mov     ecx, [rax+8]", "jmp     do_number_spacepad"], ["mov~rax,[rsp+0]", "mov~ecx,[rax+0]", "jmp~FOO"]], [0, 0, 365, 0, 0, 2, 1, 1, 6, 13, 0.013292388358666194, ["test    r13, r13", "jz      short loc_1383D"], ["test~r13,r13", "jz~FOO"]], [2, 0, 365, 1, 0, 10, 2, 1, 5, 14, 0.014161364439731353, ["test    r11d, r11d", "mov     r12d, 0", "mov     edx, 1", "cmovns  r12, width_0", "test    r12, r12", "cmovz   r12, rdx", "mov     rdx, maxsize", "sub     rdx, i", "cmp     rdx, _incr", "ja      short loc_13810"], ["test~r11d,r11d", "mov~r12d,0", "mov~edx,0", "cmovns~r12,width_0", "test~r12,r12", "cmovz~r12,rdx", "mov~rdx,maxsize", "sub~rdx,i", "cmp~rdx,_incr", "ja~FOO"]], [1, 0, 365, 0, 0, 3, 0, 1, 20, 20, 0.0013513314480970895, ["neg     ecx", "cmp     dword ptr [rsp+4F8h+pad], 0", "jnz     loc_14811"], ["neg~ecx", "cmp~[word ptr [rsp+0],0", "jnz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 7, 14, 0.005309591139389655, ["cmp     r11d, 1", "jle     short loc_13835"], ["cmp~r11d,0", "jle~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 14, 20, 0.017111955539845222, ["cmp     dword ptr [rsp+4F8h+pad], 2Bh ; '+'", "jnz     loc_13D16"], ["cmp~[word ptr [rsp+0],0", "jnz~FOO"]], [7, 0, 365, 5, 0, 27, 3, 1, 13, 21, 0.019694336436117954, ["mov     rax, [rsp+4F8h+tp]", "mov     edx, 51EB851Fh", "mov     esi, [rax+14h]", "mov     eax, esi", "imul    edx", "mov     eax, edx", "mov     edx, esi", "sar     edx, 1Fh", "sar     eax, 5", "sub     eax, edx", "mov     edx, esi", "lea     ecx, [rax+13h]", "imul    eax, 64h", "sub     edx, eax", "mov     eax, edx", "shr     eax, 1Fh", "test    ecx, ecx", "setnle  dl", "and     eax, edx", "cmp     esi, 0FFFFF894h", "setl    r12b", "sub     ecx, eax", "mov     eax, dword ptr [rsp+4F8h+pad]", "cmp     esi, 0FFFFF894h", "setnl   r8b", "test    eax, eax", "jnz     loc_1481A"], ["mov~rax,[rsp+0]", "mov~edx,0", "mov~esi,[rax+0]", "mov~eax,esi", "imul~,edx", "mov~eax,edx", "mov~edx,esi", "sar~edx,0", "sar~eax,0", "sub~eax,edx", "mov~edx,esi", "lea~ecx,[rax+0]", "imul~eax,,0", "sub~edx,eax", "mov~eax,edx", "shr~eax,0", "test~ecx,ecx", "setnle~dl", "and~eax,edx", "cmp~esi,0", "setl~r12b", "sub~ecx,eax", "mov~eax,[word ptr [rsp+0]", "cmp~esi,0", "setnl~r8b", "test~eax,eax", "jnz~FOO"]], [1, 0, 365, 0, 0, 2, 1, 0, 15, 21, 0.003291799222340049, ["mov     r8d, 1", "xor     r12d, r12d"], ["mov~r8d,0", "xor~r12d,r12d"]], [1, 0, 365, 0, 0, 2, 0, 1, 15, 19, 0.0, ["mov     dword ptr [rsp+4F8h+pad], 5Fh ; '_'", "jmp     do_number"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 365, 0, 0, 3, 0, 1, 15, 19, 0.0249253760653552, ["mov     eax, [rsp+4F8h+pad_0]", "cmp     eax, 2Bh ; '+'", "jz      loc_1538C"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [2, 0, 365, 1, 0, 3, 0, 1, 20, 20, 0.003965623895369389, ["add     ecx, 64h ; 'd'", "cmp     dword ptr [rsp+4F8h+pad], 0", "jz      loc_1501D"], ["add~ecx,0", "cmp~[word ptr [rsp+0],0", "jz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 12, 18, 0.005120576568084528, ["cmp     r14d, 45h ; 'E'; jumptable 0000000000013923 case 109", "jz      loc_13960; jumptable 0000000000013923 default case"], ["cmp~r14d,0", "jz~FOO"]], [0, 0, 365, 1, 0, 5, 0, 1, 11, 3, 0.7282976905855988, ["lea     rcx, off_20EDC", "movzx   eax, sil", "movsxd  rax, dword ptr [rcx+rax*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~eax,sil", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [2, 0, 365, 0, 0, 2, 0, 0, 15, 20, 0.005902409567573908, ["mov     r10d, 2", "mov     eax, 63h ; 'c'"], ["mov~r10d,0", "mov~eax,0"]], [1, 0, 365, 0, 0, 2, 0, 1, 14, 21, 0.005903636934920095, ["cmp     [rsp+4F8h+pad_0], 2Bh ; '+'", "jz      loc_14825"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 1, 365, 1, 1, 7, 0, 1, 8, 14, 0.0, ["lea     r14, [width_0-1]", "mov     rdi, r13; s", "mov     esi, 20h ; ' '; c", "mov     rdx, _delta; n", "add     r13, _delta", "call    _memset", "movzx   eax, byte ptr [f]"], ["lea~r14,[width_0-1]+0]", "mov~rdi,r13", "mov~esi,<STR>", "mov~rdx,_delta", "add~r13,_delta", "call~FOO", "movzx~eax,<TAG>"]], [1, 0, 365, 1, 0, 2, 0, 0, 8, 13, 0.005339047955696949, ["mov     [r13+0], al", "add     r13, 1"], ["mov~[r13+0],al", "add~r13,0"]], [2, 0, 365, 0, 0, 4, 0, 0, 16, 19, 0.009017467892070351, ["cmp     eax, ecx", "mov     byte ptr [rsp+4F8h+hour_diff], 1", "mov     dword ptr [rsp+4F8h+pad], 2Bh ; '+'", "jb      loc_13D21"], ["cmp~eax,ecx", "mov~[yte ptr [rsp+0],0", "mov~[word ptr [rsp+0],0", "jb~FOO"]], [2, 0, 365, 0, 0, 3, 0, 1, 16, 20, 0.0004197596323789325, ["mov     r10d, 4", "mov     eax, 270Fh", "jmp     loc_14830"], ["mov~r10d,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 365, 1, 0, 2, 0, 0, 7, 12, 0.013351301991280784, ["add     i, _incr", "mov     _incr, f"], ["add~i,_incr", "mov~_incr,f"]], [3, 0, 365, 0, 0, 7, 2, 1, 16, 18, 0.02140774125132555, ["mov     dword ptr [rsp+4F8h+pad], eax", "mov     r8d, 1", "mov     byte ptr [rsp+4F8h+hour_diff], 0", "xor     r12d, r12d", "mov     r10d, 2", "xor     esi, esi", "jmp     do_number_body"], ["mov~[word ptr [rsp+0],eax", "mov~r8d,0", "mov~[yte ptr [rsp+0],0", "xor~r12d,r12d", "mov~r10d,0", "xor~esi,esi", "jmp~FOO"]], [4, 0, 365, 0, 0, 11, 1, 1, 13, 18, 0.0032206119162640776, ["mov     rax, [rsp+4F8h+tp]", "mov     byte ptr [rsp+4F8h+hour_diff], 0", "mov     r10d, 2", "mov     eax, [rax+10h]", "cmp     eax, 0FFFFFFFFh", "lea     ecx, [rax+1]", "setl    r12b", "cmp     eax, 0FFFFFFFFh", "setnl   r8b", "xor     esi, esi", "jmp     do_number_body"], ["mov~rax,[rsp+0]", "mov~[yte ptr [rsp+0],0", "mov~r10d,0", "mov~eax,[rax+0]", "cmp~eax,0", "lea~ecx,[rax+0]", "setl~r12b", "cmp~eax,0", "setnl~r8b", "xor~esi,esi", "jmp~FOO"]], [1, 0, 365, 0, 0, 5, 1, 1, 8, 11, 0.7603282962177448, ["movzx   eax, byte ptr [f+1]", "lea     rbx, [f+1]", "mov     r11, 0FFFFFFFFFFFFFFFFh", "test    al, al", "jnz     loc_137B0"], ["movzx~eax,[yte ptr [f+0]", "lea~rbx,[f+0]", "mov~r11,0", "test~al,al", "jnz~FOO"]], [0, 0, 365, 1, 0, 2, 0, 1, 16, 12, 0.08468834688346884, ["add     i, rcx", "jmp     loc_13843"], ["add~i,rcx", "jmp~FOO"]], [2, 0, 365, 0, 1, 13, 1, 2, 14, 12, 0.2646238364557558, ["mov     [rax], sil", "mov     byte ptr [rax+1], 0", "lea     rax, [rsp+4F8h+ubuf]", "mov     rcx, [rsp+4F8h+tp]; tp", "mov     esi, 400h; maxsize", "mov     dword ptr [rsp+4F8h+hour_diff], r11d", "mov     rdi, rax; s", "mov     byte ptr [rsp+4F8h+padding], r9b", "mov     [rsp+4F8h+colons], rax", "call    _strftime", "test    rax, rax", "mov     rbx, rax", "jz      loc_13843"], ["mov~<TAG>,sil", "mov~[yte ptr [rax+0],0", "lea~rax,[rsp+0]", "mov~rcx,[rsp+0]", "mov~esi,0", "mov~[word ptr [rsp+0],r11d", "mov~rdi,rax", "mov~[yte ptr [rsp+0],r9b", "mov~[rsp+0],rax", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 365, 1, 0, 2, 0, 1, 17, 12, 0.04967892070225051, ["add     i, r10", "jmp     loc_13843"], ["add~i,r10", "jmp~FOO"]], [0, 0, 365, 1, 0, 3, 0, 1, 15, 12, 0.044096854012018384, ["add     i, [rsp+4F8h+to_uppcase_0]", "mov     _n, rbx", "jmp     loc_13843"], ["add~i,[rsp+0]", "mov~_n,rbx", "jmp~FOO"]], [0, 0, 365, 1, 0, 3, 0, 1, 15, 12, 0.023624366678449395, ["add     i, rcx", "mov     r12, rbx", "jmp     loc_13843"], ["add~i,rcx", "mov~r12,rbx", "jmp~FOO"]], [0, 0, 365, 1, 0, 3, 0, 1, 14, 12, 0.09165782962177448, ["add     i, r14", "mov     r12, rbx", "jmp     loc_13843"], ["add~i,r14", "mov~r12,rbx", "jmp~FOO"]], [0, 0, 365, 1, 0, 2, 0, 1, 20, 12, 0.20551284317191, ["add     i, r8", "jmp     loc_13843"], ["add~i,r8", "jmp~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 3, -1, 0.008884912218687403, ["test    r13, r13", "jz      loc_137DE"], ["test~r13,r13", "jz~FOO"]], [0, 0, 366, 0, 0, 4, 2, 1, 2, 12, 0.00808589607635207, ["movzx   eax, byte ptr [r10]", "xor     ebp, ebp", "test    al, al", "jz      loc_1385D"], ["movzx~eax,<TAG>", "xor~ebp,ebp", "test~al,al", "jz~FOO"]], [0, 0, 365, 0, 0, 7, 1, 1, 17, 20, 0.02104198578217666, ["mov     r10d, dword ptr [rsp+4F8h+pad]", "cmp     r8d, r9d", "lea     ecx, [r8+rax+76Ch]", "setl    r12b", "setnl   r8b", "test    r10d, r10d", "jz      loc_13F0F"], ["mov~r10d,[word ptr [rsp+0]", "cmp~r8d,r9d", "lea~ecx,[r8+0]", "setl~r12b", "setnl~r8b", "test~r10d,r10d", "jz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 16, 21, 0.050584717803699775, ["cmp     sil, 47h ; 'G'", "jz      loc_15049"], ["cmp~sil,0", "jz~FOO"]], [0, 0, 365, 0, 0, 2, 1, 1, 15, 16, 0.1717185106633675, ["test    r8b, r8b", "jz      loc_14B00"], ["test~r8b,r8b", "jz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 14, 17, 0.2364866855190291, ["cmp     r14d, 4Fh ; 'O'", "jnz     loc_14B00"], ["cmp~r14d,0", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 4, -1, 0.002680570283963709, ["test    maxsize, maxsize", "jz      loc_137DE"], ["test~maxsize,maxsize", "jz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 15, 19, 0.017605357212992414, ["cmp     dword ptr [rsp+4F8h+pad], 2Bh ; '+'", "jz      loc_14FEF"], ["cmp~[word ptr [rsp+0],0", "jz~FOO"]], [2, 0, 365, 0, 0, 10, 1, 1, 14, 20, 0.014139271827500884, ["mov     rax, [rsp+4F8h+tp]", "mov     r9d, dword ptr [rsp+4F8h+pad]", "mov     eax, [rax+14h]", "cmp     eax, 0FFFFF894h", "lea     ecx, [rax+76Ch]", "setl    r12b", "cmp     eax, 0FFFFF894h", "setnl   r8b", "test    r9d, r9d", "jnz     loc_1506A"], ["mov~rax,[rsp+0]", "mov~r9d,[word ptr [rsp+0]", "mov~eax,[rax+0]", "cmp~eax,0", "lea~ecx,[rax+0]", "setl~r12b", "cmp~eax,0", "setnl~r8b", "test~r9d,r9d", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 5, -1, 0.0, ["mov     byte ptr [r13+0], 0", "jmp     loc_137DE"], ["mov~[yte ptr [r13+0],0", "jmp~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 12, 18, 0.002658477671733239, ["cmp     r14d, 45h ; 'E'; jumptable 0000000000013923 case 77", "jz      loc_13960; jumptable 0000000000013923 default case"], ["cmp~r14d,0", "jz~FOO"]], [2, 0, 365, 1, 0, 11, 2, 0, 12, 14, 0.0202378146969876, ["test    r11d, r11d; jumptable 0000000000013923 case 110", "mov     eax, 0", "cmovns  eax, r11d", "movsxd  modifier, eax", "mov     eax, 1", "test    r14, r14", "cmovz   r14, rax", "mov     rax, maxsize", "sub     rax, i", "cmp     rax, _incr", "jbe     loc_137DC"], ["test~r11d,r11d", "mov~eax,0", "cmovns~eax,r11d", "movsxd~modifier,eax", "mov~eax,0", "test~r14,r14", "cmovz~r14,rax", "mov~rax,maxsize", "sub~rax,i", "cmp~rax,_incr", "jbe~FOO"]], [2, 0, 365, 0, 0, 4, 1, 1, 16, 18, 0.016077284867051563, ["mov     byte ptr [rsp+4F8h+hour_diff], 0", "mov     r10d, 4", "xor     esi, esi", "jmp     do_number_body"], ["mov~[yte ptr [rsp+0],0", "mov~r10d,0", "xor~esi,esi", "jmp~FOO"]], [0, 0, 365, 0, 0, 2, 1, 1, 13, 13, 0.019987431758375602, ["test    r13, r13", "jz      short loc_140CA"], ["test~r13,r13", "jz~FOO"]], [0, 0, 365, 0, 0, 1, 0, 1, 21, 22, 4.418522446094026e-05, ["jmp     loc_14811"], ["jmp~FOO"]], [1, 0, 367, 0, 0, 4, 1, 1, 1, 13, 0.00135133144809709, ["test    r14d, r14d", "mov     eax, 0Ch", "cmovz   r14d, eax", "jmp     loc_13795"], ["test~r14d,r14d", "mov~eax,0", "cmovz~r14d,eax", "jmp~FOO"]], [2, 0, 369, 1, 0, 29, 2, 1, 0, 14, 0.0, ["push    r15", "push    r14", "mov     r15, maxsize", "push    r13", "push    r12", "mov     r13, s", "push    rbp", "push    rbx", "mov     r10, format", "mov     r12, tp_0", "sub     rsp, 4C8h", "mov     s, [tp_0+30h]", "mov     r14d, [tp_0+8]", "mov     rax, [rsp+4F8h+tzset_called]", "mov     [rsp+4F8h+pad_0], r9d", "movsxd  r11, [rsp+4F8h+width]", "mov     [rsp+4F8h+to_uppcase], r8b", "mov     [rsp+4F8h+var_4D8], rax", "mov     rax, [rsp+4F8h+tz]", "mov     [rsp+4F8h+var_4E0], rax", "mov     rax, fs:28h", "mov     [rsp+4F8h+var_40], rax", "xor     eax, eax", "lea     rax, a8+6; \"\"", "test    zone_0, zone_0", "cmovnz  rax, zone_0", "cmp     r14d, 0Ch", "mov     [rsp+4F8h+zone], rax", "jle     loc_13880"], ["push~r15", "push~r14", "mov~r15,maxsize", "push~r13", "push~r12", "mov~r13,s", "push~rbp", "push~rbx", "mov~r10,format", "mov~r12,tp_0", "sub~rsp,0", "mov~s,[tp_0+0]", "mov~r14d,[tp_0+0]", "mov~rax,[rsp+0]", "mov~[rsp+0],r9d", "movsxd~r11,[rsp+0]", "mov~[rsp+0],r8b", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,<TAG>", "test~zone_0,zone_0", "cmovnz~rax,zone_0", "cmp~r14d,0", "mov~[rsp+0],rax", "jle~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 14, 14, 0.013226110521974784, ["cmp     r11d, 1", "jle     short loc_140C1"], ["cmp~r11d,0", "jle~FOO"]], [1, 0, 365, 0, 0, 4, 0, 1, 13, 19, 0.0007658772239896312, ["mov     rax, [rsp+4F8h+tp]", "mov     r10d, 2", "mov     ecx, [rax+4]", "jmp     do_number"], ["mov~rax,[rsp+0]", "mov~r10d,0", "mov~ecx,[rax+0]", "jmp~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 12, 18, 0.018506244845057147, ["cmp     r14d, 45h ; 'E'; jumptable 0000000000013923 case 78", "jz      loc_13960; jumptable 0000000000013923 default case"], ["cmp~r14d,0", "jz~FOO"]], [2, 0, 365, 1, 0, 6, 0, 1, 15, 15, 0.00796070460704607, ["mov     eax, dword ptr [rsp+4F8h+pad]", "movsxd  rdx, r11d", "sub     rdx, 1; n", "lea     r12, [r13+_delta+0]", "cmp     eax, 30h ; '0'", "jz      loc_15276"], ["mov~eax,[word ptr [rsp+0]", "movsxd~rdx,r11d", "sub~rdx,0", "lea~r12,[r13+0]", "cmp~eax,0", "jz~FOO"]], [2, 0, 365, 0, 0, 4, 0, 1, 14, 19, 0.0034022622834923998, ["mov     ecx, [rsp+4F8h+number_value]", "mov     r10d, 9", "mov     r11d, 9", "jmp     do_number"], ["mov~ecx,[rsp+0]", "mov~r10d,0", "mov~r11d,0", "jmp~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 13, 20, 0.016657829621774478, ["cmp     r11d, 0FFFFFFFFh", "jz      loc_15090"], ["cmp~r11d,0", "jz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 16, 15, 0.002658477671733239, ["cmp     eax, 2Bh ; '+'", "jz      loc_15276"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 365, 0, 0, 5, 1, 0, 5, 9, 0.745412100860139, ["movzx   eax, [rsp+4F8h+to_uppcase]", "xor     r9d, r9d", "mov     dword ptr [rsp+4F8h+pad], 0", "mov     edx, 1", "mov     byte ptr [rsp+4F8h+to_uppcase_0], al"], ["movzx~eax,[rsp+0]", "xor~r9d,r9d", "mov~[word ptr [rsp+0],0", "mov~edx,0", "mov~[yte ptr [rsp+0],al"]], [1, 0, 365, 0, 0, 2, 0, 1, 4, 10, 0.7622245787675268, ["cmp     al, 25h ; '%'", "jz      loc_13898"], ["cmp~al,0", "jz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 14, 21, 0.010604453870625662, ["cmp     r11d, 8", "jg      loc_153A0"], ["cmp~r11d,0", "jg~FOO"]], [1, 0, 365, 0, 0, 3, 1, 1, 15, 20, 0.03589313067043714, ["xor     r8d, r8d", "mov     r12d, 1", "jmp     loc_144DF"], ["xor~r8d,r8d", "mov~r12d,0", "jmp~FOO"]], [0, 0, 365, 0, 0, 3, 1, 1, 14, 21, 0.04386119948156003, ["mov     r9, [rax+28h]", "test    r9d, r9d", "js      loc_150A8"], ["mov~r9,[rax+0]", "test~r9d,r9d", "js~FOO"]], [0, 1, 365, 0, 1, 4, 0, 1, 17, 14, 0.0013329209379050314, ["mov     rdi, r13; s", "mov     esi, 20h ; ' '; c", "mov     r13, r12", "call    _memset"], ["mov~rdi,r13", "mov~esi,<STR>", "mov~r13,r12", "call~FOO"]], [2, 0, 365, 1, 0, 7, 0, 1, 6, 8, 0.7548530104866266, ["add     rbx, 1", "movsx   eax, byte ptr [f]", "lea     ecx, [rax-23h]", "mov     esi, eax", "mov     edi, eax", "cmp     cl, 3Ch ; '<'", "ja      short loc_138F0"], ["add~rbx,0", "movsx~eax,<TAG>", "lea~ecx,[rax-23h]+0]", "mov~esi,eax", "mov~edi,eax", "cmp~cl,0", "ja~FOO"]], [0, 0, 365, 0, 0, 2, 0, 1, 8, 9, 0.001325556733828208, ["mov     dword ptr [rsp+4F8h+pad], eax", "jmp     loc_138B1"], ["mov~[word ptr [rsp+0],eax", "jmp~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 9, 9, 2.209261223047013e-05, ["mov     r9d, 1", "jmp     loc_138B1"], ["mov~r9d,0", "jmp~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 10, 9, 3.6821020384116885e-05, ["mov     byte ptr [rsp+4F8h+to_uppcase_0], 1", "jmp     loc_138B1"], ["mov~[yte ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 365, 0, 0, 4, 0, 0, 15, 21, 0.002658477671733239, ["mov     ecx, [rsp+4F8h+number_value]", "mov     esi, r11d", "mov     r8d, 66666667h", "nop     dword ptr [rax+00h]"], ["mov~ecx,[rsp+0]", "mov~esi,r11d", "mov~r8d,0", "nop~[word ptr [rax+0]"]], [2, 0, 365, 1, 0, 2, 0, 0, 15, 13, 0.01329975256274302, ["mov     byte ptr [r13+0], 0Ah", "add     r13, 1"], ["mov~[yte ptr [r13+0],0", "add~r13,0"]], [1, 0, 365, 0, 1, 5, 0, 2, 16, 14, 0.003991398609638271, ["mov     rdi, r13; s", "mov     esi, 30h ; '0'; c", "mov     r13, r12", "call    _memset", "jmp     loc_140C1"], ["mov~rdi,r13", "mov~esi,0", "mov~r13,r12", "call~FOO", "jmp~FOO"]], [0, 0, 365, 0, 0, 2, 1, 1, 13, 13, 0.019987431758375546, ["test    r13, r13", "jz      loc_140CA"], ["test~r13,r13", "jz~FOO"]], [2, 0, 365, 1, 0, 3, 0, 1, 15, 13, 0.013299752562743019, ["mov     byte ptr [r13+0], 9", "add     r13, 1", "jmp     loc_140CA"], ["mov~[yte ptr [r13+0],0", "add~r13,0", "jmp~FOO"]], [0, 0, 365, 0, 0, 2, 1, 1, 13, 13, 0.04589470170064001, ["test    r13, r13", "jz      loc_140CA"], ["test~r13,r13", "jz~FOO"]], [0, 0, 365, 1, 0, 2, 0, 1, 17, 13, 0.0395015906680806, ["add     r13, _n", "jmp     loc_140CA"], ["add~r13,_n", "jmp~FOO"]], [1, 0, 365, 1, 0, 5, 1, 1, 7, 10, 0.013262931542358901, ["mov     r8, rdx", "mov     r10, 1000000000002500h", "shl     r8, cl", "test    r8, r10", "jnz     short loc_13940"], ["mov~r8,rdx", "mov~r10,0", "shl~r8,cl", "test~r8,r10", "jnz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 18, 19, 0.014279191704960528, ["cmp     dword ptr [rsp+4F8h+pad], 5Fh ; '_'", "jz      loc_14E10"], ["cmp~[word ptr [rsp+0],0", "jz~FOO"]], [0, 0, 365, 1, 0, 4, 1, 1, 17, 16, 0.0167903852951573, ["mov     r12d, r10d", "sub     r12d, r9d", "test    r12d, r12d", "jg      loc_150D5"], ["mov~r12d,r10d", "sub~r12d,r9d", "test~r12d,r12d", "jg~FOO"]], [0, 0, 365, 0, 0, 2, 1, 1, 8, 9, 0.009286261340874277, ["test    cl, cl", "jz      short loc_13950"], ["test~cl,cl", "jz~FOO"]], [4, 0, 365, 3, 0, 9, 0, 1, 16, 20, 0.0026732060798868853, ["mov     eax, ecx", "add     esi, 1", "sar     ecx, 1Fh", "imul    r8d", "sar     edx, 2", "sub     edx, ecx", "cmp     esi, 9", "mov     ecx, edx", "jnz     short loc_148C8"], ["mov~eax,ecx", "add~esi,0", "sar~ecx,0", "imul~,r8d", "sar~edx,0", "sub~edx,ecx", "cmp~esi,0", "mov~ecx,edx", "jnz~FOO"]], [0, 0, 365, 0, 0, 2, 0, 1, 16, 19, 0.010663367503240248, ["mov     r10d, r11d", "jmp     do_number"], ["mov~r10d,r11d", "jmp~FOO"]], [0, 0, 365, 0, 0, 2, 0, 1, 15, 20, 0.0052948627312360075, ["mov     ecx, [rsp+4F8h+number_value]", "jmp     loc_148DF"], ["mov~ecx,[rsp+0]", "jmp~FOO"]], [0, 0, 365, 0, 0, 3, 0, 0, 19, 18, 0.011097855543772829, ["movsxd  rax, r10d", "cmp     rax, rdx", "jnb     loc_137DC"], ["movsxd~rax,r10d", "cmp~rax,rdx", "jnb~FOO"]], [1, 0, 365, 0, 0, 3, 1, 1, 9, 8, 0.006613055260987392, ["mov     rcx, 800000000000000h", "test    r8, rcx", "jnz     loc_13A28"], ["mov~rcx,0", "test~r8,rcx", "jnz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 12, 18, 0.002658477671733239, ["cmp     r14d, 45h ; 'E'; jumptable 0000000000013923 case 73", "jz      loc_13960; jumptable 0000000000013923 default case"], ["cmp~r14d,0", "jz~FOO"]], [2, 0, 365, 0, 0, 5, 0, 1, 12, 15, 0.02224726051608342, ["mov     rax, [rsp+4F8h+tp]; jumptable 0000000000013923 case 113", "cmp     r14d, 4Fh ; 'O'", "mov     r10d, 1", "mov     eax, [rax+10h]", "jz      loc_13D6E"], ["mov~rax,[rsp+0]", "cmp~r14d,0", "mov~r10d,0", "mov~eax,[rax+0]", "jz~FOO"]], [0, 0, 365, 0, 0, 3, 0, 1, 20, 17, 0.011038941911158241, ["movsxd  rcx, r12d", "mov     padding_0, rbx", "jmp     loc_1428E"], ["movsxd~rcx,r12d", "mov~padding_0,rbx", "jmp~FOO"]], [2, 0, 365, 1, 0, 3, 0, 0, 7, 7, 0.7455299281253682, ["sub     eax, 30h ; '0'", "cmp     eax, 9", "jbe     loc_13A38"], ["sub~eax,0", "cmp~eax,0", "jbe~FOO"]], [1, 0, 365, 0, 0, 3, 0, 1, 13, 19, 0.0007658772239896312, ["mov     ecx, [rsp+4F8h+hour12]", "mov     r10d, 2", "jmp     do_number"], ["mov~ecx,[rsp+0]", "mov~r10d,0", "jmp~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 8, 6, 0.7456919406150583, ["cmp     sil, 45h ; 'E'", "jz      short loc_13928"], ["cmp~sil,0", "jz~FOO"]], [0, 0, 365, 0, 0, 2, 0, 1, 13, 7, 0.009175798279721929, ["movsx   edi, sil", "jmp     loc_138FC"], ["movsx~edi,sil", "jmp~FOO"]], [1, 0, 365, 0, 0, 4, 0, 1, 11, 7, 0.011790090726994228, ["mov     esi, edx", "mov     rbx, rcx", "mov     r11d, 7FFFFFFFh", "jmp     loc_138FC"], ["mov~esi,edx", "mov~rbx,rcx", "mov~r11d,0", "jmp~FOO"]], [1, 0, 365, 0, 0, 3, 1, 1, 9, 5, 0.37152409567573935, ["xor     r14d, r14d", "cmp     sil, 4Fh ; 'O'", "jz      short loc_13928"], ["xor~r14d,r14d", "cmp~sil,0", "jz~FOO"]], [3, 0, 365, 1, 0, 8, 2, 0, 13, 22, 0.01662100860139036, ["lea     edx, [rax+rax*4]", "mov     byte ptr [rsp+4F8h+hour_diff], 0", "xor     r12d, r12d", "xor     esi, esi", "lea     ecx, [rax+rdx*2]", "sar     ecx, 5", "add     ecx, 1", "nop     word ptr [rax+rax+00h]"], ["lea~edx,<TAG>", "mov~[yte ptr [rsp+0],0", "xor~r12d,r12d", "xor~esi,esi", "lea~ecx,<TAG>", "sar~ecx,0", "add~ecx,0", "nop~[ord ptr [rax+0]"]], [1, 0, 365, 0, 0, 2, 0, 1, 10, 4, 0.7457361258395192, ["cmp     sil, 7Ah ; 'z'; switch 123 cases", "ja      short loc_13960; jumptable 0000000000013923 default case"], ["cmp~sil,0", "ja~FOO"]], [1, 0, 365, 1, 0, 5, 0, 1, 9, 5, 0.37152409567573935, ["movzx   esi, byte ptr [rbx+1]", "mov     r14d, edi", "add     rbx, 1", "movsx   edi, sil", "jmp     short loc_1390B"], ["movzx~esi,[yte ptr [rbx+0]", "mov~r14d,edi", "add~rbx,0", "movsx~edi,sil", "jmp~FOO"]], [5, 0, 365, 4, 0, 8, 0, 1, 19, 18, 0.005029751384470366, ["imul    ecx, dword ptr [rsp+4F8h+hour_diff], 2710h", "imul    esi, 64h", "mov     byte ptr [rsp+4F8h+hour_diff], 1", "mov     r10d, 9", "add     ecx, esi", "mov     esi, 14h", "add     ecx, r9d", "jmp     do_number_body"], ["imul~ecx,[word ptr [rsp+0],0", "imul~esi,,0", "mov~[yte ptr [rsp+0],0", "mov~r10d,0", "add~ecx,esi", "mov~esi,0", "add~ecx,r9d", "jmp~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 18, 19, 0.01469895133733946, ["cmp     rax, 2", "jz      tz_hh_mm_ss"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 365, 0, 0, 2, 1, 1, 20, 19, 0.006097560975609756, ["test    r9d, r9d", "jnz     tz_hh_mm_ss"], ["test~r9d,r9d", "jnz~FOO"]], [1, 0, 365, 0, 0, 5, 0, 1, 14, 21, 0.0820004123954283, ["lea     rax, [rsp+4F8h+ubuf]", "lea     rdi, [rsp+4F8h+ubuf+17h]", "mov     r9d, 0CCCCCCCDh", "mov     [rsp+4F8h+colons], rax", "jmp     short loc_1415A"], ["lea~rax,[rsp+0]", "lea~rdi,[rsp+0]", "mov~r9d,0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 365, 0, 0, 5, 1, 1, 15, 22, 0.06268410510192059, ["mov     eax, ecx", "neg     eax", "test    r12b, r12b", "cmovnz  ecx, eax", "jmp     loc_14110"], ["mov~eax,ecx", "neg~eax", "test~r12b,r12b", "cmovnz~ecx,eax", "jmp~FOO"]], [1, 0, 365, 0, 1, 6, 0, 2, 17, 14, 0.003991398609638271, ["mov     rdi, r13; s", "mov     esi, 30h ; '0'; c", "call    _memset", "mov     r13, [rsp+4F8h+hour_diff]", "mov     r10, [rsp+4F8h+var_4A0]", "jmp     loc_14D9D"], ["mov~rdi,r13", "mov~esi,0", "call~FOO", "mov~r13,[rsp+0]", "mov~r10,[rsp+0]", "jmp~FOO"]], [1, 0, 365, 1, 0, 8, 0, 1, 16, 15, 0.00796070460704607, ["movsxd  rdx, r11d", "mov     eax, dword ptr [rsp+4F8h+pad]", "mov     [rsp+4F8h+var_4A0], r10", "sub     rdx, _n; n", "lea     _incr_0, [r13+_delta+0]", "cmp     eax, 30h ; '0'", "mov     [rsp+4F8h+hour_diff], rsi", "jz      loc_1511C"], ["movsxd~rdx,r11d", "mov~eax,[word ptr [rsp+0]", "mov~[rsp+0],r10", "sub~rdx,_n", "lea~_incr_0,[r13+0]", "cmp~eax,0", "mov~[rsp+0],rsi", "jz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 17, 15, 0.002658477671733239, ["cmp     eax, 2Bh ; '+'", "jz      loc_1511C"], ["cmp~eax,0", "jz~FOO"]], [4, 0, 365, 0, 0, 11, 1, 1, 13, 18, 0.003220611916264075, ["mov     rax, [rsp+4F8h+tp]", "mov     byte ptr [rsp+4F8h+hour_diff], 0", "mov     r10d, 3", "mov     eax, [rax+1Ch]", "cmp     eax, 0FFFFFFFFh", "lea     ecx, [rax+1]", "setl    r12b", "cmp     eax, 0FFFFFFFFh", "setnl   r8b", "xor     esi, esi", "jmp     do_number_body"], ["mov~rax,[rsp+0]", "mov~[yte ptr [rsp+0],0", "mov~r10d,0", "mov~eax,[rax+0]", "cmp~eax,0", "lea~ecx,[rax+0]", "setl~r12b", "cmp~eax,0", "setnl~r8b", "xor~esi,esi", "jmp~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 12, 18, 0.005120576568084528, ["cmp     r14d, 45h ; 'E'; jumptable 0000000000013923 case 106", "jz      loc_13960; jumptable 0000000000013923 default case"], ["cmp~r14d,0", "jz~FOO"]], [3, 0, 365, 1, 0, 4, 1, 1, 14, 23, 0.03454548132437846, ["sub     r10d, 1", "mov     edx, 16Dh", "test    r10b, 3", "jnz     short loc_15183"], ["sub~r10d,0", "mov~edx,0", "test~r10b,0", "jnz~FOO"]], [5, 1, 365, 6, 0, 28, 2, 1, 13, 24, 0.050422705314009664, ["mov     rcx, [rsp+4F8h+tp]", "mov     edx, 92492493h", "mov     r8d, [rcx+14h]", "mov     r9d, [rcx+1Ch]", "mov     r12d, [rcx+18h]", "mov     eax, r8d", "mov     ecx, r9d", "sar     eax, 1Fh", "sub     ecx, r12d", "add     ecx, 17Eh", "and     eax, 190h", "lea     r10d, [r8+rax-64h]", "mov     eax, ecx", "imul    edx", "lea     eax, [rdx+rcx]", "mov     edx, ecx", "sar     edx, 1Fh", "sar     eax, 2", "sub     eax, edx", "lea     edx, ds:0[rax*8]", "sub     edx, eax", "mov     eax, edx", "mov     edx, r9d", "sub     edx, ecx", "lea     eax, [rdx+rax+3]", "test    eax, eax", "mov     dword ptr [rsp+4F8h+colons], eax", "js      loc_15138"], ["mov~rcx,[rsp+0]", "mov~edx,0", "mov~r8d,[rcx+0]", "mov~r9d,[rcx+0]", "mov~r12d,[rcx+0]", "mov~eax,r8d", "mov~ecx,r9d", "sar~eax,0", "sub~ecx,r12d", "add~ecx,0", "and~eax,<STR>", "lea~r10d,[r8+0]", "mov~eax,ecx", "imul~,edx", "lea~eax,<TAG>", "mov~edx,ecx", "sar~edx,0", "sar~eax,0", "sub~eax,edx", "lea~edx,<TAG>", "sub~edx,eax", "mov~eax,edx", "mov~edx,r9d", "sub~edx,ecx", "lea~eax,[rdx+0]", "test~eax,eax", "mov~[word ptr [rsp+0],eax", "js~FOO"]], [2, 0, 365, 1, 1, 21, 2, 1, 12, 14, 0.046145084639252015, ["movzx   esi, byte ptr [rsp+4F8h+to_uppcase_0]; jumptable 0000000000013923 case 90", "mov     rdi, [rsp+4F8h+zone]; s", "test    r9b, r9b", "mov     eax, 0", "mov     dword ptr [rsp+4F8h+colons], r11d", "mov     byte ptr [rsp+4F8h+hour_diff], r9b", "cmovnz  esi, eax", "mov     byte ptr [rsp+4F8h+to_uppcase_0], sil", "call    _strlen", "movsxd  r11, dword ptr [rsp+4F8h+colons]", "mov     r12, rax", "mov     eax, 0", "mov     rdx, maxsize", "test    r11d, r11d", "cmovns  rax, r11", "cmp     _n, _w", "mov     modifier, _w", "cmovnb  r14, _n", "sub     rdx, i", "cmp     rdx, _incr", "jbe     loc_137DC"], ["movzx~esi,[yte ptr [rsp+0]", "mov~rdi,[rsp+0]", "test~r9b,r9b", "mov~eax,0", "mov~[word ptr [rsp+0],r11d", "mov~[yte ptr [rsp+0],r9b", "cmovnz~esi,eax", "mov~[yte ptr [rsp+0],sil", "call~FOO", "movsxd~r11,[word ptr [rsp+0]", "mov~r12,rax", "mov~eax,0", "mov~rdx,maxsize", "test~r11d,r11d", "cmovns~rax,r11", "cmp~_n,_w", "mov~modifier,_w", "cmovnb~r14,_n", "sub~rdx,i", "cmp~rdx,_incr", "jbe~FOO"]], [3, 1, 365, 4, 0, 15, 1, 1, 16, 19, 0.041037027218098265, ["mov     eax, ecx", "sar     esi, 1", "mov     byte ptr [rdi-1], 3Ah ; ':'", "mul     r9d", "lea     r14, [rdi-2]", "shr     edx, 3", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     ecx, eax", "mov     eax, esi", "add     ecx, 30h ; '0'", "or      eax, edx", "mov     [rdi-2], cl", "mov     ecx, edx", "jz      short do_number_sign_and_padding"], ["mov~eax,ecx", "sar~esi,0", "mov~[yte ptr [rdi-1]+0],<STR>", "mul~,r9d", "lea~r14,[rdi-2]+0]", "shr~edx,0", "lea~eax,<TAG>", "add~eax,eax", "sub~ecx,eax", "mov~eax,esi", "add~ecx,0", "or~eax,edx", "mov~[rdi-2]+0],cl", "mov~ecx,edx", "jz~FOO"]], [1, 0, 365, 0, 0, 3, 1, 1, 15, 20, 0.08472516790385295, ["test    sil, 1", "lea     r14, [bufp-1]", "jnz     short loc_14130"], ["test~sil,0", "lea~r14,[bufp-1]+0]", "jnz~FOO"]], [0, 0, 365, 0, 0, 1, 0, 0, 17, 21, 2.9456816307293507e-05, ["mov     rdi, r14"], ["mov~rdi,r14"]], [3, 0, 365, 4, 0, 13, 1, 1, 16, 19, 0.041037027218098265, ["mov     eax, ecx", "sar     esi, 1", "mul     r9d", "shr     edx, 3", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     ecx, eax", "mov     eax, esi", "add     ecx, 30h ; '0'", "or      eax, edx", "mov     [rdi-1], cl", "mov     ecx, edx", "jnz     short loc_14157"], ["mov~eax,ecx", "sar~esi,0", "mul~,r9d", "shr~edx,0", "lea~eax,<TAG>", "add~eax,eax", "sub~ecx,eax", "mov~eax,esi", "add~ecx,0", "or~eax,edx", "mov~[rdi-1]+0],cl", "mov~ecx,edx", "jnz~FOO"]], [0, 0, 365, 0, 0, 2, 0, 0, 13, 18, 2.209261223047013e-05, ["mov     rbx, f", "xchg    ax, ax"], ["mov~rbx,f", "xchg~ax,ax"]], [2, 0, 365, 1, 0, 9, 1, 1, 12, 16, 0.015840402969247134, ["mov     rdx, maxsize; jumptable 0000000000013923 case 0", "mov     eax, 0", "lea     r8, [rbx-1]", "sub     rdx, i", "test    r11d, r11d", "cmovns  eax, r11d", "cmp     byte ptr [rbx-1], 25h ; '%'", "cdqe", "jnz     loc_1395B"], ["mov~rdx,maxsize", "mov~eax,0", "lea~r8,[rbx-1]+0]", "sub~rdx,i", "test~r11d,r11d", "cmovns~eax,r11d", "cmp~[yte ptr [rbx-1]+0],0", "cdqe~", "jnz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 0, 11, 17, 0.05649080947331256, ["lea     rax, [rbx-1]; jumptable 0000000000013923 default case", "mov     r14d, 1"], ["lea~rax,[rbx-1]+0]", "mov~r14d,0"]], [1, 0, 365, 0, 0, 2, 0, 1, 12, 3, 0.0, ["cmp     r14d, 4Fh ; 'O'; jumptable 0000000000013923 cases 88,99,120", "jz      loc_13960; jumptable 0000000000013923 default case"], ["cmp~r14d,0", "jz~FOO"]], [0, 0, 365, 0, 0, 2, 1, 1, 12, 14, 0.03728349240014138, ["test    r14d, r14d; jumptable 0000000000013923 cases 65,97", "jnz     loc_13960; jumptable 0000000000013923 default case"], ["test~r14d,r14d", "jnz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 12, 18, 0.002658477671733239, ["cmp     r14d, 45h ; 'E'; jumptable 0000000000013923 case 83", "jz      loc_13960; jumptable 0000000000013923 default case"], ["cmp~r14d,0", "jz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 12, 3, 0.005309591139389655, ["cmp     r14d, 45h ; 'E'; jumptable 0000000000013923 case 66", "jz      loc_13960; jumptable 0000000000013923 default case"], ["cmp~r14d,0", "jz~FOO"]], [0, 0, 365, 0, 0, 2, 1, 1, 12, 17, 0.01059708966654884, ["test    r14d, r14d; jumptable 0000000000013923 case 70", "jnz     loc_13960; jumptable 0000000000013923 default case"], ["test~r14d,r14d", "jnz~FOO"]], [0, 0, 365, 0, 0, 2, 1, 1, 12, 16, 0.002658477671733239, ["test    r14d, r14d; jumptable 0000000000013923 case 68", "jnz     loc_13960; jumptable 0000000000013923 default case"], ["test~r14d,r14d", "jnz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 13, 18, 0.01611656062212796, ["cmp     r14d, 4Fh ; 'O'", "jz      loc_13960; jumptable 0000000000013923 default case"], ["cmp~r14d,0", "jz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 12, 18, 0.003976670201484623, ["cmp     r14d, 45h ; 'E'; jumptable 0000000000013923 case 85", "jz      loc_13960; jumptable 0000000000013923 default case"], ["cmp~r14d,0", "jz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 14, 15, 0.015928773418168965, ["cmp     al, 7Ah ; 'z'", "jnz     loc_13960; jumptable 0000000000013923 default case"], ["cmp~al,0", "jnz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 19, 18, 0.010442441380935549, ["cmp     rax, 3", "jnz     loc_13960; jumptable 0000000000013923 default case"], ["cmp~rax,0", "jnz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 12, 18, 0.002658477671733239, ["cmp     r14d, 45h ; 'E'; jumptable 0000000000013923 case 119", "jz      loc_13960; jumptable 0000000000013923 default case"], ["cmp~r14d,0", "jz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 12, 18, 0.003976670201484623, ["cmp     r14d, 45h ; 'E'; jumptable 0000000000013923 case 87", "jz      loc_13960; jumptable 0000000000013923 default case"], ["cmp~r14d,0", "jz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 12, 18, 0.05205755861906445, ["cmp     r14d, 45h ; 'E'; jumptable 0000000000013923 cases 71,86,103", "jz      loc_13960; jumptable 0000000000013923 default case"], ["cmp~r14d,0", "jz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 12, 18, 0.002658477671733239, ["cmp     r14d, 45h ; 'E'; jumptable 0000000000013923 case 72", "jz      loc_13960; jumptable 0000000000013923 default case"], ["cmp~r14d,0", "jz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 12, 18, 0.002658477671733239, ["cmp     r14d, 45h ; 'E'; jumptable 0000000000013923 case 100", "jz      loc_13960; jumptable 0000000000013923 default case"], ["cmp~r14d,0", "jz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 12, 18, 0.004403794037940382, ["cmp     r14d, 45h ; 'E'; jumptable 0000000000013923 case 101", "jz      loc_13960; jumptable 0000000000013923 default case"], ["cmp~r14d,0", "jz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 12, 18, 0.004403794037940382, ["cmp     r14d, 45h ; 'E'; jumptable 0000000000013923 case 107", "jz      loc_13960; jumptable 0000000000013923 default case"], ["cmp~r14d,0", "jz~FOO"]], [0, 0, 365, 0, 0, 2, 0, 1, 13, 18, 0.00013623777542123248, ["mov     byte ptr [rsp+4F8h+to_uppcase_0], al", "jmp     loc_13960; jumptable 0000000000013923 default case"], ["mov~[yte ptr [rsp+0],al", "jmp~FOO"]], [0, 0, 365, 0, 0, 3, 0, 0, 14, 16, 0.03928066454577589, ["cmp     _n, _w", "movzx   r9d, byte ptr [rsp+4F8h+hour_diff]", "jnb     short loc_149AD"], ["cmp~_n,_w", "movzx~r9d,[yte ptr [rsp+0]", "jnb~FOO"]], [5, 0, 365, 3, 0, 12, 0, 1, 15, 23, 0.002658477671733239, ["mov     eax, r10d", "mov     edx, 51EB851Fh", "imul    edx", "mov     eax, edx", "mov     edx, r10d", "sar     edx, 1Fh", "sar     eax, 5", "sub     eax, edx", "mov     edx, 16Eh", "imul    eax, 64h", "cmp     r10d, eax", "jnz     short loc_15183"], ["mov~eax,r10d", "mov~edx,0", "imul~,edx", "mov~eax,edx", "mov~edx,r10d", "sar~edx,0", "sar~eax,0", "sub~eax,edx", "mov~edx,0", "imul~eax,,0", "cmp~r10d,eax", "jnz~FOO"]], [2, 0, 365, 1, 0, 5, 0, 1, 12, 16, 0.05650553788146622, ["mov     r8, rax", "lea     rax, [rax-1]", "add     r14d, 1", "cmp     byte ptr [rax+1], 25h ; '%'", "jnz     short loc_1396A"], ["mov~r8,rax", "lea~rax,[rax-1]+0]", "add~r14d,0", "cmp~[yte ptr [rax+0],0", "jnz~FOO"]], [2, 1, 365, 2, 0, 8, 0, 0, 16, 23, 0.0, ["mov     eax, r10d", "mov     ecx, 190h", "cdq", "idiv    ecx", "cmp     edx, 1", "sbb     edx, edx", "not     edx", "add     edx, 16Eh"], ["mov~eax,r10d", "mov~ecx,<STR>", "cdq~,", "idiv~,ecx", "cmp~edx,0", "sbb~edx,edx", "not~edx", "add~edx,0"]], [1, 0, 365, 1, 0, 8, 0, 1, 15, 17, 0.00796070460704607, ["movsxd  rdx, r11d", "sub     rdx, _n; n", "lea     _w, [r13+_delta+0]", "mov     [rsp+4F8h+colons], rax", "mov     eax, dword ptr [rsp+4F8h+pad]", "mov     byte ptr [rsp+4F8h+pad], r9b", "cmp     eax, 30h ; '0'", "jz      loc_1530A"], ["movsxd~rdx,r11d", "sub~rdx,_n", "lea~_w,[r13+0]", "mov~[rsp+0],rax", "mov~eax,[word ptr [rsp+0]", "mov~[yte ptr [rsp+0],r9b", "cmp~eax,0", "jz~FOO"]], [0, 0, 365, 0, 0, 4, 1, 1, 17, 18, 0.08207405443619653, ["cmp     r11d, r10d", "cmovge  r10d, r11d", "test    r12b, r12b", "jnz     loc_14B68"], ["cmp~r11d,r10d", "cmovge~r10d,r11d", "test~r12b,r12b", "jnz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 16, 17, 0.002658477671733239, ["cmp     eax, 2Bh ; '+'", "jz      loc_1530A"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 365, 0, 0, 6, 0, 1, 14, 13, 0.18817382467302934, ["lea     rdx, [rsp+4F8h+ufmt]", "mov     [rsp+4F8h+ufmt+2], r14b", "mov     r12, rbx", "mov     r14d, r10d", "lea     rax, [rdx+3]", "jmp     loc_13AD2"], ["lea~rdx,[rsp+0]", "mov~[rsp+0],r14b", "mov~r12,rbx", "mov~r14d,r10d", "lea~rax,[rdx+0]", "jmp~FOO"]], [0, 0, 365, 0, 0, 2, 1, 1, 14, 0, 9.57346529987039e-05, ["xor     r10d, r10d", "jmp     loc_13D7E"], ["xor~r10d,r10d", "jmp~FOO"]], [1, 0, 365, 0, 0, 3, 1, 0, 13, 14, 0.18538279132791327, ["mov     edx, 2520h", "xor     r9d, r9d", "mov     word ptr [rsp+4F8h+ufmt], dx"], ["mov~edx,0", "xor~r9d,r9d", "mov~[ord ptr [rsp+0],dx"]], [1, 0, 365, 0, 0, 2, 0, 1, 18, 17, 0.0435371745021798, ["cmp     byte ptr [rsp+4F8h+hour_diff], 0", "jz      loc_14449"], ["cmp~[yte ptr [rsp+0],0", "jz~FOO"]], [1, 0, 365, 1, 0, 11, 1, 0, 13, 15, 0.056520266289619855, ["mov     rdx, maxsize", "mov     eax, 0", "movsxd  flen, r14d", "sub     rdx, i", "test    r11d, r11d", "mov     r12, rbx", "cmovns  eax, r11d", "cdqe", "cmp     flen, rax", "mov     rcx, rax", "cmovnb  rcx, flen"], ["mov~rdx,maxsize", "mov~eax,0", "movsxd~flen,r14d", "sub~rdx,i", "test~r11d,r11d", "mov~r12,rbx", "cmovns~eax,r11d", "cdqe~", "cmp~flen,rax", "mov~rcx,rax", "cmovnb~rcx,flen"]], [0, 0, 365, 0, 0, 2, 0, 0, 14, 14, 0.08568987863791681, ["cmp     rdx, rcx", "jbe     loc_137DC"], ["cmp~rdx,rcx", "jbe~FOO"]], [2, 0, 365, 0, 0, 6, 1, 1, 13, 15, 0.013167196889360284, ["test    rax, rax", "mov     ecx, 1", "mov     r12, f", "cmovnz  rcx, rax", "mov     r14d, 1", "jmp     loc_1399F"], ["test~rax,rax", "mov~ecx,0", "mov~r12,f", "cmovnz~rcx,rax", "mov~r14d,0", "jmp~FOO"]], [1, 0, 365, 0, 0, 4, 0, 1, 13, 15, 0.010626546482856157, ["mov     r12, rbx", "mov     r8, rbx", "mov     r14d, 1", "jmp     loc_1399F"], ["mov~r12,rbx", "mov~r8,rbx", "mov~r14d,0", "jmp~FOO"]], [3, 0, 365, 2, 0, 6, 1, 1, 18, 18, 0.002467008365735831, ["imul    ecx, dword ptr [rsp+4F8h+hour_diff], 64h", "mov     r10d, 5", "mov     byte ptr [rsp+4F8h+hour_diff], 1", "add     ecx, esi", "xor     esi, esi", "jmp     do_number_body"], ["imul~ecx,[word ptr [rsp+0],0", "mov~r10d,0", "mov~[yte ptr [rsp+0],0", "add~ecx,esi", "xor~esi,esi", "jmp~FOO"]], [0, 0, 365, 0, 0, 1, 0, 0, 17, 19, 0.019817073170731708, ["jb      loc_152DD"], ["jb~FOO"]], [0, 1, 365, 0, 1, 5, 0, 1, 17, 16, 0.0013329209379050314, ["mov     rdi, r13; s", "mov     esi, 20h ; ' '; c", "call    _memset", "movzx   r9d, byte ptr [rsp+4F8h+pad]", "mov     r13, [rsp+4F8h+colons]"], ["mov~rdi,r13", "mov~esi,<STR>", "call~FOO", "movzx~r9d,[yte ptr [rsp+0]", "mov~r13,[rsp+0]"]], [2, 0, 365, 0, 0, 3, 0, 1, 19, 19, 0.002983730018459605, ["cmp     dword ptr [rsp+4F8h+pad], 2Dh ; '-'", "mov     r8d, 2Bh ; '+'", "jz      loc_14FE4"], ["cmp~[word ptr [rsp+0],0", "mov~r8d,0", "jz~FOO"]], [0, 0, 365, 0, 0, 2, 1, 1, 15, 13, 0.08451160598562507, ["test    r13, r13", "jz      short loc_13A1D"], ["test~r13,r13", "jz~FOO"]], [0, 0, 365, 0, 0, 2, 1, 1, 15, 15, 0.039354306586544124, ["test    r9b, r9b", "jnz     loc_1521A"], ["test~r9b,r9b", "jnz~FOO"]], [1, 0, 365, 0, 1, 6, 0, 2, 16, 16, 0.003991398609638271, ["mov     rdi, r13; s", "mov     esi, 30h ; '0'; c", "call    _memset", "mov     r13, [rsp+4F8h+colons]", "movzx   r9d, byte ptr [rsp+4F8h+pad]", "jmp     loc_149AD"], ["mov~rdi,r13", "mov~esi,0", "call~FOO", "mov~r13,[rsp+0]", "movzx~r9d,[yte ptr [rsp+0]", "jmp~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 16, 15, 0.010611818074702486, ["cmp     byte ptr [rsp+4F8h+to_uppcase_0], 0", "jz      loc_15205"], ["cmp~[yte ptr [rsp+0],0", "jz~FOO"]], [0, 0, 365, 0, 0, 2, 0, 0, 21, 16, 0.01059708966654884, ["cmp     _n_1, rcx", "jnb     short loc_1433D"], ["cmp~_n_1,rcx", "jnb~FOO"]], [0, 0, 365, 0, 0, 2, 1, 1, 20, 16, 0.028867679981147636, ["test    r10d, r10d", "jnz     short loc_1433D"], ["test~r10d,r10d", "jnz~FOO"]], [6, 0, 365, 7, 0, 20, 0, 1, 15, 22, 0.0345896665488394, ["add     r9d, edx", "mov     edx, 92492493h", "mov     ecx, r9d", "sub     ecx, r12d", "add     ecx, 17Eh", "mov     eax, ecx", "sub     r9d, ecx", "imul    edx", "lea     eax, [rdx+rcx]", "mov     edx, ecx", "sar     edx, 1Fh", "sar     eax, 2", "sub     eax, edx", "lea     edx, ds:0[rax*8]", "sub     edx, eax", "mov     eax, 0FFFFFFFFh", "lea     ecx, [r9+rdx+3]", "mov     r10d, eax", "mov     r9d, 0FFFFF895h", "jmp     loc_147AE"], ["add~r9d,edx", "mov~edx,0", "mov~ecx,r9d", "sub~ecx,r12d", "add~ecx,0", "mov~eax,ecx", "sub~r9d,ecx", "imul~,edx", "lea~eax,<TAG>", "mov~edx,ecx", "sar~edx,0", "sar~eax,0", "sub~eax,edx", "lea~edx,<TAG>", "sub~edx,eax", "mov~eax,0", "lea~ecx,[r9+0]", "mov~r10d,eax", "mov~r9d,0", "jmp~FOO"]], [1, 0, 365, 4, 0, 9, 1, 1, 17, 18, 0.08878898118691331, ["mov     r9, [rsp+4F8h+colons]", "lea     r12d, [digits_0-1]", "mov     rdx, maxsize", "sub     rdx, i", "add     r9, 17h", "sub     r9, r14", "sub     r12d, r9d", "test    r12d, r12d", "jle     loc_14F2A"], ["mov~r9,[rsp+0]", "lea~r12d,[digits_0-1]+0]", "mov~rdx,maxsize", "sub~rdx,i", "add~r9,0", "sub~r9,r14", "sub~r12d,r9d", "test~r12d,r12d", "jle~FOO"]], [3, 0, 365, 0, 0, 4, 0, 1, 16, 18, 0.11506200659832685, ["cmp     dword ptr [rsp+4F8h+pad], 2Dh ; '-'", "mov     r8d, 2Dh ; '-'", "mov     r9d, 2Dh ; '-'", "jnz     loc_141AF"], ["cmp~[word ptr [rsp+0],0", "mov~r8d,0", "mov~r9d,0", "jnz~FOO"]], [0, 0, 365, 0, 0, 4, 1, 1, 17, 14, 0.006635147873217863, ["lea     rdx, [_n-1]", "test    _n, _n", "mov     [rsp+4F8h+pad], rdx", "jz      short loc_149F8"], ["lea~rdx,[_n-1]+0]", "test~_n,_n", "mov~[rsp+0],rdx", "jz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 18, 19, 0.058869447390126076, ["cmp     dword ptr [rsp+4F8h+pad], 5Fh ; '_'", "jz      loc_14E13"], ["cmp~[word ptr [rsp+0],0", "jz~FOO"]], [0, 0, 365, 0, 1, 3, 0, 1, 18, 15, 0.002658477671733239, ["call    ___ctype_toupper_loc", "mov     rdi, [rsp+4F8h+zone]", "mov     rdx, [rsp+4F8h+pad]"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rdx,[rsp+0]"]], [1, 1, 365, 0, 0, 3, 0, 1, 18, 17, 0.0026547955696948275, ["cmp     eax, 2Bh ; '+'", "mov     esi, 20h ; ' '; c", "jz      loc_14D4C"], ["cmp~eax,0", "mov~esi,<STR>", "jz~FOO"]], [1, 0, 365, 1, 0, 8, 0, 1, 17, 18, 0.007953340402969246, ["mov     eax, dword ptr [rsp+4F8h+pad]", "movsxd  rdx, r11d", "mov     [rsp+4F8h+colons], rcx", "sub     rdx, r14; n", "mov     [rsp+4F8h+pad], r8", "lea     rbx, [r13+_delta+0]", "cmp     eax, 30h ; '0'", "jz      loc_14D4C"], ["mov~eax,[word ptr [rsp+0]", "movsxd~rdx,r11d", "mov~[rsp+0],rcx", "sub~rdx,r14", "mov~[rsp+0],r8", "lea~rbx,[r13+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 365, 0, 0, 3, 0, 0, 19, 18, 0.026750471309060917, ["movsxd  rax, r10d", "cmp     rax, rdx", "jnb     loc_137DC"], ["movsxd~rax,r10d", "cmp~rax,rdx", "jnb~FOO"]], [5, 0, 365, 3, 0, 11, 0, 1, 18, 19, 0.01278916774674993, ["mov     eax, ecx", "mov     edx, 92492493h", "mov     r10d, 2", "imul    edx", "lea     eax, [rdx+days]", "sar     ecx, 1Fh", "sar     eax, 2", "sub     eax, ecx", "mov     ecx, eax", "add     ecx, 1", "jmp     do_number"], ["mov~eax,ecx", "mov~edx,0", "mov~r10d,0", "imul~,edx", "lea~eax,<TAG>", "sar~ecx,0", "sar~eax,0", "sub~eax,ecx", "mov~ecx,eax", "add~ecx,0", "jmp~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 17, 20, 0.02689161855386669, ["cmp     sil, 67h ; 'g'", "jnz     loc_151CC"], ["cmp~sil,0", "jnz~FOO"]], [0, 0, 365, 0, 1, 5, 0, 1, 19, 16, 0.00799752562743019, ["mov     rdi, r13; s", "mov     r13, rbx", "call    _memset", "mov     r8, [rsp+4F8h+pad]", "mov     rcx, [rsp+4F8h+colons]"], ["mov~rdi,r13", "mov~r13,rbx", "call~FOO", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]"]], [1, 0, 365, 0, 0, 2, 0, 1, 18, 17, 0.0026547955696948275, ["mov     esi, 30h ; '0'", "jmp     loc_139E2"], ["mov~esi,0", "jmp~FOO"]], [2, 0, 365, 1, 0, 7, 0, 1, 19, 14, 0.0026732060798868858, ["movzx   esi, byte ptr [rdi+rdx]", "mov     rcx, [rax]", "mov     ecx, [rcx+rsi*4]", "mov     [r13+rdx+0], cl", "sub     rdx, 1", "cmp     rdx, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_149DF"], ["movzx~esi,<TAG>", "mov~rcx,<TAG>", "mov~ecx,<TAG>", "mov~[r13+0],cl", "sub~rdx,0", "cmp~rdx,0", "jnz~FOO"]], [0, 0, 365, 0, 1, 5, 0, 2, 17, 14, 0.001325556733828208, ["mov     rsi, [rsp+4F8h+zone]; src", "mov     rdx, _n; n", "mov     rdi, r13; dest", "call    _memcpy", "jmp     loc_149F8"], ["mov~rsi,[rsp+0]", "mov~rdx,_n", "mov~rdi,r13", "call~FOO", "jmp~FOO"]], [0, 0, 365, 0, 0, 4, 1, 1, 16, 14, 0.026091375044185225, ["lea     rdx, [_n-1]", "test    _n, _n", "mov     [rsp+4F8h+pad], rdx", "jz      loc_149F8"], ["lea~rdx,[_n-1]+0]", "test~_n,_n", "mov~[rsp+0],rdx", "jz~FOO"]], [0, 0, 365, 0, 0, 1, 0, 1, 19, 14, 0.005339047955696948, ["jmp     loc_149F8"], ["jmp~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 17, 15, 0.026349122186874043, ["cmp     byte ptr [rsp+4F8h+to_uppcase_0], 0", "jnz     loc_14C38"], ["cmp~[yte ptr [rsp+0],0", "jnz~FOO"]], [0, 0, 365, 0, 0, 2, 0, 0, 16, 16, 0.02627548014610581, ["cmp     r14, rax", "jnb     short loc_139F7"], ["cmp~r14,rax", "jnb~FOO"]], [1, 0, 365, 0, 1, 5, 0, 2, 16, 14, 0.003991398609638271, ["mov     rdi, r13; s", "mov     esi, 30h ; '0'; c", "mov     r13, r12", "call    _memset", "jmp     loc_145EB"], ["mov~rdi,r13", "mov~esi,0", "mov~r13,r12", "call~FOO", "jmp~FOO"]], [2, 0, 365, 1, 0, 6, 0, 1, 15, 15, 0.00796070460704607, ["mov     eax, dword ptr [rsp+4F8h+pad]", "movsxd  rdx, r11d", "sub     rdx, 1; n", "lea     r12, [r13+_delta+0]", "cmp     eax, 30h ; '0'", "jz      loc_151F0"], ["mov~eax,[word ptr [rsp+0]", "movsxd~rdx,r11d", "sub~rdx,0", "lea~r12,[r13+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 16, 15, 0.002658477671733239, ["cmp     eax, 2Bh ; '+'", "jz      loc_151F0"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 12, 16, 0.01951023133419738, ["cmp     r14d, 45h ; 'E'; jumptable 0000000000013923 case 121", "jz      loc_14E08"], ["cmp~r14d,0", "jz~FOO"]], [2, 0, 365, 0, 0, 9, 2, 0, 20, 17, 0.026721014492753624, ["test    r11d, r11d", "mov     eax, 0", "mov     ecx, 1", "cmovns  eax, r11d", "cdqe", "test    _w, _w", "cmovnz  rcx, _w", "cmp     _incr, rdx", "jnb     loc_137DC"], ["test~r11d,r11d", "mov~eax,0", "mov~ecx,0", "cmovns~eax,r11d", "cdqe~", "test~_w,_w", "cmovnz~rcx,_w", "cmp~_incr,rdx", "jnb~FOO"]], [1, 0, 365, 0, 0, 5, 1, 1, 17, 18, 0.007543399709359412, ["cmp     r11d, r10d", "mov     dword ptr [rsp+4F8h+pad], 2Bh ; '+'", "setnle  byte ptr [rsp+4F8h+hour_diff]", "xor     esi, esi", "jmp     do_number_body"], ["cmp~r11d,r10d", "mov~[word ptr [rsp+0],0", "setnle~[yte ptr [rsp+0]", "xor~esi,esi", "jmp~FOO"]], [2, 0, 365, 0, 0, 4, 1, 1, 16, 19, 0.0008665213463728796, ["mov     r8d, 1", "xor     r12d, r12d", "mov     r10d, 2", "jmp     loc_14845"], ["mov~r8d,0", "xor~r12d,r12d", "mov~r10d,0", "jmp~FOO"]], [0, 0, 365, 0, 1, 6, 0, 1, 18, 14, 0.01838841757982797, ["mov     rdx, r14; n", "mov     rsi, r8; src", "mov     rdi, r13; dest", "mov     [rsp+4F8h+pad], rcx", "call    _memcpy", "mov     rcx, [rsp+4F8h+pad]"], ["mov~rdx,r14", "mov~rsi,r8", "mov~rdi,r13", "mov~[rsp+0],rcx", "call~FOO", "mov~rcx,[rsp+0]"]], [0, 0, 365, 1, 0, 5, 1, 1, 21, 16, 0.026706286084599976, ["add     i, _incr", "test    r13, r13", "movsxd  _incr, r12d", "mov     padding_0, rbx", "jz      loc_142C4"], ["add~i,_incr", "test~r13,r13", "movsxd~_incr,r12d", "mov~padding_0,rbx", "jz~FOO"]], [0, 0, 365, 1, 0, 1, 0, 0, 19, 13, 0.026422764227642278, ["add     r13, r14"], ["add~r13,r14"]], [0, 0, 365, 0, 0, 1, 0, 1, 20, 14, 0.005339047955696948, ["jmp     loc_13A1A"], ["jmp~FOO"]], [1, 0, 365, 0, 0, 2, 0, 0, 23, 18, 0.01059708966654884, ["cmp     _w, 1", "jbe     short loc_14283"], ["cmp~_w,0", "jbe~FOO"]], [0, 0, 365, 0, 0, 2, 1, 1, 22, 18, 0.015995051254860376, ["test    r10d, r10d", "jnz     short loc_14283"], ["test~r10d,r10d", "jnz~FOO"]], [0, 0, 365, 0, 0, 1, 1, 0, 8, 10, 0.023513903617297043, ["xor     r11d, r11d"], ["xor~r11d,r11d"]], [1, 0, 365, 0, 0, 6, 0, 1, 9, 9, 0.023720101331448095, ["movsx   edi, byte ptr [rbx+1]", "cmp     r11d, 0CCCCCCCh", "lea     rcx, [rbx+1]", "mov     edx, edi", "lea     eax, [rdi-30h]", "jg      short loc_13A76"], ["movsx~edi,[yte ptr [rbx+0]", "cmp~r11d,0", "lea~rcx,[rbx+0]", "mov~edx,edi", "lea~eax,[rdi-30h]+0]", "jg~FOO"]], [1, 0, 365, 0, 0, 2, 0, 0, 12, 8, 0.009352539177565688, ["cmp     eax, 9", "jbe     short loc_13A3B"], ["cmp~eax,0", "jbe~FOO"]], [0, 0, 365, 0, 0, 1, 0, 1, 10, 10, 0.007934929892777188, ["jz      short loc_13A70"], ["jz~FOO"]], [2, 0, 365, 1, 0, 7, 0, 1, 18, 15, 0.005324319547543302, ["movzx   esi, byte ptr [rdi+rdx]", "mov     rcx, [rax]", "mov     ecx, [rcx+rsi*4]", "mov     [r13+rdx+0], cl", "sub     rdx, 1", "cmp     rdx, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_1523C"], ["movzx~esi,<TAG>", "mov~rcx,<TAG>", "mov~ecx,<TAG>", "mov~[r13+0],cl", "sub~rdx,0", "cmp~rdx,0", "jnz~FOO"]], [0, 0, 365, 0, 1, 3, 0, 1, 17, 16, 0.005309591139389655, ["call    ___ctype_tolower_loc", "mov     rdi, [rsp+4F8h+zone]", "mov     rdx, [rsp+4F8h+pad]"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rdx,[rsp+0]"]], [1, 0, 365, 0, 0, 2, 0, 1, 25, 19, 0.002658477671733239, ["cmp     eax, 2Bh ; '+'", "jz      loc_15327"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 365, 1, 0, 10, 0, 1, 24, 19, 0.00796070460704607, ["mov     eax, dword ptr [rsp+4F8h+pad]", "movsxd  rdx, r11d", "mov     [rsp+4F8h+var_4A0], r9", "sub     rdx, 1; n", "mov     [rsp+4F8h+padding], padding_0", "mov     byte ptr [rsp+4F8h+hour_diff], r8b", "lea     r12, [r13+_delta+0]", "mov     dword ptr [rsp+4F8h+colons], r10d", "cmp     eax, 30h ; '0'", "jz      loc_15327"], ["mov~eax,[word ptr [rsp+0]", "movsxd~rdx,r11d", "mov~[rsp+0],r9", "sub~rdx,0", "mov~[rsp+0],padding_0", "mov~[yte ptr [rsp+0],r8b", "lea~r12,[r13+0]", "mov~[word ptr [rsp+0],r10d", "cmp~eax,0", "jz~FOO"]], [1, 0, 365, 0, 0, 5, 1, 1, 12, 3, 0.005316955343466478, ["movzx   eax, byte ptr [rsp+4F8h+to_uppcase_0]; jumptable 0000000000013923 cases 98,104", "test    r9b, r9b", "cmovnz  eax, r9d", "cmp     r14d, 45h ; 'E'", "jz      loc_152B3"], ["movzx~eax,[yte ptr [rsp+0]", "test~r9b,r9b", "cmovnz~eax,r9d", "cmp~r14d,0", "jz~FOO"]], [0, 0, 365, 0, 0, 4, 0, 0, 11, 9, 0.0039877165075998585, ["lea     edi, [width_0+width_0*4]", "mov     rbx, rcx", "lea     r11d, [rsi+rdi*2-30h]", "movsx   esi, dl"], ["lea~edi,<TAG>", "mov~rbx,rcx", "lea~r11d,[rsi+0]", "movsx~esi,dl"]], [1, 0, 365, 0, 0, 2, 0, 1, 11, 9, 0.0013329209379050314, ["cmp     sil, 37h ; '7'", "jle     short loc_13A53"], ["cmp~sil,0", "jle~FOO"]], [3, 0, 365, 2, 0, 6, 0, 1, 11, 9, 0.002669523977848474, ["movsx   eax, byte ptr [rbx+2]", "mov     r11d, 7FFFFFFFh", "add     rbx, 2", "mov     esi, eax", "sub     eax, 30h ; '0'", "jmp     short loc_13A62"], ["movsx~eax,[yte ptr [rbx+0]", "mov~r11d,0", "add~rbx,0", "mov~esi,eax", "sub~eax,0", "jmp~FOO"]], [0, 0, 365, 0, 0, 4, 1, 1, 13, 2, 0.00252960410038883, ["mov     esi, edi", "mov     byte ptr [rsp+4F8h+to_uppcase_0], al", "xor     r9d, r9d", "jmp     underlying_strftime"], ["mov~esi,edi", "mov~[yte ptr [rsp+0],al", "xor~r9d,r9d", "jmp~FOO"]], [4, 0, 365, 2, 0, 6, 0, 1, 17, 18, 0.02283639684222929, ["imul    ecx, dword ptr [rsp+4F8h+hour_diff], 64h", "mov     r10d, 6", "mov     byte ptr [rsp+4F8h+hour_diff], 1", "add     ecx, esi", "mov     esi, 4", "jmp     do_number_body"], ["imul~ecx,[word ptr [rsp+0],0", "mov~r10d,0", "mov~[yte ptr [rsp+0],0", "add~ecx,esi", "mov~esi,0", "jmp~FOO"]], [10, 0, 365, 10, 0, 31, 0, 1, 16, 19, 0.043934841522328266, ["mov     eax, r9d", "mov     edx, 91A2B3C5h", "mov     esi, 88888889h", "imul    edx", "mov     eax, r9d", "mov     r10d, r9d", "sar     r10d, 1Fh", "lea     ecx, [rdx+diff]", "imul    esi", "sar     ecx, 0Bh", "sub     ecx, r10d", "mov     dword ptr [rsp+4F8h+hour_diff], ecx", "lea     ecx, [rdx+diff]", "sar     ecx, 5", "sub     ecx, r10d", "mov     eax, ecx", "imul    esi", "mov     eax, ecx", "sar     eax, 1Fh", "lea     esi, [rdx+rcx]", "sar     esi, 5", "sub     esi, eax", "mov     eax, ecx", "imul    esi, 3Ch", "imul    ecx, 3Ch", "sub     eax, esi", "mov     esi, eax", "mov     min_diff, [rsp+4F8h+colons]", "sub     r9d, ecx", "cmp     rax, 1", "jz      tz_hh_mm"], ["mov~eax,r9d", "mov~edx,0", "mov~esi,0", "imul~,edx", "mov~eax,r9d", "mov~r10d,r9d", "sar~r10d,0", "lea~ecx,<TAG>", "imul~,esi", "sar~ecx,0", "sub~ecx,r10d", "mov~[word ptr [rsp+0],ecx", "lea~ecx,<TAG>", "sar~ecx,0", "sub~ecx,r10d", "mov~eax,ecx", "imul~,esi", "mov~eax,ecx", "sar~eax,0", "lea~esi,<TAG>", "sar~esi,0", "sub~esi,eax", "mov~eax,ecx", "imul~esi,,0", "imul~ecx,,0", "sub~eax,esi", "mov~esi,eax", "mov~min_diff,[rsp+0]", "sub~r9d,ecx", "cmp~rax,0", "jz~FOO"]], [0, 0, 365, 0, 0, 2, 1, 1, 21, 19, 0.0026879344880405324, ["test    esi, esi", "jnz     tz_hh_mm"], ["test~esi,esi", "jnz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 12, 14, 0.04427212206904677, ["mov     [rsp+4F8h+colons], 0; jumptable 0000000000013923 case 122", "jmp     do_z_conversion"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 10, 8, 0.017110728172499114, ["cmp     eax, 9", "ja      short loc_13A90"], ["cmp~eax,0", "ja~FOO"]], [0, 1, 365, 0, 1, 8, 0, 1, 26, 18, 0.0013329209379050314, ["mov     rdi, r13; s", "mov     esi, 20h ; ' '; c", "mov     r13, r12", "call    _memset", "movzx   r8d, byte ptr [rsp+4F8h+hour_diff]", "mov     r9, [rsp+4F8h+var_4A0]", "mov     rcx, [rsp+4F8h+padding]", "mov     r10d, dword ptr [rsp+4F8h+colons]"], ["mov~rdi,r13", "mov~esi,<STR>", "mov~r13,r12", "call~FOO", "movzx~r8d,[yte ptr [rsp+0]", "mov~r9,[rsp+0]", "mov~rcx,[rsp+0]", "mov~r10d,[word ptr [rsp+0]"]], [1, 0, 365, 1, 0, 3, 0, 0, 23, 17, 0.01608342170378226, ["mov     [r13+0], r8b", "mov     r12, rbx", "add     r13, 1"], ["mov~[r13+0],r8b", "mov~r12,rbx", "add~r13,0"]], [1, 0, 365, 0, 1, 9, 0, 2, 25, 18, 0.003991398609638271, ["mov     rdi, r13; s", "mov     esi, 30h ; '0'; c", "mov     r13, r12", "call    _memset", "mov     r10d, dword ptr [rsp+4F8h+colons]", "movzx   r8d, byte ptr [rsp+4F8h+hour_diff]", "mov     rcx, [rsp+4F8h+padding]", "mov     r9, [rsp+4F8h+var_4A0]", "jmp     loc_14283"], ["mov~rdi,r13", "mov~esi,0", "mov~r13,r12", "call~FOO", "mov~r10d,[word ptr [rsp+0]", "movzx~r8d,[yte ptr [rsp+0]", "mov~rcx,[rsp+0]", "mov~r9,[rsp+0]", "jmp~FOO"]], [1, 0, 365, 0, 0, 2, 0, 0, 13, 17, 0.005302226935312831, ["lea     rcx, [rbx+2]", "mov     [rsp+4F8h+colons], 1"], ["lea~rcx,[rbx+0]", "mov~[rsp+0],0"]], [0, 1, 365, 0, 0, 4, 0, 1, 12, 17, 0.01585513137740073, ["movzx   eax, byte ptr [rbx+1]; jumptable 0000000000013923 case 58", "lea     rdx, [rbx+1]", "cmp     al, 3Ah ; ':'", "jz      loc_1528B"], ["movzx~eax,[yte ptr [rbx+0]", "lea~rdx,[rbx+0]", "cmp~al,<STR>", "jz~FOO"]], [0, 0, 365, 0, 0, 2, 1, 1, 21, 16, 0.029817662307057857, ["test    r13, r13", "jz      short loc_142C4"], ["test~r13,r13", "jz~FOO"]], [1, 0, 365, 0, 0, 4, 0, 1, 13, 19, 0.0007658772239896312, ["mov     rax, [rsp+4F8h+tp]", "mov     r10d, 2", "mov     ecx, [rax+0Ch]", "jmp     do_number"], ["mov~rax,[rsp+0]", "mov~r10d,0", "mov~ecx,[rax+0]", "jmp~FOO"]], [2, 1, 365, 2, 0, 6, 0, 1, 14, 16, 0.007997525627430188, ["mov     rdx, rcx", "add     rcx, 1", "movzx   eax, byte ptr [rcx-1]", "add     [rsp+4F8h+colons], 1", "cmp     al, 3Ah ; ':'", "jnz     loc_144A1"], ["mov~rdx,rcx", "add~rcx,0", "movzx~eax,[yte ptr [rcx-1]+0]", "add~[rsp+0],0", "cmp~al,<STR>", "jnz~FOO"]], [0, 0, 365, 0, 0, 1, 0, 1, 15, 17, 0.0, ["jmp     short loc_15298"], ["jmp~FOO"]], [1, 0, 365, 0, 0, 4, 0, 1, 13, 19, 0.0007658772239896312, ["mov     rax, [rsp+4F8h+tp]", "mov     r10d, 2", "mov     ecx, [rax+8]", "jmp     do_number"], ["mov~rax,[rsp+0]", "mov~r10d,0", "mov~ecx,[rax+0]", "jmp~FOO"]], [1, 0, 365, 0, 0, 4, 1, 1, 13, 1, 0.03664796158831153, ["mov     eax, 2520h", "test    r14d, r14d", "mov     word ptr [rsp+4F8h+ufmt], ax", "jnz     loc_153C4"], ["mov~eax,0", "test~r14d,r14d", "mov~[ord ptr [rsp+0],ax", "jnz~FOO"]], [1, 0, 365, 0, 0, 3, 0, 1, 14, 2, 0.003991398609638271, ["mov     r9d, eax", "mov     esi, 70h ; 'p'", "jmp     underlying_strftime"], ["mov~r9d,eax", "mov~esi,0", "jmp~FOO"]], [0, 0, 365, 0, 0, 2, 1, 1, 13, 2, 0.0051696712619300105, ["test    r9b, r9b", "jz      underlying_strftime"], ["test~r9b,r9b", "jz~FOO"]], [2, 0, 365, 0, 0, 3, 0, 1, 14, 2, 0.003991398609638271, ["mov     esi, 70h ; 'p'", "mov     byte ptr [rsp+4F8h+to_uppcase_0], 0", "jmp     underlying_strftime"], ["mov~esi,0", "mov~[yte ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 365, 0, 0, 1, 1, 0, 12, 2, 0.01290944974667138, ["xor     r9d, r9d; jumptable 0000000000013923 case 114"], ["xor~r9d,r9d"]], [1, 0, 365, 1, 1, 11, 0, 1, 22, 16, 0.0, ["mov     rdx, rcx; n", "mov     rdi, r13; s", "mov     esi, 30h ; '0'; c", "mov     [rsp+4F8h+padding], r9", "mov     dword ptr [rsp+4F8h+hour_diff], r10d", "mov     [rsp+4F8h+colons], rcx", "call    _memset", "mov     rcx, [rsp+4F8h+colons]", "mov     r9, [rsp+4F8h+padding]", "mov     r10d, dword ptr [rsp+4F8h+hour_diff]", "add     r13, rcx"], ["mov~rdx,rcx", "mov~rdi,r13", "mov~esi,0", "mov~[rsp+0],r9", "mov~[word ptr [rsp+0],r10d", "mov~[rsp+0],rcx", "call~FOO", "mov~rcx,[rsp+0]", "mov~r9,[rsp+0]", "mov~r10d,[word ptr [rsp+0]", "add~r13,rcx"]], [0, 0, 365, 0, 0, 3, 0, 0, 14, 13, 0.03390111346765642, ["lea     rdx, [rsp+4F8h+ufmt]; format", "mov     r12, rbx", "lea     rax, [rdx+2]"], ["lea~rdx,[rsp+0]", "mov~r12,rbx", "lea~rax,[rdx+0]"]], [0, 0, 365, 2, 0, 5, 2, 0, 22, 15, 0.0405730823612584, ["add     rbp, rcx", "mov     rdx, maxsize", "xor     ecx, ecx", "sub     rdx, i", "xor     r11d, r11d"], ["add~rbp,rcx", "mov~rdx,maxsize", "xor~ecx,ecx", "sub~rdx,i", "xor~r11d,r11d"]], [2, 0, 365, 1, 0, 7, 0, 1, 14, 15, 0.006517320607988688, ["mov     r14d, r11d", "mov     eax, 0", "sub     r14d, 6", "cmovs   r14d, eax", "lea     rax, aYMD_0; \"%Y-%m-%d\"", "mov     [rsp+4F8h+colons], rax", "jmp     subformat_width"], ["mov~r14d,r11d", "mov~eax,0", "sub~r14d,0", "cmovs~r14d,eax", "lea~rax,<TAG>", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 365, 0, 0, 3, 1, 1, 13, 16, 0.010486626605396489, ["mov     r12d, dword ptr [rsp+4F8h+pad]", "test    r12d, r12d", "jnz     loc_152BC"], ["mov~r12d,[word ptr [rsp+0]", "test~r12d,r12d", "jnz~FOO"]], [0, 0, 365, 0, 0, 2, 1, 0, 14, 16, 0.002658477671733239, ["test    r11d, r11d", "jns     loc_152BC"], ["test~r11d,r11d", "jns~FOO"]], [0, 0, 365, 0, 0, 5, 0, 0, 18, 14, 0.20650946545697343, ["cmp     _n_1, rcx", "mov     r8, rcx", "cmovnb  r8, _n_1", "cmp     _incr_2, rdx", "jnb     loc_137DC"], ["cmp~_n_1,rcx", "mov~r8,rcx", "cmovnb~r8,_n_1", "cmp~_incr_2,rdx", "jnb~FOO"]], [1, 0, 365, 0, 0, 6, 1, 1, 17, 15, 0.06630974824240997, ["test    r11d, r11d", "mov     ecx, 0", "mov     r12, rbx", "cmovns  ecx, r11d", "movsxd  rcx, ecx", "jmp     loc_142D2"], ["test~r11d,r11d", "mov~ecx,0", "mov~r12,rbx", "cmovns~ecx,r11d", "movsxd~rcx,ecx", "jmp~FOO"]], [2, 0, 365, 4, 0, 9, 0, 1, 19, 15, 0.02892291151172381, ["mov     r9, [rsp+4F8h+colons]", "add     i, _incr", "mov     rdx, maxsize", "sub     rdx, i", "mov     _incr, rbx", "mov     dword ptr [rsp+4F8h+pad], 2Dh ; '-'", "add     r9, 17h", "sub     r9, r14", "jmp     loc_142D2"], ["mov~r9,[rsp+0]", "add~i,_incr", "mov~rdx,maxsize", "sub~rdx,i", "mov~_incr,rbx", "mov~[word ptr [rsp+0],0", "add~r9,0", "sub~r9,r14", "jmp~FOO"]], [1, 0, 365, 0, 0, 3, 0, 1, 22, 15, 0.03264919877459645, ["mov     r12, rbx", "mov     dword ptr [rsp+4F8h+pad], 5Fh ; '_'", "jmp     loc_142D2"], ["mov~r12,rbx", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 365, 2, 0, 5, 0, 1, 20, 15, 0.02731751502297632, ["add     i, _incr", "mov     rdx, maxsize", "mov     _incr, rbx", "sub     rdx, i", "jmp     loc_142D2"], ["add~i,_incr", "mov~rdx,maxsize", "mov~_incr,rbx", "sub~rdx,i", "jmp~FOO"]], [0, 0, 365, 0, 0, 2, 1, 1, 19, 13, 0.20532137386591257, ["test    r13, r13", "jz      loc_1438D"], ["test~r13,r13", "jz~FOO"]], [1, 0, 365, 0, 0, 5, 2, 1, 16, 22, 0.005309591139389654, ["mov     ecx, dword ptr [rsp+4F8h+colons]", "xor     eax, eax", "mov     r9d, 0FFFFF894h", "xor     r10d, r10d", "jmp     loc_147AE"], ["mov~ecx,[word ptr [rsp+0]", "xor~eax,eax", "mov~r9d,0", "xor~r10d,r10d", "jmp~FOO"]], [4, 0, 365, 7, 0, 18, 1, 1, 15, 23, 0.013270295746435725, ["sub     r9d, eax", "mov     edx, 92492493h", "mov     ecx, r9d", "sub     ecx, r12d", "add     ecx, 17Eh", "mov     eax, ecx", "sub     r9d, ecx", "imul    edx", "lea     eax, [rdx+rcx]", "mov     edx, ecx", "sar     edx, 1Fh", "sar     eax, 2", "sub     eax, edx", "lea     edx, ds:0[rax*8]", "sub     edx, eax", "lea     ecx, [r9+rdx+3]", "test    ecx, ecx", "js      loc_152F6"], ["sub~r9d,eax", "mov~edx,0", "mov~ecx,r9d", "sub~ecx,r12d", "add~ecx,0", "mov~eax,ecx", "sub~r9d,ecx", "imul~,edx", "lea~eax,<TAG>", "mov~edx,ecx", "sar~edx,0", "sar~eax,0", "sub~eax,edx", "lea~edx,<TAG>", "sub~edx,eax", "lea~ecx,[r9+0]", "test~ecx,ecx", "js~FOO"]], [1, 0, 365, 0, 0, 12, 3, 1, 13, 13, 0.03717302933898903, ["movzx   eax, byte ptr [rsp+4F8h+to_uppcase_0]", "test    r9b, r9b", "lea     rdx, [rsp+4F8h+ufmt]", "mov     r12, rbx", "cmovnz  eax, r9d", "xor     r9d, r9d", "xor     r14d, r14d", "mov     byte ptr [rsp+4F8h+to_uppcase_0], al", "mov     eax, 2520h", "mov     word ptr [rsp+4F8h+ufmt], ax", "lea     rax, [rdx+2]", "jmp     loc_13AD2"], ["movzx~eax,[yte ptr [rsp+0]", "test~r9b,r9b", "lea~rdx,[rsp+0]", "mov~r12,rbx", "cmovnz~eax,r9d", "xor~r9d,r9d", "xor~r14d,r14d", "mov~[yte ptr [rsp+0],al", "mov~eax,0", "mov~[ord ptr [rsp+0],ax", "lea~rax,[rdx+0]", "jmp~FOO"]], [1, 0, 365, 1, 0, 8, 0, 1, 22, 17, 0.00796070460704607, ["mov     eax, dword ptr [rsp+4F8h+pad]", "movsxd  rdx, r11d", "mov     [rsp+4F8h+colons], _n_1", "sub     rdx, _n_1; n", "mov     [rsp+4F8h+pad], _incr_2", "lea     rbx, [r13+_delta+0]", "cmp     eax, 30h ; '0'", "jz      loc_14DDA"], ["mov~eax,[word ptr [rsp+0]", "movsxd~rdx,r11d", "mov~[rsp+0],_n_1", "sub~rdx,_n_1", "mov~[rsp+0],_incr_2", "lea~rbx,[r13+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 23, 17, 0.002658477671733239, ["cmp     eax, 2Bh ; '+'", "jz      loc_14DDA"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 365, 0, 0, 3, 0, 0, 13, 21, 0.07646621303169553, ["mov     rdi, 6666666666666667h", "mov     esi, 30h ; '0'", "xchg    ax, ax"], ["mov~rdi,0", "mov~esi,0", "xchg~ax,ax"]], [0, 0, 365, 0, 1, 20, 1, 2, 12, 20, 0.12173029338989041, ["mov     rax, [rsp+4F8h+tp]; jumptable 0000000000013923 case 115", "mov     rdi, [rsp+4F8h+var_4E0]; tz", "lea     rsi, [rsp+4F8h+ltm]; tm", "mov     dword ptr [rsp+4F8h+colons], r11d", "lea     modifier, [rsp+4F8h+ubuf+17h]", "movdqu  xmm0, xmmword ptr [rax]", "movaps  xmmword ptr [rsp+4F8h+ltm.tm_sec], xmm0", "movdqu  xmm0, xmmword ptr [rax+10h]", "movaps  xmmword ptr [rsp+4F8h+ltm.tm_mon], xmm0", "movdqu  xmm0, xmmword ptr [rax+20h]", "mov     rax, [rax+30h]", "movaps  xmmword ptr [rsp+4F8h+ltm.tm_isdst], xmm0", "mov     [rsp+4F8h+ltm.tm_zone], rax", "call    mktime_z", "mov     rcx, rax", "lea     t, [rsp+4F8h+ubuf]", "mov     r11d, dword ptr [rsp+4F8h+colons]", "test    t, t", "mov     [rsp+4F8h+colons], rax", "js      loc_14B0F"], ["mov~rax,[rsp+0]", "mov~rdi,[rsp+0]", "lea~rsi,[rsp+0]", "mov~[word ptr [rsp+0],r11d", "lea~modifier,[rsp+0]", "movdqu~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "movdqu~xmm0,[mmword ptr [rax+0]", "movaps~[mmword ptr [rsp+0],xmm0", "movdqu~xmm0,[mmword ptr [rax+0]", "mov~rax,[rax+0]", "movaps~[mmword ptr [rsp+0],xmm0", "mov~[rsp+0],rax", "call~FOO", "mov~rcx,rax", "lea~t,[rsp+0]", "mov~r11d,[word ptr [rsp+0]", "test~t,t", "mov~[rsp+0],rax", "js~FOO"]], [1, 0, 365, 1, 0, 12, 1, 0, 15, 14, 0.05123644986449864, ["movsxd  r11, dword ptr [rsp+4F8h+hour_diff]", "lea     rcx, [len-1]", "mov     eax, 0", "mov     rdx, maxsize", "test    r11d, r11d", "cmovns  rax, r11", "cmp     _n_0, _w", "mov     r10, _w", "cmovnb  r10, _n_0", "sub     rdx, i", "cmp     rdx, _incr_1", "jbe     loc_137DC"], ["movsxd~r11,[word ptr [rsp+0]", "lea~rcx,[len-1]+0]", "mov~eax,0", "mov~rdx,maxsize", "test~r11d,r11d", "cmovns~rax,r11", "cmp~_n_0,_w", "mov~r10,_w", "cmovnb~r10,_n_0", "sub~rdx,i", "cmp~rdx,_incr_1", "jbe~FOO"]], [0, 1, 365, 0, 1, 6, 0, 1, 24, 16, 0.0013329209379050314, ["mov     rdi, r13; s", "mov     esi, 20h ; ' '; c", "mov     r13, rbx", "call    _memset", "mov     r9, [rsp+4F8h+colons]", "mov     r8, [rsp+4F8h+pad]"], ["mov~rdi,r13", "mov~esi,<STR>", "mov~r13,rbx", "call~FOO", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]"]], [0, 0, 365, 0, 0, 2, 1, 1, 16, 13, 0.04941380935548486, ["test    r13, r13", "jz      loc_13C05"], ["test~r13,r13", "jz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 21, 15, 0.02895605043006952, ["cmp     byte ptr [rsp+4F8h+to_uppcase_0], 0", "jz      loc_14D00"], ["cmp~[yte ptr [rsp+0],0", "jz~FOO"]], [1, 0, 365, 0, 1, 7, 0, 2, 23, 16, 0.003991398609638271, ["mov     rdi, r13; s", "mov     esi, 30h ; '0'; c", "mov     r13, rbx", "call    _memset", "mov     r8, [rsp+4F8h+pad]", "mov     r9, [rsp+4F8h+colons]", "jmp     loc_1433D"], ["mov~rdi,r13", "mov~esi,0", "mov~r13,rbx", "call~FOO", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]", "jmp~FOO"]], [0, 0, 365, 0, 0, 3, 1, 1, 17, 16, 0.04182867915635678, ["test    r14d, r14d", "movzx   r9d, byte ptr [rsp+4F8h+padding]", "jnz     short loc_13BA5"], ["test~r14d,r14d", "movzx~r9d,[yte ptr [rsp+0]", "jnz~FOO"]], [0, 0, 365, 0, 0, 3, 1, 1, 22, 14, 0.01580726405090138, ["test    r9, r9", "lea     rbx, [r9-1]", "jz      short loc_1438A"], ["test~r9,r9", "lea~rbx,[r9-1]+0]", "jz~FOO"]], [0, 0, 365, 0, 0, 2, 0, 0, 18, 16, 0.01059708966654884, ["cmp     _n_0, _w", "jnb     short loc_13BA5"], ["cmp~_n_0,_w", "jnb~FOO"]], [3, 0, 365, 6, 0, 18, 1, 1, 14, 20, 0.07648094143984918, ["mov     rax, t", "sub     bufp, 1", "imul    rdi", "mov     rax, t", "sar     rax, 3Fh", "sar     rdx, 2", "sub     rdx, rax", "mov     rax, rdx", "lea     rdx, [rdx+rdx*4]", "add     rdx, rdx", "sub     t, rdx", "mov     rdx, rcx", "mov     rcx, rax", "mov     eax, esi", "sub     eax, edx", "test    t, t", "mov     [bufp], al", "jnz     short loc_14B20"], ["mov~rax,t", "sub~bufp,0", "imul~,rdi", "mov~rax,t", "sar~rax,0", "sar~rdx,0", "sub~rdx,rax", "mov~rax,rdx", "lea~rdx,<TAG>", "add~rdx,rdx", "sub~t,rdx", "mov~rdx,rcx", "mov~rcx,rax", "mov~eax,esi", "sub~eax,edx", "test~t,t", "mov~<TAG>,al", "jnz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 17, 15, 0.0026547955696948275, ["mov     esi, 30h ; '0'", "jmp     loc_13FD2"], ["mov~esi,0", "jmp~FOO"]], [2, 0, 365, 1, 0, 7, 0, 1, 16, 16, 0.007953340402969246, ["mov     eax, dword ptr [rsp+4F8h+pad]", "movsxd  rdx, r11d", "mov     [rsp+4F8h+pad], rcx", "sub     rdx, 1; n", "lea     r12, [r13+_delta+0]", "cmp     eax, 30h ; '0'", "jz      loc_15351"], ["mov~eax,[word ptr [rsp+0]", "movsxd~rdx,r11d", "mov~[rsp+0],rcx", "sub~rdx,0", "lea~r12,[r13+0]", "cmp~eax,0", "jz~FOO"]], [1, 1, 365, 0, 0, 3, 0, 1, 17, 15, 0.0026547955696948275, ["cmp     eax, 2Bh ; '+'", "mov     esi, 20h ; ' '; c", "jz      loc_15351"], ["cmp~eax,0", "mov~esi,<STR>", "jz~FOO"]], [1, 0, 365, 0, 0, 4, 1, 0, 15, 19, 0.07649566984800282, ["test    r11d, r11d", "mov     r10d, 1", "cmovg   r10d, r11d", "nop     dword ptr [rax+00h]"], ["test~r11d,r11d", "mov~r10d,0", "cmovg~r10d,r11d", "nop~[word ptr [rax+0]"]], [0, 0, 365, 0, 1, 6, 0, 1, 23, 15, 0.002658477671733239, ["mov     [rsp+4F8h+to_uppcase_0], r9", "mov     [rsp+4F8h+pad], r8", "call    ___ctype_toupper_loc", "mov     r8, [rsp+4F8h+pad]", "mov     r9, [rsp+4F8h+to_uppcase_0]", "nop     word ptr [rax+rax+00h]"], ["mov~[rsp+0],r9", "mov~[rsp+0],r8", "call~FOO", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]", "nop~[ord ptr [rax+0]"]], [1, 0, 365, 1, 0, 9, 0, 1, 19, 17, 0.00796070460704607, ["mov     eax, dword ptr [rsp+4F8h+pad]", "movsxd  rdx, r11d", "mov     [rsp+4F8h+padding], _incr_1", "sub     rdx, _n_0; n", "mov     [rsp+4F8h+hour_diff], _n_0", "mov     byte ptr [rsp+4F8h+pad], r9b", "lea     r14, [r13+_delta+0]", "cmp     eax, 30h ; '0'", "jz      loc_14D27"], ["mov~eax,[word ptr [rsp+0]", "movsxd~rdx,r11d", "mov~[rsp+0],_incr_1", "sub~rdx,_n_0", "mov~[rsp+0],_n_0", "mov~[yte ptr [rsp+0],r9b", "lea~r14,[r13+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 20, 17, 0.002658477671733239, ["cmp     eax, 2Bh ; '+'", "jz      loc_14D27"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 365, 0, 1, 10, 0, 2, 23, 17, 0.003991398609638271, ["mov     rdi, r13; s", "mov     esi, 30h ; '0'; c", "call    _memset", "mov     r13, [rsp+4F8h+colons]", "mov     r10d, dword ptr [rsp+4F8h+hour_diff]", "movzx   r8d, byte ptr [rsp+4F8h+padding]", "mov     rcx, [rsp+4F8h+var_4A0]", "mov     r9, [rsp+4F8h+var_498]", "mov     r11d, [rsp+4F8h+var_48C]", "jmp     loc_14FCB"], ["mov~rdi,r13", "mov~esi,0", "call~FOO", "mov~r13,[rsp+0]", "mov~r10d,[word ptr [rsp+0]", "movzx~r8d,[yte ptr [rsp+0]", "mov~rcx,[rsp+0]", "mov~r9,[rsp+0]", "mov~r11d,[rsp+0]", "jmp~FOO"]], [2, 0, 365, 1, 0, 12, 0, 1, 22, 18, 0.00796070460704607, ["movsxd  rdx, r11d", "mov     [rsp+4F8h+var_48C], r11d", "mov     [rsp+4F8h+var_498], r9", "sub     rdx, 1; n", "mov     [rsp+4F8h+var_4A0], _w_2", "mov     byte ptr [rsp+4F8h+padding], r8b", "lea     rax, [r13+_delta+0]", "mov     dword ptr [rsp+4F8h+hour_diff], r10d", "mov     [rsp+4F8h+colons], rax", "mov     eax, dword ptr [rsp+4F8h+pad]", "cmp     eax, 30h ; '0'", "jz      loc_1535B"], ["movsxd~rdx,r11d", "mov~[rsp+0],r11d", "mov~[rsp+0],r9", "sub~rdx,0", "mov~[rsp+0],_w_2", "mov~[yte ptr [rsp+0],r8b", "lea~rax,[r13+0]", "mov~[word ptr [rsp+0],r10d", "mov~[rsp+0],rax", "mov~eax,[word ptr [rsp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 23, 18, 0.002658477671733239, ["cmp     eax, 2Bh ; '+'", "jz      loc_1535B"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 365, 1, 0, 7, 0, 1, 24, 14, 0.002673206079886886, ["movzx   ecx, byte ptr [r14+rbx]", "mov     rdx, [rax]", "mov     edx, [rdx+rcx*4]", "mov     [r13+rbx+0], dl", "sub     rbx, 1", "cmp     rbx, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_14370"], ["movzx~ecx,<TAG>", "mov~rdx,<TAG>", "mov~edx,<TAG>", "mov~[r13+0],dl", "sub~rbx,0", "cmp~rbx,0", "jnz~FOO"]], [0, 0, 365, 1, 0, 1, 0, 0, 23, 13, 0.029029692470837754, ["add     r13, r9"], ["add~r13,r9"]], [0, 0, 365, 0, 1, 9, 0, 2, 22, 14, 0.010497672911511723, ["mov     rdx, r9; n", "mov     rsi, r14; src", "mov     rdi, r13; dest", "mov     [rsp+4F8h+to_uppcase_0], r8", "mov     [rsp+4F8h+pad], r9", "call    _memcpy", "mov     r8, [rsp+4F8h+to_uppcase_0]", "mov     r9, [rsp+4F8h+pad]", "jmp     loc_1438A"], ["mov~rdx,r9", "mov~rsi,r14", "mov~rdi,r13", "mov~[rsp+0],r8", "mov~[rsp+0],r9", "call~FOO", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]", "jmp~FOO"]], [0, 1, 365, 0, 1, 7, 0, 1, 21, 16, 0.0013329209379050314, ["mov     rdi, r13; s", "mov     esi, 20h ; ' '; c", "mov     r13, r14", "call    _memset", "movzx   r9d, byte ptr [rsp+4F8h+pad]", "mov     r10, [rsp+4F8h+padding]", "mov     rcx, [rsp+4F8h+hour_diff]"], ["mov~rdi,r13", "mov~esi,<STR>", "mov~r13,r14", "call~FOO", "movzx~r9d,[yte ptr [rsp+0]", "mov~r10,[rsp+0]", "mov~rcx,[rsp+0]"]], [2, 0, 365, 1, 0, 11, 2, 0, 17, 17, 0.02930094065433408, ["test    r11d, r11d", "mov     ecx, 0", "mov     r12d, 1", "cmovns  ecx, r11d", "mov     rax, maxsize", "movsxd  rcx, ecx", "test    _w_0, _w_0", "cmovnz  r12, _w_0", "sub     rax, i", "cmp     rax, _incr", "jbe     loc_137DC"], ["test~r11d,r11d", "mov~ecx,0", "mov~r12d,0", "cmovns~ecx,r11d", "mov~rax,maxsize", "movsxd~rcx,ecx", "test~_w_0,_w_0", "cmovnz~r12,_w_0", "sub~rax,i", "cmp~rax,_incr", "jbe~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 20, 18, 0.0012875083460979538, ["mov     r9d, 2Bh ; '+'", "jmp     loc_14B7F"], ["mov~r9d,0", "jmp~FOO"]], [0, 0, 365, 0, 0, 2, 1, 1, 18, 15, 0.04191704960527866, ["test    r9b, r9b", "jnz     loc_14CB0"], ["test~r9b,r9b", "jnz~FOO"]], [1, 0, 365, 0, 1, 8, 0, 2, 20, 16, 0.003991398609638271, ["mov     rdi, r13; s", "mov     esi, 30h ; '0'; c", "mov     r13, r14", "call    _memset", "movzx   r9d, byte ptr [rsp+4F8h+pad]", "mov     rcx, [rsp+4F8h+hour_diff]", "mov     r10, [rsp+4F8h+padding]", "jmp     loc_13BA5"], ["mov~rdi,r13", "mov~esi,0", "mov~r13,r14", "call~FOO", "movzx~r9d,[yte ptr [rsp+0]", "mov~rcx,[rsp+0]", "mov~r10,[rsp+0]", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 365, 0, 0, 2, 1, 1, 18, 16, 0.028849269470955577, ["test    r13, r13", "jz      short loc_14C0F"], ["test~r13,r13", "jz~FOO"]], [0, 0, 365, 0, 0, 2, 1, 1, 19, 17, 0.007953340402969246, ["test    r10d, r10d", "jnz     short loc_14C07"], ["test~r10d,r10d", "jnz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 19, 15, 0.010611818074702486, ["cmp     byte ptr [rsp+4F8h+to_uppcase_0], 0", "jz      loc_14C80"], ["cmp~[yte ptr [rsp+0],0", "jz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 0, 20, 17, 0.002658477671733239, ["cmp     _w_0, 1", "jbe     short loc_14C07"], ["cmp~_w_0,0", "jbe~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 14, 14, 0.013226110521974784, ["cmp     r11d, 1", "jle     short loc_145EB"], ["cmp~r11d,0", "jle~FOO"]], [0, 1, 365, 0, 1, 4, 0, 1, 17, 14, 0.0013329209379050314, ["mov     rdi, r13; s", "mov     esi, 20h ; ' '; c", "mov     r13, r12", "call    _memset"], ["mov~rdi,r13", "mov~esi,<STR>", "mov~r13,r12", "call~FOO"]], [1, 0, 365, 1, 0, 3, 1, 1, 20, 14, 0.006635147873217863, ["sub     len, 2", "test    rcx, rcx", "jz      short loc_13C02"], ["sub~len,0", "test~rcx,rcx", "jz~FOO"]], [1, 0, 365, 1, 1, 8, 0, 1, 21, 15, 0.002658477671733239, ["mov     [rsp+4F8h+to_uppcase_0], r10", "mov     [rsp+4F8h+pad], rcx", "call    ___ctype_toupper_loc", "mov     r8, [rsp+4F8h+colons]", "mov     rcx, [rsp+4F8h+pad]", "mov     r10, [rsp+4F8h+to_uppcase_0]", "add     r8, 1", "nop     dword ptr [rax+00h]"], ["mov~[rsp+0],r10", "mov~[rsp+0],rcx", "call~FOO", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "mov~r10,[rsp+0]", "add~r8,0", "nop~[word ptr [rax+0]"]], [1, 0, 365, 0, 0, 2, 0, 1, 12, 16, 0.022586013903617298, ["cmp     r14d, 45h ; 'E'; jumptable 0000000000013923 case 67", "jz      loc_14E08"], ["cmp~r14d,0", "jz~FOO"]], [2, 0, 365, 1, 0, 7, 0, 1, 22, 14, 0.002673206079886886, ["movzx   esi, byte ptr [r8+rbx]", "mov     rdx, [rax]", "mov     edx, [rdx+rsi*4]", "mov     [r13+rbx+0], dl", "sub     rbx, 1", "cmp     rbx, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_13BE8"], ["movzx~esi,<TAG>", "mov~rdx,<TAG>", "mov~edx,<TAG>", "mov~[r13+0],dl", "sub~rbx,0", "cmp~rbx,0", "jnz~FOO"]], [0, 0, 365, 1, 0, 1, 0, 0, 20, 13, 0.042064333686815135, ["add     r13, rcx"], ["add~r13,rcx"]], [1, 0, 365, 1, 1, 10, 0, 2, 20, 14, 0.001325556733828208, ["mov     rsi, [rsp+4F8h+colons]", "mov     rdx, rcx; n", "mov     rdi, r13; dest", "mov     [rsp+4F8h+to_uppcase_0], r10", "mov     [rsp+4F8h+pad], rcx", "add     rsi, 1; src", "call    _memcpy", "mov     r10, [rsp+4F8h+to_uppcase_0]", "mov     rcx, [rsp+4F8h+pad]", "jmp     loc_13C02"], ["mov~rsi,[rsp+0]", "mov~rdx,rcx", "mov~rdi,r13", "mov~[rsp+0],r10", "mov~[rsp+0],rcx", "add~rsi,0", "call~FOO", "mov~r10,[rsp+0]", "mov~rcx,[rsp+0]", "jmp~FOO"]], [1, 0, 365, 1, 0, 3, 1, 1, 19, 14, 0.02865411806291976, ["sub     len, 2", "test    rcx, rcx", "jz      loc_13C02"], ["sub~len,0", "test~rcx,rcx", "jz~FOO"]], [0, 0, 365, 0, 0, 1, 0, 1, 22, 14, 0.005339047955696949, ["jmp     loc_13C02"], ["jmp~FOO"]], [0, 1, 365, 1, 1, 17, 0, 1, 21, 17, 0.0, ["movsxd  rax, r11d", "mov     rdi, r13; s", "mov     esi, 20h ; ' '; c", "lea     r8, [rax-1]", "mov     byte ptr [rsp+4F8h+var_498], r9b", "mov     [rsp+4F8h+var_4A0], _w_0", "mov     dword ptr [rsp+4F8h+padding], r10d", "mov     dword ptr [rsp+4F8h+hour_diff], r11d", "mov     rdx, _delta_0; n", "mov     [rsp+4F8h+pad], _delta_0", "call    _memset", "mov     r8, [rsp+4F8h+pad]", "movzx   r9d, byte ptr [rsp+4F8h+var_498]", "mov     rcx, [rsp+4F8h+var_4A0]", "mov     r10d, dword ptr [rsp+4F8h+padding]", "mov     r11d, dword ptr [rsp+4F8h+hour_diff]", "add     r13, r8"], ["movsxd~rax,r11d", "mov~rdi,r13", "mov~esi,<STR>", "lea~r8,[rax-1]+0]", "mov~[yte ptr [rsp+0],r9b", "mov~[rsp+0],_w_0", "mov~[word ptr [rsp+0],r10d", "mov~[word ptr [rsp+0],r11d", "mov~rdx,_delta_0", "mov~[rsp+0],_delta_0", "call~FOO", "mov~r8,[rsp+0]", "movzx~r9d,[yte ptr [rsp+0]", "mov~rcx,[rsp+0]", "mov~r10d,[word ptr [rsp+0]", "mov~r11d,[word ptr [rsp+0]", "add~r13,r8"]], [1, 0, 365, 1, 0, 2, 0, 0, 20, 16, 0.00799752562743019, ["mov     [r13+0], r9b", "add     r13, 1"], ["mov~[r13+0],r9b", "add~r13,0"]], [1, 0, 365, 0, 0, 2, 0, 0, 13, 19, 0.04261296689053847, ["mov     rsi, 0CCCCCCCCCCCCCCCDh", "nop     dword ptr [rax]"], ["mov~rsi,0", "nop~<TAG>"]], [3, 0, 365, 5, 0, 14, 1, 1, 14, 18, 0.04262769529869211, ["mov     rax, t", "sub     bufp, 1", "mul     rsi", "shr     rdx, 3", "mov     rax, rdx", "lea     rdx, [rdx+rdx*4]", "add     rdx, rdx", "sub     t, rdx", "mov     rdx, rcx", "mov     rcx, rax", "add     edx, 30h ; '0'", "test    t, t", "mov     [bufp], dl", "jnz     short loc_14410"], ["mov~rax,t", "sub~bufp,0", "mul~,rsi", "shr~rdx,0", "mov~rax,rdx", "lea~rdx,<TAG>", "add~rdx,rdx", "sub~t,rdx", "mov~rdx,rcx", "mov~rcx,rax", "add~edx,0", "test~t,t", "mov~<TAG>,dl", "jnz~FOO"]], [1, 0, 365, 0, 0, 3, 1, 0, 15, 17, 0.04264242370684576, ["test    r11d, r11d", "mov     r10d, 1", "cmovg   r10d, r11d"], ["test~r11d,r11d", "mov~r10d,0", "cmovg~r10d,r11d"]], [0, 0, 365, 0, 1, 7, 0, 1, 18, 16, 0.005309591139389655, ["mov     [rsp+4F8h+to_uppcase_0], rcx", "mov     [rsp+4F8h+pad], r8", "lea     rbx, [r14-1]", "call    ___ctype_toupper_loc", "mov     r8, [rsp+4F8h+pad]", "mov     rcx, [rsp+4F8h+to_uppcase_0]", "nop     dword ptr [rax]"], ["mov~[rsp+0],rcx", "mov~[rsp+0],r8", "lea~rbx,[r14-1]+0]", "call~FOO", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "nop~<TAG>"]], [2, 0, 365, 3, 0, 7, 0, 1, 16, 16, 0.08322532500687324, ["mov     r9, [rsp+4F8h+colons]", "mov     rdx, maxsize", "sub     rdx, i", "add     r9, 17h", "sub     r9, r14", "cmp     dword ptr [rsp+4F8h+pad], 2Dh ; '-'", "jz      short loc_14471"], ["mov~r9,[rsp+0]", "mov~rdx,maxsize", "sub~rdx,i", "add~r9,0", "sub~r9,r14", "cmp~[word ptr [rsp+0],0", "jz~FOO"]], [2, 0, 365, 1, 0, 7, 0, 1, 19, 15, 0.005324319547543302, ["movzx   esi, byte ptr [r8+rbx]", "mov     rdx, [rax]", "mov     edx, [rdx+rsi*4]", "mov     [r13+rbx+0], dl", "sub     rbx, 1", "cmp     rbx, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_14C58"], ["movzx~esi,<TAG>", "mov~rdx,<TAG>", "mov~edx,<TAG>", "mov~[r13+0],dl", "sub~rbx,0", "cmp~rbx,0", "jnz~FOO"]], [1, 0, 365, 0, 0, 1, 0, 0, 12, 4, 0.0039693059974078, ["mov     eax, 1; jumptable 0000000000013923 case 80"], ["mov~eax,0"]], [2, 0, 365, 1, 0, 11, 3, 1, 12, 15, 0.03684311299634737, ["mov     rdx, maxsize; jumptable 0000000000013923 case 37", "mov     eax, 0", "mov     ecx, 1", "sub     rdx, i", "test    r11d, r11d", "cmovns  eax, r11d", "cdqe", "test    rax, rax", "cmovnz  rcx, rax", "test    r14d, r14d", "jnz     loc_150B6"], ["mov~rdx,maxsize", "mov~eax,0", "mov~ecx,0", "sub~rdx,i", "test~r11d,r11d", "cmovns~eax,r11d", "cdqe~", "test~rax,rax", "cmovnz~rcx,rax", "test~r14d,r14d", "jnz~FOO"]], [0, 0, 365, 0, 0, 2, 1, 1, 13, 3, 0.010633910686932957, ["test    r9b, r9b", "jnz     loc_14DF9"], ["test~r9b,r9b", "jnz~FOO"]], [0, 0, 365, 0, 0, 2, 1, 1, 12, 4, 0.0039693059974078, ["xor     eax, eax; jumptable 0000000000013923 case 112", "jmp     loc_13C8E"], ["xor~eax,eax", "jmp~FOO"]], [1, 0, 365, 0, 0, 1, 0, 0, 13, 16, 0.007901790974431484, ["mov     [rsp+4F8h+colons], 1"], ["mov~[rsp+0],0"]], [0, 0, 365, 0, 0, 1, 0, 0, 15, 14, 0.015081889949334275, ["mov     rbx, f"], ["mov~rbx,f"]], [0, 0, 365, 0, 0, 1, 0, 1, 15, 21, 0.005316955343466478, ["jnz     loc_150C7"], ["jnz~FOO"]], [1, 0, 365, 0, 0, 4, 0, 0, 16, 20, 0.0013329209379050312, ["mov     rax, [rsp+4F8h+zone]", "cmp     byte ptr [rax], 2Dh ; '-'", "setnz   r8b", "setz    r12b"], ["mov~rax,[rsp+0]", "cmp~<TAG>,0", "setnz~r8b", "setz~r12b"]], [1, 0, 365, 1, 1, 8, 0, 1, 20, 16, 0.005309591139389655, ["mov     [rsp+4F8h+to_uppcase_0], r10", "mov     [rsp+4F8h+pad], rcx", "call    ___ctype_tolower_loc", "mov     r8, [rsp+4F8h+colons]", "mov     rcx, [rsp+4F8h+pad]", "mov     r10, [rsp+4F8h+to_uppcase_0]", "add     r8, 1", "nop"], ["mov~[rsp+0],r10", "mov~[rsp+0],rcx", "call~FOO", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "mov~r10,[rsp+0]", "add~r8,0", "nop"]], [1, 0, 365, 0, 0, 3, 1, 1, 16, 20, 0.0013329209379050312, ["mov     r8d, 1", "xor     r12d, r12d", "jmp     loc_144DF"], ["mov~r8d,0", "xor~r12d,r12d", "jmp~FOO"]], [2, 0, 365, 1, 0, 7, 0, 1, 21, 15, 0.005324319547543302, ["movzx   esi, byte ptr [r8+rbx]", "mov     rdx, [rax]", "mov     edx, [rdx+rsi*4]", "mov     [r13+rbx+0], dl", "sub     rbx, 1", "cmp     rbx, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_14CE0"], ["movzx~esi,<TAG>", "mov~rdx,<TAG>", "mov~edx,<TAG>", "mov~[r13+0],dl", "sub~rbx,0", "cmp~rbx,0", "jnz~FOO"]], [0, 0, 365, 0, 0, 2, 0, 0, 15, 20, 0.0008898413259494912, ["mov     eax, [rsp+4F8h+pad_0]", "mov     dword ptr [rsp+4F8h+pad], eax"], ["mov~eax,[rsp+0]", "mov~[word ptr [rsp+0],eax"]], [2, 0, 365, 0, 0, 2, 0, 0, 15, 19, 0.017157368131652327, ["mov     byte ptr [rsp+4F8h+hour_diff], 0", "mov     r10d, 2"], ["mov~[yte ptr [rsp+0],0", "mov~r10d,0"]], [0, 0, 365, 0, 0, 2, 1, 1, 16, 18, 0.02220798476100703, ["xor     esi, esi", "jmp     short do_number_body"], ["xor~esi,esi", "jmp~FOO"]], [1, 0, 365, 0, 0, 4, 0, 0, 13, 19, 0.0007658772239896312, ["mov     rax, [rsp+4F8h+tp]", "mov     r10d, 2", "mov     ecx, [rax]", "nop     dword ptr [rax+00h]"], ["mov~rax,[rsp+0]", "mov~r10d,0", "mov~ecx,<TAG>", "nop~[word ptr [rax+0]"]], [0, 0, 365, 0, 0, 2, 0, 0, 15, 14, 0.013226110521974784, ["cmp     _n, _w", "jnb     short loc_14D9D"], ["cmp~_n,_w", "jnb~FOO"]], [0, 0, 365, 0, 0, 2, 1, 1, 14, 13, 0.04399375515494285, ["test    r13, r13", "jnz     loc_14D56"], ["test~r13,r13", "jnz~FOO"]], [2, 0, 365, 0, 0, 5, 1, 1, 16, 18, 0.016077284867051567, ["mov     dword ptr [rsp+4F8h+pad], eax", "mov     byte ptr [rsp+4F8h+hour_diff], 0", "mov     r10d, 4", "xor     esi, esi", "jmp     do_number_body"], ["mov~[word ptr [rsp+0],eax", "mov~[yte ptr [rsp+0],0", "mov~r10d,0", "xor~esi,esi", "jmp~FOO"]], [2, 0, 365, 0, 0, 4, 0, 1, 22, 18, 0.001332920937905031, ["mov     ecx, dword ptr [rsp+4F8h+hour_diff]", "mov     r10d, 3", "mov     byte ptr [rsp+4F8h+hour_diff], 1", "jmp     do_number_body"], ["mov~ecx,[word ptr [rsp+0]", "mov~r10d,0", "mov~[yte ptr [rsp+0],0", "jmp~FOO"]], [3, 0, 365, 0, 0, 8, 1, 0, 13, 18, 0.08556468716861111, ["mov     eax, ecx", "mov     r8d, ecx", "xor     esi, esi", "shr     eax, 1Fh", "not     r8d", "mov     byte ptr [rsp+4F8h+hour_diff], 0", "mov     r12d, eax", "shr     r8d, 1Fh"], ["mov~eax,ecx", "mov~r8d,ecx", "xor~esi,esi", "shr~eax,0", "not~r8d", "mov~[yte ptr [rsp+0],0", "mov~r12d,eax", "shr~r8d,0"]], [0, 0, 365, 0, 0, 1, 0, 0, 16, 15, 0.17116619535760574, ["mov     esi, edi"], ["mov~esi,edi"]], [0, 0, 365, 0, 0, 2, 1, 1, 13, 15, 0.005880316955343466, ["xor     r10d, r10d", "jmp     loc_13D6E"], ["xor~r10d,r10d", "jmp~FOO"]], [0, 1, 365, 0, 1, 5, 0, 1, 18, 14, 0.0013329209379050314, ["mov     rdi, r13; s", "mov     esi, 20h ; ' '; c", "call    _memset", "mov     r13, [rsp+4F8h+hour_diff]", "mov     r10, [rsp+4F8h+var_4A0]"], ["mov~rdi,r13", "mov~esi,<STR>", "call~FOO", "mov~r13,[rsp+0]", "mov~r10,[rsp+0]"]], [2, 0, 365, 1, 0, 11, 2, 0, 12, 14, 0.0202378146969876, ["test    r11d, r11d; jumptable 0000000000013923 case 116", "mov     eax, 0", "cmovns  eax, r11d", "movsxd  modifier, eax", "mov     eax, 1", "test    r14, r14", "cmovz   r14, rax", "mov     rax, maxsize", "sub     rax, i", "cmp     rax, _incr", "jbe     loc_137DC"], ["test~r11d,r11d", "mov~eax,0", "cmovns~eax,r11d", "movsxd~modifier,eax", "mov~eax,0", "test~r14,r14", "cmovz~r14,rax", "mov~rax,maxsize", "sub~rax,i", "cmp~rax,_incr", "jbe~FOO"]], [0, 0, 365, 0, 0, 2, 0, 1, 14, 3, 1.4728408153646753e-05, ["mov     byte ptr [rsp+4F8h+to_uppcase_0], r9b", "jmp     loc_13AAA; jumptable 0000000000013923 case 114"], ["mov~[yte ptr [rsp+0],r9b", "jmp~FOO"]], [1, 0, 365, 0, 0, 3, 0, 0, 12, 15, 0.011569164604689524, ["lea     rax, aMDHM+6; jumptable 0000000000013923 case 82", "mov     r14d, 0FFFFFFFFh", "mov     [rsp+4F8h+colons], rax"], ["lea~rax,<TAG>", "mov~r14d,0", "mov~[rsp+0],rax"]], [0, 1, 365, 2, 1, 15, 0, 2, 16, 13, 0.01329975256274302, ["mov     eax, [rsp+4F8h+number_value]", "mov     rdi, r13; s", "mov     rsi, r10; maxsize", "add     r13, _n", "push    rax; ns", "push    [rsp+500h+var_4E0]; tz", "push    [rsp+508h+var_4D8]; tzset_called", "push    subwidth; width", "mov     r9d, dword ptr [rsp+518h+pad]; yr_spec", "mov     r8d, dword ptr [rsp+518h+padding]; upcase", "mov     rcx, [rsp+518h+tp]; tp", "mov     rdx, [rsp+518h+colons]; format", "call    __strftime_internal", "add     rsp, 20h", "jmp     loc_13E4A"], ["mov~eax,[rsp+0]", "mov~rdi,r13", "mov~rsi,r10", "add~r13,_n", "push~rax", "push~[rsp+0]", "push~[rsp+0]", "push~subwidth", "mov~r9d,[word ptr [rsp+0]", "mov~r8d,[word ptr [rsp+0]", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 12, 16, 0.018864636110129236, ["cmp     r14d, 45h ; 'E'; jumptable 0000000000013923 case 89", "jz      loc_14E08"], ["cmp~r14d,0", "jz~FOO"]], [0, 0, 365, 0, 0, 1, 1, 0, 19, 19, 0.0005302226935312831, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [0, 0, 365, 0, 0, 3, 0, 0, 19, 18, 0.03267865559090374, ["movsxd  rcx, r12d", "cmp     rcx, rdx", "jnb     loc_137DC"], ["movsxd~rcx,r12d", "cmp~rcx,rdx", "jnb~FOO"]], [0, 0, 365, 0, 0, 2, 1, 1, 20, 17, 0.03261974195828915, ["test    r13, r13", "jz      short loc_14E6A"], ["test~r13,r13", "jz~FOO"]], [0, 0, 365, 0, 0, 3, 0, 0, 3, 11, 0.01057499705431837, ["mov     [rsp+4F8h+hour12], r14d", "mov     rbx, r10", "mov     [rsp+4F8h+tp], r12"], ["mov~[rsp+0],r14d", "mov~rbx,r10", "mov~[rsp+0],r12"]], [5, 0, 365, 5, 0, 18, 0, 1, 12, 19, 0.004767094772397002, ["mov     rax, [rsp+4F8h+tp]; jumptable 0000000000013923 case 117", "mov     edx, 92492493h", "mov     r10d, 1", "mov     eax, [rax+18h]", "lea     ecx, [rax+6]", "mov     dword ptr [rsp+4F8h+colons], eax", "mov     eax, ecx", "imul    edx", "lea     eax, [rdx+rcx]", "mov     edx, ecx", "sar     edx, 1Fh", "sar     eax, 2", "sub     eax, edx", "lea     edx, ds:0[rax*8]", "sub     edx, eax", "sub     ecx, edx", "add     ecx, 1", "jmp     do_number"], ["mov~rax,[rsp+0]", "mov~edx,0", "mov~r10d,0", "mov~eax,[rax+0]", "lea~ecx,[rax+0]", "mov~[word ptr [rsp+0],eax", "mov~eax,ecx", "imul~,edx", "lea~eax,<TAG>", "mov~edx,ecx", "sar~edx,0", "sar~eax,0", "sub~eax,edx", "lea~edx,<TAG>", "sub~edx,eax", "sub~ecx,edx", "add~ecx,0", "jmp~FOO"]], [2, 1, 365, 2, 1, 28, 2, 1, 13, 14, 0.04427359490986214, ["movzx   r8d, byte ptr [rsp+4F8h+to_uppcase_0]; upcase", "mov     eax, [rsp+4F8h+number_value]", "mov     rsi, 0FFFFFFFFFFFFFFFFh; maxsize", "mov     dword ptr [rsp+4F8h+hour_diff], r11d", "xor     edi, edi; s", "mov     dword ptr [rsp+4F8h+padding], r8d", "push    rax; ns", "push    [rsp+500h+var_4E0]; tz", "push    [rsp+508h+var_4D8]; tzset_called", "push    subwidth; width", "mov     r9d, dword ptr [rsp+518h+pad]; yr_spec", "mov     rcx, [rsp+518h+tp]; tp", "mov     rdx, [rsp+518h+colons]; format", "call    __strftime_internal", "add     rsp, 20h", "movsxd  r11, dword ptr [rsp+4F8h+hour_diff]", "mov     r12, rax", "mov     eax, 0", "mov     r10, maxsize", "test    r11d, r11d", "cmovns  rax, r11", "cmp     _n, _w", "mov     rsi, _w", "cmovnb  rsi, _n", "sub     r10, i", "cmp     r10, rsi", "mov     [rsp+4F8h+to_uppcase_0], rsi", "jbe     loc_137DC"], ["movzx~r8d,[yte ptr [rsp+0]", "mov~eax,[rsp+0]", "mov~rsi,0", "mov~[word ptr [rsp+0],r11d", "xor~edi,edi", "mov~[word ptr [rsp+0],r8d", "push~rax", "push~[rsp+0]", "push~[rsp+0]", "push~subwidth", "mov~r9d,[word ptr [rsp+0]", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "call~FOO", "add~rsp,<STR>", "movsxd~r11,[word ptr [rsp+0]", "mov~r12,rax", "mov~eax,0", "mov~r10,maxsize", "test~r11d,r11d", "cmovns~rax,r11", "cmp~_n,_w", "mov~rsi,_w", "cmovnb~rsi,_n", "sub~r10,i", "cmp~r10,rsi", "mov~[rsp+0],rsi", "jbe~FOO"]], [2, 0, 365, 0, 0, 5, 0, 1, 15, 15, 0.0013329209379050314, ["lea     rax, aYMD_0; \"%Y-%m-%d\"", "mov     r14d, 4", "mov     dword ptr [rsp+4F8h+pad], 2Bh ; '+'", "mov     [rsp+4F8h+colons], rax", "jmp     subformat_width"], ["lea~rax,<TAG>", "mov~r14d,0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 365, 0, 0, 4, 0, 1, 13, 15, 0.0025480146105808883, ["lea     rax, aMDY; \"%m/%d/%y\"", "mov     r14d, 0FFFFFFFFh", "mov     [rsp+4F8h+colons], rax", "jmp     subformat_width"], ["lea~rax,<TAG>", "mov~r14d,0", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 365, 0, 0, 4, 0, 1, 12, 15, 0.011569164604689524, ["lea     rax, aHMS; jumptable 0000000000013923 case 84", "mov     r14d, 0FFFFFFFFh", "mov     [rsp+4F8h+colons], rax", "jmp     subformat_width"], ["lea~rax,<TAG>", "mov~r14d,0", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 365, 0, 0, 4, 0, 1, 13, 19, 0.0007658772239896312, ["mov     rax, [rsp+4F8h+tp]", "mov     r10d, 1", "mov     ecx, [rax+18h]", "jmp     do_number"], ["mov~rax,[rsp+0]", "mov~r10d,0", "mov~ecx,[rax+0]", "jmp~FOO"]], [0, 1, 365, 1, 1, 15, 0, 1, 21, 17, 0.0, ["mov     rdx, rcx; n", "mov     rdi, r13; s", "mov     esi, 20h ; ' '; c", "mov     dword ptr [rsp+4F8h+var_4A0], r11d", "mov     [rsp+4F8h+padding], r9", "mov     byte ptr [rsp+4F8h+hour_diff], r8b", "mov     dword ptr [rsp+4F8h+colons], r10d", "mov     [rsp+4F8h+pad], rcx", "call    _memset", "mov     rcx, [rsp+4F8h+pad]", "movzx   r8d, byte ptr [rsp+4F8h+hour_diff]", "mov     r11d, dword ptr [rsp+4F8h+var_4A0]", "mov     r9, [rsp+4F8h+padding]", "mov     r10d, dword ptr [rsp+4F8h+colons]", "add     r13, rcx"], ["mov~rdx,rcx", "mov~rdi,r13", "mov~esi,<STR>", "mov~[word ptr [rsp+0],r11d", "mov~[rsp+0],r9", "mov~[yte ptr [rsp+0],r8b", "mov~[word ptr [rsp+0],r10d", "mov~[rsp+0],rcx", "call~FOO", "mov~rcx,[rsp+0]", "movzx~r8d,[yte ptr [rsp+0]", "mov~r11d,[word ptr [rsp+0]", "mov~r9,[rsp+0]", "mov~r10d,[word ptr [rsp+0]", "add~r13,rcx"]], [1, 0, 365, 3, 0, 11, 1, 1, 21, 16, 0.03264919877459644, ["mov     eax, r11d", "add     i, rcx", "mov     rdx, maxsize", "sub     eax, r12d", "cmp     r11d, r12d", "mov     r11d, 0", "cmovg   r11d, eax", "sub     rdx, i", "test    r8b, r8b", "movsxd  rcx, r11d", "jz      loc_14F1A"], ["mov~eax,r11d", "add~i,rcx", "mov~rdx,maxsize", "sub~eax,r12d", "cmp~r11d,r12d", "mov~r11d,0", "cmovg~r11d,eax", "sub~rdx,i", "test~r8b,r8b", "movsxd~rcx,r11d", "jz~FOO"]], [3, 0, 365, 5, 0, 21, 0, 1, 13, 20, 0.002091433957817839, ["mov     r9, [rsp+4F8h+tp]", "mov     ecx, 92492493h", "mov     eax, [r9+18h]", "lea     esi, [rax+6]", "mov     dword ptr [rsp+4F8h+colons], eax", "mov     eax, esi", "imul    ecx", "lea     eax, [rdx+rsi]", "mov     edx, esi", "sar     edx, 1Fh", "sar     eax, 2", "sub     eax, edx", "lea     edx, ds:0[rax*8]", "sub     edx, eax", "mov     eax, edx", "mov     edx, [r9+1Ch]", "sub     eax, esi", "lea     esi, [rax+rdx+7]", "mov     eax, esi", "imul    ecx", "jmp     loc_13F53"], ["mov~r9,[rsp+0]", "mov~ecx,0", "mov~eax,[r9+0]", "lea~esi,[rax+0]", "mov~[word ptr [rsp+0],eax", "mov~eax,esi", "imul~,ecx", "lea~eax,<TAG>", "mov~edx,esi", "sar~edx,0", "sar~eax,0", "sub~eax,edx", "lea~edx,<TAG>", "sub~edx,eax", "mov~eax,edx", "mov~edx,[r9+0]", "sub~eax,esi", "lea~esi,[rax+0]", "mov~eax,esi", "imul~,ecx", "jmp~FOO"]], [1, 0, 365, 0, 0, 5, 1, 0, 22, 18, 0.015928773418168965, ["test    _w_1, _w_1", "mov     r12d, 1", "cmovnz  r12, _w_1", "cmp     _incr, rdx", "jnb     loc_137DC"], ["test~_w_1,_w_1", "mov~r12d,0", "cmovnz~r12,_w_1", "cmp~_incr,rdx", "jnb~FOO"]], [0, 0, 365, 0, 0, 2, 1, 1, 23, 17, 0.015825674561093437, ["test    r13, r13", "jz      short loc_14F11"], ["test~r13,r13", "jz~FOO"]], [0, 0, 365, 0, 0, 2, 1, 1, 24, 18, 0.007953340402969246, ["test    r10d, r10d", "jnz     short loc_14F09"], ["test~r10d,r10d", "jnz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 0, 25, 18, 0.002658477671733239, ["cmp     _w_1, 1", "jbe     short loc_14F09"], ["cmp~_w_1,0", "jbe~FOO"]], [0, 1, 365, 1, 1, 17, 0, 1, 26, 18, 0.0, ["lea     rax, [_w_1-1]", "mov     rdi, r13; s", "mov     esi, 20h ; ' '; c", "mov     dword ptr [rsp+4F8h+var_498], r11d", "mov     [rsp+4F8h+var_4A0], r9", "mov     rdx, _delta_1; n", "mov     byte ptr [rsp+4F8h+padding], r8b", "mov     dword ptr [rsp+4F8h+hour_diff], r10d", "mov     [rsp+4F8h+colons], _w_1", "mov     [rsp+4F8h+pad], _delta_1", "call    _memset", "add     r13, [rsp+4F8h+pad]", "movzx   r8d, byte ptr [rsp+4F8h+padding]", "mov     r11d, dword ptr [rsp+4F8h+var_498]", "mov     r9, [rsp+4F8h+var_4A0]", "mov     r10d, dword ptr [rsp+4F8h+hour_diff]", "mov     rcx, [rsp+4F8h+colons]"], ["lea~rax,[_w_1-1]+0]", "mov~rdi,r13", "mov~esi,<STR>", "mov~[word ptr [rsp+0],r11d", "mov~[rsp+0],r9", "mov~rdx,_delta_1", "mov~[yte ptr [rsp+0],r8b", "mov~[word ptr [rsp+0],r10d", "mov~[rsp+0],_w_1", "mov~[rsp+0],_delta_1", "call~FOO", "add~r13,[rsp+0]", "movzx~r8d,[yte ptr [rsp+0]", "mov~r11d,[word ptr [rsp+0]", "mov~r9,[rsp+0]", "mov~r10d,[word ptr [rsp+0]", "mov~rcx,[rsp+0]"]], [1, 0, 365, 1, 0, 2, 0, 0, 25, 17, 0.00799752562743019, ["mov     [r13+0], r8b", "add     r13, 1"], ["mov~[r13+0],r8b", "add~r13,0"]], [1, 0, 365, 0, 0, 3, 0, 1, 15, 19, 0.017605357212992414, ["mov     eax, [rsp+4F8h+pad_0]", "cmp     eax, 2Bh ; '+'", "jz      loc_14FEF"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 365, 2, 0, 3, 0, 0, 24, 16, 0.015899316601861675, ["add     i, _incr", "mov     rdx, maxsize", "sub     rdx, i"], ["add~i,_incr", "mov~rdx,maxsize", "sub~rdx,i"]], [2, 0, 365, 0, 0, 3, 1, 1, 14, 24, 0.013226110521974784, ["test    r10b, 3", "mov     eax, 16Dh", "jnz     short loc_1475F"], ["test~r10b,0", "mov~eax,0", "jnz~FOO"]], [5, 0, 365, 3, 0, 13, 0, 1, 15, 24, 0.002658477671733239, ["mov     ecx, 51EB851Fh", "mov     eax, r10d", "imul    ecx", "mov     eax, r10d", "sar     eax, 1Fh", "mov     dword ptr [rsp+4F8h+hour_diff], eax", "mov     ecx, edx", "sar     edx, 5", "sub     edx, eax", "mov     eax, 16Eh", "imul    edx, 64h", "cmp     r10d, edx", "jnz     short loc_1475F"], ["mov~ecx,0", "mov~eax,r10d", "imul~,ecx", "mov~eax,r10d", "sar~eax,0", "mov~[word ptr [rsp+0],eax", "mov~ecx,edx", "sar~edx,0", "sub~edx,eax", "mov~eax,0", "imul~edx,,0", "cmp~r10d,edx", "jnz~FOO"]], [2, 0, 365, 0, 0, 9, 2, 0, 18, 17, 0.027268420329130825, ["test    r11d, r11d", "mov     ecx, 0", "mov     r12d, 1", "cmovns  ecx, r11d", "movsxd  rcx, ecx", "test    _w_2, _w_2", "cmovnz  r12, _w_2", "cmp     _incr, rdx", "jnb     loc_137DC"], ["test~r11d,r11d", "mov~ecx,0", "mov~r12d,0", "cmovns~ecx,r11d", "movsxd~rcx,ecx", "test~_w_2,_w_2", "cmovnz~r12,_w_2", "cmp~_incr,rdx", "jnb~FOO"]], [2, 0, 365, 3, 0, 7, 0, 0, 13, 20, 0.002091433957817839, ["mov     rax, [rsp+4F8h+tp]", "mov     edx, 92492493h", "mov     esi, [rax+1Ch]", "sub     esi, [rax+18h]", "add     esi, 7", "mov     eax, esi", "imul    edx"], ["mov~rax,[rsp+0]", "mov~edx,0", "mov~esi,[rax+0]", "sub~esi,[rax+0]", "add~esi,0", "mov~eax,esi", "imul~,edx"]], [0, 0, 365, 0, 0, 2, 1, 1, 19, 16, 0.027199687757747143, ["test    r13, r13", "jz      short loc_14FD3"], ["test~r13,r13", "jz~FOO"]], [0, 0, 365, 0, 0, 2, 1, 1, 20, 17, 0.015847767173323906, ["test    r10d, r10d", "jnz     short loc_14FCB"], ["test~r10d,r10d", "jnz~FOO"]], [2, 1, 365, 3, 0, 8, 0, 0, 16, 24, 0.0, ["sar     ecx, 7", "mov     eax, ecx", "sub     eax, dword ptr [rsp+4F8h+hour_diff]", "imul    eax, 190h", "cmp     r10d, eax", "setz    al", "movzx   eax, al", "add     eax, 16Dh"], ["sar~ecx,0", "mov~eax,ecx", "sub~eax,[word ptr [rsp+0]", "imul~eax,,<STR>", "cmp~r10d,eax", "setz~al", "movzx~eax,al", "add~eax,0"]], [1, 0, 365, 0, 0, 2, 0, 0, 21, 17, 0.01059708966654884, ["cmp     _w_2, 1", "jbe     short loc_14FCB"], ["cmp~_w_2,0", "jbe~FOO"]], [3, 0, 365, 1, 0, 6, 0, 1, 14, 19, 0.0068781666077530335, ["lea     ecx, [rdx+rsi]", "sar     esi, 1Fh", "mov     r10d, 2", "sar     ecx, 2", "sub     ecx, esi", "jmp     do_number"], ["lea~ecx,<TAG>", "sar~esi,0", "mov~r10d,0", "sar~ecx,0", "sub~ecx,esi", "jmp~FOO"]], [1, 0, 367, 1, 0, 1, 0, 0, 1, 13, 0.00135133144809709, ["sub     r14d, 0Ch"], ["sub~r14d,0"]], [0, 0, 365, 0, 0, 2, 0, 0, 13, 14, 0.023565453045834805, ["cmp     rdx, rcx", "jbe     loc_137DC"], ["cmp~rdx,rcx", "jbe~FOO"]], [0, 0, 365, 0, 0, 2, 1, 1, 14, 13, 0.023521267821373867, ["test    r13, r13", "jz      short loc_13FED"], ["test~r13,r13", "jz~FOO"]], [1, 0, 365, 0, 0, 2, 0, 1, 15, 14, 0.013218746317897961, ["cmp     r11d, 1", "jle     short loc_13FE5"], ["cmp~r11d,0", "jle~FOO"]], [3, 0, 365, 0, 0, 3, 0, 0, 16, 22, 0.005309591139389654, ["mov     eax, 1", "mov     r9d, 0FFFFF893h", "mov     r10d, 1"], ["mov~eax,0", "mov~r9d,0", "mov~r10d,0"]], [0, 1, 365, 0, 1, 9, 0, 1, 24, 17, 0.0013329209379050314, ["mov     rdi, r13; s", "mov     esi, 20h ; ' '; c", "call    _memset", "movzx   r8d, byte ptr [rsp+4F8h+padding]", "mov     r13, [rsp+4F8h+colons]", "mov     r11d, [rsp+4F8h+var_48C]", "mov     r9, [rsp+4F8h+var_498]", "mov     rcx, [rsp+4F8h+var_4A0]", "mov     r10d, dword ptr [rsp+4F8h+hour_diff]"], ["mov~rdi,r13", "mov~esi,<STR>", "call~FOO", "movzx~r8d,[yte ptr [rsp+0]", "mov~r13,[rsp+0]", "mov~r11d,[rsp+0]", "mov~r9,[rsp+0]", "mov~rcx,[rsp+0]", "mov~r10d,[word ptr [rsp+0]"]], [1, 0, 365, 1, 0, 2, 0, 0, 21, 16, 0.01593613762224579, ["mov     [r13+0], r8b", "add     r13, 1"], ["mov~[r13+0],r8b", "add~r13,0"]], [0, 0, 3, 0, 0, 1, 1, 0, 6, -1, 0.004481118180747025, ["xor     ebp, ebp"], ["xor~ebp,ebp"]], [0, 0, 365, 0, 1, 5, 0, 1, 18, 14, 0.00799752562743019, ["mov     rdi, r13; s", "mov     r13, r12", "call    _memset", "movzx   esi, byte ptr [rbx]", "mov     rcx, [rsp+4F8h+pad]"], ["mov~rdi,r13", "mov~r13,r12", "call~FOO", "movzx~esi,<TAG>", "mov~rcx,[rsp+0]"]], [1, 0, 365, 1, 0, 2, 0, 0, 16, 13, 0.013292388358666196, ["mov     [r13+0], sil", "add     r13, 1"], ["mov~[r13+0],sil", "add~r13,0"]]], "func_feature": [39, 139, 304, 6, 370, 606, 3, 1790, 0.03919, 7, 204], "succs": [[11], [0, 124], [], [2, 279], [16, 23], [4, 6], [20, 22], [8, 6], [6], [35], [9, 71], [321, 21], [11], [11], [32, 17], [14, 367], [20, 22], [28, 29], [26, 314], [18, 27], [18], [321], [33, 193], [57, 22], [34, 124], [128, 129, 130, 132, 135, 136, 137, 138, 139, 140, 141, 222, 24, 288, 1, 302, 303, 305, 53, 54, 190, 325, 327, 329, 62, 334, 208, 338, 216, 93, 94, 251, 232, 114, 117, 123, 124, 125, 126, 127], [30], [313, 26], [29], [32], [192, 315], [30], [35], [48], [48], [43, 68], [35], [35, 252], [35], [35], [35], [35], [35], [49, 3], [43, 333], [50, 349], [178, 45], [322, 109], [109, 47], [3, 52], [31, 55], [50, 349], [3], [124, 61], [56, 367], [48], [41, 60], [20], [44], [360, 58], [78, 63], [321], [65, 124], [66, 79], [321], [64, 69], [72, 79], [73], [67, 15], [90, 77], [214], [308, 70], [78], [96, 84], [73], [73], [73], [88], [41], [78], [41, 284], [41], [41, 143], [41], [74, 87], [330, 91], [240, 85], [75, 92], [88, 89], [321], [89], [367, 95], [96, 76], [97, 124], [152, 102], [223], [200, 98], [321], [104, 101], [98], [98], [104, 103], [108], [25, 124], [103], [48], [105, 134], [105, 215], [119], [108], [328], [112, 110], [324, 110], [48], [113, 124], [144, 168], [115, 351], [82, 367], [120, 148], [121, 118], [119], [120, 148], [124], [122, 156], [145], [232, 124], [124, 247], [316, 124], [124, 230], [124, 237], [337, 124], [51, 124], [354, 124], [307, 124], [107, 124], [339, 124], [124, 342], [116, 124], [227, 124], [224, 124], [12, 124], [124, 13], [124], [147, 163], [168, 146], [145, 154], [168], [164, 149], [153, 170], [160, 164], [37], [150], [150], [161, 300], [155], [162, 367], [155], [155], [48], [106, 158], [163], [169, 276], [186, 36], [165, 183], [163], [171, 182], [248, 255], [166, 255], [46], [353, 172], [169, 275], [83, 173], [176, 331], [181], [179, 180], [180, 174], [367, 191], [321], [177, 5], [185], [179], [83, 181], [83], [83, 205], [83], [194, 299], [185, 175], [81], [187, 189], [187, 285], [323, 7], [195, 367], [48], [192], [196], [235, 199], [36], [196], [219, 207], [219, 198], [201], [217, 203], [201, 99], [209, 210], [184, 204], [204], [218, 220], [220, 206], [212, 142], [202], [209, 217], [202], [228], [48], [213, 159], [320, 213], [10], [211, 100], [219], [223], [219], [225], [306, 221], [233, 235], [321], [226, 133], [225], [321], [234, 151], [228], [228, 326], [228], [228], [235], [37], [239], [335], [236, 238], [336, 236], [244, 367], [239], [239], [239], [239], [42, 167], [46], [364, 245], [37], [256, 249], [256, 253], [260], [296, 250], [254, 367], [255], [257, 38], [273, 258], [255], [259, 277], [272, 265], [266, 277], [264, 260], [368], [261, 263], [368, 261], [170], [271], [267, 278], [274, 278], [366], [268, 270], [268, 365], [272, 271], [42], [272], [277], [280, 367], [275], [282, 292], [277], [], [281, 241], [283, 295], [291, 286], [294, 295], [81, 188], [81], [290, 287], [289], [323, 19], [289, 290], [38], [290], [290, 310], [290], [295], [241], [297], [297, 298], [300], [301], [240, 86], [301, 197], [304], [361, 157], [229, 231], [304], [133], [10], [309, 311], [214], [312], [214], [312, 293], [314], [315], [48], [321], [328, 111], [317, 39], [48], [48], [48], [152], [152], [328], [80, 367], [232], [335], [39], [323, 131], [331], [332, 367], [340, 341], [68], [321], [318, 367], [335], [335], [335], [321], [341], [242, 343], [359], [344, 367], [345, 350], [346, 348], [347, 348], [348], [350], [31, 319], [242], [352, 246], [357, 246], [355, 367], [359], [243, 356], [366, 358], [246], [269, 366], [321], [44], [362, 367], [40, 363], [369, 262], [46], [366], [243], [3], [369], [40]], "fname": "__strftime_internal", "n_num": 370}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 18h", "retn"], ["add~rsp,0", "retn"]], [3, 1, 2, 2, 1, 17, 4, 2, 0, 1, 0.0, ["sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+18h+var_10], rax", "xor     eax, eax", "mov     [rsp+18h+tzset_called], 0", "push    ns_0; ns", "xor     r9d, r9d; yr_spec", "push    tz_0; tz", "xor     r8d, r8d; upcase", "lea     rax, [rsp+28h+tzset_called]", "push    rax; tzset_called", "push    0FFFFFFFFFFFFFFFFh; width", "call    __strftime_internal", "add     rsp, 20h", "mov     rdx, [rsp+18h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_15419"], ["sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~[rsp+0],0", "push~ns_0", "xor~r9d,r9d", "push~tz_0", "xor~r8d,r8d", "lea~rax,[rsp+0]", "push~rax", "push~0", "call~FOO", "add~rsp,<STR>", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 4, 3, 1, 3, 2, 2, 20, 0.0, 1, 3], "succs": [[], [0, 2], []], "fname": "nstrftime", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[2, 0, 2, 0, 0, 9, 1, 1, 0, 0, 0.09523809523809523, ["lea     rdi, aLt; \"lt-\"", "mov     ecx, 3", "mov     rsi, base", "mov     rbx, base", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     short loc_1548D"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,base", "mov~rbx,base", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "test~dl,dl", "jnz~FOO"]], [2, 0, 3, 0, 0, 8, 1, 1, 3, -1, 0.14285714285714285, ["lea     rsi, [slash-6]", "lea     rdi, aLibs; \"/.libs/\"", "mov     ecx, 7", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     short loc_1548D"], ["lea~rsi,[slash-6]+0]", "lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "test~dl,dl", "jnz~FOO"]], [1, 0, 4, 1, 0, 5, 0, 1, 2, -1, 0.14285714285714285, ["lea     r8, [slash+1]", "mov     rdx, base", "sub     rdx, argv0", "cmp     rdx, 6", "jle     short loc_1548D"], ["lea~r8,[slash+0]", "mov~rdx,base", "sub~rdx,argv0", "cmp~rdx,0", "jle~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 0, 1, 0.0, ["test    argv0, argv0", "push    rbx", "jz      short loc_1549D"], ["test~argv0,argv0", "push~rbx", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 5, -1, 0.0, ["lea     rbx, [slash+4]", "mov     cs:program_invocation_short_name@@GLIBC_2_2_5, argv0"], ["lea~rbx,[slash+0]", "mov~<TAG>,argv0"]], [1, 0, 5, 0, 1, 5, 1, 2, 1, -1, 0.11904761904761904, ["mov     esi, 2Fh ; '/'; c", "mov     rbx, argv0", "call    _strrchr", "test    slash, slash", "jz      short loc_1548D"], ["mov~esi,0", "mov~rbx,argv0", "call~FOO", "test~slash,slash", "jz~FOO"]], [2, 0, 0, 0, 2, 6, 0, 2, 1, 0, 0.0, ["mov     rcx, cs:stderr@@GLIBC_2_2_5; s", "lea     argv0, aANullArgv0WasP; \"A NULL argv[0] was passed through an ex\"...", "mov     edx, 37h ; '7'; n", "mov     esi, 1; size", "call    _fwrite", "call    _abort"], ["mov~rcx,<TAG>", "lea~argv0,<TAG>", "mov~edx,0", "mov~esi,0", "call~FOO", "call~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["mov     cs:program_name, argv0", "mov     cs:program_invocation_name@@GLIBC_2_2_5, argv0", "pop     argv0", "retn"], ["mov~<TAG>,argv0", "mov~<TAG>,argv0", "pop~argv0", "retn"]]], "func_feature": [3, 4, 8, 0, 8, 11, 1, 42, 0.0625, 7, 1], "succs": [[4, 7], [0, 7], [1, 7], [5, 6], [7], [2, 7], [], []], "fname": "set_program_name", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 4, 0, 0, 2, 0, 1, 0, 0, 0.0375, ["cmp     byte ptr [locale_code+3], 2Dh ; '-'", "jnz     loc_154E0"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [2, 0, 5, 0, 0, 4, 1, 1, 2, 4, 0.03333333333333333, ["movzx   edx, byte ptr [locale_code+2]", "and     edx, 0FFFFFFDFh", "cmp     dl, 46h ; 'F'", "jnz     loc_154E0"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 6, -1, 0.075, ["cmp     byte ptr [locale_code+5], 33h ; '3'", "jnz     short loc_154E0"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 5, -1, 0.08333333333333333, ["cmp     byte ptr [locale_code+4], 30h ; '0'", "jnz     short loc_154E0"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 5, 1, 0.020833333333333332, ["cmp     byte ptr [locale_code+5], 0", "jnz     loc_154E0"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, 2, 0.03333333333333333, ["cmp     byte ptr [locale_code+4], 38h ; '8'", "jnz     loc_154E0"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [2, 0, 0, 1, 0, 8, 0, 0, 6, 0, 0.0, ["cmp     byte ptr [msgid+0], 60h ; '`'", "lea     locale_code, unk_2110C", "lea     rdx, unk_21110", "cmovnz  rax, rdx", "add     rsp, 8", "pop     s", "pop     msgid", "retn"], ["cmp~[yte ptr [msgid+0],0", "lea~locale_code,<TAG>", "lea~rdx,<TAG>", "cmovnz~rax,rdx", "add~rsp,0", "pop~s", "pop~msgid", "retn"]], [2, 0, 6, 0, 0, 4, 1, 1, 1, 5, 0.022916666666666665, ["movzx   edx, byte ptr [locale_code+1]", "and     edx, 0FFFFFFDFh", "cmp     dl, 54h ; 'T'", "jnz     short loc_154E0"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 7, -1, 0.058333333333333334, ["cmp     byte ptr [locale_code+6], 30h ; '0'", "jnz     short loc_154E0"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [2, 0, 8, 0, 0, 4, 1, 1, 2, -1, 0.058333333333333334, ["movzx   edx, byte ptr [locale_code+1]", "and     edx, 0FFFFFFDFh", "cmp     dl, 42h ; 'B'", "jnz     short loc_154E0"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 1, -1, 0.035416666666666666, ["cmp     dl, 47h ; 'G'", "jz      short loc_15500"], ["cmp~dl,0", "jz~FOO"]], [2, 0, 0, 1, 0, 8, 0, 0, 9, -1, 0.0, ["cmp     byte ptr [msgid+0], 60h ; '`'", "lea     locale_code, unk_21114", "lea     rdx, unk_21118", "cmovnz  rax, rdx", "add     rsp, 8", "pop     s", "pop     msgid", "retn"], ["cmp~[yte ptr [msgid+0],0", "lea~locale_code,<TAG>", "lea~rdx,<TAG>", "cmovnz~rax,rdx", "add~rsp,0", "pop~s", "pop~msgid", "retn"]], [1, 0, 2, 0, 0, 2, 0, 1, 8, -1, 0.03333333333333333, ["cmp     byte ptr [locale_code+7], 0", "jnz     short loc_154E0"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 3, -1, 0.075, ["cmp     byte ptr [locale_code+2], 31h ; '1'", "jnz     short loc_154E0"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 4, -1, 0.08333333333333333, ["cmp     byte ptr [locale_code+3], 38h ; '8'", "jnz     short loc_154E0"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [3, 0, 16, 1, 1, 10, 1, 2, 0, 6, 0.0, ["push    rbp", "push    rbx", "mov     rbp, msgid", "mov     ebx, esi", "sub     rsp, 8", "call    locale_charset", "movzx   edx, byte ptr [locale_code]", "and     edx, 0FFFFFFDFh", "cmp     dl, 55h ; 'U'", "jz      short loc_15550"], ["push~rbp", "push~rbx", "mov~rbp,msgid", "mov~ebx,esi", "sub~rsp,0", "call~FOO", "movzx~edx,<TAG>", "and~edx,0", "cmp~dl,0", "jz~FOO"]], [2, 0, 0, 1, 0, 8, 0, 0, 2, -1, 0.0, ["lea     locale_code, unk_2111B", "lea     rdx, aInvalidSSArgum+19h; \"'\"", "cmp     ebx, 9", "cmovnz  rax, rdx", "add     rsp, 8", "pop     s", "pop     msgid", "retn"], ["lea~locale_code,<TAG>", "lea~rdx,<TAG>", "cmp~ebx,0", "cmovnz~rax,rdx", "add~rsp,0", "pop~s", "pop~msgid", "retn"]]], "func_feature": [1, 4, 15, 0, 17, 28, 2, 66, 0.03824, 6, 4], "succs": [[16, 5], [0, 16], [8, 16], [16, 2], [16, 6], [16, 4], [], [16, 1], [16, 12], [16, 13], [16, 9], [], [16, 11], [16, 14], [16, 3], [10, 7], []], "fname": "gettext_quote", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 244, 0, 0, 1, 1, 0, 0, 0, 3.840245775729647e-05, ["xor     r10d, r10d; jumptable 00000000000160AE cases 33,34,36,38,40-42,59-62,91,94,96,124"], ["xor~r10d,r10d"]], [0, 0, 244, 1, 0, 5, 0, 1, 9, -1, 0.10265307646356042, ["lea     rcx, off_213A8", "movzx   edx, bl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.004214349718382031, ["xor     ebp, ebp; jumptable 000000000001585E cases 33,34,36,38,40-42,59-62,91,94,96,124"], ["xor~ebp,ebp"]], [0, 0, 244, 1, 0, 5, 0, 1, 9, -1, 0.2749684246458439, ["lea     rcx, off_211AC", "movzx   edx, bl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [1, 0, 244, 1, 0, 5, 2, 1, 22, -1, 0.027355350742447517, ["add     r15, 4", "xor     ebp, ebp", "xor     eax, eax", "mov     r12, i", "jmp     loc_15872"], ["add~r15,0", "xor~ebp,ebp", "xor~eax,eax", "mov~r12,i", "jmp~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 21, -1, 0.02761136712749616, ["lea     len, [r15+3]", "cmp     buffersize_0, len", "jbe     short loc_167FB"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 22, -1, 0.0, ["mov     byte ptr [r8+r15+3], 3Fh ; '?'"], ["mov~[yte ptr [r8+0],0"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.014460445468510113, ["cmp     [rsp+0F8h+var_88], 0", "jz      loc_15870; jumptable 000000000001585E cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 10, -1, 0.010921979006656438, ["test    i, i; jumptable 000000000001585E cases 35,126", "jz      loc_15A05"], ["test~i,i", "jz~FOO"]], [0, 1, 244, 0, 0, 2, 0, 1, 10, -1, 0.0011165514592933925, ["mov     ebx, 20h ; ' '; jumptable 000000000001585E case 32", "jmp     loc_15A05"], ["mov~ebx,<STR>", "jmp~FOO"]], [0, 1, 244, 0, 0, 4, 1, 1, 10, -1, 0.001113351254480284, ["movzx   ebp, [rsp+0F8h+var_E2]; jumptable 00000000000160AE case 32", "mov     ebx, 20h ; ' '", "xor     r10d, r10d", "jmp     loc_15A05"], ["movzx~ebp,[rsp+0]", "mov~ebx,<STR>", "xor~r10d,r10d", "jmp~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 12, -1, 0.0012800819252432156, ["mov     eax, 5Ch ; '\\'", "mov     ebx, 5Ch ; '\\'", "jmp     c_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.007002048131080389, ["cmp     [rsp+0F8h+var_85], 0", "jz      loc_16208"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 12, -1, 0.0027265745007680493, ["cmp     [rsp+0F8h+quote_string_len], 0", "jz      loc_16208"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 19, -1, 0.0, ["mov     byte ptr [r8+rdx+2], 30h ; '0'"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 3, 0, 0, 18, -1, 0.012570404505888377, ["lea     rax, [rdx+2]", "cmp     buffersize_0, len", "jbe     short loc_16709"], ["lea~rax,[rdx+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 11, -1, 0.0, ["add     rsp, 0C8h", "pop     rbx", "pop     argsize_0", "pop     i", "pop     buffersize_0", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~argsize_0", "pop~i", "pop~buffersize_0", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 10, -1, 0.0070916538658474144, ["mov     rsi, [rsp+0F8h+var_40]", "xor     rsi, fs:28h", "mov     rax, r15", "jnz     loc_16948"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~rax,r15", "jnz~FOO"]], [2, 0, 244, 1, 0, 4, 0, 0, 19, -1, 0.0, ["mov     edx, ebx", "shr     dl, 6", "add     edx, 30h ; '0'", "mov     [r8+r15+1], dl"], ["mov~edx,ebx", "shr~dl,0", "add~edx,0", "mov~[r8+0],dl"]], [0, 0, 244, 0, 0, 3, 0, 0, 18, -1, 0.04857910906298003, ["lea     rdx, [r15+1]", "cmp     r13, len", "jbe     short loc_15CDC"], ["lea~rdx,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [14, 0, 244, 0, 0, 21, 4, 1, 2, -1, 0.0020737327188940094, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000015641 case 0", "mov     [rsp+0F8h+var_87], 1", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "xor     r15d, r15d", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 0", "mov     esi, eax", "and     eax, 4", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "and     esi, 1", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+var_84], esi", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 0", "mov     [rsp+0F8h+backslash_escapes], 0", "mov     [rsp+0F8h+quote_string_len], 0", "mov     [rsp+0F8h+s2], 0", "jmp     loc_15758"], ["mov~eax,[rsp+0]", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~esi,eax", "and~eax,0", "mov~[rsp+0],0", "and~esi,0", "mov~[rsp+0],eax", "mov~[rsp+0],0", "mov~[rsp+0],esi", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 278, 1, 0, 5, 0, 1, 1, 2, 0.003558627752176139, ["lea     rcx, off_21180", "mov     edx, r15d", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "mov~edx,r15d", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [0, 0, 244, 0, 1, 12, 1, 2, 10, -1, 0.007567951015531651, ["mov     rdx, [rsp+0F8h+quote_string_len]; n", "mov     rsi, [rsp+0F8h+s2]; s2", "mov     rdi, r9; s1", "mov     [rsp+0F8h+pwc], r8", "mov     byte ptr [rsp+0F8h+pending_shell_escape_end], r11b", "mov     [rsp+0F8h+ps], r9", "call    _memcmp", "test    eax, eax", "mov     r9, [rsp+0F8h+ps]", "movzx   r11d, byte ptr [rsp+0F8h+pending_shell_escape_end]", "mov     r8, [rsp+0F8h+pwc]", "jnz     loc_16080"], ["mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,r9", "mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[rsp+0],r9", "call~FOO", "test~eax,eax", "mov~r9,[rsp+0]", "movzx~r11d,[yte ptr [rsp+0]", "mov~r8,[rsp+0]", "jnz~FOO"]], [0, 0, 244, 0, 0, 2, 0, 1, 9, -1, 0.0200743514251579, ["cmp     rbx, argsize_0", "ja      loc_16080"], ["cmp~rbx,argsize_0", "ja~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 18, -1, 0.01282642089093702, ["cmp     r13, r15", "jbe     short loc_15D62"], ["cmp~r13,r15", "jbe~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 17, -1, 0.02951868919610855, ["test    dl, dl", "jz      loc_165B7"], ["test~dl,dl", "jz~FOO"]], [1, 0, 6, 0, 0, 6, 0, 0, 12, -1, 0.0018657194060419868, ["movzx   eax, [rsp+0F8h+var_88]", "mov     rbp, argsize_0", "mov     [rsp+0F8h+quoting_style], 2", "mov     argsize_0, r8", "mov     [rsp+0F8h+var_E1], al", "nop     word ptr [rax+rax+00000000h]"], ["movzx~eax,[rsp+0]", "mov~rbp,argsize_0", "mov~[rsp+0],0", "mov~argsize_0,r8", "mov~[rsp+0],al", "nop~[ord ptr [rax+0]"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.020636200716845767, ["cmp     [rsp+0F8h+var_88], 0", "jnz     loc_15A10"], ["cmp~[rsp+0],0", "jnz~FOO"]], [3, 0, 280, 1, 1, 29, 2, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r15d, r8d", "push    r13", "push    r12", "mov     r14, buffer", "push    rbp", "push    rbx", "mov     ebx, r9d", "mov     r13, buffersize_0", "mov     rbp, argsize_0", "and     ebx, 2", "sub     rsp, 0C8h", "mov     rax, [rsp+0F8h+quote_these_too]", "mov     [rsp+0F8h+arg], arg_0", "mov     [rsp+0F8h+quoting_style], r8d", "mov     [rsp+0F8h+flags], r9d", "mov     [rsp+0F8h+var_D8], rax", "mov     rax, [rsp+0F8h+left_quote]", "mov     [rsp+0F8h+quote_string_0], rax", "mov     rax, [rsp+0F8h+right_quote]", "mov     [rsp+0F8h+quote_string], rax", "mov     rax, fs:28h", "mov     [rsp+0F8h+var_40], rax", "xor     eax, eax", "call    ___ctype_get_mb_cur_max", "cmp     r15d, 0Ah; switch 11 cases", "mov     [rsp+0F8h+var_98], rax", "ja      loc_16970; jumptable 0000000000015641 default case"], ["push~r15", "push~r14", "mov~r15d,r8d", "push~r13", "push~r12", "mov~r14,buffer", "push~rbp", "push~rbx", "mov~ebx,r9d", "mov~r13,buffersize_0", "mov~rbp,argsize_0", "and~ebx,0", "sub~rsp,0", "mov~rax,[rsp+0]", "mov~[rsp+0],arg_0", "mov~[rsp+0],r8d", "mov~[rsp+0],r9d", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "cmp~r15d,0", "mov~[rsp+0],rax", "ja~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.004444551117938212, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     loc_16550"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 1, 0, 2, 0, 1, 12, -1, 0.012224782386072709, ["add     i, 1", "jmp     loc_15768"], ["add~i,0", "jmp~FOO"]], [0, 0, 244, 0, 0, 4, 2, 1, 11, -1, 0.01624530636627411, ["mov     edx, [rsp+0F8h+var_84]", "xor     eax, eax", "test    edx, edx", "jnz     loc_165AE"], ["mov~edx,[rsp+0]", "xor~eax,eax", "test~edx,edx", "jnz~FOO"]], [14, 0, 244, 0, 0, 21, 4, 1, 2, -1, 0.0020737327188940094, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000015641 case 7", "mov     [rsp+0F8h+var_87], 0", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "xor     r15d, r15d", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 1", "mov     ecx, eax", "and     eax, 4", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "and     ecx, 1", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+var_84], ecx", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 0", "mov     [rsp+0F8h+backslash_escapes], 1", "mov     [rsp+0F8h+quote_string_len], 0", "mov     [rsp+0F8h+s2], 0", "jmp     loc_15758"], ["mov~eax,[rsp+0]", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~ecx,eax", "and~eax,0", "mov~[rsp+0],0", "and~ecx,0", "mov~[rsp+0],eax", "mov~[rsp+0],0", "mov~[rsp+0],ecx", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 244, 0, 0, 6, 2, 1, 6, -1, 0.07246543778801844, ["test    r15, r15", "mov     rbp, argsize_0", "mov     argsize_0, r8", "setz    al", "and     al, [rsp+0F8h+var_88]", "jnz     loc_1692C"], ["test~r15,r15", "mov~rbp,argsize_0", "mov~argsize_0,r8", "setz~al", "and~al,[rsp+0]", "jnz~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 5, -1, 0.6331925243215566, ["test    bpl, bpl", "jz      loc_16220"], ["test~bpl,bpl", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 13, -1, 0.05403225806451613, ["cmp     bytes, 0FFFFFFFFFFFFFFFFh", "jz      loc_16676"], ["cmp~bytes,0", "jz~FOO"]], [0, 0, 244, 1, 1, 12, 1, 2, 12, -1, 0.07457757296466974, ["mov     rax, [rsp+0F8h+arg]", "lea     r15, [i+m]", "mov     rdx, [rsp+0F8h+pending_shell_escape_end]", "mov     rcx, [rsp+0F8h+ps]; ps", "mov     rdi, [rsp+0F8h+pwc]; pwc", "lea     r13, [rax+r15]", "sub     rdx, r15; n", "mov     rsi, r13; s", "call    rpl_mbrtowc", "test    rax, rax", "mov     r14, rax", "jz      short loc_16470"], ["mov~rax,[rsp+0]", "lea~r15,<TAG>", "mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rdi,[rsp+0]", "lea~r13,<TAG>", "sub~rdx,r15", "mov~rsi,r13", "call~FOO", "test~rax,rax", "mov~r14,rax", "jz~FOO"]], [1, 0, 244, 0, 0, 3, 0, 0, 16, -1, 0.035129714968424645, ["mov     rax, 7000A38200000000h", "bt      rax, rbx", "jnb     loc_15988"], ["mov~rax,0", "bt~rax,rbx", "jnb~FOO"]], [1, 0, 244, 0, 0, 3, 0, 1, 15, -1, 0.03960360129714969, ["movzx   ebx, byte ptr [rax+rdx]", "cmp     bl, 3Eh ; '>'", "ja      loc_15988"], ["movzx~ebx,<TAG>", "cmp~bl,0", "ja~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 12, -1, 0.0030081925243215565, ["movzx   r10d, [rsp+0F8h+var_E2]", "nop     dword ptr [rax+rax+00000000h]"], ["movzx~r10d,[rsp+0]", "nop~[word ptr [rax+0]"]], [1, 0, 244, 0, 0, 2, 0, 1, 14, -1, 0.04779825908858167, ["cmp     bytes, 0FFFFFFFFFFFFFFFEh", "jz      loc_165F3"], ["cmp~bytes,0", "jz~FOO"]], [0, 0, 245, 0, 0, 1, 0, 1, 8, -1, 0.012544802867383513, ["jmp     loc_15ECA"], ["jmp~FOO"]], [1, 0, 249, 1, 0, 5, 1, 1, 7, -1, 0.009575012800819252, ["mov     rax, [rsp+0F8h+quote_string_0]", "add     r15, 1", "movzx   eax, byte ptr [rax+len]", "test    al, al", "jnz     short loc_166D0"], ["mov~rax,[rsp+0]", "add~r15,0", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 244, 0, 0, 14, 0, 0, 15, -1, 0.02197900665642601, ["mov     r14, [rsp+0F8h+pending_shell_escape_end]", "mov     rcx, r15", "mov     rsi, r13", "mov     bytes, m", "mov     rdi, rbx", "movzx   r11d, [rsp+0F8h+var_6B]", "movzx   ebx, [rsp+0F8h+c]", "mov     r9, [rsp+0F8h+var_60]", "cmp     rcx, r14", "movzx   r10d, [rsp+0F8h+var_69]", "mov     r15, [rsp+0F8h+var_68]", "mov     r8, [rsp+0F8h+var_80]", "mov     r13, [rsp+0F8h+buffersize]", "jnb     short loc_16667"], ["mov~r14,[rsp+0]", "mov~rcx,r15", "mov~rsi,r13", "mov~bytes,m", "mov~rdi,rbx", "movzx~r11d,[rsp+0]", "movzx~ebx,[rsp+0]", "mov~r9,[rsp+0]", "cmp~rcx,r14", "movzx~r10d,[rsp+0]", "mov~r15,[rsp+0]", "mov~r8,[rsp+0]", "mov~r13,[rsp+0]", "jnb~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0033371735791090634, ["mov     eax, 0Ch; jumptable 00000000000160AE case 12", "xor     r10d, r10d", "mov     ebx, 66h ; 'f'", "jmp     c_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 1, 15, 2, 1, 10, -1, 0.09486687147977471, ["mov     [rsp+0F8h+pwc], r8", "mov     byte ptr [rsp+0F8h+pending_shell_escape_end], r11b", "mov     byte ptr [rsp+0F8h+ps], r10b", "call    ___ctype_b_loc", "mov     rcx, [rax]", "movzx   edx, bl", "movzx   r10d, byte ptr [rsp+0F8h+ps]", "movzx   r11d, byte ptr [rsp+0F8h+pending_shell_escape_end]", "mov     r8, [rsp+0F8h+pwc]", "mov     edi, 1", "movzx   eax, word ptr [rcx+rdx*2]", "and     ax, 4000h", "setnz   bpl", "setz    al", "and     al, [rsp+0F8h+backslash_escapes]"], ["mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[yte ptr [rsp+0],r10b", "call~FOO", "mov~rcx,<TAG>", "movzx~edx,bl", "movzx~r10d,[yte ptr [rsp+0]", "movzx~r11d,[yte ptr [rsp+0]", "mov~r8,[rsp+0]", "mov~edi,0", "movzx~eax,<TAG>", "and~ax,0", "setnz~bpl", "setz~al", "and~al,[rsp+0]"]], [1, 0, 244, 0, 0, 2, 0, 1, 9, -1, 0.17191500256016384, ["cmp     [rsp+0F8h+var_98], 1; jumptable 000000000001585E default case", "jnz     loc_16358"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 5, 2, 1, 7, -1, 0.0630184331797235, ["movzx   eax, [rsp+0F8h+c_and_shell_quote_compat]", "movzx   edx, [rsp+0F8h+var_E1]", "xor     eax, 1", "and     dl, al", "jz      loc_16864"], ["movzx~eax,[rsp+0]", "movzx~edx,[rsp+0]", "xor~eax,0", "and~dl,al", "jz~FOO"]], [1, 0, 244, 0, 0, 3, 0, 1, 8, -1, 0.443913637139444, ["movzx   ebx, byte ptr [r9]", "cmp     bl, 7Eh ; '~'; switch 127 cases", "ja      loc_15BF8; jumptable 000000000001585E default case"], ["movzx~ebx,<TAG>", "cmp~bl,0", "ja~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 7, -1, 0.4379228537293057, ["xor     r10d, r10d", "jmp     loc_15840"], ["xor~r10d,r10d", "jmp~FOO"]], [2, 0, 4, 0, 0, 4, 0, 0, 9, -1, 0.0, ["cmp     [rsp+0F8h+var_E1], 0", "mov     eax, 4", "cmovz   eax, [rsp+0F8h+quoting_style]", "mov     [rsp+0F8h+quoting_style], eax"], ["cmp~[rsp+0],0", "mov~eax,0", "cmovz~eax,[rsp+0]", "mov~[rsp+0],eax"]], [1, 0, 5, 0, 0, 2, 0, 1, 8, -1, 0.016163167776071, ["cmp     [rsp+0F8h+backslash_escapes], 0", "jz      short loc_15A4D"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 14, -1, 0.0670762928827445, ["cmp     m, 1", "ja      loc_15C5C"], ["cmp~m,0", "ja~FOO"]], [0, 0, 244, 0, 0, 3, 1, 1, 16, -1, 0.021210957501280082, ["movzx   eax, [rsp+0F8h+backslash_escapes]", "xor     ebp, ebp", "jmp     loc_164B3"], ["movzx~eax,[rsp+0]", "xor~ebp,ebp", "jmp~FOO"]], [0, 0, 244, 0, 0, 11, 1, 1, 14, -1, 0.002867383512544803, ["mov     rdi, m", "movzx   r11d, [rsp+0F8h+var_6B]", "movzx   ebx, [rsp+0F8h+c]", "movzx   r10d, [rsp+0F8h+var_69]", "mov     r15, [rsp+0F8h+var_68]", "xor     ebp, ebp", "mov     r8, [rsp+0F8h+var_80]", "mov     r13, [rsp+0F8h+buffersize]", "mov     r14, [rsp+0F8h+pending_shell_escape_end]", "movzx   eax, [rsp+0F8h+backslash_escapes]", "jmp     loc_164B3"], ["mov~rdi,m", "movzx~r11d,[rsp+0]", "movzx~ebx,[rsp+0]", "movzx~r10d,[rsp+0]", "mov~r15,[rsp+0]", "xor~ebp,ebp", "mov~r8,[rsp+0]", "mov~r13,[rsp+0]", "mov~r14,[rsp+0]", "movzx~eax,[rsp+0]", "jmp~FOO"]], [1, 0, 244, 0, 0, 11, 2, 0, 13, -1, 0.036904761904761905, ["mov     eax, ebp", "mov     rdi, m", "movzx   r11d, [rsp+0F8h+var_6B]", "xor     eax, 1", "movzx   ebx, [rsp+0F8h+c]", "movzx   r10d, [rsp+0F8h+var_69]", "and     al, [rsp+0F8h+backslash_escapes]", "mov     r15, [rsp+0F8h+var_68]", "mov     r8, [rsp+0F8h+var_80]", "mov     r13, [rsp+0F8h+buffersize]", "mov     bytes, [rsp+0F8h+pending_shell_escape_end]"], ["mov~eax,ebp", "mov~rdi,m", "movzx~r11d,[rsp+0]", "xor~eax,0", "movzx~ebx,[rsp+0]", "movzx~r10d,[rsp+0]", "and~al,[rsp+0]", "mov~r15,[rsp+0]", "mov~r8,[rsp+0]", "mov~r13,[rsp+0]", "mov~bytes,[rsp+0]"]], [0, 0, 244, 0, 0, 2, 1, 1, 11, -1, 0.10432667690732207, ["test    al, al", "jz      loc_15872"], ["test~al,al", "jz~FOO"]], [0, 0, 244, 0, 0, 1, 0, 1, 15, -1, 0.006477214541730671, ["jmp     loc_15C4A"], ["jmp~FOO"]], [1, 0, 244, 1, 0, 4, 0, 1, 17, -1, 0.006438812083973375, ["add     m, 1", "lea     rdx, [i+m]", "cmp     r14, rdx", "ja      short loc_16650"], ["add~m,0", "lea~rdx,<TAG>", "cmp~r14,rdx", "ja~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 16, -1, 0.012852022529441884, ["cmp     byte ptr [rsi], 0", "jnz     short loc_16657"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 18, -1, 0.0, ["cmp     byte ptr [r9+m], 0", "jz      short loc_16664"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 8, -1, 0.043561187916026624, ["cmp     [rsp+0F8h+encountered_single_quote], 0", "jz      loc_16866"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 244, 0, 0, 1, 0, 0, 21, -1, 0.006810035842293907, ["mov     esi, eax"], ["mov~esi,eax"]], [4, 0, 244, 3, 0, 6, 1, 0, 20, -1, 0.048067076292882746, ["and     ebx, 7", "add     i, 1", "add     r15, 3", "add     ebx, 30h ; '0'", "cmp     ilim, r12", "jbe     loc_158D4"], ["and~ebx,0", "add~i,0", "add~r15,0", "add~ebx,0", "cmp~ilim,r12", "jbe~FOO"]], [1, 0, 244, 1, 0, 2, 0, 0, 20, -1, 0.018394777265745007, ["add     r15, 3", "mov     r11d, edx"], ["add~r15,0", "mov~r11d,edx"]], [0, 0, 244, 0, 0, 3, 0, 0, 19, -1, 0.01865079365079365, ["lea     len, [r15+2]", "cmp     r13, len", "jbe     short loc_15CB5"], ["lea~len,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 20, -1, 0.0, ["mov     byte ptr [r8+r15+2], 27h ; '''"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 13, 0, 0, 1, 0, 0, 8, -1, 0.01607782898105479, ["mov     edx, eax"], ["mov~edx,eax"]], [0, 0, 244, 0, 0, 2, 1, 0, 12, -1, 0.08591909882232462, ["movzx   eax, [rsp+0F8h+backslash_escapes]", "xor     ebp, ebp"], ["movzx~eax,[rsp+0]", "xor~ebp,ebp"]], [1, 0, 244, 0, 0, 2, 0, 1, 9, -1, 0.027208141321044547, ["cmp     [rsp+0F8h+all_c_and_shell_quote_compat], 0", "jnz     loc_168E6"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 250, 0, 0, 8, 3, 1, 2, -1, 8.960573476702509e-05, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000015641 case 4", "mov     esi, eax", "and     eax, 4", "and     esi, 1", "test    ebx, ebx", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+var_84], esi", "jnz     loc_15F56"], ["mov~eax,[rsp+0]", "mov~esi,eax", "and~eax,0", "and~esi,0", "test~ebx,ebx", "mov~[rsp+0],eax", "mov~[rsp+0],esi", "jnz~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.0008829365079365056, ["mov     eax, 0Ah; jumptable 000000000001585E case 10", "mov     ebx, 6Eh ; 'n'", "jmp     c_and_shell_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [11, 0, 244, 0, 0, 16, 2, 1, 3, -1, 0.003123399897593446, ["lea     rax, unk_2111B", "mov     [rsp+0F8h+var_87], 0", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "mov     [rsp+0F8h+var_85], 1", "xor     r11d, r11d", "mov     [rsp+0F8h+var_E2], 1", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "xor     r15d, r15d", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+backslash_escapes], 1", "mov     [rsp+0F8h+quote_string_len], 1", "mov     [rsp+0F8h+s2], rax", "jmp     loc_15758"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [2, 0, 249, 0, 0, 8, 3, 1, 2, -1, 0.00012800819252432156, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000015641 case 5", "mov     esi, eax", "and     eax, 4", "and     esi, 1", "test    ebx, ebx", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+var_84], esi", "jnz     loc_1680B"], ["mov~eax,[rsp+0]", "mov~esi,eax", "and~eax,0", "and~esi,0", "test~ebx,ebx", "mov~[rsp+0],eax", "mov~[rsp+0],esi", "jnz~FOO"]], [1, 0, 247, 0, 0, 1, 0, 0, 3, -1, 0.00010240655401945725, ["mov     [rsp+0F8h+backslash_escapes], 1"], ["mov~[rsp+0],0"]], [0, 0, 244, 0, 0, 1, 0, 0, 18, -1, 0.006169994879672299, ["mov     rdi, m"], ["mov~rdi,m"]], [1, 0, 256, 0, 0, 2, 0, 1, 2, -1, 0.00030721966205837174, ["cmp     [rsp+0F8h+quoting_style], 0Ah; jumptable 0000000000015641 cases 8-10", "jz      short loc_15EBF"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 1, 0, 10, -1, 0.00020737327188940095, ["movzx   ebp, [rsp+0F8h+var_E2]; jumptable 00000000000160AE cases 37,43-58,65-90,93,95,97-122", "xor     r10d, r10d", "nop     dword ptr [rax+rax+00000000h]"], ["movzx~ebp,[rsp+0]", "xor~r10d,r10d", "nop~[word ptr [rax+0]"]], [0, 0, 246, 0, 0, 2, 1, 1, 4, -1, 0.0064516129032258064, ["test    buffersize_0, buffersize_0", "jnz     loc_1695A"], ["test~buffersize_0,buffersize_0", "jnz~FOO"]], [1, 0, 247, 0, 0, 2, 0, 1, 3, 0, 0.00010240655401945725, ["mov     [rsp+0F8h+backslash_escapes], 0", "jmp     loc_1566A"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 244, 1, 2, 10, 2, 3, 16, -1, 0.017895545314900153, ["mov     edi, [rsp+0F8h+w]; wc", "call    _iswprint", "mov     rdi, [rsp+0F8h+ps]; ps", "test    eax, eax", "mov     eax, 0", "cmovz   ebp, eax", "add     m, bytes", "call    _mbsinit", "test    eax, eax", "jz      short loc_163FF"], ["mov~edi,[rsp+0]", "call~FOO", "mov~rdi,[rsp+0]", "test~eax,eax", "mov~eax,0", "cmovz~ebp,eax", "add~m,bytes", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 16, -1, 0.016129032258064516, ["cmp     bytes, 1", "jz      loc_16449"], ["cmp~bytes,0", "jz~FOO"]], [1, 0, 244, 1, 0, 3, 0, 1, 19, -1, 0.008986175115207374, ["add     rax, 1", "cmp     r8, rax", "jz      loc_16449"], ["add~rax,0", "cmp~r8,rax", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 15, -1, 0.022452636968766, ["cmp     [rsp+0F8h+var_88], 0", "jnz     short loc_164C8"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 244, 1, 0, 6, 1, 1, 13, -1, 0.14626216077828982, ["mov     rcx, rdi", "xor     esi, esi", "movzx   r9d, [rsp+0F8h+c_and_shell_quote_compat]", "add     rcx, i", "mov     rdi, [rsp+0F8h+arg]", "jmp     loc_15D20"], ["mov~rcx,rdi", "xor~esi,esi", "movzx~r9d,[rsp+0]", "add~rcx,i", "mov~rdi,[rsp+0]", "jmp~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.028798003072196623, ["xor     eax, eax; jumptable 000000000001585E cases 37,43-58,65-90,93,95,97-122"], ["xor~eax,eax"]], [0, 0, 244, 0, 0, 1, 0, 1, 17, -1, 0.003059395801331285, ["jmp     short loc_16667"], ["jmp~FOO"]], [1, 0, 244, 0, 0, 6, 2, 1, 10, -1, 0.02375832053251408, ["test    buffersize_0, buffersize_0", "setz    al", "cmp     [rsp+0F8h+orig_buffersize], 0", "setnz   dl", "and     al, dl", "jz      loc_16922"], ["test~buffersize_0,buffersize_0", "setz~al", "cmp~[rsp+0],0", "setnz~dl", "and~al,dl", "jz~FOO"]], [1, 0, 244, 0, 0, 5, 2, 1, 12, -1, 0.06488628605564088, ["mov     eax, r11d", "mov     rdx, r15", "xor     eax, 1", "and     al, [rsp+0F8h+var_E1]", "jz      short loc_16144"], ["mov~eax,r11d", "mov~rdx,r15", "xor~eax,0", "and~al,[rsp+0]", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.06694359105649433, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     loc_16550"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.15902927120669055, ["cmp     [rsp+0F8h+var_87], 0", "jnz     loc_15B86"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 244, 0, 0, 3, 2, 1, 11, -1, 0.02067332309267793, ["xor     ebp, ebp", "xor     eax, eax", "jmp     loc_15872"], ["xor~ebp,ebp", "xor~eax,eax", "jmp~FOO"]], [1, 0, 244, 0, 0, 4, 2, 1, 12, -1, 0.020451442225635774, ["xor     ebp, ebp", "xor     eax, eax", "mov     ebx, 3Fh ; '?'", "jmp     loc_15872"], ["xor~ebp,ebp", "xor~eax,eax", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 4, 1, 1, 11, -1, 0.005721966205837174, ["mov     [rsp+0F8h+encountered_single_quote], bpl", "xor     eax, eax", "mov     ebx, 27h ; '''", "jmp     loc_15872"], ["mov~[rsp+0],bpl", "xor~eax,eax", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 4, 1, 1, 16, -1, 0.006899641577060932, ["mov     eax, ebp", "mov     ebx, 30h ; '0'", "xor     ebp, ebp", "jmp     loc_15872"], ["mov~eax,ebp", "mov~ebx,0", "xor~ebp,ebp", "jmp~FOO"]], [1, 0, 244, 0, 0, 5, 1, 1, 19, -1, 0.012314388120839733, ["mov     eax, ebp", "lea     r15, [rdx+3]", "xor     ebp, ebp", "mov     ebx, 30h ; '0'", "jmp     loc_15872"], ["mov~eax,ebp", "lea~r15,[rdx+0]", "xor~ebp,ebp", "mov~ebx,0", "jmp~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 15, -1, 0.054070660522273425, ["test    r9b, r9b", "jnz     loc_16550"], ["test~r9b,r9b", "jnz~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 14, -1, 0.18753200204813109, ["test    al, al", "jnz     loc_15C78"], ["test~al,al", "jnz~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 11, -1, 0.020084485407066054, ["mov     rdx, [rsp+0F8h+orig_buffersize]", "mov     buffersize_0, rdx"], ["mov~rdx,[rsp+0]", "mov~buffersize_0,rdx"]], [2, 0, 244, 1, 0, 5, 1, 1, 19, -1, 0.003699436763952893, ["mov     edx, 1", "shl     rdx, cl", "mov     rcx, 20000002Bh", "test    rdx, rcx", "jz      short loc_164E8"], ["mov~edx,0", "shl~rdx,cl", "mov~rcx,0", "test~rdx,rcx", "jz~FOO"]], [1, 0, 244, 0, 0, 4, 0, 1, 18, -1, 0.013031233998975935, ["movzx   esi, byte ptr [rax]", "lea     ecx, [rsi-5Bh]", "cmp     cl, 21h ; '!'", "ja      short loc_164E8"], ["movzx~esi,<TAG>", "lea~ecx,[rsi-5Bh]+0]", "cmp~cl,0", "ja~FOO"]], [3, 1, 3, 2, 1, 14, 1, 1, 9, -1, 0.009946236559139785, ["sub     rsp, 8", "mov     rcx, argsize_0; argsize", "mov     rsi, buffersize_0; buffersize", "push    [rsp+100h+quote_string]; right_quote", "push    [rsp+108h+quote_string_0]; left_quote", "mov     rdi, r14; buffer", "push    0; quote_these_too", "mov     r9d, [rsp+118h+flags]", "mov     r8d, [rsp+118h+quoting_style]; quoting_style", "mov     rdx, [rsp+118h+arg]; arg", "and     r9d, 0FFFFFFFDh; flags", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r15, len"], ["sub~rsp,0", "mov~rcx,argsize_0", "mov~rsi,buffersize_0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdi,r14", "push~0", "mov~r9d,[rsp+0]", "mov~r8d,[rsp+0]", "mov~rdx,[rsp+0]", "and~r9d,0", "call~FOO", "add~rsp,<STR>", "mov~r15,len"]], [0, 0, 4, 0, 0, 3, 0, 1, 18, -1, 0.00032428742106161465, ["mov     rbp, argsize_0", "mov     argsize_0, r8", "jmp     loc_15A4D"], ["mov~rbp,argsize_0", "mov~argsize_0,r8", "jmp~FOO"]], [1, 0, 244, 0, 0, 4, 0, 1, 6, -1, 0.5573604710701485, ["cmp     [rsp+0F8h+var_E2], 0", "mov     rdi, [rsp+0F8h+arg]; s", "lea     r9, [rdi+i]", "jz      loc_16080"], ["cmp~[rsp+0],0", "mov~rdi,[rsp+0]", "lea~r9,<TAG>", "jz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 0, 12, -1, 0.01330005120327701, ["cmp     buffersize_0, len", "jbe     short loc_168AC"], ["cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 10, 1, 0, 5, 1, 1, 13, -1, 0.0033922171018945214, ["mov     [r14+len], cl", "add     len, 1", "movzx   ecx, byte ptr [rax+len]", "test    cl, cl", "jnz     short loc_16881"], ["mov~<TAG>,cl", "add~len,0", "movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [1, 0, 10, 1, 0, 4, 1, 1, 13, -1, 0.0033410138248847927, ["add     len, 1", "movzx   ecx, byte ptr [rax+len]", "test    cl, cl", "jnz     short loc_16881"], ["add~len,0", "movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [0, 0, 10, 1, 0, 5, 1, 1, 11, -1, 0.01651305683563748, ["movzx   ecx, byte ptr [rax]", "sub     rax, r15", "mov     rdx, r15", "test    cl, cl", "jz      short loc_16899"], ["movzx~ecx,<TAG>", "sub~rax,r15", "mov~rdx,r15", "test~cl,cl", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 1, 1, 12, -1, 0.15974782386072706, ["mov     rsi, [rsp+0F8h+var_D8]", "test    rsi, rsi", "jz      short loc_1589B"], ["mov~rsi,[rsp+0]", "test~rsi,rsi", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 12, -1, 0.0123410564942823, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     loc_1587D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 18, -1, 0.0, ["mov     byte ptr [r8+r15], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 0, 244, 0, 0, 2, 0, 0, 17, -1, 0.04883512544802868, ["cmp     r13, r15", "jbe     short loc_15CC6"], ["cmp~r13,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 4, 2, 1, 16, -1, 0.049859190988223244, ["mov     edx, r11d", "xor     edx, 1", "and     dl, [rsp+0F8h+var_E1]", "jz      short loc_15CBC"], ["mov~edx,r11d", "xor~edx,0", "and~dl,[rsp+0]", "jz~FOO"]], [1, 0, 244, 1, 0, 3, 0, 0, 16, -1, 0.1295826932923707, ["add     i, 1", "cmp     r12, ilim", "jnb     store_c"], ["add~i,0", "cmp~r12,ilim", "jnb~FOO"]], [1, 0, 255, 0, 1, 9, 1, 2, 3, -1, 0.0001152073732718894, ["lea     rsi, asc_2111D; \"`\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rax", "mov     [rsp+0F8h+quote_string_0], rax", "lea     rax, asc_2111D; \"`\"", "cmp     rcx, rax", "jz      loc_168D0"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rax", "mov~[rsp+0],rax", "lea~rax,<TAG>", "cmp~rcx,rax", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 15, -1, 0.02322068612391193, ["lea     rax, [i+1]", "cmp     rax, argsize_0", "jnb     short loc_16181"], ["lea~rax,[i+0]", "cmp~rax,argsize_0", "jnb~FOO"]], [2, 0, 244, 1, 0, 6, 0, 0, 16, -1, 0.016001024065540194, ["mov     rax, [rsp+0F8h+arg]", "movzx   eax, byte ptr [rax+i+1]", "mov     byte ptr [rsp+0F8h+ps], al", "sub     eax, 30h ; '0'", "cmp     al, 9", "jbe     loc_166F0"], ["mov~rax,[rsp+0]", "movzx~eax,[yte ptr [rax+0]", "mov~[yte ptr [rsp+0],al", "sub~eax,0", "cmp~al,0", "jbe~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 17, -1, 0.019162826420890938, ["cmp     r13, r15", "jbe     short loc_15C97"], ["cmp~r13,r15", "jbe~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 13, -1, 0.019162826420890938, ["cmp     buffersize_0, r15", "jbe     short loc_1611F"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 18, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [1, 0, 244, 0, 0, 6, 0, 0, 13, -1, 0.007692225635774024, ["mov     edx, ebx", "shr     dl, 5", "movzx   edx, dl", "mov     edx, [rsi+rdx*4]", "bt      edx, ebx", "jb      store_escape"], ["mov~edx,ebx", "shr~dl,0", "movzx~edx,dl", "mov~edx,<TAG>", "bt~edx,ebx", "jb~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 14, -1, 0.0002560163850486431, ["mov     r15, len"], ["mov~r15,len"]], [0, 0, 6, 0, 0, 1, 0, 1, 14, -1, 7.680491551459293e-05, ["jmp     short loc_16896"], ["jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 10, -1, 0.0038466461853558626, ["cmp     buffersize_0, r15", "jbe     loc_15A83"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 11, -1, 0.0, ["mov     byte ptr [r14+r15], 0", "jmp     loc_15A83"], ["mov~<TAG>,0", "jmp~FOO"]], [2, 1, 3, 2, 1, 14, 0, 2, 10, -1, 7.040450588837686e-05, ["sub     rsp, 8", "mov     r8d, 5; quoting_style", "mov     rcx, argsize_0; argsize", "push    [rsp+100h+quote_string]; right_quote", "push    [rsp+108h+quote_string_0]; left_quote", "mov     rdi, r14; buffer", "push    [rsp+110h+var_D8]; quote_these_too", "mov     r9d, [rsp+118h+flags]; flags", "mov     rdx, [rsp+118h+arg]; arg", "mov     rsi, [rsp+118h+orig_buffersize]; buffersize", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r15, len", "jmp     loc_15A83"], ["sub~rsp,0", "mov~r8d,0", "mov~rcx,argsize_0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdi,r14", "push~[rsp+0]", "mov~r9d,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "call~FOO", "add~rsp,<STR>", "mov~r15,len", "jmp~FOO"]], [2, 0, 246, 0, 0, 6, 2, 0, 2, -1, 1.2800819252432156e-05, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000015641 case 1", "mov     esi, eax", "and     eax, 4", "and     esi, 1", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+var_84], esi"], ["mov~eax,[rsp+0]", "mov~esi,eax", "and~eax,0", "and~esi,0", "mov~[rsp+0],eax", "mov~[rsp+0],esi"]], [0, 0, 244, 0, 0, 2, 1, 1, 13, -1, 0.24687339989759344, ["test    r10b, r10b", "jnz     store_escape"], ["test~r10b,r10b", "jnz~FOO"]], [0, 0, 244, 0, 0, 1, 0, 1, 13, -1, 0.0056035586277521756, ["jmp     loc_1589B"], ["jmp~FOO"]], [2, 0, 244, 1, 0, 8, 2, 1, 14, -1, 0.030325140809011778, ["mov     [rsp+0F8h+orig_buffersize], r13", "add     r15, 3", "xor     eax, eax", "mov     [rsp+0F8h+encountered_single_quote], bpl", "xor     r11d, r11d", "mov     r13, rdx", "mov     ebx, 27h ; '''", "jmp     loc_1589B"], ["mov~[rsp+0],r13", "add~r15,0", "xor~eax,eax", "mov~[rsp+0],bpl", "xor~r11d,r11d", "mov~r13,rdx", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 4, 2, 1, 12, -1, 0.009927035330261137, ["xor     ebp, ebp", "xor     eax, eax", "mov     ebx, 3Fh ; '?'", "jmp     loc_1589B"], ["xor~ebp,ebp", "xor~eax,eax", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 4, 1, 1, 15, -1, 0.03701890254309609, ["mov     eax, ebp", "mov     ebx, 30h ; '0'", "xor     ebp, ebp", "jmp     loc_1589B"], ["mov~eax,ebp", "mov~ebx,0", "xor~ebp,ebp", "jmp~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 19, -1, 0.0, ["mov     byte ptr [r8+r15+1], 24h ; '$'"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 3, 0, 0, 18, -1, 0.018906810035842294, ["lea     rsi, [r15+1]", "cmp     r13, len", "jbe     short loc_15CA6"], ["lea~rsi,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort; jumptable 0000000000015641 default case"], ["call~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 10, -1, 0.019738863287250386, ["test    dl, dl", "jz      short loc_16899"], ["test~dl,dl", "jz~FOO"]], [0, 0, 12, 0, 0, 3, 1, 1, 9, -1, 0.029653097798259087, ["mov     rax, [rsp+0F8h+s2]", "test    rax, rax", "jz      short loc_16899"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 253, 0, 1, 9, 1, 2, 4, -1, 0.006515616999487967, ["lea     rsi, aInvalidSSArgum+19h; msgid", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, rax", "mov     [rsp+0F8h+quote_string], rax", "lea     rax, aInvalidSSArgum+19h; \"'\"", "cmp     rsi, rax", "jz      loc_168BA"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,rax", "mov~[rsp+0],rax", "lea~rax,<TAG>", "cmp~rsi,rax", "jz~FOO"]], [0, 0, 254, 0, 1, 5, 0, 2, 4, -1, 0.0, ["mov     esi, [rsp+0F8h+quoting_style]; s", "mov     rdi, rcx; msgid", "call    gettext_quote", "mov     [rsp+0F8h+quote_string_0], rax", "jmp     loc_15E94"], ["mov~esi,[rsp+0]", "mov~rdi,rcx", "call~FOO", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 18, -1, 0.028379416282642088, ["cmp     buffersize_0, r15", "jbe     short loc_167CE"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 17, -1, 0.0320831199863458, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     loc_1693D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 244, 1, 0, 4, 2, 0, 14, -1, 0.23159242191500257, ["xor     eax, 1", "add     i, 1", "and     eax, r11d", "mov     edx, eax"], ["xor~eax,0", "add~i,0", "and~eax,r11d", "mov~edx,eax"]], [0, 0, 252, 0, 1, 5, 0, 2, 5, -1, 0.0, ["mov     rdi, rsi; msgid", "mov     esi, [rsp+0F8h+quoting_style]; s", "call    gettext_quote", "mov     [rsp+0F8h+quote_string], rax", "jmp     loc_15EBF"], ["mov~rdi,rsi", "mov~esi,[rsp+0]", "call~FOO", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 13, -1, 0.3581669226830517, ["test    dl, dl", "jz      short loc_158D4"], ["test~dl,dl", "jz~FOO"]], [2, 0, 244, 1, 0, 5, 1, 1, 12, -1, 0.023655913978494623, ["add     i, 1", "mov     edx, r11d", "xor     ebp, ebp", "mov     ebx, 5Ch ; '\\'", "jmp     store_c"], ["add~i,0", "mov~edx,r11d", "xor~ebp,ebp", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 2, 0, 0, 10, -1, 0.0008829365079365056, ["mov     eax, 9; jumptable 000000000001585E case 9", "mov     ebx, 74h ; 't'"], ["mov~eax,0", "mov~ebx,0"]], [0, 0, 244, 0, 0, 2, 0, 0, 14, -1, 0.01282642089093702, ["cmp     buffersize_0, r15", "jbe     short loc_158BE"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 15, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [1, 0, 244, 0, 0, 3, 0, 1, 8, -1, 0.1076197943335041, ["movzx   ebx, byte ptr [r9]", "cmp     bl, 7Eh ; '~'; switch 127 cases", "ja      loc_15BF0; jumptable 00000000000160AE default case"], ["movzx~ebx,<TAG>", "cmp~bl,0", "ja~FOO"]], [0, 0, 244, 0, 0, 3, 1, 1, 7, -1, 0.13144478579962482, ["mov     rax, [rsp+0F8h+quote_string_len]", "test    rax, rax", "jz      loc_16090"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.0008829365079365056, ["mov     eax, 0Dh; jumptable 000000000001585E case 13", "mov     ebx, 72h ; 'r'", "jmp     c_and_shell_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0008541346646185337, ["mov     eax, 0Ah; jumptable 00000000000160AE case 10", "xor     r10d, r10d", "mov     ebx, 6Eh ; 'n'", "jmp     c_and_shell_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0008541346646185337, ["mov     eax, 0Dh; jumptable 00000000000160AE case 13", "xor     r10d, r10d", "mov     ebx, 72h ; 'r'", "jmp     c_and_shell_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0008541346646185337, ["mov     eax, 9; jumptable 00000000000160AE case 9", "xor     r10d, r10d", "mov     ebx, 74h ; 't'", "jmp     c_and_shell_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [r8+r15], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 0, 244, 0, 0, 2, 0, 0, 15, -1, 0.08173323092677931, ["cmp     buffersize_0, r15", "jbe     short loc_15B25"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [0, 0, 251, 0, 0, 3, 2, 1, 3, -1, 0.016244239631336404, ["xor     r15d, r15d", "test    ebx, ebx", "jz      loc_166BC"], ["xor~r15d,r15d", "test~ebx,ebx", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 15, -1, 0.012570404505888377, ["lea     rax, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_158CD"], ["lea~rax,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 250, 0, 0, 4, 1, 1, 4, -1, 0.0005120327700972862, ["mov     rax, [rsp+0F8h+quote_string_0]", "movzx   eax, byte ptr [rax]", "test    al, al", "jz      loc_15ECA"], ["mov~rax,[rsp+0]", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [r8+r15+1], 27h ; '''"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 249, 0, 0, 1, 0, 0, 5, -1, 0.0004608294930875576, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [12, 0, 244, 0, 0, 16, 1, 1, 5, -1, 0.009331797235023042, ["lea     rax, aInvalidSSArgum+19h; \"'\"", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+var_87], 1", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 1", "xor     r11d, r11d", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 0", "mov     r15d, 1", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 0", "mov     [rsp+0F8h+quote_string_len], 1", "mov     [rsp+0F8h+s2], rax", "mov     [rsp+0F8h+quoting_style], 2", "jmp     loc_15758"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r15d,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [12, 0, 245, 0, 0, 18, 3, 1, 2, -1, 2.560163850486431e-05, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000015641 case 3", "mov     [rsp+0F8h+var_87], 1", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 1", "mov     [rsp+0F8h+var_E1], 1", "mov     [rsp+0F8h+var_85], 1", "mov     [rsp+0F8h+var_E2], 0", "mov     esi, eax", "and     eax, 4", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "and     esi, 1", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+var_84], esi", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+backslash_escapes], 1", "jmp     loc_15F92"], ["mov~eax,[rsp+0]", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~esi,eax", "and~eax,0", "mov~[rsp+0],0", "and~esi,0", "mov~[rsp+0],eax", "mov~[rsp+0],0", "mov~[rsp+0],esi", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.07517665130568356, ["cmp     [rsp+0F8h+backslash_escapes], 0", "jz      loc_15B80"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.003680235535074245, ["mov     eax, 8; jumptable 000000000001585E case 8", "mov     ebx, 62h ; 'b'", "jmp     c_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.003680235535074245, ["mov     eax, 7; jumptable 000000000001585E case 7", "mov     ebx, 61h ; 'a'", "jmp     c_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.003680235535074245, ["mov     eax, 0Ch; jumptable 000000000001585E case 12", "mov     ebx, 66h ; 'f'", "jmp     c_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.003680235535074245, ["mov     eax, 0Bh; jumptable 000000000001585E case 11", "mov     ebx, 76h ; 'v'", "jmp     c_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0033371735791090634, ["mov     eax, 0Bh; jumptable 00000000000160AE case 11", "xor     r10d, r10d", "mov     ebx, 76h ; 'v'", "jmp     c_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0033371735791090634, ["mov     eax, 8; jumptable 00000000000160AE case 8", "xor     r10d, r10d", "mov     ebx, 62h ; 'b'", "jmp     c_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0033371735791090634, ["mov     eax, 7; jumptable 00000000000160AE case 7", "xor     r10d, r10d", "mov     ebx, 61h ; 'a'", "jmp     c_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [10, 0, 244, 0, 0, 15, 0, 1, 6, -1, 0.023169482846902203, ["lea     rsi, aInvalidSSArgum+19h; \"'\"", "mov     byte ptr [r14], 27h ; '''", "mov     [rsp+0F8h+quoting_style], 2", "mov     r15d, 1", "mov     [rsp+0F8h+quote_string_len], 1", "mov     [rsp+0F8h+c_and_shell_quote_compat], 0", "mov     [rsp+0F8h+s2], rsi", "mov     [rsp+0F8h+var_E2], 0", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E1], 1", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_87], 1", "mov     [rsp+0F8h+encountered_single_quote], al", "mov     [rsp+0F8h+orig_buffersize], rdx", "jmp     loc_15758"], ["lea~rsi,<TAG>", "mov~<TAG>,0", "mov~[rsp+0],0", "mov~r15d,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rsi", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],al", "mov~[rsp+0],rdx", "jmp~FOO"]], [1, 0, 244, 0, 0, 6, 3, 1, 5, -1, 8.960573476702509e-05, ["mov     [rsp+0F8h+orig_buffersize], buffersize_0", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "xor     eax, eax", "xor     r11d, r11d", "xor     edx, edx", "jmp     loc_16280"], ["mov~[rsp+0],buffersize_0", "mov~[rsp+0],0", "xor~eax,eax", "xor~r11d,r11d", "xor~edx,edx", "jmp~FOO"]], [1, 0, 244, 1, 0, 2, 1, 0, 16, -1, 0.012314388120839733, ["add     r15, 2", "xor     r11d, r11d"], ["add~r15,0", "xor~r11d,r11d"]], [0, 0, 244, 0, 0, 1, 1, 0, 12, -1, 0.068868407578085, ["xor     ebp, ebp"], ["xor~ebp,ebp"]], [1, 0, 6, 0, 0, 3, 0, 1, 7, -1, 0.006067588325652842, ["mov     [rsp+0F8h+var_E1], al", "mov     [rsp+0F8h+quoting_style], 2", "jmp     force_outer_quoting_style"], ["mov~[rsp+0],al", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 14, -1, 0.483115719406042, ["cmp     r15, r13", "jnb     short loc_158DD"], ["cmp~r15,r13", "jnb~FOO"]], [2, 0, 244, 2, 0, 3, 0, 1, 16, -1, 0.08147721454173067, ["add     r15, 1", "add     i, 1", "jmp     loc_158D4"], ["add~r15,0", "add~i,0", "jmp~FOO"]], [0, 0, 244, 0, 0, 1, 0, 0, 15, -1, 0.0, ["mov     [r8+r15], bl"], ["mov~<TAG>,bl"]], [1, 0, 244, 0, 0, 2, 0, 1, 13, -1, 0.09182881037719748, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     loc_16540"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.019667712066905547, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jz      loc_159E5"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 10, -1, 0.03003637566137559, ["cmp     [rsp+0F8h+quoting_style], 2; jumptable 000000000001585E case 92", "jz      loc_162D8"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 19, -1, 0.04832309267793139, ["lea     rdx, [r15+2]", "cmp     r13, len", "jbe     short loc_15CF5"], ["lea~rdx,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 4, 2, 1, 14, -1, 0.08275729646697388, ["mov     eax, r11d", "xor     eax, 1", "and     al, [rsp+0F8h+var_E1]", "jz      short loc_15B1B"], ["mov~eax,r11d", "xor~eax,0", "and~al,[rsp+0]", "jz~FOO"]], [1, 0, 244, 1, 0, 2, 0, 0, 20, -1, 0.03828725038402458, ["movzx   ebx, byte ptr [rdi+r12]", "add     r15, 1"], ["movzx~ebx,<TAG>", "add~r15,0"]], [0, 0, 244, 0, 0, 2, 0, 0, 15, -1, 0.019162826420890938, ["cmp     buffersize_0, r15", "jbe     short loc_15AF6"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [3, 0, 244, 1, 0, 5, 1, 0, 20, -1, 0.0, ["mov     edx, ebx", "shr     dl, 3", "and     edx, 7", "add     edx, 30h ; '0'", "mov     [r8+r15+2], dl"], ["mov~edx,ebx", "shr~dl,0", "and~edx,0", "add~edx,0", "mov~[r8+0],dl"]], [1, 0, 244, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 247, 0, 0, 2, 1, 1, 3, -1, 0.0001152073732718894, ["test    buffersize_0, buffersize_0", "jz      loc_165BF"], ["test~buffersize_0,buffersize_0", "jz~FOO"]], [0, 0, 249, 0, 0, 2, 0, 0, 6, -1, 0.003533026113671275, ["cmp     buffersize_0, r15", "jbe     short loc_166D9"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 18, -1, 0.0, ["mov     byte ptr [r8+len], 30h ; '0'"], ["mov~<TAG>,0"]], [0, 0, 244, 0, 0, 2, 0, 0, 17, -1, 0.01282642089093702, ["cmp     buffersize_0, len", "jbe     short loc_166FA"], ["cmp~buffersize_0,len", "jbe~FOO"]], [2, 0, 244, 1, 0, 7, 1, 1, 15, -1, 0.48285970302099335, ["movzx   edi, [rsp+0F8h+all_c_and_shell_quote_compat]", "add     r15, 1", "mov     eax, 0", "test    bpl, bpl", "cmovz   edi, eax", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], dil", "jmp     loc_15768"], ["movzx~edi,[rsp+0]", "add~r15,0", "mov~eax,0", "test~bpl,bpl", "cmovz~edi,eax", "mov~[rsp+0],dil", "jmp~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.03236185782556752, ["xor     r10d, r10d; jumptable 00000000000160AE case 0"], ["xor~r10d,r10d"]], [0, 0, 244, 0, 0, 3, 0, 0, 16, -1, 0.018906810035842294, ["lea     rdx, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_15B05"], ["lea~rdx,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 244, 1, 0, 5, 0, 1, 17, -1, 0.013031233998975935, ["mov     rcx, [rsp+0F8h+arg]", "lea     bytes, [rcx+r15+1]", "add     rcx, bytes", "lea     r8, [rcx+r15]", "jmp     short loc_164F5"], ["mov~rcx,[rsp+0]", "lea~bytes,[rcx+0]", "add~rcx,bytes", "lea~r8,<TAG>", "jmp~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 17, -1, 0.0, ["mov     byte ptr [r8+r15+1], 24h ; '$'"], ["mov~[yte ptr [r8+0],0"]], [1, 0, 244, 0, 0, 2, 0, 1, 10, -1, 0.05108305598224971, ["cmp     [rsp+0F8h+backslash_escapes], 0; jumptable 000000000001585E case 0", "jnz     loc_160FB"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 244, 0, 0, 2, 1, 0, 10, -1, 7.680491551459293e-05, ["xor     r10d, r10d; jumptable 00000000000160AE cases 35,126", "nop     dword ptr [rax+rax+00h]"], ["xor~r10d,r10d", "nop~[word ptr [rax+0]"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.032954962450930214, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     short loc_162E3"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 10, -1, 0.042043544120157116, ["cmp     [rsp+0F8h+quoting_style], 2; jumptable 000000000001585E case 39", "jz      loc_16300"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 244, 0, 0, 12, 1, 0, 11, -1, 0.07342549923195084, ["lea     rax, [rsp+0F8h+w]", "xor     esi, esi", "mov     [rsp+0F8h+c], bl", "mov     [rsp+0F8h+var_6B], r11b", "mov     c_0, rsi", "mov     [rsp+0F8h+var_60], r9", "mov     [rsp+0F8h+pwc], rax", "mov     [rsp+0F8h+var_69], r10b", "mov     [rsp+0F8h+var_68], r15", "mov     [rsp+0F8h+var_80], r8", "mov     [rsp+0F8h+buffersize], buffersize_0", "mov     [rsp+0F8h+pending_shell_escape_end], r14"], ["lea~rax,[rsp+0]", "xor~esi,esi", "mov~[rsp+0],bl", "mov~[rsp+0],r11b", "mov~c_0,rsi", "mov~[rsp+0],r9", "mov~[rsp+0],rax", "mov~[rsp+0],r10b", "mov~[rsp+0],r15", "mov~[rsp+0],r8", "mov~[rsp+0],buffersize_0", "mov~[rsp+0],r14"]], [0, 0, 244, 0, 0, 2, 1, 1, 12, -1, 0.03147721454173067, ["test    buffersize_0, buffersize_0", "jz      loc_16567"], ["test~buffersize_0,buffersize_0", "jz~FOO"]], [0, 0, 244, 0, 0, 1, 0, 1, 12, -1, 0.0005120327700972862, ["jmp     short loc_15908; jumptable 000000000001585E cases 35,126"], ["jmp~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 17, -1, 0.01865079365079365, ["lea     len, [r15+2]", "cmp     buffersize_0, len", "jbe     short loc_15B14"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 18, -1, 0.0, ["mov     byte ptr [r8+r15+2], 27h ; '''"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 2, 0, 0, 19, -1, 0.03854326676907322, ["cmp     r13, r15", "jbe     short loc_15D17"], ["cmp~r13,r15", "jbe~FOO"]], [1, 0, 244, 1, 0, 4, 2, 1, 20, -1, 0.012314388120839733, ["add     r15, 2", "xor     r10d, r10d", "xor     r11d, r11d", "jmp     short loc_15D0E"], ["add~r15,0", "xor~r10d,r10d", "xor~r11d,r11d", "jmp~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 18, -1, 0.013325652841781874, ["xor     r10d, r10d", "jmp     loc_15D0E"], ["xor~r10d,r10d", "jmp~FOO"]], [0, 0, 244, 0, 0, 1, 0, 0, 20, -1, 0.0, ["mov     [r8+r15], bl"], ["mov~<TAG>,bl"]], [0, 0, 244, 0, 0, 2, 1, 1, 11, -1, 0.012442396313364055, ["test    al, al", "jnz     short loc_15911"], ["test~al,al", "jnz~FOO"]], [1, 0, 244, 1, 0, 2, 0, 0, 18, -1, 0.018394777265745007, ["add     r15, 3", "mov     r11d, eax"], ["add~r15,0", "mov~r11d,eax"]], [1, 0, 244, 0, 0, 1, 0, 0, 14, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.00015360983102918587, ["xor     r10d, r10d; jumptable 00000000000160AE cases 123,125"], ["xor~r10d,r10d"]], [9, 0, 245, 0, 0, 10, 1, 0, 4, -1, 0.0015873015873015873, ["mov     byte ptr [buffer], 22h ; '\"'", "mov     [rsp+0F8h+var_87], 0", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 1", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0"], ["mov~<TAG>,0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [0, 0, 244, 0, 0, 3, 0, 0, 14, -1, 0.018906810035842294, ["lea     rdx, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_1612E"], ["lea~rdx,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 13, 0, 0, 2, 0, 1, 11, -1, 0.0002944188428059396, ["movzx   edx, [rsp+0F8h+encountered_single_quote]", "jmp     loc_16866"], ["movzx~edx,[rsp+0]", "jmp~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 15, -1, 0.0, ["mov     byte ptr [r8+r15+1], 24h ; '$'"], ["mov~[yte ptr [r8+0],0"]], [2, 0, 244, 0, 0, 4, 0, 1, 10, -1, 0.012698412698412698, ["cmp     argsize_0, 1; jumptable 000000000001585E cases 123,125", "setnz   al", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_1593C"], ["cmp~argsize_0,0", "setnz~al", "cmp~argsize_0,0", "jnz~FOO"]], [1, 0, 244, 0, 0, 5, 3, 1, 15, -1, 0.130094726062468, ["mov     edx, esi", "xor     edx, 1", "and     edx, r11d", "test    r10b, r10b", "jz      short loc_15D43"], ["mov~edx,esi", "xor~edx,0", "and~edx,r11d", "test~r10b,r10b", "jz~FOO"]], [2, 0, 249, 0, 0, 8, 3, 1, 2, 1, 0.00010240655401945725, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000015641 case 2", "mov     ecx, eax", "and     eax, 4", "and     ecx, 1", "test    ebx, ebx", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+var_84], ecx", "jz      loc_16975"], ["mov~eax,[rsp+0]", "mov~ecx,eax", "and~eax,0", "and~ecx,0", "test~ebx,ebx", "mov~[rsp+0],eax", "mov~[rsp+0],ecx", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 15, -1, 0.01865079365079365, ["lea     len, [r15+2]", "cmp     buffersize_0, len", "jbe     short loc_1613D"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [r8+r15+2], 27h ; '''"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 2, 0, 0, 16, -1, 0.006438812083973375, ["cmp     r13, r15", "jbe     short loc_15D3F"], ["cmp~r13,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 3, 0, 0, 11, -1, 0.0, ["mov     rax, [rsp+0F8h+arg]", "cmp     byte ptr [rax+1], 0", "setnz   al"], ["mov~rax,[rsp+0]", "cmp~[yte ptr [rax+0],0", "setnz~al"]], [1, 0, 244, 0, 0, 1, 0, 0, 17, -1, 0.0, ["mov     byte ptr [r8+r15], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [1, 0, 244, 1, 0, 1, 0, 0, 17, -1, 0.006182795698924731, ["add     r15, 1"], ["add~r15,0"]], [0, 0, 244, 0, 0, 2, 0, 0, 16, -1, 0.018394777265745007, ["lea     len, [r15+3]", "mov     r11d, eax"], ["lea~len,[r15+0]", "mov~r11d,eax"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.011404783239460672, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     short loc_162E3"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.07144062553336737, ["mov     eax, [rsp+0F8h+quoting_style]; jumptable 000000000001585E case 63", "cmp     eax, 2", "jz      loc_16340"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 14, -1, 0.005692097627581499, ["mov     c_and_shell_quote_compat_0, argsize_0", "mov     argsize_0, r8", "jmp     force_outer_quoting_style"], ["mov~c_and_shell_quote_compat_0,argsize_0", "mov~argsize_0,r8", "jmp~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 13, -1, 0.06386222051544631, ["cmp     buffersize_0, len", "jbe     short loc_1614E"], ["cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.0008960573476702509, ["xor     r10d, r10d; jumptable 00000000000160AE case 63"], ["xor~r10d,r10d"]], [1, 0, 244, 0, 0, 1, 0, 0, 14, -1, 0.0, ["mov     byte ptr [r8+len], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 0, 6, 0, 0, 5, 0, 1, 12, -1, 0.0007978110599078342, ["movzx   eax, [rsp+0F8h+c_and_shell_quote_compat]", "mov     rbp, argsize_0", "mov     argsize_0, r8", "mov     [rsp+0F8h+var_E1], al", "jmp     force_outer_quoting_style"], ["movzx~eax,[rsp+0]", "mov~rbp,argsize_0", "mov~argsize_0,r8", "mov~[rsp+0],al", "jmp~FOO"]], [1, 0, 6, 0, 0, 7, 0, 1, 20, -1, 0.0005376344086021505, ["movzx   eax, [rsp+0F8h+var_88]", "mov     bytes, [rsp+0F8h+var_80]", "mov     r13, [rsp+0F8h+buffersize]", "mov     printable, [rsp+0F8h+pending_shell_escape_end]", "mov     [rsp+0F8h+quoting_style], 2", "mov     [rsp+0F8h+var_E1], al", "jmp     force_outer_quoting_style"], ["movzx~eax,[rsp+0]", "mov~bytes,[rsp+0]", "mov~r13,[rsp+0]", "mov~printable,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],al", "jmp~FOO"]], [0, 0, 6, 0, 0, 5, 0, 1, 12, -1, 0.0040697004608294925, ["movzx   eax, [rsp+0F8h+c_and_shell_quote_compat]", "mov     rbp, argsize_0", "mov     argsize_0, r8", "mov     [rsp+0F8h+backslash_escapes], al", "jmp     force_outer_quoting_style"], ["movzx~eax,[rsp+0]", "mov~rbp,argsize_0", "mov~argsize_0,r8", "mov~[rsp+0],al", "jmp~FOO"]], [4, 0, 244, 0, 0, 7, 0, 0, 5, -1, 0.009370199692780337, ["lea     rax, unk_2111B", "mov     [rsp+0F8h+c_and_shell_quote_compat], 0", "mov     [rsp+0F8h+backslash_escapes], 1", "mov     [rsp+0F8h+quote_string_len], 1", "mov     r15d, 1", "mov     [rsp+0F8h+s2], rax", "nop     dword ptr [rax+rax+00h]"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r15d,0", "mov~[rsp+0],rax", "nop~[word ptr [rax+0]"]], [8, 0, 245, 0, 0, 10, 1, 1, 4, -1, 0.0015873015873015873, ["mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+var_87], 0", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 1", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+encountered_single_quote], 0", "jmp     loc_1572B"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 249, 0, 0, 1, 0, 0, 7, -1, 0.0, ["mov     [buffer+r15], al"], ["mov~<TAG>,al"]], [1, 0, 244, 0, 0, 3, 0, 1, 14, -1, 0.06360620413039766, ["cmp     [rsp+0F8h+quoting_style], 2", "lea     r15, [len+1]", "jz      loc_165A0"], ["cmp~[rsp+0],0", "lea~r15,[len+0]", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 20, -1, 0.027867383512544804, ["lea     len, [r15+2]", "cmp     buffersize_0, len", "jbe     short loc_167EC"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 19, -1, 0.028123399897593444, ["lea     rax, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_167DD"], ["lea~rax,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 20, -1, 0.0, ["mov     byte ptr [r8+r15+1], 22h ; '\"'"], ["mov~[yte ptr [r8+0],0"]], [1, 0, 244, 0, 0, 4, 0, 1, 16, -1, 0.007648489503328213, ["mov     rdx, buffersize_0", "mov     byte ptr [r8+r15+2], 27h ; '''", "mov     buffersize_0, [rsp+0F8h+orig_buffersize]", "jmp     loc_1631E"], ["mov~rdx,buffersize_0", "mov~[yte ptr [r8+0],0", "mov~buffersize_0,[rsp+0]", "jmp~FOO"]], [0, 0, 244, 0, 0, 3, 0, 1, 16, -1, 0.007648489503328213, ["mov     rdx, buffersize_0", "mov     buffersize_0, [rsp+0F8h+orig_buffersize]", "jmp     loc_1631E"], ["mov~rdx,buffersize_0", "mov~buffersize_0,[rsp+0]", "jmp~FOO"]], [1, 0, 244, 0, 0, 3, 1, 1, 13, -1, 0.00902457757296467, ["xor     edx, edx", "cmp     [rsp+0F8h+orig_buffersize], 0", "jnz     loc_16567"], ["xor~edx,edx", "cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.05666922683051715, ["cmp     eax, 5", "jnz     short loc_15988"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 19, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 244, 0, 0, 4, 1, 0, 3, -1, 0.13227086533538146, ["mov     r8, r14", "xor     r12d, r12d", "mov     r14, argsize_0", "nop     dword ptr [rax+00000000h]"], ["mov~r8,r14", "xor~r12d,r12d", "mov~r14,argsize_0", "nop~[word ptr [rax+0]"]], [14, 0, 244, 0, 0, 23, 4, 1, 2, -1, 0.0020737327188940094, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000015641 case 6", "mov     [rsp+0F8h+var_87], 0", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "xor     r15d, r15d", "mov     [rsp+0F8h+var_85], 1", "mov     [rsp+0F8h+var_E2], 1", "mov     ecx, eax", "and     eax, 4", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+var_70], eax", "lea     rax, unk_2111B", "and     ecx, 1", "mov     [rsp+0F8h+var_84], ecx", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+backslash_escapes], 1", "mov     [rsp+0F8h+quote_string_len], 1", "mov     [rsp+0F8h+s2], rax", "mov     [rsp+0F8h+quoting_style], 5", "jmp     loc_15758"], ["mov~eax,[rsp+0]", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~ecx,eax", "and~eax,0", "mov~[rsp+0],0", "mov~[rsp+0],eax", "lea~rax,<TAG>", "and~ecx,0", "mov~[rsp+0],ecx", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [10, 0, 244, 0, 1, 25, 4, 2, 4, -1, 0.03748079877112135, ["mov     r12, [rsp+0F8h+quote_string]", "test    ebx, ebx", "setnz   [rsp+0F8h+var_85]", "movzx   ebx, [rsp+0F8h+var_85]", "mov     rdi, r12; s", "call    _strlen", "mov     [rsp+0F8h+quote_string_len], rax", "mov     eax, [rsp+0F8h+flags]", "xor     r11d, r11d", "mov     [rsp+0F8h+c_and_shell_quote_compat], bl", "mov     [rsp+0F8h+s2], r12", "mov     [rsp+0F8h+var_87], 0", "mov     [rsp+0F8h+var_88], 0", "mov     ecx, eax", "and     eax, 4", "mov     [rsp+0F8h+var_E1], 0", "and     ecx, 1", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+var_E2], 1", "mov     [rsp+0F8h+var_84], ecx", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+backslash_escapes], 1", "jmp     loc_15758"], ["mov~r12,[rsp+0]", "test~ebx,ebx", "setnz~[rsp+0]", "movzx~ebx,[rsp+0]", "mov~rdi,r12", "call~FOO", "mov~[rsp+0],rax", "mov~eax,[rsp+0]", "xor~r11d,r11d", "mov~[rsp+0],bl", "mov~[rsp+0],r12", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~ecx,eax", "and~eax,0", "mov~[rsp+0],0", "and~ecx,0", "mov~[rsp+0],eax", "mov~[rsp+0],0", "mov~[rsp+0],ecx", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 244, 0, 0, 6, 1, 1, 3, -1, 0.012480798771121352, ["lea     rax, aInvalidSSArgum+19h; \"'\"", "mov     [rsp+0F8h+quote_string_len], 1", "xor     r15d, r15d", "mov     [rsp+0F8h+quoting_style], 2", "mov     [rsp+0F8h+s2], rax", "jmp     loc_15758"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [11, 0, 244, 0, 0, 16, 2, 1, 3, -1, 0.0031105990783410137, ["lea     rax, aInvalidSSArgum+19h; \"'\"", "mov     [rsp+0F8h+var_87], 1", "mov     [rsp+0F8h+var_88], 1", "mov     [rsp+0F8h+var_E1], 1", "mov     [rsp+0F8h+var_85], 0", "xor     r11d, r11d", "mov     [rsp+0F8h+var_E2], 0", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "xor     r15d, r15d", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+backslash_escapes], 0", "mov     [rsp+0F8h+quote_string_len], 1", "mov     [rsp+0F8h+s2], rax", "jmp     loc_15758"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 244, 0, 0, 3, 1, 1, 12, -1, 0.050388291517323776, ["mov     eax, [rsp+0F8h+var_70]", "test    eax, eax", "jz      short loc_15988"], ["mov~eax,[rsp+0]", "test~eax,eax", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 19, -1, 0.012570404505888377, ["lea     rdx, [r15+1]", "cmp     r13, len", "jbe     short loc_15D71"], ["lea~rdx,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 13, -1, 0.019175627240143368, ["cmp     buffersize_0, r15", "jbe     short loc_16571"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 20, -1, 0.0, ["mov     byte ptr [r8+r15+1], 27h ; '''"], ["mov~[yte ptr [r8+0],0"]], [1, 0, 244, 0, 0, 1, 0, 0, 14, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 244, 0, 0, 3, 0, 0, 13, -1, 0.047405700631507085, ["lea     rdx, [i+2]", "cmp     rdx, argsize_0", "jnb     short loc_15988"], ["lea~rdx,[i+0]", "cmp~rdx,argsize_0", "jnb~FOO"]], [1, 0, 244, 0, 0, 4, 0, 1, 4, -1, 0.6334485407066052, ["cmp     argsize_0, i", "setnz   bpl", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_15783"], ["cmp~argsize_0,i", "setnz~bpl", "cmp~argsize_0,0", "jnz~FOO"]], [2, 0, 244, 0, 0, 5, 0, 1, 10, -1, 0.07368151561699948, ["lea     rax, [rsp+0F8h+mbstate]", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "mov     qword ptr [rsp+0F8h+mbstate.__count], 0", "mov     [rsp+0F8h+ps], rax", "jnz     short loc_163B4"], ["lea~rax,[rsp+0]", "cmp~argsize_0,0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],rax", "jnz~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 14, -1, 0.018919610855094728, ["lea     rax, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_16580"], ["lea~rax,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 15, -1, 0.0, ["mov     byte ptr [r8+r15+1], 5Ch ; '\\'"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 1, 0, 0, 12, -1, 0.0006539085168117425, ["nop     dword ptr [c_0+00h]"], ["nop~[word ptr [c_0+0]"]], [1, 0, 244, 0, 0, 3, 0, 1, 14, -1, 0.044410308926437964, ["mov     rax, [rsp+0F8h+arg]", "cmp     byte ptr [rax+i+1], 3Fh ; '?'", "jz      loc_16798"], ["mov~rax,[rsp+0]", "cmp~[yte ptr [rax+0],0", "jz~FOO"]], [1, 0, 244, 0, 0, 3, 0, 0, 5, -1, 0.0, ["mov     rax, [rsp+0F8h+arg]", "cmp     byte ptr [rax+i], 0", "setnz   bpl"], ["mov~rax,[rsp+0]", "cmp~<TAG>,0", "setnz~bpl"]], [0, 0, 244, 0, 0, 1, 0, 0, 15, -1, 0.0014400921658986176, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 244, 0, 0, 3, 2, 0, 12, -1, 0.006706135859361665, ["mov     ebx, eax", "xor     ebp, ebp", "xor     eax, eax"], ["mov~ebx,eax", "xor~ebp,ebp", "xor~eax,eax"]], [0, 0, 244, 0, 0, 3, 0, 0, 15, -1, 0.018663594470046084, ["lea     len, [r15+2]", "cmp     buffersize_0, len", "jbe     loc_1694D"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [10, 0, 245, 0, 0, 11, 1, 0, 3, -1, 0.006259600614439324, ["mov     [rsp+0F8h+var_87], 1", "mov     [rsp+0F8h+var_88], 1", "xor     r11d, r11d", "mov     [rsp+0F8h+var_E1], 1", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 0", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+backslash_escapes], 0"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.0005120327700972862, ["xor     r10d, r10d; jumptable 00000000000160AE case 39"], ["xor~r10d,r10d"]], [0, 0, 244, 0, 1, 11, 0, 1, 11, -1, 0.0, ["mov     rdi, [rsp+0F8h+arg]; s", "mov     [rsp+0F8h+buffersize], r8", "mov     byte ptr [rsp+0F8h+var_80], r11b", "mov     byte ptr [rsp+0F8h+pwc], r10b", "mov     [rsp+0F8h+pending_shell_escape_end], r9", "call    _strlen", "movzx   r11d, byte ptr [rsp+0F8h+var_80]", "movzx   r10d, byte ptr [rsp+0F8h+pwc]", "mov     argsize_0, rax", "mov     r8, [rsp+0F8h+buffersize]", "mov     r9, [rsp+0F8h+pending_shell_escape_end]"], ["mov~rdi,[rsp+0]", "mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[yte ptr [rsp+0],r10b", "mov~[rsp+0],r9", "call~FOO", "movzx~r11d,[yte ptr [rsp+0]", "movzx~r10d,[yte ptr [rsp+0]", "mov~argsize_0,rax", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 11, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 244, 0, 0, 2, 1, 0, 9, -1, 0.0024193548387096775, ["xor     r10d, r10d; jumptable 00000000000160AE default case", "nop     dword ptr [rax+rax+00h]"], ["xor~r10d,r10d", "nop~[word ptr [rax+0]"]], [1, 0, 244, 0, 0, 3, 0, 1, 8, -1, 0.0204583760027308, ["cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "lea     rbx, [i+rax]", "jnz     short loc_157E5"], ["cmp~argsize_0,0", "lea~rbx,<TAG>", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 0, 9, -1, 0.0032258064516129032, ["cmp     rax, 1", "jbe     short loc_157E5"], ["cmp~rax,0", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 21, -1, 0.0, ["mov     byte ptr [r8+r15+2], 22h ; '\"'"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.001856118791602663, ["xor     r10d, r10d; jumptable 00000000000160AE case 92"], ["xor~r10d,r10d"]], [1, 0, 244, 0, 0, 1, 0, 0, 19, -1, 0.0, ["mov     byte ptr [r8+r15], 3Fh ; '?'"], ["mov~<TAG>,0"]], [0, 0, 244, 0, 1, 8, 0, 1, 10, -1, 0.0, ["mov     [rsp+0F8h+pwc], r8", "mov     byte ptr [rsp+0F8h+pending_shell_escape_end], r11b", "mov     [rsp+0F8h+ps], r9", "call    _strlen", "movzx   r11d, byte ptr [rsp+0F8h+pending_shell_escape_end]", "mov     r8, [rsp+0F8h+pwc]", "mov     argsize_0, rax", "mov     r9, [rsp+0F8h+ps]"], ["mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[rsp+0],r9", "call~FOO", "movzx~r11d,[yte ptr [rsp+0]", "mov~r8,[rsp+0]", "mov~argsize_0,rax", "mov~r9,[rsp+0]"]]], "func_feature": [17, 152, 176, 15, 281, 448, 49, 1104, 0.03791, 7, 41], "succs": [[2], [0, 193, 198, 168, 169, 10, 44, 77, 271, 232, 274, 213, 278, 151, 152, 153, 170], [7], [2, 229, 164, 165, 166, 71, 8, 9, 167, 46, 145, 181, 150, 218, 200, 85, 197], [90], [4, 6], [4], [26, 85], [91, 7], [7], [7], [163], [11, 13], [144, 11], [95], [14, 95], [], [16, 273], [182], [18, 182], [249], [32, 162, 70, 73, 76, 20, 250, 220, 126], [49, 29], [49, 22], [248, 255], [24, 208], [51], [26, 163], [21, 134], [236, 39], [260], [264, 30], [249], [175, 47], [33, 103], [40, 54], [35, 55], [140, 92], [92, 37], [48], [83, 43], [251], [41, 189], [59, 53], [163], [56], [45, 261], [67, 61], [3, 46], [48], [101], [50, 101], [57, 84], [52], [52], [52], [90, 68], [56], [75, 60], [58, 86], [58, 75], [136, 69], [206], [176, 62], [111], [64, 66], [64], [136], [84], [125, 87], [74, 270], [27], [249], [72, 188], [78], [53], [114, 156], [85], [161, 172], [78], [36, 55], [80, 195], [80, 100], [80, 81], [97], [90], [53], [216, 98], [118, 231], [88, 236], [108, 109], [90], [90], [90], [90], [90], [112, 236], [96, 219], [171], [82, 235], [82, 99], [17], [101], [49, 149], [105, 106], [104, 121], [104, 122], [104, 123], [120, 127], [128, 108], [19], [19, 110], [117, 111], [25, 143], [137, 138], [116, 94], [94, 191], [133, 119], [212, 215], [133], [179, 127], [123], [121], [17, 124], [17], [17], [270], [179, 141], [127], [127], [127], [127], [65], [65, 132], [], [123, 107], [123, 135], [156, 142], [137], [242, 279], [139, 102], [143], [156], [176, 146], [143], [27], [147, 157], [157], [1, 274], [275, 148], [27], [27], [27], [27], [177], [177, 154], [251, 158], [173, 159], [160, 251], [173], [189], [249], [252], [268, 174], [163], [163], [163], [163], [163], [163], [163], [249], [171], [176], [179], [51], [192, 178], [176], [192], [230, 183], [144, 234], [12, 180], [186, 63], [185, 155], [97], [194, 187], [63], [194], [238, 214], [42, 239], [15], [190, 15], [260], [89], [204, 196], [100], [204], [89, 31], [8], [202, 234], [93, 199], [36], [256, 246], [8], [211, 205], [211], [184, 209], [206], [206], [184], [91, 203], [155], [215], [218], [237], [217, 221], [136], [221], [224, 210], [113, 223], [253, 79], [227, 222], [227], [225, 226], [210], [226], [113], [231], [130, 234], [228, 247], [51], [240, 233], [229], [240], [51], [51], [51], [249], [237], [42], [115, 131], [5, 277], [241, 243], [241], [129], [129], [256, 129], [92, 254], [255], [260], [249], [249], [249], [249], [259, 92], [257, 207], [258, 262], [207], [262], [265, 92], [266, 34], [272, 201], [269, 263], [269], [268], [267, 38], [34], [92], [109], [244, 245], [252], [200], [201], [], [46], [276, 23], [280, 23], [5], [181], [242], [23]], "fname": "quotearg_buffer_restyled", "n_num": 281}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 0, 0, 2, 18, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, o", "call    ___errno_location", "mov     r12d, [p]", "mov     rbp, p", "lea     p, default_quoting_options", "test    o, o", "mov     esi, 38h ; '8'; s", "cmovz   o, p", "mov     rdi, rbx; p", "call    xmemdup", "mov     [rbp+0], r12d", "pop     rbx", "pop     rbp", "pop     e", "retn"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,o", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,p", "lea~p,<TAG>", "test~o,o", "mov~esi,0", "cmovz~o,p", "mov~rdi,rbx", "call~FOO", "mov~[rbp+0],r12d", "pop~rbx", "pop~rbp", "pop~e", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 2, 18, 0.0, 1, 0], "succs": [[]], "fname": "clone_quoting_options", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     eax, [rdi]", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~eax,<TAG>", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 4, 5, 0.0, 1, 0], "succs": [[]], "fname": "get_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     [rdi], esi", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~<TAG>,esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 8, 5, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[4, 0, 0, 1, 0, 19, 6, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    p, p", "mov     ecx, esi", "cmovz   p, rax", "mov     eax, esi", "and     ecx, 1Fh", "shr     al, 5", "movzx   eax, al", "lea     p, [p+rax*4+8]", "mov     esi, [p]", "mov     eax, esi", "shr     eax, cl", "xor     edx, eax", "and     eax, 1", "and     edx, 1", "shl     edx, cl", "xor     edx, esi", "mov     [p], edx", "retn"], ["lea~rax,<TAG>", "test~p,p", "mov~ecx,esi", "cmovz~p,rax", "mov~eax,esi", "and~ecx,0", "shr~al,0", "movzx~eax,al", "lea~p,[p+0]", "mov~esi,<TAG>", "mov~eax,esi", "shr~eax,cl", "xor~edx,eax", "and~eax,0", "and~edx,0", "shl~edx,cl", "xor~edx,esi", "mov~<TAG>,edx", "retn"]]], "func_feature": [0, 6, 0, 0, 1, 0, 3, 19, 0.0, 1, 1], "succs": [[]], "fname": "set_char_quoting", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0.0, ["lea     r, default_quoting_options", "test    o, o", "cmovz   o, r", "mov     eax, [o+4]", "mov     [o+4], esi", "retn"], ["lea~r,<TAG>", "test~o,o", "cmovz~o,r", "mov~eax,[o+0]", "mov~[o+0],esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 6, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_flags", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 0, 1, 1, 2, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]], [1, 0, 3, 0, 0, 6, 2, 1, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "test    left_quote, left_quote", "mov     dword ptr [o], 0Ah", "jz      short loc_16A97"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "test~left_quote,left_quote", "mov~<TAG>,0", "jz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, 0, 0.16666666666666666, ["test    right_quote, right_quote", "jz      short loc_16A97"], ["test~right_quote,right_quote", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["mov     [o+28h], left_quote", "mov     [o+30h], right_quote", "retn"], ["mov~[o+0],left_quote", "mov~[o+0],right_quote", "retn"]]], "func_feature": [1, 3, 3, 0, 4, 4, 0, 13, 0.04167, 1, 1], "succs": [[], [0, 2], [0, 3], []], "fname": "set_custom_quoting", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[3, 0, 0, 3, 2, 39, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "lea     r, default_quoting_options", "push    r13", "push    r12", "mov     r13, buffer", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, buffersize", "mov     r15, arg", "sub     rsp, 18h", "test    o, o", "cmovz   rbx, r", "mov     [rsp+48h+argsize], argsize_0", "call    ___errno_location", "mov     r12d, [r]", "mov     rbp, r", "lea     r, [p+8]", "sub     rsp, 8", "mov     r9d, [p+4]; flags", "push    qword ptr [p+30h]; right_quote", "mov     r8d, [p]; quoting_style", "push    qword ptr [p+28h]; left_quote", "mov     rdx, arg; arg", "push    r; quote_these_too", "mov     rcx, [rsp+68h+argsize]; argsize", "mov     rsi, buffersize; buffersize", "mov     rdi, buffer; buffer", "call    quotearg_buffer_restyled", "mov     [rbp+0], r12d", "add     rsp, 38h", "pop     p", "pop     rbp", "pop     e", "pop     buffer", "pop     buffersize", "pop     arg", "retn"], ["push~r15", "push~r14", "lea~r,<TAG>", "push~r13", "push~r12", "mov~r13,buffer", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,buffersize", "mov~r15,arg", "sub~rsp,0", "test~o,o", "cmovz~rbx,r", "mov~[rsp+0],argsize_0", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,r", "lea~r,[p+0]", "sub~rsp,0", "mov~r9d,[p+0]", "push~[word ptr [p+0]", "mov~r8d,<TAG>", "push~[word ptr [p+0]", "mov~rdx,arg", "push~r", "mov~rcx,[rsp+0]", "mov~rsi,buffersize", "mov~rdi,buffer", "call~FOO", "mov~[rbp+0],r12d", "add~rsp,0", "pop~p", "pop~rbp", "pop~e", "pop~buffer", "pop~buffersize", "pop~arg", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 6, 39, 0.0, 1, 3], "succs": [[]], "fname": "quotearg_buffer", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[4, 2, 0, 5, 4, 61, 4, 4, 0, 0, 0.0, ["push    r15", "push    r14", "lea     rax, default_quoting_options", "push    r13", "push    r12", "mov     r14, arg", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r15, argsize", "sub     rsp, 28h", "test    o, o", "cmovz   rbx, rax", "call    ___errno_location", "mov     r11d, [rax]", "mov     ebp, [rbx+4]", "lea     r10, [rbx+8]", "sub     rsp, 8", "mov     r8d, [rbx]; quoting_style", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "xor     esi, esi; buffersize", "xor     edi, edi; buffer", "mov     [rsp+60h+var_3C], r11d", "or      ebp, 1", "push    qword ptr [rbx+30h]; right_quote", "push    qword ptr [rbx+28h]; left_quote", "push    r10; quote_these_too", "mov     r9d, ebp; flags", "mov     r13, rax", "mov     [rsp+78h+quote_these_too], r10", "call    quotearg_buffer_restyled", "lea     rsi, [rax+1]", "add     rsp, 20h", "mov     rdi, rsi; n", "mov     [rsp+58h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "push    qword ptr [rbx+30h]; right_quote", "push    qword ptr [rbx+28h]; left_quote", "mov     r10, [rsp+70h+quote_these_too]", "mov     r8d, [rbx]; quoting_style", "mov     r9d, ebp; flags", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "mov     rdi, rax; buffer", "mov     r12, rax", "push    r10; quote_these_too", "mov     rsi, [rsp+78h+buffersize]; buffersize", "call    quotearg_buffer_restyled", "mov     r11d, [rsp+78h+var_3C]", "mov     rax, r12", "mov     [r13+0], r11d", "add     rsp, 48h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["push~r15", "push~r14", "lea~rax,<TAG>", "push~r13", "push~r12", "mov~r14,arg", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r15,argsize", "sub~rsp,0", "test~o,o", "cmovz~rbx,rax", "call~FOO", "mov~r11d,<TAG>", "mov~ebp,[rbx+0]", "lea~r10,[rbx+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~rdx,arg", "xor~esi,esi", "xor~edi,edi", "mov~[rsp+0],r11d", "or~ebp,0", "push~[word ptr [rbx+0]", "push~[word ptr [rbx+0]", "push~r10", "mov~r9d,ebp", "mov~r13,rax", "mov~[rsp+0],r10", "call~FOO", "lea~rsi,[rax+0]", "add~rsp,<STR>", "mov~rdi,rsi", "mov~[rsp+0],rsi", "call~FOO", "sub~rsp,0", "push~[word ptr [rbx+0]", "push~[word ptr [rbx+0]", "mov~r10,[rsp+0]", "mov~r8d,<TAG>", "mov~r9d,ebp", "mov~rcx,argsize", "mov~rdx,arg", "mov~rdi,rax", "mov~r12,rax", "push~r10", "mov~rsi,[rsp+0]", "call~FOO", "mov~r11d,[rsp+0]", "mov~rax,r12", "mov~[r13+0],r11d", "add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]]], "func_feature": [4, 4, 4, 1, 1, 0, 0, 61, 0.0, 1, 5], "succs": [[]], "fname": "quotearg_alloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 0, 1, 0, 9, 0, 0, 0, 0, 0.0, ["mov     rax, [rsp+68h+var_58]", "add     rsp, 38h", "pop     p", "pop     flags", "pop     size", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["mov~rax,[rsp+0]", "add~rsp,0", "pop~p", "pop~flags", "pop~size", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [3, 2, 2, 5, 4, 59, 7, 5, 0, 0, 0.0, ["push    r15", "push    r14", "lea     rax, default_quoting_options", "push    r13", "push    r12", "mov     r12, size", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, arg", "mov     r15, argsize", "sub     rsp, 38h", "test    o, o", "cmovz   rbx, rax", "xor     ebp, ebp", "call    ___errno_location", "test    size, size", "mov     r13, rax", "mov     eax, [rax]", "setz    bpl", "or      ebp, [p+4]", "lea     r10, [p+8]", "sub     rsp, 8", "mov     r8d, [p]; quoting_style", "mov     rcx, argsize; argsize", "mov     [rsp+70h+e], eax", "push    qword ptr [p+30h]; right_quote", "mov     rdx, arg; arg", "push    qword ptr [p+28h]; left_quote", "push    r10; quote_these_too", "xor     esi, esi; buffersize", "mov     r9d, ebp; flags", "xor     edi, edi; buffer", "mov     [rsp+88h+quote_these_too], r10", "call    quotearg_buffer_restyled", "lea     rsi, [rax+1]", "mov     [rsp+88h+var_40], rax", "add     rsp, 20h", "mov     rdi, bufsize_0; n", "mov     [rsp+68h+bufsize], bufsize_0", "call    xmalloc", "mov     [rsp+68h+var_58], rax", "sub     rsp, 8", "push    qword ptr [p+30h]; right_quote", "push    qword ptr [p+28h]; left_quote", "mov     r10, [rsp+80h+quote_these_too]", "mov     r9d, ebp; flags", "mov     r8d, [p]; quoting_style", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "mov     rdi, rax; buffer", "push    r10; quote_these_too", "mov     rsi, [rsp+88h+bufsize]; buffersize", "call    quotearg_buffer_restyled", "mov     eax, [rsp+88h+e]", "add     rsp, 20h", "test    size, size", "mov     [r13+0], eax", "jz      short loc_16CBF"], ["push~r15", "push~r14", "lea~rax,<TAG>", "push~r13", "push~r12", "mov~r12,size", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,arg", "mov~r15,argsize", "sub~rsp,0", "test~o,o", "cmovz~rbx,rax", "xor~ebp,ebp", "call~FOO", "test~size,size", "mov~r13,rax", "mov~eax,<TAG>", "setz~bpl", "or~ebp,[p+0]", "lea~r10,[p+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~[rsp+0],eax", "push~[word ptr [p+0]", "mov~rdx,arg", "push~[word ptr [p+0]", "push~r10", "xor~esi,esi", "mov~r9d,ebp", "xor~edi,edi", "mov~[rsp+0],r10", "call~FOO", "lea~rsi,[rax+0]", "mov~[rsp+0],rax", "add~rsp,<STR>", "mov~rdi,bufsize_0", "mov~[rsp+0],bufsize_0", "call~FOO", "mov~[rsp+0],rax", "sub~rsp,0", "push~[word ptr [p+0]", "push~[word ptr [p+0]", "mov~r10,[rsp+0]", "mov~r9d,ebp", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~rdx,arg", "mov~rdi,rax", "push~r10", "mov~rsi,[rsp+0]", "call~FOO", "mov~eax,[rsp+0]", "add~rsp,<STR>", "test~size,size", "mov~[r13+0],eax", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     r11, [rsp+68h+var_40]", "mov     [size], r11"], ["mov~r11,[rsp+0]", "mov~<TAG>,r11"]]], "func_feature": [4, 7, 5, 2, 3, 3, 0, 70, 0.0, 1, 6], "succs": [[], [0, 2], [0]], "fname": "quotearg_alloc_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 3, 0, 1, 3, 0, 1, 0, 0, 0.0, ["call    free", "mov     cs:slotvec0.size, 100h", "mov     cs:slotvec0.val, rbx"], ["call~FOO", "mov~<TAG>,0", "mov~<TAG>,rbx"]], [0, 0, 4, 0, 0, 4, 0, 1, 1, 2, 0.2857142857142857, ["mov     rdi, [sv+8]; ptr", "lea     rbx, slot0", "cmp     rdi, rbx", "jz      short loc_16D49"], ["mov~rdi,[sv+0]", "lea~rbx,<TAG>", "cmp~rdi,rbx", "jz~FOO"]], [2, 0, 6, 2, 0, 5, 0, 0, 1, 4, 0.023809523809523808, ["sub     eax, 2", "lea     rbx, [sv+18h]", "shl     rax, 4", "lea     rbp, [sv+rax+28h]", "nop     word ptr [rax+rax+00000000h]"], ["sub~eax,0", "lea~rbx,[sv+0]", "shl~rax,0", "lea~rbp,[sv+0]", "nop~[ord ptr [rax+0]"]], [1, 0, 7, 0, 0, 7, 0, 1, 0, 3, 0.0, ["mov     eax, cs:nslots", "push    r12", "mov     r12, cs:slotvec_0", "push    rbp", "push    rbx", "cmp     eax, 1", "jle     short loc_16D21"], ["mov~eax,<TAG>", "push~r12", "mov~r12,<TAG>", "push~rbp", "push~rbx", "cmp~eax,0", "jle~FOO"]], [1, 0, 6, 1, 1, 5, 0, 2, 2, 3, 0.11904761904761904, ["mov     rdi, [rbx]; ptr", "add     rbx, 10h", "call    free", "cmp     rbx, rbp", "jnz     short loc_16D10"], ["mov~rdi,<TAG>", "add~rbx,0", "call~FOO", "cmp~rbx,rbp", "jnz~FOO"]], [1, 0, 0, 0, 0, 5, 0, 0, 3, 0, 0.0, ["pop     rbx", "mov     cs:nslots, 1", "pop     rbp", "pop     sv", "retn"], ["pop~rbx", "mov~<TAG>,0", "pop~rbp", "pop~sv", "retn"]], [0, 0, 2, 0, 0, 3, 0, 1, 2, 1, 0.23809523809523808, ["lea     rbx, slotvec0", "cmp     sv, rbx", "jz      short loc_16D64"], ["lea~rbx,<TAG>", "cmp~sv,rbx", "jz~FOO"]], [0, 0, 1, 0, 1, 3, 0, 1, 3, 1, 0.0, ["mov     rdi, sv; ptr", "call    free", "mov     cs:slotvec_0, rbx"], ["mov~rdi,sv", "call~FOO", "mov~<TAG>,rbx"]]], "func_feature": [3, 0, 7, 0, 8, 11, 0, 35, 0.08333, 5, 3], "succs": [[6], [0, 6], [4], [1, 2], [1, 4], [], [5, 7], [5]], "fname": "quotearg_free", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 0, 1, 0, 10, 0, 0, 0, 0, 0.0, ["mov     [rbp+0], r14d", "add     rsp, 18h", "mov     rax, r12", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     r14", "pop     r15", "retn"], ["mov~[rbp+0],r14d", "add~rsp,0", "mov~rax,r12", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~r14", "pop~r15", "retn"]], [4, 1, 4, 4, 1, 24, 1, 2, 2, -1, 0.1794871794871795, ["mov     eax, cs:default_quoting_options.flags", "shl     n, 4", "sub     rsp, 8", "add     rbx, r15", "lea     r15, default_quoting_options.quote_these_too", "mov     r8d, cs:default_quoting_options.style; quoting_style", "mov     r11, [rbx]", "mov     r12, [rbx+8]", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "or      eax, 1", "mov     rdx, arg; arg", "mov     [rsp+50h+flags], eax", "push    cs:default_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:default_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rsi, r11; buffersize", "mov     rdi, r12; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_16EEB"], ["mov~eax,<TAG>", "shl~n,0", "sub~rsp,0", "add~rbx,r15", "lea~r15,<TAG>", "mov~r8d,<TAG>", "mov~r11,<TAG>", "mov~r12,[rbx+0]", "mov~rcx,0", "or~eax,0", "mov~rdx,arg", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rsi,r11", "mov~rdi,r12", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [2, 1, 1, 2, 2, 17, 0, 2, 4, -1, 0.01282051282051282, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:default_quoting_options.style; quoting_style", "push    cs:default_quoting_options.right_quote; right_quote", "push    cs:default_quoting_options.left_quote; left_quote", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     r12, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,0", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~r12,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 6, 0, 1, 7, 1, 2, 4, -1, 0.04487179487179487, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r15, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_16DEF"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r15,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 8, 1, 0, 6, 0, 1, 3, -1, 0.08974358974358974, ["lea     r12d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r12d", "shl     rsi, 4; n", "cmp     r15, rax", "jz      loc_16F08"], ["lea~r12d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r12d", "shl~rsi,0", "cmp~r15,rax", "jz~FOO"]], [1, 0, 13, 1, 1, 14, 1, 2, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "movsxd  rbx, edi", "sub     rsp, 18h", "call    ___errno_location", "test    ebx, ebx", "mov     r14d, [rax]", "mov     r15, cs:slotvec_0", "js      loc_16F29"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "movsxd~rbx,edi", "sub~rsp,0", "call~FOO", "test~ebx,ebx", "mov~r14d,<TAG>", "mov~r15,<TAG>", "js~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.10256410256410256, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r12, rax", "mov     [rbx], rsi", "jz      short loc_16E9F"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r12,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, -1, 0.0, ["mov     rdi, r12; ptr", "mov     [rsp+48h+buffersize], rsi", "call    free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,r12", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 6, 0, 1, 4, 0, 1, 4, -1, 0.04487179487179487, ["mov     rdi, r15; p", "call    xrealloc", "mov     r15, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r15", "call~FOO", "mov~r15,rax", "mov~<TAG>,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 2, 1, 0.0641025641025641, ["cmp     ebx, 7FFFFFFFh", "jz      loc_16F2E"], ["cmp~ebx,0", "jz~FOO"]], [2, 0, 5, 4, 1, 10, 1, 1, 5, -1, 0.1282051282051282, ["movsxd  rdi, cs:nslots", "mov     edx, r12d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r15; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, r12d"], ["movsxd~rdi,<TAG>", "mov~edx,r12d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r15", "shl~rdx,0", "call~FOO", "mov~<TAG>,r12d"]], [0, 0, 11, 0, 0, 3, 0, 1, 1, 2, 0.07051282051282051, ["cmp     ebx, cs:nslots", "mov     rbp, rax", "jl      short loc_16E17"], ["cmp~ebx,<TAG>", "mov~rbp,rax", "jl~FOO"]]], "func_feature": [10, 4, 17, 0, 14, 17, 0, 108, 0.05266, 9, 13], "succs": [[], [0, 6], [0], [12], [8, 3], [9, 13], [2, 7], [2], [12], [], [], [10, 4], [1], [1, 11]], "fname": "quotearg_n", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 10, 0, 0, 2, 0, 1, 0, 0, 0.0641025641025641, ["cmp     ebp, 7FFFFFFFh", "jz      loc_170EE"], ["cmp~ebp,0", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 1, 2, 0.07051282051282051, ["cmp     ebp, cs:nslots", "jl      short loc_16FDD"], ["cmp~ebp,<TAG>", "jl~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+48h+buffersize], rsi", "call    free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.10256410256410256, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_17061"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 6, 0, 1, 7, 1, 2, 4, -1, 0.04487179487179487, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_16FB5"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 8, 1, 0, 6, 0, 1, 3, -1, 0.08974358974358974, ["lea     r15d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r15d", "shl     rsi, 4; n", "cmp     rbx, rax", "jz      loc_170C8"], ["lea~r15d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r15d", "shl~rsi,0", "cmp~rbx,rax", "jz~FOO"]], [1, 1, 1, 2, 2, 17, 0, 2, 4, -1, 0.01282051282051282, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:default_quoting_options.style; quoting_style", "push    cs:default_quoting_options.right_quote; right_quote", "push    cs:default_quoting_options.left_quote; left_quote", "mov     rcx, argsize; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,argsize", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 13, 1, 1, 17, 1, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r14, argsize", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "movsxd  rbp, edi", "sub     rsp, 18h", "call    ___errno_location", "mov     r12, rax", "mov     eax, [rax]", "test    ebp, ebp", "mov     rbx, cs:slotvec_0", "mov     [rsp+48h+var_40], eax", "js      loc_170E9"], ["push~r15", "push~r14", "mov~r14,argsize", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "movsxd~rbp,edi", "sub~rsp,0", "call~FOO", "mov~r12,rax", "mov~eax,<TAG>", "test~ebp,ebp", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [1, 0, 0, 1, 0, 11, 0, 0, 3, -1, 0.0, ["mov     eax, [rsp+48h+var_40]", "mov     [r12], eax", "add     rsp, 18h", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~<TAG>,eax", "add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~argsize", "pop~r15", "retn"]], [3, 1, 4, 4, 1, 24, 1, 2, 2, -1, 0.1794871794871795, ["mov     eax, cs:default_quoting_options.flags", "shl     n, 4", "lea     r15, default_quoting_options.quote_these_too", "add     rbx, rbp", "sub     rsp, 8", "mov     r8d, cs:default_quoting_options.style; quoting_style", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "mov     rcx, argsize; argsize", "or      eax, 1", "mov     rdx, arg; arg", "mov     [rsp+50h+flags], eax", "push    cs:default_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:default_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rsi, r11; buffersize", "mov     rdi, rbp; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_170A9"], ["mov~eax,<TAG>", "shl~n,0", "lea~r15,<TAG>", "add~rbx,rbp", "sub~rsp,0", "mov~r8d,<TAG>", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "mov~rcx,argsize", "or~eax,0", "mov~rdx,arg", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rsi,r11", "mov~rdi,rbp", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [0, 0, 6, 0, 1, 4, 0, 1, 4, -1, 0.04487179487179487, ["mov     rdi, rbx; p", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [2, 0, 5, 4, 1, 10, 1, 1, 5, -1, 0.1282051282051282, ["movsxd  rdi, cs:nslots", "mov     edx, r15d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, r15d"], ["movsxd~rdi,<TAG>", "mov~edx,r15d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,r15d"]]], "func_feature": [10, 4, 17, 1, 14, 17, 0, 111, 0.05266, 9, 13], "succs": [[12, 5], [0, 10], [6], [2, 6], [13], [11, 4], [9], [], [1, 7], [], [9, 3], [13], [], [10]], "fname": "quotearg_n_mem", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 8, 0, 0, 3, 0, 1, 0, 0, 0.041666666666666664, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_17268"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 9, 1, 1, 15, 1, 2, 0, 2, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, arg", "push    rbp", "push    rbx", "sub     rsp, 18h", "call    ___errno_location", "mov     rbp, rax", "mov     r13d, [rax]", "mov     eax, cs:nslots", "mov     rbx, cs:slotvec_0", "test    eax, eax", "jg      short loc_17181"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,arg", "push~rbp", "push~rbx", "sub~rsp,0", "call~FOO", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~eax,<TAG>", "mov~rbx,<TAG>", "test~eax,eax", "jg~FOO"]], [1, 0, 0, 1, 0, 10, 0, 0, 2, -1, 0.0, ["mov     [rbp+0], r13d", "add     rsp, 18h", "mov     rax, r14", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~[rbp+0],r13d", "add~rsp,0", "mov~rax,r14", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [3, 1, 4, 2, 1, 22, 1, 2, 1, -1, 0.2777777777777778, ["mov     eax, cs:default_quoting_options.flags", "mov     r11, [rbx]", "lea     r15, default_quoting_options.quote_these_too", "mov     r14, [rbx+8]", "sub     rsp, 8", "mov     r8d, cs:default_quoting_options.style; quoting_style", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+50h+flags], eax", "push    cs:default_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:default_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rdi, r14; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_1724E"], ["mov~eax,<TAG>", "mov~r11,<TAG>", "lea~r15,<TAG>", "mov~r14,[rbx+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,0", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rdi,r14", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [2, 1, 1, 2, 2, 17, 0, 2, 3, -1, 0.027777777777777776, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:default_quoting_options.style; quoting_style", "push    cs:default_quoting_options.right_quote; right_quote", "push    cs:default_quoting_options.left_quote; left_quote", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,0", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [1, 0, 6, 0, 1, 8, 1, 2, 2, 0, 0.048611111111111105, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_17154"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 2, -1, 0.16666666666666666, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_17202"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 3, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+48h+buffersize], rsi", "call    free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,r14", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [1, 0, 6, 0, 1, 5, 0, 1, 2, -1, 0.048611111111111105, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [4, 0, 5, 4, 1, 10, 1, 1, 3, -1, 0.20833333333333331, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]]], "func_feature": [8, 4, 13, 0, 10, 13, 0, 99, 0.08194, 9, 10], "succs": [[8, 5], [0, 3], [], [2, 6], [2], [9], [4, 7], [4], [9], [3]], "fname": "quotearg", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 9, 1, 1, 17, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "mov     r14, argsize", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "sub     rsp, 18h", "call    ___errno_location", "mov     r12, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     [rsp+48h+var_40], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      short loc_17317"], ["push~r15", "push~r14", "mov~r14,argsize", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "sub~rsp,0", "call~FOO", "mov~r12,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 0, -1, 0.16666666666666666, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_17394"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [2, 1, 4, 2, 1, 22, 1, 2, 0, -1, 0.2777777777777778, ["mov     eax, cs:default_quoting_options.flags", "mov     r11, [rbx]", "lea     r15, default_quoting_options.quote_these_too", "mov     rbp, [rbx+8]", "sub     rsp, 8", "mov     r8d, cs:default_quoting_options.style; quoting_style", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+50h+flags], eax", "push    cs:default_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:default_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rdi, rbp; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_173DC"], ["mov~eax,<TAG>", "mov~r11,<TAG>", "lea~r15,<TAG>", "mov~rbp,[rbx+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rdi,rbp", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [1, 0, 6, 0, 1, 5, 0, 1, 0, -1, 0.048611111111111105, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 8, 0, 0, 3, 0, 1, 0, 1, 0.041666666666666664, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_17400"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [4, 0, 5, 4, 1, 10, 1, 1, 0, -1, 0.20833333333333331, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [1, 0, 6, 0, 1, 8, 1, 2, 0, 0, 0.048611111111111105, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_172EA"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 0, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+48h+buffersize], rsi", "call    free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [1, 0, 0, 1, 0, 11, 0, 0, 0, -1, 0.0, ["mov     eax, [rsp+48h+var_40]", "mov     [r12], eax", "add     rsp, 18h", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~<TAG>,eax", "add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~argsize", "pop~r15", "retn"]], [1, 1, 1, 2, 2, 17, 0, 2, 0, -1, 0.027777777777777776, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:default_quoting_options.style; quoting_style", "push    cs:default_quoting_options.right_quote; right_quote", "push    cs:default_quoting_options.left_quote; left_quote", "mov     rcx, argsize; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,argsize", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]]], "func_feature": [8, 4, 13, 1, 10, 13, 0, 102, 0.08194, 9, 10], "succs": [[2, 4], [9, 7], [8, 1], [5], [3, 6], [2], [5], [9], [], [8]], "fname": "quotearg_mem", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 8, 0, 1, 4, 0, 1, 0, 0, 0.034926470588235295, ["mov     rdi, r15; p", "call    xrealloc", "mov     r15, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r15", "call~FOO", "mov~r15,rax", "mov~<TAG>,rax"]], [1, 0, 10, 1, 0, 6, 0, 1, 4, -1, 0.06985294117647059, ["lea     r14d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r14d", "shl     rsi, 4; n", "cmp     r15, rax", "jz      loc_17610"], ["lea~r14d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r14d", "shl~rsi,0", "cmp~r15,rax", "jz~FOO"]], [1, 0, 7, 0, 0, 4, 2, 1, 3, -1, 0.07720588235294118, ["xor     eax, eax", "xor     edx, edx", "mov     [rsp+88h+s], 1", "jmp     loc_1752A"], ["xor~eax,eax", "xor~edx,edx", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 14, 0, 0, 3, 0, 1, 2, 2, 0.10294117647058823, ["cmp     ebx, cs:nslots", "mov     r8d, [rsp+88h+s]", "jl      loc_17638"], ["cmp~ebx,<TAG>", "mov~r8d,[rsp+0]", "jl~FOO"]], [3, 0, 7, 4, 1, 16, 2, 1, 6, -1, 0.10294117647058823, ["movsxd  rdi, cs:nslots", "mov     edx, r14d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r15; s", "shl     rdx, 4; n", "call    _memset", "mov     eax, [rsp+88h+o.flags]", "mov     rdx, [rsp+88h+o.right_quote]", "mov     r8d, [rsp+88h+o.style]; quoting_style", "mov     cs:nslots, r14d", "or      eax, 1", "mov     [rsp+88h+s], eax", "mov     rax, [rsp+88h+o.left_quote]"], ["movsxd~rdi,<TAG>", "mov~edx,r14d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r15", "shl~rdx,0", "call~FOO", "mov~eax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,r14d", "or~eax,0", "mov~[rsp+0],eax", "mov~rax,[rsp+0]"]], [0, 0, 8, 0, 1, 7, 1, 2, 5, -1, 0.034926470588235295, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r15, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_174E8"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r15,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 5, 0, 0, 5, 0, 1, 5, -1, 0.07352941176470588, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_1759A"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [3, 1, 6, 4, 1, 21, 0, 2, 4, -1, 0.19852941176470587, ["shl     n, 4", "sub     rsp, 8", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "add     rbx, r15", "mov     r11, [rbx]", "mov     r14, [rbx+8]", "push    rdx; right_quote", "push    rax; left_quote", "mov     rdx, arg; arg", "lea     r15, [rsp+0A0h+o]", "mov     rsi, r11; buffersize", "mov     rdi, r14; buffer", "lea     rax, [r15+8]", "push    rax; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_175E5"], ["shl~n,0", "sub~rsp,0", "mov~rcx,0", "add~rbx,r15", "mov~r11,<TAG>", "mov~r14,[rbx+0]", "push~rdx", "push~rax", "mov~rdx,arg", "lea~r15,[rsp+0]", "mov~rsi,r11", "mov~rdi,r14", "lea~rax,[r15+0]", "push~rax", "mov~r9d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,rax", "ja~FOO"]], [3, 1, 3, 3, 2, 18, 0, 2, 6, -1, 0.022058823529411763, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r15, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+o.right_quote]; right_quote", "push    [rsp+98h+o.left_quote]; left_quote", "mov     rdx, arg; arg", "push    r15; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+o.style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "add~r15,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 4, 0, 1, 4, 0, 1, 6, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r14", "mov~[rsp+0],rsi", "call~FOO", "mov~rsi,[rsp+0]"]], [1, 0, 16, 0, 1, 16, 1, 2, 1, 3, 0.05514705882352941, ["pxor    xmm0, xmm0", "movsxd  rbx, edi", "mov     r12, arg", "mov     [rsp+88h+o.style], esi", "mov     [rsp+88h+s], esi", "mov     [rsp+88h+o.flags], 0", "movups  xmmword ptr [rsp+88h+o.quote_these_too], xmm0", "movups  xmmword ptr [rsp+88h+o.quote_these_too+10h], xmm0", "pxor    xmm0, xmm0", "movups  xmmword ptr [rsp+88h+o.left_quote], xmm0", "call    ___errno_location", "test    ebx, ebx", "mov     rbp, rax", "mov     r13d, [rax]", "mov     r15, cs:slotvec_0", "js      loc_17649"], ["pxor~xmm0,xmm0", "movsxd~rbx,edi", "mov~r12,arg", "mov~[rsp+0],esi", "mov~[rsp+0],esi", "mov~[rsp+0],0", "movups~[mmword ptr [rsp+0],xmm0", "movups~[mmword ptr [rsp+0],xmm0", "pxor~xmm0,xmm0", "movups~[mmword ptr [rsp+0],xmm0", "call~FOO", "test~ebx,ebx", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~r15,<TAG>", "js~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 5, 1, 1, 5, -1, 0.09558823529411764, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbp+0], r13d", "mov     rax, r14", "jnz     short loc_1764E"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[rbp+0],r13d", "mov~rax,r14", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 3, 1, 0.05514705882352941, ["cmp     ebx, 7FFFFFFFh", "jz      loc_17653"], ["cmp~ebx,0", "jz~FOO"]], [1, 1, 17, 1, 0, 12, 1, 1, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "cmp     esi, 0Ah", "jz      loc_17649"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~esi,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [11, 8, 21, 1, 18, 22, 2, 134, 0.05127, 5, 14], "succs": [[4], [0, 5], [7], [2, 14], [7], [4], [8, 9], [12, 6], [12], [8], [17, 3], [], [11, 13], [], [16, 1], [17, 10], [], []], "fname": "quotearg_n_style", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 1, 17, 1, 0, 12, 1, 1, 0, 0, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "cmp     esi, 0Ah", "jz      loc_17878"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~esi,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 0, 1, 0.05514705882352941, ["cmp     r12d, 7FFFFFFFh", "jz      loc_17882"], ["cmp~r12d,0", "jz~FOO"]], [2, 1, 6, 4, 1, 21, 0, 2, 0, -1, 0.19852941176470587, ["shl     n, 4", "sub     rsp, 8", "mov     rcx, argsize; argsize", "add     rbx, r12", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "push    rdx; right_quote", "push    rax; left_quote", "mov     rdx, arg; arg", "lea     r12, [rsp+0A0h+o]", "mov     rsi, r11; buffersize", "mov     rdi, rbp; buffer", "lea     rax, [r12+8]", "push    rax; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_17813"], ["shl~n,0", "sub~rsp,0", "mov~rcx,argsize", "add~rbx,r12", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "push~rdx", "push~rax", "mov~rdx,arg", "lea~r12,[rsp+0]", "mov~rsi,r11", "mov~rdi,rbp", "lea~rax,[r12+0]", "push~rax", "mov~r9d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,rax", "ja~FOO"]], [1, 0, 7, 0, 0, 4, 2, 1, 0, -1, 0.07720588235294118, ["xor     eax, eax", "xor     edx, edx", "mov     [rsp+88h+flags], 1", "jmp     loc_1775F"], ["xor~eax,eax", "xor~edx,edx", "mov~<TAG>,0", "jmp~FOO"]], [3, 0, 7, 4, 1, 16, 2, 1, 0, -1, 0.10294117647058823, ["movsxd  rdi, cs:nslots", "mov     edx, ebp", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     eax, [rsp+88h+o.flags]", "mov     rdx, [rsp+88h+o.right_quote]", "mov     r8d, [rsp+88h+o.style]; quoting_style", "mov     cs:nslots, ebp", "or      eax, 1", "mov     [rsp+88h+flags], eax", "mov     rax, [rsp+88h+o.left_quote]"], ["movsxd~rdi,<TAG>", "mov~edx,ebp", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~eax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,ebp", "or~eax,0", "mov~<TAG>,eax", "mov~rax,[rsp+0]"]], [0, 0, 4, 0, 1, 4, 0, 1, 0, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,rbp", "mov~[rsp+0],rsi", "call~FOO", "mov~rsi,[rsp+0]"]], [0, 0, 5, 0, 0, 5, 0, 1, 0, -1, 0.07352941176470588, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_177CC"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [1, 0, 10, 1, 0, 6, 0, 1, 0, -1, 0.06985294117647059, ["lea     ebp, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, ebp", "shl     rsi, 4; n", "cmp     rbx, rax", "jz      loc_17840"], ["lea~ebp,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,ebp", "shl~rsi,0", "cmp~rbx,rax", "jz~FOO"]], [0, 0, 2, 0, 0, 6, 1, 1, 0, -1, 0.09558823529411764, ["mov     eax, [rsp+88h+var_84]", "mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [r13+0], eax", "mov     rax, rbp", "jnz     short loc_1787D"], ["mov~eax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[r13+0],eax", "mov~rax,rbp", "jnz~FOO"]], [2, 1, 3, 3, 2, 18, 0, 2, 0, -1, 0.022058823529411763, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r12, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+o.right_quote]; right_quote", "push    [rsp+98h+o.left_quote]; left_quote", "mov     rdx, arg; arg", "push    r12; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+o.style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "add~r12,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r12", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 14, 0, 0, 3, 0, 1, 0, 2, 0.10294117647058823, ["cmp     r12d, cs:nslots", "mov     r8d, [rsp+88h+flags]", "jl      loc_17868"], ["cmp~r12d,<TAG>", "mov~r8d,<TAG>", "jl~FOO"]], [1, 0, 16, 0, 1, 18, 1, 2, 0, 3, 0.05514705882352941, ["pxor    xmm0, xmm0", "movsxd  r12, edi", "mov     r14, arg", "mov     r15, argsize", "mov     [rsp+88h+o.style], esi", "mov     [rsp+88h+flags], esi", "mov     [rsp+88h+o.flags], 0", "movups  xmmword ptr [rsp+88h+o.quote_these_too], xmm0", "movups  xmmword ptr [rsp+88h+o.quote_these_too+10h], xmm0", "pxor    xmm0, xmm0", "movups  xmmword ptr [rsp+88h+o.left_quote], xmm0", "call    ___errno_location", "mov     r13, rax", "test    r12d, r12d", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     [rsp+88h+var_84], eax", "js      loc_17878"], ["pxor~xmm0,xmm0", "movsxd~r12,edi", "mov~r14,arg", "mov~r15,argsize", "mov~[rsp+0],esi", "mov~<TAG>,esi", "mov~[rsp+0],0", "movups~[mmword ptr [rsp+0],xmm0", "movups~[mmword ptr [rsp+0],xmm0", "pxor~xmm0,xmm0", "movups~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~r13,rax", "test~r12d,r12d", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [0, 0, 8, 0, 1, 7, 1, 2, 0, -1, 0.034926470588235295, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_17720"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 8, 0, 1, 4, 0, 1, 0, -1, 0.034926470588235295, ["mov     rdi, rbx; p", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 1, 0, 1, 0, 8, 0, 0, 0, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [11, 8, 21, 2, 18, 22, 0, 137, 0.05127, 5, 14], "succs": [[12, 14], [], [8, 1], [9, 7], [3], [3], [10], [10, 6], [13, 15], [16, 17], [9], [2, 4], [11, 14], [5], [], [5], [], []], "fname": "quotearg_n_style_mem", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 12, 0, 1, 17, 1, 2, 0, 0, 0.06593406593406594, ["pxor    xmm0, xmm0", "mov     r12, arg", "mov     [rsp+88h+quoting_style], edi", "mov     [rsp+88h+s], edi", "mov     [rsp+88h+var_74], 0", "movups  [rsp+88h+var_70], xmm0", "movups  [rsp+88h+var_60], xmm0", "pxor    xmm0, xmm0", "movups  xmmword ptr [rsp+88h+left_quote], xmm0", "call    ___errno_location", "mov     rbp, rax", "mov     r13d, [rax]", "mov     eax, cs:nslots", "mov     rbx, cs:slotvec_0", "mov     r8d, [rsp+88h+s]", "test    eax, eax", "jg      loc_17A80"], ["pxor~xmm0,xmm0", "mov~r12,arg", "mov~[rsp+0],edi", "mov~[rsp+0],edi", "mov~[rsp+0],0", "movups~[rsp+0],xmm0", "movups~[rsp+0],xmm0", "pxor~xmm0,xmm0", "movups~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~r8d,[rsp+0]", "test~eax,eax", "jg~FOO"]], [1, 1, 14, 1, 0, 12, 1, 1, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "cmp     edi, 0Ah", "jz      loc_17A96"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edi,0", "jz~FOO"]], [3, 1, 3, 3, 2, 18, 0, 2, 5, -1, 0.03296703296703297, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r15, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+left_quote+8]; right_quote", "push    [rsp+98h+left_quote]; left_quote", "mov     rdx, arg; arg", "push    r15; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "add~r15,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 5, 0, 0, 5, 0, 1, 4, -1, 0.08791208791208792, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_179DD"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 5, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r14", "mov~[rsp+0],rsi", "call~FOO", "mov~rsi,[rsp+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 3, -1, 0.027472527472527476, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 10, 0, 0, 3, 0, 1, 2, -1, 0.03296703296703297, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_17A50"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 8, 0, 1, 8, 1, 2, 3, -1, 0.027472527472527476, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_1792D"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [2, 1, 6, 2, 1, 19, 0, 2, 3, -1, 0.23076923076923078, ["sub     rsp, 8", "mov     r11, [rbx]", "mov     r14, [rbx+8]", "push    rdx; right_quote", "push    rax; left_quote", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "lea     r15, [rsp+0A0h+quoting_style]", "mov     rsi, r11; buffersize", "mov     rdi, r14; buffer", "lea     rax, [r15+8]", "push    rax; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_17A28"], ["sub~rsp,0", "mov~r11,<TAG>", "mov~r14,[rbx+0]", "push~rdx", "push~rax", "mov~rcx,0", "mov~rdx,arg", "lea~r15,[rsp+0]", "mov~rsi,r11", "mov~rdi,r14", "lea~rax,[r15+0]", "push~rax", "mov~r9d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,rax", "ja~FOO"]], [1, 0, 7, 0, 0, 4, 2, 1, 2, -1, 0.07692307692307693, ["xor     eax, eax", "xor     edx, edx", "mov     [rsp+88h+s], 1", "jmp     loc_17974"], ["xor~eax,eax", "xor~edx,edx", "mov~[rsp+0],0", "jmp~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 5, 1, 1, 4, -1, 0.1208791208791209, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbp+0], r13d", "mov     rax, r14", "jnz     short loc_17A91"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[rbp+0],r13d", "mov~rax,r14", "jnz~FOO"]], [5, 0, 7, 4, 1, 16, 2, 1, 4, -1, 0.11538461538461539, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     eax, [rsp+88h+var_74]", "mov     rdx, [rsp+88h+left_quote+8]", "mov     r8d, [rsp+88h+quoting_style]; quoting_style", "mov     cs:nslots, 1", "or      eax, 1", "mov     [rsp+88h+s], eax", "mov     rax, [rsp+88h+left_quote]"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~eax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,0", "or~eax,0", "mov~[rsp+0],eax", "mov~rax,[rsp+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [10, 8, 18, 4, 15, 18, 9, 126, 0.05458, 5, 11], "succs": [[10, 7], [0, 5], [12], [2, 4], [2], [], [13], [8, 6], [13], [3, 12], [9], [], [11, 14], [9], []], "fname": "quotearg_style", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 6, 1, 1, 4, -1, 0.1208791208791209, ["mov     eax, [rsp+88h+var_84]", "mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [r13+0], eax", "mov     rax, rbp", "jnz     short loc_17CA0"], ["mov~eax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[r13+0],eax", "mov~rax,rbp", "jnz~FOO"]], [1, 1, 14, 1, 0, 12, 1, 1, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "cmp     edi, 0Ah", "jz      loc_17CA5"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edi,0", "jz~FOO"]], [5, 0, 7, 4, 1, 16, 2, 1, 4, -1, 0.11538461538461539, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     eax, [rsp+88h+var_74]", "mov     rdx, [rsp+88h+left_quote+8]", "mov     r8d, [rsp+88h+quoting_style]; quoting_style", "mov     cs:nslots, 1", "or      eax, 1", "mov     [rsp+88h+flags], eax", "mov     rax, [rsp+88h+left_quote]"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~eax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,0", "or~eax,0", "mov~<TAG>,eax", "mov~rax,[rsp+0]"]], [1, 0, 8, 0, 1, 8, 1, 2, 3, -1, 0.027472527472527476, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_17B41"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 3, -1, 0.027472527472527476, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 10, 0, 0, 3, 0, 1, 2, -1, 0.03296703296703297, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_17C60"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 12, 0, 1, 19, 1, 2, 1, -1, 0.06593406593406594, ["pxor    xmm0, xmm0", "mov     r14, arg", "mov     r15, argsize", "mov     [rsp+88h+quoting_style], edi", "mov     [rsp+88h+flags], edi", "mov     [rsp+88h+var_74], 0", "movups  [rsp+88h+var_70], xmm0", "movups  [rsp+88h+var_60], xmm0", "pxor    xmm0, xmm0", "movups  xmmword ptr [rsp+88h+left_quote], xmm0", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     r8d, [rsp+88h+flags]", "mov     [rsp+88h+var_84], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      loc_17C90"], ["pxor~xmm0,xmm0", "mov~r14,arg", "mov~r15,argsize", "mov~[rsp+0],edi", "mov~<TAG>,edi", "mov~[rsp+0],0", "movups~[rsp+0],xmm0", "movups~[rsp+0],xmm0", "pxor~xmm0,xmm0", "movups~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~r8d,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 1, 6, 2, 1, 19, 0, 2, 3, -1, 0.23076923076923078, ["sub     rsp, 8", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "push    rdx; right_quote", "push    rax; left_quote", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "lea     r12, [rsp+0A0h+quoting_style]", "mov     rsi, r11; buffersize", "mov     rdi, rbp; buffer", "lea     rax, [r12+8]", "push    rax; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_17C34"], ["sub~rsp,0", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "push~rdx", "push~rax", "mov~rcx,argsize", "mov~rdx,arg", "lea~r12,[rsp+0]", "mov~rsi,r11", "mov~rdi,rbp", "lea~rax,[r12+0]", "push~rax", "mov~r9d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,rax", "ja~FOO"]], [1, 0, 7, 0, 0, 4, 2, 1, 2, -1, 0.07692307692307693, ["xor     eax, eax", "xor     edx, edx", "mov     [rsp+88h+flags], 1", "jmp     loc_17B87"], ["xor~eax,eax", "xor~edx,edx", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 5, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,rbp", "mov~[rsp+0],rsi", "call~FOO", "mov~rsi,[rsp+0]"]], [0, 0, 5, 0, 0, 5, 0, 1, 4, -1, 0.08791208791208792, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_17BED"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [2, 1, 3, 3, 2, 18, 0, 2, 5, -1, 0.03296703296703297, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r12, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+left_quote+8]; right_quote", "push    [rsp+98h+left_quote]; left_quote", "mov     rdx, arg; arg", "push    r12; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "add~r12,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r12", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 1, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]]], "func_feature": [10, 8, 18, 5, 15, 18, 0, 129, 0.05458, 5, 11], "succs": [[], [0, 14], [8, 7], [9], [3], [3], [4, 5], [10, 6], [], [1, 12], [9], [13], [11, 13], [1], []], "fname": "quotearg_style_mem", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 5, 0, 0, 5, 0, 1, 0, 0, 0.10909090909090909, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r12, rax", "mov     [rbx], rsi", "jz      short loc_17E13"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r12,rax", "mov~<TAG>,rsi", "jz~FOO"]], [2, 1, 6, 2, 1, 22, 1, 2, 1, 2, 0.2727272727272727, ["mov     eax, [rsp+88h+options.flags]", "mov     r11, [rbx]", "sub     rsp, 8", "mov     r12, [rbx+8]", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+90h+flags], eax", "mov     r9d, eax; flags", "lea     rax, [rbp+8]", "push    [rsp+90h+options.right_quote]; right_quote", "push    [rsp+98h+options.left_quote]; left_quote", "mov     rdi, r12; buffer", "push    rax; quote_these_too", "mov     r8d, [rsp+0A8h+options.style]; quoting_style", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_17E58"], ["mov~eax,[rsp+0]", "mov~r11,<TAG>", "sub~rsp,0", "mov~r12,[rbx+0]", "mov~rcx,argsize", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "mov~r9d,eax", "lea~rax,[rbp+0]", "push~[rsp+0]", "push~[rsp+0]", "mov~rdi,r12", "push~rax", "mov~r8d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [0, 0, 2, 0, 0, 6, 1, 1, 2, 1, 0.16363636363636364, ["mov     eax, [rsp+88h+var_80]", "mov     rbx, [rsp+88h+var_40]", "xor     rbx, fs:28h", "mov     [r13+0], eax", "mov     rax, r12", "jnz     short loc_17EAE"], ["mov~eax,[rsp+0]", "mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "mov~[r13+0],eax", "mov~rax,r12", "jnz~FOO"]], [2, 1, 3, 3, 2, 18, 0, 2, 3, 2, 0.05454545454545454, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     rbp, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+options.right_quote]; right_quote", "push    [rsp+98h+options.left_quote]; left_quote", "mov     rdx, arg; arg", "push    rbp; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+options.style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r12, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~rbp,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~rbp", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r12,rax", "call~FOO", "add~rsp,<STR>"]], [1, 0, 8, 0, 1, 8, 1, 2, 2, 4, 0.04090909090909091, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_17D75"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 10, 0, 0, 3, 0, 1, 1, 5, 0.02727272727272727, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_17E88"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [3, 1, 11, 2, 1, 43, 5, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r15, argsize", "push    r13", "push    r12", "mov     ecx, edx", "push    rbp", "push    rbx", "and     ecx, 1Fh", "mov     r14, arg", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "mov     rax, cs:default_quoting_options.right_quote", "lea     rbp, [rsp+88h+options]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     [rsp+88h+options.right_quote], rax", "mov     eax, edx", "movaps  xmmword ptr [rsp+88h+options.style], xmm0", "shr     al, 5", "movzx   eax, al", "lea     argsize, [rbp+rax*4+8]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "movaps  xmmword ptr [rsp+88h+options.quote_these_too+8], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+options.quote_these_too+18h], xmm0", "mov     edx, [rsi]", "mov     eax, edx", "shr     eax, cl", "not     eax", "and     eax, 1", "shl     eax, cl", "xor     eax, edx", "mov     [rsi], eax", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     [rsp+88h+var_80], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      short loc_17DA2"], ["push~r15", "push~r14", "mov~r15,argsize", "push~r13", "push~r12", "mov~ecx,edx", "push~rbp", "push~rbx", "and~ecx,0", "mov~r14,arg", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "lea~rbp,[rsp+0]", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "mov~eax,edx", "movaps~[mmword ptr [rsp+0],xmm0", "shr~al,0", "movzx~eax,al", "lea~argsize,[rbp+0]", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "mov~edx,<TAG>", "mov~eax,edx", "shr~eax,cl", "not~eax", "and~eax,0", "shl~eax,cl", "xor~eax,edx", "mov~<TAG>,eax", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]], [4, 0, 7, 4, 1, 10, 1, 1, 3, 3, 0.1909090909090909, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [0, 0, 4, 0, 1, 4, 0, 1, 3, 3, 0.0, ["mov     rdi, r12; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r12", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [1, 0, 8, 0, 1, 5, 0, 1, 2, 4, 0.04090909090909091, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 1, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [9, 9, 15, 2, 12, 15, 0, 133, 0.075, 9, 12], "succs": [[8, 3], [0, 2], [10, 11], [2], [7], [9, 4], [1, 5], [1], [3], [7], [], []], "fname": "quotearg_char_mem", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 4, 0, 1, 4, 0, 1, 0, 0, 0.0, ["mov     rdi, r15; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r15", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 5, 0, 0, 5, 0, 1, 2, 3, 0.10909090909090909, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r15, rax", "mov     [r12], rsi", "jz      short loc_18024"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r15,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 10, 0, 0, 3, 0, 1, 1, 5, 0.02727272727272727, ["lea     rax, slotvec0", "cmp     r12, rax", "jz      loc_18098"], ["lea~rax,<TAG>", "cmp~r12,rax", "jz~FOO"]], [3, 1, 11, 2, 1, 41, 5, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     ecx, esi", "push    r13", "push    r12", "and     ecx, 1Fh", "push    rbp", "push    rbx", "mov     rbp, arg", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "mov     rax, cs:default_quoting_options.right_quote", "lea     rbx, [rsp+88h+quoting_style]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     [rsp+88h+right_quote], rax", "mov     eax, esi", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "shr     al, 5", "movzx   eax, al", "lea     rdx, [rbx+rax*4+8]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "movaps  [rsp+88h+var_68], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+left_quote], xmm0", "mov     esi, [rdx]", "mov     eax, esi", "shr     eax, cl", "not     eax", "and     eax, 1", "shl     eax, cl", "xor     eax, esi", "mov     [rdx], eax", "call    ___errno_location", "mov     r13, rax", "mov     r14d, [rax]", "mov     eax, cs:nslots", "mov     r12, cs:slotvec_0", "test    eax, eax", "jg      short loc_17FAC"], ["push~r15", "push~r14", "mov~ecx,esi", "push~r13", "push~r12", "and~ecx,0", "push~rbp", "push~rbx", "mov~rbp,arg", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "lea~rbx,[rsp+0]", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "mov~eax,esi", "movaps~[mmword ptr [rsp+0],xmm0", "shr~al,0", "movzx~eax,al", "lea~rdx,[rbx+0]", "movdqa~xmm0,<TAG>", "movaps~[rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "mov~esi,<TAG>", "mov~eax,esi", "shr~eax,cl", "not~eax", "and~eax,0", "shl~eax,cl", "xor~eax,esi", "mov~<TAG>,eax", "call~FOO", "mov~r13,rax", "mov~r14d,<TAG>", "mov~eax,<TAG>", "mov~r12,<TAG>", "test~eax,eax", "jg~FOO"]], [0, 0, 2, 0, 0, 5, 1, 1, 2, 1, 0.16363636363636364, ["mov     rbx, [rsp+88h+var_40]", "xor     rbx, fs:28h", "mov     [r13+0], r14d", "mov     rax, r15", "jnz     short loc_180BE"], ["mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "mov~[r13+0],r14d", "mov~rax,r15", "jnz~FOO"]], [3, 1, 6, 2, 1, 22, 1, 2, 1, 2, 0.2727272727272727, ["mov     eax, [rsp+88h+quoting_style+4]", "mov     r11, [r12]", "sub     rsp, 8", "mov     r15, [r12+8]", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+90h+flags], eax", "mov     r9d, eax; flags", "lea     rax, [rbx+8]", "push    [rsp+90h+right_quote]; right_quote", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdi, r15; buffer", "push    rax; quote_these_too", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_1806E"], ["mov~eax,[rsp+0]", "mov~r11,<TAG>", "sub~rsp,0", "mov~r15,[r12+0]", "mov~rcx,0", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "mov~r9d,eax", "lea~rax,[rbx+0]", "push~[rsp+0]", "push~[rsp+0]", "mov~rdi,r15", "push~rax", "mov~r8d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [3, 1, 3, 3, 2, 18, 0, 2, 3, 2, 0.05454545454545454, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     rbx, 8", "call    xmalloc", "sub     rsp, 8", "mov     [r12+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+right_quote]; right_quote", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdx, arg; arg", "push    rbx; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r15, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~rbx,0", "call~FOO", "sub~rsp,0", "mov~[r12+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~rbx", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r15,rax", "call~FOO", "add~rsp,<STR>"]], [4, 0, 7, 4, 1, 10, 1, 1, 3, 3, 0.1909090909090909, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r12; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r12", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [1, 0, 8, 0, 1, 8, 1, 2, 2, 4, 0.04090909090909091, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r12, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_17F7F"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r12,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 2, 4, 0.04090909090909091, ["mov     rdi, r12; p", "mov     esi, 10h; n", "call    xrealloc", "mov     r12, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r12", "mov~esi,0", "call~FOO", "mov~r12,rax", "mov~<TAG>,rax"]], [0, 1, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     arg", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~arg", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [9, 9, 15, 2, 12, 15, 0, 130, 0.075, 9, 12], "succs": [[6], [0, 6], [8, 9], [2, 5], [10, 11], [1, 4], [4], [5], [7], [7], [], []], "fname": "quotearg_char", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 2, 0, 0, 5, 1, 1, 0, 0, 0.16363636363636364, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbp+0], r13d", "mov     rax, r14", "jnz     short loc_182BE"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[rbp+0],r13d", "mov~rax,r14", "jnz~FOO"]], [3, 1, 6, 2, 1, 23, 1, 2, 1, 2, 0.2727272727272727, ["mov     eax, [rsp+88h+quoting_style+4]", "sub     rsp, 8", "mov     r11, [rbx]", "mov     r14, [rbx+8]", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+90h+flags], eax", "push    [rsp+90h+right_quote]; right_quote", "mov     r9d, eax; flags", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdi, r14; buffer", "lea     r15, [rsp+0A0h+quoting_style]", "lea     rax, [r15+8]", "push    rax; quote_these_too", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_1826B"], ["mov~eax,[rsp+0]", "sub~rsp,0", "mov~r11,<TAG>", "mov~r14,[rbx+0]", "mov~rcx,0", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~[rsp+0]", "mov~r9d,eax", "push~[rsp+0]", "mov~rdi,r14", "lea~r15,[rsp+0]", "lea~rax,[r15+0]", "push~rax", "mov~r8d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [3, 1, 3, 3, 2, 18, 0, 2, 3, 2, 0.05454545454545454, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r15, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+right_quote]; right_quote", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdx, arg; arg", "push    r15; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r15,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 5, 0, 0, 5, 0, 1, 2, 3, 0.10909090909090909, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_18221"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 3, 3, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r14", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 1, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 1, 11, 1, 1, 32, 4, 2, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, arg", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "mov     edx, [rsp+88h+quoting_style+0Ch]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+right_quote], rax", "mov     eax, edx", "not     eax", "movaps  [rsp+88h+var_68], xmm0", "and     eax, 4000000h", "xor     eax, edx", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "mov     [rsp+88h+quoting_style+0Ch], eax", "movaps  xmmword ptr [rsp+88h+left_quote], xmm0", "call    ___errno_location", "mov     rbp, rax", "mov     r13d, [rax]", "mov     eax, cs:nslots", "mov     rbx, cs:slotvec_0", "test    eax, eax", "jg      short loc_181A7"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,arg", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "mov~edx,[rsp+0]", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "mov~eax,edx", "not~eax", "movaps~[rsp+0],xmm0", "and~eax,0", "xor~eax,edx", "movdqa~xmm0,<TAG>", "mov~[rsp+0],eax", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~eax,<TAG>", "mov~rbx,<TAG>", "test~eax,eax", "jg~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 2, 4, 0.04090909090909091, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 10, 0, 0, 3, 0, 1, 1, 5, 0.02727272727272727, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_18298"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [4, 0, 7, 4, 1, 10, 1, 1, 3, 3, 0.1909090909090909, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [1, 0, 8, 0, 1, 8, 1, 2, 2, 4, 0.04090909090909091, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_1817A"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [9, 8, 15, 2, 12, 15, 1, 122, 0.075, 9, 11], "succs": [[11, 5], [0, 3], [0], [2, 4], [2], [], [8, 1], [9], [10, 7], [1], [9], []], "fname": "quotearg_colon", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 4, 0, 1, 4, 0, 1, 0, 0, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 5, 0, 0, 5, 0, 1, 2, 3, 0.10909090909090909, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_18424"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 10, 0, 0, 3, 0, 1, 1, 5, 0.02727272727272727, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_18498"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 1, 11, 1, 1, 34, 4, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r15, argsize", "push    r13", "push    r12", "mov     r14, arg", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "mov     edx, [rsp+88h+quoting_style+0Ch]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+right_quote], rax", "mov     eax, edx", "not     eax", "movaps  [rsp+88h+var_68], xmm0", "and     eax, 4000000h", "xor     eax, edx", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "mov     [rsp+88h+quoting_style+0Ch], eax", "movaps  xmmword ptr [rsp+88h+left_quote], xmm0", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     [rsp+88h+var_80], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      short loc_183AD"], ["push~r15", "push~r14", "mov~r15,argsize", "push~r13", "push~r12", "mov~r14,arg", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "mov~edx,[rsp+0]", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "mov~eax,edx", "not~eax", "movaps~[rsp+0],xmm0", "and~eax,0", "xor~eax,edx", "movdqa~xmm0,<TAG>", "mov~[rsp+0],eax", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]], [0, 0, 2, 0, 0, 6, 1, 1, 2, 1, 0.16363636363636364, ["mov     eax, [rsp+88h+var_80]", "mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [r13+0], eax", "mov     rax, rbp", "jnz     short loc_184BE"], ["mov~eax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[r13+0],eax", "mov~rax,rbp", "jnz~FOO"]], [2, 1, 6, 2, 1, 23, 1, 2, 1, 2, 0.2727272727272727, ["mov     eax, [rsp+88h+quoting_style+4]", "sub     rsp, 8", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+90h+flags], eax", "push    [rsp+90h+right_quote]; right_quote", "mov     r9d, eax; flags", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdi, rbp; buffer", "lea     r12, [rsp+0A0h+quoting_style]", "lea     rax, [r12+8]", "push    rax; quote_these_too", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_1846A"], ["mov~eax,[rsp+0]", "sub~rsp,0", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "mov~rcx,argsize", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~[rsp+0]", "mov~r9d,eax", "push~[rsp+0]", "mov~rdi,rbp", "lea~r12,[rsp+0]", "lea~rax,[r12+0]", "push~rax", "mov~r8d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [2, 1, 3, 3, 2, 18, 0, 2, 3, 2, 0.05454545454545454, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r12, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+right_quote]; right_quote", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdx, arg; arg", "push    r12; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r12,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r12", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [4, 0, 7, 4, 1, 10, 1, 1, 3, 3, 0.1909090909090909, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [1, 0, 8, 0, 1, 8, 1, 2, 2, 4, 0.04090909090909091, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_18380"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 2, 4, 0.04090909090909091, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 1, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [9, 8, 15, 3, 12, 15, 0, 125, 0.075, 9, 11], "succs": [[6], [0, 6], [8, 9], [2, 5], [10, 11], [1, 4], [4], [5], [7], [7], [], []], "fname": "quotearg_colon_mem", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 16, 0, 1, 17, 1, 2, 0, 0, 0.05514705882352941, ["pxor    xmm0, xmm0", "movsxd  rbx, edi", "mov     r12, arg", "mov     [rsp+88h+options.style], esi", "mov     [rsp+88h+s], esi", "mov     [rsp+88h+options.flags], 0", "movups  xmmword ptr [rsp+88h+options.left_quote], xmm0", "movdqa  xmm0, cs:xmmword_215F0", "movups  xmmword ptr [rsp+88h+options.quote_these_too], xmm0", "pxor    xmm0, xmm0", "movups  xmmword ptr [rsp+88h+options.quote_these_too+10h], xmm0", "call    ___errno_location", "test    ebx, ebx", "mov     rbp, rax", "mov     r13d, [rax]", "mov     r15, cs:slotvec_0", "js      loc_186F1"], ["pxor~xmm0,xmm0", "movsxd~rbx,edi", "mov~r12,arg", "mov~[rsp+0],esi", "mov~[rsp+0],esi", "mov~[rsp+0],0", "movups~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "pxor~xmm0,xmm0", "movups~[mmword ptr [rsp+0],xmm0", "call~FOO", "test~ebx,ebx", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~r15,<TAG>", "js~FOO"]], [1, 1, 17, 1, 0, 12, 1, 1, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "cmp     esi, 0Ah", "jz      loc_186F1"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~esi,0", "jz~FOO"]], [0, 0, 2, 0, 0, 5, 1, 1, 5, -1, 0.09558823529411764, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbp+0], r13d", "mov     rax, r14", "jnz     short loc_186F6"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[rbp+0],r13d", "mov~rax,r14", "jnz~FOO"]], [3, 1, 6, 4, 1, 21, 0, 2, 4, -1, 0.19852941176470587, ["shl     n, 4", "sub     rsp, 8", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "add     rbx, r15", "mov     r11, [rbx]", "mov     r14, [rbx+8]", "push    rdx; right_quote", "push    rax; left_quote", "mov     rdx, arg; arg", "lea     r15, [rsp+0A0h+options]", "mov     rsi, r11; buffersize", "mov     rdi, r14; buffer", "lea     rax, [r15+8]", "push    rax; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_1868D"], ["shl~n,0", "sub~rsp,0", "mov~rcx,0", "add~rbx,r15", "mov~r11,<TAG>", "mov~r14,[rbx+0]", "push~rdx", "push~rax", "mov~rdx,arg", "lea~r15,[rsp+0]", "mov~rsi,r11", "mov~rdi,r14", "lea~rax,[r15+0]", "push~rax", "mov~r9d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,rax", "ja~FOO"]], [3, 1, 3, 3, 2, 18, 0, 2, 6, -1, 0.022058823529411763, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r15, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+options.right_quote]; right_quote", "push    [rsp+98h+options.left_quote]; left_quote", "mov     rdx, arg; arg", "push    r15; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+options.style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "add~r15,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 3, 1, 0.05514705882352941, ["cmp     ebx, 7FFFFFFFh", "jz      loc_186FB"], ["cmp~ebx,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 14, 0, 0, 3, 0, 1, 2, 2, 0.10294117647058823, ["cmp     ebx, cs:nslots", "mov     r8d, [rsp+88h+s]", "jl      loc_186E0"], ["cmp~ebx,<TAG>", "mov~r8d,[rsp+0]", "jl~FOO"]], [0, 0, 8, 0, 1, 4, 0, 1, 5, -1, 0.034926470588235295, ["mov     rdi, r15; p", "call    xrealloc", "mov     r15, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r15", "call~FOO", "mov~r15,rax", "mov~<TAG>,rax"]], [1, 0, 10, 1, 0, 6, 0, 1, 4, -1, 0.06985294117647059, ["lea     r14d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r14d", "shl     rsi, 4; n", "cmp     r15, rax", "jz      loc_186B8"], ["lea~r14d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r14d", "shl~rsi,0", "cmp~r15,rax", "jz~FOO"]], [1, 0, 7, 0, 0, 4, 2, 1, 3, -1, 0.07720588235294118, ["xor     eax, eax", "xor     edx, edx", "mov     [rsp+88h+s], 1", "jmp     loc_185D2"], ["xor~eax,eax", "xor~edx,edx", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 7, 4, 1, 16, 2, 1, 6, -1, 0.10294117647058823, ["movsxd  rdi, cs:nslots", "mov     edx, r14d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r15; s", "shl     rdx, 4; n", "call    _memset", "mov     eax, [rsp+88h+options.flags]", "mov     rdx, [rsp+88h+options.right_quote]", "mov     r8d, [rsp+88h+options.style]; quoting_style", "mov     cs:nslots, r14d", "or      eax, 1", "mov     [rsp+88h+s], eax", "mov     rax, [rsp+88h+options.left_quote]"], ["movsxd~rdi,<TAG>", "mov~edx,r14d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r15", "shl~rdx,0", "call~FOO", "mov~eax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,r14d", "or~eax,0", "mov~[rsp+0],eax", "mov~rax,[rsp+0]"]], [0, 0, 8, 0, 1, 7, 1, 2, 5, -1, 0.034926470588235295, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r15, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_18590"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r15,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 5, 0, 0, 5, 0, 1, 5, -1, 0.07352941176470588, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_18642"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 6, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+88h+buffersize], rsi", "call    free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r14", "mov~[rsp+0],rsi", "call~FOO", "mov~rsi,[rsp+0]"]], [0, 1, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [11, 8, 21, 1, 18, 22, 2, 135, 0.05127, 6, 14], "succs": [[8, 17], [0, 17], [16, 7], [2, 14], [2], [], [10, 5], [], [11, 6], [12], [9, 13], [3], [3], [12], [4, 15], [4], [], []], "fname": "quotearg_n_style_colon", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[3, 1, 3, 3, 2, 18, 0, 2, 0, 0, 0.0196078431372549, ["mov     rdi, rsi; n", "mov     [rsp+88h+right_quote], rsi", "add     r14, 8", "call    xmalloc", "sub     rsp, 8", "mov     [r15+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+var_48]; right_quote", "push    [rsp+98h+var_58+8]; left_quote", "mov     rdx, arg; arg", "push    r14; quote_these_too", "mov     r9d, dword ptr [rsp+0A8h+left_quote]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+right_quote]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r14,0", "call~FOO", "sub~rsp,0", "mov~[r15+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r14", "mov~r9d,[word ptr [rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 5, 0, 0, 5, 0, 1, 6, -1, 0.07189542483660132, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [r15], rsi", "jz      short loc_1889A"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 7, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+right_quote], rsi", "call    free", "mov     rsi, [rsp+88h+right_quote]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 1, 0, 1, 0, 8, 0, 0, 7, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 5, 1, 1, 6, -1, 0.09150326797385622, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbx], r13d", "mov     rax, rbp", "jnz     short loc_18948"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~<TAG>,r13d", "mov~rax,rbp", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 1, 18, 1, 0, 21, 2, 1, 0, 5, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "test    left_quote_0, left_quote_0", "mov     [rsp+88h+quoting_style], 0Ah", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+var_48], rax", "movaps  [rsp+88h+var_68], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+var_58], xmm0", "jz      loc_18943"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "test~left_quote_0,left_quote_0", "mov~[rsp+0],0", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "movaps~[rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "jz~FOO"]], [0, 0, 17, 0, 0, 2, 1, 1, 1, 4, 0.05228758169934641, ["test    right_quote_0, right_quote_0", "jz      loc_18943"], ["test~right_quote_0,right_quote_0", "jz~FOO"]], [0, 0, 16, 0, 1, 12, 1, 2, 2, 3, 0.09803921568627451, ["movsxd  r15, edi", "mov     r12, arg", "mov     [rsp+88h+var_58+8], left_quote_0", "mov     [rsp+88h+left_quote], left_quote_0", "mov     [rsp+88h+var_48], right_quote_0", "mov     [rsp+88h+right_quote], right_quote_0", "call    ___errno_location", "test    r15d, r15d", "mov     rbx, rax", "mov     r13d, [rax]", "mov     r14, cs:slotvec_0", "js      loc_18943"], ["movsxd~r15,edi", "mov~r12,arg", "mov~[rsp+0],left_quote_0", "mov~[rsp+0],left_quote_0", "mov~[rsp+0],right_quote_0", "mov~<TAG>,right_quote_0", "call~FOO", "test~r15d,r15d", "mov~rbx,rax", "mov~r13d,<TAG>", "mov~r14,<TAG>", "js~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 8, 0, 1, 4, 0, 1, 6, -1, 0.032679738562091505, ["mov     rdi, r14; p", "call    xrealloc", "mov     r14, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r14", "call~FOO", "mov~r14,rax", "mov~<TAG>,rax"]], [1, 0, 10, 1, 0, 6, 0, 1, 5, -1, 0.07189542483660132, ["lea     ebp, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, ebp", "shl     rsi, 4; n", "cmp     r14, rax", "jz      loc_18910"], ["lea~ebp,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,ebp", "shl~rsi,0", "cmp~r14,rax", "jz~FOO"]], [0, 0, 8, 0, 1, 7, 1, 2, 6, -1, 0.032679738562091505, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r14, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_187EF"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r14,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 4, 1, 0.06535947712418301, ["cmp     r15d, 7FFFFFFFh", "jz      loc_1894D"], ["cmp~r15d,0", "jz~FOO"]], [0, 0, 14, 0, 0, 4, 0, 1, 3, 2, 0.13725490196078433, ["cmp     r15d, cs:nslots", "mov     rdx, [rsp+88h+right_quote]", "mov     rsi, [rsp+88h+left_quote]", "jl      loc_18938"], ["cmp~r15d,<TAG>", "mov~rdx,<TAG>", "mov~rsi,[rsp+0]", "jl~FOO"]], [4, 1, 6, 4, 1, 23, 1, 2, 5, -1, 0.19607843137254902, ["mov     r9d, [rsp+88h+quoting_style+4]", "shl     n, 4", "sub     rsp, 8", "add     r15, r14", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     r11, [r15]", "mov     rbp, [r15+8]", "or      r9d, 1; flags", "mov     dword ptr [rsp+90h+left_quote], r9d", "push    rdx; right_quote", "mov     rdx, arg; arg", "push    rsi; left_quote", "mov     rdi, rbp; buffer", "mov     rsi, r11; buffersize", "lea     r14, [rsp+0A0h+quoting_style]", "lea     rax, [r14+8]", "push    rax; quote_these_too", "mov     [rsp+0A8h+right_quote], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+right_quote]", "cmp     r11, rax", "ja      short loc_188E4"], ["mov~r9d,[rsp+0]", "shl~n,0", "sub~rsp,0", "add~r15,r14", "mov~rcx,0", "mov~r11,<TAG>", "mov~rbp,[r15+0]", "or~r9d,0", "mov~[word ptr [rsp+0],r9d", "push~rdx", "mov~rdx,arg", "push~rsi", "mov~rdi,rbp", "mov~rsi,r11", "lea~r14,[rsp+0]", "lea~rax,[r14+0]", "push~rax", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 4, -1, 0.09150326797385622, ["mov     r8d, 0Ah", "jmp     loc_18824"], ["mov~r8d,0", "jmp~FOO"]], [2, 0, 7, 4, 1, 13, 1, 1, 7, -1, 0.09150326797385622, ["movsxd  rdi, cs:nslots", "mov     edx, ebp", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r14; s", "shl     rdx, 4; n", "call    _memset", "mov     rdx, [rsp+88h+var_48]", "mov     rsi, [rsp+88h+var_58+8]", "mov     r8d, [rsp+88h+quoting_style]; quoting_style", "mov     cs:nslots, ebp"], ["movsxd~rdi,<TAG>", "mov~edx,ebp", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r14", "shl~rdx,0", "call~FOO", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,ebp"]]], "func_feature": [11, 8, 22, 4, 19, 24, 0, 139, 0.05538, 9, 14], "succs": [[4], [0, 2], [0], [], [9, 3], [], [5, 7], [8, 5], [5, 15], [], [18], [10, 12], [18], [], [11, 13], [17, 14], [1, 4], [16], [16]], "fname": "quotearg_n_custom", "n_num": 19}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 1, 18, 1, 0, 21, 2, 1, 0, 5, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+o.style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "test    left_quote, left_quote", "mov     [rsp+88h+o.style], 0Ah", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+o.right_quote], rax", "movaps  xmmword ptr [rsp+88h+o.quote_these_too+8], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+o.quote_these_too+18h], xmm0", "jz      loc_18BA3"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "test~left_quote,left_quote", "mov~[rsp+0],0", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "movaps~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "jz~FOO"]], [0, 0, 17, 0, 0, 2, 1, 1, 1, 4, 0.05228758169934641, ["test    right_quote_0, right_quote_0", "jz      loc_18BA3"], ["test~right_quote_0,right_quote_0", "jz~FOO"]], [0, 0, 16, 0, 1, 14, 1, 2, 2, 3, 0.09803921568627451, ["movsxd  rbp, edi", "mov     r12, left_quote", "mov     r14, arg", "mov     r15, argsize", "mov     [rsp+88h+o.left_quote], left_quote", "mov     [rsp+88h+o.right_quote], right_quote_0", "mov     [rsp+88h+right_quote], right_quote_0", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "test    ebp, ebp", "mov     rbx, cs:slotvec_0", "mov     [rsp+88h+var_80], eax", "js      loc_18BA3"], ["movsxd~rbp,edi", "mov~r12,left_quote", "mov~r14,arg", "mov~r15,argsize", "mov~[rsp+0],left_quote", "mov~[rsp+0],right_quote_0", "mov~<TAG>,right_quote_0", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "test~ebp,ebp", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [0, 0, 8, 0, 1, 4, 0, 1, 6, -1, 0.032679738562091505, ["mov     rdi, rbx; p", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [1, 0, 10, 1, 0, 6, 0, 1, 5, -1, 0.07189542483660132, ["lea     r12d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r12d", "shl     rsi, 4; n", "cmp     rbx, rax", "jz      loc_18B70"], ["lea~r12d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r12d", "shl~rsi,0", "cmp~rbx,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 6, 1, 1, 6, -1, 0.09150326797385622, ["mov     eax, [rsp+88h+var_80]", "mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [r13+0], eax", "mov     rax, rbp", "jnz     short loc_18BA8"], ["mov~eax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[r13+0],eax", "mov~rax,rbp", "jnz~FOO"]], [0, 0, 8, 0, 1, 7, 1, 2, 6, -1, 0.032679738562091505, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_18A4B"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 14, 0, 0, 3, 0, 1, 3, 2, 0.13725490196078433, ["cmp     ebp, cs:nslots", "mov     rdx, [rsp+88h+right_quote]", "jl      loc_18B98"], ["cmp~ebp,<TAG>", "mov~rdx,<TAG>", "jl~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 4, 1, 0.06535947712418301, ["cmp     ebp, 7FFFFFFFh", "jz      loc_18BAD"], ["cmp~ebp,0", "jz~FOO"]], [2, 1, 3, 3, 2, 18, 0, 2, 7, -1, 0.0196078431372549, ["mov     rdi, rsi; n", "mov     [rsp+88h+right_quote], rsi", "add     r12, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+o.right_quote]; right_quote", "push    [rsp+98h+o.left_quote]; left_quote", "mov     rdx, arg; arg", "push    r12; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+o.style]; quoting_style", "mov     rsi, [rsp+0A8h+right_quote]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r12,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r12", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 5, 0, 0, 5, 0, 1, 6, -1, 0.07189542483660132, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_18AF6"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 7, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+right_quote], rsi", "call    free", "mov     rsi, [rsp+88h+right_quote]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [3, 1, 6, 4, 1, 23, 1, 2, 5, -1, 0.19607843137254902, ["mov     r9d, [rsp+88h+o.flags]", "shl     n, 4", "sub     rsp, 8", "add     rbx, rbp", "mov     rcx, argsize; argsize", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "or      r9d, 1; flags", "mov     [rsp+90h+flags], r9d", "push    rdx; right_quote", "mov     rdx, arg; arg", "push    r12; left_quote", "mov     rsi, r11; buffersize", "mov     rdi, rbp; buffer", "lea     r12, [rsp+0A0h+o]", "lea     rax, [r12+8]", "push    rax; quote_these_too", "mov     [rsp+0A8h+right_quote], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+right_quote]", "cmp     r11, rax", "ja      short loc_18B3C"], ["mov~r9d,[rsp+0]", "shl~n,0", "sub~rsp,0", "add~rbx,rbp", "mov~rcx,argsize", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "or~r9d,0", "mov~[rsp+0],r9d", "push~rdx", "mov~rdx,arg", "push~r12", "mov~rsi,r11", "mov~rdi,rbp", "lea~r12,[rsp+0]", "lea~rax,[r12+0]", "push~rax", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 4, -1, 0.09150326797385622, ["mov     r8d, 0Ah", "jmp     loc_18A82"], ["mov~r8d,0", "jmp~FOO"]], [2, 0, 7, 4, 1, 13, 1, 1, 7, -1, 0.09150326797385622, ["movsxd  rdi, cs:nslots", "mov     edx, r12d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, r12d", "mov     rdx, [rsp+88h+o.right_quote]", "mov     r12, [rsp+88h+o.left_quote]", "mov     r8d, [rsp+88h+o.style]; quoting_style"], ["movsxd~rdi,<TAG>", "mov~edx,r12d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,r12d", "mov~rdx,[rsp+0]", "mov~r12,[rsp+0]", "mov~r8d,[rsp+0]"]], [0, 1, 0, 1, 0, 8, 0, 0, 7, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]]], "func_feature": [11, 8, 22, 2, 19, 24, 0, 141, 0.05538, 9, 14], "succs": [[], [0, 2], [0, 3], [0, 9], [17], [8, 4], [], [18, 6], [17], [16, 11], [], [10, 5], [7], [12, 14], [12], [13, 7], [15], [15], []], "fname": "quotearg_n_custom_mem", "n_num": 19}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 11, 0, 1, 14, 1, 2, 0, 0, 0.1208791208791209, ["mov     [rsp+88h+var_48], right_quote_0", "mov     [rsp+88h+right_quote], right_quote_0", "mov     r15, left_quote", "mov     r12, arg", "mov     [rsp+88h+var_58+8], left_quote", "call    ___errno_location", "mov     rbp, rax", "mov     r13d, [rax]", "mov     eax, cs:nslots", "mov     rbx, cs:slotvec_0", "mov     r8d, 0Ah", "mov     rsi, [rsp+88h+right_quote]", "test    eax, eax", "jg      short loc_18CC8"], ["mov~[rsp+0],right_quote_0", "mov~<TAG>,right_quote_0", "mov~r15,left_quote", "mov~r12,arg", "mov~[rsp+0],left_quote", "call~FOO", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~r8d,0", "mov~rsi,<TAG>", "test~eax,eax", "jg~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 1, 1, 0.06593406593406594, ["test    right_quote_0, right_quote_0", "jz      loc_18DDB"], ["test~right_quote_0,right_quote_0", "jz~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 4, -1, 0.030219780219780223, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 10, 0, 0, 3, 0, 1, 3, -1, 0.049450549450549455, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_18DB0"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [0, 0, 5, 0, 0, 5, 0, 1, 4, -1, 0.08791208791208792, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_18D38"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [3, 1, 6, 2, 1, 21, 1, 2, 3, -1, 0.23076923076923078, ["mov     r9d, [rsp+88h+quoting_style+4]", "sub     rsp, 8", "mov     r11, [rbx]", "mov     r14, [rbx+8]", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "or      r9d, 1; flags", "mov     [rsp+90h+flags], r9d", "push    rsi; right_quote", "mov     rdi, r14; buffer", "push    r15; left_quote", "mov     rsi, r11; buffersize", "lea     r15, [rsp+0A0h+quoting_style]", "lea     rax, [r15+8]", "push    rax; quote_these_too", "mov     [rsp+0A8h+right_quote], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+right_quote]", "cmp     r11, rax", "ja      short loc_18D82"], ["mov~r9d,[rsp+0]", "sub~rsp,0", "mov~r11,<TAG>", "mov~r14,[rbx+0]", "mov~rcx,0", "mov~rdx,arg", "or~r9d,0", "mov~[rsp+0],r9d", "push~rsi", "mov~rdi,r14", "push~r15", "mov~rsi,r11", "lea~r15,[rsp+0]", "lea~rax,[r15+0]", "push~rax", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 5, 1, 1, 4, -1, 0.1208791208791209, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbp+0], r13d", "mov     rax, r14", "jnz     short loc_18DD6"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[rbp+0],r13d", "mov~rax,r14", "jnz~FOO"]], [1, 0, 8, 0, 1, 8, 1, 2, 4, -1, 0.030219780219780223, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_18C8C"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [4, 0, 7, 4, 1, 13, 1, 1, 5, -1, 0.11538461538461539, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     rsi, [rsp+88h+var_48]", "mov     left_quote, [rsp+88h+var_58+8]", "mov     r8d, [rsp+88h+quoting_style]; quoting_style", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~rsi,[rsp+0]", "mov~left_quote,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 4, 0, 1, 4, 0, 1, 5, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+88h+right_quote], rsi", "call    free", "mov     rsi, [rsp+88h+right_quote]"], ["mov~rdi,r14", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [3, 1, 3, 3, 2, 18, 0, 2, 5, -1, 0.03296703296703297, ["mov     rdi, rsi; n", "mov     [rsp+88h+right_quote], rsi", "add     r15, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+var_48]; right_quote", "push    [rsp+98h+var_58+8]; left_quote", "mov     rdx, arg; arg", "push    r15; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+right_quote]; buffersize", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r15,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 1, 14, 1, 0, 21, 2, 1, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "test    left_quote, left_quote", "mov     [rsp+88h+quoting_style], 0Ah", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+var_48], rax", "movaps  [rsp+88h+var_68], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+var_58], xmm0", "jz      loc_18DDB"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "test~left_quote,left_quote", "mov~[rsp+0],0", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "movaps~[rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "jz~FOO"]]], "func_feature": [10, 8, 18, 4, 15, 19, 0, 129, 0.05897, 9, 11], "succs": [[3, 5], [0, 13], [9], [8, 2], [10, 11], [4, 7], [], [12, 6], [9], [5], [11], [7], [], [], [1, 13]], "fname": "quotearg_custom", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[4, 0, 7, 4, 1, 13, 1, 1, 0, 0, 0.11538461538461539, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     rsi, [rsp+88h+var_48]", "mov     left_quote, [rsp+88h+var_58+8]", "mov     r8d, [rsp+88h+quoting_style]; quoting_style", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~rsi,[rsp+0]", "mov~left_quote,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,0"]], [1, 0, 8, 0, 1, 8, 1, 2, 4, -1, 0.030219780219780223, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_18EB2"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 4, -1, 0.030219780219780223, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 13, 0, 0, 2, 1, 1, 1, 1, 0.06593406593406594, ["test    right_quote_0, right_quote_0", "jz      loc_18FFB"], ["test~right_quote_0,right_quote_0", "jz~FOO"]], [1, 1, 14, 1, 0, 21, 2, 1, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "test    left_quote, left_quote", "mov     [rsp+88h+quoting_style], 0Ah", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+var_48], rax", "movaps  [rsp+88h+var_68], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+var_58], xmm0", "jz      loc_18FFB"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "test~left_quote,left_quote", "mov~[rsp+0],0", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "movaps~[rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "jz~FOO"]], [1, 0, 11, 0, 1, 16, 1, 2, 2, -1, 0.1208791208791209, ["mov     [rsp+88h+var_48], right_quote_0", "mov     [rsp+88h+right_quote], right_quote_0", "mov     r12, left_quote", "mov     r14, arg", "mov     r15, argsize", "mov     [rsp+88h+var_58+8], left_quote", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     r8d, 0Ah", "mov     rsi, [rsp+88h+right_quote]", "mov     [rsp+88h+var_80], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      short loc_18EEE"], ["mov~[rsp+0],right_quote_0", "mov~<TAG>,right_quote_0", "mov~r12,left_quote", "mov~r14,arg", "mov~r15,argsize", "mov~[rsp+0],left_quote", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~r8d,0", "mov~rsi,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [0, 0, 2, 0, 0, 6, 1, 1, 4, -1, 0.1208791208791209, ["mov     eax, [rsp+88h+var_80]", "mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [r13+0], eax", "mov     rax, rbp", "jnz     short loc_18FF6"], ["mov~eax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[r13+0],eax", "mov~rax,rbp", "jnz~FOO"]], [0, 0, 10, 0, 0, 3, 0, 1, 3, -1, 0.049450549450549455, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_18FD0"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 5, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+right_quote], rsi", "call    free", "mov     rsi, [rsp+88h+right_quote]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 5, 0, 0, 5, 0, 1, 4, -1, 0.08791208791208792, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_18F5B"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [2, 1, 6, 2, 1, 21, 1, 2, 3, -1, 0.23076923076923078, ["mov     r9d, [rsp+88h+quoting_style+4]", "sub     rsp, 8", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "or      r9d, 1; flags", "mov     [rsp+90h+flags], r9d", "push    rsi; right_quote", "mov     rdi, rbp; buffer", "push    r12; left_quote", "mov     rsi, r11; buffersize", "lea     r12, [rsp+0A0h+quoting_style]", "lea     rax, [r12+8]", "push    rax; quote_these_too", "mov     [rsp+0A8h+right_quote], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+right_quote]", "cmp     r11, rax", "ja      short loc_18FA1"], ["mov~r9d,[rsp+0]", "sub~rsp,0", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "mov~rcx,argsize", "mov~rdx,arg", "or~r9d,0", "mov~[rsp+0],r9d", "push~rsi", "mov~rdi,rbp", "push~r12", "mov~rsi,r11", "lea~r12,[rsp+0]", "lea~rax,[r12+0]", "push~rax", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 1, 3, 3, 2, 18, 0, 2, 5, -1, 0.03296703296703297, ["mov     rdi, rsi; n", "mov     [rsp+88h+right_quote], rsi", "add     r12, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+var_48]; right_quote", "push    [rsp+98h+var_58+8]; left_quote", "mov     rdx, arg; arg", "push    r12; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+right_quote]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r12,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r12", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [10, 8, 18, 5, 15, 19, 0, 132, 0.05897, 9, 11], "succs": [[11], [0], [0], [5, 14], [3, 14], [8, 11], [], [12, 6], [1, 2], [13], [9, 13], [10, 7], [], [7], []], "fname": "quotearg_custom_mem", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 10, 0, 0, 2, 0, 1, 0, 0, 0.0641025641025641, ["cmp     ebp, 7FFFFFFFh", "jz      loc_191AE"], ["cmp~ebp,0", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 1, 2, 0.07051282051282051, ["cmp     ebp, cs:nslots", "jl      short loc_1909D"], ["cmp~ebp,<TAG>", "jl~FOO"]], [0, 0, 6, 0, 1, 7, 1, 2, 4, -1, 0.04487179487179487, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_19075"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 8, 1, 0, 6, 0, 1, 3, -1, 0.08974358974358974, ["lea     r15d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r15d", "shl     rsi, 4; n", "cmp     rbx, rax", "jz      loc_19188"], ["lea~r15d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r15d", "shl~rsi,0", "cmp~rbx,rax", "jz~FOO"]], [1, 1, 1, 2, 2, 17, 0, 2, 4, -1, 0.01282051282051282, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "push    cs:quote_quoting_options.right_quote; right_quote", "push    cs:quote_quoting_options.left_quote; left_quote", "mov     rcx, argsize; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,argsize", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.10256410256410256, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_19121"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+48h+buffersize], rsi", "call    free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 13, 1, 1, 17, 1, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r14, argsize", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "movsxd  rbp, edi", "sub     rsp, 18h", "call    ___errno_location", "mov     r12, rax", "mov     eax, [rax]", "test    ebp, ebp", "mov     rbx, cs:slotvec_0", "mov     [rsp+48h+var_40], eax", "js      loc_191A9"], ["push~r15", "push~r14", "mov~r14,argsize", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "movsxd~rbp,edi", "sub~rsp,0", "call~FOO", "mov~r12,rax", "mov~eax,<TAG>", "test~ebp,ebp", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [1, 0, 0, 1, 0, 11, 0, 0, 3, -1, 0.0, ["mov     eax, [rsp+48h+var_40]", "mov     [r12], eax", "add     rsp, 18h", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~<TAG>,eax", "add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~argsize", "pop~r15", "retn"]], [3, 1, 4, 4, 1, 24, 1, 2, 2, -1, 0.1794871794871795, ["mov     eax, cs:quote_quoting_options.flags", "shl     n, 4", "lea     r15, quote_quoting_options.quote_these_too", "add     rbx, rbp", "sub     rsp, 8", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "mov     rcx, argsize; argsize", "or      eax, 1", "mov     rdx, arg; arg", "mov     [rsp+50h+flags], eax", "push    cs:quote_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:quote_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rsi, r11; buffersize", "mov     rdi, rbp; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_19169"], ["mov~eax,<TAG>", "shl~n,0", "lea~r15,<TAG>", "add~rbx,rbp", "sub~rsp,0", "mov~r8d,<TAG>", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "mov~rcx,argsize", "or~eax,0", "mov~rdx,arg", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rsi,r11", "mov~rdi,rbp", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [0, 0, 6, 0, 1, 4, 0, 1, 4, -1, 0.04487179487179487, ["mov     rdi, rbx; p", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [2, 0, 5, 4, 1, 10, 1, 1, 5, -1, 0.1282051282051282, ["movsxd  rdi, cs:nslots", "mov     edx, r15d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, r15d"], ["movsxd~rdi,<TAG>", "mov~edx,r15d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,r15d"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [10, 4, 17, 1, 14, 17, 0, 111, 0.05266, 9, 13], "succs": [[3, 13], [0, 10], [12], [2, 11], [9], [4, 6], [4], [], [1, 7], [], [9, 5], [12], [10], []], "fname": "quote_n_mem", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 2, 0, 1, 4, 0, 1, 0, 0, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+48h+buffersize], rsi", "call    free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 3, 0, 0, 5, 0, 1, 2, -1, 0.16666666666666666, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_192C4"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [1, 0, 0, 1, 0, 11, 0, 0, 2, -1, 0.0, ["mov     eax, [rsp+48h+var_40]", "mov     [r12], eax", "add     rsp, 18h", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~<TAG>,eax", "add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~argsize", "pop~r15", "retn"]], [2, 1, 4, 2, 1, 22, 1, 2, 1, -1, 0.2777777777777778, ["mov     eax, cs:quote_quoting_options.flags", "mov     r11, [rbx]", "lea     r15, quote_quoting_options.quote_these_too", "mov     rbp, [rbx+8]", "sub     rsp, 8", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+50h+flags], eax", "push    cs:quote_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:quote_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rdi, rbp; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_1930C"], ["mov~eax,<TAG>", "mov~r11,<TAG>", "lea~r15,<TAG>", "mov~rbp,[rbx+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rdi,rbp", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [1, 1, 1, 2, 2, 17, 0, 2, 3, -1, 0.027777777777777776, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "push    cs:quote_quoting_options.right_quote; right_quote", "push    cs:quote_quoting_options.left_quote; left_quote", "mov     rcx, argsize; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,argsize", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [1, 0, 6, 0, 1, 8, 1, 2, 2, 0, 0.048611111111111105, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_1921A"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 8, 0, 0, 3, 0, 1, 1, 1, 0.041666666666666664, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_19330"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [4, 0, 5, 4, 1, 10, 1, 1, 3, -1, 0.20833333333333331, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [1, 0, 6, 0, 1, 5, 0, 1, 2, -1, 0.048611111111111105, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [1, 0, 9, 1, 1, 17, 1, 2, 0, 2, 0.0, ["push    r15", "push    r14", "mov     r14, argsize", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "sub     rsp, 18h", "call    ___errno_location", "mov     r12, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     [rsp+48h+var_40], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      short loc_19247"], ["push~r15", "push~r14", "mov~r14,argsize", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "sub~rsp,0", "call~FOO", "mov~r12,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]]], "func_feature": [8, 4, 13, 1, 10, 13, 0, 102, 0.08194, 9, 10], "succs": [[4], [0, 4], [], [1, 2], [2], [7], [8, 5], [3], [7], [3, 6]], "fname": "quote_mem", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 0, 1, 0, 10, 0, 0, 0, 0, 0.0, ["mov     [rbp+0], r14d", "add     rsp, 18h", "mov     rax, r12", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     r14", "pop     r15", "retn"], ["mov~[rbp+0],r14d", "add~rsp,0", "mov~rax,r12", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~r14", "pop~r15", "retn"]], [4, 1, 4, 4, 1, 24, 1, 2, 2, -1, 0.1794871794871795, ["mov     eax, cs:quote_quoting_options.flags", "shl     n, 4", "sub     rsp, 8", "add     rbx, r15", "lea     r15, quote_quoting_options.quote_these_too", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "mov     r11, [rbx]", "mov     r12, [rbx+8]", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "or      eax, 1", "mov     rdx, arg; arg", "mov     [rsp+50h+flags], eax", "push    cs:quote_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:quote_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rsi, r11; buffersize", "mov     rdi, r12; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_194CB"], ["mov~eax,<TAG>", "shl~n,0", "sub~rsp,0", "add~rbx,r15", "lea~r15,<TAG>", "mov~r8d,<TAG>", "mov~r11,<TAG>", "mov~r12,[rbx+0]", "mov~rcx,0", "or~eax,0", "mov~rdx,arg", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rsi,r11", "mov~rdi,r12", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [2, 1, 1, 2, 2, 17, 0, 2, 4, -1, 0.01282051282051282, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "push    cs:quote_quoting_options.right_quote; right_quote", "push    cs:quote_quoting_options.left_quote; left_quote", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     r12, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,0", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~r12,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 6, 0, 1, 7, 1, 2, 4, -1, 0.04487179487179487, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r15, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_193CF"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r15,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 8, 1, 0, 6, 0, 1, 3, -1, 0.08974358974358974, ["lea     r12d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r12d", "shl     rsi, 4; n", "cmp     r15, rax", "jz      loc_194E8"], ["lea~r12d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r12d", "shl~rsi,0", "cmp~r15,rax", "jz~FOO"]], [1, 0, 13, 1, 1, 14, 1, 2, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "movsxd  rbx, edi", "sub     rsp, 18h", "call    ___errno_location", "test    ebx, ebx", "mov     r14d, [rax]", "mov     r15, cs:slotvec_0", "js      loc_19509"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "movsxd~rbx,edi", "sub~rsp,0", "call~FOO", "test~ebx,ebx", "mov~r14d,<TAG>", "mov~r15,<TAG>", "js~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.10256410256410256, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r12, rax", "mov     [rbx], rsi", "jz      short loc_1947F"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r12,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, -1, 0.0, ["mov     rdi, r12; ptr", "mov     [rsp+48h+buffersize], rsi", "call    free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,r12", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 6, 0, 1, 4, 0, 1, 4, -1, 0.04487179487179487, ["mov     rdi, r15; p", "call    xrealloc", "mov     r15, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r15", "call~FOO", "mov~r15,rax", "mov~<TAG>,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 2, 1, 0.0641025641025641, ["cmp     ebx, 7FFFFFFFh", "jz      loc_1950E"], ["cmp~ebx,0", "jz~FOO"]], [2, 0, 5, 4, 1, 10, 1, 1, 5, -1, 0.1282051282051282, ["movsxd  rdi, cs:nslots", "mov     edx, r12d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r15; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, r12d"], ["movsxd~rdi,<TAG>", "mov~edx,r12d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r15", "shl~rdx,0", "call~FOO", "mov~<TAG>,r12d"]], [0, 0, 11, 0, 0, 3, 0, 1, 1, 2, 0.07051282051282051, ["cmp     ebx, cs:nslots", "mov     rbp, rax", "jl      short loc_193F7"], ["cmp~ebx,<TAG>", "mov~rbp,rax", "jl~FOO"]]], "func_feature": [10, 4, 17, 0, 14, 17, 2, 108, 0.05266, 9, 13], "succs": [[], [0, 6], [0], [12], [8, 3], [9, 13], [2, 7], [2], [12], [], [], [10, 4], [1], [1, 11]], "fname": "quote_n", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 8, 0, 0, 3, 0, 1, 0, 0, 0.041666666666666664, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_19688"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 9, 1, 1, 15, 1, 2, 0, 2, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, arg", "push    rbp", "push    rbx", "sub     rsp, 18h", "call    ___errno_location", "mov     rbp, rax", "mov     r13d, [rax]", "mov     eax, cs:nslots", "mov     rbx, cs:slotvec_0", "test    eax, eax", "jg      short loc_195A1"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,arg", "push~rbp", "push~rbx", "sub~rsp,0", "call~FOO", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~eax,<TAG>", "mov~rbx,<TAG>", "test~eax,eax", "jg~FOO"]], [1, 0, 0, 1, 0, 10, 0, 0, 2, -1, 0.0, ["mov     [rbp+0], r13d", "add     rsp, 18h", "mov     rax, r14", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~[rbp+0],r13d", "add~rsp,0", "mov~rax,r14", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [3, 1, 4, 2, 1, 22, 1, 2, 1, -1, 0.2777777777777778, ["mov     eax, cs:quote_quoting_options.flags", "mov     r11, [rbx]", "lea     r15, quote_quoting_options.quote_these_too", "mov     r14, [rbx+8]", "sub     rsp, 8", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+50h+flags], eax", "push    cs:quote_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:quote_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rdi, r14; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_1966E"], ["mov~eax,<TAG>", "mov~r11,<TAG>", "lea~r15,<TAG>", "mov~r14,[rbx+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,0", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rdi,r14", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [2, 1, 1, 2, 2, 17, 0, 2, 3, -1, 0.027777777777777776, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "push    cs:quote_quoting_options.right_quote; right_quote", "push    cs:quote_quoting_options.left_quote; left_quote", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,0", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [1, 0, 6, 0, 1, 8, 1, 2, 2, 0, 0.048611111111111105, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_19574"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 2, -1, 0.16666666666666666, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_19622"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 3, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+48h+buffersize], rsi", "call    free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,r14", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [1, 0, 6, 0, 1, 5, 0, 1, 2, -1, 0.048611111111111105, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [4, 0, 5, 4, 1, 10, 1, 1, 3, -1, 0.20833333333333331, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]]], "func_feature": [8, 4, 13, 0, 10, 13, 10, 99, 0.08194, 9, 10], "succs": [[8, 5], [0, 3], [], [2, 6], [2], [9], [4, 7], [4], [9], [3]], "fname": "quote", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 0, 1, 0, 6, 0, 0, 0, 0, 0.0, ["add     rsp, 138h", "pop     dest_dirname", "pop     rbp", "pop     dest", "pop     source_dfd", "retn"], ["add~rsp,0", "pop~dest_dirname", "pop~rbp", "pop~dest", "pop~source_dfd", "retn"]], [0, 0, 2, 0, 1, 6, 1, 2, 3, 1, 0.21428571428571427, ["mov     rdi, dest_dirname; ptr", "call    free", "mov     rdx, [rsp+158h+var_30]", "xor     rdx, fs:28h", "mov     eax, ebp", "jnz     short loc_197D2"], ["mov~rdi,dest_dirname", "call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "mov~eax,ebp", "jnz~FOO"]], [1, 0, 5, 0, 2, 8, 1, 3, 2, 3, 0.0, ["call    ___errno_location", "mov     esi, [rax]; errnum", "lea     rdx, aS_0+2; format", "mov     rcx, dest_dirname", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     short loc_19738"], ["call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,dest_dirname", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 6, 0, 3, 13, 1, 4, 1, 3, 0.21428571428571427, ["mov     rdi, source_dirname; ptr", "call    free", "mov     rdi, dest; file", "call    dir_name", "lea     rcx, [rsp+158h+dest_dir_stats]; stat_buf", "mov     r8d, 100h; flag", "mov     rdx, rax; filename", "mov     esi, ebp; fildes", "mov     edi, 1; ver", "mov     source_dirname, rax", "call    ___fxstatat", "test    eax, eax", "jnz     short loc_19788"], ["mov~rdi,source_dirname", "call~FOO", "mov~rdi,dest", "call~FOO", "lea~rcx,[rsp+0]", "mov~r8d,0", "mov~rdx,rax", "mov~esi,ebp", "mov~edi,0", "mov~source_dirname,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 0, 4, 1, 1, 2, 2, 0.2857142857142857, ["xor     ebp, ebp", "mov     rax, [rsp+158h+dest_dir_stats.st_ino]", "cmp     [rsp+158h+source_dir_stats.st_ino], rax", "jnz     short loc_19759"], ["xor~ebp,ebp", "mov~rax,[rsp+0]", "cmp~[rsp+0],rax", "jnz~FOO"]], [1, 0, 7, 0, 2, 8, 1, 3, 1, 4, 0.0, ["call    ___errno_location", "mov     esi, [rax]; errnum", "lea     rdx, aS_0+2; format", "mov     rcx, source_dirname", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_19704"], ["call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,source_dirname", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [3, 0, 8, 1, 2, 22, 2, 3, 0, 4, 0.0, ["push    r13", "push    r12", "mov     r13d, edi", "push    rbp", "push    rbx", "mov     source_dfd, source; file", "mov     ebp, edx", "mov     r12, dest", "sub     rsp, 138h", "mov     rax, fs:28h", "mov     [rsp+158h+var_30], rax", "xor     eax, eax", "call    dir_name", "mov     rcx, rsp; stat_buf", "mov     r8d, 100h; flag", "mov     rdx, rax; filename", "mov     esi, r13d; fildes", "mov     edi, 1; ver", "mov     rbx, rax", "call    ___fxstatat", "test    eax, eax", "jnz     loc_197B0"], ["push~r13", "push~r12", "mov~r13d,edi", "push~rbp", "push~rbx", "mov~source_dfd,source", "mov~ebp,edx", "mov~r12,dest", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~rcx,rsp", "mov~r8d,0", "mov~rdx,rax", "mov~esi,r13d", "mov~edi,0", "mov~rbx,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 3, 0, 0, 3, 0, 0, 3, 2, 0.0, ["mov     rax, [rsp+158h+dest_dir_stats.st_dev]", "cmp     [rsp+158h+source_dir_stats.st_dev], rax", "setz    bpl"], ["mov~rax,[rsp+0]", "cmp~<TAG>,rax", "setz~bpl"]]], "func_feature": [11, 7, 17, 1, 9, 11, 2, 71, 0.07937, 2, 2], "succs": [[], [0, 7], [4], [2, 4], [8, 1], [3], [3, 5], [], [1]], "fname": "same_nameat_0", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 3, 0, 1, 6, 1, 2, 0, 0, 0.16666666666666666, ["mov     rdx, r14; n", "mov     rsi, r13; s2", "mov     rdi, r12; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_19819"], ["mov~rdx,r14", "mov~rsi,r13", "mov~rdi,r12", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 4, 19, 0, 5, 0, 2, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "mov     rbp, dest", "push    rbx", "mov     rbx, source", "call    last_component", "mov     rdi, dest; name", "mov     r12, rax", "call    last_component", "mov     rdi, r12; name", "mov     r13, rax", "call    base_len", "mov     rdi, r13; name", "mov     r14, rax", "call    base_len", "cmp     r14, rax", "jz      short loc_19828"], ["push~r14", "push~r13", "push~r12", "push~rbp", "mov~rbp,dest", "push~rbx", "mov~rbx,source", "call~FOO", "mov~rdi,dest", "mov~r12,rax", "call~FOO", "mov~rdi,r12", "mov~r13,rax", "call~FOO", "mov~rdi,r13", "mov~r14,rax", "call~FOO", "cmp~r14,rax", "jz~FOO"]], [1, 0, 1, 0, 0, 10, 0, 1, 2, 0, 0.16666666666666666, ["mov     rcx, dest; dest", "mov     rsi, source; source", "mov     edx, 0FFFFFF9Ch; dest_dfd", "pop     source", "pop     dest", "pop     r12", "pop     r13", "pop     r14", "mov     edi, edx; source_dfd", "jmp     same_nameat_0"], ["mov~rcx,dest", "mov~rsi,source", "mov~edx,0", "pop~source", "pop~dest", "pop~r12", "pop~r13", "pop~r14", "mov~edi,edx", "jmp~FOO"]], [0, 0, 0, 0, 0, 7, 1, 0, 1, -1, 0.0, ["pop     source", "xor     eax, eax", "pop     dest", "pop     r12", "pop     r13", "pop     r14", "retn"], ["pop~source", "xor~eax,eax", "pop~dest", "pop~r12", "pop~r13", "pop~r14", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []]], "func_feature": [5, 2, 8, 0, 5, 5, 1, 42, 0.06667, 0, 0], "succs": [[2, 3], [0, 3], [4], [], []], "fname": "same_name", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 3, 0, 1, 6, 1, 2, 0, 0, 0.16666666666666666, ["mov     rdx, source_baselen; n", "mov     rsi, dest_basename; s2", "mov     rdi, source_basename; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_198A9"], ["mov~rdx,source_baselen", "mov~rsi,dest_basename", "mov~rdi,source_basename", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 4, 1, 4, 24, 0, 5, 0, 2, 0.0, ["push    r15", "push    r14", "mov     r15d, edx", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbp, dest", "mov     rbx, source", "sub     rsp, 18h", "mov     [rsp+48h+source_dfd], edi", "mov     source_dfd_0, source; name", "call    last_component", "mov     rdi, dest; name", "mov     r12, rax", "call    last_component", "mov     rdi, source_basename; name", "mov     r13, rax", "call    base_len", "mov     rdi, dest_basename; name", "mov     r14, rax", "call    base_len", "cmp     source_baselen, dest_baselen", "jz      short loc_198C0"], ["push~r15", "push~r14", "mov~r15d,edx", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbp,dest", "mov~rbx,source", "sub~rsp,0", "mov~[rsp+0],edi", "mov~source_dfd_0,source", "call~FOO", "mov~rdi,dest", "mov~r12,rax", "call~FOO", "mov~rdi,source_basename", "mov~r13,rax", "call~FOO", "mov~rdi,dest_basename", "mov~r14,rax", "call~FOO", "cmp~source_baselen,dest_baselen", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 1, 0, 1, -1, 0.0, ["add     rsp, 18h", "xor     eax, eax", "pop     source", "pop     dest", "pop     source_basename", "pop     dest_basename", "pop     source_baselen", "pop     dest_dfd", "retn"], ["add~rsp,0", "xor~eax,eax", "pop~source", "pop~dest", "pop~source_basename", "pop~dest_basename", "pop~source_baselen", "pop~dest_dfd", "retn"]], [1, 0, 1, 1, 0, 12, 0, 1, 2, 0, 0.16666666666666666, ["mov     edi, [rsp+48h+source_dfd]", "add     rsp, 18h", "mov     rcx, dest", "mov     edx, r15d", "mov     rsi, source", "pop     source", "pop     dest", "pop     source_basename", "pop     dest_basename", "pop     source_baselen", "pop     dest_dfd", "jmp     same_nameat_0"], ["mov~edi,[rsp+0]", "add~rsp,0", "mov~rcx,dest", "mov~edx,r15d", "mov~rsi,source", "pop~source", "pop~dest", "pop~source_basename", "pop~dest_basename", "pop~source_baselen", "pop~dest_dfd", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []]], "func_feature": [5, 2, 8, 0, 5, 5, 0, 51, 0.06667, 0, 3], "succs": [[2, 3], [0, 2], [], [4], []], "fname": "same_nameat", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[2, 0, 2, 1, 1, 16, 1, 1, 0, 0, 0.007894736842105263, ["mov     r9, [authors+38h]; jumptable 00000000000199A4 case 8", "mov     rax, [authors+10h]", "lea     rsi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r8, [authors+8]", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     [rsp+58h+var_48], r9", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     [rsp+58h+var_58], rax", "mov     [rsp+58h+var_50], r8", "mov     authors, [authors]", "call    _dcgettext", "sub     rsp, 8"], ["mov~r9,[authors+0]", "mov~rax,[authors+0]", "lea~rsi,<TAG>", "mov~r8,[authors+0]", "mov~edx,0", "xor~edi,edi", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~[rsp+0],r9", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~<TAG>,rax", "mov~[rsp+0],r8", "mov~authors,<TAG>", "call~FOO", "sub~rsp,0"]], [0, 0, 15, 1, 0, 4, 0, 1, 3, -1, 0.1368421052631579, ["lea     rdx, off_218FC", "movsxd  rax, dword ptr [rdx+n_authors*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [2, 0, 1, 1, 1, 15, 1, 1, 5, -1, 0.010526315789473684, ["mov     r9, [rsp+60h+var_48]", "mov     rdx, rax", "mov     rcx, rbx", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "push    r9", "push    r13", "push    r12", "push    r15", "push    r14", "mov     r9, [rsp+88h+var_58]", "mov     r8, [rsp+88h+var_50]", "call    ___fprintf_chk", "add     rsp, 30h"], ["mov~r9,[rsp+0]", "mov~rdx,rax", "mov~rcx,rbx", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "push~r9", "push~r13", "push~r12", "push~r15", "push~r14", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "call~FOO", "add~rsp,0"]], [0, 0, 2, 0, 1, 5, 1, 2, 4, -1, 0.015789473684210527, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r10, [rsp+58h+var_40]", "push    r10", "jmp     loc_199F4"], ["xor~edi,edi", "call~FOO", "mov~r10,[rsp+0]", "push~r10", "jmp~FOO"]], [2, 0, 0, 1, 1, 19, 1, 1, 5, -1, 0.0, ["push    r14", "mov     rdx, rax", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "pop     rax", "pop     rdx", "add     rsp, 28h", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["push~r14", "mov~rdx,rax", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "call~FOO", "pop~rax", "pop~rdx", "add~rsp,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 1, 0, 1, 11, 1, 2, 4, -1, 0.006578947368421052, ["mov     r15, [authors+20h]; jumptable 00000000000199A4 case 5", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [authors+18h]", "mov     r13, [authors+10h]", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "call    _dcgettext", "push    r15", "jmp     short loc_19BB6"], ["mov~r15,[authors+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "call~FOO", "push~r15", "jmp~FOO"]], [2, 0, 1, 1, 1, 9, 1, 1, 4, -1, 0.006578947368421052, ["lea     rsi, aWrittenBySSSAn; jumptable 00000000000199A4 case 4", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [authors+18h]", "mov     r13, [authors+10h]", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "call    _dcgettext", "sub     rsp, 8"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "call~FOO", "sub~rsp,0"]], [5, 0, 17, 0, 4, 20, 3, 5, 2, 1, 0.12894736842105262, ["lea     rsi, aC_0; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7E3h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     n_authors, 9; switch 10 cases", "ja      loc_19CD0; jumptable 00000000000199A4 default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~n_authors,0", "ja~FOO"]], [2, 0, 1, 1, 1, 16, 1, 1, 4, -1, 0.006578947368421052, ["mov     r8, [authors+8]; jumptable 00000000000199A4 case 6", "mov     n_authors, [authors+28h]", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     edx, 5; category", "mov     r13, [authors+10h]", "xor     edi, edi; domainname", "mov     authors, [authors]", "mov     [rsp+58h+var_58], r8", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r13", "push    r12", "push    r15", "push    r14"], ["mov~r8,[authors+0]", "mov~n_authors,[authors+0]", "lea~rsi,<TAG>", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~edx,0", "mov~r13,[authors+0]", "xor~edi,edi", "mov~authors,<TAG>", "mov~<TAG>,r8", "call~FOO", "sub~rsp,0", "mov~r9,r13", "push~r12", "push~r15", "push~r14"]], [1, 0, 3, 0, 0, 16, 0, 1, 3, 0, 0.015789473684210527, ["mov     r10, [authors+40h]; jumptable 00000000000199A4 default case", "mov     r9, [authors+38h]", "mov     edx, 5", "mov     rax, [authors+10h]", "mov     r8, [authors+8]", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     [rsp+58h+var_40], r10", "mov     [rsp+58h+var_48], r9", "mov     [rsp+58h+var_58], rax", "mov     [rsp+58h+var_50], r8", "mov     authors, [authors]", "jmp     loc_19AA2"], ["mov~r10,[authors+0]", "mov~r9,[authors+0]", "mov~edx,0", "mov~rax,[authors+0]", "mov~r8,[authors+0]", "lea~rsi,<TAG>", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~<TAG>,rax", "mov~[rsp+0],r8", "mov~authors,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [1, 0, 18, 0, 1, 7, 1, 1, 1, 2, 0.024999999999999998, ["mov     authors, package", "lea     package, aSSS_0; \"%s (%s) %s\\n\"", "mov     n_authors, version", "xor     eax, eax", "mov     version, command_name", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~authors,package", "lea~package,<TAG>", "mov~n_authors,version", "xor~eax,eax", "mov~version,command_name", "mov~esi,0", "call~FOO"]], [3, 0, 1, 1, 1, 18, 2, 2, 4, -1, 0.002631578947368421, ["mov     authors, [authors]; jumptable 00000000000199A4 case 1", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     rcx, rbx", "mov     rdi, stream", "pop     rbx", "pop     stream", "pop     n_authors", "pop     r13", "pop     r14", "pop     r15", "mov     rdx, rax", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~authors,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~rcx,rbx", "mov~rdi,stream", "pop~rbx", "pop~stream", "pop~n_authors", "pop~r13", "pop~r14", "pop~r15", "mov~rdx,rax", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [3, 0, 1, 1, 1, 20, 2, 2, 4, -1, 0.002631578947368421, ["mov     n_authors, [authors+8]; jumptable 00000000000199A4 case 2", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "mov     authors, [authors]", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     r8, r12", "mov     rcx, rbx", "mov     rdi, stream", "mov     rdx, rax", "mov     esi, 1", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~n_authors,[authors+0]", "lea~rsi,<TAG>", "mov~authors,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~r8,r12", "mov~rcx,rbx", "mov~rdi,stream", "mov~rdx,rax", "mov~esi,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "xor~eax,eax", "jmp~FOO"]], [3, 0, 1, 1, 1, 22, 2, 2, 4, -1, 0.002631578947368421, ["mov     r13, [authors+10h]; jumptable 00000000000199A4 case 3", "mov     n_authors, [authors+8]", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "mov     authors, [authors]", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdi, stream", "mov     rdx, rax", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "lea~rsi,<TAG>", "mov~authors,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdi,stream", "mov~rdx,rax", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [1, 0, 18, 0, 1, 7, 1, 2, 1, 2, 0.02236842105263158, ["mov     r8, version", "mov     version, package", "lea     package, aSS_1; \"%s %s\\n\"", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_1993C"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 20, 1, 0, 12, 1, 1, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, n_authors", "push    rbp", "push    rbx", "mov     rbp, stream", "mov     rbx, authors", "sub     rsp, 28h", "test    command_name, command_name", "jz      loc_19A38"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,n_authors", "push~rbp", "push~rbx", "mov~rbp,stream", "mov~rbx,authors", "sub~rsp,0", "test~command_name,command_name", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 28h; jumptable 00000000000199A4 case 0", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 1, 0, 1, 19, 1, 2, 4, -1, 0.006578947368421052, ["mov     r9, [authors+10h]; jumptable 00000000000199A4 case 7", "mov     r13, [authors+30h]", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "mov     n_authors, [authors+28h]", "mov     r15, [authors+20h]", "mov     edx, 5; category", "mov     r14, [authors+18h]", "mov     r8, [authors+8]", "xor     edi, edi; domainname", "mov     [rsp+58h+var_50], r9", "mov     authors, [authors]", "mov     [rsp+58h+var_58], r8", "call    _dcgettext", "push    r13", "push    r12", "push    r15", "push    r14", "mov     r9, [rsp+78h+var_50]", "jmp     short loc_19C53"], ["mov~r9,[authors+0]", "mov~r13,[authors+0]", "lea~rsi,<TAG>", "mov~n_authors,[authors+0]", "mov~r15,[authors+0]", "mov~edx,0", "mov~r14,[authors+0]", "mov~r8,[authors+0]", "xor~edi,edi", "mov~[rsp+0],r9", "mov~authors,<TAG>", "mov~<TAG>,r8", "call~FOO", "push~r13", "push~r12", "push~r15", "push~r14", "mov~r9,[rsp+0]", "jmp~FOO"]], [1, 0, 3, 0, 0, 15, 0, 0, 4, -1, 0.002631578947368421, ["mov     r10, [authors+40h]; jumptable 00000000000199A4 case 9", "mov     r9, [authors+38h]", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     rax, [authors+10h]", "mov     r8, [authors+8]", "mov     edx, 5; category", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     authors, [authors]", "mov     [rsp+58h+var_40], r10", "mov     [rsp+58h+var_48], r9", "mov     [rsp+58h+var_58], rax", "mov     [rsp+58h+var_50], r8"], ["mov~r10,[authors+0]", "mov~r9,[authors+0]", "lea~rsi,<TAG>", "mov~rax,[authors+0]", "mov~r8,[authors+0]", "mov~edx,0", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~authors,<TAG>", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~<TAG>,rax", "mov~[rsp+0],r8"]], [2, 1, 0, 2, 1, 16, 1, 1, 5, -1, 0.0, ["mov     r8, [rsp+78h+var_58]", "mov     rcx, rbx", "mov     rdx, rax", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 20h", "add     rsp, 28h", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "call~FOO", "add~rsp,<STR>", "add~rsp,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [18, 21, 29, 4, 21, 29, 0, 275, 0.01905, 16, 13], "succs": [[2], [0, 5, 6, 8, 12, 13, 14, 17, 18, 19], [17], [2], [], [4], [4], [1, 9], [20], [3], [], [10, 7], [10], [10], [10], [7], [11, 15], [], [20], [3], []], "fname": "version_etc_arn", "n_num": 21}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 1, 0, 1, 19, 1, 2, 0, 0, 0.007905138339920948, ["mov     r9, [authors+10h]; jumptable 0000000000019DDC case 7", "mov     r14, [authors+30h]", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "mov     r13, [authors+28h]", "mov     rbx, [authors+20h]", "mov     edx, 5; category", "mov     r15, [authors+18h]", "mov     r8, [authors+8]", "xor     edi, edi; domainname", "mov     [rsp+58h+var_50], r9", "mov     authors, [authors+0]", "mov     [rsp+58h+var_58], r8", "call    _dcgettext", "push    r14", "push    r13", "push    rbx", "push    r15", "mov     r9, [rsp+78h+var_50]", "jmp     short loc_1A08B"], ["mov~r9,[authors+0]", "mov~r14,[authors+0]", "lea~rsi,<TAG>", "mov~r13,[authors+0]", "mov~rbx,[authors+0]", "mov~edx,0", "mov~r15,[authors+0]", "mov~r8,[authors+0]", "xor~edi,edi", "mov~[rsp+0],r9", "mov~authors,[authors+0]", "mov~<TAG>,r8", "call~FOO", "push~r14", "push~r13", "push~rbx", "push~r15", "mov~r9,[rsp+0]", "jmp~FOO"]], [0, 0, 15, 1, 0, 4, 0, 1, 4, -1, 0.1768774703557312, ["lea     rdx, off_21924", "movsxd  rax, dword ptr [rdx+rbx*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [2, 0, 1, 1, 1, 16, 1, 1, 5, -1, 0.007905138339920948, ["mov     r8, [authors+8]; jumptable 0000000000019DDC case 6", "mov     r13, [authors+28h]", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "mov     rbx, [authors+20h]", "mov     r15, [authors+18h]", "mov     edx, 5; category", "mov     r14, [authors+10h]", "xor     edi, edi; domainname", "mov     authors, [authors+0]", "mov     [rsp+58h+var_58], r8", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r14", "push    r13", "push    rbx", "push    r15"], ["mov~r8,[authors+0]", "mov~r13,[authors+0]", "lea~rsi,<TAG>", "mov~rbx,[authors+0]", "mov~r15,[authors+0]", "mov~edx,0", "mov~r14,[authors+0]", "xor~edi,edi", "mov~authors,[authors+0]", "mov~<TAG>,r8", "call~FOO", "sub~rsp,0", "mov~r9,r14", "push~r13", "push~rbx", "push~r15"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [1, 0, 18, 0, 1, 8, 1, 1, 2, 2, 0.07509881422924901, ["mov     r8, package", "lea     package, aSSS_0; \"%s (%s) %s\\n\"", "mov     r9, version", "mov     stream, r12", "mov     version, command_name", "xor     eax, eax", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~r8,package", "lea~package,<TAG>", "mov~r9,version", "mov~stream,r12", "mov~version,command_name", "xor~eax,eax", "mov~esi,0", "call~FOO"]], [3, 0, 1, 1, 1, 18, 2, 2, 5, -1, 0.001976284584980237, ["mov     rbx, [authors+0]; jumptable 0000000000019DDC case 1", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     rcx, rbx", "mov     rdi, stream", "pop     rbx", "pop     authors", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "mov     rdx, rax", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~rbx,[authors+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~rcx,rbx", "mov~rdi,stream", "pop~rbx", "pop~authors", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "mov~rdx,rax", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [3, 0, 1, 1, 1, 20, 2, 2, 5, -1, 0.001976284584980237, ["mov     r13, [authors+8]; jumptable 0000000000019DDC case 2", "mov     rbx, [authors+0]", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     r8, r13", "mov     rcx, rbx", "mov     rdi, stream", "mov     rdx, rax", "mov     esi, 1", "pop     rbx", "pop     authors", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~r13,[authors+0]", "mov~rbx,[authors+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~r8,r13", "mov~rcx,rbx", "mov~rdi,stream", "mov~rdx,rax", "mov~esi,0", "pop~rbx", "pop~authors", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "xor~eax,eax", "jmp~FOO"]], [3, 0, 1, 1, 1, 22, 2, 2, 5, -1, 0.001976284584980237, ["mov     r14, [authors+10h]; jumptable 0000000000019DDC case 3", "mov     r13, [authors+8]", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "mov     rbx, [authors+0]", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     r9, r14", "mov     r8, r13", "mov     rcx, rbx", "mov     rdi, stream", "mov     rdx, rax", "pop     rbx", "pop     authors", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~r14,[authors+0]", "mov~r13,[authors+0]", "lea~rsi,<TAG>", "mov~rbx,[authors+0]", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~r9,r14", "mov~r8,r13", "mov~rcx,rbx", "mov~rdi,stream", "mov~rdx,rax", "pop~rbx", "pop~authors", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [2, 0, 0, 1, 1, 15, 1, 1, 6, -1, 0.0, ["mov     rdx, rax", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "pop     rax", "pop     rdx", "add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~rdx,rax", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "call~FOO", "pop~rax", "pop~rdx", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 1, 0, 1, 15, 1, 2, 5, -1, 0.007905138339920948, ["mov     rbx, [authors+20h]; jumptable 0000000000019DDC case 5", "mov     r15, [authors+18h]", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "mov     r14, [authors+10h]", "mov     r13, [authors+8]", "mov     edx, 5; category", "mov     authors, [authors+0]", "xor     edi, edi; domainname", "call    _dcgettext", "push    rbx", "mov     r9, r14", "push    r15", "mov     r8, r13", "mov     rcx, rbp", "jmp     short loc_19FF2"], ["mov~rbx,[authors+0]", "mov~r15,[authors+0]", "lea~rsi,<TAG>", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~edx,0", "mov~authors,[authors+0]", "xor~edi,edi", "call~FOO", "push~rbx", "mov~r9,r14", "push~r15", "mov~r8,r13", "mov~rcx,rbp", "jmp~FOO"]], [2, 0, 1, 1, 1, 13, 1, 1, 5, -1, 0.007905138339920948, ["mov     r15, [authors+18h]; jumptable 0000000000019DDC case 4", "lea     rsi, aWrittenBySSSAn; \"Written by %s, %s, %s,\\nand %s.\\n\"", "mov     r14, [authors+10h]", "mov     r13, [authors+8]", "mov     rbx, [authors+0]", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r14", "mov     r8, r13", "push    r15", "mov     rcx, rbx"], ["mov~r15,[authors+0]", "lea~rsi,<TAG>", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~rbx,[authors+0]", "mov~edx,0", "xor~edi,edi", "call~FOO", "sub~rsp,0", "mov~r9,r14", "mov~r8,r13", "push~r15", "mov~rcx,rbx"]], [1, 0, 18, 0, 1, 8, 1, 2, 2, 2, 0.06719367588932806, ["mov     r8, version", "mov     version, package", "lea     package, aSS_1; \"%s %s\\n\"", "mov     esi, 1", "mov     stream, r12", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_19D74"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "mov~stream,r12", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 20, 0, 0, 2, 1, 1, 1, 3, 0.11857707509881422, ["test    command_name, command_name", "jz      loc_19E68"], ["test~command_name,command_name", "jz~FOO"]], [2, 0, 2, 1, 1, 16, 1, 1, 5, -1, 0.008893280632411066, ["mov     r10, [authors+38h]; jumptable 0000000000019DDC case 8", "mov     r9, [authors+10h]", "lea     rsi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r8, [authors+8]", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [authors+30h]", "mov     r13, [authors+28h]", "mov     [rsp+58h+var_48], r10", "mov     rbx, [authors+20h]", "mov     r15, [authors+18h]", "mov     [rsp+58h+var_50], r9", "mov     [rsp+58h+var_58], r8", "mov     authors, [authors+0]", "call    _dcgettext", "sub     rsp, 8"], ["mov~r10,[authors+0]", "mov~r9,[authors+0]", "lea~rsi,<TAG>", "mov~r8,[authors+0]", "mov~edx,0", "xor~edi,edi", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~[rsp+0],r10", "mov~rbx,[authors+0]", "mov~r15,[authors+0]", "mov~[rsp+0],r9", "mov~<TAG>,r8", "mov~authors,[authors+0]", "call~FOO", "sub~rsp,0"]], [2, 1, 0, 2, 1, 16, 1, 1, 6, -1, 0.0, ["mov     r8, [rsp+78h+var_58]", "mov     rcx, rbp", "mov     rdx, rax", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 20h", "add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~r8,[rsp+0]", "mov~rcx,rbp", "mov~rdx,rax", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "call~FOO", "add~rsp,<STR>", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "retn"]], [2, 0, 23, 1, 0, 12, 1, 1, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, stream", "push    rbp", "push    rbx", "xor     ebx, ebx", "mov     rbp, authors", "sub     rsp, 28h", "cmp     qword ptr [authors], 0", "jz      short loc_19D4C"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,stream", "push~rbp", "push~rbx", "xor~ebx,ebx", "mov~rbp,authors", "sub~rsp,0", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 22, 0, 0, 1, 0, 0, 1, 5, 0.001976284584980237, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [5, 0, 17, 0, 4, 20, 3, 5, 3, 1, 0.19169960474308298, ["lea     rsi, aC_0; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7E3h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     rbx, 9; switch 10 cases", "ja      loc_1A110; jumptable 0000000000019DDC default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~rbx,0", "ja~FOO"]], [2, 0, 22, 1, 0, 3, 0, 1, 2, 4, 0.04150197628458498, ["add     n_authors, 1", "cmp     qword ptr [rbp+n_authors*8+0], 0", "jnz     short loc_19D40"], ["add~n_authors,0", "cmp~[word ptr [rbp+0],0", "jnz~FOO"]], [2, 0, 1, 1, 1, 15, 1, 1, 6, -1, 0.007905138339920948, ["mov     r10, [rsp+60h+var_48]", "mov     rdx, rax", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "push    r10", "push    r14", "push    r13", "push    rbx", "push    r15", "mov     r9, [rsp+88h+var_50]", "mov     r8, [rsp+88h+var_58]", "call    ___fprintf_chk", "add     rsp, 30h"], ["mov~r10,[rsp+0]", "mov~rdx,rax", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "push~r10", "push~r14", "push~r13", "push~rbx", "push~r15", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "call~FOO", "add~rsp,0"]], [0, 0, 2, 0, 1, 5, 1, 2, 5, -1, 0.014822134387351778, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r11, [rsp+58h+var_40]", "push    r11", "jmp     loc_19E25"], ["xor~edi,edi", "call~FOO", "mov~r11,[rsp+0]", "push~r11", "jmp~FOO"]], [1, 0, 3, 0, 0, 16, 0, 1, 4, 0, 0.02075098814229249, ["mov     r11, [authors+40h]; jumptable 0000000000019DDC default case", "mov     r10, [authors+38h]", "mov     edx, 5", "mov     r9, [authors+10h]", "mov     r8, [authors+8]", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r14, [authors+30h]", "mov     r13, [authors+28h]", "mov     rbx, [authors+20h]", "mov     r15, [authors+18h]", "mov     [rsp+58h+var_40], r11", "mov     [rsp+58h+var_48], r10", "mov     [rsp+58h+var_50], r9", "mov     [rsp+58h+var_58], r8", "mov     authors, [authors+0]", "jmp     loc_19ED3"], ["mov~r11,[authors+0]", "mov~r10,[authors+0]", "mov~edx,0", "mov~r9,[authors+0]", "mov~r8,[authors+0]", "lea~rsi,<TAG>", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~rbx,[authors+0]", "mov~r15,[authors+0]", "mov~[rsp+0],r11", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~<TAG>,r8", "mov~authors,[authors+0]", "jmp~FOO"]], [1, 0, 3, 0, 0, 15, 0, 0, 5, -1, 0.001976284584980237, ["mov     r11, [authors+40h]; jumptable 0000000000019DDC case 9", "mov     r10, [authors+38h]", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r9, [authors+10h]", "mov     r8, [authors+8]", "mov     edx, 5; category", "mov     r14, [authors+30h]", "mov     r13, [authors+28h]", "mov     rbx, [authors+20h]", "mov     r15, [authors+18h]", "mov     authors, [authors+0]", "mov     [rsp+58h+var_40], r11", "mov     [rsp+58h+var_48], r10", "mov     [rsp+58h+var_50], r9", "mov     [rsp+58h+var_58], r8"], ["mov~r11,[authors+0]", "mov~r10,[authors+0]", "lea~rsi,<TAG>", "mov~r9,[authors+0]", "mov~r8,[authors+0]", "mov~edx,0", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~rbx,[authors+0]", "mov~r15,[authors+0]", "mov~authors,[authors+0]", "mov~[rsp+0],r11", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~<TAG>,r8"]], [1, 0, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 28h; jumptable 0000000000019DDC case 0", "pop     rbx", "pop     rbp", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [18, 22, 31, 4, 24, 34, 0, 287, 0.03187, 16, 14], "succs": [[14], [0, 2, 5, 6, 7, 9, 10, 13, 22, 23], [14], [], [17, 3], [3], [3], [3], [], [8], [8], [17], [11, 4], [19], [], [16, 12], [18], [1, 21], [18, 12], [23], [19], [20], [20], []], "fname": "version_etc_ar", "n_num": 24}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 23, 0, 1, 8, 1, 2, 0, 0, 0.10696517412935323, ["mov     authors, version", "mov     version, package", "lea     package, aSS_1; \"%s %s\\n\"", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_1A1DA"], ["mov~authors,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 25, 0, 0, 2, 1, 1, 3, -1, 0.2233152419719584, ["test    command_name, command_name", "jz      loc_1A465"], ["test~command_name,command_name", "jz~FOO"]], [2, 0, 25, 1, 0, 8, 2, 1, 10, -1, 0.008480325644504749, ["lea     rdi, [rax+20h]", "xor     ebp, ebp", "mov     [authors+8], rdi", "cmp     qword ptr [rax+18h], 0", "setnz   bpl", "add     rbp, 9", "test    command_name, command_name", "jnz     loc_1A1BB"], ["lea~rdi,[rax+0]", "xor~ebp,ebp", "mov~[authors+0],rdi", "cmp~[word ptr [rax+0],0", "setnz~bpl", "add~rbp,0", "test~command_name,command_name", "jnz~FOO"]], [0, 0, 53, 0, 0, 6, 1, 1, 5, 9, 0.018995929443690638, ["lea     r10d, [rax+18h]", "mov     [authors], r10d", "mov     r9, [rdi+r11]", "test    r9, r9", "mov     [rsp+0B8h+authtab+10h], r9", "jz      short loc_1A2E0"], ["lea~r10d,[rax+0]", "mov~<TAG>,r10d", "mov~r9,<TAG>", "test~r9,r9", "mov~[rsp+0],r9", "jz~FOO"]], [1, 0, 57, 0, 0, 2, 0, 0, 4, 9, 0.015829941203075532, ["cmp     r11d, 2Fh ; '/'", "jbe     short loc_1A2F0"], ["cmp~r11d,0", "jbe~FOO"]], [1, 0, 47, 1, 0, 7, 1, 1, 2, 8, 0.02838082315694256, ["mov     rdi, rax", "add     rax, 8", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+8], rdi", "jnz     short loc_1A2BF"], ["mov~rdi,rax", "add~rax,0", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [0, 0, 49, 0, 0, 8, 1, 1, 1, 9, 0.007914970601537766, ["mov     rax, [authors+8]", "mov     stream, rax", "lea     rax, [rax+8]", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab], rdi", "jnz     loc_1A26E"], ["mov~rax,[authors+0]", "mov~stream,rax", "lea~rax,[rax+0]", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [0, 0, 48, 0, 0, 1, 0, 0, 3, 9, 0.008819538670284939, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [1, 0, 26, 0, 0, 2, 0, 1, 7, -1, 0.02939846223428313, ["mov     ebp, 4", "jmp     loc_1A1B2"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 41, 0, 0, 6, 1, 1, 9, 7, 0.015829941203075532, ["lea     r10d, [rax+28h]", "mov     [authors], r10d", "mov     r9, [rdi+r9]", "test    r9, r9", "mov     [rsp+0B8h+authtab+20h], r9", "jz      short loc_1A380"], ["lea~r10d,[rax+0]", "mov~<TAG>,r10d", "mov~r9,<TAG>", "test~r9,r9", "mov~[rsp+0],r9", "jz~FOO"]], [0, 0, 27, 0, 0, 1, 0, 0, 6, -1, 0.014699231117141566, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 27, 0, 0, 1, 0, 0, 3, -1, 0.012550881953867029, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 1, 3, 1, 1, 8, 1, 2, 8, -1, 0.0013568521031207597, ["mov     rcx, [rsp+0D8h+var_B8]", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 20h", "jmp     loc_1A518; jumptable 000000000001A242 case 0"], ["mov~rcx,[rsp+0]", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [2, 0, 4, 1, 1, 18, 1, 2, 7, -1, 0.005314337403889643, ["mov     rcx, [rsp+0B8h+authtab]; jumptable 000000000001A242 case 6", "mov     r13, [rsp+0B8h+authtab+10h]", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "mov     r12, [rsp+0B8h+authtab+8]", "mov     rbp, [rsp+0B8h+authtab+28h]", "mov     edx, 5; category", "mov     r15, [rsp+0B8h+authtab+20h]", "mov     r14, [rsp+0B8h+authtab+18h]", "xor     edi, edi; domainname", "mov     [rsp+0B8h+var_B8], rcx", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r13", "mov     r8, r12", "push    rbp", "push    r15", "push    r14", "jmp     short loc_1A5E6"], ["mov~rcx,[rsp+0]", "mov~r13,[rsp+0]", "lea~rsi,<TAG>", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~edx,0", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "xor~edi,edi", "mov~<TAG>,rcx", "call~FOO", "sub~rsp,0", "mov~r9,r13", "mov~r8,r12", "push~rbp", "push~r15", "push~r14", "jmp~FOO"]], [1, 0, 4, 0, 1, 19, 1, 1, 7, -1, 0.005314337403889643, ["mov     r8, [rsp+0B8h+authtab+8]; jumptable 000000000001A242 case 7", "mov     rcx, [rsp+0B8h+authtab]", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "mov     r12, [rsp+0B8h+authtab+30h]", "mov     rbp, [rsp+0B8h+authtab+28h]", "mov     edx, 5; category", "mov     r15, [rsp+0B8h+authtab+20h]", "mov     r14, [rsp+0B8h+authtab+18h]", "xor     edi, edi; domainname", "mov     r13, [rsp+0B8h+authtab+10h]", "mov     [rsp+0B8h+var_B0], r8", "mov     [rsp+0B8h+var_B8], rcx", "call    _dcgettext", "push    r12", "push    rbp", "mov     r9, r13", "push    r15", "push    r14", "mov     r8, [rsp+0D8h+var_B0]"], ["mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "lea~rsi,<TAG>", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~edx,0", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "xor~edi,edi", "mov~r13,[rsp+0]", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "call~FOO", "push~r12", "push~rbp", "mov~r9,r13", "push~r15", "push~r14", "mov~r8,[rsp+0]"]], [1, 0, 51, 0, 0, 2, 0, 0, 6, 8, 0.016734509271822705, ["cmp     r10d, 2Fh ; '/'", "jbe     short loc_1A340"], ["cmp~r10d,0", "jbe~FOO"]], [1, 1, 67, 1, 0, 14, 1, 0, 0, 10, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, stream", "sub     rsp, 88h", "mov     rax, fs:28h", "mov     [rsp+0B8h+var_40], rax", "xor     eax, eax", "mov     eax, [authors]", "cmp     eax, 2Fh ; '/'", "jbe     loc_1A244"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,stream", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~eax,<TAG>", "cmp~eax,0", "jbe~FOO"]], [0, 0, 42, 0, 0, 1, 0, 0, 7, 7, 0.006105834464043419, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [1, 0, 4, 0, 1, 10, 1, 1, 7, -1, 0.005314337403889643, ["mov     r15, [rsp+0B8h+authtab+20h]; jumptable 000000000001A242 case 5", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [rsp+0B8h+authtab+18h]", "mov     r13, [rsp+0B8h+authtab+10h]", "mov     r12, [rsp+0B8h+authtab+8]", "mov     rbp, [rsp+0B8h+authtab]", "call    _dcgettext", "push    r15"], ["mov~r15,[rsp+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[rsp+0]", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "push~r15"]], [0, 0, 20, 1, 0, 4, 0, 1, 6, -1, 0.1824966078697422, ["lea     rdx, off_2194C", "movsxd  rax, dword ptr [rdx+rbp*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [2, 0, 4, 1, 1, 17, 1, 2, 7, -1, 0.005427408412483039, ["mov     r9, [rsp+0B8h+authtab+10h]; jumptable 000000000001A242 case 8", "mov     r8, [rsp+0B8h+authtab+8]", "lea     rsi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     rcx, [rsp+0B8h+authtab]", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r13, [rsp+0B8h+authtab+38h]", "mov     r12, [rsp+0B8h+authtab+30h]", "mov     rbp, [rsp+0B8h+authtab+28h]", "mov     r15, [rsp+0B8h+authtab+20h]", "mov     r14, [rsp+0B8h+authtab+18h]", "mov     [rsp+0B8h+var_A8], r9", "mov     [rsp+0B8h+var_B0], r8", "mov     [rsp+0B8h+var_B8], rcx", "call    _dcgettext", "sub     rsp, 8", "jmp     loc_1A4EA"], ["mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "lea~rsi,<TAG>", "mov~rcx,[rsp+0]", "mov~edx,0", "xor~edi,edi", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "call~FOO", "sub~rsp,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 5, -1, 0.0, [], []], [1, 0, 23, 0, 1, 8, 1, 1, 4, -1, 0.11668928086838534, ["mov     authors, package", "lea     package, aSSS_0; \"%s (%s) %s\\n\"", "mov     r9, version", "mov     rdi, stream", "mov     version, command_name", "xor     eax, eax", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~authors,package", "lea~package,<TAG>", "mov~r9,version", "mov~rdi,stream", "mov~version,command_name", "xor~eax,eax", "mov~esi,0", "call~FOO"]], [1, 1, 1, 1, 0, 15, 1, 1, 8, -1, 0.00045228403437358656, ["add     rsp, 88h", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbp", "mov     rdi, stream", "mov     rdx, rax", "pop     stream", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["add~rsp,<STR>", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbp", "mov~rdi,stream", "mov~rdx,rax", "pop~stream", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [1, 1, 1, 1, 0, 14, 1, 1, 8, -1, 0.00045228403437358656, ["add     rsp, 88h", "mov     r8, r12", "mov     rcx, rbp", "mov     rdi, stream", "mov     rdx, rax", "mov     esi, 1", "pop     stream", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "xor     eax, eax", "jmp     ___fprintf_chk"], ["add~rsp,<STR>", "mov~r8,r12", "mov~rcx,rbp", "mov~rdi,stream", "mov~rdx,rax", "mov~esi,0", "pop~stream", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "xor~eax,eax", "jmp~FOO"]], [1, 1, 1, 1, 0, 13, 1, 1, 8, -1, 0.0004522840343735866, ["add     rsp, 88h", "mov     rcx, rbp", "mov     rdi, stream", "pop     stream", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "mov     rdx, rax", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["add~rsp,<STR>", "mov~rcx,rbp", "mov~rdi,stream", "pop~stream", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "mov~rdx,rax", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [2, 0, 3, 1, 1, 14, 1, 1, 8, -1, 0.0027137042062415195, ["push    r13", "push    r12", "mov     rdx, rax", "push    rbp", "push    r15", "mov     esi, 1", "push    r14", "mov     r9, [rsp+0E8h+var_A8]", "mov     rdi, stream", "mov     r8, [rsp+0E8h+var_B0]", "mov     rcx, [rsp+0E8h+var_B8]", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 30h"], ["push~r13", "push~r12", "mov~rdx,rax", "push~rbp", "push~r15", "mov~esi,0", "push~r14", "mov~r9,[rsp+0]", "mov~rdi,stream", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "xor~eax,eax", "call~FOO", "add~rsp,0"]], [0, 0, 4, 0, 1, 4, 1, 1, 7, -1, 0.007010402532790593, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r10, [rsp+0B8h+var_A0]", "push    r10"], ["xor~edi,edi", "call~FOO", "mov~r10,[rsp+0]", "push~r10"]], [1, 0, 26, 0, 0, 2, 0, 1, 4, -1, 0.02939846223428313, ["mov     ebp, 1", "jmp     loc_1A1B2"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 59, 0, 0, 6, 1, 1, 3, 10, 0.01594301221166893, ["lea     r11d, [rax+10h]", "mov     [authors], r11d", "mov     r9, [rdi+r10]", "test    r9, r9", "mov     [rsp+0B8h+authtab+8], r9", "jz      short loc_1A290"], ["lea~r11d,[rax+0]", "mov~<TAG>,r11d", "mov~r9,<TAG>", "test~r9,r9", "mov~[rsp+0],r9", "jz~FOO"]], [1, 0, 3, 0, 1, 10, 2, 2, 7, -1, 0.0135119855269109, ["lea     rsi, aWrittenBySSAnd; jumptable 000000000001A242 case 3", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r13, [rsp+0B8h+authtab+10h]", "mov     r12, [rsp+0B8h+authtab+8]", "mov     rbp, [rsp+0B8h+authtab]", "call    _dcgettext", "mov     rcx, [rsp+0B8h+var_40]", "xor     rcx, fs:28h", "jnz     loc_1A851"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 1, 9, 2, 2, 7, -1, 0.0135119855269109, ["lea     rsi, aWrittenBySAndS; jumptable 000000000001A242 case 2", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r12, [rsp+0B8h+authtab+8]", "mov     rbp, [rsp+0B8h+authtab]", "call    _dcgettext", "mov     rcx, [rsp+0B8h+var_40]", "xor     rcx, fs:28h", "jnz     loc_1A851"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 8, -1, 0.023518769787426504, ["mov     ebp, 5", "jmp     loc_1A1B2"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 35, 1, 0, 6, 1, 1, 11, 5, 0.011080958842152872, ["add     eax, 30h ; '0'", "mov     [authors], eax", "mov     rax, [rdi+r10]", "test    rax, rax", "mov     [rsp+0B8h+authtab+28h], rax", "jz      short loc_1A3D0"], ["add~eax,0", "mov~<TAG>,eax", "mov~rax,<TAG>", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 27, 0, 0, 1, 0, 0, 7, -1, 0.009724106739032113, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 26, 0, 0, 2, 0, 1, 9, -1, 0.0030529172320217096, ["mov     ebp, 7", "jmp     loc_1A1B2"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 30, 0, 0, 6, 1, 1, 8, 2, 0.022614201718679332, ["lea     rdi, [rax+10h]", "mov     [authors+8], rdi", "mov     rdi, [rax+8]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+38h], rdi", "jz      loc_1A860"], ["lea~rdi,[rax+0]", "mov~[authors+0],rdi", "mov~rdi,[rax+0]", "test~rdi,rdi", "mov~[rsp+0],rdi", "jz~FOO"]], [1, 0, 45, 0, 0, 2, 0, 0, 8, 7, 0.014699231117141566, ["cmp     r9d, 2Fh ; '/'", "jbe     short loc_1A390"], ["cmp~r9d,0", "jbe~FOO"]], [1, 0, 41, 1, 0, 7, 1, 1, 4, 6, 0.04794210764360018, ["mov     rdi, rax", "add     rax, 8", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+18h], rdi", "jnz     short loc_1A35F"], ["mov~rdi,rax", "add~rax,0", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [1, 0, 44, 1, 0, 7, 1, 1, 3, 7, 0.0407055630936228, ["mov     rdi, rax", "add     rax, 8", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+10h], rdi", "jnz     short loc_1A30F"], ["mov~rdi,rax", "add~rax,0", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 7, -1, 0.01826096788783356, ["mov     rax, [rsp+0B8h+var_40]; jumptable 000000000001A242 case 0", "xor     rax, fs:28h", "jnz     loc_1A851"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 1, 12, 1, 2, 8, -1, 0.0013568521031207597, ["push    r14", "mov     rdx, rax", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "pop     rax", "pop     rdx", "jmp     loc_1A518; jumptable 000000000001A242 case 0"], ["push~r14", "mov~rdx,rax", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "pop~rax", "pop~rdx", "jmp~FOO"]], [0, 0, 27, 0, 0, 1, 0, 0, 5, -1, 0.013794663048394391, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 39, 0, 0, 2, 0, 0, 10, 6, 0.009724106739032113, ["cmp     r10d, 2Fh ; '/'", "jbe     short loc_1A3E0"], ["cmp~r10d,0", "jbe~FOO"]], [0, 0, 36, 0, 0, 1, 0, 0, 11, 5, 0.0024875621890547263, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [2, 0, 4, 1, 1, 10, 1, 2, 7, -1, 0.005314337403889643, ["lea     rsi, aWrittenBySSSAn; jumptable 000000000001A242 case 4", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [rsp+0B8h+authtab+18h]", "mov     r13, [rsp+0B8h+authtab+10h]", "mov     r12, [rsp+0B8h+authtab+8]", "mov     rbp, [rsp+0B8h+authtab]", "call    _dcgettext", "sub     rsp, 8", "jmp     short loc_1A68E"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[rsp+0]", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "sub~rsp,0", "jmp~FOO"]], [5, 0, 22, 0, 4, 20, 3, 5, 5, -1, 0.21393034825870647, ["lea     rsi, aC_0; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7E3h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     rbp, 9; switch 10 cases", "ja      loc_1A800; jumptable 000000000001A242 default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~rbp,0", "ja~FOO"]], [0, 0, 26, 0, 0, 1, 1, 0, 2, -1, 0.017639077340569877, ["xor     ebp, ebp"], ["xor~ebp,ebp"]], [0, 0, 65, 0, 0, 8, 1, 1, 1, 11, 0.0067842605156037995, ["mov     rdi, [authors+10h]", "lea     r10d, [rax+8]", "mov     r9d, eax", "mov     [authors], r10d", "mov     r9, [rdi+r9]", "test    r9, r9", "mov     [rsp+0B8h+authtab], r9", "jz      loc_1A1B0"], ["mov~rdi,[authors+0]", "lea~r10d,[rax+0]", "mov~r9d,eax", "mov~<TAG>,r10d", "mov~r9,<TAG>", "test~r9,r9", "mov~[rsp+0],r9", "jz~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 8, -1, 0.017639077340569877, ["mov     ebp, 6", "jmp     loc_1A1B2"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 32, 0, 0, 6, 1, 1, 7, 3, 0.04432383536861149, ["lea     rdi, [rax+8]", "mov     [authors+8], rdi", "mov     rdi, [rax]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+30h], rdi", "jz      loc_1A856"], ["lea~rdi,[rax+0]", "mov~[authors+0],rdi", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jz~FOO"]], [1, 0, 63, 0, 0, 2, 0, 0, 2, 10, 0.011872455902306648, ["cmp     r10d, 2Fh ; '/'", "jbe     short loc_1A2A0"], ["cmp~r10d,0", "jbe~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 5, -1, 0.02939846223428313, ["mov     ebp, 2", "jmp     loc_1A1B2"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 6, -1, 0.02939846223428313, ["mov     ebp, 3", "jmp     loc_1A1B2"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 10, 0, 0.0002261420171867933, ["mov     ebp, 8", "jmp     loc_1A1B2"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 45, 0, 0, 1, 0, 0, 5, 8, 0.007462686567164179, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [0, 1, 0, 1, 0, 8, 0, 0, 8, -1, 0.0, ["add     rsp, 88h", "pop     stream", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~stream", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 47, 0, 0, 6, 1, 1, 7, 8, 0.018995929443690638, ["lea     r9d, [rax+20h]", "mov     [authors], r9d", "mov     r10, [rdi+r10]", "test    r10, r10", "mov     [rsp+0B8h+authtab+18h], r10", "jz      short loc_1A330"], ["lea~r9d,[rax+0]", "mov~<TAG>,r9d", "mov~r10,<TAG>", "test~r10,r10", "mov~[rsp+0],r10", "jz~FOO"]], [1, 0, 35, 1, 0, 7, 1, 1, 6, 4, 0.04590682948891904, ["mov     rdi, rax", "add     rax, 8", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+28h], rdi", "jnz     short loc_1A3F8"], ["mov~rdi,rax", "add~rax,0", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [0, 0, 33, 0, 0, 1, 0, 0, 12, 4, 0.003165988240615106, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [1, 0, 38, 1, 0, 7, 1, 1, 5, 5, 0.050203527815468114, ["mov     rdi, rax", "add     rax, 8", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+20h], rdi", "jnz     short loc_1A3AF"], ["mov~rdi,rax", "add~rax,0", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [0, 0, 28, 0, 0, 6, 1, 1, 9, 1, 0.014586160108548168, ["lea     rdi, [rax+18h]", "mov     [authors+8], rdi", "mov     rdi, [rax+10h]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+40h], rdi", "jz      loc_1A86A"], ["lea~rdi,[rax+0]", "mov~[authors+0],rdi", "mov~rdi,[rax+0]", "test~rdi,rdi", "mov~[rsp+0],rdi", "jz~FOO"]], [1, 0, 5, 0, 0, 16, 0, 1, 6, -1, 0.015603799185888738, ["mov     r10, [rsp+0B8h+authtab+40h]; jumptable 000000000001A242 default case", "mov     r9, [rsp+0B8h+authtab+10h]", "mov     edx, 5", "mov     r8, [rsp+0B8h+authtab+8]", "mov     rcx, [rsp+0B8h+authtab]", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r13, [rsp+0B8h+authtab+38h]", "mov     r12, [rsp+0B8h+authtab+30h]", "mov     [rsp+0B8h+var_A0], r10", "mov     rbp, [rsp+0B8h+authtab+28h]", "mov     r15, [rsp+0B8h+authtab+20h]", "mov     r14, [rsp+0B8h+authtab+18h]", "mov     [rsp+0B8h+var_A8], r9", "mov     [rsp+0B8h+var_B0], r8", "mov     [rsp+0B8h+var_B8], rcx", "jmp     loc_1A4DC"], ["mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "mov~edx,0", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "lea~rsi,<TAG>", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~[rsp+0],r10", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 3, 0, 1, 8, 2, 2, 7, -1, 0.0135119855269109, ["lea     rsi, aWrittenByS; jumptable 000000000001A242 case 1", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     rbp, [rsp+0B8h+authtab]", "call    _dcgettext", "mov     rcx, [rsp+0B8h+var_40]", "xor     rcx, fs:28h", "jnz     short loc_1A851"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~rbp,[rsp+0]", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 27, 0, 0, 1, 0, 0, 4, -1, 0.013116236996834011, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 5, 0, 0, 15, 0, 0, 7, -1, 0.0002261420171867933, ["mov     r10, [rsp+0B8h+authtab+40h]; jumptable 000000000001A242 case 9", "mov     r9, [rsp+0B8h+authtab+10h]", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r8, [rsp+0B8h+authtab+8]", "mov     rcx, [rsp+0B8h+authtab]", "mov     edx, 5; category", "mov     r13, [rsp+0B8h+authtab+38h]", "mov     r12, [rsp+0B8h+authtab+30h]", "mov     rbp, [rsp+0B8h+authtab+28h]", "mov     r15, [rsp+0B8h+authtab+20h]", "mov     r14, [rsp+0B8h+authtab+18h]", "mov     [rsp+0B8h+var_A0], r10", "mov     [rsp+0B8h+var_A8], r9", "mov     [rsp+0B8h+var_B0], r8", "mov     [rsp+0B8h+var_B8], rcx"], ["mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "lea~rsi,<TAG>", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "mov~edx,0", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx"]], [0, 0, 39, 0, 0, 1, 0, 0, 9, 6, 0.004975124378109453, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]]], "func_feature": [19, 44, 60, 5, 68, 103, 0, 425, 0.02504, 17, 18], "succs": [[46], [0, 22], [0, 22], [52, 15], [3, 55], [11, 39], [5, 47], [5], [1], [8, 43], [8], [28], [40], [12], [12], [17, 57], [48, 6], [38], [41], [64, 66, 40, 13, 14, 45, 18, 20, 30, 31], [26], [], [21, 46], [21], [21], [21], [40], [26], [1], [4, 28], [63, 23], [24, 63], [1], [32, 59], [32], [1], [35, 61], [9, 67], [42, 60], [65, 38], [56, 63], [40], [53], [33, 44], [58], [41], [19, 62], [1], [51, 47], [1], [49, 36], [29, 7], [1], [1], [1], [39], [], [53, 37], [50, 34], [50], [58, 10], [2, 54], [27], [], [25, 63], [52], [27], [60]], "fname": "version_etc_va", "n_num": 68}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 34, 0, 0, 5, 1, 1, 0, 0, 0.009523809523809525, ["mov     rax, [rdi+28h]", "mov     [rsp+108h+authors.gp_offset], 30h ; '0'", "test    rax, rax", "mov     [rsp+108h+var_C0], rax", "jz      loc_1AE40"], ["mov~rax,[rdi+0]", "mov~[rsp+0],0", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 1, 36, 1, 0, 23, 2, 1, 0, 8, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, stream", "sub     rsp, 0D8h", "mov     rax, fs:28h", "mov     [rsp+108h+var_70], rax", "xor     eax, eax", "lea     rax, [rsp+108h+arg_0]", "mov     [rsp+108h+var_48], r8", "mov     [rsp+108h+var_40], r9", "mov     [rsp+108h+authors.gp_offset], 28h ; '('", "mov     [rsp+108h+authors.overflow_arg_area], rax", "lea     rax, [rsp+108h+var_68]", "mov     [rsp+108h+authors.reg_save_area], rax", "mov     stream, rax", "mov     rax, [rax+20h]", "test    rax, rax", "mov     [rsp+108h+var_C8], rax", "jz      loc_1AE38"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,stream", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "mov~[rsp+0],r8", "mov~[rsp+0],r9", "mov~[rsp+0],0", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~stream,rax", "mov~rax,[rax+0]", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [2, 0, 22, 1, 0, 6, 1, 0, 9, -1, 0.00873015873015873, ["xor     ebp, ebp", "cmp     qword ptr [rdi+18h], 0", "lea     rax, [rsp+108h+arg_40]", "mov     [rsp+108h+authors.overflow_arg_area], rax", "setnz   bpl", "add     rbp, 9"], ["xor~ebp,ebp", "cmp~[word ptr [rdi+0],0", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "setnz~bpl", "add~rbp,0"]], [0, 0, 24, 0, 0, 6, 1, 1, 8, -1, 0.012698412698412698, ["lea     rax, [rsp+108h+arg_38]", "mov     [rsp+108h+authors.overflow_arg_area], rax", "mov     rax, [rdi+10h]", "test    rax, rax", "mov     [rsp+108h+var_88], rax", "jz      loc_1AE59"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rdi+0]", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [2, 0, 3, 0, 2, 12, 2, 3, 6, -1, 0.0, ["mov     rbp, [rsp+108h+var_C8]; jumptable 000000000001AAA0 case 1", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_1AB23; jumptable 000000000001AAA0 case 0"], ["mov~rbp,[rsp+0]", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 16, 1, 0, 4, 0, 1, 5, -1, 0.21865079365079365, ["lea     rdx, off_21974", "movsxd  rax, dword ptr [rdx+rbp*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 29, 0, 0, 7, 1, 1, 5, 3, 0.027777777777777776, ["mov     rax, [rax]", "lea     rdi, [rsp+108h+arg_20]", "mov     ebp, 5", "mov     [rsp+108h+authors.overflow_arg_area], rdi", "test    rax, rax", "mov     [rsp+108h+var_A0], rax", "jz      short loc_1AA10"], ["mov~rax,<TAG>", "lea~rdi,[rsp+0]", "mov~ebp,0", "mov~[rsp+0],rdi", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 30, 0, 0, 7, 1, 1, 4, 4, 0.025396825396825397, ["mov     rdi, [r8]", "lea     rax, [rsp+108h+arg_18]", "mov     ebp, 4", "mov     [rsp+108h+authors.overflow_arg_area], rax", "test    rdi, rdi", "mov     [rsp+108h+var_A8], rdi", "jz      loc_1AA10"], ["mov~rdi,<TAG>", "lea~rax,[rsp+0]", "mov~ebp,0", "mov~[rsp+0],rax", "test~rdi,rdi", "mov~[rsp+0],rdi", "jz~FOO"]], [2, 0, 3, 0, 2, 16, 2, 3, 6, -1, 0.0, ["mov     r13, [rsp+108h+var_B8]; jumptable 000000000001AAA0 case 3", "mov     r12, [rsp+108h+var_C0]", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "mov     rbp, [rsp+108h+var_C8]", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r9, r13", "mov     rdx, rax", "mov     r8, r12", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_1AB23; jumptable 000000000001AAA0 case 0"], ["mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "lea~rsi,<TAG>", "mov~rbp,[rsp+0]", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r9,r13", "mov~rdx,rax", "mov~r8,r12", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 4, 0, 1, 11, 1, 2, 6, -1, 0.007936507936507936, ["mov     r15, [rsp+108h+var_A8]; jumptable 000000000001AAA0 case 5", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [rsp+108h+var_B0]", "mov     r13, [rsp+108h+var_B8]", "mov     r12, [rsp+108h+var_C0]", "mov     rbp, [rsp+108h+var_C8]", "call    _dcgettext", "push    r15", "jmp     short loc_1ACCB"], ["mov~r15,[rsp+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[rsp+0]", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "push~r15", "jmp~FOO"]], [2, 0, 3, 1, 1, 14, 1, 1, 7, -1, 0.009523809523809525, ["push    r13", "push    r12", "mov     rdx, rax", "push    rbp", "push    r15", "mov     esi, 1", "push    r14", "mov     r9, [rsp+138h+var_F8]", "mov     rdi, stream", "mov     r8, [rsp+138h+var_100]", "mov     rcx, [rsp+138h+var_108]", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 30h"], ["push~r13", "push~r12", "mov~rdx,rax", "push~rbp", "push~r15", "mov~esi,0", "push~r14", "mov~r9,[rsp+0]", "mov~rdi,stream", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "xor~eax,eax", "call~FOO", "add~rsp,0"]], [0, 0, 4, 0, 1, 5, 1, 2, 6, -1, 0.013888888888888888, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r10, [rsp+108h+var_F0]", "push    r10", "jmp     loc_1AAF5"], ["xor~edi,edi", "call~FOO", "mov~r10,[rsp+0]", "push~r10", "jmp~FOO"]], [2, 0, 4, 1, 1, 16, 1, 1, 6, -1, 0.008333333333333333, ["mov     r9, [rsp+108h+var_B8]; jumptable 000000000001AAA0 case 8", "mov     r8, [rsp+108h+var_C0]", "lea     rsi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     rcx, [rsp+108h+var_C8]", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r13, [rsp+108h+var_90]", "mov     r12, [rsp+108h+var_98]", "mov     rbp, [rsp+108h+var_A0]", "mov     r15, [rsp+108h+var_A8]", "mov     r14, [rsp+108h+var_B0]", "mov     [rsp+108h+var_F8], r9", "mov     [rsp+108h+var_100], r8", "mov     [rsp+108h+var_108], rcx", "call    _dcgettext", "sub     rsp, 8"], ["mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "lea~rsi,<TAG>", "mov~rcx,[rsp+0]", "mov~edx,0", "xor~edi,edi", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "call~FOO", "sub~rsp,0"]], [5, 0, 18, 0, 4, 20, 3, 5, 4, -1, 0.2571428571428571, ["lea     rsi, aC_0; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7E3h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     rbp, 9; switch 10 cases", "ja      loc_1ADE0; jumptable 000000000001AAA0 default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~rbp,0", "ja~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 8, 0, 0.01746031746031746, ["mov     ebp, 7", "jmp     loc_1AA10"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 26, 0, 0, 6, 1, 1, 7, 1, 0.022222222222222223, ["lea     rax, [rsp+108h+arg_30]", "mov     [rsp+108h+authors.overflow_arg_area], rax", "mov     rax, [rdi+8]", "test    rax, rax", "mov     [rsp+108h+var_90], rax", "jz      loc_1AE63"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rdi+0]", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 32, 0, 0, 7, 1, 1, 2, 6, 0.024603174603174603, ["mov     rax, [rsp+108h+arg_0]", "lea     rdi, [rsp+108h+arg_8]", "mov     ebp, 2", "mov     [rsp+108h+authors.overflow_arg_area], rdi", "test    rax, rax", "mov     [rsp+108h+var_B8], rax", "jz      loc_1AA10"], ["mov~rax,[rsp+0]", "lea~rdi,[rsp+0]", "mov~ebp,0", "mov~[rsp+0],rdi", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 28, 0, 0, 6, 1, 1, 6, 2, 0.02857142857142857, ["lea     rax, [rsp+108h+arg_28]", "mov     [rsp+108h+authors.overflow_arg_area], rax", "mov     rax, [rdi]", "test    rax, rax", "mov     [rsp+108h+var_98], rax", "jz      loc_1AE4F"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,<TAG>", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 5, 0, 0, 16, 0, 1, 5, -1, 0.02261904761904762, ["mov     r10, [rsp+108h+var_88]; jumptable 000000000001AAA0 default case", "mov     r9, [rsp+108h+var_B8]", "mov     edx, 5", "mov     r8, [rsp+108h+var_C0]", "mov     rcx, [rsp+108h+var_C8]", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r13, [rsp+108h+var_90]", "mov     r12, [rsp+108h+var_98]", "mov     [rsp+108h+var_F0], r10", "mov     rbp, [rsp+108h+var_A0]", "mov     r15, [rsp+108h+var_A8]", "mov     r14, [rsp+108h+var_B0]", "mov     [rsp+108h+var_F8], r9", "mov     [rsp+108h+var_100], r8", "mov     [rsp+108h+var_108], rcx", "jmp     loc_1ABC7"], ["mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "mov~edx,0", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "lea~rsi,<TAG>", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~[rsp+0],r10", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "jmp~FOO"]], [1, 0, 19, 0, 1, 8, 1, 1, 3, -1, 0.12063492063492064, ["mov     r8, package", "lea     package, aSSS_0; \"%s (%s) %s\\n\"", "mov     r9, version", "mov     rdi, stream", "mov     version, command_name", "xor     eax, eax", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~r8,package", "lea~package,<TAG>", "mov~r9,version", "mov~rdi,stream", "mov~version,command_name", "xor~eax,eax", "mov~esi,0", "call~FOO"]], [0, 0, 21, 0, 0, 2, 1, 1, 2, -1, 0.25, ["test    command_name, command_name", "jz      loc_1AB50"], ["test~command_name,command_name", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 6, -1, 0.05396825396825397, ["mov     rax, [rsp+108h+var_70]; jumptable 000000000001AAA0 case 0", "xor     rax, fs:28h", "jnz     loc_1AE4A"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [2, 0, 3, 0, 2, 14, 2, 3, 6, -1, 0.0, ["mov     r12, [rsp+108h+var_C0]; jumptable 000000000001AAA0 case 2", "mov     rbp, [rsp+108h+var_C8]", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r8, r12", "mov     rdx, rax", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_1AB23; jumptable 000000000001AAA0 case 0"], ["mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r8,r12", "mov~rdx,rax", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 1, 12, 1, 2, 7, -1, 0.004761904761904762, ["push    r14", "mov     rdx, rax", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "pop     rax", "pop     rdx", "jmp     loc_1AB23; jumptable 000000000001AAA0 case 0"], ["push~r14", "mov~rdx,rax", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "pop~rax", "pop~rdx", "jmp~FOO"]], [1, 1, 3, 1, 1, 8, 1, 2, 7, -1, 0.004761904761904762, ["mov     rcx, [rsp+128h+var_108]", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 20h", "jmp     loc_1AB23; jumptable 000000000001AAA0 case 0"], ["mov~rcx,[rsp+0]", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [0, 0, 22, 0, 0, 2, 1, 1, 1, -1, 0.01746031746031746, ["xor     ebp, ebp", "jmp     loc_1AA10"], ["xor~ebp,ebp", "jmp~FOO"]], [1, 0, 5, 0, 0, 15, 0, 0, 6, -1, 0.0007936507936507937, ["mov     r10, [rsp+108h+var_88]; jumptable 000000000001AAA0 case 9", "mov     r9, [rsp+108h+var_B8]", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r8, [rsp+108h+var_C0]", "mov     rcx, [rsp+108h+var_C8]", "mov     edx, 5; category", "mov     r13, [rsp+108h+var_90]", "mov     r12, [rsp+108h+var_98]", "mov     rbp, [rsp+108h+var_A0]", "mov     r15, [rsp+108h+var_A8]", "mov     r14, [rsp+108h+var_B0]", "mov     [rsp+108h+var_F0], r10", "mov     [rsp+108h+var_F8], r9", "mov     [rsp+108h+var_100], r8", "mov     [rsp+108h+var_108], rcx"], ["mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "lea~rsi,<TAG>", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "mov~edx,0", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx"]], [1, 0, 22, 0, 0, 2, 0, 1, 2, -1, 0.00873015873015873, ["mov     ebp, 1", "jmp     loc_1AA10"], ["mov~ebp,0", "jmp~FOO"]], [2, 0, 4, 1, 1, 9, 1, 1, 6, -1, 0.007936507936507936, ["lea     rsi, aWrittenBySSSAn; jumptable 000000000001AAA0 case 4", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [rsp+108h+var_B0]", "mov     r13, [rsp+108h+var_B8]", "mov     r12, [rsp+108h+var_C0]", "mov     rbp, [rsp+108h+var_C8]", "call    _dcgettext", "sub     rsp, 8"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[rsp+0]", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "sub~rsp,0"]], [1, 0, 19, 0, 1, 8, 1, 2, 3, -1, 0.12063492063492064, ["mov     r8, version", "mov     version, package", "lea     package, aSS_1; \"%s %s\\n\"", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_1AA38"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 7, -1, 0.0, ["add     rsp, 0D8h", "pop     stream", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~stream", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 31, 0, 0, 7, 1, 1, 3, 5, 0.02142857142857143, ["mov     rax, [rdi]", "lea     r8, [rsp+108h+arg_10]", "mov     ebp, 3", "mov     [rsp+108h+authors.overflow_arg_area], r8", "test    rax, rax", "mov     [rsp+108h+var_B0], rax", "jz      loc_1AA10"], ["mov~rax,<TAG>", "lea~r8,[rsp+0]", "mov~ebp,0", "mov~[rsp+0],r8", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 7, -1, 0.01746031746031746, ["mov     ebp, 6", "jmp     loc_1AA10"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 4, 0, 1, 20, 1, 2, 6, -1, 0.007936507936507936, ["mov     r8, [rsp+108h+var_C0]; jumptable 000000000001AAA0 case 7", "mov     r13, [rsp+108h+var_B8]", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "mov     rcx, [rsp+108h+var_C8]", "mov     r12, [rsp+108h+var_98]", "mov     edx, 5; category", "mov     rbp, [rsp+108h+var_A0]", "mov     r15, [rsp+108h+var_A8]", "xor     edi, edi; domainname", "mov     r14, [rsp+108h+var_B0]", "mov     [rsp+108h+var_100], r8", "mov     [rsp+108h+var_108], rcx", "call    _dcgettext", "push    r12", "mov     r9, r13", "push    rbp", "push    r15", "push    r14", "mov     r8, [rsp+128h+var_100]", "jmp     short loc_1AD64"], ["mov~r8,[rsp+0]", "mov~r13,[rsp+0]", "lea~rsi,<TAG>", "mov~rcx,[rsp+0]", "mov~r12,[rsp+0]", "mov~edx,0", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "xor~edi,edi", "mov~r14,[rsp+0]", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "call~FOO", "push~r12", "mov~r9,r13", "push~rbp", "push~r15", "push~r14", "mov~r8,[rsp+0]", "jmp~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 9, -1, 0.00873015873015873, ["mov     ebp, 8", "jmp     loc_1AA10"], ["mov~ebp,0", "jmp~FOO"]], [2, 0, 4, 1, 1, 17, 1, 1, 6, -1, 0.007936507936507936, ["mov     rcx, [rsp+108h+var_C8]; jumptable 000000000001AAA0 case 6", "mov     rbp, [rsp+108h+var_A0]", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "mov     r15, [rsp+108h+var_A8]", "mov     r14, [rsp+108h+var_B0]", "mov     edx, 5; category", "mov     r13, [rsp+108h+var_B8]", "mov     r12, [rsp+108h+var_C0]", "xor     edi, edi; domainname", "mov     [rsp+108h+var_108], rcx", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r13", "mov     r8, r12", "push    rbp", "push    r15", "push    r14"], ["mov~rcx,[rsp+0]", "mov~rbp,[rsp+0]", "lea~rsi,<TAG>", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~edx,0", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "xor~edi,edi", "mov~<TAG>,rcx", "call~FOO", "sub~rsp,0", "mov~r9,r13", "mov~r8,r12", "push~rbp", "push~r15", "push~r14"]]], "func_feature": [22, 34, 50, 17, 37, 56, 1, 329, 0.03698, 17, 9], "succs": [[16, 27], [0, 25], [20], [2, 35], [21], [34, 4, 8, 9, 12, 21, 22, 36, 26, 28], [17, 20], [20, 6], [21], [23], [21], [10], [10], [18, 5], [20], [3, 14], [32, 20], [33, 15], [11], [13], [19, 29], [30, 31], [21], [21], [21], [20], [11], [20], [23], [13], [], [], [20, 7], [20], [24], [20], [24]], "fname": "version_etc", "n_num": 37}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[5, 0, 1, 0, 5, 29, 5, 6, 0, 0, 0.0, ["push    rbx", "lea     rsi, aReportBugsToS; \"\\nReport bugs to: %s\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "lea     rdx, aBugCoreutilsGn; \"bug-coreutils@gnu.org\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "lea     rsi, aSHomePageS; \"%s home page: <%s>\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, package; \"GNU \"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aGeneralHelpUsi; \"General help using GNU software: <https\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "pop     rbx", "jmp     _fputs_unlocked"], ["push~rbx", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "pop~rbx", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [5, 5, 6, 0, 2, 1, 0, 29, 0.0, 7, 0], "succs": [[1], []], "fname": "emit_bug_reporting_address", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 5, 1, 0, 7, 1, 1, 0, 0, 0.0, ["mov     rax, n", "push    rbx", "mul     s", "mov     rbx, rax", "seto    al", "test    rbx, rbx", "js      short loc_1AF1E"], ["mov~rax,n", "push~rbx", "mul~,s", "mov~rbx,rax", "seto~al", "test~rbx,rbx", "js~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 0, 1, 0.15000000000000002, ["movzx   eax, al", "test    rax, rax", "jnz     short loc_1AF1E"], ["movzx~eax,al", "test~rax,rax", "jnz~FOO"]], [0, 0, 3, 0, 1, 4, 1, 2, 0, 2, 0.2, ["mov     n, rbx; size", "call    malloc", "test    rax, rax", "jnz     short loc_1AF1C"], ["mov~n,rbx", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 0, 1, 0.05, ["test    rbx, rbx", "jnz     short loc_1AF1E"], ["test~rbx,rbx", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, -1, 0.0, ["pop     rbx", "retn"], ["pop~rbx", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 4, 6, 0, 6, 8, 0, 19, 0.06667, 0, 1], "succs": [[1, 5], [2, 5], [3, 4], [4, 5], [], []], "fname": "xnmalloc", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 8, 1, 0, 7, 1, 1, 0, 0, 0.0, ["mov     rax, n", "push    rbx", "mul     s", "mov     n, rax", "seto    al", "test    rsi, rsi", "js      short loc_1AF79"], ["mov~rax,n", "push~rbx", "mul~,s", "mov~n,rax", "seto~al", "test~rsi,rsi", "js~FOO"]], [0, 0, 3, 0, 1, 4, 1, 2, 0, 2, 0.17857142857142855, ["mov     rsi, rbx; size", "call    _realloc", "test    rax, rax", "jnz     short loc_1AF69"], ["mov~rsi,rbx", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 0, 3, 0.17857142857142855, ["test    rsi, rsi", "mov     rbx, rsi", "jnz     short loc_1AF57"], ["test~rsi,rsi", "mov~rbx,rsi", "jnz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 0, 3, 0.05357142857142857, ["test    p, p", "jnz     short loc_1AF70"], ["test~p,p", "jnz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 0, 1, 0.05357142857142857, ["test    rbx, rbx", "jnz     short loc_1AF79"], ["test~rbx,rbx", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 0, 1, 0.10714285714285714, ["movzx   eax, al", "test    rax, rax", "jnz     short loc_1AF79"], ["movzx~eax,al", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, -1, 0.0, ["pop     rbx", "retn"], ["pop~rbx", "retn"]], [0, 0, 0, 0, 1, 4, 1, 1, 0, -1, 0.0, ["call    free", "xor     eax, eax", "pop     rbx", "retn"], ["call~FOO", "xor~eax,eax", "pop~rbx", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [3, 7, 9, 0, 9, 12, 0, 28, 0.06349, 0, 1], "succs": [[8, 5], [4, 6], [1, 3], [1, 7], [8, 6], [8, 2], [], [], []], "fname": "xnrealloc", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 3, 0, 1, 4, 1, 2, 0, 0, 0.13636363636363635, ["mov     pn, rbx; size", "call    _realloc", "test    rax, rax", "jnz     short loc_1AFCD"], ["mov~pn,rbx", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 4, 0, 0, 3, 0, 1, 4, 3, 0.09090909090909091, ["mov     [pn], n", "mov     rbx, rcx", "jmp     short loc_1AFBB"], ["mov~<TAG>,n", "mov~rbx,rcx", "jmp~FOO"]], [1, 0, 5, 1, 0, 7, 1, 1, 2, 3, 0.06060606060606061, ["mov     rax, n", "shr     rax, 1", "lea     rbx, [rax+n+1]", "mov     [pn], n", "imul    n, s", "test    rbx, rbx", "jz      short loc_1B020"], ["mov~rax,n", "shr~rax,0", "lea~rbx,[rax+0]", "mov~<TAG>,n", "imul~n,s", "test~rbx,rbx", "jz~FOO"]], [0, 0, 6, 1, 0, 7, 1, 1, 2, 1, 0.10606060606060606, ["mov     rax, s", "mul     n", "mov     s, rax", "seto    al", "test    rcx, rcx", "movzx   eax, al", "js      short loc_1B029"], ["mov~rax,s", "mul~,n", "mov~s,rax", "seto~al", "test~rcx,rcx", "movzx~eax,al", "js~FOO"]], [0, 1, 7, 2, 0, 8, 3, 1, 2, 2, 0.0, ["xor     edx, edx", "mov     eax, 80h", "xor     r8d, r8d", "div     s", "test    n, n", "setz    r8b", "add     r8, n", "jmp     short loc_1AFD5"], ["xor~edx,edx", "mov~eax,<STR>", "xor~r8d,r8d", "div~,s", "test~n,n", "setz~r8b", "add~r8,n", "jmp~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 1, 2, 0.030303030303030304, ["test    n, n", "jz      short loc_1B000"], ["test~n,n", "jz~FOO"]], [0, 0, 0, 0, 1, 4, 1, 1, 3, -1, 0.0, ["call    free", "xor     eax, eax", "pop     rbx", "retn"], ["call~FOO", "xor~eax,eax", "pop~rbx", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 6, 1, 0, 5, 1, 0, 1, 1, 0.045454545454545456, ["xor     edx, edx", "mov     rax, 5555555555555554h", "div     s", "cmp     rax, n", "jbe     loc_1B029"], ["xor~edx,edx", "mov~rax,0", "div~,s", "cmp~rax,n", "jbe~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 4, 1, 0.022727272727272728, ["test    rbx, rbx", "jnz     short loc_1B029"], ["test~rbx,rbx", "jnz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 3, 1, 0.09848484848484848, ["test    rax, rax", "jnz     short loc_1B029"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 12, 0, 0, 5, 1, 1, 0, 2, 0.0, ["test    p, p", "push    rbx", "mov     rcx, s", "mov     r8, [pn]", "jz      short loc_1AFD0"], ["test~p,p", "push~rbx", "mov~rcx,s", "mov~r8,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["pop     rbx", "retn"], ["pop~rbx", "retn"]]], "func_feature": [3, 12, 12, 0, 13, 18, 0, 52, 0.04545, 0, 5], "succs": [[9, 12], [0], [0, 6], [10, 7], [3], [3, 4], [], [], [2, 7], [12, 7], [1, 7], [8, 5], []], "fname": "x2nrealloc", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    malloc", "test    rax, rax", "jnz     short loc_1B043"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, 1, 0.16666666666666666, ["test    n, n", "jnz     short loc_1B045"], ["test~n,n", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 4, 0, 4, 4, 0, 10, 0.04167, 0, 0], "succs": [[], [0, 2], [0, 3], []], "fname": "xcharalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_1B065"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    malloc", "test    p, p", "jnz     short loc_1B063"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 4, 0, 4, 4, 50, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 2], [], []], "fname": "xmalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 1, 4, 1, 1, 0, 0, 0.0, ["call    free", "xor     eax, eax", "pop     n", "retn"], ["call~FOO", "xor~eax,eax", "pop~n", "retn"]], [0, 0, 5, 0, 0, 2, 1, 1, 1, 3, 0.03333333333333333, ["test    p, p", "jnz     short loc_1B098"], ["test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 2, 1, 0.1, ["test    n, n", "jnz     short loc_1B0A1"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 4, 1, 2, 1, 2, 0.2, ["mov     n, rbx; size", "call    _realloc", "test    p, p", "jnz     short loc_1B090"], ["mov~n,rbx", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 6, 0, 0, 4, 1, 1, 0, 3, 0.0, ["test    n, n", "push    rbx", "mov     rbx, n", "jnz     short loc_1B07E"], ["test~n,n", "push~rbx", "mov~rbx,n", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]]], "func_feature": [3, 5, 7, 0, 7, 8, 49, 19, 0.04762, 0, 0], "succs": [[], [0, 4], [], [2, 6], [3, 6], [1, 4], []], "fname": "xrealloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 4, 0, 0, 3, 0, 1, 1, 0, 0.05, ["mov     rdx, 5555555555555553h", "cmp     rax, rdx", "ja      short loc_1B101"], ["mov~rdx,0", "cmp~rax,rdx", "ja~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 2, 0, 0.16666666666666666, ["mov     [pn], rax", "mov     pn, rax; size", "call    _realloc", "test    rax, rax", "jz      short loc_1B101"], ["mov~<TAG>,rax", "mov~pn,rax", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 1, 3, 0, 0, 5, 2, 0, 1, 0, 0.08333333333333333, ["test    rax, rax", "mov     edx, 80h", "cmovz   rax, rdx", "test    rax, rax", "jns     short loc_1B0D6"], ["test~rax,rax", "mov~edx,<STR>", "cmovz~rax,rdx", "test~rax,rax", "jns~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 2, 0, 0.06666666666666667, ["mov     rdx, rax", "shr     rdx, 1", "lea     rax, [rax+rdx+1]"], ["mov~rdx,rax", "shr~rdx,0", "lea~rax,[rax+0]"]], [1, 0, 6, 1, 0, 4, 1, 1, 0, 0, 0.0, ["sub     rsp, 8", "test    p, p", "mov     rax, [pn]", "jz      short loc_1B0F0"], ["sub~rsp,0", "test~p,p", "mov~rax,<TAG>", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 3, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [2, 4, 5, 0, 7, 9, 1, 23, 0.05238, 0, 2], "succs": [[], [0, 4], [0, 6], [0, 2], [2], [1, 3], []], "fname": "x2realloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 3, 0, 1, 6, 1, 2, 0, 0, 0.0, ["push    rbx", "mov     esi, 1; size", "mov     rbx, s", "call    _calloc", "test    rax, rax", "jnz     short loc_1B128"], ["push~rbx", "mov~esi,0", "mov~rbx,s", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 0, 1, 0.16666666666666666, ["test    s, s", "jnz     short loc_1B12A"], ["test~s,s", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, -1, 0.0, ["pop     s", "retn"], ["pop~s", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 4, 0, 11, 0.04167, 0, 0], "succs": [[2, 3], [], [1, 3], []], "fname": "xzalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 4, 2, 0, 6, 1, 1, 0, 0, 0.0, ["mov     rax, n", "sub     rsp, 8", "mul     s", "seto    dl", "test    rax, rax", "js      short loc_1B159"], ["mov~rax,n", "sub~rsp,0", "mul~,s", "seto~dl", "test~rax,rax", "js~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 0, 1, 0.16666666666666666, ["movzx   edx, dl", "test    rdx, rdx", "jnz     short loc_1B159"], ["movzx~edx,dl", "test~rdx,rdx", "jnz~FOO"]], [0, 0, 2, 0, 1, 3, 1, 2, 0, 1, 0.16666666666666666, ["call    _calloc", "test    p, p", "jz      short loc_1B159"], ["call~FOO", "test~p,p", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 3, 5, 0, 5, 6, 0, 15, 0.06667, 0, 3], "succs": [[1, 4], [2, 4], [3, 4], [], []], "fname": "xcalloc", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 0, 0.08333333333333333, ["test    s, s", "jnz     short loc_1B192"], ["test~s,s", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0.0, [], []], [1, 0, 1, 1, 0, 7, 0, 1, 1, 0, 0.16666666666666666, ["add     rsp, 8", "mov     rdx, s; n", "mov     rsi, p; src", "pop     s", "pop     p", "mov     rdi, rax; dest", "jmp     _memcpy"], ["add~rsp,0", "mov~rdx,s", "mov~rsi,p", "pop~s", "pop~p", "mov~rdi,rax", "jmp~FOO"]], [1, 0, 4, 1, 1, 9, 1, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, p", "mov     p, s; size", "mov     rbx, s", "sub     rsp, 8", "call    malloc", "test    rax, rax", "jnz     short loc_1B17E"], ["push~rbp", "push~rbx", "mov~rbp,p", "mov~p,s", "mov~rbx,s", "sub~rsp,0", "call~FOO", "test~rax,rax", "jnz~FOO"]]], "func_feature": [2, 2, 5, 0, 5, 5, 1, 19, 0.05, 0, 2], "succs": [[], [0, 3], [], [2], [1, 3]], "fname": "xmemdup", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 3, 1, 2, 10, 1, 3, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, string", "sub     rsp, 8", "call    _strlen", "lea     rbx, [rax+1]", "mov     rdi, rbx; size", "call    malloc", "test    rax, rax", "jz      short loc_1B1D3"], ["push~rbp", "push~rbx", "mov~rbp,string", "sub~rsp,0", "call~FOO", "lea~rbx,[rax+0]", "mov~rdi,rbx", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 1, 1, 0, 7, 0, 1, 1, 0, 0.16666666666666666, ["add     rsp, 8", "mov     rdx, rbx; n", "mov     rsi, string; src", "pop     rbx", "pop     string", "mov     rdi, rax; dest", "jmp     _memcpy"], ["add~rsp,0", "mov~rdx,rbx", "mov~rsi,string", "pop~rbx", "pop~string", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0.0, [], []]], "func_feature": [3, 1, 5, 0, 4, 3, 11, 18, 0.04167, 0, 2], "succs": [[], [0, 2], [3], []], "fname": "xstrdup", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[2, 0, 0, 1, 3, 12, 3, 3, 0, 0, 0.0, ["lea     rsi, aMemoryExhauste; \"memory exhausted\"", "sub     rsp, 8", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     edi, cs:exit_failure; status", "lea     rdx, aS_0+2; format", "mov     rcx, rax", "xor     esi, esi; errnum", "xor     eax, eax", "call    _error", "call    _abort"], ["lea~rsi,<TAG>", "sub~rsp,0", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~edi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "xor~esi,esi", "xor~eax,eax", "call~FOO", "call~FOO"]]], "func_feature": [3, 3, 3, 0, 1, 0, 31, 12, 0.0, 3, 1], "succs": [[]], "fname": "xalloc_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[3, 0, 3, 0, 2, 16, 2, 2, 0, 0, 0.13636363636363635, ["mov     rdi, n_str; arg", "call    quote", "mov     esi, [r14]", "mov     r8, rax", "mov     eax, 0", "lea     rdx, aSS_0; \"%s: %s\"", "mov     rcx, err", "cmp     esi, 16h", "cmovz   esi, eax; errnum", "test    ebx, ebx", "mov     eax, 1", "cmovz   ebx, eax", "xor     eax, eax", "mov     edi, ebx; status", "call    _error", "mov     rbp, [rsp+48h+tnum]"], ["mov~rdi,n_str", "call~FOO", "mov~esi,<TAG>", "mov~r8,rax", "mov~eax,0", "lea~rdx,<TAG>", "mov~rcx,err", "cmp~esi,0", "cmovz~esi,eax", "test~ebx,ebx", "mov~eax,0", "cmovz~ebx,eax", "xor~eax,eax", "mov~edi,ebx", "call~FOO", "mov~rbp,<TAG>"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 3, 0.03939393939393939, ["cmp     ebp, 3", "jnz     short loc_1B28A"], ["cmp~ebp,0", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 3, 3, 0.0, ["mov     dword ptr [rax], 0", "jmp     loc_1B28A"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 2, 3, 0.021212121212121213, ["mov     dword ptr [rax], 4Bh ; 'K'", "jmp     loc_1B28A"], ["mov~<TAG>,0", "jmp~FOO"]], [3, 0, 4, 1, 1, 7, 1, 1, 2, 3, 0.021212121212121213, ["call    ___errno_location", "cmp     rbp, 40000000h", "mov     min, rax", "sbb     eax, eax", "and     eax, 0FFFFFFD7h", "add     eax, 4Bh ; 'K'", "mov     [r14], eax"], ["call~FOO", "cmp~rbp,0", "mov~min,rax", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~<TAG>,eax"]], [1, 0, 7, 0, 1, 5, 0, 2, 1, 4, 0.033333333333333326, ["mov     ebp, eax", "call    ___errno_location", "cmp     ebp, 1", "mov     min, rax", "jz      short loc_1B310"], ["mov~ebp,eax", "call~FOO", "cmp~ebp,0", "mov~min,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 18h", "pop     rbx", "pop     rbp", "pop     n_str", "pop     err", "pop     r14", "pop     max", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~n_str", "pop~err", "pop~r14", "pop~max", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, 1, 0.16363636363636364, ["mov     rdx, [rsp+48h+var_40]", "xor     rdx, fs:28h", "mov     rax, rbp", "jnz     short loc_1B31B"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "mov~rax,rbp", "jnz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 0, 1, 3, 0.04848484848484848, ["mov     rbp, [rsp+48h+tnum]", "cmp     rbp, min", "jb      short loc_1B270"], ["mov~rbp,<TAG>", "cmp~rbp,min", "jb~FOO"]], [0, 0, 5, 0, 0, 2, 0, 0, 2, 2, 0.05454545454545454, ["cmp     rbp, max", "jbe     short loc_1B2C4"], ["cmp~rbp,max", "jbe~FOO"]], [1, 0, 11, 1, 1, 21, 3, 2, 0, 4, 0.0, ["push    r15", "push    r14", "mov     r15, max", "push    r13", "push    r12", "mov     r14, min", "push    rbp", "push    rbx", "mov     edx, esi; strtol_base", "xor     esi, esi; ptr", "mov     r12, n_str", "mov     r13, err", "sub     rsp, 18h", "mov     max, rsp; val", "mov     ebx, [rsp+48h+err_exit]", "mov     rax, fs:28h", "mov     [rsp+48h+var_40], rax", "xor     eax, eax", "call    xstrtoumax", "test    eax, eax", "jnz     loc_1B2F0"], ["push~r15", "push~r14", "mov~r15,max", "push~r13", "push~r12", "mov~r14,min", "push~rbp", "push~rbx", "mov~edx,esi", "xor~esi,esi", "mov~r12,n_str", "mov~r13,err", "sub~rsp,0", "mov~max,rsp", "mov~ebx,[rsp+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [6, 7, 12, 1, 12, 16, 1, 73, 0.04318, 2, 3], "succs": [[7], [0, 2], [0], [0], [0], [1, 3], [], [11, 6], [9, 4], [4, 7], [8, 5], []], "fname": "xnumtoumax", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 5, 0, 0, 2, 0, 1, 0, 0, 0.03939393939393939, ["cmp     ebp, 3", "jnz     short loc_1B392"], ["cmp~ebp,0", "jnz~FOO"]], [1, 0, 7, 0, 1, 5, 0, 2, 1, 4, 0.033333333333333326, ["mov     ebp, eax", "call    ___errno_location", "cmp     ebp, 1", "mov     min, rax", "jz      short loc_1B410"], ["mov~ebp,eax", "call~FOO", "cmp~ebp,0", "mov~min,rax", "jz~FOO"]], [2, 0, 11, 1, 1, 23, 3, 2, 0, 4, 0.0, ["push    r15", "push    r14", "mov     r15, max", "push    r13", "push    r12", "mov     r14, min", "push    rbp", "push    rbx", "xor     esi, esi; ptr", "mov     r13, err", "mov     edx, 0Ah; strtol_base", "mov     err, suffixes; valid_suffixes", "sub     rsp, 18h", "mov     r12, n_str", "mov     ebx, r9d", "mov     rax, fs:28h", "mov     [rsp+48h+var_40], rax", "xor     eax, eax", "mov     rax, rsp", "mov     suffixes, rax; val", "call    xstrtoumax", "test    eax, eax", "jnz     loc_1B3F0"], ["push~r15", "push~r14", "mov~r15,max", "push~r13", "push~r12", "mov~r14,min", "push~rbp", "push~rbx", "xor~esi,esi", "mov~r13,err", "mov~edx,0", "mov~err,suffixes", "sub~rsp,0", "mov~r12,n_str", "mov~ebx,r9d", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,rsp", "mov~suffixes,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 2, 3, 0.021212121212121213, ["mov     dword ptr [rax], 4Bh ; 'K'", "jmp     loc_1B392"], ["mov~<TAG>,0", "jmp~FOO"]], [3, 0, 3, 0, 2, 16, 2, 2, 3, 2, 0.13636363636363635, ["mov     rdi, n_str; arg", "call    quote", "mov     esi, [r14]", "mov     r8, rax", "mov     eax, 0", "lea     rdx, aSS_0; \"%s: %s\"", "mov     rcx, err", "cmp     esi, 16h", "cmovz   esi, eax; errnum", "test    ebx, ebx", "mov     eax, 1", "cmovz   ebx, eax", "xor     eax, eax", "mov     edi, ebx; status", "call    _error", "mov     rbp, [rsp+48h+var_48]"], ["mov~rdi,n_str", "call~FOO", "mov~esi,<TAG>", "mov~r8,rax", "mov~eax,0", "lea~rdx,<TAG>", "mov~rcx,err", "cmp~esi,0", "cmovz~esi,eax", "test~ebx,ebx", "mov~eax,0", "cmovz~ebx,eax", "xor~eax,eax", "mov~edi,ebx", "call~FOO", "mov~rbp,<TAG>"]], [1, 0, 4, 0, 0, 2, 0, 1, 3, 3, 0.0, ["mov     dword ptr [rax], 0", "jmp     short loc_1B392"], ["mov~<TAG>,0", "jmp~FOO"]], [3, 0, 4, 1, 1, 7, 1, 1, 2, 3, 0.02121212121212121, ["call    ___errno_location", "cmp     rbp, 40000000h", "mov     min, rax", "sbb     eax, eax", "and     eax, 0FFFFFFD7h", "add     eax, 4Bh ; 'K'", "mov     [r14], eax"], ["call~FOO", "cmp~rbp,0", "mov~min,rax", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~<TAG>,eax"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 18h", "pop     rbx", "pop     rbp", "pop     n_str", "pop     err", "pop     r14", "pop     max", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~n_str", "pop~err", "pop~r14", "pop~max", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, 1, 0.16363636363636364, ["mov     rdx, [rsp+48h+var_40]", "xor     rdx, fs:28h", "mov     rax, rbp", "jnz     short loc_1B41B"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "mov~rax,rbp", "jnz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 1, 3, 0.04848484848484848, ["mov     rbp, [rsp+48h+var_48]", "cmp     min, rbp", "ja      short loc_1B378"], ["mov~rbp,<TAG>", "cmp~min,rbp", "ja~FOO"]], [0, 0, 5, 0, 0, 2, 0, 0, 2, 2, 0.05454545454545454, ["cmp     max, rbp", "jnb     short loc_1B3CC"], ["cmp~max,rbp", "jnb~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [6, 7, 13, 2, 12, 16, 0, 75, 0.04318, 2, 3], "succs": [[4, 5], [0, 3], [1, 9], [4], [8], [4], [4], [], [11, 7], [10, 6], [8, 6], []], "fname": "xdectoumax", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 3, 0, 1, 7, 3, 2, 0, 0, 0.0, ["push    rbx", "xor     esi, esi; size", "xor     edi, edi; buf", "call    _getcwd", "test    rax, rax", "mov     rbx, rax", "jz      short loc_1B440"], ["push~rbx", "xor~esi,esi", "xor~edi,edi", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [1, 0, 2, 0, 1, 3, 0, 2, 0, 1, 0.16666666666666666, ["call    ___errno_location", "cmp     dword ptr [rax], 0Ch", "jnz     short loc_1B432"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 0, -1, 0.0, ["mov     rax, rbx", "pop     rbx", "retn"], ["mov~rax,rbx", "pop~rbx", "retn"]]], "func_feature": [3, 3, 5, 0, 4, 4, 1, 14, 0.04167, 0, 0], "succs": [[1, 3], [2, 3], [], []], "fname": "xgetcwd", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[3, 0, 9, 1, 2, 13, 1, 3, 0, 0, 0.22916666666666666, ["mov     rdi, hostname; p", "mov     rsi, r12; pn", "call    x2realloc", "mov     rsi, [rsp+38h+size]", "mov     rdi, rax; name", "mov     hostname, rax", "lea     r14, [hostname+rsi-2]", "sub     rsi, 1; len", "mov     byte ptr [r14], 0", "mov     dword ptr [rbp+0], 0", "call    _gethostname", "test    eax, eax", "jnz     short loc_1B4F0"], ["mov~rdi,hostname", "mov~rsi,r12", "call~FOO", "mov~rsi,<TAG>", "mov~rdi,rax", "mov~hostname,rax", "lea~r14,[hostname+0]", "sub~rsi,0", "mov~<TAG>,0", "mov~[word ptr [rbp+0],0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 2, 2, 0.10416666666666666, ["cmp     byte ptr [r14], 0", "jnz     short loc_1B490"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 0, 3, 4, 0.08333333333333333, ["bt      r13, r14", "jb      loc_1B490"], ["bt~r13,r14", "jb~FOO"]], [3, 0, 9, 1, 1, 16, 2, 1, 0, 4, 0.0, ["push    r14", "push    r13", "mov     r13, 1000401001h", "push    r12", "push    rbp", "push    rbx", "xor     ebx, ebx", "sub     rsp, 10h", "mov     rax, fs:28h", "mov     [rsp+38h+var_30], rax", "xor     eax, eax", "mov     [rsp+38h+size], 22h", "mov     r12, rsp", "call    ___errno_location", "mov     rbp, rax", "nop     dword ptr [rax+rax+00h]"], ["push~r14", "push~r13", "mov~r13,0", "push~r12", "push~rbp", "push~rbx", "xor~ebx,ebx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~<TAG>,0", "mov~r12,rsp", "call~FOO", "mov~rbp,rax", "nop~[word ptr [rax+0]"]], [1, 0, 0, 1, 0, 7, 0, 0, 4, -1, 0.0, ["add     rsp, 10h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, 1, 0.19444444444444442, ["mov     rdx, [rsp+38h+var_30]", "xor     rdx, fs:28h", "mov     rax, rbx", "jnz     short loc_1B51C"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "mov~rax,rbx", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 3, 2, 0.10416666666666666, ["mov     rdi, hostname; ptr", "xor     ebx, ebx", "call    free", "mov     [rbp+0], r14d", "jmp     short loc_1B4C8"], ["mov~rdi,hostname", "xor~ebx,ebx", "call~FOO", "mov~[rbp+0],r14d", "jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 4, 3, 0.034722222222222224, ["jmp     short loc_1B4FA"], ["jmp~FOO"]], [1, 0, 9, 0, 0, 3, 0, 0, 2, 3, 0.125, ["mov     r14d, [rbp+0]", "cmp     r14d, 24h ; '$'", "jbe     short loc_1B510"], ["mov~r14d,[rbp+0]", "cmp~r14d,0", "jbe~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [5, 5, 10, 1, 10, 13, 1, 54, 0.0875, 1, 3], "succs": [[8, 1], [0, 5], [0, 7], [0], [], [9, 4], [5], [6], [2, 6], []], "fname": "xgethostname", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 61, 0, 0, 3, 1, 1, 0, 0, 0.06380352955695422, ["test    valid_suffixes, valid_suffixes", "mov     [rsp+58h+strtol_base], rcx", "jnz     short loc_1B640"], ["test~valid_suffixes,valid_suffixes", "mov~[rsp+0],rcx", "jnz~FOO"]], [0, 0, 68, 0, 1, 7, 0, 2, 4, 10, 0.059237319511292116, ["mov     rsi, p; endptr", "mov     rdi, s; nptr", "call    _strtoul", "mov     rcx, [p]", "mov     ch_0, rax", "cmp     rcx, s", "jz      short loc_1B5F8"], ["mov~rsi,p", "mov~rdi,s", "call~FOO", "mov~rcx,<TAG>", "mov~ch_0,rax", "cmp~rcx,s", "jz~FOO"]], [0, 0, 56, 0, 1, 7, 1, 2, 8, 6, 0.1373565346168086, ["movsx   esi, r12b; c", "mov     rdi, valid_suffixes; s", "mov     [rsp+58h+strtol_base], rcx", "call    _strchr", "test    rax, rax", "mov     rcx, [rsp+58h+strtol_base]", "jz      loc_1B76C; jumptable 000000000001B706 default case"], ["movsx~esi,r12b", "mov~rdi,valid_suffixes", "mov~[rsp+0],rcx", "call~FOO", "test~rax,rax", "mov~rcx,[rsp+0]", "jz~FOO"]], [0, 0, 58, 0, 0, 3, 1, 1, 8, 7, 0.03998519067012218, ["movzx   r12d, byte ptr [rcx]", "test    r12b, r12b", "jnz     short loc_1B667"], ["movzx~r12d,<TAG>", "test~r12b,r12b", "jnz~FOO"]], [1, 0, 58, 0, 1, 8, 2, 2, 7, 7, 0.07997038134024435, ["movsx   esi, r12b; c", "mov     rdi, valid_suffixes; s", "xor     ebp, ebp", "call    _strchr", "test    rax, rax", "mov     ebx, 1", "mov     rcx, [rsp+58h+strtol_base]", "jz      short loc_1B608"], ["movsx~esi,r12b", "mov~rdi,valid_suffixes", "xor~ebp,ebp", "call~FOO", "test~rax,rax", "mov~ebx,0", "mov~rcx,[rsp+0]", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 6, -1, 0.0006170554115759594, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [2, 0, 16, 0, 0, 3, 1, 1, 14, 2, 0.0038874490929285454, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_1B720"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [0, 0, 17, 1, 0, 2, 0, 0, 15, 2, 0.022028878193261756, ["mul     rsi", "jo      loc_1B8F9"], ["mul~,rsi", "jo~FOO"]], [0, 0, 18, 1, 0, 3, 0, 0, 13, 3, 0.014439096630877453, ["mov     rax, tmp; jumptable 000000000001B706 case 3", "mul     rsi", "jo      loc_1B8F9"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [2, 0, 8, 0, 0, 3, 1, 1, 16, -1, 0.0, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_1B744"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [0, 0, 9, 1, 0, 2, 0, 0, 15, -1, 0.04313217326915957, ["mul     rsi", "jo      loc_1B8CC"], ["mul~,rsi", "jo~FOO"]], [0, 0, 45, 1, 0, 5, 0, 1, 12, 2, 0.18974453905960756, ["lea     rdx, off_21A18", "movzx   r12d, r12b", "movsxd  rax, dword ptr [rdx+r12*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movzx~r12d,r12b", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [2, 0, 46, 1, 0, 3, 0, 1, 11, 3, 0.19326175490559053, ["sub     r12d, 42h ; 'B'", "cmp     r12b, 35h ; '5'; switch 54 cases", "ja      short loc_1B76C; jumptable 000000000001B706 default case"], ["sub~r12d,0", "cmp~r12b,0", "ja~FOO"]], [0, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.00037023324694557573, ["add     tmp, tmp", "jmp     short loc_1B753; jumptable 000000000001B706 case 33"], ["add~tmp,tmp", "jmp~FOO"]], [1, 0, 6, 1, 0, 4, 0, 0, 13, -1, 0.006016290262865606, ["mov     edx, 2; jumptable 000000000001B706 case 53", "mov     rax, rdx", "mul     tmp", "jo      short loc_1B7FF"], ["mov~edx,0", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 4, -1, 0.006664198445020363, ["mov     ebp, 4"], ["mov~ebp,0"]], [1, 0, 69, 0, 0, 2, 0, 1, 3, 11, 0.05109218807848945, ["cmp     bl, 2Dh ; '-'", "jz      short loc_1B608"], ["cmp~bl,0", "jz~FOO"]], [2, 0, 61, 0, 0, 3, 0, 1, 6, 9, 0.007929162038751079, ["cmp     eax, 22h ; '\"'", "mov     ebp, 1", "jnz     short loc_1B608"], ["cmp~eax,0", "mov~ebp,0", "jnz~FOO"]], [0, 0, 59, 0, 0, 3, 1, 1, 6, 8, 0.0718869554485993, ["movzx   r12d, byte ptr [s+0]", "test    r12b, r12b", "jz      short loc_1B608"], ["movzx~r12d,[yte ptr [s+0]", "test~r12b,r12b", "jz~FOO"]], [1, 0, 55, 0, 0, 3, 0, 1, 9, 5, 0.14161421695668272, ["lea     eax, [r12-45h]", "cmp     al, 2Fh ; '/'", "ja      short loc_1B6E0"], ["lea~eax,[r12-45h]+0]", "cmp~al,0", "ja~FOO"]], [0, 0, 20, 1, 0, 3, 0, 0, 13, 4, 0.014439096630877453, ["mov     rax, tmp; jumptable 000000000001B706 case 24", "mul     rsi", "jo      loc_1B7B4"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [2, 0, 14, 0, 0, 3, 1, 1, 14, 0, 0.0037023324694557573, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_1B729"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [0, 0, 15, 1, 0, 2, 0, 0, 15, 1, 0.030544242873009997, ["mul     rsi", "jo      loc_1B908"], ["mul~,rsi", "jo~FOO"]], [0, 0, 16, 1, 0, 3, 0, 0, 13, 1, 0.014439096630877453, ["mov     rax, tmp; jumptable 000000000001B706 case 14", "mul     rsi", "jo      loc_1B908"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [1, 0, 72, 0, 2, 17, 1, 3, 1, 13, 0.013328396890040726, ["lea     rax, [rsp+58h+t_ptr]", "mov     r15, ptr", "test    ptr, ptr", "mov     rbp, s", "mov     dword ptr [rsp+58h+strtol_base], edx", "mov     r14, val", "mov     r13, valid_suffixes", "cmovz   r15, rax", "call    ___errno_location", "mov     dword ptr [rax], 0", "mov     r12, rax", "movzx   ebx, byte ptr [q+0]", "call    ___ctype_b_loc", "mov     edx, dword ptr [rsp+58h+strtol_base]; base", "mov     rsi, [rax]", "mov     rax, q", "jmp     short loc_1B5A7"], ["lea~rax,[rsp+0]", "mov~r15,ptr", "test~ptr,ptr", "mov~rbp,s", "mov~[word ptr [rsp+0],edx", "mov~r14,val", "mov~r13,valid_suffixes", "cmovz~r15,rax", "call~FOO", "mov~<TAG>,0", "mov~r12,rax", "movzx~ebx,[yte ptr [q+0]", "call~FOO", "mov~edx,[word ptr [rsp+0]", "mov~rsi,<TAG>", "mov~rax,q", "jmp~FOO"]], [2, 0, 74, 1, 0, 12, 1, 1, 0, 14, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "cmp     edx, 24h ; '$'", "ja      loc_1B880"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edx,0", "ja~FOO"]], [0, 0, 14, 1, 0, 3, 0, 0, 13, -1, 0.014439096630877453, ["mov     rax, tmp; jumptable 000000000001B706 cases 18,50", "mul     rsi", "jo      loc_1B8EA"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [0, 0, 19, 1, 0, 2, 0, 0, 15, 3, 0.010551647537948908, ["mul     rsi", "jno     loc_1B717"], ["mul~,rsi", "jno~FOO"]], [2, 0, 18, 0, 0, 3, 1, 1, 14, 3, 0.004072565716401333, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_1B717"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [0, 0, 18, 0, 0, 1, 1, 0, 14, 3, 0.004072565716401333, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, -1, 0.026286560533135876, ["mov     rdi, [rsp+58h+var_40]", "xor     rdi, fs:28h", "mov     eax, ebp", "jnz     loc_1B87B"], ["mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "mov~eax,ebp", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 8, -1, 0.0016660496112550908, ["mov     [val], tmp", "jmp     short loc_1B60D"], ["mov~<TAG>,tmp", "jmp~FOO"]], [2, 0, 3, 1, 0, 8, 1, 1, 13, -1, 0.022491669751943725, ["add     rcx, rdi; jumptable 000000000001B706 case 33", "mov     eax, ebp", "mov     [p], rcx", "or      eax, 2", "cmp     byte ptr [rcx], 0", "mov     [val], tmp", "cmovnz  ebp, eax", "jmp     loc_1B60D"], ["add~rcx,rdi", "mov~eax,ebp", "mov~<TAG>,rcx", "or~eax,0", "cmp~<TAG>,0", "mov~<TAG>,tmp", "cmovnz~ebp,eax", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 9, -1, 0.006386523509811181, ["mov     [val], tmp; jumptable 000000000001B706 default case", "or      ebp, 2", "jmp     loc_1B60D"], ["mov~<TAG>,tmp", "or~ebp,0", "jmp~FOO"]], [1, 0, 54, 0, 0, 3, 0, 0, 10, 5, 0.017771195853387635, ["mov     rdx, 814400308945h", "bt      rdx, rax", "jnb     short loc_1B6E0"], ["mov~rdx,0", "bt~rdx,rax", "jnb~FOO"]], [2, 0, 10, 0, 0, 3, 1, 1, 14, -1, 0.0057386153276564236, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_1B73B"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [0, 0, 11, 1, 0, 2, 0, 0, 15, -1, 0.038689374305812665, ["mul     rsi", "jo      loc_1B8DB"], ["mul~,rsi", "jo~FOO"]], [0, 0, 12, 1, 0, 3, 0, 0, 13, -1, 0.01925212884116994, ["mov     rax, tmp; jumptable 000000000001B706 cases 5,37", "mul     rsi", "jo      loc_1B8DB"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [0, 0, 12, 0, 0, 2, 1, 1, 14, -1, 0.003517215845982969, ["xor     r8d, r8d", "jmp     loc_1B732"], ["xor~r8d,r8d", "jmp~FOO"]], [0, 0, 22, 1, 0, 3, 0, 0, 13, 5, 0.014439096630877453, ["mov     rax, tmp; jumptable 000000000001B706 case 23", "mul     rsi", "jo      loc_1B8AE"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 14, 2, 0.0038874490929285454, ["xor     r8d, r8d", "jmp     loc_1B720"], ["xor~r8d,r8d", "jmp~FOO"]], [1, 0, 72, 1, 0, 2, 0, 0, 3, 13, 0.0, ["add     q, 1", "movzx   ebx, byte ptr [q]"], ["add~q,0", "movzx~ebx,<TAG>"]], [0, 1, 72, 0, 0, 3, 1, 1, 2, 12, 0.039244724176231024, ["movzx   ecx, bl", "test    byte ptr [rsi+rcx*2+1], 20h", "jnz     short loc_1B5A0"], ["movzx~ecx,bl", "test~[yte ptr [rsi+0],<STR>", "jnz~FOO"]], [0, 0, 20, 0, 0, 1, 1, 0, 14, 4, 0.004257682339874121, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [2, 0, 8, 0, 0, 3, 1, 1, 14, -1, 0.01036653091447612, ["or      rax, 0FFFFFFFFFFFFFFFFh", "mov     r8d, 1", "jmp     loc_1B744"], ["or~rax,0", "mov~r8d,0", "jmp~FOO"]], [0, 0, 10, 1, 0, 3, 0, 0, 13, -1, 0.028878193261754906, ["mov     rax, tmp; jumptable 000000000001B706 cases 11,43", "mul     rsi", "jo      loc_1B89F"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [2, 0, 5, 0, 0, 3, 1, 1, 16, -1, 0.01582747130692336, ["mov     r8d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_1B750"], ["mov~r8d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 7, 1, 0, 2, 0, 0, 15, -1, 0.050721954831543875, ["mul     rsi", "jo      loc_1B8BD"], ["mul~,rsi", "jo~FOO"]], [0, 0, 13, 1, 0, 2, 0, 0, 15, -1, 0.036097741577193636, ["mul     rsi", "jo      loc_1B8EA"], ["mul~,rsi", "jo~FOO"]], [0, 0, 14, 0, 0, 2, 1, 1, 14, -1, 0.0037023324694557573, ["xor     r8d, r8d", "jmp     loc_1B729"], ["xor~r8d,r8d", "jmp~FOO"]], [2, 0, 20, 0, 0, 3, 1, 1, 14, 4, 0.004257682339874121, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_1B7AB"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     r12", "pop     valid_suffixes", "pop     val", "pop     p", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~valid_suffixes", "pop~val", "pop~p", "retn"]], [2, 0, 12, 0, 0, 3, 1, 1, 14, -1, 0.003517215845982969, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_1B732"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [2, 0, 4, 0, 0, 3, 1, 1, 14, -1, 0.0011106997408367272, ["mov     ebp, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_1B753; jumptable 000000000001B706 case 33"], ["mov~ebp,0", "or~rbx,0", "jmp~FOO"]], [0, 1, 6, 1, 0, 4, 0, 0, 13, -1, 0.006016290262865606, ["mov     edx, 200h; jumptable 000000000001B706 case 32", "mov     rax, rdx", "mul     tmp", "jo      short loc_1B7FF"], ["mov~edx,<STR>", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]], [1, 0, 6, 1, 0, 4, 0, 0, 13, -1, 0.006016290262865606, ["mov     edx, 400h; jumptable 000000000001B706 case 0", "mov     rax, rdx", "mul     tmp", "jo      short loc_1B7FF"], ["mov~edx,0", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]], [0, 0, 5, 1, 0, 4, 0, 0, 13, -1, 0.0012032580525731212, ["mov     rax, tmp; jumptable 000000000001B706 cases 9,41", "mul     rsi", "mov     tmp, rax", "jno     loc_1B753; jumptable 000000000001B706 case 33"], ["mov~rax,tmp", "mul~,rsi", "mov~tmp,rax", "jno~FOO"]], [1, 0, 53, 0, 1, 7, 1, 2, 11, 5, 0.015734912995186968, ["mov     esi, 30h ; '0'; c", "mov     rdi, valid_suffixes; s", "mov     [rsp+58h+strtol_base], rcx", "call    _strchr", "test    rax, rax", "mov     rcx, [rsp+58h+strtol_base]", "jz      short loc_1B6E0"], ["mov~esi,0", "mov~rdi,valid_suffixes", "mov~[rsp+0],rcx", "call~FOO", "test~rax,rax", "mov~rcx,[rsp+0]", "jz~FOO"]], [0, 0, 60, 0, 0, 2, 1, 1, 6, 9, 0.006941873380229545, ["xor     ebp, ebp", "jmp     short loc_1B5DE"], ["xor~ebp,ebp", "jmp~FOO"]], [0, 0, 63, 0, 0, 3, 1, 1, 5, 10, 0.005800320868814019, ["mov     eax, [r12]", "test    eax, eax", "jz      short loc_1B638"], ["mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 14, -1, 0.0057386153276564236, ["xor     r8d, r8d", "jmp     loc_1B73B"], ["xor~r8d,r8d", "jmp~FOO"]], [1, 0, 52, 0, 0, 3, 0, 1, 12, 5, 0.013328396890040726, ["movzx   eax, byte ptr [rcx+1]", "cmp     al, 44h ; 'D'", "jz      short loc_1B6CF"], ["movzx~eax,[yte ptr [rcx+0]", "cmp~al,0", "jz~FOO"]], [1, 0, 51, 0, 0, 2, 0, 1, 13, 5, 0.0072195483154387265, ["cmp     al, 69h ; 'i'", "jz      loc_1B862"], ["cmp~al,0", "jz~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 14, -1, 0.01036653091447612, ["xor     r8d, r8d", "jmp     loc_1B744"], ["xor~r8d,r8d", "jmp~FOO"]], [1, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.00037023324694557573, ["shl     tmp, 0Ah", "jmp     loc_1B753; jumptable 000000000001B706 case 33"], ["shl~tmp,0", "jmp~FOO"]], [1, 0, 49, 0, 0, 2, 0, 1, 14, 5, 0.0005553498704183636, ["cmp     al, 42h ; 'B'", "jnz     short loc_1B6E0"], ["cmp~al,0", "jnz~FOO"]], [1, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.00037023324694557573, ["shl     tmp, 9", "jmp     short loc_1B753; jumptable 000000000001B706 case 33"], ["shl~tmp,0", "jmp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 16, -1, 0.01582747130692336, ["mov     rbx, rax"], ["mov~rbx,rax"]], [0, 0, 4, 0, 0, 1, 1, 0, 17, -1, 0.022954461310625694, ["or      ebp, r8d"], ["or~ebp,r8d"]], [1, 0, 0, 0, 1, 5, 0, 1, 1, -1, 0.0, ["lea     val, __PRETTY_FUNCTION___4162; \"xstrtoul\"", "lea     ptr, aLibXstrtolC; \"lib/xstrtol.c\"", "lea     s, a0StrtolBaseStr; \"0 <= strtol_base && strtol_base <= 36\"", "mov     edx, 54h ; 'T'; line", "call    ___assert_fail"], ["lea~val,<TAG>", "lea~ptr,<TAG>", "lea~s,<TAG>", "mov~edx,0", "call~FOO"]], [2, 0, 47, 0, 0, 3, 0, 1, 13, 4, 0.013050721954831545, ["mov     esi, 3E8h", "mov     edi, 2", "jmp     short loc_1B6EA"], ["mov~esi,0", "mov~edi,0", "jmp~FOO"]], [2, 0, 47, 0, 0, 2, 0, 0, 10, 4, 0.14985190670122178, ["mov     esi, 400h", "mov     edi, 1"], ["mov~esi,0", "mov~edi,0"]], [0, 0, 59, 0, 0, 2, 1, 1, 7, 8, 0.03387634209552018, ["test    valid_suffixes, valid_suffixes", "jz      short loc_1B5EC"], ["test~valid_suffixes,valid_suffixes", "jz~FOO"]], [2, 0, 47, 0, 0, 6, 1, 1, 14, 4, 0.00870048130322103, ["xor     edi, edi", "cmp     byte ptr [rcx+2], 42h ; 'B'", "mov     esi, 400h", "setz    dil", "lea     rdi, [rdi+rdi+1]", "jmp     loc_1B6EA"], ["xor~edi,edi", "cmp~[yte ptr [rcx+0],0", "mov~esi,0", "setz~dil", "lea~rdi,[rdi+0]", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [8, 35, 53, 1, 75, 122, 1, 250, 0.02566, 5, 27], "succs": [[18, 5], [0, 59], [33, 19], [2, 31], [2, 15], [15], [22], [22, 6], [40, 6], [47], [9, 47], [32, 33, 37, 39, 8, 23, 45, 14, 20, 54, 55, 56, 26], [33, 11], [32], [13, 53], [30], [1, 15], [72, 15], [4, 15], [34, 71], [28, 29], [48], [48, 21], [49, 21], [42], [24, 69], [52, 38], [28, 7], [7], [7], [74, 51], [30], [30], [30], [57, 71], [10], [10, 35], [35, 60], [36], [50, 43], [22], [42], [16, 41], [27], [47], [44, 63], [68], [67, 46], [52, 36], [48], [27], [], [36], [32], [66, 53], [64, 53], [32, 53], [61, 71], [72], [17, 58], [10], [70, 62], [65, 73], [47], [32], [70, 71], [32], [68], [32], [], [12], [12], [3, 31], [12], []], "fname": "xstrtoul", "n_num": 75}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 4, 0, 0, 3, 1, 1, 0, 0, 0.17777777777777778, ["test    r10d, r10d", "movsxd  rax, r10d", "js      short loc_1B9B2"], ["test~r10d,r10d", "movsxd~rax,r10d", "js~FOO"]], [0, 0, 5, 0, 0, 2, 0, 1, 2, 2, 0.022222222222222223, ["lea     opt_idx, aInvalidSuffixI; \"invalid suffix in %s%s argument '%s'\"", "jmp     short loc_1B95C"], ["lea~opt_idx,<TAG>", "jmp~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 1, 2, 0.061111111111111116, ["cmp     edi, 4", "lea     opt_idx, aInvalidSSArgum; \"invalid %s%s argument '%s'\"", "jz      short loc_1B95C"], ["cmp~edi,0", "lea~opt_idx,<TAG>", "jz~FOO"]], [1, 0, 5, 1, 0, 3, 0, 1, 2, 2, 0.03888888888888889, ["sub     edi, 1", "lea     opt_idx, aSSArgumentSToo; \"%s%s argument '%s' too large\"", "jnz     short loc_1B996"], ["sub~edi,0", "lea~opt_idx,<TAG>", "jnz~FOO"]], [2, 0, 10, 1, 0, 13, 1, 1, 0, 3, 0.0, ["push    r13", "push    r12", "mov     r10d, esi", "push    rbp", "push    rbx", "mov     r12, arg", "sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+38h+var_30], rax", "xor     eax, eax", "cmp     edi, 3", "mov     ebp, cs:exit_failure", "ja      short loc_1B9A4"], ["push~r13", "push~r12", "mov~r10d,esi", "push~rbp", "push~rbx", "mov~r12,arg", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edi,0", "mov~ebp,<TAG>", "ja~FOO"]], [1, 0, 2, 1, 0, 6, 0, 1, 3, 0, 0.044444444444444446, ["lea     rbx, off_21B31", "mov     [rsp+38h+var_32], dl", "mov     [rsp+38h+var_31], 0", "lea     r13, [rsp+38h+var_32]", "sub     rbx, rax", "jmp     short loc_1B973"], ["lea~rbx,<TAG>", "mov~[rsp+0],dl", "mov~[rsp+0],0", "lea~r13,[rsp+0]", "sub~rbx,rax", "jmp~FOO"]], [1, 0, 7, 0, 0, 2, 0, 0, 1, 3, 0.02777777777777778, ["cmp     edi, 2", "jnb     short loc_1B99B"], ["cmp~edi,0", "jnb~FOO"]], [1, 0, 2, 1, 0, 3, 0, 0, 3, -1, 0.044444444444444446, ["shl     rax, 5", "lea     rbx, off_21B31", "mov     r13, [long_options+rax]"], ["shl~rax,0", "lea~rbx,<TAG>", "mov~r13,<TAG>"]], [0, 0, 1, 0, 0, 1, 0, 1, 2, -1, 0.016666666666666666, ["jmp     short loc_1B996"], ["jmp~FOO"]], [1, 0, 1, 0, 2, 11, 3, 2, 4, -1, 0.044444444444444446, ["mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r9, arg", "mov     rdx, rax; format", "mov     r8, r13", "mov     rcx, rbx", "xor     esi, esi; errnum", "mov     edi, ebp; status", "xor     eax, eax", "call    _error"], ["mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r9,arg", "mov~rdx,rax", "mov~r8,r13", "mov~rcx,rbx", "xor~esi,esi", "mov~edi,ebp", "xor~eax,eax", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [3, 5, 10, 3, 11, 15, 1, 48, 0.04343, 6, 4], "succs": [[5, 7], [0], [0, 8], [0, 10], [2, 6], [9], [1, 3], [9], [10], [10], []], "fname": "xstrtol_fatal", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 3, 0, 0, 3, 1, 1, 0, 0, 0.006386523509811181, ["mov     [val], tmp; jumptable 000000000001BBA6 default case", "or      ebp, 2", "jmp     loc_1BAAD"], ["mov~<TAG>,tmp", "or~ebp,0", "jmp~FOO"]], [0, 0, 56, 0, 1, 7, 1, 2, 8, 6, 0.1373565346168086, ["movsx   esi, r12b; c", "mov     rdi, valid_suffixes; s", "mov     [rsp+58h+strtol_base], rcx", "call    _strchr", "test    rax, rax", "mov     rcx, [rsp+58h+strtol_base]", "jz      loc_1BC0C; jumptable 000000000001BBA6 default case"], ["movsx~esi,r12b", "mov~rdi,valid_suffixes", "mov~[rsp+0],rcx", "call~FOO", "test~rax,rax", "mov~rcx,[rsp+0]", "jz~FOO"]], [2, 0, 46, 1, 0, 3, 0, 1, 11, 3, 0.19326175490559053, ["sub     r12d, 42h ; 'B'", "cmp     r12b, 35h ; '5'; switch 54 cases", "ja      short loc_1BC0C; jumptable 000000000001BBA6 default case"], ["sub~r12d,0", "cmp~r12b,0", "ja~FOO"]], [0, 0, 45, 1, 0, 5, 0, 1, 12, 2, 0.18974453905960756, ["lea     rdx, off_21B60", "movzx   r12d, r12b", "movsxd  rax, dword ptr [rdx+r12*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movzx~r12d,r12b", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [0, 0, 59, 0, 0, 2, 1, 1, 7, 8, 0.03387634209552018, ["test    valid_suffixes, valid_suffixes", "jz      short loc_1BA8E"], ["test~valid_suffixes,valid_suffixes", "jz~FOO"]], [0, 0, 60, 0, 0, 2, 1, 1, 6, 9, 0.006941873380229545, ["xor     ebp, ebp", "jmp     short loc_1BA80"], ["xor~ebp,ebp", "jmp~FOO"]], [2, 0, 61, 0, 0, 3, 0, 1, 6, 9, 0.007929162038751079, ["cmp     eax, 22h ; '\"'", "mov     ebp, 1", "jnz     short loc_1BAA8"], ["cmp~eax,0", "mov~ebp,0", "jnz~FOO"]], [1, 0, 58, 0, 1, 8, 2, 2, 7, 7, 0.07997038134024435, ["movsx   esi, r12b; c", "mov     rdi, valid_suffixes; s", "xor     ebp, ebp", "call    _strchr", "test    rax, rax", "mov     ebx, 1", "mov     rcx, [rsp+58h+strtol_base]", "jz      short loc_1BAA8"], ["movsx~esi,r12b", "mov~rdi,valid_suffixes", "xor~ebp,ebp", "call~FOO", "test~rax,rax", "mov~ebx,0", "mov~rcx,[rsp+0]", "jz~FOO"]], [0, 0, 59, 0, 0, 3, 1, 1, 6, 8, 0.0718869554485993, ["movzx   r12d, byte ptr [s+0]", "test    r12b, r12b", "jz      short loc_1BAA8"], ["movzx~r12d,[yte ptr [s+0]", "test~r12b,r12b", "jz~FOO"]], [2, 0, 3, 1, 0, 8, 1, 1, 13, -1, 0.022491669751943725, ["add     rcx, rdi; jumptable 000000000001BBA6 case 33", "mov     eax, ebp", "mov     [p], rcx", "or      eax, 2", "cmp     byte ptr [rcx], 0", "mov     [val], tmp", "cmovnz  ebp, eax", "jmp     loc_1BAAD"], ["add~rcx,rdi", "mov~eax,ebp", "mov~<TAG>,rcx", "or~eax,0", "cmp~<TAG>,0", "mov~<TAG>,tmp", "cmovnz~ebp,eax", "jmp~FOO"]], [0, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.00037023324694557573, ["add     tmp, tmp", "jmp     short loc_1BBF3; jumptable 000000000001BBA6 case 33"], ["add~tmp,tmp", "jmp~FOO"]], [1, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.00037023324694557573, ["shl     tmp, 9", "jmp     short loc_1BBF3; jumptable 000000000001BBA6 case 33"], ["shl~tmp,0", "jmp~FOO"]], [0, 0, 5, 1, 0, 4, 0, 0, 13, -1, 0.0012032580525731212, ["mov     rax, tmp; jumptable 000000000001BBA6 cases 9,41", "mul     rsi", "mov     tmp, rax", "jno     loc_1BBF3; jumptable 000000000001BBA6 case 33"], ["mov~rax,tmp", "mul~,rsi", "mov~tmp,rax", "jno~FOO"]], [2, 0, 4, 0, 0, 3, 1, 1, 14, -1, 0.0011106997408367272, ["mov     ebp, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_1BBF3; jumptable 000000000001BBA6 case 33"], ["mov~ebp,0", "or~rbx,0", "jmp~FOO"]], [1, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.00037023324694557573, ["shl     tmp, 0Ah", "jmp     loc_1BBF3; jumptable 000000000001BBA6 case 33"], ["shl~tmp,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 1, 1, 0, 17, -1, 0.022954461310625694, ["or      ebp, r8d"], ["or~ebp,r8d"]], [2, 0, 10, 0, 0, 3, 1, 1, 14, -1, 0.0057386153276564236, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_1BBDB"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [0, 0, 11, 1, 0, 2, 0, 0, 15, -1, 0.038689374305812665, ["mul     rsi", "jo      loc_1BD7B"], ["mul~,rsi", "jo~FOO"]], [0, 0, 12, 1, 0, 3, 0, 0, 13, -1, 0.01925212884116994, ["mov     rax, tmp; jumptable 000000000001BBA6 cases 5,37", "mul     rsi", "jo      loc_1BD7B"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 14, -1, 0.01036653091447612, ["xor     r8d, r8d", "jmp     loc_1BBE4"], ["xor~r8d,r8d", "jmp~FOO"]], [0, 0, 10, 1, 0, 3, 0, 0, 13, -1, 0.028878193261754906, ["mov     rax, tmp; jumptable 000000000001BBA6 cases 11,43", "mul     rsi", "jo      loc_1BD3F"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [0, 0, 58, 0, 0, 3, 1, 1, 8, 7, 0.03998519067012218, ["movzx   r12d, byte ptr [rcx]", "test    r12b, r12b", "jnz     short loc_1BB07"], ["movzx~r12d,<TAG>", "test~r12b,r12b", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 16, -1, 0.01582747130692336, ["mov     rbx, rax"], ["mov~rbx,rax"]], [0, 0, 7, 1, 0, 2, 0, 0, 15, -1, 0.050721954831543875, ["mul     rsi", "jo      loc_1BD5D"], ["mul~,rsi", "jo~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 8, -1, 0.0016660496112550908, ["mov     [val], tmp", "jmp     short loc_1BAAD"], ["mov~<TAG>,tmp", "jmp~FOO"]], [2, 0, 47, 0, 0, 3, 0, 1, 13, 4, 0.013050721954831545, ["mov     esi, 3E8h", "mov     edi, 2", "jmp     short loc_1BB8A"], ["mov~esi,0", "mov~edi,0", "jmp~FOO"]], [2, 0, 47, 0, 0, 6, 1, 1, 14, 4, 0.00870048130322103, ["xor     edi, edi", "cmp     byte ptr [rcx+2], 42h ; 'B'", "mov     esi, 400h", "setz    dil", "lea     rdi, [rdi+rdi+1]", "jmp     loc_1BB8A"], ["xor~edi,edi", "cmp~[yte ptr [rcx+0],0", "mov~esi,0", "setz~dil", "lea~rdi,[rdi+0]", "jmp~FOO"]], [2, 0, 47, 0, 0, 2, 0, 0, 10, 4, 0.14985190670122178, ["mov     esi, 400h", "mov     edi, 1"], ["mov~esi,0", "mov~edi,0"]], [2, 0, 12, 0, 0, 3, 1, 1, 14, -1, 0.003517215845982969, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_1BBD2"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [0, 0, 13, 1, 0, 2, 0, 0, 15, -1, 0.036097741577193636, ["mul     rsi", "jo      loc_1BD8A"], ["mul~,rsi", "jo~FOO"]], [0, 0, 14, 1, 0, 3, 0, 0, 13, -1, 0.014439096630877453, ["mov     rax, tmp; jumptable 000000000001BBA6 cases 18,50", "mul     rsi", "jo      loc_1BD8A"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [1, 0, 51, 0, 0, 2, 0, 1, 13, 5, 0.0072195483154387265, ["cmp     al, 69h ; 'i'", "jz      loc_1BD02"], ["cmp~al,0", "jz~FOO"]], [1, 0, 6, 1, 0, 4, 0, 0, 13, -1, 0.006016290262865606, ["mov     edx, 2; jumptable 000000000001BBA6 case 53", "mov     rax, rdx", "mul     tmp", "jo      short loc_1BC9F"], ["mov~edx,0", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]], [0, 1, 6, 1, 0, 4, 0, 0, 13, -1, 0.006016290262865606, ["mov     edx, 200h; jumptable 000000000001BBA6 case 32", "mov     rax, rdx", "mul     tmp", "jo      short loc_1BC9F"], ["mov~edx,<STR>", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]], [1, 0, 6, 1, 0, 4, 0, 0, 13, -1, 0.006016290262865606, ["mov     edx, 400h; jumptable 000000000001BBA6 case 0", "mov     rax, rdx", "mul     tmp", "jo      short loc_1BC9F"], ["mov~edx,0", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]], [1, 0, 55, 0, 0, 3, 0, 1, 9, 5, 0.14161421695668272, ["lea     eax, [r12-45h]", "cmp     al, 2Fh ; '/'", "ja      short loc_1BB80"], ["lea~eax,[r12-45h]+0]", "cmp~al,0", "ja~FOO"]], [1, 0, 54, 0, 0, 3, 0, 0, 10, 5, 0.017771195853387635, ["mov     rdx, 814400308945h", "bt      rdx, rax", "jnb     short loc_1BB80"], ["mov~rdx,0", "bt~rdx,rax", "jnb~FOO"]], [1, 0, 53, 0, 1, 7, 1, 2, 11, 5, 0.015734912995186968, ["mov     esi, 30h ; '0'; c", "mov     rdi, valid_suffixes; s", "mov     [rsp+58h+strtol_base], rcx", "call    _strchr", "test    rax, rax", "mov     rcx, [rsp+58h+strtol_base]", "jz      short loc_1BB80"], ["mov~esi,0", "mov~rdi,valid_suffixes", "mov~[rsp+0],rcx", "call~FOO", "test~rax,rax", "mov~rcx,[rsp+0]", "jz~FOO"]], [1, 0, 49, 0, 0, 2, 0, 1, 14, 5, 0.0005553498704183636, ["cmp     al, 42h ; 'B'", "jnz     short loc_1BB80"], ["cmp~al,0", "jnz~FOO"]], [0, 0, 61, 0, 0, 3, 1, 1, 5, 9, 0.06380352955695422, ["test    valid_suffixes, valid_suffixes", "mov     [rsp+58h+strtol_base], rcx", "jnz     short loc_1BAE0"], ["test~valid_suffixes,valid_suffixes", "mov~[rsp+0],rcx", "jnz~FOO"]], [0, 0, 68, 0, 1, 8, 1, 2, 4, 10, 0.059237319511292116, ["xor     ecx, ecx; group", "mov     rsi, p; endptr", "mov     rdi, s; nptr", "call    ___strtoul_internal", "mov     rcx, [p]", "mov     ch_0, rax", "cmp     rcx, s", "jz      short loc_1BA98"], ["xor~ecx,ecx", "mov~rsi,p", "mov~rdi,s", "call~FOO", "mov~rcx,<TAG>", "mov~ch_0,rax", "cmp~rcx,s", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 6, -1, 0.0006170554115759594, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, -1, 0.026286560533135876, ["mov     rdi, [rsp+58h+var_40]", "xor     rdi, fs:28h", "mov     eax, ebp", "jnz     loc_1BD1B"], ["mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "mov~eax,ebp", "jnz~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 4, -1, 0.006664198445020363, ["mov     ebp, 4"], ["mov~ebp,0"]], [1, 0, 69, 0, 0, 2, 0, 1, 3, 11, 0.05109218807848945, ["cmp     bl, 2Dh ; '-'", "jz      short loc_1BAA8"], ["cmp~bl,0", "jz~FOO"]], [0, 0, 20, 1, 0, 3, 0, 0, 13, 4, 0.014439096630877453, ["mov     rax, tmp; jumptable 000000000001BBA6 case 24", "mul     rsi", "jo      loc_1BC54"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [2, 0, 16, 0, 0, 3, 1, 1, 14, 2, 0.0038874490929285454, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_1BBC0"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [0, 0, 17, 1, 0, 2, 0, 0, 15, 2, 0.022028878193261756, ["mul     rsi", "jo      loc_1BD99"], ["mul~,rsi", "jo~FOO"]], [0, 0, 18, 1, 0, 3, 0, 0, 13, 3, 0.014439096630877453, ["mov     rax, tmp; jumptable 000000000001BBA6 case 3", "mul     rsi", "jo      loc_1BD99"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [2, 0, 14, 0, 0, 3, 1, 1, 14, 0, 0.0037023324694557573, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_1BBC9"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [0, 0, 15, 1, 0, 2, 0, 0, 15, 1, 0.030544242873009997, ["mul     rsi", "jo      loc_1BDA8"], ["mul~,rsi", "jo~FOO"]], [0, 0, 16, 1, 0, 3, 0, 0, 13, 1, 0.014439096630877453, ["mov     rax, tmp; jumptable 000000000001BBA6 case 14", "mul     rsi", "jo      loc_1BDA8"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [1, 0, 72, 0, 2, 17, 1, 3, 1, 13, 0.013328396890040726, ["lea     rax, [rsp+58h+t_ptr]", "mov     r15, ptr", "test    ptr, ptr", "mov     rbp, s", "mov     dword ptr [rsp+58h+strtol_base], edx", "mov     r14, val", "mov     r13, valid_suffixes", "cmovz   r15, rax", "call    ___errno_location", "mov     dword ptr [rax], 0", "mov     r12, rax", "movzx   ebx, byte ptr [q+0]", "call    ___ctype_b_loc", "mov     edx, dword ptr [rsp+58h+strtol_base]; base", "mov     rsi, [rax]", "mov     rax, q", "jmp     short loc_1BA47"], ["lea~rax,[rsp+0]", "mov~r15,ptr", "test~ptr,ptr", "mov~rbp,s", "mov~[word ptr [rsp+0],edx", "mov~r14,val", "mov~r13,valid_suffixes", "cmovz~r15,rax", "call~FOO", "mov~<TAG>,0", "mov~r12,rax", "movzx~ebx,[yte ptr [q+0]", "call~FOO", "mov~edx,[word ptr [rsp+0]", "mov~rsi,<TAG>", "mov~rax,q", "jmp~FOO"]], [2, 0, 74, 1, 0, 12, 1, 1, 0, 14, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "cmp     edx, 24h ; '$'", "ja      loc_1BD20"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edx,0", "ja~FOO"]], [2, 0, 18, 0, 0, 3, 1, 1, 14, 3, 0.004072565716401333, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_1BBB7"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [0, 0, 19, 1, 0, 2, 0, 0, 15, 3, 0.010551647537948908, ["mul     rsi", "jno     loc_1BBB7"], ["mul~,rsi", "jno~FOO"]], [0, 0, 18, 0, 0, 1, 1, 0, 14, 3, 0.004072565716401333, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [1, 0, 0, 0, 1, 5, 0, 1, 1, -1, 0.0, ["lea     val, __PRETTY_FUNCTION___4162_0; \"xstrtoumax\"", "lea     ptr, aLibXstrtolC; \"lib/xstrtol.c\"", "lea     s, a0StrtolBaseStr; \"0 <= strtol_base && strtol_base <= 36\"", "mov     edx, 54h ; 'T'; line", "call    ___assert_fail"], ["lea~val,<TAG>", "lea~ptr,<TAG>", "lea~s,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 12, 0, 0, 2, 1, 1, 14, -1, 0.003517215845982969, ["xor     r8d, r8d", "jmp     loc_1BBD2"], ["xor~r8d,r8d", "jmp~FOO"]], [0, 0, 22, 1, 0, 3, 0, 0, 13, 5, 0.014439096630877453, ["mov     rax, tmp; jumptable 000000000001BBA6 case 23", "mul     rsi", "jo      loc_1BD4E"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 14, 2, 0.0038874490929285454, ["xor     r8d, r8d", "jmp     loc_1BBC0"], ["xor~r8d,r8d", "jmp~FOO"]], [1, 0, 72, 1, 0, 2, 0, 0, 3, 13, 0.0, ["add     q, 1", "movzx   ebx, byte ptr [q]"], ["add~q,0", "movzx~ebx,<TAG>"]], [0, 1, 72, 0, 0, 3, 1, 1, 2, 12, 0.039244724176231024, ["movzx   ecx, bl", "test    byte ptr [rsi+rcx*2+1], 20h", "jnz     short loc_1BA40"], ["movzx~ecx,bl", "test~[yte ptr [rsi+0],<STR>", "jnz~FOO"]], [0, 0, 20, 0, 0, 1, 1, 0, 14, 4, 0.004257682339874121, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [2, 0, 8, 0, 0, 3, 1, 1, 14, -1, 0.01036653091447612, ["or      rax, 0FFFFFFFFFFFFFFFFh", "mov     r8d, 1", "jmp     loc_1BBE4"], ["or~rax,0", "mov~r8d,0", "jmp~FOO"]], [0, 0, 14, 0, 0, 2, 1, 1, 14, -1, 0.0037023324694557573, ["xor     r8d, r8d", "jmp     loc_1BBC9"], ["xor~r8d,r8d", "jmp~FOO"]], [2, 0, 20, 0, 0, 3, 1, 1, 14, 4, 0.004257682339874121, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_1BC4B"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     r12", "pop     valid_suffixes", "pop     val", "pop     p", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~valid_suffixes", "pop~val", "pop~p", "retn"]], [0, 0, 63, 0, 0, 3, 1, 1, 5, 10, 0.005800320868814019, ["mov     eax, [r12]", "test    eax, eax", "jz      short loc_1BAD8"], ["mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 0, 9, 1, 0, 2, 0, 0, 15, -1, 0.04313217326915957, ["mul     rsi", "jo      loc_1BD6C"], ["mul~,rsi", "jo~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 14, -1, 0.0057386153276564236, ["xor     r8d, r8d", "jmp     loc_1BBDB"], ["xor~r8d,r8d", "jmp~FOO"]], [1, 0, 52, 0, 0, 3, 0, 1, 12, 5, 0.013328396890040726, ["movzx   eax, byte ptr [rcx+1]", "cmp     al, 44h ; 'D'", "jz      short loc_1BB6F"], ["movzx~eax,[yte ptr [rcx+0]", "cmp~al,0", "jz~FOO"]], [2, 0, 8, 0, 0, 3, 1, 1, 16, -1, 0.0, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_1BBE4"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [2, 0, 5, 0, 0, 3, 1, 1, 16, -1, 0.01582747130692336, ["mov     r8d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_1BBF0"], ["mov~r8d,0", "or~rbx,0", "jmp~FOO"]]], "func_feature": [8, 36, 53, 1, 75, 122, 4, 251, 0.02566, 5, 27], "succs": [[43], [0, 35], [0, 3], [0, 32, 34, 33, 9, 12, 46, 49, 18, 20, 52, 60, 30], [24, 21], [4], [44, 4], [1, 44], [44, 7], [43], [9], [9], [9, 13], [9], [9], [9], [70], [16, 70], [16, 71], [23], [65, 19], [24, 1], [15], [74, 22], [43], [2], [2], [2], [17], [17, 28], [59, 28], [26, 38], [10, 13], [11, 13], [13, 14], [27, 36], [27, 37], [72, 27], [25, 27], [8, 41], [69, 39], [44], [], [42, 68], [43], [40, 44], [57, 55], [51], [51, 47], [61, 47], [29], [50, 29], [50, 66], [63], [58, 53], [48], [48, 55], [48], [], [17], [64, 67], [51], [63], [45, 62], [56], [23], [29], [56], [], [5, 6], [73, 23], [70], [25, 31], [23], [15]], "fname": "xstrtoumax", "n_num": 75}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 5, 0, 0, 2, 1, 1, 0, 0, 0.06666666666666667, ["test    n, n", "jz      short loc_1BE20"], ["test~n,n", "jz~FOO"]], [2, 0, 6, 1, 1, 19, 2, 1, 0, 2, 0.0, ["push    r13", "push    r12", "mov     r13, s", "push    rbp", "push    rbx", "mov     rbx, pwc", "mov     r12, n", "sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+38h+var_30], rax", "xor     eax, eax", "lea     rax, [rsp+38h+wc]", "test    pwc, pwc", "cmovz   rbx, rax", "mov     rdi, pwc; pwc", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFDh", "mov     rbp, rax", "jbe     short loc_1BE20"], ["push~r13", "push~r12", "mov~r13,s", "push~rbp", "push~rbx", "mov~rbx,pwc", "mov~r12,n", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "test~pwc,pwc", "cmovz~rbx,rax", "mov~rdi,pwc", "call~FOO", "cmp~rax,0", "mov~rbp,rax", "jbe~FOO"]], [0, 0, 4, 0, 1, 4, 2, 2, 2, 2, 0.06666666666666667, ["xor     edi, edi; category", "call    hard_locale", "test    al, al", "jnz     short loc_1BE20"], ["xor~edi,edi", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 1, 1, 0.26666666666666666, ["mov     rdx, [rsp+38h+var_30]", "xor     rdx, fs:28h", "mov     rax, rbp", "jnz     short loc_1BE3E"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "mov~rax,rbp", "jnz~FOO"]], [1, 0, 3, 0, 0, 4, 0, 0, 3, 2, 0.0, ["movzx   eax, byte ptr [s+0]", "mov     ebp, 1", "mov     [pwc], eax", "nop     dword ptr [rax+00h]"], ["movzx~eax,[yte ptr [s+0]", "mov~ebp,0", "mov~<TAG>,eax", "nop~[word ptr [rax+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 2, -1, 0.0, ["add     rsp, 18h", "pop     pwc", "pop     rbp", "pop     n", "pop     s", "retn"], ["add~rsp,0", "pop~pwc", "pop~rbp", "pop~n", "pop~s", "retn"]]], "func_feature": [3, 6, 6, 1, 7, 9, 5, 40, 0.05714, 1, 2], "succs": [[2, 3], [0, 3], [3, 4], [5, 6], [3], [], []], "fname": "rpl_mbrtowc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[3, 0, 0, 1, 3, 13, 2, 3, 0, 0, 0.0, ["lea     rsi, aMemoryExhauste; \"memory exhausted\"", "sub     rsp, 8", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "lea     rdx, aSSS_0+8; \"%s\\n\"", "mov     rcx, rax", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "mov     edi, cs:exit_failure; status", "call    _exit"], ["lea~rsi,<TAG>", "sub~rsp,0", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rdi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~edi,<TAG>", "call~FOO"]]], "func_feature": [3, 2, 3, 0, 1, 0, 3, 13, 0.0, 4, 1], "succs": [[]], "fname": "print_and_abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 3, 0, 1, 2, 0, 1, 0, 0, 0.10714285714285714, ["mov     h, rsi; size", "call    chunkfun ; __imp_malloc"], ["mov~h,rsi", "call~chunkfun"]], [1, 1, 5, 0, 0, 7, 2, 1, 2, 3, 0.26785714285714285, ["test    size, size", "mov     eax, 0FE0h", "mov     [rbx+30h], r12", "cmovz   size, rax", "test    byte ptr [rbx+50h], 1", "mov     [rbx], rsi", "jnz     short loc_1BF20"], ["test~size,size", "mov~eax,<STR>", "mov~[rbx+0],r12", "cmovz~size,rax", "test~[yte ptr [rbx+0],0", "mov~<TAG>,rsi", "jnz~FOO"]], [1, 0, 8, 0, 0, 9, 2, 1, 0, 5, 0.0, ["push    r12", "push    rbp", "push    rbx", "and     byte ptr [h+50h], 0FEh", "test    alignment, alignment", "mov     rbx, h", "mov     [h+38h], chunkfun", "mov     [h+40h], freefun", "jz      short loc_1BF10"], ["push~r12", "push~rbp", "push~rbx", "and~[yte ptr [h+0],0", "test~alignment,alignment", "mov~rbx,h", "mov~[h+0],chunkfun", "mov~[h+0],freefun", "jz~FOO"]], [2, 0, 6, 0, 0, 3, 0, 1, 1, 4, 0.05357142857142857, ["mov     r12d, 0Fh", "mov     ebp, 10h", "jmp     short loc_1BEAF"], ["mov~r12d,0", "mov~ebp,0", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 0, 1, 4, 0.05357142857142857, ["lea     r12, [alignment-1]", "mov     rbp, alignment"], ["lea~r12,[alignment-1]+0]", "mov~rbp,alignment"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    cs:obstack_alloc_failed_handler"], ["call~<TAG>"]], [0, 0, 2, 0, 0, 3, 1, 1, 4, 1, 0.21428571428571427, ["test    rax, rax", "mov     [h+8], rax", "jz      short loc_1BF28"], ["test~rax,rax", "mov~[h+0],rax", "jz~FOO"]], [3, 0, 0, 1, 0, 16, 2, 0, 5, -1, 0.0, ["lea     rdx, [rax+r12+10h]", "neg     rbp", "and     rbp, rdx", "mov     rdx, [h]", "mov     [h+10h], rbp", "mov     [h+18h], rbp", "add     rdx, rax", "mov     [rax], rdx", "mov     [h+20h], rdx", "mov     qword ptr [rax+8], 0", "mov     eax, 1", "and     byte ptr [h+50h], 0F9h", "pop     h", "pop     rbp", "pop     r12", "retn"], ["lea~rdx,[rax+0]", "neg~rbp", "and~rbp,rdx", "mov~rdx,<TAG>", "mov~[h+0],rbp", "mov~[h+0],rbp", "add~rdx,rax", "mov~<TAG>,rdx", "mov~[h+0],rdx", "mov~[word ptr [rax+0],0", "mov~eax,0", "and~[yte ptr [h+0],0", "pop~h", "pop~rbp", "pop~r12", "retn"]], [0, 0, 3, 0, 1, 3, 0, 2, 3, 2, 0.10714285714285714, ["mov     rdi, [h+48h]; size", "call    chunkfun ; __imp_malloc", "jmp     short loc_1BECD"], ["mov~rdi,[h+0]", "call~chunkfun", "jmp~FOO"]]], "func_feature": [3, 7, 8, 0, 9, 10, 3, 46, 0.08929, 1, 1], "succs": [[6], [0, 8], [3, 4], [1], [1], [], [5, 7], [], [6]], "fname": "_obstack_begin", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[2, 0, 6, 0, 0, 3, 0, 1, 0, 0, 0.05357142857142857, ["mov     r12d, 0Fh", "mov     ebp, 10h", "jmp     short loc_1BF53"], ["mov~r12d,0", "mov~ebp,0", "jmp~FOO"]], [1, 0, 8, 0, 0, 10, 2, 1, 0, 5, 0.0, ["push    r12", "push    rbp", "push    rbx", "or      byte ptr [h+50h], 1", "test    alignment, alignment", "mov     rbx, h", "mov     [h+38h], chunkfun", "mov     [h+40h], freefun", "mov     [h+48h], arg", "jz      short loc_1BFB0"], ["push~r12", "push~rbp", "push~rbx", "or~[yte ptr [h+0],0", "test~alignment,alignment", "mov~rbx,h", "mov~[h+0],chunkfun", "mov~[h+0],freefun", "mov~[h+0],arg", "jz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 3, 2, 0.10714285714285714, ["mov     rdi, arg", "call    chunkfun", "jmp     short loc_1BF71"], ["mov~rdi,arg", "call~chunkfun", "jmp~FOO"]], [1, 1, 5, 0, 0, 7, 2, 1, 2, 3, 0.26785714285714285, ["test    size, size", "mov     eax, 0FE0h", "mov     [rbx+30h], r12", "cmovz   size, rax", "test    byte ptr [rbx+50h], 1", "mov     [rbx], rsi", "jnz     short loc_1BFC0"], ["test~size,size", "mov~eax,<STR>", "mov~[rbx+0],r12", "cmovz~size,rax", "test~[yte ptr [rbx+0],0", "mov~<TAG>,rsi", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    cs:obstack_alloc_failed_handler"], ["call~<TAG>"]], [0, 0, 2, 0, 0, 3, 1, 1, 4, 1, 0.21428571428571427, ["test    rax, rax", "mov     [h+8], rax", "jz      short loc_1BFC7"], ["test~rax,rax", "mov~[h+0],rax", "jz~FOO"]], [3, 0, 0, 1, 0, 16, 2, 0, 5, -1, 0.0, ["lea     rdx, [rax+r12+10h]", "neg     rbp", "and     rbp, rdx", "mov     rdx, [h]", "mov     [h+10h], rbp", "mov     [h+18h], rbp", "add     rdx, rax", "mov     [rax], rdx", "mov     [h+20h], rdx", "mov     qword ptr [rax+8], 0", "mov     eax, 1", "and     byte ptr [h+50h], 0F9h", "pop     h", "pop     rbp", "pop     r12", "retn"], ["lea~rdx,[rax+0]", "neg~rbp", "and~rbp,rdx", "mov~rdx,<TAG>", "mov~[h+0],rbp", "mov~[h+0],rbp", "add~rdx,rax", "mov~<TAG>,rdx", "mov~[h+0],rdx", "mov~[word ptr [rax+0],0", "mov~eax,0", "and~[yte ptr [h+0],0", "pop~h", "pop~rbp", "pop~r12", "retn"]], [0, 0, 6, 0, 0, 2, 0, 0, 1, 4, 0.05357142857142857, ["lea     r12, [alignment-1]", "mov     rbp, alignment"], ["lea~r12,[alignment-1]+0]", "mov~rbp,alignment"]], [0, 0, 3, 0, 1, 2, 0, 1, 3, 2, 0.10714285714285714, ["mov     h, rsi", "call    chunkfun"], ["mov~h,rsi", "call~chunkfun"]]], "func_feature": [3, 7, 8, 0, 9, 10, 0, 47, 0.08929, 1, 1], "succs": [[3], [0, 7], [5], [8, 2], [], [4, 6], [], [3], [5]], "fname": "_obstack_begin_1", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 1, 0, 1, 4, 0, 2, 0, 0, 0.003787878787878788, ["mov     rdi, [h+48h]", "mov     rsi, old_chunk", "call    rax", "jmp     short loc_1C093"], ["mov~rdi,[h+0]", "mov~rsi,old_chunk", "call~rax", "jmp~FOO"]], [1, 0, 3, 0, 0, 5, 1, 1, 7, -1, 0.12121212121212122, ["mov     rax, [old_chunk+8]", "and     ecx, 1", "mov     [r14+8], rax", "mov     rax, [h+40h]", "jnz     short loc_1C0E8"], ["mov~rax,[old_chunk+0]", "and~ecx,0", "mov~[r14+0],rax", "mov~rax,[h+0]", "jnz~FOO"]], [0, 0, 11, 0, 0, 3, 1, 1, 1, 1, 0.07575757575757576, ["movzx   eax, al", "test    rax, rax", "jnz     loc_1C0F3"], ["movzx~eax,al", "test~rax,rax", "jnz~FOO"]], [1, 0, 12, 3, 0, 22, 2, 1, 0, 1, 0.0, ["push    r14", "push    r13", "xor     edx, edx", "push    r12", "push    rbp", "push    rbx", "mov     rbp, [h+18h]", "sub     rbp, [h+10h]", "mov     r12, [h+8]", "add     length, obj_size", "mov     rcx, obj_size", "setb    dl", "add     sum1, [h+30h]", "setb    al", "shr     rcx, 3", "cmp     [h], sum2", "lea     r13, [sum2+rcx+64h]", "cmovnb  sum2, [h]", "cmp     rsi, r13", "cmovnb  r13, rsi", "test    rdx, rdx", "jnz     loc_1C0F3"], ["push~r14", "push~r13", "xor~edx,edx", "push~r12", "push~rbp", "push~rbx", "mov~rbp,[h+0]", "sub~rbp,[h+0]", "mov~r12,[h+0]", "add~length,obj_size", "mov~rcx,obj_size", "setb~dl", "add~sum1,[h+0]", "setb~al", "shr~rcx,0", "cmp~<TAG>,sum2", "lea~r13,[sum2+0]", "cmovnb~sum2,<TAG>", "cmp~rsi,r13", "cmovnb~r13,rsi", "test~rdx,rdx", "jnz~FOO"]], [1, 0, 0, 1, 0, 10, 1, 0, 6, -1, 0.0, ["and     byte ptr [h+50h], 0FDh", "add     obj_size, object_base", "mov     [h+10h], object_base", "mov     [h+18h], rbp", "pop     h", "pop     rbp", "pop     old_chunk", "pop     object_base", "pop     r14", "retn"], ["and~[yte ptr [h+0],0", "add~obj_size,object_base", "mov~[h+0],object_base", "mov~[h+0],rbp", "pop~h", "pop~rbp", "pop~old_chunk", "pop~object_base", "pop~r14", "retn"]], [1, 0, 5, 0, 1, 16, 2, 2, 5, -1, 0.2272727272727273, ["mov     rax, [h+30h]", "lea     rsi, [r14+new_size]", "mov     [h+8], r14", "mov     [r14+8], old_chunk", "mov     rdx, obj_size; n", "mov     [h+20h], rsi", "mov     [r14], rsi", "lea     new_size, [r14+rax+10h]", "mov     rsi, [h+10h]; src", "not     rax", "and     r13, rax", "mov     rdi, object_base; dest", "call    _memcpy", "movzx   ecx, byte ptr [h+50h]", "test    cl, 2", "jnz     short loc_1C093"], ["mov~rax,[h+0]", "lea~rsi,<TAG>", "mov~[h+0],r14", "mov~[r14+0],old_chunk", "mov~rdx,obj_size", "mov~[h+0],rsi", "mov~<TAG>,rsi", "lea~new_size,[r14+0]", "mov~rsi,[h+0]", "not~rax", "and~r13,rax", "mov~rdi,object_base", "call~FOO", "movzx~ecx,[yte ptr [h+0]", "test~cl,0", "jnz~FOO"]], [0, 0, 1, 0, 1, 3, 0, 2, 8, -1, 0.003787878787878788, ["mov     rdi, old_chunk", "call    rax", "jmp     short loc_1C093"], ["mov~rdi,old_chunk", "call~rax", "jmp~FOO"]], [0, 0, 4, 0, 0, 6, 1, 1, 6, -1, 0.1590909090909091, ["mov     rax, [h+30h]", "lea     rdx, [old_chunk+rax+10h]", "not     rax", "and     rax, rdx", "cmp     [h+10h], rax", "jz      short loc_1C0C8"], ["mov~rax,[h+0]", "lea~rdx,[old_chunk+0]", "not~rax", "and~rax,rdx", "cmp~[h+0],rax", "jz~FOO"]], [1, 0, 10, 0, 0, 4, 1, 1, 2, 3, 0.13636363636363635, ["test    byte ptr [h+50h], 1", "mov     rbx, h", "mov     rax, [h+38h]", "jnz     loc_1C0B0"], ["test~[yte ptr [h+0],0", "mov~rbx,h", "mov~rax,[h+0]", "jnz~FOO"]], [0, 0, 8, 0, 1, 5, 0, 2, 3, 2, 0.08333333333333334, ["mov     rdi, [rdi+48h]", "mov     rsi, new_size", "call    rax", "mov     r14, rax", "jmp     loc_1C03B"], ["mov~rdi,[rdi+0]", "mov~rsi,new_size", "call~rax", "mov~r14,rax", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    cs:obstack_alloc_failed_handler"], ["call~<TAG>"]], [0, 0, 7, 0, 0, 2, 1, 1, 4, 1, 0.25, ["test    r14, r14", "jz      loc_1C0F3"], ["test~r14,r14", "jz~FOO"]], [0, 0, 8, 0, 1, 3, 0, 1, 3, 2, 0.08333333333333334, ["mov     h, new_size", "call    rax", "mov     r14, rax"], ["mov~h,new_size", "call~rax", "mov~r14,rax"]]], "func_feature": [6, 10, 16, 0, 13, 18, 3, 84, 0.088, 1, 4], "succs": [[4], [0, 6], [8, 10], [2, 10], [], [4, 7], [4], [1, 4], [9, 12], [11], [], [10, 5], [11]], "fname": "_obstack_newchunk", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 5, 0, 0, 3, 1, 1, 0, 0, 0.11904761904761904, ["mov     lp, [lp+8]", "test    plp, plp", "jnz     short loc_1C110"], ["mov~lp,[lp+0]", "test~plp,plp", "jnz~FOO"]], [0, 0, 5, 0, 0, 2, 0, 0, 2, -1, 0.23809523809523808, ["cmp     obj, lp", "jbe     short loc_1C11A"], ["cmp~obj,lp", "jbe~FOO"]], [0, 0, 5, 0, 0, 2, 0, 0, 3, -1, 0.09523809523809523, ["cmp     [lp], obj", "jnb     short loc_1C130"], ["cmp~<TAG>,obj", "jnb~FOO"]], [0, 0, 0, 0, 0, 2, 1, 0, 4, -1, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [0, 0, 7, 0, 0, 3, 1, 1, 0, 1, 0.0, ["mov     rax, [h+8]", "test    lp, lp", "jz      short locret_1C136"], ["mov~rax,[h+0]", "test~lp,lp", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 1, -1, 0.11904761904761904, ["nop     dword ptr [lp+00000000h]"], ["nop~[word ptr [lp+0]"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 3, 2, 0, 8, 9, 0, 16, 0.07143, 0, 0], "succs": [[1, 3], [0, 2], [0, 6], [], [5, 7], [1], [], []], "fname": "_obstack_allocated_p", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 10, 0, 1, 4, 2, 2, 0, 0, 0.09090909090909091, ["call    rax", "or      byte ptr [h+50h], 2", "test    plp, plp", "jz      short loc_1C193"], ["call~rax", "or~[yte ptr [h+0],0", "test~plp,plp", "jz~FOO"]], [1, 0, 10, 0, 0, 4, 1, 1, 2, 3, 0.20909090909090908, ["test    byte ptr [h+50h], 1", "mov     rbp, [lp+8]", "mov     rax, [h+40h]", "jz      short loc_1C158"], ["test~[yte ptr [h+0],0", "mov~rbp,[lp+0]", "mov~rax,[h+0]", "jz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 4, 5, 0.12727272727272726, ["mov     rdi, plp"], ["mov~rdi,plp"]], [1, 0, 10, 0, 1, 6, 2, 2, 3, 2, 0.09090909090909091, ["mov     rsi, lp", "mov     lp, [h+48h]", "call    rax", "or      byte ptr [h+50h], 2", "test    plp, plp", "jnz     short loc_1C163"], ["mov~rsi,lp", "mov~lp,[h+0]", "call~rax", "or~[yte ptr [h+0],0", "test~plp,plp", "jnz~FOO"]], [0, 0, 10, 0, 0, 3, 0, 0, 2, 4, 0.05454545454545454, ["mov     rax, [lp]", "cmp     rax, obj", "jnb     short loc_1C1A0"], ["mov~rax,<TAG>", "cmp~rax,obj", "jnb~FOO"]], [0, 0, 10, 0, 0, 2, 0, 0, 1, 4, 0.21818181818181817, ["cmp     lp, obj", "jnb     short loc_1C173"], ["cmp~lp,obj", "jnb~FOO"]], [0, 0, 11, 0, 0, 8, 1, 1, 0, 3, 0.0, ["push    r12", "push    rbp", "mov     r12, obj", "push    rbx", "mov     rbx, h", "mov     h, [h+8]", "test    lp, lp", "jnz     short loc_1C166"], ["push~r12", "push~rbp", "mov~r12,obj", "push~rbx", "mov~rbx,h", "mov~h,[h+0]", "test~lp,lp", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 1, 2, 0.02727272727272727, ["jmp     short loc_1C193"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 8, 0, 0, 3, -1, 0.0, ["mov     [h+18h], obj", "mov     [h+10h], obj", "mov     [h+20h], rax", "mov     [h+8], lp", "pop     h", "pop     rbp", "pop     obj", "retn"], ["mov~[h+0],obj", "mov~[h+0],obj", "mov~[h+0],rax", "mov~[h+0],lp", "pop~h", "pop~rbp", "pop~obj", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 2, 1, 0.14545454545454545, ["test    obj, obj", "jnz     short loc_1C1B5"], ["test~obj,obj", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 3, -1, 0.0, ["pop     h", "pop     rbp", "pop     obj", "retn"], ["pop~h", "pop~rbp", "pop~obj", "retn"]]], "func_feature": [3, 7, 9, 0, 12, 16, 0, 44, 0.0803, 0, 0], "succs": [[2, 10], [0, 3], [5], [2, 10], [8, 1], [1, 4], [5, 7], [10], [], [], [9, 11], []], "fname": "_obstack_free", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 2, 2, 0, 6, 1, 1, 0, 0, 0.16666666666666666, ["mov     rcx, [lp]", "sub     rcx, lp", "mov     lp, [lp+8]", "add     nbytes, rcx", "test    lp, lp", "jnz     short loc_1C1D0"], ["mov~rcx,<TAG>", "sub~rcx,lp", "mov~lp,[lp+0]", "add~nbytes,rcx", "test~lp,lp", "jnz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 1, -1, 0.16666666666666666, ["nop     dword ptr [nbytes+nbytes+00h]"], ["nop~[word ptr [nbytes+0]"]], [0, 0, 4, 0, 0, 4, 2, 1, 0, 1, 0.0, ["mov     rdx, [h+8]", "xor     eax, eax", "test    lp, lp", "jz      short locret_1C1E8"], ["mov~rdx,[h+0]", "xor~eax,eax", "test~lp,lp", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 3, 2, 0, 5, 5, 0, 13, 0.06667, 0, 2], "succs": [[0, 3], [0], [1, 4], [], []], "fname": "_obstack_memory_used", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 17, 0, 1, 7, 1, 2, 0, 0, 0.03571428571428571, ["lea     zone_copy, [tz+9]", "mov     rsi, zone; s2", "mov     r12, tz", "mov     rdi, zone_copy; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_1C23F"], ["lea~zone_copy,[tz+0]", "mov~rsi,zone", "mov~r12,tz", "mov~rdi,zone_copy", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 17, 0, 0, 3, 1, 1, 7, 7, 0.04329004329004329, ["mov     rax, [tz]", "test    rax, rax", "jz      short loc_1C230"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 1, 9, -1, 0.004329004329004329, ["jmp     short loc_1C297"], ["jmp~FOO"]], [2, 0, 22, 1, 0, 11, 1, 1, 0, 10, 0.0, ["push    r15", "push    r14", "mov     eax, 1", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     rbp, [tm+30h]", "test    zone, zone", "jz      loc_1C2A0"], ["push~r15", "push~r14", "mov~eax,0", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,[tm+0]", "test~zone,zone", "jz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 3, -1, 0.010822510822510822, ["lea     rbx, a8+6; \"\""], ["lea~rbx,<TAG>"]], [1, 0, 19, 0, 0, 3, 0, 1, 2, 8, 0.11688311688311688, ["cmp     byte ptr [zone+0], 0", "lea     rbx, [r12+9]", "jz      short loc_1C290"], ["cmp~[yte ptr [zone+0],0", "lea~rbx,[r12+0]", "jz~FOO"]], [0, 0, 21, 0, 0, 4, 0, 1, 1, 9, 0.04329004329004329, ["cmp     tm, zone", "mov     r12, tz", "mov     r13, tm", "ja      short loc_1C224"], ["cmp~tm,zone", "mov~r12,tz", "mov~r13,tm", "ja~FOO"]], [1, 0, 1, 0, 0, 2, 0, 0, 4, -1, 0.023809523809523808, ["mov     [tm+30h], zone_copy", "mov     eax, 1"], ["mov~[tm+0],zone_copy", "mov~eax,0"]], [0, 0, 17, 0, 1, 5, 1, 2, 4, 6, 0.21103896103896103, ["mov     rsi, zone; s2", "mov     rdi, zone_copy; s1", "call    _strcmp", "test    eax, eax", "jz      short loc_1C297"], ["mov~rsi,zone", "mov~rdi,zone_copy", "call~FOO", "test~eax,eax", "jz~FOO"]], [4, 0, 2, 0, 1, 12, 0, 2, 10, -1, 0.0021645021645021645, ["lea     zone_copy, [r14+9]", "mov     qword ptr [rax], 0", "mov     eax, 1", "mov     [r14+8], ax", "mov     rdx, zone_size; n", "mov     rsi, zone; src", "mov     rdi, rbx; dest", "call    _memcpy", "mov     byte ptr [r14+zone_size+9], 0", "mov     [tz], r14", "mov     byte ptr [r14+8], 0", "jmp     loc_1C297"], ["lea~zone_copy,[r14+0]", "mov~<TAG>,0", "mov~eax,0", "mov~[r14+0],ax", "mov~rdx,zone_size", "mov~rsi,zone", "mov~rdi,rbx", "call~FOO", "mov~[yte ptr [r14+0],0", "mov~<TAG>,r14", "mov~[yte ptr [r14+0],0", "jmp~FOO"]], [1, 0, 2, 0, 1, 7, 0, 2, 9, -1, 0.006493506493506494, ["mov     rdx, zone_size; n", "mov     rsi, zone; src", "mov     rdi, zone_copy; dest", "call    _memcpy", "mov     rcx, [rsp+48h+var_40]", "mov     byte ptr [zone_copy+rcx+1], 0", "jmp     loc_1C297"], ["mov~rdx,zone_size", "mov~rsi,zone", "mov~rdi,zone_copy", "call~FOO", "mov~rcx,[rsp+0]", "mov~[yte ptr [zone_copy+0],0", "jmp~FOO"]], [0, 0, 20, 0, 0, 3, 0, 0, 2, 9, 0.0021645021645021645, ["lea     rdx, [tm+38h]", "cmp     zone, rdx", "jb      short loc_1C2A0"], ["lea~rdx,[tm+0]", "cmp~zone,rdx", "jb~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 1, -1, 0.0, ["add     rsp, 18h", "pop     rbx", "pop     zone", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~zone", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 1, 0, 1, 4, 1, 2, 8, -1, 0.007575757575757576, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch", "xor     eax, eax", "jmp     loc_1C2A0"], ["call~FOO", "mov~<TAG>,0", "xor~eax,eax", "jmp~FOO"]], [1, 0, 1, 0, 0, 3, 1, 1, 10, 0, 0.003246753246753247, ["mov     qword ptr [tz], 0", "xor     eax, eax", "jmp     loc_1C2A0"], ["mov~<TAG>,0", "xor~eax,eax", "jmp~FOO"]], [0, 0, 17, 0, 0, 1, 0, 0, 3, 7, 0.12987012987012986, ["nop"], ["nop"]], [4, 0, 4, 1, 1, 9, 2, 2, 9, 1, 0.06168831168831169, ["cmp     zone_size, 76h", "mov     edi, 76h ; 'v'", "cmovnb  rdi, zone_size", "add     rdi, 11h", "and     rdi, 0FFFFFFFFFFFFFFF8h; size", "call    malloc", "test    rax, rax", "mov     r14, rax", "jz      short loc_1C375"], ["cmp~zone_size,0", "mov~edi,0", "cmovnb~rdi,zone_size", "add~rdi,0", "and~rdi,0", "call~FOO", "test~rax,rax", "mov~r14,rax", "jz~FOO"]], [1, 0, 17, 0, 1, 5, 0, 2, 6, 7, 0.08225108225108226, ["mov     rdi, zone_copy; s", "call    _strlen", "lea     zone_copy, [zone_copy+rax+1]", "cmp     byte ptr [zone_copy], 0", "jnz     short loc_1C230"], ["mov~rdi,zone_copy", "call~FOO", "lea~zone_copy,[zone_copy+0]", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 5, 5, 0.23809523809523808, ["cmp     byte ptr [zone_copy], 0", "jnz     short loc_1C256"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 17, 0, 0, 3, 0, 1, 6, 4, 0.17424242424242425, ["lea     r14, [tz+9]", "cmp     r14, zone_copy", "jnz     short loc_1C2B0"], ["lea~r14,[tz+0]", "cmp~r14,zone_copy", "jnz~FOO"]], [0, 0, 8, 1, 1, 10, 0, 1, 7, 3, 0.16233766233766234, ["mov     rdi, zone; s", "call    _strlen", "lea     zone_size, [rax+1]", "mov     rcx, rax", "mov     rax, zone_copy", "sub     rax, r14", "mov     rdx, zone_used", "not     rdx", "cmp     rdx, zone_size", "jb      short loc_1C340"], ["mov~rdi,zone", "call~FOO", "lea~zone_size,[rax+0]", "mov~rcx,rax", "mov~rax,zone_copy", "sub~rax,r14", "mov~rdx,zone_used", "not~rdx", "cmp~rdx,zone_size", "jb~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 7, 4, 0.01406926406926407, ["cmp     byte ptr [tz+8], 0", "jz      short loc_1C2B0"], ["cmp~[yte ptr [tz+0],0", "jz~FOO"]], [1, 0, 6, 1, 0, 4, 0, 0, 8, 2, 0.11580086580086581, ["add     zone_used, zone_size", "mov     [rsp+48h+var_40], rcx", "cmp     rax, 76h", "jbe     short loc_1C358"], ["add~zone_used,zone_size", "mov~[rsp+0],rcx", "cmp~rax,0", "jbe~FOO"]]], "func_feature": [8, 8, 24, 1, 23, 36, 3, 110, 0.06475, 1, 5], "succs": [[2, 18], [0, 8], [7], [12, 6], [7], [4, 15], [11, 5], [12], [18, 7], [7], [7], [12, 5], [], [12], [12], [8], [9, 14], [8, 1], [17, 19], [20, 21], [13, 22], [17, 20], [16, 10]], "fname": "save_abbr", "n_num": 23}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[4, 0, 2, 1, 2, 12, 2, 3, 0, 0, 0.07500000000000001, ["mov     r12, name", "call    _strlen", "lea     rbp, [rax+1]", "mov     edi, 76h ; 'v'", "cmp     name_size, 76h", "cmovnb  rdi, name_size", "add     rdi, 11h", "and     rdi, 0FFFFFFFFFFFFFFF8h; size", "call    malloc", "test    rax, rax", "mov     rbx, rax", "jz      short loc_1C3EB"], ["mov~r12,name", "call~FOO", "lea~rbp,[rax+0]", "mov~edi,0", "cmp~name_size,0", "cmovnb~rdi,name_size", "add~rdi,0", "and~rdi,0", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 5, 0, 0, 5, 1, 1, 0, 2, 0.0, ["test    name, name", "push    r12", "push    rbp", "push    rbx", "jz      short loc_1C3F8"], ["test~name,name", "push~r12", "push~rbp", "push~rbx", "jz~FOO"]], [3, 0, 1, 0, 1, 8, 0, 1, 2, -1, 0.0, ["mov     qword ptr [tz], 0", "lea     rdi, [rbx+9]; dest", "mov     eax, 1", "mov     [tz+8], ax", "mov     rdx, name_size; n", "mov     rsi, name; src", "call    _memcpy", "mov     byte ptr [tz+name_size+9], 0"], ["mov~<TAG>,0", "lea~rdi,[rbx+0]", "mov~eax,0", "mov~[tz+0],ax", "mov~rdx,name_size", "mov~rsi,name", "call~FOO", "mov~[yte ptr [tz+0],0"]], [0, 1, 2, 0, 1, 5, 1, 2, 1, 1, 0.07500000000000001, ["mov     edi, 80h; size", "call    malloc", "test    rax, rax", "mov     rbx, rax", "jz      short loc_1C3EB"], ["mov~edi,<STR>", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 2, -1, 0.0, ["mov     rax, tz", "pop     tz", "pop     rbp", "pop     r12", "retn"], ["mov~rax,tz", "pop~tz", "pop~rbp", "pop~r12", "retn"]], [1, 0, 0, 0, 0, 8, 1, 0, 2, 0, 0.0, ["xor     edx, edx", "mov     qword ptr [rbx], 0", "mov     tz, rbx", "mov     [rbx+8], dx", "pop     rbx", "pop     rbp", "pop     r12", "retn"], ["xor~edx,edx", "mov~<TAG>,0", "mov~tz,rbx", "mov~[rbx+0],dx", "pop~rbx", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [4, 5, 7, 0, 6, 7, 1, 43, 0.025, 0, 1], "succs": [[2, 4], [0, 3], [4], [4, 5], [], []], "fname": "tzalloc", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     next", "retn"], ["pop~next", "retn"]], [0, 0, 2, 0, 1, 5, 1, 2, 3, -1, 0.15000000000000002, ["mov     rbx, [rdi]", "call    free", "test    next, next", "mov     rdi, next", "jnz     short loc_1C430"], ["mov~rbx,<TAG>", "call~FOO", "test~next,next", "mov~rdi,next", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     tz, 1", "jz      short locret_1C448"], ["cmp~tz,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 4, 0, 0, 2, 1, 1, 1, 1, 0.15000000000000002, ["test    tz, tz", "jz      short locret_1C448"], ["test~tz,tz", "jz~FOO"]], [0, 0, 2, 0, 0, 2, 0, 0, 2, -1, 0.2, ["push    rbx", "nop     dword ptr [rax+00h]"], ["push~rbx", "nop~[word ptr [rax+0]"]]], "func_feature": [1, 2, 4, 0, 6, 7, 0, 14, 0.08333, 0, 0], "succs": [[], [0, 1], [3, 4], [], [3, 5], [1]], "fname": "tzfree", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 1, 26, 0, 1, 5, 1, 2, 0, 0, 0.027440395861448495, ["mov     edi, 80h; size", "call    malloc", "test    rax, rax", "mov     rbx, rax", "jz      loc_1C575"], ["mov~edi,<STR>", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [1, 0, 29, 0, 0, 2, 0, 1, 2, 7, 0.019568151147098516, ["cmp     byte ptr [tz+8], 0", "jnz     short loc_1C5F0"], ["cmp~[yte ptr [tz+0],0", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 9, 0, 0.0, ["mov     rbx, r13", "jmp     loc_1C52B"], ["mov~rbx,r13", "jmp~FOO"]], [0, 0, 4, 0, 1, 5, 1, 2, 8, 1, 0.024291497975708502, ["mov     r13, [rbx]", "mov     rdi, rbx; ptr", "call    free", "test    r13, r13", "jnz     loc_1C6FD"], ["mov~r13,<TAG>", "mov~rdi,rbx", "call~FOO", "test~r13,r13", "jnz~FOO"]], [0, 0, 36, 0, 1, 7, 1, 2, 1, 8, 0.024291497975708502, ["mov     r12, tz", "lea     tz, aTz; \"TZ\"", "mov     rbp, tm", "call    _getenv", "test    rax, rax", "mov     r13, rax", "jz      loc_1C5B0"], ["mov~r12,tz", "lea~tz,<TAG>", "mov~rbp,tm", "call~FOO", "test~rax,rax", "mov~r13,rax", "jz~FOO"]], [1, 0, 39, 1, 0, 10, 1, 1, 0, 9, 0.0, ["push    r15", "push    r14", "mov     r14, t", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "test    tz, tz", "jz      loc_1C590"], ["push~r15", "push~r14", "mov~r14,t", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "test~tz,tz", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 18h", "pop     rbx", "pop     tm", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~tm", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 1, 0, 0, 2, 1, 1, 15, -1, 0.007422402159244264, ["xor     eax, eax", "jmp     loc_1C577"], ["xor~eax,eax", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 1, 0, 4, -1, 0.012145748987854251, ["xor     eax, eax"], ["xor~eax,eax"]], [3, 0, 26, 0, 1, 12, 1, 2, 4, 5, 0.06590193432298695, ["lea     r8, [rax+9]", "mov     ecx, 1", "mov     qword ptr [rax], 0", "mov     [rax+8], cx", "mov     rsi, r13; src", "mov     rdi, r8; dest", "call    _memcpy", "mov     r8, rax", "mov     rax, [rsp+48h+var_40]", "test    r15b, r15b", "mov     byte ptr [r8+rax+1], 0", "jnz     loc_1C613"], ["lea~r8,[rax+0]", "mov~ecx,0", "mov~<TAG>,0", "mov~[rax+0],cx", "mov~rsi,r13", "mov~rdi,r8", "call~FOO", "mov~r8,rax", "mov~rax,[rsp+0]", "test~r15b,r15b", "mov~[yte ptr [r8+0],0", "jnz~FOO"]], [4, 0, 27, 1, 2, 15, 2, 3, 3, 6, 0.055330634278002694, ["mov     rdi, r13; s", "call    _strlen", "lea     rdx, [rax+1]", "mov     edi, 76h ; 'v'", "mov     [rsp+48h+var_40], rax", "cmp     rdx, 76h", "mov     [rsp+48h+n], rdx", "cmovnb  rdi, rdx", "add     rdi, 11h", "and     rdi, 0FFFFFFFFFFFFFFF8h; size", "call    malloc", "test    rax, rax", "mov     rbx, rax", "mov     rdx, [rsp+48h+n]; n", "jz      loc_1C575"], ["mov~rdi,r13", "call~FOO", "lea~rdx,[rax+0]", "mov~edi,0", "mov~[rsp+0],rax", "cmp~rdx,0", "mov~<TAG>,rdx", "cmovnb~rdi,rdx", "add~rdi,0", "and~rdi,0", "call~FOO", "test~rax,rax", "mov~rbx,rax", "mov~rdx,<TAG>", "jz~FOO"]], [1, 0, 25, 0, 0, 3, 1, 0, 4, 5, 0.039361223571749884, ["xor     eax, eax", "mov     qword ptr [rbx], 0", "mov     [rbx+8], ax"], ["xor~eax,eax", "mov~<TAG>,0", "mov~[rbx+0],ax"]], [0, 0, 31, 0, 0, 3, 1, 1, 2, 7, 0.02631578947368421, ["movzx   r15d, byte ptr [tz+8]", "test    r15b, r15b", "jnz     loc_1C550"], ["movzx~r15d,[yte ptr [tz+0]", "test~r15b,r15b", "jnz~FOO"]], [0, 0, 24, 0, 1, 2, 0, 1, 5, 4, 0.038011695906432746, ["lea     rdi, aTz; \"TZ\"", "call    _unsetenv"], ["lea~rdi,<TAG>", "call~FOO"]], [0, 0, 23, 0, 0, 2, 1, 1, 6, 3, 0.1545209176788124, ["test    eax, eax", "jz      loc_1C630"], ["test~eax,eax", "jz~FOO"]], [1, 0, 24, 0, 1, 5, 0, 2, 5, 4, 0.0915429599640126, ["lea     rsi, [tz+9]; value", "lea     rdi, aTz; \"TZ\"", "mov     edx, 1; replace", "call    _setenv", "jmp     loc_1C518"], ["lea~rsi,[tz+0]", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO", "jmp~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 14, -1, 0.03711201079622132, ["test    r15b, r15b", "mov     [r13+0], r14d", "jnz     loc_1C5D7"], ["test~r15b,r15b", "mov~[r13+0],r14d", "jnz~FOO"]], [0, 0, 6, 0, 1, 6, 1, 2, 13, -1, 0.05060728744939271, ["mov     r12, [rbx]", "mov     rdi, rbx; ptr", "call    free", "test    r12, r12", "mov     rbx, r12", "jnz     short loc_1C680"], ["mov~r12,<TAG>", "mov~rdi,rbx", "call~FOO", "test~r12,r12", "mov~rbx,r12", "jnz~FOO"]], [1, 0, 1, 1, 0, 10, 0, 1, 1, -1, 0.0006747638326585695, ["add     rsp, 18h", "mov     tz, r14; timer", "mov     t, tm; tp", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     t", "pop     r15", "jmp     _gmtime_r"], ["add~rsp,0", "mov~tz,r14", "mov~t,tm", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~t", "pop~r15", "jmp~FOO"]], [0, 0, 4, 0, 1, 3, 0, 1, 7, 2, 0.029014844804318488, ["call    ___errno_location", "mov     r12d, [rax]", "mov     tm, rax"], ["call~FOO", "mov~r12d,<TAG>", "mov~tm,rax"]], [1, 0, 10, 1, 0, 3, 0, 1, 11, -1, 0.01282051282051282, ["mov     rsi, rbx", "add     rsi, 9; value", "jz      short loc_1C667"], ["mov~rsi,rbx", "add~rsi,0", "jz~FOO"]], [1, 0, 11, 0, 1, 5, 0, 2, 10, -1, 0.10323886639676112, ["call    ___errno_location", "cmp     byte ptr [rbx+8], 0", "mov     r13, rax", "mov     r14d, [rax]", "jnz     short loc_1C6B0"], ["call~FOO", "cmp~[yte ptr [rbx+0],0", "mov~r13,rax", "mov~r14d,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [0, 0, 8, 0, 1, 4, 1, 2, 11, -1, 0.07489878542510121, ["lea     rdi, aTz; \"TZ\"", "call    _unsetenv", "test    eax, eax", "jz      short loc_1C6CE"], ["lea~rdi,<TAG>", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 18, 0, 2, 6, 1, 3, 7, -1, 0.12483130904183536, ["call    _tzset", "mov     rsi, tm; tp", "mov     rdi, t; timer", "call    _localtime_r", "test    rax, rax", "jnz     loc_1C6D8"], ["call~FOO", "mov~rsi,tm", "mov~rdi,t", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 1, 0, 0, 3, 1, 1, 9, -1, 0.0067476383265856945, ["mov     [rbp+0], r12d", "xor     eax, eax", "jmp     loc_1C5DA"], ["mov~[rbp+0],r12d", "xor~eax,eax", "jmp~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 3, -1, 0.0076473234367971194, ["mov     rsi, tm; tp", "mov     rdi, t; timer", "call    _localtime_r", "test    rax, rax", "jz      short loc_1C575"], ["mov~rsi,tm", "mov~rdi,t", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 8, 0, 1, 5, 1, 2, 12, -1, 0.002699055330634278, ["lea     rdi, aTz; \"TZ\"", "mov     edx, 1; replace", "call    _setenv", "test    eax, eax", "jnz     short loc_1C677"], ["lea~rdi,<TAG>", "mov~edx,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 8, -1, 0.10087719298245613, ["cmp     rbx, 1", "jz      loc_1C575"], ["cmp~rbx,0", "jz~FOO"]], [0, 0, 17, 0, 1, 6, 1, 2, 8, -1, 0.02361673414304993, ["mov     rsi, tm; tm", "mov     rdi, tz; tz", "call    save_abbr", "test    al, al", "mov     r15d, eax", "jz      loc_1C649"], ["mov~rsi,tm", "mov~rdi,tz", "call~FOO", "test~al,al", "mov~r15d,eax", "jz~FOO"]], [0, 0, 30, 0, 1, 5, 1, 2, 3, 7, 0.004048582995951417, ["lea     rdi, [tz+9]; s1", "mov     rsi, rax; s2", "call    _strcmp", "test    eax, eax", "jnz     loc_1C497"], ["lea~rdi,[tz+0]", "mov~rsi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 12, 0, 0, 1, 1, 0, 9, -1, 0.08940620782726046, ["xor     r15d, r15d"], ["xor~r15d,r15d"]], [0, 0, 4, 0, 1, 5, 1, 2, 4, -1, 0.009446693657219972, ["mov     rsi, tm; tm", "mov     rdi, tz; tz", "call    save_abbr", "test    al, al", "jz      short loc_1C575"], ["mov~rsi,tm", "mov~rdi,tz", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 4, -1, 0.004723346828609986, ["mov     rsi, tm; tp", "mov     rdi, t; timer", "call    _localtime_r", "test    rax, rax", "jnz     short loc_1C5C8"], ["mov~rsi,tm", "mov~rdi,t", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 5, -1, 0.014844804318488529, ["mov     rax, tm"], ["mov~rax,tm"]], [1, 0, 13, 0, 0, 2, 0, 1, 9, -1, 0.0199055330634278, ["cmp     rbx, 1", "jz      loc_1C5D7"], ["cmp~rbx,0", "jz~FOO"]], [0, 0, 12, 0, 0, 1, 0, 1, 10, -1, 0.009784075573549258, ["jmp     loc_1C656"], ["jmp~FOO"]], [0, 0, 6, 0, 1, 2, 0, 2, 12, -1, 0.029352226720647773, ["call    _tzset", "jmp     short loc_1C680"], ["call~FOO", "jmp~FOO"]], [0, 0, 6, 0, 0, 3, 1, 0, 12, -1, 0.029352226720647773, ["mov     r14d, [r13+0]", "xor     r15d, r15d", "xchg    ax, ax"], ["mov~r14d,[r13+0]", "xor~r15d,r15d", "xchg~ax,ax"]], [1, 0, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 18h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [21, 25, 51, 1, 40, 60, 2, 178, 0.03429, 1, 6], "succs": [[8, 11], [0, 26], [3], [25, 2], [1, 12], [18, 4], [], [6], [6], [13, 15], [8, 9], [15], [10, 30], [14], [24, 19], [14], [34, 7], [16, 17], [22], [3], [27, 23], [20, 23], [], [37, 38], [28, 29], [39], [32, 8], [37, 38], [8, 31], [35, 28], [33, 10], [21], [8, 34], [32, 8], [39], [34, 36], [21], [17], [17], []], "fname": "localtime_rz", "n_num": 40}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 7, 0, 1, 3, 0, 2, 0, 0, 0.026829268292682926, ["call    _tzset", "mov     r14d, 1", "jmp     loc_1C8A0"], ["call~FOO", "mov~r14d,0", "jmp~FOO"]], [0, 0, 9, 0, 1, 4, 1, 2, 7, -1, 0.07408536585365853, ["lea     rdi, aTz; \"TZ\"", "call    _unsetenv", "test    eax, eax", "jz      loc_1C9F6"], ["lea~rdi,<TAG>", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 9, 0, 1, 5, 1, 2, 8, -1, 0.00274390243902439, ["lea     rdi, aTz; \"TZ\"", "mov     edx, 1; replace", "call    _setenv", "test    eax, eax", "jnz     loc_1C890"], ["lea~rdi,<TAG>", "mov~edx,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 9, -1, 0.01951219512195122, ["mov     [rbp+0], r12d", "nop     dword ptr [rax+00h]"], ["mov~[rbp+0],r12d", "nop~[word ptr [rax+0]"]], [0, 0, 7, 0, 1, 5, 1, 2, 8, 1, 0.03353658536585366, ["mov     r13, [rbx]", "mov     rdi, rbx; ptr", "call    free", "test    r13, r13", "jnz     loc_1CA1F"], ["mov~r13,<TAG>", "mov~rdi,rbx", "call~FOO", "test~r13,r13", "jnz~FOO"]], [1, 0, 11, 1, 0, 3, 0, 1, 7, -1, 0.01524390243902439, ["mov     rsi, rbx", "add     rsi, 9; value", "jz      loc_1C87C"], ["mov~rsi,rbx", "add~rsi,0", "jz~FOO"]], [1, 0, 12, 0, 1, 5, 0, 2, 6, -1, 0.10975609756097561, ["call    ___errno_location", "cmp     byte ptr [rbx+8], 0", "mov     tz, rax", "mov     r13d, [rax]", "jnz     loc_1C9D0"], ["call~FOO", "cmp~[yte ptr [rbx+0],0", "mov~tz,rax", "mov~r13d,<TAG>", "jnz~FOO"]], [2, 0, 32, 0, 0, 3, 0, 1, 2, 7, 0.030182926829268292, ["cmp     byte ptr [tz+8], 0", "mov     ebx, 1", "jz      loc_1C832"], ["cmp~[yte ptr [tz+0],0", "mov~ebx,0", "jz~FOO"]], [0, 0, 39, 0, 1, 6, 1, 2, 1, 8, 0.02195121951219512, ["mov     r12, tz", "lea     tz, aTz; \"TZ\"", "call    _getenv", "test    rax, rax", "mov     r13, rax", "jz      loc_1C900"], ["mov~r12,tz", "lea~tz,<TAG>", "call~FOO", "test~rax,rax", "mov~r13,rax", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, -1, 0.03475609756097561, ["mov     rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_1C8D8"], ["mov~rax,0", "jmp~FOO"]], [4, 0, 32, 1, 2, 15, 2, 3, 3, 6, 0.02530487804878049, ["mov     rdi, r13; s", "call    _strlen", "lea     rdx, [rax+1]", "mov     edi, 76h ; 'v'", "mov     r14, rax", "cmp     rdx, 76h", "mov     [rsp+98h+n], rdx", "cmovnb  rdi, rdx", "add     rdi, 11h", "and     rdi, 0FFFFFFFFFFFFFFF8h; size", "call    malloc", "test    rax, rax", "mov     rbx, rax", "mov     rdx, [rsp+98h+n]; n", "jz      short loc_1C808"], ["mov~rdi,r13", "call~FOO", "lea~rdx,[rax+0]", "mov~edi,0", "mov~r14,rax", "cmp~rdx,0", "mov~[rsp+0],rdx", "cmovnb~rdi,rdx", "add~rdi,0", "and~rdi,0", "call~FOO", "test~rax,rax", "mov~rbx,rax", "mov~rdx,[rsp+0]", "jz~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 10, -1, 0.028658536585365855, ["test    r14b, r14b", "mov     [r12], r13d", "jz      loc_1C808"], ["test~r14b,r14b", "mov~<TAG>,r13d", "jz~FOO"]], [0, 1, 31, 0, 1, 5, 1, 2, 3, 6, 0.013109756097560975, ["mov     edi, 80h; size", "call    malloc", "test    rax, rax", "mov     rbx, rax", "jz      loc_1C808"], ["mov~edi,<STR>", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 23, 0, 1, 2, 0, 2, 7, -1, 0.08109756097560976, ["call    _tzset", "jmp     loc_1C832"], ["call~FOO", "jmp~FOO"]], [0, 0, 28, 0, 0, 2, 1, 1, 6, 3, 0.11280487804878049, ["test    eax, eax", "jz      loc_1CA10"], ["test~eax,eax", "jz~FOO"]], [0, 0, 7, 0, 0, 3, 1, 0, 8, -1, 0.026829268292682926, ["mov     r13d, [r12]", "xor     r14d, r14d", "nop     word ptr [rax+rax+00000000h]"], ["mov~r13d,<TAG>", "xor~r14d,r14d", "nop~[ord ptr [rax+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, -1, 0.0475609756097561, ["mov     rcx, [rsp+98h+var_40]", "xor     rcx, fs:28h", "jnz     loc_1CA1A"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 34, 0, 1, 5, 1, 2, 3, 7, 0.013414634146341463, ["lea     rdi, [tz+9]; s1", "mov     rsi, rax; s2", "call    _strcmp", "test    eax, eax", "jnz     loc_1C764"], ["lea~rdi,[tz+0]", "mov~rsi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 35, 0, 0, 3, 1, 1, 2, 7, 0.013109756097560975, ["movzx   r15d, byte ptr [tz+8]", "test    r15b, r15b", "jnz     loc_1C818"], ["movzx~r15d,[yte ptr [tz+0]", "test~r15b,r15b", "jnz~FOO"]], [0, 0, 18, 0, 0, 2, 1, 0, 7, -1, 0.011382113821138212, ["test    ecx, ecx", "jns     loc_1C861"], ["test~ecx,ecx", "jns~FOO"]], [0, 0, 19, 0, 0, 2, 1, 1, 6, -1, 0.013211382113821139, ["test    edx, edx", "js      short loc_1C9C0"], ["test~edx,edx", "js~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 9, 0, 0.0, ["mov     rbx, r13", "jmp     loc_1C7EC"], ["mov~rbx,r13", "jmp~FOO"]], [1, 0, 23, 0, 0, 1, 0, 0, 4, -1, 0.023170731707317073, ["mov     ebx, (offset n+1)"], ["mov~ebx,0"]], [1, 0, 30, 0, 0, 3, 1, 0, 4, 5, 0.023170731707317073, ["xor     eax, eax", "mov     qword ptr [rbx], 0", "mov     [rbx+8], ax"], ["xor~eax,eax", "mov~<TAG>,0", "mov~[rbx+0],ax"]], [0, 0, 7, 0, 1, 6, 1, 2, 9, -1, 0.04390243902439024, ["mov     rbp, [rbx]", "mov     rdi, rbx; ptr", "call    free", "test    rbp, rbp", "mov     rbx, rbp", "jnz     short loc_1C8A0"], ["mov~rbp,<TAG>", "mov~rdi,rbx", "call~FOO", "test~rbp,rbp", "mov~rbx,rbp", "jnz~FOO"]], [0, 0, 20, 0, 0, 25, 13, 1, 5, -1, 0.04024390243902439, ["mov     eax, [tm+0]", "mov     edx, [tm+4]", "xor     eax, [rsp+98h+tm_1.tm_sec]", "xor     edx, [rsp+98h+tm_1.tm_min]", "mov     ecx, [rsp+98h+tm_1.tm_isdst]", "or      eax, edx", "mov     edx, [tm+8]", "xor     edx, [rsp+98h+tm_1.tm_hour]", "or      eax, edx", "mov     edx, [tm+0Ch]", "xor     edx, [rsp+98h+tm_1.tm_mday]", "or      eax, edx", "mov     edx, [tm+10h]", "xor     edx, [rsp+98h+tm_1.tm_mon]", "or      eax, edx", "mov     edx, [tm+14h]", "xor     edx, [rsp+98h+tm_1.tm_year]", "or      eax, edx", "mov     edx, [tm+20h]", "test    edx, edx", "setz    dil", "test    ecx, ecx", "setz    sil", "cmp     dil, sil", "jz      short loc_1C9C0"], ["mov~eax,[tm+0]", "mov~edx,[tm+0]", "xor~eax,[rsp+0]", "xor~edx,[rsp+0]", "mov~ecx,[rsp+0]", "or~eax,edx", "mov~edx,[tm+0]", "xor~edx,[rsp+0]", "or~eax,edx", "mov~edx,[tm+0]", "xor~edx,[rsp+0]", "or~eax,edx", "mov~edx,[tm+0]", "xor~edx,[rsp+0]", "or~eax,edx", "mov~edx,[tm+0]", "xor~edx,[rsp+0]", "or~eax,edx", "mov~edx,[tm+0]", "test~edx,edx", "setz~dil", "test~ecx,ecx", "setz~sil", "cmp~dil,sil", "jz~FOO"]], [0, 0, 21, 0, 1, 5, 1, 2, 4, -1, 0.0951219512195122, ["lea     rsi, [rsp+98h+tm_1]; tp", "lea     rdi, [rsp+98h+t]; timer", "call    _localtime_r", "test    rax, rax", "jz      loc_1C861"], ["lea~rsi,[rsp+0]", "lea~rdi,[rsp+0]", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 41, 1, 0, 13, 2, 1, 0, 9, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbp, tm", "sub     rsp, 68h", "mov     rax, fs:28h", "mov     [rsp+98h+var_40], rax", "xor     eax, eax", "test    tz, tz", "jz      loc_1C8D0"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbp,tm", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~tz,tz", "jz~FOO"]], [0, 0, 17, 0, 0, 2, 1, 1, 6, -1, 0.02215447154471545, ["test    eax, eax", "jz      loc_1C849"], ["test~eax,eax", "jz~FOO"]], [1, 0, 22, 0, 1, 5, 0, 2, 3, -1, 0.15853658536585366, ["mov     rdi, tm; tp", "call    _mktime", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+98h+t], rax", "jz      loc_1C950"], ["mov~rdi,tm", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 6, -1, 0.029268292682926828, ["mov     rax, [rsp+98h+t]", "jmp     short loc_1C8D8"], ["mov~rax,[rsp+0]", "jmp~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 5, -1, 0.15304878048780488, ["cmp     rbx, 1", "jz      short loc_1C8C0"], ["cmp~rbx,0", "jz~FOO"]], [3, 0, 31, 0, 1, 10, 1, 2, 4, 5, 0.032926829268292684, ["mov     ecx, 1", "mov     qword ptr [rax], 0", "mov     rsi, r13; src", "mov     [rax+8], cx", "lea     rcx, [rax+9]", "mov     rdi, rcx; dest", "call    _memcpy", "test    r15b, r15b", "mov     byte ptr [rax+r14+1], 0", "jnz     loc_1C934"], ["mov~ecx,0", "mov~<TAG>,0", "mov~rsi,r13", "mov~[rax+0],cx", "lea~rcx,[rax+0]", "mov~rdi,rcx", "call~FOO", "test~r15b,r15b", "mov~[yte ptr [rax+0],0", "jnz~FOO"]], [0, 0, 14, 0, 0, 1, 0, 1, 7, -1, 0.007113821138211383, ["jmp     loc_1C861"], ["jmp~FOO"]], [1, 0, 29, 0, 1, 5, 0, 2, 5, 4, 0.061585365853658536, ["lea     rsi, [tz+9]; value", "lea     rdi, aTz; \"TZ\"", "mov     edx, 1; replace", "call    _setenv", "jmp     loc_1C7D9"], ["lea~rsi,[tz+0]", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 1, 2, 0, 1, 1, -1, 0.0018292682926829267, ["mov     tz, tm; tp", "call    _timegm"], ["mov~tz,tm", "call~FOO"]], [0, 0, 29, 0, 1, 2, 0, 1, 5, 4, 0.022560975609756097, ["lea     rdi, aTz; \"TZ\"", "call    _unsetenv"], ["lea~rdi,<TAG>", "call~FOO"]], [0, 0, 15, 0, 1, 5, 1, 2, 4, -1, 0.06869918699186991, ["mov     rsi, tm; tm", "mov     rdi, tz; tz", "call    save_abbr", "test    al, al", "jnz     short loc_1C861"], ["mov~rsi,tm", "mov~rdi,tz", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 14, 0, 0, 1, 0, 0, 5, -1, 0.0, ["mov     [rsp+98h+t], 0FFFFFFFFFFFFFFFFh"], ["mov~[rsp+0],0"]], [1, 0, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 68h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 7, 0, 1, 3, 0, 1, 7, 2, 0.03414634146341464, ["call    ___errno_location", "mov     r12d, [rax]", "mov     tm, rax"], ["call~FOO", "mov~r12d,<TAG>", "mov~tm,rax"]]], "func_feature": [21, 36, 52, 1, 42, 65, 1, 187, 0.03744, 2, 4], "succs": [[25], [0, 15], [0, 15], [9], [3, 22], [1, 2], [1, 5], [12, 30], [19, 7], [17], [9, 33], [9, 31], [24, 9], [30], [41, 13], [25], [], [16, 40], [10, 23], [10, 18], [32, 29], [20, 29], [4], [30], [35], [25, 11], [21, 29], [32, 26], [8, 36], [34, 38], [27, 38], [17], [6, 31], [35, 37], [32], [14], [17], [14], [32, 39], [32], [], [4]], "fname": "mktime_z", "n_num": 42}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[2, 0, 0, 0, 1, 7, 0, 1, 0, 0, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 0", "mov     eax, 0FFFFFFFFh", "pop     rbx", "pop     stream", "pop     r12", "retn"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "pop~rbx", "pop~stream", "pop~r12", "retn"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, -1, 0.047619047619047616, ["test    eax, eax", "jnz     short loc_1CA88"], ["test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["pop     rbx", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "pop~stream", "pop~r12", "retn"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 2, 0.07142857142857142, ["test    eax, eax", "jz      short loc_1CA5F"], ["test~eax,eax", "jz~FOO"]], [1, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.047619047619047616, ["test    r12, r12", "mov     eax, 0FFFFFFFFh", "jz      short loc_1CA98"], ["test~r12,r12", "mov~eax,0", "jz~FOO"]], [0, 1, 7, 0, 2, 12, 2, 3, 0, 3, 0.0, ["push    r12", "push    rbp", "mov     rbp, stream", "push    rbx", "call    ___fpending", "mov     ebx, [stream+0]", "mov     rdi, stream; fp", "mov     r12, rax", "call    rpl_fclose", "and     ebx, 20h", "test    ebx, ebx", "jnz     short loc_1CA68"], ["push~r12", "push~rbp", "mov~rbp,stream", "push~rbx", "call~FOO", "mov~ebx,[stream+0]", "mov~rdi,stream", "mov~r12,rax", "call~FOO", "and~ebx,<STR>", "test~ebx,ebx", "jnz~FOO"]], [1, 0, 0, 0, 1, 9, 0, 1, 3, 0, 0.0, ["call    ___errno_location", "cmp     dword ptr [rax], 9", "pop     rbx", "pop     stream", "pop     r12", "setnz   al", "movzx   eax, al", "neg     eax", "retn"], ["call~FOO", "cmp~<TAG>,0", "pop~rbx", "pop~stream", "pop~r12", "setnz~al", "movzx~eax,al", "neg~eax", "retn"]], [1, 0, 0, 0, 0, 5, 0, 0, 2, -1, 0.0, ["pop     rbx", "mov     eax, 0FFFFFFFFh", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "mov~eax,0", "pop~stream", "pop~r12", "retn"]]], "func_feature": [4, 5, 8, 0, 8, 8, 2, 44, 0.02083, 0, 0], "succs": [[], [0, 7], [], [2, 4], [2, 6], [1, 3], [], []], "fname": "close_stream", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 4, 1, 2, 0, 1, 0.0, ["sub     rsp, 8", "call    mdir_name", "test    result, result", "jz      short loc_1CAC3"], ["sub~rsp,0", "call~FOO", "test~result,result", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 1, 3, 0, 3, 2, 2, 7, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "dir_name", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[2, 0, 2, 2, 0, 6, 1, 1, 0, 0, 0.16666666666666666, ["rol     h, 9", "add     s, 1", "add     rax, rcx", "movsx   rcx, byte ptr [s]", "test    cl, cl", "jnz     short loc_1CAE0"], ["rol~h,0", "add~s,0", "add~rax,rcx", "movsx~rcx,<TAG>", "test~cl,cl", "jnz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 0, 1, -1, 0.16666666666666666, ["xor     eax, eax", "nop     word ptr [h+h+00h]"], ["xor~eax,eax", "nop~[ord ptr [h+0]"]], [0, 0, 4, 0, 0, 3, 1, 1, 0, 1, 0.0, ["movsx   rcx, byte ptr [s]", "test    cl, cl", "jz      short loc_1CB00"], ["movsx~rcx,<TAG>", "test~cl,cl", "jz~FOO"]], [0, 0, 0, 1, 0, 4, 1, 0, 3, -1, 0.0, ["xor     edx, edx", "div     tablesize", "mov     rax, rdx", "retn"], ["xor~edx,edx", "div~,tablesize", "mov~rax,rdx", "retn"]], [0, 0, 0, 0, 0, 3, 1, 0, 1, 0, 0.0, ["xor     edx, edx", "mov     rax, rdx", "retn"], ["xor~edx,edx", "mov~rax,rdx", "retn"]]], "func_feature": [0, 5, 2, 0, 5, 5, 1, 18, 0.06667, 0, 3], "succs": [[0, 3], [0], [1, 4], [], []], "fname": "hash_pjw", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[2, 0, 2, 1, 1, 5, 1, 2, 0, 0, 0.0, ["sub     rsp, 8", "mov     edi, 0Eh; item", "call    _nl_langinfo", "test    codeset, codeset", "jz      short loc_1CB40"], ["sub~rsp,0", "mov~edi,0", "call~FOO", "test~codeset,codeset", "jz~FOO"]], [1, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0.0, ["lea     codeset, aAscii; \"ASCII\"", "add     rsp, 8", "retn"], ["lea~codeset,<TAG>", "add~rsp,0", "retn"]], [2, 0, 0, 1, 0, 5, 0, 0, 0, -1, 0.0, ["cmp     byte ptr [codeset], 0", "lea     rdx, aAscii; \"ASCII\"", "cmovz   codeset, rdx", "add     rsp, 8", "retn"], ["cmp~<TAG>,0", "lea~rdx,<TAG>", "cmovz~codeset,rdx", "add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 2, 1, 13, 0.0, 1, 3], "succs": [[1, 2], [], []], "fname": "locale_charset", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 9, 0, 1, 8, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, fp", "call    _fileno", "test    eax, eax", "mov     rdi, fp; fp", "js      short loc_1CBB7"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,fp", "call~FOO", "test~eax,eax", "mov~rdi,fp", "js~FOO"]], [1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     [rbp+0], r12d", "mov     eax, 0FFFFFFFFh", "jmp     short loc_1CB90"], ["mov~[rbp+0],r12d", "mov~eax,0", "jmp~FOO"]], [0, 0, 2, 0, 2, 7, 1, 3, 0, 1, 0.1111111111111111, ["call    ___errno_location", "mov     r12d, [rax]", "mov     rdi, fp; stream", "mov     rbp, rax", "call    _fclose", "test    r12d, r12d", "jnz     short loc_1CBC0"], ["call~FOO", "mov~r12d,<TAG>", "mov~rdi,fp", "mov~rbp,rax", "call~FOO", "test~r12d,r12d", "jnz~FOO"]], [0, 0, 8, 0, 1, 3, 1, 2, 0, 3, 0.08333333333333333, ["call    ___freading", "test    eax, eax", "jnz     short loc_1CB98"], ["call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 0, -1, 0.06944444444444445, ["pop     fp", "pop     rbp", "pop     r12", "jmp     _fclose"], ["pop~fp", "pop~rbp", "pop~r12", "jmp~FOO"]], [0, 0, 6, 0, 1, 4, 1, 2, 0, 2, 0.15277777777777776, ["mov     rdi, fp; stream", "call    rpl_fflush", "test    eax, eax", "jz      short loc_1CBB4"], ["mov~rdi,fp", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 7, 0, 2, 8, 1, 3, 0, 3, 0.027777777777777776, ["mov     rdi, fp; stream", "call    _fileno", "xor     esi, esi; offset", "mov     edx, 1; whence", "mov     edi, eax; fd", "call    _lseek", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_1CB6C"], ["mov~rdi,fp", "call~FOO", "xor~esi,esi", "mov~edx,0", "mov~edi,eax", "call~FOO", "cmp~rax,0", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 0, -1, 0.0, ["pop     fp", "pop     rbp", "pop     saved_errno", "retn"], ["pop~fp", "pop~rbp", "pop~saved_errno", "retn"]], [0, 0, 2, 0, 0, 1, 0, 0, 0, -1, 0.08333333333333333, ["mov     rdi, fp; stream"], ["mov~rdi,fp"]]], "func_feature": [7, 5, 14, 0, 10, 13, 1, 42, 0.05278, 0, 0], "succs": [[3, 5], [8], [8, 1], [6, 7], [], [4], [9, 2], [9, 6], [], [5]], "fname": "rpl_fclose", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 4, 0, 1, 3, 1, 2, 0, 0, 0.1, ["call    ___freading", "test    eax, eax", "jz      short loc_1CBEA"], ["call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 5, 0, 0, 4, 1, 1, 0, 3, 0.0, ["test    stream, stream", "push    rbx", "mov     rbx, stream", "jz      short loc_1CBEA"], ["test~stream,stream", "push~rbx", "mov~rbx,stream", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 1, 1, 2, 1, 0.1, ["test    dword ptr [stream], 100h", "jnz     short loc_1CBF8"], ["test~<TAG>,0", "jnz~FOO"]], [1, 0, 1, 0, 1, 7, 1, 2, 3, 0, 0.025, ["mov     rdi, stream; fp", "mov     edx, 1; whence", "xor     esi, esi; offset", "call    rpl_fseeko", "mov     rdi, stream; stream", "pop     stream", "jmp     _fflush"], ["mov~rdi,stream", "mov~edx,0", "xor~esi,esi", "call~FOO", "mov~rdi,stream", "pop~stream", "jmp~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 1, -1, 0.125, ["mov     rdi, stream; stream", "pop     stream", "jmp     _fflush"], ["mov~rdi,stream", "pop~stream", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []]], "func_feature": [2, 4, 7, 0, 6, 8, 1, 19, 0.05833, 0, 0], "succs": [[2, 4], [0, 4], [3, 4], [5], [5], []], "fname": "rpl_fflush", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[1, 0, 1, 0, 0, 3, 2, 0, 0, 0, 0.0, ["and     dword ptr [fp], 0FFFFFFEFh", "mov     [fp+90h], pos", "xor     eax, eax"], ["and~<TAG>,0", "mov~[fp+0],pos", "xor~eax,eax"]], [1, 0, 2, 0, 2, 13, 0, 3, 3, 1, 0.14285714285714285, ["push    r12", "push    rbp", "mov     r12d, edx", "push    rbx", "mov     rbp, offset", "mov     rbx, fp", "call    _fileno", "mov     edx, r12d; whence", "mov     rsi, offset; offset", "mov     edi, eax; fd", "call    _lseek", "cmp     pos, 0FFFFFFFFFFFFFFFFh", "jz      short loc_1CC62"], ["push~r12", "push~rbp", "mov~r12d,edx", "push~rbx", "mov~rbp,offset", "mov~rbx,fp", "call~FOO", "mov~edx,r12d", "mov~rsi,offset", "mov~edi,eax", "call~FOO", "cmp~pos,0", "jz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 4, 0, 0.0, ["pop     fp", "pop     offset", "pop     whence", "retn"], ["pop~fp", "pop~offset", "pop~whence", "retn"]], [0, 0, 6, 0, 0, 3, 0, 1, 1, 3, 0.09523809523809523, ["mov     rax, [fp+20h]", "cmp     [fp+28h], rax", "jnz     short loc_1CC1A"], ["mov~rax,[fp+0]", "cmp~[fp+0],rax", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 0, 4, 0.0, ["mov     rax, [fp+8]", "cmp     [fp+10h], rax", "jz      short loc_1CC20"], ["mov~rax,[fp+0]", "cmp~[fp+0],rax", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 2, 0.14285714285714285, ["cmp     qword ptr [fp+48h], 0", "jnz     short loc_1CC1A"], ["cmp~[word ptr [fp+0],0", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 1, -1, 0.07142857142857142, ["jmp     _fseeko"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []]], "func_feature": [2, 2, 7, 0, 8, 10, 1, 29, 0.05655, 0, 0], "succs": [[2], [0, 2], [], [5, 6], [3, 6], [1, 6], [7], []], "fname": "rpl_fseeko", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 0, 0, 0, 0.16666666666666666, ["xor     ebx, ebx", "nop     dword ptr [rax+rax+00000000h]"], ["xor~ebx,ebx", "nop~[word ptr [rax+0]"]], [2, 0, 3, 2, 1, 17, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15, rdx", "push    r13", "push    r12", "lea     r12, __frame_dummy_init_array_entry", "push    rbp", "lea     rbp, __do_global_dtors_aux_fini_array_entry", "push    rbx", "mov     r13d, edi", "mov     r14, rsi", "sub     rbp, r12", "sub     rsp, 8", "sar     rbp, 3", "call    _init_proc", "test    rbp, rbp", "jz      short loc_1CCC6"], ["push~r15", "push~r14", "mov~r15,rdx", "push~r13", "push~r12", "lea~r12,<TAG>", "push~rbp", "lea~rbp,<TAG>", "push~rbx", "mov~r13d,edi", "mov~r14,rsi", "sub~rbp,r12", "sub~rsp,0", "sar~rbp,0", "call~FOO", "test~rbp,rbp", "jz~FOO"]], [1, 0, 2, 1, 1, 7, 0, 2, 2, 1, 0.16666666666666666, ["mov     rdx, r15", "mov     rsi, r14", "mov     edi, r13d", "call    qword ptr [r12+rbx*8]", "add     rbx, 1", "cmp     rbp, rbx", "jnz     short loc_1CCB0"], ["mov~rdx,r15", "mov~rsi,r14", "mov~edi,r13d", "call~<TAG>", "add~rbx,0", "cmp~rbp,rbx", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 5, 0, 34, 0.08333, 2, 4], "succs": [[2], [0, 3], [2, 3], []], "fname": "__libc_csu_init", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_csu_fini", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rdx, cs:__dso_handle", "xor     esi, esi", "jmp     ___cxa_atexit"], ["mov~rdx,<TAG>", "xor~esi,esi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 1, 3, 0.0, 1, 0], "succs": [[1], []], "fname": "atexit", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[2, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0.0, ["sub     rsp, 8; _fini", "add     rsp, 8", "retn"], ["sub~rsp,0", "add~rsp,0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 2], "succs": [[]], "fname": "term_proc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_toupper_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_toupper_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getenv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigprocmask:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigprocmask", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __snprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__snprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn raise:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "raise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp_free:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp_free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn abort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __errno_location:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strncmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn localtime_r:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "localtime_r", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fpending:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn isatty:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "isatty", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigaction_0:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigaction_0", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswcntrl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswcntrl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn wcswidth:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "wcswidth", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn localeconv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "localeconv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbstowcs:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbstowcs", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn readlink:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "readlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn clock_gettime:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "clock_gettime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn setenv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "setenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn textdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fclose:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn opendir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "opendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getpwuid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getpwuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn bindtextdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dcgettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_get_mb_cur_max:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strlen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __lxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__lxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __stack_chk_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getopt_long:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbrtowc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getgrgid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getgrgid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstatat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstatat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn snprintf:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "snprintf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __overflow:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__overflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strrchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn gmtime_r:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "gmtime_r", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn lseek:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __assert_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __strtoul_internal:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__strtoul_internal", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fnmatch:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fnmatch", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ioctl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getcwd:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getcwd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strspn:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strspn", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn closedir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "closedir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __libc_start_main:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_start_main", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _setjmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_setjmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fputs_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn calloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn signal:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "signal", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dirfd:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dirfd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getpwnam:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getpwnam", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __memcpy_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__memcpy_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigemptyset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigemptyset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getgrnam:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getgrnam", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn tzset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "tzset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fileno:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn tcgetpgrp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "tcgetpgrp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __xstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__xstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn readdir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "readdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn wcwidth:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "wcwidth", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp_malloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 2, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp_malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fflush:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn nl_langinfo:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strcoll:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strcoll", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mktime:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mktime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __freading:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fwrite_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fwrite_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn realloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn stpncpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "stpncpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn setlocale:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __printf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn timegm:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "timegm", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strftime:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strftime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mempcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mempcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memmove:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn error:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fseeko:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn unsetenv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "unsetenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strtoul:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strtoul", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __cxa_atexit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn wcstombs:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "wcstombs", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn gethostname:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "gethostname", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigismember:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigismember", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fwrite:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fflush_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fflush_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbsinit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswprint:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp___cxa_finalize:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp___cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigaddset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigaddset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_tolower_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_tolower_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_b_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __sprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__sprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __gmon_start__:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__gmon_start__", "n_num": 1}
