{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    rax ; __gmon_start__"], ["call~rax"]], [1, 0, 2, 1, 0, 4, 1, 1, 0, 1, 0.0, ["sub     rsp, 8; _init", "mov     rax, cs:__gmon_start___ptr", "test    rax, rax", "jz      short loc_32DA"], ["sub~rsp,0", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 3, 1, 7, 0.0, 1, 2], "succs": [[2], [0, 2], []], "fname": "init_proc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0.0, ["push    cs:qword_225C70", "jmp     cs:qword_225C78"], ["push~<TAG>", "jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 103, 2, 0.0, 2, 0], "succs": [[]], "fname": "sub_32E0", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getenv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 14, 1, 0.0, 1, 0], "succs": [[]], "fname": "getenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigprocmask_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigprocmask", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:raise_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "raise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:abort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 18, 1, 0.0, 1, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__errno_location_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 90, 1, 0.0, 1, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strncmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:localtime_r_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "localtime_r", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "strcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fpending_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:toupper_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "toupper", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:isatty_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "isatty", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigaction_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigaction", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswcntrl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswcntrl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:wcswidth_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "wcswidth", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:localeconv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "localeconv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbstowcs_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbstowcs", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:readlink_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "readlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:clock_gettime_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "clock_gettime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:setenv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "setenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:textdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fclose_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:opendir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "opendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpwuid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpwuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:bindtextdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dcgettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_get_mb_cur_max_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strlen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 51, 1, 0.0, 1, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__lxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__lxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__stack_chk_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 50, 1, 0.0, 1, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getopt_long_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbrtowc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:gettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 80, 1, 0.0, 1, 0], "succs": [[]], "fname": "gettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:printf_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 13, 1, 0.0, 1, 0], "succs": [[]], "fname": "printf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getgrgid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getgrgid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstatat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstatat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:snprintf_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "snprintf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strrchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:gmtime_r_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "gmtime_r", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:lseek_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__assert_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 8, 1, 0.0, 1, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fnmatch_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fnmatch", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 34, 1, 0.0, 1, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ioctl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getcwd_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getcwd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strspn_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strspn", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:closedir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "closedir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_setjmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "_setjmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fputs_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 42, 1, 0.0, 1, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ferror_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "ferror_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:calloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:signal_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "signal", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dirfd_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "dirfd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpwnam_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpwnam", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fprintf_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 22, 1, 0.0, 1, 0], "succs": [[]], "fname": "fprintf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigemptyset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigemptyset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 22, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getgrnam_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getgrnam", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:putchar_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 20, 1, 0.0, 1, 0], "succs": [[]], "fname": "putchar_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:tzset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "tzset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fileno_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:tcgetpgrp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "tcgetpgrp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__xstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__xstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:readdir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "readdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:wcwidth_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "wcwidth", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:tolower_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "tolower", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:putc_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "putc_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fflush_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:nl_langinfo_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strcoll_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strcoll", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mktime_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mktime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__freading_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fwrite_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 8, 1, 0.0, 1, 0], "succs": [[]], "fname": "fwrite_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:gnu_dev_major_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "gnu_dev_major", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:realloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:stpncpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "stpncpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:setlocale_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:timegm_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "timegm", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:longjmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "longjmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strftime_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strftime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mempcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "mempcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memmove_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:error_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 19, 1, 0.0, 1, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fseeko_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strtoumax_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strtoumax", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:unsetenv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "unsetenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:gnu_dev_minor_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "gnu_dev_minor", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strtoul_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strtoul", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_atexit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:wcstombs_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "wcstombs", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:gethostname_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "gethostname", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sprintf_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "sprintf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigismember_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigismember", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fwrite_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fflush_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fflush_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbsinit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswprint_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigaddset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigaddset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_b_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 8, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:freefun"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 48, 1, 0.0, 1, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:cmp"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 18, 1, 0.0, 1, 0], "succs": [[]], "fname": "strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:chunkfun"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_finalize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 0, 1, 12, 2, 1, 0, 0, 0.0, ["xor     ebp, ebp", "mov     r9, rdx; rtld_fini", "pop     rsi; argc", "mov     rdx, rsp; ubp_av", "and     rsp, 0FFFFFFFFFFFFFFF0h", "push    rax", "push    rsp; stack_end", "lea     r8, __libc_csu_fini; fini", "lea     rcx, __libc_csu_init; init", "lea     rdi, main; main", "call    cs:__libc_start_main_ptr", "hlt"], ["xor~ebp,ebp", "mov~r9,rdx", "pop~rsi", "mov~rdx,rsp", "and~rsp,0", "push~rax", "push~rsp", "lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "call~<TAG>", "hlt"]]], "func_feature": [1, 2, 1, 0, 1, 0, 0, 12, 0.0, 4, 0], "succs": [[]], "fname": "_start", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_deregisterTMCloneTable_ptr", "test    rax, rax", "jz      short loc_39E0"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 6, 0, 1, 0, 1, 0.0, ["lea     rdi, __bss_start", "push    rbp", "lea     rax, __bss_start", "cmp     rax, rdi", "mov     rbp, rsp", "jz      short loc_39E0"], ["lea~rdi,<TAG>", "push~rbp", "lea~rax,<TAG>", "cmp~rax,rdi", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, -1, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 13, 0.04167, 2, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "deregister_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [3, 0, 3, 2, 0, 11, 0, 1, 0, 0, 0.0, ["lea     rdi, __bss_start", "lea     rsi, __bss_start", "push    rbp", "sub     rsi, rdi", "mov     rbp, rsp", "sar     rsi, 3", "mov     rax, rsi", "shr     rax, 3Fh", "add     rsi, rax", "sar     rsi, 1", "jz      short loc_3A30"], ["lea~rdi,<TAG>", "lea~rsi,<TAG>", "push~rbp", "sub~rsi,rdi", "mov~rbp,rsp", "sar~rsi,0", "mov~rax,rsi", "shr~rax,0", "add~rsi,rax", "sar~rsi,0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_registerTMCloneTable_ptr", "test    rax, rax", "jz      short loc_3A30"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, 0, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 18, 0.04167, 2, 2], "succs": [[], [0, 2], [0, 3], []], "fname": "register_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 0, 1, 4, 0, 1, 0, 0, 0.0, ["call    deregister_tm_clones", "mov     cs:completed_7698, 1", "pop     rbp", "retn"], ["call~FOO", "mov~<TAG>,0", "pop~rbp", "retn"]], [1, 0, 2, 0, 0, 4, 0, 1, 1, -1, 0.16666666666666666, ["cmp     cs:__cxa_finalize_ptr, 0", "push    rbp", "mov     rbp, rsp", "jz      short loc_3A63"], ["cmp~<TAG>,0", "push~rbp", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     rdi, cs:__dso_handle", "call    __cxa_finalize"], ["mov~rdi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:completed_7698, 0", "jnz     short locret_3A78"], ["cmp~<TAG>,0", "jnz~FOO"]]], "func_feature": [2, 0, 4, 0, 5, 5, 0, 13, 0.03333, 3, 0], "succs": [[], [0, 2], [0], [], [1, 3]], "fname": "__do_global_dtors_aux", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "pop     rbp", "jmp     register_tm_clones"], ["push~rbp", "mov~rbp,rsp", "pop~rbp", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "frame_dummy", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     eax, [rbp+status]", "mov     cs:exit_failure, eax"], ["mov~eax,[rbp+0]", "mov~<TAG>,eax"]], [1, 0, 2, 0, 0, 5, 0, 1, 0, 1, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+status], edi", "cmp     [rbp+status], 1", "jz      short loc_3AA0"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0.0, ["nop", "pop     rbp", "retn"], ["nop", "pop~rbp", "retn"]]], "func_feature": [0, 0, 1, 0, 3, 3, 1, 10, 0.0, 1, 0], "succs": [[2], [0, 2], []], "fname": "initialize_exit_failure", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     eax, edi", "mov     [rbp+ch_0], al", "movzx   eax, [rbp+ch_0]", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~eax,edi", "mov~[rbp+0],al", "movzx~eax,[rbp+0]", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 5, 7, 0.0, 0, 0], "succs": [[]], "fname": "to_uchar", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0.011111111111111112, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 4, 0, 0, 2, 0, 1, 4, 3, 0.05555555555555556, ["cmp     [rbp+sep], 2Fh ; '/'", "jnz     short loc_3B00"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 10, 0, 0, 7, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+file_name], rdi", "mov     rax, [rbp+file_name]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Eh ; '.'", "jnz     short loc_3B0A"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 1, 1, 5, 1, 0.07777777777777778, ["and     eax, 1", "jmp     short loc_3B0F"], ["and~eax,0", "jmp~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 4, 2, 0.11111111111111112, ["mov     eax, 1", "jmp     short loc_3B05"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0.011111111111111112, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 5, 1, 0, 6, 0, 1, 3, 3, 0.2111111111111111, ["mov     rax, [rbp+file_name]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "mov     [rbp+sep], al", "cmp     [rbp+sep], 0", "jz      short loc_3AF9"], ["mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 2, 4, 0.061111111111111116, ["mov     edx, 2", "jmp     short loc_3AE0"], ["mov~edx,0", "jmp~FOO"]], [1, 0, 6, 0, 0, 1, 0, 0, 2, 4, 0.061111111111111116, ["mov     edx, 1"], ["mov~edx,0"]], [2, 0, 8, 1, 0, 5, 0, 1, 1, 5, 0.07777777777777778, ["mov     rax, [rbp+file_name]", "add     rax, 1", "movzx   eax, byte ptr [rax]", "cmp     al, 2Eh ; '.'", "jnz     short loc_3ADB"], ["mov~rax,[rbp+0]", "add~rax,0", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]]], "func_feature": [0, 1, 7, 0, 11, 14, 1, 31, 0.06162, 0, 2], "succs": [[3], [0, 4], [10, 5], [6], [3], [6], [], [1, 4], [7], [7], [8, 9]], "fname": "dot_or_dotdot", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 0, 2, 2, 15, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 8", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, msgid; \"\\nMandatory arguments to long options a\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "nop", "add     rsp, 8", "pop     rbx", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "nop", "add~rsp,0", "pop~rbx", "pop~rbp", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 1, 15, 0.0, 2, 2], "succs": [[]], "fname": "emit_mandatory_arg_note", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 0, 2, 2, 15, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 8", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aTheSizeArgumen; \"\\nThe SIZE argument is an integer and o\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "nop", "add     rsp, 8", "pop     rbx", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "nop", "add~rsp,0", "pop~rbx", "pop~rbp", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 1, 15, 0.0, 2, 2], "succs": [[]], "fname": "emit_size_note", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 6, 0, 2, 6, 0, 2, 0, 0, 0.0, ["mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aReportAnyTrans; \"Report any translation bugs to <https:/\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked"], ["mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO"]], [1, 0, 7, 0, 1, 7, 1, 2, 4, 4, 0.038461538461538464, ["mov     rax, [rbp+lc_messages]", "mov     edx, 3; n", "lea     rsi, s2; \"en_\"", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jz      short loc_3D26"], ["mov~rax,[rbp+0]", "mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [4, 0, 8, 0, 3, 13, 0, 4, 3, 4, 0.26373626373626374, ["lea     rdi, aSOnlineHelpS; \"\\n%s online help: <%s>\\n\"", "call    _gettext", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rsi, package; \"GNU coreutils\"", "mov     rdi, rax; format", "mov     eax, 0", "call    _printf", "mov     esi, 0; locale", "mov     edi, 5; category", "call    _setlocale", "mov     [rbp+lc_messages], rax", "cmp     [rbp+lc_messages], 0", "jz      short loc_3D26"], ["lea~rdi,<TAG>", "call~FOO", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [3, 0, 14, 1, 0, 39, 1, 1, 0, 7, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 0B8h", "mov     [rbp+program], rdi", "mov     rax, fs:28h", "mov     [rbp+var_18], rax", "xor     eax, eax", "lea     rax, asc_1B584; \"[\"", "mov     [rbp+infomap.program], rax", "lea     rax, aTestInvocation; \"test invocation\"", "mov     [rbp+infomap.node], rax", "lea     rax, domainname; \"coreutils\"", "mov     [rbp+infomap.program+10h], rax", "lea     rax, aMultiCallInvoc; \"Multi-call invocation\"", "mov     [rbp+infomap.node+10h], rax", "lea     rax, aSha224sum; \"sha224sum\"", "mov     [rbp+infomap.program+20h], rax", "lea     rax, aSha2Utilities; \"sha2 utilities\"", "mov     [rbp+infomap.node+20h], rax", "lea     rax, aSha256sum; \"sha256sum\"", "mov     [rbp+infomap.program+30h], rax", "lea     rax, aSha2Utilities; \"sha2 utilities\"", "mov     [rbp+infomap.node+30h], rax", "lea     rax, aSha384sum; \"sha384sum\"", "mov     [rbp+infomap.program+40h], rax", "lea     rax, aSha2Utilities; \"sha2 utilities\"", "mov     [rbp+infomap.node+40h], rax", "lea     rax, aSha512sum; \"sha512sum\"", "mov     [rbp+infomap.program+50h], rax", "lea     rax, aSha2Utilities; \"sha2 utilities\"", "mov     [rbp+infomap.node+50h], rax", "mov     [rbp+infomap.program+60h], 0", "mov     [rbp+infomap.node+60h], 0", "mov     rax, [rbp+program]", "mov     [rbp+node], rax", "lea     rax, [rbp+infomap]", "mov     [rbp+map_prog], rax", "jmp     short loc_3C51"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 14, 1, 0, 1, 0, 0, 3, 7, 0.005494505494505495, ["add     [rbp+map_prog], 10h"], ["add~[rbp+0],0"]], [0, 0, 14, 0, 1, 8, 1, 2, 2, 6, 0.01098901098901099, ["mov     rax, [rbp+map_prog]", "mov     rdx, [rax]", "mov     rax, [rbp+program]", "mov     rsi, rdx; s2", "mov     rdi, rax; s1", "call    strcmp", "test    eax, eax", "jnz     short loc_3C49"], ["mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 5, 2, 0.08241758241758243, ["lea     rbx, aInvocation; \" invocation\"", "jmp     short loc_3D73"], ["lea~rbx,<TAG>", "jmp~FOO"]], [1, 0, 5, 0, 2, 12, 0, 3, 4, 3, 0.24725274725274726, ["lea     rdi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "call    _gettext", "mov     rcx, rax", "mov     rax, [rbp+program]", "mov     rdx, rax", "lea     rsi, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rdi, rcx; format", "mov     eax, 0", "call    _printf", "mov     rax, [rbp+node]", "cmp     rax, [rbp+program]", "jnz     short loc_3D6C"], ["lea~rdi,<TAG>", "call~FOO", "mov~rcx,rax", "mov~rax,[rbp+0]", "mov~rdx,rax", "lea~rsi,<TAG>", "mov~rdi,rcx", "mov~eax,0", "call~FOO", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnz~FOO"]], [0, 0, 10, 0, 0, 4, 1, 1, 2, 5, 0.2197802197802198, ["mov     rax, [rbp+map_prog]", "mov     rax, [rax+8]", "test    rax, rax", "jz      short loc_3CA2"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 0, 0, 3, 5, 0.0, ["mov     rax, [rbp+map_prog]", "mov     rax, [rax+8]", "mov     [rbp+node], rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax"]], [0, 0, 3, 0, 0, 1, 0, 0, 5, 2, 0.08241758241758243, ["lea     rbx, suffixes"], ["lea~rbx,<TAG>"]], [0, 0, 14, 0, 0, 4, 1, 1, 1, 6, 0.13736263736263737, ["mov     rax, [rbp+map_prog]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_3C80"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 2, 0, 2, 13, 1, 3, 6, 1, 0.13186813186813187, ["lea     rdi, aOrAvailableLoc; \"or available locally via: info '(coreut\"...", "call    _gettext", "mov     rcx, rax", "mov     rax, [rbp+node]", "mov     rdx, rbx", "mov     rsi, rax", "mov     rdi, rcx; format", "mov     eax, 0", "call    _printf", "nop", "mov     rax, [rbp+var_18]", "xor     rax, fs:28h", "jz      short loc_3DB1"], ["lea~rdi,<TAG>", "call~FOO", "mov~rcx,rax", "mov~rax,[rbp+0]", "mov~rdx,rbx", "mov~rsi,rax", "mov~rdi,rcx", "mov~eax,0", "call~FOO", "nop", "mov~rax,[rbp+0]", "xor~rax,<TAG>", "jz~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 7, 0, 0.0, ["add     rsp, 0B8h", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]]], "func_feature": [12, 6, 21, 1, 15, 20, 1, 118, 0.08132, 20, 3], "succs": [[7], [0, 7], [1, 7], [11], [11], [8, 4], [13], [10, 6], [9, 2], [2], [13], [8, 5], [], [12, 14], []], "fname": "emit_ancillary_info", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 1, 12, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+t], rdi", "mov     [rbp+buf], rsi", "mov     rdx, [rbp+buf]", "mov     rax, [rbp+t]", "mov     rsi, rdx; buf", "mov     rdi, rax; i", "call    imaxtostr", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 12, 0.0, 0, 1], "succs": [[]], "fname": "timetostr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+s], rdi", "mov     rax, [rbp+s]", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 2, 6, 0.0, 0, 0], "succs": [[]], "fname": "bad_cast", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+err], edi", "cmp     [rbp+err], 5Fh ; '_'", "setz    al", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "cmp~[rbp+0],0", "setz~al", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 2, 7, 0.0, 0, 0], "succs": [[]], "fname": "is_ENOTSUP", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     eax, 0", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~eax,0", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 2, 5, 0.0, 0, 0], "succs": [[]], "fname": "is_smack_enabled", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 2, 2, 0, 22, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+dev], rdi", "mov     [rbp+ino], rsi", "mov     [rbp+dev_ino_size], 10h", "lea     rax, dev_ino_obstack", "mov     [rbp+__o], rax", "mov     eax, [rbp+dev_ino_size]", "cdqe", "mov     [rbp+__len], rax", "mov     rax, [rbp+__o]", "mov     [rbp+__o1], rax", "mov     rax, [rbp+__o1]", "mov     rax, [rax+20h]", "mov     rdx, rax", "mov     rax, [rbp+__o1]", "mov     rax, [rax+18h]", "sub     rdx, rax", "mov     rax, rdx", "cmp     rax, [rbp+__len]", "jnb     short loc_3E6E"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],0", "lea~rax,<TAG>", "mov~[rbp+0],rax", "mov~eax,[rbp+0]", "cdqe~", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "sub~rdx,rax", "mov~rax,rdx", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 0, 2, 0, 20, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+__o]", "mov     rdx, [rax+18h]", "mov     rax, [rbp+__len]", "add     rdx, rax", "mov     rax, [rbp+__o]", "mov     [rax+18h], rdx", "mov     rax, cs:dev_ino_obstack.next_free", "mov     [rbp+vdi], rax", "mov     rax, [rbp+vdi]", "mov     [rbp+di_0], rax", "sub     [rbp+di_0], 10h", "mov     rax, [rbp+di_0]", "mov     rdx, [rbp+dev]", "mov     [rax+8], rdx", "mov     rax, [rbp+di_0]", "mov     rdx, [rbp+ino]", "mov     [rax], rdx", "nop", "leave", "retn"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "sub~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "nop", "leave", "retn"]], [0, 0, 1, 0, 1, 5, 0, 1, 0, 1, 0.0, ["mov     rdx, [rbp+__len]", "mov     rax, [rbp+__o]", "mov     rsi, rdx; length", "mov     rdi, rax; h", "call    _obstack_newchunk"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO"]]], "func_feature": [1, 0, 1, 0, 3, 3, 1, 47, 0.0, 2, 4], "succs": [[1, 2], [], [1]], "fname": "dev_ino_push", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0.0, ["mov     rdx, cs:dev_ino_obstack.next_free", "mov     eax, [rbp+dev_ino_size]", "neg     eax", "cdqe", "add     rax, rdx", "mov     cs:dev_ino_obstack.next_free, rax", "mov     rax, cs:dev_ino_obstack.next_free", "mov     [rbp+vdi], rax", "mov     rax, [rbp+vdi]", "mov     [rbp+di_0], rax", "mov     rax, [rbp+di_0]", "mov     rdx, [rax+8]", "mov     rax, [rax]", "leave", "retn"], ["mov~rdx,<TAG>", "mov~eax,[rbp+0]", "neg~eax", "cdqe~", "add~rax,rdx", "mov~<TAG>,rax", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,<TAG>", "leave", "retn"]], [1, 1, 2, 2, 0, 17, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+dev_ino_size], 10h", "mov     eax, [rbp+dev_ino_size]", "movsxd  rdx, eax", "lea     rax, dev_ino_obstack", "mov     [rbp+__o], rax", "mov     rax, [rbp+__o]", "mov     rax, [rax+18h]", "mov     rcx, rax", "mov     rax, [rbp+__o]", "mov     rax, [rax+10h]", "sub     rcx, rax", "mov     rax, rcx", "cmp     rax, rdx", "jnb     short loc_3F14"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],0", "mov~eax,[rbp+0]", "movsxd~rdx,eax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rcx,rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "sub~rcx,rax", "mov~rax,rcx", "cmp~rax,rdx", "jnb~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 1, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___8563; \"dev_ino_pop\"", "mov     edx, 403h; line", "lea     rsi, file; \"src/ls.c\"", "lea     rdi, assertion; \"dev_ino_size <= obstack_object_size (&d\"...", "call    ___assert_fail"], ["lea~rcx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO"]]], "func_feature": [1, 0, 1, 0, 3, 2, 1, 37, 0.0, 5, 3], "succs": [[], [0, 2], []], "fname": "dev_ino_pop", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 6, 3, 0, 30, 1, 0, 0, 0, 0.2361111111111111, ["mov     rax, [rbp+__o1]", "mov     rax, [rax+18h]", "mov     rdx, rax", "mov     rax, [rbp+__o1]", "mov     rax, [rax+30h]", "add     rdx, rax", "mov     rax, [rbp+__o1]", "mov     rax, [rax+30h]", "not     rax", "and     rax, rdx", "mov     rdx, rax", "mov     rax, [rbp+__o1]", "mov     [rax+18h], rdx", "mov     rax, [rbp+__o1]", "mov     rax, [rax+18h]", "mov     rdx, rax", "mov     rax, [rbp+__o1]", "mov     rax, [rax+8]", "sub     rdx, rax", "mov     rax, rdx", "mov     rdx, rax", "mov     rax, [rbp+__o1]", "mov     rax, [rax+20h]", "mov     rcx, rax", "mov     rax, [rbp+__o1]", "mov     rax, [rax+8]", "sub     rcx, rax", "mov     rax, rcx", "cmp     rdx, rax", "jbe     short loc_4039"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "not~rax", "and~rax,rdx", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "sub~rdx,rax", "mov~rax,rdx", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rcx,rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "sub~rcx,rax", "mov~rax,rcx", "cmp~rdx,rax", "jbe~FOO"]], [0, 0, 8, 0, 0, 9, 0, 1, 1, 5, 0.09722222222222221, ["mov     rax, [rbp+os]", "mov     [rbp+__o1], rax", "mov     rax, [rbp+__o1]", "mov     rax, [rax+10h]", "mov     [rbp+__value], rax", "mov     rax, [rbp+__o1]", "mov     rax, [rax+18h]", "cmp     [rbp+__value], rax", "jnz     short loc_3FC0"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [1, 0, 7, 0, 0, 4, 1, 0, 2, 5, 0.0, ["mov     rax, [rbp+__o1]", "movzx   edx, byte ptr [rax+50h]", "or      edx, 2", "mov     [rax+50h], dl"], ["mov~rax,[rbp+0]", "movzx~edx,[yte ptr [rax+0]", "or~edx,0", "mov~[rax+0],dl"]], [0, 0, 4, 0, 0, 3, 0, 0, 4, 2, 0.2638888888888889, ["mov     rax, [rbp+i]", "cmp     rax, [rbp+n_pos]", "jb      short loc_4071"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jb~FOO"]], [1, 0, 4, 0, 1, 13, 0, 2, 3, 3, 0.2638888888888889, ["mov     rax, [rbp+__o1]", "mov     rdx, [rax+18h]", "mov     rax, [rbp+__o1]", "mov     [rax+10h], rdx", "mov     rax, [rbp+__value]", "mov     [rbp+pos], rax", "mov     rdx, cs:stdout@@GLIBC_2_2_5", "mov     rax, [rbp+prefix]", "mov     rsi, rdx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     [rbp+i], 0", "jmp     short loc_40A0"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 4, 2, 1, 10, 0, 1, 5, 3, 0.0, ["mov     rax, [rbp+i]", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+pos]", "add     rax, rdx", "mov     rax, [rax]", "mov     rsi, rax", "lea     rdi, aLu_0; \" %lu\"", "mov     eax, 0", "call    _printf", "add     [rbp+i], 1"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "mov~rsi,rax", "lea~rdi,<TAG>", "mov~eax,0", "call~FOO", "add~[rbp+0],0"]], [3, 0, 9, 2, 0, 18, 0, 1, 0, 1, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+prefix], rdi", "mov     [rbp+os], rsi", "mov     rax, [rbp+os]", "mov     [rbp+__o], rax", "mov     rax, [rbp+__o]", "mov     rax, [rax+18h]", "mov     rdx, rax", "mov     rax, [rbp+__o]", "mov     rax, [rax+10h]", "sub     rdx, rax", "mov     rax, rdx", "shr     rax, 3", "mov     [rbp+n_pos], rax", "cmp     [rbp+n_pos], 0", "jz      loc_40B4"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "sub~rdx,rax", "mov~rax,rdx", "shr~rax,0", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 1, 0, 1, 2, 0, 1, 5, 1, 0.09722222222222221, ["mov     edi, 0Ah; c", "call    _putchar_unlocked"], ["mov~edi,0", "call~FOO"]], [0, 0, 5, 0, 0, 4, 0, 0, 3, 4, 0.0, ["mov     rax, [rbp+__o1]", "mov     rdx, [rax+20h]", "mov     rax, [rbp+__o1]", "mov     [rax+18h], rdx"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0.0, ["nop", "leave", "retn"], ["nop", "leave", "retn"]]], "func_feature": [3, 2, 6, 0, 10, 13, 2, 96, 0.09583, 2, 7], "succs": [[8, 4], [0, 2], [0], [5, 7], [3], [3], [1, 9], [9], [4], []], "fname": "dired_dump_obstack", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.0625, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 9, 0, 0, 4, 1, 1, 1, 2, 0.3958333333333333, ["mov     rax, [rbp+fmt]", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_40C1"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 4, 2, 0.13194444444444445, ["cmp     eax, 62h ; 'b'", "jnz     short loc_40F0"], ["cmp~eax,0", "jnz~FOO"]], [2, 0, 9, 1, 0, 6, 0, 1, 3, 3, 0.21527777777777776, ["mov     rax, [rbp+fmt]", "add     rax, 1", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "cmp     eax, 25h ; '%'", "jz      short loc_40EA"], ["mov~rax,[rbp+0]", "add~rax,0", "movzx~eax,<TAG>", "movsx~eax,al", "cmp~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 5, 1, 0.034722222222222224, ["mov     rax, [rbp+fmt]", "jmp     short loc_4105"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [1, 0, 9, 0, 0, 4, 0, 1, 2, 4, 0.2638888888888889, ["mov     rax, [rbp+fmt]", "movzx   eax, byte ptr [rax]", "cmp     al, 25h ; '%'", "jnz     short loc_40F0"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [1, 0, 9, 1, 0, 2, 0, 0, 4, 4, 0.027777777777777776, ["add     [rbp+fmt], 1", "nop"], ["add~[rbp+0],0", "nop"]], [1, 0, 9, 1, 0, 1, 0, 0, 3, 3, 0.24305555555555555, ["add     [rbp+fmt], 1"], ["add~[rbp+0],0"]], [0, 0, 9, 0, 0, 4, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+fmt], rdi", "jmp     short loc_40F5"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "jmp~FOO"]]], "func_feature": [0, 1, 6, 0, 10, 13, 1, 28, 0.1375, 0, 3], "succs": [[4], [0, 6], [8, 5], [2, 7], [], [4], [8, 3], [8], [1], [1]], "fname": "first_percent_b", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["nop", "leave", "retn"], ["nop", "leave", "retn"]], [1, 0, 10, 0, 0, 2, 0, 1, 1, 0, 0.5111111111111112, ["cmp     [rbp+i], 0FFh", "jle     short loc_4118"], ["cmp~[rbp+0],0", "jle~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 3, 0, 0.2611111111111111, ["mov     ecx, 1", "jmp     short loc_414A"], ["mov~ecx,0", "jmp~FOO"]], [0, 0, 10, 0, 1, 5, 1, 2, 2, 0, 0.4, ["mov     eax, [rbp+i]", "mov     edi, eax; c", "call    c_isalnum", "test    al, al", "jnz     short loc_413E"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 3, 0, 0.2888888888888889, ["cmp     [rbp+i], 7Eh ; '~'", "jz      short loc_413E"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 4, 0, 0.23333333333333334, ["cmp     [rbp+i], 2Dh ; '-'", "jz      short loc_413E"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 5, 0, 0.16666666666666669, ["cmp     [rbp+i], 2Eh ; '.'", "jz      short loc_413E"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 6, 0, 0.08888888888888889, ["cmp     [rbp+i], 5Fh ; '_'", "jnz     short loc_4145"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 10, 1, 0, 5, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+i], 0", "jmp     short loc_4175"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 10, 1, 0, 12, 1, 0, 4, 0, 0.4, ["mov     eax, [rbp+i]", "movsxd  rdx, eax", "lea     rax, RFC3986", "movzx   eax, byte ptr [rdx+rax]", "mov     edx, ecx", "or      eax, edx", "mov     ecx, eax", "mov     eax, [rbp+i]", "movsxd  rdx, eax", "lea     rax, RFC3986", "mov     [rdx+rax], cl", "add     [rbp+i], 1"], ["mov~eax,[rbp+0]", "movsxd~rdx,eax", "lea~rax,<TAG>", "movzx~eax,<TAG>", "mov~edx,ecx", "or~eax,edx", "mov~ecx,eax", "mov~eax,[rbp+0]", "movsxd~rdx,eax", "lea~rax,<TAG>", "mov~<TAG>,cl", "add~[rbp+0],0"]], [1, 0, 10, 0, 0, 1, 0, 0, 7, 0, 0.03888888888888889, ["mov     ecx, 0"], ["mov~ecx,0"]]], "func_feature": [1, 2, 9, 0, 11, 16, 1, 38, 0.21717, 1, 2], "succs": [[], [0, 3], [9], [2, 4], [2, 5], [2, 6], [2, 7], [2, 10], [1], [1], [9]], "fname": "file_escape_init", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.15151515151515152, ["mov     rbx, [rbp+var_18]", "xor     rbx, fs:28h", "jz      short loc_42C4"], ["mov~rbx,[rbp+0]", "xor~rbx,<TAG>", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, 2, 0.06818181818181818, ["mov     eax, 0", "jmp     loc_42B0"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 5, 2, 0.022727272727272728, ["mov     eax, 0", "jmp     short loc_42B0"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 4, 2, 0.06818181818181818, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 12, 0, 0, 3, 0, 1, 3, 3, 0.12121212121212122, ["mov     rax, [rbp+curr_max_width]", "cmp     rax, [rbp+required_mon_width]", "ja      loc_41A5"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "ja~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 2, 4, 0.32575757575757575, ["cmp     [rbp+i], 0Bh", "jle     loc_41C1"], ["cmp~[rbp+0],0", "jle~FOO"]], [2, 0, 12, 0, 0, 5, 0, 1, 1, 5, 0.12878787878787878, ["mov     rax, [rbp+required_mon_width]", "mov     [rbp+curr_max_width], rax", "mov     [rbp+required_mon_width], 0", "mov     [rbp+i], 0", "jmp     loc_4293"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 1, 12, 1, 0, 9, 1, 0, 0, 6, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 58h", "mov     [rbp+abmon], rdi", "mov     rax, fs:28h", "mov     [rbp+var_18], rax", "xor     eax, eax", "mov     [rbp+required_mon_width], 0Ch"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0"]], [0, 1, 0, 1, 0, 4, 0, 0, 6, 0, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "retn"]], [1, 0, 12, 1, 0, 5, 0, 0, 5, 5, 0.07575757575757576, ["mov     rax, [rbp+width]", "cmp     [rbp+required_mon_width], rax", "cmovnb  rax, [rbp+required_mon_width]", "mov     [rbp+required_mon_width], rax", "add     [rbp+i], 1"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "cmovnb~rax,[rbp+0]", "mov~[rbp+0],rax", "add~[rbp+0],0"]], [4, 1, 12, 3, 3, 35, 2, 3, 4, 3, 0.11363636363636365, ["call    ___ctype_b_loc", "mov     rbx, [rax]", "mov     rax, [rbp+abbr]", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "mov     edi, eax; ch_0", "call    to_uchar", "movzx   eax, al", "add     rax, rax", "add     rax, rbx", "movzx   eax, word ptr [rax]", "movzx   eax, ax", "and     eax, 800h", "test    eax, eax", "setnz   al", "movzx   eax, al", "mov     [rbp+alignment], eax", "mov     eax, [rbp+i]", "cdqe", "shl     rax, 7", "mov     rdx, rax", "mov     rax, [rbp+abmon]", "lea     rsi, [rdx+rax]; dest", "mov     ecx, [rbp+alignment]", "lea     rdx, [rbp+width]", "mov     rax, [rbp+abbr]", "mov     r9d, 0; flags", "mov     r8d, ecx; align", "mov     rcx, rdx; width", "mov     edx, 80h; dest_size", "mov     rdi, rax; src", "call    mbsalign", "mov     [rbp+req], rax", "cmp     [rbp+req], 7Fh", "jbe     short loc_427E"], ["call~FOO", "mov~rbx,<TAG>", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "movsx~eax,al", "mov~edi,eax", "call~FOO", "movzx~eax,al", "add~rax,rax", "add~rax,rbx", "movzx~eax,<TAG>", "movzx~eax,ax", "and~eax,0", "test~eax,eax", "setnz~al", "movzx~eax,al", "mov~[rbp+0],eax", "mov~eax,[rbp+0]", "cdqe~", "shl~rax,0", "mov~rdx,rax", "mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~ecx,[rbp+0]", "lea~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~r9d,0", "mov~r8d,ecx", "mov~rcx,rdx", "mov~edx,<STR>", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jbe~FOO"]], [2, 0, 12, 1, 2, 13, 1, 3, 3, 3, 0.19696969696969696, ["mov     rax, [rbp+curr_max_width]", "mov     [rbp+width], rax", "mov     eax, [rbp+i]", "add     eax, 2000Eh", "mov     edi, eax; item", "call    _nl_langinfo", "mov     [rbp+abbr], rax", "mov     rax, [rbp+abbr]", "mov     esi, 25h ; '%'; c", "mov     rdi, rax; s", "call    _strchr", "test    rax, rax", "jz      short loc_41FC"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~eax,[rbp+0]", "add~eax,0", "mov~edi,eax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [6, 5, 13, 1, 13, 16, 1, 85, 0.0979, 1, 7], "succs": [[8, 12], [0], [0], [0], [3, 6], [11, 4], [5], [6], [], [5], [9, 2], [1, 10], []], "fname": "abmon_init", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 17, 0, 0, 2, 0, 1, 0, 0, 0.09333333333333334, ["cmp     [rbp+nbytes], 7Fh", "jg      short loc_453F"], ["cmp~[rbp+0],0", "jg~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 10, 3, 0.13833333333333334, ["cmp     [rbp+nbytes], 0", "js      short loc_453F"], ["cmp~[rbp+0],0", "js~FOO"]], [1, 0, 17, 1, 0, 1, 0, 0, 12, 6, 0.085, ["add     [rbp+i], 1"], ["add~[rbp+0],0"]], [1, 0, 17, 0, 0, 2, 0, 1, 7, 5, 0.2733333333333334, ["cmp     [rbp+i], 0Bh", "jle     loc_43AD"], ["cmp~[rbp+0],0", "jle~FOO"]], [1, 0, 17, 0, 0, 8, 0, 1, 6, 6, 0.16333333333333333, ["mov     eax, [rbp+recent_0]", "cdqe", "lea     rdx, ds:0[rax*8]", "lea     rax, long_time_format", "mov     rax, [rdx+rax]", "mov     [rbp+fmt], rax", "mov     [rbp+i], 0", "jmp     loc_450C"], ["mov~eax,[rbp+0]", "cdqe~", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 17, 1, 0, 1, 0, 0, 8, 4, 0.050833333333333335, ["add     [rbp+recent_0], 1"], ["add~[rbp+0],0"]], [1, 0, 25, 1, 1, 12, 0, 1, 2, 6, 0.0, ["mov     eax, [rbp+recent]", "cdqe", "lea     rdx, ds:0[rax*8]", "lea     rax, long_time_format", "mov     rax, [rdx+rax]", "mov     rdi, rax; fmt", "call    first_percent_b", "mov     rdx, rax", "mov     eax, [rbp+recent]", "cdqe", "mov     [rbp+rax*8+pb], rdx", "add     [rbp+recent], 1"], ["mov~eax,[rbp+0]", "cdqe~", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "cdqe~", "mov~[rbp+0],rdx", "add~[rbp+0],0"]], [1, 0, 25, 0, 0, 2, 0, 1, 1, 5, 0.07833333333333334, ["cmp     [rbp+recent], 1", "jle     short loc_42F1"], ["cmp~[rbp+0],0", "jle~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 5, 3, 0.21750000000000003, ["cmp     [rbp+recent_0], 1", "jle     loc_437C"], ["cmp~[rbp+0],0", "jle~FOO"]], [1, 1, 17, 0, 1, 10, 0, 2, 9, 4, 0.095, ["mov     rdx, [rbp+fmt]", "mov     rax, [rbp+nfmt]", "mov     rcx, rdx", "lea     rdx, aS_3; \"%s\"", "mov     esi, 80h; maxlen", "mov     rdi, rax; s", "mov     eax, 0", "call    _snprintf", "mov     [rbp+nbytes], eax", "jmp     loc_44F3"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rcx,rdx", "lea~rdx,<TAG>", "mov~esi,<STR>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [2, 0, 17, 6, 0, 19, 1, 1, 8, 4, 0.1925, ["mov     eax, [rbp+i]", "movsxd  rcx, eax", "mov     eax, [rbp+recent_0]", "movsxd  rdx, eax", "mov     rax, rdx", "add     rax, rax", "add     rax, rdx", "shl     rax, 2", "add     rax, rcx", "shl     rax, 7", "mov     rdx, rax", "lea     rax, abformat", "add     rax, rdx", "mov     [rbp+nfmt], rax", "mov     eax, [rbp+recent_0]", "cdqe", "mov     rax, [rbp+rax*8+pb]", "test    rax, rax", "jnz     short loc_4431"], ["mov~eax,[rbp+0]", "movsxd~rcx,eax", "mov~eax,[rbp+0]", "movsxd~rdx,eax", "mov~rax,rdx", "add~rax,rax", "add~rax,rdx", "shl~rax,0", "add~rax,rcx", "shl~rax,0", "mov~rdx,rax", "lea~rax,<TAG>", "add~rax,rdx", "mov~[rbp+0],rax", "mov~eax,[rbp+0]", "cdqe~", "mov~rax,[rbp+0]", "test~rax,rax", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, 2, 0.022500000000000003, ["mov     cs:use_abformat, 1", "jmp     short loc_4540"], ["mov~<TAG>,0", "jmp~FOO"]], [2, 0, 25, 1, 0, 8, 1, 1, 0, 6, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 650h", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     [rbp+recent], 0", "jmp     short loc_432E"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 4, 2, 0.015000000000000001, ["nop", "jmp     short loc_4540"], ["nop", "jmp~FOO"]], [0, 0, 21, 0, 0, 3, 1, 1, 3, 3, 0.016666666666666666, ["mov     rax, [rbp+pb+8]", "test    rax, rax", "jz      loc_4536"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 4, 2, 0.015000000000000001, ["nop", "jmp     short loc_4540"], ["nop", "jmp~FOO"]], [1, 0, 19, 0, 1, 6, 2, 2, 3, 3, 0.14333333333333334, ["lea     rax, [rbp+abmon]", "mov     rdi, rax; abmon", "call    abmon_init", "xor     eax, 1", "test    al, al", "jnz     loc_4539"], ["lea~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "xor~eax,0", "test~al,al", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 10, 2, 0.0175, ["nop", "jmp     short loc_4540"], ["nop", "jmp~FOO"]], [0, 1, 17, 1, 0, 9, 0, 1, 9, 3, 0.0675, ["mov     eax, [rbp+recent_0]", "cdqe", "mov     rax, [rbp+rax*8+pb]", "mov     rdx, rax", "mov     rax, [rbp+fmt]", "sub     rdx, rax", "mov     rax, rdx", "cmp     rax, 80h", "jg      loc_453C"], ["mov~eax,[rbp+0]", "cdqe~", "mov~rax,[rbp+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "cmp~rax,<STR>", "jg~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 11, 2, 0.02, ["nop"], ["nop"]], [0, 0, 22, 0, 0, 3, 1, 1, 2, 4, 0.11, ["mov     rax, [rbp+pb]", "test    rax, rax", "jnz     short loc_4353"], ["mov~rax,[rbp+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 5, 1, 0.07666666666666667, ["mov     rax, [rbp+var_8]", "xor     rax, fs:28h", "jz      short locret_4554"], ["mov~rax,[rbp+0]", "xor~rax,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 6, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [4, 1, 17, 4, 1, 32, 0, 1, 10, 4, 0.018333333333333333, ["mov     eax, [rbp+recent_0]", "cdqe", "mov     rax, [rbp+rax*8+pb]", "mov     rdx, rax", "mov     rax, [rbp+fmt]", "sub     rdx, rax", "mov     rax, rdx", "mov     [rbp+prefix_len], eax", "mov     eax, [rbp+recent_0]", "cdqe", "mov     rax, [rbp+rax*8+pb]", "lea     rsi, [rax+2]", "lea     rax, [rbp+abmon]", "mov     edx, [rbp+i]", "movsxd  rdx, edx", "shl     rdx, 7", "lea     rdi, [rax+rdx]", "mov     rcx, [rbp+fmt]", "mov     edx, [rbp+prefix_len]", "mov     rax, [rbp+nfmt]", "sub     rsp, 8", "push    rsi", "mov     r9, rdi", "mov     r8, rcx", "mov     ecx, edx", "lea     rdx, aSSS; \"%.*s%s%s\"", "mov     esi, 80h; maxlen", "mov     rdi, rax; s", "mov     eax, 0", "call    _snprintf", "add     rsp, 10h", "mov     [rbp+nbytes], eax"], ["mov~eax,[rbp+0]", "cdqe~", "mov~rax,[rbp+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "mov~[rbp+0],eax", "mov~eax,[rbp+0]", "cdqe~", "mov~rax,[rbp+0]", "lea~rsi,[rax+0]", "lea~rax,[rbp+0]", "mov~edx,[rbp+0]", "movsxd~rdx,edx", "shl~rdx,0", "lea~rdi,<TAG>", "mov~rcx,[rbp+0]", "mov~edx,[rbp+0]", "mov~rax,[rbp+0]", "sub~rsp,0", "push~rsi", "mov~r9,rdi", "mov~r8,rcx", "mov~ecx,edx", "lea~rdx,<TAG>", "mov~esi,<STR>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "add~rsp,0", "mov~[rbp+0],eax"]], [1, 0, 17, 0, 0, 2, 0, 1, 4, 4, 0.14, ["mov     [rbp+recent_0], 0", "jmp     loc_4520"], ["mov~[rbp+0],0", "jmp~FOO"]]], "func_feature": [5, 7, 24, 1, 26, 35, 1, 139, 0.07885, 6, 15], "succs": [[2, 19], [0, 19], [3], [10, 5], [3], [8], [7], [20, 6], [11, 4], [1], [9, 18], [21], [7], [21], [16, 13], [21], [25, 15], [21], [24, 17], [21], [16, 14], [22, 23], [], [], [1], [8]], "fname": "abformat_init", "n_num": 26}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 0, 13, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+x], rdi", "mov     [rbp+table_size], rsi", "mov     rax, [rbp+x]", "mov     [rbp+p], rax", "mov     rax, [rbp+p]", "mov     rax, [rax]", "mov     edx, 0", "div     [rbp+table_size]", "mov     rax, rdx", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~edx,0", "div~,[rbp+0]", "mov~rax,rdx", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 13, 0.0, 0, 1], "succs": [[]], "fname": "dev_ino_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.041666666666666664, ["mov     eax, 1", "jmp     short loc_45CF"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 6, 0, 1, 1, 2, 0.08333333333333333, ["mov     rax, [rbp+a]", "mov     rdx, [rax+8]", "mov     rax, [rbp+b]", "mov     rax, [rax+8]", "cmp     rdx, rax", "jnz     short loc_45CA"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~rdx,rax", "jnz~FOO"]], [0, 0, 4, 0, 0, 14, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+x], rdi", "mov     [rbp+y], rsi", "mov     rax, [rbp+x]", "mov     [rbp+a], rax", "mov     rax, [rbp+y]", "mov     [rbp+b], rax", "mov     rax, [rbp+a]", "mov     rdx, [rax]", "mov     rax, [rbp+b]", "mov     rax, [rax]", "cmp     rdx, rax", "jnz     short loc_45CA"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "cmp~rdx,rax", "jnz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0.125, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 0, 0, 0, 3, 1, 0, 2, 0, 0.0, ["and     eax, 1", "pop     rbp", "retn"], ["and~eax,0", "pop~rbp", "retn"]]], "func_feature": [0, 1, 3, 0, 5, 6, 0, 26, 0.05, 0, 0], "succs": [[4], [0, 3], [1, 3], [4], []], "fname": "dev_ino_compare", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 1, 10, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+x], rdi", "mov     rax, [rbp+x]", "mov     rdi, rax; ptr", "call    free", "nop", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "nop", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 10, 0.0, 0, 1], "succs": [[]], "fname": "dev_ino_free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["movzx   eax, [rbp+found_match]", "leave", "retn"], ["movzx~eax,[rbp+0]", "leave", "retn"]], [1, 0, 2, 0, 0, 6, 0, 1, 1, 0, 0.16666666666666666, ["mov     rax, [rbp+ent_from_table]", "cmp     rax, [rbp+ent]", "setnz   al", "mov     [rbp+found_match], al", "cmp     [rbp+found_match], 0", "jz      short loc_466A"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "setnz~al", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 1, 0, 1, 3, 0, 1, 2, 0, 0.0, ["mov     rax, [rbp+ent]", "mov     rdi, rax; ptr", "call    free"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO"]], [3, 0, 4, 1, 2, 22, 0, 3, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+dev], rdi", "mov     [rbp+ino], rsi", "mov     edi, 10h; n", "call    xmalloc", "mov     [rbp+ent], rax", "mov     rax, [rbp+ent]", "mov     rdx, [rbp+ino]", "mov     [rax], rdx", "mov     rax, [rbp+ent]", "mov     rdx, [rbp+dev]", "mov     [rax+8], rdx", "mov     rax, cs:active_dir_set", "mov     rdx, [rbp+ent]", "mov     rsi, rdx; entry", "mov     rdi, rax; table", "call    hash_insert", "mov     [rbp+ent_from_table], rax", "cmp     [rbp+ent_from_table], 0", "jnz     short loc_464A"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~edi,0", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,<TAG>", "mov~rdx,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [4, 0, 6, 0, 5, 5, 1, 35, 0.03333, 1, 1], "succs": [[], [0, 2], [0], [1, 4], []], "fname": "visit_dir", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 3, 18, 0, 3, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+p], rdi", "mov     rax, [rbp+p]", "mov     rax, [rax]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+p]", "mov     rax, [rax+8]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+p]", "mov     rdi, rax; ptr", "call    free", "nop", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "nop", "leave", "retn"]]], "func_feature": [3, 0, 3, 0, 1, 0, 2, 18, 0.0, 0, 1], "succs": [[]], "fname": "free_pending_ent", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0.0, ["and     eax, 1", "leave", "retn"], ["and~eax,0", "leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 0, 0.047619047619047616, ["mov     eax, 1", "jmp     short loc_4740"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0.07142857142857142, ["mov     eax, 0"], ["mov~eax,0"]], [3, 1, 7, 3, 0, 18, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+type], edi", "mov     eax, [rbp+type]", "shl     rax, 4", "mov     rdx, rax", "lea     rax, color_indicator", "mov     rax, [rdx+rax]", "mov     [rbp+len], rax", "mov     eax, [rbp+type]", "shl     rax, 4", "mov     rdx, rax", "lea     rax, s1", "mov     rax, [rdx+rax]", "mov     [rbp+s], rax", "cmp     [rbp+len], 0", "jz      short loc_473B"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "shl~rax,0", "mov~rdx,rax", "lea~rax,<TAG>", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~eax,[rbp+0]", "shl~rax,0", "mov~rdx,rax", "lea~rax,<TAG>", "mov~rax,<TAG>", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 5, 1, 0, 9, 1, 1, 2, 0, 0.03571428571428571, ["mov     rax, [rbp+s]", "movzx   edx, byte ptr [rax]", "movzx   eax, cs:byte_1C87D", "movzx   edx, dl", "movzx   eax, al", "sub     edx, eax", "mov     eax, edx", "test    eax, eax", "jz      short loc_473B"], ["mov~rax,[rbp+0]", "movzx~edx,<TAG>", "movzx~eax,<TAG>", "movzx~edx,dl", "movzx~eax,al", "sub~edx,eax", "mov~eax,edx", "test~eax,eax", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 1, 0, 0.09523809523809523, ["cmp     [rbp+len], 1", "jnz     short loc_4711"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 3, 0, 1, 7, 1, 2, 3, 0, 0.023809523809523808, ["mov     rax, [rbp+s]", "mov     edx, 2; n", "lea     rsi, a00; \"00\"", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jz      short loc_473B"], ["mov~rax,[rbp+0]", "mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 2, 0, 0.15476190476190477, ["cmp     [rbp+len], 2", "jnz     short loc_4734"], ["cmp~[rbp+0],0", "jnz~FOO"]]], "func_feature": [1, 3, 7, 0, 8, 12, 24, 44, 0.05357, 4, 4], "succs": [[], [0], [0], [2, 5], [2, 7], [4, 7], [1, 2], [1, 6]], "fname": "is_colored", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 2, 9, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "lea     rdi, color_indicator; ind", "call    put_indicator", "lea     rdi, ind; ind", "call    put_indicator", "nop", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "nop", "pop~rbp", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 3, 9, 0.0, 2, 0], "succs": [[]], "fname": "restore_default_color", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 3, 6, 0, 3, 0, 0, 0.0, ["lea     rdi, color_indicator; ind", "call    put_indicator", "lea     rdi, stru_2260C0; ind", "call    put_indicator", "lea     rdi, ind; ind", "call    put_indicator"], ["lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO"]], [1, 0, 2, 0, 1, 4, 1, 2, 1, 1, 0.16666666666666666, ["mov     edi, 4; type", "call    is_colored", "test    al, al", "jz      short loc_47A5"], ["mov~edi,0", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 3, 0, 0, 5, 1, 1, 0, 1, 0.0, ["push    rbp", "mov     rbp, rsp", "movzx   eax, cs:print_with_color", "test    al, al", "jz      short loc_47A5"], ["push~rbp", "mov~rbp,rsp", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0.0, ["nop", "pop     rbp", "retn"], ["nop", "pop~rbp", "retn"]]], "func_feature": [4, 2, 6, 0, 4, 5, 2, 18, 0.04167, 4, 0], "succs": [[3], [0, 3], [1, 3], []], "fname": "set_normal_color", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["nop", "pop     rbp", "retn"], ["nop", "pop~rbp", "retn"]], [0, 0, 2, 0, 0, 6, 1, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+sig], edi", "mov     eax, cs:interrupt_signal", "test    eax, eax", "jnz     short loc_47C2"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, [rbp+sig]", "mov     cs:interrupt_signal, eax"], ["mov~eax,[rbp+0]", "mov~<TAG>,eax"]]], "func_feature": [0, 1, 1, 0, 3, 3, 0, 11, 0.0, 1, 0], "succs": [[], [0, 2], [0]], "fname": "sighandler", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["nop", "pop     rbp", "retn"], ["nop", "pop~rbp", "retn"]], [0, 0, 2, 0, 0, 6, 1, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+sig], edi", "mov     eax, cs:interrupt_signal", "test    eax, eax", "jnz     short loc_47E5"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [1, 0, 1, 1, 0, 3, 0, 0, 1, 0, 0.0, ["mov     eax, cs:stop_signal_count", "add     eax, 1", "mov     cs:stop_signal_count, eax"], ["mov~eax,<TAG>", "add~eax,0", "mov~<TAG>,eax"]]], "func_feature": [0, 1, 1, 0, 3, 3, 0, 12, 0.0, 2, 1], "succs": [[], [0, 2], [0]], "fname": "stophandler", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 11, 0, 2, 14, 0, 3, 0, 0, 0.2818181818181818, ["mov     rax, cs:stdout@@GLIBC_2_2_5", "mov     rdi, rax; stream", "call    _fflush_unlocked", "lea     rax, [rbp+oldset]", "mov     rdx, rax; oset", "lea     rsi, caught_signals; set", "mov     edi, 0; how", "call    _sigprocmask", "mov     eax, cs:interrupt_signal", "mov     [rbp+sig], eax", "mov     eax, cs:stop_signal_count", "mov     [rbp+stops], eax", "cmp     [rbp+stops], 0", "jz      short loc_487D"], ["mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "lea~rax,[rbp+0]", "mov~rdx,rax", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~eax,<TAG>", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 11, 0, 0, 3, 1, 1, 2, 7, 0.24545454545454545, ["movzx   eax, cs:used_color", "test    al, al", "jz      short loc_4817"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 11, 0, 1, 1, 0, 1, 3, 7, 0.0, ["call    restore_default_color"], ["call~FOO"]], [2, 0, 11, 0, 2, 8, 0, 2, 5, 4, 0.33636363636363636, ["mov     eax, [rbp+sig]", "mov     edi, eax; sig", "call    _raise", "lea     rax, [rbp+oldset]", "mov     edx, 0; oset", "mov     rsi, rax; set", "mov     edi, 2; how", "call    _sigprocmask"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "lea~rax,[rbp+0]", "mov~edx,0", "mov~rsi,rax", "mov~edi,0", "call~FOO"]], [2, 0, 11, 1, 0, 5, 0, 1, 4, 5, 0.11363636363636363, ["mov     eax, [rbp+stops]", "sub     eax, 1", "mov     cs:stop_signal_count, eax", "mov     [rbp+sig], 13h", "jmp     short loc_488F"], ["mov~eax,[rbp+0]", "sub~eax,0", "mov~<TAG>,eax", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 11, 0, 1, 4, 0, 1, 4, 5, 0.11363636363636363, ["mov     eax, [rbp+sig]", "mov     esi, 0; handler", "mov     edi, eax; sig", "call    _signal"], ["mov~eax,[rbp+0]", "mov~esi,0", "mov~edi,eax", "call~FOO"]], [1, 0, 11, 1, 0, 7, 1, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 0A0h", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "jmp     loc_48B5"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, 1, 0.16363636363636364, ["nop", "mov     rax, [rbp+var_8]", "xor     rax, fs:28h", "jz      short locret_48E6"], ["nop", "mov~rax,[rbp+0]", "xor~rax,<TAG>", "jz~FOO"]], [0, 0, 11, 0, 0, 3, 1, 1, 2, 2, 0.21818181818181817, ["mov     eax, cs:stop_signal_count", "test    eax, eax", "jnz     loc_4807"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [0, 0, 11, 0, 0, 3, 1, 1, 1, 3, 0.45454545454545453, ["mov     eax, cs:interrupt_signal", "test    eax, eax", "jnz     loc_4807"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [7, 5, 14, 1, 12, 15, 2, 55, 0.16061, 6, 2], "succs": [[4, 5], [0, 2], [0], [10], [3], [3], [10], [], [11, 7], [8, 1], [9, 1], []], "fname": "process_signals", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 11, 1, 0, 1, 0, 0, 0, 0, 0.07792207792207792, ["add     [rbp+j], 1"], ["add~[rbp+0],0"]], [0, 0, 11, 0, 1, 10, 1, 2, 5, 5, 0.11038961038961038, ["mov     eax, [rbp+j]", "cdqe", "lea     rdx, ds:0[rax*4]", "lea     rax, sig_8691", "mov     eax, [rdx+rax]", "mov     esi, eax; signo", "lea     rdi, caught_signals; set", "call    _sigismember", "test    eax, eax", "jz      short loc_4B02"], ["mov~eax,[rbp+0]", "cdqe~", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "mov~esi,eax", "lea~rdi,<TAG>", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 11, 0, 1, 11, 0, 1, 8, 5, 0.05411255411255411, ["mov     qword ptr [rbp+act.__sigaction_handler], rax", "mov     eax, [rbp+j]", "cdqe", "lea     rdx, ds:0[rax*4]", "lea     rax, sig_8691", "mov     eax, [rdx+rax]", "lea     rcx, [rbp+act]", "mov     edx, 0; oact", "mov     rsi, rcx; act", "mov     edi, eax; sig", "call    _sigaction"], ["mov~[word ptr [rbp+0],rax", "mov~eax,[rbp+0]", "cdqe~", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "lea~rcx,[rbp+0]", "mov~edx,0", "mov~rsi,rcx", "mov~edi,eax", "call~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 2, 2, 0.05194805194805195, ["cmp     [rbp+j], 0Bh", "jle     short loc_4B24"], ["cmp~[rbp+0],0", "jle~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 1, 3, 0.015151515151515152, ["mov     [rbp+j], 0", "jmp     short loc_4B7D"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 7, 1, 0, 1, 0, 0, 4, 3, 0.01948051948051948, ["add     [rbp+j], 1"], ["add~[rbp+0],0"]], [0, 0, 3, 0, 0, 1, 0, 1, 5, 2, 0.08441558441558442, ["jmp     short loc_4B86"], ["jmp~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 4, 3, 0.23160173160173161, ["cmp     [rbp+j], 0Bh", "jle     loc_4A70"], ["cmp~[rbp+0],0", "jle~FOO"]], [0, 0, 16, 0, 1, 8, 0, 1, 4, 7, 0.0, ["mov     eax, [rbp+j]", "cdqe", "lea     rdx, ds:0[rax*4]", "lea     rax, sig_8691", "mov     eax, [rdx+rax]", "mov     esi, eax; signo", "lea     rdi, caught_signals; set", "call    _sigaddset"], ["mov~eax,[rbp+0]", "cdqe~", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "mov~esi,eax", "lea~rdi,<TAG>", "call~FOO"]], [2, 0, 16, 0, 1, 12, 0, 2, 3, 7, 0.015151515151515152, ["mov     eax, [rbp+j]", "cdqe", "lea     rdx, ds:0[rax*4]", "lea     rax, sig_8691", "mov     eax, [rdx+rax]", "lea     rdx, [rbp+act]; oact", "mov     esi, 0; act", "mov     edi, eax; sig", "call    _sigaction", "mov     rax, qword ptr [rbp+act.__sigaction_handler]", "cmp     rax, 1", "jz      short loc_4991"], ["mov~eax,[rbp+0]", "cdqe~", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "lea~rdx,[rbp+0]", "mov~esi,0", "mov~edi,eax", "call~FOO", "mov~rax,[word ptr [rbp+0]", "cmp~rax,0", "jz~FOO"]], [2, 0, 11, 0, 0, 35, 0, 1, 3, 4, 0.13636363636363635, ["mov     rax, cs:caught_signals.__val", "mov     rdx, cs:caught_signals.__val+8", "mov     [rbp+act.sa_mask.__val], rax", "mov     [rbp+act.sa_mask.__val+8], rdx", "mov     rax, cs:caught_signals.__val+10h", "mov     rdx, cs:caught_signals.__val+18h", "mov     [rbp+act.sa_mask.__val+10h], rax", "mov     [rbp+act.sa_mask.__val+18h], rdx", "mov     rax, cs:caught_signals.__val+20h", "mov     rdx, cs:caught_signals.__val+28h", "mov     [rbp+act.sa_mask.__val+20h], rax", "mov     [rbp+act.sa_mask.__val+28h], rdx", "mov     rax, cs:caught_signals.__val+30h", "mov     rdx, cs:caught_signals.__val+38h", "mov     [rbp+act.sa_mask.__val+30h], rax", "mov     [rbp+act.sa_mask.__val+38h], rdx", "mov     rax, cs:caught_signals.__val+40h", "mov     rdx, cs:caught_signals.__val+48h", "mov     [rbp+act.sa_mask.__val+40h], rax", "mov     [rbp+act.sa_mask.__val+48h], rdx", "mov     rax, cs:caught_signals.__val+50h", "mov     rdx, cs:caught_signals.__val+58h", "mov     [rbp+act.sa_mask.__val+50h], rax", "mov     [rbp+act.sa_mask.__val+58h], rdx", "mov     rax, cs:caught_signals.__val+60h", "mov     rdx, cs:caught_signals.__val+68h", "mov     [rbp+act.sa_mask.__val+60h], rax", "mov     [rbp+act.sa_mask.__val+68h], rdx", "mov     rax, cs:caught_signals.__val+70h", "mov     rdx, cs:caught_signals.__val+78h", "mov     [rbp+act.sa_mask.__val+70h], rax", "mov     [rbp+act.sa_mask.__val+78h], rdx", "mov     [rbp+act.sa_flags], 10000000h", "mov     [rbp+j], 0", "jmp     loc_4B09"], ["mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[rbp+0],rax", "mov~[rbp+0],rdx", "mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 22, 1, 0, 10, 1, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 0C0h", "mov     eax, edi", "mov     [rbp+init], al", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "cmp     [rbp+init], 0", "jz      loc_4B18"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~eax,edi", "mov~[rbp+0],al", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, 1, 0.08658008658008658, ["nop", "mov     rax, [rbp+var_8]", "xor     rax, fs:28h", "jz      short locret_4B9B"], ["nop", "mov~rax,[rbp+0]", "xor~rax,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 16, 0, 0, 2, 0, 1, 2, 5, 0.14285714285714285, ["cmp     [rbp+j], 0Bh", "jle     short loc_492F"], ["cmp~[rbp+0],0", "jle~FOO"]], [1, 0, 16, 0, 1, 4, 0, 2, 1, 6, 0.02813852813852814, ["lea     rdi, caught_signals; set", "call    _sigemptyset", "mov     [rbp+j], 0", "jmp     short loc_4998"], ["lea~rdi,<TAG>", "call~FOO", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 16, 1, 0, 1, 0, 0, 4, 6, 0.05844155844155844, ["add     [rbp+j], 1"], ["add~[rbp+0],0"]], [1, 0, 11, 0, 0, 7, 0, 1, 6, 7, 0.0735930735930736, ["mov     eax, [rbp+j]", "cdqe", "lea     rdx, ds:0[rax*4]", "lea     rax, sig_8691", "mov     eax, [rdx+rax]", "cmp     eax, 14h", "jnz     short loc_4AC4"], ["mov~eax,[rbp+0]", "cdqe~", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 7, 6, 0.01948051948051948, ["lea     rax, stophandler", "jmp     short loc_4ACB"], ["lea~rax,<TAG>", "jmp~FOO"]], [0, 0, 11, 0, 0, 1, 0, 0, 7, 6, 0.01948051948051948, ["lea     rax, sighandler"], ["lea~rax,<TAG>"]], [0, 0, 7, 0, 1, 10, 1, 2, 3, 4, 0.015151515151515152, ["mov     eax, [rbp+j]", "cdqe", "lea     rdx, ds:0[rax*4]", "lea     rax, sig_8691", "mov     eax, [rdx+rax]", "mov     esi, eax; signo", "lea     rdi, caught_signals; set", "call    _sigismember", "test    eax, eax", "jz      short loc_4B76"], ["mov~eax,[rbp+0]", "cdqe~", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "mov~esi,eax", "lea~rdi,<TAG>", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 7, 0, 1, 8, 0, 1, 4, 4, 0.0, ["mov     eax, [rbp+j]", "cdqe", "lea     rdx, ds:0[rax*4]", "lea     rax, sig_8691", "mov     eax, [rdx+rax]", "mov     esi, 0; handler", "mov     edi, eax; sig", "call    _signal"], ["mov~eax,[rbp+0]", "cdqe~", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "mov~esi,0", "mov~edi,eax", "call~FOO"]]], "func_feature": [8, 4, 22, 1, 23, 30, 2, 137, 0.05392, 20, 4], "succs": [[7], [0, 18], [0], [12, 21], [3], [3], [12], [1, 6], [17], [8, 17], [7], [16, 4], [13, 14], [], [], [9, 10], [15], [15], [19, 20], [2], [2], [5, 22], [5]], "fname": "signal_setup", "n_num": 23}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 0, 1, 7, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     edi, 1; init", "call    signal_setup", "nop", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~edi,0", "call~FOO", "nop", "pop~rbp", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 7, 0.0, 0, 0], "succs": [[]], "fname": "signal_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 0, 1, 7, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     edi, 0; init", "call    signal_setup", "nop", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~edi,0", "call~FOO", "nop", "pop~rbp", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 7, 0.0, 0, 0], "succs": [[]], "fname": "signal_restore", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 28, 0, 2, 7, 0, 3, 0, 0, 0.0036732295033793712, ["mov     rax, [rbp+found]", "mov     rdi, rax; x", "call    dev_ino_free", "mov     rax, [rbp+thispend]", "mov     rdi, rax; p", "call    free_pending_ent", "jmp     short loc_513A"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 28, 0, 2, 11, 0, 3, 19, 7, 0.017484572436085807, ["call    dev_ino_pop", "mov     [rbp+di_0.st_ino], rax", "mov     [rbp+di_0.st_dev], rdx", "mov     rax, cs:active_dir_set", "lea     rdx, [rbp+di_0]", "mov     rsi, rdx; entry", "mov     rdi, rax; table", "call    hash_delete", "mov     [rbp+found], rax", "cmp     [rbp+found], 0", "jnz     short loc_50E8"], ["call~FOO", "mov~[rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,<TAG>", "lea~rdx,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 30, 0, 0, 3, 1, 1, 16, 6, 0.014692918013517485, ["mov     rax, cs:pending_dirs", "test    rax, rax", "jz      loc_513A"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 31, 0, 0, 2, 0, 1, 15, 6, 0.12239200705260066, ["cmp     [rbp+n_files], 1", "jg      loc_513A"], ["cmp~[rbp+0],0", "jg~FOO"]], [0, 0, 29, 0, 1, 4, 1, 2, 15, 6, 0.10799294739935351, ["call    print_current_files", "mov     rax, cs:pending_dirs", "test    rax, rax", "jz      loc_513A"], ["call~FOO", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 34, 0, 0, 3, 1, 1, 14, 7, 0.23978842198060538, ["mov     rax, cs:cwd_n_used", "test    rax, rax", "jz      short loc_502C"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 20, 0, 0, 3, 1, 1, 17, 4, 0.17925359976491334, ["movzx   eax, cs:print_with_color", "test    al, al", "jz      loc_5200"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 28, 0, 0, 3, 1, 1, 16, 5, 0.2356744049368205, ["mov     rax, cs:pending_dirs", "test    rax, rax", "jnz     loc_5066"], ["mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [1, 0, 28, 0, 2, 14, 0, 2, 18, 6, 0.006611813106082868, ["mov     rax, [rbp+thispend]", "movzx   eax, byte ptr [rax+10h]", "movzx   edx, al; command_line_arg", "mov     rax, [rbp+thispend]", "mov     rcx, [rax+8]", "mov     rax, [rbp+thispend]", "mov     rax, [rax]", "mov     rsi, rcx; realname", "mov     rdi, rax; name", "call    print_dir", "mov     rax, [rbp+thispend]", "mov     rdi, rax; p", "call    free_pending_ent", "mov     cs:print_dir_name, 1"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "movzx~edx,al", "mov~rax,[rbp+0]", "mov~rcx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~<TAG>,0"]], [0, 0, 28, 0, 0, 8, 1, 1, 17, 7, 0.04260946223920071, ["mov     rax, cs:pending_dirs", "mov     [rbp+thispend], rax", "mov     rax, cs:pending_dirs", "mov     rax, [rax+18h]", "mov     cs:pending_dirs, rax", "mov     rax, cs:active_dir_set", "test    rax, rax", "jz      short loc_5102"], ["mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,<TAG>", "mov~rax,[rax+0]", "mov~<TAG>,rax", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 28, 0, 0, 4, 1, 1, 18, 7, 0.025859535703790775, ["mov     rax, [rbp+thispend]", "mov     rax, [rax]", "test    rax, rax", "jnz     short loc_5102"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [7, 1, 83, 1, 7, 40, 2, 8, 0, 21, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+argc], edi", "mov     [rbp+argv], rsi", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     rax, [rbp+argv]", "mov     rax, [rax]", "mov     rdi, rax; argv0", "call    set_program_name", "lea     rsi, suffixes; locale", "mov     edi, 6; category", "call    _setlocale", "lea     rsi, dirname; \"/usr/local/share/locale\"", "lea     rdi, domainname; \"coreutils\"", "call    _bindtextdomain", "lea     rdi, domainname; \"coreutils\"", "call    _textdomain", "mov     edi, 2; status", "call    initialize_exit_failure", "lea     rax, close_stdout", "mov     rdi, rax", "call    atexit", "mov     cs:exit_status, 0", "mov     cs:print_dir_name, 1", "mov     cs:pending_dirs, 0", "mov     rax, 8000000000000000h", "mov     cs:current_time.tv_sec, rax", "mov     cs:current_time.tv_nsec, 0FFFFFFFFFFFFFFFFh", "mov     rdx, [rbp+argv]", "mov     eax, [rbp+argc]", "mov     rsi, rdx; argv", "mov     edi, eax; argc", "call    decode_switches", "mov     [rbp+i], eax", "movzx   eax, cs:print_with_color", "test    al, al", "jz      short loc_4C91"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "mov~edi,0", "call~FOO", "lea~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~rax,0", "mov~<TAG>,rax", "mov~<TAG>,0", "mov~rdx,[rbp+0]", "mov~eax,[rbp+0]", "mov~rsi,rdx", "mov~edi,eax", "call~FOO", "mov~[rbp+0],eax", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 18, 0, 0, 3, 0, 1, 19, 8, 0.08330884513664415, ["mov     rax, qword ptr cs:color_indicator", "cmp     rax, 2", "jnz     short loc_51AF"], ["mov~rax,<TAG>", "cmp~rax,0", "jnz~FOO"]], [0, 0, 19, 0, 0, 3, 1, 1, 18, 4, 0.09109609168380842, ["movzx   eax, cs:used_color", "test    al, al", "jz      loc_5200"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 82, 0, 1, 1, 0, 1, 1, 21, 0.0, ["call    parse_ls_color"], ["call~FOO"]], [1, 0, 15, 0, 0, 4, 0, 1, 22, 7, 0.001028504260946224, ["mov     rax, cs:ind.string", "movzx   eax, byte ptr [rax]", "cmp     al, 6Dh ; 'm'", "jz      short loc_51B4"], ["mov~rax,<TAG>", "movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [1, 0, 16, 0, 0, 3, 0, 1, 21, 8, 0.009550396708786366, ["mov     rax, cs:ind.len", "cmp     rax, 1", "jnz     short loc_51AF"], ["mov~rax,<TAG>", "cmp~rax,0", "jnz~FOO"]], [1, 0, 17, 0, 1, 7, 1, 2, 20, 8, 0.018806935057302382, ["mov     rax, cs:s1", "mov     edx, 2; n", "lea     rsi, unk_1C878; s2", "mov     rdi, rax; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_51AF"], ["mov~rax,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 19, 2, 0.06611813106082869, ["mov     rax, cs:active_dir_set", "test    rax, rax", "jz      short loc_52B7"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 8, 0, 0, 3, 1, 1, 18, 3, 0.08580664119894212, ["movzx   eax, cs:dired", "test    al, al", "jz      short loc_5269"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 7, 0, 4, 17, 0, 4, 19, 3, 0.0, ["lea     rsi, dired_obstack; os", "lea     rdi, prefix; \"//DIRED//\"", "call    dired_dump_obstack", "lea     rsi, subdired_obstack; os", "lea     rdi, aSubdired; \"//SUBDIRED//\"", "call    dired_dump_obstack", "mov     rax, cs:filename_quoting_options", "mov     rdi, rax; o", "call    get_quoting_style", "mov     eax, eax", "lea     rdx, ds:0[rax*8]", "lea     rax, quoting_style_args", "mov     rax, [rdx+rax]", "mov     rsi, rax", "lea     rdi, aDiredOptionsQu; \"//DIRED-OPTIONS// --quoting-style=%s\\n\"", "mov     eax, 0", "call    _printf"], ["lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~eax,eax", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~rax,<TAG>", "mov~rsi,rax", "lea~rdi,<TAG>", "mov~eax,0", "call~FOO"]], [1, 0, 70, 0, 0, 3, 0, 1, 5, 20, 0.0038201586835145463, ["mov     eax, cs:indicator_style_0", "cmp     eax, 3", "jz      short loc_4D21"], ["mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 71, 0, 0, 3, 1, 1, 4, 20, 0.008815750808110492, ["movzx   eax, cs:immediate_dirs", "test    al, al", "jnz     short loc_4D21"], ["movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [2, 0, 54, 0, 0, 6, 3, 1, 7, 14, 0.2221569203643844, ["and     eax, 1", "mov     cs:format_needs_stat, al", "movzx   eax, cs:format_needs_stat", "xor     eax, 1", "test    al, al", "jz      short loc_4E4A"], ["and~eax,0", "mov~<TAG>,al", "movzx~eax,<TAG>", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 55, 0, 0, 2, 0, 1, 6, 15, 0.20606817513958273, ["mov     eax, 1", "jmp     short loc_4E01"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 55, 0, 0, 1, 0, 0, 10, 15, 0.004040552453717309, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 81, 0, 0, 3, 1, 1, 1, 20, 0.023802527181898327, ["movzx   eax, cs:directories_first", "test    al, al", "jz      short loc_4CA5"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 14, 0, 1, 1, 0, 1, 20, 7, 0.0514252130473112, ["call    restore_default_color"], ["call~FOO"]], [2, 0, 62, 0, 1, 8, 0, 1, 6, 17, 0.009109609168380842, ["mov     rax, cs:freefun", "mov     r8, rax; freefun", "mov     rax, cs:chunkfun", "mov     rcx, rax; chunkfun", "mov     edx, 0; alignment", "mov     esi, 0; size", "lea     rdi, dev_ino_obstack; h", "call    _obstack_begin"], ["mov~rax,<TAG>", "mov~r8,rax", "mov~rax,<TAG>", "mov~rcx,rax", "mov~edx,0", "mov~esi,0", "lea~rdi,<TAG>", "call~FOO"]], [2, 0, 64, 0, 1, 10, 1, 2, 5, 18, 0.005583308845136645, ["lea     r8, dev_ino_free; data_freer", "lea     rcx, dev_ino_compare; comparator", "lea     rdx, dev_ino_hash; hasher", "mov     esi, 0; tuning", "mov     edi, 1Eh; candidate", "call    hash_initialize", "mov     cs:active_dir_set, rax", "mov     rax, cs:active_dir_set", "test    rax, rax", "jnz     short loc_4D7A"], ["lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~<TAG>,rax", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [0, 0, 53, 0, 0, 3, 1, 1, 8, 14, 0.017043784895680283, ["movzx   eax, cs:recursive", "test    al, al", "jnz     short loc_4E43"], ["movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [1, 0, 73, 0, 0, 2, 0, 1, 2, 19, 0.016088745224801648, ["mov     cs:check_symlink_mode, 1", "jmp     short loc_4CF6"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 48, 0, 0, 1, 0, 0, 8, 13, 0.2080517190714076, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 50, 0, 0, 3, 1, 1, 11, 14, 0.0004407875404055246, ["movzx   eax, cs:directories_first", "test    al, al", "jz      short loc_4E4A"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [2, 0, 13, 1, 1, 3, 0, 1, 23, 6, 0.0, ["mov     edi, 13h; sig", "call    _raise", "sub     [rbp+j], 1"], ["mov~edi,0", "call~FOO", "sub~[rbp+0],0"]], [1, 0, 13, 0, 0, 2, 0, 1, 22, 5, 0.03996473699676756, ["cmp     [rbp+j], 0", "jnz     short loc_51D3"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 67, 0, 0, 2, 0, 1, 5, 19, 0.026373787834263886, ["mov     eax, 2", "jmp     short loc_4D2D"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 69, 0, 0, 3, 1, 1, 6, 20, 0.002057008521892448, ["mov     eax, cs:format_0", "test    eax, eax", "jnz     short loc_4D28"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [2, 0, 28, 1, 1, 6, 0, 2, 16, 6, 0.0, ["mov     edi, 0Ah; c", "call    _putchar_unlocked", "mov     rax, cs:dired_pos", "add     rax, 1", "mov     cs:dired_pos, rax", "jmp     loc_513A"], ["mov~edi,0", "call~FOO", "mov~rax,<TAG>", "add~rax,0", "mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 67, 0, 0, 1, 0, 0, 7, 19, 0.0049221275345283574, ["mov     eax, 4"], ["mov~eax,0"]], [0, 0, 52, 0, 0, 3, 1, 1, 9, 14, 0.008962679988245667, ["movzx   eax, cs:print_with_color", "test    al, al", "jnz     short loc_4E43"], ["movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 66, 0, 0, 1, 0, 0, 6, 18, 0.0484866294446077, ["mov     cs:dereference, eax"], ["mov~<TAG>,eax"]], [0, 0, 79, 0, 0, 3, 1, 1, 2, 19, 0.018733470467234795, ["movzx   eax, cs:print_with_color", "test    al, al", "jz      short loc_4CF6"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 44, 0, 2, 6, 1, 3, 11, 11, 0.005583308845136645, ["call    file_escape_init", "call    xgethostname", "mov     cs:hostname, rax", "mov     rax, cs:hostname", "test    rax, rax", "jnz     short loc_4EED"], ["call~FOO", "call~FOO", "mov~<TAG>,rax", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [0, 0, 45, 0, 0, 3, 1, 1, 10, 11, 0.24463708492506614, ["movzx   eax, cs:print_hyperlink", "test    al, al", "jz      short loc_4EED"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [4, 0, 42, 1, 2, 13, 0, 3, 11, 10, 0.24684102262709376, ["mov     cs:cwd_n_alloc, 64h", "mov     rax, cs:cwd_n_alloc", "mov     esi, 0C8h; s", "mov     rdi, rax; n", "call    xnmalloc", "mov     cs:cwd_file, rax", "mov     cs:cwd_n_used, 0", "call    clear_files", "mov     eax, [rbp+argc]", "sub     eax, [rbp+i]", "mov     [rbp+n_files], eax", "cmp     [rbp+n_files], 0", "jg      short loc_4F79"], ["mov~<TAG>,0", "mov~rax,<TAG>", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~<TAG>,rax", "mov~<TAG>,0", "call~FOO", "mov~eax,[rbp+0]", "sub~eax,[rbp+0]", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jg~FOO"]], [0, 0, 43, 0, 0, 2, 0, 0, 12, 11, 0.0, ["lea     rax, suffixes", "mov     cs:hostname, rax"], ["lea~rax,<TAG>", "mov~<TAG>,rax"]], [1, 0, 48, 0, 0, 2, 0, 1, 9, 13, 0.024684102262709375, ["mov     eax, 1", "jmp     short loc_4E4F"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 51, 0, 0, 3, 1, 1, 10, 14, 0.00484866294446077, ["mov     eax, cs:indicator_style_0", "test    eax, eax", "jnz     short loc_4E43"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [4, 0, 46, 0, 2, 16, 0, 2, 10, 12, 0.0, ["mov     rax, cs:freefun", "mov     r8, rax; freefun", "mov     rax, cs:chunkfun", "mov     rcx, rax; chunkfun", "mov     edx, 0; alignment", "mov     esi, 0; size", "lea     rdi, dired_obstack; h", "call    _obstack_begin", "mov     rax, cs:freefun", "mov     r8, rax; freefun", "mov     rax, cs:chunkfun", "mov     rcx, rax; chunkfun", "mov     edx, 0; alignment", "mov     esi, 0; size", "lea     rdi, subdired_obstack; h", "call    _obstack_begin"], ["mov~rax,<TAG>", "mov~r8,rax", "mov~rax,<TAG>", "mov~rcx,rax", "mov~edx,0", "mov~esi,0", "lea~rdi,<TAG>", "call~FOO", "mov~rax,<TAG>", "mov~r8,rax", "mov~rax,<TAG>", "mov~rcx,rax", "mov~edx,0", "mov~esi,0", "lea~rdi,<TAG>", "call~FOO"]], [1, 0, 47, 0, 0, 5, 2, 1, 9, 12, 0.24169850132236265, ["and     eax, 1", "mov     cs:format_needs_type, al", "movzx   eax, cs:dired", "test    al, al", "jz      short loc_4EB7"], ["and~eax,0", "mov~<TAG>,al", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 57, 0, 0, 3, 1, 1, 9, 16, 0.0036732295033793712, ["movzx   eax, cs:print_block_size", "test    al, al", "jz      short loc_4DFC"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 58, 0, 0, 3, 1, 1, 8, 16, 0.007052600646488393, ["movzx   eax, cs:print_scontext", "test    al, al", "jnz     short loc_4DF5"], ["movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 21, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___8718; \"main\"", "mov     edx, 674h; line", "lea     rsi, file; \"src/ls.c\"", "lea     rdi, aHashGetNEntrie; \"hash_get_n_entries (active_dir_set) == \"...", "call    ___assert_fail"], ["lea~rcx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 20, 3, 0.02233323538054658, ["mov     rax, cs:active_dir_set", "mov     rdi, rax; table", "call    hash_get_n_entries", "test    rax, rax", "jz      short loc_52A8"], ["mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 10, 0, 0, 4, 0, 1, 23, 4, 0.021010872759330005, ["mov     eax, cs:interrupt_signal", "mov     [rbp+j], eax", "cmp     [rbp+j], 0", "jz      short loc_5200"], ["mov~eax,<TAG>", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 9, 0, 1, 3, 0, 1, 24, 4, 0.0, ["mov     eax, [rbp+j]", "mov     edi, eax; sig", "call    _raise"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 20, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___8718; \"main\"", "mov     edx, 640h; line", "lea     rsi, file; \"src/ls.c\"", "lea     rdi, aFound; \"found\"", "call    ___assert_fail"], ["lea~rcx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO"]], [3, 0, 39, 1, 1, 17, 0, 2, 12, 9, 0.22891566265060243, ["mov     eax, [rbp+i]", "lea     edx, [rax+1]", "mov     [rbp+i], edx", "cdqe", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+argv]", "add     rax, rdx", "mov     rax, [rax]", "lea     r8, suffixes; dirname", "mov     ecx, 1; command_line_arg", "mov     edx, 0; inode", "mov     esi, 0; type", "mov     rdi, rax; name", "call    gobble_file", "mov     eax, [rbp+i]", "cmp     eax, [rbp+argc]", "jl      short loc_4F79"], ["mov~eax,[rbp+0]", "lea~edx,[rax+0]", "mov~[rbp+0],edx", "cdqe~", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "lea~r8,<TAG>", "mov~ecx,0", "mov~edx,0", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~eax,[rbp+0]", "cmp~eax,[rbp+0]", "jl~FOO"]], [0, 0, 65, 0, 0, 3, 1, 1, 4, 17, 0.17190714075815458, ["movzx   eax, cs:recursive", "test    al, al", "jz      short loc_4DA4"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 72, 0, 0, 3, 0, 1, 3, 18, 0.11636791066705848, ["mov     eax, cs:dereference", "cmp     eax, 1", "jnz     short loc_4D33"], ["mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [0, 0, 40, 0, 0, 3, 1, 1, 12, 10, 0.012048192771084338, ["movzx   eax, cs:immediate_dirs", "test    al, al", "jz      short loc_4F61"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 29, 0, 0, 4, 1, 1, 17, 6, 0.007493388186893918, ["mov     rax, cs:pending_dirs", "mov     rax, [rax+18h]", "test    rax, rax", "jnz     loc_513A"], ["mov~rax,<TAG>", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [1, 0, 28, 0, 0, 2, 0, 1, 18, 6, 0.0, ["mov     cs:print_dir_name, 0", "jmp     loc_513A"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 37, 0, 0, 3, 1, 1, 13, 8, 0.24463708492506614, ["mov     rax, cs:cwd_n_used", "test    rax, rax", "jz      short loc_4FEA"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [3, 0, 38, 0, 1, 7, 0, 2, 13, 9, 0.0027916544225683225, ["lea     r8, suffixes; dirname", "mov     ecx, 1; command_line_arg", "mov     edx, 0; inode", "mov     esi, 3; type", "lea     rdi, asc_1CC36; \".\"", "call    gobble_file", "jmp     short loc_4FBC"], ["lea~r8,<TAG>", "mov~ecx,0", "mov~edx,0", "mov~esi,0", "lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [2, 0, 38, 0, 1, 5, 0, 2, 13, 9, 0.0027916544225683225, ["mov     edx, 1; command_line_arg", "mov     esi, 0; realname", "lea     rdi, asc_1CC36; \".\"", "call    queue_directory", "jmp     short loc_4FBC"], ["mov~edx,0", "mov~esi,0", "lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 61, 0, 2, 8, 0, 3, 5, 16, 0.188216279753159, ["lea     rdi, name; \"TZ\"", "call    _getenv", "mov     rdi, rax; name", "call    tzalloc", "mov     cs:localtz, rax", "mov     eax, cs:sort_type_0", "cmp     eax, 4", "jz      short loc_4DF5"], ["lea~rdi,<TAG>", "call~FOO", "mov~rdi,rax", "call~FOO", "mov~<TAG>,rax", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 77, 0, 1, 4, 1, 2, 4, 20, 0.002203937702027623, ["mov     edi, 0Eh; type", "call    is_colored", "test    al, al", "jz      short loc_4CD7"], ["mov~edi,0", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 78, 0, 1, 4, 1, 2, 3, 20, 0.002938583602703497, ["mov     edi, 0Dh; type", "call    is_colored", "test    al, al", "jnz     short loc_4CEF"], ["mov~edi,0", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 21, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 20, 1, 0.02292095210108728, ["mov     eax, cs:exit_status", "mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_52D1"], ["mov~eax,<TAG>", "mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [0, 0, 13, 0, 2, 7, 0, 3, 21, 6, 0.04657655010285043, ["mov     rax, cs:stdout@@GLIBC_2_2_5", "mov     rdi, rax; stream", "call    _fflush_unlocked", "call    signal_restore", "mov     eax, cs:stop_signal_count", "mov     [rbp+j], eax", "jmp     short loc_51E1"], ["mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 21, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 60, 0, 0, 3, 0, 1, 6, 16, 0.012929767851895388, ["mov     eax, cs:sort_type_0", "cmp     eax, 2", "jz      short loc_4DF5"], ["mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 76, 0, 0, 3, 1, 1, 5, 20, 0.00014692918013517486, ["movzx   eax, cs:color_symlink_as_referent", "test    al, al", "jnz     short loc_4CEF"], ["movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [1, 0, 36, 0, 1, 5, 2, 2, 14, 8, 0.006758742286218044, ["call    sort_files", "movzx   eax, cs:immediate_dirs", "xor     eax, 1", "test    al, al", "jz      short loc_4FEA"], ["call~FOO", "movzx~eax,<TAG>", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 59, 0, 0, 3, 1, 1, 7, 16, 0.010138113429327066, ["mov     eax, cs:format_0", "test    eax, eax", "jz      short loc_4DF5"], ["mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [1, 0, 75, 0, 1, 4, 1, 2, 5, 19, 0.01711724948574787, ["mov     edi, 0Ch; type", "call    is_colored", "test    al, al", "jz      short loc_4CF6"], ["mov~edi,0", "call~FOO", "test~al,al", "jz~FOO"]], [2, 0, 35, 0, 1, 3, 0, 1, 15, 8, 0.0, ["mov     esi, 1; command_line_arg", "mov     edi, 0; dirname", "call    extract_dirs_from_files"], ["mov~esi,0", "mov~edi,0", "call~FOO"]], [0, 0, 3, 0, 1, 3, 0, 1, 21, 2, 0.0004407875404055246, ["mov     rax, cs:active_dir_set", "mov     rdi, rax; table", "call    hash_free"], ["mov~rax,<TAG>", "mov~rdi,rax", "call~FOO"]], [0, 0, 74, 0, 0, 3, 1, 1, 6, 19, 0.00014692918013517486, ["mov     eax, cs:format_0", "test    eax, eax", "jnz     short loc_4CF6"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [1, 0, 73, 0, 0, 1, 0, 0, 4, 19, 0.016088745224801648, ["mov     cs:check_symlink_mode, 1"], ["mov~<TAG>,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [50, 45, 113, 1, 84, 132, 0, 400, 0.05016, 61, 5], "succs": [[7], [0, 57], [62, 7], [2, 7], [38, 7], [3, 4], [19, 13], [9, 6], [7], [8, 10], [8, 1], [26, 14], [17, 27], [19, 12], [26], [72, 27], [27, 15], [16, 27], [54, 71], [18, 20], [18], [36, 37], [36, 21], [32, 30], [23], [23], [42, 31], [72], [67], [83, 28], [40, 47], [60], [50], [32, 47], [35], [34, 55], [41], [36, 39], [7], [41], [48, 47], [59], [60, 69], [45, 46], [43, 45], [58, 61], [45], [50], [33, 47], [44], [49, 44], [24, 25], [24, 51], [], [80, 53], [56, 19], [19], [], [64, 58], [67, 29], [59, 22], [65, 66], [63, 7], [7], [76, 5], [64], [64], [24, 74], [75, 78], [82, 68], [], [73, 70], [35], [], [24, 77], [82, 78], [5, 79], [24, 52], [81, 60], [5], [71], [82, 60], [60], []], "fname": "main", "n_num": 84}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0.05357142857142857, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 4, 0, 0, 1, 0, 1, 2, 3, 0.03571428571428571, ["jmp     short loc_5341"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.21428571428571427, ["mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_535A"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [1, 0, 3, 0, 0, 4, 0, 1, 1, 2, 0.05357142857142857, ["mov     rax, [rbp+val]", "mov     cs:line_length, rax", "mov     eax, 1", "jmp     short loc_5346"], ["mov~rax,[rbp+0]", "mov~<TAG>,rax", "mov~eax,0", "jmp~FOO"]], [2, 1, 8, 1, 1, 17, 2, 2, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+spec], rdi", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "lea     rdx, [rbp+val]", "mov     rax, [rbp+spec]", "lea     r8, suffixes; valid_suffixes", "mov     rcx, rdx; val", "mov     edx, 0; strtol_base", "mov     esi, 0; ptr", "mov     rdi, rax; s", "call    xstrtoumax", "test    eax, eax", "jz      short loc_531D"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "lea~rdx,[rbp+0]", "mov~rax,[rbp+0]", "lea~r8,<TAG>", "mov~rcx,rdx", "mov~edx,0", "mov~esi,0", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 3, 0, 0, 3, 0, 1, 2, 2, 0.05357142857142857, ["mov     cs:line_length, 0FFFFFFFFFFFFFFFFh", "mov     eax, 1", "jmp     short loc_5346"], ["mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 1, 3, 0.05357142857142857, ["cmp     eax, 1", "jz      short loc_532F"], ["cmp~eax,0", "jz~FOO"]]], "func_feature": [2, 3, 8, 1, 9, 10, 2, 34, 0.05159, 3, 1], "succs": [[3], [0], [], [2, 7], [3], [8, 4], [3], [], [1, 6]], "fname": "set_line_length", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 168, 0, 0, 2, 0, 1, 0, 0, 0.034048242120832864, ["cmp     [rbp+i], 1", "jz      short loc_5C1B"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 168, 0, 1, 14, 0, 2, 9, 19, 0.013795653657981568, ["mov     rdx, cs:argmatch_die", "mov     rax, cs:optarg@@GLIBC_2_2_5", "mov     r9, rdx; exit_fn", "mov     r8d, 4; valsize", "lea     rcx, when_types; vallist", "lea     rdx, when_args; arglist", "mov     rsi, rax; arg", "lea     rdi, aColor; \"--color\"", "call    __xargmatch_internal", "lea     rdx, ds:0[rax*4]", "lea     rax, when_types", "mov     eax, [rdx+rax]", "mov     [rbp+i], eax", "jmp     short loc_5BFB"], ["mov~rdx,<TAG>", "mov~rax,<TAG>", "mov~r9,rdx", "mov~r8d,0", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "lea~rdi,<TAG>", "call~FOO", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 168, 0, 0, 1, 0, 0, 9, 19, 0.013795653657981568, ["mov     [rbp+i], 1"], ["mov~[rbp+0],0"]], [0, 0, 60, 0, 0, 3, 1, 1, 10, 11, 0.016640118329730346, ["mov     rax, cs:line_length", "test    rax, rax", "jnz     short loc_600F"], ["mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [1, 0, 61, 0, 0, 3, 0, 1, 9, 10, 0.01979747411537149, ["mov     eax, cs:format_0", "cmp     eax, 1", "jz      short loc_6028"], ["mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 20, 5, 0.006584935715098419, ["mov     rax, [rbp+p0]", "mov     [rbp+p1], rax", "jmp     short loc_6267"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [3, 0, 10, 1, 1, 10, 0, 2, 19, 6, 0.0231397201046763, ["mov     rax, [rbp+style]", "add     rax, 1", "mov     [rbp+p0], rax", "mov     rax, [rbp+p0]", "mov     esi, 0Ah; c", "mov     rdi, rax; s", "call    _strchr", "mov     [rbp+p1], rax", "cmp     [rbp+p1], 0", "jnz     short loc_6209"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 168, 0, 0, 3, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:sort_type_0, 1; jumptable 0000000000005676 case 219", "mov     [rbp+sort_type_specified], 1", "jmp     loc_5EF0"], ["mov~<TAG>,0", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 168, 1, 0, 8, 0, 1, 7, 16, 0.2802366594606895, ["mov     eax, eax", "lea     rdx, ds:0[rax*4]", "lea     rax, off_1CF0C", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_1CF0C", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,eax", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 168, 0, 0, 2, 0, 1, 11, 18, 0.00600182045738992, ["cmp     [rbp+i], 2", "jnz     short loc_5C22"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 59, 0, 0, 3, 1, 1, 11, 10, 0.0007964501080896575, ["mov     eax, cs:format_0", "test    eax, eax", "jnz     short loc_6028"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 9, 11, 0.00856183866196382, ["cmp     [rbp+kibibytes_specified], 0", "jz      short loc_5F6F"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 66, 0, 1, 4, 1, 2, 8, 12, 0.00402491751052452, ["lea     rdi, aBlockSize; \"BLOCK_SIZE\"", "call    _getenv", "test    rax, rax", "jz      short loc_5F51"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 65, 0, 0, 4, 0, 0, 8, 12, 0.00402491751052452, ["mov     eax, cs:human_output_opts", "mov     cs:file_human_output_opts, eax", "mov     rax, cs:output_block_size", "mov     cs:file_output_block_size, rax"], ["mov~eax,<TAG>", "mov~<TAG>,eax", "mov~rax,<TAG>", "mov~<TAG>,rax"]], [1, 0, 58, 0, 0, 2, 0, 1, 11, 10, 0.010922744339515303, ["cmp     [rbp+qs], 1", "jz      short loc_6021"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 168, 0, 0, 3, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:sort_type_0, 4; jumptable 0000000000005676 case 247", "mov     [rbp+sort_type_specified], 1", "jmp     loc_5EF0"], ["mov~<TAG>,0", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 168, 0, 0, 3, 1, 1, 8, 15, 0.006078567334382387, ["mov     eax, cs:format_0; jumptable 0000000000005676 case 180", "test    eax, eax", "jz      loc_5EE9"], ["mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [1, 0, 168, 0, 1, 4, 1, 2, 12, 18, 2.844464671748777e-05, ["mov     edi, 1; fd", "call    _isatty", "test    eax, eax", "jz      short loc_5C22"], ["mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [4, 0, 179, 0, 1, 6, 0, 2, 4, 17, 0.005091591762430308, ["mov     cs:format_0, 2", "mov     esi, 3; s", "mov     edi, 0; o", "call    set_quoting_style", "mov     cs:qmark_funny_chars, 1", "jmp     short loc_5436"], ["mov~<TAG>,0", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 181, 0, 1, 4, 1, 2, 3, 18, 0.005262259642735234, ["mov     edi, 1; fd", "call    _isatty", "test    eax, eax", "jz      short loc_541E"], ["mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 56, 0, 0, 2, 0, 1, 13, 10, 5.688929343497554e-05, ["cmp     [rbp+qs], 6", "jnz     short loc_6028"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 57, 0, 0, 2, 0, 1, 12, 10, 0.00344180225281602, ["cmp     [rbp+qs], 3", "jz      short loc_6021"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 168, 0, 0, 2, 0, 1, 11, 17, 0.029113095915348733, ["mov     eax, 1", "jmp     short loc_5C27"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 67, 0, 2, 10, 0, 3, 7, 13, 0.012401865968824668, ["lea     rdi, aLsBlockSize; \"LS_BLOCK_SIZE\"", "call    _getenv", "mov     [rbp+ls_block_size], rax", "mov     rax, [rbp+ls_block_size]", "lea     rdx, output_block_size; block_size", "lea     rsi, human_output_opts; opts", "mov     rdi, rax; spec", "call    human_options", "cmp     [rbp+ls_block_size], 0", "jnz     short loc_5F37"], ["lea~rdi,<TAG>", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 168, 0, 0, 1, 0, 0, 12, 17, 0.007011605415860735, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 168, 0, 0, 2, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:time_type_0, 2; jumptable 0000000000005676 case 248", "jmp     loc_5EF0"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 168, 0, 0, 2, 0, 1, 9, 15, 0.0, ["mov     cs:format_0, 1", "jmp     loc_5EE9"], ["mov~<TAG>,0", "jmp~FOO"]], [2, 0, 168, 0, 1, 12, 0, 2, 5, 13, 0.4949084082375697, ["mov     dword ptr [rbp+oi], 0FFFFFFFFh", "lea     rdx, [rbp+oi]", "mov     rsi, [rbp+argv]; argv", "mov     eax, [rbp+argc]", "mov     r8, rdx; longind", "lea     rcx, long_options; longopts", "lea     rdx, shortopts; \"abcdfghiklmnopqrstuvw:xABCDFGHI:LNQRST:\"...", "mov     edi, eax; argc", "call    _getopt_long", "mov     [rbp+c], eax", "cmp     [rbp+c], 0FFFFFFFFh", "jnz     short loc_563F"], ["mov~[word ptr [rbp+0],0", "lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~r8,rdx", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~edi,eax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 171, 0, 1, 6, 0, 2, 4, 14, 0.0729605188303561, ["lea     rdi, aTabsize; \"TABSIZE\"", "call    _getenv", "mov     [rbp+p_0], rax", "mov     cs:tabsize, 8", "cmp     [rbp+p_0], 0", "jz      short loc_55EB"], ["lea~rdi,<TAG>", "call~FOO", "mov~[rbp+0],rax", "mov~<TAG>,0", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 168, 0, 0, 3, 0, 1, 6, 14, 0.002389350324268971, ["mov     rax, [rbp+oi]", "mov     cs:tabsize, rax", "jmp     short loc_55EB"], ["mov~rax,[rbp+0]", "mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 168, 0, 0, 2, 0, 1, 9, 14, 0.0047132242919429735, ["nop", "jmp     loc_55EB"], ["nop", "jmp~FOO"]], [0, 0, 168, 0, 0, 2, 0, 1, 9, 14, 0.009491924940480912, ["nop", "jmp     loc_55EB"], ["nop", "jmp~FOO"]], [0, 0, 168, 0, 0, 1, 0, 1, 9, 14, 0.3787007558762347, ["jmp     loc_55EB"], ["jmp~FOO"]], [3, 0, 168, 0, 3, 12, 0, 3, 6, 14, 0.002389350324268971, ["mov     rax, [rbp+p_0]", "mov     rdi, rax; arg", "call    quote", "mov     rbx, rax", "lea     rdi, aIgnoringInvali_1; \"ignoring invalid tab size in environmen\"...", "call    _gettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rbx,rax", "lea~rdi,<TAG>", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [2, 0, 179, 0, 0, 3, 0, 1, 4, 17, 0.005091591762430308, ["mov     cs:format_0, 1", "mov     cs:qmark_funny_chars, 0", "jmp     short loc_5436"], ["mov~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 3, -1, 8.53339401524633e-05, ["jmp     short loc_5431"], ["jmp~FOO"]], [1, 0, 168, 0, 0, 2, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:print_author, 1; jumptable 0000000000005676 case 259", "jmp     loc_5EF0"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 69, 0, 0, 3, 1, 1, 6, 12, 0.21196950733871886, ["mov     rax, cs:output_block_size", "test    rax, rax", "jz      loc_5EF5"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 2, 19, 0.0002844464671748777, ["cmp     eax, 1", "jz      short loc_53EE"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 186, 0, 0, 2, 0, 1, 1, 18, 0.00019911252702241438, ["cmp     eax, 3", "jz      short loc_53D3"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 63, 0, 0, 1, 0, 1, 7, 11, 0.19532938900898852, ["jmp     loc_5F6F"], ["jmp~FOO"]], [3, 0, 7, 1, 1, 16, 0, 1, 27, 5, 0.0, ["mov     eax, [rbp+i_1]", "cdqe", "lea     rdx, ds:0[rax*8]", "lea     rax, long_time_format", "mov     rax, [rdx+rax]", "mov     edx, 2; category", "mov     rsi, rax; msgid", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rax", "mov     eax, [rbp+i_1]", "cdqe", "lea     rdx, ds:0[rax*8]", "lea     rax, long_time_format", "mov     [rdx+rax], rcx", "add     [rbp+i_1], 1"], ["mov~eax,[rbp+0]", "cdqe~", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~rax,<TAG>", "mov~edx,0", "mov~rsi,rax", "mov~edi,0", "call~FOO", "mov~rcx,rax", "mov~eax,[rbp+0]", "cdqe~", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~<TAG>,rcx", "add~[rbp+0],0"]], [1, 0, 7, 0, 0, 2, 0, 1, 26, 4, 0.004664922061667995, ["cmp     [rbp+i_1], 1", "jle     short loc_63F5"], ["cmp~[rbp+0],0", "jle~FOO"]], [1, 1, 168, 0, 0, 7, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:human_output_opts, 90h; jumptable 0000000000005676 case 272", "mov     eax, cs:human_output_opts", "mov     cs:file_human_output_opts, eax", "mov     cs:output_block_size, 1", "mov     rax, cs:output_block_size", "mov     cs:file_output_block_size, rax", "jmp     loc_5EF0"], ["mov~<TAG>,<STR>", "mov~eax,<TAG>", "mov~<TAG>,eax", "mov~<TAG>,0", "mov~rax,<TAG>", "mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 168, 0, 0, 2, 0, 1, 13, 16, 0.0, ["mov     cs:tabsize, 0", "jmp     loc_5EEF"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 168, 0, 0, 5, 2, 1, 12, 16, 0.04258163613607919, ["and     eax, 1", "mov     cs:print_with_color, al", "movzx   eax, cs:print_with_color", "test    al, al", "jz      loc_5EEF"], ["and~eax,0", "mov~<TAG>,al", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [3, 0, 53, 0, 1, 7, 1, 2, 10, 8, 0.18693821822732962, ["and     eax, 1", "mov     cs:align_variable_outer_quotes, al", "mov     edi, 0; o", "call    clone_quoting_options", "mov     cs:filename_quoting_options, rax", "cmp     [rbp+qs], 7", "jnz     short loc_6066"], ["and~eax,0", "mov~<TAG>,al", "mov~edi,0", "call~FOO", "mov~<TAG>,rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 54, 0, 0, 2, 0, 1, 12, 9, 0.004608032768233019, ["mov     eax, 1", "jmp     short loc_602D"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 54, 0, 0, 1, 0, 0, 9, 9, 0.1827852998065764, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 7, 0, 0, 2, 0, 1, 25, 5, 0.008704061895551257, ["mov     [rbp+i_1], 0", "jmp     short loc_6447"], ["mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 168, 1, 0, 4, 0, 1, 6, 17, 0.28157355785641136, ["mov     eax, [rbp+c]", "add     eax, 83h", "cmp     eax, 113h; switch 276 cases", "ja      loc_5ED9; jumptable 0000000000005676 default case"], ["mov~eax,[rbp+0]", "add~eax,0", "cmp~eax,0", "ja~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 22, 3, 0.0026737967914438505, ["call    abformat_init"], ["call~FOO"]], [0, 0, 5, 0, 0, 5, 0, 1, 21, 4, 0.0029440209352599844, ["mov     rax, [rbp+p0]", "mov     cs:long_time_format, rax", "mov     rax, [rbp+p1]", "mov     cs:long_time_format+8, rax", "jmp     loc_6450"], ["mov~rax,[rbp+0]", "mov~<TAG>,rax", "mov~rax,[rbp+0]", "mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 23, 4, 0.00011851936132286572, ["jmp     loc_6450"], ["jmp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 24, 4, 7.111161679371943e-05, ["jmp     loc_6450"], ["jmp~FOO"]], [0, 0, 5, 0, 0, 5, 0, 1, 23, 4, 0.00011851936132286572, ["lea     rax, aYMDHMSNZ; \"%Y-%m-%d %H:%M:%S.%N %z\"", "mov     cs:long_time_format+8, rax", "mov     rax, cs:long_time_format+8", "mov     cs:long_time_format, rax", "jmp     loc_6450"], ["lea~rax,<TAG>", "mov~<TAG>,rax", "mov~rax,<TAG>", "mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 5, 0, 0, 5, 0, 1, 21, 4, 0.0025173512344976675, ["lea     rax, aYMDHM; \"%Y-%m-%d %H:%M\"", "mov     cs:long_time_format+8, rax", "mov     rax, cs:long_time_format+8", "mov     cs:long_time_format, rax", "jmp     loc_6450"], ["lea~rax,<TAG>", "mov~<TAG>,rax", "mov~rax,<TAG>", "mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 5, 0, 0, 5, 0, 1, 23, 4, 0.00018963097811658513, ["lea     rax, aYMD; \"%Y-%m-%d \"", "mov     cs:long_time_format, rax", "lea     rax, aMDHM; \"%m-%d %H:%M\"", "mov     cs:long_time_format+8, rax", "jmp     short loc_6450"], ["lea~rax,<TAG>", "mov~<TAG>,rax", "lea~rax,<TAG>", "mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 8, 0, 1, 4, 1, 2, 24, 4, 0.013041870519968142, ["mov     edi, 2; category", "call    hard_locale", "test    al, al", "jz      short loc_6450"], ["mov~edi,0", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 168, 0, 1, 6, 2, 2, 8, 15, 0.006107011981099875, ["mov     rax, cs:optarg@@GLIBC_2_2_5; jumptable 0000000000005676 case 250", "mov     rdi, rax; spec", "call    set_line_length", "xor     eax, 1", "test    al, al", "jz      loc_5EE3"], ["mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]], [3, 0, 7, 0, 3, 12, 0, 3, 21, 6, 0.0, ["mov     rax, [rbp+p0]", "mov     rdi, rax; arg", "call    quote", "mov     rbx, rax", "lea     rdi, aInvalidTimeSty; \"invalid time style format %s\"", "call    _gettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 2; status", "mov     eax, 0", "call    _error"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rbx,rax", "lea~rdi,<TAG>", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [2, 0, 8, 1, 1, 7, 1, 2, 20, 6, 0.00841961542837638, ["mov     rax, [rbp+p1]", "add     rax, 1", "mov     esi, 0Ah; c", "mov     rdi, rax; s", "call    _strchr", "test    rax, rax", "jz      short loc_6258"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~esi,0", "mov~rdi,rax", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 168, 0, 0, 2, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:print_scontext, 1; jumptable 0000000000005676 case 221", "jmp     loc_5EF0"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 16, 2, 0.01390943224485152, ["mov     eax, cs:optind@@GLIBC_2_2_5"], ["mov~eax,<TAG>"]], [0, 0, 38, 0, 0, 3, 1, 1, 15, 3, 0.1502446239617704, ["mov     eax, cs:format_0", "test    eax, eax", "jnz     loc_6455"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [0, 0, 168, 0, 0, 3, 1, 1, 8, 19, 0.023381499601774946, ["mov     rax, cs:optarg@@GLIBC_2_2_5; jumptable 0000000000005676 case 268", "test    rax, rax", "jz      short loc_5CA9"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 50, 0, 0, 4, 1, 1, 13, 7, 0.00637160086471726, ["mov     rax, [rbp+p_1]", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_608C"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [1, 0, 50, 2, 0, 7, 0, 1, 12, 8, 0.007224940266241894, ["mov     eax, cs:indicator_style_0", "sub     eax, 2", "mov     edx, eax", "lea     rax, asc_1CE34; \"*=>@|\"", "add     rax, rdx", "mov     [rbp+p_1], rax", "jmp     short loc_60B1"], ["mov~eax,<TAG>", "sub~eax,0", "mov~edx,eax", "lea~rax,<TAG>", "add~rax,rdx", "mov~[rbp+0],rax", "jmp~FOO"]], [2, 0, 50, 1, 1, 9, 0, 1, 14, 8, 0.0, ["mov     rax, [rbp+p_1]", "movzx   eax, byte ptr [rax]", "movsx   ecx, al", "mov     rax, cs:filename_quoting_options", "mov     edx, 1; i", "mov     esi, ecx; c", "mov     rdi, rax; o", "call    set_char_quoting", "add     [rbp+p_1], 1"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "movsx~ecx,al", "mov~rax,<TAG>", "mov~edx,0", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "add~[rbp+0],0"]], [1, 0, 0, 0, 1, 2, 0, 1, 8, -1, 0.0, ["mov     edi, 0; jumptable 0000000000005676 case 1", "call    usage"], ["mov~edi,0", "call~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 22, 5, 0.008628209504304624, ["test    rax, rax", "jz      short loc_637B"], ["test~rax,rax", "jz~FOO"]], [1, 1, 52, 0, 1, 5, 0, 1, 11, 8, 0.0, ["mov     rax, cs:filename_quoting_options", "mov     edx, 1; i", "mov     esi, 20h ; ' '; c", "mov     rdi, rax; o", "call    set_char_quoting"], ["mov~rax,<TAG>", "mov~edx,0", "mov~esi,<STR>", "mov~rdi,rax", "call~FOO"]], [1, 0, 6, 0, 0, 4, 0, 0, 21, 5, 0.0003413357606098532, ["mov     rax, [rbp+p1]", "lea     rdx, [rax+1]", "mov     [rbp+p1], rdx", "mov     byte ptr [rax], 0"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~<TAG>,0"]], [0, 0, 2, 0, 0, 3, 1, 1, 17, 1, 0.009728069177380817, ["mov     rbx, [rbp+var_18]", "xor     rbx, fs:28h", "jz      short loc_646F"], ["mov~rbx,[rbp+0]", "xor~rbx,<TAG>", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 19, 2, 0.0005120036409147798, ["mov     eax, cs:optind@@GLIBC_2_2_5", "jmp     loc_645B"], ["mov~eax,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 18, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 168, 0, 1, 12, 0, 2, 8, 15, 9.124806943667641e-05, ["mov     edi, 10h; jumptable 0000000000005676 case 267", "call    xmalloc", "mov     [rbp+hide], rax", "mov     rdx, cs:optarg@@GLIBC_2_2_5", "mov     rax, [rbp+hide]", "mov     [rax], rdx", "mov     rdx, cs:hide_patterns", "mov     rax, [rbp+hide]", "mov     [rax+8], rdx", "mov     rax, [rbp+hide]", "mov     cs:hide_patterns, rax", "jmp     loc_5EF0"], ["mov~edi,0", "call~FOO", "mov~[rbp+0],rax", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 51, 0, 0, 3, 0, 0, 11, 7, 0.1827852998065764, ["mov     eax, cs:indicator_style_0", "cmp     eax, 1", "jbe     short loc_60BC"], ["mov~eax,<TAG>", "cmp~eax,0", "jbe~FOO"]], [1, 0, 5, 0, 0, 4, 0, 1, 8, -1, 0.015360109227443396, ["mov     rdx, cs:Version; jumptable 0000000000005676 case 0", "mov     eax, cs:ls_mode", "cmp     eax, 1", "jz      short loc_5E92"], ["mov~rdx,<TAG>", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 18, 0, 0.0, ["mov     rbx, [rbp+var_8]", "leave", "retn"], ["mov~rbx,[rbp+0]", "leave", "retn"]], [0, 0, 168, 0, 0, 5, 0, 1, 9, 15, 0.004693366708385482, ["mov     eax, cs:human_output_opts", "mov     cs:file_human_output_opts, eax", "mov     rax, cs:output_block_size", "mov     cs:file_output_block_size, rax", "jmp     loc_5EF0"], ["mov~eax,<TAG>", "mov~<TAG>,eax", "mov~rax,<TAG>", "mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 168, 0, 1, 8, 0, 2, 8, 16, 0.006058709750824895, ["mov     rax, cs:optarg@@GLIBC_2_2_5; jumptable 0000000000005676 case 260", "lea     rdx, output_block_size; block_size", "lea     rsi, human_output_opts; opts", "mov     rdi, rax; spec", "call    human_options", "mov     [rbp+e], eax", "cmp     [rbp+e], 0", "jz      short loc_5DFA"], ["mov~rax,<TAG>", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 9, -1, 0.006200932984412334, ["mov     eax, cs:ls_mode", "cmp     eax, 2", "jnz     short loc_5E89"], ["mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [1, 0, 168, 0, 0, 2, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:ignore_mode, 2; jumptable 0000000000005676 case 228", "jmp     loc_5EF0"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 10, -1, 1.4222323358743885e-05, ["lea     rax, program; \"dir\"", "jmp     short loc_5E99"], ["lea~rax,<TAG>", "jmp~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 10, -1, 1.4222323358743885e-05, ["lea     rax, aVdir; \"vdir\"", "jmp     short loc_5E99"], ["lea~rax,<TAG>", "jmp~FOO"]], [3, 0, 168, 0, 3, 13, 0, 3, 9, 16, 5.688929343497554e-05, ["mov     rax, cs:optarg@@GLIBC_2_2_5", "mov     rdi, rax; arg", "call    quote", "mov     rbx, rax", "lea     rdi, aInvalidLineWid; \"invalid line width\"", "call    _gettext", "mov     r8, rbx", "mov     rcx, rax", "lea     rdx, aSS_1; \"%s: %s\"", "mov     esi, 0; errnum", "mov     edi, 2; status", "mov     eax, 0", "call    _error"], ["mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~rbx,rax", "lea~rdi,<TAG>", "call~FOO", "mov~r8,rbx", "mov~rcx,rax", "lea~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [2, 0, 168, 0, 1, 4, 0, 2, 8, 15, 9.124806943667641e-05, ["mov     esi, 7; jumptable 0000000000005676 case 229", "mov     edi, 0; o", "call    set_quoting_style", "jmp     loc_5EF0"], ["mov~esi,0", "mov~edi,0", "call~FOO", "jmp~FOO"]], [1, 0, 168, 0, 0, 2, 0, 1, 8, 15, 0.004841504071257137, ["mov     cs:format_0, 3; jumptable 0000000000005676 case 251", "jmp     loc_5EF0"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 168, 0, 0, 2, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:time_type_0, 1; jumptable 0000000000005676 case 230", "jmp     loc_5EF0"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 168, 0, 1, 14, 0, 2, 9, 18, 0.011022300603026511, ["mov     rdx, cs:argmatch_die", "mov     rax, cs:optarg@@GLIBC_2_2_5", "mov     r9, rdx; exit_fn", "mov     r8d, 4; valsize", "lea     rcx, when_types; vallist", "lea     rdx, when_args; arglist", "mov     rsi, rax; arg", "lea     rdi, aHyperlink; \"--hyperlink\"", "call    __xargmatch_internal", "lea     rdx, ds:0[rax*4]", "lea     rax, when_types", "mov     eax, [rdx+rax]", "mov     [rbp+i_0], eax", "jmp     short loc_5CB3"], ["mov~rdx,<TAG>", "mov~rax,<TAG>", "mov~r9,rdx", "mov~r8d,0", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "lea~rdi,<TAG>", "call~FOO", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 168, 0, 0, 1, 0, 0, 9, 18, 0.011022300603026511, ["mov     [rbp+i_0], 1"], ["mov~[rbp+0],0"]], [2, 0, 23, 0, 1, 9, 0, 1, 19, 6, 0.07749743998179542, ["mov     rax, [rbp+style]", "mov     ecx, 4; valsize", "lea     rdx, time_style_types; vallist", "lea     rsi, time_style_args; arglist", "mov     rdi, rax; arg", "call    argmatch", "mov     [rbp+res], rax", "cmp     [rbp+res], 0", "jns     loc_6350"], ["mov~rax,[rbp+0]", "mov~ecx,0", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jns~FOO"]], [1, 0, 30, 0, 0, 4, 0, 1, 18, 7, 0.1081465468198885, ["mov     rax, [rbp+style]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Bh ; '+'", "jnz     loc_6282"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [1, 0, 168, 0, 0, 2, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:ignore_mode, 1; jumptable 0000000000005676 case 196", "jmp     loc_5EF0"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 168, 0, 0, 2, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:immediate_dirs, 1; jumptable 0000000000005676 case 231", "jmp     loc_5EF0"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 168, 0, 0, 2, 0, 1, 10, 17, 0.028501536010922746, ["cmp     [rbp+i_0], 1", "jz      short loc_5CD3"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 168, 0, 0, 2, 0, 1, 11, 17, 0.00600182045738992, ["cmp     [rbp+i_0], 2", "jnz     short loc_5CDA"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 168, 0, 1, 15, 0, 2, 8, 15, 9.124806943667641e-05, ["mov     rdx, cs:argmatch_die; jumptable 0000000000005676 case 273", "mov     rax, cs:optarg@@GLIBC_2_2_5", "mov     r9, rdx; exit_fn", "mov     r8d, 4; valsize", "lea     rcx, sort_types; vallist", "lea     rdx, sort_args; arglist", "mov     rsi, rax; arg", "lea     rdi, context; \"--sort\"", "call    __xargmatch_internal", "lea     rdx, ds:0[rax*4]", "lea     rax, sort_types", "mov     eax, [rdx+rax]", "mov     cs:sort_type_0, eax", "mov     [rbp+sort_type_specified], 1", "jmp     loc_5EF0"], ["mov~rdx,<TAG>", "mov~rax,<TAG>", "mov~r9,rdx", "mov~r8d,0", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "lea~rdi,<TAG>", "call~FOO", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "mov~<TAG>,eax", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 42, 0, 0, 3, 0, 1, 14, 4, 0.07488053248378655, ["mov     eax, cs:time_type_0", "cmp     eax, 2", "jnz     short loc_6145"], ["mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [1, 0, 43, 0, 0, 3, 0, 1, 13, 5, 0.16389805438616453, ["mov     eax, cs:time_type_0", "cmp     eax, 1", "jz      short loc_6123"], ["mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 168, 0, 2, 5, 0, 3, 8, 15, 9.124806943667641e-05, ["lea     rdi, pattern; jumptable 0000000000005676 case 197", "call    add_ignore_pattern", "lea     rdi, asc_1CD89; \".*~\"", "call    add_ignore_pattern", "jmp     loc_5EF0"], ["lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 168, 0, 0, 2, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:directories_first, 1; jumptable 0000000000005676 case 266", "jmp     loc_5EF0"], ["mov~<TAG>,0", "jmp~FOO"]], [15, 1, 178, 0, 2, 21, 0, 3, 2, 16, 0.04050517692570256, ["mov     cs:time_type_0, 0", "mov     cs:sort_type_0, 0", "mov     cs:sort_reverse, 0", "mov     cs:numeric_ids, 0", "mov     cs:print_block_size, 0", "mov     cs:indicator_style_0, 0", "mov     cs:print_inode, 0", "mov     cs:dereference, 1", "mov     cs:recursive, 0", "mov     cs:immediate_dirs, 0", "mov     cs:ignore_mode, 0", "mov     cs:ignore_patterns, 0", "mov     cs:hide_patterns, 0", "mov     cs:print_scontext, 0", "call    getenv_quoting_style", "mov     cs:line_length, 50h", "lea     rdi, aColumns; \"COLUMNS\"", "call    _getenv", "mov     [rbp+p], rax", "cmp     [rbp+p], 0", "jz      short loc_5529"], ["mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "call~FOO", "mov~<TAG>,<STR>", "lea~rdi,<TAG>", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [3, 0, 179, 0, 1, 5, 0, 2, 1, 17, 0.005091591762430308, ["mov     cs:format_0, 2", "mov     esi, 7; s", "mov     edi, 0; o", "call    set_quoting_style", "jmp     short loc_5436"], ["mov~<TAG>,0", "mov~esi,0", "mov~edi,0", "call~FOO", "jmp~FOO"]], [3, 0, 179, 0, 1, 5, 0, 2, 2, 17, 0.005091591762430308, ["mov     cs:format_0, 0", "mov     esi, 7; s", "mov     edi, 0; o", "call    set_quoting_style", "jmp     short loc_5436"], ["mov~<TAG>,0", "mov~esi,0", "mov~edi,0", "call~FOO", "jmp~FOO"]], [1, 0, 168, 0, 0, 2, 0, 1, 11, 16, 0.02356638980543862, ["mov     eax, 1", "jmp     short loc_5CDF"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 168, 0, 1, 4, 1, 2, 12, 17, 2.844464671748777e-05, ["mov     edi, 1; fd", "call    _isatty", "test    eax, eax", "jz      short loc_5CDA"], ["mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [3, 0, 168, 0, 0, 6, 1, 1, 8, 16, 0.014819660939811128, ["mov     cs:ignore_mode, 2; jumptable 0000000000005676 case 233", "mov     cs:sort_type_0, 0FFFFFFFFh", "mov     [rbp+sort_type_specified], 1", "mov     eax, cs:format_0", "test    eax, eax", "jnz     short loc_56FB"], ["mov~<TAG>,0", "mov~<TAG>,0", "mov~[rbp+0],0", "mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [1, 0, 168, 0, 0, 1, 0, 0, 12, 16, 0.007011605415860735, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 168, 0, 0, 2, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:format_0, 2; jumptable 0000000000005676 case 198", "jmp     loc_5EF0"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 7, -1, 0.0, ["mov     edi, 2; jumptable 0000000000005676 default case", "call    usage"], ["mov~edi,0", "call~FOO"]], [0, 0, 177, 0, 0, 4, 1, 1, 3, 16, 0.0005120036409147798, ["mov     rax, [rbp+p]", "movzx   eax, byte ptr [rax]", "test    al, al", "jz      short loc_5529"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 168, 0, 1, 4, 1, 2, 9, 18, 0.008988508362726135, ["mov     edi, 1; fd", "call    _isatty", "test    eax, eax", "jz      short loc_56F0"], ["mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 168, 0, 0, 2, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:dired, 1; jumptable 0000000000005676 case 199", "jmp     loc_5EF0"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 168, 0, 0, 2, 0, 1, 10, 17, 0.003825804983502105, ["mov     eax, 2", "jmp     short loc_56F5"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 168, 0, 0, 1, 0, 0, 13, 15, 0.04599499374217773, ["nop"], ["nop"]], [1, 0, 168, 0, 0, 1, 0, 0, 10, 17, 0.003825804983502105, ["mov     eax, 1"], ["mov~eax,0"]], [6, 0, 62, 6, 1, 29, 1, 2, 8, 10, 0.2028103310956878, ["mov     rax, cs:line_length", "mov     rdx, 0AAAAAAAAAAAAAAABh", "mul     rdx", "mov     rax, rdx", "shr     rax, 1", "mov     cs:max_idx, rax", "mov     rcx, cs:line_length", "mov     rdx, 0AAAAAAAAAAAAAAABh", "mov     rax, rcx", "mul     rdx", "mov     rax, rdx", "shr     rax, 1", "mov     rdx, rax", "add     rdx, rdx", "add     rdx, rax", "mov     rax, rcx", "sub     rax, rdx", "test    rax, rax", "setnz   al", "movzx   edx, al", "mov     rax, cs:max_idx", "add     rax, rdx", "mov     cs:max_idx, rax", "mov     edi, 0; o", "call    get_quoting_style", "mov     [rbp+qs], eax", "mov     eax, cs:format_0", "cmp     eax, 4", "jz      short loc_6028"], ["mov~rax,<TAG>", "mov~rdx,0", "mul~,rdx", "mov~rax,rdx", "shr~rax,0", "mov~<TAG>,rax", "mov~rcx,<TAG>", "mov~rdx,0", "mov~rax,rcx", "mul~,rdx", "mov~rax,rdx", "shr~rax,0", "mov~rdx,rax", "add~rdx,rdx", "add~rdx,rax", "mov~rax,rcx", "sub~rax,rdx", "test~rax,rax", "setnz~al", "movzx~edx,al", "mov~rax,<TAG>", "add~rax,rdx", "mov~<TAG>,rax", "mov~edi,0", "call~FOO", "mov~[rbp+0],eax", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 176, 0, 1, 6, 2, 2, 4, 16, 0.0002844464671748777, ["mov     rax, [rbp+p]", "mov     rdi, rax; spec", "call    set_line_length", "xor     eax, 1", "test    al, al", "jz      short loc_5529"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 168, 0, 0, 1, 0, 0, 11, 16, 0.014108544771873933, ["mov     cs:format_0, eax"], ["mov~<TAG>,eax"]], [1, 0, 168, 0, 0, 2, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:indicator_style_0, 3; jumptable 0000000000005676 case 201", "jmp     loc_5EF0"], ["mov~<TAG>,0", "jmp~FOO"]], [5, 0, 0, 2, 2, 13, 0, 2, 10, -1, 0.0, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "sub     rsp, 8", "push    0", "lea     r9, aDavidMackenzie; \"David MacKenzie\"", "lea     r8, aRichardMStallm; \"Richard M. Stallman\"", "mov     rcx, rdx; version", "lea     rdx, package; \"GNU coreutils\"", "mov     rsi, rax; command_name", "mov     eax, 0", "call    version_etc", "add     rsp, 10h", "mov     edi, 0; status", "call    _exit"], ["mov~rdi,<TAG>", "sub~rsp,0", "push~0", "lea~r9,<TAG>", "lea~r8,<TAG>", "mov~rcx,rdx", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~eax,0", "call~FOO", "add~rsp,0", "mov~edi,0", "call~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 9, -1, 0.003100466492206167, ["lea     rax, aLs; \"ls\""], ["lea~rax,<TAG>"]], [1, 0, 168, 0, 0, 2, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:print_group, 0; jumptable 0000000000005676 case 202", "jmp     loc_5EF0"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 45, 0, 0, 3, 1, 1, 14, 6, 0.0006257822277847309, ["movzx   eax, cs:print_hyperlink", "test    al, al", "jz      short loc_610D"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 46, 0, 0, 3, 1, 1, 13, 7, 0.0074524974399817956, ["mov     eax, cs:format_0", "test    eax, eax", "jnz     short loc_6106"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [1, 0, 44, 0, 0, 1, 0, 0, 14, 6, 0.0006257822277847309, ["mov     cs:dired, 0"], ["mov~<TAG>,0"]], [3, 0, 168, 0, 0, 4, 0, 1, 9, 15, 0.02335305495505746, ["mov     cs:print_block_size, 0", "mov     cs:print_with_color, 0", "mov     cs:print_hyperlink, 0", "jmp     loc_5EF0"], ["mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 168, 0, 0, 2, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:dereference, 3; jumptable 0000000000005676 case 203", "jmp     loc_5EF0"], ["mov~<TAG>,0", "jmp~FOO"]], [2, 1, 47, 0, 2, 11, 1, 3, 12, 6, 0.17379679144385027, ["mov     edi, 0; o", "call    clone_quoting_options", "mov     cs:dirname_quoting_options, rax", "mov     rax, cs:dirname_quoting_options", "mov     edx, 1; i", "mov     esi, 3Ah ; ':'; c", "mov     rdi, rax; o", "call    set_char_quoting", "movzx   eax, cs:dired", "test    al, al", "jz      short loc_610D"], ["mov~edi,0", "call~FOO", "mov~<TAG>,rax", "mov~rax,<TAG>", "mov~edx,0", "mov~esi,<STR>", "mov~rdi,rax", "call~FOO", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 3, 0, 1, 9, 0, 1, 22, -1, 0.0, ["mov     rax, [rbp+p_2]", "lea     rdx, [rax+8]", "mov     [rbp+p_2], rdx", "mov     rdx, [rax]", "mov     rax, cs:stderr@@GLIBC_2_2_5", "lea     rsi, aPosixS; \"  - [posix-]%s\\n\"", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~rdx,<TAG>", "mov~rax,<TAG>", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO"]], [0, 0, 3, 0, 0, 4, 1, 1, 21, -1, 0.008504949368528844, ["mov     rax, [rbp+p_2]", "mov     rax, [rax]", "test    rax, rax", "jnz     short loc_62F2"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [1, 0, 168, 0, 0, 2, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:indicator_style_0, 2; jumptable 0000000000005676 case 263", "jmp     loc_5EF0"], ["mov~<TAG>,0", "jmp~FOO"]], [2, 0, 168, 0, 0, 3, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:format_0, 0; jumptable 0000000000005676 case 234", "mov     cs:print_owner, 0", "jmp     loc_5EF0"], ["mov~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [2, 0, 168, 0, 0, 7, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:human_output_opts, 0B0h; jumptable 0000000000005676 case 235", "mov     eax, cs:human_output_opts", "mov     cs:file_human_output_opts, eax", "mov     cs:output_block_size, 1", "mov     rax, cs:output_block_size", "mov     cs:file_output_block_size, rax", "jmp     loc_5EF0"], ["mov~<TAG>,0", "mov~eax,<TAG>", "mov~<TAG>,eax", "mov~<TAG>,0", "mov~rax,<TAG>", "mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 168, 0, 0, 2, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:print_inode, 1; jumptable 0000000000005676 case 236", "jmp     loc_5EF0"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 168, 0, 0, 2, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     [rbp+kibibytes_specified], 1; jumptable 0000000000005676 case 238", "jmp     loc_5EF0"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 168, 0, 0, 2, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:format_0, 0; jumptable 0000000000005676 case 239", "jmp     loc_5EF0"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 168, 0, 0, 2, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:format_0, 4; jumptable 0000000000005676 case 240", "jmp     loc_5EF0"], ["mov~<TAG>,0", "jmp~FOO"]], [2, 0, 168, 0, 0, 3, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:numeric_ids, 1; jumptable 0000000000005676 case 241", "mov     cs:format_0, 0", "jmp     loc_5EF0"], ["mov~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [2, 0, 168, 0, 0, 3, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:format_0, 0; jumptable 0000000000005676 case 242", "mov     cs:print_group, 0", "jmp     loc_5EF0"], ["mov~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 168, 0, 0, 2, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:indicator_style_0, 1; jumptable 0000000000005676 case 243", "jmp     loc_5EF0"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 168, 0, 0, 2, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:qmark_funny_chars, 1; jumptable 0000000000005676 case 244", "jmp     loc_5EF0"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 168, 0, 0, 2, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:sort_reverse, 1; jumptable 0000000000005676 case 245", "jmp     loc_5EF0"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 168, 0, 0, 2, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:print_block_size, 1; jumptable 0000000000005676 case 246", "jmp     loc_5EF0"], ["mov~<TAG>,0", "jmp~FOO"]], [2, 0, 168, 0, 0, 3, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:sort_type_0, 3; jumptable 0000000000005676 case 249", "mov     [rbp+sort_type_specified], 1", "jmp     loc_5EF0"], ["mov~<TAG>,0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 168, 0, 0, 2, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:dereference, 4; jumptable 0000000000005676 case 262", "jmp     loc_5EF0"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 168, 0, 1, 4, 0, 2, 8, 15, 9.124806943667641e-05, ["mov     rax, cs:optarg@@GLIBC_2_2_5; jumptable 0000000000005676 case 204", "mov     rdi, rax; pattern", "call    add_ignore_pattern", "jmp     loc_5EF0"], ["mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 168, 0, 0, 2, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:dereference, 5; jumptable 0000000000005676 case 207", "jmp     loc_5EF0"], ["mov~<TAG>,0", "jmp~FOO"]], [2, 0, 168, 0, 1, 4, 0, 2, 8, 15, 9.124806943667641e-05, ["mov     esi, 0; jumptable 0000000000005676 case 209", "mov     edi, 0; o", "call    set_quoting_style", "jmp     loc_5EF0"], ["mov~esi,0", "mov~edi,0", "call~FOO", "jmp~FOO"]], [2, 0, 168, 0, 1, 4, 0, 2, 8, 15, 9.124806943667641e-05, ["mov     esi, 5; jumptable 0000000000005676 case 212", "mov     edi, 0; o", "call    set_quoting_style", "jmp     loc_5EF0"], ["mov~esi,0", "mov~edi,0", "call~FOO", "jmp~FOO"]], [1, 0, 168, 0, 0, 2, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:recursive, 1; jumptable 0000000000005676 case 213", "jmp     loc_5EF0"], ["mov~<TAG>,0", "jmp~FOO"]], [2, 0, 168, 0, 0, 3, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:sort_type_0, 2; jumptable 0000000000005676 case 214", "mov     [rbp+sort_type_specified], 1", "jmp     loc_5EF0"], ["mov~<TAG>,0", "mov~[rbp+0],0", "jmp~FOO"]], [6, 0, 168, 2, 2, 16, 0, 3, 8, 15, 9.124806943667641e-05, ["lea     rdi, aInvalidTabSize; jumptable 0000000000005676 case 215", "call    _gettext", "mov     rdx, rax", "mov     rax, cs:optarg@@GLIBC_2_2_5", "sub     rsp, 8", "push    2; err_exit", "mov     r9, rdx; err", "lea     r8, suffixes; suffixes", "mov     rcx, 0FFFFFFFFFFFFFFFFh; max", "mov     edx, 0; min", "mov     esi, 0; base", "mov     rdi, rax; n_str", "call    xnumtoumax", "add     rsp, 10h", "mov     cs:tabsize, rax", "jmp     loc_5EF0"], ["lea~rdi,<TAG>", "call~FOO", "mov~rdx,rax", "mov~rax,<TAG>", "sub~rsp,0", "push~0", "mov~r9,rdx", "lea~r8,<TAG>", "mov~rcx,0", "mov~edx,0", "mov~esi,0", "mov~rdi,rax", "call~FOO", "add~rsp,0", "mov~<TAG>,rax", "jmp~FOO"]], [2, 0, 168, 0, 0, 3, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:sort_type_0, 0FFFFFFFFh; jumptable 0000000000005676 case 216", "mov     [rbp+sort_type_specified], 1", "jmp     loc_5EF0"], ["mov~<TAG>,0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 168, 0, 1, 14, 0, 2, 8, 15, 9.124806943667641e-05, ["mov     rdx, cs:argmatch_die; jumptable 0000000000005676 case 274", "mov     rax, cs:optarg@@GLIBC_2_2_5", "mov     r9, rdx; exit_fn", "mov     r8d, 4; valsize", "lea     rcx, time_types; vallist", "lea     rdx, time_args; arglist", "mov     rsi, rax; arg", "lea     rdi, aTime; \"--time\"", "call    __xargmatch_internal", "lea     rdx, ds:0[rax*4]", "lea     rax, time_types", "mov     eax, [rdx+rax]", "mov     cs:time_type_0, eax", "jmp     loc_5EF0"], ["mov~rdx,<TAG>", "mov~rax,<TAG>", "mov~r9,rdx", "mov~r8d,0", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "lea~rdi,<TAG>", "call~FOO", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "mov~<TAG>,eax", "jmp~FOO"]], [1, 0, 168, 0, 1, 14, 0, 2, 8, 15, 9.124806943667641e-05, ["mov     rdx, cs:argmatch_die; jumptable 0000000000005676 case 264", "mov     rax, cs:optarg@@GLIBC_2_2_5", "mov     r9, rdx; exit_fn", "mov     r8d, 4; valsize", "lea     rcx, format_types; vallist", "lea     rdx, format_args; arglist", "mov     rsi, rax; arg", "lea     rdi, aFormat; \"--format\"", "call    __xargmatch_internal", "lea     rdx, ds:0[rax*4]", "lea     rax, format_types", "mov     eax, [rdx+rax]", "mov     cs:format_0, eax", "jmp     loc_5EF0"], ["mov~rdx,<TAG>", "mov~rax,<TAG>", "mov~r9,rdx", "mov~r8d,0", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "lea~rdi,<TAG>", "call~FOO", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "mov~<TAG>,eax", "jmp~FOO"]], [1, 0, 168, 0, 1, 5, 0, 2, 8, 15, 9.124806943667641e-05, ["mov     cs:format_0, 0; jumptable 0000000000005676 case 265", "lea     rdi, s; \"full-iso\"", "call    bad_cast", "mov     [rbp+time_style_option], rax", "jmp     loc_5EF0"], ["mov~<TAG>,0", "lea~rdi,<TAG>", "call~FOO", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 168, 0, 0, 3, 1, 1, 12, 15, 0.037034930026169074, ["and     eax, 1", "mov     cs:print_hyperlink, al", "jmp     loc_5EF0"], ["and~eax,0", "mov~<TAG>,al", "jmp~FOO"]], [1, 0, 168, 0, 1, 14, 0, 2, 8, 15, 9.124806943667641e-05, ["mov     rdx, cs:argmatch_die; jumptable 0000000000005676 case 269", "mov     rax, cs:optarg@@GLIBC_2_2_5", "mov     r9, rdx; exit_fn", "mov     r8d, 4; valsize", "lea     rcx, indicator_style_types; vallist", "lea     rdx, indicator_style_args; arglist", "mov     rsi, rax; arg", "lea     rdi, aIndicatorStyle_0; \"--indicator-style\"", "call    __xargmatch_internal", "lea     rdx, ds:0[rax*4]", "lea     rax, indicator_style_types", "mov     eax, [rdx+rax]", "mov     cs:indicator_style_0, eax", "jmp     loc_5EF0"], ["mov~rdx,<TAG>", "mov~rax,<TAG>", "mov~r9,rdx", "mov~r8d,0", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "lea~rdi,<TAG>", "call~FOO", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "mov~<TAG>,eax", "jmp~FOO"]], [2, 0, 168, 0, 2, 16, 0, 3, 8, 15, 9.124806943667641e-05, ["mov     rdx, cs:argmatch_die; jumptable 0000000000005676 case 270", "mov     rax, cs:optarg@@GLIBC_2_2_5", "mov     r9, rdx; exit_fn", "mov     r8d, 4; valsize", "lea     rcx, quoting_style_vals; vallist", "lea     rdx, quoting_style_args; arglist", "mov     rsi, rax; arg", "lea     rdi, aQuotingStyle_0; \"--quoting-style\"", "call    __xargmatch_internal", "lea     rdx, ds:0[rax*4]", "lea     rax, quoting_style_vals", "mov     eax, [rdx+rax]", "mov     esi, eax; s", "mov     edi, 0; o", "call    set_quoting_style", "jmp     loc_5EF0"], ["mov~rdx,<TAG>", "mov~rax,<TAG>", "mov~r9,rdx", "mov~r8d,0", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "lea~rdi,<TAG>", "call~FOO", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "mov~esi,eax", "mov~edi,0", "call~FOO", "jmp~FOO"]], [0, 0, 168, 0, 0, 3, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     rax, cs:optarg@@GLIBC_2_2_5; jumptable 0000000000005676 case 275", "mov     [rbp+time_style_option], rax", "jmp     loc_5EF0"], ["mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 168, 0, 0, 2, 0, 1, 8, 15, 9.124806943667641e-05, ["mov     cs:qmark_funny_chars, 0; jumptable 0000000000005676 case 271", "jmp     loc_5EF0"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 35, 0, 1, 4, 0, 2, 18, 5, 0.0, ["lea     rdi, aLocale; \"locale\"", "call    bad_cast", "mov     [rbp+style], rax", "jmp     short loc_61AC"], ["lea~rdi,<TAG>", "call~FOO", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 36, 0, 1, 5, 0, 2, 17, 5, 0.004010695187165776, ["lea     rdi, aTimeStyle; \"TIME_STYLE\"", "call    _getenv", "mov     [rbp+style], rax", "cmp     [rbp+style], 0", "jnz     short loc_61AC"], ["lea~rdi,<TAG>", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [3, 0, 175, 0, 3, 12, 0, 3, 5, 16, 0.0, ["mov     rax, [rbp+p]", "mov     rdi, rax; arg", "call    quote", "mov     rbx, rax", "lea     rdi, aIgnoringInvali_0; \"ignoring invalid width in environment v\"...", "call    _gettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rbx,rax", "lea~rdi,<TAG>", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [0, 0, 3, 0, 3, 14, 0, 4, 20, -1, 0.01262942314256457, ["mov     rdx, [rbp+res]; problem", "mov     rax, [rbp+style]", "mov     rsi, rax; value", "lea     rdi, aTimeStyle_0; \"time style\"", "call    argmatch_invalid", "mov     rbx, cs:stderr@@GLIBC_2_2_5", "lea     rdi, aValidArguments; \"Valid arguments are:\\n\"", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "lea     rax, time_style_args", "mov     [rbp+p_2], rax", "jmp     short loc_631C"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "lea~rdi,<TAG>", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "lea~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 41, 0, 0, 4, 2, 1, 14, 4, 0.08261747639094323, ["movzx   eax, [rbp+sort_type_specified]", "xor     eax, 1", "test    al, al", "jz      short loc_6145"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 39, 0, 0, 1, 0, 0, 16, 4, 0.0, ["mov     cs:sort_type_0, 4"], ["mov~<TAG>,0"]], [0, 0, 40, 0, 0, 3, 1, 1, 15, 4, 0.0038969166002958246, ["mov     eax, cs:format_0", "test    eax, eax", "jz      short loc_6145"], ["mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [4, 0, 174, 0, 1, 8, 0, 2, 3, 15, 0.059392422346114436, ["lea     rax, [rbp+oi]", "mov     rdx, rax", "mov     esi, 5413h; request", "mov     edi, 1; fd", "mov     eax, 0", "call    _ioctl", "cmp     eax, 0FFFFFFFFh", "jz      short loc_5560"], ["lea~rax,[rbp+0]", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "cmp~eax,0", "jz~FOO"]], [1, 0, 0, 0, 3, 8, 0, 3, 22, -1, 0.0, ["mov     rbx, cs:stderr@@GLIBC_2_2_5", "lea     rdi, aFormatEGHMForA; \"  - +FORMAT (e.g., +%H:%M) for a 'date'\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     edi, 2; status", "call    usage"], ["mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~edi,0", "call~FOO"]], [0, 0, 173, 0, 0, 3, 1, 1, 4, 15, 0.000369780407327341, ["movzx   eax, word ptr [rbp+oi+2]", "test    ax, ax", "jz      short loc_5560"], ["movzx~eax,[ord ptr [rbp+0]", "test~ax,ax", "jz~FOO"]], [0, 0, 172, 0, 0, 3, 0, 0, 5, 15, 0.0, ["movzx   eax, word ptr [rbp+oi+2]", "movzx   eax, ax", "mov     cs:line_length, rax"], ["movzx~eax,[ord ptr [rbp+0]", "movzx~eax,ax", "mov~<TAG>,rax"]], [1, 0, 16, 0, 0, 2, 0, 1, 21, 6, 0.046620775969962454, ["cmp     rax, 1", "jg      short loc_636A"], ["cmp~rax,0", "jg~FOO"]], [1, 0, 18, 0, 0, 3, 0, 1, 20, 5, 0.0571026282853567, ["mov     rax, [rbp+res]", "cmp     rax, 1", "jz      short loc_639C"], ["mov~rax,[rbp+0]", "cmp~rax,0", "jz~FOO"]], [1, 0, 37, 0, 0, 4, 0, 1, 16, 5, 0.13141426783479349, ["mov     rax, [rbp+time_style_option]", "mov     [rbp+style], rax", "cmp     [rbp+style], 0", "jnz     short loc_61AC"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 63, 0, 0, 2, 0, 0, 10, 11, 0.0, ["mov     cs:human_output_opts, 0", "mov     cs:output_block_size, 400h"], ["mov~<TAG>,0", "mov~<TAG>,0"]], [3, 0, 170, 0, 1, 10, 1, 2, 5, 15, 0.0009102286949596086, ["lea     rdx, [rbp+oi]", "mov     rax, [rbp+p_0]", "mov     r8d, 0; valid_suffixes", "mov     rcx, rdx; val", "mov     edx, 0; strtol_base", "mov     esi, 0; ptr", "mov     rdi, rax; s", "call    xstrtoul", "test    eax, eax", "jnz     short loc_55B6"], ["lea~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~r8d,0", "mov~rcx,rdx", "mov~edx,0", "mov~esi,0", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 22, 5, 0.0299142867978913, ["cmp     rax, 2", "jz      short loc_63BD"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 23, 5, 0.021475708271703267, ["cmp     rax, 3", "jz      short loc_63DB"], ["cmp~rax,0", "jz~FOO"]], [2, 0, 35, 0, 1, 5, 2, 2, 18, 3, 0.008647172602116282, ["mov     edi, 2; category", "call    hard_locale", "xor     eax, 1", "test    al, al", "jz      short loc_61A7"], ["mov~edi,0", "call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 35, 0, 1, 7, 1, 2, 17, 4, 0.12410399362839915, ["mov     rax, [rbp+style]", "mov     edx, 6; n", "lea     rsi, posix_prefix_8831; \"posix-\"", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jz      short loc_618B"], ["mov~rax,[rbp+0]", "mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 168, 0, 0, 3, 1, 1, 8, 20, 0.028928205711685064, ["mov     rax, cs:optarg@@GLIBC_2_2_5; jumptable 0000000000005676 case 261", "test    rax, rax", "jz      short loc_5BF1"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [6, 0, 188, 1, 0, 16, 1, 1, 0, 18, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 0A8h", "mov     [rbp+argc], edi", "mov     [rbp+argv], rsi", "mov     rax, fs:28h", "mov     [rbp+var_18], rax", "xor     eax, eax", "mov     [rbp+time_style_option], 0", "mov     [rbp+sort_type_specified], 0", "mov     [rbp+kibibytes_specified], 0", "mov     cs:qmark_funny_chars, 0", "mov     eax, cs:ls_mode", "cmp     eax, 2", "jz      short loc_53B8"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~<TAG>,0", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 35, 1, 0, 1, 0, 0, 19, 5, 0.0008248947548071453, ["add     [rbp+style], 6"], ["add~[rbp+0],0"]], [1, 0, 0, 0, 1, 8, 0, 1, 9, -1, 0.0, ["mov     rdx, cs:optarg@@GLIBC_2_2_5", "mov     esi, dword ptr [rbp+oi]; opt_idx", "mov     eax, [rbp+e]", "mov     r8, rdx; arg", "lea     rcx, long_options; long_options", "mov     edx, 0; c", "mov     edi, eax; err", "call    xstrtol_fatal"], ["mov~rdx,<TAG>", "mov~esi,[word ptr [rbp+0]", "mov~eax,[rbp+0]", "mov~r8,rdx", "lea~rcx,<TAG>", "mov~edx,0", "mov~edi,eax", "call~FOO"]]], "func_feature": [79, 41, 232, 2, 189, 308, 1, 866, 0.02543, 99, 20], "succs": [[9, 22], [0], [0], [10, 14], [49, 3], [53], [5, 62], [32], [130, 134, 7, 136, 137, 138, 139, 140, 141, 142, 15, 16, 145, 146, 147, 148, 149, 150, 151, 152, 25, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 37, 135, 44, 185, 60, 63, 66, 70, 77, 79, 82, 84, 88, 89, 90, 143, 95, 96, 144, 99, 102, 103, 109, 111, 112, 115, 153, 122, 125], [24, 17], [49, 14], [179, 119], [11, 13], [11], [48, 21], [32], [26, 31], [24, 22], [104], [18, 34], [48, 49], [48, 20], [46], [12, 13], [46], [32], [31], [51, 38], [27, 180], [27], [27], [27], [27], [27], [104], [], [35], [32], [41, 23], [19, 36], [106, 39], [119], [43], [42, 52], [32], [117], [45, 117], [72, 78], [47], [47], [43], [8, 112], [64], [52], [52], [52], [52], [52], [52], [50, 52], [30, 87], [73], [73, 61], [32], [74], [64, 178], [91, 92], [131, 69], [67], [67], [], [56, 54], [78], [53], [80, 76], [74], [], [32], [131, 68], [83, 124], [], [32], [81, 188], [85, 86], [32], [123], [123], [89], [32], [32], [32], [97], [97], [168, 177], [93, 6], [32], [32], [98, 107], [108, 110], [32], [169, 65], [169, 100], [32], [32], [113, 172], [104], [104], [160], [107, 110], [129, 114], [160], [32], [], [120, 172], [116, 118], [32], [121], [32], [121], [49, 4], [172, 167], [129], [32], [], [123], [32], [128, 101], [128, 126], [101], [32], [32], [101, 127], [133], [132, 173], [32], [32], [32], [32], [32], [32], [32], [32], [32], [32], [32], [32], [32], [32], [32], [32], [32], [32], [32], [32], [32], [32], [32], [32], [32], [32], [32], [32], [32], [32], [32], [184], [184, 165], [172], [133], [65, 171], [65], [65, 170], [28, 174], [], [28, 175], [28], [181, 71], [176, 57], [184, 166], [119], [33, 29], [58, 182], [59, 55], [75, 187], [94, 183], [1, 2], [40, 105], [184], []], "fname": "decode_switches", "n_num": 189}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 58, 0, 0, 2, 1, 1, 0, 0, 0.056563823351482155, ["test    eax, eax", "jz      short loc_6515"], ["test~eax,eax", "jz~FOO"]], [1, 0, 58, 0, 0, 2, 0, 1, 5, 5, 0.14640048396854205, ["cmp     eax, 3Dh ; '='", "jg      short loc_6509"], ["cmp~eax,0", "jg~FOO"]], [2, 0, 58, 3, 0, 11, 0, 1, 6, 3, 0.004007864488808228, ["movzx   eax, [rbp+num]; jumptable 00000000000066DC cases 48-57", "shl     eax, 4", "mov     ecx, eax", "mov     rax, [rbp+p]", "lea     rdx, [rax+1]", "mov     [rbp+p], rdx", "movzx   eax, byte ptr [rax]", "add     eax, ecx", "sub     eax, 30h ; '0'", "mov     [rbp+num], al", "jmp     short loc_6763"], ["movzx~eax,[rbp+0]", "shl~eax,0", "mov~ecx,eax", "mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "movzx~eax,<TAG>", "add~eax,ecx", "sub~eax,0", "mov~[rbp+0],al", "jmp~FOO"]], [0, 0, 58, 1, 0, 8, 0, 1, 5, 4, 0.04990925589836661, ["mov     eax, eax", "lea     rdx, ds:0[rax*4]", "lea     rax, off_1D554", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_1D554", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,eax", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [0, 1, 58, 0, 0, 2, 0, 1, 6, 4, 0.0009290467548180798, ["mov     [rbp+num], 20h ; ' '; jumptable 00000000000065A5 case 95", "jmp     short loc_661A"], ["mov~[rbp+0],<STR>", "jmp~FOO"]], [0, 0, 58, 1, 0, 8, 0, 1, 5, 5, 0.2162734422262553, ["mov     eax, eax", "lea     rdx, ds:0[rax*4]", "lea     rax, off_1D370", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_1D370", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,eax", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [0, 1, 58, 0, 0, 2, 0, 1, 7, 4, 0.017090139140955838, ["cmp     eax, 3Ah ; ':'", "jz      short loc_6515"], ["cmp~eax,<STR>", "jz~FOO"]], [0, 0, 58, 0, 0, 1, 0, 1, 8, 4, 0.0007562008469449487, ["jmp     short loc_6549"], ["jmp~FOO"]], [1, 0, 58, 0, 0, 2, 0, 1, 6, 4, 0.0009290467548180798, ["mov     [rbp+num], 0Dh; jumptable 00000000000065A5 case 114", "jmp     short loc_661A"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 58, 0, 0, 2, 0, 1, 6, 4, 0.07320024198427103, ["cmp     eax, 5Ch ; '\\'", "jz      short loc_651E"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 58, 0, 0, 2, 0, 1, 6, 4, 0.0009290467548180798, ["mov     [rbp+state], 6; jumptable 00000000000065A5 case 0", "jmp     short loc_661A"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 58, 0, 0, 2, 0, 1, 7, 4, 0.03372655777374471, ["cmp     eax, 5Eh ; '^'", "jz      short loc_652C"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 58, 0, 0, 1, 0, 1, 8, 4, 0.0007562008469449487, ["jmp     short loc_6549"], ["jmp~FOO"]], [0, 0, 58, 0, 0, 4, 0, 0, 5, 4, 0.04902342062051681, ["mov     rax, [rbp+p]; jumptable 00000000000065A5 default case", "movzx   eax, byte ptr [rax]", "mov     [rbp+num], al", "nop"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "mov~[rbp+0],al", "nop"]], [1, 0, 58, 0, 0, 5, 0, 1, 4, 5, 0.28070175438596495, ["mov     rax, [rbp+p]; jumptable 00000000000064E8 case 1", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "cmp     eax, 78h ; 'x'; switch 121 cases", "ja      loc_660F; jumptable 00000000000065A5 default case"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "movsx~eax,al", "cmp~eax,0", "ja~FOO"]], [1, 0, 58, 0, 0, 2, 0, 1, 7, 3, 0.03947368421052632, ["mov     [rbp+state], 5", "jmp     short loc_656C"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 58, 2, 0, 9, 0, 0, 6, 3, 0.008318209316394435, ["movzx   eax, [rbp+num]", "lea     ecx, ds:0[rax*8]", "mov     rax, [rbp+p]", "lea     rdx, [rax+1]", "mov     [rbp+p], rdx", "movzx   eax, byte ptr [rax]", "add     eax, ecx", "sub     eax, 30h ; '0'", "mov     [rbp+num], al"], ["movzx~eax,[rbp+0]", "lea~ecx,<TAG>", "mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "movzx~eax,<TAG>", "add~eax,ecx", "sub~eax,0", "mov~[rbp+0],al"]], [1, 0, 58, 0, 0, 4, 0, 1, 5, 4, 0.01663641863278887, ["mov     rax, [rbp+p]", "movzx   eax, byte ptr [rax]", "cmp     al, 37h ; '7'", "jle     short loc_667E"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jle~FOO"]], [1, 0, 58, 0, 0, 2, 0, 1, 6, 3, 0.2855414398064126, ["cmp     [rbp+state], 1", "jnz     short loc_663E"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 58, 1, 0, 6, 0, 1, 6, 4, 0.0009290467548180798, ["mov     [rbp+state], 2; jumptable 00000000000065A5 cases 48-55", "mov     rax, [rbp+p]", "movzx   eax, byte ptr [rax]", "sub     eax, 30h ; '0'", "mov     [rbp+num], al", "jmp     short loc_661A"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "sub~eax,0", "mov~[rbp+0],al", "jmp~FOO"]], [2, 0, 58, 0, 0, 3, 0, 1, 6, 4, 0.0009290467548180798, ["mov     [rbp+state], 3; jumptable 00000000000065A5 cases 88,120", "mov     [rbp+num], 0", "jmp     short loc_661A"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 58, 0, 0, 2, 0, 1, 6, 4, 0.0009290467548180798, ["mov     [rbp+num], 7; jumptable 00000000000065A5 case 97", "jmp     short loc_661A"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 58, 0, 0, 2, 0, 1, 6, 4, 0.0009290467548180798, ["mov     [rbp+num], 8; jumptable 00000000000065A5 case 98", "jmp     short loc_661A"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 58, 0, 0, 2, 0, 1, 6, 4, 0.0009290467548180798, ["mov     [rbp+num], 1Bh; jumptable 00000000000065A5 case 101", "jmp     short loc_661A"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 58, 0, 0, 2, 0, 1, 6, 4, 0.0009290467548180798, ["mov     [rbp+num], 0Ch; jumptable 00000000000065A5 case 102", "jmp     short loc_661A"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 58, 0, 0, 2, 0, 1, 6, 4, 0.0009290467548180798, ["mov     [rbp+num], 0Ah; jumptable 00000000000065A5 case 110", "jmp     short loc_661A"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 58, 0, 0, 2, 0, 1, 6, 4, 0.0009290467548180798, ["mov     [rbp+num], 9; jumptable 00000000000065A5 case 116", "jmp     short loc_661A"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 58, 0, 0, 2, 0, 1, 6, 4, 0.0009290467548180798, ["mov     [rbp+num], 0Bh; jumptable 00000000000065A5 case 118", "jmp     short loc_661A"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 58, 0, 0, 2, 0, 1, 6, 4, 0.0009290467548180798, ["mov     [rbp+num], 7Fh; jumptable 00000000000065A5 case 63", "jmp     short loc_661A"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 58, 0, 0, 1, 0, 1, 6, 2, 0.06684815486993347, ["jmp     loc_67DA"], ["jmp~FOO"]], [2, 0, 58, 1, 0, 8, 0, 1, 5, 3, 0.040986085904416214, ["mov     rax, [rbp+q]", "lea     rdx, [rax+1]", "mov     [rbp+q], rdx", "movzx   edx, [rbp+num]", "mov     [rax], dl", "add     [rbp+count], 1", "mov     [rbp+state], 0", "jmp     short loc_66A0"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "movzx~edx,[rbp+0]", "mov~<TAG>,dl", "add~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 1, 58, 1, 0, 6, 0, 1, 4, 4, 0.09770114942528736, ["mov     rax, [rbp+p]; jumptable 00000000000064E8 case 3", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "sub     eax, 30h ; '0'; switch 55 cases", "cmp     eax, 36h ; '6'", "ja      loc_6744; jumptable 00000000000066DC default case"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "movsx~eax,al", "sub~eax,0", "cmp~eax,<STR>", "ja~FOO"]], [2, 0, 58, 1, 0, 3, 0, 1, 7, 3, 0.02283726557773745, ["mov     [rbp+state], 1", "add     [rbp+p], 1", "jmp     short loc_656C"], ["mov~[rbp+0],0", "add~[rbp+0],0", "jmp~FOO"]], [1, 0, 58, 0, 0, 4, 0, 1, 5, 3, 0.06503327283726558, ["mov     rax, [rbp+p]", "movzx   eax, byte ptr [rax]", "cmp     al, 3Fh ; '?'", "jnz     short loc_67CC"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [2, 0, 58, 0, 0, 5, 0, 1, 4, 4, 0.09739866908650939, ["mov     [rbp+state], 0; jumptable 00000000000064E8 case 4", "mov     rax, [rbp+p]", "movzx   eax, byte ptr [rax]", "cmp     al, 3Fh ; '?'", "jle     short loc_67AB"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jle~FOO"]], [1, 0, 58, 0, 0, 4, 0, 1, 5, 4, 0.024500907441016337, ["mov     rax, [rbp+p]", "movzx   eax, byte ptr [rax]", "cmp     al, 7Fh", "jz      short loc_67AB"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [0, 0, 58, 1, 0, 8, 0, 1, 3, 5, 0.8290986085904417, ["mov     eax, [rbp+state]", "lea     rdx, ds:0[rax*4]", "lea     rax, off_1D35C", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_1D35C", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,[rbp+0]", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [4, 0, 58, 1, 0, 18, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+dest], rdi", "mov     [rbp+src], rsi", "mov     eax, edx", "mov     [rbp+output_count], rcx", "mov     [rbp+equals_end], al", "mov     rax, [rbp+src]", "mov     rax, [rax]", "mov     [rbp+p], rax", "mov     rax, [rbp+dest]", "mov     rax, [rax]", "mov     [rbp+q], rax", "mov     [rbp+count], 0", "mov     [rbp+num], 0", "mov     [rbp+state], 0", "jmp     loc_67DA"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~eax,edx", "mov~[rbp+0],rcx", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 58, 1, 0, 3, 0, 1, 8, 3, 0.01633393829401089, ["mov     [rbp+state], 4", "add     [rbp+p], 1", "jmp     short loc_656C"], ["mov~[rbp+0],0", "add~[rbp+0],0", "jmp~FOO"]], [1, 0, 58, 0, 0, 2, 0, 1, 5, 4, 0.05716878402903812, ["cmp     [rbp+equals_end], 0", "jz      short loc_6549"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 58, 0, 0, 5, 0, 1, 4, 5, 0.22020568663036905, ["mov     rax, [rbp+p]; jumptable 00000000000064E8 case 0", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "cmp     eax, 3Dh ; '='", "jz      short loc_653A"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "movsx~eax,al", "cmp~eax,0", "jz~FOO"]], [1, 0, 58, 0, 0, 2, 0, 1, 2, 6, 0.8460375075620086, ["cmp     [rbp+state], 4; switch 5 cases", "ja      loc_67D5; jumptable 00000000000064E8 default case"], ["cmp~[rbp+0],0", "ja~FOO"]], [1, 0, 58, 0, 0, 2, 0, 0, 1, 1, 0.8629764065335754, ["cmp     [rbp+state], 4", "jbe     loc_64BC"], ["cmp~[rbp+0],0", "jbe~FOO"]], [2, 0, 58, 3, 0, 11, 0, 1, 6, 3, 0.004007864488808228, ["movzx   eax, [rbp+num]; jumptable 00000000000066DC cases 97-102", "shl     eax, 4", "mov     ecx, eax", "mov     rax, [rbp+p]", "lea     rdx, [rax+1]", "mov     [rbp+p], rdx", "movzx   eax, byte ptr [rax]", "add     eax, ecx", "sub     eax, 57h ; 'W'", "mov     [rbp+num], al", "jmp     short loc_6763"], ["movzx~eax,[rbp+0]", "shl~eax,0", "mov~ecx,eax", "mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "movzx~eax,<TAG>", "add~eax,ecx", "sub~eax,0", "mov~[rbp+0],al", "jmp~FOO"]], [2, 0, 58, 3, 0, 11, 0, 1, 6, 3, 0.004007864488808228, ["movzx   eax, [rbp+num]; jumptable 00000000000066DC cases 65-70", "shl     eax, 4", "mov     ecx, eax", "mov     rax, [rbp+p]", "lea     rdx, [rax+1]", "mov     [rbp+p], rdx", "movzx   eax, byte ptr [rax]", "add     eax, ecx", "sub     eax, 37h ; '7'", "mov     [rbp+num], al", "jmp     short loc_6763"], ["movzx~eax,[rbp+0]", "shl~eax,0", "mov~ecx,eax", "mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "movzx~eax,<TAG>", "add~eax,ecx", "sub~eax,0", "mov~[rbp+0],al", "jmp~FOO"]], [1, 0, 58, 1, 0, 2, 0, 1, 7, 2, 0.28614640048396855, ["add     [rbp+p], 1", "jmp     loc_67DA"], ["add~[rbp+0],0", "jmp~FOO"]], [2, 0, 58, 1, 0, 7, 0, 0, 7, 3, 0.0, ["mov     rax, [rbp+q]", "lea     rdx, [rax+1]", "mov     [rbp+q], rdx", "movzx   edx, [rbp+num]", "mov     [rax], dl", "add     [rbp+count], 1", "mov     [rbp+state], 0"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "movzx~edx,[rbp+0]", "mov~<TAG>,dl", "add~[rbp+0],0", "mov~[rbp+0],0"]], [1, 0, 58, 0, 0, 2, 0, 1, 6, 3, 0.02132486388384755, ["mov     [rbp+state], 5", "jmp     short loc_656C"], ["mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 58, 1, 0, 6, 0, 1, 6, 2, 0.04022988505747127, ["mov     rax, [rbp+q]", "lea     rdx, [rax+1]", "mov     [rbp+q], rdx", "mov     byte ptr [rax], 7Fh", "add     [rbp+count], 1", "jmp     short loc_67DA"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~<TAG>,0", "add~[rbp+0],0", "jmp~FOO"]], [1, 0, 58, 0, 0, 1, 0, 0, 6, 3, 0.008166969147005446, ["mov     [rbp+state], 6"], ["mov~[rbp+0],0"]], [1, 0, 0, 0, 0, 13, 0, 0, 2, 0, 0.0, ["mov     rax, [rbp+dest]", "mov     rdx, [rbp+q]", "mov     [rax], rdx", "mov     rax, [rbp+src]", "mov     rdx, [rbp+p]", "mov     [rax], rdx", "mov     rax, [rbp+output_count]", "mov     rdx, [rbp+count]", "mov     [rax], rdx", "cmp     [rbp+state], 6", "setnz   al", "leave", "retn"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "cmp~[rbp+0],0", "setnz~al", "leave", "retn"]], [1, 0, 58, 0, 0, 4, 0, 1, 4, 4, 0.06563823351482154, ["mov     rax, [rbp+p]; jumptable 00000000000064E8 case 2", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jle     short loc_665E"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jle~FOO"]], [0, 0, 58, 0, 0, 1, 0, 1, 7, 2, 0.041742286751361164, ["jmp     short loc_67DA"], ["jmp~FOO"]], [2, 0, 58, 1, 0, 12, 1, 1, 6, 3, 0.016031457955232913, ["mov     rax, [rbp+p]", "lea     rdx, [rax+1]", "mov     [rbp+p], rdx", "movzx   ecx, byte ptr [rax]", "mov     rax, [rbp+q]", "lea     rdx, [rax+1]", "mov     [rbp+q], rdx", "and     ecx, 1Fh", "mov     edx, ecx", "mov     [rax], dl", "add     [rbp+count], 1", "jmp     short loc_67D3"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "movzx~ecx,<TAG>", "mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "and~ecx,0", "mov~edx,ecx", "mov~<TAG>,dl", "add~[rbp+0],0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    _abort; jumptable 00000000000064E8 default case"], ["call~FOO"]], [0, 0, 58, 0, 0, 1, 0, 1, 7, 2, 0.22444041137326076, ["jmp     loc_67DA"], ["jmp~FOO"]], [0, 0, 58, 0, 0, 1, 0, 1, 6, 2, 0.09951603145795523, ["jmp     short loc_67DA"], ["jmp~FOO"]], [2, 0, 58, 1, 0, 8, 0, 0, 5, 3, 0.03546581972171809, ["mov     rax, [rbp+q]; jumptable 00000000000066DC default case", "lea     rdx, [rax+1]", "mov     [rbp+q], rdx", "movzx   edx, [rbp+num]", "mov     [rax], dl", "add     [rbp+count], 1", "mov     [rbp+state], 0", "nop"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "movzx~edx,[rbp+0]", "mov~<TAG>,dl", "add~[rbp+0],0", "mov~[rbp+0],0", "nop"]], [1, 0, 58, 1, 0, 10, 0, 0, 6, 3, 0.05520266182698125, ["mov     rdx, [rbp+p]", "lea     rax, [rdx+1]", "mov     [rbp+p], rax", "mov     rax, [rbp+q]", "lea     rcx, [rax+1]", "mov     [rbp+q], rcx", "movzx   edx, byte ptr [rdx]", "mov     [rax], dl", "add     [rbp+count], 1", "nop"], ["mov~rdx,[rbp+0]", "lea~rax,[rdx+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "lea~rcx,[rax+0]", "mov~[rbp+0],rcx", "movzx~edx,<TAG>", "mov~<TAG>,dl", "add~[rbp+0],0", "nop"]]], "func_feature": [1, 2, 51, 0, 59, 94, 3, 258, 0.09219, 3, 26], "succs": [[6, 15], [0, 9], [56], [57, 2, 43, 44], [18], [4, 8, 10, 13, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], [15, 7], [58], [18], [32, 11], [18], [12, 38], [58], [18], [13, 5], [55], [29], [16, 30], [45, 46], [18], [18], [18], [18], [18], [18], [18], [18], [18], [18], [42], [29], [57, 3], [55], [48, 49], [33, 35], [33, 53], [40, 34, 51, 14, 31], [42], [55], [58, 47], [1, 39], [36, 54], [41, 50], [56], [56], [42], [45], [55], [42], [52], [], [17, 30], [42], [52], [], [42], [42], [56], [55]], "fname": "get_funky_string", "n_num": 59}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 7, 2, 1, 5, 0, 1, 0, 0, 0.05555555555555556, ["mov     rax, [rbp+line]", "mov     rdi, rax; s", "call    _strlen", "add     rax, 1", "add     [rbp+line], rax"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "add~rax,0", "add~[rbp+0],rax"]], [1, 0, 7, 0, 1, 7, 1, 2, 4, 3, 0.15555555555555556, ["mov     rax, [rbp+line]", "mov     edx, 5; n", "lea     rsi, aTerm_0; \"TERM \"", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_6892"], ["mov~rax,[rbp+0]", "mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 7, 0, 1, 9, 1, 2, 5, 2, 0.07777777777777778, ["mov     rax, [rbp+line]", "lea     rcx, [rax+5]", "mov     rax, [rbp+term]", "mov     edx, 0; flags", "mov     rsi, rax; name", "mov     rdi, rcx; pattern", "call    _fnmatch", "test    eax, eax", "jnz     short loc_6892"], ["mov~rax,[rbp+0]", "lea~rcx,[rax+0]", "mov~rax,[rbp+0]", "mov~edx,0", "mov~rsi,rax", "mov~rdi,rcx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.022222222222222223, ["mov     eax, 0", "jmp     locret_68C4"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 6, 1, 0.022222222222222223, ["mov     eax, 1", "jmp     short locret_68C4"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 4, 1, 0.03333333333333333, ["mov     eax, 0"], ["mov~eax,0"]], [2, 0, 10, 1, 1, 8, 0, 2, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "lea     rdi, aTerm; \"TERM\"", "call    _getenv", "mov     [rbp+term], rax", "cmp     [rbp+term], 0", "jz      short loc_6838"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "lea~rdi,<TAG>", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 2, 3, 0.13333333333333333, ["lea     rax, G_line", "mov     [rbp+line], rax", "jmp     short loc_68A6"], ["lea~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 9, 0, 0, 4, 1, 1, 1, 2, 0.07777777777777778, ["mov     rax, [rbp+term]", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_6842"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [1, 0, 7, 1, 0, 6, 0, 0, 3, 2, 0.26666666666666666, ["mov     rdx, [rbp+line]", "lea     rax, G_line", "sub     rdx, rax", "mov     rax, rdx", "cmp     rax, 10C3h", "jbe     short loc_684F"], ["mov~rdx,[rbp+0]", "lea~rax,<TAG>", "sub~rdx,rax", "mov~rax,rdx", "cmp~rax,0", "jbe~FOO"]]], "func_feature": [4, 3, 11, 0, 11, 15, 1, 49, 0.07677, 3, 4], "succs": [[10], [0, 2], [0, 5], [], [3], [3], [3], [9, 4], [10], [8, 4], [1, 6]], "fname": "known_term_type", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 55, 0, 0, 4, 1, 1, 0, 0, 0.01525974025974026, ["mov     rax, [rbp+p]", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_6944"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 1, 56, 1, 1, 13, 2, 2, 0, 5, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rbp+var_18], rax", "xor     eax, eax", "lea     rdi, aLsColors; \"LS_COLORS\"", "call    _getenv", "mov     [rbp+p], rax", "mov     rax, [rbp+p]", "test    rax, rax", "jz      short loc_6902"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "lea~rdi,<TAG>", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 49, 0, 0, 4, 1, 1, 5, 9, 0.024350649350649352, ["mov     rax, [rbp+p]; jumptable 00000000000069A7 case 2", "movzx   eax, byte ptr [rax]", "test    al, al", "jz      short loc_6AA0"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 49, 1, 0, 8, 0, 1, 4, 5, 0.4818181818181818, ["mov     eax, [rbp+state]", "lea     rdx, ds:0[rax*4]", "lea     rax, off_1D6A4", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_1D6A4", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,[rbp+0]", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 49, 0, 0, 6, 0, 1, 5, 9, 0.0573051948051948, ["mov     rax, [rbp+p]; jumptable 00000000000069A7 case 4", "lea     rdx, [rax+1]", "mov     [rbp+p], rdx", "movzx   eax, byte ptr [rax]", "cmp     al, 3Dh ; '='", "jnz     short loc_6C19"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [1, 0, 49, 0, 1, 13, 1, 2, 6, 10, 0.03441558441558441, ["mov     rdx, [rbp+buf]", "mov     rax, [rbp+ext]", "mov     [rax+18h], rdx", "mov     rax, [rbp+ext]", "lea     rdx, [rax+10h]", "lea     rsi, [rbp+p]; src", "lea     rax, [rbp+buf]", "mov     rcx, rdx; output_count", "mov     edx, 0; equals_end", "mov     rdi, rax; dest", "call    get_funky_string", "test    al, al", "jz      short loc_6C0F"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "lea~rsi,[rbp+0]", "lea~rax,[rbp+0]", "mov~rcx,rdx", "mov~edx,0", "mov~rdi,rax", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 49, 0, 0, 2, 0, 1, 8, 9, 0.12142857142857143, ["cmp     [rbp+state], 6", "jnz     loc_6C27"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 49, 0, 0, 2, 0, 1, 11, 10, 0.04512987012987013, ["mov     [rbp+state], eax", "jmp     short loc_6B84"], ["mov~[rbp+0],eax", "jmp~FOO"]], [0, 0, 49, 0, 0, 7, 1, 1, 7, 10, 0.12597402597402596, ["mov     eax, [rbp+ind_no]", "cdqe", "lea     rdx, ds:0[rax*8]", "lea     rax, indicator_name", "mov     rax, [rdx+rax]", "test    rax, rax", "jnz     loc_6AD6"], ["mov~eax,[rbp+0]", "cdqe~", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [0, 0, 49, 0, 0, 2, 0, 1, 8, 8, 0.04512987012987013, ["mov     [rbp+state], eax", "jmp     short loc_6C28"], ["mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 49, 0, 0, 2, 0, 1, 7, 9, 0.012987012987012988, ["mov     eax, 1", "jmp     short loc_6C14"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 49, 0, 0, 1, 0, 0, 7, 9, 0.012987012987012988, ["mov     eax, 6"], ["mov~eax,0"]], [0, 0, 9, 0, 1, 8, 0, 1, 9, 5, 0.0, ["mov     rax, [rbp+e]", "mov     [rbp+e2], rax", "mov     rax, [rbp+e]", "mov     rax, [rax+20h]", "mov     [rbp+e], rax", "mov     rax, [rbp+e2]", "mov     rdi, rax; ptr", "call    free"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 8, 4, 0.03149350649350649, ["cmp     [rbp+e], 0", "jnz     short loc_6C73"], ["cmp~[rbp+0],0", "jnz~FOO"]], [3, 0, 9, 0, 3, 13, 0, 4, 7, 5, 0.039935064935064934, ["lea     rdi, aUnparsableValu; \"unparsable value for LS_COLORS environm\"...", "call    _gettext", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     rax, cs:color_buf", "mov     rdi, rax; ptr", "call    free", "mov     rax, cs:color_ext_list", "mov     [rbp+e], rax", "jmp     short loc_6C93"], ["lea~rdi,<TAG>", "call~FOO", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 7, 0, 1, 5, 0, 2, 1, 4, 0.004545454545454545, ["lea     rdi, aColorterm; \"COLORTERM\"", "call    _getenv", "mov     [rbp+colorterm], rax", "cmp     [rbp+colorterm], 0", "jz      short loc_6928"], ["lea~rdi,<TAG>", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 6, 3, 0.1279220779220779, ["cmp     [rbp+state], 6", "jnz     short loc_6CA1"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 8, 4, 0.010714285714285714, ["mov     [rbp+state], 5", "jmp     done"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 11, 0, 0, 1, 0, 0, 5, 4, 0.12305194805194805, ["nop; jumptable 00000000000069A7 case 6"], ["nop"]], [1, 0, 6, 0, 0, 1, 0, 0, 9, 3, 0.005844155844155844, ["mov     cs:print_with_color, 0"], ["mov~<TAG>,0"]], [1, 0, 49, 0, 0, 7, 0, 1, 6, 8, 0.007954545454545454, ["mov     rax, [rbp+p]", "lea     rdx, [rax+1]", "mov     [rbp+p], rdx", "movzx   eax, byte ptr [rax]", "mov     [rbp+label+1], al", "mov     [rbp+state], 3", "jmp     loc_6C28"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "movzx~eax,<TAG>", "mov~[rbp+0],al", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 3, 2, 0.005844155844155844, ["nop"], ["nop"]], [0, 0, 6, 0, 0, 4, 1, 1, 2, 3, 0.001948051948051948, ["mov     rax, [rbp+colorterm]", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     loc_6CD6"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [1, 0, 5, 0, 1, 4, 2, 2, 2, 3, 0.003246753246753247, ["call    known_term_type", "xor     eax, 1", "test    al, al", "jz      loc_6CD6"], ["call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 3, 3, 0.0, ["mov     cs:print_with_color, 0", "jmp     loc_6CD6"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 49, 0, 0, 2, 0, 1, 6, 8, 0.014448051948051948, ["mov     [rbp+state], 6", "jmp     short loc_6C28"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 49, 0, 0, 2, 0, 1, 3, 6, 0.4902597402597403, ["cmp     [rbp+state], 6; switch 7 cases", "ja      loc_6C22; jumptable 00000000000069A7 default case"], ["cmp~[rbp+0],0", "ja~FOO"]], [0, 0, 49, 0, 0, 1, 0, 1, 7, 7, 0.4409090909090909, ["jmp     loc_697B"], ["jmp~FOO"]], [0, 0, 49, 0, 0, 1, 0, 1, 8, 8, 0.1340909090909091, ["jmp     loc_6C28"], ["jmp~FOO"]], [1, 0, 49, 0, 0, 2, 0, 1, 6, 8, 0.007954545454545454, ["mov     [rbp+state], 6", "jmp     loc_6C28"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 49, 0, 0, 1, 0, 0, 6, 8, 0.14983766233766233, ["nop"], ["nop"]], [0, 1, 0, 1, 0, 4, 0, 0, 5, 0, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 4, 1, 0.03441558441558441, ["mov     rax, [rbp+var_18]", "xor     rax, fs:28h", "jz      short loc_6CEB"], ["mov~rax,[rbp+0]", "xor~rax,<TAG>", "jz~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 7, 2, 0.0711038961038961, ["mov     rax, qword ptr cs:unk_2260F0", "cmp     rax, 6", "jnz     short loc_6CD7"], ["mov~rax,<TAG>", "cmp~rax,0", "jnz~FOO"]], [0, 0, 49, 0, 1, 11, 1, 2, 8, 12, 0.056818181818181816, ["mov     eax, [rbp+ind_no]", "cdqe", "lea     rdx, ds:0[rax*8]", "lea     rax, indicator_name", "mov     rdx, [rdx+rax]", "lea     rax, [rbp+label]", "mov     rsi, rdx; s2", "mov     rdi, rax; s1", "call    strcmp", "test    eax, eax", "jnz     short loc_6B5F"], ["mov~eax,[rbp+0]", "cdqe~", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~rdx,<TAG>", "lea~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 49, 0, 0, 5, 0, 1, 5, 7, 0.12142857142857143, ["mov     rax, [rbp+p]; jumptable 00000000000069A7 case 1", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "cmp     eax, 2Ah ; '*'", "jz      short loc_69DB"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "movsx~eax,al", "cmp~eax,0", "jz~FOO"]], [3, 0, 49, 1, 2, 23, 1, 3, 6, 11, 0.03441558441558441, ["mov     edi, 28h ; '('; n", "call    xmalloc", "mov     [rbp+ext], rax", "mov     rdx, cs:color_ext_list", "mov     rax, [rbp+ext]", "mov     [rax+20h], rdx", "mov     rax, [rbp+ext]", "mov     cs:color_ext_list, rax", "mov     rax, [rbp+p]", "add     rax, 1", "mov     [rbp+p], rax", "mov     rdx, [rbp+buf]", "mov     rax, [rbp+ext]", "mov     [rax+8], rdx", "mov     rdx, [rbp+ext]", "lea     rsi, [rbp+p]; src", "lea     rax, [rbp+buf]", "mov     rcx, rdx; output_count", "mov     edx, 1; equals_end", "mov     rdi, rax; dest", "call    get_funky_string", "test    al, al", "jz      short loc_6A42"], ["mov~edi,0", "call~FOO", "mov~[rbp+0],rax", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~<TAG>,rax", "mov~rax,[rbp+0]", "add~rax,0", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rdx,[rbp+0]", "lea~rsi,[rbp+0]", "lea~rax,[rbp+0]", "mov~rcx,rdx", "mov~edx,0", "mov~rdi,rax", "call~FOO", "test~al,al", "jz~FOO"]], [0, 1, 49, 0, 0, 2, 0, 1, 6, 6, 0.07857142857142857, ["cmp     eax, 3Ah ; ':'", "jz      short loc_69CA"], ["cmp~eax,<STR>", "jz~FOO"]], [0, 0, 49, 0, 0, 2, 1, 1, 7, 5, 0.04220779220779221, ["test    eax, eax", "jz      loc_6A4C"], ["test~eax,eax", "jz~FOO"]], [1, 0, 49, 0, 0, 2, 0, 1, 7, 10, 0.012987012987012988, ["mov     eax, 4", "jmp     short loc_6A47"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 49, 0, 0, 1, 0, 0, 7, 10, 0.012987012987012988, ["mov     eax, 6"], ["mov~eax,0"]], [3, 0, 49, 0, 3, 13, 0, 4, 9, 9, 0.0, ["lea     rax, [rbp+label]", "mov     rdi, rax; arg", "call    quote", "mov     rbx, rax", "lea     rdi, aUnrecognizedPr; \"unrecognized prefix: %s\"", "call    _gettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     short loc_6C27"], ["lea~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rbx,rax", "lea~rdi,<TAG>", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [2, 0, 49, 0, 0, 7, 0, 1, 5, 9, 0.11055194805194805, ["mov     [rbp+state], 6; jumptable 00000000000069A7 case 3", "mov     rax, [rbp+p]", "lea     rdx, [rax+1]", "mov     [rbp+p], rdx", "movzx   eax, byte ptr [rax]", "cmp     al, 3Dh ; '='", "jnz     loc_6C27"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [0, 0, 49, 0, 0, 1, 0, 1, 8, 10, 0.022727272727272728, ["jmp     loc_6A58"], ["jmp~FOO"]], [0, 0, 49, 0, 0, 2, 0, 1, 8, 9, 0.04512987012987013, ["mov     [rbp+state], eax", "jmp     short loc_6A72"], ["mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 4, 0, 1, 7, 1, 2, 8, 2, 0.014935064935064935, ["mov     rax, cs:off_2260F8", "mov     edx, 6; n", "lea     rsi, aTarget; \"target\"", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_6CD7"], ["mov~rax,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [3, 0, 49, 3, 1, 21, 1, 2, 9, 12, 0.03441558441558441, ["mov     rdx, [rbp+buf]", "mov     eax, [rbp+ind_no]", "cdqe", "shl     rax, 4", "mov     rcx, rax", "lea     rax, s1", "mov     [rcx+rax], rdx", "mov     eax, [rbp+ind_no]", "cdqe", "shl     rax, 4", "mov     rdx, rax", "lea     rax, color_indicator", "add     rdx, rax", "lea     rsi, [rbp+p]; src", "lea     rax, [rbp+buf]", "mov     rcx, rdx; output_count", "mov     edx, 0; equals_end", "mov     rdi, rax; dest", "call    get_funky_string", "test    al, al", "jz      short loc_6B55"], ["mov~rdx,[rbp+0]", "mov~eax,[rbp+0]", "cdqe~", "shl~rax,0", "mov~rcx,rax", "lea~rax,<TAG>", "mov~<TAG>,rdx", "mov~eax,[rbp+0]", "cdqe~", "shl~rax,0", "mov~rdx,rax", "lea~rax,<TAG>", "add~rdx,rax", "lea~rsi,[rbp+0]", "lea~rax,[rbp+0]", "mov~rcx,rdx", "mov~edx,0", "mov~rdi,rax", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    _abort; jumptable 00000000000069A7 default case"], ["call~FOO"]], [1, 0, 49, 0, 0, 2, 0, 1, 6, 11, 0.09285714285714286, ["mov     [rbp+ind_no], 0", "jmp     loc_6B63"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 9, 2, 0.0, ["mov     cs:color_symlink_as_referent, 1", "jmp     short loc_6CD7"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 49, 0, 0, 1, 0, 0, 10, 11, 0.012987012987012988, ["mov     eax, 6"], ["mov~eax,0"]], [1, 0, 49, 1, 0, 4, 0, 1, 7, 9, 0.02792207792207792, ["mov     rax, [rbp+p]", "add     rax, 1", "mov     [rbp+p], rax", "jmp     loc_6A72"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 49, 0, 0, 2, 0, 1, 10, 11, 0.012987012987012988, ["mov     eax, 1", "jmp     short loc_6B5A"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 49, 1, 0, 1, 0, 0, 9, 11, 0.01396103896103896, ["add     [rbp+ind_no], 1"], ["add~[rbp+0],0"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 49, 0, 0, 7, 0, 0, 9, 9, 0.026298701298701297, ["mov     rax, [rbp+p]", "lea     rdx, [rax+1]", "mov     [rbp+p], rdx", "movzx   eax, byte ptr [rax]", "mov     [rbp+label], al", "mov     [rbp+state], 2", "nop"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "movzx~eax,<TAG>", "mov~[rbp+0],al", "mov~[rbp+0],0", "nop"]], [3, 1, 49, 0, 1, 10, 0, 1, 2, 7, 0.02987012987012987, ["mov     [rbp+ext], 0", "mov     word ptr [rbp+label], 3F3Fh", "mov     [rbp+label+2], 0", "mov     rax, [rbp+p]", "mov     rdi, rax; string", "call    xstrdup", "mov     cs:color_buf, rax", "mov     rax, cs:color_buf", "mov     [rbp+buf], rax", "mov     [rbp+state], 1"], ["mov~[rbp+0],0", "mov~[ord ptr [rbp+0],<STR>", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~<TAG>,rax", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~[rbp+0],0"]]], "func_feature": [19, 15, 62, 1, 57, 82, 1, 263, 0.06116, 16, 9], "succs": [[56, 15], [0, 15], [20, 29], [2, 35, 4, 42, 47, 18], [25, 5], [10, 11], [41, 30], [6], [34, 6], [27], [9], [9], [13], [19, 12], [13], [22, 23], [33, 14], [16], [16], [33], [27], [32], [21, 23], [24, 21], [21], [27], [3, 47], [26], [27], [27], [27], [], [54, 31], [32, 45], [53, 46], [36, 37], [40, 39], [51, 38], [17, 43], [44], [44], [30], [48, 30], [55], [28], [32, 49], [50, 52], [], [8], [32], [7], [28], [7], [8], [], [28], [26]], "fname": "parse_ls_color", "n_num": 57}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 4, 1, 1, 9, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 18h", "lea     rdi, aQuotingStyle; \"QUOTING_STYLE\"", "call    _getenv", "mov     [rbp+q_style], rax", "cmp     [rbp+q_style], 0", "jz      loc_6D98"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "lea~rdi,<TAG>", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 1, 0, 1, 9, 0, 2, 0, 1, 0.041666666666666664, ["mov     eax, [rbp+i]", "cdqe", "lea     rdx, ds:0[rax*4]", "lea     rax, quoting_style_vals", "mov     eax, [rdx+rax]", "mov     esi, eax; s", "mov     edi, 0; o", "call    set_quoting_style", "jmp     short loc_6D98"], ["mov~eax,[rbp+0]", "cdqe~", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "mov~esi,eax", "mov~edi,0", "call~FOO", "jmp~FOO"]], [2, 0, 3, 0, 1, 9, 0, 2, 0, 2, 0.16666666666666666, ["mov     rax, [rbp+q_style]", "mov     ecx, 4; valsize", "lea     rdx, quoting_style_vals; vallist", "lea     rsi, quoting_style_args; arglist", "mov     rdi, rax; arg", "call    argmatch", "mov     [rbp+i], eax", "cmp     [rbp+i], 0", "js      short loc_6D63"], ["mov~rax,[rbp+0]", "mov~ecx,0", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "js~FOO"]], [3, 0, 1, 0, 3, 12, 0, 3, 0, 1, 0.041666666666666664, ["mov     rax, [rbp+q_style]", "mov     rdi, rax; arg", "call    quote", "mov     rbx, rax", "lea     rdi, aIgnoringInvali; \"ignoring invalid value of environment v\"...", "call    _gettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rbx,rax", "lea~rdi,<TAG>", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 0, 0, 0.0, ["nop", "add     rsp, 18h", "pop     rbx", "pop     rbp", "retn"], ["nop", "add~rsp,0", "pop~rbx", "pop~rbp", "retn"]]], "func_feature": [6, 0, 9, 0, 5, 6, 1, 44, 0.05, 4, 2], "succs": [[2, 4], [4], [1, 3], [4], []], "fname": "getenv_quoting_style", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.041666666666666664, ["mov     cs:exit_status, 2", "jmp     short loc_6DCF"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 4, 0, 0, 6, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     eax, edi", "mov     [rbp+serious], al", "cmp     [rbp+serious], 0", "jz      short loc_6DBB"], ["push~rbp", "mov~rbp,rsp", "mov~eax,edi", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["nop", "pop     rbp", "retn"], ["nop", "pop~rbp", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.125, ["mov     eax, cs:exit_status", "test    eax, eax", "jnz     short loc_6DCF"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.0, ["mov     cs:exit_status, 1"], ["mov~<TAG>,0"]]], "func_feature": [0, 1, 3, 0, 5, 6, 3, 15, 0.03333, 1, 0], "succs": [[2], [0, 3], [], [2, 4], [2]], "fname": "set_exit_status", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[5, 0, 0, 2, 4, 29, 0, 4, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 28h", "mov     eax, edi", "mov     [rbp+message], rsi", "mov     [rbp+file], rdx", "mov     [rbp+serious], al", "mov     rax, [rbp+file]", "mov     rsi, rax; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbx, rax", "call    ___errno_location", "mov     eax, [rax]", "mov     rdx, [rbp+message]; format", "mov     rcx, rbx", "mov     esi, eax; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "movzx   eax, [rbp+serious]", "mov     edi, eax; serious", "call    set_exit_status", "nop", "add     rsp, 28h", "pop     rbx", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "mov~eax,edi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~eax,<TAG>", "mov~rdx,[rbp+0]", "mov~rcx,rbx", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO", "movzx~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "nop", "add~rsp,0", "pop~rbx", "pop~rbp", "retn"]]], "func_feature": [4, 0, 4, 0, 1, 0, 8, 29, 0.0, 0, 2], "succs": [[]], "fname": "file_failure", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 13, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+new]", "mov     [rax], rdx", "mov     rax, [rbp+new]", "movzx   edx, [rbp+command_line_arg]", "mov     [rax+10h], dl", "mov     rdx, cs:pending_dirs", "mov     rax, [rbp+new]", "mov     [rax+18h], rdx", "mov     rax, [rbp+new]", "mov     cs:pending_dirs, rax", "nop", "leave", "retn"], ["mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "movzx~edx,[rbp+0]", "mov~[rax+0],dl", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~<TAG>,rax", "nop", "leave", "retn"]], [0, 0, 1, 0, 1, 5, 0, 2, 3, 0, 0.06666666666666667, ["mov     rax, [rbp+name]", "mov     rdi, rax; string", "call    xstrdup", "mov     rdx, rax", "jmp     short loc_6E93"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, 0, 0.06666666666666667, ["mov     edx, 0"], ["mov~edx,0"]], [0, 0, 4, 0, 1, 5, 0, 2, 1, 0, 0.06666666666666667, ["mov     rax, [rbp+realname]", "mov     rdi, rax; string", "call    xstrdup", "mov     rdx, rax", "jmp     short loc_6E6E"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "jmp~FOO"]], [2, 1, 6, 1, 1, 12, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+name], rdi", "mov     [rbp+realname], rsi", "mov     eax, edx", "mov     [rbp+command_line_arg], al", "mov     edi, 20h ; ' '; n", "call    xmalloc", "mov     [rbp+new], rax", "cmp     [rbp+realname], 0", "jz      short loc_6E69"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~eax,edx", "mov~[rbp+0],al", "mov~edi,<STR>", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 1, 0, 0.06666666666666667, ["mov     edx, 0"], ["mov~edx,0"]], [1, 0, 3, 0, 0, 4, 0, 1, 2, 0, 0.3, ["mov     rax, [rbp+new]", "mov     [rax+8], rdx", "cmp     [rbp+name], 0", "jz      short loc_6E8E"], ["mov~rax,[rbp+0]", "mov~[rax+0],rdx", "cmp~[rbp+0],0", "jz~FOO"]]], "func_feature": [3, 0, 7, 0, 7, 8, 4, 41, 0.08095, 1, 1], "succs": [[], [0], [0], [6], [3, 5], [6], [1, 2]], "fname": "queue_directory", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 56, 0, 1, 6, 0, 2, 0, 0, 0.0049678550555230854, ["mov     rax, [rbp+dirp]", "mov     rdi, rax; dirp", "call    _dirfd", "mov     [rbp+fd], eax", "cmp     [rbp+fd], 0", "js      short loc_6F9F"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "js~FOO"]], [0, 0, 57, 0, 0, 3, 1, 1, 1, 6, 0.015780245470485097, ["mov     rax, cs:active_dir_set", "test    rax, rax", "jz      loc_7091"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [8, 0, 36, 3, 3, 21, 0, 3, 8, 10, 0.10520163646990063, ["sub     rsp, 8", "push    [rbp+absolute_name]; absolute_name", "lea     r9, subdired_obstack; stack", "mov     r8d, 1; allow_pad", "mov     ecx, 0; color", "mov     edx, 0FFFFFFFFh; needs_general_quoting", "mov     rdi, rax; name", "call    quote_name", "add     rsp, 10h", "mov     rax, [rbp+absolute_name]", "mov     rdi, rax; ptr", "call    free", "mov     rax, cs:stdout@@GLIBC_2_2_5", "mov     rcx, rax; stream", "mov     edx, 2; n", "mov     esi, 1; size", "lea     rdi, asc_1D79C; \":\\n\"", "call    _fwrite_unlocked", "mov     rax, cs:dired_pos", "add     rax, 2", "mov     cs:dired_pos, rax"], ["sub~rsp,0", "push~[rbp+0]", "lea~r9,<TAG>", "mov~r8d,0", "mov~ecx,0", "mov~edx,0", "mov~rdi,rax", "call~FOO", "add~rsp,0", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,<TAG>", "mov~rcx,rax", "mov~edx,0", "mov~esi,0", "lea~rdi,<TAG>", "call~FOO", "mov~rax,<TAG>", "add~rax,0", "mov~<TAG>,rax"]], [0, 0, 37, 0, 0, 2, 0, 1, 7, 11, 0.04471069549970777, ["mov     rax, [rbp+realname]", "jmp     short loc_71A1"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 37, 0, 0, 1, 0, 0, 7, 11, 0.04471069549970777, ["mov     rax, [rbp+name]"], ["mov~rax,[rbp+0]"]], [0, 0, 11, 0, 1, 4, 1, 2, 8, 5, 0.1385154880187025, ["call    sort_files", "movzx   eax, cs:recursive", "test    al, al", "jz      short loc_741F"], ["call~FOO", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 13, 0, 1, 5, 1, 2, 7, 6, 0.15721800116890705, ["mov     rax, [rbp+dirp]", "mov     rdi, rax; dirp", "call    _closedir", "test    eax, eax", "jz      short loc_73FB"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 12, 0, 2, 8, 0, 2, 8, 6, 0.0, ["lea     rdi, aClosingDirecto; \"closing directory %s\"", "call    _gettext", "mov     rcx, rax", "movzx   eax, [rbp+command_line_arg]", "mov     rdx, [rbp+name]; file", "mov     rsi, rcx; message", "mov     edi, eax; serious", "call    file_failure"], ["lea~rdi,<TAG>", "call~FOO", "mov~rcx,rax", "movzx~eax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,rcx", "mov~edi,eax", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.03331385154880187, ["mov     rax, [rbp+var_18]", "xor     rax, fs:28h", "jz      short loc_758F"], ["mov~rax,[rbp+0]", "xor~rax,<TAG>", "jz~FOO"]], [0, 0, 49, 0, 1, 5, 0, 1, 6, 12, 0.06721215663354763, ["mov     rdx, [rbp+dir_stat.st_ino]", "mov     rax, [rbp+dir_stat.st_dev]", "mov     rsi, rdx; ino", "mov     rdi, rax; dev", "call    dev_ino_push"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO"]], [0, 0, 51, 0, 1, 7, 1, 2, 5, 3, 0.05727644652250146, ["mov     rdx, [rbp+dir_stat.st_ino]", "mov     rax, [rbp+dir_stat.st_dev]", "mov     rsi, rdx; ino", "mov     rdi, rax; dev", "call    visit_dir", "test    al, al", "jz      short loc_7078"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 39, 0, 0, 3, 0, 1, 6, 12, 0.0885447106954997, ["mov     rsi, cs:dirname_quoting_options; options", "cmp     [rbp+realname], 0", "jz      short loc_719A"], ["mov~rsi,<TAG>", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 42, 0, 0, 4, 1, 1, 5, 13, 0.06662770309760374, ["mov     [rbp+absolute_name], 0", "movzx   eax, cs:print_hyperlink", "test    al, al", "jz      short loc_7180"], ["mov~[rbp+0],0", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [2, 0, 41, 0, 1, 7, 0, 2, 6, 13, 0.004383401519579193, ["mov     rax, [rbp+name]", "mov     esi, 2; can_mode", "mov     rdi, rax; name", "call    canonicalize_filename_mode", "mov     [rbp+absolute_name], rax", "cmp     [rbp+absolute_name], 0", "jnz     short loc_7180"], ["mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 40, 0, 2, 8, 0, 2, 7, 13, 0.0, ["lea     rdi, aErrorCanonical; \"error canonicalizing %s\"", "call    _gettext", "mov     rcx, rax", "movzx   eax, [rbp+command_line_arg]", "mov     rdx, [rbp+name]; file", "mov     rsi, rcx; message", "mov     edi, eax; serious", "call    file_failure"], ["lea~rdi,<TAG>", "call~FOO", "mov~rcx,rax", "movzx~eax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,rcx", "mov~edi,eax", "call~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0.0, ["mov     rbx, [rbp+var_8]", "leave", "retn"], ["mov~rbx,[rbp+0]", "leave", "retn"]], [0, 0, 53, 0, 0, 2, 1, 1, 4, 3, 0.049678550555230856, ["test    al, al", "jz      short loc_6FFA"], ["test~al,al", "jz~FOO"]], [3, 0, 43, 1, 1, 9, 0, 1, 5, 14, 0.0, ["mov     rax, cs:stdout@@GLIBC_2_2_5", "mov     rcx, rax; stream", "mov     edx, 2; n", "mov     esi, 1; size", "lea     rdi, asc_1D781; \"  \"", "call    _fwrite_unlocked", "mov     rax, cs:dired_pos", "add     rax, 2", "mov     cs:dired_pos, rax"], ["mov~rax,<TAG>", "mov~rcx,rax", "mov~edx,0", "mov~esi,0", "lea~rdi,<TAG>", "call~FOO", "mov~rax,<TAG>", "add~rax,0", "mov~<TAG>,rax"]], [1, 0, 44, 0, 0, 4, 1, 1, 4, 14, 0.049094097019286964, ["mov     cs:first_9010, 0", "movzx   eax, cs:dired", "test    al, al", "jz      short loc_711E"], ["mov~<TAG>,0", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 36, 0, 1, 2, 0, 2, 6, 10, 0.14260666277030976, ["call    process_signals", "jmp     loc_720F"], ["call~FOO", "jmp~FOO"]], [2, 0, 36, 1, 1, 7, 2, 2, 5, 11, 0.15488018702513148, ["mov     rax, [rbp+next]", "add     rax, 13h", "mov     rdi, rax; name", "call    file_ignored", "xor     eax, 1", "test    al, al", "jz      loc_73B3"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~rdi,rax", "call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]], [3, 0, 36, 1, 1, 13, 0, 2, 7, 11, 0.12653419053185272, ["mov     rax, [rbp+next]; jumptable 000000000000729E default case", "lea     rdi, [rax+13h]; name", "mov     rdx, [rbp+name]", "mov     eax, [rbp+type]", "mov     r8, rdx; dirname", "mov     ecx, 0; command_line_arg", "mov     edx, 0; inode", "mov     esi, eax; type", "call    gobble_file", "add     [rbp+total_blocks], rax", "mov     eax, cs:format_0", "cmp     eax, 1", "jnz     short loc_73B3"], ["mov~rax,[rbp+0]", "lea~rdi,[rax+0]", "mov~rdx,[rbp+0]", "mov~eax,[rbp+0]", "mov~r8,rdx", "mov~ecx,0", "mov~edx,0", "mov~esi,eax", "call~FOO", "add~[rbp+0],rax", "mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [1, 0, 36, 0, 0, 3, 0, 1, 8, 11, 0.03331385154880187, ["mov     eax, cs:sort_type_0", "cmp     eax, 0FFFFFFFFh", "jnz     short loc_73B3"], ["mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [1, 0, 36, 0, 0, 4, 2, 1, 9, 11, 0.02250146113383986, ["movzx   eax, cs:print_block_size", "xor     eax, 1", "test    al, al", "jz      short loc_73B3"], ["movzx~eax,<TAG>", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 36, 0, 0, 4, 2, 1, 10, 11, 0.011396843950905903, ["movzx   eax, cs:recursive", "xor     eax, 1", "test    al, al", "jz      short loc_73B3"], ["movzx~eax,<TAG>", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 36, 0, 3, 4, 0, 4, 11, 11, 0.0, ["call    sort_files", "call    print_current_files", "call    clear_files", "jmp     short loc_73B3"], ["call~FOO", "call~FOO", "call~FOO", "jmp~FOO"]], [1, 0, 36, 0, 3, 12, 0, 4, 6, 8, 0.01694915254237288, ["lea     rdi, aReadingDirecto; \"reading directory %s\"", "call    _gettext", "mov     rcx, rax", "movzx   eax, [rbp+command_line_arg]", "mov     rdx, [rbp+name]; file", "mov     rsi, rcx; message", "mov     edi, eax; serious", "call    file_failure", "call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 4Bh ; 'K'", "jnz     short loc_73C0"], ["lea~rdi,<TAG>", "call~FOO", "mov~rcx,rax", "movzx~eax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,rcx", "mov~edi,eax", "call~FOO", "call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [1, 0, 54, 0, 1, 7, 0, 2, 3, 4, 0.009789596727060198, ["lea     rdx, [rbp+dir_stat]", "mov     eax, [rbp+fd]", "mov     rsi, rdx; stat_buf", "mov     edi, eax; fildes", "call    fstat", "shr     eax, 1Fh", "jmp     short loc_6FBB"], ["lea~rdx,[rbp+0]", "mov~eax,[rbp+0]", "mov~rsi,rdx", "mov~edi,eax", "call~FOO", "shr~eax,0", "jmp~FOO"]], [0, 0, 36, 1, 0, 8, 0, 1, 7, 12, 0.09117475160724722, ["mov     eax, eax", "lea     rdx, ds:0[rax*4]", "lea     rax, off_1D7D0", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_1D7D0", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,eax", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [2, 0, 36, 0, 0, 6, 0, 1, 6, 12, 0.14114552893045001, ["mov     [rbp+type], 0", "mov     rax, [rbp+next]", "movzx   eax, byte ptr [rax+12h]", "movzx   eax, al", "cmp     eax, 0Eh; switch 15 cases", "ja      loc_72FF; jumptable 000000000000729E default case"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "movzx~eax,al", "cmp~eax,0", "ja~FOO"]], [0, 0, 48, 0, 1, 4, 1, 2, 2, 11, 0.10607831677381648, ["call    clear_files", "movzx   eax, cs:recursive", "test    al, al", "jnz     short loc_70B0"], ["call~FOO", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 3, 0, 2, 9, 0, 3, 1, 2, 0.0008766803039158386, ["lea     rdi, aCannotOpenDire; \"cannot open directory %s\"", "call    _gettext", "mov     rcx, rax", "movzx   eax, [rbp+command_line_arg]", "mov     rdx, [rbp+name]; file", "mov     rsi, rcx; message", "mov     edi, eax; serious", "call    file_failure", "jmp     loc_757B"], ["lea~rdi,<TAG>", "call~FOO", "mov~rcx,rax", "movzx~eax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,rcx", "mov~edi,eax", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 3, 12, 0, 4, 5, 2, 0.004383401519579193, ["lea     rdi, aCannotDetermin; \"cannot determine device and inode of %s\"", "call    _gettext", "mov     rcx, rax", "movzx   eax, [rbp+command_line_arg]", "mov     rdx, [rbp+name]; file", "mov     rsi, rcx; message", "mov     edi, eax; serious", "call    file_failure", "mov     rax, [rbp+dirp]", "mov     rdi, rax; dirp", "call    _closedir", "jmp     loc_757B"], ["lea~rdi,<TAG>", "call~FOO", "mov~rcx,rax", "movzx~eax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,rcx", "mov~edi,eax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [6, 0, 3, 0, 5, 21, 0, 6, 6, 2, 0.0008766803039158386, ["mov     rax, [rbp+name]", "mov     rdx, rax; arg", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     rbx, rax", "lea     rdi, aSNotListingAlr; \"%s: not listing already-listed director\"...", "call    _gettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     rax, [rbp+dirp]", "mov     rdi, rax; dirp", "call    _closedir", "mov     edi, 1; serious", "call    set_exit_status", "nop", "jmp     loc_757B"], ["mov~rax,[rbp+0]", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbx,rax", "lea~rdi,<TAG>", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~edi,0", "call~FOO", "nop", "jmp~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 11, 2, 0.05464640561075394, ["mov     rax, cs:cwd_n_used", "test    rax, rax", "jz      short loc_757B"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 1, 1, 0, 1, 12, 2, 0.0, ["call    print_current_files"], ["call~FOO"]], [4, 0, 59, 1, 2, 20, 1, 3, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 388h", "mov     [rbp+name], rdi", "mov     [rbp+realname], rsi", "mov     eax, edx", "mov     [rbp+command_line_arg], al", "mov     rax, fs:28h", "mov     [rbp+var_18], rax", "xor     eax, eax", "mov     [rbp+total_blocks], 0", "call    ___errno_location", "mov     dword ptr [rax], 0", "mov     rax, [rbp+name]", "mov     rdi, rax; name", "call    _opendir", "mov     [rbp+dirp], rax", "cmp     [rbp+dirp], 0", "jnz     short loc_6F55"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~eax,edx", "mov~[rbp+0],al", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0", "call~FOO", "mov~<TAG>,0", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 47, 0, 0, 3, 1, 1, 3, 10, 0.0885447106954997, ["movzx   eax, cs:print_dir_name", "test    al, al", "jz      loc_720F"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 8, 0, 0, 3, 1, 1, 10, 3, 0.06399766218585622, ["movzx   eax, cs:print_block_size", "test    al, al", "jz      loc_756A"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 9, 4, 0.11747516072472237, ["mov     eax, cs:format_0", "test    eax, eax", "jz      short loc_7438"], ["mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 0, 36, 0, 1, 4, 1, 2, 5, 8, 0.1879018118059614, ["call    ___errno_location", "mov     eax, [rax]", "test    eax, eax", "jz      short loc_73BD"], ["call~FOO", "mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [1, 0, 36, 0, 0, 2, 0, 1, 8, 12, 0.0, ["mov     [rbp+type], 2; jumptable 000000000000729E case 2", "jmp     short loc_72FF; jumptable 000000000000729E default case"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 54, 0, 1, 6, 0, 1, 3, 4, 0.009789596727060198, ["lea     rdx, [rbp+dir_stat]", "mov     rax, [rbp+name]", "mov     rsi, rdx; stat_buf", "mov     rdi, rax; filename", "call    stat_0", "shr     eax, 1Fh"], ["lea~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "shr~eax,0"]], [1, 0, 36, 0, 0, 2, 0, 1, 8, 12, 0.0, ["mov     [rbp+type], 4; jumptable 000000000000729E case 6", "jmp     short loc_72FF; jumptable 000000000000729E default case"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 36, 0, 0, 2, 0, 1, 8, 12, 0.0, ["mov     [rbp+type], 3; jumptable 000000000000729E case 4", "jmp     short loc_72FF; jumptable 000000000000729E default case"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 36, 0, 0, 2, 0, 1, 8, 12, 0.0, ["mov     [rbp+type], 1; jumptable 000000000000729E case 1", "jmp     short loc_72FF; jumptable 000000000000729E default case"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 36, 0, 0, 2, 0, 1, 8, 12, 0.0, ["mov     [rbp+type], 6; jumptable 000000000000729E case 10", "jmp     short loc_72FF; jumptable 000000000000729E default case"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 36, 0, 0, 2, 0, 1, 8, 12, 0.0, ["mov     [rbp+type], 5; jumptable 000000000000729E case 8", "jmp     short loc_72FF; jumptable 000000000000729E default case"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 36, 0, 0, 2, 0, 1, 8, 12, 0.0, ["mov     [rbp+type], 7; jumptable 000000000000729E case 12", "jmp     short loc_72FF; jumptable 000000000000729E default case"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 36, 0, 0, 2, 0, 0, 8, 12, 0.0, ["mov     [rbp+type], 8; jumptable 000000000000729E case 14", "nop"], ["mov~[rbp+0],0", "nop"]], [1, 0, 46, 0, 0, 4, 2, 1, 3, 15, 0.029222676797194622, ["movzx   eax, cs:first_9010", "xor     eax, 1", "test    al, al", "jz      short loc_70DA"], ["movzx~eax,<TAG>", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 6, 7, 0.15751022793687902, ["nop", "jmp     short loc_73C1"], ["nop", "jmp~FOO"]], [0, 0, 14, 0, 0, 1, 0, 0, 7, 7, 0.004091174751607247, ["nop"], ["nop"]], [0, 0, 7, 0, 0, 3, 1, 1, 10, 4, 0.02863822326125073, ["movzx   eax, cs:dired", "test    al, al", "jz      short loc_7475"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [2, 0, 36, 0, 2, 8, 0, 3, 4, 9, 0.3559322033898305, ["call    ___errno_location", "mov     dword ptr [rax], 0", "mov     rax, [rbp+dirp]", "mov     rdi, rax; dirp", "call    _readdir", "mov     [rbp+next], rax", "cmp     [rbp+next], 0", "jz      loc_7375"], ["call~FOO", "mov~<TAG>,0", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 45, 1, 1, 5, 0, 1, 4, 15, 0.0, ["mov     edi, 0Ah; c", "call    _putchar_unlocked", "mov     rax, cs:dired_pos", "add     rax, 1", "mov     cs:dired_pos, rax"], ["mov~edi,0", "call~FOO", "mov~rax,<TAG>", "add~rax,0", "mov~<TAG>,rax"]], [3, 2, 5, 4, 8, 46, 0, 8, 11, 3, 0.0029222676797194622, ["lea     rdi, aTotal; \"total\"", "call    _gettext", "mov     [rbp+p], rax", "mov     rdx, cs:stdout@@GLIBC_2_2_5", "mov     rax, [rbp+p]", "mov     rsi, rdx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rax, [rbp+p]", "mov     rdi, rax; s", "call    _strlen", "mov     rdx, rax", "mov     rax, cs:dired_pos", "add     rax, rdx", "mov     cs:dired_pos, rax", "mov     edi, 20h ; ' '; c", "call    _putchar_unlocked", "mov     rax, cs:dired_pos", "add     rax, 1", "mov     cs:dired_pos, rax", "mov     rcx, cs:output_block_size", "mov     edx, cs:human_output_opts; opts", "lea     rsi, [rbp+buf]; buf", "mov     rax, [rbp+total_blocks]", "mov     r8, rcx; to_block_size", "mov     ecx, 200h; from_block_size", "mov     rdi, rax; n", "call    human_readable", "mov     [rbp+p], rax", "mov     rdx, cs:stdout@@GLIBC_2_2_5", "mov     rax, [rbp+p]", "mov     rsi, rdx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rax, [rbp+p]", "mov     rdi, rax; s", "call    _strlen", "mov     rdx, rax", "mov     rax, cs:dired_pos", "add     rax, rdx", "mov     cs:dired_pos, rax", "mov     edi, 0Ah; c", "call    _putchar_unlocked", "mov     rax, cs:dired_pos", "add     rax, 1", "mov     cs:dired_pos, rax"], ["lea~rdi,<TAG>", "call~FOO", "mov~[rbp+0],rax", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "mov~rax,<TAG>", "add~rax,rdx", "mov~<TAG>,rax", "mov~edi,<STR>", "call~FOO", "mov~rax,<TAG>", "add~rax,0", "mov~<TAG>,rax", "mov~rcx,<TAG>", "mov~edx,<TAG>", "lea~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~r8,rcx", "mov~ecx,<STR>", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "mov~rax,<TAG>", "add~rax,rdx", "mov~<TAG>,rax", "mov~edi,0", "call~FOO", "mov~rax,<TAG>", "add~rax,0", "mov~<TAG>,rax"]], [3, 0, 6, 1, 1, 9, 0, 1, 11, 4, 0.0, ["mov     rax, cs:stdout@@GLIBC_2_2_5", "mov     rcx, rax; stream", "mov     edx, 2; n", "mov     esi, 1; size", "lea     rdi, asc_1D781; \"  \"", "call    _fwrite_unlocked", "mov     rax, cs:dired_pos", "add     rax, 2", "mov     cs:dired_pos, rax"], ["mov~rax,<TAG>", "mov~rcx,rax", "mov~edx,0", "mov~esi,0", "lea~rdi,<TAG>", "call~FOO", "mov~rax,<TAG>", "add~rax,0", "mov~<TAG>,rax"]], [1, 0, 10, 0, 1, 4, 0, 1, 9, 5, 0.0, ["mov     rax, [rbp+name]", "mov     esi, 0; command_line_arg", "mov     rdi, rax; dirname", "call    extract_dirs_from_files"], ["mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO"]]], "func_feature": [54, 24, 98, 2, 60, 94, 1, 363, 0.04817, 27, 14], "succs": [[43, 28], [0, 31], [55], [2], [2], [40, 59], [5, 7], [5], [], [8, 16], [31], [10, 34], [3, 4], [12, 14], [12, 15], [12], [], [33, 11], [13], [18, 13], [55], [20, 30], [20, 23], [24, 20], [25, 20], [26, 20], [20], [20, 53], [17], [42, 44, 45, 46, 47, 48, 49, 50, 22], [29, 22], [51, 38], [9], [9], [9], [9, 36], [9], [32, 1], [51, 55], [35, 54], [54, 39], [27, 52], [22], [17], [22], [22], [22], [22], [22], [22], [22], [56, 19], [6], [6], [57, 58], [41, 21], [19], [35], [57], [40]], "fname": "print_dir", "n_num": 60}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 1, 0, 1, 1, 18, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+pattern], rdi", "mov     edi, 10h; n", "call    xmalloc", "mov     [rbp+ignore], rax", "mov     rax, [rbp+ignore]", "mov     rdx, [rbp+pattern]", "mov     [rax], rdx", "mov     rdx, cs:ignore_patterns", "mov     rax, [rbp+ignore]", "mov     [rax+8], rdx", "mov     rax, [rbp+ignore]", "mov     cs:ignore_patterns, rax", "nop", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~edi,0", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~<TAG>,rax", "nop", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 3, 18, 0.0, 1, 1], "succs": [[]], "fname": "add_ignore_pattern", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 6, 0, 0, 2, 0, 1, 0, 0, 0.3333333333333333, ["cmp     [rbp+p], 0", "jnz     short loc_75F1"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 1, 6, 1, 0, 8, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+patterns], rdi", "mov     [rbp+file], rsi", "mov     rax, [rbp+patterns]", "mov     [rbp+p], rax", "jmp     short loc_7623"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 6, 0, 0, 3, 0, 0, 3, 3, 0.06666666666666667, ["mov     rax, [rbp+p]", "mov     rax, [rax+8]", "mov     [rbp+p], rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.1, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 6, 0, 1, 9, 1, 2, 2, 2, 0.16666666666666666, ["mov     rax, [rbp+p]", "mov     rax, [rax]", "mov     rcx, [rbp+file]", "mov     edx, 4; flags", "mov     rsi, rcx; name", "mov     rdi, rax; pattern", "call    _fnmatch", "test    eax, eax", "jnz     short loc_7617"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rcx,[rbp+0]", "mov~edx,0", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.03333333333333333, ["mov     eax, 1", "jmp     short locret_762F"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [1, 1, 5, 0, 7, 8, 2, 27, 0.1, 0, 1], "succs": [[3, 4], [0], [0], [5], [2, 6], [], [5]], "fname": "patterns_match", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 3, 0, 1, 7, 1, 2, 0, 0, 0.08333333333333334, ["mov     rax, cs:ignore_patterns", "mov     rdx, [rbp+name]", "mov     rsi, rdx; file", "mov     rdi, rax; patterns", "call    patterns_match", "test    al, al", "jz      short loc_76CB"], ["mov~rax,<TAG>", "mov~rdx,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 1, 3, 0.16982323232323235, ["mov     eax, cs:ignore_mode", "test    eax, eax", "jnz     short loc_76AA"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 1, 7, 1, 2, 2, 2, 0.010732323232323232, ["mov     rax, cs:hide_patterns", "mov     rdx, [rbp+name]", "mov     rsi, rdx; file", "mov     rdi, rax; patterns", "call    patterns_match", "test    al, al", "jnz     short loc_76C4"], ["mov~rax,<TAG>", "mov~rdx,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 6, 1, 0, 5, 1, 1, 5, 2, 0.16666666666666669, ["mov     rax, [rbp+name]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "test    al, al", "jz      short loc_76C4"], ["mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 4, 3, 0.05303030303030303, ["mov     edx, 2", "jmp     short loc_7678"], ["mov~edx,0", "jmp~FOO"]], [1, 0, 7, 0, 0, 1, 0, 0, 4, 3, 0.05303030303030303, ["mov     edx, 1"], ["mov~edx,0"]], [2, 0, 12, 1, 0, 7, 0, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+name], rdi", "mov     eax, cs:ignore_mode", "cmp     eax, 2", "jz      short loc_7686"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [2, 0, 9, 1, 0, 5, 0, 1, 3, 4, 0.09848484848484848, ["mov     rax, [rbp+name]", "add     rax, 1", "movzx   eax, byte ptr [rax]", "cmp     al, 2Eh ; '.'", "jnz     short loc_7673"], ["mov~rax,[rbp+0]", "add~rax,0", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.06755050505050504, ["mov     eax, 1", "jmp     short loc_76D0"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 10, 0, 0, 3, 1, 1, 2, 2, 0.08017676767676767, ["mov     eax, cs:ignore_mode", "test    eax, eax", "jz      short loc_76C4"], ["mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, 1, 0.008207070707070706, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 11, 0, 0, 4, 0, 1, 1, 3, 0.0422979797979798, ["mov     rax, [rbp+name]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Eh ; '.'", "jnz     short loc_7686"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [1, 0, 0, 0, 0, 3, 1, 0, 4, 0, 0.0, ["and     eax, 1", "leave", "retn"], ["and~eax,0", "leave", "retn"]]], "func_feature": [2, 6, 12, 0, 13, 20, 1, 50, 0.0641, 3, 3], "succs": [[8, 10], [0, 2], [0, 8], [8, 1], [3], [3], [1, 11], [4, 5], [12], [8, 7], [12], [1, 9], []], "fname": "file_ignored", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+size], rdi", "mov     rax, [rbp+size]", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 2, 6, 0.0, 0, 0], "succs": [[]], "fname": "unsigned_file_size", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[3, 0, 0, 1, 1, 9, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+name], rdi", "call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'", "mov     eax, 0", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "call~FOO", "mov~<TAG>,0", "mov~eax,0", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 9, 0.0, 0, 1], "succs": [[]], "fname": "has_capability", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 4, 1, 3, 21, 0, 4, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+f], rdi", "mov     rax, [rbp+f]", "mov     rax, [rax]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+f]", "mov     rax, [rax+8]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+f]", "mov     rax, [rax+10h]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+f]", "mov     rdx, [rax+0B0h]", "lea     rax, UNKNOWN_SECURITY_CONTEXT; \"?\"", "cmp     rdx, rax", "jz      short loc_7784"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "lea~rax,<TAG>", "cmp~rdx,rax", "jz~FOO"]], [0, 0, 3, 0, 1, 3, 1, 2, 0, 2, 0.16666666666666666, ["call    is_smack_enabled", "test    al, al", "jz      short loc_7771"], ["call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 1, 0, 1, 4, 0, 1, 0, 1, 0.041666666666666664, ["mov     rax, [rbp+f]", "mov     rax, [rax+0B0h]", "mov     rdi, rax; con", "call    freecon"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["nop", "leave", "retn"], ["nop", "leave", "retn"]], [0, 0, 1, 0, 1, 5, 0, 2, 0, 1, 0.041666666666666664, ["mov     rax, [rbp+f]", "mov     rax, [rax+0B0h]", "mov     rdi, rax; ptr", "call    free", "jmp     short loc_7784"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "jmp~FOO"]]], "func_feature": [6, 1, 9, 0, 5, 6, 2, 36, 0.05, 1, 1], "succs": [[1, 3], [2, 4], [3], [], [3]], "fname": "free_ent", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[13, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0.0, ["mov     cs:cwd_n_used, 0", "mov     cs:cwd_some_quoted, 0", "mov     cs:any_has_acl, 0", "mov     cs:inode_number_width, 0", "mov     cs:block_size_width, 0", "mov     cs:nlink_width, 0", "mov     cs:owner_width, 0", "mov     cs:group_width, 0", "mov     cs:author_width, 0", "mov     cs:scontext_width, 0", "mov     cs:major_device_number_width, 0", "mov     cs:minor_device_number_width, 0", "mov     cs:file_size_width, 0", "nop", "leave", "retn"], ["mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "nop", "leave", "retn"]], [0, 0, 3, 0, 0, 3, 0, 0, 1, 0, 0.5, ["mov     rax, cs:cwd_n_used", "cmp     [rbp+i], rax", "jb      short loc_7799"], ["mov~rax,<TAG>", "cmp~[rbp+0],rax", "jb~FOO"]], [2, 0, 3, 1, 0, 5, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+i], 0", "jmp     short loc_77C3"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 3, 3, 1, 10, 0, 1, 2, 0, 0.0, ["mov     rax, cs:sorted_file", "mov     rdx, [rbp+i]", "shl     rdx, 3", "add     rax, rdx", "mov     rax, [rax]", "mov     [rbp+f], rax", "mov     rax, [rbp+f]", "mov     rdi, rax; f", "call    free_ent", "add     [rbp+i], 1"], ["mov~rax,<TAG>", "mov~rdx,[rbp+0]", "shl~rdx,0", "add~rax,rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "add~[rbp+0],0"]]], "func_feature": [1, 0, 2, 0, 4, 4, 3, 34, 0.125, 14, 4], "succs": [[], [0, 3], [1], [1]], "fname": "clear_files", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0.0, ["and     eax, 1", "leave", "retn"], ["and~eax,0", "leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.125, ["mov     eax, 1", "jmp     short loc_7881"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, 0, 0.025, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 3, 0, 1, 5, 1, 2, 2, 0, 0.1, ["mov     eax, [rbp+err]", "mov     edi, eax; err", "call    is_ENOTSUP", "test    al, al", "jz      short loc_787C"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 1, 0, 0.1, ["cmp     [rbp+err], 26h ; '&'", "jz      short loc_7875"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 5, 1, 0, 6, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 8", "mov     [rbp+err], edi", "cmp     [rbp+err], 16h", "jz      short loc_7875"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "cmp~[rbp+0],0", "jz~FOO"]]], "func_feature": [1, 2, 5, 0, 6, 8, 3, 19, 0.05833, 0, 1], "succs": [[], [0], [0], [1, 2], [1, 3], [1, 4]], "fname": "errno_unsupported", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 2, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+f]", "mov     rax, [rax+18h]", "mov     cs:unsupported_device_9068, rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~<TAG>,rax"]], [0, 0, 3, 0, 2, 6, 1, 3, 4, 2, 0.06944444444444445, ["call    ___errno_location", "mov     eax, [rax]", "mov     edi, eax; err", "call    errno_unsupported", "test    al, al", "jz      short loc_792E"], ["call~FOO", "mov~eax,<TAG>", "mov~edi,eax", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 5, 0, 1, 7, 0, 2, 2, 3, 0.0625, ["mov     rax, [rbp+f]", "lea     rdx, [rax+0B0h]", "mov     rax, [rbp+file]", "mov     rsi, rdx; con", "mov     rdi, rax; file", "call    getfilecon", "jmp     short loc_7904"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [2, 0, 7, 0, 0, 3, 0, 1, 1, 4, 0.08333333333333333, ["mov     [rbp+r], 0", "cmp     [rbp+deref], 0", "jz      short loc_78EA"], ["mov~[rbp+0],0", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 4, 0, 0, 3, 0, 0, 3, 2, 0.20833333333333331, ["mov     [rbp+r], eax", "cmp     [rbp+r], 0", "jns     short loc_792E"], ["mov~[rbp+0],eax", "cmp~[rbp+0],0", "jns~FOO"]], [0, 0, 5, 0, 1, 6, 0, 1, 2, 3, 0.0625, ["mov     rax, [rbp+f]", "lea     rdx, [rax+0B0h]", "mov     rax, [rbp+file]", "mov     rsi, rdx; con", "mov     rdi, rax; file", "call    lgetfilecon"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO"]], [1, 0, 9, 1, 0, 12, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+file], rdi", "mov     [rbp+f], rsi", "mov     eax, edx", "mov     [rbp+deref], al", "mov     rax, [rbp+f]", "mov     rdx, [rax+18h]", "mov     rax, cs:unsupported_device_9068", "cmp     rdx, rax", "jnz     short loc_78C1"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~eax,edx", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,<TAG>", "cmp~rdx,rax", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, 1, 0.08333333333333333, ["mov     eax, [rbp+r]"], ["mov~eax,[rbp+0]"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [2, 0, 1, 0, 1, 4, 0, 2, 1, 1, 0.013888888888888888, ["call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'", "mov     eax, 0FFFFFFFFh", "jmp     short locret_7931"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]]], "func_feature": [5, 1, 10, 0, 10, 13, 1, 47, 0.05833, 1, 1], "succs": [[7], [0, 7], [4], [2, 5], [1, 7], [4], [9, 3], [8], [], [8]], "fname": "getfilecon_cache", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 3, 0, 2, 6, 1, 3, 0, 0, 0.06666666666666667, ["call    ___errno_location", "mov     eax, [rax]", "mov     edi, eax; err", "call    errno_unsupported", "test    al, al", "jz      short loc_79B5"], ["call~FOO", "mov~eax,<TAG>", "mov~edi,eax", "call~FOO", "test~al,al", "jz~FOO"]], [2, 0, 4, 0, 2, 11, 0, 3, 1, 2, 0.1, ["call    ___errno_location", "mov     dword ptr [rax], 0", "mov     rax, [rbp+f]", "lea     rdx, [rax+18h]", "mov     rax, [rbp+file]", "mov     rsi, rdx; sb", "mov     rdi, rax; name", "call    file_has_acl", "mov     [rbp+n], eax", "cmp     [rbp+n], 0", "jg      short loc_79B5"], ["call~FOO", "mov~<TAG>,0", "mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jg~FOO"]], [2, 0, 1, 0, 1, 4, 0, 2, 1, 1, 0.03333333333333333, ["call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'", "mov     eax, 0", "jmp     short locret_79B8"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [0, 1, 6, 1, 0, 10, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+file], rdi", "mov     [rbp+f], rsi", "mov     rax, [rbp+f]", "mov     rdx, [rax+18h]", "mov     rax, cs:unsupported_device_9074", "cmp     rdx, rax", "jnz     short loc_7969"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,<TAG>", "cmp~rdx,rax", "jnz~FOO"]], [0, 0, 2, 0, 0, 3, 0, 0, 3, 2, 0.0, ["mov     rax, [rbp+f]", "mov     rax, [rax+18h]", "mov     cs:unsupported_device_9074, rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~<TAG>,rax"]], [0, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.1, ["mov     eax, [rbp+n]"], ["mov~eax,[rbp+0]"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [5, 1, 9, 0, 7, 9, 1, 37, 0.04286, 1, 1], "succs": [[4, 5], [0, 5], [6], [1, 2], [5], [6], []], "fname": "file_has_acl_cache", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 2, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+f]", "mov     rax, [rax+18h]", "mov     cs:unsupported_device_9080, rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~<TAG>,rax"]], [0, 0, 3, 0, 2, 6, 1, 3, 2, 2, 0.06666666666666667, ["call    ___errno_location", "mov     eax, [rax]", "mov     edi, eax; err", "call    errno_unsupported", "test    al, al", "jz      short loc_7A2B"], ["call~FOO", "mov~eax,<TAG>", "mov~edi,eax", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 4, 0, 1, 8, 2, 2, 1, 2, 0.1, ["mov     rax, [rbp+file]", "mov     rdi, rax; name", "call    has_capability", "mov     [rbp+b], al", "movzx   eax, [rbp+b]", "xor     eax, 1", "test    al, al", "jz      short loc_7A2B"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 1, 6, 1, 0, 10, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+file], rdi", "mov     [rbp+f], rsi", "mov     rax, [rbp+f]", "mov     rdx, [rax+18h]", "mov     rax, cs:unsupported_device_9080", "cmp     rdx, rax", "jnz     short loc_79F0"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,<TAG>", "cmp~rdx,rax", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.1, ["movzx   eax, [rbp+b]"], ["movzx~eax,[rbp+0]"]], [2, 0, 1, 0, 1, 4, 0, 2, 1, 1, 0.03333333333333333, ["call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'", "mov     eax, 0", "jmp     short locret_7A2F"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [4, 3, 8, 0, 7, 9, 1, 34, 0.04286, 1, 1], "succs": [[4], [0, 4], [1, 4], [2, 5], [6], [6], []], "fname": "has_capability_cache", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[3, 0, 6, 1, 1, 21, 1, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+name], rdi", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     rcx, cs:filename_quoting_options", "mov     rdx, [rbp+name]; arg", "lea     rax, [rbp+test]", "mov     r8, rcx; o", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     esi, 2; buffersize", "mov     rdi, rax; buffer", "call    quotearg_buffer", "mov     [rbp+len], rax", "mov     rax, [rbp+name]", "movzx   edx, byte ptr [rax]", "movzx   eax, [rbp+test]", "cmp     dl, al", "jnz     short loc_7A97"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~rcx,<TAG>", "mov~rdx,[rbp+0]", "lea~rax,[rbp+0]", "mov~r8,rcx", "mov~rcx,0", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "movzx~edx,<TAG>", "movzx~eax,[rbp+0]", "cmp~dl,al", "jnz~FOO"]], [1, 0, 2, 0, 0, 4, 2, 1, 0, 1, 0.26666666666666666, ["and     eax, 1", "mov     rsi, [rbp+var_8]", "xor     rsi, fs:28h", "jz      short locret_7ABA"], ["and~eax,0", "mov~rsi,[rbp+0]", "xor~rsi,<TAG>", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 0, 2, 0.15, ["mov     eax, 1", "jmp     short loc_7AA3"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 0, 2, 0.05, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 5, 0, 1, 5, 0, 2, 0, 3, 0.03333333333333333, ["mov     rax, [rbp+name]", "mov     rdi, rax; s", "call    _strlen", "cmp     [rbp+len], rax", "jz      short loc_7A9E"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 3, 7, 1, 7, 8, 2, 36, 0.07143, 2, 1], "succs": [[2, 4], [5, 6], [1], [1], [2, 3], [], []], "fname": "needs_quoting", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 45, 0, 0, 5, 1, 1, 0, 0, 0.19264763014763014, ["mov     rax, [rbp+f]", "mov     eax, [rax+30h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     short loc_8419"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [2, 0, 58, 0, 0, 5, 1, 1, 14, 11, 0.216006216006216, ["mov     rax, [rbp+f]", "mov     eax, [rax+30h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_83F0"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [0, 0, 56, 0, 0, 3, 1, 1, 16, 11, 0.002233877233877234, ["movzx   eax, cs:check_symlink_mode", "test    al, al", "jz      loc_83F0"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 46, 0, 1, 3, 0, 1, 18, 11, 0.020104895104895104, ["mov     rax, [rbp+linkname]", "mov     rdi, rax; ptr", "call    free"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO"]], [1, 0, 5, 0, 2, 10, 0, 3, 10, 3, 0.010003885003885004, ["lea     rdi, aCannotAccessS; \"cannot access %s\"", "call    _gettext", "mov     rcx, rax", "movzx   eax, [rbp+command_line_arg]", "mov     rdx, [rbp+full_name]; file", "mov     rsi, rcx; message", "mov     edi, eax; serious", "call    file_failure", "cmp     [rbp+command_line_arg], 0", "jz      short loc_8011"], ["lea~rdi,<TAG>", "call~FOO", "mov~rcx,rax", "movzx~eax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,rcx", "mov~edi,eax", "call~FOO", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 88, 0, 0, 2, 0, 1, 9, 4, 0.22465034965034966, ["cmp     [rbp+err], 0", "jz      short loc_8049"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 68, 0, 1, 13, 0, 1, 18, 16, 0.0, ["mov     rdx, [rbp+f]", "mov     rax, [rbp+full_name]", "mov     rsi, rdx; f", "mov     rdi, rax; file", "call    file_has_acl_cache", "mov     [rbp+n], eax", "mov     eax, [rbp+n]", "shr     eax, 1Fh", "movzx   eax, al", "mov     [rbp+err], eax", "cmp     [rbp+n], 0", "setnle  al", "mov     [rbp+have_acl], al"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "mov~eax,[rbp+0]", "shr~eax,0", "movzx~eax,al", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "setnle~al", "mov~[rbp+0],al"]], [0, 0, 69, 0, 0, 3, 1, 1, 17, 16, 0.003447940947940948, ["mov     eax, cs:format_0", "test    eax, eax", "jnz     short loc_820D"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 11, 2, 0.0023552836052836055, ["mov     eax, 0", "jmp     loc_8851"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 27, 4, 0.0020396270396270395, ["nop"], ["nop"]], [0, 0, 9, 1, 0, 8, 0, 1, 26, 5, 0.013888888888888888, ["mov     eax, cs:major_device_number_width", "lea     edx, [rax+2]", "mov     eax, cs:minor_device_number_width", "add     eax, edx", "mov     [rbp+len_4], eax", "mov     eax, cs:file_size_width", "cmp     [rbp+len_4], eax", "jle     loc_87CB"], ["mov~eax,<TAG>", "lea~edx,[rax+0]", "mov~eax,<TAG>", "add~eax,edx", "mov~[rbp+0],eax", "mov~eax,<TAG>", "cmp~[rbp+0],eax", "jle~FOO"]], [0, 0, 8, 0, 0, 3, 0, 1, 27, 5, 0.0, ["mov     eax, [rbp+len_4]", "mov     cs:file_size_width, eax", "jmp     short loc_87CB"], ["mov~eax,[rbp+0]", "mov~<TAG>,eax", "jmp~FOO"]], [6, 0, 139, 5, 1, 27, 2, 2, 2, 11, 0.027000777000777, ["mov     rcx, cs:cwd_file", "mov     rdx, cs:cwd_n_used", "mov     rax, rdx", "shl     rax, 2", "add     rax, rdx", "lea     rdx, ds:0[rax*4]", "add     rax, rdx", "shl     rax, 3", "add     rax, rcx", "mov     [rbp+f], rax", "mov     rax, [rbp+f]", "mov     edx, 0C8h; n", "mov     esi, 0; c", "mov     rdi, rax; s", "call    _memset", "mov     rax, [rbp+f]", "mov     rdx, [rbp+inode]", "mov     [rax+20h], rdx", "mov     rax, [rbp+f]", "mov     edx, [rbp+type]", "mov     [rax+0A8h], edx", "mov     rax, [rbp+f]", "mov     dword ptr [rax+0C4h], 0FFFFFFFFh", "movzx   eax, cs:cwd_some_quoted", "xor     eax, 1", "test    al, al", "jz      short loc_7C55"], ["mov~rcx,<TAG>", "mov~rdx,<TAG>", "mov~rax,rdx", "shl~rax,0", "add~rax,rdx", "lea~rdx,<TAG>", "add~rax,rdx", "shl~rax,0", "add~rax,rcx", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~edx,0", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~[rax+0],edx", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "movzx~eax,<TAG>", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 141, 0, 0, 4, 0, 1, 1, 12, 0.013694638694638694, ["mov     rdx, cs:cwd_n_used", "mov     rax, cs:cwd_n_alloc", "cmp     rdx, rax", "jnz     short loc_7B85"], ["mov~rdx,<TAG>", "mov~rax,<TAG>", "cmp~rdx,rax", "jnz~FOO"]], [0, 1, 140, 1, 1, 10, 0, 1, 2, 12, 0.0, ["mov     rcx, cs:cwd_n_alloc", "mov     rax, cs:cwd_file", "mov     edx, 190h; s", "mov     rsi, rcx; n", "mov     rdi, rax; p", "call    xnrealloc", "mov     cs:cwd_file, rax", "mov     rax, cs:cwd_n_alloc", "add     rax, rax", "mov     cs:cwd_n_alloc, rax"], ["mov~rcx,<TAG>", "mov~rax,<TAG>", "mov~edx,<STR>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~<TAG>,rax", "mov~rax,<TAG>", "add~rax,rax", "mov~<TAG>,rax"]], [1, 0, 67, 0, 0, 2, 0, 1, 17, 15, 0.057012432012432016, ["cmp     [rbp+have_scontext], 0", "jnz     short loc_821F"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 70, 0, 0, 2, 0, 1, 16, 16, 0.05744949494949495, ["cmp     [rbp+err], 0", "jnz     short loc_820D"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 13, 3, 0.0, ["mov     eax, [rbp+len_6]", "mov     cs:inode_number_width, eax"], ["mov~eax,[rbp+0]", "mov~<TAG>,eax"]], [0, 0, 5, 0, 2, 12, 0, 3, 12, 3, 0.006555944055944056, ["mov     rax, [rbp+f]", "mov     rax, [rax+20h]", "lea     rdx, [rbp+buf]", "mov     rsi, rdx; buf", "mov     rdi, rax; i", "call    umaxtostr", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+len_6], eax", "mov     eax, cs:inode_number_width", "cmp     [rbp+len_6], eax", "jle     short loc_881C"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "mov~eax,<TAG>", "cmp~[rbp+0],eax", "jle~FOO"]], [0, 0, 54, 0, 0, 4, 1, 1, 17, 13, 0.008352758352758352, ["mov     rax, [rbp+f]", "mov     eax, [rax+0C4h]", "test    eax, eax", "jnz     short loc_8383"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "test~eax,eax", "jnz~FOO"]], [1, 0, 55, 0, 2, 15, 0, 3, 16, 13, 0.03715034965034965, ["movzx   edx, [rbp+command_line_arg]; command_line_arg", "mov     rcx, [rbp+f]", "mov     rax, [rbp+full_name]", "mov     rsi, rcx; f", "mov     rdi, rax; filename", "call    get_link_name", "mov     rax, [rbp+f]", "mov     rdx, [rax+8]", "mov     rax, [rbp+full_name]", "mov     rsi, rdx; linkname", "mov     rdi, rax; name", "call    make_link_name", "mov     [rbp+linkname], rax", "cmp     [rbp+linkname], 0", "jz      short loc_8383"], ["movzx~edx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 138, 0, 0, 3, 1, 1, 3, 11, 0.0004856254856254856, ["movzx   eax, cs:align_variable_outer_quotes", "test    al, al", "jz      short loc_7C55"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 66, 0, 0, 2, 0, 1, 18, 14, 0.022945804195804196, ["cmp     [rbp+have_acl], 0", "jz      short loc_8244"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 40, 0, 0, 4, 2, 1, 18, 10, 0.004759129759129759, ["movzx   eax, cs:immediate_dirs", "xor     eax, 1", "test    al, al", "jz      short loc_8459"], ["movzx~eax,<TAG>", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 41, 0, 0, 2, 0, 1, 17, 10, 0.014131701631701632, ["cmp     [rbp+command_line_arg], 0", "jz      short loc_8459"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 18, 14, 0.030278749028749028, ["cmp     [rbp+have_scontext], 0", "jz      short loc_823D"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 20, 0, 0, 3, 1, 1, 21, 4, 0.1015928515928516, ["mov     eax, cs:format_0", "test    eax, eax", "jnz     loc_87CC"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [0, 0, 23, 0, 0, 3, 1, 1, 20, 5, 0.11572455322455323, ["movzx   eax, cs:print_scontext", "test    al, al", "jz      short loc_85FF"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 22, 0, 1, 8, 0, 2, 21, 5, 0.00573038073038073, ["mov     rax, [rbp+f]", "mov     rax, [rax+0B0h]", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+len_3], eax", "mov     eax, cs:scontext_width", "cmp     [rbp+len_3], eax", "jle     short loc_85FF"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "mov~eax,<TAG>", "cmp~[rbp+0],eax", "jle~FOO"]], [0, 0, 21, 0, 0, 2, 0, 0, 22, 5, 0.0, ["mov     eax, [rbp+len_3]", "mov     cs:scontext_width, eax"], ["mov~eax,[rbp+0]", "mov~<TAG>,eax"]], [2, 0, 43, 0, 0, 5, 1, 1, 16, 10, 0.023310023310023312, ["mov     rax, [rbp+f]", "mov     eax, [rax+30h]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     short loc_846C"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [0, 0, 19, 0, 2, 12, 0, 3, 22, 7, 0.07051282051282051, ["mov     rax, [rbp+f]", "mov     rax, [rax+28h]", "lea     rdx, [rbp+b]", "mov     rsi, rdx; buf", "mov     rdi, rax; i", "call    umaxtostr", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+b_len], eax", "mov     eax, cs:nlink_width", "cmp     [rbp+b_len], eax", "jle     short loc_8652"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "mov~eax,<TAG>", "cmp~[rbp+0],eax", "jle~FOO"]], [1, 0, 63, 0, 0, 4, 2, 1, 19, 14, 0.003690753690753691, ["movzx   eax, [rbp+have_acl]", "xor     eax, 1", "test    al, al", "jz      short loc_823D"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 12, 1, 0.013694638694638694, ["mov     rbx, [rbp+var_18]", "xor     rbx, fs:28h", "jz      short loc_8865"], ["mov~rbx,[rbp+0]", "xor~rbx,<TAG>", "jz~FOO"]], [2, 0, 3, 1, 1, 11, 0, 2, 11, 2, 0.0023552836052836055, ["mov     rax, [rbp+name]", "mov     rdi, rax; string", "call    xstrdup", "mov     rdx, rax", "mov     rax, [rbp+f]", "mov     [rax], rdx", "mov     rax, cs:cwd_n_used", "add     rax, 1", "mov     cs:cwd_n_used, rax", "mov     eax, 0", "jmp     loc_8851"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,<TAG>", "add~rax,0", "mov~<TAG>,rax", "mov~eax,0", "jmp~FOO"]], [1, 0, 3, 1, 1, 10, 0, 1, 12, 2, 0.015394327894327894, ["mov     rax, [rbp+name]", "mov     rdi, rax; string", "call    xstrdup", "mov     rdx, rax", "mov     rax, [rbp+f]", "mov     [rax], rdx", "mov     rax, cs:cwd_n_used", "add     rax, 1", "mov     cs:cwd_n_used, rax", "mov     rax, [rbp+blocks]"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,<TAG>", "add~rax,0", "mov~<TAG>,rax", "mov~rax,[rbp+0]"]], [1, 0, 61, 0, 0, 2, 0, 1, 20, 13, 0.0014811577311577312, ["mov     eax, 1", "jmp     short loc_8249"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 61, 0, 0, 2, 0, 1, 19, 13, 0.023795648795648796, ["mov     eax, 2", "jmp     short loc_8249"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 11, 3, 0.03447940947940948, ["movzx   eax, cs:print_inode", "test    al, al", "jz      short loc_881C"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 137, 0, 1, 10, 1, 2, 4, 11, 0.0002913752913752914, ["mov     rax, [rbp+name]", "mov     rdi, rax; name", "call    needs_quoting", "movzx   edx, al", "mov     rax, [rbp+f]", "mov     [rax+0C4h], edx", "mov     rax, [rbp+f]", "mov     eax, [rax+0C4h]", "test    eax, eax", "jz      short loc_7C55"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "movzx~edx,al", "mov~rax,[rbp+0]", "mov~[rax+0],edx", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "test~eax,eax", "jz~FOO"]], [1, 0, 136, 0, 0, 1, 0, 0, 5, 11, 0.0, ["mov     cs:cwd_some_quoted, 1"], ["mov~<TAG>,0"]], [1, 0, 38, 0, 0, 3, 0, 1, 19, 9, 0.0009226884226884227, ["mov     rax, [rbp+f]", "mov     dword ptr [rax+0A8h], 9", "jmp     short loc_847D"], ["mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "jmp~FOO"]], [1, 0, 135, 0, 0, 2, 0, 1, 3, 10, 0.05244755244755245, ["cmp     [rbp+command_line_arg], 0", "jnz     loc_7DBC"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 84, 0, 0, 4, 0, 1, 10, 15, 0.2134809634809635, ["mov     rax, [rbp+f]", "mov     byte ptr [rax+0B8h], 1", "cmp     [rbp+type], 5", "jz      short loc_8076"], ["mov~rax,[rbp+0]", "mov~[yte ptr [rax+0],0", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 13, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 0, 17, 0, 0, 5, 1, 1, 23, 6, 0.06041181041181041, ["mov     rax, [rbp+f]", "mov     eax, [rax+30h]", "and     eax, 0F000h", "cmp     eax, 2000h", "jz      short loc_8682"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 18, 0, 0, 2, 0, 0, 23, 7, 0.0, ["mov     eax, [rbp+b_len]", "mov     cs:nlink_width, eax"], ["mov~eax,[rbp+0]", "mov~<TAG>,eax"]], [9, 0, 105, 9, 3, 29, 0, 3, 6, 8, 0.0025495337995337995, ["mov     rax, [rbp+name]", "mov     rdi, rax; s", "call    _strlen", "mov     rbx, rax", "mov     rax, [rbp+dirname]", "mov     rdi, rax; s", "call    _strlen", "add     rax, rbx", "add     rax, 2", "lea     rdx, [rax+0Fh]", "mov     eax, 10h", "sub     rax, 1", "add     rax, rdx", "mov     ebx, 10h", "mov     edx, 0", "div     rbx", "imul    rax, 10h", "sub     rsp, rax", "mov     rax, rsp", "add     rax, 0Fh", "shr     rax, 4", "shl     rax, 4", "mov     [rbp+full_name], rax", "mov     rdx, [rbp+name]; name", "mov     rcx, [rbp+dirname]", "mov     rax, [rbp+full_name]", "mov     rsi, rcx; dirname", "mov     rdi, rax; dest", "call    attach"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rbx,rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "add~rax,rbx", "add~rax,0", "lea~rdx,[rax+0]", "mov~eax,0", "sub~rax,0", "add~rax,rdx", "mov~ebx,0", "mov~edx,0", "div~,rbx", "imul~rax,,0", "sub~rsp,rax", "mov~rax,rsp", "add~rax,0", "shr~rax,0", "shl~rax,0", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [0, 0, 107, 0, 0, 4, 1, 1, 5, 9, 0.0017482517482517483, ["mov     rax, [rbp+dirname]", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_7DEB"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [1, 0, 38, 0, 0, 3, 0, 1, 18, 9, 0.002768065268065268, ["mov     rax, [rbp+f]", "mov     dword ptr [rax+0A8h], 3", "jmp     short loc_847D"], ["mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "jmp~FOO"]], [0, 0, 134, 0, 0, 3, 1, 1, 4, 10, 0.012674825174825174, ["movzx   eax, cs:print_hyperlink", "test    al, al", "jnz     loc_7DBC"], ["movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [1, 0, 38, 0, 0, 2, 0, 0, 17, 9, 0.0018453768453768455, ["mov     rax, [rbp+f]", "mov     dword ptr [rax+0A8h], 5"], ["mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0"]], [1, 1, 83, 0, 0, 5, 1, 1, 11, 14, 0.10324397824397824, ["mov     rax, [rbp+f]", "mov     eax, [rax+30h]", "and     eax, 0F000h", "cmp     eax, 8000h", "jnz     short loc_80B7"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [0, 0, 104, 0, 0, 3, 1, 1, 6, 7, 0.18657731157731158, ["movzx   eax, cs:print_hyperlink", "test    al, al", "jz      short loc_7ED1"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 105, 0, 0, 3, 0, 1, 5, 8, 0.17572358197358198, ["mov     rax, [rbp+name]", "mov     [rbp+full_name], rax", "jmp     loc_7E6D"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 133, 0, 0, 3, 1, 1, 5, 9, 0.013646076146076146, ["movzx   eax, cs:format_needs_stat", "test    al, al", "jnz     loc_7DBC"], ["movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [1, 1, 16, 0, 0, 5, 1, 1, 24, 5, 0.013063325563325564, ["mov     rax, [rbp+f]", "mov     eax, [rax+30h]", "and     eax, 0F000h", "cmp     eax, 6000h", "jnz     loc_8757"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 13, 0, 0.0, ["mov     rbx, [rbp+var_8]", "leave", "retn"], ["mov~rbx,[rbp+0]", "leave", "retn"]], [0, 0, 82, 0, 0, 3, 1, 1, 11, 14, 0.10887723387723387, ["movzx   eax, cs:print_with_color", "test    al, al", "jz      short loc_80B7"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 132, 0, 0, 2, 0, 1, 6, 8, 0.014617327117327118, ["cmp     [rbp+type], 3", "jnz     short loc_7CCA"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 60, 0, 0, 15, 3, 1, 20, 12, 0.052593240093240096, ["mov     rdx, [rbp+f]", "mov     [rdx+0BCh], eax", "movzx   eax, cs:any_has_acl", "movzx   edx, al", "mov     rax, [rbp+f]", "mov     eax, [rax+0BCh]", "test    eax, eax", "setnz   al", "movzx   eax, al", "or      eax, edx", "test    eax, eax", "setnz   al", "mov     cs:any_has_acl, al", "cmp     [rbp+err], 0", "jz      short loc_82C9"], ["mov~rdx,[rbp+0]", "mov~[rdx+0],eax", "movzx~eax,<TAG>", "movzx~edx,al", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "test~eax,eax", "setnz~al", "movzx~eax,al", "or~eax,edx", "test~eax,eax", "setnz~al", "mov~<TAG>,al", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 61, 0, 0, 1, 0, 0, 19, 13, 0.022314491064491064, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 38, 0, 0, 3, 0, 1, 16, 9, 0.1621989121989122, ["mov     rax, [rbp+f]", "mov     dword ptr [rax+0A8h], 6", "jmp     short loc_847D"], ["mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "jmp~FOO"]], [1, 0, 81, 0, 1, 4, 1, 2, 12, 14, 0.002865190365190365, ["mov     edi, 15h; type", "call    is_colored", "test    al, al", "jz      short loc_80B7"], ["mov~edi,0", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 131, 0, 0, 3, 1, 1, 7, 8, 0.006701631701631702, ["movzx   eax, cs:print_with_color", "test    al, al", "jz      short loc_7CCA"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 37, 0, 0, 6, 1, 1, 17, 8, 0.17011460761460762, ["mov     rax, [rbp+f]", "mov     rax, [rax+58h]", "mov     [rbp+blocks], rax", "mov     eax, cs:format_0", "test    eax, eax", "jz      short loc_84A4"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [1, 0, 128, 0, 1, 4, 1, 2, 10, 8, 0.002428127428127428, ["mov     edi, 14h; type", "call    is_colored", "test    al, al", "jnz     loc_7DBC"], ["mov~edi,0", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 1, 129, 0, 1, 4, 1, 2, 9, 9, 0.0018453768453768455, ["mov     edi, 12h; type", "call    is_colored", "test    al, al", "jnz     loc_7DBC"], ["mov~edi,<STR>", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 130, 0, 1, 4, 1, 2, 8, 10, 0.01116938616938617, ["mov     edi, 13h; type", "call    is_colored", "test    al, al", "jnz     loc_7DBC"], ["mov~edi,0", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 36, 0, 0, 3, 1, 1, 18, 7, 0.07837995337995338, ["movzx   eax, cs:print_block_size", "test    al, al", "jz      short loc_84FC"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 103, 0, 1, 11, 1, 2, 7, 7, 0.0019425019425019425, ["mov     rax, [rbp+full_name]", "mov     esi, 2; can_mode", "mov     rdi, rax; name", "call    canonicalize_filename_mode", "mov     rdx, rax", "mov     rax, [rbp+f]", "mov     [rax+10h], rdx", "mov     rax, [rbp+f]", "mov     rax, [rax+10h]", "test    rax, rax", "jnz     short loc_7ED1"], ["mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 33, 0, 0, 3, 1, 1, 19, 6, 0.15651709401709402, ["mov     eax, cs:format_0", "test    eax, eax", "jnz     loc_85BE"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [0, 0, 26, 0, 0, 3, 1, 1, 22, 6, 0.018065268065268064, ["movzx   eax, cs:print_author", "test    al, al", "jz      short loc_85BE"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 25, 0, 1, 8, 0, 2, 23, 6, 0.005584693084693085, ["mov     rax, [rbp+f]", "mov     eax, [rax+34h]", "mov     edi, eax; u", "call    format_user_width", "mov     [rbp+len_2], eax", "mov     eax, cs:author_width", "cmp     [rbp+len_2], eax", "jle     short loc_85BE"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~edi,eax", "call~FOO", "mov~[rbp+0],eax", "mov~eax,<TAG>", "cmp~[rbp+0],eax", "jle~FOO"]], [0, 0, 24, 0, 0, 2, 0, 0, 24, 6, 0.0, ["mov     eax, [rbp+len_2]", "mov     cs:author_width, eax"], ["mov~eax,[rbp+0]", "mov~<TAG>,eax"]], [0, 0, 80, 0, 1, 8, 0, 1, 13, 14, 0.0, ["mov     rdx, [rbp+f]", "mov     rax, [rbp+full_name]", "mov     rsi, rdx; f", "mov     rdi, rax; file", "call    has_capability_cache", "mov     edx, eax", "mov     rax, [rbp+f]", "mov     [rax+0C0h], dl"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~edx,eax", "mov~rax,[rbp+0]", "mov~[rax+0],dl"]], [0, 0, 7, 0, 0, 3, 0, 1, 26, 4, 0.0, ["mov     eax, [rbp+len_5]", "mov     cs:file_size_width, eax", "jmp     short loc_87CC"], ["mov~eax,[rbp+0]", "mov~<TAG>,eax", "jmp~FOO"]], [2, 0, 8, 0, 3, 20, 0, 4, 25, 4, 0.00743006993006993, ["mov     rax, [rbp+f]", "mov     rax, [rax+48h]", "mov     rdi, rax; size", "call    unsigned_file_size", "mov     [rbp+size], rax", "mov     rcx, cs:file_output_block_size", "mov     edx, cs:file_human_output_opts; opts", "lea     rsi, [rbp+buf]; buf", "mov     rax, [rbp+size]", "mov     r8, rcx; to_block_size", "mov     ecx, 1; from_block_size", "mov     rdi, rax; n", "call    human_readable", "mov     esi, 0; flags", "mov     rdi, rax; string", "call    gnu_mbswidth", "mov     [rbp+len_5], eax", "mov     eax, cs:file_size_width", "cmp     [rbp+len_5], eax", "jle     short loc_87CC"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rcx,<TAG>", "mov~edx,<TAG>", "lea~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~r8,rcx", "mov~ecx,0", "mov~rdi,rax", "call~FOO", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "mov~eax,<TAG>", "cmp~[rbp+0],eax", "jle~FOO"]], [0, 0, 79, 0, 0, 3, 1, 1, 12, 13, 0.21906565656565657, ["mov     eax, cs:format_0", "test    eax, eax", "jz      short loc_80D0"], ["mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 0, 13, 0, 3, 15, 0, 4, 24, 7, 0.036421911421911424, ["mov     rax, [rbp+f]", "mov     rax, [rax+40h]", "mov     rdi, rax; dev", "call    _gnu_dev_major", "mov     edx, eax", "lea     rax, [rbp+buf]", "mov     rsi, rax; buf", "mov     rdi, rdx; i", "call    umaxtostr", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+len_4], eax", "mov     eax, cs:major_device_number_width", "cmp     [rbp+len_4], eax", "jle     short loc_86D1"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~edx,eax", "lea~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,rdx", "call~FOO", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "mov~eax,<TAG>", "cmp~[rbp+0],eax", "jle~FOO"]], [4, 0, 59, 0, 3, 14, 0, 3, 21, 12, 0.0, ["mov     rax, [rbp+full_name]", "mov     rdx, rax; arg", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     rbx, rax", "call    ___errno_location", "mov     eax, [rax]", "mov     rcx, rbx", "lea     rdx, aS_3; \"%s\"", "mov     esi, eax; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error"], ["mov~rax,[rbp+0]", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~eax,<TAG>", "mov~rcx,rbx", "lea~rdx,<TAG>", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO"]], [0, 0, 78, 0, 0, 3, 1, 1, 13, 12, 0.1626845376845377, ["movzx   eax, cs:print_scontext", "test    al, al", "jz      loc_82C9"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 12, 0, 0, 2, 0, 0, 25, 7, 0.0, ["mov     eax, [rbp+len_4]", "mov     cs:major_device_number_width, eax"], ["mov~eax,[rbp+0]", "mov~<TAG>,eax"]], [0, 0, 102, 0, 2, 8, 0, 2, 8, 7, 0.0, ["lea     rdi, aErrorCanonical; \"error canonicalizing %s\"", "call    _gettext", "mov     rcx, rax", "movzx   eax, [rbp+command_line_arg]", "mov     rdx, [rbp+full_name]; file", "mov     rsi, rcx; message", "mov     edi, eax; serious", "call    file_failure"], ["lea~rdi,<TAG>", "call~FOO", "mov~rcx,rax", "movzx~eax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,rcx", "mov~edi,eax", "call~FOO"]], [0, 0, 127, 0, 0, 3, 1, 1, 7, 7, 0.01791958041958042, ["movzx   eax, cs:print_inode", "test    al, al", "jnz     short loc_7CE0"], ["movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [1, 0, 101, 0, 0, 3, 0, 0, 7, 6, 0.1956099456099456, ["mov     eax, cs:dereference", "cmp     eax, 3", "jb      loc_7F9E"], ["mov~eax,<TAG>", "cmp~eax,0", "jb~FOO"]], [0, 0, 71, 0, 1, 9, 1, 2, 15, 17, 0.01176427738927739, ["mov     rax, [rbp+f]", "mov     rax, [rax+0B0h]", "mov     rsi, rax; s2", "lea     rdi, aUnlabeled; \"unlabeled\"", "call    strcmp", "test    eax, eax", "setnz   al", "mov     [rbp+have_scontext], al", "jmp     short loc_81B9"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rsi,rax", "lea~rdi,<TAG>", "call~FOO", "test~eax,eax", "setnz~al", "mov~[rbp+0],al", "jmp~FOO"]], [0, 0, 73, 0, 1, 3, 1, 2, 14, 18, 0.026296620046620048, ["call    is_smack_enabled", "test    al, al", "jz      short loc_8152"], ["call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 126, 0, 0, 3, 1, 1, 8, 6, 0.01418026418026418, ["movzx   eax, cs:format_needs_type", "test    al, al", "jz      short loc_7D1F"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 100, 0, 0, 2, 0, 0, 8, 7, 0.02088189588189588, ["cmp     eax, 4", "jbe     short loc_7F1D"], ["cmp~eax,0", "jbe~FOO"]], [1, 0, 125, 0, 0, 2, 0, 1, 8, 7, 0.010926573426573426, ["cmp     [rbp+type], 6", "jz      short loc_7CF2"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 91, 0, 0, 2, 0, 1, 9, 6, 0.005042411292411293, ["cmp     eax, 5", "jnz     loc_7F9E"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 57, 0, 0, 3, 1, 1, 15, 12, 0.04433760683760684, ["mov     eax, cs:format_0", "test    eax, eax", "jz      short loc_82FC"], ["mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [1, 1, 35, 0, 2, 15, 0, 3, 18, 7, 0.08347902097902098, ["mov     rcx, cs:output_block_size", "mov     edx, cs:human_output_opts; opts", "lea     rsi, [rbp+buf]; buf", "mov     rax, [rbp+blocks]", "mov     r8, rcx; to_block_size", "mov     ecx, 200h; from_block_size", "mov     rdi, rax; n", "call    human_readable", "mov     esi, 0; flags", "mov     rdi, rax; string", "call    gnu_mbswidth", "mov     [rbp+len], eax", "mov     eax, cs:block_size_width", "cmp     [rbp+len], eax", "jle     short loc_84FC"], ["mov~rcx,<TAG>", "mov~edx,<TAG>", "lea~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~r8,rcx", "mov~ecx,<STR>", "mov~rdi,rax", "call~FOO", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "mov~eax,<TAG>", "cmp~[rbp+0],eax", "jle~FOO"]], [1, 0, 124, 0, 0, 2, 0, 1, 9, 6, 0.0009226884226884227, ["cmp     [rbp+type], 0", "jnz     short loc_7D1F"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 123, 0, 0, 3, 0, 1, 9, 8, 0.01927933177933178, ["mov     eax, cs:dereference", "cmp     eax, 5", "jz      loc_7DBC"], ["mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 118, 0, 0, 3, 1, 1, 10, 4, 0.01791958041958042, ["movzx   eax, cs:format_needs_type", "test    al, al", "jz      loc_87CC"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 115, 0, 0, 2, 0, 1, 13, 4, 0.008838383838383838, ["cmp     [rbp+type], 5", "jnz     loc_87CC"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 113, 0, 0, 3, 1, 1, 15, 4, 0.006167443667443667, ["movzx   eax, cs:print_with_color", "test    al, al", "jz      loc_87CC"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 109, 0, 1, 4, 1, 2, 19, 4, 0.0010198135198135198, ["mov     edi, 15h; type", "call    is_colored", "test    al, al", "jz      loc_87CC"], ["mov~edi,0", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 34, 0, 0, 2, 0, 0, 19, 7, 0.0, ["mov     eax, [rbp+len]", "mov     cs:block_size_width, eax"], ["mov~eax,[rbp+0]", "mov~<TAG>,eax"]], [0, 0, 122, 0, 0, 3, 1, 1, 10, 7, 0.0019425019425019425, ["movzx   eax, cs:color_symlink_as_referent", "test    al, al", "jnz     loc_7DBC"], ["movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [2, 1, 144, 1, 0, 18, 3, 1, 0, 13, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 3D8h", "mov     [rbp+name], rdi", "mov     [rbp+type], esi", "mov     [rbp+inode], rdx", "mov     eax, ecx", "mov     [rbp+dirname], r8", "mov     [rbp+command_line_arg], al", "mov     rax, fs:28h", "mov     [rbp+var_18], rax", "xor     eax, eax", "mov     [rbp+blocks], 0", "movzx   eax, [rbp+command_line_arg]", "xor     eax, 1", "test    al, al", "jnz     short loc_7B3C"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~[rbp+0],rdx", "mov~eax,ecx", "mov~[rbp+0],r8", "mov~[rbp+0],al", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0", "movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jnz~FOO"]], [0, 0, 11, 0, 3, 15, 0, 4, 25, 6, 0.025349650349650348, ["mov     rax, [rbp+f]", "mov     rax, [rax+40h]", "mov     rdi, rax; dev", "call    _gnu_dev_minor", "mov     edx, eax", "lea     rax, [rbp+buf]", "mov     rsi, rax; buf", "mov     rdi, rdx; i", "call    umaxtostr", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+len_4], eax", "mov     eax, cs:minor_device_number_width", "cmp     [rbp+len_4], eax", "jle     short loc_8720"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~edx,eax", "lea~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,rdx", "call~FOO", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "mov~eax,<TAG>", "cmp~[rbp+0],eax", "jle~FOO"]], [0, 0, 32, 0, 0, 3, 1, 1, 20, 8, 0.04195804195804196, ["movzx   eax, cs:print_owner", "test    al, al", "jz      short loc_8546"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 89, 0, 1, 9, 0, 2, 10, 5, 0.003601722351722352, ["mov     rax, [rbp+f]", "lea     rdx, [rax+18h]", "mov     rax, [rbp+full_name]", "mov     rsi, rdx; stat_buf", "mov     rdi, rax; filename", "call    stat_0", "mov     [rbp+err], eax", "mov     [rbp+do_deref], 1", "jmp     loc_7FCE"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 121, 0, 0, 3, 1, 1, 11, 6, 0.0018453768453768455, ["movzx   eax, cs:check_symlink_mode", "test    al, al", "jnz     loc_7DBC"], ["movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 0, 26, 6, 0.0, ["mov     eax, [rbp+len_4]", "mov     cs:minor_device_number_width, eax"], ["mov~eax,[rbp+0]", "mov~<TAG>,eax"]], [1, 0, 143, 0, 0, 2, 0, 1, 1, 13, 4.856254856254856e-05, ["cmp     [rbp+inode], 0", "jz      short loc_7B3C"], ["cmp~[rbp+0],0", "jz~FOO"]], [4, 0, 77, 0, 1, 15, 0, 2, 13, 19, 0.05506993006993007, ["mov     [rbp+have_scontext], 0", "mov     [rbp+have_acl], 0", "movzx   edx, [rbp+do_deref]; deref", "mov     rcx, [rbp+f]", "mov     rax, [rbp+full_name]", "mov     rsi, rcx; f", "mov     rdi, rax; file", "call    getfilecon_cache", "mov     [rbp+attr_len], eax", "mov     eax, [rbp+attr_len]", "shr     eax, 1Fh", "movzx   eax, al", "mov     [rbp+err], eax", "cmp     [rbp+err], 0", "jnz     short loc_817C"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "movzx~edx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "mov~eax,[rbp+0]", "shr~eax,0", "movzx~eax,al", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 97, 0, 0, 2, 0, 1, 9, 6, 0.016422235172235174, ["cmp     [rbp+command_line_arg], 0", "jz      short loc_7F9E"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 120, 0, 0, 3, 1, 1, 9, 5, 0.021076146076146076, ["movzx   eax, cs:print_inode", "test    al, al", "jz      short loc_7D38"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 10, 5, 0.00743006993006993, ["cmp     [rbp+inode], 0", "jz      loc_7DBC"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 2, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___9096; \"gobble_file\"", "mov     edx, 0C2Fh; line", "lea     rsi, file; \"src/ls.c\"", "lea     rdi, aCommandLineArg; \"! command_line_arg || inode == NOT_AN_I\"...", "call    ___assert_fail"], ["lea~rcx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO"]], [0, 0, 31, 0, 1, 8, 0, 2, 21, 8, 0.005293317793317793, ["mov     rax, [rbp+f]", "mov     eax, [rax+34h]", "mov     edi, eax; u", "call    format_user_width", "mov     [rbp+len_0], eax", "mov     eax, cs:owner_width", "cmp     [rbp+len_0], eax", "jle     short loc_8546"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~edi,eax", "call~FOO", "mov~[rbp+0],eax", "mov~eax,<TAG>", "cmp~[rbp+0],eax", "jle~FOO"]], [0, 0, 30, 0, 0, 2, 0, 0, 22, 8, 0.0, ["mov     eax, [rbp+len_0]", "mov     cs:owner_width, eax"], ["mov~eax,[rbp+0]", "mov~<TAG>,eax"]], [0, 0, 29, 0, 0, 3, 1, 1, 21, 7, 0.030448717948717948, ["movzx   eax, cs:print_group", "test    al, al", "jz      short loc_8582"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 28, 0, 1, 8, 0, 2, 22, 7, 0.005439005439005439, ["mov     rax, [rbp+f]", "mov     eax, [rax+38h]", "mov     edi, eax; g", "call    format_group_width", "mov     [rbp+len_1], eax", "mov     eax, cs:group_width", "cmp     [rbp+len_1], eax", "jle     short loc_8582"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~edi,eax", "call~FOO", "mov~[rbp+0],eax", "mov~eax,<TAG>", "cmp~[rbp+0],eax", "jle~FOO"]], [0, 0, 27, 0, 0, 2, 0, 0, 23, 7, 0.0, ["mov     eax, [rbp+len_1]", "mov     cs:group_width, eax"], ["mov~eax,[rbp+0]", "mov~<TAG>,eax"]], [1, 0, 117, 0, 0, 2, 0, 1, 11, 6, 0.015054390054390054, ["cmp     [rbp+type], 0", "jz      short loc_7DBC"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 71, 0, 1, 9, 1, 2, 15, 17, 0.01176427738927739, ["mov     rax, [rbp+f]", "mov     rax, [rax+0B0h]", "mov     rsi, rax; s2", "lea     rdi, asc_1D854; \"_\"", "call    strcmp", "test    eax, eax", "setnz   al", "mov     [rbp+have_scontext], al", "jmp     short loc_81B9"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rsi,rax", "lea~rdi,<TAG>", "call~FOO", "test~eax,eax", "setnz~al", "mov~[rbp+0],al", "jmp~FOO"]], [1, 0, 116, 0, 0, 2, 0, 1, 12, 5, 0.009518259518259518, ["cmp     [rbp+command_line_arg], 0", "jnz     short loc_7DBC"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 96, 0, 1, 11, 0, 2, 10, 6, 0.013111888111888112, ["mov     rax, [rbp+f]", "lea     rdx, [rax+18h]", "mov     rax, [rbp+full_name]", "mov     rsi, rdx; stat_buf", "mov     rdi, rax; filename", "call    stat_0", "mov     [rbp+err], eax", "mov     [rbp+do_deref], 1", "mov     eax, cs:dereference", "cmp     eax, 3", "jz      short loc_7FCA"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "mov~[rbp+0],0", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 94, 0, 0, 2, 0, 0, 11, 8, 0.008984071484071484, ["cmp     [rbp+err], 0", "jns     short loc_7F73"], ["cmp~[rbp+0],0", "jns~FOO"]], [1, 0, 108, 0, 0, 4, 0, 1, 4, 9, 0.17317404817404816, ["mov     rax, [rbp+name]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jz      short loc_7DD8"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [1, 0, 114, 0, 0, 3, 0, 1, 14, 5, 0.011994949494949494, ["mov     eax, cs:indicator_style_0", "cmp     eax, 3", "jz      short loc_7DBC"], ["mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 112, 0, 1, 4, 1, 2, 16, 7, 0.00946969696969697, ["mov     edi, 0Eh; type", "call    is_colored", "test    al, al", "jnz     short loc_7DBC"], ["mov~edi,0", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 111, 0, 1, 4, 1, 2, 17, 6, 0.003447940947940948, ["mov     edi, 10h; type", "call    is_colored", "test    al, al", "jnz     short loc_7DBC"], ["mov~edi,0", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 110, 0, 1, 4, 1, 2, 18, 5, 0.0022824397824397825, ["mov     edi, 11h; type", "call    is_colored", "test    al, al", "jnz     short loc_7DBC"], ["mov~edi,0", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 53, 0, 1, 6, 1, 2, 18, 13, 0.004224941724941725, ["mov     rax, [rbp+f]", "mov     rax, [rax+8]", "mov     rdi, rax; name", "call    needs_quoting", "test    al, al", "jz      short loc_8383"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 92, 0, 1, 5, 0, 2, 12, 7, 0.004492035742035742, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 2", "setz    al", "jmp     short loc_7F8A"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "setz~al", "jmp~FOO"]], [1, 0, 52, 0, 0, 2, 0, 0, 19, 13, 0.0, ["mov     rax, [rbp+f]", "mov     dword ptr [rax+0C4h], 0FFFFFFFFh"], ["mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0"]], [2, 0, 92, 0, 0, 5, 1, 0, 12, 7, 0.004492035742035742, ["mov     rax, [rbp+f]", "mov     eax, [rax+30h]", "and     eax, 0F000h", "cmp     eax, 4000h", "setnz   al"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "cmp~eax,0", "setnz~al"]], [1, 0, 51, 0, 0, 2, 0, 1, 17, 12, 0.030545843045843044, ["cmp     [rbp+linkname], 0", "jz      short loc_83E1"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 50, 0, 0, 3, 0, 1, 18, 13, 0.013111888111888112, ["mov     eax, cs:indicator_style_0", "cmp     eax, 1", "ja      short loc_83A3"], ["mov~eax,<TAG>", "cmp~eax,0", "ja~FOO"]], [1, 0, 91, 0, 0, 5, 2, 1, 13, 6, 0.01554001554001554, ["mov     [rbp+need_lstat], al", "movzx   eax, [rbp+need_lstat]", "xor     eax, 1", "test    al, al", "jnz     short loc_7FCD"], ["mov~[rbp+0],al", "movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jnz~FOO"]], [0, 0, 73, 0, 2, 9, 1, 3, 14, 18, 0.026296620046620048, ["mov     rax, [rbp+f]", "lea     rdx, UNKNOWN_SECURITY_CONTEXT; \"?\"", "mov     [rax+0B0h], rdx", "call    ___errno_location", "mov     eax, [rax]", "mov     edi, eax; err", "call    is_ENOTSUP", "test    al, al", "jnz     short loc_81AF"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~[rax+0],rdx", "call~FOO", "mov~eax,<TAG>", "mov~edi,eax", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 72, 0, 1, 4, 0, 2, 15, 17, 0.01176427738927739, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 3Dh ; '='", "jnz     short loc_81B9"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [1, 0, 71, 0, 0, 1, 0, 0, 15, 17, 0.01176427738927739, ["mov     [rbp+err], 0"], ["mov~[rbp+0],0"]], [0, 0, 48, 0, 1, 7, 1, 2, 19, 12, 0.005608974358974359, ["lea     rdx, [rbp+linkstats]", "mov     rax, [rbp+linkname]", "mov     rsi, rdx; stat_buf", "mov     rdi, rax; filename", "call    stat_0", "test    eax, eax", "jnz     short loc_83E1"], ["lea~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 49, 0, 0, 3, 1, 1, 19, 12, 0.0011412198912198912, ["movzx   eax, cs:check_symlink_mode", "test    al, al", "jz      short loc_83E1"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 89, 0, 1, 9, 0, 2, 8, 5, 0.1934650997150997, ["mov     rax, [rbp+f]", "lea     rdx, [rax+18h]", "mov     rax, [rbp+full_name]", "mov     rsi, rdx; stat_buf", "mov     rdi, rax; filename", "call    lstat", "mov     [rbp+err], eax", "mov     [rbp+do_deref], 0", "jmp     short loc_7FCE"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 89, 0, 0, 2, 0, 1, 11, 5, 0.004322066822066822, ["nop", "jmp     short loc_7FCE"], ["nop", "jmp~FOO"]], [0, 0, 89, 0, 0, 1, 0, 0, 14, 5, 0.008644133644133644, ["nop"], ["nop"]], [1, 0, 47, 0, 0, 5, 0, 0, 20, 12, 0.0, ["mov     rax, [rbp+f]", "mov     byte ptr [rax+0B9h], 1", "mov     edx, [rbp+linkstats.st_mode]", "mov     rax, [rbp+f]", "mov     [rax+0ACh], edx"], ["mov~rax,[rbp+0]", "mov~[yte ptr [rax+0],0", "mov~edx,[rbp+0]", "mov~rax,[rbp+0]", "mov~[rax+0],edx"]]], "func_feature": [63, 68, 176, 2, 145, 242, 3, 746, 0.03281, 46, 19], "succs": [[62, 30], [0, 92], [0, 20], [0], [8, 34], [43, 4], [15], [6, 15], [33], [38], [9, 11], [9], [42, 21], [12, 14], [12], [25, 22], [7, 15], [35], [17, 35], [129, 133], [19, 133], [42, 39], [25, 61], [41, 49], [49, 23], [32, 37], [38, 31], [26, 28], [26, 29], [26], [24, 51], [45, 46], [36, 37], [57, 44], [33], [33], [60], [60], [18, 35], [40, 42], [42], [65], [50, 124], [58, 52], [], [56, 79], [45], [53], [54, 47], [65], [124, 55], [65], [58, 78], [85, 70], [53], [59, 124], [77, 79], [], [78, 63], [64, 84], [80, 1], [60], [65], [75, 78], [84, 68], [69, 93], [124, 84], [66, 124], [67, 124], [93, 71], [83, 85], [104, 27], [73, 27], [74, 27], [27], [78], [38], [76, 38], [81, 109], [82, 103], [1], [1, 109], [103], [85], [88, 90], [89, 141], [16], [120, 86], [90, 111], [91, 110], [94, 95], [105, 141], [2, 20], [100, 71], [111, 95], [124, 101], [38, 119], [125, 38], [126, 38], [124, 38], [71], [106, 124], [108, 13], [10, 107], [114, 116], [5], [124, 111], [10], [113, 13], [136, 87], [122, 141], [112, 96], [96, 124], [], [115, 116], [116], [72, 117], [72, 118], [72], [121, 124], [16], [97, 124], [123, 142], [130, 132], [48, 54], [98, 124], [124, 127], [128, 124], [99, 124], [131, 133], [135], [133], [135], [3, 134], [139, 140], [141, 143], [137, 138], [16, 138], [16], [144, 3], [3, 139], [5], [5], [5], [3]], "fname": "gobble_file", "n_num": 145}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 4, 0, 0, 7, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+f], rdi", "mov     rax, [rbp+f]", "mov     eax, [rax+0A8h]", "cmp     eax, 3", "jz      short loc_8891"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.041666666666666664, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 3, 0, 0, 4, 0, 1, 0, 2, 0.08333333333333333, ["mov     rax, [rbp+f]", "mov     eax, [rax+0A8h]", "cmp     eax, 9", "jnz     short loc_8898"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "cmp~eax,0", "jnz~FOO"]], [1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0.0, ["and     eax, 1", "pop     rbp", "retn"], ["and~eax,0", "pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.125, ["mov     eax, 1", "jmp     short loc_889D"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [0, 1, 3, 0, 5, 6, 1, 17, 0.05, 0, 0], "succs": [[2, 4], [3], [1, 4], [], [3]], "fname": "is_directory", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.125, ["mov     eax, 1", "jmp     short loc_88EA"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 5, 0, 0, 7, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+f], rdi", "mov     rax, [rbp+f]", "mov     eax, [rax+0A8h]", "cmp     eax, 3", "jz      short loc_88DE"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 4, 0, 0, 4, 0, 1, 1, 2, 0.1, ["mov     rax, [rbp+f]", "mov     eax, [rax+0A8h]", "cmp     eax, 9", "jz      short loc_88DE"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "cmp~eax,0", "jz~FOO"]], [2, 0, 3, 0, 0, 5, 1, 1, 2, 2, 0.1, ["mov     rax, [rbp+f]", "mov     eax, [rax+0ACh]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     short loc_88E5"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, 1, 0.025, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 0, 0, 0, 3, 1, 0, 2, 0, 0.0, ["and     eax, 1", "pop     rbp", "retn"], ["and~eax,0", "pop~rbp", "retn"]]], "func_feature": [0, 2, 4, 0, 6, 8, 52, 22, 0.05833, 0, 0], "succs": [[5], [0, 2], [0, 3], [0, 4], [5], []], "fname": "is_linked_directory", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["nop", "leave", "retn"], ["nop", "leave", "retn"]], [0, 1, 2, 1, 1, 21, 1, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+filename], rdi", "mov     [rbp+f], rsi", "mov     eax, edx", "mov     [rbp+command_line_arg], al", "mov     rax, [rbp+f]", "mov     rax, [rax+48h]", "mov     rdx, rax", "mov     rax, [rbp+filename]", "mov     rsi, rdx; size", "mov     rdi, rax; file", "call    areadlink_with_size", "mov     rdx, rax", "mov     rax, [rbp+f]", "mov     [rax+8], rdx", "mov     rax, [rbp+f]", "mov     rax, [rax+8]", "test    rax, rax", "jnz     short loc_8957"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~eax,edx", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 1, 0, 2, 8, 0, 2, 1, 0, 0.0, ["lea     rdi, aCannotReadSymb; \"cannot read symbolic link %s\"", "call    _gettext", "mov     rcx, rax", "movzx   eax, [rbp+command_line_arg]", "mov     rdx, [rbp+filename]; file", "mov     rsi, rcx; message", "mov     edi, eax; serious", "call    file_failure"], ["lea~rdi,<TAG>", "call~FOO", "mov~rcx,rax", "movzx~eax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,rcx", "mov~edi,eax", "call~FOO"]]], "func_feature": [3, 1, 4, 0, 3, 3, 1, 32, 0.0, 1, 1], "succs": [[], [0, 2], [0]], "fname": "get_link_name", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 7, 0, 0, 4, 0, 1, 0, 0, 0.08333333333333333, ["mov     rax, [rbp+linkname]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jnz     short loc_8997"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [1, 1, 9, 1, 0, 7, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+name], rdi", "mov     [rbp+linkname], rsi", "cmp     [rbp+linkname], 0", "jnz     short loc_897B"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 3, 3, 2, 17, 0, 3, 3, 2, 0.08333333333333333, ["mov     rax, [rbp+linkname]", "mov     rdi, rax; s", "call    _strlen", "mov     rdx, rax", "mov     rax, [rbp+prefix_len]", "add     rax, rdx", "add     rax, 2", "mov     rdi, rax; n", "call    xmalloc", "mov     [rbp+p], rax", "mov     rax, [rbp+prefix_len]", "lea     rdx, [rax-1]", "mov     rax, [rbp+name]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jz      short loc_89FD"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "add~rax,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "lea~rdx,[rax-1]+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [1, 0, 5, 0, 1, 6, 0, 2, 2, 2, 0.1111111111111111, ["mov     rax, [rbp+name]", "mov     rdi, rax; file", "call    dir_len", "mov     [rbp+prefix_len], rax", "cmp     [rbp+prefix_len], 0", "jnz     short loc_89BC"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 1, 0, 2, 12, 0, 2, 4, 1, 0.027777777777777776, ["mov     rdx, [rbp+prefix_len]; n", "mov     rcx, [rbp+name]", "mov     rax, [rbp+p]", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    _stpncpy", "mov     rdx, rax", "mov     rax, [rbp+linkname]", "mov     rsi, rax; src", "mov     rdi, rdx; dest", "call    _strcpy", "mov     rax, [rbp+p]"], ["mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,rdx", "call~FOO", "mov~rax,[rbp+0]"]], [1, 0, 2, 1, 0, 1, 0, 0, 4, 2, 0.0, ["add     [rbp+prefix_len], 1"], ["add~[rbp+0],0"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.013888888888888888, ["mov     eax, 0", "jmp     locret_8A2A"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 1, 0, 1, 4, 0, 2, 2, 1, 0.013888888888888888, ["mov     rax, [rbp+linkname]", "mov     rdi, rax; string", "call    xstrdup", "jmp     locret_8A2A"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 1, 4, 0, 2, 3, 1, 0.013888888888888888, ["mov     rax, [rbp+linkname]", "mov     rdi, rax; string", "call    xstrdup", "jmp     short locret_8A2A"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "jmp~FOO"]]], "func_feature": [7, 0, 14, 0, 10, 13, 1, 59, 0.03472, 0, 5], "succs": [[8, 3], [0, 7], [4, 5], [9, 2], [6], [4], [], [6], [6], [6]], "fname": "make_link_name", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 1, 0, 1, 2, 13, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+name], rdi", "mov     rax, [rbp+name]", "mov     rdi, rax; name", "call    last_component", "mov     [rbp+base], rax", "mov     rax, [rbp+base]", "mov     rdi, rax; file_name", "call    dot_or_dotdot", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 1, 13, 0.0, 0, 1], "succs": [[]], "fname": "basename_is_dot_or_dotdot", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[4, 0, 3, 6, 0, 19, 0, 0, 0, 0, 0.0, ["mov     rax, cs:sorted_file", "mov     rdx, [rbp+i]", "shl     rdx, 3", "add     rax, rdx", "mov     rax, [rax]", "mov     [rbp+f_0], rax", "mov     rax, cs:sorted_file", "mov     rdx, [rbp+j]", "shl     rdx, 3", "add     rdx, rax", "mov     rax, [rbp+f_0]", "mov     [rdx], rax", "mov     rax, [rbp+f_0]", "mov     eax, [rax+0A8h]", "cmp     eax, 9", "setnz   al", "movzx   eax, al", "add     [rbp+j], rax", "add     [rbp+i], 1"], ["mov~rax,<TAG>", "mov~rdx,[rbp+0]", "shl~rdx,0", "add~rax,rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,<TAG>", "mov~rdx,[rbp+0]", "shl~rdx,0", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~<TAG>,rax", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "cmp~eax,0", "setnz~al", "movzx~eax,al", "add~[rbp+0],rax", "add~[rbp+0],0"]], [0, 0, 3, 0, 0, 3, 0, 0, 4, 1, 0.11397058823529412, ["mov     rax, cs:cwd_n_used", "cmp     [rbp+i], rax", "jb      short loc_8BBA"], ["mov~rax,<TAG>", "cmp~[rbp+0],rax", "jb~FOO"]], [1, 0, 14, 0, 0, 4, 2, 1, 4, 5, 0.23529411764705882, ["movzx   eax, [rbp+ignore_dot_and_dot_dot]", "xor     eax, 1", "test    al, al", "jnz     short loc_8AFD"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jnz~FOO"]], [1, 0, 14, 2, 1, 11, 1, 2, 3, 4, 0.2536764705882353, ["mov     rax, cs:sorted_file", "mov     rdx, [rbp+i]", "shl     rdx, 3", "add     rax, rdx", "mov     rax, [rax]", "mov     [rbp+f], rax", "mov     rax, [rbp+f]", "mov     rdi, rax; f", "call    is_directory", "test    al, al", "jz      loc_8B93"], ["mov~rax,<TAG>", "mov~rdx,[rbp+0]", "shl~rdx,0", "add~rax,rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 5, 6, 0.1875, ["cmp     [rbp+dirname], 0", "jz      short loc_8B12"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 14, 0, 1, 7, 2, 2, 5, 4, 0.022058823529411763, ["mov     rax, [rbp+f]", "mov     rax, [rax]", "mov     rdi, rax; name", "call    basename_is_dot_or_dotdot", "xor     eax, 1", "test    al, al", "jz      loc_8B93"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 16, 0, 0, 3, 1, 1, 1, 5, 0.003676470588235294, ["mov     rax, cs:active_dir_set", "test    rax, rax", "jz      short loc_8A9B"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [3, 0, 17, 1, 0, 11, 0, 1, 0, 5, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+dirname], rdi", "mov     eax, esi", "mov     [rbp+command_line_arg], al", "cmp     [rbp+dirname], 0", "setnz   al", "mov     [rbp+ignore_dot_and_dot_dot], al", "cmp     [rbp+dirname], 0", "jz      short loc_8A9B"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~eax,esi", "mov~[rbp+0],al", "cmp~[rbp+0],0", "setnz~al", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 3, 0, 0, 3, 0, 1, 3, 2, 0.15441176470588236, ["mov     [rbp+i], 0", "mov     [rbp+j], 0", "jmp     short loc_8C08"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 14, 0, 0, 4, 0, 1, 7, 4, 0.1875, ["mov     rax, [rbp+f]", "mov     eax, [rax+0A8h]", "cmp     eax, 9", "jnz     short loc_8B93"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "cmp~eax,0", "jnz~FOO"]], [0, 0, 14, 0, 1, 9, 0, 2, 6, 5, 0.11948529411764705, ["movzx   edx, [rbp+command_line_arg]; command_line_arg", "mov     rax, [rbp+f]", "mov     rcx, [rax+8]", "mov     rax, [rbp+f]", "mov     rax, [rax]", "mov     rsi, rcx; realname", "mov     rdi, rax; name", "call    queue_directory", "jmp     short loc_8B78"], ["movzx~edx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rcx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 14, 0, 3, 18, 0, 3, 7, 5, 0.02022058823529412, ["mov     rax, [rbp+f]", "mov     rcx, [rax]", "mov     rax, [rbp+dirname]", "mov     edx, 0; base_in_result", "mov     rsi, rcx; base", "mov     rdi, rax; dir", "call    file_name_concat", "mov     [rbp+name], rax", "movzx   edx, [rbp+command_line_arg]; command_line_arg", "mov     rax, [rbp+f]", "mov     rcx, [rax+8]", "mov     rax, [rbp+name]", "mov     rsi, rcx; realname", "mov     rdi, rax; name", "call    queue_directory", "mov     rax, [rbp+name]", "mov     rdi, rax; ptr", "call    free"], ["mov~rax,[rbp+0]", "mov~rcx,<TAG>", "mov~rax,[rbp+0]", "mov~edx,0", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "movzx~edx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rcx,[rax+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO"]], [0, 0, 14, 0, 0, 3, 0, 1, 1, 4, 0.15441176470588236, ["mov     rax, cs:cwd_n_used", "mov     [rbp+i], rax", "jmp     loc_8B93"], ["mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [2, 0, 15, 0, 1, 5, 0, 1, 2, 5, 0.0, ["mov     rax, [rbp+dirname]", "mov     edx, 0; command_line_arg", "mov     rsi, rax; realname", "mov     edi, 0; name", "call    queue_directory"], ["mov~rax,[rbp+0]", "mov~edx,0", "mov~rsi,rax", "mov~edi,0", "call~FOO"]], [0, 0, 14, 0, 0, 5, 1, 1, 2, 3, 0.45955882352941174, ["mov     rax, [rbp+i]", "lea     rdx, [rax-1]", "mov     [rbp+i], rdx", "test    rax, rax", "jnz     loc_8AAB"], ["mov~rax,[rbp+0]", "lea~rdx,[rax-1]+0]", "mov~[rbp+0],rdx", "test~rax,rax", "jnz~FOO"]], [0, 0, 14, 0, 1, 3, 0, 1, 8, 4, 0.0, ["mov     rax, [rbp+f]", "mov     rdi, rax; f", "call    free_ent"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO"]], [1, 0, 14, 0, 0, 5, 0, 1, 6, 6, 0.044117647058823525, ["mov     rax, [rbp+f]", "mov     rax, [rax]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jnz     short loc_8B32"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 5, 0, 0.0, ["mov     rax, [rbp+j]", "mov     cs:cwd_n_used, rax", "nop", "leave", "retn"], ["mov~rax,[rbp+0]", "mov~<TAG>,rax", "nop", "leave", "retn"]]], "func_feature": [8, 7, 20, 0, 18, 27, 2, 120, 0.10866, 3, 9], "succs": [[1], [0, 17], [4, 5], [2, 14], [16, 10], [4, 14], [12, 13], [12, 6], [1], [14, 15], [9], [9], [14], [12], [8, 3], [14], [10, 11], []], "fname": "extract_dirs_from_files", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 2, 1, 3, 20, 1, 4, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r13", "push    r12", "push    rbx", "sub     rsp, 28h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "call    ___errno_location", "mov     dword ptr [rax], 0", "mov     rdx, [rbp+b]", "mov     rax, [rbp+a]", "mov     rsi, rdx; s2", "mov     rdi, rax; s1", "call    _strcoll", "mov     [rbp+diff], eax", "call    ___errno_location", "mov     eax, [rax]", "test    eax, eax", "jz      short loc_8CD7"], ["push~rbp", "mov~rbp,rsp", "push~r13", "push~r12", "push~rbx", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "call~FOO", "mov~<TAG>,0", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "call~FOO", "mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 0, 0, 0.0, ["mov     eax, [rbp+diff]", "add     rsp, 28h", "pop     rbx", "pop     r12", "pop     r13", "pop     rbp", "retn"], ["mov~eax,[rbp+0]", "add~rsp,0", "pop~rbx", "pop~r12", "pop~r13", "pop~rbp", "retn"]], [6, 0, 0, 0, 7, 27, 0, 7, 0, -1, 0.0, ["mov     rax, [rbp+b]", "mov     rsi, rax; arg", "mov     edi, 1; n", "call    quote_n", "mov     r13, rax", "mov     rax, [rbp+a]", "mov     rsi, rax; arg", "mov     edi, 0; n", "call    quote_n", "mov     r12, rax", "lea     rdi, aCannotCompareF; \"cannot compare file names %s and %s\"", "call    _gettext", "mov     rbx, rax", "call    ___errno_location", "mov     eax, [rax]", "mov     r8, r13", "mov     rcx, r12", "mov     rdx, rbx; format", "mov     esi, eax; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     edi, 0; serious", "call    set_exit_status", "mov     esi, 1; val", "lea     rdi, failed_strcoll; env", "call    _longjmp"], ["mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "mov~r13,rax", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "mov~r12,rax", "lea~rdi,<TAG>", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~eax,<TAG>", "mov~r8,r13", "mov~rcx,r12", "mov~rdx,rbx", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~edi,0", "call~FOO", "mov~esi,0", "lea~rdi,<TAG>", "call~FOO"]]], "func_feature": [10, 1, 11, 0, 3, 2, 0, 54, 0.0, 2, 2], "succs": [[1, 2], [], []], "fname": "xstrcoll", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[4, 0, 3, 3, 3, 31, 0, 4, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r13", "push    r12", "push    rbx", "sub     rsp, 38h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     [rbp+cmp], rdx", "mov     rax, [rbp+a]", "add     rax, 18h", "mov     rdi, rax; st", "call    get_stat_ctime", "mov     r12, rax", "mov     r13, rdx", "mov     rax, [rbp+b]", "add     rax, 18h", "mov     rdi, rax; st", "call    get_stat_ctime", "mov     rcx, rax", "mov     rbx, rdx", "mov     rsi, rcx", "mov     rax, rdx", "mov     rdx, r12; b", "mov     rcx, r13; b", "mov     rdi, rsi; a", "mov     rsi, rax; a", "call    timespec_cmp", "mov     [rbp+diff], eax", "cmp     [rbp+diff], 0", "jnz     short loc_8D66"], ["push~rbp", "mov~rbp,rsp", "push~r13", "push~r12", "push~rbx", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rax,[rbp+0]", "add~rax,0", "mov~rdi,rax", "call~FOO", "mov~r12,rax", "mov~r13,rdx", "mov~rax,[rbp+0]", "add~rax,0", "mov~rdi,rax", "call~FOO", "mov~rcx,rax", "mov~rbx,rdx", "mov~rsi,rcx", "mov~rax,rdx", "mov~rdx,r12", "mov~rcx,r13", "mov~rdi,rsi", "mov~rsi,rax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 0, 0, 0.0, ["add     rsp, 38h", "pop     rbx", "pop     r12", "pop     r13", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~r12", "pop~r13", "pop~rbp", "retn"]], [0, 0, 1, 0, 1, 9, 0, 2, 0, 1, 0.08333333333333333, ["mov     rax, [rbp+b]", "mov     rcx, [rax]", "mov     rax, [rbp+a]", "mov     rdx, [rax]", "mov     rax, [rbp+cmp]", "mov     rsi, rcx", "mov     rdi, rdx", "call    rax", "jmp     short loc_8D69"], ["mov~rax,[rbp+0]", "mov~rcx,<TAG>", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rdx", "call~rax", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.08333333333333333, ["mov     eax, [rbp+diff]"], ["mov~eax,[rbp+0]"]]], "func_feature": [4, 0, 6, 0, 4, 4, 8, 47, 0.04167, 0, 4], "succs": [[2, 3], [], [1], [1]], "fname": "cmp_ctime", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 0, 6, 0, 0, 0, 0, 0.0, ["add     rsp, 38h", "pop     rbx", "pop     r12", "pop     r13", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~r12", "pop~r13", "pop~rbp", "retn"]], [0, 0, 1, 0, 1, 9, 0, 2, 1, 0, 0.08333333333333333, ["mov     rax, [rbp+b]", "mov     rcx, [rax]", "mov     rax, [rbp+a]", "mov     rdx, [rax]", "mov     rax, [rbp+cmp]", "mov     rsi, rcx", "mov     rdi, rdx", "call    rax", "jmp     short loc_8DF8"], ["mov~rax,[rbp+0]", "mov~rcx,<TAG>", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rdx", "call~rax", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0.08333333333333333, ["mov     eax, [rbp+diff]"], ["mov~eax,[rbp+0]"]], [4, 0, 3, 3, 3, 31, 0, 4, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r13", "push    r12", "push    rbx", "sub     rsp, 38h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     [rbp+cmp], rdx", "mov     rax, [rbp+a]", "add     rax, 18h", "mov     rdi, rax; st", "call    get_stat_mtime", "mov     r12, rax", "mov     r13, rdx", "mov     rax, [rbp+b]", "add     rax, 18h", "mov     rdi, rax; st", "call    get_stat_mtime", "mov     rcx, rax", "mov     rbx, rdx", "mov     rsi, rcx", "mov     rax, rdx", "mov     rdx, r12; b", "mov     rcx, r13; b", "mov     rdi, rsi; a", "mov     rsi, rax; a", "call    timespec_cmp", "mov     [rbp+diff], eax", "cmp     [rbp+diff], 0", "jnz     short loc_8DF5"], ["push~rbp", "mov~rbp,rsp", "push~r13", "push~r12", "push~rbx", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rax,[rbp+0]", "add~rax,0", "mov~rdi,rax", "call~FOO", "mov~r12,rax", "mov~r13,rdx", "mov~rax,[rbp+0]", "add~rax,0", "mov~rdi,rax", "call~FOO", "mov~rcx,rax", "mov~rbx,rdx", "mov~rsi,rcx", "mov~rax,rdx", "mov~rdx,r12", "mov~rcx,r13", "mov~rdi,rsi", "mov~rsi,rax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jnz~FOO"]]], "func_feature": [4, 0, 6, 0, 4, 4, 8, 47, 0.04167, 0, 4], "succs": [[], [0], [0], [1, 2]], "fname": "cmp_mtime", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 0, 6, 0, 0, 0, 0, 0.0, ["add     rsp, 38h", "pop     rbx", "pop     r12", "pop     r13", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~r12", "pop~r13", "pop~rbp", "retn"]], [0, 0, 1, 0, 1, 9, 0, 2, 1, 0, 0.08333333333333333, ["mov     rax, [rbp+b]", "mov     rcx, [rax]", "mov     rax, [rbp+a]", "mov     rdx, [rax]", "mov     rax, [rbp+cmp]", "mov     rsi, rcx", "mov     rdi, rdx", "call    rax", "jmp     short loc_8E87"], ["mov~rax,[rbp+0]", "mov~rcx,<TAG>", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rdx", "call~rax", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0.08333333333333333, ["mov     eax, [rbp+diff]"], ["mov~eax,[rbp+0]"]], [4, 0, 3, 3, 3, 31, 0, 4, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r13", "push    r12", "push    rbx", "sub     rsp, 38h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     [rbp+cmp], rdx", "mov     rax, [rbp+a]", "add     rax, 18h", "mov     rdi, rax; st", "call    get_stat_atime", "mov     r12, rax", "mov     r13, rdx", "mov     rax, [rbp+b]", "add     rax, 18h", "mov     rdi, rax; st", "call    get_stat_atime", "mov     rcx, rax", "mov     rbx, rdx", "mov     rsi, rcx", "mov     rax, rdx", "mov     rdx, r12; b", "mov     rcx, r13; b", "mov     rdi, rsi; a", "mov     rsi, rax; a", "call    timespec_cmp", "mov     [rbp+diff], eax", "cmp     [rbp+diff], 0", "jnz     short loc_8E84"], ["push~rbp", "mov~rbp,rsp", "push~r13", "push~r12", "push~rbx", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rax,[rbp+0]", "add~rax,0", "mov~rdi,rax", "call~FOO", "mov~r12,rax", "mov~r13,rdx", "mov~rax,[rbp+0]", "add~rax,0", "mov~rdi,rax", "call~FOO", "mov~rcx,rax", "mov~rbx,rdx", "mov~rsi,rcx", "mov~rax,rdx", "mov~rdx,r12", "mov~rcx,r13", "mov~rdi,rsi", "mov~rsi,rax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jnz~FOO"]]], "func_feature": [4, 0, 6, 0, 4, 4, 8, 47, 0.04167, 0, 4], "succs": [[], [0], [0], [1, 2]], "fname": "cmp_atime", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.06666666666666667, ["mov     eax, [rbp+diff]"], ["mov~eax,[rbp+0]"]], [1, 0, 3, 0, 0, 3, 0, 1, 2, 2, 0.3, ["mov     [rbp+diff], eax", "cmp     [rbp+diff], 0", "jnz     short loc_8F00"], ["mov~[rbp+0],eax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 4, 0, 0, 8, 0, 1, 1, 3, 0.06666666666666667, ["mov     rax, [rbp+b]", "mov     rdx, [rax+48h]", "mov     rax, [rbp+a]", "mov     rax, [rax+48h]", "cmp     rdx, rax", "setnle  al", "movzx   eax, al", "jmp     short loc_8EDB"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~rdx,rax", "setnle~al", "movzx~eax,al", "jmp~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 1, 3, 0.06666666666666667, ["mov     eax, 0FFFFFFFFh"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 1, 0, 1, 9, 0, 2, 3, 1, 0.06666666666666667, ["mov     rax, [rbp+b]", "mov     rcx, [rax]", "mov     rax, [rbp+a]", "mov     rdx, [rax]", "mov     rax, [rbp+cmp]", "mov     rsi, rcx", "mov     rdi, rdx", "call    rax", "jmp     short locret_8F03"], ["mov~rax,[rbp+0]", "mov~rcx,<TAG>", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rdx", "call~rax", "jmp~FOO"]], [1, 0, 6, 1, 0, 12, 0, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     [rbp+cmp], rdx", "mov     rax, [rbp+b]", "mov     rdx, [rax+48h]", "mov     rax, [rbp+a]", "mov     rax, [rax+48h]", "cmp     rdx, rax", "jl      short loc_8ED6"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~rdx,rax", "jl~FOO"]]], "func_feature": [1, 0, 5, 0, 7, 8, 8, 36, 0.08095, 0, 1], "succs": [[4], [0, 5], [1], [1], [], [4], [2, 3]], "fname": "cmp_size", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 1, 0, 1, 1, 16, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     [rbp+cmp], rdx", "mov     rax, [rbp+b]", "mov     rcx, [rax]", "mov     rax, [rbp+a]", "mov     rdx, [rax]", "mov     rax, [rbp+cmp]", "mov     rsi, rcx", "mov     rdi, rdx", "call    rax", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rax,[rbp+0]", "mov~rcx,<TAG>", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rdx", "call~rax", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 8, 16, 0.0, 0, 1], "succs": [[]], "fname": "cmp_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 7, 0, 0, 2, 0, 1, 0, 0, 0.048611111111111105, ["mov     rdx, [rbp+base2]", "jmp     short loc_8F8D"], ["mov~rdx,[rbp+0]", "jmp~FOO"]], [4, 0, 9, 1, 2, 20, 0, 3, 0, 6, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     [rbp+cmp], rdx", "mov     rax, [rbp+a]", "mov     rax, [rax]", "mov     esi, 2Eh ; '.'; c", "mov     rdi, rax; s", "call    _strrchr", "mov     [rbp+base1], rax", "mov     rax, [rbp+b]", "mov     rax, [rax]", "mov     esi, 2Eh ; '.'; c", "mov     rdi, rax; s", "call    _strrchr", "mov     [rbp+base2], rax", "cmp     [rbp+base2], 0", "jz      short loc_8F86"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 1, 5, 0.048611111111111105, ["lea     rdx, suffixes"], ["lea~rdx,<TAG>"]], [0, 0, 1, 0, 0, 1, 0, 0, 5, 1, 0.048611111111111105, ["mov     eax, [rbp+diff]"], ["mov~eax,[rbp+0]"]], [1, 0, 3, 0, 1, 7, 0, 2, 4, 2, 0.25, ["mov     rcx, [rbp+cmp]", "mov     rsi, rdx", "mov     rdi, rax", "call    rcx", "mov     [rbp+diff], eax", "cmp     [rbp+diff], 0", "jnz     short loc_8FD2"], ["mov~rcx,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~rcx", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 1, 0, 1, 9, 0, 2, 5, 1, 0.048611111111111105, ["mov     rax, [rbp+b]", "mov     rcx, [rax]", "mov     rax, [rbp+a]", "mov     rdx, [rax]", "mov     rax, [rbp+cmp]", "mov     rsi, rcx", "mov     rdi, rdx", "call    rax", "jmp     short locret_8FD5"], ["mov~rax,[rbp+0]", "mov~rcx,<TAG>", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rdx", "call~rax", "jmp~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 2, 4, 0.25, ["cmp     [rbp+base1], 0", "jz      short loc_8F9A"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 3, 3, 0.1111111111111111, ["mov     rax, [rbp+base1]", "jmp     short loc_8FA1"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 3, 3, 0.1111111111111111, ["lea     rax, suffixes"], ["lea~rax,<TAG>"]], [0, 0, 0, 0, 0, 2, 0, 0, 6, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [4, 0, 10, 0, 10, 12, 8, 47, 0.09167, 1, 1], "succs": [[6], [0, 2], [6], [9], [3, 5], [9], [8, 7], [4], [4], []], "fname": "cmp_extension", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rcx, [rbp+b]", "mov     rax, [rbp+a]", "lea     rdx, xstrcoll; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_ctime", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 13, 0.0, 1, 1], "succs": [[]], "fname": "xstrcoll_ctime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rcx, [rbp+b]", "mov     rax, [rbp+a]", "mov     rdx, cs:cmp; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_ctime", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 13, 0.0, 1, 1], "succs": [[]], "fname": "strcmp_ctime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rcx, [rbp+a]", "mov     rax, [rbp+b]", "lea     rdx, xstrcoll; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_ctime", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 13, 0.0, 1, 1], "succs": [[]], "fname": "rev_xstrcoll_ctime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rcx, [rbp+a]", "mov     rax, [rbp+b]", "mov     rdx, cs:cmp; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_ctime", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 13, 0.0, 1, 1], "succs": [[]], "fname": "rev_strcmp_ctime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 0, 0.03571428571428571, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_90FF"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 0, 0.011904761904761904, ["mov     eax, 1", "jmp     short locret_90FF"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 1, 0, 1, 6, 0, 1, 2, 0, 0.047619047619047616, ["mov     rcx, [rbp+b]", "mov     rax, [rbp+a]", "lea     rdx, xstrcoll; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_ctime"], ["mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 0, 0.07142857142857142, ["cmp     [rbp+b_is_dir], 0", "jz      short loc_90E5"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 6, 0, 0, 4, 2, 1, 1, 0, 0.03571428571428571, ["movzx   eax, [rbp+b_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_90CD"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 1, 7, 1, 2, 15, 0, 3, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+a]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+a_is_dir], al", "mov     rax, [rbp+b]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+b_is_dir], al", "cmp     [rbp+a_is_dir], 0", "jz      short loc_90CD"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 4, 0, 0, 4, 2, 1, 1, 0, 0.15476190476190477, ["movzx   eax, [rbp+a_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_90E5"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]]], "func_feature": [3, 4, 9, 0, 8, 11, 0, 37, 0.04464, 1, 1], "succs": [[], [0], [0], [0], [2, 3], [1, 7], [5, 7], [3, 4]], "fname": "xstrcoll_df_ctime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.03571428571428571, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_9179"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 6, 0, 0, 4, 2, 1, 1, 2, 0.03571428571428571, ["movzx   eax, [rbp+b_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_9147"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 4, 0, 0, 4, 2, 1, 1, 2, 0.15476190476190477, ["movzx   eax, [rbp+a_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_915F"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 1, 7, 1, 2, 15, 0, 3, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+a]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+a_is_dir], al", "mov     rax, [rbp+b]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+b_is_dir], al", "cmp     [rbp+a_is_dir], 0", "jz      short loc_9147"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 1, 0, 1, 6, 0, 1, 2, 1, 0.047619047619047616, ["mov     rcx, [rbp+b]", "mov     rax, [rbp+a]", "mov     rdx, cs:cmp; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_ctime"], ["mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.07142857142857142, ["cmp     [rbp+b_is_dir], 0", "jz      short loc_915F"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.011904761904761904, ["mov     eax, 1", "jmp     short locret_9179"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [3, 4, 9, 0, 8, 11, 0, 37, 0.04464, 1, 1], "succs": [[6], [0, 2], [4, 5], [1, 2], [6], [4, 7], [], [6]], "fname": "strcmp_df_ctime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 4, 0, 0, 4, 2, 1, 0, 0, 0.15476190476190477, ["movzx   eax, [rbp+a_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_91D9"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 1, 7, 1, 2, 15, 0, 3, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+a]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+a_is_dir], al", "mov     rax, [rbp+b]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+b_is_dir], al", "cmp     [rbp+a_is_dir], 0", "jz      short loc_91C1"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 6, 0, 0, 4, 2, 1, 1, 2, 0.03571428571428571, ["movzx   eax, [rbp+b_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_91C1"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 1, 0, 1, 6, 0, 1, 2, 1, 0.047619047619047616, ["mov     rcx, [rbp+a]", "mov     rax, [rbp+b]", "lea     rdx, xstrcoll; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_ctime"], ["mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.07142857142857142, ["cmp     [rbp+b_is_dir], 0", "jz      short loc_91D9"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.03571428571428571, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_91F3"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.011904761904761904, ["mov     eax, 1", "jmp     short locret_91F3"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [3, 4, 9, 0, 8, 11, 0, 37, 0.04464, 1, 1], "succs": [[3, 4], [0, 2], [0, 6], [5], [3, 7], [], [5], [5]], "fname": "rev_xstrcoll_df_ctime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 4, 0, 0, 4, 2, 1, 0, 0, 0.15476190476190477, ["movzx   eax, [rbp+a_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_9253"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 1, 7, 1, 2, 15, 0, 3, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+a]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+a_is_dir], al", "mov     rax, [rbp+b]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+b_is_dir], al", "cmp     [rbp+a_is_dir], 0", "jz      short loc_923B"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 6, 0, 0, 4, 2, 1, 1, 2, 0.03571428571428571, ["movzx   eax, [rbp+b_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_923B"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 1, 0, 1, 6, 0, 1, 2, 1, 0.047619047619047616, ["mov     rcx, [rbp+a]", "mov     rax, [rbp+b]", "mov     rdx, cs:cmp; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_ctime"], ["mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.07142857142857142, ["cmp     [rbp+b_is_dir], 0", "jz      short loc_9253"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.03571428571428571, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_926D"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.011904761904761904, ["mov     eax, 1", "jmp     short locret_926D"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [3, 4, 9, 0, 8, 11, 0, 37, 0.04464, 1, 1], "succs": [[3, 4], [0, 2], [0, 6], [5], [3, 7], [], [5], [5]], "fname": "rev_strcmp_df_ctime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rcx, [rbp+b]", "mov     rax, [rbp+a]", "lea     rdx, xstrcoll; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_mtime", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 13, 0.0, 1, 1], "succs": [[]], "fname": "xstrcoll_mtime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rcx, [rbp+b]", "mov     rax, [rbp+a]", "mov     rdx, cs:cmp; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_mtime", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 13, 0.0, 1, 1], "succs": [[]], "fname": "strcmp_mtime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rcx, [rbp+a]", "mov     rax, [rbp+b]", "lea     rdx, xstrcoll; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_mtime", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 13, 0.0, 1, 1], "succs": [[]], "fname": "rev_xstrcoll_mtime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rcx, [rbp+a]", "mov     rax, [rbp+b]", "mov     rdx, cs:cmp; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_mtime", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 13, 0.0, 1, 1], "succs": [[]], "fname": "rev_strcmp_mtime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.03571428571428571, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_9397"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 6, 0, 0, 4, 2, 1, 1, 2, 0.03571428571428571, ["movzx   eax, [rbp+b_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_9365"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 4, 0, 0, 4, 2, 1, 1, 2, 0.15476190476190477, ["movzx   eax, [rbp+a_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_937D"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 1, 7, 1, 2, 15, 0, 3, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+a]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+a_is_dir], al", "mov     rax, [rbp+b]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+b_is_dir], al", "cmp     [rbp+a_is_dir], 0", "jz      short loc_9365"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 1, 0, 1, 6, 0, 1, 2, 1, 0.047619047619047616, ["mov     rcx, [rbp+b]", "mov     rax, [rbp+a]", "lea     rdx, xstrcoll; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_mtime"], ["mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.07142857142857142, ["cmp     [rbp+b_is_dir], 0", "jz      short loc_937D"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.011904761904761904, ["mov     eax, 1", "jmp     short locret_9397"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [3, 4, 9, 0, 8, 11, 0, 37, 0.04464, 1, 1], "succs": [[6], [0, 2], [4, 5], [1, 2], [6], [4, 7], [], [6]], "fname": "xstrcoll_df_mtime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 4, 0, 0, 4, 2, 1, 0, 0, 0.15476190476190477, ["movzx   eax, [rbp+a_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_93F7"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 1, 7, 1, 2, 15, 0, 3, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+a]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+a_is_dir], al", "mov     rax, [rbp+b]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+b_is_dir], al", "cmp     [rbp+a_is_dir], 0", "jz      short loc_93DF"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 6, 0, 0, 4, 2, 1, 1, 2, 0.03571428571428571, ["movzx   eax, [rbp+b_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_93DF"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 1, 0, 1, 6, 0, 1, 2, 1, 0.047619047619047616, ["mov     rcx, [rbp+b]", "mov     rax, [rbp+a]", "mov     rdx, cs:cmp; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_mtime"], ["mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.07142857142857142, ["cmp     [rbp+b_is_dir], 0", "jz      short loc_93F7"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.03571428571428571, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_9411"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.011904761904761904, ["mov     eax, 1", "jmp     short locret_9411"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [3, 4, 9, 0, 8, 11, 0, 37, 0.04464, 1, 1], "succs": [[3, 4], [0, 2], [0, 6], [5], [3, 7], [], [5], [5]], "fname": "strcmp_df_mtime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 4, 0, 0, 4, 2, 1, 0, 0, 0.15476190476190477, ["movzx   eax, [rbp+a_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_9471"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 1, 7, 1, 2, 15, 0, 3, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+a]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+a_is_dir], al", "mov     rax, [rbp+b]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+b_is_dir], al", "cmp     [rbp+a_is_dir], 0", "jz      short loc_9459"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 6, 0, 0, 4, 2, 1, 1, 2, 0.03571428571428571, ["movzx   eax, [rbp+b_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_9459"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 1, 0, 1, 6, 0, 1, 2, 1, 0.047619047619047616, ["mov     rcx, [rbp+a]", "mov     rax, [rbp+b]", "lea     rdx, xstrcoll; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_mtime"], ["mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.07142857142857142, ["cmp     [rbp+b_is_dir], 0", "jz      short loc_9471"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.03571428571428571, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_948B"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.011904761904761904, ["mov     eax, 1", "jmp     short locret_948B"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [3, 4, 9, 0, 8, 11, 0, 37, 0.04464, 1, 1], "succs": [[3, 4], [0, 2], [0, 6], [5], [3, 7], [], [5], [5]], "fname": "rev_xstrcoll_df_mtime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 1, 6, 0, 1, 0, 0, 0.047619047619047616, ["mov     rcx, [rbp+a]", "mov     rax, [rbp+b]", "mov     rdx, cs:cmp; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_mtime"], ["mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [1, 0, 4, 0, 0, 4, 2, 1, 1, 2, 0.15476190476190477, ["movzx   eax, [rbp+a_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_94EB"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.07142857142857142, ["cmp     [rbp+b_is_dir], 0", "jz      short loc_94EB"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.03571428571428571, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_9505"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.011904761904761904, ["mov     eax, 1", "jmp     short locret_9505"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 6, 0, 0, 4, 2, 1, 1, 2, 0.03571428571428571, ["movzx   eax, [rbp+b_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_94D3"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 1, 7, 1, 2, 15, 0, 3, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+a]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+a_is_dir], al", "mov     rax, [rbp+b]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+b_is_dir], al", "cmp     [rbp+a_is_dir], 0", "jz      short loc_94D3"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]]], "func_feature": [3, 4, 9, 0, 8, 11, 0, 37, 0.04464, 1, 1], "succs": [[3], [0, 2], [0, 5], [], [3], [3], [1, 4], [1, 6]], "fname": "rev_strcmp_df_mtime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rcx, [rbp+b]", "mov     rax, [rbp+a]", "lea     rdx, xstrcoll; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_atime", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 13, 0.0, 1, 1], "succs": [[]], "fname": "xstrcoll_atime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rcx, [rbp+b]", "mov     rax, [rbp+a]", "mov     rdx, cs:cmp; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_atime", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 13, 0.0, 1, 1], "succs": [[]], "fname": "strcmp_atime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rcx, [rbp+a]", "mov     rax, [rbp+b]", "lea     rdx, xstrcoll; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_atime", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 13, 0.0, 1, 1], "succs": [[]], "fname": "rev_xstrcoll_atime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rcx, [rbp+a]", "mov     rax, [rbp+b]", "mov     rdx, cs:cmp; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_atime", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 13, 0.0, 1, 1], "succs": [[]], "fname": "rev_strcmp_atime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 4, 0, 0, 4, 2, 1, 0, 0, 0.15476190476190477, ["movzx   eax, [rbp+a_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_9615"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 1, 7, 1, 2, 15, 0, 3, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+a]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+a_is_dir], al", "mov     rax, [rbp+b]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+b_is_dir], al", "cmp     [rbp+a_is_dir], 0", "jz      short loc_95FD"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 6, 0, 0, 4, 2, 1, 1, 2, 0.03571428571428571, ["movzx   eax, [rbp+b_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_95FD"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 1, 0, 1, 6, 0, 1, 2, 1, 0.047619047619047616, ["mov     rcx, [rbp+b]", "mov     rax, [rbp+a]", "lea     rdx, xstrcoll; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_atime"], ["mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.07142857142857142, ["cmp     [rbp+b_is_dir], 0", "jz      short loc_9615"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.03571428571428571, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_962F"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.011904761904761904, ["mov     eax, 1", "jmp     short locret_962F"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [3, 4, 9, 0, 8, 11, 0, 37, 0.04464, 1, 1], "succs": [[3, 4], [0, 2], [0, 6], [5], [3, 7], [], [5], [5]], "fname": "xstrcoll_df_atime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 4, 0, 0, 4, 2, 1, 0, 0, 0.15476190476190477, ["movzx   eax, [rbp+a_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_968F"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 1, 7, 1, 2, 15, 0, 3, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+a]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+a_is_dir], al", "mov     rax, [rbp+b]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+b_is_dir], al", "cmp     [rbp+a_is_dir], 0", "jz      short loc_9677"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 6, 0, 0, 4, 2, 1, 1, 2, 0.03571428571428571, ["movzx   eax, [rbp+b_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_9677"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 1, 0, 1, 6, 0, 1, 2, 1, 0.047619047619047616, ["mov     rcx, [rbp+b]", "mov     rax, [rbp+a]", "mov     rdx, cs:cmp; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_atime"], ["mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.07142857142857142, ["cmp     [rbp+b_is_dir], 0", "jz      short loc_968F"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.03571428571428571, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_96A9"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.011904761904761904, ["mov     eax, 1", "jmp     short locret_96A9"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [3, 4, 9, 0, 8, 11, 0, 37, 0.04464, 1, 1], "succs": [[3, 4], [0, 2], [0, 6], [5], [3, 7], [], [5], [5]], "fname": "strcmp_df_atime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.07142857142857142, ["cmp     [rbp+b_is_dir], 0", "jz      short loc_9709"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 4, 0, 0, 4, 2, 1, 1, 2, 0.15476190476190477, ["movzx   eax, [rbp+a_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_9709"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.03571428571428571, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_9723"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.011904761904761904, ["mov     eax, 1", "jmp     short locret_9723"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 1, 0, 1, 6, 0, 1, 2, 1, 0.047619047619047616, ["mov     rcx, [rbp+a]", "mov     rax, [rbp+b]", "lea     rdx, xstrcoll; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_atime"], ["mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [1, 0, 6, 0, 0, 4, 2, 1, 1, 2, 0.03571428571428571, ["movzx   eax, [rbp+b_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_96F1"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 1, 7, 1, 2, 15, 0, 3, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+a]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+a_is_dir], al", "mov     rax, [rbp+b]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+b_is_dir], al", "cmp     [rbp+a_is_dir], 0", "jz      short loc_96F1"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]]], "func_feature": [3, 4, 9, 0, 8, 11, 0, 37, 0.04464, 1, 1], "succs": [[4, 5], [0, 5], [], [2], [2], [2], [1, 3], [1, 6]], "fname": "rev_xstrcoll_df_atime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.011904761904761904, ["mov     eax, 1", "jmp     short locret_979D"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.07142857142857142, ["cmp     [rbp+b_is_dir], 0", "jz      short loc_9783"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 6, 0, 0, 4, 2, 1, 1, 2, 0.03571428571428571, ["movzx   eax, [rbp+b_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_976B"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 1, 7, 1, 2, 15, 0, 3, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+a]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+a_is_dir], al", "mov     rax, [rbp+b]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+b_is_dir], al", "cmp     [rbp+a_is_dir], 0", "jz      short loc_976B"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.03571428571428571, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_979D"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 4, 0, 0, 4, 2, 1, 1, 2, 0.15476190476190477, ["movzx   eax, [rbp+a_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_9783"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 1, 0, 1, 6, 0, 1, 2, 1, 0.047619047619047616, ["mov     rcx, [rbp+a]", "mov     rax, [rbp+b]", "mov     rdx, cs:cmp; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_atime"], ["mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [3, 4, 9, 0, 8, 11, 0, 37, 0.04464, 1, 1], "succs": [[7], [0, 6], [4, 5], [2, 5], [7], [1, 6], [7], []], "fname": "rev_strcmp_df_atime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rcx, [rbp+b]", "mov     rax, [rbp+a]", "lea     rdx, xstrcoll; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_size", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 13, 0.0, 1, 1], "succs": [[]], "fname": "xstrcoll_size", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rcx, [rbp+b]", "mov     rax, [rbp+a]", "mov     rdx, cs:cmp; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_size", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 13, 0.0, 1, 1], "succs": [[]], "fname": "strcmp_size", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rcx, [rbp+a]", "mov     rax, [rbp+b]", "lea     rdx, xstrcoll; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_size", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 13, 0.0, 1, 1], "succs": [[]], "fname": "rev_xstrcoll_size", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rcx, [rbp+a]", "mov     rax, [rbp+b]", "mov     rdx, cs:cmp; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_size", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 13, 0.0, 1, 1], "succs": [[]], "fname": "rev_strcmp_size", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 1, 7, 1, 2, 15, 0, 3, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+a]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+a_is_dir], al", "mov     rax, [rbp+b]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+b_is_dir], al", "cmp     [rbp+a_is_dir], 0", "jz      short loc_9895"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 1, 0, 1, 6, 0, 1, 0, 1, 0.047619047619047616, ["mov     rcx, [rbp+b]", "mov     rax, [rbp+a]", "lea     rdx, xstrcoll; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_size"], ["mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [1, 0, 4, 0, 0, 4, 2, 1, 0, 2, 0.15476190476190477, ["movzx   eax, [rbp+a_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_98AD"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 0, 2, 0.07142857142857142, ["cmp     [rbp+b_is_dir], 0", "jz      short loc_98AD"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.03571428571428571, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_98C7"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.011904761904761904, ["mov     eax, 1", "jmp     short locret_98C7"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 6, 0, 0, 4, 2, 1, 0, 2, 0.03571428571428571, ["movzx   eax, [rbp+b_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_9895"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]]], "func_feature": [3, 4, 9, 0, 8, 11, 0, 37, 0.04464, 1, 1], "succs": [[2, 7], [4], [1, 3], [1, 6], [], [4], [4], [2, 5]], "fname": "xstrcoll_df_size", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 0, 0.03571428571428571, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_9941"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 0, 0.011904761904761904, ["mov     eax, 1", "jmp     short locret_9941"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 1, 0, 1, 6, 0, 1, 2, 0, 0.047619047619047616, ["mov     rcx, [rbp+b]", "mov     rax, [rbp+a]", "mov     rdx, cs:cmp; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_size"], ["mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 0, 0.07142857142857142, ["cmp     [rbp+b_is_dir], 0", "jz      short loc_9927"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 6, 0, 0, 4, 2, 1, 1, 0, 0.03571428571428571, ["movzx   eax, [rbp+b_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_990F"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 1, 7, 1, 2, 15, 0, 3, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+a]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+a_is_dir], al", "mov     rax, [rbp+b]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+b_is_dir], al", "cmp     [rbp+a_is_dir], 0", "jz      short loc_990F"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 4, 0, 0, 4, 2, 1, 1, 0, 0.15476190476190477, ["movzx   eax, [rbp+a_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_9927"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]]], "func_feature": [3, 4, 9, 0, 8, 11, 0, 37, 0.04464, 1, 1], "succs": [[], [0], [0], [0], [2, 3], [1, 7], [5, 7], [3, 4]], "fname": "strcmp_df_size", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 6, 0, 0, 4, 2, 1, 0, 0, 0.03571428571428571, ["movzx   eax, [rbp+b_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_9989"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 1, 7, 1, 2, 15, 0, 3, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+a]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+a_is_dir], al", "mov     rax, [rbp+b]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+b_is_dir], al", "cmp     [rbp+a_is_dir], 0", "jz      short loc_9989"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.03571428571428571, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_99BB"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 4, 0, 0, 4, 2, 1, 1, 2, 0.15476190476190477, ["movzx   eax, [rbp+a_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_99A1"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 1, 0, 1, 6, 0, 1, 2, 1, 0.047619047619047616, ["mov     rcx, [rbp+a]", "mov     rax, [rbp+b]", "lea     rdx, xstrcoll; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_size"], ["mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.07142857142857142, ["cmp     [rbp+b_is_dir], 0", "jz      short loc_99A1"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.011904761904761904, ["mov     eax, 1", "jmp     short locret_99BB"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [3, 4, 9, 0, 8, 11, 0, 37, 0.04464, 1, 1], "succs": [[2, 3], [0, 3], [6], [4, 5], [6], [4, 7], [], [6]], "fname": "rev_xstrcoll_df_size", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.03571428571428571, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_9A35"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 6, 0, 0, 4, 2, 1, 1, 2, 0.03571428571428571, ["movzx   eax, [rbp+b_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_9A03"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 4, 0, 0, 4, 2, 1, 1, 2, 0.15476190476190477, ["movzx   eax, [rbp+a_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_9A1B"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 1, 7, 1, 2, 15, 0, 3, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+a]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+a_is_dir], al", "mov     rax, [rbp+b]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+b_is_dir], al", "cmp     [rbp+a_is_dir], 0", "jz      short loc_9A03"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 1, 0, 1, 6, 0, 1, 2, 1, 0.047619047619047616, ["mov     rcx, [rbp+a]", "mov     rax, [rbp+b]", "mov     rdx, cs:cmp; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_size"], ["mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.07142857142857142, ["cmp     [rbp+b_is_dir], 0", "jz      short loc_9A1B"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.011904761904761904, ["mov     eax, 1", "jmp     short locret_9A35"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [3, 4, 9, 0, 8, 11, 0, 37, 0.04464, 1, 1], "succs": [[6], [0, 2], [4, 5], [1, 2], [6], [4, 7], [], [6]], "fname": "rev_strcmp_df_size", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rcx, [rbp+b]", "mov     rax, [rbp+a]", "lea     rdx, xstrcoll; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_name", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 13, 0.0, 1, 1], "succs": [[]], "fname": "xstrcoll_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rcx, [rbp+b]", "mov     rax, [rbp+a]", "mov     rdx, cs:cmp; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_name", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 13, 0.0, 1, 1], "succs": [[]], "fname": "strcmp_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rcx, [rbp+a]", "mov     rax, [rbp+b]", "lea     rdx, xstrcoll; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_name", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 13, 0.0, 1, 1], "succs": [[]], "fname": "rev_xstrcoll_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rcx, [rbp+a]", "mov     rax, [rbp+b]", "mov     rdx, cs:cmp; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_name", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 13, 0.0, 1, 1], "succs": [[]], "fname": "rev_strcmp_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 0, 0.03571428571428571, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_9B5F"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 0, 0.011904761904761904, ["mov     eax, 1", "jmp     short locret_9B5F"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 1, 0, 1, 6, 0, 1, 2, 0, 0.047619047619047616, ["mov     rcx, [rbp+b]", "mov     rax, [rbp+a]", "lea     rdx, xstrcoll; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_name"], ["mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 0, 0.07142857142857142, ["cmp     [rbp+b_is_dir], 0", "jz      short loc_9B45"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 6, 0, 0, 4, 2, 1, 1, 0, 0.03571428571428571, ["movzx   eax, [rbp+b_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_9B2D"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 1, 7, 1, 2, 15, 0, 3, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+a]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+a_is_dir], al", "mov     rax, [rbp+b]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+b_is_dir], al", "cmp     [rbp+a_is_dir], 0", "jz      short loc_9B2D"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 4, 0, 0, 4, 2, 1, 1, 0, 0.15476190476190477, ["movzx   eax, [rbp+a_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_9B45"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]]], "func_feature": [3, 4, 9, 0, 8, 11, 0, 37, 0.04464, 1, 1], "succs": [[], [0], [0], [0], [2, 3], [1, 7], [5, 7], [3, 4]], "fname": "xstrcoll_df_name", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.03571428571428571, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_9BD9"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 6, 0, 0, 4, 2, 1, 1, 2, 0.03571428571428571, ["movzx   eax, [rbp+b_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_9BA7"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 4, 0, 0, 4, 2, 1, 1, 2, 0.15476190476190477, ["movzx   eax, [rbp+a_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_9BBF"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 1, 7, 1, 2, 15, 0, 3, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+a]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+a_is_dir], al", "mov     rax, [rbp+b]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+b_is_dir], al", "cmp     [rbp+a_is_dir], 0", "jz      short loc_9BA7"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 1, 0, 1, 6, 0, 1, 2, 1, 0.047619047619047616, ["mov     rcx, [rbp+b]", "mov     rax, [rbp+a]", "mov     rdx, cs:cmp; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_name"], ["mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.07142857142857142, ["cmp     [rbp+b_is_dir], 0", "jz      short loc_9BBF"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.011904761904761904, ["mov     eax, 1", "jmp     short locret_9BD9"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [3, 4, 9, 0, 8, 11, 0, 37, 0.04464, 1, 1], "succs": [[6], [0, 2], [4, 5], [1, 2], [6], [4, 7], [], [6]], "fname": "strcmp_df_name", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 4, 0, 0, 4, 2, 1, 0, 0, 0.15476190476190477, ["movzx   eax, [rbp+a_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_9C39"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 1, 7, 1, 2, 15, 0, 3, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+a]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+a_is_dir], al", "mov     rax, [rbp+b]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+b_is_dir], al", "cmp     [rbp+a_is_dir], 0", "jz      short loc_9C21"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 6, 0, 0, 4, 2, 1, 1, 2, 0.03571428571428571, ["movzx   eax, [rbp+b_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_9C21"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 1, 0, 1, 6, 0, 1, 2, 1, 0.047619047619047616, ["mov     rcx, [rbp+a]", "mov     rax, [rbp+b]", "lea     rdx, xstrcoll; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_name"], ["mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.07142857142857142, ["cmp     [rbp+b_is_dir], 0", "jz      short loc_9C39"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.03571428571428571, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_9C53"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.011904761904761904, ["mov     eax, 1", "jmp     short locret_9C53"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [3, 4, 9, 0, 8, 11, 0, 37, 0.04464, 1, 1], "succs": [[3, 4], [0, 2], [0, 6], [5], [3, 7], [], [5], [5]], "fname": "rev_xstrcoll_df_name", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 4, 0, 0, 4, 2, 1, 0, 0, 0.15476190476190477, ["movzx   eax, [rbp+a_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_9CB3"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 1, 7, 1, 2, 15, 0, 3, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+a]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+a_is_dir], al", "mov     rax, [rbp+b]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+b_is_dir], al", "cmp     [rbp+a_is_dir], 0", "jz      short loc_9C9B"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 6, 0, 0, 4, 2, 1, 1, 2, 0.03571428571428571, ["movzx   eax, [rbp+b_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_9C9B"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 1, 0, 1, 6, 0, 1, 2, 1, 0.047619047619047616, ["mov     rcx, [rbp+a]", "mov     rax, [rbp+b]", "mov     rdx, cs:cmp; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_name"], ["mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.07142857142857142, ["cmp     [rbp+b_is_dir], 0", "jz      short loc_9CB3"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.03571428571428571, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_9CCD"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.011904761904761904, ["mov     eax, 1", "jmp     short locret_9CCD"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [3, 4, 9, 0, 8, 11, 0, 37, 0.04464, 1, 1], "succs": [[3, 4], [0, 2], [0, 6], [5], [3, 7], [], [5], [5]], "fname": "rev_strcmp_df_name", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rcx, [rbp+b]", "mov     rax, [rbp+a]", "lea     rdx, xstrcoll; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_extension", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 13, 0.0, 1, 1], "succs": [[]], "fname": "xstrcoll_extension", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rcx, [rbp+b]", "mov     rax, [rbp+a]", "mov     rdx, cs:cmp; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_extension", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 13, 0.0, 1, 1], "succs": [[]], "fname": "strcmp_extension", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rcx, [rbp+a]", "mov     rax, [rbp+b]", "lea     rdx, xstrcoll; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_extension", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 13, 0.0, 1, 1], "succs": [[]], "fname": "rev_xstrcoll_extension", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rcx, [rbp+a]", "mov     rax, [rbp+b]", "mov     rdx, cs:cmp; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_extension", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 13, 0.0, 1, 1], "succs": [[]], "fname": "rev_strcmp_extension", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.03571428571428571, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_9DF7"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 6, 0, 0, 4, 2, 1, 1, 2, 0.03571428571428571, ["movzx   eax, [rbp+b_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_9DC5"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 4, 0, 0, 4, 2, 1, 1, 2, 0.15476190476190477, ["movzx   eax, [rbp+a_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_9DDD"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 1, 7, 1, 2, 15, 0, 3, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+a]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+a_is_dir], al", "mov     rax, [rbp+b]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+b_is_dir], al", "cmp     [rbp+a_is_dir], 0", "jz      short loc_9DC5"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 1, 0, 1, 6, 0, 1, 2, 1, 0.047619047619047616, ["mov     rcx, [rbp+b]", "mov     rax, [rbp+a]", "lea     rdx, xstrcoll; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_extension"], ["mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.07142857142857142, ["cmp     [rbp+b_is_dir], 0", "jz      short loc_9DDD"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.011904761904761904, ["mov     eax, 1", "jmp     short locret_9DF7"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [3, 4, 9, 0, 8, 11, 0, 37, 0.04464, 1, 1], "succs": [[6], [0, 2], [4, 5], [1, 2], [6], [4, 7], [], [6]], "fname": "xstrcoll_df_extension", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 4, 0, 0, 4, 2, 1, 0, 0, 0.15476190476190477, ["movzx   eax, [rbp+a_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_9E57"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 1, 7, 1, 2, 15, 0, 3, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+a]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+a_is_dir], al", "mov     rax, [rbp+b]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+b_is_dir], al", "cmp     [rbp+a_is_dir], 0", "jz      short loc_9E3F"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 6, 0, 0, 4, 2, 1, 1, 2, 0.03571428571428571, ["movzx   eax, [rbp+b_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_9E3F"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 1, 0, 1, 6, 0, 1, 2, 1, 0.047619047619047616, ["mov     rcx, [rbp+b]", "mov     rax, [rbp+a]", "mov     rdx, cs:cmp; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_extension"], ["mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.07142857142857142, ["cmp     [rbp+b_is_dir], 0", "jz      short loc_9E57"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.03571428571428571, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_9E71"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.011904761904761904, ["mov     eax, 1", "jmp     short locret_9E71"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [3, 4, 9, 0, 8, 11, 0, 37, 0.04464, 1, 1], "succs": [[3, 4], [0, 2], [0, 6], [5], [3, 7], [], [5], [5]], "fname": "strcmp_df_extension", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 4, 0, 0, 4, 2, 1, 0, 0, 0.15476190476190477, ["movzx   eax, [rbp+a_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_9ED1"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 1, 7, 1, 2, 15, 0, 3, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+a]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+a_is_dir], al", "mov     rax, [rbp+b]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+b_is_dir], al", "cmp     [rbp+a_is_dir], 0", "jz      short loc_9EB9"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 6, 0, 0, 4, 2, 1, 1, 2, 0.03571428571428571, ["movzx   eax, [rbp+b_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_9EB9"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 1, 0, 1, 6, 0, 1, 2, 1, 0.047619047619047616, ["mov     rcx, [rbp+a]", "mov     rax, [rbp+b]", "lea     rdx, xstrcoll; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_extension"], ["mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.07142857142857142, ["cmp     [rbp+b_is_dir], 0", "jz      short loc_9ED1"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.03571428571428571, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_9EEB"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.011904761904761904, ["mov     eax, 1", "jmp     short locret_9EEB"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [3, 4, 9, 0, 8, 11, 0, 37, 0.04464, 1, 1], "succs": [[3, 4], [0, 2], [0, 6], [5], [3, 7], [], [5], [5]], "fname": "rev_xstrcoll_df_extension", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 1, 6, 0, 1, 0, 0, 0.047619047619047616, ["mov     rcx, [rbp+a]", "mov     rax, [rbp+b]", "mov     rdx, cs:cmp; cmp", "mov     rsi, rcx; b", "mov     rdi, rax; a", "call    cmp_extension"], ["mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [1, 0, 4, 0, 0, 4, 2, 1, 1, 2, 0.15476190476190477, ["movzx   eax, [rbp+a_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_9F4B"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.07142857142857142, ["cmp     [rbp+b_is_dir], 0", "jz      short loc_9F4B"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.03571428571428571, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_9F65"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.011904761904761904, ["mov     eax, 1", "jmp     short locret_9F65"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 6, 0, 0, 4, 2, 1, 1, 2, 0.03571428571428571, ["movzx   eax, [rbp+b_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_9F33"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 1, 7, 1, 2, 15, 0, 3, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+a]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+a_is_dir], al", "mov     rax, [rbp+b]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+b_is_dir], al", "cmp     [rbp+a_is_dir], 0", "jz      short loc_9F33"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]]], "func_feature": [3, 4, 9, 0, 8, 11, 0, 37, 0.04464, 1, 1], "succs": [[3], [0, 2], [0, 5], [], [3], [3], [1, 4], [1, 6]], "fname": "rev_strcmp_df_extension", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 1, 14, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+b]", "mov     rdx, [rax]", "mov     rax, [rbp+a]", "mov     rax, [rax]", "mov     rsi, rdx; s2", "mov     rdi, rax; s1", "call    filevercmp", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 4, 14, 0.0, 0, 1], "succs": [[]], "fname": "cmp_version", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 1, 12, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rdx, [rbp+b]", "mov     rax, [rbp+a]", "mov     rsi, rdx; b", "mov     rdi, rax; a", "call    cmp_version", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 12, 0.0, 0, 1], "succs": [[]], "fname": "xstrcoll_version", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 1, 12, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rdx, [rbp+a]", "mov     rax, [rbp+b]", "mov     rsi, rdx; b", "mov     rdi, rax; a", "call    cmp_version", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 12, 0.0, 0, 1], "succs": [[]], "fname": "rev_xstrcoll_version", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.03571428571428571, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_A04D"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 6, 0, 0, 4, 2, 1, 1, 2, 0.03571428571428571, ["movzx   eax, [rbp+b_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_A022"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 1, 0, 1, 5, 0, 1, 2, 1, 0.047619047619047616, ["mov     rdx, [rbp+b]", "mov     rax, [rbp+a]", "mov     rsi, rdx; b", "mov     rdi, rax; a", "call    cmp_version"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO"]], [1, 0, 4, 0, 0, 4, 2, 1, 1, 2, 0.15476190476190477, ["movzx   eax, [rbp+a_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_A03A"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.07142857142857142, ["cmp     [rbp+b_is_dir], 0", "jz      short loc_A03A"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 1, 7, 1, 2, 15, 0, 3, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+a]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+a_is_dir], al", "mov     rax, [rbp+b]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+b_is_dir], al", "cmp     [rbp+a_is_dir], 0", "jz      short loc_A022"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.011904761904761904, ["mov     eax, 1", "jmp     short locret_A04D"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [3, 4, 9, 0, 8, 11, 0, 36, 0.04464, 0, 1], "succs": [[6], [0, 3], [6], [2, 4], [2, 7], [1, 3], [], [6]], "fname": "xstrcoll_df_version", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 1, 7, 1, 2, 15, 0, 3, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+a]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+a_is_dir], al", "mov     rax, [rbp+b]", "mov     rdi, rax; f", "call    is_linked_directory", "mov     [rbp+b_is_dir], al", "cmp     [rbp+a_is_dir], 0", "jz      short loc_A095"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 0, 2, 0.07142857142857142, ["cmp     [rbp+b_is_dir], 0", "jz      short loc_A0AD"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 4, 0, 0, 4, 2, 1, 0, 2, 0.15476190476190477, ["movzx   eax, [rbp+a_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_A0AD"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.03571428571428571, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_A0C0"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.011904761904761904, ["mov     eax, 1", "jmp     short locret_A0C0"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 1, 0, 1, 5, 0, 1, 0, 1, 0.047619047619047616, ["mov     rdx, [rbp+a]", "mov     rax, [rbp+b]", "mov     rsi, rdx; b", "mov     rdi, rax; a", "call    cmp_version"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO"]], [1, 0, 6, 0, 0, 4, 2, 1, 0, 2, 0.03571428571428571, ["movzx   eax, [rbp+b_is_dir]", "xor     eax, 1", "test    al, al", "jz      short loc_A095"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]]], "func_feature": [3, 4, 9, 0, 8, 11, 0, 36, 0.04464, 0, 1], "succs": [[2, 7], [5, 6], [1, 6], [], [3], [3], [3], [2, 4]], "fname": "rev_xstrcoll_df_version", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[4, 0, 3, 7, 0, 16, 0, 0, 0, 0, 0.0, ["mov     rcx, cs:cwd_file", "mov     rdx, [rbp+i]", "mov     rax, rdx", "shl     rax, 2", "add     rax, rdx", "lea     rdx, ds:0[rax*4]", "add     rax, rdx", "shl     rax, 3", "mov     rsi, rax", "mov     rax, cs:sorted_file", "mov     rdx, [rbp+i]", "shl     rdx, 3", "add     rax, rdx", "lea     rdx, [rcx+rsi]", "mov     [rax], rdx", "add     [rbp+i], 1"], ["mov~rcx,<TAG>", "mov~rdx,[rbp+0]", "mov~rax,rdx", "shl~rax,0", "add~rax,rdx", "lea~rdx,<TAG>", "add~rax,rdx", "shl~rax,0", "mov~rsi,rax", "mov~rax,<TAG>", "mov~rdx,[rbp+0]", "shl~rdx,0", "add~rax,rdx", "lea~rdx,<TAG>", "mov~<TAG>,rdx", "add~[rbp+0],0"]], [0, 0, 3, 0, 0, 3, 0, 0, 1, 1, 0.5, ["mov     rax, cs:cwd_n_used", "cmp     [rbp+i], rax", "jb      short loc_A0D0"], ["mov~rax,<TAG>", "cmp~[rbp+0],rax", "jb~FOO"]], [1, 0, 3, 0, 0, 4, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+i], 0", "jmp     short loc_A115"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["nop", "pop     rbp", "retn"], ["nop", "pop~rbp", "retn"]]], "func_feature": [0, 0, 1, 0, 4, 4, 2, 26, 0.125, 3, 7], "succs": [[1], [0, 3], [1], []], "fname": "initialize_ordering_vector", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 1, 6, 1, 26, 0, 2, 6, 0, 0.04487179487179487, ["mov     edx, cs:sort_type_0", "lea     esi, [rax+rdx]", "movzx   ecx, [rbp+use_strcmp]", "movzx   eax, cs:sort_reverse", "movzx   edx, al", "movzx   eax, cs:directories_first", "movzx   eax, al", "cdqe", "movsxd  rcx, ecx", "mov     esi, esi", "add     rsi, rsi", "add     rcx, rsi", "movsxd  rdx, edx", "add     rcx, rcx", "add     rdx, rcx", "add     rdx, rdx", "add     rax, rdx", "lea     rdx, ds:0[rax*8]", "lea     rax, sort_functions", "mov     rdx, [rdx+rax]; cmp", "mov     rcx, cs:cwd_n_used", "mov     rax, cs:sorted_file", "mov     rsi, rcx; n", "mov     rdi, rax; base", "call    mpsort", "jmp     short locret_A272"], ["mov~edx,<TAG>", "lea~esi,<TAG>", "movzx~ecx,[rbp+0]", "movzx~eax,<TAG>", "movzx~edx,al", "movzx~eax,<TAG>", "movzx~eax,al", "cdqe~", "movsxd~rcx,ecx", "mov~esi,esi", "add~rsi,rsi", "add~rcx,rsi", "movsxd~rdx,edx", "add~rcx,rcx", "add~rdx,rcx", "add~rdx,rdx", "add~rax,rdx", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~rdx,<TAG>", "mov~rcx,<TAG>", "mov~rax,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 2, 0, 0.019230769230769232, ["nop"], ["nop"]], [1, 0, 2, 0, 0, 1, 0, 0, 5, 0, 0.041666666666666664, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 4, 0, 0, 3, 0, 1, 4, 0, 0.16025641025641024, ["mov     eax, cs:sort_type_0", "cmp     eax, 4", "jnz     short loc_A201"], ["mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [0, 1, 0, 0, 1, 5, 0, 1, 4, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___9499; \"sort_files\"", "mov     edx, 0EEAh; line", "lea     rsi, file; \"src/ls.c\"", "lea     rdi, aSortTypeSortVe; \"sort_type != sort_version\"", "call    ___assert_fail"], ["lea~rcx,<TAG>", "mov~edx,<STR>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO"]], [2, 0, 7, 0, 0, 4, 0, 1, 3, 0, 0.05128205128205128, ["mov     [rbp+use_strcmp], 1", "mov     eax, cs:sort_type_0", "cmp     eax, 3", "jnz     short loc_A1E9"], ["mov~[rbp+0],0", "mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [0, 0, 9, 0, 1, 4, 1, 2, 2, 0, 0.15384615384615385, ["lea     rdi, failed_strcoll; env", "call    __setjmp", "test    eax, eax", "jnz     short loc_A1BB"], ["lea~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 5, 0, 1, 1, 0, 1, 4, 0, 0.03205128205128205, ["call    initialize_ordering_vector"], ["call~FOO"]], [1, 0, 12, 2, 2, 13, 0, 2, 1, 0, 0.0, ["mov     rax, cs:sorted_file", "mov     rdi, rax; ptr", "call    free", "mov     rax, cs:cwd_n_used", "mov     esi, 18h; s", "mov     rdi, rax; n", "call    xnmalloc", "mov     cs:sorted_file, rax", "mov     rdx, cs:cwd_n_used", "mov     rax, rdx", "add     rax, rax", "add     rax, rdx", "mov     cs:sorted_file_alloc, rax"], ["mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~rax,<TAG>", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~<TAG>,rax", "mov~rdx,<TAG>", "mov~rax,rdx", "add~rax,rax", "add~rax,rdx", "mov~<TAG>,rax"]], [2, 0, 13, 2, 0, 11, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     rax, cs:cwd_n_used", "shr     rax, 1", "mov     rdx, rax", "mov     rax, cs:cwd_n_used", "add     rdx, rax", "mov     rax, cs:sorted_file_alloc", "cmp     rdx, rax", "jbe     short loc_A191"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~rax,<TAG>", "shr~rax,0", "mov~rdx,rax", "mov~rax,<TAG>", "add~rdx,rax", "mov~rax,<TAG>", "cmp~rdx,rax", "jbe~FOO"]], [0, 0, 2, 0, 0, 2, 0, 1, 5, 0, 0.041666666666666664, ["mov     eax, cs:time_type_0", "jmp     short loc_A206"], ["mov~eax,<TAG>", "jmp~FOO"]], [1, 0, 11, 0, 1, 4, 0, 2, 1, 0, 0.14102564102564102, ["call    initialize_ordering_vector", "mov     eax, cs:sort_type_0", "cmp     eax, 0FFFFFFFFh", "jz      loc_A271"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 3, 0, 0.10897435897435898, ["mov     [rbp+use_strcmp], 0", "jmp     short loc_A1EE"], ["mov~[rbp+0],0", "jmp~FOO"]]], "func_feature": [7, 1, 14, 0, 14, 17, 3, 79, 0.05678, 12, 10], "succs": [[], [0], [0], [1], [11, 3], [], [8, 5], [13, 6], [4], [12], [9, 12], [1], [2, 7], [4]], "fname": "sort_files", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 4, 0, 0, 3, 0, 0, 0, 0, 0.03308823529411765, ["mov     rax, cs:cwd_n_used", "cmp     [rbp+i], rax", "jb      short loc_A355"], ["mov~rax,<TAG>", "cmp~[rbp+0],rax", "jb~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 2, 3, 0.022058823529411763, ["mov     [rbp+i], 0; jumptable 000000000000A2AC case 0", "jmp     short loc_A398"], ["mov~[rbp+0],0", "jmp~FOO"]], [4, 0, 4, 4, 3, 14, 0, 3, 4, 3, 0.0, ["call    set_normal_color", "mov     rax, cs:sorted_file", "mov     rdx, [rbp+i]", "shl     rdx, 3", "add     rax, rdx", "mov     rax, [rax]", "mov     rdi, rax; f", "call    print_long_format", "mov     edi, 0Ah; c", "call    _putchar_unlocked", "mov     rax, cs:dired_pos", "add     rax, 1", "mov     cs:dired_pos, rax", "add     [rbp+i], 1"], ["call~FOO", "mov~rax,<TAG>", "mov~rdx,[rbp+0]", "shl~rdx,0", "add~rax,rdx", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~edi,0", "call~FOO", "mov~rax,<TAG>", "add~rax,0", "mov~<TAG>,rax", "add~[rbp+0],0"]], [4, 0, 4, 3, 2, 11, 0, 2, 4, 3, 0.0, ["mov     rax, cs:sorted_file", "mov     rdx, [rbp+i]", "shl     rdx, 3", "add     rax, rdx", "mov     rax, [rax]", "mov     esi, 0; start_col", "mov     rdi, rax; f", "call    print_file_name_and_frills", "mov     edi, 0Ah; c", "call    _putchar_unlocked", "add     [rbp+i], 1"], ["mov~rax,<TAG>", "mov~rdx,[rbp+0]", "shl~rdx,0", "add~rax,rdx", "mov~rax,<TAG>", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~edi,0", "call~FOO", "add~[rbp+0],0"]], [0, 0, 4, 0, 0, 3, 0, 0, 3, 2, 0.03308823529411765, ["mov     rax, cs:cwd_n_used", "cmp     [rbp+i], rax", "jb      short loc_A2B8"], ["mov~rax,<TAG>", "cmp~[rbp+0],rax", "jb~FOO"]], [2, 0, 17, 1, 0, 6, 0, 1, 0, 1, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     eax, cs:format_0", "cmp     eax, 4; switch 5 cases", "ja      loc_A3A6; jumptable 000000000000A2AC default case"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~eax,<TAG>", "cmp~eax,0", "ja~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0.0, ["nop; jumptable 000000000000A2AC default case", "leave", "retn"], ["nop", "leave", "retn"]], [0, 0, 1, 0, 0, 1, 0, 1, 4, 1, 0.011029411764705881, ["jmp     loc_A3A6; jumptable 000000000000A2AC default case"], ["jmp~FOO"]], [0, 1, 1, 0, 1, 3, 0, 2, 3, 1, 0.001838235294117647, ["mov     edi, 20h ; ' '; sep", "call    print_with_separator", "jmp     loc_A3A6; jumptable 000000000000A2AC default case"], ["mov~edi,<STR>", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 1, 2, 0, 2, 3, 1, 0.001838235294117647, ["call    print_many_per_line", "jmp     loc_A3A6; jumptable 000000000000A2AC default case"], ["call~FOO", "jmp~FOO"]], [0, 1, 1, 0, 1, 3, 0, 2, 3, 1, 0.001838235294117647, ["mov     edi, 20h ; ' '; sep", "call    print_with_separator", "jmp     short loc_A3A6; jumptable 000000000000A2AC default case"], ["mov~edi,<STR>", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 1, 2, 0, 2, 3, 1, 0.001838235294117647, ["call    print_horizontal", "jmp     short loc_A3A6; jumptable 000000000000A2AC default case"], ["call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 1, 3, 0, 2, 2, 1, 0.003676470588235294, ["mov     edi, 2Ch ; ','; jumptable 000000000000A2AC case 4", "call    print_with_separator", "jmp     short loc_A3A6; jumptable 000000000000A2AC default case"], ["mov~edi,0", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, 1, 0.011029411764705881, ["nop"], ["nop"]], [0, 0, 16, 1, 0, 8, 0, 1, 1, 2, 0.05514705882352941, ["mov     eax, eax", "lea     rdx, ds:0[rax*4]", "lea     rax, off_1D8C0", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_1D8C0", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,eax", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [0, 0, 3, 0, 0, 3, 1, 1, 2, 2, 0.014705882352941176, ["mov     rax, cs:line_length; jumptable 000000000000A2AC case 3", "test    rax, rax", "jnz     short loc_A338"], ["mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 2, 3, 0.022058823529411763, ["mov     [rbp+i], 0; jumptable 000000000000A2AC case 1", "jmp     short loc_A2E9"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 2, 2, 0.014705882352941176, ["mov     rax, cs:line_length; jumptable 000000000000A2AC case 2", "test    rax, rax", "jnz     short loc_A316"], ["mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]]], "func_feature": [10, 2, 22, 0, 18, 26, 3, 73, 0.01266, 6, 9], "succs": [[2, 13], [0], [0], [4], [3, 7], [14, 6], [], [6], [6], [6], [6], [6], [6], [6], [16, 1, 12, 17, 15], [10, 11], [4], [8, 9]], "fname": "print_current_files", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 3, 1, 0, 13, 1, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+buf], rdi", "mov     [rbp+size], rsi", "mov     eax, edx", "mov     [rbp+tm], rcx", "mov     [rbp+tz], r8", "mov     [rbp+ns], r9d", "mov     [rbp+recent], al", "movzx   eax, cs:use_abformat", "test    al, al", "jz      short loc_A409"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~eax,edx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~[rbp+0],r9d", "mov~[rbp+0],al", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 1, 13, 0, 1, 0, 0, 0.0, ["mov     [rbp+nfmt], rax", "mov     r8d, [rbp+ns]", "mov     rdi, [rbp+tz]", "mov     rcx, [rbp+tm]; tp", "mov     rdx, [rbp+nfmt]; format", "mov     rsi, [rbp+size]; maxsize", "mov     rax, [rbp+buf]", "mov     r9d, r8d; ns", "mov     r8, rdi; tz", "mov     rdi, rax; s", "call    nstrftime", "leave", "retn"], ["mov~[rbp+0],rax", "mov~r8d,[rbp+0]", "mov~rdi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~r9d,r8d", "mov~r8,rdi", "mov~rdi,rax", "call~FOO", "leave", "retn"]], [2, 0, 1, 6, 0, 15, 0, 1, 0, 1, 0.08333333333333333, ["movzx   edx, [rbp+recent]", "mov     rax, [rbp+tm]", "mov     eax, [rax+10h]", "movsxd  rcx, eax", "movsxd  rdx, edx", "mov     rax, rdx", "add     rax, rax", "add     rax, rdx", "shl     rax, 2", "add     rax, rcx", "shl     rax, 7", "mov     rdx, rax", "lea     rax, abformat", "add     rax, rdx", "jmp     short loc_A422"], ["movzx~edx,[rbp+0]", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "movsxd~rcx,eax", "movsxd~rdx,edx", "mov~rax,rdx", "add~rax,rax", "add~rax,rdx", "shl~rax,0", "add~rax,rcx", "shl~rax,0", "mov~rdx,rax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~FOO"]], [0, 0, 1, 0, 0, 5, 0, 0, 0, 1, 0.08333333333333333, ["movzx   eax, [rbp+recent]", "cdqe", "lea     rdx, ds:0[rax*8]", "lea     rax, long_time_format", "mov     rax, [rdx+rax]"], ["movzx~eax,[rbp+0]", "cdqe~", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~rax,<TAG>"]]], "func_feature": [1, 1, 3, 0, 4, 4, 2, 46, 0.04167, 3, 7], "succs": [[2, 3], [], [1], [1]], "fname": "align_nstrftime", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 7, 0, 1, 9, 1, 2, 0, 0, 0.07142857142857142, ["mov     [rbp+epoch], 0", "mov     rax, cs:localtz", "lea     rdx, [rbp+tm]; tm", "lea     rcx, [rbp+epoch]", "mov     rsi, rcx; t", "mov     rdi, rax; tz", "call    localtime_rz", "test    rax, rax", "jz      short loc_A50E"], ["mov~[rbp+0],0", "mov~rax,<TAG>", "lea~rdx,[rbp+0]", "lea~rcx,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 1, 8, 1, 0, 9, 2, 0, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 450h", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     eax, cs:width_9528", "test    eax, eax", "jns     loc_A522"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~eax,<TAG>", "test~eax,eax", "jns~FOO"]], [4, 0, 6, 0, 1, 13, 0, 2, 2, 3, 0.03571428571428571, ["mov     rcx, cs:localtz", "lea     rdx, [rbp+tm]", "lea     rax, [rbp+buf]", "mov     r9d, 0; ns", "mov     r8, rcx; tz", "mov     rcx, rdx; tm", "mov     edx, 0; recent", "mov     esi, 3E9h; size", "mov     rdi, rax; buf", "call    align_nstrftime", "mov     [rbp+len], rax", "cmp     [rbp+len], 0", "jz      short loc_A50E"], ["mov~rcx,<TAG>", "lea~rdx,[rbp+0]", "lea~rax,[rbp+0]", "mov~r9d,0", "mov~r8,rcx", "mov~rcx,rdx", "mov~edx,0", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 5, 0, 1, 7, 0, 1, 3, 3, 0.0, ["mov     rcx, [rbp+len]", "lea     rax, [rbp+buf]", "mov     edx, 0; flags", "mov     rsi, rcx; nbytes", "mov     rdi, rax; string", "call    mbsnwidth", "mov     cs:width_9528, eax"], ["mov~rcx,[rbp+0]", "lea~rax,[rbp+0]", "mov~edx,0", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~<TAG>,eax"]], [0, 0, 2, 0, 0, 4, 1, 1, 1, 1, 0.21428571428571427, ["mov     eax, cs:width_9528", "mov     rsi, [rbp+var_8]", "xor     rsi, fs:28h", "jz      short locret_A53C"], ["mov~eax,<TAG>", "mov~rsi,[rbp+0]", "xor~rsi,<TAG>", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 1, 0, 2, 2, 0.23214285714285712, ["mov     eax, cs:width_9528", "test    eax, eax", "jns     short loc_A522"], ["mov~eax,<TAG>", "test~eax,eax", "jns~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 3, 2, 0.0, ["mov     cs:width_9528, 0"], ["mov~<TAG>,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [4, 5, 7, 1, 9, 12, 1, 49, 0.06151, 3, 1], "succs": [[2, 5], [0, 4], [3, 5], [5], [8, 7], [4, 6], [4], [], []], "fname": "long_time_expected_width", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.1, ["jmp     short loc_A5F0"], ["jmp~FOO"]], [0, 1, 3, 0, 1, 7, 1, 2, 2, 2, 0.15000000000000002, ["mov     edi, 20h ; ' '; c", "call    _putchar_unlocked", "mov     eax, [rbp+pad]", "lea     edx, [rax-1]", "mov     [rbp+pad], edx", "test    eax, eax", "jnz     short loc_A5B4"], ["mov~edi,<STR>", "call~FOO", "mov~eax,[rbp+0]", "lea~edx,[rax-1]+0]", "mov~[rbp+0],edx", "test~eax,eax", "jnz~FOO"]], [3, 0, 3, 2, 3, 25, 0, 3, 1, 3, 0.1, ["mov     rax, [rbp+name]", "mov     esi, 0; flags", "mov     rdi, rax; string", "call    gnu_mbswidth", "mov     edx, eax", "mov     eax, [rbp+width]", "sub     eax, edx", "mov     [rbp+width_gap], eax", "mov     eax, 0", "cmp     [rbp+width_gap], 0", "cmovns  eax, [rbp+width_gap]", "mov     [rbp+pad], eax", "mov     rdx, cs:stdout@@GLIBC_2_2_5", "mov     rax, [rbp+name]", "mov     rsi, rdx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rax, [rbp+name]", "mov     rdi, rax; s", "call    _strlen", "mov     rdx, rax", "mov     eax, [rbp+pad]", "cdqe", "add     rax, rdx", "mov     [rbp+len], rax"], ["mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~edx,eax", "mov~eax,[rbp+0]", "sub~eax,edx", "mov~[rbp+0],eax", "mov~eax,0", "cmp~[rbp+0],0", "cmovns~eax,[rbp+0]", "mov~[rbp+0],eax", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "cdqe~", "add~rax,rdx", "mov~[rbp+0],rax"]], [1, 0, 0, 2, 0, 8, 0, 0, 2, 0, 0.0, ["mov     rdx, cs:dired_pos", "mov     rax, [rbp+len]", "add     rax, rdx", "add     rax, 1", "mov     cs:dired_pos, rax", "nop", "leave", "retn"], ["mov~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "add~rax,0", "mov~<TAG>,rax", "nop", "leave", "retn"]], [1, 0, 1, 0, 1, 9, 0, 1, 1, 1, 0.05, ["mov     rdx, [rbp+id]", "mov     eax, [rbp+width]", "mov     esi, eax", "lea     rdi, aLu; \"%*lu \"", "mov     eax, 0", "call    _printf", "mov     eax, [rbp+width]", "cdqe", "mov     [rbp+len], rax"], ["mov~rdx,[rbp+0]", "mov~eax,[rbp+0]", "mov~esi,eax", "lea~rdi,<TAG>", "mov~eax,0", "call~FOO", "mov~eax,[rbp+0]", "cdqe~", "mov~[rbp+0],rax"]], [2, 0, 5, 1, 0, 8, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+name], rdi", "mov     [rbp+id], rsi", "mov     [rbp+width], edx", "cmp     [rbp+name], 0", "jz      short loc_A5CD"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],edx", "cmp~[rbp+0],0", "jz~FOO"]]], "func_feature": [5, 1, 8, 0, 6, 7, 3, 58, 0.06667, 3, 5], "succs": [[3], [0, 1], [1], [], [3], [2, 4]], "fname": "format_user_or_group", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 3, 0, 0, 3, 1, 1, 0, 0, 0.1, ["movzx   eax, cs:numeric_ids", "test    al, al", "jnz     short loc_A64E"], ["movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [2, 0, 5, 1, 0, 13, 2, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 18h", "mov     [rbp+u], edi", "mov     [rbp+width], esi", "mov     eax, edx", "mov     [rbp+stat_ok], al", "mov     ebx, [rbp+u]", "movzx   eax, [rbp+stat_ok]", "xor     eax, 1", "test    al, al", "jz      short loc_A637"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],esi", "mov~eax,edx", "mov~[rbp+0],al", "mov~ebx,[rbp+0]", "movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 0, 1, 1, 9, 0, 1, 2, 0, 0.0, ["mov     edx, [rbp+width]; width", "mov     rsi, rbx; id", "mov     rdi, rax; name", "call    format_user_or_group", "nop", "add     rsp, 18h", "pop     rbx", "pop     rbp", "retn"], ["mov~edx,[rbp+0]", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "nop", "add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.05, ["lea     rax, asc_1D8DA; \"?\"", "jmp     short loc_A653"], ["lea~rax,<TAG>", "jmp~FOO"]], [0, 0, 1, 0, 1, 4, 0, 2, 2, 1, 0.025, ["mov     eax, [rbp+u]", "mov     edi, eax; uid", "call    getuser", "jmp     short loc_A653"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.025, ["mov     eax, 0"], ["mov~eax,0"]]], "func_feature": [2, 3, 6, 0, 6, 7, 2, 32, 0.03333, 2, 2], "succs": [[4, 5], [0, 3], [], [2], [2], [2]], "fname": "format_user", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 1, 9, 0, 1, 0, 0, 0.0, ["mov     edx, [rbp+width]; width", "mov     rsi, rbx; id", "mov     rdi, rax; name", "call    format_user_or_group", "nop", "add     rsp, 18h", "pop     rbx", "pop     rbp", "retn"], ["mov~edx,[rbp+0]", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "nop", "add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.05, ["lea     rax, asc_1D8DA; \"?\"", "jmp     short loc_A6B0"], ["lea~rax,<TAG>", "jmp~FOO"]], [0, 0, 1, 0, 1, 4, 0, 2, 2, 0, 0.025, ["mov     eax, [rbp+g]", "mov     edi, eax; gid", "call    getgroup", "jmp     short loc_A6B0"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 0, 0.025, ["mov     eax, 0"], ["mov~eax,0"]], [2, 0, 5, 1, 0, 13, 2, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 18h", "mov     [rbp+g], edi", "mov     [rbp+width], esi", "mov     eax, edx", "mov     [rbp+stat_ok], al", "mov     ebx, [rbp+g]", "movzx   eax, [rbp+stat_ok]", "xor     eax, 1", "test    al, al", "jz      short loc_A694"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],esi", "mov~eax,edx", "mov~[rbp+0],al", "mov~ebx,[rbp+0]", "movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 1, 0, 0.1, ["movzx   eax, cs:numeric_ids", "test    al, al", "jnz     short loc_A6AB"], ["movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]]], "func_feature": [2, 3, 6, 0, 6, 7, 1, 32, 0.03333, 2, 2], "succs": [[], [0], [0], [0], [1, 5], [2, 3]], "fname": "format_group", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.30000000000000004, ["mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_A74B"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [3, 0, 3, 0, 1, 9, 0, 2, 1, 2, 0.07500000000000001, ["mov     rax, [rbp+name]", "mov     esi, 0; flags", "mov     rdi, rax; string", "call    gnu_mbswidth", "mov     [rbp+len], eax", "mov     eax, 0", "cmp     [rbp+len], 0", "cmovns  eax, [rbp+len]", "jmp     short loc_A737"], ["mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "mov~eax,0", "cmp~[rbp+0],0", "cmovns~eax,[rbp+0]", "jmp~FOO"]], [1, 0, 3, 0, 2, 9, 0, 2, 1, 2, 0.07500000000000001, ["mov     rdx, [rbp+id]", "lea     rax, [rbp+buf]", "lea     rsi, aLu_1; \"%lu\"", "mov     rdi, rax; s", "mov     eax, 0", "call    _sprintf", "lea     rax, [rbp+buf]", "mov     rdi, rax; s", "call    _strlen"], ["mov~rdx,[rbp+0]", "lea~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "lea~rax,[rbp+0]", "mov~rdi,rax", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 0, 5, 1, 0, 10, 1, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+name], rdi", "mov     [rbp+id], rsi", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "cmp     [rbp+name], 0", "jz      short loc_A70F"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [4, 2, 7, 1, 6, 6, 2, 34, 0.075, 2, 1], "succs": [[3, 5], [0], [0], [], [1, 2], []], "fname": "format_user_or_group_width", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 1, 4, 0, 2, 0, 0, 0.08333333333333333, ["mov     eax, [rbp+u]", "mov     edi, eax; uid", "call    getuser", "jmp     short loc_A778"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "jmp~FOO"]], [1, 0, 3, 1, 0, 9, 1, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 18h", "mov     [rbp+u], edi", "mov     ebx, [rbp+u]", "movzx   eax, cs:numeric_ids", "test    al, al", "jnz     short loc_A773"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "mov~[rbp+0],edi", "mov~ebx,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0.08333333333333333, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 0, 1, 1, 7, 0, 1, 2, 0, 0.0, ["mov     rsi, rbx; id", "mov     rdi, rax; name", "call    format_user_or_group_width", "add     rsp, 18h", "pop     rbx", "pop     rbp", "retn"], ["mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "add~rsp,0", "pop~rbx", "pop~rbp", "retn"]]], "func_feature": [2, 1, 4, 0, 4, 4, 2, 21, 0.04167, 1, 2], "succs": [[3], [0, 2], [3], []], "fname": "format_user_width", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.08333333333333333, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 3, 1, 0, 9, 1, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 18h", "mov     [rbp+g], edi", "mov     ebx, [rbp+g]", "movzx   eax, cs:numeric_ids", "test    al, al", "jnz     short loc_A7B0"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "mov~[rbp+0],edi", "mov~ebx,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [1, 0, 0, 1, 1, 7, 0, 1, 2, 0, 0.0, ["mov     rsi, rbx; id", "mov     rdi, rax; name", "call    format_user_or_group_width", "add     rsp, 18h", "pop     rbx", "pop     rbp", "retn"], ["mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [0, 0, 1, 0, 1, 4, 0, 2, 1, 1, 0.08333333333333333, ["mov     eax, [rbp+g]", "mov     edi, eax; gid", "call    getgroup", "jmp     short loc_A7B5"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "jmp~FOO"]]], "func_feature": [2, 1, 4, 0, 4, 4, 1, 21, 0.04167, 1, 2], "succs": [[2], [0, 3], [], [2]], "fname": "format_group_width", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 1, 6, 1, 0, 8, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+buf], rdi", "mov     [rbp+buflen], rsi", "mov     [rbp+f], rdx", "cmp     [rbp+buflen], 14h", "ja      short loc_A801"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "cmp~[rbp+0],0", "ja~FOO"]], [0, 0, 4, 0, 0, 4, 1, 1, 0, 2, 0.13333333333333333, ["mov     rax, [rbp+f]", "movzx   eax, byte ptr [rax+0B8h]", "test    al, al", "jz      short loc_A836"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [0, 0, 1, 0, 1, 7, 0, 2, 0, 1, 0.016666666666666666, ["mov     rax, [rbp+f]", "mov     rax, [rax+20h]", "mov     rdx, [rbp+buf]", "mov     rsi, rdx; buf", "mov     rdi, rax; i", "call    umaxtostr", "jmp     short locret_A83D"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 0, 4, 1, 1, 0, 2, 0.06666666666666667, ["mov     rax, [rbp+f]", "mov     rax, [rax+20h]", "test    rax, rax", "jz      short loc_A836"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.08333333333333333, ["lea     rax, asc_1D8DA; \"?\""], ["lea~rax,<TAG>"]], [0, 1, 0, 0, 1, 5, 0, 1, 0, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___9570; \"format_inode\"", "mov     edx, 0FACh; line", "lea     rsi, file; \"src/ls.c\"", "lea     rdi, aIntBufsizeBoun; \"INT_BUFSIZE_BOUND (uintmax_t) <= buflen\"", "call    ___assert_fail"], ["lea~rcx,<TAG>", "mov~edx,<STR>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [2, 2, 6, 0, 7, 8, 2, 31, 0.04286, 4, 1], "succs": [[1, 5], [3, 4], [6], [2, 4], [6], [], []], "fname": "format_inode", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 19, 0, 1, 9, 1, 1, 0, 0, 0.008891928864569083, ["mov     rax, cs:current_time.tv_sec", "mov     rdx, cs:current_time.tv_nsec", "mov     rdi, [rbp+when_timespec.tv_sec]; a", "mov     rsi, [rbp+when_timespec.tv_nsec]; a", "mov     rcx, rdx; b", "mov     rdx, rax; b", "call    timespec_cmp", "test    eax, eax", "jns     short loc_B014"], ["mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~rdi,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rcx,rdx", "mov~rdx,rax", "call~FOO", "test~eax,eax", "jns~FOO"]], [1, 0, 20, 1, 1, 14, 1, 1, 21, 8, 0.03939808481532148, ["mov     rax, cs:current_time.tv_sec", "sub     rax, 0F0C2ACh", "mov     [rbp+six_months_ago.tv_sec], rax", "mov     rax, cs:current_time.tv_nsec", "mov     [rbp+six_months_ago.tv_nsec], rax", "mov     rax, [rbp+when_timespec.tv_sec]", "mov     rdx, [rbp+when_timespec.tv_nsec]", "mov     rdi, [rbp+six_months_ago.tv_sec]; a", "mov     rsi, [rbp+six_months_ago.tv_nsec]; a", "mov     rcx, rdx; b", "mov     rdx, rax; b", "call    timespec_cmp", "test    eax, eax", "jns     short loc_B014"], ["mov~rax,<TAG>", "sub~rax,0", "mov~[rbp+0],rax", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rdi,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rcx,rdx", "mov~rdx,rax", "call~FOO", "test~eax,eax", "jns~FOO"]], [2, 0, 68, 1, 3, 16, 0, 3, 7, 18, 0.0, ["mov     rdx, [rbp+f]; f", "lea     rax, [rbp+hbuf]", "mov     esi, 15h; buflen", "mov     rdi, rax; buf", "call    format_inode", "mov     rcx, rax", "mov     edx, cs:inode_number_width", "mov     rax, [rbp+p]", "lea     rsi, aS; \"%*s \"", "mov     rdi, rax; s", "mov     eax, 0", "call    _sprintf", "mov     rax, [rbp+p]", "mov     rdi, rax; s", "call    _strlen", "add     [rbp+p], rax"], ["mov~rdx,[rbp+0]", "lea~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~rcx,rax", "mov~edx,<TAG>", "mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "add~[rbp+0],rax"]], [0, 0, 69, 0, 0, 5, 1, 1, 6, 18, 0.14158686730506156, ["lea     rax, [rbp+buf]", "mov     [rbp+p], rax", "movzx   eax, cs:print_inode", "test    al, al", "jz      short loc_AA16"], ["lea~rax,[rbp+0]", "mov~[rbp+0],rax", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 23, 7, 0.0011627906976744186, ["mov     eax, 1", "jmp     short loc_B019"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 17, 0, 0, 1, 0, 0, 22, 7, 0.016621067031463748, ["mov     eax, 0"], ["mov~eax,0"]], [4, 0, 25, 5, 5, 46, 0, 6, 17, 7, 0.16757865937072502, ["mov     eax, cs:file_size_width", "mov     edx, cs:major_device_number_width", "lea     ecx, [rdx+2]", "mov     edx, cs:minor_device_number_width", "add     edx, ecx", "sub     eax, edx", "mov     [rbp+blanks_width], eax", "mov     rax, [rbp+f]", "mov     rax, [rax+40h]", "mov     rdi, rax; dev", "call    _gnu_dev_minor", "mov     edx, eax", "lea     rax, [rbp+hbuf]", "mov     rsi, rax; buf", "mov     rdi, rdx; i", "call    umaxtostr", "mov     r12, rax", "mov     ebx, cs:minor_device_number_width", "mov     rax, [rbp+f]", "mov     rax, [rax+40h]", "mov     rdi, rax; dev", "call    _gnu_dev_major", "mov     edx, eax", "lea     rax, [rbp+majorbuf]", "mov     rsi, rax; buf", "mov     rdi, rdx; i", "call    umaxtostr", "mov     rcx, rax", "mov     eax, 0", "cmp     [rbp+blanks_width], 0", "cmovns  eax, [rbp+blanks_width]", "mov     edx, eax", "mov     eax, cs:major_device_number_width", "add     edx, eax", "mov     rax, [rbp+p]", "mov     r9, r12", "mov     r8d, ebx", "lea     rsi, aSS_0; \"%*s, %*s \"", "mov     rdi, rax; s", "mov     eax, 0", "call    _sprintf", "mov     eax, cs:file_size_width", "cdqe", "add     rax, 1", "add     [rbp+p], rax", "jmp     loc_AF0A"], ["mov~eax,<TAG>", "mov~edx,<TAG>", "lea~ecx,[rdx+0]", "mov~edx,<TAG>", "add~edx,ecx", "sub~eax,edx", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~edx,eax", "lea~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,rdx", "call~FOO", "mov~r12,rax", "mov~ebx,<TAG>", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~edx,eax", "lea~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,rdx", "call~FOO", "mov~rcx,rax", "mov~eax,0", "cmp~[rbp+0],0", "cmovns~eax,[rbp+0]", "mov~edx,eax", "mov~eax,<TAG>", "add~edx,eax", "mov~rax,[rbp+0]", "mov~r9,r12", "mov~r8d,ebx", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "mov~eax,<TAG>", "cdqe~", "add~rax,0", "add~[rbp+0],rax", "jmp~FOO"]], [2, 0, 37, 0, 0, 5, 1, 1, 16, 8, 0.17359781121751025, ["mov     rax, [rbp+f]", "mov     eax, [rax+30h]", "and     eax, 0F000h", "cmp     eax, 2000h", "jz      short loc_AD4E"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 1, 36, 0, 0, 5, 1, 1, 17, 8, 0.0013679890560875513, ["mov     rax, [rbp+f]", "mov     eax, [rax+30h]", "and     eax, 0F000h", "cmp     eax, 6000h", "jnz     loc_AE1D"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [0, 0, 67, 0, 0, 3, 1, 1, 7, 17, 0.1558139534883721, ["movzx   eax, cs:print_block_size", "test    al, al", "jz      loc_AB08"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 34, 0, 0, 5, 2, 1, 16, 13, 0.06032831737346101, ["mov     rax, [rbp+f]", "movzx   eax, byte ptr [rax+0B8h]", "xor     eax, 1", "test    al, al", "jz      short loc_AE3B"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 38, 0, 0, 4, 1, 1, 15, 9, 0.23912448700410396, ["mov     rax, [rbp+f]", "movzx   eax, byte ptr [rax+0B8h]", "test    al, al", "jz      loc_AE1D"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [1, 0, 66, 0, 0, 5, 2, 1, 8, 23, 0.02216142270861833, ["mov     rax, [rbp+f]", "movzx   eax, byte ptr [rax+0B8h]", "xor     eax, 1", "test    al, al", "jz      short loc_AA43"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 32, 0, 0, 2, 0, 1, 17, 12, 0.025649794801641587, ["lea     rax, asc_1D8DA; \"?\"", "jmp     short loc_AE77"], ["lea~rax,<TAG>", "jmp~FOO"]], [0, 0, 64, 0, 0, 2, 0, 1, 9, 22, 0.012995896032831737, ["lea     rax, asc_1D8DA; \"?\"", "jmp     short loc_AA75"], ["lea~rax,<TAG>", "jmp~FOO"]], [5, 0, 4, 3, 2, 26, 1, 3, 23, 2, 0.0106703146374829, ["mov     rax, cs:stdout@@GLIBC_2_2_5", "mov     rcx, rax; stream", "mov     edx, 4; n", "mov     esi, 1; size", "lea     rdi, asc_1D91F; \" -> \"", "call    _fwrite_unlocked", "mov     rax, cs:dired_pos", "add     rax, 4", "mov     cs:dired_pos, rax", "mov     rdx, [rbp+p]", "lea     rax, [rbp+buf]", "sub     rdx, rax", "mov     rax, rdx", "mov     rdx, rax", "mov     rax, [rbp+w]", "add     rax, rdx", "lea     rdx, [rax+4]", "mov     rax, [rbp+f]", "mov     rcx, rdx; start_col", "mov     edx, 0; stack", "mov     esi, 1; symlink_target", "mov     rdi, rax; f", "call    print_name_with_quoting", "mov     eax, cs:indicator_style_0", "test    eax, eax", "jz      short loc_B2A0"], ["mov~rax,<TAG>", "mov~rcx,rax", "mov~edx,0", "mov~esi,0", "lea~rdi,<TAG>", "call~FOO", "mov~rax,<TAG>", "add~rax,0", "mov~<TAG>,rax", "mov~rdx,[rbp+0]", "lea~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rcx,rdx", "mov~edx,0", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 0, 5, 0, 0, 4, 1, 1, 22, 2, 0.03686730506155951, ["mov     rax, [rbp+f]", "mov     rax, [rax+8]", "test    rax, rax", "jz      loc_B2A0"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 19, 5, 0.14158686730506156, ["cmp     [rbp+s], 0", "jnz     short loc_B07D"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 24, 0, 0, 7, 1, 1, 18, 6, 0.19699042407660738, ["mov     [rbp+s], 0", "mov     rax, [rbp+p]", "mov     byte ptr [rax], 1", "mov     rax, [rbp+f]", "movzx   eax, byte ptr [rax+0B8h]", "test    al, al", "jz      loc_B065"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [0, 0, 23, 0, 1, 8, 1, 2, 19, 6, 0.05841313269493844, ["mov     rax, cs:localtz", "lea     rdx, [rbp+when_local]; tm", "lea     rcx, [rbp+when_timespec]", "mov     rsi, rcx; t", "mov     rdi, rax; tz", "call    localtime_rz", "test    rax, rax", "jz      loc_B065"], ["mov~rax,<TAG>", "lea~rdx,[rbp+0]", "lea~rcx,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "test~rax,rax", "jz~FOO"]], [2, 0, 16, 0, 1, 14, 1, 1, 23, 6, 0.013132694938440492, ["mov     [rbp+recent], al", "and     [rbp+recent], 1", "mov     rax, [rbp+when_timespec.tv_nsec]", "mov     edi, eax", "mov     rsi, cs:localtz", "movzx   edx, [rbp+recent]; recent", "lea     rcx, [rbp+when_local]; tm", "mov     rax, [rbp+p]", "mov     r9d, edi; ns", "mov     r8, rsi; tz", "mov     esi, 3E9h; size", "mov     rdi, rax; buf", "call    align_nstrftime", "mov     [rbp+s], rax"], ["mov~[rbp+0],al", "and~[rbp+0],0", "mov~rax,[rbp+0]", "mov~edi,eax", "mov~rsi,<TAG>", "movzx~edx,[rbp+0]", "lea~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~r9d,edi", "mov~r8,rsi", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax"]], [0, 0, 46, 0, 1, 9, 0, 1, 13, 14, 0.0, ["mov     rax, [rbp+f]", "movzx   eax, byte ptr [rax+0B8h]", "movzx   edx, al; stat_ok", "mov     ecx, cs:owner_width", "mov     rax, [rbp+f]", "mov     eax, [rax+34h]", "mov     esi, ecx; width", "mov     edi, eax; u", "call    format_user"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "movzx~edx,al", "mov~ecx,<TAG>", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~esi,ecx", "mov~edi,eax", "call~FOO"]], [0, 0, 47, 2, 1, 16, 1, 2, 12, 14, 0.04049247606019152, ["mov     rdx, cs:stdout@@GLIBC_2_2_5", "lea     rax, [rbp+buf]", "mov     rsi, rdx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rdx, [rbp+p]", "lea     rax, [rbp+buf]", "sub     rdx, rax", "mov     rax, rdx", "mov     rdx, rax", "mov     rax, cs:dired_pos", "add     rax, rdx", "mov     cs:dired_pos, rax", "movzx   eax, cs:print_owner", "test    al, al", "jz      short loc_AC64"], ["mov~rdx,<TAG>", "lea~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~rdx,[rbp+0]", "lea~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "mov~rdx,rax", "mov~rax,<TAG>", "add~rax,rdx", "mov~<TAG>,rax", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [2, 0, 3, 0, 1, 7, 0, 2, 24, 2, 0.0, ["mov     rax, [rbp+f]", "mov     eax, [rax+0ACh]", "mov     edx, 0; type", "mov     esi, eax; mode", "mov     edi, 1; stat_ok", "call    print_type_indicator", "jmp     short loc_B2A0"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~edx,0", "mov~esi,eax", "mov~edi,0", "call~FOO", "jmp~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 22, 2, 0.026333789329685362, ["mov     eax, cs:indicator_style_0", "test    eax, eax", "jz      short loc_B2A0"], ["mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [2, 0, 8, 3, 2, 29, 0, 3, 21, 3, 0.08317373461012312, ["mov     rdx, cs:stdout@@GLIBC_2_2_5", "lea     rax, [rbp+buf]", "mov     rsi, rdx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rdx, [rbp+p]", "lea     rax, [rbp+buf]", "sub     rdx, rax", "mov     rax, rdx", "mov     rdx, rax", "mov     rax, cs:dired_pos", "add     rax, rdx", "mov     cs:dired_pos, rax", "mov     rdx, [rbp+p]", "lea     rax, [rbp+buf]", "sub     rdx, rax", "mov     rax, rdx", "mov     rdx, rax", "mov     rax, [rbp+f]", "mov     rcx, rdx; start_col", "lea     rdx, dired_obstack; stack", "mov     esi, 0; symlink_target", "mov     rdi, rax; f", "call    print_name_with_quoting", "mov     [rbp+w], rax", "mov     rax, [rbp+f]", "mov     eax, [rax+0A8h]", "cmp     eax, 6", "jnz     loc_B265"], ["mov~rdx,<TAG>", "lea~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~rdx,[rbp+0]", "lea~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "mov~rdx,rax", "mov~rax,<TAG>", "add~rax,rdx", "mov~<TAG>,rax", "mov~rdx,[rbp+0]", "lea~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rcx,rdx", "lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "cmp~eax,0", "jnz~FOO"]], [0, 1, 64, 0, 1, 10, 0, 1, 9, 22, 0.012995896032831737, ["mov     rcx, cs:output_block_size", "mov     edx, cs:human_output_opts; opts", "mov     rax, [rbp+f]", "mov     rax, [rax+58h]", "mov     rdi, rax; n", "lea     rax, [rbp+hbuf]", "mov     r8, rcx; to_block_size", "mov     ecx, 200h; from_block_size", "mov     rsi, rax; buf", "call    human_readable"], ["mov~rcx,<TAG>", "mov~edx,<TAG>", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "lea~rax,[rbp+0]", "mov~r8,rcx", "mov~ecx,<STR>", "mov~rsi,rax", "call~FOO"]], [1, 0, 32, 0, 2, 13, 0, 2, 17, 12, 0.025649794801641587, ["mov     r12, cs:file_output_block_size", "mov     ebx, cs:file_human_output_opts", "mov     rax, [rbp+f]", "mov     rax, [rax+48h]", "mov     rdi, rax; size", "call    unsigned_file_size", "mov     rdi, rax; n", "lea     rax, [rbp+hbuf]", "mov     r8, r12; to_block_size", "mov     ecx, 1; from_block_size", "mov     edx, ebx; opts", "mov     rsi, rax; buf", "call    human_readable"], ["mov~r12,<TAG>", "mov~ebx,<TAG>", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~rdi,rax", "lea~rax,[rbp+0]", "mov~r8,r12", "mov~ecx,0", "mov~edx,ebx", "mov~rsi,rax", "call~FOO"]], [0, 1, 86, 1, 0, 13, 2, 1, 0, 24, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r12", "push    rbx", "sub     rsp, 11C0h", "mov     [rbp+f], rdi", "mov     rax, fs:28h", "mov     [rbp+var_18], rax", "xor     eax, eax", "mov     rax, [rbp+f]", "movzx   eax, byte ptr [rax+0B8h]", "test    al, al", "jz      short loc_A894"], ["push~rbp", "mov~rbp,rsp", "push~r12", "push~rbx", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [0, 0, 14, 0, 0, 4, 1, 1, 20, 5, 0.038303693570451436, ["mov     rax, [rbp+p]", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_B0AC"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 45, 0, 0, 3, 1, 1, 13, 13, 0.0426812585499316, ["movzx   eax, cs:print_group", "test    al, al", "jz      short loc_AC99"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 84, 0, 1, 7, 0, 2, 1, 23, 0.005745554035567715, ["mov     rax, [rbp+f]", "lea     rdx, [rax+18h]", "lea     rax, [rbp+modebuf]", "mov     rsi, rax; str", "mov     rdi, rdx; statp", "call    filemodestring", "jmp     short loc_A8D8"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "lea~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,rdx", "call~FOO", "jmp~FOO"]], [0, 0, 44, 0, 1, 9, 0, 1, 14, 13, 0.0, ["mov     rax, [rbp+f]", "movzx   eax, byte ptr [rax+0B8h]", "movzx   edx, al; stat_ok", "mov     ecx, cs:group_width", "mov     rax, [rbp+f]", "mov     eax, [rax+38h]", "mov     esi, ecx; width", "mov     edi, eax; g", "call    format_group"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "movzx~edx,al", "mov~ecx,<TAG>", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~esi,ecx", "mov~edi,eax", "call~FOO"]], [0, 0, 3, 0, 1, 10, 0, 1, 23, 2, 0.0, ["mov     rax, [rbp+f]", "mov     edx, [rax+0A8h]; type", "mov     rax, [rbp+f]", "mov     ecx, [rax+30h]", "mov     rax, [rbp+f]", "movzx   eax, byte ptr [rax+0B8h]", "movzx   eax, al", "mov     esi, ecx; mode", "mov     edi, eax; stat_ok", "call    print_type_indicator"], ["mov~rax,[rbp+0]", "mov~edx,[rax+0]", "mov~rax,[rbp+0]", "mov~ecx,[rax+0]", "mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "movzx~eax,al", "mov~esi,ecx", "mov~edi,eax", "call~FOO"]], [1, 0, 9, 1, 3, 12, 0, 3, 23, 4, 0.0036935704514363885, ["call    long_time_expected_width", "mov     edx, eax", "mov     rax, [rbp+p]", "mov     rcx, rbx", "lea     rsi, aS; \"%*s \"", "mov     rdi, rax; s", "mov     eax, 0", "call    _sprintf", "mov     rax, [rbp+p]", "mov     rdi, rax; s", "call    _strlen", "add     [rbp+p], rax"], ["call~FOO", "mov~edx,eax", "mov~rax,[rbp+0]", "mov~rcx,rbx", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "add~[rbp+0],rax"]], [0, 0, 10, 0, 0, 2, 0, 1, 22, 5, 0.005540355677154583, ["lea     rbx, asc_1D8DA; \"?\"", "jmp     short loc_B0E6"], ["lea~rbx,<TAG>", "jmp~FOO"]], [0, 0, 10, 0, 1, 6, 0, 1, 22, 5, 0.005540355677154583, ["mov     rax, [rbp+when_timespec.tv_sec]", "lea     rdx, [rbp+hbuf]", "mov     rsi, rdx; buf", "mov     rdi, rax; t", "call    timetostr", "mov     rbx, rax"], ["mov~rax,[rbp+0]", "lea~rdx,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~rbx,rax"]], [1, 0, 63, 1, 1, 10, 0, 2, 10, 21, 0.04062927496580027, ["mov     [rbp+blocks], rax", "mov     ebx, cs:block_size_width", "mov     rax, [rbp+blocks]", "mov     esi, 0; flags", "mov     rdi, rax; string", "call    gnu_mbswidth", "sub     ebx, eax", "mov     eax, ebx", "mov     [rbp+pad], eax", "jmp     short loc_AABE"], ["mov~[rbp+0],rax", "mov~ebx,<TAG>", "mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "sub~ebx,eax", "mov~eax,ebx", "mov~[rbp+0],eax", "jmp~FOO"]], [0, 0, 43, 0, 0, 3, 1, 1, 14, 12, 0.04377564979480164, ["movzx   eax, cs:print_author", "test    al, al", "jz      short loc_ACCE"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 1, 9, 1, 0, 9, 0, 1, 20, 4, 0.08741450068399453, ["mov     rax, [rbp+s]", "add     [rbp+p], rax", "mov     rax, [rbp+p]", "lea     rdx, [rax+1]", "mov     [rbp+p], rdx", "mov     byte ptr [rax], 20h ; ' '", "mov     rax, [rbp+p]", "mov     byte ptr [rax], 0", "jmp     short loc_B121"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax", "mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~<TAG>,<STR>", "mov~rax,[rbp+0]", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 31, 0, 0, 2, 0, 1, 19, 10, 0.05389876880984952, ["cmp     [rbp+pad_0], 0", "jg      short loc_AEA4"], ["cmp~[rbp+0],0", "jg~FOO"]], [1, 0, 31, 1, 1, 10, 0, 2, 18, 11, 0.052941176470588235, ["mov     [rbp+size], rax", "mov     ebx, cs:file_size_width", "mov     rax, [rbp+size]", "mov     esi, 0; flags", "mov     rdi, rax; string", "call    gnu_mbswidth", "sub     ebx, eax", "mov     eax, ebx", "mov     [rbp+pad_0], eax", "jmp     short loc_AEC0"], ["mov~[rbp+0],rax", "mov~ebx,<TAG>", "mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "sub~ebx,eax", "mov~eax,ebx", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 1, 31, 1, 0, 5, 0, 0, 20, 11, 0.0, ["mov     rax, [rbp+p]", "lea     rdx, [rax+1]", "mov     [rbp+p], rdx", "mov     byte ptr [rax], 20h ; ' '", "sub     [rbp+pad_0], 1"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~<TAG>,<STR>", "sub~[rbp+0],0"]], [0, 0, 2, 0, 0, 4, 1, 1, 23, 1, 0.02243502051983584, ["nop", "mov     rax, [rbp+var_18]", "xor     rax, fs:28h", "jz      short loc_B2B5"], ["nop", "mov~rax,[rbp+0]", "xor~rax,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 24, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 1, 63, 1, 0, 5, 0, 0, 12, 21, 0.0, ["mov     rax, [rbp+p]", "lea     rdx, [rax+1]", "mov     [rbp+p], rdx", "mov     byte ptr [rax], 20h ; ' '", "sub     [rbp+pad], 1"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~<TAG>,<STR>", "sub~[rbp+0],0"]], [1, 0, 63, 0, 0, 2, 0, 1, 11, 20, 0.054582763337893296, ["cmp     [rbp+pad], 0", "jg      short loc_AAA2"], ["cmp~[rbp+0],0", "jg~FOO"]], [1, 0, 12, 0, 0, 5, 2, 1, 21, 6, 0.029138166894664842, ["mov     rax, [rbp+f]", "movzx   eax, byte ptr [rax+0B8h]", "xor     eax, 1", "test    al, al", "jz      short loc_B0CA"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 1, 0, 1, 0, 5, 0, 0, 24, 0, 0.0, ["add     rsp, 11C0h", "pop     rbx", "pop     r12", "pop     rbp", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~r12", "pop~rbp", "retn"]], [0, 0, 60, 0, 0, 1, 0, 1, 12, 19, 0.05663474692202462, ["jmp     short loc_AACA"], ["jmp~FOO"]], [0, 0, 60, 0, 0, 1, 0, 0, 14, 19, 0.0, ["nop"], ["nop"]], [0, 0, 60, 0, 0, 11, 1, 1, 13, 18, 0.06935704514363886, ["mov     rdx, [rbp+blocks]", "lea     rax, [rdx+1]", "mov     [rbp+blocks], rax", "mov     rax, [rbp+p]", "lea     rcx, [rax+1]", "mov     [rbp+p], rcx", "movzx   edx, byte ptr [rdx]", "mov     [rax], dl", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_AAC9"], ["mov~rdx,[rbp+0]", "lea~rax,[rdx+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "lea~rcx,[rax+0]", "mov~[rbp+0],rcx", "movzx~edx,<TAG>", "mov~<TAG>,dl", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 28, 0, 0, 1, 0, 0, 22, 9, 0.0, ["nop"], ["nop"]], [0, 0, 28, 0, 0, 11, 1, 1, 21, 8, 0.042818057455540355, ["mov     rdx, [rbp+size]", "lea     rax, [rdx+1]", "mov     [rbp+size], rax", "mov     rax, [rbp+p]", "lea     rcx, [rax+1]", "mov     [rbp+p], rcx", "movzx   edx, byte ptr [rdx]", "mov     [rax], dl", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_AECB"], ["mov~rdx,[rbp+0]", "lea~rax,[rdx+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "lea~rcx,[rax+0]", "mov~[rbp+0],rcx", "movzx~edx,<TAG>", "mov~<TAG>,dl", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [4, 0, 84, 1, 1, 13, 0, 1, 1, 23, 0.005745554035567715, ["mov     rax, [rbp+f]", "mov     eax, [rax+0A8h]", "mov     edx, eax", "lea     rax, filetype_letter; \"?pcdb-lswd\"", "movzx   eax, byte ptr [rdx+rax]", "mov     [rbp+modebuf], al", "lea     rax, [rbp+modebuf]", "add     rax, 1", "mov     edx, 0Ah; n", "mov     esi, 3Fh ; '?'; c", "mov     rdi, rax; s", "call    _memset", "mov     [rbp+modebuf+0Bh], 0"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~edx,eax", "lea~rax,<TAG>", "movzx~eax,<TAG>", "mov~[rbp+0],al", "lea~rax,[rbp+0]", "add~rax,0", "mov~edx,0", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],0"]], [0, 0, 41, 0, 0, 3, 1, 1, 15, 11, 0.04377564979480164, ["movzx   eax, cs:print_scontext", "test    al, al", "jz      short loc_ACFA"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 42, 0, 1, 9, 0, 1, 15, 12, 0.0, ["mov     rax, [rbp+f]", "movzx   eax, byte ptr [rax+0B8h]", "movzx   edx, al; stat_ok", "mov     ecx, cs:author_width", "mov     rax, [rbp+f]", "mov     eax, [rax+34h]", "mov     esi, ecx; width", "mov     edi, eax; u", "call    format_user"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "movzx~edx,al", "mov~ecx,<TAG>", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~esi,ecx", "mov~edi,eax", "call~FOO"]], [1, 0, 83, 0, 0, 4, 2, 1, 2, 22, 0.03406292749658003, ["movzx   eax, cs:any_has_acl", "xor     eax, 1", "test    al, al", "jz      short loc_A8EF"], ["movzx~eax,<TAG>", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 78, 0, 0, 2, 0, 1, 3, 21, 0.0426812585499316, ["mov     [rbp+modebuf+0Ah], 0", "jmp     short loc_A923"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 40, 0, 1, 6, 0, 1, 16, 11, 0.0, ["mov     edx, cs:scontext_width; width", "mov     rax, [rbp+f]", "mov     rax, [rax+0B0h]", "mov     esi, 0; id", "mov     rdi, rax; name", "call    format_user_or_group"], ["mov~edx,<TAG>", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO"]], [0, 0, 28, 0, 0, 1, 0, 1, 20, 9, 0.043091655266757865, ["jmp     short loc_AECC"], ["jmp~FOO"]], [1, 0, 81, 0, 0, 4, 0, 1, 3, 22, 0.0016415868673050615, ["mov     rax, [rbp+f]", "mov     eax, [rax+0BCh]", "cmp     eax, 1", "jnz     short loc_A90A"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "cmp~eax,0", "jnz~FOO"]], [0, 0, 39, 0, 0, 2, 0, 0, 16, 10, 0.0426812585499316, ["lea     rax, [rbp+buf]", "mov     [rbp+p], rax"], ["lea~rax,[rbp+0]", "mov~[rbp+0],rax"]], [1, 1, 57, 1, 0, 3, 0, 0, 14, 17, 0.07017783857729137, ["mov     rax, [rbp+p]", "sub     rax, 1", "mov     byte ptr [rax], 20h ; ' '"], ["mov~rax,[rbp+0]", "sub~rax,0", "mov~<TAG>,<STR>"]], [1, 1, 25, 1, 0, 3, 0, 0, 22, 7, 0.030779753761969904, ["mov     rax, [rbp+p]", "sub     rax, 1", "mov     byte ptr [rax], 20h ; ' '"], ["mov~rax,[rbp+0]", "sub~rax,0", "mov~<TAG>,<STR>"]], [1, 0, 78, 0, 0, 2, 0, 1, 4, 21, 0.00533515731874145, ["mov     [rbp+modebuf+0Ah], 2Eh ; '.'", "jmp     short loc_A923"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 48, 0, 0, 3, 1, 1, 14, 10, 0.1920656634746922, ["movzx   eax, cs:print_scontext", "test    al, al", "jz      loc_AD08"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 79, 0, 0, 4, 0, 1, 4, 21, 0.006019151846785226, ["mov     rax, [rbp+f]", "mov     eax, [rax+0BCh]", "cmp     eax, 2", "jnz     short loc_A923"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "cmp~eax,0", "jnz~FOO"]], [1, 0, 56, 0, 0, 5, 2, 1, 8, 16, 0.21450068399452804, ["mov     rax, [rbp+f]", "movzx   eax, byte ptr [rax+0B8h]", "xor     eax, 1", "test    al, al", "jz      short loc_AB26"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 78, 0, 0, 1, 0, 0, 5, 21, 0.0, ["mov     [rbp+modebuf+0Ah], 2Bh ; '+'"], ["mov~[rbp+0],0"]], [0, 0, 54, 0, 0, 2, 0, 1, 9, 15, 0.10711354309165527, ["lea     rax, asc_1D8DA; \"?\"", "jmp     short loc_AB43"], ["lea~rax,<TAG>", "jmp~FOO"]], [1, 0, 77, 0, 0, 3, 0, 1, 4, 20, 0.0948016415868673, ["mov     eax, cs:time_type_0", "cmp     eax, 1", "jz      short loc_A93A"], ["mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 75, 0, 0, 2, 0, 0, 5, 20, 0.006839945280437756, ["cmp     eax, 1", "jb      short loc_A95D"], ["cmp~eax,0", "jb~FOO"]], [1, 0, 73, 0, 0, 2, 0, 1, 6, 20, 0.004514363885088919, ["cmp     eax, 2", "jz      short loc_A980"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 7, -1, 0.0016415868673050615, ["jmp     short loc_A9A3"], ["jmp~FOO"]], [0, 0, 54, 0, 1, 6, 0, 1, 9, 15, 0.10711354309165527, ["mov     rax, [rbp+f]", "mov     rax, [rax+28h]", "lea     rdx, [rbp+hbuf]", "mov     rsi, rdx; buf", "mov     rdi, rax; i", "call    umaxtostr"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO"]], [0, 0, 51, 0, 0, 3, 1, 1, 11, 13, 0.2302325581395349, ["movzx   eax, cs:print_owner", "test    al, al", "jnz     short loc_ABEE"], ["movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 50, 0, 0, 3, 1, 1, 12, 12, 0.19069767441860463, ["movzx   eax, cs:print_group", "test    al, al", "jnz     short loc_ABEE"], ["movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 49, 0, 0, 3, 1, 1, 13, 11, 0.19151846785225718, ["movzx   eax, cs:print_author", "test    al, al", "jnz     short loc_ABEE"], ["movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [1, 0, 70, 1, 1, 7, 0, 2, 5, 19, 0.09575923392612859, ["mov     rax, [rbp+f]", "add     rax, 18h", "mov     rdi, rax; st", "call    get_stat_ctime", "mov     [rbp+when_timespec.tv_sec], rax", "mov     [rbp+when_timespec.tv_nsec], rdx", "jmp     short loc_A9A8"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~[rbp+0],rdx", "jmp~FOO"]], [1, 0, 70, 1, 1, 7, 0, 2, 6, 19, 0.009575923392612859, ["mov     rax, [rbp+f]", "add     rax, 18h", "mov     rdi, rax; st", "call    get_stat_mtime", "mov     [rbp+when_timespec.tv_sec], rax", "mov     [rbp+when_timespec.tv_nsec], rdx", "jmp     short loc_A9A8"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~[rbp+0],rdx", "jmp~FOO"]], [0, 0, 22, 0, 1, 9, 1, 1, 20, 9, 0.05088919288645691, ["mov     rax, [rbp+when_timespec.tv_sec]", "mov     rdx, [rbp+when_timespec.tv_nsec]", "mov     rdi, cs:current_time.tv_sec; a", "mov     rsi, cs:current_time.tv_nsec; a", "mov     rcx, rdx; b", "mov     rdx, rax; b", "call    timespec_cmp", "test    eax, eax", "jns     short loc_AF95"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rdi,<TAG>", "mov~rsi,<TAG>", "mov~rcx,rdx", "mov~rdx,rax", "call~FOO", "test~eax,eax", "jns~FOO"]], [1, 0, 53, 1, 2, 14, 1, 3, 10, 14, 0.22476060191518468, ["mov     ecx, cs:nlink_width", "lea     rdx, [rbp+modebuf]", "mov     rdi, [rbp+p]; s", "mov     r8, rax", "lea     rsi, aSS; \"%s %*s \"", "mov     eax, 0", "call    _sprintf", "mov     rax, [rbp+p]", "mov     rdi, rax; s", "call    _strlen", "add     [rbp+p], rax", "movzx   eax, cs:dired", "test    al, al", "jz      short loc_ABBE"], ["mov~ecx,<TAG>", "lea~rdx,[rbp+0]", "mov~rdi,[rbp+0]", "mov~r8,rax", "lea~rsi,<TAG>", "mov~eax,0", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "add~[rbp+0],rax", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 21, 0, 1, 2, 0, 1, 21, 9, 0.0, ["lea     rdi, current_time; ts", "call    gettime"], ["lea~rdi,<TAG>", "call~FOO"]], [1, 0, 70, 1, 1, 7, 0, 2, 7, 19, 0.009575923392612859, ["mov     rax, [rbp+f]", "add     rax, 18h", "mov     rdi, rax; st", "call    get_stat_atime", "mov     [rbp+when_timespec.tv_sec], rax", "mov     [rbp+when_timespec.tv_nsec], rdx", "jmp     short loc_A9A8"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~[rbp+0],rdx", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, -1, 0.0, ["call    _abort"], ["call~FOO"]], [3, 0, 52, 1, 1, 9, 0, 1, 11, 14, 0.0, ["mov     rax, cs:stdout@@GLIBC_2_2_5", "mov     rcx, rax; stream", "mov     edx, 2; n", "mov     esi, 1; size", "lea     rdi, asc_1D781; \"  \"", "call    _fwrite_unlocked", "mov     rax, cs:dired_pos", "add     rax, 2", "mov     cs:dired_pos, rax"], ["mov~rax,<TAG>", "mov~rcx,rax", "mov~edx,0", "mov~esi,0", "lea~rdi,<TAG>", "call~FOO", "mov~rax,<TAG>", "add~rax,0", "mov~<TAG>,rax"]]], "func_feature": [45, 39, 101, 1, 87, 125, 1, 570, 0.05087, 38, 31], "succs": [[4, 5], [0, 5], [9], [9, 2], [20], [20], [18], [8, 6], [10, 6], [68, 12], [27, 13], [10, 7], [26, 14], [41], [37], [43, 23], [43, 15], [29, 39], [17, 19], [17, 81], [17], [30], [21, 30], [43], [33, 43], [24, 16], [37], [41], [54, 31], [47, 39], [32, 38], [57], [38], [43], [25], [34], [34], [46], [56, 55], [25], [42, 60], [40], [40], [48, 44], [], [46], [49, 45], [35, 36], [], [51], [51], [50, 63], [53], [64, 52], [57], [59, 62], [55], [58, 61], [71], [62], [53], [65, 67], [11], [68], [18], [71], [11, 22], [69, 71], [75, 70], [71], [82], [72, 79], [80, 73], [74, 84], [85], [82], [77, 22], [78, 22], [66, 22], [3], [3], [1, 83], [76, 86], [1], [3], [], [76]], "fname": "print_long_format", "n_num": 87}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 35, 0, 0, 3, 0, 0, 0, 0, 0.21407867494824018, ["mov     rax, [rbp+p]", "cmp     rax, [rbp+plimit]", "jb      loc_B511"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jb~FOO"]], [1, 0, 35, 1, 0, 10, 0, 1, 7, 7, 0.10973084886128365, ["mov     rax, [rbp+buf]", "mov     [rbp+p], rax", "mov     rdx, [rbp+buf]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     [rbp+plimit], rax", "mov     rax, [rbp+buf]", "mov     [rbp+q], rax", "mov     [rbp+displayed_width], 0", "jmp     loc_B67B"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 35, 1, 0, 10, 0, 1, 11, 7, 0.02670807453416149, ["mov     rdx, [rbp+p]", "lea     rax, [rdx+1]", "mov     [rbp+p], rax", "mov     rax, [rbp+q]", "lea     rcx, [rax+1]", "mov     [rbp+q], rcx", "movzx   edx, byte ptr [rdx]", "mov     [rax], dl", "add     [rbp+displayed_width], 1", "jmp     loc_B67B"], ["mov~rdx,[rbp+0]", "lea~rax,[rdx+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "lea~rcx,[rax+0]", "mov~[rbp+0],rcx", "movzx~edx,<TAG>", "mov~<TAG>,dl", "add~[rbp+0],0", "jmp~FOO"]], [0, 0, 35, 0, 0, 1, 0, 0, 14, 7, 0.06563146997929607, ["nop"], ["nop"]], [0, 0, 10, 0, 0, 3, 0, 1, 9, 5, 0.011387163561076604, ["mov     rax, [rbp+len]", "mov     [rbp+displayed_width], rax", "jmp     loc_B7AC"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 15, 0, 0, 3, 0, 0, 8, 6, 0.02877846790890269, ["mov     rax, [rbp+p_0]", "cmp     rax, [rbp+plimit_0]", "jb      short loc_B6B9"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jb~FOO"]], [0, 0, 56, 0, 0, 6, 0, 1, 4, 9, 0.028985507246376812, ["mov     rax, [rbp+name]", "movzx   edx, byte ptr [rax]", "mov     rax, [rbp+buf]", "movzx   eax, byte ptr [rax]", "cmp     dl, al", "jnz     short loc_B422"], ["mov~rax,[rbp+0]", "movzx~edx,<TAG>", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~dl,al", "jnz~FOO"]], [1, 0, 58, 0, 1, 12, 0, 2, 3, 10, 0.008695652173913044, ["mov     rcx, [rbp+options]", "mov     rdx, [rbp+name]; arg", "mov     rsi, [rbp+bufsize]; buffersize", "mov     rax, [rbp+buf]", "mov     r8, rcx; o", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdi, rax; buffer", "call    quotearg_buffer", "mov     [rbp+len], rax", "mov     rax, [rbp+bufsize]", "cmp     rax, [rbp+len]", "ja      short loc_B3F8"], ["mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~r8,rcx", "mov~rcx,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "ja~FOO"]], [2, 0, 57, 1, 2, 14, 0, 2, 4, 10, 0.0, ["mov     rax, [rbp+len]", "add     rax, 1", "mov     rdi, rax; n", "call    xmalloc", "mov     [rbp+buf], rax", "mov     rax, [rbp+len]", "lea     rsi, [rax+1]; buffersize", "mov     rcx, [rbp+options]", "mov     rdx, [rbp+name]; arg", "mov     rax, [rbp+buf]", "mov     r8, rcx; o", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdi, rax; buffer", "call    quotearg_buffer"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "lea~rsi,[rax+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~r8,rcx", "mov~rcx,0", "mov~rdi,rax", "call~FOO"]], [1, 0, 42, 0, 1, 3, 0, 1, 6, 8, 0.13250517598343686, ["call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "jbe     loc_B6A0"], ["call~FOO", "cmp~rax,0", "jbe~FOO"]], [1, 0, 52, 0, 1, 7, 0, 1, 4, 7, 0.08612836438923395, ["mov     rax, [rbp+name]", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+len], rax", "mov     rax, [rbp+name]", "mov     [rbp+buf], rax", "mov     [rbp+quoted], 0"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~[rbp+0],0"]], [1, 0, 56, 0, 0, 2, 0, 1, 3, 8, 0.08115942028985507, ["cmp     [rbp+needs_further_quoting], 0", "jz      short loc_B4A4"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 35, 0, 1, 6, 0, 2, 15, 10, 0.06356107660455486, ["mov     eax, [rbp+wc]", "mov     edi, eax; c", "call    _wcwidth", "mov     [rbp+w], eax", "cmp     [rbp+w], 0", "js      short loc_B64A"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "js~FOO"]], [1, 0, 35, 0, 0, 2, 0, 1, 14, 11, 0.06811594202898551, ["cmp     [rbp+bytes], 0", "jnz     short loc_B5FE"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 35, 0, 0, 1, 0, 0, 15, 11, 0.0, ["mov     [rbp+bytes], 1"], ["mov~[rbp+0],0"]], [0, 0, 35, 0, 0, 1, 0, 1, 16, 11, 0.02650103519668737, ["jmp     short loc_B638"], ["jmp~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 6, 5, 0.07039337474120083, ["cmp     [rbp+width], 0", "jz      loc_B7AC"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 51, 0, 0, 2, 0, 1, 5, 6, 0.20062111801242236, ["cmp     [rbp+needs_further_quoting], 0", "jz      loc_B70D"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 14, 2, 2, 15, 2, 3, 10, 7, 0.010144927536231883, ["call    ___ctype_b_loc", "mov     rbx, [rax]", "mov     rax, [rbp+p_1]", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "mov     edi, eax; ch_0", "call    to_uchar", "movzx   eax, al", "add     rax, rax", "add     rax, rbx", "movzx   eax, word ptr [rax]", "movzx   eax, ax", "and     eax, 4000h", "test    eax, eax", "jz      short loc_B79D"], ["call~FOO", "mov~rbx,<TAG>", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "movsx~eax,al", "mov~edi,eax", "call~FOO", "movzx~eax,al", "add~rax,rax", "add~rax,rbx", "movzx~eax,<TAG>", "movzx~eax,ax", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 14, 0, 0, 3, 0, 0, 9, 5, 0.02318840579710145, ["mov     rax, [rbp+p_1]", "cmp     rax, [rbp+plimit_1]", "jb      short loc_B767"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jb~FOO"]], [1, 0, 14, 1, 0, 1, 0, 0, 11, 7, 0.0, ["add     [rbp+displayed_width], 1"], ["add~[rbp+0],0"]], [0, 0, 10, 1, 0, 6, 0, 1, 9, 5, 0.052795031055900624, ["mov     rdx, [rbp+q]", "mov     rax, [rbp+buf]", "sub     rdx, rax", "mov     rax, rdx", "mov     [rbp+len], rax", "jmp     loc_B7AC"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 14, 1, 0, 1, 0, 0, 11, 6, 0.0047619047619047615, ["add     [rbp+p_1], 1"], ["add~[rbp+0],0"]], [1, 0, 35, 0, 0, 5, 0, 1, 9, 9, 0.1494824016563147, ["mov     rax, [rbp+p]", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "cmp     eax, 3Fh ; '?'", "jg      short loc_B52F"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "movsx~eax,al", "cmp~eax,0", "jg~FOO"]], [0, 0, 2, 0, 0, 7, 1, 1, 10, 1, 0.028157349896480333, ["mov     rax, [rbp+inbuf]", "mov     rdx, [rbp+buf]", "mov     [rax], rdx", "mov     rax, [rbp+len]", "mov     rbx, [rbp+var_18]", "xor     rbx, fs:28h", "jz      short loc_B826"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rbx,[rbp+0]", "xor~rbx,<TAG>", "jz~FOO"]], [2, 0, 4, 0, 0, 5, 1, 1, 9, 2, 0.0546583850931677, ["and     eax, 1", "mov     rdx, [rbp+pad]", "mov     [rdx], al", "cmp     [rbp+width], 0", "jz      short loc_B800"], ["and~eax,0", "mov~rdx,[rbp+0]", "mov~<TAG>,al", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 3, 0, 0, 3, 0, 0, 10, 2, 0.0, ["mov     rax, [rbp+width]", "mov     rdx, [rbp+displayed_width]", "mov     [rax], rdx"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx"]], [0, 0, 55, 0, 1, 5, 0, 2, 5, 9, 0.002070393374741201, ["mov     rax, [rbp+name]", "mov     rdi, rax; s", "call    _strlen", "cmp     [rbp+len], rax", "jz      short loc_B429"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "cmp~[rbp+0],rax", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 10, 3, 0.0005175983436853002, ["mov     eax, 1", "jmp     short loc_B7DC"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 5, 0, 0, 1, 0, 0, 8, 3, 0.06573498964803312, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 52, 0, 1, 9, 0, 2, 5, 7, 0.021532091097308487, ["mov     rax, [rbp+len]", "lea     rdx, [rax+1]; n", "mov     rcx, [rbp+name]", "mov     rax, [rbp+buf]", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    _memcpy", "mov     [rbp+quoted], 0", "jmp     short loc_B4C9"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 54, 0, 1, 7, 0, 2, 4, 8, 0.0033126293995859213, ["mov     rax, [rbp+name]", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+len], rax", "mov     rax, [rbp+bufsize]", "cmp     rax, [rbp+len]", "ja      short loc_B47D"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "ja~FOO"]], [1, 0, 53, 1, 1, 5, 0, 1, 5, 8, 0.0, ["mov     rax, [rbp+len]", "add     rax, 1", "mov     rdi, rax; n", "call    xmalloc", "mov     [rbp+buf], rax"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax"]], [1, 0, 35, 0, 0, 2, 0, 1, 10, 8, 0.02857142857142857, ["cmp     eax, 25h ; '%'", "jge     short loc_B541"], ["cmp~eax,0", "jge~FOO"]], [1, 0, 16, 0, 1, 3, 0, 1, 7, 6, 0.02608695652173913, ["call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "jbe     short loc_B746"], ["call~FOO", "cmp~rax,0", "jbe~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 11, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 53, 0, 0, 2, 0, 1, 5, 8, 0.03985507246376811, ["mov     eax, 1", "jmp     short loc_B42E"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 53, 0, 0, 1, 0, 0, 6, 8, 0.005486542443064182, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 14, 1, 0, 8, 0, 1, 8, 6, 0.018219461697722567, ["mov     rax, [rbp+buf]", "mov     [rbp+p_1], rax", "mov     rdx, [rbp+buf]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     [rbp+plimit_1], rax", "mov     [rbp+displayed_width], 0", "jmp     short loc_B7A2"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [1, 1, 35, 1, 0, 3, 0, 1, 11, 9, 0.012215320910973085, ["sub     eax, 20h ; ' '", "cmp     eax, 3", "ja      short loc_B568"], ["sub~eax,<STR>", "cmp~eax,0", "ja~FOO"]], [0, 0, 35, 0, 0, 1, 0, 1, 12, 8, 0.0037267080745341614, ["jmp     short loc_B541"], ["jmp~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 11, 0, 0.0, ["add     rsp, 0C8h", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [0, 0, 35, 1, 0, 4, 0, 1, 18, 9, 0.019668737060041408, ["mov     eax, [rbp+w]", "cdqe", "add     [rbp+displayed_width], rax", "jmp     short loc_B666"], ["mov~eax,[rbp+0]", "cdqe~", "add~[rbp+0],rax", "jmp~FOO"]], [1, 0, 35, 0, 0, 2, 0, 1, 17, 10, 0.03126293995859213, ["cmp     [rbp+bytes], 0", "jnz     short loc_B616"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 35, 0, 0, 2, 0, 1, 10, 9, 0.1093167701863354, ["cmp     eax, 41h ; 'A'", "jl      short loc_B568"], ["cmp~eax,0", "jl~FOO"]], [1, 0, 35, 1, 0, 9, 0, 0, 18, 11, 0.0, ["mov     rdx, [rbp+p]", "lea     rax, [rdx+1]", "mov     [rbp+p], rax", "mov     rax, [rbp+q]", "lea     rcx, [rax+1]", "mov     [rbp+q], rcx", "movzx   edx, byte ptr [rdx]", "mov     [rax], dl", "sub     [rbp+bytes], 1"], ["mov~rdx,[rbp+0]", "lea~rax,[rdx+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "lea~rcx,[rax+0]", "mov~[rbp+0],rcx", "movzx~edx,<TAG>", "mov~<TAG>,dl", "sub~[rbp+0],0"]], [0, 0, 9, 0, 0, 3, 1, 1, 7, 4, 0.11366459627329192, ["movzx   eax, cs:align_variable_outer_quotes", "test    al, al", "jz      short loc_B7D7"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 10, 0, 1, 9, 0, 2, 8, 5, 0.002070393374741201, ["mov     rcx, [rbp+len]", "mov     rax, [rbp+buf]", "mov     edx, 0; flags", "mov     rsi, rcx; nbytes", "mov     rdi, rax; string", "call    mbsnwidth", "cdqe", "mov     [rbp+displayed_width], rax", "jmp     short loc_B7AC"], ["mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~edx,0", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "cdqe~", "mov~[rbp+0],rax", "jmp~FOO"]], [2, 0, 64, 0, 0, 4, 1, 1, 2, 9, 0.07950310559006211, ["mov     [rbp+needs_further_quoting], al", "and     [rbp+needs_further_quoting], 1", "cmp     [rbp+needs_general_quoting], 0", "jz      loc_B440"], ["mov~[rbp+0],al", "and~[rbp+0],0", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 35, 0, 0, 2, 0, 1, 11, 8, 0.012629399585921325, ["cmp     eax, 5Fh ; '_'", "jle     short loc_B541"], ["cmp~eax,0", "jle~FOO"]], [0, 0, 35, 0, 1, 5, 1, 2, 17, 8, 0.04989648033126294, ["lea     rax, [rbp+mbstate]", "mov     rdi, rax; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_B570"], ["lea~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 35, 2, 0, 7, 0, 0, 16, 9, 0.02546583850931677, ["mov     rax, [rbp+bytes]", "add     [rbp+p], rax", "mov     rax, [rbp+q]", "lea     rdx, [rax+1]", "mov     [rbp+q], rdx", "mov     byte ptr [rax], 3Fh ; '?'", "add     [rbp+displayed_width], 1"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax", "mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~<TAG>,0", "add~[rbp+0],0"]], [1, 0, 52, 0, 0, 3, 1, 1, 6, 7, 0.06459627329192547, ["mov     [rbp+quoted], al", "and     [rbp+quoted], 1", "jmp     loc_B4C9"], ["mov~[rbp+0],al", "and~[rbp+0],0", "jmp~FOO"]], [2, 0, 35, 1, 0, 3, 0, 1, 12, 8, 0.003105590062111801, ["sub     eax, 61h ; 'a'", "cmp     eax, 1Dh", "ja      short loc_B568"], ["sub~eax,0", "cmp~eax,0", "ja~FOO"]], [0, 0, 8, 0, 0, 3, 1, 1, 8, 4, 0.02567287784679089, ["movzx   eax, cs:cwd_some_quoted", "test    al, al", "jz      short loc_B7D7"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [2, 0, 70, 1, 1, 26, 2, 2, 0, 11, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 0C8h", "mov     [rbp+inbuf], rdi", "mov     [rbp+bufsize], rsi", "mov     [rbp+name], rdx", "mov     [rbp+options], rcx", "mov     [rbp+needs_general_quoting], r8d", "mov     [rbp+width], r9", "mov     rax, [rbp+arg_0]", "mov     [rbp+pad], rax", "mov     rax, fs:28h", "mov     [rbp+var_18], rax", "xor     eax, eax", "mov     rax, [rbp+inbuf]", "mov     rax, [rax]", "mov     [rbp+buf], rax", "mov     [rbp+len], 0", "mov     rax, [rbp+options]", "mov     rdi, rax; o", "call    get_quoting_style", "mov     [rbp+qs], eax", "movzx   eax, cs:qmark_funny_chars", "test    al, al", "jz      short loc_B35D"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8d", "mov~[rbp+0],r9", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 69, 0, 0, 2, 0, 1, 1, 11, 0.0006211180124223603, ["cmp     [rbp+qs], 1", "jz      short loc_B356"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 15, 1, 0, 7, 0, 1, 7, 7, 0.022774327122153208, ["mov     rax, [rbp+buf]", "mov     [rbp+p_0], rax", "mov     rdx, [rbp+buf]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     [rbp+plimit_0], rax", "jmp     short loc_B6F6"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 35, 0, 0, 2, 0, 1, 13, 9, 0.08426501035196687, ["cmp     [rbp+bytes], 0FFFFFFFFFFFFFFFEh", "jnz     short loc_B5EF"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 35, 1, 1, 15, 0, 2, 12, 9, 0.11118012422360249, ["mov     rdx, [rbp+plimit]", "mov     rax, [rbp+p]", "sub     rdx, rax", "mov     rax, rdx", "mov     rdi, rax", "lea     rdx, [rbp+mbstate]", "mov     rsi, [rbp+p]; s", "lea     rax, [rbp+wc]", "mov     rcx, rdx; ps", "mov     rdx, rdi; n", "mov     rdi, rax; pwc", "call    rpl_mbrtowc", "mov     [rbp+bytes], rax", "cmp     [rbp+bytes], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_B5C7"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "mov~rdi,rax", "lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "lea~rax,[rbp+0]", "mov~rcx,rdx", "mov~rdx,rdi", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 68, 0, 0, 2, 0, 1, 2, 11, 0.0006211180124223603, ["cmp     [rbp+qs], 2", "jz      short loc_B356"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 67, 0, 0, 2, 0, 1, 3, 11, 0.00041407867494824016, ["cmp     [rbp+qs], 0", "jnz     short loc_B35D"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 7, 0, 0, 4, 2, 1, 9, 4, 0.013043478260869565, ["movzx   eax, [rbp+quoted]", "xor     eax, 1", "test    al, al", "jz      short loc_B7D7"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 65, 0, 0, 2, 0, 1, 2, 10, 0.03364389233954451, ["mov     eax, 1", "jmp     short loc_B362"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 65, 0, 0, 1, 0, 0, 1, 10, 0.020186335403726708, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 35, 0, 0, 1, 0, 0, 11, 10, 0.09751552795031056, ["mov     qword ptr [rbp+mbstate.__count], 0"], ["mov~[word ptr [rbp+0],0"]], [2, 0, 35, 1, 0, 8, 0, 1, 14, 8, 0.004554865424430642, ["mov     rax, [rbp+plimit]", "mov     [rbp+p], rax", "mov     rax, [rbp+q]", "lea     rdx, [rax+1]", "mov     [rbp+q], rdx", "mov     byte ptr [rax], 3Fh ; '?'", "add     [rbp+displayed_width], 1", "jmp     loc_B67A"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~<TAG>,0", "add~[rbp+0],0", "jmp~FOO"]], [1, 0, 15, 0, 0, 2, 0, 0, 10, 8, 0.0, ["mov     rax, [rbp+p_0]", "mov     byte ptr [rax], 3Fh ; '?'"], ["mov~rax,[rbp+0]", "mov~<TAG>,0"]], [1, 0, 15, 2, 2, 15, 2, 3, 9, 8, 0.009730848861283644, ["call    ___ctype_b_loc", "mov     rbx, [rax]", "mov     rax, [rbp+p_0]", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "mov     edi, eax; ch_0", "call    to_uchar", "movzx   eax, al", "add     rax, rax", "add     rax, rbx", "movzx   eax, word ptr [rax]", "movzx   eax, ax", "and     eax, 4000h", "test    eax, eax", "jnz     short loc_B6F1"], ["call~FOO", "mov~rbx,<TAG>", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "movsx~eax,al", "mov~edi,eax", "call~FOO", "movzx~eax,al", "add~rax,rax", "add~rax,rbx", "movzx~eax,<TAG>", "movzx~eax,ax", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [3, 0, 35, 2, 0, 7, 0, 1, 13, 8, 0.015320910973084885, ["add     [rbp+p], 1", "mov     rax, [rbp+q]", "lea     rdx, [rax+1]", "mov     [rbp+q], rdx", "mov     byte ptr [rax], 3Fh ; '?'", "add     [rbp+displayed_width], 1", "jmp     loc_B67A"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~<TAG>,0", "add~[rbp+0],0", "jmp~FOO"]], [1, 0, 15, 1, 0, 1, 0, 0, 10, 7, 0.005175983436853002, ["add     [rbp+p_0], 1"], ["add~[rbp+0],0"]]], "func_feature": [20, 15, 68, 1, 71, 105, 2, 341, 0.03844, 4, 26], "succs": [[21, 23], [0], [0], [0], [46], [68, 4], [27, 36], [8, 6], [6], [1, 57], [17], [10, 31], [51, 15], [12, 14], [12], [43], [34, 46], [16, 9], [20, 22], [18, 46], [22], [46], [19], [33, 44], [41, 35], [24, 26], [24], [36, 37], [25], [25], [17], [32, 30], [30], [2, 39], [38, 47], [], [52], [52], [19], [40, 65], [2], [], [50], [42, 45], [49, 65], [43], [29, 54], [46], [11, 7], [2, 53], [3, 59], [50], [17], [65, 2], [29, 62], [56, 64], [60, 63], [5], [66, 13], [58, 69], [61, 63], [64, 63], [28, 29], [48], [48], [59], [3], [70], [67, 70], [3], [5]], "fname": "quote_name_buf", "n_num": 71}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[4, 0, 5, 3, 1, 29, 1, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 2050h", "mov     [rbp+name], rdi", "mov     [rbp+options], rsi", "mov     [rbp+needs_general_quoting], edx", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "lea     rax, [rbp+smallbuf]", "mov     [rbp+buf], rax", "lea     r8, [rbp+width]", "mov     edi, [rbp+needs_general_quoting]", "mov     rcx, [rbp+options]; options", "mov     rdx, [rbp+name]; name", "lea     rax, [rbp+buf]", "sub     rsp, 8", "lea     rsi, [rbp+pad]", "push    rsi; pad", "mov     r9, r8; width", "mov     r8d, edi; needs_general_quoting", "mov     esi, 2000h; bufsize", "mov     rdi, rax; inbuf", "call    quote_name_buf", "add     rsp, 10h", "mov     rdx, [rbp+buf]", "lea     rax, [rbp+smallbuf]", "cmp     rdx, rax", "jz      short loc_B8E3"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],edx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~r8,[rbp+0]", "mov~edi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "lea~rax,[rbp+0]", "sub~rsp,0", "lea~rsi,[rbp+0]", "push~rsi", "mov~r9,r8", "mov~r8d,edi", "mov~esi,0", "mov~rdi,rax", "call~FOO", "add~rsp,0", "mov~rdx,[rbp+0]", "lea~rax,[rbp+0]", "cmp~rdx,rax", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 0, 1, 0, 2, 0.05, ["mov     rax, [rbp+buf]", "cmp     [rbp+name], rax", "jz      short loc_B8E3"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 0, 2, 1, 0, 9, 1, 1, 0, 1, 0.30000000000000004, ["movzx   eax, [rbp+pad]", "movzx   edx, al", "mov     rax, [rbp+width]", "add     rax, rdx", "mov     [rbp+width], rax", "mov     rax, [rbp+width]", "mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_B919"], ["movzx~eax,[rbp+0]", "movzx~edx,al", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 1, 0, 2, 0.0, ["mov     rax, [rbp+buf]", "mov     rdi, rax; ptr", "call    free"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [3, 2, 6, 1, 6, 7, 1, 47, 0.05833, 1, 4], "succs": [[1, 2], [2, 3], [4, 5], [2], [], []], "fname": "quote_name_width", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 8, 0, 0, 9, 0, 1, 0, 0, 0.05654761904761904, ["mov     rdx, [rbp+str]", "lea     rax, [rdx+1]", "mov     [rbp+str], rax", "mov     rax, [rbp+p]", "lea     rcx, [rax+1]", "mov     [rbp+p], rcx", "movzx   edx, byte ptr [rdx]", "mov     [rax], dl", "jmp     short loc_BA00"], ["mov~rdx,[rbp+0]", "lea~rax,[rdx+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "lea~rcx,[rax+0]", "mov~[rbp+0],rcx", "movzx~edx,<TAG>", "mov~<TAG>,dl", "jmp~FOO"]], [0, 0, 8, 0, 1, 11, 1, 2, 3, 3, 0.23809523809523805, ["mov     rax, [rbp+str]", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "mov     edi, eax; ch_0", "call    to_uchar", "movzx   eax, al", "movsxd  rdx, eax", "lea     rax, RFC3986", "movzx   eax, byte ptr [rdx+rax]", "test    al, al", "jz      short loc_B9C6"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "movsx~eax,al", "mov~edi,eax", "call~FOO", "movzx~eax,al", "movsxd~rdx,eax", "lea~rax,<TAG>", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 2, 4, 0.42857142857142855, ["cmp     [rbp+path], 0", "jz      short loc_B981"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 8, 0, 0, 4, 0, 1, 3, 3, 0.11904761904761903, ["mov     rax, [rbp+str]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jnz     short loc_B981"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [2, 1, 8, 2, 2, 17, 0, 3, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+str], rdi", "mov     eax, esi", "mov     [rbp+path], al", "mov     rax, [rbp+str]", "mov     rdi, rax; s", "call    _strlen", "add     rax, 1", "mov     rsi, rax; s", "mov     edi, 3; n", "call    xnmalloc", "mov     [rbp+esc], rax", "mov     rax, [rbp+esc]", "mov     [rbp+p], rax", "jmp     loc_BA00"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~eax,esi", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "add~rax,0", "mov~rsi,rax", "mov~edi,0", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 8, 0, 0, 4, 1, 1, 1, 1, 0.5714285714285714, ["mov     rax, [rbp+str]", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     loc_B95A"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [2, 0, 8, 1, 0, 6, 0, 1, 4, 2, 0.06547619047619047, ["mov     rax, [rbp+p]", "lea     rdx, [rax+1]", "mov     [rbp+p], rdx", "mov     byte ptr [rax], 2Fh ; '/'", "add     [rbp+str], 1", "jmp     short loc_BA00"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~<TAG>,0", "add~[rbp+0],0", "jmp~FOO"]], [1, 0, 8, 1, 2, 15, 0, 2, 4, 2, 0.05654761904761904, ["mov     rax, [rbp+str]", "lea     rdx, [rax+1]", "mov     [rbp+str], rdx", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "mov     edi, eax; ch_0", "call    to_uchar", "movzx   edx, al", "mov     rax, [rbp+p]", "lea     rsi, a02x; \"%%%02x\"", "mov     rdi, rax; s", "mov     eax, 0", "call    _sprintf", "cdqe", "add     [rbp+p], rax"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "movzx~eax,<TAG>", "movsx~eax,al", "mov~edi,eax", "call~FOO", "movzx~edx,al", "mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "cdqe~", "add~[rbp+0],rax"]], [1, 0, 0, 0, 0, 5, 0, 0, 2, 0, 0.0, ["mov     rax, [rbp+p]", "mov     byte ptr [rax], 0", "mov     rax, [rbp+esc]", "leave", "retn"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~rax,[rbp+0]", "leave", "retn"]]], "func_feature": [5, 2, 12, 0, 9, 12, 2, 73, 0.17063, 2, 4], "succs": [[5], [0, 7], [1, 3], [1, 6], [5], [8, 2], [5], [5], []], "fname": "file_escape", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 2, 1, 0, 7, 1, 1, 0, 0, 0.06048387096774194, ["movzx   eax, [rbp+pad]", "movzx   edx, al", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_BE88"], ["movzx~eax,[rbp+0]", "movzx~edx,al", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [0, 0, 5, 0, 0, 4, 0, 1, 6, 2, 0.13608870967741934, ["mov     rdx, [rbp+buf]", "lea     rax, [rbp+smallbuf]", "cmp     rdx, rax", "jz      short loc_BE60"], ["mov~rdx,[rbp+0]", "lea~rax,[rbp+0]", "cmp~rdx,rax", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 0, 1, 7, 2, 0.028225806451612902, ["mov     rax, [rbp+buf]", "cmp     [rbp+name], rax", "jz      short loc_BE60"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 1, 8, 2, 0.0, ["mov     rax, [rbp+buf]", "mov     rdi, rax; ptr", "call    free"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 28, 0, 1, 3, 0, 1, 2, 7, 0.0, ["mov     rax, [rbp+color]", "mov     rdi, rax; ind", "call    print_color_indicator"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO"]], [1, 0, 29, 0, 0, 2, 0, 1, 1, 7, 0.0877016129032258, ["cmp     [rbp+color], 0", "jz      short loc_BB0B"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 8, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [3, 0, 7, 0, 1, 8, 0, 2, 6, 3, 0.025201612903225805, ["mov     rax, cs:stdout@@GLIBC_2_2_5", "mov     rcx, rax; stream", "mov     edx, 6; n", "mov     esi, 1; size", "lea     rdi, a8; \"\\x1B]8;;\\a\"", "call    _fwrite_unlocked", "cmp     [rbp+skip_quotes], 0", "jz      short loc_BE2E"], ["mov~rax,<TAG>", "mov~rcx,rax", "mov~edx,0", "mov~esi,0", "lea~rdi,<TAG>", "call~FOO", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 5, 3, 0.1935483870967742, ["cmp     [rbp+absolute_name], 0", "jz      short loc_BE2E"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 17, 0, 0, 3, 1, 1, 4, 5, 0.04536290322580645, ["movzx   eax, cs:dired", "test    al, al", "jz      loc_BCBC"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 3, 5, 0.2540322580645161, ["cmp     [rbp+stack], 0", "jz      loc_BCBC"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 10, 0, 1, 5, 0, 1, 7, 5, 0.0, ["mov     rdx, [rbp+__len_0]", "mov     rax, [rbp+__o_0]", "mov     rsi, rdx; length", "mov     rdi, rax; h", "call    _obstack_newchunk"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO"]], [1, 0, 11, 1, 0, 14, 0, 0, 6, 5, 0.04233870967741935, ["mov     rax, [rbp+stack]", "mov     [rbp+__o_0], rax", "mov     [rbp+__len_0], 8", "mov     rax, [rbp+__o_0]", "mov     [rbp+__o1_0], rax", "mov     rax, [rbp+__o1_0]", "mov     rax, [rax+20h]", "mov     rdx, rax", "mov     rax, [rbp+__o1_0]", "mov     rax, [rax+18h]", "sub     rdx, rax", "mov     rax, rdx", "cmp     rax, [rbp+__len_0]", "jnb     short loc_BD98"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "sub~rdx,rax", "mov~rax,rdx", "cmp~rax,[rbp+0]", "jnb~FOO"]], [2, 0, 27, 0, 0, 3, 0, 1, 2, 6, 0.13608870967741934, ["mov     [rbp+skip_quotes], 0", "cmp     [rbp+absolute_name], 0", "jz      loc_BBF6"], ["mov~[rbp+0],0", "cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 13, 3, 1, 19, 0, 2, 4, 4, 0.24899193548387097, ["mov     rax, cs:stdout@@GLIBC_2_2_5", "movzx   edx, [rbp+skip_quotes]", "add     edx, edx", "movsxd  rdx, edx", "mov     rcx, [rbp+len]", "sub     rcx, rdx", "mov     rdx, rcx; n", "mov     rsi, [rbp+buf]", "movzx   ecx, [rbp+skip_quotes]", "lea     rdi, [rsi+rcx]; ptr", "mov     rcx, rax; stream", "mov     esi, 1; size", "call    _fwrite_unlocked", "mov     rdx, cs:dired_pos", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     cs:dired_pos, rax", "cmp     [rbp+stack], 0", "jz      loc_BDD9"], ["mov~rax,<TAG>", "movzx~edx,[rbp+0]", "add~edx,edx", "movsxd~rdx,edx", "mov~rcx,[rbp+0]", "sub~rcx,rdx", "mov~rdx,rcx", "mov~rsi,[rbp+0]", "movzx~ecx,[rbp+0]", "lea~rdi,<TAG>", "mov~rcx,rax", "mov~esi,0", "call~FOO", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 14, 1, 1, 12, 0, 1, 6, 5, 0.028225806451612902, ["mov     rax, [rbp+__o]", "mov     rax, [rax+18h]", "mov     rdx, [rbp+__len]; n", "lea     rsi, dired_pos; src", "mov     rdi, rax; dest", "call    _memcpy", "mov     rax, [rbp+__o]", "mov     rdx, [rax+18h]", "mov     rax, [rbp+__len]", "add     rdx, rax", "mov     rax, [rbp+__o]", "mov     [rax+18h], rdx"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~[rax+0],rdx"]], [3, 0, 22, 0, 2, 14, 0, 3, 4, 8, 0.10685483870967742, ["mov     rax, cs:hostname", "mov     esi, 0; path", "mov     rdi, rax; str", "call    file_escape", "mov     [rbp+h], rax", "mov     rax, [rbp+absolute_name]", "mov     esi, 1; path", "mov     rdi, rax; str", "call    file_escape", "mov     [rbp+n], rax", "mov     rax, [rbp+n]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jnz     short loc_BBAC"], ["mov~rax,<TAG>", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [0, 0, 26, 0, 0, 3, 1, 1, 3, 9, 0.04233870967741935, ["movzx   eax, cs:align_variable_outer_quotes", "test    al, al", "jz      short loc_BB5F"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 25, 0, 0, 3, 1, 1, 4, 9, 0.014112903225806451, ["movzx   eax, cs:cwd_some_quoted", "test    al, al", "jz      short loc_BB5F"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 24, 0, 0, 4, 2, 1, 5, 9, 0.008064516129032258, ["movzx   eax, [rbp+pad]", "xor     eax, 1", "test    al, al", "jz      short loc_BB5F"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 23, 0, 1, 6, 0, 1, 6, 9, 0.0, ["mov     [rbp+skip_quotes], 1", "mov     rax, [rbp+buf]", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "mov     edi, eax; c", "call    _putchar_unlocked"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "movsx~eax,al", "mov~edi,eax", "call~FOO"]], [0, 0, 20, 0, 0, 2, 0, 1, 5, 7, 0.05342741935483871, ["lea     rax, suffixes", "jmp     short loc_BBB3"], ["lea~rax,<TAG>", "jmp~FOO"]], [0, 0, 20, 0, 0, 1, 0, 0, 5, 7, 0.05342741935483871, ["lea     rax, asc_1D92B; \"/\""], ["lea~rax,<TAG>"]], [1, 0, 16, 1, 0, 14, 0, 0, 5, 6, 0.03225806451612903, ["mov     rax, [rbp+stack]", "mov     [rbp+__o], rax", "mov     [rbp+__len], 8", "mov     rax, [rbp+__o]", "mov     [rbp+__o1], rax", "mov     rax, [rbp+__o1]", "mov     rax, [rax+20h]", "mov     rdx, rax", "mov     rax, [rbp+__o1]", "mov     rax, [rax+18h]", "sub     rdx, rax", "mov     rax, rdx", "cmp     rax, [rbp+__len]", "jnb     short loc_BC7B"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "sub~rdx,rax", "mov~rax,rdx", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 15, 0, 1, 5, 0, 1, 6, 6, 0.0, ["mov     rdx, [rbp+__len]", "mov     rax, [rbp+__o]", "mov     rsi, rdx; length", "mov     rdi, rax; h", "call    _obstack_newchunk"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO"]], [1, 0, 6, 2, 1, 8, 0, 1, 7, 3, 0.0, ["mov     rax, [rbp+buf]", "mov     rdx, [rbp+len]", "sub     rdx, 1", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "mov     edi, eax; c", "call    _putchar_unlocked"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "sub~rdx,0", "add~rax,rdx", "movzx~eax,<TAG>", "movsx~eax,al", "mov~edi,eax", "call~FOO"]], [5, 0, 32, 3, 1, 34, 2, 2, 0, 8, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20A0h", "mov     [rbp+name], rdi", "mov     [rbp+options], rsi", "mov     [rbp+needs_general_quoting], edx", "mov     [rbp+color], rcx", "mov     eax, r8d", "mov     [rbp+stack], r9", "mov     [rbp+allow_pad], al", "mov     rax, [rbp+arg_0]", "mov     [rbp+absolute_name], rax", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "lea     rax, [rbp+smallbuf]", "mov     [rbp+buf], rax", "mov     edi, [rbp+needs_general_quoting]", "mov     rcx, [rbp+options]; options", "mov     rdx, [rbp+name]; name", "lea     rax, [rbp+buf]", "sub     rsp, 8", "lea     rsi, [rbp+pad]", "push    rsi; pad", "mov     r9d, 0; width", "mov     r8d, edi; needs_general_quoting", "mov     esi, 2000h; bufsize", "mov     rdi, rax; inbuf", "call    quote_name_buf", "add     rsp, 10h", "mov     [rbp+len], rax", "movzx   eax, [rbp+pad]", "test    al, al", "jz      short loc_BAF2"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],edx", "mov~[rbp+0],rcx", "mov~eax,r8d", "mov~[rbp+0],r9", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~edi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "lea~rax,[rbp+0]", "sub~rsp,0", "lea~rsi,[rbp+0]", "push~rsi", "mov~r9d,0", "mov~r8d,edi", "mov~esi,0", "mov~rdi,rax", "call~FOO", "add~rsp,0", "mov~[rbp+0],rax", "movzx~eax,[rbp+0]", "test~al,al", "jz~FOO"]], [1, 0, 31, 0, 0, 2, 0, 1, 1, 8, 0.0010080645161290322, ["cmp     [rbp+allow_pad], 0", "jz      short loc_BAF2"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 9, 1, 1, 12, 0, 1, 7, 4, 0.01814516129032258, ["mov     rax, [rbp+__o_0]", "mov     rax, [rax+18h]", "mov     rdx, [rbp+__len_0]; n", "lea     rsi, dired_pos; src", "mov     rdi, rax; dest", "call    _memcpy", "mov     rax, [rbp+__o_0]", "mov     rdx, [rax+18h]", "mov     rax, [rbp+__len_0]", "add     rdx, rax", "mov     rax, [rbp+__o_0]", "mov     [rax+18h], rdx"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~[rax+0],rdx"]], [0, 0, 12, 0, 0, 3, 1, 1, 5, 4, 0.06048387096774194, ["movzx   eax, cs:dired", "test    al, al", "jz      loc_BDD9"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 1, 30, 1, 1, 5, 0, 1, 2, 8, 0.0, ["mov     edi, 20h ; ' '; c", "call    _putchar_unlocked", "mov     rax, cs:dired_pos", "add     rax, 1", "mov     cs:dired_pos, rax"], ["mov~edi,<STR>", "call~FOO", "mov~rax,<TAG>", "add~rax,0", "mov~<TAG>,rax"]], [1, 0, 19, 0, 3, 13, 0, 3, 6, 6, 0.13407258064516128, ["mov     rdx, [rbp+n]", "mov     rsi, [rbp+h]", "mov     rcx, rdx", "mov     rdx, rax", "lea     rdi, a8FileSSS; \"\\x1B]8;;file://%s%s%s\\a\"", "mov     eax, 0", "call    _printf", "mov     rax, [rbp+h]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+n]", "mov     rdi, rax; ptr", "call    free"], ["mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rcx,rdx", "mov~rdx,rax", "lea~rdi,<TAG>", "mov~eax,0", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO"]]], "func_feature": [18, 9, 36, 1, 33, 50, 2, 222, 0.05486, 11, 14], "succs": [[4, 7], [0, 2], [0, 3], [0], [], [14], [5, 14], [], [1, 26], [8, 1], [24, 15], [10, 15], [29], [12, 29], [18, 11], [9, 30], [15], [22, 23], [17, 19], [17, 20], [17, 21], [17], [32], [32], [16, 25], [16], [1], [28, 6], [6, 31], [9], [9, 13], [6], [11]], "fname": "quote_name", "n_num": 33}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 5, 0, 0, 2, 0, 1, 0, 0, 0.03571428571428572, ["mov     eax, 1", "jmp     short loc_BF12"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 5, 3, 0.06666666666666668, ["cmp     [rbp+color], 0", "jnz     short loc_BF06"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 7, 0, 1, 4, 1, 2, 6, 3, 0.004761904761904762, ["mov     edi, 4; type", "call    is_colored", "test    al, al", "jz      short loc_BF0D"], ["mov~edi,0", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 9, 1, 0.0, ["lea     rdi, stru_2261F0; ind", "call    put_indicator"], ["lea~rdi,<TAG>", "call~FOO"]], [3, 0, 2, 4, 0, 14, 0, 1, 8, 1, 0.06190476190476191, ["mov     rsi, cs:line_length", "mov     rax, [rbp+start_col]", "mov     edx, 0", "div     rsi", "mov     rcx, rax", "mov     rdx, [rbp+start_col]", "mov     rax, [rbp+len]", "add     rax, rdx", "sub     rax, 1", "mov     rsi, cs:line_length", "mov     edx, 0", "div     rsi", "cmp     rcx, rax", "jz      short loc_BFCA"], ["mov~rsi,<TAG>", "mov~rax,[rbp+0]", "mov~edx,0", "div~,rsi", "mov~rcx,rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "sub~rax,0", "mov~rsi,<TAG>", "mov~edx,0", "div~,rsi", "cmp~rcx,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 7, 0, 0.0, ["mov     rax, [rbp+len]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]], [6, 0, 4, 2, 2, 26, 4, 3, 6, 1, 0.20952380952380956, ["mov     [rbp+used_color_this_time], al", "and     [rbp+used_color_this_time], 1", "mov     rax, [rbp+f]", "mov     rdi, [rax+10h]", "movzx   eax, [rbp+symlink_target]", "test    eax, eax", "setnz   al", "xor     eax, 1", "movzx   eax, al", "and     eax, 1", "movzx   r8d, al; allow_pad", "mov     rax, [rbp+f]", "mov     edx, [rax+0C4h]; needs_general_quoting", "mov     rsi, cs:filename_quoting_options; options", "mov     r9, [rbp+stack]; stack", "mov     rcx, [rbp+color]; color", "mov     rax, [rbp+name]", "sub     rsp, 8", "push    rdi; absolute_name", "mov     rdi, rax; name", "call    quote_name", "add     rsp, 10h", "mov     [rbp+len], rax", "call    process_signals", "cmp     [rbp+used_color_this_time], 0", "jz      short loc_BFCA"], ["mov~[rbp+0],al", "and~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rdi,[rax+0]", "movzx~eax,[rbp+0]", "test~eax,eax", "setnz~al", "xor~eax,0", "movzx~eax,al", "and~eax,0", "movzx~r8d,al", "mov~rax,[rbp+0]", "mov~edx,[rax+0]", "mov~rsi,<TAG>", "mov~r9,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "sub~rsp,0", "push~rdi", "mov~rdi,rax", "call~FOO", "add~rsp,0", "mov~[rbp+0],rax", "call~FOO", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 3, 0, 1, 4, 1, 2, 7, 1, 0.1142857142857143, ["call    prep_non_filename_text", "mov     rax, cs:line_length", "test    rax, rax", "jz      short loc_BFCA"], ["call~FOO", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 12, 0, 0, 4, 1, 1, 2, 5, 0.17142857142857143, ["mov     [rbp+name], rax", "movzx   eax, cs:print_with_color", "test    al, al", "jz      short loc_BEDD"], ["mov~[rbp+0],rax", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 13, 0, 0, 3, 0, 1, 1, 6, 0.030952380952380953, ["mov     rax, [rbp+f]", "mov     rax, [rax+8]", "jmp     short loc_BEBA"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "jmp~FOO"]], [0, 0, 13, 0, 0, 2, 0, 0, 1, 6, 0.030952380952380953, ["mov     rax, [rbp+f]", "mov     rax, [rax]"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>"]], [2, 0, 15, 1, 0, 10, 0, 1, 0, 7, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+f], rdi", "mov     eax, esi", "mov     [rbp+stack], rdx", "mov     [rbp+start_col], rcx", "mov     [rbp+symlink_target], al", "cmp     [rbp+symlink_target], 0", "jz      short loc_BEB3"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~eax,esi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 5, 0, 0, 1, 0, 0, 5, 2, 0.17857142857142858, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 9, 0, 0, 4, 1, 1, 4, 3, 0.2571428571428572, ["mov     [rbp+color], rax", "movzx   eax, cs:print_with_color", "test    al, al", "jz      short loc_BF0D"], ["mov~[rbp+0],rax", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 10, 0, 1, 6, 0, 2, 3, 4, 0.09523809523809525, ["movzx   edx, [rbp+symlink_target]", "mov     rax, [rbp+f]", "mov     esi, edx; symlink_target", "mov     rdi, rax; f", "call    get_color_indicator", "jmp     short loc_BEE2"], ["movzx~edx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 10, 0, 0, 1, 0, 0, 3, 4, 0.09523809523809525, ["mov     eax, 0"], ["mov~eax,0"]]], "func_feature": [6, 8, 17, 0, 16, 23, 3, 88, 0.08452, 4, 7], "succs": [[6], [0, 2], [0, 12], [5], [3, 5], [], [5, 7], [4, 5], [14, 15], [8], [8], [9, 10], [6], [1, 12], [13], [13]], "fname": "print_name_with_quoting", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["nop", "pop     rbp", "retn"], ["nop", "pop~rbp", "retn"]], [0, 0, 1, 0, 1, 3, 0, 2, 1, 0, 0.08333333333333333, ["lea     rdi, stru_2260A0; ind", "call    put_indicator", "jmp     short loc_C012"], ["lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 3, 6, 0, 3, 1, 0, 0.08333333333333333, ["lea     rdi, color_indicator; ind", "call    put_indicator", "lea     rdi, stru_2260B0; ind", "call    put_indicator", "lea     rdi, ind; ind", "call    put_indicator"], ["lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO"]], [0, 0, 3, 0, 0, 5, 1, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     rax, cs:stru_2260A0.string", "test    rax, rax", "jz      short loc_BFEE"], ["push~rbp", "mov~rbp,rsp", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]]], "func_feature": [4, 1, 6, 0, 4, 4, 2, 17, 0.04167, 5, 0], "succs": [[], [0], [0], [1, 2]], "fname": "prep_non_filename_text", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 11, 0, 0, 2, 0, 1, 0, 0, 0.05411255411255411, ["mov     eax, cs:block_size_width", "jmp     short loc_C10C"], ["mov~eax,<TAG>", "jmp~FOO"]], [1, 0, 13, 0, 0, 3, 0, 1, 4, 6, 0.12337662337662338, ["mov     eax, cs:format_0", "cmp     eax, 4", "jz      short loc_C107"], ["mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 11, 0, 0, 1, 0, 0, 5, 5, 0.05411255411255411, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 18, 0, 1, 4, 0, 1, 3, 5, 0.11688311688311688, ["mov     esi, eax", "lea     rdi, aS; \"%*s \"", "mov     eax, 0", "call    _printf"], ["mov~esi,eax", "lea~rdi,<TAG>", "mov~eax,0", "call~FOO"]], [0, 0, 19, 0, 0, 2, 0, 1, 2, 6, 0.021645021645021644, ["mov     eax, cs:inode_number_width", "jmp     short loc_C083"], ["mov~eax,<TAG>", "jmp~FOO"]], [1, 0, 19, 0, 0, 1, 0, 0, 2, 6, 0.021645021645021644, ["mov     eax, 0"], ["mov~eax,0"]], [2, 0, 4, 0, 1, 11, 1, 2, 3, 2, 0.15584415584415584, ["mov     rdx, [rbp+start_col]", "mov     rax, [rbp+f]", "mov     rcx, rdx; start_col", "mov     edx, 0; stack", "mov     esi, 0; symlink_target", "mov     rdi, rax; f", "call    print_name_with_quoting", "mov     [rbp+width], rax", "mov     eax, cs:indicator_style_0", "test    eax, eax", "jz      short loc_C1D2"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rcx,rdx", "mov~edx,0", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 2, 3, 0.2532467532467532, ["movzx   eax, cs:print_scontext", "test    al, al", "jz      short loc_C163"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 5, 0, 1, 4, 0, 1, 5, 3, 0.032467532467532464, ["mov     esi, eax", "lea     rdi, aS; \"%*s \"", "mov     eax, 0", "call    _printf"], ["mov~esi,eax", "lea~rdi,<TAG>", "mov~eax,0", "call~FOO"]], [1, 0, 10, 0, 1, 4, 0, 1, 6, 4, 0.12987012987012986, ["mov     esi, eax", "lea     rdi, aS; \"%*s \"", "mov     eax, 0", "call    _printf"], ["mov~esi,eax", "lea~rdi,<TAG>", "mov~eax,0", "call~FOO"]], [0, 0, 17, 0, 0, 3, 1, 1, 1, 4, 0.18398268398268397, ["movzx   eax, cs:print_block_size", "test    al, al", "jz      short loc_C11F"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 1, 22, 1, 1, 12, 2, 2, 0, 5, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 2C0h", "mov     [rbp+f], rdi", "mov     [rbp+start_col], rsi", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "call    set_normal_color", "movzx   eax, cs:print_inode", "test    al, al", "jz      short loc_C096"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "call~FOO", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 16, 0, 0, 5, 2, 1, 2, 8, 0.07792207792207792, ["mov     rax, [rbp+f]", "movzx   eax, byte ptr [rax+0B8h]", "xor     eax, 1", "test    al, al", "jz      short loc_C0BF"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 4, 4, 0.021645021645021644, ["mov     eax, cs:scontext_width", "jmp     short loc_C150"], ["mov~eax,<TAG>", "jmp~FOO"]], [1, 0, 6, 0, 0, 1, 0, 0, 4, 4, 0.021645021645021644, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 14, 0, 0, 2, 0, 1, 3, 7, 0.04112554112554113, ["lea     rdx, asc_1D8DA; \"?\"", "jmp     short loc_C0F4"], ["lea~rdx,<TAG>", "jmp~FOO"]], [1, 0, 8, 0, 0, 5, 0, 1, 3, 5, 0.09090909090909091, ["mov     rax, [rbp+f]", "mov     rdx, [rax+0B0h]", "mov     eax, cs:format_0", "cmp     eax, 4", "jz      short loc_C14B"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 3, 1, 1, 12, 0, 1, 4, 2, 0.0, ["mov     rax, [rbp+f]", "mov     edx, [rax+0A8h]; type", "mov     rax, [rbp+f]", "mov     ecx, [rax+30h]", "mov     rax, [rbp+f]", "movzx   eax, byte ptr [rax+0B8h]", "movzx   eax, al", "mov     esi, ecx; mode", "mov     edi, eax; stat_ok", "call    print_type_indicator", "movzx   eax, al", "add     [rbp+width], rax"], ["mov~rax,[rbp+0]", "mov~edx,[rax+0]", "mov~rax,[rbp+0]", "mov~ecx,[rax+0]", "mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "movzx~eax,al", "mov~esi,ecx", "mov~edi,eax", "call~FOO", "movzx~eax,al", "add~[rbp+0],rax"]], [0, 0, 2, 0, 0, 4, 1, 1, 4, 1, 0.08658008658008658, ["mov     rax, [rbp+width]", "mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_C1ED"], ["mov~rax,[rbp+0]", "mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 5, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 1, 14, 0, 1, 11, 0, 1, 3, 7, 0.04112554112554113, ["mov     rcx, cs:output_block_size", "mov     edx, cs:human_output_opts; opts", "mov     rax, [rbp+f]", "mov     rax, [rax+58h]", "mov     rdi, rax; n", "lea     rax, [rbp+buf]", "mov     r8, rcx; to_block_size", "mov     ecx, 200h; from_block_size", "mov     rsi, rax; buf", "call    human_readable", "mov     rdx, rax"], ["mov~rcx,<TAG>", "mov~edx,<TAG>", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "lea~rax,[rbp+0]", "mov~r8,rcx", "mov~ecx,<STR>", "mov~rsi,rax", "call~FOO", "mov~rdx,rax"]], [1, 1, 21, 0, 1, 9, 0, 2, 1, 7, 0.006493506493506494, ["mov     rdx, [rbp+f]; f", "lea     rax, [rbp+buf]", "mov     esi, 28Ch; buflen", "mov     rdi, rax; buf", "call    format_inode", "mov     rdx, rax", "mov     eax, cs:format_0", "cmp     eax, 4", "jz      short loc_C07E"], ["mov~rdx,[rbp+0]", "lea~rax,[rbp+0]", "mov~esi,<STR>", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]]], "func_feature": [9, 8, 22, 1, 23, 30, 5, 104, 0.06672, 13, 2], "succs": [[9], [0, 2], [9], [10], [3], [3], [17, 18], [16, 6], [6], [7], [12, 7], [10, 22], [21, 15], [8], [8], [1], [13, 14], [18], [19, 20], [], [], [1], [4, 5]], "fname": "print_file_name_and_frills", "n_num": 23}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 13, 0, 0, 2, 1, 1, 0, 0, 0.15476190476190477, ["test    al, al", "jz      short loc_C2C8"], ["test~al,al", "jz~FOO"]], [2, 0, 14, 0, 0, 5, 1, 1, 8, 3, 0.07261904761904762, ["mov     eax, [rbp+mode]", "and     eax, 0F000h", "cmp     eax, 0A000h", "setz    al", "jmp     short loc_C2BE"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "setz~al", "jmp~FOO"]], [1, 0, 14, 0, 0, 2, 0, 0, 8, 3, 0.07261904761904762, ["cmp     [rbp+type], 6", "setz    al"], ["cmp~[rbp+0],0", "setz~al"]], [1, 0, 36, 0, 0, 8, 0, 1, 0, 5, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     eax, edi", "mov     [rbp+mode], esi", "mov     [rbp+type], edx", "mov     [rbp+stat_ok], al", "cmp     [rbp+stat_ok], 0", "jz      short loc_C216"], ["push~rbp", "mov~rbp,rsp", "mov~eax,edi", "mov~[rbp+0],esi", "mov~[rbp+0],edx", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 20, 0, 0, 2, 1, 1, 5, 2, 0.17142857142857143, ["test    al, al", "jz      short loc_C28E"], ["test~al,al", "jz~FOO"]], [2, 0, 21, 0, 0, 5, 1, 1, 4, 3, 0.08015873015873017, ["mov     eax, [rbp+mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "setz    al", "jmp     short loc_C281"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "setz~al", "jmp~FOO"]], [1, 0, 21, 0, 0, 1, 1, 0, 6, 3, 0.06666666666666667, ["and     eax, 1"], ["and~eax,0"]], [2, 0, 4, 0, 0, 5, 1, 1, 14, 3, 0.026587301587301587, ["mov     eax, [rbp+mode]", "and     eax, 0F000h", "cmp     eax, 0C000h", "setz    al", "jmp     short loc_C310"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "setz~al", "jmp~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 13, 4, 0.08333333333333333, ["cmp     [rbp+stat_ok], 0", "jz      short loc_C309"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 6, 1, 0.006349206349206349, ["mov     [rbp+c], 2Fh ; '/'", "jmp     loc_C31E"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 4, 0, 0, 2, 0, 0, 14, 3, 0.026587301587301587, ["cmp     [rbp+type], 7", "setz    al"], ["cmp~[rbp+0],0", "setz~al"]], [0, 0, 3, 0, 0, 2, 1, 1, 15, 2, 0.04047619047619048, ["test    al, al", "jz      short loc_C31A"], ["test~al,al", "jz~FOO"]], [1, 1, 34, 0, 0, 5, 1, 1, 1, 4, 0.013492063492063493, ["mov     eax, [rbp+mode]", "and     eax, 0F000h", "cmp     eax, 8000h", "setz    al", "jmp     short loc_C21D"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "setz~al", "jmp~FOO"]], [1, 0, 18, 0, 0, 3, 0, 1, 6, 2, 0.1619047619047619, ["mov     eax, cs:indicator_style_0", "cmp     eax, 1", "jnz     short loc_C29F"], ["mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 16, 1, 0.0015873015873015873, ["mov     [rbp+c], 3Dh ; '='", "jmp     short loc_C31E"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 34, 0, 0, 2, 0, 0, 1, 4, 0.013492063492063493, ["cmp     [rbp+type], 5", "setz    al"], ["cmp~[rbp+0],0", "setz~al"]], [1, 0, 1, 0, 0, 2, 0, 1, 7, 1, 0.0007936507936507937, ["mov     [rbp+c], 0", "jmp     short loc_C31E"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 33, 0, 0, 2, 1, 1, 2, 3, 0.07857142857142857, ["test    al, al", "jz      short loc_C24E"], ["test~al,al", "jz~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 7, 4, 0.15476190476190477, ["cmp     [rbp+stat_ok], 0", "jz      short loc_C2B7"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 3, 2, 0.015873015873015872, ["cmp     [rbp+stat_ok], 0", "jz      short loc_C245"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 16, 1, 0.0015873015873015873, ["mov     [rbp+c], 0"], ["mov~[rbp+0],0"]], [1, 0, 4, 0, 0, 3, 0, 1, 4, 2, 0.007936507936507936, ["mov     eax, cs:indicator_style_0", "cmp     eax, 3", "jnz     short loc_C245"], ["mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [1, 0, 3, 0, 0, 4, 2, 1, 5, 2, 0.004761904761904762, ["mov     eax, [rbp+mode]", "and     eax, 49h", "test    eax, eax", "jz      short loc_C245"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 6, 1, 0.0003968253968253968, ["mov     [rbp+c], 2Ah ; '*'", "jmp     loc_C31E"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 10, 1, 0.0031746031746031746, ["mov     [rbp+c], 40h ; '@'", "jmp     short loc_C31E"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.005158730158730159, ["mov     [rbp+c], 0", "jmp     loc_C31E"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 10, 4, 0.1349206349206349, ["cmp     [rbp+stat_ok], 0", "jz      short loc_C2E0"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 27, 0, 0, 2, 0, 1, 3, 4, 0.08253968253968254, ["cmp     [rbp+stat_ok], 0", "jz      short loc_C266"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 5, 0, 0.0, ["movzx   eax, [rbp+c]", "pop     rbp", "retn"], ["movzx~eax,[rbp+0]", "pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 13, 1, 0.0031746031746031746, ["mov     [rbp+c], 7Ch ; '|'", "jmp     short loc_C31E"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 9, 0, 0, 2, 0, 0, 11, 3, 0.057539682539682536, ["cmp     [rbp+type], 1", "setz    al"], ["cmp~[rbp+0],0", "setz~al"]], [1, 1, 9, 0, 0, 5, 1, 1, 11, 3, 0.057539682539682536, ["mov     eax, [rbp+mode]", "and     eax, 0F000h", "cmp     eax, 1000h", "setz    al", "jmp     short loc_C2E7"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "setz~al", "jmp~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 12, 2, 0.11349206349206349, ["test    al, al", "jz      short loc_C2F1"], ["test~al,al", "jz~FOO"]], [1, 0, 25, 0, 0, 2, 0, 1, 4, 5, 0.015873015873015872, ["cmp     [rbp+type], 3", "jz      short loc_C272"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 24, 0, 0, 2, 0, 1, 5, 5, 0.004761904761904762, ["cmp     [rbp+type], 9", "jnz     short loc_C279"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 5, 4, 0.03015873015873016, ["mov     eax, 1", "jmp     short loc_C27E"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 22, 0, 0, 1, 0, 0, 6, 4, 0.00873015873015873, ["mov     eax, 0"], ["mov~eax,0"]]], "func_feature": [0, 13, 29, 0, 37, 52, 2, 97, 0.04794, 1, 0], "succs": [[24, 26], [0], [0], [12, 15], [9, 13], [4], [4], [11], [10, 7], [28], [11], [20, 14], [17], [16, 18], [28], [17], [28], [27, 19], [1, 2], [25, 21], [28], [25, 22], [25, 23], [28], [28], [28], [30, 31], [33, 5], [], [28], [32], [32], [8, 29], [34, 35], [35, 36], [6], [6]], "fname": "get_type_indicator", "n_num": 37}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["cmp     [rbp+c], 0", "setnz   al", "leave", "retn"], ["cmp~[rbp+0],0", "setnz~al", "leave", "retn"]], [1, 1, 2, 1, 1, 16, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     eax, edi", "mov     [rbp+mode], esi", "mov     [rbp+type], edx", "mov     [rbp+stat_ok], al", "movzx   eax, [rbp+stat_ok]", "mov     edx, [rbp+type]; type", "mov     ecx, [rbp+mode]", "mov     esi, ecx; mode", "mov     edi, eax; stat_ok", "call    get_type_indicator", "mov     [rbp+c], al", "cmp     [rbp+c], 0", "jz      short loc_C370"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~eax,edi", "mov~[rbp+0],esi", "mov~[rbp+0],edx", "mov~[rbp+0],al", "movzx~eax,[rbp+0]", "mov~edx,[rbp+0]", "mov~ecx,[rbp+0]", "mov~esi,ecx", "mov~edi,eax", "call~FOO", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 1, 1, 1, 6, 0, 1, 1, 0, 0.0, ["movsx   eax, [rbp+c]", "mov     edi, eax; c", "call    _putchar_unlocked", "mov     rax, cs:dired_pos", "add     rax, 1", "mov     cs:dired_pos, rax"], ["movsx~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "mov~rax,<TAG>", "add~rax,0", "mov~<TAG>,rax"]]], "func_feature": [2, 0, 3, 0, 3, 3, 3, 26, 0.0, 1, 2], "succs": [[], [0, 2], [0]], "fname": "print_type_indicator", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 3, 0, 1, 4, 1, 2, 0, 0, 0.16666666666666666, ["mov     edi, 4; type", "call    is_colored", "test    al, al", "jz      short loc_C39F"], ["mov~edi,0", "call~FOO", "test~al,al", "jz~FOO"]], [2, 0, 4, 1, 0, 6, 0, 1, 0, 1, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+ind], rdi", "cmp     [rbp+ind], 0", "jz      short loc_C3C3"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 0, 0, 0, 4, 0, 0, 1, 0, 0.0, ["cmp     [rbp+ind], 0", "setnz   al", "leave", "retn"], ["cmp~[rbp+0],0", "setnz~al", "leave", "retn"]], [0, 0, 1, 0, 3, 7, 0, 3, 2, 1, 0.16666666666666666, ["lea     rdi, color_indicator; ind", "call    put_indicator", "mov     rax, [rbp+ind]", "mov     rdi, rax; ind", "call    put_indicator", "lea     rdi, ind; ind", "call    put_indicator"], ["lea~rdi,<TAG>", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "lea~rdi,<TAG>", "call~FOO"]], [0, 0, 2, 0, 1, 1, 0, 1, 2, 2, 0.0, ["call    restore_default_color"], ["call~FOO"]]], "func_feature": [5, 1, 7, 0, 5, 6, 1, 22, 0.06667, 2, 1], "succs": [[3, 4], [0, 2], [], [2], [3]], "fname": "print_color_indicator", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 22, 0, 0, 4, 0, 0, 0, 0, 0.01643192488262911, ["mov     rax, [rbp+f]", "mov     rax, [rax+28h]", "cmp     rax, 1", "jbe     loc_C6BC"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~rax,0", "jbe~FOO"]], [1, 0, 25, 0, 0, 4, 2, 1, 10, 8, 0.021517996870109548, ["mov     eax, [rbp+mode]", "and     eax, 49h", "test    eax, eax", "jz      short loc_C574"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 24, 0, 1, 4, 1, 2, 11, 8, 0.004107981220657277, ["mov     edi, 0Eh; type", "call    is_colored", "test    al, al", "jz      short loc_C574"], ["mov~edi,0", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 11, 7, 0.003912363067292645, ["mov     [rbp+type], 9", "jmp     short loc_C6BC"], ["mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 26, 0, 0, 4, 1, 1, 10, 8, 0.01995305164319249, ["mov     eax, [rbp+mode]", "and     eax, 0F000h", "cmp     eax, 0C000h", "jnz     short loc_C685"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 6, 7, 0.02543035993740219, ["mov     [rbp+type], 0Ch", "jmp     loc_C6BC"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 61, 0, 1, 4, 1, 2, 5, 8, 0.023669796557120502, ["mov     edi, 0Ch; type", "call    is_colored", "test    al, al", "jz      short loc_C489"], ["mov~edi,0", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 18, 1, 1, 15, 1, 2, 11, 7, 0.013693270735524257, ["mov     rax, [rbp+ext]", "mov     rdx, [rax]; n", "mov     rax, [rbp+ext]", "mov     rax, [rax+8]", "mov     rcx, [rbp+ext]", "mov     rcx, [rcx]", "mov     rsi, rcx", "neg     rsi", "mov     rcx, [rbp+name]", "add     rcx, rsi", "mov     rsi, rax; s2", "mov     rdi, rcx; s1", "call    c_strncasecmp", "test    eax, eax", "jz      short loc_C743"], ["mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rcx,[rbp+0]", "mov~rcx,<TAG>", "mov~rsi,rcx", "neg~rsi", "mov~rcx,[rbp+0]", "add~rcx,rsi", "mov~rsi,rax", "mov~rdi,rcx", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 18, 0, 0, 4, 0, 0, 10, 8, 0.03325508607198748, ["mov     rax, [rbp+ext]", "mov     rax, [rax]", "cmp     [rbp+len], rax", "jb      short loc_C72E"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "cmp~[rbp+0],rax", "jb~FOO"]], [0, 0, 66, 0, 0, 10, 1, 1, 1, 12, 0.008802816901408451, ["mov     rax, [rbp+f]", "mov     rax, [rax+8]", "mov     [rbp+name], rax", "mov     rax, [rbp+f]", "mov     eax, [rax+0ACh]", "mov     [rbp+mode], eax", "mov     rax, [rbp+f]", "movzx   eax, byte ptr [rax+0B9h]", "test    al, al", "jz      short loc_C413"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [2, 0, 72, 1, 0, 8, 0, 1, 0, 13, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+f], rdi", "mov     eax, esi", "mov     [rbp+symlink_target], al", "cmp     [rbp+symlink_target], 0", "jz      short loc_C41D"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~eax,esi", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 31, 0, 0, 4, 2, 1, 8, 9, 0.03442879499217527, ["mov     eax, [rbp+mode]", "and     eax, 400h", "test    eax, eax", "jz      short loc_C527"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [2, 0, 34, 0, 0, 5, 2, 1, 7, 9, 0.04029733959311424, ["mov     [rbp+type], 5", "mov     eax, [rbp+mode]", "and     eax, 800h", "test    eax, eax", "jz      short loc_C501"], ["mov~[rbp+0],0", "mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 33, 0, 1, 4, 1, 2, 8, 8, 0.008802816901408451, ["mov     edi, 10h; type", "call    is_colored", "test    al, al", "jz      short loc_C501"], ["mov~edi,0", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 11, 7, 0.0019561815336463224, ["mov     [rbp+type], 13h", "jmp     loc_C6BC"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 24, 0, 1, 4, 1, 2, 10, 8, 0.0037167449139280124, ["mov     edi, 13h; type", "call    is_colored", "test    al, al", "jz      short loc_C612"], ["mov~edi,0", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 18, 1, 1, 9, 0, 2, 8, 8, 0.06338028169014084, ["mov     rax, [rbp+name]", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+len], rax", "mov     rax, [rbp+len]", "add     [rbp+name], rax", "mov     rax, cs:color_ext_list", "mov     [rbp+ext], rax", "jmp     short loc_C73A"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "add~[rbp+0],rax", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [2, 0, 19, 0, 0, 3, 0, 1, 7, 6, 0.19698748043818468, ["mov     [rbp+ext], 0", "cmp     [rbp+type], 5", "jnz     short loc_C744"], ["mov~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 2, 11, 0.010465571205007825, ["mov     eax, 0", "jmp     short loc_C418"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 21, 0, 1, 4, 1, 2, 12, 7, 0.004499217527386541, ["mov     edi, 16h; type", "call    is_colored", "test    al, al", "jz      loc_C6BC"], ["mov~edi,0", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 64, 0, 0, 1, 0, 0, 2, 11, 0.010465571205007825, ["mov     eax, 0FFFFFFFFh"], ["mov~eax,0"]], [0, 1, 21, 0, 1, 4, 1, 2, 11, 7, 0.004107981220657277, ["mov     edi, 12h; type", "call    is_colored", "test    al, al", "jz      loc_C6BC"], ["mov~edi,<STR>", "call~FOO", "test~al,al", "jz~FOO"]], [0, 1, 22, 0, 0, 4, 2, 1, 10, 7, 0.019561815336463225, ["mov     eax, [rbp+mode]", "and     eax, 200h", "test    eax, eax", "jz      loc_C6BC"], ["mov~eax,[rbp+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [1, 0, 59, 0, 0, 5, 2, 1, 5, 8, 0.11306729264475744, ["mov     rax, [rbp+f]", "movzx   eax, byte ptr [rax+0B8h]", "xor     eax, 1", "test    al, al", "jz      short loc_C4C1"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 4, 9, 0.12128325508607199, ["cmp     [rbp+linkok], 0FFFFFFFFh", "jnz     short loc_C489"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 30, 0, 1, 4, 1, 2, 9, 8, 0.007237871674491393, ["mov     edi, 11h; type", "call    is_colored", "test    al, al", "jz      short loc_C527"], ["mov~edi,0", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 63, 0, 0, 2, 0, 1, 3, 10, 0.04518779342723005, ["mov     [rbp+linkok], eax", "jmp     short loc_C469"], ["mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 25, 0, 0, 4, 2, 1, 9, 8, 0.023474178403755867, ["mov     eax, [rbp+mode]", "and     eax, 2", "test    eax, eax", "jz      short loc_C612"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 13, 7, 0.0, ["mov     [rbp+type], 16h", "jmp     loc_C6BC"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 9, 7, 0.05985915492957747, ["cmp     [rbp+ext], 0", "jnz     short loc_C6EF"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 18, 0, 0, 3, 0, 0, 11, 8, 0.0009780907668231612, ["mov     rax, [rbp+ext]", "mov     rax, [rax+20h]", "mov     [rbp+ext], rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax"]], [1, 0, 20, 0, 0, 2, 0, 1, 10, 7, 0.00782472613458529, ["mov     [rbp+type], 11h", "jmp     loc_C6BC"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 12, 7, 0.003912363067292645, ["mov     [rbp+type], 0Ah", "jmp     short loc_C6BC"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 1, 24, 0, 0, 4, 1, 1, 11, 8, 0.014084507042253521, ["mov     eax, [rbp+mode]", "and     eax, 0F000h", "cmp     eax, 6000h", "jnz     short loc_C69D"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [0, 0, 3, 0, 0, 5, 1, 1, 11, 2, 0.040492957746478875, ["mov     [rbp+s], rax", "mov     rax, [rbp+s]", "mov     rax, [rax+8]", "test    rax, rax", "jz      short loc_C7AC"], ["mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 4, 1, 0, 3, 0, 1, 10, 3, 0.02621283255086072, ["mov     rax, [rbp+ext]", "add     rax, 10h", "jmp     short loc_C795"], ["mov~rax,[rbp+0]", "add~rax,0", "jmp~FOO"]], [1, 0, 4, 2, 0, 5, 0, 0, 10, 3, 0.02621283255086072, ["mov     eax, [rbp+type]", "shl     rax, 4", "mov     rdx, rax", "lea     rax, color_indicator", "add     rax, rdx"], ["mov~eax,[rbp+0]", "shl~rax,0", "mov~rdx,rax", "lea~rax,<TAG>", "add~rax,rdx"]], [2, 0, 41, 0, 0, 4, 1, 1, 7, 9, 0.0594679186228482, ["mov     eax, [rbp+mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     loc_C63D"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 1, 57, 0, 0, 4, 1, 1, 6, 10, 0.0940923317683881, ["mov     eax, [rbp+mode]", "and     eax, 0F000h", "cmp     eax, 8000h", "jnz     loc_C5A4"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [2, 0, 22, 0, 0, 4, 1, 1, 12, 8, 0.007433489827856025, ["mov     eax, [rbp+mode]", "and     eax, 0F000h", "cmp     eax, 2000h", "jnz     short loc_C6B5"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [0, 0, 20, 0, 0, 8, 0, 1, 6, 7, 0.02543035993740219, ["mov     rax, [rbp+f]", "mov     eax, [rax+0A8h]", "mov     eax, eax", "lea     rdx, ds:0[rax*4]", "lea     rax, filetype_indicator_9832", "mov     eax, [rdx+rax]", "mov     [rbp+type], eax", "jmp     loc_C6BC"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~eax,eax", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 9, 7, 0.009780907668231613, ["mov     [rbp+type], 10h", "jmp     loc_C6BC"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 11, 7, 0.005868544600938967, ["mov     [rbp+type], 15h", "jmp     loc_C6BC"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 12, 7, 0.0019561815336463224, ["mov     [rbp+type], 0Eh", "jmp     loc_C6BC"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 11, 7, 0.005868544600938967, ["mov     [rbp+type], 14h", "jmp     loc_C6BC"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 1, 20, 0, 0, 2, 0, 1, 12, 7, 0.0, ["mov     [rbp+type], 12h", "jmp     short loc_C6BC"], ["mov~[rbp+0],<STR>", "jmp~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 9, 7, 0.009780907668231613, ["mov     [rbp+type], 7", "jmp     short loc_C6BC"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 10, 7, 0.003912363067292645, ["mov     [rbp+type], 8", "jmp     short loc_C6BC"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 13, 7, 0.0019561815336463224, ["mov     [rbp+type], 0Bh", "jmp     short loc_C6BC"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 20, 0, 0, 1, 0, 0, 13, 7, 0.0019561815336463224, ["mov     [rbp+type], 0Dh"], ["mov~[rbp+0],0"]], [1, 0, 11, 0, 0, 2, 0, 1, 8, 5, 0.13125978090766824, ["cmp     [rbp+type], 7", "jnz     short loc_C770"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 12, 0, 0, 1, 0, 1, 10, 6, 0.007042253521126761, ["jmp     short loc_C744"], ["jmp~FOO"]], [0, 0, 12, 0, 0, 1, 0, 0, 12, 6, 0.004694835680751174, ["nop"], ["nop"]], [0, 0, 67, 0, 0, 6, 1, 1, 1, 12, 0.004890453834115806, ["mov     rax, [rbp+f]", "mov     rax, [rax]", "mov     [rbp+name], rax", "movzx   eax, cs:color_symlink_as_referent", "test    al, al", "jz      short loc_C44E"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 13, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 12, 1, 0.006846635367762128, ["mov     rax, [rbp+s]", "jmp     short locret_C7B1"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 12, 1, 0.006846635367762128, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 28, 0, 1, 4, 1, 2, 9, 9, 0.028169014084507043, ["mov     edi, 15h; type", "call    is_colored", "test    al, al", "jz      short loc_C550"], ["mov~edi,0", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 66, 0, 0, 4, 1, 1, 2, 12, 0.0003912363067292645, ["mov     rax, [rbp+f]", "movzx   eax, byte ptr [rax+0B9h]", "test    al, al", "jz      short loc_C44E"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [0, 0, 27, 0, 0, 4, 1, 1, 10, 8, 0.005672926447574335, ["mov     rax, [rbp+f]", "movzx   eax, byte ptr [rax+0C0h]", "test    al, al", "jz      short loc_C550"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [1, 1, 29, 0, 0, 5, 2, 1, 8, 9, 0.02640845070422535, ["mov     [rbp+type], 6", "mov     eax, [rbp+mode]", "and     eax, 200h", "test    eax, eax", "jz      short loc_C5EE"], ["mov~[rbp+0],0", "mov~eax,[rbp+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [2, 0, 30, 0, 0, 4, 1, 1, 8, 8, 0.035211267605633804, ["mov     eax, [rbp+mode]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     short loc_C655"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [0, 0, 64, 0, 0, 3, 0, 1, 3, 11, 0.006259780907668232, ["mov     rax, [rbp+f]", "mov     eax, [rax+0ACh]", "jmp     short loc_C455"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "jmp~FOO"]], [1, 1, 28, 0, 0, 4, 1, 1, 9, 8, 0.025039123630672927, ["mov     eax, [rbp+mode]", "and     eax, 0F000h", "cmp     eax, 1000h", "jnz     short loc_C66D"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [1, 0, 28, 0, 0, 4, 2, 1, 9, 9, 0.006259780907668232, ["mov     eax, [rbp+mode]", "and     eax, 2", "test    eax, eax", "jz      short loc_C5EE"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 64, 0, 0, 2, 0, 0, 2, 11, 0.023082942097026604, ["mov     rax, [rbp+f]", "mov     eax, [rax+30h]"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]"]], [1, 0, 10, 0, 0, 2, 0, 1, 9, 5, 0.036384976525821594, ["cmp     [rbp+linkok], 0", "jnz     short loc_C770"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 10, 6, 0.024647887323943664, ["movzx   eax, cs:color_symlink_as_referent", "test    al, al", "jnz     short loc_C769"], ["movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 9, 4, 0.07746478873239437, ["cmp     [rbp+ext], 0", "jz      short loc_C781"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 27, 0, 1, 4, 1, 2, 10, 8, 0.00528169014084507, ["mov     edi, 14h; type", "call    is_colored", "test    al, al", "jz      short loc_C5EE"], ["mov~edi,0", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 63, 0, 0, 5, 0, 0, 3, 10, 0.0534037558685446, ["mov     [rbp+mode], eax", "mov     rax, [rbp+f]", "movzx   eax, byte ptr [rax+0B9h]", "movzx   eax, al", "mov     [rbp+linkok], eax"], ["mov~[rbp+0],eax", "mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "movzx~eax,al", "mov~[rbp+0],eax"]], [1, 0, 8, 0, 1, 4, 1, 2, 11, 5, 0.0006846635367762128, ["mov     edi, 0Dh; type", "call    is_colored", "test    al, al", "jz      short loc_C770"], ["mov~edi,0", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 7, 0, 0, 1, 0, 0, 11, 5, 0.0006846635367762128, ["mov     [rbp+type], 0Dh"], ["mov~[rbp+0],0"]]], "func_feature": [12, 40, 73, 0, 73, 113, 1, 259, 0.0247, 4, 6], "succs": [[17, 19], [0, 2], [0, 43], [17], [33, 3], [17], [5, 23], [52, 30], [30, 7], [18, 20], [9, 53], [25, 57], [11, 13], [41, 11], [17], [22, 14], [29], [16, 50], [26], [17, 28], [26], [17, 45], [17, 21], [40, 38], [6, 23], [57, 31], [24], [22, 15], [17], [8, 51], [29], [17], [17], [32, 39], [56, 55], [34], [34], [60, 61], [12, 37], [48, 49], [17], [17], [17], [17], [17], [17], [17], [17], [17], [17], [66, 68], [50], [50], [65, 58], [], [54], [54], [1, 59], [65, 62], [1, 42], [64, 27], [46, 63], [70], [4, 47], [27, 69], [70], [67, 68], [72, 71], [35, 36], [27, 44], [24], [72, 68], [68]], "fname": "get_color_indicator", "n_num": 73}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 3, 0, 1, 5, 1, 2, 0, 0, 0.16666666666666666, ["mov     cs:used_color, 1", "mov     edi, 1; fd", "call    _tcgetpgrp", "test    eax, eax", "js      short loc_C7E7"], ["mov~<TAG>,0", "mov~edi,0", "call~FOO", "test~eax,eax", "js~FOO"]], [2, 0, 4, 1, 0, 8, 2, 1, 0, 1, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+ind], rdi", "movzx   eax, cs:used_color", "xor     eax, 1", "test    al, al", "jz      short loc_C7EC"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "movzx~eax,<TAG>", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 2, 0, 1, 1, 0, 1, 2, 2, 0.0, ["call    signal_init"], ["call~FOO"]], [1, 0, 0, 0, 1, 12, 0, 1, 1, 0, 0.0, ["mov     rdx, cs:stdout@@GLIBC_2_2_5", "mov     rax, [rbp+ind]", "mov     rsi, [rax]; size", "mov     rax, [rbp+ind]", "mov     rax, [rax+8]", "mov     rcx, rdx; stream", "mov     edx, 1; n", "mov     rdi, rax; ptr", "call    _fwrite_unlocked", "nop", "leave", "retn"], ["mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rsi,<TAG>", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rcx,rdx", "mov~edx,0", "mov~rdi,rax", "call~FOO", "nop", "leave", "retn"]], [0, 0, 1, 0, 1, 1, 0, 1, 2, 1, 0.16666666666666666, ["call    prep_non_filename_text"], ["call~FOO"]]], "func_feature": [4, 3, 6, 0, 5, 6, 13, 27, 0.06667, 2, 1], "succs": [[2, 4], [0, 3], [4], [], [3]], "fname": "put_indicator", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 19, 1, 2, 10, 0, 3, 0, 0, 0.021645021645021644, ["mov     rax, [rbp+f]", "mov     rax, [rax+20h]", "lea     rdx, [rbp+buf]", "mov     rsi, rdx; buf", "mov     rdi, rax; i", "call    umaxtostr", "mov     rdi, rax; s", "call    _strlen", "add     rax, 1", "jmp     short loc_C88E"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~rdi,rax", "call~FOO", "add~rax,0", "jmp~FOO"]], [1, 0, 21, 0, 0, 3, 0, 1, 1, 7, 0.006493506493506494, ["mov     eax, cs:format_0", "cmp     eax, 4", "jnz     short loc_C882"], ["mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 5, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 4, 1, 0.08658008658008658, ["mov     rax, [rbp+len]", "mov     rsi, [rbp+var_8]", "xor     rsi, fs:28h", "jz      short locret_CA01"], ["mov~rax,[rbp+0]", "mov~rsi,[rbp+0]", "xor~rsi,<TAG>", "jz~FOO"]], [1, 0, 11, 1, 1, 4, 0, 2, 5, 5, 0.07142857142857142, ["mov     rdi, rax; s", "call    _strlen", "add     rax, 1", "jmp     short loc_C915"], ["mov~rdi,rax", "call~FOO", "add~rax,0", "jmp~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 4, 6, 0.020562770562770564, ["lea     rax, asc_1D8DA; \"?\"", "jmp     short loc_C8FB"], ["lea~rax,<TAG>", "jmp~FOO"]], [0, 1, 12, 0, 1, 10, 0, 1, 4, 6, 0.020562770562770564, ["mov     rcx, cs:output_block_size", "mov     edx, cs:human_output_opts; opts", "mov     rax, [rbp+f]", "mov     rax, [rax+58h]", "mov     rdi, rax; n", "lea     rax, [rbp+buf]", "mov     r8, rcx; to_block_size", "mov     ecx, 200h; from_block_size", "mov     rsi, rax; buf", "call    human_readable"], ["mov~rcx,<TAG>", "mov~edx,<TAG>", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "lea~rax,[rbp+0]", "mov~r8,rcx", "mov~ecx,<STR>", "mov~rsi,rax", "call~FOO"]], [1, 0, 19, 1, 0, 3, 0, 0, 2, 6, 0.021645021645021644, ["mov     eax, cs:inode_number_width", "cdqe", "add     rax, 1"], ["mov~eax,<TAG>", "cdqe~", "add~rax,0"]], [0, 0, 18, 1, 0, 1, 0, 0, 3, 5, 0.11688311688311688, ["add     [rbp+len], rax"], ["add~[rbp+0],rax"]], [1, 0, 11, 1, 0, 3, 0, 0, 3, 5, 0.0367965367965368, ["mov     eax, cs:block_size_width", "cdqe", "add     rax, 1"], ["mov~eax,<TAG>", "cdqe~", "add~rax,0"]], [1, 0, 16, 0, 0, 3, 0, 1, 2, 6, 0.07792207792207792, ["mov     eax, cs:format_0", "cmp     eax, 4", "jnz     short loc_C909"], ["mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [0, 0, 10, 1, 0, 1, 0, 0, 4, 4, 0.12987012987012986, ["add     [rbp+len], rax"], ["add~[rbp+0],rax"]], [0, 0, 4, 1, 1, 12, 1, 2, 3, 2, 0.15584415584415584, ["mov     rax, [rbp+f]", "mov     edx, [rax+0C4h]; needs_general_quoting", "mov     rcx, cs:filename_quoting_options", "mov     rax, [rbp+f]", "mov     rax, [rax]", "mov     rsi, rcx; options", "mov     rdi, rax; name", "call    quote_name_width", "add     [rbp+len], rax", "mov     eax, cs:indicator_style_0", "test    eax, eax", "jz      short loc_C9E6"], ["mov~rax,[rbp+0]", "mov~edx,[rax+0]", "mov~rcx,<TAG>", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "add~[rbp+0],rax", "mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 2, 3, 0.2532467532467532, ["movzx   eax, cs:print_scontext", "test    al, al", "jz      short loc_C961"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 5, 1, 0, 1, 0, 0, 5, 3, 0.032467532467532464, ["add     [rbp+len], rax"], ["add~[rbp+0],rax"]], [0, 0, 17, 0, 0, 3, 1, 1, 1, 4, 0.18398268398268397, ["movzx   eax, cs:print_block_size", "test    al, al", "jz      short loc_C91C"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 1, 22, 1, 0, 11, 2, 1, 0, 5, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 2C0h", "mov     [rbp+f], rdi", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     [rbp+len], 0", "movzx   eax, cs:print_inode", "test    al, al", "jz      short loc_C895"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 8, 0, 0, 3, 0, 1, 3, 5, 0.09090909090909091, ["mov     eax, cs:format_0", "cmp     eax, 4", "jnz     short loc_C94E"], ["mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [1, 0, 14, 0, 0, 5, 2, 1, 3, 7, 0.045454545454545456, ["mov     rax, [rbp+f]", "movzx   eax, byte ptr [rax+0B8h]", "xor     eax, 1", "test    al, al", "jz      short loc_C8C9"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 6, 1, 1, 6, 0, 2, 4, 4, 0.021645021645021644, ["mov     rax, [rbp+f]", "mov     rax, [rax+0B0h]", "mov     rdi, rax; s", "call    _strlen", "add     rax, 1", "jmp     short loc_C95A"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "add~rax,0", "jmp~FOO"]], [1, 0, 6, 1, 0, 3, 0, 0, 4, 4, 0.021645021645021644, ["mov     eax, cs:scontext_width", "cdqe", "add     rax, 1"], ["mov~eax,<TAG>", "cdqe~", "add~rax,0"]], [1, 0, 3, 1, 1, 15, 0, 1, 4, 2, 0.0, ["mov     rax, [rbp+f]", "mov     edx, [rax+0A8h]; type", "mov     rax, [rbp+f]", "mov     ecx, [rax+30h]", "mov     rax, [rbp+f]", "movzx   eax, byte ptr [rax+0B8h]", "movzx   eax, al", "mov     esi, ecx; mode", "mov     edi, eax; stat_ok", "call    get_type_indicator", "mov     [rbp+c], al", "cmp     [rbp+c], 0", "setnz   al", "movzx   eax, al", "add     [rbp+len], rax"], ["mov~rax,[rbp+0]", "mov~edx,[rax+0]", "mov~rax,[rbp+0]", "mov~ecx,[rax+0]", "mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "movzx~eax,al", "mov~esi,ecx", "mov~edi,eax", "call~FOO", "mov~[rbp+0],al", "cmp~[rbp+0],0", "setnz~al", "movzx~eax,al", "add~[rbp+0],rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [8, 8, 21, 1, 23, 30, 5, 109, 0.06155, 13, 12], "succs": [[8], [0, 7], [], [2, 22], [11], [4], [4], [8], [15], [11], [9, 18], [13], [3, 21], [17, 12], [12], [10, 13], [1, 15], [19, 20], [5, 6], [14], [14], [3], []], "fname": "length_of_file_name_and_frills", "n_num": 23}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 6, 1, 1, 4, 0, 1, 0, 0, 0.26666666666666666, ["nop", "mov     edi, 0Ah; c", "call    _putchar_unlocked", "add     [rbp+row], 1"], ["nop", "mov~edi,0", "call~FOO", "add~[rbp+0],0"]], [2, 0, 6, 5, 2, 29, 0, 2, 3, 3, 0.43333333333333335, ["mov     rax, cs:sorted_file", "mov     rdx, [rbp+filesno]", "shl     rdx, 3", "add     rax, rdx", "mov     rax, [rax]", "mov     [rbp+f], rax", "mov     rax, [rbp+f]", "mov     rdi, rax; f", "call    length_of_file_name_and_frills", "mov     [rbp+name_length], rax", "mov     rax, [rbp+line_fmt]", "mov     rcx, [rax+10h]", "mov     rax, [rbp+col]", "lea     rdx, [rax+1]", "mov     [rbp+col], rdx", "shl     rax, 3", "add     rax, rcx", "mov     rax, [rax]", "mov     [rbp+max_name_length], rax", "mov     rdx, [rbp+pos]", "mov     rax, [rbp+f]", "mov     rsi, rdx; start_col", "mov     rdi, rax; f", "call    print_file_name_and_frills", "mov     rax, [rbp+rows]", "add     [rbp+filesno], rax", "mov     rax, cs:cwd_n_used", "cmp     [rbp+filesno], rax", "jnb     short loc_CB38"], ["mov~rax,<TAG>", "mov~rdx,[rbp+0]", "shl~rdx,0", "add~rax,rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rcx,[rax+0]", "mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "shl~rax,0", "add~rax,rcx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "add~[rbp+0],rax", "mov~rax,<TAG>", "cmp~[rbp+0],rax", "jnb~FOO"]], [0, 0, 6, 3, 1, 12, 0, 2, 4, 4, 0.0, ["mov     rdx, [rbp+pos]", "mov     rax, [rbp+max_name_length]", "add     rdx, rax", "mov     rcx, [rbp+pos]", "mov     rax, [rbp+name_length]", "add     rax, rcx", "mov     rsi, rdx; to", "mov     rdi, rax; from", "call    indent", "mov     rax, [rbp+max_name_length]", "add     [rbp+pos], rax", "jmp     loc_CA97"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rcx", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "add~[rbp+0],rax", "jmp~FOO"]], [2, 0, 6, 0, 0, 4, 0, 0, 2, 4, 0.26666666666666666, ["mov     [rbp+col], 0", "mov     rax, [rbp+row]", "mov     [rbp+filesno], rax", "mov     [rbp+pos], 0"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~[rbp+0],0"]], [0, 0, 6, 0, 0, 3, 0, 0, 1, 1, 0.4666666666666667, ["mov     rax, [rbp+row]", "cmp     rax, [rbp+rows]", "jb      loc_CA7F"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jb~FOO"]], [6, 1, 6, 9, 1, 30, 1, 2, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     edi, 1; by_columns", "call    calculate_columns", "mov     [rbp+cols], rax", "mov     rcx, cs:column_info_0", "mov     rdx, [rbp+cols]", "mov     rax, rdx", "add     rax, rax", "add     rax, rdx", "shl     rax, 3", "sub     rax, 18h", "add     rax, rcx", "mov     [rbp+line_fmt], rax", "mov     rax, cs:cwd_n_used", "mov     edx, 0", "div     [rbp+cols]", "mov     rcx, rax", "mov     rax, cs:cwd_n_used", "mov     edx, 0", "div     [rbp+cols]", "mov     rax, rdx", "test    rax, rax", "setnz   al", "movzx   eax, al", "add     rax, rcx", "mov     [rbp+rows], rax", "mov     [rbp+row], 0", "jmp     loc_CB48"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~edi,0", "call~FOO", "mov~[rbp+0],rax", "mov~rcx,<TAG>", "mov~rdx,[rbp+0]", "mov~rax,rdx", "add~rax,rax", "add~rax,rdx", "shl~rax,0", "sub~rax,0", "add~rax,rcx", "mov~[rbp+0],rax", "mov~rax,<TAG>", "mov~edx,0", "div~,[rbp+0]", "mov~rcx,rax", "mov~rax,<TAG>", "mov~edx,0", "div~,[rbp+0]", "mov~rax,rdx", "test~rax,rax", "setnz~al", "movzx~eax,al", "add~rax,rcx", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["nop", "leave", "retn"], ["nop", "leave", "retn"]]], "func_feature": [5, 1, 7, 0, 7, 8, 1, 85, 0.20476, 3, 18], "succs": [[4], [0, 2], [1], [1], [3, 6], [4], []], "fname": "print_many_per_line", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[7, 0, 6, 6, 3, 33, 0, 4, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+pos], 0", "mov     edi, 0; by_columns", "call    calculate_columns", "mov     [rbp+cols], rax", "mov     rcx, cs:column_info_0", "mov     rdx, [rbp+cols]", "mov     rax, rdx", "add     rax, rax", "add     rax, rdx", "shl     rax, 3", "sub     rax, 18h", "add     rax, rcx", "mov     [rbp+line_fmt], rax", "mov     rax, cs:sorted_file", "mov     rax, [rax]", "mov     [rbp+f], rax", "mov     rax, [rbp+f]", "mov     rdi, rax; f", "call    length_of_file_name_and_frills", "mov     [rbp+name_length], rax", "mov     rax, [rbp+line_fmt]", "mov     rax, [rax+10h]", "mov     rax, [rax]", "mov     [rbp+max_name_length], rax", "mov     rax, [rbp+f]", "mov     esi, 0; start_col", "mov     rdi, rax; f", "call    print_file_name_and_frills", "mov     [rbp+filesno], 1", "jmp     loc_CC95"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],0", "mov~edi,0", "call~FOO", "mov~[rbp+0],rax", "mov~rcx,<TAG>", "mov~rdx,[rbp+0]", "mov~rax,rdx", "add~rax,rax", "add~rax,rdx", "shl~rax,0", "sub~rax,0", "add~rax,rcx", "mov~[rbp+0],rax", "mov~rax,<TAG>", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 6, 0, 0, 3, 0, 0, 0, 1, 0.5333333333333333, ["mov     rax, cs:cwd_n_used", "cmp     [rbp+filesno], rax", "jb      loc_CBE5"], ["mov~rax,<TAG>", "cmp~[rbp+0],rax", "jb~FOO"]], [3, 0, 6, 5, 2, 23, 0, 2, 0, 2, 0.3333333333333333, ["mov     rax, cs:sorted_file", "mov     rdx, [rbp+filesno]", "shl     rdx, 3", "add     rax, rdx", "mov     rax, [rax]", "mov     [rbp+f], rax", "mov     rdx, [rbp+pos]", "mov     rax, [rbp+f]", "mov     rsi, rdx; start_col", "mov     rdi, rax; f", "call    print_file_name_and_frills", "mov     rax, [rbp+f]", "mov     rdi, rax; f", "call    length_of_file_name_and_frills", "mov     [rbp+name_length], rax", "mov     rax, [rbp+line_fmt]", "mov     rax, [rax+10h]", "mov     rdx, [rbp+col]", "shl     rdx, 3", "add     rax, rdx", "mov     rax, [rax]", "mov     [rbp+max_name_length], rax", "add     [rbp+filesno], 1"], ["mov~rax,<TAG>", "mov~rdx,[rbp+0]", "shl~rdx,0", "add~rax,rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "shl~rdx,0", "add~rax,rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "add~[rbp+0],0"]], [2, 0, 6, 0, 1, 4, 0, 2, 0, 3, 0.08333333333333333, ["mov     edi, 0Ah; c", "call    _putchar_unlocked", "mov     [rbp+pos], 0", "jmp     short loc_CC3A"], ["mov~edi,0", "call~FOO", "mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 6, 1, 0, 6, 0, 1, 0, 4, 0.3333333333333333, ["mov     rax, [rbp+filesno]", "mov     edx, 0", "div     [rbp+cols]", "mov     [rbp+col], rdx", "cmp     [rbp+col], 0", "jnz     short loc_CC11"], ["mov~rax,[rbp+0]", "mov~edx,0", "div~,[rbp+0]", "mov~[rbp+0],rdx", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 6, 3, 1, 11, 0, 1, 0, 3, 0.08333333333333333, ["mov     rdx, [rbp+pos]", "mov     rax, [rbp+max_name_length]", "add     rdx, rax", "mov     rcx, [rbp+pos]", "mov     rax, [rbp+name_length]", "add     rax, rcx", "mov     rsi, rdx; to", "mov     rdi, rax; from", "call    indent", "mov     rax, [rbp+max_name_length]", "add     [rbp+pos], rax"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rcx", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "add~[rbp+0],rax"]], [1, 0, 0, 0, 1, 5, 0, 1, 0, 0, 0.0, ["mov     edi, 0Ah; c", "call    _putchar_unlocked", "nop", "leave", "retn"], ["mov~edi,0", "call~FOO", "nop", "leave", "retn"]]], "func_feature": [8, 0, 11, 0, 7, 8, 1, 85, 0.19524, 3, 15], "succs": [[1], [4, 6], [1], [2], [3, 5], [2], []], "fname": "print_horizontal", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 13, 0, 0, 3, 1, 1, 0, 0, 0.2948717948717949, ["mov     rax, cs:line_length", "test    rax, rax", "jz      short loc_CD50"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 13, 0, 0, 3, 0, 1, 4, 3, 0.42948717948717946, ["mov     [rbp+len], rax", "cmp     [rbp+filesno], 0", "jz      short loc_CD7D"], ["mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 13, 0, 0, 2, 0, 0, 7, 4, 0.08974358974358974, ["mov     [rbp+pos], 0", "mov     [rbp+separator], 0Ah"], ["mov~[rbp+0],0", "mov~[rbp+0],0"]], [0, 0, 13, 1, 0, 7, 0, 0, 6, 5, 0.1346153846153846, ["mov     rdx, [rbp+pos]", "mov     rax, [rbp+len]", "add     rax, rdx", "lea     rdx, [rax+2]", "mov     rax, cs:line_length", "cmp     rdx, rax", "jnb     short loc_CD5B"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "lea~rdx,[rax+0]", "mov~rax,<TAG>", "cmp~rdx,rax", "jnb~FOO"]], [1, 0, 13, 1, 0, 4, 0, 1, 7, 5, 0.00641025641025641, ["mov     rax, 0FFFFFFFFFFFFFFFDh", "sub     rax, [rbp+len]", "cmp     [rbp+pos], rax", "ja      short loc_CD5B"], ["mov~rax,0", "sub~rax,[rbp+0]", "cmp~[rbp+0],rax", "ja~FOO"]], [0, 0, 13, 0, 1, 4, 0, 2, 3, 4, 0.17628205128205127, ["mov     rax, [rbp+f]", "mov     rdi, rax; f", "call    length_of_file_name_and_frills", "jmp     short loc_CD0D"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 13, 2, 0, 9, 1, 1, 2, 5, 0.42948717948717946, ["mov     rax, cs:sorted_file", "mov     rdx, [rbp+filesno]", "shl     rdx, 3", "add     rax, rdx", "mov     rax, [rax]", "mov     [rbp+f], rax", "mov     rax, cs:line_length", "test    rax, rax", "jz      short loc_CD08"], ["mov~rax,<TAG>", "mov~rdx,[rbp+0]", "shl~rdx,0", "add~rax,rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 13, 0, 0, 1, 0, 0, 3, 4, 0.17628205128205127, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 13, 0, 0, 3, 0, 0, 1, 1, 0.5128205128205128, ["mov     rax, cs:cwd_n_used", "cmp     [rbp+filesno], rax", "jb      loc_CCD5"], ["mov~rax,<TAG>", "cmp~[rbp+0],rax", "jb~FOO"]], [3, 0, 13, 1, 0, 8, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     eax, edi", "mov     [rbp+sep], al", "mov     [rbp+pos], 0", "mov     [rbp+filesno], 0", "jmp     loc_CD9D"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~eax,edi", "mov~[rbp+0],al", "mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 13, 2, 1, 8, 0, 1, 5, 2, 0.42948717948717946, ["mov     rdx, [rbp+pos]", "mov     rax, [rbp+f]", "mov     rsi, rdx; start_col", "mov     rdi, rax; f", "call    print_file_name_and_frills", "mov     rax, [rbp+len]", "add     [rbp+pos], rax", "add     [rbp+filesno], 1"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "add~[rbp+0],rax", "add~[rbp+0],0"]], [0, 0, 13, 0, 2, 6, 0, 2, 7, 3, 0.2948717948717949, ["movsx   eax, [rbp+sep]", "mov     edi, eax; c", "call    _putchar_unlocked", "movsx   eax, [rbp+separator]", "mov     edi, eax; c", "call    _putchar_unlocked"], ["movsx~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "movsx~eax,[rbp+0]", "mov~edi,eax", "call~FOO"]], [1, 1, 13, 1, 0, 3, 0, 1, 6, 4, 0.1282051282051282, ["add     [rbp+pos], 2", "mov     [rbp+separator], 20h ; ' '", "jmp     short loc_CD67"], ["add~[rbp+0],0", "mov~[rbp+0],<STR>", "jmp~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 2, 0, 0.0, ["mov     edi, 0Ah; c", "call    _putchar_unlocked", "nop", "leave", "retn"], ["mov~edi,0", "call~FOO", "nop", "leave", "retn"]]], "func_feature": [5, 2, 12, 0, 14, 19, 3, 66, 0.22161, 3, 8], "succs": [[3, 12], [0, 10], [11], [2, 4], [2, 12], [1], [5, 7], [1], [13, 6], [8], [8], [10], [11], []], "fname": "print_with_separator", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["nop", "leave", "retn"], ["nop", "leave", "retn"]], [0, 0, 6, 0, 0, 3, 0, 0, 1, 0, 0.5333333333333333, ["mov     rax, [rbp+from]", "cmp     rax, [rbp+to]", "jb      loc_CDD0"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jb~FOO"]], [1, 1, 6, 1, 1, 3, 0, 1, 3, 0, 0.11666666666666667, ["mov     edi, 20h ; ' '; c", "call    _putchar_unlocked", "add     [rbp+from], 1"], ["mov~edi,<STR>", "call~FOO", "add~[rbp+0],0"]], [0, 0, 6, 0, 0, 3, 1, 1, 2, 0, 0.3333333333333333, ["mov     rax, cs:tabsize", "test    rax, rax", "jz      short loc_CE41"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [3, 0, 6, 3, 0, 12, 0, 0, 3, 0, 0.13333333333333333, ["mov     rsi, cs:tabsize", "mov     rax, [rbp+to]", "mov     edx, 0", "div     rsi", "mov     rcx, rax", "mov     rax, [rbp+from]", "add     rax, 1", "mov     rdi, cs:tabsize", "mov     edx, 0", "div     rdi", "cmp     rcx, rax", "jbe     short loc_CE41"], ["mov~rsi,<TAG>", "mov~rax,[rbp+0]", "mov~edx,0", "div~,rsi", "mov~rcx,rax", "mov~rax,[rbp+0]", "add~rax,0", "mov~rdi,<TAG>", "mov~edx,0", "div~,rdi", "cmp~rcx,rax", "jbe~FOO"]], [1, 0, 6, 1, 0, 6, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+from], rdi", "mov     [rbp+to], rsi", "jmp     loc_CE50"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "jmp~FOO"]], [2, 0, 6, 3, 1, 12, 0, 2, 4, 0, 0.05, ["mov     edi, 9; c", "call    _putchar_unlocked", "mov     rcx, cs:tabsize", "mov     rsi, cs:tabsize", "mov     rax, [rbp+from]", "mov     edx, 0", "div     rsi", "mov     rax, rdx", "sub     rcx, rax", "mov     rax, rcx", "add     [rbp+from], rax", "jmp     short loc_CE50"], ["mov~edi,0", "call~FOO", "mov~rcx,<TAG>", "mov~rsi,<TAG>", "mov~rax,[rbp+0]", "mov~edx,0", "div~,rsi", "mov~rax,rdx", "sub~rcx,rax", "mov~rax,rcx", "add~[rbp+0],rax", "jmp~FOO"]]], "func_feature": [2, 1, 5, 0, 7, 9, 2, 42, 0.16667, 1, 8], "succs": [[], [0, 3], [1], [2, 4], [2, 6], [1], [1]], "fname": "indent", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 10, 0, 0, 11, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+dest], rdi", "mov     [rbp+dirname], rsi", "mov     [rbp+name], rdx", "mov     rax, [rbp+dirname]", "mov     [rbp+dirnamep], rax", "mov     rax, [rbp+dirname]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Eh ; '.'", "jnz     short loc_CEB2"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [0, 0, 5, 0, 0, 3, 0, 0, 0, 2, 0.2111111111111111, ["mov     rax, [rbp+dirnamep]", "cmp     rax, [rbp+dirname]", "jbe     short loc_CF04"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jbe~FOO"]], [0, 0, 8, 0, 0, 4, 1, 1, 0, 3, 0.23333333333333334, ["mov     rax, [rbp+dirnamep]", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_CE95"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 3, 0, 0, 8, 0, 0, 0, 2, 0.0, ["mov     rdx, [rbp+name]", "lea     rax, [rdx+1]", "mov     [rbp+name], rax", "mov     rax, [rbp+dest]", "lea     rcx, [rax+1]", "mov     [rbp+dest], rcx", "movzx   edx, byte ptr [rdx]", "mov     [rax], dl"], ["mov~rdx,[rbp+0]", "lea~rax,[rdx+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "lea~rcx,[rax+0]", "mov~[rbp+0],rcx", "movzx~edx,<TAG>", "mov~<TAG>,dl"]], [0, 0, 3, 0, 0, 4, 1, 1, 0, 1, 0.18888888888888888, ["mov     rax, [rbp+name]", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_CEE7"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [1, 0, 9, 1, 0, 5, 1, 1, 0, 2, 0.044444444444444446, ["mov     rax, [rbp+dirname]", "add     rax, 1", "movzx   eax, byte ptr [rax]", "test    al, al", "jz      short loc_CF04"], ["mov~rax,[rbp+0]", "add~rax,0", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [2, 0, 4, 1, 0, 5, 0, 1, 0, 2, 0.06666666666666667, ["mov     rax, [rbp+dirnamep]", "sub     rax, 1", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jz      short loc_CF04"], ["mov~rax,[rbp+0]", "sub~rax,0", "movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [1, 0, 3, 0, 0, 5, 0, 1, 0, 2, 0.0, ["mov     rax, [rbp+dest]", "lea     rdx, [rax+1]", "mov     [rbp+dest], rdx", "mov     byte ptr [rax], 2Fh ; '/'", "jmp     short loc_CF04"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 8, 0, 0, 8, 0, 0, 0, 4, 0.0, ["mov     rdx, [rbp+dirnamep]", "lea     rax, [rdx+1]", "mov     [rbp+dirnamep], rax", "mov     rax, [rbp+dest]", "lea     rcx, [rax+1]", "mov     [rbp+dest], rcx", "movzx   edx, byte ptr [rdx]", "mov     [rax], dl"], ["mov~rdx,[rbp+0]", "lea~rax,[rdx+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "lea~rcx,[rax+0]", "mov~[rbp+0],rcx", "movzx~edx,<TAG>", "mov~<TAG>,dl"]], [0, 0, 8, 0, 0, 1, 0, 1, 0, 4, 0.05555555555555556, ["jmp     short loc_CEB2"], ["jmp~FOO"]], [1, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+dest]", "mov     byte ptr [rax], 0", "nop", "pop     rbp", "retn"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "nop", "pop~rbp", "retn"]]], "func_feature": [0, 3, 7, 0, 11, 16, 1, 59, 0.07273, 0, 2], "succs": [[2, 5], [4, 6], [8, 1], [4], [10, 3], [9, 4], [4, 7], [4], [2], [2], []], "fname": "attach", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[4, 0, 10, 7, 0, 14, 0, 0, 0, 0, 0.0, ["mov     rcx, cs:column_info_0", "mov     rdx, [rbp+i]", "mov     rax, rdx", "add     rax, rax", "add     rax, rdx", "shl     rax, 3", "lea     rdx, [rcx+rax]", "mov     rax, [rbp+p]", "mov     [rdx+10h], rax", "mov     rax, [rbp+i]", "add     rax, 1", "shl     rax, 3", "add     [rbp+p], rax", "add     [rbp+i], 1"], ["mov~rcx,<TAG>", "mov~rdx,[rbp+0]", "mov~rax,rdx", "add~rax,rax", "add~rax,rdx", "shl~rax,0", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~[rdx+0],rax", "mov~rax,[rbp+0]", "add~rax,0", "shl~rax,0", "add~[rbp+0],rax", "add~[rbp+0],0"]], [0, 0, 10, 0, 0, 3, 0, 0, 6, 4, 0.23529411764705882, ["mov     rax, [rbp+i]", "cmp     rax, [rbp+new_column_info_alloc]", "jb      short loc_D039"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jb~FOO"]], [0, 0, 7, 0, 0, 2, 0, 0, 7, 3, 0.20588235294117646, ["mov     rax, [rbp+new_column_info_alloc]", "mov     cs:column_info_alloc_9913, rax"], ["mov~rax,[rbp+0]", "mov~<TAG>,rax"]], [0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0.0, ["nop", "leave", "retn"], ["nop", "leave", "retn"]], [0, 0, 6, 0, 0, 3, 0, 0, 2, 1, 0.23529411764705882, ["mov     rax, [rbp+i]", "cmp     rax, [rbp+max_cols]", "jb      loc_D094"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jb~FOO"]], [0, 0, 6, 0, 0, 3, 0, 0, 4, 3, 0.1213235294117647, ["mov     rax, [rbp+j]", "cmp     rax, [rbp+i]", "jbe     short loc_D0ED"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jbe~FOO"]], [4, 0, 6, 9, 0, 23, 0, 1, 3, 4, 0.13970588235294118, ["mov     rcx, cs:column_info_0", "mov     rdx, [rbp+i]", "mov     rax, rdx", "add     rax, rax", "add     rax, rdx", "shl     rax, 3", "add     rax, rcx", "mov     byte ptr [rax], 1", "mov     rax, [rbp+i]", "lea     rcx, [rax+1]", "mov     rsi, cs:column_info_0", "mov     rdx, [rbp+i]", "mov     rax, rdx", "add     rax, rax", "add     rax, rdx", "shl     rax, 3", "lea     rdx, [rsi+rax]", "mov     rax, rcx", "add     rax, rax", "add     rax, rcx", "mov     [rdx+8], rax", "mov     [rbp+j], 0", "jmp     short loc_D123"], ["mov~rcx,<TAG>", "mov~rdx,[rbp+0]", "mov~rax,rdx", "add~rax,rax", "add~rax,rdx", "shl~rax,0", "add~rax,rcx", "mov~<TAG>,0", "mov~rax,[rbp+0]", "lea~rcx,[rax+0]", "mov~rsi,<TAG>", "mov~rdx,[rbp+0]", "mov~rax,rdx", "add~rax,rax", "add~rax,rdx", "shl~rax,0", "lea~rdx,<TAG>", "mov~rax,rcx", "add~rax,rax", "add~rax,rcx", "mov~[rdx+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [4, 0, 6, 7, 0, 13, 0, 0, 5, 4, 0.0, ["mov     rcx, cs:column_info_0", "mov     rdx, [rbp+i]", "mov     rax, rdx", "add     rax, rax", "add     rax, rdx", "shl     rax, 3", "add     rax, rcx", "mov     rax, [rax+10h]", "mov     rdx, [rbp+j]", "shl     rdx, 3", "add     rax, rdx", "mov     qword ptr [rax], 3", "add     [rbp+j], 1"], ["mov~rcx,<TAG>", "mov~rdx,[rbp+0]", "mov~rax,rdx", "add~rax,rax", "add~rax,rdx", "shl~rax,0", "add~rax,rcx", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "shl~rdx,0", "add~rax,rdx", "mov~<TAG>,0", "add~[rbp+0],0"]], [1, 0, 17, 1, 0, 11, 0, 0, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     rdx, cs:cwd_n_used", "mov     rax, cs:max_idx", "cmp     rdx, rax", "cmovbe  rax, rdx", "mov     [rbp+max_cols], rax", "mov     rax, cs:column_info_alloc_9913", "cmp     [rbp+max_cols], rax", "jbe     loc_D087"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~rdx,<TAG>", "mov~rax,<TAG>", "cmp~rdx,rax", "cmovbe~rax,rdx", "mov~[rbp+0],rax", "mov~rax,<TAG>", "cmp~[rbp+0],rax", "jbe~FOO"]], [1, 0, 14, 1, 1, 11, 0, 2, 2, 8, 0.03860294117647059, ["mov     rax, cs:column_info_0", "mov     rcx, [rbp+max_cols]", "mov     edx, 30h ; '0'; s", "mov     rsi, rcx; n", "mov     rdi, rax; p", "call    xnrealloc", "mov     cs:column_info_0, rax", "mov     rax, [rbp+max_cols]", "add     rax, rax", "mov     [rbp+new_column_info_alloc], rax", "jmp     short loc_CFBA"], ["mov~rax,<TAG>", "mov~rcx,[rbp+0]", "mov~edx,0", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~<TAG>,rax", "mov~rax,[rbp+0]", "add~rax,rax", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 16, 0, 0, 4, 0, 0, 1, 9, 0.03308823529411765, ["mov     rax, cs:max_idx", "shr     rax, 1", "cmp     [rbp+max_cols], rax", "jnb     short loc_CF8A"], ["mov~rax,<TAG>", "shr~rax,0", "cmp~[rbp+0],rax", "jnb~FOO"]], [1, 0, 12, 1, 0, 5, 0, 1, 4, 6, 0.1764705882352941, ["mov     rax, [rbp+t]", "mov     edx, 0", "div     [rbp+column_info_growth]", "cmp     [rbp+s], rax", "jz      short loc_D014"], ["mov~rax,[rbp+0]", "mov~edx,0", "div~,[rbp+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [1, 0, 13, 4, 0, 16, 0, 0, 3, 7, 0.16544117647058823, ["mov     rax, cs:column_info_alloc_9913", "mov     rdx, [rbp+new_column_info_alloc]", "sub     rdx, rax", "mov     rax, rdx", "mov     [rbp+column_info_growth], rax", "mov     rdx, cs:column_info_alloc_9913", "mov     rax, [rbp+new_column_info_alloc]", "add     rax, rdx", "add     rax, 1", "mov     [rbp+s], rax", "mov     rax, [rbp+s]", "imul    rax, [rbp+column_info_growth]", "mov     [rbp+t], rax", "mov     rax, [rbp+s]", "cmp     rax, [rbp+new_column_info_alloc]", "jb      short loc_D00F"], ["mov~rax,<TAG>", "mov~rdx,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "mov~[rbp+0],rax", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "add~rax,0", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "imul~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jb~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 6, 1, 0, 1, 0, 0, 5, 2, 0.029411764705882353, ["add     [rbp+i], 1"], ["add~[rbp+0],0"]], [1, 0, 14, 0, 1, 9, 0, 1, 2, 8, 0.03860294117647059, ["mov     rcx, cs:max_idx", "mov     rax, cs:column_info_0", "mov     edx, 18h; s", "mov     rsi, rcx; n", "mov     rdi, rax; p", "call    xnrealloc", "mov     cs:column_info_0, rax", "mov     rax, cs:max_idx", "mov     [rbp+new_column_info_alloc], rax"], ["mov~rcx,<TAG>", "mov~rax,<TAG>", "mov~edx,0", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~<TAG>,rax", "mov~rax,<TAG>", "mov~[rbp+0],rax"]], [2, 0, 10, 0, 1, 9, 0, 2, 5, 5, 0.1948529411764706, ["mov     rax, [rbp+t]", "shr     rax, 1", "mov     esi, 8; s", "mov     rdi, rax; n", "call    xnmalloc", "mov     [rbp+p], rax", "mov     rax, cs:column_info_alloc_9913", "mov     [rbp+i], rax", "jmp     short loc_D072"], ["mov~rax,[rbp+0]", "shr~rax,0", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 1, 2, 0.22058823529411764, ["mov     [rbp+i], 0", "jmp     loc_D132"], ["mov~[rbp+0],0", "jmp~FOO"]]], "func_feature": [4, 0, 9, 0, 18, 23, 1, 133, 0.10192, 4, 31], "succs": [[1], [0, 2], [17], [], [3, 6], [14, 7], [5], [5], [17, 10], [12], [9, 15], [16, 13], [11, 13], [], [4], [12], [1], [4]], "fname": "init_column_info", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 21, 1, 0, 1, 0, 0, 0, 0, 0.2547619047619048, ["add     [rbp+filesno], 1"], ["add~[rbp+0],0"]], [0, 0, 21, 0, 0, 3, 0, 0, 3, 6, 0.4714285714285715, ["mov     rax, [rbp+i]", "cmp     rax, [rbp+max_cols]", "jb      loc_D1B1"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jb~FOO"]], [2, 0, 21, 3, 0, 12, 0, 1, 6, 11, 0.0761904761904762, ["mov     rdx, cs:cwd_n_used", "mov     rax, [rbp+i]", "add     rax, rdx", "mov     rdx, [rbp+i]", "lea     rsi, [rdx+1]", "mov     edx, 0", "div     rsi", "mov     rsi, rax", "mov     rax, [rbp+filesno]", "mov     edx, 0", "div     rsi", "jmp     short loc_D223"], ["mov~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rdx,[rbp+0]", "lea~rsi,[rdx+0]", "mov~edx,0", "div~,rsi", "mov~rsi,rax", "mov~rax,[rbp+0]", "mov~edx,0", "div~,rsi", "jmp~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 5, 12, 0.17142857142857143, ["cmp     [rbp+by_columns], 0", "jz      short loc_D20C"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 21, 0, 0, 3, 0, 0, 1, 4, 0.3190476190476191, ["mov     rax, cs:cwd_n_used", "cmp     [rbp+filesno], rax", "jb      loc_D17B"], ["mov~rax,<TAG>", "cmp~[rbp+0],rax", "jb~FOO"]], [1, 1, 21, 1, 1, 13, 0, 2, 0, 5, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     eax, edi", "mov     [rbp+by_columns], al", "mov     rdx, cs:cwd_n_used", "mov     rax, cs:max_idx", "cmp     rdx, rax", "cmovbe  rax, rdx", "mov     [rbp+max_cols], rax", "call    init_column_info", "mov     [rbp+filesno], 0", "jmp     loc_D38A"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~eax,edi", "mov~[rbp+0],al", "mov~rdx,<TAG>", "mov~rax,<TAG>", "cmp~rdx,rax", "cmovbe~rax,rdx", "mov~[rbp+0],rax", "call~FOO", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 21, 1, 0, 6, 0, 0, 6, 11, 0.0761904761904762, ["mov     rax, [rbp+i]", "lea     rcx, [rax+1]", "mov     rax, [rbp+filesno]", "mov     edx, 0", "div     rcx", "mov     rax, rdx"], ["mov~rax,[rbp+0]", "lea~rcx,[rax+0]", "mov~rax,[rbp+0]", "mov~edx,0", "div~,rcx", "mov~rax,rdx"]], [0, 0, 6, 0, 0, 3, 0, 1, 2, 3, 0.2142857142857143, ["mov     rax, [rbp+max_cols]", "mov     [rbp+cols], rax", "jmp     short loc_D3D0"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [2, 0, 21, 2, 1, 12, 0, 2, 2, 7, 0.08333333333333334, ["mov     rax, cs:sorted_file", "mov     rdx, [rbp+filesno]", "shl     rdx, 3", "add     rax, rdx", "mov     rax, [rax]", "mov     [rbp+f], rax", "mov     rax, [rbp+f]", "mov     rdi, rax; f", "call    length_of_file_name_and_frills", "mov     [rbp+name_length], rax", "mov     [rbp+i], 0", "jmp     loc_D377"], ["mov~rax,<TAG>", "mov~rdx,[rbp+0]", "shl~rdx,0", "add~rax,rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 21, 0, 0, 4, 0, 1, 7, 10, 0.2142857142857143, ["mov     [rbp+idx], rax", "mov     rax, [rbp+idx]", "cmp     rax, [rbp+i]", "jnz     short loc_D238"], ["mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 8, 9, 0.09761904761904763, ["mov     edx, 0", "jmp     short loc_D23D"], ["mov~edx,0", "jmp~FOO"]], [1, 0, 21, 0, 0, 1, 0, 0, 8, 9, 0.09761904761904763, ["mov     edx, 2"], ["mov~edx,0"]], [2, 0, 6, 5, 0, 11, 1, 1, 4, 2, 0.08333333333333334, ["mov     rcx, cs:column_info_0", "mov     rdx, [rbp+cols]", "mov     rax, rdx", "add     rax, rax", "add     rax, rdx", "shl     rax, 3", "sub     rax, 18h", "add     rax, rcx", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_D3D9"], ["mov~rcx,<TAG>", "mov~rdx,[rbp+0]", "mov~rax,rdx", "add~rax,rax", "add~rax,rdx", "shl~rax,0", "sub~rax,0", "add~rax,rcx", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 3, 2, 0.2023809523809524, ["cmp     [rbp+cols], 1", "ja      short loc_D3A5"], ["cmp~[rbp+0],0", "ja~FOO"]], [1, 0, 6, 1, 0, 1, 0, 0, 5, 3, 0.004761904761904762, ["sub     [rbp+cols], 1"], ["sub~[rbp+0],0"]], [1, 0, 21, 4, 0, 10, 1, 1, 4, 8, 0.19761904761904764, ["mov     rcx, cs:column_info_0", "mov     rdx, [rbp+i]", "mov     rax, rdx", "add     rax, rax", "add     rax, rdx", "shl     rax, 3", "add     rax, rcx", "movzx   eax, byte ptr [rax]", "test    al, al", "jz      loc_D372"], ["mov~rcx,<TAG>", "mov~rdx,[rbp+0]", "mov~rax,rdx", "add~rax,rax", "add~rax,rdx", "shl~rax,0", "add~rax,rcx", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 4, 1, 0.04285714285714286, ["jmp     short loc_D3DA"], ["jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 5, 1, 0.002380952380952381, ["nop"], ["nop"]], [0, 0, 0, 0, 0, 3, 0, 0, 5, 0, 0.0, ["mov     rax, [rbp+cols]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]], [8, 0, 21, 29, 0, 64, 0, 0, 10, 8, 0.0, ["mov     rcx, cs:column_info_0", "mov     rdx, [rbp+i]", "mov     rax, rdx", "add     rax, rax", "add     rax, rdx", "shl     rax, 3", "add     rax, rcx", "mov     rcx, [rax+8]", "mov     rsi, cs:column_info_0", "mov     rdx, [rbp+i]", "mov     rax, rdx", "add     rax, rax", "add     rax, rdx", "shl     rax, 3", "add     rax, rsi", "mov     rax, [rax+10h]", "mov     rdx, [rbp+idx]", "shl     rdx, 3", "add     rax, rdx", "mov     rax, [rax]", "mov     rdx, [rbp+real_length]", "mov     rdi, rdx", "sub     rdi, rax", "mov     rsi, cs:column_info_0", "mov     rdx, [rbp+i]", "mov     rax, rdx", "add     rax, rax", "add     rax, rdx", "shl     rax, 3", "add     rax, rsi", "lea     rdx, [rcx+rdi]", "mov     [rax+8], rdx", "mov     rcx, cs:column_info_0", "mov     rdx, [rbp+i]", "mov     rax, rdx", "add     rax, rax", "add     rax, rdx", "shl     rax, 3", "add     rax, rcx", "mov     rax, [rax+10h]", "mov     rdx, [rbp+idx]", "shl     rdx, 3", "add     rdx, rax", "mov     rax, [rbp+real_length]", "mov     [rdx], rax", "mov     rcx, cs:column_info_0", "mov     rdx, [rbp+i]", "mov     rax, rdx", "add     rax, rax", "add     rax, rdx", "shl     rax, 3", "add     rax, rcx", "mov     rsi, [rax+8]", "mov     rcx, cs:line_length", "mov     rdi, cs:column_info_0", "mov     rdx, [rbp+i]", "mov     rax, rdx", "add     rax, rax", "add     rax, rdx", "shl     rax, 3", "add     rax, rdi", "cmp     rsi, rcx", "setb    dl", "mov     [rax], dl"], ["mov~rcx,<TAG>", "mov~rdx,[rbp+0]", "mov~rax,rdx", "add~rax,rax", "add~rax,rdx", "shl~rax,0", "add~rax,rcx", "mov~rcx,[rax+0]", "mov~rsi,<TAG>", "mov~rdx,[rbp+0]", "mov~rax,rdx", "add~rax,rax", "add~rax,rdx", "shl~rax,0", "add~rax,rsi", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "shl~rdx,0", "add~rax,rdx", "mov~rax,<TAG>", "mov~rdx,[rbp+0]", "mov~rdi,rdx", "sub~rdi,rax", "mov~rsi,<TAG>", "mov~rdx,[rbp+0]", "mov~rax,rdx", "add~rax,rax", "add~rax,rdx", "shl~rax,0", "add~rax,rsi", "lea~rdx,<TAG>", "mov~[rax+0],rdx", "mov~rcx,<TAG>", "mov~rdx,[rbp+0]", "mov~rax,rdx", "add~rax,rax", "add~rax,rdx", "shl~rax,0", "add~rax,rcx", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "shl~rdx,0", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~<TAG>,rax", "mov~rcx,<TAG>", "mov~rdx,[rbp+0]", "mov~rax,rdx", "add~rax,rax", "add~rax,rdx", "shl~rax,0", "add~rax,rcx", "mov~rsi,[rax+0]", "mov~rcx,<TAG>", "mov~rdi,<TAG>", "mov~rdx,[rbp+0]", "mov~rax,rdx", "add~rax,rax", "add~rax,rdx", "shl~rax,0", "add~rax,rdi", "cmp~rsi,rcx", "setb~dl", "mov~<TAG>,dl"]], [2, 0, 21, 7, 0, 17, 0, 0, 9, 8, 0.2571428571428572, ["mov     rax, [rbp+name_length]", "add     rax, rdx", "mov     [rbp+real_length], rax", "mov     rcx, cs:column_info_0", "mov     rdx, [rbp+i]", "mov     rax, rdx", "add     rax, rax", "add     rax, rdx", "shl     rax, 3", "add     rax, rcx", "mov     rax, [rax+10h]", "mov     rdx, [rbp+idx]", "shl     rdx, 3", "add     rax, rdx", "mov     rax, [rax]", "cmp     [rbp+real_length], rax", "jbe     loc_D372"], ["mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax", "mov~rcx,<TAG>", "mov~rdx,[rbp+0]", "mov~rax,rdx", "add~rax,rax", "add~rax,rdx", "shl~rax,0", "add~rax,rcx", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "shl~rdx,0", "add~rax,rdx", "mov~rax,<TAG>", "cmp~[rbp+0],rax", "jbe~FOO"]], [1, 0, 21, 1, 0, 1, 0, 0, 5, 7, 0.3261904761904762, ["add     [rbp+i], 1"], ["add~[rbp+0],0"]]], "func_feature": [2, 2, 13, 0, 22, 29, 2, 173, 0.14513, 5, 55], "succs": [[4], [0, 15], [9], [2, 6], [8, 7], [4], [9], [13], [1], [10, 11], [20], [20], [17, 14], [16, 12], [13], [3, 21], [18], [18], [], [21], [19, 21], [1]], "fname": "calculate_columns", "n_num": 22}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 4, 0, 0, 3, 0, 1, 0, 0, 0.07142857142857142, ["mov     eax, cs:ls_mode", "cmp     eax, 2", "jnz     short loc_D7BB"], ["mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [2, 0, 6, 0, 60, 180, 0, 61, 1, 3, 0.08928571428571427, ["mov     rbx, cs:program_name", "lea     rdi, aUsageSOptionFi; \"Usage: %s [OPTION]... [FILE]...\\n\"", "call    _gettext", "mov     rsi, rbx", "mov     rdi, rax; format", "mov     eax, 0", "call    _printf", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aListInformatio; \"List information about the FILEs (the c\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "call    emit_mandatory_arg_note", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aAAllDoNotIgnor; \"  -a, --all                  do not ign\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aBlockSizeSizeW; \"      --block-size=SIZE      with -l, s\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aBIgnoreBackups; \"  -B, --ignore-backups       do not lis\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aCListEntriesBy; \"  -C                         list entri\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aFDoNotSortEnab; \"  -f                         do not sor\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aGLikeLButDoNot; \"  -g                         like -l, b\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aGroupDirectori; \"      --group-directories-first\\n      \"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aGNoGroupInALon; \"  -G, --no-group             in a long \"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aHHumanReadable; \"  -h, --human-readable       with -l an\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aHDereferenceCo; \"  -H, --dereference-command-line\\n     \"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aHyperlinkWhenH; \"      --hyperlink[=WHEN]     hyperlink \"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aIndicatorStyle; \"      --indicator-style=WORD  append in\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aKKibibytesDefa; \"  -k, --kibibytes            default to\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aLUseALongListi; \"  -l                         use a long\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aNNumericUidGid; \"  -n, --numeric-uid-gid      like -l, b\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aQHideControlCh; \"  -q, --hide-control-chars   print ? in\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aRReverseRevers; \"  -r, --reverse              reverse or\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aSSortByFileSiz; \"  -S                         sort by fi\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aTimeStyleTimeS; \"      --time-style=TIME_STYLE  time/dat\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aTSortByModific; \"  -t                         sort by mo\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aUWithLtSortByA; \"  -u                         with -lt: \"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aWWidthColsSetO; \"  -w, --width=COLS           set output\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aHelpDisplayThi; \"      --help     display this help and \"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aVersionOutputV; \"      --version  output version informa\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "call    emit_size_note", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aTheTimeStyleAr; \"\\nThe TIME_STYLE argument can be full-i\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aUsingColorToDi; \"\\nUsing color to distinguish file types\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aExitStatus0IfO; \"\\nExit status:\\n 0  if OK,\\n 1  if mino\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     eax, cs:ls_mode", "cmp     eax, 1", "jz      short loc_D7C4"], ["mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 1, 0, 2, 11, 0, 3, 1, 1, 0.017857142857142856, ["mov     rbx, cs:program_name", "lea     rdi, aTrySHelpForMor; \"Try '%s --help' for more information.\\n\"", "call    _gettext", "mov     rcx, rax", "mov     rax, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rbx", "mov     rsi, rcx; format", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "jmp     loc_D7D3"], ["mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rcx,rax", "mov~rax,<TAG>", "mov~rdx,rbx", "mov~rsi,rcx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "jmp~FOO"]], [2, 0, 8, 1, 0, 7, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 18h", "mov     [rbp+status], edi", "cmp     [rbp+status], 0", "jz      short loc_D427"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "mov~[rbp+0],edi", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 2, 2, 0.05357142857142857, ["lea     rax, aLs; \"ls\""], ["lea~rax,<TAG>"]], [0, 0, 2, 0, 0, 2, 0, 1, 3, 2, 0.017857142857142856, ["lea     rax, aVdir; \"vdir\"", "jmp     short loc_D7CB"], ["lea~rax,<TAG>", "jmp~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 3, 1, 0.08928571428571427, ["mov     rdi, rax; program", "call    emit_ancillary_info"], ["mov~rdi,rax", "call~FOO"]], [0, 0, 2, 0, 0, 2, 0, 1, 3, 2, 0.017857142857142856, ["lea     rax, program; \"dir\"", "jmp     short loc_D7CB"], ["lea~rax,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 1, 3, 0, 1, 2, 0, 0.0, ["mov     eax, [rbp+status]", "mov     edi, eax; status", "call    _exit"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO"]]], "func_feature": [64, 0, 70, 0, 9, 11, 4, 211, 0.03968, 37, 1], "succs": [[5, 7], [0, 4], [8], [1, 2], [6], [6], [8], [6], []], "fname": "usage", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 13, 0, 0, 3, 0, 1, 0, 0, 0.08187134502923976, ["mov     rax, 7FFFFFFFFFFFFFFEh", "cmp     [rbp+buf_size], rax", "ja      short loc_D91C"], ["mov~rax,0", "cmp~[rbp+0],rax", "ja~FOO"]], [1, 0, 13, 0, 1, 6, 0, 2, 8, 3, 0.1783625730994152, ["mov     rax, [rbp+buffer]", "mov     rdi, rax; ptr", "call    free", "mov     rax, 3FFFFFFFFFFFFFFFh", "cmp     [rbp+buf_size], rax", "ja      short loc_D8F9"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,0", "cmp~[rbp+0],rax", "ja~FOO"]], [0, 0, 16, 0, 0, 4, 0, 0, 2, 5, 0.14035087719298245, ["mov     [rbp+initial_limit], rax", "mov     rax, [rbp+size]", "cmp     rax, [rbp+initial_limit]", "jnb     short loc_D82D"], ["mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 17, 1, 0, 3, 0, 1, 1, 6, 0.024853801169590642, ["mov     rax, [rbp+symlink_max]", "add     rax, 1", "jmp     short loc_D815"], ["mov~rax,[rbp+0]", "add~rax,0", "jmp~FOO"]], [0, 0, 17, 0, 0, 1, 0, 0, 1, 6, 0.024853801169590642, ["mov     rax, [rbp+INITIAL_LIMIT_BOUND]"], ["mov~rax,[rbp+0]"]], [0, 0, 0, 0, 0, 2, 0, 0, 7, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 6, 1, 0.029239766081871343, ["mov     eax, 0", "jmp     locret_D92C"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 3, 12, 0, 4, 8, 1, 0.0043859649122807015, ["call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+saved_errno], eax", "mov     rax, [rbp+buffer]", "mov     rdi, rax; ptr", "call    free", "call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+saved_errno]", "mov     [rdx], eax", "mov     eax, 0", "jmp     short locret_D92C"], ["call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "mov~eax,0", "jmp~FOO"]], [1, 0, 1, 1, 0, 6, 0, 1, 8, 1, 0.0043859649122807015, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+link_length]", "add     rax, rdx", "mov     byte ptr [rax], 0", "mov     rax, [rbp+buffer]", "jmp     short locret_D92C"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0", "mov~rax,[rbp+0]", "jmp~FOO"]], [2, 0, 1, 0, 1, 3, 0, 1, 10, 1, 0.005847953216374269, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch", "mov     eax, 0"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0"]], [2, 1, 19, 1, 0, 10, 0, 0, 0, 7, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+file], rdi", "mov     [rbp+size], rsi", "mov     [rbp+symlink_max], 400h", "mov     [rbp+INITIAL_LIMIT_BOUND], 2000h", "mov     rax, [rbp+symlink_max]", "cmp     rax, [rbp+INITIAL_LIMIT_BOUND]", "jnb     short loc_D811"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 13, 0, 1, 6, 0, 2, 5, 2, 0.3713450292397661, ["mov     rax, [rbp+buf_size]", "mov     rdi, rax; size", "call    malloc", "mov     [rbp+buffer], rax", "cmp     [rbp+buffer], 0", "jnz     short loc_D856"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 4, 3, 0.22807017543859648, ["mov     [rbp+buf_size], rax"], ["mov~[rbp+0],rax"]], [1, 0, 14, 1, 0, 3, 0, 1, 3, 4, 0.08187134502923976, ["mov     rax, [rbp+size]", "add     rax, 1", "jmp     short loc_D831"], ["mov~rax,[rbp+0]", "add~rax,0", "jmp~FOO"]], [0, 0, 14, 0, 0, 1, 0, 0, 3, 4, 0.08187134502923976, ["mov     rax, [rbp+initial_limit]"], ["mov~rax,[rbp+0]"]], [1, 0, 13, 1, 0, 2, 0, 1, 9, 3, 0.049707602339181284, ["shl     [rbp+buf_size], 1", "jmp     loc_D835"], ["shl~[rbp+0],0", "jmp~FOO"]], [1, 0, 13, 0, 0, 3, 0, 1, 10, 3, 0.02631578947368421, ["mov     rax, 7FFFFFFFFFFFFFFFh", "mov     [rbp+buf_size], rax", "jmp     loc_D835"], ["mov~rax,0", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 13, 0, 0, 3, 0, 0, 7, 2, 0.2324561403508772, ["mov     rax, [rbp+link_length]", "cmp     rax, [rbp+buf_size]", "jnb     short loc_D8D4"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 13, 0, 1, 4, 0, 2, 7, 2, 0.04239766081871345, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 22h ; '\"'", "jz      short loc_D8B6"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 13, 0, 1, 11, 0, 1, 6, 3, 0.29239766081871343, ["mov     rdx, [rbp+buf_size]; len", "mov     rcx, [rbp+buffer]", "mov     rax, [rbp+file]", "mov     rsi, rcx; buf", "mov     rdi, rax; path", "call    _readlink", "mov     [rbp+r], rax", "mov     rax, [rbp+r]", "mov     [rbp+link_length], rax", "cmp     [rbp+r], 0", "jns     short loc_D8B6"], ["mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jns~FOO"]]], "func_feature": [8, 0, 19, 0, 20, 27, 2, 86, 0.09503, 0, 5], "succs": [[16, 9], [0, 15], [13, 14], [2], [2], [], [5], [5], [5], [5], [3, 4], [19, 6], [11], [12], [12], [11], [11], [8, 1], [17, 7], [17, 18]], "fname": "areadlink_with_size", "n_num": 20}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 0, 1, 4, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     edi, 1; status", "call    usage"], ["push~rbp", "mov~rbp,rsp", "mov~edi,0", "call~FOO"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 4, 0.0, 0, 0], "succs": [[]], "fname": "__argmatch_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 14, 0, 0, 2, 0, 1, 0, 0, 0.19230769230769232, ["cmp     [rbp+matchind], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_D9EF"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 14, 1, 1, 9, 0, 2, 3, 2, 0.23626373626373628, ["mov     rax, [rbp+i]", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+arglist]", "add     rax, rdx", "mov     rax, [rax]", "mov     rdi, rax; s", "call    _strlen", "cmp     [rbp+arglen], rax", "jnz     short loc_D9DE"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "cmp~[rbp+0],rax", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.024725274725274728, ["mov     rax, 0FFFFFFFFFFFFFFFEh", "jmp     short locret_DA6C"], ["mov~rax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.15384615384615385, ["cmp     [rbp+ambiguous], 0", "jz      short loc_DA68"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 3, 1, 0.024725274725274728, ["mov     rax, [rbp+matchind]"], ["mov~rax,[rbp+0]"]], [0, 0, 14, 1, 1, 12, 1, 2, 2, 3, 0.2527472527472528, ["mov     rax, [rbp+i]", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+arglist]", "add     rax, rdx", "mov     rax, [rax]", "mov     rdx, [rbp+arglen]; n", "mov     rcx, [rbp+arg]", "mov     rsi, rcx; s2", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     loc_DA35"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 14, 1, 0, 7, 1, 1, 1, 3, 0.4395604395604396, ["mov     rax, [rbp+i]", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+arglist]", "add     rax, rdx", "mov     rax, [rax]", "test    rax, rax", "jnz     loc_D980"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [0, 0, 14, 0, 0, 3, 0, 1, 5, 5, 0.08241758241758243, ["mov     rax, [rbp+i]", "mov     [rbp+matchind], rax", "jmp     short loc_DA35"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 14, 2, 1, 16, 1, 2, 6, 5, 0.030219780219780223, ["mov     rax, [rbp+valsize]", "imul    rax, [rbp+i]", "mov     rdx, rax", "mov     rax, [rbp+vallist]", "lea     rsi, [rdx+rax]; s2", "mov     rax, [rbp+matchind]", "imul    rax, [rbp+valsize]", "mov     rdx, rax", "mov     rax, [rbp+vallist]", "lea     rcx, [rdx+rax]", "mov     rax, [rbp+valsize]", "mov     rdx, rax; n", "mov     rdi, rcx; s1", "call    _memcmp", "test    eax, eax", "jz      short loc_DA35"], ["mov~rax,[rbp+0]", "imul~rax,[rbp+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rax,[rbp+0]", "imul~rax,[rbp+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "lea~rcx,<TAG>", "mov~rax,[rbp+0]", "mov~rdx,rax", "mov~rdi,rcx", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 5, 6, 0.08241758241758243, ["cmp     [rbp+vallist], 0", "jz      short loc_DA31"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 14, 0, 0, 1, 0, 0, 6, 5, 0.030219780219780223, ["mov     [rbp+ambiguous], 1"], ["mov~[rbp+0],0"]], [4, 0, 14, 1, 1, 15, 0, 2, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+arg], rdi", "mov     [rbp+arglist], rsi", "mov     [rbp+vallist], rdx", "mov     [rbp+valsize], rcx", "mov     [rbp+matchind], 0FFFFFFFFFFFFFFFFh", "mov     [rbp+ambiguous], 0", "mov     rax, [rbp+arg]", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+arglen], rax", "mov     [rbp+i], 0", "jmp     loc_DA3A"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 14, 1, 0, 1, 0, 0, 3, 4, 0.34065934065934067, ["add     [rbp+i], 1"], ["add~[rbp+0],0"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.01098901098901099, ["mov     rax, [rbp+i]", "jmp     locret_DA6C"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [4, 3, 15, 0, 15, 21, 4, 77, 0.12674, 0, 7], "succs": [[9, 7], [0, 13], [14], [2, 4], [14], [1, 12], [3, 5], [12], [10, 12], [8, 10], [12], [6], [6], [14], []], "fname": "argmatch", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 3, 1, 0, 9, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 38h", "mov     [rbp+context], rdi", "mov     [rbp+value], rsi", "mov     [rbp+problem], rdx", "cmp     [rbp+problem], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_DA98"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "cmp~[rbp+0],0", "jnz~FOO"]], [7, 0, 0, 1, 3, 25, 0, 3, 0, 0, 0.0, ["mov     [rbp+format], rax", "mov     rax, [rbp+context]", "mov     rsi, rax; arg", "mov     edi, 1; n", "call    quote_n", "mov     rbx, rax", "mov     rax, [rbp+value]", "mov     rdx, rax; arg", "mov     esi, 8; s", "mov     edi, 0; n", "call    quotearg_n_style", "mov     rdx, rax", "mov     rax, [rbp+format]", "mov     r8, rbx", "mov     rcx, rdx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "nop", "add     rsp, 38h", "pop     rbx", "pop     rbp", "retn"], ["mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~rax,[rbp+0]", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~r8,rbx", "mov~rcx,rdx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "nop", "add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [0, 0, 1, 0, 1, 3, 0, 2, 0, 1, 0.08333333333333333, ["lea     rdi, aInvalidArgumen; \"invalid argument %s for %s\"", "call    _gettext", "jmp     short loc_DAA4"], ["lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 0, 1, 0.08333333333333333, ["lea     rdi, aAmbiguousArgum; \"ambiguous argument %s for %s\"", "call    _gettext"], ["lea~rdi,<TAG>", "call~FOO"]]], "func_feature": [5, 0, 7, 0, 4, 4, 2, 39, 0.04167, 2, 2], "succs": [[2, 3], [], [1], [1]], "fname": "argmatch_invalid", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[3, 0, 7, 1, 2, 16, 0, 3, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 38h", "mov     [rbp+arglist], rdi", "mov     [rbp+vallist], rsi", "mov     [rbp+valsize], rdx", "mov     [rbp+last_val], 0", "mov     rbx, cs:stderr@@GLIBC_2_2_5", "lea     rdi, aValidArguments_0; \"Valid arguments are:\"", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     [rbp+i], 0", "jmp     loc_DC0E"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],0", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 7, 3, 2, 20, 0, 3, 0, 3, 0.16666666666666666, ["mov     rax, [rbp+i]", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+arglist]", "add     rax, rdx", "mov     rax, [rax]", "mov     rdi, rax; arg", "call    quote", "mov     rdx, rax", "mov     rax, cs:stderr@@GLIBC_2_2_5", "lea     rsi, aS_4; \"\\n  - %s\"", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "mov     rax, [rbp+valsize]", "imul    rax, [rbp+i]", "mov     rdx, rax", "mov     rax, [rbp+vallist]", "add     rax, rdx", "mov     [rbp+last_val], rax", "jmp     short loc_DC09"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "mov~rax,<TAG>", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "mov~rax,[rbp+0]", "imul~rax,[rbp+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 0, 4, 0.3571428571428571, ["cmp     [rbp+i], 0", "jz      short loc_DB78"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 7, 1, 1, 12, 1, 2, 0, 4, 0.11904761904761904, ["mov     rax, [rbp+valsize]", "imul    rax, [rbp+i]", "mov     rdx, rax", "mov     rax, [rbp+vallist]", "lea     rcx, [rdx+rax]", "mov     rdx, [rbp+valsize]; n", "mov     rax, [rbp+last_val]", "mov     rsi, rcx; s2", "mov     rdi, rax; s1", "call    _memcmp", "test    eax, eax", "jz      short loc_DBCD"], ["mov~rax,[rbp+0]", "imul~rax,[rbp+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "lea~rcx,<TAG>", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 7, 1, 2, 13, 0, 2, 0, 3, 0.047619047619047616, ["mov     rax, [rbp+i]", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+arglist]", "add     rax, rdx", "mov     rax, [rax]", "mov     rdi, rax; arg", "call    quote", "mov     rdx, rax", "mov     rax, cs:stderr@@GLIBC_2_2_5", "lea     rsi, aS_5; \", %s\"", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "mov~rax,<TAG>", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO"]], [0, 0, 7, 1, 0, 7, 1, 1, 0, 1, 0.5238095238095237, ["mov     rax, [rbp+i]", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+arglist]", "add     rax, rdx", "mov     rax, [rax]", "test    rax, rax", "jnz     loc_DB46"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [1, 0, 7, 1, 0, 1, 0, 0, 0, 2, 0.3571428571428571, ["add     [rbp+i], 1"], ["add~[rbp+0],0"]], [2, 0, 0, 1, 1, 9, 0, 1, 0, 0, 0.0, ["mov     rax, cs:stderr@@GLIBC_2_2_5", "mov     rsi, rax; stream", "mov     edi, 0Ah; c", "call    _putc_unlocked", "nop", "add     rsp, 38h", "pop     rbx", "pop     rbp", "retn"], ["mov~rax,<TAG>", "mov~rsi,rax", "mov~edi,0", "call~FOO", "nop", "add~rsp,0", "pop~rbx", "pop~rbp", "retn"]]], "func_feature": [8, 2, 13, 0, 8, 10, 1, 80, 0.19643, 4, 9], "succs": [[5], [6], [1, 3], [1, 4], [6], [2, 7], [5], []], "fname": "argmatch_valid", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.08333333333333333, ["mov     rax, [rbp+res]", "jmp     short locret_DCCD"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [2, 0, 3, 1, 1, 18, 0, 2, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+context], rdi", "mov     [rbp+arg], rsi", "mov     [rbp+arglist], rdx", "mov     [rbp+vallist], rcx", "mov     [rbp+valsize], r8", "mov     [rbp+exit_fn], r9", "mov     rcx, [rbp+valsize]; valsize", "mov     rdx, [rbp+vallist]; vallist", "mov     rsi, [rbp+arglist]; arglist", "mov     rax, [rbp+arg]", "mov     rdi, rax; arg", "call    argmatch", "mov     [rbp+res], rax", "cmp     [rbp+res], 0", "js      short loc_DC92"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~[rbp+0],r9", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "js~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 3, 15, 0, 3, 1, 1, 0.08333333333333333, ["mov     rdx, [rbp+res]; problem", "mov     rcx, [rbp+arg]", "mov     rax, [rbp+context]", "mov     rsi, rcx; value", "mov     rdi, rax; context", "call    argmatch_invalid", "mov     rdx, [rbp+valsize]; valsize", "mov     rcx, [rbp+vallist]", "mov     rax, [rbp+arglist]", "mov     rsi, rcx; vallist", "mov     rdi, rax; arglist", "call    argmatch_valid", "mov     rax, [rbp+exit_fn]", "call    rax", "mov     rax, 0FFFFFFFFFFFFFFFFh"], ["mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "call~rax", "mov~rax,0"]]], "func_feature": [4, 0, 6, 0, 4, 4, 7, 37, 0.04167, 0, 1], "succs": [[2], [0, 3], [], [2]], "fname": "__xargmatch_internal", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 6, 1, 0, 7, 1, 1, 0, 0, 0.3333333333333333, ["mov     rax, [rbp+i]", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+arglist]", "add     rax, rdx", "mov     rax, [rax]", "test    rax, rax", "jnz     short loc_DCF1"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [2, 0, 6, 1, 0, 9, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+value], rdi", "mov     [rbp+arglist], rsi", "mov     [rbp+vallist], rdx", "mov     [rbp+valsize], rcx", "mov     [rbp+i], 0", "jmp     short loc_DD39"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 6, 1, 0, 1, 0, 0, 3, 3, 0.06666666666666667, ["add     [rbp+i], 1"], ["add~[rbp+0],0"]], [0, 0, 1, 1, 0, 6, 0, 1, 3, 1, 0.03333333333333333, ["mov     rax, [rbp+i]", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+arglist]", "add     rax, rdx", "mov     rax, [rax]", "jmp     short locret_DD59"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "jmp~FOO"]], [0, 0, 6, 1, 1, 12, 1, 2, 2, 2, 0.16666666666666666, ["mov     rax, [rbp+valsize]", "imul    rax, [rbp+i]", "mov     rdx, rax", "mov     rax, [rbp+vallist]", "lea     rcx, [rdx+rax]", "mov     rdx, [rbp+valsize]; n", "mov     rax, [rbp+value]", "mov     rsi, rcx; s2", "mov     rdi, rax; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_DD34"], ["mov~rax,[rbp+0]", "imul~rax,[rbp+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "lea~rcx,<TAG>", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.1, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [1, 2, 5, 0, 7, 8, 0, 38, 0.1, 0, 5], "succs": [[4, 5], [0], [0], [6], [2, 3], [6], []], "fname": "argmatch_to_argument", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.07539682539682539, ["mov     eax, 1", "jmp     short loc_DD8D"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 1, 2, 0.06746031746031744, ["cmp     eax, 41h ; 'A'", "jge     short loc_DD81"], ["cmp~eax,0", "jge~FOO"]], [0, 0, 2, 0, 0, 1, 0, 1, 3, 2, 0.023809523809523808, ["jmp     short loc_DD81"], ["jmp~FOO"]], [1, 1, 3, 1, 0, 3, 0, 1, 1, 2, 0.05158730158730158, ["sub     eax, 61h ; 'a'", "cmp     eax, 19h", "ja      short loc_DD88"], ["sub~eax,0", "cmp~eax,<STR>", "ja~FOO"]], [1, 0, 7, 0, 0, 6, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "cmp     eax, 5Ah ; 'Z'", "jg      short loc_DD79"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "cmp~eax,0", "jg~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.04365079365079365, ["mov     eax, 0"], ["mov~eax,0"]], [2, 0, 4, 1, 0, 3, 0, 1, 2, 2, 0.07142857142857142, ["sub     eax, 30h ; '0'", "cmp     eax, 9", "ja      short loc_DD88"], ["sub~eax,0", "cmp~eax,0", "ja~FOO"]]], "func_feature": [0, 0, 6, 0, 8, 11, 2, 20, 0.04167, 0, 2], "succs": [[5], [0, 7], [0], [0, 6], [1, 3], [], [5], [2, 6]], "fname": "c_isalnum", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 4, 0, 0, 2, 0, 1, 0, 0, 0.1, ["cmp     eax, 5Ah ; 'Z'", "jle     short loc_DDAB"], ["cmp~eax,0", "jle~FOO"]], [1, 0, 5, 0, 0, 6, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "cmp     eax, 41h ; 'A'", "jl      short loc_DDB2"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "cmp~eax,0", "jl~FOO"]], [1, 1, 3, 1, 0, 3, 0, 1, 2, 2, 0.05, ["sub     eax, 61h ; 'a'", "cmp     eax, 19h", "ja      short loc_DDB2"], ["sub~eax,0", "cmp~eax,<STR>", "ja~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.07500000000000001, ["mov     eax, 1", "jmp     short loc_DDB7"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0.07500000000000001, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 0, 4, 0, 6, 8, 2, 16, 0.05, 0, 1], "succs": [[2, 3], [0, 4], [3, 4], [5], [5], []], "fname": "c_isalpha", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.08333333333333333, ["mov     eax, 1", "jmp     short loc_DDD7"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 3, 1, 0, 7, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "add     eax, 0", "cmp     eax, 7Fh", "ja      short loc_DDD2"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "add~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0.08333333333333333, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 12, 0.04167, 0, 1], "succs": [[3], [0, 2], [3], []], "fname": "c_isascii", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.125, ["mov     eax, 1", "jmp     short loc_DDF8"], ["mov~eax,0", "jmp~FOO"]], [0, 1, 4, 0, 0, 5, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "cmp     [rbp+c], 20h ; ' '", "jz      short loc_DDEC"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "cmp~[rbp+0],<STR>", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 2, 0.08333333333333333, ["cmp     [rbp+c], 9", "jnz     short loc_DDF3"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.041666666666666664, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 0, 0, 0, 3, 1, 0, 2, 0, 0.0, ["and     eax, 1", "pop     rbp", "retn"], ["and~eax,0", "pop~rbp", "retn"]]], "func_feature": [0, 1, 3, 0, 5, 6, 0, 13, 0.05, 0, 0], "succs": [[4], [0, 2], [0, 3], [4], []], "fname": "c_isblank", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 0, 0.07500000000000001, ["mov     eax, 1", "jmp     short loc_DE21"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0.07500000000000001, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 5, 0, 0, 6, 1, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "test    eax, eax", "js      short loc_DE1C"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "test~eax,eax", "js~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 1, 0, 0.1, ["cmp     eax, 1Fh", "jle     short loc_DE15"], ["cmp~eax,0", "jle~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 0, 0.05, ["cmp     eax, 7Fh", "jnz     short loc_DE1C"], ["cmp~eax,0", "jnz~FOO"]]], "func_feature": [0, 1, 4, 0, 6, 8, 0, 15, 0.05, 0, 0], "succs": [[], [0], [0], [2, 4], [1, 5], [1, 2]], "fname": "c_iscntrl", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.08333333333333333, ["mov     eax, 1", "jmp     short loc_DE41"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 3, 1, 0, 7, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "sub     eax, 30h ; '0'", "cmp     eax, 9", "ja      short loc_DE3C"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0.08333333333333333, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 0, 2, 0, 4, 4, 7, 12, 0.04167, 0, 1], "succs": [[3], [0, 2], [3], []], "fname": "c_isdigit", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.08333333333333333, ["mov     eax, 1", "jmp     short loc_DE61"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 3, 1, 0, 7, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "sub     eax, 21h ; '!'", "cmp     eax, 5Dh ; ']'", "ja      short loc_DE5C"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0.08333333333333333, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 12, 0.04167, 0, 1], "succs": [[3], [0, 2], [3], []], "fname": "c_isgraph", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.08333333333333333, ["mov     eax, 1", "jmp     short loc_DE81"], ["mov~eax,0", "jmp~FOO"]], [1, 1, 3, 1, 0, 7, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "sub     eax, 61h ; 'a'", "cmp     eax, 19h", "ja      short loc_DE7C"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "sub~eax,0", "cmp~eax,<STR>", "ja~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0.08333333333333333, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 12, 0.04167, 0, 1], "succs": [[3], [0, 2], [3], []], "fname": "c_islower", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.08333333333333333, ["mov     eax, 1", "jmp     short loc_DEA1"], ["mov~eax,0", "jmp~FOO"]], [1, 1, 3, 1, 0, 7, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "sub     eax, 20h ; ' '", "cmp     eax, 5Eh ; '^'", "ja      short loc_DE9C"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "sub~eax,<STR>", "cmp~eax,0", "ja~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0.08333333333333333, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 12, 0.04167, 0, 1], "succs": [[3], [0, 2], [3], []], "fname": "c_isprint", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 0, 0.05555555555555555, ["mov     eax, 1", "jmp     short loc_DEDF"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 0, 0.041666666666666664, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 5, 0, 0, 2, 0, 1, 1, 0, 0.048611111111111105, ["cmp     eax, 5Bh ; '['", "jl      short loc_DEDA"], ["cmp~eax,0", "jl~FOO"]], [1, 0, 9, 0, 0, 6, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "cmp     eax, 40h ; '@'", "jg      short loc_DEC1"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "cmp~eax,0", "jg~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 2, 0, 0.041666666666666664, ["cmp     eax, 60h ; '`'", "jle     short loc_DED3"], ["cmp~eax,0", "jle~FOO"]], [2, 0, 3, 1, 0, 3, 0, 1, 3, 0, 0.013888888888888888, ["sub     eax, 7Bh ; '{'", "cmp     eax, 3", "ja      short loc_DEDA"], ["sub~eax,0", "cmp~eax,0", "ja~FOO"]], [0, 1, 5, 0, 0, 2, 0, 1, 1, 0, 0.048611111111111105, ["cmp     eax, 3Ah ; ':'", "jge     short loc_DED3"], ["cmp~eax,<STR>", "jge~FOO"]], [0, 0, 2, 0, 0, 1, 0, 1, 3, 0, 0.013888888888888888, ["jmp     short loc_DED3"], ["jmp~FOO"]], [2, 0, 4, 1, 0, 3, 0, 1, 2, 0, 0.041666666666666664, ["sub     eax, 21h ; '!'", "cmp     eax, 0Eh", "ja      short loc_DEDA"], ["sub~eax,0", "cmp~eax,0", "ja~FOO"]]], "func_feature": [0, 0, 8, 0, 10, 15, 0, 24, 0.03056, 0, 2], "succs": [[], [0], [0], [2, 5], [3, 7], [1, 6], [1, 2], [1, 9], [1], [8, 2]], "fname": "c_ispunct", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.07500000000000001, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 5, 0, 0, 6, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "cmp     eax, 9", "jl      short loc_DF01"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "cmp~eax,0", "jl~FOO"]], [0, 1, 3, 0, 0, 2, 0, 1, 2, 2, 0.05, ["cmp     eax, 20h ; ' '", "jnz     short loc_DF01"], ["cmp~eax,<STR>", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.07500000000000001, ["mov     eax, 1", "jmp     short loc_DF06"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 1, 2, 0.1, ["cmp     eax, 0Dh", "jle     short loc_DEFA"], ["cmp~eax,0", "jle~FOO"]]], "func_feature": [0, 0, 4, 0, 6, 8, 0, 15, 0.05, 0, 0], "succs": [[3], [0, 5], [0, 4], [], [3], [2, 4]], "fname": "c_isspace", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 1, 3, 1, 0, 7, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "sub     eax, 41h ; 'A'", "cmp     eax, 19h", "ja      short loc_DF21"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "sub~eax,0", "cmp~eax,<STR>", "ja~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.08333333333333333, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.08333333333333333, ["mov     eax, 1", "jmp     short loc_DF26"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 12, 0.04167, 0, 1], "succs": [[1, 3], [2], [], [2]], "fname": "c_isupper", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 1, 4, 1, 0, 7, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "sub     eax, 30h ; '0'; switch 55 cases", "cmp     eax, 36h ; '6'", "ja      short loc_DF64; jumptable 000000000000DF5B default case"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "sub~eax,0", "cmp~eax,<STR>", "ja~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.041666666666666664, ["mov     eax, 1; jumptable 000000000000DF5B cases 48-57,65-70,97-102", "jmp     short loc_DF69"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 3, 1, 0, 8, 0, 1, 0, 2, 0.08333333333333333, ["mov     eax, eax", "lea     rdx, ds:0[rax*4]", "lea     rax, off_1F6CC", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_1F6CC", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,eax", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.125, ["mov     eax, 0; jumptable 000000000000DF5B default case"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 0, 3, 0, 5, 6, 0, 20, 0.05, 1, 2], "succs": [[2, 3], [4], [1, 3], [4], []], "fname": "c_isxdigit", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [0, 1, 1, 1, 0, 3, 0, 1, 1, 0, 0.08333333333333333, ["mov     eax, [rbp+c]", "add     eax, 20h ; ' '", "jmp     short loc_DF88"], ["mov~eax,[rbp+0]", "add~eax,<STR>", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0.08333333333333333, ["mov     eax, [rbp+c]"], ["mov~eax,[rbp+0]"]], [1, 1, 3, 1, 0, 7, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "sub     eax, 41h ; 'A'", "cmp     eax, 19h", "ja      short loc_DF85"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "sub~eax,0", "cmp~eax,<STR>", "ja~FOO"]]], "func_feature": [0, 0, 2, 0, 4, 4, 4, 13, 0.04167, 0, 2], "succs": [[], [0], [0], [1, 2]], "fname": "c_tolower", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [0, 1, 1, 1, 0, 3, 0, 1, 1, 0, 0.08333333333333333, ["mov     eax, [rbp+c]", "sub     eax, 20h ; ' '", "jmp     short loc_DFA7"], ["mov~eax,[rbp+0]", "sub~eax,<STR>", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0.08333333333333333, ["mov     eax, [rbp+c]"], ["mov~eax,[rbp+0]"]], [1, 1, 3, 1, 0, 7, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "sub     eax, 61h ; 'a'", "cmp     eax, 19h", "ja      short loc_DFA4"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "sub~eax,0", "cmp~eax,<STR>", "ja~FOO"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 13, 0.04167, 0, 2], "succs": [[], [0], [0], [1, 2]], "fname": "c_toupper", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 5, 1, 2, 13, 0, 3, 0, 0, 0.16666666666666666, ["movzx   eax, byte ptr [p1]", "movzx   eax, al", "mov     edi, eax; c", "call    c_tolower", "mov     [rbp+c1], al", "movzx   eax, byte ptr [p2]", "movzx   eax, al", "mov     edi, eax; c", "call    c_tolower", "mov     [rbp+c2], al", "sub     [rbp+n], 1", "cmp     [rbp+n], 0", "jz      short loc_E020"], ["movzx~eax,<TAG>", "movzx~eax,al", "mov~edi,eax", "call~FOO", "mov~[rbp+0],al", "movzx~eax,<TAG>", "movzx~eax,al", "mov~edi,eax", "call~FOO", "mov~[rbp+0],al", "sub~[rbp+0],0", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 1, 2, 0.09523809523809523, ["cmp     [rbp+n], 0", "jnz     short loc_DFDB"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 5, 2, 0, 5, 0, 1, 4, 2, 0.023809523809523808, ["add     p1, 1", "add     p2, 1", "movzx   eax, [rbp+c1]", "cmp     al, [rbp+c2]", "jz      short loc_DFDB"], ["add~p1,0", "add~p2,0", "movzx~eax,[rbp+0]", "cmp~al,[rbp+0]", "jz~FOO"]], [0, 0, 1, 1, 0, 4, 0, 0, 3, 1, 0.07142857142857142, ["movzx   edx, [rbp+c1]", "movzx   eax, [rbp+c2]", "sub     edx, eax", "mov     eax, edx"], ["movzx~edx,[rbp+0]", "movzx~eax,[rbp+0]", "sub~edx,eax", "mov~eax,edx"]], [1, 0, 5, 0, 0, 2, 0, 1, 3, 2, 0.07142857142857142, ["cmp     [rbp+c1], 0", "jz      short loc_E020"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 7, 1, 0, 12, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "push    p1", "push    p2", "sub     rsp, 30h", "mov     [rbp+s1], rdi", "mov     [rbp+s2], rsi", "mov     [rbp+n], rdx", "mov     p1, [rbp+s1]", "mov     p2, [rbp+s2]", "cmp     p1, p2", "jz      short loc_DFD4"], ["push~rbp", "mov~rbp,rsp", "push~p1", "push~p2", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~p1,[rbp+0]", "mov~p2,[rbp+0]", "cmp~p1,p2", "jz~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 2, 0, 0.0, ["add     rsp, 30h", "pop     p2", "pop     p1", "pop     rbp", "retn"], ["add~rsp,0", "pop~p2", "pop~p1", "pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.047619047619047616, ["mov     eax, 0", "jmp     short loc_E02C"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [2, 0, 8, 0, 8, 12, 1, 45, 0.05952, 0, 6], "succs": [[3, 4], [0, 7], [0, 3], [6], [2, 3], [1, 7], [], [6]], "fname": "c_strncasecmp", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 3, 0, 1, 9, 1, 2, 0, 0, 0.2, ["mov     rax, [rbp+ht]", "mov     rax, [rax]", "mov     rdx, [rbp+st]; stats", "mov     rcx, [rbp+filename]", "mov     rsi, rcx; file", "mov     rdi, rax; ht", "call    seen_file", "test    al, al", "jz      short loc_E0C9"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 6, 1, 0, 10, 1, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+ht], rdi", "mov     [rbp+filename], rsi", "mov     [rbp+st], rdx", "mov     rax, [rbp+ht]", "mov     rax, [rax]", "test    rax, rax", "jnz     short loc_E0A4"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [2, 0, 5, 0, 1, 17, 1, 2, 1, 3, 0.03333333333333333, ["mov     [rbp+initial_capacity], 7", "mov     rax, [rbp+initial_capacity]", "lea     rdx, triple_free", "mov     r8, rdx; data_freer", "lea     rdx, triple_compare_ino_str", "mov     rcx, rdx; comparator", "lea     rdx, triple_hash; hasher", "mov     esi, 0; tuning", "mov     rdi, rax; candidate", "call    hash_initialize", "mov     rdx, rax", "mov     rax, [rbp+ht]", "mov     [rax], rdx", "mov     rax, [rbp+ht]", "mov     rax, [rax]", "test    rax, rax", "jnz     short loc_E0A4"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~r8,rdx", "lea~rdx,<TAG>", "mov~rcx,rdx", "lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [1, 0, 1, 0, 1, 8, 0, 1, 2, 1, 0.05, ["mov     rax, [rbp+ht]", "mov     rax, [rax]", "mov     rdx, [rbp+st]; stats", "mov     rcx, [rbp+filename]", "mov     rsi, rcx; file", "mov     rdi, rax; ht", "call    record_file", "mov     eax, 0"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~eax,0"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.05, ["mov     eax, 1", "jmp     short locret_E0E8"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [4, 3, 8, 0, 7, 8, 1, 49, 0.04762, 3, 1], "succs": [[3, 4], [0, 2], [0, 6], [5], [5], [], []], "fname": "seen_triple", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 10, 1, 0, 6, 0, 0, 0, 0, 0.06891089108910892, ["mov     rax, [rbp+prefix_len]", "lea     rdx, [rax+1]", "mov     rax, [rbp+rname]", "add     rax, rdx", "cmp     [rbp+dest], rax", "jbe     short loc_EA73"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "cmp~[rbp+0],rax", "jbe~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 7, 6, 0.06702970297029703, ["jmp     short loc_EA3B"], ["jmp~FOO"]], [0, 0, 11, 0, 0, 1, 0, 0, 11, 6, 0.0076237623762376245, ["nop"], ["nop"]], [1, 0, 6, 0, 0, 3, 0, 1, 22, 4, 0.0017821782178217822, ["mov     [rbp+saved_errno], 14h", "nop", "jmp     error"], ["mov~[rbp+0],0", "nop", "jmp~FOO"]], [1, 0, 86, 0, 0, 2, 0, 1, 21, 5, 0.008811881188118813, ["cmp     [rbp+can_mode], 2", "jz      short loc_EA18"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 86, 0, 0, 2, 0, 1, 16, 9, 0.05504950495049505, ["nop", "jmp     short loc_EA18"], ["nop", "jmp~FOO"]], [0, 0, 86, 1, 0, 6, 0, 0, 15, 10, 0.0502970297029703, ["mov     rax, [rbp+prefix_len]", "lea     rdx, [rax+1]", "mov     rax, [rbp+rname]", "add     rax, rdx", "cmp     [rbp+dest], rax", "jbe     loc_EA11"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "cmp~[rbp+0],rax", "jbe~FOO"]], [0, 0, 86, 0, 0, 3, 0, 0, 17, 10, 0.038514851485148514, ["mov     rax, [rbp+dest]", "cmp     rax, [rbp+rname]", "jbe     loc_EA11"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jbe~FOO"]], [0, 0, 86, 0, 0, 1, 0, 1, 19, 10, 0.008118811881188119, ["jmp     loc_EA11"], ["jmp~FOO"]], [0, 0, 86, 0, 0, 2, 0, 1, 21, 9, 0.013267326732673269, ["nop", "jmp     short loc_EA18"], ["nop", "jmp~FOO"]], [1, 0, 86, 0, 0, 2, 0, 1, 20, 5, 0.023366336633663366, ["cmp     [rbp+can_mode], 2", "jz      loc_EA14"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 86, 0, 0, 1, 0, 0, 23, 9, 0.02118811881188119, ["nop"], ["nop"]], [1, 0, 86, 0, 1, 4, 0, 2, 22, 5, 0.02108910891089109, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 0Ch", "jnz     loc_EA17"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [0, 0, 86, 0, 0, 2, 0, 0, 13, 8, 0.34574257425742577, ["mov     rax, [rbp+end]", "mov     [rbp+start], rax"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [1, 0, 86, 0, 0, 4, 0, 1, 12, 9, 0.007227722772277228, ["mov     rax, [rbp+start]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Eh ; '.'", "jz      loc_EA18"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [0, 0, 86, 0, 0, 1, 0, 1, 23, 9, 0.019653465346534654, ["jmp     loc_EA18"], ["jmp~FOO"]], [0, 0, 86, 0, 1, 4, 0, 2, 25, 9, 0.10178217821782179, ["mov     rax, [rbp+buf]", "mov     rdi, rax; ptr", "call    free", "jmp     short loc_EA18"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [2, 0, 86, 0, 0, 4, 1, 1, 19, 7, 0.09034653465346536, ["mov     eax, [rbp+st.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_EA18"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 86, 0, 0, 4, 1, 1, 20, 6, 0.015643564356435644, ["mov     rax, [rbp+end]", "movzx   eax, byte ptr [rax]", "test    al, al", "jz      short loc_EA18"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 86, 1, 0, 6, 0, 1, 12, 12, 0.3555445544554456, ["mov     rdx, [rbp+end]", "mov     rax, [rbp+start]", "sub     rdx, rax", "mov     rax, rdx", "cmp     rax, 2", "jnz     short loc_E4AB"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "cmp~rax,0", "jnz~FOO"]], [1, 0, 86, 1, 0, 6, 0, 1, 11, 10, 0.3634653465346535, ["mov     rdx, [rbp+end]", "mov     rax, [rbp+start]", "sub     rdx, rax", "mov     rax, rdx", "cmp     rax, 1", "jnz     short loc_E412"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "cmp~rax,0", "jnz~FOO"]], [0, 0, 86, 0, 0, 4, 1, 1, 6, 7, 0.44722772277227724, ["mov     rax, [rbp+start]", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     loc_E38D"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [1, 0, 86, 0, 0, 4, 0, 1, 7, 8, 0.033762376237623765, ["mov     rax, [rbp+name]", "mov     [rbp+start], rax", "mov     [rbp+prefix_len], 0", "jmp     loc_EA26"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 86, 1, 0, 9, 0, 1, 5, 8, 0.049900990099009904, ["mov     rax, [rbp+dest]", "lea     rdx, [rax+1]", "mov     [rbp+dest], rdx", "mov     byte ptr [rax], 2Fh ; '/'", "mov     rdx, [rbp+name]", "mov     rax, [rbp+prefix_len]", "add     rax, rdx", "mov     [rbp+start], rax", "jmp     loc_EA26"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~<TAG>,0", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 2, 86, 2, 1, 13, 0, 2, 22, 12, 0.038564356435643564, ["mov     rdx, [rbp+n]", "mov     rax, [rbp+len]", "add     rax, rdx", "add     rax, 1", "mov     edx, 1000h", "cmp     rax, 1000h", "cmovb   rax, rdx", "mov     [rbp+extra_len], rax", "mov     rax, [rbp+extra_len]", "mov     rdi, rax; n", "call    xmalloc", "mov     [rbp+extra_buf], rax", "jmp     short loc_E892"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "add~rax,0", "mov~edx,<STR>", "cmp~rax,<STR>", "cmovb~rax,rdx", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 86, 0, 2, 10, 0, 3, 21, 13, 0.0914851485148515, ["mov     rax, [rbp+buf]", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+n], rax", "mov     rax, [rbp+end]", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+len], rax", "cmp     [rbp+extra_len], 0", "jnz     short loc_E838"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 86, 0, 0, 4, 0, 1, 13, 12, 0.05920792079207921, ["mov     rax, [rbp+start]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Eh ; '.'", "jnz     short loc_E4AB"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [0, 0, 86, 0, 0, 4, 0, 1, 10, 7, 0.378019801980198, ["mov     rdx, [rbp+end]", "mov     rax, [rbp+start]", "cmp     rdx, rax", "jz      loc_EA3A"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "cmp~rdx,rax", "jz~FOO"]], [2, 0, 86, 3, 1, 20, 0, 2, 15, 9, 0.30554455445544554, ["mov     rdx, [rbp+end]", "mov     rax, [rbp+start]", "sub     rdx, rax", "mov     rax, rdx", "mov     rdx, rax; n", "mov     rcx, [rbp+start]", "mov     rax, [rbp+dest]", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    _memcpy", "mov     [rbp+dest], rax", "mov     rdx, [rbp+end]", "mov     rax, [rbp+start]", "sub     rdx, rax", "mov     rax, rdx", "add     [rbp+dest], rax", "mov     rax, [rbp+dest]", "mov     byte ptr [rax], 0", "cmp     [rbp+logical], 0", "jz      short loc_E65C"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "mov~rdx,rax", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "add~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~<TAG>,0", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 86, 2, 0, 9, 0, 1, 14, 10, 0.30158415841584163, ["mov     rdx, [rbp+end]", "mov     rax, [rbp+start]", "sub     rdx, rax", "mov     rax, rdx", "mov     rdx, rax", "mov     rax, [rbp+dest]", "add     rax, rdx", "cmp     [rbp+rname_limit], rax", "ja      loc_E5DF"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "cmp~[rbp+0],rax", "ja~FOO"]], [0, 0, 86, 2, 1, 14, 0, 1, 17, 10, 0.024752475247524754, ["mov     rdx, [rbp+new_size]", "mov     rax, [rbp+rname]", "mov     rsi, rdx; n", "mov     rdi, rax; p", "call    xrealloc", "mov     [rbp+rname], rax", "mov     rdx, [rbp+rname]", "mov     rax, [rbp+new_size]", "add     rax, rdx", "mov     [rbp+rname_limit], rax", "mov     rdx, [rbp+dest_offset]", "mov     rax, [rbp+rname]", "add     rax, rdx", "mov     [rbp+dest], rax"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax"]], [2, 0, 86, 1, 0, 5, 0, 1, 14, 11, 0.05465346534653466, ["mov     rax, [rbp+start]", "add     rax, 1", "movzx   eax, byte ptr [rax]", "cmp     al, 2Eh ; '.'", "jnz     short loc_E4AB"], ["mov~rax,[rbp+0]", "add~rax,0", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [1, 0, 86, 0, 0, 2, 0, 1, 16, 9, 0.20821782178217824, ["cmp     [rbp+can_mode], 2", "jnz     short loc_E65C"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 1, 89, 2, 0, 18, 0, 1, 5, 10, 0.009702970297029703, ["mov     rax, [rbp+rname]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     rdx, rax", "mov     eax, 0", "mov     rdi, rdx", "repne scasb", "mov     rax, rcx", "not     rax", "lea     rdx, [rax-1]", "mov     rax, [rbp+rname]", "add     rax, rdx", "mov     [rbp+dest], rax", "mov     rdx, [rbp+dest]", "mov     rax, [rbp+rname]", "sub     rdx, rax", "mov     rax, rdx", "cmp     rax, 0FFFh", "jg      short loc_E2BC"], ["mov~rax,[rbp+0]", "mov~rcx,0", "mov~rdx,rax", "mov~eax,0", "mov~rdi,rdx", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "lea~rdx,[rax-1]+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "cmp~rax,<STR>", "jg~FOO"]], [1, 0, 91, 0, 1, 4, 0, 2, 4, 3, 0.0022772277227722775, ["call    xgetcwd", "mov     [rbp+rname], rax", "cmp     [rbp+rname], 0", "jnz     short loc_E203"], ["call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 86, 2, 0, 6, 0, 0, 22, 12, 0.046089108910891095, ["mov     rdx, [rbp+n]", "mov     rax, [rbp+len]", "add     rax, rdx", "add     rax, 1", "cmp     [rbp+extra_len], rax", "jnb     short loc_E892"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "add~rax,0", "cmp~[rbp+0],rax", "jnb~FOO"]], [1, 0, 86, 0, 0, 2, 0, 1, 17, 8, 0.20752475247524754, ["mov     [rbp+st.st_mode], 0", "jmp     loc_E714"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 86, 0, 0, 2, 0, 1, 16, 8, 0.09198019801980199, ["cmp     [rbp+logical], 0", "jz      short loc_E685"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 9, 1, 0, 5, 0, 1, 9, 5, 0.00801980198019802, ["mov     rax, [rbp+dest]", "sub     rax, 1", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jnz     short loc_EA73"], ["mov~rax,[rbp+0]", "sub~rax,0", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [1, 0, 8, 1, 0, 1, 0, 0, 10, 5, 0.0, ["sub     [rbp+dest], 1"], ["sub~[rbp+0],0"]], [1, 0, 86, 1, 0, 2, 0, 1, 16, 11, 0.02920792079207921, ["sub     [rbp+dest], 1", "jmp     short loc_E480"], ["sub~[rbp+0],0", "jmp~FOO"]], [1, 0, 86, 1, 0, 1, 0, 0, 19, 11, 9.900990099009902e-05, ["sub     [rbp+dest], 1"], ["sub~[rbp+0],0"]], [2, 0, 86, 1, 0, 5, 0, 1, 18, 11, 0.01504950495049505, ["mov     rax, [rbp+dest]", "sub     rax, 1", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jnz     short loc_E478"], ["mov~rax,[rbp+0]", "sub~rax,0", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [0, 0, 86, 0, 1, 8, 1, 2, 17, 7, 0.04257425742574258, ["lea     rdx, [rbp+st]", "mov     rax, [rbp+rname]", "mov     rsi, rdx; stat_buf", "mov     rdi, rax; filename", "call    stat_0", "test    eax, eax", "setnz   al", "jmp     short loc_E6A3"], ["lea~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "test~eax,eax", "setnz~al", "jmp~FOO"]], [1, 0, 86, 2, 1, 11, 0, 1, 23, 12, 0.0, ["mov     rdx, [rbp+n]", "mov     rax, [rbp+len]", "add     rax, rdx", "add     rax, 1", "mov     [rbp+extra_len], rax", "mov     rdx, [rbp+extra_len]", "mov     rax, [rbp+extra_buf]", "mov     rsi, rdx; n", "mov     rdi, rax; p", "call    xrealloc", "mov     [rbp+extra_buf], rax"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "add~rax,0", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax"]], [2, 0, 7, 1, 0, 6, 0, 1, 9, 4, 0.04722772277227723, ["mov     rax, [rbp+dest]", "mov     byte ptr [rax], 0", "mov     rax, [rbp+dest]", "add     rax, 1", "cmp     [rbp+rname_limit], rax", "jz      short loc_EAC5"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~rax,[rbp+0]", "add~rax,0", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 0, 86, 0, 1, 7, 1, 1, 17, 7, 0.04257425742574258, ["lea     rdx, [rbp+st]", "mov     rax, [rbp+rname]", "mov     rsi, rdx; stat_buf", "mov     rdi, rax; filename", "call    lstat", "test    eax, eax", "setnz   al"], ["lea~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "test~eax,eax", "setnz~al"]], [0, 0, 86, 0, 0, 2, 1, 1, 18, 6, 0.09435643564356436, ["test    al, al", "jz      short loc_E714"], ["test~al,al", "jz~FOO"]], [0, 2, 87, 3, 1, 19, 0, 2, 6, 9, 0.008663366336633664, ["mov     rax, [rbp+rname]", "mov     esi, 1000h; n", "mov     rdi, rax; p", "call    xrealloc", "mov     [rbp+p], rax", "mov     rdx, [rbp+dest]", "mov     rax, [rbp+rname]", "sub     rdx, rax", "mov     rax, rdx", "mov     rdx, rax", "mov     rax, [rbp+p]", "add     rax, rdx", "mov     [rbp+dest], rax", "mov     rax, [rbp+p]", "mov     [rbp+rname], rax", "mov     rax, [rbp+rname]", "add     rax, 1000h", "mov     [rbp+rname_limit], rax", "jmp     short loc_E2CA"], ["mov~rax,[rbp+0]", "mov~esi,<STR>", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~[rbp+0],rax", "jmp~FOO"]], [2, 0, 86, 1, 0, 5, 0, 1, 13, 11, 0.30000000000000004, ["mov     rax, [rbp+dest]", "sub     rax, 1", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jz      short loc_E4D2"], ["mov~rax,[rbp+0]", "sub~rax,0", "movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [1, 0, 6, 2, 1, 11, 0, 1, 10, 4, 0.0, ["mov     rdx, [rbp+dest]", "mov     rax, [rbp+rname]", "sub     rdx, rax", "mov     rax, rdx", "add     rax, 1", "mov     rdx, rax", "mov     rax, [rbp+rname]", "mov     rsi, rdx; n", "mov     rdi, rax; p", "call    xrealloc", "mov     [rbp+rname], rax"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "add~rax,0", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax"]], [0, 0, 87, 0, 0, 2, 0, 0, 6, 9, 0.008663366336633664, ["mov     rax, [rbp+dest]", "mov     [rbp+rname_limit], rax"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [1, 0, 86, 0, 0, 2, 0, 1, 20, 6, 0.037029702970297035, ["cmp     [rbp+can_mode], 1", "jnz     short loc_E70A"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 86, 0, 1, 5, 0, 2, 19, 5, 0.06712871287128713, ["call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+saved_errno], eax", "cmp     [rbp+can_mode], 0", "jz      loc_EAF8"], ["call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 86, 0, 0, 4, 0, 0, 14, 11, 0.0, ["mov     rax, [rbp+dest]", "lea     rdx, [rax+1]", "mov     [rbp+dest], rdx", "mov     byte ptr [rax], 2Fh ; '/'"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~<TAG>,0"]], [0, 0, 5, 0, 1, 6, 1, 2, 10, 3, 0.03178217821782178, ["mov     rax, [rbp+extra_buf]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+ht]", "test    rax, rax", "jz      short loc_EAEF"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 4, 0, 1, 3, 0, 1, 11, 3, 0.0, ["mov     rax, [rbp+ht]", "mov     rdi, rax; table", "call    hash_free"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO"]], [0, 0, 86, 1, 1, 10, 1, 2, 21, 5, 0.02014851485148515, ["mov     rax, [rbp+end]", "lea     rsi, accept; \"/\"", "mov     rdi, rax; s", "call    _strspn", "mov     rdx, rax", "mov     rax, [rbp+end]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     loc_EAF8"], ["mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 11, 2, 0.015544554455445546, ["mov     rax, [rbp+rname]", "jmp     short loc_EB47"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 20, 4, 0.02524752475247525, ["nop"], ["nop"]], [1, 0, 86, 0, 0, 2, 0, 1, 22, 5, 0.019554455445544554, ["cmp     [rbp+saved_errno], 2", "jnz     loc_EAF8"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 86, 1, 2, 22, 0, 3, 23, 11, 0.09465346534653465, ["mov     rax, [rbp+len]", "lea     rdx, [rax+1]; n", "mov     rcx, [rbp+extra_buf]", "mov     rax, [rbp+n]", "add     rcx, rax", "mov     rax, [rbp+end]", "mov     rsi, rax; src", "mov     rdi, rcx; dest", "call    _memmove", "mov     rdx, [rbp+n]; n", "mov     rcx, [rbp+buf]", "mov     rax, [rbp+extra_buf]", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    _memcpy", "mov     [rbp+end], rax", "mov     rax, [rbp+end]", "mov     [rbp+name], rax", "mov     rax, [rbp+buf]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jnz     short loc_E975"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "add~rcx,rax", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,rcx", "call~FOO", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [1, 0, 86, 0, 0, 1, 0, 0, 21, 8, 0.01004950495049505, ["mov     [rbp+st.st_mode], 0"], ["mov~[rbp+0],0"]], [2, 0, 86, 0, 0, 3, 0, 1, 24, 11, 0.014950495049504952, ["mov     [rbp+pfxlen], 0", "cmp     [rbp+pfxlen], 0", "jz      short loc_E938"], ["mov~[rbp+0],0", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 5, 0, 2, 9, 1, 3, 21, 3, 0.02623762376237624, ["mov     rax, [rbp+extra_buf]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+rname]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+ht]", "test    rax, rax", "jz      short loc_EB32"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 21, 4, 0.0031683168316831685, ["mov     [rbp+saved_errno], 28h ; '('", "jmp     error"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 6, 0, 1, 4, 0, 2, 22, 4, 0.0017821782178217822, ["call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+saved_errno], eax", "jmp     error"], ["call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 2, 88, 1, 1, 10, 0, 2, 4, 9, 0.033663366336633666, ["mov     edi, 1000h; n", "call    xmalloc", "mov     [rbp+rname], rax", "mov     rax, [rbp+rname]", "add     rax, 1000h", "mov     [rbp+rname_limit], rax", "mov     rax, [rbp+rname]", "mov     [rbp+dest], rax", "cmp     [rbp+prefix_len], 0", "jz      short loc_E353"], ["mov~edi,<STR>", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 95, 0, 0, 5, 0, 1, 3, 4, 0.02732673267326733, ["mov     [rbp+prefix_len], 0", "mov     rax, [rbp+name]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jz      loc_E2E8"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [2, 0, 86, 0, 0, 4, 1, 1, 18, 7, 0.2548019801980198, ["mov     eax, [rbp+st.st_mode]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_E9D8"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [0, 0, 4, 0, 1, 3, 0, 1, 22, 3, 0.0, ["mov     rax, [rbp+ht]", "mov     rdi, rax; table", "call    hash_free"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO"]], [0, 0, 86, 0, 1, 6, 0, 1, 25, 11, 0.0, ["mov     rdx, [rbp+pfxlen]; n", "mov     rcx, [rbp+buf]", "mov     rax, [rbp+rname]", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    _memcpy"], ["mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [1, 0, 3, 0, 1, 5, 0, 1, 22, 2, 0.010594059405940595, ["call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+saved_errno]", "mov     [rdx], eax", "mov     eax, 0"], ["call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "mov~eax,0"]], [0, 0, 86, 0, 1, 8, 1, 2, 19, 6, 0.15762376237623762, ["lea     rdx, [rbp+st]; st", "mov     rcx, [rbp+name]", "lea     rax, [rbp+ht]", "mov     rsi, rcx; filename", "mov     rdi, rax; ht", "call    seen_triple", "test    al, al", "jz      short loc_E76A"], ["lea~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "lea~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "test~al,al", "jz~FOO"]], [1, 1, 86, 4, 0, 17, 0, 1, 15, 12, 0.02237623762376238, ["mov     rdx, [rbp+dest]", "mov     rax, [rbp+rname]", "sub     rdx, rax", "mov     rax, rdx", "mov     [rbp+dest_offset], rax", "mov     rdx, [rbp+rname_limit]", "mov     rax, [rbp+rname]", "sub     rdx, rax", "mov     rax, rdx", "mov     [rbp+new_size], rax", "mov     rdx, [rbp+end]", "mov     rax, [rbp+start]", "sub     rdx, rax", "mov     rax, rdx", "add     rax, 1", "cmp     rax, 1000h", "jle     short loc_E584"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "add~rax,0", "cmp~rax,<STR>", "jle~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.019603960396039604, ["mov     rsi, [rbp+var_8]", "xor     rsi, fs:28h", "jz      short locret_EB5B"], ["mov~rsi,[rbp+0]", "xor~rsi,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [8, 0, 101, 2, 0, 25, 7, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 140h", "mov     [rbp+name], rdi", "mov     [rbp+can_mode], esi", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     [rbp+extra_buf], 0", "mov     [rbp+extra_len], 0", "mov     [rbp+ht], 0", "mov     eax, [rbp+can_mode]", "and     eax, 0FFFFFFFCh", "mov     [rbp+can_flags], eax", "mov     eax, [rbp+can_flags]", "and     eax, 4", "test    eax, eax", "setnz   al", "mov     [rbp+logical], al", "and     [rbp+can_mode], 3", "mov     eax, [rbp+can_mode]", "sub     eax, 1", "and     eax, [rbp+can_mode]", "test    eax, eax", "jz      short loc_E184"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~eax,[rbp+0]", "and~eax,0", "mov~[rbp+0],eax", "mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "setnz~al", "mov~[rbp+0],al", "and~[rbp+0],0", "mov~eax,[rbp+0]", "sub~eax,0", "and~eax,[rbp+0]", "test~eax,eax", "jz~FOO"]], [1, 0, 86, 1, 0, 11, 0, 1, 25, 10, 0.016534653465346535, ["mov     rdx, [rbp+rname]", "mov     rax, [rbp+pfxlen]", "add     rax, rdx", "mov     [rbp+dest], rax", "mov     rax, [rbp+dest]", "lea     rdx, [rax+1]", "mov     [rbp+dest], rdx", "mov     byte ptr [rax], 2Fh ; '/'", "mov     rax, [rbp+pfxlen]", "mov     [rbp+prefix_len], rax", "jmp     short loc_E9C7"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~<TAG>,0", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [2, 0, 3, 0, 1, 4, 0, 2, 1, 2, 0.0002970297029702971, ["call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     eax, 0", "jmp     loc_EB47"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 87, 1, 1, 8, 0, 1, 5, 9, 0.0, ["mov     rdx, [rbp+prefix_len]; n", "mov     rcx, [rbp+name]", "mov     rax, [rbp+rname]", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    _memcpy", "mov     rax, [rbp+prefix_len]", "add     [rbp+dest], rax"], ["mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "add~[rbp+0],rax"]], [1, 0, 86, 3, 0, 10, 0, 1, 16, 11, 0.007772277227722773, ["mov     rdx, [rbp+end]", "mov     rax, [rbp+start]", "sub     rdx, rax", "mov     rax, rdx", "mov     rdx, rax", "mov     rax, [rbp+new_size]", "add     rax, rdx", "add     rax, 1", "mov     [rbp+new_size], rax", "jmp     short loc_E58F"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "add~rax,0", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 1, 86, 1, 0, 1, 0, 0, 16, 11, 0.007772277227722773, ["add     [rbp+new_size], 1000h"], ["add~[rbp+0],<STR>"]], [1, 0, 86, 1, 0, 1, 0, 0, 8, 11, 0.0, ["add     [rbp+start], 1"], ["add~[rbp+0],0"]], [1, 0, 86, 0, 0, 4, 0, 1, 7, 10, 0.3816831683168317, ["mov     rax, [rbp+start]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jz      short loc_E385"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [1, 0, 99, 0, 0, 2, 0, 1, 1, 3, 0.009504950495049506, ["cmp     [rbp+name], 0", "jnz     short loc_E1A3"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 86, 1, 0, 6, 0, 0, 24, 10, 0.07287128712871288, ["mov     rax, [rbp+prefix_len]", "lea     rdx, [rax+1]", "mov     rax, [rbp+rname]", "add     rax, rdx", "cmp     [rbp+dest], rax", "jbe     short loc_E9C7"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "cmp~[rbp+0],rax", "jbe~FOO"]], [1, 0, 86, 0, 1, 9, 0, 2, 20, 6, 0.12742574257425743, ["mov     rax, [rbp+st.st_size]", "mov     rdx, rax", "mov     rax, [rbp+rname]", "mov     rsi, rdx; size", "mov     rdi, rax; file", "call    areadlink_with_size", "mov     [rbp+buf], rax", "cmp     [rbp+buf], 0", "jnz     short loc_E7BF"], ["mov~rax,[rbp+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 86, 0, 0, 2, 0, 1, 21, 5, 0.02910891089108911, ["cmp     [rbp+can_mode], 2", "jnz     short loc_E7AD"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 86, 1, 0, 1, 0, 0, 28, 11, 9.900990099009902e-05, ["sub     [rbp+dest], 1"], ["sub~[rbp+0],0"]], [2, 0, 86, 1, 0, 5, 0, 1, 27, 10, 0.007524752475247525, ["mov     rax, [rbp+dest]", "sub     rax, 1", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jnz     short loc_E99D"], ["mov~rax,[rbp+0]", "sub~rax,0", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [2, 0, 3, 0, 1, 4, 0, 2, 2, 2, 0.0002970297029702971, ["call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     eax, 0", "jmp     loc_EB47"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 86, 1, 0, 2, 0, 1, 25, 11, 0.021980198019801982, ["sub     [rbp+dest], 1", "jmp     short loc_E9A5"], ["sub~[rbp+0],0", "jmp~FOO"]], [0, 0, 86, 0, 0, 3, 0, 1, 8, 9, 0.37485148514851485, ["mov     rax, [rbp+start]", "mov     [rbp+end], rax", "jmp     short loc_E3B3"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 86, 1, 0, 1, 0, 0, 11, 9, 9.900990099009902e-05, ["add     [rbp+end], 1"], ["add~[rbp+0],0"]], [1, 0, 86, 0, 0, 4, 0, 1, 10, 8, 0.007524752475247525, ["mov     rax, [rbp+end]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jnz     short loc_E3AB"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [0, 0, 97, 0, 0, 4, 1, 1, 2, 3, 0.018613861386138617, ["mov     rax, [rbp+name]", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_E1C6"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 86, 0, 0, 3, 0, 0, 26, 10, 0.03128712871287129, ["mov     rax, [rbp+dest]", "cmp     rax, [rbp+rname]", "jbe     short loc_E9C7"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jbe~FOO"]], [0, 0, 86, 0, 0, 4, 1, 1, 9, 8, 0.38415841584158417, ["mov     rax, [rbp+end]", "movzx   eax, byte ptr [rax]", "test    al, al", "jz      short loc_E3CF"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [2, 0, 3, 0, 1, 4, 0, 2, 3, 2, 0.0002970297029702971, ["call    ___errno_location", "mov     dword ptr [rax], 2", "mov     eax, 0", "jmp     loc_EB47"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 5, 2, 0.0005940594059405942, ["mov     eax, 0", "jmp     loc_EB47"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [33, 21, 105, 1, 102, 153, 2, 540, 0.06887, 2, 54], "succs": [[45, 38], [0], [0], [64], [3, 13], [13], [40, 5], [42, 5], [5], [13], [9, 65], [13], [66, 11], [21], [19, 13], [13], [13], [18, 13], [4, 13], [49, 26], [19, 14], [1, 85], [21], [21], [61], [24, 35], [49, 31], [2, 20], [32, 37], [74, 28], [28], [49, 6], [36, 37], [48, 51], [33, 101], [44, 61], [69], [43, 46], [45, 39], [45], [7], [7], [8, 41], [47], [61], [50, 55], [47], [69, 53], [22], [29, 54], [55], [22], [57, 62], [59, 52], [29], [56, 58], [58], [59, 60], [76], [64], [59, 15], [87, 63], [69], [79, 71], [72, 70], [64], [64], [81, 23], [34, 67], [73, 17], [72], [79], [76], [88, 10], [82, 83], [], [75, 77], [], [80, 86], [16], [76], [23], [30], [30], [85], [84, 94], [97, 92], [16, 93], [89, 25], [66, 12], [98], [16, 90], [76], [98], [99], [99], [27, 95], [68, 100], [16, 91], [96, 27], [76], [76]], "fname": "canonicalize_filename_mode", "n_num": 102}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+file], rdi", "mov     rax, [rbp+file]", "mov     cs:file_name, rax", "nop", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~<TAG>,rax", "nop", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 8, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     eax, edi", "mov     [rbp+ignore], al", "movzx   eax, [rbp+ignore]", "mov     cs:ignore_EPIPE, al", "nop", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~eax,edi", "mov~[rbp+0],al", "movzx~eax,[rbp+0]", "mov~<TAG>,al", "nop", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 9, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_ignore_EPIPE", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 1, 7, 0, 1, 4, 0, 2, 0, 0, 0.041666666666666664, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 20h ; ' '", "jz      loc_EC53"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 8, 0, 0, 4, 2, 1, 1, 3, 0.06944444444444445, ["movzx   eax, cs:ignore_EPIPE", "xor     eax, 1", "test    al, al", "jnz     short loc_EBC7"], ["movzx~eax,<TAG>", "xor~eax,0", "test~al,al", "jnz~FOO"]], [1, 0, 9, 1, 1, 9, 1, 2, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 18h", "mov     rax, cs:stdout@@GLIBC_2_2_5", "mov     rdi, rax; stream", "call    close_stream", "test    eax, eax", "jz      loc_EC53"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 1, 1, 0.08333333333333333, ["mov     rax, cs:stderr@@GLIBC_2_2_5", "mov     rdi, rax; stream", "call    close_stream", "test    eax, eax", "jz      short loc_EC73"], ["mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 1, 0, 2, 9, 0, 2, 3, -1, 0.027777777777777776, ["call    ___errno_location", "mov     eax, [rax]", "mov     rdx, [rbp+write_error]", "mov     rcx, rdx", "lea     rdx, aS_0; \"%s\"", "mov     esi, eax; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error"], ["call~FOO", "mov~eax,<TAG>", "mov~rdx,[rbp+0]", "mov~rcx,rdx", "lea~rdx,<TAG>", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO"]], [0, 0, 3, 0, 1, 6, 1, 2, 2, -1, 0.125, ["lea     rdi, aWriteError; \"write error\"", "call    _gettext", "mov     [rbp+write_error], rax", "mov     rax, cs:file_name", "test    rax, rax", "jz      short loc_EC20"], ["lea~rdi,<TAG>", "call~FOO", "mov~[rbp+0],rax", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 3, 0, 1, 2, -1, 0.0, ["mov     eax, cs:exit_failure", "mov     edi, eax; status", "call    __exit"], ["mov~eax,<TAG>", "mov~edi,eax", "call~FOO"]], [0, 0, 0, 0, 1, 3, 0, 1, 4, -1, 0.0, ["mov     eax, cs:exit_failure", "mov     edi, eax; status", "call    __exit"], ["mov~eax,<TAG>", "mov~edi,eax", "call~FOO"]], [2, 0, 1, 0, 3, 15, 0, 4, 3, -1, 0.027777777777777776, ["mov     rax, cs:file_name", "mov     rdi, rax; arg", "call    quotearg_colon", "mov     rbx, rax", "call    ___errno_location", "mov     eax, [rax]", "mov     rdx, [rbp+write_error]", "mov     r8, rdx", "mov     rcx, rbx", "lea     rdx, aSS_2; \"%s: %s\"", "mov     esi, eax; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     short loc_EC46"], ["mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~eax,<TAG>", "mov~rdx,[rbp+0]", "mov~r8,rdx", "mov~rcx,rbx", "lea~rdx,<TAG>", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 2, 0, 0.0, ["nop", "add     rsp, 18h", "pop     rbx", "pop     rbp", "retn"], ["nop", "add~rsp,0", "pop~rbx", "pop~rbp", "retn"]]], "func_feature": [11, 5, 17, 0, 10, 12, 0, 63, 0.0375, 8, 2], "succs": [[3, 5], [0, 5], [1, 3], [9, 6], [7], [8, 4], [], [], [7], []], "fname": "close_stdout", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+length]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]], [0, 0, 1, 0, 0, 1, 0, 1, 4, 0, 0.07272727272727272, ["jmp     short loc_ECFF"], ["jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 5, 0, 0.00909090909090909, ["nop"], ["nop"]], [1, 0, 7, 0, 0, 2, 0, 1, 2, 0, 0.031818181818181815, ["mov     eax, 1", "jmp     short loc_ECB4"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 9, 0, 0, 4, 0, 1, 1, 0, 0.01818181818181818, ["mov     rax, [rbp+file]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jnz     short loc_ECA8"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [1, 0, 6, 1, 0, 7, 0, 1, 4, 0, 0.13636363636363635, ["mov     rax, [rbp+length]", "lea     rdx, [rax-1]", "mov     rax, [rbp+file]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jnz     short loc_ECFE"], ["mov~rax,[rbp+0]", "lea~rdx,[rax-1]+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 0, 3, 0, 0.3181818181818182, ["mov     rax, [rbp+prefix_length]", "cmp     rax, [rbp+length]", "jb      short loc_ECD7"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jb~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 2, 0, 0.031818181818181815, ["mov     eax, 0", "jmp     short loc_ECB4"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 7, 0, 0, 1, 0, 0, 1, 0, 0.06363636363636363, ["mov     eax, 0"], ["mov~eax,0"]], [2, 1, 11, 1, 0, 7, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+file], rdi", "mov     [rbp+prefix_length], 0", "cmp     [rbp+prefix_length], 0", "jnz     short loc_ECAF"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 6, 1, 0, 1, 0, 0, 5, 0, 0.01818181818181818, ["sub     [rbp+length], 1"], ["sub~[rbp+0],0"]], [0, 0, 6, 2, 1, 10, 0, 2, 2, 0, 0.2727272727272727, ["add     [rbp+prefix_length], rax", "mov     rax, [rbp+file]", "mov     rdi, rax; name", "call    last_component", "mov     rdx, rax", "mov     rax, [rbp+file]", "sub     rdx, rax", "mov     rax, rdx", "mov     [rbp+length], rax", "jmp     short loc_ECF2"], ["add~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "mov~[rbp+0],rax", "jmp~FOO"]]], "func_feature": [1, 0, 8, 0, 12, 15, 2, 42, 0.08106, 0, 5], "succs": [[], [0], [0], [11], [3, 7], [10, 2], [1, 5], [11], [11], [8, 4], [6], [6]], "fname": "dir_len", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 2, 1, 0, 6, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+length]", "lea     rdx, [rax+1]", "mov     [rbp+length], rdx", "mov     rdx, [rbp+dir]", "add     rax, rdx", "mov     byte ptr [rax], 2Eh ; '.'"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~rdx,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 3, 0, 1, 8, 0, 2, 1, 2, 0.1, ["mov     rdx, [rbp+length]; n", "mov     rcx, [rbp+file]", "mov     rax, [rbp+dir]", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    _memcpy", "cmp     [rbp+append_dot], 0", "jz      short loc_ED88"], ["mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "cmp~[rbp+0],0", "jz~FOO"]], [4, 0, 5, 3, 2, 20, 0, 3, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+file], rdi", "mov     rax, [rbp+file]", "mov     rdi, rax; file", "call    dir_len", "mov     [rbp+length], rax", "cmp     [rbp+length], 0", "setz    al", "mov     [rbp+append_dot], al", "movzx   edx, [rbp+append_dot]", "mov     rax, [rbp+length]", "add     rax, rdx", "add     rax, 1", "mov     rdi, rax; size", "call    malloc", "mov     [rbp+dir], rax", "cmp     [rbp+dir], 0", "jnz     short loc_ED55"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "setz~al", "mov~[rbp+0],al", "movzx~edx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "add~rax,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.05, ["mov     eax, 0", "jmp     short locret_ED9A"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 1, 0, 5, 0, 0, 2, 1, 0.1, ["mov     rdx, [rbp+dir]", "mov     rax, [rbp+length]", "add     rax, rdx", "mov     byte ptr [rax], 0", "mov     rax, [rbp+dir]"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0", "mov~rax,[rbp+0]"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [3, 0, 6, 0, 6, 7, 1, 43, 0.04167, 0, 5], "succs": [[4], [0, 4], [1, 3], [5], [5], []], "fname": "mdir_name", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 10, 0, 0, 4, 0, 1, 0, 0, 0.18888888888888888, ["mov     rax, [rbp+base]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jz      short loc_EDB2"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [1, 0, 10, 0, 0, 7, 0, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+name], rdi", "mov     rax, [rbp+name]", "mov     [rbp+base], rax", "mov     [rbp+saw_slash], 0", "jmp     short loc_EDB7"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 10, 1, 0, 1, 0, 0, 2, 4, 0.0, ["add     [rbp+base], 1"], ["add~[rbp+0],0"]], [1, 0, 7, 0, 0, 2, 0, 1, 5, 3, 0.13333333333333333, ["cmp     [rbp+saw_slash], 0", "jz      short loc_EDEF"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 7, 0, 0, 4, 0, 1, 4, 4, 0.3111111111111111, ["mov     rax, [rbp+p]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jnz     short loc_EDDD"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 4, 0, 0.0, ["mov     rax, [rbp+base]", "pop     rbp", "retn"], ["mov~rax,[rbp+0]", "pop~rbp", "retn"]], [0, 0, 7, 0, 0, 4, 1, 1, 3, 1, 0.45555555555555555, ["mov     rax, [rbp+p]", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_EDCC"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 2, 2, 0.23333333333333334, ["mov     rax, [rbp+base]", "mov     [rbp+p], rax", "jmp     short loc_EDF4"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 7, 0, 0, 3, 0, 0, 6, 3, 0.0, ["mov     rax, [rbp+p]", "mov     [rbp+base], rax", "mov     [rbp+saw_slash], 0"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~[rbp+0],0"]], [1, 0, 7, 1, 0, 1, 0, 0, 6, 2, 0.17777777777777778, ["add     [rbp+p], 1"], ["add~[rbp+0],0"]], [1, 0, 7, 0, 0, 2, 0, 1, 5, 3, 0.044444444444444446, ["mov     [rbp+saw_slash], 1", "jmp     short loc_EDEF"], ["mov~[rbp+0],0", "jmp~FOO"]]], "func_feature": [0, 1, 7, 0, 11, 14, 5, 34, 0.1404, 0, 2], "succs": [[2, 7], [0], [0], [8, 9], [10, 3], [], [4, 5], [6], [9], [6], [9]], "fname": "last_component", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 1, 4, 1, 1, 10, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+name], rdi", "mov     [rbp+prefix_len], 0", "mov     rax, [rbp+name]", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+len], rax", "jmp     short loc_EE30"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 4, 1, 0, 7, 0, 1, 0, 1, 0.16666666666666666, ["mov     rax, [rbp+len]", "lea     rdx, [rax-1]", "mov     rax, [rbp+name]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jz      short loc_EE2B"], ["mov~rax,[rbp+0]", "lea~rdx,[rax-1]+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 0, 0, 1, 0.41666666666666663, ["cmp     [rbp+len], 1", "jbe     short loc_EE4D"], ["cmp~[rbp+0],0", "jbe~FOO"]], [1, 0, 4, 1, 0, 1, 0, 0, 0, 2, 0.08333333333333333, ["sub     [rbp+len], 1"], ["sub~[rbp+0],0"]], [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+len]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]]], "func_feature": [1, 0, 3, 0, 5, 6, 3, 23, 0.13333, 0, 3], "succs": [[2], [3, 4], [1, 4], [2], []], "fname": "base_len", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+name], rdi", "mov     [rbp+sb], rsi", "mov     eax, 0", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~eax,0", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 7, 0.0, 0, 0], "succs": [[]], "fname": "file_has_acl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 4, 0, 3, 25, 0, 4, 0, 0, 0.1, ["mov     edi, 18h; n", "call    xmalloc", "mov     [rbp+ent], rax", "mov     rax, [rbp+file]", "mov     rdi, rax; string", "call    xstrdup", "mov     rdx, rax", "mov     rax, [rbp+ent]", "mov     [rax], rdx", "mov     rax, [rbp+stats]", "mov     rdx, [rax+8]", "mov     rax, [rbp+ent]", "mov     [rax+8], rdx", "mov     rax, [rbp+stats]", "mov     rdx, [rax]", "mov     rax, [rbp+ent]", "mov     [rax+10h], rdx", "mov     rdx, [rbp+ent]", "mov     rax, [rbp+ht]", "mov     rsi, rdx; entry", "mov     rdi, rax; table", "call    hash_insert", "mov     [rbp+ent_from_table], rax", "cmp     [rbp+ent_from_table], 0", "jnz     short loc_EEE7"], ["mov~edi,0", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 6, 1, 0, 8, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+ht], rdi", "mov     [rbp+file], rsi", "mov     [rbp+stats], rdx", "cmp     [rbp+ht], 0", "jz      short loc_EEFF"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 2, 0, 0, 3, 0, 1, 2, 1, 0.1, ["mov     rax, [rbp+ent_from_table]", "cmp     rax, [rbp+ent]", "jz      short locret_EF00"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jz~FOO"]], [0, 0, 1, 0, 1, 4, 0, 2, 3, 1, 0.0, ["mov     rax, [rbp+ent]", "mov     rdi, rax; x", "call    triple_free", "jmp     short locret_EF00"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0.03333333333333333, ["nop"], ["nop"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [5, 0, 9, 0, 7, 8, 1, 44, 0.03333, 0, 1], "succs": [[3, 6], [0, 5], [], [2, 4], [2], [2], []], "fname": "record_file", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 0, 0.30000000000000004, ["mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_EF7F"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [0, 0, 3, 0, 1, 15, 1, 1, 1, 0, 0.07500000000000001, ["mov     rax, [rbp+file]", "mov     [rbp+new_ent.name], rax", "mov     rax, [rbp+stats]", "mov     rax, [rax+8]", "mov     [rbp+new_ent.st_ino], rax", "mov     rax, [rbp+stats]", "mov     rax, [rax]", "mov     [rbp+new_ent.st_dev], rax", "lea     rdx, [rbp+new_ent]", "mov     rax, [rbp+ht]", "mov     rsi, rdx; entry", "mov     rdi, rax; table", "call    hash_lookup", "test    rax, rax", "setnz   al"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "lea~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "test~rax,rax", "setnz~al"]], [2, 0, 5, 1, 0, 11, 1, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+ht], rdi", "mov     [rbp+file], rsi", "mov     [rbp+stats], rdx", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "cmp     [rbp+ht], 0", "jnz     short loc_EF33"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 0, 0.07500000000000001, ["mov     eax, 0", "jmp     short loc_EF6B"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 3, 5, 1, 6, 6, 1, 34, 0.075, 1, 1], "succs": [[], [0, 5], [1], [2, 4], [1], []], "fname": "seen_file", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.004761904761904762, ["mov     eax, 63h ; 'c'", "jmp     short loc_F02A"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 9, 0, 0, 4, 1, 1, 3, 2, 0.1142857142857143, ["mov     eax, [rbp+bits]", "and     eax, 0F000h", "cmp     eax, 2000h", "jnz     short loc_EFE3"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 7, 1, 0.002380952380952381, ["mov     eax, 73h ; 's'", "jmp     short loc_F02A"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 3, 0, 0, 4, 1, 1, 6, 2, 0.05714285714285715, ["mov     eax, [rbp+bits]", "and     eax, 0F000h", "cmp     eax, 0C000h", "jnz     short loc_F025"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 1, 11, 0, 0, 4, 1, 1, 2, 2, 0.09523809523809525, ["mov     eax, [rbp+bits]", "and     eax, 0F000h", "cmp     eax, 6000h", "jnz     short loc_EFCD"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [2, 0, 13, 0, 0, 4, 1, 1, 1, 2, 0.05714285714285715, ["mov     eax, [rbp+bits]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     short loc_EFB7"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 7, 1, 0.002380952380952381, ["mov     eax, 3Fh ; '?'"], ["mov~eax,0"]], [1, 1, 5, 0, 0, 4, 1, 1, 5, 2, 0.09523809523809525, ["mov     eax, [rbp+bits]", "and     eax, 0F000h", "cmp     eax, 1000h", "jnz     short loc_F00F"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [2, 0, 7, 0, 0, 4, 1, 1, 4, 2, 0.1142857142857143, ["mov     eax, [rbp+bits]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     short loc_EFF9"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.004761904761904762, ["mov     eax, 62h ; 'b'", "jmp     short loc_F02A"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 6, 1, 0.004761904761904762, ["mov     eax, 70h ; 'p'", "jmp     short loc_F02A"], ["mov~eax,0", "jmp~FOO"]], [1, 1, 15, 0, 0, 7, 1, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+bits], edi", "mov     eax, [rbp+bits]", "and     eax, 0F000h", "cmp     eax, 8000h", "jnz     short loc_EFA1"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.004761904761904762, ["mov     eax, 2Dh ; '-'", "jmp     loc_F02A"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.004761904761904762, ["mov     eax, 64h ; 'd'", "jmp     short loc_F02A"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 5, 1, 0.004761904761904762, ["mov     eax, 6Ch ; 'l'", "jmp     short loc_F02A"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [0, 7, 14, 0, 16, 22, 1, 48, 0.03542, 0, 0], "succs": [[12], [0, 8], [12], [2, 6], [9, 1], [4, 14], [12], [10, 3], [15, 7], [12], [12], [5, 13], [], [12], [12], [12]], "fname": "ftypelet", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 34, 0, 0, 2, 0, 1, 0, 0, 0.04588394062078272, ["mov     edx, 77h ; 'w'", "jmp     short loc_F087"], ["mov~edx,0", "jmp~FOO"]], [1, 1, 36, 1, 0, 7, 2, 1, 2, 19, 0.0728744939271255, ["mov     rax, [rbp+str]", "add     rax, 1", "mov     [rax], dl", "mov     eax, [rbp+mode]", "and     eax, 80h", "test    eax, eax", "jz      short loc_F082"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~<TAG>,dl", "mov~eax,[rbp+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [2, 0, 10, 1, 0, 7, 2, 1, 16, 5, 0.19568151147098514, ["mov     rax, [rbp+str]", "add     rax, 7", "mov     [rax], dl", "mov     eax, [rbp+mode]", "and     eax, 2", "test    eax, eax", "jz      short loc_F18A"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~<TAG>,dl", "mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 15, 6, 0.10020242914979757, ["mov     edx, 72h ; 'r'", "jmp     short loc_F16F"], ["mov~edx,0", "jmp~FOO"]], [1, 0, 11, 0, 0, 1, 0, 0, 15, 6, 0.10020242914979757, ["mov     edx, 2Dh ; '-'"], ["mov~edx,0"]], [1, 0, 34, 0, 0, 1, 0, 0, 3, 18, 0.04588394062078272, ["mov     edx, 2Dh ; '-'"], ["mov~edx,0"]], [1, 0, 21, 0, 0, 2, 0, 1, 10, 11, 0.12044534412955465, ["mov     edx, 77h ; 'w'", "jmp     short loc_F10B"], ["mov~edx,0", "jmp~FOO"]], [2, 0, 23, 1, 0, 7, 2, 1, 9, 12, 0.24831309041835356, ["mov     rax, [rbp+str]", "add     rax, 4", "mov     [rax], dl", "mov     eax, [rbp+mode]", "and     eax, 10h", "test    eax, eax", "jz      short loc_F106"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~<TAG>,dl", "mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 21, 0, 0, 1, 0, 0, 10, 11, 0.12044534412955465, ["mov     edx, 2Dh ; '-'"], ["mov~edx,0"]], [1, 0, 8, 0, 0, 2, 0, 1, 17, 4, 0.08097165991902834, ["mov     edx, 77h ; 'w'", "jmp     short loc_F18F"], ["mov~edx,0", "jmp~FOO"]], [1, 0, 8, 0, 0, 1, 0, 0, 17, 4, 0.08097165991902834, ["mov     edx, 2Dh ; '-'"], ["mov~edx,0"]], [2, 0, 33, 1, 0, 7, 2, 1, 4, 17, 0.13360323886639675, ["mov     rax, [rbp+str]", "add     rax, 2", "mov     [rax], dl", "mov     eax, [rbp+mode]", "and     eax, 800h", "test    eax, eax", "jz      short loc_F0B5"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~<TAG>,dl", "mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [2, 0, 20, 1, 0, 7, 2, 1, 11, 10, 0.2564102564102564, ["mov     rax, [rbp+str]", "add     rax, 5", "mov     [rax], dl", "mov     eax, [rbp+mode]", "and     eax, 400h", "test    eax, eax", "jz      short loc_F139"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~<TAG>,dl", "mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 1, 7, 1, 0, 7, 2, 1, 18, 3, 0.15114709851551955, ["mov     rax, [rbp+str]", "add     rax, 8", "mov     [rax], dl", "mov     eax, [rbp+mode]", "and     eax, 200h", "test    eax, eax", "jz      short loc_F1BD"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~<TAG>,dl", "mov~eax,[rbp+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [1, 0, 29, 0, 0, 4, 2, 1, 5, 16, 0.07321187584345479, ["mov     eax, [rbp+mode]", "and     eax, 40h", "test    eax, eax", "jz      short loc_F0AE"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 16, 0, 0, 4, 2, 1, 12, 9, 0.1214574898785425, ["mov     eax, [rbp+mode]", "and     eax, 8", "test    eax, eax", "jz      short loc_F132"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 27, 0, 0, 2, 0, 1, 6, 15, 0.040991902834008095, ["mov     eax, 73h ; 's'", "jmp     short loc_F0CB"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 4, 2, 1, 19, 2, 0.05566801619433198, ["mov     eax, [rbp+mode]", "and     eax, 1", "test    eax, eax", "jz      short loc_F1B6"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 13, 8, 0.05195681511470985, ["mov     eax, 73h ; 's'", "jmp     short loc_F14F"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 27, 0, 0, 2, 0, 1, 6, 15, 0.040991902834008095, ["mov     eax, 53h ; 'S'", "jmp     short loc_F0CB"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 20, 1, 0.0059041835357624825, ["mov     eax, 74h ; 't'", "jmp     short loc_F1D3"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 13, 8, 0.05195681511470985, ["mov     eax, 53h ; 'S'", "jmp     short loc_F14F"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 20, 1, 0.0059041835357624825, ["mov     eax, 54h ; 'T'", "jmp     short loc_F1D3"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 29, 0, 0, 4, 2, 1, 5, 16, 0.07321187584345479, ["mov     eax, [rbp+mode]", "and     eax, 40h", "test    eax, eax", "jz      short loc_F0C6"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 16, 0, 0, 4, 2, 1, 12, 9, 0.1214574898785425, ["mov     eax, [rbp+mode]", "and     eax, 8", "test    eax, eax", "jz      short loc_F14A"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 27, 0, 0, 2, 0, 1, 6, 15, 0.040991902834008095, ["mov     eax, 78h ; 'x'", "jmp     short loc_F0CB"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 4, 2, 1, 19, 2, 0.05566801619433198, ["mov     eax, [rbp+mode]", "and     eax, 1", "test    eax, eax", "jz      short loc_F1CE"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 27, 0, 0, 1, 0, 0, 6, 15, 0.040991902834008095, ["mov     eax, 2Dh ; '-'"], ["mov~eax,0"]], [1, 0, 14, 0, 0, 2, 0, 1, 13, 8, 0.05195681511470985, ["mov     eax, 78h ; 'x'", "jmp     short loc_F14F"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 14, 0, 0, 1, 0, 0, 13, 8, 0.05195681511470985, ["mov     eax, 2Dh ; '-'"], ["mov~eax,0"]], [1, 0, 1, 0, 0, 2, 0, 1, 20, 1, 0.0059041835357624825, ["mov     eax, 78h ; 'x'", "jmp     short loc_F1D3"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 20, 1, 0.0059041835357624825, ["mov     eax, 2Dh ; '-'"], ["mov~eax,0"]], [2, 0, 39, 1, 1, 15, 2, 2, 0, 21, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+mode], edi", "mov     [rbp+str], rsi", "mov     eax, [rbp+mode]", "mov     edi, eax; bits", "call    ftypelet", "mov     edx, eax", "mov     rax, [rbp+str]", "mov     [rax], dl", "mov     eax, [rbp+mode]", "and     eax, 100h", "test    eax, eax", "jz      short loc_F060"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "mov~edx,eax", "mov~rax,[rbp+0]", "mov~<TAG>,dl", "mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 1, 26, 1, 0, 7, 2, 1, 7, 14, 0.22807017543859648, ["mov     rdx, [rbp+str]", "add     rdx, 3", "mov     [rdx], al", "mov     eax, [rbp+mode]", "and     eax, 20h", "test    eax, eax", "jz      short loc_F0E6"], ["mov~rdx,[rbp+0]", "add~rdx,0", "mov~<TAG>,al", "mov~eax,[rbp+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [1, 0, 37, 0, 0, 2, 0, 1, 1, 20, 0.012483130904183536, ["mov     edx, 72h ; 'r'", "jmp     short loc_F065"], ["mov~edx,0", "jmp~FOO"]], [1, 0, 37, 0, 0, 1, 0, 0, 1, 20, 0.012483130904183536, ["mov     edx, 2Dh ; '-'"], ["mov~edx,0"]], [2, 0, 13, 1, 0, 7, 2, 1, 14, 7, 0.22807017543859648, ["mov     rdx, [rbp+str]", "add     rdx, 6", "mov     [rdx], al", "mov     eax, [rbp+mode]", "and     eax, 4", "test    eax, eax", "jz      short loc_F16A"], ["mov~rdx,[rbp+0]", "add~rdx,0", "mov~<TAG>,al", "mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 24, 0, 0, 2, 0, 1, 8, 13, 0.11336032388663968, ["mov     edx, 72h ; 'r'", "jmp     short loc_F0EB"], ["mov~edx,0", "jmp~FOO"]], [1, 0, 24, 0, 0, 1, 0, 0, 8, 13, 0.11336032388663968, ["mov     edx, 2Dh ; '-'"], ["mov~edx,0"]], [4, 1, 0, 3, 0, 12, 0, 0, 21, 0, 0.0, ["mov     rdx, [rbp+str]", "add     rdx, 9", "mov     [rdx], al", "mov     rax, [rbp+str]", "add     rax, 0Ah", "mov     byte ptr [rax], 20h ; ' '", "mov     rax, [rbp+str]", "add     rax, 0Bh", "mov     byte ptr [rax], 0", "nop", "leave", "retn"], ["mov~rdx,[rbp+0]", "add~rdx,0", "mov~<TAG>,al", "mov~rax,[rbp+0]", "add~rax,0", "mov~<TAG>,<STR>", "mov~rax,[rbp+0]", "add~rax,0", "mov~<TAG>,0", "nop", "leave", "retn"]]], "func_feature": [1, 30, 31, 0, 40, 54, 1, 146, 0.08392, 0, 12], "succs": [[11], [0, 5], [9, 10], [2], [2], [11], [12], [8, 6], [12], [13], [13], [14, 23], [24, 15], [17, 26], [16, 19], [18, 21], [33], [20, 22], [36], [33], [39], [36], [39], [25, 27], [28, 29], [33], [30, 31], [33], [36], [36], [39], [39], [34, 35], [37, 38], [1], [1], [3, 4], [7], [7], []], "fname": "strmode", "n_num": 40}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 1, 14, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+statp], rdi", "mov     [rbp+str], rsi", "mov     rax, [rbp+statp]", "mov     eax, [rax+18h]", "mov     rdx, [rbp+str]", "mov     rsi, rdx; str", "mov     edi, eax; mode", "call    strmode", "nop", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rsi,rdx", "mov~edi,eax", "call~FOO", "nop", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 14, 0.0, 0, 1], "succs": [[]], "fname": "filemodestring", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 2, 1, 1, 15, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+dir], rdi", "mov     [rbp+base], rsi", "mov     [rbp+base_in_result], rdx", "mov     rdx, [rbp+base_in_result]; base_in_result", "mov     rcx, [rbp+base]", "mov     rax, [rbp+dir]", "mov     rsi, rcx; base", "mov     rdi, rax; dir", "call    mfile_name_concat", "mov     [rbp+p], rax", "cmp     [rbp+p], 0", "jnz     short loc_F259"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+p]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]]], "func_feature": [2, 0, 3, 0, 3, 2, 1, 19, 0.0, 0, 1], "succs": [[1, 2], [], []], "fname": "file_name_concat", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 0, 0.06363636363636363, ["mov     eax, 0", "jmp     short locret_F3A1"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 1, 10, 0, 1, 4, 0, 0.01818181818181818, ["mov     rdx, [rbp+baselen]; n", "mov     rcx, [rbp+base]", "mov     rax, [rbp+p]", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    _mempcpy", "mov     [rbp+p], rax", "mov     rax, [rbp+p]", "mov     byte ptr [rax], 0", "mov     rax, [rbp+p_concat]"], ["mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~rax,[rbp+0]"]], [3, 0, 11, 3, 3, 29, 0, 4, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 60h", "mov     [rbp+dir], rdi", "mov     [rbp+base], rsi", "mov     [rbp+base_in_result], rdx", "mov     rax, [rbp+dir]", "mov     rdi, rax; name", "call    last_component", "mov     [rbp+dirbase], rax", "mov     rax, [rbp+dirbase]", "mov     rdi, rax; name", "call    base_len", "mov     [rbp+dirbaselen], rax", "mov     rdx, [rbp+dirbase]", "mov     rax, [rbp+dir]", "sub     rdx, rax", "mov     rax, rdx", "mov     rdx, rax", "mov     rax, [rbp+dirbaselen]", "add     rax, rdx", "mov     [rbp+dirlen], rax", "mov     rax, [rbp+base]", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+baselen], rax", "mov     [rbp+sep], 0", "cmp     [rbp+dirbaselen], 0", "jz      short loc_F2F1"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~[rbp+0],0", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 7, 0, 0, 4, 0, 1, 2, 0, 0.01818181818181818, ["mov     rax, [rbp+base]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jz      short loc_F300"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [1, 0, 8, 1, 0, 7, 0, 1, 1, 0, 0.045454545454545456, ["mov     rax, [rbp+dirlen]", "lea     rdx, [rax-1]", "mov     rax, [rbp+dir]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jz      short loc_F300"], ["mov~rax,[rbp+0]", "lea~rdx,[rax-1]+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [3, 0, 5, 3, 1, 13, 0, 2, 2, 0, 0.2727272727272727, ["cmp     [rbp+sep], 0", "setnz   al", "movzx   edx, al", "mov     rax, [rbp+dirlen]", "add     rdx, rax", "mov     rax, [rbp+baselen]", "add     rax, rdx", "add     rax, 1", "mov     rdi, rax; size", "call    malloc", "mov     [rbp+p_concat], rax", "cmp     [rbp+p_concat], 0", "jnz     short loc_F336"], ["cmp~[rbp+0],0", "setnz~al", "movzx~edx,al", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "add~rax,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 3, 0, 0.0, ["mov     [rbp+sep], 2Fh ; '/'", "jmp     short loc_F300"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 7, 0, 0, 4, 0, 1, 1, 0, 0.03636363636363636, ["mov     rax, [rbp+base]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jnz     short loc_F300"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [1, 0, 6, 0, 0, 1, 0, 0, 2, 0, 0.0, ["mov     [rbp+sep], 2Eh ; '.'"], ["mov~[rbp+0],0"]], [2, 0, 3, 1, 1, 16, 0, 2, 3, 0, 0.12727272727272726, ["mov     rdx, [rbp+dirlen]; n", "mov     rcx, [rbp+dir]", "mov     rax, [rbp+p_concat]", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    _mempcpy", "mov     [rbp+p], rax", "mov     rax, [rbp+p]", "movzx   edx, [rbp+sep]", "mov     [rax], dl", "cmp     [rbp+sep], 0", "setnz   al", "movzx   eax, al", "add     [rbp+p], rax", "cmp     [rbp+base_in_result], 0", "jz      short loc_F37B"], ["mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "movzx~edx,[rbp+0]", "mov~<TAG>,dl", "cmp~[rbp+0],0", "setnz~al", "movzx~eax,al", "add~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 0, 0, 4, 0, 0.0, ["mov     rax, [rbp+base_in_result]", "mov     rdx, [rbp+p]", "mov     [rax], rdx"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx"]]], "func_feature": [6, 0, 14, 0, 12, 17, 1, 93, 0.04848, 0, 8], "succs": [[], [0], [0], [8, 5], [6, 7], [4, 6], [1, 10], [6], [9, 6], [6], [2, 11], [2]], "fname": "mfile_name_concat", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 13, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     rax, [rbp+str]", "mov     rax, [rax]", "mov     [rbp+match], rax", "jmp     short loc_F454"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [2, 0, 13, 0, 0, 3, 0, 1, 4, 3, 0.09294871794871795, ["mov     [rbp+read_alpha], 1", "cmp     [rbp+match], 0", "jnz     short loc_F454"], ["mov~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 1, 13, 1, 0, 7, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+str], rdi", "mov     [rbp+match], 0", "mov     [rbp+read_alpha], 0", "jmp     loc_F466"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 2, 4, 0.5705128205128205, ["cmp     [rbp+read_alpha], 0", "jz      short loc_F3FD"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 13, 0, 0, 5, 1, 1, 1, 1, 0.6538461538461539, ["mov     rax, [rbp+str]", "mov     rax, [rax]", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     loc_F3C0"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [1, 0, 13, 0, 0, 5, 0, 1, 3, 4, 0.3269230769230769, ["mov     rax, [rbp+str]", "mov     rax, [rax]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Eh ; '.'", "jnz     short loc_F423"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [1, 0, 13, 0, 0, 5, 0, 1, 5, 3, 0.07051282051282051, ["mov     rax, [rbp+str]", "mov     rax, [rax]", "movzx   eax, byte ptr [rax]", "cmp     al, 7Eh ; '~'", "jz      short loc_F454"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [1, 0, 13, 0, 1, 9, 2, 2, 4, 3, 0.15705128205128205, ["mov     rax, [rbp+str]", "mov     rax, [rax]", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "mov     edi, eax; c", "call    c_isalnum", "xor     eax, 1", "test    al, al", "jz      short loc_F454"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "movzx~eax,<TAG>", "movsx~eax,al", "mov~edi,eax", "call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 13, 0, 0, 1, 0, 0, 6, 3, 0.0, ["mov     [rbp+match], 0"], ["mov~[rbp+0],0"]], [0, 0, 13, 0, 0, 5, 0, 0, 4, 2, 0.5705128205128205, ["mov     rax, [rbp+str]", "mov     rax, [rax]", "lea     rdx, [rax+1]", "mov     rax, [rbp+str]", "mov     [rax], rdx"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~<TAG>,rdx"]], [2, 0, 13, 0, 1, 10, 2, 2, 3, 3, 0.16666666666666666, ["mov     [rbp+read_alpha], 0", "mov     rax, [rbp+str]", "mov     rax, [rax]", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "mov     edi, eax; c", "call    c_isalpha", "xor     eax, 1", "test    al, al", "jz      short loc_F454"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "movzx~eax,<TAG>", "movsx~eax,al", "mov~edi,eax", "call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 13, 0, 0, 5, 0, 1, 4, 3, 0.07051282051282051, ["mov     rax, [rbp+str]", "mov     rax, [rax]", "movzx   eax, byte ptr [rax]", "cmp     al, 7Eh ; '~'", "jz      short loc_F454"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 5, 3, 0.0, ["mov     [rbp+match], 0", "jmp     short loc_F454"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["mov     rax, [rbp+match]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]]], "func_feature": [2, 5, 13, 0, 14, 21, 2, 66, 0.19139, 0, 1], "succs": [[9], [0, 9], [4], [10, 5], [3, 13], [1, 7], [8, 9], [9, 6], [9], [4], [9, 11], [9, 12], [9], []], "fname": "match_suffix", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.011904761904761904, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_F4CC"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.09523809523809523, ["cmp     [rbp+c], 7Eh ; '~'", "jnz     short loc_F4C3"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 1, 1, 0, 2, 0, 0, 3, 1, 0.011904761904761904, ["movzx   eax, [rbp+c]", "add     eax, 100h"], ["movzx~eax,[rbp+0]", "add~eax,0"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.023809523809523808, ["mov     eax, 0", "jmp     short locret_F4CC"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.023809523809523808, ["movzx   eax, [rbp+c]", "jmp     short locret_F4CC"], ["movzx~eax,[rbp+0]", "jmp~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 1, 2, 0.09523809523809523, ["movzx   eax, [rbp+c]", "mov     edi, eax; c", "call    c_isalpha", "test    al, al", "jz      short loc_F4B6"], ["movzx~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 7, 1, 1, 10, 1, 2, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     eax, edi", "mov     [rbp+c], al", "movzx   eax, [rbp+c]", "mov     edi, eax; c", "call    c_isdigit", "test    al, al", "jz      short loc_F4A1"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~eax,edi", "mov~[rbp+0],al", "movzx~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "test~al,al", "jz~FOO"]]], "func_feature": [2, 2, 8, 0, 8, 10, 2, 27, 0.03274, 0, 2], "succs": [[3], [0, 2], [3], [], [3], [3], [1, 5], [4, 6]], "fname": "order", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 36, 0, 0, 3, 0, 0, 0, 0, 0.5047619047619047, ["mov     rax, [rbp+s1_pos]", "cmp     rax, [rbp+s1_len]", "jnb     short loc_F5A6"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 36, 0, 0, 2, 0, 1, 2, 9, 0.3055555555555556, ["mov     [rbp+first_diff], 0", "jmp     short loc_F579"], ["mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 36, 2, 0, 2, 0, 0, 10, 9, 0.16746031746031745, ["add     [rbp+s1_pos], 1", "add     [rbp+s2_pos], 1"], ["add~[rbp+0],0", "add~[rbp+0],0"]], [0, 0, 36, 0, 0, 3, 0, 0, 1, 3, 0.3246031746031746, ["mov     rax, [rbp+s1_pos]", "cmp     rax, [rbp+s1_len]", "jb      loc_F4FB"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jb~FOO"]], [0, 0, 36, 0, 0, 3, 0, 0, 2, 2, 0.025396825396825397, ["mov     rax, [rbp+s2_pos]", "cmp     rax, [rbp+s2_len]", "jb      loc_F4FB"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jb~FOO"]], [1, 0, 36, 1, 0, 6, 0, 1, 7, 5, 0.36603174603174604, ["mov     rdx, [rbp+s2]", "mov     rax, [rbp+s2_pos]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "cmp     al, 30h ; '0'", "jz      short loc_F5EE"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [0, 0, 36, 0, 0, 1, 0, 1, 6, 6, 0.3342857142857143, ["jmp     short loc_F5F3"], ["jmp~FOO"]], [1, 0, 36, 1, 0, 1, 0, 0, 8, 6, 0.0, ["add     [rbp+s2_pos], 1"], ["add~[rbp+0],0"]], [0, 0, 36, 0, 0, 1, 0, 1, 8, 4, 0.34619047619047616, ["jmp     short loc_F640"], ["jmp~FOO"]], [1, 0, 36, 0, 0, 2, 0, 1, 11, 5, 0.046031746031746035, ["cmp     [rbp+first_diff], 0", "jnz     short loc_F636"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 36, 1, 1, 9, 1, 2, 10, 3, 0.06666666666666667, ["mov     rdx, [rbp+s2]", "mov     rax, [rbp+s2_pos]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "mov     edi, eax; c", "call    c_isdigit", "test    al, al", "jnz     short loc_F607"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "movsx~eax,al", "mov~edi,eax", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 36, 0, 0, 3, 0, 1, 5, 6, 0.17444444444444446, ["mov     rax, [rbp+s1_pos]", "cmp     rax, [rbp+s1_len]", "jz      short loc_F528"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jz~FOO"]], [1, 0, 36, 1, 1, 10, 2, 2, 4, 7, 0.16984126984126985, ["mov     rdx, [rbp+s1]", "mov     rax, [rbp+s1_pos]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "mov     edi, eax; c", "call    c_isdigit", "xor     eax, 1", "test    al, al", "jnz     loc_F504"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "movsx~eax,al", "mov~edi,eax", "call~FOO", "xor~eax,0", "test~al,al", "jnz~FOO"]], [1, 0, 36, 1, 1, 10, 2, 2, 5, 7, 0.03238095238095238, ["mov     rdx, [rbp+s2]", "mov     rax, [rbp+s2_pos]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "mov     edi, eax; c", "call    c_isdigit", "xor     eax, 1", "test    al, al", "jnz     loc_F504"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "movsx~eax,al", "mov~edi,eax", "call~FOO", "xor~eax,0", "test~al,al", "jnz~FOO"]], [0, 0, 36, 1, 1, 9, 1, 2, 10, 2, 0.37, ["mov     rdx, [rbp+s1]", "mov     rax, [rbp+s1_pos]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "mov     edi, eax; c", "call    c_isdigit", "test    al, al", "jz      short loc_F69B"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "movsx~eax,al", "mov~edi,eax", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 36, 1, 1, 9, 1, 2, 9, 3, 0.43190476190476196, ["mov     rdx, [rbp+s1]", "mov     rax, [rbp+s1_pos]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "mov     edi, eax; c", "call    c_isdigit", "test    al, al", "jz      short loc_F678"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "movsx~eax,al", "mov~edi,eax", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 11, 1, 0.010476190476190476, ["mov     eax, 1", "jmp     short locret_F6EA"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 36, 1, 1, 8, 0, 2, 6, 5, 0.0773015873015873, ["mov     rdx, [rbp+s1]", "mov     rax, [rbp+s1_pos]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "movzx   eax, al", "mov     edi, eax; c", "call    order", "jmp     short loc_F52D"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "movzx~eax,al", "mov~edi,eax", "call~FOO", "jmp~FOO"]], [1, 0, 36, 0, 0, 1, 0, 0, 6, 5, 0.0773015873015873, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 36, 0, 0, 3, 0, 0, 4, 8, 0.3341269841269841, ["mov     rax, [rbp+s2_pos]", "cmp     rax, [rbp+s2_len]", "jnb     short loc_F5DA"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 36, 3, 0, 13, 0, 0, 12, 5, 0.0, ["mov     rdx, [rbp+s1]", "mov     rax, [rbp+s1_pos]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "movsx   edx, al", "mov     rcx, [rbp+s2]", "mov     rax, [rbp+s2_pos]", "add     rax, rcx", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "sub     edx, eax", "mov     eax, edx", "mov     [rbp+first_diff], eax"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "movsx~edx,al", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rcx", "movzx~eax,<TAG>", "movsx~eax,al", "sub~edx,eax", "mov~eax,edx", "mov~[rbp+0],eax"]], [0, 0, 36, 1, 1, 9, 1, 2, 11, 2, 0.3388888888888889, ["mov     rdx, [rbp+s2]", "mov     rax, [rbp+s2_pos]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "mov     edi, eax; c", "call    c_isdigit", "test    al, al", "jz      short loc_F6BE"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "movsx~eax,al", "mov~edi,eax", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 36, 0, 0, 4, 0, 1, 7, 4, 0.18634920634920635, ["mov     [rbp+s1_c], eax", "mov     rax, [rbp+s2_pos]", "cmp     rax, [rbp+s2_len]", "jz      short loc_F554"], ["mov~[rbp+0],eax", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jz~FOO"]], [2, 0, 36, 2, 0, 2, 0, 0, 12, 4, 0.05396825396825397, ["add     [rbp+s1_pos], 1", "add     [rbp+s2_pos], 1"], ["add~[rbp+0],0", "add~[rbp+0],0"]], [1, 0, 1, 0, 0, 2, 0, 1, 12, 1, 0.0007936507936507937, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_F6EA"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 36, 0, 0, 2, 0, 1, 12, 2, 0.31746031746031744, ["cmp     [rbp+first_diff], 0", "jz      short loc_F6C9"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 13, 1, 0.0007936507936507937, ["mov     eax, [rbp+first_diff]", "jmp     short locret_F6EA"], ["mov~eax,[rbp+0]", "jmp~FOO"]], [3, 0, 36, 1, 0, 10, 0, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+s1], rdi", "mov     [rbp+s1_len], rsi", "mov     [rbp+s2], rdx", "mov     [rbp+s2_len], rcx", "mov     [rbp+s1_pos], 0", "mov     [rbp+s2_pos], 0", "jmp     loc_F6C9"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 36, 1, 1, 8, 0, 2, 8, 3, 0.08325396825396826, ["mov     rdx, [rbp+s2]", "mov     rax, [rbp+s2_pos]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "movzx   eax, al", "mov     edi, eax; c", "call    order", "jmp     short loc_F559"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "movzx~eax,al", "mov~edi,eax", "call~FOO", "jmp~FOO"]], [0, 0, 36, 0, 0, 1, 0, 1, 6, 8, 0.016666666666666666, ["jmp     short loc_F5DA"], ["jmp~FOO"]], [1, 0, 36, 0, 0, 1, 0, 0, 8, 3, 0.08325396825396826, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 36, 1, 0, 1, 0, 0, 6, 8, 0.0, ["add     [rbp+s1_pos], 1"], ["add~[rbp+0],0"]], [1, 0, 36, 1, 0, 6, 0, 1, 5, 7, 0.3541269841269841, ["mov     rdx, [rbp+s1]", "mov     rax, [rbp+s1_pos]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "cmp     al, 30h ; '0'", "jz      short loc_F5D5"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [0, 0, 36, 0, 0, 4, 0, 1, 9, 2, 0.19825396825396827, ["mov     [rbp+s2_c], eax", "mov     eax, [rbp+s1_c]", "cmp     eax, [rbp+s2_c]", "jz      short loc_F56F"], ["mov~[rbp+0],eax", "mov~eax,[rbp+0]", "cmp~eax,[rbp+0]", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, 1, 0.002380952380952381, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 1, 1, 0, 3, 0, 1, 10, 1, 0.010158730158730159, ["mov     eax, [rbp+s1_c]", "sub     eax, [rbp+s2_c]", "jmp     locret_F6EA"], ["mov~eax,[rbp+0]", "sub~eax,[rbp+0]", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [8, 8, 32, 0, 37, 53, 1, 159, 0.15706, 0, 21], "succs": [[19, 12], [0], [0], [1, 4], [1, 34], [8, 7], [5], [5], [15], [20, 23], [9, 14], [17, 18], [19, 11], [11, 29], [16, 21], [10, 14], [36], [22], [22], [32, 13], [23], [24, 25], [28, 30], [15], [36], [26, 3], [36], [3], [33], [32], [33], [32], [6, 31], [2, 35], [36], [36], []], "fname": "verrevcmp", "n_num": 37}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 22, 0, 0, 4, 0, 1, 0, 0, 0.11538461538461538, ["mov     rax, [rbp+s1]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Eh ; '.'", "jz      short loc_F81F"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [1, 0, 25, 0, 0, 4, 0, 1, 7, 4, 0.1039136302294197, ["mov     rax, [rbp+s1]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Eh ; '.'", "jnz     short loc_F7FF"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [1, 0, 24, 0, 0, 4, 0, 1, 8, 3, 0.007422402159244264, ["mov     rax, [rbp+s2]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Eh ; '.'", "jz      short loc_F7FF"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [0, 0, 6, 2, 0, 12, 0, 0, 17, 4, 0.0, ["mov     rax, [rbp+s1_pos]", "mov     rdx, rax", "mov     rax, [rbp+s1]", "sub     rdx, rax", "mov     rax, rdx", "mov     [rbp+s1_len], rax", "mov     rax, [rbp+s2_pos]", "mov     rdx, rax", "mov     rax, [rbp+s2]", "sub     rdx, rax", "mov     rax, rdx", "mov     [rbp+s2_len], rax"], ["mov~rax,[rbp+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "mov~[rbp+0],rax"]], [0, 0, 7, 0, 1, 8, 1, 2, 16, 4, 0.015519568151147098, ["mov     rdx, [rbp+s1_len]; n", "mov     rcx, [rbp+s2]", "mov     rax, [rbp+s1]", "mov     rsi, rcx; s2", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_F910"], ["mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 31, 0, 1, 6, 1, 2, 4, 3, 0.07557354925775978, ["mov     rax, [rbp+s2]", "mov     rsi, rax; s2", "lea     rdi, asc_1F7C0; \".\"", "call    strcmp", "test    eax, eax", "jnz     short loc_F79D"], ["mov~rax,[rbp+0]", "mov~rsi,rax", "lea~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 33, 0, 1, 6, 1, 2, 3, 3, 0.06072874493927125, ["mov     rax, [rbp+s1]", "mov     rsi, rax; s2", "lea     rdi, asc_1F7C0; \".\"", "call    strcmp", "test    eax, eax", "jnz     short loc_F77C"], ["mov~rax,[rbp+0]", "mov~rsi,rax", "lea~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 21, 0, 0, 4, 0, 1, 9, 3, 0.008771929824561403, ["mov     rax, [rbp+s2]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Eh ; '.'", "jnz     short loc_F81F"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 11, 8, 0.059716599190283395, ["mov     rax, [rbp+s1_suffix]", "jmp     short loc_F880"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [1, 0, 16, 0, 2, 14, 0, 3, 10, 9, 0.12887989203778677, ["mov     rax, [rbp+s1]", "mov     [rbp+s1_pos], rax", "mov     rax, [rbp+s2]", "mov     [rbp+s2_pos], rax", "lea     rax, [rbp+s1_pos]", "mov     rdi, rax; str", "call    match_suffix", "mov     [rbp+s1_suffix], rax", "lea     rax, [rbp+s2_pos]", "mov     rdi, rax; str", "call    match_suffix", "mov     [rbp+s2_suffix], rax", "cmp     [rbp+s1_suffix], 0", "jz      short loc_F87C"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 13, 1, 0, 7, 0, 1, 12, 7, 0.12685560053981107, ["mov     rdx, rax", "mov     rax, [rbp+s1]", "sub     rdx, rax", "mov     rax, rdx", "mov     [rbp+s1_len], rax", "cmp     [rbp+s2_suffix], 0", "jz      short loc_F89E"], ["mov~rdx,rax", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 14, 0, 0, 1, 0, 0, 11, 8, 0.059716599190283395, ["mov     rax, [rbp+s1_pos]"], ["mov~rax,[rbp+0]"]], [1, 0, 3, 0, 0, 2, 0, 1, 5, 2, 0.0020242914979757085, ["mov     eax, 1", "jmp     loc_F939"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 10, 2, 0.004048582995951417, ["mov     eax, 1", "jmp     loc_F939"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 13, 6, 0.05566801619433198, ["mov     rax, [rbp+s2_suffix]", "jmp     short loc_F8A2"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 11, 0, 0, 1, 0, 0, 13, 6, 0.05566801619433198, ["mov     rax, [rbp+s2_pos]"], ["mov~rax,[rbp+0]"]], [1, 1, 39, 1, 1, 16, 1, 2, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+s1], rdi", "mov     [rbp+s2], rsi", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     rdx, [rbp+s2]", "mov     rax, [rbp+s1]", "mov     rsi, rdx; s2", "mov     rdi, rax; s1", "call    strcmp", "mov     [rbp+simple_cmp], eax", "cmp     [rbp+simple_cmp], 0", "jnz     short loc_F731"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 19, 0, 0, 4, 0, 1, 9, 10, 0.11875843454790823, ["mov     rax, [rbp+s1]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Eh ; '.'", "jnz     short loc_F83F"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 2, 0.0020242914979757085, ["mov     eax, 0", "jmp     loc_F939"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 5, 0, 1, 9, 0, 2, 16, 3, 0.06207827260458839, ["mov     rcx, [rbp+s2_len]; s2_len", "mov     rdx, [rbp+s2]; s2", "mov     rsi, [rbp+s1_len]; s1_len", "mov     rax, [rbp+s1]", "mov     rdi, rax; s1", "call    verrevcmp", "mov     [rbp+result], eax", "cmp     [rbp+result], 0", "jnz     short loc_F936"], ["mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 15, 4, 0.03137651821862348, ["cmp     [rbp+s2_suffix], 0", "jz      short loc_F910"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 8, 0, 0, 3, 0, 1, 15, 4, 0.06106612685560054, ["mov     rax, [rbp+s1_len]", "cmp     rax, [rbp+s2_len]", "jnz     short loc_F910"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnz~FOO"]], [0, 0, 29, 0, 1, 6, 1, 2, 5, 3, 0.08771929824561403, ["mov     rax, [rbp+s1]", "mov     rsi, rax; s2", "lea     rdi, asc_1F7C2; \"..\"", "call    strcmp", "test    eax, eax", "jnz     short loc_F7BE"], ["mov~rax,[rbp+0]", "mov~rsi,rax", "lea~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 18, 0, 0, 4, 0, 1, 10, 10, 0.008097165991902834, ["mov     rax, [rbp+s2]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Eh ; '.'", "jnz     short loc_F83F"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 17, 2, 0.015182186234817813, ["mov     eax, [rbp+simple_cmp]", "jmp     short loc_F939"], ["mov~eax,[rbp+0]", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 17, 2, 0.015182186234817813, ["mov     eax, [rbp+result]"], ["mov~eax,[rbp+0]"]], [1, 0, 10, 1, 0, 7, 0, 1, 14, 5, 0.1126855600539811, ["mov     rdx, rax", "mov     rax, [rbp+s2]", "sub     rdx, rax", "mov     rax, rdx", "mov     [rbp+s2_len], rax", "cmp     [rbp+s1_suffix], 0", "jnz     short loc_F8C1"], ["mov~rdx,rax", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, 2, 0.0020242914979757085, ["mov     eax, 0FFFFFFFFh", "jmp     loc_F939"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 37, 0, 0, 4, 1, 1, 1, 3, 0.02294197031039136, ["mov     rax, [rbp+s1]", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_F746"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.0020242914979757085, ["mov     eax, 0FFFFFFFFh", "jmp     loc_F939"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.04993252361673414, ["mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_F94D"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 2, 0.0020242914979757085, ["mov     eax, 1", "jmp     loc_F939"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, 2, 0.0020242914979757085, ["mov     eax, 0FFFFFFFFh", "jmp     loc_F939"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 7, 2, 0.0020242914979757085, ["mov     eax, 1", "jmp     loc_F939"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 9, 2, 0.004048582995951417, ["mov     eax, 0FFFFFFFFh", "jmp     loc_F939"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 35, 0, 0, 4, 1, 1, 2, 3, 0.043184885290148446, ["mov     rax, [rbp+s2]", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_F75B"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 27, 0, 1, 6, 1, 2, 6, 3, 0.09716599190283401, ["mov     rax, [rbp+s2]", "mov     rsi, rax; s2", "lea     rdi, asc_1F7C2; \"..\"", "call    strcmp", "test    eax, eax", "jnz     short loc_F7DF"], ["mov~rax,[rbp+0]", "mov~rsi,rax", "lea~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 17, 2, 0, 2, 0, 0, 11, 10, 0.0, ["add     [rbp+s1], 1", "add     [rbp+s2], 1"], ["add~[rbp+0],0", "add~[rbp+0],0"]]], "func_feature": [10, 9, 43, 1, 40, 59, 1, 169, 0.04054, 3, 7], "succs": [[17, 7], [0, 2], [0, 34], [19], [19, 3], [12, 22], [32, 5], [17, 13], [10], [8, 11], [14, 15], [10], [30], [30], [26], [26], [18, 28], [9, 23], [30], [24, 25], [19, 21], [19, 4], [27, 38], [9, 39], [30], [30], [20, 21], [30], [29, 37], [30], [35, 36], [30], [30], [30], [30], [], [], [6, 31], [33, 1], [9]], "fname": "filevercmp", "n_num": 40}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 0, 1, 1, 11, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+ts], rdi", "mov     rax, [rbp+ts]", "mov     rsi, rax; tp", "mov     edi, 0; clock_id", "call    _clock_gettime", "nop", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "nop", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 11, 0.0, 0, 1], "succs": [[]], "fname": "gettime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 1, 2, 1, 1, 14, 2, 2, 0, 1, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "lea     rax, [rbp+ts]", "mov     rdi, rax; ts", "call    gettime", "mov     rax, [rbp+ts.tv_sec]", "mov     rdx, [rbp+ts.tv_nsec]", "mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_F9AE"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "lea~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [2, 2, 3, 1, 3, 2, 0, 17, 0.0, 1, 1], "succs": [[], [0, 2], []], "fname": "current_timespec", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["movzx   eax, [rbp+hard]", "leave", "retn"], ["movzx~eax,[rbp+0]", "leave", "retn"]], [3, 1, 4, 1, 1, 12, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+category], edi", "mov     [rbp+hard], 1", "mov     eax, [rbp+category]", "mov     esi, 0; locale", "mov     edi, eax; category", "call    _setlocale", "mov     [rbp+p], rax", "cmp     [rbp+p], 0", "jz      short loc_FA0B"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],0", "mov~eax,[rbp+0]", "mov~esi,0", "mov~edi,eax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 2, 0, 1, 6, 1, 2, 2, 0, 0.041666666666666664, ["mov     rax, [rbp+p]", "lea     rsi, aPosix; \"POSIX\"", "mov     rdi, rax; s1", "call    strcmp", "test    eax, eax", "jnz     short loc_FA0B"], ["mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 0, 0.041666666666666664, ["mov     [rbp+hard], 0"], ["mov~[rbp+0],0"]], [0, 0, 3, 0, 1, 6, 1, 2, 1, 0, 0.16666666666666666, ["mov     rax, [rbp+p]", "lea     rsi, aC; \"C\"", "mov     rdi, rax; s1", "call    strcmp", "test    eax, eax", "jz      short loc_FA07"], ["mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]]], "func_feature": [3, 2, 6, 0, 5, 7, 3, 28, 0.05, 2, 1], "succs": [[], [0, 4], [0, 3], [0], [2, 3]], "fname": "hard_locale", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+table], rdi", "mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 7, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_buckets", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+table], rdi", "mov     rax, [rbp+table]", "mov     rax, [rax+18h]", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 7, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_buckets_used", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+table], rdi", "mov     rax, [rbp+table]", "mov     rax, [rax+20h]", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 2, 7, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_entries", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 9, 0, 0, 4, 0, 1, 0, 0, 0.29166666666666663, ["mov     rax, [rbp+bucket]", "mov     [rbp+cursor], rax", "mov     [rbp+bucket_length], 1", "jmp     short loc_FA87"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 9, 0, 0, 4, 1, 1, 2, 3, 0.3611111111111111, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_FAAC"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 9, 0, 0, 8, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+table], rdi", "mov     [rbp+max_bucket_length], 0", "mov     rax, [rbp+table]", "mov     rax, [rax]", "mov     [rbp+bucket], rax", "jmp     short loc_FAB1"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["mov     rax, [rbp+max_bucket_length]", "pop     rbp", "retn"], ["mov~rax,[rbp+0]", "pop~rbp", "retn"]], [0, 0, 9, 0, 0, 4, 0, 0, 1, 1, 0.4861111111111111, ["mov     rax, [rbp+table]", "mov     rax, [rax+8]", "cmp     [rbp+bucket], rax", "jb      short loc_FA64"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [0, 0, 9, 0, 0, 2, 0, 0, 6, 3, 0.0, ["mov     rax, [rbp+bucket_length]", "mov     [rbp+max_bucket_length], rax"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [0, 0, 9, 0, 0, 3, 0, 0, 5, 3, 0.29166666666666663, ["mov     rax, [rbp+bucket_length]", "cmp     rax, [rbp+max_bucket_length]", "jbe     short loc_FAAC"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jbe~FOO"]], [1, 0, 9, 1, 0, 1, 0, 0, 3, 2, 0.3611111111111111, ["add     [rbp+bucket], 10h"], ["add~[rbp+0],0"]], [1, 0, 9, 1, 0, 1, 0, 0, 5, 5, 0.0, ["add     [rbp+bucket_length], 1"], ["add~[rbp+0],0"]], [1, 0, 9, 0, 0, 5, 0, 1, 4, 4, 0.40277777777777773, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+cursor], rax", "cmp     [rbp+cursor], 0", "jnz     short loc_FA82"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]]], "func_feature": [0, 1, 4, 0, 10, 13, 1, 35, 0.21944, 0, 2], "succs": [[9], [0, 7], [4], [], [1, 3], [7], [5, 7], [4], [9], [8, 6]], "fname": "hash_get_max_bucket_length", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 11, 0, 0, 5, 0, 1, 0, 0, 0.19999999999999998, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+cursor], rax", "cmp     [rbp+cursor], 0", "jnz     short loc_FB0A"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 11, 2, 0, 5, 0, 1, 3, 6, 0.07272727272727272, ["mov     rax, [rbp+bucket]", "mov     [rbp+cursor], rax", "add     [rbp+n_buckets_used], 1", "add     [rbp+n_entries], 1", "jmp     short loc_FB0F"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "add~[rbp+0],0", "add~[rbp+0],0", "jmp~FOO"]], [1, 0, 11, 1, 0, 1, 0, 0, 5, 6, 0.0, ["add     [rbp+n_entries], 1"], ["add~[rbp+0],0"]], [0, 0, 4, 0, 0, 4, 0, 1, 2, 2, 0.2545454545454545, ["mov     rax, [rbp+table]", "mov     rax, [rax+18h]", "cmp     [rbp+n_buckets_used], rax", "jnz     short loc_FB58"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [0, 0, 11, 0, 0, 4, 0, 0, 1, 3, 0.39999999999999997, ["mov     rax, [rbp+table]", "mov     rax, [rax+8]", "cmp     [rbp+bucket], rax", "jb      short loc_FAEA"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [1, 0, 11, 1, 0, 1, 0, 0, 3, 4, 0.2636363636363636, ["add     [rbp+bucket], 10h"], ["add~[rbp+0],0"]], [0, 0, 11, 0, 0, 4, 1, 1, 2, 5, 0.11818181818181818, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_FB22"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [2, 0, 11, 0, 0, 9, 0, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+table], rdi", "mov     [rbp+n_buckets_used], 0", "mov     [rbp+n_entries], 0", "mov     rax, [rbp+table]", "mov     rax, [rax]", "mov     [rbp+bucket], rax", "jmp     short loc_FB27"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 3, 0, 0, 4, 0, 1, 3, 2, 0.07272727272727272, ["mov     rax, [rbp+table]", "mov     rax, [rax+20h]", "cmp     [rbp+n_entries], rax", "jnz     short loc_FB58"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.004545454545454545, ["mov     eax, 1", "jmp     short loc_FB5D"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, 1, 0.07727272727272727, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 1, 7, 0, 12, 16, 0, 42, 0.12197, 0, 4], "succs": [[2, 5], [0], [0], [8, 10], [3, 6], [4], [1, 5], [4], [9, 10], [11], [11], []], "fname": "hash_table_ok", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.06666666666666667, ["cvtsi2sd xmm0, rax", "jmp     short loc_FC3D"], ["cvtsi2sd~xmm0,rax", "jmp~FOO"]], [0, 0, 3, 0, 0, 5, 1, 1, 2, 2, 0.3, ["movsd   xmm1, cs:qword_1F858", "mulsd   xmm1, xmm0", "mov     rax, [rbp+n_buckets]", "test    rax, rax", "js      short loc_FC28"], ["movsd~xmm1,<TAG>", "mulsd~xmm1,xmm0", "mov~rax,[rbp+0]", "test~rax,rax", "js~FOO"]], [2, 0, 4, 0, 0, 6, 2, 0, 1, 3, 0.06666666666666667, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2sd xmm0, rdx", "addsd   xmm0, xmm0"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2sd~xmm0,rdx", "addsd~xmm0,xmm0"]], [3, 0, 6, 1, 6, 36, 1, 7, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+table], rdi", "mov     [rbp+stream], rsi", "mov     rax, [rbp+table]", "mov     rdi, rax; table", "call    hash_get_n_entries", "mov     [rbp+n_entries], rax", "mov     rax, [rbp+table]", "mov     rdi, rax; table", "call    hash_get_n_buckets", "mov     [rbp+n_buckets], rax", "mov     rax, [rbp+table]", "mov     rdi, rax; table", "call    hash_get_n_buckets_used", "mov     [rbp+n_buckets_used], rax", "mov     rax, [rbp+table]", "mov     rdi, rax; table", "call    hash_get_max_bucket_length", "mov     [rbp+max_bucket_length], rax", "mov     rdx, [rbp+n_entries]", "mov     rax, [rbp+stream]", "lea     rsi, aEntriesLu; \"# entries:         %lu\\n\"", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "mov     rdx, [rbp+n_buckets]", "mov     rax, [rbp+stream]", "lea     rsi, aBucketsLu; \"# buckets:         %lu\\n\"", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "mov     rax, [rbp+n_buckets_used]", "test    rax, rax", "js      short loc_FBF7"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "mov~rax,[rbp+0]", "test~rax,rax", "js~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 1, 3, 0.06666666666666667, ["cvtsi2sd xmm0, rax", "jmp     short loc_FC0C"], ["cvtsi2sd~xmm0,rax", "jmp~FOO"]], [2, 0, 1, 0, 0, 6, 2, 0, 3, 1, 0.06666666666666667, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2sd xmm0, rdx", "addsd   xmm0, xmm0"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2sd~xmm0,rdx", "addsd~xmm0,xmm0"]], [2, 0, 0, 0, 2, 17, 0, 2, 4, 0, 0.0, ["divsd   xmm1, xmm0", "movapd  xmm0, xmm1", "mov     rdx, [rbp+n_buckets_used]", "mov     rax, [rbp+stream]", "lea     rsi, aBucketsUsedLu2; \"# buckets used:    %lu (%.2f%%)\\n\"", "mov     rdi, rax; stream", "mov     eax, 1", "call    _fprintf", "mov     rdx, [rbp+max_bucket_length]", "mov     rax, [rbp+stream]", "lea     rsi, aMaxBucketLengt; \"max bucket length: %lu\\n\"", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "nop", "leave", "retn"], ["divsd~xmm1,xmm0", "movapd~xmm0,xmm1", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "nop", "leave", "retn"]]], "func_feature": [8, 6, 12, 0, 7, 8, 0, 74, 0.08095, 5, 1], "succs": [[6], [0, 5], [1], [2, 4], [1], [6], []], "fname": "hash_print_statistics", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 1, 2, 1, 1, 18, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+table], rdi", "mov     [rbp+key], rsi", "mov     rax, [rbp+table]", "mov     rax, [rax+30h]", "mov     rdx, [rbp+table]", "mov     rcx, [rdx+10h]", "mov     rdx, [rbp+key]", "mov     rsi, rcx", "mov     rdi, rdx", "call    rax", "mov     [rbp+n], rax", "mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "cmp     [rbp+n], rax", "jb      short loc_FCC3"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rcx,[rdx+0]", "mov~rdx,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rdx", "call~rax", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [1, 0, 0, 2, 0, 7, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+table]", "mov     rax, [rax]", "mov     rdx, [rbp+n]", "shl     rdx, 4", "add     rax, rdx", "leave", "retn"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdx,[rbp+0]", "shl~rdx,0", "add~rax,rdx", "leave", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [2, 0, 2, 0, 3, 2, 5, 26, 0.0, 0, 3], "succs": [[1, 2], [], []], "fname": "safe_hasher", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 7, 0, 0, 2, 0, 1, 0, 0, 0.2638888888888889, ["cmp     [rbp+cursor], 0", "jnz     short loc_FD1B"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 1, 3, 0.08333333333333333, ["mov     rax, [rbp+bucket]", "mov     [rbp+cursor], rax", "jmp     short loc_FD5C"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 7, 0, 0, 3, 0, 0, 5, 3, 0.06944444444444445, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+cursor], rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, 1, 0.041666666666666664, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 7, 0, 1, 10, 1, 2, 4, 2, 0.08333333333333333, ["mov     rax, [rbp+table]", "mov     rax, [rax+38h]", "mov     rdx, [rbp+cursor]", "mov     rcx, [rdx]", "mov     rdx, [rbp+entry]", "mov     rsi, rcx", "mov     rdi, rdx", "call    rax", "test    al, al", "jz      short loc_FD50"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rcx,<TAG>", "mov~rdx,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rdx", "call~rax", "test~al,al", "jz~FOO"]], [0, 0, 7, 0, 0, 4, 0, 1, 3, 2, 0.15277777777777776, ["mov     rax, [rbp+cursor]", "mov     rax, [rax]", "cmp     [rbp+entry], rax", "jz      short loc_FD47"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 1, 9, 1, 1, 15, 1, 2, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+table], rdi", "mov     [rbp+entry], rsi", "mov     rdx, [rbp+entry]", "mov     rax, [rbp+table]", "mov     rsi, rdx; key", "mov     rdi, rax; table", "call    safe_hasher", "mov     [rbp+bucket], rax", "mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jnz     short loc_FD11"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.013888888888888888, ["mov     eax, 0", "jmp     short locret_FD68"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 4, 1, 0.027777777777777776, ["mov     rax, [rbp+cursor]", "mov     rax, [rax]", "jmp     short locret_FD68"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "jmp~FOO"]]], "func_feature": [2, 2, 9, 0, 10, 13, 1, 45, 0.07361, 0, 1], "succs": [[3, 5], [0], [0], [7], [9, 2], [9, 4], [8, 1], [], [7], [7]], "fname": "hash_lookup", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 1, 8, 1, 0, 8, 1, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+table], rdi", "mov     rax, [rbp+table]", "mov     rax, [rax+20h]", "test    rax, rax", "jnz     short loc_FD8A"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [1, 0, 6, 1, 0, 2, 0, 1, 0, 4, 0.03571428571428571, ["add     [rbp+bucket], 10h", "jmp     short loc_FD95"], ["add~[rbp+0],0", "jmp~FOO"]], [0, 0, 6, 0, 0, 4, 1, 1, 0, 2, 0.17857142857142855, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_FDBD"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 6, 0, 0, 4, 0, 0, 0, 3, 0.25, ["mov     rax, [rbp+table]", "mov     rax, [rax+8]", "cmp     [rbp+bucket], rax", "jb      short loc_FDA8"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.017857142857142856, ["mov     eax, 0", "jmp     short locret_FDC4"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 0, 1, 0.07142857142857142, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "jmp     short locret_FDC4"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "jmp~FOO"]], [0, 0, 6, 0, 0, 3, 0, 0, 0, 4, 0.08928571428571427, ["mov     rax, [rbp+table]", "mov     rax, [rax]", "mov     [rbp+bucket], rax"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax"]]], "func_feature": [1, 2, 6, 0, 9, 10, 0, 29, 0.07143, 0, 2], "succs": [[8, 6], [4], [1, 7], [], [2, 3], [], [5], [5], [4]], "fname": "hash_get_first", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 10, 0, 0, 4, 0, 1, 0, 0, 0.1277777777777778, ["mov     rax, [rbp+cursor]", "mov     rax, [rax]", "cmp     [rbp+entry], rax", "jnz     short loc_FE1C"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "cmp~[rbp+0],rax", "jnz~FOO"]], [1, 0, 10, 0, 0, 5, 0, 1, 2, 4, 0.17777777777777778, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+cursor], rax", "cmp     [rbp+cursor], 0", "jnz     short loc_FDF5"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 1, 10, 1, 1, 13, 0, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+table], rdi", "mov     [rbp+entry], rsi", "mov     rdx, [rbp+entry]", "mov     rax, [rbp+table]", "mov     rsi, rdx; key", "mov     rdi, rax; table", "call    safe_hasher", "mov     [rbp+bucket], rax", "mov     rax, [rbp+bucket]", "mov     [rbp+cursor], rax"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [0, 0, 1, 0, 0, 3, 0, 1, 6, 1, 0.011111111111111112, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "jmp     short locret_FE5E"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "jmp~FOO"]], [0, 0, 5, 0, 0, 4, 1, 1, 5, 2, 0.06666666666666667, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_FE46"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 10, 0, 0, 4, 1, 1, 2, 2, 0.061111111111111116, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "test    rax, rax", "jz      short loc_FE1C"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, 3, 0.18333333333333335, ["jmp     short loc_FE46"], ["jmp~FOO"]], [1, 0, 5, 1, 0, 5, 0, 0, 4, 2, 0.19444444444444445, ["add     [rbp+bucket], 10h", "mov     rax, [rbp+table]", "mov     rax, [rax+8]", "cmp     [rbp+bucket], rax", "jb      short loc_FE31"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 5, 1, 0.02777777777777778, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 1, 0, 0, 4, 0, 1, 3, 1, 0.03888888888888889, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     rax, [rax]", "jmp     short locret_FE5E"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rax,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [1, 2, 8, 0, 11, 15, 0, 46, 0.08081, 0, 2], "succs": [[1, 5], [0, 6], [0], [10], [3, 7], [9, 1], [7], [8, 4], [10], [10], []], "fname": "hash_get_next", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 10, 0, 0, 2, 0, 1, 0, 0, 0.3666666666666667, ["cmp     [rbp+cursor], 0", "jnz     short loc_FE9B"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 10, 0, 0, 3, 0, 1, 3, 4, 0.17777777777777778, ["mov     rax, [rbp+bucket]", "mov     [rbp+cursor], rax", "jmp     short loc_FEDC"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 10, 1, 0, 12, 0, 0, 6, 4, 0.06666666666666667, ["mov     rax, [rbp+counter]", "lea     rdx, [rax+1]", "mov     [rbp+counter], rdx", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+buffer]", "add     rdx, rax", "mov     rax, [rbp+cursor]", "mov     rax, [rax]", "mov     [rdx], rax", "mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+cursor], rax"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~<TAG>,rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax"]], [1, 0, 10, 0, 0, 10, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+table], rdi", "mov     [rbp+buffer], rsi", "mov     [rbp+buffer_size], rdx", "mov     [rbp+counter], 0", "mov     rax, [rbp+table]", "mov     rax, [rax]", "mov     [rbp+bucket], rax", "jmp     short loc_FEE8"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 6, 1, 0.044444444444444446, ["mov     rax, [rbp+counter]", "jmp     short loc_FEFA"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 10, 0, 0, 3, 0, 0, 5, 2, 0.17777777777777778, ["mov     rax, [rbp+counter]", "cmp     rax, [rbp+buffer_size]", "jb      short loc_FEAB"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jb~FOO"]], [0, 0, 10, 0, 0, 4, 1, 1, 2, 4, 0.22222222222222224, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_FEE3"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 10, 0, 0, 4, 0, 0, 1, 2, 0.33333333333333337, ["mov     rax, [rbp+table]", "mov     rax, [rax+8]", "cmp     [rbp+bucket], rax", "jb      short loc_FE85"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [1, 0, 10, 1, 0, 1, 0, 0, 3, 3, 0.2, ["add     [rbp+bucket], 10h"], ["add~[rbp+0],0"]], [0, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.044444444444444446, ["mov     rax, [rbp+counter]"], ["mov~rax,[rbp+0]"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 1, 5, 0, 11, 14, 0, 44, 0.14848, 0, 2], "succs": [[8, 5], [0], [0], [7], [10], [2, 4], [8, 1], [9, 6], [7], [10], []], "fname": "hash_get_entries", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 10, 1, 0, 11, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+table], rdi", "mov     [rbp+processor], rsi", "mov     [rbp+processor_data], rdx", "mov     [rbp+counter], 0", "mov     rax, [rbp+table]", "mov     rax, [rax]", "mov     [rbp+bucket], rax", "jmp     short loc_FF7C"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 10, 0, 0, 4, 0, 0, 0, 2, 0.33333333333333337, ["mov     rax, [rbp+table]", "mov     rax, [rax+8]", "cmp     [rbp+bucket], rax", "jb      short loc_FF25"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [1, 0, 10, 1, 0, 1, 0, 0, 0, 3, 0.2, ["add     [rbp+bucket], 10h"], ["add~[rbp+0],0"]], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.044444444444444446, ["mov     rax, [rbp+counter]"], ["mov~rax,[rbp+0]"]], [0, 0, 10, 0, 0, 4, 1, 1, 0, 4, 0.22222222222222224, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_FF77"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 0, 3, 0.3666666666666667, ["cmp     [rbp+cursor], 0", "jnz     short loc_FF3B"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 10, 1, 0, 4, 0, 0, 0, 4, 0.06666666666666667, ["add     [rbp+counter], 1", "mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+cursor], rax"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax"]], [1, 0, 10, 0, 1, 10, 2, 2, 0, 2, 0.17777777777777778, ["mov     rax, [rbp+cursor]", "mov     rdx, [rax]", "mov     rcx, [rbp+processor_data]", "mov     rax, [rbp+processor]", "mov     rsi, rcx", "mov     rdi, rdx", "call    rax", "xor     eax, 1", "test    al, al", "jz      short loc_FF5F"], ["mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rdx", "call~rax", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 10, 0, 0, 3, 0, 1, 0, 4, 0.17777777777777778, ["mov     rax, [rbp+bucket]", "mov     [rbp+cursor], rax", "jmp     short loc_FF70"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.044444444444444446, ["mov     rax, [rbp+counter]", "jmp     short locret_FF8E"], ["mov~rax,[rbp+0]", "jmp~FOO"]]], "func_feature": [1, 3, 7, 0, 11, 14, 0, 44, 0.14848, 0, 3], "succs": [[1], [3, 4], [1], [9], [8, 2], [2, 7], [5], [10, 6], [5], [], [9]], "fname": "hash_do_for_each", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[3, 0, 3, 5, 0, 11, 0, 0, 0, 0, 0.0, ["mov     rdx, [rbp+value]", "mov     rax, rdx", "shl     rax, 5", "sub     rax, rdx", "mov     rdx, rax", "movzx   eax, [rbp+ch_0]", "add     rax, rdx", "mov     edx, 0", "div     [rbp+n_buckets]", "mov     [rbp+value], rdx", "add     [rbp+string], 1"], ["mov~rdx,[rbp+0]", "mov~rax,rdx", "shl~rax,0", "sub~rax,rdx", "mov~rdx,rax", "movzx~eax,[rbp+0]", "add~rax,rdx", "mov~edx,0", "div~,[rbp+0]", "mov~[rbp+0],rdx", "add~[rbp+0],0"]], [1, 0, 3, 0, 0, 5, 0, 1, 1, 1, 0.5, ["mov     rax, [rbp+string]", "movzx   eax, byte ptr [rax]", "mov     [rbp+ch_0], al", "cmp     [rbp+ch_0], 0", "jnz     short loc_FFA6"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 6, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+string], rdi", "mov     [rbp+n_buckets], rsi", "mov     [rbp+value], 0", "jmp     short loc_FFD0"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["mov     rax, [rbp+value]", "pop     rbp", "retn"], ["mov~rax,[rbp+0]", "pop~rbp", "retn"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 25, 0.125, 0, 5], "succs": [[1], [0, 3], [1], []], "fname": "hash_string", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 4, 1, 0, 6, 1, 1, 0, 0, 0.16666666666666666, ["mov     rax, [rbp+candidate]", "mov     edx, 0", "div     [rbp+divisor]", "mov     rax, rdx", "test    rax, rax", "jnz     short loc_10005"], ["mov~rax,[rbp+0]", "mov~edx,0", "div~,[rbp+0]", "mov~rax,rdx", "test~rax,rax", "jnz~FOO"]], [0, 0, 4, 0, 0, 3, 0, 0, 1, 1, 0.41666666666666663, ["mov     rax, [rbp+square]", "cmp     rax, [rbp+candidate]", "jnb     short loc_1003A"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 4, 1, 0, 8, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+candidate], rdi", "mov     [rbp+divisor], 3", "mov     rax, [rbp+divisor]", "imul    rax, [rbp+divisor]", "mov     [rbp+square], rax", "jmp     short loc_1001B"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "imul~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [3, 0, 4, 4, 0, 5, 0, 0, 3, 2, 0.08333333333333333, ["add     [rbp+divisor], 1", "mov     rax, [rbp+divisor]", "shl     rax, 2", "add     [rbp+square], rax", "add     [rbp+divisor], 1"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "shl~rax,0", "add~[rbp+0],rax", "add~[rbp+0],0"]], [1, 0, 0, 1, 0, 8, 1, 0, 2, 0, 0.0, ["mov     rax, [rbp+candidate]", "mov     edx, 0", "div     [rbp+divisor]", "mov     rax, rdx", "test    rax, rax", "setnz   al", "pop     rbp", "retn"], ["mov~rax,[rbp+0]", "mov~edx,0", "div~,[rbp+0]", "mov~rax,rdx", "test~rax,rax", "setnz~al", "pop~rbp", "retn"]]], "func_feature": [0, 2, 2, 0, 5, 6, 1, 30, 0.13333, 0, 7], "succs": [[3, 4], [0, 4], [1], [1], []], "fname": "is_prime", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 6, 1, 0, 6, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 8", "mov     [rbp+candidate], rdi", "cmp     [rbp+candidate], 9", "ja      short loc_1006D"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "cmp~[rbp+0],0", "ja~FOO"]], [1, 0, 5, 0, 0, 1, 0, 0, 0, 3, 0.0, ["mov     [rbp+candidate], 0Ah"], ["mov~[rbp+0],0"]], [1, 0, 4, 0, 1, 6, 2, 2, 0, 1, 0.13333333333333333, ["mov     rax, [rbp+candidate]", "mov     rdi, rax; candidate", "call    is_prime", "xor     eax, 1", "test    al, al", "jnz     short loc_10074"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "xor~eax,0", "test~al,al", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.36666666666666664, ["cmp     [rbp+candidate], 0FFFFFFFFFFFFFFFFh", "jz      short loc_10093"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 1, 1, 0, 2, 0.26666666666666666, ["or      [rbp+candidate], 1", "jmp     short loc_10079"], ["or~[rbp+0],0", "jmp~FOO"]], [1, 0, 4, 1, 0, 1, 0, 0, 0, 2, 0.03333333333333333, ["add     [rbp+candidate], 2"], ["add~[rbp+0],0"]], [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+candidate]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]]], "func_feature": [1, 3, 5, 0, 7, 9, 1, 21, 0.11429, 0, 2], "succs": [[1, 4], [4], [5, 6], [2, 6], [3], [3], []], "fname": "next_prime", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+tuning], rdi", "mov     rax, [rbp+tuning]", "pxor    xmm0, xmm0", "movss   dword ptr [rax], xmm0", "mov     rax, [rbp+tuning]", "movss   xmm0, cs:dword_1F860", "movss   dword ptr [rax+4], xmm0", "mov     rax, [rbp+tuning]", "movss   xmm0, cs:dword_1F864", "movss   dword ptr [rax+8], xmm0", "mov     rax, [rbp+tuning]", "movss   xmm0, cs:dword_1F868", "movss   dword ptr [rax+0Ch], xmm0", "mov     rax, [rbp+tuning]", "mov     byte ptr [rax+10h], 0", "nop", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "pxor~xmm0,xmm0", "movss~<TAG>,xmm0", "mov~rax,[rbp+0]", "movss~xmm0,<TAG>", "movss~[word ptr [rax+0],xmm0", "mov~rax,[rbp+0]", "movss~xmm0,<TAG>", "movss~[word ptr [rax+0],xmm0", "mov~rax,[rbp+0]", "movss~xmm0,<TAG>", "movss~[word ptr [rax+0],xmm0", "mov~rax,[rbp+0]", "mov~[yte ptr [rax+0],0", "nop", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 20, 0.0, 3, 0], "succs": [[]], "fname": "hash_reset_tuning", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 1, 0, 2, 1, 16, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+data], rdi", "mov     [rbp+n], rsi", "mov     rax, [rbp+data]", "mov     esi, 3; n", "mov     rdi, rax; x", "call    rotr_sz", "mov     [rbp+val], rax", "mov     rax, [rbp+val]", "mov     edx, 0", "div     [rbp+n]", "mov     rax, rdx", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~edx,0", "div~,[rbp+0]", "mov~rax,rdx", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 16, 0.0, 0, 2], "succs": [[]], "fname": "raw_hasher", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+a]", "cmp     rax, [rbp+b]", "setz    al", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "setz~al", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 9, 0.0, 0, 0], "succs": [[]], "fname": "raw_comparator", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 9, 0, 0, 6, 0, 0, 0, 0, 0.07272727272727272, ["movss   xmm0, cs:dword_1F86C", "movss   [rbp+epsilon], xmm0", "mov     rax, [rbp+tuning]", "movss   xmm0, dword ptr [rax+8]", "ucomiss xmm0, [rbp+epsilon]", "jbe     loc_10228"], ["movss~xmm0,<TAG>", "movss~[rbp+0],xmm0", "mov~rax,[rbp+0]", "movss~xmm0,[word ptr [rax+0]", "ucomiss~xmm0,[rbp+0]", "jbe~FOO"]], [0, 0, 11, 0, 0, 9, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+table], rdi", "mov     rax, [rbp+table]", "mov     rax, [rax+28h]", "mov     [rbp+tuning], rax", "lea     rax, default_tuning", "cmp     [rbp+tuning], rax", "jnz     short loc_10166"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "lea~rax,<TAG>", "cmp~[rbp+0],rax", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.00909090909090909, ["mov     eax, 1", "jmp     loc_1023C"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 7, 0, 0, 7, 0, 0, 3, 2, 0.13636363636363635, ["movss   xmm1, [rbp+epsilon]", "movss   xmm0, cs:dword_1F860", "addss   xmm0, xmm1", "mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+0Ch]", "ucomiss xmm1, xmm0", "jbe     short loc_10228"], ["movss~xmm1,[rbp+0]", "movss~xmm0,<TAG>", "addss~xmm0,xmm1", "mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [0, 0, 8, 0, 0, 6, 0, 0, 2, 2, 0.10909090909090909, ["mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+8]", "movss   xmm0, cs:dword_1F860", "subss   xmm0, [rbp+epsilon]", "ucomiss xmm0, xmm1", "jbe     loc_10228"], ["mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "movss~xmm0,<TAG>", "subss~xmm0,[rbp+0]", "ucomiss~xmm0,xmm1", "jbe~FOO"]], [0, 0, 4, 0, 0, 5, 0, 0, 6, 2, 0.10909090909090909, ["mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+4]", "movss   xmm0, cs:dword_1F860", "ucomiss xmm0, xmm1", "jb      short loc_10228"], ["mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "movss~xmm0,<TAG>", "ucomiss~xmm0,xmm1", "jb~FOO"]], [0, 0, 5, 0, 0, 7, 0, 0, 5, 2, 0.13636363636363635, ["mov     rax, [rbp+tuning]", "movss   xmm0, dword ptr [rax]", "addss   xmm0, [rbp+epsilon]", "mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+4]", "ucomiss xmm1, xmm0", "jbe     short loc_10228"], ["mov~rax,[rbp+0]", "movss~xmm0,<TAG>", "addss~xmm0,[rbp+0]", "mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 8, 1, 0.004545454545454545, ["mov     eax, 1", "jmp     short loc_1023C"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 7, 0, 0, 7, 2, 0.06363636363636363, ["mov     rax, [rbp+tuning]", "movss   xmm0, dword ptr [rax]", "addss   xmm0, [rbp+epsilon]", "mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+8]", "ucomiss xmm1, xmm0", "jbe     short loc_10228"], ["mov~rax,[rbp+0]", "movss~xmm0,<TAG>", "addss~xmm0,[rbp+0]", "mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [0, 0, 6, 0, 0, 5, 0, 0, 4, 2, 0.14545454545454545, ["mov     rax, [rbp+tuning]", "movss   xmm0, dword ptr [rax]", "pxor    xmm1, xmm1", "ucomiss xmm0, xmm1", "jb      short loc_10228"], ["mov~rax,[rbp+0]", "movss~xmm0,<TAG>", "pxor~xmm1,xmm1", "ucomiss~xmm0,xmm1", "jb~FOO"]], [1, 0, 1, 0, 0, 4, 0, 0, 2, 1, 0.05909090909090909, ["mov     rax, [rbp+table]", "lea     rdx, default_tuning", "mov     [rax+28h], rdx", "mov     eax, 0"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~[rax+0],rdx", "mov~eax,0"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 0, 3, 0, 12, 19, 3, 62, 0.07045, 3, 0], "succs": [[10, 4], [0, 2], [11], [9, 10], [10, 3], [8, 10], [10, 5], [11], [10, 7], [10, 6], [11], []], "fname": "check_tuning", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 6, 0, 0, 1, 0, 0, 0, 0, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [2, 0, 7, 1, 1, 9, 0, 1, 1, 4, 0.2150735294117647, ["mov     rax, [rbp+candidate]", "mov     rdi, rax; candidate", "call    next_prime", "mov     [rbp+candidate], rax", "mov     ecx, 0", "mov     edx, 8", "mov     rax, rdx", "mul     [rbp+candidate]", "jno     short loc_10326"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~ecx,0", "mov~edx,0", "mov~rax,rdx", "mul~,[rbp+0]", "jno~FOO"]], [2, 0, 14, 0, 0, 6, 2, 0, 2, 3, 0.03768382352941176, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0"]], [0, 0, 16, 0, 0, 3, 1, 1, 1, 4, 0.03125, ["mov     rax, [rbp+candidate]", "test    rax, rax", "js      short loc_10271"], ["mov~rax,[rbp+0]", "test~rax,rax", "js~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 3, 3, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [0, 0, 5, 0, 0, 2, 1, 0, 2, 3, 0.18566176470588236, ["test    rax, rax", "jns     short loc_10330"], ["test~rax,rax", "jns~FOO"]], [0, 0, 13, 0, 0, 7, 0, 0, 3, 2, 0.1636029411764706, ["mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+8]", "divss   xmm0, xmm1", "movss   [rbp+new_candidate], xmm0", "movss   xmm0, [rbp+new_candidate]", "ucomiss xmm0, cs:dword_1F870", "jb      short loc_102B0"], ["mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "divss~xmm0,xmm1", "movss~[rbp+0],xmm0", "movss~xmm0,[rbp+0]", "ucomiss~xmm0,<TAG>", "jb~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 2, 3, 0.03768382352941176, ["cvtsi2ss xmm0, rax", "jmp     short loc_10286"], ["cvtsi2ss~xmm0,rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 5, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.016544117647058824, ["mov     eax, 0", "jmp     locret_10345"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.017463235294117647, ["mov     eax, 0", "jmp     short locret_10345"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, 1, 0.017463235294117647, ["mov     rax, [rbp+candidate]"], ["mov~rax,[rbp+0]"]], [1, 0, 3, 0, 0, 4, 2, 1, 3, 2, 0.12683823529411764, ["mov     rax, rcx", "and     eax, 1", "test    al, al", "jz      short loc_10341"], ["mov~rax,rcx", "and~eax,0", "test~al,al", "jz~FOO"]], [1, 1, 17, 1, 0, 10, 2, 1, 0, 5, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+candidate], rdi", "mov     [rbp+tuning], rsi", "mov     rax, [rbp+tuning]", "movzx   eax, byte ptr [rax+10h]", "xor     eax, 1", "test    al, al", "jz      loc_102FE"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 9, 0, 0, 4, 0, 1, 5, 6, 0.07720588235294118, ["movss   xmm0, [rbp+new_candidate]", "cvttss2si rax, xmm0", "mov     [rbp+candidate], rax", "jmp     short loc_102F6"], ["movss~xmm0,[rbp+0]", "cvttss2si~rax,xmm0", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 11, 0, 0, 3, 0, 0, 4, 7, 0.15808823529411764, ["movss   xmm0, [rbp+new_candidate]", "ucomiss xmm0, cs:dword_1F874", "jnb     short loc_102CE"], ["movss~xmm0,[rbp+0]", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [1, 0, 9, 0, 0, 7, 1, 0, 5, 6, 0.07720588235294118, ["movss   xmm0, [rbp+new_candidate]", "movss   xmm1, cs:dword_1F874", "subss   xmm0, xmm1", "cvttss2si rax, xmm0", "mov     [rbp+candidate], rax", "mov     rax, 8000000000000000h", "xor     [rbp+candidate], rax"], ["movss~xmm0,[rbp+0]", "movss~xmm1,<TAG>", "subss~xmm0,xmm1", "cvttss2si~rax,xmm0", "mov~[rbp+0],rax", "mov~rax,0", "xor~[rbp+0],rax"]], [0, 0, 8, 0, 0, 2, 0, 0, 6, 5, 0.19117647058823528, ["mov     rax, [rbp+candidate]", "mov     [rbp+candidate], rax"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax"]]], "func_feature": [1, 9, 8, 0, 18, 24, 2, 68, 0.07516, 2, 2], "succs": [[5], [0, 5], [6], [2, 7], [12], [12, 4], [9, 15], [6], [], [8], [8], [8], [10, 11], [1, 3], [17], [16, 14], [17], [1]], "fname": "compute_bucket_size", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.020833333333333332, ["mov     eax, 0", "jmp     locret_104B9"], ["mov~eax,0", "jmp~FOO"]], [1, 1, 12, 0, 1, 5, 0, 2, 2, 2, 0.2, ["mov     edi, 50h ; 'P'; size", "call    malloc", "mov     [rbp+table], rax", "cmp     [rbp+table], 0", "jnz     short loc_103A6"], ["mov~edi,<STR>", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 2, 0, 0, 2, 0, 1, 5, 2, 0.04583333333333333, ["nop", "jmp     short fail"], ["nop", "jmp~FOO"]], [1, 0, 8, 0, 1, 9, 2, 2, 4, 3, 0.2125, ["mov     rax, [rbp+table]", "mov     rdx, [rbp+tuning]", "mov     [rax+28h], rdx", "mov     rax, [rbp+table]", "mov     rdi, rax; table", "call    check_tuning", "xor     eax, 1", "test    al, al", "jnz     loc_104A1"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "xor~eax,0", "test~al,al", "jnz~FOO"]], [0, 0, 13, 0, 0, 2, 0, 0, 2, 3, 0.0, ["lea     rax, raw_comparator", "mov     [rbp+comparator], rax"], ["lea~rax,<TAG>", "mov~[rbp+0],rax"]], [1, 0, 14, 0, 0, 2, 0, 1, 1, 3, 0.11666666666666667, ["cmp     [rbp+comparator], 0", "jnz     short loc_10387"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 6, 0, 1, 12, 1, 2, 5, 3, 0.13333333333333333, ["mov     rdx, [rbp+tuning]", "mov     rax, [rbp+candidate]", "mov     rsi, rdx; tuning", "mov     rdi, rax; candidate", "call    compute_bucket_size", "mov     rdx, rax", "mov     rax, [rbp+table]", "mov     [rax+10h], rdx", "mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "test    rax, rax", "jz      loc_104A4"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 2, 0, 0, 2, 0, 1, 6, 2, 0.00625, ["nop", "jmp     short fail"], ["nop", "jmp~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 7, 2, 0.004166666666666667, ["nop"], ["nop"]], [1, 0, 4, 0, 1, 12, 1, 2, 6, 2, 0.07708333333333334, ["mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "mov     esi, 10h; size", "mov     rdi, rax; nmemb", "call    _calloc", "mov     rdx, rax", "mov     rax, [rbp+table]", "mov     [rax], rdx", "mov     rax, [rbp+table]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_104A7"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [2, 0, 16, 1, 0, 10, 0, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+candidate], rdi", "mov     [rbp+tuning], rsi", "mov     [rbp+hasher], rdx", "mov     [rbp+comparator], rcx", "mov     [rbp+data_freer], r8", "cmp     [rbp+hasher], 0", "jnz     short loc_10375"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 3, 4, 0.1875, ["cmp     [rbp+tuning], 0", "jnz     short loc_103B8"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 15, 0, 0, 2, 0, 0, 1, 4, 0.0, ["lea     rax, raw_hasher", "mov     [rbp+hasher], rax"], ["lea~rax,<TAG>", "mov~[rbp+0],rax"]], [0, 0, 9, 0, 0, 2, 0, 0, 4, 4, 0.0, ["lea     rax, default_tuning", "mov     [rbp+tuning], rax"], ["lea~rax,<TAG>", "mov~[rbp+0],rax"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [4, 0, 1, 2, 0, 25, 0, 1, 7, 1, 0.00625, ["mov     rax, [rbp+table]", "mov     rdx, [rax]", "mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "shl     rax, 4", "add     rdx, rax", "mov     rax, [rbp+table]", "mov     [rax+8], rdx", "mov     rax, [rbp+table]", "mov     qword ptr [rax+18h], 0", "mov     rax, [rbp+table]", "mov     qword ptr [rax+20h], 0", "mov     rax, [rbp+table]", "mov     rdx, [rbp+hasher]", "mov     [rax+30h], rdx", "mov     rax, [rbp+table]", "mov     rdx, [rbp+comparator]", "mov     [rax+38h], rdx", "mov     rax, [rbp+table]", "mov     rdx, [rbp+data_freer]", "mov     [rax+40h], rdx", "mov     rax, [rbp+table]", "mov     qword ptr [rax+48h], 0", "mov     rax, [rbp+table]", "jmp     short locret_104B9"], ["mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "shl~rax,0", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "jmp~FOO"]], [1, 0, 1, 0, 1, 4, 0, 1, 6, 1, 0.027083333333333334, ["mov     rax, [rbp+table]", "mov     rdi, rax; ptr", "call    free", "mov     eax, 0"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~eax,0"]]], "func_feature": [5, 4, 16, 0, 17, 23, 2, 96, 0.06103, 3, 3], "succs": [[14], [0, 11], [16], [2, 6], [1], [1, 4], [9, 7], [16], [16], [8, 15], [12, 5], [3, 13], [5], [3], [], [14], [14]], "fname": "hash_initialize", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 12, 0, 0, 4, 1, 1, 0, 0, 0.14393939393939395, ["mov     rax, [rbp+table]", "mov     rax, [rax+40h]", "test    rax, rax", "jz      short loc_10516"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 4, 5, 0.5530303030303031, ["cmp     [rbp+cursor], 0", "jnz     short loc_104F5"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 12, 0, 0, 4, 1, 1, 2, 3, 0.36363636363636365, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      loc_10590"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 12, 0, 0, 4, 0, 0, 1, 1, 0.4545454545454546, ["mov     rax, [rbp+table]", "mov     rax, [rax+8]", "cmp     [rbp+bucket], rax", "jb      loc_104D7"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [0, 0, 12, 0, 0, 4, 1, 1, 5, 4, 0.32575757575757575, ["mov     rax, [rbp+table]", "mov     rax, [rax+40h]", "test    rax, rax", "jz      short loc_10579"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 12, 1, 0, 8, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+table], rdi", "mov     rax, [rbp+table]", "mov     rax, [rax]", "mov     [rbp+bucket], rax", "jmp     loc_10595"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 12, 1, 0, 1, 0, 0, 3, 2, 0.36363636363636365, ["add     [rbp+bucket], 10h"], ["add~[rbp+0],0"]], [2, 0, 12, 0, 0, 4, 0, 0, 6, 3, 0.32575757575757575, ["mov     rax, [rbp+bucket]", "mov     qword ptr [rax], 0", "mov     rax, [rbp+bucket]", "mov     qword ptr [rax+8], 0"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0"]], [0, 0, 12, 0, 1, 6, 0, 1, 6, 4, 0.0, ["mov     rax, [rbp+table]", "mov     rax, [rax+40h]", "mov     rdx, [rbp+bucket]", "mov     rdx, [rdx]", "mov     rdi, rdx", "call    rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rdx,<TAG>", "mov~rdi,rdx", "call~rax"]], [1, 0, 12, 0, 0, 14, 0, 0, 6, 6, 0.14393939393939395, ["mov     rax, [rbp+cursor]", "mov     qword ptr [rax], 0", "mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+next], rax", "mov     rax, [rbp+table]", "mov     rdx, [rax+48h]", "mov     rax, [rbp+cursor]", "mov     [rax+8], rdx", "mov     rax, [rbp+table]", "mov     rdx, [rbp+cursor]", "mov     [rax+48h], rdx", "mov     rax, [rbp+next]", "mov     [rbp+cursor], rax"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [0, 0, 12, 0, 1, 6, 0, 1, 6, 7, 0.0, ["mov     rax, [rbp+table]", "mov     rax, [rax+40h]", "mov     rdx, [rbp+cursor]", "mov     rdx, [rdx]", "mov     rdi, rdx", "call    rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rdx,<TAG>", "mov~rdi,rdx", "call~rax"]], [0, 0, 12, 0, 0, 4, 0, 1, 3, 6, 0.32575757575757575, ["mov     rax, [rbp+bucket]", "mov     rax, [rax+8]", "mov     [rbp+cursor], rax", "jmp     short loc_10551"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [2, 0, 0, 0, 0, 7, 0, 0, 2, 0, 0.0, ["mov     rax, [rbp+table]", "mov     qword ptr [rax+18h], 0", "mov     rax, [rbp+table]", "mov     qword ptr [rax+20h], 0", "nop", "leave", "retn"], ["mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "nop", "leave", "retn"]]], "func_feature": [2, 3, 8, 0, 13, 17, 0, 68, 0.23077, 0, 2], "succs": [[9, 10], [0, 4], [11, 6], [2, 12], [8, 7], [3], [3], [6], [7], [1], [9], [1], []], "fname": "hash_clear", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 9, 0, 0, 4, 0, 1, 0, 0, 0.2647058823529412, ["mov     rax, [rbp+table]", "mov     rax, [rax]", "mov     [rbp+bucket], rax", "jmp     short loc_1068C"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 18, 1, 0, 8, 1, 1, 0, 5, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+table], rdi", "mov     rax, [rbp+table]", "mov     rax, [rax+40h]", "test    rax, rax", "jz      short loc_10645"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 17, 0, 0, 4, 1, 1, 1, 5, 0.022875816993464054, ["mov     rax, [rbp+table]", "mov     rax, [rax+20h]", "test    rax, rax", "jz      short loc_10645"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 16, 0, 0, 4, 0, 0, 3, 5, 0.27450980392156865, ["mov     rax, [rbp+table]", "mov     rax, [rax+8]", "cmp     [rbp+bucket], rax", "jb      short loc_105F5"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [0, 0, 16, 0, 0, 4, 0, 1, 2, 6, 0.0392156862745098, ["mov     rax, [rbp+table]", "mov     rax, [rax]", "mov     [rbp+bucket], rax", "jmp     short loc_10637"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 16, 1, 0, 1, 0, 0, 5, 6, 0.16013071895424838, ["add     [rbp+bucket], 10h"], ["add~[rbp+0],0"]], [0, 0, 3, 0, 1, 8, 0, 1, 5, 2, 0.0, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+next], rax", "mov     rax, [rbp+cursor]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+next]", "mov     [rbp+cursor], rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, 1, 0.10784313725490197, ["cmp     [rbp+cursor], 0", "jnz     short loc_106A8"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 4, 5, 0.12091503267973856, ["cmp     [rbp+cursor], 0", "jnz     short loc_10660"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 9, 0, 0, 4, 0, 1, 3, 6, 0.11437908496732027, ["mov     rax, [rbp+bucket]", "mov     rax, [rax+8]", "mov     [rbp+cursor], rax", "jmp     short loc_10680"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 9, 0, 1, 8, 0, 1, 5, 6, 0.0, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+next], rax", "mov     rax, [rbp+cursor]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+next]", "mov     [rbp+cursor], rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [0, 0, 16, 0, 1, 9, 0, 1, 7, 8, 0.0, ["mov     rax, [rbp+table]", "mov     rax, [rax+40h]", "mov     rdx, [rbp+cursor]", "mov     rdx, [rdx]", "mov     rdi, rdx", "call    rax", "mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+cursor], rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rdx,<TAG>", "mov~rdi,rdx", "call~rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax"]], [1, 0, 16, 0, 0, 2, 0, 1, 6, 7, 0.11111111111111112, ["cmp     [rbp+cursor], 0", "jnz     short loc_1060B"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 16, 0, 0, 3, 0, 1, 5, 8, 0.0392156862745098, ["mov     rax, [rbp+bucket]", "mov     [rbp+cursor], rax", "jmp     short loc_1062B"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 16, 0, 0, 4, 1, 1, 4, 7, 0.06862745098039216, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_10632"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 9, 1, 0, 1, 0, 0, 5, 4, 0.05555555555555556, ["add     [rbp+bucket], 10h"], ["add~[rbp+0],0"]], [0, 0, 0, 0, 2, 10, 0, 2, 5, 0, 0.0, ["mov     rax, [rbp+table]", "mov     rax, [rax]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+table]", "mov     rdi, rax; ptr", "call    free", "nop", "leave", "retn"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "nop", "leave", "retn"]], [0, 0, 3, 0, 0, 4, 0, 1, 3, 2, 0.14705882352941177, ["mov     rax, [rbp+table]", "mov     rax, [rax+48h]", "mov     [rbp+cursor], rax", "jmp     short loc_106C8"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 9, 0, 0, 4, 0, 0, 2, 3, 0.3300653594771242, ["mov     rax, [rbp+table]", "mov     rax, [rax+8]", "cmp     [rbp+bucket], rax", "jb      short loc_10652"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jb~FOO"]]], "func_feature": [5, 3, 16, 0, 19, 26, 3, 86, 0.0977, 0, 3], "succs": [[18], [0, 2], [0, 4], [0, 14], [3], [3], [7], [16, 6], [10, 15], [8], [8], [12], [11, 5], [12], [13, 5], [18], [], [7], [17, 9]], "fname": "hash_free", "n_num": 19}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 0, 8, 0, 1, 0, 0, 0.08333333333333333, ["mov     rax, [rbp+table]", "mov     rax, [rax+48h]", "mov     [rbp+new], rax", "mov     rax, [rbp+new]", "mov     rdx, [rax+8]", "mov     rax, [rbp+table]", "mov     [rax+48h], rdx", "jmp     short loc_10732"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "jmp~FOO"]], [0, 1, 3, 1, 0, 8, 1, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+table], rdi", "mov     rax, [rbp+table]", "mov     rax, [rax+48h]", "test    rax, rax", "jz      short loc_10724"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 1, 0, 1, 3, 0, 1, 1, 1, 0.08333333333333333, ["mov     edi, 10h; size", "call    malloc", "mov     [rbp+new], rax"], ["mov~edi,0", "call~FOO", "mov~[rbp+0],rax"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["mov     rax, [rbp+new]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]]], "func_feature": [1, 1, 3, 0, 4, 4, 2, 22, 0.04167, 0, 1], "succs": [[3], [0, 2], [3], []], "fname": "allocate_entry", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+table], rdi", "mov     [rbp+entry], rsi", "mov     rax, [rbp+entry]", "mov     qword ptr [rax], 0", "mov     rax, [rbp+table]", "mov     rdx, [rax+48h]", "mov     rax, [rbp+entry]", "mov     [rax+8], rdx", "mov     rax, [rbp+table]", "mov     rdx, [rbp+entry]", "mov     [rax+48h], rdx", "nop", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "nop", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 3, 16, 0.0, 0, 0], "succs": [[]], "fname": "free_entry", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.0032679738562091504, ["mov     eax, 0", "jmp     locret_10901"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 3, 0, 0.0196078431372549, ["mov     rax, [rbp+data]", "jmp     locret_10901"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 7, 0, 0.013071895424836602, ["mov     rax, [rbp+data_0]", "jmp     short locret_10901"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 5, 0, 0.00980392156862745, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 2, 0, 0, 2, 0, 0, 4, 0, 0.0032679738562091504, ["mov     rax, [rbp+bucket]", "mov     qword ptr [rax], 0"], ["mov~rax,[rbp+0]", "mov~<TAG>,0"]], [0, 0, 4, 0, 0, 4, 1, 1, 3, 0, 0.026143790849673203, ["mov     rax, [rbp+bucket]", "mov     rax, [rax+8]", "test    rax, rax", "jz      short loc_10840"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 5, 0, 0, 5, 0, 1, 2, 0, 0.04575163398692811, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "mov     [rbp+data], rax", "cmp     [rbp+delete], 0", "jz      short loc_1084B"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 3, 0, 0, 6, 0, 1, 6, 0, 0.058823529411764705, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     rax, [rax]", "mov     [rbp+data_0], rax", "cmp     [rbp+delete], 0", "jz      short loc_108D9"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 9, 0, 0, 5, 0, 1, 5, 0, 0.09477124183006536, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     rax, [rax]", "cmp     [rbp+entry], rax", "jz      short loc_10895"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rax,<TAG>", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 0, 9, 0, 1, 11, 1, 2, 6, 0, 0.026143790849673203, ["mov     rax, [rbp+table]", "mov     rax, [rax+38h]", "mov     rdx, [rbp+cursor]", "mov     rdx, [rdx+8]", "mov     rcx, [rdx]", "mov     rdx, [rbp+entry]", "mov     rsi, rcx", "mov     rdi, rdx", "call    rax", "test    al, al", "jz      short loc_108DF"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rdx,[rdx+0]", "mov~rcx,<TAG>", "mov~rdx,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rdx", "call~rax", "test~al,al", "jz~FOO"]], [0, 0, 15, 0, 1, 10, 1, 2, 2, 0, 0.058823529411764705, ["mov     rax, [rbp+table]", "mov     rax, [rax+38h]", "mov     rdx, [rbp+bucket]", "mov     rcx, [rdx]", "mov     rdx, [rbp+entry]", "mov     rsi, rcx", "mov     rdi, rdx", "call    rax", "test    al, al", "jz      short loc_10854"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rcx,<TAG>", "mov~rdx,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rdx", "call~rax", "test~al,al", "jz~FOO"]], [0, 0, 16, 0, 0, 4, 0, 1, 1, 0, 0.049019607843137254, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "cmp     [rbp+entry], rax", "jz      short loc_107EB"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 1, 18, 1, 1, 21, 1, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+table], rdi", "mov     [rbp+entry], rsi", "mov     [rbp+bucket_head], rdx", "mov     eax, ecx", "mov     [rbp+delete], al", "mov     rdx, [rbp+entry]", "mov     rax, [rbp+table]", "mov     rsi, rdx; key", "mov     rdi, rax; table", "call    safe_hasher", "mov     [rbp+bucket], rax", "mov     rax, [rbp+bucket_head]", "mov     rdx, [rbp+bucket]", "mov     [rax], rdx", "mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jnz     short loc_107BF"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~eax,ecx", "mov~[rbp+0],al", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [0, 0, 9, 0, 0, 3, 0, 0, 7, 0, 0.016339869281045753, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+cursor], rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax"]], [0, 0, 2, 0, 1, 15, 0, 2, 4, 0, 0.0032679738562091504, ["mov     rax, [rbp+bucket]", "mov     rax, [rax+8]", "mov     [rbp+next], rax", "mov     rcx, [rbp+bucket]", "mov     rax, [rbp+next]", "mov     rdx, [rax+8]", "mov     rax, [rax]", "mov     [rcx], rax", "mov     [rcx+8], rdx", "mov     rdx, [rbp+next]", "mov     rax, [rbp+table]", "mov     rsi, rdx; entry", "mov     rdi, rax; table", "call    free_entry", "jmp     short loc_1084B"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,<TAG>", "mov~<TAG>,rax", "mov~[rcx+0],rdx", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [0, 0, 9, 0, 0, 4, 1, 1, 4, 0, 0.12745098039215685, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "test    rax, rax", "jnz     loc_10861"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 2, 0, 1, 12, 0, 1, 7, 0, 0.0, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+next_0], rax", "mov     rax, [rbp+next_0]", "mov     rdx, [rax+8]", "mov     rax, [rbp+cursor]", "mov     [rax+8], rdx", "mov     rdx, [rbp+next_0]", "mov     rax, [rbp+table]", "mov     rsi, rdx; entry", "mov     rdi, rax; table", "call    free_entry"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO"]], [0, 0, 9, 0, 0, 3, 0, 1, 3, 0, 0.0784313725490196, ["mov     rax, [rbp+bucket]", "mov     [rbp+cursor], rax", "jmp     loc_108EB"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]]], "func_feature": [5, 5, 19, 0, 19, 27, 3, 114, 0.03337, 0, 1], "succs": [[], [0], [0], [0], [0], [2], [5, 15], [2, 6], [17, 3], [8, 10], [8, 14], [18, 7], [11, 7], [1, 12], [16], [2], [9, 4], [3], [16]], "fname": "hash_find_entry", "n_num": 19}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 19, 0, 0, 2, 0, 1, 0, 0, 0.5497076023391813, ["cmp     [rbp+cursor], 0", "jnz     loc_10949"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 19, 0, 0, 4, 0, 1, 3, 6, 0.347953216374269, ["mov     rax, [rbp+bucket]", "mov     rax, [rax+8]", "mov     [rbp+cursor], rax", "jmp     loc_109DB"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 19, 0, 0, 2, 0, 0, 7, 6, 0.14327485380116958, ["mov     rax, [rbp+next]", "mov     [rbp+cursor], rax"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [0, 0, 19, 0, 1, 16, 1, 2, 5, 8, 0.12573099415204678, ["mov     rax, [rbp+cursor]", "mov     rax, [rax]", "mov     [rbp+data], rax", "mov     rdx, [rbp+data]", "mov     rax, [rbp+dst]", "mov     rsi, rdx; key", "mov     rdi, rax; table", "call    safe_hasher", "mov     [rbp+new_bucket], rax", "mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+next], rax", "mov     rax, [rbp+new_bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_109A1"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 1, 19, 1, 0, 11, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+dst], rdi", "mov     [rbp+src], rsi", "mov     eax, edx", "mov     [rbp+safe], al", "mov     rax, [rbp+src]", "mov     rax, [rax]", "mov     [rbp+bucket], rax", "jmp     loc_10ABA"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~eax,edx", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 19, 0, 0, 4, 1, 1, 2, 4, 0.35964912280701755, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      loc_10AB5"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 19, 0, 0, 4, 0, 0, 1, 2, 0.4269005847953216, ["mov     rax, [rbp+src]", "mov     rax, [rax+8]", "cmp     [rbp+bucket], rax", "jb      loc_10928"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [1, 0, 19, 1, 0, 1, 0, 0, 3, 3, 0.36549707602339176, ["add     [rbp+bucket], 10h"], ["add~[rbp+0],0"]], [1, 0, 1, 0, 0, 2, 0, 1, 8, 1, 0.02631578947368421, ["mov     eax, 0", "jmp     locret_10AD1"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 19, 0, 1, 6, 0, 2, 7, 2, 0.11403508771929824, ["mov     rax, [rbp+dst]", "mov     rdi, rax; table", "call    allocate_entry", "mov     [rbp+new_entry], rax", "cmp     [rbp+new_entry], 0", "jnz     short loc_10A4B"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 19, 0, 0, 7, 0, 1, 5, 4, 0.3830409356725146, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "mov     [rbp+data], rax", "mov     rax, [rbp+bucket]", "mov     qword ptr [rax+8], 0", "cmp     [rbp+safe], 0", "jnz     loc_10AB4"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 19, 0, 1, 10, 1, 2, 6, 3, 0.22807017543859648, ["mov     rdx, [rbp+data]", "mov     rax, [rbp+dst]", "mov     rsi, rdx; key", "mov     rdi, rax; table", "call    safe_hasher", "mov     [rbp+new_bucket], rax", "mov     rax, [rbp+new_bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_10A74"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.023391812865497075, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 19, 0, 0, 11, 0, 1, 8, 5, 0.043859649122807015, ["mov     rax, [rbp+new_entry]", "mov     rdx, [rbp+data]", "mov     [rax], rdx", "mov     rax, [rbp+new_bucket]", "mov     rdx, [rax+8]", "mov     rax, [rbp+new_entry]", "mov     [rax+8], rdx", "mov     rax, [rbp+new_bucket]", "mov     rdx, [rbp+new_entry]", "mov     [rax+8], rdx", "jmp     short loc_10A93"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "jmp~FOO"]], [0, 0, 19, 0, 1, 13, 0, 1, 6, 7, 0.04239766081871345, ["mov     rax, [rbp+new_bucket]", "mov     rdx, [rbp+data]", "mov     [rax], rdx", "mov     rax, [rbp+dst]", "mov     rax, [rax+18h]", "lea     rdx, [rax+1]", "mov     rax, [rbp+dst]", "mov     [rax+18h], rdx", "mov     rdx, [rbp+cursor]", "mov     rax, [rbp+dst]", "mov     rsi, rdx; entry", "mov     rdi, rax; table", "call    free_entry"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO"]], [0, 0, 19, 0, 0, 8, 0, 0, 7, 5, 0.07309941520467836, ["mov     rax, [rbp+new_bucket]", "mov     rdx, [rbp+data]", "mov     [rax], rdx", "mov     rax, [rbp+dst]", "mov     rax, [rax+18h]", "lea     rdx, [rax+1]", "mov     rax, [rbp+dst]", "mov     [rax+18h], rdx"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx"]], [0, 0, 19, 0, 0, 1, 0, 0, 6, 4, 0.11403508771929824, ["nop"], ["nop"]], [1, 0, 19, 0, 0, 8, 0, 1, 8, 4, 0.17543859649122806, ["mov     rax, [rbp+bucket]", "mov     qword ptr [rax], 0", "mov     rax, [rbp+src]", "mov     rax, [rax+18h]", "lea     rdx, [rax-1]", "mov     rax, [rbp+src]", "mov     [rax+18h], rdx", "jmp     short loc_10AB5"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,[rax-1]+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "jmp~FOO"]], [0, 0, 19, 0, 0, 8, 0, 1, 6, 7, 0.04239766081871345, ["mov     rax, [rbp+new_bucket]", "mov     rdx, [rax+8]", "mov     rax, [rbp+cursor]", "mov     [rax+8], rdx", "mov     rax, [rbp+new_bucket]", "mov     rdx, [rbp+cursor]", "mov     [rax+8], rdx", "jmp     short loc_109D3"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [4, 3, 16, 0, 20, 26, 3, 121, 0.17924, 0, 2], "succs": [[10, 3], [0], [0], [18, 14], [6], [1, 7], [12, 5], [6], [19], [8, 13], [16, 11], [9, 15], [19], [17], [2], [17], [7], [7], [2], []], "fname": "transfer_entries", "n_num": 20}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 10, 0, 1, 13, 1, 2, 0, 0, 0.07692307692307693, ["lea     rax, [rbp+storage]", "mov     [rbp+new_table], rax", "mov     rax, [rbp+new_size]", "mov     esi, 10h; size", "mov     rdi, rax; nmemb", "call    _calloc", "mov     rdx, rax", "mov     rax, [rbp+new_table]", "mov     [rax], rdx", "mov     rax, [rbp+new_table]", "mov     rax, [rax]", "test    rax, rax", "jnz     short loc_10B6F"], ["lea~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [0, 0, 12, 0, 0, 4, 0, 1, 1, 3, 0.049450549450549455, ["mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "cmp     [rbp+new_size], rax", "jnz     short loc_10B36"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.1208791208791209, ["mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_10CF8"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 2, 0.016483516483516484, ["mov     eax, 0", "jmp     loc_10CE4"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.016483516483516484, ["mov     eax, 1", "jmp     loc_10CE4"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 2, 0.016483516483516484, ["mov     eax, 0", "jmp     loc_10CE4"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 1, 26, 0, 2, 4, 2, 0.016483516483516484, ["mov     rax, [rbp+table]", "mov     rax, [rax]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+new_table]", "mov     rdx, [rax]", "mov     rax, [rbp+table]", "mov     [rax], rdx", "mov     rax, [rbp+new_table]", "mov     rdx, [rax+8]", "mov     rax, [rbp+table]", "mov     [rax+8], rdx", "mov     rax, [rbp+new_table]", "mov     rdx, [rax+10h]", "mov     rax, [rbp+table]", "mov     [rax+10h], rdx", "mov     rax, [rbp+new_table]", "mov     rdx, [rax+18h]", "mov     rax, [rbp+table]", "mov     [rax+18h], rdx", "mov     rax, [rbp+new_table]", "mov     rdx, [rax+48h]", "mov     rax, [rbp+table]", "mov     [rax+48h], rdx", "mov     eax, 1", "jmp     short loc_10CE4"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 1, 5, 0, 1, 6, 2, 0.03296703296703297, ["mov     rax, [rbp+new_table]", "mov     rax, [rax]", "mov     rdi, rax; ptr", "call    free", "mov     eax, 0"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~eax,0"]], [2, 0, 5, 0, 1, 9, 2, 2, 5, 3, 0.04395604395604396, ["mov     rcx, [rbp+new_table]", "mov     rax, [rbp+table]", "mov     edx, 0; safe", "mov     rsi, rcx; src", "mov     rdi, rax; dst", "call    transfer_entries", "xor     eax, 1", "test    al, al", "jz      short loc_10CD0"], ["mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~edx,0", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]], [2, 0, 6, 0, 1, 13, 2, 2, 4, 4, 0.06593406593406594, ["mov     rax, [rbp+new_table]", "mov     rdx, [rax+48h]", "mov     rax, [rbp+table]", "mov     [rax+48h], rdx", "mov     rcx, [rbp+new_table]", "mov     rax, [rbp+table]", "mov     edx, 1; safe", "mov     rsi, rcx; src", "mov     rdi, rax; dst", "call    transfer_entries", "xor     eax, 1", "test    al, al", "jnz     short loc_10CCB"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~edx,0", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "xor~eax,0", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    _abort"], ["call~FOO"]], [2, 0, 14, 1, 1, 17, 1, 2, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "add     rsp, 0FFFFFFFFFFFFFF80h", "mov     [rbp+table], rdi", "mov     [rbp+candidate], rsi", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     rax, [rbp+table]", "mov     rdx, [rax+28h]", "mov     rax, [rbp+candidate]", "mov     rsi, rdx; tuning", "mov     rdi, rax; candidate", "call    compute_bucket_size", "mov     [rbp+new_size], rax", "cmp     [rbp+new_size], 0", "jnz     short loc_10B1E"], ["push~rbp", "mov~rbp,rsp", "add~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [4, 0, 8, 2, 1, 42, 1, 2, 3, 3, 0.08241758241758243, ["mov     rax, [rbp+new_table]", "mov     rdx, [rbp+new_size]", "mov     [rax+10h], rdx", "mov     rax, [rbp+new_table]", "mov     rax, [rax]", "mov     rdx, [rbp+new_size]", "shl     rdx, 4", "add     rdx, rax", "mov     rax, [rbp+new_table]", "mov     [rax+8], rdx", "mov     rax, [rbp+new_table]", "mov     qword ptr [rax+18h], 0", "mov     rax, [rbp+new_table]", "mov     qword ptr [rax+20h], 0", "mov     rax, [rbp+table]", "mov     rdx, [rax+28h]", "mov     rax, [rbp+new_table]", "mov     [rax+28h], rdx", "mov     rax, [rbp+table]", "mov     rdx, [rax+30h]", "mov     rax, [rbp+new_table]", "mov     [rax+30h], rdx", "mov     rax, [rbp+table]", "mov     rdx, [rax+38h]", "mov     rax, [rbp+new_table]", "mov     [rax+38h], rdx", "mov     rax, [rbp+table]", "mov     rdx, [rax+40h]", "mov     rax, [rbp+new_table]", "mov     [rax+40h], rdx", "mov     rax, [rbp+table]", "mov     rdx, [rax+48h]", "mov     rax, [rbp+new_table]", "mov     [rax+48h], rdx", "mov     rcx, [rbp+table]", "mov     rax, [rbp+new_table]", "mov     edx, 0; safe", "mov     rsi, rcx; src", "mov     rdi, rax; dst", "call    transfer_entries", "test    al, al", "jz      short loc_10C7D"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdx,[rbp+0]", "shl~rdx,0", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~edx,0", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [9, 8, 20, 1, 15, 19, 2, 142, 0.0359, 1, 3], "succs": [[5, 13], [0, 4], [12, 14], [2], [2], [2], [2], [2], [10, 7], [8, 10], [], [1, 3], [], [9, 6], []], "fname": "hash_rehash", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 30, 0, 0, 6, 2, 0, 0, 0, 0.05757575757575758, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0"]], [0, 0, 32, 0, 1, 7, 1, 2, 7, 8, 0.10909090909090909, ["mov     rax, [rbp+table]", "mov     rdi, rax; table", "call    check_tuning", "mov     rax, [rbp+table]", "mov     rax, [rax+18h]", "test    rax, rax", "js      short loc_10DF5"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [0, 0, 7, 0, 0, 4, 1, 1, 7, 3, 0.08535353535353535, ["mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_10FE9"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 33, 0, 0, 3, 0, 0, 6, 4, 0.1303030303030303, ["mulss   xmm1, xmm2", "ucomiss xmm0, xmm1", "jbe     loc_10F7D"], ["mulss~xmm1,xmm2", "ucomiss~xmm0,xmm1", "jbe~FOO"]], [0, 0, 26, 0, 0, 3, 0, 0, 11, 4, 0.1606060606060606, ["mulss   xmm1, xmm2", "ucomiss xmm0, xmm1", "jbe     loc_10F7D"], ["mulss~xmm1,xmm2", "ucomiss~xmm0,xmm1", "jbe~FOO"]], [1, 0, 9, 0, 1, 8, 1, 2, 20, 4, 0.050505050505050504, ["lea     rdx, [rbp+bucket]; bucket_head", "mov     rsi, [rbp+entry]; entry", "mov     rax, [rbp+table]", "mov     ecx, 0; delete", "mov     rdi, rax; table", "call    hash_find_entry", "test    rax, rax", "jz      short loc_10F7D"], ["lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~ecx,0", "mov~rdi,rax", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 14, 0, 0, 3, 0, 0, 17, 5, 0.10404040404040404, ["movss   xmm0, [rbp+candidate]", "ucomiss xmm0, cs:dword_1F874", "jnb     short loc_10F17"], ["movss~xmm0,[rbp+0]", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 16, 0, 0, 4, 0, 0, 16, 3, 0.13737373737373737, ["movss   [rbp+candidate], xmm0", "movss   xmm0, [rbp+candidate]", "ucomiss xmm0, cs:dword_1F870", "jb      short loc_10EFD"], ["movss~[rbp+0],xmm0", "movss~xmm0,[rbp+0]", "ucomiss~xmm0,<TAG>", "jb~FOO"]], [2, 0, 18, 0, 0, 6, 2, 0, 14, 5, 0.029166666666666667, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0"]], [0, 0, 20, 0, 0, 4, 1, 1, 13, 6, 0.06641414141414141, ["mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "test    rax, rax", "js      short loc_10E79"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [2, 0, 37, 0, 0, 6, 2, 0, 3, 7, 0.026515151515151516, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0"]], [0, 0, 39, 0, 0, 4, 1, 1, 2, 8, 0.03636363636363636, ["mov     rax, [rbp+table]", "mov     rax, [rax+18h]", "test    rax, rax", "js      short loc_10D7D"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [0, 0, 12, 0, 0, 3, 0, 1, 18, 4, 0.04191919191919192, ["movss   xmm0, [rbp+candidate]", "cvttss2si rax, xmm0", "jmp     short loc_10F3A"], ["movss~xmm0,[rbp+0]", "cvttss2si~rax,xmm0", "jmp~FOO"]], [0, 0, 17, 0, 0, 6, 0, 0, 15, 4, 0.06641414141414141, ["mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+0Ch]", "mulss   xmm0, xmm1", "mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+8]", "mulss   xmm0, xmm1"], ["mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "mulss~xmm0,xmm1", "mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "mulss~xmm0,xmm1"]], [0, 0, 18, 0, 0, 2, 0, 1, 14, 5, 0.029166666666666667, ["cvtsi2ss xmm0, rax", "jmp     short loc_10EC6"], ["cvtsi2ss~xmm0,rax", "jmp~FOO"]], [2, 0, 18, 0, 0, 6, 2, 0, 14, 5, 0.029166666666666667, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0"]], [0, 0, 17, 0, 0, 4, 0, 1, 15, 4, 0.06641414141414141, ["mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+0Ch]", "mulss   xmm0, xmm1", "jmp     short loc_10EE0"], ["mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "mulss~xmm0,xmm1", "jmp~FOO"]], [0, 0, 18, 0, 0, 2, 0, 1, 14, 5, 0.029166666666666667, ["cvtsi2ss xmm0, rax", "jmp     short loc_10E8E"], ["cvtsi2ss~xmm0,rax", "jmp~FOO"]], [1, 0, 3, 0, 0, 14, 0, 0, 8, 2, 0.024242424242424242, ["mov     rax, [rbp+bucket]", "mov     rdx, [rbp+entry]", "mov     [rax], rdx", "mov     rax, [rbp+table]", "mov     rax, [rax+20h]", "lea     rdx, [rax+1]", "mov     rax, [rbp+table]", "mov     [rax+20h], rdx", "mov     rax, [rbp+table]", "mov     rax, [rax+18h]", "lea     rdx, [rax+1]", "mov     rax, [rbp+table]", "mov     [rax+18h], rdx", "mov     eax, 1"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~eax,0"]], [1, 0, 5, 0, 1, 6, 0, 2, 8, 3, 0.03232323232323232, ["mov     rax, [rbp+table]", "mov     rdi, rax; table", "call    allocate_entry", "mov     [rbp+new_entry], rax", "cmp     [rbp+new_entry], 0", "jnz     short loc_10FA7"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 1, 45, 1, 0, 11, 1, 1, 0, 5, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+table], rdi", "mov     [rbp+entry], rsi", "mov     [rbp+matched_ent], rdx", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "cmp     [rbp+entry], 0", "jnz     short loc_10D29"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 9, 2, 0.0007575757575757576, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_11021"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 20, 0, 0, 4, 1, 1, 13, 6, 0.06641414141414141, ["mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "test    rax, rax", "js      short loc_10EB1"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [0, 0, 25, 0, 0, 7, 1, 1, 12, 7, 0.13737373737373737, ["mov     rax, [rbp+table]", "mov     rax, [rax+28h]", "mov     [rbp+tuning], rax", "mov     rax, [rbp+tuning]", "movzx   eax, byte ptr [rax+10h]", "test    al, al", "jz      short loc_10E9D"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [0, 0, 27, 0, 0, 2, 0, 1, 10, 5, 0.07045454545454545, ["cvtsi2ss xmm1, rax", "jmp     short loc_10E40"], ["cvtsi2ss~xmm1,rax", "jmp~FOO"]], [0, 0, 29, 0, 0, 7, 1, 1, 9, 6, 0.1393939393939394, ["mov     rax, [rbp+table]", "mov     rax, [rax+28h]", "movss   xmm2, dword ptr [rax+8]", "mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "test    rax, rax", "js      short loc_10E2B"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "movss~xmm2,[word ptr [rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [0, 0, 36, 0, 0, 7, 1, 1, 4, 6, 0.08787878787878788, ["mov     rax, [rbp+table]", "mov     rax, [rax+28h]", "movss   xmm2, dword ptr [rax+8]", "mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "test    rax, rax", "js      short loc_10DB3"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "movss~xmm2,[word ptr [rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [0, 0, 37, 0, 0, 2, 0, 1, 3, 7, 0.026515151515151516, ["cvtsi2ss xmm0, rax", "jmp     short loc_10D92"], ["cvtsi2ss~xmm0,rax", "jmp~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 4, 1, 0.04141414141414142, ["mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_11035"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 2, 0.006060606060606061, ["mov     eax, 0", "jmp     loc_11021"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 17, 2, 0.015151515151515152, ["mov     eax, 0FFFFFFFFh", "jmp     loc_11021"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 20, 2, 0.006060606060606061, ["mov     eax, 0FFFFFFFFh", "jmp     loc_11021"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 17, 0, 1, 9, 2, 0.0007575757575757576, ["mov     rax, [rbp+new_entry]", "mov     rdx, [rbp+entry]", "mov     [rax], rdx", "mov     rax, [rbp+bucket]", "mov     rdx, [rax+8]", "mov     rax, [rbp+new_entry]", "mov     [rax+8], rdx", "mov     rax, [rbp+bucket]", "mov     rdx, [rbp+new_entry]", "mov     [rax+8], rdx", "mov     rax, [rbp+table]", "mov     rax, [rax+20h]", "lea     rdx, [rax+1]", "mov     rax, [rbp+table]", "mov     [rax+20h], rdx", "mov     eax, 1", "jmp     short loc_11021"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 34, 0, 0, 2, 0, 1, 5, 5, 0.05, ["cvtsi2ss xmm1, rax", "jmp     short loc_10DC8"], ["cvtsi2ss~xmm1,rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 5, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 12, 0, 0, 6, 1, 0, 18, 4, 0.04191919191919192, ["movss   xmm0, [rbp+candidate]", "movss   xmm1, cs:dword_1F874", "subss   xmm0, xmm1", "cvttss2si rax, xmm0", "mov     rdx, 8000000000000000h", "xor     rax, rdx"], ["movss~xmm0,[rbp+0]", "movss~xmm1,<TAG>", "subss~xmm0,xmm1", "cvttss2si~rax,xmm0", "mov~rdx,0", "xor~rax,rdx"]], [2, 0, 27, 0, 0, 6, 2, 0, 10, 5, 0.07045454545454545, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm1, rdx", "addss   xmm1, xmm1"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm1,rdx", "addss~xmm1,xmm1"]], [2, 0, 34, 0, 0, 6, 2, 0, 5, 5, 0.05, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm1, rdx", "addss   xmm1, xmm1"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm1,rdx", "addss~xmm1,xmm1"]], [2, 0, 43, 0, 1, 9, 0, 2, 1, 4, 0.021717171717171718, ["lea     rdx, [rbp+bucket]; bucket_head", "mov     rsi, [rbp+entry]; entry", "mov     rax, [rbp+table]", "mov     ecx, 0; delete", "mov     rdi, rax; table", "call    hash_find_entry", "mov     [rbp+data], rax", "cmp     [rbp+data], 0", "jz      short loc_10D69"], ["lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~ecx,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 30, 0, 0, 2, 0, 1, 8, 7, 0.05757575757575758, ["cvtsi2ss xmm0, rax", "jmp     short loc_10E0A"], ["cvtsi2ss~xmm0,rax", "jmp~FOO"]], [1, 0, 11, 0, 1, 7, 2, 2, 19, 3, 0.08131313131313131, ["mov     rdx, [rbp+table]", "mov     rsi, rax; candidate", "mov     rdi, rdx; table", "call    hash_rehash", "xor     eax, 1", "test    al, al", "jz      short loc_10F5A"], ["mov~rdx,[rbp+0]", "mov~rsi,rax", "mov~rdi,rdx", "call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 21, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 3, 0.00505050505050505, ["cmp     [rbp+matched_ent], 0", "jz      short loc_10D5F"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 0, 0, 3, 3, 0.0, ["mov     rax, [rbp+matched_ent]", "mov     rdx, [rbp+data]", "mov     [rax], rdx"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx"]]], "func_feature": [8, 26, 36, 1, 46, 61, 1, 217, 0.04975, 3, 1], "succs": [[26], [0, 41], [18, 19], [1, 2], [24, 2], [2, 43], [12, 37], [6, 31], [16], [8, 17], [27], [10, 28], [42], [7], [13], [13], [7], [16], [29], [33, 22], [40, 21], [], [29], [14, 15], [9, 23], [4], [25, 38], [35, 39], [27], [34, 36], [29], [29], [29], [29], [], [3], [], [42], [4], [3], [11, 44], [26], [32, 5], [], [45, 30], [30]], "fname": "hash_insert_if_absent", "n_num": 46}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.03571428571428571, ["mov     rax, [rbp+matched_ent]", "jmp     short loc_1108D"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 1, 3, 0.047619047619047616, ["cmp     [rbp+err], 0", "jnz     short loc_11082"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.23809523809523808, ["mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_110A1"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.03571428571428571, ["mov     rax, [rbp+entry]", "jmp     short loc_1108D"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 1, 2, 0.07142857142857142, ["mov     eax, 0"], ["mov~eax,0"]], [2, 0, 7, 1, 1, 17, 1, 2, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+table], rdi", "mov     [rbp+entry], rsi", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "lea     rdx, [rbp+matched_ent]; matched_ent", "mov     rcx, [rbp+entry]", "mov     rax, [rbp+table]", "mov     rsi, rcx; entry", "mov     rdi, rax; table", "call    hash_insert_if_absent", "mov     [rbp+err], eax", "cmp     [rbp+err], 0FFFFFFFFh", "jz      short loc_11088"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "lea~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 2, 7, 1, 8, 9, 2, 30, 0.05357, 1, 1], "succs": [[3], [0, 4], [], [2, 7], [3], [3], [1, 5], []], "fname": "hash_insert", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 30, 0, 0, 6, 2, 0, 0, 0, 0.061166429587482224, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm1, rdx", "addss   xmm1, xmm1"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm1,rdx", "addss~xmm1,xmm1"]], [0, 0, 32, 0, 0, 7, 1, 1, 4, 5, 0.10810810810810811, ["mov     rax, [rbp+table]", "mov     rax, [rax+28h]", "movss   xmm2, dword ptr [rax]", "mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "test    rax, rax", "js      short loc_11171"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "movss~xmm2,<TAG>", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [0, 0, 22, 0, 0, 3, 0, 0, 11, 3, 0.20910384068278806, ["mulss   xmm1, xmm2", "ucomiss xmm1, xmm0", "jbe     loc_1135B"], ["mulss~xmm1,xmm2", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [0, 0, 23, 0, 0, 2, 0, 1, 10, 4, 0.09352773826458037, ["cvtsi2ss xmm1, rax", "jmp     short loc_111FD"], ["cvtsi2ss~xmm1,rax", "jmp~FOO"]], [2, 0, 23, 0, 0, 6, 2, 0, 10, 4, 0.09352773826458037, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm1, rdx", "addss   xmm1, xmm1"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm1,rdx", "addss~xmm1,xmm1"]], [1, 0, 9, 0, 0, 6, 1, 1, 16, 4, 0.028627311522048365, ["movss   xmm1, cs:dword_1F874", "subss   xmm0, xmm1", "cvttss2si rax, xmm0", "mov     rdx, 8000000000000000h", "xor     rax, rdx", "jmp     short loc_112FC"], ["movss~xmm1,<TAG>", "subss~xmm0,xmm1", "cvttss2si~rax,xmm0", "mov~rdx,0", "xor~rax,rdx", "jmp~FOO"]], [0, 0, 11, 0, 0, 5, 0, 0, 15, 5, 0.07930298719772404, ["mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+4]", "mulss   xmm0, xmm1", "ucomiss xmm0, cs:dword_1F874", "jnb     short loc_1126B"], ["mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "mulss~xmm0,xmm1", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 29, 0, 0, 3, 0, 0, 6, 3, 0.1593172119487909, ["mulss   xmm1, xmm2", "ucomiss xmm1, xmm0", "jbe     loc_1135B"], ["mulss~xmm1,xmm2", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [0, 0, 30, 0, 0, 2, 0, 1, 5, 4, 0.061166429587482224, ["cvtsi2ss xmm1, rax", "jmp     short loc_11186"], ["cvtsi2ss~xmm1,rax", "jmp~FOO"]], [0, 0, 36, 0, 0, 9, 1, 1, 1, 3, 0.023470839260312945, ["mov     rax, [rbp+table]", "mov     rax, [rax+20h]", "lea     rdx, [rax-1]", "mov     rax, [rbp+table]", "mov     [rax+20h], rdx", "mov     rax, [rbp+bucket]", "mov     rax, [rax]", "test    rax, rax", "jnz     loc_1135B"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,[rax-1]+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [2, 1, 38, 1, 1, 17, 1, 2, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+table], rdi", "mov     [rbp+entry], rsi", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "lea     rdx, [rbp+bucket]; bucket_head", "mov     rsi, [rbp+entry]; entry", "mov     rax, [rbp+table]", "mov     ecx, 1; delete", "mov     rdi, rax; table", "call    hash_find_entry", "mov     [rbp+data], rax", "cmp     [rbp+data], 0", "jnz     short loc_110F0"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~ecx,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 14, 0, 0, 4, 1, 1, 13, 7, 0.09210526315789475, ["mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "test    rax, rax", "js      short loc_1129F"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [0, 0, 21, 0, 0, 7, 1, 1, 12, 8, 0.1934566145092461, ["mov     rax, [rbp+table]", "mov     rax, [rax+28h]", "mov     [rbp+tuning], rax", "mov     rax, [rbp+tuning]", "movzx   eax, byte ptr [rax+10h]", "test    al, al", "jz      short loc_1128B"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [1, 0, 8, 0, 1, 9, 2, 2, 17, 3, 0.11948790896159318, ["mov     [rbp+candidate], rax", "mov     rdx, [rbp+candidate]", "mov     rax, [rbp+table]", "mov     rsi, rdx; candidate", "mov     rdi, rax; table", "call    hash_rehash", "xor     eax, 1", "test    al, al", "jz      short loc_1135B"], ["mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 16, 4, 0.028627311522048365, ["cvttss2si rax, xmm0", "jmp     loc_112FC"], ["cvttss2si~rax,xmm0", "jmp~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 16, 4, 0.028627311522048365, ["cvttss2si rax, xmm0", "jmp     short loc_112FC"], ["cvttss2si~rax,xmm0", "jmp~FOO"]], [1, 0, 9, 0, 0, 5, 1, 0, 16, 4, 0.028627311522048365, ["movss   xmm1, cs:dword_1F874", "subss   xmm0, xmm1", "cvttss2si rax, xmm0", "mov     rdx, 8000000000000000h", "xor     rax, rdx"], ["movss~xmm1,<TAG>", "subss~xmm0,xmm1", "cvttss2si~rax,xmm0", "mov~rdx,0", "xor~rax,rdx"]], [0, 0, 7, 0, 1, 8, 0, 1, 20, 5, 0.0, ["mov     rax, [rbp+cursor]", "mov     rax, [rax+8]", "mov     [rbp+next], rax", "mov     rax, [rbp+cursor]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+next]", "mov     [rbp+cursor], rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [1, 0, 7, 0, 0, 2, 0, 1, 19, 4, 0.050497866287339974, ["cmp     [rbp+cursor], 0", "jnz     short loc_11328"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 14, 6, 0.038229018492176386, ["cvtsi2ss xmm0, rax", "jmp     short loc_112B4"], ["cvtsi2ss~xmm0,rax", "jmp~FOO"]], [0, 0, 7, 0, 0, 4, 0, 1, 18, 5, 0.06401137980085349, ["mov     rax, [rbp+table]", "mov     rax, [rax+48h]", "mov     [rbp+cursor], rax", "jmp     short loc_11348"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 28, 0, 1, 7, 1, 2, 7, 7, 0.15362731152204837, ["mov     rax, [rbp+table]", "mov     rdi, rax; table", "call    check_tuning", "mov     rax, [rbp+table]", "mov     rax, [rax+18h]", "test    rax, rax", "js      short loc_111B3"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [0, 0, 14, 0, 0, 4, 1, 1, 13, 7, 0.09210526315789475, ["mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "test    rax, rax", "js      short loc_11236"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [2, 0, 12, 0, 0, 6, 2, 0, 14, 6, 0.038229018492176386, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0"]], [0, 0, 26, 0, 0, 2, 0, 1, 8, 6, 0.07965860597439545, ["cvtsi2ss xmm0, rax", "jmp     short loc_111C8"], ["cvtsi2ss~xmm0,rax", "jmp~FOO"]], [0, 0, 35, 0, 0, 9, 1, 1, 2, 7, 0.044096728307254626, ["mov     rax, [rbp+table]", "mov     rax, [rax+18h]", "lea     rdx, [rax-1]", "mov     rax, [rbp+table]", "mov     [rax+18h], rdx", "mov     rax, [rbp+table]", "mov     rax, [rax+18h]", "test    rax, rax", "js      short loc_1113C"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rdx,[rax-1]+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 14, 6, 0.038229018492176386, ["cvtsi2ss xmm0, rax", "jmp     short loc_1124B"], ["cvtsi2ss~xmm0,rax", "jmp~FOO"]], [0, 0, 33, 0, 0, 2, 0, 1, 3, 6, 0.032361308677098154, ["cvtsi2ss xmm0, rax", "jmp     short loc_11151"], ["cvtsi2ss~xmm0,rax", "jmp~FOO"]], [0, 0, 25, 0, 0, 7, 1, 1, 9, 5, 0.18776671408250356, ["mov     rax, [rbp+table]", "mov     rax, [rax+28h]", "movss   xmm2, dword ptr [rax]", "mov     rax, [rbp+table]", "mov     rax, [rax+10h]", "test    rax, rax", "js      short loc_111E8"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "movss~xmm2,<TAG>", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "js~FOO"]], [2, 0, 26, 0, 0, 6, 2, 0, 8, 6, 0.07965860597439545, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0"]], [2, 0, 12, 0, 0, 6, 2, 0, 14, 6, 0.038229018492176386, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0"]], [2, 0, 33, 0, 0, 6, 2, 0, 3, 6, 0.032361308677098154, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0"]], [1, 0, 4, 0, 0, 2, 0, 0, 20, 3, 0.008534850640113799, ["mov     rax, [rbp+table]", "mov     qword ptr [rax+48h], 0"], ["mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0"]], [0, 0, 11, 0, 0, 8, 0, 0, 15, 5, 0.07930298719772404, ["mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+4]", "mulss   xmm0, xmm1", "mov     rax, [rbp+tuning]", "movss   xmm1, dword ptr [rax+8]", "mulss   xmm0, xmm1", "ucomiss xmm0, cs:dword_1F874", "jnb     short loc_112DE"], ["mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "mulss~xmm0,xmm1", "mov~rax,[rbp+0]", "movss~xmm1,[word ptr [rax+0]", "mulss~xmm0,xmm1", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 2, 2, 0.07041251778093884, ["mov     rax, [rbp+data]"], ["mov~rax,[rbp+0]"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 2, 0.0021337126600284497, ["mov     eax, 0", "jmp     loc_1135F"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.05120910384068279, ["mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_11373"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [5, 26, 28, 1, 39, 53, 1, 187, 0.06638, 2, 1], "succs": [[7], [0, 8], [34, 12], [2], [2], [13], [5, 14], [34, 21], [7], [25, 34], [9, 35], [19, 23], [11, 22], [34, 20], [13], [13], [13], [18], [32, 17], [33], [18], [24, 29], [26, 30], [33], [28], [27, 31], [6], [1], [3, 4], [28], [6], [1], [34], [16, 15], [36], [36], [37, 38], [], []], "fname": "hash_delete", "n_num": 39}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 1, 0, 2, 1, 22, 1, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+x], rdi", "mov     [rbp+table_size], rsi", "mov     rax, [rbp+x]", "mov     [rbp+p], rax", "mov     rax, [rbp+p]", "mov     rax, [rax]", "mov     rdx, [rbp+table_size]", "mov     rsi, rdx; tablesize", "mov     rdi, rax; x", "call    hash_pjw", "mov     [rbp+tmp], rax", "mov     rax, [rbp+p]", "mov     rax, [rax+8]", "xor     rax, [rbp+tmp]", "mov     edx, 0", "div     [rbp+table_size]", "mov     rax, rdx", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdx,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "xor~rax,[rbp+0]", "mov~edx,0", "div~,[rbp+0]", "mov~rax,rdx", "leave", "retn"]]], "func_feature": [1, 1, 1, 0, 1, 0, 0, 22, 0.0, 0, 2], "succs": [[]], "fname": "triple_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 0, 13, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+x], rdi", "mov     [rbp+table_size], rsi", "mov     rax, [rbp+x]", "mov     [rbp+p], rax", "mov     rax, [rbp+p]", "mov     rax, [rax+8]", "mov     edx, 0", "div     [rbp+table_size]", "mov     rax, rdx", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~edx,0", "div~,[rbp+0]", "mov~rax,rdx", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 13, 0.0, 0, 1], "succs": [[]], "fname": "triple_hash_no_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0.0, ["and     eax, 1", "leave", "retn"], ["and~eax,0", "leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 0, 0.025, ["mov     eax, 1", "jmp     short loc_1145E"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0.125, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 3, 0, 1, 9, 1, 2, 2, 0, 0.1, ["mov     rax, [rbp+b]", "mov     rdx, [rax]", "mov     rax, [rbp+a]", "mov     rax, [rax]", "mov     rsi, rdx; dest", "mov     rdi, rax; source", "call    same_name", "test    al, al", "jz      short loc_11459"], ["mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 4, 0, 0, 6, 0, 1, 1, 0, 0.1, ["mov     rax, [rbp+a]", "mov     rdx, [rax+10h]", "mov     rax, [rbp+b]", "mov     rax, [rax+10h]", "cmp     rdx, rax", "jnz     short loc_11459"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~rdx,rax", "jnz~FOO"]], [0, 1, 5, 1, 0, 15, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+x], rdi", "mov     [rbp+y], rsi", "mov     rax, [rbp+x]", "mov     [rbp+a], rax", "mov     rax, [rbp+y]", "mov     [rbp+b], rax", "mov     rax, [rbp+a]", "mov     rdx, [rax+8]", "mov     rax, [rbp+b]", "mov     rax, [rax+8]", "cmp     rdx, rax", "jnz     short loc_11459"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~rdx,rax", "jnz~FOO"]]], "func_feature": [1, 2, 5, 0, 6, 8, 0, 36, 0.05833, 0, 1], "succs": [[], [0], [0], [1, 2], [2, 3], [2, 4]], "fname": "triple_compare", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 3, 0, 1, 9, 1, 2, 0, 0, 0.1, ["mov     rax, [rbp+b]", "mov     rdx, [rax]", "mov     rax, [rbp+a]", "mov     rax, [rax]", "mov     rsi, rdx; s2", "mov     rdi, rax; s1", "call    strcmp", "test    eax, eax", "jnz     short loc_114D1"], ["mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 0, 6, 0, 1, 1, 2, 0.1, ["mov     rax, [rbp+a]", "mov     rdx, [rax+10h]", "mov     rax, [rbp+b]", "mov     rax, [rax+10h]", "cmp     rdx, rax", "jnz     short loc_114D1"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~rdx,rax", "jnz~FOO"]], [0, 1, 5, 1, 0, 15, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+x], rdi", "mov     [rbp+y], rsi", "mov     rax, [rbp+x]", "mov     [rbp+a], rax", "mov     rax, [rbp+y]", "mov     [rbp+b], rax", "mov     rax, [rbp+a]", "mov     rdx, [rax+8]", "mov     rax, [rbp+b]", "mov     rax, [rax+8]", "cmp     rdx, rax", "jnz     short loc_114D1"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~rdx,rax", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.025, ["mov     eax, 1", "jmp     short loc_114D6"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0.125, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 0, 0, 0, 3, 1, 0, 2, 0, 0.0, ["and     eax, 1", "leave", "retn"], ["and~eax,0", "leave", "retn"]]], "func_feature": [1, 2, 5, 0, 6, 8, 0, 36, 0.05833, 0, 1], "succs": [[3, 4], [0, 4], [1, 4], [5], [5], []], "fname": "triple_compare_ino_str", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 1, 0, 1, 2, 16, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+x], rdi", "mov     rax, [rbp+x]", "mov     [rbp+a], rax", "mov     rax, [rbp+a]", "mov     rax, [rax]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+a]", "mov     rdi, rax; ptr", "call    free", "nop", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "nop", "leave", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 1, 16, 0.0, 0, 1], "succs": [[]], "fname": "triple_free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 3, 1, 0, 7, 1, 0, 0, 0, 0.14705882352941177, ["movsxd  rdx, eax", "mov     rax, [rbp+u]", "add     rax, rdx", "mov     [rbp+var_20], rax", "fild    [rbp+var_20]", "test    rax, rax", "jns     short loc_115EA"], ["movsxd~rdx,eax", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax", "fild~<TAG>,[rbp+0]", "test~rax,rax", "jns~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 8, 3, 0.051470588235294115, ["mov     eax, 1", "jmp     short loc_115CC"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 5, 3, 0.11764705882352941, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 1, 0, 0, 1, 0, 0, 7, 1, 0.051470588235294115, ["fstp    [rbp+value.value]"], ["fstp~<TAG>,[rbp+0]"]], [0, 0, 2, 0, 0, 2, 0, 0, 7, 2, 0.0, ["fld     cs:tbyte_1F910", "faddp   st(1), st"], ["fld~<TAG>,<TAG>", "faddp~<TAG>,<TAG>"]], [1, 0, 11, 0, 0, 3, 0, 0, 5, 6, 0.1323529411764706, ["fild    [rbp+u]", "cmp     [rbp+u], 0", "jns     short loc_115AC"], ["fild~<TAG>,[rbp+0]", "cmp~[rbp+0],0", "jns~FOO"]], [1, 0, 12, 0, 0, 4, 0, 1, 4, 4, 0.21323529411764705, ["mov     rax, [rbp+u]", "mov     [rbp+u], rax", "cmp     [rbp+inexact_style], 0", "jnz     short loc_115C7"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 8, 4, 0.003676470588235294, ["jmp     short loc_115C0"], ["jmp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 7, 4, 0.05514705882352941, ["fstp    st"], ["fstp~<TAG>,<TAG>"]], [0, 0, 7, 0, 0, 4, 0, 1, 7, 4, 0.0661764705882353, ["fld     [rbp+value.value]", "fucomip st, st(1)", "fstp    st", "jz      short loc_115C7"], ["fld~<TAG>,[rbp+0]", "fucomip~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 0, 0, 6, 5, 0.15441176470588236, ["fld     [rbp+value.value]", "fucomip st, st(1)", "jp      short loc_115BE"], ["fld~<TAG>,[rbp+0]", "fucomip~<TAG>,<TAG>", "jp~FOO"]], [0, 0, 10, 0, 0, 2, 0, 0, 6, 6, 0.0, ["fld     cs:tbyte_1F910", "faddp   st(1), st"], ["fld~<TAG>,<TAG>", "faddp~<TAG>,<TAG>"]], [2, 0, 13, 0, 0, 12, 2, 0, 3, 5, 0.06801470588235294, ["fld     [rbp+value.value]", "fld     cs:tbyte_1F900", "fsubp   st(1), st", "fnstcw  [rbp+var_16]", "movzx   eax, [rbp+var_16]", "or      ah, 0Ch", "mov     [rbp+var_18], ax", "fldcw   [rbp+var_18]", "fistp   [rbp+u]", "fldcw   [rbp+var_16]", "mov     rax, 8000000000000000h", "xor     [rbp+u], rax"], ["fld~<TAG>,[rbp+0]", "fld~<TAG>,<TAG>", "fsubp~<TAG>,<TAG>", "fnstcw~[rbp+0]", "movzx~eax,[rbp+0]", "or~ah,0", "mov~[rbp+0],ax", "fldcw~[rbp+0]", "fistp~<TAG>,[rbp+0]", "fldcw~[rbp+0]", "mov~rax,0", "xor~[rbp+0],rax"]], [0, 0, 15, 0, 0, 5, 0, 0, 2, 6, 0.10294117647058823, ["fld     cs:tbyte_1F900", "fld     [rbp+value.value]", "fucomip st, st(1)", "fstp    st", "jnb     short loc_1155C"], ["fld~<TAG>,<TAG>", "fld~<TAG>,[rbp+0]", "fucomip~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "jnb~FOO"]], [0, 0, 16, 0, 0, 5, 0, 0, 1, 1, 0.05514705882352941, ["fld     [rbp+value.value]", "fld     cs:tbyte_1F8F0", "fucomip st, st(1)", "fstp    st", "jbe     loc_115ED"], ["fld~<TAG>,[rbp+0]", "fld~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "jbe~FOO"]], [1, 0, 17, 0, 0, 5, 0, 1, 0, 1, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+inexact_style], edi", "cmp     [rbp+inexact_style], 1", "jz      loc_115ED"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 13, 0, 0, 9, 1, 1, 3, 5, 0.06801470588235294, ["fld     [rbp+value.value]", "fnstcw  [rbp+var_16]", "movzx   eax, [rbp+var_16]", "or      ah, 0Ch", "mov     [rbp+var_18], ax", "fldcw   [rbp+var_18]", "fistp   [rbp+u]", "fldcw   [rbp+var_16]", "jmp     short loc_1158C"], ["fld~<TAG>,[rbp+0]", "fnstcw~[rbp+0]", "movzx~eax,[rbp+0]", "or~ah,0", "mov~[rbp+0],ax", "fldcw~[rbp+0]", "fistp~<TAG>,[rbp+0]", "fldcw~[rbp+0]", "jmp~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0.0, ["fld     [rbp+value.value]", "pop     rbp", "retn"], ["fld~<TAG>,[rbp+0]", "pop~rbp", "retn"]]], "func_feature": [0, 4, 6, 3, 18, 25, 3, 70, 0.07149, 3, 1], "succs": [[3, 4], [0], [0], [17], [3], [10, 11], [2, 5], [1], [1], [2, 7], [8, 9], [10], [6], [16, 12], [17, 13], [17, 14], [6], []], "fname": "adjust_value", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 13, 0, 0, 2, 0, 1, 0, 0, 0.14102564102564102, ["cmp     [rbp+g], 7Eh ; '~'", "ja      short loc_11688"], ["cmp~[rbp+0],0", "ja~FOO"]], [1, 0, 13, 0, 0, 5, 0, 1, 1, 4, 0.28846153846153844, ["mov     rax, [rbp+grouping]", "movzx   eax, byte ptr [rax]", "mov     [rbp+g], al", "cmp     [rbp+g], 0", "jz      short loc_11698"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 13, 0, 0, 3, 0, 0, 2, 3, 0.3846153846153846, ["mov     rax, [rbp+i]", "cmp     rax, [rbp+grouplen]", "jnb     short loc_116AA"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 13, 1, 0, 2, 0, 0, 4, 4, 0.1987179487179487, ["mov     [rbp+grouplen], rax", "add     [rbp+grouping], 1"], ["mov~[rbp+0],rax", "add~[rbp+0],0"]], [1, 1, 13, 1, 2, 27, 1, 2, 0, 5, 0.0, ["push    rbp", "mov     rbp, rsp", "push    d", "sub     rsp, 88h", "mov     [rbp+number], rdi", "mov     [rbp+numberlen], rsi", "mov     [rbp+grouping], rdx", "mov     [rbp+thousands_sep], rcx", "mov     rax, fs:28h", "mov     [rbp+var_18], rax", "xor     eax, eax", "mov     [rbp+grouplen], 0FFFFFFFFFFFFFFFFh", "mov     rax, [rbp+thousands_sep]", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+thousands_seplen], rax", "mov     rax, [rbp+numberlen]", "mov     [rbp+i], rax", "mov     rdx, [rbp+numberlen]; n", "mov     rcx, [rbp+number]", "lea     rax, [rbp+buf]", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    _memcpy", "mov     rdx, [rbp+number]", "mov     rax, [rbp+numberlen]", "lea     d, [rdx+rax]"], ["push~rbp", "mov~rbp,rsp", "push~d", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "lea~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "lea~d,<TAG>"]], [0, 0, 13, 0, 0, 2, 0, 1, 3, 5, 0.05128205128205128, ["movzx   eax, [rbp+g]", "jmp     short loc_1168C"], ["movzx~eax,[rbp+0]", "jmp~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 3, 5, 0.05128205128205128, ["mov     rax, [rbp+i]"], ["mov~rax,[rbp+0]"]], [0, 0, 13, 0, 0, 2, 0, 0, 3, 3, 0.0, ["mov     rax, [rbp+i]", "mov     [rbp+grouplen], rax"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [0, 0, 3, 0, 0, 4, 1, 1, 4, 1, 0.1923076923076923, ["mov     rax, d", "mov     rsi, [rbp+var_18]", "xor     rsi, fs:28h", "jz      short loc_1171F"], ["mov~rax,d", "mov~rsi,[rbp+0]", "xor~rsi,<TAG>", "jz~FOO"]], [1, 0, 13, 2, 1, 15, 0, 2, 3, 2, 0.4230769230769231, ["mov     rax, [rbp+grouplen]", "neg     rax", "add     d, rax", "mov     rax, [rbp+grouplen]", "sub     [rbp+i], rax", "lea     rdx, [rbp+buf]", "mov     rax, [rbp+i]", "lea     rcx, [rdx+rax]", "mov     rax, [rbp+grouplen]", "mov     rdx, rax; n", "mov     rsi, rcx; src", "mov     rdi, d; dest", "call    _memcpy", "cmp     [rbp+i], 0", "jnz     short loc_116F5"], ["mov~rax,[rbp+0]", "neg~rax", "add~d,rax", "mov~rax,[rbp+0]", "sub~[rbp+0],rax", "lea~rdx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rcx,<TAG>", "mov~rax,[rbp+0]", "mov~rdx,rax", "mov~rsi,rcx", "mov~rdi,d", "call~FOO", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 5, -1, 0.07051282051282051, ["jmp     short loc_1171A"], ["jmp~FOO"]], [0, 0, 13, 1, 1, 9, 0, 2, 4, 5, 0.1858974358974359, ["mov     rax, [rbp+thousands_seplen]", "neg     rax", "add     d, rax", "mov     rdx, [rbp+thousands_seplen]; n", "mov     rax, [rbp+thousands_sep]", "mov     rsi, rax; src", "mov     rdi, d; dest", "call    _memcpy", "jmp     loc_11669"], ["mov~rax,[rbp+0]", "neg~rax", "add~d,rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,d", "call~FOO", "jmp~FOO"]], [0, 1, 0, 1, 0, 4, 0, 0, 5, 0, 0.0, ["add     rsp, 88h", "pop     d", "pop     rbp", "retn"], ["add~rsp,<STR>", "pop~d", "pop~rbp", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [5, 2, 12, 1, 14, 17, 1, 78, 0.14194, 1, 6], "succs": [[5, 6], [0, 2], [9, 7], [2], [1], [3], [3], [9], [10, 12], [8, 11], [13], [1], [], []], "fname": "group_number", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 96, 0, 0, 5, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+l]", "mov     rax, [rax]", "mov     [rbp+decimal_point], rax", "mov     rax, [rbp+pointlen]", "mov     [rbp+decimal_pointlen], rax"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [1, 0, 97, 0, 0, 2, 0, 1, 3, 12, 0.00039603960396039607, ["cmp     [rbp+pointlen], 10h", "ja      short loc_1180D"], ["cmp~[rbp+0],0", "ja~FOO"]], [4, 0, 26, 2, 3, 24, 0, 3, 13, 4, 0.005148514851485149, ["fld     [rbp+damt.value]", "fld     cs:tbyte_1F920", "fmulp   st(1), st", "mov     eax, [rbp+inexact_style]", "lea     rsp, [rsp-10h]", "fstp    [rsp+120h+value.value]; value", "mov     edi, eax; inexact_style", "call    adjust_value", "add     rsp, 10h", "fld     cs:tbyte_1F920", "fdivp   st(1), st", "mov     rax, [rbp+buf]", "lea     rsp, [rsp-10h]", "fstp    [rsp+120h+value.value]", "lea     rsi, a0lf; \"%.0Lf\"", "mov     rdi, rax; s", "mov     eax, 0", "call    _sprintf", "add     rsp, 10h", "mov     rax, [rbp+buf]", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+buflen], rax", "mov     [rbp+nonintegerlen], 0"], ["fld~<TAG>,[rbp+0]", "fld~<TAG>,<TAG>", "fmulp~<TAG>,<TAG>", "mov~eax,[rbp+0]", "lea~rsp,[rsp-10h]+0]", "fstp~<TAG>,<TAG>", "mov~edi,eax", "call~FOO", "add~rsp,0", "fld~<TAG>,<TAG>", "fdivp~<TAG>,<TAG>", "mov~rax,[rbp+0]", "lea~rsp,[rsp-10h]+0]", "fstp~<TAG>,<TAG>", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "add~rsp,0", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~[rbp+0],0"]], [5, 1, 29, 5, 3, 35, 2, 4, 12, 5, 0.014554455445544555, ["fld     [rbp+damt.value]", "fld     [rbp+e.value]", "fdivp   st(1), st", "fstp    [rbp+damt.value]", "mov     eax, [rbp+inexact_style]", "push    qword ptr [rbp+damt.value+8]", "push    qword ptr [rbp+damt.value]; value", "mov     edi, eax; inexact_style", "call    adjust_value", "add     rsp, 10h", "mov     rax, [rbp+buf]", "lea     rsp, [rsp-10h]", "fstp    [rsp+120h+value.value]", "lea     rsi, a1lf; \"%.1Lf\"", "mov     rdi, rax; s", "mov     eax, 0", "call    _sprintf", "add     rsp, 10h", "mov     rax, [rbp+buf]", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+buflen], rax", "mov     rax, [rbp+decimal_pointlen]", "add     rax, 1", "mov     [rbp+nonintegerlen], rax", "mov     eax, [rbp+opts]", "and     eax, 20h", "test    eax, eax", "setz    al", "movzx   edx, al", "mov     rax, [rbp+nonintegerlen]", "add     rax, rdx", "add     rax, 1", "cmp     [rbp+buflen], rax", "ja      short loc_11BA4"], ["fld~<TAG>,[rbp+0]", "fld~<TAG>,[rbp+0]", "fdivp~<TAG>,<TAG>", "fstp~<TAG>,[rbp+0]", "mov~eax,[rbp+0]", "push~[word ptr [rbp+0]", "push~[word ptr [rbp+0]", "mov~edi,eax", "call~FOO", "add~rsp,0", "mov~rax,[rbp+0]", "lea~rsp,[rsp-10h]+0]", "fstp~<TAG>,<TAG>", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "add~rsp,0", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "add~rax,0", "mov~[rbp+0],rax", "mov~eax,[rbp+0]", "and~eax,<STR>", "test~eax,eax", "setz~al", "movzx~edx,al", "mov~rax,[rbp+0]", "add~rax,rdx", "add~rax,0", "cmp~[rbp+0],rax", "ja~FOO"]], [1, 0, 27, 1, 0, 7, 0, 1, 14, 4, 9.900990099009902e-05, ["mov     rax, [rbp+buflen]", "lea     rdx, [rax-1]", "mov     rax, [rbp+buf]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "cmp     al, 30h ; '0'", "jnz     short loc_11C12"], ["mov~rax,[rbp+0]", "lea~rdx,[rax-1]+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [1, 0, 36, 0, 0, 3, 0, 0, 8, 6, 0.0605940594059406, ["fild    [rbp+from_block_size]", "cmp     [rbp+from_block_size], 0", "jns     short loc_11A18"], ["fild~<TAG>,[rbp+0]", "cmp~[rbp+0],0", "jns~FOO"]], [1, 0, 38, 0, 0, 4, 0, 0, 7, 7, 0.05643564356435644, ["fstp    [rbp+dto_block_size.value]", "fild    [rbp+n]", "cmp     [rbp+n], 0", "jns     short loc_11A00"], ["fstp~<TAG>,[rbp+0]", "fild~<TAG>,[rbp+0]", "cmp~[rbp+0],0", "jns~FOO"]], [0, 0, 37, 0, 0, 2, 0, 0, 8, 7, 0.0, ["fld     cs:tbyte_1F910", "faddp   st(1), st"], ["fld~<TAG>,<TAG>", "faddp~<TAG>,<TAG>"]], [2, 0, 46, 1, 0, 2, 0, 0, 18, 10, 0.0, ["add     [rbp+amt], 1", "mov     [rbp+tenths], 0"], ["add~[rbp+0],0", "mov~[rbp+0],0"]], [3, 0, 47, 1, 0, 4, 0, 1, 17, 10, 0.0037623762376237627, ["add     [rbp+tenths], 1", "mov     [rbp+rounding], 0", "cmp     [rbp+tenths], 0Ah", "jnz     short loc_11E1E"], ["add~[rbp+0],0", "mov~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 35, 0, 0, 2, 0, 0, 9, 6, 0.0, ["fld     cs:tbyte_1F910", "faddp   st(1), st"], ["fld~<TAG>,<TAG>", "faddp~<TAG>,<TAG>"]], [1, 0, 45, 0, 0, 2, 0, 1, 17, 9, 0.05346534653465347, ["cmp     [rbp+amt], 9", "ja      short loc_11EA1"], ["cmp~[rbp+0],0", "ja~FOO"]], [0, 0, 48, 0, 0, 2, 1, 1, 16, 10, 0.05108910891089109, ["test    al, al", "jz      short loc_11E1E"], ["test~al,al", "jz~FOO"]], [0, 0, 25, 0, 0, 1, 0, 0, 14, 3, 0.11633663366336634, ["nop"], ["nop"]], [8, 0, 27, 8, 0, 26, 0, 1, 13, 4, 0.11970297029702971, ["mov     rcx, [rbp+amt]", "mov     rdx, 0CCCCCCCCCCCCCCCDh", "mov     rax, rcx", "mul     rdx", "shr     rdx, 3", "mov     rax, rdx", "shl     rax, 2", "add     rax, rdx", "add     rax, rax", "sub     rcx, rax", "mov     rdx, rcx", "mov     [rbp+digit], edx", "mov     eax, [rbp+digit]", "add     eax, 30h ; '0'", "sub     [rbp+p], 1", "mov     edx, eax", "mov     rax, [rbp+p]", "mov     [rax], dl", "mov     rax, [rbp+amt]", "mov     rdx, 0CCCCCCCCCCCCCCCDh", "mul     rdx", "mov     rax, rdx", "shr     rax, 3", "mov     [rbp+amt], rax", "cmp     [rbp+amt], 0", "jnz     short loc_11FAC"], ["mov~rcx,[rbp+0]", "mov~rdx,0", "mov~rax,rcx", "mul~,rdx", "shr~rdx,0", "mov~rax,rdx", "shl~rax,0", "add~rax,rdx", "add~rax,rax", "sub~rcx,rax", "mov~rdx,rcx", "mov~[rbp+0],edx", "mov~eax,[rbp+0]", "add~eax,0", "sub~[rbp+0],0", "mov~edx,eax", "mov~rax,[rbp+0]", "mov~<TAG>,dl", "mov~rax,[rbp+0]", "mov~rdx,0", "mul~,rdx", "mov~rax,rdx", "shr~rax,0", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 34, 0, 0, 8, 2, 1, 9, 5, 0.06396039603960396, ["fld     [rbp+dto_block_size.value]", "fdivp   st(1), st", "fmulp   st(1), st", "fstp    [rbp+damt.value]", "mov     eax, [rbp+opts]", "and     eax, 10h", "test    eax, eax", "jnz     short loc_11A8D"], ["fld~<TAG>,[rbp+0]", "fdivp~<TAG>,<TAG>", "fmulp~<TAG>,<TAG>", "fstp~<TAG>,[rbp+0]", "mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 18, 10, 0.008118811881188119, ["cmp     [rbp+tenths], 0", "jnz     short loc_11E3E"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 24, 0, 0, 4, 2, 1, 12, 2, 0.182970297029703, ["mov     eax, [rbp+opts]", "and     eax, 4", "test    eax, eax", "jz      short loc_1206E"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 25, 3, 1, 19, 0, 2, 11, 3, 0.06930693069306931, ["mov     rax, [rbp+buflen]", "neg     rax", "mov     rdx, rax", "mov     rax, [rbp+psuffix]", "add     rax, rdx", "mov     [rbp+p], rax", "mov     rdx, [rbp+buflen]; n", "mov     rcx, [rbp+buf]", "mov     rax, [rbp+p]", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    _memmove", "mov     rax, [rbp+buflen]", "sub     rax, [rbp+nonintegerlen]", "mov     rdx, rax", "mov     rax, [rbp+p]", "add     rax, rdx", "mov     [rbp+integerlim], rax", "jmp     do_grouping"], ["mov~rax,[rbp+0]", "neg~rax", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "sub~rax,[rbp+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 94, 0, 0, 3, 0, 0, 4, 11, 0.0, ["mov     rax, [rbp+l]", "mov     rax, [rax+8]", "mov     [rbp+thousands_sep], rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax"]], [1, 0, 95, 0, 1, 9, 0, 2, 3, 11, 0.05643564356435644, ["mov     rax, [rbp+l]", "mov     rax, [rax+10h]", "mov     [rbp+grouping], rax", "mov     rax, [rbp+l]", "mov     rax, [rax+8]", "mov     rdi, rax; s", "call    _strlen", "cmp     rax, 10h", "ja      short loc_1183E"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "cmp~rax,0", "ja~FOO"]], [1, 0, 43, 0, 0, 4, 2, 1, 19, 9, 0.0020792079207920793, ["mov     eax, [rbp+opts]", "and     eax, 8", "test    eax, eax", "jnz     short loc_11EA1"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [1, 0, 36, 0, 0, 1, 0, 0, 11, 8, 0.009801980198019802, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 39, 0, 0, 2, 0, 1, 10, 9, 0.017821782178217824, ["cmp     [rbp+inexact_style], 0", "jnz     short loc_11EFA"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 38, 1, 0, 5, 1, 1, 11, 9, 0.004554455445544555, ["mov     edx, [rbp+tenths]", "mov     eax, [rbp+rounding]", "add     eax, edx", "test    eax, eax", "jle     short loc_11EFA"], ["mov~edx,[rbp+0]", "mov~eax,[rbp+0]", "add~eax,edx", "test~eax,eax", "jle~FOO"]], [1, 0, 0, 0, 0, 5, 0, 0, 14, 0, 0.0, ["mov     rax, [rbp+psuffix]", "mov     byte ptr [rax], 0", "mov     rax, [rbp+p]", "leave", "retn"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~rax,[rbp+0]", "leave", "retn"]], [0, 1, 22, 0, 0, 4, 2, 1, 13, 1, 0.1720792079207921, ["mov     eax, [rbp+opts]", "and     eax, 80h", "test    eax, eax", "jz      loc_121A9"], ["mov~eax,[rbp+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [1, 0, 5, 0, 0, 4, 2, 1, 17, 1, 0.039603960396039604, ["mov     eax, [rbp+opts]", "and     eax, 100h", "test    eax, eax", "jz      short loc_121A9"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 1, 0, 0, 4, 0, 0, 19, 1, 0.0002970297029702971, ["mov     rax, [rbp+psuffix]", "lea     rdx, [rax+1]", "mov     [rbp+psuffix], rdx", "mov     byte ptr [rax], 42h ; 'B'"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~<TAG>,0"]], [4, 0, 26, 2, 3, 20, 0, 4, 10, 4, 0.05148514851485149, ["mov     eax, [rbp+inexact_style]", "push    qword ptr [rbp+damt.value+8]", "push    qword ptr [rbp+damt.value]; value", "mov     edi, eax; inexact_style", "call    adjust_value", "add     rsp, 10h", "mov     rax, [rbp+buf]", "lea     rsp, [rsp-10h]", "fstp    [rsp+120h+value.value]", "lea     rsi, a0lf; \"%.0Lf\"", "mov     rdi, rax; s", "mov     eax, 0", "call    _sprintf", "add     rsp, 10h", "mov     rax, [rbp+buf]", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+buflen], rax", "mov     [rbp+nonintegerlen], 0", "jmp     loc_11C12"], ["mov~eax,[rbp+0]", "push~[word ptr [rbp+0]", "push~[word ptr [rbp+0]", "mov~edi,eax", "call~FOO", "add~rsp,0", "mov~rax,[rbp+0]", "lea~rsp,[rsp-10h]+0]", "fstp~<TAG>,<TAG>", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "add~rsp,0", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 28, 0, 0, 4, 2, 1, 13, 4, 0.007524752475247525, ["mov     eax, [rbp+opts]", "and     eax, 8", "test    eax, eax", "jz      loc_11C12"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 23, 1, 1, 11, 0, 1, 13, 2, 0.0, ["mov     rdx, [rbp+integerlim]", "mov     rax, [rbp+p]", "sub     rdx, rax", "mov     rax, rdx", "mov     rsi, rax; numberlen", "mov     rcx, [rbp+thousands_sep]; thousands_sep", "mov     rdx, [rbp+grouping]; grouping", "mov     rax, [rbp+p]", "mov     rdi, rax; number", "call    group_number", "mov     [rbp+p], rax"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "mov~rsi,rax", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax"]], [1, 0, 93, 1, 0, 8, 0, 1, 4, 10, 0.07366336633663367, ["mov     rax, [rbp+buf]", "add     rax, 287h", "mov     [rbp+psuffix], rax", "mov     rax, [rbp+psuffix]", "mov     [rbp+p], rax", "mov     rax, [rbp+to_block_size]", "cmp     rax, [rbp+from_block_size]", "ja      short loc_118EF"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "ja~FOO"]], [1, 0, 65, 0, 0, 4, 2, 1, 8, 9, 0.09653465346534654, ["mov     eax, [rbp+opts]", "and     eax, 10h", "test    eax, eax", "jz      loc_11EA1"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [2, 0, 66, 0, 0, 3, 0, 1, 7, 10, 0.04465346534653466, ["mov     [rbp+tenths], 0", "mov     [rbp+rounding], 0", "jmp     use_integer_arithmetic"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 66, 0, 0, 2, 0, 1, 9, 10, 0.040792079207920794, ["mov     [rbp+rounding], eax", "jmp     use_integer_arithmetic"], ["mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 84, 1, 0, 6, 1, 1, 5, 9, 0.056584158415841586, ["mov     rax, [rbp+from_block_size]", "mov     edx, 0", "div     [rbp+to_block_size]", "mov     rax, rdx", "test    rax, rax", "jnz     loc_119CD"], ["mov~rax,[rbp+0]", "mov~edx,0", "div~,[rbp+0]", "mov~rax,rdx", "test~rax,rax", "jnz~FOO"]], [1, 0, 32, 0, 0, 3, 0, 0, 10, 7, 0.011881188118811881, ["fld1", "fstp    [rbp+e.value]", "mov     [rbp+exponent], 0"], ["fld1~<TAG>", "fstp~<TAG>,[rbp+0]", "mov~[rbp+0],0"]], [1, 0, 64, 0, 0, 4, 0, 0, 9, 9, 0.04574257425742575, ["mov     [rbp+exponent], 0", "mov     eax, [rbp+base]", "cmp     [rbp+amt], rax", "jb      loc_11EA1"], ["mov~[rbp+0],0", "mov~eax,[rbp+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [3, 0, 42, 3, 1, 18, 0, 1, 19, 9, 0.0020792079207920793, ["mov     eax, [rbp+tenths]", "add     eax, 30h ; '0'", "sub     [rbp+p], 1", "mov     edx, eax", "mov     rax, [rbp+p]", "mov     [rax], dl", "mov     rax, [rbp+decimal_pointlen]", "neg     rax", "add     [rbp+p], rax", "mov     rdx, [rbp+decimal_pointlen]; n", "mov     rcx, [rbp+decimal_point]", "mov     rax, [rbp+p]", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    _memcpy", "mov     [rbp+rounding], 0", "mov     eax, [rbp+rounding]", "mov     [rbp+tenths], eax"], ["mov~eax,[rbp+0]", "add~eax,0", "sub~[rbp+0],0", "mov~edx,eax", "mov~rax,[rbp+0]", "mov~<TAG>,dl", "mov~rax,[rbp+0]", "neg~rax", "add~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],0", "mov~eax,[rbp+0]", "mov~[rbp+0],eax"]], [2, 0, 20, 0, 0, 3, 0, 1, 15, 6, 0.0400990099009901, ["mov     [rbp+exponent], 0", "mov     [rbp+power], 1", "jmp     short loc_120C5"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 21, 0, 0, 2, 0, 0, 14, 4, 0.15841584158415842, ["cmp     [rbp+exponent], 0", "jns     short loc_120D5"], ["cmp~[rbp+0],0", "jns~FOO"]], [1, 0, 41, 0, 0, 2, 0, 1, 9, 8, 0.14643564356435645, ["cmp     [rbp+inexact_style], 1", "jnz     short loc_11ED8"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 56, 0, 0, 2, 0, 1, 13, 9, 0.06930693069306931, ["cmp     [rbp+amt], 9", "ja      loc_11EA1"], ["cmp~[rbp+0],0", "ja~FOO"]], [1, 0, 20, 1, 0, 4, 0, 1, 17, 5, 0.016534653465346535, ["add     [rbp+exponent], 1", "mov     eax, [rbp+exponent]", "cmp     eax, [rbp+exponent_max]", "jz      short loc_120D4"], ["add~[rbp+0],0", "mov~eax,[rbp+0]", "cmp~eax,[rbp+0]", "jz~FOO"]], [0, 0, 20, 0, 0, 3, 0, 0, 16, 5, 0.035841584158415846, ["mov     rax, [rbp+power]", "cmp     rax, [rbp+to_block_size]", "jb      short loc_1209E"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jb~FOO"]], [0, 0, 20, 1, 0, 4, 0, 0, 18, 6, 0.00019801980198019803, ["mov     eax, [rbp+base]", "mov     rdx, [rbp+power]", "imul    rax, rdx", "mov     [rbp+power], rax"], ["mov~eax,[rbp+0]", "mov~rdx,[rbp+0]", "imul~rax,rdx", "mov~[rbp+0],rax"]], [2, 0, 83, 3, 0, 12, 0, 1, 6, 9, 0.041584158415841586, ["mov     rax, [rbp+from_block_size]", "mov     edx, 0", "div     [rbp+to_block_size]", "mov     [rbp+multiplier], rax", "mov     rax, [rbp+n]", "imul    rax, [rbp+multiplier]", "mov     [rbp+amt], rax", "mov     rax, [rbp+amt]", "mov     edx, 0", "div     [rbp+multiplier]", "cmp     [rbp+n], rax", "jnz     loc_119CD"], ["mov~rax,[rbp+0]", "mov~edx,0", "div~,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "imul~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~edx,0", "div~,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [0, 0, 15, 0, 0, 1, 0, 1, 17, 4, 0.004455445544554456, ["jmp     short loc_120D5"], ["jmp~FOO"]], [0, 0, 15, 0, 0, 1, 0, 0, 18, 4, 0.0014851485148514852, ["nop"], ["nop"]], [2, 0, 35, 2, 0, 13, 2, 1, 10, 7, 0.12376237623762378, ["mov     eax, [rbp+rounding]", "cdqe", "mov     rdx, [rbp+amt]", "and     edx, 1", "add     rax, rdx", "test    rax, rax", "setnz   al", "movzx   edx, al", "mov     eax, [rbp+tenths]", "add     eax, edx", "cmp     eax, 5", "setnle  al", "jmp     short loc_11F02"], ["mov~eax,[rbp+0]", "cdqe~", "mov~rdx,[rbp+0]", "and~edx,0", "add~rax,rdx", "test~rax,rax", "setnz~al", "movzx~edx,al", "mov~eax,[rbp+0]", "add~eax,edx", "cmp~eax,0", "setnle~al", "jmp~FOO"]], [1, 0, 32, 1, 0, 16, 0, 0, 11, 6, 0.012970297029702971, ["mov     eax, [rbp+base]", "mov     [rbp+var_110], rax", "fild    [rbp+var_110]", "fld     [rbp+e.value]", "fmulp   st(1), st", "fstp    [rbp+e.value]", "add     [rbp+exponent], 1", "mov     eax, [rbp+base]", "mov     [rbp+var_110], rax", "fild    [rbp+var_110]", "fld     [rbp+e.value]", "fmulp   st(1), st", "fld     [rbp+damt.value]", "fucomip st, st(1)", "fstp    st", "jb      short loc_11AED"], ["mov~eax,[rbp+0]", "mov~[rbp+0],rax", "fild~<TAG>,[rbp+0]", "fld~<TAG>,[rbp+0]", "fmulp~<TAG>,<TAG>", "fstp~<TAG>,[rbp+0]", "add~[rbp+0],0", "mov~eax,[rbp+0]", "mov~[rbp+0],rax", "fild~<TAG>,[rbp+0]", "fld~<TAG>,[rbp+0]", "fmulp~<TAG>,<TAG>", "fld~<TAG>,[rbp+0]", "fucomip~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "jb~FOO"]], [0, 0, 32, 0, 0, 3, 0, 1, 12, 6, 0.0, ["mov     eax, [rbp+exponent]", "cmp     eax, [rbp+exponent_max]", "jl      short loc_11A9C"], ["mov~eax,[rbp+0]", "cmp~eax,[rbp+0]", "jl~FOO"]], [0, 0, 27, 0, 0, 2, 0, 0, 12, 5, 0.12287128712871288, ["mov     rax, [rbp+p]", "mov     [rbp+integerlim], rax"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [1, 0, 14, 0, 0, 5, 3, 1, 15, 3, 0.11267326732673268, ["mov     eax, [rbp+opts]", "and     eax, 100h", "or      eax, [rbp+exponent]", "test    eax, eax", "jz      short loc_1210C"], ["mov~eax,[rbp+0]", "and~eax,0", "or~eax,[rbp+0]", "test~eax,eax", "jz~FOO"]], [1, 0, 13, 0, 0, 4, 2, 1, 16, 3, 0.008712871287128714, ["mov     eax, [rbp+opts]", "and     eax, 40h", "test    eax, eax", "jz      short loc_1210C"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 89, 0, 0, 2, 0, 1, 5, 9, 0.024504950495049506, ["cmp     [rbp+from_block_size], 0", "jz      loc_119CD"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 36, 0, 0, 2, 0, 1, 12, 8, 0.0017821782178217822, ["mov     eax, 1", "jmp     short loc_11EFF"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 35, 0, 0, 1, 1, 0, 12, 7, 0.013861386138613862, ["and     eax, 1"], ["and~eax,0"]], [0, 0, 34, 0, 0, 2, 1, 1, 11, 6, 0.13950495049504952, ["test    al, al", "jz      loc_11F9E"], ["test~al,al", "jz~FOO"]], [0, 1, 12, 0, 0, 4, 0, 0, 17, 3, 0.0, ["mov     rax, [rbp+psuffix]", "lea     rdx, [rax+1]", "mov     [rbp+psuffix], rdx", "mov     byte ptr [rax], 20h ; ' '"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~<TAG>,<STR>"]], [4, 0, 98, 0, 2, 19, 0, 3, 2, 12, 0.02910891089108911, ["mov     [rbp+base], eax", "mov     [rbp+exponent], 0FFFFFFFFh", "mov     [rbp+exponent_max], 8", "lea     rax, unk_1F889", "mov     [rbp+decimal_point], rax", "mov     [rbp+decimal_pointlen], 1", "lea     rax, unk_1F88B", "mov     [rbp+grouping], rax", "lea     rax, unk_1F88B", "mov     [rbp+thousands_sep], rax", "call    _localeconv", "mov     [rbp+l], rax", "mov     rax, [rbp+l]", "mov     rax, [rax]", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+pointlen], rax", "cmp     [rbp+pointlen], 0", "jz      short loc_1180D"], ["mov~[rbp+0],eax", "mov~[rbp+0],0", "mov~[rbp+0],0", "lea~rax,<TAG>", "mov~[rbp+0],rax", "mov~[rbp+0],0", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 16, 2, 0.09009900990099011, ["cmp     [rbp+exponent], 0", "jz      short loc_1215A"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 88, 1, 0, 6, 1, 1, 6, 9, 0.01, ["mov     rax, [rbp+to_block_size]", "mov     edx, 0", "div     [rbp+from_block_size]", "mov     rax, rdx", "test    rax, rax", "jnz     loc_119CD"], ["mov~rax,[rbp+0]", "mov~edx,0", "div~,[rbp+0]", "mov~rax,rdx", "test~rax,rax", "jnz~FOO"]], [2, 0, 33, 1, 0, 5, 2, 1, 12, 6, 0.025742574257425745, ["add     [rbp+amt], 1", "mov     eax, [rbp+opts]", "and     eax, 10h", "test    eax, eax", "jz      short loc_11F9E"], ["add~[rbp+0],0", "mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 1, 10, 0, 0, 4, 2, 1, 17, 4, 0.036039603960396044, ["mov     eax, [rbp+opts]", "and     eax, 20h", "test    eax, eax", "jnz     short loc_1212B"], ["mov~eax,[rbp+0]", "and~eax,<STR>", "test~eax,eax", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 18, 4, 0.00910891089108911, ["cmp     [rbp+exponent], 1", "jz      short loc_12141"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 32, 0, 0, 3, 0, 1, 13, 6, 0.02099009900990099, ["mov     eax, [rbp+base]", "cmp     [rbp+amt], rax", "jnz     short loc_11F9E"], ["mov~eax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [6, 0, 64, 9, 0, 35, 0, 0, 10, 12, 0.047623762376237624, ["mov     ecx, [rbp+base]", "mov     rax, [rbp+amt]", "mov     edx, 0", "div     rcx", "mov     rax, rdx", "mov     edx, eax", "mov     eax, edx", "shl     eax, 2", "add     eax, edx", "add     eax, eax", "mov     edx, eax", "mov     eax, [rbp+tenths]", "add     eax, edx", "mov     [rbp+r10_1], eax", "mov     eax, [rbp+r10_1]", "mov     edx, 0", "div     [rbp+base]", "mov     eax, edx", "lea     edx, [rax+rax]", "mov     eax, [rbp+rounding]", "sar     eax, 1", "add     eax, edx", "mov     [rbp+r2_0], eax", "mov     esi, [rbp+base]", "mov     rax, [rbp+amt]", "mov     edx, 0", "div     rsi", "mov     [rbp+amt], rax", "mov     eax, [rbp+r10_1]", "mov     edx, 0", "div     [rbp+base]", "mov     [rbp+tenths], eax", "mov     eax, [rbp+r2_0]", "cmp     eax, [rbp+base]", "jnb     short loc_11D4B"], ["mov~ecx,[rbp+0]", "mov~rax,[rbp+0]", "mov~edx,0", "div~,rcx", "mov~rax,rdx", "mov~edx,eax", "mov~eax,edx", "shl~eax,0", "add~eax,edx", "add~eax,eax", "mov~edx,eax", "mov~eax,[rbp+0]", "add~eax,edx", "mov~[rbp+0],eax", "mov~eax,[rbp+0]", "mov~edx,0", "div~,[rbp+0]", "mov~eax,edx", "lea~edx,<TAG>", "mov~eax,[rbp+0]", "sar~eax,0", "add~eax,edx", "mov~[rbp+0],eax", "mov~esi,[rbp+0]", "mov~rax,[rbp+0]", "mov~edx,0", "div~,rsi", "mov~[rbp+0],rax", "mov~eax,[rbp+0]", "mov~edx,0", "div~,[rbp+0]", "mov~[rbp+0],eax", "mov~eax,[rbp+0]", "cmp~eax,[rbp+0]", "jnb~FOO"]], [0, 0, 64, 0, 0, 3, 0, 1, 13, 10, 0.0018811881188118813, ["mov     eax, [rbp+exponent]", "cmp     eax, [rbp+exponent_max]", "jl      loc_11C99"], ["mov~eax,[rbp+0]", "cmp~eax,[rbp+0]", "jl~FOO"]], [0, 0, 31, 0, 0, 3, 0, 1, 14, 6, 0.01603960396039604, ["mov     eax, [rbp+exponent]", "cmp     eax, [rbp+exponent_max]", "jge     short loc_11F9E"], ["mov~eax,[rbp+0]", "cmp~eax,[rbp+0]", "jge~FOO"]], [0, 0, 7, 0, 0, 5, 0, 1, 18, 3, 0.01004950495049505, ["mov     eax, [rbp+exponent]", "movsxd  rdx, eax", "lea     rax, power_letter", "movzx   edx, byte ptr [rdx+rax]", "jmp     short loc_12146"], ["mov~eax,[rbp+0]", "movsxd~rdx,eax", "lea~rax,<TAG>", "movzx~edx,<TAG>", "jmp~FOO"]], [1, 0, 7, 0, 0, 1, 0, 0, 19, 3, 0.00034653465346534657, ["mov     edx, 6Bh ; 'k'"], ["mov~edx,0"]], [0, 0, 64, 1, 0, 7, 1, 1, 11, 11, 0.042970297029702974, ["mov     edx, [rbp+rounding]", "mov     eax, [rbp+r2_0]", "add     eax, edx", "test    eax, eax", "setnz   al", "movzx   eax, al", "jmp     short loc_11D6D"], ["mov~edx,[rbp+0]", "mov~eax,[rbp+0]", "add~eax,edx", "test~eax,eax", "setnz~al", "movzx~eax,al", "jmp~FOO"]], [2, 0, 30, 1, 0, 5, 2, 1, 15, 7, 0.010891089108910892, ["add     [rbp+exponent], 1", "mov     eax, [rbp+opts]", "and     eax, 8", "test    eax, eax", "jnz     short loc_11F93"], ["add~[rbp+0],0", "mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [0, 0, 6, 0, 0, 4, 0, 0, 19, 2, 0.0023762376237623766, ["mov     rax, [rbp+psuffix]", "lea     rcx, [rax+1]", "mov     [rbp+psuffix], rcx", "mov     [rax], dl"], ["mov~rax,[rbp+0]", "lea~rcx,[rax+0]", "mov~[rbp+0],rcx", "mov~<TAG>,dl"]], [0, 0, 64, 1, 0, 5, 0, 0, 11, 12, 0.005346534653465347, ["mov     edx, [rbp+rounding]", "mov     eax, [rbp+r2_0]", "add     eax, edx", "cmp     [rbp+base], eax", "jnb     short loc_11D68"], ["mov~edx,[rbp+0]", "mov~eax,[rbp+0]", "add~eax,edx", "cmp~[rbp+0],eax", "jnb~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 12, 11, 0.00301980198019802, ["mov     eax, 3", "jmp     short loc_11D6D"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 64, 0, 0, 1, 0, 0, 12, 11, 0.00301980198019802, ["mov     eax, 2"], ["mov~eax,0"]], [2, 1, 101, 1, 0, 15, 3, 1, 0, 14, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 110h", "mov     [rbp+n], rdi", "mov     [rbp+buf], rsi", "mov     [rbp+opts], edx", "mov     [rbp+from_block_size], rcx", "mov     [rbp+to_block_size], r8", "mov     eax, [rbp+opts]", "and     eax, 3", "mov     [rbp+inexact_style], eax", "mov     eax, [rbp+opts]", "and     eax, 20h", "test    eax, eax", "jz      short loc_11779"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],edx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~eax,[rbp+0]", "and~eax,0", "mov~[rbp+0],eax", "mov~eax,[rbp+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [0, 1, 4, 0, 0, 4, 2, 1, 18, 2, 0.028811881188118813, ["mov     eax, [rbp+opts]", "and     eax, 20h", "test    eax, eax", "jz      short loc_12194"], ["mov~eax,[rbp+0]", "and~eax,<STR>", "test~eax,eax", "jz~FOO"]], [1, 0, 99, 0, 0, 2, 0, 1, 1, 13, 0.004900990099009901, ["mov     eax, 400h", "jmp     short loc_1177E"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 99, 0, 0, 1, 0, 0, 1, 13, 0.004900990099009901, ["mov     eax, 3E8h"], ["mov~eax,0"]], [1, 0, 3, 0, 0, 2, 0, 1, 19, 2, 0.009702970297029703, ["cmp     [rbp+exponent], 0", "jz      short loc_12194"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 49, 0, 0, 1, 1, 0, 17, 11, 0.019405940594059406, ["and     eax, 1"], ["and~eax,0"]], [1, 0, 50, 0, 0, 2, 0, 1, 17, 12, 0.0024752475247524753, ["mov     eax, 1", "jmp     short loc_11DEB"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 50, 0, 0, 1, 0, 0, 16, 12, 0.010495049504950496, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 64, 1, 0, 5, 0, 0, 12, 10, 0.06495049504950495, ["mov     [rbp+rounding], eax", "add     [rbp+exponent], 1", "mov     eax, [rbp+base]", "cmp     [rbp+amt], rax", "jb      short loc_11D9B"], ["mov~[rbp+0],eax", "add~[rbp+0],0", "mov~eax,[rbp+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [2, 0, 29, 2, 1, 12, 0, 1, 16, 7, 0.0, ["sub     [rbp+p], 1", "mov     rax, [rbp+p]", "mov     byte ptr [rax], 30h ; '0'", "mov     rax, [rbp+decimal_pointlen]", "neg     rax", "add     [rbp+p], rax", "mov     rdx, [rbp+decimal_pointlen]; n", "mov     rcx, [rbp+decimal_point]", "mov     rax, [rbp+p]", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    _memcpy"], ["sub~[rbp+0],0", "mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~rax,[rbp+0]", "neg~rax", "add~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [1, 0, 2, 0, 0, 4, 0, 0, 20, 2, 0.0, ["mov     rax, [rbp+psuffix]", "lea     rdx, [rax+1]", "mov     [rbp+psuffix], rdx", "mov     byte ptr [rax], 69h ; 'i'"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~<TAG>,0"]], [1, 0, 28, 0, 0, 1, 0, 0, 16, 6, 0.005544554455445545, ["mov     [rbp+amt], 1"], ["mov~[rbp+0],0"]], [6, 0, 71, 9, 0, 29, 0, 0, 7, 12, 0.013564356435643566, ["mov     rax, [rbp+to_block_size]", "mov     edx, 0", "div     [rbp+from_block_size]", "mov     [rbp+divisor], rax", "mov     rax, [rbp+n]", "mov     edx, 0", "div     [rbp+divisor]", "mov     rax, rdx", "shl     rax, 2", "add     rax, rdx", "add     rax, rax", "mov     [rbp+r10_0], rax", "mov     rax, [rbp+r10_0]", "mov     edx, 0", "div     [rbp+divisor]", "mov     rax, rdx", "add     rax, rax", "mov     [rbp+r2], rax", "mov     rax, [rbp+n]", "mov     edx, 0", "div     [rbp+divisor]", "mov     [rbp+amt], rax", "mov     rax, [rbp+r10_0]", "mov     edx, 0", "div     [rbp+divisor]", "mov     [rbp+tenths], eax", "mov     rax, [rbp+r2]", "cmp     rax, [rbp+divisor]", "jnb     short loc_119AC"], ["mov~rax,[rbp+0]", "mov~edx,0", "div~,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~edx,0", "div~,[rbp+0]", "mov~rax,rdx", "shl~rax,0", "add~rax,rdx", "add~rax,rax", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~edx,0", "div~,[rbp+0]", "mov~rax,rdx", "add~rax,rax", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~edx,0", "div~,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~edx,0", "div~,[rbp+0]", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 67, 0, 0, 4, 0, 1, 8, 11, 0.015841584158415842, ["cmp     [rbp+r2], 0", "setnz   al", "movzx   eax, al", "jmp     short loc_119C2"], ["cmp~[rbp+0],0", "setnz~al", "movzx~eax,al", "jmp~FOO"]], [1, 0, 55, 0, 0, 2, 0, 1, 14, 12, 0.03861386138613861, ["cmp     [rbp+inexact_style], 1", "jnz     short loc_11DCD"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 69, 0, 0, 3, 0, 0, 8, 12, 0.0023762376237623766, ["mov     rax, [rbp+divisor]", "cmp     rax, [rbp+r2]", "jnb     short loc_119BD"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 67, 0, 0, 2, 0, 1, 9, 11, 0.003316831683168317, ["mov     eax, 3", "jmp     short loc_119C2"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 67, 0, 0, 1, 0, 0, 9, 11, 0.003316831683168317, ["mov     eax, 2"], ["mov~eax,0"]], [2, 0, 49, 1, 0, 8, 1, 1, 15, 11, 0.025643564356435646, ["mov     eax, [rbp+tenths]", "and     eax, 1", "mov     edx, eax", "mov     eax, [rbp+rounding]", "add     eax, edx", "cmp     eax, 2", "setnle  al", "jmp     short loc_11DEE"], ["mov~eax,[rbp+0]", "and~eax,0", "mov~edx,eax", "mov~eax,[rbp+0]", "add~eax,edx", "cmp~eax,0", "setnle~al", "jmp~FOO"]], [1, 0, 53, 0, 0, 2, 0, 1, 15, 13, 0.012277227722772278, ["cmp     [rbp+inexact_style], 0", "jnz     short loc_11DE6"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 40, 0, 0, 3, 0, 0, 6, 8, 0.05148514851485149, ["fild    [rbp+to_block_size]", "cmp     [rbp+to_block_size], 0", "jns     short loc_119E5"], ["fild~<TAG>,[rbp+0]", "cmp~[rbp+0],0", "jns~FOO"]], [1, 0, 52, 0, 0, 2, 0, 1, 16, 13, 0.0031683168316831685, ["cmp     [rbp+rounding], 0", "jle     short loc_11DE6"], ["cmp~[rbp+0],0", "jle~FOO"]], [0, 0, 39, 0, 0, 2, 0, 0, 7, 8, 0.0, ["fld     cs:tbyte_1F910", "faddp   st(1), st"], ["fld~<TAG>,<TAG>", "faddp~<TAG>,<TAG>"]]], "func_feature": [16, 43, 77, 1, 102, 158, 7, 586, 0.03235, 7, 66], "succs": [[20], [0, 20], [18], [2, 30], [2, 18], [10, 15], [5, 7], [5], [11], [8, 11], [15], [16, 42], [9, 11], [17], [13, 14], [29, 37], [21, 39], [26, 31], [17], [32], [32, 19], [42, 39], [58], [24, 22], [57, 22], [], [25, 41], [80, 25], [25], [18], [18, 4], [26], [56, 36], [42, 38], [33], [33], [99, 47], [51], [42, 68], [42], [45], [40, 54], [50, 23], [42, 93], [49, 46], [48, 44], [45], [34, 99], [54], [54], [59], [3, 52], [3, 51], [14], [62, 55], [60, 62], [99, 63], [58], [59], [64, 53], [62], [1, 20], [65, 27], [99, 91], [67, 53], [66, 71], [72, 71], [53, 70], [73, 76], [43, 68], [74, 53], [75], [75], [87], [88, 90], [27], [77, 78], [87], [87], [81, 82], [83, 28], [61], [61], [89, 28], [12], [84], [84], [43, 69], [90], [28], [53], [92, 94], [35], [97, 98], [96, 95], [35], [35], [12], [100, 86], [101, 6], [85, 86], [6]], "fname": "human_readable", "n_num": 102}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.08333333333333333, ["mov     eax, 400h"], ["mov~eax,0"]], [0, 0, 3, 0, 1, 6, 1, 2, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "lea     rdi, aPosixlyCorrect; \"POSIXLY_CORRECT\"", "call    _getenv", "test    rax, rax", "jz      short loc_121D8"], ["push~rbp", "mov~rbp,rsp", "lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [0, 1, 1, 0, 0, 2, 0, 1, 1, 1, 0.08333333333333333, ["mov     eax, 200h", "jmp     short loc_121DD"], ["mov~eax,<STR>", "jmp~FOO"]]], "func_feature": [1, 1, 3, 0, 4, 4, 2, 11, 0.04167, 1, 0], "succs": [[2], [0, 3], [], [2]], "fname": "default_block_size", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 18, 0, 1, 9, 0, 2, 0, 0, 0.14583333333333334, ["mov     rax, [rbp+spec]", "mov     ecx, 4; valsize", "lea     rdx, block_size_opts; vallist", "lea     rsi, block_size_args; arglist", "mov     rdi, rax; arg", "call    argmatch", "mov     [rbp+i], eax", "cmp     [rbp+i], 0", "js      short loc_122B8"], ["mov~rax,[rbp+0]", "mov~ecx,0", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "js~FOO"]], [1, 0, 20, 0, 0, 4, 0, 1, 1, 5, 0.09148550724637682, ["mov     rax, [rbp+spec]", "movzx   eax, byte ptr [rax]", "cmp     al, 27h ; '''", "jnz     short loc_12266"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [2, 0, 19, 1, 0, 2, 1, 0, 2, 5, 0.0, ["or      [rbp+opts], 4", "add     [rbp+spec], 1"], ["or~[rbp+0],0", "add~[rbp+0],0"]], [3, 0, 24, 1, 0, 12, 1, 1, 0, 6, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+spec], rdi", "mov     [rbp+block_size], rsi", "mov     [rbp+options], rdx", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     [rbp+opts], 0", "cmp     [rbp+spec], 0", "jnz     short loc_12252"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 1, 9, 1, 0, 6, 1, 1, 6, 6, 0.10446859903381642, ["or      [rbp+opts], 80h", "mov     rax, [rbp+ptr]", "sub     rax, 1", "movzx   eax, byte ptr [rax]", "cmp     al, 42h ; 'B'", "jnz     short loc_1231A"], ["or~[rbp+0],<STR>", "mov~rax,[rbp+0]", "sub~rax,0", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [0, 0, 15, 0, 0, 3, 0, 1, 5, 7, 0.12681159420289856, ["mov     rax, [rbp+ptr]", "cmp     [rbp+spec], rax", "jnz     short loc_1233E"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [1, 0, 8, 0, 0, 1, 1, 0, 7, 6, 0.0, ["or      [rbp+opts], 100h"], ["or~[rbp+0],0"]], [1, 0, 23, 0, 1, 5, 0, 2, 1, 5, 0.006340579710144928, ["lea     rdi, aBlockSize_0; \"BLOCK_SIZE\"", "call    _getenv", "mov     [rbp+spec], rax", "cmp     [rbp+spec], 0", "jnz     short loc_12252"], ["lea~rdi,<TAG>", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 22, 0, 1, 5, 0, 2, 2, 4, 0.01358695652173913, ["lea     rdi, aBlocksize; \"BLOCKSIZE\"", "call    _getenv", "mov     [rbp+spec], rax", "cmp     [rbp+spec], 0", "jnz     short loc_12252"], ["lea~rdi,<TAG>", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 7, 1, 0, 5, 0, 1, 7, 5, 0.08997584541062802, ["mov     rax, [rbp+ptr]", "sub     rax, 1", "movzx   eax, byte ptr [rax]", "cmp     al, 42h ; 'B'", "jnz     short loc_12338"], ["mov~rax,[rbp+0]", "sub~rax,0", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [1, 0, 4, 0, 0, 9, 1, 1, 3, 3, 0.016304347826086956, ["mov     eax, [rbp+i]", "cdqe", "lea     rdx, ds:0[rax*4]", "lea     rax, block_size_opts", "mov     eax, [rdx+rax]", "or      [rbp+opts], eax", "mov     rax, [rbp+block_size]", "mov     qword ptr [rax], 1", "jmp     loc_1235C"], ["mov~eax,[rbp+0]", "cdqe~", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "or~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~<TAG>,0", "jmp~FOO"]], [2, 0, 6, 1, 0, 5, 0, 1, 8, 4, 0.025966183574879224, ["mov     rax, [rbp+ptr]", "sub     rax, 2", "movzx   eax, byte ptr [rax]", "cmp     al, 69h ; 'i'", "jnz     short loc_1235B"], ["mov~rax,[rbp+0]", "sub~rax,0", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [0, 1, 5, 0, 0, 2, 1, 1, 8, 4, 0.025966183574879224, ["or      [rbp+opts], 20h", "jmp     short loc_1235B"], ["or~[rbp+0],<STR>", "jmp~FOO"]], [1, 0, 15, 1, 0, 1, 0, 0, 6, 6, 0.00966183574879227, ["add     [rbp+spec], 1"], ["add~[rbp+0],0"]], [1, 0, 15, 0, 0, 4, 0, 1, 4, 5, 0.15821256038647344, ["mov     rax, [rbp+spec]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jle     short loc_122F3"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jle~FOO"]], [2, 0, 16, 0, 1, 11, 0, 2, 3, 3, 0.1403985507246377, ["mov     rdx, [rbp+block_size]", "lea     rsi, [rbp+ptr]; ptr", "mov     rax, [rbp+spec]", "lea     r8, valid_suffixes; \"eEgGkKmMpPtTyYzZ0\"", "mov     rcx, rdx; val", "mov     edx, 0; strtol_base", "mov     rdi, rax; s", "call    xstrtoumax", "mov     [rbp+e], eax", "cmp     [rbp+e], 0", "jz      short loc_12343"], ["mov~rdx,[rbp+0]", "lea~rsi,[rbp+0]", "mov~rax,[rbp+0]", "lea~r8,<TAG>", "mov~rcx,rdx", "mov~edx,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 4, 0, 1, 5, 0, 2, 3, 3, 0.017210144927536232, ["call    default_block_size", "mov     rdx, rax", "mov     rax, [rbp+block_size]", "mov     [rax], rdx", "jmp     loc_1235C"], ["call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "jmp~FOO"]], [1, 0, 15, 0, 0, 4, 0, 1, 5, 4, 0.03683574879227053, ["mov     rax, [rbp+spec]", "movzx   eax, byte ptr [rax]", "cmp     al, 39h ; '9'", "jg      short loc_122F3"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jg~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 6, 3, 0.025966183574879224, ["jmp     short loc_1235C"], ["jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 9, 3, 0.041062801932367145, ["nop"], ["nop"]], [1, 0, 3, 0, 0, 4, 0, 0, 4, 2, 0.09329710144927536, ["mov     rax, [rbp+options]", "mov     edx, [rbp+opts]", "mov     [rax], edx", "mov     eax, 0"], ["mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~<TAG>,edx", "mov~eax,0"]], [1, 0, 3, 0, 0, 4, 0, 1, 4, 2, 0.015398550724637682, ["mov     rax, [rbp+options]", "mov     dword ptr [rax], 0", "mov     eax, [rbp+e]", "jmp     short loc_1236A"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~eax,[rbp+0]", "jmp~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 5, 1, 0.07971014492753624, ["mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_1237E"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 6, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [6, 7, 24, 1, 25, 36, 1, 109, 0.05058, 6, 6], "succs": [[10, 15], [0, 2], [0], [1, 7], [9, 6], [4, 13], [9], [8, 1], [16, 1], [11, 12], [20], [19, 12], [19], [14], [17, 5], [21, 14], [20], [18, 5], [20], [20], [22], [22], [24, 23], [], []], "fname": "humblock", "n_num": 25}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 2, 1, 1, 17, 1, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+spec], rdi", "mov     [rbp+opts], rsi", "mov     [rbp+block_size], rdx", "mov     rdx, [rbp+opts]; options", "mov     rcx, [rbp+block_size]", "mov     rax, [rbp+spec]", "mov     rsi, rcx; block_size", "mov     rdi, rax; spec", "call    humblock", "mov     [rbp+e], eax", "mov     rax, [rbp+block_size]", "mov     rax, [rax]", "test    rax, rax", "jnz     short loc_123D0"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [1, 0, 1, 0, 1, 5, 0, 1, 0, 1, 0.0, ["call    default_block_size", "mov     rdx, rax", "mov     rax, [rbp+block_size]", "mov     [rax], rdx", "mov     [rbp+e], 4"], ["call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~[rbp+0],0"]], [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     eax, [rbp+e]", "leave", "retn"], ["mov~eax,[rbp+0]", "leave", "retn"]]], "func_feature": [2, 1, 3, 0, 3, 3, 2, 25, 0.0, 0, 1], "succs": [[1, 2], [2], []], "fname": "human_options", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.035256410256410256, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 3, 0, 0, 4, 1, 1, 3, 2, 0.1923076923076923, ["mov     rax, [rbp+match]", "movzx   eax, byte ptr [rax+10h]", "test    al, al", "jz      short loc_124C1"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 2, 3, 0.2564102564102564, ["cmp     [rbp+match], 0", "jnz     loc_124AB"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 9, 0, 0, 3, 0, 1, 3, 4, 0.05769230769230769, ["mov     rax, [rbp+tail]", "mov     [rbp+match], rax", "jmp     short loc_1241D"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 1, 4, 0.14743589743589744, ["cmp     [rbp+tail], 0", "jnz     short loc_123F5"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 7, 0, 1, 6, 0, 2, 3, 5, 0.11538461538461538, ["mov     eax, [rbp+uid]", "mov     edi, eax; uid", "call    _getpwuid", "mov     [rbp+pwent], rax", "cmp     [rbp+pwent], 0", "jz      short loc_12446"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 5, 0, 0, 3, 0, 1, 4, 4, 0.035256410256410256, ["mov     rax, [rbp+pwent]", "mov     rax, [rax]", "jmp     short loc_1244D"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "jmp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 4, 4, 0.035256410256410256, ["lea     rax, unk_1F930"], ["lea~rax,<TAG>"]], [0, 0, 0, 0, 0, 2, 0, 0, 5, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 1, 0, 3, 0, 1, 4, 1, 0.035256410256410256, ["mov     rax, [rbp+match]", "add     rax, 10h", "jmp     short locret_124C6"], ["mov~rax,[rbp+0]", "add~rax,0", "jmp~FOO"]], [0, 0, 13, 0, 0, 4, 0, 1, 2, 5, 0.03205128205128205, ["mov     rax, [rbp+tail]", "mov     eax, [rax]", "cmp     [rbp+uid], eax", "jnz     short loc_1240A"], ["mov~rax,[rbp+0]", "mov~eax,<TAG>", "cmp~[rbp+0],eax", "jnz~FOO"]], [0, 0, 13, 0, 0, 3, 0, 0, 3, 5, 0.00641025641025641, ["mov     rax, [rbp+tail]", "mov     rax, [rax+8]", "mov     [rbp+tail], rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax"]], [2, 0, 13, 1, 0, 8, 0, 1, 0, 5, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+uid], edi", "mov     [rbp+match], 0", "mov     rax, cs:user_alist", "mov     [rbp+tail], rax", "jmp     short loc_12416"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [2, 0, 4, 1, 3, 23, 1, 3, 5, 3, 0.07692307692307693, ["mov     [rbp+name], rax", "mov     rax, [rbp+name]", "mov     rdi, rax; s", "call    _strlen", "add     rax, 18h", "and     rax, 0FFFFFFFFFFFFFFF8h", "mov     rdi, rax; n", "call    xmalloc", "mov     [rbp+match], rax", "mov     rax, [rbp+match]", "mov     edx, [rbp+uid]", "mov     [rax], edx", "mov     rax, [rbp+match]", "lea     rdx, [rax+10h]", "mov     rax, [rbp+name]", "mov     rsi, rax; src", "mov     rdi, rdx; dest", "call    _strcpy", "mov     rdx, cs:user_alist", "mov     rax, [rbp+match]", "mov     [rax+8], rdx", "mov     rax, [rbp+match]", "mov     cs:user_alist, rax"], ["mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "add~rax,0", "and~rax,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~<TAG>,edx", "mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,rdx", "call~FOO", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~<TAG>,rax"]]], "func_feature": [4, 2, 13, 0, 14, 18, 2, 65, 0.07326, 2, 3], "succs": [[8], [0, 9], [1, 5], [2], [2, 10], [6, 7], [13], [13], [], [8], [11, 3], [4], [4], [1]], "fname": "getuser", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 15, 0, 0, 3, 0, 0, 0, 0, 0.1, ["mov     rax, [rbp+tail]", "mov     rax, [rax+8]", "mov     [rbp+tail], rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax"]], [0, 0, 15, 0, 0, 6, 0, 1, 2, 3, 0.05238095238095239, ["mov     rax, [rbp+tail]", "movzx   edx, byte ptr [rax+10h]", "mov     rax, [rbp+user]", "movzx   eax, byte ptr [rax]", "cmp     dl, al", "jnz     short loc_12518"], ["mov~rax,[rbp+0]", "movzx~edx,[yte ptr [rax+0]", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~dl,al", "jnz~FOO"]], [0, 0, 15, 0, 1, 8, 1, 2, 3, 2, 0.0380952380952381, ["mov     rax, [rbp+tail]", "lea     rdx, [rax+10h]", "mov     rax, [rbp+user]", "mov     rsi, rax; s2", "mov     rdi, rdx; s1", "call    strcmp", "test    eax, eax", "jnz     short loc_12518"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,rdx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 3, 3, 0.27142857142857146, ["cmp     [rbp+tail], 0", "jnz     short loc_12538"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 9, 0, 0, 3, 0, 1, 2, 4, 0.1904761904761905, ["mov     rax, cs:nouser_alist", "mov     [rbp+tail], rax", "jmp     short loc_1257C"], ["mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 9, 0, 0, 3, 0, 0, 5, 4, 0.04285714285714286, ["mov     rax, [rbp+tail]", "mov     rax, [rax+8]", "mov     [rbp+tail], rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax"]], [0, 0, 9, 0, 1, 8, 1, 2, 5, 2, 0.04761904761904762, ["mov     rax, [rbp+tail]", "lea     rdx, [rax+10h]", "mov     rax, [rbp+user]", "mov     rsi, rax; s2", "mov     rdi, rdx; s1", "call    strcmp", "test    eax, eax", "jnz     short loc_12570"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,rdx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 9, 0, 0, 6, 0, 1, 4, 3, 0.10952380952380954, ["mov     rax, [rbp+tail]", "movzx   edx, byte ptr [rax+10h]", "mov     rax, [rbp+user]", "movzx   eax, byte ptr [rax]", "cmp     dl, al", "jnz     short loc_12570"], ["mov~rax,[rbp+0]", "movzx~edx,[yte ptr [rax+0]", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~dl,al", "jnz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 1, 4, 0.21904761904761907, ["cmp     [rbp+tail], 0", "jnz     short loc_124E1"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 1, 15, 1, 0, 7, 0, 1, 0, 5, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+user], rdi", "mov     rax, cs:user_alist", "mov     [rbp+tail], rax", "jmp     short loc_12524"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 6, 1, 0.009523809523809525, ["mov     eax, 0", "jmp     locret_1261D"], ["mov~eax,0", "jmp~FOO"]], [3, 0, 3, 1, 4, 20, 1, 5, 4, 2, 0.10952380952380954, ["mov     rax, [rbp+user]", "mov     rdi, rax; name", "call    _getpwnam", "mov     [rbp+pwent], rax", "mov     rax, [rbp+user]", "mov     rdi, rax; s", "call    _strlen", "add     rax, 18h", "and     rax, 0FFFFFFFFFFFFFFF8h", "mov     rdi, rax; n", "call    xmalloc", "mov     [rbp+tail], rax", "mov     rax, [rbp+tail]", "lea     rdx, [rax+10h]", "mov     rax, [rbp+user]", "mov     rsi, rax; src", "mov     rdi, rdx; dest", "call    _strcpy", "cmp     [rbp+pwent], 0", "jz      short loc_125FE"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "add~rax,0", "and~rax,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,rdx", "call~FOO", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 1, 0, 0, 6, 0, 0, 5, 1, 0.009523809523809525, ["mov     rdx, cs:nouser_alist", "mov     rax, [rbp+tail]", "mov     [rax+8], rdx", "mov     rax, [rbp+tail]", "mov     cs:nouser_alist, rax", "mov     eax, 0"], ["mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~<TAG>,rax", "mov~eax,0"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.02380952380952381, ["mov     rax, [rbp+tail]", "jmp     locret_1261D"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 1, 0, 0, 11, 0, 1, 5, 1, 0.009523809523809525, ["mov     rax, [rbp+pwent]", "mov     edx, [rax+10h]", "mov     rax, [rbp+tail]", "mov     [rax], edx", "mov     rdx, cs:user_alist", "mov     rax, [rbp+tail]", "mov     [rax+8], rdx", "mov     rax, [rbp+tail]", "mov     cs:user_alist, rax", "mov     rax, [rbp+tail]", "jmp     short locret_1261D"], ["mov~rax,[rbp+0]", "mov~edx,[rax+0]", "mov~rax,[rbp+0]", "mov~<TAG>,edx", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~<TAG>,rax", "mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 5, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [6, 3, 18, 0, 16, 22, 0, 91, 0.07708, 2, 2], "succs": [[8], [0, 2], [0, 13], [11, 7], [3], [3], [10, 5], [5, 6], [1, 4], [8], [15], [12, 14], [15], [15], [15], []], "fname": "getuidbyname", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 13, 0, 0, 2, 0, 1, 0, 0, 0.14743589743589744, ["cmp     [rbp+tail], 0", "jnz     short loc_1263F"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 13, 1, 0, 8, 0, 1, 0, 5, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+gid], edi", "mov     [rbp+match], 0", "mov     rax, cs:group_alist", "mov     [rbp+tail], rax", "jmp     short loc_12660"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 13, 0, 0, 3, 0, 0, 3, 5, 0.00641025641025641, ["mov     rax, [rbp+tail]", "mov     rax, [rax+8]", "mov     [rbp+tail], rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax"]], [0, 0, 13, 0, 0, 4, 0, 1, 2, 5, 0.03205128205128205, ["mov     rax, [rbp+tail]", "mov     eax, [rax]", "cmp     [rbp+gid], eax", "jnz     short loc_12654"], ["mov~rax,[rbp+0]", "mov~eax,<TAG>", "cmp~[rbp+0],eax", "jnz~FOO"]], [1, 0, 1, 1, 0, 3, 0, 1, 4, 1, 0.035256410256410256, ["mov     rax, [rbp+match]", "add     rax, 10h", "jmp     short locret_12710"], ["mov~rax,[rbp+0]", "add~rax,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 4, 1, 1, 3, 2, 0.1923076923076923, ["mov     rax, [rbp+match]", "movzx   eax, byte ptr [rax+10h]", "test    al, al", "jz      short loc_1270B"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 4, 1, 0.035256410256410256, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 8, 0, 0, 2, 0, 1, 2, 3, 0.2564102564102564, ["cmp     [rbp+match], 0", "jnz     loc_126F5"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 9, 0, 0, 3, 0, 1, 3, 4, 0.05769230769230769, ["mov     rax, [rbp+tail]", "mov     [rbp+match], rax", "jmp     short loc_12667"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 5, 0, 0, 3, 0, 1, 4, 4, 0.035256410256410256, ["mov     rax, [rbp+grent]", "mov     rax, [rax]", "jmp     short loc_12697"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "jmp~FOO"]], [1, 0, 7, 0, 1, 6, 0, 2, 3, 5, 0.11538461538461538, ["mov     eax, [rbp+gid]", "mov     edi, eax; gid", "call    _getgrgid", "mov     [rbp+grent], rax", "cmp     [rbp+grent], 0", "jz      short loc_12690"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 4, 4, 0.035256410256410256, ["lea     rax, unk_1F930"], ["lea~rax,<TAG>"]], [0, 0, 0, 0, 0, 2, 0, 0, 5, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [2, 0, 4, 1, 3, 23, 1, 3, 5, 3, 0.07692307692307693, ["mov     [rbp+name], rax", "mov     rax, [rbp+name]", "mov     rdi, rax; s", "call    _strlen", "add     rax, 18h", "and     rax, 0FFFFFFFFFFFFFFF8h", "mov     rdi, rax; n", "call    xmalloc", "mov     [rbp+match], rax", "mov     rax, [rbp+match]", "mov     edx, [rbp+gid]", "mov     [rax], edx", "mov     rax, [rbp+match]", "lea     rdx, [rax+10h]", "mov     rax, [rbp+name]", "mov     rsi, rax; src", "mov     rdi, rdx; dest", "call    _strcpy", "mov     rdx, cs:group_alist", "mov     rax, [rbp+match]", "mov     [rax+8], rdx", "mov     rax, [rbp+match]", "mov     cs:group_alist, rax"], ["mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "add~rax,0", "and~rax,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~<TAG>,edx", "mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,rdx", "call~FOO", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~<TAG>,rax"]]], "func_feature": [4, 2, 13, 0, 14, 18, 2, 65, 0.07326, 2, 3], "succs": [[3, 7], [0], [0], [8, 2], [12], [4, 6], [12], [10, 5], [7], [13], [9, 11], [13], [], [5]], "fname": "getgroup", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 9, 0, 0, 3, 0, 1, 0, 0, 0.1904761904761905, ["mov     rax, cs:nogroup_alist", "mov     [rbp+tail], rax", "jmp     short loc_127C6"], ["mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 1, 4, 0.21904761904761907, ["cmp     [rbp+tail], 0", "jnz     short loc_1272B"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 9, 0, 0, 3, 0, 0, 5, 4, 0.04285714285714286, ["mov     rax, [rbp+tail]", "mov     rax, [rax+8]", "mov     [rbp+tail], rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax"]], [0, 0, 9, 0, 0, 6, 0, 1, 4, 3, 0.10952380952380954, ["mov     rax, [rbp+tail]", "movzx   edx, byte ptr [rax+10h]", "mov     rax, [rbp+group]", "movzx   eax, byte ptr [rax]", "cmp     dl, al", "jnz     short loc_127BA"], ["mov~rax,[rbp+0]", "movzx~edx,[yte ptr [rax+0]", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~dl,al", "jnz~FOO"]], [0, 0, 9, 0, 1, 8, 1, 2, 5, 2, 0.04761904761904762, ["mov     rax, [rbp+tail]", "lea     rdx, [rax+10h]", "mov     rax, [rbp+group]", "mov     rsi, rax; s2", "mov     rdi, rdx; s1", "call    strcmp", "test    eax, eax", "jnz     short loc_127BA"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,rdx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 1, 0, 0, 11, 0, 1, 5, 1, 0.009523809523809525, ["mov     rax, [rbp+grent]", "mov     edx, [rax+10h]", "mov     rax, [rbp+tail]", "mov     [rax], edx", "mov     rdx, cs:group_alist", "mov     rax, [rbp+tail]", "mov     [rax+8], rdx", "mov     rax, [rbp+tail]", "mov     cs:group_alist, rax", "mov     rax, [rbp+tail]", "jmp     short locret_12867"], ["mov~rax,[rbp+0]", "mov~edx,[rax+0]", "mov~rax,[rbp+0]", "mov~<TAG>,edx", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~<TAG>,rax", "mov~rax,[rbp+0]", "jmp~FOO"]], [3, 0, 3, 1, 4, 20, 1, 5, 4, 2, 0.10952380952380954, ["mov     rax, [rbp+group]", "mov     rdi, rax; name", "call    _getgrnam", "mov     [rbp+grent], rax", "mov     rax, [rbp+group]", "mov     rdi, rax; s", "call    _strlen", "add     rax, 18h", "and     rax, 0FFFFFFFFFFFFFFF8h", "mov     rdi, rax; n", "call    xmalloc", "mov     [rbp+tail], rax", "mov     rax, [rbp+tail]", "lea     rdx, [rax+10h]", "mov     rax, [rbp+group]", "mov     rsi, rax; src", "mov     rdi, rdx; dest", "call    _strcpy", "cmp     [rbp+grent], 0", "jz      short loc_12848"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "add~rax,0", "and~rax,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,rdx", "call~FOO", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 5, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.02380952380952381, ["mov     rax, [rbp+tail]", "jmp     locret_12867"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 6, 1, 0.009523809523809525, ["mov     eax, 0", "jmp     locret_12867"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 6, 0, 0, 5, 1, 0.009523809523809525, ["mov     rdx, cs:nogroup_alist", "mov     rax, [rbp+tail]", "mov     [rax+8], rdx", "mov     rax, [rbp+tail]", "mov     cs:nogroup_alist, rax", "mov     eax, 0"], ["mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~<TAG>,rax", "mov~eax,0"]], [0, 1, 15, 1, 0, 7, 0, 1, 0, 5, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+group], rdi", "mov     rax, cs:group_alist", "mov     [rbp+tail], rax", "jmp     short loc_1276E"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 15, 0, 0, 3, 0, 0, 3, 5, 0.1, ["mov     rax, [rbp+tail]", "mov     rax, [rax+8]", "mov     [rbp+tail], rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax"]], [0, 0, 15, 0, 0, 6, 0, 1, 2, 3, 0.05238095238095239, ["mov     rax, [rbp+tail]", "movzx   edx, byte ptr [rax+10h]", "mov     rax, [rbp+group]", "movzx   eax, byte ptr [rax]", "cmp     dl, al", "jnz     short loc_12762"], ["mov~rax,[rbp+0]", "movzx~edx,[yte ptr [rax+0]", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~dl,al", "jnz~FOO"]], [0, 0, 15, 0, 1, 8, 1, 2, 3, 2, 0.0380952380952381, ["mov     rax, [rbp+tail]", "lea     rdx, [rax+10h]", "mov     rax, [rbp+group]", "mov     rsi, rax; s2", "mov     rdi, rdx; s1", "call    strcmp", "test    eax, eax", "jnz     short loc_12762"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,rdx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 3, 3, 0.27142857142857146, ["cmp     [rbp+tail], 0", "jnz     short loc_12782"], ["cmp~[rbp+0],0", "jnz~FOO"]]], "func_feature": [6, 3, 18, 0, 16, 22, 0, 91, 0.07708, 2, 2], "succs": [[15], [0, 13], [15], [2, 4], [9, 2], [7], [10, 5], [], [7], [7], [7], [1], [1], [12, 14], [8, 12], [3, 6]], "fname": "getgidbyname", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+p]", "pop     rbp", "retn"], ["mov~rax,[rbp+0]", "pop~rbp", "retn"]], [2, 0, 1, 1, 0, 4, 0, 1, 2, 0, 0.08333333333333333, ["sub     [rbp+p], 1", "mov     rax, [rbp+p]", "mov     byte ptr [rax], 2Dh ; '-'", "jmp     short loc_12995"], ["sub~[rbp+0],0", "mov~rax,[rbp+0]", "mov~<TAG>,0", "jmp~FOO"]], [10, 0, 2, 10, 0, 32, 0, 1, 1, 0, 0.08333333333333333, ["mov     rcx, [rbp+i]", "mov     rdx, 6666666666666667h", "mov     rax, rcx", "imul    rdx", "sar     rdx, 2", "mov     rax, rcx", "sar     rax, 3Fh", "sub     rdx, rax", "mov     rax, rdx", "shl     rax, 2", "add     rax, rdx", "add     rax, rax", "sub     rcx, rax", "mov     rdx, rcx", "mov     eax, edx", "add     eax, 30h ; '0'", "sub     [rbp+p], 1", "mov     edx, eax", "mov     rax, [rbp+p]", "mov     [rax], dl", "mov     rcx, [rbp+i]", "mov     rdx, 6666666666666667h", "mov     rax, rcx", "imul    rdx", "sar     rdx, 2", "mov     rax, rcx", "sar     rax, 3Fh", "sub     rdx, rax", "mov     rax, rdx", "mov     [rbp+i], rax", "cmp     [rbp+i], 0", "jnz     short loc_1291E"], ["mov~rcx,[rbp+0]", "mov~rdx,0", "mov~rax,rcx", "imul~,rdx", "sar~rdx,0", "mov~rax,rcx", "sar~rax,0", "sub~rdx,rax", "mov~rax,rdx", "shl~rax,0", "add~rax,rdx", "add~rax,rax", "sub~rcx,rax", "mov~rdx,rcx", "mov~eax,edx", "add~eax,0", "sub~[rbp+0],0", "mov~edx,eax", "mov~rax,[rbp+0]", "mov~<TAG>,dl", "mov~rcx,[rbp+0]", "mov~rdx,0", "mov~rax,rcx", "imul~,rdx", "sar~rdx,0", "mov~rax,rcx", "sar~rax,0", "sub~rdx,rax", "mov~rax,rdx", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [3, 0, 4, 1, 0, 11, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+i], rdi", "mov     [rbp+buf], rsi", "mov     rax, [rbp+buf]", "add     rax, 14h", "mov     [rbp+p], rax", "mov     rax, [rbp+p]", "mov     byte ptr [rax], 0", "cmp     [rbp+i], 0", "jns     loc_1291E"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "add~rax,0", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~<TAG>,0", "cmp~[rbp+0],0", "jns~FOO"]], [10, 0, 3, 10, 0, 34, 0, 1, 1, 0, 0.08333333333333333, ["mov     rcx, [rbp+i]", "mov     rdx, 6666666666666667h", "mov     rax, rcx", "imul    rdx", "sar     rdx, 2", "mov     rax, rcx", "sar     rax, 3Fh", "sub     rdx, rax", "mov     rax, rdx", "shl     rax, 2", "add     rax, rdx", "add     rax, rax", "sub     rcx, rax", "mov     rdx, rcx", "mov     eax, edx", "mov     edx, 30h ; '0'", "sub     edx, eax", "mov     eax, edx", "sub     [rbp+p], 1", "mov     edx, eax", "mov     rax, [rbp+p]", "mov     [rax], dl", "mov     rcx, [rbp+i]", "mov     rdx, 6666666666666667h", "mov     rax, rcx", "imul    rdx", "sar     rdx, 2", "mov     rax, rcx", "sar     rax, 3Fh", "sub     rdx, rax", "mov     rax, rdx", "mov     [rbp+i], rax", "cmp     [rbp+i], 0", "jnz     short loc_12893"], ["mov~rcx,[rbp+0]", "mov~rdx,0", "mov~rax,rcx", "imul~,rdx", "sar~rdx,0", "mov~rax,rcx", "sar~rax,0", "sub~rdx,rax", "mov~rax,rdx", "shl~rax,0", "add~rax,rdx", "add~rax,rax", "sub~rcx,rax", "mov~rdx,rcx", "mov~eax,edx", "mov~edx,0", "sub~edx,eax", "mov~eax,edx", "sub~[rbp+0],0", "mov~edx,eax", "mov~rax,[rbp+0]", "mov~<TAG>,dl", "mov~rcx,[rbp+0]", "mov~rdx,0", "mov~rax,rcx", "imul~,rdx", "sar~rdx,0", "mov~rax,rcx", "sar~rax,0", "sub~rdx,rax", "mov~rax,rdx", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]]], "func_feature": [0, 0, 3, 0, 5, 7, 1, 84, 0.05, 0, 22], "succs": [[], [0], [0, 2], [2, 4], [1, 4]], "fname": "imaxtostr", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[8, 0, 2, 8, 0, 25, 0, 1, 0, 0, 0.5, ["mov     rcx, [rbp+i]", "mov     rdx, 0CCCCCCCCCCCCCCCDh", "mov     rax, rcx", "mul     rdx", "shr     rdx, 3", "mov     rax, rdx", "shl     rax, 2", "add     rax, rdx", "add     rax, rax", "sub     rcx, rax", "mov     rdx, rcx", "mov     eax, edx", "add     eax, 30h ; '0'", "sub     [rbp+p], 1", "mov     edx, eax", "mov     rax, [rbp+p]", "mov     [rax], dl", "mov     rax, [rbp+i]", "mov     rdx, 0CCCCCCCCCCCCCCCDh", "mul     rdx", "mov     rax, rdx", "shr     rax, 3", "mov     [rbp+i], rax", "cmp     [rbp+i], 0", "jnz     short loc_129BA"], ["mov~rcx,[rbp+0]", "mov~rdx,0", "mov~rax,rcx", "mul~,rdx", "shr~rdx,0", "mov~rax,rdx", "shl~rax,0", "add~rax,rdx", "add~rax,rax", "sub~rcx,rax", "mov~rdx,rcx", "mov~eax,edx", "add~eax,0", "sub~[rbp+0],0", "mov~edx,eax", "mov~rax,[rbp+0]", "mov~<TAG>,dl", "mov~rax,[rbp+0]", "mov~rdx,0", "mul~,rdx", "mov~rax,rdx", "shr~rax,0", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 2, 1, 0, 9, 0, 0, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+i], rdi", "mov     [rbp+buf], rsi", "mov     rax, [rbp+buf]", "add     rax, 14h", "mov     [rbp+p], rax", "mov     rax, [rbp+p]", "mov     byte ptr [rax], 0"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "add~rax,0", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~<TAG>,0"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["mov     rax, [rbp+p]", "pop     rbp", "retn"], ["mov~rax,[rbp+0]", "pop~rbp", "retn"]]], "func_feature": [0, 0, 1, 0, 3, 3, 9, 37, 0.16667, 0, 9], "succs": [[0, 2], [0], []], "fname": "umaxtostr", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 5, 0, 0, 4, 1, 1, 0, 0, 0.5, ["mov     rax, [rbp+wc]", "mov     eax, [rax]", "test    eax, eax", "jnz     short loc_12A3A"], ["mov~rax,[rbp+0]", "mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [1, 1, 5, 1, 0, 8, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+wchars], rdi", "mov     [rbp+replaced], 0", "mov     rax, [rbp+wchars]", "mov     [rbp+wc], rax", "jmp     short loc_12A5E"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 5, 1, 0, 1, 0, 0, 3, 2, 0.25, ["add     [rbp+wc], 4"], ["add~[rbp+0],0"]], [0, 0, 5, 0, 1, 6, 1, 2, 2, 3, 0.25, ["mov     rax, [rbp+wc]", "mov     eax, [rax]", "mov     edi, eax; wc", "call    _iswprint", "test    eax, eax", "jnz     short loc_12A59"], ["mov~rax,[rbp+0]", "mov~eax,<TAG>", "mov~edi,eax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["movzx   eax, [rbp+replaced]", "leave", "retn"], ["movzx~eax,[rbp+0]", "leave", "retn"]], [1, 1, 5, 0, 0, 3, 0, 0, 3, 3, 0.0, ["mov     rax, [rbp+wc]", "mov     dword ptr [rax], 0FFFDh", "mov     [rbp+replaced], 1"], ["mov~rax,[rbp+0]", "mov~<TAG>,<STR>", "mov~[rbp+0],0"]]], "func_feature": [1, 2, 4, 0, 6, 7, 1, 25, 0.16667, 0, 2], "succs": [[3, 4], [0], [0], [2, 5], [], [2]], "fname": "wc_ensure_printable", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.05357142857142857, ["jmp     short loc_12AE4"], ["jmp~FOO"]], [0, 0, 8, 0, 0, 4, 1, 1, 1, 2, 0.33928571428571425, ["mov     rax, [rbp+wc]", "mov     eax, [rax]", "test    eax, eax", "jnz     short loc_12A8F"], ["mov~rax,[rbp+0]", "mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [1, 0, 8, 0, 1, 7, 0, 2, 2, 3, 0.21428571428571427, ["mov     rax, [rbp+wc]", "mov     eax, [rax]", "mov     edi, eax; c", "call    _wcwidth", "mov     [rbp+next_cells], eax", "cmp     [rbp+next_cells], 0FFFFFFFFh", "jnz     short loc_12AB6"], ["mov~rax,[rbp+0]", "mov~eax,<TAG>", "mov~edi,eax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 8, 1, 0, 6, 0, 0, 3, 2, 0.2857142857142857, ["mov     eax, [rbp+next_cells]", "movsxd  rdx, eax", "mov     rax, [rbp+cells]", "add     rax, rdx", "cmp     [rbp+width], rax", "jb      short loc_12AE3"], ["mov~eax,[rbp+0]", "movsxd~rdx,eax", "mov~rax,[rbp+0]", "add~rax,rdx", "cmp~[rbp+0],rax", "jb~FOO"]], [1, 1, 8, 0, 0, 3, 0, 0, 3, 3, 0.0, ["mov     rax, [rbp+wc]", "mov     dword ptr [rax], 0FFFDh", "mov     [rbp+next_cells], 1"], ["mov~rax,[rbp+0]", "mov~<TAG>,<STR>", "mov~[rbp+0],0"]], [2, 1, 8, 1, 0, 8, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+wc], rdi", "mov     [rbp+width], rsi", "mov     [rbp+cells], 0", "mov     [rbp+next_cells], 0", "jmp     short loc_12AD7"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 8, 2, 0, 4, 0, 0, 4, 3, 0.1607142857142857, ["mov     eax, [rbp+next_cells]", "cdqe", "add     [rbp+cells], rax", "add     [rbp+wc], 4"], ["mov~eax,[rbp+0]", "cdqe~", "add~[rbp+0],rax", "add~[rbp+0],0"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, 1, 0.05357142857142857, ["nop"], ["nop"]], [1, 0, 0, 0, 0, 5, 0, 0, 3, 0, 0.0, ["mov     rax, [rbp+wc]", "mov     dword ptr [rax], 0", "mov     rax, [rbp+cells]", "leave", "retn"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~rax,[rbp+0]", "leave", "retn"]]], "func_feature": [1, 1, 5, 0, 9, 11, 1, 39, 0.12302, 0, 4], "succs": [[8], [0, 2], [3, 4], [6, 7], [3], [1], [1], [8], []], "fname": "wc_truncate", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 4, 0, 0, 5, 1, 1, 0, 0, 0.41666666666666663, ["mov     rax, [rbp+n_spaces]", "lea     rdx, [rax-1]", "mov     [rbp+n_spaces], rdx", "test    rax, rax", "jz      short loc_12B30"], ["mov~rax,[rbp+0]", "lea~rdx,[rax-1]+0]", "mov~[rbp+0],rdx", "test~rax,rax", "jz~FOO"]], [0, 0, 4, 0, 0, 6, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+dest], rdi", "mov     [rbp+dest_end], rsi", "mov     [rbp+n_spaces], rdx", "jmp     short loc_12B15"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "jmp~FOO"]], [0, 1, 4, 0, 0, 4, 0, 0, 3, 2, 0.08333333333333333, ["mov     rax, [rbp+dest]", "lea     rdx, [rax+1]", "mov     [rbp+dest], rdx", "mov     byte ptr [rax], 20h ; ' '"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~<TAG>,<STR>"]], [0, 0, 4, 0, 0, 3, 0, 0, 2, 1, 0.16666666666666666, ["mov     rax, [rbp+dest]", "cmp     rax, [rbp+dest_end]", "jb      short loc_12B06"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jb~FOO"]], [1, 0, 0, 0, 0, 5, 0, 0, 2, 0, 0.0, ["mov     rax, [rbp+dest]", "mov     byte ptr [rax], 0", "mov     rax, [rbp+dest]", "pop     rbp", "retn"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~rax,[rbp+0]", "pop~rbp", "retn"]]], "func_feature": [0, 1, 2, 0, 5, 6, 2, 23, 0.13333, 0, 0], "succs": [[3, 4], [0], [0], [2, 4], []], "fname": "mbs_align_pad", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[3, 0, 38, 0, 1, 8, 0, 2, 0, 0, 0.01282051282051282, ["mov     rax, [rbp+src]", "mov     edx, 0; n", "mov     rsi, rax; s", "mov     edi, 0; pwcs", "call    _mbstowcs", "mov     [rbp+src_chars], rax", "cmp     [rbp+src_chars], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_12C1B"], ["mov~rax,[rbp+0]", "mov~edx,0", "mov~rsi,rax", "mov~edi,0", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 39, 0, 1, 3, 0, 1, 1, 4, 0.007051282051282051, ["call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "jbe     loc_12CB2"], ["call~FOO", "cmp~rax,0", "jbe~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 5, 1, 0.001282051282051282, ["nop", "jmp     short mbsalign_cleanup"], ["nop", "jmp~FOO"]], [1, 0, 20, 0, 0, 4, 2, 1, 4, 2, 0.016666666666666666, ["mov     eax, [rbp+flags]", "and     eax, 1", "test    eax, eax", "jz      loc_12EEA"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 16, 0, 0, 5, 0, 0, 4, 8, 0.0, ["mov     rax, [rbp+width]", "mov     rax, [rax]", "mov     [rbp+n_cols], rax", "mov     rax, [rbp+n_cols]", "mov     [rbp+n_used_bytes], rax"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [0, 0, 17, 0, 0, 4, 0, 0, 3, 8, 0.20833333333333334, ["mov     rax, [rbp+width]", "mov     rax, [rax]", "cmp     [rbp+n_cols], rax", "jbe     short loc_12D8D"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "cmp~[rbp+0],rax", "jbe~FOO"]], [0, 0, 0, 0, 2, 9, 0, 2, 5, 0, 0.0, ["mov     rax, [rbp+str_wc]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+newstr]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+ret]", "leave", "retn"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "leave", "retn"]], [0, 0, 1, 2, 0, 7, 0, 1, 10, 1, 0.013461538461538462, ["mov     rdx, [rbp+start_spaces]", "mov     rax, [rbp+end_spaces]", "add     rdx, rax", "mov     rax, [rbp+n_used_bytes]", "add     rax, rdx", "mov     [rbp+ret], rax", "jmp     short mbsalign_cleanup"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.002564102564102564, ["nop", "jmp     short mbsalign_cleanup"], ["nop", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 6, 1, 0.0057692307692307696, ["nop"], ["nop"]], [1, 0, 22, 0, 1, 6, 0, 2, 4, 3, 0.05448717948717949, ["mov     rax, [rbp+src_size]", "mov     rdi, rax; size", "call    malloc", "mov     [rbp+newstr], rax", "cmp     [rbp+newstr], 0", "jnz     short loc_12D24"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 24, 0, 0, 2, 0, 1, 3, 4, 0.03782051282051282, ["cmp     [rbp+conversion], 0", "jz      short loc_12CFA"], ["cmp~[rbp+0],0", "jz~FOO"]], [3, 0, 23, 1, 1, 7, 0, 1, 4, 4, 0.0, ["mov     rax, [rbp+str_wc]", "mov     edx, 0; n", "mov     rsi, rax; pwcs", "mov     edi, 0; s", "call    _wcstombs", "add     rax, 1", "mov     [rbp+src_size], rax"], ["mov~rax,[rbp+0]", "mov~edx,0", "mov~rsi,rax", "mov~edi,0", "call~FOO", "add~rax,0", "mov~[rbp+0],rax"]], [1, 0, 20, 0, 0, 4, 2, 1, 3, 2, 0.016666666666666666, ["mov     eax, [rbp+flags]", "and     eax, 1", "test    eax, eax", "jz      loc_12EE7"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [3, 0, 8, 1, 0, 11, 1, 0, 8, 5, 0.005128205128205128, ["mov     rax, [rbp+n_spaces]", "shr     rax, 1", "mov     rdx, rax", "mov     rax, [rbp+n_spaces]", "and     eax, 1", "add     rax, rdx", "mov     [rbp+start_spaces], rax", "mov     rax, [rbp+n_spaces]", "shr     rax, 1", "mov     [rbp+end_spaces], rax", "nop"], ["mov~rax,[rbp+0]", "shr~rax,0", "mov~rdx,rax", "mov~rax,[rbp+0]", "and~eax,0", "add~rax,rdx", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "shr~rax,0", "mov~[rbp+0],rax", "nop"]], [0, 0, 9, 0, 0, 1, 0, 1, 7, 6, 0.016666666666666666, ["jmp     short loc_12DF2"], ["jmp~FOO"]], [0, 0, 18, 0, 0, 1, 0, 1, 4, 9, 0.021794871794871794, ["jmp     mbsalign_unibyte"], ["jmp~FOO"]], [0, 0, 15, 0, 0, 4, 0, 0, 4, 7, 0.20192307692307693, ["mov     rax, [rbp+width]", "mov     rax, [rax]", "cmp     [rbp+n_cols], rax", "jnb     short loc_12DAF"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "cmp~[rbp+0],rax", "jnb~FOO"]], [1, 0, 20, 0, 0, 4, 2, 1, 5, 2, 0.020512820512820513, ["mov     eax, [rbp+flags]", "and     eax, 1", "test    eax, eax", "jz      loc_12EED"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 7, 0, 0, 4, 2, 1, 7, 4, 0.125, ["mov     eax, [rbp+flags]", "and     eax, 4", "test    eax, eax", "jz      short loc_12E2B"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 8, 0, 0, 4, 0, 1, 6, 5, 0.11858974358974358, ["mov     [rbp+start_spaces], 0", "mov     rax, [rbp+n_spaces]", "mov     [rbp+end_spaces], rax", "jmp     short loc_12E16"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 8, 0, 0, 4, 0, 1, 7, 5, 0.005128205128205128, ["mov     rax, [rbp+n_spaces]", "mov     [rbp+start_spaces], rax", "mov     [rbp+end_spaces], 0", "jmp     short loc_12E16"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 18, 0, 0, 1, 0, 1, 6, 9, 0.010897435897435897, ["jmp     short mbsalign_unibyte"], ["jmp~FOO"]], [1, 0, 6, 0, 0, 1, 0, 0, 8, 4, 0.0, ["mov     [rbp+start_spaces], 0"], ["mov~[rbp+0],0"]], [0, 0, 14, 1, 0, 4, 0, 0, 5, 7, 0.0, ["mov     rax, [rbp+width]", "mov     rax, [rax]", "sub     rax, [rbp+n_cols]", "mov     [rbp+n_spaces], rax"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "sub~rax,[rbp+0]", "mov~[rbp+0],rax"]], [3, 0, 29, 2, 2, 18, 0, 2, 5, 7, 0.0, ["mov     rax, [rbp+src_chars]", "shl     rax, 2", "lea     rdx, [rax-4]", "mov     rax, [rbp+str_wc]", "add     rax, rdx", "mov     dword ptr [rax], 0", "mov     [rbp+wc_enabled], 1", "mov     rax, [rbp+str_wc]", "mov     rdi, rax; wchars", "call    wc_ensure_printable", "mov     [rbp+conversion], al", "mov     rdx, [rbp+src_chars]", "mov     rax, [rbp+str_wc]", "mov     rsi, rdx; n", "mov     rdi, rax; s", "call    _wcswidth", "cdqe", "mov     [rbp+n_cols], rax"], ["mov~rax,[rbp+0]", "shl~rax,0", "lea~rdx,[rax-4]+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "cdqe~", "mov~[rbp+0],rax"]], [0, 0, 30, 0, 1, 8, 1, 2, 4, 7, 0.016666666666666666, ["mov     rdx, [rbp+src_chars]; n", "mov     rcx, [rbp+src]", "mov     rax, [rbp+str_wc]", "mov     rsi, rcx; s", "mov     rdi, rax; pwcs", "call    _mbstowcs", "test    rax, rax", "jz      short loc_12CB2"], ["mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 13, 0, 0, 6, 1, 1, 5, 6, 0.19038461538461537, ["mov     rax, [rbp+width]", "mov     rdx, [rbp+n_cols]", "mov     [rax], rdx", "mov     eax, [rbp+align]", "test    eax, eax", "jz      short loc_12DCE"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~eax,[rbp+0]", "test~eax,eax", "jz~FOO"]], [1, 0, 28, 0, 0, 2, 0, 1, 1, 6, 0.08333333333333333, ["cmp     [rbp+wc_enabled], 0", "jz      loc_12D66"], ["cmp~[rbp+0],0", "jz~FOO"]], [10, 0, 40, 3, 1, 31, 2, 2, 0, 5, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 0A0h", "mov     [rbp+src], rdi", "mov     [rbp+dest], rsi", "mov     [rbp+dest_size], rdx", "mov     [rbp+width], rcx", "mov     [rbp+align], r8d", "mov     [rbp+flags], r9d", "mov     [rbp+ret], 0FFFFFFFFFFFFFFFFh", "mov     rax, [rbp+src]", "mov     rdi, rax; s", "call    _strlen", "add     rax, 1", "mov     [rbp+src_size], rax", "mov     [rbp+newstr], 0", "mov     [rbp+str_wc], 0", "mov     rax, [rbp+src]", "mov     [rbp+str_to_print], rax", "mov     rax, [rbp+src_size]", "sub     rax, 1", "mov     [rbp+n_cols], rax", "mov     rax, [rbp+n_cols]", "mov     [rbp+n_used_bytes], rax", "mov     [rbp+n_spaces], 0", "mov     [rbp+conversion], 0", "mov     [rbp+wc_enabled], 0", "mov     eax, [rbp+flags]", "and     eax, 2", "test    eax, eax", "jnz     loc_12CB2"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8d", "mov~[rbp+0],r9d", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "add~rax,0", "mov~[rbp+0],rax", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "sub~rax,0", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 9, 3, 0.0, ["mov     [rbp+end_spaces], 0"], ["mov~[rbp+0],0"]], [1, 0, 5, 0, 0, 4, 2, 1, 8, 3, 0.09294871794871795, ["mov     eax, [rbp+flags]", "and     eax, 8", "test    eax, eax", "jz      short loc_12E40"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [3, 0, 34, 2, 1, 8, 0, 2, 3, 3, 0.016666666666666666, ["add     [rbp+src_chars], 1", "mov     rax, [rbp+src_chars]", "shl     rax, 2", "mov     rdi, rax; size", "call    malloc", "mov     [rbp+str_wc], rax", "cmp     [rbp+str_wc], 0", "jnz     short loc_12C51"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "shl~rax,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 2, 2, 3, 33, 0, 3, 10, 2, 0.0, ["mov     rax, [rbp+dest_size]", "lea     rdx, [rax-1]", "mov     rax, [rbp+dest]", "add     rax, rdx", "mov     [rbp+dest_end], rax", "mov     rdx, [rbp+start_spaces]; n_spaces", "mov     rcx, [rbp+dest_end]", "mov     rax, [rbp+dest]", "mov     rsi, rcx; dest_end", "mov     rdi, rax; dest", "call    mbs_align_pad", "mov     [rbp+dest], rax", "mov     rdx, [rbp+dest_end]", "mov     rax, [rbp+dest]", "sub     rdx, rax", "mov     rax, rdx", "mov     [rbp+space_left], rax", "mov     rax, [rbp+n_used_bytes]", "cmp     [rbp+space_left], rax", "cmovbe  rax, [rbp+space_left]", "mov     rdx, rax; n", "mov     rcx, [rbp+str_to_print]", "mov     rax, [rbp+dest]", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    _mempcpy", "mov     [rbp+dest], rax", "mov     rdx, [rbp+end_spaces]; n_spaces", "mov     rcx, [rbp+dest_end]", "mov     rax, [rbp+dest]", "mov     rsi, rcx; dest_end", "mov     rdi, rax; dest", "call    mbs_align_pad"], ["mov~rax,[rbp+0]", "lea~rdx,[rax-1]+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "cmovbe~rax,[rbp+0]", "mov~rdx,rax", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 9, 2, 0.05576923076923077, ["cmp     [rbp+dest_size], 0", "jz      loc_12ECF"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 27, 0, 0, 2, 0, 1, 2, 5, 0.03782051282051282, ["cmp     [rbp+conversion], 0", "jnz     short loc_12CD6"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 6, 6, 0.04807692307692308, ["cmp     eax, 1", "jz      short loc_12DE0"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 18, 0, 0, 1, 0, 1, 5, 9, 0.021794871794871794, ["jmp     mbsalign_unibyte"], ["jmp~FOO"]], [0, 0, 26, 0, 0, 4, 0, 0, 3, 5, 0.011538461538461539, ["mov     rax, [rbp+width]", "mov     rax, [rax]", "cmp     [rbp+n_cols], rax", "jbe     loc_12D66"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "cmp~[rbp+0],rax", "jbe~FOO"]], [0, 0, 18, 0, 2, 17, 0, 3, 5, 9, 0.032692307692307694, ["mov     rax, [rbp+newstr]", "mov     [rbp+str_to_print], rax", "mov     rax, [rbp+width]", "mov     rdx, [rax]", "mov     rax, [rbp+str_wc]", "mov     rsi, rdx; width", "mov     rdi, rax; wc", "call    wc_truncate", "mov     [rbp+n_cols], rax", "mov     rdx, [rbp+src_size]; n", "mov     rcx, [rbp+str_wc]", "mov     rax, [rbp+newstr]", "mov     rsi, rcx; pwcs", "mov     rdi, rax; s", "call    _wcstombs", "mov     [rbp+n_used_bytes], rax", "jmp     short mbsalign_unibyte"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 18, 0, 0, 1, 0, 0, 2, 9, 0.07628205128205129, ["nop"], ["nop"]]], "func_feature": [16, 15, 42, 0, 41, 60, 2, 243, 0.0387, 0, 14], "succs": [[32, 13], [0, 28], [6], [2, 37], [17], [17, 4], [], [6], [6], [6], [18, 39], [10, 12], [10], [16, 8], [19], [14], [5], [24, 27], [9, 22], [31, 23], [19], [19], [5], [31], [27], [28], [25, 28], [36, 20], [40, 35], [1, 28], [34], [34, 30], [26, 3], [7], [33, 7], [11, 38], [21, 15], [5], [40, 11], [5], [5]], "fname": "mbsalign", "n_num": 41}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 1, 0, 1, 5, 0, 2, 0, 0, 0.016666666666666666, ["mov     rax, [rbp+buf]", "mov     rdi, rax; ptr", "call    free", "mov     [rbp+buf], 0", "jmp     short loc_12FF4"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 6, 0, 1, 18, 0, 2, 3, 2, 0.13333333333333333, ["mov     rax, [rbp+nbuf]", "mov     [rbp+buf], rax", "mov     rax, [rbp+width]", "mov     rdx, [rbp+orig_width]", "mov     [rax], rdx", "mov     r8d, [rbp+flags]", "mov     edi, [rbp+align]", "mov     rcx, [rbp+width]; width", "mov     rdx, [rbp+size]; dest_size", "mov     rsi, [rbp+buf]; dest", "mov     rax, [rbp+src]", "mov     r9d, r8d; flags", "mov     r8d, edi; align", "mov     rdi, rax; src", "call    mbsalign", "mov     [rbp+req], rax", "cmp     [rbp+req], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_12FE6"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~r8d,[rbp+0]", "mov~edi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~r9d,r8d", "mov~r8d,edi", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 1, 6, 1, 0, 17, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+src], rdi", "mov     [rbp+width], rsi", "mov     [rbp+align], edx", "mov     [rbp+flags], ecx", "mov     rax, [rbp+width]", "mov     rax, [rax]", "mov     [rbp+orig_width], rax", "mov     rax, [rbp+width]", "mov     rax, [rax]", "mov     [rbp+size], rax", "mov     rax, [rbp+size]", "mov     [rbp+req], rax", "mov     [rbp+buf], 0", "jmp     loc_12FE6"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],edx", "mov~[rbp+0],ecx", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 1, 0, 1, 5, 0, 2, 3, 1, 0.03333333333333333, ["mov     rax, [rbp+buf]", "mov     rdi, rax; ptr", "call    free", "mov     [rbp+buf], 0", "jmp     short loc_12FF4"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 6, 1, 1, 11, 0, 2, 2, 2, 0.23333333333333334, ["mov     rax, [rbp+req]", "add     rax, 1", "mov     [rbp+size], rax", "mov     rdx, [rbp+size]", "mov     rax, [rbp+buf]", "mov     rsi, rdx; size", "mov     rdi, rax; ptr", "call    _realloc", "mov     [rbp+nbuf], rax", "cmp     [rbp+nbuf], 0", "jnz     short loc_12F8D"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 0, 1, 1, 0.25, ["mov     rax, [rbp+req]", "cmp     rax, [rbp+size]", "jnb     loc_12F4D"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["mov     rax, [rbp+buf]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]]], "func_feature": [4, 0, 9, 0, 7, 9, 0, 62, 0.09524, 0, 2], "succs": [[6], [0, 5], [5], [6], [1, 3], [4, 6], []], "fname": "ambsalign", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 2, 16, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+string], rdi", "mov     [rbp+flags], esi", "mov     rax, [rbp+string]", "mov     rdi, rax; s", "call    _strlen", "mov     rcx, rax", "mov     edx, [rbp+flags]; flags", "mov     rax, [rbp+string]", "mov     rsi, rcx; nbytes", "mov     rdi, rax; string", "call    mbsnwidth", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rcx,rax", "mov~edx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 6, 16, 0.0, 0, 1], "succs": [[]], "fname": "gnu_mbswidth", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 16, 0, 0, 3, 0, 0, 0, 0, 0.030612244897959186, ["mov     rax, [rbp+p]", "cmp     rax, [rbp+plimit]", "jb      loc_131FB"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jb~FOO"]], [3, 0, 50, 2, 1, 19, 1, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 60h", "mov     [rbp+string], rdi", "mov     [rbp+nbytes], rsi", "mov     [rbp+flags], edx", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     rax, [rbp+string]", "mov     [rbp+p], rax", "mov     rdx, [rbp+p]", "mov     rax, [rbp+nbytes]", "add     rax, rdx", "mov     [rbp+plimit], rax", "mov     [rbp+width], 0", "call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "jbe     loc_1327C"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],edx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax", "mov~[rbp+0],0", "call~FOO", "cmp~rax,0", "jbe~FOO"]], [1, 0, 16, 1, 0, 2, 0, 1, 4, 4, 0.004081632653061225, ["add     [rbp+width], 1", "jmp     short loc_1327C"], ["add~[rbp+0],0", "jmp~FOO"]], [1, 0, 16, 2, 1, 10, 2, 2, 4, 4, 0.011428571428571429, ["call    ___ctype_b_loc", "mov     rax, [rax]", "movzx   edx, [rbp+c]", "add     rdx, rdx", "add     rax, rdx", "movzx   eax, word ptr [rax]", "movzx   eax, ax", "and     eax, 2", "test    eax, eax", "jnz     short loc_1327C"], ["call~FOO", "mov~rax,<TAG>", "movzx~edx,[rbp+0]", "add~rdx,rdx", "add~rax,rdx", "movzx~eax,<TAG>", "movzx~eax,ax", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [1, 0, 16, 1, 0, 2, 0, 1, 6, 4, 0.0036734693877551023, ["add     [rbp+width], 1", "jmp     short loc_1327C"], ["add~[rbp+0],0", "jmp~FOO"]], [1, 0, 37, 1, 0, 4, 0, 1, 10, 4, 0.05040816326530612, ["mov     eax, 7FFFFFFFh", "sub     eax, [rbp+width]", "cmp     [rbp+w], eax", "jg      loc_1328F"], ["mov~eax,0", "sub~eax,[rbp+0]", "cmp~[rbp+0],eax", "jg~FOO"]], [1, 0, 37, 0, 1, 6, 0, 2, 9, 4, 0.13428571428571429, ["mov     eax, [rbp+wc]", "mov     edi, eax; c", "call    _wcwidth", "mov     [rbp+w], eax", "cmp     [rbp+w], 0", "js      short loc_13193"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "js~FOO"]], [1, 0, 37, 1, 1, 15, 0, 2, 6, 4, 0.21448979591836737, ["mov     rdx, [rbp+plimit]", "mov     rax, [rbp+p]", "sub     rdx, rax", "mov     rax, rdx", "mov     rdi, rax", "lea     rdx, [rbp+mbstate]", "mov     rsi, [rbp+p]; s", "lea     rax, [rbp+wc]", "mov     rcx, rdx; ps", "mov     rdx, rdi; n", "mov     rdi, rax; pwc", "call    rpl_mbrtowc", "mov     [rbp+bytes], rax", "cmp     [rbp+bytes], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_1312C"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "mov~rdi,rax", "lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "lea~rax,[rbp+0]", "mov~rcx,rdx", "mov~rdx,rdi", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 37, 1, 1, 7, 1, 2, 12, 5, 0.10163265306122449, ["mov     rax, [rbp+bytes]", "add     [rbp+p], rax", "lea     rax, [rbp+mbstate]", "mov     rdi, rax; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_130D4"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 37, 0, 1, 5, 0, 1, 5, 5, 0.1457142857142857, ["lea     rax, [rbp+mbstate]", "mov     edx, 8; n", "mov     esi, 0; c", "mov     rdi, rax; s", "call    _memset"], ["lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,0", "mov~rdi,rax", "call~FOO"]], [1, 0, 37, 0, 0, 5, 0, 1, 3, 6, 0.16938775510204082, ["mov     rax, [rbp+p]", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "cmp     eax, 3Fh ; '?'", "jg      short loc_1309E"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "movsx~eax,al", "cmp~eax,0", "jg~FOO"]], [0, 0, 37, 0, 0, 3, 0, 0, 2, 3, 0.19448979591836735, ["mov     rax, [rbp+p]", "cmp     rax, [rbp+plimit]", "jb      loc_13080"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jb~FOO"]], [0, 0, 37, 0, 0, 1, 0, 1, 1, 4, 0.013469387755102041, ["jmp     loc_131E5"], ["jmp~FOO"]], [2, 0, 37, 2, 0, 3, 0, 1, 5, 4, 0.035102040816326535, ["add     [rbp+p], 1", "add     [rbp+width], 1", "jmp     loc_131E5"], ["add~[rbp+0],0", "add~[rbp+0],0", "jmp~FOO"]], [0, 0, 37, 0, 0, 1, 0, 0, 9, 4, 0.11285714285714286, ["nop"], ["nop"]], [0, 0, 4, 0, 0, 2, 0, 1, 11, 3, 0.011428571428571429, ["nop", "jmp     short overflow"], ["nop", "jmp~FOO"]], [0, 0, 37, 1, 0, 3, 0, 1, 11, 6, 0.030408163265306123, ["mov     eax, [rbp+w]", "add     [rbp+width], eax", "jmp     short loc_131C8"], ["mov~eax,[rbp+0]", "add~[rbp+0],eax", "jmp~FOO"]], [1, 0, 37, 0, 0, 4, 2, 1, 7, 3, 0.04183673469387755, ["mov     eax, [rbp+flags]", "and     eax, 1", "test    eax, eax", "jnz     short loc_13122"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 13, 3, 0.0036734693877551023, ["nop", "jmp     short overflow"], ["nop", "jmp~FOO"]], [1, 0, 37, 0, 0, 2, 0, 1, 12, 4, 0.02448979591836735, ["cmp     [rbp+width], 7FFFFFFFh", "jz      loc_13292"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 4, 3, 0.0036734693877551023, ["nop", "jmp     short overflow"], ["nop", "jmp~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 3, 4, 0.008571428571428572, ["cmp     [rbp+width], 7FFFFFFFh", "jz      short loc_13295"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 6, 3, 0.0024489795918367346, ["nop"], ["nop"]], [1, 0, 16, 0, 0, 2, 0, 1, 5, 4, 0.0069387755102040816, ["cmp     [rbp+width], 7FFFFFFFh", "jz      short loc_13298"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 5, 2, 0.011020408163265306, ["mov     eax, 7FFFFFFFh"], ["mov~eax,0"]], [1, 1, 37, 1, 0, 3, 0, 1, 5, 6, 0.020816326530612245, ["sub     eax, 20h ; ' '", "cmp     eax, 3", "ja      short loc_130BE"], ["sub~eax,<STR>", "cmp~eax,0", "ja~FOO"]], [1, 0, 37, 0, 0, 2, 0, 1, 4, 5, 0.0326530612244898, ["cmp     eax, 25h ; '%'", "jge     short loc_130B0"], ["cmp~eax,0", "jge~FOO"]], [1, 0, 37, 0, 0, 4, 2, 1, 10, 3, 0.07571428571428572, ["mov     eax, [rbp+flags]", "and     eax, 2", "test    eax, eax", "jnz     short loc_131BE"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [0, 0, 37, 0, 0, 1, 0, 1, 6, 5, 0.0038775510204081634, ["jmp     short loc_130B0"], ["jmp~FOO"]], [2, 0, 37, 2, 0, 3, 0, 1, 8, 5, 0.02653061224489796, ["add     [rbp+p], 1", "add     [rbp+width], 1", "jmp     loc_131E4"], ["add~[rbp+0],0", "add~[rbp+0],0", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.006122448979591837, ["mov     eax, [rbp+width]", "jmp     short loc_1329E"], ["mov~eax,[rbp+0]", "jmp~FOO"]], [1, 0, 37, 0, 0, 2, 0, 1, 4, 6, 0.1285714285714286, ["cmp     eax, 41h ; 'A'", "jl      short loc_130BE"], ["cmp~eax,0", "jl~FOO"]], [1, 0, 37, 0, 0, 2, 0, 1, 5, 5, 0.014489795918367347, ["cmp     eax, 5Fh ; '_'", "jle     short loc_130B0"], ["cmp~eax,0", "jle~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 8, 2, 0.0067346938775510205, ["mov     eax, 0FFFFFFFFh", "jmp     loc_1329E"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 37, 0, 1, 5, 1, 2, 11, 5, 0.06224489795918368, ["mov     eax, [rbp+wc]", "mov     edi, eax; wc", "call    _iswcntrl", "test    eax, eax", "jnz     short loc_131C8"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 3, 1, 0.03918367346938775, ["mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_132B2"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 9, 2, 0.0024489795918367346, ["mov     eax, 0FFFFFFFFh", "jmp     loc_1329E"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 11, 2, 0.004897959183673469, ["mov     eax, 0FFFFFFFFh", "jmp     loc_1329E"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 3, 2, 0.01653061224489796, ["mov     eax, [rbp+width]", "jmp     loc_1329E"], ["mov~eax,[rbp+0]", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, 2, 0.0024489795918367346, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_1329E"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 16, 2, 1, 15, 2, 2, 2, 4, 0.0236734693877551, ["mov     rax, [rbp+p]", "lea     rdx, [rax+1]", "mov     [rbp+p], rdx", "movzx   eax, byte ptr [rax]", "mov     [rbp+c], al", "call    ___ctype_b_loc", "mov     rax, [rax]", "movzx   edx, [rbp+c]", "add     rdx, rdx", "add     rax, rdx", "movzx   eax, word ptr [rax]", "movzx   eax, ax", "and     eax, 4000h", "test    eax, eax", "jz      short loc_1323D"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "movzx~eax,<TAG>", "mov~[rbp+0],al", "call~FOO", "mov~rax,<TAG>", "movzx~edx,[rbp+0]", "add~rdx,rdx", "add~rax,rdx", "movzx~eax,<TAG>", "movzx~eax,ax", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 0, 37, 1, 0, 3, 0, 1, 6, 5, 0.009795918367346938, ["sub     eax, 61h ; 'a'", "cmp     eax, 1Dh", "ja      short loc_130BE"], ["sub~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 37, 0, 0, 2, 0, 1, 7, 4, 0.16448979591836735, ["cmp     [rbp+bytes], 0FFFFFFFFFFFFFFFEh", "jnz     short loc_13158"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 37, 0, 0, 4, 2, 1, 8, 3, 0.028571428571428574, ["mov     eax, [rbp+flags]", "and     eax, 1", "test    eax, eax", "jnz     short loc_1314E"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [1, 0, 37, 1, 0, 2, 0, 1, 13, 6, 0.012244897959183675, ["add     [rbp+width], 1", "jmp     short loc_131C8"], ["add~[rbp+0],0", "jmp~FOO"]], [1, 0, 16, 0, 0, 4, 2, 1, 3, 3, 0.01469387755102041, ["mov     eax, [rbp+flags]", "and     eax, 2", "test    eax, eax", "jnz     short loc_13275"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [1, 0, 37, 1, 0, 4, 0, 1, 9, 5, 0.017551020408163268, ["mov     rax, [rbp+plimit]", "mov     [rbp+p], rax", "add     [rbp+width], 1", "jmp     loc_131E4"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "add~[rbp+0],0", "jmp~FOO"]], [1, 0, 37, 0, 0, 2, 0, 1, 8, 5, 0.12775510204081633, ["cmp     [rbp+bytes], 0", "jnz     short loc_13167"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 37, 0, 0, 1, 0, 0, 9, 5, 0.0, ["mov     [rbp+bytes], 1"], ["mov~[rbp+0],0"]]], "func_feature": [9, 16, 50, 1, 51, 75, 3, 184, 0.0433, 1, 20], "succs": [[40, 30], [0, 12], [0], [0, 23], [0], [16, 15], [27, 5], [17, 43], [14, 7], [7], [26, 31], [10, 38], [11], [11], [11], [24], [8], [33, 29], [24], [18, 46], [24], [2, 20], [24], [4, 22], [35], [9, 28], [25, 13], [34, 37], [13], [14], [35], [32, 9], [42, 13], [35], [8, 19], [41, 44], [35], [35], [35], [35], [21, 47], [], [9, 13], [49, 45], [], [48, 36], [8], [3, 39], [14], [50, 6], [6]], "fname": "mbsnwidth", "n_num": 51}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.05357142857142857, ["nop"], ["nop"]], [1, 0, 8, 1, 0, 9, 0, 1, 2, 2, 0.19642857142857142, ["mov     rax, [rbp+tmp]", "lea     rdx, [rax+8]", "mov     [rbp+tmp], rdx", "mov     rdx, [rbp+bb]", "mov     [rax], rdx", "add     [rbp+b], 1", "mov     rax, [rbp+b]", "cmp     rax, [rbp+blim]", "jz      short loc_13420"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jz~FOO"]], [0, 0, 1, 0, 0, 5, 0, 1, 3, 1, 0.05357142857142857, ["mov     rax, [rbp+b]", "mov     [rbp+a], rax", "mov     rax, [rbp+blim]", "mov     [rbp+alim], rax", "jmp     short loc_13421"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 8, 1, 0, 9, 0, 1, 2, 2, 0.19642857142857142, ["mov     rax, [rbp+tmp]", "lea     rdx, [rax+8]", "mov     [rbp+tmp], rdx", "mov     rdx, [rbp+ba]", "mov     [rax], rdx", "add     [rbp+a], 1", "mov     rax, [rbp+a]", "cmp     rax, [rbp+alim]", "jnz     short loc_133C3"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnz~FOO"]], [0, 0, 8, 0, 1, 8, 1, 2, 1, 3, 0.4464285714285714, ["mov     rcx, [rbp+bb]", "mov     rdx, [rbp+ba]", "mov     rax, [rbp+cmp]", "mov     rsi, rcx", "mov     rdi, rdx", "call    rax", "test    eax, eax", "jg      short loc_133DF"], ["mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rdx", "call~rax", "test~eax,eax", "jg~FOO"]], [0, 0, 8, 1, 0, 7, 0, 1, 3, 4, 0.07142857142857142, ["mov     rax, [rbp+a]", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+base]", "add     rax, rdx", "mov     rax, [rax]", "mov     [rbp+ba], rax", "jmp     short loc_13377"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 8, 1, 0, 7, 0, 1, 3, 4, 0.07142857142857142, ["mov     rax, [rbp+b]", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+base]", "add     rax, rdx", "mov     rax, [rax]", "mov     [rbp+bb], rax", "jmp     loc_13377"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [3, 0, 8, 4, 2, 47, 0, 2, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 60h", "mov     [rbp+base], rdi", "mov     [rbp+n], rsi", "mov     [rbp+tmp], rdx", "mov     [rbp+cmp], rcx", "mov     rax, [rbp+n]", "shr     rax, 1", "mov     [rbp+n1], rax", "mov     rax, [rbp+n]", "sub     rax, [rbp+n1]", "mov     [rbp+n2], rax", "mov     [rbp+a], 0", "mov     rax, [rbp+n1]", "mov     [rbp+alim], rax", "mov     rax, [rbp+n1]", "mov     [rbp+b], rax", "mov     rax, [rbp+n]", "mov     [rbp+blim], rax", "mov     rax, [rbp+n1]", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+base]", "lea     rdi, [rdx+rax]; base", "mov     rcx, [rbp+cmp]; cmp", "mov     rdx, [rbp+tmp]; tmp", "mov     rax, [rbp+n2]", "mov     rsi, rax; n", "call    mpsort_with_tmp", "mov     rcx, [rbp+cmp]; cmp", "mov     rdx, [rbp+tmp]; tmp", "mov     rsi, [rbp+n1]; n", "mov     rax, [rbp+base]", "mov     rdi, rax; base", "call    mpsort_with_tmp", "mov     rax, [rbp+a]", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+base]", "add     rax, rdx", "mov     rax, [rax]", "mov     [rbp+ba], rax", "mov     rax, [rbp+b]", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+base]", "add     rax, rdx", "mov     rax, [rax]", "mov     [rbp+bb], rax"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~rax,[rbp+0]", "shr~rax,0", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "sub~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "lea~rdi,<TAG>", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "call~FOO", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax"]], [0, 0, 0, 2, 1, 14, 0, 1, 4, 0, 0.0, ["mov     rax, [rbp+alim]", "sub     rax, [rbp+a]", "lea     rdx, ds:0[rax*8]; n", "mov     rax, [rbp+a]", "lea     rcx, ds:0[rax*8]", "mov     rax, [rbp+base]", "add     rcx, rax", "mov     rax, [rbp+tmp]", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    _memcpy", "nop", "leave", "retn"], ["mov~rax,[rbp+0]", "sub~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "lea~rcx,<TAG>", "mov~rax,[rbp+0]", "add~rcx,rax", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "nop", "leave", "retn"]]], "func_feature": [4, 1, 10, 0, 9, 11, 1, 107, 0.12103, 0, 10], "succs": [[8], [0, 6], [8], [2, 5], [1, 3], [4], [4], [4], []], "fname": "mpsort_into_tmp", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 8, 2, 0, 12, 0, 1, 0, 0, 0.09761904761904763, ["mov     rax, [rbp+i]", "lea     rdx, [rax+1]", "mov     [rbp+i], rdx", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+base]", "add     rdx, rax", "mov     rax, [rbp+tt]", "mov     [rdx], rax", "add     [rbp+t], 1", "mov     rax, [rbp+t]", "cmp     rax, [rbp+tlim]", "jz      loc_13698"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~<TAG>,rax", "add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jz~FOO"]], [0, 0, 8, 0, 1, 8, 1, 2, 4, 3, 0.24761904761904763, ["mov     rcx, [rbp+bb]", "mov     rdx, [rbp+tt]", "mov     rax, [rbp+cmp]", "mov     rsi, rcx", "mov     rdi, rdx", "call    rax", "test    eax, eax", "jg      short loc_13605"], ["mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rdx", "call~rax", "test~eax,eax", "jg~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["nop", "leave", "retn"], ["nop", "leave", "retn"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 1, 0.014285714285714287, ["cmp     [rbp+n], 2", "jnz     loc_13699"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 2, 0, 1, 14, 1, 2, 2, 1, 0.009523809523809525, ["mov     rax, [rbp+base]", "mov     rax, [rax]", "mov     [rbp+p0], rax", "mov     rax, [rbp+base]", "mov     rax, [rax+8]", "mov     [rbp+p1], rax", "mov     rcx, [rbp+p1]", "mov     rdx, [rbp+p0]", "mov     rax, [rbp+cmp]", "mov     rsi, rcx", "mov     rdi, rdx", "call    rax", "test    eax, eax", "jle     loc_13699"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rdx", "call~rax", "test~eax,eax", "jle~FOO"]], [0, 0, 1, 0, 0, 8, 0, 1, 3, 1, 0.0, ["mov     rax, [rbp+base]", "mov     rdx, [rbp+p1]", "mov     [rax], rdx", "mov     rax, [rbp+base]", "lea     rdx, [rax+8]", "mov     rax, [rbp+p0]", "mov     [rdx], rax", "jmp     loc_13699"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 1, 3, 1, 15, 0, 2, 6, 1, 0.02142857142857143, ["mov     rax, [rbp+tlim]", "sub     rax, [rbp+t]", "lea     rdx, ds:0[rax*8]; n", "mov     rax, [rbp+t]", "lea     rcx, ds:0[rax*8]", "mov     rax, [rbp+tmp]", "add     rcx, rax", "mov     rax, [rbp+i]", "lea     rsi, ds:0[rax*8]", "mov     rax, [rbp+base]", "add     rax, rsi", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    _memcpy", "jmp     short loc_13699"], ["mov~rax,[rbp+0]", "sub~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "lea~rcx,<TAG>", "mov~rax,[rbp+0]", "add~rcx,rax", "mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rax,[rbp+0]", "add~rax,rsi", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 6, 1, 0.02142857142857143, ["nop"], ["nop"]], [0, 0, 9, 0, 0, 5, 0, 1, 2, 5, 0.04047619047619048, ["mov     rax, [rbp+base]", "mov     rdx, [rax]", "mov     rax, [rbp+tmp]", "mov     [rax], rdx", "jmp     short loc_13560"], ["mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "jmp~FOO"]], [3, 0, 11, 1, 1, 24, 0, 2, 1, 6, 0.04761904761904762, ["mov     rax, [rbp+n]", "shr     rax, 1", "mov     [rbp+n1], rax", "mov     rax, [rbp+n]", "sub     rax, [rbp+n1]", "mov     [rbp+n2], rax", "mov     [rbp+t], 0", "mov     rax, [rbp+n1]", "mov     [rbp+tlim], rax", "mov     rax, [rbp+n1]", "mov     [rbp+b], rax", "mov     rax, [rbp+n]", "mov     [rbp+blim], rax", "mov     rax, [rbp+n1]", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+base]", "lea     rdi, [rdx+rax]; base", "mov     rcx, [rbp+cmp]; cmp", "mov     rdx, [rbp+tmp]; tmp", "mov     rax, [rbp+n2]", "mov     rsi, rax; n", "call    mpsort_with_tmp", "cmp     [rbp+n1], 1", "ja      short loc_13548"], ["mov~rax,[rbp+0]", "shr~rax,0", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "sub~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "lea~rdi,<TAG>", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "call~FOO", "cmp~[rbp+0],0", "ja~FOO"]], [0, 0, 8, 1, 0, 7, 0, 1, 6, 4, 0.01904761904761905, ["mov     rax, [rbp+t]", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+tmp]", "add     rax, rdx", "mov     rax, [rax]", "mov     [rbp+tt], rax", "jmp     short loc_1359C"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 8, 1, 0, 7, 0, 1, 6, 4, 0.01904761904761905, ["mov     rax, [rbp+b]", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+base]", "add     rax, rdx", "mov     rax, [rax]", "mov     [rbp+bb], rax", "jmp     loc_1359C"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 8, 2, 0, 13, 0, 0, 3, 4, 0.14761904761904762, ["mov     rax, [rbp+t]", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+tmp]", "add     rax, rdx", "mov     rax, [rax]", "mov     [rbp+tt], rax", "mov     rax, [rbp+b]", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+base]", "add     rax, rdx", "mov     rax, [rax]", "mov     [rbp+bb], rax", "mov     [rbp+i], 0"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~[rbp+0],0"]], [2, 0, 15, 1, 0, 9, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "add     rsp, 0FFFFFFFFFFFFFF80h", "mov     [rbp+base], rdi", "mov     [rbp+n], rsi", "mov     [rbp+tmp], rdx", "mov     [rbp+cmp], rcx", "cmp     [rbp+n], 2", "ja      short loc_134D2"], ["push~rbp", "mov~rbp,rsp", "add~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "cmp~[rbp+0],0", "ja~FOO"]], [0, 0, 9, 0, 1, 6, 0, 1, 2, 5, 0.04047619047619048, ["mov     rcx, [rbp+cmp]; cmp", "mov     rdx, [rbp+tmp]; tmp", "mov     rsi, [rbp+n1]; n", "mov     rax, [rbp+base]", "mov     rdi, rax; base", "call    mpsort_into_tmp"], ["mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO"]], [1, 0, 8, 2, 0, 12, 0, 1, 5, 2, 0.09761904761904763, ["mov     rax, [rbp+i]", "lea     rdx, [rax+1]", "mov     [rbp+i], rdx", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+base]", "add     rdx, rax", "mov     rax, [rbp+bb]", "mov     [rdx], rax", "add     [rbp+b], 1", "mov     rax, [rbp+b]", "cmp     rax, [rbp+blim]", "jnz     short loc_13679"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~<TAG>,rax", "add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnz~FOO"]]], "func_feature": [5, 2, 17, 0, 16, 22, 4, 146, 0.05149, 0, 13], "succs": [[10, 7], [0, 15], [], [2, 4], [2, 5], [2], [2], [2], [12], [8, 14], [1], [1], [1], [9, 3], [12], [11, 6]], "fname": "mpsort_with_tmp", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 1, 0, 1, 1, 20, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+base], rdi", "mov     [rbp+n], rsi", "mov     [rbp+cmp], rdx", "mov     rax, [rbp+n]", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+base]", "lea     rdi, [rdx+rax]", "mov     rdx, [rbp+cmp]", "mov     rsi, [rbp+n]; n", "mov     rax, [rbp+base]", "mov     rcx, rdx; cmp", "mov     rdx, rdi; tmp", "mov     rdi, rax; base", "call    mpsort_with_tmp", "nop", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "lea~rdi,<TAG>", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~rcx,rdx", "mov~rdx,rdi", "mov~rdi,rax", "call~FOO", "nop", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 20, 0.0, 0, 1], "succs": [[]], "fname": "mpsort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+dest]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]], [0, 0, 3, 0, 0, 5, 1, 1, 1, 0, 0.5, ["mov     rax, [rbp+len]", "lea     rdx, [rax-1]", "mov     [rbp+len], rdx", "test    rax, rax", "jnz     short loc_136F7"], ["mov~rax,[rbp+0]", "lea~rdx,[rax-1]+0]", "mov~[rbp+0],rdx", "test~rax,rax", "jnz~FOO"]], [0, 1, 3, 1, 0, 7, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+dest], rdi", "mov     [rbp+src], rsi", "mov     [rbp+len], rdx", "jmp     short loc_13720"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "jmp~FOO"]], [0, 0, 3, 2, 1, 13, 0, 1, 2, 0, 0.0, ["mov     rdx, [rbp+src]", "mov     rax, [rbp+len]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "movzx   eax, al", "mov     edi, eax; c", "call    _tolower", "mov     ecx, eax", "mov     rdx, [rbp+dest]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     edx, ecx", "mov     [rax], dl"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "movzx~eax,al", "mov~edi,eax", "call~FOO", "mov~ecx,eax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~edx,ecx", "mov~<TAG>,dl"]]], "func_feature": [1, 1, 3, 0, 4, 4, 4, 28, 0.125, 0, 3], "succs": [[], [0, 3], [1], [1]], "fname": "memcpy_lowcase", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+dest]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]], [0, 0, 3, 0, 0, 5, 1, 1, 1, 0, 0.5, ["mov     rax, [rbp+len]", "lea     rdx, [rax-1]", "mov     [rbp+len], rdx", "test    rax, rax", "jnz     short loc_1374D"], ["mov~rax,[rbp+0]", "lea~rdx,[rax-1]+0]", "mov~[rbp+0],rdx", "test~rax,rax", "jnz~FOO"]], [0, 1, 3, 1, 0, 7, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+dest], rdi", "mov     [rbp+src], rsi", "mov     [rbp+len], rdx", "jmp     short loc_13776"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "jmp~FOO"]], [0, 0, 3, 2, 1, 13, 0, 1, 2, 0, 0.0, ["mov     rdx, [rbp+src]", "mov     rax, [rbp+len]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "movzx   eax, al", "mov     edi, eax; c", "call    _toupper", "mov     ecx, eax", "mov     rdx, [rbp+dest]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     edx, ecx", "mov     [rax], dl"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "movzx~eax,al", "mov~edi,eax", "call~FOO", "mov~ecx,eax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~edx,ecx", "mov~<TAG>,dl"]]], "func_feature": [1, 1, 3, 0, 4, 4, 4, 28, 0.125, 0, 3], "succs": [[], [0, 3], [1], [1]], "fname": "memcpy_uppcase", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[6, 0, 0, 8, 0, 31, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+yday], edi", "mov     [rbp+wday], esi", "mov     [rbp+big_enough_multiple_of_7], 17Ah", "mov     eax, [rbp+yday]", "sub     eax, [rbp+wday]", "lea     edx, [rax+4]", "mov     eax, [rbp+big_enough_multiple_of_7]", "lea     ecx, [rdx+rax]", "mov     edx, 92492493h", "mov     eax, ecx", "imul    edx", "lea     eax, [rdx+rcx]", "sar     eax, 2", "mov     edx, eax", "mov     eax, ecx", "sar     eax, 1Fh", "sub     edx, eax", "mov     eax, edx", "mov     edx, eax", "shl     edx, 3", "sub     edx, eax", "mov     eax, ecx", "sub     eax, edx", "mov     edx, [rbp+yday]", "sub     edx, eax", "mov     eax, edx", "add     eax, 3", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~[rbp+0],esi", "mov~[rbp+0],0", "mov~eax,[rbp+0]", "sub~eax,[rbp+0]", "lea~edx,[rax+0]", "mov~eax,[rbp+0]", "lea~ecx,<TAG>", "mov~edx,0", "mov~eax,ecx", "imul~,edx", "lea~eax,<TAG>", "sar~eax,0", "mov~edx,eax", "mov~eax,ecx", "sar~eax,0", "sub~edx,eax", "mov~eax,edx", "mov~edx,eax", "shl~edx,0", "sub~edx,eax", "mov~eax,ecx", "sub~eax,edx", "mov~edx,[rbp+0]", "sub~edx,eax", "mov~eax,edx", "add~eax,0", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 3, 31, 0.0, 0, 8], "succs": [[]], "fname": "iso_week_days", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [5, 1, 2, 2, 1, 31, 2, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+s], rdi", "mov     [rbp+maxsize], rsi", "mov     [rbp+format], rdx", "mov     [rbp+tp], rcx", "mov     [rbp+tz], r8", "mov     [rbp+ns], r9d", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     [rbp+tzset_called], 0", "mov     rcx, [rbp+tp]; tp", "mov     rdx, [rbp+format]; format", "mov     rsi, [rbp+maxsize]; maxsize", "mov     rax, [rbp+s]", "mov     edi, [rbp+ns]", "push    rdi; ns", "push    [rbp+tz]; tz", "lea     rdi, [rbp+tzset_called]", "push    rdi; tzset_called", "push    0FFFFFFFFFFFFFFFFh; width", "mov     r9d, 0; yr_spec", "mov     r8d, 0; upcase", "mov     rdi, rax; s", "call    __strftime_internal", "add     rsp, 20h", "mov     rdx, [rbp+var_8]", "xor     rdx, fs:28h", "jz      short locret_1385B"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~[rbp+0],r9d", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~edi,[rbp+0]", "push~rdi", "push~[rbp+0]", "lea~rdi,[rbp+0]", "push~rdi", "push~0", "mov~r9d,0", "mov~r8d,0", "mov~rdi,rax", "call~FOO", "add~rsp,<STR>", "mov~rdx,[rbp+0]", "xor~rdx,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 2, 3, 1, 3, 2, 1, 34, 0.0, 1, 2], "succs": [[], [0, 2], []], "fname": "nstrftime", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 439, 0, 0, 2, 0, 1, 0, 0, 0.06409555623038769, ["cmp     [rbp+pad], 0", "jnz     short loc_14411"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 439, 1, 0, 10, 0, 1, 15, 14, 0.009368357121166111, ["sub     [rbp+century], eax", "mov     [rbp+digits], 2", "mov     rax, [rbp+tp]", "mov     eax, [rax+14h]", "cmp     eax, 0FFFFF894h", "setl    al", "mov     [rbp+negative_number], al", "mov     eax, [rbp+century]", "mov     [rbp+u_number_value], eax", "jmp     do_yearish"], ["sub~[rbp+0],eax", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "cmp~eax,0", "setl~al", "mov~[rbp+0],al", "mov~eax,[rbp+0]", "mov~[rbp+0],eax", "jmp~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 23, 14, 0.01108411782569086, ["mov     [rbp+u_number_value], eax", "jmp     do_yearish"], ["mov~[rbp+0],eax", "jmp~FOO"]], [3, 0, 439, 3, 0, 16, 0, 1, 20, 14, 0.001057799372406114, ["mov     [rbp+digits], 4", "mov     rax, [rbp+tp]", "mov     edx, [rax+14h]", "mov     eax, 0FFFFF894h", "sub     eax, [rbp+year_adjust]", "cmp     edx, eax", "setl    al", "mov     [rbp+negative_number], al", "mov     rax, [rbp+tp]", "mov     eax, [rax+14h]", "mov     edx, eax", "mov     eax, [rbp+year_adjust]", "add     eax, edx", "add     eax, 76Ch", "mov     [rbp+u_number_value], eax", "jmp     do_yearish"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~edx,[rax+0]", "mov~eax,0", "sub~eax,[rbp+0]", "cmp~edx,eax", "setl~al", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~edx,eax", "mov~eax,[rbp+0]", "add~eax,edx", "add~eax,0", "mov~[rbp+0],eax", "jmp~FOO"]], [3, 0, 439, 1, 0, 11, 0, 1, 14, 14, 0.011638323716975403, ["mov     [rbp+digits], 4", "mov     rax, [rbp+tp]", "mov     eax, [rax+14h]", "cmp     eax, 0FFFFF894h", "setl    al", "mov     [rbp+negative_number], al", "mov     rax, [rbp+tp]", "mov     eax, [rax+14h]", "add     eax, 76Ch", "mov     [rbp+u_number_value], eax", "jmp     do_yearish"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "cmp~eax,0", "setl~al", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "add~eax,0", "mov~[rbp+0],eax", "jmp~FOO"]], [2, 0, 439, 0, 0, 5, 0, 1, 14, 14, 0.02200374531835206, ["mov     [rbp+digits], 2", "mov     [rbp+negative_number], 0", "mov     eax, [rbp+yy_0]", "mov     [rbp+u_number_value], eax", "jmp     do_yearish"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "mov~eax,[rbp+0]", "mov~[rbp+0],eax", "jmp~FOO"]], [0, 1, 439, 3, 1, 19, 0, 1, 17, 7, 0.013199716570503088, ["movzx   r8d, [rbp+to_uppcase]; upcase", "mov     rax, [rbp+maxsize]", "sub     rax, [rbp+i]", "mov     rsi, rax; maxsize", "mov     r9d, [rbp+pad]; yr_spec", "mov     rcx, [rbp+tp]; tp", "mov     rdx, [rbp+subfmt]; format", "mov     rax, [rbp+p]", "mov     edi, [rbp+ns]", "push    rdi; ns", "push    [rbp+tz]; tz", "push    [rbp+tzset_called]; tzset_called", "mov     edi, [rbp+subwidth]", "push    rdi; width", "mov     rdi, rax; s", "call    __strftime_internal", "add     rsp, 20h", "mov     rax, [rbp+_n_1]", "add     [rbp+p], rax"], ["movzx~r8d,[rbp+0]", "mov~rax,[rbp+0]", "sub~rax,[rbp+0]", "mov~rsi,rax", "mov~r9d,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~edi,[rbp+0]", "push~rdi", "push~[rbp+0]", "push~[rbp+0]", "mov~edi,[rbp+0]", "push~rdi", "mov~rdi,rax", "call~FOO", "add~rsp,<STR>", "mov~rax,[rbp+0]", "add~[rbp+0],rax"]], [1, 0, 439, 0, 0, 2, 0, 1, 16, 8, 0.01274420487903634, ["cmp     [rbp+digits], 0", "jnz     loc_13FBB"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 439, 0, 0, 3, 0, 0, 17, 8, 0.008518068630428182, ["mov     rax, [rbp+_n_1]", "cmp     rax, [rbp+_w_1]", "jnb     short loc_13FBB"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 439, 1, 1, 8, 0, 2, 19, 8, 0.0033049903836420693, ["mov     rdx, [rbp+_delta_1]; n", "mov     rax, [rbp+p]", "mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _memset", "mov     rax, [rbp+_delta_1]", "add     [rbp+p], rax", "jmp     short loc_13FBB"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "add~[rbp+0],rax", "jmp~FOO"]], [0, 1, 439, 1, 1, 7, 0, 1, 20, 8, 0.0011033505415527888, ["mov     rdx, [rbp+_delta_1]; n", "mov     rax, [rbp+p]", "mov     esi, 20h ; ' '; c", "mov     rdi, rax; s", "call    _memset", "mov     rax, [rbp+_delta_1]", "add     [rbp+p], rax"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,<STR>", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "add~[rbp+0],rax"]], [1, 0, 439, 1, 1, 10, 0, 1, 18, 8, 0.0011033505415527888, ["mov     eax, 1", "sub     eax, [rbp+flen]", "movsxd  rdx, eax", "mov     rax, [rbp+f]", "lea     rcx, [rdx+rax]", "mov     rdx, [rbp+_n_11]; n", "mov     rax, [rbp+p]", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    _memcpy"], ["mov~eax,0", "sub~eax,[rbp+0]", "movsxd~rdx,eax", "mov~rax,[rbp+0]", "lea~rcx,<TAG>", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 17, 9, 0.004271687417754834, ["cmp     [rbp+to_uppcase], 0", "jz      short loc_15FF1"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 439, 1, 0, 2, 0, 0, 18, 7, 0.024076323514525762, ["mov     rax, [rbp+_n_11]", "add     [rbp+p], rax"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax"]], [1, 0, 439, 1, 1, 11, 0, 2, 17, 8, 0.017360056685899385, ["mov     eax, 1", "sub     eax, [rbp+flen]", "movsxd  rdx, eax", "mov     rax, [rbp+f]", "lea     rcx, [rdx+rax]", "mov     rdx, [rbp+_n_11]; len", "mov     rax, [rbp+p]", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    memcpy_lowcase", "jmp     short loc_16023"], ["mov~eax,0", "sub~eax,[rbp+0]", "movsxd~rdx,eax", "mov~rax,[rbp+0]", "lea~rcx,<TAG>", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 439, 1, 1, 11, 0, 2, 18, 8, 0.0011033505415527888, ["mov     eax, 1", "sub     eax, [rbp+flen]", "movsxd  rdx, eax", "mov     rax, [rbp+f]", "lea     rcx, [rdx+rax]", "mov     rdx, [rbp+_n_11]; len", "mov     rax, [rbp+p]", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    memcpy_uppcase", "jmp     short loc_16023"], ["mov~eax,0", "sub~eax,[rbp+0]", "movsxd~rdx,eax", "mov~rax,[rbp+0]", "lea~rcx,<TAG>", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [5, 0, 439, 3, 0, 15, 0, 1, 21, 12, 0.040262172284644196, ["mov     [rbp+digits], 2", "mov     ecx, [rbp+days]", "mov     edx, 92492493h", "mov     eax, ecx", "imul    edx", "lea     eax, [rdx+rcx]", "sar     eax, 2", "mov     edx, eax", "mov     eax, ecx", "sar     eax, 1Fh", "sub     edx, eax", "mov     eax, edx", "add     eax, 1", "mov     [rbp+number_value], eax", "jmp     do_number"], ["mov~[rbp+0],0", "mov~ecx,[rbp+0]", "mov~edx,0", "mov~eax,ecx", "imul~,edx", "lea~eax,<TAG>", "sar~eax,0", "mov~edx,eax", "mov~eax,ecx", "sar~eax,0", "sub~edx,eax", "mov~eax,edx", "add~eax,0", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 20, 13, 0.053031683368762024, ["cmp     eax, 67h ; 'g'", "jnz     loc_157F9"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 439, 1, 0, 3, 0, 1, 16, 6, 0.04412896042109526, ["mov     rax, [rbp+_incr_1]", "add     [rbp+i], rax", "jmp     loc_16046"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 15, 7, 0.04352161149913959, ["cmp     [rbp+p], 0", "jz      loc_14021"], ["cmp~[rbp+0],0", "jz~FOO"]], [3, 0, 439, 1, 0, 14, 0, 0, 28, 3, 0.021231906063366737, ["mov     [rbp+_n_4], 1", "mov     eax, 0", "cmp     [rbp+width], 0", "cmovns  eax, [rbp+width]", "cdqe", "mov     [rbp+_w_4], rax", "mov     rax, [rbp+_w_4]", "cmp     [rbp+_n_4], rax", "cmovnb  rax, [rbp+_n_4]", "mov     [rbp+_incr_4], rax", "mov     rax, [rbp+maxsize]", "sub     rax, [rbp+i]", "cmp     [rbp+_incr_4], rax", "jb      short loc_1483C"], ["mov~[rbp+0],0", "mov~eax,0", "cmp~[rbp+0],0", "cmovns~eax,[rbp+0]", "cdqe~", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "cmovnb~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "sub~rax,[rbp+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [1, 0, 439, 0, 0, 3, 0, 1, 27, 4, 0.036117015892296794, ["mov     [rbp+width], eax", "cmp     [rbp+sign_char], 0", "jz      loc_14C00"], ["mov~[rbp+0],eax", "cmp~[rbp+0],0", "jz~FOO"]], [3, 0, 439, 1, 0, 14, 0, 0, 12, 3, 0.022288861895603473, ["mov     [rbp+_n_8], 1; jumptable 0000000000013C49 case 110", "mov     eax, 0", "cmp     [rbp+width], 0", "cmovns  eax, [rbp+width]", "cdqe", "mov     [rbp+_w_8], rax", "mov     rax, [rbp+_w_8]", "cmp     [rbp+_n_8], rax", "cmovnb  rax, [rbp+_n_8]", "mov     [rbp+_incr_8], rax", "mov     rax, [rbp+maxsize]", "sub     rax, [rbp+i]", "cmp     [rbp+_incr_8], rax", "jb      short loc_15041"], ["mov~[rbp+0],0", "mov~eax,0", "cmp~[rbp+0],0", "cmovns~eax,[rbp+0]", "cdqe~", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "cmovnb~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "sub~rax,[rbp+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [0, 0, 439, 1, 0, 8, 0, 1, 11, 4, 0.7076019840064784, ["mov     eax, [rbp+format_char]", "lea     rdx, ds:0[rax*4]", "lea     rax, off_1FA4C", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_1FA4C", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,[rbp+0]", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 3, 0, 0, 2, 0, 1, 29, 2, 6.073489219556636e-05, ["mov     eax, 0", "jmp     loc_1608C"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 14, 6, 0.006503694705941898, ["nop", "jmp     short underlying_strftime"], ["nop", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 13, 7, 0.0063518574754529815, ["cmp     [rbp+change_case], 0", "jz      loc_14037"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 439, 0, 0, 3, 0, 1, 14, 7, 0.0, ["mov     [rbp+to_uppcase], 1", "mov     [rbp+to_lowcase], 0", "jmp     loc_14037"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 14, 6, 0.006503694705941898, ["nop", "jmp     short underlying_strftime"], ["nop", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 13, 7, 0.0063518574754529815, ["cmp     [rbp+change_case], 0", "jz      loc_1403A"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 439, 0, 0, 3, 0, 1, 14, 7, 0.0, ["mov     [rbp+to_uppcase], 1", "mov     [rbp+to_lowcase], 0", "jmp     loc_1403A"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 13, 2, 0.00017461281506225327, ["mov     eax, 0", "jmp     loc_1608C"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 14, 6, 0.006293653203765564, ["nop", "jmp     short underlying_strftime"], ["nop", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 13, 7, 0.008669905860917097, ["cmp     [rbp+modifier], 45h ; 'E'", "jnz     loc_1403D"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 439, 1, 0, 4, 0, 1, 15, 6, 0.1261817997773054, ["mov     rax, [rbp+_incr_11]", "add     [rbp+i], rax", "nop", "jmp     short loc_16046"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax", "nop", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 14, 7, 0.12519485777912745, ["cmp     [rbp+p], 0", "jz      loc_16031"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 14, 6, 0.006503694705941898, ["nop", "jmp     short underlying_strftime"], ["nop", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 13, 7, 0.0063518574754529815, ["cmp     [rbp+change_case], 0", "jz      loc_14040"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 439, 0, 0, 3, 0, 1, 14, 7, 0.0, ["mov     [rbp+to_uppcase], 1", "mov     [rbp+to_lowcase], 0", "jmp     loc_14040"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 15, 6, 0.253968012956777, ["nop", "jmp     short loc_16046"], ["nop", "jmp~FOO"]], [3, 0, 439, 0, 1, 16, 0, 2, 14, 4, 0.2567213280696427, ["mov     rax, [rbp+u]", "lea     rdx, [rax+1]", "mov     [rbp+u], rdx", "mov     edx, [rbp+format_char]", "mov     [rax], dl", "mov     rax, [rbp+u]", "mov     byte ptr [rax], 0", "mov     rcx, [rbp+tp]; tp", "lea     rdx, [rbp+ufmt]; format", "lea     rax, [rbp+ubuf]", "mov     esi, 400h; maxsize", "mov     rdi, rax; s", "call    _strftime", "mov     [rbp+len_0], rax", "cmp     [rbp+len_0], 0", "jz      loc_16042"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~edx,[rbp+0]", "mov~<TAG>,dl", "mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~rcx,[rbp+0]", "lea~rdx,[rbp+0]", "lea~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 439, 1, 0, 3, 0, 1, 17, 7, 0.0305091608462395, ["mov     rax, [rbp+_incr_2]", "add     [rbp+i], rax", "jmp     loc_16042"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax", "jmp~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 13, 6, 0.0021029456422714853, ["nop", "jmp     short underlying_strftime"], ["nop", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 12, 7, 0.004271687417754834, ["cmp     [rbp+modifier], 4Fh ; 'O'; jumptable 0000000000013C49 case 99", "jnz     loc_14043"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 439, 0, 0, 1, 0, 0, 14, 6, 0.010802375409116983, ["nop"], ["nop"]], [0, 0, 439, 0, 0, 4, 1, 1, 13, 7, 0.055083173060701145, ["mov     rax, [rbp+tp]", "mov     eax, [rax+20h]", "test    eax, eax", "js      loc_16045"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "test~eax,eax", "js~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 13, 6, 0.0016398420892802916, ["nop", "jmp     short underlying_strftime"], ["nop", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 12, 7, 0.012769511084117826, ["cmp     [rbp+modifier], 45h ; 'E'; jumptable 0000000000013C49 case 67", "jz      loc_14046"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 13, 7, 0.020044201504875663, ["cmp     [rbp+p], 0", "jz      loc_150FD"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 13, 6, 0.0021029456422714853, ["nop", "jmp     short underlying_strftime"], ["nop", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 12, 7, 0.004271687417754834, ["cmp     [rbp+modifier], 4Fh ; 'O'; jumptable 0000000000013C49 case 120", "jnz     loc_14049"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 17, 6, 0.1599554610790566, ["nop", "jmp     short underlying_strftime"], ["nop", "jmp~FOO"]], [1, 0, 439, 0, 0, 4, 2, 1, 16, 7, 0.16035023787832778, ["movzx   eax, [rbp+negative_number]", "xor     eax, 1", "test    al, al", "jnz     loc_1404C"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jnz~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 13, 6, 0.006620103249316733, ["nop", "jmp     short underlying_strftime"], ["nop", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 12, 7, 0.006468266018827817, ["cmp     [rbp+change_case], 0; jumptable 0000000000013C49 case 112", "jz      loc_1404F"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 439, 0, 0, 3, 0, 1, 13, 7, 0.0, ["mov     [rbp+to_uppcase], 0", "mov     [rbp+to_lowcase], 1", "jmp     loc_1404F"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 30, 6, 0.01274420487903634, ["cmp     [rbp+digits], 0", "jnz     loc_148E0"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 29, 5, 0.019101123595505618, ["cmp     [rbp+p], 0", "jz      loc_148FE"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 13, 6, 0.0021029456422714853, ["nop", "jmp     short underlying_strftime"], ["nop", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 12, 7, 0.004271687417754834, ["cmp     [rbp+modifier], 4Fh ; 'O'; jumptable 0000000000013C49 case 88", "jnz     loc_14052"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 14, 8, 0.01274420487903634, ["cmp     [rbp+digits], 0", "jnz     loc_150E5"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 439, 0, 0, 1, 0, 0, 13, 6, 0.0016347808482639944, ["nop"], ["nop"]], [1, 0, 439, 0, 0, 2, 0, 1, 12, 7, 0.025323919425043022, ["cmp     [rbp+modifier], 45h ; 'E'; jumptable 0000000000013C49 case 121", "jz      loc_14058"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 439, 0, 0, 4, 1, 1, 4, 4, 0.7723706852920337, ["mov     rax, [rbp+f]", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     loc_1394F"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 439, 0, 0, 3, 0, 1, 3, 5, 0.013331308836926816, ["mov     rax, [rbp+format]", "mov     [rbp+f], rax", "jmp     loc_16055"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [2, 0, 439, 1, 0, 2, 0, 0, 9, 5, 0.7567415730337079, ["mov     [rbp+width], 0FFFFFFFFh", "add     [rbp+f], 1"], ["mov~[rbp+0],0", "add~[rbp+0],0"]], [0, 0, 439, 0, 0, 3, 0, 0, 31, 6, 0.008518068630428182, ["mov     rax, [rbp+_n_4]", "cmp     rax, [rbp+_w_4]", "jnb     short loc_148E0"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 439, 0, 0, 3, 0, 0, 15, 8, 0.008518068630428182, ["mov     rax, [rbp+_n_8]", "cmp     rax, [rbp+_w_8]", "jnb     short loc_150E5"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 5, 3, 0.008184026723352566, ["cmp     [rbp+p], 0", "jz      short loc_16085"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 6, 3, 0.0021510274319263083, ["cmp     [rbp+maxsize], 0", "jz      short loc_16085"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 1, 0, 6, 0, 1, 32, 7, 0.006397408644599656, ["mov     eax, [rbp+width]", "cdqe", "sub     rax, [rbp+_n_4]", "mov     [rbp+_delta_4], rax", "cmp     [rbp+pad], 30h ; '0'", "jz      short loc_1488C"], ["mov~eax,[rbp+0]", "cdqe~", "sub~rax,[rbp+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 0, 7, 3, 0.0, ["mov     rax, [rbp+p]", "mov     byte ptr [rax], 0"], ["mov~rax,[rbp+0]", "mov~<TAG>,0"]], [0, 0, 3, 0, 0, 1, 0, 0, 6, 2, 0.0017916793197692074, ["mov     rax, [rbp+i]"], ["mov~rax,[rbp+0]"]], [1, 0, 439, 1, 0, 6, 0, 1, 16, 9, 0.006397408644599656, ["mov     eax, [rbp+width]", "cdqe", "sub     rax, [rbp+_n_8]", "mov     [rbp+_delta_8], rax", "cmp     [rbp+pad], 30h ; '0'", "jz      short loc_15091"], ["mov~eax,[rbp+0]", "cdqe~", "sub~rax,[rbp+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 33, 7, 0.002135843708877417, ["cmp     [rbp+pad], 2Bh ; '+'", "jnz     short loc_148B7"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 17, 9, 0.002135843708877417, ["cmp     [rbp+pad], 2Bh ; '+'", "jnz     short loc_150BC"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 1, 439, 0, 0, 12, 0, 1, 13, 5, 0.25656949083915376, ["lea     rax, [rbp+ufmt]", "mov     [rbp+u], rax", "mov     rax, [rbp+u]", "lea     rdx, [rax+1]", "mov     [rbp+u], rdx", "mov     byte ptr [rax], 20h ; ' '", "mov     rax, [rbp+u]", "lea     rdx, [rax+1]", "mov     [rbp+u], rdx", "mov     byte ptr [rax], 25h ; '%'", "cmp     [rbp+modifier], 0", "jz      short loc_140B4"], ["lea~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~<TAG>,<STR>", "mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~<TAG>,0", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 12, 6, 0.02637412693592469, ["nop; jumptable 0000000000013C49 case 114", "jmp     short underlying_strftime"], ["nop", "jmp~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 13, 6, 0.0015538009920032392, ["nop", "jmp     short underlying_strftime"], ["nop", "jmp~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 7, 1, 0.004484259540439316, ["mov     rsi, [rbp+var_8]", "xor     rsi, fs:28h", "jz      short locret_160A0"], ["mov~rsi,[rbp+0]", "xor~rsi,<TAG>", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 7, 2, 3.036744609778318e-05, ["mov     eax, 0", "jmp     loc_1608C"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 14, 2, 3.036744609778318e-05, ["mov     eax, 0", "jmp     loc_1608C"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 15, 2, 0.00018979653811114486, ["mov     eax, 0", "jmp     loc_1608C"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 16, 2, 0.0018220467658669906, ["mov     eax, 0", "jmp     loc_1608C"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 23, 2, 0.00018220467658669907, ["mov     eax, 0", "jmp     loc_1608C"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 24, 2, 2.657151533556028e-05, ["mov     eax, 0", "jmp     loc_1608C"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 24, 2, 2.657151533556028e-05, ["mov     eax, 0", "jmp     loc_1608C"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 26, 2, 3.036744609778318e-05, ["mov     eax, 0", "jmp     loc_1608C"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 24, 2, 2.657151533556028e-05, ["mov     eax, 0", "jmp     loc_1608C"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 23, 2, 0.0008313088369268145, ["mov     eax, 0", "jmp     loc_1608C"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 13, 2, 0.00017461281506225327, ["mov     eax, 0", "jmp     loc_1608C"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 14, 2, 4.555116914667477e-05, ["mov     eax, 0", "jmp     loc_1608C"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 14, 2, 0.0010400850288490738, ["mov     eax, 0", "jmp     loc_1608C"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 8, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [8, 0, 439, 8, 0, 36, 0, 1, 13, 12, 0.0006022876809393664, ["mov     [rbp+digits], 2", "mov     rax, [rbp+tp]", "mov     esi, [rax+1Ch]", "mov     rax, [rbp+tp]", "mov     eax, [rax+18h]", "lea     ecx, [rax+6]", "mov     edx, 92492493h", "mov     eax, ecx", "imul    edx", "lea     eax, [rdx+rcx]", "sar     eax, 2", "mov     edx, eax", "mov     eax, ecx", "sar     eax, 1Fh", "sub     edx, eax", "mov     eax, edx", "mov     edx, eax", "shl     edx, 3", "sub     edx, eax", "mov     eax, ecx", "sub     eax, edx", "sub     esi, eax", "mov     eax, esi", "lea     ecx, [rax+7]", "mov     edx, 92492493h", "mov     eax, ecx", "imul    edx", "lea     eax, [rdx+rcx]", "sar     eax, 2", "mov     edx, eax", "mov     eax, ecx", "sar     eax, 1Fh", "sub     edx, eax", "mov     eax, edx", "mov     [rbp+number_value], eax", "jmp     do_number"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~esi,[rax+0]", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "lea~ecx,[rax+0]", "mov~edx,0", "mov~eax,ecx", "imul~,edx", "lea~eax,<TAG>", "sar~eax,0", "mov~edx,eax", "mov~eax,ecx", "sar~eax,0", "sub~edx,eax", "mov~eax,edx", "mov~edx,eax", "shl~edx,0", "sub~edx,eax", "mov~eax,ecx", "sub~eax,edx", "sub~esi,eax", "mov~eax,esi", "lea~ecx,[rax+0]", "mov~edx,0", "mov~eax,ecx", "imul~,edx", "lea~eax,<TAG>", "sar~eax,0", "mov~edx,eax", "mov~eax,ecx", "sar~eax,0", "sub~edx,eax", "mov~eax,edx", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 12, 7, 0.004271687417754834, ["cmp     [rbp+modifier], 45h ; 'E'; jumptable 0000000000013C49 case 87", "jz      loc_15E34"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 439, 0, 0, 5, 0, 0, 14, 5, 0.0, ["mov     rax, [rbp+u]", "lea     rdx, [rax+1]", "mov     [rbp+u], rdx", "mov     edx, [rbp+modifier]", "mov     [rax], dl"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~edx,[rbp+0]", "mov~<TAG>,dl"]], [1, 0, 439, 1, 1, 8, 0, 2, 33, 6, 0.0033049903836420693, ["mov     rdx, [rbp+_delta_4]; n", "mov     rax, [rbp+p]", "mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _memset", "mov     rax, [rbp+_delta_4]", "add     [rbp+p], rax", "jmp     short loc_148E0"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "add~[rbp+0],rax", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 12, 7, 0.004271687417754834, ["cmp     [rbp+modifier], 45h ; 'E'; jumptable 0000000000013C49 case 119", "jz      loc_15E37"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 1, 1, 8, 0, 2, 17, 8, 0.0033049903836420693, ["mov     rdx, [rbp+_delta_8]; n", "mov     rax, [rbp+p]", "mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _memset", "mov     rax, [rbp+_delta_8]", "add     [rbp+p], rax", "jmp     short loc_150E5"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "add~[rbp+0],rax", "jmp~FOO"]], [0, 0, 439, 0, 0, 1, 0, 0, 21, 11, 0.001399433141006175, ["nop"], ["nop"]], [1, 0, 439, 0, 0, 2, 0, 1, 20, 12, 0.009145662516449033, ["cmp     [rbp+sec_diff], 0", "jnz     short loc_15D77"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 439, 0, 0, 5, 0, 1, 13, 12, 0.0006022876809393664, ["mov     [rbp+digits], 1", "mov     rax, [rbp+tp]", "mov     eax, [rax+18h]", "mov     [rbp+number_value], eax", "jmp     do_number"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~[rbp+0],eax", "jmp~FOO"]], [0, 1, 439, 1, 1, 7, 0, 1, 34, 6, 0.0011033505415527888, ["mov     rdx, [rbp+_delta_4]; n", "mov     rax, [rbp+p]", "mov     esi, 20h ; ' '; c", "mov     rdi, rax; s", "call    _memset", "mov     rax, [rbp+_delta_4]", "add     [rbp+p], rax"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,<STR>", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "add~[rbp+0],rax"]], [0, 1, 439, 1, 1, 7, 0, 1, 18, 8, 0.0011033505415527888, ["mov     rdx, [rbp+_delta_8]; n", "mov     rax, [rbp+p]", "mov     esi, 20h ; ' '; c", "mov     rdi, rax; s", "call    _memset", "mov     rax, [rbp+_delta_8]", "add     [rbp+p], rax"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,<STR>", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "add~[rbp+0],rax"]], [1, 0, 439, 0, 0, 2, 0, 1, 12, 7, 0.018977123190606338, ["cmp     [rbp+modifier], 45h ; 'E'; jumptable 0000000000013C49 case 89", "jz      loc_14055"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 13, 7, 0.015358335863953843, ["cmp     [rbp+modifier], 4Fh ; 'O'", "jz      loc_15E3A"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 1, 0, 4, 0, 0, 15, 7, 0.013199716570503088, ["mov     rax, [rbp+p]", "mov     byte ptr [rax], 0Ah", "mov     rax, [rbp+_n_8]", "add     [rbp+p], rax"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~rax,[rbp+0]", "add~[rbp+0],rax"]], [0, 0, 439, 1, 0, 5, 0, 0, 31, 5, 0.013199716570503088, ["mov     rax, [rbp+p]", "movzx   edx, [rbp+sign_char]", "mov     [rax], dl", "mov     rax, [rbp+_n_4]", "add     [rbp+p], rax"], ["mov~rax,[rbp+0]", "movzx~edx,[rbp+0]", "mov~<TAG>,dl", "mov~rax,[rbp+0]", "add~[rbp+0],rax"]], [1, 0, 439, 0, 0, 2, 0, 1, 17, 9, 0.004271687417754834, ["cmp     [rbp+to_uppcase], 0", "jz      short loc_15B47"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 16, 9, 0.023696730438303473, ["cmp     [rbp+to_lowcase], 0", "jz      short loc_15B1C"], ["cmp~[rbp+0],0", "jz~FOO"]], [3, 1, 445, 1, 0, 29, 1, 1, 0, 8, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 6F0h", "mov     [rbp+s], rdi", "mov     [rbp+maxsize], rsi", "mov     [rbp+format], rdx", "mov     [rbp+tp], rcx", "mov     eax, r8d", "mov     [rbp+yr_spec], r9d", "mov     [rbp+upcase], al", "mov     rax, [rbp+arg_8]", "mov     [rbp+tzset_called], rax", "mov     rax, [rbp+arg_10]", "mov     [rbp+tz], rax", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     rax, [rbp+tp]", "mov     eax, [rax+8]", "mov     [rbp+hour12], eax", "mov     [rbp+i], 0", "mov     rax, [rbp+s]", "mov     [rbp+p], rax", "mov     [rbp+zone], 0", "mov     rax, [rbp+tp]", "mov     rax, [rax+30h]", "mov     [rbp+zone], rax", "cmp     [rbp+zone], 0", "jnz     short loc_13917"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~eax,r8d", "mov~[rbp+0],r9d", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~[rbp+0],eax", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 439, 1, 0, 3, 0, 1, 14, 6, 0.02065155042683133, ["mov     rax, [rbp+_incr_8]", "add     [rbp+i], rax", "jmp     loc_16046"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax", "jmp~FOO"]], [0, 0, 439, 1, 0, 3, 0, 1, 30, 4, 0.019708472517461283, ["mov     rax, [rbp+_incr_4]", "add     [rbp+i], rax", "jmp     loc_14C00"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax", "jmp~FOO"]], [0, 0, 444, 0, 0, 2, 0, 0, 1, 8, 0.0, ["lea     rax, unk_1F934", "mov     [rbp+zone], rax"], ["lea~rax,<TAG>", "mov~[rbp+0],rax"]], [2, 0, 439, 0, 0, 2, 0, 0, 12, 8, 0.0, ["mov     [rbp+to_lowcase], 1; jumptable 0000000000013C49 case 80", "mov     [rbp+format_char], 70h ; 'p'"], ["mov~[rbp+0],0", "mov~[rbp+0],0"]], [1, 0, 443, 0, 0, 2, 0, 1, 1, 7, 0.004484259540439316, ["cmp     [rbp+hour12], 0Ch", "jle     short loc_13929"], ["cmp~[rbp+0],0", "jle~FOO"]], [1, 0, 440, 1, 0, 2, 0, 1, 2, 6, 0.0033404190707561495, ["sub     [rbp+hour12], 0Ch", "jmp     short loc_1393C"], ["sub~[rbp+0],0", "jmp~FOO"]], [0, 0, 439, 1, 0, 6, 0, 0, 23, 3, 0.03574881060836117, ["mov     eax, [rbp+digits]", "movsxd  rdx, eax", "mov     rax, [rbp+maxsize]", "sub     rax, [rbp+i]", "cmp     rdx, rax", "jb      short loc_14937"], ["mov~eax,[rbp+0]", "movsxd~rdx,eax", "mov~rax,[rbp+0]", "sub~rax,[rbp+0]", "cmp~rdx,rax", "jb~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 22, 4, 0.07564783885008605, ["cmp     [rbp+pad], 5Fh ; '_'", "jnz     loc_14911"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 441, 0, 0, 2, 0, 1, 2, 6, 0.0033556027938050413, ["cmp     [rbp+hour12], 0", "jnz     short loc_1393C"], ["cmp~[rbp+0],0", "jnz~FOO"]], [5, 0, 439, 0, 0, 10, 0, 1, 5, 4, 0.7621166109930155, ["mov     [rbp+pad], 0", "mov     [rbp+digits], 0", "mov     [rbp+to_lowcase], 0", "movzx   eax, [rbp+upcase]", "mov     [rbp+to_uppcase], al", "mov     [rbp+change_case], 0", "mov     rax, [rbp+f]", "movzx   eax, byte ptr [rax]", "cmp     al, 25h ; '%'", "jz      loc_13AC7"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "movzx~eax,[rbp+0]", "mov~[rbp+0],al", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 24, 4, 0.033652191517360056, ["cmp     [rbp+sign_char], 0", "jz      loc_14A73"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 440, 0, 0, 1, 0, 0, 3, 6, 0.0, ["mov     [rbp+hour12], 0Ch"], ["mov~[rbp+0],0"]], [3, 0, 439, 2, 0, 16, 0, 0, 15, 3, 0.03341431318959409, ["mov     rax, [rbp+len_0]", "sub     rax, 1", "mov     [rbp+_n_2], rax", "mov     eax, 0", "cmp     [rbp+width], 0", "cmovns  eax, [rbp+width]", "cdqe", "mov     [rbp+_w_2], rax", "mov     rax, [rbp+_w_2]", "cmp     [rbp+_n_2], rax", "cmovnb  rax, [rbp+_n_2]", "mov     [rbp+_incr_2], rax", "mov     rax, [rbp+maxsize]", "sub     rax, [rbp+i]", "cmp     [rbp+_incr_2], rax", "jb      short loc_14175"], ["mov~rax,[rbp+0]", "sub~rax,0", "mov~[rbp+0],rax", "mov~eax,0", "cmp~[rbp+0],0", "cmovns~eax,[rbp+0]", "cdqe~", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "cmovnb~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "sub~rax,[rbp+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [5, 0, 439, 5, 0, 13, 0, 1, 12, 11, 0.018559570806761818, ["mov     [rbp+digits], 1; jumptable 0000000000013C49 case 113", "mov     [rbp+negative_number], 0", "mov     rax, [rbp+tp]", "mov     edx, [rax+10h]", "mov     eax, edx", "shl     eax, 2", "add     eax, edx", "add     eax, eax", "add     eax, edx", "sar     eax, 5", "add     eax, 1", "mov     [rbp+u_number_value], eax", "jmp     do_signed_number"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~edx,[rax+0]", "mov~eax,edx", "shl~eax,0", "add~eax,edx", "add~eax,eax", "add~eax,edx", "sar~eax,0", "add~eax,0", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 16, 8, 0.029522218848061547, ["cmp     [rbp+p], 0", "jz      loc_142A9"], ["cmp~[rbp+0],0", "jz~FOO"]], [5, 0, 439, 4, 0, 18, 0, 0, 13, 15, 0.021624152242129772, ["mov     rax, [rbp+tp]", "mov     ecx, [rax+14h]", "mov     edx, 51EB851Fh", "mov     eax, ecx", "imul    edx", "sar     edx, 5", "mov     eax, ecx", "sar     eax, 1Fh", "sub     edx, eax", "mov     eax, edx", "mov     [rbp+yy_0], eax", "mov     eax, [rbp+yy_0]", "imul    eax, 64h", "sub     ecx, eax", "mov     eax, ecx", "mov     [rbp+yy_0], eax", "cmp     [rbp+yy_0], 0", "jns     short loc_159AA"], ["mov~rax,[rbp+0]", "mov~ecx,[rax+0]", "mov~edx,0", "mov~eax,ecx", "imul~,edx", "sar~edx,0", "mov~eax,ecx", "sar~eax,0", "sub~edx,eax", "mov~eax,edx", "mov~[rbp+0],eax", "mov~eax,[rbp+0]", "imul~eax,,0", "sub~ecx,eax", "mov~eax,ecx", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jns~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 18, 8, 0.01881263285757668, ["cmp     rax, 2", "jz      short tz_hh_mm_ss"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 0, 17, 9, 0.022198603097479504, ["cmp     rax, 1", "jb      short loc_15D16"], ["cmp~rax,0", "jb~FOO"]], [0, 0, 439, 0, 0, 3, 0, 1, 12, 5, 0.012389918007895536, ["lea     rax, aHM; jumptable 0000000000013C49 case 82", "mov     [rbp+subfmt], rax", "jmp     subformat"], ["lea~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 17, 11, 0.023241218746836725, ["cmp     [rbp+digits], 0", "jnz     loc_14219"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 439, 0, 0, 4, 0, 1, 14, 17, 0.006397408644599656, ["mov     rax, [rbp+tp]", "mov     eax, [rax+14h]", "cmp     eax, 0FFFFF894h", "jge     short loc_1599B"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "cmp~eax,0", "jge~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 12, 7, 0.004271687417754834, ["cmp     [rbp+modifier], 45h ; 'E'; jumptable 0000000000013C49 case 83", "jz      loc_15E2B"], ["cmp~[rbp+0],0", "jz~FOO"]], [3, 0, 439, 1, 0, 14, 0, 0, 25, 3, 0.021201538617268957, ["mov     [rbp+_n_5], 1", "mov     eax, 0", "cmp     [rbp+width], 0", "cmovns  eax, [rbp+width]", "cdqe", "mov     [rbp+_w_5], rax", "mov     rax, [rbp+_w_5]", "cmp     [rbp+_n_5], rax", "cmovnb  rax, [rbp+_n_5]", "mov     [rbp+_incr_5], rax", "mov     rax, [rbp+maxsize]", "sub     rax, [rbp+i]", "cmp     [rbp+_incr_5], rax", "jb      short loc_149A3"], ["mov~[rbp+0],0", "mov~eax,0", "cmp~[rbp+0],0", "cmovns~eax,[rbp+0]", "cdqe~", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "cmovnb~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "sub~rax,[rbp+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [0, 0, 439, 0, 0, 3, 0, 0, 18, 11, 0.008518068630428182, ["mov     rax, [rbp+_n_2]", "cmp     rax, [rbp+_w_2]", "jnb     short loc_14219"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 439, 1, 0, 2, 0, 0, 15, 16, 0.0021662111549752, ["mov     eax, [rbp+yy_0]", "add     eax, 64h ; 'd'"], ["mov~eax,[rbp+0]", "add~eax,0"]], [0, 0, 439, 0, 0, 1, 0, 0, 16, 15, 0.0066251644903330305, ["mov     [rbp+yy_0], eax"], ["mov~[rbp+0],eax"]], [0, 0, 439, 0, 0, 3, 0, 1, 15, 16, 0.0021662111549752, ["mov     eax, [rbp+yy_0]", "neg     eax", "jmp     short loc_159A4"], ["mov~eax,[rbp+0]", "neg~eax", "jmp~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 13, 6, 0.0016044134021662112, ["nop", "jmp     short bad_format; jumptable 0000000000013C49 default case"], ["nop", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 12, 7, 0.004271687417754834, ["cmp     [rbp+modifier], 45h ; 'E'; jumptable 0000000000013C49 case 73", "jz      loc_15E16"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 26, 7, 0.019101123595505618, ["cmp     [rbp+p], 0", "jz      loc_14A65"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 0, 0, 5, 0, 1, 13, 12, 0.0006022876809393664, ["mov     [rbp+digits], 2", "mov     rax, [rbp+tp]", "mov     eax, [rax]", "mov     [rbp+number_value], eax", "jmp     do_number"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~eax,<TAG>", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 439, 0, 0, 1, 0, 0, 17, 11, 0.05267739649762122, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 439, 0, 0, 2, 0, 1, 16, 12, 0.06424739346087661, ["cmp     [rbp+pad], 2Bh ; '+'", "jnz     short loc_14449"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 439, 0, 0, 3, 0, 1, 20, 12, 2.0244964065188786e-05, ["mov     eax, [rbp+digits]", "cmp     eax, [rbp+width]", "jge     short loc_14449"], ["mov~eax,[rbp+0]", "cmp~eax,[rbp+0]", "jge~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 27, 8, 0.01274420487903634, ["cmp     [rbp+digits], 0", "jnz     loc_14A47"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 439, 1, 0, 6, 0, 1, 19, 12, 0.006397408644599656, ["mov     eax, [rbp+width]", "cdqe", "sub     rax, [rbp+_n_2]", "mov     [rbp+_delta_2], rax", "cmp     [rbp+pad], 30h ; '0'", "jz      short loc_141C5"], ["mov~eax,[rbp+0]", "cdqe~", "sub~rax,[rbp+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 20, 12, 0.002135843708877417, ["cmp     [rbp+pad], 2Bh ; '+'", "jnz     short loc_141F0"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 439, 0, 0, 3, 0, 0, 28, 8, 0.008518068630428182, ["mov     rax, [rbp+_n_5]", "cmp     rax, [rbp+_w_5]", "jnb     short loc_14A47"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 439, 1, 0, 3, 0, 1, 8, 6, 0.019779329891689443, ["mov     rax, [rbp+_incr]", "add     [rbp+i], rax", "jmp     loc_16046"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax", "jmp~FOO"]], [0, 0, 439, 1, 0, 3, 0, 1, 15, 6, 0.02175321388804535, ["mov     rax, [rbp+_incr_0]", "add     [rbp+i], rax", "jmp     loc_16046"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax", "jmp~FOO"]], [0, 0, 439, 1, 0, 3, 0, 1, 24, 6, 0.18405202955764755, ["mov     rax, [rbp+_incr_7]", "add     [rbp+i], rax", "jmp     loc_16046"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax", "jmp~FOO"]], [0, 0, 439, 1, 0, 3, 0, 1, 14, 6, 0.02065155042683133, ["mov     rax, [rbp+_incr_9]", "add     [rbp+i], rax", "jmp     loc_16046"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax", "jmp~FOO"]], [0, 0, 439, 1, 0, 3, 0, 1, 15, 6, 0.03474541957688025, ["mov     rax, [rbp+_incr_10]", "add     [rbp+i], rax", "jmp     loc_16046"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 12, 4, 0.03572223909302561, ["cmp     [rbp+change_case], 0; jumptable 0000000000013C49 case 90", "jz      short loc_159E3"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 439, 0, 0, 2, 0, 0, 13, 4, 0.0, ["mov     [rbp+to_uppcase], 0", "mov     [rbp+to_lowcase], 1"], ["mov~[rbp+0],0", "mov~[rbp+0],0"]], [3, 0, 439, 1, 0, 14, 0, 0, 6, 3, 0.021272395991497117, ["mov     [rbp+_n], 1", "mov     eax, 0", "cmp     [rbp+width], 0", "cmovns  eax, [rbp+width]", "cdqe", "mov     [rbp+_w], rax", "mov     rax, [rbp+_w]", "cmp     [rbp+_n], rax", "cmovnb  rax, [rbp+_n]", "mov     [rbp+_incr], rax", "mov     rax, [rbp+maxsize]", "sub     rax, [rbp+i]", "cmp     [rbp+_incr], rax", "jb      short loc_139EF"], ["mov~[rbp+0],0", "mov~eax,0", "cmp~[rbp+0],0", "cmovns~eax,[rbp+0]", "cdqe~", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "cmovnb~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "sub~rax,[rbp+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [1, 0, 439, 1, 0, 6, 0, 1, 29, 9, 0.006397408644599656, ["mov     eax, [rbp+width]", "cdqe", "sub     rax, [rbp+_n_5]", "mov     [rbp+_delta_5], rax", "cmp     [rbp+pad], 30h ; '0'", "jz      short loc_149F3"], ["mov~eax,[rbp+0]", "cdqe~", "sub~rax,[rbp+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 1, 1, 8, 0, 2, 20, 11, 0.0033049903836420693, ["mov     rdx, [rbp+_delta_2]; n", "mov     rax, [rbp+p]", "mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _memset", "mov     rax, [rbp+_delta_2]", "add     [rbp+p], rax", "jmp     short loc_14219"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "add~[rbp+0],rax", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 30, 9, 0.002135843708877417, ["cmp     [rbp+pad], 2Bh ; '+'", "jnz     short loc_14A1E"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 7, 7, 0.01917198096973378, ["cmp     [rbp+p], 0", "jz      loc_13AB4"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 8, 8, 0.01274420487903634, ["cmp     [rbp+digits], 0", "jnz     loc_13A93"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 439, 0, 0, 3, 0, 1, 20, 5, 0.19486790160947465, ["mov     [rbp+sign_char], al", "cmp     [rbp+pad], 2Dh ; '-'", "jnz     loc_146F3"], ["mov~[rbp+0],al", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 19, 6, 0.1881516347808483, ["mov     eax, 2Dh ; '-'", "jmp     short loc_1459F"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 20, 6, 0.0011033505415527888, ["mov     eax, 2Bh ; '+'", "jmp     short loc_1459F"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 439, 0, 0, 1, 0, 0, 20, 6, 0.0011033505415527888, ["mov     eax, 0"], ["mov~eax,0"]], [0, 1, 439, 1, 1, 7, 0, 1, 21, 11, 0.0011033505415527888, ["mov     rdx, [rbp+_delta_2]; n", "mov     rax, [rbp+p]", "mov     esi, 20h ; ' '; c", "mov     rdi, rax; s", "call    _memset", "mov     rax, [rbp+_delta_2]", "add     [rbp+p], rax"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,<STR>", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "add~[rbp+0],rax"]], [0, 0, 439, 0, 0, 3, 0, 0, 9, 8, 0.008518068630428182, ["mov     rax, [rbp+_n]", "cmp     rax, [rbp+_w]", "jnb     short loc_13A93"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 439, 1, 1, 8, 0, 2, 30, 8, 0.0033049903836420693, ["mov     rdx, [rbp+_delta_5]; n", "mov     rax, [rbp+p]", "mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _memset", "mov     rax, [rbp+_delta_5]", "add     [rbp+p], rax", "jmp     short loc_14A47"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "add~[rbp+0],rax", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 18, 10, 0.023696730438303473, ["cmp     [rbp+to_lowcase], 0", "jz      short loc_14248"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 1, 0, 6, 0, 1, 10, 9, 0.006397408644599656, ["mov     eax, [rbp+width]", "cdqe", "sub     rax, [rbp+_n]", "mov     [rbp+_delta], rax", "cmp     [rbp+pad], 30h ; '0'", "jz      short loc_13A3F"], ["mov~eax,[rbp+0]", "cdqe~", "sub~rax,[rbp+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 11, 9, 0.002135843708877417, ["cmp     [rbp+pad], 2Bh ; '+'", "jnz     short loc_13A6A"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 1, 439, 1, 1, 7, 0, 1, 31, 8, 0.0011033505415527888, ["mov     rdx, [rbp+_delta_5]; n", "mov     rax, [rbp+p]", "mov     esi, 20h ; ' '; c", "mov     rdi, rax; s", "call    _memset", "mov     rax, [rbp+_delta_5]", "add     [rbp+p], rax"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,<STR>", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "add~[rbp+0],rax"]], [2, 0, 439, 1, 1, 17, 0, 1, 13, 3, 0.035874076323514525, ["mov     rax, [rbp+zone]", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+_n_10], rax", "mov     eax, 0", "cmp     [rbp+width], 0", "cmovns  eax, [rbp+width]", "cdqe", "mov     [rbp+_w_10], rax", "mov     rax, [rbp+_w_10]", "cmp     [rbp+_n_10], rax", "cmovnb  rax, [rbp+_n_10]", "mov     [rbp+_incr_10], rax", "mov     rax, [rbp+maxsize]", "sub     rax, [rbp+i]", "cmp     [rbp+_incr_10], rax", "jb      short loc_15A4D"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~eax,0", "cmp~[rbp+0],0", "cmovns~eax,[rbp+0]", "cdqe~", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "cmovnb~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "sub~rax,[rbp+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [1, 0, 439, 1, 1, 8, 0, 2, 19, 9, 0.017360056685899385, ["lea     rax, [rbp+ubuf]", "add     rax, 1", "mov     rdx, [rbp+_n_2]; len", "mov     rcx, [rbp+p]", "mov     rsi, rax; src", "mov     rdi, rcx; dest", "call    memcpy_lowcase", "jmp     short loc_1429B"], ["lea~rax,[rbp+0]", "add~rax,0", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rsi,rax", "mov~rdi,rcx", "call~FOO", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 19, 10, 0.004271687417754834, ["cmp     [rbp+to_uppcase], 0", "jz      short loc_14277"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 14, 7, 0.0337584775787023, ["cmp     [rbp+p], 0", "jz      loc_15B75"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 14, 13, 0.012683469986840773, ["cmp     [rbp+pad], 0", "jnz     short loc_14472"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 439, 0, 0, 5, 0, 1, 13, 14, 0.0027246347471066574, ["mov     [rbp+digits], 2", "mov     rax, [rbp+tp]", "mov     eax, [rax+0Ch]", "mov     [rbp+number_value], eax", "jmp     short do_number_spacepad"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 439, 0, 0, 5, 0, 1, 13, 14, 0.0027246347471066574, ["mov     [rbp+digits], 2", "mov     rax, [rbp+tp]", "mov     eax, [rax+8]", "mov     [rbp+number_value], eax", "jmp     do_number_spacepad"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 439, 0, 0, 4, 0, 1, 13, 14, 0.0027246347471066574, ["mov     [rbp+digits], 2", "mov     eax, [rbp+hour12]", "mov     [rbp+number_value], eax", "jmp     do_number_spacepad"], ["mov~[rbp+0],0", "mov~eax,[rbp+0]", "mov~[rbp+0],eax", "jmp~FOO"]], [0, 0, 439, 1, 0, 5, 0, 0, 28, 7, 0.013199716570503088, ["mov     rax, [rbp+p]", "movzx   edx, [rbp+sign_char]", "mov     [rax], dl", "mov     rax, [rbp+_n_5]", "add     [rbp+p], rax"], ["mov~rax,[rbp+0]", "movzx~edx,[rbp+0]", "mov~<TAG>,dl", "mov~rax,[rbp+0]", "add~[rbp+0],rax"]], [1, 0, 439, 0, 0, 2, 0, 1, 15, 10, 0.023241218746836725, ["cmp     [rbp+digits], 0", "jnz     loc_15AF1"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 439, 1, 1, 8, 0, 2, 11, 8, 0.0033049903836420693, ["mov     rdx, [rbp+_delta]; n", "mov     rax, [rbp+p]", "mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _memset", "mov     rax, [rbp+_delta]", "add     [rbp+p], rax", "jmp     short loc_13A93"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "add~[rbp+0],rax", "jmp~FOO"]], [0, 0, 439, 1, 0, 2, 0, 0, 27, 6, 0.019708472517461283, ["mov     rax, [rbp+_incr_5]", "add     [rbp+i], rax"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax"]], [1, 0, 439, 1, 1, 8, 0, 2, 20, 9, 0.0011033505415527888, ["lea     rax, [rbp+ubuf]", "add     rax, 1", "mov     rdx, [rbp+_n_2]; len", "mov     rcx, [rbp+p]", "mov     rsi, rax; src", "mov     rdi, rcx; dest", "call    memcpy_uppcase", "jmp     short loc_1429B"], ["lea~rax,[rbp+0]", "add~rax,0", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rsi,rax", "mov~rdi,rcx", "call~FOO", "jmp~FOO"]], [0, 0, 439, 0, 0, 3, 0, 0, 16, 10, 0.008518068630428182, ["mov     rax, [rbp+_n_10]", "cmp     rax, [rbp+_w_10]", "jnb     short loc_15AF1"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 25, 5, 0.0323109626480413, ["cmp     [rbp+p], 0", "jz      short loc_14AA9"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 1, 439, 1, 1, 7, 0, 1, 12, 8, 0.0011033505415527888, ["mov     rdx, [rbp+_delta]; n", "mov     rax, [rbp+p]", "mov     esi, 20h ; ' '; c", "mov     rdi, rax; s", "call    _memset", "mov     rax, [rbp+_delta]", "add     [rbp+p], rax"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,<STR>", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "add~[rbp+0],rax"]], [1, 0, 439, 1, 0, 6, 0, 1, 17, 11, 0.006397408644599656, ["mov     eax, [rbp+width]", "cdqe", "sub     rax, [rbp+_n_10]", "mov     [rbp+_delta_10], rax", "cmp     [rbp+pad], 30h ; '0'", "jz      short loc_15A9D"], ["mov~eax,[rbp+0]", "cdqe~", "sub~rax,[rbp+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 1, 1, 7, 0, 1, 20, 9, 0.0011033505415527888, ["lea     rax, [rbp+ubuf]", "add     rax, 1", "mov     rdx, [rbp+_n_2]; n", "mov     rcx, [rbp+p]", "mov     rsi, rax; src", "mov     rdi, rcx; dest", "call    _memcpy"], ["lea~rax,[rbp+0]", "add~rax,0", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rsi,rax", "mov~rdi,rcx", "call~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 18, 11, 0.002135843708877417, ["cmp     [rbp+pad], 2Bh ; '+'", "jnz     short loc_15AC8"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 439, 0, 1, 7, 0, 2, 17, 8, 0.017360056685899385, ["mov     rdx, [rbp+_n_10]; len", "mov     rcx, [rbp+zone]", "mov     rax, [rbp+p]", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    memcpy_lowcase", "jmp     short loc_15B67"], ["mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [0, 0, 439, 1, 0, 2, 0, 0, 20, 8, 0.024076323514525762, ["mov     rax, [rbp+_n_2]", "add     [rbp+p], rax"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax"]], [0, 0, 439, 1, 0, 6, 0, 0, 9, 7, 0.013199716570503088, ["mov     rax, [rbp+f]", "movzx   edx, byte ptr [rax]", "mov     rax, [rbp+p]", "mov     [rax], dl", "mov     rax, [rbp+_n]", "add     [rbp+p], rax"], ["mov~rax,[rbp+0]", "movzx~edx,<TAG>", "mov~rax,[rbp+0]", "mov~<TAG>,dl", "mov~rax,[rbp+0]", "add~[rbp+0],rax"]], [1, 0, 439, 1, 0, 5, 0, 1, 26, 4, 0.032462799878530214, ["mov     eax, [rbp+padding]", "cdqe", "add     [rbp+i], rax", "mov     [rbp+width], 0", "jmp     loc_14C00"], ["mov~eax,[rbp+0]", "cdqe~", "add~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 439, 1, 1, 9, 0, 1, 26, 5, 0.0, ["mov     eax, [rbp+padding]", "movsxd  rdx, eax; n", "mov     rax, [rbp+p]", "mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _memset", "mov     eax, [rbp+padding]", "cdqe", "add     [rbp+p], rax"], ["mov~eax,[rbp+0]", "movsxd~rdx,eax", "mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~eax,[rbp+0]", "cdqe~", "add~[rbp+0],rax"]], [8, 0, 439, 8, 0, 27, 0, 1, 13, 12, 0.12507338799473633, ["mov     rcx, [rbp+t]", "mov     rdx, 6666666666666667h", "mov     rax, rcx", "imul    rdx", "sar     rdx, 2", "mov     rax, rcx", "sar     rax, 3Fh", "sub     rdx, rax", "mov     rax, rdx", "shl     rax, 2", "add     rax, rdx", "add     rax, rax", "sub     rcx, rax", "mov     rdx, rcx", "mov     [rbp+d], edx", "mov     rcx, [rbp+t]", "mov     rdx, 6666666666666667h", "mov     rax, rcx", "imul    rdx", "sar     rdx, 2", "mov     rax, rcx", "sar     rax, 3Fh", "sub     rdx, rax", "mov     rax, rdx", "mov     [rbp+t], rax", "cmp     [rbp+negative_number], 0", "jz      short loc_152D5"], ["mov~rcx,[rbp+0]", "mov~rdx,0", "mov~rax,rcx", "imul~,rdx", "sar~rdx,0", "mov~rax,rcx", "sar~rax,0", "sub~rdx,rax", "mov~rax,rdx", "shl~rax,0", "add~rax,rdx", "add~rax,rax", "sub~rcx,rax", "mov~rdx,rcx", "mov~[rbp+0],edx", "mov~rcx,[rbp+0]", "mov~rdx,0", "mov~rax,rcx", "imul~,rdx", "sar~rdx,0", "mov~rax,rcx", "sar~rax,0", "sub~rdx,rax", "mov~rax,rdx", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 439, 1, 0, 5, 0, 1, 15, 10, 0.1253011438404697, ["sub     [rbp+bufp], 1", "mov     rax, [rbp+bufp]", "mov     [rax], dl", "cmp     [rbp+t], 0", "jnz     loc_1524C"], ["sub~[rbp+0],0", "mov~rax,[rbp+0]", "mov~<TAG>,dl", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 439, 1, 1, 27, 0, 1, 12, 13, 0.12496204069237778, ["mov     rcx, [rbp+tp]; jumptable 0000000000013C49 case 115", "mov     rax, [rcx]", "mov     rdx, [rcx+8]", "mov     qword ptr [rbp+ltm.tm_sec], rax", "mov     qword ptr [rbp+ltm.tm_hour], rdx", "mov     rax, [rcx+10h]", "mov     rdx, [rcx+18h]", "mov     qword ptr [rbp+ltm.tm_mon], rax", "mov     qword ptr [rbp+ltm.tm_wday], rdx", "mov     rax, [rcx+20h]", "mov     rdx, [rcx+28h]", "mov     qword ptr [rbp+ltm.tm_isdst], rax", "mov     [rbp+ltm.tm_gmtoff], rdx", "mov     rax, [rcx+30h]", "mov     [rbp+ltm.tm_zone], rax", "lea     rdx, [rbp+ltm]", "mov     rax, [rbp+tz]", "mov     rsi, rdx; tm", "mov     rdi, rax; tz", "call    mktime_z", "mov     [rbp+t], rax", "lea     rax, [rbp+ubuf]", "add     rax, 17h", "mov     [rbp+bufp], rax", "mov     rax, [rbp+t]", "shr     rax, 3Fh", "mov     [rbp+negative_number], al"], ["mov~rcx,[rbp+0]", "mov~rax,<TAG>", "mov~rdx,[rcx+0]", "mov~[word ptr [rbp+0],rax", "mov~[word ptr [rbp+0],rdx", "mov~rax,[rcx+0]", "mov~rdx,[rcx+0]", "mov~[word ptr [rbp+0],rax", "mov~[word ptr [rbp+0],rdx", "mov~rax,[rcx+0]", "mov~rdx,[rcx+0]", "mov~[word ptr [rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,[rcx+0]", "mov~[rbp+0],rax", "lea~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "add~rax,0", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "shr~rax,0", "mov~[rbp+0],al"]], [1, 0, 439, 1, 1, 8, 0, 2, 18, 10, 0.0033049903836420693, ["mov     rdx, [rbp+_delta_10]; n", "mov     rax, [rbp+p]", "mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _memset", "mov     rax, [rbp+_delta_10]", "add     [rbp+p], rax", "jmp     short loc_15AF1"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "add~[rbp+0],rax", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 22, 4, 0.02523281708674967, ["cmp     [rbp+sign_char], 0", "jz      loc_14C00"], ["cmp~[rbp+0],0", "jz~FOO"]], [3, 0, 439, 4, 0, 16, 0, 1, 21, 5, 0.10294564227148498, ["mov     edx, [rbp+digits]", "lea     rax, [rbp+ubuf]", "add     rax, 17h", "mov     rcx, rax", "mov     rax, [rbp+bufp]", "sub     rcx, rax", "mov     rax, rcx", "sub     edx, eax", "cmp     [rbp+sign_char], 0", "setnz   al", "movzx   eax, al", "sub     edx, eax", "mov     eax, edx", "mov     [rbp+padding], eax", "cmp     [rbp+padding], 0", "jle     loc_14AC4"], ["mov~edx,[rbp+0]", "lea~rax,[rbp+0]", "add~rax,0", "mov~rcx,rax", "mov~rax,[rbp+0]", "sub~rcx,rax", "mov~rax,rcx", "sub~edx,eax", "cmp~[rbp+0],0", "setnz~al", "movzx~eax,al", "sub~edx,eax", "mov~eax,edx", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jle~FOO"]], [1, 0, 439, 1, 0, 6, 0, 1, 14, 11, 0.06150420083004353, ["mov     eax, [rbp+d]", "mov     edx, 30h ; '0'", "sub     edx, eax", "mov     eax, edx", "mov     edx, eax", "jmp     short loc_152E0"], ["mov~eax,[rbp+0]", "mov~edx,0", "sub~edx,eax", "mov~eax,edx", "mov~edx,eax", "jmp~FOO"]], [1, 0, 439, 1, 0, 3, 0, 0, 14, 11, 0.06150420083004353, ["mov     eax, [rbp+d]", "add     eax, 30h ; '0'", "mov     edx, eax"], ["mov~eax,[rbp+0]", "add~eax,0", "mov~edx,eax"]], [3, 0, 439, 2, 0, 7, 0, 1, 6, 9, 0.7476364004453893, ["add     [rbp+f], 1", "mov     rax, [rbp+f]", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "sub     eax, 23h ; '#'; switch 61 cases", "cmp     eax, 3Ch ; '<'", "ja      short loc_13B2E; jumptable 0000000000013B05 default case"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "movsx~eax,al", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [0, 0, 439, 0, 0, 1, 0, 1, 9, 10, 0.006640348213381921, ["jmp     loc_13AC7"], ["jmp~FOO"]], [0, 1, 439, 1, 1, 7, 0, 1, 19, 10, 0.0011033505415527888, ["mov     rdx, [rbp+_delta_10]; n", "mov     rax, [rbp+p]", "mov     esi, 20h ; ' '; c", "mov     rdi, rax; s", "call    _memset", "mov     rax, [rbp+_delta_10]", "add     [rbp+p], rax"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,<STR>", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "add~[rbp+0],rax"]], [1, 0, 439, 0, 0, 2, 0, 1, 16, 9, 0.023696730438303473, ["cmp     [rbp+to_lowcase], 0", "jz      short loc_15FB4"], ["cmp~[rbp+0],0", "jz~FOO"]], [3, 0, 439, 1, 0, 14, 0, 0, 23, 3, 0.021197742686506732, ["mov     [rbp+_n_6], 1", "mov     eax, 0", "cmp     [rbp+width], 0", "cmovns  eax, [rbp+width]", "cdqe", "mov     [rbp+_w_6], rax", "mov     rax, [rbp+_w_6]", "cmp     [rbp+_n_6], rax", "cmovnb  rax, [rbp+_n_6]", "mov     [rbp+_incr_6], rax", "mov     rax, [rbp+maxsize]", "sub     rax, [rbp+i]", "cmp     [rbp+_incr_6], rax", "jb      short loc_14B30"], ["mov~[rbp+0],0", "mov~eax,0", "cmp~[rbp+0],0", "cmovns~eax,[rbp+0]", "cdqe~", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "cmovnb~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "sub~rax,[rbp+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [0, 0, 439, 1, 0, 8, 0, 1, 7, 9, 0.008528191112460776, ["mov     eax, eax", "lea     rdx, ds:0[rax*4]", "lea     rax, off_1F958", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_1F958", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,eax", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [2, 0, 439, 0, 0, 4, 0, 1, 16, 9, 0.12534163376860008, ["mov     [rbp+digits], 1", "mov     [rbp+always_output_a_sign], 0", "nop", "jmp     do_number_sign_and_padding"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "nop", "jmp~FOO"]], [8, 0, 439, 7, 0, 27, 1, 0, 13, 16, 0.009064682660188278, ["mov     rax, [rbp+tp]", "mov     ecx, [rax+14h]", "mov     edx, 51EB851Fh", "mov     eax, ecx", "imul    edx", "sar     edx, 5", "mov     eax, ecx", "sar     eax, 1Fh", "sub     edx, eax", "mov     eax, edx", "add     eax, 13h", "mov     [rbp+century], eax", "mov     rax, [rbp+tp]", "mov     ecx, [rax+14h]", "mov     edx, 51EB851Fh", "mov     eax, ecx", "imul    edx", "sar     edx, 5", "mov     eax, ecx", "sar     eax, 1Fh", "sub     edx, eax", "mov     eax, edx", "imul    eax, 64h", "sub     ecx, eax", "mov     eax, ecx", "test    eax, eax", "jns     short loc_1432B"], ["mov~rax,[rbp+0]", "mov~ecx,[rax+0]", "mov~edx,0", "mov~eax,ecx", "imul~,edx", "sar~edx,0", "mov~eax,ecx", "sar~eax,0", "sub~edx,eax", "mov~eax,edx", "add~eax,0", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~ecx,[rax+0]", "mov~edx,0", "mov~eax,ecx", "imul~,edx", "sar~edx,0", "mov~eax,ecx", "sar~eax,0", "sub~edx,eax", "mov~eax,edx", "imul~eax,,0", "sub~ecx,eax", "mov~eax,ecx", "test~eax,eax", "jns~FOO"]], [0, 0, 439, 0, 0, 5, 0, 1, 8, 11, 0.0007102608226203712, ["mov     rax, [rbp+f]; jumptable 0000000000013B05 cases 43,45,48,95", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "mov     [rbp+pad], eax", "jmp     short loc_13B47"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "movsx~eax,al", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 14, 16, 0.002135843708877417, ["cmp     [rbp+century], 0", "jle     short loc_1432B"], ["cmp~[rbp+0],0", "jle~FOO"]], [0, 0, 439, 0, 0, 1, 0, 1, 13, 6, 0.00010375544083409252, ["jmp     bad_format; jumptable 0000000000013C49 default case"], ["jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 15, 15, 0.0011033505415527888, ["mov     eax, 1", "jmp     short loc_14330"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 439, 0, 0, 1, 0, 0, 14, 15, 0.005972264399230692, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 439, 0, 0, 2, 0, 1, 8, 11, 0.0007102608226203712, ["mov     [rbp+change_case], 1; jumptable 0000000000013B05 case 35", "jmp     short loc_13B47"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 439, 0, 0, 3, 0, 1, 12, 5, 0.012389918007895536, ["lea     rax, aHMS; jumptable 0000000000013C49 case 84", "mov     [rbp+subfmt], rax", "jmp     subformat"], ["lea~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 24, 5, 0.019101123595505618, ["cmp     [rbp+p], 0", "jz      loc_14BF2"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 439, 1, 0, 8, 0, 1, 7, 8, 0.7392347403583359, ["nop; jumptable 0000000000013B05 default case", "nop", "mov     rax, [rbp+f]", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "sub     eax, 30h ; '0'", "cmp     eax, 9", "ja      short loc_13BC2"], ["nop", "nop", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "movsx~eax,al", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [0, 0, 439, 0, 0, 1, 0, 1, 8, 12, 0.014768701285555219, ["jmp     short loc_13B4C"], ["jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 8, 11, 0.0007102608226203712, ["mov     [rbp+to_uppcase], 1; jumptable 0000000000013B05 case 94", "jmp     short loc_13B47"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 439, 0, 0, 1, 0, 0, 9, 11, 0.014844619900799678, ["mov     [rbp+width], 0"], ["mov~[rbp+0],0"]], [0, 0, 439, 0, 0, 3, 0, 0, 26, 6, 0.008518068630428182, ["mov     rax, [rbp+_n_6]", "cmp     rax, [rbp+_w_6]", "jnb     short loc_14BD4"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 25, 6, 0.01274420487903634, ["cmp     [rbp+digits], 0", "jnz     loc_14BD4"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 10, 10, 0.01500151837230489, ["cmp     [rbp+width], 0CCCCCCCh", "jg      short loc_13B7A"], ["cmp~[rbp+0],0", "jg~FOO"]], [3, 0, 439, 2, 0, 7, 0, 0, 12, 8, 0.01538111144852718, ["add     [rbp+f], 1", "mov     rax, [rbp+f]", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "sub     eax, 30h ; '0'", "cmp     eax, 9", "jbe     short loc_13B53"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "movsx~eax,al", "sub~eax,0", "cmp~eax,0", "jbe~FOO"]], [0, 0, 439, 0, 1, 6, 0, 1, 18, 8, 0.0011033505415527888, ["mov     rdx, [rbp+_n_10]; n", "mov     rcx, [rbp+zone]", "mov     rax, [rbp+p]", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    _memcpy"], ["mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 11, 10, 0.004266626176738537, ["cmp     [rbp+width], 0CCCCCCCh", "jnz     short loc_13B83"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 13, 6, 0.0016094746431825084, ["nop", "jmp     short bad_format; jumptable 0000000000013C49 default case"], ["nop", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 12, 7, 0.004271687417754834, ["cmp     [rbp+modifier], 45h ; 'E'; jumptable 0000000000013C49 case 109", "jz      loc_15E25"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 439, 1, 0, 2, 0, 0, 18, 7, 0.024076323514525762, ["mov     rax, [rbp+_n_10]", "add     [rbp+p], rax"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax"]], [0, 0, 439, 0, 1, 7, 0, 2, 18, 8, 0.0011033505415527888, ["mov     rdx, [rbp+_n_10]; len", "mov     rcx, [rbp+zone]", "mov     rax, [rbp+p]", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    memcpy_uppcase", "jmp     short loc_15B67"], ["mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 439, 1, 0, 6, 0, 1, 27, 7, 0.006397408644599656, ["mov     eax, [rbp+width]", "cdqe", "sub     rax, [rbp+_n_6]", "mov     [rbp+_delta_6], rax", "cmp     [rbp+pad], 30h ; '0'", "jz      short loc_14B80"], ["mov~eax,[rbp+0]", "cdqe~", "sub~rax,[rbp+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 439, 0, 0, 1, 0, 1, 13, 6, 0.00010375544083409252, ["jmp     bad_format; jumptable 0000000000013C49 default case"], ["jmp~FOO"]], [2, 0, 439, 1, 0, 6, 0, 1, 12, 10, 5.061241016297196e-06, ["mov     rax, [rbp+f]", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "sub     eax, 30h ; '0'", "cmp     eax, 7", "jle     short loc_13B83"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "movsx~eax,al", "sub~eax,0", "cmp~eax,0", "jle~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 28, 7, 0.002135843708877417, ["cmp     [rbp+pad], 2Bh ; '+'", "jnz     short loc_14BAB"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 11, 9, 0.00978337888450248, ["mov     [rbp+width], 7FFFFFFFh", "jmp     short loc_13BA5"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 12, 6, 0.004271687417754834, ["cmp     [rbp+modifier], 0; jumptable 0000000000013C49 case 68", "jnz     loc_15E07"], ["cmp~[rbp+0],0", "jnz~FOO"]], [3, 0, 439, 1, 0, 14, 0, 0, 12, 3, 0.022288861895603473, ["mov     [rbp+_n_9], 1; jumptable 0000000000013C49 case 116", "mov     eax, 0", "cmp     [rbp+width], 0", "cmovns  eax, [rbp+width]", "cdqe", "mov     [rbp+_w_9], rax", "mov     rax, [rbp+_w_9]", "cmp     [rbp+_n_9], rax", "cmovnb  rax, [rbp+_n_9]", "mov     [rbp+_incr_9], rax", "mov     rax, [rbp+maxsize]", "sub     rax, [rbp+i]", "cmp     [rbp+_incr_9], rax", "jb      short loc_1539A"], ["mov~[rbp+0],0", "mov~eax,0", "cmp~[rbp+0],0", "cmovns~eax,[rbp+0]", "cdqe~", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "cmovnb~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "sub~rax,[rbp+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 12, 9, 0.010628606134224113, ["mov     [rbp+colons], 1; jumptable 0000000000013C49 case 58", "jmp     short loc_15B9D"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 439, 0, 0, 3, 0, 1, 13, 5, 0.0021105375037959308, ["lea     rax, aMDY; \"%m/%d/%y\"", "mov     [rbp+subfmt], rax", "jmp     subformat"], ["lea~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 13, 7, 0.020044201504875663, ["cmp     [rbp+p], 0", "jz      loc_15456"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 1, 1, 8, 0, 2, 28, 6, 0.0033049903836420693, ["mov     rdx, [rbp+_delta_6]; n", "mov     rax, [rbp+p]", "mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _memset", "mov     rax, [rbp+_delta_6]", "add     [rbp+p], rax", "jmp     short loc_14BD4"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "add~[rbp+0],rax", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 14, 8, 0.01274420487903634, ["cmp     [rbp+digits], 0", "jnz     loc_1543E"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 1, 439, 1, 0, 6, 0, 1, 13, 8, 0.012921348314606743, ["mov     rdx, [rbp+f]", "mov     rax, [rbp+colons]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "cmp     al, 3Ah ; ':'", "jz      short loc_15B95"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "cmp~al,<STR>", "jz~FOO"]], [1, 0, 439, 1, 0, 1, 0, 0, 14, 9, 0.0, ["add     [rbp+colons], 1"], ["add~[rbp+0],0"]], [2, 0, 439, 5, 0, 11, 0, 0, 12, 9, 0.0033049903836420693, ["mov     edx, [rbp+width]", "mov     eax, edx", "shl     eax, 2", "add     eax, edx", "add     eax, eax", "mov     [rbp+width], eax", "mov     rax, [rbp+f]", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "sub     eax, 30h ; '0'", "add     [rbp+width], eax"], ["mov~edx,[rbp+0]", "mov~eax,edx", "shl~eax,0", "add~eax,edx", "add~eax,eax", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "movsx~eax,al", "sub~eax,0", "add~[rbp+0],eax"]], [1, 0, 439, 0, 0, 5, 0, 1, 13, 12, 0.0006022876809393664, ["mov     [rbp+digits], 2", "mov     rax, [rbp+tp]", "mov     eax, [rax+0Ch]", "mov     [rbp+number_value], eax", "jmp     do_number"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 12, 7, 0.004271687417754834, ["cmp     [rbp+modifier], 45h ; 'E'; jumptable 0000000000013C49 case 100", "jz      loc_15E0A"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 439, 0, 0, 3, 0, 0, 15, 8, 0.008518068630428182, ["mov     rax, [rbp+_n_9]", "cmp     rax, [rbp+_w_9]", "jnb     short loc_1543E"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 439, 1, 0, 6, 0, 1, 14, 7, 0.010856361979957487, ["mov     rdx, [rbp+f]", "mov     rax, [rbp+colons]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "cmp     al, 7Ah ; 'z'", "jnz     loc_15E3D"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [0, 1, 439, 1, 1, 7, 0, 1, 29, 6, 0.0011033505415527888, ["mov     rdx, [rbp+_delta_6]; n", "mov     rax, [rbp+p]", "mov     esi, 20h ; ' '; c", "mov     rdi, rax; s", "call    _memset", "mov     rax, [rbp+_delta_6]", "add     [rbp+p], rax"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,<STR>", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "add~[rbp+0],rax"]], [1, 0, 439, 0, 0, 2, 0, 1, 12, 7, 0.006378850760873233, ["cmp     [rbp+modifier], 45h ; 'E'; jumptable 0000000000013C49 case 101", "jz      loc_15E0D"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 0, 0, 5, 0, 1, 8, 7, 0.7399180078955361, ["mov     rax, [rbp+f]", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "cmp     eax, 45h ; 'E'", "jz      short loc_13BD9"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "movsx~eax,al", "cmp~eax,0", "jz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 9, 7, 0.002135843708877417, ["cmp     eax, 4Fh ; 'O'", "jnz     short loc_13BF9"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 439, 1, 0, 6, 0, 1, 16, 9, 0.006397408644599656, ["mov     eax, [rbp+width]", "cdqe", "sub     rax, [rbp+_n_9]", "mov     [rbp+_delta_9], rax", "cmp     [rbp+pad], 30h ; '0'", "jz      short loc_153EA"], ["mov~eax,[rbp+0]", "cdqe~", "sub~rax,[rbp+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 0, 0, 1, 0, 0, 12, 8, 0.04444444444444444, ["mov     [rbp+colons], 0; jumptable 0000000000013C49 case 122"], ["mov~[rbp+0],0"]], [1, 0, 439, 0, 0, 2, 0, 1, 17, 9, 0.002135843708877417, ["cmp     [rbp+pad], 2Bh ; '+'", "jnz     short loc_15415"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 439, 1, 0, 5, 0, 0, 26, 5, 0.013199716570503088, ["mov     rax, [rbp+p]", "movzx   edx, [rbp+sign_char]", "mov     [rax], dl", "mov     rax, [rbp+_n_6]", "add     [rbp+p], rax"], ["mov~rax,[rbp+0]", "movzx~edx,[rbp+0]", "mov~<TAG>,dl", "mov~rax,[rbp+0]", "add~[rbp+0],rax"]], [1, 0, 439, 0, 0, 2, 0, 1, 18, 9, 0.03640550663022574, ["mov     [rbp+always_output_a_sign], 1", "jmp     do_number_body"], ["mov~[rbp+0],0", "jmp~FOO"]], [3, 0, 439, 2, 0, 8, 0, 1, 18, 10, 0.0013209839052535683, ["mov     [rbp+digits], 5", "mov     [rbp+tz_colon_mask], 0", "mov     eax, [rbp+hour_diff]", "imul    edx, eax, 64h", "mov     eax, [rbp+min_diff]", "add     eax, edx", "mov     [rbp+u_number_value], eax", "jmp     do_tz_offset"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "mov~eax,[rbp+0]", "imul~edx,eax,0", "mov~eax,[rbp+0]", "add~eax,edx", "mov~[rbp+0],eax", "jmp~FOO"]], [3, 0, 439, 2, 0, 8, 0, 1, 17, 10, 0.020573944731248104, ["mov     [rbp+digits], 6", "mov     [rbp+tz_colon_mask], 4", "mov     eax, [rbp+hour_diff]", "imul    edx, eax, 64h", "mov     eax, [rbp+min_diff]", "add     eax, edx", "mov     [rbp+u_number_value], eax", "jmp     do_tz_offset"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "mov~eax,[rbp+0]", "imul~edx,eax,0", "mov~eax,[rbp+0]", "add~eax,edx", "mov~[rbp+0],eax", "jmp~FOO"]], [4, 0, 439, 4, 0, 11, 0, 1, 19, 10, 0.004193238182002227, ["mov     [rbp+digits], 9", "mov     [rbp+tz_colon_mask], 14h", "mov     eax, [rbp+hour_diff]", "imul    edx, eax, 2710h", "mov     eax, [rbp+min_diff]", "imul    eax, 64h", "add     edx, eax", "mov     eax, [rbp+sec_diff]", "add     eax, edx", "mov     [rbp+u_number_value], eax", "jmp     do_tz_offset"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "mov~eax,[rbp+0]", "imul~edx,eax,0", "mov~eax,[rbp+0]", "imul~eax,,0", "add~edx,eax", "mov~eax,[rbp+0]", "add~eax,edx", "mov~[rbp+0],eax", "jmp~FOO"]], [2, 0, 439, 0, 0, 5, 0, 1, 22, 10, 0.0035909505010628608, ["mov     [rbp+digits], 3", "mov     [rbp+tz_colon_mask], 0", "mov     eax, [rbp+hour_diff]", "mov     [rbp+u_number_value], eax", "jmp     do_tz_offset"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "mov~eax,[rbp+0]", "mov~[rbp+0],eax", "jmp~FOO"]], [0, 0, 439, 1, 0, 3, 0, 1, 15, 8, 0.008345986435874076, ["mov     rax, [rbp+colons]", "add     [rbp+f], rax", "jmp     short do_z_conversion"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax", "jmp~FOO"]], [0, 0, 439, 1, 0, 2, 0, 0, 25, 4, 0.019708472517461283, ["mov     rax, [rbp+_incr_6]", "add     [rbp+i], rax"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax"]], [1, 0, 439, 0, 0, 2, 0, 0, 10, 6, 0.0011033505415527888, ["mov     [rbp+modifier], 0", "nop"], ["mov~[rbp+0],0", "nop"]], [0, 0, 439, 0, 0, 2, 0, 0, 16, 13, 0.0, ["mov     eax, [rbp+yr_spec]", "mov     [rbp+pad], eax"], ["mov~eax,[rbp+0]", "mov~[rbp+0],eax"]], [1, 0, 439, 1, 1, 8, 0, 2, 17, 8, 0.0033049903836420693, ["mov     rdx, [rbp+_delta_9]; n", "mov     rax, [rbp+p]", "mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _memset", "mov     rax, [rbp+_delta_9]", "add     [rbp+p], rax", "jmp     short loc_1543E"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "add~[rbp+0],rax", "jmp~FOO"]], [1, 0, 439, 0, 0, 5, 0, 1, 14, 12, 0.042215811316934915, ["mov     rax, [rbp+tp]", "mov     rax, [rax+28h]", "mov     [rbp+diff], eax", "cmp     [rbp+diff], 0", "js      short loc_15C2F"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "js~FOO"]], [1, 0, 439, 0, 0, 6, 0, 1, 10, 5, 0.7402216823565139, ["mov     rax, [rbp+f]", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "mov     [rbp+format_char], eax", "cmp     [rbp+format_char], 7Ah ; 'z'; switch 123 cases", "ja      bad_format; jumptable 0000000000013C49 default case"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "movsx~eax,al", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "ja~FOO"]], [0, 0, 439, 0, 0, 7, 0, 1, 9, 6, 0.7368255896345784, ["mov     rax, [rbp+f]", "lea     rdx, [rax+1]", "mov     [rbp+f], rdx", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "mov     [rbp+modifier], eax", "jmp     short loc_13C04"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "movzx~eax,<TAG>", "movsx~eax,al", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 15, 12, 0.004266626176738537, ["cmp     [rbp+diff], 0", "jnz     short loc_15C36"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 17, 14, 0.01063366737524041, ["cmp     [rbp+digits], 2", "jnz     short loc_1442A"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 18, 13, 0.004284340520295577, ["mov     eax, 63h ; 'c'", "jmp     short loc_1442F"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 439, 0, 0, 1, 0, 0, 18, 13, 0.004284340520295577, ["mov     eax, 270Fh"], ["mov~eax,0"]], [1, 0, 439, 0, 0, 1, 0, 0, 17, 16, 0.020239902824172488, ["mov     eax, 0"], ["mov~eax,0"]], [3, 0, 439, 1, 0, 10, 2, 1, 16, 17, 0.025458042311974897, ["mov     [rbp+year_adjust], 0FFFFFFFFh", "mov     rax, [rbp+tp]", "mov     esi, [rax+18h]; wday", "mov     rax, [rbp+tp]", "mov     edi, [rax+1Ch]", "mov     eax, [rbp+year]", "sub     eax, 1", "and     eax, 3", "test    eax, eax", "jnz     short loc_15607"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~esi,[rax+0]", "mov~rax,[rbp+0]", "mov~edi,[rax+0]", "mov~eax,[rbp+0]", "sub~eax,0", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [3, 1, 439, 4, 0, 15, 1, 1, 18, 17, 5.061241016297196e-06, ["mov     eax, [rbp+year]", "lea     ecx, [rax-1]", "mov     edx, 51EB851Fh", "mov     eax, ecx", "imul    edx", "sar     edx, 7", "mov     eax, ecx", "sar     eax, 1Fh", "sub     edx, eax", "mov     eax, edx", "imul    eax, 190h", "sub     ecx, eax", "mov     eax, ecx", "test    eax, eax", "jnz     short loc_15607"], ["mov~eax,[rbp+0]", "lea~ecx,[rax-1]+0]", "mov~edx,0", "mov~eax,ecx", "imul~,edx", "sar~edx,0", "mov~eax,ecx", "sar~eax,0", "sub~edx,eax", "mov~eax,edx", "imul~eax,,<STR>", "sub~ecx,eax", "mov~eax,ecx", "test~eax,eax", "jnz~FOO"]], [1, 0, 439, 0, 0, 4, 0, 1, 16, 12, 5.061241016297196e-06, ["mov     rax, [rbp+zone]", "movzx   eax, byte ptr [rax]", "cmp     al, 2Dh ; '-'", "jnz     short loc_15C36"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 15, 11, 0.03699767182913251, ["mov     eax, 1", "jmp     short loc_15C3B"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 439, 0, 0, 2, 0, 0, 19, 12, 0.010861423220973783, ["cmp     eax, [rbp+u_number_value]", "jb      short loc_14442"], ["cmp~eax,[rbp+0]", "jb~FOO"]], [1, 0, 439, 0, 0, 1, 0, 0, 16, 11, 0.0033049903836420693, ["mov     eax, 0"], ["mov~eax,0"]], [0, 1, 439, 1, 1, 7, 0, 1, 18, 8, 0.0011033505415527888, ["mov     rdx, [rbp+_delta_9]; n", "mov     rax, [rbp+p]", "mov     esi, 20h ; ' '; c", "mov     rdi, rax; s", "call    _memset", "mov     rax, [rbp+_delta_9]", "add     [rbp+p], rax"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,<STR>", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "add~[rbp+0],rax"]], [1, 0, 439, 0, 0, 2, 0, 1, 20, 11, 0.009884603704828425, ["mov     eax, 1", "jmp     short loc_1444E"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 439, 1, 0, 4, 0, 0, 15, 7, 0.013199716570503088, ["mov     rax, [rbp+p]", "mov     byte ptr [rax], 9", "mov     rax, [rbp+_n_9]", "add     [rbp+p], rax"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~rax,[rbp+0]", "add~[rbp+0],rax"]], [1, 0, 439, 0, 0, 2, 0, 1, 12, 4, 0.025407429901811926, ["cmp     [rbp+modifier], 0; jumptable 0000000000013C49 case 37", "jnz     loc_15DFB"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 439, 0, 0, 3, 1, 1, 18, 10, 0.06485474238283227, ["mov     [rbp+always_output_a_sign], al", "and     [rbp+always_output_a_sign], 1", "jmp     short do_maybe_signed_number"], ["mov~[rbp+0],al", "and~[rbp+0],0", "jmp~FOO"]], [3, 0, 439, 3, 0, 20, 0, 0, 22, 3, 0.18596644397206197, ["lea     rax, [rbp+ubuf]", "add     rax, 17h", "mov     rdx, rax", "mov     rax, [rbp+bufp]", "sub     rdx, rax", "mov     rax, rdx", "mov     [rbp+_n_7], rax", "mov     eax, 0", "cmp     [rbp+width], 0", "cmovns  eax, [rbp+width]", "cdqe", "mov     [rbp+_w_7], rax", "mov     rax, [rbp+_w_7]", "cmp     [rbp+_n_7], rax", "cmovnb  rax, [rbp+_n_7]", "mov     [rbp+_incr_7], rax", "mov     rax, [rbp+maxsize]", "sub     rax, [rbp+i]", "cmp     [rbp+_incr_7], rax", "jb      short loc_14C76"], ["lea~rax,[rbp+0]", "add~rax,0", "mov~rdx,rax", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "mov~[rbp+0],rax", "mov~eax,0", "cmp~[rbp+0],0", "cmovns~eax,[rbp+0]", "cdqe~", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "cmovnb~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "sub~rax,[rbp+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 21, 4, 0.08985727300334043, ["cmp     [rbp+sign_char], 0", "jz      loc_14C00"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 439, 1, 0, 3, 0, 1, 24, 4, 0.019708472517461283, ["mov     rax, [rbp+_incr_3]", "add     [rbp+i], rax", "jmp     loc_14C00"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 15, 12, 0.005309241826095759, ["mov     [rbp+pad], 5Fh ; '_'", "jmp     short do_number"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 439, 0, 0, 1, 0, 0, 15, 12, 0.005309241826095759, ["nop"], ["nop"]], [1, 0, 439, 0, 0, 2, 0, 1, 23, 7, 0.1830650875594696, ["cmp     [rbp+p], 0", "jz      loc_14D9E"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 0, 0, 5, 0, 0, 13, 11, 0.0958649660896852, ["mov     eax, [rbp+number_value]", "shr     eax, 1Fh", "mov     [rbp+negative_number], al", "mov     eax, [rbp+number_value]", "mov     [rbp+u_number_value], eax"], ["mov~eax,[rbp+0]", "shr~eax,0", "mov~[rbp+0],al", "mov~eax,[rbp+0]", "mov~[rbp+0],eax"]], [1, 0, 439, 0, 0, 5, 0, 1, 13, 12, 0.0006022876809393664, ["mov     [rbp+digits], 2", "mov     rax, [rbp+tp]", "mov     eax, [rax+8]", "mov     [rbp+number_value], eax", "jmp     do_number"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 439, 0, 0, 4, 0, 1, 13, 12, 0.0006022876809393664, ["mov     [rbp+digits], 2", "mov     eax, [rbp+hour12]", "mov     [rbp+number_value], eax", "jmp     do_number"], ["mov~[rbp+0],0", "mov~eax,[rbp+0]", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 439, 0, 0, 5, 0, 1, 13, 12, 0.0006022876809393664, ["mov     [rbp+digits], 2", "mov     rax, [rbp+tp]", "mov     eax, [rax+4]", "mov     [rbp+number_value], eax", "jmp     do_number"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~[rbp+0],eax", "jmp~FOO"]], [0, 0, 439, 0, 0, 3, 0, 1, 15, 12, 0.011620609373418363, ["mov     eax, [rbp+width]", "mov     [rbp+digits], eax", "jmp     do_number"], ["mov~eax,[rbp+0]", "mov~[rbp+0],eax", "jmp~FOO"]], [6, 0, 439, 6, 0, 22, 0, 1, 12, 12, 0.0018675979350136654, ["mov     [rbp+digits], 1; jumptable 0000000000013C49 case 117", "mov     rax, [rbp+tp]", "mov     eax, [rax+18h]", "lea     ecx, [rax+6]", "mov     edx, 92492493h", "mov     eax, ecx", "imul    edx", "lea     eax, [rdx+rcx]", "sar     eax, 2", "mov     edx, eax", "mov     eax, ecx", "sar     eax, 1Fh", "sub     edx, eax", "mov     eax, edx", "mov     edx, eax", "shl     edx, 3", "sub     edx, eax", "mov     eax, ecx", "sub     eax, edx", "add     eax, 1", "mov     [rbp+number_value], eax", "jmp     do_number"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "lea~ecx,[rax+0]", "mov~edx,0", "mov~eax,ecx", "imul~,edx", "lea~eax,<TAG>", "sar~eax,0", "mov~edx,eax", "mov~eax,ecx", "sar~eax,0", "sub~edx,eax", "mov~eax,edx", "mov~edx,eax", "shl~edx,0", "sub~edx,eax", "mov~eax,ecx", "sub~eax,edx", "add~eax,0", "mov~[rbp+0],eax", "jmp~FOO"]], [4, 0, 439, 3, 0, 20, 0, 1, 13, 12, 0.0006022876809393664, ["mov     [rbp+digits], 2", "mov     rax, [rbp+tp]", "mov     edx, [rax+1Ch]", "mov     rax, [rbp+tp]", "mov     eax, [rax+18h]", "sub     edx, eax", "mov     eax, edx", "lea     ecx, [rax+7]", "mov     edx, 92492493h", "mov     eax, ecx", "imul    edx", "lea     eax, [rdx+rcx]", "sar     eax, 2", "mov     edx, eax", "mov     eax, ecx", "sar     eax, 1Fh", "sub     edx, eax", "mov     eax, edx", "mov     [rbp+number_value], eax", "jmp     do_number"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~edx,[rax+0]", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "sub~edx,eax", "mov~eax,edx", "lea~ecx,[rax+0]", "mov~edx,0", "mov~eax,ecx", "imul~,edx", "lea~eax,<TAG>", "sar~eax,0", "mov~edx,eax", "mov~eax,ecx", "sar~eax,0", "sub~edx,eax", "mov~eax,edx", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 24, 10, 0.023241218746836725, ["cmp     [rbp+digits], 0", "jnz     loc_14D1A"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 439, 0, 0, 1, 0, 0, 13, 10, 0.12234537908695213, ["mov     [rbp+always_output_a_sign], 0"], ["mov~[rbp+0],0"]], [3, 0, 439, 1, 0, 11, 0, 1, 13, 11, 0.0005972264399230692, ["mov     [rbp+digits], 3", "mov     rax, [rbp+tp]", "mov     eax, [rax+1Ch]", "cmp     eax, 0FFFFFFFFh", "setl    al", "mov     [rbp+negative_number], al", "mov     rax, [rbp+tp]", "mov     eax, [rax+1Ch]", "add     eax, 1", "mov     [rbp+u_number_value], eax", "jmp     do_signed_number"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "cmp~eax,0", "setl~al", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "add~eax,0", "mov~[rbp+0],eax", "jmp~FOO"]], [3, 0, 439, 1, 0, 11, 0, 1, 13, 11, 0.0005972264399230692, ["mov     [rbp+digits], 2", "mov     rax, [rbp+tp]", "mov     eax, [rax+10h]", "cmp     eax, 0FFFFFFFFh", "setl    al", "mov     [rbp+negative_number], al", "mov     rax, [rbp+tp]", "mov     eax, [rax+10h]", "add     eax, 1", "mov     [rbp+u_number_value], eax", "jmp     do_signed_number"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "cmp~eax,0", "setl~al", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "add~eax,0", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 439, 0, 0, 1, 0, 0, 14, 9, 0.18949286365016704, ["mov     [rbp+tz_colon_mask], 0"], ["mov~[rbp+0],0"]], [3, 0, 439, 1, 0, 14, 0, 0, 22, 3, 0.02135337584775787, ["mov     [rbp+_n_3], 1", "mov     eax, 0", "cmp     [rbp+width], 0", "cmovns  eax, [rbp+width]", "cdqe", "mov     [rbp+_w_3], rax", "mov     rax, [rbp+_w_3]", "cmp     [rbp+_n_3], rax", "cmovnb  rax, [rbp+_n_3]", "mov     [rbp+_incr_3], rax", "mov     rax, [rbp+maxsize]", "sub     rax, [rbp+i]", "cmp     [rbp+_incr_3], rax", "jb      short loc_1461E"], ["mov~[rbp+0],0", "mov~eax,0", "cmp~[rbp+0],0", "cmovns~eax,[rbp+0]", "cdqe~", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "cmovnb~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "sub~rax,[rbp+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [0, 0, 439, 0, 0, 3, 0, 0, 25, 10, 0.008518068630428182, ["mov     rax, [rbp+_n_7]", "cmp     rax, [rbp+_w_7]", "jnb     short loc_14D1A"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 15, 8, 0.2281911124607754, ["cmp     [rbp+modifier], 4Fh ; 'O'", "jnz     short loc_144BA"], ["cmp~[rbp+0],0", "jnz~FOO"]], [3, 0, 439, 1, 0, 14, 0, 0, 13, 3, 0.023246279987853023, ["mov     [rbp+_n_0], 1", "mov     eax, 0", "cmp     [rbp+width], 0", "cmovns  eax, [rbp+width]", "cdqe", "mov     [rbp+_w_0], rax", "mov     rax, [rbp+_w_0]", "cmp     [rbp+_n_0], rax", "cmovnb  rax, [rbp+_n_0]", "mov     [rbp+_incr_0], rax", "mov     rax, [rbp+maxsize]", "sub     rax, [rbp+i]", "cmp     [rbp+_incr_0], rax", "jb      short loc_13CB7"], ["mov~[rbp+0],0", "mov~eax,0", "cmp~[rbp+0],0", "cmovns~eax,[rbp+0]", "cdqe~", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "cmovnb~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "sub~rax,[rbp+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 12, 7, 0.004271687417754834, ["cmp     [rbp+modifier], 45h ; 'E'; jumptable 0000000000013C49 case 85", "jz      loc_15E2E"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 1, 0, 6, 0, 1, 26, 11, 0.006397408644599656, ["mov     eax, [rbp+width]", "cdqe", "sub     rax, [rbp+_n_7]", "mov     [rbp+_delta_7], rax", "cmp     [rbp+pad], 30h ; '0'", "jz      short loc_14CC6"], ["mov~eax,[rbp+0]", "cdqe~", "sub~rax,[rbp+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 14, 7, 0.021145864966089688, ["cmp     [rbp+p], 0", "jz      loc_13D7C"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 13, 6, 0.0016094746431825084, ["nop", "jmp     short bad_format; jumptable 0000000000013C49 default case"], ["nop", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 12, 7, 0.004271687417754834, ["cmp     [rbp+modifier], 45h ; 'E'; jumptable 0000000000013C49 case 106", "jz      loc_15E1F"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 27, 11, 0.002135843708877417, ["cmp     [rbp+pad], 2Bh ; '+'", "jnz     short loc_14CF1"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 15, 8, 0.01274420487903634, ["cmp     [rbp+digits], 0", "jnz     loc_13D5B"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 439, 1, 0, 5, 0, 1, 16, 13, 0.06624658366231401, ["lea     rax, [rbp+ubuf]", "add     rax, 17h", "mov     [rbp+bufp], rax", "cmp     [rbp+negative_number], 0", "jz      short loc_144DB"], ["lea~rax,[rbp+0]", "add~rax,0", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 439, 0, 0, 1, 0, 0, 17, 13, 0.0, ["neg     [rbp+u_number_value]"], ["neg~[rbp+0]"]], [0, 0, 439, 0, 0, 3, 0, 0, 16, 8, 0.008518068630428182, ["mov     rax, [rbp+_n_0]", "cmp     rax, [rbp+_w_0]", "jnb     short loc_13D5B"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 23, 5, 0.019101123595505618, ["cmp     [rbp+p], 0", "jz      loc_146E0"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 0, 0, 4, 2, 1, 17, 12, 0.0664287883389007, ["mov     eax, [rbp+tz_colon_mask]", "and     eax, 1", "test    eax, eax", "jz      short loc_144FA"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [9, 0, 439, 8, 0, 26, 0, 1, 18, 11, 0.06658062556938962, ["sar     [rbp+tz_colon_mask], 1", "mov     ecx, [rbp+u_number_value]", "mov     edx, 0CCCCCCCDh", "mov     eax, ecx", "mul     edx", "shr     edx, 3", "mov     eax, edx", "shl     eax, 2", "add     eax, edx", "add     eax, eax", "sub     ecx, eax", "mov     edx, ecx", "mov     eax, edx", "add     eax, 30h ; '0'", "sub     [rbp+bufp], 1", "mov     edx, eax", "mov     rax, [rbp+bufp]", "mov     [rax], dl", "mov     eax, [rbp+u_number_value]", "mov     edx, 0CCCCCCCDh", "mul     edx", "mov     eax, edx", "shr     eax, 3", "mov     [rbp+u_number_value], eax", "cmp     [rbp+u_number_value], 0", "jnz     short loc_144DB"], ["sar~[rbp+0],0", "mov~ecx,[rbp+0]", "mov~edx,0", "mov~eax,ecx", "mul~,edx", "shr~edx,0", "mov~eax,edx", "shl~eax,0", "add~eax,edx", "add~eax,eax", "sub~ecx,eax", "mov~edx,ecx", "mov~eax,edx", "add~eax,0", "sub~[rbp+0],0", "mov~edx,eax", "mov~rax,[rbp+0]", "mov~<TAG>,dl", "mov~eax,[rbp+0]", "mov~edx,0", "mul~,edx", "mov~eax,edx", "shr~eax,0", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 19, 10, 0.06664136046158518, ["cmp     [rbp+tz_colon_mask], 0", "jnz     loc_144DB"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 439, 1, 1, 8, 0, 2, 27, 10, 0.0033049903836420693, ["mov     rdx, [rbp+_delta_7]; n", "mov     rax, [rbp+p]", "mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _memset", "mov     rax, [rbp+_delta_7]", "add     [rbp+p], rax", "jmp     short loc_14D1A"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "add~[rbp+0],rax", "jmp~FOO"]], [1, 1, 439, 1, 0, 3, 0, 0, 18, 12, 0.0, ["sub     [rbp+bufp], 1", "mov     rax, [rbp+bufp]", "mov     byte ptr [rax], 3Ah ; ':'"], ["sub~[rbp+0],0", "mov~rax,[rbp+0]", "mov~<TAG>,<STR>"]], [16, 0, 439, 12, 0, 59, 1, 1, 16, 10, 0.042595404393157205, ["mov     [rbp+negative_number], al", "and     [rbp+negative_number], 1", "mov     ecx, [rbp+diff]", "mov     edx, 91A2B3C5h", "mov     eax, ecx", "imul    edx", "lea     eax, [rdx+rcx]", "sar     eax, 0Bh", "mov     edx, eax", "mov     eax, ecx", "sar     eax, 1Fh", "sub     edx, eax", "mov     eax, edx", "mov     [rbp+hour_diff], eax", "mov     ecx, [rbp+diff]", "mov     edx, 88888889h", "mov     eax, ecx", "imul    edx", "lea     eax, [rdx+rcx]", "sar     eax, 5", "mov     edx, eax", "mov     eax, ecx", "sar     eax, 1Fh", "mov     ecx, edx", "sub     ecx, eax", "mov     edx, 88888889h", "mov     eax, ecx", "imul    edx", "lea     eax, [rdx+rcx]", "sar     eax, 5", "mov     edx, eax", "mov     eax, ecx", "sar     eax, 1Fh", "sub     edx, eax", "mov     eax, edx", "mov     [rbp+min_diff], eax", "mov     eax, [rbp+min_diff]", "imul    eax, 3Ch", "sub     ecx, eax", "mov     eax, ecx", "mov     [rbp+min_diff], eax", "mov     ecx, [rbp+diff]", "mov     edx, 88888889h", "mov     eax, ecx", "imul    edx", "lea     eax, [rdx+rcx]", "sar     eax, 5", "mov     edx, eax", "mov     eax, ecx", "sar     eax, 1Fh", "sub     edx, eax", "mov     eax, edx", "imul    eax, 3Ch", "sub     ecx, eax", "mov     eax, ecx", "mov     [rbp+sec_diff], eax", "mov     rax, [rbp+colons]", "cmp     rax, 1", "jz      short tz_hh_mm"], ["mov~[rbp+0],al", "and~[rbp+0],0", "mov~ecx,[rbp+0]", "mov~edx,0", "mov~eax,ecx", "imul~,edx", "lea~eax,<TAG>", "sar~eax,0", "mov~edx,eax", "mov~eax,ecx", "sar~eax,0", "sub~edx,eax", "mov~eax,edx", "mov~[rbp+0],eax", "mov~ecx,[rbp+0]", "mov~edx,0", "mov~eax,ecx", "imul~,edx", "lea~eax,<TAG>", "sar~eax,0", "mov~edx,eax", "mov~eax,ecx", "sar~eax,0", "mov~ecx,edx", "sub~ecx,eax", "mov~edx,0", "mov~eax,ecx", "imul~,edx", "lea~eax,<TAG>", "sar~eax,0", "mov~edx,eax", "mov~eax,ecx", "sar~eax,0", "sub~edx,eax", "mov~eax,edx", "mov~[rbp+0],eax", "mov~eax,[rbp+0]", "imul~eax,,0", "sub~ecx,eax", "mov~eax,ecx", "mov~[rbp+0],eax", "mov~ecx,[rbp+0]", "mov~edx,0", "mov~eax,ecx", "imul~,edx", "lea~eax,<TAG>", "sar~eax,0", "mov~edx,eax", "mov~eax,ecx", "sar~eax,0", "sub~edx,eax", "mov~eax,edx", "imul~eax,,0", "sub~ecx,eax", "mov~eax,ecx", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "cmp~rax,0", "jz~FOO"]], [1, 0, 439, 1, 0, 6, 0, 1, 17, 9, 0.006397408644599656, ["mov     eax, [rbp+width]", "cdqe", "sub     rax, [rbp+_n_0]", "mov     [rbp+_delta_0], rax", "cmp     [rbp+pad], 30h ; '0'", "jz      short loc_13D07"], ["mov~eax,[rbp+0]", "cdqe~", "sub~rax,[rbp+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 18, 9, 0.002135843708877417, ["cmp     [rbp+pad], 2Bh ; '+'", "jnz     short loc_13D32"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 19, 7, 0.016170665047069543, ["cmp     rax, 3", "jz      loc_15DB6"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 12, 7, 0.05834598643587408, ["cmp     [rbp+modifier], 45h ; 'E'; jumptable 0000000000013C49 cases 71,86,103", "jz      loc_15E31"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 1, 439, 1, 1, 7, 0, 1, 28, 10, 0.0011033505415527888, ["mov     rdx, [rbp+_delta_7]; n", "mov     rax, [rbp+p]", "mov     esi, 20h ; ' '; c", "mov     rdi, rax; s", "call    _memset", "mov     rax, [rbp+_delta_7]", "add     [rbp+p], rax"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,<STR>", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "add~[rbp+0],rax"]], [1, 0, 439, 0, 0, 2, 0, 1, 25, 9, 0.023696730438303473, ["cmp     [rbp+to_lowcase], 0", "jz      short loc_14D45"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 439, 0, 0, 6, 1, 0, 13, 20, 0.05486385261666161, ["mov     rax, [rbp+tp]", "mov     edx, [rax+14h]", "mov     rax, [rbp+tp]", "mov     eax, [rax+14h]", "test    eax, eax", "jns     short loc_15536"], ["mov~rax,[rbp+0]", "mov~edx,[rax+0]", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "test~eax,eax", "jns~FOO"]], [1, 0, 439, 1, 1, 8, 0, 2, 18, 8, 0.0033049903836420693, ["mov     rdx, [rbp+_delta_0]; n", "mov     rax, [rbp+p]", "mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _memset", "mov     rax, [rbp+_delta_0]", "add     [rbp+p], rax", "jmp     short loc_13D5B"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "add~[rbp+0],rax", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 14, 19, 0.026399433141006175, ["mov     eax, 12Ch", "jmp     short loc_1553B"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 439, 0, 0, 1, 0, 0, 14, 19, 0.026399433141006175, ["mov     eax, 0FFFFFF9Ch"], ["mov~eax,0"]], [0, 0, 439, 0, 1, 7, 0, 2, 26, 8, 0.017360056685899385, ["mov     rdx, [rbp+_n_7]; len", "mov     rcx, [rbp+bufp]", "mov     rax, [rbp+p]", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    memcpy_lowcase", "jmp     short loc_14D90"], ["mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [0, 0, 439, 0, 0, 1, 0, 0, 22, 11, 2.530620508148598e-05, ["nop"], ["nop"]], [1, 0, 439, 0, 0, 2, 0, 1, 21, 11, 0.005681243040793603, ["cmp     [rbp+min_diff], 0", "jnz     loc_15D46"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 26, 9, 0.004271687417754834, ["cmp     [rbp+to_uppcase], 0", "jz      short loc_14D70"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 0, 0, 4, 0, 1, 13, 14, 0.011241016297196073, ["mov     eax, [rbp+ns]", "mov     [rbp+number_value], eax", "cmp     [rbp+width], 0FFFFFFFFh", "jnz     short loc_14F98"], ["mov~eax,[rbp+0]", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 12, 7, 0.014885109828930055, ["cmp     [rbp+modifier], 45h ; 'E'; jumptable 0000000000013C49 case 78", "jz      loc_15E28"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 1, 439, 1, 1, 7, 0, 1, 19, 8, 0.0011033505415527888, ["mov     rdx, [rbp+_delta_0]; n", "mov     rax, [rbp+p]", "mov     esi, 20h ; ' '; c", "mov     rdi, rax; s", "call    _memset", "mov     rax, [rbp+_delta_0]", "add     [rbp+p], rax"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,<STR>", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "add~[rbp+0],rax"]], [1, 0, 439, 0, 0, 2, 0, 1, 11, 5, 0.1280772345379087, ["mov     [rbp+flen], 1; jumptable 0000000000013C49 default case", "jmp     short loc_15E51"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 439, 0, 0, 1, 0, 1, 14, 6, 0.0003112663225022776, ["jmp     bad_format; jumptable 0000000000013C49 default case"], ["jmp~FOO"]], [0, 0, 439, 0, 0, 1, 0, 1, 13, 6, 0.00010375544083409252, ["jmp     bad_format; jumptable 0000000000013C49 default case"], ["jmp~FOO"]], [0, 0, 439, 0, 0, 1, 0, 1, 20, 6, 0.0049600161959712525, ["jmp     bad_format; jumptable 0000000000013C49 default case"], ["jmp~FOO"]], [1, 0, 439, 1, 0, 2, 0, 1, 12, 6, 0.0, ["sub     [rbp+f], 1; jumptable 0000000000013C49 case 0", "jmp     short bad_format; jumptable 0000000000013C49 default case"], ["sub~[rbp+0],0", "jmp~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 13, 6, 9.616357930964673e-05, ["nop", "jmp     short bad_format; jumptable 0000000000013C49 default case"], ["nop", "jmp~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 13, 6, 0.00011134730235853832, ["nop", "jmp     short bad_format; jumptable 0000000000013C49 default case"], ["nop", "jmp~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 13, 6, 0.00011134730235853832, ["nop", "jmp     short bad_format; jumptable 0000000000013C49 default case"], ["nop", "jmp~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 13, 6, 0.00011134730235853832, ["nop", "jmp     short bad_format; jumptable 0000000000013C49 default case"], ["nop", "jmp~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 13, 6, 9.616357930964673e-05, ["nop", "jmp     short bad_format; jumptable 0000000000013C49 default case"], ["nop", "jmp~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 13, 6, 0.0016044134021662112, ["nop", "jmp     short bad_format; jumptable 0000000000013C49 default case"], ["nop", "jmp~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 13, 6, 0.0015892296791173196, ["nop", "jmp     short bad_format; jumptable 0000000000013C49 default case"], ["nop", "jmp~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 13, 6, 0.0011109424030772345, ["nop", "jmp     short bad_format; jumptable 0000000000013C49 default case"], ["nop", "jmp~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 13, 6, 0.0016044134021662112, ["nop", "jmp     short bad_format; jumptable 0000000000013C49 default case"], ["nop", "jmp~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 13, 6, 0.0015892296791173196, ["nop", "jmp     short bad_format; jumptable 0000000000013C49 default case"], ["nop", "jmp~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 13, 6, 0.0015892296791173196, ["nop", "jmp     short bad_format; jumptable 0000000000013C49 default case"], ["nop", "jmp~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 13, 6, 0.0016044134021662112, ["nop", "jmp     short bad_format; jumptable 0000000000013C49 default case"], ["nop", "jmp~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 13, 6, 0.0015791071970847252, ["nop", "jmp     short bad_format; jumptable 0000000000013C49 default case"], ["nop", "jmp~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 13, 6, 0.0016044134021662112, ["nop", "jmp     short bad_format; jumptable 0000000000013C49 default case"], ["nop", "jmp~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 13, 6, 0.0016044134021662112, ["nop", "jmp     short bad_format; jumptable 0000000000013C49 default case"], ["nop", "jmp~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 13, 6, 0.001417147484563215, ["nop", "jmp     short bad_format; jumptable 0000000000013C49 default case"], ["nop", "jmp~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 13, 6, 0.0016044134021662112, ["nop", "jmp     short bad_format; jumptable 0000000000013C49 default case"], ["nop", "jmp~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 13, 6, 0.0016044134021662112, ["nop", "jmp     short bad_format; jumptable 0000000000013C49 default case"], ["nop", "jmp~FOO"]], [0, 0, 439, 0, 0, 2, 0, 1, 14, 6, 0.0016550258123291832, ["nop", "jmp     short bad_format; jumptable 0000000000013C49 default case"], ["nop", "jmp~FOO"]], [0, 0, 439, 0, 0, 1, 0, 0, 15, 6, 0.00044538920943415326, ["nop"], ["nop"]], [0, 0, 439, 0, 0, 1, 0, 0, 20, 9, 0.06670209535378076, ["nop"], ["nop"]], [0, 0, 439, 0, 1, 7, 0, 2, 27, 8, 0.0011033505415527888, ["mov     rdx, [rbp+_n_7]; len", "mov     rcx, [rbp+bufp]", "mov     rax, [rbp+p]", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    memcpy_uppcase", "jmp     short loc_14D90"], ["mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [0, 0, 439, 0, 0, 3, 0, 1, 17, 8, 0.19433647130276344, ["mov     eax, [rbp+digits]", "cmp     eax, [rbp+width]", "jge     short loc_1457A"], ["mov~eax,[rbp+0]", "cmp~eax,[rbp+0]", "jge~FOO"]], [0, 0, 439, 0, 0, 2, 0, 0, 18, 8, 0.0, ["mov     eax, [rbp+width]", "mov     [rbp+digits], eax"], ["mov~eax,[rbp+0]", "mov~[rbp+0],eax"]], [0, 0, 439, 1, 0, 6, 0, 0, 16, 7, 0.013199716570503088, ["mov     rax, [rbp+f]", "movzx   edx, byte ptr [rax]", "mov     rax, [rbp+p]", "mov     [rax], dl", "mov     rax, [rbp+_n_0]", "add     [rbp+p], rax"], ["mov~rax,[rbp+0]", "movzx~edx,<TAG>", "mov~rax,[rbp+0]", "mov~<TAG>,dl", "mov~rax,[rbp+0]", "add~[rbp+0],rax"]], [2, 0, 439, 1, 1, 13, 0, 1, 15, 18, 0.055091608462394984, ["add     eax, edx", "mov     [rbp+year], eax", "mov     [rbp+year_adjust], 0", "mov     rax, [rbp+tp]", "mov     edx, [rax+18h]", "mov     rax, [rbp+tp]", "mov     eax, [rax+1Ch]", "mov     esi, edx; wday", "mov     edi, eax; yday", "call    iso_week_days", "mov     [rbp+days], eax", "cmp     [rbp+days], 0", "jns     loc_15625"], ["add~eax,edx", "mov~[rbp+0],eax", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~edx,[rax+0]", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~esi,edx", "mov~edi,eax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jns~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 18, 7, 0.19448830853325236, ["cmp     [rbp+negative_number], 0", "jz      short loc_1458A"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 439, 0, 1, 6, 0, 1, 27, 8, 0.0011033505415527888, ["mov     rdx, [rbp+_n_7]; n", "mov     rcx, [rbp+bufp]", "mov     rax, [rbp+p]", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    _memcpy"], ["mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 19, 7, 0.004271687417754834, ["cmp     [rbp+always_output_a_sign], 0", "jz      short loc_1459A"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 12, 7, 0.008528191112460776, ["cmp     [rbp+modifier], 0; jumptable 0000000000013C49 case 97", "jnz     loc_15DFE"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 439, 1, 0, 2, 0, 0, 27, 7, 0.024076323514525762, ["mov     rax, [rbp+_n_7]", "add     [rbp+p], rax"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax"]], [1, 0, 439, 0, 0, 2, 0, 1, 12, 7, 0.014885109828930055, ["cmp     [rbp+modifier], 0; jumptable 0000000000013C49 case 70", "jnz     loc_15E10"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 12, 7, 0.008528191112460776, ["cmp     [rbp+modifier], 0; jumptable 0000000000013C49 case 65", "jnz     loc_15E01"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 13, 6, 0.011709181091203565, ["cmp     [rbp+pad], 0", "jnz     short loc_14DE3"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 0, 14, 6, 0.002135843708877417, ["cmp     [rbp+width], 0", "jns     short loc_14DE3"], ["cmp~[rbp+0],0", "jns~FOO"]], [4, 0, 439, 4, 0, 15, 1, 1, 17, 17, 0.004266626176738537, ["mov     eax, [rbp+year]", "lea     ecx, [rax-1]", "mov     edx, 51EB851Fh", "mov     eax, ecx", "imul    edx", "sar     edx, 5", "mov     eax, ecx", "sar     eax, 1Fh", "sub     edx, eax", "mov     eax, edx", "imul    eax, 64h", "sub     ecx, eax", "mov     eax, ecx", "test    eax, eax", "jnz     short loc_15600"], ["mov~eax,[rbp+0]", "lea~ecx,[rax-1]+0]", "mov~edx,0", "mov~eax,ecx", "imul~,edx", "sar~edx,0", "mov~eax,ecx", "sar~eax,0", "sub~edx,eax", "mov~eax,edx", "imul~eax,,0", "sub~ecx,eax", "mov~eax,ecx", "test~eax,eax", "jnz~FOO"]], [2, 0, 439, 0, 0, 3, 0, 1, 15, 5, 0.0011008199210446401, ["mov     [rbp+pad], 2Bh ; '+'", "mov     [rbp+subwidth], 4", "jmp     short loc_14E02"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 12, 8, 0.008518068630428182, ["cmp     [rbp+change_case], 0; jumptable 0000000000013C49 cases 98,104", "jz      short loc_13E00"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 439, 1, 0, 5, 0, 0, 14, 5, 0.008619293450754125, ["mov     eax, [rbp+width]", "sub     eax, 6", "mov     [rbp+subwidth], eax", "cmp     [rbp+subwidth], 0", "jns     short loc_14E02"], ["mov~eax,[rbp+0]", "sub~eax,0", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jns~FOO"]], [1, 0, 439, 0, 0, 1, 0, 0, 15, 5, 0.0, ["mov     [rbp+subwidth], 0"], ["mov~[rbp+0],0"]], [2, 0, 439, 0, 0, 2, 0, 0, 13, 8, 0.0, ["mov     [rbp+to_uppcase], 1", "mov     [rbp+to_lowcase], 0"], ["mov~[rbp+0],0", "mov~[rbp+0],0"]], [1, 0, 439, 0, 0, 2, 0, 1, 18, 16, 0.0033049903836420693, ["mov     eax, 1", "jmp     short loc_1560C"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 439, 0, 0, 3, 0, 1, 15, 4, 0.012088774167425853, ["lea     rax, aYMD_0; \"%Y-%m-%d\"", "mov     [rbp+subfmt], rax", "jmp     subformat_width"], ["lea~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 12, 7, 0.004271687417754834, ["cmp     [rbp+modifier], 45h ; 'E'; jumptable 0000000000013C49 case 72", "jz      loc_15E13"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 12, 7, 0.008528191112460776, ["cmp     [rbp+modifier], 45h ; 'E'; jumptable 0000000000013C49 case 66", "jz      loc_15E04"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 12, 7, 0.006378850760873233, ["cmp     [rbp+modifier], 45h ; 'E'; jumptable 0000000000013C49 case 107", "jz      loc_15E19"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 12, 7, 0.006378850760873233, ["cmp     [rbp+modifier], 45h ; 'E'; jumptable 0000000000013C49 case 108", "jz      loc_15E1C"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 2, 1, 6, 0, 2, 18, 15, 0.025837635388197187, ["add     eax, 16Dh", "add     eax, edi", "mov     edi, eax; yday", "call    iso_week_days", "mov     [rbp+days], eax", "jmp     loc_156D6"], ["add~eax,0", "add~eax,edi", "mov~edi,eax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 24, 6, 0.01274420487903634, ["cmp     [rbp+digits], 0", "jnz     loc_146C2"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 439, 0, 0, 8, 2, 1, 16, 17, 0.02756857981577083, ["mov     rax, [rbp+tp]", "mov     esi, [rax+18h]; wday", "mov     rax, [rbp+tp]", "mov     edi, [rax+1Ch]", "mov     eax, [rbp+year]", "and     eax, 3", "test    eax, eax", "jnz     short loc_1569C"], ["mov~rax,[rbp+0]", "mov~esi,[rax+0]", "mov~rax,[rbp+0]", "mov~edi,[rax+0]", "mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [0, 0, 439, 0, 0, 3, 0, 0, 25, 6, 0.008518068630428182, ["mov     rax, [rbp+_n_3]", "cmp     rax, [rbp+_w_3]", "jnb     short loc_146C2"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 439, 1, 0, 1, 0, 0, 13, 5, 0.0, ["add     [rbp+flen], 1"], ["add~[rbp+0],0"]], [2, 0, 439, 2, 0, 8, 0, 1, 12, 4, 0.13036997671829134, ["mov     eax, 1", "sub     eax, [rbp+flen]", "movsxd  rdx, eax", "mov     rax, [rbp+f]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "cmp     al, 25h ; '%'", "jnz     short loc_15E4A"], ["mov~eax,0", "sub~eax,[rbp+0]", "movsxd~rdx,eax", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [1, 0, 439, 0, 0, 1, 0, 0, 13, 4, 0.031399939265107805, ["mov     [rbp+subwidth], 0FFFFFFFFh"], ["mov~[rbp+0],0"]], [1, 0, 439, 1, 0, 6, 0, 1, 26, 7, 0.006397408644599656, ["mov     eax, [rbp+width]", "cdqe", "sub     rax, [rbp+_n_3]", "mov     [rbp+_delta_3], rax", "cmp     [rbp+pad], 30h ; '0'", "jz      short loc_1466E"], ["mov~eax,[rbp+0]", "cdqe~", "sub~rax,[rbp+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [4, 0, 439, 4, 0, 14, 1, 1, 17, 17, 0.004266626176738537, ["mov     ecx, [rbp+year]", "mov     edx, 51EB851Fh", "mov     eax, ecx", "imul    edx", "sar     edx, 5", "mov     eax, ecx", "sar     eax, 1Fh", "sub     edx, eax", "mov     eax, edx", "imul    eax, 64h", "sub     ecx, eax", "mov     eax, ecx", "test    eax, eax", "jnz     short loc_15695"], ["mov~ecx,[rbp+0]", "mov~edx,0", "mov~eax,ecx", "imul~,edx", "sar~edx,0", "mov~eax,ecx", "sar~eax,0", "sub~edx,eax", "mov~eax,edx", "imul~eax,,0", "sub~ecx,eax", "mov~eax,ecx", "test~eax,eax", "jnz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 27, 7, 0.002135843708877417, ["cmp     [rbp+pad], 2Bh ; '+'", "jnz     short loc_14699"], ["cmp~[rbp+0],0", "jnz~FOO"]], [3, 1, 439, 4, 0, 14, 1, 1, 18, 17, 5.061241016297196e-06, ["mov     ecx, [rbp+year]", "mov     edx, 51EB851Fh", "mov     eax, ecx", "imul    edx", "sar     edx, 7", "mov     eax, ecx", "sar     eax, 1Fh", "sub     edx, eax", "mov     eax, edx", "imul    eax, 190h", "sub     ecx, eax", "mov     eax, ecx", "test    eax, eax", "jnz     short loc_1569C"], ["mov~ecx,[rbp+0]", "mov~edx,0", "mov~eax,ecx", "imul~,edx", "sar~edx,0", "mov~eax,ecx", "sar~eax,0", "sub~edx,eax", "mov~eax,edx", "imul~eax,,<STR>", "sub~ecx,eax", "mov~eax,ecx", "test~eax,eax", "jnz~FOO"]], [1, 0, 439, 1, 1, 8, 0, 2, 27, 6, 0.0033049903836420693, ["mov     rdx, [rbp+_delta_3]; n", "mov     rax, [rbp+p]", "mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _memset", "mov     rax, [rbp+_delta_3]", "add     [rbp+p], rax", "jmp     short loc_146C2"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "add~[rbp+0],rax", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 18, 16, 0.0033049903836420693, ["mov     eax, 1", "jmp     short loc_156A1"], ["mov~eax,0", "jmp~FOO"]], [0, 1, 439, 1, 1, 7, 0, 1, 28, 6, 0.0011033505415527888, ["mov     rdx, [rbp+_delta_3]; n", "mov     rax, [rbp+p]", "mov     esi, 20h ; ' '; c", "mov     rdi, rax; s", "call    _memset", "mov     rax, [rbp+_delta_3]", "add     [rbp+p], rax"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,<STR>", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "add~[rbp+0],rax"]], [2, 0, 439, 2, 1, 8, 0, 2, 18, 15, 0.02794817289199312, ["add     eax, 16Dh", "sub     edi, eax", "mov     eax, edi", "mov     edi, eax; yday", "call    iso_week_days", "mov     [rbp+d_0], eax", "cmp     [rbp+d_0], 0", "js      short loc_156D6"], ["add~eax,0", "sub~edi,eax", "mov~eax,edi", "mov~edi,eax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "js~FOO"]], [1, 0, 439, 0, 0, 1, 0, 0, 17, 16, 0.02235044032796842, ["mov     eax, 0"], ["mov~eax,0"]], [2, 0, 439, 1, 0, 16, 0, 0, 13, 3, 0.12830499038364207, ["mov     eax, [rbp+flen]", "cdqe", "mov     [rbp+_n_11], rax", "mov     eax, 0", "cmp     [rbp+width], 0", "cmovns  eax, [rbp+width]", "cdqe", "mov     [rbp+_w_11], rax", "mov     rax, [rbp+_w_11]", "cmp     [rbp+_n_11], rax", "cmovnb  rax, [rbp+_n_11]", "mov     [rbp+_incr_11], rax", "mov     rax, [rbp+maxsize]", "sub     rax, [rbp+i]", "cmp     [rbp+_incr_11], rax", "jb      short loc_15ED3"], ["mov~eax,[rbp+0]", "cdqe~", "mov~[rbp+0],rax", "mov~eax,0", "cmp~[rbp+0],0", "cmovns~eax,[rbp+0]", "cdqe~", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "cmovnb~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "sub~rax,[rbp+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [1, 0, 439, 0, 0, 3, 0, 0, 19, 15, 0.0, ["mov     [rbp+year_adjust], 1", "mov     eax, [rbp+d_0]", "mov     [rbp+days], eax"], ["mov~[rbp+0],0", "mov~eax,[rbp+0]", "mov~[rbp+0],eax"]], [0, 0, 439, 1, 0, 5, 0, 0, 25, 5, 0.013199716570503088, ["mov     rax, [rbp+p]", "movzx   edx, [rbp+sign_char]", "mov     [rax], dl", "mov     rax, [rbp+_n_3]", "add     [rbp+p], rax"], ["mov~rax,[rbp+0]", "movzx~edx,[rbp+0]", "mov~<TAG>,dl", "mov~rax,[rbp+0]", "add~[rbp+0],rax"]], [1, 0, 439, 0, 0, 5, 0, 1, 19, 14, 0.05615446907581739, ["mov     rax, [rbp+f]", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "cmp     eax, 47h ; 'G'", "jz      loc_157AB"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "movsx~eax,al", "cmp~eax,0", "jz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 15, 10, 0.023241218746836725, ["cmp     [rbp+digits], 0", "jnz     loc_15F77"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 439, 0, 0, 3, 0, 0, 16, 10, 0.008518068630428182, ["mov     rax, [rbp+_n_11]", "cmp     rax, [rbp+_w_11]", "jnb     short loc_15F77"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 12, 7, 0.004271687417754834, ["cmp     [rbp+modifier], 45h ; 'E'; jumptable 0000000000013C49 case 77", "jz      loc_15E22"], ["cmp~[rbp+0],0", "jz~FOO"]], [4, 1, 439, 2, 1, 34, 0, 1, 14, 3, 0.04578145561291629, ["movzx   esi, [rbp+to_uppcase]", "mov     edi, [rbp+pad]", "mov     rdx, [rbp+tp]", "mov     rax, [rbp+subfmt]", "mov     ecx, [rbp+ns]", "push    rcx; ns", "push    [rbp+tz]; tz", "push    [rbp+tzset_called]; tzset_called", "mov     ecx, [rbp+subwidth]", "push    rcx; width", "mov     r9d, edi; yr_spec", "mov     r8d, esi; upcase", "mov     rcx, rdx; tp", "mov     rdx, rax; format", "mov     rsi, 0FFFFFFFFFFFFFFFFh; maxsize", "mov     edi, 0; s", "call    __strftime_internal", "add     rsp, 20h", "mov     [rbp+len], rax", "mov     rax, [rbp+len]", "mov     [rbp+_n_1], rax", "mov     eax, 0", "cmp     [rbp+width], 0", "cmovns  eax, [rbp+width]", "cdqe", "mov     [rbp+_w_1], rax", "mov     rax, [rbp+_w_1]", "cmp     [rbp+_n_1], rax", "cmovnb  rax, [rbp+_n_1]", "mov     [rbp+_incr_1], rax", "mov     rax, [rbp+maxsize]", "sub     rax, [rbp+i]", "cmp     [rbp+_incr_1], rax", "jb      short loc_13F17"], ["movzx~esi,[rbp+0]", "mov~edi,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~ecx,[rbp+0]", "push~rcx", "push~[rbp+0]", "push~[rbp+0]", "mov~ecx,[rbp+0]", "push~rcx", "mov~r9d,edi", "mov~r8d,esi", "mov~rcx,rdx", "mov~rdx,rax", "mov~rsi,0", "mov~edi,0", "call~FOO", "add~rsp,<STR>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~eax,0", "cmp~[rbp+0],0", "cmovns~eax,[rbp+0]", "cdqe~", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "cmovnb~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "sub~rax,[rbp+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [1, 0, 439, 1, 0, 6, 0, 1, 17, 11, 0.006397408644599656, ["mov     eax, [rbp+width]", "cdqe", "sub     rax, [rbp+_n_11]", "mov     [rbp+_delta_11], rax", "cmp     [rbp+pad], 30h ; '0'", "jz      short loc_15F23"], ["mov~eax,[rbp+0]", "cdqe~", "sub~rax,[rbp+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 18, 11, 0.002135843708877417, ["cmp     [rbp+pad], 2Bh ; '+'", "jnz     short loc_15F4E"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 439, 1, 1, 8, 0, 2, 18, 10, 0.0033049903836420693, ["mov     rdx, [rbp+_delta_11]; n", "mov     rax, [rbp+p]", "mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _memset", "mov     rax, [rbp+_delta_11]", "add     [rbp+p], rax", "jmp     short loc_15F77"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "add~[rbp+0],rax", "jmp~FOO"]], [1, 0, 439, 1, 0, 6, 0, 1, 18, 9, 0.006397408644599656, ["mov     eax, [rbp+width]", "cdqe", "sub     rax, [rbp+_n_1]", "mov     [rbp+_delta_1], rax", "cmp     [rbp+pad], 30h ; '0'", "jz      short loc_13F67"], ["mov~eax,[rbp+0]", "cdqe~", "sub~rax,[rbp+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 439, 1, 0, 6, 0, 0, 23, 3, 0.037834041907075615, ["mov     eax, [rbp+padding]", "movsxd  rdx, eax", "mov     rax, [rbp+maxsize]", "sub     rax, [rbp+i]", "cmp     rdx, rax", "jb      short loc_1476D"], ["mov~eax,[rbp+0]", "movsxd~rdx,eax", "mov~rax,[rbp+0]", "sub~rax,[rbp+0]", "cmp~rdx,rax", "jb~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 19, 9, 0.002135843708877417, ["cmp     [rbp+pad], 2Bh ; '+'", "jnz     short loc_13F92"], ["cmp~[rbp+0],0", "jnz~FOO"]], [11, 0, 439, 8, 0, 33, 0, 0, 21, 16, 0.01070452474946857, ["mov     rax, [rbp+tp]", "mov     ecx, [rax+14h]", "mov     edx, 51EB851Fh", "mov     eax, ecx", "imul    edx", "sar     edx, 5", "mov     eax, ecx", "sar     eax, 1Fh", "sub     edx, eax", "mov     eax, edx", "imul    eax, 64h", "sub     ecx, eax", "mov     eax, ecx", "mov     edx, [rbp+year_adjust]", "lea     ecx, [rax+rdx]", "mov     edx, 51EB851Fh", "mov     eax, ecx", "imul    edx", "sar     edx, 5", "mov     eax, ecx", "sar     eax, 1Fh", "sub     edx, eax", "mov     eax, edx", "mov     [rbp+yy], eax", "mov     eax, [rbp+yy]", "imul    eax, 64h", "sub     ecx, eax", "mov     eax, ecx", "mov     [rbp+yy], eax", "mov     [rbp+digits], 2", "mov     [rbp+negative_number], 0", "cmp     [rbp+yy], 0", "jns     short loc_1579A"], ["mov~rax,[rbp+0]", "mov~ecx,[rax+0]", "mov~edx,0", "mov~eax,ecx", "imul~,edx", "sar~edx,0", "mov~eax,ecx", "sar~eax,0", "sub~edx,eax", "mov~eax,edx", "imul~eax,,0", "sub~ecx,eax", "mov~eax,ecx", "mov~edx,[rbp+0]", "lea~ecx,<TAG>", "mov~edx,0", "mov~eax,ecx", "imul~,edx", "sar~edx,0", "mov~eax,ecx", "sar~eax,0", "sub~edx,eax", "mov~eax,edx", "mov~[rbp+0],eax", "mov~eax,[rbp+0]", "imul~eax,,0", "sub~ecx,eax", "mov~eax,ecx", "mov~[rbp+0],eax", "mov~[rbp+0],0", "mov~[rbp+0],0", "cmp~[rbp+0],0", "jns~FOO"]], [0, 1, 439, 1, 1, 7, 0, 1, 19, 10, 0.0011033505415527888, ["mov     rdx, [rbp+_delta_11]; n", "mov     rax, [rbp+p]", "mov     esi, 20h ; ' '; c", "mov     rdi, rax; s", "call    _memset", "mov     rax, [rbp+_delta_11]", "add     [rbp+p], rax"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,<STR>", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "add~[rbp+0],rax"]], [1, 0, 439, 0, 0, 2, 0, 1, 24, 7, 0.035737422816074504, ["cmp     [rbp+p], 0", "jz      short loc_147A3"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 439, 1, 0, 6, 0, 1, 22, 16, 0.004271687417754834, ["mov     rax, [rbp+tp]", "mov     edx, [rax+14h]", "mov     eax, 0FFFFF894h", "sub     eax, [rbp+year_adjust]", "cmp     edx, eax", "jge     short loc_1578F"], ["mov~rax,[rbp+0]", "mov~edx,[rax+0]", "mov~eax,0", "sub~eax,[rbp+0]", "cmp~edx,eax", "jge~FOO"]], [0, 0, 439, 0, 0, 3, 0, 1, 23, 15, 0.0011033505415527888, ["mov     eax, [rbp+yy]", "neg     eax", "jmp     short loc_157A0"], ["mov~eax,[rbp+0]", "neg~eax", "jmp~FOO"]], [1, 0, 439, 0, 0, 2, 0, 1, 14, 13, 0.004914465026824578, ["mov     [rbp+width], 9", "jmp     short loc_14FD4"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 439, 1, 0, 3, 0, 1, 23, 15, 0.0011033505415527888, ["mov     eax, [rbp+yy]", "add     eax, 64h ; 'd'", "jmp     short loc_157A0"], ["mov~eax,[rbp+0]", "add~eax,0", "jmp~FOO"]], [0, 0, 439, 0, 0, 1, 0, 0, 22, 15, 0.004367850997064481, ["mov     eax, [rbp+yy]"], ["mov~eax,[rbp+0]"]], [0, 1, 439, 1, 1, 9, 0, 1, 25, 7, 0.0, ["mov     eax, [rbp+padding]", "movsxd  rdx, eax; n", "mov     rax, [rbp+p]", "mov     esi, 20h ; ' '; c", "mov     rdi, rax; s", "call    _memset", "mov     eax, [rbp+padding]", "cdqe", "add     [rbp+p], rax"], ["mov~eax,[rbp+0]", "movsxd~rdx,eax", "mov~rax,[rbp+0]", "mov~esi,<STR>", "mov~rdi,rax", "call~FOO", "mov~eax,[rbp+0]", "cdqe~", "add~[rbp+0],rax"]], [0, 0, 439, 0, 0, 3, 0, 1, 14, 14, 0.004261564935722239, ["mov     eax, [rbp+width]", "mov     [rbp+j], eax", "jmp     short loc_14FCB"], ["mov~eax,[rbp+0]", "mov~[rbp+0],eax", "jmp~FOO"]], [0, 0, 439, 1, 0, 6, 0, 1, 25, 6, 0.03588926004656342, ["mov     eax, [rbp+padding]", "cdqe", "add     [rbp+i], rax", "mov     eax, [rbp+width]", "cmp     eax, [rbp+padding]", "jle     short loc_147C8"], ["mov~eax,[rbp+0]", "cdqe~", "add~[rbp+0],rax", "mov~eax,[rbp+0]", "cmp~eax,[rbp+0]", "jle~FOO"]], [4, 0, 439, 3, 0, 11, 0, 0, 16, 14, 0.0, ["mov     ecx, [rbp+number_value]", "mov     edx, 66666667h", "mov     eax, ecx", "imul    edx", "sar     edx, 2", "mov     eax, ecx", "sar     eax, 1Fh", "sub     edx, eax", "mov     eax, edx", "mov     [rbp+number_value], eax", "add     [rbp+j], 1"], ["mov~ecx,[rbp+0]", "mov~edx,0", "mov~eax,ecx", "imul~,edx", "sar~edx,0", "mov~eax,ecx", "sar~eax,0", "sub~edx,eax", "mov~eax,edx", "mov~[rbp+0],eax", "add~[rbp+0],0"]], [1, 0, 439, 0, 0, 2, 0, 1, 15, 13, 0.006554307116104869, ["cmp     [rbp+j], 8", "jle     short loc_14FA3"], ["cmp~[rbp+0],0", "jle~FOO"]], [0, 0, 439, 1, 0, 3, 0, 1, 26, 5, 0.01691213685595708, ["mov     eax, [rbp+width]", "sub     eax, [rbp+padding]", "jmp     short loc_147CD"], ["mov~eax,[rbp+0]", "sub~eax,[rbp+0]", "jmp~FOO"]], [1, 0, 439, 0, 0, 1, 0, 0, 26, 5, 0.01691213685595708, ["mov     eax, 0"], ["mov~eax,0"]]], "func_feature": [49, 20, 374, 1, 446, 693, 3, 2117, 0.03543, 8, 247], "succs": [[272, 145], [0], [0], [0], [0], [0], [18], [8, 6], [428, 6], [6], [6], [13], [11, 15], [34], [13], [13], [299], [16, 431], [65], [18, 7], [24, 57], [20, 293], [48, 31], [257, 386, 131, 261, 134, 391, 397, 398, 399, 400, 22, 156, 291, 423, 43, 47, 304, 50, 54, 244, 59, 62, 319, 201, 77, 141, 335, 347, 221, 96, 353, 99, 234, 385, 242, 243, 116, 106, 349, 315, 253, 126, 383], [79], [76], [25, 27], [25], [76], [28, 30], [28], [79], [76], [32, 350], [65], [34, 421], [76], [36, 38], [36], [65], [125, 39], [39], [76], [42, 351], [65], [274, 44], [76], [214, 46], [113, 60], [76], [49, 238], [76], [322, 51], [76], [53, 55], [53], [66, 109], [56, 114], [76], [217, 58], [67, 108], [76], [128, 61], [122, 68], [63], [63], [109, 70], [73, 108], [72, 69], [72, 71], [74, 98], [72], [79], [75, 100], [104, 98], [105, 100], [40, 97], [76], [76], [93, 94], [79], [79], [79], [79], [79], [79], [79], [79], [79], [79], [79], [79], [79], [], [], [299], [370, 95], [40], [109], [371, 103], [108], [267], [344, 101], [299], [109], [108], [107, 78], [372, 4], [113], [114], [236, 231], [194, 110], [115, 117], [65], [293], [117], [54], [121, 118], [64], [123, 86], [429, 119], [64, 124], [158, 207], [189, 135], [64], [83, 127], [307], [41, 132], [133, 5], [267, 334], [129, 265], [407], [136, 171], [137, 139], [367, 143], [142, 87], [171, 148], [138], [5], [138], [349], [140, 301], [186, 147], [299], [292], [144, 278], [144, 289], [150, 183], [160, 149], [160, 168], [183, 159], [65], [65], [65], [65], [65], [157, 175], [175], [80, 162], [161, 170], [171], [170, 174], [163, 151], [169, 196], [204, 294], [164], [164], [164], [171], [196, 172], [183], [176, 177], [185, 173], [185, 190], [183], [178, 91], [195], [192, 187], [184, 155], [296, 297], [179], [179], [179], [186], [188, 111], [196], [189], [195], [111, 191], [197, 198], [196], [193, 202], [195], [209, 202], [235], [41], [151], [293], [197], [205, 206], [213, 199], [199], [111], [211, 293], [120, 203], [200], [200], [212, 223], [207], [111], [12, 14], [88, 222], [225, 223, 220, 215], [376], [216, 219], [208], [218, 219], [349], [1], [1], [208], [407], [228, 270], [224, 258], [226], [208], [229], [237, 263], [227, 263], [232, 241], [258, 229], [235], [251, 239], [349], [233, 309], [155], [235], [240, 247], [349], [241, 251], [256, 247], [230], [245, 358], [90, 246], [249], [407], [248, 154], [263], [290, 254], [250, 255], [249], [230], [299], [252, 359], [290, 260], [373, 269], [263], [360, 180], [259, 276], [276, 271], [273, 262], [45], [288, 273], [270], [313], [264], [264], [264], [264], [45], [293], [275], [145], [290], [277, 285], [349, 23], [275], [284, 287], [280, 279], [286], [286], [401], [281, 389], [281, 395], [285, 287], [331], [289, 146], [331], [290], [292], [154], [314, 354], [310], [89, 298], [293, 311], [293], [299], [299], [153, 306], [307], [299], [299], [299], [299], [299], [299], [312, 337], [310], [307], [307], [313], [84, 325], [337, 316], [322, 52], [81, 317], [368, 305], [320, 329], [152, 321], [349], [308, 318], [336, 329], [378, 324], [323, 326], [326], [378, 332], [402, 295], [330, 327], [328, 326], [374, 326], [337], [327], [130, 266], [339, 333], [339, 348], [352, 102], [369, 338], [337], [345, 342], [340, 341], [378], [379], [379], [384], [266], [268, 343], [381, 375], [440, 436], [346, 366], [378], [406], [349], [349], [349], [349], [349], [349], [349], [349], [349], [349], [349], [349], [349], [349], [349], [349], [349], [349], [349], [349], [349], [349], [349], [349], [376], [384], [377, 380], [380], [152], [282, 403], [165, 382], [384], [166, 167], [26, 355], [153], [361, 387], [356, 29], [392, 388], [392, 390], [283, 395], [396], [33, 394], [393, 396], [396], [33], [401], [424], [362, 300], [37, 357], [363, 181], [364, 182], [420], [419, 404], [416, 409], [408, 419], [406], [417, 405], [424], [410, 412], [411, 413], [412, 414], [416, 413], [419], [415], [419], [418, 420], [415], [35, 92], [420], [295], [17, 3], [210, 422], [425, 210], [365, 302], [82, 19], [426, 427], [432, 427], [210], [9, 430], [433, 85], [9, 10], [434, 438], [210], [441, 439], [435, 437], [2], [303], [2], [2], [441], [443], [444, 445], [443], [442, 303], [21], [21]], "fname": "__strftime_internal", "n_num": 446}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 5, 0, 0, 1, 0, 0, 0, 0, 0.06944444444444445, ["mov     rax, [rbp+argv0]"], ["mov~rax,[rbp+0]"]], [2, 0, 7, 0, 1, 7, 0, 2, 1, 3, 0.09722222222222221, ["mov     rax, [rbp+argv0]", "mov     esi, 2Fh ; '/'; c", "mov     rdi, rax; s", "call    _strrchr", "mov     [rbp+slash], rax", "cmp     [rbp+slash], 0", "jz      short loc_16100"], ["mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 2, 0, 1, 9, 1, 2, 5, 1, 0.08333333333333333, ["mov     rax, [rbp+base]", "mov     [rbp+argv0], rax", "mov     rax, [rbp+base]", "mov     edx, 3; n", "lea     rsi, aLt; \"lt-\"", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_16177"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 3, 1, 1, 8, 1, 2, 4, 1, 0.1388888888888889, ["mov     rax, [rbp+base]", "sub     rax, 7", "mov     edx, 7; n", "lea     rsi, aLibs; \"/.libs/\"", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_16177"], ["mov~rax,[rbp+0]", "sub~rax,0", "mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 4, 0, 0.0, ["mov     rax, [rbp+argv0]", "mov     cs:program_name, rax", "mov     rax, [rbp+argv0]", "mov     cs:program_invocation_name@@GLIBC_2_2_5, rax", "nop", "leave", "retn"], ["mov~rax,[rbp+0]", "mov~<TAG>,rax", "mov~rax,[rbp+0]", "mov~<TAG>,rax", "nop", "leave", "retn"]], [1, 0, 4, 1, 0, 7, 0, 1, 3, 1, 0.2222222222222222, ["mov     [rbp+base], rax", "mov     rdx, [rbp+base]", "mov     rax, [rbp+argv0]", "sub     rdx, rax", "mov     rax, rdx", "cmp     rax, 6", "jle     short loc_16177"], ["mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "cmp~rax,0", "jle~FOO"]], [1, 0, 1, 1, 0, 5, 0, 0, 6, 1, 0.0, ["mov     rax, [rbp+base]", "add     rax, 3", "mov     [rbp+argv0], rax", "mov     rax, [rbp+argv0]", "mov     cs:__bss_start, rax"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~<TAG>,rax"]], [1, 1, 9, 1, 0, 6, 0, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+argv0], rdi", "cmp     [rbp+argv0], 0", "jnz     short loc_160DA"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 0, 0, 2, 7, 0, 2, 1, -1, 0.0, ["mov     rax, cs:stderr@@GLIBC_2_2_5", "mov     rcx, rax; s", "mov     edx, 37h ; '7'; n", "mov     esi, 1; size", "lea     rdi, aANullArgv0WasP; \"A NULL argv[0] was passed through an ex\"...", "call    _fwrite", "call    _abort"], ["mov~rax,<TAG>", "mov~rcx,rax", "mov~edx,0", "mov~esi,0", "lea~rdi,<TAG>", "call~FOO", "call~FOO"]], [1, 0, 5, 1, 0, 3, 0, 1, 2, 2, 0.06944444444444445, ["mov     rax, [rbp+slash]", "add     rax, 1", "jmp     short loc_16104"], ["mov~rax,[rbp+0]", "add~rax,0", "jmp~FOO"]]], "func_feature": [5, 2, 11, 0, 10, 13, 1, 60, 0.06806, 7, 5], "succs": [[5], [0, 9], [4, 6], [2, 4], [], [3, 4], [4], [8, 1], [], [5]], "fname": "set_program_name", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.08333333333333333, ["mov     rax, [rbp+o]", "jmp     short loc_161BA"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [1, 1, 3, 1, 1, 9, 0, 2, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+o], rdi", "call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+e], eax", "cmp     [rbp+o], 0", "jz      short loc_161B3"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0.08333333333333333, ["lea     rax, default_quoting_options"], ["lea~rax,<TAG>"]], [1, 0, 0, 0, 2, 11, 0, 2, 2, 0, 0.0, ["mov     esi, 38h ; '8'; s", "mov     rdi, rax; p", "call    xmemdup", "mov     [rbp+p], rax", "call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+e]", "mov     [rdx], eax", "mov     rax, [rbp+p]", "leave", "retn"], ["mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "mov~rax,[rbp+0]", "leave", "retn"]]], "func_feature": [3, 0, 5, 0, 4, 4, 2, 23, 0.04167, 1, 1], "succs": [[3], [0, 2], [3], []], "fname": "clone_quoting_options", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.08333333333333333, ["mov     rax, [rbp+o]", "jmp     short loc_161FA"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [1, 0, 3, 0, 0, 5, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+o], rdi", "cmp     [rbp+o], 0", "jz      short loc_161F3"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["mov     eax, [rax]", "pop     rbp", "retn"], ["mov~eax,<TAG>", "pop~rbp", "retn"]], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0.08333333333333333, ["lea     rax, default_quoting_options"], ["lea~rax,<TAG>"]]], "func_feature": [0, 0, 2, 0, 4, 4, 3, 11, 0.04167, 1, 0], "succs": [[2], [0, 3], [], [2]], "fname": "get_quoting_style", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["mov     edx, [rbp+s]", "mov     [rax], edx", "nop", "pop     rbp", "retn"], ["mov~edx,[rbp+0]", "mov~<TAG>,edx", "nop", "pop~rbp", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.08333333333333333, ["mov     rax, [rbp+o]", "jmp     short loc_1621D"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0.08333333333333333, ["lea     rax, default_quoting_options"], ["lea~rax,<TAG>"]], [1, 0, 3, 0, 0, 6, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+o], rdi", "mov     [rbp+s], esi", "cmp     [rbp+o], 0", "jz      short loc_16216"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "cmp~[rbp+0],0", "jz~FOO"]]], "func_feature": [0, 0, 2, 0, 4, 4, 8, 14, 0.04167, 1, 0], "succs": [[], [0], [0], [1, 2]], "fname": "set_quoting_style", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 3, 0, 0, 10, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+o], rdi", "mov     eax, esi", "mov     [rbp+i], edx", "mov     [rbp+c], al", "movzx   eax, [rbp+c]", "mov     [rbp+uc], al", "cmp     [rbp+o], 0", "jz      short loc_16249"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~eax,esi", "mov~[rbp+0],edx", "mov~[rbp+0],al", "movzx~eax,[rbp+0]", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [5, 0, 0, 3, 0, 34, 5, 0, 0, 0, 0.0, ["lea     rdx, [rax+8]", "movzx   eax, [rbp+uc]", "shr     al, 5", "movzx   eax, al", "shl     rax, 2", "add     rax, rdx", "mov     [rbp+p], rax", "movzx   eax, [rbp+uc]", "and     eax, 1Fh", "mov     [rbp+shift], eax", "mov     rax, [rbp+p]", "mov     edx, [rax]", "mov     eax, [rbp+shift]", "mov     ecx, eax", "shr     edx, cl", "mov     eax, edx", "and     eax, 1", "mov     [rbp+r], eax", "mov     rax, [rbp+p]", "mov     edx, [rax]", "mov     eax, [rbp+i]", "and     eax, 1", "xor     eax, [rbp+r]", "mov     esi, eax", "mov     eax, [rbp+shift]", "mov     ecx, eax", "shl     esi, cl", "mov     eax, esi", "xor     edx, eax", "mov     rax, [rbp+p]", "mov     [rax], edx", "mov     eax, [rbp+r]", "pop     rbp", "retn"], ["lea~rdx,[rax+0]", "movzx~eax,[rbp+0]", "shr~al,0", "movzx~eax,al", "shl~rax,0", "add~rax,rdx", "mov~[rbp+0],rax", "movzx~eax,[rbp+0]", "and~eax,0", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~edx,<TAG>", "mov~eax,[rbp+0]", "mov~ecx,eax", "shr~edx,cl", "mov~eax,edx", "and~eax,0", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~edx,<TAG>", "mov~eax,[rbp+0]", "and~eax,0", "xor~eax,[rbp+0]", "mov~esi,eax", "mov~eax,[rbp+0]", "mov~ecx,eax", "shl~esi,cl", "mov~eax,esi", "xor~edx,eax", "mov~rax,[rbp+0]", "mov~<TAG>,edx", "mov~eax,[rbp+0]", "pop~rbp", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.08333333333333333, ["mov     rax, [rbp+o]", "jmp     short loc_16250"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.08333333333333333, ["lea     rax, default_quoting_options"], ["lea~rax,<TAG>"]]], "func_feature": [0, 5, 2, 0, 4, 4, 5, 47, 0.04167, 1, 3], "succs": [[2, 3], [], [1], [1]], "fname": "set_char_quoting", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "mov     [rbp+o], rax"], ["lea~rax,<TAG>", "mov~[rbp+0],rax"]], [1, 0, 2, 0, 0, 6, 0, 1, 0, 1, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+o], rdi", "mov     [rbp+i], esi", "cmp     [rbp+o], 0", "jnz     short loc_162CC"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 0, 9, 0, 0, 1, 0, 0.0, ["mov     rax, [rbp+o]", "mov     eax, [rax+4]", "mov     [rbp+r], eax", "mov     rax, [rbp+o]", "mov     edx, [rbp+i]", "mov     [rax+4], edx", "mov     eax, [rbp+r]", "pop     rbp", "retn"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~[rax+0],edx", "mov~eax,[rbp+0]", "pop~rbp", "retn"]]], "func_feature": [0, 0, 1, 0, 3, 3, 0, 17, 0.0, 1, 0], "succs": [[2], [0, 2], []], "fname": "set_quoting_flags", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 2, 0, 0, 2, 0, 1, 0, 0, 0.15000000000000002, ["cmp     [rbp+right_quote], 0", "jnz     short loc_16328"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 3, 0, 0, 4, 0, 1, 1, 2, 0.30000000000000004, ["mov     rax, [rbp+o]", "mov     dword ptr [rax], 0Ah", "cmp     [rbp+left_quote], 0", "jz      short loc_16323"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 9, 0, 0, 3, 0, 0.0, ["mov     rax, [rbp+o]", "mov     rdx, [rbp+left_quote]", "mov     [rax+28h], rdx", "mov     rax, [rbp+o]", "mov     rdx, [rbp+right_quote]", "mov     [rax+30h], rdx", "nop", "leave", "retn"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "nop", "leave", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 1, 3, 0.0, ["lea     rax, default_quoting_options", "mov     [rbp+o], rax"], ["lea~rax,<TAG>", "mov~[rbp+0],rax"]], [1, 1, 5, 1, 0, 8, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+o], rdi", "mov     [rbp+left_quote], rsi", "mov     [rbp+right_quote], rdx", "cmp     [rbp+o], 0", "jnz     short loc_1630B"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "cmp~[rbp+0],0", "jnz~FOO"]]], "func_feature": [1, 0, 4, 0, 6, 7, 1, 26, 0.075, 1, 1], "succs": [[2, 3], [0, 3], [], [], [1], [1, 4]], "fname": "set_custom_quoting", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 21, 1, 1, 1, 1, 0.16666666666666666, ["mov     eax, [rbp+style]", "mov     [rbp+o.style], eax", "mov     rcx, [rbp+var_48]", "mov     rax, qword ptr [rbp+o.style]", "mov     rdx, qword ptr [rbp+o.quote_these_too]", "mov     [rcx], rax", "mov     [rcx+8], rdx", "mov     rax, qword ptr [rbp+o.quote_these_too+8]", "mov     rdx, qword ptr [rbp+o.quote_these_too+10h]", "mov     [rcx+10h], rax", "mov     [rcx+18h], rdx", "mov     rax, qword ptr [rbp+o.quote_these_too+18h]", "mov     rdx, [rbp+o.left_quote]", "mov     [rcx+20h], rax", "mov     [rcx+28h], rdx", "mov     rax, [rbp+o.right_quote]", "mov     [rcx+30h], rax", "mov     rax, [rbp+var_48]", "mov     rdx, [rbp+var_8]", "xor     rdx, fs:28h", "jz      short locret_163FD"], ["mov~eax,[rbp+0]", "mov~[rbp+0],eax", "mov~rcx,[rbp+0]", "mov~rax,[word ptr [rbp+0]", "mov~rdx,[word ptr [rbp+0]", "mov~<TAG>,rax", "mov~[rcx+0],rdx", "mov~rax,[word ptr [rbp+0]", "mov~rdx,[word ptr [rbp+0]", "mov~[rcx+0],rax", "mov~[rcx+0],rdx", "mov~rax,[word ptr [rbp+0]", "mov~rdx,[rbp+0]", "mov~[rcx+0],rax", "mov~[rcx+0],rdx", "mov~rax,[rbp+0]", "mov~[rcx+0],rax", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "xor~rdx,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [8, 1, 4, 1, 0, 17, 1, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+var_48], rdi", "mov     [rbp+style], esi", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     qword ptr [rbp+o.style], 0", "mov     qword ptr [rbp+o.quote_these_too], 0", "mov     qword ptr [rbp+o.quote_these_too+8], 0", "mov     qword ptr [rbp+o.quote_these_too+10h], 0", "mov     qword ptr [rbp+o.quote_these_too+18h], 0", "mov     [rbp+o.left_quote], 0", "mov     [rbp+o.right_quote], 0", "cmp     [rbp+style], 0Ah", "jnz     short loc_163A4"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[word ptr [rbp+0],0", "mov~[word ptr [rbp+0],0", "mov~[word ptr [rbp+0],0", "mov~[word ptr [rbp+0],0", "mov~[word ptr [rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [2, 2, 4, 2, 5, 4, 3, 42, 0.03333, 1, 1], "succs": [[], [0, 2], [], [1, 4], []], "fname": "quoting_options_from_style", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.004807692307692308, ["lea     rax, unk_1FD22", "jmp     short locret_164B8"], ["lea~rax,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 4, 0, 1, 3, 2, 0.041666666666666664, ["mov     rax, [rbp+msgid]", "movzx   eax, byte ptr [rax]", "cmp     al, 60h ; '`'", "jnz     short loc_16499"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.00641025641025641, ["lea     rax, unk_1FD0E", "jmp     short locret_164B8"], ["lea~rax,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 4, 0, 1, 2, 2, 0.03205128205128205, ["mov     rax, [rbp+msgid]", "movzx   eax, byte ptr [rax]", "cmp     al, 60h ; '`'", "jnz     short loc_16465"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 2, 0.041666666666666664, ["cmp     [rbp+s], 9", "jnz     short loc_164B1"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 7, 0, 1, 6, 1, 2, 2, 3, 0.07692307692307693, ["mov     rax, [rbp+locale_code]", "lea     rsi, aGb18030; \"GB18030\"", "mov     rdi, rax; s1", "call    c_strcasecmp", "test    eax, eax", "jnz     short loc_164A2"], ["mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 1, 13, 1, 1, 12, 0, 2, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+msgid], rdi", "mov     [rbp+s], esi", "mov     rax, [rbp+msgid]", "mov     rdi, rax; msgid", "call    _gettext", "mov     [rbp+translation], rax", "mov     rax, [rbp+translation]", "cmp     rax, [rbp+msgid]", "jz      short loc_16431"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.00641025641025641, ["mov     rax, [rbp+translation]", "jmp     locret_164B8"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.00641025641025641, ["lea     rax, unk_1FD12", "jmp     short locret_164B8"], ["lea~rax,<TAG>", "jmp~FOO"]], [0, 0, 11, 0, 2, 8, 1, 3, 1, 3, 0.0641025641025641, ["call    locale_charset", "mov     [rbp+locale_code], rax", "mov     rax, [rbp+locale_code]", "lea     rsi, aUtf8; \"UTF-8\"", "mov     rdi, rax; s1", "call    c_strcasecmp", "test    eax, eax", "jnz     short loc_1646E"], ["call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, 1, 0.004807692307692308, ["lea     rax, asc_1FD27; \"'\""], ["lea~rax,<TAG>"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.004807692307692308, ["lea     rax, unk_1FD1E", "jmp     short locret_164B8"], ["lea~rax,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.004807692307692308, ["lea     rax, unk_1FD25", "jmp     short locret_164B8"], ["lea~rax,<TAG>", "jmp~FOO"]]], "func_feature": [4, 2, 16, 0, 14, 19, 2, 51, 0.02106, 8, 1], "succs": [[12], [0, 11], [12], [8, 2], [10, 13], [1, 4], [9, 7], [12], [12], [3, 5], [12], [12], [], [12]], "fname": "gettext_quote", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 281, 0, 0, 2, 0, 1, 0, 0, 0.015391459074733096, ["nop", "jmp     short store_c"], ["nop", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 5, 0.018485002541942047, ["cmp     [rbp+elide_outer_quotes], 0", "jz      loc_17200"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 1, 0, 6, 1, 1, 12, 10, 0.004899593289273005, ["mov     rax, [rbp+arg]", "add     rax, 1", "movzx   eax, byte ptr [rax]", "test    al, al", "setnz   al", "jmp     short loc_16BB8"], ["mov~rax,[rbp+0]", "add~rax,0", "movzx~eax,<TAG>", "test~al,al", "setnz~al", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 11, 0.012595322826639553, ["cmp     [rbp+argsize], 0FFFFFFFFFFFFFFFFh; jumptable 000000000001681E cases 123,125", "jnz     short loc_16BAD"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 281, 0, 0, 3, 0, 1, 3, 11, 0.020939247585155057, ["mov     [rbp+backslash_escapes], 1; jumptable 00000000000165A2 case 7", "mov     [rbp+elide_outer_quotes], 0", "jmp     loc_16729"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 281, 1, 0, 8, 0, 1, 2, 12, 0.1197508896797153, ["mov     eax, [rbp+quoting_style]", "lea     rdx, ds:0[rax*4]", "lea     rax, off_1FD2C", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_1FD2C", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,[rbp+0]", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 281, 1, 0, 4, 0, 0, 18, 14, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 1, 0, 4, 0, 0, 17, 14, 0.013345195729537365, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_17259"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 15, 14, 0.3029422979156075, ["nop"], ["nop"]], [1, 0, 281, 0, 0, 4, 2, 1, 14, 7, 0.3301813251991188, ["movzx   eax, [rbp+is_right_quote]", "xor     eax, 1", "test    al, al", "jnz     loc_17206"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jnz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 19, 4, 0.0006227758007117438, ["nop", "jmp     short force_outer_quoting_style"], ["nop", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 18, 5, 0.03173614641586172, ["cmp     [rbp+elide_outer_quotes], 0; jumptable 0000000000016A3D cases 33,39-41,45,47,60-62", "jnz     loc_17408"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 18, 9, 0.037201321809862735, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_170A8"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 17, 10, 0.03453228266395526, ["cmp     [rbp+pending_shell_escape_end], 0", "jz      short loc_17087"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 18, 10, 0.015696492119979664, ["movzx   eax, [rbp+escaping]", "xor     eax, 1", "test    al, al", "jz      short loc_17087"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [2, 0, 281, 1, 0, 2, 0, 0, 21, 10, 0.014107778342653787, ["add     [rbp+len], 1", "mov     [rbp+pending_shell_escape_end], 0"], ["add~[rbp+0],0", "mov~[rbp+0],0"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 13, 0.5487925775292323, ["cmp     [rbp+pending_shell_escape_end], 0", "jz      short loc_17262"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 281, 0, 0, 2, 0, 1, 17, 14, 0.1396733604473818, ["nop", "jmp     store_c"], ["nop", "jmp~FOO"]], [1, 0, 281, 1, 0, 2, 0, 1, 17, 14, 0.06698017285205897, ["add     [rbp+len], 1", "jmp     short store_c"], ["add~[rbp+0],0", "jmp~FOO"]], [0, 0, 281, 0, 0, 2, 0, 1, 15, 14, 0.009189120488052873, ["nop", "jmp     short store_c"], ["nop", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 14, 4, 0.000800711743772242, ["nop", "jmp     short force_outer_quoting_style"], ["nop", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 13, 5, 0.0038891713268937467, ["cmp     [rbp+elide_outer_quotes], 0", "jnz     loc_1740B"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 17, 13, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 5Ch ; '\\'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 281, 0, 0, 3, 0, 0, 16, 13, 0.006316725978647687, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_17011"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 10, 0, 0, 3, 0, 0, 14, 6, 0.006494661921708185, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_173C6"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 10, 0, 0, 4, 1, 1, 13, 4, 0.010027961362480934, ["mov     rax, [rbp+quote_string]", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_173A2"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 3, 13, 0.024885612608032535, ["cmp     [rbp+quoting_style], 0Ah; jumptable 00000000000165A2 cases 8-10", "jz      short loc_16648"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 12, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 281, 0, 0, 3, 0, 0, 19, 12, 0.012582613116420945, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_1705B"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 13, 15, 0.031354855109303505, ["cmp     [rbp+buffersize], 0", "jz      short loc_16C31"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 5, 0.03444839857651246, ["cmp     [rbp+elide_outer_quotes], 0", "jnz     loc_1740E"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 16, 4, 0.0006227758007117438, ["nop", "jmp     short force_outer_quoting_style"], ["nop", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 15, 5, 0.006875953228266395, ["cmp     [rbp+elide_outer_quotes], 0", "jnz     loc_17402"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 281, 4, 0, 12, 0, 1, 19, 6, 0.010015251652262329, ["mov     rdx, [rbp+i]", "mov     rax, [rbp+m]", "add     rdx, rax", "mov     rax, [rbp+j]", "add     rdx, rax", "mov     rax, [rbp+arg]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "sub     eax, 5Bh ; '['; switch 34 cases", "cmp     eax, 21h ; '!'", "ja      short loc_16E3A; jumptable 0000000000016E38 default case"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "movsx~eax,al", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 18, 7, 0.026715810879511945, ["mov     rax, [rbp+j]", "cmp     rax, [rbp+bytes]", "jb      short loc_16DED"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jb~FOO"]], [2, 0, 281, 2, 0, 9, 0, 1, 16, 7, 0.04378495170310117, ["mov     rax, [rbp+i]", "lea     rdx, [rax+2]", "mov     rax, [rbp+arg]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "sub     eax, 21h ; '!'; switch 30 cases", "cmp     eax, 1Dh", "ja      loc_16AF4; jumptable 0000000000016A3D default case"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "movsx~eax,al", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 281, 1, 0, 7, 0, 1, 15, 8, 0.04668276563294357, ["mov     rax, [rbp+i]", "lea     rdx, [rax+1]", "mov     rax, [rbp+arg]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "cmp     al, 3Fh ; '?'", "jnz     loc_16AFD"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 11, 0.013345195729537365, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_1707E"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 21, 11, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [3, 0, 281, 0, 0, 4, 0, 1, 11, 6, 0.04040925266903915, ["mov     [rbp+encountered_single_quote], 1; jumptable 000000000001681E case 39", "mov     [rbp+c_and_shell_quote_compat], 1", "cmp     [rbp+quoting_style], 2", "jnz     loc_170E0"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 11, 4, 0.00376842907981698, ["nop"], ["nop"]], [1, 0, 281, 0, 0, 2, 0, 1, 10, 5, 0.006856888662938485, ["cmp     [rbp+elide_outer_quotes], 0", "jnz     loc_1741A"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 13, 1, 0.0070665988815455, ["mov     rbx, [rbp+var_18]", "xor     rbx, fs:28h", "jz      short loc_1749A"], ["mov~rbx,[rbp+0]", "xor~rbx,<TAG>", "jz~FOO"]], [2, 1, 3, 2, 1, 15, 0, 2, 13, 2, 9.532282663955262e-05, ["mov     edi, [rbp+flags]", "mov     rcx, [rbp+argsize]; argsize", "mov     rdx, [rbp+arg]; arg", "mov     rsi, [rbp+orig_buffersize]; buffersize", "mov     rax, [rbp+buffer]", "sub     rsp, 8", "push    [rbp+right_quote]; right_quote", "push    [rbp+left_quote]; left_quote", "push    [rbp+quote_these_too]; quote_these_too", "mov     r9d, edi; flags", "mov     r8d, 5; quoting_style", "mov     rdi, rax; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h", "jmp     loc_17486"], ["mov~edi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "sub~rsp,0", "push~[rbp+0]", "push~[rbp+0]", "push~[rbp+0]", "mov~r9d,edi", "mov~r8d,0", "mov~rdi,rax", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 12, 2, 0.0029740721911540417, ["mov     rax, [rbp+len]", "jmp     loc_17486"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [3, 1, 3, 2, 1, 17, 1, 1, 13, 2, 0.007416115912557193, ["mov     eax, [rbp+flags]", "and     eax, 0FFFFFFFDh", "mov     r8d, eax", "mov     edi, [rbp+quoting_style]", "mov     rcx, [rbp+argsize]; argsize", "mov     rdx, [rbp+arg]; arg", "mov     rsi, [rbp+buffersize]; buffersize", "mov     rax, [rbp+buffer]", "sub     rsp, 8", "push    [rbp+right_quote]; right_quote", "push    [rbp+left_quote]; left_quote", "push    0; quote_these_too", "mov     r9d, r8d; flags", "mov     r8d, edi; quoting_style", "mov     rdi, rax; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~eax,[rbp+0]", "and~eax,0", "mov~r8d,eax", "mov~edi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "sub~rsp,0", "push~[rbp+0]", "push~[rbp+0]", "push~0", "mov~r9d,r8d", "mov~r8d,edi", "mov~rdi,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 281, 1, 0, 8, 0, 1, 10, 7, 0.36952211489578035, ["mov     eax, eax", "lea     rdx, ds:0[rax*4]", "lea     rax, off_1FD58", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_1FD58", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,eax", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 281, 1, 0, 8, 0, 1, 9, 8, 0.5461616675139807, ["mov     rdx, [rbp+arg]", "mov     rax, [rbp+i]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "mov     [rbp+c], al", "movzx   eax, [rbp+c]", "cmp     eax, 7Eh ; '~'; switch 127 cases", "ja      loc_16CAC; jumptable 000000000001681E default case"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "mov~[rbp+0],al", "movzx~eax,[rbp+0]", "cmp~eax,0", "ja~FOO"]], [0, 0, 281, 1, 0, 4, 0, 0, 13, 8, 0.13445602440264362, ["mov     rdx, [rbp+i]", "mov     rax, [rbp+m]", "add     rax, rdx", "mov     [rbp+ilim], rax"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax"]], [1, 0, 281, 0, 0, 4, 0, 1, 12, 9, 0.18070665988815454, ["movzx   eax, [rbp+printable]", "mov     [rbp+c_and_shell_quote_compat], al", "cmp     [rbp+m], 1", "ja      short loc_16EA5"], ["movzx~eax,[rbp+0]", "mov~[rbp+0],al", "cmp~[rbp+0],0", "ja~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 14, 9, 0.0005147432638535841, ["movzx   eax, [rbp+printable]", "xor     eax, 1", "test    al, al", "jz      loc_170E1"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 12, 3, 0.017329689883070664, ["cmp     [rbp+quoting_style], 2", "jnz     short loc_17434"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 13, 4, 0.00028469750889679714, ["jmp     force_outer_quoting_style"], ["jmp~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 13, 4, 0.0002846975088967971, ["jmp     force_outer_quoting_style"], ["jmp~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 13, 4, 0.0008185053380782917, ["jmp     force_outer_quoting_style"], ["jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 13, 4, 0.0002846975088967971, ["nop", "jmp     short force_outer_quoting_style"], ["nop", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 13, 4, 0.0002846975088967971, ["nop", "jmp     short force_outer_quoting_style"], ["nop", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 21, 4, 0.0007117437722419928, ["nop; jumptable 0000000000016E38 cases 91,92,94,96,124", "jmp     short force_outer_quoting_style"], ["nop", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 17, 4, 0.0049377224199288255, ["nop", "jmp     short force_outer_quoting_style"], ["nop", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 15, 4, 0.006183274021352313, ["nop", "jmp     short force_outer_quoting_style"], ["nop", "jmp~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 16, 15, 0.012582613116420945, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_17236"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 15, 13, 0.015696492119979664, ["movzx   eax, [rbp+escaping]", "xor     eax, 1", "test    al, al", "jz      short loc_17262"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 6, 0.09025673614641584, ["cmp     [rbp+backslash_escapes], 0; jumptable 000000000001681E case 0", "jz      loc_1697B"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 5, 0.0671631926792069, ["cmp     [rbp+elide_outer_quotes], 0", "jnz     loc_17405"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 3, 0, 0, 15, 15, 0.0, ["mov     rax, [rbp+buffersize]", "mov     [rbp+orig_buffersize], rax", "mov     [rbp+buffersize], 0"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~[rbp+0],0"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 15, 0.0031647178444331467, ["cmp     [rbp+orig_buffersize], 0", "jnz     short loc_16C31"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 13, 3, 0.003355363497712252, ["cmp     [rbp+backslash_escapes], 0", "jz      short loc_17434"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 15, 10, 0.034265378749364514, ["cmp     [rbp+elide_outer_quotes], 0", "jz      short loc_16E4A"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 11, 0.05591001525165226, ["cmp     [rbp+bytes], 0FFFFFFFFFFFFFFFEh", "jnz     short loc_16DD4"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 17, 15, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 4, 0, 0, 1, 0, 0, 14, 3, 0.0, ["mov     [rbp+quoting_style], 4"], ["mov~[rbp+0],0"]], [2, 0, 281, 1, 0, 2, 0, 0, 18, 13, 0.014107778342653787, ["add     [rbp+len], 1", "mov     [rbp+pending_shell_escape_end], 0"], ["add~[rbp+0],0", "mov~[rbp+0],0"]], [0, 0, 281, 1, 0, 8, 0, 1, 20, 5, 0.0038002033553634976, ["mov     eax, eax", "lea     rdx, ds:0[rax*4]", "lea     rax, off_1FFCC", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_1FFCC", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,eax", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 281, 0, 0, 4, 2, 1, 16, 16, 0.02188612099644128, ["movzx   eax, [rbp+pending_shell_escape_end]", "xor     eax, 1", "test    al, al", "jz      short loc_171DB"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [2, 0, 281, 0, 0, 3, 0, 1, 15, 16, 0.06278596847991866, ["mov     [rbp+escaping], 1", "cmp     [rbp+quoting_style], 2", "jnz     short loc_171DB"], ["mov~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 1, 0, 2, 0, 0, 20, 8, 0.006875953228266395, ["nop; jumptable 0000000000016E38 default case", "add     [rbp+j], 1"], ["nop", "add~[rbp+0],0"]], [0, 0, 281, 0, 0, 3, 0, 0, 14, 14, 0.032498729028978136, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_16C4F"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 281, 1, 0, 8, 0, 1, 17, 6, 0.03468479918657855, ["mov     eax, eax", "lea     rdx, ds:0[rax*4]", "lea     rax, off_1FF54", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_1FF54", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,eax", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [2, 0, 281, 0, 0, 3, 0, 1, 13, 14, 0.06406964921199797, ["mov     [rbp+escaping], 1", "cmp     [rbp+quoting_style], 2", "jnz     short loc_168B9"], ["mov~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 281, 0, 2, 10, 0, 2, 4, 13, 0.0, ["mov     eax, [rbp+quoting_style]", "mov     esi, eax; s", "lea     rdi, asc_1FD29; \"`\"", "call    gettext_quote", "mov     [rbp+left_quote], rax", "mov     eax, [rbp+quoting_style]", "mov     esi, eax; s", "lea     rdi, asc_1FD27; \"'\"", "call    gettext_quote", "mov     [rbp+right_quote], rax"], ["mov~eax,[rbp+0]", "mov~esi,eax", "lea~rdi,<TAG>", "call~FOO", "mov~[rbp+0],rax", "mov~eax,[rbp+0]", "mov~esi,eax", "lea~rdi,<TAG>", "call~FOO", "mov~[rbp+0],rax"]], [1, 0, 281, 0, 0, 2, 0, 1, 17, 8, 0.015899847483477374, ["mov     [rbp+j], 1", "jmp     short loc_16E40"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 14, 14, 0.02188612099644128, ["movzx   eax, [rbp+pending_shell_escape_end]", "xor     eax, 1", "test    al, al", "jz      short loc_168B9"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 15, 14, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 0, 0, 4, 2, 1, 4, 12, 0.025648195221148955, ["movzx   eax, [rbp+elide_outer_quotes]", "xor     eax, 1", "test    al, al", "jz      short loc_16699"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 9, 5, 0.15413701067615657, ["cmp     [rbp+quoting_style], 2", "jnz     loc_1738E"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 8, 6, 0.1599517031011693, ["cmp     [rbp+len], 0", "jnz     short loc_172EE"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 9, 6, 0.009938993390950685, ["cmp     [rbp+quoting_style], 2", "jnz     short loc_172EE"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 4, 0.12095195729537365, ["cmp     [rbp+encountered_single_quote], 0", "jz      short loc_1738E"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 10, 5, 0.12071682765632943, ["movzx   eax, [rbp+elide_outer_quotes]", "xor     eax, 1", "test    al, al", "jz      loc_1738E"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 281, 0, 1, 5, 1, 2, 16, 12, 0.033032536858159635, ["mov     eax, [rbp+w]", "mov     edi, eax; wc", "call    _iswprint", "test    eax, eax", "jnz     short loc_16E5C"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 16, 9, 0.018912048805287237, ["cmp     [rbp+quoting_style], 2", "jnz     short loc_16E4A"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 15, 17, 0.018797661413319774, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_1686A"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 1, 0, 0, 17, 12, 0.0, ["mov     [rbp+printable], 0"], ["mov~[rbp+0],0"]], [0, 0, 281, 0, 0, 3, 0, 1, 5, 13, 0.012506354855109304, ["mov     rax, [rbp+left_quote]", "mov     [rbp+quote_string], rax", "jmp     short loc_1668E"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 15, 13, 0.03326131164209456, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_16C72"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 16, 17, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 0, 0, 4, 0, 1, 15, 14, 0.11860701576004067, ["mov     rax, [rbp+orig_buffersize]", "mov     [rbp+buffersize], rax", "mov     [rbp+len], 0", "jmp     process_input"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 5, 0.11839095068632435, ["cmp     [rbp+orig_buffersize], 0", "jz      short loc_1738E"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 7, 14, 0.006316725978647687, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_16684"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 281, 0, 0, 4, 1, 1, 6, 12, 0.023525673614641585, ["mov     rax, [rbp+quote_string]", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_16660"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 15, 12, 0.5514616166751398, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_17283"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 16, 13, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 5Ch ; '\\'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 2, 0, 10, 0, 0, 19, 17, 0.02830452465683782, ["mov     rax, [rbp+i]", "lea     rdx, [rax+2]", "mov     rax, [rbp+arg]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "mov     [rbp+c], al", "add     [rbp+i], 2", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_16A84"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "mov~[rbp+0],al", "add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 281, 1, 1, 7, 1, 2, 17, 11, 0.03379511947127605, ["mov     rax, [rbp+bytes]", "add     [rbp+m], rax", "lea     rax, [rbp+mbstate]", "mov     rdi, rax; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_16D26"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 5, 0.07177808845958311, ["cmp     [rbp+elide_outer_quotes], 0", "jnz     loc_17417"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 281, 0, 0, 1, 0, 1, 18, 10, 0.03216827656329436, ["jmp     short loc_16E7E"], ["jmp~FOO"]], [1, 0, 4, 1, 0, 4, 0, 0, 12, 3, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 0"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 5, 0, 0, 3, 0, 0, 11, 3, 0.009456024402643618, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_173F9"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 16, 16, 0.019560244026436198, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_1688D"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 281, 0, 0, 2, 0, 1, 13, 10, 0.00979918657854601, ["nop", "jmp     short loc_16E7E"], ["nop", "jmp~FOO"]], [1, 0, 281, 3, 1, 20, 0, 2, 12, 11, 0.07458057956278596, ["mov     rdx, [rbp+i]", "mov     rax, [rbp+m]", "add     rdx, rax", "mov     rax, [rbp+argsize]", "sub     rax, rdx", "mov     rdi, rax", "mov     rdx, [rbp+i]", "mov     rax, [rbp+m]", "add     rdx, rax", "mov     rax, [rbp+arg]", "lea     rsi, [rdx+rax]; s", "lea     rdx, [rbp+mbstate]", "lea     rax, [rbp+w]", "mov     rcx, rdx; ps", "mov     rdx, rdi; n", "mov     rdi, rax; pwc", "call    rpl_mbrtowc", "mov     [rbp+bytes], rax", "cmp     [rbp+bytes], 0", "jz      loc_16E7A"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "sub~rax,rdx", "mov~rdi,rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "lea~rsi,<TAG>", "lea~rdx,[rbp+0]", "lea~rax,[rbp+0]", "mov~rcx,rdx", "mov~rdx,rdi", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 17, 10, 0.020754956786985256, ["nop"], ["nop"]], [0, 0, 281, 1, 0, 5, 0, 0, 16, 11, 0.022801220132180985, ["mov     rdx, [rbp+i]", "mov     rax, [rbp+m]", "add     rax, rdx", "cmp     [rbp+argsize], rax", "jbe     loc_16E7D"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "cmp~[rbp+0],rax", "jbe~FOO"]], [0, 0, 281, 0, 0, 1, 0, 1, 18, 11, 0.0035205897305541434, ["jmp     loc_16E7D"], ["jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 16, 5, 0.05713650228774784, ["cmp     [rbp+elide_outer_quotes], 0", "jnz     loc_17414"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 17, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 3Fh ; '?'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 281, 1, 0, 6, 0, 0, 8, 14, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rdx, rax", "mov     rax, [rbp+quote_string]", "movzx   eax, byte ptr [rax]", "mov     [rdx], al"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "mov~<TAG>,al"]], [1, 0, 281, 1, 0, 4, 0, 0, 5, 13, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 22h ; '\"'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 281, 0, 0, 3, 0, 0, 4, 13, 0.006316725978647687, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_165DB"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [2, 0, 281, 1, 0, 2, 0, 0, 17, 12, 0.007079308591764108, ["add     [rbp+len], 1", "mov     [rbp+is_right_quote], 0"], ["add~[rbp+0],0", "mov~[rbp+0],0"]], [2, 0, 281, 2, 0, 2, 0, 0, 8, 13, 0.007079308591764108, ["add     [rbp+len], 1", "add     [rbp+quote_string], 1"], ["add~[rbp+0],0", "add~[rbp+0],0"]], [1, 0, 281, 1, 0, 4, 0, 0, 17, 16, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 24h ; '$'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 0, 0, 2, 0, 1, 13, 5, 0.1183019827147941, ["cmp     [rbp+buffersize], 0", "jnz     short loc_1738E"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 3, 0.1212061514997458, ["cmp     [rbp+all_c_and_shell_quote_compat], 0", "jz      short loc_17365"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 13, 10, 0.04452846975088968, ["cmp     [rbp+backslash_escapes], 0", "jz      loc_170E1"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 281, 1, 0, 5, 2, 1, 16, 11, 0.5522241992882562, ["add     [rbp+len], 1", "movzx   eax, [rbp+c_and_shell_quote_compat]", "xor     eax, 1", "test    al, al", "jz      short loc_17297"], ["add~[rbp+0],0", "movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 281, 1, 0, 5, 0, 0, 16, 12, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rdx, rax", "movzx   eax, [rbp+c]", "mov     [rdx], al"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "movzx~eax,[rbp+0]", "mov~<TAG>,al"]], [1, 0, 281, 1, 0, 4, 0, 0, 17, 12, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 1, 0, 4, 0, 0, 16, 12, 0.034023894255210976, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_16C95"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 1, 0, 0, 17, 11, 0.0, ["mov     [rbp+all_c_and_shell_quote_compat], 0"], ["mov~[rbp+0],0"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 16, 0.029067107269954245, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_16AA7"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 14, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 10, 4, 0.0313421453990849, ["cmp     [rbp+quote_string], 0", "jz      short loc_173DB"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 11, 0, 0, 4, 2, 1, 11, 4, 0.01601423487544484, ["movzx   eax, [rbp+elide_outer_quotes]", "xor     eax, 1", "test    al, al", "jz      short loc_173DB"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 17, 15, 0.020322826639552618, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_168B0"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [2, 0, 281, 1, 0, 3, 0, 1, 17, 11, 0.0347864768683274, ["add     [rbp+len], 1", "mov     [rbp+pending_shell_escape_end], 0", "jmp     loc_170E0"], ["add~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 8, 0.009278088459583122, ["cmp     [rbp+quote_string_len], 0", "jnz     loc_17203"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 21, 16, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 22h ; '\"'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 10, 0.012874936451448906, ["mov     [rbp+c_and_shell_quote_compat], 1; jumptable 000000000001681E cases 37,43-58,65-90,93,95,97-122", "jmp     loc_170E1"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 15, 6, 0.05999618708693442, ["movzx   eax, [rbp+printable]", "xor     eax, 1", "test    al, al", "jz      loc_16FED"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 7, 0.17635993899339095, ["cmp     [rbp+backslash_escapes], 0", "jz      loc_16FED"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 18, 15, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 0, 0, 2, 0, 1, 10, 11, 0.17469496695475342, ["cmp     [rbp+unibyte_locale], 0; jumptable 000000000001681E default case", "jz      short loc_16CE4"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 281, 1, 0, 2, 0, 0, 18, 14, 0.021085409252669038, ["add     [rbp+len], 1", "mov     [rbp+pending_shell_escape_end], 1"], ["add~[rbp+0],0", "mov~[rbp+0],0"]], [1, 0, 281, 1, 0, 4, 0, 0, 21, 15, 0.029829689883070665, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_16ACA"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 1, 8, 0, 2, 5, 11, 0.02793594306049822, ["mov     [rbp+backslash_escapes], 1", "mov     rax, [rbp+right_quote]", "mov     [rbp+quote_string], rax", "mov     rax, [rbp+quote_string]", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+quote_string_len], rax", "jmp     short loc_16729"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 281, 0, 0, 1, 0, 0, 3, 15, 0.0, ["mov     [rbp+backslash_escapes], 1; jumptable 00000000000165A2 case 3"], ["mov~[rbp+0],0"]], [0, 0, 281, 0, 1, 4, 0, 1, 12, 12, 0.0, ["mov     rax, [rbp+arg]", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+argsize], rax"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax"]], [5, 0, 281, 0, 1, 9, 0, 2, 11, 12, 0.07180986273512964, ["lea     rax, [rbp+mbstate]", "mov     edx, 8; n", "mov     esi, 0; c", "mov     rdi, rax; s", "call    _memset", "mov     [rbp+m], 0", "mov     [rbp+printable], 1", "cmp     [rbp+argsize], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_16D26"], ["lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],0", "mov~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 281, 1, 0, 7, 1, 1, 6, 8, 0.35229410269445854, ["mov     rdx, [rbp+arg]", "mov     rax, [rbp+i]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "test    al, al", "setnz   al", "jmp     short loc_172CC"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "test~al,al", "setnz~al", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 5, 9, 0.7073843416370107, ["cmp     [rbp+argsize], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_172BE"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 1, 0, 0, 3, 14, 0.003546009150991357, ["mov     [rbp+elide_outer_quotes], 1; jumptable 00000000000165A2 case 1"], ["mov~[rbp+0],0"]], [1, 0, 281, 0, 0, 1, 0, 0, 11, 7, 0.0006990340620233858, ["mov     [rbp+c_and_shell_quote_compat], 1; jumptable 000000000001681E case 32"], ["mov~[rbp+0],0"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 8, 0.0037747839349262834, ["cmp     [rbp+i], 0; jumptable 000000000001681E cases 35,126", "jnz     loc_170DA"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 14, 13, 0.06750127097102186, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_168D7"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [2, 0, 281, 3, 0, 8, 0, 1, 19, 8, 0.03796390442297915, ["add     [rbp+len], 1", "add     [rbp+i], 1", "mov     rdx, [rbp+arg]", "mov     rax, [rbp+i]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "mov     [rbp+c], al", "jmp     loc_16EB4"], ["add~[rbp+0],0", "add~[rbp+0],0", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "mov~[rbp+0],al", "jmp~FOO"]], [0, 0, 281, 1, 0, 5, 0, 0, 19, 9, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rdx, rax", "movzx   eax, [rbp+c]", "mov     [rdx], al"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "movzx~eax,[rbp+0]", "mov~<TAG>,al"]], [1, 0, 281, 1, 0, 4, 0, 0, 22, 15, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 22h ; '\"'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 281, 0, 0, 3, 0, 0, 6, 8, 0.35229410269445854, ["mov     rax, [rbp+i]", "cmp     rax, [rbp+argsize]", "setnz   al"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "setnz~al"]], [1, 0, 281, 0, 0, 4, 2, 1, 3, 13, 0.01021860701576004, ["movzx   eax, [rbp+elide_outer_quotes]; jumptable 00000000000165A2 case 4", "xor     eax, 1", "test    al, al", "jz      short loc_166D1; jumptable 00000000000165A2 case 2"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 16, 11, 0.1770017793594306, ["mov     rax, [rbp+i]", "add     rax, 1", "cmp     [rbp+ilim], rax", "jbe     loc_170CB"], ["mov~rax,[rbp+0]", "add~rax,0", "cmp~[rbp+0],rax", "jbe~FOO"]], [1, 0, 281, 0, 0, 1, 0, 0, 4, 13, 0.0, ["mov     [rbp+backslash_escapes], 1"], ["mov~[rbp+0],0"]], [0, 0, 281, 0, 0, 2, 1, 1, 7, 7, 0.7085282155566853, ["test    al, al", "jnz     loc_16736"], ["test~al,al", "jnz~FOO"]], [0, 0, 281, 0, 0, 2, 0, 1, 13, 10, 0.07590238942552109, ["nop", "jmp     short loc_170E1"], ["nop", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 16, 11, 0.07169547534316217, ["mov     [rbp+c], 30h ; '0'", "jmp     loc_170D1"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 12, 11, 0.020297407219115403, ["mov     eax, [rbp+flags]", "and     eax, 1", "test    eax, eax", "jz      loc_170D1"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 15, 13, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 5Ch ; '\\'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 281, 0, 0, 2, 0, 1, 13, 10, 0.020411794611082865, ["nop", "jmp     short loc_170E1"], ["nop", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 7, 0.06609049313675648, ["cmp     [rbp+backslash_escapes], 0", "jz      loc_170D4"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 281, 0, 0, 2, 0, 1, 14, 10, 0.013408744280630401, ["nop", "jmp     short loc_170E1"], ["nop", "jmp~FOO"]], [0, 0, 281, 0, 0, 2, 1, 1, 13, 9, 0.013739196746314183, ["test    al, al", "jnz     loc_170D7"], ["test~al,al", "jnz~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 12, 10, 0.04150991357397051, ["nop"], ["nop"]], [1, 0, 281, 1, 0, 4, 0, 0, 22, 14, 0.030592272496187085, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_16AED"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 281, 0, 0, 2, 0, 1, 12, 10, 0.003393492628368073, ["nop", "jmp     short loc_170E1"], ["nop", "jmp~FOO"]], [0, 0, 281, 0, 0, 2, 0, 1, 12, 10, 0.010294865277071682, ["nop", "jmp     short loc_170E1"], ["nop", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 6, 0.013540925266903914, ["cmp     [rbp+quoting_style], 2; jumptable 000000000001681E cases 33,34,36,38,40-42,59-62,91,94,96,124", "jnz     loc_170DD"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 5, 0.003906964921199796, ["cmp     [rbp+elide_outer_quotes], 0", "jz      loc_170DD"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 281, 2, 1, 13, 2, 2, 11, 10, 0.10008896797153025, ["mov     [rbp+m], 1", "call    ___ctype_b_loc", "mov     rax, [rax]", "movzx   edx, [rbp+c]", "add     rdx, rdx", "add     rax, rdx", "movzx   eax, word ptr [rax]", "movzx   eax, ax", "and     eax, 4000h", "test    eax, eax", "setnz   al", "mov     [rbp+printable], al", "jmp     loc_16E7E"], ["mov~[rbp+0],0", "call~FOO", "mov~rax,<TAG>", "movzx~edx,[rbp+0]", "add~rdx,rdx", "add~rax,rdx", "movzx~eax,<TAG>", "movzx~eax,ax", "and~eax,0", "test~eax,eax", "setnz~al", "mov~[rbp+0],al", "jmp~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 22, 17, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 1, 0, 4, 0, 0, 21, 17, 0.020322826639552618, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_16F53"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [2, 0, 281, 0, 0, 3, 0, 1, 17, 16, 0.04938993390950686, ["mov     [rbp+escaping], 1", "cmp     [rbp+quoting_style], 2", "jnz     short loc_16F5C"], ["mov~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 281, 1, 0, 3, 0, 1, 15, 12, 0.06826385358413828, ["add     [rbp+len], 1", "cmp     [rbp+quoting_style], 2", "jz      loc_16972"], ["add~[rbp+0],0", "cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 281, 0, 0, 5, 2, 1, 3, 12, 0.02648703609557702, ["mov     [rbp+quoting_style], 2; jumptable 00000000000165A2 case 2", "movzx   eax, [rbp+elide_outer_quotes]", "xor     eax, 1", "test    al, al", "jz      short loc_16709"], ["mov~[rbp+0],0", "movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [3, 0, 281, 2, 0, 6, 1, 1, 21, 12, 0.05510930350788002, ["add     [rbp+len], 1", "movzx   eax, [rbp+c]", "and     eax, 7", "add     eax, 30h ; '0'", "mov     [rbp+c], al", "jmp     short loc_1701A"], ["add~[rbp+0],0", "movzx~eax,[rbp+0]", "and~eax,0", "add~eax,0", "mov~[rbp+0],al", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 15, 12, 0.11680859176410777, ["cmp     [rbp+is_right_quote], 0", "jz      short loc_1701A"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 23, 14, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 3Fh ; '?'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 0, 0, 4, 2, 1, 18, 16, 0.02188612099644128, ["movzx   eax, [rbp+pending_shell_escape_end]", "xor     eax, 1", "test    al, al", "jz      short loc_16F5C"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 281, 0, 0, 3, 0, 1, 13, 6, 0.04288256227758007, ["movzx   eax, [rbp+esc]", "mov     [rbp+c], al", "jmp     store_escape"], ["movzx~eax,[rbp+0]", "mov~[rbp+0],al", "jmp~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 15, 6, 0.024955516014234874, ["nop"], ["nop"]], [0, 0, 281, 0, 0, 3, 0, 0, 4, 13, 0.006316725978647687, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_16704"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 1, 0, 2, 0, 1, 23, 13, 0.031354855109303505, ["add     [rbp+len], 1", "jmp     short loc_16AF5"], ["add~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 13, 9, 0.0031456532791052363, ["cmp     [rbp+quoting_style], 2", "jnz     short loc_17100"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 12, 9, 0.32878749364514487, ["movzx   eax, [rbp+backslash_escapes]", "xor     eax, 1", "test    al, al", "jnz     short loc_170F5"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jnz~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 17, 13, 0.009633960345704117, ["nop; jumptable 0000000000016A3D default case"], ["nop"]], [0, 0, 281, 0, 0, 1, 0, 1, 18, 12, 0.0449288256227758, ["jmp     short loc_16AFD"], ["jmp~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 16, 12, 0.02188612099644128, ["mov     rax, [rbp+i]", "add     rax, 1", "cmp     [rbp+argsize], rax", "jbe     short loc_16972"], ["mov~rax,[rbp+0]", "add~rax,0", "cmp~[rbp+0],rax", "jbe~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 13, 8, 0.021822572445348246, ["nop"], ["nop"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 6, 0.025050838840874428, ["cmp     [rbp+quoting_style], 2", "jnz     short loc_16B77"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 14, 11, 0.058070665988815454, ["nop"], ["nop"]], [1, 0, 281, 0, 0, 4, 2, 1, 13, 10, 0.05540162684290798, ["mov     eax, [rbp+flags]", "and     eax, 4", "test    eax, eax", "jz      loc_16AFD"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 14, 9, 0.04956786985256736, ["mov     rax, [rbp+i]", "add     rax, 2", "cmp     [rbp+argsize], rax", "jbe     loc_16AFD"], ["mov~rax,[rbp+0]", "add~rax,0", "cmp~[rbp+0],rax", "jbe~FOO"]], [0, 0, 281, 0, 0, 1, 0, 1, 14, 10, 0.06814946619217081, ["jmp     loc_170E1"], ["jmp~FOO"]], [0, 0, 281, 0, 0, 1, 0, 1, 13, 11, 0.0061387900355871884, ["jmp     loc_16AFE"], ["jmp~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 5, 13, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 1, 0, 1, 0, 0, 5, 12, 0.007079308591764108, ["add     [rbp+len], 1"], ["add~[rbp+0],0"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 8, 0.007412938485002542, ["mov     [rbp+esc], 61h ; 'a'; jumptable 000000000001681E case 7", "jmp     short c_escape"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 8, 0.004971614980511778, ["cmp     [rbp+quote_these_too], 0", "jz      short loc_1713C"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 13, 8, 0.3245721064226402, ["movzx   eax, [rbp+elide_outer_quotes]", "xor     eax, 1", "test    al, al", "jnz     short loc_1713C"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jnz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 19, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 281, 0, 0, 3, 0, 0, 19, 19, 0.018797661413319774, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_16F0D"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 8, 0.007412938485002542, ["mov     [rbp+esc], 62h ; 'b'; jumptable 000000000001681E case 8", "jmp     short c_escape"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 1, 0, 7, 0, 1, 17, 12, 0.018797661413319774, ["mov     rax, [rbp+i]", "lea     rdx, [rax+1]", "mov     rax, [rbp+arg]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jle     short loc_16972"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "cmp~al,0", "jle~FOO"]], [0, 0, 10, 0, 0, 1, 0, 1, 12, 5, 0.012862226741230299, ["jmp     short loc_173D0"], ["jmp~FOO"]], [2, 0, 10, 2, 0, 2, 0, 0, 15, 5, 0.00019064565327910524, ["add     [rbp+len], 1", "add     [rbp+quote_string], 1"], ["add~[rbp+0],0", "add~[rbp+0],0"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 8, 0.007412938485002542, ["mov     [rbp+esc], 66h ; 'f'; jumptable 000000000001681E case 12", "jmp     short c_escape"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 7, 0.004084053550245718, ["mov     [rbp+esc], 6Eh ; 'n'; jumptable 000000000001681E case 10", "jmp     short c_and_shell_escape"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 4, 0, 1, 4, 11, 0.02801220132180986, ["lea     rax, asc_1FD27; \"'\"", "mov     [rbp+quote_string], rax", "mov     [rbp+quote_string_len], 1", "jmp     short loc_16729"], ["lea~rax,<TAG>", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 18, 0.019560244026436198, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_16F30"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 7, 0.004084053550245718, ["mov     [rbp+esc], 72h ; 'r'; jumptable 000000000001681E case 13", "jmp     short c_and_shell_escape"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 3, 11, 0.020939247585155057, ["mov     [rbp+elide_outer_quotes], 0; jumptable 00000000000165A2 case 0", "jmp     short loc_16729"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    _abort; jumptable 00000000000165A2 default case"], ["call~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 1, 13, 0.12255973563802745, ["cmp     [rbp+quoting_style], 0Ah; switch 11 cases", "ja      loc_16724; jumptable 00000000000165A2 default case"], ["cmp~[rbp+0],0", "ja~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 7, 0.004084053550245718, ["mov     [rbp+esc], 74h ; 't'; jumptable 000000000001681E case 9", "jmp     short c_and_shell_escape"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 1, 0, 7, 0, 1, 18, 12, 0.015696492119979664, ["mov     rax, [rbp+i]", "lea     rdx, [rax+1]", "mov     rax, [rbp+arg]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "cmp     al, 39h ; '9'", "jg      short loc_16972"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "cmp~al,0", "jg~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 8, 0.007412938485002542, ["mov     [rbp+esc], 76h ; 'v'; jumptable 000000000001681E case 11", "jmp     short c_escape"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 21, 18, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 24h ; '$'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 0, 0, 2, 0, 1, 4, 10, 0.13004575495678697, ["mov     [rbp+i], 0", "jmp     loc_1729C"], ["mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 281, 0, 0, 5, 0, 1, 4, 11, 0.017602948652770716, ["mov     [rbp+backslash_escapes], 1", "lea     rax, unk_1FD25", "mov     [rbp+quote_string], rax", "mov     [rbp+quote_string_len], 1", "jmp     loc_16729"], ["mov~[rbp+0],0", "lea~rax,<TAG>", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 19, 14, 0.012582613116420945, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_1694A"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [3, 0, 281, 1, 0, 15, 3, 1, 15, 7, 0.00023301135400779526, ["movzx   eax, [rbp+c]", "shr     al, 5", "movzx   eax, al", "lea     rdx, ds:0[rax*4]", "mov     rax, [rbp+quote_these_too]", "add     rax, rdx", "mov     edx, [rax]", "movzx   eax, [rbp+c]", "and     eax, 1Fh", "mov     ecx, eax", "shr     edx, cl", "mov     eax, edx", "and     eax, 1", "test    eax, eax", "jnz     short loc_1714B"], ["movzx~eax,[rbp+0]", "shr~al,0", "movzx~eax,al", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~edx,<TAG>", "movzx~eax,[rbp+0]", "and~eax,0", "mov~ecx,eax", "shr~edx,cl", "mov~eax,edx", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [1, 0, 281, 0, 0, 4, 0, 1, 11, 6, 0.03424504321301475, ["movzx   eax, [rbp+c]; jumptable 000000000001681E case 92", "mov     [rbp+esc], al", "cmp     [rbp+quoting_style], 2", "jnz     short loc_16B4C"], ["movzx~eax,[rbp+0]", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 10, 0.00327910523640061, ["mov     [rbp+printable], 0", "jmp     loc_16E7E"], ["mov~[rbp+0],0", "jmp~FOO"]], [4, 0, 281, 0, 0, 5, 0, 1, 8, 9, 0.5457803762074225, ["mov     [rbp+is_right_quote], 0", "mov     [rbp+escaping], 0", "mov     [rbp+c_and_shell_quote_compat], 0", "cmp     [rbp+backslash_escapes], 0", "jz      loc_167DC"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 14, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 30h ; '0'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 1, 0, 1, 0, 0, 14, 10, 0.5733985765124555, ["add     [rbp+i], 1"], ["add~[rbp+0],0"]], [0, 0, 281, 0, 0, 1, 0, 1, 13, 11, 0.016853075749872902, ["jmp     loc_17297"], ["jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 8, 0.012963904422979155, ["cmp     [rbp+backslash_escapes], 0", "jz      short loc_16B63"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 9, 9, 0.031113370615149974, ["cmp     [rbp+quoting_style], 2", "jz      loc_167DC"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 13, 8, 0.009367056431113371, ["cmp     [rbp+elide_outer_quotes], 0", "jz      short loc_16B63"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 281, 1, 0, 2, 0, 0, 22, 16, 0.021085409252669038, ["add     [rbp+len], 1", "mov     [rbp+pending_shell_escape_end], 1"], ["add~[rbp+0],0", "mov~[rbp+0],0"]], [0, 0, 281, 0, 0, 3, 0, 0, 16, 15, 0.06621759023894255, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_171F9"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 17, 15, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 5Ch ; '\\'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 13, 0.013345195729537365, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_1696D"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 10, 9, 0.02806304016268429, ["cmp     [rbp+quote_string_len], 0", "jz      short loc_167DC"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 13, 7, 0.001741230299949161, ["nop"], ["nop"]], [2, 0, 281, 1, 0, 2, 0, 0, 20, 16, 0.021085409252669038, ["add     [rbp+len], 1", "mov     [rbp+pending_shell_escape_end], 1"], ["add~[rbp+0],0", "mov~[rbp+0],0"]], [0, 0, 281, 0, 0, 3, 0, 0, 18, 15, 0.05282155566853076, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_16F7A"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 21, 13, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 30h ; '0'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [11, 0, 281, 1, 1, 36, 3, 1, 0, 14, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 0B8h", "mov     [rbp+buffer], rdi", "mov     [rbp+buffersize], rsi", "mov     [rbp+arg], rdx", "mov     [rbp+argsize], rcx", "mov     [rbp+quoting_style], r8d", "mov     [rbp+flags], r9d", "mov     rax, [rbp+arg_0]", "mov     [rbp+quote_these_too], rax", "mov     rax, [rbp+arg_8]", "mov     [rbp+left_quote], rax", "mov     rax, [rbp+arg_10]", "mov     [rbp+right_quote], rax", "mov     rax, fs:28h", "mov     [rbp+var_18], rax", "xor     eax, eax", "mov     [rbp+len], 0", "mov     [rbp+orig_buffersize], 0", "mov     [rbp+quote_string], 0", "mov     [rbp+quote_string_len], 0", "mov     [rbp+backslash_escapes], 0", "call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "setz    al", "mov     [rbp+unibyte_locale], al", "mov     eax, [rbp+flags]", "and     eax, 2", "test    eax, eax", "setnz   al", "mov     [rbp+elide_outer_quotes], al", "mov     [rbp+pending_shell_escape_end], 0", "mov     [rbp+encountered_single_quote], 0", "mov     [rbp+all_c_and_shell_quote_compat], 1"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8d", "mov~[rbp+0],r9d", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "call~FOO", "cmp~rax,0", "setz~al", "mov~[rbp+0],al", "mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "setnz~al", "mov~[rbp+0],al", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0"]], [1, 0, 281, 1, 0, 1, 0, 0, 21, 12, 0.014107778342653787, ["add     [rbp+len], 1"], ["add~[rbp+0],0"]], [0, 0, 10, 1, 0, 6, 0, 0, 15, 6, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rdx, rax", "mov     rax, [rbp+quote_string]", "movzx   eax, byte ptr [rax]", "mov     [rdx], al"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "mov~<TAG>,al"]], [1, 0, 281, 0, 0, 5, 0, 1, 11, 9, 0.024999999999999998, ["mov     rdx, [rbp+i]", "mov     rax, [rbp+quote_string_len]", "lea     rbx, [rdx+rax]", "cmp     [rbp+argsize], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_1679C"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rbx,<TAG>", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 17, 19, 0.018797661413319774, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_1718C"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 2, 0, 0, 12, 9, 0.0031647178444331467, ["cmp     [rbp+quote_string_len], 1", "jbe     short loc_1679C"], ["cmp~[rbp+0],0", "jbe~FOO"]], [0, 0, 281, 0, 0, 2, 0, 1, 13, 10, 0.006596339603457041, ["nop", "jmp     loc_170E1"], ["nop", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 13, 11, 0.06198525673614641, ["cmp     [rbp+bytes], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_16D89"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 13, 0.0543467208947636, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_16FD9"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [2, 0, 281, 1, 0, 9, 1, 0, 21, 13, 0.0, ["movzx   eax, [rbp+c]", "shr     al, 3", "and     eax, 7", "lea     ecx, [rax+30h]", "mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     edx, ecx", "mov     [rax], dl"], ["movzx~eax,[rbp+0]", "shr~al,0", "and~eax,0", "lea~ecx,[rax+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~edx,ecx", "mov~<TAG>,dl"]], [1, 0, 281, 1, 0, 1, 0, 0, 18, 12, 1.2709710218607015e-05, ["add     [rbp+m], 1"], ["add~[rbp+0],0"]], [0, 0, 281, 2, 0, 8, 1, 1, 17, 12, 0.0063294356888662934, ["mov     rdx, [rbp+i]", "mov     rax, [rbp+m]", "add     rdx, rax", "mov     rax, [rbp+arg]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_16D96"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 19, 14, 0.053584138281647174, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_16FA8"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 19, 15, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 5Ch ; '\\'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 17, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 1, 0, 4, 0, 0, 19, 17, 0.020322826639552618, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_171D2"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 15, 12, 0.018848500254194205, ["mov     [rbp+printable], 0", "jmp     short loc_16D9B"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 3, 0, 1, 11, 6, 0.07682257244534822, ["mov     eax, [rbp+quoting_style]; jumptable 000000000001681E case 63", "cmp     eax, 2", "jz      short loc_169A6"], ["mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 12, 8, 0.020818505338078292, ["mov     rax, [rbp+argsize]"], ["mov~rax,[rbp+0]"]], [0, 0, 281, 0, 1, 6, 0, 2, 13, 8, 0.001766649720386375, ["mov     rax, [rbp+arg]", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+argsize], rax", "mov     rax, [rbp+argsize]", "jmp     short loc_167A3"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 11, 0.06433655312658872, ["cmp     eax, 5", "jz      short loc_169B5"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 18, 19, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 281, 0, 0, 2, 0, 0, 13, 7, 0.02652516522623284, ["cmp     rax, rbx", "jb      short loc_167DC"], ["cmp~rax,rbx", "jb~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 18, 18, 0.019560244026436198, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_171AF"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 5, 0.009689883070665989, ["cmp     [rbp+elide_outer_quotes], 0", "jz      loc_16AF7"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 19, 18, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 24h ; '$'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [2, 0, 281, 0, 0, 2, 0, 0, 3, 13, 0.0, ["mov     [rbp+quoting_style], 5; jumptable 00000000000165A2 case 6", "mov     [rbp+elide_outer_quotes], 1"], ["mov~[rbp+0],0", "mov~[rbp+0],0"]], [1, 0, 281, 0, 0, 2, 0, 0, 12, 10, 0.004899593289273005, ["cmp     [rbp+argsize], 1", "setnz   al"], ["cmp~[rbp+0],0", "setnz~al"]], [1, 0, 281, 1, 0, 8, 0, 0, 20, 14, 0.0, ["movzx   eax, [rbp+c]", "shr     al, 6", "lea     ecx, [rax+30h]", "mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     edx, ecx", "mov     [rax], dl"], ["movzx~eax,[rbp+0]", "shr~al,0", "lea~ecx,[rax+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~edx,ecx", "mov~<TAG>,dl"]], [1, 0, 281, 0, 0, 4, 2, 1, 3, 12, 0.016077783426537873, ["movzx   eax, [rbp+elide_outer_quotes]; jumptable 00000000000165A2 case 5", "xor     eax, 1", "test    al, al", "jz      short loc_165E0"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 281, 1, 0, 1, 0, 0, 5, 12, 0.007079308591764108, ["add     [rbp+len], 1"], ["add~[rbp+0],0"]], [0, 0, 281, 0, 1, 10, 1, 2, 14, 6, 0.00992628368073208, ["mov     rdx, [rbp+arg]", "mov     rax, [rbp+i]", "lea     rcx, [rdx+rax]", "mov     rdx, [rbp+quote_string_len]; n", "mov     rax, [rbp+quote_string]", "mov     rsi, rax; s2", "mov     rdi, rcx; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_167DC"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rcx,<TAG>", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,rcx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 281, 0, 0, 1, 0, 0, 16, 9, 0.0034443314692425013, ["mov     [rbp+is_right_quote], 1"], ["mov~[rbp+0],0"]], [0, 0, 0, 0, 0, 3, 0, 0, 14, 0, 0.0, ["mov     rbx, [rbp+var_8]", "leave", "retn"], ["mov~rbx,[rbp+0]", "leave", "retn"]]], "func_feature": [16, 60, 177, 2, 282, 444, 7, 994, 0.05056, 8, 114], "succs": [[16], [0, 53], [170], [2, 275], [226], [4, 274, 146, 277, 182, 151, 26, 219, 159], [71], [6, 71], [16], [8, 188], [51], [10, 102], [155, 156], [12, 14], [28, 12], [12], [100, 61], [16], [16], [16], [51], [196, 20], [119], [22, 119], [250, 213], [24, 107], [83, 79], [37], [27, 37], [65, 76], [56, 29], [51], [280, 31], [72, 75], [33, 89], [193, 77], [35, 198], [38, 15], [15], [171, 30], [51], [40, 84], [281, 131], [42], [42], [42], [224, 3, 230, 39, 265, 138, 205, 142, 175, 210, 222, 214, 215, 152, 153, 218, 62], [142, 46], [140], [48, 124], [48, 192], [66, 45], [51], [51], [51], [51], [51], [51], [51], [51], [69, 7], [100, 60], [165, 63], [78, 55], [76], [64, 76], [45, 70], [89, 90], [264, 67], [7], [45], [100], [57, 75], [240, 252], [240, 73], [34], [82, 94], [193, 11], [81, 154], [83], [34], [154, 91], [94], [145, 93], [88, 132], [84, 86], [41, 84], [123, 132], [132, 87], [92, 103], [80, 89], [108, 95], [103], [99], [128, 101], [108], [221], [96, 132], [120, 116], [145, 98], [125, 126], [128], [130, 115], [105, 110], [74, 59], [49], [44], [106, 44], [121, 134], [49], [109, 255], [49], [259, 111], [111], [58, 180], [130], [120], [278], [117, 278], [160], [99], [134], [97, 132], [122, 43], [192, 50], [129, 234], [125], [135], [135, 127], [234], [144, 137], [], [107, 133], [107, 212], [141, 143], [171], [19, 244], [144], [192], [184, 114], [184, 139], [143], [177, 148], [154], [172, 157], [226], [151], [110], [147, 110], [162], [149, 158], [159], [175], [152, 173], [181, 166], [140], [155], [172], [162], [161, 182], [17, 13], [182], [232, 85], [192], [163], [163, 235], [181], [192], [187, 167], [192], [169, 153], [192], [185, 190], [192], [192], [176, 174], [54, 174], [49], [239], [178, 239], [186, 246], [195, 164], [216, 189], [160], [160, 23], [190], [209, 246], [104], [104], [203, 204], [194], [206, 207], [207, 191], [194], [198], [211, 164], [168], [196, 21], [201], [200, 198], [36, 198], [192], [201], [204], [216], [168], [9, 229], [9, 206], [217], [208, 217], [168], [164, 223], [25], [25], [168], [197], [226], [225, 179], [197], [226], [], [220, 5], [197], [164, 228], [168], [179], [150], [226], [233, 242], [9, 188], [1, 236], [49], [237, 47], [242], [150], [234], [244, 238], [243, 47], [136, 244], [246], [241, 18], [18], [249, 247], [251, 47], [197], [240], [260, 261], [249], [221], [164], [213], [266, 253], [269, 271], [266, 267], [192], [68, 231], [257, 183], [183], [112], [113, 258], [256, 276], [260], [245], [245, 262], [112], [272, 268], [270], [270], [202, 199], [271], [47, 279], [273, 263], [52, 254], [263], [277], [170], [256], [227, 118], [227], [32, 47], [47], []], "fname": "quotearg_buffer_restyled", "n_num": 282}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 1, 3, 1, 0, 10, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+buffer], rdi", "mov     [rbp+buffersize], rsi", "mov     [rbp+arg], rdx", "mov     [rbp+argsize], rcx", "mov     [rbp+o], r8", "cmp     [rbp+o], 0", "jz      short loc_174C9"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.08333333333333333, ["lea     rax, default_quoting_options"], ["lea~rax,<TAG>"]], [1, 1, 0, 2, 3, 34, 0, 3, 0, 0, 0.0, ["mov     [rbp+p], rax", "call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+e], eax", "mov     rax, [rbp+p]", "mov     r8, [rax+30h]", "mov     rax, [rbp+p]", "mov     rdi, [rax+28h]", "mov     rax, [rbp+p]", "lea     r11, [rax+8]", "mov     rax, [rbp+p]", "mov     r9d, [rax+4]; flags", "mov     rax, [rbp+p]", "mov     r10d, [rax]", "mov     rcx, [rbp+argsize]; argsize", "mov     rdx, [rbp+arg]; arg", "mov     rsi, [rbp+buffersize]; buffersize", "mov     rax, [rbp+buffer]", "sub     rsp, 8", "push    r8; right_quote", "push    rdi; left_quote", "push    r11; quote_these_too", "mov     r8d, r10d; quoting_style", "mov     rdi, rax; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     [rbp+r], rax", "call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+e]", "mov     [rdx], eax", "mov     rax, [rbp+r]", "leave", "retn"], ["mov~[rbp+0],rax", "call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~r8,[rax+0]", "mov~rax,[rbp+0]", "mov~rdi,[rax+0]", "mov~rax,[rbp+0]", "lea~r11,[rax+0]", "mov~rax,[rbp+0]", "mov~r9d,[rax+0]", "mov~rax,[rbp+0]", "mov~r10d,<TAG>", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "sub~rsp,0", "push~r8", "push~rdi", "push~r11", "mov~r8d,r10d", "mov~rdi,rax", "call~FOO", "add~rsp,<STR>", "mov~[rbp+0],rax", "call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "mov~rax,[rbp+0]", "leave", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.08333333333333333, ["mov     rax, [rbp+o]", "jmp     short loc_174D0"], ["mov~rax,[rbp+0]", "jmp~FOO"]]], "func_feature": [3, 0, 5, 0, 4, 4, 3, 47, 0.04167, 1, 3], "succs": [[1, 3], [2], [], [2]], "fname": "quotearg_buffer", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 1, 0, 1, 1, 15, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+arg], rdi", "mov     [rbp+argsize], rsi", "mov     [rbp+o], rdx", "mov     rdx, [rbp+o]", "mov     rsi, [rbp+argsize]; argsize", "mov     rax, [rbp+arg]", "mov     rcx, rdx; o", "mov     edx, 0; size", "mov     rdi, rax; arg", "call    quotearg_alloc_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~rcx,rdx", "mov~edx,0", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 15, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_alloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0.07500000000000001, ["lea     rax, default_quoting_options"], ["lea~rax,<TAG>"]], [2, 0, 5, 1, 0, 9, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+arg], rdi", "mov     [rbp+argsize], rsi", "mov     [rbp+size], rdx", "mov     [rbp+o], rcx", "cmp     [rbp+o], 0", "jz      short loc_1759B"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "cmp~[rbp+0],0", "jz~FOO"]], [7, 2, 2, 5, 5, 67, 1, 6, 2, 1, 0.30000000000000004, ["mov     [rbp+p], rax", "call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+e], eax", "mov     rax, [rbp+p]", "mov     edx, [rax+4]", "cmp     [rbp+size], 0", "setz    al", "movzx   eax, al", "or      eax, edx", "mov     [rbp+flags], eax", "mov     rax, [rbp+p]", "mov     rsi, [rax+30h]", "mov     rax, [rbp+p]", "mov     rcx, [rax+28h]", "mov     rax, [rbp+p]", "lea     r9, [rax+8]", "mov     rax, [rbp+p]", "mov     edi, [rax]", "mov     r8d, [rbp+flags]", "mov     rdx, [rbp+argsize]", "mov     rax, [rbp+arg]", "sub     rsp, 8", "push    rsi; right_quote", "push    rcx; left_quote", "push    r9; quote_these_too", "mov     r9d, r8d; flags", "mov     r8d, edi; quoting_style", "mov     rcx, rdx; argsize", "mov     rdx, rax; arg", "mov     esi, 0; buffersize", "mov     edi, 0; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h", "add     rax, 1", "mov     [rbp+bufsize], rax", "mov     rax, [rbp+bufsize]", "mov     rdi, rax; n", "call    xcharalloc", "mov     [rbp+buf], rax", "mov     rax, [rbp+p]", "mov     r8, [rax+30h]", "mov     rax, [rbp+p]", "mov     rdi, [rax+28h]", "mov     rax, [rbp+p]", "lea     r11, [rax+8]", "mov     rax, [rbp+p]", "mov     r10d, [rax]", "mov     r9d, [rbp+flags]; flags", "mov     rcx, [rbp+argsize]; argsize", "mov     rdx, [rbp+arg]; arg", "mov     rsi, [rbp+bufsize]; buffersize", "mov     rax, [rbp+buf]", "sub     rsp, 8", "push    r8; right_quote", "push    rdi; left_quote", "push    r11; quote_these_too", "mov     r8d, r10d; quoting_style", "mov     rdi, rax; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h", "call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+e]", "mov     [rdx], eax", "cmp     [rbp+size], 0", "jz      short loc_1769E"], ["mov~[rbp+0],rax", "call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~edx,[rax+0]", "cmp~[rbp+0],0", "setz~al", "movzx~eax,al", "or~eax,edx", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~rsi,[rax+0]", "mov~rax,[rbp+0]", "mov~rcx,[rax+0]", "mov~rax,[rbp+0]", "lea~r9,[rax+0]", "mov~rax,[rbp+0]", "mov~edi,<TAG>", "mov~r8d,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "sub~rsp,0", "push~rsi", "push~rcx", "push~r9", "mov~r9d,r8d", "mov~r8d,edi", "mov~rcx,rdx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "call~FOO", "add~rsp,<STR>", "add~rax,0", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~r8,[rax+0]", "mov~rax,[rbp+0]", "mov~rdi,[rax+0]", "mov~rax,[rbp+0]", "lea~r11,[rax+0]", "mov~rax,[rbp+0]", "mov~r10d,<TAG>", "mov~r9d,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "sub~rsp,0", "push~r8", "push~rdi", "push~r11", "mov~r8d,r10d", "mov~rdi,rax", "call~FOO", "add~rsp,<STR>", "call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 1, 2, 0.07500000000000001, ["mov     rax, [rbp+o]", "jmp     short loc_175A2"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0.0, ["mov     rax, [rbp+buf]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]], [0, 0, 1, 0, 0, 4, 0, 0, 3, 1, 0.0, ["mov     rax, [rbp+bufsize]", "lea     rdx, [rax-1]", "mov     rax, [rbp+size]", "mov     [rax], rdx"], ["mov~rax,[rbp+0]", "lea~rdx,[rax-1]+0]", "mov~rax,[rbp+0]", "mov~<TAG>,rdx"]]], "func_feature": [5, 1, 8, 0, 6, 7, 1, 86, 0.075, 1, 6], "succs": [[2], [0, 3], [4, 5], [2], [], [4]], "fname": "quotearg_alloc_mem", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 4, 0, 0, 5, 0, 1, 0, 0, 0.2857142857142857, ["mov     rax, [rbp+sv]", "mov     rdx, [rax+8]", "lea     rax, slot0", "cmp     rdx, rax", "jz      short loc_1772B"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "lea~rax,<TAG>", "cmp~rdx,rax", "jz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 1, 3, 0.26190476190476186, ["mov     eax, cs:nslots", "cmp     [rbp+i], eax", "jl      short loc_176C0"], ["mov~eax,<TAG>", "cmp~[rbp+0],eax", "jl~FOO"]], [1, 0, 3, 0, 1, 7, 0, 1, 3, 2, 0.0, ["mov     rax, [rbp+sv]", "mov     rax, [rax+8]", "mov     rdi, rax; ptr", "call    free", "mov     cs:slotvec0.size, 100h", "lea     rax, slot0", "mov     cs:slotvec0.val, rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~<TAG>,0", "lea~rax,<TAG>", "mov~<TAG>,rax"]], [0, 0, 1, 0, 1, 5, 0, 1, 4, 1, 0.0, ["mov     rax, [rbp+sv]", "mov     rdi, rax; ptr", "call    free", "lea     rax, slotvec0", "mov     cs:slotvec_0, rax"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "lea~rax,<TAG>", "mov~<TAG>,rax"]], [0, 0, 2, 0, 0, 3, 0, 1, 3, 1, 0.23809523809523808, ["lea     rax, slotvec0", "cmp     [rbp+sv], rax", "jz      short loc_17752"], ["lea~rax,<TAG>", "cmp~[rbp+0],rax", "jz~FOO"]], [2, 0, 7, 1, 0, 7, 0, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     rax, cs:slotvec_0", "mov     [rbp+sv], rax", "mov     [rbp+i], 1", "jmp     short loc_176E3"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 7, 3, 1, 10, 0, 1, 2, 4, 0.0, ["mov     eax, [rbp+i]", "cdqe", "shl     rax, 4", "mov     rdx, rax", "mov     rax, [rbp+sv]", "add     rax, rdx", "mov     rax, [rax+8]", "mov     rdi, rax; ptr", "call    free", "add     [rbp+i], 1"], ["mov~eax,[rbp+0]", "cdqe~", "shl~rax,0", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "add~[rbp+0],0"]], [1, 0, 0, 0, 0, 4, 0, 0, 4, 0, 0.0, ["mov     cs:nslots, 1", "nop", "leave", "retn"], ["mov~<TAG>,0", "nop", "leave", "retn"]]], "func_feature": [3, 0, 7, 0, 8, 10, 0, 44, 0.09821, 5, 4], "succs": [[2, 4], [0, 6], [4], [7], [3, 7], [1], [1], []], "fname": "quotearg_free", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 12, 0, 0, 8, 0, 1, 0, 0, 0.06666666666666668, ["lea     rax, slotvec0", "cmp     [rbp+sv], rax", "setz    al", "mov     [rbp+preallocated], al", "mov     [rbp+nmax], 7FFFFFFEh", "mov     eax, [rbp+nmax]", "cmp     eax, [rbp+n]", "jge     short loc_177CA"], ["lea~rax,<TAG>", "cmp~[rbp+0],rax", "setz~al", "mov~[rbp+0],al", "mov~[rbp+0],0", "mov~eax,[rbp+0]", "cmp~eax,[rbp+0]", "jge~FOO"]], [0, 0, 13, 0, 0, 3, 0, 1, 1, 2, 0.06190476190476191, ["mov     eax, cs:nslots", "cmp     [rbp+n], eax", "jl      loc_1786B"], ["mov~eax,<TAG>", "cmp~[rbp+0],eax", "jl~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 4, 4, 0.05238095238095239, ["mov     eax, 0", "jmp     short loc_177EA"], ["mov~eax,0", "jmp~FOO"]], [3, 0, 10, 2, 0, 7, 0, 1, 3, 5, 0.09523809523809525, ["mov     eax, [rbp+n]", "add     eax, 1", "cdqe", "shl     rax, 4", "mov     rdx, rax", "cmp     [rbp+preallocated], 0", "jz      short loc_177E6"], ["mov~eax,[rbp+0]", "add~eax,0", "cdqe~", "shl~rax,0", "mov~rdx,rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 4, 4, 0.05238095238095239, ["mov     rax, [rbp+sv]"], ["mov~rax,[rbp+0]"]], [0, 0, 2, 0, 1, 3, 0, 1, 4, 2, 0.0, ["mov     rax, [rbp+val]", "mov     rdi, rax; ptr", "call    free"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO"]], [2, 0, 3, 3, 0, 14, 0, 1, 3, 2, 0.09523809523809525, ["mov     rax, [rbp+qsize]", "add     rax, 1", "mov     [rbp+size], rax", "mov     eax, [rbp+n]", "cdqe", "shl     rax, 4", "mov     rdx, rax", "mov     rax, [rbp+sv]", "add     rdx, rax", "mov     rax, [rbp+size]", "mov     [rdx], rax", "lea     rax, slot0", "cmp     [rbp+val], rax", "jz      short loc_17949"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~[rbp+0],rax", "mov~eax,[rbp+0]", "cdqe~", "shl~rax,0", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~<TAG>,rax", "lea~rax,<TAG>", "cmp~[rbp+0],rax", "jz~FOO"]], [1, 0, 7, 0, 1, 8, 0, 2, 5, 3, 0.1523809523809524, ["mov     rsi, rdx; n", "mov     rdi, rax; p", "call    xrealloc", "mov     [rbp+sv], rax", "mov     rax, [rbp+sv]", "mov     cs:slotvec_0, rax", "cmp     [rbp+preallocated], 0", "jz      short loc_17823"], ["mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~<TAG>,rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 1, 15, 1, 1, 14, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+n], edi", "mov     [rbp+arg], rsi", "mov     [rbp+argsize], rdx", "mov     [rbp+options], rcx", "call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+e], eax", "mov     rax, cs:slotvec_0", "mov     [rbp+sv], rax", "cmp     [rbp+n], 0", "jns     short loc_17796"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~rax,<TAG>", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jns~FOO"]], [2, 1, 1, 4, 2, 33, 0, 2, 4, 1, 0.009523809523809525, ["mov     rax, [rbp+size]", "mov     rdi, rax; n", "call    xcharalloc", "mov     [rbp+val], rax", "mov     eax, [rbp+n]", "cdqe", "shl     rax, 4", "mov     rdx, rax", "mov     rax, [rbp+sv]", "add     rdx, rax", "mov     rax, [rbp+val]", "mov     [rdx+8], rax", "mov     rax, [rbp+options]", "mov     r8, [rax+30h]", "mov     rax, [rbp+options]", "mov     rdi, [rax+28h]", "mov     rax, [rbp+options]", "lea     r11, [rax+8]", "mov     rax, [rbp+options]", "mov     r10d, [rax]", "mov     r9d, [rbp+flags]; flags", "mov     rcx, [rbp+argsize]; argsize", "mov     rdx, [rbp+arg]; arg", "mov     rsi, [rbp+size]; buffersize", "mov     rax, [rbp+val]", "sub     rsp, 8", "push    r8; right_quote", "push    rdi; left_quote", "push    r11; quote_these_too", "mov     r8d, r10d; quoting_style", "mov     rdi, rax; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~eax,[rbp+0]", "cdqe~", "shl~rax,0", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~[rdx+0],rax", "mov~rax,[rbp+0]", "mov~r8,[rax+0]", "mov~rax,[rbp+0]", "mov~rdi,[rax+0]", "mov~rax,[rbp+0]", "lea~r11,[rax+0]", "mov~rax,[rbp+0]", "mov~r10d,<TAG>", "mov~r9d,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "sub~rsp,0", "push~r8", "push~rdi", "push~r11", "mov~r8d,r10d", "mov~rdi,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 7, 0, 1, 3, 0, 0.0, ["call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+e]", "mov     [rdx], eax", "mov     rax, [rbp+val]", "leave", "retn"], ["call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "mov~rax,[rbp+0]", "leave", "retn"]], [4, 1, 4, 6, 1, 45, 1, 2, 2, 1, 0.17142857142857143, ["mov     eax, [rbp+n]", "cdqe", "shl     rax, 4", "mov     rdx, rax", "mov     rax, [rbp+sv]", "add     rax, rdx", "mov     rax, [rax]", "mov     [rbp+size], rax", "mov     eax, [rbp+n]", "cdqe", "shl     rax, 4", "mov     rdx, rax", "mov     rax, [rbp+sv]", "add     rax, rdx", "mov     rax, [rax+8]", "mov     [rbp+val], rax", "mov     rax, [rbp+options]", "mov     eax, [rax+4]", "or      eax, 1", "mov     [rbp+flags], eax", "mov     rax, [rbp+options]", "mov     r8, [rax+30h]", "mov     rax, [rbp+options]", "mov     rdi, [rax+28h]", "mov     rax, [rbp+options]", "lea     r11, [rax+8]", "mov     rax, [rbp+options]", "mov     r10d, [rax]", "mov     r9d, [rbp+flags]; flags", "mov     rcx, [rbp+argsize]; argsize", "mov     rdx, [rbp+arg]; arg", "mov     rsi, [rbp+size]; buffersize", "mov     rax, [rbp+val]", "sub     rsp, 8", "push    r8; right_quote", "push    rdi; left_quote", "push    r11; quote_these_too", "mov     r8d, r10d; quoting_style", "mov     rdi, rax; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     [rbp+qsize], rax", "mov     rax, [rbp+size]", "cmp     rax, [rbp+qsize]", "ja      loc_179BF"], ["mov~eax,[rbp+0]", "cdqe~", "shl~rax,0", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~eax,[rbp+0]", "cdqe~", "shl~rax,0", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "or~eax,0", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~r8,[rax+0]", "mov~rax,[rbp+0]", "mov~rdi,[rax+0]", "mov~rax,[rbp+0]", "lea~r11,[rax+0]", "mov~rax,[rbp+0]", "mov~r10d,<TAG>", "mov~r9d,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "sub~rsp,0", "push~r8", "push~rdi", "push~r11", "mov~r8d,r10d", "mov~rdi,rax", "call~FOO", "add~rsp,<STR>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "ja~FOO"]], [4, 0, 5, 5, 1, 20, 0, 1, 6, 2, 0.14285714285714288, ["mov     eax, [rbp+n]", "lea     edx, [rax+1]", "mov     eax, cs:nslots", "sub     edx, eax", "mov     eax, edx", "cdqe", "shl     rax, 4", "mov     rdx, rax; n", "mov     eax, cs:nslots", "cdqe", "shl     rax, 4", "mov     rcx, rax", "mov     rax, [rbp+sv]", "add     rax, rcx", "mov     esi, 0; c", "mov     rdi, rax; s", "call    _memset", "mov     eax, [rbp+n]", "add     eax, 1", "mov     cs:nslots, eax"], ["mov~eax,[rbp+0]", "lea~edx,[rax+0]", "mov~eax,<TAG>", "sub~edx,eax", "mov~eax,edx", "cdqe~", "shl~rax,0", "mov~rdx,rax", "mov~eax,<TAG>", "cdqe~", "shl~rax,0", "mov~rcx,rax", "mov~rax,[rbp+0]", "add~rax,rcx", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~eax,[rbp+0]", "add~eax,0", "mov~<TAG>,eax"]], [0, 0, 6, 0, 0, 5, 0, 0, 6, 3, 0.0, ["mov     rcx, [rbp+sv]", "mov     rax, cs:slotvec0.size", "mov     rdx, cs:slotvec0.val", "mov     [rcx], rax", "mov     [rcx+8], rdx"], ["mov~rcx,[rbp+0]", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~<TAG>,rax", "mov~[rcx+0],rdx"]]], "func_feature": [10, 1, 17, 0, 16, 20, 8, 172, 0.05625, 5, 21], "succs": [[3, 4], [0, 13], [8], [2, 5], [], [8], [10], [10, 6], [14, 15], [1, 11], [12], [], [], [12, 7], [13], [14]], "fname": "quotearg_n_options", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+n], edi", "mov     [rbp+arg], rsi", "mov     rsi, [rbp+arg]; arg", "mov     eax, [rbp+n]", "lea     rcx, default_quoting_options; options", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     edi, eax; n", "call    quotearg_n_options", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "lea~rcx,<TAG>", "mov~rdx,0", "mov~edi,eax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 13, 0.0, 1, 1], "succs": [[]], "fname": "quotearg_n", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 1, 0, 1, 1, 14, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+n], edi", "mov     [rbp+arg], rsi", "mov     [rbp+argsize], rdx", "mov     rdx, [rbp+argsize]; argsize", "mov     rsi, [rbp+arg]; arg", "mov     eax, [rbp+n]", "lea     rcx, default_quoting_options; options", "mov     edi, eax; n", "call    quotearg_n_options", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "lea~rcx,<TAG>", "mov~edi,eax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 14, 0.0, 1, 1], "succs": [[]], "fname": "quotearg_n_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 0, 1, 1, 10, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+arg], rdi", "mov     rax, [rbp+arg]", "mov     rsi, rax; arg", "mov     edi, 0; n", "call    quotearg_n", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 10, 0.0, 0, 1], "succs": [[]], "fname": "quotearg", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 0, 1, 1, 12, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+arg], rdi", "mov     [rbp+argsize], rsi", "mov     rdx, [rbp+argsize]; argsize", "mov     rax, [rbp+arg]", "mov     rsi, rax; arg", "mov     edi, 0; n", "call    quotearg_n_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 12, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 1, 2, 1, 2, 24, 2, 3, 0, 1, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+n], edi", "mov     [rbp+s], esi", "mov     [rbp+arg], rdx", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "lea     rax, [rbp+o]", "mov     edx, [rbp+s]", "mov     esi, edx; style", "mov     rdi, rax; retstr", "call    quoting_options_from_style", "lea     rdx, [rbp+o]", "mov     rsi, [rbp+arg]; arg", "mov     eax, [rbp+n]", "mov     rcx, rdx; options", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     edi, eax; n", "call    quotearg_n_options", "mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_17AD5"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],esi", "mov~[rbp+0],rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "lea~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~rcx,rdx", "mov~rdx,0", "mov~edi,eax", "call~FOO", "mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [3, 2, 4, 1, 3, 2, 2, 27, 0.0, 1, 1], "succs": [[], [0, 2], []], "fname": "quotearg_n_style", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 2, 1, 2, 24, 2, 3, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 60h", "mov     [rbp+n], edi", "mov     [rbp+s], esi", "mov     [rbp+arg], rdx", "mov     [rbp+argsize], rcx", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "lea     rax, [rbp+o]", "mov     edx, [rbp+s]", "mov     esi, edx; style", "mov     rdi, rax; retstr", "call    quoting_options_from_style", "lea     rcx, [rbp+o]; options", "mov     rdx, [rbp+argsize]; argsize", "mov     rsi, [rbp+arg]; arg", "mov     eax, [rbp+n]", "mov     edi, eax; n", "call    quotearg_n_options", "mov     rdi, [rbp+var_8]", "xor     rdi, fs:28h", "jz      short locret_17B37"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],esi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "lea~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "lea~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "mov~rdi,[rbp+0]", "xor~rdi,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 2, 4, 1, 3, 2, 1, 27, 0.0, 1, 1], "succs": [[1, 2], [], []], "fname": "quotearg_n_style_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 0, 1, 1, 12, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+s], edi", "mov     [rbp+arg], rsi", "mov     rdx, [rbp+arg]; arg", "mov     eax, [rbp+s]", "mov     esi, eax; s", "mov     edi, 0; n", "call    quotearg_n_style", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~rdx,[rbp+0]", "mov~eax,[rbp+0]", "mov~esi,eax", "mov~edi,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 12, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 1, 0, 1, 1, 14, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+s], edi", "mov     [rbp+arg], rsi", "mov     [rbp+argsize], rdx", "mov     rcx, [rbp+argsize]; argsize", "mov     rdx, [rbp+arg]; arg", "mov     eax, [rbp+s]", "mov     esi, eax; s", "mov     edi, 0; n", "call    quotearg_n_style_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~eax,[rbp+0]", "mov~esi,eax", "mov~edi,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 14, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_style_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [3, 0, 2, 1, 2, 39, 2, 3, 0, 1, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 60h", "mov     [rbp+arg], rdi", "mov     [rbp+argsize], rsi", "mov     eax, edx", "mov     [rbp+ch_0], al", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     rax, qword ptr cs:default_quoting_options.style", "mov     rdx, qword ptr cs:default_quoting_options.quote_these_too", "mov     qword ptr [rbp+options.style], rax", "mov     qword ptr [rbp+options.quote_these_too], rdx", "mov     rax, qword ptr cs:default_quoting_options.quote_these_too+8", "mov     rdx, qword ptr cs:default_quoting_options.quote_these_too+10h", "mov     qword ptr [rbp+options.quote_these_too+8], rax", "mov     qword ptr [rbp+options.quote_these_too+10h], rdx", "mov     rax, qword ptr cs:default_quoting_options.quote_these_too+18h", "mov     rdx, cs:default_quoting_options.left_quote", "mov     qword ptr [rbp+options.quote_these_too+18h], rax", "mov     [rbp+options.left_quote], rdx", "mov     rax, cs:default_quoting_options.right_quote", "mov     [rbp+options.right_quote], rax", "movsx   ecx, [rbp+ch_0]", "lea     rax, [rbp+options]", "mov     edx, 1; i", "mov     esi, ecx; c", "mov     rdi, rax; o", "call    set_char_quoting", "lea     rcx, [rbp+options]; options", "mov     rdx, [rbp+argsize]; argsize", "mov     rax, [rbp+arg]", "mov     rsi, rax; arg", "mov     edi, 0; n", "call    quotearg_n_options", "mov     rsi, [rbp+var_8]", "xor     rsi, fs:28h", "jz      short locret_17C3E"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~eax,edx", "mov~[rbp+0],al", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[word ptr [rbp+0],rax", "mov~[word ptr [rbp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[word ptr [rbp+0],rax", "mov~[word ptr [rbp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[word ptr [rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "movsx~ecx,[rbp+0]", "lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "lea~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "mov~rsi,[rbp+0]", "xor~rsi,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [3, 2, 4, 1, 3, 2, 2, 42, 0.0, 8, 1], "succs": [[], [0, 2], []], "fname": "quotearg_char_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+arg], rdi", "mov     eax, esi", "mov     [rbp+ch_0], al", "movsx   edx, [rbp+ch_0]; ch_0", "mov     rax, [rbp+arg]", "mov     rsi, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdi, rax; arg", "call    quotearg_char_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~eax,esi", "mov~[rbp+0],al", "movsx~edx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,0", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 13, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_char", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 1, 0, 1, 1, 10, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+arg], rdi", "mov     rax, [rbp+arg]", "mov     esi, 3Ah ; ':'; ch_0", "mov     rdi, rax; arg", "call    quotearg_char", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~esi,<STR>", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 10, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_colon", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 1, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+arg], rdi", "mov     [rbp+argsize], rsi", "mov     rcx, [rbp+argsize]", "mov     rax, [rbp+arg]", "mov     edx, 3Ah ; ':'; ch_0", "mov     rsi, rcx; argsize", "mov     rdi, rax; arg", "call    quotearg_char_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~edx,<STR>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 13, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_colon_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 2, 2, 1, 3, 43, 2, 4, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 90h", "mov     [rbp+n], edi", "mov     [rbp+s], esi", "mov     [rbp+arg], rdx", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "lea     rax, [rbp+var_90]", "mov     edx, [rbp+s]", "mov     esi, edx; style", "mov     rdi, rax; retstr", "call    quoting_options_from_style", "mov     rax, qword ptr [rbp+var_90.style]", "mov     rdx, qword ptr [rbp+var_90.quote_these_too]", "mov     qword ptr [rbp+options.style], rax", "mov     qword ptr [rbp+options.quote_these_too], rdx", "mov     rax, qword ptr [rbp+var_90.quote_these_too+8]", "mov     rdx, qword ptr [rbp+var_90.quote_these_too+10h]", "mov     qword ptr [rbp+options.quote_these_too+8], rax", "mov     qword ptr [rbp+options.quote_these_too+10h], rdx", "mov     rax, qword ptr [rbp+var_90.quote_these_too+18h]", "mov     rdx, [rbp+var_90.left_quote]", "mov     qword ptr [rbp+options.quote_these_too+18h], rax", "mov     [rbp+options.left_quote], rdx", "mov     rax, [rbp+var_90.right_quote]", "mov     [rbp+options.right_quote], rax", "lea     rax, [rbp+options]", "mov     edx, 1; i", "mov     esi, 3Ah ; ':'; c", "mov     rdi, rax; o", "call    set_char_quoting", "lea     rdx, [rbp+options]", "mov     rsi, [rbp+arg]; arg", "mov     eax, [rbp+n]", "mov     rcx, rdx; options", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     edi, eax; n", "call    quotearg_n_options", "mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_17D6F"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],esi", "mov~[rbp+0],rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "lea~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "mov~rax,[word ptr [rbp+0]", "mov~rdx,[word ptr [rbp+0]", "mov~[word ptr [rbp+0],rax", "mov~[word ptr [rbp+0],rdx", "mov~rax,[word ptr [rbp+0]", "mov~rdx,[word ptr [rbp+0]", "mov~[word ptr [rbp+0],rax", "mov~[word ptr [rbp+0],rdx", "mov~rax,[word ptr [rbp+0]", "mov~rdx,[rbp+0]", "mov~[word ptr [rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,<STR>", "mov~rdi,rax", "call~FOO", "lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~rcx,rdx", "mov~rdx,0", "mov~edi,eax", "call~FOO", "mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [4, 2, 5, 2, 3, 2, 2, 46, 0.0, 1, 1], "succs": [[1, 2], [], []], "fname": "quotearg_n_style_colon", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 1, 0, 1, 1, 16, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+n], edi", "mov     [rbp+left_quote], rsi", "mov     [rbp+right_quote], rdx", "mov     [rbp+arg], rcx", "mov     rcx, [rbp+arg]; arg", "mov     rdx, [rbp+right_quote]; right_quote", "mov     rsi, [rbp+left_quote]; left_quote", "mov     eax, [rbp+n]", "mov     r8, 0FFFFFFFFFFFFFFFFh; argsize", "mov     edi, eax; n", "call    quotearg_n_custom_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~r8,0", "mov~edi,eax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 16, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_n_custom", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 2, 1, 2, 40, 2, 3, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 70h", "mov     [rbp+n], edi", "mov     [rbp+left_quote], rsi", "mov     [rbp+right_quote], rdx", "mov     [rbp+arg], rcx", "mov     [rbp+argsize], r8", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     rax, qword ptr cs:default_quoting_options.style", "mov     rdx, qword ptr cs:default_quoting_options.quote_these_too", "mov     qword ptr [rbp+o.style], rax", "mov     qword ptr [rbp+o.quote_these_too], rdx", "mov     rax, qword ptr cs:default_quoting_options.quote_these_too+8", "mov     rdx, qword ptr cs:default_quoting_options.quote_these_too+10h", "mov     qword ptr [rbp+o.quote_these_too+8], rax", "mov     qword ptr [rbp+o.quote_these_too+10h], rdx", "mov     rax, qword ptr cs:default_quoting_options.quote_these_too+18h", "mov     rdx, cs:default_quoting_options.left_quote", "mov     qword ptr [rbp+o.quote_these_too+18h], rax", "mov     [rbp+o.left_quote], rdx", "mov     rax, cs:default_quoting_options.right_quote", "mov     [rbp+o.right_quote], rax", "mov     rdx, [rbp+right_quote]; right_quote", "mov     rcx, [rbp+left_quote]", "lea     rax, [rbp+o]", "mov     rsi, rcx; left_quote", "mov     rdi, rax; o", "call    set_custom_quoting", "lea     rcx, [rbp+o]; options", "mov     rdx, [rbp+argsize]; argsize", "mov     rsi, [rbp+arg]; arg", "mov     eax, [rbp+n]", "mov     edi, eax; n", "call    quotearg_n_options", "mov     rdi, [rbp+var_8]", "xor     rdi, fs:28h", "jz      short locret_17E5F"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[word ptr [rbp+0],rax", "mov~[word ptr [rbp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[word ptr [rbp+0],rax", "mov~[word ptr [rbp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[word ptr [rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "lea~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "lea~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "mov~rdi,[rbp+0]", "xor~rdi,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 2, 4, 1, 3, 2, 2, 43, 0.0, 8, 1], "succs": [[1, 2], [], []], "fname": "quotearg_n_custom_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 1, 0, 1, 1, 14, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+left_quote], rdi", "mov     [rbp+right_quote], rsi", "mov     [rbp+arg], rdx", "mov     rcx, [rbp+arg]; arg", "mov     rdx, [rbp+right_quote]; right_quote", "mov     rax, [rbp+left_quote]", "mov     rsi, rax; left_quote", "mov     edi, 0; n", "call    quotearg_n_custom", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 14, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_custom", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 1, 0, 1, 1, 17, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+left_quote], rdi", "mov     [rbp+right_quote], rsi", "mov     [rbp+arg], rdx", "mov     [rbp+argsize], rcx", "mov     rsi, [rbp+argsize]", "mov     rcx, [rbp+arg]; arg", "mov     rdx, [rbp+right_quote]; right_quote", "mov     rax, [rbp+left_quote]", "mov     r8, rsi; argsize", "mov     rsi, rax; left_quote", "mov     edi, 0; n", "call    quotearg_n_custom_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~rsi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~r8,rsi", "mov~rsi,rax", "mov~edi,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 17, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_custom_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 1, 0, 1, 1, 14, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+n], edi", "mov     [rbp+arg], rsi", "mov     [rbp+argsize], rdx", "mov     rdx, [rbp+argsize]; argsize", "mov     rsi, [rbp+arg]; arg", "mov     eax, [rbp+n]", "lea     rcx, quote_quoting_options; options", "mov     edi, eax; n", "call    quotearg_n_options", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "lea~rcx,<TAG>", "mov~edi,eax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 14, 0.0, 1, 1], "succs": [[]], "fname": "quote_n_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 0, 1, 1, 12, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+arg], rdi", "mov     [rbp+argsize], rsi", "mov     rdx, [rbp+argsize]; argsize", "mov     rax, [rbp+arg]", "mov     rsi, rax; arg", "mov     edi, 0; n", "call    quote_n_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 12, 0.0, 0, 1], "succs": [[]], "fname": "quote_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+n], edi", "mov     [rbp+arg], rsi", "mov     rcx, [rbp+arg]", "mov     eax, [rbp+n]", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rsi, rcx; arg", "mov     edi, eax; n", "call    quote_n_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~eax,[rbp+0]", "mov~rdx,0", "mov~rsi,rcx", "mov~edi,eax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 4, 13, 0.0, 0, 1], "succs": [[]], "fname": "quote_n", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 0, 1, 1, 10, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+arg], rdi", "mov     rax, [rbp+arg]", "mov     rsi, rax; arg", "mov     edi, 0; n", "call    quote_n", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 9, 10, 0.0, 0, 1], "succs": [[]], "fname": "quote", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[3, 0, 0, 1, 1, 14, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+source], rdi", "mov     [rbp+dest], rsi", "mov     rdx, [rbp+dest]", "mov     rax, [rbp+source]", "mov     rcx, rdx; dest", "mov     edx, 0FFFFFF9Ch; dest_dfd", "mov     rsi, rax; source", "mov     edi, 0FFFFFF9Ch; source_dfd", "call    same_nameat", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rcx,rdx", "mov~edx,0", "mov~rsi,rax", "mov~edi,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 14, 0.0, 0, 1], "succs": [[]], "fname": "same_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 7, 0, 0, 4, 0, 1, 0, 0, 0.2, ["mov     rdx, [rbp+source_dir_stats.st_ino]", "mov     rax, [rbp+dest_dir_stats.st_ino]", "cmp     rdx, rax", "jnz     short loc_1819E"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "cmp~rdx,rax", "jnz~FOO"]], [0, 0, 9, 0, 3, 15, 1, 4, 4, 5, 0.2, ["mov     rax, [rbp+source_dirname]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+dest]", "mov     rdi, rax; file", "call    dir_name", "mov     [rbp+dest_dirname], rax", "mov     ecx, [rbp+flags]; flag", "lea     rdx, [rbp+dest_dir_stats]; stat_buf", "mov     rsi, [rbp+dest_dirname]; filename", "mov     eax, [rbp+dest_dfd]", "mov     edi, eax; fildes", "call    fstatat", "test    eax, eax", "jz      short loc_18171"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~ecx,[rbp+0]", "lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 8, 0, 2, 9, 0, 2, 5, 5, 0.0, ["call    ___errno_location", "mov     eax, [rax]", "mov     rdx, [rbp+dest_dirname]", "mov     rcx, rdx", "lea     rdx, off_20054; format", "mov     esi, eax; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["call~FOO", "mov~eax,<TAG>", "mov~rdx,[rbp+0]", "mov~rcx,rdx", "lea~rdx,<TAG>", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, 1, 0.11666666666666667, ["movzx   eax, [rbp+same]", "mov     rsi, [rbp+var_8]", "xor     rsi, fs:28h", "jz      short locret_181DA"], ["movzx~eax,[rbp+0]", "mov~rsi,[rbp+0]", "xor~rsi,<TAG>", "jz~FOO"]], [1, 0, 11, 0, 2, 13, 1, 3, 3, 6, 0.16666666666666666, ["mov     rax, [rbp+source]", "mov     rdi, rax; file", "call    dir_name", "mov     [rbp+source_dirname], rax", "mov     [rbp+flags], 100h", "mov     ecx, [rbp+flags]; flag", "lea     rdx, [rbp+source_dir_stats]; stat_buf", "mov     rsi, [rbp+source_dirname]; filename", "mov     eax, [rbp+source_dfd]", "mov     edi, eax; fildes", "call    fstatat", "test    eax, eax", "jz      short loc_180FE"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~[rbp+0],0", "mov~ecx,[rbp+0]", "lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 10, 0, 2, 9, 0, 2, 4, 6, 0.0, ["call    ___errno_location", "mov     eax, [rax]", "mov     rdx, [rbp+source_dirname]", "mov     rcx, rdx", "lea     rdx, off_20054; format", "mov     esi, eax; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["call~FOO", "mov~eax,<TAG>", "mov~rdx,[rbp+0]", "mov~rcx,rdx", "lea~rdx,<TAG>", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO"]], [3, 0, 12, 0, 0, 7, 1, 1, 2, 2, 0.2, ["mov     [rbp+identical_basenames], al", "and     [rbp+identical_basenames], 1", "movzx   eax, [rbp+identical_basenames]", "mov     [rbp+compare_dirs], al", "mov     [rbp+same], 0", "cmp     [rbp+compare_dirs], 0", "jz      loc_181BF"], ["mov~[rbp+0],al", "and~[rbp+0],0", "movzx~eax,[rbp+0]", "mov~[rbp+0],al", "mov~[rbp+0],0", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 2, 3, 0.027083333333333334, ["mov     eax, 1", "jmp     short loc_18062"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 13, 0, 0, 1, 0, 0, 1, 3, 0.08125, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 3, 0, 1, 5, 1, 1, 7, 2, 0.1, ["mov     [rbp+same], al", "and     [rbp+same], 1", "mov     rax, [rbp+dest_dirname]", "mov     rdi, rax; ptr", "call    free"], ["mov~[rbp+0],al", "and~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO"]], [0, 1, 16, 1, 4, 29, 1, 5, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 190h", "mov     [rbp+source_dfd], edi", "mov     [rbp+source], rsi", "mov     [rbp+dest_dfd], edx", "mov     [rbp+dest], rcx", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     rax, [rbp+source]", "mov     rdi, rax; name", "call    last_component", "mov     [rbp+source_basename], rax", "mov     rax, [rbp+dest]", "mov     rdi, rax; name", "call    last_component", "mov     [rbp+dest_basename], rax", "mov     rax, [rbp+source_basename]", "mov     rdi, rax; name", "call    base_len", "mov     [rbp+source_baselen], rax", "mov     rax, [rbp+dest_basename]", "mov     rdi, rax; name", "call    base_len", "mov     [rbp+dest_baselen], rax", "mov     rax, [rbp+source_baselen]", "cmp     rax, [rbp+dest_baselen]", "jnz     short loc_1805D"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],edx", "mov~[rbp+0],rcx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnz~FOO"]], [0, 0, 15, 0, 1, 8, 1, 2, 1, 4, 0.004166666666666667, ["mov     rdx, [rbp+dest_baselen]; n", "mov     rcx, [rbp+dest_basename]", "mov     rax, [rbp+source_basename]", "mov     rsi, rcx; s2", "mov     rdi, rax; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_1805D"], ["mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 6, 0, 0, 4, 0, 1, 6, 4, 0.041666666666666664, ["mov     rdx, [rbp+source_dir_stats.st_dev]", "mov     rax, [rbp+dest_dir_stats.st_dev]", "cmp     rdx, rax", "jnz     short loc_1819E"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "cmp~rdx,rax", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 7, 3, 0.008333333333333333, ["mov     eax, 1", "jmp     short loc_181A3"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 6, 3, 0.1125, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [16, 7, 26, 1, 17, 23, 1, 116, 0.07402, 2, 1], "succs": [[13, 15], [0, 2], [0], [], [16, 3], [1, 6], [1], [4, 5], [7], [7], [4], [9, 12], [8, 9], [14, 15], [10], [10], []], "fname": "same_nameat", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[3, 0, 0, 1, 1, 9, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+con], rdi", "call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'", "mov     eax, 0FFFFFFFFh", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "call~FOO", "mov~<TAG>,0", "mov~eax,0", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 9, 0.0, 0, 1], "succs": [[]], "fname": "getcon", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+con], rdi", "nop", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "nop", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 6, 0.0, 0, 0], "succs": [[]], "fname": "freecon", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[3, 0, 0, 1, 1, 9, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+con], rdi", "call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'", "mov     eax, 0FFFFFFFFh", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "call~FOO", "mov~<TAG>,0", "mov~eax,0", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 9, 0.0, 0, 1], "succs": [[]], "fname": "getfscreatecon", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[3, 0, 0, 1, 1, 9, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+con], rdi", "call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'", "mov     eax, 0FFFFFFFFh", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "call~FOO", "mov~<TAG>,0", "mov~eax,0", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 9, 0.0, 0, 1], "succs": [[]], "fname": "setfscreatecon", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 1, 0, 1, 1, 11, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+file], rdi", "mov     [rbp+m], esi", "mov     [rbp+con], rdx", "call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'", "mov     eax, 0FFFFFFFFh", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~[rbp+0],rdx", "call~FOO", "mov~<TAG>,0", "mov~eax,0", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 11, 0.0, 0, 1], "succs": [[]], "fname": "matchpathcon", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[3, 0, 0, 1, 1, 10, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+file], rdi", "mov     [rbp+con], rsi", "call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'", "mov     eax, 0FFFFFFFFh", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "call~FOO", "mov~<TAG>,0", "mov~eax,0", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 10, 0.0, 0, 1], "succs": [[]], "fname": "getfilecon", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[3, 0, 0, 1, 1, 10, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+file], rdi", "mov     [rbp+con], rsi", "call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'", "mov     eax, 0FFFFFFFFh", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "call~FOO", "mov~<TAG>,0", "mov~eax,0", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 10, 0.0, 0, 1], "succs": [[]], "fname": "lgetfilecon", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[3, 0, 0, 1, 1, 10, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+fd], edi", "mov     [rbp+con], rsi", "call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'", "mov     eax, 0FFFFFFFFh", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "call~FOO", "mov~<TAG>,0", "mov~eax,0", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 10, 0.0, 0, 1], "succs": [[]], "fname": "fgetfilecon", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[3, 0, 0, 1, 1, 10, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+file], rdi", "mov     [rbp+con], rsi", "call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'", "mov     eax, 0FFFFFFFFh", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "call~FOO", "mov~<TAG>,0", "mov~eax,0", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 10, 0.0, 0, 1], "succs": [[]], "fname": "setfilecon", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[3, 0, 0, 1, 1, 10, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+file], rdi", "mov     [rbp+con], rsi", "call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'", "mov     eax, 0FFFFFFFFh", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "call~FOO", "mov~<TAG>,0", "mov~eax,0", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 10, 0.0, 0, 1], "succs": [[]], "fname": "lsetfilecon", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[3, 0, 0, 1, 1, 10, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+fd], edi", "mov     [rbp+con], rsi", "call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'", "mov     eax, 0FFFFFFFFh", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "call~FOO", "mov~<TAG>,0", "mov~eax,0", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 10, 0.0, 0, 1], "succs": [[]], "fname": "fsetfilecon", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[3, 0, 0, 1, 1, 9, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+con], rdi", "call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'", "mov     eax, 0FFFFFFFFh", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "call~FOO", "mov~<TAG>,0", "mov~eax,0", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 9, 0.0, 0, 1], "succs": [[]], "fname": "security_check_context", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[3, 0, 0, 1, 1, 9, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+con], rdi", "call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'", "mov     eax, 0FFFFFFFFh", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "call~FOO", "mov~<TAG>,0", "mov~eax,0", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 9, 0.0, 0, 1], "succs": [[]], "fname": "security_check_context_raw", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[3, 0, 0, 1, 1, 9, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+con], rdi", "call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'", "mov     eax, 0FFFFFFFFh", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "call~FOO", "mov~<TAG>,0", "mov~eax,0", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 9, 0.0, 0, 1], "succs": [[]], "fname": "setexeccon", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 1, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+scon], rdi", "mov     [rbp+tcon], rsi", "mov     eax, edx", "mov     [rbp+newcon], rcx", "mov     [rbp+tclass], ax", "call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'", "mov     eax, 0FFFFFFFFh", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~eax,edx", "mov~[rbp+0],rcx", "mov~[rbp+0],ax", "call~FOO", "mov~<TAG>,0", "mov~eax,0", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 13, 0.0, 0, 1], "succs": [[]], "fname": "security_compute_create", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[3, 0, 0, 1, 1, 9, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+name], rdi", "call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'", "mov     eax, 0", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "call~FOO", "mov~<TAG>,0", "mov~eax,0", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 9, 0.0, 0, 1], "succs": [[]], "fname": "string_to_security_class", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[3, 0, 0, 1, 1, 10, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+path], rdi", "mov     [rbp+prefix], rsi", "call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'", "mov     eax, 0FFFFFFFFh", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "call~FOO", "mov~<TAG>,0", "mov~eax,0", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 10, 0.0, 0, 1], "succs": [[]], "fname": "matchpathcon_init_prefix", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+st], rdi", "mov     rax, [rbp+st]", "mov     rax, [rax+50h]", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 7, 0.0, 0, 0], "succs": [[]], "fname": "get_stat_atime_ns", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+st], rdi", "mov     rax, [rbp+st]", "mov     rax, [rax+70h]", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 7, 0.0, 0, 0], "succs": [[]], "fname": "get_stat_ctime_ns", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+st], rdi", "mov     rax, [rbp+st]", "mov     rax, [rax+60h]", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 7, 0.0, 0, 0], "succs": [[]], "fname": "get_stat_mtime_ns", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+st], rdi", "mov     eax, 0", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~eax,0", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 6, 0.0, 0, 0], "succs": [[]], "fname": "get_stat_birthtime_ns", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+st], rdi", "mov     rax, [rbp+st]", "mov     rdx, [rax+50h]", "mov     rax, [rax+48h]", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rax+0]", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 3, 8, 0.0, 0, 0], "succs": [[]], "fname": "get_stat_atime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+st], rdi", "mov     rax, [rbp+st]", "mov     rdx, [rax+70h]", "mov     rax, [rax+68h]", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rax+0]", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 3, 8, 0.0, 0, 0], "succs": [[]], "fname": "get_stat_ctime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+st], rdi", "mov     rax, [rbp+st]", "mov     rdx, [rax+60h]", "mov     rax, [rax+58h]", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rax+0]", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 3, 8, 0.0, 0, 0], "succs": [[]], "fname": "get_stat_mtime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+st], rdi", "mov     [rbp+t.tv_sec], 0FFFFFFFFFFFFFFFFh", "mov     [rbp+t.tv_nsec], 0FFFFFFFFFFFFFFFFh", "mov     rax, [rbp+t.tv_sec]", "mov     rdx, [rbp+t.tv_nsec]", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 9, 0.0, 0, 0], "succs": [[]], "fname": "get_stat_birthtime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+result], edi", "mov     [rbp+st], rsi", "mov     eax, [rbp+result]", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~eax,[rbp+0]", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 7, 0.0, 0, 0], "succs": [[]], "fname": "stat_time_normalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+s], rdi", "mov     [rbp+ns], rsi", "mov     rax, [rbp+s]", "mov     [rbp+r.tv_sec], rax", "mov     rax, [rbp+ns]", "mov     [rbp+r.tv_nsec], rax", "mov     rax, [rbp+r.tv_sec]", "mov     rdx, [rbp+r.tv_nsec]", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 12, 0.0, 0, 0], "succs": [[]], "fname": "make_timespec", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 9, 0, 0, 15, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     rax, rdi", "mov     r8, rsi", "mov     rsi, rax", "mov     rdi, rdx", "mov     rdi, r8", "mov     [rbp+a.tv_sec], rsi", "mov     [rbp+a.tv_nsec], rdi", "mov     [rbp+b.tv_sec], rdx", "mov     [rbp+b.tv_nsec], rcx", "mov     rdx, [rbp+a.tv_sec]", "mov     rax, [rbp+b.tv_sec]", "cmp     rdx, rax", "jge     short loc_1850C"], ["push~rbp", "mov~rbp,rsp", "mov~rax,rdi", "mov~r8,rsi", "mov~rsi,rax", "mov~rdi,rdx", "mov~rdi,r8", "mov~[rbp+0],rsi", "mov~[rbp+0],rdi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "cmp~rdx,rax", "jge~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 0, 3, 0.1111111111111111, ["mov     rax, [rbp+a.tv_nsec]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jl      short loc_18536"], ["mov~rax,[rbp+0]", "cmp~rax,0", "jl~FOO"]], [0, 0, 7, 0, 0, 4, 0, 1, 0, 2, 0.08333333333333333, ["mov     rdx, [rbp+a.tv_sec]", "mov     rax, [rbp+b.tv_sec]", "cmp     rdx, rax", "jle     short loc_18520"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "cmp~rdx,rax", "jle~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.013888888888888888, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_1855A"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 4, 0, 0, 3, 0, 1, 0, 3, 0.0, ["mov     rax, [rbp+a.tv_nsec]", "cmp     rax, 77359400h", "jle     short $+2"], ["mov~rax,[rbp+0]", "cmp~rax,0", "jle~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 0, 2, 0.1388888888888889, ["mov     rax, [rbp+b.tv_nsec]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jl      short loc_1854C"], ["mov~rax,[rbp+0]", "cmp~rax,0", "jl~FOO"]], [0, 0, 1, 1, 0, 5, 0, 0, 0, 1, 0.05555555555555555, ["mov     rax, [rbp+a.tv_nsec]", "mov     edx, eax", "mov     rax, [rbp+b.tv_nsec]", "sub     edx, eax", "mov     eax, edx"], ["mov~rax,[rbp+0]", "mov~edx,eax", "mov~rax,[rbp+0]", "sub~edx,eax", "mov~eax,edx"]], [1, 0, 2, 0, 0, 3, 0, 1, 0, 2, 0.0, ["mov     rax, [rbp+b.tv_nsec]", "cmp     rax, 77359400h", "jle     short $+2"], ["mov~rax,[rbp+0]", "cmp~rax,0", "jle~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.013888888888888888, ["mov     eax, 1", "jmp     short loc_1855A"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [0, 0, 8, 0, 10, 13, 6, 42, 0.04167, 0, 1], "succs": [[2, 3], [4, 5], [1, 9], [8], [5], [6, 7], [8], [6], [], [8]], "fname": "timespec_cmp", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 0, 0.05, ["mov     eax, 1", "jmp     short loc_1859F"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 0, 0.016666666666666666, ["mov     eax, 0", "jmp     short loc_1859F"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0.03333333333333333, ["mov     eax, 0FFFFFFFFh"], ["mov~eax,0"]], [0, 0, 4, 0, 0, 3, 1, 1, 1, 0, 0.1, ["mov     rax, [rbp+a.tv_sec]", "test    rax, rax", "jnz     short loc_1858C"], ["mov~rax,[rbp+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 6, 0, 0, 10, 1, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     rax, rdi", "mov     rcx, rsi", "mov     rdx, rcx", "mov     [rbp+a.tv_sec], rax", "mov     [rbp+a.tv_nsec], rdx", "mov     rax, [rbp+a.tv_sec]", "test    rax, rax", "js      short loc_1859A"], ["push~rbp", "mov~rbp,rsp", "mov~rax,rdi", "mov~rcx,rsi", "mov~rdx,rcx", "mov~[rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,[rbp+0]", "test~rax,rax", "js~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 2, 0, 0.06666666666666667, ["mov     rax, [rbp+a.tv_nsec]", "test    rax, rax", "jz      short loc_18593"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]]], "func_feature": [0, 3, 5, 0, 7, 9, 0, 23, 0.0381, 0, 0], "succs": [[], [0], [0], [0], [1, 6], [3, 4], [1, 2]], "fname": "timespec_sign", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     rax, rdi", "mov     rcx, rsi", "mov     rdx, rcx", "mov     [rbp+a.tv_sec], rax", "mov     [rbp+a.tv_nsec], rdx", "mov     rax, [rbp+a.tv_sec]", "cvtsi2sd xmm1, rax", "mov     rax, [rbp+a.tv_nsec]", "cvtsi2sd xmm0, rax", "movsd   xmm2, cs:qword_20058", "divsd   xmm0, xmm2", "addsd   xmm0, xmm1", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~rax,rdi", "mov~rcx,rsi", "mov~rdx,rcx", "mov~[rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,[rbp+0]", "cvtsi2sd~xmm1,rax", "mov~rax,[rbp+0]", "cvtsi2sd~xmm0,rax", "movsd~xmm2,<TAG>", "divsd~xmm0,xmm2", "addsd~xmm0,xmm1", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 16, 0.0, 1, 0], "succs": [[]], "fname": "timespectod", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[3, 0, 13, 0, 4, 18, 0, 5, 0, 0, 0.1625, ["lea     rdi, aC_0; \"(C)\"", "call    _gettext", "mov     rdx, rax", "mov     rax, [rbp+stream]", "mov     ecx, 7E3h", "lea     rsi, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "lea     rdi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "call    _gettext", "mov     rdx, rax", "mov     rax, [rbp+stream]", "mov     rsi, rax; stream", "mov     rdi, rdx; s", "call    _fputs_unlocked", "cmp     [rbp+n_authors], 9; switch 10 cases", "ja      loc_18AB2; jumptable 00000000000186CB default case"], ["lea~rdi,<TAG>", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~ecx,0", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,rdx", "call~FOO", "cmp~[rbp+0],0", "ja~FOO"]], [1, 0, 14, 0, 1, 10, 0, 2, 1, 3, 0.029166666666666667, ["mov     rsi, [rbp+version]", "mov     rcx, [rbp+package]", "mov     rdx, [rbp+command_name]", "mov     rax, [rbp+stream]", "mov     r8, rsi", "lea     rsi, aSSS_0; \"%s (%s) %s\\n\"", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "jmp     short loc_18653"], ["mov~rsi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~r8,rsi", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 0, 14, 0, 1, 7, 0, 1, 1, 3, 0.029166666666666667, ["mov     rcx, [rbp+version]", "mov     rdx, [rbp+package]", "mov     rax, [rbp+stream]", "lea     rsi, aSS_3; \"%s %s\\n\"", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf"], ["mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO"]], [7, 2, 1, 8, 2, 39, 0, 3, 4, 1, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 00000000000186CB case 7", "add     rax, 30h", "mov     r15, [rax]", "mov     rax, [rbp+authors]", "add     rax, 28h", "mov     r14, [rax]", "mov     rax, [rbp+authors]", "add     rax, 20h", "mov     r13, [rax]", "mov     rax, [rbp+authors]", "add     rax, 18h", "mov     rax, [rax]", "mov     [rbp+var_68], rax", "mov     rax, [rbp+authors]", "add     rax, 10h", "mov     rcx, [rax]", "mov     [rbp+var_70], rcx", "mov     rax, [rbp+authors]", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "sub     rsp, 8", "push    r15", "push    r14", "push    r13", "mov     r9, [rbp+var_68]", "mov     r8, [rbp+var_70]", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "add     rsp, 20h", "jmp     loc_18B66"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~r15,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r14,<TAG>", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r13,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "add~rax,0", "mov~rcx,<TAG>", "mov~[rbp+0],rcx", "mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "sub~rsp,0", "push~r15", "push~r14", "push~r13", "mov~r9,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [0, 0, 11, 1, 0, 8, 0, 1, 3, 2, 0.16666666666666666, ["mov     rax, [rbp+n_authors]", "lea     rdx, ds:0[rax*4]", "lea     rax, off_202CC", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_202CC", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [6, 1, 1, 6, 2, 33, 0, 3, 4, 1, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 00000000000186CB case 6", "add     rax, 28h", "mov     r14, [rax]", "mov     rax, [rbp+authors]", "add     rax, 20h", "mov     r13, [rax]", "mov     rax, [rbp+authors]", "add     rax, 18h", "mov     rax, [rax]", "mov     [rbp+var_68], rax", "mov     rax, [rbp+authors]", "add     rax, 10h", "mov     r15, [rax]", "mov     rax, [rbp+authors]", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "push    r14", "push    r13", "mov     r9, [rbp+var_68]", "mov     r8, r15", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "add     rsp, 10h", "jmp     loc_18B66"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~r14,<TAG>", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r13,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "add~rax,0", "mov~r15,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "push~r14", "push~r13", "mov~r9,[rbp+0]", "mov~r8,r15", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [7, 2, 1, 8, 2, 43, 0, 3, 4, 1, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 00000000000186CB case 8", "add     rax, 38h", "mov     rax, [rax]", "mov     [rbp+var_68], rax", "mov     rax, [rbp+authors]", "add     rax, 30h", "mov     r15, [rax]", "mov     rax, [rbp+authors]", "add     rax, 28h", "mov     r14, [rax]", "mov     rax, [rbp+authors]", "add     rax, 20h", "mov     r13, [rax]", "mov     rax, [rbp+authors]", "add     rax, 18h", "mov     rbx, [rax]", "mov     [rbp+var_70], rbx", "mov     rax, [rbp+authors]", "add     rax, 10h", "mov     rcx, [rax]", "mov     [rbp+var_78], rcx", "mov     rax, [rbp+authors]", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "push    [rbp+var_68]", "push    r15", "push    r14", "push    r13", "mov     r9, [rbp+var_70]", "mov     r8, [rbp+var_78]", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "add     rsp, 20h", "jmp     loc_18B66"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "add~rax,0", "mov~r15,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r14,<TAG>", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r13,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~rbx,<TAG>", "mov~[rbp+0],rbx", "mov~rax,[rbp+0]", "add~rax,0", "mov~rcx,<TAG>", "mov~[rbp+0],rcx", "mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "push~[rbp+0]", "push~r15", "push~r14", "push~r13", "mov~r9,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [1, 1, 16, 1, 0, 16, 0, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "push    rbx", "sub     rsp, 58h", "mov     [rbp+stream], rdi", "mov     [rbp+command_name], rsi", "mov     [rbp+package], rdx", "mov     [rbp+version], rcx", "mov     [rbp+authors], r8", "mov     [rbp+n_authors], r9", "cmp     [rbp+command_name], 0", "jz      short loc_18633"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "push~rbx", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~[rbp+0],r9", "cmp~[rbp+0],0", "jz~FOO"]], [6, 1, 1, 6, 2, 29, 0, 3, 4, 1, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 00000000000186CB case 5", "add     rax, 20h", "mov     r13, [rax]", "mov     rax, [rbp+authors]", "add     rax, 18h", "mov     r15, [rax]", "mov     rax, [rbp+authors]", "add     rax, 10h", "mov     r14, [rax]", "mov     rax, [rbp+authors]", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "sub     rsp, 8", "push    r13", "mov     r9, r15", "mov     r8, r14", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "add     rsp, 10h", "jmp     loc_18B66"], ["mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r13,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r15,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r14,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "sub~rsp,0", "push~r13", "mov~r9,r15", "mov~r8,r14", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [3, 0, 1, 2, 2, 19, 0, 3, 4, 1, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 00000000000186CB case 3", "add     rax, 10h", "mov     r13, [rax]", "mov     rax, [rbp+authors]", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "mov     r8, r13", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "jmp     loc_18B66"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~r13,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "mov~r8,r13", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "jmp~FOO"]], [10, 1, 1, 10, 2, 49, 0, 3, 4, 1, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 00000000000186CB case 9", "add     rax, 40h", "mov     rax, [rax]", "mov     [rbp+var_68], rax", "mov     rax, [rbp+authors]", "add     rax, 38h", "mov     rbx, [rax]", "mov     [rbp+var_70], rbx", "mov     rax, [rbp+authors]", "add     rax, 30h", "mov     r15, [rax]", "mov     rax, [rbp+authors]", "add     rax, 28h", "mov     r14, [rax]", "mov     rax, [rbp+authors]", "add     rax, 20h", "mov     r13, [rax]", "mov     rax, [rbp+authors]", "add     rax, 18h", "mov     rcx, [rax]", "mov     [rbp+var_78], rcx", "mov     rax, [rbp+authors]", "add     rax, 10h", "mov     rdx, [rax]", "mov     [rbp+var_80], rdx", "mov     rax, [rbp+authors]", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "sub     rsp, 8", "push    [rbp+var_68]", "push    [rbp+var_70]", "push    r15", "push    r14", "push    r13", "mov     r9, [rbp+var_78]", "mov     r8, [rbp+var_80]", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "add     rsp, 30h", "jmp     loc_18B66"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "add~rax,0", "mov~rbx,<TAG>", "mov~[rbp+0],rbx", "mov~rax,[rbp+0]", "add~rax,0", "mov~r15,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r14,<TAG>", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r13,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~rcx,<TAG>", "mov~[rbp+0],rcx", "mov~rax,[rbp+0]", "add~rax,0", "mov~rdx,<TAG>", "mov~[rbp+0],rdx", "mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "sub~rsp,0", "push~[rbp+0]", "push~[rbp+0]", "push~r15", "push~r14", "push~r13", "mov~r9,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [10, 1, 1, 10, 2, 49, 0, 3, 3, 1, 0.016666666666666666, ["mov     rax, [rbp+authors]; jumptable 00000000000186CB default case", "add     rax, 40h", "mov     rax, [rax]", "mov     [rbp+var_68], rax", "mov     rax, [rbp+authors]", "add     rax, 38h", "mov     rbx, [rax]", "mov     [rbp+var_70], rbx", "mov     rax, [rbp+authors]", "add     rax, 30h", "mov     r15, [rax]", "mov     rax, [rbp+authors]", "add     rax, 28h", "mov     r14, [rax]", "mov     rax, [rbp+authors]", "add     rax, 20h", "mov     r13, [rax]", "mov     rax, [rbp+authors]", "add     rax, 18h", "mov     rcx, [rax]", "mov     [rbp+var_78], rcx", "mov     rax, [rbp+authors]", "add     rax, 10h", "mov     rdi, [rax]", "mov     [rbp+var_80], rdi", "mov     rax, [rbp+authors]", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "sub     rsp, 8", "push    [rbp+var_68]", "push    [rbp+var_70]", "push    r15", "push    r14", "push    r13", "mov     r9, [rbp+var_78]", "mov     r8, [rbp+var_80]", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "add     rsp, 30h", "jmp     short loc_18B66"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "add~rax,0", "mov~rbx,<TAG>", "mov~[rbp+0],rbx", "mov~rax,[rbp+0]", "add~rax,0", "mov~r15,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r14,<TAG>", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r13,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~rcx,<TAG>", "mov~[rbp+0],rcx", "mov~rax,[rbp+0]", "add~rax,0", "mov~rdi,<TAG>", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "sub~rsp,0", "push~[rbp+0]", "push~[rbp+0]", "push~r15", "push~r14", "push~r13", "mov~r9,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 9, 0, 0, 4, 0, 0.0, ["nop", "lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["nop", "lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [1, 0, 1, 0, 2, 12, 0, 3, 4, 1, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 00000000000186CB case 1", "mov     rbx, [rax]", "lea     rdi, aWrittenByS; \"Written by %s.\\n\"", "call    _gettext", "mov     rcx, rax", "mov     rax, [rbp+stream]", "mov     rdx, rbx", "mov     rsi, rcx; format", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "jmp     loc_18B66"], ["mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rcx,rax", "mov~rax,[rbp+0]", "mov~rdx,rbx", "mov~rsi,rcx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "jmp~FOO"]], [2, 0, 1, 1, 2, 15, 0, 3, 4, 1, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 00000000000186CB case 2", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "jmp     loc_18B66"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "jmp~FOO"]], [4, 0, 1, 3, 2, 23, 0, 3, 4, 1, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 00000000000186CB case 4", "add     rax, 18h", "mov     r14, [rax]", "mov     rax, [rbp+authors]", "add     rax, 10h", "mov     r13, [rax]", "mov     rax, [rbp+authors]", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySSSAn; \"Written by %s, %s, %s,\\nand %s.\\n\"", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "mov     r9, r14", "mov     r8, r13", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "jmp     loc_18B66"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~r14,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r13,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "mov~r9,r14", "mov~r8,r13", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, 1, 0.0004166666666666667, ["nop; jumptable 00000000000186CB case 0"], ["nop"]]], "func_feature": [26, 0, 40, 4, 17, 27, 2, 380, 0.02402, 16, 56], "succs": [[11, 4], [0], [0], [12], [3, 5, 6, 8, 9, 10, 13, 14, 15, 16], [12], [12], [1, 2], [12], [12], [12], [12], [], [12], [12], [12], [12]], "fname": "version_etc_arn", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 1, 13, 0, 1, 0, 0, 0.0, ["mov     r8, [rbp+n_authors]", "mov     rdi, [rbp+authors]", "mov     rcx, [rbp+version]; version", "mov     rdx, [rbp+package]; package", "mov     rsi, [rbp+command_name]; command_name", "mov     rax, [rbp+stream]", "mov     r9, r8; n_authors", "mov     r8, rdi; authors", "mov     rdi, rax; stream", "call    version_etc_arn", "nop", "leave", "retn"], ["mov~r8,[rbp+0]", "mov~rdi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~r9,r8", "mov~r8,rdi", "mov~rdi,rax", "call~FOO", "nop", "leave", "retn"]], [0, 0, 3, 1, 0, 7, 1, 1, 1, 0, 0.5, ["mov     rax, [rbp+n_authors]", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+authors]", "add     rax, rdx", "mov     rax, [rax]", "test    rax, rax", "jnz     short loc_18B9C"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [2, 0, 3, 1, 0, 10, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+stream], rdi", "mov     [rbp+command_name], rsi", "mov     [rbp+package], rdx", "mov     [rbp+version], rcx", "mov     [rbp+authors], r8", "mov     [rbp+n_authors], 0", "jmp     short loc_18BA1"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 3, 1, 0, 1, 0, 0, 2, 0, 0.0, ["add     [rbp+n_authors], 1"], ["add~[rbp+0],0"]]], "func_feature": [1, 1, 3, 0, 4, 4, 0, 31, 0.125, 0, 3], "succs": [[], [0, 3], [1], [1]], "fname": "version_etc_ar", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 1, 14, 1, 2, 2, 1, 0.19444444444444442, ["mov     r8, [rbp+n_authors]", "lea     rdi, [rbp+authtab]", "mov     rcx, [rbp+version]; version", "mov     rdx, [rbp+package]; package", "mov     rsi, [rbp+command_name]; command_name", "mov     rax, [rbp+stream]", "mov     r9, r8; n_authors", "mov     r8, rdi; authors", "mov     rdi, rax; stream", "call    version_etc_arn", "nop", "mov     rax, [rbp+var_8]", "xor     rax, fs:28h", "jz      short locret_18CE5"], ["mov~r8,[rbp+0]", "lea~rdi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~r9,r8", "mov~r8,rdi", "mov~rdi,rax", "call~FOO", "nop", "mov~rax,[rbp+0]", "xor~rax,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 9, 0, 0, 7, 1, 1, 4, 2, 0.29166666666666663, ["mov     rdx, [rax]", "mov     rax, [rbp+n_authors]", "mov     [rbp+rax*8+authtab], rdx", "mov     rax, [rbp+n_authors]", "mov     rax, [rbp+rax*8+authtab]", "test    rax, rax", "jnz     short loc_18C26"], ["mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~[rbp+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rbp+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 9, 1, 0, 12, 0, 1, 3, 3, 0.07638888888888888, ["mov     rax, [rbp+authors]", "mov     rdx, [rax+10h]", "mov     rax, [rbp+authors]", "mov     eax, [rax]", "mov     eax, eax", "add     rax, rdx", "mov     rdx, [rbp+authors]", "mov     edx, [rdx]", "lea     ecx, [rdx+8]", "mov     rdx, [rbp+authors]", "mov     [rdx], ecx", "jmp     short loc_18C8A"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~eax,<TAG>", "mov~eax,eax", "add~rax,rdx", "mov~rdx,[rbp+0]", "mov~edx,<TAG>", "lea~ecx,[rdx+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,ecx", "jmp~FOO"]], [0, 0, 9, 0, 0, 5, 0, 0, 3, 3, 0.07638888888888888, ["mov     rax, [rbp+authors]", "mov     rax, [rax+8]", "lea     rcx, [rax+8]", "mov     rdx, [rbp+authors]", "mov     [rdx+8], rcx"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rcx,[rax+0]", "mov~rdx,[rbp+0]", "mov~[rdx+0],rcx"]], [2, 0, 9, 1, 0, 13, 1, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 0A0h", "mov     [rbp+stream], rdi", "mov     [rbp+command_name], rsi", "mov     [rbp+package], rdx", "mov     [rbp+version], rcx", "mov     [rbp+authors], r8", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     [rbp+n_authors], 0", "jmp     short loc_18C2B"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 9, 0, 0, 4, 0, 1, 2, 4, 0.20833333333333331, ["mov     rax, [rbp+authors]", "mov     eax, [rax]", "cmp     eax, 2Fh ; '/'", "ja      short loc_18C70"], ["mov~rax,[rbp+0]", "mov~eax,<TAG>", "cmp~eax,0", "ja~FOO"]], [1, 0, 9, 1, 0, 1, 0, 0, 5, 3, 0.15277777777777776, ["add     [rbp+n_authors], 1"], ["add~[rbp+0],0"]], [1, 0, 9, 0, 0, 2, 0, 1, 1, 2, 0.3055555555555555, ["cmp     [rbp+n_authors], 9", "ja      short loc_18CA4"], ["cmp~[rbp+0],0", "ja~FOO"]]], "func_feature": [2, 3, 8, 1, 10, 12, 1, 61, 0.13056, 1, 3], "succs": [[], [0, 2], [], [8, 1], [3], [3], [9], [4, 5], [9], [1, 7]], "fname": "version_etc_va", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 1, 2, 0, 1, 21, 2, 2, 1, 1, 0.3333333333333333, ["mov     rax, fs:28h", "mov     [rbp+var_B8], rax", "xor     eax, eax", "mov     [rbp+authors.gp_offset], 20h ; ' '", "mov     [rbp+authors.fp_offset], 30h ; '0'", "lea     rax, [rbp+arg_0]", "mov     [rbp+authors.overflow_arg_area], rax", "lea     rax, [rbp+var_B0]", "mov     [rbp+authors.reg_save_area], rax", "lea     rdi, [rbp+authors]", "mov     rcx, [rbp+version]; version", "mov     rdx, [rbp+package]; package", "mov     rsi, [rbp+command_name]; command_name", "mov     rax, [rbp+stream]", "mov     r8, rdi; authors", "mov     rdi, rax; stream", "call    version_etc_va", "nop", "mov     rax, [rbp+var_B8]", "xor     rax, fs:28h", "jz      short locret_18DC5"], ["mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],<STR>", "mov~[rbp+0],0", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rdi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~r8,rdi", "mov~rdi,rax", "call~FOO", "nop", "mov~rax,[rbp+0]", "xor~rax,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 3, 0, 0, 8, 0, 0, 1, 2, 0.0, ["movaps  [rbp+var_80], xmm0", "movaps  [rbp+var_70], xmm1", "movaps  [rbp+var_60], xmm2", "movaps  [rbp+var_50], xmm3", "movaps  [rbp+var_40], xmm4", "movaps  [rbp+var_30], xmm5", "movaps  [rbp+var_20], xmm6", "movaps  [rbp+var_10], xmm7"], ["movaps~[rbp+0],xmm0", "movaps~[rbp+0],xmm1", "movaps~[rbp+0],xmm2", "movaps~[rbp+0],xmm3", "movaps~[rbp+0],xmm4", "movaps~[rbp+0],xmm5", "movaps~[rbp+0],xmm6", "movaps~[rbp+0],xmm7"]], [0, 1, 4, 1, 0, 11, 1, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 0F0h", "mov     [rbp+stream], rdi", "mov     [rbp+command_name], rsi", "mov     [rbp+package], rdx", "mov     [rbp+version], rcx", "mov     [rbp+var_90], r8", "mov     [rbp+var_88], r9", "test    al, al", "jz      short loc_18D40"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~[rbp+0],r9", "test~al,al", "jz~FOO"]]], "func_feature": [2, 3, 4, 12, 5, 5, 1, 43, 0.06667, 1, 1], "succs": [[], [0, 2], [], [1], [1, 3]], "fname": "version_etc", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[4, 0, 0, 2, 6, 28, 0, 6, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 8", "lea     rdi, aReportBugsToS; \"\\nReport bugs to: %s\\n\"", "call    _gettext", "lea     rsi, aBugCoreutilsGn; \"bug-coreutils@gnu.org\"", "mov     rdi, rax; format", "mov     eax, 0", "call    _printf", "lea     rdi, aSHomePageS; \"%s home page: <%s>\\n\"", "call    _gettext", "lea     rdx, aHttpsWwwGnuOrg_0; \"https://www.gnu.org/software/coreutils/\"", "lea     rsi, aGnuCoreutils_0; \"GNU coreutils\"", "mov     rdi, rax; format", "mov     eax, 0", "call    _printf", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aGeneralHelpUsi; \"General help using GNU software: <https\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "nop", "add     rsp, 8", "pop     rbx", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "lea~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "nop", "add~rsp,0", "pop~rbx", "pop~rbp", "retn"]]], "func_feature": [6, 0, 6, 0, 1, 0, 0, 28, 0.0, 7, 2], "succs": [[]], "fname": "emit_bug_reporting_address", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 4, 0, 0, 2, 1, 0, 0, 0, 0.26666666666666666, ["test    rax, rax", "jns     short loc_18E6B"], ["test~rax,rax", "jns~FOO"]], [2, 0, 6, 2, 0, 9, 0, 0, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+n], rdi", "mov     [rbp+s], rsi", "mov     ecx, 0", "mov     rax, [rbp+n]", "mul     [rbp+s]", "jno     short loc_18E61"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~ecx,0", "mov~rax,[rbp+0]", "mul~,[rbp+0]", "jno~FOO"]], [1, 0, 5, 0, 0, 1, 0, 0, 1, 3, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [1, 0, 3, 0, 0, 1, 0, 0, 2, 2, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [0, 0, 0, 1, 1, 6, 0, 1, 3, 0, 0.0, ["mov     rax, [rbp+n]", "imul    rax, [rbp+s]", "mov     rdi, rax; n", "call    xmalloc", "leave", "retn"], ["mov~rax,[rbp+0]", "imul~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "leave", "retn"]], [1, 0, 2, 0, 0, 4, 2, 1, 2, 1, 0.26666666666666666, ["mov     rax, rcx", "and     eax, 1", "test    al, al", "jz      short loc_18E7A"], ["mov~rax,rcx", "and~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 3, 3, 0, 7, 8, 4, 24, 0.07619, 0, 3], "succs": [[3, 5], [0, 2], [0], [5], [], [4, 6], []], "fname": "xnmalloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 2, 0, 0, 4, 2, 1, 0, 0, 0.26666666666666666, ["mov     rax, rcx", "and     eax, 1", "test    al, al", "jz      short loc_18ECE"], ["mov~rax,rcx", "and~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 0, 1, 2, 0.26666666666666666, ["test    rax, rax", "jns     short loc_18EBF"], ["test~rax,rax", "jns~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 2, 2, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 1, 1, 9, 0, 1, 3, 0, 0.0, ["mov     rax, [rbp+n]", "imul    rax, [rbp+s]", "mov     rdx, rax", "mov     rax, [rbp+p]", "mov     rsi, rdx; n", "mov     rdi, rax; p", "call    xrealloc", "leave", "retn"], ["mov~rax,[rbp+0]", "imul~rax,[rbp+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "leave", "retn"]], [1, 1, 6, 2, 0, 10, 0, 0, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+p], rdi", "mov     [rbp+n], rsi", "mov     [rbp+s], rdx", "mov     ecx, 0", "mov     rax, [rbp+n]", "mul     [rbp+s]", "jno     short loc_18EB5"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~ecx,0", "mov~rax,[rbp+0]", "mul~,[rbp+0]", "jno~FOO"]], [1, 0, 5, 0, 0, 1, 0, 0, 1, 3, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]]], "func_feature": [2, 3, 3, 0, 7, 8, 3, 28, 0.07619, 0, 3], "succs": [[3, 4], [0, 2], [0], [], [], [1, 6], [1]], "fname": "xnrealloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 2, 0, 0, 4, 2, 1, 4, 1, 0.09848484848484848, ["mov     rax, rcx", "and     eax, 1", "test    al, al", "jz      short loc_18F9D"], ["mov~rax,rcx", "and~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 0, 1, 1, 12, 0, 1, 3, 0, 0.0, ["mov     rax, [rbp+pn]", "mov     rdx, [rbp+n]", "mov     [rax], rdx", "mov     rax, [rbp+n]", "imul    rax, [rbp+s]", "mov     rdx, rax", "mov     rax, [rbp+p]", "mov     rsi, rdx; n", "mov     rdi, rax; p", "call    xrealloc", "leave", "retn"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "imul~rax,[rbp+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "leave", "retn"]], [2, 0, 1, 2, 0, 7, 0, 0, 2, 1, 0.015151515151515152, ["mov     rax, [rbp+n]", "shr     rax, 1", "mov     rdx, rax", "mov     rax, [rbp+n]", "add     rax, rdx", "add     rax, 1", "mov     [rbp+n], rax"], ["mov~rax,[rbp+0]", "shr~rax,0", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "add~rax,0", "mov~[rbp+0],rax"]], [1, 0, 6, 1, 0, 4, 0, 0, 2, 3, 0.12878787878787878, ["mov     ecx, 0", "mov     rax, [rbp+n]", "mul     [rbp+s]", "jno     short loc_18F4D"], ["mov~ecx,0", "mov~rax,[rbp+0]", "mul~,[rbp+0]", "jno~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 1, 4, 0.05303030303030303, ["cmp     [rbp+n], 0", "jnz     short loc_18F39"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 1, 7, 2, 0, 8, 0, 0, 2, 4, 0.0, ["mov     eax, 80h", "mov     edx, 0", "div     [rbp+s]", "mov     [rbp+n], rax", "cmp     [rbp+n], 0", "setz    al", "movzx   eax, al", "add     [rbp+n], rax"], ["mov~eax,<STR>", "mov~edx,0", "div~,[rbp+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "setz~al", "movzx~eax,al", "add~[rbp+0],rax"]], [1, 0, 5, 0, 0, 1, 0, 0, 3, 3, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [2, 0, 12, 1, 0, 11, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+p], rdi", "mov     [rbp+pn], rsi", "mov     [rbp+s], rdx", "mov     rax, [rbp+pn]", "mov     rax, [rax]", "mov     [rbp+n], rax", "cmp     [rbp+p], 0", "jnz     short loc_18F66"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 0, 3, 2, 0.14393939393939395, ["test    rax, rax", "jns     short loc_18F57"], ["test~rax,rax", "jns~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 4, 2, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [2, 0, 3, 1, 0, 5, 0, 0, 1, 2, 0.022727272727272728, ["mov     rax, 5555555555555554h", "mov     edx, 0", "div     [rbp+s]", "cmp     [rbp+n], rax", "jb      short loc_18F84"], ["mov~rax,0", "mov~edx,0", "div~,[rbp+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [3, 3, 6, 0, 13, 16, 1, 59, 0.03555, 0, 8], "succs": [[], [0, 2], [], [2], [9, 7], [4, 6], [4], [9], [11, 5], [1, 10], [1], [3, 12], []], "fname": "x2nrealloc", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 1, 9, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+n], rdi", "mov     rax, [rbp+n]", "mov     rdi, rax; n", "call    xmalloc", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 9, 0.0, 0, 1], "succs": [[]], "fname": "xcharalloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 1, 3, 1, 1, 10, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+n], rdi", "mov     rax, [rbp+n]", "mov     rdi, rax; size", "call    malloc", "mov     [rbp+p], rax", "cmp     [rbp+p], 0", "jnz     short loc_1900E"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 0, 1, 0.16666666666666666, ["cmp     [rbp+n], 0", "jz      short loc_1900E"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+p]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]]], "func_feature": [2, 0, 4, 0, 4, 4, 19, 16, 0.04167, 0, 1], "succs": [[2, 3], [], [1, 3], []], "fname": "xmalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 4, 0, 1, 8, 0, 2, 0, 0, 0.15476190476190477, ["mov     rdx, [rbp+n]", "mov     rax, [rbp+p]", "mov     rsi, rdx; size", "mov     rdi, rax; ptr", "call    _realloc", "mov     [rbp+p], rax", "cmp     [rbp+p], 0", "jnz     short loc_1906F"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 7, 1, 0, 7, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+p], rdi", "mov     [rbp+n], rsi", "cmp     [rbp+n], 0", "jnz     short loc_19045"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 1, 2, 0.03571428571428571, ["cmp     [rbp+p], 0", "jz      short loc_19045"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 1, 0, 1, 5, 0, 2, 2, 1, 0.03571428571428571, ["mov     rax, [rbp+p]", "mov     rdi, rax; ptr", "call    free", "mov     eax, 0", "jmp     short locret_19073"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.07142857142857142, ["cmp     [rbp+n], 0", "jz      short loc_1906F"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.05952380952380952, ["mov     rax, [rbp+p]"], ["mov~rax,[rbp+0]"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [3, 0, 8, 0, 8, 10, 7, 28, 0.04464, 0, 1], "succs": [[4, 6], [0, 2], [0, 3], [7], [5, 6], [], [7], []], "fname": "xrealloc", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+p], rdi", "mov     [rbp+pn], rsi", "mov     rcx, [rbp+pn]", "mov     rax, [rbp+p]", "mov     edx, 1; s", "mov     rsi, rcx; pn", "mov     rdi, rax; p", "call    x2nrealloc", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~edx,0", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 13, 0.0, 0, 1], "succs": [[]], "fname": "x2realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 0, 1, 2, 15, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+s], rdi", "mov     rax, [rbp+s]", "mov     rdi, rax; n", "call    xmalloc", "mov     rcx, rax", "mov     rax, [rbp+s]", "mov     rdx, rax; n", "mov     esi, 0; c", "mov     rdi, rcx; s", "call    _memset", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rcx,rax", "mov~rax,[rbp+0]", "mov~rdx,rax", "mov~esi,0", "mov~rdi,rcx", "call~FOO", "leave", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 0, 15, 0.0, 0, 1], "succs": [[]], "fname": "xzalloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 2, 0, 1, 8, 0, 2, 0, 0, 0.11904761904761904, ["mov     rdx, [rbp+s]", "mov     rax, [rbp+n]", "mov     rsi, rdx; size", "mov     rdi, rax; nmemb", "call    _calloc", "mov     [rbp+p], rax", "cmp     [rbp+p], 0", "jnz     short loc_1912B"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 4, 2, 1, 2, 2, 0.2857142857142857, ["mov     rax, rcx", "and     eax, 1", "test    al, al", "jnz     short loc_19126"], ["mov~rax,rcx", "and~eax,0", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 5, 0, 0, 2, 1, 0, 1, 3, 0.23809523809523808, ["test    rax, rax", "jns     short loc_190FE"], ["test~rax,rax", "jns~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 2, 3, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [1, 1, 7, 2, 0, 9, 0, 0, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+n], rdi", "mov     [rbp+s], rsi", "mov     ecx, 0", "mov     rax, [rbp+n]", "mul     [rbp+s]", "jno     short loc_190F4"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~ecx,0", "mov~rax,[rbp+0]", "mul~,[rbp+0]", "jno~FOO"]], [1, 0, 6, 0, 0, 1, 0, 0, 1, 4, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [0, 0, 0, 0, 0, 3, 0, 0, 4, 0, 0.0, ["mov     rax, [rbp+p]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]]], "func_feature": [2, 3, 4, 0, 8, 10, 0, 29, 0.08036, 0, 2], "succs": [[2, 7], [0, 2], [], [1, 4], [1], [3, 6], [3], []], "fname": "xcalloc", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 2, 16, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+p], rdi", "mov     [rbp+s], rsi", "mov     rax, [rbp+s]", "mov     rdi, rax; n", "call    xmalloc", "mov     rcx, rax", "mov     rdx, [rbp+s]; n", "mov     rax, [rbp+p]", "mov     rsi, rax; src", "mov     rdi, rcx; dest", "call    _memcpy", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rcx,rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,rcx", "call~FOO", "leave", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 2, 16, 0.0, 0, 1], "succs": [[]], "fname": "xmemdup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 1, 2, 14, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+string], rdi", "mov     rax, [rbp+string]", "mov     rdi, rax; s", "call    _strlen", "lea     rdx, [rax+1]", "mov     rax, [rbp+string]", "mov     rsi, rdx; s", "mov     rdi, rax; p", "call    xmemdup", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 8, 14, 0.0, 0, 1], "succs": [[]], "fname": "xstrdup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 0, 0, 3, 13, 0, 3, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "lea     rdi, aMemoryExhauste; \"memory exhausted\"", "call    _gettext", "mov     rdx, rax", "mov     eax, cs:exit_failure", "mov     rcx, rdx", "lea     rdx, aS_1; \"%s\"", "mov     esi, 0; errnum", "mov     edi, eax; status", "mov     eax, 0", "call    _error", "call    _abort"], ["push~rbp", "mov~rbp,rsp", "lea~rdi,<TAG>", "call~FOO", "mov~rdx,rax", "mov~eax,<TAG>", "mov~rcx,rdx", "lea~rdx,<TAG>", "mov~esi,0", "mov~edi,eax", "mov~eax,0", "call~FOO", "call~FOO"]]], "func_feature": [3, 0, 3, 0, 1, 0, 16, 13, 0.0, 3, 0], "succs": [[]], "fname": "xalloc_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 1, 20, 1, 1, 24, 1, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 58h", "mov     [rbp+n_str], rdi", "mov     [rbp+base], esi", "mov     [rbp+min], rdx", "mov     [rbp+max], rcx", "mov     [rbp+suffixes], r8", "mov     [rbp+err], r9", "mov     rax, fs:28h", "mov     [rbp+var_18], rax", "xor     eax, eax", "mov     rsi, [rbp+suffixes]", "lea     rcx, [rbp+tnum]; val", "mov     edx, [rbp+base]; strtol_base", "mov     rax, [rbp+n_str]", "mov     r8, rsi; valid_suffixes", "mov     esi, 0; ptr", "mov     rdi, rax; s", "call    xstrtoumax", "mov     [rbp+s_err], eax", "cmp     [rbp+s_err], 0", "jnz     short loc_19263"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~[rbp+0],r9", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~rsi,[rbp+0]", "lea~rcx,[rbp+0]", "mov~edx,[rbp+0]", "mov~rax,[rbp+0]", "mov~r8,rsi", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 11, 0, 1, 3, 0, 2, 0, 3, 0.014473684210526316, ["call    ___errno_location", "mov     dword ptr [rax], 22h ; '\"'", "jmp     short loc_19287"], ["call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [2, 0, 13, 0, 0, 4, 0, 0, 0, 4, 0.015789473684210527, ["mov     [rbp+s_err], 1", "mov     rax, [rbp+tnum]", "cmp     rax, 3FFFFFFFh", "jbe     short loc_19256"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,0", "jbe~FOO"]], [1, 0, 7, 0, 0, 1, 0, 0, 0, 5, 0.06710526315789474, ["mov     esi, 0; errnum"], ["mov~esi,0"]], [1, 0, 9, 0, 2, 8, 0, 3, 0, 6, 0.17368421052631577, ["mov     rax, [rbp+n_str]", "mov     rdi, rax; arg", "call    quote", "mov     rbx, rax", "call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 16h", "jz      short loc_192B1"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 0, 2, 0.2631578947368421, ["cmp     [rbp+s_err], 0", "jz      short loc_192E3"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 14, 0, 0, 3, 0, 0, 0, 3, 0.03859649122807017, ["mov     rax, [rbp+tnum]", "cmp     [rbp+max], rax", "jnb     short loc_19287"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnb~FOO"]], [1, 0, 11, 0, 1, 3, 0, 2, 0, 3, 0.014473684210526316, ["call    ___errno_location", "mov     dword ptr [rax], 4Bh ; 'K'", "jmp     short loc_19287"], ["call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 11, 0, 1, 3, 0, 2, 0, 3, 0.02412280701754386, ["call    ___errno_location", "mov     dword ptr [rax], 4Bh ; 'K'", "jmp     short loc_19287"], ["call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 0, 3, 0.0293859649122807, ["cmp     [rbp+s_err], 3", "jnz     short loc_19287"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 11, 0, 1, 2, 0, 1, 0, 3, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 0"], ["call~FOO", "mov~<TAG>,0"]], [1, 0, 4, 0, 0, 1, 0, 0, 0, 3, 0.035526315789473684, ["mov     eax, 1"], ["mov~eax,0"]], [1, 0, 6, 0, 0, 2, 0, 1, 0, 4, 0.13421052631578947, ["cmp     [rbp+err_exit], 0", "jz      short loc_192C1"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 15, 0, 0, 3, 0, 1, 0, 4, 0.020175438596491225, ["mov     rax, [rbp+tnum]", "cmp     [rbp+min], rax", "ja      short loc_19236"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "ja~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 0, 4, 0.02719298245614035, ["cmp     [rbp+s_err], 1", "jnz     short loc_19276"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 7, 0, 1, 3, 0, 2, 0, 5, 0.06710526315789474, ["call    ___errno_location", "mov     esi, [rax]", "jmp     short loc_192B6"], ["call~FOO", "mov~esi,<TAG>", "jmp~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 0, 1, 0.09473684210526316, ["mov     rax, [rbp+tnum]", "mov     rbx, [rbp+var_18]", "xor     rbx, fs:28h", "jz      short loc_192FB"], ["mov~rax,[rbp+0]", "mov~rbx,[rbp+0]", "xor~rbx,<TAG>", "jz~FOO"]], [1, 0, 3, 0, 1, 7, 0, 1, 0, 2, 0.04736842105263158, ["mov     rdx, [rbp+err]", "mov     r8, rbx", "mov     rcx, rdx", "lea     rdx, aSS_4; \"%s: %s\"", "mov     edi, eax; status", "mov     eax, 0", "call    _error"], ["mov~rdx,[rbp+0]", "mov~r8,rbx", "mov~rcx,rdx", "lea~rdx,<TAG>", "mov~edi,eax", "mov~eax,0", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 1, 0, 1, 0, 4, 0, 0, 0, 0, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "retn"]], [0, 0, 4, 0, 0, 2, 0, 1, 0, 3, 0.035526315789473684, ["mov     eax, [rbp+err_exit]", "jmp     short loc_192C6"], ["mov~eax,[rbp+0]", "jmp~FOO"]]], "func_feature": [10, 2, 23, 1, 21, 29, 2, 84, 0.05251, 2, 2], "succs": [[13, 14], [5], [1, 7], [12], [3, 15], [16, 4], [2, 5], [5], [5], [10, 5], [5], [17], [11, 20], [2, 6], [8, 9], [12], [18, 19], [16], [], [], [17]], "fname": "xnumtoumax", "n_num": 21}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[4, 0, 0, 3, 1, 25, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+n_str], rdi", "mov     [rbp+min], rsi", "mov     [rbp+max], rdx", "mov     [rbp+suffixes], rcx", "mov     [rbp+err], r8", "mov     [rbp+err_exit], r9d", "mov     r8, [rbp+err]", "mov     rdi, [rbp+suffixes]", "mov     rcx, [rbp+max]; max", "mov     rdx, [rbp+min]; min", "mov     rax, [rbp+n_str]", "sub     rsp, 8", "mov     esi, [rbp+err_exit]", "push    rsi; err_exit", "mov     r9, r8; err", "mov     r8, rdi; suffixes", "mov     esi, 0Ah; base", "mov     rdi, rax; n_str", "call    xnumtoumax", "add     rsp, 10h", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~[rbp+0],r9d", "mov~r8,[rbp+0]", "mov~rdi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "sub~rsp,0", "mov~esi,[rbp+0]", "push~rsi", "mov~r9,r8", "mov~r8,rdi", "mov~esi,0", "mov~rdi,rax", "call~FOO", "add~rsp,0", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 25, 0.0, 0, 3], "succs": [[]], "fname": "xdectoumax", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 2, 0, 1, 4, 0, 2, 0, 0, 0.16666666666666666, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 0Ch", "jnz     short loc_1938A"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [4, 0, 3, 1, 1, 9, 0, 2, 0, 1, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     esi, 0; size", "mov     edi, 0; buf", "call    _getcwd", "mov     [rbp+cwd], rax", "cmp     [rbp+cwd], 0", "jnz     short loc_1938A"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0.0, ["mov     rax, [rbp+cwd]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [3, 0, 5, 0, 4, 4, 1, 17, 0.04167, 0, 1], "succs": [[2, 3], [0, 2], [], []], "fname": "xgetcwd", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 12, 1, 0, 7, 1, 1, 0, 0, 0.14772727272727273, ["mov     rax, [rbp+size_1]", "lea     rdx, [rax-1]", "mov     rax, [rbp+hostname]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_193B7"], ["mov~rax,[rbp+0]", "lea~rdx,[rax-1]+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [3, 0, 12, 2, 3, 23, 1, 4, 1, 5, 0.2689393939393939, ["lea     rdx, [rbp+size]", "mov     rax, [rbp+hostname]", "mov     rsi, rdx; pn", "mov     rdi, rax; p", "call    x2realloc", "mov     [rbp+hostname], rax", "mov     rax, [rbp+size]", "sub     rax, 1", "mov     [rbp+size_1], rax", "mov     rax, [rbp+size_1]", "lea     rdx, [rax-1]", "mov     rax, [rbp+hostname]", "add     rax, rdx", "mov     byte ptr [rax], 0", "call    ___errno_location", "mov     dword ptr [rax], 0", "mov     rdx, [rbp+size_1]", "mov     rax, [rbp+hostname]", "mov     rsi, rdx; len", "mov     rdi, rax; name", "call    _gethostname", "test    eax, eax", "jnz     short loc_19426"], ["lea~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "sub~rax,0", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "lea~rdx,[rax-1]+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0", "call~FOO", "mov~<TAG>,0", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 12, 0, 1, 4, 0, 2, 5, 3, 0.10227272727272728, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 0Ch", "jz      loc_193B7"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 12, 0, 1, 4, 0, 2, 4, 4, 0.10984848484848485, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 16h", "jz      loc_193B7"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 3, 3, 0.13257575757575757, ["jmp     short loc_1948B"], ["jmp~FOO"]], [3, 0, 12, 1, 0, 8, 1, 0, 0, 6, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     [rbp+hostname], 0", "mov     [rbp+size], 22h"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0", "mov~[rbp+0],0"]], [1, 0, 3, 0, 3, 12, 0, 4, 6, 2, 0.07954545454545454, ["call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+saved_errno], eax", "mov     rax, [rbp+hostname]", "mov     rdi, rax; ptr", "call    free", "call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+saved_errno]", "mov     [rdx], eax", "mov     eax, 0", "jmp     short loc_1948F"], ["call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "mov~eax,0", "jmp~FOO"]], [1, 0, 12, 0, 1, 4, 0, 2, 3, 5, 0.10984848484848485, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 24h ; '$'", "jz      loc_193B7"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 12, 0, 1, 4, 1, 2, 2, 6, 0.11363636363636365, ["call    ___errno_location", "mov     eax, [rax]", "test    eax, eax", "jz      short loc_193B7"], ["call~FOO", "mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 4, 2, 0.10227272727272728, ["mov     rax, [rbp+hostname]"], ["mov~rax,[rbp+0]"]], [0, 0, 0, 0, 0, 2, 0, 0, 6, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 5, 1, 0.15151515151515152, ["mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_194A3"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [11, 5, 20, 1, 13, 18, 1, 74, 0.1014, 1, 4], "succs": [[1, 4], [0, 8], [1, 6], [1, 2], [9], [1], [11], [1, 3], [1, 7], [11], [], [10, 12], []], "fname": "xgethostname", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [2, 0, 1, 0, 0, 4, 0, 1, 2, 0, 0.07500000000000001, ["mov     rax, [rbp+x]", "mov     qword ptr [rax], 0FFFFFFFFFFFFFFFFh", "mov     eax, 1", "jmp     short loc_19502"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 1, 1, 0, 8, 0, 0, 2, 0, 0.07500000000000001, ["mov     rax, [rbp+x]", "mov     rdx, [rax]", "mov     eax, [rbp+scale_factor]", "cdqe", "imul    rdx, rax", "mov     rax, [rbp+x]", "mov     [rax], rdx", "mov     eax, 0"], ["mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~eax,[rbp+0]", "cdqe~", "imul~rdx,rax", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~eax,0"]], [0, 0, 3, 0, 0, 3, 1, 1, 1, 0, 0.30000000000000004, ["mov     rax, rcx", "test    rax, rax", "jz      short loc_194E6"], ["mov~rax,rcx", "test~rax,rax", "jz~FOO"]], [1, 0, 5, 1, 0, 11, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+x], rdi", "mov     [rbp+scale_factor], esi", "mov     rax, [rbp+x]", "mov     rax, [rax]", "mov     edx, [rbp+scale_factor]", "movsxd  rdx, edx", "mov     ecx, 0", "mul     rdx", "jno     short loc_194CC"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~edx,[rbp+0]", "movsxd~rdx,edx", "mov~ecx,0", "mul~,rdx", "jno~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 1, 0, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]]], "func_feature": [0, 1, 2, 0, 6, 7, 4, 29, 0.075, 0, 2], "succs": [[], [0], [0], [1, 2], [3, 5], [3]], "fname": "bkm_scale", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 3, 0, 1, 6, 1, 1, 0, 0, 0.0, ["mov     edx, [rbp+base]", "mov     rax, [rbp+x]", "mov     esi, edx; scale_factor", "mov     rdi, rax; x", "call    bkm_scale", "or      [rbp+err], eax"], ["mov~edx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "or~[rbp+0],eax"]], [0, 0, 3, 0, 0, 5, 1, 1, 1, 1, 0.5, ["mov     eax, [rbp+power]", "lea     edx, [rax-1]", "mov     [rbp+power], edx", "test    eax, eax", "jnz     short loc_1951F"], ["mov~eax,[rbp+0]", "lea~edx,[rax-1]+0]", "mov~[rbp+0],edx", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["mov     eax, [rbp+err]", "leave", "retn"], ["mov~eax,[rbp+0]", "leave", "retn"]], [1, 1, 3, 1, 0, 8, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+x], rdi", "mov     [rbp+base], esi", "mov     [rbp+power], edx", "mov     [rbp+err], 0", "jmp     short loc_19533"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~[rbp+0],edx", "mov~[rbp+0],0", "jmp~FOO"]]], "func_feature": [1, 2, 3, 0, 4, 4, 8, 22, 0.125, 0, 1], "succs": [[1], [0, 2], [], [1]], "fname": "bkm_scale_by_power", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 56, 0, 0, 2, 0, 1, 0, 0, 0.017230576441102756, ["cmp     [rbp+strtol_base], 24h ; '$'", "jle     short loc_195A1"], ["cmp~[rbp+0],0", "jle~FOO"]], [3, 0, 57, 1, 0, 14, 1, 1, 0, 9, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 70h", "mov     [rbp+s], rdi", "mov     [rbp+ptr], rsi", "mov     [rbp+strtol_base], edx", "mov     [rbp+val], rcx", "mov     [rbp+valid_suffixes], r8", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     [rbp+err], 0", "cmp     [rbp+strtol_base], 0", "js      short loc_19582"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],edx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0", "cmp~[rbp+0],0", "js~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 9, 2, 0.0037593984962406013, ["mov     eax, 4", "jmp     loc_1997A"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 41, 0, 0, 2, 0, 1, 8, 3, 0.013471177944862155, ["cmp     [rbp+valid_suffixes], 0", "jz      short loc_1967B"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 40, 0, 0, 5, 1, 1, 9, 3, 0.017543859649122806, ["mov     rax, [rbp+p]", "mov     rax, [rax]", "movzx   eax, byte ptr [rax]", "test    al, al", "jz      short loc_1967B"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 39, 0, 1, 10, 1, 2, 10, 3, 0.02506265664160401, ["mov     rax, [rbp+p]", "mov     rax, [rax]", "movzx   eax, byte ptr [rax]", "movsx   edx, al", "mov     rax, [rbp+valid_suffixes]", "mov     esi, edx; c", "mov     rdi, rax; s", "call    _strchr", "test    rax, rax", "jz      short loc_1967B"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "movzx~eax,<TAG>", "movsx~edx,al", "mov~rax,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 51, 2, 1, 10, 2, 2, 5, 4, 0.10933583959899748, ["call    ___ctype_b_loc", "mov     rax, [rax]", "movzx   edx, [rbp+ch_0]", "add     rdx, rdx", "add     rax, rdx", "movzx   eax, word ptr [rax]", "movzx   eax, ax", "and     eax, 2000h", "test    eax, eax", "jnz     short loc_195D5"], ["call~FOO", "mov~rax,<TAG>", "movzx~edx,[rbp+0]", "add~rdx,rdx", "add~rax,rdx", "movzx~eax,<TAG>", "movzx~eax,ax", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [1, 0, 51, 0, 1, 9, 0, 2, 4, 5, 0.07988721804511278, ["mov     [rbp+p], rax", "call    ___errno_location", "mov     dword ptr [rax], 0", "mov     rax, [rbp+s]", "mov     [rbp+q], rax", "mov     rax, [rbp+q]", "movzx   eax, byte ptr [rax]", "mov     [rbp+ch_0], al", "jmp     short loc_195E4"], ["mov~[rbp+0],rax", "call~FOO", "mov~<TAG>,0", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "mov~[rbp+0],al", "jmp~FOO"]], [1, 0, 51, 1, 0, 4, 0, 0, 6, 5, 0.0, ["add     [rbp+q], 1", "mov     rax, [rbp+q]", "movzx   eax, byte ptr [rax]", "mov     [rbp+ch_0], al"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "mov~[rbp+0],al"]], [2, 0, 33, 0, 1, 12, 1, 2, 11, 3, 0.17261904761904762, ["mov     [rbp+base], 400h", "mov     [rbp+suffixes], 1", "mov     rax, [rbp+p]", "mov     rax, [rax]", "movzx   eax, byte ptr [rax]", "movsx   edx, al", "mov     rax, [rbp+valid_suffixes]", "mov     esi, edx; c", "mov     rdi, rax; s", "call    _strchr", "test    rax, rax", "jnz     short loc_1971D"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "movzx~eax,<TAG>", "movsx~edx,al", "mov~rax,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 34, 0, 0, 5, 1, 1, 10, 3, 0.17481203007518797, ["mov     rax, [rbp+p]", "mov     rax, [rax]", "movzx   eax, byte ptr [rax]", "test    al, al", "jz      loc_1996C"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 6, 0, 1, 8, 0, 2, 15, 4, 0.002088554720133668, ["mov     ecx, [rbp+base]; jumptable 00000000000197F1 cases 75,107", "lea     rax, [rbp+tmp]", "mov     edx, 1; power", "mov     esi, ecx; base", "mov     rdi, rax; x", "call    bkm_scale_by_power", "mov     [rbp+overflow], eax", "jmp     loc_1993E"], ["mov~ecx,[rbp+0]", "lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [0, 0, 19, 1, 0, 8, 0, 1, 14, 3, 0.1444235588972431, ["mov     eax, eax", "lea     rdx, ds:0[rax*4]", "lea     rax, off_20508", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_20508", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,eax", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [0, 1, 6, 0, 1, 6, 0, 2, 15, 4, 0.002088554720133668, ["lea     rax, [rbp+tmp]; jumptable 00000000000197F1 case 98", "mov     esi, 200h; scale_factor", "mov     rdi, rax; x", "call    bkm_scale", "mov     [rbp+overflow], eax", "jmp     loc_1993E"], ["lea~rax,[rbp+0]", "mov~esi,<STR>", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 27, 0, 0, 2, 0, 1, 16, 6, 0.03759398496240601, ["cmp     eax, 69h ; 'i'", "jz      short loc_19791"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 28, 1, 0, 7, 0, 1, 15, 5, 0.05043859649122807, ["mov     rax, [rbp+p]", "mov     rax, [rax]", "add     rax, 1", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "cmp     eax, 44h ; 'D'", "jz      short loc_197A9"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "add~rax,0", "movzx~eax,<TAG>", "movsx~eax,al", "cmp~eax,0", "jz~FOO"]], [1, 0, 48, 0, 0, 2, 0, 1, 6, 3, 0.12030075187969924, ["cmp     [rbp+ch_0], 2Dh ; '-'", "jnz     short loc_19615"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 6, 0, 1, 8, 0, 2, 15, 4, 0.002088554720133668, ["mov     ecx, [rbp+base]; jumptable 00000000000197F1 case 80", "lea     rax, [rbp+tmp]", "mov     edx, 5; power", "mov     esi, ecx; base", "mov     rdi, rax; x", "call    bkm_scale_by_power", "mov     [rbp+overflow], eax", "jmp     short loc_1993E"], ["mov~ecx,[rbp+0]", "lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 17, 5, 0.012531328320802004, ["cmp     eax, 42h ; 'B'", "jz      short loc_197A9"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 40, 0, 1, 4, 1, 2, 8, 4, 0.11591478696741854, ["call    ___errno_location", "mov     eax, [rax]", "test    eax, eax", "jz      short loc_196AD"], ["call~FOO", "mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 0, 46, 0, 1, 11, 0, 2, 7, 4, 0.1212406015037594, ["mov     edx, [rbp+strtol_base]; base", "mov     rcx, [rbp+p]", "mov     rax, [rbp+s]", "mov     rsi, rcx; endptr", "mov     rdi, rax; nptr", "call    _strtoul", "mov     [rbp+tmp], rax", "mov     rax, [rbp+p]", "mov     rax, [rax]", "cmp     [rbp+s], rax", "jnz     short loc_19685"], ["mov~edx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "cmp~[rbp+0],rax", "jnz~FOO"]], [0, 0, 21, 0, 0, 1, 0, 1, 18, 4, 0.005482456140350877, ["jmp     short loc_197B7; jumptable 0000000000019757 default case"], ["jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 7, 2, 0.008458646616541353, ["mov     eax, 4", "jmp     loc_1997A"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 15, 4, 0.002088554720133668, ["mov     [rbp+overflow], 0; jumptable 00000000000197F1 case 99", "jmp     loc_1993E"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 29, 0, 1, 6, 1, 2, 14, 4, 0.05513784461152882, ["mov     rax, [rbp+valid_suffixes]; jumptable 0000000000019757 cases 69,71,75,77,80,84,89,90,103,107,109,116", "mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _strchr", "test    rax, rax", "jz      short loc_197B7; jumptable 0000000000019757 default case"], ["mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 3, 0, 0, 6, 1, 1, 12, 2, 0.0009398496240601503, ["mov     rdx, [rbp+tmp]", "mov     rax, [rbp+val]", "mov     [rax], rdx", "mov     eax, [rbp+err]", "or      eax, 2", "jmp     loc_1997A"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~eax,[rbp+0]", "or~eax,0", "jmp~FOO"]], [1, 0, 39, 0, 1, 4, 0, 2, 9, 3, 0.0073621553884711775, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 22h ; '\"'", "jz      short loc_196A6"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 1, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___3655; \"xstrtoul\"", "mov     edx, 54h ; 'T'; line", "lea     rsi, aLibXstrtolC; \"lib/xstrtol.c\"", "lea     rdi, a0StrtolBaseStr; \"0 <= strtol_base && strtol_base <= 36\"", "call    ___assert_fail"], ["lea~rcx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO"]], [1, 0, 6, 0, 1, 6, 0, 2, 15, 4, 0.002088554720133668, ["lea     rax, [rbp+tmp]; jumptable 00000000000197F1 case 66", "mov     esi, 400h; scale_factor", "mov     rdi, rax; x", "call    bkm_scale", "mov     [rbp+overflow], eax", "jmp     loc_1993E"], ["lea~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 10, 2, 0.0014097744360902255, ["mov     eax, 4", "jmp     loc_1997A"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 6, 0, 1, 8, 0, 2, 15, 4, 0.002088554720133668, ["mov     ecx, [rbp+base]; jumptable 00000000000197F1 cases 77,109", "lea     rax, [rbp+tmp]", "mov     edx, 2; power", "mov     esi, ecx; base", "mov     rdi, rax; x", "call    bkm_scale_by_power", "mov     [rbp+overflow], eax", "jmp     loc_1993E"], ["mov~ecx,[rbp+0]", "lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 37, 0, 0, 1, 0, 0, 10, 4, 0.010651629072681704, ["mov     [rbp+err], 1"], ["mov~[rbp+0],0"]], [1, 0, 22, 1, 0, 2, 0, 1, 18, 5, 0.0, ["add     [rbp+suffixes], 2", "jmp     short loc_197B6"], ["add~[rbp+0],0", "jmp~FOO"]], [2, 0, 23, 1, 0, 6, 0, 1, 17, 5, 0.017857142857142856, ["mov     rax, [rbp+p]", "mov     rax, [rax]", "add     rax, 2", "movzx   eax, byte ptr [rax]", "cmp     al, 42h ; 'B'", "jnz     short loc_197B6"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "add~rax,0", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [1, 0, 6, 0, 1, 8, 0, 2, 15, 4, 0.002088554720133668, ["mov     ecx, [rbp+base]; jumptable 00000000000197F1 case 90", "lea     rax, [rbp+tmp]", "mov     edx, 7; power", "mov     esi, ecx; base", "mov     rdi, rax; x", "call    bkm_scale_by_power", "mov     [rbp+overflow], eax", "jmp     short loc_1993E"], ["mov~ecx,[rbp+0]", "lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 8, 1, 0.03383458646616541, ["mov     rsi, [rbp+var_8]", "xor     rsi, fs:28h", "jz      short locret_1998E"], ["mov~rsi,[rbp+0]", "xor~rsi,<TAG>", "jz~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 10, 2, 0.003289473684210526, ["mov     rdx, [rbp+tmp]", "mov     rax, [rbp+val]", "mov     [rax], rdx", "mov     eax, [rbp+err]", "jmp     loc_1997A"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~eax,[rbp+0]", "jmp~FOO"]], [1, 0, 3, 0, 0, 6, 1, 1, 14, 2, 0.012218045112781954, ["mov     rdx, [rbp+tmp]; jumptable 00000000000197F1 default case", "mov     rax, [rbp+val]", "mov     [rax], rdx", "mov     eax, [rbp+err]", "or      eax, 2", "jmp     short loc_1997A"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~eax,[rbp+0]", "or~eax,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 4, 0, 0, 11, 2, 0.014097744360902255, ["mov     rdx, [rbp+tmp]", "mov     rax, [rbp+val]", "mov     [rax], rdx", "mov     eax, [rbp+err]"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~eax,[rbp+0]"]], [0, 0, 52, 0, 0, 2, 0, 1, 3, 6, 0.02443609022556391, ["lea     rax, [rbp+t_ptr]", "jmp     short loc_195B2"], ["lea~rax,[rbp+0]", "jmp~FOO"]], [1, 0, 54, 0, 0, 2, 0, 1, 2, 7, 0.03383458646616541, ["cmp     [rbp+ptr], 0", "jnz     short loc_195AE"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 52, 0, 0, 1, 0, 0, 3, 6, 0.02443609022556391, ["mov     rax, [rbp+ptr]"], ["mov~rax,[rbp+0]"]], [2, 0, 31, 1, 0, 7, 0, 1, 12, 4, 0.1694862155388471, ["mov     rax, [rbp+p]", "mov     rax, [rax]", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "sub     eax, 45h ; 'E'; switch 48 cases", "cmp     eax, 2Fh ; '/'", "ja      loc_197B7; jumptable 0000000000019757 default case"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "movzx~eax,<TAG>", "movsx~eax,al", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 36, 0, 0, 2, 0, 1, 9, 3, 0.17810150375939848, ["cmp     [rbp+valid_suffixes], 0", "jnz     short loc_196C7"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 37, 0, 0, 2, 0, 1, 11, 4, 0.03195488721804511, ["mov     [rbp+tmp], 1", "jmp     short loc_196AD"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 6, 0, 1, 6, 0, 2, 15, 4, 0.002088554720133668, ["lea     rax, [rbp+tmp]; jumptable 00000000000197F1 case 119", "mov     esi, 2; scale_factor", "mov     rdi, rax; x", "call    bkm_scale", "mov     [rbp+overflow], eax", "jmp     short loc_1993E"], ["lea~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [2, 0, 21, 1, 0, 3, 0, 1, 16, 4, 0.01206140350877193, ["mov     [rbp+base], 3E8h", "add     [rbp+suffixes], 1", "jmp     short loc_197B7; jumptable 0000000000019757 default case"], ["mov~[rbp+0],0", "add~[rbp+0],0", "jmp~FOO"]], [0, 0, 21, 0, 0, 1, 0, 0, 18, 4, 0.015350877192982455, ["nop"], ["nop"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 0, 20, 1, 0, 7, 0, 1, 13, 3, 0.1694862155388471, ["mov     rax, [rbp+p]; jumptable 0000000000019757 default case", "mov     rax, [rax]", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "sub     eax, 42h ; 'B'; switch 54 cases", "cmp     eax, 35h ; '5'", "ja      loc_1992B; jumptable 00000000000197F1 default case"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "movzx~eax,<TAG>", "movsx~eax,al", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 6, 0, 1, 8, 0, 2, 15, 4, 0.002088554720133668, ["mov     ecx, [rbp+base]; jumptable 00000000000197F1 case 69", "lea     rax, [rbp+tmp]", "mov     edx, 6; power", "mov     esi, ecx; base", "mov     rdi, rax; x", "call    bkm_scale_by_power", "mov     [rbp+overflow], eax", "jmp     loc_1993E"], ["mov~ecx,[rbp+0]", "lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [0, 0, 30, 1, 0, 8, 0, 1, 13, 4, 0.05921052631578947, ["mov     eax, eax", "lea     rdx, ds:0[rax*4]", "lea     rax, off_20448", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_20448", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,eax", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 6, 0, 1, 8, 0, 2, 15, 4, 0.002088554720133668, ["mov     ecx, [rbp+base]; jumptable 00000000000197F1 case 89", "lea     rax, [rbp+tmp]", "mov     edx, 8; power", "mov     esi, ecx; base", "mov     rdi, rax; x", "call    bkm_scale_by_power", "mov     [rbp+overflow], eax", "jmp     short loc_1993E"], ["mov~ecx,[rbp+0]", "lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 9, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 6, 0, 1, 8, 0, 2, 15, 4, 0.002088554720133668, ["mov     ecx, [rbp+base]; jumptable 00000000000197F1 cases 84,116", "lea     rax, [rbp+tmp]", "mov     edx, 4; power", "mov     esi, ecx; base", "mov     rdi, rax; x", "call    bkm_scale_by_power", "mov     [rbp+overflow], eax", "jmp     short loc_1993E"], ["mov~ecx,[rbp+0]", "lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [0, 0, 5, 1, 0, 14, 2, 1, 16, 3, 0.03352130325814536, ["mov     eax, [rbp+overflow]", "or      [rbp+err], eax", "mov     rax, [rbp+p]", "mov     rdx, [rax]", "mov     eax, [rbp+suffixes]", "cdqe", "add     rdx, rax", "mov     rax, [rbp+p]", "mov     [rax], rdx", "mov     rax, [rbp+p]", "mov     rax, [rax]", "movzx   eax, byte ptr [rax]", "test    al, al", "jz      short loc_1996C"], ["mov~eax,[rbp+0]", "or~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~eax,[rbp+0]", "cdqe~", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 6, 0, 1, 8, 0, 2, 15, 4, 0.002088554720133668, ["mov     ecx, [rbp+base]; jumptable 00000000000197F1 cases 71,103", "lea     rax, [rbp+tmp]", "mov     edx, 3; power", "mov     esi, ecx; base", "mov     rdi, rax; x", "call    bkm_scale_by_power", "mov     [rbp+overflow], eax", "jmp     loc_1993E"], ["mov~ecx,[rbp+0]", "lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 4, 0, 0, 1, 1, 0, 17, 3, 0.0, ["or      [rbp+err], 2"], ["or~[rbp+0],0"]]], "func_feature": [21, 15, 70, 1, 58, 91, 1, 301, 0.03731, 6, 13], "succs": [[40, 27], [0, 27], [35], [2, 4], [2, 5], [2, 44], [16, 8], [6], [6], [25, 42], [9, 38], [55], [34, 37, 11, 13, 45, 17, 50, 52, 54, 23, 56, 28, 30], [55], [33, 18], [46, 14], [20, 22], [55], [21, 46], [26, 43], [3, 19], [49], [35], [55], [49, 15], [35], [29, 31], [], [55], [35], [55], [43], [47], [32, 47], [55], [48, 53], [35], [35], [35], [7], [41, 39], [7], [49, 51], [10, 36], [43], [55], [49], [49], [], [12, 37], [55], [24, 49], [55], [], [55], [57, 38], [55], [38]], "fname": "xstrtoul", "n_num": 58}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 8, 0, 0, 2, 0, 1, 0, 0, 0.027472527472527476, ["cmp     eax, 4", "jz      short loc_199E7"], ["cmp~eax,0", "jz~FOO"]], [1, 1, 14, 1, 0, 18, 1, 1, 0, 6, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+err], edi", "mov     [rbp+opt_idx], esi", "mov     eax, edx", "mov     [rbp+long_options], rcx", "mov     [rbp+arg], r8", "mov     [rbp+exit_status], r9d", "mov     [rbp+c], al", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "lea     rax, asc_205F0; \"--\"", "mov     [rbp+hyphens], rax", "mov     eax, [rbp+err]", "cmp     eax, 3", "ja      short loc_199DD"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],esi", "mov~eax,edx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~[rbp+0],r9d", "mov~[rbp+0],al", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "mov~eax,[rbp+0]", "cmp~eax,0", "ja~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 3, -1, 0.01098901098901099, ["jmp     short loc_199E2"], ["jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 0, 2, 0, 2, 20, 1, 3, 5, 1, 0.1098901098901099, ["mov     rax, [rbp+msgid]", "mov     rdi, rax; msgid", "call    _gettext", "mov     rdi, rax", "mov     rsi, [rbp+arg]", "mov     rcx, [rbp+option]", "mov     rdx, [rbp+hyphens]", "mov     eax, [rbp+exit_status]", "mov     r9, rsi", "mov     r8, rcx", "mov     rcx, rdx", "mov     rdx, rdi; format", "mov     esi, 0; errnum", "mov     edi, eax; status", "mov     eax, 0", "call    _error", "nop", "mov     rax, [rbp+var_8]", "xor     rax, fs:28h", "jz      short locret_19A9E"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rdi,rax", "mov~rsi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~eax,[rbp+0]", "mov~r9,rsi", "mov~r8,rcx", "mov~rcx,rdx", "mov~rdx,rdi", "mov~esi,0", "mov~edi,eax", "mov~eax,0", "call~FOO", "nop", "mov~rax,[rbp+0]", "xor~rax,<TAG>", "jz~FOO"]], [1, 0, 3, 2, 0, 8, 0, 0, 4, 2, 0.06593406593406594, ["mov     eax, [rbp+opt_idx]", "cdqe", "shl     rax, 5", "mov     rdx, rax", "mov     rax, [rbp+long_options]", "add     rax, rdx", "mov     rax, [rax]", "mov     [rbp+option], rax"], ["mov~eax,[rbp+0]", "cdqe~", "shl~rax,0", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax"]], [1, 0, 5, 0, 0, 2, 0, 0, 3, 3, 0.19230769230769232, ["cmp     [rbp+opt_idx], 0", "jns     short loc_19A34"], ["cmp~[rbp+0],0", "jns~FOO"]], [0, 0, 6, 0, 0, 3, 0, 0, 3, 4, 0.03296703296703297, ["lea     rax, aSSArgumentSToo; \"%s%s argument '%s' too large\"", "mov     [rbp+msgid], rax", "nop"], ["lea~rax,<TAG>", "mov~[rbp+0],rax", "nop"]], [1, 0, 9, 0, 0, 2, 0, 1, 2, 5, 0.027472527472527476, ["cmp     eax, 1", "jz      short loc_19A01"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 3, 1, 0, 10, 0, 1, 4, 2, 0.06593406593406594, ["mov     eax, [rbp+opt_idx]", "cdqe", "neg     rax", "add     [rbp+hyphens], rax", "movzx   eax, [rbp+c]", "mov     [rbp+option_buffer], al", "mov     [rbp+option_buffer+1], 0", "lea     rax, [rbp+option_buffer]", "mov     [rbp+option], rax", "jmp     short loc_19A4E"], ["mov~eax,[rbp+0]", "cdqe~", "neg~rax", "add~[rbp+0],rax", "movzx~eax,[rbp+0]", "mov~[rbp+0],al", "mov~[rbp+0],0", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 2, 4, 0.049450549450549455, ["lea     rax, aInvalidSSArgum; \"invalid %s%s argument '%s'\"", "mov     [rbp+msgid], rax", "jmp     short loc_19A0D"], ["lea~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 2, 4, 0.049450549450549455, ["lea     rax, aInvalidSuffixI; \"invalid suffix in %s%s argument '%s'\"", "mov     [rbp+msgid], rax", "jmp     short loc_19A0D"], ["lea~rax,<TAG>", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 11, 0, 0, 2, 0, 0, 1, 5, 0.038461538461538464, ["cmp     eax, 2", "jnb     short loc_199F4"], ["cmp~eax,0", "jnb~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 6, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [4, 2, 12, 1, 15, 18, 1, 78, 0.04469, 5, 4], "succs": [[2, 11], [0, 13], [], [2], [], [4, 14], [5], [10, 6], [7], [8, 3], [5], [7], [7], [9, 12], []], "fname": "xstrtol_error", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 1, 0, 1, 2, 20, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+err], edi", "mov     [rbp+opt_idx], esi", "mov     eax, edx", "mov     [rbp+long_options], rcx", "mov     [rbp+arg], r8", "mov     [rbp+c], al", "mov     r8d, cs:exit_failure", "movsx   edx, [rbp+c]; c", "mov     rdi, [rbp+arg]", "mov     rcx, [rbp+long_options]; long_options", "mov     esi, [rbp+opt_idx]; opt_idx", "mov     eax, [rbp+err]", "mov     r9d, r8d; exit_status", "mov     r8, rdi; arg", "mov     edi, eax; err", "call    xstrtol_error", "call    _abort"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],esi", "mov~eax,edx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~[rbp+0],al", "mov~r8d,<TAG>", "movsx~edx,[rbp+0]", "mov~rdi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~esi,[rbp+0]", "mov~eax,[rbp+0]", "mov~r9d,r8d", "mov~r8,rdi", "mov~edi,eax", "call~FOO", "call~FOO"]]], "func_feature": [2, 0, 2, 0, 1, 0, 1, 20, 0.0, 1, 1], "succs": [[]], "fname": "xstrtol_fatal", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [2, 0, 1, 0, 0, 4, 0, 1, 2, 0, 0.07500000000000001, ["mov     rax, [rbp+x]", "mov     qword ptr [rax], 0FFFFFFFFFFFFFFFFh", "mov     eax, 1", "jmp     short loc_19B43"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 1, 1, 0, 8, 0, 0, 2, 0, 0.07500000000000001, ["mov     rax, [rbp+x]", "mov     rdx, [rax]", "mov     eax, [rbp+scale_factor]", "cdqe", "imul    rdx, rax", "mov     rax, [rbp+x]", "mov     [rax], rdx", "mov     eax, 0"], ["mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~eax,[rbp+0]", "cdqe~", "imul~rdx,rax", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~eax,0"]], [0, 0, 3, 0, 0, 3, 1, 1, 1, 0, 0.30000000000000004, ["mov     rax, rcx", "test    rax, rax", "jz      short loc_19B27"], ["mov~rax,rcx", "test~rax,rax", "jz~FOO"]], [1, 0, 5, 1, 0, 11, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+x], rdi", "mov     [rbp+scale_factor], esi", "mov     rax, [rbp+x]", "mov     rax, [rax]", "mov     edx, [rbp+scale_factor]", "movsxd  rdx, edx", "mov     ecx, 0", "mul     rdx", "jno     short loc_19B0D"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~edx,[rbp+0]", "movsxd~rdx,edx", "mov~ecx,0", "mul~,rdx", "jno~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 1, 0, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]]], "func_feature": [0, 1, 2, 0, 6, 7, 4, 29, 0.075, 0, 2], "succs": [[], [0], [0], [1, 2], [3, 5], [3]], "fname": "bkm_scale_0", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 3, 0, 1, 6, 1, 1, 0, 0, 0.0, ["mov     edx, [rbp+base]", "mov     rax, [rbp+x]", "mov     esi, edx; scale_factor", "mov     rdi, rax; x", "call    bkm_scale_0", "or      [rbp+err], eax"], ["mov~edx,[rbp+0]", "mov~rax,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "or~[rbp+0],eax"]], [0, 0, 3, 0, 0, 5, 1, 1, 1, 1, 0.5, ["mov     eax, [rbp+power]", "lea     edx, [rax-1]", "mov     [rbp+power], edx", "test    eax, eax", "jnz     short loc_19B60"], ["mov~eax,[rbp+0]", "lea~edx,[rax-1]+0]", "mov~[rbp+0],edx", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["mov     eax, [rbp+err]", "leave", "retn"], ["mov~eax,[rbp+0]", "leave", "retn"]], [1, 1, 3, 1, 0, 8, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+x], rdi", "mov     [rbp+base], esi", "mov     [rbp+power], edx", "mov     [rbp+err], 0", "jmp     short loc_19B74"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~[rbp+0],edx", "mov~[rbp+0],0", "jmp~FOO"]]], "func_feature": [1, 2, 3, 0, 4, 4, 8, 22, 0.125, 0, 1], "succs": [[1], [0, 2], [], [1]], "fname": "bkm_scale_by_power_0", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 41, 0, 0, 2, 0, 1, 0, 0, 0.013471177944862155, ["cmp     [rbp+valid_suffixes], 0", "jz      short loc_19CBC"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 46, 0, 1, 11, 0, 2, 7, 4, 0.1212406015037594, ["mov     edx, [rbp+strtol_base]; base", "mov     rcx, [rbp+p]", "mov     rax, [rbp+s]", "mov     rsi, rcx; endptr", "mov     rdi, rax; nptr", "call    _strtoumax", "mov     [rbp+tmp], rax", "mov     rax, [rbp+p]", "mov     rax, [rax]", "cmp     [rbp+s], rax", "jnz     short loc_19CC6"], ["mov~edx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "cmp~[rbp+0],rax", "jnz~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 10, 2, 0.003289473684210526, ["mov     rdx, [rbp+tmp]", "mov     rax, [rbp+val]", "mov     [rax], rdx", "mov     eax, [rbp+err]", "jmp     loc_19FBB"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~eax,[rbp+0]", "jmp~FOO"]], [1, 0, 36, 0, 0, 2, 0, 1, 9, 3, 0.17810150375939848, ["cmp     [rbp+valid_suffixes], 0", "jnz     short loc_19D08"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 9, 2, 0.0037593984962406013, ["mov     eax, 4", "jmp     loc_19FBB"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 40, 0, 0, 5, 1, 1, 9, 3, 0.017543859649122806, ["mov     rax, [rbp+p]", "mov     rax, [rax]", "movzx   eax, byte ptr [rax]", "test    al, al", "jz      short loc_19CBC"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 39, 0, 1, 10, 1, 2, 10, 3, 0.02506265664160401, ["mov     rax, [rbp+p]", "mov     rax, [rax]", "movzx   eax, byte ptr [rax]", "movsx   edx, al", "mov     rax, [rbp+valid_suffixes]", "mov     esi, edx; c", "mov     rdi, rax; s", "call    _strchr", "test    rax, rax", "jz      short loc_19CBC"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "movzx~eax,<TAG>", "movsx~edx,al", "mov~rax,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "test~rax,rax", "jz~FOO"]], [2, 0, 20, 1, 0, 7, 0, 1, 13, 3, 0.1694862155388471, ["mov     rax, [rbp+p]; jumptable 0000000000019D98 default case", "mov     rax, [rax]", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "sub     eax, 42h ; 'B'; switch 54 cases", "cmp     eax, 35h ; '5'", "ja      loc_19F6C; jumptable 0000000000019E32 default case"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "movzx~eax,<TAG>", "movsx~eax,al", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [2, 0, 31, 1, 0, 7, 0, 1, 12, 4, 0.1694862155388471, ["mov     rax, [rbp+p]", "mov     rax, [rax]", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "sub     eax, 45h ; 'E'; switch 48 cases", "cmp     eax, 2Fh ; '/'", "ja      loc_19DF8; jumptable 0000000000019D98 default case"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "movzx~eax,<TAG>", "movsx~eax,al", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [0, 0, 30, 1, 0, 8, 0, 1, 13, 4, 0.05921052631578947, ["mov     eax, eax", "lea     rdx, ds:0[rax*4]", "lea     rax, off_20690", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_20690", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,eax", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 29, 0, 1, 6, 1, 2, 14, 4, 0.05513784461152882, ["mov     rax, [rbp+valid_suffixes]; jumptable 0000000000019D98 cases 69,71,75,77,80,84,89,90,103,107,109,116", "mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _strchr", "test    rax, rax", "jz      short loc_19DF8; jumptable 0000000000019D98 default case"], ["mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 21, 0, 0, 1, 0, 1, 18, 4, 0.005482456140350877, ["jmp     short loc_19DF8; jumptable 0000000000019D98 default case"], ["jmp~FOO"]], [2, 0, 21, 1, 0, 3, 0, 1, 16, 4, 0.01206140350877193, ["mov     [rbp+base], 3E8h", "add     [rbp+suffixes], 1", "jmp     short loc_19DF8; jumptable 0000000000019D98 default case"], ["mov~[rbp+0],0", "add~[rbp+0],0", "jmp~FOO"]], [0, 0, 21, 0, 0, 1, 0, 0, 18, 4, 0.015350877192982455, ["nop"], ["nop"]], [1, 0, 6, 0, 0, 2, 0, 1, 15, 4, 0.002088554720133668, ["mov     [rbp+overflow], 0; jumptable 0000000000019E32 case 99", "jmp     loc_19F7F"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 19, 1, 0, 8, 0, 1, 14, 3, 0.1444235588972431, ["mov     eax, eax", "lea     rdx, ds:0[rax*4]", "lea     rax, off_20750", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_20750", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,eax", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 6, 0, 1, 8, 0, 2, 15, 4, 0.002088554720133668, ["mov     ecx, [rbp+base]; jumptable 0000000000019E32 case 80", "lea     rax, [rbp+tmp]", "mov     edx, 5; power", "mov     esi, ecx; base", "mov     rdi, rax; x", "call    bkm_scale_by_power_0", "mov     [rbp+overflow], eax", "jmp     short loc_19F7F"], ["mov~ecx,[rbp+0]", "lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 51, 0, 1, 9, 0, 2, 4, 5, 0.07988721804511278, ["mov     [rbp+p], rax", "call    ___errno_location", "mov     dword ptr [rax], 0", "mov     rax, [rbp+s]", "mov     [rbp+q], rax", "mov     rax, [rbp+q]", "movzx   eax, byte ptr [rax]", "mov     [rbp+ch_0], al", "jmp     short loc_19C25"], ["mov~[rbp+0],rax", "call~FOO", "mov~<TAG>,0", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "mov~[rbp+0],al", "jmp~FOO"]], [0, 0, 52, 0, 0, 2, 0, 1, 3, 6, 0.02443609022556391, ["lea     rax, [rbp+t_ptr]", "jmp     short loc_19BF3"], ["lea~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 52, 0, 0, 1, 0, 0, 3, 6, 0.02443609022556391, ["mov     rax, [rbp+ptr]"], ["mov~rax,[rbp+0]"]], [2, 0, 28, 1, 0, 7, 0, 1, 15, 5, 0.05043859649122807, ["mov     rax, [rbp+p]", "mov     rax, [rax]", "add     rax, 1", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "cmp     eax, 44h ; 'D'", "jz      short loc_19DEA"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "add~rax,0", "movzx~eax,<TAG>", "movsx~eax,al", "cmp~eax,0", "jz~FOO"]], [1, 0, 6, 0, 1, 8, 0, 2, 15, 4, 0.002088554720133668, ["mov     ecx, [rbp+base]; jumptable 0000000000019E32 cases 84,116", "lea     rax, [rbp+tmp]", "mov     edx, 4; power", "mov     esi, ecx; base", "mov     rdi, rax; x", "call    bkm_scale_by_power_0", "mov     [rbp+overflow], eax", "jmp     short loc_19F7F"], ["mov~ecx,[rbp+0]", "lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 51, 1, 0, 4, 0, 0, 6, 5, 0.0, ["add     [rbp+q], 1", "mov     rax, [rbp+q]", "movzx   eax, byte ptr [rax]", "mov     [rbp+ch_0], al"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "mov~[rbp+0],al"]], [1, 0, 51, 2, 1, 10, 2, 2, 5, 4, 0.10933583959899748, ["call    ___ctype_b_loc", "mov     rax, [rax]", "movzx   edx, [rbp+ch_0]", "add     rdx, rdx", "add     rax, rdx", "movzx   eax, word ptr [rax]", "movzx   eax, ax", "and     eax, 2000h", "test    eax, eax", "jnz     short loc_19C16"], ["call~FOO", "mov~rax,<TAG>", "movzx~edx,[rbp+0]", "add~rdx,rdx", "add~rax,rdx", "movzx~eax,<TAG>", "movzx~eax,ax", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [0, 0, 5, 1, 0, 14, 2, 1, 16, 3, 0.03352130325814536, ["mov     eax, [rbp+overflow]", "or      [rbp+err], eax", "mov     rax, [rbp+p]", "mov     rdx, [rax]", "mov     eax, [rbp+suffixes]", "cdqe", "add     rdx, rax", "mov     rax, [rbp+p]", "mov     [rax], rdx", "mov     rax, [rbp+p]", "mov     rax, [rax]", "movzx   eax, byte ptr [rax]", "test    al, al", "jz      short loc_19FAD"], ["mov~eax,[rbp+0]", "or~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~eax,[rbp+0]", "cdqe~", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 1, 6, 0, 1, 6, 0, 2, 15, 4, 0.002088554720133668, ["lea     rax, [rbp+tmp]; jumptable 0000000000019E32 case 98", "mov     esi, 200h; scale_factor", "mov     rdi, rax; x", "call    bkm_scale_0", "mov     [rbp+overflow], eax", "jmp     loc_19F7F"], ["lea~rax,[rbp+0]", "mov~esi,<STR>", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 6, 0, 1, 6, 0, 2, 15, 4, 0.002088554720133668, ["lea     rax, [rbp+tmp]; jumptable 0000000000019E32 case 66", "mov     esi, 400h; scale_factor", "mov     rdi, rax; x", "call    bkm_scale_0", "mov     [rbp+overflow], eax", "jmp     loc_19F7F"], ["lea~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 6, 0, 1, 8, 0, 2, 15, 4, 0.002088554720133668, ["mov     ecx, [rbp+base]; jumptable 0000000000019E32 case 69", "lea     rax, [rbp+tmp]", "mov     edx, 6; power", "mov     esi, ecx; base", "mov     rdi, rax; x", "call    bkm_scale_by_power_0", "mov     [rbp+overflow], eax", "jmp     loc_19F7F"], ["mov~ecx,[rbp+0]", "lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 6, 0, 1, 8, 0, 2, 15, 4, 0.002088554720133668, ["mov     ecx, [rbp+base]; jumptable 0000000000019E32 cases 71,103", "lea     rax, [rbp+tmp]", "mov     edx, 3; power", "mov     esi, ecx; base", "mov     rdi, rax; x", "call    bkm_scale_by_power_0", "mov     [rbp+overflow], eax", "jmp     loc_19F7F"], ["mov~ecx,[rbp+0]", "lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 6, 0, 1, 8, 0, 2, 15, 4, 0.002088554720133668, ["mov     ecx, [rbp+base]; jumptable 0000000000019E32 cases 75,107", "lea     rax, [rbp+tmp]", "mov     edx, 1; power", "mov     esi, ecx; base", "mov     rdi, rax; x", "call    bkm_scale_by_power_0", "mov     [rbp+overflow], eax", "jmp     loc_19F7F"], ["mov~ecx,[rbp+0]", "lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 6, 0, 1, 8, 0, 2, 15, 4, 0.002088554720133668, ["mov     ecx, [rbp+base]; jumptable 0000000000019E32 cases 77,109", "lea     rax, [rbp+tmp]", "mov     edx, 2; power", "mov     esi, ecx; base", "mov     rdi, rax; x", "call    bkm_scale_by_power_0", "mov     [rbp+overflow], eax", "jmp     loc_19F7F"], ["mov~ecx,[rbp+0]", "lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 6, 0, 1, 6, 0, 2, 15, 4, 0.002088554720133668, ["lea     rax, [rbp+tmp]; jumptable 0000000000019E32 case 119", "mov     esi, 2; scale_factor", "mov     rdi, rax; x", "call    bkm_scale_0", "mov     [rbp+overflow], eax", "jmp     short loc_19F7F"], ["lea~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 6, 0, 1, 8, 0, 2, 15, 4, 0.002088554720133668, ["mov     ecx, [rbp+base]; jumptable 0000000000019E32 case 89", "lea     rax, [rbp+tmp]", "mov     edx, 8; power", "mov     esi, ecx; base", "mov     rdi, rax; x", "call    bkm_scale_by_power_0", "mov     [rbp+overflow], eax", "jmp     short loc_19F7F"], ["mov~ecx,[rbp+0]", "lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 6, 0, 1, 8, 0, 2, 15, 4, 0.002088554720133668, ["mov     ecx, [rbp+base]; jumptable 0000000000019E32 case 90", "lea     rax, [rbp+tmp]", "mov     edx, 7; power", "mov     esi, ecx; base", "mov     rdi, rax; x", "call    bkm_scale_by_power_0", "mov     [rbp+overflow], eax", "jmp     short loc_19F7F"], ["mov~ecx,[rbp+0]", "lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "jmp~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 8, 1, 0.03383458646616541, ["mov     rsi, [rbp+var_8]", "xor     rsi, fs:28h", "jz      short locret_19FCF"], ["mov~rsi,[rbp+0]", "xor~rsi,<TAG>", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 7, 2, 0.008458646616541353, ["mov     eax, 4", "jmp     loc_19FBB"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 10, 2, 0.0014097744360902255, ["mov     eax, 4", "jmp     loc_19FBB"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 6, 1, 1, 12, 2, 0.0009398496240601503, ["mov     rdx, [rbp+tmp]", "mov     rax, [rbp+val]", "mov     [rax], rdx", "mov     eax, [rbp+err]", "or      eax, 2", "jmp     loc_19FBB"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~eax,[rbp+0]", "or~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 6, 1, 1, 14, 2, 0.012218045112781954, ["mov     rdx, [rbp+tmp]; jumptable 0000000000019E32 default case", "mov     rax, [rbp+val]", "mov     [rax], rdx", "mov     eax, [rbp+err]", "or      eax, 2", "jmp     short loc_19FBB"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~eax,[rbp+0]", "or~eax,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 4, 0, 0, 11, 2, 0.014097744360902255, ["mov     rdx, [rbp+tmp]", "mov     rax, [rbp+val]", "mov     [rax], rdx", "mov     eax, [rbp+err]"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~eax,[rbp+0]"]], [0, 0, 34, 0, 0, 5, 1, 1, 10, 3, 0.17481203007518797, ["mov     rax, [rbp+p]", "mov     rax, [rax]", "movzx   eax, byte ptr [rax]", "test    al, al", "jz      loc_19FAD"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 4, 0, 0, 1, 1, 0, 17, 3, 0.0, ["or      [rbp+err], 2"], ["or~[rbp+0],0"]], [1, 0, 37, 0, 0, 2, 0, 1, 11, 4, 0.03195488721804511, ["mov     [rbp+tmp], 1", "jmp     short loc_19CEE"], ["mov~[rbp+0],0", "jmp~FOO"]], [3, 0, 57, 1, 0, 14, 1, 1, 0, 9, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 70h", "mov     [rbp+s], rdi", "mov     [rbp+ptr], rsi", "mov     [rbp+strtol_base], edx", "mov     [rbp+val], rcx", "mov     [rbp+valid_suffixes], r8", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     [rbp+err], 0", "cmp     [rbp+strtol_base], 0", "js      short loc_19BC3"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],edx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0", "cmp~[rbp+0],0", "js~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 56, 0, 0, 2, 0, 1, 1, 8, 0.017230576441102756, ["cmp     [rbp+strtol_base], 24h ; '$'", "jle     short loc_19BE2"], ["cmp~[rbp+0],0", "jle~FOO"]], [2, 0, 33, 0, 1, 12, 1, 2, 11, 3, 0.17261904761904762, ["mov     [rbp+base], 400h", "mov     [rbp+suffixes], 1", "mov     rax, [rbp+p]", "mov     rax, [rax]", "movzx   eax, byte ptr [rax]", "movsx   edx, al", "mov     rax, [rbp+valid_suffixes]", "mov     esi, edx; c", "mov     rdi, rax; s", "call    _strchr", "test    rax, rax", "jnz     short loc_19D5E"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "movzx~eax,<TAG>", "movsx~edx,al", "mov~rax,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "test~rax,rax", "jnz~FOO"]], [1, 0, 27, 0, 0, 2, 0, 1, 16, 6, 0.03759398496240601, ["cmp     eax, 69h ; 'i'", "jz      short loc_19DD2"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 48, 0, 0, 2, 0, 1, 6, 3, 0.12030075187969924, ["cmp     [rbp+ch_0], 2Dh ; '-'", "jnz     short loc_19C56"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 23, 1, 0, 6, 0, 1, 17, 5, 0.017857142857142856, ["mov     rax, [rbp+p]", "mov     rax, [rax]", "add     rax, 2", "movzx   eax, byte ptr [rax]", "cmp     al, 42h ; 'B'", "jnz     short loc_19DF7"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "add~rax,0", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 17, 5, 0.012531328320802004, ["cmp     eax, 42h ; 'B'", "jz      short loc_19DEA"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 40, 0, 1, 4, 1, 2, 8, 4, 0.11591478696741854, ["call    ___errno_location", "mov     eax, [rax]", "test    eax, eax", "jz      short loc_19CEE"], ["call~FOO", "mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [1, 0, 39, 0, 1, 4, 0, 2, 9, 3, 0.0073621553884711775, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 22h ; '\"'", "jz      short loc_19CE7"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 1, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___3655_0; \"xstrtoumax\"", "mov     edx, 54h ; 'T'; line", "lea     rsi, aLibXstrtolC_0; \"lib/xstrtol.c\"", "lea     rdi, a0StrtolBaseStr_0; \"0 <= strtol_base && strtol_base <= 36\"", "call    ___assert_fail"], ["lea~rcx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 9, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 54, 0, 0, 2, 0, 1, 2, 7, 0.03383458646616541, ["cmp     [rbp+ptr], 0", "jnz     short loc_19BEF"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 22, 1, 0, 2, 0, 1, 18, 5, 0.0, ["add     [rbp+suffixes], 2", "jmp     short loc_19DF7"], ["add~[rbp+0],0", "jmp~FOO"]], [1, 0, 37, 0, 0, 1, 0, 0, 10, 4, 0.010651629072681704, ["mov     [rbp+err], 1"], ["mov~[rbp+0],0"]]], "func_feature": [21, 15, 70, 1, 58, 91, 3, 301, 0.03731, 6, 13], "succs": [[4, 5], [0, 51], [34], [40, 2], [34], [4, 6], [42, 4], [38, 15], [9, 7], [10, 7], [20, 7], [7], [7], [7], [24], [32, 33, 38, 14, 16, 21, 25, 26, 27, 28, 29, 30, 31], [24], [23], [17], [17], [12, 47], [24], [23], [48, 22], [41, 39], [24], [24], [24], [24], [24], [24], [24], [24], [24], [44, 54], [34], [34], [34], [34], [34], [46, 39], [39], [3], [45, 53], [], [53, 55], [8, 37], [49, 50], [1, 35], [56, 13], [11, 12], [3, 52], [57, 36], [], [], [18, 19], [13], [3]], "fname": "xstrtoumax", "n_num": 58}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 5, 0, 1, 5, 2, 2, 0, 0, 0.05555555555555555, ["mov     edi, 0; category", "call    hard_locale", "xor     eax, 1", "test    al, al", "jz      short loc_1A05D"], ["mov~edi,0", "call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 2, 3, 0.08333333333333333, ["cmp     [rbp+n], 0", "jz      short loc_1A05D"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 8, 0, 0, 2, 0, 0, 1, 4, 0.0, ["lea     rax, [rbp+wc]", "mov     [rbp+pwc], rax"], ["lea~rax,[rbp+0]", "mov~[rbp+0],rax"]], [2, 0, 9, 1, 0, 12, 1, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+pwc], rdi", "mov     [rbp+s], rsi", "mov     [rbp+n], rdx", "mov     [rbp+ps], rcx", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "cmp     [rbp+pwc], 0", "jnz     short loc_1A007"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 7, 0, 1, 9, 0, 1, 1, 3, 0.19444444444444442, ["mov     rcx, [rbp+ps]; p", "mov     rdx, [rbp+n]; n", "mov     rsi, [rbp+s]; s", "mov     rax, [rbp+pwc]", "mov     rdi, rax; pwc", "call    _mbrtowc", "mov     [rbp+ret], rax", "cmp     [rbp+ret], 0FFFFFFFFFFFFFFFDh", "jbe     short loc_1A05D"], ["mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jbe~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 2, 2, 0.1875, ["mov     rax, [rbp+ret]"], ["mov~rax,[rbp+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 3, 1, 0.19444444444444442, ["mov     rdi, [rbp+var_8]", "xor     rdi, fs:28h", "jz      short locret_1A075"], ["mov~rdi,[rbp+0]", "xor~rdi,<TAG>", "jz~FOO"]], [1, 0, 3, 0, 0, 8, 0, 1, 4, 2, 0.020833333333333332, ["mov     rax, [rbp+s]", "movzx   eax, byte ptr [rax]", "mov     [rbp+uc], al", "movzx   edx, [rbp+uc]", "mov     rax, [rbp+pwc]", "mov     [rax], edx", "mov     eax, 1", "jmp     short loc_1A061"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "mov~[rbp+0],al", "movzx~edx,[rbp+0]", "mov~rax,[rbp+0]", "mov~<TAG>,edx", "mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [3, 4, 8, 1, 10, 13, 3, 45, 0.07361, 1, 1], "succs": [[8, 5], [0, 5], [4], [2, 4], [1, 5], [7], [], [9, 6], [7], []], "fname": "rpl_mbrtowc", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 1, 9, 0, 2, 0, 0, 0.08333333333333333, ["mov     rax, [rbp+h]", "mov     rax, [rax+38h]", "mov     rdx, [rbp+h]", "mov     rdx, [rdx+48h]", "mov     rcx, [rbp+size]", "mov     rsi, rcx", "mov     rdi, rdx", "call    rax", "jmp     short locret_1A0C5"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rdx,[rdx+0]", "mov~rcx,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rdx", "call~rax", "jmp~FOO"]], [2, 0, 3, 1, 0, 10, 2, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+h], rdi", "mov     [rbp+size], rsi", "mov     rax, [rbp+h]", "movzx   eax, byte ptr [rax+50h]", "and     eax, 1", "test    al, al", "jz      short loc_1A0B4"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "and~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 1, 0, 1, 5, 0, 1, 1, 1, 0.08333333333333333, ["mov     rax, [rbp+h]", "mov     rax, [rax+38h]", "mov     rdx, [rbp+size]", "mov     rdi, rdx", "call    rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rdi,rdx", "call~rax"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 4, 2, 26, 0.04167, 0, 1], "succs": [[3], [0, 2], [3], []], "fname": "call_chunkfun", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 1, 9, 0, 2, 0, 0, 0.08333333333333333, ["mov     rax, [rbp+h]", "mov     rax, [rax+40h]", "mov     rdx, [rbp+h]", "mov     rdx, [rdx+48h]", "mov     rcx, [rbp+old_chunk]", "mov     rsi, rcx", "mov     rdi, rdx", "call    rax", "jmp     short loc_1A115"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rdx,[rdx+0]", "mov~rcx,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rdx", "call~rax", "jmp~FOO"]], [2, 0, 3, 1, 0, 10, 2, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+h], rdi", "mov     [rbp+old_chunk], rsi", "mov     rax, [rbp+h]", "movzx   eax, byte ptr [rax+50h]", "and     eax, 1", "test    al, al", "jz      short loc_1A104"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "and~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 1, 0, 1, 5, 0, 1, 1, 1, 0.08333333333333333, ["mov     rax, [rbp+h]", "mov     rax, [rax+40h]", "mov     rdx, [rbp+old_chunk]", "mov     rdi, rdx", "call    rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,[rbp+0]", "mov~rdi,rdx", "call~rax"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["nop", "leave", "retn"], ["nop", "leave", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 4, 2, 27, 0.04167, 0, 1], "succs": [[3], [0, 2], [3], []], "fname": "call_freefun", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 4, 0, 0, 2, 0, 1, 0, 0, 0.26666666666666666, ["cmp     [rbp+size], 0", "jnz     short loc_1A157"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 6, 1, 0, 8, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+h], rdi", "mov     [rbp+size], rsi", "mov     [rbp+alignment], rdx", "cmp     [rbp+alignment], 0", "jnz     short loc_1A13B"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 5, 0, 0, 1, 0, 0, 1, 3, 0.0, ["mov     [rbp+alignment], 10h"], ["mov~[rbp+0],0"]], [1, 0, 2, 0, 1, 21, 0, 2, 2, 1, 0.26666666666666666, ["mov     rax, [rbp+h]", "mov     rdx, [rbp+size]", "mov     [rax], rdx", "mov     rax, [rbp+alignment]", "lea     rdx, [rax-1]", "mov     rax, [rbp+h]", "mov     [rax+30h], rdx", "mov     rax, [rbp+h]", "mov     rdx, [rax]", "mov     rax, [rbp+h]", "mov     rsi, rdx; size", "mov     rdi, rax; h", "call    call_chunkfun", "mov     rdx, rax", "mov     rax, [rbp+h]", "mov     [rax+8], rdx", "mov     rax, [rbp+h]", "mov     rax, [rax+8]", "mov     [rbp+chunk], rax", "cmp     [rbp+chunk], 0", "jnz     short loc_1A1AF"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "lea~rdx,[rax-1]+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 2, 3, 1, 0, 5, 0, 0, 2, 2, 0.0, ["mov     [rbp+extra], 20h ; ' '", "mov     eax, 1000h", "sub     eax, [rbp+extra]", "cdqe", "mov     [rbp+size], rax"], ["mov~[rbp+0],<STR>", "mov~eax,<STR>", "sub~eax,[rbp+0]", "cdqe~", "mov~[rbp+0],rax"]], [0, 0, 0, 0, 1, 2, 0, 1, 3, -1, 0.0, ["mov     rax, cs:obstack_alloc_failed_handler", "call    rax ; print_and_abort"], ["mov~rax,<TAG>", "call~rax"]], [5, 0, 0, 3, 0, 39, 3, 0, 3, 0, 0.0, ["mov     rax, [rbp+chunk]", "add     rax, 10h", "mov     rdx, rax", "mov     rax, [rbp+alignment]", "add     rax, rdx", "lea     rdx, [rax-1]", "mov     rax, [rbp+alignment]", "neg     rax", "and     rax, rdx", "mov     rdx, rax", "mov     rax, [rbp+h]", "mov     [rax+10h], rdx", "mov     rax, [rbp+h]", "mov     rdx, [rax+10h]", "mov     rax, [rbp+h]", "mov     [rax+18h], rdx", "mov     rax, [rbp+h]", "mov     rdx, [rax]", "mov     rax, [rbp+chunk]", "add     rdx, rax", "mov     rax, [rbp+chunk]", "mov     [rax], rdx", "mov     rax, [rbp+chunk]", "mov     rdx, [rax]", "mov     rax, [rbp+h]", "mov     [rax+20h], rdx", "mov     rax, [rbp+chunk]", "mov     qword ptr [rax+8], 0", "mov     rax, [rbp+h]", "movzx   edx, byte ptr [rax+50h]", "and     edx, 0FFFFFFFDh", "mov     [rax+50h], dl", "mov     rax, [rbp+h]", "movzx   edx, byte ptr [rax+50h]", "and     edx, 0FFFFFFFBh", "mov     [rax+50h], dl", "mov     eax, 1", "leave", "retn"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "lea~rdx,[rax-1]+0]", "mov~rax,[rbp+0]", "neg~rax", "and~rax,rdx", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~[word ptr [rax+0],0", "mov~rax,[rbp+0]", "movzx~edx,[yte ptr [rax+0]", "and~edx,0", "mov~[rax+0],dl", "mov~rax,[rbp+0]", "movzx~edx,[yte ptr [rax+0]", "and~edx,0", "mov~[rax+0],dl", "mov~eax,0", "leave", "retn"]]], "func_feature": [2, 3, 5, 0, 7, 8, 2, 78, 0.07619, 1, 5], "succs": [[3, 4], [0, 2], [0], [5, 6], [3], [], []], "fname": "_obstack_begin_worker", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 0, 1, 1, 26, 1, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+h], rdi", "mov     [rbp+size], rsi", "mov     [rbp+alignment], rdx", "mov     [rbp+chunkfun], rcx", "mov     [rbp+freefun], r8", "mov     rax, [rbp+h]", "mov     rdx, [rbp+chunkfun]", "mov     [rax+38h], rdx", "mov     rax, [rbp+h]", "mov     rdx, [rbp+freefun]", "mov     [rax+40h], rdx", "mov     rax, [rbp+h]", "movzx   edx, byte ptr [rax+50h]", "and     edx, 0FFFFFFFEh", "mov     [rax+50h], dl", "mov     rdx, [rbp+alignment]; alignment", "mov     rcx, [rbp+size]", "mov     rax, [rbp+h]", "mov     rsi, rcx; size", "mov     rdi, rax; h", "call    _obstack_begin_worker", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "movzx~edx,[yte ptr [rax+0]", "and~edx,0", "mov~[rax+0],dl", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 1, 1, 0, 1, 0, 3, 26, 0.0, 0, 1], "succs": [[]], "fname": "_obstack_begin", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 0, 1, 1, 30, 1, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+h], rdi", "mov     [rbp+size], rsi", "mov     [rbp+alignment], rdx", "mov     [rbp+chunkfun], rcx", "mov     [rbp+freefun], r8", "mov     [rbp+arg], r9", "mov     rax, [rbp+h]", "mov     rdx, [rbp+chunkfun]", "mov     [rax+38h], rdx", "mov     rax, [rbp+h]", "mov     rdx, [rbp+freefun]", "mov     [rax+40h], rdx", "mov     rax, [rbp+h]", "mov     rdx, [rbp+arg]", "mov     [rax+48h], rdx", "mov     rax, [rbp+h]", "movzx   edx, byte ptr [rax+50h]", "or      edx, 1", "mov     [rax+50h], dl", "mov     rdx, [rbp+alignment]; alignment", "mov     rcx, [rbp+size]", "mov     rax, [rbp+h]", "mov     rsi, rcx; size", "mov     rdi, rax; h", "call    _obstack_begin_worker", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~[rbp+0],r9", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "movzx~edx,[yte ptr [rax+0]", "or~edx,0", "mov~[rax+0],dl", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 1, 1, 0, 1, 0, 0, 30, 0.0, 0, 1], "succs": [[]], "fname": "_obstack_begin_1", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 2, 2, 0, 14, 1, 1, 0, 0, 0.06818181818181818, ["mov     rax, [rbp+h]", "mov     rdx, [rax+10h]", "mov     rax, [rbp+old_chunk]", "add     rax, 10h", "mov     rcx, rax", "mov     rax, [rbp+h]", "mov     rax, [rax+30h]", "add     rcx, rax", "mov     rax, [rbp+h]", "mov     rax, [rax+30h]", "not     rax", "and     rax, rcx", "cmp     rdx, rax", "jnz     short loc_1A4C5"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "add~rax,0", "mov~rcx,rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "add~rcx,rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "not~rax", "and~rax,rcx", "cmp~rdx,rax", "jnz~FOO"]], [2, 0, 3, 3, 1, 38, 3, 2, 4, 1, 0.18181818181818182, ["mov     rax, [rbp+h]", "mov     rdx, [rbp+new_chunk]", "mov     [rax+8], rdx", "mov     rax, [rbp+new_chunk]", "mov     rdx, [rbp+old_chunk]", "mov     [rax+8], rdx", "mov     rdx, [rbp+new_chunk]", "mov     rax, [rbp+new_size]", "add     rdx, rax", "mov     rax, [rbp+h]", "mov     [rax+20h], rdx", "mov     rax, [rbp+h]", "mov     rdx, [rax+20h]", "mov     rax, [rbp+new_chunk]", "mov     [rax], rdx", "mov     rax, [rbp+new_chunk]", "add     rax, 10h", "mov     rdx, rax", "mov     rax, [rbp+h]", "mov     rax, [rax+30h]", "add     rdx, rax", "mov     rax, [rbp+h]", "mov     rax, [rax+30h]", "not     rax", "and     rax, rdx", "mov     [rbp+object_base], rax", "mov     rax, [rbp+h]", "mov     rcx, [rax+10h]", "mov     rdx, [rbp+obj_size]; n", "mov     rax, [rbp+object_base]", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    _memcpy", "mov     rax, [rbp+h]", "movzx   eax, byte ptr [rax+50h]", "and     eax, 2", "test    al, al", "jnz     short loc_1A4C5"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "add~rax,0", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "not~rax", "and~rax,rdx", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rcx,[rax+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "and~eax,0", "test~al,al", "jnz~FOO"]], [0, 0, 1, 0, 1, 9, 0, 1, 6, 1, 0.0, ["mov     rax, [rbp+old_chunk]", "mov     rdx, [rax+8]", "mov     rax, [rbp+new_chunk]", "mov     [rax+8], rdx", "mov     rdx, [rbp+old_chunk]", "mov     rax, [rbp+h]", "mov     rsi, rdx; old_chunk", "mov     rdi, rax; h", "call    call_freefun"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 4, -1, 0.0, ["mov     rax, cs:obstack_alloc_failed_handler", "call    rax ; print_and_abort"], ["mov~rax,<TAG>", "call~rax"]], [1, 0, 5, 0, 0, 2, 0, 1, 3, 2, 0.26515151515151514, ["cmp     [rbp+new_chunk], 0", "jnz     short loc_1A3E5"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 9, 0, 0, 3, 0, 0, 2, 4, 0.0, ["mov     rax, [rbp+h]", "mov     rax, [rax]", "mov     [rbp+new_size], rax"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax"]], [0, 0, 10, 0, 0, 4, 0, 0, 1, 4, 0.15151515151515152, ["mov     rax, [rbp+h]", "mov     rax, [rax]", "cmp     [rbp+new_size], rax", "jnb     short loc_1A3AA"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "cmp~[rbp+0],rax", "jnb~FOO"]], [3, 1, 12, 6, 0, 36, 0, 0, 0, 5, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+h], rdi", "mov     [rbp+length], rsi", "mov     rax, [rbp+h]", "mov     rax, [rax+8]", "mov     [rbp+old_chunk], rax", "mov     [rbp+new_chunk], 0", "mov     rax, [rbp+h]", "mov     rax, [rax+18h]", "mov     rdx, rax", "mov     rax, [rbp+h]", "mov     rax, [rax+10h]", "sub     rdx, rax", "mov     rax, rdx", "mov     [rbp+obj_size], rax", "mov     rdx, [rbp+obj_size]", "mov     rax, [rbp+length]", "add     rax, rdx", "mov     [rbp+sum1], rax", "mov     rax, [rbp+h]", "mov     rdx, [rax+30h]", "mov     rax, [rbp+sum1]", "add     rax, rdx", "mov     [rbp+sum2], rax", "mov     rax, [rbp+obj_size]", "shr     rax, 3", "mov     rdx, rax", "mov     rax, [rbp+sum2]", "add     rax, rdx", "add     rax, 64h", "mov     [rbp+new_size], rax", "mov     rax, [rbp+new_size]", "cmp     rax, [rbp+sum2]", "jnb     short loc_1A392"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "sub~rdx,rax", "mov~rax,rdx", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "shr~rax,0", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "add~rax,0", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 11, 0, 0, 2, 0, 0, 1, 5, 0.0, ["mov     rax, [rbp+sum2]", "mov     [rbp+new_size], rax"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [0, 0, 6, 0, 1, 6, 0, 1, 4, 3, 0.0, ["mov     rdx, [rbp+new_size]", "mov     rax, [rbp+h]", "mov     rsi, rdx; size", "mov     rdi, rax; h", "call    call_chunkfun", "mov     [rbp+new_chunk], rax"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax"]], [0, 0, 7, 0, 0, 3, 0, 1, 3, 3, 0.03787878787878788, ["mov     rax, [rbp+sum1]", "cmp     rax, [rbp+sum2]", "ja      short loc_1A3D5"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "ja~FOO"]], [0, 0, 8, 0, 0, 3, 0, 1, 2, 3, 0.24242424242424243, ["mov     rax, [rbp+obj_size]", "cmp     rax, [rbp+sum1]", "ja      short loc_1A3D5"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "ja~FOO"]], [1, 0, 0, 1, 0, 16, 1, 0, 5, 0, 0.0, ["mov     rax, [rbp+h]", "mov     rdx, [rbp+object_base]", "mov     [rax+10h], rdx", "mov     rax, [rbp+h]", "mov     rdx, [rax+10h]", "mov     rax, [rbp+obj_size]", "add     rdx, rax", "mov     rax, [rbp+h]", "mov     [rax+18h], rdx", "mov     rax, [rbp+h]", "movzx   edx, byte ptr [rax+50h]", "and     edx, 0FFFFFFFDh", "mov     [rax+50h], dl", "nop", "leave", "retn"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "movzx~edx,[yte ptr [rax+0]", "and~edx,0", "mov~[rax+0],dl", "nop", "leave", "retn"]]], "func_feature": [4, 5, 9, 0, 13, 18, 3, 138, 0.07284, 1, 12], "succs": [[2, 12], [0, 12], [12], [], [1, 3], [11], [11, 5], [8, 6], [6], [4], [9, 4], [10, 4], []], "fname": "_obstack_newchunk", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 5, 0, 0, 4, 0, 1, 0, 0, 0.05, ["mov     rax, [rbp+lp]", "mov     rax, [rax]", "cmp     [rbp+obj], rax", "ja      short loc_1A513"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "cmp~[rbp+0],rax", "ja~FOO"]], [0, 0, 5, 0, 0, 3, 0, 0, 2, 2, 0.25, ["mov     rax, [rbp+lp]", "cmp     rax, [rbp+obj]", "jnb     short loc_1A513"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 0, 0, 0, 5, 0, 0, 2, 0, 0.0, ["cmp     [rbp+lp], 0", "setnz   al", "movzx   eax, al", "pop     rbp", "retn"], ["cmp~[rbp+0],0", "setnz~al", "movzx~eax,al", "pop~rbp", "retn"]], [1, 0, 5, 0, 0, 2, 0, 1, 1, 1, 0.4, ["cmp     [rbp+lp], 0", "jz      short loc_1A545"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 5, 0, 0, 8, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+h], rdi", "mov     [rbp+obj], rsi", "mov     rax, [rbp+h]", "mov     rax, [rax+8]", "mov     [rbp+lp], rax", "jmp     short loc_1A527"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 5, 0, 0, 5, 0, 0, 3, 2, 0.15000000000000002, ["mov     rax, [rbp+lp]", "mov     rax, [rax+8]", "mov     [rbp+plp], rax", "mov     rax, [rbp+plp]", "mov     [rbp+lp], rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax"]]], "func_feature": [0, 0, 3, 0, 6, 8, 0, 27, 0.14167, 0, 0], "succs": [[2, 5], [0, 5], [], [1, 2], [3], [3]], "fname": "_obstack_allocated_p", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 9, 0, 0, 4, 0, 1, 0, 0, 0.06944444444444445, ["mov     rax, [rbp+lp]", "mov     rax, [rax]", "cmp     [rbp+obj], rax", "ja      short loc_1A570"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "cmp~[rbp+0],rax", "ja~FOO"]], [0, 0, 9, 0, 0, 3, 0, 0, 2, 4, 0.06944444444444445, ["mov     rax, [rbp+lp]", "cmp     rax, [rbp+obj]", "jnb     short loc_1A570"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 9, 0, 1, 14, 1, 1, 3, 4, 0.041666666666666664, ["mov     rax, [rbp+lp]", "mov     rax, [rax+8]", "mov     [rbp+plp], rax", "mov     rdx, [rbp+lp]", "mov     rax, [rbp+h]", "mov     rsi, rdx; old_chunk", "mov     rdi, rax; h", "call    call_freefun", "mov     rax, [rbp+plp]", "mov     [rbp+lp], rax", "mov     rax, [rbp+h]", "movzx   edx, byte ptr [rax+50h]", "or      edx, 2", "mov     [rax+50h], dl"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "movzx~edx,[yte ptr [rax+0]", "or~edx,0", "mov~[rax+0],dl"]], [0, 0, 1, 0, 0, 15, 0, 1, 3, 1, 0.041666666666666664, ["mov     rax, [rbp+h]", "mov     rdx, [rbp+obj]", "mov     [rax+18h], rdx", "mov     rax, [rbp+h]", "mov     rdx, [rax+18h]", "mov     rax, [rbp+h]", "mov     [rax+10h], rdx", "mov     rax, [rbp+lp]", "mov     rdx, [rax]", "mov     rax, [rbp+h]", "mov     [rax+20h], rdx", "mov     rax, [rbp+h]", "mov     rdx, [rbp+lp]", "mov     [rax+8], rdx", "jmp     short loc_1A60F"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "jmp~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 2, 2, 0.2777777777777778, ["cmp     [rbp+lp], 0", "jz      short loc_1A603"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 1, 3, 0.2222222222222222, ["cmp     [rbp+lp], 0", "jz      short loc_1A5C3"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 1, 9, 1, 0, 9, 0, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+h], rdi", "mov     [rbp+obj], rsi", "mov     rax, [rbp+h]", "mov     rax, [rax+8]", "mov     [rbp+lp], rax", "jmp     short loc_1A5A5"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 3, 1, 0.125, ["cmp     [rbp+obj], 0", "jz      short loc_1A60F"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 4, 0, 0.0, ["nop", "leave", "retn"], ["nop", "leave", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [2, 1, 8, 0, 10, 13, 0, 55, 0.08472, 0, 1], "succs": [[2, 4], [0, 2], [5], [8], [3, 7], [1, 4], [5], [8, 9], [], []], "fname": "_obstack_free", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 3, 2, 0, 10, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+lp]", "mov     rax, [rax]", "mov     rdx, rax", "mov     rax, [rbp+lp]", "sub     rdx, rax", "mov     rax, rdx", "add     [rbp+nbytes], rax", "mov     rax, [rbp+lp]", "mov     rax, [rax+8]", "mov     [rbp+lp], rax"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdx,rax", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "add~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 1, 0.5, ["cmp     [rbp+lp], 0", "jnz     short loc_1A630"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 8, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+h], rdi", "mov     [rbp+nbytes], 0", "mov     rax, [rbp+h]", "mov     rax, [rax+8]", "mov     [rbp+lp], rax", "jmp     short loc_1A654"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["mov     rax, [rbp+nbytes]", "pop     rbp", "retn"], ["mov~rax,[rbp+0]", "pop~rbp", "retn"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 23, 0.125, 0, 2], "succs": [[1], [0, 3], [1], []], "fname": "_obstack_memory_used", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 0, 3, 13, 0, 3, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "lea     rdi, aMemoryExhauste_0; \"memory exhausted\"", "call    _gettext", "mov     rdx, rax", "mov     rax, cs:stderr@@GLIBC_2_2_5", "lea     rsi, aS_2; \"%s\\n\"", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "mov     eax, cs:exit_failure", "mov     edi, eax; status", "call    _exit"], ["push~rbp", "mov~rbp,rsp", "lea~rdi,<TAG>", "call~FOO", "mov~rdx,rax", "mov~rax,<TAG>", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "mov~eax,<TAG>", "mov~edi,eax", "call~FOO"]]], "func_feature": [3, 0, 3, 0, 1, 0, 2, 13, 0.0, 4, 0], "succs": [[]], "fname": "print_and_abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.1, ["cmp     [rbp+b], 0", "js      short loc_1A6CD"], ["cmp~[rbp+0],0", "js~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 1, 2, 0.1, ["cmp     [rbp+a], 0", "js      short loc_1A6CD"], ["cmp~[rbp+0],0", "js~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.025, ["mov     eax, 1", "jmp     short loc_1A6D2"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0.125, ["mov     eax, 0"], ["mov~eax,0"]], [2, 0, 5, 0, 0, 11, 2, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+a], edi", "mov     [rbp+b], esi", "cmp     [rbp+a], 0", "setz    dl", "cmp     [rbp+b], 0", "setz    al", "xor     eax, edx", "test    al, al", "jz      short loc_1A6CD"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~[rbp+0],esi", "cmp~[rbp+0],0", "setz~dl", "cmp~[rbp+0],0", "setz~al", "xor~eax,edx", "test~al,al", "jz~FOO"]], [1, 0, 0, 0, 0, 3, 1, 0, 2, 0, 0.0, ["and     eax, 1", "pop     rbp", "retn"], ["and~eax,0", "pop~rbp", "retn"]]], "func_feature": [0, 3, 4, 0, 6, 8, 1, 21, 0.05833, 0, 0], "succs": [[2, 3], [0, 3], [5], [5], [1, 3], []], "fname": "isdst_differ", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 0, 2, 1, 59, 13, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 10h", "mov     [rbp+a], rdi", "mov     [rbp+b], rsi", "mov     rax, [rbp+a]", "mov     edx, [rax]", "mov     rax, [rbp+b]", "mov     eax, [rax]", "mov     ecx, edx", "xor     ecx, eax", "mov     rax, [rbp+a]", "mov     edx, [rax+4]", "mov     rax, [rbp+b]", "mov     eax, [rax+4]", "xor     eax, edx", "or      ecx, eax", "mov     rax, [rbp+a]", "mov     edx, [rax+8]", "mov     rax, [rbp+b]", "mov     eax, [rax+8]", "xor     eax, edx", "or      ecx, eax", "mov     rax, [rbp+a]", "mov     edx, [rax+0Ch]", "mov     rax, [rbp+b]", "mov     eax, [rax+0Ch]", "xor     eax, edx", "or      ecx, eax", "mov     rax, [rbp+a]", "mov     edx, [rax+10h]", "mov     rax, [rbp+b]", "mov     eax, [rax+10h]", "xor     eax, edx", "or      ecx, eax", "mov     rax, [rbp+a]", "mov     edx, [rax+14h]", "mov     rax, [rbp+b]", "mov     eax, [rax+14h]", "xor     eax, edx", "mov     ebx, ecx", "or      ebx, eax", "mov     rax, [rbp+b]", "mov     edx, [rax+20h]", "mov     rax, [rbp+a]", "mov     eax, [rax+20h]", "mov     esi, edx; b", "mov     edi, eax; a", "call    isdst_differ", "movzx   eax, al", "or      eax, ebx", "test    eax, eax", "setz    al", "movzx   eax, al", "add     rsp, 10h", "pop     rbx", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~edx,<TAG>", "mov~rax,[rbp+0]", "mov~eax,<TAG>", "mov~ecx,edx", "xor~ecx,eax", "mov~rax,[rbp+0]", "mov~edx,[rax+0]", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "xor~eax,edx", "or~ecx,eax", "mov~rax,[rbp+0]", "mov~edx,[rax+0]", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "xor~eax,edx", "or~ecx,eax", "mov~rax,[rbp+0]", "mov~edx,[rax+0]", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "xor~eax,edx", "or~ecx,eax", "mov~rax,[rbp+0]", "mov~edx,[rax+0]", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "xor~eax,edx", "or~ecx,eax", "mov~rax,[rbp+0]", "mov~edx,[rax+0]", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "xor~eax,edx", "mov~ebx,ecx", "or~ebx,eax", "mov~rax,[rbp+0]", "mov~edx,[rax+0]", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~esi,edx", "mov~edi,eax", "call~FOO", "movzx~eax,al", "or~eax,ebx", "test~eax,eax", "setz~al", "movzx~eax,al", "add~rsp,0", "pop~rbx", "pop~rbp", "retn"]]], "func_feature": [1, 13, 1, 0, 1, 0, 1, 59, 0.0, 0, 2], "succs": [[]], "fname": "equal_tm", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 1, 0, 2, 1, 19, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+abbrs], rdi", "mov     [rbp+abbr], rsi", "mov     [rbp+abbr_size], rdx", "mov     rdx, [rbp+abbr_size]; n", "mov     rcx, [rbp+abbr]", "mov     rax, [rbp+abbrs]", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    _memcpy", "mov     rdx, [rbp+abbrs]", "mov     rax, [rbp+abbr_size]", "add     rax, rdx", "mov     byte ptr [rax], 0", "nop", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0", "nop", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 19, 0.0, 0, 2], "succs": [[]], "fname": "extend_abbrs", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 4, 0, 0, 1, 0, 0, 0, 0, 0.06666666666666667, ["mov     eax, 0"], ["mov~eax,0"]], [2, 0, 6, 1, 0, 6, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+name], rdi", "cmp     [rbp+name], 0", "jz      short loc_1A7E0"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 1, 0, 1, 7, 0, 1, 4, 1, 0.0, ["mov     rax, [rbp+tz]", "lea     rcx, [rax+9]", "mov     rdx, [rbp+name_size]; abbr_size", "mov     rax, [rbp+name]", "mov     rsi, rax; abbr", "mov     rdi, rcx; abbrs", "call    extend_abbrs"], ["mov~rax,[rbp+0]", "lea~rcx,[rax+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,rcx", "call~FOO"]], [4, 0, 2, 0, 0, 11, 0, 1, 3, 1, 0.13333333333333333, ["mov     rax, [rbp+tz]", "mov     qword ptr [rax], 0", "cmp     [rbp+name], 0", "setnz   al", "mov     edx, eax", "mov     rax, [rbp+tz]", "mov     [rax+8], dl", "mov     rax, [rbp+tz]", "mov     byte ptr [rax+9], 0", "cmp     [rbp+name], 0", "jz      short loc_1A865"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "cmp~[rbp+0],0", "setnz~al", "mov~edx,eax", "mov~rax,[rbp+0]", "mov~[rax+0],dl", "mov~rax,[rbp+0]", "mov~[yte ptr [rax+0],0", "cmp~[rbp+0],0", "jz~FOO"]], [6, 0, 3, 2, 1, 14, 1, 2, 2, 1, 0.3, ["mov     [rbp+name_size], rax", "mov     eax, 76h ; 'v'", "cmp     [rbp+name_size], 76h", "cmovnb  rax, [rbp+name_size]", "add     rax, 1", "mov     [rbp+abbr_size], rax", "mov     rax, [rbp+abbr_size]", "add     rax, 10h", "and     rax, 0FFFFFFFFFFFFFFF8h", "mov     rdi, rax; size", "call    malloc", "mov     [rbp+tz], rax", "cmp     [rbp+tz], 0", "jz      short loc_1A865"], ["mov~[rbp+0],rax", "mov~eax,0", "cmp~[rbp+0],0", "cmovnb~rax,[rbp+0]", "add~rax,0", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "add~rax,0", "and~rax,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0.0, ["mov     rax, [rbp+tz]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]], [1, 0, 4, 1, 1, 5, 0, 2, 1, 2, 0.06666666666666667, ["mov     rax, [rbp+name]", "mov     rdi, rax; s", "call    _strlen", "add     rax, 1", "jmp     short loc_1A7E5"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "add~rax,0", "jmp~FOO"]]], "func_feature": [3, 1, 7, 0, 7, 9, 3, 47, 0.08095, 0, 4], "succs": [[4], [0, 6], [5], [2, 5], [3, 5], [], [4]], "fname": "tzalloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 2, 0, 1, 7, 0, 2, 0, 0, 0.0071428571428571435, ["mov     rdx, [rbp+zone_size]; abbr_size", "mov     rcx, [rbp+zone]", "mov     rax, [rbp+zone_copy]", "mov     rsi, rcx; abbr", "mov     rdi, rax; abbrs", "call    extend_abbrs", "jmp     loc_1AA2B"], ["mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 6, 1, 0, 5, 0, 1, 8, 3, 0.1273809523809524, ["mov     rdx, [rbp+zone_used]", "mov     rax, [rbp+zone_size]", "add     rax, rdx", "cmp     rax, 76h", "ja      short loc_1A986"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "cmp~rax,0", "ja~FOO"]], [0, 0, 16, 0, 0, 4, 1, 1, 7, 3, 0.013095238095238097, ["mov     rax, [rbp+tz]", "movzx   eax, byte ptr [rax+8]", "test    al, al", "jnz     loc_1A9CE"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jnz~FOO"]], [1, 0, 16, 1, 0, 4, 0, 1, 6, 3, 0.19166666666666668, ["mov     rax, [rbp+tz]", "add     rax, 9", "cmp     [rbp+zone_copy], rax", "jnz     short loc_1A910"], ["mov~rax,[rbp+0]", "add~rax,0", "cmp~[rbp+0],rax", "jnz~FOO"]], [1, 0, 16, 1, 0, 6, 0, 0, 8, 3, 0.0, ["mov     rax, [rbp+tz]", "mov     rax, [rax]", "mov     [rbp+tz], rax", "mov     rax, [rbp+tz]", "add     rax, 9", "mov     [rbp+zone_copy], rax"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "add~rax,0", "mov~[rbp+0],rax"]], [0, 0, 16, 0, 0, 4, 1, 1, 7, 3, 0.02380952380952381, ["mov     rax, [rbp+tz]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_1AA10"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [3, 0, 21, 1, 0, 13, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+tz], rdi", "mov     [rbp+tm], rsi", "mov     [rbp+zone], 0", "lea     rax, unk_20850", "mov     [rbp+zone_copy], rax", "mov     rax, [rbp+tm]", "mov     rax, [rax+30h]", "mov     [rbp+zone], rax", "cmp     [rbp+zone], 0", "jz      short loc_1A8B9"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],0", "lea~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 16, 0, 1, 7, 1, 2, 4, 2, 0.2666666666666667, ["mov     rdx, [rbp+zone]", "mov     rax, [rbp+zone_copy]", "mov     rsi, rdx; s2", "mov     rdi, rax; s1", "call    strcmp", "test    eax, eax", "jnz     loc_1A8E3"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 16, 1, 0, 4, 0, 1, 3, 3, 0.13333333333333336, ["mov     rax, [rbp+tz]", "add     rax, 9", "mov     [rbp+zone_copy], rax", "jmp     loc_1AA10"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 16, 2, 1, 9, 1, 2, 6, 3, 0.06666666666666668, ["mov     rax, [rbp+zone_copy]", "mov     rdi, rax; s", "call    _strlen", "add     rax, 1", "add     [rbp+zone_copy], rax", "mov     rax, [rbp+zone_copy]", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_1AA10"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "add~rax,0", "add~[rbp+0],rax", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 20, 0, 0, 3, 0, 1, 1, 3, 0.04285714285714286, ["mov     rax, [rbp+tm]", "cmp     rax, [rbp+zone]", "ja      short loc_1A8C3"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "ja~FOO"]], [1, 0, 4, 0, 1, 11, 0, 2, 9, 2, 0.06785714285714287, ["mov     rax, [rbp+zone]", "mov     rdi, rax; name", "call    tzalloc", "mov     rdx, rax", "mov     rax, [rbp+tz]", "mov     [rax], rdx", "mov     rax, [rbp+tz]", "mov     rax, [rax]", "mov     [rbp+tz], rax", "cmp     [rbp+tz], 0", "jnz     short loc_1A9B8"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 10, 1, 0.0035714285714285718, ["mov     eax, 0", "jmp     locret_1AA3C"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 19, 1, 0, 4, 0, 0, 2, 2, 0.0035714285714285718, ["mov     rax, [rbp+tm]", "add     rax, 38h", "cmp     [rbp+zone], rax", "jnb     short loc_1A8C3"], ["mov~rax,[rbp+0]", "add~rax,0", "cmp~[rbp+0],rax", "jnb~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.005952380952380953, ["mov     eax, 1", "jmp     locret_1AA3C"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 1, 0, 1, 4, 0, 2, 8, 1, 0.008333333333333335, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch", "mov     eax, 0", "jmp     locret_1AA3C"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 4, 0, 0, 3, 1, 0.022619047619047622, ["mov     rax, [rbp+tm]", "mov     rdx, [rbp+zone_copy]", "mov     [rax+30h], rdx", "mov     eax, 1"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~eax,0"]], [2, 0, 8, 3, 1, 14, 0, 1, 7, 2, 0.17857142857142858, ["mov     rax, [rbp+zone]", "mov     rdi, rax; s", "call    _strlen", "add     rax, 1", "mov     [rbp+zone_size], rax", "mov     rax, [rbp+zone_copy]", "mov     rdx, [rbp+tz]", "add     rdx, 9", "sub     rax, rdx", "mov     [rbp+zone_used], rax", "mov     rax, [rbp+zone_used]", "not     rax", "cmp     [rbp+zone_size], rax", "jbe     short loc_1A959"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "add~rax,0", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "add~rdx,0", "sub~rax,rdx", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "not~rax", "cmp~[rbp+0],rax", "jbe~FOO"]], [2, 0, 2, 1, 0, 6, 0, 1, 10, 2, 0.002380952380952381, ["mov     rax, [rbp+tz]", "mov     byte ptr [rax+8], 0", "mov     rax, [rbp+tz]", "add     rax, 9", "mov     [rbp+zone_copy], rax", "jmp     short loc_1AA2B"], ["mov~rax,[rbp+0]", "mov~[yte ptr [rax+0],0", "mov~rax,[rbp+0]", "add~rax,0", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 17, 0, 0, 4, 1, 1, 2, 2, 0.11547619047619048, ["mov     rax, [rbp+zone]", "movzx   eax, byte ptr [rax]", "test    al, al", "jz      loc_1AA2B"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 16, 0, 0, 4, 1, 1, 5, 4, 0.24523809523809526, ["mov     rax, [rbp+zone_copy]", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     loc_1A9CE"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]]], "func_feature": [6, 6, 23, 0, 22, 34, 2, 123, 0.06937, 1, 12], "succs": [[17], [0, 11], [9, 18], [2, 18], [7], [4, 7], [10, 15], [17, 21], [7], [5, 7], [20, 13], [19, 12], [14], [20, 15], [], [14], [14], [14], [16, 1], [17], [8, 17], [9, 3]], "fname": "save_abbr", "n_num": 22}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 3, 0, 1, 8, 0, 1, 0, 0, 0.0, ["mov     rax, [rbp+tz]", "mov     rax, [rax]", "mov     [rbp+next], rax", "mov     rax, [rbp+tz]", "mov     rdi, rax; ptr", "call    free", "mov     rax, [rbp+next]", "mov     [rbp+tz], rax"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 1, 0.3333333333333333, ["cmp     [rbp+tz], 0", "jnz     short loc_1AA57"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 1, 4, 1, 0, 7, 0, 1, 0, 1, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+tz], rdi", "mov     eax, 1", "cmp     [rbp+tz], rax", "jz      short loc_1AA7D"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~eax,0", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 1, 2, 0.16666666666666666, ["jmp     short loc_1AA76"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0.0, ["nop", "leave", "retn"], ["nop", "leave", "retn"]]], "func_feature": [1, 0, 4, 0, 5, 6, 2, 21, 0.1, 0, 1], "succs": [[1], [0, 4], [3, 4], [1], []], "fname": "tzfree", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 1, 6, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "lea     rdi, off_20851; name", "call    _getenv", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "lea~rdi,<TAG>", "call~FOO", "pop~rbp", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 6, 0.0, 1, 0], "succs": [[]], "fname": "getenv_TZ", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 3, 1, 0, 6, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+tz], rdi", "cmp     [rbp+tz], 0", "jz      short loc_1AABF"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 1, 6, 0, 2, 0, 1, 0.08333333333333333, ["mov     rax, [rbp+tz]", "mov     edx, 1; replace", "mov     rsi, rax; value", "lea     rdi, off_20851; name", "call    _setenv", "jmp     short locret_1AACB"], ["mov~rax,[rbp+0]", "mov~edx,0", "mov~rsi,rax", "lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 0, 1, 0.08333333333333333, ["lea     rdi, off_20851; name", "call    _unsetenv"], ["lea~rdi,<TAG>", "call~FOO"]]], "func_feature": [2, 0, 4, 0, 4, 4, 1, 16, 0.04167, 1, 1], "succs": [[2, 3], [], [1], [1]], "fname": "setenv_TZ", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 6, 1, 0, 8, 1, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+tz], rdi", "mov     rax, [rbp+tz]", "movzx   eax, byte ptr [rax+8]", "test    al, al", "jz      short loc_1AAEF"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.06666666666666667, ["mov     eax, 0", "jmp     short locret_1AB11"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 3, 0, 1, 4, 1, 2, 0, 2, 0.3, ["mov     rdi, rax; tz", "call    setenv_TZ", "test    eax, eax", "jz      short loc_1AB07"], ["mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 1, 0, 1, 2, 0, 1, 0, 1, 0.06666666666666667, ["call    _tzset", "mov     eax, 1"], ["call~FOO", "mov~eax,0"]], [1, 0, 4, 1, 0, 3, 0, 1, 0, 3, 0.06666666666666667, ["mov     rax, [rbp+tz]", "add     rax, 9", "jmp     short loc_1AAF4"], ["mov~rax,[rbp+0]", "add~rax,0", "jmp~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 0, 3, 0.06666666666666667, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [2, 2, 6, 0, 7, 8, 2, 22, 0.08095, 0, 2], "succs": [[4, 5], [6], [1, 3], [6], [2], [2], []], "fname": "change_env", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 8, 0, 0, 2, 1, 1, 0, 0, 0.17582417582417584, ["and     eax, 1", "jmp     short loc_1AB74"], ["and~eax,0", "jmp~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 3, 4, 0.024725274725274728, ["mov     eax, 1", "jmp     short loc_1AB62"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 9, 0, 0, 1, 0, 0, 2, 4, 0.07967032967032968, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 3, 0, 1, 6, 2, 2, 4, 2, 0.09890109890109891, ["mov     rax, [rbp+tz]", "mov     rdi, rax; tz", "call    change_env", "xor     eax, 1", "test    al, al", "jz      short loc_1ABD9"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 5, 0, 1, 6, 0, 2, 3, 2, 0.17582417582417584, ["mov     rax, [rbp+env_tz]", "mov     rdi, rax; name", "call    tzalloc", "mov     [rbp+old_tz], rax", "cmp     [rbp+old_tz], 0", "jnz     short loc_1AB9C"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 14, 1, 1, 8, 0, 2, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+tz], rdi", "call    getenv_TZ", "mov     [rbp+env_tz], rax", "cmp     [rbp+env_tz], 0", "jz      short loc_1AB67"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.005494505494505495, ["mov     rax, [rbp+old_tz]", "jmp     short locret_1ABDD"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.04395604395604396, ["mov     eax, 1", "jmp     short locret_1ABDD"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 2, 2, 0.2692307692307693, ["test    al, al", "jz      short loc_1AB7F"], ["test~al,al", "jz~FOO"]], [0, 0, 8, 0, 0, 4, 1, 0, 1, 3, 0.04395604395604396, ["mov     rax, [rbp+tz]", "movzx   eax, byte ptr [rax+8]", "test    al, al", "setz    al"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "setz~al"]], [0, 0, 1, 0, 0, 1, 0, 0, 5, 1, 0.0027472527472527475, ["mov     rax, [rbp+old_tz]"], ["mov~rax,[rbp+0]"]], [0, 0, 11, 0, 1, 8, 1, 2, 2, 5, 0.01098901098901099, ["mov     rax, [rbp+tz]", "lea     rdx, [rax+9]", "mov     rax, [rbp+env_tz]", "mov     rsi, rax; s2", "mov     rdi, rdx; s1", "call    strcmp", "test    eax, eax", "jnz     short loc_1AB5D"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,rdx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 12, 0, 0, 4, 1, 1, 1, 5, 0.02197802197802198, ["mov     rax, [rbp+tz]", "movzx   eax, byte ptr [rax+8]", "test    al, al", "jz      short loc_1AB5D"], ["mov~rax,[rbp+0]", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [1, 0, 1, 0, 3, 12, 0, 4, 5, 1, 0.0027472527472527475, ["call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+saved_errno], eax", "mov     rax, [rbp+old_tz]", "mov     rdi, rax; tz", "call    tzfree", "call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+saved_errno]", "mov     [rdx], eax", "mov     eax, 0", "jmp     short locret_1ABDD"], ["call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [7, 7, 18, 0, 15, 20, 2, 62, 0.06374, 0, 1], "succs": [[8], [0], [0], [10, 13], [3, 6], [9, 12], [14], [14], [4, 7], [8], [14], [1, 2], [2, 11], [14], []], "fname": "set_tz", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 2, 8, 0, 2, 0, 0, 0.1, ["mov     rax, [rbp+tz]", "mov     rdi, rax; tz", "call    tzfree", "call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+saved_errno]", "mov     [rdx], eax", "movzx   eax, [rbp+ok]"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "movzx~eax,[rbp+0]"]], [1, 0, 3, 0, 2, 11, 2, 3, 1, 2, 0.1, ["call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+saved_errno], eax", "mov     rax, [rbp+tz]", "mov     rdi, rax; tz", "call    change_env", "mov     [rbp+ok], al", "movzx   eax, [rbp+ok]", "xor     eax, 1", "test    al, al", "jz      short loc_1AC2B"], ["call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],al", "movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 2, 0, 1, 3, 0, 1, 2, 2, 0.0, ["call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+saved_errno], eax"], ["call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.05, ["mov     eax, 1", "jmp     short locret_1AC48"], ["mov~eax,0", "jmp~FOO"]], [1, 1, 5, 1, 0, 7, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+tz], rdi", "mov     eax, 1", "cmp     [rbp+tz], rax", "jnz     short loc_1ABFD"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~eax,0", "cmp~[rbp+0],rax", "jnz~FOO"]]], "func_feature": [5, 2, 8, 0, 6, 7, 2, 33, 0.04167, 0, 1], "succs": [[3], [0, 2], [0], [], [3], [1, 4]], "fname": "revert_tz", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 4, 0, 1, 7, 2, 2, 0, 0, 0.18181818181818182, ["mov     [rbp+abbr_saved], al", "and     [rbp+abbr_saved], 1", "mov     rax, [rbp+old_tz]", "mov     rdi, rax; tz", "call    revert_tz", "test    al, al", "jz      short loc_1ACEF"], ["mov~[rbp+0],al", "and~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 4, 3, 0.022727272727272728, ["mov     eax, 1", "jmp     short loc_1ACCC"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 5, 0, 0, 1, 0, 0, 3, 3, 0.12272727272727273, ["mov     eax, 0"], ["mov~eax,0"]], [2, 0, 11, 1, 0, 8, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+tz], rdi", "mov     [rbp+t], rsi", "mov     [rbp+tm], rdx", "cmp     [rbp+tz], 0", "jnz     short loc_1AC7A"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 7, 0, 1, 7, 1, 2, 3, 4, 0.02727272727272727, ["mov     rdx, [rbp+tm]", "mov     rax, [rbp+tz]", "mov     rsi, rdx; tm", "mov     rdi, rax; tz", "call    save_abbr", "test    al, al", "jz      short loc_1ACC7"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 8, 0, 1, 7, 1, 2, 2, 4, 0.10909090909090909, ["mov     rdx, [rbp+tm]", "mov     rax, [rbp+t]", "mov     rsi, rdx; tp", "mov     rdi, rax; timer", "call    _localtime_r", "test    rax, rax", "jz      short loc_1ACC7"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 9, 0, 1, 6, 0, 2, 1, 2, 0.07272727272727272, ["mov     rax, [rbp+tz]", "mov     rdi, rax; tz", "call    set_tz", "mov     [rbp+old_tz], rax", "cmp     [rbp+old_tz], 0", "jz      short loc_1ACEF"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 6, 1, 0.004545454545454545, ["mov     rax, [rbp+tm]", "jmp     short locret_1ACF4"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 5, 2, 0.06363636363636363, ["cmp     [rbp+abbr_saved], 0", "jz      short loc_1ACEF"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 1, 0, 1, 6, 0, 2, 1, 1, 0.00909090909090909, ["mov     rdx, [rbp+tm]", "mov     rax, [rbp+t]", "mov     rsi, rdx; tp", "mov     rdi, rax; timer", "call    _gmtime_r", "jmp     short locret_1ACF4"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.05909090909090909, ["mov     eax, 0"], ["mov~eax,0"]]], "func_feature": [5, 4, 14, 0, 12, 17, 2, 51, 0.05606, 0, 1], "succs": [[8, 11], [0], [0], [10, 6], [1, 2], [2, 4], [11, 5], [9], [11, 7], [], [9], [9]], "fname": "localtime_rz", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 9, 0, 1, 7, 1, 2, 0, 0, 0.05128205128205128, ["lea     rdx, [rbp+tm_1]", "lea     rax, [rbp+t]", "mov     rsi, rdx; tp", "mov     rdi, rax; timer", "call    _localtime_r", "test    rax, rax", "jz      short loc_1ADBB"], ["lea~rdx,[rbp+0]", "lea~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 10, 0, 1, 8, 0, 2, 2, 5, 0.07692307692307693, ["mov     rax, [rbp+tm]", "mov     rdi, rax; tp", "call    _mktime", "mov     [rbp+t], rax", "mov     [rbp+badtime], 0FFFFFFFFFFFFFFFFh", "mov     rax, [rbp+t]", "cmp     [rbp+badtime], rax", "jnz     short loc_1AD99"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [1, 0, 11, 0, 1, 6, 0, 2, 1, 3, 0.05128205128205128, ["mov     rax, [rbp+tz]", "mov     rdi, rax; tz", "call    set_tz", "mov     [rbp+old_tz], rax", "cmp     [rbp+old_tz], 0", "jz      loc_1ADD1"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 13, 1, 0, 10, 1, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 70h", "mov     [rbp+tz], rdi", "mov     [rbp+tm], rsi", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "cmp     [rbp+tz], 0", "jnz     short loc_1AD2D"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.14102564102564102, ["mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_1ADEC"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [0, 0, 3, 0, 1, 4, 0, 2, 1, 2, 0.019230769230769232, ["mov     rax, [rbp+tm]", "mov     rdi, rax; tp", "call    _timegm", "jmp     loc_1ADD8"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 5, 2, 0.05769230769230769, ["mov     rax, [rbp+t]", "jmp     short loc_1ADD8"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 2, 2, 0.07692307692307693, ["mov     rax, 0FFFFFFFFFFFFFFFFh"], ["mov~rax,0"]], [1, 0, 7, 0, 1, 8, 2, 2, 3, 4, 0.0641025641025641, ["mov     rdx, [rbp+tm]", "mov     rax, [rbp+tz]", "mov     rsi, rdx; tm", "mov     rdi, rax; tz", "call    save_abbr", "xor     eax, 1", "test    al, al", "jz      short loc_1ADBB"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 8, 0, 1, 7, 1, 2, 4, 4, 0.01282051282051282, ["lea     rdx, [rbp+tm_1]", "mov     rax, [rbp+tm]", "mov     rsi, rdx; b", "mov     rdi, rax; a", "call    equal_tm", "test    eax, eax", "jz      short loc_1ADBB"], ["lea~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 4, 3, 0.17307692307692307, ["mov     rax, [rbp+old_tz]", "mov     rdi, rax; tz", "call    revert_tz", "test    al, al", "jz      short loc_1ADD1"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 0, 0, 4, 4, 0.0, ["mov     rax, [rbp+badtime]", "mov     [rbp+t], rax"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [8, 7, 18, 1, 14, 20, 1, 66, 0.05174, 1, 1], "succs": [[9, 10], [0, 8], [1, 7], [2, 5], [12, 13], [4], [4], [4], [10, 11], [8, 10], [6, 7], [10], [], []], "fname": "mktime_z", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+x], rdi", "mov     [rbp+n], esi", "mov     eax, [rbp+n]", "mov     rdx, [rbp+x]", "mov     ecx, eax", "rol     rdx, cl", "mov     rax, rdx", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~eax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~ecx,eax", "rol~rdx,cl", "mov~rax,rdx", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 11, 0.0, 0, 0], "succs": [[]], "fname": "rotl64", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+x], rdi", "mov     [rbp+n], esi", "mov     eax, [rbp+n]", "mov     rdx, [rbp+x]", "mov     ecx, eax", "ror     rdx, cl", "mov     rax, rdx", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~eax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~ecx,eax", "ror~rdx,cl", "mov~rax,rdx", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 11, 0.0, 0, 0], "succs": [[]], "fname": "rotr64", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+x], edi", "mov     [rbp+n], esi", "mov     eax, [rbp+n]", "mov     edx, [rbp+x]", "mov     ecx, eax", "rol     edx, cl", "mov     eax, edx", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~[rbp+0],esi", "mov~eax,[rbp+0]", "mov~edx,[rbp+0]", "mov~ecx,eax", "rol~edx,cl", "mov~eax,edx", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 11, 0.0, 0, 0], "succs": [[]], "fname": "rotl32", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+x], edi", "mov     [rbp+n], esi", "mov     eax, [rbp+n]", "mov     edx, [rbp+x]", "mov     ecx, eax", "ror     edx, cl", "mov     eax, edx", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~[rbp+0],esi", "mov~eax,[rbp+0]", "mov~edx,[rbp+0]", "mov~ecx,eax", "ror~edx,cl", "mov~eax,edx", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 11, 0.0, 0, 0], "succs": [[]], "fname": "rotr32", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 2, 0, 20, 1, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+x], rdi", "mov     [rbp+n], esi", "mov     eax, [rbp+n]", "mov     rdx, [rbp+x]", "mov     rsi, rdx", "mov     ecx, eax", "shl     rsi, cl", "mov     eax, [rbp+n]", "mov     edx, 40h ; '@'", "sub     edx, eax", "mov     eax, edx", "mov     rdx, [rbp+x]", "mov     ecx, eax", "shr     rdx, cl", "mov     rax, rdx", "or      rax, rsi", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~eax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,rdx", "mov~ecx,eax", "shl~rsi,cl", "mov~eax,[rbp+0]", "mov~edx,0", "sub~edx,eax", "mov~eax,edx", "mov~rdx,[rbp+0]", "mov~ecx,eax", "shr~rdx,cl", "mov~rax,rdx", "or~rax,rsi", "pop~rbp", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 20, 0.0, 0, 2], "succs": [[]], "fname": "rotl_sz", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 2, 0, 20, 1, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+x], rdi", "mov     [rbp+n], esi", "mov     eax, [rbp+n]", "mov     rdx, [rbp+x]", "mov     rsi, rdx", "mov     ecx, eax", "shr     rsi, cl", "mov     eax, [rbp+n]", "mov     edx, 40h ; '@'", "sub     edx, eax", "mov     eax, edx", "mov     rdx, [rbp+x]", "mov     ecx, eax", "shl     rdx, cl", "mov     rax, rdx", "or      rax, rsi", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~eax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,rdx", "mov~ecx,eax", "shr~rsi,cl", "mov~eax,[rbp+0]", "mov~edx,0", "sub~edx,eax", "mov~eax,edx", "mov~rdx,[rbp+0]", "mov~ecx,eax", "shl~rdx,cl", "mov~rax,rdx", "or~rax,rsi", "pop~rbp", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 1, 20, 0.0, 0, 2], "succs": [[]], "fname": "rotr_sz", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 2, 0, 20, 1, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     eax, edi", "mov     [rbp+n], esi", "mov     [rbp+x], ax", "movzx   edx, [rbp+x]", "mov     eax, [rbp+n]", "mov     ecx, eax", "shl     edx, cl", "mov     eax, edx", "mov     esi, eax", "movzx   edx, [rbp+x]", "mov     eax, 10h", "sub     eax, [rbp+n]", "mov     ecx, eax", "sar     edx, cl", "mov     eax, edx", "or      eax, esi", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~eax,edi", "mov~[rbp+0],esi", "mov~[rbp+0],ax", "movzx~edx,[rbp+0]", "mov~eax,[rbp+0]", "mov~ecx,eax", "shl~edx,cl", "mov~eax,edx", "mov~esi,eax", "movzx~edx,[rbp+0]", "mov~eax,0", "sub~eax,[rbp+0]", "mov~ecx,eax", "sar~edx,cl", "mov~eax,edx", "or~eax,esi", "pop~rbp", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 20, 0.0, 0, 2], "succs": [[]], "fname": "rotl16", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 2, 0, 20, 1, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     eax, edi", "mov     [rbp+n], esi", "mov     [rbp+x], ax", "movzx   edx, [rbp+x]", "mov     eax, [rbp+n]", "mov     ecx, eax", "sar     edx, cl", "mov     eax, edx", "mov     esi, eax", "movzx   edx, [rbp+x]", "mov     eax, 10h", "sub     eax, [rbp+n]", "mov     ecx, eax", "shl     edx, cl", "mov     eax, edx", "or      eax, esi", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~eax,edi", "mov~[rbp+0],esi", "mov~[rbp+0],ax", "movzx~edx,[rbp+0]", "mov~eax,[rbp+0]", "mov~ecx,eax", "sar~edx,cl", "mov~eax,edx", "mov~esi,eax", "movzx~edx,[rbp+0]", "mov~eax,0", "sub~eax,[rbp+0]", "mov~ecx,eax", "shl~edx,cl", "mov~eax,edx", "or~eax,esi", "pop~rbp", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 20, 0.0, 0, 2], "succs": [[]], "fname": "rotr16", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 2, 0, 20, 1, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     eax, edi", "mov     [rbp+n], esi", "mov     [rbp+x], al", "movzx   edx, [rbp+x]", "mov     eax, [rbp+n]", "mov     ecx, eax", "shl     edx, cl", "mov     eax, edx", "mov     esi, eax", "movzx   edx, [rbp+x]", "mov     eax, 8", "sub     eax, [rbp+n]", "mov     ecx, eax", "sar     edx, cl", "mov     eax, edx", "or      eax, esi", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~eax,edi", "mov~[rbp+0],esi", "mov~[rbp+0],al", "movzx~edx,[rbp+0]", "mov~eax,[rbp+0]", "mov~ecx,eax", "shl~edx,cl", "mov~eax,edx", "mov~esi,eax", "movzx~edx,[rbp+0]", "mov~eax,0", "sub~eax,[rbp+0]", "mov~ecx,eax", "sar~edx,cl", "mov~eax,edx", "or~eax,esi", "pop~rbp", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 20, 0.0, 0, 2], "succs": [[]], "fname": "rotl8", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 0, 2, 0, 20, 1, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     eax, edi", "mov     [rbp+n], esi", "mov     [rbp+x], al", "movzx   edx, [rbp+x]", "mov     eax, [rbp+n]", "mov     ecx, eax", "sar     edx, cl", "mov     eax, edx", "mov     esi, eax", "movzx   edx, [rbp+x]", "mov     eax, 8", "sub     eax, [rbp+n]", "mov     ecx, eax", "shl     edx, cl", "mov     eax, edx", "or      eax, esi", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~eax,edi", "mov~[rbp+0],esi", "mov~[rbp+0],al", "movzx~edx,[rbp+0]", "mov~eax,[rbp+0]", "mov~ecx,eax", "sar~edx,cl", "mov~eax,edx", "mov~esi,eax", "movzx~edx,[rbp+0]", "mov~eax,0", "sub~eax,[rbp+0]", "mov~ecx,eax", "shl~edx,cl", "mov~eax,edx", "or~eax,esi", "pop~rbp", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 20, 0.0, 0, 2], "succs": [[]], "fname": "rotr8", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 1, 0, 1, 0, 5, 0, 0, 0, 0, 0.0, ["add     rsp, 20h", "pop     p2", "pop     p1", "pop     rbp", "retn"], ["add~rsp,<STR>", "pop~p2", "pop~p1", "pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.023809523809523808, ["mov     eax, 0", "jmp     short loc_1AFF9"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 1, 1, 0, 4, 0, 0, 3, 0, 0.09523809523809523, ["movzx   edx, [rbp+c1]", "movzx   eax, [rbp+c2]", "sub     edx, eax", "mov     eax, edx"], ["movzx~edx,[rbp+0]", "movzx~eax,[rbp+0]", "sub~edx,eax", "mov~eax,edx"]], [0, 1, 7, 1, 0, 11, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "push    p1", "push    p2", "sub     rsp, 20h", "mov     [rbp+s1], rdi", "mov     [rbp+s2], rsi", "mov     p1, [rbp+s1]", "mov     p2, [rbp+s2]", "cmp     p1, p2", "jnz     short loc_1AFB1"], ["push~rbp", "mov~rbp,rsp", "push~p1", "push~p2", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~p1,[rbp+0]", "mov~p2,[rbp+0]", "cmp~p1,p2", "jnz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 1, 3, 0, 0.047619047619047616, ["jmp     short loc_1AFED"], ["jmp~FOO"]], [2, 0, 6, 2, 0, 5, 0, 1, 2, 0, 0.047619047619047616, ["add     p1, 1", "add     p2, 1", "movzx   eax, [rbp+c1]", "cmp     al, [rbp+c2]", "jz      short loc_1AFB1"], ["add~p1,0", "add~p2,0", "movzx~eax,[rbp+0]", "cmp~al,[rbp+0]", "jz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 2, 0, 0.07142857142857142, ["nop"], ["nop"]], [1, 0, 6, 0, 2, 12, 0, 3, 1, 0, 0.11904761904761904, ["movzx   eax, byte ptr [p1]", "movzx   eax, al", "mov     edi, eax; c", "call    c_tolower", "mov     [rbp+c1], al", "movzx   eax, byte ptr [p2]", "movzx   eax, al", "mov     edi, eax; c", "call    c_tolower", "mov     [rbp+c2], al", "cmp     [rbp+c1], 0", "jz      short loc_1AFEC"], ["movzx~eax,<TAG>", "movzx~eax,al", "mov~edi,eax", "call~FOO", "mov~[rbp+0],al", "movzx~eax,<TAG>", "movzx~eax,al", "mov~edi,eax", "call~FOO", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]]], "func_feature": [2, 0, 7, 0, 8, 10, 2, 41, 0.0506, 0, 5], "succs": [[], [0], [0], [1, 7], [2], [4, 7], [2], [5, 6]], "fname": "c_strcasecmp", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.05357142857142857, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_1B08B"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 4, 2, 1, 1, 2, 0.1607142857142857, ["movzx   eax, [rbp+fclose_fail]", "xor     eax, 1", "test    al, al", "jz      short loc_1B07F"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 2, 0, 1, 2, 0, 1, 2, 2, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 0"], ["call~FOO", "mov~<TAG>,0"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.05357142857142857, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 7, 0, 0, 2, 0, 1, 1, 2, 0.0625, ["cmp     [rbp+fclose_fail], 0", "jz      short loc_1B086"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 5, 0, 1, 4, 0, 2, 3, 2, 0.026785714285714284, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 9", "jz      short loc_1B086"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 2, 3, 0.08928571428571427, ["cmp     [rbp+some_pending], 0", "jnz     short loc_1B069"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 1, 8, 1, 3, 24, 3, 4, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+stream], rdi", "mov     rax, [rbp+stream]", "mov     rdi, rax; fp", "call    ___fpending", "test    rax, rax", "setnz   al", "mov     [rbp+some_pending], al", "mov     rax, [rbp+stream]", "mov     rdi, rax; stream", "call    _ferror_unlocked", "test    eax, eax", "setnz   al", "mov     [rbp+prev_fail], al", "mov     rax, [rbp+stream]", "mov     rdi, rax; fp", "call    rpl_fclose", "test    eax, eax", "setnz   al", "mov     [rbp+fclose_fail], al", "cmp     [rbp+prev_fail], 0", "jnz     short loc_1B069"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~rax,rax", "setnz~al", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~eax,eax", "setnz~al", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~eax,eax", "setnz~al", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jnz~FOO"]]], "func_feature": [5, 5, 11, 0, 9, 13, 2, 43, 0.0496, 0, 1], "succs": [[7], [0, 2], [0], [7], [3, 6], [1, 3], [1, 5], [], [1, 4]], "fname": "close_stream", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 1, 2, 1, 1, 10, 0, 2, 0, 1, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+file], rdi", "mov     rax, [rbp+file]", "mov     rdi, rax; file", "call    mdir_name", "mov     [rbp+result], rax", "cmp     [rbp+result], 0", "jnz     short loc_1B0B5"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0.0, ["mov     rax, [rbp+result]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]]], "func_feature": [2, 0, 3, 0, 3, 2, 2, 14, 0.0, 0, 1], "succs": [[], [0, 2], []], "fname": "dir_name", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 3, 0, 0, 4, 1, 1, 0, 0, 0.5, ["mov     rax, [rbp+s]", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_1B0D9"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [1, 0, 3, 0, 0, 8, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+x], rdi", "mov     [rbp+tablesize], rsi", "mov     [rbp+h], 0", "mov     rax, [rbp+x]", "mov     [rbp+s], rax", "jmp     short loc_1B0F8"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [2, 0, 3, 2, 0, 8, 0, 0, 2, 2, 0.0, ["mov     rax, [rbp+s]", "movzx   eax, byte ptr [rax]", "movsx   rax, al", "mov     rdx, [rbp+h]", "rol     rdx, 9", "add     rax, rdx", "mov     [rbp+h], rax", "add     [rbp+s], 1"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "movsx~rax,al", "mov~rdx,[rbp+0]", "rol~rdx,0", "add~rax,rdx", "mov~[rbp+0],rax", "add~[rbp+0],0"]], [1, 0, 0, 1, 0, 6, 0, 0, 2, 0, 0.0, ["mov     rax, [rbp+h]", "mov     edx, 0", "div     [rbp+tablesize]", "mov     rax, rdx", "pop     rbp", "retn"], ["mov~rax,[rbp+0]", "mov~edx,0", "div~,[rbp+0]", "mov~rax,rdx", "pop~rbp", "retn"]]], "func_feature": [0, 1, 2, 0, 4, 4, 1, 26, 0.125, 0, 3], "succs": [[2, 3], [0], [0], []], "fname": "hash_pjw", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[3, 0, 4, 1, 1, 8, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     edi, 0Eh; item", "call    _nl_langinfo", "mov     [rbp+codeset], rax", "cmp     [rbp+codeset], 0", "jnz     short loc_1B13D"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~edi,0", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 0, 0, 2, 0.0, ["lea     rax, off_20851+3", "mov     [rbp+codeset], rax"], ["lea~rax,<TAG>", "mov~[rbp+0],rax"]], [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+codeset]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 0, 1, 0.3333333333333333, ["mov     rax, [rbp+codeset]", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_1B153"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 0, 1, 0.0, ["lea     rax, aAscii; \"ASCII\"", "mov     [rbp+codeset], rax"], ["lea~rax,<TAG>", "mov~[rbp+0],rax"]]], "func_feature": [1, 1, 3, 0, 5, 6, 1, 19, 0.06667, 2, 1], "succs": [[1, 3], [3], [], [2, 4], [2]], "fname": "locale_charset", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 4, 0, 1, 3, 0, 1, 0, 0, 0.0, ["call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+saved_errno], eax"], ["call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax"]], [0, 0, 5, 0, 1, 5, 1, 2, 2, 3, 0.09027777777777778, ["mov     rax, [rbp+fp]", "mov     rdi, rax; stream", "call    rpl_fflush", "test    eax, eax", "jz      short loc_1B1E3"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 7, 0, 1, 5, 1, 2, 1, 4, 0.08333333333333333, ["mov     rax, [rbp+fp]", "mov     rdi, rax; fp", "call    ___freading", "test    eax, eax", "jz      short loc_1B1C9"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [3, 1, 9, 1, 1, 12, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+fp], rdi", "mov     [rbp+saved_errno], 0", "mov     [rbp+result], 0", "mov     rax, [rbp+fp]", "mov     rdi, rax; stream", "call    _fileno", "mov     [rbp+fd], eax", "cmp     [rbp+fd], 0", "jns     short loc_1B196"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jns~FOO"]], [1, 0, 2, 0, 1, 5, 0, 1, 4, 2, 0.0, ["call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+saved_errno]", "mov     [rdx], eax", "mov     [rbp+result], 0FFFFFFFFh"], ["call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "mov~[rbp+0],0"]], [1, 0, 3, 0, 1, 6, 0, 2, 3, 2, 0.19444444444444442, ["mov     rax, [rbp+fp]", "mov     rdi, rax; stream", "call    _fclose", "mov     [rbp+result], eax", "cmp     [rbp+saved_errno], 0", "jz      short loc_1B20C"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jz~FOO"]], [3, 0, 6, 0, 2, 9, 0, 3, 2, 3, 0.048611111111111105, ["mov     rax, [rbp+fp]", "mov     rdi, rax; stream", "call    _fileno", "mov     edx, 1; whence", "mov     esi, 0; offset", "mov     edi, eax; fd", "call    _lseek", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      short loc_1B1E3"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~edx,0", "mov~esi,0", "mov~edi,eax", "call~FOO", "cmp~rax,0", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, 1, 0.08333333333333333, ["mov     eax, [rbp+result]"], ["mov~eax,[rbp+0]"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 1, 0, 1, 4, 0, 2, 1, 1, 0.013888888888888888, ["mov     rax, [rbp+fp]", "mov     rdi, rax; stream", "call    _fclose", "jmp     short locret_1B20F"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "jmp~FOO"]]], "func_feature": [9, 2, 14, 0, 10, 14, 1, 52, 0.05139, 0, 1], "succs": [[5], [0, 5], [1, 6], [9, 2], [7], [4, 7], [1, 5], [8], [], [8]], "fname": "rpl_fclose", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 2, 1, 0, 9, 2, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+fp], rdi", "mov     rax, [rbp+fp]", "mov     eax, [rax]", "and     eax, 100h", "test    eax, eax", "jz      short loc_1B242"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~eax,<TAG>", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["nop", "leave", "retn"], ["nop", "leave", "retn"]], [2, 0, 1, 0, 1, 5, 0, 1, 0, 1, 0.0, ["mov     rax, [rbp+fp]", "mov     edx, 1; whence", "mov     esi, 0; offset", "mov     rdi, rax; fp", "call    rpl_fseeko"], ["mov~rax,[rbp+0]", "mov~edx,0", "mov~esi,0", "mov~rdi,rax", "call~FOO"]]], "func_feature": [1, 2, 2, 0, 3, 3, 1, 17, 0.0, 0, 1], "succs": [[1, 2], [], [1]], "fname": "clear_ungetc_buffer_preserving_position", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 2, 6, 0, 2, 0, 0, 0.041666666666666664, ["mov     rax, [rbp+stream]", "mov     rdi, rax; fp", "call    clear_ungetc_buffer_preserving_position", "mov     rax, [rbp+stream]", "mov     rdi, rax; stream", "call    _fflush"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 1, 2, 0.08333333333333333, ["mov     rax, [rbp+stream]", "mov     rdi, rax; fp", "call    ___freading", "test    eax, eax", "jnz     short loc_1B276"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 1, 0, 1, 4, 0, 2, 1, 1, 0.125, ["mov     rax, [rbp+stream]", "mov     rdi, rax; stream", "call    _fflush", "jmp     short locret_1B28E"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [2, 0, 4, 1, 0, 6, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+stream], rdi", "cmp     [rbp+stream], 0", "jz      short loc_1B268"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [4, 1, 7, 0, 5, 6, 1, 23, 0.05, 0, 1], "succs": [[4], [0, 2], [4], [1, 2], []], "fname": "rpl_fflush", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 3, 0, 2, 12, 0, 3, 0, 0, 0.14285714285714285, ["mov     rax, [rbp+fp]", "mov     rdi, rax; stream", "call    _fileno", "mov     ecx, eax", "mov     edx, [rbp+whence]; whence", "mov     rax, [rbp+offset]", "mov     rsi, rax; offset", "mov     edi, ecx; fd", "call    _lseek", "mov     [rbp+pos], rax", "cmp     [rbp+pos], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_1B30B"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~ecx,eax", "mov~edx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,ecx", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 5, 0, 0, 4, 1, 1, 2, 2, 0.14285714285714285, ["mov     rax, [rbp+fp]", "mov     rax, [rax+48h]", "test    rax, rax", "jnz     short loc_1B332"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 1, 0, 1, 6, 0, 1, 1, 1, 0.07142857142857142, ["mov     edx, [rbp+whence]; whence", "mov     rcx, [rbp+offset]", "mov     rax, [rbp+fp]", "mov     rsi, rcx; off", "mov     rdi, rax; stream", "call    _fseeko"], ["mov~edx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [1, 0, 7, 1, 0, 12, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+fp], rdi", "mov     [rbp+offset], rsi", "mov     [rbp+whence], edx", "mov     rax, [rbp+fp]", "mov     rdx, [rax+10h]", "mov     rax, [rbp+fp]", "mov     rax, [rax+8]", "cmp     rdx, rax", "jnz     short loc_1B332"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],edx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~rdx,rax", "jnz~FOO"]], [0, 0, 6, 0, 0, 6, 0, 1, 1, 2, 0.09523809523809523, ["mov     rax, [rbp+fp]", "mov     rdx, [rax+28h]", "mov     rax, [rbp+fp]", "mov     rax, [rax+20h]", "cmp     rdx, rax", "jnz     short loc_1B332"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~rdx,rax", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.011904761904761904, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_1B348"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 1, 0, 0, 11, 1, 1, 4, 1, 0.011904761904761904, ["mov     rax, [rbp+fp]", "mov     eax, [rax]", "and     eax, 0FFFFFFEFh", "mov     edx, eax", "mov     rax, [rbp+fp]", "mov     [rax], edx", "mov     rax, [rbp+fp]", "mov     rdx, [rbp+pos]", "mov     [rax+90h], rdx", "mov     eax, 0", "jmp     short locret_1B348"], ["mov~rax,[rbp+0]", "mov~eax,<TAG>", "and~eax,0", "mov~edx,eax", "mov~rax,[rbp+0]", "mov~<TAG>,edx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [3, 2, 9, 0, 8, 11, 1, 55, 0.05952, 0, 1], "succs": [[5, 6], [0, 2], [7], [2, 4], [1, 2], [7], [7], []], "fname": "rpl_fseeko", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 0, 0, 0, 0.16666666666666666, ["xor     ebx, ebx", "nop     dword ptr [rax+rax+00000000h]"], ["xor~ebx,ebx", "nop~[word ptr [rax+0]"]], [2, 0, 3, 2, 1, 17, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15, rdx", "push    r13", "push    r12", "lea     r12, __frame_dummy_init_array_entry", "push    rbp", "lea     rbp, __do_global_dtors_aux_fini_array_entry", "push    rbx", "mov     r13d, edi", "mov     r14, rsi", "sub     rbp, r12", "sub     rsp, 8", "sar     rbp, 3", "call    _init_proc", "test    rbp, rbp", "jz      short loc_1B3A6"], ["push~r15", "push~r14", "mov~r15,rdx", "push~r13", "push~r12", "lea~r12,<TAG>", "push~rbp", "lea~rbp,<TAG>", "push~rbx", "mov~r13d,edi", "mov~r14,rsi", "sub~rbp,r12", "sub~rsp,0", "sar~rbp,0", "call~FOO", "test~rbp,rbp", "jz~FOO"]], [1, 0, 2, 1, 1, 7, 0, 2, 2, 1, 0.16666666666666666, ["mov     rdx, r15", "mov     rsi, r14", "mov     edi, r13d", "call    qword ptr [r12+rbx*8]", "add     rbx, 1", "cmp     rbp, rbx", "jnz     short loc_1B390"], ["mov~rdx,r15", "mov~rsi,r14", "mov~edi,r13d", "call~<TAG>", "add~rbx,0", "cmp~rbp,rbx", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 5, 0, 34, 0.08333, 2, 4], "succs": [[2], [0, 3], [2, 3], []], "fname": "__libc_csu_init", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_csu_fini", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rdx, cs:__dso_handle", "xor     esi, esi", "jmp     ___cxa_atexit"], ["mov~rdx,<TAG>", "xor~esi,esi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 1, 3, 0.0, 1, 0], "succs": [[1], []], "fname": "atexit", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     rdx, rsi; Alternative name is '__stat'", "mov     rsi, rdi; filename", "mov     edi, 1; ver", "jmp     ___xstat"], ["mov~rdx,rsi", "mov~rsi,rdi", "mov~edi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 5, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "stat_0", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     rdx, rsi; Alternative name is '__fstat'", "mov     esi, edi; fildes", "mov     edi, 1; ver", "jmp     ___fxstat"], ["mov~rdx,rsi", "mov~esi,edi", "mov~edi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 1, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "fstat", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     rdx, rsi; Alternative name is '__lstat'", "mov     rsi, rdi; filename", "mov     edi, 1; ver", "jmp     ___lxstat"], ["mov~rdx,rsi", "mov~rsi,rdi", "mov~edi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 2, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "lstat", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[1, 0, 1, 0, 0, 6, 0, 1, 0, 0, 0.0, ["mov     r8d, ecx; flag", "mov     rcx, rdx; stat_buf", "mov     rdx, rsi; filename", "mov     esi, edi; fildes", "mov     edi, 1; ver", "jmp     ___fxstatat"], ["mov~r8d,ecx", "mov~rcx,rdx", "mov~rdx,rsi", "mov~esi,edi", "mov~edi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 2, 6, 0.0, 0, 0], "succs": [[1], []], "fname": "fstatat", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[2, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0.0, ["sub     rsp, 8; _fini", "add     rsp, 8", "retn"], ["sub~rsp,0", "add~rsp,0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 2], "succs": [[]], "fname": "term_proc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getenv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigprocmask:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigprocmask", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn raise:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "raise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp_free:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp_free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn abort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __errno_location:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strncmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn localtime_r:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "localtime_r", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fpending:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn toupper:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "toupper", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn isatty:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "isatty", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigaction_0:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigaction_0", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswcntrl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswcntrl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn wcswidth:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "wcswidth", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn localeconv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "localeconv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbstowcs:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbstowcs", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn readlink:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "readlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn clock_gettime:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "clock_gettime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn setenv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "setenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn textdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fclose:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn opendir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "opendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getpwuid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getpwuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn bindtextdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dcgettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_get_mb_cur_max:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strlen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __lxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__lxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __stack_chk_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getopt_long:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbrtowc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn gettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "gettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn printf:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "printf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getgrgid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getgrgid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstatat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstatat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn snprintf:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "snprintf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strrchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn gmtime_r:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "gmtime_r", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn lseek:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __assert_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fnmatch:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fnmatch", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ioctl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getcwd:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getcwd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strspn:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strspn", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn closedir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "closedir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __libc_start_main:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_start_main", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _setjmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_setjmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fputs_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ferror_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ferror_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn calloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp_strcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp_strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn signal:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "signal", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dirfd:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dirfd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getpwnam:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getpwnam", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fprintf:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fprintf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigemptyset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigemptyset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getgrnam:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getgrnam", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn putchar_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "putchar_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn tzset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "tzset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fileno:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn tcgetpgrp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "tcgetpgrp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __xstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__xstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn readdir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "readdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn wcwidth:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "wcwidth", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn tolower:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "tolower", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn putc_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "putc_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp_malloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp_malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fflush:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn nl_langinfo:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strcoll:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strcoll", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mktime:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mktime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __freading:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fwrite_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fwrite_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn gnu_dev_major:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "gnu_dev_major", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn realloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn stpncpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "stpncpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn setlocale:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn timegm:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "timegm", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn longjmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "longjmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strftime:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strftime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mempcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mempcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memmove:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn error:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fseeko:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strtoumax:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strtoumax", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn unsetenv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "unsetenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn gnu_dev_minor:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "gnu_dev_minor", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strtoul:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strtoul", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __cxa_atexit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn wcstombs:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "wcstombs", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn gethostname:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "gethostname", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sprintf:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sprintf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigismember:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigismember", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fwrite:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fflush_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fflush_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbsinit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswprint:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp___cxa_finalize:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp___cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigaddset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigaddset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_b_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __gmon_start__:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__gmon_start__", "n_num": 1}
