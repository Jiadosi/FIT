{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    rax ; __gmon_start__"], ["call~rax"]], [1, 0, 2, 1, 0, 4, 1, 1, 0, 1, 0.0, ["sub     rsp, 8; _init", "mov     rax, cs:__gmon_start___ptr", "test    rax, rax", "jz      short loc_1862"], ["sub~rsp,0", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 3, 1, 7, 0.0, 1, 2], "succs": [[2], [0, 2], []], "fname": "init_proc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0.0, ["push    cs:qword_20BDA0", "jmp     cs:qword_20BDA8"], ["push~<TAG>", "jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 67, 2, 0.0, 2, 0], "succs": [[]], "fname": "sub_1870", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_toupper_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_toupper_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getenv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "getenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigprocmask_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigprocmask", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:raise_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "raise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:free_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:abort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 7, 1, 0.0, 1, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__errno_location_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 21, 1, 0.0, 1, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fdatasync_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fdatasync", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strncmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fpending_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigaction_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigaction", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:localeconv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "localeconv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fcntl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:clock_gettime_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "clock_gettime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:write_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "write", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:textdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fclose_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:bindtextdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dcgettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 83, 1, 0.0, 1, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_get_mb_cur_max_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strlen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 13, 1, 0.0, 1, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__stack_chk_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 19, 1, 0.0, 1, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getopt_long_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbrtowc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dup2_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "dup2", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__overflow_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__overflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strrchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ftruncate_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "ftruncate", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:lseek_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:gettimeofday_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "gettimeofday", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__assert_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__strtoul_internal_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__strtoul_internal", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ioctl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:close_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:posix_fadvise_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "posix_fadvise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:read_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "read", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fputs_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 21, 1, 0.0, 1, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:calloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__memcpy_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__memcpy_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigemptyset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigemptyset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:malloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:realloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:setlocale_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__printf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 8, 1, 0.0, 1, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memmove_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:error_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 35, 1, 0.0, 1, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fsync_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fsync", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:open_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dcngettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "dcngettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_atexit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpagesize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpagesize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigismember_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigismember", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fwrite_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 17, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbsinit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswprint_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigaddset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigaddset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_tolower_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_tolower_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_b_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__sprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "__sprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_finalize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[1, 0, 13, 0, 0, 3, 1, 1, 0, 0, 0.03631415801614764, ["mov     r15d, cs:conversions_mask", "test    r15d, 4000h", "jnz     loc_3182"], ["mov~r15d,<TAG>", "test~r15d,0", "jnz~FOO"]], [0, 0, 16, 0, 0, 2, 0, 1, 39, -1, 0.007839532871972319, ["cmp     rax, cs:oc", "jz      loc_2DF3"], ["cmp~rax,<TAG>", "jz~FOO"]], [0, 0, 19, 0, 0, 2, 1, 1, 37, -1, 0.05595804498269896, ["test    rsi, rsi", "jnz     loc_3150"], ["test~rsi,rsi", "jnz~FOO"]], [1, 0, 113, 1, 0, 2, 0, 1, 33, -1, 0.00264321414840446, ["sub     r12, 1", "jz      loc_22B4"], ["sub~r12,0", "jz~FOO"]], [0, 0, 113, 0, 1, 6, 0, 2, 32, -1, 0.0055147058823529415, ["mov     rdi, cs:obuf; fd", "mov     rsi, r14; buf", "call    iwrite", "cmp     rax, cs:output_blocksize", "mov     r14, rax", "jz      short loc_2C00"], ["mov~rdi,<TAG>", "mov~rsi,r14", "call~FOO", "cmp~rax,<TAG>", "mov~r14,rax", "jz~FOO"]], [3, 0, 108, 0, 0, 3, 0, 0, 41, -1, 0.00891083557606049, ["mov     cs:input_seekable, 0", "mov     cs:input_seek_errno, 1Dh", "mov     [rsp+118h+code], 1"], ["mov~<TAG>,0", "mov~<TAG>,0", "mov~[rsp+0],0"]], [1, 0, 108, 0, 3, 15, 3, 4, 40, -1, 0.004805843906189884, ["mov     rdi, cs:input_file; name", "call    quote", "lea     rsi, aSCannotSeek; \"%s: cannot seek\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     rbx, rax", "call    _dcgettext", "mov     rdx, rax; format", "mov     rax, [rsp+118h+var_100]", "mov     rcx, rbx", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error", "jmp     loc_27F4"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~rbx,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~rcx,rbx", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 108, 0, 3, 13, 4, 3, 40, -1, 0.004453415353069336, ["mov     rdi, cs:input_file; name", "call    quote", "lea     rsi, aOffsetOverflow; \"offset overflow while reading file %s\"", "mov     rbx, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [2, 0, 276, 2, 0, 4, 0, 1, 34, 5, 0.015030276816608998, ["add     rdx, 1", "add     rcx, 1", "cmp     sil, [rdx-1]", "jnz     loc_34A0"], ["add~rdx,0", "add~rcx,0", "cmp~sil,[rdx-1]+0]", "jnz~FOO"]], [0, 0, 276, 0, 0, 3, 1, 1, 35, 6, 0.009912053056516724, ["movzx   esi, byte ptr [rcx]", "test    sil, sil", "jnz     short loc_33A2"], ["movzx~esi,<TAG>", "test~sil,sil", "jnz~FOO"]], [1, 0, 276, 0, 0, 3, 0, 0, 33, 6, 0.01284361783929258, ["lea     rcx, aSCannotSeek+0Bh; \"seek\"", "mov     rdx, r15", "mov     esi, 73h ; 's'"], ["lea~rcx,<TAG>", "mov~rdx,r15", "mov~esi,0"]], [1, 0, 1, 0, 2, 10, 3, 2, 42, -1, 0.000528642829680892, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, rax; format", "mov     rax, [rsp+118h+var_100]", "mov     rcx, rbx", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error", "mov     [rsp+118h+code], 1"], ["xor~edi,edi", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~rcx,rbx", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "mov~[rsp+0],0"]], [1, 0, 2, 0, 1, 6, 0, 2, 42, -1, 0.00011413879277201077, ["mov     rdi, cs:output_file; name", "call    quote", "mov     edx, 5", "mov     rbx, rax", "lea     rsi, aFsyncFailedFor; \"fsync failed for %s\"", "jmp     loc_25EB"], ["mov~rdi,<TAG>", "call~FOO", "mov~edx,0", "mov~rbx,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 2, 0, 1, 5, 0, 1, 41, -1, 0.0037545655517108806, ["mov     rdi, cs:output_file; name", "call    quote", "lea     rsi, aWritingS; \"writing %s\"", "mov     rbx, rax", "mov     edx, 5; category"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0"]], [0, 0, 108, 0, 0, 2, 0, 1, 41, -1, 0.01847846981930027, ["cmp     cs:input_blocksize, r15", "jz      loc_32A9"], ["cmp~<TAG>,r15", "jz~FOO"]], [0, 0, 108, 1, 1, 6, 0, 2, 40, -1, 0.022749663590926568, ["mov     rsi, r15; buf", "mov     rdi, rbp; fd", "call    iwrite", "add     cs:w_bytes, rax", "cmp     rax, r15", "jz      loc_2AA5"], ["mov~rsi,r15", "mov~rdi,rbp", "call~FOO", "add~<TAG>,rax", "cmp~rax,r15", "jz~FOO"]], [1, 2, 135, 0, 0, 5, 3, 0, 26, -1, 0.0035563244905805463, ["and     eax, 200h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 200h", "or      r12d, eax"], ["and~eax,<STR>", "cmp~eax,0", "sbb~eax,eax", "and~eax,<STR>", "or~r12d,eax"]], [5, 1, 138, 0, 0, 13, 5, 1, 25, -1, 0.024726066897347174, ["mov     eax, cs:conversions_mask", "mov     edx, eax", "mov     r12d, eax", "and     edx, 1000h", "cmp     edx, 1", "sbb     edx, edx", "sar     r12d, 6", "and     r12d, 80h", "and     edx, 40h", "or      r12d, r14d", "or      r12d, edx", "cmp     cs:seek_records, 0", "jnz     loc_2908"], ["mov~eax,<TAG>", "mov~edx,eax", "mov~r12d,eax", "and~edx,0", "cmp~edx,0", "sbb~edx,edx", "sar~r12d,0", "and~r12d,<STR>", "and~edx,0", "or~r12d,r14d", "or~r12d,edx", "cmp~<TAG>,0", "jnz~FOO"]], [3, 0, 172, 0, 0, 14, 4, 1, 13, -1, 0.23558246828143023, ["mov     eax, cs:input_flags", "lea     rdx, iread", "lea     rcx, iread_fullblock", "mov     r15d, cs:conversions_mask", "test    al, 1", "cmovnz  rdx, rcx", "and     eax, 0FFFFFFFEh", "mov     cs:input_flags, eax", "mov     eax, r15d", "mov     cs:iread_fnc, rdx", "and     eax, 7", "lea     edx, [rax-1]", "test    edx, eax", "jnz     loc_2B57"], ["mov~eax,<TAG>", "lea~rdx,<TAG>", "lea~rcx,<TAG>", "mov~r15d,<TAG>", "test~al,0", "cmovnz~rdx,rcx", "and~eax,0", "mov~<TAG>,eax", "mov~eax,r15d", "mov~<TAG>,rdx", "and~eax,0", "lea~edx,[rax-1]+0]", "test~edx,eax", "jnz~FOO"]], [1, 0, 174, 0, 0, 4, 1, 1, 12, -1, 0.23623125720876587, ["mov     eax, cs:output_flags", "and     eax, 1", "mov     [rsp+118h+code], eax", "jnz     loc_344B"], ["mov~eax,<TAG>", "and~eax,0", "mov~[rsp+0],eax", "jnz~FOO"]], [1, 0, 276, 1, 0, 10, 0, 0, 31, 34, 0.0, ["mov     rdi, cs:page_size", "lea     rdx, [rdi+2]", "mov     rdi, 7FFFFFFFFFFFFFFFh", "add     rdx, rdx", "neg     rdx", "cmp     rdx, rdi", "cmova   rdx, rdi", "cmp     rax, rdx", "setnbe  dl", "movzx   edx, dl"], ["mov~rdi,<TAG>", "lea~rdx,[rdi+0]", "mov~rdi,0", "add~rdx,rdx", "neg~rdx", "cmp~rdx,rdi", "cmova~rdx,rdi", "cmp~rax,rdx", "setnbe~dl", "movzx~edx,dl"]], [1, 0, 276, 0, 0, 4, 1, 1, 30, 34, 0.017144848135332565, ["test    rax, rax", "movzx   ecx, [rsp+118h+var_D9]", "mov     edx, 1", "jz      short loc_3412"], ["test~rax,rax", "movzx~ecx,[rsp+0]", "mov~edx,0", "jz~FOO"]], [2, 0, 127, 0, 1, 8, 1, 2, 31, -1, 0.005694925028835064, ["mov     rax, [rsp+118h+var_100]", "mov     rdx, rbp; stat_buf", "mov     esi, 1; fildes", "mov     edi, 1; ver", "mov     r12d, [rax]", "call    ___fxstat", "test    eax, eax", "jz      short loc_2A4D"], ["mov~rax,[rsp+0]", "mov~rdx,rbp", "mov~esi,0", "mov~edi,0", "mov~r12d,<TAG>", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 128, 0, 1, 5, 1, 2, 30, -1, 0.010524798154555941, ["mov     rsi, size; length", "mov     edi, 1; fd", "call    _ftruncate", "test    eax, eax", "jz      loc_2245"], ["mov~rsi,size", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 146, 0, 0, 1, 0, 1, 24, -1, 0.0035202806612841214, ["jmp     loc_2123"], ["jmp~FOO"]], [1, 0, 148, 1, 0, 6, 0, 1, 23, -1, 0.003412149173394848, ["movzx   edx, byte ptr [rax]", "add     rax, 1", "movzx   edx, byte ptr [rcx+rdx]", "mov     [rax-1], dl", "cmp     rsi, rax", "jnz     short loc_28F0"], ["movzx~edx,<TAG>", "add~rax,0", "movzx~edx,<TAG>", "mov~[rax-1]+0],dl", "cmp~rsi,rax", "jnz~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 31, -1, 0.0, ["mov     edi, [rsp+118h+code]; code", "call    quit"], ["mov~edi,[rsp+0]", "call~FOO"]], [1, 0, 109, 0, 0, 2, 0, 1, 30, -1, 0.23048827374086892, ["cmp     cs:max_records, 0", "jz      loc_2610"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 40, -1, 0.0007148692810457517, ["jmp     loc_2610"], ["jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 41, -1, 1.8021914648212227e-05, ["jmp     loc_2610"], ["jmp~FOO"]], [1, 0, 160, 0, 0, 2, 1, 1, 18, -1, 0.24221453287197234, ["test    r15b, 40h", "jz      loc_2890"], ["test~r15b,0", "jz~FOO"]], [1, 0, 164, 0, 0, 2, 1, 1, 17, -1, 0.24038831218762016, ["test    r15b, 1", "jz      short loc_20AA"], ["test~r15b,0", "jz~FOO"]], [1, 0, 161, 0, 0, 1, 0, 0, 20, -1, 0.003868704344482891, ["mov     cs:translation_needed, 1"], ["mov~<TAG>,0"]], [1, 0, 23, 0, 0, 2, 1, 1, 37, -1, 0.006379757785467129, ["test    byte ptr cs:conversions_mask, 10h", "jz      loc_2DEA"], ["test~<TAG>,0", "jz~FOO"]], [1, 0, 24, 0, 0, 2, 0, 1, 36, -1, 0.02959799115724721, ["cmp     cs:col, 0", "jz      loc_2DEA"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 108, 0, 0, 3, 1, 1, 39, -1, 0.02675052864282968, ["mov     r15d, cs:conversions_mask", "test    r15d, 400h", "jz      loc_22D8"], ["mov~r15d,<TAG>", "test~r15d,0", "jz~FOO"]], [1, 0, 108, 0, 0, 3, 0, 1, 38, -1, 0.01662221261053441, ["mov     eax, cs:input_seek_errno", "cmp     eax, 1Dh", "jz      loc_280D"], ["mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 108, 0, 0, 2, 0, 1, 41, -1, 0.01939558503139818, ["cmp     r14, rax", "jz      loc_280D"], ["cmp~r14,rax", "jz~FOO"]], [1, 0, 108, 0, 1, 7, 2, 1, 44, -1, 0.009539600153787004, ["mov     rdi, cs:input_file; filename", "xor     esi, esi; fdesc", "mov     ecx, 1; whence", "mov     rdx, r14; offset", "call    skip_via_lseek", "test    rax, rax", "jns     loc_280D"], ["mov~rdi,<TAG>", "xor~esi,esi", "mov~ecx,0", "mov~rdx,r14", "call~FOO", "test~rax,rax", "jns~FOO"]], [2, 0, 133, 0, 3, 15, 2, 4, 28, -1, 0.0, ["mov     rdi, cs:output_file; name", "call    quote", "lea     rsi, aOpeningS; \"opening %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     opts, rax", "call    _dcgettext", "mov     rdx, rax; format", "mov     rax, [rsp+118h+var_100]", "mov     rcx, r12", "mov     edi, 1; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error", "jmp     loc_222C"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~opts,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~rcx,r12", "mov~edi,0", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [3, 0, 134, 0, 1, 7, 2, 2, 27, -1, 0.005010092272202999, ["mov     edx, r12d", "mov     ecx, 1B6h; mode", "mov     edi, 1; desired_fd", "or      edx, 1; flags", "call    fd_reopen", "test    eax, eax", "js      loc_2FE1"], ["mov~edx,r12d", "mov~ecx,0", "mov~edi,0", "or~edx,0", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 41, -1, 0.003436178392925798, ["mov     rax, [rsp+118h+var_100]", "cmp     dword ptr [rax], 4", "jnz     loc_3228"], ["mov~rax,[rsp+0]", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 6, 0, 1, 4, 1, 2, 40, -1, 0.01008626489811611, ["mov     edi, 1; fd", "call    _fsync", "test    eax, eax", "jnz     short loc_2E15"], ["mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 170, 0, 0, 5, 2, 1, 14, -1, 0.23692810457516342, ["mov     eax, r15d", "and     eax, 18h", "lea     edx, [rax-1]", "test    edx, eax", "jnz     loc_2B27"], ["mov~eax,r15d", "and~eax,0", "lea~edx,[rax-1]+0]", "test~edx,eax", "jnz~FOO"]], [2, 0, 171, 0, 2, 11, 3, 3, 14, -1, 0.0, ["lea     rsi, aCannotCombineA; \"cannot combine any two of {ascii,ebcdic\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "mov     r15d, cs:conversions_mask", "jmp     loc_2014"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~r15d,<TAG>", "jmp~FOO"]], [1, 0, 276, 0, 0, 5, 2, 1, 31, 33, 0.02130190311418685, ["or      edx, ecx", "mov     r12, rax", "mov     [rsp+118h+var_D9], dl", "and     [rsp+118h+var_D9], 1", "jmp     loc_30F1"], ["or~edx,ecx", "mov~r12,rax", "mov~[rsp+0],dl", "and~[rsp+0],0", "jmp~FOO"]], [2, 0, 276, 2, 0, 4, 0, 1, 17, 22, 0.06395376778162246, ["add     rax, 1", "add     rdx, 1", "cmp     [rax-1], cl", "jnz     loc_2832"], ["add~rax,0", "add~rdx,0", "cmp~[rax-1]+0],cl", "jnz~FOO"]], [0, 0, 276, 0, 0, 3, 1, 1, 18, 23, 0.008590445982314494, ["movzx   ecx, byte ptr [rdx]", "test    cl, cl", "jnz     short loc_2550"], ["movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [1, 0, 276, 0, 0, 4, 0, 0, 16, 23, 0.061106305267204925, ["lea     rdx, aIflag; \"iflag\"", "mov     rax, r15", "mov     ecx, 69h ; 'i'", "nop     dword ptr [rax+00000000h]"], ["lea~rdx,<TAG>", "mov~rax,r15", "mov~ecx,0", "nop~[word ptr [rax+0]"]], [0, 0, 108, 0, 0, 2, 1, 1, 40, -1, 0.011780324875048058, ["test    r12, r12", "jnz     loc_22D8"], ["test~r12,r12", "jnz~FOO"]], [0, 0, 135, 0, 0, 2, 0, 1, 27, -1, 2.4029219530949635e-05, ["mov     rsi, cs:output_file", "jmp     loc_220F"], ["mov~rsi,<TAG>", "jmp~FOO"]], [0, 0, 276, 0, 0, 3, 1, 1, 32, 10, 0.014501633986928105, ["movzx   edx, byte ptr [rdx]", "test    dl, dl", "jz      short loc_3435"], ["movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [0, 0, 276, 0, 0, 3, 1, 1, 31, 10, 0.012651384083044982, ["movzx   esi, byte ptr [rcx]", "test    sil, sil", "jz      loc_3425"], ["movzx~esi,<TAG>", "test~sil,sil", "jz~FOO"]], [0, 0, 108, 0, 0, 2, 1, 1, 41, -1, 0.009341359092656671, ["xor     r12d, r12d", "jmp     loc_234F"], ["xor~r12d,r12d", "jmp~FOO"]], [0, 1, 7, 0, 0, 2, 1, 1, 39, -1, 0.017355103806228376, ["and     r15d, 8000h", "jnz     short loc_2E23"], ["and~r15d,<STR>", "jnz~FOO"]], [1, 0, 168, 0, 0, 5, 2, 1, 15, -1, 0.23817762399077277, ["mov     eax, r15d", "and     eax, 60h", "lea     edx, [rax-1]", "test    edx, eax", "jnz     loc_2AF7"], ["mov~eax,r15d", "and~eax,0", "lea~edx,[rax-1]+0]", "test~edx,eax", "jnz~FOO"]], [2, 0, 169, 0, 2, 11, 3, 3, 15, -1, 0.0, ["lea     rsi, aCannotCombineB; \"cannot combine block and unblock\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "mov     r15d, cs:conversions_mask", "jmp     loc_2025"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~r15d,<TAG>", "jmp~FOO"]], [1, 0, 36, 0, 0, 2, 1, 1, 35, -1, 0.0273752883506344, ["and     r15b, 10h", "jnz     loc_3133"], ["and~r15b,0", "jnz~FOO"]], [1, 0, 38, 0, 0, 2, 1, 1, 34, -1, 0.033034169550172965, ["test    r15b, 8", "jnz     loc_32BD"], ["test~r15b,0", "jnz~FOO"]], [0, 0, 132, 0, 0, 3, 1, 1, 27, -1, 0.02364475201845444, ["mov     r12, cs:seek_records", "test    r12, r12", "jz      short loc_2245"], ["mov~r12,<TAG>", "test~r12,r12", "jz~FOO"]], [3, 0, 136, 0, 1, 7, 2, 1, 26, -1, 0.019271434063821608, ["mov     edx, r12d", "mov     ecx, 1B6h; mode", "mov     edi, 1; desired_fd", "or      edx, 2; flags", "call    fd_reopen", "test    eax, eax", "jns     loc_222C"], ["mov~edx,r12d", "mov~ecx,0", "mov~edi,0", "or~edx,0", "call~FOO", "test~eax,eax", "jns~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 40, -1, 0.004337274125336409, ["jmp     loc_25D0"], ["jmp~FOO"]], [1, 0, 108, 0, 1, 6, 3, 2, 40, -1, 0.021077630398564653, ["xor     esi, esi; offset", "xor     edi, edi; fd", "mov     edx, 1; whence", "call    _lseek", "test    rax, rax", "js      loc_297C"], ["xor~esi,esi", "xor~edi,edi", "mov~edx,0", "call~FOO", "test~rax,rax", "js~FOO"]], [1, 0, 108, 0, 0, 3, 0, 1, 45, -1, 0.003027681660899654, ["mov     rax, [rsp+118h+var_100]", "cmp     dword ptr [rax], 0", "jnz     loc_297C"], ["mov~rax,[rsp+0]", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 108, 0, 2, 10, 4, 3, 46, -1, 0.0, ["lea     rsi, aCannotWorkArou; \"cannot work around kernel bug after all\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_297C"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 108, 0, 0, 1, 0, 0, 39, -1, 0.003712514417531718, ["mov     [rbx], eax"], ["mov~<TAG>,eax"]], [1, 0, 30, 1, 0, 1, 0, 0, 38, -1, 0.0009731833910034603, ["add     rbp, 1"], ["add~rbp,0"]], [0, 0, 30, 0, 0, 7, 0, 0, 37, -1, 0.009263264129181084, ["lea     rax, [rsi+1]", "movzx   ecx, byte ptr cs:space_character; \" \"", "cmp     rax, cs:output_blocksize", "mov     rdx, cs:obuf", "mov     cs:oc, rax", "mov     [rdx+rsi], cl", "jb      short loc_2E3B"], ["lea~rax,[rsi+0]", "movzx~ecx,<TAG>", "cmp~rax,<TAG>", "mov~rdx,<TAG>", "mov~<TAG>,rax", "mov~<TAG>,cl", "jb~FOO"]], [0, 0, 30, 0, 1, 1, 0, 1, 39, -1, 0.0003364090734332949, ["call    write_output"], ["call~FOO"]], [1, 0, 131, 0, 0, 2, 1, 1, 28, -1, 0.012951749327181853, ["test    byte ptr cs:conversions_mask+1, 2", "jz      loc_29B9"], ["test~<TAG>,0", "jz~FOO"]], [0, 0, 108, 5, 1, 21, 0, 1, 44, -1, 0.008698577470203767, ["mov     rbx, cs:output_blocksize", "mov     r8, cs:oc", "mov     rsi, r14; src", "mov     rcx, rbx", "mov     rdi, r8", "mov     [rsp+118h+name], r8", "sub     rcx, r8", "cmp     rcx, r15", "cmova   rcx, r15", "add     rdi, cs:obuf; dest", "mov     rdx, rcx; n", "mov     [rsp+118h+invalid], rcx", "call    _memcpy", "mov     rcx, [rsp+118h+invalid]", "mov     r8, [rsp+118h+name]", "sub     r15, rcx", "add     r14, rcx", "add     rcx, r8", "cmp     rbx, rcx", "mov     cs:oc, rcx", "jbe     short loc_23E0"], ["mov~rbx,<TAG>", "mov~r8,<TAG>", "mov~rsi,r14", "mov~rcx,rbx", "mov~rdi,r8", "mov~[rsp+0],r8", "sub~rcx,r8", "cmp~rcx,r15", "cmova~rcx,r15", "add~rdi,<TAG>", "mov~rdx,rcx", "mov~[rsp+0],rcx", "call~FOO", "mov~rcx,[rsp+0]", "mov~r8,[rsp+0]", "sub~r15,rcx", "add~r14,rcx", "add~rcx,r8", "cmp~rbx,rcx", "mov~<TAG>,rcx", "jbe~FOO"]], [1, 0, 108, 0, 0, 2, 1, 1, 43, -1, 0.014429546328335256, ["and     ecx, 10h", "jz      short loc_23EA"], ["and~ecx,0", "jz~FOO"]], [0, 0, 108, 0, 0, 2, 1, 1, 45, -1, 0.0020725201845444062, ["test    r15, r15", "jnz     short loc_23EA"], ["test~r15,r15", "jnz~FOO"]], [0, 0, 108, 0, 1, 3, 1, 2, 45, -1, 0.0020725201845444062, ["call    write_output", "test    r15, r15", "jz      short loc_2448"], ["call~FOO", "test~r15,r15", "jz~FOO"]], [0, 0, 276, 0, 0, 3, 1, 1, 36, 6, 0.011882449058054594, ["movzx   edx, byte ptr [rdx]", "test    dl, dl", "jz      short loc_33CC"], ["movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [1, 0, 166, 0, 0, 5, 2, 1, 16, -1, 0.23933102652825836, ["mov     eax, r15d", "and     eax, 3000h", "lea     edx, [rax-1]", "test    edx, eax", "jz      short loc_2070"], ["mov~eax,r15d", "and~eax,0", "lea~edx,[rax-1]+0]", "test~edx,eax", "jz~FOO"]], [2, 0, 167, 0, 2, 11, 3, 3, 16, -1, 0.0, ["lea     rsi, aCannotCombineL; \"cannot combine lcase and ucase\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "mov     r15d, cs:conversions_mask", "jmp     loc_2036"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~r15d,<TAG>", "jmp~FOO"]], [2, 0, 126, 0, 3, 14, 2, 3, 32, -1, 0.0, ["mov     rdi, cs:output_file; name", "call    quote", "lea     rsi, aCannotFstatS; \"cannot fstat %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbp, rax", "call    _dcgettext", "mov     rdx, rax; format", "mov     rax, [rsp+118h+var_100]", "mov     rcx, rbp", "mov     edi, 1; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbp,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~rcx,rbp", "mov~edi,0", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 5, -1, 0.0, ["mov     edi, 1; status", "call    usage"], ["mov~edi,0", "call~FOO"]], [4, 1, 280, 1, 8, 42, 4, 9, 4, 35, 0.030276816608996542, ["mov     rdi, [argv]; argv0", "lea     r13, trans_table", "call    set_program_name", "lea     rsi, aWrittenBySSAnd+1Bh; locale", "mov     edi, 6; category", "call    _setlocale", "lea     rsi, dirname; \"/usr/local/share/locale\"", "lea     rdi, package; \"coreutils\"", "call    _bindtextdomain", "lea     rdi, package; \"coreutils\"", "call    _textdomain", "lea     rdi, maybe_close_stdout", "call    atexit", "call    _getpagesize", "cdqe", "push    0", "mov     r8, cs:Version; version", "mov     cs:page_size, rax", "lea     rax, aStuartKemp; \"Stuart Kemp\"", "lea     r9, usage; usage_func", "lea     rcx, package; \"coreutils\"", "lea     rdx, command_name; \"dd\"", "mov     rsi, argv; argv", "push    rax", "lea     rax, aDavidMackenzie; \"David MacKenzie\"", "mov     edi, r12d; argc", "push    rax", "lea     rax, aPaulRubin; \"Paul Rubin\"", "push    rax", "xor     eax, eax", "call    parse_long_options", "lea     rdx, aWrittenBySSAnd+1Bh; shortopts", "add     rsp, 20h", "xor     r8d, r8d; longind", "xor     ecx, ecx; longopts", "mov     rsi, argv; argv", "mov     edi, r12d; argc", "mov     cs:close_stdout_required, 0", "call    _getopt_long", "xor     edx, edx", "cmp     eax, 0FFFFFFFFh", "jnz     loc_2648"], ["mov~rdi,<TAG>", "lea~r13,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "call~FOO", "cdqe~", "push~0", "mov~r8,<TAG>", "mov~<TAG>,rax", "lea~rax,<TAG>", "lea~r9,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,argv", "push~rax", "lea~rax,<TAG>", "mov~edi,r12d", "push~rax", "lea~rax,<TAG>", "push~rax", "xor~eax,eax", "call~FOO", "lea~rdx,<TAG>", "add~rsp,<STR>", "xor~r8d,r8d", "xor~ecx,ecx", "mov~rsi,argv", "mov~edi,r12d", "mov~<TAG>,0", "call~FOO", "xor~edx,edx", "cmp~eax,0", "jnz~FOO"]], [1, 0, 1, 0, 3, 13, 4, 3, 10, -1, 0.001117358708189158, ["mov     rdi, r15; name", "call    quote", "lea     rsi, aUnrecognizedOp; \"unrecognized operand %s\"", "mov     rbx, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,r15", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 276, 0, 0, 3, 0, 1, 25, 17, 0.014249327181853134, ["movzx   edx, byte ptr [rsi]", "cmp     dl, 3Dh ; '='", "jz      short loc_3258"], ["movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [1, 0, 276, 1, 0, 5, 1, 1, 24, 17, 0.012675413302575933, ["lea     rdi, aInvalidStatusF+13h; \"\"", "add     rdx, 1", "movzx   ecx, byte ptr [rdx+rdi]", "test    cl, cl", "jz      loc_3248"], ["lea~rdi,<TAG>", "add~rdx,0", "movzx~ecx,<TAG>", "test~cl,cl", "jz~FOO"]], [0, 0, 108, 0, 0, 2, 0, 1, 46, -1, 0.003748558246828143, ["mov     r15d, cs:conversions_mask", "jmp     loc_22D8"], ["mov~r15d,<TAG>", "jmp~FOO"]], [0, 0, 276, 0, 0, 2, 1, 1, 26, 16, 0.0004925990003844676, ["test    dl, dl", "jnz     loc_3073"], ["test~dl,dl", "jnz~FOO"]], [2, 0, 276, 2, 0, 4, 0, 1, 19, 20, 0.06050557477893118, ["add     rax, 1", "add     rdx, 1", "cmp     [rax-1], cl", "jnz     loc_2CED"], ["add~rax,0", "add~rdx,0", "cmp~[rax-1]+0],cl", "jnz~FOO"]], [0, 0, 276, 0, 0, 3, 1, 1, 20, 21, 0.008734621299500192, ["movzx   ecx, byte ptr [rdx]", "test    cl, cl", "jnz     short loc_2848"], ["movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [1, 0, 276, 0, 0, 4, 0, 0, 18, 21, 0.0577301999231065, ["lea     rdx, aOflag; \"oflag\"", "mov     rax, r15", "mov     ecx, 6Fh ; 'o'", "nop     dword ptr [rax+00000000h]"], ["lea~rdx,<TAG>", "mov~rax,r15", "mov~ecx,0", "nop~[word ptr [rax+0]"]], [0, 0, 108, 0, 0, 2, 1, 1, 41, -1, 0.008686562860438294, ["test    r15, r15", "jz      loc_23A2"], ["test~r15,r15", "jz~FOO"]], [1, 0, 108, 0, 0, 2, 0, 1, 40, -1, 0.058619281045751634, ["cmp     cs:translation_needed, 0", "jnz     loc_2652"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 276, 0, 0, 4, 1, 1, 28, 34, 0.016640234525182623, ["test    rax, rax", "movzx   ecx, [rsp+118h+var_D9]", "mov     edx, 1", "jz      short loc_30DF"], ["test~rax,rax", "movzx~ecx,[rsp+0]", "mov~edx,0", "jz~FOO"]], [1, 0, 276, 0, 0, 3, 0, 1, 27, 15, 0.013276143790849673, ["movzx   edx, byte ptr [rdx]", "cmp     dl, 3Dh ; '='", "jz      short loc_30AC"], ["movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [0, 0, 276, 0, 0, 2, 1, 1, 28, 14, 0.000396482122260669, ["test    dl, dl", "jnz     loc_3300"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 22, 0, 0, 8, 0, 0, 38, -1, 0.0032559592464436755, ["lea     rax, [rsi+1]", "movzx   ecx, byte ptr cs:newline_character; \"\\n\"", "cmp     rax, cs:output_blocksize", "mov     rdx, cs:obuf", "mov     cs:oc, rax", "mov     [rdx+rsi], cl", "mov     rsi, rax", "jb      loc_2DEA"], ["lea~rax,[rsi+0]", "movzx~ecx,<TAG>", "cmp~rax,<TAG>", "mov~rdx,<TAG>", "mov~<TAG>,rax", "mov~<TAG>,cl", "mov~rsi,rax", "jb~FOO"]], [1, 0, 276, 1, 0, 10, 0, 0, 27, 34, 0.0, ["mov     rdi, cs:page_size", "lea     rdx, [rdi+2]", "mov     rdi, 7FFFFFFFFFFFFFFFh", "add     rdx, rdx", "neg     rdx", "cmp     rdx, rdi", "cmova   rdx, rdi", "cmp     rax, rdx", "setnbe  dl", "movzx   edx, dl"], ["mov~rdi,<TAG>", "lea~rdx,[rdi+0]", "mov~rdi,0", "add~rdx,rdx", "neg~rdx", "cmp~rdx,rdi", "cmova~rdx,rdi", "cmp~rax,rdx", "setnbe~dl", "movzx~edx,dl"]], [1, 0, 276, 0, 0, 4, 1, 1, 26, 34, 0.017421184159938485, ["test    rax, rax", "movzx   ecx, [rsp+118h+var_D9]", "mov     edx, 1", "jz      short loc_3292"], ["test~rax,rax", "movzx~ecx,[rsp+0]", "mov~edx,0", "jz~FOO"]], [3, 0, 125, 1, 0, 5, 2, 1, 32, -1, 0.004901960784313725, ["mov     eax, [rsp+118h+stdout_stat.st_mode]", "and     eax, 0F000h", "sub     eax, 4000h", "test    eax, 0FFFFB000h", "jnz     loc_2245"], ["mov~eax,[rsp+0]", "and~eax,0", "sub~eax,0", "test~eax,0", "jnz~FOO"]], [2, 0, 0, 0, 4, 16, 3, 4, 33, -1, 0.0, ["mov     rdi, cs:output_file; name", "call    quote", "lea     rsi, aWritingToS; \"writing to %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbx, rax", "call    _dcgettext", "mov     rdx, rax; format", "mov     rax, [rsp+118h+var_100]", "xor     edi, edi; status", "mov     rcx, rbx", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error", "mov     edi, 1; code", "call    quit"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbx,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "xor~edi,edi", "mov~rcx,rbx", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "mov~edi,0", "call~FOO"]], [0, 0, 108, 0, 0, 3, 0, 0, 42, -1, 0.005803056516724337, ["lea     rcx, [rbp+r15+0]", "mov     rax, rbp", "nop     dword ptr [rax+rax+00h]"], ["lea~rcx,[rbp+0]", "mov~rax,rbp", "nop~[word ptr [rax+0]"]], [1, 0, 276, 0, 0, 3, 0, 1, 21, 21, 0.010116301422529797, ["movzx   eax, byte ptr [rax]", "cmp     al, 3Dh ; '='", "jz      short loc_286F"], ["movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [2, 0, 182, 0, 0, 3, 1, 1, 8, -1, 0.031706555171088044, ["or      cs:conversions_mask, 800h", "cmp     cs:input_blocksize, 0", "jnz     short loc_2473"], ["or~<TAG>,0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 277, 0, 0, 3, 0, 1, 7, 32, 0.039816416762783545, ["mov     eax, cs:optind@@GLIBC_2_2_5", "cmp     r12d, eax", "jle     loc_2454"], ["mov~eax,<TAG>", "cmp~r12d,eax", "jle~FOO"]], [0, 0, 184, 0, 0, 2, 1, 1, 16, -1, 0.19911812764321415, ["test    r12, r12", "jz      loc_2454"], ["test~r12,r12", "jz~FOO"]], [0, 1, 181, 0, 0, 1, 0, 0, 9, -1, 0.0, ["mov     cs:input_blocksize, 200h"], ["mov~<TAG>,<STR>"]], [2, 0, 165, 0, 2, 10, 3, 2, 17, -1, 0.0, ["lea     rsi, msgid; \"cannot combine excl and nocreat\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "mov     r15d, cs:conversions_mask"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~r15d,<TAG>"]], [1, 0, 108, 1, 0, 3, 0, 0, 45, -1, 0.0029075355632449057, ["imul    rdx, -2", "lea     rsi, [rax+rdx]", "nop     word ptr [rax+rax+00000000h]"], ["imul~rdx,,0", "lea~rsi,<TAG>", "nop~[ord ptr [rax+0]"]], [1, 0, 108, 0, 0, 4, 0, 1, 44, -1, 0.01356449442522107, ["mov     rdx, r15", "lea     rax, [r10+r15]", "shr     rdx, 1", "jz      short loc_26E0"], ["mov~rdx,r15", "lea~rax,<TAG>", "shr~rdx,0", "jz~FOO"]], [0, 0, 276, 0, 0, 3, 0, 1, 23, 16, 0.052479815455594006, ["cmp     [r15+rdx-1], cl", "lea     rsi, [r15+rdx]", "jz      short loc_3051"], ["cmp~[r15+0],cl", "lea~rsi,<TAG>", "jz~FOO"]], [3, 0, 276, 0, 1, 9, 0, 2, 22, 17, 0.04989667435601692, ["mov     rsi, [rsp+118h+invalid]; invalid", "mov     rdi, r10; str", "mov     [rsp+118h+name], r10", "mov     [rsp+118h+var_D9], 0", "call    parse_integer", "mov     edx, 1", "mov     ecx, 69h ; 'i'", "mov     r10, [rsp+118h+name]", "jmp     short loc_3068"], ["mov~rsi,[rsp+0]", "mov~rdi,r10", "mov~[rsp+0],r10", "mov~[rsp+0],0", "call~FOO", "mov~edx,0", "mov~ecx,0", "mov~r10,[rsp+0]", "jmp~FOO"]], [0, 0, 30, 0, 0, 3, 0, 0, 36, -1, 0.013576509034986544, ["cmp     rbp, cs:conversion_blocksize", "mov     rsi, cs:oc", "jnb     short loc_2EAC"], ["cmp~rbp,<TAG>", "mov~rsi,<TAG>", "jnb~FOO"]], [0, 0, 276, 0, 0, 2, 1, 1, 22, 20, 0.0006848327566320646, ["test    al, al", "jnz     loc_2CED"], ["test~al,al", "jnz~FOO"]], [1, 0, 180, 0, 0, 2, 0, 1, 9, -1, 0.03353277585544022, ["cmp     cs:output_blocksize, 0", "jnz     loc_1F96"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 108, 0, 0, 1, 0, 1, 44, -1, 0.0025350826605151865, ["jmp     loc_23A2"], ["jmp~FOO"]], [1, 0, 108, 1, 0, 6, 0, 1, 43, -1, 0.0041690695886197615, ["movzx   edx, byte ptr [rax]", "add     rax, 1", "movzx   edx, byte ptr [r13+rdx+0]", "mov     [rax-1], dl", "cmp     rax, rcx", "jnz     short loc_2668"], ["movzx~edx,<TAG>", "add~rax,0", "movzx~edx,[yte ptr [r13+0]", "mov~[rax-1]+0],dl", "cmp~rax,rcx", "jnz~FOO"]], [2, 0, 0, 0, 3, 13, 4, 3, 13, -1, 0.0, ["lea     rsi, aInvalidOutputF; \"invalid output flag\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "lea     r8, aFullblock; \"'fullblock'\"", "lea     rdx, format; \"%s: %s\"", "mov     rcx, rax", "xor     edi, edi; status", "xor     esi, esi; errnum", "xor     eax, eax", "call    _error", "mov     edi, 1; status", "call    usage"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "lea~r8,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "xor~edi,edi", "xor~esi,esi", "xor~eax,eax", "call~FOO", "mov~edi,0", "call~FOO"]], [1, 0, 156, 1, 0, 6, 0, 1, 21, -1, 0.003412149173394848, ["movzx   edx, byte ptr [rax]", "add     rax, 1", "mov     edx, [rsi+rdx*4]", "mov     [rax-1], dl", "cmp     rcx, rax", "jnz     short loc_28B0"], ["movzx~edx,<TAG>", "add~rax,0", "mov~edx,<TAG>", "mov~[rax-1]+0],dl", "cmp~rcx,rax", "jnz~FOO"]], [0, 0, 156, 0, 1, 4, 0, 1, 20, -1, 0.0030877547097270283, ["call    ___ctype_tolower_loc", "mov     rsi, [rax]", "lea     rax, trans_table", "lea     rcx, [rax+100h]"], ["call~FOO", "mov~rsi,<TAG>", "lea~rax,<TAG>", "lea~rcx,[rax+0]"]], [0, 0, 276, 0, 0, 3, 1, 1, 33, 8, 0.009767877739331026, ["movzx   esi, byte ptr [rcx]", "test    sil, sil", "jz      loc_3484"], ["movzx~esi,<TAG>", "test~sil,sil", "jz~FOO"]], [2, 0, 276, 2, 0, 4, 0, 1, 32, 7, 0.021458093041138025, ["add     rdx, 1", "add     rcx, 1", "cmp     [rdx-1], sil", "jz      short loc_3379"], ["add~rdx,0", "add~rcx,0", "cmp~[rdx-1]+0],sil", "jz~FOO"]], [1, 0, 123, 2, 2, 14, 2, 3, 26, -1, 0.24088091118800461, ["call    gethrxtime", "mov     rdx, cs:page_size", "mov     cs:start_time, rax", "mov     rax, cs:input_blocksize", "lea     rdi, [rax+rdx*2+3]; n", "call    xmalloc", "mov     rcx, cs:page_size", "xor     edx, edx", "lea     rbp, [rax+rcx+1]", "mov     rax, rbp", "div     rcx", "sub     rbp, rdx", "test    byte ptr cs:conversions_mask+1, 8", "jnz     loc_2B87"], ["call~FOO", "mov~rdx,<TAG>", "mov~<TAG>,rax", "mov~rax,<TAG>", "lea~rdi,[rax+0]", "call~FOO", "mov~rcx,<TAG>", "xor~edx,edx", "lea~rbp,[rax+0]", "mov~rax,rbp", "div~,rcx", "sub~rbp,rdx", "test~<TAG>,0", "jnz~FOO"]], [2, 0, 124, 0, 3, 15, 2, 4, 33, -1, 0.0, ["mov     rdi, cs:output_file; name", "call    quote", "lea     rsi, aFailedToTrunca; \"failed to truncate to %lu bytes in outp\"...", "mov     rbp, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r8, rbp", "mov     rdx, rax; format", "mov     rcx, size", "mov     esi, r12d; errnum", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_2245"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r8,rbp", "mov~rdx,rax", "mov~rcx,size", "mov~esi,r12d", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 124, 0, 2, 10, 1, 3, 25, -1, 0.219002306805075, ["lea     rsi, aStandardOutput; \"standard output\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     esi, r14d; add_flags", "mov     rdx, rax; name", "mov     edi, 1; fd", "mov     cs:output_file, rax", "call    set_fd_flags", "jmp     loc_2245"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~esi,r14d", "mov~rdx,rax", "mov~edi,0", "mov~<TAG>,rax", "call~FOO", "jmp~FOO"]], [0, 0, 276, 0, 0, 3, 1, 1, 34, 8, 0.011678200692041523, ["movzx   edx, byte ptr [rdx]", "test    dl, dl", "jz      short loc_3494"], ["movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [0, 0, 163, 0, 0, 4, 0, 0, 18, -1, 0.002955594002306805, ["lea     rax, trans_table", "lea     rcx, ebcdic_to_ascii", "lea     rsi, [rax+100h]", "nop     dword ptr [rax+rax+00h]"], ["lea~rax,<TAG>", "lea~rcx,<TAG>", "lea~rsi,[rax+0]", "nop~[word ptr [rax+0]"]], [0, 1, 179, 0, 0, 2, 0, 1, 10, -1, 0.0, ["mov     cs:output_blocksize, 200h", "jmp     loc_1F96"], ["mov~<TAG>,<STR>", "jmp~FOO"]], [0, 0, 121, 0, 0, 1, 0, 0, 27, -1, 0.11920895809304115, ["mov     cs:obuf, rbp"], ["mov~<TAG>,rbp"]], [2, 0, 276, 2, 0, 4, 0, 1, 25, 14, 0.044129661668589004, ["add     rdx, 1", "add     rcx, 1", "cmp     [rdx-1], sil", "jnz     loc_3300"], ["add~rdx,0", "add~rcx,0", "cmp~[rdx-1]+0],sil", "jnz~FOO"]], [0, 0, 276, 0, 0, 3, 1, 1, 26, 15, 0.011606113033448674, ["movzx   esi, byte ptr [rcx]", "test    sil, sil", "jnz     short loc_3082"], ["movzx~esi,<TAG>", "test~sil,sil", "jnz~FOO"]], [1, 0, 276, 0, 0, 3, 0, 0, 24, 15, 0.04164263744713572, ["lea     rcx, aObs; \"obs\"", "mov     rdx, r15", "mov     esi, 6Fh ; 'o'"], ["lea~rcx,<TAG>", "mov~rdx,r15", "mov~esi,0"]], [0, 0, 119, 0, 1, 10, 2, 2, 29, -1, 0.0060193194925028835, ["mov     r15, cs:input_blocksize", "mov     rsi, cs:input_file; file", "xor     edi, edi; fdesc", "mov     r8, rbp; buf", "mov     rdx, r12; records", "mov     r14, cs:input_offset", "mov     rcx, r15; blocksize", "call    skip", "test    rax, rax", "jnz     short loc_2CB5"], ["mov~r15,<TAG>", "mov~rsi,<TAG>", "xor~edi,edi", "mov~r8,rbp", "mov~rdx,r12", "mov~r14,<TAG>", "mov~rcx,r15", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 120, 0, 0, 3, 1, 1, 28, -1, 0.23933102652825836, ["mov     r12, cs:skip_records", "test    r12, r12", "jnz     loc_2C67"], ["mov~r12,<TAG>", "test~r12,r12", "jnz~FOO"]], [0, 1, 157, 0, 0, 2, 1, 1, 19, -1, 0.23803344867358708, ["test    r15b, 20h", "jz      loc_20E9"], ["test~r15b,<STR>", "jz~FOO"]], [0, 0, 121, 3, 1, 11, 1, 2, 27, -1, 0.11920895809304115, ["add     rcx, cs:output_blocksize", "lea     rdi, [rcx-1]; n", "call    xmalloc", "mov     rsi, cs:page_size", "xor     edx, edx", "lea     rcx, [rax+rsi-1]", "mov     rax, rcx", "div     rsi", "sub     rcx, rdx", "mov     cs:obuf, rcx", "jmp     loc_2294"], ["add~rcx,<TAG>", "lea~rdi,[rcx-1]+0]", "call~FOO", "mov~rsi,<TAG>", "xor~edx,edx", "lea~rcx,[rax+0]", "mov~rax,rcx", "div~,rsi", "sub~rcx,rdx", "mov~<TAG>,rcx", "jmp~FOO"]], [0, 0, 276, 0, 0, 2, 0, 1, 35, 33, 0.01553489042675894, ["mov     cs:skip_records, rax", "jmp     loc_30F1"], ["mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 276, 0, 0, 2, 0, 1, 35, 7, 0.0001441753171856978, ["cmp     dl, 3Dh ; '='", "jnz     loc_3393"], ["cmp~dl,0", "jnz~FOO"]], [1, 0, 163, 1, 0, 6, 0, 1, 19, -1, 0.003424163783160323, ["movzx   edx, byte ptr [rax]", "add     rax, 1", "movzx   edx, byte ptr [rcx+rdx]", "mov     [rax-1], dl", "cmp     rsi, rax", "jnz     short loc_2090"], ["movzx~edx,<TAG>", "add~rax,0", "movzx~edx,<TAG>", "mov~[rax-1]+0],dl", "cmp~rsi,rax", "jnz~FOO"]], [1, 0, 276, 0, 0, 3, 0, 0, 12, 27, 0.06677720107650904, ["lea     rdx, aOf; \"of\"", "mov     rax, r15", "mov     ecx, 6Fh ; 'o'"], ["lea~rdx,<TAG>", "mov~rax,r15", "mov~ecx,0"]], [2, 0, 276, 2, 0, 4, 0, 1, 11, 28, 0.07707372164552095, ["add     rdx, 1", "add     rcx, 1", "cmp     [rdx-1], al", "jnz     loc_2498"], ["add~rdx,0", "add~rcx,0", "cmp~[rdx-1]+0],al", "jnz~FOO"]], [1, 0, 276, 0, 0, 2, 0, 1, 14, 28, 0.0009731833910034603, ["cmp     al, 3Dh ; '='", "jnz     loc_2498"], ["cmp~al,0", "jnz~FOO"]], [1, 0, 276, 0, 0, 5, 2, 1, 27, 33, 0.02157823913879277, ["or      edx, ecx", "mov     cs:input_blocksize, rax", "mov     [rsp+118h+var_D9], dl", "and     [rsp+118h+var_D9], 1", "jmp     loc_30F1"], ["or~edx,ecx", "mov~<TAG>,rax", "mov~[rsp+0],dl", "and~[rsp+0],0", "jmp~FOO"]], [2, 0, 108, 1, 0, 5, 0, 0, 43, -1, 0.0, ["movzx   eax, cs:saved_char", "mov     r10, [rsp+118h+var_F0]", "add     r15, 1", "mov     cs:char_is_saved, 0", "mov     [rbp-1], al"], ["movzx~eax,<TAG>", "mov~r10,[rsp+0]", "add~r15,0", "mov~<TAG>,0", "mov~[rbp-1]+0],al"]], [1, 0, 108, 0, 0, 3, 0, 1, 42, -1, 0.020100442137639372, ["cmp     cs:char_is_saved, 0", "mov     r10, rbp", "jz      short loc_26A8"], ["cmp~<TAG>,0", "mov~r10,rbp", "jz~FOO"]], [1, 0, 276, 0, 0, 3, 0, 0, 35, 4, 0.006163494809688581, ["lea     rcx, aCount; \"count\"", "mov     rdx, r15", "mov     esi, 63h ; 'c'"], ["lea~rcx,<TAG>", "mov~rdx,r15", "mov~esi,0"]], [1, 0, 276, 0, 0, 2, 0, 1, 37, 5, 9.611687812379854e-05, ["cmp     dl, 3Dh ; '='", "jnz     loc_34A0"], ["cmp~dl,0", "jnz~FOO"]], [1, 0, 108, 0, 0, 2, 1, 1, 43, -1, 0.01683246828143022, ["test    r15b, 1", "jnz     loc_2931"], ["test~r15b,0", "jnz~FOO"]], [0, 0, 115, 0, 0, 3, 1, 1, 29, -1, 0.2362673010380623, ["mov     rdx, cs:seek_records; records", "test    rdx, rdx", "jnz     loc_2BBA"], ["mov~rdx,<TAG>", "test~rdx,rdx", "jnz~FOO"]], [0, 0, 118, 2, 0, 5, 0, 1, 30, -1, 0.0027153018069973086, ["mov     rax, r12", "imul    rax, r15", "add     rax, r14", "cmp     rax, cs:input_offset", "jz      loc_22A4"], ["mov~rax,r12", "imul~rax,r15", "add~rax,r14", "cmp~rax,<TAG>", "jz~FOO"]], [1, 0, 117, 0, 0, 2, 0, 1, 31, -1, 1.2014609765474818e-05, ["cmp     cs:input_offset_overflow, 1", "jz      loc_22A4"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 116, 0, 3, 14, 4, 4, 30, -1, 0.0006968473663975395, ["mov     rdi, cs:input_file; name", "call    quote", "lea     rsi, aSCannotSkipToS; \"%s: cannot skip to specified offset\"", "mov     r12, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_22A4"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 276, 2, 0, 4, 0, 1, 13, 26, 0.06976883890811227, ["add     rax, 1", "add     rdx, 1", "cmp     [rax-1], cl", "jnz     short loc_24D8"], ["add~rax,0", "add~rdx,0", "cmp~[rax-1]+0],cl", "jnz~FOO"]], [0, 0, 276, 0, 0, 3, 1, 1, 14, 27, 0.008302095347943099, ["movzx   ecx, byte ptr [rdx]", "test    cl, cl", "jnz     short loc_24A7"], ["movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [0, 0, 108, 1, 0, 2, 0, 1, 42, -1, 0.014441560938100732, ["sub     r14, rax", "js      loc_32DA"], ["sub~r14,rax", "js~FOO"]], [0, 0, 25, 0, 0, 1, 0, 0, 35, -1, 0.030883554402153002, ["mov     rsi, cs:oc"], ["mov~rsi,<TAG>"]], [1, 0, 108, 1, 0, 3, 0, 1, 42, -1, 0.006962466359092657, ["add     cs:w_full, 1", "mov     r15d, cs:conversions_mask", "jmp     loc_22D8"], ["add~<TAG>,0", "mov~r15d,<TAG>", "jmp~FOO"]], [2, 0, 276, 2, 0, 4, 0, 1, 36, 3, 0.00827806612841215, ["add     rdx, 1", "add     rcx, 1", "cmp     [rdx-1], sil", "jnz     loc_2619"], ["add~rdx,0", "add~rcx,0", "cmp~[rdx-1]+0],sil", "jnz~FOO"]], [0, 0, 276, 0, 0, 3, 1, 1, 37, 2, 0.010056228373702422, ["movzx   esi, byte ptr [rcx]", "test    sil, sil", "jnz     short loc_34AF"], ["movzx~esi,<TAG>", "test~sil,sil", "jnz~FOO"]], [1, 0, 114, 0, 1, 8, 1, 2, 30, -1, 0.008266051518646674, ["mov     r8, cs:obuf; buf", "mov     rcx, cs:output_blocksize; blocksize", "mov     edi, 1; fdesc", "mov     rsi, cs:output_file; file", "call    skip", "test    rax, rax", "mov     r12, rax", "jz      loc_22B4"], ["mov~r8,<TAG>", "mov~rcx,<TAG>", "mov~edi,0", "mov~rsi,<TAG>", "call~FOO", "test~rax,rax", "mov~r12,rax", "jz~FOO"]], [0, 0, 276, 0, 0, 3, 1, 1, 15, 27, 0.009467512495194156, ["movzx   eax, byte ptr [rax]", "test    al, al", "jz      short loc_24C6"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 108, 1, 0, 3, 0, 1, 42, -1, 0.006962466359092657, ["add     cs:w_partial, 1", "mov     r15d, cs:conversions_mask", "jmp     loc_22D8"], ["add~<TAG>,0", "mov~r15d,<TAG>", "jmp~FOO"]], [0, 0, 154, 0, 0, 1, 0, 1, 22, -1, 0.0037125144175317185, ["jmp     loc_20E2"], ["jmp~FOO"]], [1, 0, 276, 0, 0, 2, 0, 1, 16, 26, 0.0009010957324106113, ["cmp     al, 3Dh ; '='", "jnz     short loc_24D8"], ["cmp~al,0", "jnz~FOO"]], [1, 0, 282, 0, 1, 5, 1, 2, 3, 36, 0.02371683967704729, ["lea     rdi, caught_signals; set", "mov     esi, 2; signo", "call    _sigismember", "test    eax, eax", "jz      short loc_1E03"], ["lea~rdi,<TAG>", "mov~esi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 281, 0, 1, 7, 1, 1, 4, 36, 0.0, ["lea     rax, interrupt_handler", "xor     edx, edx; oact", "mov     rsi, rbp; act", "mov     edi, 2; sig", "mov     dword ptr [rsp+118h+stdout_stat.__glibc_reserved+10h], 0C0000000h", "mov     [rsp+118h+stdout_stat.st_dev], rax", "call    _sigaction"], ["lea~rax,<TAG>", "xor~edx,edx", "mov~rsi,rbp", "mov~edi,0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],rax", "call~FOO"]], [0, 0, 155, 0, 1, 5, 0, 1, 19, -1, 0.003051710880430604, ["call    ___ctype_toupper_loc", "mov     rsi, [rax]", "lea     rax, trans_table", "lea     rcx, [rax+100h]", "nop     word ptr [rax+rax+00h]"], ["call~FOO", "mov~rsi,<TAG>", "lea~rax,<TAG>", "lea~rcx,[rax+0]", "nop~[ord ptr [rax+0]"]], [1, 0, 149, 0, 0, 2, 1, 1, 21, -1, 0.24005190311418687, ["and     r15b, 4", "jz      loc_2138"], ["and~r15b,0", "jz~FOO"]], [1, 0, 152, 0, 0, 2, 1, 1, 20, -1, 0.24471357170319108, ["test    r15b, 2", "jz      loc_28C7"], ["test~r15b,0", "jz~FOO"]], [0, 0, 279, 0, 0, 1, 0, 0, 5, 34, 0.033400615148019994, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 276, 0, 0, 2, 0, 1, 16, 32, 0.01182237600922722, ["mov     cs:output_file, r10", "jmp     loc_1F76"], ["mov~<TAG>,r10", "jmp~FOO"]], [0, 0, 276, 0, 0, 3, 1, 1, 38, 1, 0.012098712033833142, ["movzx   edx, byte ptr [rdx]", "test    dl, dl", "jz      short loc_34D9"], ["movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [1, 0, 32, 0, 0, 2, 1, 1, 34, -1, 0.07358948481353308, ["and     r15b, 8", "jz      loc_2EA5"], ["and~r15b,0", "jz~FOO"]], [1, 0, 153, 0, 0, 1, 0, 0, 21, -1, 0.009191176470588236, ["mov     cs:translation_needed, 1"], ["mov~<TAG>,0"]], [0, 0, 108, 0, 0, 5, 1, 0, 31, -1, 0.22754469434832758, ["lea     rax, [rbp-1]", "mov     r15d, cs:conversions_mask", "xor     r12d, r12d", "mov     [rsp+118h+var_F0], rax", "nop     dword ptr [rax]"], ["lea~rax,[rbp-1]+0]", "mov~r15d,<TAG>", "xor~r12d,r12d", "mov~[rsp+0],rax", "nop~<TAG>"]], [0, 1, 9, 0, 0, 1, 1, 0, 41, -1, 0.00021626297577854672, ["or      cs:conversions_mask, 8000h"], ["or~<TAG>,<STR>"]], [2, 0, 11, 1, 0, 6, 1, 1, 40, -1, 0.006535947712418301, ["mov     rax, [rsp+118h+var_100]", "mov     eax, [rax]", "mov     dword ptr [rsp+118h+invalid], eax", "sub     eax, 16h", "and     eax, 0FFFFFFEFh", "jz      short loc_31E3"], ["mov~rax,[rsp+0]", "mov~eax,<TAG>", "mov~[word ptr [rsp+0],eax", "sub~eax,0", "and~eax,0", "jz~FOO"]], [2, 0, 10, 0, 3, 15, 3, 3, 41, -1, 0.0, ["mov     rdi, cs:output_file; name", "call    quote", "lea     rsi, aFdatasyncFaile; \"fdatasync failed for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbx, rax", "call    _dcgettext", "mov     rdx, rax; format", "mov     rax, [rsp+118h+var_100]", "mov     rcx, rbx", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error", "mov     [rsp+118h+code], 1"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbx,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~rcx,rbx", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "mov~[rsp+0],0"]], [2, 0, 288, 0, 1, 6, 1, 2, 1, 39, 1.2014609765474818e-05, ["xor     esi, esi; act", "mov     rdx, rbp; oact", "mov     edi, 0Ah; sig", "call    _sigaction", "cmp     [rsp+118h+stdout_stat.st_dev], 1", "jz      loc_1D13"], ["xor~esi,esi", "mov~rdx,rbp", "mov~edi,0", "call~FOO", "cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 289, 1, 2, 20, 2, 3, 0, 39, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12d, edi", "push    rbp", "push    rbx", "lea     argc, name; \"POSIXLY_CORRECT\"", "mov     rbx, argv", "sub     rsp, 0E8h", "mov     rax, fs:28h", "mov     [rsp+118h+var_40], rax", "xor     eax, eax", "call    _getenv", "lea     rdi, caught_signals; set", "mov     rbp, rax", "call    _sigemptyset", "test    rbp, rbp", "lea     rbp, [rsp+118h+stdout_stat]", "jz      loc_2AC6"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12d,edi", "push~rbp", "push~rbx", "lea~argc,<TAG>", "mov~rbx,argv", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "lea~rdi,<TAG>", "mov~rbp,rax", "call~FOO", "test~rbp,rbp", "lea~rbp,[rsp+0]", "jz~FOO"]], [1, 0, 276, 0, 0, 8, 0, 0, 29, 34, 0.0, ["mov     rdx, cs:page_size", "mov     rdi, 7FFFFFFFFFFFFFFFh", "neg     rdx", "cmp     rdx, rdi", "cmova   rdx, rdi", "cmp     rax, rdx", "setnbe  dl", "movzx   edx, dl"], ["mov~rdx,<TAG>", "mov~rdi,0", "neg~rdx", "cmp~rdx,rdi", "cmova~rdx,rdi", "cmp~rax,rdx", "setnbe~dl", "movzx~edx,dl"]], [1, 0, 108, 1, 0, 5, 0, 1, 46, -1, 0.0012735486351403307, ["movzx   edx, byte ptr [rax-2]", "sub     rax, 2", "mov     [rax+2], dl", "cmp     rax, rsi", "jnz     short loc_26D0"], ["movzx~edx,[yte ptr [rax-2]+0]", "sub~rax,0", "mov~[rax+0],dl", "cmp~rax,rsi", "jnz~FOO"]], [1, 0, 155, 1, 0, 6, 0, 1, 20, -1, 0.0033761053440984237, ["movzx   edx, byte ptr [rax]", "add     rax, 1", "mov     edx, [rsi+rdx*4]", "mov     [rax-1], dl", "cmp     rcx, rax", "jnz     short loc_20D0"], ["movzx~edx,<TAG>", "add~rax,0", "mov~edx,<TAG>", "mov~[rax-1]+0],dl", "cmp~rcx,rax", "jnz~FOO"]], [0, 0, 108, 0, 0, 2, 0, 1, 45, -1, 0.008662533640907343, ["lea     r14, [r10+1]", "jmp     loc_23B4"], ["lea~r14,[r10+0]", "jmp~FOO"]], [0, 0, 148, 0, 0, 4, 0, 0, 22, -1, 0.0032799884659746254, ["lea     rax, trans_table", "lea     rcx, ascii_to_ibm", "lea     rsi, [rax+100h]", "nop     word ptr [rax+rax+00000000h]"], ["lea~rax,<TAG>", "lea~rcx,<TAG>", "lea~rsi,[rax+0]", "nop~[ord ptr [rax+0]"]], [2, 0, 279, 1, 0, 4, 0, 1, 6, 33, 0.036620530565167245, ["mov     [r13+i+0], dl", "add     rdx, 1", "cmp     rdx, 100h", "jnz     short loc_1ED0"], ["mov~[r13+0],dl", "add~rdx,0", "cmp~rdx,0", "jnz~FOO"]], [1, 0, 276, 0, 0, 4, 2, 0, 29, 33, 0.02079728950403691, ["or      edx, ecx", "mov     cs:output_blocksize, rax", "mov     [rsp+118h+var_D9], dl", "and     [rsp+118h+var_D9], 1"], ["or~edx,ecx", "mov~<TAG>,rax", "mov~[rsp+0],dl", "and~[rsp+0],0"]], [0, 0, 108, 1, 0, 4, 0, 0, 32, -1, 0.2821510957324106, ["mov     rax, cs:r_full", "add     rax, cs:r_partial", "cmp     rax, cs:max_records", "jnb     loc_2D78"], ["mov~rax,<TAG>", "add~rax,<TAG>", "cmp~rax,<TAG>", "jnb~FOO"]], [0, 0, 108, 0, 1, 5, 0, 2, 44, -1, 0.0012254901960784314, ["mov     rsi, r15; nread", "mov     rdi, r14; buf", "call    copy_with_unblock", "mov     r15d, cs:conversions_mask", "jmp     loc_22D8"], ["mov~rsi,r15", "mov~rdi,r14", "call~FOO", "mov~r15d,<TAG>", "jmp~FOO"]], [0, 0, 108, 0, 1, 5, 0, 2, 43, -1, 0.01676038062283737, ["mov     rsi, r15; nread", "mov     rdi, r14; buf", "call    copy_with_block", "mov     r15d, cs:conversions_mask", "jmp     loc_22D8"], ["mov~rsi,r15", "mov~rdi,r14", "call~FOO", "mov~r15d,<TAG>", "jmp~FOO"]], [2, 0, 276, 2, 0, 4, 0, 1, 15, 24, 0.06704152249134948, ["add     rax, 1", "add     rdx, 1", "cmp     [rax-1], cl", "jnz     short loc_253A"], ["add~rax,0", "add~rdx,0", "cmp~[rax-1]+0],cl", "jnz~FOO"]], [0, 0, 276, 0, 0, 3, 1, 1, 16, 25, 0.008446270665128796, ["movzx   ecx, byte ptr [rdx]", "test    cl, cl", "jnz     short loc_24E7"], ["movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [1, 0, 276, 0, 0, 3, 0, 0, 14, 25, 0.0641219723183391, ["lea     rdx, aConv; \"conv\"", "mov     rax, r15", "mov     ecx, 63h ; 'c'"], ["lea~rdx,<TAG>", "mov~rax,r15", "mov~ecx,0"]], [1, 0, 276, 0, 0, 2, 0, 1, 39, 1, 2.4029219530949635e-05, ["cmp     dl, 3Dh ; '='", "jnz     loc_2619"], ["cmp~dl,0", "jnz~FOO"]], [1, 0, 276, 0, 0, 2, 0, 1, 28, 32, 0.15139609765474818, ["cmp     [rsp+118h+var_D9], 0", "jz      loc_1F76"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 276, 0, 0, 2, 0, 1, 37, 33, 0.015847270280661286, ["mov     cs:seek_records, rax", "jmp     loc_30F1"], ["mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 276, 0, 0, 5, 2, 1, 33, 33, 0.018226163014225298, ["test    rax, rax", "mov     cs:conversion_blocksize, rax", "setz    dl", "or      [rsp+118h+var_D9], dl", "jmp     loc_30F1"], ["test~rax,rax", "mov~<TAG>,rax", "setz~dl", "or~[rsp+0],dl", "jmp~FOO"]], [0, 0, 276, 0, 0, 2, 0, 1, 39, 0, 0.01620770857362553, ["mov     cs:max_records, rax", "jmp     loc_30F1"], ["mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 21, 0, 1, 2, 0, 2, 39, -1, 0.00010813148788927336, ["call    write_output", "jmp     loc_2DE3"], ["call~FOO", "jmp~FOO"]], [1, 0, 108, 0, 0, 2, 1, 1, 42, -1, 0.03574346405228758, ["test    cl, 8", "jnz     loc_26E9"], ["test~cl,0", "jnz~FOO"]], [1, 0, 276, 0, 0, 4, 0, 0, 20, 19, 0.05399365628604383, ["lea     rdx, aStatus; \"status\"", "mov     rax, r15", "mov     ecx, 73h ; 's'", "nop     dword ptr [rax+00h]"], ["lea~rdx,<TAG>", "mov~rax,r15", "mov~ecx,0", "nop~[word ptr [rax+0]"]], [1, 0, 33, 0, 1, 5, 0, 2, 35, -1, 0.00015618992695117263, ["lea     rdi, saved_char; buf", "mov     esi, 1; nread", "call    copy_with_block", "mov     r15d, cs:conversions_mask", "jmp     loc_2DCD"], ["lea~rdi,<TAG>", "mov~esi,0", "call~FOO", "mov~r15d,<TAG>", "jmp~FOO"]], [0, 0, 276, 0, 0, 3, 1, 1, 17, 25, 0.009683775470972704, ["movzx   eax, byte ptr [rax]", "test    al, al", "jz      short loc_2506"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 108, 0, 0, 2, 0, 1, 39, -1, 0.0012134755863129566, ["mov     r15, r12", "jmp     loc_2388"], ["mov~r15,r12", "jmp~FOO"]], [2, 0, 108, 1, 0, 4, 1, 1, 38, -1, 0.017361111111111112, ["mov     esi, cs:conversions_mask", "add     cs:r_partial, 1", "test    esi, 400h", "jz      loc_2700"], ["mov~esi,<TAG>", "add~<TAG>,0", "test~esi,0", "jz~FOO"]], [1, 0, 276, 0, 0, 2, 0, 1, 18, 24, 0.0008290080738177625, ["cmp     al, 3Dh ; '='", "jnz     short loc_253A"], ["cmp~al,0", "jnz~FOO"]], [2, 0, 108, 0, 0, 5, 1, 1, 33, -1, 0.17116013071895425, ["mov     eax, r15d", "mov     r14, cs:input_blocksize", "and     eax, 500h", "cmp     eax, 500h", "jz      loc_2598"], ["mov~eax,r15d", "mov~r14,<TAG>", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 147, 0, 0, 4, 0, 0, 21, -1, 0.003243944636678201, ["lea     rax, trans_table", "lea     rcx, ascii_to_ebcdic", "lea     rsi, [rax+100h]", "nop     dword ptr [rax+rax+00000000h]"], ["lea~rax,<TAG>", "lea~rcx,<TAG>", "lea~rsi,[rax+0]", "nop~[word ptr [rax+0]"]], [2, 0, 276, 2, 0, 4, 0, 1, 21, 18, 0.05669694348327566, ["add     rax, 1", "add     rdx, 1", "cmp     [rax-1], cl", "jnz     loc_3029"], ["add~rax,0", "add~rdx,0", "cmp~[rax-1]+0],cl", "jnz~FOO"]], [0, 0, 276, 0, 0, 3, 1, 1, 22, 19, 0.008878796616685891, ["movzx   ecx, byte ptr [rdx]", "test    cl, cl", "jnz     short loc_2D00"], ["movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [1, 0, 276, 0, 0, 4, 0, 1, 26, 13, 0.034169550173010384, ["mov     rdx, r15", "mov     esi, 62h ; 'b'", "lea     rcx, aCbs+1; \"bs\"", "jmp     short loc_3319"], ["mov~rdx,r15", "mov~esi,0", "lea~rcx,<TAG>", "jmp~FOO"]], [0, 0, 30, 0, 0, 1, 0, 1, 38, -1, 0.003099769319492503, ["jmp     short loc_2E36"], ["jmp~FOO"]], [0, 0, 276, 2, 0, 10, 1, 0, 8, 31, 0.014405517108804307, ["movsxd  rdx, eax", "not     eax", "add     eax, r12d", "lea     r14, [argv+rdx*8]", "xor     r12d, r12d", "add     rax, rdx", "lea     argv, [argv+rax*8+8]", "lea     rax, [rsp+118h+var_D9]", "mov     [rsp+118h+invalid], rax", "nop     word ptr [rax+rax+00h]"], ["movsxd~rdx,eax", "not~eax", "add~eax,r12d", "lea~r14,<TAG>", "xor~r12d,r12d", "add~rax,rdx", "lea~argv,[argv+0]", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "nop~[ord ptr [rax+0]"]], [2, 0, 276, 0, 3, 14, 3, 4, 29, 32, 0.0, ["mov     rdi, r10; name", "call    quote", "lea     rsi, aInvalidNumberS; \"invalid number %s\"", "mov     r15, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, r15", "mov     rdx, rax; format", "xor     esi, esi; errnum", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_1F76"], ["mov~rdi,r10", "call~FOO", "lea~rsi,<TAG>", "mov~r15,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,r15", "mov~rdx,rax", "xor~esi,esi", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 276, 0, 0, 3, 1, 1, 28, 13, 0.011798346789696271, ["movzx   esi, byte ptr [rcx]", "test    sil, sil", "jz      short loc_3329"], ["movzx~esi,<TAG>", "test~sil,sil", "jz~FOO"]], [2, 0, 276, 2, 0, 4, 0, 1, 27, 12, 0.036416282199154174, ["add     rdx, 1", "add     rcx, 1", "cmp     [rdx-1], sil", "jz      short loc_3311"], ["add~rdx,0", "add~rcx,0", "cmp~[rdx-1]+0],sil", "jz~FOO"]], [0, 0, 8, 0, 0, 2, 0, 1, 40, -1, 0.00038446751249519417, ["mov     r15d, cs:conversions_mask", "jmp     loc_2E07"], ["mov~r15d,<TAG>", "jmp~FOO"]], [1, 0, 276, 0, 0, 2, 0, 1, 33, 9, 0.00021626297577854672, ["cmp     dl, 3Dh ; '='", "jnz     loc_3368"], ["cmp~dl,0", "jnz~FOO"]], [1, 0, 276, 0, 0, 3, 0, 1, 23, 19, 0.010332564398308344, ["movzx   eax, byte ptr [rax]", "cmp     al, 3Dh ; '='", "jnz     loc_3021"], ["movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [0, 0, 108, 0, 1, 6, 2, 2, 34, -1, 0.16462418300653595, ["xor     edi, edi; int", "mov     rdx, r14; size_t", "mov     rsi, rbp; char *", "call    cs:iread_fnc", "test    rax, rax", "jz      loc_2FD5"], ["xor~edi,edi", "mov~rdx,r14", "mov~rsi,rbp", "call~<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 108, 0, 1, 4, 0, 2, 35, -1, 0.0025350826605151865, ["mov     rdx, r14; n", "mov     rdi, rbp; s", "call    _memset", "jmp     loc_230D"], ["mov~rdx,r14", "mov~rdi,rbp", "call~FOO", "jmp~FOO"]], [1, 0, 147, 1, 0, 6, 0, 1, 22, -1, 0.0033761053440984237, ["movzx   edx, byte ptr [rax]", "add     rax, 1", "movzx   edx, byte ptr [rcx+rdx]", "mov     [rax-1], dl", "cmp     rsi, rax", "jnz     short loc_2110"], ["movzx~edx,<TAG>", "add~rax,0", "movzx~edx,<TAG>", "mov~[rax-1]+0],dl", "cmp~rsi,rax", "jnz~FOO"]], [0, 0, 276, 0, 1, 6, 1, 2, 18, 32, 0.012182814302191465, ["lea     rdx, error_msgid; \"invalid conversion\"", "lea     rsi, conversions; table", "mov     rdi, r10; str", "call    parse_symbols", "or      cs:conversions_mask, eax", "jmp     loc_1F76"], ["lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rdi,r10", "call~FOO", "or~<TAG>,eax", "jmp~FOO"]], [0, 0, 108, 0, 0, 1, 0, 1, 35, -1, 0.15783592848904268, ["js      loc_2733"], ["js~FOO"]], [0, 0, 276, 0, 0, 1, 0, 1, 28, 11, 0.025470972702806613, ["jmp     short loc_333D"], ["jmp~FOO"]], [2, 0, 286, 0, 1, 6, 1, 2, 1, 38, 0.010308535178777393, ["xor     esi, esi; act", "mov     rdx, rbp; oact", "mov     edi, 2; sig", "call    _sigaction", "cmp     [rsp+118h+stdout_stat.st_dev], 1", "jz      short loc_1D3B"], ["xor~esi,esi", "mov~rdx,rbp", "mov~edi,0", "call~FOO", "cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 287, 0, 1, 4, 0, 2, 2, 39, 0.0, ["lea     rdi, caught_signals; set", "mov     esi, 0Ah; signo", "call    _sigaddset", "jmp     loc_1D13"], ["lea~rdi,<TAG>", "mov~esi,0", "call~FOO", "jmp~FOO"]], [1, 0, 276, 0, 1, 6, 1, 2, 9, 30, 0.07393790849673203, ["mov     r15, [r14]", "mov     esi, 3Dh ; '='; c", "mov     rdi, r15; s", "call    _strchr", "test    rax, rax", "jz      loc_2619"], ["mov~r15,<TAG>", "mov~esi,0", "mov~rdi,r15", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 276, 1, 0, 3, 0, 1, 15, 31, 0.25449346405228757, ["add     r14, 8", "cmp     rbx, r14", "jnz     short loc_1F18"], ["add~r14,0", "cmp~rbx,r14", "jnz~FOO"]], [2, 0, 283, 0, 1, 8, 1, 2, 3, 37, 0.0, ["lea     rax, siginfo_handler", "xor     edx, edx; oact", "mov     rsi, rbp; act", "mov     edi, 0Ah; sig", "mov     dword ptr [rsp+118h+stdout_stat.__glibc_reserved+10h], 0", "mov     [rsp+118h+stdout_stat.st_dev], rax", "call    _sigaction", "jmp     loc_1DC8"], ["lea~rax,<TAG>", "xor~edx,edx", "mov~rsi,rbp", "mov~edi,0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],rax", "call~FOO", "jmp~FOO"]], [1, 0, 284, 0, 1, 21, 1, 2, 2, 37, 0.01706074586697424, ["movdqa  xmm0, xmmword ptr cs:caught_signals.__val", "lea     rdi, caught_signals; set", "mov     esi, 0Ah; signo", "movups  xmmword ptr [rsp+118h+stdout_stat.st_ino], xmm0", "movdqa  xmm0, xmmword ptr cs:caught_signals.__val+10h", "movups  xmmword ptr [rsp+118h+stdout_stat.st_mode], xmm0", "movdqa  xmm0, xmmword ptr cs:caught_signals.__val+20h", "movups  xmmword ptr [rsp+118h+stdout_stat.st_rdev], xmm0", "movdqa  xmm0, xmmword ptr cs:caught_signals.__val+30h", "movups  xmmword ptr [rsp+118h+stdout_stat.st_blksize], xmm0", "movdqa  xmm0, xmmword ptr cs:caught_signals.__val+40h", "movups  xmmword ptr [rsp+118h+stdout_stat.st_atim.tv_sec], xmm0", "movdqa  xmm0, xmmword ptr cs:caught_signals.__val+50h", "movups  xmmword ptr [rsp+118h+stdout_stat.st_mtim.tv_sec], xmm0", "movdqa  xmm0, xmmword ptr cs:caught_signals.__val+60h", "movups  xmmword ptr [rsp+118h+stdout_stat.st_ctim.tv_sec], xmm0", "movdqa  xmm0, xmmword ptr cs:caught_signals.__val+70h", "movups  xmmword ptr [rsp+118h+stdout_stat.__glibc_reserved], xmm0", "call    _sigismember", "test    eax, eax", "jnz     loc_2708"], ["movdqa~xmm0,<TAG>", "lea~rdi,<TAG>", "mov~esi,0", "movups~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 276, 0, 0, 3, 0, 1, 29, 12, 0.013708669742406768, ["movzx   edx, byte ptr [rdx]", "cmp     dl, 3Dh ; '='", "jz      loc_33D8"], ["movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [1, 0, 108, 0, 2, 10, 4, 3, 43, -1, 0.004950019223375625, ["lea     rsi, aWarningInvalid; \"warning: invalid file offset after fail\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_2F82"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 108, 0, 0, 2, 0, 0, 43, -1, 0.004950019223375625, ["cmp     r15, r14", "jb      loc_32DA"], ["cmp~r15,r14", "jb~FOO"]], [3, 0, 145, 0, 0, 3, 0, 0, 23, -1, 0.008710592079969243, ["mov     cs:translation_needed, 1", "mov     byte ptr cs:newline_character, 25h ; '%'; \"\\n\"", "mov     byte ptr cs:space_character, 40h ; '@'; \" \""], ["mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0"]], [3, 0, 140, 0, 1, 19, 4, 2, 24, -1, 0.24557862360630528, ["xor     esi, esi; offset", "mov     edx, 1; whence", "xor     edi, edi; fd", "call    _lseek", "mov     rdx, offset", "mov     rsi, cs:output_file; file", "mov     r14d, cs:output_flags", "not     rdx", "shr     rdx, 3Fh", "test    offset, offset", "mov     cs:input_seekable, dl", "mov     edx, 0", "cmovs   offset, rdx", "test    rsi, rsi", "mov     cs:input_offset, rax", "mov     rax, [rsp+118h+var_100]", "mov     eax, [rax]", "mov     cs:input_seek_errno, eax", "jz      loc_2E76"], ["xor~esi,esi", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rdx,offset", "mov~rsi,<TAG>", "mov~r14d,<TAG>", "not~rdx", "shr~rdx,0", "test~offset,offset", "mov~<TAG>,dl", "mov~edx,0", "cmovs~offset,rdx", "test~rsi,rsi", "mov~<TAG>,rax", "mov~rax,[rsp+0]", "mov~eax,<TAG>", "mov~<TAG>,eax", "jz~FOO"]], [1, 0, 39, 0, 0, 2, 0, 1, 33, -1, 0.11050437331795464, ["cmp     cs:char_is_saved, 0", "jz      short loc_2DCD"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 108, 1, 0, 4, 1, 1, 38, -1, 0.07871371587850827, ["mov     r15, r12", "add     cs:r_full, 1", "xor     r12d, r12d", "jmp     loc_2388"], ["mov~r15,r12", "add~<TAG>,0", "xor~r12d,r12d", "jmp~FOO"]], [0, 0, 108, 0, 0, 3, 0, 0, 37, -1, 0.10062836409073433, ["mov     r15, cs:input_blocksize", "cmp     r15, r12", "jbe     loc_2527"], ["mov~r15,<TAG>", "cmp~r15,r12", "jbe~FOO"]], [1, 0, 285, 0, 1, 3, 0, 1, 2, 38, 0.0, ["lea     rdi, caught_signals; set", "mov     esi, 2; signo", "call    _sigaddset"], ["lea~rdi,<TAG>", "mov~esi,0", "call~FOO"]], [0, 0, 276, 0, 0, 2, 1, 1, 30, 11, 0.00043252595155709344, ["test    dl, dl", "jz      loc_33D8"], ["test~dl,dl", "jz~FOO"]], [2, 0, 141, 0, 3, 15, 2, 4, 24, -1, 0.0, ["mov     rdi, cs:input_file; name", "call    quote", "lea     rsi, aOpeningS; \"opening %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r12, rax", "call    _dcgettext", "mov     rdx, rax; format", "mov     rax, [rsp+118h+var_100]", "mov     rcx, r12", "mov     edi, 1; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error", "jmp     loc_2170"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r12,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~rcx,r12", "mov~edi,0", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 142, 0, 1, 7, 3, 2, 23, -1, 0.12284337754709727, ["xor     ecx, ecx; mode", "xor     edi, edi; desired_fd", "mov     edx, r14d; flags", "mov     rsi, r12; file", "call    fd_reopen", "test    eax, eax", "js      loc_2EFD"], ["xor~ecx,ecx", "xor~edi,edi", "mov~edx,r14d", "mov~rsi,r12", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 18, 1, 1, 5, 1, 2, 38, -1, 0.013870866974240677, ["mov     rdi, cs:obuf; fd", "call    iwrite", "add     cs:w_bytes, rax", "test    rax, rax", "jz      short loc_3170"], ["mov~rdi,<TAG>", "call~FOO", "add~<TAG>,rax", "test~rax,rax", "jz~FOO"]], [0, 0, 276, 0, 1, 6, 1, 2, 24, 32, 0.0132641291810842, ["lea     rdx, aInvalidStatusF; \"invalid status flag\"", "lea     rsi, statuses; table", "mov     rdi, r10; str", "call    parse_symbols", "or      cs:status_flags, eax", "jmp     loc_1F76"], ["lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rdi,r10", "call~FOO", "or~<TAG>,eax", "jmp~FOO"]], [0, 0, 276, 0, 0, 2, 1, 1, 24, 18, 0.0006127450980392157, ["test    al, al", "jz      loc_2D23"], ["test~al,al", "jz~FOO"]], [2, 0, 108, 1, 0, 5, 0, 1, 44, -1, 0.0, ["sub     r15, 1", "mov     cs:char_is_saved, 1", "movzx   eax, byte ptr [r10+r15]", "mov     cs:saved_char, al", "jmp     loc_26B2"], ["sub~r15,0", "mov~<TAG>,0", "movzx~eax,<TAG>", "mov~<TAG>,al", "jmp~FOO"]], [1, 0, 276, 0, 0, 5, 0, 0, 10, 29, 0.07400999615532487, ["lea     rcx, aIf; \"if\"", "lea     r10, [rax+1]", "mov     rdx, r15", "mov     eax, 69h ; 'i'", "nop     dword ptr [rax+00h]"], ["lea~rcx,<TAG>", "lea~r10,[rax+0]", "mov~rdx,r15", "mov~eax,0", "nop~[word ptr [rax+0]"]], [0, 0, 108, 0, 1, 3, 0, 2, 41, -1, 0.0025350826605151865, ["lea     rdi, [rbp+r12+0]; s", "call    _memset", "jmp     loc_2388"], ["lea~rdi,[rbp+0]", "call~FOO", "jmp~FOO"]], [1, 0, 108, 1, 0, 4, 1, 1, 40, -1, 0.005803056516724337, ["mov     rdx, r15", "sub     rdx, r12; n", "and     esi, 18h", "jz      short loc_295C"], ["mov~rdx,r15", "sub~rdx,r12", "and~esi,0", "jz~FOO"]], [0, 1, 108, 0, 0, 1, 0, 0, 41, -1, 0.0, ["mov     esi, 20h ; ' '; c"], ["mov~esi,<STR>"]], [0, 0, 108, 1, 0, 8, 2, 1, 36, -1, 0.09326941560938101, ["mov     rdx, rax", "mov     r12, rax", "xor     eax, eax", "add     rdx, cs:input_offset; size", "setb    al", "mov     cs:input_offset, rdx", "test    rax, rax", "jz      short loc_234F"], ["mov~rdx,rax", "mov~r12,rax", "xor~eax,eax", "add~rdx,<TAG>", "setb~al", "mov~<TAG>,rdx", "test~rax,rax", "jz~FOO"]], [1, 0, 108, 0, 0, 1, 0, 0, 37, -1, 0.0, ["mov     cs:input_offset_overflow, 1"], ["mov~<TAG>,0"]], [1, 0, 108, 0, 0, 4, 1, 1, 39, -1, 0.026055683711393003, ["mov     rax, r14", "shr     rax, 3Fh", "or      cs:input_offset_overflow, al", "jnz     loc_27C1"], ["mov~rax,r14", "shr~rax,0", "or~<TAG>,al", "jnz~FOO"]], [0, 0, 108, 2, 0, 9, 2, 1, 38, -1, 0.033352556708958044, ["mov     r15, cs:input_blocksize", "xor     eax, eax", "sub     r15, r12", "mov     r14, r15", "add     r14, cs:input_offset", "setb    al", "mov     cs:input_offset, r14", "test    rax, rax", "jz      loc_2F3D"], ["mov~r15,<TAG>", "xor~eax,eax", "sub~r15,r12", "mov~r14,r15", "add~r14,<TAG>", "setb~al", "mov~<TAG>,r14", "test~rax,rax", "jz~FOO"]], [1, 0, 33, 0, 1, 5, 0, 2, 36, -1, 0.00015618992695117263, ["lea     rdi, saved_char; buf", "mov     esi, 1; nread", "call    copy_with_unblock", "mov     r15d, cs:conversions_mask", "jmp     loc_2DCD"], ["lea~rdi,<TAG>", "mov~esi,0", "call~FOO", "mov~r15d,<TAG>", "jmp~FOO"]], [1, 0, 276, 0, 0, 4, 0, 1, 29, 10, 0.028270376778162246, ["mov     rdx, r15", "mov     esi, 63h ; 'c'", "lea     rcx, aCbs; \"cbs\"", "jmp     short loc_335A"], ["mov~rdx,r15", "mov~esi,0", "lea~rcx,<TAG>", "jmp~FOO"]], [0, 0, 276, 0, 0, 3, 1, 1, 12, 29, 0.01309592464436755, ["movzx   eax, byte ptr [rcx]", "test    al, al", "jnz     short loc_1F48"], ["movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [2, 0, 276, 2, 0, 4, 0, 1, 30, 9, 0.03057718185313341, ["add     rdx, 1", "add     rcx, 1", "cmp     [rdx-1], sil", "jz      short loc_334E"], ["add~rdx,0", "add~rcx,0", "cmp~[rdx-1]+0],sil", "jz~FOO"]], [1, 0, 108, 0, 0, 2, 1, 1, 39, -1, 0.011594098423683198, ["test    esi, 100h", "jz      loc_294C"], ["test~esi,0", "jz~FOO"]], [0, 0, 108, 0, 0, 2, 0, 1, 39, -1, 0.08592248173779315, ["cmp     rbp, cs:obuf", "jz      loc_25B5"], ["cmp~rbp,<TAG>", "jz~FOO"]], [0, 0, 108, 0, 0, 1, 0, 0, 40, -1, 0.0012375048058439063, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [0, 0, 276, 0, 0, 3, 1, 1, 13, 29, 0.014189254133025759, ["movzx   eax, byte ptr [rdx]", "test    al, al", "jz      short loc_1F6F"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 17, 1, 0, 1, 0, 0, 39, -1, 0.0, ["add     cs:w_partial, 1"], ["add~<TAG>,0"]], [0, 0, 144, 0, 1, 6, 1, 2, 22, -1, 0.24567474048442908, ["mov     r12, cs:input_file", "mov     r14d, cs:input_flags", "call    ___errno_location", "mov     [rsp+118h+var_100], rax", "test    r12, r12", "jz      loc_2D44"], ["mov~r12,<TAG>", "mov~r14d,<TAG>", "call~FOO", "mov~[rsp+0],rax", "test~r12,r12", "jz~FOO"]], [1, 0, 141, 0, 2, 10, 2, 3, 23, -1, 0.12112528835063438, ["lea     rsi, aStandardInput; \"standard input\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     esi, r14d; add_flags", "mov     rdx, rax; name", "xor     edi, edi; fd", "mov     cs:input_file, rax", "call    set_fd_flags", "jmp     loc_2170"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~esi,r14d", "mov~rdx,rax", "xor~edi,edi", "mov~<TAG>,rax", "call~FOO", "jmp~FOO"]], [1, 0, 276, 0, 0, 3, 0, 1, 19, 23, 0.00990003844675125, ["movzx   eax, byte ptr [rax]", "cmp     al, 3Dh ; '='", "jz      short loc_2577"], ["movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [0, 0, 276, 0, 0, 1, 0, 0, 14, 32, 0.016399942329873126, ["mov     cs:input_file, r10"], ["mov~<TAG>,r10"]], [1, 0, 40, 0, 0, 1, 0, 0, 37, -1, 0.0009191176470588235, ["mov     [rsp+118h+code], 1"], ["mov~[rsp+0],0"]], [2, 0, 108, 0, 3, 17, 4, 4, 36, -1, 0.060012975778546716, ["mov     rdi, cs:input_file; name", "call    quote", "lea     rsi, aReadingS; \"reading %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r15, rax", "call    _dcgettext", "mov     rbx, [rsp+118h+var_100]", "mov     rcx, r15", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "mov     esi, [rbx]; errnum", "call    _error", "mov     r15d, cs:conversions_mask", "test    r15d, 100h", "jz      loc_2D70"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r15,rax", "call~FOO", "mov~rbx,[rsp+0]", "mov~rcx,r15", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "mov~esi,<TAG>", "call~FOO", "mov~r15d,<TAG>", "test~r15d,0", "jz~FOO"]], [0, 0, 276, 0, 0, 2, 1, 1, 20, 22, 0.0007569204152249135, ["test    al, al", "jnz     loc_2832"], ["test~al,al", "jnz~FOO"]], [1, 0, 108, 0, 1, 3, 0, 2, 37, -1, 0.05452830642060746, ["call    print_stats", "cmp     cs:input_seekable, 0", "jz      loc_296B"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 276, 0, 1, 6, 1, 2, 20, 32, 0.012543252595155709, ["lea     rdx, aInvalidInputFl; \"invalid input flag\"", "lea     rsi, flags; table", "mov     rdi, r10; str", "call    parse_symbols", "or      cs:input_flags, eax", "jmp     loc_1F76"], ["lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rdi,r10", "call~FOO", "or~<TAG>,eax", "jmp~FOO"]], [0, 0, 276, 0, 1, 6, 1, 2, 22, 32, 0.012903690888119955, ["lea     rdx, aInvalidOutputF; \"invalid output flag\"", "lea     rsi, flags; table", "mov     rdi, r10; str", "call    parse_symbols", "or      cs:output_flags, eax", "jmp     loc_1F76"], ["lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rdi,r10", "call~FOO", "or~<TAG>,eax", "jmp~FOO"]], [0, 0, 113, 0, 1, 6, 1, 2, 31, -1, 0.00623558246828143, ["mov     r14, cs:output_blocksize", "mov     rdi, cs:obuf; s", "xor     esi, esi; c", "mov     rdx, r14; n", "call    _memset", "jmp     short loc_2C0A"], ["mov~r14,<TAG>", "mov~rdi,<TAG>", "xor~esi,esi", "mov~rdx,r14", "call~FOO", "jmp~FOO"]], [1, 0, 12, 0, 1, 4, 1, 2, 39, -1, 0.013023836985774702, ["mov     edi, 1; fildes", "call    _fdatasync", "test    eax, eax", "jz      short loc_31ED"], ["mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 179, 0, 0, 2, 0, 0, 17, -1, 0.1957059784698193, ["mov     cs:output_blocksize, r12", "mov     cs:input_blocksize, r12"], ["mov~<TAG>,r12", "mov~<TAG>,r12"]], [1, 0, 276, 0, 0, 4, 0, 1, 31, 8, 0.019211361014994235, ["mov     rdx, r15", "mov     esi, 73h ; 's'", "lea     rcx, aSkip; \"skip\"", "jmp     short loc_3385"], ["mov~rdx,r15", "mov~esi,0", "lea~rcx,<TAG>", "jmp~FOO"]], [1, 0, 178, 0, 0, 2, 0, 1, 10, -1, 0.23310745866974242, ["cmp     cs:conversion_blocksize, 0", "jnz     short loc_1FA7"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 177, 0, 0, 1, 1, 0, 11, -1, 0.0, ["and     cs:conversions_mask, 0FFFFFFE7h"], ["and~<TAG>,0"]], [0, 1, 108, 0, 0, 4, 1, 1, 41, -1, 0.05044934640522876, ["mov     ecx, cs:conversions_mask", "mov     r14, rbp", "test    cl, 80h", "jnz     loc_2682"], ["mov~ecx,<TAG>", "mov~r14,rbp", "test~cl,<STR>", "jnz~FOO"]], [0, 0, 40, 0, 0, 2, 0, 1, 35, -1, 0.002222702806612841, ["mov     r15d, cs:conversions_mask", "jmp     loc_2D78"], ["mov~r15d,<TAG>", "jmp~FOO"]], [1, 0, 108, 0, 0, 3, 1, 1, 34, -1, 0.005803056516724337, ["mov     esi, r15d", "and     esi, 18h", "jz      short loc_25A5"], ["mov~esi,r15d", "and~esi,0", "jz~FOO"]], [0, 1, 108, 0, 0, 1, 0, 0, 35, -1, 0.0, ["mov     esi, 20h ; ' '; c"], ["mov~esi,<STR>"]], [2, 0, 129, 0, 2, 12, 3, 3, 30, -1, 0.0, ["lea     rsi, aOffsetTooLarge; \"offset too large: cannot truncate to a \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r8, obs", "mov     rdx, rax; format", "mov     rcx, r12", "xor     esi, esi; errnum", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_29DF"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r8,obs", "mov~rdx,rax", "mov~rcx,r12", "xor~esi,esi", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 130, 2, 0, 8, 1, 1, 29, -1, 0.01117358708189158, ["mov     r15, cs:output_blocksize", "xor     edx, edx", "mov     rax, 7FFFFFFFFFFFFFFFh", "mov     r14, r12", "div     r15", "imul    r14, r15", "cmp     r12, rax", "ja      loc_31F9"], ["mov~r15,<TAG>", "xor~edx,edx", "mov~rax,0", "mov~r14,r12", "div~,r15", "imul~r14,r15", "cmp~r12,rax", "ja~FOO"]], [1, 0, 176, 0, 0, 3, 1, 1, 11, -1, 0.23471741637831603, ["mov     eax, cs:input_flags", "test    eax, 101000h", "jz      short loc_1FBF"], ["mov~eax,<TAG>", "test~eax,0", "jz~FOO"]], [1, 0, 175, 0, 0, 2, 1, 0, 12, -1, 0.0, ["or      eax, 101000h", "mov     cs:input_flags, eax"], ["or~eax,0", "mov~<TAG>,eax"]], [1, 0, 108, 0, 0, 1, 0, 0, 39, -1, 0.0027433358964500895, ["mov     cs:input_offset_overflow, 1"], ["mov~<TAG>,0"]], [0, 0, 33, 0, 1, 2, 0, 1, 37, -1, 0.00015618992695117263, ["call    write_output", "mov     r15d, cs:conversions_mask"], ["call~FOO", "mov~r15d,<TAG>"]], [0, 0, 34, 0, 0, 8, 0, 0, 36, -1, 0.0216683487120339, ["mov     rax, cs:oc", "movzx   ecx, cs:saved_char", "mov     rdx, cs:obuf", "lea     rsi, [rax+1]", "cmp     rsi, cs:output_blocksize", "mov     [rdx+rax], cl", "mov     cs:oc, rsi", "jb      short loc_2DEA"], ["mov~rax,<TAG>", "movzx~ecx,<TAG>", "mov~rdx,<TAG>", "lea~rsi,[rax+0]", "cmp~rsi,<TAG>", "mov~<TAG>,cl", "mov~<TAG>,rsi", "jb~FOO"]], [0, 0, 30, 0, 0, 3, 1, 1, 35, -1, 0.036986976163014135, ["mov     rbp, cs:col", "test    rbp, rbp", "jnz     short loc_2E3F"], ["mov~rbp,<TAG>", "test~rbp,rbp", "jnz~FOO"]], [0, 0, 20, 0, 0, 1, 0, 0, 36, -1, 0.019157295271049642, ["mov     rsi, cs:oc; buf"], ["mov~rsi,<TAG>"]]], "func_feature": [123, 223, 341, 3, 290, 453, 0, 1375, 0.03723, 107, 74], "succs": [[272, 54], [0, 61], [0, 240], [27, 4], [97, 3], [35], [5], [5], [9, 142], [8, 74], [8], [26], [11], [11], [153, 158], [13, 14], [40], [16, 60], [43, 44], [18, 114], [45], [20, 45], [96, 77], [22, 119], [231], [24, 25], [], [26, 171], [26], [26], [131, 163], [123, 30], [30], [2, 93], [33, 2], [184, 49], [65, 35], [35, 151], [35, 63], [59], [59, 39], [42, 12], [41, 29], [56, 55], [43], [191], [87, 47], [46, 263], [46], [184, 53], [40], [193, 214], [51, 255], [235], [42, 28], [75, 76], [55], [252, 287], [57, 198], [69, 119], [50, 59], [13], [37, 6], [64, 6], [6], [6], [109], [208, 66], [66], [282, 119], [72, 73], [185, 70], [83, 70], [83, 70], [192, 143], [104, 31], [75], [96], [], [166, 78], [78], [84, 95], [81, 107], [184], [128, 95], [197, 86], [99, 85], [85], [98, 277], [88, 277], [177, 183], [90, 92], [90, 207], [2, 195], [139], [139, 94], [120, 119], [], [113], [270, 110], [111, 103], [209, 100], [273, 100], [111], [31], [178], [105, 180], [128, 82], [107], [34, 67], [197, 270], [275, 124], [277], [112, 113], [], [115, 159], [115], [122, 118], [10, 117], [132, 125], [119], [119], [133, 134], [135], [275], [130], [207, 127], [91, 126], [126], [146, 148], [129, 145], [116, 165], [130], [191], [10, 133], [32, 135], [149], [136, 254], [136, 264], [191], [144], [144, 140], [154], [192, 142], [106, 243], [27, 156], [145, 147], [145, 148], [145], [189, 150], [149, 157], [229, 230], [34], [184], [80, 155], [168, 154], [27, 271], [160, 167], [184], [170], [189, 167], [162, 79], [79], [179], [181, 261], [204, 164], [182], [225], [194, 190], [152, 288], [165], [184], [213], [172, 174], [172], [222, 223], [222, 175], [183], [178, 180], [170, 179], [196], [25], [101, 182], [191], [233, 203], [184], [184], [48, 188], [187, 199], [187], [80, 194], [225, 210], [191], [191], [191], [289], [186, 71], [205], [169], [202, 219], [257], [200, 256], [48, 219], [216, 279], [218], [108, 206], [205, 215], [212], [68], [224], [225], [228, 212], [211, 221], [54], [193, 274], [241, 242], [220, 278], [216], [218, 231], [225], [248, 266], [253], [227, 236], [222], [80, 244], [224, 102], [161], [161, 226], [237, 21], [38], [229, 38], [261], [121, 17], [169, 58], [257], [201, 234], [227], [253, 21], [232], [232, 238], [1, 260], [225], [241, 108], [106], [137], [257], [245, 247], [245], [249, 235], [235], [62, 7], [250, 285], [169], [255], [137, 259], [274, 52], [258, 246], [89, 15], [257], [264, 138], [1], [262, 239], [232], [267, 269], [225], [233], [265, 268], [269, 87], [251, 36], [225], [225], [4], [173, 213], [275], [118], [283, 276], [283], [196, 141], [233], [280, 217], [217], [23], [281, 23], [19, 284], [19], [7], [169], [2, 286], [289, 109], [2]], "fname": "main", "n_num": 290}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[1, 0, 0, 0, 1, 12, 2, 1, 0, 0, 0.0, ["xor     ebp, ebp", "mov     r9, rdx; rtld_fini", "pop     rsi; argc", "mov     rdx, rsp; ubp_av", "and     rsp, 0FFFFFFFFFFFFFFF0h", "push    rax", "push    rsp; stack_end", "lea     r8, __libc_csu_fini; fini", "lea     rcx, __libc_csu_init; init", "lea     rdi, main; main", "call    cs:__libc_start_main_ptr", "hlt"], ["xor~ebp,ebp", "mov~r9,rdx", "pop~rsi", "mov~rdx,rsp", "and~rsp,0", "push~rax", "push~rsp", "lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "call~<TAG>", "hlt"]]], "func_feature": [1, 2, 1, 0, 1, 0, 0, 12, 0.0, 4, 0], "succs": [[]], "fname": "_start", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_deregisterTMCloneTable_ptr", "test    rax, rax", "jz      short loc_3550"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 6, 0, 1, 0, 1, 0.0, ["lea     rdi, __bss_start", "push    rbp", "lea     rax, __bss_start", "cmp     rax, rdi", "mov     rbp, rsp", "jz      short loc_3550"], ["lea~rdi,<TAG>", "push~rbp", "lea~rax,<TAG>", "cmp~rax,rdi", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, -1, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 13, 0.04167, 2, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "deregister_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [3, 0, 3, 2, 0, 11, 0, 1, 0, 0, 0.0, ["lea     rdi, __bss_start", "lea     rsi, __bss_start", "push    rbp", "sub     rsi, rdi", "mov     rbp, rsp", "sar     rsi, 3", "mov     rax, rsi", "shr     rax, 3Fh", "add     rsi, rax", "sar     rsi, 1", "jz      short loc_35A0"], ["lea~rdi,<TAG>", "lea~rsi,<TAG>", "push~rbp", "sub~rsi,rdi", "mov~rbp,rsp", "sar~rsi,0", "mov~rax,rsi", "shr~rax,0", "add~rsi,rax", "sar~rsi,0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_registerTMCloneTable_ptr", "test    rax, rax", "jz      short loc_35A0"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, 0, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 18, 0.04167, 2, 2], "succs": [[], [0, 2], [0, 3], []], "fname": "register_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[1, 0, 0, 0, 1, 4, 0, 1, 0, 0, 0.0, ["call    deregister_tm_clones", "mov     cs:completed_7698, 1", "pop     rbp", "retn"], ["call~FOO", "mov~<TAG>,0", "pop~rbp", "retn"]], [1, 0, 2, 0, 0, 4, 0, 1, 1, -1, 0.16666666666666666, ["cmp     cs:__cxa_finalize_ptr, 0", "push    rbp", "mov     rbp, rsp", "jz      short loc_35D3"], ["cmp~<TAG>,0", "push~rbp", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     rdi, cs:__dso_handle", "call    __cxa_finalize"], ["mov~rdi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:completed_7698, 0", "jnz     short locret_35E8"], ["cmp~<TAG>,0", "jnz~FOO"]]], "func_feature": [2, 0, 4, 0, 5, 5, 0, 13, 0.03333, 3, 0], "succs": [[], [0, 2], [0], [], [1, 3]], "fname": "__do_global_dtors_aux", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "pop     rbp", "jmp     register_tm_clones"], ["push~rbp", "mov~rbp,rsp", "pop~rbp", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "frame_dummy", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:interrupt_signal, edi", "retn"], ["mov~<TAG>,edi", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "interrupt_handler", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[1, 0, 0, 1, 0, 4, 0, 0, 0, 0, 0.0, ["mov     eax, cs:info_signal_count", "add     eax, 1", "mov     cs:info_signal_count, eax", "retn"], ["mov~eax,<TAG>", "add~eax,0", "mov~<TAG>,eax", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 4, 0.0, 1, 1], "succs": [[]], "fname": "siginfo_handler", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 1, 2, 0, 1, 0, 0, 0.0, ["mov     edi, ebx; status", "call    _exit"], ["mov~edi,ebx", "call~FOO"]], [2, 0, 1, 0, 3, 13, 2, 4, 2, -1, 0.1, ["mov     rdi, cs:program_name; name", "call    last_component", "lea     rsi, aForCompleteDoc; \"For complete documentation, run: info c\"...", "mov     rbp, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_365F"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 2, 9, 2, 2, 1, -1, 0.03333333333333333, ["lea     rsi, aTrySHelpForMor; \"Try `%s --help' for more information.\\n\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     rcx, rbp", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~rcx,rbp", "mov~esi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 3, 0, 1, 6, 1, 2, 2, 1, 0.06666666666666667, ["lea     rsi, s2; \"en_\"", "mov     edx, 3; n", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_3A41"], ["lea~rsi,<TAG>", "mov~edx,0", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [27, 0, 4, 0, 48, 199, 29, 49, 1, 2, 0.1, ["lea     rsi, aUsageSOperandO; \"Usage: %s [OPERAND]...\\n  or:  %s OPTIO\"...", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aCopyAFileConve; \"Copy a file, converting and formatting \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aIfFileReadFrom; \"  if=FILE         read from FILE instea\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aBlocksAndBytes; \"\\nBLOCKS and BYTES may be followed by t\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aAsciiFromEbcdi; \"  ascii     from EBCDIC to ASCII\\n  ebc\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNocreatDoNotCr; \"  nocreat   do not create the output fi\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNoerrorContinu; \"  noerror   continue after read errors\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aEachFlagSymbol; \"\\nEach FLAG symbol may be:\\n\\n  append \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aDirectUseDirec; \"  direct    use direct I/O for data\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aDirectoryFailU; \"  directory  fail unless a directory\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aDsyncUseSynchr; \"  dsync     use synchronized I/O for da\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aSyncLikewiseBu; \"  sync      likewise, but also for meta\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aFullblockAccum; \"  fullblock  accumulate full blocks of \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNonblockUseNon; \"  nonblock  use non-blocking I/O\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNoatimeDoNotUp; \"  noatime   do not update access time\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNocttyDoNotAss; \"  noctty    do not assign controlling t\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNofollowDoNotF; \"  nofollow  do not follow symlinks\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "lea     rsi, aSendingASSigna; \"\\nSending a %s signal to a running `dd'\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rcx, aUsr1; \"USR1\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "mov     rdx, rcx", "call    ___printf_chk", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aHelpDisplayThi; \"      --help     display this help and \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aVersionOutputV; \"      --version  output version informa\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rdi, cs:program_name; name", "call    last_component", "lea     rsi, aReportSBugsToS; \"\\nReport %s bugs to %s\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbp, rax", "call    _dcgettext", "lea     rcx, aBugCoreutilsGn; \"bug-coreutils@gnu.org\"", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "lea     rsi, aSHomePageHttpW; \"%s home page: <http://www.gnu.org/softw\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rcx, package; \"coreutils\"", "lea     rdx, unk_9002", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aGeneralHelpUsi; \"General help using GNU software: <http:\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "xor     esi, esi; locale", "mov     edi, 5; category", "call    _setlocale", "test    rax, rax", "jz      short loc_3A08"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rcx,rbp", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rcx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "mov~rdx,rcx", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbp,rax", "call~FOO", "lea~rcx,<TAG>", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [2, 0, 6, 1, 0, 8, 1, 1, 0, 3, 0.0, ["push    rbp", "push    rbx", "mov     edx, 5; category", "mov     ebx, edi", "sub     rsp, 8", "test    edi, edi", "mov     rbp, cs:program_name", "jz      short loc_3666"], ["push~rbp", "push~rbx", "mov~edx,0", "mov~ebx,edi", "sub~rsp,0", "test~edi,edi", "mov~rbp,<TAG>", "jz~FOO"]], [2, 0, 2, 0, 3, 13, 2, 4, 3, 0, 0.0, ["mov     rdi, cs:program_name; name", "call    last_component", "lea     rsi, aReportSTransla; \"Report %s translation bugs to <http://t\"...", "mov     rbp, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     short loc_3A08"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]]], "func_feature": [58, 37, 63, 0, 7, 9, 4, 250, 0.04286, 34, 1], "succs": [[], [0], [0], [1, 6], [1, 3], [2, 4], [1]], "fname": "usage", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[2, 0, 4, 0, 1, 9, 0, 2, 0, 0, 0.09090909090909091, ["divsd   xmm0, cs:qword_97C0", "mov     rdi, cs:w_bytes; n", "mov     ecx, 3B9ACA00h; from_block_size", "mov     edx, 1D1h; opts", "mov     rsi, r12; buf", "movsd   [rsp+2D8h+delta_s], xmm0", "call    human_readable", "mov     rbx, rax", "jmp     short loc_3C58"], ["divsd~xmm0,<TAG>", "mov~rdi,<TAG>", "mov~ecx,0", "mov~edx,0", "mov~rsi,r12", "movsd~[rsp+0],xmm0", "call~FOO", "mov~rbx,rax", "jmp~FOO"]], [2, 0, 5, 0, 0, 9, 2, 1, 4, 4, 0.03409090909090909, ["mov     rax, delta_xtime", "mov     rdx, delta_xtime", "pxor    xmm0, xmm0", "shr     rax, 1", "and     edx, 1", "or      rax, rdx", "cvtsi2sd xmm0, rax", "addsd   xmm0, xmm0", "jmp     loc_3C09"], ["mov~rax,delta_xtime", "mov~rdx,delta_xtime", "pxor~xmm0,xmm0", "shr~rax,0", "and~edx,0", "or~rax,rdx", "cvtsi2sd~xmm0,rax", "addsd~xmm0,xmm0", "jmp~FOO"]], [0, 0, 5, 0, 0, 2, 0, 0, 4, 4, 0.03409090909090909, ["pxor    xmm0, xmm0", "cvtsi2sd xmm0, delta_xtime"], ["pxor~xmm0,xmm0", "cvtsi2sd~xmm0,delta_xtime"]], [0, 0, 7, 1, 0, 3, 0, 1, 3, 5, 0.09090909090909091, ["mov     r8, now", "sub     r8, rax; to_block_size", "js      loc_3C98"], ["mov~r8,now", "sub~r8,rax", "js~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.15151515151515152, ["mov     rax, [rsp+2D8h+var_30]", "xor     rax, fs:28h", "jnz     loc_3CB9"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [3, 0, 10, 0, 2, 14, 3, 3, 1, 2, 0.03787878787878788, ["lea     rdx, msgid2; \"%lu truncated records\\n\"", "lea     rsi, msgid1; \"%lu truncated record\\n\"", "xor     edi, edi; domainname", "mov     r8d, 5; category", "mov     rcx, rbx; n", "call    _dcngettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     rcx, rbx", "xor     eax, eax", "mov     esi, 1", "call    ___fprintf_chk", "test    byte ptr cs:status_flags, 1", "jnz     short loc_3B15"], ["lea~rdx,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~r8d,0", "mov~rcx,rbx", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~rcx,rbx", "xor~eax,eax", "mov~esi,0", "call~FOO", "test~<TAG>,0", "jnz~FOO"]], [3, 0, 3, 0, 2, 12, 1, 3, 4, 2, 0.13636363636363635, ["lea     rsi, aGSSS; \", %g s, %s/s\\n\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "movsd   xmm0, [rsp+2D8h+delta_s]", "mov     rdx, rax", "mov     rcx, bytes_per_second", "mov     esi, 1", "mov     eax, 1", "call    ___fprintf_chk", "jmp     loc_3B15"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdi,<TAG>", "movsd~xmm0,[rsp+0]", "mov~rdx,rax", "mov~rcx,bytes_per_second", "mov~esi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 0, 10, 0, 0, 2, 1, 1, 1, 2, 0.03787878787878788, ["test    byte ptr cs:status_flags, 1", "jz      short loc_3B80"], ["test~<TAG>,0", "jz~FOO"]], [3, 1, 12, 2, 3, 34, 4, 4, 0, 3, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 2B0h", "mov     rax, fs:28h", "mov     [rsp+2D8h+var_30], rax", "xor     eax, eax", "call    gethrxtime", "mov     r14, cs:w_partial", "lea     rsi, aLuLuRecordsInL; \"%lu+%lu records in\\n%lu+%lu records out\"...", "mov     rbx, cs:r_full", "xor     edi, edi; domainname", "mov     r13, cs:w_full", "mov     r12, cs:r_partial", "mov     edx, 5; category", "mov     rbp, rax", "call    _dcgettext", "sub     rsp, 8", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "push    r14", "mov     rcx, rbx", "xor     eax, eax", "mov     r9, r13", "mov     r8, r12", "mov     esi, 1", "call    ___fprintf_chk", "mov     rbx, cs:r_truncate", "pop     rax", "pop     rdx", "test    rbx, rbx", "jnz     short loc_3B40"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~r14,<TAG>", "lea~rsi,<TAG>", "mov~rbx,<TAG>", "xor~edi,edi", "mov~r13,<TAG>", "mov~r12,<TAG>", "mov~edx,0", "mov~rbp,rax", "call~FOO", "sub~rsp,0", "mov~rdi,<TAG>", "mov~rdx,rax", "push~r14", "mov~rcx,rbx", "xor~eax,eax", "mov~r9,r13", "mov~r8,r12", "mov~esi,0", "call~FOO", "mov~rbx,<TAG>", "pop~rax", "pop~rdx", "test~rbx,rbx", "jnz~FOO"]], [1, 0, 4, 0, 1, 7, 1, 1, 3, 3, 0.05303030303030303, ["lea     rsi, aInfinityB; \"Infinity B\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "pxor    xmm1, xmm1", "mov     rbx, rax", "movsd   [rsp+2D8h+delta_s], xmm1"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "pxor~xmm1,xmm1", "mov~rbx,rax", "movsd~[rsp+0],xmm1"]], [5, 0, 9, 0, 3, 25, 2, 4, 2, 4, 0.13636363636363635, ["mov     rdi, cs:w_bytes; n", "lea     r12, [rsp+2D8h+hbuf]", "mov     r8d, 1; to_block_size", "mov     ecx, 1; from_block_size", "mov     edx, 1D1h; opts", "mov     rsi, r12; buf", "call    human_readable", "mov     rbx, cs:w_bytes", "lea     rdx, aLuBytesSCopied; \"%lu bytes (%s) copied\"", "lea     rsi, aLuByteSCopied; \"%lu byte (%s) copied\"", "xor     edi, edi; domainname", "mov     r8d, 5; category", "mov     r13, rax", "mov     rcx, rbx; n", "call    _dcngettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     r8, r13", "xor     eax, eax", "mov     rcx, rbx", "mov     esi, 1", "call    ___fprintf_chk", "mov     rax, cs:start_time", "cmp     rax, now", "jge     short loc_3C38"], ["mov~rdi,<TAG>", "lea~r12,[rsp+0]", "mov~r8d,0", "mov~ecx,0", "mov~edx,0", "mov~rsi,r12", "call~FOO", "mov~rbx,<TAG>", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~r8d,0", "mov~r13,rax", "mov~rcx,rbx", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~r8,r13", "xor~eax,eax", "mov~rcx,rbx", "mov~esi,0", "call~FOO", "mov~rax,<TAG>", "cmp~rax,now", "jge~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 1, 0, 1, 0, 7, 0, 0, 3, -1, 0.0, ["add     rsp, 2B0h", "pop     rbx", "pop     now", "pop     r12", "pop     r13", "pop     r14", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~now", "pop~r12", "pop~r13", "pop~r14", "retn"]]], "func_feature": [13, 15, 22, 1, 13, 17, 5, 128, 0.06177, 18, 4], "succs": [[6], [0], [0], [1, 2], [11, 12], [10, 4], [4], [10, 4], [5, 7], [6], [9, 3], [], []], "fname": "print_stats", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[1, 0, 0, 1, 0, 7, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "mov     eax, ebx", "pop     value", "pop     table", "pop     error_msgid", "pop     str", "retn"], ["add~rsp,0", "mov~eax,ebx", "pop~value", "pop~table", "pop~error_msgid", "pop~str", "retn"]], [0, 0, 16, 0, 0, 3, 2, 1, 6, 8, 0.12083333333333333, ["or      ebx, edx", "test    strcomma, strcomma", "jz      short loc_3D34"], ["or~ebx,edx", "test~strcomma,strcomma", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 6, 1, 0.15, ["test    strcomma, strcomma", "jz      short loc_3D8F"], ["test~strcomma,strcomma", "jz~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 5, 2, 0.2833333333333333, ["cmp     byte ptr [entry], 0", "jz      short loc_3D41"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 16, 0, 1, 5, 0, 1, 1, 6, 0.17083333333333334, ["mov     esi, 2Ch ; ','; c", "mov     rdi, str; s", "call    _strchr", "mov     r8, entry", "nop     dword ptr [strcomma]"], ["mov~esi,0", "mov~rdi,str", "call~FOO", "mov~r8,entry", "nop~<TAG>"]], [0, 0, 16, 0, 0, 2, 0, 1, 7, 7, 0.0875, ["lea     str, [strcomma+1]", "jmp     short loc_3CD5"], ["lea~str,[strcomma+0]", "jmp~FOO"]], [1, 0, 16, 1, 0, 9, 1, 0, 0, 7, 0.0, ["push    r13", "push    r12", "mov     r13, str", "push    rbp", "push    rbx", "mov     rbp, table", "mov     r12, error_msgid", "xor     ebx, ebx", "sub     rsp, 8"], ["push~r13", "push~r12", "mov~r13,str", "push~rbp", "push~rbx", "mov~rbp,table", "mov~r12,error_msgid", "xor~ebx,ebx", "sub~rsp,0"]], [0, 0, 16, 0, 0, 4, 1, 1, 3, 4, 0.4, ["movzx   esi, byte ptr [rcx]", "movzx   edi, byte ptr [rdx]", "test    sil, sil", "jnz     short loc_3CF0"], ["movzx~esi,<TAG>", "movzx~edi,<TAG>", "test~sil,sil", "jnz~FOO"]], [0, 0, 16, 0, 0, 3, 0, 1, 2, 5, 0.35, ["mov     rcx, entry", "mov     rdx, str", "jmp     short loc_3CFD"], ["mov~rcx,entry", "mov~rdx,str", "jmp~FOO"]], [2, 0, 16, 2, 0, 4, 0, 1, 4, 3, 0.175, ["add     rdx, 1", "add     rcx, 1", "cmp     sil, dil", "jnz     short loc_3D1B"], ["add~rdx,0", "add~rcx,0", "cmp~sil,dil", "jnz~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 5, 3, 0.01875, ["test    dil, dil", "jnz     short loc_3D1B"], ["test~dil,dil", "jnz~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 4, 4, 0.19583333333333333, ["cmp     dil, 2Ch ; ','", "jz      short loc_3D13"], ["cmp~dil,0", "jz~FOO"]], [1, 0, 16, 1, 0, 2, 0, 1, 6, 6, 0.1, ["add     entry, 10h", "jmp     short loc_3CE8"], ["add~entry,0", "jmp~FOO"]], [3, 0, 0, 0, 4, 19, 5, 4, 8, -1, 0.0, ["mov     rcx, slen; argsize", "mov     rdx, r13; arg", "mov     esi, 6; s", "xor     edi, edi; n", "call    quotearg_n_style_mem", "mov     edx, 5; category", "mov     rsi, error_msgid; msgid", "xor     edi, edi; domainname", "mov     value, rax", "call    _dcgettext", "lea     rdx, format; \"%s: %s\"", "mov     rcx, rax", "xor     edi, edi; status", "mov     r8, rbx", "xor     esi, esi; errnum", "xor     eax, eax", "call    _error", "mov     edi, 1; status", "call    usage"], ["mov~rcx,slen", "mov~rdx,r13", "mov~esi,0", "xor~edi,edi", "call~FOO", "mov~edx,0", "mov~rsi,error_msgid", "xor~edi,edi", "mov~value,rax", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "xor~edi,edi", "mov~r8,rbx", "xor~esi,esi", "xor~eax,eax", "call~FOO", "mov~edi,0", "call~FOO"]], [2, 0, 1, 1, 0, 8, 2, 1, 7, 0, 0.027083333333333334, ["xor     eax, eax", "or      rcx, 0FFFFFFFFFFFFFFFFh", "mov     rdi, str", "repne scasb", "mov     rax, rcx", "not     rax", "sub     rax, 1", "jmp     short loc_3D49"], ["xor~eax,eax", "or~rcx,0", "mov~rdi,str", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "sub~rax,0", "jmp~FOO"]], [0, 0, 1, 1, 0, 1, 0, 0, 7, -1, 0.027083333333333334, ["sub     strcomma, str"], ["sub~strcomma,str"]], [0, 0, 16, 0, 0, 3, 1, 1, 5, 3, 0.16875, ["mov     edx, [entry+0Ch]", "test    edx, edx", "jnz     short loc_3D27"], ["mov~edx,[entry+0]", "test~edx,edx", "jnz~FOO"]]], "func_feature": [5, 14, 17, 0, 17, 23, 4, 78, 0.13382, 1, 7], "succs": [[], [0, 5], [14, 15], [2, 12], [8], [4], [4], [9, 11], [7], [3, 7], [16, 3], [16, 10], [8], [], [13], [13], [1, 3]], "fname": "parse_symbols", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.17777777777777778, ["mov     rdx, [rsp+28h+var_10]", "xor     rdx, fs:28h", "mov     rax, rcx", "jnz     short loc_3E5A"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "mov~rax,rcx", "jnz~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 2, 2, 0.06666666666666667, ["mov     byte ptr [invalid], 1", "xor     ecx, ecx", "jmp     short loc_3DF1"], ["mov~<TAG>,0", "xor~ecx,ecx", "jmp~FOO"]], [1, 0, 6, 1, 1, 6, 1, 2, 2, 2, 0.06944444444444445, ["add     rdi, 1; str", "mov     rsi, invalid; invalid", "call    parse_integer", "test    rax, rax", "mov     rcx, rax", "jz      short loc_3DF1"], ["add~rdi,0", "mov~rsi,invalid", "call~FOO", "test~rax,rax", "mov~rcx,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 4, 2, 0.016666666666666666, ["jmp     short loc_3DF1"], ["jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 2, 2, 0.025, ["mov     rcx, [rsp+28h+n]"], ["mov~rcx,[rsp+0]"]], [2, 1, 10, 1, 1, 13, 1, 2, 0, 4, 0.0, ["push    rbx", "lea     r8, valid_suffixes; \"bcEGkKMPTwYZ0\"", "mov     rbx, invalid", "mov     edx, 0Ah; strtol_base", "sub     rsp, 20h", "lea     rcx, [rsp+28h+n]; val", "lea     invalid, [rsp+28h+suffix]; ptr", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "call    xstrtoumax", "cmp     eax, 2", "jz      short loc_3E10"], ["push~rbx", "lea~r8,<TAG>", "mov~rbx,invalid", "mov~edx,0", "sub~rsp,<STR>", "lea~rcx,[rsp+0]", "lea~invalid,[rsp+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "cmp~eax,0", "jz~FOO"]], [0, 1, 0, 1, 0, 3, 0, 0, 4, -1, 0.0, ["add     rsp, 20h", "pop     invalid", "retn"], ["add~rsp,<STR>", "pop~invalid", "retn"]], [0, 0, 5, 0, 0, 2, 1, 1, 1, 3, 0.03333333333333333, ["test    eax, eax", "jnz     short loc_3E1A"], ["test~eax,eax", "jnz~FOO"]], [0, 0, 5, 2, 0, 9, 1, 1, 3, 3, 0.044444444444444446, ["mov     rdi, [rsp+28h+n]", "xor     edx, edx", "mov     rsi, rdi", "imul    rsi, multiplier", "mov     multiplier, rsi", "div     multiplier", "mov     multiplier, rsi", "cmp     rdi, rax", "jnz     short loc_3E1A"], ["mov~rdi,[rsp+0]", "xor~edx,edx", "mov~rsi,rdi", "imul~rsi,multiplier", "mov~multiplier,rsi", "div~,multiplier", "mov~multiplier,rsi", "cmp~rdi,rax", "jnz~FOO"]], [1, 0, 7, 0, 0, 3, 0, 1, 1, 3, 0.05555555555555556, ["mov     rdi, [rsp+28h+suffix]", "cmp     byte ptr [rdi], 78h ; 'x'", "jz      short loc_3E28"], ["mov~rdi,[rsp+0]", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 6, 11, 1, 11, 15, 2, 46, 0.04444, 2, 5], "succs": [[10, 6], [0], [0, 8], [0], [0], [9, 7], [], [1, 4], [1, 3], [1, 2], []], "fname": "parse_integer", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[1, 0, 6, 0, 0, 3, 1, 1, 0, 0, 0.0641025641025641, ["and     ebx, 0FFFEFFFFh", "cmp     ebx, r12d", "jnz     loc_3ED3"], ["and~ebx,0", "cmp~ebx,r12d", "jnz~FOO"]], [2, 0, 8, 0, 0, 4, 1, 1, 5, 4, 0.10256410256410256, ["mov     eax, [rsp+0C8h+st.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_3F57"], ["mov~eax,[rsp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [2, 0, 3, 0, 4, 16, 2, 5, 2, 2, 0.05448717948717949, ["mov     rdi, name; name", "call    quote", "lea     rsi, aSettingFlagsFo; \"setting flags for %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     fd, rax", "call    _dcgettext", "mov     new_flags, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, rbp", "mov     rdx, rbx; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_3E8A"], ["mov~rdi,name", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~fd,rax", "call~FOO", "mov~new_flags,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,rbp", "mov~rdx,rbx", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 12, 0, 1, 8, 2, 2, 1, 3, 0.05769230769230769, ["mov     esi, 3; cmd", "mov     ebp, edi", "mov     r13, name", "call    _fcntl", "or      ebx, eax", "test    eax, eax", "mov     r12d, eax", "js      short loc_3EE8"], ["mov~esi,0", "mov~ebp,edi", "mov~r13,name", "call~FOO", "or~ebx,eax", "test~eax,eax", "mov~r12d,eax", "js~FOO"]], [1, 0, 9, 0, 1, 6, 1, 2, 4, 3, 0.10897435897435898, ["mov     rdx, rsp; stat_buf", "mov     esi, ebp; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "jnz     short loc_3EE8"], ["mov~rdx,rsp", "mov~esi,ebp", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 4, 0, 1, 3, 0, 2, 6, 3, 0.01282051282051282, ["call    ___errno_location", "mov     dword ptr [rax], 14h", "jmp     short loc_3EE8"], ["call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [2, 0, 4, 1, 1, 7, 1, 2, 4, 2, 0.04807692307692307, ["xor     eax, eax", "mov     edx, ebx", "mov     esi, 4; cmd", "mov     edi, ebp; fd", "call    _fcntl", "add     eax, 1", "jnz     short loc_3E8A"], ["xor~eax,eax", "mov~edx,ebx", "mov~esi,0", "mov~edi,ebp", "call~FOO", "add~eax,0", "jnz~FOO"]], [2, 0, 13, 1, 0, 11, 2, 1, 0, 2, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     ebx, esi", "sub     rsp, 0A8h", "mov     rax, fs:28h", "mov     [rsp+0C8h+var_30], rax", "xor     eax, eax", "and     ebx, 0FFFDFEFFh", "jnz     short loc_3EAF"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~ebx,esi", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "and~ebx,0", "jnz~FOO"]], [1, 0, 10, 0, 0, 2, 1, 1, 3, 3, 0.12179487179487179, ["test    ebx, 10000h", "jnz     short loc_3F27"], ["test~ebx,0", "jnz~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 2, 2, 0.09935897435897435, ["cmp     eax, ebx", "jz      short loc_3E8A"], ["cmp~eax,ebx", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.14102564102564102, ["mov     rax, [rsp+0C8h+var_30]", "xor     rax, fs:28h", "jnz     loc_3F6B"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 2, -1, 0.0, ["add     rsp, 0A8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 3, 0, 0, 1, 0, 1, 7, 2, 0.016025641025641024, ["jmp     loc_3E8A"], ["jmp~FOO"]]], "func_feature": [9, 12, 21, 1, 14, 21, 2, 73, 0.05907, 2, 3], "succs": [[13, 6], [0, 5], [11], [9, 2], [1, 2], [2], [2, 11], [11, 3], [4, 6], [8, 11], [], [10, 12], [], [11]], "fname": "set_fd_flags", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 8, 0, 0, 2, 1, 1, 0, 0, 0.06944444444444445, ["test    r14d, r14d", "jnz     short loc_3FF8"], ["test~r14d,r14d", "jnz~FOO"]], [2, 0, 9, 1, 2, 25, 2, 3, 0, 2, 0.0, ["push    r14", "push    r13", "mov     r13, filename", "push    r12", "push    rbp", "mov     r12d, ecx", "push    rbx", "mov     ebx, esi", "mov     rbp, offset", "mov     esi, 80306D02h; request", "mov     edi, ebx; fd", "sub     rsp, 70h", "mov     rax, fs:28h", "mov     [rsp+98h+var_30], rax", "xor     eax, eax", "mov     offset, rsp", "call    _ioctl", "mov     rsi, offset; offset", "mov     edx, r12d; whence", "mov     edi, ebx; fd", "mov     r14d, eax", "call    _lseek", "test    rax, rax", "mov     offset, rax", "js      short loc_3FF8"], ["push~r14", "push~r13", "mov~r13,filename", "push~r12", "push~rbp", "mov~r12d,ecx", "push~rbx", "mov~ebx,esi", "mov~rbp,offset", "mov~esi,0", "mov~edi,ebx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~offset,rsp", "call~FOO", "mov~rsi,offset", "mov~edx,r12d", "mov~edi,ebx", "mov~r14d,eax", "call~FOO", "test~rax,rax", "mov~offset,rax", "js~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 3, 2, 0.125, ["mov     rax, [rsp+98h+s2.mt_resid]", "cmp     [rsp+98h+s1.mt_resid], rax", "jnz     short loc_3FF8"], ["mov~rax,[rsp+0]", "cmp~[rsp+0],rax", "jnz~FOO"]], [1, 0, 7, 0, 1, 7, 2, 2, 2, 2, 0.1111111111111111, ["lea     rdx, [rsp+98h+s2]", "xor     eax, eax", "mov     esi, 80306D02h; request", "mov     edi, ebx; fd", "call    _ioctl", "test    eax, eax", "jnz     short loc_3FF8"], ["lea~rdx,[rsp+0]", "xor~eax,eax", "mov~esi,0", "mov~edi,ebx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 1, 1, 0.19444444444444442, ["mov     rcx, [rsp+98h+var_30]", "xor     rcx, fs:28h", "mov     rax, rbp", "jnz     short loc_4055"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,rbp", "jnz~FOO"]], [3, 0, 3, 0, 3, 16, 5, 4, 5, 2, 0.020833333333333332, ["mov     fdesc, [rsp+98h+s2.mt_type]", "lea     rsi, aWarningWorking; \"warning: working around lseek kernel bu\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "or      new_position, 0FFFFFFFFFFFFFFFFh", "call    _dcgettext", "mov     r8, rbx", "mov     rdx, rax; format", "mov     rcx, filename", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "call    ___errno_location", "mov     dword ptr [rax], 0", "jmp     short loc_3FF8"], ["mov~fdesc,[rsp+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "or~new_position,0", "call~FOO", "mov~r8,rbx", "mov~rdx,rax", "mov~rcx,filename", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 5, 2, 0.020833333333333332, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 5, 0, 0, 3, 0, 1, 4, 3, 0.1111111111111111, ["mov     rax, qword ptr [rsp+98h+s2.mt_fileno]", "cmp     qword ptr [rsp+98h+s1.mt_fileno], rax", "jz      short loc_4018"], ["mov~rax,[word ptr [rsp+0]", "cmp~[word ptr [rsp+0],rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 2, -1, 0.0, ["add     rsp, 70h", "pop     rbx", "pop     rbp", "pop     whence", "pop     filename", "pop     r14", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~whence", "pop~filename", "pop~r14", "retn"]]], "func_feature": [7, 11, 14, 1, 10, 14, 4, 69, 0.06528, 2, 2], "succs": [[3, 4], [0, 4], [4, 7], [2, 4], [8, 9], [4], [4], [5, 6], [], []], "fname": "skip_via_lseek", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 5, 1, 2, 1, 1, 0.1, ["sub     rsp, 8", "mov     rdi, cs:stderr@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jnz     short loc_408D"], ["sub~rsp,0", "mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 0, 2, 0.0, ["cmp     cs:close_stdout_required, 0", "jnz     short loc_4088"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 1, -1, 0.05, ["jmp     close_stdout"], ["jmp~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 2, 0, 0.0, ["mov     edi, 1; status", "call    __exit"], ["mov~edi,0", "call~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []]], "func_feature": [2, 1, 5, 0, 6, 5, 0, 12, 0.025, 2, 2], "succs": [[], [0, 4], [1, 3], [5], [], []], "fname": "maybe_close_stdout", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[1, 0, 0, 1, 0, 4, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [1, 0, 3, 0, 1, 4, 1, 2, 1, -1, 0.30000000000000004, ["mov     edi, 1; fd", "call    _close", "test    eax, eax", "js      short loc_40D0"], ["mov~edi,0", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [3, 0, 1, 1, 3, 18, 2, 4, 2, -1, 0.15000000000000002, ["mov     rdi, cs:output_file; name", "call    quote", "lea     rsi, aClosingOutputF; \"closing output file %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbp, rax", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "add     rsp, 8", "mov     rcx, rbp", "mov     rdx, rbx; format", "mov     edi, 1; status", "xor     eax, eax", "pop     rbx", "pop     rbp", "jmp     _error"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbp,rax", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "add~rsp,0", "mov~rcx,rbp", "mov~rdx,rbx", "mov~edi,0", "xor~eax,eax", "pop~rbx", "pop~rbp", "jmp~FOO"]], [2, 0, 4, 0, 4, 16, 2, 5, 1, 0, 0.0, ["mov     rdi, cs:input_file; name", "call    quote", "lea     rsi, aClosingInputFi; \"closing input file %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     rbp, rax", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, rbp", "mov     rdx, rbx; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_40B1"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~rbp,rax", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,rbp", "mov~rdx,rbx", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 5, 1, 1, 7, 2, 2, 0, 1, 0.0, ["push    rbp", "push    rbx", "xor     edi, edi; fd", "sub     rsp, 8", "call    _close", "test    eax, eax", "js      short loc_4118"], ["push~rbp", "push~rbx", "xor~edi,edi", "sub~rsp,0", "call~FOO", "test~eax,eax", "js~FOO"]]], "func_feature": [9, 7, 13, 0, 6, 6, 2, 49, 0.075, 4, 3], "succs": [[], [0, 3], [], [2], [1], [1, 4]], "fname": "cleanup", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 11, 0, 3, 5, 0, 4, 0, 0, 0.09999999999999999, ["call    cleanup", "call    print_stats", "mov     edi, ebx; sig", "call    _raise", "jmp     loc_417F"], ["call~FOO", "call~FOO", "mov~edi,ebx", "call~FOO", "jmp~FOO"]], [1, 0, 11, 0, 1, 6, 2, 2, 3, 4, 0.32727272727272727, ["xor     edx, edx; oset", "mov     rsi, rbp; set", "mov     edi, 2; how", "call    _sigprocmask", "test    ebx, ebx", "jnz     short loc_4210"], ["xor~edx,edx", "mov~rsi,rbp", "mov~edi,0", "call~FOO", "test~ebx,ebx", "jnz~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 4, -1, 0.0, ["add     rsp, 98h", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 3, 1, 0.16363636363636364, ["mov     rax, [rsp+var_s88]", "xor     rax, fs:28h", "jnz     short loc_4226"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 11, 0, 0, 3, 1, 1, 1, 3, 0.21818181818181817, ["mov     eax, cs:interrupt_signal", "test    eax, eax", "jnz     short loc_4193"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [1, 0, 11, 1, 0, 7, 1, 0, 0, 4, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 98h", "mov     rax, fs:28h", "mov     [rsp+var_s88], rax", "xor     eax, eax", "mov     rbp, rsp"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rbp,rsp"]], [0, 0, 11, 0, 0, 3, 1, 1, 5, 2, 0.10909090909090909, ["mov     eax, cs:info_signal_count", "test    eax, eax", "jnz     short loc_4193"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [0, 0, 11, 0, 1, 4, 1, 2, 4, 3, 0.17272727272727273, ["call    print_stats", "mov     eax, cs:interrupt_signal", "test    eax, eax", "jnz     short loc_4193"], ["call~FOO", "mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [0, 0, 11, 0, 1, 8, 2, 2, 2, 5, 0.2909090909090909, ["lea     rsi, caught_signals; set", "xor     edi, edi; how", "mov     rdx, rbp; oset", "call    _sigprocmask", "mov     ebx, cs:interrupt_signal", "mov     eax, cs:info_signal_count", "test    eax, eax", "jz      short loc_41BD"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~rdx,rbp", "call~FOO", "mov~ebx,<TAG>", "mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [1, 0, 11, 1, 0, 2, 0, 0, 3, 5, 0.0, ["sub     eax, 1", "mov     cs:info_signal_count, eax"], ["sub~eax,0", "mov~<TAG>,eax"]], [0, 0, 11, 0, 0, 3, 1, 1, 2, 2, 0.08181818181818182, ["mov     eax, cs:info_signal_count", "test    eax, eax", "jz      short loc_41E9"], ["mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]]], "func_feature": [7, 10, 15, 1, 12, 17, 3, 49, 0.12197, 4, 3], "succs": [[5], [0, 8], [], [2, 4], [], [9, 11], [5], [9, 3], [9, 7], [1, 10], [1], [9, 3]], "fname": "process_signals", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[1, 0, 3, 0, 1, 3, 0, 2, 0, 0, 0.0, ["call    ___errno_location", "cmp     dword ptr [rax], 4", "jnz     short loc_426D"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 3, 0, 2, 8, 1, 3, 1, 1, 0.3333333333333333, ["call    process_signals", "mov     rdx, size; nbytes", "mov     rsi, buf; buf", "mov     edi, r13d; fd", "call    _read", "test    rax, rax", "mov     rbx, rax", "js      short loc_4248"], ["call~FOO", "mov~rdx,size", "mov~rsi,buf", "mov~edi,r13d", "call~FOO", "test~rax,rax", "mov~rbx,rax", "js~FOO"]], [1, 0, 3, 1, 0, 9, 0, 1, 0, 2, 0.0, ["push    r13", "push    r12", "mov     r13d, edi", "push    rbp", "push    rbx", "mov     r12, buf", "mov     rbp, size", "sub     rsp, 8", "jmp     short loc_4252"], ["push~r13", "push~r12", "mov~r13d,edi", "push~rbp", "push~rbx", "mov~r12,buf", "mov~rbp,size", "sub~rsp,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 2, 0, 0.0, ["add     rsp, 8", "mov     rax, rbx", "pop     rbx", "pop     size", "pop     buf", "pop     fd", "retn"], ["add~rsp,0", "mov~rax,rbx", "pop~rbx", "pop~size", "pop~buf", "pop~fd", "retn"]]], "func_feature": [3, 1, 6, 0, 4, 5, 1, 27, 0.08333, 0, 2], "succs": [[1, 3], [0, 3], [1], []], "fname": "iread", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 5, 0, 0, 1, 0, 1, 0, 0, 0.14285714285714285, ["jz      short loc_42D0"], ["jz~FOO"]], [0, 0, 5, 0, 1, 6, 1, 1, 2, -1, 0.26190476190476186, ["mov     rdx, size; size", "mov     rsi, buf; buf", "mov     edi, r13d; fd", "call    iread", "test    ncurr, ncurr", "jns     short loc_42A0"], ["mov~rdx,size", "mov~rsi,buf", "mov~edi,r13d", "call~FOO", "test~ncurr,ncurr", "jns~FOO"]], [0, 0, 0, 0, 0, 2, 1, 0, 1, 0, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [0, 0, 7, 0, 0, 2, 1, 1, 0, 1, 0.0, ["test    size, size", "jz      short loc_42DE"], ["test~size,size", "jz~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "pop     size", "pop     buf", "pop     nread", "pop     fd", "retn"], ["add~rsp,0", "pop~size", "pop~buf", "pop~nread", "pop~fd", "retn"]], [0, 0, 5, 3, 0, 4, 0, 1, 4, -1, 0.047619047619047616, ["add     nread, ncurr", "add     buf, ncurr", "sub     rbx, ncurr", "jz      short loc_42D0"], ["add~nread,ncurr", "add~buf,ncurr", "sub~rbx,ncurr", "jz~FOO"]], [1, 0, 5, 1, 0, 10, 1, 1, 1, -1, 0.11904761904761904, ["push    r13", "push    r12", "mov     r13d, edi", "push    rbp", "push    rbx", "mov     rbp, buf", "mov     rbx, size", "xor     r12d, r12d", "sub     rsp, 8", "jmp     short loc_42AD"], ["push~r13", "push~r12", "mov~r13d,edi", "push~rbp", "push~rbx", "mov~rbp,buf", "mov~rbx,size", "xor~r12d,r12d", "sub~rsp,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 4, -1, 0.0, ["add     rsp, 8", "mov     ncurr, nread", "pop     rbx", "pop     buf", "pop     nread", "pop     fd", "retn"], ["add~rsp,0", "mov~ncurr,nread", "pop~rbx", "pop~buf", "pop~nread", "pop~fd", "retn"]]], "func_feature": [1, 4, 5, 0, 8, 9, 0, 38, 0.07143, 0, 6], "succs": [[5, 7], [0, 4], [], [2, 6], [], [1, 7], [1], []], "fname": "iread_fullblock", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 4, 7, 0, 4, 0, 0, 0.0, ["push    rbx", "mov     ebx, edi", "call    cleanup", "call    print_stats", "call    process_signals", "mov     edi, ebx; status", "call    _exit"], ["push~rbx", "mov~ebx,edi", "call~FOO", "call~FOO", "call~FOO", "mov~edi,ebx", "call~FOO"]]], "func_feature": [4, 0, 4, 0, 1, 0, 4, 7, 0.0, 0, 0], "succs": [[]], "fname": "quit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 17, 0, 1, 2, 0, 2, 0, 0, 0.023674242424242424, ["call    print_stats", "jmp     short loc_4420"], ["call~FOO", "jmp~FOO"]], [2, 0, 17, 0, 3, 14, 4, 4, 5, 5, 0.032986111111111105, ["call    quote", "lea     rsi, aReadingS; \"reading %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r14, rax", "call    _dcgettext", "mov     esi, [r15]; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "mov     rcx, r14", "call    _error", "test    byte ptr cs:conversions_mask+1, 1", "jz      loc_45C3"], ["call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r14,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "mov~rcx,r14", "call~FOO", "test~<TAG>,0", "jz~FOO"]], [1, 0, 30, 1, 1, 10, 1, 2, 1, 4, 0.018229166666666668, ["mov     rax, records", "mov     ecx, 1; whence", "mov     esi, ebp; fdesc", "imul    rax, blocksize", "mov     rdi, file_0; filename", "mov     rdx, offset_0; offset", "mov     [rsp+0E8h+lseek_errno], offset_0", "call    skip_via_lseek", "test    rax, rax", "js      loc_4492"], ["mov~rax,records", "mov~ecx,0", "mov~esi,ebp", "imul~rax,blocksize", "mov~rdi,file_0", "mov~rdx,offset_0", "mov~[rsp+0],offset_0", "call~FOO", "test~rax,rax", "js~FOO"]], [3, 0, 33, 2, 1, 24, 2, 1, 0, 5, 0.0, ["push    r15", "push    r14", "mov     r14, file_0", "push    r13", "push    r12", "mov     r13, buf", "push    rbp", "push    rbx", "mov     r12, blocksize", "mov     rbx, records", "mov     ebp, edi", "sub     rsp, 0B8h", "mov     rax, fs:28h", "mov     [rsp+0E8h+var_40], rax", "xor     eax, eax", "mov     [rsp+0E8h+file], file_0", "call    ___errno_location", "xor     edx, edx", "mov     r15, rax", "mov     dword ptr [rax], 0", "mov     rax, 7FFFFFFFFFFFFFFFh", "div     blocksize", "cmp     rax, records", "jb      short loc_43C2"], ["push~r15", "push~r14", "mov~r14,file_0", "push~r13", "push~r12", "mov~r13,buf", "push~rbp", "push~rbx", "mov~r12,blocksize", "mov~rbx,records", "mov~ebp,edi", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~<TAG>,file_0", "call~FOO", "xor~edx,edx", "mov~r15,rax", "mov~<TAG>,0", "mov~rax,0", "div~,blocksize", "cmp~rax,records", "jb~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 5, 2, 0.014204545454545456, ["mov     nread, records", "jmp     loc_4399"], ["mov~nread,records", "jmp~FOO"]], [0, 0, 17, 0, 0, 1, 0, 1, 4, 3, 0.06439393939393939, ["jz      loc_448A"], ["jz~FOO"]], [0, 0, 17, 1, 0, 6, 2, 1, 6, 4, 0.011363636363636364, ["xor     edx, edx", "add     nread, cs:input_offset", "setb    dl", "mov     cs:input_offset, rax", "test    rdx, rdx", "jz      short loc_4420"], ["xor~edx,edx", "add~nread,<TAG>", "setb~dl", "mov~<TAG>,rax", "test~rdx,rdx", "jz~FOO"]], [0, 0, 17, 0, 0, 2, 1, 1, 5, 4, 0.03977272727272727, ["test    ebp, ebp", "jnz     short loc_4420"], ["test~ebp,ebp", "jnz~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 2, 3, 0.020833333333333336, ["test    ebp, ebp", "jz      loc_44E8"], ["test~ebp,ebp", "jz~FOO"]], [0, 0, 5, 3, 0, 7, 1, 1, 6, 3, 0.0, ["mov     rax, rbx", "xor     edx, edx", "sub     rax, rsi", "sub     rsi, rcx", "div     blocksize", "mov     [rsp+0E8h+lseek_errno], rsi", "jmp     short loc_454C"], ["mov~rax,rbx", "xor~edx,edx", "sub~rax,rsi", "sub~rsi,rcx", "div~,blocksize", "mov~[rsp+0],rsi", "jmp~FOO"]], [0, 0, 6, 0, 0, 5, 0, 0, 5, 3, 0.005681818181818182, ["mov     rbx, [rsp+0E8h+lseek_errno]", "mov     rsi, [rsp+0E8h+st.st_size]", "lea     rdx, [rbx+rcx]", "cmp     rsi, rdx", "jnb     short loc_454C"], ["mov~rbx,[rsp+0]", "mov~rsi,[rsp+0]", "lea~rdx,<TAG>", "cmp~rsi,rdx", "jnb~FOO"]], [0, 0, 3, 0, 0, 1, 1, 0, 3, 2, 0.02840909090909091, ["xor     eax, eax"], ["xor~eax,eax"]], [1, 0, 17, 1, 0, 2, 0, 1, 6, 3, 0.08712121212121213, ["sub     rbx, 1", "jz      loc_4397"], ["sub~rbx,0", "jz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 0, 7, 4, 0.0, ["mov     cs:input_offset_overflow, 1", "nop     dword ptr [rax+00000000h]"], ["mov~<TAG>,0", "nop~[word ptr [rax+0]"]], [0, 0, 2, 0, 0, 3, 1, 1, 4, 1, 0.045454545454545456, ["mov     rcx, [rsp+0E8h+var_40]", "xor     rcx, fs:28h", "jnz     loc_45CD"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 4, 1, 0, 4, 0, 0, 5, 2, 0.021780303030303032, ["mov     rdx, [rsp+0E8h+lseek_errno]", "add     rdx, rcx", "mov     cs:input_offset, rdx", "jnb     loc_4399"], ["mov~rdx,[rsp+0]", "add~rdx,rcx", "mov~<TAG>,rdx", "jnb~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, 2, 0.0, ["mov     cs:input_offset_overflow, 1", "jmp     loc_4399"], ["mov~<TAG>,0", "jmp~FOO"]], [2, 0, 8, 0, 3, 13, 2, 3, 4, 4, 0.0, ["mov     rdi, [rsp+0E8h+file]; name", "call    quote", "lea     rsi, aCannotFstatS; \"cannot fstat %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     records, rax", "call    _dcgettext", "mov     esi, [r15]; errnum", "mov     rdx, rax; format", "mov     rcx, rbx", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~records,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "mov~rcx,rbx", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 9, 0, 1, 6, 2, 2, 3, 4, 0.017045454545454544, ["lea     rdx, [rsp+0E8h+st]; stat_buf", "xor     esi, esi; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "jz      short loc_4531"], ["lea~rdx,[rsp+0]", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 21, 0, 1, 9, 2, 2, 2, 5, 0.022017045454545456, ["mov     eax, [r15]", "mov     rdi, [rsp+0E8h+file]; filename", "xor     edx, edx; offset", "mov     ecx, 2; whence", "mov     esi, ebp; fdesc", "mov     dword ptr [rsp+0E8h+lseek_errno], eax", "call    skip_via_lseek", "test    rax, rax", "js      loc_442A"], ["mov~eax,<TAG>", "mov~rdi,<TAG>", "xor~edx,edx", "mov~ecx,0", "mov~esi,ebp", "mov~[word ptr [rsp+0],eax", "call~FOO", "test~rax,rax", "js~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 3, -1, 0.00789141414141414, ["cmp     dword ptr [rsp+0E8h+lseek_errno], 0", "jnz     short loc_44C3"], ["cmp~[word ptr [rsp+0],0", "jnz~FOO"]], [1, 0, 5, 0, 0, 1, 0, 0, 2, -1, 0.008680555555555556, ["mov     dword ptr [rsp+0E8h+lseek_errno], 4Bh ; 'K'"], ["mov~[word ptr [rsp+0],0"]], [1, 0, 21, 0, 1, 7, 2, 1, 1, 6, 0.01112689393939394, ["mov     rdi, [rsp+0E8h+file]; filename", "xor     edx, edx; offset", "mov     ecx, 2; whence", "mov     esi, ebp; fdesc", "call    skip_via_lseek", "test    rax, rax", "jns     loc_44BB"], ["mov~rdi,<TAG>", "xor~edx,edx", "mov~ecx,0", "mov~esi,ebp", "call~FOO", "test~rax,rax", "jns~FOO"]], [0, 0, 1, 0, 2, 8, 3, 2, 5, -1, 0.005839646464646464, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     esi, dword ptr [rsp+0E8h+lseek_errno]; errnum", "mov     rdx, rax; format", "mov     rcx, rbx", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["xor~edi,edi", "call~FOO", "mov~esi,[word ptr [rsp+0]", "mov~rdx,rax", "mov~rcx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 2, 0, 1, 5, 0, 2, 4, -1, 0.004971590909090909, ["call    quote", "mov     edx, 5", "mov     records, rax", "lea     rsi, unk_90EC", "jmp     loc_45A9"], ["call~FOO", "mov~edx,0", "mov~records,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 2, 0, 1, 4, 0, 1, 4, -1, 0.01507260101010101, ["call    quote", "lea     rsi, aSCannotSeek; \"%s: cannot seek\"", "mov     records, rax", "mov     edx, 5; category"], ["call~FOO", "lea~rsi,<TAG>", "mov~records,rax", "mov~edx,0"]], [1, 0, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 0B8h", "pop     rbx", "pop     fdesc", "pop     blocksize", "pop     buf", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~fdesc", "pop~blocksize", "pop~buf", "pop~r14", "pop~r15", "retn"]], [0, 0, 17, 0, 0, 3, 1, 1, 4, 6, 0.05066287878787879, ["test    ebp, ebp", "mov     rdi, [rsp+0E8h+file]; name", "jnz     loc_4595"], ["test~ebp,ebp", "mov~rdi,<TAG>", "jnz~FOO"]], [0, 0, 17, 0, 1, 6, 1, 1, 3, 4, 0.12452651515151515, ["mov     rdx, blocksize; size_t", "mov     rsi, buf; char *", "mov     edi, ebp; int", "call    cs:iread_fnc", "test    nread, nread", "jns     short loc_43F0"], ["mov~rdx,blocksize", "mov~rsi,buf", "mov~edi,ebp", "call~<TAG>", "test~nread,nread", "jns~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 6, -1, 0.0, ["mov     edi, 1; code", "call    quit"], ["mov~edi,0", "call~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 3, -1, 0.018465909090909092, ["test    ebp, ebp", "mov     rdi, [rsp+0E8h+file]; name", "jnz     loc_4595"], ["test~ebp,ebp", "mov~rdi,<TAG>", "jnz~FOO"]], [1, 1, 7, 0, 0, 6, 2, 1, 4, 3, 0.02462121212121212, ["mov     edx, [rsp+0E8h+st.st_mode]", "xor     eax, eax", "mov     rcx, cs:input_offset", "and     edx, 0F000h", "cmp     edx, 8000h", "jz      short loc_456D"], ["mov~edx,[rsp+0]", "xor~eax,eax", "mov~rcx,<TAG>", "and~edx,0", "cmp~edx,<STR>", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 2, 5, 0.018544823232323232, ["mov     dword ptr [rsp+0E8h+lseek_errno], 0", "jmp     short loc_442A"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]]], "func_feature": [19, 30, 39, 1, 34, 50, 2, 175, 0.02186, 9, 10], "succs": [[12], [0, 29], [8, 19], [2, 22], [14], [4, 7], [12, 13], [12, 6], [18, 11], [15], [9, 15], [14], [11, 28], [12], [32, 26], [16, 14], [14], [31], [17, 31], [28, 20], [21, 30], [30], [33, 21], [29], [23], [23], [], [25, 1], [27, 5], [], [24, 25], [10, 15], [], [28]], "fname": "skip", "n_num": 34}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 14, 0, 0, 2, 0, 1, 0, 0, 0.02380952380952381, ["cmp     cs:output_blocksize, size", "ja      short loc_4670"], ["cmp~<TAG>,size", "ja~FOO"]], [2, 0, 15, 1, 0, 9, 1, 1, 0, 3, 0.0, ["push    r13", "push    r12", "mov     r12, buf", "push    rbp", "push    rbx", "mov     rbp, size", "sub     rsp, 8", "test    byte ptr cs:output_flags+1, 40h", "jz      short loc_4602"], ["push~r13", "push~r12", "mov~r12,buf", "push~rbp", "push~rbx", "mov~rbp,size", "sub~rsp,0", "test~<TAG>,0", "jz~FOO"]], [1, 0, 7, 0, 1, 3, 0, 2, 3, -1, 0.04761904761904762, ["call    ___errno_location", "cmp     dword ptr [rax], 4", "jz      short loc_4615"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 7, 1, 2, 8, 1, 2, 2, -1, 0.24285714285714288, ["call    process_signals", "mov     rdx, size", "lea     rsi, [buf+total_written]; buf", "mov     edi, 1; fd", "sub     rdx, total_written; n", "call    _write", "test    nwritten, nwritten", "jns     short loc_4610"], ["call~FOO", "mov~rdx,size", "lea~rsi,<TAG>", "mov~edi,0", "sub~rdx,total_written", "call~FOO", "test~nwritten,nwritten", "jns~FOO"]], [0, 0, 8, 0, 0, 3, 2, 1, 1, -1, 0.2666666666666667, ["xor     ebx, ebx", "test    size, size", "jnz     short loc_461A"], ["xor~ebx,ebx", "test~size,size", "jnz~FOO"]], [0, 1, 9, 0, 0, 2, 1, 1, 4, -1, 0.17142857142857143, ["or      cs:conversions_mask, 8000h", "jmp     loc_4602"], ["or~<TAG>,<STR>", "jmp~FOO"]], [2, 0, 0, 1, 1, 9, 0, 1, 4, -1, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 1Ch", "add     rsp, 8", "mov     rax, total_written", "pop     total_written", "pop     size", "pop     buf", "pop     r13", "retn"], ["call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rax,total_written", "pop~total_written", "pop~size", "pop~buf", "pop~r13", "retn"]], [0, 0, 7, 0, 0, 1, 0, 1, 3, -1, 0.10952380952380954, ["jz      short loc_4650"], ["jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 2, -1, 0.0380952380952381, ["jmp     short loc_4642"], ["jmp~FOO"]], [1, 0, 12, 0, 4, 16, 3, 5, 3, 0, 0.0, ["mov     rdi, cs:output_file; name", "call    quote", "lea     rsi, aFailedToTurnOf; \"failed to turn off O_DIRECT: %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r13, rax", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r13", "mov     rdx, rbx; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_469B"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r13,rax", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r13", "mov~rdx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [5, 0, 13, 0, 2, 12, 4, 3, 2, 1, 0.0380952380952381, ["mov     esi, 3; cmd", "mov     edi, 1; fd", "xor     eax, eax", "call    _fcntl", "and     ah, 0BFh", "mov     esi, 4; cmd", "mov     edi, 1; fd", "mov     edx, eax", "xor     eax, eax", "call    _fcntl", "test    eax, eax", "jnz     short loc_46D4"], ["mov~esi,0", "mov~edi,0", "xor~eax,eax", "call~FOO", "and~ah,0", "mov~esi,0", "mov~edi,0", "mov~edx,eax", "xor~eax,eax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "mov     rax, rbx", "pop     rbx", "pop     size", "pop     buf", "pop     r13", "retn"], ["add~rsp,0", "mov~rax,rbx", "pop~rbx", "pop~size", "pop~buf", "pop~r13", "retn"]], [0, 0, 7, 0, 0, 2, 0, 0, 4, -1, 0.05714285714285715, ["cmp     size, total_written", "jbe     short loc_4642"], ["cmp~size,total_written", "jbe~FOO"]], [0, 0, 7, 1, 0, 1, 0, 0, 4, -1, 0.01904761904761905, ["add     total_written, nwritten"], ["add~total_written,nwritten"]], [2, 0, 11, 0, 1, 6, 2, 2, 3, -1, 0.12380952380952381, ["xor     esi, esi; offset", "mov     edx, 1; whence", "mov     edi, 1; fd", "call    _lseek", "test    off, off", "js      short loc_46C5"], ["xor~esi,esi", "mov~edx,0", "mov~edi,0", "call~FOO", "test~off,off", "js~FOO"]], [2, 0, 10, 0, 1, 5, 1, 1, 4, -1, 0.0, ["mov     ecx, 4; advise", "xor     edx, edx; len", "mov     rsi, off; offset", "mov     edi, 1; fd", "call    _posix_fadvise"], ["mov~ecx,0", "xor~edx,edx", "mov~rsi,off", "mov~edi,0", "call~FOO"]]], "func_feature": [12, 15, 22, 0, 16, 23, 4, 87, 0.07113, 5, 5], "succs": [[10, 4], [0, 4], [11, 12], [2, 7], [8, 3], [4], [], [13, 6], [11], [14], [9, 14], [], [3, 11], [12], [5, 15], [5]], "fname": "iwrite", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[1, 0, 2, 0, 4, 18, 4, 5, 0, 0, 0.16666666666666666, ["mov     rdi, cs:output_file; name", "mov     rbx, nwritten", "call    quote", "lea     rsi, aWritingToS; \"writing to %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r12, rax", "call    _dcgettext", "mov     rbp, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "xor     edi, edi; status", "xor     eax, eax", "mov     rcx, r12", "mov     rdx, rbp; format", "call    _error", "test    nwritten, nwritten", "jz      short loc_47AA"], ["mov~rdi,<TAG>", "mov~rbx,nwritten", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r12,rax", "call~FOO", "mov~rbp,rax", "call~FOO", "mov~esi,<TAG>", "xor~edi,edi", "xor~eax,eax", "mov~rcx,r12", "mov~rdx,rbp", "call~FOO", "test~nwritten,nwritten", "jz~FOO"]], [0, 0, 4, 1, 1, 9, 0, 2, 0, 2, 0.0, ["mov     rsi, cs:output_blocksize; buf", "mov     rdi, cs:obuf; fd", "push    r12", "push    rbp", "push    rbx", "call    iwrite", "add     cs:w_bytes, nwritten", "cmp     cs:output_blocksize, nwritten", "jnz     short loc_475F"], ["mov~rsi,<TAG>", "mov~rdi,<TAG>", "push~r12", "push~rbp", "push~rbx", "call~FOO", "add~<TAG>,nwritten", "cmp~<TAG>,nwritten", "jnz~FOO"]], [1, 0, 1, 1, 0, 1, 0, 0, 2, 1, 0.0, ["add     cs:w_partial, 1"], ["add~<TAG>,0"]], [2, 0, 0, 1, 0, 6, 0, 0, 1, -1, 0.0, ["pop     rbx", "add     cs:w_full, 1", "mov     cs:oc, 0", "pop     rbp", "pop     r12", "retn"], ["pop~rbx", "add~<TAG>,0", "mov~<TAG>,0", "pop~rbp", "pop~r12", "retn"]], [1, 0, 0, 0, 1, 2, 0, 1, 2, 0, 0.0, ["mov     edi, 1; code", "call    quit"], ["mov~edi,0", "call~FOO"]]], "func_feature": [6, 4, 8, 0, 5, 5, 8, 36, 0.03333, 8, 3], "succs": [[2, 4], [0, 3], [4], [], []], "fname": "write_output", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 14, 0, 0, 5, 0, 1, 0, 0, 0.5208333333333334, ["movzx   eax, byte ptr [buf+0]", "mov     rbx, cs:col", "cmp     al, byte ptr cs:newline_character; \"\\n\"", "mov     rdx, cs:conversion_blocksize", "jnz     short loc_47E0"], ["movzx~eax,[yte ptr [buf+0]", "mov~rbx,<TAG>", "cmp~al,<TAG>", "mov~rdx,<TAG>", "jnz~FOO"]], [0, 0, 14, 0, 0, 6, 0, 1, 1, -1, 0.058333333333333334, ["push    r12", "lea     r12, [buf+i]", "push    rbp", "mov     rbp, buf", "push    rbx", "jmp     short loc_4828"], ["push~r12", "lea~r12,<TAG>", "push~rbp", "mov~rbp,buf", "push~rbx", "jmp~FOO"]], [2, 0, 14, 1, 0, 4, 0, 1, 4, -1, 0.19583333333333333, ["add     buf, 1", "mov     cs:col, 0", "cmp     r12, buf", "jnz     short loc_4828"], ["add~buf,0", "mov~<TAG>,0", "cmp~r12,buf", "jnz~FOO"]], [2, 0, 14, 2, 0, 5, 0, 1, 5, -1, 0.22083333333333333, ["add     buf, 1", "add     rbx, 1", "cmp     r12, rbp", "mov     cs:col, rbx", "jz      short loc_485B"], ["add~buf,0", "add~rbx,0", "cmp~r12,rbp", "mov~<TAG>,rbx", "jz~FOO"]], [0, 0, 14, 0, 1, 1, 0, 1, 6, -1, 0.05, ["call    write_output"], ["call~FOO"]], [0, 0, 14, 0, 0, 1, 0, 1, 5, -1, 0.05416666666666667, ["jmp     short loc_4860"], ["jmp~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 0, 1, 0.0, ["test    i, i", "jz      locret_48D0"], ["test~i,i", "jz~FOO"]], [0, 0, 14, 0, 1, 3, 0, 2, 6, -1, 0.0, ["call    write_output", "mov     rbx, cs:col", "jmp     loc_4814"], ["call~FOO", "mov~rbx,<TAG>", "jmp~FOO"]], [0, 0, 14, 0, 0, 7, 0, 0, 5, -1, 0.05416666666666667, ["mov     rcx, cs:oc", "mov     rsi, cs:obuf", "lea     rdx, [rcx+1]", "cmp     rdx, cs:output_blocksize", "mov     [rsi+rcx], al", "mov     cs:oc, rdx", "jnb     loc_48B8"], ["mov~rcx,<TAG>", "mov~rsi,<TAG>", "lea~rdx,[rcx+0]", "cmp~rdx,<TAG>", "mov~<TAG>,al", "mov~<TAG>,rdx", "jnb~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 3, -1, 0.21666666666666667, ["cmp     rdx, rbx", "ja      short loc_4872"], ["cmp~rdx,rbx", "ja~FOO"]], [0, 0, 14, 0, 0, 1, 0, 0, 4, -1, 0.14166666666666666, ["jbe     short loc_4814"], ["jbe~FOO"]], [1, 0, 14, 1, 0, 2, 0, 1, 4, -1, 0.0375, ["add     cs:r_truncate, 1", "jmp     loc_4814"], ["add~<TAG>,0", "jmp~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 3, -1, 0.24166666666666667, ["cmp     rdx, rbx", "jz      loc_48A8"], ["cmp~rdx,rbx", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 14, 1, 0, 3, 0, 0, 5, -1, 0.1375, ["add     j, 1", "cmp     cs:conversion_blocksize, j", "jbe     short loc_4847"], ["add~j,0", "cmp~<TAG>,j", "jbe~FOO"]], [0, 0, 14, 0, 0, 8, 0, 0, 4, -1, 0.15, ["mov     rdx, cs:oc", "movzx   esi, byte ptr cs:space_character; \" \"", "mov     rcx, cs:obuf", "lea     rax, [rdx+1]", "cmp     rax, cs:output_blocksize", "mov     [rcx+rdx], sil", "mov     cs:oc, rax", "jb      short loc_4865"], ["mov~rdx,<TAG>", "movzx~esi,<TAG>", "mov~rcx,<TAG>", "lea~rax,[rdx+0]", "cmp~rax,<TAG>", "mov~<TAG>,sil", "mov~<TAG>,rax", "jb~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 5, -1, 0.0, ["pop     rbx", "pop     buf", "pop     r12", "retn"], ["pop~rbx", "pop~buf", "pop~r12", "retn"]]], "func_feature": [2, 1, 12, 0, 17, 25, 2, 57, 0.1223, 8, 5], "succs": [[9, 12], [0], [0, 16], [0, 16], [14], [4], [1, 13], [3], [3, 7], [2, 15], [8, 3], [3], [10, 11], [], [2, 15], [5, 14], []], "fname": "copy_with_block", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 15, 0, 0, 2, 0, 0, 0, 0, 0.014705882352941176, ["movzx   ecx, byte ptr cs:space_character; \" \"", "mov     rax, rdx"], ["movzx~ecx,<TAG>", "mov~rax,rdx"]], [1, 0, 15, 1, 1, 6, 0, 2, 6, -1, 0.08486519607843136, ["call    write_output", "sub     cs:pending_spaces_6893, 1", "mov     rdi, cs:obuf", "mov     rdx, cs:oc", "mov     rsi, cs:output_blocksize", "jnz     short loc_49BA"], ["call~FOO", "sub~<TAG>,0", "mov~rdi,<TAG>", "mov~rdx,<TAG>", "mov~rsi,<TAG>", "jnz~FOO"]], [1, 0, 15, 1, 0, 2, 0, 1, 6, -1, 0.08486519607843136, ["sub     cs:pending_spaces_6893, 1", "jz      short loc_49FB"], ["sub~<TAG>,0", "jz~FOO"]], [0, 0, 17, 0, 0, 2, 1, 1, 0, 1, 0.0, ["test    nread, nread", "jz      locret_4A48"], ["test~nread,nread", "jz~FOO"]], [3, 0, 15, 1, 0, 11, 0, 0, 3, -1, 0.04503676470588235, ["mov     rdx, cs:oc", "sub     i, 1", "movzx   esi, byte ptr cs:newline_character; \"\\n\"", "mov     rcx, cs:obuf", "mov     cs:pending_spaces_6893, 0", "mov     cs:col, 0", "lea     rax, [rdx+1]", "cmp     rax, cs:output_blocksize", "mov     [rcx+rdx], sil", "mov     cs:oc, rax", "jnb     loc_4A13"], ["mov~rdx,<TAG>", "sub~i,0", "movzx~esi,<TAG>", "mov~rcx,<TAG>", "mov~<TAG>,0", "mov~<TAG>,0", "lea~rax,[rdx+0]", "cmp~rax,<TAG>", "mov~<TAG>,sil", "mov~<TAG>,rax", "jnb~FOO"]], [0, 0, 15, 0, 0, 6, 0, 0, 2, -1, 0.47150735294117646, ["mov     rax, cs:col", "cmp     rax, cs:conversion_blocksize", "movzx   r13d, byte ptr [buf+i]", "lea     rdx, [rax+1]", "mov     cs:col, rdx", "jnb     short loc_4900"], ["mov~rax,<TAG>", "cmp~rax,<TAG>", "movzx~r13d,<TAG>", "lea~rdx,[rax+0]", "mov~<TAG>,rdx", "jnb~FOO"]], [0, 0, 15, 0, 0, 5, 1, 1, 4, -1, 0.2931985294117647, ["test    rdx, rdx", "mov     rdi, cs:obuf", "mov     rax, cs:oc", "mov     rsi, cs:output_blocksize", "jnz     short loc_49C4"], ["test~rdx,rdx", "mov~rdi,<TAG>", "mov~rax,<TAG>", "mov~rsi,<TAG>", "jnz~FOO"]], [0, 0, 15, 0, 0, 4, 0, 1, 3, -1, 0.3676470588235294, ["movzx   ecx, byte ptr cs:space_character; \" \"", "mov     rdx, cs:pending_spaces_6893", "cmp     cl, r13b", "jz      loc_4A30"], ["movzx~ecx,<TAG>", "mov~rdx,<TAG>", "cmp~cl,r13b", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 15, 0, 0, 5, 0, 0, 7, -1, 0.26746323529411764, ["lea     rax, [rdx+1]", "mov     [rdi+rdx], r13b", "cmp     rax, rsi", "mov     cs:oc, rax", "jb      loc_494B"], ["lea~rax,[rdx+0]", "mov~<TAG>,r13b", "cmp~rax,rsi", "mov~<TAG>,rax", "jb~FOO"]], [0, 0, 15, 0, 0, 2, 0, 1, 6, -1, 0.06832107843137254, ["mov     rdx, rax", "jmp     short loc_49FB"], ["mov~rdx,rax", "jmp~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 5, -1, 0.0, ["add     rsp, 8", "pop     i", "pop     nread", "pop     buf", "pop     c", "retn"], ["add~rsp,0", "pop~i", "pop~nread", "pop~buf", "pop~c", "retn"]], [1, 0, 15, 1, 0, 3, 0, 0, 4, -1, 0.21599264705882354, ["add     i, 1", "cmp     nread, i", "jbe     loc_4A25"], ["add~i,0", "cmp~nread,i", "jbe~FOO"]], [1, 0, 15, 1, 1, 4, 0, 2, 4, -1, 0.15625, ["add     i, 1", "call    write_output", "cmp     nread, i", "ja      loc_4958"], ["add~i,0", "call~FOO", "cmp~nread,i", "ja~FOO"]], [1, 0, 15, 1, 0, 3, 0, 1, 4, -1, 0.015625, ["add     rdx, 1", "mov     cs:pending_spaces_6893, rdx", "jmp     loc_494B"], ["add~rdx,0", "mov~<TAG>,rdx", "jmp~FOO"]], [0, 0, 15, 0, 0, 1, 0, 1, 5, -1, 0.07199754901960784, ["jmp     loc_4A40"], ["jmp~FOO"]], [0, 0, 15, 0, 0, 5, 0, 0, 5, -1, 0.22855392156862742, ["lea     rdx, [rax+1]", "mov     [rdi+rax], cl", "cmp     rdx, rsi", "mov     cs:oc, rdx", "jb      short loc_49B0"], ["lea~rdx,[rax+0]", "mov~<TAG>,cl", "cmp~rdx,rsi", "mov~<TAG>,rdx", "jb~FOO"]], [1, 0, 15, 1, 0, 9, 1, 1, 1, -1, 0.05514705882352941, ["push    r13", "push    r12", "mov     r12, buf", "push    rbp", "push    rbx", "mov     rbp, nread", "xor     ebx, ebx", "sub     rsp, 8", "jmp     short loc_4958"], ["push~r13", "push~r12", "mov~r12,buf", "push~rbp", "push~rbx", "mov~rbp,nread", "xor~ebx,ebx", "sub~rsp,0", "jmp~FOO"]]], "func_feature": [2, 3, 12, 0, 18, 27, 2, 77, 0.13562, 8, 8], "succs": [[16], [0, 9], [0, 9], [8, 17], [12, 13], [4, 7], [16, 15], [14, 6], [], [12, 13], [9], [], [11, 5], [11, 5], [12], [10], [1, 2], [5]], "fname": "copy_with_unblock", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0.0, ["lea     rbx, [slash+4]", "mov     cs:program_invocation_short_name@@GLIBC_2_2_5, argv0"], ["lea~rbx,[slash+0]", "mov~<TAG>,argv0"]], [2, 0, 2, 0, 0, 9, 1, 1, 4, -1, 0.09523809523809523, ["lea     rdi, aLt; \"lt-\"", "mov     ecx, 3", "mov     rsi, base", "mov     rbx, base", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     short loc_4ABD"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,base", "mov~rbx,base", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "test~dl,dl", "jnz~FOO"]], [1, 0, 5, 0, 1, 5, 1, 2, 1, -1, 0.11904761904761904, ["mov     esi, 2Fh ; '/'; c", "mov     rbx, argv0", "call    _strrchr", "test    slash, slash", "jz      short loc_4ABD"], ["mov~esi,0", "mov~rbx,argv0", "call~FOO", "test~slash,slash", "jz~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 0, 1, 0.0, ["test    argv0, argv0", "push    rbx", "jz      short loc_4ACD"], ["test~argv0,argv0", "push~rbx", "jz~FOO"]], [2, 0, 0, 0, 2, 6, 0, 2, 1, 0, 0.0, ["mov     rcx, cs:stderr@@GLIBC_2_2_5; s", "lea     argv0, aANullArgv0WasP; \"A NULL argv[0] was passed through an ex\"...", "mov     edx, 37h ; '7'; n", "mov     esi, 1; size", "call    _fwrite", "call    _abort"], ["mov~rcx,<TAG>", "lea~argv0,<TAG>", "mov~edx,0", "mov~esi,0", "call~FOO", "call~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["mov     cs:program_name, argv0", "mov     cs:program_invocation_name@@GLIBC_2_2_5, argv0", "pop     argv0", "retn"], ["mov~<TAG>,argv0", "mov~<TAG>,argv0", "pop~argv0", "retn"]], [1, 0, 4, 1, 0, 5, 0, 1, 2, -1, 0.14285714285714285, ["lea     r8, [slash+1]", "mov     rdx, base", "sub     rdx, argv0", "cmp     rdx, 6", "jle     short loc_4ABD"], ["lea~r8,[slash+0]", "mov~rdx,base", "sub~rdx,argv0", "cmp~rdx,0", "jle~FOO"]], [2, 0, 3, 0, 0, 8, 1, 1, 3, -1, 0.14285714285714285, ["lea     rsi, [slash-6]", "lea     rdi, aLibs; \"/.libs/\"", "mov     ecx, 7", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     short loc_4ABD"], ["lea~rsi,[slash-6]+0]", "lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "test~dl,dl", "jnz~FOO"]]], "func_feature": [3, 4, 8, 0, 8, 11, 1, 42, 0.0625, 7, 1], "succs": [[5], [0, 5], [5, 6], [2, 4], [], [], [5, 7], [1, 5]], "fname": "set_program_name", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 64, 0, 0, 3, 1, 1, 0, 0, 0.06197311460469356, ["test    valid_suffixes, valid_suffixes", "mov     [rsp+58h+var_50], rcx", "jnz     short loc_4C00"], ["test~valid_suffixes,valid_suffixes", "mov~[rsp+0],rcx", "jnz~FOO"]], [1, 0, 71, 0, 2, 13, 1, 3, 4, 10, 0.05724538619275462, ["call    ___errno_location", "xor     ecx, ecx; group", "mov     dword ptr [rax], 0", "mov     edx, r15d; base", "mov     rsi, p; endptr", "mov     rdi, s; nptr", "mov     [rsp+58h+var_50], rax", "call    ___strtoul_internal", "mov     rcx, [p+0]", "mov     ch_0, rax", "mov     r8, [rsp+58h+var_50]", "cmp     rcx, s", "jz      short loc_4BB8"], ["call~FOO", "xor~ecx,ecx", "mov~<TAG>,0", "mov~edx,r15d", "mov~rsi,p", "mov~rdi,s", "mov~[rsp+0],rax", "call~FOO", "mov~rcx,[p+0]", "mov~ch_0,rax", "mov~r8,[rsp+0]", "cmp~rcx,s", "jz~FOO"]], [2, 0, 9, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_4DF0"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 9, 1, 0, 4, 0, 0, 14, -1, 0.01384142173615858, ["mov     rax, tmp", "mul     rsi", "mov     tmp, rax", "jo      loc_4EC3"], ["mov~rax,tmp", "mul~,rsi", "mov~tmp,rax", "jo~FOO"]], [2, 0, 9, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     short loc_4E0F"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 9, 1, 0, 4, 0, 0, 14, -1, 0.01384142173615858, ["mov     rax, tmp", "mul     rsi", "mov     tmp, rax", "jo      short loc_4E7B"], ["mov~rax,tmp", "mul~,rsi", "mov~tmp,rax", "jo~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 16, -1, 0.0034176349965823654, ["jmp     loc_4D65"], ["jmp~FOO"]], [1, 0, 9, 1, 0, 2, 0, 1, 15, -1, 0.007347915242652085, ["sub     r8d, 1", "jnz     short loc_4DE1"], ["sub~r8d,0", "jnz~FOO"]], [2, 0, 52, 0, 0, 3, 0, 1, 11, 4, 0.013328776486671225, ["mov     edi, 2", "mov     esi, 3E8h", "jmp     short loc_4C92"], ["mov~edi,0", "mov~esi,0", "jmp~FOO"]], [1, 0, 57, 0, 0, 3, 0, 1, 10, 5, 0.010936431989063569, ["movzx   eax, byte ptr [rcx+1]", "cmp     al, 44h ; 'D'", "jz      short loc_4C77"], ["movzx~eax,[yte ptr [rcx+0]", "cmp~al,0", "jz~FOO"]], [1, 0, 54, 0, 0, 2, 0, 1, 12, 5, 0.0005126452494873548, ["cmp     al, 42h ; 'B'", "jnz     short loc_4C88"], ["cmp~al,0", "jnz~FOO"]], [0, 0, 62, 0, 0, 3, 1, 1, 6, 8, 0.06994759626338574, ["movzx   r15d, byte ptr [s]", "test    r15b, r15b", "jz      short loc_4BC8"], ["movzx~r15d,<TAG>", "test~r15b,r15b", "jz~FOO"]], [0, 0, 9, 1, 0, 4, 0, 0, 14, -1, 0.01384142173615858, ["mov     rax, tmp", "mul     rsi", "mov     tmp, rax", "jo      loc_4EB4"], ["mov~rax,tmp", "mul~,rsi", "mov~tmp,rax", "jo~FOO"]], [1, 0, 9, 1, 0, 2, 0, 1, 15, -1, 0.007347915242652085, ["sub     r8d, 1", "jnz     short loc_4D80"], ["sub~r8d,0", "jnz~FOO"]], [1, 0, 9, 0, 0, 3, 1, 0, 13, -1, 0.016404647983595352, ["mov     r8d, 8; jumptable 0000000000004CAE case 23", "xor     r9d, r9d", "nop     word ptr [rax+rax+00000000h]"], ["mov~r8d,0", "xor~r9d,r9d", "nop~[ord ptr [rax+0]"]], [1, 0, 72, 0, 0, 2, 0, 1, 3, 11, 0.04921394395078606, ["cmp     bl, 2Dh ; '-'", "jz      short loc_4BC8"], ["cmp~bl,0", "jz~FOO"]], [2, 0, 52, 0, 0, 6, 1, 1, 12, 4, 0.00888585099111415, ["xor     edi, edi", "cmp     byte ptr [rcx+2], 42h ; 'B'", "mov     esi, 400h", "setz    dil", "lea     edi, [rdi+rdi+1]", "jmp     loc_4C92"], ["xor~edi,edi", "cmp~[yte ptr [rcx+0],0", "mov~esi,0", "setz~dil", "lea~edi,[rdi+0]", "jmp~FOO"]], [1, 0, 56, 0, 0, 2, 0, 1, 11, 5, 0.00598086124401914, ["cmp     al, 69h ; 'i'", "jz      loc_4CFB"], ["cmp~al,0", "jz~FOO"]], [0, 0, 10, 0, 0, 1, 1, 0, 14, -1, 0.004955570745044429, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [0, 0, 12, 1, 0, 3, 0, 0, 13, 1, 0.016404647983595352, ["mov     rax, tmp; jumptable 0000000000004CAE cases 5,37", "mul     rsi", "jo      loc_4EE1"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [1, 1, 77, 1, 0, 12, 1, 1, 0, 14, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "cmp     edx, 24h ; '$'", "ja      loc_4E57"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edx,0", "ja~FOO"]], [2, 0, 9, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_4D8F"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 66, 0, 0, 3, 1, 1, 5, 10, 0.0053542948279790385, ["mov     eax, [r8]", "test    eax, eax", "jz      short loc_4BF8"], ["mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 16, -1, 0.0034176349965823654, ["jmp     short loc_4D65"], ["jmp~FOO"]], [0, 0, 9, 1, 0, 2, 0, 0, 15, -1, 0.008714969241285031, ["mul     rsi", "jno     loc_4CBF"], ["mul~,rsi", "jno~FOO"]], [2, 0, 10, 0, 0, 3, 1, 1, 14, 0, 0.004955570745044429, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_4E3F"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [2, 0, 51, 1, 0, 3, 0, 1, 11, 3, 0.1814764183185236, ["sub     r15d, 42h ; 'B'", "cmp     r15b, 35h ; '5'; switch 54 cases", "ja      short loc_4CEF; jumptable 0000000000004CAE default case"], ["sub~r15d,0", "cmp~r15b,0", "ja~FOO"]], [2, 0, 52, 0, 0, 2, 0, 0, 10, 4, 0.13636363636363638, ["mov     edi, 1", "mov     esi, 400h"], ["mov~edi,0", "mov~esi,0"]], [1, 0, 9, 0, 0, 2, 1, 0, 13, -1, 0.016404647983595352, ["mov     r8d, 4; jumptable 0000000000004CAE cases 18,50", "xor     r9d, r9d"], ["mov~r8d,0", "xor~r9d,r9d"]], [0, 0, 50, 1, 0, 5, 0, 1, 12, 2, 0.18079289131920712, ["lea     rdx, off_9848", "movzx   r15d, r15b", "movsxd  rax, dword ptr [rdx+r15*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movzx~r15d,r15b", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 6, 1, 0, 4, 0, 0, 13, -1, 0.005126452494873548, ["mov     edx, 2; jumptable 0000000000004CAE case 53", "mov     rax, rdx", "mul     tmp", "jo      loc_4DC6"], ["mov~edx,0", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]], [2, 0, 64, 0, 0, 3, 0, 1, 6, 9, 0.007575757575757577, ["cmp     eax, 22h ; '\"'", "mov     r12d, 1", "jnz     short loc_4BC8"], ["cmp~eax,0", "mov~r12d,0", "jnz~FOO"]], [2, 0, 5, 0, 0, 3, 1, 1, 16, -1, 0.00589542036910458, ["mov     r8d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_4CCB"], ["mov~r8d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 7, 1, 0, 2, 0, 0, 15, -1, 0.021872863978127138, ["mul     rsi", "jo      loc_4E96"], ["mul~,rsi", "jo~FOO"]], [0, 0, 62, 0, 0, 2, 1, 1, 7, 8, 0.032809295967190705, ["test    valid_suffixes, valid_suffixes", "jz      short loc_4BAF"], ["test~valid_suffixes,valid_suffixes", "jz~FOO"]], [0, 0, 63, 0, 0, 2, 1, 1, 6, 9, 0.006664388243335612, ["xor     r12d, r12d", "jmp     short loc_4BA1"], ["xor~r12d,r12d", "jmp~FOO"]], [1, 0, 6, 1, 0, 4, 0, 0, 13, -1, 0.005126452494873548, ["mov     edx, 400h; jumptable 0000000000004CAE case 0", "mov     rax, rdx", "mul     tmp", "jo      short loc_4DC6"], ["mov~edx,0", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]], [1, 0, 61, 0, 1, 8, 2, 2, 7, 7, 0.07792207792207793, ["movsx   esi, r15b; c", "mov     rdi, valid_suffixes; s", "xor     r12d, r12d", "call    _strchr", "test    rax, rax", "mov     ebx, 1", "mov     rcx, [rsp+58h+var_50]", "jz      short loc_4BC8"], ["movsx~esi,r15b", "mov~rdi,valid_suffixes", "xor~r12d,r12d", "call~FOO", "test~rax,rax", "mov~ebx,0", "mov~rcx,[rsp+0]", "jz~FOO"]], [0, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.0003417634996582365, ["add     tmp, tmp", "jmp     short loc_4CD0; jumptable 0000000000004CAE case 33"], ["add~tmp,tmp", "jmp~FOO"]], [2, 0, 8, 0, 0, 3, 1, 1, 16, -1, 0.0, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_4CBF"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [2, 0, 8, 0, 0, 3, 1, 1, 14, -1, 0.00888585099111415, ["or      rax, 0FFFFFFFFFFFFFFFFh", "mov     r8d, 1", "jmp     loc_4CBF"], ["or~rax,0", "mov~r8d,0", "jmp~FOO"]], [0, 0, 8, 0, 0, 1, 1, 0, 14, -1, 0.00888585099111415, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [0, 0, 9, 1, 0, 4, 0, 0, 14, -1, 0.01384142173615858, ["mov     rax, tmp", "mul     rsi", "mov     tmp, rax", "jo      loc_4E87"], ["mov~rax,tmp", "mul~,rsi", "mov~tmp,rax", "jo~FOO"]], [1, 0, 9, 1, 0, 2, 0, 1, 15, -1, 0.007347915242652085, ["sub     r8d, 1", "jnz     short loc_4DA0"], ["sub~r8d,0", "jnz~FOO"]], [1, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.0003417634996582365, ["shl     tmp, 0Ah", "jmp     loc_4CD0; jumptable 0000000000004CAE case 33"], ["shl~tmp,0", "jmp~FOO"]], [0, 0, 61, 0, 0, 3, 1, 1, 8, 7, 0.03896103896103897, ["movzx   r15d, byte ptr [rcx]", "test    r15b, r15b", "jnz     short loc_4C28"], ["movzx~r15d,<TAG>", "test~r15b,r15b", "jnz~FOO"]], [0, 0, 10, 1, 0, 3, 0, 0, 13, -1, 0.02460697197539303, ["mov     rax, tmp; jumptable 0000000000004CAE cases 11,43", "mul     rsi", "jo      loc_4EA5"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [1, 0, 9, 1, 0, 2, 0, 1, 15, -1, 0.007347915242652085, ["sub     r8d, 1", "jnz     short loc_4E04"], ["sub~r8d,0", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 16, -1, 0.00589542036910458, ["mov     rbx, rax"], ["mov~rbx,rax"]], [0, 0, 3, 0, 0, 2, 0, 1, 8, -1, 0.0015379357484620643, ["mov     [val], tmp", "jmp     short loc_4BCE"], ["mov~<TAG>,tmp", "jmp~FOO"]], [2, 0, 9, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_4DAF"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [0, 1, 6, 1, 0, 4, 0, 0, 13, -1, 0.005126452494873548, ["mov     edx, 200h; jumptable 0000000000004CAE case 32", "mov     rax, rdx", "mul     tmp", "jo      loc_4DC6"], ["mov~edx,<STR>", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 16, -1, 0.0034176349965823654, ["jmp     short loc_4D65"], ["jmp~FOO"]], [1, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.0003417634996582365, ["shl     tmp, 9", "jmp     short loc_4CD0; jumptable 0000000000004CAE case 33"], ["shl~tmp,0", "jmp~FOO"]], [0, 0, 75, 0, 1, 13, 1, 2, 1, 13, 0.01281613123718387, ["lea     rax, [rsp+58h+t_ptr]", "mov     r12, s", "mov     rbp, ptr", "test    ptr, ptr", "mov     r14, val", "mov     r15d, edx", "mov     r13, valid_suffixes", "cmovz   rbp, rax", "movzx   ebx, byte ptr [q]", "call    ___ctype_b_loc", "mov     rcx, [rax]", "mov     rax, q", "jmp     short loc_4B4F"], ["lea~rax,[rsp+0]", "mov~r12,s", "mov~rbp,ptr", "test~ptr,ptr", "mov~r14,val", "mov~r15d,edx", "mov~r13,valid_suffixes", "cmovz~rbp,rax", "movzx~ebx,<TAG>", "call~FOO", "mov~rcx,<TAG>", "mov~rax,q", "jmp~FOO"]], [0, 0, 59, 0, 1, 7, 1, 2, 8, 6, 0.1339712918660287, ["movsx   esi, r15b; c", "mov     rdi, valid_suffixes; s", "mov     [rsp+58h+var_50], rcx", "call    _strchr", "test    rax, rax", "mov     rcx, [rsp+58h+var_50]", "jz      loc_4CEF; jumptable 0000000000004CAE default case"], ["movsx~esi,r15b", "mov~rdi,valid_suffixes", "mov~[rsp+0],rcx", "call~FOO", "test~rax,rax", "mov~rcx,[rsp+0]", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 6, -1, 0.0005696058327637275, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [2, 0, 8, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_4D5F"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 8, 1, 0, 4, 0, 0, 14, -1, 0.013670539986329461, ["mov     rax, tmp", "mul     rsi", "mov     tmp, rax", "jo      loc_4ED2"], ["mov~rax,tmp", "mul~,rsi", "mov~tmp,rax", "jo~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 4, -1, 0.006151742993848257, ["mov     r12d, 4"], ["mov~r12d,0"]], [1, 0, 8, 0, 0, 3, 1, 0, 13, -1, 0.016404647983595352, ["mov     r8d, 7; jumptable 0000000000004CAE case 24", "xor     r9d, r9d", "nop     dword ptr [rax+00000000h]"], ["mov~r8d,0", "xor~r9d,r9d", "nop~[word ptr [rax+0]"]], [1, 0, 75, 1, 0, 2, 0, 0, 3, 13, 0.0, ["add     q, 1", "movzx   ebx, byte ptr [q]"], ["add~q,0", "movzx~ebx,<TAG>"]], [0, 1, 75, 0, 0, 3, 1, 1, 2, 12, 0.03776486671223513, ["movzx   edx, bl", "test    byte ptr [rcx+rdx*2+1], 20h", "jnz     short loc_4B48"], ["movzx~edx,bl", "test~[yte ptr [rcx+0],<STR>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, -1, 0.025290498974709502, ["mov     rdi, [rsp+58h+var_40]", "xor     rdi, fs:28h", "mov     eax, r12d", "jnz     loc_4E76"], ["mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "mov~eax,r12d", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 0, 17, -1, 0.0075187969924812035, ["or      r12d, r8d", "xchg    ax, ax"], ["or~r12d,r8d", "xchg~ax,ax"]], [1, 0, 58, 0, 1, 7, 1, 2, 9, 5, 0.1384142173615858, ["mov     esi, 30h ; '0'; c", "mov     rdi, valid_suffixes; s", "mov     [rsp+58h+var_50], rcx", "call    _strchr", "test    rax, rax", "mov     rcx, [rsp+58h+var_50]", "jz      short loc_4C88"], ["mov~esi,0", "mov~rdi,valid_suffixes", "mov~[rsp+0],rcx", "call~FOO", "test~rax,rax", "mov~rcx,[rsp+0]", "jz~FOO"]], [2, 0, 4, 0, 0, 3, 1, 1, 14, -1, 0.0010252904989747095, ["mov     r12d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_4CD0; jumptable 0000000000004CAE case 33"], ["mov~r12d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 5, 1, 0, 4, 0, 0, 13, -1, 0.0010252904989747095, ["mov     rax, tmp; jumptable 0000000000004CAE cases 9,41", "mul     rsi", "mov     tmp, rax", "jno     loc_4CD0; jumptable 0000000000004CAE case 33"], ["mov~rax,tmp", "mul~,rsi", "mov~tmp,rax", "jno~FOO"]], [1, 0, 8, 1, 0, 2, 0, 1, 15, -1, 0.006835269993164731, ["sub     r8d, 1", "jnz     short loc_4D50"], ["sub~r8d,0", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 1, 0, 13, -1, 0.016404647983595352, ["mov     r8d, 5; jumptable 0000000000004CAE case 14", "xor     r9d, r9d"], ["mov~r8d,0", "xor~r9d,r9d"]], [2, 0, 3, 1, 0, 9, 1, 1, 13, -1, 0.02332535885167464, ["movsxd  suffixes, edi; jumptable 0000000000004CAE case 33", "mov     eax, r12d", "add     rcx, suffixes", "or      eax, 2", "mov     [p+0], rcx", "cmp     byte ptr [rcx], 0", "mov     [val], tmp", "cmovnz  r12d, eax", "jmp     loc_4BCE"], ["movsxd~suffixes,edi", "mov~eax,r12d", "add~rcx,suffixes", "or~eax,0", "mov~[p+0],rcx", "cmp~<TAG>,0", "mov~<TAG>,tmp", "cmovnz~r12d,eax", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 9, -1, 0.004870129870129871, ["mov     [val], tmp; jumptable 0000000000004CAE default case", "or      r12d, 2", "jmp     loc_4BCE"], ["mov~<TAG>,tmp", "or~r12d,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 16, -1, 0.016404647983595352, ["or      r12d, r9d", "jmp     loc_4CD0; jumptable 0000000000004CAE case 33"], ["or~r12d,r9d", "jmp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 16, -1, 0.0034176349965823654, ["jmp     loc_4D65"], ["jmp~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 1, -1, 0.0, ["lea     val, __PRETTY_FUNCTION___4908; \"xstrtoumax\"", "lea     ptr, file; \"xstrtol.c\"", "lea     s, assertion; \"0 <= strtol_base && strtol_base <= 36\"", "mov     edx, 53h ; 'S'; line", "call    ___assert_fail"], ["lea~val,<TAG>", "lea~ptr,<TAG>", "lea~s,<TAG>", "mov~edx,0", "call~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 28h", "pop     rbx", "pop     p", "pop     r12", "pop     valid_suffixes", "pop     val", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~p", "pop~r12", "pop~valid_suffixes", "pop~val", "pop~r15", "retn"]], [1, 0, 9, 0, 0, 2, 1, 0, 13, -1, 0.016404647983595352, ["mov     r8d, 6; jumptable 0000000000004CAE case 3", "xor     r9d, r9d"], ["mov~r8d,0", "xor~r9d,r9d"]]], "func_feature": [8, 37, 57, 2, 78, 123, 2, 261, 0.0216, 5, 27], "succs": [[56, 11], [0, 22], [7], [2, 7], [47], [4, 47], [73], [3, 6], [26], [8, 17], [8, 27], [59, 37], [13, 21], [12, 23], [12], [1, 59], [26], [16, 10], [24], [25, 18], [75, 54], [13], [35, 31], [73], [33, 39], [24], [72, 29], [26], [42], [19, 36, 70, 71, 72, 60, 77, 14, 51, 46, 68, 28, 30], [67, 38], [34, 59], [65], [32, 48], [49, 45], [34], [67, 44], [59, 55], [71], [33], [33], [33], [50, 43], [42, 52], [71], [49, 55], [40, 41], [74, 5], [65], [64], [43], [67, 53], [73], [71], [62], [72, 66], [59], [69], [57, 69], [64], [58], [62], [61, 15], [], [76, 63], [71], [9, 27], [71], [67, 71], [73, 58], [3], [64], [64], [71], [73], [], [], [5]], "fname": "xstrtoumax", "n_num": 78}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 6, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666669, ["test    sil, sil", "jz      short loc_4F2A"], ["test~sil,sil", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 3, 2, 0.33333333333333337, ["cmp     dl, 2Fh ; '/'", "jnz     short loc_4F20"], ["cmp~dl,0", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 0, 5, 2, 0.0, ["mov     base, p", "xor     esi, esi"], ["mov~base,p", "xor~esi,esi"]], [2, 0, 9, 1, 0, 4, 0, 1, 2, 2, 0.08888888888888889, ["add     base, 1", "movzx   edx, byte ptr [base]", "cmp     dl, 2Fh ; '/'", "jz      short loc_4F00"], ["add~base,0", "movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 1, 3, 0.011111111111111112, ["nop     dword ptr [base+base+00h]"], ["nop~[word ptr [base+0]"]], [0, 0, 7, 0, 0, 2, 1, 1, 1, 1, 0.23333333333333334, ["test    dl, dl", "jz      short locret_4F4A"], ["test~dl,dl", "jz~FOO"]], [1, 0, 10, 0, 0, 4, 0, 1, 0, 2, 0.0, ["movzx   edx, byte ptr [base]", "mov     rax, base", "cmp     dl, 2Fh ; '/'", "jnz     short loc_4F0C"], ["movzx~edx,<TAG>", "mov~rax,base", "cmp~dl,0", "jnz~FOO"]], [2, 0, 6, 1, 0, 5, 1, 1, 4, 1, 0.022222222222222223, ["add     p, 1", "movzx   edx, byte ptr [rcx]", "mov     esi, 1", "test    dl, dl", "jnz     short loc_4F35"], ["add~p,0", "movzx~edx,<TAG>", "mov~esi,0", "test~dl,dl", "jnz~FOO"]], [1, 0, 6, 1, 0, 4, 1, 1, 5, 1, 0.07777777777777778, ["add     p, 1", "movzx   edx, byte ptr [p]", "test    dl, dl", "jz      short locret_4F4A"], ["add~p,0", "movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 2, 3, 0.22222222222222224, ["mov     rcx, p", "xor     esi, esi", "jmp     short loc_4F35"], ["mov~rcx,p", "xor~esi,esi", "jmp~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 6, 8, 0, 11, 17, 3, 30, 0.10505, 0, 3], "succs": [[8, 2], [0, 7], [8], [3, 5], [3], [9, 10], [4, 5], [1, 10], [1, 10], [1], []], "fname": "last_component", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[1, 0, 5, 0, 0, 3, 0, 1, 0, 0, 0.16666666666666666, ["cmp     byte ptr [name+len-1], 2Fh ; '/'", "lea     rax, [len-1]", "jz      short loc_4F70"], ["cmp~[yte ptr [name+0],0", "lea~rax,[len-1]+0]", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 1, 0.2857142857142857, ["cmp     len, 1", "jz      short loc_4F90"], ["cmp~len,0", "jz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 1, 2, 0.11904761904761904, ["cmp     byte ptr [name+len-1], 2Fh ; '/'", "lea     rdx, [len-1]", "jz      short loc_4F78"], ["cmp~[yte ptr [name+0],0", "lea~rdx,[len-1]+0]", "jz~FOO"]], [1, 0, 7, 0, 1, 5, 0, 1, 0, 3, 0.0, ["push    rbx", "mov     rbx, name", "call    _strlen", "cmp     len, 1", "jbe     short loc_4F6A"], ["push~rbx", "mov~rbx,name", "call~FOO", "cmp~len,0", "jbe~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     name", "retn"], ["pop~name", "retn"]], [0, 0, 0, 0, 0, 3, 0, 0, 4, -1, 0.0, ["mov     rax, len", "pop     name", "retn"], ["mov~rax,len", "pop~name", "retn"]], [0, 0, 5, 0, 0, 2, 0, 0, 4, 2, 0.047619047619047616, ["mov     len, rax", "nop     dword ptr [rax+rax+00h]"], ["mov~len,rax", "nop~[word ptr [rax+0]"]], [1, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0.0, ["mov     eax, 1", "pop     name", "retn"], ["mov~eax,0", "pop~name", "retn"]]], "func_feature": [1, 0, 4, 0, 8, 9, 0, 23, 0.07738, 0, 0], "succs": [[5, 6], [0, 7], [1, 4], [2, 4], [], [], [1], []], "fname": "base_len", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[1, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["pop     rbx", "mov     eax, 0FFFFFFFFh", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "mov~eax,0", "pop~stream", "pop~r12", "retn"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, -1, 0.047619047619047616, ["test    eax, eax", "jnz     short loc_4FF8"], ["test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 2, 0.07142857142857142, ["test    eax, eax", "jz      short loc_4FCF"], ["test~eax,eax", "jz~FOO"]], [0, 1, 7, 0, 2, 12, 2, 3, 0, 3, 0.0, ["push    r12", "push    rbp", "mov     rbp, stream", "push    rbx", "call    ___fpending", "mov     ebx, [stream+0]", "mov     rdi, stream; stream", "mov     r12, rax", "call    _fclose", "and     ebx, 20h", "test    ebx, ebx", "jnz     short loc_4FD8"], ["push~r12", "push~rbp", "mov~rbp,stream", "push~rbx", "call~FOO", "mov~ebx,[stream+0]", "mov~rdi,stream", "mov~r12,rax", "call~FOO", "and~ebx,<STR>", "test~ebx,ebx", "jnz~FOO"]], [1, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.047619047619047616, ["test    r12, r12", "mov     eax, 0FFFFFFFFh", "jz      short loc_5008"], ["test~r12,r12", "mov~eax,0", "jz~FOO"]], [2, 0, 0, 0, 1, 7, 0, 1, 2, -1, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 0", "mov     eax, 0FFFFFFFFh", "pop     rbx", "pop     stream", "pop     r12", "retn"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "pop~rbx", "pop~stream", "pop~r12", "retn"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["pop     rbx", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "pop~stream", "pop~r12", "retn"]], [1, 0, 0, 0, 1, 9, 0, 1, 3, 0, 0.0, ["call    ___errno_location", "cmp     dword ptr [rax], 9", "pop     rbx", "pop     stream", "pop     r12", "setnz   al", "movzx   eax, al", "neg     eax", "retn"], ["call~FOO", "cmp~<TAG>,0", "pop~rbx", "pop~stream", "pop~r12", "setnz~al", "movzx~eax,al", "neg~eax", "retn"]]], "func_feature": [4, 5, 8, 0, 8, 8, 3, 44, 0.02083, 0, 0], "succs": [[], [0, 5], [4, 6], [1, 2], [6, 7], [], [], []], "fname": "close_stream", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:file_name, file", "retn"], ["mov~<TAG>,file", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:ignore_EPIPE, dil", "retn"], ["mov~<TAG>,dil", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_ignore_EPIPE", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[1, 0, 0, 1, 0, 4, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [0, 0, 2, 0, 1, 4, 1, 2, 1, -1, 0.09523809523809523, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jnz     short loc_50C2"], ["mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 3, 0, 1, 8, 2, 2, 2, 1, 0.11904761904761903, ["lea     rsi, aWriteError; \"write error\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdi, cs:file_name; arg", "mov     rbp, rax", "test    rdi, rdi", "jz      short loc_50CD"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdi,<TAG>", "mov~rbp,rax", "test~rdi,rdi", "jz~FOO"]], [1, 0, 7, 0, 1, 4, 0, 2, 1, 2, 0.07142857142857142, ["call    ___errno_location", "cmp     cs:ignore_EPIPE, 0", "mov     rbx, rax", "jz      short loc_5083"], ["call~FOO", "cmp~<TAG>,0", "mov~rbx,rax", "jz~FOO"]], [0, 1, 6, 0, 0, 2, 0, 1, 2, 2, 0.04166666666666666, ["cmp     dword ptr [rax], 20h ; ' '", "jnz     short loc_5083"], ["cmp~<TAG>,<STR>", "jnz~FOO"]], [1, 0, 8, 1, 1, 7, 1, 2, 0, 3, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jz      short loc_506C"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     edi, cs:exit_failure; status", "call    __exit"], ["mov~edi,<TAG>", "call~FOO"]], [0, 0, 1, 0, 1, 7, 2, 2, 3, 0, 0.014880952380952378, ["mov     esi, [rbx]; errnum", "lea     rdx, format+4; format", "mov     rcx, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_50C2"], ["mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 2, 8, 2, 2, 3, -1, 0.014880952380952378, ["call    quotearg_colon", "mov     esi, [rbx]; errnum", "lea     rdx, format; \"%s: %s\"", "mov     rcx, rax", "mov     r8, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO"]]], "func_feature": [8, 8, 14, 0, 9, 12, 1, 46, 0.03968, 8, 2], "succs": [[], [0, 6], [8, 7], [2, 4], [1, 2], [1, 3], [], [6], [6]], "fname": "close_stdout", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 2, 2, 0, 5, 1, 1, 1, 0, 0.3333333333333333, ["imul    rax, [rsp+28h+ts.tv_sec], 3B9ACA00h", "add     rax, [rsp+28h+ts.tv_nsec]", "mov     rdx, [rsp+28h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_5144"], ["imul~rax,<TAG>,0", "add~rax,[rsp+0]", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [1, 1, 4, 1, 1, 11, 2, 2, 0, 0, 0.0, ["push    rbx", "mov     edi, 1; clock_id", "sub     rsp, 20h", "mov     rbx, rsp", "mov     rsi, rbx; tp", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "call    _clock_gettime", "test    eax, eax", "jz      short loc_5121"], ["push~rbx", "mov~edi,0", "sub~rsp,<STR>", "mov~rbx,rsp", "mov~rsi,rbx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 3, 0, 1, 2, 0, 1, 1, 0, 0.0, ["mov     rdi, rbx; ts", "call    gettime"], ["mov~rdi,rbx", "call~FOO"]], [0, 1, 0, 1, 0, 3, 0, 0, 2, 0, 0.0, ["add     rsp, 20h", "pop     rbx", "retn"], ["add~rsp,<STR>", "pop~rbx", "retn"]]], "func_feature": [3, 3, 5, 1, 5, 5, 2, 22, 0.06667, 1, 4], "succs": [[], [0, 4], [1, 3], [1], []], "fname": "gethrxtime", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[1, 0, 3, 1, 1, 7, 1, 1, 0, 0, 0.0, ["mov     rdi, rsp; tv", "xor     esi, esi; tz", "call    _gettimeofday", "mov     rax, [rsp+28h+tv.tv_sec]", "mov     [ts], rax", "imul    rax, [rsp+28h+tv.tv_usec], 3E8h", "mov     [ts+8], rax"], ["mov~rdi,rsp", "xor~esi,esi", "call~FOO", "mov~rax,<TAG>", "mov~<TAG>,rax", "imul~rax,[rsp+0],0", "mov~[ts+0],rax"]], [0, 1, 4, 1, 1, 11, 3, 2, 0, 2, 0.0, ["push    rbx", "mov     rsi, ts; tp", "mov     rbx, ts", "xor     edi, edi; clock_id", "sub     rsp, 20h", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "call    _clock_gettime", "test    eax, eax", "jz      short loc_5194"], ["push~rbx", "mov~rsi,ts", "mov~rbx,ts", "xor~edi,edi", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 1, 0, 1, 0, 3, 0, 0, 2, -1, 0.0, ["add     rsp, 20h", "pop     ts", "retn"], ["add~rsp,<STR>", "pop~ts", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.3333333333333333, ["mov     rax, [rsp+28h+var_10]", "xor     rax, fs:28h", "jnz     short loc_51AA"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 5, 5, 1, 5, 5, 1, 25, 0.06667, 1, 3], "succs": [[3], [0, 3], [], [2, 4], []], "fname": "gettime", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 7, 0, 0, 3, 0, 0, 0, 0, 0.19780219780219782, ["fxch    st(1)", "fucomip st, st(1)", "jp      short loc_5208"], ["fxch~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "jp~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 3, 4, 0.24725274725274726, ["test    edi, edi", "jnz     short loc_5228"], ["test~edi,edi", "jnz~FOO"]], [1, 0, 3, 1, 0, 5, 1, 1, 6, 1, 0.1208791208791209, ["add     rax, 1", "mov     [rsp+var_20], rax", "test    rax, rax", "fild    [rsp+var_20]", "js      short loc_5270"], ["add~rax,0", "mov~[rsp+0],rax", "test~rax,rax", "fild~<TAG>,[rsp+0]", "js~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 6, 2, 0.016483516483516484, ["fstp    st", "jmp     short loc_5210"], ["fstp~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 5, 2, 0.11538461538461539, ["fstp    st", "nop     word ptr [rax+rax+00h]"], ["fstp~<TAG>,<TAG>", "nop~[ord ptr [rax+0]"]], [0, 0, 5, 0, 0, 1, 0, 1, 5, 3, 0.04395604395604396, ["jz      short locret_522A"], ["jz~FOO"]], [2, 0, 12, 0, 0, 13, 2, 1, 1, 6, 0.03296703296703297, ["fnstcw  [rsp+var_A]", "movzx   eax, [rsp+var_A]", "fsubr   st(1), st", "fxch    st(1)", "mov     rdx, 8000000000000000h", "or      ah, 0Ch", "mov     [rsp+var_C], ax", "fldcw   [rsp+var_C]", "fistp   [rsp+var_18]", "fldcw   [rsp+var_A]", "mov     rax, [rsp+var_18]", "xor     rax, rdx", "jmp     loc_51E4"], ["fnstcw~[rsp+0]", "movzx~eax,[rsp+0]", "fsubr~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "mov~rdx,0", "or~ah,0", "mov~[rsp+0],ax", "fldcw~[rsp+0]", "fistp~<TAG>,[rsp+0]", "fldcw~[rsp+0]", "mov~rax,[rsp+0]", "xor~rax,rdx", "jmp~FOO"]], [0, 0, 14, 0, 0, 4, 0, 0, 0, 7, 0.0, ["fld     cs:flt_9994", "fld     [rsp+value.value]", "fucomi  st, st(1)", "jnb     short loc_5230"], ["fld~<TAG>,<TAG>", "fld~<TAG>,[rsp+0]", "fucomi~<TAG>,<TAG>", "jnb~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, -1, 0.03296703296703297, ["fstp    st(1)"], ["fstp~<TAG>,<TAG>"]], [0, 0, 1, 0, 0, 1, 0, 1, 7, -1, 0.016483516483516484, ["jmp     short locret_522A"], ["jmp~FOO"]], [0, 0, 11, 0, 0, 4, 1, 0, 2, 5, 0.18131868131868134, ["mov     [rsp+var_20], rax", "test    rax, rax", "fild    [rsp+var_20]", "jns     short loc_51F8"], ["mov~[rsp+0],rax", "test~rax,rax", "fild~<TAG>,[rsp+0]", "jns~FOO"]], [1, 0, 12, 0, 0, 10, 1, 0, 1, 6, 0.03296703296703297, ["fstp    st(1)", "fnstcw  [rsp+var_A]", "movzx   eax, [rsp+var_A]", "or      ah, 0Ch", "mov     [rsp+var_C], ax", "fld     st", "fldcw   [rsp+var_C]", "fistp   [rsp+var_18]", "fldcw   [rsp+var_A]", "mov     rax, [rsp+var_18]"], ["fstp~<TAG>,<TAG>", "fnstcw~[rsp+0]", "movzx~eax,[rsp+0]", "or~ah,0", "mov~[rsp+0],ax", "fld~<TAG>,<TAG>", "fldcw~[rsp+0]", "fistp~<TAG>,[rsp+0]", "fldcw~[rsp+0]", "mov~rax,[rsp+0]"]], [0, 0, 10, 0, 0, 1, 0, 0, 3, 5, 0.0, ["fadd    cs:flt_9998"], ["fadd~<TAG>,<TAG>"]], [0, 0, 0, 0, 0, 2, 0, 0, 7, 0, 0.0, ["fadd    cs:flt_9998", "retn"], ["fadd~<TAG>,<TAG>", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 5, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 6, 6, 4, 15, 19, 3, 52, 0.06923, 2, 1], "succs": [[4, 5], [0, 8], [9, 13], [2], [2], [3, 14], [10], [11, 6], [14], [14], [1, 12], [10], [1], [], []], "fname": "adjust_value", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[2, 0, 51, 1, 0, 10, 2, 1, 0, 0, 0.02712418300653595, ["mov     ecx, [rsp+0C8h+var_98]", "add     rbp, 1", "xor     eax, eax", "fdivrp  st(1), st", "test    ecx, ecx", "setz    al", "cmp     r15d, 1", "lea     rax, [rbp+rax+1]", "mov     [rsp+0C8h+from_block_size], rax", "jz      loc_5970"], ["mov~ecx,[rsp+0]", "add~rbp,0", "xor~eax,eax", "fdivrp~<TAG>,<TAG>", "test~ecx,ecx", "setz~al", "cmp~r15d,0", "lea~rax,[rbp+0]", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 52, 0, 0, 3, 0, 1, 9, 11, 0.002832244008714597, ["fstp    st(2)", "fstp    st(2)", "jmp     short loc_53E4"], ["fstp~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 52, 0, 0, 2, 0, 0, 8, 11, 0.0196078431372549, ["fstp    st(2)", "fstp    st(2)"], ["fstp~<TAG>,<TAG>", "fstp~<TAG>,<TAG>"]], [1, 0, 33, 0, 0, 2, 1, 1, 9, 5, 0.18513071895424837, ["test    r12b, 4", "jnz     loc_56E8"], ["test~r12b,0", "jnz~FOO"]], [0, 0, 34, 0, 0, 1, 0, 1, 9, 6, 0.0898148148148148, ["jmp     do_grouping"], ["jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 11, 6, 0.024074074074074074, ["lea     inexact_style, [integerlim_0-1]", "mov     byte ptr [integerlim_0-1], 31h ; '1'", "jmp     do_grouping"], ["lea~inexact_style,[integerlim_0-1]+0]", "mov~[yte ptr [integerlim_0-1]+0],0", "jmp~FOO"]], [0, 0, 34, 3, 1, 9, 0, 1, 8, 6, 0.07129629629629629, ["mov     inexact_style, [rsp+0C8h+psuffix]", "mov     rsi, [rsp+0C8h+buf]; src", "mov     rdx, buflen; n", "sub     r15, buflen", "sub     buflen, nonintegerlen", "mov     rdi, p_0; dest", "call    _memmove", "mov     r8, r14", "add     r8, p_0"], ["mov~inexact_style,[rsp+0]", "mov~rsi,<TAG>", "mov~rdx,buflen", "sub~r15,buflen", "sub~buflen,nonintegerlen", "mov~rdi,p_0", "call~FOO", "mov~r8,r14", "add~r8,p_0"]], [3, 0, 38, 3, 0, 14, 2, 0, 12, 7, 0.01056644880174292, ["mov     rax, [decimal_point]", "lea     rcx, [p_0+8]", "and     rcx, 0FFFFFFFFFFFFFFF8h", "mov     [p_0], rax", "mov     eax, ebp", "mov     rdx, [decimal_point+rax-8]", "mov     [p_0+rax-8], rdx", "mov     rax, p_0", "sub     rax, rcx", "sub     decimal_point, rax", "add     eax, ebp", "and     eax, 0FFFFFFF8h", "cmp     eax, 8", "jb      loc_5AC6"], ["mov~rax,<TAG>", "lea~rcx,[p_0+0]", "and~rcx,0", "mov~<TAG>,rax", "mov~eax,ebp", "mov~rdx,[decimal_point+0]", "mov~[p_0+0],rdx", "mov~rax,p_0", "sub~rax,rcx", "sub~decimal_point,rax", "add~eax,ebp", "and~eax,0", "cmp~eax,0", "jb~FOO"]], [2, 0, 44, 1, 0, 7, 0, 0, 11, 8, 0.025490196078431372, ["mov     rax, rbp", "mov     byte ptr [r8-1], 30h ; '0'", "not     rax", "add     r8, rax", "cmp     ebp, 8", "mov     eax, ebp", "jnb     short loc_5BDA"], ["mov~rax,rbp", "mov~[yte ptr [r8-1]+0],0", "not~rax", "add~r8,rax", "cmp~ebp,0", "mov~eax,ebp", "jnb~FOO"]], [0, 1, 24, 0, 0, 2, 1, 1, 10, -1, 0.14640522875816994, ["test    r12b, 80h", "jz      short loc_5687"], ["test~r12b,<STR>", "jz~FOO"]], [0, 0, 25, 1, 1, 11, 0, 2, 13, -1, 0.006808278867102396, ["mov     eax, r14d", "mov     r15, r8", "mov     opts, r12", "mov     rsi, [rsp+0C8h+from_block_size]; src", "sub     r15, r14", "mov     rdx, r14; n", "mov     rdi, r15; dest", "mov     ebx, dword ptr [rsp+0C8h+damt.value]", "mov     r12d, eax", "call    _memcpy", "jmp     loc_560A"], ["mov~eax,r14d", "mov~r15,r8", "mov~opts,r12", "mov~rsi,[rsp+0]", "sub~r15,r14", "mov~rdx,r14", "mov~rdi,r15", "mov~ebx,[word ptr [rsp+0]", "mov~r12d,eax", "call~FOO", "jmp~FOO"]], [0, 0, 25, 0, 0, 4, 0, 1, 14, 0, 0.0013616557734204792, ["mov     ebx, dword ptr [rsp+0C8h+damt.value]", "mov     r15, rax", "mov     r12d, r14d", "jmp     loc_560A"], ["mov~ebx,[word ptr [rsp+0]", "mov~r15,rax", "mov~r12d,r14d", "jmp~FOO"]], [0, 0, 48, 0, 0, 3, 0, 1, 10, 11, 0.005519244734931007, ["fld     cs:tbyte_99A0", "fucomip st, st(1)", "ja      loc_57E8"], ["fld~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "ja~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 11, -1, 0.12309368191721133, ["cmp     ebx, 0FFFFFFFFh", "jz      loc_5930"], ["cmp~ebx,0", "jz~FOO"]], [0, 0, 46, 0, 0, 1, 0, 0, 11, 10, 0.0029774872912127796, ["fld     st"], ["fld~<TAG>,<TAG>"]], [0, 0, 37, 0, 0, 3, 0, 0, 14, 8, 0.004738562091503268, ["fld     cs:tbyte_99A0", "fucomip st, st(2)", "jbe     short loc_59C3"], ["fld~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "jbe~FOO"]], [1, 0, 39, 0, 0, 4, 0, 1, 13, 9, 0.002541757443718227, ["fld     cs:flt_999C", "cmp     r15d, 1", "fmul    st(1), st", "jnz     loc_5A10"], ["fld~<TAG>,<TAG>", "cmp~r15d,0", "fmul~<TAG>,<TAG>", "jnz~FOO"]], [0, 0, 38, 0, 0, 2, 0, 0, 13, 9, 0.002033405954974582, ["fld     cs:flt_999C", "fmul    st(1), st"], ["fld~<TAG>,<TAG>", "fmul~<TAG>,<TAG>"]], [0, 0, 73, 0, 0, 2, 1, 1, 14, 13, 0.022821350762527233, ["test    eax, eax", "jnz     loc_5876"], ["test~eax,eax", "jnz~FOO"]], [0, 0, 78, 0, 0, 2, 1, 1, 13, 14, 0.032352941176470584, ["test    dl, dl", "jz      loc_5AE9"], ["test~dl,dl", "jz~FOO"]], [1, 0, 37, 1, 0, 6, 0, 0, 14, 8, 0.004901960784313725, ["mov     esi, edx", "add     edx, 8", "mov     rdi, [r14+rsi]", "cmp     edx, eax", "mov     [rcx+rsi], rdi", "jb      short loc_5C10"], ["mov~esi,edx", "add~edx,0", "mov~rdi,<TAG>", "cmp~edx,eax", "mov~<TAG>,rdi", "jb~FOO"]], [1, 0, 37, 0, 0, 2, 2, 0, 13, 9, 0.0058823529411764705, ["and     eax, 0FFFFFFF8h", "xor     edx, edx"], ["and~eax,0", "xor~edx,edx"]], [0, 0, 35, 0, 0, 1, 0, 1, 15, 7, 0.003812636165577342, ["jmp     loc_5AC6"], ["jmp~FOO"]], [1, 0, 36, 1, 1, 7, 0, 2, 8, 8, 0.0, ["sub     rsp, 10h", "mov     edi, r15d; inexact_style", "fstp    [rsp+0D8h+value.value]; value", "call    adjust_value", "pop     r8", "pop     r9", "jmp     loc_558C"], ["sub~rsp,0", "mov~edi,r15d", "fstp~<TAG>,<TAG>", "call~FOO", "pop~r8", "pop~r9", "jmp~FOO"]], [0, 0, 37, 0, 0, 3, 0, 1, 7, 8, 0.0007080610021786493, ["fld     cs:tbyte_99A0", "fucomip st, st(1)", "ja      loc_5810"], ["fld~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "ja~FOO"]], [1, 0, 16, 0, 0, 5, 2, 1, 12, -1, 0.08611111111111111, ["mov     eax, r12d", "and     eax, 100h", "mov     ecx, eax", "or      ecx, ebx", "jz      short loc_5687"], ["mov~eax,r12d", "and~eax,0", "mov~ecx,eax", "or~ecx,ebx", "jz~FOO"]], [0, 0, 20, 1, 0, 3, 0, 0, 14, -1, 0.014025054466230936, ["imul    power, rdx", "cmp     rcx, power", "jbe     loc_5619"], ["imul~power,rdx", "cmp~rcx,power", "jbe~FOO"]], [0, 0, 17, 0, 0, 1, 0, 1, 16, -1, 0.0004629629629629629, ["jmp     loc_5619"], ["jmp~FOO"]], [0, 0, 17, 0, 0, 2, 1, 1, 13, -1, 0.0009259259259259259, ["xor     ebx, ebx", "jmp     loc_5619"], ["xor~ebx,ebx", "jmp~FOO"]], [0, 0, 131, 1, 0, 6, 2, 1, 2, 13, 0.003540305010893246, ["mov     psuffix_0, [rsp+0C8h+to_block_size]", "xor     edx, edx", "div     rcx", "test    rdx, rdx", "mov     r8, rax", "jnz     loc_5365"], ["mov~psuffix_0,[rsp+0]", "xor~edx,edx", "div~,rcx", "test~rdx,rdx", "mov~r8,rax", "jnz~FOO"]], [0, 0, 132, 0, 0, 2, 1, 1, 1, 13, 0.002096949891067538, ["test    rcx, rcx", "jz      loc_5365"], ["test~rcx,rcx", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 1, 1, 13, -1, 0.07908496732026143, ["and     r12d, 40h", "jnz     loc_57C8"], ["and~r12d,0", "jnz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 14, -1, 0.0673202614379085, ["test    ebx, ebx", "jz      loc_5C66"], ["test~ebx,ebx", "jz~FOO"]], [0, 1, 14, 0, 0, 5, 0, 1, 14, -1, 0.0, ["mov     rcx, [rsp+0C8h+buf]", "lea     rdi, [rcx+289h]", "mov     byte ptr [rcx+288h], 20h ; ' '", "mov     [rsp+0C8h+psuffix], rdi", "jmp     loc_5631"], ["mov~rcx,<TAG>", "lea~rdi,[rcx+0]", "mov~[yte ptr [rcx+0],<STR>", "mov~[rsp+0],rdi", "jmp~FOO"]], [1, 0, 36, 1, 1, 9, 0, 2, 15, 8, 0.0, ["fstp    dword ptr [rsp+0C8h+from_block_size]", "sub     rsp, 10h", "mov     edi, r15d; inexact_style", "fstp    [rsp+0D8h+value.value]; value", "call    adjust_value", "pop     rbp", "pop     r14", "fld     dword ptr [rsp+0C8h+from_block_size]", "jmp     short loc_59C3"], ["fstp~<TAG>,[word ptr [rsp+0]", "sub~rsp,0", "mov~edi,r15d", "fstp~<TAG>,<TAG>", "call~FOO", "pop~rbp", "pop~r14", "fld~<TAG>,[word ptr [rsp+0]", "jmp~FOO"]], [0, 0, 59, 0, 0, 5, 0, 1, 18, 12, 0.0016067538126361654, ["mov     edx, [decimal_point]", "mov     [p_0], edx", "mov     edx, [decimal_point+rax-4]", "mov     [p_0+rax-4], edx", "jmp     loc_58B7"], ["mov~edx,<TAG>", "mov~<TAG>,edx", "mov~edx,[decimal_point+0]", "mov~[p_0+0],edx", "jmp~FOO"]], [1, 0, 63, 0, 0, 2, 1, 1, 17, 13, 0.006535947712418301, ["test    bpl, 4", "jnz     loc_5C26"], ["test~bpl,0", "jnz~FOO"]], [1, 0, 4, 0, 0, 3, 0, 1, 18, -1, 0.0, ["lea     psuffix_0, [rdi+2]", "mov     byte ptr [rdi+1], 69h ; 'i'", "jmp     loc_567B"], ["lea~psuffix_0,[rdi+0]", "mov~[yte ptr [rdi+0],0", "jmp~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 17, -1, 0.006998910675381264, ["mov     r8d, [rsp+0C8h+var_98]", "test    r8d, r8d", "jnz     loc_5830"], ["mov~r8d,[rsp+0]", "test~r8d,r8d", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 12, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 2, 0, 0, 6, 1, 1, 11, -1, 0.014596949891067537, ["mov     rax, [rsp+0C8h+psuffix]", "mov     rcx, [rsp+0C8h+var_40]", "xor     rcx, fs:28h", "mov     byte ptr [rax], 0", "mov     rax, p_0", "jnz     loc_5C3B"], ["mov~rax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~<TAG>,0", "mov~rax,p_0", "jnz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 15, -1, 0.040522875816993466, ["cmp     ebx, 1", "jnz     short loc_564C"], ["cmp~ebx,0", "jnz~FOO"]], [1, 0, 83, 0, 0, 2, 0, 1, 10, 12, 0.030555555555555555, ["cmp     r10, 9", "ja      loc_5AD8"], ["cmp~r10,0", "ja~FOO"]], [1, 0, 89, 1, 0, 3, 0, 1, 9, 13, 0.036274509803921565, ["add     ebx, 1", "cmp     r8, r10", "ja      loc_583D"], ["add~ebx,0", "cmp~r8,r10", "ja~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 16, -1, 0.006835511982570806, ["mov     r9d, [rsp+0C8h+var_98]", "test    r9d, r9d", "jz      loc_5A90"], ["mov~r9d,[rsp+0]", "test~r9d,r9d", "jz~FOO"]], [1, 0, 81, 0, 0, 2, 0, 1, 11, 16, 0.022549019607843137, ["cmp     r15d, 1", "jz      loc_5B02"], ["cmp~r15d,0", "jz~FOO"]], [0, 0, 59, 0, 0, 3, 0, 1, 20, 12, 0.0, ["movzx   edx, word ptr [decimal_point+rax-2]", "mov     [p_0+rax-2], dx", "jmp     loc_58B7"], ["movzx~edx,[ord ptr [decimal_point+0]", "mov~[p_0+0],dx", "jmp~FOO"]], [1, 0, 60, 0, 0, 4, 1, 1, 19, 12, 0.0017429193899782135, ["movzx   edx, byte ptr [decimal_point]", "test    al, 2", "mov     [p_0], dl", "jnz     loc_5C40"], ["movzx~edx,<TAG>", "test~al,0", "mov~<TAG>,dl", "jnz~FOO"]], [3, 0, 45, 1, 2, 18, 1, 3, 12, 9, 0.00976761074800291, ["fstp    [rsp+0C8h+damt.value]", "sub     rsp, 10h", "lea     rcx, a1lf; \"%.1Lf\"", "mov     esi, 1", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "xor     eax, eax", "mov     decimal_point, [rsp+0D8h+buf]", "mov     rdi, r14", "fstp    [rsp+0D8h+value.value]", "call    ___sprintf_chk", "mov     rdi, r14; s", "call    _strlen", "pop     rcx", "pop     rsi", "cmp     rax, [rsp+0C8h+from_block_size]", "mov     r14, rax", "fld     [rsp+0C8h+damt.value]", "ja      loc_5A08"], ["fstp~<TAG>,[rsp+0]", "sub~rsp,0", "lea~rcx,<TAG>", "mov~esi,0", "mov~rdx,0", "xor~eax,eax", "mov~decimal_point,[rsp+0]", "mov~rdi,r14", "fstp~<TAG>,<TAG>", "call~FOO", "mov~rdi,r14", "call~FOO", "pop~rcx", "pop~rsi", "cmp~rax,[rsp+0]", "mov~r14,rax", "fld~<TAG>,[rsp+0]", "ja~FOO"]], [2, 0, 54, 2, 0, 9, 1, 1, 6, 10, 0.041666666666666664, ["mov     rax, amt", "movsxd  rounding, edi", "and     eax, 1", "add     rax, rounding", "setnz   al", "movzx   eax, al", "add     r9d, eax", "cmp     r9d, 5", "jg      loc_58D6"], ["mov~rax,amt", "movsxd~rounding,edi", "and~eax,0", "add~rax,rounding", "setnz~al", "movzx~eax,al", "add~r9d,eax", "cmp~r9d,0", "jg~FOO"]], [1, 0, 57, 0, 0, 2, 0, 1, 5, 10, 0.12826797385620914, ["cmp     r15d, 1", "jz      loc_5A40"], ["cmp~r15d,0", "jz~FOO"]], [1, 0, 46, 1, 1, 10, 0, 2, 11, 10, 0.0029774872912127796, ["sub     rsp, 10h", "mov     edi, r15d; inexact_style", "fld     st", "fstp    [rsp+0D8h+value.value]; value", "fstp    [rsp+0D8h+damt.value]", "call    adjust_value", "pop     rax", "pop     rdx", "fld     [rsp+0C8h+damt.value]", "jmp     loc_5419"], ["sub~rsp,0", "mov~edi,r15d", "fld~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "fstp~<TAG>,[rsp+0]", "call~FOO", "pop~rax", "pop~rdx", "fld~<TAG>,[rsp+0]", "jmp~FOO"]], [0, 0, 79, 0, 0, 5, 3, 0, 12, 15, 0.012445533769063181, ["test    r15d, r15d", "setz    dl", "test    edi, edi", "setnle  r8b", "and     edx, r8d"], ["test~r15d,r15d", "setz~dl", "test~edi,edi", "setnle~r8b", "and~edx,r8d"]], [0, 0, 37, 0, 0, 1, 0, 1, 7, 9, 0.0010076252723311546, ["jmp     loc_58F0"], ["jmp~FOO"]], [0, 0, 35, 0, 0, 5, 0, 1, 13, 7, 0.0009531590413943355, ["mov     edx, [decimal_point]", "mov     [p_0], edx", "mov     edx, [decimal_point+rax-4]", "mov     [p_0+rax-4], edx", "jmp     loc_5AC6"], ["mov~edx,<TAG>", "mov~<TAG>,edx", "mov~edx,[decimal_point+0]", "mov~[p_0+0],edx", "jmp~FOO"]], [1, 0, 39, 0, 0, 2, 1, 1, 12, 8, 0.011546840958605665, ["and     ebp, 4", "jnz     loc_5C51"], ["and~ebp,0", "jnz~FOO"]], [2, 0, 79, 1, 0, 6, 1, 1, 12, 15, 0.012445533769063181, ["mov     edx, eax", "and     edx, 1", "add     edx, edi", "cmp     edx, 2", "setnle  dl", "jmp     loc_5860"], ["mov~edx,eax", "and~edx,0", "add~edx,edi", "cmp~edx,0", "setnle~dl", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 16, -1, 0.000326797385620915, ["jmp     loc_5687"], ["jmp~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 15, -1, 0.013997821350762527, ["test    eax, eax", "mov     rdx, [rsp+0C8h+psuffix]", "jnz     loc_567B"], ["test~eax,eax", "mov~rdx,[rsp+0]", "jnz~FOO"]], [1, 0, 43, 0, 0, 2, 1, 1, 11, 8, 0.022585330428467696, ["test    r12b, 8", "jz      loc_55D0"], ["test~r12b,0", "jz~FOO"]], [3, 0, 45, 1, 2, 19, 1, 2, 10, 9, 0.02231299927378359, ["sub     rsp, 10h", "lea     rcx, a1lf; \"%.1Lf\"", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "fld     st", "fstp    [rsp+0D8h+value.value]", "mov     decimal_point, [rsp+0D8h+buf]", "mov     esi, 1", "xor     eax, eax", "mov     rdi, r14", "fstp    [rsp+0D8h+damt.value]", "call    ___sprintf_chk", "mov     rdi, r14; s", "call    _strlen", "mov     r14, rax", "pop     buflen", "pop     rdx", "cmp     buflen, [rsp+0C8h+from_block_size]", "fld     [rsp+0C8h+damt.value]", "jbe     loc_5462"], ["sub~rsp,0", "lea~rcx,<TAG>", "mov~rdx,0", "fld~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "mov~decimal_point,[rsp+0]", "mov~esi,0", "xor~eax,eax", "mov~rdi,r14", "fstp~<TAG>,[rsp+0]", "call~FOO", "mov~rdi,r14", "call~FOO", "mov~r14,rax", "pop~buflen", "pop~rdx", "cmp~buflen,[rsp+0]", "fld~<TAG>,[rsp+0]", "jbe~FOO"]], [0, 0, 7, 0, 0, 8, 1, 1, 16, -1, 0.02080610021786492, ["lea     rcx, power_letter", "movsxd  exponent_0, ebx", "mov     rdi, [rsp+0C8h+psuffix]", "test    eax, eax", "movzx   ecx, byte ptr [rcx+exponent_0]", "lea     rdx, [rdi+1]", "mov     [rdi], cl", "jz      loc_5AA4"], ["lea~rcx,<TAG>", "movsxd~exponent_0,ebx", "mov~rdi,[rsp+0]", "test~eax,eax", "movzx~ecx,<TAG>", "lea~rdx,[rdi+0]", "mov~<TAG>,cl", "jz~FOO"]], [2, 0, 20, 1, 0, 3, 0, 1, 15, -1, 0.006372549019607843, ["add     ebx, 1", "cmp     ebx, 8", "jnz     short loc_594D"], ["add~ebx,0", "cmp~ebx,0", "jnz~FOO"]], [1, 0, 76, 0, 0, 3, 0, 1, 14, 14, 0.011383442265795206, ["lea     r9d, [tenths+1]", "cmp     r9d, 0Ah", "jz      loc_5B71"], ["lea~r9d,[tenths+0]", "cmp~r9d,0", "jz~FOO"]], [1, 0, 93, 1, 0, 4, 0, 1, 4, 12, 0.0057461873638344225, ["setb    dil", "movzx   edi, dil", "add     edi, 2", "jmp     use_integer_arithmetic"], ["setb~dil", "movzx~edi,dil", "add~edi,0", "jmp~FOO"]], [0, 0, 95, 4, 0, 13, 2, 0, 3, 13, 0.006753812636165577, ["mov     divisor, n_0", "xor     edx, edx", "div     divisor", "mov     n_0, rax", "lea     rax, [rdx+rdx*4]", "xor     edx, edx", "mov     rsi, rbx", "add     rax, rax", "div     divisor", "add     rdx, rdx", "mov     r9d, eax", "cmp     divisor, r2", "jbe     loc_5A68"], ["mov~divisor,n_0", "xor~edx,edx", "div~,divisor", "mov~n_0,rax", "lea~rax,<TAG>", "xor~edx,edx", "mov~rsi,rbx", "add~rax,rax", "div~,divisor", "add~rdx,rdx", "mov~r9d,eax", "cmp~divisor,r2", "jbe~FOO"]], [1, 0, 69, 1, 0, 1, 0, 0, 15, 14, 0.01312636165577342, ["add     r9d, 30h ; '0'"], ["add~r9d,0"]], [1, 0, 3, 0, 0, 3, 0, 0, 16, -1, 0.0007897603485838779, ["lea     rax, [psuffix_0+1]", "mov     byte ptr [psuffix_0], 42h ; 'B'", "mov     [rsp+0C8h+psuffix], rax"], ["lea~rax,[psuffix_0+0]", "mov~<TAG>,0", "mov~[rsp+0],rax"]], [1, 0, 5, 0, 0, 5, 1, 1, 17, -1, 0.00021786492374727668, ["mov     exponent_0, [rsp+0C8h+psuffix]", "test    eax, eax", "lea     rdx, [rbx+1]", "mov     byte ptr [rbx], 6Bh ; 'k'", "jnz     loc_567B"], ["mov~exponent_0,[rsp+0]", "test~eax,eax", "lea~rdx,[rbx+0]", "mov~<TAG>,0", "jnz~FOO"]], [0, 0, 58, 0, 0, 3, 1, 1, 6, 11, 0.0031590413943355117, ["mov     r8, [rsp+0C8h+psuffix]", "xor     ebx, ebx", "jmp     loc_58C0"], ["mov~r8,[rsp+0]", "xor~ebx,ebx", "jmp~FOO"]], [0, 0, 91, 0, 0, 4, 0, 1, 5, 12, 0.017973856209150325, ["mov     r8d, [rsp+0C8h+base]", "cmp     r8, amt", "mov     r11, r8", "ja      loc_5A80"], ["mov~r8d,[rsp+0]", "cmp~r8,amt", "mov~r11,r8", "ja~FOO"]], [1, 0, 41, 0, 0, 3, 0, 1, 12, 8, 0.005047204066811911, ["mov     rax, [rsp+0C8h+buf]", "cmp     byte ptr [rax+r14-1], 30h ; '0'", "jnz     loc_55D8"], ["mov~rax,<TAG>", "cmp~[yte ptr [rax+0],0", "jnz~FOO"]], [0, 0, 36, 0, 0, 1, 0, 1, 14, 8, 0.0010348583877995642, ["jmp     loc_59C3"], ["jmp~FOO"]], [1, 0, 68, 1, 0, 7, 0, 0, 16, 13, 0.02080610021786492, ["mov     rax, [rsp+0C8h+buf]", "lea     r8, [rax+287h]", "mov     [rax+287h], r9b", "mov     eax, ebp", "sub     p_0, rbp", "cmp     ebp, 8", "jnb     loc_5B21"], ["mov~rax,<TAG>", "lea~r8,[rax+0]", "mov~[rax+0],r9b", "mov~eax,ebp", "sub~p_0,rbp", "cmp~ebp,0", "jnb~FOO"]], [1, 0, 69, 0, 0, 2, 0, 1, 16, 14, 0.0017429193899782135, ["mov     r9d, 30h ; '0'", "jmp     loc_587A"], ["mov~r9d,0", "jmp~FOO"]], [10, 1, 136, 4, 3, 52, 4, 4, 0, 14, 0.0, ["push    r15", "push    r14", "mov     eax, edx", "push    r13", "push    r12", "mov     r15d, edx", "push    rbp", "push    rbx", "and     eax, 20h", "and     r15d, 3", "mov     r12d, edx", "mov     rbx, n_0", "sub     rsp, 98h", "mov     [rsp+0C8h+from_block_size], from_block_size_0", "mov     [rsp+0C8h+var_98], eax", "mov     from_block_size_0, fs:28h", "mov     [rsp+0C8h+var_40], from_block_size_0", "xor     ecx, ecx", "cmp     eax, 1", "mov     [rsp+0C8h+buf], buf_0", "mov     [rsp+0C8h+to_block_size], to_block_size_0", "sbb     eax, eax", "and     eax, 0FFFFFFE8h", "add     eax, 400h", "mov     [rsp+0C8h+base], eax", "call    _localeconv", "mov     r14, [rax]", "mov     r13, rax", "mov     rdi, r14; s", "call    _strlen", "mov     rcx, [l+10h]", "mov     l, [l+8]", "mov     rbp, rax", "sub     pointlen, 1", "mov     edx, 1", "cmp     rax, 10h", "lea     rax, asc_9937; \".\"", "mov     rdi, r13; s", "cmovnb  pointlen, rdx", "mov     [rsp+0C8h+grouping], rcx", "cmovnb  r14, rax", "call    _strlen", "cmp     rax, 11h", "lea     rax, aWrittenBySSAnd+1Bh; \"\"", "mov     rdi, [rsp+0C8h+to_block_size]", "mov     rcx, [rsp+0C8h+from_block_size]", "cmovnb  r13, rax", "mov     rax, [rsp+0C8h+buf]", "add     rax, 288h", "cmp     rdi, rcx", "mov     [rsp+0C8h+psuffix], rax", "ja      loc_5498"], ["push~r15", "push~r14", "mov~eax,edx", "push~r13", "push~r12", "mov~r15d,edx", "push~rbp", "push~rbx", "and~eax,<STR>", "and~r15d,0", "mov~r12d,edx", "mov~rbx,n_0", "sub~rsp,0", "mov~[rsp+0],from_block_size_0", "mov~[rsp+0],eax", "mov~from_block_size_0,<TAG>", "mov~[rsp+0],from_block_size_0", "xor~ecx,ecx", "cmp~eax,0", "mov~<TAG>,buf_0", "mov~[rsp+0],to_block_size_0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[rsp+0],eax", "call~FOO", "mov~r14,<TAG>", "mov~r13,rax", "mov~rdi,r14", "call~FOO", "mov~rcx,[l+0]", "mov~l,[l+0]", "mov~rbp,rax", "sub~pointlen,0", "mov~edx,0", "cmp~rax,0", "lea~rax,<TAG>", "mov~rdi,r13", "cmovnb~pointlen,rdx", "mov~[rsp+0],rcx", "cmovnb~r14,rax", "call~FOO", "cmp~rax,0", "lea~rax,<TAG>", "mov~rdi,[rsp+0]", "mov~rcx,[rsp+0]", "cmovnb~r13,rax", "mov~rax,<TAG>", "add~rax,0", "cmp~rdi,rcx", "mov~[rsp+0],rax", "ja~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 17, -1, 0.0005174291938997821, ["mov     [rsp+0C8h+psuffix], psuffix_0", "jmp     loc_5687"], ["mov~[rsp+0],psuffix_0", "jmp~FOO"]], [0, 0, 61, 0, 0, 2, 1, 1, 18, 12, 0.004983660130718954, ["test    eax, eax", "jz      short loc_58B7"], ["test~eax,eax", "jz~FOO"]], [1, 0, 49, 0, 0, 2, 0, 1, 9, 8, 0.03461328976034858, ["cmp     ebx, 8", "jz      loc_58F0"], ["cmp~ebx,0", "jz~FOO"]], [0, 0, 51, 0, 0, 3, 0, 1, 8, 9, 0.03736383442265795, ["mov     eax, [rsp+0C8h+base]", "cmp     rax, amt", "jz      loc_5AB0"], ["mov~eax,[rsp+0]", "cmp~rax,amt", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 12, -1, 0.0, ["add     rsp, 98h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 58, 0, 0, 3, 2, 0, 17, 11, 0.04738562091503268, ["xor     edi, edi", "xor     r9d, r9d", "nop     dword ptr [rax+00h]"], ["xor~edi,edi", "xor~r9d,r9d", "nop~[word ptr [rax+0]"]], [3, 0, 62, 3, 0, 15, 2, 0, 17, 12, 0.014705882352941176, ["mov     rax, [decimal_point]", "mov     r9, decimal_point", "mov     [p_0], rax", "mov     eax, ebp", "mov     rdx, [decimal_point+rax-8]", "mov     [p_0+rax-8], rdx", "lea     rdx, [p_0+8]", "mov     rax, p_0", "and     rdx, 0FFFFFFFFFFFFFFF8h", "sub     rax, rdx", "sub     r9, rax", "add     eax, ebp", "and     eax, 0FFFFFFF8h", "cmp     eax, 8", "jb      loc_58B7"], ["mov~rax,<TAG>", "mov~r9,decimal_point", "mov~<TAG>,rax", "mov~eax,ebp", "mov~rdx,[decimal_point+0]", "mov~[p_0+0],rdx", "lea~rdx,[p_0+0]", "mov~rax,p_0", "and~rdx,0", "sub~rax,rdx", "sub~r9,rax", "add~eax,ebp", "and~eax,0", "cmp~eax,0", "jb~FOO"]], [0, 0, 59, 0, 0, 1, 0, 1, 20, 12, 0.006427015250544662, ["jmp     loc_58B7"], ["jmp~FOO"]], [0, 0, 59, 0, 0, 2, 0, 1, 16, 12, 0.007625272331154684, ["mov     r8, [rsp+0C8h+psuffix]", "jmp     loc_58B7"], ["mov~r8,[rsp+0]", "jmp~FOO"]], [2, 0, 45, 1, 0, 3, 1, 1, 10, 7, 0.03425925925925926, ["add     ebx, 1", "test    r12b, 8", "jz      loc_5B82"], ["add~ebx,0", "test~r12b,0", "jz~FOO"]], [2, 0, 92, 0, 0, 5, 1, 1, 4, 11, 0.03676470588235294, ["mov     ecx, r12d", "mov     r8, [rsp+0C8h+psuffix]", "mov     ebx, 0FFFFFFFFh", "and     ecx, 10h", "jz      loc_58C0"], ["mov~ecx,r12d", "mov~r8,[rsp+0]", "mov~ebx,0", "and~ecx,0", "jz~FOO"]], [0, 0, 58, 0, 0, 2, 0, 1, 11, 11, 0.022113289760348584, ["mov     r8, [rsp+0C8h+psuffix]", "jmp     loc_58C0"], ["mov~r8,[rsp+0]", "jmp~FOO"]], [0, 0, 58, 0, 0, 3, 1, 1, 16, 11, 0.022113289760348584, ["mov     r8, [rsp+0C8h+psuffix]", "xor     r9d, r9d", "jmp     loc_58C0"], ["mov~r8,[rsp+0]", "xor~r9d,r9d", "jmp~FOO"]], [0, 0, 54, 0, 0, 2, 1, 1, 6, 9, 0.08480392156862746, ["test    r15d, r15d", "jnz     short loc_58F0"], ["test~r15d,r15d", "jnz~FOO"]], [0, 0, 37, 0, 0, 2, 1, 1, 13, 7, 0.006835511982570806, ["test    eax, eax", "jz      loc_5AC6"], ["test~eax,eax", "jz~FOO"]], [1, 0, 36, 0, 0, 4, 1, 1, 14, 7, 0.0029956427015250544, ["movzx   edx, byte ptr [decimal_point]", "test    al, 2", "mov     [p_0], dl", "jz      loc_5AC6"], ["movzx~edx,<TAG>", "test~al,0", "mov~<TAG>,dl", "jz~FOO"]], [0, 0, 35, 0, 0, 3, 0, 1, 15, 7, 0.0, ["movzx   edx, word ptr [decimal_point+rax-2]", "mov     [p_0+rax-2], dx", "jmp     loc_5AC6"], ["movzx~edx,[ord ptr [decimal_point+0]", "mov~[p_0+0],dx", "jmp~FOO"]], [0, 0, 129, 2, 0, 7, 1, 1, 2, 13, 0.006535947712418301, ["mov     rsi, n_0", "xor     edx, edx", "imul    rsi, multiplier", "mov     multiplier, amt", "div     multiplier", "cmp     rax, n_0", "jnz     loc_5365"], ["mov~rsi,n_0", "xor~edx,edx", "imul~rsi,multiplier", "mov~multiplier,amt", "div~,multiplier", "cmp~rax,n_0", "jnz~FOO"]], [0, 0, 130, 1, 0, 6, 2, 1, 1, 13, 0.00520152505446623, ["xor     edx, edx", "mov     psuffix_0, rcx", "div     rdi", "test    rdx, rdx", "mov     rdi, rax", "jz      loc_56C0"], ["xor~edx,edx", "mov~psuffix_0,rcx", "div~,rdi", "test~rdx,rdx", "mov~rdi,rax", "jz~FOO"]], [0, 0, 53, 1, 0, 3, 1, 1, 7, 9, 0.0008714596949891067, ["add     edi, r9d", "test    edi, edi", "jle     short loc_58F0"], ["add~edi,r9d", "test~edi,edi", "jle~FOO"]], [1, 0, 52, 1, 0, 3, 1, 1, 7, 9, 0.04022331154684096, ["add     amt, 1", "test    ecx, ecx", "jz      short loc_58F0"], ["add~amt,0", "test~ecx,ecx", "jz~FOO"]], [0, 0, 93, 0, 0, 3, 2, 1, 3, 12, 0.01056644880174292, ["xor     edi, edi", "xor     r9d, r9d", "jmp     use_integer_arithmetic"], ["xor~edi,edi", "xor~r9d,r9d", "jmp~FOO"]], [1, 0, 22, 0, 0, 3, 0, 0, 12, -1, 0.03104575163398693, ["mov     rcx, [rsp+0C8h+to_block_size]", "cmp     rcx, 1", "jbe     loc_5AE2"], ["mov~rcx,[rsp+0]", "cmp~rcx,0", "jbe~FOO"]], [0, 0, 37, 0, 0, 1, 0, 0, 9, 9, 8.169934640522875e-05, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 71, 0, 0, 2, 1, 1, 15, 12, 0.022930283224400872, ["test    r12b, 8", "jnz     short loc_5B14"], ["test~r12b,0", "jnz~FOO"]], [0, 0, 72, 0, 0, 2, 1, 1, 16, 13, 0.0008714596949891067, ["xor     edi, edi", "jmp     loc_5AF1"], ["xor~edi,edi", "jmp~FOO"]], [0, 0, 93, 0, 0, 3, 2, 0, 4, 12, 0.0057461873638344225, ["xor     edi, edi", "test    r2, r2", "setnz   dil"], ["xor~edi,edi", "test~r2,r2", "setnz~dil"]], [1, 0, 36, 0, 0, 3, 0, 0, 7, 8, 0.09188453159041395, ["mov     inexact_style, integerlim_0", "mov     rcx, 0CCCCCCCCCCCCCCCDh", "nop     dword ptr [rax]"], ["mov~inexact_style,integerlim_0", "mov~rcx,0", "nop~<TAG>"]], [0, 0, 32, 2, 1, 10, 1, 2, 13, 1, 0.011982570806100218, ["mov     rax, [rsp+0C8h+from_block_size]", "sub     r12, rbp", "sub     r8, rbp", "mov     rdi, r8; dest", "mov     rdx, rbp; n", "lea     rsi, [rax+r12]; src", "call    _memcpy", "test    r12, r12", "mov     r8, rax", "jz      loc_5C78"], ["mov~rax,[rsp+0]", "sub~r12,rbp", "sub~r8,rbp", "mov~rdi,r8", "mov~rdx,rbp", "lea~rsi,<TAG>", "call~FOO", "test~r12,r12", "mov~r8,rax", "jz~FOO"]], [0, 0, 89, 0, 0, 2, 1, 1, 6, 16, 0.01857298474945534, ["xor     ebx, ebx", "jmp     short loc_5537"], ["xor~ebx,ebx", "jmp~FOO"]], [1, 0, 57, 0, 0, 2, 0, 1, 8, 12, 0.0015795206971677559, ["cmp     ebx, 8", "jnz     short loc_53C0"], ["cmp~ebx,0", "jnz~FOO"]], [0, 0, 89, 0, 0, 3, 1, 0, 8, 14, 0.01377995642701525, ["test    edi, edi", "setnz   dil", "movzx   edi, dil"], ["test~edi,edi", "setnz~dil", "movzx~edi,dil"]], [1, 0, 89, 3, 0, 16, 2, 1, 7, 15, 0.024509803921568627, ["mov     rax, amt", "xor     edx, edx", "mov     esi, edi", "div     r8", "sar     esi, 1", "mov     r10, rax", "lea     eax, [rdx+rdx*4]", "xor     edx, edx", "lea     eax, [tenths+rax*2]", "div     r11d", "lea     edx, [rsi+rdx*2]", "mov     r9d, eax", "mov     rsi, r10", "add     edi, edx", "cmp     r11d, edx", "ja      short loc_5518"], ["mov~rax,amt", "xor~edx,edx", "mov~esi,edi", "div~,r8", "sar~esi,0", "mov~r10,rax", "lea~eax,<TAG>", "xor~edx,edx", "lea~eax,<TAG>", "div~,r11d", "lea~edx,<TAG>", "mov~r9d,eax", "mov~rsi,r10", "add~edi,edx", "cmp~r11d,edx", "ja~FOO"]], [3, 0, 36, 5, 0, 12, 1, 1, 8, 7, 0.09090413943355119, ["mov     rax, amt", "sub     p_0, 1", "mul     rcx", "shr     rdx, 3", "lea     rax, [rdx+rdx*4]", "add     rax, rax", "sub     amt, rax", "add     esi, 30h ; '0'", "test    rdx, rdx", "mov     [p_0], sil", "mov     rsi, rdx", "jnz     short loc_5900"], ["mov~rax,amt", "sub~p_0,0", "mul~,rcx", "shr~rdx,0", "lea~rax,<TAG>", "add~rax,rax", "sub~amt,rax", "add~esi,0", "test~rdx,rdx", "mov~<TAG>,sil", "mov~rsi,rdx", "jnz~FOO"]], [1, 0, 89, 1, 0, 5, 0, 1, 8, 14, 0.01377995642701525, ["cmp     r11d, edi", "setb    dil", "movzx   edi, dil", "add     edi, 2", "jmp     short loc_5522"], ["cmp~r11d,edi", "setb~dil", "movzx~edi,dil", "add~edi,0", "jmp~FOO"]], [1, 0, 89, 0, 0, 2, 0, 1, 10, 12, 0.008714596949891067, ["cmp     ebx, 8", "jz      loc_5AD8"], ["cmp~ebx,0", "jz~FOO"]], [1, 1, 32, 1, 2, 22, 0, 3, 10, 4, 0.03965141612200435, ["mov     r14, integerlim_0", "mov     rdi, thousands_sep; s", "mov     [rsp+0C8h+integerlim], integerlim_0", "sub     r14, p_0", "mov     rbp, 0FFFFFFFFFFFFFFFFh", "call    _strlen", "lea     rdi, [rsp+0C8h+var_78]", "mov     ecx, 29h ; ')'", "mov     rdx, r14", "mov     rsi, p_0", "mov     [rsp+0C8h+n], rax", "mov     [rsp+0C8h+from_block_size], rdi", "call    ___memcpy_chk", "mov     ecx, r12d", "mov     dword ptr [rsp+0C8h+damt.value], ebx", "mov     opts, r14", "mov     exponent_0, thousands_sep", "mov     r8, [rsp+0C8h+integerlim]", "mov     p_0, [rsp+0C8h+grouping]", "mov     thousands_sep, [rsp+0C8h+n]", "mov     r14d, ecx", "jmp     short loc_5782"], ["mov~r14,integerlim_0", "mov~rdi,thousands_sep", "mov~[rsp+0],integerlim_0", "sub~r14,p_0", "mov~rbp,0", "call~FOO", "lea~rdi,[rsp+0]", "mov~ecx,<STR>", "mov~rdx,r14", "mov~rsi,p_0", "mov~[rsp+0],rax", "mov~[rsp+0],rdi", "call~FOO", "mov~ecx,r12d", "mov~[word ptr [rsp+0],ebx", "mov~opts,r14", "mov~exponent_0,thousands_sep", "mov~r8,[rsp+0]", "mov~p_0,[rsp+0]", "mov~thousands_sep,[rsp+0]", "mov~r14d,ecx", "jmp~FOO"]], [2, 0, 20, 0, 0, 3, 0, 0, 13, -1, 0.018790849673202614, ["mov     edx, [rsp+0C8h+base]", "mov     ebx, 1", "mov     eax, 1"], ["mov~edx,[rsp+0]", "mov~ebx,0", "mov~eax,0"]], [1, 0, 61, 0, 0, 2, 2, 0, 18, 14, 0.0033769063180827887, ["and     eax, 0FFFFFFF8h", "xor     edi, edi"], ["and~eax,0", "xor~edi,edi"]], [0, 0, 32, 0, 0, 2, 0, 0, 12, 2, 0.029030501089324617, ["cmp     rbp, r12", "jbe     short loc_5748"], ["cmp~rbp,r12", "jbe~FOO"]], [1, 0, 61, 1, 0, 6, 0, 0, 19, 13, 0.004956427015250544, ["mov     r10d, edi", "add     edi, 8", "mov     r11, [r9+r10]", "cmp     edi, eax", "mov     [rdx+r10], r11", "jb      short loc_5B5A"], ["mov~r10d,edi", "add~edi,0", "mov~r11,<TAG>", "cmp~edi,eax", "mov~<TAG>,r11", "jb~FOO"]], [0, 0, 68, 0, 0, 4, 1, 0, 2, 12, 0.017592592592592594, ["mov     [rsp+0C8h+from_block_size], rcx", "test    rcx, rcx", "fild    [rsp+0C8h+from_block_size]", "jns     short loc_5379"], ["mov~[rsp+0],rcx", "test~rcx,rcx", "fild~<TAG>,[rsp+0]", "jns~FOO"]], [0, 0, 67, 0, 0, 1, 0, 0, 3, 12, 0.0, ["fadd    cs:flt_9998"], ["fadd~<TAG>,<TAG>"]], [1, 0, 74, 0, 0, 3, 0, 1, 15, 13, 0.007080610021786492, ["lea     rsi, [r10+1]", "cmp     amt, 0Ah", "jz      short loc_5BD0"], ["lea~rsi,[r10+0]", "cmp~amt,0", "jz~FOO"]], [1, 0, 38, 0, 0, 2, 0, 1, 6, 8, 0.023910675381263617, ["cmp     r15d, 1", "jz      short loc_558C"], ["cmp~r15d,0", "jz~FOO"]], [1, 0, 62, 0, 0, 3, 1, 1, 5, 9, 0.03622004357298475, ["test    r12b, 10h", "fmulp   st(1), st", "jz      loc_5578"], ["test~r12b,0", "fmulp~<TAG>,<TAG>", "jz~FOO"]], [0, 0, 32, 1, 1, 6, 0, 1, 14, 4, 0.0003812636165577342, ["sub     r8, r13", "mov     rdx, r13; n", "mov     rsi, thousands_sep; src", "mov     rdi, r8; dest", "call    _memcpy", "mov     r8, rax"], ["sub~r8,r13", "mov~rdx,r13", "mov~rsi,thousands_sep", "mov~rdi,r8", "call~FOO", "mov~r8,rax"]], [0, 0, 32, 0, 0, 3, 1, 1, 11, 3, 0.037527233115468406, ["movzx   eax, byte ptr [r15]", "test    al, al", "jz      short loc_5797"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 66, 0, 0, 5, 1, 0, 3, 11, 0.02423747276688453, ["mov     rax, [rsp+0C8h+to_block_size]", "mov     [rsp+0C8h+from_block_size], rax", "test    rax, rax", "fild    [rsp+0C8h+from_block_size]", "jns     short loc_5392"], ["mov~rax,[rsp+0]", "mov~[rsp+0],rax", "test~rax,rax", "fild~<TAG>,[rsp+0]", "jns~FOO"]], [0, 0, 65, 0, 0, 1, 0, 0, 4, 11, 0.0, ["fadd    cs:flt_9998"], ["fadd~<TAG>,<TAG>"]], [2, 0, 32, 1, 0, 4, 0, 0, 12, 3, 0.0, ["cmp     al, 7Fh", "movzx   ebp, al", "cmovnb  rbp, r12", "add     r15, 1"], ["cmp~al,0", "movzx~ebp,al", "cmovnb~rbp,r12", "add~r15,0"]], [0, 0, 64, 0, 0, 5, 1, 0, 4, 10, 0.030446623093681915, ["fdivp   st(1), st", "mov     [rsp+0C8h+from_block_size], n_0", "test    n_0, n_0", "fild    [rsp+0C8h+from_block_size]", "jns     short loc_53A8"], ["fdivp~<TAG>,<TAG>", "mov~[rsp+0],n_0", "test~n_0,n_0", "fild~<TAG>,[rsp+0]", "jns~FOO"]], [0, 0, 63, 0, 0, 1, 0, 0, 5, 10, 0.0, ["fadd    cs:flt_9998"], ["fadd~<TAG>,<TAG>"]], [0, 0, 57, 0, 0, 4, 1, 1, 6, 13, 0.01437908496732026, ["fild    [rsp+0C8h+base]", "xor     ebx, ebx", "fld     st", "jmp     short loc_53C4"], ["fild~<TAG>,[rsp+0]", "xor~ebx,ebx", "fld~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 36, 0, 0, 2, 0, 0, 11, 8, 0.008714596949891067, ["fld     cs:flt_999C", "fmul    st(1), st"], ["fld~<TAG>,<TAG>", "fmul~<TAG>,<TAG>"]], [0, 0, 57, 0, 0, 2, 0, 0, 9, 13, 0.00010893246187363834, ["fstp    st(1)", "fxch    st(2)"], ["fstp~<TAG>,<TAG>", "fxch~<TAG>,<TAG>"]], [4, 0, 35, 1, 2, 17, 2, 3, 7, 7, 0.027668845315904137, ["sub     rsp, 10h", "lea     rcx, a0lf; \"%.0Lf\"", "mov     esi, 1", "mov     n_0, [rsp+0D8h+buf]", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "xor     eax, eax", "fstp    [rsp+0D8h+value.value]", "xor     ebp, ebp", "mov     rdi, rbx", "call    ___sprintf_chk", "mov     rdi, rbx; s", "mov     ebx, 0FFFFFFFFh", "call    _strlen", "pop     rsi", "pop     rdi", "mov     decimal_point, rax", "jmp     short loc_55E0"], ["sub~rsp,0", "lea~rcx,<TAG>", "mov~esi,0", "mov~n_0,[rsp+0]", "mov~rdx,0", "xor~eax,eax", "fstp~<TAG>,<TAG>", "xor~ebp,ebp", "mov~rdi,rbx", "call~FOO", "mov~rdi,rbx", "mov~ebx,0", "call~FOO", "pop~rsi", "pop~rdi", "mov~decimal_point,rax", "jmp~FOO"]], [1, 0, 57, 1, 0, 6, 0, 0, 7, 12, 0.019825708061002176, ["fld     st", "add     ebx, 1", "fmul    st, st(2)", "fxch    st(3)", "fucomi  st, st(3)", "jb      short loc_53E0"], ["fld~<TAG>,<TAG>", "add~ebx,0", "fmul~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "jb~FOO"]], [0, 0, 35, 0, 0, 2, 0, 1, 12, 7, 0.017156862745098037, ["fstp    st", "jmp     short loc_55E0"], ["fstp~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 35, 0, 0, 2, 0, 0, 13, 7, 0.001906318082788671, ["fstp    st", "nop     word ptr [rax+rax+00h]"], ["fstp~<TAG>,<TAG>", "nop~[ord ptr [rax+0]"]], [3, 0, 35, 1, 2, 17, 2, 3, 12, 7, 0.01906318082788671, ["fdivp   st(1), st", "sub     rsp, 10h", "lea     rcx, a0lf; \"%.0Lf\"", "mov     r14, [rsp+0D8h+buf]", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "xor     eax, eax", "xor     ebp, ebp", "mov     rdi, r14", "fstp    [rsp+0D8h+value.value]", "call    ___sprintf_chk", "mov     rdi, r14; s", "call    _strlen", "pop     r10", "mov     r14, rax", "pop     r11", "jmp     loc_55E0"], ["fdivp~<TAG>,<TAG>", "sub~rsp,0", "lea~rcx,<TAG>", "mov~r14,[rsp+0]", "mov~rdx,0", "mov~esi,0", "xor~eax,eax", "xor~ebp,ebp", "mov~rdi,r14", "fstp~<TAG>,<TAG>", "call~FOO", "mov~rdi,r14", "call~FOO", "pop~r10", "mov~r14,rax", "pop~r11", "jmp~FOO"]]], "func_feature": [21, 82, 117, 3, 137, 209, 2, 652, 0.02032, 9, 61], "succs": [[60, 12], [0], [0], [112, 9], [3], [3], [3], [21, 5], [55, 7], [40, 13], [9], [9], [51, 14], [25, 98], [48], [136, 34], [72, 15], [15], [66, 100], [18, 63], [20, 22], [20], [5], [132], [132, 23], [40, 31], [25, 62], [25], [25], [65, 117], [29, 117], [32, 33], [41, 58], [32], [136], [81], [35, 77], [67], [67, 37], [], [80, 39], [44, 61], [45, 87], [42, 111], [68, 61], [56, 52], [81], [81, 46], [17, 59], [96, 53], [49, 89], [48], [19], [103], [5], [90, 54], [19], [40], [57, 67], [134, 71], [130, 59], [76, 38], [26, 27], [66, 119], [86], [64, 102], [73], [40], [67, 76], [50], [105, 69], [16, 135], [136], [82, 36], [73], [94, 30], [40], [81, 47], [85, 103], [99, 78], [], [50], [81, 114], [81], [81], [8, 5], [50, 70], [50], [50], [103, 95], [91, 5], [92, 5], [5], [97, 117], [93, 117], [96, 103], [103, 79], [86], [113, 28], [103], [88, 74], [100], [86], [109], [122, 11], [108], [1, 131], [43], [107, 110], [4, 109], [43], [108, 87], [123], [26], [116], [104, 10], [83, 116], [124, 118], [124], [84, 101], [24, 132], [120, 129], [123], [115, 126], [125, 127], [127], [115], [128, 121], [121], [133], [136], [133], [6], [106, 2], [6], [6], [6]], "fname": "human_readable", "n_num": 137}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 5, 0, 0, 3, 0, 1, 0, 0, 0.07122507122507123, ["mov     rdx, [block_size]", "mov     [opts+0], ebp", "jmp     short loc_5D94"], ["mov~rdx,<TAG>", "mov~[opts+0],ebp", "jmp~FOO"]], [1, 0, 15, 0, 0, 4, 0, 0, 4, 4, 0.09971509971509972, ["movzx   esi, byte ptr [rbx]", "lea     edx, [rsi-30h]", "cmp     dl, 9", "jbe     short loc_5D78"], ["movzx~esi,<TAG>", "lea~edx,[rsi-30h]+0]", "cmp~dl,0", "jbe~FOO"]], [0, 1, 6, 0, 0, 2, 1, 1, 9, 4, 0.017094017094017096, ["or      ebp, 20h", "jmp     loc_5D78"], ["or~ebp,<STR>", "jmp~FOO"]], [1, 1, 8, 0, 0, 3, 1, 1, 8, 4, 0.03561253561253561, ["or      ebp, 180h", "cmp     byte ptr [rcx-2], 69h ; 'i'", "jnz     loc_5D78"], ["or~ebp,<STR>", "cmp~[yte ptr [rcx-2]+0],0", "jnz~FOO"]], [2, 0, 13, 1, 0, 5, 0, 1, 6, 4, 0.029914529914529916, ["add     rbx, 1", "movzx   edi, byte ptr [rbx]", "lea     edx, [rdi-30h]", "cmp     dl, 9", "ja      short loc_5D60"], ["add~rbx,0", "movzx~edi,<TAG>", "lea~edx,[rdi-30h]+0]", "cmp~dl,0", "ja~FOO"]], [1, 0, 3, 0, 0, 6, 2, 0, 3, 2, 0.01851851851851852, ["lea     rdx, block_size_opts", "cdqe", "mov     qword ptr [block_size], 1", "or      ebp, [rdx+rax*4]", "xor     eax, eax", "mov     [opts+0], ebp"], ["lea~rdx,<TAG>", "cdqe~", "mov~<TAG>,0", "or~ebp,<TAG>", "xor~eax,eax", "mov~[opts+0],ebp"]], [1, 0, 19, 0, 1, 7, 1, 2, 2, 3, 0.12820512820512822, ["lea     rdx, block_size_opts; vallist", "lea     rsi, block_size_args; arglist", "mov     ecx, 4; valsize", "mov     rdi, rbx; arg", "call    argmatch", "test    eax, eax", "js      short loc_5D28"], ["lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~ecx,0", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 17, 0, 1, 8, 2, 2, 3, 4, 0.11965811965811966, ["lea     r8, aEeggkkmmppttyy; \"eEgGkKmMpPtTyYzZ0\"", "xor     edx, edx; strtol_base", "mov     rsi, rsp; ptr", "mov     rcx, block_size; val", "mov     rdi, rbx; s", "call    xstrtoumax", "test    eax, eax", "jnz     short loc_5D88"], ["lea~r8,<TAG>", "xor~edx,edx", "mov~rsi,rsp", "mov~rcx,block_size", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 0, 4, 3, 0.02421652421652422, ["mov     rdx, [block_size]", "mov     dword ptr [opts+0], 0"], ["mov~rdx,<TAG>", "mov~[word ptr [opts+0],0"]], [0, 0, 5, 0, 1, 4, 1, 2, 3, 3, 0.01566951566951567, ["lea     rdi, name; \"POSIXLY_CORRECT\"", "call    _getenv", "test    rax, rax", "jz      short loc_5E5A"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 25, 0, 1, 5, 1, 2, 2, 4, 0.011396011396011397, ["lea     rdi, aBlocksize; \"BLOCKSIZE\"", "call    _getenv", "test    rax, rax", "mov     rbx, rax", "jnz     loc_5CBC"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jnz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 4, 1, 0.07122507122507123, ["mov     rcx, [rsp+38h+var_30]", "xor     rcx, fs:28h", "jnz     loc_5E71"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 5, 2, 0.08262108262108263, ["test    rdx, rdx", "jnz     loc_5D05"], ["test~rdx,rdx", "jnz~FOO"]], [2, 2, 3, 1, 1, 9, 1, 2, 6, 2, 0.0, ["lea     rdi, name; \"POSIXLY_CORRECT\"", "call    _getenv", "cmp     rax, 1", "sbb     rax, rax", "and     eax, 200h", "add     rax, 200h", "mov     [block_size], rax", "mov     eax, 4", "jmp     loc_5D05"], ["lea~rdi,<TAG>", "call~FOO", "cmp~rax,0", "sbb~rax,rax", "and~eax,<STR>", "add~rax,<STR>", "mov~<TAG>,rax", "mov~eax,0", "jmp~FOO"]], [1, 1, 3, 0, 0, 4, 1, 1, 4, 2, 0.005698005698005698, ["mov     qword ptr [block_size], 200h", "xor     eax, eax", "mov     dword ptr [opts+0], 0", "jmp     loc_5D05"], ["mov~<TAG>,<STR>", "xor~eax,eax", "mov~[word ptr [opts+0],0", "jmp~FOO"]], [2, 0, 3, 0, 0, 4, 1, 1, 4, 2, 0.005698005698005698, ["mov     qword ptr [block_size], 400h", "xor     eax, eax", "mov     dword ptr [opts+0], 0", "jmp     loc_5D05"], ["mov~<TAG>,0", "xor~eax,eax", "mov~[word ptr [opts+0],0", "jmp~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 5, -1, 0.0, ["add     rsp, 18h", "pop     rbx", "pop     rbp", "pop     block_size", "pop     opts", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~block_size", "pop~opts", "retn"]], [1, 0, 10, 0, 0, 2, 0, 1, 7, 5, 0.07692307692307693, ["cmp     byte ptr [rcx-1], 42h ; 'B'", "jz      short loc_5E48"], ["cmp~[yte ptr [rcx-1]+0],0", "jz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 6, 6, 0.06410256410256411, ["jmp     loc_5E30"], ["jmp~FOO"]], [0, 0, 13, 0, 0, 2, 0, 1, 7, 5, 0.007122507122507123, ["cmp     rbx, rcx", "jz      loc_5E30"], ["cmp~rbx,rcx", "jz~FOO"]], [1, 0, 27, 1, 0, 13, 2, 1, 0, 5, 0.0, ["push    r13", "push    r12", "mov     r13, opts", "push    rbp", "push    rbx", "mov     r12, block_size", "mov     rbx, spec", "sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+38h+var_30], rax", "xor     eax, eax", "test    spec, spec", "jz      loc_5DD0"], ["push~r13", "push~r12", "mov~r13,opts", "push~rbp", "push~rbx", "mov~r12,block_size", "mov~rbx,spec", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~spec,spec", "jz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 9, 5, 0.0014245014245014246, ["jmp     short loc_5E3A"], ["jmp~FOO"]], [0, 1, 7, 0, 0, 1, 1, 0, 8, 5, 0.01851851851851852, ["or      bpl, 80h"], ["or~bpl,<STR>"]], [1, 0, 21, 0, 0, 3, 1, 1, 1, 4, 0.08262108262108263, ["xor     ebp, ebp", "cmp     byte ptr [rbx], 27h ; '''", "jnz     short loc_5CCC"], ["xor~ebp,ebp", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 26, 0, 1, 5, 1, 2, 1, 5, 0.005698005698005698, ["lea     rdi, aBlockSize; \"BLOCK_SIZE\"", "call    _getenv", "test    rax, rax", "mov     spec, rax", "jnz     loc_5CBC"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~spec,rax", "jnz~FOO"]], [2, 0, 20, 1, 0, 2, 0, 0, 2, 4, 0.0, ["add     rbx, 1", "mov     ebp, 4"], ["add~rbx,0", "mov~ebp,0"]], [0, 0, 14, 0, 0, 3, 0, 1, 5, 5, 0.09116809116809117, ["mov     rcx, [rsp+38h+var_38]", "cmp     rbx, rcx", "jnz     short loc_5D69"], ["mov~rcx,<TAG>", "cmp~rbx,rcx", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [7, 19, 28, 2, 28, 41, 0, 111, 0.03872, 7, 5], "succs": [[12], [0, 26], [0], [0, 21], [0, 19], [11], [5, 7], [8, 1], [12], [14, 15], [9, 23], [16, 27], [11, 13], [11], [11], [11], [], [3, 22], [17], [17, 4], [24, 23], [2], [2], [25, 6], [10, 23], [6], [18, 4], []], "fname": "human_options", "n_num": 28}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 2, 0, 0, 5, 1, 1, 2, 0, 0.13333333333333333, ["mov     rax, [rsp+108h+var_E0]", "xor     rax, fs:28h", "mov     cs:opterr@@GLIBC_2_2_5, ebx", "mov     cs:optind@@GLIBC_2_2_5, 0", "jnz     loc_5FB7"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "mov~<TAG>,ebx", "mov~<TAG>,0", "jnz~FOO"]], [2, 0, 0, 0, 2, 14, 1, 2, 5, 0, 0.0, ["lea     rax, [rsp+108h+arg_0]", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "lea     r8, [rsp+108h+authors]; authors", "mov     rcx, version; version", "mov     rdx, package; package", "mov     rsi, command_name; command_name", "mov     [rsp+108h+authors.overflow_arg_area], rax", "lea     rax, [rsp+108h+var_D8]", "mov     [rsp+108h+authors.gp_offset], 30h ; '0'", "mov     [rsp+108h+authors.fp_offset], 30h ; '0'", "mov     [rsp+108h+authors.reg_save_area], rax", "call    version_etc_va", "xor     edi, edi; status", "call    _exit"], ["lea~rax,[rsp+0]", "mov~rdi,<TAG>", "lea~r8,[rsp+0]", "mov~rcx,version", "mov~rdx,package", "mov~rsi,command_name", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "call~FOO", "xor~edi,edi", "call~FOO"]], [0, 0, 1, 0, 1, 3, 1, 2, 4, 0, 0.02777777777777778, ["xor     edi, edi", "call    r9", "jmp     short loc_5F5F"], ["xor~edi,edi", "call~r9", "jmp~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 4, 0, 0.061111111111111116, ["cmp     eax, 76h ; 'v'", "jnz     short loc_5EF9"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, 0, 0.0, ["add     rsp, 0E8h", "pop     saved_opterr", "pop     command_name", "pop     package", "pop     version", "retn"], ["add~rsp,0", "pop~saved_opterr", "pop~command_name", "pop~package", "pop~version", "retn"]], [2, 0, 8, 0, 0, 7, 1, 1, 1, 0, 0.17777777777777778, ["mov     rax, fs:28h", "mov     [rsp+108h+var_E0], rax", "xor     eax, eax", "cmp     edi, 2", "mov     ebx, cs:opterr@@GLIBC_2_2_5", "mov     cs:opterr@@GLIBC_2_2_5, 0", "jz      short loc_5F30"], ["mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edi,0", "mov~ebx,<TAG>", "mov~<TAG>,0", "jz~FOO"]], [1, 0, 10, 1, 0, 10, 1, 1, 0, 0, 0.0, ["push    r13", "push    r12", "mov     r13, version", "push    rbp", "push    rbx", "mov     rbp, command_name", "mov     r12, package", "sub     rsp, 0E8h", "test    al, al", "jz      short loc_5ED4"], ["push~r13", "push~r12", "mov~r13,version", "push~rbp", "push~rbx", "mov~rbp,command_name", "mov~r12,package", "sub~rsp,0", "test~al,al", "jz~FOO"]], [0, 0, 9, 0, 0, 8, 0, 0, 1, 0, 0.0, ["movaps  [rsp+108h+var_A8], xmm0", "movaps  [rsp+108h+var_98], xmm1", "movaps  [rsp+108h+var_88], xmm2", "movaps  [rsp+108h+var_78], xmm3", "movaps  [rsp+108h+var_68], xmm4", "movaps  [rsp+108h+var_58], xmm5", "movaps  [rsp+108h+var_48], xmm6", "movaps  [rsp+108h+var_38], xmm7"], ["movaps~[rsp+0],xmm0", "movaps~[rsp+0],xmm1", "movaps~[rsp+0],xmm2", "movaps~[rsp+0],xmm3", "movaps~[rsp+0],xmm4", "movaps~[rsp+0],xmm5", "movaps~[rsp+0],xmm6", "movaps~[rsp+0],xmm7"]], [1, 0, 7, 0, 1, 7, 1, 2, 2, 0, 0.13333333333333333, ["lea     package, long_options; longopts", "lea     command_name, shortopts; \"+\"", "xor     r8d, r8d; longind", "mov     [rsp+108h+usage_func], usage_func_0", "call    _getopt_long", "cmp     eax, 0FFFFFFFFh", "jz      short loc_5EF9"], ["lea~package,<TAG>", "lea~command_name,<TAG>", "xor~r8d,r8d", "mov~[rsp+0],usage_func_0", "call~FOO", "cmp~eax,0", "jz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 3, 0, 0.13333333333333333, ["cmp     eax, 68h ; 'h'", "mov     r9, [rsp+108h+usage_func]", "jz      short loc_5FB0"], ["cmp~eax,0", "mov~r9,[rsp+0]", "jz~FOO"]]], "func_feature": [5, 6, 12, 10, 11, 14, 1, 66, 0.06061, 6, 2], "succs": [[], [0, 5], [], [2], [1, 2], [], [9, 1], [8, 6], [6], [1, 10], [3, 4]], "fname": "parse_long_options", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     rdx, name; arg", "mov     esi, 6; s", "jmp     quotearg_n_style"], ["mov~rdx,name", "mov~esi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 1, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quote_n", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[1, 0, 1, 0, 0, 4, 1, 1, 0, 0, 0.0, ["mov     rdx, name; arg", "mov     esi, 6; s", "xor     edi, edi; n", "jmp     quotearg_n_style"], ["mov~rdx,name", "mov~esi,0", "xor~edi,edi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 23, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "quote", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[1, 0, 179, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rsi, [rsp+0D8h+buffer]", "mov     byte ptr [rsi+r15+3], 3Fh ; '?'"], ["mov~rsi,<TAG>", "mov~[yte ptr [rsi+0],0"]], [0, 0, 179, 0, 0, 3, 0, 0, 20, 9, 0.036510590858416944, ["lea     len, [r15+3]", "cmp     r13, len", "jbe     short loc_6206"], ["lea~len,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [3, 0, 180, 0, 0, 7, 1, 1, 3, 8, 0.004180602006688963, ["lea     rax, asc_99B7; \"\\\"\"", "mov     [rsp+0D8h+elide_outer_quotes], 1", "mov     [rsp+0D8h+backslash_escapes], 1", "mov     r11d, 1", "xor     r15d, r15d", "mov     [rsp+0D8h+s2], rax", "jmp     loc_6090"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r11d,0", "xor~r15d,r15d", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 184, 0, 0, 2, 1, 1, 2, 9, 0.0001858045336306206, ["test    ebx, ebx; jumptable 0000000000006070 case 3", "jnz     loc_6BE1"], ["test~ebx,ebx", "jnz~FOO"]], [0, 0, 189, 0, 0, 4, 1, 0, 4, 11, 0.0, ["lea     rax, asc_99B7; \"\\\"\"", "test    r14b, r14b", "cmovz   rax, rsi", "mov     [rsp+0D8h+quote_string], rax"], ["lea~rax,<TAG>", "test~r14b,r14b", "cmovz~rax,rsi", "mov~[rsp+0],rax"]], [2, 0, 190, 0, 1, 11, 1, 2, 3, 11, 0.00020903010033444816, ["lea     rsi, asc_99B9; \"`\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, rax", "mov     [rsp+0D8h+quote_string], rax", "lea     rax, asc_99B9; \"`\"", "cmp     r14d, 7", "setz    r14b", "cmp     rsi, rax", "jnz     short loc_660D"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,rax", "mov~[rsp+0],rax", "lea~rax,<TAG>", "cmp~r14d,0", "setz~r14b", "cmp~rsi,rax", "jnz~FOO"]], [0, 0, 179, 1, 1, 12, 1, 2, 11, 9, 0.10305183946488294, ["mov     rax, [rsp+0D8h+i]", "mov     rdx, [rsp+0D8h+argsize]", "mov     rcx, [rsp+0D8h+p]; p", "mov     rdi, [rsp+0D8h+arg]; pwc", "lea     r12, [rax+m]", "lea     r13, [arg_0+r12]", "sub     rdx, r12; n", "mov     rsi, r13; s", "call    _mbrtowc", "test    rax, rax", "mov     r14, rax", "jz      loc_6A4A"], ["mov~rax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rdi,[rsp+0]", "lea~r12,<TAG>", "lea~r13,<TAG>", "sub~rdx,r12", "mov~rsi,r13", "call~FOO", "test~rax,rax", "mov~r14,rax", "jz~FOO"]], [1, 0, 179, 1, 2, 10, 2, 3, 15, 9, 0.027545522110739504, ["mov     edi, [rsp+0D8h+w]; wc", "call    _iswprint", "mov     rdi, [rsp+0D8h+p]; ps", "test    eax, eax", "mov     eax, 0", "cmovz   ebp, eax", "add     m, bytes", "call    _mbsinit", "test    eax, eax", "jz      loc_697F"], ["mov~edi,[rsp+0]", "call~FOO", "mov~rdi,[rsp+0]", "test~eax,eax", "mov~eax,0", "cmovz~ebp,eax", "add~m,bytes", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 179, 0, 0, 13, 1, 0, 10, 10, 0.10054347826086957, ["lea     rax, [rsp+0D8h+w]", "xor     esi, esi", "mov     [rsp+0D8h+c], bl", "mov     [rsp+0D8h+var_68], r15", "mov     [rsp+0D8h+i], i_0", "mov     c_0, rsi", "mov     [rsp+0D8h+arg], rax", "mov     [rsp+0D8h+var_78], r11", "mov     r15, arg_0", "mov     [rsp+0D8h+var_60], r8", "mov     [rsp+0D8h+var_69], r10b", "mov     [rsp+0D8h+var_80], r13", "mov     [rsp+0D8h+argsize], r12"], ["lea~rax,[rsp+0]", "xor~esi,esi", "mov~[rsp+0],bl", "mov~[rsp+0],r15", "mov~[rsp+0],i_0", "mov~c_0,rsi", "mov~[rsp+0],rax", "mov~[rsp+0],r11", "mov~r15,arg_0", "mov~[rsp+0],r8", "mov~[rsp+0],r10b", "mov~[rsp+0],r13", "mov~[rsp+0],r12"]], [3, 1, 3, 2, 1, 14, 1, 1, 8, 2, 0.011932134894091416, ["sub     rsp, 8", "mov     rcx, argsize_0; argsize", "mov     rdx, arg_0; arg", "push    [rsp+0E0h+quote_string_0]; right_quote", "push    [rsp+0E8h+quote_string]; left_quote", "mov     rsi, r13; buffersize", "push    0; quote_these_too", "mov     r9d, [rsp+0F8h+flags]", "mov     r8d, [rsp+0F8h+quoting_style]; quoting_style", "mov     rdi, [rsp+0F8h+buffer]; buffer", "and     r9d, 0FFFFFFFDh; flags", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r15, len"], ["sub~rsp,0", "mov~rcx,argsize_0", "mov~rdx,arg_0", "push~[rsp+0]", "push~[rsp+0]", "mov~rsi,r13", "push~0", "mov~r9d,[rsp+0]", "mov~r8d,[rsp+0]", "mov~rdi,[rsp+0]", "and~r9d,0", "call~FOO", "add~rsp,<STR>", "mov~r15,len"]], [0, 0, 14, 0, 0, 2, 1, 1, 7, 3, 0.0026380372847764153, ["test    r15, r15", "jz      force_outer_quoting_style"], ["test~r15,r15", "jz~FOO"]], [0, 0, 4, 0, 0, 4, 0, 1, 20, 3, 0.0006967670011148272, ["mov     r13, [rsp+0D8h+var_80]", "mov     r12, arg_0", "mov     printable, [rsp+0D8h+argsize]", "jmp     force_outer_quoting_style"], ["mov~r13,[rsp+0]", "mov~r12,arg_0", "mov~printable,[rsp+0]", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 10, 3, 0.01282438374829679, ["mov     rbp, argsize_0", "mov     argsize_0, arg_0"], ["mov~rbp,argsize_0", "mov~argsize_0,arg_0"]], [2, 0, 179, 1, 0, 4, 0, 0, 13, 8, 0.021483649201040508, ["movzx   eax, byte ptr [arg_0+i_0+1]", "sub     eax, 30h ; '0'", "cmp     al, 9", "jbe     loc_6B10"], ["movzx~eax,[yte ptr [arg_0+0]", "sub~eax,0", "cmp~al,0", "jbe~FOO"]], [0, 0, 179, 0, 0, 4, 0, 0, 12, 8, 0.04545243403939056, ["lea     rax, [i_0+1]", "lea     rdx, [r15+1]", "cmp     rax, argsize_0", "jnb     short loc_6812"], ["lea~rax,[i_0+0]", "lea~rdx,[r15+0]", "cmp~rax,argsize_0", "jnb~FOO"]], [1, 0, 179, 1, 0, 3, 0, 0, 21, 8, 0.03604607952434039, ["add     r15, 4", "mov     r14, i_0", "nop     dword ptr [rax]"], ["add~r15,0", "mov~r14,i_0", "nop~<TAG>"]], [0, 0, 179, 0, 0, 15, 0, 0, 14, 9, 0.02938034188034188, ["mov     rsi, r12", "mov     r12, [rsp+0D8h+argsize]", "mov     rdi, r13", "mov     bytes, m", "mov     rcx, rbx", "mov     r9, arg_0", "mov     bytes, [rsp+0D8h+i]", "mov     r11, [rsp+0D8h+var_78]", "cmp     rsi, r12", "movzx   ebx, [rsp+0D8h+c]", "mov     r8, [rsp+0D8h+var_60]", "movzx   r10d, [rsp+0D8h+var_69]", "mov     r13, [rsp+0D8h+var_80]", "mov     arg_0, [rsp+0D8h+var_68]", "jnb     short loc_6BD7"], ["mov~rsi,r12", "mov~r12,[rsp+0]", "mov~rdi,r13", "mov~bytes,m", "mov~rcx,rbx", "mov~r9,arg_0", "mov~bytes,[rsp+0]", "mov~r11,[rsp+0]", "cmp~rsi,r12", "movzx~ebx,[rsp+0]", "mov~r8,[rsp+0]", "movzx~r10d,[rsp+0]", "mov~r13,[rsp+0]", "mov~arg_0,[rsp+0]", "jnb~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 13, 10, 0.06823671497584541, ["cmp     bytes, 0FFFFFFFFFFFFFFFEh", "jz      loc_6B72"], ["cmp~bytes,0", "jz~FOO"]], [2, 0, 179, 1, 0, 5, 1, 1, 19, 4, 0.004970271274619101, ["mov     edx, 1", "mov     rdi, 20000002Bh", "shl     rdx, cl", "test    rdx, rdi", "jnz     loc_6AFE"], ["mov~edx,0", "mov~rdi,0", "shl~rdx,cl", "test~rdx,rdi", "jnz~FOO"]], [1, 0, 179, 0, 0, 4, 0, 1, 18, 5, 0.017465626161278336, ["movzx   esi, byte ptr [rax]", "lea     ecx, [rsi-5Bh]", "cmp     cl, 21h ; '!'", "ja      short loc_6A16"], ["movzx~esi,<TAG>", "lea~ecx,[rsi-5Bh]+0]", "cmp~cl,0", "ja~FOO"]], [0, 0, 182, 0, 0, 2, 1, 1, 3, 9, 0.00013935340022296544, ["test    buffersize, buffersize", "jz      short loc_6761"], ["test~buffersize,buffersize", "jz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 9, 7, 0.19900826830174664, ["cmp     [rsp+0D8h+backslash_escapes], 0; jumptable 000000000000614E cases 37,43-58,65-90,93,95,97-122", "jz      loc_6353"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 179, 1, 0, 5, 0, 1, 8, 6, 0.30703037904124864, ["lea     rcx, off_9A24", "movzx   edx, bl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [1, 0, 179, 0, 0, 4, 0, 0, 12, 8, 0.056554254923820144, ["lea     rax, [i_0+2]", "mov     ebx, 3Fh ; '?'", "cmp     rax, argsize_0", "jnb     loc_6210; jumptable 000000000000614E cases 37,43-58,65-90,93,95,97-122"], ["lea~rax,[i_0+0]", "mov~ebx,0", "cmp~rax,argsize_0", "jnb~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 13, 7, 0.05067044469218382, ["cmp     byte ptr [arg_0+i_0+1], 3Fh ; '?'", "jnz     loc_6210; jumptable 000000000000614E cases 37,43-58,65-90,93,95,97-122"], ["cmp~[yte ptr [arg_0+0],0", "jnz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 9, 6, 0.02105978260869565, ["cmp     [rsp+0D8h+quoting_style], 2; jumptable 000000000000614E cases 32-34,36,38,40-42,59-62,91,94,96,124", "jnz     short loc_6210; jumptable 000000000000614E cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 5, 0.004947045707915273, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "jz      short loc_6210; jumptable 000000000000614E cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 179, 0, 0, 2, 1, 1, 9, 8, 0.008494751021924936, ["test    i_0, i_0; jumptable 000000000000614E cases 35,126", "jnz     loc_6210; jumptable 000000000000614E cases 37,43-58,65-90,93,95,97-122"], ["test~i_0,i_0", "jnz~FOO"]], [0, 0, 179, 0, 0, 2, 1, 1, 10, 8, 0.02078688219992568, ["test    al, al", "jnz     loc_6210; jumptable 000000000000614E cases 37,43-58,65-90,93,95,97-122"], ["test~al,al", "jnz~FOO"]], [0, 0, 179, 0, 0, 2, 1, 1, 11, 8, 0.004621887774061687, ["test    i_0, i_0", "jnz     loc_6210; jumptable 000000000000614E cases 37,43-58,65-90,93,95,97-122"], ["test~i_0,i_0", "jnz~FOO"]], [2, 0, 179, 0, 0, 3, 0, 1, 9, 5, 0.038238960113960115, ["cmp     [rsp+0D8h+quoting_style], 2; jumptable 000000000000614E case 39", "mov     ebx, 27h ; '''", "jnz     loc_6210; jumptable 000000000000614E cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "mov~ebx,0", "jnz~FOO"]], [2, 0, 179, 1, 0, 3, 0, 1, 14, 8, 0.028172612411742848, ["add     r15, 3", "mov     ebx, 27h ; '''", "jmp     loc_6210; jumptable 000000000000614E cases 37,43-58,65-90,93,95,97-122"], ["add~r15,0", "mov~ebx,0", "jmp~FOO"]], [0, 0, 179, 0, 0, 2, 1, 1, 10, 8, 0.08544685990338165, ["test    bpl, bpl", "jz      loc_6210; jumptable 000000000000614E cases 37,43-58,65-90,93,95,97-122"], ["test~bpl,bpl", "jz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 11, 8, 0.02431716833890747, ["mov     ebx, 3Fh ; '?'", "jmp     loc_6210; jumptable 000000000000614E cases 37,43-58,65-90,93,95,97-122"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 179, 0, 0, 3, 0, 1, 13, 7, 0.023388145670754368, ["mov     r15, len", "mov     ebx, 30h ; '0'", "jmp     loc_621B"], ["mov~r15,len", "mov~ebx,0", "jmp~FOO"]], [1, 0, 179, 1, 0, 4, 0, 1, 16, 10, 0.008663136380527686, ["add     m, 1", "lea     rdx, [r14+m]", "cmp     r12, rdx", "ja      short loc_6BC0"], ["add~m,0", "lea~rdx,<TAG>", "cmp~r12,rdx", "ja~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 15, 10, 0.017279821627647716, ["cmp     byte ptr [rdi], 0", "jnz     short loc_6BC7"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 17, 10, 0.0, ["cmp     byte ptr [r8+m], 0", "jz      short loc_6BD4"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 179, 1, 0, 3, 0, 1, 19, 6, 0.011914715719063546, ["add     rax, 1", "cmp     r8, rax", "jnz     short loc_69F0"], ["add~rax,0", "cmp~r8,rax", "jnz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 6, 0.06507029604855692, ["cmp     [rsp+0D8h+var_C8], 0", "jz      short loc_6245"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 7, 0.24106202774681035, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "jnz     loc_621B"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 179, 1, 0, 3, 0, 1, 16, 7, 0.016304347826086956, ["add     r15, 3", "mov     ebx, 30h ; '0'", "jmp     loc_621B"], ["add~r15,0", "mov~ebx,0", "jmp~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 9, 1, 0.009522482348569306, ["mov     rsi, [rsp+0D8h+var_40]", "xor     rsi, fs:28h", "mov     rax, r15", "jnz     loc_6C2E"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~rax,r15", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 8, 2, 0.006764446302489781, ["cmp     r15, r13", "jnb     loc_640E"], ["cmp~r15,r13", "jnb~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 9, 2, 0.0, ["mov     rax, [rsp+0D8h+buffer]", "mov     byte ptr [rax+r15], 0", "jmp     loc_640E"], ["mov~rax,<TAG>", "mov~<TAG>,0", "jmp~FOO"]], [3, 0, 180, 0, 0, 7, 1, 1, 3, 8, 0.004180602006688963, ["lea     rax, aFullblock+0Ah; \"'\"", "mov     [rsp+0D8h+elide_outer_quotes], 1", "mov     [rsp+0D8h+backslash_escapes], 0", "mov     r11d, 1", "xor     r15d, r15d", "mov     [rsp+0D8h+s2], rax", "jmp     loc_6090"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r11d,0", "xor~r15d,r15d", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 184, 0, 0, 2, 1, 1, 2, 9, 0.0001858045336306206, ["test    ebx, ebx; jumptable 0000000000006070 case 2", "jnz     loc_6C05"], ["test~ebx,ebx", "jnz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 5, 0.0008825715347454479, ["mov     ebx, 62h ; 'b'; jumptable 00000000000067AE case 8", "jmp     store_escape"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 179, 1, 0, 5, 0, 1, 9, 6, 0.08357720178372352, ["lea     rcx, off_9C20", "movzx   edx, bl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort; jumptable 0000000000006070 default case"], ["call~FOO"]], [3, 0, 208, 1, 1, 29, 2, 2, 0, 10, 0.0, ["push    r15", "push    r14", "mov     r14d, r8d", "push    r13", "push    r12", "mov     r13, buffersize", "push    rbp", "push    rbx", "mov     ebx, r9d", "mov     r12, arg_0", "mov     rbp, argsize_0", "and     ebx, 2", "sub     rsp, 0A8h", "mov     rax, [rsp+0D8h+quote_these_too]", "mov     [rsp+0D8h+buffer], buffer_0", "mov     [rsp+0D8h+quoting_style], r8d", "mov     [rsp+0D8h+flags], r9d", "mov     [rsp+0D8h+var_C8], rax", "mov     rax, [rsp+0D8h+left_quote]", "mov     [rsp+0D8h+quote_string], rax", "mov     rax, [rsp+0D8h+right_quote]", "mov     [rsp+0D8h+quote_string_0], rax", "mov     rax, fs:28h", "mov     [rsp+0D8h+var_40], rax", "xor     eax, eax", "call    ___ctype_get_mb_cur_max", "cmp     r14d, 8; switch 9 cases", "mov     [rsp+0D8h+var_90], rax", "ja      loc_6C29; jumptable 0000000000006070 default case"], ["push~r15", "push~r14", "mov~r14d,r8d", "push~r13", "push~r12", "mov~r13,buffersize", "push~rbp", "push~rbx", "mov~ebx,r9d", "mov~r12,arg_0", "mov~rbp,argsize_0", "and~ebx,0", "sub~rsp,0", "mov~rax,[rsp+0]", "mov~<TAG>,buffer_0", "mov~[rsp+0],r8d", "mov~[rsp+0],r9d", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "cmp~r14d,0", "mov~[rsp+0],rax", "ja~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 10, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 188, 0, 1, 9, 1, 2, 4, 10, 0.00880248978075065, ["lea     rsi, aFullblock+0Ah; msgid", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdi, rax", "mov     [rsp+0D8h+quote_string_0], rax", "lea     rax, aFullblock+0Ah; \"'\"", "cmp     rdi, rax", "jnz     short loc_6647"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdi,rax", "mov~[rsp+0],rax", "lea~rax,<TAG>", "cmp~rdi,rax", "jnz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 5, 0.0008825715347454479, ["mov     ebx, 61h ; 'a'; jumptable 00000000000067AE case 7", "jmp     store_escape"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 10, 0, 0, 3, 1, 1, 9, 3, 0.022412671869193608, ["movzx   ecx, byte ptr [rax]", "test    cl, cl", "jz      short loc_6AE7"], ["movzx~ecx,<TAG>", "test~cl,cl", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 8, 3, 0.026755852842809364, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "jnz     short loc_6AE7"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 10, -1, 0.0, ["add     rsp, 0A8h", "pop     rbx", "pop     argsize_0", "pop     arg_0", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~argsize_0", "pop~arg_0", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 179, 0, 0, 1, 0, 0, 17, 9, 0.008175399479747306, ["mov     rcx, m"], ["mov~rcx,m"]], [3, 0, 179, 1, 0, 10, 2, 1, 11, 5, 0.005332203022420415, ["mov     eax, ebx", "mov     rsi, [rsp+0D8h+var_C8]", "mov     ecx, ebx", "shr     al, 5", "and     ecx, 1Fh", "mov     edx, 1", "movzx   eax, al", "shl     edx, cl", "test    [rsi+rax*4], edx", "jnz     store_escape"], ["mov~eax,ebx", "mov~rsi,[rsp+0]", "mov~ecx,ebx", "shr~al,0", "and~ecx,0", "mov~edx,0", "movzx~eax,al", "shl~edx,cl", "test~<TAG>,edx", "jnz~FOO"]], [1, 0, 179, 0, 0, 3, 1, 1, 10, 6, 0.006212839093273876, ["xor     r10d, r10d; jumptable 00000000000067AE cases 37,43-58,65-90,93,95,97-122", "cmp     [rsp+0D8h+var_C8], 0", "jnz     loc_6223"], ["xor~r10d,r10d", "cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 187, 0, 0, 4, 1, 0, 5, 10, 0.0, ["lea     rax, asc_99B7; \"\\\"\"", "test    r14b, r14b", "cmovz   rax, rdi", "mov     [rsp+0D8h+quote_string_0], rax"], ["lea~rax,<TAG>", "test~r14b,r14b", "cmovz~rax,rdi", "mov~[rsp+0],rax"]], [1, 0, 179, 0, 0, 2, 0, 1, 14, 9, 0.03425771088814567, ["cmp     [rsp+0D8h+quoting_style], 2", "jnz     short loc_6A1F"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 15, 8, 0.025803604607952436, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "jz      short loc_6A1F"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 16, 7, 0.021669453734671128, ["cmp     bytes, 1", "jz      short loc_6A1F"], ["cmp~bytes,0", "jz~FOO"]], [0, 0, 179, 0, 0, 2, 1, 1, 11, 5, 0.06040002167719558, ["test    r10b, r10b", "jnz     store_escape"], ["test~r10b,r10b", "jnz~FOO"]], [2, 0, 179, 0, 0, 3, 0, 1, 9, 7, 0.0023322339898426813, ["mov     ebx, 7; jumptable 000000000000614E case 7", "mov     eax, 61h ; 'a'", "jmp     c_escape"], ["mov~ebx,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 186, 0, 0, 3, 2, 1, 3, 9, 0.021878483835005576, ["xor     r15d, r15d", "test    ebx, ebx", "jnz     short loc_6676"], ["xor~r15d,r15d", "test~ebx,ebx", "jnz~FOO"]], [1, 0, 191, 0, 0, 3, 0, 1, 2, 10, 0.0005109624674842066, ["mov     r14d, [rsp+0D8h+quoting_style]; jumptable 0000000000006070 cases 6-8", "cmp     r14d, 8", "jz      short loc_6647"], ["mov~r14d,[rsp+0]", "cmp~r14d,0", "jz~FOO"]], [2, 0, 179, 0, 0, 4, 1, 1, 10, 6, 0.00011419236962715224, ["mov     ebx, 0Ah; jumptable 00000000000067AE case 10", "xor     r10d, r10d", "mov     eax, 6Eh ; 'n'", "jmp     c_and_shell_escape"], ["mov~ebx,0", "xor~r10d,r10d", "mov~eax,0", "jmp~FOO"]], [2, 0, 179, 0, 0, 5, 0, 1, 9, 11, 0.10100798959494613, ["lea     rax, [rsp+0D8h+mbstate]", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "mov     qword ptr [rsp+0D8h+mbstate.__count], 0", "mov     [rsp+0D8h+p], rax", "jnz     short loc_6943"], ["lea~rax,[rsp+0]", "cmp~argsize_0,0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],rax", "jnz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 8, 10, 0.17934782608695654, ["cmp     [rsp+0D8h+var_90], 1; jumptable 000000000000614E default case", "jnz     loc_68F0"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 179, 1, 0, 2, 0, 0, 12, 9, 0.06377740616871051, ["add     i_0, 1", "nop     word ptr [rax+rax+00h]"], ["add~i_0,0", "nop~[ord ptr [rax+0]"]], [0, 0, 179, 0, 0, 1, 0, 1, 11, 10, 0.004714790040876998, ["jmp     loc_624E"], ["jmp~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 9, 5, 0.06023937817416079, ["cmp     [rsp+0D8h+backslash_escapes], 0; jumptable 000000000000614E case 0", "jnz     loc_67DB"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 185, 0, 0, 4, 1, 1, 4, 9, 0.0007432181345224824, ["mov     rdx, [rsp+0D8h+quote_string]", "movzx   eax, byte ptr [rdx]", "test    al, al", "jz      short loc_6676"], ["mov~rdx,[rsp+0]", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 179, 0, 0, 2, 0, 0, 12, 8, 0.5005806391675957, ["cmp     r15, r13", "jnb     short loc_6265"], ["cmp~r15,r13", "jnb~FOO"]], [1, 0, 179, 1, 0, 3, 1, 1, 11, 9, 0.23864269788182832, ["add     i_0, 1", "test    r10b, r10b", "jz      store_c"], ["add~i_0,0", "test~r10b,r10b", "jz~FOO"]], [1, 0, 179, 1, 0, 2, 0, 1, 13, 9, 0.039576365663322184, ["add     r15, 1", "jmp     store_c"], ["add~r15,0", "jmp~FOO"]], [1, 0, 179, 1, 0, 3, 0, 0, 15, 8, 0.1527777777777778, ["add     i_0, 1", "cmp     r14, ilim", "jnb     store_c"], ["add~i_0,0", "cmp~r14,ilim", "jnb~FOO"]], [2, 0, 179, 1, 0, 3, 0, 1, 11, 9, 0.017930137495354888, ["add     i_0, 1", "mov     ebx, 5Ch ; '\\'", "jmp     store_c"], ["add~i_0,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 179, 0, 0, 3, 0, 1, 9, 7, 0.0023322339898426813, ["mov     ebx, 0Ch; jumptable 000000000000614E case 12", "mov     eax, 66h ; 'f'", "jmp     c_escape"], ["mov~ebx,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 184, 0, 0, 2, 0, 0, 5, 11, 0.0006270903010033445, ["mov     rcx, [rsp+0D8h+buffer]", "xchg    ax, ax"], ["mov~rcx,<TAG>", "xchg~ax,ax"]], [2, 0, 179, 0, 0, 4, 1, 1, 10, 6, 0.00011419236962715224, ["mov     ebx, 0Dh; jumptable 00000000000067AE case 13", "xor     r10d, r10d", "mov     eax, 72h ; 'r'", "jmp     c_and_shell_escape"], ["mov~ebx,0", "xor~r10d,r10d", "mov~eax,0", "jmp~FOO"]], [0, 0, 179, 0, 0, 2, 0, 0, 13, 8, 0.0, ["mov     rax, [rsp+0D8h+buffer]", "mov     [rax+r15], bl"], ["mov~rax,<TAG>", "mov~<TAG>,bl"]], [1, 0, 179, 0, 0, 3, 2, 1, 10, 8, 0.01388888888888889, ["xor     ebx, ebx", "test    byte ptr [rsp+0D8h+flags], 1", "jz      loc_6353"], ["xor~ebx,ebx", "test~[yte ptr [rsp+0],0", "jz~FOO"]], [0, 0, 184, 0, 0, 2, 0, 0, 6, 10, 0.00469156447417317, ["cmp     buffersize, r15", "jbe     short loc_6669"], ["cmp~buffersize,r15", "jbe~FOO"]], [1, 0, 184, 1, 0, 4, 1, 1, 7, 9, 0.0126347082868822, ["add     r15, 1", "movzx   eax, byte ptr [rdx+len]", "test    al, al", "jnz     short loc_6660"], ["add~r15,0", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 7, 10, 0.0, ["mov     [rcx+r15], al"], ["mov~<TAG>,al"]], [1, 0, 179, 1, 0, 2, 0, 1, 13, 7, 0.5001161278335191, ["add     r15, 1", "jmp     loc_60A0"], ["add~r15,0", "jmp~FOO"]], [1, 0, 179, 1, 0, 2, 0, 1, 11, 7, 0.012932769726247989, ["add     i_0, 1", "jmp     loc_60A0"], ["add~i_0,0", "jmp~FOO"]], [0, 0, 206, 1, 0, 5, 0, 1, 1, 9, 0.00478446674098848, ["lea     rcx, off_9A00", "mov     edx, r14d", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "mov~edx,r14d", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [3, 0, 180, 0, 0, 6, 2, 1, 2, 8, 0.0020903010033444815, ["mov     [rsp+0D8h+elide_outer_quotes], 0; jumptable 0000000000006070 case 0", "mov     [rsp+0D8h+backslash_escapes], 0", "xor     r11d, r11d", "mov     [rsp+0D8h+s2], 0", "xor     r15d, r15d", "jmp     loc_6090"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "xor~r15d,r15d", "jmp~FOO"]], [0, 0, 179, 0, 0, 2, 1, 0, 10, 7, 0.000272900408769974, ["xor     r10d, r10d; jumptable 00000000000067AE cases 32-34,36,38,40-42,59-62,91,94,96,124", "nop     dword ptr [rax+rax+00h]"], ["xor~r10d,r10d", "nop~[word ptr [rax+0]"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 5, 0.0008825715347454479, ["mov     ebx, 76h ; 'v'; jumptable 00000000000067AE case 11", "jmp     store_escape"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 179, 0, 0, 11, 2, 0, 12, 8, 0.050887216648086216, ["mov     rcx, m", "xor     ebp, 1", "movzx   ebx, [rsp+0D8h+c]", "movzx   r10d, [rsp+0D8h+var_69]", "and     bpl, [rsp+0D8h+backslash_escapes]", "mov     r9, arg_0", "mov     bytes, [rsp+0D8h+i]", "mov     r11, [rsp+0D8h+var_78]", "mov     r13, [rsp+0D8h+var_80]", "mov     arg_0, [rsp+0D8h+var_68]", "mov     r12, [rsp+0D8h+argsize]"], ["mov~rcx,m", "xor~ebp,0", "movzx~ebx,[rsp+0]", "movzx~r10d,[rsp+0]", "and~bpl,[rsp+0]", "mov~r9,arg_0", "mov~bytes,[rsp+0]", "mov~r11,[rsp+0]", "mov~r13,[rsp+0]", "mov~arg_0,[rsp+0]", "mov~r12,[rsp+0]"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 5, 0.0008825715347454479, ["mov     ebx, 66h ; 'f'; jumptable 00000000000067AE case 12", "jmp     store_escape"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 179, 0, 0, 1, 0, 1, 10, 7, 0.0002167719559023907, ["jmp     short loc_6278; jumptable 000000000000614E cases 32-34,36,38,40-42,59-62,91,94,96,124"], ["jmp~FOO"]], [0, 0, 179, 0, 0, 1, 0, 1, 12, 7, 0.0003870927783971263, ["jmp     short loc_6278; jumptable 000000000000614E cases 32-34,36,38,40-42,59-62,91,94,96,124"], ["jmp~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 13, 7, 0.09057971014492754, ["cmp     m, 1", "ja      loc_6521"], ["cmp~m,0", "ja~FOO"]], [0, 0, 179, 0, 0, 11, 0, 1, 13, 8, 0.0036696395392047565, ["mov     rcx, m", "mov     r9, arg_0", "mov     r14, [rsp+0D8h+i]", "mov     r11, [rsp+0D8h+var_78]", "movzx   ebx, [rsp+0D8h+c]", "movzx   r10d, [rsp+0D8h+var_69]", "mov     r13, [rsp+0D8h+var_80]", "mov     arg_0, [rsp+0D8h+var_68]", "mov     r12, [rsp+0D8h+argsize]", "movzx   ebp, [rsp+0D8h+backslash_escapes]", "jmp     loc_6A7C"], ["mov~rcx,m", "mov~r9,arg_0", "mov~r14,[rsp+0]", "mov~r11,[rsp+0]", "movzx~ebx,[rsp+0]", "movzx~r10d,[rsp+0]", "mov~r13,[rsp+0]", "mov~arg_0,[rsp+0]", "mov~r12,[rsp+0]", "movzx~ebp,[rsp+0]", "jmp~FOO"]], [0, 0, 179, 0, 0, 2, 0, 1, 15, 8, 0.027986807878112228, ["movzx   ebp, [rsp+0D8h+backslash_escapes]", "jmp     loc_6A7C"], ["movzx~ebp,[rsp+0]", "jmp~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 12, 9, 0.07650501672240803, ["cmp     bytes, 0FFFFFFFFFFFFFFFFh", "jz      loc_6B3E"], ["cmp~bytes,0", "jz~FOO"]], [2, 0, 179, 0, 0, 3, 0, 1, 9, 6, 0.0027019075932119474, ["mov     ebx, 0Dh; jumptable 000000000000614E case 13", "mov     eax, 72h ; 'r'", "jmp     c_and_shell_escape"], ["mov~ebx,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 179, 0, 0, 1, 0, 1, 14, 9, 0.007803790412486065, ["jmp     loc_6513"], ["jmp~FOO"]], [3, 0, 179, 0, 1, 14, 2, 1, 9, 9, 0.07374117428465254, ["mov     [rsp+0D8h+i], arg_0", "mov     [rsp+0D8h+argsize], r11", "mov     byte ptr [rsp+0D8h+p], r10b", "call    ___ctype_b_loc", "mov     rcx, [rax]", "movzx   edx, bl", "movzx   r10d, byte ptr [rsp+0D8h+p]", "mov     r11, [rsp+0D8h+argsize]", "mov     r9, [rsp+0D8h+i]", "movzx   ebp, word ptr [rcx+rdx*2]", "mov     ecx, 1", "shr     bp, 0Eh", "xor     ebp, 1", "and     bpl, [rsp+0D8h+backslash_escapes]"], ["mov~[rsp+0],arg_0", "mov~[rsp+0],r11", "mov~[yte ptr [rsp+0],r10b", "call~FOO", "mov~rcx,<TAG>", "movzx~edx,bl", "movzx~r10d,[yte ptr [rsp+0]", "mov~r11,[rsp+0]", "mov~r9,[rsp+0]", "movzx~ebp,<TAG>", "mov~ecx,0", "shr~bp,0", "xor~ebp,0", "and~bpl,[rsp+0]"]], [0, 0, 5, 0, 0, 1, 0, 1, 11, 4, 0.0006967670011148272, ["jmp     loc_63CF"], ["jmp~FOO"]], [3, 0, 180, 0, 0, 6, 2, 0, 2, 8, 0.0020903010033444815, ["mov     [rsp+0D8h+elide_outer_quotes], 0; jumptable 0000000000006070 case 5", "mov     [rsp+0D8h+backslash_escapes], 1", "xor     r11d, r11d", "mov     [rsp+0D8h+s2], 0", "xor     r15d, r15d", "nop     dword ptr [rax+rax+00h]"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "xor~r15d,r15d", "nop~[word ptr [rax+0]"]], [0, 0, 179, 0, 0, 1, 1, 0, 10, 9, 0.00020322370865849128, ["xor     r10d, r10d; jumptable 00000000000067AE cases 35,126"], ["xor~r10d,r10d"]], [0, 0, 12, 0, 0, 3, 1, 1, 7, 3, 0.04150989409141583, ["mov     rax, [rsp+0D8h+s2]", "test    rax, rax", "jz      short loc_6AE7"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 15, 0, 0, 6, 1, 1, 6, 4, 0.05241623312275487, ["cmp     [rsp+0D8h+quoting_style], 2", "mov     rbp, argsize_0", "mov     argsize_0, arg_0", "setz    al", "test    [rsp+0D8h+elide_outer_quotes], al", "jz      short loc_6AAD"], ["cmp~[rsp+0],0", "mov~rbp,argsize_0", "mov~argsize_0,arg_0", "setz~al", "test~[rsp+0],al", "jz~FOO"]], [0, 0, 179, 0, 0, 2, 1, 0, 9, 11, 0.0033444816053511705, ["xor     r10d, r10d; jumptable 00000000000067AE default case", "nop     dword ptr [rax+rax+00h]"], ["xor~r10d,r10d", "nop~[word ptr [rax+0]"]], [1, 0, 179, 0, 0, 3, 0, 1, 8, 7, 0.09038229282794501, ["movzx   ebx, byte ptr [r8]", "cmp     bl, 7Eh ; '~'; switch 127 cases", "ja      loc_64C0; jumptable 00000000000067AE default case"], ["movzx~ebx,<TAG>", "cmp~bl,0", "ja~FOO"]], [1, 0, 179, 0, 0, 2, 1, 1, 11, 9, 0.05869100706057228, ["test    byte ptr [rsp+0D8h+flags], 4", "jz      loc_68CB"], ["test~[yte ptr [rsp+0],0", "jz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 9, 0.06839929394277221, ["cmp     eax, 3", "jnz     loc_68CB"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 180, 0, 1, 9, 1, 2, 4, 8, 0.0459866220735786, ["test    ebx, ebx", "mov     rbx, [rsp+0D8h+quote_string_0]", "setnz   [rsp+0D8h+elide_outer_quotes]", "mov     rdi, rbx; s", "call    _strlen", "mov     [rsp+0D8h+s2], rbx", "mov     r11, rax", "mov     [rsp+0D8h+backslash_escapes], 1", "jmp     loc_6090"], ["test~ebx,ebx", "mov~rbx,[rsp+0]", "setnz~[rsp+0]", "mov~rdi,rbx", "call~FOO", "mov~[rsp+0],rbx", "mov~r11,rax", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 179, 0, 0, 4, 1, 0, 3, 7, 0.1164065403195838, ["mov     r9, arg_0", "xor     r14d, r14d", "mov     arg_0, argsize_0", "nop     dword ptr [rax+00000000h]"], ["mov~r9,arg_0", "xor~r14d,r14d", "mov~arg_0,argsize_0", "nop~[word ptr [rax+0]"]], [4, 0, 180, 0, 0, 8, 1, 1, 2, 8, 0.0020903010033444815, ["lea     rax, aFullblock+0Ah; jumptable 0000000000006070 case 1", "mov     [rsp+0D8h+elide_outer_quotes], 1", "mov     [rsp+0D8h+backslash_escapes], 0", "mov     r11d, 1", "xor     r15d, r15d", "mov     [rsp+0D8h+quoting_style], 2", "mov     [rsp+0D8h+s2], rax", "jmp     loc_6090"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r11d,0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [4, 0, 180, 0, 0, 8, 1, 1, 2, 8, 0.0020903010033444815, ["lea     rax, asc_99B7; jumptable 0000000000006070 case 4", "mov     [rsp+0D8h+elide_outer_quotes], 1", "mov     [rsp+0D8h+backslash_escapes], 1", "mov     r11d, 1", "xor     r15d, r15d", "mov     [rsp+0D8h+quoting_style], 3", "mov     [rsp+0D8h+s2], rax", "jmp     loc_6090"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r11d,0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [4, 0, 180, 0, 0, 7, 0, 1, 4, 8, 0.008361204013377926, ["lea     rax, aFullblock+0Ah; \"'\"", "mov     [rsp+0D8h+elide_outer_quotes], 0", "mov     [rsp+0D8h+backslash_escapes], 0", "mov     r11d, 1", "mov     r15d, 1", "mov     [rsp+0D8h+s2], rax", "jmp     loc_6090"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r11d,0", "mov~r15d,0", "mov~[rsp+0],rax", "jmp~FOO"]], [4, 0, 180, 0, 0, 7, 0, 1, 4, 8, 0.008361204013377926, ["lea     rax, asc_99B7; \"\\\"\"", "mov     [rsp+0D8h+elide_outer_quotes], 0", "mov     [rsp+0D8h+backslash_escapes], 1", "mov     r11d, 1", "mov     r15d, 1", "mov     [rsp+0D8h+s2], rax", "jmp     loc_6090"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r11d,0", "mov~r15d,0", "mov~[rsp+0],rax", "jmp~FOO"]], [2, 0, 179, 0, 0, 3, 0, 1, 9, 7, 0.0023322339898426813, ["mov     ebx, 0Bh; jumptable 000000000000614E case 11", "mov     eax, 76h ; 'v'", "jmp     c_escape"], ["mov~ebx,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 179, 0, 0, 1, 1, 0, 10, 10, 0.0003483835005574136, ["xor     r10d, r10d; jumptable 00000000000067AE cases 123,125"], ["xor~r10d,r10d"]], [0, 0, 179, 0, 0, 2, 1, 1, 5, 5, 0.6370501981915027, ["test    bpl, bpl", "jz      loc_6A90"], ["test~bpl,bpl", "jz~FOO"]], [0, 0, 179, 0, 0, 1, 0, 0, 11, 7, 0.06162517032082251, ["movzx   ebp, [rsp+0D8h+backslash_escapes]"], ["movzx~ebp,[rsp+0]"]], [2, 0, 179, 0, 0, 3, 0, 1, 9, 6, 0.0027019075932119474, ["mov     ebx, 0Ah; jumptable 000000000000614E case 10", "mov     eax, 6Eh ; 'n'", "jmp     c_and_shell_escape"], ["mov~ebx,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 179, 0, 0, 4, 0, 1, 4, 6, 0.6375147095255792, ["cmp     argsize_0, i_0", "setnz   bpl", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_60B6"], ["cmp~argsize_0,i_0", "setnz~bpl", "cmp~argsize_0,0", "jnz~FOO"]], [2, 0, 179, 0, 0, 4, 0, 1, 9, 9, 0.02125139353400223, ["cmp     argsize_0, 1; jumptable 000000000000614E cases 123,125", "setnz   al", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_62B8"], ["cmp~argsize_0,0", "setnz~al", "cmp~argsize_0,0", "jnz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 0, 5, 6, 0.0, ["cmp     byte ptr [arg_0+i_0], 0", "setnz   bpl"], ["cmp~<TAG>,0", "setnz~bpl"]], [1, 0, 179, 0, 0, 2, 0, 0, 10, 9, 0.0, ["cmp     byte ptr [arg_0+1], 0", "setnz   al"], ["cmp~[yte ptr [arg_0+0],0", "setnz~al"]], [0, 0, 179, 0, 0, 2, 1, 1, 9, 8, 0.004343180973615756, ["xor     r10d, r10d", "jmp     loc_6130"], ["xor~r10d,r10d", "jmp~FOO"]], [0, 0, 179, 0, 1, 12, 1, 2, 8, 5, 0.0146553325901152, ["mov     rsi, [rsp+0D8h+s2]; s2", "mov     rdx, r11; n", "mov     rdi, r8; s1", "mov     [rsp+0D8h+arg], arg_0", "mov     [rsp+0D8h+i], r11", "mov     [rsp+0D8h+argsize], r8", "call    _memcmp", "test    eax, eax", "mov     r8, [rsp+0D8h+argsize]", "mov     r11, [rsp+0D8h+i]", "mov     r9, [rsp+0D8h+arg]", "jnz     loc_68B8"], ["mov~rsi,[rsp+0]", "mov~rdx,r11", "mov~rdi,r8", "mov~[rsp+0],arg_0", "mov~[rsp+0],r11", "mov~[rsp+0],r8", "call~FOO", "test~eax,eax", "mov~r8,[rsp+0]", "mov~r11,[rsp+0]", "mov~r9,[rsp+0]", "jnz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 4, 0.006077356620834881, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "jnz     loc_63CF"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 179, 0, 0, 3, 0, 1, 9, 5, 0.07907531277096494, ["mov     eax, [rsp+0D8h+quoting_style]; jumptable 000000000000614E case 63", "cmp     eax, 2", "jz      loc_68C0"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 179, 0, 0, 3, 0, 1, 7, 7, 0.4823834076551468, ["movzx   ebx, byte ptr [r8]", "cmp     bl, 7Eh ; '~'; switch 127 cases", "ja      loc_64C8; jumptable 000000000000614E default case"], ["movzx~ebx,<TAG>", "cmp~bl,0", "ja~FOO"]], [0, 0, 9, 1, 0, 4, 0, 0, 10, 6, 0.018023039762170196, ["mov     rsi, [rsp+0D8h+buffer]", "mov     rdx, r15", "sub     rax, r15", "nop"], ["mov~rsi,<TAG>", "mov~rdx,r15", "sub~rax,r15", "nop"]], [0, 0, 179, 0, 0, 6, 2, 1, 6, 7, 0.580012077294686, ["test    r11, r11", "lea     r8, [arg_0+i_0]", "setnz   al", "and     al, [rsp+0D8h+backslash_escapes]", "mov     r10d, eax", "jz      short loc_6130"], ["test~r11,r11", "lea~r8,<TAG>", "setnz~al", "and~al,[rsp+0]", "mov~r10d,eax", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 0, 11, 5, 0.013726309921962096, ["cmp     r13, len", "jbe     short loc_6AD8"], ["cmp~r13,len", "jbe~FOO"]], [1, 0, 9, 1, 0, 4, 1, 1, 12, 4, 0.004947045707915273, ["add     len, 1", "movzx   ecx, byte ptr [rax+len]", "test    cl, cl", "jnz     short loc_6AD0"], ["add~len,0", "movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 12, 5, 0.0, ["mov     [rsi+len], cl"], ["mov~<TAG>,cl"]], [0, 0, 179, 0, 0, 3, 0, 0, 15, 8, 0.016768859160163508, ["lea     rax, [r15+2]", "cmp     r13, len", "jbe     short loc_6B30"], ["lea~rax,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [0, 0, 179, 0, 0, 2, 0, 0, 14, 9, 0.01723337049424006, ["cmp     r13, len", "jbe     short loc_6B1D"], ["cmp~r13,len", "jbe~FOO"]], [1, 0, 179, 0, 0, 2, 0, 0, 15, 9, 0.0, ["mov     rax, [rsp+0D8h+buffer]", "mov     byte ptr [rax+len], 30h ; '0'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [0, 0, 179, 0, 0, 1, 1, 0, 10, 6, 0.0006909606094388704, ["xor     r10d, r10d; jumptable 00000000000067AE case 39"], ["xor~r10d,r10d"]], [2, 0, 179, 0, 0, 3, 0, 1, 10, 6, 0.0011612783351913787, ["mov     ebx, 5Ch ; '\\'", "mov     eax, 5Ch ; '\\'", "jmp     c_and_shell_escape"], ["mov~ebx,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 9, 6, 0.01302954292084727, ["cmp     [rsp+0D8h+backslash_escapes], 0; jumptable 000000000000614E case 92", "jz      loc_68D8"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 5, 0.008198625046451134, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "jz      loc_68D8"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 179, 0, 0, 3, 1, 1, 10, 7, 0.007339279078409513, ["movzx   r10d, [rsp+0D8h+backslash_escapes]; jumptable 00000000000067AE case 92", "and     r10b, [rsp+0D8h+elide_outer_quotes]", "jz      short loc_68D8"], ["movzx~r10d,[rsp+0]", "and~r10b,[rsp+0]", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 13, 3, 0.0004645113340765515, ["mov     r15, len"], ["mov~r15,len"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 4, 0.03030162269292704, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "jnz     loc_63CF"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 179, 0, 0, 2, 0, 0, 11, 11, 0.0295661464139725, ["cmp     r15, r13", "jnb     short loc_62FC"], ["cmp~r15,r13", "jnb~FOO"]], [0, 0, 179, 0, 0, 4, 0, 1, 7, 6, 0.10963628762541806, ["mov     byte ptr [rsp+0D8h+p], al", "lea     rax, [i_0+r11]", "cmp     rax, argsize_0", "ja      loc_6790"], ["mov~[yte ptr [rsp+0],al", "lea~rax,<TAG>", "cmp~rax,argsize_0", "ja~FOO"]], [1, 0, 179, 0, 0, 2, 0, 0, 12, 11, 0.0, ["mov     rax, [rsp+0D8h+buffer]", "mov     byte ptr [rax+r15], 27h ; '''"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [1, 0, 179, 0, 0, 2, 0, 0, 16, 8, 0.0, ["mov     len, [rsp+0D8h+buffer]", "mov     byte ptr [rax+r15+2], 30h ; '0'"], ["mov~len,<TAG>", "mov~[yte ptr [rax+0],0"]], [0, 0, 179, 0, 0, 3, 0, 0, 12, 10, 0.02910163507989595, ["lea     rax, [r15+1]", "cmp     r13, len", "jbe     short loc_630F"], ["lea~rax,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [1, 0, 179, 0, 0, 2, 0, 0, 13, 10, 0.0, ["mov     len, [rsp+0D8h+buffer]", "mov     byte ptr [rax+r15+1], 5Ch ; '\\'"], ["mov~len,<TAG>", "mov~[yte ptr [rax+0],0"]], [0, 0, 179, 0, 0, 3, 0, 0, 13, 9, 0.0286371237458194, ["lea     rax, [r15+2]", "cmp     r13, len", "jbe     short loc_6322"], ["lea~rax,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [1, 0, 179, 0, 0, 2, 0, 0, 14, 9, 0.0, ["mov     len, [rsp+0D8h+buffer]", "mov     byte ptr [rax+r15+2], 27h ; '''"], ["mov~len,<TAG>", "mov~[yte ptr [rax+0],0"]], [0, 0, 182, 0, 0, 2, 1, 1, 3, 9, 0.00013935340022296544, ["test    buffersize, buffersize", "jz      short loc_6726"], ["test~buffersize,buffersize", "jz~FOO"]], [1, 0, 181, 0, 0, 2, 0, 0, 4, 9, 0.0, ["mov     rax, [rsp+0D8h+buffer]", "mov     byte ptr [rax], 27h ; '''"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [1, 0, 179, 0, 0, 3, 0, 1, 9, 4, 0.005713489409141583, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "movzx   r10d, byte ptr [rsp+0D8h+p]", "jnz     loc_63CF"], ["cmp~[rsp+0],0", "movzx~r10d,[yte ptr [rsp+0]", "jnz~FOO"]], [0, 0, 179, 0, 0, 1, 0, 0, 10, 8, 0.003994797473058343, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 179, 1, 0, 5, 0, 1, 12, 6, 0.14393657871918744, ["mov     rdx, rcx", "movzx   esi, [rsp+0D8h+elide_outer_quotes]", "mov     rcx, [rsp+0D8h+buffer]", "add     rdx, r14", "jmp     short loc_65A3"], ["mov~rdx,rcx", "movzx~esi,[rsp+0]", "mov~rcx,<TAG>", "add~rdx,r14", "jmp~FOO"]], [2, 0, 179, 0, 0, 2, 0, 0, 9, 6, 0.0027019075932119474, ["mov     ebx, 9; jumptable 000000000000614E case 9", "mov     eax, 74h ; 't'"], ["mov~ebx,0", "mov~eax,0"]], [0, 0, 179, 0, 0, 2, 1, 1, 14, 4, 0.03428867831041744, ["test    sil, sil", "jnz     loc_63CF"], ["test~sil,sil", "jnz~FOO"]], [0, 0, 179, 0, 0, 2, 1, 1, 13, 5, 0.16028737767868206, ["test    bpl, bpl", "jnz     short loc_6538"], ["test~bpl,bpl", "jnz~FOO"]], [0, 0, 179, 0, 1, 11, 0, 1, 10, 11, 0.0, ["mov     rdi, arg_0; s", "mov     [rsp+0D8h+var_80], r11", "mov     byte ptr [rsp+0D8h+arg], r10b", "mov     [rsp+0D8h+i], r8", "mov     [rsp+0D8h+argsize], arg_0", "call    _strlen", "movzx   r10d, byte ptr [rsp+0D8h+arg]", "mov     r11, [rsp+0D8h+var_80]", "mov     argsize_0, rax", "mov     r8, [rsp+0D8h+i]", "mov     r9, [rsp+0D8h+argsize]"], ["mov~rdi,arg_0", "mov~[rsp+0],r11", "mov~[yte ptr [rsp+0],r10b", "mov~[rsp+0],r8", "mov~[rsp+0],arg_0", "call~FOO", "movzx~r10d,[yte ptr [rsp+0]", "mov~r11,[rsp+0]", "mov~argsize_0,rax", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 5, 0.03418222779635823, ["cmp     [rsp+0D8h+quoting_style], 2", "jnz     short c_escape"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 179, 0, 0, 4, 1, 1, 10, 6, 0.00011419236962715224, ["mov     ebx, 9; jumptable 00000000000067AE case 9", "xor     r10d, r10d", "mov     eax, 74h ; 't'", "jmp     c_and_shell_escape"], ["mov~ebx,0", "xor~r10d,r10d", "mov~eax,0", "jmp~FOO"]], [0, 0, 179, 0, 0, 2, 0, 0, 15, 12, 0.0295661464139725, ["cmp     r15, r13", "jnb     short loc_654B"], ["cmp~r15,r13", "jnb~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 11, 4, 0.0010451505016722408, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "jnz     loc_63CF"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 179, 0, 0, 1, 1, 0, 10, 6, 0.0013238573021181717, ["xor     r10d, r10d; jumptable 00000000000067AE case 63"], ["xor~r10d,r10d"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 6, 0.05195559271646228, ["cmp     [rsp+0D8h+backslash_escapes], 0", "jnz     short loc_63A0"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 179, 0, 0, 3, 0, 0, 16, 11, 0.02910163507989595, ["lea     rax, [r15+1]", "cmp     r13, len", "jbe     short loc_6561"], ["lea~rax,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [1, 0, 179, 0, 0, 1, 0, 0, 16, 12, 0.0, ["mov     byte ptr [rcx+r15], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [3, 0, 179, 0, 0, 4, 0, 1, 9, 7, 0.01089279078409513, ["cmp     [rsp+0D8h+backslash_escapes], 0; jumptable 000000000000614E case 8", "mov     ebx, 8", "mov     eax, 62h ; 'b'", "jz      short loc_6353"], ["cmp~[rsp+0],0", "mov~ebx,0", "mov~eax,0", "jz~FOO"]], [2, 0, 179, 1, 0, 4, 0, 0, 17, 11, 0.0, ["mov     eax, ebx", "shr     al, 6", "add     eax, 30h ; '0'", "mov     [rcx+r15+1], al"], ["mov~eax,ebx", "shr~al,0", "add~eax,0", "mov~[rcx+0],al"]], [1, 0, 181, 0, 0, 2, 0, 0, 4, 9, 0.0, ["mov     rax, [rsp+0D8h+buffer]", "mov     byte ptr [rax], 22h ; '\"'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [0, 0, 179, 0, 0, 3, 0, 0, 17, 10, 0.0286371237458194, ["lea     rax, [r15+2]", "cmp     r13, len", "jbe     short loc_657A"], ["lea~rax,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [0, 0, 179, 0, 0, 4, 0, 0, 17, 6, 0.017512077294685992, ["lea     rcx, [arg_0+r14]", "lea     bytes, [arg_0+r12+1]", "lea     r8, [rcx+r12]", "nop     word ptr [rax+rax+00000000h]"], ["lea~rcx,<TAG>", "lea~bytes,[arg_0+0]", "lea~r8,<TAG>", "nop~[ord ptr [rax+0]"]], [0, 0, 179, 0, 0, 2, 0, 0, 12, 10, 0.040040876997398736, ["cmp     r13, r15", "jbe     short loc_6379"], ["cmp~r13,r15", "jbe~FOO"]], [1, 0, 179, 1, 0, 2, 0, 1, 12, 11, 0.02912486064659978, ["add     i_0, 1", "jmp     short loc_636B"], ["add~i_0,0", "jmp~FOO"]], [1, 0, 179, 0, 0, 2, 0, 0, 13, 10, 0.0, ["mov     rax, [rsp+0D8h+buffer]", "mov     byte ptr [rax+r15], 5Ch ; '\\'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [3, 0, 179, 1, 0, 5, 1, 0, 18, 10, 0.0, ["mov     eax, ebx", "shr     al, 3", "and     eax, 7", "add     eax, 30h ; '0'", "mov     [rcx+r15+2], al"], ["mov~eax,ebx", "shr~al,0", "and~eax,0", "add~eax,0", "mov~[rcx+0],al"]], [3, 0, 179, 2, 0, 3, 1, 0, 18, 9, 0.028172612411742848, ["and     ebx, 7", "add     r15, 3", "add     ebx, 30h ; '0'"], ["and~ebx,0", "add~r15,0", "add~ebx,0"]], [0, 0, 179, 0, 0, 2, 1, 1, 11, 4, 0.007594760312151617, ["test    r11, r11", "jnz     loc_688D"], ["test~r11,r11", "jnz~FOO"]], [0, 0, 179, 0, 0, 2, 1, 1, 14, 9, 0.12140003716090673, ["test    r10b, r10b", "jz      short loc_6584"], ["test~r10b,r10b", "jz~FOO"]], [1, 0, 179, 1, 0, 3, 1, 1, 16, 9, 0.008198625046451134, ["add     r15, 1", "xor     r10d, r10d", "jmp     short loc_6584"], ["add~r15,0", "xor~r10d,r10d", "jmp~FOO"]], [0, 0, 179, 0, 0, 2, 0, 0, 16, 7, 0.012913415087328132, ["cmp     r15, r13", "jnb     short loc_659A"], ["cmp~r15,r13", "jnb~FOO"]], [0, 0, 179, 0, 0, 1, 0, 0, 17, 7, 0.0, ["mov     [rcx+r15], bl"], ["mov~<TAG>,bl"]], [0, 0, 179, 0, 0, 1, 0, 0, 10, 6, 0.001201923076923077, ["nop     dword ptr [esc+00000000h]"], ["nop~[word ptr [esc+0]"]], [1, 0, 179, 0, 0, 3, 0, 1, 14, 6, 0.04672209835253313, ["movzx   ebx, byte ptr [arg_0+rax]", "cmp     bl, 3Eh ; '>'", "ja      loc_68CB"], ["movzx~ebx,<TAG>", "cmp~bl,0", "ja~FOO"]], [1, 0, 179, 1, 0, 2, 0, 0, 17, 6, 0.01244890375325158, ["movzx   ebx, byte ptr [arg_0+r14]", "add     r15, 1"], ["movzx~ebx,<TAG>", "add~r15,0"]], [0, 0, 179, 0, 0, 1, 0, 0, 11, 5, 0.005667038275733928, ["mov     ebx, eax"], ["mov~ebx,eax"]], [1, 0, 179, 0, 0, 2, 0, 1, 11, 4, 0.03621252941905116, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "jnz     short loc_63CF"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 179, 0, 0, 3, 0, 0, 15, 5, 0.04268084974606714, ["mov     rsi, 7000A38200000000h", "bt      rsi, rbx", "jnb     loc_68CB"], ["mov~rsi,0", "bt~rsi,rbx", "jnb~FOO"]], [0, 0, 179, 0, 0, 2, 0, 0, 15, 10, 0.008663136380527686, ["cmp     r15, r13", "jnb     short loc_65B7"], ["cmp~r15,r13", "jnb~FOO"]], [1, 0, 179, 0, 0, 1, 0, 0, 16, 10, 0.0, ["mov     byte ptr [rcx+r15], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 0, 179, 0, 0, 1, 0, 1, 16, 9, 0.004041248606465998, ["jmp     short loc_6BD7"], ["jmp~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 16, 4, 0.03866282670630496, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "jnz     loc_63CF"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 179, 0, 0, 2, 0, 0, 17, 12, 0.0379041248606466, ["cmp     r15, r13", "jnb     short loc_61CD"], ["cmp~r15,r13", "jnb~FOO"]], [1, 0, 179, 0, 0, 2, 0, 0, 18, 12, 0.0, ["mov     rsi, [rsp+0D8h+buffer]", "mov     byte ptr [rsi+r15], 3Fh ; '?'"], ["mov~rsi,<TAG>", "mov~<TAG>,0"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 4, 0.046698872785829314, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "jnz     loc_63CF"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 179, 0, 0, 3, 0, 0, 18, 11, 0.03743961352657005, ["lea     rdx, [r15+1]", "cmp     r13, len", "jbe     short loc_61E0"], ["lea~rdx,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [0, 0, 179, 0, 0, 1, 1, 0, 10, 5, 0.0008128948346339651, ["xor     r10d, r10d; jumptable 00000000000067AE case 0"], ["xor~r10d,r10d"]], [1, 0, 179, 0, 0, 2, 0, 0, 19, 11, 0.0, ["mov     rsi, [rsp+0D8h+buffer]", "mov     byte ptr [rsi+r15+1], 22h ; '\"'"], ["mov~rsi,<TAG>", "mov~[yte ptr [rsi+0],0"]], [0, 0, 179, 0, 0, 3, 0, 0, 19, 10, 0.036975102192493496, ["lea     len, [r15+2]", "cmp     r13, len", "jbe     short loc_61F3"], ["lea~len,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [0, 0, 179, 0, 0, 2, 0, 0, 11, 9, 0.04591694537346711, ["cmp     r15, r13", "jnb     short loc_67F4"], ["cmp~r15,r13", "jnb~FOO"]], [1, 0, 179, 0, 0, 2, 0, 0, 20, 10, 0.0, ["mov     rsi, [rsp+0D8h+buffer]", "mov     byte ptr [rsi+r15+2], 22h ; '\"'"], ["mov~rsi,<TAG>", "mov~[yte ptr [rsi+0],0"]], [1, 0, 179, 0, 0, 2, 0, 0, 12, 9, 0.0, ["mov     rax, [rsp+0D8h+buffer]", "mov     byte ptr [rax+r15], 5Ch ; '\\'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]]], "func_feature": [13, 75, 139, 7, 209, 348, 6, 715, 0.04269, 7, 35], "succs": [[15], [0, 15], [115], [2, 20], [52], [52, 4], [101, 94], [94, 6], [6], [42], [9, 108], [9], [9], [34, 140], [34, 13], [21], [100, 36], [16, 61], [11, 38], [18, 38], [176, 119], [40, 39], [65, 162, 132, 70, 102, 80, 73, 30, 174, 144, 21, 120, 25, 27, 124, 126], [24, 21], [21, 190], [26, 21], [105, 21], [96, 21], [21, 29], [97, 21], [148, 21], [21], [123, 21], [21], [39], [57, 37], [35, 197], [57, 35], [19, 7], [64, 58], [76, 39], [39], [56, 51], [42, 44], [42], [115], [45, 157], [193], [203, 68, 167, 53, 170, 107, 146, 142, 47, 82, 110, 121, 59, 92, 93, 95], [], [49, 90], [], [66, 60], [193], [43, 134], [43, 54], [], [100], [64, 193], [72, 58], [66], [62, 7], [63, 7], [178, 7], [193, 71], [171], [74, 114], [66, 5], [166], [8, 165], [104, 69], [75], [71], [201, 84], [81, 114], [88, 83], [75, 179], [75], [75, 187], [75], [171], [85], [166], [88], [40, 89], [86, 87], [114, 85], [86], [125], [125], [67, 106, 46, 3, 116, 117, 91], [115], [25], [193], [98], [193], [25], [25], [161, 103], [98], [98], [17, 99], [166], [32], [32], [12], [115], [27], [43, 55], [10, 108], [70], [48, 110], [33, 23], [112, 33], [115], [125], [115], [115], [115], [115], [171], [126], [109, 135], [161], [166], [122, 127], [128, 28], [122], [28], [133], [129, 159], [33, 12], [113, 131], [22, 70], [136], [133, 150], [137, 138], [136, 147], [137], [152, 41], [139, 141], [139], [30], [166], [145, 143], [184, 143], [79, 143], [43], [12, 149], [153, 151], [130, 111], [153], [41], [154, 155], [155], [156, 31], [31], [118, 158], [118], [160, 12], [133], [164], [166], [168, 12], [185, 163], [8], [169, 171], [166], [172, 173], [171, 12], [132], [40, 192], [177, 175], [172], [40, 189], [177], [119], [182, 183], [19], [181, 77], [179], [77], [183], [78], [12, 79], [195, 78], [78], [188, 191], [191], [192], [33, 194], [164], [193], [12, 180], [33, 198], [186, 196], [186], [100], [12, 199], [200, 202], [202], [12, 206], [204, 205], [201], [205], [1, 207], [208, 14], [1], [14]], "fname": "quotearg_buffer_restyled", "n_num": 209}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 9, 0, 0, 2, 0, 1, 0, 0, 0.08181818181818182, ["cmp     cs:nslots, r15d", "ja      short loc_6CDF"], ["cmp~<TAG>,r15d", "ja~FOO"]], [0, 1, 11, 1, 1, 18, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "movsxd  r15, edi", "push    r13", "push    r12", "mov     r14, argsize", "push    rbp", "push    rbx", "mov     rbp, options", "sub     rsp, 28h", "mov     [rsp+58h+arg], arg_0", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "test    r15d, r15d", "mov     rbx, cs:slotvec_0", "mov     [rsp+58h+e], eax", "js      loc_6DE3"], ["push~r15", "push~r14", "movsxd~r15,edi", "push~r13", "push~r12", "mov~r14,argsize", "push~rbp", "push~rbx", "mov~rbp,options", "sub~rsp,<STR>", "mov~[rsp+0],arg_0", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "test~r15d,r15d", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.12727272727272726, ["lea     rsi, [qsize+1]", "lea     qsize, slot0", "cmp     val, rax", "mov     [rbx], size_0", "jz      short loc_6D59"], ["lea~rsi,[qsize+0]", "lea~qsize,<TAG>", "cmp~val,rax", "mov~<TAG>,size_0", "jz~FOO"]], [3, 1, 4, 4, 1, 24, 1, 2, 2, -1, 0.21818181818181817, ["mov     eax, [options+4]", "shl     n0, 4", "sub     rsp, 8", "add     sv, r15", "lea     r15, [options+8]", "mov     r8d, [options+0]; quoting_style", "mov     r11, [rbx]", "mov     r12, [rbx+8]", "mov     rcx, argsize; argsize", "or      eax, 1", "mov     [rsp+60h+flags], eax", "push    qword ptr [options+30h]; right_quote", "mov     r9d, eax; flags", "push    qword ptr [options+28h]; left_quote", "push    r15; quote_these_too", "mov     rsi, size_0; buffersize", "mov     rdx, [rsp+78h+arg]; arg", "mov     rdi, val; buffer", "mov     [rsp+78h+size], size_0", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+58h+size]", "cmp     r11, qsize", "ja      short loc_6D9B"], ["mov~eax,[options+0]", "shl~n0,0", "sub~rsp,0", "add~sv,r15", "lea~r15,[options+0]", "mov~r8d,[options+0]", "mov~r11,<TAG>", "mov~r12,[rbx+0]", "mov~rcx,argsize", "or~eax,0", "mov~[rsp+0],eax", "push~[word ptr [options+0]", "mov~r9d,eax", "push~[word ptr [options+0]", "push~r15", "mov~rsi,size_0", "mov~rdx,[rsp+0]", "mov~rdi,val", "mov~[rsp+0],size_0", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,qsize", "ja~FOO"]], [0, 1, 0, 1, 0, 11, 0, 0, 3, -1, 0.0, ["mov     eax, [rsp+58h+e]", "mov     [r13+0], eax", "add     rsp, 28h", "mov     rax, val", "pop     rbx", "pop     options", "pop     val", "pop     r13", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~[r13+0],eax", "add~rsp,<STR>", "mov~rax,val", "pop~rbx", "pop~options", "pop~val", "pop~r13", "pop~argsize", "pop~r15", "retn"]], [1, 1, 1, 2, 2, 17, 0, 2, 4, -1, 0.01818181818181818, ["mov     rdi, rsi; n", "mov     [rsp+58h+size], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, [options+0]; quoting_style", "push    qword ptr [options+30h]; right_quote", "push    qword ptr [options+28h]; left_quote", "mov     rcx, argsize; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+78h+flags]; flags", "mov     rdi, rax; buffer", "mov     rdx, [rsp+78h+arg]; arg", "mov     rsi, [rsp+78h+size]; buffersize", "mov     val, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,[options+0]", "push~[word ptr [options+0]", "push~[word ptr [options+0]", "mov~rcx,argsize", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~val,rax", "call~FOO", "add~rsp,<STR>"]], [2, 0, 5, 4, 1, 8, 1, 1, 4, -1, 0.13636363636363635, ["mov     edi, cs:nslots", "xor     esi, esi; c", "sub     rdx, rdi", "shl     rdi, 4", "shl     rdx, 4; n", "add     rdi, rbx; s", "call    _memset", "mov     cs:nslots, r12d"], ["mov~edi,<TAG>", "xor~esi,esi", "sub~rdx,rdi", "shl~rdi,0", "shl~rdx,0", "add~rdi,rbx", "call~FOO", "mov~<TAG>,r12d"]], [0, 0, 6, 0, 1, 6, 0, 1, 3, -1, 0.03636363636363636, ["mov     rdi, sv; p", "mov     [rsp+58h+size], n1", "call    xrealloc", "mov     rdx, [rsp+58h+size]", "mov     sv, rax", "mov     cs:slotvec_0, sv"], ["mov~rdi,sv", "mov~[rsp+0],n1", "call~FOO", "mov~rdx,[rsp+0]", "mov~sv,rax", "mov~<TAG>,sv"]], [1, 0, 8, 1, 0, 7, 0, 1, 2, -1, 0.05454545454545454, ["lea     edx, [n0+1]", "lea     e_0, slotvec0", "mov     rsi, rdx", "mov     r12, rdx", "shl     rsi, 4; n", "cmp     sv, rax", "jz      loc_6DB8"], ["lea~edx,[n0+0]", "lea~e_0,<TAG>", "mov~rsi,rdx", "mov~r12,rdx", "shl~rsi,0", "cmp~sv,rax", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, -1, 0.0, ["mov     rdi, val; ptr", "mov     [rsp+58h+size], size_0", "call    _free", "mov     rsi, [rsp+58h+size]"], ["mov~rdi,val", "mov~[rsp+0],size_0", "call~FOO", "mov~rsi,[rsp+0]"]], [0, 0, 6, 0, 1, 9, 1, 2, 3, -1, 0.03636363636363636, ["xor     edi, edi; p", "mov     [rsp+58h+size], n1", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     sv, rax", "mov     cs:slotvec_0, sv", "mov     rdx, [rsp+58h+size]", "movups  xmmword ptr [sv], xmm0", "jmp     loc_6CBD"], ["xor~edi,edi", "mov~[rsp+0],n1", "call~FOO", "movdqa~xmm0,<TAG>", "mov~sv,rax", "mov~<TAG>,sv", "mov~rdx,[rsp+0]", "movups~<TAG>,xmm0", "jmp~FOO"]]], "func_feature": [9, 4, 15, 0, 12, 15, 8, 112, 0.05909, 4, 13], "succs": [[9, 4], [0, 2], [], [10, 6], [3, 5], [], [5], [4], [7], [8, 11], [6], [7]], "fname": "quotearg_n_options", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[1, 0, 0, 0, 2, 18, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, o", "call    ___errno_location", "mov     r12d, [p]", "mov     rbp, p", "lea     p, default_quoting_options", "test    o, o", "mov     esi, 38h ; '8'; s", "cmovz   o, p", "mov     rdi, rbx; p", "call    xmemdup", "mov     [rbp+0], r12d", "pop     rbx", "pop     rbp", "pop     e", "retn"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,o", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,p", "lea~p,<TAG>", "test~o,o", "mov~esi,0", "cmovz~o,p", "mov~rdi,rbx", "call~FOO", "mov~[rbp+0],r12d", "pop~rbx", "pop~rbp", "pop~e", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 18, 0.0, 1, 0], "succs": [[]], "fname": "clone_quoting_options", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     eax, [rdi]", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~eax,<TAG>", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "get_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     [rdi], esi", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~<TAG>,esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[4, 0, 0, 1, 0, 19, 6, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    p, p", "mov     ecx, esi", "cmovz   p, rax", "mov     eax, esi", "and     ecx, 1Fh", "shr     al, 5", "movzx   eax, al", "lea     p, [p+rax*4+8]", "mov     esi, [p]", "mov     eax, esi", "shr     eax, cl", "xor     edx, eax", "and     eax, 1", "and     edx, 1", "shl     edx, cl", "xor     edx, esi", "mov     [p], edx", "retn"], ["lea~rax,<TAG>", "test~p,p", "mov~ecx,esi", "cmovz~p,rax", "mov~eax,esi", "and~ecx,0", "shr~al,0", "movzx~eax,al", "lea~p,[p+0]", "mov~esi,<TAG>", "mov~eax,esi", "shr~eax,cl", "xor~edx,eax", "and~eax,0", "and~edx,0", "shl~edx,cl", "xor~edx,esi", "mov~<TAG>,edx", "retn"]]], "func_feature": [0, 6, 0, 0, 1, 0, 0, 19, 0.0, 1, 1], "succs": [[]], "fname": "set_char_quoting", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0.0, ["lea     r, default_quoting_options", "test    o, o", "cmovz   o, r", "mov     eax, [o+4]", "mov     [o+4], esi", "retn"], ["lea~r,<TAG>", "test~o,o", "cmovz~o,r", "mov~eax,[o+0]", "mov~[o+0],esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 6, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_flags", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[1, 0, 0, 1, 1, 2, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]], [1, 0, 3, 0, 0, 6, 2, 1, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "test    left_quote, left_quote", "mov     dword ptr [o], 8", "jz      short loc_6EF7"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "test~left_quote,left_quote", "mov~<TAG>,0", "jz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, 0, 0.16666666666666666, ["test    right_quote, right_quote", "jz      short loc_6EF7"], ["test~right_quote,right_quote", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["mov     [o+28h], left_quote", "mov     [o+30h], right_quote", "retn"], ["mov~[o+0],left_quote", "mov~[o+0],right_quote", "retn"]]], "func_feature": [1, 3, 3, 0, 4, 4, 0, 13, 0.04167, 1, 1], "succs": [[], [0, 2], [0, 3], []], "fname": "set_custom_quoting", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[3, 0, 0, 3, 2, 39, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "lea     r, default_quoting_options", "push    r13", "push    r12", "mov     r13, buffer", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, buffersize", "mov     r15, arg", "sub     rsp, 18h", "test    o, o", "cmovz   rbx, r", "mov     [rsp+48h+argsize], argsize_0", "call    ___errno_location", "mov     r12d, [r]", "mov     rbp, r", "lea     r, [p+8]", "sub     rsp, 8", "mov     r9d, [p+4]; flags", "push    qword ptr [p+30h]; right_quote", "mov     r8d, [p]; quoting_style", "push    qword ptr [p+28h]; left_quote", "mov     rdx, arg; arg", "push    r; quote_these_too", "mov     rcx, [rsp+68h+argsize]; argsize", "mov     rsi, buffersize; buffersize", "mov     rdi, buffer; buffer", "call    quotearg_buffer_restyled", "mov     [rbp+0], r12d", "add     rsp, 38h", "pop     p", "pop     rbp", "pop     e", "pop     buffer", "pop     buffersize", "pop     arg", "retn"], ["push~r15", "push~r14", "lea~r,<TAG>", "push~r13", "push~r12", "mov~r13,buffer", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,buffersize", "mov~r15,arg", "sub~rsp,0", "test~o,o", "cmovz~rbx,r", "mov~[rsp+0],argsize_0", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,r", "lea~r,[p+0]", "sub~rsp,0", "mov~r9d,[p+0]", "push~[word ptr [p+0]", "mov~r8d,<TAG>", "push~[word ptr [p+0]", "mov~rdx,arg", "push~r", "mov~rcx,[rsp+0]", "mov~rsi,buffersize", "mov~rdi,buffer", "call~FOO", "mov~[rbp+0],r12d", "add~rsp,0", "pop~p", "pop~rbp", "pop~e", "pop~buffer", "pop~buffersize", "pop~arg", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 39, 0.0, 1, 3], "succs": [[]], "fname": "quotearg_buffer", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[1, 0, 0, 1, 0, 9, 0, 0, 0, 0, 0.0, ["mov     rax, [rsp+68h+var_58]", "add     rsp, 38h", "pop     p", "pop     flags", "pop     size", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["mov~rax,[rsp+0]", "add~rsp,0", "pop~p", "pop~flags", "pop~size", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [3, 2, 2, 5, 4, 59, 7, 5, 0, 0, 0.0, ["push    r15", "push    r14", "lea     rax, default_quoting_options", "push    r13", "push    r12", "mov     r12, size", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, arg", "mov     r15, argsize", "sub     rsp, 38h", "test    o, o", "cmovz   rbx, rax", "xor     ebp, ebp", "call    ___errno_location", "test    size, size", "mov     r13, rax", "mov     eax, [rax]", "setz    bpl", "or      ebp, [p+4]", "lea     r10, [p+8]", "sub     rsp, 8", "mov     r8d, [p]; quoting_style", "mov     rcx, argsize; argsize", "mov     [rsp+70h+e], eax", "push    qword ptr [p+30h]; right_quote", "mov     rdx, arg; arg", "push    qword ptr [p+28h]; left_quote", "push    r10; quote_these_too", "xor     esi, esi; buffersize", "mov     r9d, ebp; flags", "xor     edi, edi; buffer", "mov     [rsp+88h+quote_these_too], r10", "call    quotearg_buffer_restyled", "lea     rsi, [rax+1]", "mov     [rsp+88h+var_40], rax", "add     rsp, 20h", "mov     rdi, bufsize_0; n", "mov     [rsp+68h+bufsize], bufsize_0", "call    xmalloc", "mov     [rsp+68h+var_58], rax", "sub     rsp, 8", "push    qword ptr [p+30h]; right_quote", "push    qword ptr [p+28h]; left_quote", "mov     r10, [rsp+80h+quote_these_too]", "mov     r9d, ebp; flags", "mov     r8d, [p]; quoting_style", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "mov     rdi, rax; buffer", "push    r10; quote_these_too", "mov     rsi, [rsp+88h+bufsize]; buffersize", "call    quotearg_buffer_restyled", "mov     eax, [rsp+88h+e]", "add     rsp, 20h", "test    size, size", "mov     [r13+0], eax", "jz      short loc_704F"], ["push~r15", "push~r14", "lea~rax,<TAG>", "push~r13", "push~r12", "mov~r12,size", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,arg", "mov~r15,argsize", "sub~rsp,0", "test~o,o", "cmovz~rbx,rax", "xor~ebp,ebp", "call~FOO", "test~size,size", "mov~r13,rax", "mov~eax,<TAG>", "setz~bpl", "or~ebp,[p+0]", "lea~r10,[p+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~[rsp+0],eax", "push~[word ptr [p+0]", "mov~rdx,arg", "push~[word ptr [p+0]", "push~r10", "xor~esi,esi", "mov~r9d,ebp", "xor~edi,edi", "mov~[rsp+0],r10", "call~FOO", "lea~rsi,[rax+0]", "mov~[rsp+0],rax", "add~rsp,<STR>", "mov~rdi,bufsize_0", "mov~[rsp+0],bufsize_0", "call~FOO", "mov~[rsp+0],rax", "sub~rsp,0", "push~[word ptr [p+0]", "push~[word ptr [p+0]", "mov~r10,[rsp+0]", "mov~r9d,ebp", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~rdx,arg", "mov~rdi,rax", "push~r10", "mov~rsi,[rsp+0]", "call~FOO", "mov~eax,[rsp+0]", "add~rsp,<STR>", "test~size,size", "mov~[r13+0],eax", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     r11, [rsp+68h+var_40]", "mov     [size], r11"], ["mov~r11,[rsp+0]", "mov~<TAG>,r11"]]], "func_feature": [4, 7, 5, 2, 3, 3, 1, 70, 0.0, 1, 6], "succs": [[], [0, 2], [0]], "fname": "quotearg_alloc_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rcx, o", "xor     edx, edx", "jmp     quotearg_alloc_mem"], ["mov~rcx,o", "xor~edx,edx", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[], [0]], "fname": "quotearg_alloc", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[1, 0, 3, 0, 1, 3, 0, 1, 0, 0, 0.0, ["call    _free", "mov     cs:slotvec0.size, 100h", "mov     cs:slotvec0.val, rbx"], ["call~FOO", "mov~<TAG>,0", "mov~<TAG>,rbx"]], [0, 0, 4, 0, 0, 4, 0, 1, 1, 2, 0.2857142857142857, ["mov     rdi, [sv+8]; ptr", "lea     rbx, slot0", "cmp     rdi, rbx", "jz      short loc_70E9"], ["mov~rdi,[sv+0]", "lea~rbx,<TAG>", "cmp~rdi,rbx", "jz~FOO"]], [2, 0, 6, 2, 0, 5, 0, 0, 1, 4, 0.023809523809523808, ["sub     eax, 2", "lea     rbx, [sv+18h]", "shl     rax, 4", "lea     rbp, [sv+rax+28h]", "nop     word ptr [rax+rax+00000000h]"], ["sub~eax,0", "lea~rbx,[sv+0]", "shl~rax,0", "lea~rbp,[sv+0]", "nop~[ord ptr [rax+0]"]], [1, 0, 7, 0, 0, 7, 0, 0, 0, 3, 0.0, ["mov     eax, cs:nslots", "push    r12", "mov     r12, cs:slotvec_0", "push    rbp", "push    rbx", "cmp     eax, 1", "jbe     short loc_70C1"], ["mov~eax,<TAG>", "push~r12", "mov~r12,<TAG>", "push~rbp", "push~rbx", "cmp~eax,0", "jbe~FOO"]], [1, 0, 6, 1, 1, 5, 0, 2, 2, 3, 0.11904761904761904, ["mov     rdi, [rbx]; ptr", "add     rbx, 10h", "call    _free", "cmp     rbx, rbp", "jnz     short loc_70B0"], ["mov~rdi,<TAG>", "add~rbx,0", "call~FOO", "cmp~rbx,rbp", "jnz~FOO"]], [1, 0, 0, 0, 0, 5, 0, 0, 3, 0, 0.0, ["pop     rbx", "mov     cs:nslots, 1", "pop     rbp", "pop     sv", "retn"], ["pop~rbx", "mov~<TAG>,0", "pop~rbp", "pop~sv", "retn"]], [0, 0, 2, 0, 0, 3, 0, 1, 2, 1, 0.23809523809523808, ["lea     rbx, slotvec0", "cmp     sv, rbx", "jz      short loc_7104"], ["lea~rbx,<TAG>", "cmp~sv,rbx", "jz~FOO"]], [0, 0, 1, 0, 1, 3, 0, 1, 3, 1, 0.0, ["mov     rdi, sv; ptr", "call    _free", "mov     cs:slotvec_0, rbx"], ["mov~rdi,sv", "call~FOO", "mov~<TAG>,rbx"]]], "func_feature": [3, 0, 6, 0, 8, 11, 0, 35, 0.08333, 5, 3], "succs": [[6], [0, 6], [4], [1, 2], [1, 4], [], [5, 7], [5]], "fname": "quotearg_free", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rdx,0", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_n", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_n_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options; options", "mov     rsi, arg; arg", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "xor     edi, edi; n", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rsi,arg", "mov~rdx,0", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options; options", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "xor     edi, edi; n", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rdx,argsize", "mov~argsize,arg", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 1, 2, 1, 1, 25, 2, 2, 0, 0, 0.0, ["pxor    xmm0, xmm0", "sub     rsp, 88h", "mov     dword ptr [rsp+88h+s], esi", "mov     dword ptr [rsp+88h+s+4], 0", "mov     rax, arg", "mov     arg, [rsp+88h+var_18]", "mov     s_0, arg; arg", "movups  [rsp+88h+s+8], xmm0", "mov     rcx, fs:28h", "mov     [rsp+88h+var_10], rcx", "xor     ecx, ecx", "movups  [rsp+88h+var_30], xmm0", "mov     rcx, rsp; options", "movdqa  xmm0, [rsp+88h+s]", "mov     [rsp+88h+o.right_quote], rdx", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "movaps  xmmword ptr [rsp+88h+o.style], xmm0", "movdqa  xmm0, xmmword ptr [rsp+50h]", "movaps  xmmword ptr [rsp+88h+o.quote_these_too+8], xmm0", "movdqa  xmm0, [rsp+88h+var_30+8]", "movaps  xmmword ptr [rsp+88h+o.quote_these_too+18h], xmm0", "call    quotearg_n_options", "mov     rdx, [rsp+88h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_7218"], ["pxor~xmm0,xmm0", "sub~rsp,<STR>", "mov~[word ptr [rsp+0],esi", "mov~[word ptr [rsp+0],0", "mov~rax,arg", "mov~arg,[rsp+0]", "mov~s_0,arg", "movups~[rsp+0],xmm0", "mov~rcx,<TAG>", "mov~[rsp+0],rcx", "xor~ecx,ecx", "movups~[rsp+0],xmm0", "mov~rcx,rsp", "movdqa~xmm0,[rsp+0]", "mov~[rsp+0],rdx", "mov~rdx,0", "movaps~<TAG>,xmm0", "movdqa~xmm0,[mmword ptr [rsp+0]", "movaps~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,[rsp+0]", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 1, 0, 0.0, ["add     rsp, 88h", "retn"], ["add~rsp,<STR>", "retn"]]], "func_feature": [2, 2, 3, 3, 3, 2, 4, 28, 0.0, 1, 2], "succs": [[], [0, 2], []], "fname": "quotearg_n_style", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[1, 1, 2, 1, 1, 25, 2, 2, 0, 0, 0.0, ["pxor    xmm0, xmm0", "sub     rsp, 88h", "mov     dword ptr [rsp+88h+s], esi", "mov     dword ptr [rsp+88h+s+4], 0", "mov     rax, arg", "mov     arg, argsize; argsize", "mov     s_0, arg; arg", "movups  [rsp+88h+s+8], xmm0", "mov     argsize, fs:28h", "mov     [rsp+88h+var_10], argsize", "xor     ecx, ecx", "movups  [rsp+88h+var_30], xmm0", "movdqa  xmm0, [rsp+88h+s]", "mov     rcx, [rsp+88h+var_18]", "movaps  xmmword ptr [rsp+88h+o.style], xmm0", "movdqa  xmm0, xmmword ptr [rsp+50h]", "mov     [rsp+88h+o.right_quote], rcx", "mov     rcx, rsp; options", "movaps  xmmword ptr [rsp+88h+o.quote_these_too+8], xmm0", "movdqa  xmm0, [rsp+88h+var_30+8]", "movaps  xmmword ptr [rsp+88h+o.quote_these_too+18h], xmm0", "call    quotearg_n_options", "mov     rdx, [rsp+88h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_72A4"], ["pxor~xmm0,xmm0", "sub~rsp,<STR>", "mov~[word ptr [rsp+0],esi", "mov~[word ptr [rsp+0],0", "mov~rax,arg", "mov~arg,argsize", "mov~s_0,arg", "movups~[rsp+0],xmm0", "mov~argsize,<TAG>", "mov~[rsp+0],argsize", "xor~ecx,ecx", "movups~[rsp+0],xmm0", "movdqa~xmm0,[rsp+0]", "mov~rcx,[rsp+0]", "movaps~<TAG>,xmm0", "movdqa~xmm0,[mmword ptr [rsp+0]", "mov~[rsp+0],rcx", "mov~rcx,rsp", "movaps~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,[rsp+0]", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 88h", "retn"], ["add~rsp,<STR>", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 2, 3, 3, 3, 2, 2, 28, 0.0, 1, 2], "succs": [[1, 2], [], []], "fname": "quotearg_n_style_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 1, 1, 0, 0, 0.0, ["mov     rdx, arg; arg", "mov     esi, edi; s", "xor     edi, edi; n", "jmp     quotearg_n_style"], ["mov~rdx,arg", "mov~esi,edi", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "quotearg_style", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["mov     rcx, argsize; argsize", "mov     argsize, arg; arg", "mov     esi, edi; s", "xor     edi, edi; n", "jmp     quotearg_n_style_mem"], ["mov~rcx,argsize", "mov~argsize,arg", "mov~esi,edi", "xor~edi,edi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_style_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 1, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 48h", "retn"], ["add~rsp,<STR>", "retn"]], [3, 1, 2, 2, 1, 35, 6, 2, 0, 1, 0.0, ["sub     rsp, 48h", "mov     ecx, edx", "mov     rax, fs:28h", "mov     [rsp+48h+var_10], rax", "xor     eax, eax", "mov     rax, cs:default_quoting_options.right_quote", "mov     r8, rsp", "and     ecx, 1Fh", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     [rsp+48h+options.right_quote], rax", "mov     eax, edx", "movaps  xmmword ptr [rsp+48h+options.style], xmm0", "shr     al, 5", "movzx   eax, al", "lea     r9, [r8+rax*4+8]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "movaps  xmmword ptr [rsp+48h+options.quote_these_too+8], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+48h+options.quote_these_too+18h], xmm0", "mov     edx, [r9]", "mov     eax, edx", "shr     eax, cl", "not     eax", "and     eax, 1", "shl     eax, cl", "mov     rcx, r8; options", "xor     eax, edx", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "mov     [r9], eax", "xor     edi, edi; n", "call    quotearg_n_options", "mov     rsi, [rsp+48h+var_10]", "xor     rsi, fs:28h", "jnz     short loc_7363"], ["sub~rsp,<STR>", "mov~ecx,edx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "mov~r8,rsp", "and~ecx,0", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "mov~eax,edx", "movaps~<TAG>,xmm0", "shr~al,0", "movzx~eax,al", "lea~r9,[r8+0]", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "mov~edx,<TAG>", "mov~eax,edx", "shr~eax,cl", "not~eax", "and~eax,0", "shl~eax,cl", "mov~rcx,r8", "xor~eax,edx", "mov~rdx,argsize", "mov~argsize,arg", "mov~<TAG>,eax", "xor~edi,edi", "call~FOO", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 6, 3, 1, 3, 2, 3, 38, 0.0, 5, 3], "succs": [[], [0, 2], []], "fname": "quotearg_char_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["movsx   edx, sil", "mov     ch_0, 0FFFFFFFFFFFFFFFFh", "jmp     quotearg_char_mem"], ["movsx~edx,sil", "mov~ch_0,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_char", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[1, 1, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     edx, 3Ah ; ':'; ch_0", "mov     rsi, 0FFFFFFFFFFFFFFFFh; argsize", "jmp     quotearg_char_mem"], ["mov~edx,<STR>", "mov~rsi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 1, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_colon", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     edx, 3Ah ; ':'; ch_0", "jmp     quotearg_char_mem"], ["mov~edx,<STR>", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_colon_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[1, 1, 5, 1, 0, 16, 2, 1, 0, 0, 0.0, ["sub     rsp, 48h", "mov     r9, arg", "mov     arg, cs:default_quoting_options.right_quote", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+48h+var_10], rax", "xor     eax, eax", "movaps  [rsp+48h+var_48], xmm0", "test    left_quote_0, left_quote_0", "mov     [rsp+48h+right_quote], rcx", "mov     dword ptr [rsp+48h+var_48], 8", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "movaps  [rsp+48h+var_38], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+20h], xmm0", "jz      short loc_7437"], ["sub~rsp,<STR>", "mov~r9,arg", "mov~arg,<TAG>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~<TAG>,xmm0", "test~left_quote_0,left_quote_0", "mov~[rsp+0],rcx", "mov~<TAG>,0", "movdqa~xmm0,<TAG>", "movaps~[rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 0, 2, 0.15000000000000002, ["test    right_quote_0, right_quote_0", "jz      short loc_7437"], ["test~right_quote_0,right_quote_0", "jz~FOO"]], [0, 0, 2, 0, 1, 9, 1, 2, 0, 1, 0.2, ["mov     [rsp+48h+left_quote], left_quote_0", "mov     [rsp+48h+right_quote], right_quote_0", "mov     rcx, rsp; options", "mov     right_quote_0, argsize; argsize", "mov     left_quote_0, arg; arg", "call    quotearg_n_options", "mov     rdi, [rsp+48h+var_10]", "xor     rdi, fs:28h", "jnz     short loc_743C"], ["mov~[rsp+0],left_quote_0", "mov~[rsp+0],right_quote_0", "mov~rcx,rsp", "mov~right_quote_0,argsize", "mov~left_quote_0,arg", "call~FOO", "mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "jnz~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 48h", "retn"], ["add~rsp,<STR>", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 4, 6, 3, 6, 6, 3, 31, 0.05833, 5, 2], "succs": [[1, 4], [2, 4], [3, 5], [], [], []], "fname": "quotearg_n_custom_mem", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     r8, 0FFFFFFFFFFFFFFFFh", "jmp     quotearg_n_custom_mem"], ["mov~r8,0", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[], [0]], "fname": "quotearg_n_custom", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[1, 0, 1, 0, 0, 6, 1, 1, 0, 0, 0.0, ["mov     rcx, arg; arg", "mov     r8, 0FFFFFFFFFFFFFFFFh; argsize", "mov     arg, right_quote; right_quote", "mov     right_quote, left_quote; left_quote", "xor     edi, edi; n", "jmp     quotearg_n_custom_mem"], ["mov~rcx,arg", "mov~r8,0", "mov~arg,right_quote", "mov~right_quote,left_quote", "xor~edi,edi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 6, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_custom", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 6, 1, 1, 0, 0, 0.0, ["mov     r8, argsize; argsize", "mov     argsize, arg; arg", "mov     arg, right_quote; right_quote", "mov     right_quote, left_quote; left_quote", "xor     edi, edi; n", "jmp     quotearg_n_custom_mem"], ["mov~r8,argsize", "mov~argsize,arg", "mov~arg,right_quote", "mov~right_quote,left_quote", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 6, 0.0, 0, 0], "succs": [[], [0]], "fname": "quotearg_custom_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_74B5"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    _malloc", "test    p, p", "jnz     short loc_74B3"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 4, 0, 4, 4, 6, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 2], [], []], "fname": "xmalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_74D5"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    _realloc", "test    p, p", "jnz     short loc_74D3"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 4, 0, 4, 4, 4, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 2], [], []], "fname": "xrealloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[1, 0, 1, 0, 0, 6, 1, 1, 0, 0, 0.05, ["test    rax, rax", "mov     edx, 40h ; '@'", "cmovz   rax, rdx", "mov     [pn], rax", "mov     pn, rax; n", "jmp     short xrealloc"], ["test~rax,rax", "mov~edx,0", "cmovz~rax,rdx", "mov~<TAG>,rax", "mov~pn,rax", "jmp~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 0, 2, 0.0, ["test    p, p", "mov     rax, [pn]", "jz      short loc_7510"], ["test~p,p", "mov~rax,<TAG>", "jz~FOO"]], [1, 0, 1, 1, 0, 6, 0, 1, 2, -1, 0.05, ["lea     rdx, [rax+1]", "shr     rdx, 1", "add     rax, rdx", "mov     [pn], rax", "mov     pn, rax; n", "jmp     short xrealloc"], ["lea~rdx,[rax+0]", "shr~rdx,0", "add~rax,rdx", "mov~<TAG>,rax", "mov~pn,rax", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 1, 1, 0.1, ["mov     rdx, 0AAAAAAAAAAAAAAA9h", "cmp     rax, rdx", "ja      short loc_7524"], ["mov~rdx,0", "cmp~rax,rdx", "ja~FOO"]], [1, 0, 0, 1, 1, 2, 0, 1, 2, 0, 0.0, ["sub     rsp, 8", "call    xalloc_die"], ["sub~rsp,0", "call~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []]], "func_feature": [1, 2, 5, 0, 6, 6, 0, 20, 0.03333, 0, 2], "succs": [[5], [0, 3], [5], [2, 4], [], []], "fname": "x2realloc", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 1, 0, 1, 8, 1, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, s", "call    xmalloc", "mov     rdx, s; n", "xor     esi, esi; c", "mov     rdi, rax; s", "pop     s", "jmp     _memset"], ["push~rbx", "mov~rbx,s", "call~FOO", "mov~rdx,s", "xor~esi,esi", "mov~rdi,rax", "pop~s", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 1, 2, 0, 2, 1, 0, 8, 0.0, 0, 0], "succs": [[1], []], "fname": "xzalloc", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 4, 1, 2, 0, 1, 0.0, ["sub     rsp, 8", "call    _calloc", "test    p, p", "jz      short loc_7563"], ["sub~rsp,0", "call~FOO", "test~p,p", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 1, 3, 0, 3, 2, 0, 7, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "xcalloc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [2, 0, 1, 2, 1, 14, 0, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, p", "mov     p, s; n", "mov     rbx, s", "sub     rsp, 8", "call    xmalloc", "add     rsp, 8", "mov     rdx, s; n", "mov     rsi, p; src", "pop     s", "pop     p", "mov     rdi, rax; dest", "jmp     _memcpy"], ["push~rbp", "push~rbx", "mov~rbp,p", "mov~p,s", "mov~rbx,s", "sub~rsp,0", "call~FOO", "add~rsp,0", "mov~rdx,s", "mov~rsi,p", "pop~s", "pop~p", "mov~rdi,rax", "jmp~FOO"]]], "func_feature": [1, 0, 2, 0, 2, 1, 2, 14, 0.0, 0, 2], "succs": [[], [0]], "fname": "xmemdup", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 1, 7, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, string", "call    _strlen", "mov     rdi, string; p", "lea     rsi, [rax+1]; s", "pop     string", "jmp     short xmemdup"], ["push~rbx", "mov~rbx,string", "call~FOO", "mov~rdi,string", "lea~rsi,[rax+0]", "pop~string", "jmp~FOO"]]], "func_feature": [1, 0, 2, 0, 2, 1, 0, 7, 0.0, 0, 0], "succs": [[], [0]], "fname": "xstrdup", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    eax, eax", "js      short loc_7609"], ["test~eax,eax", "js~FOO"]], [1, 0, 3, 1, 1, 14, 1, 2, 0, 1, 0.0, ["push    r13", "push    r12", "xor     eax, eax", "push    rbp", "push    rbx", "mov     ebp, edi", "mov     desired_fd, file; file", "mov     esi, edx; oflag", "mov     edx, ecx", "sub     rsp, 8", "call    _open", "cmp     ebp, eax", "mov     ebx, eax", "jz      short loc_7609"], ["push~r13", "push~r12", "xor~eax,eax", "push~rbp", "push~rbx", "mov~ebp,edi", "mov~desired_fd,file", "mov~esi,edx", "mov~edx,ecx", "sub~rsp,0", "call~FOO", "cmp~ebp,eax", "mov~ebx,eax", "jz~FOO"]], [0, 0, 1, 0, 3, 11, 0, 3, 2, 1, 0.0, ["mov     esi, ebp; fd2", "mov     edi, eax; fd", "call    _dup2", "mov     r12d, eax", "call    ___errno_location", "mov     r13d, [rax]", "mov     desired_fd, rax", "mov     edi, ebx; fd", "call    _close", "mov     ebx, r12d", "mov     [rbp+0], r13d"], ["mov~esi,ebp", "mov~edi,eax", "call~FOO", "mov~r12d,eax", "call~FOO", "mov~r13d,<TAG>", "mov~desired_fd,rax", "mov~edi,ebx", "call~FOO", "mov~ebx,r12d", "mov~[rbp+0],r13d"]], [1, 0, 0, 1, 0, 7, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "mov     eax, ebx", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "mov~eax,ebx", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]]], "func_feature": [4, 2, 6, 0, 4, 5, 3, 34, 0.04167, 0, 2], "succs": [[2, 3], [0, 3], [3], []], "fname": "fd_reopen", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[1, 0, 1, 0, 1, 11, 1, 2, 0, 0, 0.006578947368421052, ["mov     r15, [authors+20h]; jumptable 00000000000076C4 case 5", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [authors+18h]", "mov     r13, [authors+10h]", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "call    _dcgettext", "push    r15", "jmp     short loc_78C6"], ["mov~r15,[authors+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "call~FOO", "push~r15", "jmp~FOO"]], [0, 0, 15, 1, 0, 4, 0, 1, 3, 1, 0.1368421052631579, ["lea     rdx, off_A108", "movsxd  rax, dword ptr [rdx+n_authors*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [2, 0, 1, 1, 1, 16, 1, 1, 4, -1, 0.007894736842105263, ["mov     r9, [authors+38h]; jumptable 00000000000076C4 case 8", "mov     rax, [authors+10h]", "lea     rsi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r8, [authors+8]", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     [rsp+58h+var_48], r9", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     [rsp+58h+var_58], rax", "mov     [rsp+58h+var_50], r8", "mov     authors, [authors]", "call    _dcgettext", "sub     rsp, 8"], ["mov~r9,[authors+0]", "mov~rax,[authors+0]", "lea~rsi,<TAG>", "mov~r8,[authors+0]", "mov~edx,0", "xor~edi,edi", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~[rsp+0],r9", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~<TAG>,rax", "mov~[rsp+0],r8", "mov~authors,<TAG>", "call~FOO", "sub~rsp,0"]], [2, 0, 1, 1, 1, 9, 1, 1, 4, -1, 0.006578947368421052, ["lea     rsi, aWrittenBySSSAn; jumptable 00000000000076C4 case 4", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [authors+18h]", "mov     r13, [authors+10h]", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "call    _dcgettext", "sub     rsp, 8"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "call~FOO", "sub~rsp,0"]], [5, 0, 17, 0, 4, 20, 3, 5, 2, 2, 0.12894736842105262, ["lea     rsi, aC; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7D9h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     n_authors, 9; switch 10 cases", "ja      loc_79E0; jumptable 00000000000076C4 default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~n_authors,0", "ja~FOO"]], [2, 0, 1, 1, 1, 16, 1, 1, 4, -1, 0.006578947368421052, ["mov     r8, [authors+8]; jumptable 00000000000076C4 case 6", "mov     n_authors, [authors+28h]", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     edx, 5; category", "mov     r13, [authors+10h]", "xor     edi, edi; domainname", "mov     authors, [authors]", "mov     [rsp+58h+var_58], r8", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r13", "push    r12", "push    r15", "push    r14"], ["mov~r8,[authors+0]", "mov~n_authors,[authors+0]", "lea~rsi,<TAG>", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~edx,0", "mov~r13,[authors+0]", "xor~edi,edi", "mov~authors,<TAG>", "mov~<TAG>,r8", "call~FOO", "sub~rsp,0", "mov~r9,r13", "push~r12", "push~r15", "push~r14"]], [0, 0, 1, 0, 1, 5, 1, 2, 4, -1, 0.010526315789473684, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r10, [rsp+58h+var_40]", "push    r10", "jmp     loc_7734"], ["xor~edi,edi", "call~FOO", "mov~r10,[rsp+0]", "push~r10", "jmp~FOO"]], [1, 0, 2, 0, 0, 16, 0, 1, 3, -1, 0.015789473684210527, ["mov     r10, [authors+40h]; jumptable 00000000000076C4 default case", "mov     r9, [authors+38h]", "mov     edx, 5", "mov     rax, [authors+10h]", "mov     r8, [authors+8]", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     [rsp+58h+var_40], r10", "mov     [rsp+58h+var_48], r9", "mov     [rsp+58h+var_58], rax", "mov     [rsp+58h+var_50], r8", "mov     authors, [authors]", "jmp     loc_77BA"], ["mov~r10,[authors+0]", "mov~r9,[authors+0]", "mov~edx,0", "mov~rax,[authors+0]", "mov~r8,[authors+0]", "lea~rsi,<TAG>", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~<TAG>,rax", "mov~[rsp+0],r8", "mov~authors,<TAG>", "jmp~FOO"]], [1, 0, 2, 0, 0, 15, 0, 0, 4, -1, 0.002631578947368421, ["mov     r10, [authors+40h]; jumptable 00000000000076C4 case 9", "mov     r9, [authors+38h]", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     rax, [authors+10h]", "mov     r8, [authors+8]", "mov     edx, 5; category", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     authors, [authors]", "mov     [rsp+58h+var_40], r10", "mov     [rsp+58h+var_48], r9", "mov     [rsp+58h+var_58], rax", "mov     [rsp+58h+var_50], r8"], ["mov~r10,[authors+0]", "mov~r9,[authors+0]", "lea~rsi,<TAG>", "mov~rax,[authors+0]", "mov~r8,[authors+0]", "mov~edx,0", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~authors,<TAG>", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~<TAG>,rax", "mov~[rsp+0],r8"]], [1, 0, 18, 0, 1, 7, 1, 2, 1, 3, 0.02236842105263158, ["mov     r8, version", "mov     version, package", "lea     package, aSS_0; \"%s %s\\n\"", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_765C"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 1, 20, 1, 0, 12, 1, 1, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, n_authors", "push    rbp", "push    rbx", "mov     rbp, stream", "mov     rbx, authors", "sub     rsp, 28h", "test    command_name, command_name", "jz      loc_76D0"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,n_authors", "push~rbp", "push~rbx", "mov~rbp,stream", "mov~rbx,authors", "sub~rsp,<STR>", "test~command_name,command_name", "jz~FOO"]], [2, 1, 1, 1, 1, 20, 2, 2, 4, -1, 0.002631578947368421, ["mov     n_authors, [authors+8]; jumptable 00000000000076C4 case 2", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "mov     authors, [authors]", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     r8, r12", "mov     rcx, rbx", "mov     rdi, stream", "mov     rdx, rax", "mov     esi, 1", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~n_authors,[authors+0]", "lea~rsi,<TAG>", "mov~authors,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,<STR>", "mov~r8,r12", "mov~rcx,rbx", "mov~rdi,stream", "mov~rdx,rax", "mov~esi,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "xor~eax,eax", "jmp~FOO"]], [1, 0, 1, 0, 1, 19, 1, 2, 4, -1, 0.006578947368421052, ["mov     r9, [authors+10h]; jumptable 00000000000076C4 case 7", "mov     r13, [authors+30h]", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "mov     n_authors, [authors+28h]", "mov     r15, [authors+20h]", "mov     edx, 5; category", "mov     r14, [authors+18h]", "mov     r8, [authors+8]", "xor     edi, edi; domainname", "mov     [rsp+58h+var_50], r9", "mov     authors, [authors]", "mov     [rsp+58h+var_58], r8", "call    _dcgettext", "push    r13", "push    r12", "push    r15", "push    r14", "mov     r9, [rsp+78h+var_50]", "jmp     short loc_7963"], ["mov~r9,[authors+0]", "mov~r13,[authors+0]", "lea~rsi,<TAG>", "mov~n_authors,[authors+0]", "mov~r15,[authors+0]", "mov~edx,0", "mov~r14,[authors+0]", "mov~r8,[authors+0]", "xor~edi,edi", "mov~[rsp+0],r9", "mov~authors,<TAG>", "mov~<TAG>,r8", "call~FOO", "push~r13", "push~r12", "push~r15", "push~r14", "mov~r9,[rsp+0]", "jmp~FOO"]], [1, 2, 0, 2, 1, 16, 1, 1, 5, -1, 0.0, ["mov     r8, [rsp+78h+var_58]", "mov     rcx, rbx", "mov     rdx, rax", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 20h", "add     rsp, 28h", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "call~FOO", "add~rsp,<STR>", "add~rsp,<STR>", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 18, 0, 1, 7, 1, 1, 1, 3, 0.024999999999999998, ["mov     authors, package", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     n_authors, version", "xor     eax, eax", "mov     version, command_name", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~authors,package", "lea~package,<TAG>", "mov~n_authors,version", "xor~eax,eax", "mov~version,command_name", "mov~esi,0", "call~FOO"]], [2, 1, 1, 1, 1, 22, 2, 2, 4, -1, 0.002631578947368421, ["mov     r13, [authors+10h]; jumptable 00000000000076C4 case 3", "mov     n_authors, [authors+8]", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "mov     authors, [authors]", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdi, stream", "mov     rdx, rax", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "lea~rsi,<TAG>", "mov~authors,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,<STR>", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdi,stream", "mov~rdx,rax", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [1, 1, 0, 1, 1, 19, 1, 1, 5, -1, 0.0, ["push    r14", "mov     rdx, rax", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "pop     rax", "pop     rdx", "add     rsp, 28h", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["push~r14", "mov~rdx,rax", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "call~FOO", "pop~rax", "pop~rdx", "add~rsp,<STR>", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [2, 1, 0, 2, 1, 23, 1, 1, 5, -1, 0.0, ["mov     r9, [rsp+60h+var_48]", "mov     rcx, rbx", "mov     rdx, rax", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "push    r9", "push    r13", "push    r12", "push    r15", "push    r14", "mov     r9, [rsp+88h+var_58]", "mov     r8, [rsp+88h+var_50]", "call    ___fprintf_chk", "add     rsp, 30h", "add     rsp, 28h", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~r9,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "push~r9", "push~r13", "push~r12", "push~r15", "push~r14", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "call~FOO", "add~rsp,0", "add~rsp,<STR>", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [2, 1, 1, 1, 1, 18, 2, 2, 4, -1, 0.002631578947368421, ["mov     authors, [authors]; jumptable 00000000000076C4 case 1", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     rcx, rbx", "mov     rdi, stream", "pop     rbx", "pop     stream", "pop     n_authors", "pop     r13", "pop     r14", "pop     r15", "mov     rdx, rax", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~authors,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,<STR>", "mov~rcx,rbx", "mov~rdi,stream", "pop~rbx", "pop~stream", "pop~n_authors", "pop~r13", "pop~r14", "pop~r15", "mov~rdx,rax", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    _abort; jumptable 00000000000076C4 case 0"], ["call~FOO"]]], "func_feature": [19, 21, 30, 4, 21, 28, 3, 276, 0.0183, 16, 13], "succs": [[16], [0, 2, 3, 5, 8, 11, 12, 15, 18, 20], [17], [16], [1, 7], [13], [17], [6], [6], [4], [9, 14], [19], [13], [], [19, 4], [19], [], [], [19], [], []], "fname": "version_etc_arn", "n_num": 21}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0.08333333333333333, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 4, 0, 0, 3, 1, 1, 0, 1, 0.0, ["xor     r9d, r9d", "cmp     qword ptr [authors], 0", "jz      short loc_7A4B"], ["xor~r9d,r9d", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0.25, ["jmp     version_etc_arn"], ["jmp~FOO"]], [2, 0, 3, 1, 0, 3, 0, 1, 2, 1, 0.16666666666666666, ["add     n_authors, 1; n_authors", "cmp     qword ptr [authors+n_authors*8], 0", "jnz     short loc_7A40"], ["add~n_authors,0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []]], "func_feature": [0, 1, 3, 0, 5, 6, 0, 8, 0.1, 0, 1], "succs": [[3], [0, 2], [4], [2, 3], []], "fname": "version_etc_ar", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[1, 0, 8, 2, 0, 4, 0, 0, 0, 0, 0.09821428571428571, ["mov     r11d, eax", "add     r11, [authors+10h]", "add     eax, 8", "mov     [authors], eax"], ["mov~r11d,eax", "add~r11,[authors+0]", "add~eax,0", "mov~<TAG>,eax"]], [1, 0, 8, 0, 0, 3, 0, 1, 1, 1, 0.25, ["mov     eax, [authors]", "cmp     eax, 2Fh ; '/'", "ja      short loc_7ABA"], ["mov~eax,<TAG>", "cmp~eax,0", "ja~FOO"]], [0, 0, 8, 0, 0, 4, 0, 1, 2, 0, 0.09821428571428571, ["mov     r11, [authors+8]", "lea     rax, [r11+8]", "mov     [authors+8], rax", "jmp     short loc_7A85"], ["mov~r11,[authors+0]", "lea~rax,[r11+0]", "mov~[authors+0],rax", "jmp~FOO"]], [1, 0, 8, 1, 0, 8, 2, 0, 0, 2, 0.0, ["sub     rsp, 68h", "mov     r10, authors", "xor     r9d, r9d", "mov     rax, fs:28h", "mov     [rsp+68h+var_10], rax", "xor     eax, eax", "mov     authors, rsp; authors", "nop     dword ptr [rax]"], ["sub~rsp,0", "mov~r10,authors", "xor~r9d,r9d", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~authors,rsp", "nop~<TAG>"]], [0, 0, 2, 0, 1, 4, 1, 2, 4, -1, 0.21428571428571427, ["call    version_etc_arn", "mov     rax, [rsp+68h+var_10]", "xor     rax, fs:28h", "jnz     short loc_7AB5"], ["call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 8, 0, 0, 4, 1, 1, 3, 3, 0.3571428571428571, ["mov     rax, [r11]", "test    rax, rax", "mov     [r8+n_authors*8], rax", "jz      short loc_7A9B"], ["mov~rax,<TAG>", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [2, 0, 8, 1, 0, 3, 0, 1, 4, 2, 0.125, ["add     n_authors, 1; n_authors", "cmp     n_authors, 0Ah", "jnz     short loc_7A70"], ["add~n_authors,0", "cmp~n_authors,0", "jnz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 5, -1, 0.0, ["add     rsp, 68h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 4, 7, 1, 9, 11, 1, 33, 0.12698, 1, 5], "succs": [[5], [0, 2], [5], [1], [8, 7], [4, 6], [1, 4], [], []], "fname": "version_etc_va", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 10, 0, 0, 4, 1, 1, 0, 0, 0.3111111111111111, ["mov     rax, [rax]", "test    rax, rax", "mov     [r8+r9*8], rax", "jz      short loc_7B6C"], ["mov~rax,<TAG>", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [1, 0, 10, 1, 0, 3, 0, 1, 2, 0, 0.08333333333333334, ["mov     rax, rbx", "add     rbx, 8", "jmp     short loc_7B56"], ["mov~rax,rbx", "add~rbx,0", "jmp~FOO"]], [2, 0, 10, 2, 0, 4, 0, 0, 2, 4, 0.08333333333333334, ["mov     eax, r10d", "mov     r11d, 1", "add     r10d, 8", "add     rax, rbp"], ["mov~eax,r10d", "mov~r11d,0", "add~r10d,0", "add~rax,rbp"]], [1, 0, 10, 0, 0, 2, 0, 1, 1, 1, 0.17777777777777778, ["cmp     r10d, 2Fh ; '/'", "ja      short loc_7B9C"], ["cmp~r10d,0", "ja~FOO"]], [2, 0, 10, 1, 0, 3, 0, 1, 4, 2, 0.07777777777777778, ["add     r9, 1; n_authors", "cmp     r9, 0Ah", "jnz     short loc_7B40"], ["add~r9,0", "cmp~r9,0", "jnz~FOO"]], [1, 2, 10, 1, 0, 20, 3, 0, 0, 2, 0.0, ["push    rbp", "push    rbx", "mov     r10d, 20h ; ' '", "xor     r11d, r11d", "sub     rsp, 0B8h", "mov     rax, fs:28h", "mov     [rsp+0C8h+var_50], rax", "xor     eax, eax", "lea     rax, [rsp+0C8h+arg_0]", "mov     [rsp+0C8h+var_28], r8", "lea     rbx, [rsp+0C8h+arg_0]", "lea     r8, [rsp+0C8h+var_A8]; authors", "mov     [rsp+0C8h+var_20], r9", "mov     [rsp+0C8h+authors.gp_offset], 20h ; ' '", "mov     [rsp+0C8h+authors.overflow_arg_area], rax", "lea     rax, [rsp+0C8h+var_48]", "xor     r9d, r9d", "mov     [rsp+0C8h+authors.reg_save_area], rax", "mov     rbp, rax", "nop     word ptr [rax+rax+00000000h]"], ["push~rbp", "push~rbx", "mov~r10d,<STR>", "xor~r11d,r11d", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "mov~[rsp+0],r8", "lea~rbx,[rsp+0]", "lea~r8,[rsp+0]", "mov~[rsp+0],r9", "mov~[rsp+0],<STR>", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "xor~r9d,r9d", "mov~[rsp+0],rax", "mov~rbp,rax", "nop~[ord ptr [rax+0]"]], [0, 0, 4, 0, 0, 2, 1, 1, 4, -1, 0.26666666666666666, ["test    r11b, r11b", "jnz     short loc_7B95"], ["test~r11b,r11b", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 1, 4, 1, 2, 5, -1, 0.17777777777777778, ["call    version_etc_arn", "mov     rax, [rsp+0C8h+var_50]", "xor     rax, fs:28h", "jnz     short loc_7B90"], ["call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 5, -1, 0.0, ["mov     [rsp+0C8h+authors.gp_offset], r10d", "jmp     short loc_7B71"], ["mov~[rsp+0],r10d", "jmp~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 6, -1, 0.0, ["add     rsp, 0B8h", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]]], "func_feature": [2, 6, 9, 5, 11, 14, 0, 49, 0.10707, 1, 6], "succs": [[4, 6], [0], [0], [1, 2], [3, 6], [3], [8, 9], [], [10, 7], [8], []], "fname": "version_etc", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[5, 0, 1, 0, 5, 29, 5, 6, 0, 0, 0.0, ["push    rbx", "lea     rsi, aReportBugsToS; \"\\nReport bugs to: %s\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "lea     rdx, aBugCoreutilsGn; \"bug-coreutils@gnu.org\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "lea     rsi, aSHomePageS; \"%s home page: <%s>\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "lea     rcx, aHttpWwwGnuOrgS; \"http://www.gnu.org/software/coreutils/\"", "lea     rdx, unk_9002", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aGeneralHelpUsi; \"General help using GNU software: <http:\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "pop     rbx", "jmp     _fputs_unlocked"], ["push~rbx", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "pop~rbx", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [5, 5, 6, 0, 2, 1, 0, 29, 0.0, 7, 0], "succs": [[1], []], "fname": "emit_bug_reporting_address", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[2, 0, 0, 1, 3, 12, 3, 3, 0, 0, 0.0, ["lea     rsi, aMemoryExhauste; \"memory exhausted\"", "sub     rsp, 8", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     edi, cs:exit_failure; status", "lea     rdx, format+4; format", "mov     rcx, rax", "xor     esi, esi; errnum", "xor     eax, eax", "call    _error", "call    _abort"], ["lea~rsi,<TAG>", "sub~rsp,0", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~edi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "xor~esi,esi", "xor~eax,eax", "call~FOO", "call~FOO"]]], "func_feature": [3, 3, 3, 0, 1, 0, 4, 12, 0.0, 3, 1], "succs": [[]], "fname": "xalloc_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     edi, 1; status", "jmp     usage"], ["mov~edi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[1], []], "fname": "__argmatch_die", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[1, 0, 12, 2, 1, 11, 1, 1, 0, 0, 0.03311965811965811, ["mov     rdi, [rsp+58h+var_58]", "mov     rdx, valsize; n", "mov     rsi, rbp; s2", "imul    rdi, valsize", "add     rdi, rax; s1", "call    _memcmp", "test    eax, eax", "movzx   eax, [rsp+58h+ambiguous]", "mov     ecx, 1", "cmovnz  eax, ecx", "mov     [rsp+58h+ambiguous], al"], ["mov~rdi,<TAG>", "mov~rdx,valsize", "mov~rsi,rbp", "imul~rdi,valsize", "add~rdi,rax", "call~FOO", "test~eax,eax", "movzx~eax,[rsp+0]", "mov~ecx,0", "cmovnz~eax,ecx", "mov~[rsp+0],al"]], [0, 0, 12, 0, 0, 3, 1, 1, 5, 5, 0.1111111111111111, ["mov     rax, [rsp+58h+vallist]", "test    rax, rax", "jz      loc_7D80"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 12, 0, 0, 4, 1, 1, 1, 3, 0.07051282051282051, ["mov     r12, arglen", "mov     [rsp+58h+ambiguous], 0", "xor     ebx, ebx", "jmp     short loc_7D17"], ["mov~r12,arglen", "mov~[rsp+0],0", "xor~ebx,ebx", "jmp~FOO"]], [1, 1, 13, 1, 1, 17, 1, 2, 0, 4, 0.0, ["push    r15", "push    r14", "mov     r15, arglist", "push    r13", "push    r12", "mov     r13, valsize", "push    rbp", "push    rbx", "mov     rbp, vallist_0", "sub     rsp, 28h", "mov     [rsp+58h+arg], arg_0", "mov     [rsp+58h+vallist], vallist_0", "call    _strlen", "mov     r14, [arglist]", "mov     [rsp+58h+var_58], 0FFFFFFFFFFFFFFFFh", "test    r14, r14", "jz      loc_7D6D"], ["push~r15", "push~r14", "mov~r15,arglist", "push~r13", "push~r12", "mov~r13,valsize", "push~rbp", "push~rbx", "mov~rbp,vallist_0", "sub~rsp,<STR>", "mov~[rsp+0],arg_0", "mov~[rsp+0],vallist_0", "call~FOO", "mov~r14,<TAG>", "mov~<TAG>,0", "test~r14,r14", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 6, 4, 0.03311965811965811, ["mov     [rsp+58h+ambiguous], 1", "jmp     short loc_7D07"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 12, 0, 1, 6, 1, 2, 2, 2, 0.3696581196581197, ["mov     rsi, [rsp+58h+arg]; s2", "mov     rdx, arglen; n", "mov     rdi, r14; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_7D07"], ["mov~rsi,[rsp+0]", "mov~rdx,arglen", "mov~rdi,r14", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 12, 2, 0, 6, 1, 1, 5, 3, 0.10683760683760685, ["mov     [rsp+58h+var_58], i", "add     matchind, 1", "add     rbp, valsize", "mov     r14, [arglist+i*8]", "test    r14, r14", "jnz     short loc_7D17"], ["mov~<TAG>,i", "add~matchind,0", "add~rbp,valsize", "mov~r14,<TAG>", "test~r14,r14", "jnz~FOO"]], [1, 0, 12, 2, 0, 5, 1, 1, 3, 3, 0.20512820512820512, ["add     i, 1", "add     rbp, valsize", "mov     r14, [arglist+i*8]", "test    r14, r14", "jz      short loc_7D58"], ["add~i,0", "add~rbp,valsize", "mov~r14,<TAG>", "test~r14,r14", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 4, 4, 0.26282051282051283, ["cmp     [rsp+58h+var_58], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_7CD0"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 6, -1, 0.03205128205128205, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 12, 0, 1, 4, 0, 2, 3, 1, 0.3269230769230769, ["mov     rdi, r14; s", "call    _strlen", "cmp     rax, arglen", "jz      short loc_7D90"], ["mov~rdi,r14", "call~FOO", "cmp~rax,arglen", "jz~FOO"]], [2, 0, 1, 0, 0, 4, 0, 0, 4, -1, 0.05128205128205128, ["cmp     [rsp+58h+ambiguous], 0", "mov     rax, 0FFFFFFFFFFFFFFFEh", "cmovz   rax, [rsp+58h+var_58]", "mov     [rsp+58h+var_58], rax"], ["cmp~[rsp+0],0", "mov~rax,0", "cmovz~rax,<TAG>", "mov~<TAG>,rax"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, 0, 0.01282051282051282, ["mov     [rsp+58h+var_58], i", "jmp     short loc_7D6D"], ["mov~<TAG>,i", "jmp~FOO"]], [0, 1, 0, 1, 0, 9, 0, 0, 1, -1, 0.0, ["mov     rax, [rsp+58h+var_58]", "add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     r12", "pop     valsize", "pop     r14", "pop     arglist", "retn"], ["mov~rax,<TAG>", "add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~valsize", "pop~r14", "pop~arglist", "retn"]]], "func_feature": [4, 7, 14, 1, 14, 20, 2, 76, 0.11538, 0, 8], "succs": [[7], [0, 4], [5], [2, 13], [7], [10, 7], [9, 5], [11, 5], [1, 6], [11], [8, 12], [13], [13], []], "fname": "argmatch", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[2, 0, 1, 0, 2, 18, 4, 3, 0, 0, 0.25, ["mov     rsi, context; name", "mov     edi, 1; n", "call    quote_n", "mov     rdx, value; arg", "mov     context, rax", "mov     esi, 6; s", "xor     edi, edi; n", "call    quotearg_n_style", "mov     r8, rbp", "mov     rdx, format; format", "mov     rcx, rax", "pop     format", "pop     rbp", "pop     value", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "jmp     _error"], ["mov~rsi,context", "mov~edi,0", "call~FOO", "mov~rdx,value", "mov~context,rax", "mov~esi,0", "xor~edi,edi", "call~FOO", "mov~r8,rbp", "mov~rdx,format", "mov~rcx,rax", "pop~format", "pop~rbp", "pop~value", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "jmp~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 1, 0, 0.08333333333333333, ["lea     value, aInvalidArgumen; \"invalid argument %s for %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax", "jmp     short loc_7DC6"], ["lea~value,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbx,rax", "jmp~FOO"]], [0, 0, 2, 0, 1, 4, 1, 1, 1, -1, 0.08333333333333333, ["lea     value, aAmbiguousArgum; \"ambiguous argument %s for %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax"], ["lea~value,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbx,rax"]], [2, 0, 4, 0, 0, 8, 0, 1, 0, 1, 0.0, ["cmp     problem, 0FFFFFFFFFFFFFFFFh", "push    r12", "mov     edx, 5; category", "push    rbp", "mov     r12, value", "push    rbx", "mov     rbp, context", "jz      short loc_7E00"], ["cmp~problem,0", "push~r12", "mov~edx,0", "push~rbp", "mov~r12,value", "push~rbx", "mov~rbp,context", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []]], "func_feature": [4, 6, 7, 0, 5, 5, 1, 35, 0.08333, 2, 0], "succs": [[4], [0], [0], [1, 2], []], "fname": "argmatch_invalid", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [2, 0, 1, 1, 0, 9, 0, 1, 2, 0, 0.08888888888888889, ["add     rsp, 18h", "mov     esi, 0Ah; int", "pop     rbx", "pop     rbp", "pop     valsize", "pop     r13", "pop     arglist", "pop     r15", "jmp     ___overflow"], ["add~rsp,0", "mov~esi,0", "pop~rbx", "pop~rbp", "pop~valsize", "pop~r13", "pop~arglist", "pop~r15", "jmp~FOO"]], [3, 0, 10, 1, 2, 22, 3, 3, 0, 2, 0.0, ["push    r15", "push    r14", "mov     r14, arglist", "push    r13", "push    r12", "xor     edi, edi; domainname", "push    rbp", "push    rbx", "mov     rbp, vallist", "lea     vallist, aValidArguments; \"Valid arguments are:\"", "mov     r12, valsize", "mov     edx, 5; category", "sub     rsp, 18h", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "mov     rcx, [arglist]", "test    rcx, rcx", "jz      loc_7EF0"], ["push~r15", "push~r14", "mov~r14,arglist", "push~r13", "push~r12", "xor~edi,edi", "push~rbp", "push~rbx", "mov~rbp,vallist", "lea~vallist,<TAG>", "mov~r12,valsize", "mov~edx,0", "sub~rsp,0", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~rcx,<TAG>", "test~rcx,rcx", "jz~FOO"]], [0, 0, 9, 0, 1, 8, 1, 2, 3, 3, 0.08888888888888889, ["mov     rdx, valsize; n", "mov     rsi, rbp; s2", "mov     rdi, last_val; s1", "mov     [rsp+48h+var_40], rcx", "call    _memcmp", "test    eax, eax", "mov     rcx, [rsp+48h+var_40]", "jnz     short loc_7E78"], ["mov~rdx,valsize", "mov~rsi,rbp", "mov~rdi,last_val", "mov~[rsp+0],rcx", "call~FOO", "test~eax,eax", "mov~rcx,[rsp+0]", "jnz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 2, 3, 0.18888888888888888, ["test    i, i", "mov     r15, cs:stderr@@GLIBC_2_2_5", "jz      short loc_7E78"], ["test~i,i", "mov~r15,<TAG>", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 2, 1, 1, 4, 0.05555555555555556, ["xor     r13d, r13d", "xor     ebx, ebx", "jmp     short loc_7EA1"], ["xor~r13d,r13d", "xor~ebx,ebx", "jmp~FOO"]], [2, 0, 9, 2, 1, 10, 2, 2, 4, 3, 0.061111111111111116, ["lea     rdx, aS; \", `%s'\"", "xor     eax, eax", "add     i, 1", "mov     esi, 1", "mov     rdi, r15", "add     rbp, valsize", "call    ___fprintf_chk", "mov     rcx, [arglist+i*8]", "test    rcx, rcx", "jnz     short loc_7EA1"], ["lea~rdx,<TAG>", "xor~eax,eax", "add~i,0", "mov~esi,0", "mov~rdi,r15", "add~rbp,valsize", "call~FOO", "mov~rcx,<TAG>", "test~rcx,rcx", "jnz~FOO"]], [2, 0, 9, 2, 1, 11, 2, 2, 3, 2, 0.1388888888888889, ["lea     rdx, aS_0; \"\\n  - `%s'\"", "xor     eax, eax", "add     i, 1", "mov     esi, 1", "mov     rdi, r15", "mov     last_val, rbp", "call    ___fprintf_chk", "mov     rcx, [arglist+i*8]", "add     last_val, valsize", "test    rcx, rcx", "jz      short loc_7EF0"], ["lea~rdx,<TAG>", "xor~eax,eax", "add~i,0", "mov~esi,0", "mov~rdi,r15", "mov~last_val,rbp", "call~FOO", "mov~rcx,<TAG>", "add~last_val,valsize", "test~rcx,rcx", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 5, 2, 0.044444444444444446, ["nop"], ["nop"]], [0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 0.23333333333333334, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_7F20"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [2, 0, 0, 1, 0, 11, 0, 0, 2, -1, 0.0, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah", "add     rsp, 18h", "pop     rbx", "pop     rbp", "pop     valsize", "pop     r13", "pop     arglist", "pop     r15", "retn"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~valsize", "pop~r13", "pop~arglist", "pop~r15", "retn"]]], "func_feature": [5, 11, 12, 1, 11, 15, 1, 82, 0.08182, 4, 7], "succs": [[], [0], [9, 5], [6, 7], [3, 7], [4], [8, 4], [9, 4], [9], [1, 10], []], "fname": "argmatch_valid", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[1, 0, 0, 1, 0, 8, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "pop     arglist", "pop     vallist", "pop     arg", "pop     exit_fn", "pop     context", "pop     valsize", "retn"], ["add~rsp,0", "pop~arglist", "pop~vallist", "pop~arg", "pop~exit_fn", "pop~context", "pop~valsize", "retn"]], [1, 0, 1, 0, 3, 11, 0, 4, 1, 0, 0.0, ["mov     rdx, res; problem", "mov     rsi, arg; value", "mov     rdi, context; context", "call    argmatch_invalid", "mov     rdx, valsize; valsize", "mov     rsi, vallist; vallist", "mov     rdi, arglist; arglist", "call    argmatch_valid", "call    exit_fn", "mov     rax, 0FFFFFFFFFFFFFFFFh", "jmp     short loc_7F76"], ["mov~rdx,res", "mov~rsi,arg", "mov~rdi,context", "call~FOO", "mov~rdx,valsize", "mov~rsi,vallist", "mov~rdi,arglist", "call~FOO", "call~exit_fn", "mov~rax,0", "jmp~FOO"]], [1, 0, 2, 1, 1, 20, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r14, context", "push    r13", "push    r12", "mov     r12, arg", "push    rbp", "push    rbx", "mov     rbp, vallist", "mov     rbx, arglist", "mov     vallist, valsize; valsize", "mov     arglist, vallist; vallist", "sub     rsp, 8", "mov     arg, arglist; arglist", "mov     context, arg; arg", "mov     r15, valsize", "mov     r13, exit_fn", "call    argmatch", "test    res, res", "js      short loc_7F85"], ["push~r15", "push~r14", "mov~r14,context", "push~r13", "push~r12", "mov~r12,arg", "push~rbp", "push~rbx", "mov~rbp,vallist", "mov~rbx,arglist", "mov~vallist,valsize", "mov~arglist,vallist", "sub~rsp,0", "mov~arg,arglist", "mov~context,arg", "mov~r15,valsize", "mov~r13,exit_fn", "call~FOO", "test~res,res", "js~FOO"]]], "func_feature": [4, 1, 6, 0, 3, 3, 0, 39, 0.0, 0, 2], "succs": [[], [0], [0, 1]], "fname": "__xargmatch_internal", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 3, 0, 1, 6, 1, 2, 0, 0, 0.25, ["mov     rdx, valsize; n", "mov     rsi, rbp; s2", "mov     rdi, value; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_7FD0"], ["mov~rdx,valsize", "mov~rsi,rbp", "mov~rdi,value", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 1, 2, 0.16666666666666666, ["mov     r12, valsize", "mov     r13, value", "mov     rbp, vallist", "lea     rbx, [arglist+8]", "jmp     short loc_7FDF"], ["mov~r12,valsize", "mov~r13,value", "mov~rbp,vallist", "lea~rbx,[arglist+0]", "jmp~FOO"]], [1, 0, 3, 2, 0, 5, 1, 1, 3, 1, 0.0, ["mov     r14, [rbx]", "add     rbp, valsize", "add     rbx, 8", "test    r14, r14", "jz      short loc_7FF1"], ["mov~r14,<TAG>", "add~rbp,valsize", "add~rbx,0", "test~r14,r14", "jz~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 1, 0, 0.0, ["pop     rbx", "mov     rax, r14", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "retn"], ["pop~rbx", "mov~rax,r14", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "retn"]], [0, 0, 4, 0, 0, 8, 1, 1, 0, 1, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     r14, [arglist]", "test    r14, r14", "jz      short loc_7FF1"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~r14,<TAG>", "test~r14,r14", "jz~FOO"]]], "func_feature": [1, 3, 5, 0, 5, 7, 0, 31, 0.08333, 0, 2], "succs": [[2, 3], [0], [0, 3], [], [1, 3]], "fname": "argmatch_to_argument", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 0, 0, 0, 0.16666666666666666, ["xor     ebx, ebx", "nop     dword ptr [rax+rax+00000000h]"], ["xor~ebx,ebx", "nop~[word ptr [rax+0]"]], [2, 0, 3, 2, 1, 17, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15, rdx", "push    r13", "push    r12", "lea     r12, __frame_dummy_init_array_entry", "push    rbp", "lea     rbp, __do_global_dtors_aux_fini_array_entry", "push    rbx", "mov     r13d, edi", "mov     r14, rsi", "sub     rbp, r12", "sub     rsp, 8", "sar     rbp, 3", "call    _init_proc", "test    rbp, rbp", "jz      short loc_8056"], ["push~r15", "push~r14", "mov~r15,rdx", "push~r13", "push~r12", "lea~r12,<TAG>", "push~rbp", "lea~rbp,<TAG>", "push~rbx", "mov~r13d,edi", "mov~r14,rsi", "sub~rbp,r12", "sub~rsp,0", "sar~rbp,0", "call~FOO", "test~rbp,rbp", "jz~FOO"]], [1, 0, 2, 1, 1, 7, 0, 2, 2, 1, 0.16666666666666666, ["mov     rdx, r15", "mov     rsi, r14", "mov     edi, r13d", "call    qword ptr [r12+rbx*8]", "add     rbx, 1", "cmp     rbp, rbx", "jnz     short loc_8040"], ["mov~rdx,r15", "mov~rsi,r14", "mov~edi,r13d", "call~<TAG>", "add~rbx,0", "cmp~rbp,rbx", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 5, 0, 34, 0.08333, 2, 4], "succs": [[2], [0, 3], [2, 3], []], "fname": "__libc_csu_init", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_csu_fini", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rdx, cs:__dso_handle", "xor     esi, esi", "jmp     ___cxa_atexit"], ["mov~rdx,<TAG>", "xor~esi,esi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 1, 3, 0.0, 1, 0], "succs": [[1], []], "fname": "atexit", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[2, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0.0, ["sub     rsp, 8; _fini", "add     rsp, 8", "retn"], ["sub~rsp,0", "add~rsp,0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 2], "succs": [[]], "fname": "term_proc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_toupper_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_toupper_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getenv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigprocmask:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigprocmask", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn raise:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "raise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn free:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn abort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __errno_location:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fdatasync:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fdatasync", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strncmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fpending:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigaction_0:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigaction_0", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn localeconv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "localeconv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fcntl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn clock_gettime:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "clock_gettime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn write:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "write", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn textdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fclose:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn bindtextdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dcgettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_get_mb_cur_max:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strlen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __stack_chk_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getopt_long:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbrtowc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dup2:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dup2", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __overflow:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__overflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strrchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ftruncate:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ftruncate", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn lseek:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn gettimeofday:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "gettimeofday", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __assert_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __strtoul_internal:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__strtoul_internal", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ioctl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn close:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn posix_fadvise:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "posix_fadvise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn read:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "read", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __libc_start_main:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_start_main", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fputs_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn calloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __memcpy_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__memcpy_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigemptyset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigemptyset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn malloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn realloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn setlocale:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __printf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memmove:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn error:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fsync:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fsync", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn open:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dcngettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dcngettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __cxa_atexit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getpagesize:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getpagesize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigismember:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigismember", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fwrite:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbsinit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswprint:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp___cxa_finalize:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp___cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigaddset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigaddset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_tolower_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_tolower_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_b_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __sprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__sprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __gmon_start__:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__gmon_start__", "n_num": 1}
