{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    rax ; __gmon_start__"], ["call~rax"]], [1, 0, 2, 1, 0, 4, 1, 1, 0, 1, 0.0, ["sub     rsp, 8; _init", "mov     rax, cs:__gmon_start___ptr", "test    rax, rax", "jz      short loc_19FA"], ["sub~rsp,0", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 3, 1, 7, 0.0, 1, 2], "succs": [[2], [0, 2], []], "fname": "init_proc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0.0, ["push    cs:qword_210D70", "jmp     cs:qword_210D78"], ["push~<TAG>", "jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 73, 2, 0.0, 2, 0], "succs": [[]], "fname": "sub_1A00", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_toupper_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_toupper_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getenv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "getenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigprocmask_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigprocmask", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__snprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 8, 1, 0.0, 1, 0], "succs": [[]], "fname": "__snprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:raise_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "raise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:free_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 29, 1, 0.0, 1, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:abort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 11, 1, 0.0, 1, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__errno_location_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 40, 1, 0.0, 1, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fdatasync_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fdatasync", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:error_at_line_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "error_at_line", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strncmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fpending_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigaction_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigaction", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:localeconv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "localeconv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fcntl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:clock_gettime_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "clock_gettime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:write_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "write", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:textdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fclose_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:bindtextdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dcgettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 96, 1, 0.0, 1, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_get_mb_cur_max_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strlen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 18, 1, 0.0, 1, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__stack_chk_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 31, 1, 0.0, 1, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getopt_long_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbrtowc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dup2_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "dup2", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__overflow_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "__overflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strrchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ftruncate_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "ftruncate", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:lseek_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 8, 1, 0.0, 1, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__assert_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__strtoul_internal_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__strtoul_internal", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ioctl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:close_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:posix_fadvise_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "posix_fadvise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:read_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "read", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fputs_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 25, 1, 0.0, 1, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:calloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__memcpy_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__memcpy_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigemptyset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigemptyset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 18, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fileno_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:malloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 13, 1, 0.0, 1, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fflush_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:nl_langinfo_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__freading_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:realloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 11, 1, 0.0, 1, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:setlocale_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__printf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memmove_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:error_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fsync_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fsync", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:open_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fseeko_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dcngettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "dcngettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_atexit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpagesize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpagesize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigismember_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigismember", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fwrite_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 17, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbsinit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswprint_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigaddset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigaddset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_tolower_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_tolower_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_b_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__sprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "__sprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_finalize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 57, 0, 1, 5, 0, 2, 0, 0, 9.419470770657624e-05, ["lea     rdi, saved_char; buf", "mov     esi, 1; nread", "call    copy_with_unblock", "mov     esi, cs:conversions_mask", "jmp     loc_320F"], ["lea~rdi,<TAG>", "mov~esi,0", "call~FOO", "mov~esi,<TAG>", "jmp~FOO"]], [1, 0, 60, 0, 0, 2, 1, 1, 35, -1, 0.03432672521230037, ["and     sil, 10h", "jnz     loc_37FB"], ["and~sil,0", "jnz~FOO"]], [2, 0, 365, 0, 1, 7, 1, 1, 4, 11, 0.0, ["mov     rsi, [rsp+118h+act]; act", "lea     rax, interrupt_handler", "xor     edx, edx; oact", "mov     edi, 2; sig", "mov     dword ptr [rsp+118h+stdout_stat.__glibc_reserved+10h], 0C0000000h", "mov     [rsp+118h+stdout_stat.st_dev], rax", "call    _sigaction"], ["mov~rsi,[rsp+0]", "lea~rax,<TAG>", "xor~edx,edx", "mov~edi,0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],rax", "call~FOO"]], [1, 0, 366, 0, 1, 5, 1, 2, 3, 11, 0.015911659855664725, ["lea     rdi, caught_signals; set", "mov     esi, 2; signo", "call    _sigismember", "test    eax, eax", "jz      short loc_201E"], ["lea~rdi,<TAG>", "mov~esi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 360, 0, 0, 3, 0, 1, 33, 10, 0.008791648126079405, ["movzx   edx, byte ptr [rdx]", "cmp     dl, 3Dh ; '='", "jz      loc_3A7F"], ["movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [0, 0, 360, 0, 0, 3, 1, 1, 32, 11, 0.007255549815787544, ["movzx   esi, byte ptr [rcx]", "test    sil, sil", "jz      loc_3817"], ["movzx~esi,<TAG>", "test~sil,sil", "jz~FOO"]], [1, 0, 360, 0, 0, 6, 1, 1, 22, 14, 0.1323184173243247, ["test    eax, eax", "lea     rdx, iread_fullblock", "lea     rax, iread", "mov     cs:warn_partial_read, 0", "cmovnz  rax, rdx", "jmp     loc_2284"], ["test~eax,eax", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~<TAG>,0", "cmovnz~rax,rdx", "jmp~FOO"]], [2, 0, 360, 0, 0, 5, 2, 1, 21, 15, 0.13766577842335956, ["mov     ebp, cs:conversions_mask", "mov     eax, ecx", "and     eax, 1", "test    ebp, 800h", "jnz     loc_3004"], ["mov~ebp,<TAG>", "mov~eax,ecx", "and~eax,0", "test~ebp,0", "jnz~FOO"]], [2, 0, 6, 0, 2, 9, 3, 2, 27, -1, 0.0021628554038779237, ["lea     rsi, aCannotCombineE; \"cannot combine excl and nocreat\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; fmt", "mov     edi, 1; status", "xor     eax, eax", "call    nl_error"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 226, 0, 0, 5, 2, 1, 26, -1, 0.07631945048256673, ["mov     eax, ebp", "and     eax, 3000h", "lea     edx, [rax-1]", "test    edx, eax", "jnz     loc_3A91"], ["mov~eax,ebp", "and~eax,0", "lea~edx,[rax-1]+0]", "test~edx,eax", "jnz~FOO"]], [0, 0, 360, 0, 0, 2, 1, 1, 34, 10, 0.0001304234414398748, ["test    dl, dl", "jz      loc_3A7F"], ["test~dl,dl", "jz~FOO"]], [0, 0, 145, 0, 0, 4, 0, 1, 40, -1, 0.07114236443207837, ["mov     r15, cs:ibuf", "mov     rdi, cs:obuf", "cmp     r15, rdi", "jz      loc_2EA7"], ["mov~r15,<TAG>", "mov~rdi,<TAG>", "cmp~r15,rdi", "jz~FOO"]], [2, 0, 145, 1, 0, 5, 1, 1, 39, -1, 0.052995391705069124, ["mov     esi, cs:conversions_mask", "add     cs:r_partial, 1", "mov     [rsp+118h+var_110], rbp", "test    esi, 400h", "jz      short loc_2820"], ["mov~esi,<TAG>", "add~<TAG>,0", "mov~[rsp+0],rbp", "test~esi,0", "jz~FOO"]], [2, 0, 145, 1, 0, 3, 0, 1, 39, -1, 0.023450859345564155, ["add     cs:r_full, 1", "mov     [rsp+118h+var_110], 0", "jmp     loc_2820"], ["add~<TAG>,0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 145, 0, 0, 3, 0, 1, 41, -1, 0.0010144045445323595, ["mov     [rsp+118h+var_110], rbp", "mov     rbp, r12", "jmp     loc_2820"], ["mov~[rsp+0],rbp", "mov~rbp,r12", "jmp~FOO"]], [0, 0, 145, 1, 1, 6, 0, 1, 42, -1, 0.0020650378227980177, ["mov     rdi, cs:ibuf", "add     rdi, rbp; s", "call    _memset", "mov     [rsp+118h+var_110], rbp", "mov     rbp, r12", "nop     dword ptr [rax+00000000h]"], ["mov~rdi,<TAG>", "add~rdi,rbp", "call~FOO", "mov~[rsp+0],rbp", "mov~rbp,r12", "nop~[word ptr [rax+0]"]], [1, 0, 360, 0, 0, 3, 0, 0, 33, 13, 0.013161898965307364, ["lea     rcx, aSCannotSeek+0Bh; \"seek\"", "mov     rdx, r13", "mov     esi, 73h ; 's'"], ["lea~rcx,<TAG>", "mov~rdx,r13", "mov~esi,0"]], [0, 0, 360, 0, 0, 1, 0, 1, 32, 14, 0.011346839405269107, ["jmp     loc_382B"], ["jmp~FOO"]], [0, 0, 145, 5, 1, 16, 0, 2, 45, -1, 0.009354259049937686, ["mov     r14, cs:output_blocksize", "mov     r13, cs:oc", "mov     rsi, r15; src", "mov     r12, r14", "sub     r12, r13", "cmp     r12, rbp", "cmova   r12, rbp", "add     rdi, r13; dest", "mov     rdx, r12; n", "sub     rbp, r12", "add     r15, r12", "add     r12, r13", "call    _memcpy", "cmp     r14, r12", "mov     cs:oc, r12", "ja      short loc_2BBD"], ["mov~r14,<TAG>", "mov~r13,<TAG>", "mov~rsi,r15", "mov~r12,r14", "sub~r12,r13", "cmp~r12,rbp", "cmova~r12,rbp", "add~rdi,r13", "mov~rdx,r12", "sub~rbp,r12", "add~r15,r12", "add~r12,r13", "call~FOO", "cmp~r14,r12", "mov~<TAG>,r12", "ja~FOO"]], [1, 0, 145, 0, 0, 2, 1, 1, 44, -1, 0.019414978407674695, ["and     ecx, 10h", "jz      loc_2BCD"], ["and~ecx,0", "jz~FOO"]], [0, 0, 145, 0, 0, 1, 0, 0, 47, -1, 4.347448047995827e-05, ["mov     rdi, cs:obuf"], ["mov~rdi,<TAG>"]], [1, 0, 145, 0, 0, 2, 0, 1, 41, -1, 0.044488885024490624, ["cmp     cs:translation_needed, 0", "jnz     loc_2D76"], ["cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 360, 2, 0, 4, 0, 1, 34, 12, 0.014813929223545779, ["add     rdx, 1", "add     rcx, 1", "cmp     [rdx-1], sil", "jnz     short loc_3864"], ["add~rdx,0", "add~rcx,0", "cmp~[rdx-1]+0],sil", "jnz~FOO"]], [0, 0, 360, 0, 0, 3, 1, 1, 35, 11, 0.0105208242761499, ["movzx   esi, byte ptr [rcx]", "test    sil, sil", "jnz     short loc_383A"], ["movzx~esi,<TAG>", "test~sil,sil", "jnz~FOO"]], [1, 0, 145, 0, 1, 6, 3, 2, 42, -1, 0.015653228221700528, ["xor     esi, esi; offset", "xor     edi, edi; fd", "mov     edx, 1; whence", "call    _lseek", "test    rax, rax", "js      loc_2CD7"], ["xor~esi,esi", "xor~edi,edi", "mov~edx,0", "call~FOO", "test~rax,rax", "js~FOO"]], [1, 0, 145, 0, 0, 4, 1, 1, 41, -1, 0.019113072293230553, ["mov     rax, r12", "shr     rax, 3Fh", "or      cs:input_offset_overflow, al", "jnz     loc_2E6A"], ["mov~rax,r12", "shr~rax,0", "or~<TAG>,al", "jnz~FOO"]], [0, 1, 145, 0, 0, 3, 1, 1, 42, -1, 0.03609106454511202, ["mov     ecx, cs:conversions_mask", "test    cl, 80h", "jnz     loc_2DB2"], ["mov~ecx,<TAG>", "test~cl,<STR>", "jnz~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 42, -1, 0.00626032518911399, ["test    rbp, rbp", "jz      loc_2844"], ["test~rbp,rbp", "jz~FOO"]], [0, 0, 145, 0, 0, 2, 0, 1, 43, -1, 0.014566366209701573, ["cmp     r12, rax", "jz      loc_2D2F"], ["cmp~r12,rax", "jz~FOO"]], [1, 0, 360, 0, 0, 3, 0, 1, 36, 10, 0.01205692258644176, ["movzx   edx, byte ptr [rdx]", "cmp     dl, 3Dh ; '='", "jz      loc_3A89"], ["movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [0, 0, 145, 1, 0, 2, 0, 1, 44, -1, 0.01076717966553633, ["sub     r12, rax", "js      loc_3547"], ["sub~r12,rax", "js~FOO"]], [0, 0, 360, 0, 0, 2, 1, 1, 37, 10, 5.0720227226617976e-05, ["test    dl, dl", "jz      loc_3A89"], ["test~dl,dl", "jz~FOO"]], [2, 0, 145, 1, 0, 3, 1, 1, 46, -1, 0.007100831811726516, ["add     r15, 1", "test    cl, 8", "jz      loc_285C"], ["add~r15,0", "test~cl,0", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 1, 1, 43, -1, 0.02153435933107266, ["test    cl, 8", "jnz     loc_2E25"], ["test~cl,0", "jnz~FOO"]], [0, 0, 145, 0, 0, 2, 0, 0, 45, -1, 0.003104802480943686, ["cmp     rbp, r12", "jb      loc_3547"], ["cmp~rbp,r12", "jb~FOO"]], [1, 0, 149, 0, 0, 2, 0, 1, 45, -1, 0.005724139929861171, ["cmp     cs:max_bytes, 0", "jz      loc_3303"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 150, 0, 0, 2, 0, 1, 44, -1, 0.053984436135988176, ["cmp     cs:max_records, 0", "jnz     short loc_26C2"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 360, 0, 0, 3, 0, 0, 35, 13, 0.0049814508883285515, ["lea     rcx, aCount; \"count\"", "mov     rdx, r13", "mov     esi, 63h ; 'c'"], ["lea~rcx,<TAG>", "mov~rdx,r13", "mov~esi,0"]], [1, 0, 145, 0, 1, 5, 0, 2, 45, -1, 0.007988435788192331, ["mov     rsi, rbp; nread", "mov     rdi, r15; buf", "call    copy_with_unblock", "cmp     cs:status_level, 4", "jnz     loc_26FD"], ["mov~rsi,rbp", "mov~rdi,r15", "call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 360, 2, 0, 4, 0, 1, 36, 12, 0.0065900066660870065, ["add     rdx, 1", "add     rcx, 1", "cmp     [rdx-1], sil", "jnz     loc_3921"], ["add~rdx,0", "add~rcx,0", "cmp~[rdx-1]+0],sil", "jnz~FOO"]], [0, 0, 360, 0, 0, 3, 1, 1, 37, 11, 0.008100744862765557, ["movzx   esi, byte ptr [rcx]", "test    sil, sil", "jnz     short loc_3873"], ["movzx~esi,<TAG>", "test~sil,sil", "jnz~FOO"]], [1, 0, 145, 0, 1, 7, 2, 1, 46, -1, 0.026204243109294843, ["mov     rdi, cs:input_file; filename", "xor     esi, esi; fdesc", "mov     ecx, 1; whence", "mov     rdx, r12; offset", "call    skip_via_lseek", "test    rax, rax", "jns     loc_2D2F"], ["mov~rdi,<TAG>", "xor~esi,esi", "mov~ecx,0", "mov~rdx,r12", "call~FOO", "test~rax,rax", "jns~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 45, -1, 0.024186302640350113, ["cmp     cs:status_level, 1", "jz      loc_3069"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 145, 0, 2, 10, 4, 3, 46, -1, 0.0, ["lea     rsi, aWarningInvalid; \"warning: invalid file offset after fail\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; fmt", "xor     edi, edi; status", "xor     eax, eax", "call    nl_error", "jmp     loc_3069"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 145, 0, 1, 3, 0, 2, 32, -1, 0.0020940208097846563, ["call    gethrxtime", "cmp     rax, cs:next_time", "jl      loc_26FD"], ["call~FOO", "cmp~rax,<TAG>", "jl~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 31, -1, 0.24213111903312756, ["cmp     cs:status_level, 4", "jz      loc_287D"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 145, 0, 0, 3, 0, 1, 47, -1, 0.0028620699649305856, ["mov     rax, [rsp+118h+var_108]", "cmp     dword ptr [rax], 0", "jnz     loc_2CD7"], ["mov~rax,[rsp+0]", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 360, 0, 0, 3, 0, 1, 38, 10, 0.009680317653537373, ["movzx   edx, byte ptr [rdx]", "cmp     dl, 3Dh ; '='", "jz      short loc_389D"], ["movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [1, 0, 145, 1, 0, 4, 1, 1, 41, -1, 0.004180795872822653, ["mov     rdx, r12", "sub     rdx, rbp; n", "and     esi, 18h", "jz      short loc_2802"], ["mov~rdx,r12", "sub~rdx,rbp", "and~esi,0", "jz~FOO"]], [0, 1, 145, 0, 0, 1, 0, 0, 42, -1, 0.0, ["mov     esi, 20h ; ' '; c"], ["mov~esi,<STR>"]], [0, 0, 360, 0, 0, 1, 0, 0, 39, 9, 0.012853954728574327, ["mov     [rsp+118h+var_108], rax"], ["mov~[rsp+0],rax"]], [0, 0, 360, 0, 0, 2, 1, 1, 39, 10, 7.245746746659711e-06, ["test    dl, dl", "jnz     loc_3921"], ["test~dl,dl", "jnz~FOO"]], [1, 0, 145, 1, 1, 4, 0, 2, 33, -1, 0.0, ["mov     rdi, rax; progress_time", "call    print_xfer_stats", "add     cs:next_time, 3B9ACA00h", "jmp     loc_26FD"], ["mov~rdi,rax", "call~FOO", "add~<TAG>,0", "jmp~FOO"]], [1, 0, 360, 0, 0, 2, 0, 1, 28, 8, 0.16520664869721474, ["cmp     dword ptr [rsp+118h+bytes], 0", "jz      loc_2190"], ["cmp~[word ptr [rsp+0],0", "jz~FOO"]], [0, 0, 360, 0, 0, 2, 0, 0, 27, 9, 0.026179735436475254, ["cmp     rax, rdx", "jbe     loc_38A2"], ["cmp~rax,rdx", "jbe~FOO"]], [0, 0, 360, 0, 0, 3, 1, 1, 32, 9, 0.014621916934759296, ["test    rax, rax", "mov     cs:conversion_blocksize, rax", "jnz     loc_38A2"], ["test~rax,rax", "mov~<TAG>,rax", "jnz~FOO"]], [0, 0, 360, 0, 0, 2, 0, 1, 27, 9, 0.09405256320422266, ["mov     [rsp+118h+var_110], rax", "jmp     loc_38A2"], ["mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 360, 0, 0, 2, 0, 1, 37, 9, 0.015143610700518796, ["mov     r12, rax", "jmp     loc_38A2"], ["mov~r12,rax", "jmp~FOO"]], [0, 0, 148, 0, 0, 1, 0, 1, 29, -1, 0.06755934266585514, ["jmp     loc_35FB"], ["jmp~FOO"]], [1, 0, 145, 0, 2, 10, 4, 3, 48, -1, 0.0, ["lea     rsi, aCannotWorkArou; \"cannot work around kernel bug after all\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; fmt", "xor     edi, edi; status", "xor     eax, eax", "call    nl_error", "jmp     loc_2CD7"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 360, 0, 0, 3, 0, 0, 11, 12, 0.08590088500403203, ["lea     rax, aOf; \"of\"", "mov     rdx, r13", "mov     ecx, 6Fh ; 'o'"], ["lea~rax,<TAG>", "mov~rdx,r13", "mov~ecx,0"]], [2, 0, 360, 2, 0, 4, 0, 1, 10, 11, 0.0888989192755617, ["add     rdx, 1", "add     rcx, 1", "cmp     [rdx-1], sil", "jnz     loc_28B0"], ["add~rdx,0", "add~rcx,0", "cmp~[rdx-1]+0],sil", "jnz~FOO"]], [0, 0, 360, 0, 0, 2, 1, 1, 13, 9, 0.0016447845114917544, ["test    al, al", "jnz     loc_28B0"], ["test~al,al", "jnz~FOO"]], [2, 0, 360, 2, 0, 4, 0, 1, 12, 11, 0.08910393128645248, ["add     rdx, 1", "add     rax, 1", "cmp     [rdx-1], cl", "jnz     short loc_28F0"], ["add~rdx,0", "add~rax,0", "cmp~[rdx-1]+0],cl", "jnz~FOO"]], [0, 0, 360, 0, 0, 3, 1, 1, 13, 10, 0.004898124800741964, ["movzx   ecx, byte ptr [rax]", "test    cl, cl", "jnz     short loc_28BF"], ["movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [3, 0, 183, 0, 1, 7, 2, 1, 40, -1, 0.023472596585804133, ["mov     edx, ebp", "mov     ecx, 1B6h; mode", "mov     edi, 1; desired_fd", "or      edx, 2; flag", "call    ifd_reopen", "test    eax, eax", "jns     loc_2521"], ["mov~edx,ebp", "mov~ecx,0", "mov~edi,0", "or~edx,0", "call~FOO", "test~eax,eax", "jns~FOO"]], [4, 1, 185, 1, 0, 12, 5, 1, 39, -1, 0.026936063530707474, ["mov     eax, cs:conversions_mask", "xor     edx, edx", "mov     ebp, eax", "test    ah, 10h", "setz    dl", "sar     ebp, 6", "and     ebp, 80h", "shl     edx, 6", "or      ebp, r12d", "or      ebp, edx", "cmp     cs:seek_records, 0", "jnz     loc_30BC"], ["mov~eax,<TAG>", "xor~edx,edx", "mov~ebp,eax", "test~ah,0", "setz~dl", "sar~ebp,0", "and~ebp,<STR>", "shl~edx,0", "or~ebp,r12d", "or~ebp,edx", "cmp~<TAG>,0", "jnz~FOO"]], [6, 0, 364, 2, 7, 38, 2, 7, 4, 10, 0.021099614526273076, ["mov     rdi, [argv+0]; argv0", "lea     rbx, trans_table", "call    set_program_name", "lea     rsi, aWrittenBySSAnd+1Bh; locale", "mov     edi, 6; category", "call    _setlocale", "lea     rsi, dirname; \"/usr/local/share/locale\"", "lea     rdi, package; \"coreutils\"", "call    _bindtextdomain", "lea     rdi, package; \"coreutils\"", "call    _textdomain", "lea     rdi, maybe_close_stdout", "call    atexit", "call    _getpagesize", "cdqe", "sub     rsp, 8", "mov     r8, cs:Version; version", "mov     cs:page_size, rax", "lea     rax, aStuartKemp; \"Stuart Kemp\"", "push    0", "lea     rcx, package; \"coreutils\"", "lea     rdx, command_name; \"dd\"", "mov     r9d, 1; scan_all", "push    rax", "lea     rax, aDavidMackenzie; \"David MacKenzie\"", "mov     rsi, argv; argv", "mov     edi, r12d; argc", "push    rax", "lea     rax, aPaulRubin; \"Paul Rubin\"", "push    rax", "lea     rax, usage", "push    rax; usage_func", "xor     eax, eax", "call    parse_gnu_standard_options_only", "mov     cs:close_stdout_required, 0", "add     rsp, 30h", "xor     eax, eax", "nop     dword ptr [i+i+00h]"], ["mov~rdi,[argv+0]", "lea~rbx,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "call~FOO", "cdqe~", "sub~rsp,0", "mov~r8,<TAG>", "mov~<TAG>,rax", "lea~rax,<TAG>", "push~0", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~r9d,0", "push~rax", "lea~rax,<TAG>", "mov~rsi,argv", "mov~edi,r12d", "push~rax", "lea~rax,<TAG>", "push~rax", "lea~rax,<TAG>", "push~rax", "xor~eax,eax", "call~FOO", "mov~<TAG>,0", "add~rsp,0", "xor~eax,eax", "nop~[word ptr [i+0]"]], [1, 0, 360, 0, 0, 3, 0, 1, 14, 9, 0.004883207086851783, ["movzx   eax, byte ptr [rdx]", "cmp     al, 3Dh ; '='", "jz      short loc_28DE"], ["movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [0, 0, 360, 0, 0, 2, 1, 1, 15, 9, 0.001601310031011796, ["test    al, al", "jnz     short loc_28F0"], ["test~al,al", "jnz~FOO"]], [0, 0, 182, 0, 0, 2, 0, 1, 41, -1, 2.8982986986638843e-05, ["mov     rsi, cs:output_file", "jmp     loc_2505"], ["mov~rsi,<TAG>", "jmp~FOO"]], [2, 0, 364, 1, 0, 4, 0, 1, 5, 9, 0.023671854621337276, ["mov     [rbx+i], al", "add     rax, 1", "cmp     rax, 100h", "jnz     short loc_20D8"], ["mov~<TAG>,al", "add~rax,0", "cmp~rax,0", "jnz~FOO"]], [0, 0, 154, 0, 0, 3, 1, 1, 44, -1, 0.003948931976929543, ["mov     rdx, [rsp+118h+bytes]; n", "test    rdx, rdx", "jz      loc_26AA"], ["mov~rdx,[rsp+0]", "test~rdx,rdx", "jz~FOO"]], [1, 0, 159, 0, 1, 9, 1, 2, 43, -1, 0.011361330898762427, ["mov     rcx, cs:output_blocksize; blocksize", "mov     rsi, cs:output_file; file", "lea     r8, [rsp+118h+bytes]; bytes", "mov     edi, 1; fdesc", "mov     [rsp+118h+bytes], rax", "call    skip", "test    rax, rax", "mov     r12, rax", "jz      loc_30E4"], ["mov~rcx,<TAG>", "mov~rsi,<TAG>", "lea~r8,[rsp+0]", "mov~edi,0", "mov~[rsp+0],rax", "call~FOO", "test~rax,rax", "mov~r12,rax", "jz~FOO"]], [1, 0, 360, 0, 0, 3, 0, 1, 26, 14, 0.0012933657942787583, ["mov     cs:warn_partial_read, 0", "lea     rax, iread", "jmp     loc_2284"], ["mov~<TAG>,0", "lea~rax,<TAG>", "jmp~FOO"]], [1, 0, 360, 0, 0, 4, 2, 1, 25, 15, 0.00099991305103904, ["mov     eax, esi", "or      eax, ecx", "test    ah, 40h", "jnz     short loc_2AF6"], ["mov~eax,esi", "or~eax,ecx", "test~ah,0", "jnz~FOO"]], [0, 0, 362, 0, 0, 3, 0, 1, 6, 8, 0.02622960322290815, ["mov     eax, cs:optind@@GLIBC_2_2_5", "cmp     r12d, eax", "jle     loc_2A32"], ["mov~eax,<TAG>", "cmp~r12d,eax", "jle~FOO"]], [1, 0, 360, 0, 0, 3, 0, 0, 13, 12, 0.08799575825461041, ["lea     rdx, aConv; \"conv\"", "mov     rax, r13", "mov     ecx, 63h ; 'c'"], ["lea~rdx,<TAG>", "mov~rax,r13", "mov~ecx,0"]], [0, 0, 153, 0, 1, 4, 1, 2, 45, -1, 0.0014419036025852825, ["mov     rdi, cs:obuf; s", "xor     esi, esi; c", "call    _memset", "jmp     loc_268D"], ["mov~rdi,<TAG>", "xor~esi,esi", "call~FOO", "jmp~FOO"]], [2, 0, 360, 2, 0, 4, 0, 1, 14, 11, 0.09116214958290071, ["add     rax, 1", "add     rdx, 1", "cmp     [rax-1], cl", "jnz     short loc_2941"], ["add~rax,0", "add~rdx,0", "cmp~[rax-1]+0],cl", "jnz~FOO"]], [0, 0, 360, 0, 0, 3, 1, 1, 15, 10, 0.004985073761701881, ["movzx   ecx, byte ptr [rdx]", "test    cl, cl", "jnz     short loc_28FF"], ["movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [0, 0, 360, 0, 0, 3, 1, 1, 16, 9, 0.00500681100194186, ["movzx   eax, byte ptr [rax]", "test    al, al", "jz      short loc_291E"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 360, 0, 0, 2, 0, 1, 17, 9, 0.0015650812972784975, ["cmp     al, 3Dh ; '='", "jnz     short loc_2941"], ["cmp~al,0", "jnz~FOO"]], [1, 0, 66, 0, 0, 5, 1, 1, 37, -1, 0.006273005245920645, ["movzx   eax, cs:i_nocache", "or      cs:i_nocache_eof, al", "cmp     cs:o_nocache, 0", "movzx   eax, cs:o_nocache_eof", "jz      short loc_3131"], ["movzx~eax,<TAG>", "or~<TAG>,al", "cmp~<TAG>,0", "movzx~eax,<TAG>", "jz~FOO"]], [0, 0, 145, 0, 0, 2, 0, 1, 36, -1, 0.06084253543170159, ["mov     esi, cs:conversions_mask", "jz      loc_3105"], ["mov~esi,<TAG>", "jz~FOO"]], [0, 0, 145, 1, 0, 7, 2, 1, 40, -1, 0.024181472142518954, ["xor     eax, eax", "mov     r12, rbp", "add     r12, cs:input_offset", "setb    al", "mov     cs:input_offset, r12", "test    rax, rax", "jz      loc_3024"], ["xor~eax,eax", "mov~r12,rbp", "add~r12,<TAG>", "setb~al", "mov~<TAG>,r12", "test~rax,rax", "jz~FOO"]], [0, 1, 65, 0, 0, 4, 2, 0, 38, -1, 0.0, ["xor     ebx, ebx", "test    esi, 200h", "setz    bl", "mov     dword ptr [rsp+118h+arg], ebx"], ["xor~ebx,ebx", "test~esi,<STR>", "setz~bl", "mov~[word ptr [rsp+0],ebx"]], [1, 0, 64, 0, 0, 3, 2, 0, 38, -1, 0.0029834362229371357, ["or      eax, dword ptr [rsp+118h+arg]", "mov     cs:o_nocache_eof, al", "and     cs:o_nocache_eof, 1"], ["or~eax,[word ptr [rsp+0]", "mov~<TAG>,al", "and~<TAG>,0"]], [0, 0, 360, 0, 1, 7, 2, 2, 17, 8, 0.005064776975915138, ["lea     rcx, error_msgid; \"invalid conversion\"", "lea     rsi, conversions; table", "xor     edx, edx; exclusive", "mov     rdi, r8; str", "call    parse_symbols", "or      cs:conversions_mask, eax", "jmp     loc_2190"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "xor~edx,edx", "mov~rdi,r8", "call~FOO", "or~<TAG>,eax", "jmp~FOO"]], [1, 0, 360, 0, 1, 6, 1, 2, 8, 13, 0.08497534741224547, ["mov     r13, [r14]", "mov     esi, 3Dh ; '='; c", "mov     rdi, r13; s", "call    _strchr", "test    rax, rax", "jz      loc_3921"], ["mov~r13,<TAG>", "mov~esi,0", "mov~rdi,r13", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 360, 1, 0, 3, 0, 1, 14, 7, 0.1469810383069844, ["add     r14, 8", "cmp     rbp, r14", "jnz     short loc_2130"], ["add~r14,0", "cmp~rbp,r14", "jnz~FOO"]], [2, 0, 360, 2, 0, 13, 2, 0, 7, 14, 0.018819335403059575, ["movsxd  rdx, eax", "not     eax", "mov     [rsp+118h+var_110], 0", "add     eax, r12d", "lea     r14, [argv+rdx*8+0]", "xor     r12d, r12d", "add     rax, rdx", "mov     [rsp+118h+var_108], 0FFFFFFFFFFFFFFFFh", "xor     r15d, r15d", "lea     argv, [argv+rax*8+8]", "lea     rax, [rsp+118h+bytes]", "mov     [rsp+118h+exit_status], rax", "nop     dword ptr [rax]"], ["movsxd~rdx,eax", "not~eax", "mov~[rsp+0],0", "add~eax,r12d", "lea~r14,[argv+0]", "xor~r12d,r12d", "add~rax,rdx", "mov~[rsp+0],0", "xor~r15d,r15d", "lea~argv,[argv+0]", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "nop~<TAG>"]], [1, 0, 63, 0, 0, 2, 0, 1, 33, -1, 0.1229494536706953, ["cmp     cs:char_is_saved, 0", "jz      loc_320F"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 145, 2, 0, 11, 2, 0, 32, -1, 0.2479893052778019, ["mov     r13, cs:max_bytes", "mov     rbp, cs:r_full", "xor     eax, eax", "add     rbp, cs:r_partial", "mov     r12, cs:max_records", "mov     esi, cs:conversions_mask", "test    r13, r13", "setnz   al", "add     rax, r12", "cmp     rbp, rax", "jnb     loc_3142"], ["mov~r13,<TAG>", "mov~rbp,<TAG>", "xor~eax,eax", "add~rbp,<TAG>", "mov~r12,<TAG>", "mov~esi,<TAG>", "test~r13,r13", "setnz~al", "add~rax,r12", "cmp~rbp,rax", "jnb~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 39, -1, 0.0013567660783120308, ["mov     dword ptr [rsp+118h+exit_status], 1", "jmp     loc_3142"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 360, 0, 0, 3, 0, 0, 15, 12, 0.08989414390223527, ["lea     rdx, aIflag; \"iflag\"", "mov     rax, r13", "mov     ecx, 69h ; 'i'"], ["lea~rdx,<TAG>", "mov~rax,r13", "mov~ecx,0"]], [0, 0, 360, 0, 1, 7, 2, 2, 19, 8, 0.005282149378314929, ["lea     rcx, aInvalidInputFl; \"invalid input flag\"", "lea     rsi, flags; table", "xor     edx, edx; exclusive", "mov     rdi, r8; str", "call    parse_symbols", "or      cs:input_flags, eax", "jmp     loc_2190"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "xor~edx,edx", "mov~rdi,r8", "call~FOO", "or~<TAG>,eax", "jmp~FOO"]], [1, 0, 360, 0, 0, 3, 0, 1, 18, 9, 0.005137234443381735, ["movzx   eax, byte ptr [rax]", "cmp     al, 3Dh ; '='", "jz      short loc_296F"], ["movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [0, 0, 360, 0, 0, 2, 1, 1, 19, 9, 0.0015216068167985392, ["test    al, al", "jnz     short loc_2992"], ["test~al,al", "jnz~FOO"]], [1, 0, 62, 0, 0, 2, 1, 1, 34, -1, 0.03827565718922992, ["test    sil, 8", "jnz     loc_37DF"], ["test~sil,0", "jnz~FOO"]], [2, 0, 0, 0, 4, 15, 4, 4, 9, -1, 0.0, ["mov     rdi, r13; arg", "call    quote", "lea     rsi, aUnrecognizedOp; \"unrecognized operand %s\"", "mov     rbx, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     edi, edi; status", "mov     rdx, rax; fmt", "mov     rcx, rbx", "xor     esi, esi; errnum", "xor     eax, eax", "call    nl_error", "mov     edi, 1; status", "call    usage"], ["mov~rdi,r13", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~edi,edi", "mov~rdx,rax", "mov~rcx,rbx", "xor~esi,esi", "xor~eax,eax", "call~FOO", "mov~edi,0", "call~FOO"]], [3, 0, 3, 0, 3, 18, 4, 4, 46, -1, 0.0, ["mov     rdx, cs:output_file; arg", "mov     esi, 3; s", "xor     edi, edi; n", "call    quotearg_n_style_colon", "lea     rsi, aFailedToDiscar; \"failed to discard cache for: %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbx, rax", "call    _dcgettext", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+var_108]", "mov     rcx, rbx", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    nl_error", "mov     dword ptr [rsp+118h+exit_status], 1", "jmp     loc_2F4E"], ["mov~rdx,<TAG>", "mov~esi,0", "xor~edi,edi", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbx,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~rcx,rbx", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 4, 0, 1, 5, 2, 2, 45, -1, 0.002528765614584239, ["xor     esi, esi; len", "mov     edi, 1; fd", "call    invalidate_cache", "test    al, al", "jnz     loc_2F4E"], ["xor~esi,esi", "mov~edi,0", "call~FOO", "test~al,al", "jnz~FOO"]], [2, 0, 360, 2, 0, 4, 0, 1, 16, 11, 0.09301706075004561, ["add     rax, 1", "add     rdx, 1", "cmp     [rax-1], cl", "jnz     short loc_2992"], ["add~rax,0", "add~rdx,0", "cmp~[rax-1]+0],cl", "jnz~FOO"]], [0, 0, 360, 0, 0, 3, 1, 1, 17, 10, 0.005072022722661797, ["movzx   ecx, byte ptr [rdx]", "test    cl, cl", "jnz     short loc_2950"], ["movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [1, 0, 360, 0, 0, 5, 0, 0, 9, 12, 0.08565282473305814, ["lea     r8, [rax+1]", "lea     rcx, aIf; \"if\"", "mov     rdx, r13", "mov     esi, 69h ; 'i'", "nop     dword ptr [rax+00h]"], ["lea~r8,[rax+0]", "lea~rcx,<TAG>", "mov~rdx,r13", "mov~esi,0", "nop~[word ptr [rax+0]"]], [0, 0, 360, 0, 0, 3, 1, 1, 11, 10, 0.006874508780992616, ["movzx   esi, byte ptr [rcx]", "test    sil, sil", "jnz     short loc_2160"], ["movzx~esi,<TAG>", "test~sil,sil", "jnz~FOO"]], [1, 0, 360, 0, 0, 3, 0, 1, 12, 9, 0.006816542807019339, ["movzx   eax, byte ptr [rdx]", "cmp     al, 3Dh ; '='", "jz      short loc_2189"], ["movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [0, 0, 360, 0, 0, 1, 0, 0, 13, 8, 0.006715102352566103, ["mov     cs:input_file, r8"], ["mov~<TAG>,r8"]], [0, 0, 58, 0, 0, 8, 0, 0, 36, -1, 0.030348810248384105, ["mov     rax, cs:oc", "movzx   ecx, cs:saved_char", "mov     rdx, cs:obuf; size", "lea     rsi, [rax+1]; buf", "cmp     rsi, cs:output_blocksize", "mov     [rdx+rax], cl", "mov     cs:oc, rsi", "jnb     short loc_3204"], ["mov~rax,<TAG>", "movzx~ecx,<TAG>", "mov~rdx,<TAG>", "lea~rsi,[rax+0]", "cmp~rsi,<TAG>", "mov~<TAG>,cl", "mov~<TAG>,rsi", "jnb~FOO"]], [0, 0, 43, 0, 0, 2, 1, 1, 37, -1, 0.08643089006753035, ["test    rsi, rsi", "jnz     loc_364E"], ["test~rsi,rsi", "jnz~FOO"]], [0, 0, 44, 0, 0, 2, 0, 1, 36, -1, 0.02882720343158556, ["mov     rsi, cs:oc", "jmp     loc_318F"], ["mov~rsi,<TAG>", "jmp~FOO"]], [1, 0, 48, 0, 0, 2, 0, 1, 36, -1, 0.03688447381387126, ["cmp     cs:col, 0", "jz      loc_318F"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 47, 0, 0, 2, 1, 1, 37, -1, 0.004557574703648958, ["test    byte ptr cs:conversions_mask, 10h", "jz      loc_318F"], ["test~<TAG>,0", "jz~FOO"]], [0, 0, 46, 0, 0, 8, 0, 0, 38, -1, 0.0023186389589311073, ["lea     rax, [rsi+1]", "movzx   ecx, byte ptr cs:newline_character; \"\\n\"", "cmp     rax, cs:output_blocksize", "mov     rdx, cs:obuf", "mov     cs:oc, rax", "mov     [rdx+rsi], cl", "mov     rsi, rax", "jb      loc_318F"], ["lea~rax,[rsi+0]", "movzx~ecx,<TAG>", "cmp~rax,<TAG>", "mov~rdx,<TAG>", "mov~<TAG>,rax", "mov~<TAG>,cl", "mov~rsi,rax", "jb~FOO"]], [0, 0, 360, 0, 0, 2, 0, 1, 15, 8, 0.004868289372961601, ["mov     cs:output_file, r8", "jmp     loc_2190"], ["mov~<TAG>,r8", "jmp~FOO"]], [0, 0, 360, 0, 1, 7, 2, 2, 21, 8, 0.005499521780714721, ["lea     rcx, aInvalidOutputF; \"invalid output flag\"", "lea     rsi, flags; table", "xor     edx, edx; exclusive", "mov     rdi, r8; str", "call    parse_symbols", "or      cs:output_flags, eax", "jmp     loc_2190"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "xor~edx,edx", "mov~rdi,r8", "call~FOO", "or~<TAG>,eax", "jmp~FOO"]], [1, 0, 360, 0, 1, 7, 0, 2, 23, 8, 0.0057168941831145115, ["lea     rcx, aInvalidStatusL; \"invalid status level\"", "lea     rsi, statuses; table", "mov     edx, 1; exclusive", "mov     rdi, r8; str", "call    parse_symbols", "mov     cs:status_level, eax", "jmp     loc_2190"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "mov~rdi,r8", "call~FOO", "mov~<TAG>,eax", "jmp~FOO"]], [0, 0, 360, 0, 0, 2, 1, 1, 15, 6, 0.08402040061307542, ["test    r15, r15", "jz      loc_2A47"], ["test~r15,r15", "jz~FOO"]], [1, 0, 37, 0, 0, 2, 0, 1, 38, -1, 0.07443555632843521, ["cmp     cs:final_op_was_seek, 0", "jnz     loc_36BA"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 40, 0, 0, 2, 0, 1, 39, -1, 0.004488740109555691, ["cmp     rax, cs:oc", "jz      loc_3198"], ["cmp~rax,<TAG>", "jz~FOO"]], [1, 0, 360, 0, 0, 4, 0, 0, 17, 12, 0.09157515714746031, ["lea     rdx, aOflag; \"oflag\"", "mov     rax, r13", "mov     ecx, 6Fh ; 'o'", "nop     dword ptr [rax+00000000h]"], ["lea~rdx,<TAG>", "mov~rax,r13", "mov~ecx,0", "nop~[word ptr [rax+0]"]], [0, 0, 360, 0, 0, 2, 0, 0, 16, 5, 0.08197710003051739, ["mov     cs:output_blocksize, r15", "mov     cs:input_blocksize, r15"], ["mov~<TAG>,r15", "mov~<TAG>,r15"]], [0, 0, 360, 0, 0, 3, 1, 1, 28, 12, 0.009227458481871141, ["movzx   edx, byte ptr [rdx]", "test    dl, dl", "jz      short loc_3A0D"], ["movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [0, 0, 360, 0, 0, 3, 1, 1, 27, 13, 0.007738457525432571, ["movzx   esi, byte ptr [rcx]", "test    sil, sil", "jz      loc_39A6"], ["movzx~esi,<TAG>", "test~sil,sil", "jz~FOO"]], [1, 0, 360, 0, 0, 2, 0, 1, 29, 12, 0.00027171550299973915, ["cmp     dl, 3Dh ; '='", "jz      short loc_3A0D"], ["cmp~dl,0", "jz~FOO"]], [1, 0, 29, 0, 0, 3, 1, 1, 39, -1, 0.05338666202938875, ["mov     esi, cs:conversions_mask", "test    esi, 4000h", "jnz     loc_3680"], ["mov~esi,<TAG>", "test~esi,0", "jnz~FOO"]], [2, 0, 34, 0, 0, 4, 1, 1, 40, -1, 0.009444830884270932, ["mov     eax, [rsp+118h+stdout_stat.st_mode]", "and     eax, 0F000h", "cmp     eax, 8000h", "jnz     loc_31A5"], ["mov~eax,[rsp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [2, 0, 33, 0, 1, 7, 2, 2, 41, -1, 0.00700663710401994, ["xor     esi, esi; length", "mov     edx, 1; whence", "mov     edi, 1; fd", "call    _lseek", "test    rax, rax", "mov     rbx, rax", "js      loc_31A5"], ["xor~esi,esi", "mov~edx,0", "mov~edi,0", "call~FOO", "test~rax,rax", "mov~rbx,rax", "js~FOO"]], [0, 0, 32, 0, 0, 2, 0, 1, 42, -1, 0.004695243891835493, ["cmp     rax, [rsp+118h+stdout_stat.st_size]", "jle     loc_31A5"], ["cmp~rax,[rsp+0]", "jle~FOO"]], [0, 0, 31, 0, 1, 4, 1, 2, 43, -1, 0.0023693591861577252, ["mov     rdi, rax; fd", "call    iftruncate", "test    eax, eax", "jz      loc_31A5"], ["mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 360, 2, 0, 4, 0, 1, 18, 11, 0.09465459951479069, ["add     rax, 1", "add     rdx, 1", "cmp     [rax-1], cl", "jnz     loc_2B55"], ["add~rax,0", "add~rdx,0", "cmp~[rax-1]+0],cl", "jnz~FOO"]], [0, 0, 360, 0, 0, 3, 1, 1, 19, 10, 0.005158971683621714, ["movzx   ecx, byte ptr [rdx]", "test    cl, cl", "jnz     short loc_29A8"], ["movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [1, 0, 360, 0, 0, 2, 0, 1, 10, 4, 0.10606707686117663, ["cmp     cs:conversion_blocksize, 0", "jnz     short loc_21C1"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 360, 0, 0, 2, 0, 1, 9, 5, 0.018300625180078123, ["cmp     cs:output_blocksize, 0", "jnz     loc_21B0"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 1, 360, 0, 0, 2, 0, 1, 10, 5, 0.0, ["mov     cs:output_blocksize, 200h", "jmp     loc_21B0"], ["mov~<TAG>,<STR>", "jmp~FOO"]], [1, 0, 360, 0, 0, 1, 1, 0, 11, 4, 0.0, ["and     cs:conversions_mask, 0FFFFFFE7h"], ["and~<TAG>,0"]], [1, 0, 23, 0, 0, 2, 1, 1, 40, -1, 0.04025736892444135, ["and     esi, 8000h", "jz      loc_2F07"], ["and~esi,0", "jz~FOO"]], [0, 0, 24, 0, 0, 2, 0, 1, 41, -1, 0.0006955916876793323, ["mov     esi, cs:conversions_mask", "jmp     loc_31B7"], ["mov~esi,<TAG>", "jmp~FOO"]], [1, 0, 360, 0, 0, 4, 0, 1, 28, 13, 0.024022207787558113, ["mov     rdx, r13", "mov     esi, 63h ; 'c'", "lea     rcx, aCbs; \"cbs\"", "jmp     short loc_39CF"], ["mov~rdx,r13", "mov~esi,0", "lea~rcx,<TAG>", "jmp~FOO"]], [0, 0, 360, 0, 0, 1, 0, 1, 27, 14, 0.021975284331626745, ["jmp     loc_39B2"], ["jmp~FOO"]], [0, 0, 22, 0, 0, 1, 0, 0, 41, -1, 0.007347187201112946, ["mov     rbx, [rsp+118h+var_108]"], ["mov~rbx,[rsp+0]"]], [1, 0, 360, 0, 0, 3, 0, 1, 20, 9, 0.0052676578848216095, ["movzx   eax, byte ptr [rax]", "cmp     al, 3Dh ; '='", "jz      short loc_29CF"], ["movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [3, 0, 0, 0, 5, 18, 3, 5, 46, -1, 0.0, ["mov     rsi, cs:output_file; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aWritingToS; \"writing to %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbx, rax", "call    _dcgettext", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+var_108]", "xor     edi, edi; status", "mov     rcx, rbx", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    nl_error", "call    finish_up", "mov     edi, 1; status", "call    _exit"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbx,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "xor~edi,edi", "mov~rcx,rbx", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "call~FOO", "mov~edi,0", "call~FOO"]], [0, 0, 156, 0, 1, 6, 0, 2, 45, -1, 0.005412572819754804, ["mov     rbp, cs:output_blocksize", "mov     rdi, cs:obuf; fd", "mov     rsi, rbp; buf", "call    iwrite", "cmp     rbp, rax", "jnz     loc_395A"], ["mov~rbp,<TAG>", "mov~rdi,<TAG>", "mov~rsi,rbp", "call~FOO", "cmp~rbp,rax", "jnz~FOO"]], [0, 0, 152, 0, 1, 6, 0, 2, 46, -1, 0.0011158449989855954, ["mov     rbp, [rsp+118h+bytes]", "mov     rdi, cs:obuf; fd", "mov     rsi, rbp; buf", "call    iwrite", "cmp     rbp, rax", "jnz     loc_395A"], ["mov~rbp,[rsp+0]", "mov~rdi,<TAG>", "mov~rsi,rbp", "call~FOO", "cmp~rbp,rax", "jnz~FOO"]], [0, 0, 360, 0, 0, 2, 1, 1, 21, 9, 0.001478132336318581, ["test    al, al", "jnz     loc_2B55"], ["test~al,al", "jnz~FOO"]], [1, 0, 360, 0, 0, 3, 1, 1, 11, 3, 0.10925520542970689, ["mov     eax, cs:input_flags", "test    eax, 101000h", "jz      short loc_21D9"], ["mov~eax,<TAG>", "test~eax,0", "jz~FOO"]], [1, 0, 360, 0, 0, 2, 1, 0, 12, 3, 0.0, ["or      eax, 101000h", "mov     cs:input_flags, eax"], ["or~eax,0", "mov~<TAG>,eax"]], [1, 0, 22, 0, 1, 4, 1, 2, 42, -1, 0.005216937657594992, ["mov     edi, 1; fd", "call    _fsync", "test    eax, eax", "jz      loc_2F07"], ["mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 43, -1, 0.002579485841810857, ["cmp     dword ptr [rbx], 4", "jz      short loc_31C8"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 360, 2, 0, 4, 0, 1, 29, 12, 0.025761187006756444, ["add     rdx, 1", "add     rcx, 1", "cmp     [rdx-1], sil", "jz      short loc_39C3"], ["add~rdx,0", "add~rcx,0", "cmp~[rdx-1]+0],sil", "jz~FOO"]], [0, 0, 360, 0, 0, 3, 1, 1, 30, 11, 0.01025997739327015, ["movzx   esi, byte ptr [rcx]", "test    sil, sil", "jz      loc_37B2"], ["movzx~esi,<TAG>", "test~sil,sil", "jz~FOO"]], [1, 0, 360, 0, 0, 3, 1, 1, 12, 2, 0.11244333399823717, ["mov     esi, cs:output_flags", "test    sil, 1", "jnz     loc_3B83"], ["mov~esi,<TAG>", "test~sil,0", "jnz~FOO"]], [1, 0, 360, 0, 0, 4, 0, 1, 30, 13, 0.0163634534763388, ["mov     rdx, r13", "mov     esi, 73h ; 's'", "lea     rcx, aSkip; \"skip\"", "jmp     short loc_39FA"], ["mov~rdx,r13", "mov~esi,0", "lea~rcx,<TAG>", "jmp~FOO"]], [1, 0, 360, 0, 0, 2, 0, 1, 32, 10, 0.0001376691881865345, ["cmp     dl, 3Dh ; '='", "jnz     loc_39DD"], ["cmp~dl,0", "jnz~FOO"]], [1, 0, 360, 0, 0, 3, 1, 1, 13, 1, 0.11242884250474384, ["mov     ecx, cs:input_flags", "test    cl, 10h", "jnz     loc_3C5F"], ["mov~ecx,<TAG>", "test~cl,0", "jnz~FOO"]], [2, 0, 360, 2, 0, 4, 0, 1, 31, 12, 0.018015483734577214, ["add     rdx, 1", "add     rcx, 1", "cmp     [rdx-1], sil", "jz      short loc_39EE"], ["add~rdx,0", "add~rcx,0", "cmp~[rdx-1]+0],sil", "jz~FOO"]], [0, 0, 360, 0, 0, 2, 1, 1, 20, 16, 0.06514118124425665, ["test    r12, r12", "jz      loc_2257"], ["test~r12,r12", "jz~FOO"]], [1, 0, 360, 0, 0, 2, 1, 1, 19, 17, 0.12969545700203386, ["test    sil, 10h", "jz      loc_29F2"], ["test~sil,0", "jz~FOO"]], [1, 0, 360, 0, 0, 2, 1, 1, 14, 22, 0.11300125649772996, ["test    sil, 0Ch", "jnz     loc_3C30"], ["test~sil,0", "jnz~FOO"]], [2, 0, 19, 0, 1, 7, 0, 2, 44, -1, 0.00017389792191983307, ["mov     rsi, cs:output_file; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     edx, 5", "mov     rbx, rax", "lea     rsi, aFsyncFailedFor; \"fsync failed for %s\"", "jmp     loc_2EE2"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~edx,0", "mov~rbx,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 360, 0, 0, 2, 0, 1, 21, 16, 0.0, ["mov     cs:seek_records, r12", "jmp     loc_2257"], ["mov~<TAG>,r12", "jmp~FOO"]], [0, 1, 145, 0, 0, 3, 1, 1, 45, -1, 0.0020650378227980177, ["mov     ecx, cs:conversions_mask", "test    cl, 80h", "jz      loc_2853"], ["mov~ecx,<TAG>", "test~cl,<STR>", "jz~FOO"]], [0, 0, 57, 0, 1, 2, 0, 1, 37, -1, 9.419470770657624e-05, ["call    write_output", "mov     esi, cs:conversions_mask"], ["call~FOO", "mov~esi,<TAG>"]], [1, 0, 360, 0, 0, 3, 1, 1, 15, 21, 0.11375481415938257, ["test    cl, 8", "mov     rax, [rsp+118h+var_110]", "jz      loc_2A1D"], ["test~cl,0", "mov~rax,[rsp+0]", "jz~FOO"]], [1, 0, 360, 0, 0, 2, 0, 1, 18, 18, 0.06115602053359383, ["cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      loc_2244"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 360, 0, 0, 3, 1, 1, 17, 19, 0.12172513558070822, ["test    cl, 4", "mov     rax, [rsp+118h+var_108]", "jz      loc_2A07"], ["test~cl,0", "mov~rax,[rsp+0]", "jz~FOO"]], [0, 0, 360, 0, 0, 2, 1, 1, 16, 20, 0.057170859822931006, ["test    rax, rax", "jnz     loc_2A84"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 360, 0, 0, 2, 0, 1, 19, 18, 0.0, ["mov     cs:max_records, rax", "jmp     loc_2244"], ["mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 360, 0, 0, 2, 1, 1, 16, 20, 0.057170859822931006, ["test    rax, rax", "jz      loc_2219"], ["test~rax,rax", "jz~FOO"]], [0, 0, 360, 0, 0, 2, 0, 1, 17, 20, 0.0, ["mov     cs:skip_records, rax", "jmp     loc_2219"], ["mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 360, 1, 0, 5, 1, 1, 17, 20, 0.0, ["xor     edx, edx", "div     cs:input_blocksize", "mov     cs:skip_records, rax", "mov     cs:skip_bytes, rdx", "jmp     loc_2219"], ["xor~edx,edx", "div~,<TAG>", "mov~<TAG>,rax", "mov~<TAG>,rdx", "jmp~FOO"]], [0, 0, 54, 0, 0, 3, 1, 1, 35, -1, 0.04136234530330699, ["mov     rbx, cs:col", "test    rbx, rbx", "jnz     loc_333E"], ["mov~rbx,<TAG>", "test~rbx,rbx", "jnz~FOO"]], [1, 0, 56, 0, 0, 2, 1, 1, 34, -1, 0.08231892878880104, ["and     sil, 8", "jz      loc_3350"], ["and~sil,0", "jz~FOO"]], [1, 0, 360, 0, 0, 2, 0, 1, 18, 18, 0.06115602053359383, ["cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      short loc_2244"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 45, 0, 1, 2, 0, 2, 39, -1, 6.52117207199374e-05, ["call    write_output", "jmp     loc_3229"], ["call~FOO", "jmp~FOO"]], [1, 0, 360, 1, 0, 9, 0, 1, 29, 11, 0.011962727878735183, ["mov     rdi, cs:page_size", "mov     r15, rax", "lea     rdx, [rdi+2]", "mov     rdi, 7FFFFFFFFFFFFFFFh", "add     rdx, rdx", "neg     rdx", "cmp     rdx, rdi", "cmova   rdx, rdi", "jmp     loc_35E1"], ["mov~rdi,<TAG>", "mov~r15,rax", "lea~rdx,[rdi+0]", "mov~rdi,0", "add~rdx,rdx", "neg~rdx", "cmp~rdx,rdi", "cmova~rdx,rdi", "jmp~FOO"]], [0, 0, 360, 1, 0, 4, 1, 0, 19, 18, 0.0, ["xor     edx, edx", "div     cs:input_blocksize", "mov     cs:max_records, rax", "mov     cs:max_bytes, rdx"], ["xor~edx,edx", "div~,<TAG>", "mov~<TAG>,rax", "mov~<TAG>,rdx"]], [2, 0, 360, 0, 0, 3, 1, 0, 7, 7, 0.009873821713712877, ["mov     [rsp+118h+var_108], 0FFFFFFFFFFFFFFFFh", "mov     [rsp+118h+var_110], 0", "xor     r12d, r12d"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r12d,r12d"]], [0, 0, 360, 0, 0, 2, 1, 1, 20, 16, 0.06514118124425665, ["test    r12, r12", "jnz     loc_2AD7"], ["test~r12,r12", "jnz~FOO"]], [2, 0, 360, 0, 2, 9, 3, 2, 25, 11, 0.03803484266500271, ["lea     rsi, aCannotCombineB; \"cannot combine block and unblock\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; fmt", "mov     edi, 1; status", "xor     eax, eax", "call    nl_error"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 360, 0, 0, 5, 2, 1, 24, 12, 0.1522442208776389, ["mov     eax, ebp", "and     eax, 18h", "lea     edx, [rax-1]", "test    edx, eax", "jnz     loc_3A37"], ["mov~eax,ebp", "and~eax,0", "lea~edx,[rax-1]+0]", "test~edx,eax", "jnz~FOO"]], [2, 0, 360, 0, 0, 3, 1, 1, 8, 6, 0.01511249661154785, ["or      cs:conversions_mask, 800h", "cmp     cs:input_blocksize, 0", "jnz     short loc_2A66"], ["or~<TAG>,0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 1, 360, 0, 0, 1, 0, 0, 9, 6, 0.0, ["mov     cs:input_blocksize, 200h"], ["mov~<TAG>,<STR>"]], [1, 0, 188, 0, 2, 10, 2, 3, 37, -1, 0.03989508158710837, ["lea     rsi, aStandardInput; \"standard input\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     esi, r12d; add_flags", "mov     rdx, rax; name", "xor     edi, edi; fd", "mov     cs:input_file, rax", "call    set_fd_flags", "jmp     loc_2470"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~esi,r12d", "mov~rdx,rax", "xor~edi,edi", "mov~<TAG>,rax", "call~FOO", "jmp~FOO"]], [0, 0, 193, 0, 1, 6, 1, 2, 36, -1, 0.0828188853143205, ["mov     rbp, cs:input_file", "mov     r12d, cs:input_flags", "call    ___errno_location", "mov     [rsp+118h+var_108], rax", "test    rbp, rbp", "jz      loc_3235"], ["mov~rbp,<TAG>", "mov~r12d,<TAG>", "call~FOO", "mov~[rsp+0],rax", "test~rbp,rbp", "jz~FOO"]], [0, 0, 360, 1, 0, 6, 1, 1, 21, 16, 0.0, ["mov     rax, r12", "xor     edx, edx", "div     cs:output_blocksize", "mov     cs:seek_records, rax", "mov     cs:seek_bytes, rdx", "jmp     loc_2257"], ["mov~rax,r12", "xor~edx,edx", "div~,<TAG>", "mov~<TAG>,rax", "mov~<TAG>,rdx", "jmp~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 42, -1, 0.01806364663942266, ["cmp     cs:max_bytes, 0", "jnz     loc_2F15"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 41, -1, 0.03534475263020607, ["cmp     cs:max_records, 0", "jz      loc_3261"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 360, 0, 0, 2, 1, 1, 22, 15, 0.005934266585514303, ["test    eax, eax", "jz      loc_2AA0"], ["test~eax,eax", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 43, -1, 0.0199982610207808, ["cmp     cs:i_nocache, 0", "jnz     loc_3463"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 46, -1, 0.0043039735675158685, ["mov     dword ptr [rsp+118h+exit_status], 0", "jmp     loc_326F"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [2, 0, 360, 0, 2, 9, 3, 2, 26, 10, 0.07969255870333528, ["lea     rsi, aCannotCombineL; \"cannot combine lcase and ucase\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; fmt", "mov     edi, 1; status", "xor     eax, eax", "call    nl_error"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 360, 0, 0, 5, 2, 1, 25, 11, 0.11479628369911564, ["mov     eax, ebp", "and     eax, 60h", "lea     edx, [rax-1]", "test    edx, eax", "jnz     loc_3A5B"], ["mov~eax,ebp", "and~eax,0", "lea~edx,[rax-1]+0]", "test~edx,eax", "jnz~FOO"]], [1, 0, 360, 0, 0, 2, 0, 0, 23, 14, 0.002557748601570878, ["lea     rax, iread_fullblock", "mov     cs:warn_partial_read, 0"], ["lea~rax,<TAG>", "mov~<TAG>,0"]], [1, 0, 5, 0, 0, 2, 0, 1, 44, -1, 0.012607599339187897, ["cmp     cs:o_nocache, 0", "jz      loc_2F4E"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 7, 0, 1, 5, 3, 2, 44, -1, 0.0025070283743442597, ["xor     esi, esi; len", "xor     edi, edi; fd", "call    invalidate_cache", "test    al, al", "jnz     loc_327C"], ["xor~esi,esi", "xor~edi,edi", "call~FOO", "test~al,al", "jnz~FOO"]], [3, 0, 6, 0, 3, 18, 4, 4, 45, -1, 0.0, ["mov     rdx, cs:input_file; arg", "mov     esi, 3; s", "xor     edi, edi; n", "call    quotearg_n_style_colon", "lea     rsi, aFailedToDiscar; \"failed to discard cache for: %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbx, rax", "call    _dcgettext", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+var_108]", "mov     rcx, rbx", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    nl_error", "mov     dword ptr [rsp+118h+exit_status], 1", "jmp     loc_327C"], ["mov~rdx,<TAG>", "mov~esi,0", "xor~edi,edi", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbx,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~rcx,rbx", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [2, 0, 360, 0, 0, 9, 3, 1, 23, 13, 0.15201235698174578, ["mov     cs:iread_fnc, rax", "mov     eax, ecx", "and     eax, 0FFFFFFFEh", "mov     cs:input_flags, eax", "mov     eax, ebp", "and     eax, 7", "lea     edx, [rax-1]", "test    edx, eax", "jnz     loc_3C0C"], ["mov~<TAG>,rax", "mov~eax,ecx", "and~eax,0", "mov~<TAG>,eax", "mov~eax,ebp", "and~eax,0", "lea~edx,[rax-1]+0]", "test~edx,eax", "jnz~FOO"]], [1, 0, 360, 0, 0, 3, 0, 1, 24, 14, 0.006445091731153813, ["mov     cs:warn_partial_read, 1", "lea     rax, iread", "jmp     loc_2284"], ["mov~<TAG>,0", "lea~rax,<TAG>", "jmp~FOO"]], [1, 0, 360, 0, 0, 2, 0, 1, 23, 15, 0.003963423470422862, ["cmp     cs:skip_records, 0", "jnz     short loc_2AF6"], ["cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 360, 1, 0, 4, 0, 0, 24, 15, 0.0019925803553314204, ["mov     rax, cs:max_records", "sub     rax, 1", "cmp     rax, 0FFFFFFFFFFFFFFFDh", "jbe     short loc_2AF6"], ["mov~rax,<TAG>", "sub~rax,0", "cmp~rax,0", "jbe~FOO"]], [2, 0, 5, 0, 2, 9, 3, 2, 28, -1, 0.0034127467176767235, ["lea     rsi, aCannotCombineD; \"cannot combine direct and nocache\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; fmt", "mov     edi, 1; status", "xor     eax, eax", "call    nl_error"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 224, 0, 0, 5, 2, 1, 27, -1, 0.07375083326087586, ["mov     eax, ecx", "and     eax, 4002h", "lea     edx, [rax-1]", "test    edx, eax", "jnz     loc_3AB5"], ["mov~eax,ecx", "and~eax,0", "lea~edx,[rax-1]+0]", "test~edx,eax", "jnz~FOO"]], [1, 0, 223, 0, 0, 6, 2, 1, 28, -1, 0.07213865460974409, ["mov     eax, esi", "and     eax, 4002h", "lea     edx, [rax-1]", "and     edx, eax", "mov     dword ptr [rsp+118h+arg], edx", "jnz     loc_3AB5"], ["mov~eax,esi", "and~eax,0", "lea~edx,[rax-1]+0]", "and~edx,eax", "mov~[word ptr [rsp+0],edx", "jnz~FOO"]], [0, 0, 145, 0, 0, 2, 0, 1, 42, -1, 0.01502767875257224, ["cmp     cs:input_blocksize, rbp", "jz      loc_34C0"], ["cmp~<TAG>,rbp", "jz~FOO"]], [0, 0, 145, 1, 1, 6, 0, 2, 41, -1, 0.02349433382604411, ["mov     rsi, rbp; buf", "mov     rdi, r15; fd", "call    iwrite", "add     cs:w_bytes, rax", "cmp     rax, rbp", "jz      loc_32E9"], ["mov~rsi,rbp", "mov~rdi,r15", "call~FOO", "add~<TAG>,rax", "cmp~rax,rbp", "jz~FOO"]], [1, 0, 145, 1, 0, 2, 0, 1, 43, -1, 0.005934266585514303, ["add     cs:w_partial, 1", "jmp     loc_26F0"], ["add~<TAG>,0", "jmp~FOO"]], [1, 0, 221, 0, 0, 2, 1, 1, 29, -1, 0.0726748398689969, ["test    cl, 2", "jz      short loc_233B"], ["test~cl,0", "jz~FOO"]], [1, 0, 163, 0, 0, 2, 0, 1, 42, -1, 0.001978088861838101, ["cmp     cs:status_level, 1", "jz      loc_25FE"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 166, 0, 1, 11, 2, 2, 41, -1, 0.005477784540474742, ["mov     r15, cs:input_blocksize", "mov     rsi, cs:input_file; file", "lea     r8, skip_bytes; bytes", "xor     edi, edi; fdesc", "mov     rdx, r14; records", "mov     rbp, cs:input_offset", "mov     r12, cs:skip_bytes", "mov     rcx, r15; blocksize", "call    skip", "test    rax, rax", "jnz     loc_2B09"], ["mov~r15,<TAG>", "mov~rsi,<TAG>", "lea~r8,<TAG>", "xor~edi,edi", "mov~rdx,r14", "mov~rbp,<TAG>", "mov~r12,<TAG>", "mov~rcx,r15", "call~FOO", "test~rax,rax", "jnz~FOO"]], [1, 0, 164, 0, 0, 2, 0, 1, 43, -1, 1.4491493493319421e-05, ["cmp     cs:input_offset_overflow, 1", "jnz     loc_2B09"], ["cmp~<TAG>,0", "jnz~FOO"]], [3, 0, 4, 0, 3, 15, 2, 3, 29, -1, 0.003238848795756891, ["mov     rsi, cs:output_file; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aFailedToOpenS; \"failed to open %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbx, rax", "call    _dcgettext", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+var_108]", "mov     rcx, rbx", "mov     edi, 1; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    nl_error"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbx,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~rcx,rbx", "mov~edi,0", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO"]], [3, 0, 181, 0, 1, 7, 2, 2, 41, -1, 0.0036228733733298553, ["mov     edx, ebp", "mov     ecx, 1B6h; mode", "mov     edi, 1; desired_fd", "or      edx, 1; flag", "call    ifd_reopen", "test    eax, eax", "js      loc_3AD9"], ["mov~edx,ebp", "mov~ecx,0", "mov~edi,0", "or~edx,0", "call~FOO", "test~eax,eax", "js~FOO"]], [2, 0, 220, 0, 0, 4, 1, 1, 30, -1, 0.0020867750630379966, ["xor     eax, eax", "cmp     cs:max_records, 0", "mov     cs:i_nocache, 1", "jnz     short loc_2325"], ["xor~eax,eax", "cmp~<TAG>,0", "mov~<TAG>,0", "jnz~FOO"]], [1, 0, 219, 0, 0, 3, 1, 0, 31, -1, 0.0, ["xor     eax, eax", "cmp     cs:max_bytes, 0", "setz    al"], ["xor~eax,eax", "cmp~<TAG>,0", "setz~al"]], [0, 0, 54, 0, 0, 7, 0, 0, 37, -1, 0.004427151262209083, ["lea     rax, [rsi+1]", "movzx   ecx, byte ptr cs:space_character; \" \"", "cmp     rax, cs:output_blocksize", "mov     rdx, cs:obuf", "mov     cs:oc, rax", "mov     [rdx+rsi], cl", "jb      short loc_333A"], ["lea~rax,[rsi+0]", "movzx~ecx,<TAG>", "cmp~rax,<TAG>", "mov~rdx,<TAG>", "mov~<TAG>,rax", "mov~<TAG>,cl", "jb~FOO"]], [0, 0, 54, 0, 0, 3, 0, 0, 36, -1, 0.009948410283163782, ["cmp     rbx, cs:conversion_blocksize", "mov     rsi, cs:oc", "jb      short loc_3310"], ["cmp~rbx,<TAG>", "mov~rsi,<TAG>", "jb~FOO"]], [0, 0, 54, 0, 1, 1, 0, 1, 38, -1, 0.0, ["call    write_output"], ["call~FOO"]], [1, 0, 54, 1, 0, 1, 0, 0, 38, -1, 0.0007463119149059502, ["add     rbx, 1"], ["add~rbx,0"]], [2, 0, 3, 0, 2, 11, 3, 2, 30, -1, 0.0020215633423180594, ["lea     rsi, aOffsetTooLarge; \"offset too large: cannot truncate to a \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, obs", "mov     rdx, rax; fmt", "mov     rcx, rbp", "xor     esi, esi; errnum", "mov     edi, 1; status", "xor     eax, eax", "call    nl_error"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r8,obs", "mov~rdx,rax", "mov~rcx,rbp", "xor~esi,esi", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 177, 3, 0, 9, 1, 1, 43, -1, 0.02002362113439411, ["mov     r14, cs:output_blocksize", "xor     edx, edx", "mov     rax, 7FFFFFFFFFFFFFFFh", "mov     r12, rbp", "div     r14", "imul    r12, r14", "add     r12, cs:seek_bytes", "cmp     rbp, rax", "ja      loc_3B19"], ["mov~r14,<TAG>", "xor~edx,edx", "mov~rax,0", "mov~r12,rbp", "div~,r14", "imul~r12,r14", "add~r12,<TAG>", "cmp~rbp,rax", "ja~FOO"]], [2, 0, 218, 0, 0, 4, 2, 0, 31, -1, 0.003159145581543634, ["mov     cs:i_nocache_eof, al", "and     cs:i_nocache_eof, 1", "and     ecx, 0FFFFFFFCh", "mov     cs:input_flags, ecx"], ["mov~<TAG>,al", "and~<TAG>,0", "and~ecx,0", "mov~<TAG>,ecx"]], [0, 0, 49, 0, 0, 1, 0, 1, 37, -1, 0.0014491493493319421, ["jmp     short loc_3357"], ["jmp~FOO"]], [2, 0, 162, 0, 3, 16, 5, 4, 43, -1, 0.0, ["mov     rdx, cs:input_file; arg", "xor     edi, edi; n", "mov     esi, 3; s", "call    quotearg_n_style_colon", "lea     rsi, msgid; \"%s: cannot skip to specified offset\"", "mov     rbp, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax; fmt", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    nl_error", "jmp     loc_25FE"], ["mov~rdx,<TAG>", "xor~edi,edi", "mov~esi,0", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 216, 0, 0, 4, 1, 1, 31, -1, 0.002144741037011274, ["xor     eax, eax", "cmp     cs:max_records, 0", "mov     cs:o_nocache, 1", "jnz     short loc_2361"], ["xor~eax,eax", "cmp~<TAG>,0", "mov~<TAG>,0", "jnz~FOO"]], [1, 0, 217, 0, 0, 2, 1, 1, 30, -1, 0.07481958090600817, ["test    sil, 2", "jz      short loc_2377"], ["test~sil,0", "jz~FOO"]], [1, 0, 215, 0, 0, 3, 1, 0, 32, -1, 0.0, ["xor     eax, eax", "cmp     cs:max_bytes, 0", "setz    al"], ["xor~eax,eax", "cmp~<TAG>,0", "setz~al"]], [0, 0, 49, 0, 0, 1, 0, 0, 35, -1, 0.036971422774831175, ["mov     rsi, cs:oc"], ["mov~rsi,<TAG>"]], [1, 0, 360, 0, 0, 4, 0, 0, 19, 12, 0.09303879799028557, ["lea     rdx, aStatus; \"status\"", "mov     rax, r13", "mov     ecx, 73h ; 's'", "nop     dword ptr [rax+00h]"], ["lea~rdx,<TAG>", "mov~rax,r13", "mov~ecx,0", "nop~[word ptr [rax+0]"]], [2, 0, 214, 0, 0, 4, 2, 0, 32, -1, 0.0031011796075703564, ["mov     cs:o_nocache_eof, al", "and     cs:o_nocache_eof, 1", "and     esi, 0FFFFFFFDh", "mov     cs:output_flags, esi"], ["mov~<TAG>,al", "and~<TAG>,0", "and~esi,0", "mov~<TAG>,esi"]], [2, 0, 360, 2, 0, 4, 0, 1, 20, 11, 0.09607476587713598, ["add     rax, 1", "add     rdx, 1", "cmp     [rax-1], cl", "jnz     loc_33B0"], ["add~rax,0", "add~rdx,0", "cmp~[rax-1]+0],cl", "jnz~FOO"]], [0, 0, 360, 0, 0, 3, 1, 1, 21, 10, 0.0052459206445816305, ["movzx   ecx, byte ptr [rdx]", "test    cl, cl", "jnz     short loc_2B68"], ["movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [0, 0, 360, 0, 0, 3, 1, 1, 22, 9, 0.005398081326261485, ["movzx   eax, byte ptr [rax]", "test    al, al", "jnz     loc_33A8"], ["movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 212, 0, 0, 4, 0, 0, 32, -1, 0.002202707010984552, ["lea     rax, trans_table", "lea     rcx, ebcdic_to_ascii", "lea     rsi, [rax+100h]", "nop     word ptr [rax+rax+00h]"], ["lea~rax,<TAG>", "lea~rcx,<TAG>", "lea~rsi,[rax+0]", "nop~[ord ptr [rax+0]"]], [1, 0, 213, 0, 0, 2, 1, 1, 31, -1, 0.07673245804712633, ["test    bpl, 1", "jz      short loc_23B2"], ["test~bpl,0", "jz~FOO"]], [1, 0, 1, 0, 1, 5, 0, 1, 13, -1, 0.0009636843173057415, ["lea     rdi, arg; \"fullblock\"", "call    quote", "lea     rsi, aInvalidOutputF; \"invalid output flag\"", "mov     rbx, rax", "mov     edx, 5; category"], ["lea~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0"]], [3, 0, 2, 0, 3, 15, 2, 3, 31, -1, 0.0007173289279193113, ["mov     rsi, cs:output_file; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aCannotFstatS; \"cannot fstat %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbx, rax", "call    _dcgettext", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+var_108]", "mov     rcx, rbx", "mov     edi, 1; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    nl_error"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbx,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~rcx,rbx", "mov~edi,0", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO"]], [1, 0, 212, 1, 0, 6, 0, 1, 33, -1, 0.002630206069037475, ["movzx   edx, byte ptr [rax]", "add     rax, 1", "movzx   edx, byte ptr [rcx+rdx]", "mov     [rax-1], dl", "cmp     rsi, rax", "jnz     short loc_2398"], ["movzx~edx,<TAG>", "add~rax,0", "movzx~edx,<TAG>", "mov~[rax-1]+0],dl", "cmp~rsi,rax", "jnz~FOO"]], [1, 0, 360, 0, 0, 2, 0, 1, 23, 9, 0.0014346578558386226, ["cmp     al, 3Dh ; '='", "jz      loc_2B8B"], ["cmp~al,0", "jz~FOO"]], [1, 0, 210, 0, 0, 1, 0, 0, 34, -1, 0.0030432136335970784, ["mov     cs:translation_needed, 1"], ["mov~<TAG>,0"]], [1, 0, 209, 0, 0, 2, 1, 1, 32, -1, 0.07841347129235139, ["test    bpl, 40h", "jz      loc_2FB8"], ["test~bpl,0", "jz~FOO"]], [0, 0, 145, 0, 1, 1, 0, 1, 47, -1, 0.0010361417847723387, ["call    write_output"], ["call~FOO"]], [0, 0, 145, 0, 0, 1, 0, 1, 46, -1, 0.0020940208097846563, ["jmp     short loc_2BB8"], ["jmp~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 46, -1, 0.006180621974900733, ["test    rbp, rbp", "jz      loc_26F0"], ["test~rbp,rbp", "jz~FOO"]], [1, 0, 0, 0, 3, 11, 4, 3, 14, -1, 0.0, ["xor     edi, edi; domainname", "call    _dcgettext", "lea     rdx, format; \"%s: %s\"", "mov     rcx, rax", "xor     edi, edi; status", "mov     r8, rbx", "xor     esi, esi; errnum", "xor     eax, eax", "call    nl_error", "mov     edi, 1; status", "call    usage"], ["xor~edi,edi", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "xor~edi,edi", "mov~r8,rbx", "xor~esi,esi", "xor~eax,eax", "call~FOO", "mov~edi,0", "call~FOO"]], [2, 0, 1, 0, 1, 9, 1, 2, 15, -1, 0.0004202533113062632, ["lea     rax, aCountBytes; \"count_bytes\"", "lea     rdi, aSkipBytes; \"skip_bytes\"", "and     sil, 4", "cmovnz  rdi, rax; arg", "call    quote", "mov     edx, 5", "mov     rbx, rax", "lea     rsi, aInvalidOutputF; \"invalid output flag\"", "jmp     loc_3B9E"], ["lea~rax,<TAG>", "lea~rdi,<TAG>", "and~sil,0", "cmovnz~rdi,rax", "call~FOO", "mov~edx,0", "mov~rbx,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 1, 0, 1, 6, 0, 2, 14, 0, 7.245746746659711e-06, ["lea     rdi, aSeekBytes; \"seek_bytes\"", "call    quote", "mov     edx, 5", "mov     rbx, rax", "lea     rsi, aInvalidInputFl; \"invalid input flag\"", "jmp     loc_3B9E"], ["lea~rdi,<TAG>", "call~FOO", "mov~edx,0", "mov~rbx,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 46, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 45, -1, 0.005173463177115033, ["call    finish_up", "mov     rbx, [rsp+118h+var_40]", "xor     rbx, fs:28h", "mov     eax, dword ptr [rsp+118h+exit_status]", "jnz     loc_3BC7"], ["call~FOO", "mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "mov~eax,[word ptr [rsp+0]", "jnz~FOO"]], [0, 0, 204, 0, 1, 5, 0, 1, 33, -1, 0.0022606729849578297, ["call    ___ctype_toupper_loc", "mov     rsi, [rax]", "lea     rax, trans_table", "lea     rcx, [rax+100h]", "nop     word ptr [rax+rax+00h]"], ["call~FOO", "mov~rsi,<TAG>", "lea~rax,<TAG>", "lea~rcx,[rax+0]", "nop~[ord ptr [rax+0]"]], [2, 0, 360, 0, 1, 10, 0, 2, 21, 15, 0.09428506643071104, ["mov     rsi, [rsp+118h+exit_status]; invalid", "mov     rdi, r8; str", "mov     [rsp+118h+arg], r8", "mov     dword ptr [rsp+118h+bytes], 0", "call    parse_integer", "mov     rdx, r13", "mov     esi, 69h ; 'i'", "lea     rcx, aIbs; \"ibs\"", "mov     r8, [rsp+118h+arg]", "jmp     short loc_33EC"], ["mov~rsi,[rsp+0]", "mov~rdi,r8", "mov~[rsp+0],r8", "mov~[word ptr [rsp+0],0", "call~FOO", "mov~rdx,r13", "mov~esi,0", "lea~rcx,<TAG>", "mov~r8,[rsp+0]", "jmp~FOO"]], [0, 0, 360, 0, 0, 3, 1, 1, 23, 13, 0.0651038869595312, ["movzx   esi, byte ptr [rcx]", "test    sil, sil", "jz      loc_3767"], ["movzx~esi,<TAG>", "test~sil,sil", "jz~FOO"]], [2, 0, 360, 2, 0, 4, 0, 1, 22, 14, 0.09616171483809592, ["add     rdx, 1", "add     rcx, 1", "cmp     [rdx-1], sil", "jz      short loc_33E0"], ["add~rdx,0", "add~rcx,0", "cmp~[rdx-1]+0],sil", "jz~FOO"]], [1, 0, 204, 1, 0, 6, 0, 1, 34, -1, 0.002601223082050836, ["movzx   edx, byte ptr [rax]", "add     rax, 1", "mov     edx, [rsi+rdx*4]", "mov     [rax-1], dl", "cmp     rcx, rax", "jnz     short loc_23D8"], ["movzx~edx,<TAG>", "add~rax,0", "mov~edx,<TAG>", "mov~[rax-1]+0],dl", "cmp~rcx,rax", "jnz~FOO"]], [1, 0, 202, 0, 0, 1, 0, 0, 35, -1, 0.007318204214126308, ["mov     cs:translation_needed, 1"], ["mov~<TAG>,0"]], [0, 0, 203, 0, 0, 1, 0, 1, 36, -1, 0.002949018925890502, ["jmp     loc_23EA"], ["jmp~FOO"]], [1, 0, 201, 0, 0, 2, 1, 1, 34, -1, 0.08107990609512217, ["test    bpl, 2", "jz      loc_2F80"], ["test~bpl,0", "jz~FOO"]], [0, 1, 206, 0, 0, 2, 1, 1, 33, -1, 0.0754064863924876, ["test    bpl, 20h", "jz      loc_23F1"], ["test~bpl,<STR>", "jz~FOO"]], [1, 0, 360, 0, 0, 3, 0, 0, 23, 15, 0.032195410117790264, ["lea     rcx, aObs; \"obs\"", "mov     rdx, r13", "mov     esi, 6Fh ; 'o'"], ["lea~rcx,<TAG>", "mov~rdx,r13", "mov~esi,0"]], [1, 0, 360, 0, 0, 2, 0, 1, 25, 12, 0.000275338376373069, ["cmp     dl, 3Dh ; '='", "jnz     loc_33FA"], ["cmp~dl,0", "jnz~FOO"]], [3, 0, 3, 0, 3, 15, 2, 3, 38, -1, 0.0007100831811726517, ["mov     rsi, cs:input_file; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aFailedToOpenS; \"failed to open %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbx, rax", "call    _dcgettext", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+var_108]", "mov     rcx, rbx", "mov     edi, 1; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    nl_error"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbx,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~rcx,rbx", "mov~edi,0", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO"]], [0, 0, 191, 0, 1, 7, 3, 2, 37, -1, 0.04182969596846651, ["xor     ecx, ecx; mode", "xor     edi, edi; desired_fd", "mov     edx, r12d; flag", "mov     rsi, rbp; file", "call    ifd_reopen", "test    eax, eax", "js      loc_3BCC"], ["xor~ecx,ecx", "xor~edi,edi", "mov~edx,r12d", "mov~rsi,rbp", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 196, 0, 0, 3, 0, 0, 35, -1, 0.0023766049329043853, ["lea     rax, trans_table", "lea     rcx, ascii_to_ebcdic", "lea     rsi, [rax+100h]"], ["lea~rax,<TAG>", "lea~rcx,<TAG>", "lea~rsi,[rax+0]"]], [2, 0, 360, 2, 0, 4, 0, 1, 24, 14, 0.03402858404469517, ["add     rdx, 1", "add     rcx, 1", "cmp     [rdx-1], sil", "jnz     short loc_3433"], ["add~rdx,0", "add~rcx,0", "cmp~[rdx-1]+0],sil", "jnz~FOO"]], [0, 0, 360, 0, 0, 3, 1, 1, 25, 13, 0.007651508564472655, ["movzx   esi, byte ptr [rcx]", "test    sil, sil", "jnz     short loc_3409"], ["movzx~esi,<TAG>", "test~sil,sil", "jnz~FOO"]], [1, 0, 196, 1, 0, 6, 0, 1, 36, -1, 0.002601223082050836, ["movzx   edx, byte ptr [rax]", "add     rax, 1", "movzx   edx, byte ptr [rcx+rdx]", "mov     [rax-1], dl", "cmp     rsi, rax", "jnz     short loc_2410"], ["movzx~edx,<TAG>", "add~rax,0", "movzx~edx,<TAG>", "mov~[rax-1]+0],dl", "cmp~rsi,rax", "jnz~FOO"]], [1, 0, 145, 0, 1, 6, 1, 2, 35, -1, 0.06091861577254152, ["xor     edi, edi; int", "mov     rdx, cs:input_blocksize; size_t", "mov     rsi, rcx; char *", "call    rax ; iread_fnc", "cmp     rax, 0", "jg      loc_2789"], ["xor~edi,edi", "mov~rdx,<TAG>", "mov~rsi,rcx", "call~rax", "cmp~rax,0", "jg~FOO"]], [0, 0, 145, 0, 0, 3, 0, 0, 34, -1, 0.12499637712662667, ["cmp     rbp, r12", "mov     rax, cs:iread_fnc", "jb      loc_2C10"], ["cmp~rbp,r12", "mov~rax,<TAG>", "jb~FOO"]], [0, 0, 360, 0, 0, 3, 1, 1, 26, 12, 0.00900646320609802, ["movzx   edx, byte ptr [rdx]", "test    dl, dl", "jz      loc_35BF"], ["movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [2, 0, 2, 0, 2, 9, 3, 2, 24, -1, 0.0008332608758658668, ["lea     rsi, aCannotCombineA; \"cannot combine any two of {ascii,ebcdic\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; fmt", "mov     edi, 1; status", "xor     eax, eax", "call    nl_error"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 360, 0, 0, 2, 0, 1, 27, 12, 0.00023186389589311074, ["cmp     dl, 3Dh ; '='", "jz      loc_35BF"], ["cmp~dl,0", "jz~FOO"]], [1, 0, 145, 0, 1, 6, 1, 2, 35, -1, 0.06091861577254152, ["xor     edi, edi; int", "mov     rdx, r13; size_t", "mov     rsi, rcx; char *", "call    rax ; iread_fnc", "cmp     rax, 0", "jle     loc_2C28"], ["xor~edi,edi", "mov~rdx,r13", "mov~rsi,rcx", "call~rax", "cmp~rax,0", "jle~FOO"]], [3, 0, 194, 0, 0, 3, 0, 0, 37, -1, 0.00702837434425992, ["mov     cs:translation_needed, 1", "mov     byte ptr cs:newline_character, 25h ; '%'; \"\\n\"", "mov     byte ptr cs:space_character, 40h ; '@'; \" \""], ["mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0"]], [0, 0, 195, 0, 0, 1, 0, 1, 38, -1, 0.002833086977943947, ["jmp     loc_2423"], ["jmp~FOO"]], [1, 0, 145, 0, 0, 2, 1, 1, 37, -1, 0.05140313885749065, ["and     esi, 100h", "jz      short loc_2C45"], ["and~esi,0", "jz~FOO"]], [1, 0, 360, 0, 0, 4, 0, 1, 25, 15, 0.027427708758488177, ["mov     rdx, r13", "mov     esi, 62h ; 'b'", "lea     rcx, aCbs+1; \"bs\"", "jmp     short loc_3450"], ["mov~rdx,r13", "mov~esi,0", "lea~rcx,<TAG>", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 38, -1, 0.04153805466191346, ["cmp     cs:status_level, 1", "jz      short loc_2CA2"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 360, 2, 0, 4, 0, 1, 26, 14, 0.02912683637057988, ["add     rdx, 1", "add     rcx, 1", "cmp     [rdx-1], sil", "jz      short loc_3444"], ["add~rdx,0", "add~rcx,0", "cmp~[rdx-1]+0],sil", "jz~FOO"]], [1, 1, 145, 0, 1, 7, 1, 1, 34, -1, 0.0, ["mov     rdx, cs:input_blocksize; n", "and     esi, 18h", "mov     eax, 20h ; ' '", "mov     rdi, rcx; s", "cmovnz  esi, eax; c", "call    _memset", "mov     rcx, rax"], ["mov~rdx,<TAG>", "and~esi,0", "mov~eax,<STR>", "mov~rdi,rcx", "cmovnz~esi,eax", "call~FOO", "mov~rcx,rax"]], [2, 0, 145, 0, 0, 5, 1, 1, 33, -1, 0.1271121351766513, ["mov     eax, esi", "mov     rcx, cs:ibuf", "and     eax, 500h", "cmp     eax, 500h", "jnz     short loc_2765"], ["mov~eax,esi", "mov~rcx,<TAG>", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 198, 0, 0, 2, 1, 1, 35, -1, 0.07778309132539199, ["and     bpl, 4", "jz      loc_2438"], ["and~bpl,0", "jz~FOO"]], [1, 0, 57, 0, 1, 5, 0, 2, 35, -1, 9.419470770657624e-05, ["lea     rdi, saved_char; buf", "mov     esi, 1; nread", "call    copy_with_block", "mov     esi, cs:conversions_mask", "jmp     loc_320F"], ["lea~rdi,<TAG>", "mov~esi,0", "call~FOO", "mov~esi,<TAG>", "jmp~FOO"]], [3, 0, 187, 0, 1, 19, 4, 2, 38, -1, 0.08124655827029534, ["xor     esi, esi; offset", "mov     edx, 1; whence", "xor     edi, edi; fd", "call    _lseek", "mov     rdx, offset", "mov     rsi, cs:output_file; file", "mov     r12d, cs:output_flags", "not     rdx", "shr     rdx, 3Fh", "test    offset, offset", "mov     cs:input_seekable, dl", "mov     edx, 0", "cmovs   offset, rdx", "test    rsi, rsi", "mov     cs:input_offset, rax", "mov     rax, [rsp+118h+var_108]", "mov     eax, [rax]", "mov     cs:input_seek_errno, eax", "jz      loc_3590"], ["xor~esi,esi", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rdx,offset", "mov~rsi,<TAG>", "mov~r12d,<TAG>", "not~rdx", "shr~rdx,0", "test~offset,offset", "mov~<TAG>,dl", "mov~edx,0", "cmovs~offset,rdx", "test~rsi,rsi", "mov~<TAG>,rax", "mov~rax,[rsp+0]", "mov~eax,<TAG>", "mov~<TAG>,eax", "jz~FOO"]], [3, 0, 145, 0, 3, 18, 4, 4, 38, -1, 0.0071769121525664436, ["mov     rsi, cs:input_file; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aErrorReadingS; \"error reading %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     rbp, rax", "call    _dcgettext", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+var_108]", "xor     edi, edi; status", "mov     rcx, rbp", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    nl_error", "mov     esi, cs:conversions_mask", "test    esi, 100h", "jz      loc_37A5"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~rbp,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "xor~edi,edi", "mov~rcx,rbp", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "mov~esi,<TAG>", "test~esi,0", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 39, -1, 0.002653754745964119, ["cmp     cs:status_level, 1", "jz      short loc_2CA2"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 145, 0, 1, 1, 0, 1, 40, -1, 0.0, ["call    print_stats"], ["call~FOO"]], [1, 0, 145, 1, 1, 7, 1, 2, 39, -1, 0.042648465350839056, ["mov     rbp, cs:input_blocksize", "sub     rbp, [rsp+118h+var_110]", "xor     edi, edi; fd", "mov     rsi, rbp; len", "call    invalidate_cache", "cmp     cs:input_seekable, 0", "jnz     loc_2E44"], ["mov~rbp,<TAG>", "sub~rbp,[rsp+0]", "xor~edi,edi", "mov~rsi,rbp", "call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 145, 1, 0, 2, 0, 1, 43, -1, 0.005934266585514303, ["add     cs:w_full, 1", "jmp     loc_26F0"], ["add~<TAG>,0", "jmp~FOO"]], [1, 0, 145, 0, 0, 3, 0, 1, 40, -1, 0.015307847626776408, ["mov     eax, cs:input_seek_errno", "cmp     eax, 1Dh", "jz      short loc_2D2F"], ["mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 145, 0, 0, 2, 0, 0, 41, -1, 0.0022292747490556372, ["mov     rdi, [rsp+118h+var_108]", "mov     [rdi], eax"], ["mov~rdi,[rsp+0]", "mov~<TAG>,eax"]], [2, 0, 174, 0, 1, 8, 1, 2, 45, -1, 0.019335275193461437, ["mov     rax, [rsp+118h+var_108]", "mov     rdx, [rsp+118h+act]; stat_buf", "mov     esi, 1; fildes", "mov     edi, 1; ver", "mov     ebp, [rax]", "call    ___fxstat", "test    eax, eax", "jnz     loc_3B43"], ["mov~rax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~esi,0", "mov~edi,0", "mov~ebp,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 175, 0, 1, 4, 1, 2, 44, -1, 0.019878706199460916, ["mov     rdi, size; fd", "call    iftruncate", "test    eax, eax", "jnz     loc_34CD"], ["mov~rdi,size", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 19, 0, 1, 7, 0, 2, 40, -1, 0.003727936701156421, ["mov     rsi, cs:output_file; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     edx, 5", "mov     rbx, rax", "lea     rsi, aCannotFstatS; \"cannot fstat %s\"", "jmp     loc_2EE2"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~edx,0", "mov~rbx,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [2, 0, 36, 0, 1, 6, 1, 2, 39, -1, 0.01756369011390314, ["mov     rdx, [rsp+118h+act]; stat_buf", "mov     esi, 1; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "jnz     loc_38B2"], ["mov~rdx,[rsp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [3, 0, 170, 1, 0, 5, 2, 1, 46, -1, 0.019212097498768222, ["mov     eax, [rsp+118h+stdout_stat.st_mode]", "and     eax, 0F000h", "sub     eax, 4000h", "test    eax, 0FFFFB000h", "jnz     loc_2573"], ["mov~eax,[rsp+0]", "and~eax,0", "sub~eax,0", "test~eax,0", "jnz~FOO"]], [2, 0, 145, 0, 3, 16, 4, 3, 42, -1, 0.004047957182467221, ["mov     rdx, cs:input_file; arg", "mov     esi, 3; s", "xor     edi, edi; n", "call    quotearg_n_style_colon", "lea     rsi, aSCannotSeek; \"%s: cannot seek\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbp, rax", "call    _dcgettext", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+var_108]", "mov     rcx, rbp", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    nl_error"], ["mov~rdx,<TAG>", "mov~esi,0", "xor~edi,edi", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbp,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~rcx,rbp", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO"]], [1, 2, 182, 0, 0, 5, 3, 0, 40, -1, 0.00225342723821117, ["and     eax, 200h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 200h", "or      ebp, eax"], ["and~eax,<STR>", "cmp~eax,0", "sbb~eax,eax", "and~eax,<STR>", "or~ebp,eax"]], [3, 0, 145, 0, 0, 3, 0, 0, 43, -1, 0.007286805978224116, ["mov     cs:input_seekable, 0", "mov     cs:input_seek_errno, 1Dh", "mov     dword ptr [rsp+118h+exit_status], 1"], ["mov~<TAG>,0", "mov~<TAG>,0", "mov~[word ptr [rsp+0],0"]], [2, 0, 145, 0, 3, 15, 4, 4, 42, -1, 0.0032533402892502158, ["mov     rsi, cs:input_file; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aOffsetOverflow; \"offset overflow while reading file %s\"", "mov     rbp, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax; fmt", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    nl_error", "jmp     loc_2D16"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 179, 0, 0, 3, 1, 1, 41, -1, 0.02600860794713503, ["mov     opts, cs:seek_records", "test    rbp, rbp", "jz      short loc_2573"], ["mov~opts,<TAG>", "test~rbp,rbp", "jz~FOO"]], [1, 0, 178, 0, 0, 2, 1, 1, 42, -1, 0.020864127757006638, ["test    byte ptr cs:conversions_mask+1, 2", "jnz     short loc_2573"], ["test~<TAG>,0", "jnz~FOO"]], [1, 0, 145, 0, 0, 2, 1, 1, 41, -1, 0.043275222444425124, ["test    byte ptr cs:conversions_mask+1, 4", "jz      loc_26F0"], ["test~<TAG>,0", "jz~FOO"]], [1, 0, 17, 0, 0, 1, 0, 0, 42, -1, 0.0066588412601802744, ["mov     dword ptr [rsp+118h+exit_status], 1"], ["mov~[word ptr [rsp+0],0"]], [3, 0, 145, 0, 3, 15, 2, 3, 47, -1, 0.018617946265542126, ["mov     rsi, cs:output_file; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aFailedToTrunca; \"failed to truncate to %lu bytes in outp\"...", "mov     rbx, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, rbx", "mov     rdx, rax; fmt", "mov     rcx, size", "mov     esi, ebp; errnum", "mov     edi, 1; status", "xor     eax, eax", "call    nl_error"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r8,rbx", "mov~rdx,rax", "mov~rcx,size", "mov~esi,ebp", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [0, 0, 145, 0, 0, 4, 1, 1, 43, -1, 0.02497246616236269, ["mov     r12, cs:input_blocksize", "xor     ebp, ebp", "cmp     r12, rbp", "ja      loc_27CB"], ["mov~r12,<TAG>", "xor~ebp,ebp", "cmp~r12,rbp", "ja~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 42, -1, 0.026660725154334406, ["cmp     [rsp+118h+var_110], 0", "jnz     loc_26F0"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 145, 0, 0, 1, 0, 0, 44, -1, 0.0005361852592528185, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 145, 0, 0, 3, 0, 0, 38, -1, 0.05464742196330754, ["mov     r12, cs:input_blocksize", "cmp     r12, rbp", "jbe     loc_2D60"], ["mov~r12,<TAG>", "cmp~r12,rbp", "jbe~FOO"]], [5, 0, 147, 0, 3, 17, 2, 3, 28, -1, 0.15231284236153378, ["mov     rdi, r8; arg", "call    quote", "lea     rsi, aInvalidNumber; \"invalid number\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     rbx, rax", "call    _dcgettext", "cmp     dword ptr [rsp+118h+bytes], 1", "mov     edx, 0", "mov     esi, 4Bh ; 'K'", "mov     rcx, rax", "mov     r8, rbx", "mov     edi, 1; status", "cmovnz  esi, edx; errnum", "lea     rdx, format; \"%s: %s\"", "xor     eax, eax", "call    nl_error"], ["mov~rdi,r8", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~rbx,rax", "call~FOO", "cmp~[word ptr [rsp+0],0", "mov~edx,0", "mov~esi,0", "mov~rcx,rax", "mov~r8,rbx", "mov~edi,0", "cmovnz~esi,edx", "lea~rdx,<TAG>", "xor~eax,eax", "call~FOO"]], [1, 0, 148, 0, 0, 2, 0, 1, 27, -1, 0.08150015940642842, ["mov     dword ptr [rsp+118h+bytes], 4", "jmp     loc_35FB"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 148, 0, 0, 1, 0, 0, 28, -1, 0.001072370518505637, ["mov     dword ptr [rsp+118h+bytes], 1"], ["mov~[word ptr [rsp+0],0"]], [0, 0, 145, 0, 0, 3, 0, 0, 43, -1, 0.004180795872822653, ["lea     rcx, [r15+rbp]", "mov     rax, r15", "nop     word ptr [rax+rax+00000000h]"], ["lea~rcx,<TAG>", "mov~rax,r15", "nop~[ord ptr [rax+0]"]], [1, 0, 371, 0, 1, 4, 0, 2, 1, 14, 0.0, ["lea     rdi, caught_signals; set", "mov     esi, 0Ah; signo", "call    _sigaddset", "jmp     loc_1EFE"], ["lea~rdi,<TAG>", "mov~esi,0", "call~FOO", "jmp~FOO"]], [1, 0, 372, 1, 2, 19, 2, 3, 0, 14, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12d, edi", "push    rbp", "push    rbx", "lea     argc, name; \"POSIXLY_CORRECT\"", "mov     rbp, argv", "sub     rsp, 0E8h", "mov     rax, fs:28h", "mov     [rsp+118h+var_40], rax", "xor     eax, eax", "call    _getenv", "lea     rdi, caught_signals; set", "mov     rbx, rax", "call    _sigemptyset", "test    rbx, rbx", "jz      loc_357A"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12d,edi", "push~rbp", "push~rbx", "lea~argc,<TAG>", "mov~rbp,argv", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "lea~rdi,<TAG>", "mov~rbx,rax", "call~FOO", "test~rbx,rbx", "jz~FOO"]], [1, 0, 168, 1, 1, 7, 1, 2, 40, -1, 0.0598969654812625, ["call    gethrxtime", "mov     r14, cs:skip_records", "mov     cs:start_time, rax", "add     rax, 3B9ACA00h", "mov     cs:next_time, rax", "test    r14, r14", "jnz     short loc_25A2"], ["call~FOO", "mov~r14,<TAG>", "mov~<TAG>,rax", "add~rax,0", "mov~<TAG>,rax", "test~r14,r14", "jnz~FOO"]], [2, 0, 169, 0, 2, 10, 1, 3, 39, -1, 0.053129438019882326, ["lea     rsi, aStandardOutput; \"standard output\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     esi, r12d; add_flags", "mov     rdx, rax; name", "mov     edi, 1; fd", "mov     cs:output_file, rax", "call    set_fd_flags", "jmp     loc_2573"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~esi,r12d", "mov~rdx,rax", "mov~edi,0", "mov~<TAG>,rax", "call~FOO", "jmp~FOO"]], [0, 0, 6, 0, 1, 3, 2, 1, 43, -1, 0.0037605425615163898, ["xor     esi, esi; len", "xor     edi, edi; fd", "call    invalidate_cache"], ["xor~esi,esi", "xor~edi,edi", "call~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 42, -1, 0.012462684404254703, ["cmp     cs:i_nocache, 0", "jnz     short loc_2F27"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 43, -1, 0.0037605425615163898, ["cmp     cs:i_nocache_eof, 0", "jz      short loc_2F30"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 167, 0, 0, 2, 0, 1, 41, -1, 0.052941048604469174, ["cmp     cs:skip_bytes, 0", "jz      short loc_25FE"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 145, 1, 0, 6, 0, 1, 44, -1, 0.0031229168478103353, ["movzx   edx, byte ptr [rax]", "add     rax, 1", "movzx   edx, byte ptr [rbx+rdx]", "mov     [rax-1], dl", "cmp     rax, rcx", "jnz     short loc_2D90"], ["movzx~edx,<TAG>", "add~rax,0", "movzx~edx,<TAG>", "mov~[rax-1]+0],dl", "cmp~rax,rcx", "jnz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 43, -1, 0.01450598498681274, ["cmp     cs:char_is_saved, 0", "jz      short loc_2DD4"], ["cmp~<TAG>,0", "jz~FOO"]], [3, 0, 145, 2, 0, 5, 0, 0, 44, -1, 0.0, ["movzx   eax, cs:saved_char", "add     rbp, 1", "mov     cs:char_is_saved, 0", "sub     r15, 1", "mov     [r15], al"], ["movzx~eax,<TAG>", "add~rbp,0", "mov~<TAG>,0", "sub~r15,0", "mov~<TAG>,al"]], [1, 0, 145, 0, 0, 2, 1, 1, 44, -1, 0.012390226936788104, ["test    bpl, 1", "jz      short loc_2DF0"], ["test~bpl,0", "jz~FOO"]], [1, 0, 360, 0, 0, 6, 0, 0, 27, 11, 0.011730863982842071, ["mov     rdx, cs:page_size", "mov     rdi, 7FFFFFFFFFFFFFFFh", "mov     cs:output_blocksize, rax", "neg     rdx", "cmp     rdx, rdi", "cmova   rdx, rdi"], ["mov~rdx,<TAG>", "mov~rdi,0", "mov~<TAG>,rax", "neg~rdx", "cmp~rdx,rdi", "cmova~rdx,rdi"]], [0, 0, 360, 0, 0, 2, 1, 1, 26, 10, 0.09954292124640482, ["test    rax, rax", "jz      loc_37D2"], ["test~rax,rax", "jz~FOO"]], [1, 0, 360, 1, 0, 9, 0, 1, 25, 11, 0.06905281893646076, ["mov     rdi, cs:page_size", "mov     cs:input_blocksize, rax", "lea     rdx, [rdi+2]", "mov     rdi, 7FFFFFFFFFFFFFFFh", "add     rdx, rdx", "neg     rdx", "cmp     rdx, rdi", "cmova   rdx, rdi", "jmp     loc_35E1"], ["mov~rdi,<TAG>", "mov~<TAG>,rax", "lea~rdx,[rdi+0]", "mov~rdi,0", "add~rdx,rdx", "neg~rdx", "cmp~rdx,rdi", "cmova~rdx,rdi", "jmp~FOO"]], [2, 0, 145, 1, 0, 4, 0, 0, 45, -1, 0.0, ["sub     rbp, 1", "mov     cs:char_is_saved, 1", "movzx   eax, byte ptr [r15+rbp]", "mov     cs:saved_char, al"], ["sub~rbp,0", "mov~<TAG>,0", "movzx~eax,<TAG>", "mov~<TAG>,al"]], [0, 0, 165, 3, 0, 6, 0, 1, 42, -1, 0.0019635973683447814, ["mov     rax, r14", "add     rbp, r12", "imul    rax, r15", "add     rax, rbp", "cmp     rax, cs:input_offset", "jz      short loc_25FE"], ["mov~rax,r14", "add~rbp,r12", "imul~rax,r15", "add~rax,rbp", "cmp~rax,<TAG>", "jz~FOO"]], [1, 0, 145, 0, 0, 4, 0, 1, 45, -1, 0.01027446888676347, ["mov     rdx, rbp", "lea     rax, [r15+rbp]", "shr     rdx, 1", "jz      short loc_2E18"], ["mov~rdx,rbp", "lea~rax,<TAG>", "shr~rdx,0", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 0, 0, 46, -1, 0.0020940208097846563, ["neg     rdx", "lea     rsi, [rax+rdx*2]", "nop     dword ptr [rax+rax+00h]"], ["neg~rdx", "lea~rsi,<TAG>", "nop~[word ptr [rax+0]"]], [0, 0, 161, 0, 0, 4, 1, 1, 42, -1, 0.05857823957337043, ["mov     rdx, cs:seek_records; records", "mov     rax, cs:seek_bytes", "test    rdx, rdx", "jnz     short loc_261A"], ["mov~rdx,<TAG>", "mov~rax,<TAG>", "test~rdx,rdx", "jnz~FOO"]], [0, 0, 160, 0, 0, 2, 1, 1, 43, -1, 0.04561559864359621, ["test    rax, rax", "jz      loc_26AA"], ["test~rax,rax", "jz~FOO"]], [1, 0, 145, 1, 0, 5, 0, 1, 47, -1, 0.0010361417847723387, ["movzx   edx, byte ptr [rax-2]", "sub     rax, 2", "mov     [rax+2], dl", "cmp     rax, rsi", "jnz     short loc_2E08"], ["movzx~edx,[yte ptr [rax-2]+0]", "sub~rax,0", "mov~[rax+0],dl", "cmp~rax,rsi", "jnz~FOO"]], [0, 0, 156, 0, 1, 5, 1, 1, 44, -1, 0.005709648436367852, ["mov     rdx, cs:output_blocksize; n", "mov     rdi, cs:obuf; s", "xor     esi, esi; c", "call    _memset", "nop     dword ptr [rax]"], ["mov~rdx,<TAG>", "mov~rdi,<TAG>", "xor~esi,esi", "call~FOO", "nop~<TAG>"]], [0, 0, 145, 0, 1, 4, 0, 2, 44, -1, 0.007104454685099846, ["mov     rsi, rbp; nread", "mov     rdi, r15; buf", "call    copy_with_block", "jmp     loc_26F0"], ["mov~rsi,rbp", "mov~rdi,r15", "call~FOO", "jmp~FOO"]], [0, 0, 145, 0, 1, 4, 1, 2, 38, -1, 0.0, ["mov     rsi, rax; len", "xor     edi, edi; fd", "call    invalidate_cache", "jmp     loc_27BB"], ["mov~rsi,rax", "xor~edi,edi", "call~FOO", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 37, -1, 0.05676318001333217, ["cmp     cs:i_nocache, 0", "jnz     loc_2E35"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 146, 0, 1, 2, 0, 2, 29, -1, 0.15233457960177377, ["call    alloc_ibuf", "jmp     loc_26D0"], ["call~FOO", "jmp~FOO"]], [1, 0, 147, 0, 0, 2, 0, 1, 45, -1, 0.04737631510303452, ["cmp     cs:ibuf, 0", "jz      loc_3644"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 368, 0, 1, 21, 1, 2, 2, 12, 0.010665739211083094, ["movdqa  xmm0, xmmword ptr cs:caught_signals.__val", "lea     rdi, caught_signals; set", "mov     esi, 0Ah; signo", "movups  xmmword ptr [rsp+118h+stdout_stat.st_ino], xmm0", "movdqa  xmm0, xmmword ptr cs:caught_signals.__val+10h", "movups  xmmword ptr [rsp+118h+stdout_stat.st_mode], xmm0", "movdqa  xmm0, xmmword ptr cs:caught_signals.__val+20h", "movups  xmmword ptr [rsp+118h+stdout_stat.st_rdev], xmm0", "movdqa  xmm0, xmmword ptr cs:caught_signals.__val+30h", "movups  xmmword ptr [rsp+118h+stdout_stat.st_blksize], xmm0", "movdqa  xmm0, xmmword ptr cs:caught_signals.__val+40h", "movups  xmmword ptr [rsp+118h+stdout_stat.st_atim.tv_sec], xmm0", "movdqa  xmm0, xmmword ptr cs:caught_signals.__val+50h", "movups  xmmword ptr [rsp+118h+stdout_stat.st_mtim.tv_sec], xmm0", "movdqa  xmm0, xmmword ptr cs:caught_signals.__val+60h", "movups  xmmword ptr [rsp+118h+stdout_stat.st_ctim.tv_sec], xmm0", "movdqa  xmm0, xmmword ptr cs:caught_signals.__val+70h", "movups  xmmword ptr [rsp+118h+stdout_stat.__glibc_reserved], xmm0", "call    _sigismember", "test    eax, eax", "jz      short loc_1FE1"], ["movdqa~xmm0,<TAG>", "lea~rdi,<TAG>", "mov~esi,0", "movups~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 370, 0, 1, 8, 1, 2, 1, 13, 0.005361852592528186, ["lea     rax, [rsp+118h+stdout_stat]", "xor     esi, esi; act", "mov     edi, 2; sig", "mov     rdx, rax; oact", "mov     [rsp+118h+act], rax", "call    _sigaction", "cmp     [rsp+118h+stdout_stat.st_dev], 1", "jz      short loc_1F30"], ["lea~rax,[rsp+0]", "xor~esi,esi", "mov~edi,0", "mov~rdx,rax", "mov~[rsp+0],rax", "call~FOO", "cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 369, 0, 1, 3, 0, 1, 2, 13, 0.0, ["lea     rdi, caught_signals; set", "mov     esi, 2; signo", "call    _sigaddset"], ["lea~rdi,<TAG>", "mov~esi,0", "call~FOO"]], [1, 0, 145, 0, 0, 1, 0, 0, 41, -1, 0.0019092542677448413, ["mov     cs:input_offset_overflow, 1"], ["mov~<TAG>,0"]], [0, 0, 42, 1, 1, 5, 1, 2, 38, -1, 0.00848839231371185, ["mov     rdi, cs:obuf; fd", "call    iwrite", "add     cs:w_bytes, rax", "test    rax, rax", "jz      short loc_366E"], ["mov~rdi,<TAG>", "call~FOO", "add~<TAG>,rax", "test~rax,rax", "jz~FOO"]], [1, 0, 41, 1, 0, 1, 0, 0, 39, -1, 0.0, ["add     cs:w_partial, 1"], ["add~<TAG>,0"]], [0, 0, 360, 0, 0, 3, 1, 1, 31, 10, 0.011709126742602093, ["movzx   edx, byte ptr [rdx]", "test    dl, dl", "jz      short loc_37C2"], ["movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [1, 0, 156, 1, 0, 2, 0, 1, 46, -1, 0.0036446106135698346, ["sub     r12, 1", "jnz     short loc_2660"], ["sub~r12,0", "jnz~FOO"]], [0, 0, 20, 0, 0, 1, 0, 1, 40, -1, 0.0016846361185983826, ["jmp     loc_2EC2"], ["jmp~FOO"]], [1, 0, 153, 0, 0, 2, 0, 1, 47, -1, 0.003304060516476828, ["cmp     [rsp+118h+bytes], 0", "jz      short loc_26AA"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 28, 0, 1, 4, 1, 2, 40, -1, 0.009448453757644262, ["mov     edi, 1; fildes", "call    _fdatasync", "test    eax, eax", "jz      short loc_36AF"], ["mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 27, 1, 0, 6, 1, 1, 41, -1, 0.0047387183723154504, ["mov     rax, [rsp+118h+var_108]", "mov     eax, [rax]", "mov     dword ptr [rsp+118h+var_110], eax", "sub     eax, 16h", "and     eax, 0FFFFFFEFh", "jnz     loc_38D7"], ["mov~rax,[rsp+0]", "mov~eax,<TAG>", "mov~[word ptr [rsp+0],eax", "sub~eax,0", "and~eax,0", "jnz~FOO"]], [1, 0, 25, 0, 0, 1, 1, 0, 42, -1, 0.00036228733733298553, ["or      cs:conversions_mask, 8000h"], ["or~<TAG>,0"]], [3, 0, 26, 0, 3, 17, 3, 4, 42, -1, 0.0, ["mov     rsi, cs:output_file; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aFdatasyncFaile; \"fdatasync failed for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbx, rax", "call    _dcgettext", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+var_108]", "mov     rcx, rbx", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    nl_error", "mov     dword ptr [rsp+118h+exit_status], 1", "jmp     loc_36A5"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbx,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~rcx,rbx", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [2, 0, 19, 0, 1, 6, 0, 1, 41, -1, 0.006919688143060023, ["mov     rsi, cs:output_file; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aErrorWritingS; \"error writing %s\"", "mov     rbx, rax", "mov     edx, 5; category"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0"]], [2, 0, 145, 0, 1, 4, 0, 1, 30, -1, 0.1998123351592615, ["call    alloc_obuf", "mov     dword ptr [rsp+118h+exit_status], 0", "mov     [rsp+118h+var_110], 0", "nop     word ptr [rax+rax+00000000h]"], ["call~FOO", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],0", "nop~[ord ptr [rax+0]"]], [0, 0, 18, 0, 2, 9, 3, 2, 41, -1, 0.00877822218357824, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+var_108]", "mov     rcx, rbx", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    nl_error"], ["xor~edi,edi", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~rcx,rbx", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO"]], [2, 0, 18, 0, 3, 17, 3, 4, 44, -1, 9.057183433324638e-05, ["mov     rsi, cs:output_file; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aFailedToTrunca_0; \"failed to truncate to %ld bytes in outp\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     rbp, rax", "call    _dcgettext", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+var_108]", "mov     r8, rbp", "mov     rcx, rbx", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    nl_error", "jmp     loc_2EFF"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~rbp,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~r8,rbp", "mov~rcx,rbx", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 44, -1, 0.005093759962901776, ["cmp     cs:o_nocache, 0", "jnz     short loc_2F42"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 45, -1, 4.347448047995827e-05, ["cmp     cs:o_nocache_eof, 0", "jz      short loc_2F4E"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 3, 0, 1, 3, 1, 1, 45, -1, 4.347448047995827e-05, ["xor     esi, esi; len", "mov     edi, 1; fd", "call    invalidate_cache"], ["xor~esi,esi", "mov~edi,0", "call~FOO"]], [0, 0, 360, 0, 0, 3, 1, 1, 24, 12, 0.06641536712067662, ["movzx   edx, byte ptr [rdx]", "test    dl, dl", "jz      short loc_3777"], ["movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 46, -1, 0.0, ["add     rsp, 0E8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 197, 0, 0, 4, 0, 0, 36, -1, 0.0023983421731443642, ["lea     rax, trans_table", "lea     rcx, ascii_to_ibm", "lea     rsi, [rax+100h]", "nop"], ["lea~rax,<TAG>", "lea~rcx,<TAG>", "lea~rsi,[rax+0]", "nop"]], [0, 0, 145, 1, 0, 8, 2, 1, 36, -1, 0.05887893806335681, ["xor     edx, edx", "mov     rcx, rax", "add     rcx, cs:input_offset", "mov     rbp, rax", "setb    dl", "mov     cs:input_offset, rcx", "test    rdx, rdx", "jz      short loc_27AE"], ["xor~edx,edx", "mov~rcx,rax", "add~rcx,<TAG>", "mov~rbp,rax", "setb~dl", "mov~<TAG>,rcx", "test~rdx,rdx", "jz~FOO"]], [1, 0, 145, 0, 0, 1, 0, 0, 37, -1, 0.0, ["mov     cs:input_offset_overflow, 1"], ["mov~<TAG>,0"]], [1, 0, 197, 1, 0, 6, 0, 1, 37, -1, 0.0026229603222908153, ["movzx   edx, byte ptr [rax]", "add     rax, 1", "movzx   edx, byte ptr [rcx+rdx]", "mov     [rax-1], dl", "cmp     rsi, rax", "jnz     short loc_2FA0"], ["movzx~edx,<TAG>", "add~rax,0", "movzx~edx,<TAG>", "mov~[rax-1]+0],dl", "cmp~rsi,rax", "jnz~FOO"]], [0, 0, 205, 0, 1, 5, 0, 1, 34, -1, 0.0022824102251978087, ["call    ___ctype_tolower_loc", "mov     rsi, [rax]", "lea     rax, trans_table", "lea     rcx, [rax+100h]", "nop     dword ptr [rax+rax+00000000h]"], ["call~FOO", "mov~rsi,<TAG>", "lea~rax,<TAG>", "lea~rcx,[rax+0]", "nop~[word ptr [rax+0]"]], [2, 0, 367, 0, 1, 7, 1, 1, 3, 12, 0.0, ["mov     rsi, [rsp+118h+act]; act", "lea     rax, siginfo_handler", "xor     edx, edx; oact", "mov     edi, 0Ah; sig", "mov     dword ptr [rsp+118h+stdout_stat.__glibc_reserved+10h], 0", "mov     [rsp+118h+stdout_stat.st_dev], rax", "call    _sigaction"], ["mov~rsi,[rsp+0]", "lea~rax,<TAG>", "xor~edx,edx", "mov~edi,0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],rax", "call~FOO"]], [1, 0, 145, 0, 0, 2, 1, 1, 40, -1, 0.008354345998898647, ["test    esi, 100h", "jnz     loc_2FF7"], ["test~esi,0", "jnz~FOO"]], [1, 0, 205, 1, 0, 6, 0, 1, 35, -1, 0.0026229603222908153, ["movzx   edx, byte ptr [rax]", "add     rax, 1", "mov     edx, [rsi+rdx*4]", "mov     [rax-1], dl", "cmp     rcx, rax", "jnz     short loc_2FE0"], ["movzx~edx,<TAG>", "add~rax,0", "mov~edx,<TAG>", "mov~[rax-1]+0],dl", "cmp~rcx,rax", "jnz~FOO"]]], "func_feature": [152, 284, 426, 3, 373, 591, 0, 1679, 0.02785, 124, 84], "succs": [[174], [0, 109], [67], [2, 67], [56, 10], [4, 157], [199], [190, 6], [203], [8, 204], [16, 56], [21, 207], [371, 11], [11], [11], [11], [22], [16], [244, 245], [18, 38], [18], [26, 27], [37, 23], [29, 22], [297, 28], [24, 300], [33, 323], [313, 26], [30, 303], [57, 31], [34, 42], [57, 37], [337, 19], [337, 19], [41, 42], [192, 341], [35, 341], [39], [44, 93], [40, 100], [47, 39], [46, 303], [41, 43], [41], [52, 93], [44, 93], [297, 59], [50, 51], [49, 15], [15], [53], [50, 100], [93], [58, 90], [312, 53], [53, 311], [53], [53], [310], [297], [63], [106, 60], [108, 60], [64, 77], [68, 63], [301, 70], [65, 298], [71], [115, 69], [115, 77], [214], [76, 71], [36, 78], [72, 336], [199], [200, 74], [91, 179], [79], [145], [80, 95], [81, 79], [88, 82], [88, 95], [86, 87], [83, 276], [25, 345], [87], [92], [90], [105, 100], [89, 118], [89], [99, 174], [281, 92], [92], [103], [90], [96, 98], [96, 121], [1, 283], [], [250], [250, 101], [104, 121], [97, 103], [61], [107, 61], [108, 62], [90], [164, 110], [346, 119], [110], [113, 110], [114, 110], [176, 110], [90], [90], [90], [122, 183], [126, 295], [350, 119], [131], [133], [177, 125], [123, 279], [177, 139], [352, 137], [128, 126], [129, 126], [130, 126], [126, 359], [132, 230], [131, 142], [136, 147], [133, 135], [133], [147], [141, 189], [137], [151], [139], [149], [146, 116], [], [349, 143], [36, 143], [116, 230], [153, 148], [153], [189, 150], [161, 149], [152, 154], [348, 151], [156, 237], [157], [154, 55], [160, 248], [17, 5], [162, 7], [180, 158], [165, 247], [358], [7], [33, 323], [174], [168, 170], [169, 159], [166, 175], [172, 167], [159], [171, 167], [167], [167], [218, 111], [173, 229], [178, 159], [111], [327], [159], [183], [187, 7], [193], [194, 181], [184, 134], [134], [284], [185, 263], [7], [319, 191], [188, 319], [201, 195], [196, 197], [191], [56], [193, 9], [199], [250, 102], [196, 198], [196], [182, 271], [199], [200, 202], [200, 75], [213], [203, 205], [209, 203], [208, 289], [356, 206], [45], [227, 215], [225, 333], [210, 330], [210, 333], [221], [213, 301], [216, 223], [223], [219, 220], [224, 217], [220], [218], [238], [221, 293], [227], [112], [333], [228, 231], [226, 236], [231], [112], [232], [236], [233, 252], [232, 234], [240, 117], [239], [242, 235], [246], [237], [241, 239], [252, 117], [242], [259, 251], [245], [243], [20, 45], [], [246], [246], [], [249, 364], [255], [254], [363, 254], [260, 253], [256, 255], [258], [256], [264, 282], [369, 258], [265], [328, 260], [271], [284, 262], [267], [266, 277], [265, 270], [274, 267], [84, 366], [273, 268], [272, 326], [247], [277, 326], [84, 366], [186], [274], [285, 278], [279], [288, 285], [140, 124], [269], [280, 269], [186, 365], [174], [66, 317], [94, 286], [288, 287], [288], [290, 85], [45], [291, 303], [297], [296, 238], [316, 292], [358], [294, 127], [305, 316], [299], [214], [303], [299], [316, 302], [316, 222], [307, 45], [189], [42], [12, 308], [306, 45], [13], [12, 13], [340], [310], [310], [322], [343], [314, 343], [321, 211], [316], [360], [320, 318], [360, 318], [211, 333], [322, 163], [324, 325], [325], [329, 331], [327], [54, 311], [327], [331], [212, 333], [32, 332], [335], [73, 334], [73, 36], [32, 335], [144], [45], [309], [338, 309], [357], [340, 357], [370, 3], [344, 342], [342], [300], [120, 347], [120], [155, 55], [144, 351], [356], [145, 36], [353, 138], [354, 355], [138], [354], [358], [45], [304], [304], [361, 362], [362, 250], [250], [328, 261], [], [368], [339, 367], [339], [368, 275], [372], [3], [48, 14], [257, 372]], "fname": "main", "n_num": 373}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 0, 0, 1, 12, 2, 1, 0, 0, 0.0, ["xor     ebp, ebp", "mov     r9, rdx; rtld_fini", "pop     rsi; argc", "mov     rdx, rsp; ubp_av", "and     rsp, 0FFFFFFFFFFFFFFF0h", "push    rax", "push    rsp; stack_end", "lea     r8, __libc_csu_fini; fini", "lea     rcx, __libc_csu_init; init", "lea     rdi, main; main", "call    cs:__libc_start_main_ptr", "hlt"], ["xor~ebp,ebp", "mov~r9,rdx", "pop~rsi", "mov~rdx,rsp", "and~rsp,0", "push~rax", "push~rsp", "lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "call~<TAG>", "hlt"]]], "func_feature": [1, 2, 1, 0, 1, 0, 0, 12, 0.0, 4, 0], "succs": [[]], "fname": "_start", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_deregisterTMCloneTable_ptr", "test    rax, rax", "jz      short loc_3CE0"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 6, 0, 1, 0, 1, 0.0, ["lea     rdi, __bss_start", "push    rbp", "lea     rax, __bss_start", "cmp     rax, rdi", "mov     rbp, rsp", "jz      short loc_3CE0"], ["lea~rdi,<TAG>", "push~rbp", "lea~rax,<TAG>", "cmp~rax,rdi", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, -1, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 13, 0.04167, 2, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "deregister_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [3, 0, 3, 2, 0, 11, 0, 1, 0, 0, 0.0, ["lea     rdi, __bss_start", "lea     rsi, __bss_start", "push    rbp", "sub     rsi, rdi", "mov     rbp, rsp", "sar     rsi, 3", "mov     rax, rsi", "shr     rax, 3Fh", "add     rsi, rax", "sar     rsi, 1", "jz      short loc_3D30"], ["lea~rdi,<TAG>", "lea~rsi,<TAG>", "push~rbp", "sub~rsi,rdi", "mov~rbp,rsp", "sar~rsi,0", "mov~rax,rsi", "shr~rax,0", "add~rsi,rax", "sar~rsi,0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_registerTMCloneTable_ptr", "test    rax, rax", "jz      short loc_3D30"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, 0, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 18, 0.04167, 2, 2], "succs": [[], [0, 2], [0, 3], []], "fname": "register_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 0, 0, 1, 4, 0, 1, 0, 0, 0.0, ["call    deregister_tm_clones", "mov     cs:completed_7697, 1", "pop     rbp", "retn"], ["call~FOO", "mov~<TAG>,0", "pop~rbp", "retn"]], [1, 0, 2, 0, 0, 4, 0, 1, 1, -1, 0.16666666666666666, ["cmp     cs:__cxa_finalize_ptr, 0", "push    rbp", "mov     rbp, rsp", "jz      short loc_3D63"], ["cmp~<TAG>,0", "push~rbp", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     rdi, cs:__dso_handle", "call    __cxa_finalize"], ["mov~rdi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:completed_7697, 0", "jnz     short locret_3D78"], ["cmp~<TAG>,0", "jnz~FOO"]]], "func_feature": [2, 0, 4, 0, 5, 5, 0, 13, 0.03333, 3, 0], "succs": [[], [0, 2], [0], [], [1, 3]], "fname": "__do_global_dtors_aux", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "pop     rbp", "jmp     register_tm_clones"], ["push~rbp", "mov~rbp,rsp", "pop~rbp", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "frame_dummy", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:interrupt_signal, edi", "retn"], ["mov~<TAG>,edi", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "interrupt_handler", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 0, 1, 0, 4, 0, 0, 0, 0, 0.0, ["mov     eax, cs:info_signal_count", "add     eax, 1", "mov     cs:info_signal_count, eax", "retn"], ["mov~eax,<TAG>", "add~eax,0", "mov~<TAG>,eax", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 4, 0.0, 1, 1], "succs": [[]], "fname": "siginfo_handler", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 17, 0, 0, 5, 0, 1, 0, 0, 0.01210826210826211, ["lea     rdx, [rax+1]", "lea     r8, a0fS; \"%.0f s\"", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Dh", "jmp     loc_3EAF"], ["lea~rdx,[rax+0]", "lea~r8,<TAG>", "mov~[rdi+0],rdx", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 19, 0, 0, 4, 0, 0, 3, 8, 0.022792022792022793, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_4110"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [1, 1, 14, 0, 1, 6, 0, 2, 4, 7, 0.05128205128205129, ["mov     rdi, iec; s", "call    _strlen", "cmp     byte ptr [iec+rax-2], 20h ; ' '", "mov     r15, cs:w_bytes", "mov     edx, 5; category", "jz      loc_4040"], ["mov~rdi,iec", "call~FOO", "cmp~[yte ptr [iec+0],<STR>", "mov~r15,<TAG>", "mov~edx,0", "jz~FOO"]], [4, 1, 16, 0, 2, 11, 0, 3, 3, 6, 0.25071225071225073, ["lea     r14, [rsp+818h+delta_s_buf]", "mov     ecx, 18h", "mov     edx, 1", "mov     esi, 18h", "mov     eax, 1", "mov     rdi, r14", "call    ___snprintf_chk", "mov     rdi, si_0; s", "call    _strlen", "cmp     byte ptr [si_0+rax-2], 20h ; ' '", "jz      loc_4060"], ["lea~r14,[rsp+0]", "mov~ecx,0", "mov~edx,0", "mov~esi,0", "mov~eax,0", "mov~rdi,r14", "call~FOO", "mov~rdi,si_0", "call~FOO", "cmp~[yte ptr [si_0+0],<STR>", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 9, -1, 0.0, ["add     rsp, 7E8h", "pop     stats_len", "pop     progress_time", "pop     r12", "pop     iec", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~stats_len", "pop~progress_time", "pop~r12", "pop~iec", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 8, 1, 0.07122507122507123, ["mov     rax, [rsp+818h+var_40]", "xor     rax, fs:28h", "jnz     loc_4132"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 12, 1, 1, 7, 1, 2, 5, 6, 0.017094017094017096, ["lea     rsi, aLuBytesSCopied; \"%lu bytes (%s) copied, %s, %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r14", "push    bytes_per_second", "jmp     loc_3F1B"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "sub~rsp,0", "mov~r9,r14", "push~bytes_per_second", "jmp~FOO"]], [1, 0, 3, 0, 1, 3, 0, 2, 7, 2, 0.02777777777777778, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     loc_3F5C"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [0, 0, 5, 0, 0, 4, 0, 0, 6, 3, 0.10256410256410257, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_4100"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 5, 4, 0.24216524216524218, ["test    progress_time, progress_time", "jz      loc_4008"], ["test~progress_time,progress_time", "jz~FOO"]], [0, 0, 12, 0, 1, 6, 1, 1, 5, 6, 0.017094017094017096, ["lea     rsi, aLuBytesSSCopie; \"%lu bytes (%s, %s) copied, %s, %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "push    bytes_per_second", "push    r14", "mov     r9, iec"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "push~bytes_per_second", "push~r14", "mov~r9,iec"]], [0, 0, 23, 1, 0, 3, 0, 1, 2, 9, 0.012820512820512822, ["sub     now, rax", "mov     r8, delta_xtime; to_block_size", "js      loc_40B0"], ["sub~now,rax", "mov~r8,delta_xtime", "js~FOO"]], [6, 0, 25, 0, 2, 18, 0, 3, 1, 8, 0.07122507122507123, ["lea     rbx, [rsp+818h+hbuf]", "mov     rdi, cs:w_bytes; n", "mov     r8d, 1; to_block_size", "mov     ecx, 1; from_block_size", "mov     edx, 1D1h; opts", "mov     rsi, rbx; buf", "call    human_readable", "mov     rdi, cs:w_bytes; n", "lea     rsi, [rbx+28Eh]; buf", "mov     r8d, 1; to_block_size", "mov     ecx, 1; from_block_size", "mov     edx, 1F1h; opts", "mov     r12, rax", "call    human_readable", "mov     r13, rax", "mov     iec, cs:start_time", "cmp     rax, now", "jge     loc_3F88"], ["lea~rbx,[rsp+0]", "mov~rdi,<TAG>", "mov~r8d,0", "mov~ecx,0", "mov~edx,0", "mov~rsi,rbx", "call~FOO", "mov~rdi,<TAG>", "lea~rsi,[rbx+0]", "mov~r8d,0", "mov~ecx,0", "mov~edx,0", "mov~r12,rax", "call~FOO", "mov~r13,rax", "mov~iec,<TAG>", "cmp~rax,now", "jge~FOO"]], [2, 0, 11, 0, 2, 17, 2, 3, 4, 5, 0.18803418803418803, ["mov     si_0, cs:w_bytes", "lea     rdx, msgid2; \"%lu bytes copied, %s, %s\"", "lea     rsi, msgid1; \"%lu byte copied, %s, %s\"", "mov     r8d, 5; category", "xor     edi, edi; domainname", "mov     rcx, r12; n", "call    _dcngettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     r9, bytes_per_second", "mov     rdx, rax", "mov     r8, r14", "mov     rcx, r12", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "mov     ebx, eax", "jmp     loc_3F3B"], ["mov~si_0,<TAG>", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~r8d,0", "xor~edi,edi", "mov~rcx,r12", "call~FOO", "mov~rdi,<TAG>", "mov~r9,bytes_per_second", "mov~rdx,rax", "mov~r8,r14", "mov~rcx,r12", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~ebx,eax", "jmp~FOO"]], [1, 0, 3, 0, 0, 4, 0, 1, 7, 2, 0.02777777777777778, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah", "jmp     loc_3F5C"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0", "jmp~FOO"]], [4, 0, 20, 0, 2, 17, 1, 3, 4, 7, 0.08547008547008547, ["divsd   xmm0, cs:qword_E170", "mov     rdi, cs:w_bytes; n", "lea     rsi, [rbx+51Ch]; buf", "mov     ecx, 3B9ACA00h; from_block_size", "mov     edx, 1D1h; opts", "movsd   [rsp+818h+delta_s], xmm0", "call    human_readable", "mov     rdi, rax; s", "mov     rbx, rax", "call    _strlen", "mov     ecx, 732Fh", "test    progress_time, progress_time", "mov     byte ptr [bytes_per_second+rax+2], 0", "mov     [bytes_per_second+rax], cx", "movsd   xmm0, [rsp+818h+delta_s]", "lea     r8, aGS; \"%g s\"", "jnz     loc_3FD9"], ["divsd~xmm0,<TAG>", "mov~rdi,<TAG>", "lea~rsi,[rbx+0]", "mov~ecx,0", "mov~edx,0", "movsd~[rsp+0],xmm0", "call~FOO", "mov~rdi,rax", "mov~rbx,rax", "call~FOO", "mov~ecx,0", "test~progress_time,progress_time", "mov~[yte ptr [bytes_per_second+0],0", "mov~<TAG>,cx", "movsd~xmm0,[rsp+0]", "lea~r8,<TAG>", "jnz~FOO"]], [2, 0, 21, 0, 0, 9, 2, 1, 3, 8, 0.017094017094017096, ["mov     rax, r14", "mov     rdx, r14", "pxor    xmm0, xmm0", "shr     rax, 1", "and     edx, 1", "or      rax, rdx", "cvtsi2sd xmm0, rax", "addsd   xmm0, xmm0", "jmp     loc_3E55"], ["mov~rax,r14", "mov~rdx,r14", "pxor~xmm0,xmm0", "shr~rax,0", "and~edx,0", "or~rax,rdx", "cvtsi2sd~xmm0,rax", "addsd~xmm0,xmm0", "jmp~FOO"]], [0, 0, 21, 0, 0, 2, 0, 0, 3, 8, 0.017094017094017096, ["pxor    xmm0, xmm0", "cvtsi2sd xmm0, delta_xtime"], ["pxor~xmm0,xmm0", "cvtsi2sd~xmm0,delta_xtime"]], [1, 0, 17, 0, 1, 6, 0, 2, 4, 7, 0.01210826210826211, ["mov     esi, 0Dh; int", "movsd   [rsp+818h+delta_s], xmm0", "call    ___overflow", "lea     r8, a0fS; \"%.0f s\"", "movsd   xmm0, [rsp+818h+delta_s]", "jmp     loc_3EAF"], ["mov~esi,0", "movsd~[rsp+0],xmm0", "call~FOO", "lea~r8,<TAG>", "movsd~xmm0,[rsp+0]", "jmp~FOO"]], [1, 0, 27, 1, 0, 14, 2, 1, 0, 9, 0.0, ["push    r15", "push    r14", "mov     r14, progress_time", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbp, progress_time", "sub     rsp, 7E8h", "mov     rax, fs:28h", "mov     [rsp+818h+var_40], rax", "xor     eax, eax", "test    progress_time, progress_time", "jz      loc_4030"], ["push~r15", "push~r14", "mov~r14,progress_time", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbp,progress_time", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~progress_time,progress_time", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 26, 0, 1, 3, 0, 2, 1, 9, 0.0, ["call    gethrxtime", "mov     r14, rax", "jmp     loc_3DE3"], ["call~FOO", "mov~r14,rax", "jmp~FOO"]], [1, 0, 11, 0, 1, 10, 1, 1, 6, 5, 0.04700854700854701, ["mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     r8, si_0", "mov     rcx, r15", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "mov     ebx, eax", "pop     rax", "pop     rdx"], ["mov~rdi,<TAG>", "mov~rdx,rax", "mov~r8,si_0", "mov~rcx,r15", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~ebx,eax", "pop~rax", "pop~rdx"]], [0, 0, 6, 0, 0, 2, 1, 1, 6, 3, 0.10256410256410257, ["test    ebx, ebx", "js      short loc_3F56"], ["test~ebx,ebx", "js~FOO"]], [0, 0, 5, 0, 0, 3, 0, 1, 7, 3, 0.027065527065527065, ["mov     ecx, cs:progress_len", "cmp     ecx, ebx", "jg      loc_40D8"], ["mov~ecx,<TAG>", "cmp~ecx,ebx", "jg~FOO"]], [5, 0, 20, 1, 2, 17, 3, 3, 2, 7, 0.08547008547008547, ["lea     rsi, aInfinity; \"Infinity\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "add     rbx, 51Ch", "call    _dcgettext", "lea     r8, aSBS; \"%s B/s\"", "mov     r9, rax", "mov     ecx, 28Eh", "xor     eax, eax", "mov     edx, 1", "mov     esi, 28Eh", "mov     rdi, rbx", "call    ___snprintf_chk", "test    progress_time, progress_time", "pxor    xmm0, xmm0", "lea     r8, aGS; \"%g s\"", "jz      loc_3EAF"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "add~rbx,0", "call~FOO", "lea~r8,<TAG>", "mov~r9,rax", "mov~ecx,0", "xor~eax,eax", "mov~edx,0", "mov~esi,0", "mov~rdi,rbx", "call~FOO", "test~progress_time,progress_time", "pxor~xmm0,xmm0", "lea~r8,<TAG>", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 7, 2, 0.038461538461538464, ["mov     cs:progress_len, ebx"], ["mov~<TAG>,ebx"]], [1, 0, 4, 1, 1, 8, 1, 2, 8, 3, 0.0, ["mov     rdi, cs:stderr@@GLIBC_2_2_5", "lea     r8, aWrittenBySSAnd+1Bh; \"\"", "lea     rdx, aS; \"%*s\"", "sub     ecx, ebx", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_3F56"], ["mov~rdi,<TAG>", "lea~r8,<TAG>", "lea~rdx,<TAG>", "sub~ecx,ebx", "mov~esi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]]], "func_feature": [19, 17, 39, 1, 28, 39, 2, 194, 0.05525, 16, 6], "succs": [[3], [0, 18], [10, 6], [2, 13], [], [20, 4], [22], [5], [14, 7], [8, 23], [22], [16, 17], [25, 11], [9], [5], [1, 3], [15], [15], [3], [12, 21], [], [12], [9], [24, 26], [26, 27], [1, 3], [5], [26]], "fname": "print_xfer_stats", "n_num": 28}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 6, 0, 0, 4, 0, 0, 0, 0, 0.125, ["mov     status, cs:stderr@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_4230"], ["mov~status,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [0, 0, 7, 0, 0, 6, 2, 1, 1, 2, 0.19444444444444442, ["mov     rax, fs:28h", "mov     [rsp+0F8h+var_D0], rax", "xor     eax, eax", "mov     eax, cs:progress_len", "test    eax, eax", "jle     short loc_41DA"], ["mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~eax,<TAG>", "test~eax,eax", "jle~FOO"]], [1, 0, 4, 0, 1, 5, 0, 2, 3, 3, 0.048611111111111105, ["mov     esi, 0Ah; int", "mov     [rsp+0F8h+fmt], fmt_0", "call    ___overflow", "mov     rdx, [rsp+0F8h+fmt]", "jmp     short loc_41D0"], ["mov~esi,0", "mov~[rsp+0],fmt_0", "call~FOO", "mov~rdx,[rsp+0]", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 0, 2, 0, 1, 13, 1, 2, 2, 1, 0.19444444444444442, ["lea     rax, [rsp+0F8h+arg_0]", "lea     rcx, [rsp+0F8h+ap]; args", "mov     esi, ebp; errnum", "mov     edi, ebx; status", "mov     [rsp+0F8h+ap.gp_offset], 18h", "mov     [rsp+0F8h+ap.fp_offset], 30h ; '0'", "mov     [rsp+0F8h+ap.overflow_arg_area], rax", "lea     rax, [rsp+0F8h+var_C8]", "mov     [rsp+0F8h+ap.reg_save_area], rax", "call    verror", "mov     rax, [rsp+0F8h+var_D0]", "xor     rax, fs:28h", "jnz     short loc_4246"], ["lea~rax,[rsp+0]", "lea~rcx,[rsp+0]", "mov~esi,ebp", "mov~edi,ebx", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 3, -1, 0.0, ["add     rsp, 0E8h", "pop     status", "pop     errnum", "retn"], ["add~rsp,0", "pop~status", "pop~errnum", "retn"]], [1, 0, 9, 1, 0, 10, 1, 1, 0, 3, 0.0, ["push    rbp", "push    rbx", "mov     ebp, esi", "mov     ebx, edi", "sub     rsp, 0E8h", "test    al, al", "mov     [rsp+0F8h+var_B0], rcx", "mov     [rsp+0F8h+var_A8], r8", "mov     [rsp+0F8h+var_A0], r9", "jz      short loc_419A"], ["push~rbp", "push~rbx", "mov~ebp,esi", "mov~ebx,edi", "sub~rsp,0", "test~al,al", "mov~[rsp+0],rcx", "mov~[rsp+0],r8", "mov~[rsp+0],r9", "jz~FOO"]], [0, 0, 8, 0, 0, 8, 0, 0, 1, 3, 0.0, ["movaps  [rsp+0F8h+var_98], xmm0", "movaps  [rsp+0F8h+var_88], xmm1", "movaps  [rsp+0F8h+var_78], xmm2", "movaps  [rsp+0F8h+var_68], xmm3", "movaps  [rsp+0F8h+var_58], xmm4", "movaps  [rsp+0F8h+var_48], xmm5", "movaps  [rsp+0F8h+var_38], xmm6", "movaps  [rsp+0F8h+var_28], xmm7"], ["movaps~[rsp+0],xmm0", "movaps~[rsp+0],xmm1", "movaps~[rsp+0],xmm2", "movaps~[rsp+0],xmm3", "movaps~[rsp+0],xmm4", "movaps~[rsp+0],xmm5", "movaps~[rsp+0],xmm6", "movaps~[rsp+0],xmm7"]], [1, 0, 4, 0, 0, 3, 0, 0, 3, 3, 0.048611111111111105, ["lea     rcx, [rax+1]", "mov     [rdi+28h], rcx", "mov     byte ptr [rax], 0Ah"], ["lea~rcx,[rax+0]", "mov~[rdi+0],rcx", "mov~<TAG>,0"]], [1, 0, 3, 0, 0, 1, 0, 0, 4, 2, 0.125, ["mov     cs:progress_len, 0"], ["mov~<TAG>,0"]]], "func_feature": [3, 4, 7, 13, 10, 12, 39, 55, 0.07361, 3, 2], "succs": [[8, 2], [0, 4], [9], [], [3, 5], [], [1, 7], [1], [9], [4]], "fname": "nl_error", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 8, 2, 0, 7, 1, 1, 0, 0, 0.06593406593406594, ["mov     rcx, [rsp+48h+val]", "xor     edx, edx", "mov     multiplier, rcx", "imul    rax, multiplier", "div     multiplier", "cmp     rcx, rax", "jz      short loc_4315"], ["mov~rcx,[rsp+0]", "xor~edx,edx", "mov~multiplier,rcx", "imul~rax,multiplier", "div~,multiplier", "cmp~rcx,rax", "jz~FOO"]], [1, 0, 10, 1, 1, 6, 1, 2, 2, 4, 0.07692307692307693, ["add     rdi, 1; str", "mov     rsi, invalid; invalid", "call    parse_integer", "test    rax, rax", "mov     rbx, rax", "jz      short loc_4310"], ["add~rdi,0", "mov~rsi,invalid", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 2, 2, 0.016483516483516484, ["mov     [invalid], edx", "xor     eax, eax", "jmp     short loc_429B"], ["mov~<TAG>,edx", "xor~eax,eax", "jmp~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 1, 2, 0.019230769230769232, ["test    edx, edx", "mov     e, [rsp+48h+val]", "jnz     short loc_42CA"], ["test~edx,edx", "mov~e,[rsp+0]", "jnz~FOO"]], [1, 0, 12, 0, 0, 3, 0, 1, 1, 3, 0.046703296703296704, ["mov     rdi, [rsp+48h+suffix]", "cmp     byte ptr [rdi], 78h ; 'x'", "jz      short loc_42D8"], ["mov~rdi,[rsp+0]", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.13186813186813187, ["mov     rbx, [rsp+48h+var_30]", "xor     rbx, fs:28h", "jnz     loc_4390"], ["mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "jnz~FOO"]], [3, 0, 14, 1, 1, 18, 1, 2, 0, 3, 0.0, ["push    r13", "push    r12", "lea     r8, valid_suffixes; \"bcEGkKMPTwYZ0\"", "push    rbp", "push    rbx", "mov     r12, invalid", "mov     edx, 0Ah; strtol_base", "mov     rbp, str", "sub     rsp, 28h", "lea     rcx, [rsp+48h+val]; val", "lea     invalid, [rsp+48h+suffix]; ptr", "mov     rax, fs:28h", "mov     [rsp+48h+var_30], rax", "xor     eax, eax", "call    xstrtoumax", "cmp     eax, 2", "mov     edx, eax", "jz      short loc_42C0"], ["push~r13", "push~r12", "lea~r8,<TAG>", "push~rbp", "push~rbx", "mov~r12,invalid", "mov~edx,0", "mov~rbp,str", "sub~rsp,0", "lea~rcx,[rsp+0]", "lea~invalid,[rsp+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "cmp~eax,0", "mov~edx,eax", "jz~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 4, 2, 0.03296703296703297, ["mov     dword ptr [invalid], 1", "xor     eax, eax", "jmp     short loc_429B"], ["mov~<TAG>,0", "xor~eax,eax", "jmp~FOO"]], [0, 0, 3, 1, 0, 2, 0, 1, 5, 2, 0.06593406593406594, ["imul    rax, multiplier", "jmp     loc_429B"], ["imul~rax,multiplier", "jmp~FOO"]], [2, 0, 4, 0, 4, 21, 5, 5, 6, 3, 0.0, ["lea     rsi, a00x; \"00x\"", "mov     edi, 1; n", "call    quote_n", "mov     rsi, r12; arg", "xor     edi, edi; n", "mov     r13, rax", "call    quote_n", "lea     rsi, aWarningSIsAZer; \"warning: %s is a zero multiplier; use %\"...", "mov     rbp, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, r13", "mov     rdx, rax; fmt", "mov     rcx, rbp", "xor     eax, eax", "xor     esi, esi; errnum", "xor     edi, edi; status", "call    nl_error", "mov     rax, [rsp+48h+val]", "jmp     short loc_4338"], ["lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,r12", "xor~edi,edi", "mov~r13,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r8,r13", "mov~rdx,rax", "mov~rcx,rbp", "xor~eax,eax", "xor~esi,esi", "xor~edi,edi", "call~FOO", "mov~rax,[rsp+0]", "jmp~FOO"]], [2, 0, 5, 0, 0, 9, 1, 1, 5, 3, 0.03296703296703297, ["lea     invalid, a00x+1; \"0x\"", "mov     ecx, 2", "mov     rsi, str", "mov     rdi, r12", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jz      short loc_4341"], ["lea~invalid,<TAG>", "mov~ecx,0", "mov~rsi,str", "mov~rdi,r12", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "test~dl,dl", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 4, 3, 0.09890109890109891, ["test    rax, rax", "jnz     short loc_4338"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 7, 0, 0, 1, 0, 0, 3, 4, 0.03296703296703297, ["mov     multiplier, [rsp+48h+val]"], ["mov~multiplier,[rsp+0]"]]], "func_feature": [7, 14, 19, 1, 15, 21, 2, 88, 0.04139, 5, 6], "succs": [[8, 12], [0, 14], [6], [2, 6], [1, 2], [], [5, 13], [3, 4], [6], [6], [9], [9, 10], [9, 11], [], [12]], "fname": "parse_integer", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 8, 0, 0, 3, 1, 1, 0, 0, 0.19780219780219782, ["and     ebx, 0FFFEFFFFh", "cmp     ebx, r12d", "jnz     loc_4413"], ["and~ebx,0", "cmp~ebx,r12d", "jnz~FOO"]], [2, 0, 9, 0, 0, 4, 1, 1, 5, 4, 0.057692307692307696, ["mov     eax, [rsp+0C8h+st.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_4497"], ["mov~eax,[rsp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [3, 0, 8, 0, 4, 16, 2, 4, 2, 4, 0.14560439560439561, ["mov     rsi, name; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aSettingFlagsFo; \"setting flags for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     fd, rax", "call    _dcgettext", "mov     new_flags, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, rbp", "mov     rdx, rbx; fmt", "mov     edi, 1; status", "xor     eax, eax", "call    nl_error"], ["mov~rsi,name", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~fd,rax", "call~FOO", "mov~new_flags,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,rbp", "mov~rdx,rbx", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 10, 0, 1, 6, 1, 2, 4, 5, 0.07692307692307693, ["mov     rdx, rsp; stat_buf", "mov     esi, ebp; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "jnz     short loc_4458"], ["mov~rdx,rsp", "mov~esi,ebp", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 1, 11, 0, 0, 2, 1, 1, 3, 3, 0.08791208791208792, ["test    ebx, 10000h", "jnz     short loc_442A"], ["test~ebx,<STR>", "jnz~FOO"]], [1, 0, 13, 0, 1, 8, 2, 2, 1, 3, 0.05494505494505495, ["mov     esi, 3; action", "mov     ebp, edi", "mov     r13, name", "call    rpl_fcntl", "or      ebx, eax", "test    eax, eax", "mov     r12d, eax", "js      short loc_4458"], ["mov~esi,0", "mov~ebp,edi", "mov~r13,name", "call~FOO", "or~ebx,eax", "test~eax,eax", "mov~r12d,eax", "js~FOO"]], [2, 0, 14, 1, 0, 11, 2, 1, 0, 2, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     ebx, esi", "sub     rsp, 0A8h", "mov     rax, fs:28h", "mov     [rsp+0C8h+var_30], rax", "xor     eax, eax", "and     ebx, 0FFFDFEFFh", "jnz     short loc_43EF"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~ebx,esi", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "and~ebx,0", "jnz~FOO"]], [2, 0, 8, 1, 1, 7, 1, 2, 4, 2, 0.1208791208791209, ["xor     eax, eax", "mov     edx, ebx", "mov     esi, 4; action", "mov     edi, ebp; fd", "call    rpl_fcntl", "add     eax, 1", "jnz     short loc_43CA"], ["xor~eax,eax", "mov~edx,ebx", "mov~esi,0", "mov~edi,ebp", "call~FOO", "add~eax,0", "jnz~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 2, 2, 0.07142857142857144, ["cmp     eax, ebx", "jz      short loc_43CA"], ["cmp~eax,ebx", "jz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 1, 5, 5, 0.02197802197802198, ["jmp     short loc_4458"], ["jmp~FOO"]], [1, 0, 8, 0, 1, 2, 0, 1, 6, 5, 0.005494505494505495, ["call    ___errno_location", "mov     dword ptr [rax], 14h"], ["call~FOO", "mov~<TAG>,0"]], [1, 0, 0, 1, 0, 6, 0, 0, 2, -1, 0.0, ["add     rsp, 0A8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.13186813186813187, ["mov     rax, [rsp+0C8h+var_30]", "xor     rax, fs:28h", "jnz     loc_44AB"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 4, 2, 0.049450549450549455, ["jmp     loc_43CA"], ["jmp~FOO"]]], "func_feature": [9, 12, 20, 1, 15, 22, 2, 73, 0.06813, 2, 3], "succs": [[14, 7], [0, 10], [0], [1, 2], [3, 7], [8, 2], [12, 5], [9, 12], [12, 4], [2], [2], [], [11, 13], [], [12]], "fname": "set_fd_flags", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 10, 0, 0, 2, 1, 1, 0, 0, 0.06363636363636363, ["test    r14d, r14d", "jnz     short loc_4538"], ["test~r14d,r14d", "jnz~FOO"]], [2, 0, 11, 1, 2, 25, 2, 3, 0, 2, 0.0, ["push    r14", "push    r13", "mov     r13, filename", "push    r12", "push    rbp", "mov     r12d, ecx", "push    rbx", "mov     ebx, esi", "mov     rbp, offset", "mov     esi, 80306D02h; request", "mov     edi, ebx; fd", "sub     rsp, 70h", "mov     rax, fs:28h", "mov     [rsp+98h+var_30], rax", "xor     eax, eax", "mov     offset, rsp", "call    _ioctl", "mov     rsi, offset; offset", "mov     edx, r12d; whence", "mov     edi, ebx; fd", "mov     r14d, eax", "call    _lseek", "test    rax, rax", "mov     offset, rax", "js      short loc_4538"], ["push~r14", "push~r13", "mov~r13,filename", "push~r12", "push~rbp", "mov~r12d,ecx", "push~rbx", "mov~ebx,esi", "mov~rbp,offset", "mov~esi,0", "mov~edi,ebx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~offset,rsp", "call~FOO", "mov~rsi,offset", "mov~edx,r12d", "mov~edi,ebx", "mov~r14d,eax", "call~FOO", "test~rax,rax", "mov~offset,rax", "js~FOO"]], [0, 0, 8, 0, 0, 3, 0, 1, 3, 2, 0.13636363636363635, ["mov     rax, [rsp+98h+s2.mt_resid]", "cmp     [rsp+98h+s1.mt_resid], rax", "jnz     short loc_4538"], ["mov~rax,[rsp+0]", "cmp~[rsp+0],rax", "jnz~FOO"]], [1, 0, 9, 0, 1, 7, 2, 2, 2, 2, 0.10909090909090909, ["lea     rdx, [rsp+98h+s2]", "xor     eax, eax", "mov     esi, 80306D02h; request", "mov     edi, ebx; fd", "call    _ioctl", "test    eax, eax", "jnz     short loc_4538"], ["lea~rdx,[rsp+0]", "xor~eax,eax", "mov~esi,0", "mov~edi,ebx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 4, 0, 2, 12, 4, 2, 6, 3, 0.0, ["mov     fdesc, [rsp+98h+s2.mt_type]", "lea     rsi, aWarningWorking; \"warning: working around lseek kernel bu\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, rbx", "mov     rdx, rax; fmt", "mov     rcx, filename", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    nl_error"], ["mov~fdesc,[rsp+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r8,rbx", "mov~rdx,rax", "mov~rcx,filename", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 5, 3, 0.09090909090909091, ["cmp     cs:status_level, 1", "jz      short loc_458D"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 1, 1, 0.16363636363636364, ["mov     rcx, [rsp+98h+var_30]", "xor     rcx, fs:28h", "mov     rax, rbp", "jnz     short loc_459E"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,rbp", "jnz~FOO"]], [2, 0, 3, 0, 1, 4, 1, 2, 6, 2, 0.05454545454545454, ["call    ___errno_location", "or      new_position, 0FFFFFFFFFFFFFFFFh", "mov     dword ptr [rax], 0", "jmp     short loc_4538"], ["call~FOO", "or~new_position,0", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 5, 2, 0.02727272727272727, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 7, 0, 0, 3, 0, 1, 4, 3, 0.14545454545454545, ["mov     rax, qword ptr [rsp+98h+s2.mt_fileno]", "cmp     qword ptr [rsp+98h+s1.mt_fileno], rax", "jz      short loc_4558"], ["mov~rax,[word ptr [rsp+0]", "cmp~[word ptr [rsp+0],rax", "jz~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 2, -1, 0.0, ["add     rsp, 70h", "pop     rbx", "pop     rbp", "pop     whence", "pop     filename", "pop     r14", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~whence", "pop~filename", "pop~r14", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [7, 11, 15, 1, 12, 17, 4, 71, 0.06591, 3, 2], "succs": [[3, 6], [0, 6], [9, 6], [2, 6], [7], [4, 7], [10, 11], [6], [6], [8, 5], [], []], "fname": "skip_via_lseek", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 2, 1, 0, 2, 0, 1, 0, 0, 0.0013227513227513227, ["sub     rsi, pending", "jmp     short loc_46CB"], ["sub~rsi,pending", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 10, -1, 0.04034391534391534, ["test    r15b, r15b", "jz      short loc_4700"], ["test~r15b,r15b", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 7, 1, 0.05952380952380952, ["test    rsi, rsi", "js      short loc_4708"], ["test~rsi,rsi", "js~FOO"]], [1, 0, 14, 0, 0, 4, 1, 1, 6, 2, 0.062169312169312166, ["mov     len, cs:output_offset_7179", "xor     r12d, r12d", "cmp     rsi, 0FFFFFFFFFFFFFFFFh", "jz      loc_45F8"], ["mov~len,<TAG>", "xor~r12d,r12d", "cmp~rsi,0", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 5, -1, 0.0, ["add     rsp, 8", "mov     eax, r12d", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     nocache_eof", "retn"], ["add~rsp,0", "mov~eax,r12d", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~nocache_eof", "retn"]], [1, 0, 1, 0, 1, 3, 0, 2, 7, -1, 0.0006613756613756613, ["call    ___errno_location", "mov     dword ptr [rax], 1Dh", "jmp     short loc_45F8"], ["call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 9, 0, 0, 3, 2, 1, 7, -1, 0.1541005291005291, ["xor     r12d, r12d", "test    offset, offset", "js      loc_45F8"], ["xor~r12d,r12d", "test~offset,offset", "js~FOO"]], [2, 0, 1, 0, 1, 7, 0, 2, 10, -1, 0.009259259259259259, ["mov     ecx, 4; advise", "mov     rdx, rbx; len", "mov     edi, r13d; fd", "call    _posix_fadvise", "cmp     eax, 0FFFFFFFFh", "setnz   r12b", "jmp     loc_45F8"], ["mov~ecx,0", "mov~rdx,rbx", "mov~edi,r13d", "call~FOO", "cmp~eax,0", "setnz~r12b", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 4, -1, 0.010582010582010581, ["mov     r12d, 1"], ["mov~r12d,0"]], [0, 0, 11, 0, 0, 2, 1, 1, 8, -1, 0.03835978835978836, ["test    len, len", "jz      short loc_46A8"], ["test~len,len", "jz~FOO"]], [0, 0, 21, 0, 0, 2, 1, 1, 3, 5, 0.10052910052910052, ["test    rbx, rbx", "jnz     short loc_461A"], ["test~rbx,rbx", "jnz~FOO"]], [0, 0, 25, 0, 0, 3, 1, 1, 2, 6, 0.0992063492063492, ["test    len, len", "mov     rbx, [rax]", "jz      short loc_4610"], ["test~len,len", "mov~rbx,<TAG>", "jz~FOO"]], [0, 0, 10, 1, 0, 3, 0, 0, 9, -1, 0.0026455026455026454, ["lea     rax, [pending+rbx]", "add     rsi, rax", "mov     cs:output_offset_7179, rsi"], ["lea~rax,<TAG>", "add~rsi,rax", "mov~<TAG>,rsi"]], [0, 0, 20, 0, 0, 2, 1, 1, 4, 5, 0.0026455026455026454, ["test    r15b, r15b", "jz      short loc_45F2"], ["test~r15b,r15b", "jz~FOO"]], [0, 0, 18, 0, 0, 1, 1, 0, 4, 4, 0.1349206349206349, ["xor     r14d, r14d"], ["xor~r14d,r14d"]], [0, 0, 11, 0, 0, 4, 1, 1, 6, -1, 0.1455026455026455, ["movzx   r12d, cs:input_seekable", "mov     len, cs:input_offset", "test    r12b, r12b", "jnz     short loc_469C"], ["movzx~r12d,<TAG>", "mov~len,<TAG>", "test~r12b,r12b", "jnz~FOO"]], [2, 0, 10, 0, 1, 7, 1, 2, 8, 0, 0.003968253968253968, ["xor     esi, esi; offset", "mov     edx, 1; whence", "mov     edi, 1; fd", "call    _lseek", "mov     rsi, rax", "mov     cs:output_offset_7179, rax", "jmp     loc_469C"], ["xor~esi,esi", "mov~edx,0", "mov~edi,0", "call~FOO", "mov~rsi,rax", "mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 17, 0, 0, 4, 1, 1, 5, 3, 0.21428571428571427, ["test    edi, edi", "mov     rbp, len", "mov     r13d, edi", "jnz     short loc_4670"], ["test~edi,edi", "mov~rbp,len", "mov~r13d,edi", "jnz~FOO"]], [0, 0, 18, 0, 0, 1, 0, 1, 5, 4, 0.04497354497354497, ["jmp     short loc_461D"], ["jmp~FOO"]], [0, 0, 8, 1, 0, 3, 1, 1, 8, -1, 0.16666666666666666, ["sub     offset, rbx", "test    len, len", "jnz     short loc_46F0"], ["sub~offset,rbx", "test~len,len", "jnz~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 9, -1, 0.06283068783068782, ["test    rbx, rbx", "jz      short loc_46F0"], ["test~rbx,rbx", "jz~FOO"]], [1, 0, 28, 1, 0, 9, 1, 1, 0, 8, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "test    edi, edi", "jnz     loc_4650"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "test~edi,edi", "jnz~FOO"]], [0, 0, 2, 2, 0, 5, 2, 0, 11, -1, 0.003968253968253968, ["mov     rax, rsi", "xor     edx, edx", "xor     ebx, ebx", "div     cs:page_size", "sub     rsi, rdx; offset"], ["mov~rax,rsi", "xor~edx,edx", "xor~ebx,ebx", "div~,<TAG>", "sub~rsi,rdx"]], [0, 0, 3, 0, 0, 1, 0, 1, 10, -1, 0.013888888888888888, ["jmp     short loc_46BA"], ["jmp~FOO"]], [0, 0, 26, 0, 0, 2, 0, 0, 1, 7, 0.017195767195767195, ["movzx   r15d, cs:i_nocache_eof", "lea     rax, i_pending_7166"], ["movzx~r15d,<TAG>", "lea~rax,<TAG>"]], [0, 0, 26, 0, 0, 3, 0, 1, 1, 7, 0.017195767195767195, ["movzx   r15d, cs:o_nocache_eof", "lea     rax, o_pending_7167", "jmp     loc_45D5"], ["movzx~r15d,<TAG>", "lea~rax,<TAG>", "jmp~FOO"]], [0, 0, 4, 1, 0, 3, 1, 1, 9, -1, 0.06812169312169311, ["sub     rsi, pending", "test    clen, clen", "jnz     short loc_46CB"], ["sub~rsi,pending", "test~clen,clen", "jnz~FOO"]], [0, 0, 20, 1, 0, 2, 0, 1, 4, 5, 0.0291005291005291, ["sub     rbx, r14", "jz      short loc_45F2"], ["sub~rbx,r14", "jz~FOO"]], [1, 0, 21, 1, 0, 6, 1, 1, 3, 6, 0.021164021164021163, ["add     rbx, len", "mov     r14, rbx", "and     r14d, 1FFFFh", "cmp     rbx, r14", "mov     [rax], r14", "ja      short loc_4668"], ["add~rbx,len", "mov~r14,rbx", "and~r14d,0", "cmp~rbx,r14", "mov~<TAG>,r14", "ja~FOO"]]], "func_feature": [3, 20, 26, 0, 29, 44, 8, 98, 0.05259, 8, 10], "succs": [[7], [0, 22], [16, 9], [2, 4], [], [4], [19, 4], [4], [4], [19, 12], [13, 14], [10, 28], [6], [8, 14], [17], [5, 6], [6], [3, 15], [17], [26, 20], [1, 26], [24, 25], [7], [22], [11], [11], [23, 7], [8, 18], [8, 27]], "fname": "invalidate_cache", "n_num": 29}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 0, 0, 1, 2, 0, 1, 0, 0, 0.0, ["mov     edi, 1; status", "call    __exit"], ["mov~edi,0", "call~FOO"]], [1, 0, 2, 1, 1, 5, 1, 2, 1, 0, 0.1, ["sub     rsp, 8", "mov     rdi, cs:stderr@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jnz     short loc_475D"], ["sub~rsp,0", "mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0.0, [], []], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0.05, ["jmp     close_stdout"], ["jmp~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 0, 0, 0.0, ["cmp     cs:close_stdout_required, 0", "jnz     short loc_4758"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 2, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [2, 1, 5, 0, 6, 5, 0, 12, 0.025, 2, 2], "succs": [[], [0, 5], [], [2], [1, 3], []], "fname": "maybe_close_stdout", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 7, 0, 0, 3, 0, 0, 0, 0, 0.044444444444444446, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [0, 0, 9, 0, 0, 4, 0, 0, 1, 1, 0.03333333333333333, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_4880"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [1, 0, 10, 1, 0, 8, 1, 1, 0, 2, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     ecx, cs:progress_len", "test    ecx, ecx", "jle     short loc_47AE"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~ecx,<TAG>", "test~ecx,ecx", "jle~FOO"]], [1, 0, 6, 0, 0, 1, 0, 0, 3, -1, 0.2, ["mov     cs:progress_len, 0"], ["mov~<TAG>,0"]], [1, 0, 7, 0, 1, 3, 0, 2, 2, 0, 0.044444444444444446, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     loc_47A4"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [1, 0, 1, 1, 0, 7, 1, 1, 3, -1, 0.08888888888888889, ["add     rsp, 8", "xor     edi, edi", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "jmp     print_xfer_stats"], ["add~rsp,0", "xor~edi,edi", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, -1, 0.23333333333333334, ["cmp     cs:status_level, 2", "jz      short loc_4830"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 4, 0, 2, 13, 2, 3, 2, -1, 0.0, ["lea     rdx, aLuTruncatedRec; \"%lu truncated records\\n\"", "lea     rsi, aLuTruncatedRec_0; \"%lu truncated record\\n\"", "mov     rcx, rbx; n", "xor     edi, edi; domainname", "mov     r8d, 5; category", "call    _dcngettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     rcx, rbx", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "jmp     short loc_4810"], ["lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rcx,rbx", "xor~edi,edi", "mov~r8d,0", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~rcx,rbx", "mov~esi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [3, 0, 5, 1, 2, 23, 3, 3, 1, -1, 0.2777777777777778, ["mov     r13, cs:w_partial", "lea     rsi, aLuLuRecordsInL; \"%lu+%lu records in\\n%lu+%lu records out\"...", "mov     rbx, cs:r_full", "xor     edi, edi; domainname", "mov     r12, cs:w_full", "mov     rbp, cs:r_partial", "mov     edx, 5; category", "call    _dcgettext", "sub     rsp, 8", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "push    r13", "mov     rcx, rbx", "xor     eax, eax", "mov     r9, r12", "mov     r8, rbp", "mov     esi, 1", "call    ___fprintf_chk", "mov     rbx, cs:r_truncate", "pop     rax", "pop     rdx", "test    rbx, rbx", "jnz     short loc_4840"], ["mov~r13,<TAG>", "lea~rsi,<TAG>", "mov~rbx,<TAG>", "xor~edi,edi", "mov~r12,<TAG>", "mov~rbp,<TAG>", "mov~edx,0", "call~FOO", "sub~rsp,0", "mov~rdi,<TAG>", "mov~rdx,rax", "push~r13", "mov~rcx,rbx", "xor~eax,eax", "mov~r9,r12", "mov~r8,rbp", "mov~esi,0", "call~FOO", "mov~rbx,<TAG>", "pop~rax", "pop~rdx", "test~rbx,rbx", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [1, 0, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]]], "func_feature": [5, 7, 11, 0, 11, 13, 5, 70, 0.08384, 11, 4], "succs": [[3], [0, 4], [8, 1], [8], [3], [9], [10, 5], [6], [6, 7], [], []], "fname": "print_stats", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 0, 1, 0, 4, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [1, 0, 1, 0, 1, 4, 1, 2, 1, -1, 0.08333333333333333, ["mov     edi, 1; fd", "call    _close", "test    eax, eax", "js      short loc_48F9"], ["mov~edi,0", "call~FOO", "test~eax,eax", "js~FOO"]], [3, 0, 0, 0, 4, 16, 2, 4, 1, -1, 0.0, ["mov     rsi, cs:input_file; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aClosingInputFi; \"closing input file %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbp, rax", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, rbp", "mov     rdx, rbx; fmt", "mov     edi, 1; status", "xor     eax, eax", "call    nl_error"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbp,rax", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,rbp", "mov~rdx,rbx", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 3, 1, 1, 7, 2, 2, 0, -1, 0.0, ["push    rbp", "push    rbx", "xor     edi, edi; fd", "sub     rsp, 8", "call    _close", "test    eax, eax", "js      short loc_48B6"], ["push~rbp", "push~rbx", "xor~edi,edi", "sub~rsp,0", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 1, 0, 0, 0, 0, 0, -1, 0, 0.0, [], []]], "func_feature": [10, 7, 12, 0, 6, 4, 2, 48, 0.01667, 4, 2], "succs": [[], [0], [], [1, 2], [4]], "fname": "cleanup", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.14102564102564102, ["mov     rax, [rsp+var_s88]", "xor     rax, fs:28h", "jnz     short loc_4A0D"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 13, 0, 0, 3, 1, 1, 2, 2, 0.1923076923076923, ["mov     eax, cs:info_signal_count", "test    eax, eax", "jz      short loc_49F0"], ["mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 0, 13, 0, 1, 3, 0, 2, 5, 4, 0.1346153846153846, ["mov     edi, ebx; sig", "call    _raise", "jmp     loc_4960"], ["mov~edi,ebx", "call~FOO", "jmp~FOO"]], [1, 0, 13, 0, 1, 3, 0, 2, 4, 5, 0.10897435897435898, ["call    cleanup", "cmp     cs:status_level, 1", "jz      short loc_49DB"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 13, 0, 1, 1, 0, 1, 5, 5, 0.0, ["call    print_stats"], ["call~FOO"]], [0, 0, 13, 0, 0, 3, 1, 1, 1, 3, 0.5, ["mov     eax, cs:interrupt_signal", "test    eax, eax", "jnz     short loc_4974"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 4, 4, 0.1794871794871795, ["cmp     cs:status_level, 1", "jz      short loc_4960"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 13, 0, 1, 2, 0, 2, 5, 4, 0.0, ["call    print_stats", "jmp     short loc_4960"], ["call~FOO", "jmp~FOO"]], [1, 0, 13, 1, 0, 8, 1, 0, 0, 4, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 98h", "mov     rax, fs:28h", "mov     [rsp+var_s88], rax", "xor     eax, eax", "mov     rbp, rsp", "nop"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rbp,rsp", "nop"]], [1, 0, 0, 1, 0, 4, 0, 0, 4, -1, 0.0, ["add     rsp, 98h", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 13, 0, 1, 6, 2, 2, 3, 5, 0.33974358974358976, ["xor     edx, edx; oset", "mov     rsi, rbp; set", "mov     edi, 2; how", "call    _sigprocmask", "test    ebx, ebx", "jnz     short loc_49C8"], ["xor~edx,edx", "mov~rsi,rbp", "mov~edi,0", "call~FOO", "test~ebx,ebx", "jnz~FOO"]], [0, 0, 13, 0, 1, 8, 2, 2, 2, 6, 0.3141025641025641, ["lea     rsi, caught_signals; set", "xor     edi, edi; how", "mov     rdx, rbp; oset", "call    _sigprocmask", "mov     ebx, cs:interrupt_signal", "mov     eax, cs:info_signal_count", "test    eax, eax", "jz      short loc_499E"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~rdx,rbp", "call~FOO", "mov~ebx,<TAG>", "mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [1, 0, 13, 1, 0, 2, 0, 0, 3, 6, 0.0, ["sub     eax, 1", "mov     cs:info_signal_count, eax"], ["sub~eax,0", "mov~<TAG>,eax"]]], "func_feature": [7, 8, 16, 1, 14, 19, 6, 49, 0.13645, 5, 3], "succs": [[9, 10], [0, 12], [5], [2, 4], [2], [1, 12], [5, 7], [5], [5], [], [], [3, 6], [11, 13], [11]], "fname": "process_signals", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 3, 0, 1, 3, 0, 2, 0, 0, 0.0, ["call    ___errno_location", "cmp     dword ptr [rax], 4", "jnz     short loc_4A5D"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 3, 0, 2, 9, 1, 3, 1, 1, 0.3333333333333333, ["call    process_signals", "mov     ecx, ebp; mode", "mov     edx, r12d; flags", "mov     rsi, file; file", "mov     edi, r14d; desired_fd", "call    fd_reopen", "test    eax, eax", "mov     ebx, eax", "js      short loc_4A38"], ["call~FOO", "mov~ecx,ebp", "mov~edx,r12d", "mov~rsi,file", "mov~edi,r14d", "call~FOO", "test~eax,eax", "mov~ebx,eax", "js~FOO"]], [0, 0, 3, 0, 0, 10, 0, 1, 0, 2, 0.0, ["push    r14", "mov     r14d, edi", "push    r13", "mov     r13, file", "push    r12", "mov     r12d, edx", "push    rbp", "mov     ebp, ecx", "push    rbx", "jmp     short loc_4A42"], ["push~r14", "mov~r14d,edi", "push~r13", "mov~r13,file", "push~r12", "mov~r12d,edx", "push~rbp", "mov~ebp,ecx", "push~rbx", "jmp~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 2, 0, 0.0, ["mov     eax, ebx", "pop     ret", "pop     mode", "pop     flag", "pop     file", "pop     desired_fd", "retn"], ["mov~eax,ebx", "pop~ret", "pop~mode", "pop~flag", "pop~file", "pop~desired_fd", "retn"]]], "func_feature": [3, 1, 6, 0, 4, 5, 3, 29, 0.08333, 0, 0], "succs": [[1, 3], [0, 3], [1], []], "fname": "ifd_reopen", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 11, 0, 0, 1, 0, 1, 0, 0, 0.06904761904761905, ["jle     short loc_4B6A"], ["jle~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 2, 8, 0.0642857142857143, ["cmp     nread, 0", "jge     short loc_4B00"], ["cmp~nread,0", "jge~FOO"]], [1, 0, 1, 0, 0, 3, 1, 1, 6, 0, 0.0, ["mov     dword ptr [rax], 0", "xor     ebx, ebx", "jmp     loc_4AE4"], ["mov~<TAG>,0", "xor~ebx,ebx", "jmp~FOO"]], [1, 0, 2, 0, 0, 2, 1, 1, 5, 1, 0.01904761904761905, ["test    byte ptr cs:input_flags+1, 40h", "jnz     loc_4B78"], ["test~<TAG>,0", "jnz~FOO"]], [1, 0, 21, 1, 0, 9, 0, 1, 0, 6, 0.0, ["push    r13", "push    r12", "mov     r13d, edi", "push    rbp", "push    rbx", "mov     r12, buf", "mov     rbp, size", "sub     rsp, 8", "jmp     short loc_4A9E"], ["push~r13", "push~r12", "mov~r13d,edi", "push~rbp", "push~rbx", "mov~r12,buf", "mov~rbp,size", "sub~rsp,0", "jmp~FOO"]], [0, 0, 10, 0, 0, 2, 0, 0, 4, -1, 0.01666666666666667, ["cmp     nread, size", "jnb     short loc_4B6A"], ["cmp~nread,size", "jnb~FOO"]], [0, 0, 7, 0, 1, 1, 0, 1, 5, -1, 0.007936507936507938, ["call    process_signals"], ["call~FOO"]], [1, 0, 21, 0, 2, 8, 0, 3, 1, 5, 0.11666666666666668, ["call    process_signals", "mov     rdx, size; nbytes", "mov     rsi, buf; buf", "mov     edi, r13d; fd", "call    _read", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     rbx, rax", "jnz     short loc_4A88"], ["call~FOO", "mov~rdx,size", "mov~rsi,buf", "mov~edi,r13d", "call~FOO", "cmp~rax,0", "mov~rbx,rax", "jnz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 5, -1, 0.12896825396825398, ["cmp     cs:warn_partial_read, 0", "jz      short loc_4AE4"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 4, -1, 0.1373015873015873, ["test    nread, nread", "jg      short loc_4B0C"], ["test~nread,nread", "jg~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 3, 6, 0.11190476190476191, ["cmp     edx, 4", "jnz     loc_4B6A"], ["cmp~edx,0", "jnz~FOO"]], [1, 0, 21, 0, 1, 4, 0, 2, 2, 4, 0.0761904761904762, ["call    ___errno_location", "mov     edx, [rax]", "cmp     edx, 16h", "jnz     short loc_4A95"], ["call~FOO", "mov~edx,<TAG>", "cmp~edx,0", "jnz~FOO"]], [0, 0, 21, 0, 1, 2, 0, 1, 3, 7, 0.01666666666666667, ["call    ___errno_location", "mov     edx, [rax]"], ["call~FOO", "mov~edx,<TAG>"]], [0, 0, 5, 0, 0, 3, 1, 1, 6, -1, 0.10476190476190478, ["mov     buf, cs:prev_nread_7186", "test    r12, r12", "jle     short loc_4AE4"], ["mov~buf,<TAG>", "test~r12,r12", "jle~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 7, -1, 0.08571428571428572, ["cmp     r12, size", "jnb     short loc_4AE4"], ["cmp~r12,size", "jnb~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 8, -1, 0.06190476190476191, ["cmp     cs:status_level, 1", "jz      short loc_4B5E"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 3, 3, 0.05, ["mov     rdx, cs:prev_nread_7186", "test    rdx, rdx", "jle     short loc_4AE4"], ["mov~rdx,<TAG>", "test~rdx,rdx", "jle~FOO"]], [0, 0, 3, 0, 0, 2, 0, 0, 4, 2, 0.03333333333333334, ["cmp     rdx, size", "jnb     short loc_4AE4"], ["cmp~rdx,size", "jnb~FOO"]], [1, 0, 2, 0, 2, 12, 4, 2, 9, -1, 0.0, ["lea     rdx, aWarningPartial; \"warning: partial read (%lu bytes); sugg\"...", "lea     rsi, aWarningPartial_0; \"warning: partial read (%lu byte); sugge\"...", "mov     rcx, prev; n", "xor     edi, edi; domainname", "mov     r8d, 5; category", "call    _dcngettext", "mov     rcx, prev", "mov     rdx, rax; fmt", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    nl_error"], ["lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rcx,prev", "xor~edi,edi", "mov~r8d,0", "call~FOO", "mov~rcx,prev", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 9, -1, 0.004761904761904762, ["mov     cs:warn_partial_read, 0", "jmp     loc_4AE4"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 5, -1, 0.006746031746031746, ["jmp     loc_4AE4"], ["jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["mov     cs:prev_nread_7186, rbx", "add     rsp, 8", "mov     rax, rbx", "pop     rbx", "pop     size", "pop     r12", "pop     fd", "retn"], ["mov~<TAG>,rbx", "add~rsp,0", "mov~rax,rbx", "pop~rbx", "pop~size", "pop~r12", "pop~fd", "retn"]]], "func_feature": [7, 9, 22, 0, 22, 35, 1, 75, 0.05054, 6, 2], "succs": [[9, 5], [0, 12], [21], [2, 21], [7], [9, 6], [8], [1, 11], [13, 21], [8, 20], [9, 7], [16, 10], [10], [21, 14], [21, 15], [18, 19], [17, 21], [3, 21], [19], [21], [21], []], "fname": "iread", "n_num": 22}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [0, 0, 7, 0, 0, 2, 1, 1, 0, 0, 0.0, ["test    size, size", "jz      short loc_4BEE"], ["test~size,size", "jz~FOO"]], [1, 0, 5, 1, 0, 10, 1, 1, 1, 0, 0.11904761904761904, ["push    r13", "push    r12", "mov     r13d, edi", "push    rbp", "push    rbx", "mov     rbp, buf", "mov     rbx, size", "xor     r12d, r12d", "sub     rsp, 8", "jmp     short loc_4BBD"], ["push~r13", "push~r12", "mov~r13d,edi", "push~rbp", "push~rbx", "mov~rbp,buf", "mov~rbx,size", "xor~r12d,r12d", "sub~rsp,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 4, 0, 0.0, ["add     rsp, 8", "mov     ncurr, nread", "pop     rbx", "pop     buf", "pop     nread", "pop     fd", "retn"], ["add~rsp,0", "mov~ncurr,nread", "pop~rbx", "pop~buf", "pop~nread", "pop~fd", "retn"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, 0, 0.14285714285714285, ["jz      short loc_4BE0"], ["jz~FOO"]], [0, 0, 5, 3, 0, 4, 0, 1, 4, 0, 0.047619047619047616, ["add     nread, ncurr", "add     buf, ncurr", "sub     rbx, ncurr", "jz      short loc_4BE0"], ["add~nread,ncurr", "add~buf,ncurr", "sub~rbx,ncurr", "jz~FOO"]], [0, 0, 5, 0, 1, 6, 1, 1, 2, 0, 0.26190476190476186, ["mov     rdx, size; size", "mov     rsi, buf; buf", "mov     edi, r13d; fd", "call    iread", "test    ncurr, ncurr", "jns     short loc_4BB0"], ["mov~rdx,size", "mov~rsi,buf", "mov~edi,r13d", "call~FOO", "test~ncurr,ncurr", "jns~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, 0, 0.0, ["add     rsp, 8", "pop     size", "pop     buf", "pop     nread", "pop     fd", "retn"], ["add~rsp,0", "pop~size", "pop~buf", "pop~nread", "pop~fd", "retn"]]], "func_feature": [1, 4, 5, 0, 8, 9, 0, 38, 0.07143, 0, 6], "succs": [[], [0, 2], [6], [], [3, 5], [3, 6], [4, 7], []], "fname": "iread_fullblock", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[2, 0, 3, 1, 1, 4, 0, 2, 0, 0, 0.0, ["sub     rsp, 8", "call    cleanup", "cmp     cs:status_level, 1", "jz      short loc_4C17"], ["sub~rsp,0", "call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 2, 0, 1, 1, 0, 1, 0, 1, 0.0, ["call    print_stats"], ["call~FOO"]], [1, 0, 1, 1, 0, 2, 0, 1, 0, 0, 0.3333333333333333, ["add     rsp, 8", "jmp     process_signals"], ["add~rsp,0", "jmp~FOO"]], [0, 0, 1, 0, 0, 0, 0, 0, 0, -1, 0.0, [], []]], "func_feature": [2, 0, 4, 0, 4, 5, 4, 7, 0.08333, 1, 2], "succs": [[1, 2], [2], [3], [3]], "fname": "finish_up", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[5, 0, 1, 0, 3, 18, 3, 3, 0, 0, 0.041666666666666664, ["mov     r8d, 1; to_block_size", "mov     ecx, 1; from_block_size", "mov     rsi, rsp; buf", "mov     edx, 1F1h; opts", "mov     rdi, ibs; n", "call    human_readable", "lea     rsi, aMemoryExhauste; \"memory exhausted by input buffer of siz\"...", "mov     rbx, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, rbx", "mov     rdx, rax; fmt", "mov     rcx, ibs", "xor     esi, esi; errnum", "mov     edi, 1; status", "xor     eax, eax", "call    nl_error"], ["mov~r8d,0", "mov~ecx,0", "mov~rsi,rsp", "mov~edx,0", "mov~rdi,ibs", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r8,rbx", "mov~rdx,rax", "mov~rcx,ibs", "xor~esi,esi", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 4, 1, 1, 12, 2, 2, 0, 2, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 2A8h", "mov     rbx, cs:page_size", "mov     rbp, cs:input_blocksize", "mov     rax, fs:28h", "mov     [rsp+2B8h+var_20], rax", "xor     eax, eax", "lea     rdi, [rbp+rbx*2+3]; size", "call    _malloc", "test    real_buf, real_buf", "jz      short loc_4C8D"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,<TAG>", "mov~rbp,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rdi,[rbp+0]", "call~FOO", "test~real_buf,real_buf", "jz~FOO"]], [0, 0, 2, 2, 0, 9, 2, 1, 1, 1, 0.125, ["lea     rcx, [rax+rbx+1]", "xor     edx, edx", "mov     rax, rcx", "div     rbx", "sub     rcx, rdx", "mov     rax, [rsp+2B8h+var_20]", "xor     rax, fs:28h", "mov     cs:ibuf, rcx", "jnz     short loc_4CD5"], ["lea~rcx,[rax+0]", "xor~edx,edx", "mov~rax,rcx", "div~,rbx", "sub~rcx,rdx", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "mov~<TAG>,rcx", "jnz~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 2, -1, 0.0, ["add     rsp, 2A8h", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [5, 7, 7, 1, 5, 5, 3, 44, 0.03333, 5, 4], "succs": [[4], [0, 2], [3, 4], [], []], "fname": "alloc_ibuf", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[5, 0, 1, 0, 3, 18, 3, 3, 0, 0, 0.041666666666666664, ["mov     r8d, 1; to_block_size", "mov     ecx, 1; from_block_size", "mov     rsi, rsp; buf", "mov     edx, 1F1h; opts", "mov     rdi, obs; n", "call    human_readable", "lea     rsi, aMemoryExhauste_0; \"memory exhausted by output buffer of si\"...", "mov     rbx, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, rbx", "mov     rdx, rax; fmt", "mov     rcx, obs", "xor     esi, esi; errnum", "mov     edi, 1; status", "xor     eax, eax", "call    nl_error"], ["mov~r8d,0", "mov~ecx,0", "mov~rsi,rsp", "mov~edx,0", "mov~rdi,obs", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r8,rbx", "mov~rdx,rax", "mov~rcx,obs", "xor~esi,esi", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 4, 1, 1, 12, 2, 2, 0, 2, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 2A8h", "mov     rbx, cs:page_size", "mov     rbp, cs:output_blocksize", "mov     rax, fs:28h", "mov     [rsp+2B8h+var_20], rax", "xor     eax, eax", "lea     rdi, [rbx+rbp-1]; size", "call    _malloc", "test    real_obuf, real_obuf", "jz      short loc_4D4D"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,<TAG>", "mov~rbp,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rdi,[rbx+0]", "call~FOO", "test~real_obuf,real_obuf", "jz~FOO"]], [0, 0, 2, 2, 0, 9, 2, 1, 1, 1, 0.125, ["lea     rcx, [real_obuf+rbx-1]", "xor     edx, edx", "mov     real_obuf, rcx", "div     rbx", "sub     rcx, rdx", "mov     rax, [rsp+2B8h+var_20]", "xor     rax, fs:28h", "mov     cs:obuf, rcx", "jnz     short loc_4D95"], ["lea~rcx,[real_obuf+0]", "xor~edx,edx", "mov~real_obuf,rcx", "div~,rbx", "sub~rcx,rdx", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "mov~<TAG>,rcx", "jnz~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 2, -1, 0.0, ["add     rsp, 2A8h", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [5, 7, 7, 1, 5, 5, 1, 44, 0.03333, 5, 4], "succs": [[4], [0, 2], [3, 4], [], []], "fname": "alloc_obuf_0", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 7, 0, 0, 2, 0, 1, 0, 0, 0.0, ["cmp     cs:obuf, 0", "jz      short loc_4DAC"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 0, 1, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    alloc_ibuf", "mov     rax, cs:ibuf", "mov     cs:obuf, rax", "pop     rax", "retn"], ["sub~rsp,0", "call~FOO", "mov~rax,<TAG>", "mov~<TAG>,rax", "pop~rax", "retn"]], [1, 0, 2, 0, 0, 2, 0, 1, 0, 1, 0.09523809523809523, ["cmp     cs:ibuf, 0", "jz      short loc_4DD3"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 0, -1, 0.0, ["mov     rax, cs:ibuf", "mov     cs:obuf, rax", "retn"], ["mov~rax,<TAG>", "mov~<TAG>,rax", "retn"]], [0, 0, 1, 0, 0, 1, 0, 1, 0, -1, 0.047619047619047616, ["jmp     alloc_obuf_0"], ["jmp~FOO"]], [1, 0, 5, 0, 0, 2, 1, 1, 0, 2, 0.11904761904761904, ["test    byte ptr cs:conversions_mask+1, 8", "jnz     short loc_4DCE"], ["test~<TAG>,0", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0.0, [], []]], "func_feature": [1, 1, 5, 0, 8, 7, 2, 17, 0.03274, 3, 1], "succs": [[1, 6], [], [], [2, 4], [], [7], [3, 5], []], "fname": "alloc_obuf", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 3, 0, 1, 3, 0, 2, 0, 0, 0.0, ["call    ___errno_location", "cmp     dword ptr [rax], 4", "jnz     short loc_4E22"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 3, 0, 2, 7, 1, 3, 1, 1, 0.3333333333333333, ["call    process_signals", "mov     rsi, length; length", "mov     edi, 1; fd", "call    _ftruncate", "test    eax, eax", "mov     ebx, eax", "js      short loc_4E00"], ["call~FOO", "mov~rsi,length", "mov~edi,0", "call~FOO", "test~eax,eax", "mov~ebx,eax", "js~FOO"]], [1, 0, 3, 1, 0, 5, 0, 1, 0, 2, 0.0, ["push    rbp", "push    rbx", "mov     rbp, length", "sub     rsp, 8", "jmp     short loc_4E0A"], ["push~rbp", "push~rbx", "mov~rbp,length", "sub~rsp,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 2, 0, 0.0, ["add     rsp, 8", "mov     eax, ebx", "pop     ret", "pop     length", "retn"], ["add~rsp,0", "mov~eax,ebx", "pop~ret", "pop~length", "retn"]]], "func_feature": [3, 1, 6, 0, 4, 5, 2, 20, 0.08333, 0, 2], "succs": [[1, 3], [0, 3], [1], []], "fname": "iftruncate", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[2, 0, 0, 1, 1, 10, 0, 1, 0, 0, 0.0, ["mov     rsi, total_written; len", "mov     edi, 1; fd", "call    invalidate_cache", "add     rsp, 8", "mov     rax, total_written", "pop     total_written", "pop     size", "pop     buf", "pop     r13", "retn"], ["mov~rsi,total_written", "mov~edi,0", "call~FOO", "add~rsp,0", "mov~rax,total_written", "pop~total_written", "pop~size", "pop~buf", "pop~r13", "retn"]], [0, 0, 2, 0, 0, 2, 1, 1, 7, -1, 0.03201970443349754, ["test    total_written, total_written", "jnz     loc_4F70"], ["test~total_written,total_written", "jnz~FOO"]], [1, 1, 22, 0, 1, 5, 1, 2, 2, -1, 0.31403940886699505, ["call    process_signals", "mov     r13d, cs:conversions_mask", "mov     cs:final_op_was_seek, 0", "test    r13d, 10000h", "jz      short loc_4EB8"], ["call~FOO", "mov~r13d,<TAG>", "mov~<TAG>,0", "test~r13d,<STR>", "jz~FOO"]], [0, 0, 23, 0, 0, 3, 2, 1, 1, -1, 0.16995073891625617, ["xor     ebx, ebx", "test    size, size", "jnz     short loc_4E76"], ["xor~ebx,ebx", "test~size,size", "jnz~FOO"]], [0, 0, 22, 0, 0, 2, 0, 0, 5, -1, 0.17775041050903118, ["cmp     size, total_written", "jbe     short loc_4EE0"], ["cmp~size,total_written", "jbe~FOO"]], [0, 0, 22, 0, 0, 2, 0, 0, 3, -1, 0.17857142857142858, ["mov     rsi, buf", "mov     rdx, size"], ["mov~rsi,buf", "mov~rdx,size"]], [1, 0, 22, 0, 0, 2, 0, 1, 4, -1, 0.19211822660098524, ["cmp     byte ptr [rsi], 0", "jnz     short loc_4EB8"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 22, 0, 0, 2, 1, 1, 6, -1, 0.029967159277504107, ["test    dl, 0Fh", "jnz     short loc_4E98"], ["test~dl,0", "jnz~FOO"]], [2, 0, 29, 1, 0, 9, 1, 1, 0, 4, 0.0, ["push    r13", "push    r12", "mov     r12, buf", "push    rbp", "push    rbx", "mov     rbp, size", "sub     rsp, 8", "test    byte ptr cs:output_flags+1, 40h", "jz      short loc_4E56"], ["push~r13", "push~r12", "mov~r12,buf", "push~rbp", "push~rbx", "mov~rbp,size", "sub~rsp,0", "test~<TAG>,0", "jz~FOO"]], [3, 0, 24, 0, 1, 6, 2, 2, 3, -1, 0.08866995073891626, ["xor     esi, esi; len", "mov     edi, 1; fd", "mov     cs:o_nocache_eof, 1", "call    invalidate_cache", "or      cs:conversions_mask, 8000h", "jmp     loc_4E56"], ["xor~esi,esi", "mov~edi,0", "mov~<TAG>,0", "call~FOO", "or~<TAG>,0", "jmp~FOO"]], [0, 0, 28, 0, 0, 2, 0, 1, 1, 3, 0.0049261083743842365, ["cmp     cs:output_blocksize, size", "ja      loc_4F90"], ["cmp~<TAG>,size", "ja~FOO"]], [1, 0, 22, 0, 0, 4, 1, 0, 7, -1, 0.07491789819376027, ["test    size, size", "mov     cs:final_op_was_seek, 1", "mov     rax, nwritten", "jns     loc_4E6E"], ["test~size,size", "mov~<TAG>,0", "mov~rax,nwritten", "jns~FOO"]], [2, 0, 22, 0, 1, 6, 1, 2, 6, -1, 0.10899014778325124, ["mov     edx, 1; whence", "mov     rsi, size; offset", "mov     edi, 1; fd", "call    _lseek", "test    rax, rax", "js      short loc_4F40"], ["mov~edx,0", "mov~rsi,size", "mov~edi,0", "call~FOO", "test~rax,rax", "js~FOO"]], [2, 0, 22, 2, 0, 3, 0, 1, 5, -1, 0.15147783251231528, ["add     rsi, 1; s2", "sub     rdx, 1; n", "jz      short loc_4F00"], ["add~rsi,0", "sub~rdx,0", "jz~FOO"]], [2, 0, 25, 0, 4, 18, 4, 5, 4, 0, 0.0, ["mov     rdx, cs:output_file; arg", "xor     edi, edi; n", "mov     esi, 3; s", "call    quotearg_n_style_colon", "lea     rsi, aFailedToTurnOf; \"failed to turn off O_DIRECT: %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r13, rax", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r13", "mov     rdx, rbx; fmt", "xor     edi, edi; status", "xor     eax, eax", "call    nl_error", "jmp     short loc_4FC4"], ["mov~rdx,<TAG>", "xor~edi,edi", "mov~esi,0", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r13,rax", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r13", "mov~rdx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 3, 1, 0.003694581280788177, ["cmp     cs:status_level, 1", "jnz     short loc_4FE6"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 22, 0, 1, 3, 0, 2, 8, -1, 0.05049261083743842, ["call    ___errno_location", "cmp     dword ptr [rax], 4", "jz      loc_4E71"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 22, 0, 1, 4, 1, 2, 7, -1, 0.016420361247947456, ["mov     rdi, buf; s1", "call    _memcmp", "test    eax, eax", "jz      short loc_4F00"], ["mov~rdi,buf", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 9, -1, 0.007389162561576354, ["jmp     short loc_4EE0"], ["jmp~FOO"]], [5, 0, 27, 0, 2, 12, 4, 3, 2, 2, 0.007389162561576354, ["mov     esi, 3; action", "mov     edi, 1; fd", "xor     eax, eax", "call    rpl_fcntl", "and     ah, 0BFh", "mov     esi, 4; action", "mov     edi, 1; fd", "mov     edx, eax", "xor     eax, eax", "call    rpl_fcntl", "test    eax, eax", "jz      short loc_4FC4"], ["mov~esi,0", "mov~edi,0", "xor~eax,eax", "call~FOO", "and~ah,0", "mov~esi,0", "mov~edi,0", "mov~edx,eax", "xor~eax,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 22, 0, 0, 3, 1, 1, 7, -1, 0.008210180623973728, ["and     r13d, 0FFFEFFFFh", "mov     cs:conversions_mask, r13d", "jmp     loc_4EB8"], ["and~r13d,0", "mov~<TAG>,r13d", "jmp~FOO"]], [1, 0, 22, 1, 1, 7, 1, 1, 3, -1, 0.21325944170771757, ["mov     rdx, size", "lea     rsi, [buf+total_written]; buf", "mov     edi, 1; fd", "sub     rdx, total_written; n", "call    _write", "test    nwritten, nwritten", "jns     short loc_4E68"], ["mov~rdx,size", "lea~rsi,<TAG>", "mov~edi,0", "sub~rdx,total_written", "call~FOO", "test~nwritten,nwritten", "jns~FOO"]], [1, 0, 22, 0, 1, 3, 0, 2, 4, -1, 0.12151067323481117, ["call    ___errno_location", "cmp     dword ptr [rax], 4", "jz      short loc_4E71"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 5, -1, 0.02257799671592775, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 1, 0, 0, 1, 0, 1, 2, -1, 0.008620689655172414, ["jmp     loc_4EF2"], ["jmp~FOO"]], [1, 0, 4, 0, 1, 3, 0, 2, 5, -1, 0.025041050903119866, ["call    ___errno_location", "mov     dword ptr [rax], 1Ch", "jmp     loc_4EE0"], ["call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 22, 0, 0, 1, 0, 1, 4, -1, 0.06588669950738917, ["jz      loc_4F58"], ["jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, -1, 0.08374384236453201, ["cmp     cs:o_nocache, 0", "jz      short loc_4EF2"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 22, 1, 0, 1, 0, 0, 5, -1, 0.03817733990147783, ["add     total_written, nwritten"], ["add~total_written,nwritten"]], [1, 0, 0, 1, 0, 7, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "mov     rax, rbx", "pop     rbx", "pop     size", "pop     buf", "pop     r13", "retn"], ["add~rsp,0", "mov~rax,rbx", "pop~rbx", "pop~size", "pop~buf", "pop~r13", "retn"]]], "func_feature": [15, 21, 37, 0, 30, 47, 5, 127, 0.07319, 9, 7], "succs": [[], [0, 29], [5, 21], [24, 2], [2, 27], [6], [13, 21], [17, 6], [10, 3], [3], [19, 3], [16, 28], [11, 20], [12, 7], [9], [9, 14], [18, 4], [12, 21], [27], [9, 15], [21], [26, 22], [4, 23], [27], [29], [27], [25, 28], [1, 29], [4], []], "fname": "iwrite", "n_num": 30}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 1, 0, 2, 9, 2, 2, 0, 0, 0.004761904761904762, ["lea     rsi, aTrySHelpForMor; \"Try '%s --help' for more information.\\n\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     rcx, rbx", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~rcx,rbx", "mov~esi,0", "xor~eax,eax", "call~FOO"]], [1, 1, 15, 1, 0, 13, 2, 1, 0, 6, 0.0, ["push    r13", "push    r12", "mov     edx, 5; category", "push    rbp", "push    rbx", "mov     ebp, edi", "sub     rsp, 88h", "mov     rbx, cs:program_name", "mov     rax, fs:28h", "mov     [rsp+0A8h+var_30], rax", "xor     eax, eax", "test    edi, edi", "jz      short loc_508D"], ["push~r13", "push~r12", "mov~edx,0", "push~rbp", "push~rbx", "mov~ebp,edi", "sub~rsp,<STR>", "mov~rbx,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~edi,edi", "jz~FOO"]], [1, 0, 4, 0, 1, 6, 1, 2, 5, 1, 0.028571428571428574, ["lea     rsi, s2; \"en_\"", "mov     edx, 3; n", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     loc_5610"], ["lea~rsi,<TAG>", "mov~edx,0", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 5, 0, 3, 12, 3, 4, 4, 2, 0.09285714285714286, ["call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, unk_C772", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "xor     esi, esi; locale", "mov     edi, 5; category", "call    _setlocale", "test    rax, rax", "jz      short loc_5509"], ["call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 6, 0, 1, 6, 1, 2, 5, 2, 0.0380952380952381, ["lea     rsi, s2; \"en_\"", "mov     edx, 3; n", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_5609"], ["lea~rsi,<TAG>", "mov~edx,0", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 7, 0, 3, 12, 3, 4, 4, 3, 0.09285714285714286, ["call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, unk_C772", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "xor     esi, esi; locale", "mov     edi, 5; category", "call    _setlocale", "test    rax, rax", "jz      short loc_55C6"], ["call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     edi, ebp; status", "call    _exit"], ["mov~edi,ebp", "call~FOO"]], [2, 0, 1, 0, 2, 11, 2, 3, 6, -1, 0.05714285714285715, ["lea     rsi, aOrAvailableLoc; \"or available locally via: info '(coreut\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rbx", "mov     rsi, rax", "mov     rdx, r12", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_5086"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rbx", "mov~rsi,rax", "mov~rdx,r12", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 6, 1, 0.01904761904761905, ["lea     r12, command_name; \"dd\""], ["lea~r12,<TAG>"]], [1, 0, 13, 1, 0, 4, 1, 1, 2, 4, 0.10952380952380954, ["add     rdx, 10h", "mov     rdi, [rdx]", "test    rdi, rdi", "jz      short loc_549F"], ["add~rdx,0", "mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [2, 0, 13, 0, 0, 7, 1, 1, 3, 4, 0.0, ["mov     ecx, 3", "mov     rsi, rbx", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     short loc_5480"], ["mov~ecx,0", "mov~rsi,rbx", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [26, 0, 13, 0, 46, 212, 25, 46, 1, 5, 0.05714285714285715, ["lea     rsi, aUsageSOperandO; \"Usage: %s [OPERAND]...\\n  or:  %s OPTIO\"...", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rbx", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aCopyAFileConve; \"Copy a file, converting and formatting \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aIfFileReadFrom; \"  if=FILE         read from FILE instea\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNAndBytesMayBe; \"\\nN and BYTES may be followed by the fo\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aAsciiFromEbcdi; \"  ascii     from EBCDIC to ASCII\\n  ebc\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aExclFailIfTheO; \"  excl      fail if the output file alr\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aEachFlagSymbol; \"\\nEach FLAG symbol may be:\\n\\n  append \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aDirectUseDirec; \"  direct    use direct I/O for data\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aDirectoryFailU; \"  directory  fail unless a directory\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aDsyncUseSynchr; \"  dsync     use synchronized I/O for da\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aSyncLikewiseBu; \"  sync      likewise, but also for meta\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aFullblockAccum; \"  fullblock  accumulate full blocks of \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNonblockUseNon; \"  nonblock  use non-blocking I/O\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNoatimeDoNotUp; \"  noatime   do not update access time\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNocacheRequest; \"  nocache   Request to drop cache.  See\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNocttyDoNotAss; \"  noctty    do not assign controlling t\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNofollowDoNotF; \"  nofollow  do not follow symlinks\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aCountBytesTrea; \"  count_bytes  treat 'count=N' as a byt\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aSkipBytesTreat; \"  skip_bytes  treat 'skip=N' as a byte \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aSeekBytesTreat; \"  seek_bytes  treat 'seek=N' as a byte \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "lea     rsi, aSendingASSigna; \"\\nSending a %s signal to a running 'dd'\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, aUsr1; \"USR1\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aHelpDisplayThi; \"      --help     display this help and \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aVersionOutputV; \"      --version  output version informa\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "lea     rbx, command_name; \"dd\"", "call    _fputs_unlocked", "lea     rax, asc_C6FC; \"[\"", "lea     rcx, aSha256sum; \"sha256sum\"", "mov     [rsp+0A8h+var_48], 0", "mov     [rsp+0A8h+var_40], 0", "mov     rdx, rsp", "mov     [rsp+0A8h+var_A8], rax", "lea     rax, aTestInvocation; \"test invocation\"", "mov     [rsp+0A8h+var_78], rcx", "lea     rcx, aSha384sum; \"sha384sum\"", "mov     [rsp+0A8h+var_A0], rax", "lea     rax, package; \"coreutils\"", "mov     [rsp+0A8h+var_68], rcx", "lea     rcx, aSha512sum; \"sha512sum\"", "mov     [rsp+0A8h+var_98], rax", "lea     rax, aMultiCallInvoc; \"Multi-call invocation\"", "mov     [rsp+0A8h+var_58], rcx", "mov     [rsp+0A8h+var_90], rax", "lea     rax, aSha224sum; \"sha224sum\"", "mov     [rsp+0A8h+var_88], rax", "lea     rax, aSha2Utilities; \"sha2 utilities\"", "mov     [rsp+0A8h+var_80], rax", "mov     [rsp+0A8h+var_70], rax", "mov     [rsp+0A8h+var_60], rax", "mov     [rsp+0A8h+var_50], rax", "nop     dword ptr [rax+rax+00000000h]"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rbx", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "lea~rbx,<TAG>", "call~FOO", "lea~rax,<TAG>", "lea~rcx,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~rdx,rsp", "mov~<TAG>,rax", "lea~rax,<TAG>", "mov~[rsp+0],rcx", "lea~rcx,<TAG>", "mov~[rsp+0],rax", "lea~rax,<TAG>", "mov~[rsp+0],rcx", "lea~rcx,<TAG>", "mov~[rsp+0],rax", "lea~rax,<TAG>", "mov~[rsp+0],rcx", "mov~[rsp+0],rax", "lea~rax,<TAG>", "mov~[rsp+0],rax", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~[rsp+0],rax", "mov~[rsp+0],rax", "mov~[rsp+0],rax", "nop~[word ptr [rax+0]"]], [1, 0, 10, 0, 0, 6, 2, 1, 3, 3, 0.18571428571428572, ["mov     r12, [rdx+8]", "xor     edi, edi; domainname", "mov     edx, 5; category", "lea     rsi, aSOnlineHelpS; \"\\n%s online help: <%s>\\n\"", "test    r12, r12", "jz      loc_557B"], ["mov~r12,[rdx+0]", "xor~edi,edi", "mov~edx,0", "lea~rsi,<TAG>", "test~r12,r12", "jz~FOO"]], [1, 0, 3, 0, 2, 9, 1, 3, 6, 0, 0.02380952380952381, ["mov     r13, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aReportAnyTrans; \"Report any translation bugs to <https:/\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, r13; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "jmp     loc_5509"], ["mov~r13,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,r13", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [2, 0, 2, 0, 2, 13, 2, 3, 5, -1, 0.04047619047619048, ["lea     rsi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "lea     r12, command_name; \"dd\"", "lea     rbx, aMultiCallInvoc+0Ah; \" invocation\"", "call    _dcgettext", "lea     rcx, command_name; \"dd\"", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_554E"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "lea~r12,<TAG>", "lea~rbx,<TAG>", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 2, 0, 2, 14, 2, 2, 5, -1, 0.05952380952380953, ["lea     rsi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rcx, command_name; \"dd\"", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "cmp     r12, rbx", "lea     rcx, aMultiCallInvoc+0Ah; \" invocation\"", "lea     rbx, aWrittenBySSAnd+1Bh; \"\"", "cmovz   rbx, rcx"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "cmp~r12,rbx", "lea~rcx,<TAG>", "lea~rbx,<TAG>", "cmovz~rbx,rcx"]]], "func_feature": [65, 48, 76, 15, 16, 23, 4, 337, 0.0506, 48, 2], "succs": [[6], [0, 11], [13, 15], [2, 15], [8, 14], [4, 14], [], [6], [13], [10, 12], [9, 12], [9], [3, 5], [15], [7], [7]], "fname": "usage", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[3, 0, 0, 0, 4, 19, 5, 4, 0, 0, 0.0, ["mov     rcx, slen; argsize", "mov     rdx, r14; arg", "mov     esi, 8; s", "xor     edi, edi; n", "call    quotearg_n_style_mem", "mov     edx, 5; category", "mov     rsi, error_msgid; msgid", "xor     edi, edi; domainname", "mov     value, rax", "call    _dcgettext", "lea     rdx, format; \"%s: %s\"", "mov     rcx, rax", "xor     edi, edi; status", "mov     r8, rbx", "xor     esi, esi; errnum", "xor     eax, eax", "call    nl_error", "mov     edi, 1; status", "call    usage"], ["mov~rcx,slen", "mov~rdx,r14", "mov~esi,0", "xor~edi,edi", "call~FOO", "mov~edx,0", "mov~rsi,error_msgid", "xor~edi,edi", "mov~value,rax", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "xor~edi,edi", "mov~r8,rbx", "xor~esi,esi", "xor~eax,eax", "call~FOO", "mov~edi,0", "call~FOO"]], [2, 0, 1, 1, 0, 8, 2, 1, 7, 0, 0.027083333333333334, ["xor     eax, eax", "or      rcx, 0FFFFFFFFFFFFFFFFh", "mov     rdi, str", "repne scasb", "mov     rax, rcx", "not     rax", "sub     rax, 1", "jmp     short loc_56CF"], ["xor~eax,eax", "or~rcx,0", "mov~rdi,str", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "sub~rax,0", "jmp~FOO"]], [0, 0, 1, 1, 0, 1, 0, 0, 7, -1, 0.027083333333333334, ["sub     strcomma, str"], ["sub~strcomma,str"]], [1, 0, 16, 0, 1, 5, 0, 1, 1, 6, 0.17083333333333334, ["mov     esi, 2Ch ; ','; c", "mov     rdi, str; s", "call    _strchr", "mov     r8, entry", "nop     dword ptr [strcomma]"], ["mov~esi,0", "mov~rdi,str", "call~FOO", "mov~r8,entry", "nop~<TAG>"]], [0, 0, 16, 0, 0, 3, 0, 1, 7, 7, 0.0875, ["lea     str, [strcomma+1]", "mov     ebx, edx", "jmp     short loc_5655"], ["lea~str,[strcomma+0]", "mov~ebx,edx", "jmp~FOO"]], [0, 0, 16, 0, 0, 10, 1, 0, 0, 7, 0.0, ["push    r14", "mov     r14, str", "push    r13", "mov     r13, error_msgid", "push    r12", "mov     r12, table", "push    rbp", "mov     ebp, edx", "push    rbx", "xor     ebx, ebx"], ["push~r14", "mov~r14,str", "push~r13", "mov~r13,error_msgid", "push~r12", "mov~r12,table", "push~rbp", "mov~ebp,edx", "push~rbx", "xor~ebx,ebx"]], [0, 0, 16, 0, 0, 4, 1, 1, 3, 4, 0.4, ["movzx   esi, byte ptr [rcx]", "movzx   edi, byte ptr [rdx]", "test    sil, sil", "jnz     short loc_5670"], ["movzx~esi,<TAG>", "movzx~edi,<TAG>", "test~sil,sil", "jnz~FOO"]], [0, 0, 16, 0, 0, 3, 0, 1, 2, 5, 0.35, ["mov     rcx, entry", "mov     rdx, str", "jmp     short loc_567D"], ["mov~rcx,entry", "mov~rdx,str", "jmp~FOO"]], [2, 0, 16, 2, 0, 4, 0, 1, 4, 3, 0.175, ["add     rdx, 1", "add     rcx, 1", "cmp     sil, dil", "jnz     short loc_569B"], ["add~rdx,0", "add~rcx,0", "cmp~sil,dil", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 6, 1, 0.15, ["test    strcomma, strcomma", "jz      short loc_5715"], ["test~strcomma,strcomma", "jz~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 5, 2, 0.2833333333333333, ["cmp     byte ptr [entry], 0", "jz      short loc_56C7"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 16, 1, 0, 2, 0, 1, 6, 6, 0.1, ["add     entry, 10h", "jmp     short loc_5668"], ["add~entry,0", "jmp~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 4, 4, 0.19583333333333333, ["cmp     dil, 2Ch ; ','", "jz      short loc_5693"], ["cmp~dil,0", "jz~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 7, -1, 0.0, ["pop     rbx", "mov     eax, edx", "pop     exclusive", "pop     table", "pop     error_msgid", "pop     str", "retn"], ["pop~rbx", "mov~eax,edx", "pop~exclusive", "pop~table", "pop~error_msgid", "pop~str", "retn"]], [0, 0, 16, 0, 0, 5, 3, 1, 6, 8, 0.12083333333333333, ["or      ebx, edx", "test    bpl, bpl", "cmovz   edx, ebx", "test    strcomma, strcomma", "jz      short loc_56BC"], ["or~ebx,edx", "test~bpl,bpl", "cmovz~edx,ebx", "test~strcomma,strcomma", "jz~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 5, 3, 0.01875, ["test    dil, dil", "jnz     short loc_569B"], ["test~dil,dil", "jnz~FOO"]], [0, 0, 16, 0, 0, 3, 1, 1, 5, 3, 0.16875, ["mov     edx, [entry+0Ch]", "test    edx, edx", "jnz     short loc_56A7"], ["mov~edx,[entry+0]", "test~edx,edx", "jnz~FOO"]]], "func_feature": [5, 15, 17, 0, 17, 23, 4, 82, 0.13382, 1, 5], "succs": [[], [0], [0], [7], [3], [3], [8, 12], [6], [10, 6], [1, 2], [9, 11], [7], [16, 15], [], [4, 13], [16, 10], [10, 14]], "fname": "parse_symbols", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 26, 1, 0, 2, 0, 1, 0, 0, 0.06338652482269504, ["sub     r14, 1", "jnz     short loc_5830"], ["sub~r14,0", "jnz~FOO"]], [0, 0, 26, 0, 0, 2, 1, 1, 9, -1, 0.07579787234042552, ["test    r14, r14", "jz      loc_57C0"], ["test~r14,r14", "jz~FOO"]], [1, 0, 4, 0, 0, 5, 2, 1, 3, -1, 0.010638297872340425, ["xor     edi, edi; n", "test    ebx, ebx", "mov     rdx, [rsp+0E8h+file]; arg", "mov     esi, 3; s", "jnz     loc_5A09"], ["xor~edi,edi", "test~ebx,ebx", "mov~rdx,<TAG>", "mov~esi,0", "jnz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 3, -1, 0.005319148936170213, ["cmp     [rsp+0E8h+lseek_errno], 0", "jnz     short loc_58F6"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 5, 0, 0, 1, 0, 0, 2, -1, 0.004432624113475177, ["mov     [rsp+0E8h+lseek_errno], 4Bh ; 'K'"], ["mov~[rsp+0],0"]], [3, 0, 47, 2, 1, 24, 2, 1, 0, -1, 0.0, ["push    r15", "push    r14", "mov     r14, records", "push    r13", "push    r12", "mov     r13, bytes", "push    rbp", "push    rbx", "mov     r12, blocksize", "mov     ebx, edi", "sub     rsp, 0B8h", "mov     rbp, [bytes]", "mov     rax, fs:28h", "mov     [rsp+0E8h+var_40], rax", "xor     eax, eax", "mov     [rsp+0E8h+file], file_0", "call    ___errno_location", "xor     edx, edx", "mov     r15, rax", "mov     dword ptr [rax], 0", "mov     rax, 7FFFFFFFFFFFFFFFh", "div     blocksize", "cmp     rax, records", "jb      short loc_57F3"], ["push~r15", "push~r14", "mov~r14,records", "push~r13", "push~r12", "mov~r13,bytes", "push~rbp", "push~rbx", "mov~r12,blocksize", "mov~ebx,edi", "sub~rsp,0", "mov~rbp,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~<TAG>,file_0", "call~FOO", "xor~edx,edx", "mov~r15,rax", "mov~<TAG>,0", "mov~rax,0", "div~,blocksize", "cmp~rax,records", "jb~FOO"]], [1, 0, 3, 0, 0, 3, 1, 0, 8, -1, 0.016843971631205674, ["mov     rdx, [rsp+0E8h+file]; arg", "mov     esi, 3; s", "xor     edi, edi; n"], ["mov~rdx,<TAG>", "mov~esi,0", "xor~edi,edi"]], [0, 0, 7, 0, 0, 2, 1, 1, 7, -1, 0.06294326241134751, ["test    ebx, ebx", "jnz     short loc_59FE"], ["test~ebx,ebx", "jnz~FOO"]], [1, 0, 35, 0, 1, 7, 2, 1, 1, -1, 0.008421985815602837, ["mov     rdi, [rsp+0E8h+file]; filename", "xor     edx, edx; offset", "mov     ecx, 2; whence", "mov     esi, ebx; fdesc", "call    skip_via_lseek", "test    rax, rax", "jns     loc_58EE"], ["mov~rdi,<TAG>", "xor~edx,edx", "mov~ecx,0", "mov~esi,ebx", "call~FOO", "test~rax,rax", "jns~FOO"]], [0, 0, 26, 0, 0, 3, 1, 1, 11, -1, 0.02105496453900709, ["mov     rdx, [bytes+0]", "test    rdx, rdx", "jz      loc_5A39"], ["mov~rdx,[bytes+0]", "test~rdx,rdx", "jz~FOO"]], [1, 0, 31, 0, 0, 1, 0, 0, 2, -1, 0.017730496453900707, ["mov     [rsp+0E8h+lseek_errno], 0"], ["mov~[rsp+0],0"]], [1, 0, 2, 0, 1, 4, 0, 1, 4, -1, 0.012411347517730497, ["call    quotearg_n_style_colon", "lea     rsi, aSCannotSeek; \"%s: cannot seek\"", "mov     fdesc, rax", "mov     edx, 5; category"], ["call~FOO", "lea~rsi,<TAG>", "mov~fdesc,rax", "mov~edx,0"]], [0, 0, 26, 0, 0, 2, 0, 1, 12, -1, 0.010416666666666666, ["mov     rax, cs:iread_fnc", "jmp     short loc_58B8"], ["mov~rax,<TAG>", "jmp~FOO"]], [0, 0, 30, 0, 0, 2, 1, 1, 3, -1, 0.057624113475177305, ["test    ebx, ebx", "jnz     short loc_5899"], ["test~ebx,ebx", "jnz~FOO"]], [1, 0, 35, 0, 1, 9, 2, 2, 2, -1, 0.01950354609929078, ["mov     eax, [r15]", "mov     rdi, [rsp+0E8h+file]; filename", "xor     edx, edx; offset", "mov     ecx, 2; whence", "mov     esi, ebx; fdesc", "mov     [rsp+0E8h+lseek_errno], eax", "call    skip_via_lseek", "test    rax, rax", "js      loc_5816"], ["mov~eax,<TAG>", "mov~rdi,<TAG>", "xor~edx,edx", "mov~ecx,0", "mov~esi,ebx", "mov~[rsp+0],eax", "call~FOO", "test~rax,rax", "js~FOO"]], [0, 0, 5, 3, 0, 7, 1, 1, 6, -1, 0.0, ["mov     rax, rbp", "xor     edx, edx", "sub     rax, rsi", "sub     rsi, rcx", "div     blocksize", "mov     rbp, rsi", "jmp     short loc_5965"], ["mov~rax,rbp", "xor~edx,edx", "sub~rax,rsi", "sub~rsi,rcx", "div~,blocksize", "mov~rbp,rsi", "jmp~FOO"]], [0, 0, 6, 0, 0, 4, 0, 0, 5, -1, 0.0022163120567375884, ["mov     rsi, [rsp+0E8h+st.st_size]", "lea     rdx, [rbp+rcx+0]", "cmp     rsi, rdx", "jb      short loc_598B"], ["mov~rsi,[rsp+0]", "lea~rdx,[rbp+0]", "cmp~rsi,rdx", "jb~FOO"]], [1, 0, 2, 0, 1, 5, 0, 2, 4, -1, 0.0031028368794326243, ["call    quotearg_n_style_colon", "mov     edx, 5", "mov     fdesc, rax", "lea     rsi, unk_C7B6", "jmp     loc_5A1D"], ["call~FOO", "mov~edx,0", "mov~fdesc,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 26, 0, 1, 5, 1, 2, 6, -1, 0.16799645390070922, ["mov     rsi, buf; char *", "mov     edi, ebx; int", "call    rax ; iread_fnc", "test    nread, nread", "js      loc_599E"], ["mov~rsi,buf", "mov~edi,ebx", "call~rax", "test~nread,nread", "js~FOO"]], [1, 0, 28, 0, 0, 2, 0, 1, 4, -1, 0.005319148936170213, ["cmp     cs:ibuf, 0", "jz      loc_5981"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 26, 0, 1, 3, 0, 2, 4, -1, 0.06028368794326241, ["call    alloc_obuf", "mov     rbp, cs:obuf", "jmp     short loc_5830"], ["call~FOO", "mov~rbp,<TAG>", "jmp~FOO"]], [1, 0, 44, 2, 1, 10, 1, 2, 1, -1, 0.01152482269503546, ["mov     rax, records", "mov     rdi, [rsp+0E8h+file]; filename", "mov     ecx, 1; whence", "imul    rax, blocksize", "mov     esi, ebx; fdesc", "add     rbp, rax", "mov     rdx, rbp; offset", "call    skip_via_lseek", "test    rax, rax", "js      loc_58C5"], ["mov~rax,records", "mov~rdi,<TAG>", "mov~ecx,0", "imul~rax,blocksize", "mov~esi,ebx", "add~rbp,rax", "mov~rdx,rbp", "call~FOO", "test~rax,rax", "js~FOO"]], [0, 0, 26, 0, 0, 2, 0, 0, 5, -1, 0.02304964539007092, ["mov     rbp, cs:ibuf", "nop"], ["mov~rbp,<TAG>", "nop"]], [0, 0, 27, 0, 1, 2, 0, 2, 5, -1, 0.0, ["call    alloc_ibuf", "jmp     loc_5828"], ["call~FOO", "jmp~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 2, -1, 0.00975177304964539, ["test    ebx, ebx", "jz      loc_5922"], ["test~ebx,ebx", "jz~FOO"]], [0, 0, 26, 0, 0, 2, 0, 0, 6, -1, 0.006427304964539007, ["mov     blocksize, [bytes+0]", "nop     dword ptr [rax+00h]"], ["mov~blocksize,[bytes+0]", "nop~[word ptr [rax+0]"]], [0, 0, 26, 0, 0, 4, 1, 1, 5, -1, 0.1411790780141844, ["test    records, records", "mov     rax, cs:iread_fnc", "mov     rdx, blocksize; size_t", "jz      short loc_58B0"], ["test~records,records", "mov~rax,<TAG>", "mov~rdx,blocksize", "jz~FOO"]], [1, 0, 8, 0, 1, 6, 2, 2, 3, -1, 0.006648936170212766, ["lea     rdx, [rsp+0E8h+st]; stat_buf", "xor     esi, esi; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "jnz     loc_5A45"], ["lea~rdx,[rsp+0]", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 3, -1, 0.005319148936170213, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 1, 0, 2, 9, 3, 3, 5, -1, 0.004432624113475177, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     esi, [rsp+0E8h+lseek_errno]; errnum", "mov     rdx, rax; fmt", "mov     rcx, rbx", "xor     edi, edi; status", "xor     eax, eax", "call    nl_error", "jmp     short loc_59EF"], ["xor~edi,edi", "call~FOO", "mov~esi,[rsp+0]", "mov~rdx,rax", "mov~rcx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 26, 0, 0, 2, 1, 1, 7, -1, 0.029698581560283686, ["xor     r14d, r14d", "jmp     short loc_583F"], ["xor~r14d,r14d", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 8, -1, 0.018617021276595744, ["mov     nread, r14", "jmp     loc_57CA"], ["mov~nread,r14", "jmp~FOO"]], [0, 0, 26, 0, 0, 1, 0, 1, 7, -1, 0.09707446808510638, ["jz      short loc_58BD"], ["jz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 12, -1, 0.0026595744680851063, ["xor     eax, eax", "jmp     loc_57CA"], ["xor~eax,eax", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 1, 0, 4, -1, 0.010638297872340425, ["mov     qword ptr [bytes+0], 0", "xor     eax, eax"], ["mov~[word ptr [bytes+0],0", "xor~eax,eax"]], [0, 0, 26, 0, 0, 2, 1, 1, 8, -1, 0.07047872340425532, ["test    ebx, ebx", "jnz     short loc_5874"], ["test~ebx,ebx", "jnz~FOO"]], [2, 0, 7, 0, 0, 6, 2, 1, 4, -1, 0.008421985815602837, ["mov     edx, [rsp+0E8h+st.st_mode]", "xor     eax, eax", "mov     rcx, cs:input_offset", "and     edx, 0D000h", "cmp     edx, 8000h", "jnz     short loc_5965"], ["mov~edx,[rsp+0]", "xor~eax,eax", "mov~rcx,<TAG>", "and~edx,0", "cmp~edx,0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 5, -1, 0.02925531914893617, ["mov     rcx, [rsp+0E8h+var_40]", "xor     rcx, fs:28h", "jnz     loc_5A40"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 4, 1, 0, 3, 0, 0, 5, -1, 0.008421985815602837, ["add     offset, rcx", "mov     cs:input_offset, rbp", "jnb     loc_57CA"], ["add~offset,rcx", "mov~<TAG>,rbp", "jnb~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, -1, 0.0, ["mov     cs:input_offset_overflow, 1", "jmp     loc_57CA"], ["mov~<TAG>,0", "jmp~FOO"]], [3, 0, 3, 0, 3, 16, 4, 4, 8, -1, 0.028812056737588652, ["mov     rsi, [rsp+0E8h+file]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aErrorReadingS; \"error reading %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     fdesc, rax", "call    _dcgettext", "mov     esi, [r15]; errnum", "mov     rdx, rax; fmt", "xor     edi, edi; status", "xor     eax, eax", "mov     rcx, rbx", "call    nl_error", "test    byte ptr cs:conversions_mask+1, 1", "jz      short loc_59EF"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~fdesc,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "mov~rcx,rbx", "call~FOO", "test~<TAG>,0", "jz~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 9, -1, 0.010638297872340425, ["cmp     cs:status_level, 1", "jz      short loc_59EF"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 1, 0, 1, 1, 0, 1, 10, -1, 0.0, ["call    print_stats"], ["call~FOO"]], [0, 0, 26, 1, 0, 6, 2, 1, 9, -1, 0.008865248226950354, ["xor     edx, edx", "add     nread, cs:input_offset", "setb    dl", "mov     cs:input_offset, rax", "test    rdx, rdx", "jz      short loc_5874"], ["xor~edx,edx", "add~nread,<TAG>", "setb~dl", "mov~<TAG>,rax", "test~rdx,rdx", "jz~FOO"]], [1, 0, 26, 0, 0, 1, 0, 0, 10, -1, 0.0, ["mov     cs:input_offset_overflow, 1"], ["mov~<TAG>,0"]], [1, 0, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 0B8h", "pop     fdesc", "pop     rbp", "pop     blocksize", "pop     bytes", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~fdesc", "pop~rbp", "pop~blocksize", "pop~bytes", "pop~r14", "pop~r15", "retn"]], [1, 0, 0, 0, 2, 3, 0, 2, 6, -1, 0.0, ["call    finish_up", "mov     edi, 1; status", "call    _exit"], ["call~FOO", "mov~edi,0", "call~FOO"]], [0, 0, 1, 0, 0, 0, 0, 0, -1, 0, 0.0, [], []]], "func_feature": [22, 38, 53, 1, 50, 70, 2, 211, 0.02362, 12, 11], "succs": [[9, 26], [0, 34], [17, 11], [2, 4], [2], [8, 21], [11], [41, 6], [10, 4], [33, 12], [13], [29], [30], [19, 20], [3, 13], [39], [39, 15], [29], [32, 7], [22, 23], [26], [24, 14], [26], [22], [27, 28], [30], [25, 18], [36], [34], [47], [18], [38], [35, 31], [38], [38], [1, 44], [16, 39], [], [37, 46], [40, 38], [38], [42, 47], [43, 47], [47], [1, 45], [1], [], [], [48]], "fname": "skip", "n_num": 49}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 0, 0, 2, 3, 0, 2, 0, 0, 0.0, ["call    finish_up", "mov     edi, 1; status", "call    _exit"], ["call~FOO", "mov~edi,0", "call~FOO"]], [2, 0, 2, 0, 4, 19, 4, 5, 1, 0, 0.16666666666666666, ["mov     rsi, cs:output_file; arg", "mov     edi, 4; s", "mov     rbx, nwritten", "call    quotearg_style", "lea     rsi, aWritingToS; \"writing to %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r12, rax", "call    _dcgettext", "mov     rbp, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "xor     edi, edi; status", "xor     eax, eax", "mov     rcx, r12", "mov     rdx, rbp; fmt", "call    nl_error", "test    nwritten, nwritten", "jz      short loc_5B0F"], ["mov~rsi,<TAG>", "mov~edi,0", "mov~rbx,nwritten", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r12,rax", "call~FOO", "mov~rbp,rax", "call~FOO", "mov~esi,<TAG>", "xor~edi,edi", "xor~eax,eax", "mov~rcx,r12", "mov~rdx,rbp", "call~FOO", "test~nwritten,nwritten", "jz~FOO"]], [1, 0, 1, 1, 0, 1, 0, 0, 2, 0, 0.0, ["add     cs:w_partial, 1"], ["add~<TAG>,0"]], [0, 0, 4, 1, 1, 9, 0, 2, 0, 0, 0.0, ["mov     rsi, cs:output_blocksize; buf", "mov     rdi, cs:obuf; fd", "push    r12", "push    rbp", "push    rbx", "call    iwrite", "add     cs:w_bytes, nwritten", "cmp     cs:output_blocksize, nwritten", "jnz     short loc_5ABF"], ["mov~rsi,<TAG>", "mov~rdi,<TAG>", "push~r12", "push~rbp", "push~rbx", "call~FOO", "add~<TAG>,nwritten", "cmp~<TAG>,nwritten", "jnz~FOO"]], [2, 0, 0, 1, 0, 6, 0, 0, 1, 0, 0.0, ["pop     rbx", "add     cs:w_full, 1", "mov     cs:oc, 0", "pop     rbp", "pop     r12", "retn"], ["pop~rbx", "add~<TAG>,0", "mov~<TAG>,0", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [7, 4, 9, 0, 5, 5, 8, 38, 0.03333, 8, 3], "succs": [[], [0, 2], [0], [1, 4], []], "fname": "write_output", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 14, 0, 0, 5, 0, 1, 0, 0, 0.5208333333333334, ["movzx   eax, byte ptr [buf+0]", "mov     rbx, cs:col", "cmp     al, byte ptr cs:newline_character; \"\\n\"", "mov     rdx, cs:conversion_blocksize", "jnz     short loc_5B40"], ["movzx~eax,[yte ptr [buf+0]", "mov~rbx,<TAG>", "cmp~al,<TAG>", "mov~rdx,<TAG>", "jnz~FOO"]], [0, 0, 14, 0, 0, 6, 0, 1, 1, -1, 0.058333333333333334, ["push    r12", "lea     r12, [buf+i]", "push    rbp", "mov     rbp, buf", "push    rbx", "jmp     short loc_5B88"], ["push~r12", "lea~r12,<TAG>", "push~rbp", "mov~rbp,buf", "push~rbx", "jmp~FOO"]], [2, 0, 14, 1, 0, 4, 0, 1, 4, -1, 0.19583333333333333, ["add     buf, 1", "mov     cs:col, 0", "cmp     r12, buf", "jnz     short loc_5B88"], ["add~buf,0", "mov~<TAG>,0", "cmp~r12,buf", "jnz~FOO"]], [2, 0, 14, 2, 0, 5, 0, 1, 5, -1, 0.22083333333333333, ["add     buf, 1", "add     rbx, 1", "cmp     r12, rbp", "mov     cs:col, rbx", "jz      short loc_5BBB"], ["add~buf,0", "add~rbx,0", "cmp~r12,rbp", "mov~<TAG>,rbx", "jz~FOO"]], [0, 0, 14, 0, 1, 1, 0, 1, 6, -1, 0.05, ["call    write_output"], ["call~FOO"]], [0, 0, 14, 0, 0, 1, 0, 1, 5, -1, 0.05416666666666667, ["jmp     short loc_5BC0"], ["jmp~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 3, -1, 0.24166666666666667, ["cmp     rdx, rbx", "jz      loc_5C08"], ["cmp~rdx,rbx", "jz~FOO"]], [0, 0, 14, 0, 1, 3, 0, 2, 6, -1, 0.0, ["call    write_output", "mov     rbx, cs:col", "jmp     loc_5B74"], ["call~FOO", "mov~rbx,<TAG>", "jmp~FOO"]], [0, 0, 14, 0, 0, 7, 0, 0, 5, -1, 0.05416666666666667, ["mov     rcx, cs:oc", "mov     rsi, cs:obuf", "lea     rdx, [rcx+1]", "cmp     rdx, cs:output_blocksize", "mov     [rsi+rcx], al", "mov     cs:oc, rdx", "jnb     loc_5C18"], ["mov~rcx,<TAG>", "mov~rsi,<TAG>", "lea~rdx,[rcx+0]", "cmp~rdx,<TAG>", "mov~<TAG>,al", "mov~<TAG>,rdx", "jnb~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 3, -1, 0.21666666666666667, ["cmp     rdx, rbx", "ja      short loc_5BD2"], ["cmp~rdx,rbx", "ja~FOO"]], [0, 0, 14, 0, 0, 1, 0, 0, 4, -1, 0.14166666666666666, ["jbe     short loc_5B74"], ["jbe~FOO"]], [1, 0, 14, 1, 0, 2, 0, 1, 4, -1, 0.0375, ["add     cs:r_truncate, 1", "jmp     loc_5B74"], ["add~<TAG>,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 16, 0, 0, 2, 1, 1, 0, 1, 0.0, ["test    i, i", "jz      locret_5C30"], ["test~i,i", "jz~FOO"]], [1, 0, 14, 1, 0, 3, 0, 0, 5, -1, 0.1375, ["add     j, 1", "cmp     cs:conversion_blocksize, j", "jbe     short loc_5BA7"], ["add~j,0", "cmp~<TAG>,j", "jbe~FOO"]], [0, 0, 14, 0, 0, 8, 0, 0, 4, -1, 0.15, ["mov     rdx, cs:oc", "movzx   esi, byte ptr cs:space_character; \" \"", "mov     rcx, cs:obuf", "lea     rax, [rdx+1]", "cmp     rax, cs:output_blocksize", "mov     [rcx+rdx], sil", "mov     cs:oc, rax", "jb      short loc_5BC5"], ["mov~rdx,<TAG>", "movzx~esi,<TAG>", "mov~rcx,<TAG>", "lea~rax,[rdx+0]", "cmp~rax,<TAG>", "mov~<TAG>,sil", "mov~<TAG>,rax", "jb~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 5, -1, 0.0, ["pop     rbx", "pop     buf", "pop     r12", "retn"], ["pop~rbx", "pop~buf", "pop~r12", "retn"]]], "func_feature": [2, 1, 12, 0, 17, 25, 2, 57, 0.1223, 8, 5], "succs": [[9, 6], [0], [0, 16], [0, 16], [14], [4], [10, 11], [3], [3, 7], [2, 15], [8, 3], [3], [], [1, 12], [2, 15], [5, 14], []], "fname": "copy_with_block", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 15, 0, 0, 2, 0, 0, 0, 0, 0.014705882352941176, ["movzx   ecx, byte ptr cs:space_character; \" \"", "mov     rax, rdx"], ["movzx~ecx,<TAG>", "mov~rax,rdx"]], [1, 0, 15, 1, 1, 6, 0, 2, 6, -1, 0.08486519607843136, ["call    write_output", "sub     cs:pending_spaces_7443, 1", "mov     rdi, cs:obuf", "mov     rdx, cs:oc", "mov     rsi, cs:output_blocksize", "jnz     short loc_5D1A"], ["call~FOO", "sub~<TAG>,0", "mov~rdi,<TAG>", "mov~rdx,<TAG>", "mov~rsi,<TAG>", "jnz~FOO"]], [1, 0, 15, 1, 0, 2, 0, 1, 6, -1, 0.08486519607843136, ["sub     cs:pending_spaces_7443, 1", "jz      short loc_5D5B"], ["sub~<TAG>,0", "jz~FOO"]], [0, 0, 17, 0, 0, 2, 1, 1, 0, 1, 0.0, ["test    nread, nread", "jz      locret_5DA8"], ["test~nread,nread", "jz~FOO"]], [3, 0, 15, 1, 0, 11, 0, 0, 3, -1, 0.04503676470588235, ["mov     rdx, cs:oc", "sub     i, 1", "movzx   esi, byte ptr cs:newline_character; \"\\n\"", "mov     rcx, cs:obuf", "mov     cs:pending_spaces_7443, 0", "mov     cs:col, 0", "lea     rax, [rdx+1]", "cmp     rax, cs:output_blocksize", "mov     [rcx+rdx], sil", "mov     cs:oc, rax", "jnb     loc_5D73"], ["mov~rdx,<TAG>", "sub~i,0", "movzx~esi,<TAG>", "mov~rcx,<TAG>", "mov~<TAG>,0", "mov~<TAG>,0", "lea~rax,[rdx+0]", "cmp~rax,<TAG>", "mov~<TAG>,sil", "mov~<TAG>,rax", "jnb~FOO"]], [0, 0, 15, 0, 0, 6, 0, 0, 2, -1, 0.47150735294117646, ["mov     rax, cs:col", "cmp     rax, cs:conversion_blocksize", "movzx   r13d, byte ptr [buf+i]", "lea     rdx, [rax+1]", "mov     cs:col, rdx", "jnb     short loc_5C60"], ["mov~rax,<TAG>", "cmp~rax,<TAG>", "movzx~r13d,<TAG>", "lea~rdx,[rax+0]", "mov~<TAG>,rdx", "jnb~FOO"]], [0, 0, 15, 0, 0, 5, 1, 1, 4, -1, 0.2931985294117647, ["test    rdx, rdx", "mov     rdi, cs:obuf", "mov     rax, cs:oc", "mov     rsi, cs:output_blocksize", "jnz     short loc_5D24"], ["test~rdx,rdx", "mov~rdi,<TAG>", "mov~rax,<TAG>", "mov~rsi,<TAG>", "jnz~FOO"]], [0, 0, 15, 0, 0, 4, 0, 1, 3, -1, 0.3676470588235294, ["movzx   ecx, byte ptr cs:space_character; \" \"", "mov     rdx, cs:pending_spaces_7443", "cmp     cl, r13b", "jz      loc_5D90"], ["movzx~ecx,<TAG>", "mov~rdx,<TAG>", "cmp~cl,r13b", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 15, 0, 0, 5, 0, 0, 7, -1, 0.26746323529411764, ["lea     rax, [rdx+1]", "mov     [rdi+rdx], r13b", "cmp     rax, rsi", "mov     cs:oc, rax", "jb      loc_5CAB"], ["lea~rax,[rdx+0]", "mov~<TAG>,r13b", "cmp~rax,rsi", "mov~<TAG>,rax", "jb~FOO"]], [0, 0, 15, 0, 0, 2, 0, 1, 6, -1, 0.06832107843137254, ["mov     rdx, rax", "jmp     short loc_5D5B"], ["mov~rdx,rax", "jmp~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 5, -1, 0.0, ["add     rsp, 8", "pop     i", "pop     nread", "pop     buf", "pop     c", "retn"], ["add~rsp,0", "pop~i", "pop~nread", "pop~buf", "pop~c", "retn"]], [1, 0, 15, 1, 0, 3, 0, 0, 4, -1, 0.21599264705882354, ["add     i, 1", "cmp     nread, i", "jbe     loc_5D85"], ["add~i,0", "cmp~nread,i", "jbe~FOO"]], [1, 0, 15, 1, 1, 4, 0, 2, 4, -1, 0.15625, ["add     i, 1", "call    write_output", "cmp     nread, i", "ja      loc_5CB8"], ["add~i,0", "call~FOO", "cmp~nread,i", "ja~FOO"]], [1, 0, 15, 1, 0, 3, 0, 1, 4, -1, 0.015625, ["add     rdx, 1", "mov     cs:pending_spaces_7443, rdx", "jmp     loc_5CAB"], ["add~rdx,0", "mov~<TAG>,rdx", "jmp~FOO"]], [0, 0, 15, 0, 0, 1, 0, 1, 5, -1, 0.07199754901960784, ["jmp     loc_5DA0"], ["jmp~FOO"]], [0, 0, 15, 0, 0, 5, 0, 0, 5, -1, 0.22855392156862742, ["lea     rdx, [rax+1]", "mov     [rdi+rax], cl", "cmp     rdx, rsi", "mov     cs:oc, rdx", "jb      short loc_5D10"], ["lea~rdx,[rax+0]", "mov~<TAG>,cl", "cmp~rdx,rsi", "mov~<TAG>,rdx", "jb~FOO"]], [1, 0, 15, 1, 0, 9, 1, 1, 1, -1, 0.05514705882352941, ["push    r13", "push    r12", "mov     r12, buf", "push    rbp", "push    rbx", "mov     rbp, nread", "xor     ebx, ebx", "sub     rsp, 8", "jmp     short loc_5CB8"], ["push~r13", "push~r12", "mov~r12,buf", "push~rbp", "push~rbx", "mov~rbp,nread", "xor~ebx,ebx", "sub~rsp,0", "jmp~FOO"]]], "func_feature": [2, 3, 12, 0, 18, 27, 2, 77, 0.13562, 8, 8], "succs": [[16], [0, 9], [0, 9], [8, 17], [12, 13], [4, 7], [16, 15], [14, 6], [], [12, 13], [9], [], [11, 5], [11, 5], [12], [10], [1, 2], [5]], "fname": "copy_with_unblock", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[2, 0, 0, 0, 1, 7, 0, 1, 0, 0, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 0", "mov     eax, 0FFFFFFFFh", "pop     rbx", "pop     stream", "pop     r12", "retn"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "pop~rbx", "pop~stream", "pop~r12", "retn"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, -1, 0.047619047619047616, ["test    eax, eax", "jnz     short loc_5E08"], ["test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["pop     rbx", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "pop~stream", "pop~r12", "retn"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 2, 0.07142857142857142, ["test    eax, eax", "jz      short loc_5DDF"], ["test~eax,eax", "jz~FOO"]], [1, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.047619047619047616, ["test    r12, r12", "mov     eax, 0FFFFFFFFh", "jz      short loc_5E18"], ["test~r12,r12", "mov~eax,0", "jz~FOO"]], [0, 1, 7, 0, 2, 12, 2, 3, 0, 3, 0.0, ["push    r12", "push    rbp", "mov     rbp, stream", "push    rbx", "call    ___fpending", "mov     ebx, [stream+0]", "mov     rdi, stream; fp", "mov     r12, rax", "call    rpl_fclose", "and     ebx, 20h", "test    ebx, ebx", "jnz     short loc_5DE8"], ["push~r12", "push~rbp", "mov~rbp,stream", "push~rbx", "call~FOO", "mov~ebx,[stream+0]", "mov~rdi,stream", "mov~r12,rax", "call~FOO", "and~ebx,<STR>", "test~ebx,ebx", "jnz~FOO"]], [1, 0, 0, 0, 1, 9, 0, 1, 3, 0, 0.0, ["call    ___errno_location", "cmp     dword ptr [rax], 9", "pop     rbx", "pop     stream", "pop     r12", "setnz   al", "movzx   eax, al", "neg     eax", "retn"], ["call~FOO", "cmp~<TAG>,0", "pop~rbx", "pop~stream", "pop~r12", "setnz~al", "movzx~eax,al", "neg~eax", "retn"]], [1, 0, 0, 0, 0, 5, 0, 0, 2, -1, 0.0, ["pop     rbx", "mov     eax, 0FFFFFFFFh", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "mov~eax,0", "pop~stream", "pop~r12", "retn"]]], "func_feature": [4, 5, 8, 0, 8, 8, 3, 44, 0.02083, 0, 0], "succs": [[], [0, 7], [], [2, 4], [2, 6], [1, 3], [], []], "fname": "close_stream", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:file_name, file", "retn"], ["mov~<TAG>,file", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:ignore_EPIPE, dil", "retn"], ["mov~<TAG>,dil", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_ignore_EPIPE", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 8, 1, 1, 7, 1, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jz      short loc_5E7C"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 1, 2, 0, -1, 0.09523809523809523, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jnz     short loc_5ED2"], ["mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 1, 6, 0, 0, 2, 0, 1, 0, 2, 0.04166666666666666, ["cmp     dword ptr [rax], 20h ; ' '", "jnz     short loc_5E93"], ["cmp~<TAG>,<STR>", "jnz~FOO"]], [0, 0, 1, 0, 2, 8, 2, 2, 0, -1, 0.014880952380952378, ["call    quotearg_colon", "mov     esi, [rbx]; errnum", "lea     rdx, format; \"%s: %s\"", "mov     rcx, rax", "mov     r8, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 3, 0, 1, 8, 2, 2, 0, 1, 0.11904761904761903, ["lea     rsi, aWriteError; \"write error\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdi, cs:file_name; arg", "mov     rbp, rax", "test    rdi, rdi", "jz      short loc_5EDD"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdi,<TAG>", "mov~rbp,rax", "test~rdi,rdi", "jz~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 0, -1, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [1, 0, 7, 0, 1, 4, 0, 2, 0, 2, 0.07142857142857142, ["call    ___errno_location", "cmp     cs:ignore_EPIPE, 0", "mov     rbx, rax", "jz      short loc_5E93"], ["call~FOO", "cmp~<TAG>,0", "mov~rbx,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 0, -1, 0.0, ["mov     edi, cs:exit_failure; status", "call    __exit"], ["mov~edi,<TAG>", "call~FOO"]], [0, 0, 1, 0, 1, 7, 2, 2, 0, 0, 0.014880952380952378, ["mov     esi, [rbx]; errnum", "lea     rdx, aLuBytesSCopied+1Bh; format", "mov     rcx, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_5ED2"], ["mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]]], "func_feature": [8, 8, 14, 0, 9, 12, 1, 46, 0.03968, 8, 2], "succs": [[1, 6], [5, 7], [1, 4], [7], [8, 3], [], [2, 4], [], [7]], "fname": "close_stdout", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    eax, eax", "js      short loc_5F49"], ["test~eax,eax", "js~FOO"]], [1, 0, 3, 1, 1, 14, 1, 2, 0, 1, 0.0, ["push    r13", "push    r12", "xor     eax, eax", "push    rbp", "push    rbx", "mov     ebp, edi", "mov     desired_fd, file; file", "mov     esi, edx; oflag", "mov     edx, ecx", "sub     rsp, 8", "call    _open", "cmp     ebp, eax", "mov     ebx, eax", "jz      short loc_5F49"], ["push~r13", "push~r12", "xor~eax,eax", "push~rbp", "push~rbx", "mov~ebp,edi", "mov~desired_fd,file", "mov~esi,edx", "mov~edx,ecx", "sub~rsp,0", "call~FOO", "cmp~ebp,eax", "mov~ebx,eax", "jz~FOO"]], [0, 0, 1, 0, 3, 11, 0, 3, 2, 1, 0.0, ["mov     esi, ebp; fd2", "mov     edi, eax; fd", "call    _dup2", "mov     r12d, eax", "call    ___errno_location", "mov     r13d, [rax]", "mov     desired_fd, rax", "mov     edi, ebx; fd", "call    _close", "mov     ebx, r12d", "mov     [rbp+0], r13d"], ["mov~esi,ebp", "mov~edi,eax", "call~FOO", "mov~r12d,eax", "call~FOO", "mov~r13d,<TAG>", "mov~desired_fd,rax", "mov~edi,ebx", "call~FOO", "mov~ebx,r12d", "mov~[rbp+0],r13d"]], [1, 0, 0, 1, 0, 7, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "mov     eax, ebx", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "mov~eax,ebx", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]]], "func_feature": [4, 2, 6, 0, 4, 5, 1, 34, 0.04167, 0, 2], "succs": [[2, 3], [0, 3], [3], []], "fname": "fd_reopen", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 1, 0, 1, 0, 3, 0, 0, 0, 0, 0.0, ["add     rsp, 20h", "pop     rbx", "retn"], ["add~rsp,<STR>", "pop~rbx", "retn"]], [5, 0, 2, 7, 0, 17, 1, 1, 1, 1, 0.3333333333333333, ["mov     rcx, [rsp+28h+ts.tv_nsec]", "mov     rdx, 112E0BE826D694B3h", "mov     rax, rcx", "imul    rdx", "mov     rax, rcx", "sar     rax, 3Fh", "sar     rdx, 1Ah", "sub     rdx, rax", "mov     rax, [rsp+28h+ts.tv_sec]", "add     rax, rdx", "imul    rdx, 3B9ACA00h", "imul    rax, 3B9ACA00h", "sub     rcx, rdx", "add     rax, rcx", "mov     rsi, [rsp+28h+var_10]", "xor     rsi, fs:28h", "jnz     short loc_5FE5"], ["mov~rcx,[rsp+0]", "mov~rdx,0", "mov~rax,rcx", "imul~,rdx", "mov~rax,rcx", "sar~rax,0", "sar~rdx,0", "sub~rdx,rax", "mov~rax,<TAG>", "add~rax,rdx", "imul~rdx,,0", "imul~rax,,0", "sub~rcx,rdx", "add~rax,rcx", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 3, 0, 1, 2, 0, 1, 1, 2, 0.0, ["mov     rdi, rbx; ts", "call    gettime"], ["mov~rdi,rbx", "call~FOO"]], [1, 1, 4, 1, 1, 11, 2, 2, 0, 2, 0.0, ["push    rbx", "mov     edi, 1; clock_id", "sub     rsp, 20h", "mov     rbx, rsp", "mov     rsi, rbx; tp", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "call    _clock_gettime", "test    eax, eax", "jz      short loc_5F91"], ["push~rbx", "mov~edi,0", "sub~rsp,<STR>", "mov~rbx,rsp", "mov~rsi,rbx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~eax,eax", "jz~FOO"]]], "func_feature": [3, 3, 5, 1, 5, 5, 3, 34, 0.06667, 1, 9], "succs": [[], [0, 2], [], [1], [1, 3]], "fname": "gethrxtime", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rsi, ts; tp", "xor     edi, edi; clock_id", "jmp     _clock_gettime"], ["mov~rsi,ts", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 1, 3, 0.0, 0, 0], "succs": [[], [0]], "fname": "gettime", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 28h", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 12, 3, 2, 0, 1, 0.0, ["sub     rsp, 28h", "xor     edi, edi; clock_id", "mov     rsi, rsp; tp", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "call    _clock_gettime", "mov     rcx, [rsp+28h+var_10]", "xor     rcx, fs:28h", "mov     rax, [rsp+28h+ts.tv_sec]", "mov     rdx, [rsp+28h+ts.tv_nsec]", "jnz     short loc_603C"], ["sub~rsp,0", "xor~edi,edi", "mov~rsi,rsp", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,<TAG>", "mov~rdx,[rsp+0]", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 3, 3, 1, 3, 2, 0, 15, 0.0, 1, 2], "succs": [[], [0, 2], []], "fname": "current_timespec", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 7, 0, 0, 3, 0, 0, 0, 0, 0.19780219780219782, ["fxch    st(1)", "fucomip st, st(1)", "jp      short loc_60A8"], ["fxch~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "jp~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 3, 4, 0.24725274725274726, ["test    edi, edi", "jnz     short loc_60C8"], ["test~edi,edi", "jnz~FOO"]], [1, 0, 3, 1, 0, 5, 1, 1, 6, 1, 0.1208791208791209, ["add     rax, 1", "mov     [rsp+var_20], rax", "test    rax, rax", "fild    [rsp+var_20]", "js      short loc_6110"], ["add~rax,0", "mov~[rsp+0],rax", "test~rax,rax", "fild~<TAG>,[rsp+0]", "js~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 6, 2, 0.016483516483516484, ["fstp    st", "jmp     short loc_60B0"], ["fstp~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 5, 2, 0.11538461538461539, ["fstp    st", "nop     word ptr [rax+rax+00h]"], ["fstp~<TAG>,<TAG>", "nop~[ord ptr [rax+0]"]], [0, 0, 5, 0, 0, 1, 0, 1, 5, 3, 0.04395604395604396, ["jz      short locret_60CA"], ["jz~FOO"]], [2, 0, 12, 0, 0, 13, 2, 1, 1, 6, 0.03296703296703297, ["fnstcw  [rsp+var_A]", "movzx   eax, [rsp+var_A]", "fsubr   st(1), st", "fxch    st(1)", "mov     rdx, 8000000000000000h", "or      ah, 0Ch", "mov     [rsp+var_C], ax", "fldcw   [rsp+var_C]", "fistp   [rsp+var_18]", "fldcw   [rsp+var_A]", "mov     rax, [rsp+var_18]", "xor     rax, rdx", "jmp     loc_6084"], ["fnstcw~[rsp+0]", "movzx~eax,[rsp+0]", "fsubr~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "mov~rdx,0", "or~ah,0", "mov~[rsp+0],ax", "fldcw~[rsp+0]", "fistp~<TAG>,[rsp+0]", "fldcw~[rsp+0]", "mov~rax,[rsp+0]", "xor~rax,rdx", "jmp~FOO"]], [0, 0, 14, 0, 0, 4, 0, 0, 0, 7, 0.0, ["fld     cs:flt_E1E4", "fld     [rsp+value.value]", "fucomi  st, st(1)", "jnb     short loc_60D0"], ["fld~<TAG>,<TAG>", "fld~<TAG>,[rsp+0]", "fucomi~<TAG>,<TAG>", "jnb~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, -1, 0.03296703296703297, ["fstp    st(1)"], ["fstp~<TAG>,<TAG>"]], [0, 0, 1, 0, 0, 1, 0, 1, 7, -1, 0.016483516483516484, ["jmp     short locret_60CA"], ["jmp~FOO"]], [0, 0, 11, 0, 0, 4, 1, 0, 2, 5, 0.18131868131868134, ["mov     [rsp+var_20], rax", "test    rax, rax", "fild    [rsp+var_20]", "jns     short loc_6098"], ["mov~[rsp+0],rax", "test~rax,rax", "fild~<TAG>,[rsp+0]", "jns~FOO"]], [1, 0, 12, 0, 0, 10, 1, 0, 1, 6, 0.03296703296703297, ["fstp    st(1)", "fnstcw  [rsp+var_A]", "movzx   eax, [rsp+var_A]", "or      ah, 0Ch", "mov     [rsp+var_C], ax", "fld     st", "fldcw   [rsp+var_C]", "fistp   [rsp+var_18]", "fldcw   [rsp+var_A]", "mov     rax, [rsp+var_18]"], ["fstp~<TAG>,<TAG>", "fnstcw~[rsp+0]", "movzx~eax,[rsp+0]", "or~ah,0", "mov~[rsp+0],ax", "fld~<TAG>,<TAG>", "fldcw~[rsp+0]", "fistp~<TAG>,[rsp+0]", "fldcw~[rsp+0]", "mov~rax,[rsp+0]"]], [0, 0, 10, 0, 0, 1, 0, 0, 3, 5, 0.0, ["fadd    cs:flt_E1E8"], ["fadd~<TAG>,<TAG>"]], [0, 0, 0, 0, 0, 2, 0, 0, 7, 0, 0.0, ["fadd    cs:flt_E1E8", "retn"], ["fadd~<TAG>,<TAG>", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 5, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 6, 6, 4, 15, 19, 3, 52, 0.06923, 2, 1], "succs": [[4, 5], [0, 8], [9, 13], [2], [2], [3, 14], [10], [11, 6], [14], [14], [1, 12], [10], [1], [], []], "fname": "adjust_value", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 89, 3, 0, 16, 2, 1, 0, 0, 0.024509803921568627, ["mov     rax, amt", "xor     edx, edx", "mov     esi, edi", "div     r8", "sar     esi, 1", "mov     r10, rax", "lea     eax, [rdx+rdx*4]", "xor     edx, edx", "lea     eax, [tenths+rax*2]", "div     r11d", "lea     edx, [rsi+rdx*2]", "mov     r9d, eax", "mov     rsi, r10", "add     edi, edx", "cmp     r11d, edx", "ja      short loc_63B8"], ["mov~rax,amt", "xor~edx,edx", "mov~esi,edi", "div~,r8", "sar~esi,0", "mov~r10,rax", "lea~eax,<TAG>", "xor~edx,edx", "lea~eax,<TAG>", "div~,r11d", "lea~edx,<TAG>", "mov~r9d,eax", "mov~rsi,r10", "add~edi,edx", "cmp~r11d,edx", "ja~FOO"]], [0, 0, 89, 0, 0, 2, 1, 1, 6, 16, 0.01857298474945534, ["xor     ebx, ebx", "jmp     short loc_63D7"], ["xor~ebx,ebx", "jmp~FOO"]], [1, 0, 89, 0, 0, 2, 0, 1, 10, 12, 0.008714596949891067, ["cmp     ebx, 8", "jz      loc_6978"], ["cmp~ebx,0", "jz~FOO"]], [2, 0, 20, 1, 0, 3, 0, 1, 15, -1, 0.006372549019607843, ["add     ebx, 1", "cmp     ebx, 8", "jnz     short loc_67ED"], ["add~ebx,0", "cmp~ebx,0", "jnz~FOO"]], [0, 0, 20, 1, 0, 3, 0, 0, 14, -1, 0.014025054466230936, ["imul    power, rdx", "cmp     rcx, power", "jbe     loc_64B9"], ["imul~power,rdx", "cmp~rcx,power", "jbe~FOO"]], [0, 0, 17, 0, 0, 1, 0, 1, 16, -1, 0.0004629629629629629, ["jmp     loc_64B9"], ["jmp~FOO"]], [0, 0, 32, 2, 1, 10, 1, 2, 13, 1, 0.011982570806100218, ["mov     rax, [rsp+0C8h+from_block_size]", "sub     r12, rbp", "sub     r8, rbp", "mov     rdi, r8; dest", "mov     rdx, rbp; n", "lea     rsi, [rax+r12]; src", "call    _memcpy", "test    r12, r12", "mov     r8, rax", "jz      loc_6B18"], ["mov~rax,[rsp+0]", "sub~r12,rbp", "sub~r8,rbp", "mov~rdi,r8", "mov~rdx,rbp", "lea~rsi,<TAG>", "call~FOO", "test~r12,r12", "mov~r8,rax", "jz~FOO"]], [0, 0, 32, 0, 0, 2, 0, 0, 12, 2, 0.029030501089324617, ["cmp     rbp, r12", "jbe     short loc_65E8"], ["cmp~rbp,r12", "jbe~FOO"]], [1, 0, 61, 1, 0, 6, 0, 0, 19, 13, 0.004956427015250544, ["mov     r10d, edi", "add     edi, 8", "mov     r11, [r9+r10]", "cmp     edi, eax", "mov     [rdx+r10], r11", "jb      short loc_69FA"], ["mov~r10d,edi", "add~edi,0", "mov~r11,<TAG>", "cmp~edi,eax", "mov~<TAG>,r11", "jb~FOO"]], [1, 0, 61, 0, 0, 2, 2, 0, 18, 14, 0.0033769063180827887, ["and     eax, 0FFFFFFF8h", "xor     edi, edi"], ["and~eax,0", "xor~edi,edi"]], [0, 0, 59, 0, 0, 1, 0, 1, 20, 12, 0.006427015250544662, ["jmp     loc_6757"], ["jmp~FOO"]], [1, 0, 89, 1, 0, 5, 0, 1, 8, 14, 0.01377995642701525, ["cmp     r11d, edi", "setb    dil", "movzx   edi, dil", "add     edi, 2", "jmp     short loc_63C2"], ["cmp~r11d,edi", "setb~dil", "movzx~edi,dil", "add~edi,0", "jmp~FOO"]], [0, 0, 68, 0, 0, 4, 1, 0, 2, 12, 0.017592592592592594, ["mov     [rsp+0C8h+from_block_size], rcx", "test    rcx, rcx", "fild    [rsp+0C8h+from_block_size]", "jns     short loc_6219"], ["mov~[rsp+0],rcx", "test~rcx,rcx", "fild~<TAG>,[rsp+0]", "jns~FOO"]], [0, 0, 132, 0, 0, 2, 1, 1, 1, 13, 0.002096949891067538, ["test    rcx, rcx", "jz      loc_6205"], ["test~rcx,rcx", "jz~FOO"]], [0, 0, 131, 1, 0, 6, 2, 1, 2, 13, 0.003540305010893246, ["mov     psuffix_0, [rsp+0C8h+to_block_size]", "xor     edx, edx", "div     rcx", "test    rdx, rdx", "mov     r8, rax", "jnz     loc_6205"], ["mov~psuffix_0,[rsp+0]", "xor~edx,edx", "div~,rcx", "test~rdx,rdx", "mov~r8,rax", "jnz~FOO"]], [0, 0, 129, 2, 0, 7, 1, 1, 2, 13, 0.006535947712418301, ["mov     rsi, n_0", "xor     edx, edx", "imul    rsi, multiplier", "mov     multiplier, amt", "div     multiplier", "cmp     rax, n_0", "jnz     loc_6205"], ["mov~rsi,n_0", "xor~edx,edx", "imul~rsi,multiplier", "mov~multiplier,amt", "div~,multiplier", "cmp~rax,n_0", "jnz~FOO"]], [0, 0, 130, 1, 0, 6, 2, 1, 1, 13, 0.00520152505446623, ["xor     edx, edx", "mov     psuffix_0, rcx", "div     rdi", "test    rdx, rdx", "mov     rdi, rax", "jz      loc_6560"], ["xor~edx,edx", "mov~psuffix_0,rcx", "div~,rdi", "test~rdx,rdx", "mov~rdi,rax", "jz~FOO"]], [0, 0, 67, 0, 0, 1, 0, 0, 3, 12, 0.0, ["fadd    cs:flt_E1E8"], ["fadd~<TAG>,<TAG>"]], [0, 0, 38, 0, 0, 2, 0, 0, 13, 9, 0.002033405954974582, ["fld     cs:flt_E1EC", "fmul    st(1), st"], ["fld~<TAG>,<TAG>", "fmul~<TAG>,<TAG>"]], [3, 0, 45, 1, 2, 18, 1, 3, 12, 9, 0.009767610748002906, ["fstp    [rsp+0C8h+damt.value]", "sub     rsp, 10h", "lea     rcx, a1lf; \"%.1Lf\"", "mov     esi, 1", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "xor     eax, eax", "mov     decimal_point, [rsp+0D8h+buf]", "mov     rdi, r14", "fstp    [rsp+0D8h+value.value]", "call    ___sprintf_chk", "mov     rdi, r14; s", "call    _strlen", "pop     rcx", "pop     rsi", "cmp     rax, [rsp+0C8h+from_block_size]", "mov     r14, rax", "fld     [rsp+0C8h+damt.value]", "ja      loc_68A8"], ["fstp~<TAG>,[rsp+0]", "sub~rsp,0", "lea~rcx,<TAG>", "mov~esi,0", "mov~rdx,0", "xor~eax,eax", "mov~decimal_point,[rsp+0]", "mov~rdi,r14", "fstp~<TAG>,<TAG>", "call~FOO", "mov~rdi,r14", "call~FOO", "pop~rcx", "pop~rsi", "cmp~rax,[rsp+0]", "mov~r14,rax", "fld~<TAG>,[rsp+0]", "ja~FOO"]], [1, 0, 74, 0, 0, 3, 0, 1, 15, 13, 0.007080610021786492, ["lea     rsi, [r10+1]", "cmp     amt, 0Ah", "jz      short loc_6A70"], ["lea~rsi,[r10+0]", "cmp~amt,0", "jz~FOO"]], [1, 0, 76, 0, 0, 3, 0, 1, 14, 14, 0.011383442265795206, ["lea     r9d, [tenths+1]", "cmp     r9d, 0Ah", "jz      loc_6A11"], ["lea~r9d,[tenths+0]", "cmp~r9d,0", "jz~FOO"]], [2, 0, 79, 1, 0, 6, 1, 1, 12, 15, 0.012445533769063181, ["mov     edx, eax", "and     edx, 1", "add     edx, edi", "cmp     edx, 2", "setnle  dl", "jmp     loc_6700"], ["mov~edx,eax", "and~edx,0", "add~edx,edi", "cmp~edx,0", "setnle~dl", "jmp~FOO"]], [1, 0, 81, 0, 0, 2, 0, 1, 11, 16, 0.022549019607843137, ["cmp     r15d, 1", "jz      loc_69A2"], ["cmp~r15d,0", "jz~FOO"]], [1, 0, 38, 0, 0, 2, 0, 1, 6, 8, 0.023910675381263617, ["cmp     r15d, 1", "jz      short loc_642C"], ["cmp~r15d,0", "jz~FOO"]], [1, 0, 62, 0, 0, 3, 1, 1, 5, 9, 0.03622004357298475, ["test    r12b, 10h", "fmulp   st(1), st", "jz      loc_6418"], ["test~r12b,0", "fmulp~<TAG>,<TAG>", "jz~FOO"]], [0, 0, 72, 0, 0, 2, 1, 1, 16, 13, 0.0008714596949891067, ["xor     edi, edi", "jmp     loc_6991"], ["xor~edi,edi", "jmp~FOO"]], [0, 0, 32, 1, 1, 6, 0, 1, 14, 4, 0.0003812636165577342, ["sub     r8, r13", "mov     rdx, r13; n", "mov     rsi, thousands_sep; src", "mov     rdi, r8; dest", "call    _memcpy", "mov     r8, rax"], ["sub~r8,r13", "mov~rdx,r13", "mov~rsi,thousands_sep", "mov~rdi,r8", "call~FOO", "mov~r8,rax"]], [0, 0, 37, 0, 0, 3, 0, 1, 7, 8, 0.0007080610021786493, ["fld     cs:tbyte_E1F0", "fucomip st, st(1)", "ja      loc_66B0"], ["fld~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "ja~FOO"]], [0, 0, 32, 0, 0, 3, 1, 1, 11, 3, 0.037527233115468406, ["movzx   eax, byte ptr [r15]", "test    al, al", "jz      short loc_6637"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [2, 0, 32, 1, 2, 22, 0, 3, 10, 4, 0.03965141612200435, ["mov     r14, integerlim_0", "mov     rdi, thousands_sep; s", "mov     [rsp+0C8h+integerlim], integerlim_0", "sub     r14, p_0", "mov     rbp, 0FFFFFFFFFFFFFFFFh", "call    _strlen", "lea     rdi, [rsp+0C8h+var_78]", "mov     ecx, 29h ; ')'", "mov     rdx, r14", "mov     rsi, p_0", "mov     [rsp+0C8h+n], rax", "mov     [rsp+0C8h+from_block_size], rdi", "call    ___memcpy_chk", "mov     ecx, r12d", "mov     dword ptr [rsp+0C8h+damt.value], ebx", "mov     opts, r14", "mov     exponent_0, thousands_sep", "mov     r8, [rsp+0C8h+integerlim]", "mov     p_0, [rsp+0C8h+grouping]", "mov     thousands_sep, [rsp+0C8h+n]", "mov     r14d, ecx", "jmp     short loc_6622"], ["mov~r14,integerlim_0", "mov~rdi,thousands_sep", "mov~[rsp+0],integerlim_0", "sub~r14,p_0", "mov~rbp,0", "call~FOO", "lea~rdi,[rsp+0]", "mov~ecx,0", "mov~rdx,r14", "mov~rsi,p_0", "mov~[rsp+0],rax", "mov~[rsp+0],rdi", "call~FOO", "mov~ecx,r12d", "mov~[word ptr [rsp+0],ebx", "mov~opts,r14", "mov~exponent_0,thousands_sep", "mov~r8,[rsp+0]", "mov~p_0,[rsp+0]", "mov~thousands_sep,[rsp+0]", "mov~r14d,ecx", "jmp~FOO"]], [0, 0, 66, 0, 0, 5, 1, 0, 3, 11, 0.02423747276688453, ["mov     rax, [rsp+0C8h+to_block_size]", "mov     [rsp+0C8h+from_block_size], rax", "test    rax, rax", "fild    [rsp+0C8h+from_block_size]", "jns     short loc_6232"], ["mov~rax,[rsp+0]", "mov~[rsp+0],rax", "test~rax,rax", "fild~<TAG>,[rsp+0]", "jns~FOO"]], [0, 0, 65, 0, 0, 1, 0, 0, 4, 11, 0.0, ["fadd    cs:flt_E1E8"], ["fadd~<TAG>,<TAG>"]], [2, 0, 32, 1, 0, 4, 0, 0, 12, 3, 0.0, ["cmp     al, 7Fh", "movzx   ebp, al", "cmovnb  rbp, r12", "add     r15, 1"], ["cmp~al,0", "movzx~ebp,al", "cmovnb~rbp,r12", "add~r15,0"]], [2, 0, 44, 1, 0, 7, 0, 0, 11, 8, 0.025490196078431372, ["mov     rax, rbp", "mov     byte ptr [r8-1], 30h ; '0'", "not     rax", "add     r8, rax", "cmp     ebp, 8", "mov     eax, ebp", "jnb     short loc_6A7A"], ["mov~rax,rbp", "mov~[yte ptr [r8-1]+0],0", "not~rax", "add~r8,rax", "cmp~ebp,0", "mov~eax,ebp", "jnb~FOO"]], [2, 0, 45, 1, 0, 3, 1, 1, 10, 7, 0.03425925925925926, ["add     ebx, 1", "test    r12b, 8", "jz      loc_6A22"], ["add~ebx,0", "test~r12b,0", "jz~FOO"]], [0, 0, 64, 0, 0, 5, 1, 0, 4, 10, 0.030446623093681915, ["fdivp   st(1), st", "mov     [rsp+0C8h+from_block_size], n_0", "test    n_0, n_0", "fild    [rsp+0C8h+from_block_size]", "jns     short loc_6248"], ["fdivp~<TAG>,<TAG>", "mov~[rsp+0],n_0", "test~n_0,n_0", "fild~<TAG>,[rsp+0]", "jns~FOO"]], [0, 0, 63, 0, 0, 1, 0, 0, 5, 10, 0.0, ["fadd    cs:flt_E1E8"], ["fadd~<TAG>,<TAG>"]], [1, 0, 36, 0, 0, 4, 1, 1, 14, 7, 0.0029956427015250544, ["movzx   edx, byte ptr [decimal_point]", "test    al, 2", "mov     [p_0], dl", "jz      loc_6966"], ["movzx~edx,<TAG>", "test~al,0", "mov~<TAG>,dl", "jz~FOO"]], [0, 0, 37, 0, 0, 2, 1, 1, 13, 7, 0.006835511982570806, ["test    eax, eax", "jz      loc_6966"], ["test~eax,eax", "jz~FOO"]], [3, 0, 45, 1, 2, 19, 1, 2, 10, 9, 0.02231299927378359, ["sub     rsp, 10h", "lea     rcx, a1lf; \"%.1Lf\"", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "fld     st", "fstp    [rsp+0D8h+value.value]", "mov     decimal_point, [rsp+0D8h+buf]", "mov     esi, 1", "xor     eax, eax", "mov     rdi, r14", "fstp    [rsp+0D8h+damt.value]", "call    ___sprintf_chk", "mov     rdi, r14; s", "call    _strlen", "mov     r14, rax", "pop     buflen", "pop     rdx", "cmp     buflen, [rsp+0C8h+from_block_size]", "fld     [rsp+0C8h+damt.value]", "jbe     loc_6302"], ["sub~rsp,0", "lea~rcx,<TAG>", "mov~rdx,0", "fld~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "mov~decimal_point,[rsp+0]", "mov~esi,0", "xor~eax,eax", "mov~rdi,r14", "fstp~<TAG>,[rsp+0]", "call~FOO", "mov~rdi,r14", "call~FOO", "mov~r14,rax", "pop~buflen", "pop~rdx", "cmp~buflen,[rsp+0]", "fld~<TAG>,[rsp+0]", "jbe~FOO"]], [2, 0, 51, 1, 0, 10, 2, 1, 9, 10, 0.02712418300653595, ["mov     ecx, [rsp+0C8h+var_98]", "add     rbp, 1", "xor     eax, eax", "fdivrp  st(1), st", "test    ecx, ecx", "setz    al", "cmp     r15d, 1", "lea     rax, [rbp+rax+1]", "mov     [rsp+0C8h+from_block_size], rax", "jz      loc_6810"], ["mov~ecx,[rsp+0]", "add~rbp,0", "xor~eax,eax", "fdivrp~<TAG>,<TAG>", "test~ecx,ecx", "setz~al", "cmp~r15d,0", "lea~rax,[rbp+0]", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 57, 0, 0, 4, 1, 1, 6, 13, 0.01437908496732026, ["fild    [rsp+0C8h+base]", "xor     ebx, ebx", "fld     st", "jmp     short loc_6264"], ["fild~<TAG>,[rsp+0]", "xor~ebx,ebx", "fld~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 25, 1, 1, 11, 0, 2, 13, -1, 0.006808278867102396, ["mov     eax, r14d", "mov     r15, r8", "mov     opts, r12", "mov     rsi, [rsp+0C8h+from_block_size]; src", "sub     r15, r14", "mov     rdx, r14; n", "mov     rdi, r15; dest", "mov     ebx, dword ptr [rsp+0C8h+damt.value]", "mov     r12d, eax", "call    _memcpy", "jmp     loc_64AA"], ["mov~eax,r14d", "mov~r15,r8", "mov~opts,r12", "mov~rsi,[rsp+0]", "sub~r15,r14", "mov~rdx,r14", "mov~rdi,r15", "mov~ebx,[word ptr [rsp+0]", "mov~r12d,eax", "call~FOO", "jmp~FOO"]], [0, 0, 36, 0, 0, 2, 0, 0, 11, 8, 0.008714596949891067, ["fld     cs:flt_E1EC", "fmul    st(1), st"], ["fld~<TAG>,<TAG>", "fmul~<TAG>,<TAG>"]], [0, 0, 57, 0, 0, 2, 0, 0, 9, 13, 0.00010893246187363834, ["fstp    st(1)", "fxch    st(2)"], ["fstp~<TAG>,<TAG>", "fxch~<TAG>,<TAG>"]], [1, 0, 57, 0, 0, 2, 0, 1, 8, 12, 0.0015795206971677559, ["cmp     ebx, 8", "jnz     short loc_6260"], ["cmp~ebx,0", "jnz~FOO"]], [0, 0, 35, 0, 0, 3, 0, 1, 15, 7, 0.0, ["movzx   edx, word ptr [decimal_point+rax-2]", "mov     [p_0+rax-2], dx", "jmp     loc_6966"], ["movzx~edx,[ord ptr [decimal_point+0]", "mov~[p_0+0],dx", "jmp~FOO"]], [4, 0, 35, 1, 2, 17, 2, 3, 7, 7, 0.027668845315904137, ["sub     rsp, 10h", "lea     rcx, a0lf; \"%.0Lf\"", "mov     esi, 1", "mov     n_0, [rsp+0D8h+buf]", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "xor     eax, eax", "fstp    [rsp+0D8h+value.value]", "xor     ebp, ebp", "mov     rdi, rbx", "call    ___sprintf_chk", "mov     rdi, rbx; s", "mov     ebx, 0FFFFFFFFh", "call    _strlen", "pop     rsi", "pop     rdi", "mov     decimal_point, rax", "jmp     short loc_6480"], ["sub~rsp,0", "lea~rcx,<TAG>", "mov~esi,0", "mov~n_0,[rsp+0]", "mov~rdx,0", "xor~eax,eax", "fstp~<TAG>,<TAG>", "xor~ebp,ebp", "mov~rdi,rbx", "call~FOO", "mov~rdi,rbx", "mov~ebx,0", "call~FOO", "pop~rsi", "pop~rdi", "mov~decimal_point,rax", "jmp~FOO"]], [1, 0, 36, 1, 1, 7, 0, 2, 8, 8, 0.0, ["sub     rsp, 10h", "mov     edi, r15d; inexact_style", "fstp    [rsp+0D8h+value.value]; value", "call    adjust_value", "pop     r8", "pop     r9", "jmp     loc_642C"], ["sub~rsp,0", "mov~edi,r15d", "fstp~<TAG>,<TAG>", "call~FOO", "pop~r8", "pop~r9", "jmp~FOO"]], [1, 0, 57, 1, 0, 6, 0, 0, 7, 12, 0.019825708061002176, ["fld     st", "add     ebx, 1", "fmul    st, st(2)", "fxch    st(3)", "fucomi  st, st(3)", "jb      short loc_6280"], ["fld~<TAG>,<TAG>", "add~ebx,0", "fmul~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "jb~FOO"]], [0, 0, 35, 0, 0, 2, 0, 1, 12, 7, 0.017156862745098037, ["fstp    st", "jmp     short loc_6480"], ["fstp~<TAG>,<TAG>", "jmp~FOO"]], [1, 0, 43, 0, 0, 2, 1, 1, 11, 8, 0.022585330428467682, ["test    r12b, 8", "jz      loc_6470"], ["test~r12b,0", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 16, -1, 0.000326797385620915, ["jmp     loc_6527"], ["jmp~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 15, -1, 0.013997821350762527, ["test    eax, eax", "mov     rdx, [rsp+0C8h+psuffix]", "jnz     loc_651B"], ["test~eax,eax", "mov~rdx,[rsp+0]", "jnz~FOO"]], [0, 0, 59, 0, 0, 2, 0, 1, 16, 12, 0.007625272331154684, ["mov     r8, [rsp+0C8h+psuffix]", "jmp     loc_6757"], ["mov~r8,[rsp+0]", "jmp~FOO"]], [0, 0, 35, 0, 0, 2, 0, 0, 13, 7, 0.001906318082788671, ["fstp    st", "nop     word ptr [rax+rax+00h]"], ["fstp~<TAG>,<TAG>", "nop~[ord ptr [rax+0]"]], [1, 0, 41, 0, 0, 3, 0, 1, 12, 8, 0.00504720406681191, ["mov     rax, [rsp+0C8h+buf]", "cmp     byte ptr [rax+r14-1], 30h ; '0'", "jnz     loc_6478"], ["mov~rax,<TAG>", "cmp~[yte ptr [rax+0],0", "jnz~FOO"]], [0, 1, 14, 0, 0, 5, 0, 1, 14, -1, 0.0, ["mov     rcx, [rsp+0C8h+buf]", "lea     rdi, [rcx+288h]", "mov     byte ptr [rcx+287h], 20h ; ' '", "mov     [rsp+0C8h+psuffix], rdi", "jmp     loc_64D1"], ["mov~rcx,<TAG>", "lea~rdi,[rcx+0]", "mov~[yte ptr [rcx+0],<STR>", "mov~[rsp+0],rdi", "jmp~FOO"]], [1, 0, 15, 0, 0, 2, 1, 1, 13, -1, 0.07908496732026143, ["and     r12d, 40h", "jnz     loc_6668"], ["and~r12d,0", "jnz~FOO"]], [0, 0, 52, 0, 0, 2, 0, 0, 8, 11, 0.0196078431372549, ["fstp    st(2)", "fstp    st(2)"], ["fstp~<TAG>,<TAG>", "fstp~<TAG>,<TAG>"]], [1, 0, 69, 1, 0, 1, 0, 0, 15, 14, 0.01312636165577342, ["add     r9d, 30h ; '0'"], ["add~r9d,0"]], [0, 0, 73, 0, 0, 2, 1, 1, 14, 13, 0.022821350762527233, ["test    eax, eax", "jnz     loc_6716"], ["test~eax,eax", "jnz~FOO"]], [0, 0, 34, 3, 1, 9, 0, 1, 8, 6, 0.07129629629629629, ["mov     inexact_style, [rsp+0C8h+psuffix]", "mov     rsi, [rsp+0C8h+buf]; src", "mov     rdx, buflen; n", "sub     r15, buflen", "sub     buflen, nonintegerlen", "mov     rdi, p_0; dest", "call    _memmove", "mov     r8, r14", "add     r8, p_0"], ["mov~inexact_style,[rsp+0]", "mov~rsi,<TAG>", "mov~rdx,buflen", "sub~r15,buflen", "sub~buflen,nonintegerlen", "mov~rdi,p_0", "call~FOO", "mov~r8,r14", "add~r8,p_0"]], [3, 0, 35, 1, 2, 17, 2, 3, 12, 7, 0.01906318082788671, ["fdivp   st(1), st", "sub     rsp, 10h", "lea     rcx, a0lf; \"%.0Lf\"", "mov     r14, [rsp+0D8h+buf]", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "xor     eax, eax", "xor     ebp, ebp", "mov     rdi, r14", "fstp    [rsp+0D8h+value.value]", "call    ___sprintf_chk", "mov     rdi, r14; s", "call    _strlen", "pop     r10", "mov     r14, rax", "pop     r11", "jmp     loc_6480"], ["fdivp~<TAG>,<TAG>", "sub~rsp,0", "lea~rcx,<TAG>", "mov~r14,[rsp+0]", "mov~rdx,0", "mov~esi,0", "xor~eax,eax", "xor~ebp,ebp", "mov~rdi,r14", "fstp~<TAG>,<TAG>", "call~FOO", "mov~rdi,r14", "call~FOO", "pop~r10", "mov~r14,rax", "pop~r11", "jmp~FOO"]], [0, 0, 36, 0, 0, 1, 0, 1, 14, 8, 0.0010348583877995642, ["jmp     loc_6863"], ["jmp~FOO"]], [0, 0, 37, 0, 0, 3, 0, 0, 14, 8, 0.004738562091503268, ["fld     cs:tbyte_E1F0", "fucomip st, st(2)", "jbe     short loc_6863"], ["fld~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "jbe~FOO"]], [1, 0, 36, 1, 1, 9, 0, 2, 15, 8, 0.0, ["fstp    dword ptr [rsp+0C8h+from_block_size]", "sub     rsp, 10h", "mov     edi, r15d; inexact_style", "fstp    [rsp+0D8h+value.value]; value", "call    adjust_value", "pop     rbp", "pop     r14", "fld     dword ptr [rsp+0C8h+from_block_size]", "jmp     short loc_6863"], ["fstp~<TAG>,[word ptr [rsp+0]", "sub~rsp,0", "mov~edi,r15d", "fstp~<TAG>,<TAG>", "call~FOO", "pop~rbp", "pop~r14", "fld~<TAG>,[word ptr [rsp+0]", "jmp~FOO"]], [0, 0, 52, 0, 0, 3, 0, 1, 9, 11, 0.002832244008714597, ["fstp    st(2)", "fstp    st(2)", "jmp     short loc_6284"], ["fstp~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "jmp~FOO"]], [1, 0, 33, 0, 0, 2, 1, 1, 9, 5, 0.18513071895424837, ["test    r12b, 4", "jnz     loc_6588"], ["test~r12b,0", "jnz~FOO"]], [0, 0, 34, 0, 0, 1, 0, 1, 9, 6, 0.0898148148148148, ["jmp     do_grouping"], ["jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 11, 6, 0.024074074074074074, ["lea     inexact_style, [integerlim_0-1]", "mov     byte ptr [integerlim_0-1], 31h ; '1'", "jmp     do_grouping"], ["lea~inexact_style,[integerlim_0-1]+0]", "mov~[yte ptr [integerlim_0-1]+0],0", "jmp~FOO"]], [3, 0, 38, 3, 0, 14, 2, 0, 12, 7, 0.01056644880174292, ["mov     rax, [decimal_point]", "lea     rcx, [p_0+8]", "and     rcx, 0FFFFFFFFFFFFFFF8h", "mov     [p_0], rax", "mov     eax, ebp", "mov     rdx, [decimal_point+rax-8]", "mov     [p_0+rax-8], rdx", "mov     rax, p_0", "sub     rax, rcx", "sub     decimal_point, rax", "add     eax, ebp", "and     eax, 0FFFFFFF8h", "cmp     eax, 8", "jb      loc_6966"], ["mov~rax,<TAG>", "lea~rcx,[p_0+0]", "and~rcx,0", "mov~<TAG>,rax", "mov~eax,ebp", "mov~rdx,[decimal_point+0]", "mov~[p_0+0],rdx", "mov~rax,p_0", "sub~rax,rcx", "sub~decimal_point,rax", "add~eax,ebp", "and~eax,0", "cmp~eax,0", "jb~FOO"]], [0, 1, 24, 0, 0, 2, 1, 1, 10, -1, 0.14640522875816994, ["test    r12b, 80h", "jz      short loc_6527"], ["test~r12b,<STR>", "jz~FOO"]], [0, 0, 25, 0, 0, 4, 0, 1, 14, 0, 0.0013616557734204792, ["mov     ebx, dword ptr [rsp+0C8h+damt.value]", "mov     r15, rax", "mov     r12d, r14d", "jmp     loc_64AA"], ["mov~ebx,[word ptr [rsp+0]", "mov~r15,rax", "mov~r12d,r14d", "jmp~FOO"]], [0, 0, 48, 0, 0, 3, 0, 1, 10, 11, 0.005519244734931007, ["fld     cs:tbyte_E1F0", "fucomip st, st(1)", "ja      loc_6688"], ["fld~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "ja~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 11, -1, 0.12309368191721133, ["cmp     ebx, 0FFFFFFFFh", "jz      loc_67D0"], ["cmp~ebx,0", "jz~FOO"]], [0, 0, 46, 0, 0, 1, 0, 0, 11, 10, 0.0029774872912127818, ["fld     st"], ["fld~<TAG>,<TAG>"]], [1, 0, 39, 0, 0, 4, 0, 1, 13, 9, 0.002541757443718228, ["fld     cs:flt_E1EC", "cmp     r15d, 1", "fmul    st(1), st", "jnz     loc_68B0"], ["fld~<TAG>,<TAG>", "cmp~r15d,0", "fmul~<TAG>,<TAG>", "jnz~FOO"]], [1, 0, 37, 1, 0, 6, 0, 0, 14, 8, 0.004901960784313725, ["mov     esi, edx", "add     edx, 8", "mov     rdi, [r14+rsi]", "cmp     edx, eax", "mov     [rcx+rsi], rdi", "jb      short loc_6AB0"], ["mov~esi,edx", "add~edx,0", "mov~rdi,<TAG>", "cmp~edx,eax", "mov~<TAG>,rdi", "jb~FOO"]], [1, 0, 37, 0, 0, 2, 2, 0, 13, 9, 0.0058823529411764705, ["and     eax, 0FFFFFFF8h", "xor     edx, edx"], ["and~eax,0", "xor~edx,edx"]], [0, 0, 35, 0, 0, 1, 0, 1, 15, 7, 0.003812636165577342, ["jmp     loc_6966"], ["jmp~FOO"]], [1, 0, 16, 0, 0, 5, 2, 1, 12, -1, 0.08611111111111111, ["mov     eax, r12d", "and     eax, 100h", "mov     ecx, eax", "or      ecx, ebx", "jz      short loc_6527"], ["mov~eax,r12d", "and~eax,0", "mov~ecx,eax", "or~ecx,ebx", "jz~FOO"]], [0, 0, 17, 0, 0, 2, 1, 1, 13, -1, 0.0009259259259259259, ["xor     ebx, ebx", "jmp     loc_64B9"], ["xor~ebx,ebx", "jmp~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 14, -1, 0.0673202614379085, ["test    ebx, ebx", "jz      loc_6B06"], ["test~ebx,ebx", "jz~FOO"]], [0, 0, 59, 0, 0, 5, 0, 1, 18, 12, 0.0016067538126361654, ["mov     edx, [decimal_point]", "mov     [p_0], edx", "mov     edx, [decimal_point+rax-4]", "mov     [p_0+rax-4], edx", "jmp     loc_6757"], ["mov~edx,<TAG>", "mov~<TAG>,edx", "mov~edx,[decimal_point+0]", "mov~[p_0+0],edx", "jmp~FOO"]], [1, 0, 63, 0, 0, 2, 1, 1, 17, 13, 0.006535947712418301, ["test    bpl, 4", "jnz     loc_6AC6"], ["test~bpl,0", "jnz~FOO"]], [1, 0, 4, 0, 0, 3, 0, 1, 18, -1, 0.0, ["lea     psuffix_0, [rdi+2]", "mov     byte ptr [rdi+1], 69h ; 'i'", "jmp     loc_651B"], ["lea~psuffix_0,[rdi+0]", "mov~[yte ptr [rdi+0],0", "jmp~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 17, -1, 0.006998910675381264, ["mov     r8d, [rsp+0C8h+var_98]", "test    r8d, r8d", "jnz     loc_66D0"], ["mov~r8d,[rsp+0]", "test~r8d,r8d", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 12, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 2, 0, 0, 6, 1, 1, 11, -1, 0.014596949891067537, ["mov     rax, [rsp+0C8h+psuffix]", "mov     rcx, [rsp+0C8h+var_40]", "xor     rcx, fs:28h", "mov     byte ptr [rax], 0", "mov     rax, p_0", "jnz     loc_6ADB"], ["mov~rax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~<TAG>,0", "mov~rax,p_0", "jnz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 15, -1, 0.040522875816993466, ["cmp     ebx, 1", "jnz     short loc_64EC"], ["cmp~ebx,0", "jnz~FOO"]], [1, 0, 83, 0, 0, 2, 0, 1, 10, 12, 0.030555555555555555, ["cmp     r10, 9", "ja      loc_6978"], ["cmp~r10,0", "ja~FOO"]], [1, 0, 89, 1, 0, 3, 0, 1, 9, 13, 0.036274509803921565, ["add     ebx, 1", "cmp     r8, r10", "ja      loc_66DD"], ["add~ebx,0", "cmp~r8,r10", "ja~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 16, -1, 0.006835511982570806, ["mov     r9d, [rsp+0C8h+var_98]", "test    r9d, r9d", "jz      loc_6930"], ["mov~r9d,[rsp+0]", "test~r9d,r9d", "jz~FOO"]], [0, 0, 59, 0, 0, 3, 0, 1, 20, 12, 0.0, ["movzx   edx, word ptr [decimal_point+rax-2]", "mov     [p_0+rax-2], dx", "jmp     loc_6757"], ["movzx~edx,[ord ptr [decimal_point+0]", "mov~[p_0+0],dx", "jmp~FOO"]], [1, 0, 60, 0, 0, 4, 1, 1, 19, 12, 0.0017429193899782135, ["movzx   edx, byte ptr [decimal_point]", "test    al, 2", "mov     [p_0], dl", "jnz     loc_6AE0"], ["movzx~edx,<TAG>", "test~al,0", "mov~<TAG>,dl", "jnz~FOO"]], [0, 0, 58, 0, 0, 2, 0, 1, 11, 11, 0.022113289760348584, ["mov     r8, [rsp+0C8h+psuffix]", "jmp     loc_6760"], ["mov~r8,[rsp+0]", "jmp~FOO"]], [2, 0, 54, 2, 0, 9, 1, 1, 6, 10, 0.041666666666666664, ["mov     rax, amt", "movsxd  rounding, edi", "and     eax, 1", "add     rax, rounding", "setnz   al", "movzx   eax, al", "add     r9d, eax", "cmp     r9d, 5", "jg      loc_6776"], ["mov~rax,amt", "movsxd~rounding,edi", "and~eax,0", "add~rax,rounding", "setnz~al", "movzx~eax,al", "add~r9d,eax", "cmp~r9d,0", "jg~FOO"]], [1, 0, 57, 0, 0, 2, 0, 1, 5, 10, 0.12826797385620914, ["cmp     r15d, 1", "jz      loc_68E0"], ["cmp~r15d,0", "jz~FOO"]], [1, 0, 46, 1, 1, 10, 0, 2, 11, 10, 0.0029774872912127818, ["sub     rsp, 10h", "mov     edi, r15d; inexact_style", "fld     st", "fstp    [rsp+0D8h+value.value]; value", "fstp    [rsp+0D8h+damt.value]", "call    adjust_value", "pop     rax", "pop     rdx", "fld     [rsp+0C8h+damt.value]", "jmp     loc_62B9"], ["sub~rsp,0", "mov~edi,r15d", "fld~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "fstp~<TAG>,[rsp+0]", "call~FOO", "pop~rax", "pop~rdx", "fld~<TAG>,[rsp+0]", "jmp~FOO"]], [0, 0, 79, 0, 0, 5, 3, 0, 12, 15, 0.012445533769063181, ["test    r15d, r15d", "setz    dl", "test    edi, edi", "setnle  r8b", "and     edx, r8d"], ["test~r15d,r15d", "setz~dl", "test~edi,edi", "setnle~r8b", "and~edx,r8d"]], [0, 0, 37, 0, 0, 1, 0, 1, 7, 9, 0.0010076252723311546, ["jmp     loc_6790"], ["jmp~FOO"]], [0, 0, 35, 0, 0, 5, 0, 1, 13, 7, 0.0009531590413943355, ["mov     edx, [decimal_point]", "mov     [p_0], edx", "mov     edx, [decimal_point+rax-4]", "mov     [p_0+rax-4], edx", "jmp     loc_6966"], ["mov~edx,<TAG>", "mov~<TAG>,edx", "mov~edx,[decimal_point+0]", "mov~[p_0+0],edx", "jmp~FOO"]], [1, 0, 39, 0, 0, 2, 1, 1, 12, 8, 0.011546840958605665, ["and     ebp, 4", "jnz     loc_6AF1"], ["and~ebp,0", "jnz~FOO"]], [0, 0, 78, 0, 0, 2, 1, 1, 13, 14, 0.032352941176470584, ["test    dl, dl", "jz      loc_6989"], ["test~dl,dl", "jz~FOO"]], [0, 0, 7, 0, 0, 8, 1, 1, 16, -1, 0.02080610021786492, ["lea     rcx, power_letter", "movsxd  exponent_0, ebx", "mov     rdi, [rsp+0C8h+psuffix]", "test    eax, eax", "movzx   ecx, byte ptr [rcx+exponent_0]", "lea     rdx, [rdi+1]", "mov     [rdi], cl", "jz      loc_6944"], ["lea~rcx,<TAG>", "movsxd~exponent_0,ebx", "mov~rdi,[rsp+0]", "test~eax,eax", "movzx~ecx,<TAG>", "lea~rdx,[rdi+0]", "mov~<TAG>,cl", "jz~FOO"]], [1, 0, 93, 1, 0, 4, 0, 1, 4, 12, 0.0057461873638344225, ["setb    dil", "movzx   edi, dil", "add     edi, 2", "jmp     use_integer_arithmetic"], ["setb~dil", "movzx~edi,dil", "add~edi,0", "jmp~FOO"]], [0, 0, 95, 4, 0, 13, 2, 0, 3, 13, 0.006753812636165577, ["mov     divisor, n_0", "xor     edx, edx", "div     divisor", "mov     n_0, rax", "lea     rax, [rdx+rdx*4]", "xor     edx, edx", "mov     rsi, rbx", "add     rax, rax", "div     divisor", "add     rdx, rdx", "mov     r9d, eax", "cmp     divisor, r2", "jbe     loc_6908"], ["mov~divisor,n_0", "xor~edx,edx", "div~,divisor", "mov~n_0,rax", "lea~rax,<TAG>", "xor~edx,edx", "mov~rsi,rbx", "add~rax,rax", "div~,divisor", "add~rdx,rdx", "mov~r9d,eax", "cmp~divisor,r2", "jbe~FOO"]], [0, 0, 51, 0, 0, 3, 0, 1, 8, 9, 0.03736383442265795, ["mov     eax, [rsp+0C8h+base]", "cmp     rax, amt", "jz      loc_6950"], ["mov~eax,[rsp+0]", "cmp~rax,amt", "jz~FOO"]], [1, 0, 52, 1, 0, 3, 1, 1, 7, 9, 0.04022331154684096, ["add     amt, 1", "test    ecx, ecx", "jz      short loc_6790"], ["add~amt,0", "test~ecx,ecx", "jz~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 16, -1, 0.0007897603485838779, ["lea     rax, [psuffix_0+1]", "mov     byte ptr [psuffix_0], 42h ; 'B'", "mov     [rsp+0C8h+psuffix], rax"], ["lea~rax,[psuffix_0+0]", "mov~<TAG>,0", "mov~[rsp+0],rax"]], [1, 0, 5, 0, 0, 5, 1, 1, 17, -1, 0.00021786492374727668, ["mov     exponent_0, [rsp+0C8h+psuffix]", "test    eax, eax", "lea     rdx, [rbx+1]", "mov     byte ptr [rbx], 6Bh ; 'k'", "jnz     loc_651B"], ["mov~exponent_0,[rsp+0]", "test~eax,eax", "lea~rdx,[rbx+0]", "mov~<TAG>,0", "jnz~FOO"]], [0, 0, 58, 0, 0, 3, 1, 1, 6, 11, 0.0031590413943355117, ["mov     r8, [rsp+0C8h+psuffix]", "xor     ebx, ebx", "jmp     loc_6760"], ["mov~r8,[rsp+0]", "xor~ebx,ebx", "jmp~FOO"]], [0, 0, 91, 0, 0, 4, 0, 1, 5, 12, 0.017973856209150325, ["mov     r8d, [rsp+0C8h+base]", "cmp     r8, amt", "mov     r11, r8", "ja      loc_6920"], ["mov~r8d,[rsp+0]", "cmp~r8,amt", "mov~r11,r8", "ja~FOO"]], [1, 0, 68, 1, 0, 7, 0, 0, 16, 13, 0.02080610021786492, ["mov     rax, [rsp+0C8h+buf]", "lea     r8, [rax+286h]", "mov     [rax+286h], r9b", "mov     eax, ebp", "sub     p_0, rbp", "cmp     ebp, 8", "jnb     loc_69C1"], ["mov~rax,<TAG>", "lea~r8,[rax+0]", "mov~[rax+0],r9b", "mov~eax,ebp", "sub~p_0,rbp", "cmp~ebp,0", "jnb~FOO"]], [1, 0, 69, 0, 0, 2, 0, 1, 16, 14, 0.0017429193899782135, ["mov     r9d, 30h ; '0'", "jmp     loc_671A"], ["mov~r9d,0", "jmp~FOO"]], [10, 1, 136, 4, 3, 52, 4, 4, 0, 14, 0.0, ["push    r15", "push    r14", "mov     eax, edx", "push    r13", "push    r12", "mov     r15d, edx", "push    rbp", "push    rbx", "and     eax, 20h", "and     r15d, 3", "mov     r12d, edx", "mov     rbx, n_0", "sub     rsp, 98h", "mov     [rsp+0C8h+from_block_size], from_block_size_0", "mov     [rsp+0C8h+var_98], eax", "mov     from_block_size_0, fs:28h", "mov     [rsp+0C8h+var_40], from_block_size_0", "xor     ecx, ecx", "cmp     eax, 1", "mov     [rsp+0C8h+buf], buf_0", "mov     [rsp+0C8h+to_block_size], to_block_size_0", "sbb     eax, eax", "and     eax, 0FFFFFFE8h", "add     eax, 400h", "mov     [rsp+0C8h+base], eax", "call    _localeconv", "mov     r14, [rax]", "mov     r13, rax", "mov     rdi, r14; s", "call    _strlen", "mov     rcx, [l+10h]", "mov     l, [l+8]", "mov     rbp, rax", "sub     pointlen, 1", "mov     edx, 1", "cmp     rax, 10h", "lea     rax, asc_E189; \".\"", "mov     rdi, r13; s", "cmovnb  pointlen, rdx", "mov     [rsp+0C8h+grouping], rcx", "cmovnb  r14, rax", "call    _strlen", "cmp     rax, 11h", "lea     rax, aWrittenBySSAnd+1Bh; \"\"", "mov     rdi, [rsp+0C8h+to_block_size]", "mov     rcx, [rsp+0C8h+from_block_size]", "cmovnb  r13, rax", "mov     rax, [rsp+0C8h+buf]", "add     rax, 287h", "cmp     rdi, rcx", "mov     [rsp+0C8h+psuffix], rax", "ja      loc_6338"], ["push~r15", "push~r14", "mov~eax,edx", "push~r13", "push~r12", "mov~r15d,edx", "push~rbp", "push~rbx", "and~eax,<STR>", "and~r15d,0", "mov~r12d,edx", "mov~rbx,n_0", "sub~rsp,0", "mov~[rsp+0],from_block_size_0", "mov~[rsp+0],eax", "mov~from_block_size_0,<TAG>", "mov~[rsp+0],from_block_size_0", "xor~ecx,ecx", "cmp~eax,0", "mov~<TAG>,buf_0", "mov~[rsp+0],to_block_size_0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[rsp+0],eax", "call~FOO", "mov~r14,<TAG>", "mov~r13,rax", "mov~rdi,r14", "call~FOO", "mov~rcx,[l+0]", "mov~l,[l+0]", "mov~rbp,rax", "sub~pointlen,0", "mov~edx,0", "cmp~rax,0", "lea~rax,<TAG>", "mov~rdi,r13", "cmovnb~pointlen,rdx", "mov~[rsp+0],rcx", "cmovnb~r14,rax", "call~FOO", "cmp~rax,0", "lea~rax,<TAG>", "mov~rdi,[rsp+0]", "mov~rcx,[rsp+0]", "cmovnb~r13,rax", "mov~rax,<TAG>", "add~rax,0", "cmp~rdi,rcx", "mov~[rsp+0],rax", "ja~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 17, -1, 0.0005174291938997821, ["mov     [rsp+0C8h+psuffix], psuffix_0", "jmp     loc_6527"], ["mov~[rsp+0],psuffix_0", "jmp~FOO"]], [0, 0, 61, 0, 0, 2, 1, 1, 18, 12, 0.004983660130718954, ["test    eax, eax", "jz      short loc_6757"], ["test~eax,eax", "jz~FOO"]], [1, 0, 49, 0, 0, 2, 0, 1, 9, 8, 0.03461328976034858, ["cmp     ebx, 8", "jz      loc_6790"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 12, -1, 0.0, ["add     rsp, 98h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 58, 0, 0, 3, 2, 0, 17, 11, 0.04738562091503268, ["xor     edi, edi", "xor     r9d, r9d", "nop     dword ptr [rax+00h]"], ["xor~edi,edi", "xor~r9d,r9d", "nop~[word ptr [rax+0]"]], [3, 0, 62, 3, 0, 15, 2, 0, 17, 12, 0.014705882352941176, ["mov     rax, [decimal_point]", "mov     r9, decimal_point", "mov     [p_0], rax", "mov     eax, ebp", "mov     rdx, [decimal_point+rax-8]", "mov     [p_0+rax-8], rdx", "lea     rdx, [p_0+8]", "mov     rax, p_0", "and     rdx, 0FFFFFFFFFFFFFFF8h", "sub     rax, rdx", "sub     r9, rax", "add     eax, ebp", "and     eax, 0FFFFFFF8h", "cmp     eax, 8", "jb      loc_6757"], ["mov~rax,<TAG>", "mov~r9,decimal_point", "mov~<TAG>,rax", "mov~eax,ebp", "mov~rdx,[decimal_point+0]", "mov~[p_0+0],rdx", "lea~rdx,[p_0+0]", "mov~rax,p_0", "and~rdx,0", "sub~rax,rdx", "sub~r9,rax", "add~eax,ebp", "and~eax,0", "cmp~eax,0", "jb~FOO"]], [2, 0, 92, 0, 0, 5, 1, 1, 4, 11, 0.03676470588235294, ["mov     ecx, r12d", "mov     r8, [rsp+0C8h+psuffix]", "mov     ebx, 0FFFFFFFFh", "and     ecx, 10h", "jz      loc_6760"], ["mov~ecx,r12d", "mov~r8,[rsp+0]", "mov~ebx,0", "and~ecx,0", "jz~FOO"]], [0, 0, 58, 0, 0, 3, 1, 1, 16, 11, 0.022113289760348584, ["mov     r8, [rsp+0C8h+psuffix]", "xor     r9d, r9d", "jmp     loc_6760"], ["mov~r8,[rsp+0]", "xor~r9d,r9d", "jmp~FOO"]], [0, 0, 54, 0, 0, 2, 1, 1, 6, 9, 0.08480392156862746, ["test    r15d, r15d", "jnz     short loc_6790"], ["test~r15d,r15d", "jnz~FOO"]], [0, 0, 53, 1, 0, 3, 1, 1, 7, 9, 0.0008714596949891067, ["add     edi, r9d", "test    edi, edi", "jle     short loc_6790"], ["add~edi,r9d", "test~edi,edi", "jle~FOO"]], [0, 0, 93, 0, 0, 3, 2, 1, 3, 12, 0.01056644880174292, ["xor     edi, edi", "xor     r9d, r9d", "jmp     use_integer_arithmetic"], ["xor~edi,edi", "xor~r9d,r9d", "jmp~FOO"]], [1, 0, 22, 0, 0, 3, 0, 0, 12, -1, 0.03104575163398693, ["mov     rcx, [rsp+0C8h+to_block_size]", "cmp     rcx, 1", "jbe     loc_6982"], ["mov~rcx,[rsp+0]", "cmp~rcx,0", "jbe~FOO"]], [0, 0, 93, 0, 0, 3, 2, 0, 4, 12, 0.0057461873638344225, ["xor     edi, edi", "test    r2, r2", "setnz   dil"], ["xor~edi,edi", "test~r2,r2", "setnz~dil"]], [0, 0, 37, 0, 0, 1, 0, 0, 9, 9, 8.169934640522875e-05, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 71, 0, 0, 2, 1, 1, 15, 12, 0.022930283224400872, ["test    r12b, 8", "jnz     short loc_69B4"], ["test~r12b,0", "jnz~FOO"]], [1, 0, 36, 0, 0, 3, 0, 0, 7, 8, 0.09188453159041395, ["mov     inexact_style, integerlim_0", "mov     rcx, 0CCCCCCCCCCCCCCCDh", "nop     dword ptr [rax]"], ["mov~inexact_style,integerlim_0", "mov~rcx,0", "nop~<TAG>"]], [0, 0, 89, 0, 0, 3, 1, 0, 8, 14, 0.01377995642701525, ["test    edi, edi", "setnz   dil", "movzx   edi, dil"], ["test~edi,edi", "setnz~dil", "movzx~edi,dil"]], [3, 0, 36, 5, 0, 12, 1, 1, 8, 7, 0.09090413943355119, ["mov     rax, amt", "sub     p_0, 1", "mul     rcx", "shr     rdx, 3", "lea     rax, [rdx+rdx*4]", "add     rax, rax", "sub     amt, rax", "add     esi, 30h ; '0'", "test    rdx, rdx", "mov     [p_0], sil", "mov     rsi, rdx", "jnz     short loc_67A0"], ["mov~rax,amt", "sub~p_0,0", "mul~,rcx", "shr~rdx,0", "lea~rax,<TAG>", "add~rax,rax", "sub~amt,rax", "add~esi,0", "test~rdx,rdx", "mov~<TAG>,sil", "mov~rsi,rdx", "jnz~FOO"]], [2, 0, 20, 0, 0, 3, 0, 0, 13, -1, 0.018790849673202614, ["mov     edx, [rsp+0C8h+base]", "mov     ebx, 1", "mov     eax, 1"], ["mov~edx,[rsp+0]", "mov~ebx,0", "mov~eax,0"]]], "func_feature": [21, 82, 117, 3, 137, 209, 5, 652, 0.02032, 9, 61], "succs": [[11, 134], [0], [0, 97], [4, 5], [82, 3], [82], [74, 27], [43, 6], [8, 10], [8], [122], [93], [17, 31], [12, 14], [108, 12], [128, 12], [12, 15], [31], [66], [18, 52], [26, 55], [20, 61], [105], [101, 22], [48, 28], [24, 42], [132], [29], [48, 49], [33, 7], [29], [32, 36], [36], [7], [72, 104], [34, 71], [25, 37], [25], [71, 47], [38, 71], [52, 44], [40, 75], [50], [73], [64], [50], [68, 45], [71], [63], [48], [60, 46], [63], [57, 51], [90], [53, 111], [122], [63], [56, 78], [84], [58, 84], [41], [115], [132, 61], [69], [63], [64], [64, 67], [64], [41], [73, 30], [69], [69], [80, 71], [90, 76], [73], [100, 77], [129, 82], [19], [65, 66], [81, 79], [79], [71], [90, 59], [82], [91, 54], [122], [85, 119], [111], [111, 87], [], [89, 121], [106, 94], [97, 23], [2, 92], [112, 106], [122], [122, 95], [99], [110, 102], [98, 126], [19], [105], [133], [71], [39, 103], [21, 62], [88, 118], [124], [130, 107], [120, 131], [109, 133], [90], [118, 111], [99], [113, 1], [123, 86], [115], [16, 13], [90], [96, 122], [35, 133], [], [99], [9, 122], [114, 99], [99], [133, 127], [133, 110], [124], [136, 83], [124], [133], [116, 125], [135], [93], [70, 135], [4]], "fname": "human_readable", "n_num": 137}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 26, 0, 1, 5, 1, 2, 0, 0, 0.005698005698005698, ["lea     rdi, aBlockSize; \"BLOCK_SIZE\"", "call    _getenv", "test    rax, rax", "mov     spec, rax", "jnz     loc_6B5C"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~spec,rax", "jnz~FOO"]], [1, 0, 27, 1, 0, 13, 2, 1, 0, 5, 0.0, ["push    r13", "push    r12", "mov     r13, opts", "push    rbp", "push    rbx", "mov     r12, block_size", "mov     rbx, spec", "sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+38h+var_30], rax", "xor     eax, eax", "test    spec, spec", "jz      loc_6C70"], ["push~r13", "push~r12", "mov~r13,opts", "push~rbp", "push~rbx", "mov~r12,block_size", "mov~rbx,spec", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~spec,spec", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 0, 1, 7, 5, 0.007122507122507123, ["cmp     rbx, rcx", "jz      loc_6CD0"], ["cmp~rbx,rcx", "jz~FOO"]], [2, 0, 13, 1, 0, 5, 0, 1, 6, 4, 0.029914529914529916, ["add     rbx, 1", "movzx   edi, byte ptr [rbx]", "lea     edx, [rdi-30h]", "cmp     dl, 9", "ja      short loc_6C00"], ["add~rbx,0", "movzx~edi,<TAG>", "lea~edx,[rdi-30h]+0]", "cmp~dl,0", "ja~FOO"]], [0, 1, 7, 0, 0, 1, 1, 0, 8, 5, 0.01851851851851852, ["or      bpl, 80h"], ["or~bpl,<STR>"]], [1, 0, 10, 0, 0, 2, 0, 1, 7, 5, 0.07692307692307693, ["cmp     byte ptr [rcx-1], 42h ; 'B'", "jz      short loc_6CE8"], ["cmp~[yte ptr [rcx-1]+0],0", "jz~FOO"]], [1, 0, 19, 0, 1, 7, 1, 2, 2, 3, 0.12820512820512822, ["lea     rdx, block_size_opts; vallist", "lea     rsi, block_size_args; arglist", "mov     ecx, 4; valsize", "mov     rdi, rbx; arg", "call    argmatch", "test    eax, eax", "js      short loc_6BC8"], ["lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~ecx,0", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 21, 0, 0, 3, 1, 1, 1, 4, 0.08262108262108263, ["xor     ebp, ebp", "cmp     byte ptr [rbx], 27h ; '''", "jnz     short loc_6B6C"], ["xor~ebp,ebp", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 20, 1, 0, 2, 0, 0, 2, 4, 0.0, ["add     rbx, 1", "mov     ebp, 4"], ["add~rbx,0", "mov~ebp,0"]], [2, 0, 3, 0, 0, 4, 1, 1, 4, 2, 0.005698005698005698, ["mov     qword ptr [block_size], 400h", "xor     eax, eax", "mov     dword ptr [opts+0], 0", "jmp     loc_6BA5"], ["mov~<TAG>,0", "xor~eax,eax", "mov~[word ptr [opts+0],0", "jmp~FOO"]], [0, 0, 5, 0, 1, 4, 1, 2, 3, 3, 0.01566951566951567, ["lea     rdi, name; \"POSIXLY_CORRECT\"", "call    _getenv", "test    rax, rax", "jz      short loc_6CFA"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 4, 1, 0.07122507122507123, ["mov     rcx, [rsp+38h+var_30]", "xor     rcx, fs:28h", "jnz     loc_6D11"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 1, 3, 0, 0, 4, 1, 1, 4, 2, 0.005698005698005698, ["mov     qword ptr [block_size], 200h", "xor     eax, eax", "mov     dword ptr [opts+0], 0", "jmp     loc_6BA5"], ["mov~<TAG>,<STR>", "xor~eax,eax", "mov~[word ptr [opts+0],0", "jmp~FOO"]], [0, 0, 14, 0, 0, 3, 0, 1, 5, 5, 0.09116809116809117, ["mov     rcx, [rsp+38h+var_38]", "cmp     rbx, rcx", "jnz     short loc_6C09"], ["mov~rcx,<TAG>", "cmp~rbx,rcx", "jnz~FOO"]], [0, 0, 25, 0, 1, 5, 1, 2, 2, 4, 0.011396011396011397, ["lea     rdi, aBlocksize; \"BLOCKSIZE\"", "call    _getenv", "test    rax, rax", "mov     rbx, rax", "jnz     loc_6B5C"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jnz~FOO"]], [0, 0, 5, 0, 0, 3, 0, 1, 5, 3, 0.07122507122507123, ["mov     rdx, [block_size]", "mov     [opts+0], ebp", "jmp     short loc_6C34"], ["mov~rdx,<TAG>", "mov~[opts+0],ebp", "jmp~FOO"]], [1, 0, 15, 0, 0, 4, 0, 0, 4, 4, 0.09971509971509972, ["movzx   esi, byte ptr [rbx]", "lea     edx, [rsi-30h]", "cmp     dl, 9", "jbe     short loc_6C18"], ["movzx~esi,<TAG>", "lea~edx,[rsi-30h]+0]", "cmp~dl,0", "jbe~FOO"]], [0, 1, 6, 0, 0, 2, 1, 1, 9, 4, 0.017094017094017096, ["or      ebp, 20h", "jmp     loc_6C18"], ["or~ebp,<STR>", "jmp~FOO"]], [1, 1, 8, 0, 0, 3, 1, 1, 8, 4, 0.03561253561253561, ["or      ebp, 180h", "cmp     byte ptr [rcx-2], 69h ; 'i'", "jnz     loc_6C18"], ["or~ebp,<STR>", "cmp~[yte ptr [rcx-2]+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 6, 2, 0, 3, 2, 0.01851851851851852, ["lea     rdx, block_size_opts", "cdqe", "mov     qword ptr [block_size], 1", "or      ebp, [rdx+rax*4]", "xor     eax, eax", "mov     [opts+0], ebp"], ["lea~rdx,<TAG>", "cdqe~", "mov~<TAG>,0", "or~ebp,<TAG>", "xor~eax,eax", "mov~[opts+0],ebp"]], [1, 0, 5, 0, 0, 2, 0, 0, 4, 3, 0.02421652421652422, ["mov     rdx, [block_size]", "mov     dword ptr [opts+0], 0"], ["mov~rdx,<TAG>", "mov~[word ptr [opts+0],0"]], [0, 0, 17, 0, 1, 8, 2, 2, 3, 4, 0.11965811965811966, ["lea     r8, aEeggkkmmppttyy; \"eEgGkKmMpPtTyYzZ0\"", "xor     edx, edx; strtol_base", "mov     rsi, rsp; ptr", "mov     rcx, block_size; val", "mov     rdi, rbx; s", "call    xstrtoumax", "test    eax, eax", "jnz     short loc_6C28"], ["lea~r8,<TAG>", "xor~edx,edx", "mov~rsi,rsp", "mov~rcx,block_size", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 5, 2, 0.08262108262108263, ["test    rdx, rdx", "jnz     loc_6BA5"], ["test~rdx,rdx", "jnz~FOO"]], [2, 2, 3, 1, 1, 9, 1, 2, 6, 2, 0.0, ["lea     rdi, name; \"POSIXLY_CORRECT\"", "call    _getenv", "cmp     rax, 1", "sbb     rax, rax", "and     eax, 200h", "add     rax, 200h", "mov     [block_size], rax", "mov     eax, 4", "jmp     loc_6BA5"], ["lea~rdi,<TAG>", "call~FOO", "cmp~rax,0", "sbb~rax,rax", "and~eax,<STR>", "add~rax,<STR>", "mov~<TAG>,rax", "mov~eax,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 5, -1, 0.0, ["add     rsp, 18h", "pop     rbx", "pop     rbp", "pop     block_size", "pop     opts", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~block_size", "pop~opts", "retn"]], [0, 0, 11, 0, 0, 1, 0, 1, 6, 6, 0.06410256410256411, ["jmp     loc_6CD0"], ["jmp~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 9, 5, 0.0014245014245014246, ["jmp     short loc_6CDA"], ["jmp~FOO"]]], "func_feature": [7, 19, 28, 2, 28, 41, 0, 111, 0.03872, 7, 5], "succs": [[7, 15], [0, 7], [3, 5], [16, 2], [18], [19, 4], [20, 22], [8, 6], [6], [12], [9, 13], [], [25, 11], [12], [26, 3], [10, 7], [23], [16, 14], [16], [16, 27], [12], [23], [17, 21], [24, 12], [12], [], [5], [18]], "fname": "human_options", "n_num": 28}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[2, 0, 0, 0, 2, 14, 1, 2, 0, 0, 0.0, ["lea     c, [rsp+108h+arg_0]", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "lea     r8, [rsp+108h+authors]; authors", "mov     rcx, version; version", "mov     rdx, package; package", "mov     rsi, command_name; command_name", "mov     [rsp+108h+authors.overflow_arg_area], rax", "lea     rax, [rsp+108h+var_D8]", "mov     [rsp+108h+authors.gp_offset], 30h ; '0'", "mov     [rsp+108h+authors.fp_offset], 30h ; '0'", "mov     [rsp+108h+authors.reg_save_area], rax", "call    version_etc_va", "xor     edi, edi; status", "call    _exit"], ["lea~c,[rsp+0]", "mov~rdi,<TAG>", "lea~r8,[rsp+0]", "mov~rcx,version", "mov~rdx,package", "mov~rsi,command_name", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "call~FOO", "xor~edi,edi", "call~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 4, 2, 0.07222222222222223, ["cmp     eax, 76h ; 'v'", "jnz     short loc_6D99"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 0E8h", "pop     saved_opterr", "pop     command_name", "pop     package", "pop     version", "retn"], ["add~rsp,0", "pop~saved_opterr", "pop~command_name", "pop~package", "pop~version", "retn"]], [1, 0, 2, 0, 0, 5, 1, 1, 2, 1, 0.15555555555555556, ["mov     rax, [rsp+108h+var_E0]", "xor     rax, fs:28h", "mov     cs:opterr@@GLIBC_2_2_5, ebx", "mov     cs:optind@@GLIBC_2_2_5, 0", "jnz     loc_6E5A"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "mov~<TAG>,ebx", "mov~<TAG>,0", "jnz~FOO"]], [2, 0, 8, 0, 0, 7, 1, 1, 1, 2, 0.17777777777777778, ["mov     rax, fs:28h", "mov     [rsp+108h+var_E0], rax", "xor     eax, eax", "cmp     edi, 2", "mov     ebx, cs:opterr@@GLIBC_2_2_5", "mov     cs:opterr@@GLIBC_2_2_5, 0", "jz      short loc_6DD0"], ["mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edi,0", "mov~ebx,<TAG>", "mov~<TAG>,0", "jz~FOO"]], [1, 0, 10, 1, 0, 10, 1, 1, 0, 3, 0.0, ["push    r13", "push    r12", "mov     r13, version", "push    rbp", "push    rbx", "mov     rbp, command_name", "mov     r12, package", "sub     rsp, 0E8h", "test    al, al", "jz      short loc_6D74"], ["push~r13", "push~r12", "mov~r13,version", "push~rbp", "push~rbx", "mov~rbp,command_name", "mov~r12,package", "sub~rsp,0", "test~al,al", "jz~FOO"]], [0, 0, 9, 0, 0, 8, 0, 0, 1, 3, 0.0, ["movaps  [rsp+108h+var_A8], xmm0", "movaps  [rsp+108h+var_98], xmm1", "movaps  [rsp+108h+var_88], xmm2", "movaps  [rsp+108h+var_78], xmm3", "movaps  [rsp+108h+var_68], xmm4", "movaps  [rsp+108h+var_58], xmm5", "movaps  [rsp+108h+var_48], xmm6", "movaps  [rsp+108h+var_38], xmm7"], ["movaps~[rsp+0],xmm0", "movaps~[rsp+0],xmm1", "movaps~[rsp+0],xmm2", "movaps~[rsp+0],xmm3", "movaps~[rsp+0],xmm4", "movaps~[rsp+0],xmm5", "movaps~[rsp+0],xmm6", "movaps~[rsp+0],xmm7"]], [1, 0, 7, 0, 1, 7, 1, 2, 2, 2, 0.13333333333333333, ["lea     package, long_options; longopts", "lea     command_name, shortopts; \"+\"", "xor     r8d, r8d; longind", "mov     [rsp+108h+usage_func], usage_func_0", "call    _getopt_long", "cmp     eax, 0FFFFFFFFh", "jz      short loc_6D99"], ["lea~package,<TAG>", "lea~command_name,<TAG>", "xor~r8d,r8d", "mov~[rsp+0],usage_func_0", "call~FOO", "cmp~eax,0", "jz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 3, 3, 0.13333333333333333, ["cmp     eax, 68h ; 'h'", "mov     r9, [rsp+108h+usage_func]", "jz      short loc_6E50"], ["cmp~eax,0", "mov~r9,[rsp+0]", "jz~FOO"]], [0, 0, 3, 0, 1, 3, 1, 2, 4, 2, 0.016666666666666666, ["xor     edi, edi", "call    r9", "jmp     loc_6D99"], ["xor~edi,edi", "call~r9", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [5, 6, 12, 10, 11, 14, 0, 66, 0.06263, 6, 2], "succs": [[], [0, 3], [], [2, 10], [3, 7], [4, 6], [4], [8, 3], [9, 1], [3], []], "fname": "parse_long_options", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 10, 1, 0, 12, 1, 1, 0, 0, 0.0, ["push    r14", "push    r13", "mov     r14, version", "push    r12", "push    rbp", "mov     r12, command_name", "push    rbx", "mov     r13, package", "sub     rsp, 0D0h", "test    al, al", "mov     rbp, [rsp+0F8h+usage_func]", "jz      short loc_6EBB"], ["push~r14", "push~r13", "mov~r14,version", "push~r12", "push~rbp", "mov~r12,command_name", "push~rbx", "mov~r13,package", "sub~rsp,0", "test~al,al", "mov~rbp,[rsp+0]", "jz~FOO"]], [0, 0, 3, 0, 1, 2, 0, 1, 0, 2, 0.03333333333333333, ["mov     edi, cs:exit_failure", "call    rbp"], ["mov~edi,<TAG>", "call~rbp"]], [1, 0, 5, 0, 0, 2, 0, 1, 0, 3, 0.08888888888888889, ["cmp     eax, 76h ; 'v'", "jnz     short loc_6F60"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 0, 3, 0.13333333333333333, ["cmp     eax, 68h ; 'h'", "jz      loc_6F90"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 8, 0, 1, 14, 3, 2, 0, 2, 0.17777777777777778, ["mov     rax, fs:28h", "mov     [rsp+0F8h+var_E0], rax", "xor     eax, eax", "lea     command_name, aWrittenBySSAnd+1Bh; \"\"", "lea     rax, shortopts; \"+\"", "test    r9b, r9b", "lea     package, long_options; longopts", "cmovz   rdx, rax; shortopts", "xor     r8d, r8d; longind", "mov     ebx, cs:opterr@@GLIBC_2_2_5", "mov     cs:opterr@@GLIBC_2_2_5, 1", "call    _getopt_long", "cmp     eax, 0FFFFFFFFh", "jz      short loc_6F68"], ["mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~command_name,<TAG>", "lea~rax,<TAG>", "test~r9b,r9b", "lea~package,<TAG>", "cmovz~rdx,rax", "xor~r8d,r8d", "mov~ebx,<TAG>", "mov~<TAG>,0", "call~FOO", "cmp~eax,0", "jz~FOO"]], [0, 0, 9, 0, 0, 8, 0, 0, 0, 3, 0.0, ["movaps  [rsp+0F8h+var_A8], xmm0", "movaps  [rsp+0F8h+var_98], xmm1", "movaps  [rsp+0F8h+var_88], xmm2", "movaps  [rsp+0F8h+var_78], xmm3", "movaps  [rsp+0F8h+var_68], xmm4", "movaps  [rsp+0F8h+var_58], xmm5", "movaps  [rsp+0F8h+var_48], xmm6", "movaps  [rsp+0F8h+var_38], xmm7"], ["movaps~[rsp+0],xmm0", "movaps~[rsp+0],xmm1", "movaps~[rsp+0],xmm2", "movaps~[rsp+0],xmm3", "movaps~[rsp+0],xmm4", "movaps~[rsp+0],xmm5", "movaps~[rsp+0],xmm6", "movaps~[rsp+0],xmm7"]], [1, 0, 0, 1, 0, 7, 0, 0, 0, -1, 0.0, ["add     rsp, 0D0h", "pop     saved_opterr", "pop     rbp", "pop     command_name", "pop     package", "pop     version", "retn"], ["add~rsp,0", "pop~saved_opterr", "pop~rbp", "pop~command_name", "pop~package", "pop~version", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 0, 1, 0.15555555555555556, ["mov     rax, [rsp+0F8h+var_E0]", "xor     rax, fs:28h", "mov     cs:opterr@@GLIBC_2_2_5, ebx", "jnz     short loc_6F96"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "mov~<TAG>,ebx", "jnz~FOO"]], [2, 0, 0, 0, 2, 14, 1, 2, 0, -1, 0.0, ["lea     c, [rsp+0F8h+arg_8]", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "mov     r8, rsp; authors", "mov     rcx, version; version", "mov     rdx, package; package", "mov     rsi, command_name; command_name", "mov     [rsp+0F8h+authors.overflow_arg_area], rax", "lea     rax, [rsp+0F8h+var_D8]", "mov     [rsp+0F8h+authors.gp_offset], 30h ; '0'", "mov     [rsp+0F8h+authors.fp_offset], 30h ; '0'", "mov     [rsp+0F8h+authors.reg_save_area], rax", "call    version_etc_va", "xor     edi, edi; status", "call    _exit"], ["lea~c,[rsp+0]", "mov~rdi,<TAG>", "mov~r8,rsp", "mov~rcx,version", "mov~rdx,package", "mov~rsi,command_name", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~<TAG>,0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "call~FOO", "xor~edi,edi", "call~FOO"]], [0, 0, 3, 0, 1, 3, 1, 2, 0, 2, 0.03333333333333333, ["xor     edi, edi", "call    rbp", "jmp     short loc_6F68"], ["xor~edi,edi", "call~rbp", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [6, 7, 12, 10, 11, 13, 1, 69, 0.05657, 7, 2], "succs": [[4, 5], [7], [8, 1], [9, 2], [3, 7], [4], [], [10, 6], [], [7], []], "fname": "parse_gnu_standard_options_only", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[2, 0, 2, 0, 0, 9, 1, 1, 0, 0, 0.09523809523809523, ["lea     rdi, aLt; \"lt-\"", "mov     ecx, 3", "mov     rsi, base", "mov     rbx, base", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     short loc_700D"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,base", "mov~rbx,base", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "test~dl,dl", "jnz~FOO"]], [2, 0, 3, 0, 0, 8, 1, 1, 3, -1, 0.14285714285714285, ["lea     rsi, [slash-6]", "lea     rdi, aLibs; \"/.libs/\"", "mov     ecx, 7", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     short loc_700D"], ["lea~rsi,[slash-6]+0]", "lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "test~dl,dl", "jnz~FOO"]], [1, 0, 4, 1, 0, 5, 0, 1, 2, -1, 0.14285714285714285, ["lea     r8, [slash+1]", "mov     rdx, base", "sub     rdx, argv0", "cmp     rdx, 6", "jle     short loc_700D"], ["lea~r8,[slash+0]", "mov~rdx,base", "sub~rdx,argv0", "cmp~rdx,0", "jle~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 0, 1, 0.0, ["test    argv0, argv0", "push    rbx", "jz      short loc_701D"], ["test~argv0,argv0", "push~rbx", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 5, -1, 0.0, ["lea     rbx, [slash+4]", "mov     cs:program_invocation_short_name@@GLIBC_2_2_5, argv0"], ["lea~rbx,[slash+0]", "mov~<TAG>,argv0"]], [1, 0, 5, 0, 1, 5, 1, 2, 1, -1, 0.11904761904761904, ["mov     esi, 2Fh ; '/'; c", "mov     rbx, argv0", "call    _strrchr", "test    slash, slash", "jz      short loc_700D"], ["mov~esi,0", "mov~rbx,argv0", "call~FOO", "test~slash,slash", "jz~FOO"]], [2, 0, 0, 0, 2, 6, 0, 2, 1, 0, 0.0, ["mov     rcx, cs:stderr@@GLIBC_2_2_5; s", "lea     argv0, aANullArgv0WasP; \"A NULL argv[0] was passed through an ex\"...", "mov     edx, 37h ; '7'; n", "mov     esi, 1; size", "call    _fwrite", "call    _abort"], ["mov~rcx,<TAG>", "lea~argv0,<TAG>", "mov~edx,0", "mov~esi,0", "call~FOO", "call~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["mov     cs:program_name, argv0", "mov     cs:program_invocation_name@@GLIBC_2_2_5, argv0", "pop     argv0", "retn"], ["mov~<TAG>,argv0", "mov~<TAG>,argv0", "pop~argv0", "retn"]]], "func_feature": [3, 4, 8, 0, 8, 11, 1, 42, 0.0625, 7, 1], "succs": [[4, 7], [0, 7], [1, 7], [5, 6], [7], [2, 7], [], []], "fname": "set_program_name", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 4, 0, 0, 2, 0, 1, 0, 0, 0.0375, ["cmp     byte ptr [locale_code+3], 2Dh ; '-'", "jnz     loc_7060"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [2, 0, 5, 0, 0, 4, 1, 1, 2, 4, 0.03333333333333333, ["movzx   edx, byte ptr [locale_code+2]", "and     edx, 0FFFFFFDFh", "cmp     dl, 46h ; 'F'", "jnz     loc_7060"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 6, -1, 0.075, ["cmp     byte ptr [locale_code+5], 33h ; '3'", "jnz     short loc_7060"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 5, -1, 0.08333333333333333, ["cmp     byte ptr [locale_code+4], 30h ; '0'", "jnz     short loc_7060"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 5, 1, 0.020833333333333332, ["cmp     byte ptr [locale_code+5], 0", "jnz     loc_7060"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, 2, 0.03333333333333333, ["cmp     byte ptr [locale_code+4], 38h ; '8'", "jnz     loc_7060"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [2, 0, 0, 1, 0, 8, 0, 0, 6, 0, 0.0, ["cmp     byte ptr [msgid+0], 60h ; '`'", "lea     locale_code, unk_E24C", "lea     rdx, unk_E250", "cmovnz  rax, rdx", "add     rsp, 8", "pop     s", "pop     msgid", "retn"], ["cmp~[yte ptr [msgid+0],0", "lea~locale_code,<TAG>", "lea~rdx,<TAG>", "cmovnz~rax,rdx", "add~rsp,0", "pop~s", "pop~msgid", "retn"]], [2, 0, 6, 0, 0, 4, 1, 1, 1, 5, 0.022916666666666665, ["movzx   edx, byte ptr [locale_code+1]", "and     edx, 0FFFFFFDFh", "cmp     dl, 54h ; 'T'", "jnz     short loc_7060"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 7, -1, 0.058333333333333334, ["cmp     byte ptr [locale_code+6], 30h ; '0'", "jnz     short loc_7060"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [2, 0, 8, 0, 0, 4, 1, 1, 2, -1, 0.058333333333333334, ["movzx   edx, byte ptr [locale_code+1]", "and     edx, 0FFFFFFDFh", "cmp     dl, 42h ; 'B'", "jnz     short loc_7060"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 1, -1, 0.035416666666666666, ["cmp     dl, 47h ; 'G'", "jz      short loc_7080"], ["cmp~dl,0", "jz~FOO"]], [2, 0, 0, 1, 0, 8, 0, 0, 9, -1, 0.0, ["cmp     byte ptr [msgid+0], 60h ; '`'", "lea     locale_code, unk_E254", "lea     rdx, unk_E258", "cmovnz  rax, rdx", "add     rsp, 8", "pop     s", "pop     msgid", "retn"], ["cmp~[yte ptr [msgid+0],0", "lea~locale_code,<TAG>", "lea~rdx,<TAG>", "cmovnz~rax,rdx", "add~rsp,0", "pop~s", "pop~msgid", "retn"]], [1, 0, 2, 0, 0, 2, 0, 1, 8, -1, 0.03333333333333333, ["cmp     byte ptr [locale_code+7], 0", "jnz     short loc_7060"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 3, -1, 0.075, ["cmp     byte ptr [locale_code+2], 31h ; '1'", "jnz     short loc_7060"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 4, -1, 0.08333333333333333, ["cmp     byte ptr [locale_code+3], 38h ; '8'", "jnz     short loc_7060"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [3, 0, 16, 1, 1, 10, 1, 2, 0, 6, 0.0, ["push    rbp", "push    rbx", "mov     rbp, msgid", "mov     ebx, esi", "sub     rsp, 8", "call    locale_charset", "movzx   edx, byte ptr [locale_code]", "and     edx, 0FFFFFFDFh", "cmp     dl, 55h ; 'U'", "jz      short loc_70D0"], ["push~rbp", "push~rbx", "mov~rbp,msgid", "mov~ebx,esi", "sub~rsp,0", "call~FOO", "movzx~edx,<TAG>", "and~edx,0", "cmp~dl,0", "jz~FOO"]], [2, 0, 0, 1, 0, 8, 0, 0, 2, -1, 0.0, ["lea     locale_code, unk_E25B", "lea     rdx, asc_E25D; \"'\"", "cmp     ebx, 9", "cmovnz  rax, rdx", "add     rsp, 8", "pop     s", "pop     msgid", "retn"], ["lea~locale_code,<TAG>", "lea~rdx,<TAG>", "cmp~ebx,0", "cmovnz~rax,rdx", "add~rsp,0", "pop~s", "pop~msgid", "retn"]]], "func_feature": [1, 4, 15, 0, 17, 28, 2, 66, 0.03824, 6, 4], "succs": [[16, 5], [0, 16], [8, 16], [16, 2], [16, 6], [16, 4], [], [16, 1], [16, 12], [16, 13], [16, 9], [], [16, 11], [16, 14], [16, 3], [10, 7], []], "fname": "gettext_quote", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 251, 0, 0, 5, 3, 1, 0, 0, 0.1386946386946387, ["mov     eax, esi", "xor     eax, 1", "and     eax, r8d", "test    r10b, r10b", "jz      short loc_7C11"], ["mov~eax,esi", "xor~eax,0", "and~eax,r8d", "test~r10b,r10b", "jz~FOO"]], [0, 0, 251, 0, 0, 2, 1, 1, 13, -1, 0.19705557600294443, ["test    dl, dl", "jnz     loc_7B40"], ["test~dl,dl", "jnz~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 10, -1, 0.05836093730830573, ["cmp     eax, 5", "jz      loc_7978"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 251, 0, 0, 3, 0, 1, 9, -1, 0.07426900584795301, ["mov     eax, [rsp+0E8h+quoting_style]; jumptable 000000000000731E case 63", "cmp     eax, 2", "jz      loc_79B8"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 251, 0, 0, 2, 0, 0, 15, -1, 0.006269169427064164, ["cmp     r13, r15", "jbe     short loc_7C0D"], ["cmp~r13,r15", "jbe~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [r14+r15], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [2, 0, 251, 0, 0, 3, 0, 1, 9, -1, 0.004409975988923364, ["mov     edx, 0Bh; jumptable 000000000000731E case 11", "mov     ebx, 76h ; 'v'", "jmp     c_escape"], ["mov~edx,0", "mov~ebx,0", "jmp~FOO"]], [0, 0, 251, 1, 0, 5, 0, 1, 8, -1, 0.31162346425504295, ["lea     rcx, off_E2EC", "movzx   edx, bl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [1, 1, 251, 0, 0, 6, 1, 1, 10, -1, 6.0816376605850294e-05, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 00000000000076AA case 32", "mov     r12d, r10d", "mov     ebx, 20h ; ' '", "setz    dl", "xor     r10d, r10d", "jmp     loc_75A1"], ["cmp~[rsp+0],0", "mov~r12d,r10d", "mov~ebx,<STR>", "setz~dl", "xor~r10d,r10d", "jmp~FOO"]], [0, 0, 251, 1, 0, 5, 0, 1, 9, -1, 0.06923953239742725, ["lea     rcx, off_E4E8", "movzx   edx, bl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [0, 0, 6, 0, 0, 4, 0, 1, 15, -1, 0.0032634032634032634, ["movzx   ebx, [rsp+0E8h+c_and_shell_quote_compat]", "mov     i, argsize_0", "mov     [rsp+0E8h+backslash_escapes], bl", "jmp     force_outer_quoting_style"], ["movzx~ebx,[rsp+0]", "mov~i,argsize_0", "mov~[rsp+0],bl", "jmp~FOO"]], [1, 0, 251, 0, 0, 4, 1, 1, 14, -1, 0.0551220709115446, ["cmp     [rsp+0E8h+quoting_style], 2", "setz    al", "test    r9b, r9b", "jnz     loc_8000"], ["cmp~[rsp+0],0", "setz~al", "test~r9b,r9b", "jnz~FOO"]], [1, 0, 251, 1, 0, 1, 0, 0, 16, -1, 0.0060974113605692555, ["add     r15, 1"], ["add~r15,0"]], [0, 0, 251, 0, 0, 6, 1, 0, 3, -1, 0.12738314317261687, ["xor     r11d, r11d", "mov     rax, argsize_0", "mov     r8d, r12d", "mov     argsize_0, r11", "mov     r11, argsize_0", "nop     word ptr [rax+rax+00h]"], ["xor~r11d,r11d", "mov~rax,argsize_0", "mov~r8d,r12d", "mov~argsize_0,r11", "mov~r11,argsize_0", "nop~[ord ptr [rax+0]"]], [5, 0, 251, 0, 0, 9, 0, 1, 6, -1, 0.02285609127714391, ["lea     rbx, asc_E25D; \"'\"", "mov     byte ptr [r14], 27h ; '''", "mov     [rsp+0E8h+quoting_style], 2", "mov     r15d, 1", "mov     [rsp+0E8h+quote_string_len], 1", "mov     [rsp+0E8h+c_and_shell_quote_compat], 0", "mov     [rsp+0E8h+s2], rbx", "mov     [rsp+0E8h+encountered_single_quote], al", "jmp     loc_7203"], ["lea~rbx,<TAG>", "mov~<TAG>,0", "mov~[rsp+0],0", "mov~r15d,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rbx", "mov~[rsp+0],al", "jmp~FOO"]], [7, 0, 251, 0, 0, 11, 1, 1, 5, -1, 0.009201324990798676, ["lea     rax, asc_E25D; \"'\"", "mov     [rsp+0E8h+orig_buffersize], 0", "mov     [rsp+0E8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0E8h+encountered_single_quote], 0", "xor     r12d, r12d", "mov     [rsp+0E8h+c_and_shell_quote_compat], 0", "mov     [rsp+0E8h+quote_string_len], 1", "mov     [rsp+0E8h+s2], rax", "mov     r15d, 1", "mov     [rsp+0E8h+quoting_style], 2", "jmp     loc_7203"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r12d,r12d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~r15d,0", "mov~[rsp+0],0", "jmp~FOO"]], [4, 0, 251, 0, 0, 7, 0, 1, 5, -1, 0.00923813029076187, ["lea     rax, unk_E25B", "mov     [rsp+0E8h+c_and_shell_quote_compat], 0", "mov     [rsp+0E8h+backslash_escapes], 1", "mov     [rsp+0E8h+quote_string_len], 1", "mov     r15d, 1", "mov     [rsp+0E8h+s2], rax", "jmp     loc_7203"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r15d,0", "mov~[rsp+0],rax", "jmp~FOO"]], [7, 0, 251, 0, 0, 12, 2, 1, 2, -1, 0.0020447388868441506, ["lea     rax, unk_E25B; jumptable 00000000000071C1 case 6", "mov     [rsp+0E8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0E8h+encountered_single_quote], 0", "xor     r12d, r12d", "mov     [rsp+0E8h+orig_buffersize], 0", "mov     [rsp+0E8h+c_and_shell_quote_compat], 1", "mov     [rsp+0E8h+backslash_escapes], 1", "mov     [rsp+0E8h+quote_string_len], 1", "xor     r15d, r15d", "mov     [rsp+0E8h+s2], rax", "mov     [rsp+0E8h+quoting_style], 5", "jmp     loc_7203"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r12d,r12d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [7, 0, 251, 0, 0, 10, 2, 1, 2, -1, 0.0020447388868441506, ["mov     [rsp+0E8h+all_c_and_shell_quote_compat], 1; jumptable 00000000000071C1 case 7", "mov     [rsp+0E8h+encountered_single_quote], 0", "xor     r12d, r12d", "mov     [rsp+0E8h+orig_buffersize], 0", "mov     [rsp+0E8h+c_and_shell_quote_compat], 0", "xor     r15d, r15d", "mov     [rsp+0E8h+backslash_escapes], 1", "mov     [rsp+0E8h+quote_string_len], 0", "mov     [rsp+0E8h+s2], 0", "jmp     loc_7203"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r12d,r12d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [4, 0, 251, 0, 1, 13, 2, 2, 4, -1, 0.03695252116304748, ["test    ebx, ebx", "mov     rbx, [rsp+0E8h+quote_string]", "setnz   [rsp+0E8h+c_and_shell_quote_compat]", "xor     r12d, r12d", "mov     rdi, rbx; s", "call    _strlen", "mov     [rsp+0E8h+s2], rbx", "mov     [rsp+0E8h+quote_string_len], rax", "mov     [rsp+0E8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0E8h+encountered_single_quote], 0", "mov     [rsp+0E8h+orig_buffersize], 0", "mov     [rsp+0E8h+backslash_escapes], 1", "jmp     loc_7203"], ["test~ebx,ebx", "mov~rbx,[rsp+0]", "setnz~[rsp+0]", "xor~r12d,r12d", "mov~rdi,rbx", "call~FOO", "mov~[rsp+0],rbx", "mov~[rsp+0],rax", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [7, 0, 251, 0, 0, 10, 2, 1, 2, -1, 0.0020447388868441506, ["mov     [rsp+0E8h+all_c_and_shell_quote_compat], 1; jumptable 00000000000071C1 case 0", "mov     [rsp+0E8h+encountered_single_quote], 0", "xor     r12d, r12d", "mov     [rsp+0E8h+orig_buffersize], 0", "mov     [rsp+0E8h+c_and_shell_quote_compat], 0", "xor     r15d, r15d", "mov     [rsp+0E8h+backslash_escapes], 0", "mov     [rsp+0E8h+quote_string_len], 0", "mov     [rsp+0E8h+s2], 0", "jmp     loc_7203"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r12d,r12d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [6, 0, 251, 0, 0, 11, 2, 1, 3, -1, 0.003067108330266225, ["lea     rax, asc_E25D; \"'\"", "mov     [rsp+0E8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0E8h+encountered_single_quote], 0", "xor     r12d, r12d", "mov     [rsp+0E8h+orig_buffersize], 0", "mov     [rsp+0E8h+c_and_shell_quote_compat], 1", "mov     [rsp+0E8h+backslash_escapes], 0", "mov     [rsp+0E8h+quote_string_len], 1", "xor     r15d, r15d", "mov     [rsp+0E8h+s2], rax", "jmp     loc_7203"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r12d,r12d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],rax", "jmp~FOO"]], [6, 0, 251, 0, 0, 11, 2, 1, 3, -1, 0.00307937676358729, ["lea     rax, unk_E25B", "mov     [rsp+0E8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0E8h+encountered_single_quote], 0", "xor     r12d, r12d", "mov     [rsp+0E8h+orig_buffersize], 0", "mov     [rsp+0E8h+c_and_shell_quote_compat], 1", "mov     [rsp+0E8h+backslash_escapes], 1", "mov     [rsp+0E8h+quote_string_len], 1", "xor     r15d, r15d", "mov     [rsp+0E8h+s2], rax", "jmp     loc_7203"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r12d,r12d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],rax", "jmp~FOO"]], [2, 0, 251, 0, 0, 5, 1, 0, 3, -1, 0.009225861857440806, ["lea     rax, asc_E25D; \"'\"", "mov     [rsp+0E8h+quote_string_len], 1", "xor     r15d, r15d", "mov     [rsp+0E8h+quoting_style], 2", "mov     [rsp+0E8h+s2], rax"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],rax"]], [0, 0, 256, 0, 0, 2, 0, 0, 6, -1, 0.003471966629861367, ["cmp     buffersize_0, r15", "jbe     short loc_8109"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 256, 1, 0, 4, 1, 1, 7, -1, 0.009434425223898908, ["add     r15, 1", "movzx   eax, byte ptr [rdx+len]", "test    al, al", "jnz     short loc_8100"], ["add~r15,0", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 256, 0, 0, 1, 0, 0, 5, -1, 0.0004416635995583364, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [1, 0, 251, 1, 0, 3, 0, 0, 15, -1, 0.1383511225616489, ["add     i, 1", "cmp     rbp, ilim", "jnb     store_c"], ["add~i,0", "cmp~rbp,ilim", "jnb~FOO"]], [2, 0, 251, 0, 0, 6, 2, 1, 11, -1, 0.0029321555637345114, ["cmp     eax, 2", "mov     ebx, 3Fh ; '?'", "setz    dl", "xor     r12d, r12d", "xor     eax, eax", "jmp     loc_7358"], ["cmp~eax,0", "mov~ebx,0", "setz~dl", "xor~r12d,r12d", "xor~eax,eax", "jmp~FOO"]], [2, 0, 251, 0, 0, 3, 0, 1, 9, -1, 0.0016341553183658408, ["mov     edx, 0Ah; jumptable 000000000000731E case 10", "mov     ebx, 6Eh ; 'n'", "jmp     c_and_shell_escape"], ["mov~edx,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 251, 0, 0, 4, 1, 1, 10, -1, 5.4682159945317844e-05, ["mov     edx, 0Dh; jumptable 00000000000076AA case 13", "xor     r10d, r10d", "mov     ebx, 72h ; 'r'", "jmp     c_and_shell_escape"], ["mov~edx,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 10, -1, 0.0028567923304765363, ["mov     ebx, 61h ; 'a'; jumptable 00000000000076AA case 7", "jmp     loc_74D0"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 251, 0, 0, 1, 1, 0, 10, -1, 0.0004968715495031285, ["xor     r10d, r10d; jumptable 00000000000076AA case 39"], ["xor~r10d,r10d"]], [0, 0, 251, 0, 0, 2, 1, 1, 17, -1, 0.012973868237026133, ["xor     r10d, r10d", "jmp     loc_7BDD"], ["xor~r10d,r10d", "jmp~FOO"]], [0, 0, 251, 0, 0, 2, 1, 1, 16, -1, 0.028701999754631335, ["test    al, al", "jz      loc_801E"], ["test~al,al", "jz~FOO"]], [1, 0, 251, 0, 0, 4, 0, 1, 4, -1, 0.6373328425960005, ["cmp     argsize_0, i", "setnz   r12b", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_7232"], ["cmp~argsize_0,i", "setnz~r12b", "cmp~argsize_0,0", "jnz~FOO"]], [2, 0, 251, 1, 0, 7, 1, 1, 14, -1, 0.4918292234081708, ["movzx   edi, [rsp+0E8h+all_c_and_shell_quote_compat]", "add     r15, 1", "mov     eax, 0", "test    r12b, r12b", "cmovz   edi, eax", "mov     [rsp+0E8h+all_c_and_shell_quote_compat], dil", "jmp     loc_7218"], ["movzx~edi,[rsp+0]", "add~r15,0", "mov~eax,0", "test~r12b,r12b", "cmovz~edi,eax", "mov~[rsp+0],dil", "jmp~FOO"]], [1, 0, 251, 1, 0, 2, 0, 1, 11, -1, 0.012072138387927863, ["add     i, 1", "jmp     loc_7218"], ["add~i,0", "jmp~FOO"]], [0, 0, 256, 0, 0, 2, 1, 1, 2, -1, 0.000122684333210649, ["test    ebx, ebx; jumptable 00000000000071C1 case 5", "jnz     loc_81ED"], ["test~ebx,ebx", "jnz~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 9, -1, 0.04100314889788588, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 000000000000731E case 39", "jz      loc_7930"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 251, 0, 0, 2, 0, 0, 17, -1, 0.012489265120844069, ["cmp     r13, r15", "jbe     short loc_7C30"], ["cmp~r13,r15", "jbe~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 9, -1, 0.000122684333210649, ["mov     eax, edx"], ["mov~eax,edx"]], [1, 0, 251, 0, 0, 2, 0, 1, 8, -1, 0.030008587903324748, ["cmp     [rsp+0E8h+encountered_single_quote], 0", "jz      loc_822A"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 18, -1, 0.0, ["mov     byte ptr [r14+r15], 27h ; '''"], ["mov~<TAG>,0"]], [1, 0, 251, 0, 0, 2, 0, 1, 10, -1, 0.0028567923304765363, ["mov     ebx, 76h ; 'v'; jumptable 00000000000076AA case 11", "jmp     loc_74D0"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 251, 0, 0, 3, 0, 0, 5, -1, 0.0, ["mov     rax, [rsp+0E8h+arg]", "cmp     byte ptr [rax+i], 0", "setnz   r12b"], ["mov~rax,[rsp+0]", "cmp~<TAG>,0", "setnz~r12b"]], [0, 0, 251, 0, 0, 2, 0, 0, 15, -1, 0.018145012881854987, ["lea     len, [r15+3]", "mov     r8d, eax"], ["lea~len,[r15+0]", "mov~r8d,eax"]], [1, 0, 251, 0, 0, 2, 0, 1, 15, -1, 0.0, ["mov     byte ptr [r14+r15+2], 27h ; '''", "jmp     loc_7759"], ["mov~[yte ptr [r14+0],0", "jmp~FOO"]], [0, 0, 251, 0, 0, 3, 0, 1, 14, -1, 0.018316770948349898, ["lea     len, [r15+2]", "cmp     buffersize_0, len", "ja      loc_7D89"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "ja~FOO"]], [1, 0, 251, 0, 0, 4, 1, 1, 14, -1, 0.021862348178137654, ["cmp     [rsp+0E8h+quoting_style], 2", "setz    al", "and     al, [rsp+0E8h+c_and_shell_quote_compat]", "jnz     loc_7C50"], ["cmp~[rsp+0],0", "setz~al", "and~al,[rsp+0]", "jnz~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 13, -1, 0.046546436020120235, ["cmp     bytes, 0FFFFFFFFFFFFFFFEh", "jz      loc_8041"], ["cmp~bytes,0", "jz~FOO"]], [0, 0, 12, 0, 0, 3, 1, 1, 8, -1, 0.03031529873635137, ["mov     rbx, [rsp+0E8h+s2]", "test    rbx, rbx", "jz      short loc_8262"], ["mov~rbx,[rsp+0]", "test~rbx,rbx", "jz~FOO"]], [1, 0, 251, 0, 0, 4, 2, 1, 7, -1, 0.06287572077045761, ["mov     eax, ebx", "xor     eax, 1", "and     dl, al", "jz      loc_822C"], ["mov~eax,ebx", "xor~eax,0", "and~dl,al", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 0, 1, 11, -1, 0.0002821739663844927, ["movzx   eax, [rsp+0E8h+encountered_single_quote]", "jmp     loc_822C"], ["movzx~eax,[rsp+0]", "jmp~FOO"]], [0, 0, 251, 0, 0, 2, 1, 1, 5, -1, 0.6371610845295056, ["test    r12b, r12b", "jz      loc_7890"], ["test~r12b,r12b", "jz~FOO"]], [0, 0, 251, 0, 0, 3, 0, 0, 18, -1, 0.01231750705434916, ["lea     rax, [r15+1]", "cmp     r13, len", "jbe     short loc_7C3F"], ["lea~rax,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 9, -1, 0.019212366580787635, ["test    al, al", "jz      short loc_8262"], ["test~al,al", "jz~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 19, -1, 0.0, ["mov     byte ptr [r14+r15+1], 27h ; '''"], ["mov~[yte ptr [r14+0],0"]], [0, 0, 251, 0, 0, 3, 0, 0, 18, -1, 0.02750582750582751, ["lea     rax, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_8167"], ["lea~rax,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 251, 0, 0, 2, 0, 0, 17, -1, 0.027677585572322416, ["cmp     buffersize_0, r15", "jbe     short loc_8158"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 18, -1, 0.0, ["mov     byte ptr [r14+r15], 3Fh ; '?'"], ["mov~<TAG>,0"]], [1, 0, 251, 0, 0, 5, 2, 1, 10, -1, 0.004305197726250357, ["mov     [rsp+0E8h+encountered_single_quote], r12b", "xor     edx, edx", "xor     eax, eax", "mov     ebx, 27h ; '''", "jmp     loc_7358"], ["mov~[rsp+0],r12b", "xor~edx,edx", "xor~eax,eax", "mov~ebx,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 10, -1, 0.0, ["mov     byte ptr [r14+r15], 0", "jmp     loc_7D09"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 9, -1, 0.005189547294810453, ["cmp     buffersize_0, r15", "jbe     loc_7D09"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [0, 0, 259, 0, 1, 5, 0, 2, 5, -1, 0.0, ["mov     esi, [rsp+0E8h+quoting_style]; s", "mov     rdi, rcx; msgid", "call    gettext_quote", "mov     [rsp+0E8h+quote_string], rax", "jmp     loc_7F21"], ["mov~esi,[rsp+0]", "mov~rdi,rcx", "call~FOO", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 260, 0, 1, 9, 1, 2, 4, -1, 0.006416390626916943, ["lea     rsi, asc_E25D; \"'\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rax", "mov     [rsp+0E8h+quote_string], rax", "lea     rax, asc_E25D; \"'\"", "cmp     rcx, rax", "jz      loc_82A4"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rax", "mov~[rsp+0],rax", "lea~rax,<TAG>", "cmp~rcx,rax", "jz~FOO"]], [3, 0, 252, 0, 0, 5, 1, 1, 4, -1, 0.0015642252484357748, ["mov     [rsp+0E8h+orig_buffersize], 0", "mov     [rsp+0E8h+all_c_and_shell_quote_compat], 1", "xor     r12d, r12d", "mov     [rsp+0E8h+encountered_single_quote], 0", "jmp     loc_7E1B"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r12d,r12d", "mov~[rsp+0],0", "jmp~FOO"]], [4, 0, 252, 0, 0, 5, 1, 0, 4, -1, 0.0015642252484357748, ["mov     byte ptr [buffer], 22h ; '\"'", "mov     [rsp+0E8h+all_c_and_shell_quote_compat], 1", "xor     r12d, r12d", "mov     [rsp+0E8h+encountered_single_quote], 0", "mov     [rsp+0E8h+orig_buffersize], 0"], ["mov~<TAG>,0", "mov~[rsp+0],0", "xor~r12d,r12d", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [0, 0, 10, 0, 0, 4, 1, 1, 10, -1, 0.01607164765059502, ["movzx   ecx, byte ptr [rbx]", "mov     rax, rbx", "test    cl, cl", "jz      short loc_8262"], ["movzx~ecx,<TAG>", "mov~rax,rbx", "test~cl,cl", "jz~FOO"]], [1, 0, 251, 0, 0, 5, 1, 1, 18, -1, 0.012145748987854251, ["mov     eax, r12d", "lea     r15, [rcx+3]", "xor     r12d, r12d", "mov     ebx, 30h ; '0'", "jmp     loc_7358"], ["mov~eax,r12d", "lea~r15,[rcx+0]", "xor~r12d,r12d", "mov~ebx,0", "jmp~FOO"]], [0, 0, 251, 0, 0, 3, 0, 0, 17, -1, 0.01231750705434916, ["lea     rax, [rcx+2]", "cmp     buffersize_0, len", "jbe     short loc_7FE2"], ["lea~rax,[rcx+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 18, -1, 0.0, ["mov     byte ptr [r14+rcx+2], 30h ; '0'"], ["mov~[yte ptr [r14+0],0"]], [2, 0, 251, 0, 0, 4, 1, 1, 10, -1, 5.4682159945317844e-05, ["mov     edx, 9; jumptable 00000000000076AA case 9", "xor     r10d, r10d", "mov     ebx, 74h ; 't'", "jmp     c_and_shell_escape"], ["mov~edx,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 19, -1, 0.0, ["mov     byte ptr [r14+r15+1], 22h ; '\"'"], ["mov~[yte ptr [r14+0],0"]], [1, 0, 251, 1, 0, 4, 2, 1, 19, -1, 0.012145748987854251, ["add     r15, 2", "xor     r10d, r10d", "xor     r8d, r8d", "jmp     short loc_7BDD"], ["add~r15,0", "xor~r10d,r10d", "xor~r8d,r8d", "jmp~FOO"]], [2, 0, 251, 0, 0, 2, 0, 0, 9, -1, 0.0016341553183658408, ["mov     edx, 9; jumptable 000000000000731E case 9", "mov     ebx, 74h ; 't'"], ["mov~edx,0", "mov~ebx,0"]], [0, 0, 9, 0, 0, 1, 0, 0, 13, -1, 0.0, ["mov     [r14+len], cl"], ["mov~<TAG>,cl"]], [0, 0, 9, 0, 0, 2, 0, 0, 12, -1, 0.009790209790209791, ["cmp     buffersize_0, len", "jbe     short loc_8253"], ["cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 251, 0, 0, 7, 1, 1, 6, -1, 0.5633909949699424, ["cmp     [rsp+0E8h+quoting_style], 2", "mov     rdi, [rsp+0E8h+arg]; s", "lea     r9, [rdi+i]", "setnz   al", "and     al, [rsp+0E8h+backslash_escapes]", "mov     r10d, eax", "jz      loc_7300"], ["cmp~[rsp+0],0", "mov~rdi,[rsp+0]", "lea~r9,<TAG>", "setnz~al", "and~al,[rsp+0]", "mov~r10d,eax", "jz~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 15, -1, 0.015703594650963073, ["cmp     bytes, 1", "jz      loc_7AB9"], ["cmp~bytes,0", "jz~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 10, -1, 0.0028567923304765363, ["mov     ebx, 62h ; 'b'; jumptable 00000000000076AA case 8", "jmp     loc_74D0"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 13, -1, 0.005618942461047724, ["mov     i, argsize_0", "jmp     force_outer_quoting_style"], ["mov~i,argsize_0", "jmp~FOO"]], [2, 0, 251, 0, 0, 5, 0, 1, 12, -1, 0.09628266470371734, ["cmp     [rsp+0E8h+quoting_style], 2", "setz    dl", "cmp     [rsp+0E8h+c_and_shell_quote_compat], 0", "mov     eax, edx", "jnz     loc_7D38"], ["cmp~[rsp+0],0", "setz~dl", "cmp~[rsp+0],0", "mov~eax,edx", "jnz~FOO"]], [1, 0, 251, 0, 0, 4, 1, 1, 10, -1, 0.020316175053016975, ["cmp     [rsp+0E8h+quoting_style], 2", "setz    al", "and     al, [rsp+0E8h+c_and_shell_quote_compat]", "jnz     loc_75AE"], ["cmp~[rsp+0],0", "setz~al", "and~al,[rsp+0]", "jnz~FOO"]], [2, 0, 251, 0, 0, 3, 0, 1, 9, -1, 0.0016341553183658408, ["mov     edx, 0Dh; jumptable 000000000000731E case 13", "mov     ebx, 72h ; 'r'", "jmp     c_and_shell_escape"], ["mov~edx,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 251, 0, 0, 4, 1, 1, 10, -1, 5.4682159945317844e-05, ["mov     edx, 0Ah; jumptable 00000000000076AA case 10", "xor     r10d, r10d", "mov     ebx, 6Eh ; 'n'", "jmp     c_and_shell_escape"], ["mov~edx,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 13, -1, 0.0, ["mov     byte ptr [r14+len], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 0, 251, 0, 0, 2, 0, 0, 12, -1, 0.0625322046374678, ["cmp     buffersize_0, len", "jbe     short loc_776A"], ["cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 251, 0, 0, 3, 1, 1, 7, -1, 0.10270606586396072, ["mov     rax, [rsp+0E8h+quote_string_len]", "test    rax, rax", "jz      loc_7690"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 251, 0, 0, 2, 1, 1, 10, -1, 0.015151515151515152, ["xor     r10d, r10d", "jmp     loc_7300"], ["xor~r10d,r10d", "jmp~FOO"]], [0, 0, 251, 0, 0, 3, 0, 1, 9, -1, 0.02514853567485147, ["cmp     rbx, r11", "mov     byte ptr [rsp+0E8h+ps], r10b", "ja      loc_7860"], ["cmp~rbx,r11", "mov~[yte ptr [rsp+0],r10b", "ja~FOO"]], [0, 0, 251, 0, 1, 12, 1, 2, 10, -1, 0.00971484655695182, ["mov     rdx, [rsp+0E8h+quote_string_len]; n", "mov     rsi, [rsp+0E8h+s2]; s2", "mov     rdi, r9; s1", "mov     [rsp+0E8h+argsize], argsize_0", "mov     byte ptr [rsp+0E8h+pending_shell_escape_end], r8b", "mov     [rsp+0E8h+var_B8], r9", "call    _memcmp", "test    eax, eax", "mov     r9, [rsp+0E8h+var_B8]", "movzx   r8d, byte ptr [rsp+0E8h+pending_shell_escape_end]", "mov     r11, [rsp+0E8h+argsize]", "jnz     loc_7860"], ["mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,r9", "mov~[rsp+0],argsize_0", "mov~[yte ptr [rsp+0],r8b", "mov~[rsp+0],r9", "call~FOO", "test~eax,eax", "mov~r9,[rsp+0]", "movzx~r8d,[yte ptr [rsp+0]", "mov~r11,[rsp+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 14, -1, 0.000245368666421298, ["mov     r15, len"], ["mov~r15,len"]], [0, 0, 256, 0, 0, 1, 0, 0, 7, -1, 0.0, ["mov     [buffer+r15], al"], ["mov~<TAG>,al"]], [1, 0, 251, 0, 0, 6, 2, 1, 10, -1, 0.023310023310023312, ["test    buffersize_0, buffersize_0", "setz    al", "cmp     [rsp+0E8h+orig_buffersize], 0", "setnz   dl", "and     al, dl", "jz      loc_830C"], ["test~buffersize_0,buffersize_0", "setz~al", "cmp~[rsp+0],0", "setnz~dl", "and~al,dl", "jz~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 10, -1, 0.05790899159320233, ["cmp     [rsp+0E8h+backslash_escapes], 0", "jnz     short loc_74D0"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 251, 0, 0, 3, 0, 1, 9, -1, 0.004409975988923364, ["mov     edx, 8; jumptable 000000000000731E case 8", "mov     ebx, 62h ; 'b'", "jmp     short c_escape"], ["mov~edx,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 251, 0, 0, 3, 0, 1, 9, -1, 0.004409975988923364, ["mov     edx, 7; jumptable 000000000000731E case 7", "mov     ebx, 61h ; 'a'", "jmp     c_escape"], ["mov~edx,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 251, 0, 0, 3, 0, 1, 9, -1, 0.004409975988923364, ["mov     edx, 0Ch; jumptable 000000000000731E case 12", "mov     ebx, 66h ; 'f'", "jmp     c_escape"], ["mov~edx,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 251, 0, 0, 3, 0, 1, 11, -1, 0.004150819940293625, ["mov     edx, 5Ch ; '\\'", "mov     ebx, 5Ch ; '\\'", "jmp     c_escape"], ["mov~edx,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 251, 0, 0, 4, 1, 1, 10, -1, 7.36105999263894e-05, ["mov     edx, 0Ch; jumptable 00000000000076AA case 12", "xor     r10d, r10d", "mov     ebx, 66h ; 'f'", "jmp     c_escape"], ["mov~edx,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [0, 0, 251, 0, 0, 5, 0, 1, 16, -1, 0.012685560053981108, ["mov     rdi, [rsp+0E8h+arg]", "lea     rcx, [rdi+bytes]", "lea     rdx, [rdi+r14+1]", "lea     r8, [rcx+r14]", "jmp     short loc_7C7D"], ["mov~rdi,[rsp+0]", "lea~rcx,<TAG>", "lea~rdx,[rdi+0]", "lea~r8,<TAG>", "jmp~FOO"]], [0, 0, 254, 0, 0, 2, 1, 1, 3, -1, 0.0001104158998895841, ["test    buffersize_0, buffersize_0", "jz      loc_8026"], ["test~buffersize_0,buffersize_0", "jz~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 10, -1, 0.012669202142886388, ["cmp     [rsp+0E8h+c_and_shell_quote_compat], 0", "jnz     loc_81E0"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 251, 0, 0, 3, 2, 0, 11, -1, 0.003189792663476874, ["mov     ebx, edx", "xor     r12d, r12d", "xor     eax, eax"], ["mov~ebx,edx", "xor~r12d,r12d", "xor~eax,eax"]], [1, 0, 251, 0, 0, 3, 2, 1, 10, -1, 0.01344129554655878, ["xor     edx, edx", "test    byte ptr [rsp+0E8h+flags], 1", "jz      loc_746B"], ["xor~edx,edx", "test~[yte ptr [rsp+0],0", "jz~FOO"]], [2, 0, 251, 0, 1, 15, 2, 1, 9, -1, 0.09806158753527175, ["mov     [rsp+0E8h+pending_shell_escape_end], argsize_0", "mov     byte ptr [rsp+0E8h+var_B8], r8b", "mov     byte ptr [rsp+0E8h+ps], r10b", "call    ___ctype_b_loc", "mov     rcx, [rax]", "movzx   edx, bl", "movzx   r10d, byte ptr [rsp+0E8h+ps]", "movzx   r8d, byte ptr [rsp+0E8h+var_B8]", "mov     r11, [rsp+0E8h+pending_shell_escape_end]", "mov     edi, 1", "movzx   eax, word ptr [rcx+rdx*2]", "and     ax, 4000h", "setnz   r12b", "setz    al", "and     al, [rsp+0E8h+backslash_escapes]"], ["mov~[rsp+0],argsize_0", "mov~[yte ptr [rsp+0],r8b", "mov~[yte ptr [rsp+0],r10b", "call~FOO", "mov~rcx,<TAG>", "movzx~edx,bl", "movzx~r10d,[yte ptr [rsp+0]", "movzx~r8d,[yte ptr [rsp+0]", "mov~r11,[rsp+0]", "mov~edi,0", "movzx~eax,<TAG>", "and~ax,0", "setnz~r12b", "setz~al", "and~al,[rsp+0]"]], [1, 0, 251, 0, 0, 2, 0, 1, 8, -1, 0.1730953257269047, ["cmp     [rsp+0E8h+var_90], 1; jumptable 000000000000731E default case", "jnz     loc_79D8"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 10, -1, 0.014914325440641196, ["cmp     [rsp+0E8h+c_and_shell_quote_compat], 0", "jnz     loc_81E0"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 9, -1, 0.026311699995910445, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 000000000000731E case 92", "jz      loc_7870"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 251, 0, 0, 2, 0, 0, 9, -1, 0.0031407189301926146, ["cmp     rax, 1", "jbe     short loc_72A0"], ["cmp~rax,0", "jbe~FOO"]], [1, 0, 251, 0, 0, 3, 0, 1, 8, -1, 0.02540617277459383, ["cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "lea     rbx, [i+rax+0]", "jnz     short loc_72A0"], ["cmp~argsize_0,0", "lea~rbx,[i+0]", "jnz~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 11, -1, 0.1043479327689853, ["cmp     [rsp+0E8h+c_and_shell_quote_compat], 0", "jnz     loc_736B"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 10, -1, 0.1518760479286795, ["cmp     [rsp+0E8h+backslash_escapes], 1", "jnz     loc_7472"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 251, 0, 0, 2, 1, 1, 11, -1, 0.05057068662331817, ["test    dl, dl", "jnz     loc_7472"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 251, 0, 0, 2, 1, 1, 10, -1, 0.10781499202551835, ["test    al, al", "jnz     loc_8011"], ["test~al,al", "jnz~FOO"]], [0, 0, 251, 0, 0, 2, 0, 1, 14, -1, 0.006772175193227825, ["mov     eax, edx", "jmp     loc_7677"], ["mov~eax,edx", "jmp~FOO"]], [3, 0, 251, 1, 0, 5, 1, 0, 19, -1, 0.0, ["mov     eax, ebx", "shr     al, 3", "and     eax, 7", "add     eax, 30h ; '0'", "mov     [r14+r15+2], al"], ["mov~eax,ebx", "shr~al,0", "and~eax,0", "add~eax,0", "mov~[r14+0],al"]], [0, 0, 251, 0, 0, 3, 0, 0, 18, -1, 0.04757698441908968, ["lea     rax, [r15+2]", "cmp     r13, len", "jbe     short loc_7BC4"], ["lea~rax,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [0, 0, 251, 0, 0, 1, 0, 1, 12, -1, 0.04889236494499655, ["jmp     loc_7389"], ["jmp~FOO"]], [0, 0, 251, 0, 0, 14, 0, 0, 14, -1, 0.021445221445221447, ["mov     r11, [rsp+0E8h+var_B8]", "mov     rsi, r14", "mov     rcx, r13", "mov     bytes, m", "mov     rdi, rbx", "movzx   r8d, [rsp+0E8h+var_6B]", "movzx   ebx, [rsp+0E8h+c]", "mov     r9, [rsp+0E8h+var_60]", "cmp     rsi, r11", "movzx   r10d, [rsp+0E8h+var_69]", "mov     bytes, [rsp+0E8h+var_68]", "mov     r14, [rsp+0E8h+argsize]", "mov     r13, [rsp+0E8h+buffersize]", "jnb     short loc_80A8"], ["mov~r11,[rsp+0]", "mov~rsi,r14", "mov~rcx,r13", "mov~bytes,m", "mov~rdi,rbx", "movzx~r8d,[rsp+0]", "movzx~ebx,[rsp+0]", "mov~r9,[rsp+0]", "cmp~rsi,r11", "movzx~r10d,[rsp+0]", "mov~bytes,[rsp+0]", "mov~r14,[rsp+0]", "mov~r13,[rsp+0]", "jnb~FOO"]], [0, 0, 284, 1, 0, 5, 0, 1, 1, -1, 0.0034842350631824324, ["lea     rcx, off_E2C0", "mov     edx, r15d", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "mov~edx,r15d", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [2, 0, 251, 1, 0, 4, 0, 1, 17, -1, 0.012722365353944302, ["movzx   ecx, byte ptr [rdx]", "sub     ecx, 5Bh ; '['", "cmp     cl, 21h ; '!'", "ja      short loc_7C70"], ["movzx~ecx,<TAG>", "sub~ecx,0", "cmp~cl,0", "ja~FOO"]], [1, 0, 251, 1, 0, 3, 0, 1, 18, -1, 0.008870077291129923, ["add     rdx, 1", "cmp     r8, rdx", "jz      loc_7AB9"], ["add~rdx,0", "cmp~r8,rdx", "jz~FOO"]], [1, 0, 251, 0, 0, 3, 0, 1, 11, -1, 0.0072138387927861616, ["cmp     [rsp+0E8h+quoting_style], 2", "setz    dl", "jmp     loc_7358"], ["cmp~[rsp+0],0", "setz~dl", "jmp~FOO"]], [1, 0, 6, 0, 0, 6, 0, 1, 12, -1, 0.0004521793995478207, ["cmp     [rsp+0E8h+quoting_style], 2", "movzx   ebx, [rsp+0E8h+c_and_shell_quote_compat]", "mov     i, argsize_0", "setz    al", "mov     [rsp+0E8h+backslash_escapes], bl", "jmp     force_outer_quoting_style"], ["cmp~[rsp+0],0", "movzx~ebx,[rsp+0]", "mov~i,argsize_0", "setz~al", "mov~[rsp+0],bl", "jmp~FOO"]], [1, 0, 251, 0, 0, 3, 0, 1, 11, -1, 0.006672275093327726, ["cmp     [rsp+0E8h+c_and_shell_quote_compat], 0", "movzx   r10d, byte ptr [rsp+0E8h+ps]", "jnz     loc_8275"], ["cmp~[rsp+0],0", "movzx~r10d,[yte ptr [rsp+0]", "jnz~FOO"]], [2, 0, 251, 1, 0, 5, 1, 1, 11, -1, 0.026168568273831433, ["add     i, 1", "mov     eax, r8d", "xor     r12d, r12d", "mov     ebx, 5Ch ; '\\'", "jmp     store_c"], ["add~i,0", "mov~eax,r8d", "xor~r12d,r12d", "mov~ebx,0", "jmp~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 12, -1, 0.013098597309123624, ["cmp     [rsp+0E8h+quote_string_len], 0", "jnz     loc_787B"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 251, 0, 0, 3, 0, 0, 17, -1, 0.018488529014844806, ["lea     rsi, [r15+1]", "cmp     r13, len", "jbe     short loc_7B75"], ["lea~rsi,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [0, 0, 251, 0, 0, 2, 0, 0, 16, -1, 0.018660287081339714, ["cmp     r13, r15", "jbe     short loc_7B66"], ["cmp~r13,r15", "jbe~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 17, -1, 0.0, ["mov     byte ptr [r14+r15], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 251, 1, 1, 12, 1, 2, 11, -1, 0.07276407802723593, ["mov     rax, [rsp+0E8h+arg]", "lea     r14, [i+m+0]", "mov     rdx, [rsp+0E8h+var_B8]", "mov     rcx, [rsp+0E8h+ps]; ps", "mov     rdi, [rsp+0E8h+pending_shell_escape_end]; pwc", "lea     r13, [rax+r14]", "sub     rdx, r14; n", "mov     rsi, r13; s", "call    rpl_mbrtowc", "test    rax, rax", "mov     r15, rax", "jz      short loc_7AE1"], ["mov~rax,[rsp+0]", "lea~r14,[i+0]", "mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rdi,[rsp+0]", "lea~r13,<TAG>", "sub~rdx,r14", "mov~rsi,r13", "call~FOO", "test~rax,rax", "mov~r15,rax", "jz~FOO"]], [1, 0, 251, 1, 2, 10, 2, 3, 15, -1, 0.017666543982333457, ["mov     edi, [rsp+0E8h+w]; wc", "call    _iswprint", "mov     rdi, [rsp+0E8h+ps]; ps", "test    eax, eax", "mov     eax, 0", "cmovz   r12d, eax", "add     m, bytes", "call    _mbsinit", "test    eax, eax", "jz      short loc_7A63"], ["mov~edi,[rsp+0]", "call~FOO", "mov~rdi,[rsp+0]", "test~eax,eax", "mov~eax,0", "cmovz~r12d,eax", "add~m,bytes", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 251, 0, 0, 12, 1, 0, 10, -1, 0.07162311372837689, ["lea     rax, [rsp+0E8h+w]", "xor     ecx, ecx", "mov     [rsp+0E8h+c], bl", "mov     [rsp+0E8h+var_6B], r8b", "mov     c_0, rcx", "mov     [rsp+0E8h+var_60], r9", "mov     [rsp+0E8h+pending_shell_escape_end], rax", "mov     [rsp+0E8h+var_69], r10b", "mov     [rsp+0E8h+var_68], r15", "mov     [rsp+0E8h+argsize], r14", "mov     [rsp+0E8h+buffersize], buffersize_0", "mov     [rsp+0E8h+var_B8], r11"], ["lea~rax,[rsp+0]", "xor~ecx,ecx", "mov~[rsp+0],bl", "mov~[rsp+0],r8b", "mov~c_0,rcx", "mov~[rsp+0],r9", "mov~[rsp+0],rax", "mov~[rsp+0],r10b", "mov~[rsp+0],r15", "mov~[rsp+0],r14", "mov~[rsp+0],buffersize_0", "mov~[rsp+0],r11"]], [1, 0, 251, 0, 0, 2, 0, 1, 17, -1, 0.0, ["cmp     byte ptr [r9+m], 0", "jz      short loc_80A5"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 251, 1, 0, 4, 0, 1, 16, -1, 0.006269169427064164, ["add     m, 1", "lea     rdx, [i+m+0]", "cmp     r11, rdx", "ja      short loc_8090"], ["add~m,0", "lea~rdx,[i+0]", "cmp~r11,rdx", "ja~FOO"]], [1, 0, 251, 0, 0, 3, 0, 1, 8, -1, 0.07406102669260577, ["movzx   ebx, byte ptr [r9]", "cmp     bl, 7Eh ; '~'; switch 127 cases", "ja      short loc_7620; jumptable 00000000000076AA default case"], ["movzx~ebx,<TAG>", "cmp~bl,0", "ja~FOO"]], [0, 0, 251, 0, 1, 8, 0, 1, 10, -1, 0.0, ["mov     byte ptr [rsp+0E8h+pending_shell_escape_end], r8b", "mov     byte ptr [rsp+0E8h+var_B8], r10b", "mov     [rsp+0E8h+ps], r9", "call    _strlen", "movzx   r8d, byte ptr [rsp+0E8h+pending_shell_escape_end]", "movzx   r10d, byte ptr [rsp+0E8h+var_B8]", "mov     r11, rax", "mov     r9, [rsp+0E8h+ps]"], ["mov~[yte ptr [rsp+0],r8b", "mov~[yte ptr [rsp+0],r10b", "mov~[rsp+0],r9", "call~FOO", "movzx~r8d,[yte ptr [rsp+0]", "movzx~r10d,[yte ptr [rsp+0]", "mov~r11,rax", "mov~r9,[rsp+0]"]], [0, 0, 261, 0, 1, 5, 0, 2, 4, -1, 0.0, ["mov     esi, [rsp+0E8h+quoting_style]; s", "mov     rdi, rcx; msgid", "call    gettext_quote", "mov     [rsp+0E8h+quote_string_0], rax", "jmp     loc_7EF6"], ["mov~esi,[rsp+0]", "mov~rdi,rcx", "call~FOO", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 262, 0, 1, 9, 1, 2, 3, -1, 0.0001104158998895841, ["lea     rsi, asc_E25F; \"`\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rax", "mov     [rsp+0E8h+quote_string_0], rax", "lea     rax, asc_E25F; \"`\"", "cmp     rcx, rax", "jz      loc_828E"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rax", "mov~[rsp+0],rax", "lea~rax,<TAG>", "cmp~rcx,rax", "jz~FOO"]], [2, 0, 251, 1, 0, 6, 1, 1, 18, -1, 0.003594650963072016, ["mov     esi, 1", "shl     rsi, cl", "mov     rcx, rsi", "mov     rsi, 20000002Bh", "test    rcx, rsi", "jz      short loc_7C70"], ["mov~esi,0", "shl~rsi,cl", "mov~rcx,rsi", "mov~rsi,0", "test~rcx,rsi", "jz~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 15, -1, 0.012513801987486198, ["cmp     byte ptr [rcx], 0", "jnz     short loc_8097"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 251, 0, 0, 1, 0, 0, 17, -1, 0.0060851429272481905, ["mov     rdi, m"], ["mov~rdi,m"]], [0, 0, 251, 0, 0, 3, 0, 1, 15, -1, 0.007545086492454912, ["mov     rdx, buffersize_0", "mov     buffersize_0, [rsp+0E8h+orig_buffersize]", "jmp     loc_7952"], ["mov~rdx,buffersize_0", "mov~buffersize_0,[rsp+0]", "jmp~FOO"]], [0, 0, 251, 0, 0, 3, 0, 0, 14, -1, 0.01832903938167096, ["lea     len, [r15+2]", "cmp     buffersize_0, len", "jbe     loc_8352"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 251, 0, 0, 11, 3, 1, 6, -1, 0.07053122316280211, ["cmp     [rsp+0E8h+quoting_style], 2", "movzx   ebx, [rsp+0E8h+c_and_shell_quote_compat]", "mov     r12d, r8d", "mov     i, argsize_0", "setz    dl", "mov     eax, ebx", "test    r15, r15", "setz    cl", "and     eax, edx", "and     al, cl", "jnz     loc_8316"], ["cmp~[rsp+0],0", "movzx~ebx,[rsp+0]", "mov~r12d,r8d", "mov~i,argsize_0", "setz~dl", "mov~eax,ebx", "test~r15,r15", "setz~cl", "and~eax,edx", "and~al,cl", "jnz~FOO"]], [0, 0, 251, 0, 0, 3, 1, 1, 15, -1, 0.02092994724573672, ["movzx   edx, [rsp+0E8h+backslash_escapes]", "xor     r12d, r12d", "jmp     loc_7B16"], ["movzx~edx,[rsp+0]", "xor~r12d,r12d", "jmp~FOO"]], [0, 0, 251, 0, 0, 1, 0, 1, 16, -1, 0.0030180345969819658, ["jmp     short loc_80A8"], ["jmp~FOO"]], [1, 0, 6, 0, 0, 4, 0, 0, 19, -1, 0.0005152741994847259, ["mov     r14, [rsp+0E8h+argsize]", "mov     r13, [rsp+0E8h+buffersize]", "mov     i, [rsp+0E8h+var_B8]", "mov     [rsp+0E8h+quoting_style], 2"], ["mov~r14,[rsp+0]", "mov~r13,[rsp+0]", "mov~i,[rsp+0]", "mov~[rsp+0],0"]], [1, 0, 251, 0, 0, 2, 0, 1, 11, -1, 0.013572976730871468, ["cmp     [rsp+0E8h+c_and_shell_quote_compat], 0", "jz      loc_76C0"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 251, 0, 0, 3, 1, 1, 10, -1, 0.009434425223898908, ["xor     r10d, r10d; jumptable 00000000000076AA case 92", "cmp     [rsp+0E8h+backslash_escapes], 0", "jnz     loc_74AE"], ["xor~r10d,r10d", "cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 10, -1, 0.00815850815850816, ["cmp     [rsp+0E8h+backslash_escapes], 0", "jz      loc_76C0"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 251, 1, 0, 2, 0, 0, 19, -1, 0.03743099006256901, ["movzx   ebx, byte ptr [rdi+rbp]", "add     r15, 1"], ["movzx~ebx,<TAG>", "add~r15,0"]], [0, 0, 251, 0, 0, 2, 0, 0, 18, -1, 0.03760274812906392, ["cmp     r13, r15", "jbe     short loc_7BE6"], ["cmp~r13,r15", "jbe~FOO"]], [0, 0, 251, 0, 0, 1, 0, 0, 19, -1, 0.0, ["mov     [r14+r15], bl"], ["mov~<TAG>,bl"]], [1, 0, 251, 1, 0, 2, 0, 0, 17, -1, 0.018145012881854987, ["add     r15, 3", "mov     r8d, eax"], ["add~r15,0", "mov~r8d,eax"]], [0, 0, 251, 0, 0, 3, 0, 0, 16, -1, 0.018316770948349898, ["lea     len, [r15+2]", "cmp     buffersize_0, len", "jbe     short loc_751A"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 17, -1, 0.0, ["mov     byte ptr [r14+r15+2], 27h ; '''"], ["mov~[yte ptr [r14+0],0"]], [0, 0, 251, 0, 0, 3, 0, 0, 20, -1, 0.02716231137283769, ["lea     len, [r15+3]", "cmp     buffersize_0, len", "jbe     short loc_8185"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 251, 0, 0, 3, 0, 0, 19, -1, 0.027334069439332597, ["lea     len, [r15+2]", "cmp     buffersize_0, len", "jbe     short loc_8176"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 20, -1, 0.0, ["mov     byte ptr [r14+r15+2], 22h ; '\"'"], ["mov~[yte ptr [r14+0],0"]], [0, 0, 251, 0, 1, 9, 0, 1, 10, -1, 0.0, ["mov     rdi, [rsp+0E8h+arg]; s", "mov     byte ptr [rsp+0E8h+argsize], r8b", "mov     byte ptr [rsp+0E8h+pending_shell_escape_end], r10b", "mov     [rsp+0E8h+var_B8], r9", "call    _strlen", "movzx   r8d, byte ptr [rsp+0E8h+argsize]", "movzx   r10d, byte ptr [rsp+0E8h+pending_shell_escape_end]", "mov     r11, rax", "mov     r9, [rsp+0E8h+var_B8]"], ["mov~rdi,[rsp+0]", "mov~[yte ptr [rsp+0],r8b", "mov~[yte ptr [rsp+0],r10b", "mov~[rsp+0],r9", "call~FOO", "movzx~r8d,[yte ptr [rsp+0]", "movzx~r10d,[yte ptr [rsp+0]", "mov~r11,rax", "mov~r9,[rsp+0]"]], [2, 0, 251, 0, 0, 5, 0, 1, 9, -1, 0.0717948717948718, ["lea     rax, [rsp+0E8h+mbstate]", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "mov     qword ptr [rsp+0E8h+mbstate.__count], 0", "mov     [rsp+0E8h+ps], rax", "jnz     short loc_7A24"], ["lea~rax,[rsp+0]", "cmp~argsize_0,0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],rax", "jnz~FOO"]], [0, 0, 251, 0, 0, 1, 0, 0, 11, -1, 0.00015540015540015543, ["xchg    ax, ax"], ["xchg~ax,ax"]], [2, 0, 251, 0, 0, 4, 0, 1, 10, -1, 0.0667671509776773, ["cmp     [rsp+0E8h+quoting_style], 2", "setz    dl", "cmp     [rsp+0E8h+c_and_shell_quote_compat], 0", "jnz     loc_82BA"], ["cmp~[rsp+0],0", "setz~dl", "cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 9, -1, 0.07953543532490868, ["cmp     [rsp+0E8h+backslash_escapes], 0; jumptable 000000000000731E case 0", "jnz     loc_7713"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 251, 0, 0, 1, 1, 0, 10, -1, 0.0008447692658218975, ["xor     r10d, r10d; jumptable 00000000000076AA case 0"], ["xor~r10d,r10d"]], [0, 0, 6, 0, 0, 5, 0, 1, 11, -1, 0.00029677924414766525, ["movzx   ebx, [rsp+0E8h+c_and_shell_quote_compat]", "mov     i, argsize_0", "mov     eax, edx", "mov     [rsp+0E8h+backslash_escapes], bl", "jmp     force_outer_quoting_style"], ["movzx~ebx,[rsp+0]", "mov~i,argsize_0", "mov~eax,edx", "mov~[rsp+0],bl", "jmp~FOO"]], [1, 0, 263, 0, 0, 2, 0, 1, 2, -1, 0.0002944423997055576, ["cmp     [rsp+0E8h+quoting_style], 0Ah; jumptable 00000000000071C1 cases 8-10", "jz      short loc_7F21"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 251, 0, 0, 2, 0, 0, 13, -1, 0.000449842555105713, ["mov     ebx, 5Ch ; '\\'", "nop     word ptr [rax+rax+00h]"], ["mov~ebx,0", "nop~[ord ptr [rax+0]"]], [1, 0, 4, 0, 0, 4, 1, 0, 9, -1, 0.0, ["test    al, al", "mov     eax, 4", "cmovz   eax, [rsp+0E8h+quoting_style]", "mov     [rsp+0E8h+quoting_style], eax"], ["test~al,al", "mov~eax,0", "cmovz~eax,[rsp+0]", "mov~[rsp+0],eax"]], [1, 0, 5, 0, 0, 2, 0, 1, 8, -1, 0.014366335418967, ["cmp     [rsp+0E8h+backslash_escapes], 0", "jz      short loc_7CD0"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 251, 0, 0, 1, 1, 0, 11, -1, 0.07405226352594774, ["xor     r12d, r12d"], ["xor~r12d,r12d"]], [2, 1, 3, 2, 1, 14, 0, 2, 10, -1, 7.36105999263894e-05, ["sub     rsp, 8", "mov     r8d, 5; quoting_style", "mov     rcx, r11; argsize", "push    [rsp+0F0h+quote_string]; right_quote", "push    [rsp+0F8h+quote_string_0]; left_quote", "mov     rdi, r14; buffer", "push    [rsp+100h+var_C8]; quote_these_too", "mov     r9d, [rsp+108h+flags]; flags", "mov     rdx, [rsp+108h+arg]; arg", "mov     rsi, [rsp+108h+orig_buffersize]; buffersize", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r15, len", "jmp     loc_7D09"], ["sub~rsp,0", "mov~r8d,0", "mov~rcx,r11", "push~[rsp+0]", "push~[rsp+0]", "mov~rdi,r14", "push~[rsp+0]", "mov~r9d,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "call~FOO", "add~rsp,<STR>", "mov~r15,len", "jmp~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 9, -1, 0.0266347687400319, ["cmp     [rsp+0E8h+all_c_and_shell_quote_compat], 0", "jnz     loc_82CD"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 251, 0, 0, 2, 1, 0, 9, -1, 0.002392344497607656, ["xor     r10d, r10d; jumptable 00000000000076AA default case", "nop     dword ptr [rax+rax+00h]"], ["xor~r10d,r10d", "nop~[word ptr [rax+0]"]], [2, 0, 251, 0, 0, 5, 2, 1, 5, -1, 8.58790332474543e-05, ["mov     [rsp+0E8h+all_c_and_shell_quote_compat], 1", "xor     eax, eax", "xor     r12d, r12d", "mov     [rsp+0E8h+orig_buffersize], 0", "jmp     loc_78F4"], ["mov~[rsp+0],0", "xor~eax,eax", "xor~r12d,r12d", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 251, 0, 0, 1, 0, 0, 11, -1, 0.01977671451355662, ["mov     buffersize_0, [rsp+0E8h+orig_buffersize]"], ["mov~buffersize_0,[rsp+0]"]], [1, 0, 251, 0, 0, 6, 0, 0, 13, -1, 0.006092503987240828, ["mov     edx, ebx", "shr     dl, 5", "movzx   edx, dl", "mov     edx, [rsi+rdx*4]", "bt      edx, ebx", "jb      store_escape"], ["mov~edx,ebx", "shr~dl,0", "movzx~edx,dl", "mov~edx,<TAG>", "bt~edx,ebx", "jb~FOO"]], [0, 0, 251, 0, 0, 2, 1, 1, 12, -1, 0.23937430990062566, ["test    r10b, r10b", "jnz     store_escape"], ["test~r10b,r10b", "jnz~FOO"]], [0, 0, 258, 0, 0, 3, 2, 1, 3, -1, 0.015998037050668632, ["xor     r15d, r15d", "test    ebx, ebx", "jz      loc_80ED"], ["xor~r15d,r15d", "test~ebx,ebx", "jz~FOO"]], [0, 0, 251, 0, 0, 11, 1, 1, 13, -1, 0.002834008097165992, ["mov     rdi, m", "movzx   r8d, [rsp+0E8h+var_6B]", "movzx   ebx, [rsp+0E8h+c]", "movzx   r10d, [rsp+0E8h+var_69]", "mov     r15, [rsp+0E8h+var_68]", "xor     r12d, r12d", "mov     r14, [rsp+0E8h+argsize]", "mov     r13, [rsp+0E8h+buffersize]", "mov     r11, [rsp+0E8h+var_B8]", "movzx   edx, [rsp+0E8h+backslash_escapes]", "jmp     loc_7B16"], ["mov~rdi,m", "movzx~r8d,[rsp+0]", "movzx~ebx,[rsp+0]", "movzx~r10d,[rsp+0]", "mov~r15,[rsp+0]", "xor~r12d,r12d", "mov~r14,[rsp+0]", "mov~r13,[rsp+0]", "mov~r11,[rsp+0]", "movzx~edx,[rsp+0]", "jmp~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 12, -1, 0.052619310514047356, ["cmp     bytes, 0FFFFFFFFFFFFFFFFh", "jz      loc_80B5"], ["cmp~bytes,0", "jz~FOO"]], [1, 0, 251, 0, 0, 4, 2, 1, 13, -1, 0.08741258741258742, ["mov     eax, r8d", "xor     eax, 1", "and     al, dl", "jz      short loc_7521"], ["mov~eax,r8d", "xor~eax,0", "and~al,dl", "jz~FOO"]], [0, 0, 251, 0, 0, 1, 1, 0, 10, -1, 0.0008833271991166729, ["xor     r10d, r10d; jumptable 00000000000076AA case 63"], ["xor~r10d,r10d"]], [1, 0, 251, 0, 0, 1, 0, 0, 21, -1, 0.0, ["mov     byte ptr [r14+r15+3], 3Fh ; '?'"], ["mov~[yte ptr [r14+0],0"]], [0, 0, 251, 0, 0, 3, 1, 1, 11, -1, 0.09736228683597105, ["movzx   edx, [rsp+0E8h+backslash_escapes]", "xor     r12d, r12d", "jmp     loc_7B20"], ["movzx~edx,[rsp+0]", "xor~r12d,r12d", "jmp~FOO"]], [0, 0, 251, 0, 0, 2, 0, 0, 14, -1, 0.018660287081339714, ["cmp     buffersize_0, r15", "jbe     short loc_74FC"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 15, -1, 0.0, ["mov     byte ptr [r14+r15], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 251, 0, 0, 1, 0, 0, 12, -1, 0.002968960863697706, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 251, 0, 0, 2, 0, 0, 13, -1, 0.06622500306710834, ["cmp     m, 1", "jbe     loc_811B"], ["cmp~m,0", "jbe~FOO"]], [0, 0, 257, 0, 0, 4, 1, 1, 4, -1, 0.000490737332842596, ["mov     rdx, [rsp+0E8h+quote_string_0]", "movzx   eax, byte ptr [rdx]", "test    al, al", "jz      loc_7F2C"], ["mov~rdx,[rsp+0]", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 9, 1, 0, 4, 1, 1, 13, -1, 0.003459698196540302, ["add     len, 1", "movzx   ecx, byte ptr [rax+len]", "test    cl, cl", "jnz     short loc_824A"], ["add~len,0", "movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [0, 0, 251, 0, 0, 3, 0, 0, 15, -1, 0.018488529014844806, ["lea     rdx, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_750B"], ["lea~rdx,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [r14+r15+1], 24h ; '$'"], ["mov~[yte ptr [r14+0],0"]], [3, 1, 3, 2, 1, 14, 1, 1, 9, -1, 0.008293460925039874, ["sub     rsp, 8", "mov     rcx, argsize_0; argsize", "mov     rsi, buffersize_0; buffersize", "push    [rsp+0F0h+quote_string]; right_quote", "push    [rsp+0F8h+quote_string_0]; left_quote", "mov     rdi, r14; buffer", "push    0; quote_these_too", "mov     r9d, [rsp+108h+flags]", "mov     r8d, [rsp+108h+quoting_style]; quoting_style", "mov     rdx, [rsp+108h+arg]; arg", "and     r9d, 0FFFFFFFDh; flags", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r15, len"], ["sub~rsp,0", "mov~rcx,argsize_0", "mov~rsi,buffersize_0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdi,r14", "push~0", "mov~r9d,[rsp+0]", "mov~r8d,[rsp+0]", "mov~rdx,[rsp+0]", "and~r9d,0", "call~FOO", "add~rsp,<STR>", "mov~r15,len"]], [0, 0, 4, 0, 0, 2, 0, 1, 17, -1, 0.0003435161329898172, ["mov     i, argsize_0", "jmp     loc_7CD0"], ["mov~i,argsize_0", "jmp~FOO"]], [1, 0, 251, 0, 0, 3, 0, 1, 7, -1, 0.48170075538496515, ["movzx   ebx, byte ptr [r9]", "cmp     bl, 7Eh ; '~'; switch 127 cases", "ja      loc_7628; jumptable 000000000000731E default case"], ["movzx~ebx,<TAG>", "cmp~bl,0", "ja~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 11, -1, 0.0017783386204438835, ["mov     i, argsize_0", "mov     [rsp+0E8h+quoting_style], 2", "jmp     force_outer_quoting_style"], ["mov~i,argsize_0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 11, -1, 0.0007115691326217643, ["mov     i, argsize_0", "movzx   eax, [rsp+0E8h+c_and_shell_quote_compat]", "jmp     force_outer_quoting_style"], ["mov~i,argsize_0", "movzx~eax,[rsp+0]", "jmp~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 7, -1, 0.004404367562262299, ["mov     [rsp+0E8h+quoting_style], 2", "jmp     force_outer_quoting_style"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 251, 0, 0, 11, 2, 0, 12, -1, 0.036412710096920625, ["mov     edx, r12d", "mov     rdi, m", "movzx   r8d, [rsp+0E8h+var_6B]", "xor     edx, 1", "movzx   ebx, [rsp+0E8h+c]", "movzx   r10d, [rsp+0E8h+var_69]", "and     dl, [rsp+0E8h+backslash_escapes]", "mov     bytes, [rsp+0E8h+var_68]", "mov     r14, [rsp+0E8h+argsize]", "mov     r13, [rsp+0E8h+buffersize]", "mov     r11, [rsp+0E8h+var_B8]"], ["mov~edx,r12d", "mov~rdi,m", "movzx~r8d,[rsp+0]", "xor~edx,0", "movzx~ebx,[rsp+0]", "movzx~r10d,[rsp+0]", "and~dl,[rsp+0]", "mov~bytes,[rsp+0]", "mov~r14,[rsp+0]", "mov~r13,[rsp+0]", "mov~r11,[rsp+0]"]], [0, 0, 252, 0, 0, 1, 0, 1, 8, -1, 0.01236658078763342, ["jmp     loc_7F2C"], ["jmp~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 10, -1, 0.006943933259722734, ["mov     rbx, [rsp+0E8h+var_40]", "xor     rbx, fs:28h", "mov     rax, r15", "jnz     loc_8323"], ["mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "mov~rax,r15", "jnz~FOO"]], [0, 0, 251, 0, 0, 1, 1, 0, 10, -1, 0.0001104158998895841, ["xor     r10d, r10d; jumptable 00000000000076AA cases 123,125"], ["xor~r10d,r10d"]], [0, 0, 0, 0, 1, 1, 0, 1, 11, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 251, 0, 0, 2, 0, 0, 14, -1, 0.08672555514660778, ["cmp     buffersize_0, r15", "jbe     short loc_752B"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 15, -1, 0.0, ["mov     byte ptr [r14+r15], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [1, 0, 251, 0, 0, 3, 0, 1, 14, -1, 0.03862102809471231, ["movzx   ebx, byte ptr [rax+rcx]", "cmp     bl, 3Eh ; '>'", "ja      loc_79A0"], ["movzx~ebx,<TAG>", "cmp~bl,0", "ja~FOO"]], [1, 0, 251, 0, 0, 3, 0, 1, 13, -1, 0.04328303275671697, ["mov     rax, [rsp+0E8h+arg]", "cmp     byte ptr [rax+i+1], 3Fh ; '?'", "jz      loc_8122"], ["mov~rax,[rsp+0]", "cmp~[yte ptr [rax+0],0", "jz~FOO"]], [1, 0, 254, 0, 0, 2, 0, 1, 3, -1, 9.81474665685192e-05, ["mov     [rsp+0E8h+backslash_escapes], 0", "jmp     loc_7DA1"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 256, 0, 0, 2, 1, 1, 2, -1, 9.81474665685192e-05, ["test    ebx, ebx; jumptable 00000000000071C1 case 2", "jz      loc_8328"], ["test~ebx,ebx", "jz~FOO"]], [2, 0, 251, 0, 0, 4, 0, 1, 9, -1, 0.01081462397251871, ["cmp     argsize_0, 1; jumptable 000000000000731E cases 123,125", "setnz   al", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_733C"], ["cmp~argsize_0,0", "setnz~al", "cmp~argsize_0,0", "jnz~FOO"]], [1, 0, 251, 0, 0, 5, 2, 1, 11, -1, 0.06321923690344744, ["mov     eax, r8d", "mov     rcx, r15", "xor     eax, 1", "and     al, dl", "jz      short loc_7760"], ["mov~eax,r8d", "mov~rcx,r15", "xor~eax,0", "and~al,dl", "jz~FOO"]], [2, 0, 251, 2, 0, 3, 0, 1, 15, -1, 0.08655379708011288, ["add     r15, 1", "add     i, 1", "jmp     loc_73C0"], ["add~r15,0", "add~i,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 11, -1, 0.0, ["add     rsp, 0B8h", "pop     rbx", "pop     argsize_0", "pop     r12", "pop     buffersize_0", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~argsize_0", "pop~r12", "pop~buffersize_0", "pop~r14", "pop~r15", "retn"]], [1, 0, 251, 0, 0, 2, 0, 1, 10, -1, 0.03345908477487431, ["cmp     [rsp+0E8h+c_and_shell_quote_compat], 0", "jnz     loc_81E0"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 251, 0, 0, 2, 0, 0, 12, -1, 0.018660287081339714, ["cmp     buffersize_0, r15", "jbe     short loc_773D"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 13, -1, 0.0, ["mov     byte ptr [r14+r15], 27h ; '''"], ["mov~<TAG>,0"]], [1, 0, 251, 0, 0, 3, 0, 0, 10, -1, 0.0, ["mov     rax, [rsp+0E8h+arg]", "cmp     byte ptr [rax+1], 0", "setnz   al"], ["mov~rax,[rsp+0]", "cmp~[yte ptr [rax+0],0", "setnz~al"]], [1, 0, 251, 0, 0, 3, 0, 1, 13, -1, 0.06236044657097289, ["cmp     [rsp+0E8h+quoting_style], 2", "lea     r15, [len+1]", "jz      loc_7D79"], ["cmp~[rsp+0],0", "lea~r15,[len+0]", "jz~FOO"]], [1, 0, 251, 0, 0, 3, 0, 0, 15, -1, 0.034241197399092135, ["mov     rax, 7000A38200000000h", "bt      rax, rbx", "jnb     loc_79A0"], ["mov~rax,0", "bt~rax,rbx", "jnb~FOO"]], [0, 0, 251, 0, 0, 2, 1, 1, 11, -1, 0.03204617020406494, ["test    buffersize_0, buffersize_0", "jz      loc_7D40"], ["test~buffersize_0,buffersize_0", "jz~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 16, -1, 0.03127223653539443, ["cmp     [rsp+0E8h+c_and_shell_quote_compat], 0", "jnz     loc_8332"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort; jumptable 00000000000071C1 default case"], ["call~FOO"]], [3, 0, 286, 1, 1, 29, 2, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15d, r8d", "push    r13", "push    r12", "mov     r14, buffer", "push    rbp", "push    rbx", "mov     ebx, r9d", "mov     r13, buffersize_0", "mov     rbp, argsize_0", "and     ebx, 2", "sub     rsp, 0B8h", "mov     rax, [rsp+0E8h+quote_these_too]", "mov     [rsp+0E8h+arg], arg_0", "mov     [rsp+0E8h+quoting_style], r8d", "mov     [rsp+0E8h+flags], r9d", "mov     [rsp+0E8h+var_C8], rax", "mov     rax, [rsp+0E8h+left_quote]", "mov     [rsp+0E8h+quote_string_0], rax", "mov     rax, [rsp+0E8h+right_quote]", "mov     [rsp+0E8h+quote_string], rax", "mov     rax, fs:28h", "mov     [rsp+0E8h+var_40], rax", "xor     eax, eax", "call    ___ctype_get_mb_cur_max", "cmp     r15d, 0Ah; switch 11 cases", "mov     [rsp+0E8h+var_90], rax", "ja      loc_835F; jumptable 00000000000071C1 default case"], ["push~r15", "push~r14", "mov~r15d,r8d", "push~r13", "push~r12", "mov~r14,buffer", "push~rbp", "push~rbx", "mov~ebx,r9d", "mov~r13,buffersize_0", "mov~rbp,argsize_0", "and~ebx,0", "sub~rsp,0", "mov~rax,[rsp+0]", "mov~[rsp+0],arg_0", "mov~[rsp+0],r8d", "mov~[rsp+0],r9d", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "cmp~r15d,0", "mov~[rsp+0],rax", "ja~FOO"]], [0, 0, 251, 0, 0, 2, 0, 0, 12, -1, 0.01867255551466078, ["cmp     buffersize_0, r15", "jbe     short loc_7D4A"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 251, 0, 0, 3, 1, 1, 12, -1, 0.010220627325890484, ["xor     edx, edx", "cmp     [rsp+0E8h+orig_buffersize], 0", "jnz     loc_7D40"], ["xor~edx,edx", "cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 251, 0, 0, 3, 0, 0, 13, -1, 0.018488529014844806, ["lea     rcx, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_774C"], ["lea~rcx,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 251, 0, 0, 4, 1, 1, 10, -1, 0.0106428659060238, ["cmp     [rsp+0E8h+quoting_style], 2", "setz    dl", "test    al, al", "jz      loc_7598"], ["cmp~[rsp+0],0", "setz~dl", "test~al,al", "jz~FOO"]], [0, 0, 251, 0, 0, 3, 2, 0, 11, -1, 0.01612685560053981, ["xor     r12d, r12d", "xor     eax, eax", "nop     dword ptr [escaping+00000000h]"], ["xor~r12d,r12d", "xor~eax,eax", "nop~[word ptr [escaping+0]"]], [0, 0, 251, 0, 0, 2, 1, 1, 10, -1, 0.008054226475279107, ["test    i, i", "jnz     loc_734C"], ["test~i,i", "jnz~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 14, -1, 0.0, ["mov     byte ptr [r14+r15+1], 24h ; '$'"], ["mov~[yte ptr [r14+0],0"]], [1, 0, 251, 0, 0, 4, 2, 1, 15, -1, 0.048607532818059136, ["mov     esi, r8d", "xor     esi, 1", "and     al, sil", "jz      short loc_7B8B"], ["mov~esi,r8d", "xor~esi,0", "and~al,sil", "jz~FOO"]], [1, 0, 251, 0, 0, 4, 1, 1, 9, -1, 0.010882100355784567, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 000000000000731E cases 37,43-58,65-90,93,95,97-122", "setz    dl", "xor     eax, eax", "jmp     loc_7358"], ["cmp~[rsp+0],0", "setz~dl", "xor~eax,eax", "jmp~FOO"]], [0, 0, 251, 0, 0, 3, 1, 1, 10, -1, 0.01856804014698747, ["movzx   eax, [rsp+0E8h+c_and_shell_quote_compat]", "and     al, dl", "jz      loc_7358"], ["movzx~eax,[rsp+0]", "and~al,dl", "jz~FOO"]], [1, 0, 251, 0, 0, 4, 1, 1, 15, -1, 0.006956201693043799, ["mov     eax, r12d", "mov     ebx, 30h ; '0'", "xor     r12d, r12d", "jmp     loc_7358"], ["mov~eax,r12d", "mov~ebx,0", "xor~r12d,r12d", "jmp~FOO"]], [1, 0, 251, 0, 0, 6, 2, 1, 10, -1, 0.00027603974972396027, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 00000000000076AA cases 37,43-58,65-90,93,95,97-122", "mov     r12d, r10d", "setz    dl", "xor     r10d, r10d", "xor     eax, eax", "jmp     loc_7358"], ["cmp~[rsp+0],0", "mov~r12d,r10d", "setz~dl", "xor~r10d,r10d", "xor~eax,eax", "jmp~FOO"]], [1, 0, 251, 0, 0, 5, 3, 1, 12, -1, 0.01724941724941725, ["xor     edx, edx", "xor     r12d, r12d", "xor     eax, eax", "mov     ebx, 3Fh ; '?'", "jmp     loc_7358"], ["xor~edx,edx", "xor~r12d,r12d", "xor~eax,eax", "mov~ebx,0", "jmp~FOO"]], [1, 0, 251, 1, 0, 6, 3, 1, 21, -1, 0.02699055330634278, ["add     r15, 4", "xor     edx, edx", "xor     r12d, r12d", "xor     eax, eax", "mov     rbp, i", "jmp     loc_7358"], ["add~r15,0", "xor~edx,edx", "xor~r12d,r12d", "xor~eax,eax", "mov~rbp,i", "jmp~FOO"]], [0, 0, 251, 0, 0, 3, 0, 0, 13, -1, 0.018500797448165872, ["lea     rax, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_7D59"], ["lea~rax,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 14, -1, 0.0, ["mov     byte ptr [r14+r15+1], 5Ch ; '\\'"], ["mov~[yte ptr [r14+0],0"]], [2, 0, 251, 1, 0, 8, 2, 1, 13, -1, 0.03127325890483785, ["mov     [rsp+0E8h+orig_buffersize], r13", "add     r15, 3", "xor     eax, eax", "mov     [rsp+0E8h+encountered_single_quote], r12b", "xor     r8d, r8d", "mov     r13, rdx", "mov     ebx, 27h ; '''", "jmp     loc_7389"], ["mov~[rsp+0],r13", "add~r15,0", "xor~eax,eax", "mov~[rsp+0],r12b", "xor~r8d,r8d", "mov~r13,rdx", "mov~ebx,0", "jmp~FOO"]], [1, 0, 251, 0, 0, 4, 0, 1, 15, -1, 0.007545086492454912, ["mov     rdx, buffersize_0", "mov     byte ptr [r14+r15+2], 27h ; '''", "mov     buffersize_0, [rsp+0E8h+orig_buffersize]", "jmp     loc_7952"], ["mov~rdx,buffersize_0", "mov~[yte ptr [r14+0],0", "mov~buffersize_0,[rsp+0]", "jmp~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 18, -1, 0.0, ["mov     byte ptr [r14+r15+1], 24h ; '$'"], ["mov~[yte ptr [r14+0],0"]], [0, 0, 251, 0, 0, 3, 1, 1, 12, -1, 0.10582995951416997, ["mov     rsi, [rsp+0E8h+var_C8]", "test    rsi, rsi", "jz      short loc_7389"], ["mov~rsi,[rsp+0]", "test~rsi,rsi", "jz~FOO"]], [0, 0, 251, 0, 0, 3, 0, 0, 18, -1, 0.018316770948349898, ["lea     len, [r15+2]", "cmp     r13, len", "jbe     short loc_7B84"], ["lea~len,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [1, 0, 251, 0, 0, 2, 1, 1, 11, -1, 0.05218991534781009, ["test    byte ptr [rsp+0E8h+flags], 4", "jz      short loc_79A0"], ["test~[yte ptr [rsp+0],0", "jz~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 19, -1, 0.0, ["mov     byte ptr [r14+r15+2], 27h ; '''"], ["mov~[yte ptr [r14+0],0"]], [2, 0, 251, 1, 0, 6, 0, 0, 15, -1, 0.015580910317752423, ["mov     rax, [rsp+0E8h+arg]", "movzx   eax, byte ptr [rax+i+1]", "mov     byte ptr [rsp+0E8h+ps], al", "sub     eax, 30h ; '0'", "cmp     al, 9", "jbe     loc_7FC9"], ["mov~rax,[rsp+0]", "movzx~eax,[yte ptr [rax+0]", "mov~[yte ptr [rsp+0],al", "sub~eax,0", "cmp~al,0", "jbe~FOO"]], [0, 0, 251, 0, 0, 3, 0, 0, 14, -1, 0.022770212243896457, ["lea     rax, [i+1]", "cmp     rax, argsize_0", "jnb     short loc_779B"], ["lea~rax,[i+0]", "cmp~rax,argsize_0", "jnb~FOO"]], [1, 0, 251, 0, 0, 4, 1, 1, 14, -1, 0.03635136793031529, ["mov     eax, r12d", "mov     ebx, 30h ; '0'", "xor     r12d, r12d", "jmp     loc_7389"], ["mov~eax,r12d", "mov~ebx,0", "xor~r12d,r12d", "jmp~FOO"]], [0, 0, 251, 0, 0, 3, 0, 0, 12, -1, 0.04620291988713041, ["lea     rcx, [i+2]", "cmp     rcx, argsize_0", "jnb     short loc_79A0"], ["lea~rcx,[i+0]", "cmp~rcx,argsize_0", "jnb~FOO"]], [1, 0, 251, 1, 0, 2, 0, 0, 19, -1, 0.018145012881854987, ["add     r15, 3", "mov     r8d, eax"], ["add~r15,0", "mov~r8d,eax"]], [1, 0, 251, 0, 0, 4, 2, 1, 11, -1, 0.011256287572077046, ["xor     r12d, r12d", "xor     eax, eax", "mov     ebx, 3Fh ; '?'", "jmp     loc_7389"], ["xor~r12d,r12d", "xor~eax,eax", "mov~ebx,0", "jmp~FOO"]], [0, 0, 251, 0, 0, 2, 0, 0, 16, -1, 0.047920500552079505, ["cmp     r13, r15", "jbe     short loc_7B95"], ["cmp~r13,r15", "jbe~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 17, -1, 0.0, ["mov     byte ptr [r14+r15], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [1, 0, 251, 0, 0, 2, 0, 0, 9, -1, 0.00455772297877561, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 000000000000731E cases 35,126", "setz    dl"], ["cmp~[rsp+0],0", "setz~dl"]], [0, 0, 257, 0, 0, 2, 1, 1, 2, -1, 7.36105999263894e-05, ["test    ebx, ebx; jumptable 00000000000071C1 case 4", "jnz     loc_71C3; jumptable 00000000000071C1 case 1"], ["test~ebx,ebx", "jnz~FOO"]], [0, 0, 251, 0, 0, 1, 0, 0, 14, -1, 0.0014231382652435285, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [2, 0, 251, 1, 0, 3, 2, 0, 13, -1, 0.22329775487670225, ["xor     eax, 1", "add     i, 1", "and     eax, r8d"], ["xor~eax,0", "add~i,0", "and~eax,r8d"]], [1, 0, 251, 0, 0, 4, 1, 1, 10, -1, 7.36105999263894e-05, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 00000000000076AA cases 35,126", "setz    dl", "xor     r10d, r10d", "jmp     loc_7598"], ["cmp~[rsp+0],0", "setz~dl", "xor~r10d,r10d", "jmp~FOO"]], [0, 0, 251, 0, 0, 3, 0, 0, 17, -1, 0.04774874248558459, ["lea     rax, [r15+1]", "cmp     r13, len", "jbe     short loc_7BAB"], ["lea~rax,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [0, 0, 251, 0, 0, 2, 1, 1, 12, -1, 0.36201079622132254, ["test    al, al", "jz      short loc_73C0"], ["test~al,al", "jz~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 13, -1, 0.0, ["mov     byte ptr [r14+r15], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 251, 1, 0, 6, 1, 1, 12, -1, 0.15664335664335666, ["mov     rcx, rdi", "xor     esi, esi", "movzx   r9d, [rsp+0E8h+c_and_shell_quote_compat]", "add     rcx, i", "mov     rdi, [rsp+0E8h+arg]", "jmp     loc_7BEE"], ["mov~rcx,rdi", "xor~esi,esi", "movzx~r9d,[rsp+0]", "add~rcx,i", "mov~rdi,[rsp+0]", "jmp~FOO"]], [0, 0, 251, 0, 0, 2, 0, 0, 13, -1, 0.012489265120844069, ["cmp     buffersize_0, r15", "jbe     short loc_73AA"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [0, 0, 253, 0, 0, 2, 1, 1, 4, -1, 0.006355048460311619, ["test    buffersize_0, buffersize_0", "jnz     loc_833A"], ["test~buffersize_0,buffersize_0", "jnz~FOO"]], [1, 0, 254, 0, 0, 1, 0, 0, 3, -1, 9.81474665685192e-05, ["mov     [rsp+0E8h+backslash_escapes], 1"], ["mov~[rsp+0],0"]], [1, 0, 251, 0, 0, 1, 0, 0, 14, -1, 0.0, ["mov     byte ptr [r14+r15], 27h ; '''"], ["mov~<TAG>,0"]], [1, 0, 251, 0, 0, 4, 1, 1, 9, -1, 0.0021105794790005268, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 000000000000731E cases 33,34,36,38,40-42,59-62,91,94,96,124", "setz    dl", "xor     r12d, r12d", "jmp     short loc_75A1"], ["cmp~[rsp+0],0", "setz~dl", "xor~r12d,r12d", "jmp~FOO"]], [1, 1, 251, 0, 0, 4, 0, 1, 9, -1, 0.0021105794790005268, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 000000000000731E case 32", "mov     ebx, 20h ; ' '", "setz    dl", "jmp     short loc_75A1"], ["cmp~[rsp+0],0", "mov~ebx,<STR>", "setz~dl", "jmp~FOO"]], [1, 0, 251, 0, 0, 5, 2, 1, 10, -1, 6.0816376605850294e-05, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 00000000000076AA cases 33,34,36,38,40-42,59-62,91,94,96,124", "setz    dl", "xor     r10d, r10d", "xor     r12d, r12d", "jmp     loc_75A1"], ["cmp~[rsp+0],0", "setz~dl", "xor~r10d,r10d", "xor~r12d,r12d", "jmp~FOO"]], [0, 0, 9, 1, 0, 2, 0, 0, 11, -1, 0.012906391853760276, ["mov     rdx, r15", "sub     rax, r15"], ["mov~rdx,r15", "sub~rax,r15"]], [0, 0, 251, 0, 0, 3, 0, 0, 14, -1, 0.01231750705434916, ["lea     rax, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_73B9"], ["lea~rax,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [2, 0, 251, 1, 0, 4, 0, 0, 18, -1, 0.0, ["mov     eax, ebx", "shr     al, 6", "add     eax, 30h ; '0'", "mov     [r14+r15+1], al"], ["mov~eax,ebx", "shr~al,0", "add~eax,0", "mov~[r14+0],al"]], [1, 0, 251, 0, 0, 1, 0, 0, 15, -1, 0.0, ["mov     byte ptr [r14+r15+1], 27h ; '''"], ["mov~[yte ptr [r14+0],0"]], [1, 0, 251, 1, 0, 2, 1, 0, 15, -1, 0.012145748987854251, ["add     r15, 2", "xor     r8d, r8d"], ["add~r15,0", "xor~r8d,r8d"]], [0, 0, 251, 0, 0, 2, 0, 0, 13, -1, 0.4920009814746657, ["cmp     r15, r13", "jnb     short loc_73C9"], ["cmp~r15,r13", "jnb~FOO"]], [4, 0, 251, 3, 0, 6, 1, 0, 19, -1, 0.047405226352594775, ["and     ebx, 7", "add     i, 1", "add     r15, 3", "add     ebx, 30h ; '0'", "cmp     rbp, ilim", "jnb     loc_73C0"], ["and~ebx,0", "add~i,0", "add~r15,0", "add~ebx,0", "cmp~rbp,ilim", "jnb~FOO"]], [5, 0, 252, 0, 0, 7, 1, 1, 2, -1, 1.22684333210649e-05, ["mov     [rsp+0E8h+all_c_and_shell_quote_compat], 1; jumptable 00000000000071C1 case 3", "mov     [rsp+0E8h+encountered_single_quote], 0", "xor     r12d, r12d", "mov     [rsp+0E8h+orig_buffersize], 0", "mov     [rsp+0E8h+c_and_shell_quote_compat], 1", "mov     [rsp+0E8h+backslash_escapes], 1", "jmp     loc_71E3"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r12d,r12d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 251, 0, 0, 1, 0, 0, 14, -1, 0.0, ["mov     [r14+r15], bl"], ["mov~<TAG>,bl"]], [0, 0, 251, 0, 0, 2, 0, 0, 16, -1, 0.012489265120844069, ["cmp     buffersize_0, len", "jbe     short loc_7FD3"], ["cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 17, -1, 0.0, ["mov     byte ptr [r14+len], 30h ; '0'"], ["mov~<TAG>,0"]], [0, 0, 251, 0, 0, 1, 0, 0, 20, -1, 0.006434793276898541, ["mov     esi, edx"], ["mov~esi,edx"]], [5, 0, 252, 0, 0, 6, 1, 0, 2, -1, 0.003091645196908355, ["mov     [rsp+0E8h+all_c_and_shell_quote_compat], 1; jumptable 00000000000071C1 case 1", "mov     [rsp+0E8h+encountered_single_quote], 0", "xor     r12d, r12d", "mov     [rsp+0E8h+orig_buffersize], 0", "mov     [rsp+0E8h+c_and_shell_quote_compat], 1", "mov     [rsp+0E8h+backslash_escapes], 0"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r12d,r12d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0"]]], "func_feature": [17, 143, 186, 8, 287, 456, 7, 1036, 0.03607, 7, 40], "succs": [[27, 4], [0, 11], [248, 28], [2, 103], [12, 5], [12], [95], [96, 97, 258, 3, 166, 6, 39, 75, 109, 271, 272, 107, 84, 213, 235, 98, 29], [236], [32, 176, 100, 262, 167, 8, 44, 205, 238, 80, 72, 85, 151, 185, 273, 30, 31], [172], [10, 234], [27], [35], [13], [13], [13], [13], [13], [13], [13], [13], [13], [13], [25, 93], [24, 203], [24], [264, 34], [113], [83], [83], [173], [39], [154], [40, 33], [45, 54], [35], [35], [102, 22], [217, 61], [43, 55], [51], [41, 175], [55], [173], [54], [87], [46], [46, 47], [133, 79], [120, 49], [56, 63], [42, 51], [51], [146, 78], [57, 74], [68, 63], [74], [160, 73], [58, 60], [58], [113], [204], [204, 62], [181], [64, 181], [16], [16], [274, 63], [113], [69, 71], [69], [83], [160], [154], [83], [193], [193, 76], [88, 198], [101, 133], [173], [172], [184, 81], [199, 95], [83], [83], [221], [221, 86], [137, 111], [198], [89, 91], [89, 126], [63], [25], [178, 53], [104, 173], [95], [95], [95], [95], [95], [122], [66, 67], [200, 255], [112], [104, 37], [115], [106, 163], [200, 127], [152, 108], [138, 90], [90, 110], [246, 119], [112, 114], [112, 246], [187, 124], [115], [280], [280, 117], [180], [147, 142], [259, 38, 169, 17, 18, 212, 20, 281, 286], [123, 141], [122, 133], [113], [172], [125, 190], [264], [170, 127], [245, 247], [129, 131], [129], [202, 183], [202, 132], [132], [136, 143], [143, 135], [176, 9], [90], [65], [65, 139], [123, 149], [136, 148], [147], [243], [144, 244], [201, 52], [191], [147], [172], [128, 99], [164, 150], [99, 150], [1], [153, 155], [153], [207], [156, 158], [156], [240, 186], [161, 159], [159], [134], [162, 134], [99], [168, 214], [105, 165], [165], [172], [140, 181], [173], [196], [171, 196], [82], [204], [94, 174], [107], [14], [14], [82, 180], [82, 261], [192, 19], [191], [50, 182], [188, 207], [3], [240], [266], [194, 189], [194], [198], [266, 116], [26, 19], [92, 77], [195, 157], [157], [204], [196], [107, 7], [172], [172], [172], [191], [19], [216, 206], [213], [], [208, 215], [215], [222, 239], [209, 260], [268], [211, 21], [220, 230], [218, 87], [279], [], [200, 223], [219, 229], [229], [230], [251, 252], [224, 239], [227, 228], [59, 197], [], [225, 121], [265, 241], [227, 243], [48, 233], [232, 231], [113], [236, 231], [48], [256, 130], [113], [113, 199], [113], [113], [113], [113], [145, 242], [145], [180], [243], [247], [179, 180], [249, 254], [253, 239], [254], [283, 237], [250, 237], [180], [210, 239], [256], [180], [257, 263], [263], [232], [269, 286], [239], [264], [232], [276, 118], [267, 279], [241], [1], [275, 270], [177, 15], [268], [275], [236], [236], [236], [77], [277, 278], [118], [278], [279], [282, 36], [285, 279], [23], [36], [284, 70], [70], [154], [23]], "fname": "quotearg_buffer_restyled", "n_num": 287}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 13, 1, 1, 18, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "movsxd  r15, edi", "push    r13", "push    r12", "mov     r14, argsize", "push    rbp", "push    rbx", "mov     rbp, options", "sub     rsp, 28h", "mov     [rsp+58h+arg], arg_0", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "test    r15d, r15d", "mov     rbx, cs:slotvec_0", "mov     [rsp+58h+e], eax", "js      loc_8511"], ["push~r15", "push~r14", "movsxd~r15,edi", "push~r13", "push~r12", "mov~r14,argsize", "push~rbp", "push~rbx", "mov~rbp,options", "sub~rsp,0", "mov~[rsp+0],arg_0", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "test~r15d,r15d", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [0, 0, 6, 0, 1, 4, 0, 1, 0, -1, 0.04487179487179487, ["mov     rdi, sv; p", "call    xrealloc", "mov     sv, rax", "mov     cs:slotvec_0, sv"], ["mov~rdi,sv", "call~FOO", "mov~sv,rax", "mov~<TAG>,sv"]], [1, 0, 8, 1, 0, 6, 0, 1, 0, -1, 0.08974358974358974, ["lea     r12d, [n+1]", "lea     e_0, slotvec0", "movsxd  rsi, r12d", "shl     rsi, 4; n", "cmp     sv, rax", "jz      loc_84F0"], ["lea~r12d,[n+0]", "lea~e_0,<TAG>", "movsxd~rsi,r12d", "shl~rsi,0", "cmp~sv,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    _abort"], ["call~FOO"]], [3, 1, 4, 4, 1, 24, 1, 2, 0, -1, 0.1794871794871795, ["mov     eax, [options+4]", "shl     n, 4", "sub     rsp, 8", "add     sv, r15", "lea     r15, [options+8]", "mov     r8d, [options+0]; quoting_style", "mov     r11, [rbx]", "mov     r12, [rbx+8]", "mov     rcx, argsize; argsize", "or      eax, 1", "mov     [rsp+60h+flags], eax", "push    qword ptr [options+30h]; right_quote", "mov     r9d, eax; flags", "push    qword ptr [options+28h]; left_quote", "push    r15; quote_these_too", "mov     rsi, size_0; buffersize", "mov     rdx, [rsp+78h+arg]; arg", "mov     rdi, val; buffer", "mov     [rsp+78h+size], size_0", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+58h+size]", "cmp     r11, qsize", "ja      short loc_84D1"], ["mov~eax,[options+0]", "shl~n,0", "sub~rsp,0", "add~sv,r15", "lea~r15,[options+0]", "mov~r8d,[options+0]", "mov~r11,<TAG>", "mov~r12,[rbx+0]", "mov~rcx,argsize", "or~eax,0", "mov~[rsp+0],eax", "push~[word ptr [options+0]", "mov~r9d,eax", "push~[word ptr [options+0]", "push~r15", "mov~rsi,size_0", "mov~rdx,[rsp+0]", "mov~rdi,val", "mov~[rsp+0],size_0", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,qsize", "ja~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 0, 2, 0.07051282051282051, ["cmp     cs:nslots, r15d", "jg      short loc_8415"], ["cmp~<TAG>,r15d", "jg~FOO"]], [2, 0, 5, 4, 1, 10, 1, 1, 0, -1, 0.1282051282051282, ["movsxd  rdi, cs:nslots", "mov     edx, r12d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, r12d"], ["movsxd~rdi,<TAG>", "mov~edx,r12d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,r12d"]], [0, 0, 2, 0, 1, 4, 0, 1, 0, -1, 0.0, ["mov     rdi, val; ptr", "mov     [rsp+58h+size], size_0", "call    _free", "mov     rsi, [rsp+58h+size]"], ["mov~rdi,val", "mov~[rsp+0],size_0", "call~FOO", "mov~rsi,[rsp+0]"]], [0, 0, 3, 0, 0, 5, 0, 1, 0, -1, 0.10256410256410256, ["lea     rsi, [qsize+1]", "lea     qsize, slot0", "cmp     val, rax", "mov     [rbx], size_0", "jz      short loc_848F"], ["lea~rsi,[qsize+0]", "lea~qsize,<TAG>", "cmp~val,rax", "mov~<TAG>,size_0", "jz~FOO"]], [0, 0, 6, 0, 1, 7, 1, 2, 0, -1, 0.04487179487179487, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     sv, rax", "mov     cs:slotvec_0, sv", "movups  xmmword ptr [sv], xmm0", "jmp     loc_83ED"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~sv,rax", "mov~<TAG>,sv", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 1, 1, 2, 2, 17, 0, 2, 0, -1, 0.01282051282051282, ["mov     rdi, rsi; n", "mov     [rsp+58h+size], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, [options+0]; quoting_style", "push    qword ptr [options+30h]; right_quote", "push    qword ptr [options+28h]; left_quote", "mov     rcx, argsize; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+78h+flags]; flags", "mov     rdi, rax; buffer", "mov     rdx, [rsp+78h+arg]; arg", "mov     rsi, [rsp+78h+size]; buffersize", "mov     val, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,[options+0]", "push~[word ptr [options+0]", "push~[word ptr [options+0]", "mov~rcx,argsize", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~val,rax", "call~FOO", "add~rsp,<STR>"]], [1, 0, 10, 0, 0, 2, 0, 1, 0, 1, 0.0641025641025641, ["cmp     r15d, 7FFFFFFFh", "jz      loc_8516"], ["cmp~r15d,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 0, 1, 0, 11, 0, 0, 0, -1, 0.0, ["mov     eax, [rsp+58h+e]", "mov     [r13+0], eax", "add     rsp, 28h", "mov     rax, val", "pop     rbx", "pop     options", "pop     val", "pop     r13", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~[r13+0],eax", "add~rsp,0", "mov~rax,val", "pop~rbx", "pop~options", "pop~val", "pop~r13", "pop~argsize", "pop~r15", "retn"]]], "func_feature": [10, 4, 17, 0, 14, 17, 13, 112, 0.05266, 4, 13], "succs": [[3, 5], [6], [1, 9], [], [8, 13], [11, 4], [4], [10], [10, 7], [6], [13], [2, 12], [], []], "fname": "quotearg_n_options", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 0, 0, 2, 18, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, o", "call    ___errno_location", "mov     r12d, [p]", "mov     rbp, p", "lea     p, default_quoting_options", "test    o, o", "mov     esi, 38h ; '8'; s", "cmovz   o, p", "mov     rdi, rbx; p", "call    xmemdup", "mov     [rbp+0], r12d", "pop     rbx", "pop     rbp", "pop     e", "retn"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,o", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,p", "lea~p,<TAG>", "test~o,o", "mov~esi,0", "cmovz~o,p", "mov~rdi,rbx", "call~FOO", "mov~[rbp+0],r12d", "pop~rbx", "pop~rbp", "pop~e", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 18, 0.0, 1, 0], "succs": [[]], "fname": "clone_quoting_options", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     eax, [rdi]", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~eax,<TAG>", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "get_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     [rdi], esi", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~<TAG>,esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[4, 0, 0, 1, 0, 19, 6, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    p, p", "mov     ecx, esi", "cmovz   p, rax", "mov     eax, esi", "and     ecx, 1Fh", "shr     al, 5", "movzx   eax, al", "lea     p, [p+rax*4+8]", "mov     esi, [p]", "mov     eax, esi", "shr     eax, cl", "xor     edx, eax", "and     eax, 1", "and     edx, 1", "shl     edx, cl", "xor     edx, esi", "mov     [p], edx", "retn"], ["lea~rax,<TAG>", "test~p,p", "mov~ecx,esi", "cmovz~p,rax", "mov~eax,esi", "and~ecx,0", "shr~al,0", "movzx~eax,al", "lea~p,[p+0]", "mov~esi,<TAG>", "mov~eax,esi", "shr~eax,cl", "xor~edx,eax", "and~eax,0", "and~edx,0", "shl~edx,cl", "xor~edx,esi", "mov~<TAG>,edx", "retn"]]], "func_feature": [0, 6, 0, 0, 1, 0, 0, 19, 0.0, 1, 1], "succs": [[]], "fname": "set_char_quoting", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0.0, ["lea     r, default_quoting_options", "test    o, o", "cmovz   o, r", "mov     eax, [o+4]", "mov     [o+4], esi", "retn"], ["lea~r,<TAG>", "test~o,o", "cmovz~o,r", "mov~eax,[o+0]", "mov~[o+0],esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 6, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_flags", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 0, 1, 1, 2, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]], [1, 0, 3, 0, 0, 6, 2, 1, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "test    left_quote, left_quote", "mov     dword ptr [o], 0Ah", "jz      short loc_8627"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "test~left_quote,left_quote", "mov~<TAG>,0", "jz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, 0, 0.16666666666666666, ["test    right_quote, right_quote", "jz      short loc_8627"], ["test~right_quote,right_quote", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["mov     [o+28h], left_quote", "mov     [o+30h], right_quote", "retn"], ["mov~[o+0],left_quote", "mov~[o+0],right_quote", "retn"]]], "func_feature": [1, 3, 3, 0, 4, 4, 0, 13, 0.04167, 1, 1], "succs": [[], [0, 2], [0, 3], []], "fname": "set_custom_quoting", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[3, 0, 0, 3, 2, 39, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "lea     r, default_quoting_options", "push    r13", "push    r12", "mov     r13, buffer", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, buffersize", "mov     r15, arg", "sub     rsp, 18h", "test    o, o", "cmovz   rbx, r", "mov     [rsp+48h+argsize], argsize_0", "call    ___errno_location", "mov     r12d, [r]", "mov     rbp, r", "lea     r, [p+8]", "sub     rsp, 8", "mov     r9d, [p+4]; flags", "push    qword ptr [p+30h]; right_quote", "mov     r8d, [p]; quoting_style", "push    qword ptr [p+28h]; left_quote", "mov     rdx, arg; arg", "push    r; quote_these_too", "mov     rcx, [rsp+68h+argsize]; argsize", "mov     rsi, buffersize; buffersize", "mov     rdi, buffer; buffer", "call    quotearg_buffer_restyled", "mov     [rbp+0], r12d", "add     rsp, 38h", "pop     p", "pop     rbp", "pop     e", "pop     buffer", "pop     buffersize", "pop     arg", "retn"], ["push~r15", "push~r14", "lea~r,<TAG>", "push~r13", "push~r12", "mov~r13,buffer", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,buffersize", "mov~r15,arg", "sub~rsp,0", "test~o,o", "cmovz~rbx,r", "mov~[rsp+0],argsize_0", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,r", "lea~r,[p+0]", "sub~rsp,0", "mov~r9d,[p+0]", "push~[word ptr [p+0]", "mov~r8d,<TAG>", "push~[word ptr [p+0]", "mov~rdx,arg", "push~r", "mov~rcx,[rsp+0]", "mov~rsi,buffersize", "mov~rdi,buffer", "call~FOO", "mov~[rbp+0],r12d", "add~rsp,0", "pop~p", "pop~rbp", "pop~e", "pop~buffer", "pop~buffersize", "pop~arg", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 39, 0.0, 1, 3], "succs": [[]], "fname": "quotearg_buffer", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 0, 1, 0, 9, 0, 0, 0, 0, 0.0, ["mov     rax, [rsp+68h+var_58]", "add     rsp, 38h", "pop     p", "pop     flags", "pop     size", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["mov~rax,[rsp+0]", "add~rsp,0", "pop~p", "pop~flags", "pop~size", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [3, 2, 2, 5, 4, 59, 7, 5, 0, 0, 0.0, ["push    r15", "push    r14", "lea     rax, default_quoting_options", "push    r13", "push    r12", "mov     r12, size", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, arg", "mov     r15, argsize", "sub     rsp, 38h", "test    o, o", "cmovz   rbx, rax", "xor     ebp, ebp", "call    ___errno_location", "test    size, size", "mov     r13, rax", "mov     eax, [rax]", "setz    bpl", "or      ebp, [p+4]", "lea     r10, [p+8]", "sub     rsp, 8", "mov     r8d, [p]; quoting_style", "mov     rcx, argsize; argsize", "mov     [rsp+70h+e], eax", "push    qword ptr [p+30h]; right_quote", "mov     rdx, arg; arg", "push    qword ptr [p+28h]; left_quote", "push    r10; quote_these_too", "xor     esi, esi; buffersize", "mov     r9d, ebp; flags", "xor     edi, edi; buffer", "mov     [rsp+88h+quote_these_too], r10", "call    quotearg_buffer_restyled", "lea     rsi, [rax+1]", "mov     [rsp+88h+var_40], rax", "add     rsp, 20h", "mov     rdi, bufsize_0; n", "mov     [rsp+68h+bufsize], bufsize_0", "call    xmalloc", "mov     [rsp+68h+var_58], rax", "sub     rsp, 8", "push    qword ptr [p+30h]; right_quote", "push    qword ptr [p+28h]; left_quote", "mov     r10, [rsp+80h+quote_these_too]", "mov     r9d, ebp; flags", "mov     r8d, [p]; quoting_style", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "mov     rdi, rax; buffer", "push    r10; quote_these_too", "mov     rsi, [rsp+88h+bufsize]; buffersize", "call    quotearg_buffer_restyled", "mov     eax, [rsp+88h+e]", "add     rsp, 20h", "test    size, size", "mov     [r13+0], eax", "jz      short loc_877F"], ["push~r15", "push~r14", "lea~rax,<TAG>", "push~r13", "push~r12", "mov~r12,size", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,arg", "mov~r15,argsize", "sub~rsp,0", "test~o,o", "cmovz~rbx,rax", "xor~ebp,ebp", "call~FOO", "test~size,size", "mov~r13,rax", "mov~eax,<TAG>", "setz~bpl", "or~ebp,[p+0]", "lea~r10,[p+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~[rsp+0],eax", "push~[word ptr [p+0]", "mov~rdx,arg", "push~[word ptr [p+0]", "push~r10", "xor~esi,esi", "mov~r9d,ebp", "xor~edi,edi", "mov~[rsp+0],r10", "call~FOO", "lea~rsi,[rax+0]", "mov~[rsp+0],rax", "add~rsp,<STR>", "mov~rdi,bufsize_0", "mov~[rsp+0],bufsize_0", "call~FOO", "mov~[rsp+0],rax", "sub~rsp,0", "push~[word ptr [p+0]", "push~[word ptr [p+0]", "mov~r10,[rsp+0]", "mov~r9d,ebp", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~rdx,arg", "mov~rdi,rax", "push~r10", "mov~rsi,[rsp+0]", "call~FOO", "mov~eax,[rsp+0]", "add~rsp,<STR>", "test~size,size", "mov~[r13+0],eax", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     r11, [rsp+68h+var_40]", "mov     [size], r11"], ["mov~r11,[rsp+0]", "mov~<TAG>,r11"]]], "func_feature": [4, 7, 5, 2, 3, 3, 1, 70, 0.0, 1, 6], "succs": [[], [0, 2], [0]], "fname": "quotearg_alloc_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rcx, o", "xor     edx, edx", "jmp     quotearg_alloc_mem"], ["mov~rcx,o", "xor~edx,edx", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[], [0]], "fname": "quotearg_alloc", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 4, 0, 0, 4, 0, 1, 0, 0, 0.2857142857142857, ["mov     rdi, [sv+8]; ptr", "lea     rbx, slot0", "cmp     rdi, rbx", "jz      short loc_8819"], ["mov~rdi,[sv+0]", "lea~rbx,<TAG>", "cmp~rdi,rbx", "jz~FOO"]], [1, 0, 7, 0, 0, 7, 0, 1, 0, 3, 0.0, ["mov     eax, cs:nslots", "push    r12", "mov     r12, cs:slotvec_0", "push    rbp", "push    rbx", "cmp     eax, 1", "jle     short loc_87F1"], ["mov~eax,<TAG>", "push~r12", "mov~r12,<TAG>", "push~rbp", "push~rbx", "cmp~eax,0", "jle~FOO"]], [1, 0, 6, 1, 1, 5, 0, 2, 2, 3, 0.11904761904761904, ["mov     rdi, [rbx]; ptr", "add     rbx, 10h", "call    _free", "cmp     rbx, rbp", "jnz     short loc_87E0"], ["mov~rdi,<TAG>", "add~rbx,0", "call~FOO", "cmp~rbx,rbp", "jnz~FOO"]], [1, 0, 0, 0, 0, 5, 0, 0, 3, 0, 0.0, ["pop     rbx", "mov     cs:nslots, 1", "pop     rbp", "pop     sv", "retn"], ["pop~rbx", "mov~<TAG>,0", "pop~rbp", "pop~sv", "retn"]], [0, 0, 2, 0, 0, 3, 0, 1, 2, 1, 0.23809523809523808, ["lea     rbx, slotvec0", "cmp     sv, rbx", "jz      short loc_8834"], ["lea~rbx,<TAG>", "cmp~sv,rbx", "jz~FOO"]], [0, 0, 1, 0, 1, 3, 0, 1, 3, 1, 0.0, ["mov     rdi, sv; ptr", "call    _free", "mov     cs:slotvec_0, rbx"], ["mov~rdi,sv", "call~FOO", "mov~<TAG>,rbx"]], [1, 0, 3, 0, 1, 3, 0, 1, 2, 2, 0.0, ["call    _free", "mov     cs:slotvec0.size, 100h", "mov     cs:slotvec0.val, rbx"], ["call~FOO", "mov~<TAG>,0", "mov~<TAG>,rbx"]], [2, 0, 6, 2, 0, 5, 0, 0, 1, 4, 0.023809523809523808, ["sub     eax, 2", "lea     rbx, [sv+18h]", "shl     rax, 4", "lea     rbp, [sv+rax+28h]", "nop     word ptr [rax+rax+00000000h]"], ["sub~eax,0", "lea~rbx,[sv+0]", "shl~rax,0", "lea~rbp,[sv+0]", "nop~[ord ptr [rax+0]"]]], "func_feature": [3, 0, 7, 0, 8, 11, 0, 35, 0.08333, 5, 3], "succs": [[4, 6], [0, 7], [0, 2], [], [3, 5], [3], [4], [2]], "fname": "quotearg_free", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rdx,0", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_n", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_n_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options; options", "mov     rsi, arg; arg", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "xor     edi, edi; n", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rsi,arg", "mov~rdx,0", "xor~edi,edi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 1, 0], "succs": [[1], []], "fname": "quotearg", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options; options", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "xor     edi, edi; n", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rdx,argsize", "mov~argsize,arg", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [8, 0, 2, 0, 1, 15, 1, 2, 1, 0, 0.16666666666666666, ["mov     [rsp+48h+o.style], esi", "mov     rcx, rsp; options", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     s, arg; arg", "mov     qword ptr [rsp+48h+o.flags], 0", "mov     qword ptr [rsp+48h+o.quote_these_too+4], 0", "mov     qword ptr [rsp+48h+o.quote_these_too+0Ch], 0", "mov     qword ptr [rsp+48h+o.quote_these_too+14h], 0", "mov     qword ptr [rsp+48h+o.quote_these_too+1Ch], 0", "mov     [rsp+48h+o.left_quote+4], 0", "mov     dword ptr [rsp+48h+o.right_quote+4], 0", "call    quotearg_n_options", "mov     rcx, [rsp+48h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_8949"], ["mov~<TAG>,esi", "mov~rcx,rsp", "mov~rdx,0", "mov~s,arg", "mov~[word ptr [rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],0", "mov~[word ptr [rsp+0],0", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 1, 4, 1, 0, 7, 1, 1, 0, 0, 0.0, ["sub     rsp, 48h", "mov     rax, arg", "mov     arg, fs:28h", "mov     [rsp+48h+var_10], arg", "xor     edx, edx", "cmp     esi, 0Ah", "jz      short loc_8944"], ["sub~rsp,<STR>", "mov~rax,arg", "mov~arg,<TAG>", "mov~[rsp+0],arg", "xor~edx,edx", "cmp~esi,0", "jz~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 2, 0, 0.0, ["add     rsp, 48h", "retn"], ["add~rsp,<STR>", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [3, 2, 5, 1, 5, 4, 2, 26, 0.03333, 1, 2], "succs": [[], [0, 3], [1, 4], [], []], "fname": "quotearg_n_style", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 1, 4, 1, 0, 8, 1, 1, 0, 2, 0.0, ["sub     rsp, 48h", "mov     rax, arg", "mov     arg, argsize; argsize", "mov     argsize, fs:28h", "mov     [rsp+48h+var_10], argsize", "xor     ecx, ecx", "cmp     esi, 0Ah", "jz      short loc_89D0"], ["sub~rsp,<STR>", "mov~rax,arg", "mov~arg,argsize", "mov~argsize,<TAG>", "mov~[rsp+0],argsize", "xor~ecx,ecx", "cmp~esi,0", "jz~FOO"]], [7, 0, 2, 0, 1, 14, 1, 2, 1, 1, 0.16666666666666666, ["mov     [rsp+48h+o.style], esi", "mov     rcx, rsp; options", "mov     s, arg; arg", "mov     qword ptr [rsp+48h+o.flags], 0", "mov     qword ptr [rsp+48h+o.quote_these_too+4], 0", "mov     qword ptr [rsp+48h+o.quote_these_too+0Ch], 0", "mov     qword ptr [rsp+48h+o.quote_these_too+14h], 0", "mov     qword ptr [rsp+48h+o.quote_these_too+1Ch], 0", "mov     [rsp+48h+o.left_quote+4], 0", "mov     dword ptr [rsp+48h+o.right_quote+4], 0", "call    quotearg_n_options", "mov     rdx, [rsp+48h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_89D5"], ["mov~<TAG>,esi", "mov~rcx,rsp", "mov~s,arg", "mov~[word ptr [rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],0", "mov~[word ptr [rsp+0],0", "call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 2, -1, 0.0, ["add     rsp, 48h", "retn"], ["add~rsp,<STR>", "retn"]]], "func_feature": [3, 2, 5, 1, 5, 4, 2, 26, 0.03333, 1, 2], "succs": [[], [0, 2], [3, 4], [], []], "fname": "quotearg_n_style_mem", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 1, 1, 0, 0, 0.0, ["mov     rdx, arg; arg", "mov     esi, edi; s", "xor     edi, edi; n", "jmp     quotearg_n_style"], ["mov~rdx,arg", "mov~esi,edi", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 18, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "quotearg_style", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["mov     rcx, argsize; argsize", "mov     argsize, arg; arg", "mov     esi, edi; s", "xor     edi, edi; n", "jmp     quotearg_n_style_mem"], ["mov~rcx,argsize", "mov~argsize,arg", "mov~esi,edi", "xor~edi,edi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_style_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 1, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 48h", "retn"], ["add~rsp,<STR>", "retn"]], [3, 1, 2, 2, 1, 35, 6, 2, 0, 1, 0.0, ["sub     rsp, 48h", "mov     ecx, edx", "mov     rax, fs:28h", "mov     [rsp+48h+var_10], rax", "xor     eax, eax", "mov     rax, cs:default_quoting_options.right_quote", "mov     r8, rsp", "and     ecx, 1Fh", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     [rsp+48h+options.right_quote], rax", "mov     eax, edx", "movaps  xmmword ptr [rsp+48h+options.style], xmm0", "shr     al, 5", "movzx   eax, al", "lea     r9, [r8+rax*4+8]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "movaps  xmmword ptr [rsp+48h+options.quote_these_too+8], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+48h+options.quote_these_too+18h], xmm0", "mov     edx, [r9]", "mov     eax, edx", "shr     eax, cl", "not     eax", "and     eax, 1", "shl     eax, cl", "mov     rcx, r8; options", "xor     eax, edx", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "mov     [r9], eax", "xor     edi, edi; n", "call    quotearg_n_options", "mov     rsi, [rsp+48h+var_10]", "xor     rsi, fs:28h", "jnz     short loc_8A93"], ["sub~rsp,<STR>", "mov~ecx,edx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "mov~r8,rsp", "and~ecx,0", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "mov~eax,edx", "movaps~<TAG>,xmm0", "shr~al,0", "movzx~eax,al", "lea~r9,[r8+0]", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "mov~edx,<TAG>", "mov~eax,edx", "shr~eax,cl", "not~eax", "and~eax,0", "shl~eax,cl", "mov~rcx,r8", "xor~eax,edx", "mov~rdx,argsize", "mov~argsize,arg", "mov~<TAG>,eax", "xor~edi,edi", "call~FOO", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 6, 3, 1, 3, 2, 3, 38, 0.0, 5, 3], "succs": [[], [0, 2], []], "fname": "quotearg_char_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["movsx   edx, sil", "mov     ch_0, 0FFFFFFFFFFFFFFFFh", "jmp     quotearg_char_mem"], ["movsx~edx,sil", "mov~ch_0,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_char", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 1, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     edx, 3Ah ; ':'; ch_0", "mov     rsi, 0FFFFFFFFFFFFFFFFh; argsize", "jmp     quotearg_char_mem"], ["mov~edx,<STR>", "mov~rsi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 1, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_colon", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     edx, 3Ah ; ':'; ch_0", "jmp     quotearg_char_mem"], ["mov~edx,<STR>", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_colon_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [8, 0, 2, 0, 1, 15, 1, 2, 1, 0, 0.16666666666666666, ["mov     [rsp+48h+options.style], esi", "mov     rcx, rsp; options", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     s, arg; arg", "mov     qword ptr [rsp+48h+options.flags], 0", "mov     qword ptr [rsp+48h+options.quote_these_too+4], 4000000h", "mov     qword ptr [rsp+48h+options.quote_these_too+0Ch], 0", "mov     qword ptr [rsp+48h+options.quote_these_too+14h], 0", "mov     qword ptr [rsp+48h+options.quote_these_too+1Ch], 0", "mov     [rsp+48h+options.left_quote+4], 0", "mov     dword ptr [rsp+48h+options.right_quote+4], 0", "call    quotearg_n_options", "mov     rcx, [rsp+48h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_8B69"], ["mov~<TAG>,esi", "mov~rcx,rsp", "mov~rdx,0", "mov~s,arg", "mov~[word ptr [rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],0", "mov~[word ptr [rsp+0],0", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 1, 4, 1, 0, 7, 1, 1, 0, 0, 0.0, ["sub     rsp, 48h", "mov     rax, arg", "mov     arg, fs:28h", "mov     [rsp+48h+var_10], arg", "xor     edx, edx", "cmp     esi, 0Ah", "jz      short loc_8B64"], ["sub~rsp,<STR>", "mov~rax,arg", "mov~arg,<TAG>", "mov~[rsp+0],arg", "xor~edx,edx", "cmp~esi,0", "jz~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 2, 0, 0.0, ["add     rsp, 48h", "retn"], ["add~rsp,<STR>", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [3, 2, 5, 1, 5, 4, 7, 26, 0.03333, 1, 2], "succs": [[], [0, 3], [1, 4], [], []], "fname": "quotearg_n_style_colon", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 1, 5, 1, 0, 16, 2, 1, 0, 0, 0.0, ["sub     rsp, 48h", "mov     r9, arg", "mov     arg, cs:default_quoting_options.right_quote", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+48h+var_10], rax", "xor     eax, eax", "movaps  [rsp+48h+var_48], xmm0", "test    left_quote_0, left_quote_0", "mov     [rsp+48h+right_quote], rcx", "mov     dword ptr [rsp+48h+var_48], 0Ah", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "movaps  [rsp+48h+var_38], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+20h], xmm0", "jz      short loc_8BF7"], ["sub~rsp,<STR>", "mov~r9,arg", "mov~arg,<TAG>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~<TAG>,xmm0", "test~left_quote_0,left_quote_0", "mov~[rsp+0],rcx", "mov~<TAG>,0", "movdqa~xmm0,<TAG>", "movaps~[rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 0, 2, 0.15000000000000002, ["test    right_quote_0, right_quote_0", "jz      short loc_8BF7"], ["test~right_quote_0,right_quote_0", "jz~FOO"]], [0, 0, 2, 0, 1, 9, 1, 2, 0, 1, 0.2, ["mov     [rsp+48h+left_quote], left_quote_0", "mov     [rsp+48h+right_quote], right_quote_0", "mov     rcx, rsp; options", "mov     right_quote_0, argsize; argsize", "mov     left_quote_0, arg; arg", "call    quotearg_n_options", "mov     rdi, [rsp+48h+var_10]", "xor     rdi, fs:28h", "jnz     short loc_8BFC"], ["mov~[rsp+0],left_quote_0", "mov~[rsp+0],right_quote_0", "mov~rcx,rsp", "mov~right_quote_0,argsize", "mov~left_quote_0,arg", "call~FOO", "mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "jnz~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 48h", "retn"], ["add~rsp,<STR>", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 4, 6, 3, 6, 6, 3, 31, 0.05833, 5, 2], "succs": [[1, 4], [2, 4], [3, 5], [], [], []], "fname": "quotearg_n_custom_mem", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     r8, 0FFFFFFFFFFFFFFFFh", "jmp     quotearg_n_custom_mem"], ["mov~r8,0", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[], [0]], "fname": "quotearg_n_custom", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 1, 0, 0, 6, 1, 1, 0, 0, 0.0, ["mov     rcx, arg; arg", "mov     r8, 0FFFFFFFFFFFFFFFFh; argsize", "mov     arg, right_quote; right_quote", "mov     right_quote, left_quote; left_quote", "xor     edi, edi; n", "jmp     quotearg_n_custom_mem"], ["mov~rcx,arg", "mov~r8,0", "mov~arg,right_quote", "mov~right_quote,left_quote", "xor~edi,edi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 6, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_custom", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 6, 1, 1, 0, 0, 0.0, ["mov     r8, argsize; argsize", "mov     argsize, arg; arg", "mov     arg, right_quote; right_quote", "mov     right_quote, left_quote; left_quote", "xor     edi, edi; n", "jmp     quotearg_n_custom_mem"], ["mov~r8,argsize", "mov~argsize,arg", "mov~arg,right_quote", "mov~right_quote,left_quote", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 6, 0.0, 0, 0], "succs": [[], [0]], "fname": "quotearg_custom_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["lea     rcx, quote_quoting_options", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 1, 0], "succs": [[], [0]], "fname": "quote_n_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["lea     rcx, quote_quoting_options; options", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "xor     edi, edi; n", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rdx,argsize", "mov~argsize,arg", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 1, 0], "succs": [[], [0]], "fname": "quote_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["lea     rcx, quote_quoting_options", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rdx,0", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 3, 3, 0.0, 1, 0], "succs": [[], [0]], "fname": "quote_n", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["lea     rcx, quote_quoting_options; options", "mov     rsi, arg; arg", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "xor     edi, edi; n", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rsi,arg", "mov~rdx,0", "xor~edi,edi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 7, 5, 0.0, 1, 0], "succs": [[1], []], "fname": "quote", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 0, 0, 4, 12, 3, 4, 0, 0, 0.0, ["lea     rsi, aUnableToDispla; \"unable to display error message\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rdx, rbx; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "call    _abort"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO", "call~FOO"]], [0, 0, 5, 0, 1, 14, 1, 2, 0, 0, 0.0, ["push    r14", "push    r13", "mov     r13d, esi", "push    r12", "push    rbp", "mov     r12d, edi", "push    rbx", "mov     errnum, args; args", "mov     status, format; format", "mov     rbp, file", "mov     r14d, ecx", "call    xvasprintf", "test    message, message", "jz      short loc_8D57"], ["push~r14", "push~r13", "mov~r13d,esi", "push~r12", "push~rbp", "mov~r12d,edi", "push~rbx", "mov~errnum,args", "mov~status,format", "mov~rbp,file", "mov~r14d,ecx", "call~FOO", "test~message,message", "jz~FOO"]], [0, 0, 1, 0, 1, 15, 1, 2, 2, 0, 0.05, ["lea     r8, aLuBytesSCopied+1Bh; format", "mov     edi, r12d; status", "mov     r9, message", "mov     ecx, r14d; lineno", "mov     rdx, file; fname", "mov     esi, r13d; errnum", "xor     eax, eax", "call    _error_at_line", "mov     rdi, message; ptr", "pop     message", "pop     file", "pop     status", "pop     errnum", "pop     line_number", "jmp     _free"], ["lea~r8,<TAG>", "mov~edi,r12d", "mov~r9,message", "mov~ecx,r14d", "mov~rdx,file", "mov~esi,r13d", "xor~eax,eax", "call~FOO", "mov~rdi,message", "pop~message", "pop~file", "pop~status", "pop~errnum", "pop~line_number", "jmp~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 1, 0, 0.15000000000000002, ["test    file, file", "mov     rbx, message", "jz      short loc_8D30"], ["test~file,file", "mov~rbx,message", "jz~FOO"]], [0, 0, 1, 0, 1, 13, 1, 2, 2, 0, 0.05, ["lea     rdx, aLuBytesSCopied+1Bh; format", "mov     edi, r12d; status", "mov     rcx, message", "mov     esi, r13d; errnum", "xor     eax, eax", "call    _error", "mov     rdi, message; ptr", "pop     message", "pop     file", "pop     status", "pop     errnum", "pop     line_number", "jmp     _free"], ["lea~rdx,<TAG>", "mov~edi,r12d", "mov~rcx,message", "mov~esi,r13d", "xor~eax,eax", "call~FOO", "mov~rdi,message", "pop~message", "pop~file", "pop~status", "pop~errnum", "pop~line_number", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0.0, [], []]], "func_feature": [7, 7, 11, 0, 6, 6, 1, 57, 0.04167, 2, 0], "succs": [[], [0, 3], [5], [2, 4], [5], []], "fname": "verror_at_line", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 5, 2, 1, 0, 0, 0.0, ["mov     r8, format; format", "mov     r9, args; args", "xor     edx, edx; file", "xor     ecx, ecx; line_number", "jmp     verror_at_line"], ["mov~r8,format", "mov~r9,args", "xor~edx,edx", "xor~ecx,ecx", "jmp~FOO"]]], "func_feature": [0, 2, 1, 0, 2, 1, 1, 5, 0.0, 0, 0], "succs": [[], [0]], "fname": "verror", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 2, 0, 1, 5, 1, 2, 0, 0, 0.015789473684210527, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r10, [rsp+58h+var_40]", "push    r10", "jmp     loc_8E94"], ["xor~edi,edi", "call~FOO", "mov~r10,[rsp+0]", "push~r10", "jmp~FOO"]], [1, 0, 3, 0, 0, 16, 0, 1, 3, 0, 0.015789473684210527, ["mov     r10, [authors+40h]; jumptable 0000000000008E44 default case", "mov     r9, [authors+38h]", "mov     edx, 5", "mov     rax, [authors+10h]", "mov     r8, [authors+8]", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     [rsp+58h+var_40], r10", "mov     [rsp+58h+var_48], r9", "mov     [rsp+58h+var_58], rax", "mov     [rsp+58h+var_50], r8", "mov     authors, [authors]", "jmp     loc_8F42"], ["mov~r10,[authors+0]", "mov~r9,[authors+0]", "mov~edx,0", "mov~rax,[authors+0]", "mov~r8,[authors+0]", "lea~rsi,<TAG>", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~<TAG>,rax", "mov~[rsp+0],r8", "mov~authors,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 15, 0, 0, 4, -1, 0.002631578947368421, ["mov     r10, [authors+40h]; jumptable 0000000000008E44 case 9", "mov     r9, [authors+38h]", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     rax, [authors+10h]", "mov     r8, [authors+8]", "mov     edx, 5; category", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     authors, [authors]", "mov     [rsp+58h+var_40], r10", "mov     [rsp+58h+var_48], r9", "mov     [rsp+58h+var_58], rax", "mov     [rsp+58h+var_50], r8"], ["mov~r10,[authors+0]", "mov~r9,[authors+0]", "lea~rsi,<TAG>", "mov~rax,[authors+0]", "mov~r8,[authors+0]", "mov~edx,0", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~authors,<TAG>", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~<TAG>,rax", "mov~[rsp+0],r8"]], [2, 0, 2, 1, 1, 16, 1, 1, 4, -1, 0.007894736842105263, ["mov     r9, [authors+38h]; jumptable 0000000000008E44 case 8", "mov     rax, [authors+10h]", "lea     rsi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r8, [authors+8]", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     [rsp+58h+var_48], r9", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     [rsp+58h+var_58], rax", "mov     [rsp+58h+var_50], r8", "mov     authors, [authors]", "call    _dcgettext", "sub     rsp, 8"], ["mov~r9,[authors+0]", "mov~rax,[authors+0]", "lea~rsi,<TAG>", "mov~r8,[authors+0]", "mov~edx,0", "xor~edi,edi", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~[rsp+0],r9", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~<TAG>,rax", "mov~[rsp+0],r8", "mov~authors,<TAG>", "call~FOO", "sub~rsp,0"]], [0, 0, 15, 1, 0, 4, 0, 1, 3, -1, 0.1368421052631579, ["lea     rdx, off_EA44", "movsxd  rax, dword ptr [rdx+n_authors*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [2, 0, 1, 1, 1, 15, 1, 1, 5, -1, 0.010526315789473684, ["mov     r9, [rsp+60h+var_48]", "mov     rdx, rax", "mov     rcx, rbx", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "push    r9", "push    r13", "push    r12", "push    r15", "push    r14", "mov     r9, [rsp+88h+var_58]", "mov     r8, [rsp+88h+var_50]", "call    ___fprintf_chk", "add     rsp, 30h"], ["mov~r9,[rsp+0]", "mov~rdx,rax", "mov~rcx,rbx", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "push~r9", "push~r13", "push~r12", "push~r15", "push~r14", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "call~FOO", "add~rsp,0"]], [2, 0, 0, 1, 1, 19, 1, 1, 5, -1, 0.0, ["push    r14", "mov     rdx, rax", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "pop     rax", "pop     rdx", "add     rsp, 28h", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["push~r14", "mov~rdx,rax", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "call~FOO", "pop~rax", "pop~rdx", "add~rsp,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 1, 0, 1, 11, 1, 2, 4, -1, 0.006578947368421052, ["mov     r15, [authors+20h]; jumptable 0000000000008E44 case 5", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [authors+18h]", "mov     r13, [authors+10h]", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "call    _dcgettext", "push    r15", "jmp     short loc_9056"], ["mov~r15,[authors+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "call~FOO", "push~r15", "jmp~FOO"]], [2, 0, 1, 1, 1, 9, 1, 1, 4, -1, 0.006578947368421052, ["lea     rsi, aWrittenBySSSAn; jumptable 0000000000008E44 case 4", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [authors+18h]", "mov     r13, [authors+10h]", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "call    _dcgettext", "sub     rsp, 8"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "call~FOO", "sub~rsp,0"]], [5, 0, 17, 0, 4, 20, 3, 5, 2, 1, 0.12894736842105262, ["lea     rsi, aC_0; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7E3h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     n_authors, 9; switch 10 cases", "ja      loc_9170; jumptable 0000000000008E44 default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~n_authors,0", "ja~FOO"]], [2, 0, 1, 1, 1, 16, 1, 1, 4, -1, 0.006578947368421052, ["mov     r8, [authors+8]; jumptable 0000000000008E44 case 6", "mov     n_authors, [authors+28h]", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     edx, 5; category", "mov     r13, [authors+10h]", "xor     edi, edi; domainname", "mov     authors, [authors]", "mov     [rsp+58h+var_58], r8", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r13", "push    r12", "push    r15", "push    r14"], ["mov~r8,[authors+0]", "mov~n_authors,[authors+0]", "lea~rsi,<TAG>", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~edx,0", "mov~r13,[authors+0]", "xor~edi,edi", "mov~authors,<TAG>", "mov~<TAG>,r8", "call~FOO", "sub~rsp,0", "mov~r9,r13", "push~r12", "push~r15", "push~r14"]], [3, 0, 1, 1, 1, 18, 2, 2, 4, -1, 0.002631578947368421, ["mov     authors, [authors]; jumptable 0000000000008E44 case 1", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     rcx, rbx", "mov     rdi, stream", "pop     rbx", "pop     stream", "pop     n_authors", "pop     r13", "pop     r14", "pop     r15", "mov     rdx, rax", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~authors,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~rcx,rbx", "mov~rdi,stream", "pop~rbx", "pop~stream", "pop~n_authors", "pop~r13", "pop~r14", "pop~r15", "mov~rdx,rax", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [3, 0, 1, 1, 1, 22, 2, 2, 4, -1, 0.002631578947368421, ["mov     r13, [authors+10h]; jumptable 0000000000008E44 case 3", "mov     n_authors, [authors+8]", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "mov     authors, [authors]", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdi, stream", "mov     rdx, rax", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "lea~rsi,<TAG>", "mov~authors,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdi,stream", "mov~rdx,rax", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [1, 0, 18, 0, 1, 7, 1, 2, 1, 2, 0.02236842105263158, ["mov     r8, version", "mov     version, package", "lea     package, aSS_0; \"%s %s\\n\"", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_8DDC"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 18, 0, 1, 7, 1, 1, 1, 2, 0.024999999999999998, ["mov     authors, package", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     n_authors, version", "xor     eax, eax", "mov     version, command_name", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~authors,package", "lea~package,<TAG>", "mov~n_authors,version", "xor~eax,eax", "mov~version,command_name", "mov~esi,0", "call~FOO"]], [1, 0, 20, 1, 0, 12, 1, 1, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, n_authors", "push    rbp", "push    rbx", "mov     rbp, stream", "mov     rbx, authors", "sub     rsp, 28h", "test    command_name, command_name", "jz      loc_8ED8"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,n_authors", "push~rbp", "push~rbx", "mov~rbp,stream", "mov~rbx,authors", "sub~rsp,0", "test~command_name,command_name", "jz~FOO"]], [3, 0, 1, 1, 1, 20, 2, 2, 4, -1, 0.002631578947368421, ["mov     n_authors, [authors+8]; jumptable 0000000000008E44 case 2", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "mov     authors, [authors]", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     r8, r12", "mov     rcx, rbx", "mov     rdi, stream", "mov     rdx, rax", "mov     esi, 1", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~n_authors,[authors+0]", "lea~rsi,<TAG>", "mov~authors,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~r8,r12", "mov~rcx,rbx", "mov~rdi,stream", "mov~rdx,rax", "mov~esi,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "xor~eax,eax", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 28h; jumptable 0000000000008E44 case 0", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [1, 0, 1, 0, 1, 19, 1, 2, 4, -1, 0.006578947368421052, ["mov     r9, [authors+10h]; jumptable 0000000000008E44 case 7", "mov     r13, [authors+30h]", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "mov     n_authors, [authors+28h]", "mov     r15, [authors+20h]", "mov     edx, 5; category", "mov     r14, [authors+18h]", "mov     r8, [authors+8]", "xor     edi, edi; domainname", "mov     [rsp+58h+var_50], r9", "mov     authors, [authors]", "mov     [rsp+58h+var_58], r8", "call    _dcgettext", "push    r13", "push    r12", "push    r15", "push    r14", "mov     r9, [rsp+78h+var_50]", "jmp     short loc_90F3"], ["mov~r9,[authors+0]", "mov~r13,[authors+0]", "lea~rsi,<TAG>", "mov~n_authors,[authors+0]", "mov~r15,[authors+0]", "mov~edx,0", "mov~r14,[authors+0]", "mov~r8,[authors+0]", "xor~edi,edi", "mov~[rsp+0],r9", "mov~authors,<TAG>", "mov~<TAG>,r8", "call~FOO", "push~r13", "push~r12", "push~r15", "push~r14", "mov~r9,[rsp+0]", "jmp~FOO"]], [2, 1, 0, 2, 1, 16, 1, 1, 5, -1, 0.0, ["mov     r8, [rsp+78h+var_58]", "mov     rcx, rbx", "mov     rdx, rax", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 20h", "add     rsp, 28h", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "call~FOO", "add~rsp,<STR>", "add~rsp,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [18, 21, 29, 4, 21, 29, 3, 275, 0.01905, 16, 13], "succs": [[5], [0], [0], [5], [2, 3, 7, 8, 10, 11, 12, 16, 17, 19], [17], [], [6], [6], [1, 4], [20], [18], [18], [9], [9, 18], [13, 14], [18], [], [], [20], []], "fname": "version_etc_arn", "n_num": 21}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0.08333333333333333, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 4, 0, 0, 3, 1, 1, 0, 1, 0.0, ["xor     r9d, r9d", "cmp     qword ptr [authors], 0", "jz      short loc_91DB"], ["xor~r9d,r9d", "cmp~<TAG>,0", "jz~FOO"]], [2, 0, 3, 1, 0, 3, 0, 1, 2, 1, 0.16666666666666666, ["add     n_authors, 1; n_authors", "cmp     qword ptr [authors+n_authors*8], 0", "jnz     short loc_91D0"], ["add~n_authors,0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0.25, ["jmp     version_etc_arn"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []]], "func_feature": [0, 1, 3, 0, 5, 6, 0, 8, 0.1, 0, 1], "succs": [[2], [0, 3], [2, 3], [4], []], "fname": "version_etc_ar", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 68h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 2, 0, 1, 4, 1, 2, 4, -1, 0.21428571428571427, ["call    version_etc_arn", "mov     rax, [rsp+68h+var_10]", "xor     rax, fs:28h", "jnz     short loc_9245"], ["call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 8, 0, 0, 3, 0, 1, 1, 1, 0.25, ["mov     eax, [authors]", "cmp     eax, 2Fh ; '/'", "ja      short loc_924A"], ["mov~eax,<TAG>", "cmp~eax,0", "ja~FOO"]], [2, 0, 8, 1, 0, 3, 0, 1, 4, 2, 0.125, ["add     n_authors, 1; n_authors", "cmp     n_authors, 0Ah", "jnz     short loc_9200"], ["add~n_authors,0", "cmp~n_authors,0", "jnz~FOO"]], [1, 0, 8, 1, 0, 8, 2, 0, 0, 2, 0.0, ["sub     rsp, 68h", "mov     r10, authors", "xor     r9d, r9d", "mov     rax, fs:28h", "mov     [rsp+68h+var_10], rax", "xor     eax, eax", "mov     authors, rsp; authors", "nop     dword ptr [rax]"], ["sub~rsp,0", "mov~r10,authors", "xor~r9d,r9d", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~authors,rsp", "nop~<TAG>"]], [0, 0, 8, 0, 0, 4, 1, 1, 3, 3, 0.3571428571428571, ["mov     rax, [r11]", "test    rax, rax", "mov     [r8+n_authors*8], rax", "jz      short loc_922B"], ["mov~rax,<TAG>", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [1, 0, 8, 2, 0, 4, 0, 0, 2, 4, 0.09821428571428571, ["mov     r11d, eax", "add     r11, [authors+10h]", "add     eax, 8", "mov     [authors], eax"], ["mov~r11d,eax", "add~r11,[authors+0]", "add~eax,0", "mov~<TAG>,eax"]], [0, 0, 8, 0, 0, 4, 0, 1, 2, 0, 0.09821428571428571, ["mov     r11, [authors+8]", "lea     rax, [r11+8]", "mov     [authors+8], rax", "jmp     short loc_9215"], ["mov~r11,[authors+0]", "lea~rax,[r11+0]", "mov~[authors+0],rax", "jmp~FOO"]]], "func_feature": [2, 4, 7, 1, 9, 11, 2, 33, 0.12698, 1, 5], "succs": [[], [0, 2], [], [8, 7], [1, 3], [3], [1, 4], [6], [6]], "fname": "version_etc_va", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 1, 4, 1, 2, 5, -1, 0.17777777777777778, ["call    version_etc_arn", "mov     rax, [rsp+0C8h+var_50]", "xor     rax, fs:28h", "jnz     short loc_9320"], ["call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [2, 0, 10, 2, 0, 4, 0, 0, 2, 4, 0.08333333333333334, ["mov     eax, r10d", "mov     r11d, 1", "add     r10d, 8", "add     rax, rbp"], ["mov~eax,r10d", "mov~r11d,0", "add~r10d,0", "add~rax,rbp"]], [1, 0, 10, 0, 0, 2, 0, 1, 1, 1, 0.17777777777777778, ["cmp     r10d, 2Fh ; '/'", "ja      short loc_932C"], ["cmp~r10d,0", "ja~FOO"]], [1, 2, 10, 1, 0, 20, 3, 0, 0, 2, 0.0, ["push    rbp", "push    rbx", "mov     r10d, 20h ; ' '", "xor     r11d, r11d", "sub     rsp, 0B8h", "mov     rax, fs:28h", "mov     [rsp+0C8h+var_50], rax", "xor     eax, eax", "lea     rax, [rsp+0C8h+arg_0]", "mov     [rsp+0C8h+var_28], r8", "lea     rbx, [rsp+0C8h+arg_0]", "lea     r8, [rsp+0C8h+var_A8]; authors", "mov     [rsp+0C8h+var_20], r9", "mov     [rsp+0C8h+authors.gp_offset], 20h ; ' '", "mov     [rsp+0C8h+authors.overflow_arg_area], rax", "lea     rax, [rsp+0C8h+var_48]", "xor     r9d, r9d", "mov     [rsp+0C8h+authors.reg_save_area], rax", "mov     rbp, rax", "nop     word ptr [rax+rax+00000000h]"], ["push~rbp", "push~rbx", "mov~r10d,<STR>", "xor~r11d,r11d", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "mov~[rsp+0],r8", "lea~rbx,[rsp+0]", "lea~r8,[rsp+0]", "mov~[rsp+0],r9", "mov~[rsp+0],<STR>", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "xor~r9d,r9d", "mov~[rsp+0],rax", "mov~rbp,rax", "nop~[ord ptr [rax+0]"]], [0, 0, 3, 0, 0, 2, 0, 1, 5, -1, 0.0, ["mov     [rsp+0C8h+authors.gp_offset], r10d", "jmp     short loc_9301"], ["mov~[rsp+0],r10d", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 4, -1, 0.26666666666666666, ["test    r11b, r11b", "jnz     short loc_9325"], ["test~r11b,r11b", "jnz~FOO"]], [0, 0, 10, 0, 0, 4, 1, 1, 3, 3, 0.3111111111111111, ["mov     rax, [rax]", "test    rax, rax", "mov     [r8+r9*8], rax", "jz      short loc_92FC"], ["mov~rax,<TAG>", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [1, 0, 10, 1, 0, 3, 0, 1, 2, 0, 0.08333333333333334, ["mov     rax, rbx", "add     rbx, 8", "jmp     short loc_92E6"], ["mov~rax,rbx", "add~rbx,0", "jmp~FOO"]], [2, 0, 10, 1, 0, 3, 0, 1, 4, 2, 0.07777777777777778, ["add     r9, 1; n_authors", "cmp     r9, 0Ah", "jnz     short loc_92D0"], ["add~r9,0", "cmp~r9,0", "jnz~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 6, -1, 0.0, ["add     rsp, 0B8h", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]]], "func_feature": [2, 6, 9, 5, 11, 14, 0, 49, 0.10707, 1, 6], "succs": [[], [0, 10], [7], [8, 2], [3], [1], [1, 5], [9, 6], [7], [3, 6], []], "fname": "version_etc", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[5, 0, 1, 0, 5, 29, 5, 6, 0, 0, 0.0, ["push    rbx", "lea     rsi, aReportBugsToS; \"\\nReport bugs to: %s\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "lea     rdx, aBugCoreutilsGn; \"bug-coreutils@gnu.org\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "lea     rsi, aSHomePageS; \"%s home page: <%s>\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, unk_C772", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aGeneralHelpUsi; \"General help using GNU software: <https\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "pop     rbx", "jmp     _fputs_unlocked"], ["push~rbx", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "pop~rbx", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [5, 5, 6, 0, 2, 1, 0, 29, 0.0, 7, 0], "succs": [[1], []], "fname": "emit_bug_reporting_address", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_93D5"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    _malloc", "test    p, p", "jnz     short loc_93D3"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 4, 8, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "xmalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 0, 1, 1, 2, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    xalloc_die"], ["sub~rsp,0", "call~FOO"]], [0, 0, 4, 1, 0, 6, 1, 1, 0, 0, 0.0, ["mov     rax, n", "mul     s", "mov     n, rax", "seto    al", "test    rdi, rdi", "js      short loc_93FB"], ["mov~rax,n", "mul~,s", "mov~n,rax", "seto~al", "test~rdi,rdi", "js~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 1, 0, 0.16666666666666666, ["movzx   eax, al", "test    rax, rax", "jnz     short loc_93FB"], ["movzx~eax,al", "test~rax,rax", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 2, 0, 0.16666666666666666, ["jmp     short xmalloc"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0.0, [], []]], "func_feature": [1, 2, 4, 0, 5, 5, 0, 12, 0.06667, 0, 2], "succs": [[], [0, 2], [0, 3], [4], []], "fname": "xnmalloc", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     short xmalloc"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 1, 0.0, 0, 0], "succs": [[1], []], "fname": "xcharalloc", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]], [0, 0, 3, 0, 1, 4, 1, 2, 1, 2, 0.2, ["mov     n, rbx; size", "call    _realloc", "test    p, p", "jnz     short loc_9440"], ["mov~n,rbx", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 2, 1, 0.1, ["test    n, n", "jnz     short loc_9451"], ["test~n,n", "jnz~FOO"]], [0, 0, 6, 0, 0, 4, 1, 1, 0, 3, 0.0, ["test    n, n", "push    rbx", "mov     rbx, n", "jnz     short loc_942E"], ["test~n,n", "push~rbx", "mov~rbx,n", "jnz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 1, 3, 0.03333333333333333, ["test    p, p", "jnz     short loc_9448"], ["test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 1, 4, 1, 1, 2, -1, 0.0, ["call    _free", "xor     eax, eax", "pop     n", "retn"], ["call~FOO", "xor~eax,eax", "pop~n", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [3, 5, 7, 0, 7, 8, 5, 19, 0.04762, 0, 0], "succs": [[], [0, 2], [0, 6], [1, 4], [1, 5], [], []], "fname": "xrealloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.16666666666666666, ["jmp     short xrealloc"], ["jmp~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 1, 1, 0.16666666666666666, ["movzx   eax, al", "test    rax, rax", "jnz     short loc_947B"], ["movzx~eax,al", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [0, 0, 4, 1, 0, 6, 1, 1, 0, 1, 0.0, ["mov     rax, n", "mul     s", "mov     n, rax", "seto    al", "test    rsi, rsi", "js      short loc_947B"], ["mov~rax,n", "mul~,s", "mov~n,rax", "seto~al", "test~rsi,rsi", "js~FOO"]], [1, 0, 0, 1, 1, 2, 0, 1, 1, 0, 0.0, ["sub     rsp, 8", "call    xalloc_die"], ["sub~rsp,0", "call~FOO"]]], "func_feature": [1, 2, 4, 0, 5, 5, 0, 12, 0.06667, 0, 2], "succs": [[2], [0, 4], [], [1, 4], []], "fname": "xnrealloc", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 4, 1, 0, 6, 1, 1, 0, 0, 0.125, ["mov     rax, n", "mul     s", "seto    dl", "test    rax, rax", "movzx   edx, dl", "js      short loc_94EB"], ["mov~rax,n", "mul~,s", "seto~dl", "test~rax,rax", "movzx~edx,dl", "js~FOO"]], [0, 1, 5, 1, 0, 8, 3, 1, 2, 0, 0.0, ["xor     edx, edx", "mov     eax, 80h", "xor     r8d, r8d", "div     s", "test    n, n", "setz    r8b", "lea     rcx, [r8+n]", "jmp     short loc_94D5"], ["xor~edx,edx", "mov~eax,<STR>", "xor~r8d,r8d", "div~,s", "test~n,n", "setz~r8b", "lea~rcx,<TAG>", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 1, 1, 0.041666666666666664, ["test    n, n", "jz      short loc_94F8"], ["test~n,n", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 3, -1, 0.08333333333333333, ["test    rdx, rdx", "jz      short loc_94BA"], ["test~rdx,rdx", "jz~FOO"]], [1, 0, 4, 1, 0, 5, 1, 0, 1, -1, 0.05555555555555555, ["xor     edx, edx", "mov     rax, 5555555555555554h", "div     s", "cmp     rax, n", "jbe     short loc_94EB"], ["xor~edx,edx", "mov~rax,0", "div~,s", "cmp~rax,n", "jbe~FOO"]], [0, 0, 9, 0, 0, 4, 1, 1, 0, 2, 0.0, ["test    p, p", "mov     r9, s", "mov     rcx, [pn]", "jz      short loc_94D0"], ["test~p,p", "mov~r9,s", "mov~rcx,<TAG>", "jz~FOO"]], [1, 0, 0, 1, 1, 2, 0, 1, 2, -1, 0.0, ["sub     rsp, 8", "call    xalloc_die"], ["sub~rsp,0", "call~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [0, 0, 1, 1, 0, 4, 0, 1, 3, -1, 0.09722222222222221, ["mov     [pn], n", "imul    n, s", "mov     pn, rcx", "jmp     xrealloc"], ["mov~<TAG>,n", "imul~n,s", "mov~pn,rcx", "jmp~FOO"]], [1, 0, 2, 0, 0, 3, 0, 0, 2, -1, 0.05555555555555555, ["mov     rax, n", "shr     rax, 1", "lea     n, [rax+n+1]"], ["mov~rax,n", "shr~rax,0", "lea~n,[rax+0]"]]], "func_feature": [1, 8, 7, 0, 10, 13, 0, 36, 0.04583, 0, 5], "succs": [[3, 6], [0], [0, 1], [8, 6], [9, 6], [2, 4], [], [], [7], [8]], "fname": "x2nrealloc", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 0, 1, 1, 2, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    xalloc_die"], ["sub~rsp,0", "call~FOO"]], [1, 0, 4, 0, 0, 3, 0, 1, 1, 0, 0.05, ["mov     rdx, 5555555555555553h", "cmp     rax, rdx", "ja      short loc_9561"], ["mov~rdx,0", "cmp~rax,rdx", "ja~FOO"]], [0, 1, 3, 0, 0, 5, 2, 0, 1, 0, 0.08333333333333333, ["test    rax, rax", "mov     edx, 80h", "cmovz   rax, rdx", "test    rax, rax", "jns     short loc_9542"], ["test~rax,rax", "mov~edx,<STR>", "cmovz~rax,rdx", "test~rax,rax", "jns~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 0, 0, 0.0, ["test    p, p", "mov     rax, [pn]", "jz      short loc_9550"], ["test~p,p", "mov~rax,<TAG>", "jz~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 2, 0, 0.13333333333333333, ["mov     [pn], rax", "mov     pn, rax; n", "jmp     xrealloc"], ["mov~<TAG>,rax", "mov~pn,rax", "jmp~FOO"]], [1, 0, 2, 0, 0, 3, 0, 0, 2, 0, 0.06666666666666667, ["mov     rdx, rax", "shr     rdx, 1", "lea     rax, [rdx+rax+1]"], ["mov~rdx,rax", "shr~rdx,0", "lea~rax,[rdx+0]"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0.0, [], []]], "func_feature": [1, 3, 4, 0, 7, 8, 0, 19, 0.04762, 0, 1], "succs": [[], [0, 5], [0, 4], [1, 2], [6], [4], []], "fname": "x2realloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 1, 0, 1, 8, 1, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, s", "call    xmalloc", "mov     rdx, s; n", "xor     esi, esi; c", "mov     rdi, rax; s", "pop     s", "jmp     _memset"], ["push~rbx", "mov~rbx,s", "call~FOO", "mov~rdx,s", "xor~esi,esi", "mov~rdi,rax", "pop~s", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 1, 2, 0, 2, 1, 0, 8, 0.0, 0, 0], "succs": [[1], []], "fname": "xzalloc", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 4, 2, 0, 6, 1, 1, 0, 0, 0.0, ["mov     rax, n", "sub     rsp, 8", "mul     s", "seto    dl", "test    rax, rax", "js      short loc_95B9"], ["mov~rax,n", "sub~rsp,0", "mul~,s", "seto~dl", "test~rax,rax", "js~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 0, 1, 0.16666666666666666, ["movzx   edx, dl", "test    rdx, rdx", "jnz     short loc_95B9"], ["movzx~edx,dl", "test~rdx,rdx", "jnz~FOO"]], [0, 0, 2, 0, 1, 3, 1, 2, 0, 1, 0.16666666666666666, ["call    _calloc", "test    p, p", "jz      short loc_95B9"], ["call~FOO", "test~p,p", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 3, 5, 0, 5, 6, 0, 15, 0.06667, 0, 3], "succs": [[1, 4], [2, 4], [3, 4], [], []], "fname": "xcalloc", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[2, 0, 1, 2, 1, 14, 0, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, p", "mov     p, s; n", "mov     rbx, s", "sub     rsp, 8", "call    xmalloc", "add     rsp, 8", "mov     rdx, s; n", "mov     rsi, p; src", "pop     s", "pop     p", "mov     rdi, rax; dest", "jmp     _memcpy"], ["push~rbp", "push~rbx", "mov~rbp,p", "mov~p,s", "mov~rbx,s", "sub~rsp,0", "call~FOO", "add~rsp,0", "mov~rdx,s", "mov~rsi,p", "pop~s", "pop~p", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 0, 2, 0, 2, 1, 2, 14, 0.0, 0, 2], "succs": [[1], []], "fname": "xmemdup", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 1, 0, 1, 7, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, string", "call    _strlen", "mov     rdi, string; p", "lea     rsi, [rax+1]; s", "pop     string", "jmp     short xmemdup"], ["push~rbx", "mov~rbx,string", "call~FOO", "mov~rdi,string", "lea~rsi,[rax+0]", "pop~string", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 0, 2, 0, 2, 1, 0, 7, 0.0, 0, 0], "succs": [[1], []], "fname": "xstrdup", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[2, 0, 0, 1, 3, 12, 3, 3, 0, 0, 0.0, ["lea     rsi, aMemoryExhauste_1; \"memory exhausted\"", "sub     rsp, 8", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     edi, cs:exit_failure; status", "lea     rdx, aLuBytesSCopied+1Bh; format", "mov     rcx, rax", "xor     esi, esi; errnum", "xor     eax, eax", "call    _error", "call    _abort"], ["lea~rsi,<TAG>", "sub~rsp,0", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~edi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "xor~esi,esi", "xor~eax,eax", "call~FOO", "call~FOO"]]], "func_feature": [3, 3, 3, 0, 1, 0, 9, 12, 0.0, 3, 1], "succs": [[]], "fname": "xalloc_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 9, 1, 0, 4, 0, 0, 0, 0, 0.014118792599805257, ["mov     rax, tmp", "mul     rsi", "mov     tmp, rax", "jo      loc_9A03"], ["mov~rax,tmp", "mul~,rsi", "mov~tmp,rax", "jo~FOO"]], [1, 0, 9, 1, 0, 2, 0, 1, 15, -1, 0.007302823758519961, ["sub     r8d, 1", "jnz     short loc_98F8"], ["sub~r8d,0", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 1, 0, 13, -1, 0.016877637130801686, ["mov     r8d, 4; jumptable 0000000000009826 cases 18,50", "xor     r9d, r9d"], ["mov~r8d,0", "xor~r9d,r9d"]], [1, 0, 6, 1, 0, 4, 0, 0, 13, -1, 0.005274261603375527, ["mov     edx, 2; jumptable 0000000000009826 case 53", "mov     rax, rdx", "mul     tmp", "jo      loc_991E"], ["mov~edx,0", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]], [0, 0, 50, 1, 0, 5, 0, 1, 12, 2, 0.1866277182732879, ["lea     rdx, off_EAF8", "movzx   r12d, r12b", "movsxd  rax, dword ptr [rdx+r12*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movzx~r12d,r12b", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [0, 0, 64, 0, 0, 2, 1, 1, 7, 8, 0.032132424537487825, ["test    valid_suffixes, valid_suffixes", "jz      short loc_970E"], ["test~valid_suffixes,valid_suffixes", "jz~FOO"]], [0, 0, 65, 0, 0, 2, 1, 1, 6, 9, 0.006491398896462187, ["xor     ebp, ebp", "jmp     short loc_9700"], ["xor~ebp,ebp", "jmp~FOO"]], [2, 0, 66, 0, 0, 3, 0, 1, 6, 9, 0.007356918749323812, ["cmp     eax, 22h ; '\"'", "mov     ebp, 1", "jnz     short loc_9728"], ["cmp~eax,0", "mov~ebp,0", "jnz~FOO"]], [1, 0, 63, 0, 1, 8, 2, 2, 7, 7, 0.07659850697825381, ["movsx   esi, r12b; c", "mov     rdi, valid_suffixes; s", "xor     ebp, ebp", "call    _strchr", "test    rax, rax", "mov     ebx, 1", "mov     rcx, [rsp+58h+strtol_base]", "jz      short loc_9728"], ["movsx~esi,r12b", "mov~rdi,valid_suffixes", "xor~ebp,ebp", "call~FOO", "test~rax,rax", "mov~ebx,0", "mov~rcx,[rsp+0]", "jz~FOO"]], [0, 0, 64, 0, 0, 3, 1, 1, 6, 8, 0.06870063832089149, ["movzx   r12d, byte ptr [s+0]", "test    r12b, r12b", "jz      short loc_9728"], ["movzx~r12d,[yte ptr [s+0]", "test~r12b,r12b", "jz~FOO"]], [1, 0, 6, 1, 0, 4, 0, 0, 13, -1, 0.005274261603375527, ["mov     edx, 400h; jumptable 0000000000009826 case 0", "mov     rax, rdx", "mul     tmp", "jo      short loc_991E"], ["mov~edx,0", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]], [0, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.0003245699448231094, ["add     tmp, tmp", "jmp     short loc_9850; jumptable 0000000000009826 case 33"], ["add~tmp,tmp", "jmp~FOO"]], [0, 0, 63, 0, 0, 3, 1, 1, 8, 7, 0.038299253489126904, ["movzx   r12d, byte ptr [rcx]", "test    r12b, r12b", "jnz     short loc_9787"], ["movzx~r12d,<TAG>", "test~r12b,r12b", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 16, -1, 0.0032456994482310936, ["jmp     short loc_98C5"], ["jmp~FOO"]], [1, 0, 8, 0, 0, 3, 1, 0, 13, -1, 0.016877637130801686, ["mov     r8d, 7; jumptable 0000000000009826 case 24", "xor     r9d, r9d", "nop     dword ptr [rax]"], ["mov~r8d,0", "xor~r9d,r9d", "nop~<TAG>"]], [0, 0, 3, 0, 0, 2, 0, 1, 8, -1, 0.0014605647517039922, ["mov     [val], tmp", "jmp     short loc_972D"], ["mov~<TAG>,tmp", "jmp~FOO"]], [2, 0, 51, 1, 0, 3, 0, 1, 11, 3, 0.18889970788704966, ["sub     r12d, 42h ; 'B'", "cmp     r12b, 35h ; '5'; switch 54 cases", "ja      short loc_986C; jumptable 0000000000009826 default case"], ["sub~r12d,0", "cmp~r12b,0", "ja~FOO"]], [1, 1, 52, 0, 0, 3, 0, 1, 13, 4, 0.012658227848101266, ["mov     edi, 2", "mov     esi, 3E8h", "jmp     short loc_980A"], ["mov~edi,0", "mov~esi,<STR>", "jmp~FOO"]], [2, 0, 52, 0, 0, 6, 1, 1, 14, 4, 0.008438818565400843, ["xor     edi, edi", "cmp     byte ptr [rcx+2], 42h ; 'B'", "mov     esi, 400h", "setz    dil", "lea     edi, [rdi+rdi+1]", "jmp     loc_980A"], ["xor~edi,edi", "cmp~[yte ptr [rcx+0],0", "mov~esi,0", "setz~dil", "lea~edi,[rdi+0]", "jmp~FOO"]], [2, 0, 52, 0, 0, 2, 0, 0, 10, 4, 0.14638104511522232, ["mov     edi, 1", "mov     esi, 400h"], ["mov~edi,0", "mov~esi,0"]], [0, 0, 5, 0, 0, 1, 0, 1, 16, -1, 0.0032456994482310936, ["jmp     short loc_98C5"], ["jmp~FOO"]], [1, 0, 9, 1, 0, 2, 0, 1, 15, -1, 0.007302823758519961, ["sub     r8d, 1", "jnz     short loc_98D8"], ["sub~r8d,0", "jnz~FOO"]], [2, 0, 8, 0, 0, 3, 1, 1, 16, -1, 0.0, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_9837"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [0, 0, 9, 1, 0, 2, 0, 0, 15, -1, 0.008601103537812398, ["mul     rsi", "jno     loc_9837"], ["mul~,rsi", "jno~FOO"]], [1, 0, 9, 0, 0, 2, 1, 0, 13, -1, 0.016877637130801686, ["mov     r8d, 6; jumptable 0000000000009826 case 3", "xor     r9d, r9d"], ["mov~r8d,0", "xor~r9d,r9d"]], [0, 1, 6, 1, 0, 4, 0, 0, 13, -1, 0.005274261603375527, ["mov     edx, 200h; jumptable 0000000000009826 case 32", "mov     rax, rdx", "mul     tmp", "jo      loc_991E"], ["mov~edx,<STR>", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]], [2, 0, 9, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_996B"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 9, 1, 0, 4, 0, 0, 14, -1, 0.014118792599805257, ["mov     rax, tmp", "mul     rsi", "mov     tmp, rax", "jo      loc_99F4"], ["mov~rax,tmp", "mul~,rsi", "mov~tmp,rax", "jo~FOO"]], [1, 0, 9, 1, 0, 2, 0, 1, 15, -1, 0.007302823758519961, ["sub     r8d, 1", "jnz     short loc_995C"], ["sub~r8d,0", "jnz~FOO"]], [2, 0, 5, 0, 0, 3, 1, 1, 16, -1, 0.005761116520610191, ["mov     r8d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_9843"], ["mov~r8d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 7, 1, 0, 2, 0, 0, 15, -1, 0.021746186303148327, ["mul     rsi", "jo      loc_9A12"], ["mul~,rsi", "jo~FOO"]], [2, 0, 9, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_9907"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 5, 1, 0, 4, 0, 0, 13, -1, 0.0010548523206751054, ["mov     rax, tmp; jumptable 0000000000009826 cases 9,41", "mul     rsi", "mov     tmp, rax", "jno     loc_9850; jumptable 0000000000009826 case 33"], ["mov~rax,tmp", "mul~,rsi", "mov~tmp,rax", "jno~FOO"]], [1, 0, 60, 0, 0, 3, 0, 1, 9, 5, 0.13631937682570594, ["lea     eax, [r12-45h]", "cmp     al, 2Fh ; '/'", "ja      short loc_9800"], ["lea~eax,[r12-45h]+0]", "cmp~al,0", "ja~FOO"]], [1, 0, 59, 0, 0, 3, 0, 0, 10, 5, 0.01557935735150925, ["mov     rdx, 814400308945h", "bt      rdx, rax", "jnb     short loc_9800"], ["mov~rdx,0", "bt~rdx,rax", "jnb~FOO"]], [1, 0, 58, 0, 1, 7, 1, 2, 11, 5, 0.013794222654982148, ["mov     esi, 30h ; '0'; c", "mov     rdi, valid_suffixes; s", "mov     [rsp+58h+strtol_base], rcx", "call    _strchr", "test    rax, rax", "mov     rcx, [rsp+58h+strtol_base]", "jz      short loc_9800"], ["mov~esi,0", "mov~rdi,valid_suffixes", "mov~[rsp+0],rcx", "call~FOO", "test~rax,rax", "mov~rcx,[rsp+0]", "jz~FOO"]], [1, 0, 54, 0, 0, 2, 0, 1, 14, 5, 0.0004868549172346641, ["cmp     al, 42h ; 'B'", "jnz     short loc_9800"], ["cmp~al,0", "jnz~FOO"]], [0, 0, 66, 0, 0, 3, 1, 1, 5, 9, 0.06080276966352916, ["test    valid_suffixes, valid_suffixes", "mov     [rsp+58h+strtol_base], rcx", "jnz     short loc_9760"], ["test~valid_suffixes,valid_suffixes", "mov~[rsp+0],rcx", "jnz~FOO"]], [0, 0, 73, 0, 1, 8, 1, 2, 4, 10, 0.055988315481986364, ["xor     ecx, ecx; group", "mov     rsi, p; endptr", "mov     rdi, s; nptr", "call    ___strtoul_internal", "mov     rcx, [p]", "mov     ch_0, rax", "cmp     rcx, s", "jz      short loc_9718"], ["xor~ecx,ecx", "mov~rsi,p", "mov~rdi,s", "call~FOO", "mov~rcx,<TAG>", "mov~ch_0,rax", "cmp~rcx,s", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 6, -1, 0.0005409499080385156, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [2, 0, 4, 0, 0, 3, 1, 1, 14, -1, 0.0009737098344693282, ["mov     ebp, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_9850; jumptable 0000000000009826 case 33"], ["mov~ebp,0", "or~rbx,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 4, -1, 0.005842259006815969, ["mov     ebp, 4"], ["mov~ebp,0"]], [1, 0, 74, 0, 0, 2, 0, 1, 3, 11, 0.048036351833820184, ["cmp     bl, 2Dh ; '-'", "jz      short loc_9728"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.0003245699448231094, ["shl     tmp, 0Ah", "jmp     loc_9850; jumptable 0000000000009826 case 33"], ["shl~tmp,0", "jmp~FOO"]], [0, 0, 61, 0, 1, 7, 1, 2, 8, 6, 0.1317753975981824, ["movsx   esi, r12b; c", "mov     rdi, valid_suffixes; s", "mov     [rsp+58h+strtol_base], rcx", "call    _strchr", "test    rax, rax", "mov     rcx, [rsp+58h+strtol_base]", "jz      loc_986C; jumptable 0000000000009826 default case"], ["movsx~esi,r12b", "mov~rdi,valid_suffixes", "mov~[rsp+0],rcx", "call~FOO", "test~rax,rax", "mov~rcx,[rsp+0]", "jz~FOO"]], [0, 0, 10, 1, 0, 3, 0, 0, 13, -1, 0.02531645569620253, ["mov     rax, tmp; jumptable 0000000000009826 cases 11,43", "mul     rsi", "jo      loc_9A21"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [1, 0, 77, 0, 2, 17, 1, 3, 1, 13, 0.012495942875689711, ["lea     rax, [rsp+58h+t_ptr]", "mov     r15, ptr", "test    ptr, ptr", "mov     rbp, s", "mov     dword ptr [rsp+58h+strtol_base], edx", "mov     r14, val", "mov     r13, valid_suffixes", "cmovz   r15, rax", "call    ___errno_location", "mov     dword ptr [rax], 0", "mov     r12, rax", "movzx   ebx, byte ptr [q+0]", "call    ___ctype_b_loc", "mov     edx, dword ptr [rsp+58h+strtol_base]; base", "mov     rsi, [rax]", "mov     rax, q", "jmp     short loc_96C7"], ["lea~rax,[rsp+0]", "mov~r15,ptr", "test~ptr,ptr", "mov~rbp,s", "mov~[word ptr [rsp+0],edx", "mov~r14,val", "mov~r13,valid_suffixes", "cmovz~r15,rax", "call~FOO", "mov~<TAG>,0", "mov~r12,rax", "movzx~ebx,[yte ptr [q+0]", "call~FOO", "mov~edx,[word ptr [rsp+0]", "mov~rsi,<TAG>", "mov~rax,q", "jmp~FOO"]], [2, 0, 79, 1, 0, 12, 1, 1, 0, 14, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "cmp     edx, 24h ; '$'", "ja      loc_99D5"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edx,0", "ja~FOO"]], [2, 0, 10, 0, 0, 3, 1, 1, 14, 0, 0.0050308341447581955, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_999B"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [0, 0, 10, 0, 0, 1, 1, 0, 14, -1, 0.0050308341447581955, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [1, 0, 9, 0, 0, 2, 1, 0, 13, -1, 0.016877637130801686, ["mov     r8d, 5; jumptable 0000000000009826 case 14", "xor     r9d, r9d"], ["mov~r8d,0", "xor~r9d,r9d"]], [0, 0, 12, 1, 0, 3, 0, 0, 13, 1, 0.016877637130801686, ["mov     rax, tmp; jumptable 0000000000009826 cases 5,37", "mul     rsi", "jo      loc_9A5D"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [0, 0, 8, 0, 0, 1, 1, 0, 14, -1, 0.009087958455047063, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [2, 0, 8, 0, 0, 3, 1, 1, 14, -1, 0.009087958455047063, ["or      rax, 0FFFFFFFFFFFFFFFFh", "mov     r8d, 1", "jmp     loc_9837"], ["or~rax,0", "mov~r8d,0", "jmp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 16, -1, 0.0032456994482310936, ["jmp     loc_98C5"], ["jmp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 16, -1, 0.005761116520610191, ["mov     rbx, rax"], ["mov~rbx,rax"]], [0, 0, 9, 1, 0, 4, 0, 0, 14, -1, 0.014118792599805257, ["mov     rax, tmp", "mul     rsi", "mov     tmp, rax", "jo      loc_9A3F"], ["mov~rax,tmp", "mul~,rsi", "mov~tmp,rax", "jo~FOO"]], [1, 0, 9, 1, 0, 2, 0, 1, 15, -1, 0.007302823758519961, ["sub     r8d, 1", "jnz     short loc_9939"], ["sub~r8d,0", "jnz~FOO"]], [1, 0, 8, 1, 0, 2, 0, 1, 15, -1, 0.006815968841285297, ["sub     r8d, 1", "jnz     short loc_98B0"], ["sub~r8d,0", "jnz~FOO"]], [2, 0, 8, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_98BF"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 8, 1, 0, 4, 0, 0, 14, -1, 0.013956507627393703, ["mov     rax, tmp", "mul     rsi", "mov     tmp, rax", "jo      loc_9A4E"], ["mov~rax,tmp", "mul~,rsi", "mov~tmp,rax", "jo~FOO"]], [1, 0, 77, 1, 0, 2, 0, 0, 3, 13, 0.0, ["add     q, 1", "movzx   ebx, byte ptr [q]"], ["add~q,0", "movzx~ebx,<TAG>"]], [0, 1, 77, 0, 0, 3, 1, 1, 2, 12, 0.036838688737422916, ["movzx   ecx, bl", "test    byte ptr [rsi+rcx*2+1], 20h", "jnz     short loc_96C0"], ["movzx~ecx,bl", "test~[yte ptr [rsi+0],<STR>", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 0, 17, -1, 0.007140538786108406, ["or      ebp, r8d", "nop     word ptr [rax+rax+00000000h]"], ["or~ebp,r8d", "nop~[ord ptr [rax+0]"]], [0, 0, 9, 1, 0, 4, 0, 0, 14, -1, 0.014118792599805257, ["mov     rax, tmp", "mul     rsi", "mov     tmp, rax", "jo      loc_9A30"], ["mov~rax,tmp", "mul~,rsi", "mov~tmp,rax", "jo~FOO"]], [1, 0, 9, 0, 0, 3, 1, 0, 13, -1, 0.016877637130801686, ["mov     r8d, 8; jumptable 0000000000009826 case 23", "xor     r9d, r9d", "nop     dword ptr [rax+rax+00h]"], ["mov~r8d,0", "xor~r9d,r9d", "nop~[word ptr [rax+0]"]], [0, 0, 4, 0, 0, 2, 1, 1, 16, -1, 0.01557935735150925, ["or      ebp, r9d", "jmp     short loc_9850; jumptable 0000000000009826 case 33"], ["or~ebp,r9d", "jmp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 16, -1, 0.0032456994482310936, ["jmp     loc_98C5"], ["jmp~FOO"]], [2, 0, 9, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_9948"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [1, 0, 56, 0, 0, 2, 0, 1, 13, 5, 0.006329113924050633, ["cmp     al, 69h ; 'i'", "jz      loc_99B8"], ["cmp~al,0", "jz~FOO"]], [1, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.0003245699448231094, ["shl     tmp, 9", "jmp     short loc_9850; jumptable 0000000000009826 case 33"], ["shl~tmp,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, -1, 0.024667315806556313, ["mov     rdi, [rsp+58h+var_40]", "xor     rdi, fs:28h", "mov     eax, ebp", "jnz     loc_99D0"], ["mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "mov~eax,ebp", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     r12", "pop     valid_suffixes", "pop     val", "pop     p", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~valid_suffixes", "pop~val", "pop~p", "retn"]], [1, 0, 0, 0, 1, 5, 0, 1, 1, -1, 0.0, ["lea     val, __PRETTY_FUNCTION___4162; \"xstrtoumax\"", "lea     ptr, file; \"lib/xstrtol.c\"", "lea     s, assertion; \"0 <= strtol_base && strtol_base <= 36\"", "mov     edx, 54h ; 'T'; line", "call    ___assert_fail"], ["lea~val,<TAG>", "lea~ptr,<TAG>", "lea~s,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 68, 0, 0, 3, 1, 1, 5, 10, 0.005084929135562047, ["mov     eax, [r12]", "test    eax, eax", "jz      short loc_9758"], ["mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [2, 0, 9, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_98E7"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [1, 0, 57, 0, 0, 3, 0, 1, 12, 5, 0.011684518013631937, ["movzx   eax, byte ptr [rcx+1]", "cmp     al, 44h ; 'D'", "jz      short loc_97EF"], ["movzx~eax,[yte ptr [rcx+0]", "cmp~al,0", "jz~FOO"]], [2, 0, 3, 1, 0, 9, 1, 1, 13, -1, 0.022151898734177215, ["movsxd  suffixes, edi; jumptable 0000000000009826 case 33", "mov     eax, ebp", "add     rcx, suffixes", "or      eax, 2", "mov     [p], rcx", "cmp     byte ptr [rcx], 0", "mov     [val], tmp", "cmovnz  ebp, eax", "jmp     loc_972D"], ["movsxd~suffixes,edi", "mov~eax,ebp", "add~rcx,suffixes", "or~eax,0", "mov~<TAG>,rcx", "cmp~<TAG>,0", "mov~<TAG>,tmp", "cmovnz~ebp,eax", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 9, -1, 0.005598831548198637, ["mov     [val], tmp; jumptable 0000000000009826 default case", "or      ebp, 2", "jmp     loc_972D"], ["mov~<TAG>,tmp", "or~ebp,0", "jmp~FOO"]]], "func_feature": [8, 37, 58, 1, 80, 127, 2, 266, 0.02157, 5, 27], "succs": [[1, 31], [0, 13], [0], [40, 11], [32, 65, 2, 3, 10, 45, 14, 79, 50, 51, 78, 24, 25], [12, 15], [5], [41, 5], [41, 44], [8, 41], [40, 43], [78], [44, 15], [66], [60], [72], [4, 79], [16], [16], [16], [66], [64, 20], [30], [30, 22], [27], [40, 70], [28], [26, 28], [27, 54], [63], [29, 55], [1], [40, 78], [34, 19], [35, 19], [19, 77], [17, 19], [9, 39], [75, 37], [41], [78], [72], [41, 38], [78], [33, 79], [52, 53], [62], [74, 46], [23], [23], [56], [48, 49], [30], [30], [66], [63], [57, 68], [56, 67], [66, 60], [58], [58, 59], [62], [42, 61], [78], [76, 21], [64], [78], [66], [57], [18, 36], [78], [], [73, 71], [], [], [6, 7], [21], [17, 69], [72], [72]], "fname": "xstrtoumax", "n_num": 80}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 15, 0, 0, 3, 0, 1, 0, 0, 0.10294117647058823, ["mov     edx, [rsp+58h+ap.gp_offset]", "cmp     edx, 2Fh ; '/'", "ja      loc_9BA0"], ["mov~edx,<TAG>", "cmp~edx,0", "ja~FOO"]], [1, 0, 15, 2, 1, 6, 0, 2, 4, 2, 0.20220588235294118, ["mov     rdi, [rax]; s", "call    _strlen", "add     totalsize, rax", "cmovb   rbx, r13", "sub     rbp, 1", "jnz     short loc_9ABA"], ["mov~rdi,<TAG>", "call~FOO", "add~totalsize,rax", "cmovb~rbx,r13", "sub~rbp,0", "jnz~FOO"]], [1, 0, 15, 0, 0, 5, 1, 0, 1, 2, 0.04044117647058824, ["mov     r12, i", "mov     r15, args", "mov     rbp, i", "xor     ebx, ebx", "mov     r13, 0FFFFFFFFFFFFFFFFh"], ["mov~r12,i", "mov~r15,args", "mov~rbp,i", "xor~ebx,ebx", "mov~r13,0"]], [1, 0, 3, 0, 0, 1, 0, 0, 2, -1, 0.07720588235294118, ["mov     byte ptr [p], 0"], ["mov~<TAG>,0"]], [1, 0, 8, 2, 2, 11, 0, 3, 9, -1, 0.09558823529411764, ["mov     r13, [rax]", "mov     rdi, r13; s", "call    _strlen", "mov     rdi, p; dest", "mov     rbp, rax", "mov     rdx, len; n", "mov     rsi, r13; src", "add     p, rbp", "call    _memcpy", "sub     r12, 1", "jz      short loc_9B60"], ["mov~r13,<TAG>", "mov~rdi,r13", "call~FOO", "mov~rdi,p", "mov~rbp,rax", "mov~rdx,len", "mov~rsi,r13", "add~p,rbp", "call~FOO", "sub~r12,0", "jz~FOO"]], [1, 0, 4, 0, 1, 4, 0, 1, 1, -1, 0.014705882352941176, ["mov     edi, 1; n", "call    xmalloc", "mov     rbx, rax", "mov     r14, p"], ["mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~r14,p"]], [1, 0, 17, 1, 0, 16, 2, 1, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "test    argcount, argcount", "movdqu  xmm0, xmmword ptr [args]", "movups  xmmword ptr [rsp+58h+ap.gp_offset], xmm0", "mov     r14, [args+10h]", "mov     [rsp+58h+ap.reg_save_area], r14", "jz      loc_9B50"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~argcount,argcount", "movdqu~xmm0,<TAG>", "movups~<TAG>,xmm0", "mov~r14,[args+0]", "mov~[rsp+0],r14", "jz~FOO"]], [0, 0, 15, 0, 0, 4, 0, 1, 3, 0, 0.058823529411764705, ["mov     rax, [rsp+58h+ap.overflow_arg_area]", "lea     rdx, [rax+8]", "mov     [rsp+58h+ap.overflow_arg_area], rdx", "jmp     loc_9AD1"], ["mov~rax,[rsp+0]", "lea~rdx,[rax+0]", "mov~[rsp+0],rdx", "jmp~FOO"]], [1, 0, 15, 2, 0, 4, 0, 0, 3, 3, 0.058823529411764705, ["mov     eax, edx", "add     edx, 8", "add     rax, r14", "mov     [rsp+58h+ap.gp_offset], edx"], ["mov~eax,edx", "add~edx,0", "add~rax,r14", "mov~<TAG>,edx"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, -1, 0.11029411764705882, ["mov     rcx, [rsp+58h+var_40]", "xor     rcx, fs:28h", "mov     rax, r14", "jnz     short loc_9B85"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,r14", "jnz~FOO"]], [0, 0, 8, 0, 0, 4, 0, 1, 8, -1, 0.042279411764705885, ["mov     rax, [args+8]", "lea     rdx, [rax+8]", "mov     [args+8], rdx", "jmp     short loc_9B10"], ["mov~rax,[args+0]", "lea~rdx,[rax+0]", "mov~[args+0],rdx", "jmp~FOO"]], [1, 0, 8, 0, 0, 3, 0, 0, 7, -1, 0.13970588235294118, ["mov     edx, [args]", "cmp     edx, 2Fh ; '/'", "jbe     short loc_9B04"], ["mov~edx,<TAG>", "cmp~edx,0", "jbe~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 10, 0, 0, 2, 0, 1, 5, -1, 0.20588235294117646, ["cmp     totalsize, 7FFFFFFFh", "ja      loc_9B90"], ["cmp~totalsize,0", "ja~FOO"]], [1, 0, 8, 2, 0, 4, 0, 0, 8, -1, 0.042279411764705885, ["mov     eax, edx", "add     rax, [args+10h]", "add     edx, 8", "mov     [args], edx"], ["mov~eax,edx", "add~rax,[args+0]", "add~edx,0", "mov~<TAG>,edx"]], [1, 0, 3, 0, 1, 4, 1, 2, 6, -1, 0.0661764705882353, ["call    ___errno_location", "xor     r14d, r14d", "mov     dword ptr [rax], 4Bh ; 'K'", "jmp     short loc_9B63"], ["call~FOO", "xor~r14d,r14d", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 8, 0, 1, 5, 0, 2, 6, -1, 0.125, ["lea     rdi, [totalsize+1]; n", "call    xmalloc", "mov     r14, rax", "mov     totalsize, p", "jmp     short loc_9B35"], ["lea~rdi,[totalsize+0]", "call~FOO", "mov~r14,rax", "mov~totalsize,p", "jmp~FOO"]]], "func_feature": [7, 5, 17, 1, 18, 23, 1, 89, 0.0768, 1, 10], "succs": [[8, 7], [0, 14], [0], [10], [3, 12], [3], [2, 5], [1], [1], [], [9, 13], [4], [11, 15], [], [16, 17], [4], [10], [12]], "fname": "xstrcat", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 14, 0, 0, 3, 0, 1, 0, 0, 0.041666666666666664, ["cmp     al, 25h ; '%'", "mov     r8, f", "jnz     short loc_9C18"], ["cmp~al,0", "mov~r8,f", "jnz~FOO"]], [1, 0, 16, 1, 0, 7, 2, 1, 0, 4, 0.0, ["sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+18h+var_10], rax", "xor     eax, eax", "movzx   eax, byte ptr [f]", "test    al, al", "jz      short loc_9C56"], ["sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 4, -1, 0.0, ["add     rsp, 18h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 3, -1, 0.10833333333333334, ["mov     rdx, [rsp+18h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_9C5A"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 2, 3, 0.0375, ["cmp     byte ptr [format+1], 73h ; 's'", "jnz     short loc_9C18"], ["cmp~[yte ptr [format+0],0", "jnz~FOO"]], [1, 0, 12, 1, 0, 4, 1, 1, 4, 4, 0.09791666666666667, ["add     argcount, 1; argcount", "movzx   ecx, byte ptr [format+argcount*2]", "test    cl, cl", "jnz     short loc_9BF0"], ["add~argcount,0", "movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [0, 0, 12, 0, 0, 2, 1, 1, 3, 5, 0.04583333333333333, ["xor     edi, edi", "jmp     short loc_9BFD"], ["xor~edi,edi", "jmp~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 6, 3, 0.008333333333333333, ["cmp     byte ptr [format+argcount*2+1], 73h ; 's'", "jnz     short loc_9C18"], ["cmp~[yte ptr [format+0],0", "jnz~FOO"]], [0, 0, 3, 0, 1, 2, 0, 2, 2, -1, 0.05625, ["call    xstrcat", "jmp     short loc_9C2E"], ["call~FOO", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 1, -1, 0.016666666666666666, ["xor     edi, edi", "jmp     short loc_9C0A"], ["xor~edi,edi", "jmp~FOO"]], [1, 0, 5, 0, 1, 3, 0, 2, 3, 1, 0.06666666666666667, ["call    ___errno_location", "cmp     dword ptr [rax], 0Ch", "jz      short loc_9C5F"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 7, 0, 1, 6, 1, 2, 2, 2, 0.16041666666666665, ["mov     rdx, args; args", "mov     rdi, rsp; resultp", "mov     args, format; format", "call    rpl_vasprintf", "test    eax, eax", "js      short loc_9C48"], ["mov~rdx,args", "mov~rdi,rsp", "mov~args,format", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 5, 3, 0.0625, ["cmp     cl, 25h ; '%'", "jnz     short loc_9C18"], ["cmp~cl,0", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 4, -1, 0.0125, ["xor     eax, eax", "jmp     short loc_9C2E"], ["xor~eax,eax", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 3, -1, 0.05625, ["mov     rax, [rsp+18h+result]"], ["mov~rax,<TAG>"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [5, 8, 18, 1, 17, 23, 1, 45, 0.04534, 1, 3], "succs": [[11, 4], [0, 9], [], [2, 14], [11, 6], [8, 12], [5], [11, 5], [3], [8], [16, 13], [10, 15], [11, 7], [3], [], [3], []], "fname": "xvasprintf", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 9, 0, 1, 8, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, fp", "call    _fileno", "test    eax, eax", "mov     rdi, fp; fp", "js      short loc_9CD7"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,fp", "call~FOO", "test~eax,eax", "mov~rdi,fp", "js~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 0, -1, 0.06944444444444445, ["pop     fp", "pop     rbp", "pop     r12", "jmp     _fclose"], ["pop~fp", "pop~rbp", "pop~r12", "jmp~FOO"]], [1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     [rbp+0], r12d", "mov     eax, 0FFFFFFFFh", "jmp     short loc_9CB0"], ["mov~[rbp+0],r12d", "mov~eax,0", "jmp~FOO"]], [0, 0, 2, 0, 2, 7, 1, 3, 0, 1, 0.1111111111111111, ["call    ___errno_location", "mov     r12d, [rax]", "mov     rdi, fp; stream", "mov     rbp, rax", "call    _fclose", "test    r12d, r12d", "jnz     short loc_9CE0"], ["call~FOO", "mov~r12d,<TAG>", "mov~rdi,fp", "mov~rbp,rax", "call~FOO", "test~r12d,r12d", "jnz~FOO"]], [0, 0, 8, 0, 1, 3, 1, 2, 0, 3, 0.08333333333333333, ["call    ___freading", "test    eax, eax", "jnz     short loc_9CB8"], ["call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 6, 0, 1, 4, 1, 2, 0, 2, 0.15277777777777776, ["mov     rdi, fp; stream", "call    rpl_fflush", "test    eax, eax", "jz      short loc_9CD4"], ["mov~rdi,fp", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 7, 0, 2, 8, 1, 3, 0, 3, 0.027777777777777776, ["mov     rdi, fp; stream", "call    _fileno", "xor     esi, esi; offset", "mov     edx, 1; whence", "mov     edi, eax; fd", "call    _lseek", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_9C8C"], ["mov~rdi,fp", "call~FOO", "xor~esi,esi", "mov~edx,0", "mov~edi,eax", "call~FOO", "cmp~rax,0", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 0, -1, 0.0, ["pop     fp", "pop     rbp", "pop     saved_errno", "retn"], ["pop~fp", "pop~rbp", "pop~saved_errno", "retn"]], [0, 0, 2, 0, 0, 1, 0, 0, 0, -1, 0.08333333333333333, ["mov     rdi, fp; stream"], ["mov~rdi,fp"]]], "func_feature": [7, 5, 14, 0, 10, 13, 1, 42, 0.05278, 0, 0], "succs": [[2, 5], [], [1], [8], [8, 3], [6, 7], [9, 4], [9, 6], [], [2]], "fname": "rpl_fclose", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 3, 0, 2, 8, 0, 3, 0, 0, 0.0015151515151515152, ["call    ___errno_location", "mov     r12d, [rax]", "mov     fd, rax", "mov     edi, ebx; fd", "call    _close", "mov     ebx, 0FFFFFFFFh", "mov     [rbp+0], r12d", "jmp     loc_9DD0"], ["call~FOO", "mov~r12d,<TAG>", "mov~fd,rax", "mov~edi,ebx", "call~FOO", "mov~ebx,0", "mov~[rbp+0],r12d", "jmp~FOO"]], [1, 0, 5, 0, 1, 6, 2, 2, 5, -1, 0.010606060606060607, ["xor     eax, eax", "mov     esi, 1; cmd", "mov     edi, ebx; fd", "call    _fcntl", "test    eax, eax", "js      short loc_9EE1"], ["xor~eax,eax", "mov~esi,0", "mov~edi,ebx", "call~FOO", "test~eax,eax", "js~FOO"]], [3, 0, 4, 0, 1, 8, 2, 2, 6, -1, 0.0015151515151515152, ["or      eax, 1", "mov     esi, 2; cmd", "mov     edi, ebx; fd", "mov     edx, eax", "xor     eax, eax", "call    _fcntl", "cmp     eax, 0FFFFFFFFh", "jnz     loc_9DD0"], ["or~eax,0", "mov~esi,0", "mov~edi,ebx", "mov~edx,eax", "xor~eax,eax", "call~FOO", "cmp~eax,0", "jnz~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 6, 3, 0.011582491582491583, ["cmp     esi, 401h", "jz      short loc_9DC0"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 5, 2, 0.010067340067340067, ["cmp     esi, 406h", "jge     short loc_9E70"], ["cmp~esi,0", "jge~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, -1, 0.0022727272727272726, ["mov     cs:have_dupfd_cloexec_3326, 1", "jmp     short loc_9DD0"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 9, 0, 1, 3, 0, 2, 4, -1, 0.005555555555555556, ["call    ___errno_location", "cmp     dword ptr [rax], 16h", "jnz     loc_9D7F"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 10, 0, 1, 6, 2, 2, 3, -1, 0.006060606060606061, ["xor     eax, eax", "mov     esi, 406h; cmd", "call    _fcntl", "test    eax, eax", "mov     ebx, eax", "js      loc_9F08"], ["xor~eax,eax", "mov~esi,0", "call~FOO", "test~eax,eax", "mov~ebx,eax", "js~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 7, 2, 0.009595959595959595, ["cmp     esi, 402h", "jz      short loc_9E70"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 31, 0, 0, 2, 0, 1, 2, 4, 0.02904040404040404, ["cmp     esi, 0Bh", "jz      short loc_9DC0"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 43, 0, 0, 2, 0, 1, 1, 5, 0.0202020202020202, ["cmp     esi, 406h", "jnz     short loc_9D90"], ["cmp~esi,0", "jnz~FOO"]], [0, 0, 30, 0, 0, 1, 0, 1, 3, 3, 0.03939393939393939, ["jg      short loc_9DF0"], ["jg~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 8, 2, 0.006060606060606061, ["cmp     esi, 400h", "jz      short loc_9E70"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 4, 2, 0.02531986531986532, ["cmp     esi, 4", "jz      loc_9E70"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 8, -1, 0.031818181818181815, ["mov     eax, [rsp+68h+arg.gp_offset]", "cmp     eax, 2Fh ; '/'", "ja      loc_9F5A"], ["mov~eax,<TAG>", "cmp~eax,0", "ja~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 8, -1, 0.0101010101010101, ["cmp     esi, 1", "jnz     short loc_9E18"], ["cmp~esi,0", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 7, -1, 0.017676767676767676, ["cmp     esi, 40Ah", "jnz     short loc_9E18"], ["cmp~esi,0", "jnz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 8, 2, 0.006060606060606061, ["cmp     esi, 8", "jnz     short loc_9E18"], ["cmp~esi,0", "jnz~FOO"]], [0, 0, 19, 0, 0, 1, 0, 1, 5, 3, 0.021178451178451182, ["jg      loc_9E60"], ["jg~FOO"]], [0, 0, 4, 1, 0, 1, 0, 0, 9, -1, 0.006818181818181818, ["add     rax, [rsp+68h+arg.reg_save_area]"], ["add~rax,[rsp+0]"]], [0, 0, 7, 0, 1, 8, 3, 2, 5, -1, 0.006313131313131313, ["xor     esi, esi; cmd", "xor     eax, eax", "mov     edx, r12d", "mov     edi, ebp; fd", "call    _fcntl", "test    eax, eax", "mov     ebx, eax", "js      loc_9DD0"], ["xor~esi,esi", "xor~eax,eax", "mov~edx,r12d", "mov~edi,ebp", "call~FOO", "test~eax,eax", "mov~ebx,eax", "js~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 6, 2, 0.013131313131313131, ["cmp     esi, 2", "jz      loc_9E70"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 4, -1, 0.006060606060606061, ["cmp     cs:have_dupfd_cloexec_3326, 0FFFFFFFFh", "jnz     loc_9DD0"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 7, 0, 1, 6, 3, 2, 3, -1, 0.008333333333333333, ["xor     esi, esi; cmd", "xor     eax, eax", "call    _fcntl", "test    eax, eax", "mov     ebx, eax", "js      loc_9DD0"], ["xor~esi,esi", "xor~eax,eax", "call~FOO", "test~eax,eax", "mov~ebx,eax", "js~FOO"]], [0, 0, 10, 0, 0, 1, 0, 1, 7, -1, 0.013131313131313131, ["jg      short loc_9DC0"], ["jg~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 9, -1, 0.00202020202020202, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 3, 0, 1, 6, 1, 2, 10, -1, 0.006060606060606061, ["mov     rdx, [rax]", "mov     edi, ebp; fd", "xor     eax, eax", "call    _fcntl", "mov     ebx, eax", "jmp     short loc_9DD0"], ["mov~rdx,<TAG>", "mov~edi,ebp", "xor~eax,eax", "call~FOO", "mov~ebx,eax", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 9, -1, 0.006818181818181818, ["mov     rax, [rsp+68h+arg.overflow_arg_area]", "jmp     loc_9E29"], ["mov~rax,[rsp+0]", "jmp~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 6, -1, 0.004545454545454545, ["mov     cs:have_dupfd_cloexec_3326, 0FFFFFFFFh", "jmp     loc_9EB3"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 1, 45, 1, 0, 19, 2, 1, 0, 6, 0.0, ["push    r12", "push    rbp", "mov     ebp, edi", "push    rbx", "sub     rsp, 50h", "mov     rax, fs:28h", "mov     [rsp+68h+var_50], rax", "xor     eax, eax", "lea     rax, [rsp+68h+arg_0]", "test    esi, esi", "mov     [rsp+68h+var_38], rdx", "mov     [rsp+68h+var_30], rcx", "mov     [rsp+68h+var_28], r8", "mov     [rsp+68h+arg.overflow_arg_area], rax", "lea     rax, [rsp+68h+var_48]", "mov     [rsp+68h+var_20], r9", "mov     [rsp+68h+arg.gp_offset], 10h", "mov     [rsp+68h+arg.reg_save_area], rax", "jz      loc_9F42"], ["push~r12", "push~rbp", "mov~ebp,edi", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "test~esi,esi", "mov~[rsp+0],rdx", "mov~[rsp+0],rcx", "mov~[rsp+0],r8", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],r9", "mov~<TAG>,0", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, -1, 0.043434343434343436, ["mov     rcx, [rsp+68h+var_50]", "xor     rcx, fs:28h", "mov     eax, ebx", "jnz     loc_9F3D"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [2, 0, 13, 0, 0, 6, 0, 1, 2, -1, 0.010858585858585859, ["mov     rax, [rsp+68h+arg.reg_save_area]", "cmp     cs:have_dupfd_cloexec_3326, 0", "mov     [rsp+68h+arg.gp_offset], 18h", "mov     r12d, [rax+10h]", "mov     edx, r12d", "js      loc_9E93"], ["mov~rax,[rsp+0]", "cmp~<TAG>,0", "mov~<TAG>,0", "mov~r12d,[rax+0]", "mov~edx,r12d", "js~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 5, 1, 0.030404040404040406, ["mov     eax, [rsp+68h+arg.gp_offset]", "cmp     eax, 2Fh ; '/'", "ja      loc_9F64"], ["mov~eax,<TAG>", "cmp~eax,0", "ja~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 5, 2, 0.02016835016835017, ["cmp     esi, 409h", "jz      short loc_9E70"], ["cmp~esi,0", "jz~FOO"]], [0, 0, 12, 0, 0, 1, 0, 1, 7, 2, 0.009595959595959595, ["jg      short loc_9E70"], ["jg~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 4, 3, 0.025185185185185185, ["cmp     esi, 407h", "jg      short loc_9E40"], ["cmp~esi,0", "jg~FOO"]], [0, 0, 10, 0, 0, 1, 0, 1, 6, -1, 0.021683501683501687, ["jl      loc_9DC0"], ["jl~FOO"]], [0, 0, 3, 0, 1, 5, 1, 1, 3, -1, 0.023383838383838382, ["mov     edi, ebp; fd", "xor     eax, eax", "call    _fcntl", "mov     ebx, eax", "nop     dword ptr [rax+rax+00h]"], ["mov~edi,ebp", "xor~eax,eax", "call~FOO", "mov~ebx,eax", "nop~[word ptr [rax+0]"]], [0, 0, 4, 0, 0, 1, 0, 1, 8, -1, 0.00202020202020202, ["jmp     loc_9DC0"], ["jmp~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 6, 3, 0.011582491582491583, ["cmp     esi, 9", "jz      loc_9DC0"], ["cmp~esi,0", "jz~FOO"]], [0, 0, 3, 0, 1, 6, 1, 2, 7, -1, 0.010707070707070707, ["mov     edx, [rax]", "mov     edi, ebp; fd", "xor     eax, eax", "call    _fcntl", "mov     ebx, eax", "jmp     loc_9DD0"], ["mov~edx,<TAG>", "mov~edi,ebp", "xor~eax,eax", "call~FOO", "mov~ebx,eax", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 6, 0, 0.008131313131313132, ["mov     rax, [rsp+68h+arg.overflow_arg_area]", "jmp     loc_9E81"], ["mov~rax,[rsp+0]", "jmp~FOO"]], [0, 0, 4, 1, 0, 1, 0, 0, 6, -1, 0.008131313131313132, ["add     rax, [rsp+68h+arg.reg_save_area]"], ["add~rax,[rsp+0]"]], [0, 0, 3, 0, 1, 7, 2, 2, 1, -1, 0.0015151515151515152, ["mov     rax, [rsp+68h+arg.reg_save_area]", "xor     esi, esi; cmd", "mov     edx, [rax+10h]", "xor     eax, eax", "call    _fcntl", "mov     ebx, eax", "jmp     loc_9DD0"], ["mov~rax,[rsp+0]", "xor~esi,esi", "mov~edx,[rax+0]", "xor~eax,eax", "call~FOO", "mov~ebx,eax", "jmp~FOO"]], [0, 1, 0, 1, 0, 5, 0, 0, 3, -1, 0.0, ["add     rsp, 50h", "pop     rbx", "pop     rbp", "pop     r12", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [13, 20, 53, 6, 46, 75, 4, 157, 0.0123, 2, 4], "succs": [[31], [0, 2], [0, 31], [8, 38], [33, 3], [31], [20, 5], [5, 6], [33, 12], [11, 38], [32, 9], [36, 13], [33, 14], [33, 18], [27, 19], [25, 14], [14, 39], [33, 14], [40, 21], [26], [28, 31], [24, 33], [1, 31], [22, 31], [38, 15], [38], [31], [26], [1], [10, 44], [], [45, 30], [7, 23], [42, 43], [33, 37], [33, 17], [34, 4], [16, 38], [31], [38], [35, 38], [31], [41], [41], [31], []], "fname": "rpl_fcntl", "n_num": 46}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 4, 0, 1, 3, 1, 2, 0, 0, 0.1, ["call    ___freading", "test    eax, eax", "jz      short loc_9F8A"], ["call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 5, 0, 0, 4, 1, 1, 0, 3, 0.0, ["test    stream, stream", "push    rbx", "mov     rbx, stream", "jz      short loc_9F8A"], ["test~stream,stream", "push~rbx", "mov~rbx,stream", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 1, -1, 0.125, ["mov     rdi, stream; stream", "pop     stream", "jmp     _fflush"], ["mov~rdi,stream", "pop~stream", "jmp~FOO"]], [1, 0, 1, 0, 1, 7, 1, 2, 3, 0, 0.025, ["mov     rdi, stream; fp", "mov     edx, 1; whence", "xor     esi, esi; offset", "call    rpl_fseeko", "mov     rdi, stream; stream", "pop     stream", "jmp     _fflush"], ["mov~rdi,stream", "mov~edx,0", "xor~esi,esi", "call~FOO", "mov~rdi,stream", "pop~stream", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 1, 1, 2, 1, 0.1, ["test    dword ptr [stream], 100h", "jnz     short loc_9F98"], ["test~<TAG>,0", "jnz~FOO"]]], "func_feature": [2, 4, 7, 0, 6, 8, 1, 19, 0.05833, 0, 0], "succs": [[3, 5], [0, 3], [], [2], [2], [3, 4]], "fname": "rpl_fflush", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 1, 0, 0, 3, 2, 0, 0, 0, 0.0, ["and     dword ptr [fp], 0FFFFFFEFh", "mov     [fp+90h], pos", "xor     eax, eax"], ["and~<TAG>,0", "mov~[fp+0],pos", "xor~eax,eax"]], [1, 0, 2, 0, 2, 13, 0, 3, 3, 1, 0.14285714285714285, ["push    r12", "push    rbp", "mov     r12d, edx", "push    rbx", "mov     rbp, offset", "mov     rbx, fp", "call    _fileno", "mov     edx, r12d; whence", "mov     rsi, offset; offset", "mov     edi, eax; fd", "call    _lseek", "cmp     pos, 0FFFFFFFFFFFFFFFFh", "jz      short loc_A002"], ["push~r12", "push~rbp", "mov~r12d,edx", "push~rbx", "mov~rbp,offset", "mov~rbx,fp", "call~FOO", "mov~edx,r12d", "mov~rsi,offset", "mov~edi,eax", "call~FOO", "cmp~pos,0", "jz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 4, 0, 0.0, ["pop     fp", "pop     offset", "pop     whence", "retn"], ["pop~fp", "pop~offset", "pop~whence", "retn"]], [0, 0, 6, 0, 0, 3, 0, 1, 1, 3, 0.09523809523809523, ["mov     rax, [fp+20h]", "cmp     [fp+28h], rax", "jnz     short loc_9FBA"], ["mov~rax,[fp+0]", "cmp~[fp+0],rax", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 0, 4, 0.0, ["mov     rax, [fp+8]", "cmp     [fp+10h], rax", "jz      short loc_9FC0"], ["mov~rax,[fp+0]", "cmp~[fp+0],rax", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 2, 0.14285714285714285, ["cmp     qword ptr [fp+48h], 0", "jnz     short loc_9FBA"], ["cmp~[word ptr [fp+0],0", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 1, -1, 0.07142857142857142, ["jmp     _fseeko"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []]], "func_feature": [2, 2, 7, 0, 8, 10, 1, 29, 0.05655, 0, 0], "succs": [[2], [0, 2], [], [5, 6], [3, 6], [1, 6], [7], []], "fname": "rpl_fseeko", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.26666666666666666, ["mov     rdx, [rsp+38h+var_30]", "xor     rdx, fs:28h", "mov     rax, rbp", "jnz     short loc_A08E"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "mov~rax,rbp", "jnz~FOO"]], [2, 0, 6, 1, 1, 19, 2, 1, 0, 2, 0.0, ["push    r13", "push    r12", "mov     r13, s", "push    rbp", "push    rbx", "mov     rbx, pwc", "mov     r12, n", "sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+38h+var_30], rax", "xor     eax, eax", "lea     rax, [rsp+38h+wc]", "test    pwc, pwc", "cmovz   rbx, rax", "mov     rdi, pwc; pwc", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFDh", "mov     rbp, rax", "jbe     short loc_A070"], ["push~r13", "push~r12", "mov~r13,s", "push~rbp", "push~rbx", "mov~rbx,pwc", "mov~r12,n", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "test~pwc,pwc", "cmovz~rbx,rax", "mov~rdi,pwc", "call~FOO", "cmp~rax,0", "mov~rbp,rax", "jbe~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 1, 2, 0.06666666666666667, ["test    n, n", "jz      short loc_A070"], ["test~n,n", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 2, 2, 2, 2, 0.06666666666666667, ["xor     edi, edi; category", "call    hard_locale", "test    al, al", "jnz     short loc_A070"], ["xor~edi,edi", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 3, 0, 0, 4, 0, 0, 3, 2, 0.0, ["movzx   eax, byte ptr [s+0]", "mov     ebp, 1", "mov     [pwc], eax", "nop     dword ptr [rax+00h]"], ["movzx~eax,[yte ptr [s+0]", "mov~ebp,0", "mov~<TAG>,eax", "nop~[word ptr [rax+0]"]], [1, 0, 0, 1, 0, 6, 0, 0, 2, -1, 0.0, ["add     rsp, 18h", "pop     pwc", "pop     rbp", "pop     n", "pop     s", "retn"], ["add~rsp,0", "pop~pwc", "pop~rbp", "pop~n", "pop~s", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 6, 6, 1, 7, 9, 1, 40, 0.05714, 1, 2], "succs": [[5, 6], [0, 2], [0, 3], [0, 4], [0], [], []], "fname": "rpl_mbrtowc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 3, 0, 0, 2, 0, 0, 0, 0, 0.03571428571428571, ["mov     [resultp], result", "mov     eax, edx"], ["mov~<TAG>,result", "mov~eax,edx"]], [1, 0, 5, 0, 0, 3, 0, 1, 1, 3, 0.047619047619047616, ["mov     rdx, [rsp+18h+length]", "cmp     rdx, 7FFFFFFFh", "ja      short loc_A0F8"], ["mov~rdx,<TAG>", "cmp~rdx,0", "ja~FOO"]], [2, 0, 3, 0, 2, 6, 0, 3, 2, 2, 0.03571428571428571, ["mov     rdi, result; ptr", "call    _free", "call    ___errno_location", "mov     dword ptr [rax], 4Bh ; 'K'", "mov     eax, 0FFFFFFFFh", "jmp     short loc_A0E2"], ["mov~rdi,result", "call~FOO", "call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 2, 0.07142857142857142, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_A0E2"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 7, 1, 1, 14, 3, 2, 0, 3, 0.0, ["push    rbx", "mov     rax, format", "mov     rbx, resultp", "xor     edi, edi; resultbuf", "sub     rsp, 10h", "mov     rcx, fs:28h", "mov     [rsp+18h+var_10], rcx", "xor     ecx, ecx", "mov     format, rsp; lengthp", "mov     rcx, args; args", "mov     args, format; format", "call    vasnprintf", "test    result, result", "jz      short loc_A112"], ["push~rbx", "mov~rax,format", "mov~rbx,resultp", "xor~edi,edi", "sub~rsp,0", "mov~rcx,<TAG>", "mov~[rsp+0],rcx", "xor~ecx,ecx", "mov~format,rsp", "mov~rcx,args", "mov~args,format", "call~FOO", "test~result,result", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.23809523809523808, ["mov     resultp, [rsp+18h+var_10]", "xor     resultp, fs:28h", "jnz     short loc_A119"], ["mov~resultp,[rsp+0]", "xor~resultp,<TAG>", "jnz~FOO"]], [1, 0, 0, 1, 0, 3, 0, 0, 3, -1, 0.0, ["add     rsp, 10h", "pop     rbx", "retn"], ["add~rsp,0", "pop~rbx", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [4, 4, 9, 1, 8, 9, 1, 34, 0.05357, 1, 2], "succs": [[5], [0, 2], [5], [5], [1, 3], [6, 7], [], []], "fname": "rpl_vasprintf", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     edi, 1; status", "jmp     usage"], ["mov~edi,0", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[], [0]], "fname": "__argmatch_die", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 12, 2, 0, 6, 1, 1, 0, 0, 0.10683760683760685, ["mov     [rsp+58h+var_58], i", "add     matchind, 1", "add     rbp, valsize", "mov     r14, [arglist+i*8]", "test    r14, r14", "jnz     short loc_A1C7"], ["mov~<TAG>,i", "add~matchind,0", "add~rbp,valsize", "mov~r14,<TAG>", "test~r14,r14", "jnz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 4, 4, 0.26282051282051283, ["cmp     [rsp+58h+var_58], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_A180"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 6, -1, 0.03205128205128205, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [2, 0, 13, 1, 1, 17, 1, 2, 0, 4, 0.0, ["push    r15", "push    r14", "mov     r15, arglist", "push    r13", "push    r12", "mov     r13, valsize", "push    rbp", "push    rbx", "mov     rbp, vallist_0", "sub     rsp, 28h", "mov     [rsp+58h+arg], arg_0", "mov     [rsp+58h+vallist], vallist_0", "call    _strlen", "mov     r14, [arglist]", "mov     [rsp+58h+var_58], 0FFFFFFFFFFFFFFFFh", "test    r14, r14", "jz      loc_A21D"], ["push~r15", "push~r14", "mov~r15,arglist", "push~r13", "push~r12", "mov~r13,valsize", "push~rbp", "push~rbx", "mov~rbp,vallist_0", "sub~rsp,0", "mov~[rsp+0],arg_0", "mov~[rsp+0],vallist_0", "call~FOO", "mov~r14,<TAG>", "mov~<TAG>,0", "test~r14,r14", "jz~FOO"]], [1, 0, 12, 2, 0, 5, 1, 1, 3, 3, 0.20512820512820512, ["add     i, 1", "add     rbp, valsize", "mov     r14, [arglist+i*8]", "test    r14, r14", "jz      short loc_A208"], ["add~i,0", "add~rbp,valsize", "mov~r14,<TAG>", "test~r14,r14", "jz~FOO"]], [0, 0, 12, 0, 1, 6, 1, 2, 2, 2, 0.3696581196581197, ["mov     rsi, [rsp+58h+arg]; s2", "mov     rdx, arglen; n", "mov     rdi, r14; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_A1B7"], ["mov~rsi,[rsp+0]", "mov~rdx,arglen", "mov~rdi,r14", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 6, 4, 0.03311965811965812, ["mov     [rsp+58h+ambiguous], 1", "jmp     short loc_A1B7"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 12, 2, 1, 11, 1, 1, 6, 4, 0.03311965811965812, ["mov     rdi, [rsp+58h+var_58]", "mov     rdx, valsize; n", "mov     rsi, rbp; s2", "imul    rdi, valsize", "add     rdi, rax; s1", "call    _memcmp", "test    eax, eax", "movzx   eax, [rsp+58h+ambiguous]", "mov     ecx, 1", "cmovnz  eax, ecx", "mov     [rsp+58h+ambiguous], al"], ["mov~rdi,<TAG>", "mov~rdx,valsize", "mov~rsi,rbp", "imul~rdi,valsize", "add~rdi,rax", "call~FOO", "test~eax,eax", "movzx~eax,[rsp+0]", "mov~ecx,0", "cmovnz~eax,ecx", "mov~[rsp+0],al"]], [0, 0, 12, 0, 1, 4, 0, 2, 3, 1, 0.3269230769230769, ["mov     rdi, r14; s", "call    _strlen", "cmp     rax, arglen", "jz      short loc_A240"], ["mov~rdi,r14", "call~FOO", "cmp~rax,arglen", "jz~FOO"]], [0, 0, 12, 0, 0, 3, 1, 1, 5, 5, 0.1111111111111111, ["mov     rax, [rsp+58h+vallist]", "test    rax, rax", "jz      loc_A230"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 1, -1, 0.0, ["mov     rax, [rsp+58h+var_58]", "add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     r12", "pop     valsize", "pop     r14", "pop     arglist", "retn"], ["mov~rax,<TAG>", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~valsize", "pop~r14", "pop~arglist", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, 0, 0.01282051282051282, ["mov     [rsp+58h+var_58], i", "jmp     short loc_A21D"], ["mov~<TAG>,i", "jmp~FOO"]], [2, 0, 1, 0, 0, 4, 0, 0, 4, -1, 0.05128205128205128, ["cmp     [rsp+58h+ambiguous], 0", "mov     rax, 0FFFFFFFFFFFFFFFEh", "cmovz   rax, [rsp+58h+var_58]", "mov     [rsp+58h+var_58], rax"], ["cmp~[rsp+0],0", "mov~rax,0", "cmovz~rax,<TAG>", "mov~<TAG>,rax"]], [1, 0, 12, 0, 0, 4, 1, 1, 1, 3, 0.07051282051282051, ["mov     r12, arglen", "mov     [rsp+58h+ambiguous], 0", "xor     ebx, ebx", "jmp     short loc_A1C7"], ["mov~r12,arglen", "mov~[rsp+0],0", "xor~ebx,ebx", "jmp~FOO"]]], "func_feature": [4, 7, 14, 1, 14, 20, 2, 76, 0.11538, 0, 8], "succs": [[2, 5], [0, 9], [12], [10, 13], [12, 5], [8, 4], [4], [4], [1, 11], [6, 7], [], [10], [10], [5]], "fname": "argmatch", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 2, 0, 1, 4, 1, 1, 0, 0, 0.08333333333333333, ["lea     value, aAmbiguousArgum; \"ambiguous argument %s for %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax"], ["lea~value,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbx,rax"]], [2, 0, 4, 0, 0, 8, 0, 1, 0, 1, 0.0, ["cmp     problem, 0FFFFFFFFFFFFFFFFh", "push    r12", "mov     edx, 5; category", "push    rbp", "mov     r12, value", "push    rbx", "mov     rbp, context", "jz      short loc_A2B0"], ["cmp~problem,0", "push~r12", "mov~edx,0", "push~rbp", "mov~r12,value", "push~rbx", "mov~rbp,context", "jz~FOO"]], [2, 0, 1, 0, 2, 18, 4, 3, 2, -1, 0.25, ["mov     rsi, context; arg", "mov     edi, 1; n", "call    quote_n", "mov     rdx, value; arg", "mov     context, rax", "mov     esi, 8; s", "xor     edi, edi; n", "call    quotearg_n_style", "mov     r8, rbp", "mov     rdx, format; format", "mov     rcx, rax", "pop     format", "pop     rbp", "pop     value", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "jmp     _error"], ["mov~rsi,context", "mov~edi,0", "call~FOO", "mov~rdx,value", "mov~context,rax", "mov~esi,0", "xor~edi,edi", "call~FOO", "mov~r8,rbp", "mov~rdx,format", "mov~rcx,rax", "pop~format", "pop~rbp", "pop~value", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "jmp~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 1, 0, 0.08333333333333333, ["lea     value, aInvalidArgumen; \"invalid argument %s for %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax", "jmp     short loc_A276"], ["lea~value,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbx,rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []]], "func_feature": [4, 6, 7, 0, 5, 5, 1, 35, 0.08333, 2, 0], "succs": [[2], [0, 3], [4], [2], []], "fname": "argmatch_invalid", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[2, 0, 0, 1, 0, 11, 0, 0, 0, 0, 0.0, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah", "add     rsp, 8", "pop     rbx", "pop     rbp", "pop     valsize", "pop     r13", "pop     arglist", "pop     r15", "retn"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~valsize", "pop~r13", "pop~arglist", "pop~r15", "retn"]], [0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 0.23333333333333334, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_A3D8"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [2, 0, 9, 2, 2, 13, 2, 3, 4, 3, 0.061111111111111116, ["mov     rdi, r15; arg", "add     i, 1", "add     rbp, valsize", "call    quote", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "lea     rdx, aLuBytesSCopied+19h; \", %s\"", "mov     rcx, rax", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "mov     r15, [arglist+i*8]", "test    r15, r15", "jnz     short loc_A358"], ["mov~rdi,r15", "add~i,0", "add~rbp,valsize", "call~FOO", "mov~rdi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~r15,<TAG>", "test~r15,r15", "jnz~FOO"]], [0, 0, 9, 0, 1, 6, 1, 2, 3, 3, 0.08888888888888889, ["mov     rdx, valsize; n", "mov     rsi, rbp; s2", "mov     rdi, last_val; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_A320"], ["mov~rdx,valsize", "mov~rsi,rbp", "mov~rdi,last_val", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [2, 0, 1, 1, 0, 9, 0, 1, 2, 0, 0.08888888888888889, ["add     rsp, 8", "mov     esi, 0Ah; int", "pop     rbx", "pop     rbp", "pop     valsize", "pop     r13", "pop     arglist", "pop     r15", "jmp     ___overflow"], ["add~rsp,0", "mov~esi,0", "pop~rbx", "pop~rbp", "pop~valsize", "pop~r13", "pop~arglist", "pop~r15", "jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 5, 2, 0.044444444444444446, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 9, 0, 0, 2, 1, 1, 2, 3, 0.18888888888888888, ["test    i, i", "jz      short loc_A320"], ["test~i,i", "jz~FOO"]], [2, 0, 10, 1, 2, 21, 2, 3, 0, 2, 0.0, ["push    r15", "push    r14", "mov     r14, arglist", "push    r13", "push    r12", "xor     edi, edi; domainname", "push    rbp", "push    rbx", "mov     rbp, vallist", "lea     vallist, aValidArguments; \"Valid arguments are:\"", "mov     r12, valsize", "mov     edx, 5; category", "sub     rsp, 8", "mov     rbx, cs:stderr@@GLIBC_2_2_5", "call    _dcgettext", "mov     rdi, rax; s", "mov     rsi, rbx; stream", "call    _fputs_unlocked", "mov     r15, [arglist]", "test    r15, r15", "jz      loc_A3A8"], ["push~r15", "push~r14", "mov~r14,arglist", "push~r13", "push~r12", "xor~edi,edi", "push~rbp", "push~rbx", "mov~rbp,vallist", "lea~vallist,<TAG>", "mov~r12,valsize", "mov~edx,0", "sub~rsp,0", "mov~rbx,<TAG>", "call~FOO", "mov~rdi,rax", "mov~rsi,rbx", "call~FOO", "mov~r15,<TAG>", "test~r15,r15", "jz~FOO"]], [2, 0, 9, 2, 2, 14, 2, 3, 3, 2, 0.1388888888888889, ["mov     rdi, r15; arg", "add     i, 1", "mov     last_val, rbp", "call    quote", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "lea     rdx, aS_0; \"\\n  - %s\"", "mov     rcx, rax", "mov     esi, 1", "xor     eax, eax", "add     rbp, valsize", "call    ___fprintf_chk", "mov     r15, [arglist+i*8]", "test    r15, r15", "jz      short loc_A3A8"], ["mov~rdi,r15", "add~i,0", "mov~last_val,rbp", "call~FOO", "mov~rdi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~esi,0", "xor~eax,eax", "add~rbp,valsize", "call~FOO", "mov~r15,<TAG>", "test~r15,r15", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 2, 1, 1, 4, 0.05555555555555556, ["xor     r13d, r13d", "xor     ebx, ebx", "jmp     short loc_A358"], ["xor~r13d,r13d", "xor~ebx,ebx", "jmp~FOO"]]], "func_feature": [7, 10, 14, 0, 11, 15, 1, 84, 0.08182, 4, 7], "succs": [[], [0, 5], [6, 7], [9, 2], [], [4], [1], [9, 3], [1, 10], [1, 7], [7]], "fname": "argmatch_valid", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 0, 1, 0, 8, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "pop     arglist", "pop     vallist", "pop     arg", "pop     exit_fn", "pop     context", "pop     valsize", "retn"], ["add~rsp,0", "pop~arglist", "pop~vallist", "pop~arg", "pop~exit_fn", "pop~context", "pop~valsize", "retn"]], [1, 0, 1, 0, 3, 11, 0, 4, 1, 0, 0.0, ["mov     rdx, res; problem", "mov     rsi, arg; value", "mov     rdi, context; context", "call    argmatch_invalid", "mov     rdx, valsize; valsize", "mov     rsi, vallist; vallist", "mov     rdi, arglist; arglist", "call    argmatch_valid", "call    exit_fn", "mov     rax, 0FFFFFFFFFFFFFFFFh", "jmp     short loc_A426"], ["mov~rdx,res", "mov~rsi,arg", "mov~rdi,context", "call~FOO", "mov~rdx,valsize", "mov~rsi,vallist", "mov~rdi,arglist", "call~FOO", "call~exit_fn", "mov~rax,0", "jmp~FOO"]], [1, 0, 2, 1, 1, 20, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r14, context", "push    r13", "push    r12", "mov     r12, arg", "push    rbp", "push    rbx", "mov     rbp, vallist", "mov     rbx, arglist", "mov     vallist, valsize; valsize", "mov     arglist, vallist; vallist", "sub     rsp, 8", "mov     arg, arglist; arglist", "mov     context, arg; arg", "mov     r15, valsize", "mov     r13, exit_fn", "call    argmatch", "test    res, res", "js      short loc_A435"], ["push~r15", "push~r14", "mov~r14,context", "push~r13", "push~r12", "mov~r12,arg", "push~rbp", "push~rbx", "mov~rbp,vallist", "mov~rbx,arglist", "mov~vallist,valsize", "mov~arglist,vallist", "sub~rsp,0", "mov~arg,arglist", "mov~context,arg", "mov~r15,valsize", "mov~r13,exit_fn", "call~FOO", "test~res,res", "js~FOO"]]], "func_feature": [4, 1, 6, 0, 3, 3, 0, 39, 0.0, 0, 2], "succs": [[], [0], [0, 1]], "fname": "__xargmatch_internal", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 3, 0, 1, 6, 1, 2, 0, 0, 0.25, ["mov     rdx, valsize; n", "mov     rsi, rbp; s2", "mov     rdi, value; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_A480"], ["mov~rdx,valsize", "mov~rsi,rbp", "mov~rdi,value", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 1, 2, 0.16666666666666666, ["mov     r12, valsize", "mov     r13, value", "mov     rbp, vallist", "lea     rbx, [arglist+8]", "jmp     short loc_A48F"], ["mov~r12,valsize", "mov~r13,value", "mov~rbp,vallist", "lea~rbx,[arglist+0]", "jmp~FOO"]], [1, 0, 3, 2, 0, 5, 1, 1, 3, 1, 0.0, ["mov     r14, [rbx]", "add     rbp, valsize", "add     rbx, 8", "test    r14, r14", "jz      short loc_A4A1"], ["mov~r14,<TAG>", "add~rbp,valsize", "add~rbx,0", "test~r14,r14", "jz~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 1, 0, 0.0, ["pop     rbx", "mov     rax, r14", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "retn"], ["pop~rbx", "mov~rax,r14", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "retn"]], [0, 0, 4, 0, 0, 8, 1, 1, 0, 1, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     r14, [arglist]", "test    r14, r14", "jz      short loc_A4A1"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~r14,<TAG>", "test~r14,r14", "jz~FOO"]]], "func_feature": [1, 3, 5, 0, 5, 7, 0, 31, 0.08333, 0, 2], "succs": [[2, 3], [0], [0, 3], [], [1, 3]], "fname": "argmatch_to_argument", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [2, 0, 3, 1, 1, 7, 2, 2, 0, 2, 0.0, ["sub     rsp, 8", "xor     esi, esi; locale", "call    _setlocale", "mov     rdx, rax", "mov     eax, 1", "test    p, p", "jz      short loc_A4E5"], ["sub~rsp,0", "xor~esi,esi", "call~FOO", "mov~rdx,rax", "mov~eax,0", "test~p,p", "jz~FOO"]], [2, 0, 2, 0, 0, 9, 2, 1, 1, 1, 0.16666666666666666, ["lea     rdi, aC; \"C\"", "mov     ecx, 2", "mov     rsi, p", "repe cmpsb", "setnbe  cl", "sbb     cl, 0", "xor     eax, eax", "test    cl, cl", "jnz     short loc_A4F0"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,p", "cmpsb~<TAG>,<TAG>", "setnbe~cl", "sbb~cl,0", "xor~eax,eax", "test~cl,cl", "jnz~FOO"]], [3, 0, 0, 1, 0, 10, 1, 0, 2, 0, 0.0, ["lea     rdi, aPosix; \"POSIX\"", "mov     ecx, 6", "mov     rsi, rdx", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "setnz   al", "add     rsp, 8", "retn"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,rdx", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "setnz~al", "add~rsp,0", "retn"]]], "func_feature": [1, 5, 3, 0, 4, 4, 1, 28, 0.04167, 2, 3], "succs": [[], [0, 2], [0, 3], []], "fname": "hard_locale", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[2, 0, 2, 1, 1, 5, 1, 2, 0, 0, 0.0, ["sub     rsp, 8", "mov     edi, 0Eh; item", "call    _nl_langinfo", "test    codeset, codeset", "jz      short loc_A540"], ["sub~rsp,0", "mov~edi,0", "call~FOO", "test~codeset,codeset", "jz~FOO"]], [1, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0.0, ["lea     codeset, aAscii; \"ASCII\"", "add     rsp, 8", "retn"], ["lea~codeset,<TAG>", "add~rsp,0", "retn"]], [2, 0, 0, 1, 0, 5, 0, 0, 0, -1, 0.0, ["cmp     byte ptr [codeset], 0", "lea     rdx, aAscii; \"ASCII\"", "cmovz   codeset, rdx", "add     rsp, 8", "retn"], ["cmp~<TAG>,0", "lea~rdx,<TAG>", "cmovz~codeset,rdx", "add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 2, 1, 13, 0.0, 1, 3], "succs": [[1, 2], [], []], "fname": "locale_charset", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 36, 0, 0, 2, 1, 1, 0, 0, 0.007022471910112359, ["test    rax, rax", "jnz     loc_A6B5"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 38, 0, 0, 2, 0, 1, 13, -1, 0.01899910559561742, ["cmp     rbx, 0Ch", "ja      loc_B5FE"], ["cmp~rbx,0", "ja~FOO"]], [0, 0, 37, 0, 0, 1, 0, 1, 15, -1, 0.00017468835597294426, ["jmp     short loc_B5FE"], ["jmp~FOO"]], [0, 0, 37, 0, 0, 1, 0, 1, 13, -1, 0.004485996981385209, ["js      loc_A6B5"], ["js~FOO"]], [1, 0, 250, 0, 0, 1, 0, 0, 30, 39, 0.015700989434848232, ["mov     r12d, 0Ch"], ["mov~r12d,0"]], [1, 0, 250, 0, 0, 2, 0, 1, 29, 40, 0.020173011347755603, ["cmp     rax, 0Ch", "ja      loc_B230"], ["cmp~rax,0", "ja~FOO"]], [0, 0, 250, 0, 0, 2, 0, 1, 8, 22, 0.3065012018558891, ["mov     r14, length", "jmp     loc_A803"], ["mov~r14,length", "jmp~FOO"]], [1, 0, 250, 0, 0, 11, 0, 1, 7, 23, 0.03764883447928895, ["mov     r13, [rbp+d.dir]", "lea     rax, [rbp+count]", "mov     r15, [rbp+result]", "mov     [rbp+i], 0", "mov     [rbp+var_3F0], rax", "mov     rax, cp_0", "mov     cp_0, r8", "mov     rcx, [dp+0]", "mov     r8, cp_0", "cmp     rcx, r8", "jz      loc_B001"], ["mov~r13,[rbp+0]", "lea~rax,[rbp+0]", "mov~r15,[rbp+0]", "mov~[rbp+0],0", "mov~[rbp+0],rax", "mov~rax,cp_0", "mov~cp_0,r8", "mov~rcx,[dp+0]", "mov~r8,cp_0", "cmp~rcx,r8", "jz~FOO"]], [1, 1, 250, 2, 0, 6, 0, 1, 15, 23, 0.327924981832411, ["mov     r8, [dp+8]", "add     dp, 58h", "mov     rcx, [dp+0]", "add     [rbp+i], 1", "cmp     rcx, cp_0", "jnz     loc_A699"], ["mov~r8,[dp+0]", "add~dp,<STR>", "mov~rcx,[dp+0]", "add~[rbp+0],0", "cmp~rcx,cp_0", "jnz~FOO"]], [2, 0, 250, 2, 0, 8, 0, 1, 31, 31, 0.025073951404028585, ["mov     rax, [dp+50h]; jumptable 000000000000AAAB case 2", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movzx   r9d, byte ptr [rax+10h]", "mov     eax, dword ptr [rbp+prefix_count]", "cmp     eax, 1", "jnz     loc_AC0E"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movzx~r9d,[yte ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jnz~FOO"]], [0, 0, 250, 1, 0, 4, 0, 1, 30, 32, 0.3278131812845883, ["lea     rsi, off_EC40", "movsxd  rax, dword ptr [rsi+rax*4]", "add     rax, rsi", "jmp     rax; switch jump"], ["lea~rsi,<TAG>", "movsxd~rax,<TAG>", "add~rax,rsi", "jmp~rax"]], [2, 0, 250, 2, 0, 8, 0, 1, 31, 31, 0.04473396127974359, ["mov     rax, [dp+50h]; jumptable 000000000000AAAB cases 5,6,13,14", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "mov     r9d, [rax+10h]", "mov     eax, dword ptr [rbp+prefix_count]", "cmp     eax, 1", "jz      loc_AE40"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "mov~r9d,[rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 40, -1, 0.002655263010788753, ["test    result_0, result_0", "jnz     loc_B469"], ["test~result_0,result_0", "jnz~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 39, -1, 0.024023142713399295, ["cmp     result_0, [rbp+result]", "jz      short loc_B3B2"], ["cmp~result_0,[rbp+0]", "jz~FOO"]], [1, 0, 258, 0, 0, 2, 0, 0, 4, 26, 0.0139191682039242, ["cmp     rdi, 0F9Fh", "jbe     loc_A758"], ["cmp~rdi,0", "jbe~FOO"]], [1, 0, 259, 1, 0, 5, 1, 0, 3, 27, 0.010481301358376657, ["mov     rdi, rax", "xor     r8d, r8d", "add     rdi, 6; size", "setb    r8b", "jb      loc_B018"], ["mov~rdi,rax", "xor~r8d,r8d", "add~rdi,0", "setb~r8b", "jb~FOO"]], [3, 0, 250, 0, 1, 12, 0, 2, 33, 29, 0.029087940447574828, ["mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     eax, 1", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "pop     r8", "mov     r10, [rbp+maxlen]", "pop     r9", "jmp     loc_AB16"], ["mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "mov~eax,0", "mov~[rbp+0],maxlen_0", "call~FOO", "pop~r8", "mov~r10,[rbp+0]", "pop~r9", "jmp~FOO"]], [1, 0, 250, 1, 0, 3, 0, 1, 32, 30, 0.024741694150967976, ["sub     rsp, 8", "push    [rbp+var_3F0]", "jmp     loc_ADD5"], ["sub~rsp,0", "push~[rbp+0]", "jmp~FOO"]], [0, 0, 250, 0, 0, 3, 0, 0, 33, 30, 1.3975068477835541e-05, ["mov     eax, [rbp+prefixes+4]", "push    [rbp+var_3F0]", "push    rax"], ["mov~eax,[rbp+0]", "push~[rbp+0]", "push~rax"]], [0, 0, 250, 0, 0, 3, 0, 1, 9, 21, 0.3784588294482643, ["mov     rax, [rbp+i]", "cmp     [rbp+d.count], rax", "jz      loc_B4CB"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 0, 250, 0, 1, 4, 0, 1, 10, 22, 0.06762535636424619, ["lea     rdi, [result_0+length]; dest", "mov     rdx, rcx; n", "mov     rsi, r8; src", "call    _memcpy"], ["lea~rdi,<TAG>", "mov~rdx,rcx", "mov~rsi,r8", "call~FOO"]], [0, 0, 250, 0, 0, 2, 0, 1, 46, 34, 0.01630191737939516, ["mov     result_0, rcx", "jmp     loc_AA60"], ["mov~result_0,rcx", "jmp~FOO"]], [0, 0, 250, 0, 0, 2, 1, 1, 45, 35, 0.018950192855944993, ["test    length, length", "jz      loc_B010"], ["test~length,length", "jz~FOO"]], [0, 0, 250, 0, 0, 2, 1, 1, 46, 35, 0.0026133378053552463, ["test    bl, bl", "jz      loc_B010"], ["test~bl,bl", "jz~FOO"]], [0, 0, 34, 0, 0, 2, 0, 1, 16, -1, 0.0015372575325619095, ["mov     r12, memory_size", "jmp     loc_B4F8"], ["mov~r12,memory_size", "jmp~FOO"]], [1, 0, 35, 0, 0, 2, 0, 1, 15, -1, 0.004052769858572307, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      loc_A6B5"], ["cmp~memory_size,0", "jz~FOO"]], [0, 0, 250, 0, 0, 4, 1, 1, 31, 38, 0.03555257420761362, ["cmp     result_0, [rbp+result]", "setz    dl", "test    result_0, result_0", "jz      loc_B260"], ["cmp~result_0,[rbp+0]", "setz~dl", "test~result_0,result_0", "jz~FOO"]], [0, 0, 250, 1, 0, 3, 0, 0, 30, 39, 0.018356252445636982, ["add     allocated, allocated", "cmp     allocated, rax", "jnb     loc_AA09"], ["add~allocated,allocated", "cmp~allocated,rax", "jnb~FOO"]], [0, 0, 250, 0, 0, 1, 0, 0, 33, 38, 0.0003097806845920212, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 250, 0, 0, 5, 1, 1, 32, 38, 0.01886634244507798, ["cmp     result_0, [rbp+result]", "mov     r12, memory_size", "setz    dl", "test    result_0, result_0", "jnz     loc_AA1C"], ["cmp~result_0,[rbp+0]", "mov~r12,memory_size", "setz~dl", "test~result_0,result_0", "jnz~FOO"]], [0, 0, 250, 0, 0, 1, 0, 1, 29, 40, 0.01809072614455811, ["js      loc_A6B5"], ["js~FOO"]], [0, 0, 250, 0, 0, 2, 1, 1, 28, 41, 0.040038571188998826, ["test    allocated, allocated", "jnz     loc_B218"], ["test~allocated,allocated", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, -1, 4.192520543350662e-05, ["xor     r15d, r15d", "jmp     loc_A72F"], ["xor~r15d,r15d", "jmp~FOO"]], [1, 0, 268, 1, 1, 24, 2, 2, 0, 30, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "lea     r14, [rbp+a]", "push    rbx", "mov     rbx, format", "mov     r12, args", "mov     format, r14; a", "sub     rsp, 408h", "mov     [rbp+lengthp], lengthp_0", "lea     lengthp_0, [rbp+d]; d", "mov     [rbp+result], resultbuf_0", "mov     resultbuf_0, format; format", "mov     [rbp+var_410], r14", "mov     rax, fs:28h", "mov     [rbp+var_38], rax", "xor     eax, eax", "mov     [rbp+var_408], rsi", "call    printf_parse", "test    eax, eax", "js      loc_B418"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "lea~r14,[rbp+0]", "push~rbx", "mov~rbx,format", "mov~r12,args", "mov~format,r14", "sub~rsp,0", "mov~[rbp+0],lengthp_0", "lea~lengthp_0,[rbp+0]", "mov~[rbp+0],resultbuf_0", "mov~resultbuf_0,format", "mov~[rbp+0],r14", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],rsi", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 250, 1, 0, 2, 0, 0, 33, 29, 0.12118422401103113, ["sub     rsp, 8", "push    [rbp+var_3F0]"], ["sub~rsp,0", "push~[rbp+0]"]], [1, 0, 250, 0, 0, 2, 0, 1, 32, 30, 0.025057181321855134, ["cmp     eax, 2", "jnz     loc_AC17"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 250, 0, 0, 2, 0, 1, 32, 30, 0.0992965882199491, ["cmp     eax, 2", "jz      loc_AE88"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 256, 0, 0, 3, 0, 1, 5, 27, 0.0002655263010788753, ["cmp     rdi, 0FFFFFFFFFFFFFFFFh", "mov     [rbp+saved_errno], r8", "jz      loc_B018"], ["cmp~rdi,0", "mov~[rbp+0],r8", "jz~FOO"]], [0, 0, 250, 0, 0, 2, 1, 1, 32, 37, 0.03363566064807051, ["test    dl, dl", "jnz     loc_B260"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 250, 0, 0, 2, 1, 1, 15, 24, 0.02274954813945255, ["test    length, length", "jz      loc_B340"], ["test~length,length", "jz~FOO"]], [0, 0, 250, 0, 1, 11, 1, 2, 14, 25, 0.022898615536549462, ["mov     rdi, r12; size", "mov     [rbp+prefix_count], cp_0", "mov     byte ptr [rbp+cp], dl", "mov     [rbp+saved_errno], n_0", "call    _malloc", "test    rax, rax", "mov     r9, rax", "mov     rcx, [rbp+saved_errno]", "movzx   edx, byte ptr [rbp+cp]", "mov     r8, [rbp+prefix_count]", "jz      loc_A6B5"], ["mov~rdi,r12", "mov~[rbp+0],cp_0", "mov~[yte ptr [rbp+0],dl", "mov~[rbp+0],n_0", "call~FOO", "test~rax,rax", "mov~r9,rax", "mov~rcx,[rbp+0]", "movzx~edx,[yte ptr [rbp+0]", "mov~r8,[rbp+0]", "jz~FOO"]], [1, 0, 250, 0, 0, 4, 0, 1, 10, 20, 0.2901783218737772, ["movzx   edx, byte ptr [dp+48h]", "mov     rax, [dp+50h]", "cmp     dl, 25h ; '%'", "jz      loc_AFB8"], ["movzx~edx,[yte ptr [dp+0]", "mov~rax,[dp+0]", "cmp~dl,0", "jz~FOO"]], [0, 0, 8, 0, 1, 3, 0, 2, 3, -1, 0.000698753423891777, ["call    ___errno_location", "mov     [rbp+saved_errno], rax", "jmp     out_of_memory_1"], ["call~FOO", "mov~[rbp+0],rax", "jmp~FOO"]], [3, 0, 260, 2, 0, 7, 0, 0, 2, 28, 0.0071831851976074685, ["mov     rax, [rbp+d.max_width_length]", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "add     rax, 7", "cmp     rax, 6", "cmovbe  rax, rdx", "add     rax, [rbp+d.max_precision_length]", "jb      loc_B018"], ["mov~rax,[rbp+0]", "mov~rdx,0", "add~rax,0", "cmp~rax,0", "cmovbe~rax,rdx", "add~rax,[rbp+0]", "jb~FOO"]], [0, 0, 255, 0, 1, 4, 1, 2, 6, 26, 0.0035077421879367208, ["call    _malloc", "test    rax, rax", "mov     [rbp+buf], rax", "jz      loc_B018"], ["call~FOO", "test~rax,rax", "mov~[rbp+0],rax", "jz~FOO"]], [0, 0, 38, 1, 0, 3, 0, 0, 14, -1, 0.015267762312035329, ["add     allocated, allocated", "cmp     allocated, rbx", "jnb     loc_B4F8"], ["add~allocated,allocated", "cmp~allocated,rbx", "jnb~FOO"]], [0, 0, 39, 0, 0, 1, 0, 1, 13, -1, 0.017964950528257587, ["js      loc_A6B5"], ["js~FOO"]], [0, 0, 42, 0, 0, 2, 1, 1, 12, -1, 0.041743529543294765, ["test    allocated, allocated", "jnz     loc_B619"], ["test~allocated,allocated", "jnz~FOO"]], [0, 0, 43, 0, 0, 2, 0, 0, 11, -1, 0.05747945664933758, ["cmp     allocated, rbx", "jnb     short loc_B52C"], ["cmp~allocated,rbx", "jnb~FOO"]], [0, 0, 250, 0, 0, 1, 0, 0, 31, 41, 0.00020962602716753312, ["nop     word ptr [memory_size+memory_size+00h]"], ["nop~[ord ptr [memory_size+0]"]], [0, 0, 250, 0, 1, 5, 1, 2, 19, 26, 0.018579853541282353, ["mov     rsi, r12; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      loc_B19B"], ["mov~rsi,r12", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [0, 0, 250, 0, 0, 2, 1, 1, 18, 27, 0.017909050254346245, ["test    dl, dl", "jnz     loc_B2F0"], ["test~dl,dl", "jnz~FOO"]], [1, 0, 250, 0, 0, 2, 0, 1, 11, 19, 0.2287648834479289, ["cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      loc_B476; jumptable 000000000000AAAB default case"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 250, 0, 0, 1, 0, 1, 15, 30, 0.015840740119626585, ["js      loc_A6B5"], ["js~FOO"]], [0, 0, 250, 0, 0, 2, 1, 1, 14, 31, 0.03822181228688021, ["test    allocated, allocated", "jnz     loc_B430"], ["test~allocated,allocated", "jnz~FOO"]], [0, 0, 250, 0, 1, 5, 1, 2, 33, 36, 0.03401065831889243, ["mov     rsi, r12; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      loc_A6B5"], ["mov~rsi,r12", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [0, 0, 250, 0, 0, 2, 1, 1, 30, 40, 0.018139638884230532, ["test    rdx, rdx", "jnz     loc_A6B5"], ["test~rdx,rdx", "jnz~FOO"]], [0, 0, 250, 0, 0, 1, 0, 0, 29, 1, 0.011012353960534406, ["jns     loc_B230"], ["jns~FOO"]], [0, 0, 250, 0, 0, 1, 0, 0, 34, 35, 0.03450444407177595, ["mov     result_0, memory"], ["mov~result_0,memory"]], [2, 0, 250, 2, 0, 8, 0, 1, 31, 31, 0.025073951404028585, ["mov     rax, [dp+50h]; jumptable 000000000000AAAB case 4", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movzx   r9d, word ptr [rax+10h]", "mov     eax, dword ptr [rbp+prefix_count]", "cmp     eax, 1", "jnz     loc_AC0E"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movzx~r9d,[ord ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jnz~FOO"]], [0, 0, 250, 1, 0, 3, 0, 0, 16, 29, 0.01610626642070546, ["add     allocated, allocated", "cmp     allocated, rax", "jnb     loc_B076"], ["add~allocated,allocated", "cmp~allocated,rax", "jnb~FOO"]], [2, 0, 250, 2, 0, 8, 0, 1, 31, 31, 0.04818300818007332, ["mov     rax, [dp+50h]; jumptable 000000000000AAAB case 3", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movsx   r9d, word ptr [rax+10h]", "mov     eax, dword ptr [rbp+prefix_count]", "cmp     eax, 1", "jz      short loc_AE40"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movsx~r9d,[ord ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 253, 0, 0, 2, 0, 0, 7, 25, 0.006847783554139415, ["mov     r8, [rbp+saved_errno]", "mov     [rbp+buf_malloced], buf_0"], ["mov~r8,[rbp+0]", "mov~[rbp+0],buf_0"]], [0, 0, 250, 0, 0, 1, 0, 0, 32, 31, 2.7950136955671083e-05, ["nop"], ["nop"]], [0, 0, 8, 0, 1, 2, 0, 1, 14, -1, 0.0, ["mov     rdi, rax; ptr", "call    _free"], ["mov~rdi,rax", "call~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 13, -1, 0.01890128011627257, ["mov     rax, [rbp+buf_malloced]", "test    rax, rax", "jz      short loc_B565"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 13, 0, 0, 1, 0, 1, 41, -1, 0.0043252836938901, ["jmp     out_of_memory"], ["jmp~FOO"]], [1, 0, 250, 0, 0, 2, 0, 1, 40, 34, 0.012018558890938566, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "jz      loc_AA60"], ["cmp~allocated,0", "jz~FOO"]], [0, 0, 250, 0, 0, 2, 0, 0, 32, 30, 0.05585951329494854, ["push    [rbp+var_3F0]", "push    r9"], ["push~[rbp+0]", "push~r9"]], [0, 0, 250, 0, 0, 1, 0, 1, 32, 31, 2.7950136955671083e-05, ["jmp     loc_AE40"], ["jmp~FOO"]], [0, 0, 250, 0, 0, 1, 0, 1, 32, 31, 2.7950136955671083e-05, ["jmp     loc_AE40"], ["jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, -1, 0.007406786293252837, ["mov     rdi, [rbp+var_38]", "xor     rdi, fs:28h", "mov     rax, r15", "jnz     loc_B647"], ["mov~rdi,[rbp+0]", "xor~rdi,<TAG>", "mov~rax,r15", "jnz~FOO"]], [1, 0, 250, 0, 0, 2, 0, 1, 32, 30, 0.027382982093278888, ["cmp     eax, 2", "jnz     loc_B1C0"], ["cmp~eax,0", "jnz~FOO"]], [2, 0, 250, 2, 0, 7, 0, 1, 12, 18, 0.22914919783106938, ["mov     r8, [rbp+a.arg]", "shl     rax, 5", "add     rax, r8", "cmp     dl, 6Eh ; 'n'", "mov     edi, [rax]", "mov     dword ptr [rbp+cp], edi", "jz      loc_B030"], ["mov~r8,[rbp+0]", "shl~rax,0", "add~rax,r8", "cmp~dl,0", "mov~edi,<TAG>", "mov~[word ptr [rbp+0],edi", "jz~FOO"]], [0, 0, 250, 0, 0, 2, 0, 1, 33, 29, 0.08457536754430096, ["mov     r9d, [rbp+prefixes]", "jmp     loc_AC21"], ["mov~r9d,[rbp+0]", "jmp~FOO"]], [0, 0, 250, 0, 0, 3, 0, 1, 32, 30, 0.024383583021223485, ["push    [rbp+var_3F0]", "push    arg", "jmp     loc_AE48"], ["push~[rbp+0]", "push~arg", "jmp~FOO"]], [1, 0, 252, 0, 0, 3, 1, 1, 6, 24, 0.03091285147297222, ["xor     r12d, r12d", "cmp     [rbp+result], 0", "jz      short loc_A65C"], ["xor~r12d,r12d", "cmp~[rbp+0],0", "jz~FOO"]], [4, 0, 253, 2, 0, 8, 2, 1, 5, 25, 0.017119458885348538, ["add     rax, 24h", "mov     [rbp+buf_malloced], 0", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rax, [rsp+430h+orig_errno+3]", "and     rax, 0FFFFFFFFFFFFFFF0h", "mov     [rbp+buf], rax", "jmp     loc_A645"], ["add~rax,0", "mov~[rbp+0],0", "and~rax,0", "sub~rsp,rax", "lea~rax,[rsp+0]", "and~rax,0", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 10, 0, 1, 3, 0, 2, 13, -1, 0.0007872621909180688, ["mov     rdi, result_0; ptr", "call    _free", "jmp     loc_A6D3"], ["mov~rdi,result_0", "call~FOO", "jmp~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 12, -1, 0.002711163284700095, ["test    result_0, result_0", "jnz     loc_B1B0"], ["test~result_0,result_0", "jnz~FOO"]], [0, 0, 11, 0, 1, 3, 0, 1, 16, -1, 0.0008850876702629177, ["call    ___errno_location", "mov     [rbp+saved_errno], rax", "nop     word ptr [rax+rax+00000000h]"], ["call~FOO", "mov~[rbp+0],rax", "nop~[ord ptr [rax+0]"]], [1, 0, 250, 0, 0, 2, 0, 1, 31, 39, 0.018209514226619712, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      loc_A6B5"], ["cmp~memory_size,0", "jz~FOO"]], [1, 0, 250, 1, 0, 4, 0, 1, 33, 30, 0.0012996813684387053, ["sub     rsp, 10h", "mov     r9, [rbp+var_3F0]", "fstp    [rsp+440h+var_440]", "jmp     loc_AAE9"], ["sub~rsp,0", "mov~r9,[rbp+0]", "fstp~<TAG>,<TAG>", "jmp~FOO"]], [1, 0, 250, 0, 0, 2, 0, 1, 32, 30, 0.02866170085900084, ["cmp     eax, 2", "jnz     loc_B200"], ["cmp~eax,0", "jnz~FOO"]], [2, 0, 250, 0, 1, 13, 2, 1, 34, 28, 0.21009186278346065, ["mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen_0", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "pop     rdx", "pop     rcx", "mov     ecx, [rbp+count]", "mov     r10, [rbp+maxlen]", "test    ecx, ecx", "jns     loc_AB24"], ["mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen_0", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "pop~rdx", "pop~rcx", "mov~ecx,[rbp+0]", "mov~r10,[rbp+0]", "test~ecx,ecx", "jns~FOO"]], [0, 0, 250, 0, 0, 2, 0, 1, 20, 25, 0.020871764771647382, ["mov     result_0, rcx", "jmp     loc_AFDF"], ["mov~result_0,rcx", "jmp~FOO"]], [0, 0, 250, 0, 0, 2, 1, 1, 19, 26, 0.023520040248197215, ["test    length, length", "jz      loc_B454"], ["test~length,length", "jz~FOO"]], [0, 0, 250, 0, 0, 2, 1, 1, 20, 26, 0.0026133378053552463, ["test    dl, dl", "jz      loc_B454"], ["test~dl,dl", "jz~FOO"]], [0, 0, 251, 0, 0, 2, 0, 0, 7, 24, 0.0, ["mov     rax, [rbp+lengthp]", "mov     r12, [rax]"], ["mov~rax,[rbp+0]", "mov~r12,<TAG>"]], [1, 0, 12, 0, 0, 3, 0, 1, 12, -1, 0.027412096819274416, ["cmp     result_0, [rbp+result]", "mov     byte ptr [result_0+length], 0", "jz      short loc_B551"], ["cmp~result_0,[rbp+0]", "mov~<TAG>,0", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 0, 0, 13, -1, 0.0029766895857789703, ["cmp     allocated, rbx", "jbe     short loc_B551"], ["cmp~allocated,rbx", "jbe~FOO"]], [0, 0, 10, 0, 1, 5, 1, 1, 14, -1, 0.0, ["mov     rdi, result_0; ptr", "mov     rsi, rbx; size", "call    _realloc", "test    memory, memory", "cmovnz  result_0, memory"], ["mov~rdi,result_0", "mov~rsi,rbx", "call~FOO", "test~memory,memory", "cmovnz~result_0,memory"]], [1, 0, 250, 0, 1, 7, 0, 1, 28, 34, 0.2463385320588071, ["mov     byte ptr [result_0+length], 0", "call    ___errno_location", "mov     [rbp+saved_errno], rax", "mov     eax, [rax]", "mov     [rbp+fbp], fbp_0", "mov     [rbp+orig_errno], eax", "nop     dword ptr [rax+rax+00h]"], ["mov~<TAG>,0", "call~FOO", "mov~[rbp+0],rax", "mov~eax,<TAG>", "mov~[rbp+0],fbp_0", "mov~[rbp+0],eax", "nop~[word ptr [rax+0]"]], [0, 0, 250, 0, 0, 2, 0, 0, 27, 35, 0.12984934876180892, ["cmp     allocated, rax", "jnb     short loc_AA3B"], ["cmp~allocated,rax", "jnb~FOO"]], [0, 0, 250, 0, 1, 6, 0, 2, 35, 35, 0.0017259209570126895, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_AA3B"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [0, 0, 250, 0, 0, 2, 0, 1, 34, 35, 0.020913689977080888, ["mov     result_0, rcx", "jmp     loc_AA3B"], ["mov~result_0,rcx", "jmp~FOO"]], [2, 0, 250, 0, 0, 3, 0, 1, 27, 3, 0.1068743361842473, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "jz      loc_AA3B"], ["cmp~allocated,0", "mov~edx,0", "jz~FOO"]], [1, 0, 250, 0, 0, 2, 0, 1, 24, 6, 0.2282128682430544, ["mov     dword ptr [rbp+prefix_count], 0", "jmp     loc_A9A7"], ["mov~[word ptr [rbp+0],0", "jmp~FOO"]], [2, 0, 250, 0, 0, 6, 0, 1, 23, 7, 0.23296439152551848, ["movzx   eax, byte ptr [dp+48h]", "mov     byte ptr [fbp_0+1], 0", "mov     [fbp_0], al", "mov     rax, [dp+28h]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      loc_B0B0"], ["movzx~eax,[yte ptr [dp+0]", "mov~[yte ptr [fbp_0+0],0", "mov~<TAG>,al", "mov~rax,[dp+0]", "cmp~rax,0", "jz~FOO"]], [0, 0, 250, 0, 0, 2, 1, 1, 28, 2, 0.017007658337525853, ["test    allocated, allocated", "jz      loc_A6B5"], ["test~allocated,allocated", "jz~FOO"]], [0, 0, 250, 0, 0, 2, 0, 0, 13, 25, 0.055047794734194196, ["cmp     allocated, rax", "jnb     short loc_AFDF"], ["cmp~allocated,rax", "jnb~FOO"]], [0, 0, 10, 0, 1, 3, 0, 2, 40, -1, 0.0, ["mov     rdi, result_0; ptr", "call    _free", "jmp     loc_ACB2"], ["mov~rdi,result_0", "call~FOO", "jmp~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 39, -1, 0.0026832131477444237, ["test    result_0, result_0", "jnz     loc_B45C"], ["test~result_0,result_0", "jnz~FOO"]], [2, 0, 250, 0, 0, 6, 1, 1, 13, 17, 0.2116524120968193, ["mov     eax, [dp+10h]", "mov     rdi, [rbp+buf]", "test    al, 1", "mov     byte ptr [rdi], 25h ; '%'", "lea     rbx, [rdi+1]", "jz      short loc_A877"], ["mov~eax,[dp+0]", "mov~rdi,[rbp+0]", "test~al,0", "mov~<TAG>,0", "lea~rbx,[rdi+0]", "jz~FOO"]], [2, 0, 250, 2, 0, 8, 0, 1, 31, 31, 0.025073951404028585, ["mov     rax, [dp+50h]; jumptable 000000000000AAAB case 1", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movsx   r9d, byte ptr [rax+10h]", "mov     eax, dword ptr [rbp+prefix_count]", "cmp     eax, 1", "jnz     loc_AC0E"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movsx~r9d,[yte ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jnz~FOO"]], [1, 0, 250, 0, 0, 2, 0, 1, 11, 27, 0.05963860472916317, ["cmp     rax, 0FFFFFFFFFFFFFFFFh", "jnz     loc_B476; jumptable 000000000000AAAB default case"], ["cmp~rax,0", "jnz~FOO"]], [1, 0, 250, 0, 0, 2, 0, 1, 15, 30, 0.020606238470568507, ["cmp     rax, 0Ch", "ja      loc_B442"], ["cmp~rax,0", "ja~FOO"]], [1, 0, 250, 0, 0, 3, 0, 1, 35, 28, 0.0566199899379507, ["mov     rdi, [rbp+fbp]", "cmp     byte ptr [rdi+1], 0", "jnz     loc_AFA8"], ["mov~rdi,[rbp+0]", "cmp~[yte ptr [rdi+0],0", "jnz~FOO"]], [0, 0, 250, 0, 0, 3, 1, 1, 34, 28, 0.14491680175899524, ["mov     ecx, [rbp+count]", "test    ecx, ecx", "js      loc_AC5C"], ["mov~ecx,[rbp+0]", "test~ecx,ecx", "js~FOO"]], [0, 0, 250, 0, 0, 2, 1, 0, 36, 27, 0.03759992173961652, ["test    eax, eax", "jns     loc_AB3E"], ["test~eax,eax", "jns~FOO"]], [1, 0, 250, 0, 0, 1, 0, 0, 16, 29, 0.01607831628374979, ["mov     r12d, 0Ch"], ["mov~r12d,0"]], [0, 0, 10, 0, 1, 3, 0, 2, 41, -1, 0.0, ["mov     rdi, result_0; ptr", "call    _free", "jmp     loc_B3B2"], ["mov~rdi,result_0", "call~FOO", "jmp~FOO"]], [0, 0, 13, 0, 1, 6, 0, 2, 19, -1, 9.083794510593101e-05, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_B52C"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [2, 0, 39, 0, 0, 3, 0, 1, 11, -1, 0.024358544356867348, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "mov     eax, 1", "jz      loc_B52C"], ["cmp~allocated,0", "mov~eax,0", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 0, 1, 18, -1, 0.001250768628766281, ["mov     result_0, rcx", "jmp     loc_B52C"], ["mov~result_0,rcx", "jmp~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 18, -1, 0.001152943149421432, ["mov     result_0, memory"], ["mov~result_0,memory"]], [1, 0, 250, 0, 0, 3, 0, 0, 14, 17, 0.0, ["mov     rdi, [rbp+buf]", "lea     fbp_0, [rdi+2]", "mov     byte ptr [rdi+1], 27h ; '''"], ["mov~rdi,[rbp+0]", "lea~fbp_0,[rdi+0]", "mov~[yte ptr [rdi+0],0"]], [0, 0, 0, 0, 1, 1, 0, 1, 12, -1, 0.0, ["call    _abort; jumptable 000000000000AAAB default case"], ["call~FOO"]], [2, 0, 250, 2, 0, 4, 0, 1, 24, 7, 0.0029766895857789703, ["shl     rax, 5", "add     rax, r8", "cmp     dword ptr [rax], 5", "jnz     loc_B476; jumptable 000000000000AAAB default case"], ["shl~rax,0", "add~rax,r8", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 250, 2, 0, 4, 0, 1, 26, 6, 0.002655263010788753, ["shl     rax, 5", "add     r8, rax", "cmp     dword ptr [r8], 5", "jnz     loc_B476; jumptable 000000000000AAAB default case"], ["shl~rax,0", "add~r8,rax", "cmp~<TAG>,0", "jnz~FOO"]], [5, 0, 250, 1, 0, 11, 0, 1, 29, 33, 0.3276594555313321, ["mov     rax, [rbp+saved_errno]", "mov     rbx, allocated", "mov     r10d, 7FFFFFFFh", "sub     rbx, length", "mov     [rbp+count], 0FFFFFFFFh", "cmp     maxlen_0, 7FFFFFFFh", "mov     dword ptr [rax], 0", "mov     eax, dword ptr [rbp+cp]", "cmovbe  r10, maxlen_0", "cmp     eax, 11h; switch 18 cases", "ja      loc_B476; jumptable 000000000000AAAB default case"], ["mov~rax,[rbp+0]", "mov~rbx,allocated", "mov~r10d,0", "sub~rbx,length", "mov~[rbp+0],0", "cmp~maxlen_0,0", "mov~<TAG>,0", "mov~eax,[word ptr [rbp+0]", "cmovbe~r10,maxlen_0", "cmp~eax,0", "ja~FOO"]], [1, 0, 250, 1, 0, 3, 0, 1, 36, 27, 0.000517077533679915, ["add     rdx, result_0", "cmp     byte ptr [rdx+length], 0", "jnz     loc_B476; jumptable 000000000000AAAB default case"], ["add~rdx,result_0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 1, 250, 1, 0, 4, 0, 1, 13, 26, 0.015721952037564983, ["mov     edx, edi", "sub     edx, 12h", "cmp     edx, 4; switch 5 cases", "ja      loc_B476; jumptable 000000000000AAAB default case"], ["mov~edx,edi", "sub~edx,<STR>", "cmp~edx,0", "ja~FOO"]], [1, 0, 250, 0, 0, 2, 1, 1, 14, 16, 0.21335737045111522, ["test    al, 2", "jz      short loc_A882"], ["test~al,0", "jz~FOO"]], [0, 0, 250, 0, 1, 7, 1, 2, 32, 37, 0.023818175042391043, ["mov     rdi, r12; size", "mov     byte ptr [rbp+saved_errno], dl", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "movzx   edx, byte ptr [rbp+saved_errno]", "jz      loc_A6B5"], ["mov~rdi,r12", "mov~[yte ptr [rbp+0],dl", "call~FOO", "test~rax,rax", "mov~rcx,rax", "movzx~edx,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 23, 0, 1, 5, 1, 2, 17, -1, 0.004381183967801443, ["mov     rsi, r12; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      loc_B19B"], ["mov~rsi,r12", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [2, 0, 250, 1, 0, 2, 0, 0, 15, 16, 0.0, ["mov     byte ptr [rbx], 2Dh ; '-'", "add     rbx, 1"], ["mov~<TAG>,0", "add~rbx,0"]], [0, 0, 14, 0, 0, 4, 1, 1, 37, -1, 0.031234278047962433, ["mov     retcount, [rbp+saved_errno]", "mov     ebx, [rax]", "test    ebx, ebx", "jnz     short loc_ACA0"], ["mov~retcount,[rbp+0]", "mov~ebx,<TAG>", "test~ebx,ebx", "jnz~FOO"]], [0, 0, 250, 0, 0, 4, 1, 1, 17, 28, 0.043022248309016714, ["cmp     result_0, [rbp+result]", "setz    dl", "test    result_0, result_0", "jz      loc_B2F0"], ["cmp~result_0,[rbp+0]", "setz~dl", "test~result_0,result_0", "jz~FOO"]], [0, 0, 250, 0, 0, 2, 0, 1, 17, 29, 0.003270166023813517, ["mov     r12, memory_size", "jmp     loc_B076"], ["mov~r12,memory_size", "jmp~FOO"]], [1, 0, 250, 0, 0, 2, 1, 1, 15, 15, 0.21506232880541115, ["test    al, 4", "jz      short loc_A88D"], ["test~al,0", "jz~FOO"]], [0, 0, 14, 0, 0, 1, 0, 1, 30, 0, 9.782547934484879e-05, ["jmp     loc_A6B5"], ["jmp~FOO"]], [0, 0, 8, 0, 1, 2, 0, 1, 41, -1, 0.0, ["mov     rdi, rax; ptr", "call    _free"], ["mov~rdi,rax", "call~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 40, -1, 0.016476605735368105, ["mov     rax, [rbp+buf_malloced]", "test    rax, rax", "jz      short loc_B3C6"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [2, 0, 250, 1, 0, 2, 0, 0, 16, 15, 0.0, ["mov     byte ptr [rbx], 2Bh ; '+'", "add     rbx, 1"], ["mov~<TAG>,0", "add~rbx,0"]], [0, 0, 250, 0, 0, 2, 1, 1, 34, 36, 0.0026133378053552463, ["test    dl, dl", "jz      loc_B420"], ["test~dl,dl", "jz~FOO"]], [0, 0, 250, 0, 0, 2, 1, 1, 33, 36, 0.023561965453630724, ["test    length, length", "jz      loc_B420"], ["test~length,length", "jz~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 17, -1, 0.009614847112750853, ["test    length, length", "jz      short loc_B630"], ["test~length,length", "jz~FOO"]], [0, 0, 28, 0, 1, 5, 1, 2, 16, -1, 0.01303873888982056, ["mov     rdi, r12; size", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "jz      loc_A6B5"], ["mov~rdi,r12", "call~FOO", "test~rax,rax", "mov~rcx,rax", "jz~FOO"]], [1, 0, 250, 0, 0, 2, 1, 1, 16, 14, 0.21676728715970708, ["test    al, 8", "jz      short loc_A898"], ["test~al,0", "jz~FOO"]], [1, 0, 250, 1, 0, 3, 0, 0, 33, 31, 0.005726983062217015, ["sub     rsp, 8", "push    [rbp+var_3F0]", "push    r9"], ["sub~rsp,0", "push~[rbp+0]", "push~r9"]], [0, 0, 250, 0, 0, 1, 0, 0, 33, 32, 0.00011180054782268433, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 1, 250, 1, 0, 2, 0, 0, 17, 14, 0.0, ["mov     byte ptr [rbx], 20h ; ' '", "add     rbx, 1"], ["mov~<TAG>,<STR>", "add~rbx,0"]], [0, 1, 7, 1, 0, 5, 0, 1, 2, -1, 0.00015372575325619097, ["mov     rax, [rbp+var_408]", "mov     rdi, [rbp+d.dir]; ptr", "add     rax, 20h", "cmp     rdi, rax", "jz      short loc_B49C"], ["mov~rax,[rbp+0]", "mov~rdi,[rbp+0]", "add~rax,<STR>", "cmp~rdi,rax", "jz~FOO"]], [0, 0, 266, 0, 1, 5, 1, 2, 1, 29, 0.0036754430096707473, ["mov     rsi, r14; a", "mov     rdi, args; args", "call    printf_fetchargs", "test    eax, eax", "js      loc_B480"], ["mov~rsi,r14", "mov~rdi,args", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 250, 0, 0, 4, 0, 0, 40, 34, 0.0424283078987087, ["cmp     rax, rdx", "cmovb   rax, rdx", "cmp     allocated, rax", "jnb     loc_AA60"], ["cmp~rax,rdx", "cmovb~rax,rdx", "cmp~allocated,rax", "jnb~FOO"]], [0, 0, 250, 0, 0, 2, 0, 1, 46, 34, 0.014380345463692773, ["mov     result_0, memory", "jmp     loc_AA60"], ["mov~result_0,memory", "jmp~FOO"]], [0, 0, 250, 0, 1, 6, 0, 2, 47, 34, 0.001725920957012689, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_AA60"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [1, 0, 250, 0, 0, 2, 0, 1, 36, 34, 0.017245234501649057, ["mov     byte ptr [rdi+1], 0", "jmp     loc_AA60"], ["mov~[yte ptr [rdi+0],0", "jmp~FOO"]], [4, 0, 13, 0, 0, 7, 1, 0, 38, -1, 0.0, ["movzx   eax, byte ptr [dp+48h]", "mov     ebx, 16h", "and     eax, 0FFFFFFEFh", "cmp     al, 63h ; 'c'", "mov     eax, 54h ; 'T'", "cmovz   ebx, eax", "nop     dword ptr [rax+00000000h]"], ["movzx~eax,[yte ptr [dp+0]", "mov~ebx,0", "and~eax,0", "cmp~al,0", "mov~eax,0", "cmovz~ebx,eax", "nop~[word ptr [rax+0]"]], [1, 0, 250, 0, 0, 2, 1, 1, 17, 13, 0.21847224551400302, ["test    al, 10h", "jz      short loc_A8A3"], ["test~al,0", "jz~FOO"]], [2, 0, 250, 1, 0, 2, 0, 0, 18, 13, 0.0, ["mov     byte ptr [rbx], 23h ; '#'", "add     rbx, 1"], ["mov~<TAG>,0", "add~rbx,0"]], [0, 0, 250, 2, 0, 5, 0, 0, 8, 24, 0.0607915478785846, ["sub     rcx, cp_0", "mov     rax, length", "add     rax, n_0", "mov     r14, rax", "jnb     loc_A788"], ["sub~rcx,cp_0", "mov~rax,length", "add~rax,n_0", "mov~r14,rax", "jnb~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 38, -1, 0.026287103806808654, ["cmp     result_0, [rbp+result]", "jz      short loc_ACB2"], ["cmp~result_0,[rbp+0]", "jz~FOO"]], [0, 0, 250, 0, 0, 2, 0, 1, 20, 25, 0.018950192855944993, ["mov     result_0, memory", "jmp     loc_AFDF"], ["mov~result_0,memory", "jmp~FOO"]], [2, 0, 250, 1, 0, 2, 0, 0, 19, 12, 0.0, ["mov     byte ptr [rbx], 49h ; 'I'", "add     rbx, 1"], ["mov~<TAG>,0", "add~rbx,0"]], [1, 0, 250, 0, 0, 2, 1, 1, 18, 12, 0.22017720386829895, ["test    al, 40h", "jz      short loc_A8AE"], ["test~al,0", "jz~FOO"]], [1, 0, 250, 0, 0, 2, 0, 1, 9, 24, 0.008706467661691543, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "jz      loc_B180"], ["cmp~allocated,0", "jz~FOO"]], [0, 1, 250, 0, 0, 2, 1, 1, 19, 11, 0.22188216222259488, ["test    al, 20h", "jz      short loc_A8B9"], ["test~al,<STR>", "jz~FOO"]], [1, 0, 5, 1, 0, 5, 0, 1, 3, -1, 0.0002375761641232042, ["mov     rax, [rbp+var_410]", "mov     rdi, [rbp+a.arg]; ptr", "add     rax, 10h", "cmp     rdi, rax", "jz      short loc_B4B8"], ["mov~rax,[rbp+0]", "mov~rdi,[rbp+0]", "add~rax,0", "cmp~rdi,rax", "jz~FOO"]], [0, 0, 6, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    _free"], ["call~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    _free"], ["call~FOO"]], [2, 0, 250, 1, 0, 2, 0, 0, 20, 11, 0.0, ["mov     byte ptr [rbx], 30h ; '0'", "add     rbx, 1"], ["mov~<TAG>,0", "add~rbx,0"]], [2, 0, 250, 1, 0, 3, 0, 1, 25, 8, 0.001711945888534854, ["mov     byte ptr [rbx], 4Ch ; 'L'", "add     rbx, 1", "jmp     loc_A96B"], ["mov~<TAG>,0", "add~rbx,0", "jmp~FOO"]], [1, 0, 250, 0, 0, 2, 1, 1, 24, 9, 0.007826038347587903, ["test    ah, 10h", "jnz     loc_B2B0"], ["test~ah,0", "jnz~FOO"]], [0, 0, 13, 0, 1, 2, 0, 1, 10, -1, 0.023019266961074775, ["call    ___errno_location", "mov     [rbp+saved_errno], rax"], ["call~FOO", "mov~[rbp+0],rax"]], [1, 0, 250, 0, 0, 2, 0, 1, 13, 26, 0.003200290681424339, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "jnz     loc_A6B5"], ["cmp~allocated,0", "jnz~FOO"]], [0, 0, 250, 0, 0, 1, 0, 1, 11, 28, 0.014932826504183223, ["js      loc_A6B5"], ["js~FOO"]], [1, 0, 250, 0, 0, 2, 0, 1, 12, 27, 0.010496673933702285, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      loc_A6B5"], ["cmp~memory_size,0", "jz~FOO"]], [0, 0, 250, 0, 1, 7, 1, 2, 18, 27, 0.023520040248197215, ["mov     rdi, r12; size", "mov     byte ptr [rbp+saved_errno], dl", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "movzx   edx, byte ptr [rbp+saved_errno]", "jz      loc_A6B5"], ["mov~rdi,r12", "mov~[yte ptr [rbp+0],dl", "call~FOO", "test~rax,rax", "mov~rcx,rax", "movzx~edx,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 250, 0, 0, 2, 0, 1, 16, 30, 0.0029976521884957238, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      loc_A6B5"], ["cmp~memory_size,0", "jz~FOO"]], [0, 0, 38, 0, 0, 2, 1, 1, 12, -1, 0.008566716976913186, ["test    allocated, allocated", "jz      loc_A6B5"], ["test~allocated,allocated", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 39, -1, 0.018656716417910446, ["mov     rax, [rbp+buf_malloced]", "test    rax, rax", "jz      short loc_ACC6"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 250, 1, 0, 7, 1, 0, 39, 35, 0.056221700486332384, ["lea     rsi, [allocated+allocated]", "lea     edx, [rcx+2]", "test    allocated, allocated", "mov     rax, 0FFFFFFFFFFFFFFFFh", "cmovns  rax, rsi", "add     rdx, length", "jb      loc_B638"], ["lea~rsi,<TAG>", "lea~edx,[rcx+0]", "test~allocated,allocated", "mov~rax,0", "cmovns~rax,rsi", "add~rdx,length", "jb~FOO"]], [0, 0, 250, 0, 0, 2, 1, 1, 10, 29, 0.04280563474761026, ["test    allocated, allocated", "jnz     loc_B0C0"], ["test~allocated,allocated", "jnz~FOO"]], [0, 0, 8, 0, 1, 2, 0, 1, 40, -1, 0.0, ["mov     rdi, rax; ptr", "call    _free"], ["mov~rdi,rax", "call~FOO"]], [0, 0, 250, 0, 0, 4, 0, 1, 20, 10, 0.2235871205768908, ["mov     rsi, [dp+18h]; src", "mov     rdx, [dp+20h]", "cmp     rsi, rdx", "jz      short loc_A8F6"], ["mov~rsi,[dp+0]", "mov~rdx,[dp+0]", "cmp~rsi,rdx", "jz~FOO"]], [0, 0, 250, 0, 0, 3, 0, 1, 15, 24, 0.002379255408351501, ["mov     [rax], r14b; jumptable 000000000000B050 case 0", "mov     rbx, length", "jmp     loc_AFE4"], ["mov~<TAG>,r14b", "mov~rbx,length", "jmp~FOO"]], [0, 0, 250, 1, 0, 5, 0, 1, 14, 25, 0.01654648107775728, ["lea     rdi, off_EC88", "mov     rax, [rax+10h]", "movsxd  rdx, dword ptr [rdi+rdx*4]", "add     rdx, rdi", "jmp     rdx; switch jump"], ["lea~rdi,<TAG>", "mov~rax,[rax+0]", "movsxd~rdx,<TAG>", "add~rdx,rdi", "jmp~rdx"]], [0, 0, 12, 0, 0, 2, 0, 1, 11, -1, 0.030565803939105973, ["cmp     result_0, [rbp+result]", "jz      short loc_A6D3"], ["cmp~result_0,[rbp+0]", "jz~FOO"]], [0, 0, 250, 0, 0, 2, 1, 1, 41, 39, 0.0349167085918721, ["test    allocated, allocated", "js      out_of_memory"], ["test~allocated,allocated", "js~FOO"]], [1, 0, 250, 0, 0, 2, 0, 1, 43, 39, 0.002795013695567108, ["cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 250, 0, 1, 5, 1, 2, 45, 35, 0.013800380121862597, ["mov     rsi, r12; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      out_of_memory"], ["mov~rsi,r12", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [0, 0, 250, 0, 1, 5, 1, 2, 44, 36, 0.018733579294538543, ["mov     rdi, r12; size", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "jz      out_of_memory"], ["mov~rdi,r12", "call~FOO", "test~rax,rax", "mov~rcx,rax", "jz~FOO"]], [0, 0, 250, 1, 0, 3, 0, 0, 12, 27, 0.015198352805262076, ["add     allocated, allocated", "cmp     allocated, rax", "jnb     loc_A7A6"], ["add~allocated,allocated", "cmp~allocated,rax", "jnb~FOO"]], [2, 0, 250, 2, 0, 8, 0, 1, 31, 31, 0.03320464624443321, ["mov     rax, [dp+50h]; jumptable 000000000000AAAB cases 7-10,15-17", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "mov     r9, [rax+10h]", "mov     eax, dword ptr [rbp+prefix_count]", "cmp     eax, 1", "jz      loc_AF98"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "mov~r9,[rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [2, 1, 250, 1, 1, 11, 1, 2, 33, 29, 0.039520329066279114, ["mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "add     rsp, 20h", "mov     r10, [rbp+maxlen]", "jmp     loc_AB16"], ["mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "add~rsp,<STR>", "mov~r10,[rbp+0]", "jmp~FOO"]], [2, 0, 250, 2, 0, 5, 0, 1, 32, 30, 0.02458098086347287, ["sub     rsp, 8", "push    [rbp+var_3F0]", "sub     rsp, 10h", "fstp    [rsp+450h+var_450]", "jmp     loc_AE9B"], ["sub~rsp,0", "push~[rbp+0]", "sub~rsp,0", "fstp~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 250, 0, 0, 2, 0, 0, 34, 30, 0.010607076974677176, ["mov     eax, [rbp+prefixes+4]", "push    rax"], ["mov~eax,[rbp+0]", "push~rax"]], [1, 0, 47, 1, 0, 4, 1, 0, 10, -1, 0.08649169880932417, ["mov     rbx, length", "xor     eax, eax", "add     rbx, 1", "jb      loc_B5E0"], ["mov~rbx,length", "xor~eax,eax", "add~rbx,0", "jb~FOO"]], [1, 0, 250, 0, 0, 2, 0, 1, 11, 28, 0.02609797454674199, ["cmp     rax, 0Ch", "ja      loc_B0D2"], ["cmp~rax,0", "ja~FOO"]], [1, 0, 250, 0, 0, 2, 0, 1, 32, 31, 0.00704622952652466, ["cmp     eax, 2", "jz      loc_AF80"], ["cmp~eax,0", "jz~FOO"]], [0, 1, 7, 1, 0, 5, 0, 1, 40, -1, 0.013430040807199955, ["mov     rax, [rbp+var_408]", "mov     rdi, [rbp+d.dir]; ptr", "add     rax, 20h", "cmp     rdi, rax", "jz      short loc_ACE2"], ["mov~rax,[rbp+0]", "mov~rdi,[rbp+0]", "add~rax,<STR>", "cmp~rdi,rax", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 12, -1, 0.02316367600201241, ["mov     rax, [rbp+buf_malloced]", "test    rax, rax", "jz      short out_of_memory_1"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 3, 0, 1, 4, 1, 2, 4, -1, 0.00020962602716753312, ["call    ___errno_location", "xor     r15d, r15d", "mov     dword ptr [rax], 16h", "jmp     loc_A72F"], ["call~FOO", "xor~r15d,r15d", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 8, 0, 1, 2, 0, 1, 13, -1, 0.0, ["mov     rdi, rax; ptr", "call    _free"], ["mov~rdi,rax", "call~FOO"]], [1, 0, 250, 1, 0, 2, 0, 0, 33, 30, 0.004723573145508413, ["sub     rsp, 8", "push    [rbp+var_3F0]"], ["sub~rsp,0", "push~[rbp+0]"]], [0, 0, 250, 0, 0, 3, 0, 1, 15, 24, 0.002379255408351501, ["mov     [rax], r14w; jumptable 000000000000B050 case 1", "mov     rbx, length", "jmp     loc_AFE4"], ["mov~<TAG>,r14w", "mov~rbx,length", "jmp~FOO"]], [0, 0, 250, 0, 0, 5, 1, 1, 13, 26, 0.010769187769020097, ["cmp     result_0, [rbp+result]", "mov     r12, memory_size", "setz    dl", "test    result_0, result_0", "jnz     loc_A7B9"], ["cmp~result_0,[rbp+0]", "mov~r12,memory_size", "setz~dl", "test~result_0,result_0", "jnz~FOO"]], [0, 0, 250, 0, 0, 1, 0, 0, 14, 26, 0.00013742150669871617, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 250, 2, 1, 10, 0, 1, 21, 10, 0.0, ["mov     rcx, rdx", "mov     rdi, fbp_0; dest", "mov     [rbp+prefix_count], r8", "sub     rcx, rsi", "mov     rdx, n_1; n", "mov     [rbp+saved_errno], n_1", "call    _memcpy", "mov     rcx, [rbp+saved_errno]", "mov     r8, [rbp+prefix_count]", "add     fbp_0, rcx"], ["mov~rcx,rdx", "mov~rdi,fbp_0", "mov~[rbp+0],r8", "sub~rcx,rsi", "mov~rdx,n_1", "mov~[rbp+0],n_1", "call~FOO", "mov~rcx,[rbp+0]", "mov~r8,[rbp+0]", "add~fbp_0,rcx"]], [1, 0, 250, 0, 0, 3, 0, 1, 22, 8, 0.2269970372854827, ["mov     edi, dword ptr [rbp+cp]", "cmp     edi, 10h", "ja      short loc_A96B"], ["mov~edi,[word ptr [rbp+0]", "cmp~edi,0", "ja~FOO"]], [1, 0, 250, 0, 0, 2, 1, 1, 25, 8, 0.004339258762367936, ["test    ah, 6", "jz      short loc_A96B"], ["test~ah,0", "jz~FOO"]], [2, 0, 250, 1, 0, 2, 0, 0, 24, 8, 0.006875733691095087, ["mov     byte ptr [rbx], 6Ch ; 'l'", "add     rbx, 1"], ["mov~<TAG>,0", "add~rbx,0"]], [1, 0, 5, 1, 0, 5, 0, 1, 41, -1, 0.008091564648666779, ["mov     rax, [rbp+var_410]", "mov     rdi, [rbp+a.arg]; ptr", "add     rax, 10h", "cmp     rdi, rax", "jz      short loc_ACFE"], ["mov~rax,[rbp+0]", "mov~rdi,[rbp+0]", "add~rax,0", "cmp~rdi,rax", "jz~FOO"]], [0, 0, 6, 0, 1, 1, 0, 1, 41, -1, 0.0, ["call    _free"], ["call~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 42, -1, 0.0, ["call    _free"], ["call~FOO"]], [0, 1, 7, 1, 0, 5, 0, 1, 4, -1, 0.01817457655542512, ["mov     rax, [rbp+var_408]", "mov     rdi, [rbp+d.dir]; ptr", "add     rax, 20h", "cmp     rdi, rax", "jz      short loc_A703"], ["mov~rax,[rbp+0]", "mov~rdi,[rbp+0]", "add~rax,<STR>", "cmp~rdi,rax", "jz~FOO"]], [0, 0, 6, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    _free"], ["call~FOO"]], [0, 0, 250, 0, 0, 4, 0, 1, 21, 9, 0.22529207893118677, ["mov     rsi, [dp+30h]; src", "mov     rdx, [dp+38h]", "cmp     rsi, rdx", "jz      short loc_A933"], ["mov~rsi,[dp+0]", "mov~rdx,[dp+0]", "cmp~rsi,rdx", "jz~FOO"]], [1, 0, 250, 1, 0, 4, 0, 0, 12, 26, 0.06002291911230365, ["mov     rax, length", "add     rax, 1", "mov     rbx, rax", "jnb     loc_B058"], ["mov~rax,length", "add~rax,0", "mov~rbx,rax", "jnb~FOO"]], [0, 0, 33, 0, 0, 4, 1, 1, 15, -1, 0.025092235451953715, ["cmp     result_0, [rbp+result]", "setz    r13b", "test    result_0, result_0", "jz      loc_B5AC"], ["cmp~result_0,[rbp+0]", "setz~r13b", "test~result_0,result_0", "jz~FOO"]], [1, 0, 34, 0, 0, 1, 0, 0, 14, -1, 0.012528648890379563, ["mov     r12d, 0Ch"], ["mov~r12d,0"]], [0, 0, 3, 0, 0, 4, 1, 1, 42, -1, 0.002641287942310917, ["mov     rax, [rbp+saved_errno]", "xor     r15d, r15d", "mov     [rax], ebx", "jmp     loc_A72F"], ["mov~rax,[rbp+0]", "xor~r15d,r15d", "mov~<TAG>,ebx", "jmp~FOO"]], [2, 0, 250, 0, 1, 10, 1, 1, 34, 29, 0.010355525742076136, ["mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "pop     rsi", "pop     rdi", "mov     r10, [rbp+maxlen]"], ["mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "pop~rsi", "pop~rdi", "mov~r10,[rbp+0]"]], [0, 0, 250, 0, 0, 4, 1, 1, 13, 26, 0.033357090949745656, ["cmp     result_0, [rbp+result]", "setz    dl", "test    result_0, result_0", "jz      loc_B0F8"], ["cmp~result_0,[rbp+0]", "setz~dl", "test~result_0,result_0", "jz~FOO"]], [0, 0, 250, 0, 0, 2, 1, 1, 14, 25, 0.02410419811057074, ["test    dl, dl", "jnz     loc_B0F8"], ["test~dl,dl", "jnz~FOO"]], [1, 0, 5, 1, 0, 5, 0, 1, 5, -1, 0.012249147520822852, ["mov     rax, [rbp+var_410]", "mov     rdi, [rbp+a.arg]; ptr", "add     rax, 10h", "cmp     rdi, rax", "jz      short loc_A71F"], ["mov~rax,[rbp+0]", "mov~rdi,[rbp+0]", "add~rax,0", "cmp~rdi,rax", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    _free"], ["call~FOO"]], [2, 0, 250, 2, 0, 8, 0, 1, 31, 31, 0.05501751541915882, ["mov     rax, [dp+50h]; jumptable 000000000000AAAB case 12", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "fld     tbyte ptr [rax+10h]", "mov     eax, dword ptr [rbp+prefix_count]", "cmp     eax, 1", "jz      loc_B360"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "fld~<TAG>,[byte ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [5, 0, 250, 3, 1, 17, 1, 2, 33, 29, 0.02558718579387702, ["mov     eax, [rbp+prefixes+4]", "sub     rsp, 8", "push    [rbp+var_3F0]", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "sub     rsp, 18h", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "fstp    [rsp+458h+var_450]", "push    rax", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "add     rsp, 30h", "mov     r10, [rbp+maxlen]", "jmp     loc_AB16"], ["mov~eax,[rbp+0]", "sub~rsp,0", "push~[rbp+0]", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "sub~rsp,0", "mov~rcx,0", "mov~edx,0", "fstp~<TAG>,[rsp+0]", "push~rax", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "add~rsp,0", "mov~r10,[rbp+0]", "jmp~FOO"]], [3, 0, 250, 0, 1, 10, 0, 2, 33, 29, 0.025594173328115942, ["mov     r9, [rbp+var_3F0]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     eax, 1", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "mov     r10, [rbp+maxlen]", "jmp     loc_AB16"], ["mov~r9,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "mov~eax,0", "mov~[rbp+0],maxlen_0", "call~FOO", "mov~r10,[rbp+0]", "jmp~FOO"]], [0, 0, 32, 0, 0, 2, 1, 1, 16, -1, 0.0069735591704399354, ["test    r13b, r13b", "jnz     loc_B5AC"], ["test~r13b,r13b", "jnz~FOO"]], [1, 0, 3, 0, 0, 3, 1, 0, 6, -1, 0.006211917938397898, ["mov     rax, [rbp+saved_errno]", "xor     r15d, r15d", "mov     dword ptr [rax], 0Ch"], ["mov~rax,[rbp+0]", "xor~r15d,r15d", "mov~<TAG>,0"]], [0, 0, 250, 0, 0, 3, 0, 0, 35, 27, 0.3000936329588015, ["movsxd  rdx, ecx", "cmp     rdx, r10", "jnb     short loc_AB3A"], ["movsxd~rdx,ecx", "cmp~rdx,r10", "jnb~FOO"]], [0, 0, 250, 2, 1, 10, 0, 1, 22, 9, 0.0, ["mov     rcx, rdx", "mov     rdi, fbp_0; dest", "mov     [rbp+prefix_count], r8", "sub     rcx, rsi", "mov     rdx, n_2; n", "mov     [rbp+saved_errno], n_2", "call    _memcpy", "mov     rcx, [rbp+saved_errno]", "mov     r8, [rbp+prefix_count]", "add     fbp_0, rcx"], ["mov~rcx,rdx", "mov~rdi,fbp_0", "mov~[rbp+0],r8", "sub~rcx,rsi", "mov~rdx,n_2", "mov~[rbp+0],n_2", "call~FOO", "mov~rcx,[rbp+0]", "mov~r8,[rbp+0]", "add~fbp_0,rcx"]], [0, 0, 250, 0, 1, 6, 0, 2, 21, 25, 0.0017259209570126893, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_AFDF"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [1, 0, 250, 0, 0, 2, 0, 1, 38, 36, 0.08203365196489462, ["cmp     rbx, 7FFFFFFEh", "ja      overflow"], ["cmp~rbx,0", "ja~FOO"]], [1, 0, 250, 0, 0, 1, 0, 0, 14, 24, 0.07378836156297165, ["mov     byte ptr [result_0+length], 25h ; '%'"], ["mov~<TAG>,0"]], [0, 0, 250, 0, 0, 1, 0, 0, 14, 25, 0.003270166023813517, ["mov     rbx, allocated"], ["mov~rbx,allocated"]], [1, 0, 3, 0, 0, 4, 1, 1, 43, -1, 0.0006288780815025994, ["mov     rax, [rbp+saved_errno]", "xor     r15d, r15d", "mov     dword ptr [rax], 4Bh ; 'K'", "jmp     loc_A72F"], ["mov~rax,[rbp+0]", "xor~r15d,r15d", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 3, 0, 1, 16, -1, 0.001124993012465761, ["mov     rax, [rbp+lengthp]", "mov     [rax], length", "jmp     loc_A72F"], ["mov~rax,[rbp+0]", "mov~<TAG>,length", "jmp~FOO"]], [0, 0, 250, 0, 0, 2, 1, 1, 16, 24, 0.0026133378053552463, ["test    dl, dl", "jz      loc_B340"], ["test~dl,dl", "jz~FOO"]], [0, 0, 250, 0, 0, 2, 0, 1, 16, 23, 0.020101272662902715, ["mov     result_0, r9", "jmp     loc_A7F4"], ["mov~result_0,r9", "jmp~FOO"]], [0, 0, 250, 0, 0, 2, 0, 0, 37, 26, 0.005897478897646599, ["mov     [rbp+count], eax", "mov     ecx, eax"], ["mov~[rbp+0],eax", "mov~ecx,eax"]], [0, 0, 250, 0, 0, 2, 0, 1, 36, 26, 0.3012675387109397, ["cmp     ecx, eax", "jge     short loc_AB46"], ["cmp~ecx,eax", "jge~FOO"]], [1, 0, 5, 1, 0, 5, 0, 1, 15, -1, 0.007162222594890715, ["mov     rax, [rbp+var_410]", "mov     rdi, [rbp+a.arg]; ptr", "add     rax, 10h", "cmp     rdi, rax", "jz      short loc_B59D"], ["mov~rax,[rbp+0]", "mov~rdi,[rbp+0]", "add~rax,0", "cmp~rdi,rax", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 16, -1, 0.0, ["call    _free"], ["call~FOO"]], [1, 0, 5, 1, 0, 5, 0, 1, 42, -1, 0.006023254513947118, ["mov     rax, [rbp+var_410]", "mov     rdi, [rbp+a.arg]; ptr", "add     rax, 10h", "cmp     rdi, rax", "jz      short loc_B3FE"], ["mov~rax,[rbp+0]", "mov~rdi,[rbp+0]", "add~rax,0", "cmp~rdi,rax", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 43, -1, 0.0, ["call    _free"], ["call~FOO"]], [0, 0, 250, 0, 0, 3, 0, 0, 37, 25, 0.31017664486555985, ["lea     eax, [rcx+1]", "cmp     rax, r10", "jb      loc_B380"], ["lea~eax,[rcx+0]", "cmp~rax,r10", "jb~FOO"]], [2, 0, 250, 1, 0, 5, 1, 1, 23, 9, 0.012968863547431382, ["mov     eax, 1", "mov     ecx, edi", "shl     rax, cl", "test    eax, 14180h", "jnz     short loc_A964"], ["mov~eax,0", "mov~ecx,edi", "shl~rax,cl", "test~eax,0", "jnz~FOO"]], [0, 0, 250, 0, 0, 4, 1, 1, 43, 37, 0.03345631393593829, ["cmp     result_0, [rbp+result]", "setz    bl", "test    result_0, result_0", "jz      loc_AF40"], ["cmp~result_0,[rbp+0]", "setz~bl", "test~result_0,result_0", "jz~FOO"]], [0, 0, 250, 0, 0, 2, 1, 1, 44, 36, 0.013108614232209739, ["test    bl, bl", "jnz     loc_AF40"], ["test~bl,bl", "jnz~FOO"]], [0, 0, 0, 0, 0, 8, 0, 0, 3, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [2, 0, 250, 2, 0, 8, 0, 1, 31, 31, 0.053899509940931976, ["mov     rax, [dp+50h]; jumptable 000000000000AAAB case 11", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movsd   xmm0, qword ptr [rax+10h]", "mov     eax, dword ptr [rbp+prefix_count]", "cmp     eax, 1", "jz      loc_B350"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movsd~xmm0,[word ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 15, 0, 0, 2, 1, 1, 18, -1, 0.0028928391749119572, ["test    r13b, r13b", "jz      short loc_B630"], ["test~r13b,r13b", "jz~FOO"]], [2, 0, 250, 1, 0, 2, 0, 0, 26, 9, 2.7950136955671083e-05, ["mov     byte ptr [rbx], 6Ch ; 'l'", "add     rbx, 1"], ["mov~<TAG>,0", "add~rbx,0"]], [0, 0, 250, 0, 0, 3, 0, 1, 15, 24, 0.002379255408351501, ["mov     [rax], r14d; jumptable 000000000000B050 case 2", "mov     rbx, length", "jmp     loc_AFE4"], ["mov~<TAG>,r14d", "mov~rbx,length", "jmp~FOO"]], [0, 0, 250, 0, 1, 10, 0, 2, 17, 23, 0.0017259209570126893, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "mov     [rbp+cp], r8", "mov     [rbp+saved_errno], rcx", "call    _memcpy", "mov     rcx, [rbp+saved_errno]", "mov     result_0, rax", "mov     r8, [rbp+cp]", "jmp     loc_A7F4"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "mov~[rbp+0],r8", "mov~[rbp+0],rcx", "call~FOO", "mov~rcx,[rbp+0]", "mov~result_0,rax", "mov~r8,[rbp+0]", "jmp~FOO"]], [0, 1, 7, 1, 0, 5, 0, 1, 14, -1, 0.013087651629492984, ["mov     rax, [rbp+var_408]", "mov     rdi, [rbp+d.dir]; ptr", "add     rax, 20h", "cmp     rdi, rax", "jz      short loc_B581"], ["mov~rax,[rbp+0]", "mov~rdi,[rbp+0]", "add~rax,<STR>", "cmp~rdi,rax", "jz~FOO"]], [0, 0, 6, 0, 1, 1, 0, 1, 15, -1, 0.0, ["call    _free"], ["call~FOO"]], [0, 0, 250, 0, 0, 2, 0, 1, 10, 23, 0.003270166023813517, ["mov     r14, allocated", "jmp     loc_A7F4"], ["mov~r14,allocated", "jmp~FOO"]], [0, 0, 6, 0, 1, 1, 0, 1, 42, -1, 0.0, ["call    _free"], ["call~FOO"]], [0, 1, 7, 1, 0, 5, 0, 1, 41, -1, 0.011305830398568953, ["mov     rax, [rbp+var_408]", "mov     rdi, [rbp+d.dir]; ptr", "add     rax, 20h", "cmp     rdi, rax", "jz      short loc_B3E2"], ["mov~rax,[rbp+0]", "mov~rdi,[rbp+0]", "add~rax,<STR>", "cmp~rdi,rax", "jz~FOO"]], [0, 0, 250, 0, 0, 2, 0, 0, 9, 23, 0.05031024652020795, ["cmp     allocated, rax", "jnb     short loc_A7F4"], ["cmp~allocated,rax", "jnb~FOO"]], [1, 0, 250, 1, 0, 4, 0, 1, 33, 31, 0.0005478226843311537, ["sub     rsp, 8", "push    [rbp+var_3F0]", "push    arg", "jmp     loc_AE94"], ["sub~rsp,0", "push~[rbp+0]", "push~arg", "jmp~FOO"]], [0, 0, 250, 1, 0, 6, 0, 1, 38, 24, 0.2263681592039801, ["mov     rax, [rbp+saved_errno]", "mov     edi, [rbp+orig_errno]", "movsxd  rbx, ecx", "add     rbx, length", "mov     [rax], edi", "jmp     loc_AFE4"], ["mov~rax,[rbp+0]", "mov~edi,[rbp+0]", "movsxd~rbx,ecx", "add~rbx,length", "mov~<TAG>,edi", "jmp~FOO"]], [0, 0, 250, 0, 0, 3, 0, 1, 15, 24, 0.002379255408351501, ["mov     [rax], length; jumptable 000000000000B050 cases 3,4", "mov     rbx, length", "jmp     loc_AFE4"], ["mov~<TAG>,length", "mov~rbx,length", "jmp~FOO"]], [0, 0, 250, 0, 0, 3, 0, 0, 42, 38, 0.031262228184918105, ["cmp     rsi, rax", "mov     allocated, rsi", "jnb     short loc_ABAB"], ["cmp~rsi,rax", "mov~allocated,rsi", "jnb~FOO"]], [1, 0, 250, 0, 0, 1, 0, 0, 12, 27, 0.014098980751672364, ["mov     r12d, 0Ch"], ["mov~r12d,0"]], [1, 0, 250, 0, 0, 3, 0, 0, 25, 6, 0.003451841914025378, ["mov     eax, [rax+10h]", "mov     dword ptr [rbp+prefix_count], 1", "mov     [rbp+prefixes], eax"], ["mov~eax,[rax+0]", "mov~[word ptr [rbp+0],0", "mov~[rbp+0],eax"]], [0, 0, 250, 0, 1, 9, 1, 2, 15, 24, 0.024637579890808132, ["mov     rsi, r12; size", "mov     rdi, result_0; ptr", "mov     [rbp+cp], cp_0", "mov     [rbp+saved_errno], n_0", "call    _realloc", "test    memory, memory", "mov     rcx, [rbp+saved_errno]", "mov     r8, [rbp+cp]", "jz      loc_B19B"], ["mov~rsi,r12", "mov~rdi,result_0", "mov~[rbp+0],cp_0", "mov~[rbp+0],n_0", "call~FOO", "test~memory,memory", "mov~rcx,[rbp+0]", "mov~r8,[rbp+0]", "jz~FOO"]], [0, 0, 250, 0, 0, 1, 0, 0, 44, 38, 0.0032841410922913516, ["mov     r12, rax"], ["mov~r12,rax"]], [1, 0, 250, 0, 0, 3, 0, 1, 25, 5, 0.23599698138520878, ["mov     rax, [dp+40h]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      short loc_A9DC"], ["mov~rax,[dp+0]", "cmp~rax,0", "jz~FOO"]], [0, 0, 250, 0, 0, 5, 0, 0, 27, 5, 0.003451841914025378, ["mov     eax, dword ptr [rbp+prefix_count]", "mov     edx, [r8+10h]", "mov     [rbp+rax*4+prefixes], edx", "lea     eax, [rax+1]", "mov     dword ptr [rbp+prefix_count], eax"], ["mov~eax,[word ptr [rbp+0]", "mov~edx,[r8+0]", "mov~[rbp+0],edx", "lea~eax,[rax+0]", "mov~[word ptr [rbp+0],eax"]], [1, 0, 250, 1, 0, 4, 1, 0, 26, 4, 0.23849851864274135, ["mov     rax, length", "xor     edx, edx", "add     rax, 2", "jb      loc_B64C"], ["mov~rax,length", "xor~edx,edx", "add~rax,0", "jb~FOO"]], [0, 0, 250, 0, 0, 1, 0, 0, 16, 23, 0.02287905044068049, ["mov     result_0, memory"], ["mov~result_0,memory"]]], "func_feature": [52, 85, 235, 6, 269, 433, 1, 936, 0.04245, 3, 82], "succs": [[25, 166], [0, 213], [0], [0, 166], [26], [56, 4], [19], [153, 6], [153, 6], [36, 69], [246, 9, 11, 118, 105, 186, 59, 220, 61], [36, 68], [112, 134], [12, 134], [37, 78], [42, 14], [109], [16], [16], [41, 190], [19], [121], [21, 23], [148, 21], [212], [24, 166], [125, 38], [49, 26], [125], [28, 38], [27, 166], [5, 30], [72], [32, 145], [85], [34, 142], [34, 141], [42, 44], [125, 55], [233, 234], [166, 39], [106, 52], [208], [42, 15], [42, 62], [2, 212], [45, 166], [1, 46], [90, 47], [56], [81, 155], [50, 170], [74, 118], [60, 166], [107, 53], [58, 166], [82, 166], [56, 132], [93], [36, 63], [129, 171], [35, 68], [77], [68], [251], [64, 251], [180], [121, 66], [75], [68], [68], [], [245, 71], [18, 222], [104, 123], [85], [75], [89, 7], [77], [194], [194, 79], [79], [29, 166], [215], [83, 221], [225, 108], [229], [88, 86], [227, 86], [7], [65, 91], [65, 92], [65], [121], [93, 31], [93], [93], [100, 93], [265], [98, 119], [57, 166], [229, 54], [173], [173, 102], [124, 117], [36, 70], [211, 118], [171, 111], [149, 110], [225, 108], [128, 235], [129], [134], [90], [90, 172], [90], [90], [124], [], [262, 118], [266, 118], [10, 118], [236, 118], [179, 118], [131, 127], [137, 166], [81, 116], [131], [154, 150], [170, 51], [129], [140, 135], [166], [255], [133, 255], [140], [96, 95], [136, 96], [115, 247], [138, 166], [151, 143], [189], [141], [151], [160, 161], [144, 43], [121, 181], [121], [121], [121], [154], [152, 157], [157], [256, 158], [173, 103], [229], [159], [156, 159], [253, 166], [177, 163], [162, 195], [160], [195], [177], [99], [203, 164], [180], [230, 166], [185, 166], [166, 199], [166, 87], [130, 166], [3, 166], [176, 193], [146, 67], [168, 191], [193], [201, 210], [8], [249, 178, 259, 198], [80, 194], [260, 180], [264, 180], [147, 180], [180, 22], [216, 169], [192, 76], [109], [187], [187], [48, 114], [169, 261], [257, 197], [205, 206], [208, 196], [72], [208], [215], [8], [200, 217], [40], [210], [242, 99], [248, 99], [99], [214, 207], [205], [214], [209, 218], [218], [226, 202], [101, 167], [139, 223], [212], [72], [109], [40, 217], [40, 263], [224, 219], [224], [188, 84], [109], [109], [139, 126], [72], [122, 236], [202], [229], [13, 174], [8], [229], [72], [72], [234, 250], [20], [241], [241, 235], [232, 238], [232], [240, 231], [231], [258, 228], [204, 165], [184, 244], [184, 183], [], [17, 73], [113, 115], [204], [8], [20], [252, 237], [237], [20], [239], [254, 239], [20, 175], [189], [8], [8], [243, 182], [216], [265], [81, 268], [243], [120, 267], [267], [97, 94], [20]], "fname": "vasnprintf", "n_num": 269}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 34, 0, 0, 4, 0, 1, 0, 0, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_B769"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 000000000000B6A6 cases 3,4", "cmp     r11d, 2Fh ; '/'", "ja      loc_B7FA"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     rdx, [rdx]", "mov     [ap+10h], rdx", "jmp     short loc_B6D0"], ["mov~rdx,<TAG>", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_B701"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 000000000000B6A6 case 15", "cmp     r11d, 2Fh ; '/'", "ja      loc_B80B"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 000000000000B6A6 cases 5,6,13,14", "cmp     r11d, 2Fh ; '/'", "ja      loc_B84C"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [0, 0, 34, 1, 0, 4, 0, 1, 3, 2, 0.7546218487394959, ["mov     edx, [ap]", "movsxd  rdx, dword ptr [r8+rdx*4]", "add     rdx, r8", "jmp     rdx; switch jump"], ["mov~edx,<TAG>", "movsxd~rdx,<TAG>", "add~rdx,r8", "jmp~rdx"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_B78F"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 2, 3, 0.7823529411764706, ["cmp     dword ptr [ap], 16h; switch 23 cases", "ja      short loc_B6E0; jumptable 000000000000B6A6 default case"], ["cmp~<TAG>,0", "ja~FOO"]], [1, 1, 34, 2, 0, 4, 0, 1, 5, 4, 0.7537815126050421, ["add     i, 1", "add     ap, 20h", "cmp     [a], i", "ja      short loc_B698"], ["add~i,0", "add~ap,<STR>", "cmp~<TAG>,i", "ja~FOO"]], [0, 0, 34, 0, 0, 5, 1, 0, 1, 4, 0.027731092436974792, ["lea     r8, off_ECB0", "lea     r10, wide_null_string_2696", "lea     r9, aNull; \"(NULL)\"", "xor     ecx, ecx", "nop     dword ptr [ap+00000000h]"], ["lea~r8,<TAG>", "lea~r10,<TAG>", "lea~r9,<TAG>", "xor~ecx,ecx", "nop~[word ptr [ap+0]"]], [0, 0, 34, 0, 0, 5, 1, 1, 6, 5, 0.07899159663865547, ["mov     rdx, [rdx]", "test    rdx, rdx", "cmovz   rdx, r9", "mov     [ap+10h], rdx", "jmp     loc_B6D0"], ["mov~rdx,<TAG>", "test~rdx,rdx", "cmovz~rdx,r9", "mov~[ap+0],rdx", "jmp~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     short loc_B7E7"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 000000000000B6A6 case 16", "cmp     r11d, 2Fh ; '/'", "ja      short loc_B81C"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     edx, [rdx]", "mov     [ap+10h], edx", "jmp     short loc_B6D0"], ["mov~edx,<TAG>", "mov~[ap+0],edx", "jmp~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_B725"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 1, 0.07899159663865547, ["mov     r11d, [args+4]; jumptable 000000000000B6A6 case 11", "cmp     r11d, 0AFh", "ja      loc_B85D"], ["mov~r11d,[args+0]", "cmp~r11d,0", "ja~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 000000000000B6A6 cases 1,2", "cmp     r11d, 2Fh ; '/'", "ja      loc_B83B"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 000000000000B6A6 cases 7-10,17-22", "cmp     r11d, 2Fh ; '/'", "ja      loc_B82A"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 10h", "mov     [args+4], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~[args+0],r11d"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_B747"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [2, 0, 34, 1, 0, 8, 1, 0, 4, 5, 0.0067226890756302525, ["mov     rdx, [args+8]; jumptable 000000000000B6A6 case 12", "add     rdx, 0Fh", "and     rdx, 0FFFFFFFFFFFFFFF0h", "lea     r11, [rdx+10h]", "mov     [args+8], r11", "fld     tbyte ptr [rdx]", "fstp    tbyte ptr [ap+10h]", "nop     dword ptr [ap+00000000h]"], ["mov~rdx,[args+0]", "add~rdx,0", "and~rdx,0", "lea~r11,[rdx+0]", "mov~[args+0],r11", "fld~<TAG>,<TAG>", "fstp~<TAG>,[byte ptr [ap+0]", "nop~[word ptr [ap+0]"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["movsd   xmm0, qword ptr [rdx]", "movsd   qword ptr [ap+10h], xmm0", "jmp     loc_B6D0"], ["movsd~xmm0,<TAG>", "movsd~[word ptr [ap+0],xmm0", "jmp~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 0, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_B7C2"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     edx, [rdx]", "mov     [ap+10h], dl", "jmp     short loc_B6D0"], ["mov~edx,<TAG>", "mov~[ap+0],dl", "jmp~FOO"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     edx, [rdx]", "mov     [ap+10h], dx", "jmp     loc_B6D0"], ["mov~edx,<TAG>", "mov~[ap+0],dx", "jmp~FOO"]], [0, 0, 34, 0, 0, 5, 1, 1, 6, 5, 0.07899159663865547, ["mov     rdx, [rdx]", "test    rdx, rdx", "cmovz   rdx, r10", "mov     [ap+10h], rdx", "jmp     loc_B6D0"], ["mov~rdx,<TAG>", "test~rdx,rdx", "cmovz~rdx,r10", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 1, 0, 1, -1, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [1, 0, 35, 0, 0, 3, 0, 1, 0, 5, 0.0, ["cmp     qword ptr [a], 0", "mov     rax, [a+8]", "jz      short loc_B6DD"], ["cmp~<TAG>,0", "mov~rax,[a+0]", "jz~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [1, 0, 0, 0, 0, 2, 0, 0, 3, -1, 0.0, ["mov     eax, 0FFFFFFFFh; jumptable 000000000000B6A6 default case", "retn"], ["mov~eax,0", "retn"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]]], "func_feature": [0, 5, 25, 0, 36, 52, 1, 132, 0.10528, 3, 18], "succs": [[29], [0, 35], [11], [2], [2], [13], [9, 5], [18, 14], [1, 34, 6, 7, 16, 19, 20, 21, 25], [13], [8, 34], [10, 31], [10], [11], [17], [30], [33, 15], [11], [17], [27, 22], [24, 23], [3, 4], [26], [28], [28], [11], [11], [26], [11], [11], [11], [], [12, 31], [30], [], [29]], "fname": "printf_fetchargs", "n_num": 36}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 199, 0, 1, 9, 1, 2, 0, 0, 0.012292100231798723, ["mov     rdi, memory_size; size", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "mov     r11d, dword ptr [rsp+88h+cp]", "mov     r8, [rsp+88h+d_allocated]", "mov     r10, [rsp+88h+a_allocated]", "mov     r9, [rsp+88h+var_40]", "jz      loc_C36C"], ["mov~rdi,memory_size", "call~FOO", "test~rax,rax", "mov~rcx,rax", "mov~r11d,[word ptr [rsp+0]", "mov~r8,[rsp+0]", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "jz~FOO"]], [1, 0, 199, 1, 0, 8, 0, 1, 28, 29, 0.028763345346259923, ["mov     rsi, a_allocated_0", "mov     [rsp+88h+var_40], a_allocated_0", "mov     [rsp+88h+a_allocated], r10", "shl     rsi, 5; size", "cmp     [rsp+88h+src], rcx", "mov     [rsp+88h+d_allocated], r8", "mov     dword ptr [rsp+88h+cp], r11d", "jz      loc_C1E1"], ["mov~rsi,a_allocated_0", "mov~[rsp+0],a_allocated_0", "mov~[rsp+0],r10", "shl~rsi,0", "cmp~[rsp+0],rcx", "mov~[rsp+0],r8", "mov~[word ptr [rsp+0],r11d", "jz~FOO"]], [2, 0, 199, 0, 0, 11, 1, 0, 12, 8, 0.1495609359930968, ["mov     rsi, [rsp+88h+max_width_length]", "mov     ecx, 1", "mov     [r12+18h], rbp", "mov     [r12+20h], rax", "test    rsi, rsi", "cmovnz  rcx, rsi", "mov     [rsp+88h+max_width_length], rcx", "movzx   ecx, byte ptr [rbp+1]", "lea     esi, [rcx-30h]", "cmp     sil, 9", "jbe     loc_BEE5"], ["mov~rsi,[rsp+0]", "mov~ecx,0", "mov~[r12+0],rbp", "mov~[r12+0],rax", "test~rsi,rsi", "cmovnz~rcx,rsi", "mov~[rsp+0],rcx", "movzx~ecx,[yte ptr [rbp+0]", "lea~esi,[rcx-30h]+0]", "cmp~sil,0", "jbe~FOO"]], [1, 0, 199, 0, 0, 2, 0, 1, 11, 9, 0.439292421704482, ["cmp     bl, 2Ah ; '*'", "jz      loc_BBD9"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 199, 0, 0, 2, 1, 1, 9, 18, 0.00022841480127912289, ["or      dword ptr [r12+10h], 10h", "jmp     short loc_B9B8"], ["or~[word ptr [r12+0],0", "jmp~FOO"]], [1, 0, 199, 0, 0, 2, 0, 1, 8, 12, 0.4526166184457642, ["cmp     bl, 23h ; '#'", "jz      short loc_BA00"], ["cmp~bl,0", "jz~FOO"]], [2, 0, 199, 0, 0, 3, 0, 1, 23, 29, 0.008451347647327564, ["mov     r11d, 0Eh; jumptable 000000000000BAB5 case 30", "mov     ebx, 63h ; 'c'", "jmp     loc_BAC8"], ["mov~r11d,0", "mov~ebx,0", "jmp~FOO"]], [0, 0, 199, 1, 0, 5, 0, 1, 22, 23, 0.4401553220648698, ["lea     rcx, off_ED2C", "movzx   edx, dl", "movsxd  rdx, dword ptr [rcx+rdx*4]", "add     rdx, rcx", "jmp     rdx; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,dl", "movsxd~rdx,<TAG>", "add~rdx,rcx", "jmp~rdx"]], [1, 0, 199, 1, 1, 15, 0, 2, 28, 22, 0.01406019998984823, ["lea     rax, [rbx+rbx*4]", "mov     rsi, [rsp+88h+var_60]; src", "mov     rdi, memory; dest", "mov     [rsp+88h+a_allocated], r9", "mov     [rsp+88h+d_allocated], r10", "lea     rdx, [rbx+rax*2]", "mov     [rsp+88h+cp], r8", "shl     rdx, 3; n", "call    _memcpy", "mov     rbx, [d]", "mov     rcx, rax", "mov     r9, [rsp+88h+a_allocated]", "mov     r10, [rsp+88h+d_allocated]", "mov     r8, [rsp+88h+cp]", "jmp     loc_BBC7"], ["lea~rax,<TAG>", "mov~rsi,[rsp+0]", "mov~rdi,memory", "mov~[rsp+0],r9", "mov~[rsp+0],r10", "lea~rdx,<TAG>", "mov~[rsp+0],r8", "shl~rdx,0", "call~FOO", "mov~rbx,<TAG>", "mov~rcx,rax", "mov~r9,[rsp+0]", "mov~r10,[rsp+0]", "mov~r8,[rsp+0]", "jmp~FOO"]], [0, 0, 199, 0, 0, 4, 0, 1, 28, 22, 0.01401790095257432, ["mov     memory, [rsp+88h+var_60]", "cmp     rax, [d+8]", "mov     rbx, [d]", "jz      loc_C270"], ["mov~memory,[rsp+0]", "cmp~rax,[d+0]", "mov~rbx,<TAG>", "jz~FOO"]], [0, 0, 199, 0, 1, 8, 1, 2, 27, 23, 0.018865370624164594, ["mov     rdi, memory_size; size", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "mov     r8, [rsp+88h+cp]", "mov     r10, [rsp+88h+d_allocated]", "mov     r9, [rsp+88h+a_allocated]", "jz      loc_C359"], ["mov~rdi,memory_size", "call~FOO", "test~rax,rax", "mov~rcx,rax", "mov~r8,[rsp+0]", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "jz~FOO"]], [4, 0, 199, 1, 0, 6, 2, 1, 27, 29, 0.0, ["and     eax, 1", "cmp     eax, 1", "sbb     r11d, r11d", "and     r11d, 2", "add     r11d, 3", "jmp     loc_BAC8"], ["and~eax,0", "cmp~eax,0", "sbb~r11d,r11d", "and~r11d,0", "add~r11d,0", "jmp~FOO"]], [2, 0, 199, 0, 0, 3, 1, 1, 26, 29, 0.0045682960255824575, ["test    al, 2", "mov     r11d, 1", "jnz     loc_BAC8"], ["test~al,0", "mov~r11d,0", "jnz~FOO"]], [0, 0, 199, 1, 0, 2, 0, 0, 21, 11, 0.0, ["lea     rdx, [n+n*4]", "add     rdx, rdx"], ["lea~rdx,<TAG>", "add~rdx,rdx"]], [2, 0, 199, 1, 0, 6, 0, 1, 20, 11, 0.040556316938226485, ["mov     rsi, 1999999999999999h", "sub     eax, 30h ; '0'", "mov     rdx, r8", "cmp     n, rsi", "cdqe", "ja      short loc_C418"], ["mov~rsi,0", "sub~eax,0", "mov~rdx,r8", "cmp~n,rsi", "cdqe~", "ja~FOO"]], [0, 1, 199, 0, 0, 2, 1, 1, 10, 18, 0.00027917364600781687, ["or      dword ptr [r12+10h], 20h", "jmp     short loc_B9B8"], ["or~[word ptr [r12+0],<STR>", "jmp~FOO"]], [1, 0, 199, 0, 0, 2, 0, 1, 9, 11, 0.4482259783767321, ["cmp     bl, 30h ; '0'", "jz      short loc_BA10"], ["cmp~bl,0", "jz~FOO"]], [0, 0, 199, 0, 0, 1, 0, 0, 21, 10, 0.04141921729861428, ["mov     rsi, np"], ["mov~rsi,np"]], [1, 0, 199, 0, 0, 5, 0, 1, 13, 7, 0.10702502411045124, ["mov     rsi, [rsp+88h+arg_posn]", "cmp     rsi, 0FFFFFFFFFFFFFFFFh", "lea     rdx, [rsi+1]", "mov     [r12+28h], rsi", "jz      loc_C0BB; jumptable 000000000000BAB5 default case"], ["mov~rsi,[rsp+0]", "cmp~rsi,0", "lea~rdx,[rsi+0]", "mov~[r12+0],rsi", "jz~FOO"]], [1, 0, 199, 0, 0, 2, 0, 1, 15, 8, 0.0534744429216791, ["cmp     dil, 24h ; '$'", "jnz     loc_BC0A"], ["cmp~dil,0", "jnz~FOO"]], [1, 0, 199, 2, 0, 9, 1, 1, 11, 20, 0.055276381909547735, ["add     rax, rsi", "movzx   ebx, byte ptr [rbp+1]", "setb    sil", "add     rbp, 1", "mov     rdx, rax", "movzx   esi, sil", "test    rsi, rsi", "lea     edi, [rbx-30h]", "jnz     loc_C1AE"], ["add~rax,rsi", "movzx~ebx,[yte ptr [rbp+0]", "setb~sil", "add~rbp,0", "mov~rdx,rax", "movzx~esi,sil", "test~rsi,rsi", "lea~edi,[rbx-30h]+0]", "jnz~FOO"]], [1, 0, 199, 1, 0, 6, 0, 1, 13, 21, 0.0048220902492259275, ["movsx   eax, bl", "mov     rsi, r8", "mov     rcx, rbp", "sub     eax, 30h ; '0'", "cdqe", "jmp     loc_BE01"], ["movsx~eax,bl", "mov~rsi,r8", "mov~rcx,rbp", "sub~eax,0", "cdqe~", "jmp~FOO"]], [0, 0, 199, 0, 0, 1, 0, 0, 10, 21, 0.04499771585198721, ["mov     rcx, rbp"], ["mov~rcx,rbp"]], [1, 0, 199, 0, 0, 2, 0, 1, 10, 10, 0.4437845794629714, ["cmp     bl, 49h ; 'I'", "jnz     short loc_BA20"], ["cmp~bl,0", "jnz~FOO"]], [2, 0, 199, 1, 0, 5, 1, 1, 23, 29, 0.008451347647327564, ["xor     r11d, r11d; jumptable 000000000000BAB5 case 78", "cmp     eax, 7", "setnle  r11b", "add     r11d, 0Fh", "jmp     loc_BAC8"], ["xor~r11d,r11d", "cmp~eax,0", "setnle~r11b", "add~r11d,0", "jmp~FOO"]], [1, 0, 199, 0, 0, 2, 0, 0, 12, 19, 0.041901426323536876, ["cmp     dil, 9", "jbe     short loc_BDDD"], ["cmp~dil,0", "jbe~FOO"]], [0, 0, 199, 0, 0, 3, 0, 0, 14, 6, 0.1035480432465357, ["mov     rbx, [rsp+88h+arg_posn]", "mov     rbp, cp_0", "mov     [rsp+88h+arg_posn], arg_posn_0"], ["mov~rbx,[rsp+0]", "mov~rbp,cp_0", "mov~[rsp+0],arg_posn_0"]], [1, 0, 199, 0, 0, 3, 0, 0, 12, 10, 0.2855692604436323, ["lea     ecx, [rbx-30h]", "cmp     cl, 9", "jbe     loc_BE47"], ["lea~ecx,[rbx-30h]+0]", "cmp~cl,0", "jbe~FOO"]], [2, 0, 199, 1, 0, 4, 0, 1, 13, 18, 0.041876046901172526, ["mov     r13, n", "sub     r13, 1", "cmp     r13, 0FFFFFFFFFFFFFFFDh", "ja      loc_C0BB; jumptable 000000000000BAB5 default case"], ["mov~r13,n", "sub~r13,0", "cmp~r13,0", "ja~FOO"]], [1, 0, 199, 2, 0, 9, 2, 1, 22, 9, 0.05169788335617481, ["xor     ebx, ebx", "add     rdx, rax", "movsx   eax, byte ptr [r11+1]", "setb    bl", "add     r11, 1", "mov     rcx, rdx", "test    rbx, rbx", "lea     edi, [rax-30h]", "jz      short loc_C4A8"], ["xor~ebx,ebx", "add~rdx,rax", "movsx~eax,[yte ptr [r11+0]", "setb~bl", "add~r11,0", "mov~rcx,rdx", "test~rbx,rbx", "lea~edi,[rax-30h]+0]", "jz~FOO"]], [1, 0, 199, 1, 0, 5, 0, 1, 24, 10, 0.0048220902492259275, ["sub     eax, 30h ; '0'", "mov     rdx, r8", "mov     rsi, np", "cdqe", "jmp     short loc_C41B"], ["sub~eax,0", "mov~rdx,r8", "mov~rsi,np", "cdqe~", "jmp~FOO"]], [0, 0, 199, 0, 0, 3, 0, 1, 15, 5, 0.15095680422313587, ["cmp     a_allocated_0, rbx", "mov     rcx, [a+8]", "ja      loc_C2B2"], ["cmp~a_allocated_0,rbx", "mov~rcx,[a+0]", "ja~FOO"]], [1, 0, 199, 1, 0, 3, 0, 1, 22, 6, 0.04195218516826557, ["mov     [r12+28h], rbx", "add     rbp, 2", "jmp     loc_BC2F"], ["mov~[r12+0],rbx", "add~rbp,0", "jmp~FOO"]], [1, 0, 199, 0, 0, 2, 0, 1, 13, 9, 0.29924876909801534, ["cmp     bl, 2Eh ; '.'", "jz      loc_BD0F"], ["cmp~bl,0", "jz~FOO"]], [0, 0, 199, 0, 0, 3, 0, 1, 15, 10, 0.024795695649967007, ["mov     [r12+20h], rbp", "movzx   ebx, byte ptr [rbp+0]", "jmp     loc_BA35"], ["mov~[r12+0],rbp", "movzx~ebx,[yte ptr [rbp+0]", "jmp~FOO"]], [0, 0, 199, 0, 0, 3, 0, 1, 20, 10, 0.005634231764885031, ["movzx   ebx, byte ptr [rbp+0]", "lea     rdx, [rbp+1]", "jmp     loc_BA35"], ["movzx~ebx,[yte ptr [rbp+0]", "lea~rdx,[rbp+0]", "jmp~FOO"]], [1, 0, 199, 0, 0, 2, 0, 1, 23, 11, 0.005634231764885031, ["cmp     dil, 9", "ja      loc_C0BB; jumptable 000000000000BAB5 default case"], ["cmp~dil,0", "ja~FOO"]], [0, 0, 199, 0, 0, 2, 0, 1, 16, 12, 0.10329424902289223, ["mov     rax, [a]", "jmp     loc_BCB7"], ["mov~rax,<TAG>", "jmp~FOO"]], [0, 0, 199, 0, 0, 3, 0, 1, 14, 17, 0.04195218516826557, ["lea     rbp, [rcx+2]", "movzx   ebx, byte ptr [rcx+2]", "jmp     loc_B9BE"], ["lea~rbp,[rcx+0]", "movzx~ebx,[yte ptr [rcx+0]", "jmp~FOO"]], [1, 0, 199, 0, 0, 3, 1, 1, 14, 31, 0.4383787624993655, ["xor     eax, eax", "mov     esi, 1", "jmp     short loc_BA77"], ["xor~eax,eax", "mov~esi,0", "jmp~FOO"]], [2, 0, 199, 0, 0, 5, 0, 1, 19, 9, 0.13204913456169737, ["mov     dword ptr [rax], 5", "movzx   ebx, byte ptr [rbp+0]", "lea     rdx, [rbp+1]", "cmp     bl, 2Eh ; '.'", "jnz     loc_BA3E"], ["mov~<TAG>,0", "movzx~ebx,[yte ptr [rbp+0]", "lea~rdx,[rbp+0]", "cmp~bl,0", "jnz~FOO"]], [1, 0, 199, 0, 0, 4, 0, 1, 21, 32, 0.13689660423328764, ["mov     dword ptr [rax], 5", "mov     rbp, r11", "movzx   ebx, byte ptr [r11]", "jmp     loc_BA3E"], ["mov~<TAG>,0", "mov~rbp,r11", "movzx~ebx,<TAG>", "jmp~FOO"]], [0, 0, 199, 1, 0, 10, 0, 1, 16, 32, 0.018603116593066342, ["mov     rsi, [rsp+88h+max_precision_length]", "mov     rax, rdx", "mov     [r12+38h], rdx", "sub     rax, rbp", "movzx   ebx, byte ptr [rdx]", "mov     rbp, rdx", "cmp     rsi, rax", "cmovnb  rax, rsi", "mov     [rsp+88h+max_precision_length], rax", "jmp     loc_BA3E"], ["mov~rsi,[rsp+0]", "mov~rax,rdx", "mov~[r12+0],rdx", "sub~rax,rbp", "movzx~ebx,<TAG>", "mov~rbp,rdx", "cmp~rsi,rax", "cmovnb~rax,rsi", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 199, 0, 0, 3, 0, 1, 22, 32, 0.004847469671590275, ["movzx   ebx, byte ptr [r11]", "mov     rbp, r11", "jmp     loc_BA3E"], ["movzx~ebx,<TAG>", "mov~rbp,r11", "jmp~FOO"]], [2, 0, 199, 1, 0, 5, 2, 1, 24, 29, 0.0, ["xor     r11d, r11d", "test    al, 4", "setnz   r11b", "add     r11d, 0Bh", "jmp     loc_BAC8"], ["xor~r11d,r11d", "test~al,0", "setnz~r11b", "add~r11d,0", "jmp~FOO"]], [2, 0, 199, 0, 0, 3, 0, 1, 23, 29, 0.013019643672910022, ["cmp     eax, 0Fh; jumptable 000000000000BAB5 cases 28,32-34,60,64-66", "mov     r11d, 0Ch", "jg      loc_BAC8"], ["cmp~eax,0", "mov~r11d,0", "jg~FOO"]], [1, 0, 199, 1, 1, 15, 0, 2, 30, 27, 0.011826810821785695, ["mov     rdx, [a]", "mov     rsi, [rsp+88h+src]; src", "mov     rdi, memory; dest", "mov     [rsp+88h+var_40], r9", "mov     [rsp+88h+a_allocated], r10", "mov     [rsp+88h+d_allocated], r8", "mov     dword ptr [rsp+88h+cp], r11d", "shl     rdx, 5; n", "call    _memcpy", "mov     r9, [rsp+88h+var_40]", "mov     r10, [rsp+88h+a_allocated]", "mov     rcx, rax", "mov     r8, [rsp+88h+d_allocated]", "mov     r11d, dword ptr [rsp+88h+cp]", "jmp     loc_C17E"], ["mov~rdx,<TAG>", "mov~rsi,[rsp+0]", "mov~rdi,memory", "mov~[rsp+0],r9", "mov~[rsp+0],r10", "mov~[rsp+0],r8", "mov~[word ptr [rsp+0],r11d", "shl~rdx,0", "call~FOO", "mov~r9,[rsp+0]", "mov~r10,[rsp+0]", "mov~rcx,rax", "mov~r8,[rsp+0]", "mov~r11d,[word ptr [rsp+0]", "jmp~FOO"]], [0, 0, 199, 0, 0, 3, 0, 1, 30, 27, 0.011725293132328308, ["mov     memory, [rsp+88h+src]", "cmp     rax, [a+8]", "jz      loc_C209"], ["mov~memory,[rsp+0]", "cmp~rax,[a+0]", "jz~FOO"]], [1, 0, 199, 0, 0, 2, 0, 1, 20, 11, 0.005634231764885031, ["cmp     dil, 9", "ja      loc_C0BB; jumptable 000000000000BAB5 default case"], ["cmp~dil,0", "ja~FOO"]], [1, 0, 199, 2, 0, 9, 2, 1, 19, 9, 0.05169788335617481, ["xor     r11d, r11d", "add     rax, rcx", "movzx   ecx, byte ptr [np+1]", "setb    r11b", "add     np, 1", "mov     rsi, rax", "test    r11, r11", "lea     edi, [rcx-30h]", "jnz     loc_C44E"], ["xor~r11d,r11d", "add~rax,rcx", "movzx~ecx,[yte ptr [np+0]", "setb~r11b", "add~np,0", "mov~rsi,rax", "test~r11,r11", "lea~edi,[rcx-30h]+0]", "jnz~FOO"]], [1, 0, 199, 0, 0, 2, 0, 1, 16, 29, 0.45589056393076494, ["cmp     bl, 4Ch ; 'L'", "jz      short loc_BA90"], ["cmp~bl,0", "jz~FOO"]], [2, 0, 199, 1, 0, 3, 0, 1, 15, 30, 0.46441804984518553, ["add     rbp, 1", "cmp     bl, 68h ; 'h'", "jnz     short loc_BA50"], ["add~rbp,0", "cmp~bl,0", "jnz~FOO"]], [1, 0, 199, 1, 0, 7, 0, 1, 16, 4, 0.043500329932490735, ["add     a_allocated_0, a_allocated_0", "lea     rax, [rbx+1]", "cmp     a_allocated_0, rbx", "cmovbe  a_allocated_0, rax", "mov     rax, 7FFFFFFFFFFFFFFh", "cmp     a_allocated_0, rax", "ja      out_of_memory"], ["add~a_allocated_0,a_allocated_0", "lea~rax,[rbx+0]", "cmp~a_allocated_0,rbx", "cmovbe~a_allocated_0,rax", "mov~rax,0", "cmp~a_allocated_0,rax", "ja~FOO"]], [1, 0, 199, 0, 0, 2, 0, 1, 17, 28, 0.45165220039591897, ["cmp     bl, 6Ch ; 'l'", "jz      short loc_BA70"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 199, 0, 0, 6, 0, 0, 13, 12, 0.022638444748997514, ["mov     [r12+18h], rbp", "movzx   edi, byte ptr [rbp+0]", "mov     rsi, rbp", "lea     ecx, [rdi-30h]", "cmp     cl, 9", "jbe     short loc_BE67"], ["mov~[r12+0],rbp", "movzx~edi,[yte ptr [rbp+0]", "mov~rsi,rbp", "lea~ecx,[rdi-30h]+0]", "cmp~cl,0", "jbe~FOO"]], [0, 0, 199, 0, 0, 1, 0, 1, 14, 11, 0.009390386274808385, ["jmp     short loc_BE90"], ["jmp~FOO"]], [1, 0, 199, 0, 0, 2, 0, 1, 18, 27, 0.4474645957058017, ["cmp     bl, 6Ah ; 'j'", "jz      short loc_BA70"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 199, 1, 0, 8, 0, 1, 19, 3, 0.03271407542764326, ["mov     rsi, a_allocated_0", "mov     [rsp+88h+var_40], a_allocated_0", "mov     [rsp+88h+a_allocated], r10", "shl     rsi, 5; size", "cmp     [rsp+88h+src], rcx", "mov     [rsp+88h+d_allocated], r8", "mov     [rsp+88h+cp], cp_0", "jz      loc_C4CE"], ["mov~rsi,a_allocated_0", "mov~[rsp+0],a_allocated_0", "mov~[rsp+0],r10", "shl~rsi,0", "cmp~[rsp+0],rcx", "mov~[rsp+0],r8", "mov~[rsp+0],cp_0", "jz~FOO"]], [1, 0, 199, 1, 0, 7, 0, 1, 18, 4, 0.03847520430435003, ["add     a_allocated_0, a_allocated_0", "lea     rax, [rbx+1]", "cmp     a_allocated_0, rbx", "cmovbe  a_allocated_0, rax", "mov     rax, 7FFFFFFFFFFFFFFh", "cmp     a_allocated_0, rax", "ja      out_of_memory"], ["add~a_allocated_0,a_allocated_0", "lea~rax,[rbx+0]", "cmp~a_allocated_0,rbx", "cmovbe~a_allocated_0,rax", "mov~rax,0", "cmp~a_allocated_0,rax", "ja~FOO"]], [1, 0, 199, 1, 0, 2, 0, 0, 15, 13, 0.0, ["mov     rbp, cp_0", "add     cp_0, 1"], ["mov~rbp,cp_0", "add~cp_0,0"]], [1, 0, 199, 0, 0, 4, 0, 0, 14, 12, 0.014110958834576925, ["movzx   edi, byte ptr [cp_0]", "lea     edx, [rdi-30h]", "cmp     dl, 9", "jbe     short loc_BE60"], ["movzx~edi,<TAG>", "lea~edx,[rdi-30h]+0]", "cmp~dl,0", "jbe~FOO"]], [2, 0, 199, 0, 0, 3, 0, 1, 23, 29, 0.02657225521547122, ["cmp     eax, 0Fh; jumptable 000000000000BAB5 cases 51,74,80,83", "mov     r11d, 0Ah", "jg      loc_BAC8"], ["cmp~eax,0", "mov~r11d,0", "jg~FOO"]], [1, 0, 199, 1, 0, 6, 0, 1, 21, 10, 0.0048220902492259275, ["movsx   eax, cl", "mov     rbp, np", "mov     rcx, r8", "sub     eax, 30h ; '0'", "cdqe", "jmp     loc_BF29"], ["movsx~eax,cl", "mov~rbp,np", "mov~rcx,r8", "sub~eax,0", "cdqe~", "jmp~FOO"]], [2, 0, 199, 0, 0, 4, 1, 1, 19, 26, 0.4477183899294452, ["mov     edx, ebx", "and     edx, 0FFFFFFDFh", "cmp     dl, 5Ah ; 'Z'", "jz      short loc_BA70"], ["mov~edx,ebx", "and~edx,0", "cmp~dl,0", "jz~FOO"]], [0, 0, 199, 0, 0, 9, 0, 1, 26, 24, 0.03688476050285094, ["lea     rax, [d_allocated_0+d_allocated_0*4]", "mov     rdi, [d+8]; ptr", "cmp     [rsp+88h+var_60], rdi", "mov     [rsp+88h+a_allocated], a_allocated_0", "mov     [rsp+88h+d_allocated], d_allocated_0", "lea     rax, [d_allocated_0+rax*2]", "mov     [rsp+88h+cp], r8", "lea     rsi, ds:0[rax*8]; size", "jz      loc_C24D"], ["lea~rax,<TAG>", "mov~rdi,[d+0]", "cmp~[rsp+0],rdi", "mov~[rsp+0],a_allocated_0", "mov~[rsp+0],d_allocated_0", "lea~rax,<TAG>", "mov~[rsp+0],r8", "lea~rsi,<TAG>", "jz~FOO"]], [0, 0, 4, 0, 1, 2, 0, 1, 18, -1, 0.0068016851936449985, ["mov     rdi, rcx; ptr", "call    _free"], ["mov~rdi,rcx", "call~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 17, -1, 0.022486168214811416, ["cmp     [rsp+88h+src], rcx", "jnz     loc_C364"], ["cmp~[rsp+0],rcx", "jnz~FOO"]], [0, 0, 5, 0, 0, 3, 0, 1, 28, -1, 0.0006683247889278033, ["mov     rcx, [a+8]", "cmp     [rsp+88h+src], rcx", "jz      short loc_C37C"], ["mov~rcx,[a+0]", "cmp~[rsp+0],rcx", "jz~FOO"]], [1, 0, 199, 0, 0, 2, 0, 1, 20, 25, 0.44794680473072435, ["cmp     bl, 74h ; 't'", "jnz     short loc_BA98"], ["cmp~bl,0", "jnz~FOO"]], [1, 0, 199, 0, 0, 2, 1, 1, 24, 29, 0.013628749809654332, ["test    al, 4", "jnz     loc_BAC8"], ["test~al,0", "jnz~FOO"]], [0, 0, 199, 0, 0, 1, 0, 0, 21, 33, 0.00022841480127912289, ["xchg    ax, ax"], ["xchg~ax,ax"]], [1, 0, 199, 1, 0, 1, 0, 0, 18, 32, 0.0056596111872493785, ["add     eax, 8"], ["add~eax,0"]], [0, 0, 199, 0, 0, 1, 0, 0, 17, 31, 0.020582711537485407, ["movzx   ebx, byte ptr [rbp+0]"], ["movzx~ebx,[yte ptr [rbp+0]"]], [1, 0, 199, 1, 0, 6, 2, 1, 16, 32, 0.004365260646667681, ["mov     ecx, eax", "mov     edx, esi", "and     ecx, 1", "shl     edx, cl", "or      eax, edx", "jmp     short loc_BA73"], ["mov~ecx,eax", "mov~edx,esi", "and~ecx,0", "shl~edx,cl", "or~eax,edx", "jmp~FOO"]], [1, 0, 199, 0, 0, 2, 1, 1, 17, 32, 7.613826709304096e-05, ["or      eax, 4", "jmp     short loc_BA73"], ["or~eax,0", "jmp~FOO"]], [1, 0, 199, 1, 0, 7, 0, 1, 17, 3, 0.035099741129891886, ["mov     rsi, a_allocated_0", "mov     [rsp+88h+a_allocated], a_allocated_0", "mov     [rsp+88h+d_allocated], d_allocated_0", "shl     rsi, 5; size", "cmp     [rsp+88h+src], rcx", "mov     [rsp+88h+cp], r8", "jz      loc_C391"], ["mov~rsi,a_allocated_0", "mov~[rsp+0],a_allocated_0", "mov~[rsp+0],d_allocated_0", "shl~rsi,0", "cmp~[rsp+0],rcx", "mov~[rsp+0],r8", "jz~FOO"]], [2, 0, 199, 0, 0, 3, 0, 1, 25, 29, 0.009111212628800568, ["cmp     eax, 7", "mov     r11d, 8", "jg      loc_BAC8"], ["cmp~eax,0", "mov~r11d,0", "jg~FOO"]], [0, 0, 199, 0, 1, 9, 0, 2, 20, 2, 0.01427592507994518, ["mov     rdi, memory_size; size", "call    _malloc", "mov     rdx, [rsp+88h+src]", "mov     rcx, rax", "mov     r9, [rsp+88h+var_40]", "mov     r10, [rsp+88h+a_allocated]", "mov     r8, [rsp+88h+d_allocated]", "mov     r11, [rsp+88h+cp]", "jmp     loc_C339"], ["mov~rdi,memory_size", "call~FOO", "mov~rdx,[rsp+0]", "mov~rcx,rax", "mov~r9,[rsp+0]", "mov~r10,[rsp+0]", "mov~r8,[rsp+0]", "mov~r11,[rsp+0]", "jmp~FOO"]], [2, 0, 199, 0, 0, 3, 1, 1, 26, 29, 0.0045682960255824575, ["test    al, 2", "mov     r11d, 2", "jnz     loc_BAC8"], ["test~al,0", "mov~r11d,0", "jnz~FOO"]], [0, 0, 199, 0, 1, 7, 0, 1, 18, 2, 0.015468757931069489, ["mov     rdi, rcx; ptr", "call    _realloc", "mov     rdx, [a+8]", "mov     r8, [rsp+88h+cp]", "mov     rcx, rax", "mov     r10, [rsp+88h+d_allocated]", "mov     r9, [rsp+88h+a_allocated]"], ["mov~rdi,rcx", "call~FOO", "mov~rdx,[a+0]", "mov~r8,[rsp+0]", "mov~rcx,rax", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]"]], [0, 0, 199, 1, 0, 8, 0, 0, 15, 11, 0.00994873356682402, ["mov     rcx, cp_0", "lea     rdx, [rbp+2]", "mov     rbp, cp_0", "sub     rcx, rsi", "mov     rsi, [rsp+88h+max_width_length]", "cmp     rsi, rcx", "cmovnb  rcx, rsi", "mov     [rsp+88h+max_width_length], rcx"], ["mov~rcx,cp_0", "lea~rdx,[rbp+0]", "mov~rbp,cp_0", "sub~rcx,rsi", "mov~rsi,[rsp+0]", "cmp~rsi,rcx", "cmovnb~rcx,rsi", "mov~[rsp+0],rcx"]], [1, 0, 199, 0, 0, 3, 0, 1, 21, 24, 0.4435561646616923, ["lea     edx, [c-25h]", "cmp     dl, 53h ; 'S'; switch 84 cases", "ja      loc_C0BB; jumptable 000000000000BAB5 default case"], ["lea~edx,[c-25h]+0]", "cmp~dl,0", "ja~FOO"]], [0, 0, 199, 0, 0, 2, 1, 1, 19, 1, 0.036394091670473576, ["test    memory, memory", "jz      loc_C557"], ["test~memory,memory", "jz~FOO"]], [0, 0, 199, 0, 1, 8, 0, 2, 18, 2, 0.015468757931069489, ["mov     rdi, memory_size; size", "call    _malloc", "mov     rdx, [rsp+88h+src]", "mov     rcx, rax", "mov     r9, [rsp+88h+a_allocated]", "mov     r10, [rsp+88h+d_allocated]", "mov     r8, [rsp+88h+cp]", "jmp     loc_BC9C"], ["mov~rdi,memory_size", "call~FOO", "mov~rdx,[rsp+0]", "mov~rcx,rax", "mov~r9,[rsp+0]", "mov~r10,[rsp+0]", "mov~r8,[rsp+0]", "jmp~FOO"]], [1, 0, 199, 1, 1, 14, 0, 2, 21, 13, 0.0, ["mov     rsi, [rsp+88h+src]; src", "shl     rax, 5", "mov     rdi, memory; dest", "mov     rdx, rax; n", "mov     [rsp+88h+a_allocated], r9", "mov     [rsp+88h+d_allocated], r10", "mov     [rsp+88h+cp], r8", "call    _memcpy", "mov     r9, [rsp+88h+a_allocated]", "mov     rcx, rax", "mov     r10, [rsp+88h+d_allocated]", "mov     rax, [a]", "mov     r8, [rsp+88h+cp]", "jmp     loc_BCB3"], ["mov~rsi,[rsp+0]", "shl~rax,0", "mov~rdi,memory", "mov~rdx,rax", "mov~[rsp+0],r9", "mov~[rsp+0],r10", "mov~[rsp+0],r8", "call~FOO", "mov~r9,[rsp+0]", "mov~rcx,rax", "mov~r10,[rsp+0]", "mov~rax,<TAG>", "mov~r8,[rsp+0]", "jmp~FOO"]], [0, 0, 199, 0, 0, 3, 0, 1, 20, 13, 0.03261255773818588, ["cmp     [rsp+88h+src], rdx", "mov     rax, [a]", "jz      loc_C46B"], ["cmp~[rsp+0],rdx", "mov~rax,<TAG>", "jz~FOO"]], [1, 0, 199, 0, 0, 2, 0, 1, 12, 22, 0.009212730318257957, ["cmp     dil, 9", "ja      loc_C0BB; jumptable 000000000000BAB5 default case"], ["cmp~dil,0", "ja~FOO"]], [2, 0, 199, 1, 0, 4, 0, 1, 15, 33, 0.017308766052484645, ["movzx   eax, byte ptr [rbp+1]", "sub     eax, 30h ; '0'", "cmp     al, 9", "ja      short loc_BEBE"], ["movzx~eax,[yte ptr [rbp+0]", "sub~eax,0", "cmp~al,0", "ja~FOO"]], [1, 0, 199, 0, 0, 3, 0, 1, 14, 8, 0.16920460890310135, ["cmp     byte ptr [rbp+1], 2Ah ; '*'", "mov     [r12+30h], rbp", "jnz     loc_BE9E"], ["cmp~[yte ptr [rbp+0],0", "mov~[r12+0],rbp", "jnz~FOO"]], [0, 0, 199, 0, 0, 1, 0, 0, 16, 34, 0.0045682960255824575, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 199, 0, 0, 5, 0, 1, 17, 7, 0.007867620932947565, ["mov     rsi, [rsp+88h+arg_posn]", "cmp     rsi, 0FFFFFFFFFFFFFFFFh", "lea     rax, [rsi+1]", "mov     [r12+40h], rsi", "jz      loc_C0BB; jumptable 000000000000BAB5 default case"], ["mov~rsi,[rsp+0]", "cmp~rsi,0", "lea~rax,[rsi+0]", "mov~[r12+0],rsi", "jz~FOO"]], [1, 0, 199, 0, 0, 3, 0, 1, 16, 6, 0.10519770570021826, ["mov     rbx, [r12+40h]", "cmp     rbx, 0FFFFFFFFFFFFFFFFh", "jz      loc_C3B5"], ["mov~rbx,[r12+0]", "cmp~rbx,0", "jz~FOO"]], [1, 0, 199, 0, 0, 2, 0, 0, 23, 8, 0.041901426323536876, ["cmp     dil, 9", "jbe     loc_C3FA"], ["cmp~dil,0", "jbe~FOO"]], [0, 0, 199, 0, 0, 1, 0, 0, 21, 12, 0.03347545809857368, ["mov     [a+8], rcx"], ["mov~[a+0],rcx"]], [1, 0, 199, 0, 0, 2, 0, 1, 23, 29, 0.008451347647327564, ["mov     r11d, 11h; jumptable 000000000000BAB5 case 75", "jmp     loc_BAC8"], ["mov~r11d,0", "jmp~FOO"]], [0, 0, 199, 0, 0, 3, 0, 1, 25, 6, 0.04195218516826557, ["mov     [r12+40h], rbx", "lea     r11, [rsi+2]", "jmp     loc_BD5D"], ["mov~[r12+0],rbx", "lea~r11,[rsi+0]", "jmp~FOO"]], [1, 0, 199, 0, 0, 3, 0, 1, 24, 7, 0.041876046901172526, ["lea     rbx, [n-1]", "cmp     rbx, 0FFFFFFFFFFFFFFFDh", "ja      loc_C0BB; jumptable 000000000000BAB5 default case"], ["lea~rbx,[n-1]+0]", "cmp~rbx,0", "ja~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 13, -1, 0.019415258108725447, ["mov     rcx, [a+8]; jumptable 000000000000BAB5 default case"], ["mov~rcx,[a+0]"]], [1, 0, 199, 0, 0, 3, 0, 1, 21, 7, 0.041876046901172526, ["lea     rbx, [n-1]", "cmp     rbx, 0FFFFFFFFFFFFFFFDh", "ja      loc_C0BB; jumptable 000000000000BAB5 default case"], ["lea~rbx,[n-1]+0]", "cmp~rbx,0", "ja~FOO"]], [1, 0, 199, 0, 0, 5, 0, 1, 25, 28, 0.008654383026242322, ["mov     rsi, [rsp+88h+arg_posn]", "cmp     rsi, 0FFFFFFFFFFFFFFFFh", "lea     rax, [rsi+1]", "mov     [r12+50h], rsi", "jz      loc_C0BB; jumptable 000000000000BAB5 default case"], ["mov~rsi,[rsp+0]", "cmp~rsi,0", "lea~rax,[rsi+0]", "mov~[r12+0],rsi", "jz~FOO"]], [3, 0, 199, 2, 0, 5, 0, 0, 17, 33, 0.004999746205776356, ["add     cp_0, 1", "movzx   eax, byte ptr [cp_0]", "sub     eax, 30h ; '0'", "cmp     al, 9", "jbe     short loc_BEB0"], ["add~cp_0,0", "movzx~eax,<TAG>", "sub~eax,0", "cmp~al,0", "jbe~FOO"]], [1, 0, 199, 0, 0, 2, 0, 1, 21, 33, 0.006953961727831075, ["cmp     edx, 5", "jnz     error"], ["cmp~edx,0", "jnz~FOO"]], [1, 0, 199, 1, 0, 5, 1, 1, 20, 33, 0.14801279122887162, ["shl     rbx, 5", "lea     rax, [rcx+rbx]", "mov     edx, [rax]", "test    edx, edx", "jnz     loc_C2BA"], ["shl~rbx,0", "lea~rax,<TAG>", "mov~edx,<TAG>", "test~edx,edx", "jnz~FOO"]], [0, 0, 3, 0, 0, 3, 0, 1, 19, -1, 0.009830296262457072, ["mov     rdi, [d+8]; ptr", "cmp     [rsp+88h+var_60], rdi", "jz      short loc_C37C"], ["mov~rdi,[d+0]", "cmp~[rsp+0],rdi", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 18, -1, 0.006649408659458915, ["jmp     loc_C36C"], ["jmp~FOO"]], [2, 0, 199, 0, 0, 3, 0, 0, 23, 29, 0.008451347647327564, ["mov     r11d, 10h; jumptable 000000000000BAB5 case 46", "mov     ebx, 73h ; 's'", "nop     word ptr [rax+rax+00h]"], ["mov~r11d,0", "mov~ebx,0", "nop~[ord ptr [rax+0]"]], [1, 0, 199, 2, 0, 5, 0, 1, 17, 11, 0.14222628292980052, ["mov     rdx, rax", "shl     rdx, 5", "add     rdx, rcx", "cmp     rax, rbx", "ja      short loc_BCE6"], ["mov~rdx,rax", "shl~rdx,0", "add~rdx,rcx", "cmp~rax,rbx", "ja~FOO"]], [0, 0, 199, 0, 0, 1, 0, 0, 18, 13, 0.009111212628800568, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 4, 0, 1, 2, 0, 1, 15, -1, 0.0, ["mov     rdi, rcx; ptr", "call    _free"], ["mov~rdi,rcx", "call~FOO"]], [0, 0, 5, 0, 0, 2, 0, 1, 14, -1, 0.022384650525354044, ["cmp     [rsp+88h+src], rcx", "jz      short loc_C0CE"], ["cmp~[rsp+0],rcx", "jz~FOO"]], [1, 0, 199, 0, 0, 2, 0, 1, 24, 28, 0.18123445510380184, ["cmp     arg_index, 0FFFFFFFFFFFFFFFFh", "jz      loc_C187"], ["cmp~arg_index,0", "jz~FOO"]], [2, 0, 199, 0, 0, 3, 0, 1, 23, 29, 0.02657225521547122, ["cmp     eax, 0Fh; jumptable 000000000000BAB5 case 73", "mov     r11d, 16h", "jg      loc_BAC8"], ["cmp~eax,0", "mov~r11d,0", "jg~FOO"]], [1, 0, 199, 0, 0, 2, 1, 1, 24, 29, 0.013628749809654332, ["test    al, 4", "jnz     loc_BAC8"], ["test~al,0", "jnz~FOO"]], [2, 0, 199, 0, 0, 3, 0, 1, 25, 29, 0.009111212628800568, ["cmp     eax, 7", "mov     r11d, 15h", "jg      loc_BAC8"], ["cmp~eax,0", "mov~r11d,0", "jg~FOO"]], [1, 1, 199, 0, 0, 3, 1, 1, 26, 29, 0.0045682960255824575, ["test    al, 2", "mov     r11d, 12h", "jnz     loc_BAC8"], ["test~al,0", "mov~r11d,<STR>", "jnz~FOO"]], [2, 0, 199, 1, 0, 5, 2, 1, 27, 29, 0.0, ["xor     r11d, r11d", "test    al, 1", "setz    r11b", "add     r11d, 13h", "jmp     loc_BAC8"], ["xor~r11d,r11d", "test~al,0", "setz~r11b", "add~r11d,0", "jmp~FOO"]], [2, 0, 199, 1, 0, 5, 1, 1, 23, 29, 0.008451347647327564, ["xor     r11d, r11d; jumptable 000000000000BAB5 case 62", "cmp     eax, 7", "setnle  r11b", "add     r11d, 0Dh", "jmp     loc_BAC8"], ["xor~r11d,r11d", "cmp~eax,0", "setnle~r11b", "add~r11d,0", "jmp~FOO"]], [2, 0, 199, 0, 0, 3, 0, 1, 23, 29, 0.02657225521547122, ["cmp     eax, 0Fh; jumptable 000000000000BAB5 cases 63,68", "mov     r11d, 9", "jg      loc_BAC8"], ["cmp~eax,0", "mov~r11d,0", "jg~FOO"]], [1, 0, 199, 0, 0, 2, 1, 1, 24, 29, 0.013628749809654332, ["test    al, 4", "jnz     loc_BAC8"], ["test~al,0", "jnz~FOO"]], [2, 0, 199, 0, 0, 3, 0, 1, 25, 29, 0.009111212628800568, ["cmp     eax, 7", "mov     r11d, 7", "jg      loc_BAC8"], ["cmp~eax,0", "mov~r11d,0", "jg~FOO"]], [4, 0, 199, 1, 0, 6, 2, 1, 27, 29, 0.0, ["and     eax, 1", "cmp     eax, 1", "sbb     r11d, r11d", "and     r11d, 2", "add     r11d, 4", "jmp     loc_BAC8"], ["and~eax,0", "cmp~eax,0", "sbb~r11d,r11d", "and~r11d,0", "add~r11d,0", "jmp~FOO"]], [2, 0, 199, 1, 0, 5, 0, 0, 6, 18, 0.06060606060606061, ["add     np, 1", "movzx   edx, byte ptr [np]", "lea     ecx, [rdx-30h]", "cmp     cl, 9", "jbe     short loc_BDC0"], ["add~np,0", "movzx~edx,<TAG>", "lea~ecx,[rdx-30h]+0]", "cmp~cl,0", "jbe~FOO"]], [0, 0, 199, 0, 0, 2, 0, 0, 5, 19, 0.060174610425866706, ["mov     rax, cp_0", "nop     dword ptr [rax]"], ["mov~rax,cp_0", "nop~<TAG>"]], [0, 0, 199, 0, 0, 1, 0, 0, 25, 27, 0.1684178468098066, ["mov     [r12+50h], arg_index"], ["mov~[r12+0],arg_index"]], [0, 0, 3, 0, 0, 3, 0, 1, 15, -1, 0.013197299629460433, ["mov     rdi, [d+8]; ptr", "cmp     [rsp+88h+var_60], rdi", "jz      short loc_C0DE"], ["mov~rdi,[d+0]", "cmp~[rsp+0],rdi", "jz~FOO"]], [0, 0, 2, 0, 1, 1, 0, 1, 16, -1, 0.0, ["call    _free"], ["call~FOO"]], [8, 1, 199, 1, 0, 25, 1, 1, 0, 20, 0.0, ["push    r15", "push    r14", "lea     rcx, [d+20h]", "push    r13", "push    r12", "lea     rax, [a+10h]", "push    rbp", "push    rbx", "mov     r14, d", "mov     r15, a", "xor     ebx, ebx", "mov     r9d, 7", "sub     rsp, 58h", "mov     r10d, 7", "mov     qword ptr [d], 0", "mov     [d+8], rcx", "mov     [rsp+88h+var_60], rcx", "mov     r8, 0FFFFFFFFFFFFFFFFh", "mov     qword ptr [a], 0", "mov     [rsp+88h+src], rax", "mov     [a+8], rax", "mov     [rsp+88h+max_precision_length], 0", "mov     [rsp+88h+max_width_length], 0", "mov     [rsp+88h+arg_posn], 0", "jmp     short loc_B8EB"], ["push~r15", "push~r14", "lea~rcx,[d+0]", "push~r13", "push~r12", "lea~rax,[a+0]", "push~rbp", "push~rbx", "mov~r14,d", "mov~r15,a", "xor~ebx,ebx", "mov~r9d,0", "sub~rsp,<STR>", "mov~r10d,0", "mov~<TAG>,0", "mov~[d+0],rcx", "mov~[rsp+0],rcx", "mov~r8,0", "mov~<TAG>,0", "mov~[rsp+0],rax", "mov~[a+0],rax", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 199, 0, 0, 3, 0, 0, 26, 26, 0.17869651286736712, ["cmp     a_allocated_0, r13", "mov     rcx, [a+8]", "jbe     loc_C100"], ["cmp~a_allocated_0,r13", "mov~rcx,[a+0]", "jbe~FOO"]], [0, 0, 199, 0, 0, 3, 0, 1, 26, 27, 0.0048220902492259275, ["mov     arg_index, [rsp+88h+arg_posn]", "mov     [rsp+88h+arg_posn], arg_posn_0", "jmp     loc_BAD7"], ["mov~arg_index,[rsp+0]", "mov~[rsp+0],arg_posn_0", "jmp~FOO"]], [2, 1, 199, 2, 0, 5, 0, 0, 19, 12, 0.009542662808994467, ["add     rax, 1", "mov     dword ptr [rdx], 0", "add     rdx, 20h", "cmp     rax, rbx", "jbe     short loc_BCD0"], ["add~rax,0", "mov~<TAG>,0", "add~rdx,<STR>", "cmp~rax,rbx", "jbe~FOO"]], [0, 0, 199, 0, 0, 1, 0, 0, 20, 11, 0.009974112989188365, ["mov     [a], rax"], ["mov~<TAG>,rax"]], [0, 0, 199, 0, 0, 1, 0, 0, 13, 10, 0.0526115425612913, ["mov     rsi, rax"], ["mov~rsi,rax"]], [1, 0, 199, 0, 0, 3, 0, 1, 2, 18, 0.431247144814984, ["cmp     al, 25h ; '%'", "lea     rbp, [cp_0+1]", "jz      short loc_B928"], ["cmp~al,0", "lea~rbp,[cp_0+0]", "jz~FOO"]], [0, 0, 199, 0, 0, 3, 1, 1, 1, 19, 0.43569700353619956, ["movzx   eax, byte ptr [cp_0]", "test    al, al", "jnz     short loc_B8E0"], ["movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 199, 0, 0, 1, 0, 0, 3, 20, 0.4302150483055006, ["mov     rdi, rbp"], ["mov~rdi,rbp"]], [0, 0, 199, 0, 0, 2, 0, 1, 29, 21, 0.033483917906028456, ["mov     [d+8], rcx", "jmp     loc_B8E8"], ["mov~[d+0],rcx", "jmp~FOO"]], [0, 0, 199, 0, 0, 2, 0, 1, 24, 21, 0.39112227805695143, ["mov     rcx, [d+8]", "jmp     loc_B8E8"], ["mov~rcx,[d+0]", "jmp~FOO"]], [0, 0, 199, 0, 0, 3, 0, 0, 17, 5, 0.1499923861732907, ["cmp     a_allocated_0, rbx", "mov     rcx, [a+8]", "jbe     loc_C2CF"], ["cmp~a_allocated_0,rbx", "mov~rcx,[a+0]", "jbe~FOO"]], [2, 0, 1, 0, 1, 4, 0, 2, 16, -1, 0.003806913354652048, ["call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     eax, 0FFFFFFFFh", "jmp     loc_B912"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 199, 1, 0, 5, 1, 1, 18, 10, 0.1439520836505761, ["shl     rbx, 5", "lea     rax, [rcx+rbx]", "mov     edx, [rax]", "test    edx, edx", "jnz     loc_C1CB"], ["shl~rbx,0", "lea~rax,<TAG>", "mov~edx,<TAG>", "test~edx,edx", "jnz~FOO"]], [1, 0, 199, 2, 0, 6, 0, 1, 27, 25, 0.176564641388762, ["mov     rax, [a]", "mov     rdx, rax", "shl     rdx, 5", "add     rdx, rcx", "cmp     rax, r13", "ja      short loc_BB16"], ["mov~rax,<TAG>", "mov~rdx,rax", "shl~rdx,0", "add~rdx,rcx", "cmp~rax,r13", "ja~FOO"]], [0, 0, 199, 0, 0, 2, 0, 1, 31, 26, 0.028957920917719912, ["mov     [a+8], rcx", "jmp     loc_BAE4"], ["mov~[a+0],rcx", "jmp~FOO"]], [0, 0, 199, 0, 0, 1, 0, 0, 28, 27, 0.009111212628800568, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [2, 0, 199, 1, 0, 5, 0, 0, 14, 9, 0.053042992741485204, ["add     np, 1", "movzx   edi, byte ptr [np]", "lea     r11d, [rdi-30h]", "cmp     r11b, 9", "jbe     short loc_BEE8"], ["add~np,0", "movzx~edi,<TAG>", "lea~r11d,[rdi-30h]+0]", "cmp~r11b,0", "jbe~FOO"]], [0, 0, 6, 0, 0, 1, 0, 1, 30, -1, 0.002258768590426882, ["jmp     short error"], ["jmp~FOO"]], [0, 0, 199, 0, 0, 2, 0, 1, 29, 23, 0.09041419217298614, ["cmp     edx, r11d", "jz      loc_BB2B; jumptable 000000000000BAB5 case 0"], ["cmp~edx,r11d", "jz~FOO"]], [1, 0, 199, 1, 0, 7, 0, 1, 27, 30, 0.03195269275671286, ["add     a_allocated_0, a_allocated_0", "lea     rax, [r13+1]", "cmp     a_allocated_0, r13", "cmovbe  a_allocated_0, rax", "mov     rax, 7FFFFFFFFFFFFFFh", "cmp     a_allocated_0, rax", "ja      out_of_memory"], ["add~a_allocated_0,a_allocated_0", "lea~rax,[r13+0]", "cmp~a_allocated_0,r13", "cmovbe~a_allocated_0,rax", "mov~rax,0", "cmp~a_allocated_0,rax", "ja~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 20, 0, 0.0014212476524034312, ["mov     rcx, rdx", "jmp     short out_of_memory"], ["mov~rcx,rdx", "jmp~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 25, -1, 0.00673400673400673, ["mov     rcx, [a+8]"], ["mov~rcx,[a+0]"]], [0, 0, 199, 0, 0, 1, 1, 0, 16, 12, 0.03966803715547434, ["xor     esi, esi"], ["xor~esi,esi"]], [1, 0, 199, 0, 0, 2, 0, 1, 19, 11, 0.007740723821125831, ["cmp     edx, 5", "jnz     error"], ["cmp~edx,0", "jnz~FOO"]], [0, 0, 1, 0, 0, 8, 1, 0, 2, -1, 0.0002622540310982522, ["lea     rax, [rbx+rbx*4]", "lea     rax, [rbx+rax*2]", "mov     [rcx+rax*8], cp_0", "mov     rax, [rsp+88h+max_width_length]", "mov     [d+10h], rax", "mov     rax, [rsp+88h+max_precision_length]", "mov     [d+18h], rax", "xor     eax, eax"], ["lea~rax,<TAG>", "lea~rax,<TAG>", "mov~<TAG>,cp_0", "mov~rax,[rsp+0]", "mov~[d+0],rax", "mov~rax,[rsp+0]", "mov~[d+0],rax", "xor~eax,eax"]], [2, 1, 199, 2, 0, 5, 0, 0, 29, 26, 0.009542662808994467, ["add     rax, 1", "mov     dword ptr [rdx], 0", "add     rdx, 20h", "cmp     rax, r13", "jbe     short loc_BB00"], ["add~rax,0", "mov~<TAG>,0", "add~rdx,<STR>", "cmp~rax,r13", "jbe~FOO"]], [0, 0, 199, 0, 0, 1, 0, 0, 30, 25, 0.009974112989188365, ["mov     [a], rax"], ["mov~<TAG>,rax"]], [2, 0, 199, 1, 0, 7, 0, 1, 17, 11, 0.040556316938226485, ["movsx   eax, cl", "mov     rdi, 1999999999999999h", "mov     rcx, r8", "sub     eax, 30h ; '0'", "cmp     n, rdi", "cdqe", "ja      short loc_BF26"], ["movsx~eax,cl", "mov~rdi,0", "mov~rcx,r8", "sub~eax,0", "cmp~n,rdi", "cdqe~", "ja~FOO"]], [1, 0, 199, 0, 0, 2, 0, 0, 20, 8, 0.041901426323536876, ["cmp     dil, 9", "jbe     short loc_BF05"], ["cmp~dil,0", "jbe~FOO"]], [0, 0, 199, 0, 0, 2, 1, 1, 24, 26, 0.04608903101365413, ["test    r10, r10", "js      loc_C4F7"], ["test~r10,r10", "js~FOO"]], [1, 0, 199, 1, 0, 4, 0, 1, 25, 25, 0.03660558685684313, ["add     r10, r10", "mov     rax, 2E8BA2E8BA2E8BAh", "cmp     d_allocated_0, rax", "ja      loc_C4F7"], ["add~r10,r10", "mov~rax,0", "cmp~d_allocated_0,rax", "ja~FOO"]], [0, 0, 199, 0, 1, 7, 1, 2, 27, 23, 0.013857164610933455, ["call    _realloc", "test    rax, rax", "mov     rcx, rax", "mov     r8, [rsp+88h+cp]", "mov     r10, [rsp+88h+d_allocated]", "mov     r9, [rsp+88h+a_allocated]", "jz      loc_C4F7"], ["call~FOO", "test~rax,rax", "mov~rcx,rax", "mov~r8,[rsp+0]", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "jz~FOO"]], [0, 0, 199, 0, 1, 9, 1, 2, 29, 28, 0.01230901984670829, ["mov     rdi, rcx; ptr", "call    _realloc", "test    rax, rax", "mov     rcx, rax", "mov     r11d, dword ptr [rsp+88h+cp]", "mov     r8, [rsp+88h+d_allocated]", "mov     r10, [rsp+88h+a_allocated]", "mov     r9, [rsp+88h+var_40]", "jz      loc_C4F7"], ["mov~rdi,rcx", "call~FOO", "test~rax,rax", "mov~rcx,rax", "mov~r11d,[word ptr [rsp+0]", "mov~r8,[rsp+0]", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "jz~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     d", "pop     a", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~d", "pop~a", "retn"]], [2, 0, 1, 0, 1, 4, 0, 2, 20, -1, 0.0009051993976617093, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch", "mov     eax, 0FFFFFFFFh", "jmp     loc_B912"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 199, 1, 0, 5, 1, 1, 28, 24, 0.1782904421095376, ["shl     r13, 5", "lea     rax, [rcx+r13]", "mov     edx, [rax]", "test    edx, edx", "jnz     loc_C0F3"], ["shl~r13,0", "lea~rax,<TAG>", "mov~edx,<TAG>", "test~edx,edx", "jnz~FOO"]], [0, 0, 199, 1, 0, 2, 0, 0, 18, 11, 0.0, ["lea     rcx, [n+n*4]", "add     rcx, rcx"], ["lea~rcx,<TAG>", "add~rcx,rcx"]], [0, 0, 199, 0, 0, 1, 0, 0, 18, 10, 0.04141921729861428, ["mov     rbp, np"], ["mov~rbp,np"]], [0, 0, 199, 0, 0, 1, 0, 0, 29, 23, 0.08371402466879854, ["mov     [rax], r11d"], ["mov~<TAG>,r11d"]], [0, 0, 199, 0, 1, 8, 0, 1, 20, 2, 0.01427592507994518, ["mov     rdi, rcx; ptr", "call    _realloc", "mov     rdx, [a+8]", "mov     r11, [rsp+88h+cp]", "mov     rcx, rax", "mov     r8, [rsp+88h+d_allocated]", "mov     r10, [rsp+88h+a_allocated]", "mov     r9, [rsp+88h+var_40]"], ["mov~rdi,rcx", "call~FOO", "mov~rdx,[a+0]", "mov~r11,[rsp+0]", "mov~rcx,rax", "mov~r8,[rsp+0]", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]"]], [0, 0, 199, 0, 0, 2, 1, 1, 21, 1, 0.03400842596822496, ["test    memory, memory", "jz      loc_C557"], ["test~memory,memory", "jz~FOO"]], [0, 0, 199, 0, 0, 7, 0, 1, 23, 22, 0.44137353433835846, ["mov     [r12+48h], bl; jumptable 000000000000BAB5 case 0", "mov     rax, [d]", "mov     [r12+8], rbp", "lea     rbx, [rax+1]", "cmp     r10, rbx", "mov     [d], rbx", "ja      loc_BBD0"], ["mov~[r12+0],bl", "mov~rax,<TAG>", "mov~[r12+0],rbp", "lea~rbx,[rax+0]", "cmp~r10,rbx", "mov~<TAG>,rbx", "ja~FOO"]], [3, 0, 199, 0, 0, 11, 0, 0, 15, 7, 0.14773361758286382, ["mov     rsi, [rsp+88h+max_precision_length]", "lea     r11, [rbp+2]", "mov     eax, 2", "mov     [r12+38h], cp_0", "cmp     rsi, 2", "cmovnb  rax, rsi", "mov     [rsp+88h+max_precision_length], rax", "movsx   eax, byte ptr [rbp+2]", "lea     edx, [rax-30h]", "cmp     dl, 9", "jbe     loc_C3DC"], ["mov~rsi,[rsp+0]", "lea~r11,[rbp+0]", "mov~eax,0", "mov~[r12+0],cp_0", "cmp~rsi,0", "cmovnb~rax,rsi", "mov~[rsp+0],rax", "movsx~eax,[yte ptr [rbp+0]", "lea~edx,[rax-30h]+0]", "cmp~dl,0", "jbe~FOO"]], [0, 0, 2, 0, 1, 1, 0, 1, 20, -1, 0.0, ["call    _free"], ["call~FOO"]], [0, 0, 199, 0, 0, 3, 0, 1, 22, 36, 0.03261255773818588, ["cmp     [rsp+88h+src], rdx", "mov     rax, [a]", "jz      loc_C510"], ["cmp~[rsp+0],rdx", "mov~rax,<TAG>", "jz~FOO"]], [1, 0, 199, 1, 1, 16, 0, 2, 23, 36, 0.0, ["mov     rsi, [rsp+88h+src]; src", "shl     rax, 5", "mov     rdi, memory; dest", "mov     rdx, rax; n", "mov     [rsp+88h+var_40], r9", "mov     [rsp+88h+a_allocated], r10", "mov     [rsp+88h+d_allocated], r8", "mov     [rsp+88h+cp], r11", "call    _memcpy", "mov     r9, [rsp+88h+var_40]", "mov     rcx, rax", "mov     r10, [rsp+88h+a_allocated]", "mov     rax, [a]", "mov     r8, [rsp+88h+d_allocated]", "mov     r11, [rsp+88h+cp]", "jmp     loc_C350"], ["mov~rsi,[rsp+0]", "shl~rax,0", "mov~rdi,memory", "mov~rdx,rax", "mov~[rsp+0],r9", "mov~[rsp+0],r10", "mov~[rsp+0],r8", "mov~[rsp+0],r11", "call~FOO", "mov~r9,[rsp+0]", "mov~rcx,rax", "mov~r10,[rsp+0]", "mov~rax,<TAG>", "mov~r8,[rsp+0]", "mov~r11,[rsp+0]", "jmp~FOO"]], [0, 0, 199, 0, 0, 2, 0, 1, 23, 35, 0.03347545809857368, ["mov     [a+8], rcx", "jmp     loc_BD6D"], ["mov~[a+0],rcx", "jmp~FOO"]], [1, 0, 199, 0, 0, 2, 0, 1, 18, 7, 0.0534744429216791, ["cmp     cl, 24h ; '$'", "jnz     loc_BD4E"], ["cmp~cl,0", "jnz~FOO"]], [0, 0, 199, 0, 0, 3, 0, 1, 18, 6, 0.0048220902492259275, ["mov     rbx, [rsp+88h+arg_posn]", "mov     [rsp+88h+arg_posn], arg_posn_0", "jmp     loc_BD5D"], ["mov~rbx,[rsp+0]", "mov~[rsp+0],arg_posn_0", "jmp~FOO"]], [0, 0, 199, 0, 0, 1, 0, 0, 18, 35, 0.10735495660118775, ["mov     rax, [a]"], ["mov~rax,<TAG>"]], [1, 0, 199, 0, 0, 2, 0, 1, 5, 15, 0.4654839855844881, ["cmp     bl, 2Dh ; '-'", "jz      short loc_B9D8"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 199, 0, 0, 4, 0, 1, 4, 16, 0.4739099538094513, ["lea     rax, [rbp+1]", "cmp     bl, 27h ; '''", "mov     rdx, rax", "jnz     short loc_B990"], ["lea~rax,[rbp+0]", "cmp~bl,0", "mov~rdx,rax", "jnz~FOO"]], [1, 0, 199, 2, 0, 5, 0, 1, 19, 34, 0.14628699050809604, ["mov     rdx, rax", "shl     rdx, 5", "add     rdx, rcx", "cmp     rax, rbx", "ja      short loc_BD96"], ["mov~rdx,rax", "shl~rdx,0", "add~rdx,rcx", "cmp~rax,rbx", "ja~FOO"]], [0, 0, 199, 0, 0, 1, 0, 0, 20, 36, 0.009111212628800568, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [6, 0, 199, 0, 0, 17, 0, 1, 3, 17, 0.4315263184609918, ["lea     c, [rbx+rbx*4]", "mov     r13, r8", "lea     rax, [rbx+rax*2]", "lea     r12, [rcx+rax*8]", "mov     [r12], rdi", "mov     dword ptr [r12+10h], 0", "mov     qword ptr [r12+18h], 0", "mov     qword ptr [r12+20h], 0", "mov     [r12+28h], r8", "mov     qword ptr [r12+30h], 0", "mov     qword ptr [r12+38h], 0", "mov     [r12+40h], r8", "mov     [r12+50h], r8", "movzx   ebx, byte ptr [rdi+1]", "lea     eax, [rbx-30h]", "cmp     al, 9", "ja      short loc_B9BE"], ["lea~c,<TAG>", "mov~r13,r8", "lea~rax,<TAG>", "lea~r12,<TAG>", "mov~<TAG>,rdi", "mov~[word ptr [r12+0],0", "mov~[word ptr [r12+0],0", "mov~[word ptr [r12+0],0", "mov~[r12+0],r8", "mov~[word ptr [r12+0],0", "mov~[word ptr [r12+0],0", "mov~[r12+0],r8", "mov~[r12+0],r8", "movzx~ebx,[yte ptr [rdi+0]", "lea~eax,[rbx-30h]+0]", "cmp~al,0", "ja~FOO"]], [0, 0, 199, 0, 0, 1, 0, 1, 4, 20, 0.059743160245672805, ["jmp     loc_BDBA"], ["jmp~FOO"]], [2, 1, 199, 2, 0, 5, 0, 0, 21, 35, 0.009542662808994467, ["add     rax, 1", "mov     dword ptr [rdx], 0", "add     rdx, 20h", "cmp     rax, rbx", "jbe     short loc_BD80"], ["add~rax,0", "mov~<TAG>,0", "add~rdx,<STR>", "cmp~rax,rbx", "jbe~FOO"]], [0, 0, 199, 0, 0, 1, 0, 0, 22, 34, 0.009974112989188365, ["mov     [a], rax"], ["mov~<TAG>,rax"]], [1, 0, 199, 0, 0, 2, 0, 1, 6, 14, 0.46124562204964215, ["cmp     bl, 2Bh ; '+'", "jz      short loc_B9E0"], ["cmp~bl,0", "jz~FOO"]], [0, 1, 199, 0, 0, 2, 0, 1, 7, 13, 0.4569564996700675, ["cmp     bl, 20h ; ' '", "jz      short loc_B9F0"], ["cmp~bl,<STR>", "jz~FOO"]], [1, 0, 199, 0, 0, 2, 1, 0, 11, 18, 0.00032993249073651085, ["or      dword ptr [r12+10h], 40h", "nop     dword ptr [rax+00h]"], ["or~[word ptr [r12+0],0", "nop~[word ptr [rax+0]"]], [0, 0, 199, 0, 0, 2, 0, 0, 6, 17, 0.03606415917973707, ["movzx   ebx, byte ptr [rax]", "mov     rbp, rax"], ["movzx~ebx,<TAG>", "mov~rbp,rax"]], [1, 0, 199, 0, 0, 2, 1, 1, 5, 18, 0.004263742957210294, ["or      dword ptr [r12+10h], 1", "jmp     short loc_B9B8"], ["or~[word ptr [r12+0],0", "jmp~FOO"]], [1, 0, 199, 0, 0, 2, 1, 1, 6, 18, 7.613826709304096e-05, ["or      dword ptr [r12+10h], 2", "jmp     short loc_B9B8"], ["or~[word ptr [r12+0],0", "jmp~FOO"]], [1, 0, 199, 0, 0, 2, 1, 1, 7, 18, 0.00012689711182173492, ["or      dword ptr [r12+10h], 4", "jmp     short loc_B9B8"], ["or~[word ptr [r12+0],0", "jmp~FOO"]], [1, 0, 199, 0, 0, 2, 1, 1, 8, 18, 0.0001776559565504289, ["or      dword ptr [r12+10h], 8", "jmp     short loc_B9B8"], ["or~[word ptr [r12+0],0", "jmp~FOO"]], [1, 0, 199, 0, 0, 3, 0, 1, 7, 17, 0.0610375107862545, ["cmp     dl, 24h ; '$'", "mov     r13, r8", "jnz     loc_B9BE"], ["cmp~dl,0", "mov~r13,r8", "jnz~FOO"]], [0, 0, 199, 0, 0, 1, 1, 0, 8, 23, 0.04324653570884727, ["xor     edx, edx"], ["xor~edx,edx"]], [0, 0, 199, 0, 0, 1, 1, 0, 19, 12, 0.03966803715547434, ["xor     ecx, ecx"], ["xor~ecx,ecx"]], [0, 0, 199, 0, 0, 1, 0, 0, 16, 9, 0.0526115425612913, ["mov     rdx, cp_0"], ["mov~rdx,cp_0"]], [2, 0, 199, 1, 0, 5, 0, 0, 17, 8, 0.053042992741485204, ["add     np, 1", "movzx   ecx, byte ptr [np]", "lea     esi, [rcx-30h]", "cmp     sil, 9", "jbe     short loc_C3DF"], ["add~np,0", "movzx~ecx,<TAG>", "lea~esi,[rcx-30h]+0]", "cmp~sil,0", "jbe~FOO"]], [2, 0, 199, 1, 0, 7, 0, 1, 9, 22, 0.04413481549159941, ["movsx   eax, bl", "mov     rdi, 1999999999999999h", "mov     rsi, r8", "sub     eax, 30h ; '0'", "cmp     n, rdi", "cdqe", "ja      short loc_BDFE"], ["movsx~eax,bl", "mov~rdi,0", "mov~rsi,r8", "sub~eax,0", "cmp~n,rdi", "cdqe~", "ja~FOO"]], [0, 0, 199, 1, 0, 2, 0, 0, 10, 22, 0.0, ["lea     rsi, [n+n*4]", "add     rsi, rsi"], ["lea~rsi,<TAG>", "add~rsi,rsi"]]], "func_feature": [18, 50, 158, 2, 200, 316, 1, 786, 0.08482, 1, 64], "succs": [[46, 103], [0, 159], [18, 131], [2, 27], [188], [16, 4], [110], [97, 6, 168, 105, 45, 111, 116, 117, 24, 61, 94], [135], [8, 135], [8, 67], [110], [11, 110], [17], [17, 13], [188], [23, 15], [29], [97, 26], [18, 149], [25, 86], [20], [20], [3, 187], [110], [28, 198], [31], [33, 54], [97, 38], [92, 36], [29], [52, 37], [31], [88, 39], [33], [33], [97, 30], [106], [178], [51], [88, 39], [39], [39], [39], [110], [44, 110], [141], [141, 46], [97, 62], [48, 155], [74, 53], [73, 50], [66, 75], [56, 71], [60, 55], [34], [71, 63], [77, 166], [57, 66], [60], [80, 59], [69, 110], [49], [68, 71], [10, 158], [103], [104, 65], [65, 161], [81, 70], [76, 110], [71], [72], [51], [72], [72], [83, 79], [110, 78], [167], [120, 110], [82], [34], [97, 7], [147, 85], [82], [93], [84, 93], [97, 21], [89, 42], [169, 87], [100], [97, 175], [137, 90], [96, 14], [106], [110], [137], [97, 95], [109], [32, 97], [128, 97], [42, 100], [43, 109], [41, 101], [161, 170], [103], [110], [107, 139], [129], [124], [124, 108], [99, 123], [112, 110], [113, 110], [114, 110], [115, 110], [110], [110], [118, 110], [110, 119], [12, 110], [110], [121, 193], [121], [127], [138, 125], [138], [133], [146, 140], [127], [129, 130], [139], [143], [181, 134], [132, 151], [133], [134], [134], [176, 58], [160], [40, 150], [162, 142], [140], [152], [19, 143], [109], [144, 168], [1, 66], [66], [66], [154], [35, 109], [160], [152, 153], [162], [163, 164], [154, 98], [148, 157], [64, 148], [9, 148], [148, 47], [], [160], [145, 165], [164], [49], [168], [167], [171, 147], [136, 156], [91, 196], [161], [172, 173], [173], [179], [91, 195], [137], [179], [185, 190], [177, 189], [180, 102], [183], [178, 182], [122], [184, 183], [102], [186, 191], [192, 5], [188], [178], [188], [188], [188], [188], [178, 194], [198], [14], [197], [197, 174], [22, 199], [22]], "fname": "printf_parse", "n_num": 200}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 0, 0, 0, 0.16666666666666666, ["xor     ebx, ebx", "nop     dword ptr [rax+rax+00000000h]"], ["xor~ebx,ebx", "nop~[word ptr [rax+0]"]], [2, 0, 3, 2, 1, 17, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15, rdx", "push    r13", "push    r12", "lea     r12, __frame_dummy_init_array_entry", "push    rbp", "lea     rbp, __do_global_dtors_aux_fini_array_entry", "push    rbx", "mov     r13d, edi", "mov     r14, rsi", "sub     rbp, r12", "sub     rsp, 8", "sar     rbp, 3", "call    _init_proc", "test    rbp, rbp", "jz      short loc_C5B6"], ["push~r15", "push~r14", "mov~r15,rdx", "push~r13", "push~r12", "lea~r12,<TAG>", "push~rbp", "lea~rbp,<TAG>", "push~rbx", "mov~r13d,edi", "mov~r14,rsi", "sub~rbp,r12", "sub~rsp,0", "sar~rbp,0", "call~FOO", "test~rbp,rbp", "jz~FOO"]], [1, 0, 2, 1, 1, 7, 0, 2, 2, 1, 0.16666666666666666, ["mov     rdx, r15", "mov     rsi, r14", "mov     edi, r13d", "call    qword ptr [r12+rbx*8]", "add     rbx, 1", "cmp     rbp, rbx", "jnz     short loc_C5A0"], ["mov~rdx,r15", "mov~rsi,r14", "mov~edi,r13d", "call~<TAG>", "add~rbx,0", "cmp~rbp,rbx", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 5, 0, 34, 0.08333, 2, 4], "succs": [[2], [0, 3], [2, 3], []], "fname": "__libc_csu_init", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_csu_fini", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rdx, cs:__dso_handle", "xor     esi, esi", "jmp     ___cxa_atexit"], ["mov~rdx,<TAG>", "xor~esi,esi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 1, 3, 0.0, 1, 0], "succs": [[1], []], "fname": "atexit", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[2, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0.0, ["sub     rsp, 8; _fini", "add     rsp, 8", "retn"], ["sub~rsp,0", "add~rsp,0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 2], "succs": [[]], "fname": "term_proc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_toupper_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_toupper_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getenv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigprocmask:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigprocmask", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __snprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__snprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn raise:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "raise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn free:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn abort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __errno_location:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fdatasync:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fdatasync", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn error_at_line:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "error_at_line", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strncmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fpending:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigaction_0:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigaction_0", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn localeconv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "localeconv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fcntl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn clock_gettime:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "clock_gettime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn write:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "write", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn textdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fclose:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn bindtextdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dcgettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_get_mb_cur_max:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strlen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __stack_chk_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getopt_long:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbrtowc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dup2:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dup2", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __overflow:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__overflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strrchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ftruncate:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ftruncate", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn lseek:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __assert_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __strtoul_internal:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__strtoul_internal", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ioctl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn close:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn posix_fadvise:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "posix_fadvise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn read:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "read", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __libc_start_main:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_start_main", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fputs_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn calloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __memcpy_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__memcpy_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigemptyset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigemptyset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fileno:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn malloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fflush:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn nl_langinfo:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __freading:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn realloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn setlocale:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __printf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memmove:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn error:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fsync:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fsync", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn open:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fseeko:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dcngettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dcngettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __cxa_atexit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getpagesize:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getpagesize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigismember:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigismember", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fwrite:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbsinit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswprint:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp___cxa_finalize:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp___cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigaddset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigaddset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_tolower_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_tolower_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_b_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __sprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__sprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __gmon_start__:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__gmon_start__", "n_num": 1}
