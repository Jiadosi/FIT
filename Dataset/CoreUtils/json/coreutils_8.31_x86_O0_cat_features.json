{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    rax ; __gmon_start__"], ["call~rax"]], [1, 0, 2, 1, 0, 4, 1, 1, 0, 1, 0.0, ["sub     rsp, 8; _init", "mov     rax, cs:__gmon_start___ptr", "test    rax, rax", "jz      short loc_14C2"], ["sub~rsp,0", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 3, 1, 7, 0.0, 1, 2], "succs": [[2], [0, 2], []], "fname": "init_proc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0.0, ["push    cs:qword_208E30", "jmp     cs:qword_208E38"], ["push~<TAG>", "jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 51, 2, 0.0, 2, 0], "succs": [[]], "fname": "sub_14D0", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:free_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 7, 1, 0.0, 1, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:abort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__errno_location_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 36, 1, 0.0, 1, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strncmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fpending_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:write_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "write", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:textdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fclose_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:bindtextdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:stpcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "stpcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_get_mb_cur_max_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strlen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__stack_chk_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 13, 1, 0.0, 1, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getopt_long_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbrtowc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:gettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 38, 1, 0.0, 1, 0], "succs": [[]], "fname": "gettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:printf_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 7, 1, 0.0, 1, 0], "succs": [[]], "fname": "printf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strrchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:lseek_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ioctl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:close_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:posix_fadvise_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "posix_fadvise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:read_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "read", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fputs_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ferror_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "ferror_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:calloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fprintf_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 14, 1, 0.0, 1, 0], "succs": [[]], "fname": "fprintf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fileno_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:malloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fflush_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:nl_langinfo_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__freading_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:realloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:setlocale_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memmove_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:error_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 15, 1, 0.0, 1, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:open_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fseeko_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_atexit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpagesize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpagesize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fwrite_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbsinit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswprint_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_b_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_finalize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 0, 0, 0, 1, 12, 2, 1, 0, 0, 0.0, ["xor     ebp, ebp", "mov     r9, rdx; rtld_fini", "pop     rsi; argc", "mov     rdx, rsp; ubp_av", "and     rsp, 0FFFFFFFFFFFFFFF0h", "push    rax", "push    rsp; stack_end", "lea     r8, __libc_csu_fini; fini", "lea     rcx, __libc_csu_init; init", "lea     rdi, main; main", "call    cs:__libc_start_main_ptr", "hlt"], ["xor~ebp,ebp", "mov~r9,rdx", "pop~rsi", "mov~rdx,rsp", "and~rsp,0", "push~rax", "push~rsp", "lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "call~<TAG>", "hlt"]]], "func_feature": [1, 2, 1, 0, 1, 0, 0, 12, 0.0, 4, 0], "succs": [[]], "fname": "_start", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_deregisterTMCloneTable_ptr", "test    rax, rax", "jz      short loc_1880"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 6, 0, 1, 0, 1, 0.0, ["lea     rdi, __bss_start", "push    rbp", "lea     rax, __bss_start", "cmp     rax, rdi", "mov     rbp, rsp", "jz      short loc_1880"], ["lea~rdi,<TAG>", "push~rbp", "lea~rax,<TAG>", "cmp~rax,rdi", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, -1, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 13, 0.04167, 2, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "deregister_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [3, 0, 3, 2, 0, 11, 0, 1, 0, 0, 0.0, ["lea     rdi, __bss_start", "lea     rsi, __bss_start", "push    rbp", "sub     rsi, rdi", "mov     rbp, rsp", "sar     rsi, 3", "mov     rax, rsi", "shr     rax, 3Fh", "add     rsi, rax", "sar     rsi, 1", "jz      short loc_18D0"], ["lea~rdi,<TAG>", "lea~rsi,<TAG>", "push~rbp", "sub~rsi,rdi", "mov~rbp,rsp", "sar~rsi,0", "mov~rax,rsi", "shr~rax,0", "add~rsi,rax", "sar~rsi,0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_registerTMCloneTable_ptr", "test    rax, rax", "jz      short loc_18D0"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, 0, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 18, 0.04167, 2, 2], "succs": [[], [0, 2], [0, 3], []], "fname": "register_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 0, 0, 0, 1, 4, 0, 1, 0, 0, 0.0, ["call    deregister_tm_clones", "mov     cs:completed_7698, 1", "pop     rbp", "retn"], ["call~FOO", "mov~<TAG>,0", "pop~rbp", "retn"]], [1, 0, 2, 0, 0, 4, 0, 1, 1, -1, 0.16666666666666666, ["cmp     cs:__cxa_finalize_ptr, 0", "push    rbp", "mov     rbp, rsp", "jz      short loc_1903"], ["cmp~<TAG>,0", "push~rbp", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     rdi, cs:__dso_handle", "call    __cxa_finalize"], ["mov~rdi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:completed_7698, 0", "jnz     short locret_1918"], ["cmp~<TAG>,0", "jnz~FOO"]]], "func_feature": [2, 0, 4, 0, 5, 5, 0, 13, 0.03333, 3, 0], "succs": [[], [0, 2], [0], [], [1, 3]], "fname": "__do_global_dtors_aux", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "pop     rbp", "jmp     register_tm_clones"], ["push~rbp", "mov~rbp,rsp", "pop~rbp", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "frame_dummy", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 0, 0, 3, 0, 21, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+ptr], rdi", "mov     [rbp+alignment], rsi", "mov     rax, [rbp+ptr]", "mov     [rbp+p0], rax", "mov     rax, [rbp+alignment]", "lea     rdx, [rax-1]", "mov     rax, [rbp+p0]", "add     rax, rdx", "mov     [rbp+p1], rax", "mov     rax, [rbp+p1]", "mov     edx, 0", "div     [rbp+alignment]", "mov     rax, rdx", "neg     rax", "mov     rdx, rax", "mov     rax, [rbp+p1]", "add     rax, rdx", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "lea~rdx,[rax-1]+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~edx,0", "div~,[rbp+0]", "mov~rax,rdx", "neg~rax", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 3, 21, 0.0, 0, 3], "succs": [[]], "fname": "ptr_align", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[2, 0, 0, 2, 2, 15, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 8", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, msgid; \"\\nWith no FILE, or when FILE is -, read\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "nop", "add     rsp, 8", "pop     rbx", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "nop", "add~rsp,0", "pop~rbx", "pop~rbp", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 1, 15, 0.0, 2, 2], "succs": [[]], "fname": "emit_stdin_note", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 0, 5, 0, 2, 12, 0, 3, 0, 0, 0.24725274725274726, ["lea     rdi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "call    _gettext", "mov     rcx, rax", "mov     rax, [rbp+program]", "mov     rdx, rax", "lea     rsi, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rdi, rcx; format", "mov     eax, 0", "call    _printf", "mov     rax, [rbp+node]", "cmp     rax, [rbp+program]", "jnz     short loc_1B9C"], ["lea~rdi,<TAG>", "call~FOO", "mov~rcx,rax", "mov~rax,[rbp+0]", "mov~rdx,rax", "lea~rsi,<TAG>", "mov~rdi,rcx", "mov~eax,0", "call~FOO", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnz~FOO"]], [4, 0, 8, 0, 3, 13, 0, 4, 3, 4, 0.26373626373626374, ["lea     rdi, aSOnlineHelpS; \"\\n%s online help: <%s>\\n\"", "call    _gettext", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rsi, package; \"GNU coreutils\"", "mov     rdi, rax; format", "mov     eax, 0", "call    _printf", "mov     esi, 0; locale", "mov     edi, 5; category", "call    _setlocale", "mov     [rbp+lc_messages], rax", "cmp     [rbp+lc_messages], 0", "jz      short loc_1B56"], ["lea~rdi,<TAG>", "call~FOO", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 7, 0, 1, 7, 1, 2, 4, 4, 0.038461538461538464, ["mov     rax, [rbp+lc_messages]", "mov     edx, 3; n", "lea     rsi, s2; \"en_\"", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jz      short loc_1B56"], ["mov~rax,[rbp+0]", "mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 6, 0, 2, 6, 0, 2, 5, 4, 0.0, ["mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aReportAnyTrans; \"Report any translation bugs to <https:/\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked"], ["mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 2, 0, 2, 13, 1, 3, 6, 1, 0.13186813186813187, ["lea     rdi, aOrAvailableLoc; \"or available locally via: info '(coreut\"...", "call    _gettext", "mov     rcx, rax", "mov     rax, [rbp+node]", "mov     rdx, rbx", "mov     rsi, rax", "mov     rdi, rcx; format", "mov     eax, 0", "call    _printf", "nop", "mov     rax, [rbp+var_18]", "xor     rax, fs:28h", "jz      short loc_1BE1"], ["lea~rdi,<TAG>", "call~FOO", "mov~rcx,rax", "mov~rax,[rbp+0]", "mov~rdx,rbx", "mov~rsi,rax", "mov~rdi,rcx", "mov~eax,0", "call~FOO", "nop", "mov~rax,[rbp+0]", "xor~rax,<TAG>", "jz~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 7, 0, 0.0, ["add     rsp, 0B8h", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [0, 0, 9, 0, 0, 3, 0, 0, 3, 5, 0.0, ["mov     rax, [rbp+map_prog]", "mov     rax, [rax+8]", "mov     [rbp+node], rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~[rbp+0],rax"]], [0, 0, 10, 0, 0, 4, 1, 1, 2, 5, 0.2197802197802198, ["mov     rax, [rbp+map_prog]", "mov     rax, [rax+8]", "test    rax, rax", "jz      short loc_1AD2"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 14, 0, 1, 8, 1, 2, 2, 6, 0.01098901098901099, ["mov     rax, [rbp+map_prog]", "mov     rdx, [rax]", "mov     rax, [rbp+program]", "mov     rsi, rdx; s2", "mov     rdi, rax; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_1A79"], ["mov~rax,[rbp+0]", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 14, 0, 0, 4, 1, 1, 1, 6, 0.13736263736263737, ["mov     rax, [rbp+map_prog]", "mov     rax, [rax]", "test    rax, rax", "jz      short loc_1AB0"], ["mov~rax,[rbp+0]", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [3, 0, 14, 1, 0, 39, 1, 1, 0, 7, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 0B8h", "mov     [rbp+program], rdi", "mov     rax, fs:28h", "mov     [rbp+var_18], rax", "xor     eax, eax", "lea     rax, asc_6460; \"[\"", "mov     [rbp+infomap.program], rax", "lea     rax, aTestInvocation; \"test invocation\"", "mov     [rbp+infomap.node], rax", "lea     rax, domainname; \"coreutils\"", "mov     [rbp+infomap.program+10h], rax", "lea     rax, aMultiCallInvoc; \"Multi-call invocation\"", "mov     [rbp+infomap.node+10h], rax", "lea     rax, aSha224sum; \"sha224sum\"", "mov     [rbp+infomap.program+20h], rax", "lea     rax, aSha2Utilities; \"sha2 utilities\"", "mov     [rbp+infomap.node+20h], rax", "lea     rax, aSha256sum; \"sha256sum\"", "mov     [rbp+infomap.program+30h], rax", "lea     rax, aSha2Utilities; \"sha2 utilities\"", "mov     [rbp+infomap.node+30h], rax", "lea     rax, aSha384sum; \"sha384sum\"", "mov     [rbp+infomap.program+40h], rax", "lea     rax, aSha2Utilities; \"sha2 utilities\"", "mov     [rbp+infomap.node+40h], rax", "lea     rax, aSha512sum; \"sha512sum\"", "mov     [rbp+infomap.program+50h], rax", "lea     rax, aSha2Utilities; \"sha2 utilities\"", "mov     [rbp+infomap.node+50h], rax", "mov     [rbp+infomap.program+60h], 0", "mov     [rbp+infomap.node+60h], 0", "mov     rax, [rbp+program]", "mov     [rbp+node], rax", "lea     rax, [rbp+infomap]", "mov     [rbp+map_prog], rax", "jmp     short loc_1A81"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~[rbp+0],rax", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 14, 1, 0, 1, 0, 0, 3, 7, 0.005494505494505495, ["add     [rbp+map_prog], 10h"], ["add~[rbp+0],0"]], [0, 0, 3, 0, 0, 2, 0, 1, 5, 2, 0.08241758241758243, ["lea     rbx, aInvocation; \" invocation\"", "jmp     short loc_1BA3"], ["lea~rbx,<TAG>", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 5, 2, 0.08241758241758243, ["lea     rbx, locale"], ["lea~rbx,<TAG>"]]], "func_feature": [12, 6, 21, 1, 15, 20, 1, 118, 0.08132, 20, 3], "succs": [[13, 14], [0, 2], [0, 3], [0], [], [4, 6], [], [1], [1, 7], [8, 12], [8, 9], [10], [10], [5], [5]], "fname": "emit_ancillary_info", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 4, 0, 0, 3, 1, 1, 0, 0, 0.1607142857142857, ["mov     rax, [rbp+sb.st_blksize]", "test    rax, rax", "jle     short loc_1C3F"], ["mov~rax,[rbp+0]", "test~rax,rax", "jle~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 2, 2, 0.14285714285714285, ["mov     rax, [rbp+sb.st_blksize]", "cmp     rax, 1FFFFh", "jle     short loc_1C46"], ["mov~rax,[rbp+0]", "cmp~rax,0", "jle~FOO"]], [0, 1, 1, 0, 0, 2, 0, 1, 4, 1, 0.026785714285714284, ["mov     eax, 200h", "jmp     short loc_1C4B"], ["mov~eax,<STR>", "jmp~FOO"]], [1, 0, 3, 0, 0, 5, 0, 1, 4, 2, 0.07142857142857142, ["mov     rax, [rbp+sb.st_blksize]", "mov     rdx, rax", "mov     rax, 2000000000000000h", "cmp     rdx, rax", "ja      short loc_1C3F"], ["mov~rax,[rbp+0]", "mov~rdx,rax", "mov~rax,0", "cmp~rdx,rax", "ja~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0.05357142857142857, ["mov     eax, 20000h"], ["mov~eax,0"]], [0, 0, 8, 0, 0, 5, 1, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     rax, [rbp+sb.st_blksize]", "test    rax, rax", "jle     short loc_1C46"], ["push~rbp", "mov~rbp,rsp", "mov~rax,[rbp+0]", "test~rax,rax", "jle~FOO"]], [1, 0, 7, 0, 0, 5, 0, 1, 1, 2, 0.08928571428571427, ["mov     rax, [rbp+sb.st_blksize]", "mov     rdx, rax", "mov     rax, 2000000000000000h", "cmp     rdx, rax", "ja      short loc_1C46"], ["mov~rax,[rbp+0]", "mov~rdx,rax", "mov~rax,0", "cmp~rdx,rax", "ja~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 5, 1, 0.008928571428571428, ["mov     rax, [rbp+sb.st_blksize]", "jmp     short loc_1C4B"], ["mov~rax,[rbp+0]", "jmp~FOO"]]], "func_feature": [0, 2, 7, 0, 9, 13, 2, 28, 0.06151, 0, 0], "succs": [[2, 3], [0, 4], [7], [8, 2], [7], [4, 6], [1, 4], [], [7]], "fname": "io_blksize", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[2, 0, 1, 0, 16, 49, 0, 16, 0, 0, 0.08333333333333333, ["mov     rbx, cs:program_name", "lea     rdi, aUsageSOptionFi; \"Usage: %s [OPTION]... [FILE]...\\n\"", "call    _gettext", "mov     rsi, rbx", "mov     rdi, rax; format", "mov     eax, 0", "call    _printf", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aConcatenateFil; \"Concatenate FILE(s) to standard output.\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "call    emit_stdin_note", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aAShowAllEquiva; \"\\n  -A, --show-all           equivalent\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aTEquivalentToV; \"  -t                       equivalent t\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aHelpDisplayThi; \"      --help     display this help and \"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aVersionOutputV; \"      --version  output version informa\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     r12, cs:program_name", "mov     rbx, cs:program_name", "lea     rdi, aExamplesSFGOut; \"\\nExamples:\\n  %s f - g  Output f's con\"...", "call    _gettext", "mov     rdx, r12", "mov     rsi, rbx", "mov     rdi, rax; format", "mov     eax, 0", "call    _printf", "lea     rdi, command_name; \"cat\"", "call    emit_ancillary_info"], ["mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~r12,<TAG>", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rdx,r12", "mov~rsi,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "lea~rdi,<TAG>", "call~FOO"]], [2, 0, 3, 1, 0, 8, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r12", "push    rbx", "sub     rsp, 10h", "mov     [rbp+status], edi", "cmp     [rbp+status], 0", "jz      short loc_1C96"], ["push~rbp", "mov~rbp,rsp", "push~r12", "push~rbx", "sub~rsp,0", "mov~[rbp+0],edi", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 1, 0, 2, 11, 0, 3, 1, 1, 0.08333333333333333, ["mov     rbx, cs:program_name", "lea     rdi, aTrySHelpForMor; \"Try '%s --help' for more information.\\n\"", "call    _gettext", "mov     rcx, rax", "mov     rax, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rbx", "mov     rsi, rcx; format", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "jmp     loc_1D8D"], ["mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rcx,rax", "mov~rax,<TAG>", "mov~rdx,rbx", "mov~rsi,rcx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "jmp~FOO"]], [0, 0, 0, 0, 1, 3, 0, 1, 2, 0, 0.0, ["mov     eax, [rbp+status]", "mov     edi, eax; status", "call    _exit"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO"]]], "func_feature": [19, 0, 21, 0, 4, 4, 2, 71, 0.04167, 12, 1], "succs": [[3], [0, 2], [3], []], "fname": "usage", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 9, 0, 0, 4, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     rax, cs:line_num_end", "mov     [rbp+endp], rax"], ["push~rbp", "mov~rbp,rsp", "mov~rax,<TAG>", "mov~[rbp+0],rax"]], [1, 0, 3, 0, 0, 1, 0, 0, 0, 2, 0.0625, ["mov     byte ptr cs:line_buf, 3Eh ; '>'; \"                 0\\t\""], ["mov~<TAG>,0"]], [0, 0, 5, 0, 0, 4, 0, 0, 0, 3, 0.16666666666666666, ["mov     rdx, cs:line_num_start", "lea     rax, line_buf; \"                 0\\t\"", "cmp     rdx, rax", "jbe     short loc_1E0B"], ["mov~rdx,<TAG>", "lea~rax,<TAG>", "cmp~rdx,rax", "jbe~FOO"]], [2, 0, 3, 1, 0, 6, 0, 1, 0, 2, 0.0625, ["mov     rax, cs:line_num_start", "sub     rax, 1", "mov     cs:line_num_start, rax", "mov     rax, cs:line_num_start", "mov     byte ptr [rax], 31h ; '1'", "jmp     short loc_1E12"], ["mov~rax,<TAG>", "sub~rax,0", "mov~<TAG>,rax", "mov~rax,<TAG>", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 9, 0, 0, 7, 0, 0, 0, 3, 0.1388888888888889, ["mov     rax, [rbp+endp]", "lea     rdx, [rax-1]", "mov     [rbp+endp], rdx", "mov     byte ptr [rax], 30h ; '0'", "mov     rax, cs:line_num_start", "cmp     [rbp+endp], rax", "jnb     short loc_1DA6"], ["mov~rax,[rbp+0]", "lea~rdx,[rax-1]+0]", "mov~[rbp+0],rdx", "mov~<TAG>,0", "mov~rax,<TAG>", "cmp~[rbp+0],rax", "jnb~FOO"]], [0, 0, 2, 0, 0, 4, 0, 0, 0, 1, 0.125, ["mov     rdx, cs:line_num_start", "mov     rax, cs:line_num_print", "cmp     rdx, rax", "jnb     short loc_1E3A"], ["mov~rdx,<TAG>", "mov~rax,<TAG>", "cmp~rdx,rax", "jnb~FOO"]], [1, 0, 1, 1, 0, 4, 0, 1, 0, 1, 0.0, ["mov     rax, cs:line_num_print", "sub     rax, 1", "mov     cs:line_num_print, rax", "jmp     short loc_1E3A"], ["mov~rax,<TAG>", "sub~rax,0", "mov~<TAG>,rax", "jmp~FOO"]], [2, 0, 9, 1, 0, 9, 0, 1, 0, 2, 0.1388888888888889, ["mov     rax, [rbp+endp]", "movzx   eax, byte ptr [rax]", "mov     edx, eax", "add     edx, 1", "mov     ecx, edx", "mov     rdx, [rbp+endp]", "mov     [rdx], cl", "cmp     al, 38h ; '8'", "jle     short loc_1E39"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "mov~edx,eax", "add~edx,0", "mov~ecx,edx", "mov~rdx,[rbp+0]", "mov~<TAG>,cl", "cmp~al,0", "jle~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.041666666666666664, ["nop"], ["nop"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 0, 3, 0, 10, 13, 2, 42, 0.07361, 4, 3], "succs": [[7], [5], [1, 3], [5], [2, 7], [9, 6], [9], [8, 4], [9], []], "fname": "next_line_num", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.023809523809523808, ["mov     eax, 1", "jmp     short loc_1F14"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 2, 2, 0.16666666666666666, ["cmp     [rbp+n_read], 0", "jnz     short loc_1EC3"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 7, 0, 1, 9, 0, 2, 3, 2, 0.11904761904761904, ["mov     rax, [rbp+n_read]", "mov     [rbp+n], rax", "mov     rdx, [rbp+n]; count", "mov     rax, [rbp+buf]", "mov     rsi, rax; buf", "mov     edi, 1; fd", "call    full_write", "cmp     [rbp+n], rax", "jz      loc_1E4D"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 1, 7, 1, 0, 6, 0, 0, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 28h", "mov     [rbp+buf], rdi", "mov     [rbp+bufsize], rsi"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi"]], [1, 0, 7, 0, 1, 9, 0, 2, 1, 2, 0.23809523809523808, ["mov     eax, cs:input_desc", "mov     rdx, [rbp+bufsize]; count", "mov     rcx, [rbp+buf]", "mov     rsi, rcx; buf", "mov     edi, eax; fd", "call    safe_read", "mov     [rbp+n_read], rax", "cmp     [rbp+n_read], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_1EB5"], ["mov~eax,<TAG>", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rsi,rcx", "mov~edi,eax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 1, 0, 3, 10, 0, 3, 4, 1, 0.023809523809523808, ["lea     rdi, aWriteError; \"write error\"", "call    _gettext", "mov     rbx, rax", "call    ___errno_location", "mov     eax, [rax]", "mov     rdx, rbx; format", "mov     esi, eax; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["lea~rdi,<TAG>", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~eax,<TAG>", "mov~rdx,rbx", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO"]], [5, 0, 1, 0, 3, 16, 0, 4, 2, 1, 0.047619047619047616, ["mov     rax, cs:infile", "mov     rdx, rax; arg", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     rbx, rax", "call    ___errno_location", "mov     eax, [rax]", "mov     rcx, rbx", "lea     rdx, format; \"%s\"", "mov     esi, eax; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     eax, 0", "jmp     short loc_1F14"], ["mov~rax,<TAG>", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~eax,<TAG>", "mov~rcx,rbx", "lea~rdx,<TAG>", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~eax,0", "jmp~FOO"]], [0, 1, 0, 1, 0, 4, 0, 0, 3, 0, 0.0, ["add     rsp, 28h", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "retn"]]], "func_feature": [8, 0, 13, 0, 8, 10, 1, 58, 0.07738, 4, 2], "succs": [[7], [0, 2], [4, 5], [4], [1, 6], [7], [7], []], "fname": "simple_cat", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 1, 0, 0, 3, 0, 0, 0, 0, 0.16666666666666666, ["mov     rax, [rbp+bpout]", "mov     rdx, [rbp+outbuf]", "mov     [rax], rdx"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx"]], [1, 0, 3, 0, 1, 7, 0, 2, 1, 2, 0.16666666666666666, ["mov     rdx, [rbp+n_write]; count", "mov     rax, [rbp+outbuf]", "mov     rsi, rax; buf", "mov     edi, 1; fd", "call    full_write", "cmp     [rbp+n_write], rax", "jz      short loc_1F90"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "cmp~[rbp+0],rax", "jz~FOO"]], [2, 0, 2, 0, 3, 10, 0, 3, 2, 2, 0.0, ["lea     rdi, aWriteError; \"write error\"", "call    _gettext", "mov     rbx, rax", "call    ___errno_location", "mov     eax, [rax]", "mov     rdx, rbx; format", "mov     esi, eax; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["lea~rdi,<TAG>", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~eax,<TAG>", "mov~rdx,rbx", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 1, 4, 2, 0, 15, 0, 1, 0, 1, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 28h", "mov     [rbp+outbuf], rdi", "mov     [rbp+bpout], rsi", "mov     rax, [rbp+bpout]", "mov     rax, [rax]", "mov     rdx, rax", "mov     rax, [rbp+outbuf]", "sub     rdx, rax", "mov     rax, rdx", "mov     [rbp+n_write], rax", "cmp     [rbp+n_write], 0", "jz      short loc_1F9B"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdx,rax", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 1, 0, 1, 0, 5, 0, 0, 1, 0, 0.0, ["nop", "add     rsp, 28h", "pop     rbx", "pop     rbp", "retn"], ["nop", "add~rsp,<STR>", "pop~rbx", "pop~rbp", "retn"]]], "func_feature": [4, 0, 6, 0, 5, 6, 3, 40, 0.06667, 1, 3], "succs": [[4], [0, 2], [0], [1, 4], []], "fname": "write_pending", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 0, 69, 0, 0, 2, 0, 1, 0, 0, 0.013213981244671782, ["cmp     [rbp+number], 0", "jz      short loc_23A1"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 69, 0, 0, 2, 0, 1, 8, 14, 0.28601875532821824, ["cmp     [rbp+newlines], 0", "js      short loc_23A1"], ["cmp~[rbp+0],0", "js~FOO"]], [1, 0, 69, 0, 0, 2, 0, 1, 5, 13, 0.02791986359761296, ["cmp     [rbp+number], 0", "jz      short loc_2330"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 69, 0, 0, 2, 0, 1, 4, 12, 0.14290281329923274, ["cmp     [rbp+newlines], 1", "jle     short loc_22FA"], ["cmp~[rbp+0],0", "jle~FOO"]], [2, 0, 69, 0, 0, 3, 0, 1, 5, 11, 0.10411338448422848, ["mov     [rbp+newlines], 2", "cmp     [rbp+squeeze_blank], 0", "jz      short loc_22FA"], ["mov~[rbp+0],0", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 8, 1, 0.02855924978687127, ["mov     rbx, [rbp+var_18]", "xor     rbx, fs:28h", "jz      short loc_258A"], ["mov~rbx,[rbp+0]", "xor~rbx,<TAG>", "jz~FOO"]], [4, 0, 3, 0, 4, 20, 0, 5, 10, 2, 0.002877237851662404, ["mov     rax, cs:infile", "mov     rsi, rax; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     r12, rax", "lea     rdi, aCannotDoIoctlO; \"cannot do ioctl on %s\"", "call    _gettext", "mov     rbx, rax", "call    ___errno_location", "mov     eax, [rax]", "mov     rcx, r12", "mov     rdx, rbx; format", "mov     esi, eax; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     eax, [rbp+newlines]", "mov     cs:newlines2, eax", "mov     eax, 0", "jmp     loc_2576"], ["mov~rax,<TAG>", "mov~rsi,rax", "mov~edi,0", "call~FOO", "mov~r12,rax", "lea~rdi,<TAG>", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~eax,<TAG>", "mov~rcx,r12", "mov~rdx,rbx", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "mov~eax,0", "jmp~FOO"]], [5, 0, 3, 0, 4, 23, 0, 5, 7, 2, 0.03740409207161125, ["mov     rax, cs:infile", "mov     rdx, rax; arg", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     rbx, rax", "call    ___errno_location", "mov     eax, [rax]", "mov     rcx, rbx", "lea     rdx, format; \"%s\"", "mov     esi, eax; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "lea     rdx, [rbp+bpout]", "mov     rax, [rbp+outbuf]", "mov     rsi, rdx; bpout", "mov     rdi, rax; outbuf", "call    write_pending", "mov     eax, [rbp+newlines]", "mov     cs:newlines2, eax", "mov     eax, 0", "jmp     loc_2576"], ["mov~rax,<TAG>", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~eax,<TAG>", "mov~rcx,rbx", "lea~rdx,<TAG>", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO", "lea~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 1, 9, 0, 2, 8, 2, 0.000639386189258312, ["lea     rdx, [rbp+bpout]", "mov     rax, [rbp+outbuf]", "mov     rsi, rdx; bpout", "mov     rdi, rax; outbuf", "call    write_pending", "mov     eax, [rbp+newlines]", "mov     cs:newlines2, eax", "mov     eax, 1", "jmp     loc_2576"], ["lea~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "mov~eax,0", "jmp~FOO"]], [3, 0, 69, 0, 0, 4, 0, 1, 3, 6, 0.23124467178175617, ["mov     [rbp+input_pending], 0", "mov     [rbp+n_to_read], 0", "cmp     [rbp+use_fionread], 0", "jz      loc_21C6"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 69, 0, 0, 3, 0, 0, 2, 7, 0.5087382779198636, ["mov     rax, [rbp+bpin]", "cmp     rax, [rbp+eob]", "jbe     loc_22C6"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jbe~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 69, 1, 0, 9, 0, 1, 8, 11, 0.16432225063938619, ["mov     rax, [rbp+inbuf]", "mov     [rbp+bpin], rax", "mov     rdx, [rbp+bpin]", "mov     rax, [rbp+n_read]", "add     rax, rdx", "mov     [rbp+eob], rax", "mov     rax, [rbp+eob]", "mov     byte ptr [rax], 0Ah", "jmp     loc_2357"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 69, 0, 0, 2, 0, 1, 7, 3, 0.17753623188405798, ["cmp     [rbp+n_read], 0", "jnz     short loc_22A3"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 69, 0, 0, 8, 0, 1, 15, 15, 0.007033248081841432, ["movzx   eax, [rbp+ch_0]", "lea     ecx, [rax-80h]", "mov     rax, [rbp+bpout]", "lea     rdx, [rax+1]", "mov     [rbp+bpout], rdx", "mov     edx, ecx", "mov     [rax], dl", "jmp     loc_24EC"], ["movzx~eax,[rbp+0]", "lea~ecx,[rax-80h]+0]", "mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~edx,ecx", "mov~<TAG>,dl", "jmp~FOO"]], [1, 0, 69, 0, 0, 2, 0, 1, 14, 16, 0.026427962489343565, ["cmp     [rbp+ch_0], 0FFh", "jz      short loc_2444"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 69, 0, 0, 2, 0, 1, 7, 9, 0.4556692242114237, ["cmp     [rbp+ch_0], 0Ah", "jz      loc_2035"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 69, 0, 0, 6, 0, 1, 6, 10, 0.10368712702472294, ["mov     rax, [rbp+bpin]", "lea     rdx, [rax+1]", "mov     [rbp+bpin], rdx", "movzx   eax, byte ptr [rax]", "mov     [rbp+ch_0], al", "jmp     short loc_2369"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "movzx~eax,<TAG>", "mov~[rbp+0],al", "jmp~FOO"]], [0, 0, 69, 0, 0, 5, 0, 0, 6, 10, 0.3364236999147485, ["mov     rax, [rbp+bpin]", "lea     rdx, [rax+1]", "mov     [rbp+bpin], rdx", "movzx   eax, byte ptr [rax]", "mov     [rbp+ch_0], al"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "movzx~eax,<TAG>", "mov~[rbp+0],al"]], [1, 0, 69, 0, 0, 12, 0, 1, 14, 15, 0.013640238704177323, ["mov     rax, [rbp+bpout]", "lea     rdx, [rax+1]", "mov     [rbp+bpout], rdx", "mov     byte ptr [rax], 5Eh ; '^'", "movzx   eax, [rbp+ch_0]", "lea     ecx, [rax-40h]", "mov     rax, [rbp+bpout]", "lea     rdx, [rax+1]", "mov     [rbp+bpout], rdx", "mov     edx, ecx", "mov     [rax], dl", "jmp     short loc_24EC"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~<TAG>,0", "movzx~eax,[rbp+0]", "lea~ecx,[rax-40h]+0]", "mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~edx,ecx", "mov~<TAG>,dl", "jmp~FOO"]], [3, 0, 69, 0, 0, 10, 0, 0, 13, 16, 0.052429667519181586, ["mov     rax, [rbp+bpout]", "lea     rdx, [rax+1]", "mov     [rbp+bpout], rdx", "mov     byte ptr [rax], 4Dh ; 'M'", "mov     rax, [rbp+bpout]", "lea     rdx, [rax+1]", "mov     [rbp+bpout], rdx", "mov     byte ptr [rax], 2Dh ; '-'", "cmp     [rbp+ch_0], 9Fh", "jbe     short loc_2467"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~<TAG>,0", "mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~<TAG>,0", "cmp~[rbp+0],0", "jbe~FOO"]], [1, 0, 69, 0, 0, 4, 2, 1, 6, 13, 0.013213981244671782, ["movzx   eax, [rbp+number_nonblank]", "xor     eax, 1", "test    al, al", "jz      short loc_2330"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 69, 0, 1, 9, 0, 2, 6, 3, 0.2275149190110827, ["mov     eax, cs:input_desc", "mov     rdx, [rbp+insize]; count", "mov     rcx, [rbp+inbuf]", "mov     rsi, rcx; buf", "mov     edi, eax; fd", "call    safe_read", "mov     [rbp+n_read], rax", "cmp     [rbp+n_read], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_2276"], ["mov~eax,<TAG>", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rsi,rcx", "mov~edi,eax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 69, 0, 0, 4, 2, 1, 5, 4, 0.225383631713555, ["movzx   eax, [rbp+input_pending]", "xor     eax, 1", "test    al, al", "jz      short loc_21EF"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 69, 0, 1, 5, 0, 1, 6, 4, 0.0, ["lea     rdx, [rbp+bpout]", "mov     rax, [rbp+outbuf]", "mov     rsi, rdx; bpout", "mov     rdi, rax; outbuf", "call    write_pending"], ["lea~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO"]], [1, 0, 69, 0, 0, 2, 0, 1, 4, 12, 0.15441176470588236, ["cmp     [rbp+show_ends], 0", "jz      short loc_2348"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 69, 1, 0, 3, 0, 1, 3, 13, 0.2651321398124467, ["add     [rbp+newlines], 1", "cmp     [rbp+newlines], 0", "jle     short loc_2330"], ["add~[rbp+0],0", "cmp~[rbp+0],0", "jle~FOO"]], [0, 0, 69, 0, 2, 7, 0, 2, 7, 13, 0.0, ["call    next_line_num", "mov     rdx, cs:line_num_print", "mov     rax, [rbp+bpout]", "mov     rsi, rdx; src", "mov     rdi, rax; dest", "call    _stpcpy", "mov     [rbp+bpout], rax"], ["call~FOO", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax"]], [1, 0, 69, 0, 0, 2, 0, 1, 11, 12, 0.20886615515771526, ["cmp     [rbp+ch_0], 9", "jnz     short loc_24B4"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 69, 0, 0, 2, 0, 0, 10, 13, 0.3348252344416027, ["cmp     [rbp+ch_0], 1Fh", "jbe     loc_248F"], ["cmp~[rbp+0],0", "jbe~FOO"]], [2, 0, 69, 0, 3, 10, 0, 3, 4, 10, 0.0, ["lea     rdi, aWriteError; \"write error\"", "call    _gettext", "mov     rbx, rax", "call    ___errno_location", "mov     eax, [rax]", "mov     rdx, rbx; format", "mov     esi, eax; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["lea~rdi,<TAG>", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~eax,<TAG>", "mov~rdx,rbx", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 69, 0, 1, 7, 0, 2, 3, 10, 0.05264279624893436, ["mov     rdx, [rbp+outsize]; count", "mov     rax, [rbp+wp]", "mov     rsi, rax; buf", "mov     edi, 1; fd", "call    full_write", "cmp     [rbp+outsize], rax", "jz      short loc_209A"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 0, 69, 0, 0, 6, 0, 1, 13, 13, 0.029411764705882353, ["mov     rax, [rbp+bpin]", "lea     rdx, [rax+1]", "mov     [rbp+bpin], rdx", "movzx   eax, byte ptr [rax]", "mov     [rbp+ch_0], al", "jmp     short loc_2503"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "movzx~eax,<TAG>", "mov~[rbp+0],al", "jmp~FOO"]], [1, 0, 69, 0, 0, 12, 0, 1, 12, 14, 0.006713554987212276, ["mov     rax, [rbp+bpout]", "lea     rdx, [rax+1]", "mov     [rbp+bpout], rdx", "mov     byte ptr [rax], 5Eh ; '^'", "movzx   eax, [rbp+ch_0]", "lea     ecx, [rax+40h]", "mov     rax, [rbp+bpout]", "lea     rdx, [rax+1]", "mov     [rbp+bpout], rdx", "mov     edx, ecx", "mov     [rax], dl", "jmp     short loc_255D"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~<TAG>,0", "movzx~eax,[rbp+0]", "lea~ecx,[rax+0]", "mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~edx,ecx", "mov~<TAG>,dl", "jmp~FOO"]], [0, 0, 69, 0, 0, 6, 0, 1, 12, 14, 0.007139812446717818, ["mov     rax, [rbp+bpout]", "lea     rdx, [rax+1]", "mov     [rbp+bpout], rdx", "movzx   edx, [rbp+ch_0]", "mov     [rax], dl", "jmp     short loc_255D"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "movzx~edx,[rbp+0]", "mov~<TAG>,dl", "jmp~FOO"]], [0, 0, 69, 0, 2, 7, 0, 2, 10, 14, 0.0, ["call    next_line_num", "mov     rdx, cs:line_num_print", "mov     rax, [rbp+bpout]", "mov     rsi, rdx; src", "mov     rdi, rax; dest", "call    _stpcpy", "mov     [rbp+bpout], rax"], ["call~FOO", "mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax"]], [1, 0, 69, 0, 0, 2, 0, 1, 12, 16, 0.07800511508951406, ["cmp     [rbp+ch_0], 7Fh", "jnz     short loc_23FE"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 69, 0, 0, 4, 2, 1, 12, 12, 0.01438618925831202, ["movzx   eax, [rbp+show_tabs]", "xor     eax, 1", "test    al, al", "jz      short loc_24B4"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 69, 0, 0, 2, 0, 1, 12, 10, 0.12297527706734868, ["mov     [rbp+newlines], 0FFFFFFFFh", "jmp     short loc_2571"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 69, 0, 0, 2, 0, 1, 11, 11, 0.14247655583972718, ["cmp     [rbp+ch_0], 0Ah", "jz      short loc_2554"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 69, 0, 1, 8, 1, 1, 4, 6, 0.08844842284739983, ["mov     eax, cs:input_desc", "lea     rdx, [rbp+n_to_read]", "mov     esi, 541Bh; request", "mov     edi, eax; fd", "mov     eax, 0", "call    _ioctl", "test    eax, eax", "jns     loc_21C6"], ["mov~eax,<TAG>", "lea~rdx,[rbp+0]", "mov~esi,0", "mov~edi,eax", "mov~eax,0", "call~FOO", "test~eax,eax", "jns~FOO"]], [1, 0, 69, 0, 0, 2, 0, 1, 9, 13, 0.2892156862745098, ["cmp     [rbp+show_nonprinting], 0", "jz      loc_2503"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 69, 0, 0, 2, 0, 1, 10, 12, 0.1604859335038363, ["cmp     [rbp+ch_0], 9", "jnz     short loc_253A"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 69, 0, 0, 5, 0, 1, 13, 15, 0.0037297527706734866, ["mov     rax, [rbp+bpout]", "lea     rdx, [rax+1]", "mov     [rbp+bpout], rdx", "mov     byte ptr [rax], 9", "jmp     short loc_24EC"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~<TAG>,0", "jmp~FOO"]], [2, 1, 69, 2, 0, 35, 1, 0, 0, 9, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r12", "push    rbx", "sub     rsp, 90h", "mov     [rbp+inbuf], rdi", "mov     [rbp+insize], rsi", "mov     [rbp+outbuf], rdx", "mov     [rbp+outsize], rcx", "mov     edi, r8d", "mov     r8d, r9d", "mov     esi, [rbp+arg_0]", "mov     ecx, [rbp+arg_8]", "mov     edx, [rbp+arg_10]", "mov     eax, [rbp+arg_18]", "mov     [rbp+show_nonprinting], dil", "mov     edi, r8d", "mov     [rbp+show_tabs], dil", "mov     [rbp+number], sil", "mov     [rbp+number_nonblank], cl", "mov     [rbp+show_ends], dl", "mov     [rbp+squeeze_blank], al", "mov     rax, fs:28h", "mov     [rbp+var_18], rax", "xor     eax, eax", "mov     eax, cs:newlines2", "mov     [rbp+newlines], eax", "mov     [rbp+use_fionread], 1", "mov     rax, [rbp+inbuf]", "mov     [rbp+eob], rax", "mov     rax, [rbp+eob]", "add     rax, 1", "mov     [rbp+bpin], rax", "mov     rax, [rbp+outbuf]", "mov     [rbp+bpout], rax"], ["push~rbp", "mov~rbp,rsp", "push~r12", "push~rbx", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~edi,r8d", "mov~r8d,r9d", "mov~esi,[rbp+0]", "mov~ecx,[rbp+0]", "mov~edx,[rbp+0]", "mov~eax,[rbp+0]", "mov~[rbp+0],dil", "mov~edi,r8d", "mov~[rbp+0],dil", "mov~[rbp+0],sil", "mov~[rbp+0],cl", "mov~[rbp+0],dl", "mov~[rbp+0],al", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "add~rax,0", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [0, 0, 69, 0, 0, 6, 0, 1, 13, 14, 0.16005967604433077, ["mov     rax, [rbp+bpin]", "lea     rdx, [rax+1]", "mov     [rbp+bpin], rdx", "movzx   eax, byte ptr [rax]", "mov     [rbp+ch_0], al", "jmp     loc_23AE"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "movzx~eax,<TAG>", "mov~[rbp+0],al", "jmp~FOO"]], [0, 0, 69, 0, 0, 1, 0, 1, 13, 9, 0.31585677749360613, ["jmp     loc_2035"], ["jmp~FOO"]], [1, 0, 69, 0, 0, 2, 0, 1, 13, 10, 0.1773231031543052, ["mov     [rbp+newlines], 0FFFFFFFFh", "jmp     loc_2571"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 69, 0, 1, 4, 0, 2, 5, 7, 0.07651321398124467, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 5Fh ; '_'", "jz      short loc_2169"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 69, 0, 0, 2, 0, 1, 12, 11, 0.19384057971014493, ["cmp     [rbp+ch_0], 0Ah", "jnz     short loc_24C6"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 69, 0, 0, 2, 0, 1, 11, 16, 0.11359761295822676, ["cmp     [rbp+ch_0], 7Eh ; '~'", "ja      short loc_23D5"], ["cmp~[rbp+0],0", "ja~FOO"]], [1, 0, 69, 0, 0, 2, 0, 1, 11, 12, 0.019501278772378516, ["cmp     [rbp+show_tabs], 0", "jz      short loc_253A"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 69, 2, 0, 11, 0, 0, 4, 9, 0.054774083546462064, ["mov     rax, [rbp+outsize]", "add     [rbp+wp], rax", "mov     rax, [rbp+bpout]", "mov     rdx, rax", "mov     rax, [rbp+wp]", "sub     rdx, rax", "mov     rax, rdx", "mov     [rbp+remaining_bytes], rax", "mov     rax, [rbp+outsize]", "cmp     rax, [rbp+remaining_bytes]", "jbe     short loc_2055"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jbe~FOO"]], [1, 0, 69, 0, 1, 4, 0, 2, 9, 3, 0.015664961636828643, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 26h ; '&'", "jnz     short loc_216F"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [1, 0, 69, 0, 1, 4, 0, 2, 6, 6, 0.05210997442455243, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 19h", "jz      short loc_2169"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 69, 0, 0, 4, 0, 0, 5, 12, 0.0, ["mov     rax, [rbp+bpout]", "lea     rdx, [rax+1]", "mov     [rbp+bpout], rdx", "mov     byte ptr [rax], 24h ; '$'"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~<TAG>,0"]], [0, 0, 69, 1, 0, 6, 0, 1, 1, 8, 0.5023444160272805, ["mov     rdx, [rbp+outbuf]", "mov     rax, [rbp+outsize]", "add     rdx, rax", "mov     rax, [rbp+bpout]", "cmp     rdx, rax", "ja      loc_20E7"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "cmp~rdx,rax", "ja~FOO"]], [0, 0, 69, 0, 0, 3, 1, 1, 4, 5, 0.2232523444160273, ["mov     eax, [rbp+n_to_read]", "test    eax, eax", "jz      short loc_21D1"], ["mov~eax,[rbp+0]", "test~eax,eax", "jz~FOO"]], [1, 0, 69, 0, 0, 2, 0, 1, 6, 6, 0.0653239556692242, ["mov     [rbp+use_fionread], 0", "jmp     short loc_21C6"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 69, 0, 0, 1, 0, 0, 5, 5, 0.0, ["mov     [rbp+input_pending], 1"], ["mov~[rbp+0],0"]], [1, 0, 69, 0, 1, 4, 0, 2, 7, 5, 0.040174765558397274, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 16h", "jz      short loc_2169"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 69, 0, 0, 6, 0, 1, 12, 15, 0.023231031543052002, ["mov     rax, [rbp+bpout]", "lea     rdx, [rax+1]", "mov     [rbp+bpout], rdx", "movzx   edx, [rbp+ch_0]", "mov     [rax], dl", "jmp     loc_24EC"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "movzx~edx,[rbp+0]", "mov~<TAG>,dl", "jmp~FOO"]], [0, 0, 69, 0, 0, 2, 0, 0, 2, 11, 0.05093776641091219, ["mov     rax, [rbp+outbuf]", "mov     [rbp+wp], rax"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax"]], [2, 0, 69, 0, 0, 9, 0, 1, 13, 15, 0.013213981244671782, ["mov     rax, [rbp+bpout]", "lea     rdx, [rax+1]", "mov     [rbp+bpout], rdx", "mov     byte ptr [rax], 5Eh ; '^'", "mov     rax, [rbp+bpout]", "lea     rdx, [rax+1]", "mov     [rbp+bpout], rdx", "mov     byte ptr [rax], 3Fh ; '?'", "jmp     loc_24EC"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~<TAG>,0", "mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 69, 0, 1, 4, 0, 2, 8, 4, 0.028026427962489345, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 13h", "jz      short loc_2169"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [2, 0, 69, 0, 0, 9, 0, 1, 15, 15, 0.007033248081841432, ["mov     rax, [rbp+bpout]", "lea     rdx, [rax+1]", "mov     [rbp+bpout], rdx", "mov     byte ptr [rax], 5Eh ; '^'", "mov     rax, [rbp+bpout]", "lea     rdx, [rax+1]", "mov     [rbp+bpout], rdx", "mov     byte ptr [rax], 3Fh ; '?'", "jmp     loc_24EC"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~<TAG>,0", "mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 69, 1, 1, 10, 0, 1, 5, 8, 0.0552003410059676, ["mov     rdx, [rbp+remaining_bytes]; n", "mov     rcx, [rbp+wp]", "mov     rax, [rbp+outbuf]", "mov     rsi, rcx; src", "mov     rdi, rax; dest", "call    _memmove", "mov     rdx, [rbp+outbuf]", "mov     rax, [rbp+remaining_bytes]", "add     rax, rdx", "mov     [rbp+bpout], rax"], ["mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax"]], [1, 0, 69, 0, 0, 4, 0, 0, 5, 11, 0.15654305200341007, ["mov     rax, [rbp+bpout]", "lea     rdx, [rax+1]", "mov     [rbp+bpout], rdx", "mov     byte ptr [rax], 0Ah"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~<TAG>,0"]], [1, 0, 69, 0, 0, 11, 0, 0, 13, 15, 0.0041560102301790285, ["mov     rax, [rbp+bpout]", "lea     rdx, [rax+1]", "mov     [rbp+bpout], rdx", "mov     byte ptr [rax], 5Eh ; '^'", "movzx   eax, [rbp+ch_0]", "lea     ecx, [rax+40h]", "mov     rax, [rbp+bpout]", "lea     rdx, [rax+1]", "mov     [rbp+bpout], rdx", "mov     edx, ecx", "mov     [rax], dl"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~<TAG>,0", "movzx~eax,[rbp+0]", "lea~ecx,[rax+0]", "mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~[rbp+0],rdx", "mov~edx,ecx", "mov~<TAG>,dl"]], [0, 1, 0, 1, 0, 5, 0, 0, 9, 0, 0.0, ["add     rsp, 90h", "pop     rbx", "pop     r12", "pop     rbp", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~r12", "pop~rbp", "retn"]]], "func_feature": [27, 10, 78, 1, 70, 105, 1, 396, 0.10706, 8, 9], "succs": [[41, 35], [0, 41], [25, 21], [2, 4], [17, 2], [11, 69], [5], [5], [5], [40, 57], [9, 26], [], [18], [8, 12], [45], [65, 14], [56, 1], [16], [16], [45], [19, 15], [25, 27], [13, 7], [24, 22], [22], [67, 55], [25, 3], [25], [49, 37], [50, 28], [52], [52, 30], [42], [32], [32], [41], [20, 63], [49, 43], [46], [34, 38], [48, 57], [42, 29], [51, 39], [45], [56], [29], [56], [46], [58, 54], [68, 47], [36, 61], [33, 39], [66, 31], [58, 6], [58, 60], [67], [10, 62], [59, 23], [57], [23], [64, 58], [45], [31], [45], [58, 53], [45], [10], [18], [45], []], "fname": "cat", "n_num": 70}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 0, 31, 2, 3, 28, 2, 4, 0, 0, 0.002898550724637681, ["mov     rax, [rbp+insize]", "cmp     [rbp+outsize], rax", "cmovnb  rax, [rbp+outsize]", "mov     [rbp+insize], rax", "mov     rdx, [rbp+insize]", "mov     rax, [rbp+page_size]", "add     rax, rdx", "sub     rax, 1", "mov     rdi, rax; n", "call    xmalloc", "mov     [rbp+inbuf], rax", "mov     rdx, [rbp+page_size]", "mov     rax, [rbp+inbuf]", "mov     rsi, rdx; alignment", "mov     rdi, rax; ptr", "call    ptr_align", "mov     rdx, rax", "mov     rax, [rbp+insize]", "mov     rsi, rax; bufsize", "mov     rdi, rdx; buf", "call    simple_cat", "movzx   edx, [rbp+ok]", "movzx   eax, al", "and     eax, edx", "test    eax, eax", "setnz   al", "mov     [rbp+ok], al", "jmp     loc_2DA9"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "cmovnb~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "sub~rax,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,rdx", "call~FOO", "movzx~edx,[rbp+0]", "movzx~eax,al", "and~eax,edx", "test~eax,eax", "setnz~al", "mov~[rbp+0],al", "jmp~FOO"]], [1, 0, 31, 0, 0, 4, 2, 1, 14, 7, 0.011180124223602485, ["movzx   eax, [rbp+squeeze_blank]", "xor     eax, 1", "test    al, al", "jz      loc_2C88"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [4, 1, 31, 1, 2, 29, 0, 3, 9, 8, 0.12236024844720497, ["push    [rbp+stat_buf.__glibc_reserved+10h]", "push    [rbp+stat_buf.__glibc_reserved+8]", "push    [rbp+stat_buf.__glibc_reserved]", "push    [rbp+stat_buf.st_ctim.tv_nsec]", "push    [rbp+stat_buf.st_ctim.tv_sec]", "push    [rbp+stat_buf.st_mtim.tv_nsec]", "push    [rbp+stat_buf.st_mtim.tv_sec]", "push    [rbp+stat_buf.st_atim.tv_nsec]", "push    [rbp+stat_buf.st_atim.tv_sec]", "push    [rbp+stat_buf.st_blocks]", "push    [rbp+stat_buf.st_blksize]", "push    [rbp+stat_buf.st_size]", "push    [rbp+stat_buf.st_rdev]", "push    qword ptr [rbp+stat_buf.st_gid]", "push    qword ptr [rbp+stat_buf.st_mode]", "push    [rbp+stat_buf.st_nlink]", "push    [rbp+stat_buf.st_ino]", "push    [rbp+stat_buf.st_dev]; sb", "call    io_blksize", "add     rsp, 90h", "mov     [rbp+insize], rax", "mov     eax, cs:input_desc", "mov     ecx, 2; advice", "mov     edx, 0; len", "mov     esi, 0; offset", "mov     edi, eax; fd", "call    fdadvise", "cmp     [rbp+out_isreg], 0", "jz      loc_2BA3"], ["push~[rbp+0]", "push~[rbp+0]", "push~[rbp+0]", "push~[rbp+0]", "push~[rbp+0]", "push~[rbp+0]", "push~[rbp+0]", "push~[rbp+0]", "push~[rbp+0]", "push~[rbp+0]", "push~[rbp+0]", "push~[rbp+0]", "push~[rbp+0]", "push~[word ptr [rbp+0]", "push~[word ptr [rbp+0]", "push~[rbp+0]", "push~[rbp+0]", "push~[rbp+0]", "call~FOO", "add~rsp,<STR>", "mov~[rbp+0],rax", "mov~eax,<TAG>", "mov~ecx,0", "mov~edx,0", "mov~esi,0", "mov~edi,eax", "call~FOO", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 31, 0, 1, 7, 1, 1, 8, 6, 0.168944099378882, ["mov     eax, cs:input_desc", "lea     rdx, [rbp+stat_buf]", "mov     rsi, rdx; stat_buf", "mov     edi, eax; fildes", "call    fstat", "test    eax, eax", "jns     short loc_2A7B"], ["mov~eax,<TAG>", "lea~rdx,[rbp+0]", "mov~rsi,rdx", "mov~edi,eax", "call~FOO", "test~eax,eax", "jns~FOO"]], [1, 0, 70, 0, 0, 2, 0, 1, 5, 14, 0.047550034506556246, ["cmp     eax, 41h ; 'A'", "jg      short loc_26A5"], ["cmp~eax,0", "jg~FOO"]], [1, 0, 70, 0, 0, 2, 0, 1, 4, 13, 0.058626639061421675, ["cmp     eax, 41h ; 'A'", "jz      loc_274A"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 70, 0, 1, 10, 0, 2, 1, 11, 0.29544513457556937, ["mov     rsi, [rbp+argv]; argv", "mov     eax, [rbp+argc]", "mov     r8d, 0; longind", "lea     rcx, long_options_6206; longopts", "lea     rdx, shortopts; \"benstuvAET\"", "mov     edi, eax; argc", "call    _getopt_long", "mov     [rbp+c], eax", "cmp     [rbp+c], 0FFFFFFFFh", "jnz     loc_266C"], ["mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~r8d,0", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~edi,eax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jnz~FOO"]], [11, 0, 70, 1, 6, 41, 1, 7, 0, 12, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "push    rbx", "sub     rsp, 118h", "mov     [rbp+argc], edi", "mov     [rbp+argv], rsi", "mov     rax, fs:28h", "mov     [rbp+var_38], rax", "xor     eax, eax", "call    _getpagesize", "cdqe", "mov     [rbp+page_size], rax", "mov     [rbp+ok], 1", "mov     [rbp+have_read_stdin], 0", "mov     [rbp+number], 0", "mov     [rbp+number_nonblank], 0", "mov     [rbp+squeeze_blank], 0", "mov     [rbp+show_ends], 0", "mov     [rbp+show_nonprinting], 0", "mov     [rbp+show_tabs], 0", "mov     [rbp+file_open_mode], 0", "mov     rax, [rbp+argv]", "mov     rax, [rax]", "mov     rdi, rax; argv0", "call    set_program_name", "lea     rsi, locale; locale", "mov     edi, 6; category", "call    _setlocale", "lea     rsi, dirname; \"/usr/local/share/locale\"", "lea     rdi, domainname; \"coreutils\"", "call    _bindtextdomain", "lea     rdi, domainname; \"coreutils\"", "call    _textdomain", "lea     rax, close_stdout", "mov     rdi, rax", "call    atexit", "jmp     loc_27D5"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "push~rbx", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "call~FOO", "cdqe~", "mov~[rbp+0],rax", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rax,<TAG>", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 70, 0, 0, 2, 0, 1, 6, 12, 0.03354037267080745, ["cmp     eax, 75h ; 'u'", "jz      loc_27D5"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 70, 0, 0, 3, 0, 1, 3, 12, 0.008074534161490683, ["mov     [rbp+number], 1", "mov     [rbp+number_nonblank], 1", "jmp     loc_27D5"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 70, 0, 0, 3, 0, 1, 7, 12, 0.013250517598343685, ["mov     [rbp+show_ends], 1", "mov     [rbp+show_nonprinting], 1", "jmp     loc_27D5"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 70, 0, 0, 2, 0, 1, 8, 12, 0.013664596273291925, ["mov     [rbp+number], 1", "jmp     loc_27D5"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 70, 0, 0, 2, 0, 1, 5, 12, 0.015631469979296066, ["mov     [rbp+squeeze_blank], 1", "jmp     loc_27D5"], ["mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 70, 0, 0, 3, 0, 1, 8, 12, 0.013250517598343685, ["mov     [rbp+show_tabs], 1", "mov     [rbp+show_nonprinting], 1", "jmp     loc_27D5"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 70, 0, 0, 2, 0, 1, 9, 12, 0.013664596273291925, ["mov     [rbp+show_nonprinting], 1", "jmp     loc_27D5"], ["mov~[rbp+0],0", "jmp~FOO"]], [3, 0, 70, 0, 0, 4, 0, 1, 5, 12, 0.015838509316770187, ["mov     [rbp+show_nonprinting], 1", "mov     [rbp+show_ends], 1", "mov     [rbp+show_tabs], 1", "jmp     short loc_27D5"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 70, 0, 0, 2, 0, 1, 7, 12, 0.02525879917184265, ["mov     [rbp+show_ends], 1", "jmp     short loc_27D5"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 70, 0, 0, 2, 0, 1, 8, 12, 0.013664596273291925, ["mov     [rbp+show_tabs], 1", "jmp     short loc_27D5"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 31, 0, 1, 6, 1, 2, 6, 6, 0.24803312629399585, ["mov     rax, cs:infile", "lea     rsi, asc_69E3; \"-\"", "mov     rdi, rax; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_29A0"], ["mov~rax,<TAG>", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 31, 0, 0, 3, 0, 1, 5, 7, 0.25838509316770186, ["mov     eax, [rbp+argind]", "cmp     eax, [rbp+argc]", "jge     short loc_2973"], ["mov~eax,[rbp+0]", "cmp~eax,[rbp+0]", "jge~FOO"]], [0, 0, 31, 1, 0, 7, 0, 0, 6, 7, 0.0, ["mov     eax, [rbp+argind]", "cdqe", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+argv]", "add     rax, rdx", "mov     rax, [rax]", "mov     cs:infile, rax"], ["mov~eax,[rbp+0]", "cdqe~", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "mov~<TAG>,rax"]], [1, 0, 70, 0, 0, 2, 0, 1, 6, 13, 0.01932367149758454, ["cmp     eax, 65h ; 'e'", "jz      short loc_2700"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 6, -1, 0.020979986197377502, ["cmp     eax, 0FFFFFF7Dh", "jz      loc_277D"], ["cmp~eax,0", "jz~FOO"]], [5, 0, 31, 0, 3, 16, 0, 4, 8, 4, 0.05217391304347826, ["mov     rax, cs:infile", "mov     rdx, rax; arg", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     rbx, rax", "call    ___errno_location", "mov     eax, [rax]", "mov     rcx, rbx", "lea     rdx, format; \"%s\"", "mov     esi, eax; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     [rbp+ok], 0", "jmp     loc_2E28"], ["mov~rax,<TAG>", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~eax,<TAG>", "mov~rcx,rbx", "lea~rdx,<TAG>", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 31, 0, 1, 10, 1, 1, 7, 5, 0.14627329192546584, ["mov     rax, cs:infile", "mov     edx, [rbp+file_open_mode]", "mov     esi, edx; oflag", "mov     rdi, rax; file", "mov     eax, 0", "call    _open", "mov     cs:input_desc, eax", "mov     eax, cs:input_desc", "test    eax, eax", "jns     short loc_2A16"], ["mov~rax,<TAG>", "mov~edx,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "mov~<TAG>,eax", "mov~eax,<TAG>", "test~eax,eax", "jns~FOO"]], [1, 0, 33, 0, 0, 4, 2, 1, 5, 9, 0.005797101449275362, ["movzx   eax, [rbp+squeeze_blank]", "xor     eax, 1", "test    al, al", "jz      short loc_2927"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 34, 0, 0, 4, 2, 1, 4, 9, 0.011180124223602485, ["movzx   eax, [rbp+show_ends]", "xor     eax, 1", "test    al, al", "jz      short loc_2927"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 31, 0, 0, 3, 0, 1, 10, 8, 0.03291925465838509, ["mov     rax, [rbp+stat_buf.st_dev]", "cmp     [rbp+out_dev], rax", "jnz     loc_2BA3"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 7, -1, 0.011663216011042097, ["cmp     eax, 0FFFFFF7Eh", "jz      loc_2773"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 31, 0, 0, 4, 2, 1, 10, 7, 0.07981366459627329, ["movzx   eax, [rbp+number]", "xor     eax, 1", "test    al, al", "jz      loc_2C88"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 31, 0, 0, 3, 0, 1, 11, 7, 0.02412008281573499, ["mov     rax, [rbp+stat_buf.st_ino]", "cmp     [rbp+out_ino], rax", "jnz     short loc_2BA3"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [2, 0, 31, 0, 1, 9, 0, 2, 12, 6, 0.017287784679089025, ["mov     eax, cs:input_desc", "mov     edx, 1; whence", "mov     esi, 0; offset", "mov     edi, eax; fd", "call    _lseek", "mov     rdx, rax", "mov     rax, [rbp+stat_buf.st_size]", "cmp     rdx, rax", "jge     short loc_2BA3"], ["mov~eax,<TAG>", "mov~edx,0", "mov~esi,0", "mov~edi,eax", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "cmp~rdx,rax", "jge~FOO"]], [1, 0, 2, 0, 0, 6, 2, 1, 11, 1, 0.02443064182194617, ["movzx   eax, [rbp+ok]", "xor     eax, 1", "movzx   eax, al", "mov     rcx, [rbp+var_38]", "xor     rcx, fs:28h", "jz      short loc_2EA3"], ["movzx~eax,[rbp+0]", "xor~eax,0", "movzx~eax,al", "mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 10, 2, 0.057971014492753624, ["cmp     [rbp+have_read_stdin], 0", "jz      short loc_2E82"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 4, 0, 1, 4, 1, 1, 11, 2, 0.011801242236024845, ["mov     edi, 0; fd", "call    _close", "test    eax, eax", "jns     short loc_2E82"], ["mov~edi,0", "call~FOO", "test~eax,eax", "jns~FOO"]], [2, 0, 3, 0, 3, 10, 0, 3, 12, 2, 0.0, ["lea     rdi, aClosingStandar; \"closing standard input\"", "call    _gettext", "mov     rbx, rax", "call    ___errno_location", "mov     eax, [rax]", "mov     rdx, rbx; format", "mov     esi, eax; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["lea~rdi,<TAG>", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~eax,<TAG>", "mov~rdx,rbx", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 70, 0, 0, 2, 0, 1, 7, 13, 0.010835058661145617, ["cmp     eax, 6Eh ; 'n'", "jz      short loc_2713"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 31, 0, 0, 3, 0, 1, 7, 7, 0.08519668737060042, ["mov     [rbp+have_read_stdin], 1", "mov     cs:input_desc, 0", "jmp     short loc_2A16"], ["mov~[rbp+0],0", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 8, -1, 0.0015182884748102137, ["jmp     loc_27CB"], ["jmp~FOO"]], [5, 0, 31, 0, 3, 15, 0, 3, 12, 4, 0.0, ["mov     rax, cs:infile", "mov     rdx, rax; arg", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     rbx, rax", "call    ___errno_location", "mov     eax, [rax]", "mov     rcx, rbx", "lea     rdx, format; \"%s\"", "mov     esi, eax; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     [rbp+ok], 0"], ["mov~rax,<TAG>", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~eax,<TAG>", "mov~rcx,rbx", "lea~rdx,<TAG>", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~[rbp+0],0"]], [0, 0, 31, 0, 1, 5, 1, 1, 11, 4, 0.011180124223602485, ["mov     eax, cs:input_desc", "mov     edi, eax; fd", "call    _close", "test    eax, eax", "jns     short loc_2E28"], ["mov~eax,<TAG>", "mov~edi,eax", "call~FOO", "test~eax,eax", "jns~FOO"]], [2, 0, 32, 0, 1, 3, 0, 1, 6, 9, 0.0, ["mov     esi, 0; mode", "mov     edi, 1; fd", "call    xset_binary_mode"], ["mov~esi,0", "mov~edi,0", "call~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 9, -1, 0.0, ["mov     edi, 1; status", "call    usage"], ["mov~edi,0", "call~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 8, -1, 0.0015182884748102137, ["jmp     loc_27CB"], ["jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 8, -1, 0.0017253278122843342, ["jmp     loc_27CB"], ["jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 9, -1, 0.0006211180124223603, ["jmp     loc_27CB"], ["jmp~FOO"]], [1, 0, 70, 0, 0, 2, 0, 1, 4, 13, 0.05897170462387853, ["cmp     eax, 73h ; 's'", "jz      short loc_271F"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 70, 0, 0, 2, 0, 1, 7, 13, 0.010628019323671497, ["cmp     eax, 54h ; 'T'", "jz      loc_276A"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 70, 0, 0, 2, 0, 1, 6, 13, 0.031124913733609382, ["cmp     eax, 45h ; 'E'", "jz      loc_2761"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 8, 0, 0, 12, 0, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [1, 0, 31, 0, 0, 4, 2, 1, 13, 7, 0.02215320910973085, ["movzx   eax, [rbp+show_tabs]", "xor     eax, 1", "test    al, al", "jz      loc_2C88"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 31, 0, 0, 4, 2, 1, 12, 7, 0.03291925465838509, ["movzx   eax, [rbp+show_nonprinting]", "xor     eax, 1", "test    al, al", "jz      loc_2C88"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 31, 0, 1, 3, 0, 1, 12, 5, 0.04358178053830228, ["mov     rax, [rbp+inbuf]", "mov     rdi, rax; ptr", "call    _free"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO"]], [0, 2, 31, 5, 6, 57, 2, 6, 11, 6, 0.039648033126293995, ["mov     rdx, [rbp+insize]", "mov     rax, [rbp+page_size]", "add     rax, rdx", "mov     rdi, rax; n", "call    xmalloc", "mov     [rbp+inbuf], rax", "mov     rax, [rbp+insize]", "lea     rdx, ds:0[rax*4]", "mov     rax, [rbp+outsize]", "add     rdx, rax", "mov     rax, [rbp+page_size]", "add     rax, rdx", "add     rax, 12h", "mov     rdi, rax; n", "call    xmalloc", "mov     [rbp+outbuf], rax", "movzx   r14d, [rbp+squeeze_blank]", "movzx   r13d, [rbp+show_ends]", "movzx   r12d, [rbp+number_nonblank]", "movzx   ebx, [rbp+number]", "movzx   eax, [rbp+show_tabs]", "mov     dword ptr [rbp+var_128], eax", "movzx   r15d, [rbp+show_nonprinting]", "mov     rdx, [rbp+page_size]", "mov     rax, [rbp+outbuf]", "mov     rsi, rdx; alignment", "mov     rdi, rax; ptr", "call    ptr_align", "mov     [rbp+var_138], rax", "mov     rdx, [rbp+page_size]", "mov     rax, [rbp+inbuf]", "mov     rsi, rdx; alignment", "mov     rdi, rax; ptr", "call    ptr_align", "mov     rdi, rax; inbuf", "mov     rdx, [rbp+outsize]", "mov     rax, [rbp+insize]", "push    r14; squeeze_blank", "push    r13; show_ends", "push    r12; number_nonblank", "push    rbx; number", "mov     r9d, dword ptr [rbp+var_128]; show_tabs", "mov     r8d, r15d; show_nonprinting", "mov     rcx, rdx; outsize", "mov     rdx, [rbp+var_138]; outbuf", "mov     rsi, rax; insize", "call    cat", "add     rsp, 20h", "movzx   edx, [rbp+ok]", "movzx   eax, al", "and     eax, edx", "test    eax, eax", "setnz   al", "mov     [rbp+ok], al", "mov     rax, [rbp+outbuf]", "mov     rdi, rax; ptr", "call    _free"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "add~rax,<STR>", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "movzx~r14d,[rbp+0]", "movzx~r13d,[rbp+0]", "movzx~r12d,[rbp+0]", "movzx~ebx,[rbp+0]", "movzx~eax,[rbp+0]", "mov~[word ptr [rbp+0],eax", "movzx~r15d,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~rdi,rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "push~r14", "push~r13", "push~r12", "push~rbx", "mov~r9d,[word ptr [rbp+0]", "mov~r8d,r15d", "mov~rcx,rdx", "mov~rdx,[rbp+0]", "mov~rsi,rax", "call~FOO", "add~rsp,<STR>", "movzx~edx,[rbp+0]", "movzx~eax,al", "and~eax,edx", "test~eax,eax", "setnz~al", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO"]], [6, 0, 31, 0, 3, 16, 0, 4, 13, 5, 0.010455486542443064, ["mov     rax, cs:infile", "mov     rdx, rax; arg", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     rbx, rax", "lea     rdi, aSInputFileIsOu; \"%s: input file is output file\"", "call    _gettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     [rbp+ok], 0", "jmp     contin"], ["mov~rax,<TAG>", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbx,rax", "lea~rdi,<TAG>", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 70, 0, 0, 2, 0, 1, 7, 13, 0.018219461697722567, ["cmp     eax, 75h ; 'u'", "jl      short loc_272B"], ["cmp~eax,0", "jl~FOO"]], [0, 0, 31, 0, 0, 4, 0, 0, 4, 8, 0.19254658385093168, ["lea     rax, asc_69E3; \"-\"", "mov     cs:infile, rax", "mov     eax, cs:optind@@GLIBC_2_2_5", "mov     [rbp+argind], eax"], ["lea~rax,<TAG>", "mov~<TAG>,rax", "mov~eax,<TAG>", "mov~[rbp+0],eax"]], [3, 1, 35, 1, 1, 34, 3, 2, 3, 9, 0.18840579710144928, ["push    [rbp+stat_buf.__glibc_reserved+10h]", "push    [rbp+stat_buf.__glibc_reserved+8]", "push    [rbp+stat_buf.__glibc_reserved]", "push    [rbp+stat_buf.st_ctim.tv_nsec]", "push    [rbp+stat_buf.st_ctim.tv_sec]", "push    [rbp+stat_buf.st_mtim.tv_nsec]", "push    [rbp+stat_buf.st_mtim.tv_sec]", "push    [rbp+stat_buf.st_atim.tv_nsec]", "push    [rbp+stat_buf.st_atim.tv_sec]", "push    [rbp+stat_buf.st_blocks]", "push    [rbp+stat_buf.st_blksize]", "push    [rbp+stat_buf.st_size]", "push    [rbp+stat_buf.st_rdev]", "push    qword ptr [rbp+stat_buf.st_gid]", "push    qword ptr [rbp+stat_buf.st_mode]", "push    [rbp+stat_buf.st_nlink]", "push    [rbp+stat_buf.st_ino]", "push    [rbp+stat_buf.st_dev]; sb", "call    io_blksize", "add     rsp, 90h", "mov     [rbp+outsize], rax", "mov     rax, [rbp+stat_buf.st_dev]", "mov     [rbp+out_dev], rax", "mov     rax, [rbp+stat_buf.st_ino]", "mov     [rbp+out_ino], rax", "mov     eax, [rbp+stat_buf.st_mode]", "and     eax, 0F000h", "cmp     eax, 8000h", "setz    al", "mov     [rbp+out_isreg], al", "movzx   eax, [rbp+number]", "xor     eax, 1", "test    al, al", "jz      short loc_2927"], ["push~[rbp+0]", "push~[rbp+0]", "push~[rbp+0]", "push~[rbp+0]", "push~[rbp+0]", "push~[rbp+0]", "push~[rbp+0]", "push~[rbp+0]", "push~[rbp+0]", "push~[rbp+0]", "push~[rbp+0]", "push~[rbp+0]", "push~[rbp+0]", "push~[word ptr [rbp+0]", "push~[word ptr [rbp+0]", "push~[rbp+0]", "push~[rbp+0]", "push~[rbp+0]", "call~FOO", "add~rsp,<STR>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "setz~al", "mov~[rbp+0],al", "movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 70, 0, 0, 2, 0, 1, 3, 14, 0.11283643892339544, ["cmp     eax, 62h ; 'b'", "jg      short loc_26BC"], ["cmp~eax,0", "jg~FOO"]], [1, 0, 31, 0, 0, 4, 2, 1, 11, 7, 0.043478260869565216, ["movzx   eax, [rbp+show_ends]", "xor     eax, 1", "test    al, al", "jz      loc_2C88"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 70, 0, 0, 2, 0, 1, 5, 13, 0.04810213940648723, ["cmp     eax, 73h ; 's'", "jg      short loc_26D5"], ["cmp~eax,0", "jg~FOO"]], [1, 0, 70, 0, 0, 2, 0, 1, 8, 13, 0.009730848861283644, ["cmp     eax, 76h ; 'v'", "jz      short loc_273E"], ["cmp~eax,0", "jz~FOO"]], [5, 0, 0, 2, 2, 15, 0, 2, 7, -1, 0.0, ["mov     rdx, cs:Version", "mov     rax, cs:stdout@@GLIBC_2_2_5", "sub     rsp, 8", "push    0", "lea     r9, aRichardMStallm; \"Richard M. Stallman\"", "lea     r8, aTorbjornGranlu; \"Torbjorn Granlund\"", "mov     rcx, rdx; version", "lea     rdx, package; \"GNU coreutils\"", "lea     rsi, command_name; \"cat\"", "mov     rdi, rax; stream", "mov     eax, 0", "call    version_etc", "add     rsp, 10h", "mov     edi, 0; status", "call    _exit"], ["mov~rdx,<TAG>", "mov~rax,<TAG>", "sub~rsp,0", "push~0", "lea~r9,<TAG>", "lea~r8,<TAG>", "mov~rcx,rdx", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "add~rsp,0", "mov~edi,0", "call~FOO"]], [0, 0, 31, 0, 1, 6, 1, 2, 10, 4, 0.09130434782608696, ["mov     rax, cs:infile", "lea     rsi, asc_69E3; \"-\"", "mov     rdi, rax; s1", "call    _strcmp", "test    eax, eax", "jz      short loc_2E28"], ["mov~rax,<TAG>", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 31, 1, 0, 4, 0, 1, 9, 3, 0.1341614906832298, ["add     [rbp+argind], 1", "mov     eax, [rbp+argind]", "cmp     eax, [rbp+argc]", "jl      loc_2941"], ["add~[rbp+0],0", "mov~eax,[rbp+0]", "cmp~eax,[rbp+0]", "jl~FOO"]], [2, 0, 36, 0, 3, 10, 0, 3, 3, 10, 0.0, ["lea     rdi, aStandardOutput; \"standard output\"", "call    _gettext", "mov     rbx, rax", "call    ___errno_location", "mov     eax, [rax]", "mov     rdx, rbx; format", "mov     esi, eax; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["lea~rdi,<TAG>", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~eax,<TAG>", "mov~rdx,rbx", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 37, 0, 1, 6, 1, 1, 2, 10, 0.18385093167701863, ["lea     rax, [rbp+stat_buf]", "mov     rsi, rax; stat_buf", "mov     edi, 1; fildes", "call    fstat", "test    eax, eax", "jns     short loc_2852"], ["lea~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "test~eax,eax", "jns~FOO"]], [5, 0, 31, 0, 3, 16, 0, 4, 9, 5, 0.030020703933747412, ["mov     rax, cs:infile", "mov     rdx, rax; arg", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     rbx, rax", "call    ___errno_location", "mov     eax, [rax]", "mov     rcx, rbx", "lea     rdx, format; \"%s\"", "mov     esi, eax; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     [rbp+ok], 0", "jmp     contin"], ["mov~rax,<TAG>", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~eax,<TAG>", "mov~rcx,rbx", "lea~rdx,<TAG>", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 70, 0, 0, 3, 0, 1, 2, 13, 0.11614906832298137, ["mov     eax, [rbp+c]", "cmp     eax, 62h ; 'b'", "jz      short loc_26ED"], ["mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 8, -1, 0.0, ["mov     edi, 0; status", "call    usage"], ["mov~edi,0", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 12, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [52, 31, 105, 3, 71, 105, 0, 490, 0.04825, 21, 14], "succs": [[52], [0, 53], [27, 29], [2, 67], [48, 22], [4, 15], [66, 68], [6], [6, 55], [6], [6], [6], [6], [6], [6], [6], [6], [6], [24, 37], [18, 20], [18], [10, 36], [28, 62], [64], [3, 23], [56, 41], [56, 25], [29, 30], [69, 38], [59, 53], [29, 31], [29, 54], [49, 70], [32, 34], [32, 35], [32], [11, 44], [3], [42], [64], [64, 39], [56], [], [42], [42], [42], [60, 12], [17, 43], [16, 47], [], [1, 53], [50, 53], [63], [52], [63], [13, 61], [19], [56, 26], [5, 46], [51, 53], [8, 21], [45, 14], [], [40, 64], [33, 19], [57], [65, 57], [63], [9, 58], [], []], "fname": "main", "n_num": 71}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+file], rdi", "mov     rax, [rbp+file]", "mov     cs:file_name, rax", "nop", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~<TAG>,rax", "nop", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 8, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     eax, edi", "mov     [rbp+ignore], al", "movzx   eax, [rbp+ignore]", "mov     cs:ignore_EPIPE, al", "nop", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~eax,edi", "mov~[rbp+0],al", "movzx~eax,[rbp+0]", "mov~<TAG>,al", "nop", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 9, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_ignore_EPIPE", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 1, 3, 0, 1, 0, 0, 0.0, ["mov     eax, cs:exit_failure", "mov     edi, eax; status", "call    __exit"], ["mov~eax,<TAG>", "mov~edi,eax", "call~FOO"]], [2, 0, 1, 0, 3, 15, 0, 4, 3, -1, 0.027777777777777776, ["mov     rax, cs:file_name", "mov     rdi, rax; arg", "call    quotearg_colon", "mov     rbx, rax", "call    ___errno_location", "mov     eax, [rax]", "mov     rdx, [rbp+write_error]", "mov     r8, rdx", "mov     rcx, rbx", "lea     rdx, aSS; \"%s: %s\"", "mov     esi, eax; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     short loc_2F9B"], ["mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~eax,<TAG>", "mov~rdx,[rbp+0]", "mov~r8,rdx", "mov~rcx,rbx", "lea~rdx,<TAG>", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [2, 0, 1, 0, 2, 9, 0, 2, 3, -1, 0.027777777777777776, ["call    ___errno_location", "mov     eax, [rax]", "mov     rdx, [rbp+write_error]", "mov     rcx, rdx", "lea     rdx, off_6A92; format", "mov     esi, eax; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error"], ["call~FOO", "mov~eax,<TAG>", "mov~rdx,[rbp+0]", "mov~rcx,rdx", "lea~rdx,<TAG>", "mov~esi,eax", "mov~edi,0", "mov~eax,0", "call~FOO"]], [0, 0, 3, 0, 1, 6, 1, 2, 2, -1, 0.125, ["lea     rdi, aWriteError_0; \"write error\"", "call    _gettext", "mov     [rbp+write_error], rax", "mov     rax, cs:file_name", "test    rax, rax", "jz      short loc_2F75"], ["lea~rdi,<TAG>", "call~FOO", "mov~[rbp+0],rax", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 8, 0, 0, 4, 2, 1, 1, 3, 0.06944444444444445, ["movzx   eax, cs:ignore_EPIPE", "xor     eax, 1", "test    al, al", "jnz     short loc_2F1C"], ["movzx~eax,<TAG>", "xor~eax,0", "test~al,al", "jnz~FOO"]], [0, 1, 7, 0, 1, 4, 0, 2, 2, 2, 0.041666666666666664, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 20h ; ' '", "jz      loc_2FA8"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 9, 1, 1, 9, 1, 2, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 18h", "mov     rax, cs:stdout@@GLIBC_2_2_5", "mov     rdi, rax; stream", "call    close_stream", "test    eax, eax", "jz      loc_2FA8"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 2, 0, 0.0, ["nop", "add     rsp, 18h", "pop     rbx", "pop     rbp", "retn"], ["nop", "add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [0, 0, 2, 0, 1, 5, 1, 2, 1, 1, 0.08333333333333333, ["mov     rax, cs:stderr@@GLIBC_2_2_5", "mov     rdi, rax; stream", "call    close_stream", "test    eax, eax", "jz      short loc_2FC8"], ["mov~rax,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 1, 3, 0, 1, 2, -1, 0.0, ["mov     eax, cs:exit_failure", "mov     edi, eax; status", "call    __exit"], ["mov~eax,<TAG>", "mov~edi,eax", "call~FOO"]]], "func_feature": [11, 5, 17, 0, 10, 12, 0, 63, 0.0375, 8, 2], "succs": [[], [0], [0], [1, 2], [3, 5], [8, 3], [8, 4], [], [9, 7], []], "fname": "close_stdout", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 0, 0, 1, 1, 17, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+fd], edi", "mov     [rbp+offset], rsi", "mov     [rbp+len], rdx", "mov     [rbp+advice], ecx", "mov     ecx, [rbp+advice]; advise", "mov     rdx, [rbp+len]; len", "mov     rsi, [rbp+offset]; offset", "mov     eax, [rbp+fd]", "mov     edi, eax; fd", "call    _posix_fadvise", "mov     [rbp+__x], eax", "nop", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],ecx", "mov~ecx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "mov~[rbp+0],eax", "nop", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 17, 0.0, 0, 1], "succs": [[]], "fname": "fdadvise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["nop", "leave", "retn"], ["nop", "leave", "retn"]], [2, 0, 2, 1, 0, 7, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+fp], rdi", "mov     [rbp+advice], esi", "cmp     [rbp+fp], 0", "jz      short loc_3039"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 1, 0, 2, 9, 0, 2, 1, 0, 0.0, ["mov     rax, [rbp+fp]", "mov     rdi, rax; stream", "call    _fileno", "mov     edi, eax; fd", "mov     eax, [rbp+advice]", "mov     ecx, eax; advice", "mov     edx, 0; len", "mov     esi, 0; offset", "call    fdadvise"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~edi,eax", "mov~eax,[rbp+0]", "mov~ecx,eax", "mov~edx,0", "mov~esi,0", "call~FOO"]]], "func_feature": [2, 0, 3, 0, 3, 3, 0, 19, 0.0, 0, 1], "succs": [[], [0, 2], [0]], "fname": "fadvise", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 0, 8, 0, 0, 2, 0, 1, 0, 0, 0.1607142857142857, ["cmp     [rbp+n_rw], 0", "jnz     short loc_3095"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 8, 0, 1, 9, 0, 2, 2, 2, 0.21428571428571427, ["mov     rdx, [rbp+count]; count", "mov     rcx, [rbp+ptr]", "mov     eax, [rbp+fd]", "mov     rsi, rcx; buf", "mov     edi, eax; fd", "call    safe_write", "mov     [rbp+n_rw], rax", "cmp     [rbp+n_rw], 0FFFFFFFFFFFFFFFFh", "jz      short loc_30B6"], ["mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~eax,[rbp+0]", "mov~rsi,rcx", "mov~edi,eax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 8, 3, 0, 6, 0, 0, 4, 3, 0.10714285714285714, ["mov     rax, [rbp+n_rw]", "add     [rbp+total], rax", "mov     rax, [rbp+n_rw]", "add     [rbp+ptr], rax", "mov     rax, [rbp+n_rw]", "sub     [rbp+count], rax"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax", "mov~rax,[rbp+0]", "add~[rbp+0],rax", "mov~rax,[rbp+0]", "sub~[rbp+0],rax"]], [1, 0, 8, 0, 0, 2, 0, 1, 1, 2, 0.30357142857142855, ["cmp     [rbp+count], 0", "jnz     short loc_3061"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 8, 1, 0, 10, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+fd], edi", "mov     [rbp+buf], rsi", "mov     [rbp+count], rdx", "mov     [rbp+total], 0", "mov     rax, [rbp+buf]", "mov     [rbp+ptr], rax", "jmp     short loc_30AD"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 1, 0, 1, 3, 0, 2, 4, 1, 0.017857142857142856, ["call    ___errno_location", "mov     dword ptr [rax], 1Ch", "jmp     short loc_30B7"], ["call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 2, 1, 0.05357142857142857, ["jmp     short loc_30B7"], ["jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 3, 1, 0.017857142857142856, ["nop"], ["nop"]], [0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0.0, ["mov     rax, [rbp+total]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]]], "func_feature": [2, 0, 8, 0, 9, 11, 3, 37, 0.09722, 0, 4], "succs": [[2, 5], [0, 7], [3], [1, 6], [3], [8], [8], [8], []], "fname": "full_write", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+argv0]", "mov     cs:program_name, rax", "mov     rax, [rbp+argv0]", "mov     cs:program_invocation_name@@GLIBC_2_2_5, rax", "nop", "leave", "retn"], ["mov~rax,[rbp+0]", "mov~<TAG>,rax", "mov~rax,[rbp+0]", "mov~<TAG>,rax", "nop", "leave", "retn"]], [1, 0, 4, 1, 0, 7, 0, 1, 3, 0, 0.2222222222222222, ["mov     [rbp+base], rax", "mov     rdx, [rbp+base]", "mov     rax, [rbp+argv0]", "sub     rdx, rax", "mov     rax, rdx", "cmp     rax, 6", "jle     short loc_3192"], ["mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "sub~rdx,rax", "mov~rax,rdx", "cmp~rax,0", "jle~FOO"]], [2, 0, 3, 1, 1, 8, 1, 2, 4, 0, 0.1388888888888889, ["mov     rax, [rbp+base]", "sub     rax, 7", "mov     edx, 7; n", "lea     rsi, aLibs; \"/.libs/\"", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_3192"], ["mov~rax,[rbp+0]", "sub~rax,0", "mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 2, 0, 1, 9, 1, 2, 5, 0, 0.08333333333333333, ["mov     rax, [rbp+base]", "mov     [rbp+argv0], rax", "mov     rax, [rbp+base]", "mov     edx, 3; n", "lea     rsi, aLt; \"lt-\"", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_3192"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 1, 1, 0, 5, 0, 0, 6, 0, 0.0, ["mov     rax, [rbp+base]", "add     rax, 3", "mov     [rbp+argv0], rax", "mov     rax, [rbp+argv0]", "mov     cs:program_invocation_short_name@@GLIBC_2_2_5, rax"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~<TAG>,rax"]], [1, 1, 9, 1, 0, 6, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+argv0], rdi", "cmp     [rbp+argv0], 0", "jnz     short loc_30F5"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 7, 0, 1, 7, 0, 2, 1, 0, 0.09722222222222221, ["mov     rax, [rbp+argv0]", "mov     esi, 2Fh ; '/'; c", "mov     rdi, rax; s", "call    _strrchr", "mov     [rbp+slash], rax", "cmp     [rbp+slash], 0", "jz      short loc_311B"], ["mov~rax,[rbp+0]", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 0, 0, 2, 7, 0, 2, 1, 0, 0.0, ["mov     rax, cs:stderr@@GLIBC_2_2_5", "mov     rcx, rax; s", "mov     edx, 37h ; '7'; n", "mov     esi, 1; size", "lea     rdi, aANullArgv0WasP; \"A NULL argv[0] was passed through an ex\"...", "call    _fwrite", "call    _abort"], ["mov~rax,<TAG>", "mov~rcx,rax", "mov~edx,0", "mov~esi,0", "lea~rdi,<TAG>", "call~FOO", "call~FOO"]], [1, 0, 5, 1, 0, 3, 0, 1, 2, 0, 0.06944444444444445, ["mov     rax, [rbp+slash]", "add     rax, 1", "jmp     short loc_311F"], ["mov~rax,[rbp+0]", "add~rax,0", "jmp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 2, 0, 0.06944444444444445, ["mov     rax, [rbp+argv0]"], ["mov~rax,[rbp+0]"]]], "func_feature": [5, 2, 11, 0, 10, 13, 1, 60, 0.06806, 7, 5], "succs": [[], [0, 2], [0, 3], [0, 4], [0], [6, 7], [8, 9], [], [1], [1]], "fname": "set_program_name", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 0, 0, 0, 2, 11, 0, 2, 0, 0, 0.0, ["mov     esi, 38h ; '8'; s", "mov     rdi, rax; p", "call    xmemdup", "mov     [rbp+p], rax", "call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+e]", "mov     [rdx], eax", "mov     rax, [rbp+p]", "leave", "retn"], ["mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "mov~rax,[rbp+0]", "leave", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.08333333333333333, ["mov     rax, [rbp+o]", "jmp     short loc_31D5"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0.08333333333333333, ["lea     rax, default_quoting_options"], ["lea~rax,<TAG>"]], [1, 1, 3, 1, 1, 9, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+o], rdi", "call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+e], eax", "cmp     [rbp+o], 0", "jz      short loc_31CE"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jz~FOO"]]], "func_feature": [3, 0, 5, 0, 4, 4, 0, 23, 0.04167, 1, 1], "succs": [[], [0], [0], [1, 2]], "fname": "clone_quoting_options", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     eax, [rax]", "pop     rbp", "retn"], ["mov~eax,<TAG>", "pop~rbp", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.08333333333333333, ["mov     rax, [rbp+o]", "jmp     short loc_3215"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0.08333333333333333, ["lea     rax, default_quoting_options"], ["lea~rax,<TAG>"]], [1, 0, 3, 0, 0, 5, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+o], rdi", "cmp     [rbp+o], 0", "jz      short loc_320E"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "cmp~[rbp+0],0", "jz~FOO"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 11, 0.04167, 1, 0], "succs": [[], [0], [0], [1, 2]], "fname": "get_quoting_style", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 0, 3, 0, 0, 6, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+o], rdi", "mov     [rbp+s], esi", "cmp     [rbp+o], 0", "jz      short loc_3231"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["mov     edx, [rbp+s]", "mov     [rax], edx", "nop", "pop     rbp", "retn"], ["mov~edx,[rbp+0]", "mov~<TAG>,edx", "nop", "pop~rbp", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.08333333333333333, ["mov     rax, [rbp+o]", "jmp     short loc_3238"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.08333333333333333, ["lea     rax, default_quoting_options"], ["lea~rax,<TAG>"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 14, 0.04167, 1, 0], "succs": [[2, 3], [], [1], [1]], "fname": "set_quoting_style", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.08333333333333333, ["lea     rax, default_quoting_options"], ["lea~rax,<TAG>"]], [1, 0, 3, 0, 0, 10, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+o], rdi", "mov     eax, esi", "mov     [rbp+i], edx", "mov     [rbp+c], al", "movzx   eax, [rbp+c]", "mov     [rbp+uc], al", "cmp     [rbp+o], 0", "jz      short loc_3264"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~eax,esi", "mov~[rbp+0],edx", "mov~[rbp+0],al", "movzx~eax,[rbp+0]", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.08333333333333333, ["mov     rax, [rbp+o]", "jmp     short loc_326B"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [5, 0, 0, 3, 0, 34, 5, 0, 2, 0, 0.0, ["lea     rdx, [rax+8]", "movzx   eax, [rbp+uc]", "shr     al, 5", "movzx   eax, al", "shl     rax, 2", "add     rax, rdx", "mov     [rbp+p], rax", "movzx   eax, [rbp+uc]", "and     eax, 1Fh", "mov     [rbp+shift], eax", "mov     rax, [rbp+p]", "mov     edx, [rax]", "mov     eax, [rbp+shift]", "mov     ecx, eax", "shr     edx, cl", "mov     eax, edx", "and     eax, 1", "mov     [rbp+r], eax", "mov     rax, [rbp+p]", "mov     edx, [rax]", "mov     eax, [rbp+i]", "and     eax, 1", "xor     eax, [rbp+r]", "mov     esi, eax", "mov     eax, [rbp+shift]", "mov     ecx, eax", "shl     esi, cl", "mov     eax, esi", "xor     edx, eax", "mov     rax, [rbp+p]", "mov     [rax], edx", "mov     eax, [rbp+r]", "pop     rbp", "retn"], ["lea~rdx,[rax+0]", "movzx~eax,[rbp+0]", "shr~al,0", "movzx~eax,al", "shl~rax,0", "add~rax,rdx", "mov~[rbp+0],rax", "movzx~eax,[rbp+0]", "and~eax,0", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~edx,<TAG>", "mov~eax,[rbp+0]", "mov~ecx,eax", "shr~edx,cl", "mov~eax,edx", "and~eax,0", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~edx,<TAG>", "mov~eax,[rbp+0]", "and~eax,0", "xor~eax,[rbp+0]", "mov~esi,eax", "mov~eax,[rbp+0]", "mov~ecx,eax", "shl~esi,cl", "mov~eax,esi", "xor~edx,eax", "mov~rax,[rbp+0]", "mov~<TAG>,edx", "mov~eax,[rbp+0]", "pop~rbp", "retn"]]], "func_feature": [0, 5, 2, 0, 4, 4, 2, 47, 0.04167, 1, 3], "succs": [[3], [0, 2], [3], []], "fname": "set_char_quoting", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 0, 2, 0, 0, 6, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+o], rdi", "mov     [rbp+i], esi", "cmp     [rbp+o], 0", "jnz     short loc_32E7"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 0, 1, 0.0, ["lea     rax, default_quoting_options", "mov     [rbp+o], rax"], ["lea~rax,<TAG>", "mov~[rbp+0],rax"]], [0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+o]", "mov     eax, [rax+4]", "mov     [rbp+r], eax", "mov     rax, [rbp+o]", "mov     edx, [rbp+i]", "mov     [rax+4], edx", "mov     eax, [rbp+r]", "pop     rbp", "retn"], ["mov~rax,[rbp+0]", "mov~eax,[rax+0]", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~[rax+0],edx", "mov~eax,[rbp+0]", "pop~rbp", "retn"]]], "func_feature": [0, 0, 1, 0, 3, 3, 0, 17, 0.0, 1, 0], "succs": [[1, 2], [2], []], "fname": "set_quoting_flags", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 4, 0, 0, 2, 0, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "mov     [rbp+o], rax"], ["lea~rax,<TAG>", "mov~[rbp+0],rax"]], [1, 1, 5, 1, 0, 8, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+o], rdi", "mov     [rbp+left_quote], rsi", "mov     [rbp+right_quote], rdx", "cmp     [rbp+o], 0", "jnz     short loc_3326"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 3, 0, 0, 4, 0, 1, 1, 2, 0.30000000000000004, ["mov     rax, [rbp+o]", "mov     dword ptr [rax], 0Ah", "cmp     [rbp+left_quote], 0", "jz      short loc_333E"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 2, 1, 0.15000000000000002, ["cmp     [rbp+right_quote], 0", "jnz     short loc_3343"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 0, 9, 0, 0, 3, 0, 0.0, ["mov     rax, [rbp+o]", "mov     rdx, [rbp+left_quote]", "mov     [rax+28h], rdx", "mov     rax, [rbp+o]", "mov     rdx, [rbp+right_quote]", "mov     [rax+30h], rdx", "nop", "leave", "retn"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "nop", "leave", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [1, 0, 4, 0, 6, 7, 1, 26, 0.075, 1, 1], "succs": [[2], [0, 2], [3, 5], [4, 5], [], []], "fname": "set_custom_quoting", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[8, 1, 4, 1, 0, 17, 1, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+var_48], rdi", "mov     [rbp+style], esi", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     qword ptr [rbp+o.style], 0", "mov     qword ptr [rbp+o.quote_these_too], 0", "mov     qword ptr [rbp+o.quote_these_too+8], 0", "mov     qword ptr [rbp+o.quote_these_too+10h], 0", "mov     qword ptr [rbp+o.quote_these_too+18h], 0", "mov     [rbp+o.left_quote], 0", "mov     [rbp+o.right_quote], 0", "cmp     [rbp+style], 0Ah", "jnz     short loc_33BF"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[word ptr [rbp+0],0", "mov~[word ptr [rbp+0],0", "mov~[word ptr [rbp+0],0", "mov~[word ptr [rbp+0],0", "mov~[word ptr [rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 2, 0, 0, 21, 1, 1, 0, 1, 0.16666666666666666, ["mov     eax, [rbp+style]", "mov     [rbp+o.style], eax", "mov     rcx, [rbp+var_48]", "mov     rax, qword ptr [rbp+o.style]", "mov     rdx, qword ptr [rbp+o.quote_these_too]", "mov     [rcx], rax", "mov     [rcx+8], rdx", "mov     rax, qword ptr [rbp+o.quote_these_too+8]", "mov     rdx, qword ptr [rbp+o.quote_these_too+10h]", "mov     [rcx+10h], rax", "mov     [rcx+18h], rdx", "mov     rax, qword ptr [rbp+o.quote_these_too+18h]", "mov     rdx, [rbp+o.left_quote]", "mov     [rcx+20h], rax", "mov     [rcx+28h], rdx", "mov     rax, [rbp+o.right_quote]", "mov     [rcx+30h], rax", "mov     rax, [rbp+var_48]", "mov     rdx, [rbp+var_8]", "xor     rdx, fs:28h", "jz      short locret_3418"], ["mov~eax,[rbp+0]", "mov~[rbp+0],eax", "mov~rcx,[rbp+0]", "mov~rax,[word ptr [rbp+0]", "mov~rdx,[word ptr [rbp+0]", "mov~<TAG>,rax", "mov~[rcx+0],rdx", "mov~rax,[word ptr [rbp+0]", "mov~rdx,[word ptr [rbp+0]", "mov~[rcx+0],rax", "mov~[rcx+0],rdx", "mov~rax,[word ptr [rbp+0]", "mov~rdx,[rbp+0]", "mov~[rcx+0],rax", "mov~[rcx+0],rdx", "mov~rax,[rbp+0]", "mov~[rcx+0],rax", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "xor~rdx,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [2, 2, 4, 2, 5, 4, 3, 42, 0.03333, 1, 1], "succs": [[1, 2], [3, 4], [], [], []], "fname": "quoting_options_from_style", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.041666666666666664, ["cmp     [rbp+s], 9", "jnz     short loc_34CC"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 7, 0, 1, 6, 1, 2, 2, 3, 0.07692307692307693, ["mov     rax, [rbp+locale_code]", "lea     rsi, aGb18030; \"GB18030\"", "mov     rdi, rax; s1", "call    c_strcasecmp", "test    eax, eax", "jnz     short loc_34BD"], ["mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 1, 13, 1, 1, 12, 0, 2, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+msgid], rdi", "mov     [rbp+s], esi", "mov     rax, [rbp+msgid]", "mov     rdi, rax; msgid", "call    _gettext", "mov     [rbp+translation], rax", "mov     rax, [rbp+translation]", "cmp     rax, [rbp+msgid]", "jz      short loc_344C"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],esi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.00641025641025641, ["lea     rax, unk_6B72", "jmp     short locret_34D3"], ["lea~rax,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 4, 0, 1, 2, 2, 0.03205128205128205, ["mov     rax, [rbp+msgid]", "movzx   eax, byte ptr [rax]", "cmp     al, 60h ; '`'", "jnz     short loc_3480"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [1, 0, 3, 0, 0, 4, 0, 1, 3, 2, 0.041666666666666664, ["mov     rax, [rbp+msgid]", "movzx   eax, byte ptr [rax]", "cmp     al, 60h ; '`'", "jnz     short loc_34B4"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [0, 0, 11, 0, 2, 8, 1, 3, 1, 3, 0.0641025641025641, ["call    locale_charset", "mov     [rbp+locale_code], rax", "mov     rax, [rbp+locale_code]", "lea     rsi, aUtf8; \"UTF-8\"", "mov     rdi, rax; s1", "call    c_strcasecmp", "test    eax, eax", "jnz     short loc_3489"], ["call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.00641025641025641, ["mov     rax, [rbp+translation]", "jmp     locret_34D3"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, 1, 0.004807692307692308, ["lea     rax, asc_6B87; \"'\""], ["lea~rax,<TAG>"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.004807692307692308, ["lea     rax, unk_6B7E", "jmp     short locret_34D3"], ["lea~rax,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.00641025641025641, ["lea     rax, unk_6B6E", "jmp     short locret_34D3"], ["lea~rax,<TAG>", "jmp~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.004807692307692308, ["lea     rax, unk_6B82", "jmp     short locret_34D3"], ["lea~rax,<TAG>", "jmp~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.004807692307692308, ["lea     rax, unk_6B85", "jmp     short locret_34D3"], ["lea~rax,<TAG>", "jmp~FOO"]]], "func_feature": [4, 2, 16, 0, 14, 19, 2, 51, 0.02106, 8, 1], "succs": [[8, 13], [0, 5], [6, 7], [10], [11, 3], [9, 12], [1, 4], [10], [10], [10], [], [10], [10], [10]], "fname": "gettext_quote", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 7, 0, 0, 1, 0, 1, 0, 0, 0.0008185053380782919, ["jmp     force_outer_quoting_style"], ["jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 5, 0.003906964921199797, ["cmp     [rbp+elide_outer_quotes], 0", "jz      loc_40F8"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 18, 10, 0.015696492119979664, ["movzx   eax, [rbp+escaping]", "xor     eax, 1", "test    al, al", "jz      short loc_40A2"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 17, 10, 0.03453228266395526, ["cmp     [rbp+pending_shell_escape_end], 0", "jz      short loc_40A2"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 17, 8, 0.015899847483477374, ["mov     [rbp+j], 1", "jmp     short loc_3E5B"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 16, 9, 0.018912048805287237, ["cmp     [rbp+quoting_style], 2", "jnz     short loc_3E65"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 16, 15, 0.06621759023894255, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_4214"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [2, 0, 281, 0, 0, 3, 0, 1, 15, 16, 0.06278596847991866, ["mov     [rbp+escaping], 1", "cmp     [rbp+quoting_style], 2", "jnz     short loc_41F6"], ["mov~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 16, 16, 0.02188612099644128, ["movzx   eax, [rbp+pending_shell_escape_end]", "xor     eax, 1", "test    al, al", "jz      short loc_41F6"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [2, 0, 281, 1, 0, 2, 0, 0, 20, 16, 0.021085409252669038, ["add     [rbp+len], 1", "mov     [rbp+pending_shell_escape_end], 1"], ["add~[rbp+0],0", "mov~[rbp+0],0"]], [1, 0, 281, 0, 0, 2, 0, 1, 15, 12, 0.11680859176410777, ["cmp     [rbp+is_right_quote], 0", "jz      short loc_4035"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 7, 0.17635993899339095, ["cmp     [rbp+backslash_escapes], 0", "jz      loc_4008"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 15, 6, 0.05999618708693442, ["movzx   eax, [rbp+printable]", "xor     eax, 1", "test    al, al", "jz      loc_4008"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 281, 1, 0, 7, 0, 1, 15, 8, 0.04668276563294357, ["mov     rax, [rbp+i]", "lea     rdx, [rax+1]", "mov     rax, [rbp+arg]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "cmp     al, 3Fh ; '?'", "jnz     loc_3B18"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 14, 9, 0.04956786985256736, ["mov     rax, [rbp+i]", "add     rax, 2", "cmp     [rbp+argsize], rax", "jbe     loc_3B18"], ["mov~rax,[rbp+0]", "add~rax,0", "cmp~[rbp+0],rax", "jbe~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 18, 9, 0.037201321809862735, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_40C3"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [2, 0, 281, 1, 0, 2, 0, 0, 21, 10, 0.014107778342653787, ["add     [rbp+len], 1", "mov     [rbp+pending_shell_escape_end], 0"], ["add~[rbp+0],0", "mov~[rbp+0],0"]], [1, 0, 281, 1, 0, 4, 0, 0, 17, 15, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 5Ch ; '\\'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [2, 0, 281, 0, 0, 5, 0, 1, 4, 11, 0.017602948652770716, ["mov     [rbp+backslash_escapes], 1", "lea     rax, unk_6B85", "mov     [rbp+quote_string], rax", "mov     [rbp+quote_string_len], 1", "jmp     loc_3744"], ["mov~[rbp+0],0", "lea~rax,<TAG>", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 3, 12, 0.016077783426537873, ["movzx   eax, [rbp+elide_outer_quotes]; jumptable 00000000000035BD case 5", "xor     eax, 1", "test    al, al", "jz      short loc_35FB"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 281, 1, 0, 1, 0, 0, 5, 12, 0.007079308591764108, ["add     [rbp+len], 1"], ["add~[rbp+0],0"]], [3, 0, 281, 0, 0, 4, 0, 1, 11, 6, 0.040409252669039136, ["mov     [rbp+encountered_single_quote], 1; jumptable 0000000000003839 case 39", "mov     [rbp+c_and_shell_quote_compat], 1", "cmp     [rbp+quoting_style], 2", "jnz     loc_40FB"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 281, 1, 0, 8, 0, 1, 10, 7, 0.36952211489578035, ["mov     eax, eax", "lea     rdx, ds:0[rax*4]", "lea     rax, off_6BB8", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_6BB8", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,eax", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [0, 0, 3, 0, 0, 2, 0, 1, 12, 2, 0.0029740721911540417, ["mov     rax, [rbp+len]", "jmp     loc_44A1"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 5, 0, 0, 3, 0, 0, 11, 3, 0.009456024402643618, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_4414"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 4, 1, 0, 4, 0, 0, 12, 3, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 0"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 281, 0, 0, 3, 0, 0, 16, 13, 0.006316725978647687, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_402C"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 15, 12, 0.018848500254194205, ["mov     [rbp+printable], 0", "jmp     short loc_3DB6"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 11, 0.05591001525165226, ["cmp     [rbp+bytes], 0FFFFFFFFFFFFFFFEh", "jnz     short loc_3DEF"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 281, 0, 0, 2, 0, 1, 13, 14, 0.015391459074733096, ["nop", "jmp     short store_c"], ["nop", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 5, 0.01848500254194204, ["cmp     [rbp+elide_outer_quotes], 0", "jz      loc_421B"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 16, 4, 0.0006227758007117438, ["nop", "jmp     short force_outer_quoting_style"], ["nop", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 15, 5, 0.006875953228266395, ["cmp     [rbp+elide_outer_quotes], 0", "jnz     loc_441D"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 281, 0, 0, 3, 0, 1, 3, 11, 0.020939247585155057, ["mov     [rbp+backslash_escapes], 1; jumptable 00000000000035BD case 7", "mov     [rbp+elide_outer_quotes], 0", "jmp     loc_3744"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 281, 1, 0, 8, 0, 1, 2, 12, 0.1197508896797153, ["mov     eax, [rbp+quoting_style]", "lea     rdx, ds:0[rax*4]", "lea     rax, off_6B8C", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_6B8C", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,[rbp+0]", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [0, 0, 281, 0, 0, 1, 0, 0, 15, 14, 0.3029422979156075, ["nop"], ["nop"]], [1, 0, 281, 0, 0, 4, 2, 1, 14, 7, 0.33018132519911875, ["movzx   eax, [rbp+is_right_quote]", "xor     eax, 1", "test    al, al", "jnz     loc_4221"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jnz~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 15, 13, 0.015696492119979664, ["movzx   eax, [rbp+escaping]", "xor     eax, 1", "test    al, al", "jz      short loc_427D"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 13, 0.5487925775292323, ["cmp     [rbp+pending_shell_escape_end], 0", "jz      short loc_427D"], ["cmp~[rbp+0],0", "jz~FOO"]], [3, 0, 281, 2, 0, 6, 1, 1, 21, 12, 0.05510930350788002, ["add     [rbp+len], 1", "movzx   eax, [rbp+c]", "and     eax, 7", "add     eax, 30h ; '0'", "mov     [rbp+c], al", "jmp     short loc_4035"], ["add~[rbp+0],0", "movzx~eax,[rbp+0]", "and~eax,0", "add~eax,0", "mov~[rbp+0],al", "jmp~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 13, 0.0543467208947636, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_3FF4"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [2, 0, 281, 1, 0, 9, 1, 0, 21, 13, 0.0, ["movzx   eax, [rbp+c]", "shr     al, 3", "and     eax, 7", "lea     ecx, [rax+30h]", "mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     edx, ecx", "mov     [rax], dl"], ["movzx~eax,[rbp+0]", "shr~al,0", "and~eax,0", "lea~ecx,[rax+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~edx,ecx", "mov~<TAG>,dl"]], [0, 0, 281, 0, 0, 2, 0, 1, 17, 14, 0.1396733604473818, ["nop", "jmp     store_c"], ["nop", "jmp~FOO"]], [1, 0, 281, 1, 0, 2, 0, 1, 17, 14, 0.06698017285205897, ["add     [rbp+len], 1", "jmp     short store_c"], ["add~[rbp+0],0", "jmp~FOO"]], [0, 0, 281, 0, 0, 2, 0, 1, 15, 14, 0.009189120488052873, ["nop", "jmp     short store_c"], ["nop", "jmp~FOO"]], [1, 0, 281, 1, 0, 1, 0, 0, 18, 12, 1.2709710218607015e-05, ["add     [rbp+m], 1"], ["add~[rbp+0],0"]], [0, 0, 281, 2, 0, 8, 1, 1, 17, 12, 0.0063294356888662934, ["mov     rdx, [rbp+i]", "mov     rax, [rbp+m]", "add     rdx, rax", "mov     rax, [rbp+arg]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_3DB1"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 17, 13, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 5Ch ; '\\'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 7, 0, 0, 2, 0, 1, 13, 4, 0.0002846975088967971, ["nop", "jmp     short force_outer_quoting_style"], ["nop", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 5, 0.03444839857651245, ["cmp     [rbp+elide_outer_quotes], 0", "jnz     loc_4429"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 3, 13, 0.024885612608032535, ["cmp     [rbp+quoting_style], 0Ah; jumptable 00000000000035BD cases 8-10", "jz      short loc_3663"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 13, 15, 0.031354855109303505, ["cmp     [rbp+buffersize], 0", "jz      short loc_3C4C"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 281, 4, 0, 12, 0, 1, 19, 6, 0.010015251652262329, ["mov     rdx, [rbp+i]", "mov     rax, [rbp+m]", "add     rdx, rax", "mov     rax, [rbp+j]", "add     rdx, rax", "mov     rax, [rbp+arg]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "sub     eax, 5Bh ; '['; switch 34 cases", "cmp     eax, 21h ; '!'", "ja      short loc_3E55; jumptable 0000000000003E53 default case"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "movsx~eax,al", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 18, 7, 0.026715810879511945, ["mov     rax, [rbp+j]", "cmp     rax, [rbp+bytes]", "jb      short loc_3E08"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jb~FOO"]], [2, 0, 281, 2, 0, 9, 0, 1, 16, 7, 0.04378495170310117, ["mov     rax, [rbp+i]", "lea     rdx, [rax+2]", "mov     rax, [rbp+arg]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "movsx   eax, al", "sub     eax, 21h ; '!'; switch 30 cases", "cmp     eax, 1Dh", "ja      loc_3B0F; jumptable 0000000000003A58 default case"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "movsx~eax,al", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 15, 4, 0.006183274021352313, ["nop", "jmp     short force_outer_quoting_style"], ["nop", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 5, 0.07177808845958311, ["cmp     [rbp+elide_outer_quotes], 0", "jnz     loc_4432"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 15, 0.0031647178444331467, ["cmp     [rbp+orig_buffersize], 0", "jnz     short loc_3C4C"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 11, 4, 0.00376842907981698, ["nop"], ["nop"]], [1, 0, 281, 0, 0, 2, 0, 1, 10, 5, 0.006856888662938485, ["cmp     [rbp+elide_outer_quotes], 0", "jnz     loc_4435"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 1, 0, 8, 0, 1, 9, 8, 0.5461616675139807, ["mov     rdx, [rbp+arg]", "mov     rax, [rbp+i]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "mov     [rbp+c], al", "movzx   eax, [rbp+c]", "cmp     eax, 7Eh ; '~'; switch 127 cases", "ja      loc_3CC7; jumptable 0000000000003839 default case"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "mov~[rbp+0],al", "movzx~eax,[rbp+0]", "cmp~eax,0", "ja~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 12, 3, 0.017329689883070664, ["cmp     [rbp+quoting_style], 2", "jnz     short loc_444F"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 13, 4, 0.00028469750889679714, ["jmp     force_outer_quoting_style"], ["jmp~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 13, 4, 0.00028469750889679714, ["jmp     force_outer_quoting_style"], ["jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 13, 4, 0.0002846975088967971, ["nop", "jmp     short force_outer_quoting_style"], ["nop", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 19, 4, 0.0006227758007117438, ["nop", "jmp     short force_outer_quoting_style"], ["nop", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 14, 4, 0.000800711743772242, ["nop", "jmp     short force_outer_quoting_style"], ["nop", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 21, 4, 0.0007117437722419928, ["nop; jumptable 0000000000003E53 cases 91,92,94,96,124", "jmp     short force_outer_quoting_style"], ["nop", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 17, 4, 0.0049377224199288255, ["nop", "jmp     short force_outer_quoting_style"], ["nop", "jmp~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 16, 15, 0.012582613116420945, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_4251"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 3, 0, 1, 11, 6, 0.07682257244534825, ["mov     eax, [rbp+quoting_style]; jumptable 0000000000003839 case 63", "cmp     eax, 2", "jz      short loc_39C1"], ["mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 281, 0, 0, 3, 0, 0, 15, 15, 0.0, ["mov     rax, [rbp+buffersize]", "mov     [rbp+orig_buffersize], rax", "mov     [rbp+buffersize], 0"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~[rbp+0],0"]], [1, 0, 5, 0, 0, 2, 0, 1, 13, 3, 0.003355363497712252, ["cmp     [rbp+backslash_escapes], 0", "jz      short loc_444F"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 10, 4, 0.0313421453990849, ["cmp     [rbp+quote_string], 0", "jz      short loc_43F6"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 11, 0, 0, 4, 2, 1, 11, 4, 0.01601423487544484, ["movzx   eax, [rbp+elide_outer_quotes]", "xor     eax, 1", "test    al, al", "jz      short loc_43F6"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 10, 0, 0, 4, 1, 1, 13, 4, 0.010027961362480934, ["mov     rax, [rbp+quote_string]", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_43BD"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 14, 3, 0.0, ["mov     [rbp+quoting_style], 4"], ["mov~[rbp+0],0"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 5, 0.06716319267920692, ["cmp     [rbp+elide_outer_quotes], 0", "jnz     loc_4420"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 6, 0.09025673614641587, ["cmp     [rbp+backslash_escapes], 0; jumptable 0000000000003839 case 0", "jz      loc_3996"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 16, 11, 0.1770017793594306, ["mov     rax, [rbp+i]", "add     rax, 1", "cmp     [rbp+ilim], rax", "jbe     loc_40E6"], ["mov~rax,[rbp+0]", "add~rax,0", "cmp~[rbp+0],rax", "jbe~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 17, 15, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 281, 1, 0, 8, 0, 1, 20, 5, 0.0038002033553634976, ["mov     eax, eax", "lea     rdx, ds:0[rax*4]", "lea     rax, off_6E2C", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_6E2C", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,eax", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 281, 1, 0, 2, 0, 0, 20, 8, 0.006875953228266395, ["nop; jumptable 0000000000003E53 default case", "add     [rbp+j], 1"], ["nop", "add~[rbp+0],0"]], [0, 0, 281, 0, 0, 3, 0, 0, 14, 14, 0.032498729028978136, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_3C6A"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 281, 1, 0, 8, 0, 1, 17, 6, 0.03468479918657855, ["mov     eax, eax", "lea     rdx, ds:0[rax*4]", "lea     rax, off_6DB4", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_6DB4", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,eax", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [2, 0, 281, 0, 0, 3, 0, 1, 13, 14, 0.06406964921199797, ["mov     [rbp+escaping], 1", "cmp     [rbp+quoting_style], 2", "jnz     short loc_38D4"], ["mov~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 281, 0, 2, 10, 0, 2, 4, 13, 0.0, ["mov     eax, [rbp+quoting_style]", "mov     esi, eax; s", "lea     rdi, asc_6B89; \"`\"", "call    gettext_quote", "mov     [rbp+left_quote], rax", "mov     eax, [rbp+quoting_style]", "mov     esi, eax; s", "lea     rdi, asc_6B87; \"'\"", "call    gettext_quote", "mov     [rbp+right_quote], rax"], ["mov~eax,[rbp+0]", "mov~esi,eax", "lea~rdi,<TAG>", "call~FOO", "mov~[rbp+0],rax", "mov~eax,[rbp+0]", "mov~esi,eax", "lea~rdi,<TAG>", "call~FOO", "mov~[rbp+0],rax"]], [0, 0, 0, 0, 0, 3, 0, 0, 14, 0, 0.0, ["mov     rbx, [rbp+var_8]", "leave", "retn"], ["mov~rbx,[rbp+0]", "leave", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 13, 1, 0.0070665988815455, ["mov     rbx, [rbp+var_18]", "xor     rbx, fs:28h", "jz      short loc_44B5"], ["mov~rbx,[rbp+0]", "xor~rbx,<TAG>", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 18, 5, 0.03173614641586172, ["cmp     [rbp+elide_outer_quotes], 0; jumptable 0000000000003A58 cases 33,39-41,45,47,60-62", "jnz     loc_4423"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 17, 14, 0.013345195729537365, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_4274"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 281, 1, 0, 5, 0, 0, 16, 12, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rdx, rax", "movzx   eax, [rbp+c]", "mov     [rdx], al"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "movzx~eax,[rbp+0]", "mov~<TAG>,al"]], [0, 0, 281, 0, 0, 3, 0, 0, 15, 12, 0.5514616166751398, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_429E"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 14, 14, 0.02188612099644128, ["movzx   eax, [rbp+pending_shell_escape_end]", "xor     eax, 1", "test    al, al", "jz      short loc_38D4"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 15, 14, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 0, 0, 4, 2, 1, 4, 12, 0.025648195221148955, ["movzx   eax, [rbp+elide_outer_quotes]", "xor     eax, 1", "test    al, al", "jz      short loc_36B4"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [4, 0, 281, 0, 0, 5, 0, 1, 8, 9, 0.5457803762074225, ["mov     [rbp+is_right_quote], 0", "mov     [rbp+escaping], 0", "mov     [rbp+c_and_shell_quote_compat], 0", "cmp     [rbp+backslash_escapes], 0", "jz      loc_37F7"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 9, 9, 0.031113370615149974, ["cmp     [rbp+quoting_style], 2", "jz      loc_37F7"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 10, 9, 0.02806304016268429, ["cmp     [rbp+quote_string_len], 0", "jz      short loc_37F7"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 281, 0, 0, 2, 0, 0, 13, 7, 0.02652516522623284, ["cmp     rax, rbx", "jb      short loc_37F7"], ["cmp~rax,rbx", "jb~FOO"]], [0, 0, 281, 0, 1, 10, 1, 2, 14, 6, 0.00992628368073208, ["mov     rdx, [rbp+arg]", "mov     rax, [rbp+i]", "lea     rcx, [rdx+rax]", "mov     rdx, [rbp+quote_string_len]; n", "mov     rax, [rbp+quote_string]", "mov     rsi, rax; s2", "mov     rdi, rcx; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_37F7"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rcx,<TAG>", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,rcx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 281, 0, 0, 1, 0, 0, 16, 9, 0.0034443314692425013, ["mov     [rbp+is_right_quote], 1"], ["mov~[rbp+0],0"]], [1, 0, 281, 0, 0, 2, 0, 1, 15, 10, 0.034265378749364514, ["cmp     [rbp+elide_outer_quotes], 0", "jz      short loc_3E65"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 281, 0, 1, 5, 1, 2, 16, 12, 0.033032536858159635, ["mov     eax, [rbp+w]", "mov     edi, eax; wc", "call    _iswprint", "test    eax, eax", "jnz     short loc_3E77"], ["mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 15, 17, 0.018797661413319774, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_3885"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 281, 0, 0, 2, 0, 1, 13, 10, 0.006596339603457041, ["nop", "jmp     loc_40FC"], ["nop", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 5, 0.009689883070665987, ["cmp     [rbp+elide_outer_quotes], 0", "jz      loc_3B12"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 281, 0, 0, 3, 0, 1, 5, 13, 0.012506354855109304, ["mov     rax, [rbp+left_quote]", "mov     [rbp+quote_string], rax", "jmp     short loc_36A9"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 15, 13, 0.03326131164209456, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_3C8D"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 5, 9, 0.7073843416370107, ["cmp     [rbp+argsize], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_42D9"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 4, 10, 0.13004575495678697, ["mov     [rbp+i], 0", "jmp     loc_42B7"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 1, 0, 1, 0, 0, 14, 10, 0.5733985765124555, ["add     [rbp+i], 1"], ["add~[rbp+0],0"]], [1, 0, 281, 1, 0, 4, 0, 0, 16, 17, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 1, 0, 4, 0, 0, 22, 17, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 1, 0, 4, 0, 0, 21, 17, 0.020322826639552618, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_3F6E"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 5, 0.11839095068632435, ["cmp     [rbp+orig_buffersize], 0", "jz      short loc_43A9"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 13, 5, 0.1183019827147941, ["cmp     [rbp+buffersize], 0", "jnz     short loc_43A9"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 7, 14, 0.006316725978647687, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_369F"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 281, 0, 0, 4, 1, 1, 6, 12, 0.023525673614641585, ["mov     rax, [rbp+quote_string]", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_367B"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [1, 0, 281, 1, 0, 8, 0, 0, 20, 14, 0.0, ["movzx   eax, [rbp+c]", "shr     al, 6", "lea     ecx, [rax+30h]", "mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     edx, ecx", "mov     [rax], dl"], ["movzx~eax,[rbp+0]", "shr~al,0", "lea~ecx,[rax+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~edx,ecx", "mov~<TAG>,dl"]], [1, 0, 281, 1, 0, 4, 0, 0, 19, 14, 0.053584138281647174, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_3FC3"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [2, 0, 281, 1, 0, 2, 0, 0, 18, 13, 0.014107778342653787, ["add     [rbp+len], 1", "mov     [rbp+pending_shell_escape_end], 0"], ["add~[rbp+0],0", "mov~[rbp+0],0"]], [1, 0, 281, 1, 0, 4, 0, 0, 16, 13, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 5Ch ; '\\'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 2, 0, 10, 0, 0, 19, 17, 0.02830452465683782, ["mov     rax, [rbp+i]", "lea     rdx, [rax+2]", "mov     rax, [rbp+arg]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "mov     [rbp+c], al", "add     [rbp+i], 2", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_3A9F"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "mov~[rbp+0],al", "add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 281, 1, 1, 7, 1, 2, 17, 11, 0.03379511947127605, ["mov     rax, [rbp+bytes]", "add     [rbp+m], rax", "lea     rax, [rbp+mbstate]", "mov     rdi, rax; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_3D41"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 281, 0, 0, 1, 0, 0, 17, 12, 0.0, ["mov     [rbp+printable], 0"], ["mov~[rbp+0],0"]], [2, 1, 3, 2, 1, 15, 0, 2, 13, 2, 9.532282663955262e-05, ["mov     edi, [rbp+flags]", "mov     rcx, [rbp+argsize]; argsize", "mov     rdx, [rbp+arg]; arg", "mov     rsi, [rbp+orig_buffersize]; buffersize", "mov     rax, [rbp+buffer]", "sub     rsp, 8", "push    [rbp+right_quote]; right_quote", "push    [rbp+left_quote]; left_quote", "push    [rbp+quote_these_too]; quote_these_too", "mov     r9d, edi; flags", "mov     r8d, 5; quoting_style", "mov     rdi, rax; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h", "jmp     loc_44A1"], ["mov~edi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "sub~rsp,0", "push~[rbp+0]", "push~[rbp+0]", "push~[rbp+0]", "mov~r9d,edi", "mov~r8d,0", "mov~rdi,rax", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [3, 1, 3, 2, 1, 17, 1, 1, 13, 2, 0.007416115912557193, ["mov     eax, [rbp+flags]", "and     eax, 0FFFFFFFDh", "mov     r8d, eax", "mov     edi, [rbp+quoting_style]", "mov     rcx, [rbp+argsize]; argsize", "mov     rdx, [rbp+arg]; arg", "mov     rsi, [rbp+buffersize]; buffersize", "mov     rax, [rbp+buffer]", "sub     rsp, 8", "push    [rbp+right_quote]; right_quote", "push    [rbp+left_quote]; left_quote", "push    0; quote_these_too", "mov     r9d, r8d; flags", "mov     r8d, edi; quoting_style", "mov     rdi, rax; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~eax,[rbp+0]", "and~eax,0", "mov~r8d,eax", "mov~edi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "sub~rsp,0", "push~[rbp+0]", "push~[rbp+0]", "push~0", "mov~r9d,r8d", "mov~r8d,edi", "mov~rdi,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 281, 0, 0, 1, 0, 1, 18, 10, 0.03216827656329436, ["jmp     short loc_3E99"], ["jmp~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 16, 16, 0.019560244026436198, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_38A8"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 281, 0, 0, 2, 0, 1, 13, 10, 0.00979918657854601, ["nop", "jmp     short loc_3E99"], ["nop", "jmp~FOO"]], [1, 0, 281, 3, 1, 20, 0, 2, 12, 11, 0.07458057956278596, ["mov     rdx, [rbp+i]", "mov     rax, [rbp+m]", "add     rdx, rax", "mov     rax, [rbp+argsize]", "sub     rax, rdx", "mov     rdi, rax", "mov     rdx, [rbp+i]", "mov     rax, [rbp+m]", "add     rdx, rax", "mov     rax, [rbp+arg]", "lea     rsi, [rdx+rax]; s", "lea     rdx, [rbp+mbstate]", "lea     rax, [rbp+w]", "mov     rcx, rdx; ps", "mov     rdx, rdi; n", "mov     rdi, rax; pwc", "call    rpl_mbrtowc", "mov     [rbp+bytes], rax", "cmp     [rbp+bytes], 0", "jz      loc_3E95"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "sub~rax,rdx", "mov~rdi,rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "lea~rsi,<TAG>", "lea~rdx,[rbp+0]", "lea~rax,[rbp+0]", "mov~rcx,rdx", "mov~rdx,rdi", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 13, 8, 0.3245721064226402, ["movzx   eax, [rbp+elide_outer_quotes]", "xor     eax, 1", "test    al, al", "jnz     short loc_4157"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jnz~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 12, 9, 0.32878749364514487, ["movzx   eax, [rbp+backslash_escapes]", "xor     eax, 1", "test    al, al", "jnz     short loc_4110"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 13, 9, 0.0031456532791052363, ["cmp     [rbp+quoting_style], 2", "jnz     short loc_411B"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 17, 10, 0.020754956786985256, ["nop"], ["nop"]], [0, 0, 281, 1, 0, 5, 0, 0, 16, 11, 0.022801220132180985, ["mov     rdx, [rbp+i]", "mov     rax, [rbp+m]", "add     rax, rdx", "cmp     [rbp+argsize], rax", "jbe     loc_3E98"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "cmp~[rbp+0],rax", "jbe~FOO"]], [0, 0, 281, 0, 0, 1, 0, 1, 18, 11, 0.0035205897305541434, ["jmp     loc_3E98"], ["jmp~FOO"]], [0, 0, 281, 0, 0, 3, 0, 1, 13, 6, 0.04288256227758007, ["movzx   eax, [rbp+esc]", "mov     [rbp+c], al", "jmp     store_escape"], ["movzx~eax,[rbp+0]", "mov~[rbp+0],al", "jmp~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 15, 6, 0.024955516014234874, ["nop"], ["nop"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 17, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 3Fh ; '?'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 281, 1, 0, 6, 0, 0, 8, 14, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rdx, rax", "mov     rax, [rbp+quote_string]", "movzx   eax, byte ptr [rax]", "mov     [rdx], al"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "mov~<TAG>,al"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 11, 0.013345195729537365, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_4099"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 21, 11, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [2, 0, 281, 2, 0, 2, 0, 0, 8, 13, 0.007079308591764108, ["add     [rbp+len], 1", "add     [rbp+quote_string], 1"], ["add~[rbp+0],0", "add~[rbp+0],0"]], [1, 0, 281, 1, 0, 4, 0, 0, 17, 16, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 24h ; '$'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 1, 0, 4, 0, 0, 18, 14, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 0, 0, 2, 0, 1, 13, 10, 0.04452846975088968, ["cmp     [rbp+backslash_escapes], 0", "jz      loc_40FC"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 4, 0, 1, 12, 9, 0.18070665988815454, ["movzx   eax, [rbp+printable]", "mov     [rbp+c_and_shell_quote_compat], al", "cmp     [rbp+m], 1", "ja      short loc_3EC0"], ["movzx~eax,[rbp+0]", "mov~[rbp+0],al", "cmp~[rbp+0],0", "ja~FOO"]], [2, 0, 281, 1, 0, 5, 2, 1, 16, 11, 0.5522241992882562, ["add     [rbp+len], 1", "movzx   eax, [rbp+c_and_shell_quote_compat]", "xor     eax, 1", "test    al, al", "jz      short loc_42B2"], ["add~[rbp+0],0", "movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 17, 12, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 1, 0, 4, 0, 0, 16, 12, 0.034023894255210976, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_3CB0"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 1, 0, 0, 17, 11, 0.0, ["mov     [rbp+all_c_and_shell_quote_compat], 0"], ["mov~[rbp+0],0"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 16, 0.029067107269954245, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_3AC2"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 14, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 10, 0, 0, 3, 0, 0, 14, 6, 0.006494661921708185, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_43E1"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 281, 0, 0, 2, 0, 1, 14, 10, 0.013408744280630401, ["nop", "jmp     short loc_40FC"], ["nop", "jmp~FOO"]], [0, 0, 281, 0, 0, 2, 1, 1, 13, 9, 0.013739196746314183, ["test    al, al", "jnz     loc_40F2"], ["test~al,al", "jnz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 17, 15, 0.020322826639552618, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_38CB"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [2, 0, 281, 1, 0, 3, 0, 1, 17, 11, 0.0347864768683274, ["add     [rbp+len], 1", "mov     [rbp+pending_shell_escape_end], 0", "jmp     loc_40FB"], ["add~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 14, 9, 0.0005147432638535841, ["movzx   eax, [rbp+printable]", "xor     eax, 1", "test    al, al", "jz      loc_40FC"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 21, 16, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 22h ; '\"'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 281, 1, 0, 5, 0, 0, 19, 9, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rdx, rax", "movzx   eax, [rbp+c]", "mov     [rdx], al"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "movzx~eax,[rbp+0]", "mov~<TAG>,al"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 10, 0.012874936451448906, ["mov     [rbp+c_and_shell_quote_compat], 1; jumptable 0000000000003839 cases 37,43-58,65-90,93,95,97-122", "jmp     loc_40FC"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 281, 1, 0, 4, 0, 0, 13, 8, 0.13445602440264362, ["mov     rdx, [rbp+i]", "mov     rax, [rbp+m]", "add     rax, rdx", "mov     [rbp+ilim], rax"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~[rbp+0],rax"]], [1, 0, 281, 1, 0, 4, 0, 0, 18, 15, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 0, 0, 2, 0, 1, 10, 11, 0.17469496695475342, ["cmp     [rbp+unibyte_locale], 0; jumptable 0000000000003839 default case", "jz      short loc_3CFF"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 281, 1, 0, 2, 0, 0, 18, 14, 0.021085409252669038, ["add     [rbp+len], 1", "mov     [rbp+pending_shell_escape_end], 1"], ["add~[rbp+0],0", "mov~[rbp+0],0"]], [1, 0, 281, 1, 0, 4, 0, 0, 21, 15, 0.029829689883070665, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_3AE5"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 1, 8, 0, 2, 5, 11, 0.02793594306049822, ["mov     [rbp+backslash_escapes], 1", "mov     rax, [rbp+right_quote]", "mov     [rbp+quote_string], rax", "mov     rax, [rbp+quote_string]", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+quote_string_len], rax", "jmp     short loc_3744"], ["mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 281, 0, 0, 1, 0, 0, 3, 15, 0.0, ["mov     [rbp+backslash_escapes], 1; jumptable 00000000000035BD case 3"], ["mov~[rbp+0],0"]], [1, 0, 281, 0, 0, 4, 0, 1, 15, 14, 0.11860701576004067, ["mov     rax, [rbp+orig_buffersize]", "mov     [rbp+buffersize], rax", "mov     [rbp+len], 0", "jmp     process_input"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 1, 0, 0, 3, 14, 0.003546009150991357, ["mov     [rbp+elide_outer_quotes], 1; jumptable 00000000000035BD case 1"], ["mov~[rbp+0],0"]], [0, 0, 281, 0, 0, 3, 0, 0, 14, 13, 0.06750127097102186, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_38F2"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [2, 0, 281, 3, 0, 8, 0, 1, 19, 8, 0.03796390442297915, ["add     [rbp+len], 1", "add     [rbp+i], 1", "mov     rdx, [rbp+arg]", "mov     rax, [rbp+i]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "mov     [rbp+c], al", "jmp     loc_3ECF"], ["add~[rbp+0],0", "add~[rbp+0],0", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "mov~[rbp+0],al", "jmp~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 22, 15, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 22h ; '\"'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 3, 0.1212061514997458, ["cmp     [rbp+all_c_and_shell_quote_compat], 0", "jz      short loc_4380"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 6, 8, 0.35229410269445854, ["mov     rax, [rbp+i]", "cmp     rax, [rbp+argsize]", "setnz   al"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "setnz~al"]], [1, 0, 281, 0, 0, 4, 2, 1, 3, 13, 0.01021860701576004, ["movzx   eax, [rbp+elide_outer_quotes]; jumptable 00000000000035BD case 4", "xor     eax, 1", "test    al, al", "jz      short loc_36EC; jumptable 00000000000035BD case 2"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 281, 0, 0, 1, 0, 0, 4, 13, 0.0, ["mov     [rbp+backslash_escapes], 1"], ["mov~[rbp+0],0"]], [0, 0, 281, 0, 0, 2, 1, 1, 7, 7, 0.7085282155566853, ["test    al, al", "jnz     loc_3751"], ["test~al,al", "jnz~FOO"]], [0, 0, 281, 1, 0, 7, 1, 1, 6, 8, 0.35229410269445854, ["mov     rdx, [rbp+arg]", "mov     rax, [rbp+i]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "test    al, al", "setnz   al", "jmp     short loc_42E7"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "test~al,al", "setnz~al", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 13, 5, 0.0038891713268937467, ["cmp     [rbp+elide_outer_quotes], 0", "jnz     loc_4426"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 16, 5, 0.05713650228774784, ["cmp     [rbp+elide_outer_quotes], 0", "jnz     loc_442F"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 281, 0, 0, 2, 0, 1, 13, 10, 0.07590238942552109, ["nop", "jmp     short loc_40FC"], ["nop", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 16, 11, 0.07169547534316217, ["mov     [rbp+c], 30h ; '0'", "jmp     loc_40EC"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 4, 2, 1, 12, 11, 0.020297407219115403, ["mov     eax, [rbp+flags]", "and     eax, 1", "test    eax, eax", "jz      loc_40EC"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 15, 13, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 5Ch ; '\\'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 281, 0, 0, 2, 0, 1, 13, 10, 0.020411794611082865, ["nop", "jmp     short loc_40FC"], ["nop", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 7, 0.06609049313675648, ["cmp     [rbp+backslash_escapes], 0", "jz      loc_40EF"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 8, 6, 0.1599517031011693, ["cmp     [rbp+len], 0", "jnz     short loc_4309"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 22, 14, 0.030592272496187085, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_3B08"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 281, 0, 0, 2, 0, 1, 12, 10, 0.003393492628368073, ["nop", "jmp     short loc_40FC"], ["nop", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 8, 0.0037747839349262834, ["cmp     [rbp+i], 0; jumptable 0000000000003839 cases 35,126", "jnz     loc_40F5"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 281, 0, 0, 1, 0, 1, 13, 11, 0.016853075749872902, ["jmp     loc_42B2"], ["jmp~FOO"]], [0, 0, 281, 0, 0, 2, 0, 1, 12, 10, 0.010294865277071682, ["nop", "jmp     short loc_40FC"], ["nop", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 6, 0.013540925266903914, ["cmp     [rbp+quoting_style], 2; jumptable 0000000000003839 cases 33,34,36,38,40-42,59-62,91,94,96,124", "jnz     loc_40F8"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 281, 2, 1, 13, 2, 2, 11, 10, 0.10008896797153025, ["mov     [rbp+m], 1", "call    ___ctype_b_loc", "mov     rax, [rax]", "movzx   edx, [rbp+c]", "add     rdx, rdx", "add     rax, rdx", "movzx   eax, word ptr [rax]", "movzx   eax, ax", "and     eax, 4000h", "test    eax, eax", "setnz   al", "mov     [rbp+printable], al", "jmp     loc_3E99"], ["mov~[rbp+0],0", "call~FOO", "mov~rax,<TAG>", "movzx~edx,[rbp+0]", "add~rdx,rdx", "add~rax,rdx", "movzx~eax,<TAG>", "movzx~eax,ax", "and~eax,0", "test~eax,eax", "setnz~al", "mov~[rbp+0],al", "jmp~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 12, 10, 0.04150991357397051, ["nop"], ["nop"]], [2, 0, 281, 0, 0, 3, 0, 1, 17, 16, 0.04938993390950686, ["mov     [rbp+escaping], 1", "cmp     [rbp+quoting_style], 2", "jnz     short loc_3F77"], ["mov~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 281, 1, 0, 3, 0, 1, 15, 12, 0.06826385358413828, ["add     [rbp+len], 1", "cmp     [rbp+quoting_style], 2", "jz      loc_398D"], ["add~[rbp+0],0", "cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 281, 0, 0, 5, 2, 1, 3, 12, 0.02648703609557702, ["mov     [rbp+quoting_style], 2; jumptable 00000000000035BD case 2", "movzx   eax, [rbp+elide_outer_quotes]", "xor     eax, 1", "test    al, al", "jz      short loc_3724"], ["mov~[rbp+0],0", "movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 9, 6, 0.009938993390950685, ["cmp     [rbp+quoting_style], 2", "jnz     short loc_4309"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 23, 14, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 3Fh ; '?'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 0, 0, 4, 2, 1, 18, 16, 0.02188612099644128, ["movzx   eax, [rbp+pending_shell_escape_end]", "xor     eax, 1", "test    al, al", "jz      short loc_3F77"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 4, 13, 0.006316725978647687, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_371F"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 1, 0, 2, 0, 1, 23, 13, 0.031354855109303505, ["add     [rbp+len], 1", "jmp     short loc_3B10"], ["add~[rbp+0],0", "jmp~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 17, 13, 0.009633960345704117, ["nop; jumptable 0000000000003A58 default case"], ["nop"]], [0, 0, 281, 0, 0, 1, 0, 1, 18, 12, 0.0449288256227758, ["jmp     short loc_3B18"], ["jmp~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 16, 12, 0.02188612099644128, ["mov     rax, [rbp+i]", "add     rax, 1", "cmp     [rbp+argsize], rax", "jbe     short loc_398D"], ["mov~rax,[rbp+0]", "add~rax,0", "cmp~[rbp+0],rax", "jbe~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 19, 19, 0.018797661413319774, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_3F28"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 14, 11, 0.058070665988815454, ["nop"], ["nop"]], [1, 0, 281, 0, 0, 4, 2, 1, 13, 10, 0.05540162684290798, ["mov     eax, [rbp+flags]", "and     eax, 4", "test    eax, eax", "jz      loc_3B18"], ["mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 281, 0, 0, 1, 0, 1, 14, 10, 0.06814946619217081, ["jmp     loc_40FC"], ["jmp~FOO"]], [0, 0, 281, 0, 0, 1, 0, 1, 13, 11, 0.0061387900355871884, ["jmp     loc_3B19"], ["jmp~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 5, 13, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 1, 0, 4, 0, 0, 19, 15, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 5Ch ; '\\'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 281, 0, 0, 3, 0, 0, 18, 15, 0.05282155566853076, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_3F95"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 1, 0, 1, 0, 0, 5, 12, 0.007079308591764108, ["add     [rbp+len], 1"], ["add~[rbp+0],0"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 8, 0.007412938485002542, ["mov     [rbp+esc], 61h ; 'a'; jumptable 0000000000003839 case 7", "jmp     short c_escape"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 8, 0.004971614980511778, ["cmp     [rbp+quote_these_too], 0", "jz      short loc_4157"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 19, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [2, 0, 281, 1, 0, 2, 0, 0, 17, 12, 0.007079308591764108, ["add     [rbp+len], 1", "mov     [rbp+is_right_quote], 0"], ["add~[rbp+0],0", "mov~[rbp+0],0"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 8, 0.007412938485002542, ["mov     [rbp+esc], 62h ; 'b'; jumptable 0000000000003839 case 8", "jmp     short c_escape"], ["mov~[rbp+0],0", "jmp~FOO"]], [5, 0, 281, 0, 1, 9, 0, 2, 11, 12, 0.07180986273512964, ["lea     rax, [rbp+mbstate]", "mov     edx, 8; n", "mov     esi, 0; c", "mov     rdi, rax; s", "call    _memset", "mov     [rbp+m], 0", "mov     [rbp+printable], 1", "cmp     [rbp+argsize], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_3D41"], ["lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],0", "mov~[rbp+0],0", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 1, 0, 7, 0, 1, 17, 12, 0.018797661413319774, ["mov     rax, [rbp+i]", "lea     rdx, [rax+1]", "mov     rax, [rbp+arg]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "cmp     al, 2Fh ; '/'", "jle     short loc_398D"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "cmp~al,0", "jle~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 8, 0.007412938485002542, ["mov     [rbp+esc], 66h ; 'f'; jumptable 0000000000003839 case 12", "jmp     short c_escape"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 4, 0.12095195729537365, ["cmp     [rbp+encountered_single_quote], 0", "jz      short loc_43A9"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 7, 0.004084053550245719, ["mov     [rbp+esc], 6Eh ; 'n'; jumptable 0000000000003839 case 10", "jmp     short c_and_shell_escape"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 0, 0, 4, 0, 1, 4, 11, 0.02801220132180986, ["lea     rax, asc_6B87; \"'\"", "mov     [rbp+quote_string], rax", "mov     [rbp+quote_string_len], 1", "jmp     short loc_3744"], ["lea~rax,<TAG>", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 18, 0.019560244026436198, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_3F4B"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 7, 0.004084053550245719, ["mov     [rbp+esc], 72h ; 'r'; jumptable 0000000000003839 case 13", "jmp     short c_and_shell_escape"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 10, 1, 0, 6, 0, 0, 15, 6, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rdx, rax", "mov     rax, [rbp+quote_string]", "movzx   eax, byte ptr [rax]", "mov     [rdx], al"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "movzx~eax,<TAG>", "mov~<TAG>,al"]], [1, 0, 281, 0, 0, 2, 0, 1, 3, 11, 0.020939247585155057, ["mov     [rbp+elide_outer_quotes], 0; jumptable 00000000000035BD case 0", "jmp     short loc_3744"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    _abort; jumptable 00000000000035BD default case"], ["call~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 1, 13, 0.12255973563802745, ["cmp     [rbp+quoting_style], 0Ah; switch 11 cases", "ja      loc_373F; jumptable 00000000000035BD default case"], ["cmp~[rbp+0],0", "ja~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 7, 0.004084053550245719, ["mov     [rbp+esc], 74h ; 't'; jumptable 0000000000003839 case 9", "jmp     short c_and_shell_escape"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 1, 0, 7, 0, 1, 18, 12, 0.015696492119979664, ["mov     rax, [rbp+i]", "lea     rdx, [rax+1]", "mov     rax, [rbp+arg]", "add     rax, rdx", "movzx   eax, byte ptr [rax]", "cmp     al, 39h ; '9'", "jg      short loc_398D"], ["mov~rax,[rbp+0]", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "movzx~eax,<TAG>", "cmp~al,0", "jg~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 8, 0.007412938485002542, ["mov     [rbp+esc], 76h ; 'v'; jumptable 0000000000003839 case 11", "jmp     short c_escape"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 21, 18, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 24h ; '$'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 281, 0, 0, 3, 0, 0, 19, 14, 0.012582613116420945, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_3965"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [3, 0, 281, 1, 0, 15, 3, 1, 15, 7, 0.00023301135400779526, ["movzx   eax, [rbp+c]", "shr     al, 5", "movzx   eax, al", "lea     rdx, ds:0[rax*4]", "mov     rax, [rbp+quote_these_too]", "add     rax, rdx", "mov     edx, [rax]", "movzx   eax, [rbp+c]", "and     eax, 1Fh", "mov     ecx, eax", "shr     edx, cl", "mov     eax, edx", "and     eax, 1", "test    eax, eax", "jnz     short loc_4166"], ["movzx~eax,[rbp+0]", "shr~al,0", "movzx~eax,al", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~edx,<TAG>", "movzx~eax,[rbp+0]", "and~eax,0", "mov~ecx,eax", "shr~edx,cl", "mov~eax,edx", "and~eax,0", "test~eax,eax", "jnz~FOO"]], [1, 0, 281, 0, 0, 4, 0, 1, 11, 6, 0.03424504321301474, ["movzx   eax, [rbp+c]; jumptable 0000000000003839 case 92", "mov     [rbp+esc], al", "cmp     [rbp+quoting_style], 2", "jnz     short loc_3B67"], ["movzx~eax,[rbp+0]", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 281, 0, 1, 4, 0, 1, 12, 12, 0.0, ["mov     rax, [rbp+arg]", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+argsize], rax"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 14, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 30h ; '0'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [2, 0, 10, 2, 0, 2, 0, 0, 15, 5, 0.00019064565327910524, ["add     [rbp+len], 1", "add     [rbp+quote_string], 1"], ["add~[rbp+0],0", "add~[rbp+0],0"]], [1, 0, 281, 0, 0, 4, 2, 1, 10, 5, 0.12071682765632943, ["movzx   eax, [rbp+elide_outer_quotes]", "xor     eax, 1", "test    al, al", "jz      loc_43A9"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 8, 0.012963904422979155, ["cmp     [rbp+backslash_escapes], 0", "jz      short loc_3B7E"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 13, 8, 0.021822572445348246, ["nop"], ["nop"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 6, 0.025050838840874428, ["cmp     [rbp+quoting_style], 2", "jnz     short loc_3B92"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 13, 8, 0.009367056431113371, ["cmp     [rbp+elide_outer_quotes], 0", "jz      short loc_3B7E"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 281, 1, 0, 2, 0, 0, 22, 16, 0.021085409252669038, ["add     [rbp+len], 1", "mov     [rbp+pending_shell_escape_end], 1"], ["add~[rbp+0],0", "mov~[rbp+0],0"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 13, 0.013345195729537365, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_3988"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 8, 0.009278088459583122, ["cmp     [rbp+quote_string_len], 0", "jnz     loc_421E"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 17, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 1, 0, 4, 0, 0, 19, 17, 0.020322826639552618, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_41ED"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 13, 7, 0.001741230299949161, ["nop"], ["nop"]], [1, 0, 281, 1, 0, 4, 0, 0, 20, 12, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 281, 0, 0, 3, 0, 0, 19, 12, 0.012582613116420945, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_4076"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 21, 13, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 30h ; '0'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [11, 0, 281, 1, 1, 36, 3, 1, 0, 14, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 0B8h", "mov     [rbp+buffer], rdi", "mov     [rbp+buffersize], rsi", "mov     [rbp+arg], rdx", "mov     [rbp+argsize], rcx", "mov     [rbp+quoting_style], r8d", "mov     [rbp+flags], r9d", "mov     rax, [rbp+arg_0]", "mov     [rbp+quote_these_too], rax", "mov     rax, [rbp+arg_8]", "mov     [rbp+left_quote], rax", "mov     rax, [rbp+arg_10]", "mov     [rbp+right_quote], rax", "mov     rax, fs:28h", "mov     [rbp+var_18], rax", "xor     eax, eax", "mov     [rbp+len], 0", "mov     [rbp+orig_buffersize], 0", "mov     [rbp+quote_string], 0", "mov     [rbp+quote_string_len], 0", "mov     [rbp+backslash_escapes], 0", "call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "setz    al", "mov     [rbp+unibyte_locale], al", "mov     eax, [rbp+flags]", "and     eax, 2", "test    eax, eax", "setnz   al", "mov     [rbp+elide_outer_quotes], al", "mov     [rbp+pending_shell_escape_end], 0", "mov     [rbp+encountered_single_quote], 0", "mov     [rbp+all_c_and_shell_quote_compat], 1"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8d", "mov~[rbp+0],r9d", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "call~FOO", "cmp~rax,0", "setz~al", "mov~[rbp+0],al", "mov~eax,[rbp+0]", "and~eax,0", "test~eax,eax", "setnz~al", "mov~[rbp+0],al", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0"]], [1, 0, 281, 1, 0, 1, 0, 0, 21, 12, 0.014107778342653787, ["add     [rbp+len], 1"], ["add~[rbp+0],0"]], [1, 0, 281, 0, 0, 5, 0, 1, 11, 9, 0.024999999999999998, ["mov     rdx, [rbp+i]", "mov     rax, [rbp+quote_string_len]", "lea     rbx, [rdx+rax]", "cmp     [rbp+argsize], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_37B7"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rbx,<TAG>", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 281, 0, 0, 3, 0, 0, 17, 19, 0.018797661413319774, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_41A7"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 0, 0, 2, 0, 0, 12, 9, 0.0031647178444331467, ["cmp     [rbp+quote_string_len], 1", "jbe     short loc_37B7"], ["cmp~[rbp+0],0", "jbe~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 13, 11, 0.06198525673614641, ["cmp     [rbp+bytes], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_3DA4"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 14, 10, 0.00327910523640061, ["mov     [rbp+printable], 0", "jmp     loc_3E99"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 18, 18, 0.019560244026436198, ["add     [rbp+len], 1", "mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_41CA"], ["add~[rbp+0],0", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 18, 19, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 27h ; '''"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [1, 0, 281, 0, 0, 2, 0, 1, 9, 5, 0.15413701067615657, ["cmp     [rbp+quoting_style], 2", "jnz     loc_43A9"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 0, 0, 2, 0, 1, 11, 11, 0.012595322826639553, ["cmp     [rbp+argsize], 0FFFFFFFFFFFFFFFFh; jumptable 0000000000003839 cases 123,125", "jnz     short loc_3BC8"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 5, 13, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 22h ; '\"'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [0, 0, 281, 0, 0, 3, 0, 0, 4, 13, 0.006316725978647687, ["mov     rax, [rbp+len]", "cmp     rax, [rbp+buffersize]", "jnb     short loc_35F6"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [0, 0, 281, 0, 1, 6, 0, 2, 13, 8, 0.001766649720386375, ["mov     rax, [rbp+arg]", "mov     rdi, rax; s", "call    _strlen", "mov     [rbp+argsize], rax", "mov     rax, [rbp+argsize]", "jmp     short loc_37BE"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 281, 0, 0, 1, 0, 0, 12, 8, 0.020818505338078292, ["mov     rax, [rbp+argsize]"], ["mov~rax,[rbp+0]"]], [1, 0, 281, 0, 0, 2, 0, 1, 12, 11, 0.06433655312658872, ["cmp     eax, 5", "jz      short loc_39D0"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 1, 12, 5, 0.012862226741230299, ["jmp     short loc_43EB"], ["jmp~FOO"]], [1, 0, 281, 1, 0, 6, 1, 1, 12, 10, 0.004899593289273005, ["mov     rax, [rbp+arg]", "add     rax, 1", "movzx   eax, byte ptr [rax]", "test    al, al", "setnz   al", "jmp     short loc_3BD3"], ["mov~rax,[rbp+0]", "add~rax,0", "movzx~eax,<TAG>", "test~al,al", "setnz~al", "jmp~FOO"]], [1, 0, 281, 1, 0, 4, 0, 0, 19, 18, 0.0, ["mov     rdx, [rbp+buffer]", "mov     rax, [rbp+len]", "add     rax, rdx", "mov     byte ptr [rax], 24h ; '$'"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~<TAG>,0"]], [2, 0, 281, 0, 0, 2, 0, 0, 3, 13, 0.0, ["mov     [rbp+quoting_style], 5; jumptable 00000000000035BD case 6", "mov     [rbp+elide_outer_quotes], 1"], ["mov~[rbp+0],0", "mov~[rbp+0],0"]], [1, 0, 281, 0, 0, 2, 0, 0, 12, 10, 0.004899593289273005, ["cmp     [rbp+argsize], 1", "setnz   al"], ["cmp~[rbp+0],0", "setnz~al"]], [1, 0, 281, 0, 0, 1, 0, 0, 11, 7, 0.0006990340620233858, ["mov     [rbp+c_and_shell_quote_compat], 1; jumptable 0000000000003839 case 32"], ["mov~[rbp+0],0"]]], "func_feature": [16, 60, 177, 2, 282, 444, 7, 994, 0.05056, 8, 114], "succs": [[61], [0, 195], [258, 15], [2, 15], [53], [4, 103], [17, 43], [8, 6], [6, 263], [6], [26, 79], [10, 12], [10, 183], [211, 54], [211, 13], [162, 174], [15], [43], [110], [272, 18], [18], [49, 198], [193, 226, 163, 228, 166, 70, 231, 196, 236, 270, 242, 238, 281, 219, 21, 78, 223], [88], [25, 23], [23], [222, 47], [136], [27, 102], [38], [29, 63], [61], [101, 31], [110], [33, 201, 170, 172, 50, 178, 19, 279, 233], [38], [35, 139], [92, 69], [92, 37], [79], [41, 39], [39], [38], [38], [38], [136], [137, 45], [222], [61], [48, 51], [86, 95], [57, 83], [81, 82], [52, 103], [84, 207], [61], [7, 55], [83, 71], [61], [58, 269], [166, 22], [72, 127], [61], [61], [61], [61], [61], [61], [61], [80, 90], [106, 275], [83], [76, 127], [24, 74], [24, 276], [24, 155], [127], [64, 85], [186, 77], [42, 3], [90], [82, 67], [53], [108, 94], [89, 207], [93, 173], [95], [], [154, 87], [65, 123], [121, 146], [149], [91, 149], [104, 173], [108], [169, 107], [97, 60], [98, 60], [60, 262], [100, 60], [32, 60], [60], [5, 103], [124, 125], [112, 129], [133], [105, 62], [118], [122, 151], [177, 181], [109], [109], [129], [251], [113, 251], [73, 171], [73, 115], [144, 141], [169, 117], [40], [40, 119], [92], [151], [153, 140], [128, 131], [124], [88], [88], [148], [145, 158], [148], [265, 130], [36, 220], [132, 134], [220, 132], [148], [46, 135], [135], [56], [56], [153], [144], [16, 143], [16], [118], [158], [121], [160, 133], [147, 164], [152, 111], [159], [150, 159], [111], [168, 161], [], [232, 245], [133], [193, 156], [165, 167], [198], [164, 133], [168], [174], [133], [11], [167], [224, 197], [173], [191, 175], [110], [172], [235], [178], [200, 187], [11], [191], [116, 126], [180], [201, 179], [201], [96, 190], [180], [248, 66], [68, 199], [133], [184], [184, 194], [200], [133], [138, 188], [202, 269], [203, 206], [133], [192, 281], [111], [133], [1, 195], [148], [133], [217, 204], [209, 185], [205, 229], [59, 269], [206], [217, 210], [218, 215], [208], [208], [211], [225, 185], [221, 230], [213], [211, 14], [133], [213], [218], [120], [216, 120], [229], [189], [241, 36], [230], [79], [189], [243, 131], [185, 237], [189], [176, 73], [249], [110], [114, 239], [249], [245], [110], [], [234, 34], [249], [240, 185], [189], [114], [252, 244], [139, 36], [30, 247], [131], [252], [75], [73, 227], [256, 250], [189], [248, 182], [256, 253], [217], [259, 261], [256, 44], [9], [9, 254], [249], [142], [257, 142], [261], [235], [185], [264, 274], [267, 268], [273, 274], [266, 28], [148], [278, 255], [267], [73, 246], [280, 277], [20], [20, 271], [99], [99], [212, 214], [75], [157], [255], [19], [157], [196]], "fname": "quotearg_buffer_restyled", "n_num": 282}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.08333333333333333, ["lea     rax, default_quoting_options"], ["lea~rax,<TAG>"]], [1, 1, 3, 1, 0, 10, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+buffer], rdi", "mov     [rbp+buffersize], rsi", "mov     [rbp+arg], rdx", "mov     [rbp+argsize], rcx", "mov     [rbp+o], r8", "cmp     [rbp+o], 0", "jz      short loc_44E4"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.08333333333333333, ["mov     rax, [rbp+o]", "jmp     short loc_44EB"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [1, 1, 0, 2, 3, 34, 0, 3, 2, 0, 0.0, ["mov     [rbp+p], rax", "call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+e], eax", "mov     rax, [rbp+p]", "mov     r8, [rax+30h]", "mov     rax, [rbp+p]", "mov     rdi, [rax+28h]", "mov     rax, [rbp+p]", "lea     r11, [rax+8]", "mov     rax, [rbp+p]", "mov     r9d, [rax+4]; flags", "mov     rax, [rbp+p]", "mov     r10d, [rax]", "mov     rcx, [rbp+argsize]; argsize", "mov     rdx, [rbp+arg]; arg", "mov     rsi, [rbp+buffersize]; buffersize", "mov     rax, [rbp+buffer]", "sub     rsp, 8", "push    r8; right_quote", "push    rdi; left_quote", "push    r11; quote_these_too", "mov     r8d, r10d; quoting_style", "mov     rdi, rax; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     [rbp+r], rax", "call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+e]", "mov     [rdx], eax", "mov     rax, [rbp+r]", "leave", "retn"], ["mov~[rbp+0],rax", "call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~r8,[rax+0]", "mov~rax,[rbp+0]", "mov~rdi,[rax+0]", "mov~rax,[rbp+0]", "lea~r11,[rax+0]", "mov~rax,[rbp+0]", "mov~r9d,[rax+0]", "mov~rax,[rbp+0]", "mov~r10d,<TAG>", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "sub~rsp,0", "push~r8", "push~rdi", "push~r11", "mov~r8d,r10d", "mov~rdi,rax", "call~FOO", "add~rsp,<STR>", "mov~[rbp+0],rax", "call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "mov~rax,[rbp+0]", "leave", "retn"]]], "func_feature": [3, 0, 5, 0, 4, 4, 0, 47, 0.04167, 1, 3], "succs": [[3], [0, 2], [3], []], "fname": "quotearg_buffer", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 1, 0, 1, 1, 15, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+arg], rdi", "mov     [rbp+argsize], rsi", "mov     [rbp+o], rdx", "mov     rdx, [rbp+o]", "mov     rsi, [rbp+argsize]; argsize", "mov     rax, [rbp+arg]", "mov     rcx, rdx; o", "mov     edx, 0; size", "mov     rdi, rax; arg", "call    quotearg_alloc_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~rcx,rdx", "mov~edx,0", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 15, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_alloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 1, 0, 0, 4, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+bufsize]", "lea     rdx, [rax-1]", "mov     rax, [rbp+size]", "mov     [rax], rdx"], ["mov~rax,[rbp+0]", "lea~rdx,[rax-1]+0]", "mov~rax,[rbp+0]", "mov~<TAG>,rdx"]], [7, 2, 2, 5, 5, 67, 1, 6, 2, 1, 0.30000000000000004, ["mov     [rbp+p], rax", "call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+e], eax", "mov     rax, [rbp+p]", "mov     edx, [rax+4]", "cmp     [rbp+size], 0", "setz    al", "movzx   eax, al", "or      eax, edx", "mov     [rbp+flags], eax", "mov     rax, [rbp+p]", "mov     rsi, [rax+30h]", "mov     rax, [rbp+p]", "mov     rcx, [rax+28h]", "mov     rax, [rbp+p]", "lea     r9, [rax+8]", "mov     rax, [rbp+p]", "mov     edi, [rax]", "mov     r8d, [rbp+flags]", "mov     rdx, [rbp+argsize]", "mov     rax, [rbp+arg]", "sub     rsp, 8", "push    rsi; right_quote", "push    rcx; left_quote", "push    r9; quote_these_too", "mov     r9d, r8d; flags", "mov     r8d, edi; quoting_style", "mov     rcx, rdx; argsize", "mov     rdx, rax; arg", "mov     esi, 0; buffersize", "mov     edi, 0; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h", "add     rax, 1", "mov     [rbp+bufsize], rax", "mov     rax, [rbp+bufsize]", "mov     rdi, rax; n", "call    xcharalloc", "mov     [rbp+buf], rax", "mov     rax, [rbp+p]", "mov     r8, [rax+30h]", "mov     rax, [rbp+p]", "mov     rdi, [rax+28h]", "mov     rax, [rbp+p]", "lea     r11, [rax+8]", "mov     rax, [rbp+p]", "mov     r10d, [rax]", "mov     r9d, [rbp+flags]; flags", "mov     rcx, [rbp+argsize]; argsize", "mov     rdx, [rbp+arg]; arg", "mov     rsi, [rbp+bufsize]; buffersize", "mov     rax, [rbp+buf]", "sub     rsp, 8", "push    r8; right_quote", "push    rdi; left_quote", "push    r11; quote_these_too", "mov     r8d, r10d; quoting_style", "mov     rdi, rax; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h", "call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+e]", "mov     [rdx], eax", "cmp     [rbp+size], 0", "jz      short loc_46B9"], ["mov~[rbp+0],rax", "call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~edx,[rax+0]", "cmp~[rbp+0],0", "setz~al", "movzx~eax,al", "or~eax,edx", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~rsi,[rax+0]", "mov~rax,[rbp+0]", "mov~rcx,[rax+0]", "mov~rax,[rbp+0]", "lea~r9,[rax+0]", "mov~rax,[rbp+0]", "mov~edi,<TAG>", "mov~r8d,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "sub~rsp,0", "push~rsi", "push~rcx", "push~r9", "mov~r9d,r8d", "mov~r8d,edi", "mov~rcx,rdx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "call~FOO", "add~rsp,<STR>", "add~rax,0", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~r8,[rax+0]", "mov~rax,[rbp+0]", "mov~rdi,[rax+0]", "mov~rax,[rbp+0]", "lea~r11,[rax+0]", "mov~rax,[rbp+0]", "mov~r10d,<TAG>", "mov~r9d,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "sub~rsp,0", "push~r8", "push~rdi", "push~r11", "mov~r8d,r10d", "mov~rdi,rax", "call~FOO", "add~rsp,<STR>", "call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 1, 2, 0.07500000000000001, ["mov     rax, [rbp+o]", "jmp     short loc_45BD"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 1, 2, 0.07500000000000001, ["lea     rax, default_quoting_options"], ["lea~rax,<TAG>"]], [2, 0, 5, 1, 0, 9, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+arg], rdi", "mov     [rbp+argsize], rsi", "mov     [rbp+size], rdx", "mov     [rbp+o], rcx", "cmp     [rbp+o], 0", "jz      short loc_45B6"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0.0, ["mov     rax, [rbp+buf]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]]], "func_feature": [5, 1, 8, 0, 6, 7, 1, 86, 0.075, 1, 6], "succs": [[5], [0, 5], [1], [1], [2, 3], []], "fname": "quotearg_alloc_mem", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 1, 0, 1, 5, 0, 1, 0, 0, 0.0, ["mov     rax, [rbp+sv]", "mov     rdi, rax; ptr", "call    _free", "lea     rax, slotvec0", "mov     cs:slotvec_0, rax"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "lea~rax,<TAG>", "mov~<TAG>,rax"]], [0, 0, 2, 0, 0, 3, 0, 1, 3, 1, 0.23809523809523808, ["lea     rax, slotvec0", "cmp     [rbp+sv], rax", "jz      short loc_476D"], ["lea~rax,<TAG>", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 1, 3, 0.26190476190476186, ["mov     eax, cs:nslots", "cmp     [rbp+i], eax", "jl      short loc_46DB"], ["mov~eax,<TAG>", "cmp~[rbp+0],eax", "jl~FOO"]], [2, 0, 7, 1, 0, 7, 0, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     rax, cs:slotvec_0", "mov     [rbp+sv], rax", "mov     [rbp+i], 1", "jmp     short loc_46FE"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 7, 3, 1, 10, 0, 1, 2, 4, 0.0, ["mov     eax, [rbp+i]", "cdqe", "shl     rax, 4", "mov     rdx, rax", "mov     rax, [rbp+sv]", "add     rax, rdx", "mov     rax, [rax+8]", "mov     rdi, rax; ptr", "call    _free", "add     [rbp+i], 1"], ["mov~eax,[rbp+0]", "cdqe~", "shl~rax,0", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "add~[rbp+0],0"]], [0, 0, 4, 0, 0, 5, 0, 1, 2, 2, 0.2857142857142857, ["mov     rax, [rbp+sv]", "mov     rdx, [rax+8]", "lea     rax, slot0", "cmp     rdx, rax", "jz      short loc_4746"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "lea~rax,<TAG>", "cmp~rdx,rax", "jz~FOO"]], [1, 0, 3, 0, 1, 7, 0, 1, 3, 2, 0.0, ["mov     rax, [rbp+sv]", "mov     rax, [rax+8]", "mov     rdi, rax; ptr", "call    _free", "mov     cs:slotvec0.size, 100h", "lea     rax, slot0", "mov     cs:slotvec0.val, rax"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "mov~rdi,rax", "call~FOO", "mov~<TAG>,0", "lea~rax,<TAG>", "mov~<TAG>,rax"]], [1, 0, 0, 0, 0, 4, 0, 0, 4, 0, 0.0, ["mov     cs:nslots, 1", "nop", "leave", "retn"], ["mov~<TAG>,0", "nop", "leave", "retn"]]], "func_feature": [3, 0, 7, 0, 8, 10, 0, 44, 0.09821, 5, 4], "succs": [[7], [0, 7], [4, 5], [2], [2], [1, 6], [1], []], "fname": "quotearg_free", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 12, 0, 0, 8, 0, 1, 2, 6, 0.06666666666666668, ["lea     rax, slotvec0", "cmp     [rbp+sv], rax", "setz    al", "mov     [rbp+preallocated], al", "mov     [rbp+nmax], 7FFFFFFEh", "mov     eax, [rbp+nmax]", "cmp     eax, [rbp+n]", "jge     short loc_47E5"], ["lea~rax,<TAG>", "cmp~[rbp+0],rax", "setz~al", "mov~[rbp+0],al", "mov~[rbp+0],0", "mov~eax,[rbp+0]", "cmp~eax,[rbp+0]", "jge~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 4, 4, 0.05238095238095239, ["mov     rax, [rbp+sv]"], ["mov~rax,[rbp+0]"]], [3, 0, 10, 2, 0, 7, 0, 1, 3, 5, 0.09523809523809525, ["mov     eax, [rbp+n]", "add     eax, 1", "cdqe", "shl     rax, 4", "mov     rdx, rax", "cmp     [rbp+preallocated], 0", "jz      short loc_4801"], ["mov~eax,[rbp+0]", "add~eax,0", "cdqe~", "shl~rax,0", "mov~rdx,rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 7, 0, 1, 8, 0, 2, 5, 3, 0.1523809523809524, ["mov     rsi, rdx; n", "mov     rdi, rax; p", "call    xrealloc", "mov     [rbp+sv], rax", "mov     rax, [rbp+sv]", "mov     cs:slotvec_0, rax", "cmp     [rbp+preallocated], 0", "jz      short loc_483E"], ["mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~<TAG>,rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 4, 4, 0.05238095238095239, ["mov     eax, 0", "jmp     short loc_4805"], ["mov~eax,0", "jmp~FOO"]], [4, 0, 5, 5, 1, 20, 0, 1, 6, 2, 0.14285714285714288, ["mov     eax, [rbp+n]", "lea     edx, [rax+1]", "mov     eax, cs:nslots", "sub     edx, eax", "mov     eax, edx", "cdqe", "shl     rax, 4", "mov     rdx, rax; n", "mov     eax, cs:nslots", "cdqe", "shl     rax, 4", "mov     rcx, rax", "mov     rax, [rbp+sv]", "add     rax, rcx", "mov     esi, 0; c", "mov     rdi, rax; s", "call    _memset", "mov     eax, [rbp+n]", "add     eax, 1", "mov     cs:nslots, eax"], ["mov~eax,[rbp+0]", "lea~edx,[rax+0]", "mov~eax,<TAG>", "sub~edx,eax", "mov~eax,edx", "cdqe~", "shl~rax,0", "mov~rdx,rax", "mov~eax,<TAG>", "cdqe~", "shl~rax,0", "mov~rcx,rax", "mov~rax,[rbp+0]", "add~rax,rcx", "mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~eax,[rbp+0]", "add~eax,0", "mov~<TAG>,eax"]], [0, 0, 6, 0, 0, 5, 0, 0, 6, 3, 0.0, ["mov     rcx, [rbp+sv]", "mov     rax, cs:slotvec0.size", "mov     rdx, cs:slotvec0.val", "mov     [rcx], rax", "mov     [rcx+8], rdx"], ["mov~rcx,[rbp+0]", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~<TAG>,rax", "mov~[rcx+0],rdx"]], [2, 1, 1, 4, 2, 33, 0, 2, 4, 1, 0.009523809523809525, ["mov     rax, [rbp+size]", "mov     rdi, rax; n", "call    xcharalloc", "mov     [rbp+val], rax", "mov     eax, [rbp+n]", "cdqe", "shl     rax, 4", "mov     rdx, rax", "mov     rax, [rbp+sv]", "add     rdx, rax", "mov     rax, [rbp+val]", "mov     [rdx+8], rax", "mov     rax, [rbp+options]", "mov     r8, [rax+30h]", "mov     rax, [rbp+options]", "mov     rdi, [rax+28h]", "mov     rax, [rbp+options]", "lea     r11, [rax+8]", "mov     rax, [rbp+options]", "mov     r10d, [rax]", "mov     r9d, [rbp+flags]; flags", "mov     rcx, [rbp+argsize]; argsize", "mov     rdx, [rbp+arg]; arg", "mov     rsi, [rbp+size]; buffersize", "mov     rax, [rbp+val]", "sub     rsp, 8", "push    r8; right_quote", "push    rdi; left_quote", "push    r11; quote_these_too", "mov     r8d, r10d; quoting_style", "mov     rdi, rax; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "mov~eax,[rbp+0]", "cdqe~", "shl~rax,0", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~[rdx+0],rax", "mov~rax,[rbp+0]", "mov~r8,[rax+0]", "mov~rax,[rbp+0]", "mov~rdi,[rax+0]", "mov~rax,[rbp+0]", "lea~r11,[rax+0]", "mov~rax,[rbp+0]", "mov~r10d,<TAG>", "mov~r9d,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "sub~rsp,0", "push~r8", "push~rdi", "push~r11", "mov~r8d,r10d", "mov~rdi,rax", "call~FOO", "add~rsp,<STR>"]], [2, 0, 3, 3, 0, 14, 0, 1, 3, 2, 0.09523809523809525, ["mov     rax, [rbp+qsize]", "add     rax, 1", "mov     [rbp+size], rax", "mov     eax, [rbp+n]", "cdqe", "shl     rax, 4", "mov     rdx, rax", "mov     rax, [rbp+sv]", "add     rdx, rax", "mov     rax, [rbp+size]", "mov     [rdx], rax", "lea     rax, slot0", "cmp     [rbp+val], rax", "jz      short loc_4964"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~[rbp+0],rax", "mov~eax,[rbp+0]", "cdqe~", "shl~rax,0", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rdx,rax", "mov~rax,[rbp+0]", "mov~<TAG>,rax", "lea~rax,<TAG>", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 0, 2, 0, 1, 3, 0, 1, 4, 2, 0.0, ["mov     rax, [rbp+val]", "mov     rdi, rax; ptr", "call    _free"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO"]], [0, 0, 0, 0, 1, 7, 0, 1, 3, 0, 0.0, ["call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+e]", "mov     [rdx], eax", "mov     rax, [rbp+val]", "leave", "retn"], ["call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "mov~rax,[rbp+0]", "leave", "retn"]], [4, 1, 4, 6, 1, 45, 1, 2, 2, 1, 0.17142857142857143, ["mov     eax, [rbp+n]", "cdqe", "shl     rax, 4", "mov     rdx, rax", "mov     rax, [rbp+sv]", "add     rax, rdx", "mov     rax, [rax]", "mov     [rbp+size], rax", "mov     eax, [rbp+n]", "cdqe", "shl     rax, 4", "mov     rdx, rax", "mov     rax, [rbp+sv]", "add     rax, rdx", "mov     rax, [rax+8]", "mov     [rbp+val], rax", "mov     rax, [rbp+options]", "mov     eax, [rax+4]", "or      eax, 1", "mov     [rbp+flags], eax", "mov     rax, [rbp+options]", "mov     r8, [rax+30h]", "mov     rax, [rbp+options]", "mov     rdi, [rax+28h]", "mov     rax, [rbp+options]", "lea     r11, [rax+8]", "mov     rax, [rbp+options]", "mov     r10d, [rax]", "mov     r9d, [rbp+flags]; flags", "mov     rcx, [rbp+argsize]; argsize", "mov     rdx, [rbp+arg]; arg", "mov     rsi, [rbp+size]; buffersize", "mov     rax, [rbp+val]", "sub     rsp, 8", "push    r8; right_quote", "push    rdi; left_quote", "push    r11; quote_these_too", "mov     r8d, r10d; quoting_style", "mov     rdi, rax; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     [rbp+qsize], rax", "mov     rax, [rbp+size]", "cmp     rax, [rbp+qsize]", "ja      loc_49DA"], ["mov~eax,[rbp+0]", "cdqe~", "shl~rax,0", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~eax,[rbp+0]", "cdqe~", "shl~rax,0", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,[rax+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~eax,[rax+0]", "or~eax,0", "mov~[rbp+0],eax", "mov~rax,[rbp+0]", "mov~r8,[rax+0]", "mov~rax,[rbp+0]", "mov~rdi,[rax+0]", "mov~rax,[rbp+0]", "lea~r11,[rax+0]", "mov~rax,[rbp+0]", "mov~r10d,<TAG>", "mov~r9d,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "sub~rsp,0", "push~r8", "push~rdi", "push~r11", "mov~r8d,r10d", "mov~rdi,rax", "call~FOO", "add~rsp,<STR>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "ja~FOO"]], [1, 1, 15, 1, 1, 14, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+n], edi", "mov     [rbp+arg], rsi", "mov     [rbp+argsize], rdx", "mov     [rbp+options], rcx", "call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+e], eax", "mov     rax, cs:slotvec_0", "mov     [rbp+sv], rax", "cmp     [rbp+n], 0", "jns     short loc_47B1"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax", "mov~rax,<TAG>", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jns~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 13, 0, 0, 3, 0, 1, 1, 2, 0.06190476190476191, ["mov     eax, cs:nslots", "cmp     [rbp+n], eax", "jl      loc_4886"], ["mov~eax,<TAG>", "cmp~[rbp+0],eax", "jl~FOO"]]], "func_feature": [10, 1, 17, 0, 16, 20, 8, 172, 0.05625, 5, 21], "succs": [[], [0, 3], [4], [2, 5], [6, 7], [4], [12], [6], [11], [8, 10], [8], [], [9, 11], [14, 15], [], [1, 12]], "fname": "quotearg_n_options", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[2, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+n], edi", "mov     [rbp+arg], rsi", "mov     rsi, [rbp+arg]; arg", "mov     eax, [rbp+n]", "lea     rcx, default_quoting_options; options", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     edi, eax; n", "call    quotearg_n_options", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "lea~rcx,<TAG>", "mov~rdx,0", "mov~edi,eax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 13, 0.0, 1, 1], "succs": [[]], "fname": "quotearg_n", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 1, 0, 1, 1, 14, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+n], edi", "mov     [rbp+arg], rsi", "mov     [rbp+argsize], rdx", "mov     rdx, [rbp+argsize]; argsize", "mov     rsi, [rbp+arg]; arg", "mov     eax, [rbp+n]", "lea     rcx, default_quoting_options; options", "mov     edi, eax; n", "call    quotearg_n_options", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "lea~rcx,<TAG>", "mov~edi,eax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 14, 0.0, 1, 1], "succs": [[]], "fname": "quotearg_n_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[2, 0, 0, 1, 1, 10, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+arg], rdi", "mov     rax, [rbp+arg]", "mov     rsi, rax; arg", "mov     edi, 0; n", "call    quotearg_n", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 10, 0.0, 0, 1], "succs": [[]], "fname": "quotearg", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[2, 0, 0, 1, 1, 12, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+arg], rdi", "mov     [rbp+argsize], rsi", "mov     rdx, [rbp+argsize]; argsize", "mov     rax, [rbp+arg]", "mov     rsi, rax; arg", "mov     edi, 0; n", "call    quotearg_n_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 12, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 1, 2, 1, 2, 24, 2, 3, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 50h", "mov     [rbp+n], edi", "mov     [rbp+s], esi", "mov     [rbp+arg], rdx", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "lea     rax, [rbp+o]", "mov     edx, [rbp+s]", "mov     esi, edx; style", "mov     rdi, rax; retstr", "call    quoting_options_from_style", "lea     rdx, [rbp+o]", "mov     rsi, [rbp+arg]; arg", "mov     eax, [rbp+n]", "mov     rcx, rdx; options", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     edi, eax; n", "call    quotearg_n_options", "mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_4AF0"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],esi", "mov~[rbp+0],rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "lea~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~rcx,rdx", "mov~rdx,0", "mov~edi,eax", "call~FOO", "mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [3, 2, 4, 1, 3, 2, 1, 27, 0.0, 1, 1], "succs": [[1, 2], [], []], "fname": "quotearg_n_style", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 2, 1, 2, 24, 2, 3, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 60h", "mov     [rbp+n], edi", "mov     [rbp+s], esi", "mov     [rbp+arg], rdx", "mov     [rbp+argsize], rcx", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "lea     rax, [rbp+o]", "mov     edx, [rbp+s]", "mov     esi, edx; style", "mov     rdi, rax; retstr", "call    quoting_options_from_style", "lea     rcx, [rbp+o]; options", "mov     rdx, [rbp+argsize]; argsize", "mov     rsi, [rbp+arg]; arg", "mov     eax, [rbp+n]", "mov     edi, eax; n", "call    quotearg_n_options", "mov     rdi, [rbp+var_8]", "xor     rdi, fs:28h", "jz      short locret_4B52"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],esi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "lea~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "lea~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "mov~rdi,[rbp+0]", "xor~rdi,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 2, 4, 1, 3, 2, 1, 27, 0.0, 1, 1], "succs": [[], [0, 2], []], "fname": "quotearg_n_style_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[2, 0, 0, 1, 1, 12, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+s], edi", "mov     [rbp+arg], rsi", "mov     rdx, [rbp+arg]; arg", "mov     eax, [rbp+s]", "mov     esi, eax; s", "mov     edi, 0; n", "call    quotearg_n_style", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~rdx,[rbp+0]", "mov~eax,[rbp+0]", "mov~esi,eax", "mov~edi,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 12, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 1, 0, 1, 1, 14, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+s], edi", "mov     [rbp+arg], rsi", "mov     [rbp+argsize], rdx", "mov     rcx, [rbp+argsize]; argsize", "mov     rdx, [rbp+arg]; arg", "mov     eax, [rbp+s]", "mov     esi, eax; s", "mov     edi, 0; n", "call    quotearg_n_style_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~eax,[rbp+0]", "mov~esi,eax", "mov~edi,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 14, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_style_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[3, 0, 2, 1, 2, 39, 2, 3, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 60h", "mov     [rbp+arg], rdi", "mov     [rbp+argsize], rsi", "mov     eax, edx", "mov     [rbp+ch_0], al", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     rax, qword ptr cs:default_quoting_options.style", "mov     rdx, qword ptr cs:default_quoting_options.quote_these_too", "mov     qword ptr [rbp+options.style], rax", "mov     qword ptr [rbp+options.quote_these_too], rdx", "mov     rax, qword ptr cs:default_quoting_options.quote_these_too+8", "mov     rdx, qword ptr cs:default_quoting_options.quote_these_too+10h", "mov     qword ptr [rbp+options.quote_these_too+8], rax", "mov     qword ptr [rbp+options.quote_these_too+10h], rdx", "mov     rax, qword ptr cs:default_quoting_options.quote_these_too+18h", "mov     rdx, cs:default_quoting_options.left_quote", "mov     qword ptr [rbp+options.quote_these_too+18h], rax", "mov     [rbp+options.left_quote], rdx", "mov     rax, cs:default_quoting_options.right_quote", "mov     [rbp+options.right_quote], rax", "movsx   ecx, [rbp+ch_0]", "lea     rax, [rbp+options]", "mov     edx, 1; i", "mov     esi, ecx; c", "mov     rdi, rax; o", "call    set_char_quoting", "lea     rcx, [rbp+options]; options", "mov     rdx, [rbp+argsize]; argsize", "mov     rax, [rbp+arg]", "mov     rsi, rax; arg", "mov     edi, 0; n", "call    quotearg_n_options", "mov     rsi, [rbp+var_8]", "xor     rsi, fs:28h", "jz      short locret_4C59"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~eax,edx", "mov~[rbp+0],al", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[word ptr [rbp+0],rax", "mov~[word ptr [rbp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[word ptr [rbp+0],rax", "mov~[word ptr [rbp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[word ptr [rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "movsx~ecx,[rbp+0]", "lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,ecx", "mov~rdi,rax", "call~FOO", "lea~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "mov~rsi,[rbp+0]", "xor~rsi,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [3, 2, 4, 1, 3, 2, 2, 42, 0.0, 8, 1], "succs": [[1, 2], [], []], "fname": "quotearg_char_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[2, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+arg], rdi", "mov     eax, esi", "mov     [rbp+ch_0], al", "movsx   edx, [rbp+ch_0]; ch_0", "mov     rax, [rbp+arg]", "mov     rsi, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdi, rax; arg", "call    quotearg_char_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~eax,esi", "mov~[rbp+0],al", "movsx~edx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,0", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 13, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_char", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 1, 0, 1, 1, 10, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+arg], rdi", "mov     rax, [rbp+arg]", "mov     esi, 3Ah ; ':'; ch_0", "mov     rdi, rax; arg", "call    quotearg_char", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~esi,<STR>", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 10, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_colon", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 1, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+arg], rdi", "mov     [rbp+argsize], rsi", "mov     rcx, [rbp+argsize]", "mov     rax, [rbp+arg]", "mov     edx, 3Ah ; ':'; ch_0", "mov     rsi, rcx; argsize", "mov     rdi, rax; arg", "call    quotearg_char_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~edx,<STR>", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 13, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_colon_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[2, 2, 2, 1, 3, 43, 2, 4, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 90h", "mov     [rbp+n], edi", "mov     [rbp+s], esi", "mov     [rbp+arg], rdx", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "lea     rax, [rbp+var_90]", "mov     edx, [rbp+s]", "mov     esi, edx; style", "mov     rdi, rax; retstr", "call    quoting_options_from_style", "mov     rax, qword ptr [rbp+var_90.style]", "mov     rdx, qword ptr [rbp+var_90.quote_these_too]", "mov     qword ptr [rbp+options.style], rax", "mov     qword ptr [rbp+options.quote_these_too], rdx", "mov     rax, qword ptr [rbp+var_90.quote_these_too+8]", "mov     rdx, qword ptr [rbp+var_90.quote_these_too+10h]", "mov     qword ptr [rbp+options.quote_these_too+8], rax", "mov     qword ptr [rbp+options.quote_these_too+10h], rdx", "mov     rax, qword ptr [rbp+var_90.quote_these_too+18h]", "mov     rdx, [rbp+var_90.left_quote]", "mov     qword ptr [rbp+options.quote_these_too+18h], rax", "mov     [rbp+options.left_quote], rdx", "mov     rax, [rbp+var_90.right_quote]", "mov     [rbp+options.right_quote], rax", "lea     rax, [rbp+options]", "mov     edx, 1; i", "mov     esi, 3Ah ; ':'; c", "mov     rdi, rax; o", "call    set_char_quoting", "lea     rdx, [rbp+options]", "mov     rsi, [rbp+arg]; arg", "mov     eax, [rbp+n]", "mov     rcx, rdx; options", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     edi, eax; n", "call    quotearg_n_options", "mov     rcx, [rbp+var_8]", "xor     rcx, fs:28h", "jz      short locret_4D8A"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],esi", "mov~[rbp+0],rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "lea~rax,[rbp+0]", "mov~edx,[rbp+0]", "mov~esi,edx", "mov~rdi,rax", "call~FOO", "mov~rax,[word ptr [rbp+0]", "mov~rdx,[word ptr [rbp+0]", "mov~[word ptr [rbp+0],rax", "mov~[word ptr [rbp+0],rdx", "mov~rax,[word ptr [rbp+0]", "mov~rdx,[word ptr [rbp+0]", "mov~[word ptr [rbp+0],rax", "mov~[word ptr [rbp+0],rdx", "mov~rax,[word ptr [rbp+0]", "mov~rdx,[rbp+0]", "mov~[word ptr [rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~edx,0", "mov~esi,<STR>", "mov~rdi,rax", "call~FOO", "lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~rcx,rdx", "mov~rdx,0", "mov~edi,eax", "call~FOO", "mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [4, 2, 5, 2, 3, 2, 6, 46, 0.0, 1, 1], "succs": [[1, 2], [], []], "fname": "quotearg_n_style_colon", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 1, 0, 1, 1, 16, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+n], edi", "mov     [rbp+left_quote], rsi", "mov     [rbp+right_quote], rdx", "mov     [rbp+arg], rcx", "mov     rcx, [rbp+arg]; arg", "mov     rdx, [rbp+right_quote]; right_quote", "mov     rsi, [rbp+left_quote]; left_quote", "mov     eax, [rbp+n]", "mov     r8, 0FFFFFFFFFFFFFFFFh; argsize", "mov     edi, eax; n", "call    quotearg_n_custom_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~r8,0", "mov~edi,eax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 16, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_n_custom", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 2, 1, 2, 40, 2, 3, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 70h", "mov     [rbp+n], edi", "mov     [rbp+left_quote], rsi", "mov     [rbp+right_quote], rdx", "mov     [rbp+arg], rcx", "mov     [rbp+argsize], r8", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     rax, qword ptr cs:default_quoting_options.style", "mov     rdx, qword ptr cs:default_quoting_options.quote_these_too", "mov     qword ptr [rbp+o.style], rax", "mov     qword ptr [rbp+o.quote_these_too], rdx", "mov     rax, qword ptr cs:default_quoting_options.quote_these_too+8", "mov     rdx, qword ptr cs:default_quoting_options.quote_these_too+10h", "mov     qword ptr [rbp+o.quote_these_too+8], rax", "mov     qword ptr [rbp+o.quote_these_too+10h], rdx", "mov     rax, qword ptr cs:default_quoting_options.quote_these_too+18h", "mov     rdx, cs:default_quoting_options.left_quote", "mov     qword ptr [rbp+o.quote_these_too+18h], rax", "mov     [rbp+o.left_quote], rdx", "mov     rax, cs:default_quoting_options.right_quote", "mov     [rbp+o.right_quote], rax", "mov     rdx, [rbp+right_quote]; right_quote", "mov     rcx, [rbp+left_quote]", "lea     rax, [rbp+o]", "mov     rsi, rcx; left_quote", "mov     rdi, rax; o", "call    set_custom_quoting", "lea     rcx, [rbp+o]; options", "mov     rdx, [rbp+argsize]; argsize", "mov     rsi, [rbp+arg]; arg", "mov     eax, [rbp+n]", "mov     edi, eax; n", "call    quotearg_n_options", "mov     rdi, [rbp+var_8]", "xor     rdi, fs:28h", "jz      short locret_4E7A"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[word ptr [rbp+0],rax", "mov~[word ptr [rbp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[word ptr [rbp+0],rax", "mov~[word ptr [rbp+0],rdx", "mov~rax,<TAG>", "mov~rdx,<TAG>", "mov~[word ptr [rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "lea~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "lea~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "mov~rdi,[rbp+0]", "xor~rdi,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 2, 4, 1, 3, 2, 2, 43, 0.0, 8, 1], "succs": [[], [0, 2], []], "fname": "quotearg_n_custom_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 1, 0, 1, 1, 14, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+left_quote], rdi", "mov     [rbp+right_quote], rsi", "mov     [rbp+arg], rdx", "mov     rcx, [rbp+arg]; arg", "mov     rdx, [rbp+right_quote]; right_quote", "mov     rax, [rbp+left_quote]", "mov     rsi, rax; left_quote", "mov     edi, 0; n", "call    quotearg_n_custom", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 14, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_custom", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 1, 0, 1, 1, 17, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+left_quote], rdi", "mov     [rbp+right_quote], rsi", "mov     [rbp+arg], rdx", "mov     [rbp+argsize], rcx", "mov     rsi, [rbp+argsize]", "mov     rcx, [rbp+arg]; arg", "mov     rdx, [rbp+right_quote]; right_quote", "mov     rax, [rbp+left_quote]", "mov     r8, rsi; argsize", "mov     rsi, rax; left_quote", "mov     edi, 0; n", "call    quotearg_n_custom_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~rsi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~r8,rsi", "mov~rsi,rax", "mov~edi,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 17, 0.0, 0, 1], "succs": [[]], "fname": "quotearg_custom_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 1, 0, 1, 1, 14, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+n], edi", "mov     [rbp+arg], rsi", "mov     [rbp+argsize], rdx", "mov     rdx, [rbp+argsize]; argsize", "mov     rsi, [rbp+arg]; arg", "mov     eax, [rbp+n]", "lea     rcx, quote_quoting_options; options", "mov     edi, eax; n", "call    quotearg_n_options", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~eax,[rbp+0]", "lea~rcx,<TAG>", "mov~edi,eax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 14, 0.0, 1, 1], "succs": [[]], "fname": "quote_n_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[2, 0, 0, 1, 1, 12, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+arg], rdi", "mov     [rbp+argsize], rsi", "mov     rdx, [rbp+argsize]; argsize", "mov     rax, [rbp+arg]", "mov     rsi, rax; arg", "mov     edi, 0; n", "call    quote_n_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 12, 0.0, 0, 1], "succs": [[]], "fname": "quote_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[2, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+n], edi", "mov     [rbp+arg], rsi", "mov     rcx, [rbp+arg]", "mov     eax, [rbp+n]", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rsi, rcx; arg", "mov     edi, eax; n", "call    quote_n_mem", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~eax,[rbp+0]", "mov~rdx,0", "mov~rsi,rcx", "mov~edi,eax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 13, 0.0, 0, 1], "succs": [[]], "fname": "quote_n", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[2, 0, 0, 1, 1, 10, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+arg], rdi", "mov     rax, [rbp+arg]", "mov     rsi, rax; arg", "mov     edi, 0; n", "call    quote_n", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 10, 0.0, 0, 1], "succs": [[]], "fname": "quote", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 2, 0, 0.05555555555555556, ["mov     rax, [rbp+result]", "jmp     short locret_4FF0"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, 0, 0.03333333333333333, ["mov     rax, [rbp+result]", "jmp     short locret_4FF0"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [1, 0, 10, 0, 1, 4, 0, 2, 2, 0, 0.3111111111111111, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 4", "jz      short loc_4FED"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 10, 0, 1, 9, 0, 2, 1, 0, 0.43333333333333335, ["mov     rdx, [rbp+count]; nbytes", "mov     rcx, [rbp+buf]", "mov     eax, [rbp+fd]", "mov     rsi, rcx; buf", "mov     edi, eax; fd", "call    _read", "mov     [rbp+result], rax", "cmp     [rbp+result], 0", "js      short loc_4FBB"], ["mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~eax,[rbp+0]", "mov~rsi,rcx", "mov~edi,eax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "js~FOO"]], [1, 0, 10, 0, 1, 4, 0, 2, 3, 0, 0.2, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 16h", "jnz     short loc_4FE7"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 0, 4, 0, 0.12222222222222223, ["cmp     [rbp+count], 7FF00000h", "jbe     short loc_4FE7"], ["cmp~[rbp+0],0", "jbe~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 3, 0, 0.05555555555555556, ["nop"], ["nop"]], [0, 0, 10, 0, 0, 1, 0, 1, 4, 0, 0.3, ["jmp     short loc_4F95"], ["jmp~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 5, 0, 0.12222222222222223, ["mov     [rbp+count], 7FF00000h", "jmp     short loc_4FEE"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 10, 1, 0, 6, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+fd], edi", "mov     [rbp+buf], rsi", "mov     [rbp+count], rdx"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx"]]], "func_feature": [3, 0, 10, 0, 11, 14, 2, 35, 0.14848, 0, 1], "succs": [[], [0], [0], [5, 7], [1, 3], [2, 6], [9, 2], [8], [4], [8], [4]], "fname": "safe_read", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 0, 10, 1, 0, 6, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+fd], edi", "mov     [rbp+buf], rsi", "mov     [rbp+count], rdx"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx"]], [1, 0, 10, 0, 1, 9, 0, 2, 0, 2, 0.43333333333333335, ["mov     rdx, [rbp+count]; n", "mov     rcx, [rbp+buf]", "mov     eax, [rbp+fd]", "mov     rsi, rcx; buf", "mov     edi, eax; fd", "call    _write", "mov     [rbp+result], rax", "cmp     [rbp+result], 0", "js      short loc_502B"], ["mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~eax,[rbp+0]", "mov~rsi,rcx", "mov~edi,eax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "js~FOO"]], [0, 0, 10, 0, 0, 1, 0, 1, 0, 3, 0.3, ["jmp     short loc_5005"], ["jmp~FOO"]], [1, 0, 10, 0, 1, 4, 0, 2, 0, 2, 0.2, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 16h", "jnz     short loc_5057"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jnz~FOO"]], [1, 0, 10, 0, 1, 4, 0, 2, 0, 3, 0.3111111111111111, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 4", "jz      short loc_505D"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.05555555555555556, ["mov     rax, [rbp+result]", "jmp     short locret_5060"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [1, 0, 10, 0, 0, 2, 0, 0, 0, 2, 0.12222222222222223, ["cmp     [rbp+count], 7FF00000h", "jbe     short loc_5057"], ["cmp~[rbp+0],0", "jbe~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.03333333333333333, ["mov     rax, [rbp+result]", "jmp     short locret_5060"], ["mov~rax,[rbp+0]", "jmp~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 0, 4, 0.05555555555555556, ["nop"], ["nop"]], [1, 0, 10, 0, 0, 2, 0, 1, 0, 4, 0.12222222222222223, ["mov     [rbp+count], 7FF00000h", "jmp     short loc_505E"], ["mov~[rbp+0],0", "jmp~FOO"]]], "func_feature": [3, 0, 10, 0, 11, 14, 1, 35, 0.14848, 0, 1], "succs": [[1], [4, 5], [1], [8, 6], [9, 3], [7], [8, 10], [], [7], [2], [2]], "fname": "safe_write", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 0, 1, 0, 2, 12, 0, 3, 0, 0, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 0000000000005153 case 1", "mov     rbx, [rax]", "lea     rdi, aWrittenByS; \"Written by %s.\\n\"", "call    _gettext", "mov     rcx, rax", "mov     rax, [rbp+stream]", "mov     rdx, rbx", "mov     rsi, rcx; format", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "jmp     loc_55EE"], ["mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rcx,rax", "mov~rax,[rbp+0]", "mov~rdx,rbx", "mov~rsi,rcx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "jmp~FOO"]], [0, 0, 11, 1, 0, 8, 0, 1, 3, 2, 0.16666666666666666, ["mov     rax, [rbp+n_authors]", "lea     rdx, ds:0[rax*4]", "lea     rax, off_7124", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_7124", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [4, 0, 1, 3, 2, 23, 0, 3, 4, 1, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 0000000000005153 case 4", "add     rax, 18h", "mov     r14, [rax]", "mov     rax, [rbp+authors]", "add     rax, 10h", "mov     r13, [rax]", "mov     rax, [rbp+authors]", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySSSAn; \"Written by %s, %s, %s,\\nand %s.\\n\"", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "mov     r9, r14", "mov     r8, r13", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "jmp     loc_55EE"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~r14,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r13,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "mov~r9,r14", "mov~r8,r13", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "jmp~FOO"]], [0, 0, 0, 0, 0, 9, 0, 0, 4, 0, 0.0, ["nop", "lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["nop", "lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [2, 0, 1, 1, 2, 15, 0, 3, 4, 1, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 0000000000005153 case 2", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "jmp     loc_55EE"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "jmp~FOO"]], [3, 0, 1, 2, 2, 19, 0, 3, 4, 1, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 0000000000005153 case 3", "add     rax, 10h", "mov     r13, [rax]", "mov     rax, [rbp+authors]", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "mov     r8, r13", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "jmp     loc_55EE"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~r13,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "mov~r8,r13", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "jmp~FOO"]], [6, 1, 1, 6, 2, 29, 0, 3, 4, 1, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 0000000000005153 case 5", "add     rax, 20h", "mov     r13, [rax]", "mov     rax, [rbp+authors]", "add     rax, 18h", "mov     r15, [rax]", "mov     rax, [rbp+authors]", "add     rax, 10h", "mov     r14, [rax]", "mov     rax, [rbp+authors]", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "sub     rsp, 8", "push    r13", "mov     r9, r15", "mov     r8, r14", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "add     rsp, 10h", "jmp     loc_55EE"], ["mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r13,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r15,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r14,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "sub~rsp,0", "push~r13", "mov~r9,r15", "mov~r8,r14", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [5, 2, 1, 6, 2, 33, 0, 3, 4, 1, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 0000000000005153 case 6", "add     rax, 28h", "mov     r14, [rax]", "mov     rax, [rbp+authors]", "add     rax, 20h", "mov     r13, [rax]", "mov     rax, [rbp+authors]", "add     rax, 18h", "mov     rax, [rax]", "mov     [rbp+var_68], rax", "mov     rax, [rbp+authors]", "add     rax, 10h", "mov     r15, [rax]", "mov     rax, [rbp+authors]", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "push    r14", "push    r13", "mov     r9, [rbp+var_68]", "mov     r8, r15", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "add     rsp, 10h", "jmp     loc_55EE"], ["mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r14,<TAG>", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r13,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "add~rax,0", "mov~r15,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "push~r14", "push~r13", "mov~r9,[rbp+0]", "mov~r8,r15", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [6, 3, 1, 8, 2, 39, 0, 3, 4, 1, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 0000000000005153 case 7", "add     rax, 30h", "mov     r15, [rax]", "mov     rax, [rbp+authors]", "add     rax, 28h", "mov     r14, [rax]", "mov     rax, [rbp+authors]", "add     rax, 20h", "mov     r13, [rax]", "mov     rax, [rbp+authors]", "add     rax, 18h", "mov     rax, [rax]", "mov     [rbp+var_68], rax", "mov     rax, [rbp+authors]", "add     rax, 10h", "mov     rcx, [rax]", "mov     [rbp+var_70], rcx", "mov     rax, [rbp+authors]", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "sub     rsp, 8", "push    r15", "push    r14", "push    r13", "mov     r9, [rbp+var_68]", "mov     r8, [rbp+var_70]", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "add     rsp, 20h", "jmp     loc_55EE"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~r15,<TAG>", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r14,<TAG>", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r13,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "add~rax,0", "mov~rcx,<TAG>", "mov~[rbp+0],rcx", "mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "sub~rsp,0", "push~r15", "push~r14", "push~r13", "mov~r9,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [6, 3, 1, 8, 2, 43, 0, 3, 4, 1, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 0000000000005153 case 8", "add     rax, 38h", "mov     rax, [rax]", "mov     [rbp+var_68], rax", "mov     rax, [rbp+authors]", "add     rax, 30h", "mov     r15, [rax]", "mov     rax, [rbp+authors]", "add     rax, 28h", "mov     r14, [rax]", "mov     rax, [rbp+authors]", "add     rax, 20h", "mov     r13, [rax]", "mov     rax, [rbp+authors]", "add     rax, 18h", "mov     rbx, [rax]", "mov     [rbp+var_70], rbx", "mov     rax, [rbp+authors]", "add     rax, 10h", "mov     rcx, [rax]", "mov     [rbp+var_78], rcx", "mov     rax, [rbp+authors]", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "push    [rbp+var_68]", "push    r15", "push    r14", "push    r13", "mov     r9, [rbp+var_70]", "mov     r8, [rbp+var_78]", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "add     rsp, 20h", "jmp     loc_55EE"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "add~rax,0", "mov~r15,<TAG>", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r14,<TAG>", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r13,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~rbx,<TAG>", "mov~[rbp+0],rbx", "mov~rax,[rbp+0]", "add~rax,0", "mov~rcx,<TAG>", "mov~[rbp+0],rcx", "mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "push~[rbp+0]", "push~r15", "push~r14", "push~r13", "mov~r9,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [9, 2, 1, 10, 2, 49, 0, 3, 4, 1, 0.0004166666666666667, ["mov     rax, [rbp+authors]; jumptable 0000000000005153 case 9", "add     rax, 40h", "mov     rax, [rax]", "mov     [rbp+var_68], rax", "mov     rax, [rbp+authors]", "add     rax, 38h", "mov     rbx, [rax]", "mov     [rbp+var_70], rbx", "mov     rax, [rbp+authors]", "add     rax, 30h", "mov     r15, [rax]", "mov     rax, [rbp+authors]", "add     rax, 28h", "mov     r14, [rax]", "mov     rax, [rbp+authors]", "add     rax, 20h", "mov     r13, [rax]", "mov     rax, [rbp+authors]", "add     rax, 18h", "mov     rcx, [rax]", "mov     [rbp+var_78], rcx", "mov     rax, [rbp+authors]", "add     rax, 10h", "mov     rdx, [rax]", "mov     [rbp+var_80], rdx", "mov     rax, [rbp+authors]", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "sub     rsp, 8", "push    [rbp+var_68]", "push    [rbp+var_70]", "push    r15", "push    r14", "push    r13", "mov     r9, [rbp+var_78]", "mov     r8, [rbp+var_80]", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "add     rsp, 30h", "jmp     loc_55EE"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "add~rax,0", "mov~rbx,<TAG>", "mov~[rbp+0],rbx", "mov~rax,[rbp+0]", "add~rax,0", "mov~r15,<TAG>", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r14,<TAG>", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r13,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~rcx,<TAG>", "mov~[rbp+0],rcx", "mov~rax,[rbp+0]", "add~rax,0", "mov~rdx,<TAG>", "mov~[rbp+0],rdx", "mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "sub~rsp,0", "push~[rbp+0]", "push~[rbp+0]", "push~r15", "push~r14", "push~r13", "mov~r9,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [9, 2, 1, 10, 2, 49, 0, 3, 3, 1, 0.016666666666666666, ["mov     rax, [rbp+authors]; jumptable 0000000000005153 default case", "add     rax, 40h", "mov     rax, [rax]", "mov     [rbp+var_68], rax", "mov     rax, [rbp+authors]", "add     rax, 38h", "mov     rbx, [rax]", "mov     [rbp+var_70], rbx", "mov     rax, [rbp+authors]", "add     rax, 30h", "mov     r15, [rax]", "mov     rax, [rbp+authors]", "add     rax, 28h", "mov     r14, [rax]", "mov     rax, [rbp+authors]", "add     rax, 20h", "mov     r13, [rax]", "mov     rax, [rbp+authors]", "add     rax, 18h", "mov     rcx, [rax]", "mov     [rbp+var_78], rcx", "mov     rax, [rbp+authors]", "add     rax, 10h", "mov     rdi, [rax]", "mov     [rbp+var_80], rdi", "mov     rax, [rbp+authors]", "add     rax, 8", "mov     r12, [rax]", "mov     rax, [rbp+authors]", "mov     rbx, [rax]", "lea     rdi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "call    _gettext", "mov     rsi, rax; format", "mov     rax, [rbp+stream]", "sub     rsp, 8", "push    [rbp+var_68]", "push    [rbp+var_70]", "push    r15", "push    r14", "push    r13", "mov     r9, [rbp+var_78]", "mov     r8, [rbp+var_80]", "mov     rcx, r12", "mov     rdx, rbx", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "add     rsp, 30h", "jmp     short loc_55EE"], ["mov~rax,[rbp+0]", "add~rax,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "add~rax,0", "mov~rbx,<TAG>", "mov~[rbp+0],rbx", "mov~rax,[rbp+0]", "add~rax,0", "mov~r15,<TAG>", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r14,<TAG>", "mov~rax,[rbp+0]", "add~rax,<STR>", "mov~r13,<TAG>", "mov~rax,[rbp+0]", "add~rax,0", "mov~rcx,<TAG>", "mov~[rbp+0],rcx", "mov~rax,[rbp+0]", "add~rax,0", "mov~rdi,<TAG>", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "add~rax,0", "mov~r12,<TAG>", "mov~rax,[rbp+0]", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rax", "mov~rax,[rbp+0]", "sub~rsp,0", "push~[rbp+0]", "push~[rbp+0]", "push~r15", "push~r14", "push~r13", "mov~r9,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,r12", "mov~rdx,rbx", "mov~rdi,rax", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, 1, 0.0004166666666666667, ["nop; jumptable 0000000000005153 case 0"], ["nop"]], [3, 0, 13, 0, 4, 18, 0, 5, 2, 2, 0.1625, ["lea     rdi, aC; \"(C)\"", "call    _gettext", "mov     rdx, rax", "mov     rax, [rbp+stream]", "mov     ecx, 7E3h", "lea     rsi, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "lea     rdi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "call    _gettext", "mov     rdx, rax", "mov     rax, [rbp+stream]", "mov     rsi, rax; stream", "mov     rdi, rdx; s", "call    _fputs_unlocked", "cmp     [rbp+n_authors], 9; switch 10 cases", "ja      loc_553A; jumptable 0000000000005153 default case"], ["lea~rdi,<TAG>", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~ecx,0", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,rdx", "call~FOO", "cmp~[rbp+0],0", "ja~FOO"]], [1, 0, 14, 0, 1, 10, 0, 2, 1, 3, 0.029166666666666667, ["mov     rsi, [rbp+version]", "mov     rcx, [rbp+package]", "mov     rdx, [rbp+command_name]", "mov     rax, [rbp+stream]", "mov     r8, rsi", "lea     rsi, aSSS; \"%s (%s) %s\\n\"", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf", "jmp     short loc_50DB"], ["mov~rsi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~r8,rsi", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 0, 14, 0, 1, 7, 0, 1, 1, 3, 0.029166666666666667, ["mov     rcx, [rbp+version]", "mov     rdx, [rbp+package]", "mov     rax, [rbp+stream]", "lea     rsi, aSS_0; \"%s %s\\n\"", "mov     rdi, rax; stream", "mov     eax, 0", "call    _fprintf"], ["mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO"]], [1, 1, 16, 1, 0, 16, 0, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "push    rbx", "sub     rsp, 58h", "mov     [rbp+stream], rdi", "mov     [rbp+command_name], rsi", "mov     [rbp+package], rdx", "mov     [rbp+version], rcx", "mov     [rbp+authors], r8", "mov     [rbp+n_authors], r9", "cmp     [rbp+command_name], 0", "jz      short loc_50BB"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "push~rbx", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~[rbp+0],r9", "cmp~[rbp+0],0", "jz~FOO"]]], "func_feature": [26, 0, 40, 4, 17, 27, 2, 380, 0.02402, 16, 56], "succs": [[3], [0, 2, 4, 5, 6, 7, 8, 9, 10, 12], [3], [], [3], [3], [3], [3], [3], [3], [3], [3], [3], [1, 11], [13], [13], [14, 15]], "fname": "version_etc_arn", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 1, 13, 0, 1, 0, 0, 0.0, ["mov     r8, [rbp+n_authors]", "mov     rdi, [rbp+authors]", "mov     rcx, [rbp+version]; version", "mov     rdx, [rbp+package]; package", "mov     rsi, [rbp+command_name]; command_name", "mov     rax, [rbp+stream]", "mov     r9, r8; n_authors", "mov     r8, rdi; authors", "mov     rdi, rax; stream", "call    version_etc_arn", "nop", "leave", "retn"], ["mov~r8,[rbp+0]", "mov~rdi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~r9,r8", "mov~r8,rdi", "mov~rdi,rax", "call~FOO", "nop", "leave", "retn"]], [0, 0, 3, 1, 0, 7, 1, 1, 1, 0, 0.5, ["mov     rax, [rbp+n_authors]", "lea     rdx, ds:0[rax*8]", "mov     rax, [rbp+authors]", "add     rax, rdx", "mov     rax, [rax]", "test    rax, rax", "jnz     short loc_5624"], ["mov~rax,[rbp+0]", "lea~rdx,<TAG>", "mov~rax,[rbp+0]", "add~rax,rdx", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [2, 0, 3, 1, 0, 10, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+stream], rdi", "mov     [rbp+command_name], rsi", "mov     [rbp+package], rdx", "mov     [rbp+version], rcx", "mov     [rbp+authors], r8", "mov     [rbp+n_authors], 0", "jmp     short loc_5629"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 3, 1, 0, 1, 0, 0, 2, 0, 0.0, ["add     [rbp+n_authors], 1"], ["add~[rbp+0],0"]]], "func_feature": [1, 1, 3, 0, 4, 4, 0, 31, 0.125, 0, 3], "succs": [[], [0, 3], [1], [1]], "fname": "version_etc_ar", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 2, 0, 1, 14, 1, 2, 0, 0, 0.19444444444444442, ["mov     r8, [rbp+n_authors]", "lea     rdi, [rbp+authtab]", "mov     rcx, [rbp+version]; version", "mov     rdx, [rbp+package]; package", "mov     rsi, [rbp+command_name]; command_name", "mov     rax, [rbp+stream]", "mov     r9, r8; n_authors", "mov     r8, rdi; authors", "mov     rdi, rax; stream", "call    version_etc_arn", "nop", "mov     rax, [rbp+var_8]", "xor     rax, fs:28h", "jz      short locret_576D"], ["mov~r8,[rbp+0]", "lea~rdi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~r9,r8", "mov~r8,rdi", "mov~rdi,rax", "call~FOO", "nop", "mov~rax,[rbp+0]", "xor~rax,<TAG>", "jz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 1, 2, 0.3055555555555555, ["cmp     [rbp+n_authors], 9", "ja      short loc_572C"], ["cmp~[rbp+0],0", "ja~FOO"]], [0, 0, 9, 0, 0, 7, 1, 1, 4, 2, 0.29166666666666663, ["mov     rdx, [rax]", "mov     rax, [rbp+n_authors]", "mov     [rbp+rax*8+authtab], rdx", "mov     rax, [rbp+n_authors]", "mov     rax, [rbp+rax*8+authtab]", "test    rax, rax", "jnz     short loc_56AE"], ["mov~rdx,<TAG>", "mov~rax,[rbp+0]", "mov~[rbp+0],rdx", "mov~rax,[rbp+0]", "mov~rax,[rbp+0]", "test~rax,rax", "jnz~FOO"]], [1, 0, 9, 0, 0, 4, 0, 1, 2, 4, 0.20833333333333331, ["mov     rax, [rbp+authors]", "mov     eax, [rax]", "cmp     eax, 2Fh ; '/'", "ja      short loc_56F8"], ["mov~rax,[rbp+0]", "mov~eax,<TAG>", "cmp~eax,0", "ja~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 9, 1, 0, 12, 0, 1, 3, 3, 0.07638888888888888, ["mov     rax, [rbp+authors]", "mov     rdx, [rax+10h]", "mov     rax, [rbp+authors]", "mov     eax, [rax]", "mov     eax, eax", "add     rax, rdx", "mov     rdx, [rbp+authors]", "mov     edx, [rdx]", "lea     ecx, [rdx+8]", "mov     rdx, [rbp+authors]", "mov     [rdx], ecx", "jmp     short loc_5712"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~eax,<TAG>", "mov~eax,eax", "add~rax,rdx", "mov~rdx,[rbp+0]", "mov~edx,<TAG>", "lea~ecx,[rdx+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,ecx", "jmp~FOO"]], [0, 0, 9, 0, 0, 5, 0, 0, 3, 3, 0.07638888888888888, ["mov     rax, [rbp+authors]", "mov     rax, [rax+8]", "lea     rcx, [rax+8]", "mov     rdx, [rbp+authors]", "mov     [rdx+8], rcx"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "lea~rcx,[rax+0]", "mov~rdx,[rbp+0]", "mov~[rdx+0],rcx"]], [2, 0, 9, 1, 0, 13, 1, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 0A0h", "mov     [rbp+stream], rdi", "mov     [rbp+command_name], rsi", "mov     [rbp+package], rdx", "mov     [rbp+version], rcx", "mov     [rbp+authors], r8", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "mov     [rbp+n_authors], 0", "jmp     short loc_56B3"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 9, 1, 0, 1, 0, 0, 5, 3, 0.15277777777777776, ["add     [rbp+n_authors], 1"], ["add~[rbp+0],0"]]], "func_feature": [2, 3, 8, 1, 10, 12, 1, 61, 0.13056, 1, 3], "succs": [[8, 4], [0, 3], [0, 9], [5, 6], [], [2], [2], [1], [], [1]], "fname": "version_etc_va", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 1, 2, 0, 1, 21, 2, 2, 1, 1, 0.3333333333333333, ["mov     rax, fs:28h", "mov     [rbp+var_B8], rax", "xor     eax, eax", "mov     [rbp+authors.gp_offset], 20h ; ' '", "mov     [rbp+authors.fp_offset], 30h ; '0'", "lea     rax, [rbp+arg_0]", "mov     [rbp+authors.overflow_arg_area], rax", "lea     rax, [rbp+var_B0]", "mov     [rbp+authors.reg_save_area], rax", "lea     rdi, [rbp+authors]", "mov     rcx, [rbp+version]; version", "mov     rdx, [rbp+package]; package", "mov     rsi, [rbp+command_name]; command_name", "mov     rax, [rbp+stream]", "mov     r8, rdi; authors", "mov     rdi, rax; stream", "call    version_etc_va", "nop", "mov     rax, [rbp+var_B8]", "xor     rax, fs:28h", "jz      short locret_584D"], ["mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],<STR>", "mov~[rbp+0],0", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rdi,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~r8,rdi", "mov~rdi,rax", "call~FOO", "nop", "mov~rax,[rbp+0]", "xor~rax,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 3, 0, 0, 8, 0, 0, 1, 2, 0.0, ["movaps  [rbp+var_80], xmm0", "movaps  [rbp+var_70], xmm1", "movaps  [rbp+var_60], xmm2", "movaps  [rbp+var_50], xmm3", "movaps  [rbp+var_40], xmm4", "movaps  [rbp+var_30], xmm5", "movaps  [rbp+var_20], xmm6", "movaps  [rbp+var_10], xmm7"], ["movaps~[rbp+0],xmm0", "movaps~[rbp+0],xmm1", "movaps~[rbp+0],xmm2", "movaps~[rbp+0],xmm3", "movaps~[rbp+0],xmm4", "movaps~[rbp+0],xmm5", "movaps~[rbp+0],xmm6", "movaps~[rbp+0],xmm7"]], [1, 0, 4, 1, 0, 11, 1, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 0F0h", "mov     [rbp+stream], rdi", "mov     [rbp+command_name], rsi", "mov     [rbp+package], rdx", "mov     [rbp+version], rcx", "mov     [rbp+var_90], r8", "mov     [rbp+var_88], r9", "test    al, al", "jz      short loc_57C8"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r8", "mov~[rbp+0],r9", "test~al,al", "jz~FOO"]]], "func_feature": [2, 3, 4, 12, 5, 5, 1, 43, 0.06667, 1, 1], "succs": [[], [0, 2], [], [1], [1, 3]], "fname": "version_etc", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[4, 0, 0, 2, 6, 28, 0, 6, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "push    rbx", "sub     rsp, 8", "lea     rdi, aReportBugsToS; \"\\nReport bugs to: %s\\n\"", "call    _gettext", "lea     rsi, aBugCoreutilsGn; \"bug-coreutils@gnu.org\"", "mov     rdi, rax; format", "mov     eax, 0", "call    _printf", "lea     rdi, aSHomePageS; \"%s home page: <%s>\\n\"", "call    _gettext", "lea     rdx, aHttpsWwwGnuOrg_0; \"https://www.gnu.org/software/coreutils/\"", "lea     rsi, aGnuCoreutils_0; \"GNU coreutils\"", "mov     rdi, rax; format", "mov     eax, 0", "call    _printf", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rdi, aGeneralHelpUsi; \"General help using GNU software: <https\"...", "call    _gettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "nop", "add     rsp, 8", "pop     rbx", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "push~rbx", "sub~rsp,0", "lea~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~eax,0", "call~FOO", "mov~rbx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "nop", "add~rsp,0", "pop~rbx", "pop~rbp", "retn"]]], "func_feature": [6, 0, 6, 0, 1, 0, 0, 28, 0.0, 7, 2], "succs": [[]], "fname": "emit_bug_reporting_address", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[2, 0, 6, 2, 0, 9, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+n], rdi", "mov     [rbp+s], rsi", "mov     ecx, 0", "mov     rax, [rbp+n]", "mul     [rbp+s]", "jno     short loc_58E9"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~ecx,0", "mov~rax,[rbp+0]", "mul~,[rbp+0]", "jno~FOO"]], [1, 0, 5, 0, 0, 1, 0, 0, 0, 3, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [0, 0, 4, 0, 0, 2, 1, 0, 0, 2, 0.26666666666666666, ["test    rax, rax", "jns     short loc_58F3"], ["test~rax,rax", "jns~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 0, 2, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [0, 0, 0, 1, 1, 6, 0, 1, 0, 0, 0.0, ["mov     rax, [rbp+n]", "imul    rax, [rbp+s]", "mov     rdi, rax; n", "call    xmalloc", "leave", "retn"], ["mov~rax,[rbp+0]", "imul~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "leave", "retn"]], [1, 0, 2, 0, 0, 4, 2, 1, 0, 1, 0.26666666666666666, ["mov     rax, rcx", "and     eax, 1", "test    al, al", "jz      short loc_5902"], ["mov~rax,rcx", "and~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 3, 3, 0, 7, 8, 0, 24, 0.07619, 0, 3], "succs": [[1, 2], [2], [3, 5], [5], [], [4, 6], []], "fname": "xnmalloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 4, 0, 0, 2, 1, 0, 0, 0, 0.26666666666666666, ["test    rax, rax", "jns     short loc_5947"], ["test~rax,rax", "jns~FOO"]], [1, 1, 6, 2, 0, 10, 0, 0, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+p], rdi", "mov     [rbp+n], rsi", "mov     [rbp+s], rdx", "mov     ecx, 0", "mov     rax, [rbp+n]", "mul     [rbp+s]", "jno     short loc_593D"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~ecx,0", "mov~rax,[rbp+0]", "mul~,[rbp+0]", "jno~FOO"]], [1, 0, 5, 0, 0, 1, 0, 0, 1, 3, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [1, 0, 3, 0, 0, 1, 0, 0, 2, 2, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [1, 0, 2, 0, 0, 4, 2, 1, 2, 1, 0.26666666666666666, ["mov     rax, rcx", "and     eax, 1", "test    al, al", "jz      short loc_5956"], ["mov~rax,rcx", "and~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 1, 1, 9, 0, 1, 3, 0, 0.0, ["mov     rax, [rbp+n]", "imul    rax, [rbp+s]", "mov     rdx, rax", "mov     rax, [rbp+p]", "mov     rsi, rdx; n", "mov     rdi, rax; p", "call    xrealloc", "leave", "retn"], ["mov~rax,[rbp+0]", "imul~rax,[rbp+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [2, 3, 3, 0, 7, 8, 0, 28, 0.07619, 0, 3], "succs": [[3, 4], [0, 2], [0], [4], [5, 6], [], []], "fname": "xnrealloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[2, 0, 1, 2, 0, 7, 0, 0, 0, 0, 0.015151515151515152, ["mov     rax, [rbp+n]", "shr     rax, 1", "mov     rdx, rax", "mov     rax, [rbp+n]", "add     rax, rdx", "add     rax, 1", "mov     [rbp+n], rax"], ["mov~rax,[rbp+0]", "shr~rax,0", "mov~rdx,rax", "mov~rax,[rbp+0]", "add~rax,rdx", "add~rax,0", "mov~[rbp+0],rax"]], [2, 0, 3, 1, 0, 5, 0, 0, 1, 2, 0.022727272727272728, ["mov     rax, 5555555555555554h", "mov     edx, 0", "div     [rbp+s]", "cmp     [rbp+n], rax", "jb      short loc_5A0C"], ["mov~rax,0", "mov~edx,0", "div~,[rbp+0]", "cmp~[rbp+0],rax", "jb~FOO"]], [2, 0, 12, 1, 0, 11, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+p], rdi", "mov     [rbp+pn], rsi", "mov     [rbp+s], rdx", "mov     rax, [rbp+pn]", "mov     rax, [rax]", "mov     [rbp+n], rax", "cmp     [rbp+p], 0", "jnz     short loc_59EE"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~rax,[rbp+0]", "mov~rax,<TAG>", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 2, 0, 0, 4, 2, 1, 4, 1, 0.09848484848484848, ["mov     rax, rcx", "and     eax, 1", "test    al, al", "jz      short loc_5A25"], ["mov~rax,rcx", "and~eax,0", "test~al,al", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 0, 3, 2, 0.14393939393939395, ["test    rax, rax", "jns     short loc_59DF"], ["test~rax,rax", "jns~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 4, 2, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 1, 1, 12, 0, 1, 3, 0, 0.0, ["mov     rax, [rbp+pn]", "mov     rdx, [rbp+n]", "mov     [rax], rdx", "mov     rax, [rbp+n]", "imul    rax, [rbp+s]", "mov     rdx, rax", "mov     rax, [rbp+p]", "mov     rsi, rdx; n", "mov     rdi, rax; p", "call    xrealloc", "leave", "retn"], ["mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rdx", "mov~rax,[rbp+0]", "imul~rax,[rbp+0]", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "leave", "retn"]], [1, 0, 6, 1, 0, 4, 0, 0, 2, 3, 0.12878787878787878, ["mov     ecx, 0", "mov     rax, [rbp+n]", "mul     [rbp+s]", "jno     short loc_59D5"], ["mov~ecx,0", "mov~rax,[rbp+0]", "mul~,[rbp+0]", "jno~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 1, 4, 0.05303030303030303, ["cmp     [rbp+n], 0", "jnz     short loc_59C1"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 1, 7, 2, 0, 8, 0, 0, 2, 4, 0.0, ["mov     eax, 80h", "mov     edx, 0", "div     [rbp+s]", "mov     [rbp+n], rax", "cmp     [rbp+n], 0", "setz    al", "movzx   eax, al", "add     [rbp+n], rax"], ["mov~eax,<STR>", "mov~edx,0", "div~,[rbp+0]", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "setz~al", "movzx~eax,al", "add~[rbp+0],rax"]], [1, 0, 5, 0, 0, 1, 0, 0, 3, 3, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]]], "func_feature": [3, 3, 6, 0, 13, 16, 1, 59, 0.03555, 0, 8], "succs": [[8], [0, 7], [1, 10], [8, 6], [3, 5], [3], [], [], [], [4, 12], [9, 11], [9], [4]], "fname": "x2nrealloc", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 0, 0, 1, 1, 9, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+n], rdi", "mov     rax, [rbp+n]", "mov     rdi, rax; n", "call    xmalloc", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 9, 0.0, 0, 1], "succs": [[]], "fname": "xcharalloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 1, 3, 1, 1, 10, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+n], rdi", "mov     rax, [rbp+n]", "mov     rdi, rax; size", "call    _malloc", "mov     [rbp+p], rax", "cmp     [rbp+p], 0", "jnz     short loc_5A96"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 0, 1, 0.16666666666666666, ["cmp     [rbp+n], 0", "jz      short loc_5A96"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+p]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]]], "func_feature": [2, 0, 4, 0, 4, 4, 7, 16, 0.04167, 0, 1], "succs": [[2, 3], [], [1, 3], []], "fname": "xmalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 0, 4, 0, 1, 8, 0, 2, 0, 0, 0.15476190476190477, ["mov     rdx, [rbp+n]", "mov     rax, [rbp+p]", "mov     rsi, rdx; size", "mov     rdi, rax; ptr", "call    _realloc", "mov     [rbp+p], rax", "cmp     [rbp+p], 0", "jnz     short loc_5AF7"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 7, 1, 0, 7, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+p], rdi", "mov     [rbp+n], rsi", "cmp     [rbp+n], 0", "jnz     short loc_5ACD"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 1, 2, 0.03571428571428571, ["cmp     [rbp+p], 0", "jz      short loc_5ACD"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 1, 0, 1, 5, 0, 2, 2, 1, 0.03571428571428571, ["mov     rax, [rbp+p]", "mov     rdi, rax; ptr", "call    _free", "mov     eax, 0", "jmp     short locret_5AFB"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.07142857142857142, ["cmp     [rbp+n], 0", "jz      short loc_5AF7"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.05952380952380952, ["mov     rax, [rbp+p]"], ["mov~rax,[rbp+0]"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [3, 0, 8, 0, 8, 10, 3, 28, 0.04464, 0, 1], "succs": [[4, 6], [0, 2], [0, 3], [7], [5, 6], [], [7], []], "fname": "xrealloc", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[2, 0, 0, 1, 1, 13, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+p], rdi", "mov     [rbp+pn], rsi", "mov     rcx, [rbp+pn]", "mov     rax, [rbp+p]", "mov     edx, 1; s", "mov     rsi, rcx; pn", "mov     rdi, rax; p", "call    x2nrealloc", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~edx,0", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 13, 0.0, 0, 1], "succs": [[]], "fname": "x2realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[2, 0, 0, 1, 2, 15, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+s], rdi", "mov     rax, [rbp+s]", "mov     rdi, rax; n", "call    xmalloc", "mov     rcx, rax", "mov     rax, [rbp+s]", "mov     rdx, rax; n", "mov     esi, 0; c", "mov     rdi, rcx; s", "call    _memset", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rcx,rax", "mov~rax,[rbp+0]", "mov~rdx,rax", "mov~esi,0", "mov~rdi,rcx", "call~FOO", "leave", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 0, 15, 0.0, 0, 1], "succs": [[]], "fname": "xzalloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 0, 4, 0, 0, 1, 0, 0, 0, 0, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [0, 0, 5, 0, 0, 2, 1, 0, 1, 3, 0.23809523809523808, ["test    rax, rax", "jns     short loc_5B86"], ["test~rax,rax", "jns~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 3, 0, 0, 4, 2, 1, 2, 2, 0.2857142857142857, ["mov     rax, rcx", "and     eax, 1", "test    al, al", "jnz     short loc_5BAE"], ["mov~rax,rcx", "and~eax,0", "test~al,al", "jnz~FOO"]], [1, 0, 2, 0, 1, 8, 0, 2, 3, 1, 0.11904761904761904, ["mov     rdx, [rbp+s]", "mov     rax, [rbp+n]", "mov     rsi, rdx; size", "mov     rdi, rax; nmemb", "call    _calloc", "mov     [rbp+p], rax", "cmp     [rbp+p], 0", "jnz     short loc_5BB3"], ["mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 1, 7, 2, 0, 9, 0, 0, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+n], rdi", "mov     [rbp+s], rsi", "mov     ecx, 0", "mov     rax, [rbp+n]", "mul     [rbp+s]", "jno     short loc_5B7C"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~ecx,0", "mov~rax,[rbp+0]", "mul~,[rbp+0]", "jno~FOO"]], [1, 0, 6, 0, 0, 1, 0, 0, 1, 4, 0.0, ["mov     ecx, 1"], ["mov~ecx,0"]], [0, 0, 0, 0, 0, 3, 0, 0, 4, 0, 0.0, ["mov     rax, [rbp+p]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]]], "func_feature": [2, 3, 4, 0, 8, 10, 0, 29, 0.08036, 0, 2], "succs": [[3], [0, 3], [], [2, 4], [2, 7], [1, 6], [1], []], "fname": "xcalloc", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 0, 0, 1, 2, 16, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+p], rdi", "mov     [rbp+s], rsi", "mov     rax, [rbp+s]", "mov     rdi, rax; n", "call    xmalloc", "mov     rcx, rax", "mov     rdx, [rbp+s]; n", "mov     rax, [rbp+p]", "mov     rsi, rax; src", "mov     rdi, rcx; dest", "call    _memcpy", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rcx,rax", "mov~rdx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~rdi,rcx", "call~FOO", "leave", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 2, 16, 0.0, 0, 1], "succs": [[]], "fname": "xmemdup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 0, 0, 1, 2, 14, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+string], rdi", "mov     rax, [rbp+string]", "mov     rdi, rax; s", "call    _strlen", "lea     rdx, [rax+1]", "mov     rax, [rbp+string]", "mov     rsi, rdx; s", "mov     rdi, rax; p", "call    xmemdup", "leave", "retn"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "lea~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rsi,rdx", "mov~rdi,rax", "call~FOO", "leave", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 0, 14, 0.0, 0, 1], "succs": [[]], "fname": "xstrdup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[2, 0, 0, 0, 3, 13, 0, 3, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "lea     rdi, aMemoryExhauste; \"memory exhausted\"", "call    _gettext", "mov     rdx, rax", "mov     eax, cs:exit_failure", "mov     rcx, rdx", "lea     rdx, aS; \"%s\"", "mov     esi, 0; errnum", "mov     edi, eax; status", "mov     eax, 0", "call    _error", "call    _abort"], ["push~rbp", "mov~rbp,rsp", "lea~rdi,<TAG>", "call~FOO", "mov~rdx,rax", "mov~eax,<TAG>", "mov~rcx,rdx", "lea~rdx,<TAG>", "mov~esi,0", "mov~edi,eax", "mov~eax,0", "call~FOO", "call~FOO"]]], "func_feature": [3, 0, 3, 0, 1, 0, 8, 13, 0.0, 3, 0], "succs": [[]], "fname": "xalloc_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "nop", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "nop", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 5, 0.0, 0, 0], "succs": [[]], "fname": "xset_binary_mode_error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 0, 2, 1, 1, 12, 1, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+fd], edi", "mov     [rbp+mode], esi", "mov     edx, [rbp+mode]", "mov     eax, [rbp+fd]", "mov     esi, edx; mode", "mov     edi, eax; fd", "call    set_binary_mode", "test    eax, eax", "jns     short loc_5C80"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],esi", "mov~edx,[rbp+0]", "mov~eax,[rbp+0]", "mov~esi,edx", "mov~edi,eax", "call~FOO", "test~eax,eax", "jns~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["nop", "leave", "retn"], ["nop", "leave", "retn"]], [0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0.0, ["call    xset_binary_mode_error"], ["call~FOO"]]], "func_feature": [2, 1, 2, 0, 3, 3, 1, 16, 0.0, 0, 1], "succs": [[1, 2], [], [1]], "fname": "xset_binary_mode", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.19444444444444442, ["mov     rdi, [rbp+var_8]", "xor     rdi, fs:28h", "jz      short locret_5D27"], ["mov~rdi,[rbp+0]", "xor~rdi,<TAG>", "jz~FOO"]], [1, 0, 3, 0, 0, 8, 0, 1, 4, 2, 0.020833333333333332, ["mov     rax, [rbp+s]", "movzx   eax, byte ptr [rax]", "mov     [rbp+uc], al", "movzx   edx, [rbp+uc]", "mov     rax, [rbp+pwc]", "mov     [rax], edx", "mov     eax, 1", "jmp     short loc_5D13"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "mov~[rbp+0],al", "movzx~edx,[rbp+0]", "mov~rax,[rbp+0]", "mov~<TAG>,edx", "mov~eax,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 2, 2, 0.1875, ["mov     rax, [rbp+ret]"], ["mov~rax,[rbp+0]"]], [1, 0, 6, 0, 0, 2, 0, 1, 2, 3, 0.08333333333333333, ["cmp     [rbp+n], 0", "jz      short loc_5D0F"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 7, 0, 1, 9, 0, 1, 1, 3, 0.19444444444444442, ["mov     rcx, [rbp+ps]; p", "mov     rdx, [rbp+n]; n", "mov     rsi, [rbp+s]; s", "mov     rax, [rbp+pwc]", "mov     rdi, rax; pwc", "call    _mbrtowc", "mov     [rbp+ret], rax", "cmp     [rbp+ret], 0FFFFFFFFFFFFFFFDh", "jbe     short loc_5D0F"], ["mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jbe~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [2, 0, 5, 0, 1, 5, 2, 2, 3, 3, 0.05555555555555555, ["mov     edi, 0; category", "call    hard_locale", "xor     eax, 1", "test    al, al", "jz      short loc_5D0F"], ["mov~edi,0", "call~FOO", "xor~eax,0", "test~al,al", "jz~FOO"]], [2, 0, 9, 1, 0, 12, 1, 1, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 40h", "mov     [rbp+pwc], rdi", "mov     [rbp+s], rsi", "mov     [rbp+n], rdx", "mov     [rbp+ps], rcx", "mov     rax, fs:28h", "mov     [rbp+var_8], rax", "xor     eax, eax", "cmp     [rbp+pwc], 0", "jnz     short loc_5CB9"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],rdx", "mov~[rbp+0],rcx", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 8, 0, 0, 2, 0, 0, 1, 4, 0.0, ["lea     rax, [rbp+wc]", "mov     [rbp+pwc], rax"], ["lea~rax,[rbp+0]", "mov~[rbp+0],rax"]]], "func_feature": [3, 4, 8, 1, 10, 13, 1, 45, 0.07361, 1, 1], "succs": [[5, 6], [0], [0], [2, 7], [2, 3], [], [], [1, 2], [9, 4], [4]], "fname": "rpl_mbrtowc", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+fd], edi", "mov     [rbp+mode], esi", "mov     eax, 0", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~[rbp+0],esi", "mov~eax,0", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 7, 0.0, 0, 0], "succs": [[]], "fname": "__gl_setmode", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+fd], edi", "mov     eax, 0", "pop     rbp", "retn"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,0", "pop~rbp", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 6, 0.0, 0, 0], "succs": [[]], "fname": "__gl_setmode_check", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 1, 0, 1, 6, 0, 2, 0, 0, 0.08333333333333333, ["mov     edx, [rbp+mode]", "mov     eax, [rbp+fd]", "mov     esi, edx; mode", "mov     edi, eax; fd", "call    __gl_setmode", "jmp     short locret_5D7D"], ["mov~edx,[rbp+0]", "mov~eax,[rbp+0]", "mov~esi,edx", "mov~edi,eax", "call~FOO", "jmp~FOO"]], [2, 0, 3, 1, 1, 11, 0, 2, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 18h", "mov     [rbp+fd], edi", "mov     [rbp+mode], esi", "mov     eax, [rbp+fd]", "mov     edi, eax; fd", "call    __gl_setmode_check", "mov     [rbp+r], eax", "cmp     [rbp+r], 0", "jnz     short loc_5D7A"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],edi", "mov~[rbp+0],esi", "mov~eax,[rbp+0]", "mov~edi,eax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0.08333333333333333, ["mov     eax, [rbp+r]"], ["mov~eax,[rbp+0]"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [2, 0, 4, 0, 4, 4, 1, 20, 0.04167, 0, 1], "succs": [[3], [0, 2], [3], []], "fname": "set_binary_mode", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0.07142857142857142, ["nop"], ["nop"]], [1, 0, 6, 0, 2, 12, 0, 3, 1, 3, 0.11904761904761904, ["movzx   eax, byte ptr [p1]", "movzx   eax, al", "mov     edi, eax; c", "call    c_tolower", "mov     [rbp+c1], al", "movzx   eax, byte ptr [p2]", "movzx   eax, al", "mov     edi, eax; c", "call    c_tolower", "mov     [rbp+c2], al", "cmp     [rbp+c1], 0", "jz      short loc_5DE1"], ["movzx~eax,<TAG>", "movzx~eax,al", "mov~edi,eax", "call~FOO", "mov~[rbp+0],al", "movzx~eax,<TAG>", "movzx~eax,al", "mov~edi,eax", "call~FOO", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.023809523809523808, ["mov     eax, 0", "jmp     short loc_5DEE"], ["mov~eax,0", "jmp~FOO"]], [0, 1, 7, 1, 0, 11, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "push    p1", "push    p2", "sub     rsp, 20h", "mov     [rbp+s1], rdi", "mov     [rbp+s2], rsi", "mov     p1, [rbp+s1]", "mov     p2, [rbp+s2]", "cmp     p1, p2", "jnz     short loc_5DA6"], ["push~rbp", "mov~rbp,rsp", "push~p1", "push~p2", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~p1,[rbp+0]", "mov~p2,[rbp+0]", "cmp~p1,p2", "jnz~FOO"]], [0, 0, 1, 1, 0, 4, 0, 0, 3, 1, 0.09523809523809523, ["movzx   edx, [rbp+c1]", "movzx   eax, [rbp+c2]", "sub     edx, eax", "mov     eax, edx"], ["movzx~edx,[rbp+0]", "movzx~eax,[rbp+0]", "sub~edx,eax", "mov~eax,edx"]], [0, 0, 2, 0, 0, 1, 0, 1, 3, 2, 0.047619047619047616, ["jmp     short loc_5DE2"], ["jmp~FOO"]], [2, 0, 6, 2, 0, 5, 0, 1, 2, 3, 0.047619047619047616, ["add     p1, 1", "add     p2, 1", "movzx   eax, [rbp+c1]", "cmp     al, [rbp+c2]", "jz      short loc_5DA6"], ["add~p1,0", "add~p2,0", "movzx~eax,[rbp+0]", "cmp~al,[rbp+0]", "jz~FOO"]], [0, 1, 0, 1, 0, 5, 0, 0, 2, 0, 0.0, ["add     rsp, 20h", "pop     p2", "pop     p1", "pop     rbp", "retn"], ["add~rsp,<STR>", "pop~p2", "pop~p1", "pop~rbp", "retn"]]], "func_feature": [2, 0, 7, 0, 8, 10, 2, 41, 0.0506, 0, 5], "succs": [[4], [0, 6], [7], [1, 2], [7], [4], [1, 5], []], "fname": "c_strcasecmp", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 0, 0.05357142857142857, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_5E80"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 0, 0.05357142857142857, ["mov     eax, 0"], ["mov~eax,0"]], [1, 1, 8, 1, 3, 24, 3, 4, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+stream], rdi", "mov     rax, [rbp+stream]", "mov     rdi, rax; fp", "call    ___fpending", "test    rax, rax", "setnz   al", "mov     [rbp+some_pending], al", "mov     rax, [rbp+stream]", "mov     rdi, rax; stream", "call    _ferror_unlocked", "test    eax, eax", "setnz   al", "mov     [rbp+prev_fail], al", "mov     rax, [rbp+stream]", "mov     rdi, rax; fp", "call    rpl_fclose", "test    eax, eax", "setnz   al", "mov     [rbp+fclose_fail], al", "cmp     [rbp+prev_fail], 0", "jnz     short loc_5E5E"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~rax,rax", "setnz~al", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~eax,eax", "setnz~al", "mov~[rbp+0],al", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~eax,eax", "setnz~al", "mov~[rbp+0],al", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 4, 2, 1, 1, 0, 0.1607142857142857, ["movzx   eax, [rbp+fclose_fail]", "xor     eax, 1", "test    al, al", "jz      short loc_5E74"], ["movzx~eax,[rbp+0]", "xor~eax,0", "test~al,al", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 2, 0, 0.08928571428571427, ["cmp     [rbp+some_pending], 0", "jnz     short loc_5E5E"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 5, 0, 1, 4, 0, 2, 3, 0, 0.026785714285714284, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 9", "jz      short loc_5E7B"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 1, 0, 0.0625, ["cmp     [rbp+fclose_fail], 0", "jz      short loc_5E7B"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 2, 0, 1, 2, 0, 1, 2, 0, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 0"], ["call~FOO", "mov~<TAG>,0"]]], "func_feature": [5, 5, 11, 0, 9, 13, 2, 43, 0.0496, 0, 1], "succs": [[], [0], [0], [4, 7], [8, 1], [4, 6], [2, 4], [2, 5], [1]], "fname": "close_stream", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 3, 0, 1, 6, 1, 2, 0, 0, 0.16666666666666666, ["mov     rax, [rbp+p]", "lea     rsi, aC_0; \"C\"", "mov     rdi, rax; s1", "call    _strcmp", "test    eax, eax", "jz      short loc_5ED9"], ["mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [3, 1, 4, 1, 1, 12, 0, 2, 0, 1, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+category], edi", "mov     [rbp+hard], 1", "mov     eax, [rbp+category]", "mov     esi, 0; locale", "mov     edi, eax; category", "call    _setlocale", "mov     [rbp+p], rax", "cmp     [rbp+p], 0", "jz      short loc_5EDD"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],edi", "mov~[rbp+0],0", "mov~eax,[rbp+0]", "mov~esi,0", "mov~edi,eax", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.041666666666666664, ["mov     [rbp+hard], 0"], ["mov~[rbp+0],0"]], [0, 0, 2, 0, 1, 6, 1, 2, 2, 1, 0.041666666666666664, ["mov     rax, [rbp+p]", "lea     rsi, aPosix; \"POSIX\"", "mov     rdi, rax; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_5EDD"], ["mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0.0, ["movzx   eax, [rbp+hard]", "leave", "retn"], ["movzx~eax,[rbp+0]", "leave", "retn"]]], "func_feature": [3, 2, 6, 0, 5, 7, 1, 28, 0.05, 2, 1], "succs": [[2, 3], [0, 4], [4], [2, 4], []], "fname": "hard_locale", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     rax, [rbp+codeset]", "leave", "retn"], ["mov~rax,[rbp+0]", "leave", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 1, 0, 0.3333333333333333, ["mov     rax, [rbp+codeset]", "movzx   eax, byte ptr [rax]", "test    al, al", "jnz     short loc_5F21"], ["mov~rax,[rbp+0]", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 2, 0, 0.0, ["lea     rax, aAscii; \"ASCII\"", "mov     [rbp+codeset], rax"], ["lea~rax,<TAG>", "mov~[rbp+0],rax"]], [3, 0, 4, 1, 1, 8, 0, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     edi, 0Eh; item", "call    _nl_langinfo", "mov     [rbp+codeset], rax", "cmp     [rbp+codeset], 0", "jnz     short loc_5F0B"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~edi,0", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 0, 1, 0, 0.0, ["lea     rax, unk_726B", "mov     [rbp+codeset], rax"], ["lea~rax,<TAG>", "mov~[rbp+0],rax"]]], "func_feature": [1, 1, 3, 0, 5, 6, 1, 19, 0.06667, 2, 1], "succs": [[], [0, 2], [0], [1, 4], [1]], "fname": "locale_charset", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 1, 0, 1, 4, 0, 2, 0, 0, 0.013888888888888888, ["mov     rax, [rbp+fp]", "mov     rdi, rax; stream", "call    _fclose", "jmp     short locret_5FDD"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [3, 1, 9, 1, 1, 12, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 20h", "mov     [rbp+fp], rdi", "mov     [rbp+saved_errno], 0", "mov     [rbp+result], 0", "mov     rax, [rbp+fp]", "mov     rdi, rax; stream", "call    _fileno", "mov     [rbp+fd], eax", "cmp     [rbp+fd], 0", "jns     short loc_5F64"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,<STR>", "mov~[rbp+0],rdi", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jns~FOO"]], [1, 0, 3, 0, 1, 6, 0, 2, 3, 2, 0.19444444444444442, ["mov     rax, [rbp+fp]", "mov     rdi, rax; stream", "call    _fclose", "mov     [rbp+result], eax", "cmp     [rbp+saved_errno], 0", "jz      short loc_5FDA"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~[rbp+0],eax", "cmp~[rbp+0],0", "jz~FOO"]], [3, 0, 6, 0, 2, 9, 0, 3, 2, 3, 0.048611111111111105, ["mov     rax, [rbp+fp]", "mov     rdi, rax; stream", "call    _fileno", "mov     edx, 1; whence", "mov     esi, 0; offset", "mov     edi, eax; fd", "call    _lseek", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      short loc_5FB1"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~edx,0", "mov~esi,0", "mov~edi,eax", "call~FOO", "cmp~rax,0", "jz~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 2, 3, 0.09027777777777778, ["mov     rax, [rbp+fp]", "mov     rdi, rax; stream", "call    rpl_fflush", "test    eax, eax", "jz      short loc_5FB1"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 4, 0, 1, 3, 0, 1, 3, 3, 0.0, ["call    ___errno_location", "mov     eax, [rax]", "mov     [rbp+saved_errno], eax"], ["call~FOO", "mov~eax,<TAG>", "mov~[rbp+0],eax"]], [0, 0, 7, 0, 1, 5, 1, 2, 1, 4, 0.08333333333333333, ["mov     rax, [rbp+fp]", "mov     rdi, rax; fp", "call    ___freading", "test    eax, eax", "jz      short loc_5F97"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 2, 0, 1, 5, 0, 1, 4, 2, 0.0, ["call    ___errno_location", "mov     rdx, rax", "mov     eax, [rbp+saved_errno]", "mov     [rdx], eax", "mov     [rbp+result], 0FFFFFFFFh"], ["call~FOO", "mov~rdx,rax", "mov~eax,[rbp+0]", "mov~<TAG>,eax", "mov~[rbp+0],0"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, 1, 0.08333333333333333, ["mov     eax, [rbp+result]"], ["mov~eax,[rbp+0]"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]]], "func_feature": [9, 2, 14, 0, 10, 14, 1, 52, 0.05139, 0, 1], "succs": [[9], [0, 6], [8, 7], [2, 4], [2, 5], [2], [3, 4], [8], [9], []], "fname": "rpl_fclose", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[2, 0, 2, 1, 0, 9, 2, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+fp], rdi", "mov     rax, [rbp+fp]", "mov     eax, [rax]", "and     eax, 100h", "test    eax, eax", "jz      short loc_6010"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~rax,[rbp+0]", "mov~eax,<TAG>", "and~eax,0", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["nop", "leave", "retn"], ["nop", "leave", "retn"]], [2, 0, 1, 0, 1, 5, 0, 1, 0, 1, 0.0, ["mov     rax, [rbp+fp]", "mov     edx, 1; whence", "mov     esi, 0; offset", "mov     rdi, rax; fp", "call    rpl_fseeko"], ["mov~rax,[rbp+0]", "mov~edx,0", "mov~esi,0", "mov~rdi,rax", "call~FOO"]]], "func_feature": [1, 2, 2, 0, 3, 3, 1, 17, 0.0, 0, 1], "succs": [[1, 2], [], [1]], "fname": "clear_ungetc_buffer_preserving_position", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 3, 0, 1, 5, 1, 2, 0, 0, 0.08333333333333333, ["mov     rax, [rbp+stream]", "mov     rdi, rax; fp", "call    ___freading", "test    eax, eax", "jnz     short loc_6044"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 4, 1, 0, 6, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 10h", "mov     [rbp+stream], rdi", "cmp     [rbp+stream], 0", "jz      short loc_6036"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 1, 0, 1, 4, 0, 2, 1, 1, 0.125, ["mov     rax, [rbp+stream]", "mov     rdi, rax; stream", "call    _fflush", "jmp     short locret_605C"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [0, 0, 1, 0, 2, 6, 0, 2, 2, 1, 0.041666666666666664, ["mov     rax, [rbp+stream]", "mov     rdi, rax; fp", "call    clear_ungetc_buffer_preserving_position", "mov     rax, [rbp+stream]", "mov     rdi, rax; stream", "call    _fflush"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO"]]], "func_feature": [4, 1, 7, 0, 5, 6, 1, 23, 0.05, 0, 1], "succs": [[2, 4], [0, 2], [3], [], [3]], "fname": "rpl_fflush", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 0, 7, 1, 0, 12, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "sub     rsp, 30h", "mov     [rbp+fp], rdi", "mov     [rbp+offset], rsi", "mov     [rbp+whence], edx", "mov     rax, [rbp+fp]", "mov     rdx, [rax+10h]", "mov     rax, [rbp+fp]", "mov     rax, [rax+8]", "cmp     rdx, rax", "jnz     short loc_6100"], ["push~rbp", "mov~rbp,rsp", "sub~rsp,0", "mov~[rbp+0],rdi", "mov~[rbp+0],rsi", "mov~[rbp+0],edx", "mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~rdx,rax", "jnz~FOO"]], [0, 0, 5, 0, 0, 4, 1, 1, 0, 2, 0.14285714285714285, ["mov     rax, [rbp+fp]", "mov     rax, [rax+48h]", "test    rax, rax", "jnz     short loc_6100"], ["mov~rax,[rbp+0]", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 6, 0, 0, 6, 0, 1, 0, 2, 0.09523809523809523, ["mov     rax, [rbp+fp]", "mov     rdx, [rax+28h]", "mov     rax, [rbp+fp]", "mov     rax, [rax+20h]", "cmp     rdx, rax", "jnz     short loc_6100"], ["mov~rax,[rbp+0]", "mov~rdx,[rax+0]", "mov~rax,[rbp+0]", "mov~rax,[rax+0]", "cmp~rdx,rax", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["leave", "retn"], ["leave", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.011904761904761904, ["mov     eax, 0FFFFFFFFh", "jmp     short locret_6116"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 1, 0, 0, 11, 1, 1, 0, 1, 0.011904761904761904, ["mov     rax, [rbp+fp]", "mov     eax, [rax]", "and     eax, 0FFFFFFEFh", "mov     edx, eax", "mov     rax, [rbp+fp]", "mov     [rax], edx", "mov     rax, [rbp+fp]", "mov     rdx, [rbp+pos]", "mov     [rax+90h], rdx", "mov     eax, 0", "jmp     short locret_6116"], ["mov~rax,[rbp+0]", "mov~eax,<TAG>", "and~eax,0", "mov~edx,eax", "mov~rax,[rbp+0]", "mov~<TAG>,edx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~eax,0", "jmp~FOO"]], [0, 0, 1, 0, 1, 6, 0, 1, 0, 1, 0.07142857142857142, ["mov     edx, [rbp+whence]; whence", "mov     rcx, [rbp+offset]", "mov     rax, [rbp+fp]", "mov     rsi, rcx; off", "mov     rdi, rax; stream", "call    _fseeko"], ["mov~edx,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rcx", "mov~rdi,rax", "call~FOO"]], [1, 0, 3, 0, 2, 12, 0, 3, 0, 2, 0.14285714285714285, ["mov     rax, [rbp+fp]", "mov     rdi, rax; stream", "call    _fileno", "mov     ecx, eax", "mov     edx, [rbp+whence]; whence", "mov     rax, [rbp+offset]", "mov     rsi, rax; offset", "mov     edi, ecx; fd", "call    _lseek", "mov     [rbp+pos], rax", "cmp     [rbp+pos], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_60D9"], ["mov~rax,[rbp+0]", "mov~rdi,rax", "call~FOO", "mov~ecx,eax", "mov~edx,[rbp+0]", "mov~rax,[rbp+0]", "mov~rsi,rax", "mov~edi,ecx", "call~FOO", "mov~[rbp+0],rax", "cmp~[rbp+0],0", "jnz~FOO"]]], "func_feature": [3, 2, 9, 0, 8, 11, 1, 55, 0.05952, 0, 1], "succs": [[2, 6], [6, 7], [1, 6], [], [3], [3], [3], [4, 5]], "fname": "rpl_fseeko", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.07539682539682539, ["mov     eax, 1", "jmp     short loc_614A"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 1, 2, 0.06746031746031744, ["cmp     eax, 41h ; 'A'", "jge     short loc_613E"], ["cmp~eax,0", "jge~FOO"]], [0, 0, 2, 0, 0, 1, 0, 1, 3, 2, 0.023809523809523808, ["jmp     short loc_613E"], ["jmp~FOO"]], [2, 0, 3, 1, 0, 3, 0, 1, 1, 2, 0.05158730158730158, ["sub     eax, 61h ; 'a'", "cmp     eax, 19h", "ja      short loc_6145"], ["sub~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 7, 0, 0, 6, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "cmp     eax, 5Ah ; 'Z'", "jg      short loc_6136"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "cmp~eax,0", "jg~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.04365079365079365, ["mov     eax, 0"], ["mov~eax,0"]], [2, 0, 4, 1, 0, 3, 0, 1, 2, 2, 0.07142857142857142, ["sub     eax, 30h ; '0'", "cmp     eax, 9", "ja      short loc_6145"], ["sub~eax,0", "cmp~eax,0", "ja~FOO"]]], "func_feature": [0, 0, 6, 0, 8, 11, 0, 20, 0.04167, 0, 2], "succs": [[5], [0, 7], [0], [0, 6], [1, 3], [], [5], [2, 6]], "fname": "c_isalnum", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[2, 0, 3, 1, 0, 3, 0, 1, 0, 0, 0.05, ["sub     eax, 61h ; 'a'", "cmp     eax, 19h", "ja      short loc_616F"], ["sub~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 1, 2, 0.1, ["cmp     eax, 5Ah ; 'Z'", "jle     short loc_6168"], ["cmp~eax,0", "jle~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.07500000000000001, ["mov     eax, 1", "jmp     short loc_6174"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0.07500000000000001, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 5, 0, 0, 6, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "cmp     eax, 41h ; 'A'", "jl      short loc_616F"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "cmp~eax,0", "jl~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 0, 4, 0, 6, 8, 0, 16, 0.05, 0, 1], "succs": [[2, 3], [0, 2], [5], [5], [1, 3], []], "fname": "c_isalpha", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.08333333333333333, ["mov     eax, 1", "jmp     short loc_6194"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0.08333333333333333, ["mov     eax, 0"], ["mov~eax,0"]], [2, 0, 3, 1, 0, 7, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "add     eax, 0", "cmp     eax, 7Fh", "ja      short loc_618F"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "add~eax,0", "cmp~eax,0", "ja~FOO"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 12, 0.04167, 0, 1], "succs": [[], [0], [0], [1, 2]], "fname": "c_isascii", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.041666666666666664, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 2, 0.08333333333333333, ["cmp     [rbp+c], 9", "jnz     short loc_61B0"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 1, 4, 0, 0, 5, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "cmp     [rbp+c], 20h ; ' '", "jz      short loc_61A9"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "cmp~[rbp+0],<STR>", "jz~FOO"]], [1, 0, 0, 0, 0, 3, 1, 0, 2, 0, 0.0, ["and     eax, 1", "pop     rbp", "retn"], ["and~eax,0", "pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.125, ["mov     eax, 1", "jmp     short loc_61B5"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [0, 1, 3, 0, 5, 6, 0, 13, 0.05, 0, 0], "succs": [[3], [0, 4], [1, 4], [], [3]], "fname": "c_isblank", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 5, 0, 0, 6, 1, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "test    eax, eax", "js      short loc_61D9"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "test~eax,eax", "js~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 2, 0.1, ["cmp     eax, 1Fh", "jle     short loc_61D2"], ["cmp~eax,0", "jle~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 0, 2, 0.05, ["cmp     eax, 7Fh", "jnz     short loc_61D9"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.07500000000000001, ["mov     eax, 1", "jmp     short loc_61DE"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.07500000000000001, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 1, 4, 0, 6, 8, 0, 15, 0.05, 0, 0], "succs": [[1, 4], [2, 3], [3, 4], [5], [5], []], "fname": "c_iscntrl", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[2, 0, 3, 1, 0, 7, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "sub     eax, 30h ; '0'", "cmp     eax, 9", "ja      short loc_61F9"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.08333333333333333, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.08333333333333333, ["mov     eax, 1", "jmp     short loc_61FE"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 12, 0.04167, 0, 1], "succs": [[1, 3], [2], [], [2]], "fname": "c_isdigit", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[2, 0, 3, 1, 0, 7, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "sub     eax, 21h ; '!'", "cmp     eax, 5Dh ; ']'", "ja      short loc_6219"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.08333333333333333, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.08333333333333333, ["mov     eax, 1", "jmp     short loc_621E"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 12, 0.04167, 0, 1], "succs": [[1, 3], [2], [], [2]], "fname": "c_isgraph", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[2, 0, 3, 1, 0, 7, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "sub     eax, 61h ; 'a'", "cmp     eax, 19h", "ja      short loc_6239"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.08333333333333333, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.08333333333333333, ["mov     eax, 1", "jmp     short loc_623E"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 12, 0.04167, 0, 1], "succs": [[1, 3], [2], [], [2]], "fname": "c_islower", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 1, 3, 1, 0, 7, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "sub     eax, 20h ; ' '", "cmp     eax, 5Eh ; '^'", "ja      short loc_6259"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "sub~eax,<STR>", "cmp~eax,0", "ja~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.08333333333333333, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.08333333333333333, ["mov     eax, 1", "jmp     short loc_625E"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 12, 0.04167, 0, 1], "succs": [[1, 3], [2], [], [2]], "fname": "c_isprint", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 0, 5, 0, 0, 2, 0, 1, 0, 0, 0.048611111111111105, ["cmp     eax, 5Bh ; '['", "jl      short loc_6297"], ["cmp~eax,0", "jl~FOO"]], [1, 0, 9, 0, 0, 6, 0, 1, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "cmp     eax, 40h ; '@'", "jg      short loc_627E"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "cmp~eax,0", "jg~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 2, 2, 0.041666666666666664, ["cmp     eax, 60h ; '`'", "jle     short loc_6290"], ["cmp~eax,0", "jle~FOO"]], [2, 0, 3, 1, 0, 3, 0, 1, 3, 2, 0.013888888888888888, ["sub     eax, 7Bh ; '{'", "cmp     eax, 3", "ja      short loc_6297"], ["sub~eax,0", "cmp~eax,0", "ja~FOO"]], [0, 1, 5, 0, 0, 2, 0, 1, 1, 2, 0.048611111111111105, ["cmp     eax, 3Ah ; ':'", "jge     short loc_6290"], ["cmp~eax,<STR>", "jge~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.05555555555555555, ["mov     eax, 1", "jmp     short loc_629C"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 2, 0, 0, 1, 0, 1, 3, 2, 0.013888888888888888, ["jmp     short loc_6290"], ["jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.041666666666666664, ["mov     eax, 0"], ["mov~eax,0"]], [2, 0, 4, 1, 0, 3, 0, 1, 2, 2, 0.041666666666666664, ["sub     eax, 21h ; '!'", "cmp     eax, 0Eh", "ja      short loc_6297"], ["sub~eax,0", "cmp~eax,0", "ja~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 0, 8, 0, 10, 15, 0, 24, 0.03056, 0, 2], "succs": [[2, 7], [0, 4], [3, 5], [5, 7], [8, 5], [9], [5], [9], [6, 7], []], "fname": "c_ispunct", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 0, 0.07500000000000001, ["mov     eax, 1", "jmp     short loc_62C3"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0.07500000000000001, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 5, 0, 0, 6, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "cmp     eax, 9", "jl      short loc_62BE"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "cmp~eax,0", "jl~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 1, 0, 0.1, ["cmp     eax, 0Dh", "jle     short loc_62B7"], ["cmp~eax,0", "jle~FOO"]], [0, 1, 3, 0, 0, 2, 0, 1, 2, 0, 0.05, ["cmp     eax, 20h ; ' '", "jnz     short loc_62BE"], ["cmp~eax,<STR>", "jnz~FOO"]]], "func_feature": [0, 0, 4, 0, 6, 8, 0, 15, 0.05, 0, 0], "succs": [[], [0], [0], [2, 4], [1, 5], [1, 2]], "fname": "c_isspace", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.08333333333333333, ["mov     eax, 1", "jmp     short loc_62E3"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0.08333333333333333, ["mov     eax, 0"], ["mov~eax,0"]], [2, 0, 3, 1, 0, 7, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "sub     eax, 41h ; 'A'", "cmp     eax, 19h", "ja      short loc_62DE"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "sub~eax,0", "cmp~eax,0", "ja~FOO"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 12, 0.04167, 0, 1], "succs": [[], [0], [0], [1, 2]], "fname": "c_isupper", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 3, 1, 0, 8, 0, 1, 0, 0, 0.08333333333333333, ["mov     eax, eax", "lea     rdx, ds:0[rax*4]", "lea     rax, off_7274", "mov     eax, [rdx+rax]", "movsxd  rdx, eax", "lea     rax, off_7274", "add     rax, rdx", "jmp     rax; switch jump"], ["mov~eax,eax", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~eax,<TAG>", "movsxd~rdx,eax", "lea~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 1, 4, 1, 0, 7, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "sub     eax, 30h ; '0'; switch 55 cases", "cmp     eax, 36h ; '6'", "ja      short loc_6321; jumptable 0000000000006318 default case"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "sub~eax,0", "cmp~eax,<STR>", "ja~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0.125, ["mov     eax, 0; jumptable 0000000000006318 default case"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.041666666666666664, ["mov     eax, 1; jumptable 0000000000006318 cases 48-57,65-70,97-102", "jmp     short loc_6326"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [0, 0, 3, 0, 5, 6, 0, 20, 0.05, 1, 2], "succs": [[2, 4], [0, 2], [3], [], [3]], "fname": "c_isxdigit", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[2, 0, 3, 1, 0, 7, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "sub     eax, 41h ; 'A'", "cmp     eax, 19h", "ja      short loc_6342"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [0, 1, 1, 1, 0, 3, 0, 1, 0, 1, 0.08333333333333333, ["mov     eax, [rbp+c]", "add     eax, 20h ; ' '", "jmp     short loc_6345"], ["mov~eax,[rbp+0]", "add~eax,<STR>", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.08333333333333333, ["mov     eax, [rbp+c]"], ["mov~eax,[rbp+0]"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 0, 2, 0, 4, 4, 2, 13, 0.04167, 0, 2], "succs": [[1, 2], [3], [3], []], "fname": "c_tolower", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.08333333333333333, ["mov     eax, [rbp+c]"], ["mov~eax,[rbp+0]"]], [2, 0, 3, 1, 0, 7, 0, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "mov     [rbp+c], edi", "mov     eax, [rbp+c]", "sub     eax, 61h ; 'a'", "cmp     eax, 19h", "ja      short loc_6361"], ["push~rbp", "mov~rbp,rsp", "mov~[rbp+0],edi", "mov~eax,[rbp+0]", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [0, 1, 1, 1, 0, 3, 0, 1, 1, 1, 0.08333333333333333, ["mov     eax, [rbp+c]", "sub     eax, 20h ; ' '", "jmp     short loc_6364"], ["mov~eax,[rbp+0]", "sub~eax,<STR>", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 0, 2, 0, 4, 4, 0, 13, 0.04167, 0, 2], "succs": [[3], [0, 2], [3], []], "fname": "c_toupper", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 0, 0, 0, 0.16666666666666666, ["xor     ebx, ebx", "nop     dword ptr [rax+rax+00000000h]"], ["xor~ebx,ebx", "nop~[word ptr [rax+0]"]], [2, 0, 3, 2, 1, 17, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15, rdx", "push    r13", "push    r12", "lea     r12, __frame_dummy_init_array_entry", "push    rbp", "lea     rbp, __do_global_dtors_aux_fini_array_entry", "push    rbx", "mov     r13d, edi", "mov     r14, rsi", "sub     rbp, r12", "sub     rsp, 8", "sar     rbp, 3", "call    _init_proc", "test    rbp, rbp", "jz      short loc_63C6"], ["push~r15", "push~r14", "mov~r15,rdx", "push~r13", "push~r12", "lea~r12,<TAG>", "push~rbp", "lea~rbp,<TAG>", "push~rbx", "mov~r13d,edi", "mov~r14,rsi", "sub~rbp,r12", "sub~rsp,0", "sar~rbp,0", "call~FOO", "test~rbp,rbp", "jz~FOO"]], [1, 0, 2, 1, 1, 7, 0, 2, 2, 1, 0.16666666666666666, ["mov     rdx, r15", "mov     rsi, r14", "mov     edi, r13d", "call    qword ptr [r12+rbx*8]", "add     rbx, 1", "cmp     rbp, rbx", "jnz     short loc_63B0"], ["mov~rdx,r15", "mov~rsi,r14", "mov~edi,r13d", "call~<TAG>", "add~rbx,0", "cmp~rbp,rbx", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 5, 0, 34, 0.08333, 2, 4], "succs": [[2], [0, 3], [2, 3], []], "fname": "__libc_csu_init", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_csu_fini", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rdx, cs:__dso_handle", "xor     esi, esi", "jmp     ___cxa_atexit"], ["mov~rdx,<TAG>", "xor~esi,esi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 1, 3, 0.0, 1, 0], "succs": [[1], []], "fname": "atexit", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[1, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     rdx, rsi; Alternative name is '__fstat'", "mov     esi, edi; fildes", "mov     edi, 1; ver", "jmp     ___fxstat"], ["mov~rdx,rsi", "mov~esi,edi", "mov~edi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 2, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "fstat", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[2, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0.0, ["sub     rsp, 8; _fini", "add     rsp, 8", "retn"], ["sub~rsp,0", "add~rsp,0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 2], "succs": [[]], "fname": "term_proc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn free:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn abort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __errno_location:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strncmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fpending:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn write:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "write", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn textdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fclose:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn bindtextdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn stpcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "stpcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_get_mb_cur_max:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strlen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __stack_chk_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getopt_long:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbrtowc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn gettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "gettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn printf:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "printf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strrchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn lseek:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ioctl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn close:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn posix_fadvise:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "posix_fadvise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn read:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "read", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __libc_start_main:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_start_main", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fputs_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ferror_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ferror_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn calloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fprintf:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fprintf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fileno:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn malloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fflush:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn nl_langinfo:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __freading:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn realloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn setlocale:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memmove:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn error:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn open:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fseeko:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __cxa_atexit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getpagesize:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getpagesize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fwrite:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbsinit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswprint:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp___cxa_finalize:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp___cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_b_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __gmon_start__:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__gmon_start__", "n_num": 1}
