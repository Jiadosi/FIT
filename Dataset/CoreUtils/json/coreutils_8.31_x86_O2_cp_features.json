{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    rax ; __gmon_start__"], ["call~rax"]], [1, 0, 2, 1, 0, 4, 1, 1, 0, 1, 0.0, ["sub     rsp, 8; _init", "mov     rax, cs:__gmon_start___ptr", "test    rax, rax", "jz      short loc_2722"], ["sub~rsp,0", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 3, 1, 7, 0.0, 1, 2], "succs": [[2], [0, 2], []], "fname": "init_proc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0.0, ["push    cs:qword_219C50", "jmp     cs:qword_219C58"], ["push~<TAG>", "jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 109, 2, 0.0, 2, 0], "succs": [[]], "fname": "sub_2730", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getenv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "getenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:utimensat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "utimensat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:abort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 15, 1, 0.0, 1, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__errno_location_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 97, 1, 0.0, 1, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:unlink_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "unlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strncmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fpending_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__read_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__read_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mkdir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "mkdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:unlinkat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "unlinkat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:qsort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "qsort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:readlink_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "readlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fcntl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:clock_gettime_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "clock_gettime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:write_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "write", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fread_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fread_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:textdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:pathconf_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "pathconf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fclose_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:opendir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "opendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:bindtextdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:stpcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "stpcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:rmdir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "rmdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dcgettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 134, 1, 0.0, 1, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_get_mb_cur_max_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strlen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 24, 1, 0.0, 1, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__lxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 13, 1, 0.0, 1, 0], "succs": [[]], "fname": "__lxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:openat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "openat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__stack_chk_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 42, 1, 0.0, 1, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getuid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getopt_long_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbrtowc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstatat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 7, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstatat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__overflow_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__overflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strrchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ftruncate_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "ftruncate", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:lseek_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:gettimeofday_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "gettimeofday", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__assert_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:geteuid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "geteuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ioctl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:canonicalize_file_name_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "canonicalize_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:close_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 8, 1, 0.0, 1, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:rewinddir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "rewinddir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strspn_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strspn", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:closedir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "closedir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:posix_fadvise_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "posix_fadvise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:read_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "read", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fallocate_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fallocate", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fputs_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 24, 1, 0.0, 1, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:utimes_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "utimes", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:calloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__getdelim_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__getdelim", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dirfd_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "dirfd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fpathconf_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fpathconf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:rpmatch_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "rpmatch", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:syscall_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "syscall", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mkfifo_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mkfifo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:umask_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "umask", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 15, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__xmknod_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__xmknod", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fileno_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getgid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getgid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__xstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 13, 1, 0.0, 1, 0], "succs": [[]], "fname": "__xstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:readdir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "readdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:malloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 11, 1, 0.0, 1, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fflush_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:nl_langinfo_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:lchown_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "lchown", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__freading_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:realloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fdopen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fdopen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:linkat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "linkat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:setlocale_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__printf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 18, 1, 0.0, 1, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fchmod_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fchmod", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:setvbuf_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "setvbuf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:chmod_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "chmod", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mempcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "mempcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:error_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 75, 1, 0.0, 1, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__explicit_bzero_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "__explicit_bzero_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:open_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fseeko_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fchown_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fchown", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fopen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fopen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:rename_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "rename", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fdopendir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fdopendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:futimens_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "futimens", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:euidaccess_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "euidaccess", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_atexit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:renameat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "renameat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpagesize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpagesize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getppid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "getppid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fwrite_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 18, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbsinit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:symlinkat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "symlinkat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswprint_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:futimesat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "futimesat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_b_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:data_freer"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 58, 1, 0.0, 1, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_finalize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.08333333333333333, ["jmp     _fchmod"], ["jmp~FOO"]], [0, 0, 4, 0, 0, 4, 1, 1, 0, 1, 0.0, ["test    edi, edi", "mov     rax, name", "mov     esi, edx; mode", "js      short loc_2E2E"], ["test~edi,edi", "mov~rax,name", "mov~esi,edx", "js~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [0, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.08333333333333333, ["mov     desc, name; file", "jmp     _chmod"], ["mov~desc,name", "jmp~FOO"]]], "func_feature": [0, 1, 3, 0, 5, 4, 3, 7, 0.03333, 0, 0], "succs": [[2], [0, 4], [], [], [3]], "fname": "fchmod_or_lchmod", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [3, 2, 3, 0, 2, 1, 1, 14, 0.0, 1, 0], "succs": [[0]], "fname": "restore_default_fscreatecon_or_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 22, 0, 0, 2, 0, 1, 0, 0, 0.14524605828953654, ["cmp     [rsp+158h+x.recursive], 0", "jnz     loc_350D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 8, -1, 0.004061156235069278, ["mov     [rsp+158h+x.dereference], 4", "jmp     loc_3405"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 27, 0, 1, 5, 0, 2, 6, -1, 0.16961299569995222, ["mov     rdi, [rsp+158h+backup_suffix]; s", "mov     [rsp+158h+x.backup_type], eax", "call    set_simple_backup_suffix", "cmp     [rsp+158h+x.dereference], 1", "jz      loc_34F7"], ["mov~rdi,[rsp+0]", "mov~[rsp+0],eax", "call~FOO", "cmp~[rsp+0],0", "jz~FOO"]], [43, 1, 91, 1, 7, 78, 2, 7, 0, -1, 0.0, ["push    r15", "push    r14", "mov     r14d, 1", "push    r13", "push    r12", "mov     r12d, edi", "push    rbp", "push    rbx", "mov     rbp, argv", "lea     r13, long_opts", "lea     rbx, off_12C1C", "sub     rsp, 128h", "mov     argc, [argv]; argv0", "mov     rax, fs:28h", "mov     [rsp+158h+var_40], rax", "xor     eax, eax", "lea     r15, [rsp+158h+x]", "call    set_program_name", "lea     rsi, aSSUnbackup+14h; locale", "mov     edi, 6; category", "call    _setlocale", "lea     rsi, dirname; \"/usr/local/share/locale\"", "lea     rdi, domainname; \"coreutils\"", "call    _bindtextdomain", "lea     rdi, domainname; \"coreutils\"", "call    _textdomain", "lea     rdi, close_stdin", "call    atexit", "mov     rdi, r15; x", "mov     cs:selinux_enabled, 0", "call    cp_options_default", "lea     rdi, name; \"POSIXLY_CORRECT\"", "mov     [rsp+158h+x.copy_as_regular], 1", "mov     [rsp+158h+x.dereference], 1", "mov     [rsp+158h+x.unlink_dest_before_opening], 0", "mov     [rsp+158h+x.unlink_dest_after_failed_open], 0", "mov     [rsp+158h+x.hard_link], 0", "mov     [rsp+158h+x.interactive], 4", "mov     [rsp+158h+x.move_mode], 0", "mov     [rsp+158h+x.install_mode], 0", "mov     [rsp+158h+x.one_file_system], 0", "mov     [rsp+158h+x.reflink_mode], 0", "mov     [rsp+158h+x.preserve_ownership], 0", "mov     [rsp+158h+x.preserve_links], 0", "mov     [rsp+158h+x.preserve_mode], 0", "mov     [rsp+158h+x.preserve_timestamps], 0", "mov     [rsp+158h+x.explicit_no_preserve_mode], 0", "mov     [rsp+158h+x.preserve_security_context], 0", "mov     [rsp+158h+x.require_preserve_context], 0", "mov     [rsp+158h+x.set_security_context], 0", "mov     [rsp+158h+x.preserve_xattr], 0", "mov     [rsp+158h+x.reduce_diagnostics], 0", "mov     [rsp+158h+x.require_preserve_xattr], 0", "mov     [rsp+158h+x.data_copy_required], 1", "mov     [rsp+158h+x.require_preserve], 0", "mov     [rsp+158h+x.recursive], 0", "mov     [rsp+158h+x.sparse_mode], 2", "mov     [rsp+158h+x.symbolic_link], 0", "mov     [rsp+158h+x.set_mode], 0", "mov     [rsp+158h+x.mode], 0", "mov     [rsp+158h+x.stdin_tty], 0", "mov     [rsp+158h+x.update], 0", "mov     [rsp+158h+x.verbose], 0", "call    _getenv", "test    rax, rax", "lea     rax, [rsp+158h+st]", "mov     [rsp+158h+x.dest_info], 0", "setnz   [rsp+158h+x.open_dangling_dest_symlink]", "mov     [rsp+158h+x.src_info], 0", "mov     [rsp+158h+scontext], 0", "mov     [rsp+158h+no_target_directory], 0", "mov     [rsp+158h+target_directory], 0", "mov     [rsp+158h+copy_contents], 0", "mov     [rsp+158h+version_control_string], 0", "mov     [rsp+158h+backup_suffix], 0", "mov     [rsp+158h+make_backups], 0", "mov     [rsp+158h+stat_buf], rax", "nop     dword ptr [rax]"], ["push~r15", "push~r14", "mov~r14d,0", "push~r13", "push~r12", "mov~r12d,edi", "push~rbp", "push~rbx", "mov~rbp,argv", "lea~r13,<TAG>", "lea~rbx,<TAG>", "sub~rsp,<STR>", "mov~argc,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~r15,[rsp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "mov~rdi,r15", "mov~<TAG>,0", "call~FOO", "lea~rdi,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "call~FOO", "test~rax,rax", "lea~rax,[rsp+0]", "mov~[rsp+0],0", "setnz~[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~<TAG>,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "nop~<TAG>"]], [1, 0, 20, 0, 0, 3, 0, 1, 8, -1, 0.13951266125179168, ["cmp     [rsp+158h+x.set_security_context], 0", "movzx   eax, [rsp+158h+x.require_preserve_context]", "jnz     short loc_3428"], ["cmp~[rsp+0],0", "movzx~eax,[rsp+0]", "jnz~FOO"]], [0, 0, 21, 0, 0, 3, 0, 1, 8, -1, 0.0037625418060200666, ["movzx   eax, [rsp+158h+copy_contents]", "mov     [rsp+158h+x.copy_as_regular], al", "jmp     loc_3410"], ["movzx~eax,[rsp+0]", "mov~[rsp+0],al", "jmp~FOO"]], [1, 0, 91, 0, 1, 11, 0, 2, 4, -1, 0.00042303710781971656, ["mov     r9, cs:argmatch_die; jumptable 0000000000003050 case 265", "mov     rsi, cs:optarg@@GLIBC_2_2_5; arg", "lea     rdx, sparse_type_string; arglist", "lea     rcx, sparse_type; vallist", "lea     rdi, context; \"--sparse\"", "mov     r8d, 4; valsize", "call    __xargmatch_internal", "lea     rdx, sparse_type", "mov     eax, [rdx+rax*4]", "mov     [rsp+158h+x.sparse_mode], eax", "jmp     loc_3018"], ["mov~r9,<TAG>", "mov~rsi,<TAG>", "lea~rdx,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "mov~r8d,0", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>", "mov~[rsp+0],eax", "jmp~FOO"]], [0, 0, 91, 1, 0, 3, 0, 1, 3, -1, 0.24402771141901575, ["movsxd  rax, dword ptr [rbx+rax*4]", "add     rax, rbx", "jmp     rax; switch jump"], ["movsxd~rax,<TAG>", "add~rax,rbx", "jmp~rax"]], [1, 0, 22, 0, 0, 1, 0, 0, 9, -1, 0.001433349259436216, ["mov     [rsp+158h+x.dereference], 2"], ["mov~[rsp+0],0"]], [1, 0, 25, 0, 0, 2, 0, 1, 8, -1, 0.006987577639751552, ["cmp     [rsp+158h+x.hard_link], 0", "jnz     short loc_3564"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 19, 0, 0, 2, 0, 1, 9, -1, 0.05729415512024208, ["cmp     [rsp+158h+scontext], 0", "jz      loc_3546"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 18, 0, 0, 2, 1, 1, 9, -1, 0.07003503742634176, ["test    al, al", "jnz     loc_351B"], ["test~al,al", "jnz~FOO"]], [0, 0, 91, 0, 0, 3, 1, 1, 4, -1, 0.01051122790253225, ["mov     rsi, cs:optarg@@GLIBC_2_2_5; jumptable 0000000000003050 case 264", "test    rsi, rsi", "jz      loc_3393"], ["mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [1, 0, 7, 0, 0, 1, 0, 0, 10, -1, 0.02727345118649466, ["mov     [rsp+158h+x.preserve_security_context], 0"], ["mov~[rsp+0],0"]], [1, 0, 91, 0, 1, 8, 1, 2, 1, -1, 0.46392737697085523, ["lea     rdx, shortopts; \"abdfHilLnprst:uvxPRS:TZ\"", "xor     r8d, r8d; longind", "mov     rcx, r13; longopts", "mov     rsi, argv; argv", "mov     edi, r12d; argc", "call    _getopt_long", "cmp     eax, 0FFFFFFFFh", "jz      loc_33A0"], ["lea~rdx,<TAG>", "xor~r8d,r8d", "mov~rcx,r13", "mov~rsi,argv", "mov~edi,r12d", "call~FOO", "cmp~eax,0", "jz~FOO"]], [0, 0, 91, 0, 0, 5, 0, 1, 4, -1, 0.005678651059085841, ["mov     [rsp+158h+x.preserve_ownership], r14b; jumptable 0000000000003050 case 243", "mov     [rsp+158h+x.preserve_mode], r14b", "mov     [rsp+158h+x.preserve_timestamps], r14b", "mov     [rsp+158h+x.require_preserve], r14b", "jmp     short loc_3018"], ["mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "jmp~FOO"]], [1, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.00042303710781971656, ["mov     [rsp+158h+x.interactive], 2; jumptable 0000000000003050 case 241", "jmp     short loc_3018"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.00042303710781971656, ["mov     [rsp+158h+x.hard_link], r14b; jumptable 0000000000003050 case 239", "jmp     short loc_3018"], ["mov~[rsp+0],r14b", "jmp~FOO"]], [1, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.00042303710781971656, ["mov     [rsp+158h+x.interactive], 3; jumptable 0000000000003050 case 236", "jmp     short loc_3018"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.00042303710781971656, ["mov     [rsp+158h+x.unlink_dest_after_failed_open], r14b; jumptable 0000000000003050 case 233", "jmp     loc_3018"], ["mov~[rsp+0],r14b", "jmp~FOO"]], [1, 0, 91, 0, 0, 3, 0, 1, 4, -1, 0.00042303710781971656, ["mov     [rsp+158h+x.preserve_links], r14b; jumptable 0000000000003050 case 231", "mov     [rsp+158h+x.dereference], 2", "jmp     loc_3018"], ["mov~[rsp+0],r14b", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 91, 0, 0, 6, 1, 1, 4, -1, 0.00042303710781971656, ["mov     rax, cs:optarg@@GLIBC_2_2_5; jumptable 0000000000003050 case 229", "mov     [rsp+158h+make_backups], 1", "test    rax, rax", "cmovz   rax, [rsp+158h+version_control_string]", "mov     [rsp+158h+version_control_string], rax", "jmp     loc_3018"], ["mov~rax,<TAG>", "mov~[rsp+0],0", "test~rax,rax", "cmovz~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 91, 0, 0, 4, 0, 1, 5, -1, 0.021141901576684184, ["mov     [rsp+158h+x.preserve_xattr], r14b", "mov     [rsp+158h+x.reduce_diagnostics], r14b", "mov     [rsp+158h+x.recursive], r14b", "jmp     loc_3018"], ["mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "jmp~FOO"]], [0, 0, 91, 0, 0, 2, 0, 1, 6, -1, 0.005255613951266125, ["mov     [rsp+158h+scontext], rax", "jmp     loc_3018"], ["mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.00042303710781971656, ["mov     [rsp+158h+no_target_directory], 1; jumptable 0000000000003050 case 215", "jmp     loc_3018"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 91, 0, 0, 4, 0, 1, 4, -1, 0.00042303710781971656, ["mov     rax, cs:optarg@@GLIBC_2_2_5; jumptable 0000000000003050 case 214", "mov     [rsp+158h+make_backups], 1", "mov     [rsp+158h+backup_suffix], rax", "jmp     loc_3018"], ["mov~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.00042303710781971656, ["mov     [rsp+158h+x.recursive], r14b; jumptable 0000000000003050 cases 213,245", "jmp     loc_3018"], ["mov~[rsp+0],r14b", "jmp~FOO"]], [1, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.00042303710781971656, ["mov     [rsp+158h+x.dereference], 2; jumptable 0000000000003050 case 211", "jmp     loc_3018"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.00042303710781971656, ["mov     [rsp+158h+x.dereference], 4; jumptable 0000000000003050 case 207", "jmp     loc_3018"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.00042303710781971656, ["mov     [rsp+158h+x.dereference], 3; jumptable 0000000000003050 case 203", "jmp     loc_3018"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.00042303710781971656, ["mov     [rsp+158h+x.unlink_dest_before_opening], r14b; jumptable 0000000000003050 case 267", "jmp     loc_3018"], ["mov~[rsp+0],r14b", "jmp~FOO"]], [0, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.00042303710781971656, ["mov     cs:remove_trailing_slashes, r14b; jumptable 0000000000003050 case 266", "jmp     loc_3018"], ["mov~<TAG>,r14b", "jmp~FOO"]], [1, 0, 91, 0, 1, 10, 0, 2, 5, -1, 0.005255613951266125, ["mov     r9, cs:argmatch_die; exit_fn", "lea     rdx, reflink_type_string; arglist", "lea     rcx, reflink_type; vallist", "lea     rdi, aReflink; \"--reflink\"", "mov     r8d, 4; valsize", "call    __xargmatch_internal", "lea     rdx, reflink_type", "mov     eax, [rdx+rax*4]", "mov     [rsp+158h+x.reflink_mode], eax", "jmp     loc_3018"], ["mov~r9,<TAG>", "lea~rdx,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "mov~r8d,0", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>", "mov~[rsp+0],eax", "jmp~FOO"]], [0, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.00042303710781971656, ["mov     cs:parents_option, r14b; jumptable 0000000000003050 case 262", "jmp     loc_3018"], ["mov~<TAG>,r14b", "jmp~FOO"]], [0, 0, 91, 0, 1, 5, 1, 2, 4, -1, 0.00042303710781971656, ["mov     rdi, cs:optarg@@GLIBC_2_2_5; jumptable 0000000000003050 case 261", "xor     edx, edx; on_off", "mov     rsi, r15; x", "call    decode_preserve_arg", "jmp     loc_3018"], ["mov~rdi,<TAG>", "xor~edx,edx", "mov~rsi,r15", "call~FOO", "jmp~FOO"]], [1, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.00042303710781971656, ["mov     [rsp+158h+copy_contents], 1; jumptable 0000000000003050 case 260", "jmp     loc_3018"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.00042303710781971656, ["mov     [rsp+158h+x.data_copy_required], 0; jumptable 0000000000003050 case 259", "jmp     loc_3018"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.00042303710781971656, ["mov     [rsp+158h+x.one_file_system], r14b; jumptable 0000000000003050 case 251", "jmp     loc_3018"], ["mov~[rsp+0],r14b", "jmp~FOO"]], [0, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.00042303710781971656, ["mov     [rsp+158h+x.verbose], r14b; jumptable 0000000000003050 case 249", "jmp     loc_3018"], ["mov~[rsp+0],r14b", "jmp~FOO"]], [0, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.00042303710781971656, ["mov     [rsp+158h+x.update], r14b; jumptable 0000000000003050 case 248", "jmp     loc_3018"], ["mov~[rsp+0],r14b", "jmp~FOO"]], [1, 1, 91, 0, 0, 6, 1, 1, 6, -1, 0.025919732441471572, ["mov     rax, cs:optarg@@GLIBC_2_2_5", "mov     [rsp+158h+target_directory], rax", "mov     eax, [rsp+158h+st.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_3018"], ["mov~rax,<TAG>", "mov~<TAG>,rax", "mov~eax,[rsp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [0, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.011053710781971652, ["mov     [rsp+158h+x.symbolic_link], r14b; jumptable 0000000000003050 case 246", "jmp     loc_3018"], ["mov~[rsp+0],r14b", "jmp~FOO"]], [1, 0, 91, 0, 1, 5, 0, 2, 5, -1, 0.005255613951266125, ["mov     edx, 1; on_off", "mov     rsi, r15; x", "call    decode_preserve_arg", "mov     [rsp+158h+x.require_preserve], r14b", "jmp     loc_3018"], ["mov~edx,0", "mov~rsi,r15", "call~FOO", "mov~[rsp+0],r14b", "jmp~FOO"]], [0, 0, 91, 0, 0, 2, 1, 1, 5, -1, 0.01540850453893932, ["test    rax, rax", "jz      loc_3018"], ["test~rax,rax", "jz~FOO"]], [1, 0, 91, 0, 2, 10, 4, 3, 6, -1, 0.0, ["lea     rsi, aWarningIgnorin; \"warning: ignoring --context; it require\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_3018"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 91, 0, 0, 2, 0, 1, 5, -1, 0.005255613951266125, ["mov     [rsp+158h+x.reflink_mode], 2", "jmp     loc_3018"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 91, 0, 0, 2, 0, 1, 6, -1, 0.005255613951266125, ["mov     [rsp+158h+x.set_security_context], r14b", "jmp     loc_3018"], ["mov~[rsp+0],r14b", "jmp~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 11, -1, 0.02167940754897275, ["cmp     [rsp+158h+scontext], 0", "jnz     loc_3643"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 11, -1, 0.015308966395922916, ["cmp     cs:selinux_enabled, 0", "jnz     loc_3435"], ["cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 1, 0, 2, 9, 3, 2, 13, -1, 0.0005773212294951426, ["lea     rsi, aCannotPreserve_0; \"cannot preserve extended attributes, cp\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 12, -1, 0.030797101449275357, ["cmp     [rsp+158h+x.require_preserve_xattr], 0", "jnz     loc_361F"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 91, 1, 0, 3, 0, 1, 2, -1, 0.24402771141901575, ["add     eax, 83h", "cmp     eax, 10Bh; switch 268 cases", "ja      loc_35EC; jumptable 0000000000003050 default case"], ["add~eax,0", "cmp~eax,0", "ja~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 11, -1, 0.012800605191909547, ["test    al, al", "jz      loc_3441"], ["test~al,al", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 11, -1, 0.025740563784042037, ["test    al, al", "jz      loc_3441"], ["test~al,al", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 12, -1, 0.005852842809364548, ["cmp     cs:selinux_enabled, 0", "jnz     loc_3441"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 91, 0, 0, 3, 1, 1, 4, -1, 0.005255613951266125, ["mov     rdi, cs:optarg@@GLIBC_2_2_5; jumptable 0000000000003050 case 263", "test    rdi, rdi", "jnz     loc_334D"], ["mov~rdi,<TAG>", "test~rdi,rdi", "jnz~FOO"]], [2, 0, 1, 0, 2, 9, 3, 2, 5, -1, 0.005494505494505494, ["lea     rsi, aMultipleTarget; \"multiple target directories specified\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 91, 0, 0, 2, 0, 1, 4, -1, 0.02615862398471094, ["cmp     [rsp+158h+target_directory], 0; jumptable 0000000000003050 case 247", "jnz     loc_35F6"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 2, 1, 2, 14, 2, 3, 13, -1, 0.012661251791686574, ["call    hash_init", "movsxd  rdx, cs:optind@@GLIBC_2_2_5", "movzx   ecx, [rsp+158h+no_target_directory]; no_target_directory", "mov     edi, r12d", "mov     r8, r15; x", "sub     edi, edx; n_files", "lea     rsi, [argv+rdx*8+0]; file", "mov     rdx, [rsp+158h+target_directory]; target_directory", "call    do_copy", "xor     eax, 1", "mov     rcx, [rsp+158h+var_40]", "xor     rcx, fs:28h", "movzx   eax, al", "jnz     loc_361A"], ["call~FOO", "movsxd~rdx,<TAG>", "movzx~ecx,[rsp+0]", "mov~edi,r12d", "mov~r8,r15", "sub~edi,edx", "lea~rsi,[argv+0]", "mov~rdx,<TAG>", "call~FOO", "xor~eax,0", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "movzx~eax,al", "jnz~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 14, -1, 0.0, ["add     rsp, 128h", "pop     rbx", "pop     argv", "pop     argc", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~argv", "pop~argc", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 34, 0, 0, 2, 0, 1, 5, -1, 0.0179168657429527, ["cmp     [rsp+158h+x.reflink_mode], 2", "jz      loc_357B"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 37, 0, 0, 2, 0, 1, 4, -1, 0.1086359292881032, ["cmp     [rsp+158h+make_backups], 0", "jz      loc_34CE"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 2, 0, 0, 3, 0, 1, 4, -1, 0.005972288580984233, ["mov     edx, 5", "lea     rsi, aCannotMakeBoth; \"cannot make both hard and symbolic link\"...", "jmp     loc_35D7"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 42, 0, 0, 2, 0, 1, 3, -1, 0.011347348303870042, ["cmp     [rsp+158h+x.symbolic_link], 0", "jz      loc_33AB"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 0, 34, 0, 0, 3, 0, 1, 4, -1, 0.09131629240324891, ["cmp     [rsp+158h+make_backups], 0", "mov     [rsp+158h+x.update], 0", "jnz     loc_35CB"], ["cmp~[rsp+0],0", "mov~[rsp+0],0", "jnz~FOO"]], [1, 0, 40, 0, 0, 2, 0, 1, 3, -1, 0.20688007644529383, ["cmp     [rsp+158h+x.interactive], 2", "jz      loc_34BE"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 32, 0, 0, 3, 1, 1, 5, -1, 0.17200191113234592, ["xor     eax, eax", "cmp     [rsp+158h+x.reflink_mode], 2", "jnz     loc_33EC"], ["xor~eax,eax", "cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 31, 0, 0, 2, 0, 1, 6, -1, 0.006688963210702341, ["cmp     [rsp+158h+x.sparse_mode], 2", "jz      loc_33EC"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 91, 0, 1, 6, 1, 2, 5, -1, 0.02054467271858576, ["mov     rdx, [rsp+158h+stat_buf]; stat_buf", "mov     rsi, cs:optarg@@GLIBC_2_2_5; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jnz     loc_3685"], ["mov~rdx,[rsp+0]", "mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 1, 2, 1, 1, 4, -1, 0.0, ["xor     edi, edi; jumptable 0000000000003050 case 1", "call    usage"], ["xor~edi,edi", "call~FOO"]], [2, 0, 1, 0, 2, 9, 3, 2, 13, -1, 0.0033444816053511705, ["lea     rsi, aCannotPreserve; \"cannot preserve security context withou\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 2, 0, 0, 3, 0, 1, 7, -1, 0.001433349259436216, ["mov     edx, 5", "lea     rsi, aReflinkCanBeUs; \"--reflink can be used only with --spars\"...", "jmp     loc_35D7"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 7, -1, 0.000716674629718108, ["jmp     loc_34E6"], ["jmp~FOO"]], [2, 0, 91, 0, 0, 8, 0, 1, 4, -1, 0.010391782130912566, ["cmp     cs:selinux_enabled, 0; jumptable 0000000000003050 case 228", "mov     [rsp+158h+x.dereference], 2", "mov     [rsp+158h+x.preserve_links], r14b", "mov     [rsp+158h+x.preserve_ownership], r14b", "mov     [rsp+158h+x.preserve_mode], r14b", "mov     [rsp+158h+x.preserve_timestamps], r14b", "mov     [rsp+158h+x.require_preserve], r14b", "jz      short loc_30FD"], ["cmp~<TAG>,0", "mov~[rsp+0],0", "mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "mov~[rsp+0],r14b", "jz~FOO"]], [0, 0, 91, 0, 0, 1, 0, 0, 5, -1, 0.0, ["mov     [rsp+158h+x.preserve_security_context], r14b"], ["mov~[rsp+0],r14b"]], [1, 0, 26, 0, 0, 2, 0, 1, 7, -1, 0.020425226946966076, ["cmp     [rsp+158h+x.recursive], 0", "jz      short loc_3564"], ["cmp~[rsp+0],0", "jz~FOO"]], [3, 0, 0, 0, 4, 16, 2, 4, 12, -1, 0.0, ["call    ___errno_location", "mov     rdi, [rsp+158h+scontext]; arg", "mov     dword ptr [rax], 5Fh ; '_'", "mov     rbx, rax", "call    quote", "lea     rsi, aFailedToSetDef; \"failed to set default file creation con\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     argv, rax", "call    _dcgettext", "mov     esi, [rbx]; errnum", "mov     rdx, rax; format", "mov     rcx, rbp", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~<TAG>,0", "mov~rbx,rax", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~argv,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "mov~rcx,rbp", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 91, 0, 0, 3, 0, 1, 4, -1, 0.025919732441471572, ["cmp     cs:selinux_enabled, 0; jumptable 0000000000003050 case 221", "mov     rax, cs:optarg@@GLIBC_2_2_5", "jz      loc_3364"], ["cmp~<TAG>,0", "mov~rax,<TAG>", "jz~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 10, -1, 0.029144768275203056, ["cmp     [rsp+158h+x.preserve_security_context], 0", "jz      short loc_3555"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 91, 0, 0, 2, 1, 1, 5, -1, 0.01051122790253225, ["test    rax, rax", "jz      loc_3571"], ["test~rax,rax", "jz~FOO"]], [0, 0, 1, 0, 0, 0, 0, 0, -1, 0, 0.0, [], []], [3, 0, 91, 0, 3, 14, 3, 3, 7, -1, 0.000358337314859054, ["mov     rsi, [rsp+158h+target_directory]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aTargetSIsNotAD; \"target %s is not a directory\"", "mov     rbx, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [2, 0, 15, 0, 2, 9, 3, 2, 11, -1, 0.0009555661729574773, ["lea     rsi, aCannotSetTarge; \"cannot set target context and preserve \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 10, -1, 0.053352444656792467, ["cmp     [rsp+158h+x.preserve_security_context], 0", "jz      short loc_358B"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 1, 12, -1, 0.005852842809364548, ["jmp     short loc_35A0"], ["jmp~FOO"]], [0, 0, 1, 0, 2, 7, 4, 2, 5, -1, 0.0015527950310559005, ["xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 2, 0, 0, 2, 0, 0, 5, -1, 0.00047778308647873863, ["lea     rsi, aOptionsBackupA; \"options --backup and --no-clobber are m\"...", "mov     edx, 5; category"], ["lea~rsi,<TAG>", "mov~edx,0"]], [1, 0, 33, 0, 0, 2, 0, 1, 6, -1, 0.006450071667462971, ["cmp     [rsp+158h+x.sparse_mode], 2", "jz      loc_33CC"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 43, 0, 0, 2, 0, 1, 2, -1, 0.21978021978021978, ["cmp     [rsp+158h+x.hard_link], 0", "jnz     loc_34A2"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 0, 0, 2, 13, 2, 2, 4, -1, 0.0, ["lea     rax, aJimMeyering; jumptable 0000000000003050 case 0", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "mov     rcx, cs:Version; version", "push    0", "lea     r9, aDavidMackenzie; \"David MacKenzie\"", "lea     r8, aTorbjornGranlu; \"Torbjorn Granlund\"", "push    rax", "lea     rdx, package; \"GNU \"", "lea     rsi, command_name; \"cp\"", "xor     eax, eax", "call    version_etc", "xor     edi, edi; status", "call    _exit"], ["lea~rax,<TAG>", "mov~rdi,<TAG>", "mov~rcx,<TAG>", "push~0", "lea~r9,<TAG>", "lea~r8,<TAG>", "push~rax", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "xor~eax,eax", "call~FOO", "xor~edi,edi", "call~FOO"]], [1, 0, 28, 0, 2, 7, 1, 2, 6, -1, 0.006688963210702341, ["lea     rsi, aBackupType; \"backup type\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, [rsp+158h+version_control_string]; version", "mov     rdi, rax; context", "call    xget_version"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,[rsp+0]", "mov~rdi,rax", "call~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 3, -1, 0.0, ["mov     edi, 1; jumptable 0000000000003050 default case", "call    usage"], ["mov~edi,0", "call~FOO"]]], "func_feature": [46, 48, 120, 1, 94, 153, 0, 441, 0.03122, 40, 5], "succs": [[4, 5], [0], [0, 76], [14], [10, 11], [4], [14], [6, 12, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 41, 55, 57, 70, 74, 78, 90, 92], [5], [8, 1], [11, 84], [13, 79], [32, 45], [47], [89, 51], [14], [14], [14], [14], [14], [14], [14], [14], [14], [14], [14], [14], [14], [14], [14], [14], [14], [14], [14], [14], [14], [14], [14], [14], [14], [82, 14], [14], [14], [44, 14], [14], [14], [14], [50, 77], [85, 47], [77], [49, 58], [92, 7], [48, 50], [50, 54], [50, 71], [42, 15], [64], [56, 69], [64, 59], [], [88, 91], [67, 60], [86], [66, 62], [], [67, 87], [65, 61], [2, 68], [72, 2], [40], [], [70], [86], [72], [75, 22], [22], [9, 1], [], [80, 43], [48, 83], [46, 23], [81], [41], [84], [52, 53], [71], [92], [86], [73, 91], [66, 63], [], [2], []], "fname": "main", "n_num": 93}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 0, 0, 1, 12, 2, 1, 0, 0, 0.0, ["xor     ebp, ebp", "mov     r9, rdx; rtld_fini", "pop     rsi; argc", "mov     rdx, rsp; ubp_av", "and     rsp, 0FFFFFFFFFFFFFFF0h", "push    rax", "push    rsp; stack_end", "lea     r8, __libc_csu_fini; fini", "lea     rcx, __libc_csu_init; init", "lea     rdi, main; main", "call    cs:__libc_start_main_ptr", "hlt"], ["xor~ebp,ebp", "mov~r9,rdx", "pop~rsi", "mov~rdx,rsp", "and~rsp,0", "push~rax", "push~rsp", "lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "call~<TAG>", "hlt"]]], "func_feature": [1, 2, 1, 0, 1, 0, 0, 12, 0.0, 4, 0], "succs": [[]], "fname": "_start", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_deregisterTMCloneTable_ptr", "test    rax, rax", "jz      short loc_3730"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 6, 0, 1, 0, 1, 0.0, ["lea     rdi, __bss_start", "push    rbp", "lea     rax, __bss_start", "cmp     rax, rdi", "mov     rbp, rsp", "jz      short loc_3730"], ["lea~rdi,<TAG>", "push~rbp", "lea~rax,<TAG>", "cmp~rax,rdi", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, -1, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 13, 0.04167, 2, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "deregister_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [3, 0, 3, 2, 0, 11, 0, 1, 0, 0, 0.0, ["lea     rdi, __bss_start", "lea     rsi, __bss_start", "push    rbp", "sub     rsi, rdi", "mov     rbp, rsp", "sar     rsi, 3", "mov     rax, rsi", "shr     rax, 3Fh", "add     rsi, rax", "sar     rsi, 1", "jz      short loc_3780"], ["lea~rdi,<TAG>", "lea~rsi,<TAG>", "push~rbp", "sub~rsi,rdi", "mov~rbp,rsp", "sar~rsi,0", "mov~rax,rsi", "shr~rax,0", "add~rsi,rax", "sar~rsi,0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_registerTMCloneTable_ptr", "test    rax, rax", "jz      short loc_3780"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, 0, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 18, 0.04167, 2, 2], "succs": [[], [0, 2], [0, 3], []], "fname": "register_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 0, 0, 1, 4, 0, 1, 0, 0, 0.0, ["call    deregister_tm_clones", "mov     cs:completed_7697, 1", "pop     rbp", "retn"], ["call~FOO", "mov~<TAG>,0", "pop~rbp", "retn"]], [1, 0, 2, 0, 0, 4, 0, 1, 1, -1, 0.16666666666666666, ["cmp     cs:__cxa_finalize_ptr, 0", "push    rbp", "mov     rbp, rsp", "jz      short loc_37B3"], ["cmp~<TAG>,0", "push~rbp", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     rdi, cs:__dso_handle", "call    __cxa_finalize"], ["mov~rdi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:completed_7697, 0", "jnz     short locret_37C8"], ["cmp~<TAG>,0", "jnz~FOO"]]], "func_feature": [2, 0, 4, 0, 5, 5, 0, 13, 0.03333, 3, 0], "succs": [[], [0, 2], [0], [], [1, 3]], "fname": "__do_global_dtors_aux", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "pop     rbp", "jmp     register_tm_clones"], ["push~rbp", "mov~rbp,rsp", "pop~rbp", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "frame_dummy", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 1, 0, 9, 0, 1, 6, -1, 0.05514705882352941, ["mov     rdi, [rsp+48h+arg_writable]; ptr", "add     rsp, 18h", "pop     on_off", "pop     x", "pop     r12", "pop     r13", "pop     comma", "pop     comma", "jmp     free"], ["mov~rdi,[rsp+0]", "add~rsp,0", "pop~on_off", "pop~x", "pop~r12", "pop~r13", "pop~comma", "pop~comma", "jmp~FOO"]], [1, 0, 17, 0, 1, 6, 2, 2, 1, 2, 0.5073529411764706, ["mov     esi, 2Ch ; ','; c", "mov     rdi, s; s", "xor     r14d, r14d", "call    _strchr", "test    comma, comma", "jz      short loc_384C"], ["mov~esi,0", "mov~rdi,s", "xor~r14d,r14d", "call~FOO", "test~comma,comma", "jz~FOO"]], [0, 0, 17, 0, 0, 3, 1, 1, 5, 3, 0.5477941176470588, ["test    comma, comma", "mov     r15, comma", "jnz     short loc_3830"], ["test~comma,comma", "mov~r15,comma", "jnz~FOO"]], [1, 0, 17, 1, 1, 21, 1, 1, 0, 3, 0.0, ["push    r15", "push    r14", "lea     r14, aPreserve; \"--preserve\"", "push    r13", "push    r12", "mov     r12d, edx", "push    rbp", "push    rbx", "mov     rbp, x", "mov     ebx, edx", "lea     r13, preserve_vals_7370", "sub     rsp, 18h", "call    xstrdup", "mov     r15, rax", "mov     [rsp+48h+arg_writable], rax", "lea     s, aNoPreserve; \"--no-preserve\"", "test    r12b, r12b", "lea     r12, off_12C00", "cmovnz  rax, r14", "mov     [rsp+48h+context], rax", "nop     word ptr [rax+rax+00h]"], ["push~r15", "push~r14", "lea~r14,<TAG>", "push~r13", "push~r12", "mov~r12d,edx", "push~rbp", "push~rbx", "mov~rbp,x", "mov~ebx,edx", "lea~r13,<TAG>", "sub~rsp,0", "call~FOO", "mov~r15,rax", "mov~[rsp+0],rax", "lea~s,<TAG>", "test~r12b,r12b", "lea~r12,<TAG>", "cmovnz~rax,r14", "mov~<TAG>,rax", "nop~[ord ptr [rax+0]"]], [0, 0, 17, 0, 0, 3, 0, 1, 4, 4, 0.013480392156862746, ["mov     [x+26h], bl; jumptable 000000000000388B case 4", "mov     [x+25h], bl", "jmp     short loc_38A0"], ["mov~[x+0],bl", "mov~[x+0],bl", "jmp~FOO"]], [0, 0, 17, 1, 0, 4, 0, 1, 3, 5, 0.4742647058823529, ["mov     eax, [r13+rax*4+0]", "movsxd  rax, dword ptr [r12+rax*4]", "add     rax, r12", "jmp     rax; switch jump"], ["mov~eax,[r13+0]", "movsxd~rax,<TAG>", "add~rax,r12", "jmp~rax"]], [0, 0, 17, 0, 0, 2, 0, 1, 4, 4, 0.013480392156862746, ["mov     [x+22h], bl; jumptable 000000000000388B case 3", "jmp     short loc_38A0"], ["mov~[x+0],bl", "jmp~FOO"]], [0, 0, 17, 0, 0, 2, 0, 1, 4, 4, 0.013480392156862746, ["mov     [x+1Dh], bl; jumptable 000000000000388B case 2", "jmp     short loc_38A0"], ["mov~[x+0],bl", "jmp~FOO"]], [0, 0, 17, 0, 0, 2, 0, 1, 4, 4, 0.013480392156862746, ["mov     [x+1Fh], bl; jumptable 000000000000388B case 1", "jmp     short loc_38A0"], ["mov~[x+0],bl", "jmp~FOO"]], [1, 0, 17, 0, 0, 5, 1, 1, 4, 4, 0.013480392156862746, ["mov     eax, ebx; jumptable 000000000000388B case 0", "mov     [x+1Eh], bl", "xor     eax, 1", "mov     [x+20h], al", "jmp     short loc_38A0"], ["mov~eax,ebx", "mov~[x+0],bl", "xor~eax,0", "mov~[x+0],al", "jmp~FOO"]], [0, 0, 17, 0, 0, 2, 0, 1, 5, 4, 0.10661764705882353, ["mov     [x+27h], bl", "jmp     short loc_38A0"], ["mov~[x+0],bl", "jmp~FOO"]], [0, 0, 17, 0, 0, 3, 0, 0, 4, 4, 0.013480392156862746, ["mov     [x+27h], bl; jumptable 000000000000388B case 5", "mov     [x+28h], bl", "nop     word ptr [rax+rax+00000000h]"], ["mov~[x+0],bl", "mov~[x+0],bl", "nop~[ord ptr [rax+0]"]], [2, 0, 17, 0, 0, 9, 1, 1, 4, 5, 0.09191176470588235, ["mov     eax, ebx; jumptable 000000000000388B case 6", "mov     [x+1Eh], bl", "mov     [x+1Fh], bl", "xor     eax, 1", "cmp     cs:selinux_enabled, 0", "mov     [x+1Dh], bl", "mov     [x+22h], bl", "mov     [x+20h], al", "jz      short loc_3918"], ["mov~eax,ebx", "mov~[x+0],bl", "mov~[x+0],bl", "xor~eax,0", "cmp~<TAG>,0", "mov~[x+0],bl", "mov~[x+0],bl", "mov~[x+0],al", "jz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 0, 2, 2, 0.0, ["lea     r14, [comma+1]", "mov     byte ptr [rax], 0"], ["lea~r14,[comma+0]", "mov~<TAG>,0"]], [2, 0, 17, 0, 1, 9, 0, 2, 2, 1, 0.5220588235294118, ["mov     r9, cs:argmatch_die; exit_fn", "mov     rdi, [rsp+48h+context]; context", "lea     rcx, preserve_vals_7370; vallist", "lea     rdx, preserve_args_7371; arglist", "mov     r8d, 4; valsize", "mov     rsi, s; arg", "call    __xargmatch_internal", "cmp     dword ptr [r13+rax*4+0], 6; switch 7 cases", "ja      loc_391D; jumptable 000000000000388B default case"], ["mov~r9,<TAG>", "mov~rdi,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~r8d,0", "mov~rsi,s", "call~FOO", "cmp~[word ptr [r13+0],0", "ja~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    _abort; jumptable 000000000000388B default case"], ["call~FOO"]], [0, 0, 17, 0, 0, 1, 0, 0, 5, 5, 0.0, ["mov     [x+25h], bl"], ["mov~[x+0],bl"]]], "func_feature": [4, 6, 16, 0, 18, 26, 2, 84, 0.13256, 7, 3], "succs": [[], [0], [14, 15], [1, 2], [2], [3], [5, 7, 8, 9, 10, 12, 13], [3], [3], [3], [3], [3], [3], [17, 11], [15], [16, 6], [], [11]], "fname": "decode_preserve_arg", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 7, 0, 1, 4, 1, 2, 0, 0, 0.045454545454545456, ["call    ___errno_location", "mov     r12d, [rax]", "test    r12d, r12d", "jnz     short loc_3997"], ["call~FOO", "mov~r12d,<TAG>", "test~r12d,r12d", "jnz~FOO"]], [1, 0, 10, 0, 1, 15, 1, 2, 0, -1, 0.0, ["push    r14", "push    r13", "mov     r14, new_dst", "push    r12", "push    rbp", "mov     new_dst, st; stat_buf", "push    rbx", "mov     rbp, file", "mov     rbx, st", "mov     st, file; filename", "mov     edi, 1; ver", "mov     r13d, ecx", "call    ___xstat", "test    eax, eax", "jnz     short loc_3975"], ["push~r14", "push~r13", "mov~r14,new_dst", "push~r12", "push~rbp", "mov~new_dst,st", "push~rbx", "mov~rbp,file", "mov~rbx,st", "mov~st,file", "mov~edi,0", "mov~r13d,ecx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 3, -1, 0.02727272727272727, ["test    r13b, r13b", "jz      short loc_39BC"], ["test~r13b,r13b", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 2, -1, 0.05909090909090909, ["cmp     r12d, 2", "jz      short loc_39B4"], ["cmp~r12d,0", "jz~FOO"]], [0, 0, 1, 0, 0, 0, 0, 0, -1, 0, 0.0, [], []], [1, 1, 3, 0, 0, 4, 1, 1, 1, -1, 0.02727272727272727, ["mov     edx, [st+18h]", "and     edx, 0F000h", "cmp     edx, 4000h", "jz      short loc_39AD"], ["mov~edx,[st+0]", "and~edx,0", "cmp~edx,<STR>", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 1, 0, 2, -1, 0.022727272727272728, ["and     eax, 1"], ["and~eax,0"]], [1, 1, 2, 0, 0, 6, 1, 1, 2, -1, 0.013636363636363636, ["mov     eax, [st+18h]", "and     eax, 0F000h", "cmp     eax, 4000h", "setz    al", "movzx   eax, al", "jmp     short loc_3969"], ["mov~eax,[st+0]", "and~eax,0", "cmp~eax,<STR>", "setz~al", "movzx~eax,al", "jmp~FOO"]], [1, 0, 1, 0, 0, 3, 1, 1, 4, -1, 0.00909090909090909, ["mov     dword ptr [st+18h], 0", "xor     eax, eax", "jmp     short loc_396C"], ["mov~[word ptr [st+0],0", "xor~eax,eax", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, -1, 0.00909090909090909, ["mov     eax, 1", "jmp     short loc_396C"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 6, 0, 0, 3, -1, 0.0, ["pop     st", "pop     file", "pop     r12", "pop     r13", "pop     new_dst", "retn"], ["pop~st", "pop~file", "pop~r12", "pop~r13", "pop~new_dst", "retn"]], [1, 0, 1, 0, 0, 3, 1, 1, 3, -1, 0.013636363636363636, ["mov     byte ptr [new_dst], 1", "xor     eax, eax", "jmp     short loc_396C"], ["mov~<TAG>,0", "xor~eax,eax", "jmp~FOO"]]], "func_feature": [5, 10, 14, 0, 13, 15, 2, 64, 0.01894, 1, 0], "succs": [[3, 7], [0, 5], [8], [2, 11], [4], [9, 6], [10], [6], [10], [10], [], [10]], "fname": "target_directory_operand", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 1, 51, 0, 0, 4, 1, 1, 0, 0, 0.12960257159555816, ["mov     eax, [rbp+src_st.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_3BF1"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 51, 0, 1, 6, 1, 2, 6, 4, 0.2707481005260082, ["mov     rdx, [rbp-188h]; stat_buf", "mov     rsi, [rbp+slash]; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jz      loc_3DB0"], ["mov~rdx,[rbp-188h]+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 51, 0, 0, 4, 1, 1, 16, 5, 0.17314436002337813, ["mov     eax, esi", "and     eax, 1C0h", "cmp     eax, 1C0h", "jz      short loc_3D9A"], ["mov~eax,esi", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 51, 0, 0, 3, 0, 1, 15, 6, 0.20192869666861482, ["cmp     byte ptr [x+1Eh], 0", "mov     esi, [rbp+stats.st_mode]", "jnz     short loc_3D76"], ["cmp~[yte ptr [x+0],0", "mov~esi,[rbp+0]", "jnz~FOO"]], [1, 0, 51, 0, 0, 3, 1, 0, 18, 6, 0.025569842197545295, ["or      r14d, eax", "mov     byte ptr [new+90h], 1", "mov     [new+18h], r14d"], ["or~r14d,eax", "mov~[yte ptr [new+0],0", "mov~[new+0],r14d"]], [0, 0, 51, 0, 0, 3, 1, 1, 13, 5, 0.21215663354763295, ["mov     rax, [rbp+verbose_fmt_string]", "test    rax, rax", "jz      short loc_3D21"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [2, 0, 51, 0, 1, 8, 2, 2, 12, 4, 0.23758036236119226, ["cmp     byte ptr [x+20h], 0", "mov     edx, 1FFh", "mov     rdi, dir; path", "cmovnz  esi, edx", "and     esi, eax; mode", "call    _mkdir", "test    eax, eax", "jnz     loc_3F34"], ["cmp~[yte ptr [x+0],0", "mov~edx,0", "mov~rdi,dir", "cmovnz~esi,edx", "and~esi,eax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 51, 1, 1, 31, 1, 2, 8, 4, 0.24810052600818233, ["mov     edi, 0A8h; n", "call    xmalloc", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_dev]", "mov     r15, rax", "mov     rcx, [rbp+attr_list]", "movups  xmmword ptr [new], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_nlink]", "movups  xmmword ptr [new+10h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_gid]", "movups  xmmword ptr [new+20h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_size]", "movups  xmmword ptr [new+30h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_blocks]", "movups  xmmword ptr [new+40h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_atim.tv_nsec]", "movups  xmmword ptr [new+50h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_mtim.tv_nsec]", "movups  xmmword ptr [new+60h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.st_ctim.tv_nsec]", "movups  xmmword ptr [new+70h], xmm0", "movdqa  xmm0, xmmword ptr [rbp+src_st.__glibc_reserved+8]", "movups  xmmword ptr [new+80h], xmm0", "mov     new, slash_0", "mov     byte ptr [new+90h], 0", "sub     rax, dir", "test    r14d, r14d", "mov     [new+98h], rax", "mov     rax, [rcx]", "mov     [rcx], new", "mov     [new+0A0h], rax", "jz      loc_3B42"], ["mov~edi,0", "call~FOO", "movdqa~xmm0,[mmword ptr [rbp+0]", "mov~r15,rax", "mov~rcx,[rbp+0]", "movups~<TAG>,xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "movdqa~xmm0,[mmword ptr [rbp+0]", "movups~[mmword ptr [new+0],xmm0", "mov~new,slash_0", "mov~[yte ptr [new+0],0", "sub~rax,dir", "test~r14d,r14d", "mov~[new+0],rax", "mov~rax,<TAG>", "mov~<TAG>,new", "mov~[new+0],rax", "jz~FOO"]], [0, 0, 51, 0, 1, 4, 1, 2, 7, 3, 0.13062536528345994, ["call    ___errno_location", "mov     r8d, [rax]", "test    r8d, r8d", "jnz     loc_3DCC"], ["call~FOO", "mov~r8d,<TAG>", "test~r8d,r8d", "jnz~FOO"]], [1, 0, 51, 0, 0, 3, 1, 1, 10, 5, 0.10666277030976037, ["mov     rax, 0FF000000FF00h", "test    [x+20h], rax", "jnz     loc_3E40"], ["mov~rax,0", "test~[x+0],rax", "jnz~FOO"]], [0, 0, 51, 0, 0, 1, 0, 1, 18, 6, 0.023085914669783752, ["jmp     loc_3B80"], ["jmp~FOO"]], [1, 0, 51, 0, 0, 2, 0, 0, 9, 6, 0.06691992986557568, ["mov     rax, [rbp+new_dst]", "mov     byte ptr [rax], 0"], ["mov~rax,[rbp+0]", "mov~<TAG>,0"]], [1, 0, 51, 0, 1, 5, 1, 2, 4, 3, 0.3771186440677966, ["mov     esi, 2Fh ; '/'; c", "call    _strchr", "test    rax, rax", "mov     rbx, rax", "jz      loc_3E9C"], ["mov~esi,0", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [2, 0, 51, 0, 0, 4, 0, 1, 11, 4, 0.2809760374050263, ["cmp     byte ptr [slash_0+1], 2Fh ; '/'", "lea     rdi, [slash_0+1]", "mov     byte ptr [rbx], 2Fh ; '/'", "jnz     loc_3B00"], ["cmp~[yte ptr [slash_0+0],0", "lea~rdi,[slash_0+0]", "mov~<TAG>,0", "jnz~FOO"]], [0, 0, 51, 0, 0, 1, 0, 1, 14, 4, 0.028345996493278784, ["jmp     loc_3B00"], ["jmp~FOO"]], [0, 0, 51, 0, 0, 3, 0, 0, 3, 4, 0.07305669199298655, ["lea     rax, [rbp+src_st]", "mov     [rbp-188h], rax", "nop"], ["lea~rax,[rbp+0]", "mov~[rbp-188h]+0],rax", "nop"]], [1, 0, 51, 0, 1, 5, 2, 2, 17, 4, 0.01928696668614845, ["or      esi, 1C0h; mode", "mov     rdi, dir; file", "call    _chmod", "test    eax, eax", "jnz     loc_3F9D"], ["or~esi,0", "mov~rdi,dir", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 3, 0, 3, 18, 4, 4, 8, 2, 0.003945061367621274, ["mov     rsi, [rbp+slash]; arg", "mov     edi, 4; s", "mov     dword ptr [rbp+stat_buf], r8d", "call    quotearg_style", "lea     rsi, aFailedToGetAtt; \"failed to get attributes of %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     slash_0, rax", "call    _dcgettext", "mov     r8d, dword ptr [rbp+stat_buf]", "mov     rdx, rax; format", "mov     rcx, rbx", "xor     eax, eax", "xor     edi, edi; status", "mov     esi, r8d; errnum", "call    _error", "xor     eax, eax", "jmp     loc_3EA1"], ["mov~rsi,[rbp+0]", "mov~edi,0", "mov~[word ptr [rbp+0],r8d", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~slash_0,rax", "call~FOO", "mov~r8d,[word ptr [rbp+0]", "mov~rdx,rax", "mov~rcx,rbx", "xor~eax,eax", "xor~edi,edi", "mov~esi,r8d", "call~FOO", "xor~eax,eax", "jmp~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 8, 3, 0.0011689070718877848, ["mov     r8d, 14h"], ["mov~r8d,0"]], [0, 0, 51, 0, 1, 9, 2, 2, 17, 7, 0.024839275277615428, ["call    cached_umask", "mov     esi, [rbp+stats.st_mode]", "not     eax", "and     r14d, eax", "mov     edx, esi", "mov     eax, esi", "not     edx", "test    edx, r14d", "jnz     loc_3D67"], ["call~FOO", "mov~esi,[rbp+0]", "not~eax", "and~r14d,eax", "mov~edx,esi", "mov~eax,esi", "not~edx", "test~edx,r14d", "jnz~FOO"]], [0, 0, 51, 0, 0, 4, 1, 1, 16, 7, 0.058445353594389245, ["mov     eax, esi", "not     eax", "test    eax, r14d", "jnz     loc_3F00"], ["mov~eax,esi", "not~eax", "test~eax,r14d", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 0, 2, 3, 0.0014611338398597311, ["mov     rax, [rbp+new_dst]", "mov     byte ptr [rax], 0"], ["mov~rax,[rbp+0]", "mov~<TAG>,0"]], [1, 1, 7, 0, 0, 4, 1, 1, 1, 4, 0.0020455873758036236, ["mov     eax, [rbp+stats.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     short loc_3EC3"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [1, 0, 51, 0, 1, 8, 1, 2, 9, 3, 0.22749853886616012, ["mov     edx, [new+18h]; mode", "mov     rdi, [rbp+slash]; src_name", "mov     r8, x; x", "mov     ecx, 1; new_dst", "mov     rsi, dir; dst_name", "call    set_process_security_ctx", "test    al, al", "jz      loc_3E65"], ["mov~edx,[new+0]", "mov~rdi,[rbp+0]", "mov~r8,x", "mov~ecx,0", "mov~rsi,dir", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 51, 0, 1, 6, 1, 1, 14, 5, 0.0, ["mov     rdx, [rbp+slash]", "mov     rsi, rax", "mov     rcx, dir", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk"], ["mov~rdx,[rbp+0]", "mov~rsi,rax", "mov~rcx,dir", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [2, 0, 51, 0, 1, 8, 1, 2, 5, 5, 0.353009935710111, ["mov     rdx, [rbp+stat_buf]; stat_buf", "mov     byte ptr [rbx], 0", "mov     rsi, dir; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "mov     r14d, eax", "jnz     loc_3BC0"], ["mov~rdx,[rbp+0]", "mov~<TAG>,0", "mov~rsi,dir", "mov~edi,0", "call~FOO", "test~eax,eax", "mov~r14d,eax", "jnz~FOO"]], [1, 0, 51, 0, 0, 2, 1, 1, 6, 4, 0.08080070134424312, ["test    dword ptr [x+1Ch], 0FFFFFF00h", "jnz     short loc_3BC0"], ["test~[word ptr [x+0],0", "jnz~FOO"]], [1, 0, 51, 0, 0, 3, 0, 1, 17, 5, 0.19959088252483925, ["mov     rax, [rbp+new_dst]", "cmp     byte ptr [rax], 0", "jnz     loc_3B94"], ["mov~rax,[rbp+0]", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 51, 0, 1, 7, 2, 2, 11, 4, 0.020309760374050263, ["movzx   esi, byte ptr [x+25h]; process_local", "xor     edx, edx; recurse", "mov     rcx, x; x", "mov     rdi, dir; dst_name", "call    set_file_security_ctx", "test    al, al", "jnz     loc_3B94"], ["movzx~esi,[yte ptr [x+0]", "xor~edx,edx", "mov~rcx,x", "mov~rdi,dir", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 51, 0, 0, 2, 0, 1, 12, 3, 0.009205143191116306, ["cmp     byte ptr [x+26h], 0", "jz      loc_3B94"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [0, 0, 51, 0, 0, 1, 0, 1, 18, 7, 0.0062828755113968435, ["jmp     loc_3D57"], ["jmp~FOO"]], [2, 0, 4, 0, 1, 7, 0, 2, 15, 3, 0.0035067212156633543, ["mov     rsi, dir; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     edx, 5", "mov     dir, rax", "lea     rsi, aFailedToGetAtt; \"failed to get attributes of %s\"", "jmp     short loc_3F50"], ["mov~rsi,dir", "mov~edi,0", "call~FOO", "mov~edx,0", "mov~dir,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 51, 0, 1, 6, 1, 2, 14, 4, 0.2162478082992402, ["mov     rdx, [rbp+stat_buf]; stat_buf", "mov     rsi, dir; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jnz     loc_3F7F"], ["mov~rdx,[rbp+0]", "mov~rsi,dir", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 51, 0, 0, 4, 1, 1, 17, 6, 0.043980128579777907, ["mov     eax, esi", "and     eax, 1C0h", "cmp     eax, 1C0h", "jz      short loc_3D9A"], ["mov~eax,esi", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 51, 0, 0, 1, 0, 0, 12, 6, 0.024254821741671536, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [1, 0, 3, 0, 0, 1, 0, 0, 3, 2, 0.015341905318527176, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 3, 0, 3, 12, 4, 4, 14, 2, 0.015780245470485097, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     slash_0, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "xor     eax, eax", "mov     rdx, rbx; format", "xor     edi, edi; status", "call    _error", "xor     eax, eax", "jmp     loc_3EA1"], ["xor~edi,edi", "call~FOO", "mov~slash_0,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "xor~eax,eax", "mov~rdx,rbx", "xor~edi,edi", "call~FOO", "xor~eax,eax", "jmp~FOO"]], [2, 0, 4, 0, 1, 7, 0, 2, 18, 3, 0.007890122735242549, ["mov     rsi, dir; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     edx, 5", "mov     dir, rax", "lea     rsi, aSettingPermiss; \"setting permissions for %s\"", "jmp     short loc_3F50"], ["mov~rsi,dir", "mov~edi,0", "call~FOO", "mov~edx,0", "mov~dir,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [2, 0, 4, 0, 1, 6, 0, 1, 13, 3, 0.014611338398597311, ["mov     rsi, dir; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aCannotMakeDire; \"cannot make directory %s\"", "mov     dir, rax", "mov     edx, 5; category"], ["mov~rsi,dir", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~dir,rax", "mov~edx,0"]], [0, 0, 2, 0, 0, 3, 1, 1, 4, 1, 0.03331385154880187, ["mov     rcx, [rbp+var_38]", "xor     rcx, fs:28h", "jnz     loc_3FBB"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 8, 2, 0.007013442431326709, ["xor     eax, eax", "jmp     short loc_3EA1"], ["xor~eax,eax", "jmp~FOO"]], [2, 0, 3, 0, 3, 15, 5, 4, 3, 2, 0.0035067212156633543, ["mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aSExistsButIsNo; \"%s exists but is not a directory\"", "mov     rbx, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     eax, eax", "xor     edi, edi; status", "call    _error", "xor     eax, eax", "jmp     short loc_3EA1"], ["mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~eax,eax", "xor~edi,edi", "call~FOO", "xor~eax,eax", "jmp~FOO"]], [2, 0, 51, 1, 0, 3, 0, 1, 13, 5, 0.02630040911747516, ["add     slash_0, 1", "cmp     byte ptr [slash_0], 2Fh ; '/'", "jz      short loc_3BA8"], ["add~slash_0,0", "cmp~<TAG>,0", "jz~FOO"]], [0, 2, 51, 0, 0, 5, 2, 1, 12, 5, 0.007013442431326709, ["mov     r14d, esi", "and     r14d, 12h", "mov     eax, r14d", "xor     eax, 0FFFh", "jmp     loc_3CDD"], ["mov~r14d,esi", "and~r14d,<STR>", "mov~eax,r14d", "xor~eax,<STR>", "jmp~FOO"]], [1, 0, 51, 0, 0, 2, 0, 1, 11, 6, 0.024547048509643482, ["cmp     byte ptr [x+1Eh], 0", "jz      short loc_3E70"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 8, 0, 0, 5, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     x", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~x", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [0, 0, 4, 0, 0, 1, 0, 0, 2, 3, 0.0014611338398597311, ["mov     rsi, dst_dir; arg"], ["mov~rsi,dst_dir"]], [2, 0, 51, 0, 0, 5, 0, 1, 10, 6, 0.22735242548217416, ["mov     rax, [rbp+new_dst]", "mov     esi, [new+18h]", "mov     byte ptr [rax], 1", "cmp     byte ptr [x+1Dh], 0", "jz      loc_3E20"], ["mov~rax,[rbp+0]", "mov~esi,[new+0]", "mov~<TAG>,0", "cmp~[yte ptr [x+0],0", "jz~FOO"]], [9, 1, 59, 5, 5, 50, 6, 6, 0, 5, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "mov     r13, x", "push    rbx", "mov     r15, src_offset", "mov     rbx, const_dir", "sub     rsp, 168h", "mov     [rbp+attr_list], attr_list_0", "mov     [rbp+new_dst], new_dst_0", "mov     [rbp+verbose_fmt_string], verbose_fmt_string_0", "mov     verbose_fmt_string_0, fs:28h", "mov     [rbp+var_38], verbose_fmt_string_0", "xor     edx, edx", "call    _strlen", "lea     rdx, [rax+1]; n", "add     rax, 1Fh", "mov     rsi, __old; src", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rdi, [rsp+190h+var_181]", "and     rdi, 0FFFFFFFFFFFFFFF0h; dest", "call    _memcpy", "mov     rdi, rax; file", "mov     r12, rax", "call    dir_len", "mov     r14, rax", "add     dirlen, 1Fh", "mov     rsi, dir; src", "and     rax, 0FFFFFFFFFFFFFFF0h", "mov     rdx, dirlen; n", "sub     rsp, rax", "lea     __old, [rsp+190h+var_181]", "and     rbx, 0FFFFFFFFFFFFFFF0h", "mov     rdi, dst_dir; dest", "call    _memcpy", "mov     rax, [rbp+attr_list]", "mov     byte ptr [dst_dir+dirlen], 0", "mov     rsi, dst_dir; filename", "mov     edi, 1; ver", "mov     qword ptr [rax], 0", "lea     rax, [rbp+stats]", "mov     rdx, rax; stat_buf", "mov     [rbp+stat_buf], rax", "call    ___xstat", "test    eax, eax", "jz      loc_3E80"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "mov~r13,x", "push~rbx", "mov~r15,src_offset", "mov~rbx,const_dir", "sub~rsp,<STR>", "mov~[rbp+0],attr_list_0", "mov~[rbp+0],new_dst_0", "mov~[rbp+0],verbose_fmt_string_0", "mov~verbose_fmt_string_0,<TAG>", "mov~[rbp+0],verbose_fmt_string_0", "xor~edx,edx", "call~FOO", "lea~rdx,[rax+0]", "add~rax,0", "mov~rsi,__old", "and~rax,0", "sub~rsp,rax", "lea~rdi,[rsp+0]", "and~rdi,0", "call~FOO", "mov~rdi,rax", "mov~r12,rax", "call~FOO", "mov~r14,rax", "add~dirlen,0", "mov~rsi,dir", "and~rax,0", "mov~rdx,dirlen", "sub~rsp,rax", "lea~__old,[rsp+0]", "and~rbx,0", "mov~rdi,dst_dir", "call~FOO", "mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~rsi,dst_dir", "mov~edi,0", "mov~<TAG>,0", "lea~rax,[rbp+0]", "mov~rdx,rax", "mov~[rbp+0],rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 1, 51, 0, 0, 4, 2, 0, 11, 5, 0.1922852133255406, ["mov     r14d, esi", "and     r14d, 3Fh", "mov     eax, r14d", "xor     eax, 0FFFh"], ["mov~r14d,esi", "and~r14d,0", "mov~eax,r14d", "xor~eax,<STR>"]], [0, 0, 51, 0, 1, 8, 3, 2, 7, 3, 0.09643483343074225, ["mov     rdi, [rbp+slash]; src_name", "xor     ecx, ecx; new_dst", "xor     edx, edx; mode", "mov     r8, x; x", "mov     rsi, dir; dst_name", "call    set_process_security_ctx", "test    al, al", "jz      loc_3E65"], ["mov~rdi,[rbp+0]", "xor~ecx,ecx", "xor~edx,edx", "mov~r8,x", "mov~rsi,dir", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 55, 0, 0, 4, 0, 1, 1, 6, 0.014611338398597311, ["lea     rdi, [dir+src_offset]", "cmp     byte ptr [src_0], 2Fh ; '/'", "mov     [rbp+slash], src_0", "jnz     loc_3F28"], ["lea~rdi,<TAG>", "cmp~<TAG>,0", "mov~[rbp+0],src_0", "jnz~FOO"]], [0, 0, 53, 0, 0, 1, 0, 0, 2, 6, 0.0005844535359438924, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 51, 0, 0, 1, 0, 0, 18, 7, 0.0029222676797194622, ["mov     eax, esi"], ["mov~eax,esi"]], [0, 0, 52, 0, 0, 2, 0, 1, 2, 5, 0.028930450029222676, ["mov     slash_0, [rbp+slash]", "jmp     loc_3AF1"], ["mov~slash_0,[rbp+0]", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 0, 53, 1, 0, 3, 0, 1, 3, 5, 0.015195791934541203, ["add     slash_0, 1; s", "cmp     byte ptr [slash_0], 2Fh ; '/'", "jz      short loc_3AE8"], ["add~slash_0,0", "cmp~<TAG>,0", "jz~FOO"]], [1, 1, 51, 0, 0, 4, 1, 1, 8, 4, 0.09117475160724722, ["mov     eax, [rbp+stats.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     loc_3F77"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [0, 1, 51, 0, 0, 3, 1, 1, 12, 5, 0.007013442431326709, ["xor     r14d, r14d", "mov     eax, 0FFFh", "jmp     loc_3CDD"], ["xor~r14d,r14d", "mov~eax,<STR>", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 9, 3, 0.013442431326709525, ["mov     rsi, dir", "jmp     loc_3EC6"], ["mov~rsi,dir", "jmp~FOO"]]], "func_feature": [31, 55, 76, 1, 60, 90, 1, 336, 0.0788, 5, 8], "succs": [[18, 7], [0, 8], [16, 27], [2, 20], [2], [24, 32], [5, 38], [50, 23], [17, 7], [28, 13], [9], [9], [25, 35], [34, 12], [12], [12], [27, 37], [39], [17], [4, 30], [33, 19], [35], [21, 46], [40, 47], [32], [1, 26], [1, 50], [10, 13], [13, 29], [40, 13], [33], [36], [3, 31], [27, 53], [42], [39], [39], [36], [36], [45, 55], [39], [39], [42, 14], [6], [58, 43], [], [41], [49, 44], [51, 22], [6], [40, 57], [52, 54], [56], [4], [15], [], [56, 15], [11, 59], [6], [41]], "fname": "make_dir_parents_private", "n_num": 60}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[2, 0, 21, 0, 0, 4, 0, 1, 0, 0, 0.2683982683982684, ["cmp     byte ptr [x+1Fh], 0", "mov     rax, [p+98h]", "mov     byte ptr [dst_name+rax], 0", "jz      short loc_4030"], ["cmp~[yte ptr [x+0],0", "mov~rax,[p+0]", "mov~<TAG>,0", "jz~FOO"]], [0, 0, 21, 0, 0, 2, 0, 1, 1, 5, 0.0367965367965368, ["lea     r15, [rbp+timespec]", "jmp     short loc_4072"], ["lea~r15,[rbp+0]", "jmp~FOO"]], [1, 0, 21, 0, 0, 5, 1, 1, 6, 3, 0.21861471861471862, ["mov     rax, [p+98h]", "mov     byte ptr [dst_name+rax], 2Fh ; '/'", "mov     p, [p+0A0h]", "test    p, p", "jz      loc_41D0"], ["mov~rax,[p+0]", "mov~<TAG>,0", "mov~p,[p+0]", "test~p,p", "jz~FOO"]], [0, 0, 21, 0, 1, 5, 1, 2, 6, 4, 0.03463203463203463, ["mov     esi, [p+18h]; mode", "mov     rdi, dst_name; file", "call    _chmod", "test    eax, eax", "jz      loc_4056"], ["mov~esi,[p+0]", "mov~rdi,dst_name", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 5, 4, 0.13095238095238096, ["cmp     byte ptr [p+90h], 0", "jnz     loc_4178"], ["cmp~[yte ptr [p+0],0", "jnz~FOO"]], [0, 0, 21, 0, 1, 6, 1, 2, 4, 5, 0.11471861471861472, ["mov     edx, [p+20h]; group", "mov     esi, [p+1Ch]; owner", "mov     rdi, dst_name; file", "call    _lchown", "test    eax, eax", "jz      loc_403B"], ["mov~edx,[p+0]", "mov~esi,[p+0]", "mov~rdi,dst_name", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 3, 5, 0.24891774891774893, ["cmp     byte ptr [x+1Dh], 0", "jnz     loc_4100"], ["cmp~[yte ptr [x+0],0", "jnz~FOO"]], [2, 0, 4, 0, 1, 7, 0, 2, 6, 3, 0.031385281385281384, ["mov     rsi, dst_name; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     edx, 5", "mov     dst_name, rax", "lea     rsi, aFailedToPreser_1; \"failed to preserve ownership for %s\"", "jmp     short loc_41A7"], ["mov~rsi,dst_name", "mov~edi,0", "call~FOO", "mov~edx,0", "mov~dst_name,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 21, 0, 1, 5, 1, 2, 5, 4, 0.10064935064935066, ["mov     rdi, x; x", "call    chown_failure_ok", "test    al, al", "mov     r14d, eax", "jz      loc_41F7"], ["mov~rdi,x", "call~FOO", "test~al,al", "mov~r14d,eax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.08658008658008658, ["mov     rcx, [rbp+var_38]", "xor     rcx, fs:28h", "mov     eax, r14d", "jnz     short loc_4215"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "mov~eax,r14d", "jnz~FOO"]], [3, 1, 22, 4, 2, 29, 4, 3, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "mov     r14, src_offset", "push    rbx", "mov     r12, const_dst_name", "mov     rbx, attr_list", "mov     r13, x", "sub     rsp, 48h", "mov     rax, fs:28h", "mov     [rbp+var_38], rax", "xor     eax, eax", "call    _strlen", "lea     rdx, [rax+1]; n", "add     rax, 1Fh", "mov     rsi, __old; src", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rdi, [rsp+70h+src_name+7]", "and     rdi, 0FFFFFFFFFFFFFFF0h; dest", "call    _memcpy", "mov     __old, rax", "add     dst_name, src_offset", "test    attr_list, attr_list", "mov     [rbp+src_name], rax", "jz      loc_41D0"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "mov~r14,src_offset", "push~rbx", "mov~r12,const_dst_name", "mov~rbx,attr_list", "mov~r13,x", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "call~FOO", "lea~rdx,[rax+0]", "add~rax,0", "mov~rsi,__old", "and~rax,0", "sub~rsp,rax", "lea~rdi,[rsp+0]", "and~rdi,0", "call~FOO", "mov~__old,rax", "add~dst_name,src_offset", "test~attr_list,attr_list", "mov~[rbp+0],rax", "jz~FOO"]], [2, 0, 4, 0, 1, 6, 0, 1, 7, 3, 0.011904761904761904, ["mov     rsi, dst_name; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aFailedToPreser_0; \"failed to preserve permissions for %s\"", "mov     dst_name, rax", "mov     edx, 5; category"], ["mov~rsi,dst_name", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~dst_name,rax", "mov~edx,0"]], [0, 0, 21, 0, 0, 1, 0, 0, 7, 4, 0.011904761904761904, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 21, 0, 1, 7, 1, 2, 6, 5, 0.05411255411255411, ["mov     edx, [p+20h]; group", "mov     esi, 0FFFFFFFFh; owner", "mov     rdi, dst_name; file", "call    _lchown", "movzx   r14d, byte ptr [x+1Eh]", "test    r14b, r14b", "jz      loc_4049"], ["mov~edx,[p+0]", "mov~esi,0", "mov~rdi,dst_name", "call~FOO", "movzx~r14d,[yte ptr [x+0]", "test~r14b,r14b", "jz~FOO"]], [0, 0, 21, 0, 1, 13, 1, 2, 3, 3, 0.04112554112554113, ["mov     rax, [p+50h]", "mov     rdx, [p+48h]", "mov     rsi, r15; timespec", "mov     rdi, dst_name; file", "mov     [rbp+timespec.tv_sec], rdx", "mov     [rbp+timespec.tv_nsec], rax", "mov     rdx, [p+58h]", "mov     rax, [p+60h]", "mov     [rbp+timespec.tv_sec+10h], rdx", "mov     [rbp+timespec.tv_nsec+10h], rax", "call    utimens", "test    eax, eax", "jz      loc_4030"], ["mov~rax,[p+0]", "mov~rdx,[p+0]", "mov~rsi,r15", "mov~rdi,dst_name", "mov~[rbp+0],rdx", "mov~[rbp+0],rax", "mov~rdx,[p+0]", "mov~rax,[p+0]", "mov~[rbp+0],rdx", "mov~[rbp+0],rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 21, 0, 0, 3, 1, 1, 4, 4, 0.15043290043290045, ["movzx   r14d, byte ptr [x+1Eh]", "test    r14b, r14b", "jnz     loc_4150"], ["movzx~r14d,[yte ptr [x+0]", "test~r14b,r14b", "jnz~FOO"]], [0, 0, 3, 0, 3, 11, 3, 4, 7, 2, 0.025974025974025976, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     p, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "mov     rdx, rbx; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_41D6"], ["xor~edi,edi", "call~FOO", "mov~p,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "mov~rdx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 1, 2, 0.025974025974025976, ["mov     r14d, 1"], ["mov~r14d,0"]], [2, 0, 3, 0, 4, 18, 4, 5, 4, 2, 0.01948051948051948, ["mov     rsi, dst_name; arg", "mov     edi, 4; s", "xor     r14d, r14d", "call    quotearg_style", "lea     rsi, aFailedToPreser; \"failed to preserve times for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     dst_name, rax", "call    _dcgettext", "mov     p, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "mov     rdx, rbx; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_41D6"], ["mov~rsi,dst_name", "mov~edi,0", "xor~r14d,r14d", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~dst_name,rax", "call~FOO", "mov~p,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "mov~rdx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 6, 2, 0.032467532467532464, ["xor     r14d, r14d", "jmp     short loc_41D6"], ["xor~r14d,r14d", "jmp~FOO"]], [1, 0, 21, 0, 1, 8, 1, 2, 5, 3, 0.11904761904761904, ["mov     r8d, [p+18h]; mode", "mov     rdi, [rbp+src_name]; src_name", "mov     ecx, 0FFFFFFFFh; dest_desc", "mov     rdx, dst_name; dst_name", "mov     esi, ecx; source_desc", "call    copy_acl", "test    eax, eax", "jz      loc_4056"], ["mov~r8d,[p+0]", "mov~rdi,[rbp+0]", "mov~ecx,0", "mov~rdx,dst_name", "mov~esi,ecx", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 0, 8, 0, 0, 3, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     x", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~x", "pop~r14", "pop~r15", "pop~rbp", "retn"]]], "func_feature": [18, 21, 36, 1, 23, 34, 1, 150, 0.0767, 4, 4], "succs": [[6, 15], [0], [0, 18], [2, 12], [2, 3], [8, 16], [16, 5], [17], [14, 7], [], [9, 22], [1, 18], [17], [21], [4, 13], [19, 6], [4, 21], [10], [10], [10], [10], [2, 20], []], "fname": "re_protect", "n_num": 23}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 4, 0, 1, 6, 1, 2, 0, 0, 0.028571428571428574, ["lea     rsi, s2; \"en_\"", "mov     edx, 3; n", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     loc_47B0"], ["lea~rsi,<TAG>", "mov~edx,0", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 5, 0, 3, 12, 3, 4, 4, 2, 0.09285714285714286, ["call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, package; \"GNU \"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "xor     esi, esi; locale", "mov     edi, 5; category", "call    _setlocale", "test    rax, rax", "jz      short loc_46A9"], ["call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 6, 0, 1, 6, 1, 2, 5, 2, 0.0380952380952381, ["lea     rsi, s2; \"en_\"", "mov     edx, 3; n", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_47A9"], ["lea~rsi,<TAG>", "mov~edx,0", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 7, 0, 3, 12, 3, 4, 4, 3, 0.09285714285714286, ["call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, package; \"GNU \"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "xor     esi, esi; locale", "mov     edi, 5; category", "call    _setlocale", "test    rax, rax", "jz      short loc_4766"], ["call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [2, 0, 2, 0, 2, 14, 2, 2, 5, -1, 0.05952380952380953, ["lea     rsi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rcx, command_name; \"cp\"", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "cmp     r12, rbx", "lea     rcx, aMultiCallInvoc+0Ah; \" invocation\"", "lea     rbx, aSSUnbackup+14h; \"\"", "cmovz   rbx, rcx"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "cmp~r12,rbx", "lea~rcx,<TAG>", "lea~rbx,<TAG>", "cmovz~rbx,rcx"]], [1, 0, 3, 0, 2, 9, 1, 3, 6, 0, 0.02380952380952381, ["mov     r13, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aReportAnyTrans; \"Report any translation bugs to <https:/\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, r13; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "jmp     loc_46A9"], ["mov~r13,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,r13", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 13, 1, 0, 4, 1, 1, 2, 4, 0.10952380952380954, ["add     rdx, 10h", "mov     rdi, [rdx]", "test    rdi, rdi", "jz      short loc_463F"], ["add~rdx,0", "mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [2, 0, 13, 0, 0, 7, 1, 1, 3, 4, 0.0, ["mov     ecx, 3", "mov     rsi, rbx", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     short loc_4620"], ["mov~ecx,0", "mov~rsi,rbx", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [23, 0, 13, 0, 42, 196, 22, 42, 1, 5, 0.05714285714285715, ["lea     rsi, aUsageSOptionTS; \"Usage: %s [OPTION]... [-T] SOURCE DEST\"...", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, rbx", "mov     rcx, rbx", "mov     rdx, rbx", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aCopySourceToDe; \"Copy SOURCE to DEST, or multiple SOURCE\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aMandatoryArgum; \"\\nMandatory arguments to long options a\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aAArchiveSameAs; \"  -a, --archive                same as \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aFForceIfAnExis; \"  -f, --force                  if an ex\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aLLinkHardLinkF; \"  -l, --link                   hard lin\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNNoClobberDoNo; \"  -n, --no-clobber             do not o\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aPSameAsPreserv; \"  -p                           same as \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNoPreserveAttr; \"      --no-preserve=ATTR_LIST  don't pr\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aRRRecursiveCop; \"  -R, -r, --recursive          copy dir\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aSparseWhenCont; \"      --sparse=WHEN            control \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aSSymbolicLinkM; \"  -s, --symbolic-link          make sym\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aUUpdateCopyOnl; \"  -u, --update                 copy onl\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aZSetSelinuxSec; \"  -Z                           set SELi\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aHelpDisplayThi; \"      --help     display this help and \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aVersionOutputV; \"      --version  output version informa\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aByDefaultSpars; \"\\nBy default, sparse SOURCE files are d\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aWhenReflinkAlw; \"\\nWhen --reflink[=always] is specified,\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aTheBackupSuffi; \"\\nThe backup suffix is '~', unless set \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNoneOffNeverMa; \"  none, off       never make backups (e\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aAsASpecialCase; \"\\nAs a special case, cp makes a backup \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "lea     rbx, command_name; \"cp\"", "call    _fputs_unlocked", "lea     rax, asc_12948; \"[\"", "lea     rcx, aSha256sum; \"sha256sum\"", "mov     [rsp+0A8h+var_48], 0", "mov     [rsp+0A8h+var_40], 0", "mov     rdx, rsp", "mov     [rsp+0A8h+var_A8], rax", "lea     rax, aTestInvocation; \"test invocation\"", "mov     [rsp+0A8h+var_78], rcx", "lea     rcx, aSha384sum; \"sha384sum\"", "mov     [rsp+0A8h+var_A0], rax", "lea     rax, domainname; \"coreutils\"", "mov     [rsp+0A8h+var_68], rcx", "lea     rcx, aSha512sum; \"sha512sum\"", "mov     [rsp+0A8h+var_98], rax", "lea     rax, aMultiCallInvoc; \"Multi-call invocation\"", "mov     [rsp+0A8h+var_58], rcx", "mov     [rsp+0A8h+var_90], rax", "lea     rax, aSha224sum; \"sha224sum\"", "mov     [rsp+0A8h+var_88], rax", "lea     rax, aSha2Utilities; \"sha2 utilities\"", "mov     [rsp+0A8h+var_80], rax", "mov     [rsp+0A8h+var_70], rax", "mov     [rsp+0A8h+var_60], rax", "mov     [rsp+0A8h+var_50], rax", "nop     dword ptr [rax]"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~r8,rbx", "mov~rcx,rbx", "mov~rdx,rbx", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "lea~rbx,<TAG>", "call~FOO", "lea~rax,<TAG>", "lea~rcx,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~rdx,rsp", "mov~<TAG>,rax", "lea~rax,<TAG>", "mov~[rsp+0],rcx", "lea~rcx,<TAG>", "mov~[rsp+0],rax", "lea~rax,<TAG>", "mov~[rsp+0],rcx", "lea~rcx,<TAG>", "mov~[rsp+0],rax", "lea~rax,<TAG>", "mov~[rsp+0],rcx", "mov~[rsp+0],rax", "lea~rax,<TAG>", "mov~[rsp+0],rax", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~[rsp+0],rax", "mov~[rsp+0],rax", "mov~[rsp+0],rax", "nop~<TAG>"]], [1, 0, 10, 0, 0, 6, 2, 1, 3, 3, 0.18571428571428572, ["mov     r12, [rdx+8]", "xor     edi, edi; domainname", "mov     edx, 5; category", "lea     rsi, aSOnlineHelpS; \"\\n%s online help: <%s>\\n\"", "test    r12, r12", "jz      loc_471B"], ["mov~r12,[rdx+0]", "xor~edi,edi", "mov~edx,0", "lea~rsi,<TAG>", "test~r12,r12", "jz~FOO"]], [1, 1, 15, 1, 0, 13, 2, 1, 0, 6, 0.0, ["push    r13", "push    r12", "mov     edx, 5; category", "push    rbp", "push    rbx", "mov     ebp, edi", "sub     rsp, 88h", "mov     rbx, cs:program_name", "mov     rax, fs:28h", "mov     [rsp+0A8h+var_30], rax", "xor     eax, eax", "test    edi, edi", "jz      short loc_427D"], ["push~r13", "push~r12", "mov~edx,0", "push~rbp", "push~rbx", "mov~ebp,edi", "sub~rsp,<STR>", "mov~rbx,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~edi,edi", "jz~FOO"]], [1, 0, 1, 0, 2, 9, 2, 2, 1, -1, 0.004761904761904762, ["lea     rsi, aTrySHelpForMor; \"Try '%s --help' for more information.\\n\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     rcx, rbx", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~rcx,rbx", "mov~esi,0", "xor~eax,eax", "call~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 6, 1, 0.01904761904761905, ["lea     r12, command_name; \"cp\""], ["lea~r12,<TAG>"]], [2, 0, 1, 0, 2, 11, 2, 3, 6, -1, 0.05714285714285715, ["lea     rsi, aOrAvailableLoc; \"or available locally via: info '(coreut\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rbx", "mov     rsi, rax", "mov     rdx, r12", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_4276"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rbx", "mov~rsi,rax", "mov~rdx,r12", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 2, 0, 2, 13, 2, 3, 5, -1, 0.04047619047619048, ["lea     rsi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "lea     r12, command_name; \"cp\"", "lea     rbx, aMultiCallInvoc+0Ah; \" invocation\"", "call    _dcgettext", "lea     rcx, command_name; \"cp\"", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_46EE"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "lea~r12,<TAG>", "lea~rbx,<TAG>", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     edi, ebp; status", "call    _exit"], ["mov~edi,ebp", "call~FOO"]]], "func_feature": [61, 45, 72, 15, 16, 23, 4, 321, 0.0506, 45, 2], "succs": [[4, 5], [0, 4], [12, 14], [2, 14], [13], [4], [9, 7], [9, 6], [6], [1, 3], [8, 11], [15], [5], [15], [13], []], "fname": "usage", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 13, 0, 0, 4, 0, 1, 0, 0, 0.06356292517006802, ["cmp     cs:parents_option, 0", "mov     r12, [file]", "mov     file, [file+8]", "jnz     loc_4CBC"], ["cmp~<TAG>,0", "mov~r12,<TAG>", "mov~file,[file+0]", "jnz~FOO"]], [1, 0, 37, 0, 0, 2, 0, 1, 3, -1, 0.02274659863945578, ["cmp     r12d, 1", "jz      loc_4872"], ["cmp~r12d,0", "jz~FOO"]], [1, 0, 35, 0, 0, 2, 0, 1, 5, -1, 0.008078231292517007, ["cmp     r12d, 2", "jz      loc_4872"], ["cmp~r12d,0", "jz~FOO"]], [0, 0, 14, 0, 0, 1, 0, 1, 6, -1, 0.011904761904761904, ["jmp     loc_4872"], ["jmp~FOO"]], [0, 0, 14, 0, 1, 5, 0, 1, 4, -1, 0.010629251700680272, ["mov     n_files, [rbx+r12*8-8]; file", "lea     rdx, [rbp+new_dst]; new_dst", "lea     file, [rbp+sb]; st", "movzx   ecx, al; forcing", "call    target_directory_operand"], ["mov~n_files,[rbx+0]", "lea~rdx,[rbp+0]", "lea~file,[rbp+0]", "movzx~ecx,al", "call~FOO"]], [1, 0, 18, 0, 0, 9, 0, 1, 4, -1, 0.0663265306122449, ["lea     eax, [r12-1]", "mov     r15d, 1", "lea     rax, [file+rax*8+8]", "mov     [rbp+var_100], rax", "lea     rax, [rbp+copy_into_self]", "mov     [rbp+var_110], rax", "lea     rax, [rbp+unused]", "mov     [rbp+base_in_result], rax", "jmp     loc_4A44"], ["lea~eax,[r12-1]+0]", "mov~r15d,0", "lea~rax,[file+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 19, 0, 2, 5, 0, 3, 4, -1, 0.0, ["mov     rdi, x; x", "call    dest_info_init", "mov     rdi, x; x", "call    src_info_init", "jmp     loc_494E"], ["mov~rdi,x", "call~FOO", "mov~rdi,x", "call~FOO", "jmp~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 3, -1, 0.057823129251700675, ["cmp     r12d, 1", "jnz     loc_4B89"], ["cmp~r12d,0", "jnz~FOO"]], [1, 0, 33, 1, 0, 6, 1, 1, 5, -1, 0.03954081632653061, ["sub     r12d, 1", "movsxd  rax, r12d", "mov     rax, [file+rax*8]", "test    rax, rax", "mov     [rbp+target_directory], rax", "jnz     loc_4944"], ["sub~r12d,0", "movsxd~rax,r12d", "mov~rax,<TAG>", "test~rax,rax", "mov~[rbp+0],rax", "jnz~FOO"]], [0, 0, 18, 0, 1, 6, 1, 2, 8, -1, 0.0031887755102040817, ["mov     rdi, [rbp+target_directory]; dir", "mov     rsi, arg_base; base", "xor     edx, edx; base_in_result", "call    file_name_concat", "mov     arg_base, rax", "jmp     loc_4AD7"], ["mov~rdi,[rbp+0]", "mov~rsi,arg_base", "xor~edx,edx", "call~FOO", "mov~arg_base,rax", "jmp~FOO"]], [5, 0, 18, 2, 4, 23, 3, 5, 7, -1, 0.02040816326530612, ["call    last_component", "mov     rdi, rax; s", "mov     r12, rax", "call    _strlen", "lea     rdx, [rax+1]; n", "add     rax, 1Fh", "mov     rsi, __old; src", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rdi, [rsp+110h+base_in_result+7]", "and     rdi, 0FFFFFFFFFFFFFFF0h; dest", "call    _memcpy", "mov     rdi, rax; file", "mov     __old, rax", "call    strip_trailing_slashes", "lea     rdi, asc_12A38; \"..\"", "mov     ecx, 3", "mov     rsi, arg_base", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_4B70"], ["call~FOO", "mov~rdi,rax", "mov~r12,rax", "call~FOO", "lea~rdx,[rax+0]", "add~rax,0", "mov~rsi,__old", "and~rax,0", "sub~rsp,rax", "lea~rdi,[rsp+0]", "and~rdi,0", "call~FOO", "mov~rdi,rax", "mov~__old,rax", "call~FOO", "lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,arg_base", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 5, -1, 0.04974489795918367, ["cmp     byte ptr [x+16h], 0", "jz      short loc_48F4"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [0, 0, 3, 0, 1, 8, 2, 1, 6, -1, 0.02423469387755102, ["lea     r8, [rbp+unused]; copy_into_self", "xor     r9d, r9d; rename_succeeded", "mov     rcx, x; options", "xor     edx, edx; nonexistent_dst", "mov     rsi, new_dest; dst_name", "mov     rdi, source; src_name", "call    copy", "mov     r15d, eax"], ["lea~r8,[rbp+0]", "xor~r9d,r9d", "mov~rcx,x", "xor~edx,edx", "mov~rsi,new_dest", "mov~rdi,source", "call~FOO", "mov~r15d,eax"]], [0, 0, 8, 0, 0, 3, 1, 1, 6, -1, 0.023809523809523808, ["mov     r13d, [x]", "test    r13d, r13d", "jz      short loc_48F4"], ["mov~r13d,<TAG>", "test~r13d,r13d", "jz~FOO"]], [0, 0, 7, 0, 1, 5, 1, 2, 7, -1, 0.01913265306122449, ["mov     rsi, dest; s2", "mov     rdi, source; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_48F4"], ["mov~rsi,dest", "mov~rdi,source", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 8, -1, 0.013605442176870748, ["cmp     [rbp+new_dst], 0", "jnz     short loc_48F4"], ["cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 5, 0, 0, 4, 1, 1, 9, -1, 0.007227891156462584, ["mov     eax, [rbp+sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 8000h", "jnz     short loc_48F4"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [3, 0, 4, 0, 1, 11, 0, 1, 10, -1, 0.0, ["mov     rsi, dest; file", "mov     edi, 0FFFFFF9Ch; dir_fd", "mov     edx, r13d; backup_type", "call    find_backup_file_name", "mov     rsi, x", "lea     x, x_tmp_7353", "lea     rdi, x_tmp_7353", "mov     ecx, 14h", "mov     dest, rax", "rep movsd", "mov     cs:x_tmp_7353.backup_type, 0"], ["mov~rsi,dest", "mov~edi,0", "mov~edx,r13d", "call~FOO", "mov~rsi,x", "lea~x,<TAG>", "lea~rdi,<TAG>", "mov~ecx,0", "mov~dest,rax", "movsd~<TAG>,<TAG>", "mov~<TAG>,0"]], [1, 0, 5, 1, 0, 2, 0, 1, 1, 1, 0.006590136054421768, ["sub     r12d, 1", "jnz     short loc_4CDF"], ["sub~r12d,0", "jnz~FOO"]], [3, 0, 49, 1, 0, 22, 3, 1, 0, 2, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "movsxd  r12, edi", "push    rbx", "mov     rbx, file", "sub     rsp, 0E8h", "mov     [rbp+target_directory], target_directory_0", "mov     [rbp+new_dst], 0", "mov     rax, fs:28h", "mov     [rbp+var_38], rax", "xor     eax, eax", "test    dword ptr [x+14h], 0FFFF00h", "setnz   al", "test    target_directory_0, target_directory_0", "setz    dl", "movzx   edx, dl", "cmp     edx, r12d", "jge     loc_4C93"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "movsxd~r12,edi", "push~rbx", "mov~rbx,file", "sub~rsp,0", "mov~[rbp+0],target_directory_0", "mov~[rbp+0],0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "test~[word ptr [x+0],0", "setnz~al", "test~target_directory_0,target_directory_0", "setz~dl", "movzx~edx,dl", "cmp~edx,r12d", "jge~FOO"]], [2, 0, 6, 0, 2, 9, 3, 2, 3, 2, 0.0031887755102040817, ["lea     rsi, aCannotCombineT; \"cannot combine --target-directory (-t) \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [0, 0, 18, 0, 0, 2, 1, 0, 8, -1, 0.02933673469387755, ["movzx   eax, cs:parents_option", "xor     r15d, r15d"], ["movzx~eax,<TAG>", "xor~r15d,r15d"]], [5, 0, 18, 3, 5, 30, 3, 6, 7, -1, 0.07015306122448979, ["call    _strlen", "lea     rdx, [rax+1]; n", "add     rax, 1Fh", "mov     rsi, __old; src", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rdi, [rsp+110h+base_in_result+7]", "and     rdi, 0FFFFFFFFFFFFFFF0h; dest", "call    _memcpy", "mov     rdi, rax; file", "mov     r12, rax", "call    strip_trailing_slashes", "mov     rdx, [rbp+base_in_result]; base_in_result", "mov     rdi, [rbp+target_directory]; dir", "mov     rsi, arg_no_trailing_slash; base", "call    file_name_concat", "cmp     byte ptr [x+2Eh], 0", "mov     rsi, [rbp+unused]", "mov     arg_no_trailing_slash, rax", "lea     dst_name, verbose_fmt_string; \"%s -> %s\\n\"", "mov     edx, 0", "lea     rcx, [rbp+attr_list]; attr_list", "lea     r8, [rbp+new_dst]; new_dst", "mov     r9, x; x", "mov     rdi, dst_name; const_dir", "cmovnz  rdx, rax; verbose_fmt_string", "sub     rsi, dst_name; src_offset", "call    make_dir_parents_private", "test    al, al", "jnz     loc_4AD7"], ["call~FOO", "lea~rdx,[rax+0]", "add~rax,0", "mov~rsi,__old", "and~rax,0", "sub~rsp,rax", "lea~rdi,[rsp+0]", "and~rdi,0", "call~FOO", "mov~rdi,rax", "mov~r12,rax", "call~FOO", "mov~rdx,[rbp+0]", "mov~rdi,[rbp+0]", "mov~rsi,arg_no_trailing_slash", "call~FOO", "cmp~[yte ptr [x+0],0", "mov~rsi,[rbp+0]", "mov~arg_no_trailing_slash,rax", "lea~dst_name,<TAG>", "mov~edx,0", "lea~rcx,[rbp+0]", "lea~r8,[rbp+0]", "mov~r9,x", "mov~rdi,dst_name", "cmovnz~rdx,rax", "sub~rsi,dst_name", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 7, -1, 0.03231292517006803, ["mov     rcx, [rbp+var_38]", "xor     rcx, fs:28h", "mov     eax, r15d", "jnz     loc_4CB7"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "mov~eax,r15d", "jnz~FOO"]], [1, 0, 18, 1, 1, 5, 0, 2, 9, -1, 0.06377551020408163, ["mov     rdi, dst_name; ptr", "add     rbx, 8", "call    free", "cmp     [rbp+var_100], rbx", "jz      loc_4911"], ["mov~rdi,dst_name", "add~rbx,0", "call~FOO", "cmp~[rbp+0],rbx", "jz~FOO"]], [0, 0, 18, 0, 0, 2, 1, 1, 9, -1, 0.03996598639455782, ["test    al, al", "jnz     loc_4B4B"], ["test~al,al", "jnz~FOO"]], [0, 0, 18, 1, 1, 9, 1, 2, 9, -1, 0.006802721088435374, ["mov     rsi, [rbp+unused]", "mov     rdx, [rbp+attr_list]; attr_list", "mov     rcx, x; x", "mov     rdi, dst_name; const_dst_name", "sub     rsi, dst_name; src_offset", "call    re_protect", "and     r15d, eax", "movzx   eax, cs:parents_option", "jmp     loc_4A23"], ["mov~rsi,[rbp+0]", "mov~rdx,[rbp+0]", "mov~rcx,x", "mov~rdi,dst_name", "sub~rsi,dst_name", "call~FOO", "and~r15d,eax", "movzx~eax,<TAG>", "jmp~FOO"]], [1, 0, 18, 0, 1, 10, 2, 2, 8, -1, 0.047619047619047616, ["movzx   edx, [rbp+new_dst]; nonexistent_dst", "mov     r8, [rbp+var_110]; copy_into_self", "xor     r9d, r9d; rename_succeeded", "mov     rcx, x; options", "mov     rsi, dst_name; dst_name", "mov     rdi, arg; src_name", "call    copy", "and     r15d, eax", "cmp     cs:parents_option, 0", "jz      loc_4A2B"], ["movzx~edx,[rbp+0]", "mov~r8,[rbp+0]", "xor~r9d,r9d", "mov~rcx,x", "mov~rsi,dst_name", "mov~rdi,arg", "call~FOO", "and~r15d,eax", "cmp~<TAG>,0", "jz~FOO"]], [2, 0, 2, 0, 1, 6, 0, 1, 4, -1, 0.002551020408163265, ["mov     rsi, [rsi+10h]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aExtraOperandS; \"extra operand %s\"", "mov     file, rax", "mov     edx, 5; category"], ["mov~rsi,[rsi+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~file,rax", "mov~edx,0"]], [1, 0, 17, 0, 0, 2, 0, 1, 3, -1, 0.00935374149659864, ["cmp     r12d, 2", "jg      loc_4C30"], ["cmp~r12d,0", "jg~FOO"]], [0, 0, 0, 0, 0, 8, 0, 0, 8, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     x", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~x", "pop~r15", "pop~rbp", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 48, 0, 0, 3, 1, 1, 1, 4, 0.017857142857142856, ["test    cl, cl", "mov     r14, x", "jz      loc_4936"], ["test~cl,cl", "mov~r14,x", "jz~FOO"]], [0, 0, 18, 0, 0, 1, 0, 1, 11, -1, 0.012755102040816327, ["jmp     loc_4A2B"], ["jmp~FOO"]], [2, 0, 2, 0, 1, 7, 0, 2, 2, -1, 0.001913265306122449, ["mov     rsi, [rsi]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     edx, 5", "mov     file, rax", "lea     rsi, aMissingDestina; \"missing destination file operand after \"...", "jmp     short loc_4C4D"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~edx,0", "mov~file,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 18, 0, 0, 3, 0, 1, 6, -1, 0.10459183673469387, ["cmp     cs:parents_option, 0", "mov     rdi, arg; name", "jnz     loc_4990"], ["cmp~<TAG>,0", "mov~rdi,arg", "jnz~FOO"]], [3, 0, 34, 0, 3, 14, 3, 3, 6, -1, 0.008503401360544217, ["mov     rsi, [r13+0]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aTargetSIsNotAD; \"target %s is not a directory\"", "mov     file, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["mov~rsi,[r13+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~file,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [0, 0, 18, 0, 1, 3, 0, 1, 11, -1, 0.0, ["mov     rax, [p+0A0h]", "mov     [rbp+attr_list], rax", "call    free"], ["mov~rax,[p+0]", "mov~[rbp+0],rax", "call~FOO"]], [0, 0, 18, 0, 0, 3, 1, 1, 10, -1, 0.026785714285714284, ["mov     rdi, [rbp+attr_list]; ptr", "test    rdi, rdi", "jnz     short loc_4B38"], ["mov~rdi,[rbp+0]", "test~rdi,rdi", "jnz~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 2, 3, 0.005739795918367346, ["cmp     [rbp+target_directory], 0", "jnz     loc_4C6F"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 38, 0, 0, 2, 0, 1, 2, -1, 0.03082482993197279, ["cmp     [rbp+target_directory], 0", "jz      loc_4B9E"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 36, 0, 1, 9, 1, 2, 4, -1, 0.014455782312925169, ["movsxd  rdx, r12d", "movzx   ecx, al; forcing", "lea     r13, [rsi+rdx*8-8]", "lea     rdx, [rbp+new_dst]; new_dst", "lea     rsi, [rbp+sb]; st", "mov     n_files, [r13+0]; file", "call    target_directory_operand", "test    al, al", "jnz     short loc_4C10"], ["movsxd~rdx,r12d", "movzx~ecx,al", "lea~r13,[rsi+0]", "lea~rdx,[rbp+0]", "lea~rsi,[rbp+0]", "mov~n_files,[r13+0]", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 18, 0, 1, 3, 0, 1, 8, -1, 0.0031887755102040817, ["mov     rdi, [rbp+target_directory]; string", "call    xstrdup", "mov     arg_base, rax"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~arg_base,rax"]], [2, 0, 18, 0, 0, 4, 0, 1, 5, -1, 0.11139455782312925, ["cmp     cs:remove_trailing_slashes, 0", "mov     [rbp+unused], 0", "mov     r13, [rbx]", "jnz     loc_4B60"], ["cmp~<TAG>,0", "mov~[rbp+0],0", "mov~r13,<TAG>", "jnz~FOO"]], [0, 0, 1, 0, 2, 8, 4, 3, 3, -1, 0.005314625850340136, ["xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_4C65"], ["xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 2, 0, 0, 3, 0, 1, 2, 0, 0.002551020408163265, ["mov     edx, 5", "lea     rsi, aMissingFileOpe; \"missing file operand\"", "jmp     short loc_4CC8"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 2, 0, 0, 2, 0, 0, 5, -1, 0.008290816326530613, ["lea     rsi, aWithParentsThe; \"with --parents, the destination must be\"...", "mov     edx, 5; category"], ["lea~rsi,<TAG>", "mov~edx,0"]], [0, 0, 1, 0, 2, 8, 4, 2, 3, -1, 0.0027636054421768708, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [0, 0, 18, 0, 1, 3, 0, 2, 6, -1, 0.0, ["mov     rdi, arg; file", "call    strip_trailing_slashes", "jmp     loc_4A5F"], ["mov~rdi,arg", "call~FOO", "jmp~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 4, -1, 0.0, ["mov     edi, 1; status", "call    usage"], ["mov~edi,0", "call~FOO"]]], "func_feature": [36, 39, 72, 3, 50, 73, 1, 292, 0.02221, 12, 10], "succs": [[11, 46], [0, 41], [0, 36], [0], [0], [43], [5], [5, 6], [3, 7], [27], [9, 42], [12, 13], [23], [12, 14], [12, 15], [16, 12], [17, 12], [12], [34, 45], [32, 18], [18], [25], [27, 21], [30, 31], [43, 23], [24, 38], [25], [24, 26], [47], [4, 28], [], [], [40, 39], [24], [47], [10, 22], [8], [38], [33, 37], [20, 29], [1, 7], [8, 2], [27], [48, 35], [49], [44], [44], [49], [35], []], "fname": "do_copy", "n_num": 50}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 2, 0, 1, 5, 1, 2, 0, 0, 0.16666666666666666, ["push    rbx", "mov     rbx, file", "call    can_write_any_file", "test    al, al", "jz      short loc_4D20"], ["push~rbx", "mov~rbx,file", "call~FOO", "test~al,al", "jz~FOO"]], [2, 0, 4, 0, 0, 3, 1, 1, 0, 2, 0.0, ["and     esi, 0F000h", "cmp     esi, 0A000h", "jz      short loc_4D18"], ["and~esi,0", "cmp~esi,0", "jz~FOO"]], [1, 0, 0, 0, 1, 7, 1, 1, 2, 0, 0.0, ["mov     rdi, file; name", "mov     esi, 2; type", "call    _euidaccess", "test    eax, eax", "setz    al", "pop     file", "retn"], ["mov~rdi,file", "mov~esi,0", "call~FOO", "test~eax,eax", "setz~al", "pop~file", "retn"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [1, 0, 0, 0, 0, 3, 0, 0, 2, -1, 0.0, ["mov     eax, 1", "pop     file", "retn"], ["mov~eax,0", "pop~file", "retn"]]], "func_feature": [2, 3, 4, 0, 5, 4, 2, 20, 0.03333, 0, 0], "succs": [[2, 4], [0, 3], [], [], []], "fname": "writable_destination", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 6, 0, 0, 4, 0, 1, 0, 0, 0.041666666666666664, ["lea     rax, fallback_7572", "mov     cs:nz_7571, 400h", "mov     cs:zeros_7570, rax", "jmp     loc_4D54"], ["lea~rax,<TAG>", "mov~<TAG>,0", "mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 8, 0, 1, 5, 1, 2, 1, 0, 0.027777777777777776, ["mov     fd, cs:nz_7571; nmemb", "mov     esi, 1; size", "call    _calloc", "test    rax, rax", "jz      short loc_4DC7"], ["mov~fd,<TAG>", "mov~esi,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 0, 0, 5, 0, 0, 3, 0, 0.0, ["pop     rbx", "mov     eax, 1", "pop     rbp", "pop     fd", "retn"], ["pop~rbx", "mov~eax,0", "pop~rbp", "pop~fd", "retn"]], [0, 0, 1, 0, 0, 1, 0, 1, 2, 0, 0.06944444444444445, ["jmp     short loc_4D98"], ["jmp~FOO"]], [0, 0, 4, 1, 0, 2, 0, 1, 3, 0, 0.013888888888888888, ["sub     rbx, rax", "jz      short loc_4D98"], ["sub~rbx,rax", "jz~FOO"]], [0, 0, 4, 0, 1, 9, 0, 2, 2, 0, 0.15277777777777776, ["cmp     cs:nz_7571, n_bytes", "mov     rbp, n_bytes", "mov     rsi, cs:zeros_7570; buf", "cmovbe  rbp, cs:nz_7571", "mov     edi, r12d; fd", "mov     rdx, n; count", "call    full_write", "cmp     rax, n", "jz      short loc_4D60"], ["cmp~<TAG>,n_bytes", "mov~rbp,n_bytes", "mov~rsi,<TAG>", "cmovbe~rbp,<TAG>", "mov~edi,r12d", "mov~rdx,n", "call~FOO", "cmp~rax,n", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 2, 0, 0.041666666666666664, ["mov     cs:zeros_7570, rax", "jmp     short loc_4D54"], ["mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 1, 0, 0.2777777777777778, ["test    n_bytes, n_bytes", "jnz     short loc_4D65"], ["test~n_bytes,n_bytes", "jnz~FOO"]], [1, 0, 9, 0, 0, 7, 0, 1, 0, 0, 0.0, ["cmp     cs:zeros_7570, 0", "push    r12", "mov     r12d, edi", "push    rbp", "push    rbx", "mov     rbx, n_bytes", "jz      short loc_4DA8"], ["cmp~<TAG>,0", "push~r12", "mov~r12d,edi", "push~rbp", "push~rbx", "mov~rbx,n_bytes", "jz~FOO"]], [0, 0, 0, 0, 0, 5, 1, 0, 3, 0, 0.0, ["pop     n_bytes", "xor     eax, eax", "pop     n", "pop     fd", "retn"], ["pop~n_bytes", "xor~eax,eax", "pop~n", "pop~fd", "retn"]]], "func_feature": [2, 3, 10, 0, 10, 13, 2, 42, 0.0625, 3, 1], "succs": [[7], [0, 6], [], [2], [2, 5], [9, 4], [7], [3, 5], [1, 7], []], "fname": "write_zeros", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     eax, ebx", "pop     ret", "retn"], ["mov~eax,ebx", "pop~ret", "retn"]], [1, 0, 2, 0, 0, 2, 0, 1, 2, 1, 0.08333333333333333, ["cmp     eax, 5Fh ; '_'", "jnz     short loc_4E07"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 4, 0, 1, 8, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rcx, length; len", "mov     length, offset; offset", "mov     esi, 3; mode", "call    _fallocate", "test    eax, eax", "mov     ebx, eax", "js      short loc_4E10"], ["push~rbx", "mov~rcx,length", "mov~length,offset", "mov~esi,0", "call~FOO", "test~eax,eax", "mov~ebx,eax", "js~FOO"]], [0, 0, 0, 0, 0, 4, 1, 0, 2, 0, 0.0, ["xor     ebx, ebx", "mov     eax, ebx", "pop     rbx", "retn"], ["xor~ebx,ebx", "mov~eax,ebx", "pop~rbx", "retn"]], [1, 0, 3, 0, 1, 4, 0, 2, 1, 1, 0.16666666666666666, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 26h ; '&'", "jz      short loc_4E21"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]]], "func_feature": [2, 2, 5, 0, 5, 6, 2, 21, 0.05, 0, 0], "succs": [[], [0, 3], [0, 4], [], [1, 3]], "fname": "punch_hole", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 3, 0, 0, 4, 0, 0, 0, 0, 0.30000000000000004, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_4ED8"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [4, 0, 5, 0, 3, 22, 3, 4, 0, 2, 0.0, ["push    r12", "push    rbp", "mov     r12, src", "push    rbx", "mov     edi, 1; n", "mov     rbx, backup_dst_name", "mov     backup_dst_name, dst; arg", "mov     esi, 4; s", "call    quotearg_n_style", "xor     edi, edi; n", "mov     rdx, src; arg", "mov     esi, 4; s", "mov     rbp, rax", "call    quotearg_n_style", "lea     rsi, aSS_0; \"%s -> %s\"", "mov     rdx, rax", "mov     rcx, rbp", "xor     eax, eax", "mov     edi, 1", "call    ___printf_chk", "test    backup_dst_name, backup_dst_name", "jz      short loc_4EB1"], ["push~r12", "push~rbp", "mov~r12,src", "push~rbx", "mov~edi,0", "mov~rbx,backup_dst_name", "mov~backup_dst_name,dst", "mov~esi,0", "call~FOO", "xor~edi,edi", "mov~rdx,src", "mov~esi,0", "mov~rbp,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rdx,rax", "mov~rcx,rbp", "xor~eax,eax", "mov~edi,0", "call~FOO", "test~backup_dst_name,backup_dst_name", "jz~FOO"]], [3, 0, 4, 0, 3, 13, 2, 3, 1, 2, 0.0, ["mov     rsi, backup_dst_name; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aBackupS; \" (backup: %s)\"", "mov     backup_dst_name, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, rbx", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk"], ["mov~rsi,backup_dst_name", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~backup_dst_name,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rdx,rbx", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 1, 0, 0, 5, 0, 1, 2, 0, 0.15000000000000002, ["pop     rbx", "pop     rbp", "pop     src", "mov     esi, 0Ah; int", "jmp     ___overflow"], ["pop~rbx", "pop~rbp", "pop~src", "mov~esi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [1, 0, 0, 0, 0, 7, 0, 0, 2, -1, 0.0, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah", "pop     rbx", "pop     rbp", "pop     src", "retn"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0", "pop~rbx", "pop~rbp", "pop~src", "retn"]]], "func_feature": [6, 5, 8, 0, 6, 6, 4, 51, 0.075, 3, 0], "succs": [[3, 5], [0, 2], [0], [4], [], []], "fname": "emit_verbose", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[4, 0, 0, 1, 3, 20, 2, 3, 0, 0, 0.0, ["mov     rsi, dst_name; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aRemovedS; \"removed %s\\n\"", "mov     rbp, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "add     rsp, 8", "mov     eax, ebx", "pop     rbx", "pop     rbp", "pop     dst_name", "pop     src_name", "retn"], ["mov~rsi,dst_name", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "add~rsp,0", "mov~eax,ebx", "pop~rbx", "pop~rbp", "pop~dst_name", "pop~src_name", "retn"]], [1, 0, 2, 0, 0, 3, 1, 1, 1, -1, 0.16666666666666666, ["shr     ebx, 1Fh", "and     bl, bpl", "jnz     short loc_4F50"], ["shr~ebx,0", "and~bl,bpl", "jnz~FOO"]], [2, 0, 0, 1, 0, 8, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     ebx, 1", "mov     eax, ebx", "pop     rbx", "pop     rbp", "pop     dst_name", "pop     src_name", "retn"], ["add~rsp,0", "mov~ebx,0", "mov~eax,ebx", "pop~rbx", "pop~rbp", "pop~dst_name", "pop~src_name", "retn"]], [4, 0, 4, 2, 1, 24, 2, 2, 0, 1, 0.0, ["push    r13", "push    r12", "movzx   r9d, dl; force", "push    rbp", "push    rbx", "mov     edx, 0FFFFFF9Ch; dstdir", "mov     r13, src_name", "mov     r12, dst_name", "mov     ebp, ecx", "sub     rsp, 10h", "test    r8b, r8b", "mov     verbose, dst_name; dstname", "setnz   r8b", "push    0FFFFFFFFFFFFFFFFh; linkat_errno", "mov     dst_name, src_name; srcname", "movzx   r8d, r8b", "mov     edi, edx; srcdir", "shl     r8d, 0Ah; flags", "call    force_linkat", "test    eax, eax", "mov     ebx, eax", "pop     rdx", "pop     rcx", "jg      short loc_4F98"], ["push~r13", "push~r12", "movzx~r9d,dl", "push~rbp", "push~rbx", "mov~edx,0", "mov~r13,src_name", "mov~r12,dst_name", "mov~ebp,ecx", "sub~rsp,0", "test~r8b,r8b", "mov~verbose,dst_name", "setnz~r8b", "push~0", "mov~dst_name,src_name", "movzx~r8d,r8b", "mov~edi,edx", "shl~r8d,0", "call~FOO", "test~eax,eax", "mov~ebx,eax", "pop~rdx", "pop~rcx", "jg~FOO"]], [5, 0, 0, 1, 4, 29, 5, 4, 1, 0, 0.0, ["mov     rdx, src_name; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     rdx, dst_name; arg", "mov     esi, 4; s", "xor     edi, edi; n", "mov     src_name, rax", "call    quotearg_n_style", "lea     rsi, aCannotCreateHa; \"cannot create hard link %s to %s\"", "mov     rbp, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, r13", "mov     rcx, rbp", "mov     rdx, rax; format", "mov     esi, ebx; errnum", "xor     eax, eax", "xor     edi, edi; status", "call    _error", "xor     ebx, ebx", "add     rsp, 8", "mov     eax, ebx", "pop     rbx", "pop     rbp", "pop     dst_name", "pop     r13", "retn"], ["mov~rdx,src_name", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rdx,dst_name", "mov~esi,0", "xor~edi,edi", "mov~src_name,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r8,r13", "mov~rcx,rbp", "mov~rdx,rax", "mov~esi,ebx", "xor~eax,eax", "xor~edi,edi", "call~FOO", "xor~ebx,ebx", "add~rsp,0", "mov~eax,ebx", "pop~rbx", "pop~rbp", "pop~dst_name", "pop~r13", "retn"]]], "func_feature": [8, 10, 10, 0, 5, 4, 3, 84, 0.03333, 2, 5], "succs": [[], [0, 2], [], [1, 4], []], "fname": "create_hard_link", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 6, 0, 0, 2, 1, 1, 0, 0, 0.027777777777777776, ["test    dword ptr [x+14h], 0FFFF00h", "jz      loc_5130"], ["test~[word ptr [x+0],0", "jz~FOO"]], [4, 1, 7, 0, 2, 15, 1, 3, 1, 4, 0.05555555555555555, ["mov     edi, [rbp+0]; mode", "lea     r12, [rsp+48h+perms]", "mov     rsi, r12; str", "call    strmode", "mov     ebp, [rbp+0]", "mov     rsi, dst_name; arg", "mov     edi, 4; s", "mov     [rsp+48h+perms+0Ah], 0", "call    quotearg_style", "and     ebp, 0FFFh", "cmp     byte ptr [x+18h], 0", "mov     r14, rax", "mov     dst_name, cs:program_name", "mov     edx, 5; category", "jnz     short loc_5086"], ["mov~edi,[rbp+0]", "lea~r12,[rsp+0]", "mov~rsi,r12", "call~FOO", "mov~ebp,[rbp+0]", "mov~rsi,dst_name", "mov~edi,0", "mov~[rsp+0],0", "call~FOO", "and~ebp,<STR>", "cmp~[yte ptr [x+0],0", "mov~r14,rax", "mov~dst_name,<TAG>", "mov~edx,0", "jnz~FOO"]], [0, 0, 2, 0, 1, 4, 1, 2, 2, 1, 0.19444444444444442, ["call    yesno", "mov     rcx, [rsp+48h+var_30]", "xor     rcx, fs:28h", "jnz     short loc_5146"], ["call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [3, 0, 3, 2, 1, 13, 1, 2, 3, 2, 0.16666666666666666, ["sub     rsp, 8", "add     r12, 1", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "push    r12", "mov     r9, rbp", "mov     r8, r14", "mov     rcx, rbx", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "pop     rax", "pop     rdx", "jmp     short loc_510E"], ["sub~rsp,0", "add~r12,0", "mov~rdi,<TAG>", "push~r12", "mov~r9,rbp", "mov~r8,r14", "mov~rcx,rbx", "mov~esi,0", "xor~eax,eax", "call~FOO", "pop~rax", "pop~rdx", "jmp~FOO"]], [3, 0, 3, 0, 3, 16, 2, 3, 1, 2, 0.041666666666666664, ["mov     rsi, dst_name; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aSOverwriteS; \"%s: overwrite %s? \"", "mov     dst_name, cs:program_name", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbp, rax", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     r8, rbp", "mov     rcx, rbx", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk"], ["mov~rsi,dst_name", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~dst_name,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbp,rax", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~r8,rbp", "mov~rcx,rbx", "mov~esi,0", "xor~eax,eax", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 4, 0, 1, 5, 1, 2, 3, 3, 0.027777777777777776, ["lea     rsi, aSUnwritableSMo; \"%s: unwritable %s (mode %04lo, %s); try\"...", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, rax", "jmp     loc_5097"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rdx,rax", "jmp~FOO"]], [0, 1, 9, 1, 1, 17, 2, 2, 0, 3, 0.0, ["push    r14", "push    r13", "mov     r13, x", "push    r12", "push    rbp", "mov     rbp, rdx", "push    rbx", "mov     rbx, dst_name", "mov     x, rbx; file", "sub     rsp, 20h", "mov     esi, [rdx]; mode", "mov     rax, fs:28h", "mov     [rsp+48h+var_30], rax", "xor     eax, eax", "call    writable_destination", "test    al, al", "jnz     loc_50C8"], ["push~r14", "push~r13", "mov~r13,x", "push~r12", "push~rbp", "mov~rbp,rdx", "push~rbx", "mov~rbx,dst_name", "mov~x,rbx", "sub~rsp,<STR>", "mov~esi,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 1, 0, 1, 0, 7, 0, 0, 3, -1, 0.0, ["add     rsp, 20h", "pop     rbx", "pop     rbp", "pop     r12", "pop     x", "pop     r14", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~x", "pop~r14", "retn"]], [0, 0, 4, 0, 1, 4, 1, 1, 2, 3, 0.09722222222222221, ["lea     rsi, aSReplaceSOverr; \"%s: replace %s, overriding mode %04lo (\"...", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, rax"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rdx,rax"]]], "func_feature": [11, 10, 17, 1, 10, 12, 2, 84, 0.06111, 6, 4], "succs": [[9, 6], [0, 9], [8, 5], [2], [2], [], [3], [1, 4], [], [3]], "fname": "overwrite_ok", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 3, 1, 1, 7, 1, 1, 0, 0, 0.1, ["sub     file_end, size", "mov     rdx, size; length", "mov     edi, ebp; fd", "mov     rsi, rax; offset", "call    punch_hole", "test    eax, eax", "jns     short loc_517C"], ["sub~file_end,size", "mov~rdx,size", "mov~edi,ebp", "mov~rsi,rax", "call~FOO", "test~eax,eax", "jns~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 1, -1, 0.1, ["test    r12b, r12b", "jnz     short loc_5190"], ["test~r12b,r12b", "jnz~FOO"]], [2, 0, 1, 0, 1, 7, 0, 2, 1, 0, 0.03333333333333333, ["mov     rsi, name; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     edx, 5", "mov     fd, rax", "lea     rsi, aCannotLseekS; \"cannot lseek %s\"", "jmp     short loc_51C0"], ["mov~rsi,name", "mov~edi,0", "call~FOO", "mov~edx,0", "mov~fd,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [2, 0, 6, 1, 1, 14, 1, 2, 0, 1, 0.0, ["push    r13", "push    r12", "mov     r13, name", "push    rbp", "push    rbx", "mov     r12d, edx", "mov     name, size; offset", "mov     edx, 1; whence", "mov     ebp, edi", "sub     rsp, 8", "mov     rbx, size", "call    _lseek", "test    file_end, file_end", "js      short loc_51F0"], ["push~r13", "push~r12", "mov~r13,name", "push~rbp", "push~rbx", "mov~r12d,edx", "mov~name,size", "mov~edx,0", "mov~ebp,edi", "sub~rsp,0", "mov~rbx,size", "call~FOO", "test~file_end,file_end", "js~FOO"]], [2, 0, 0, 1, 0, 7, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     eax, 1", "pop     size", "pop     fd", "pop     r12", "pop     name", "retn"], ["add~rsp,0", "mov~eax,0", "pop~size", "pop~fd", "pop~r12", "pop~name", "retn"]], [1, 0, 0, 1, 3, 17, 4, 3, 2, -1, 0.0, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     size, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, rbp", "mov     rdx, rbx; format", "xor     eax, eax", "xor     edi, edi; status", "call    _error", "add     rsp, 8", "xor     eax, eax", "pop     rbx", "pop     rbp", "pop     r12", "pop     name", "retn"], ["xor~edi,edi", "call~FOO", "mov~size,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,rbp", "mov~rdx,rbx", "xor~eax,eax", "xor~edi,edi", "call~FOO", "add~rsp,0", "xor~eax,eax", "pop~rbx", "pop~rbp", "pop~r12", "pop~name", "retn"]], [2, 0, 1, 0, 1, 6, 0, 1, 3, -1, 0.06666666666666667, ["mov     rsi, name; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aErrorDeallocat; \"error deallocating %s\"", "mov     fd, rax", "mov     edx, 5; category"], ["mov~rsi,name", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~fd,rax", "mov~edx,0"]]], "func_feature": [7, 7, 10, 0, 7, 8, 3, 60, 0.04286, 2, 4], "succs": [[4, 6], [0, 4], [5], [1, 2], [], [], [5]], "fname": "create_hole", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 46, 0, 0, 3, 1, 1, 0, 0, 0.0883441258094357, ["test    cl, cl", "mov     [rsp+0A8h+prev_hole], cl", "jnz     loc_54B2"], ["test~cl,cl", "mov~[rsp+0],cl", "jnz~FOO"]], [0, 0, 46, 0, 0, 2, 1, 1, 11, 7, 0.06359851988899168, ["xor     r15d, r15d", "jmp     loc_53FB"], ["xor~r15d,r15d", "jmp~FOO"]], [1, 0, 46, 0, 0, 1, 0, 0, 12, 7, 0.0006938020351526365, ["mov     r15d, 1"], ["mov~r15d,0"]], [0, 0, 1, 0, 0, 2, 0, 1, 10, -1, 0.002158495220474869, ["mov     r15d, eax", "jmp     loc_5315"], ["mov~r15d,eax", "jmp~FOO"]], [0, 0, 46, 0, 1, 9, 1, 2, 9, 5, 0.13228492136910272, ["movzx   edx, [rsp+0A8h+punch_holes]; punch_holes", "mov     rsi, [rsp+0A8h+name]; name", "mov     prev_hole_0, psize; size", "mov     edi, [rsp+0A8h+dest_fd]; fd", "mov     [rsp+0A8h+prev_hole], r9b", "call    create_hole", "test    al, al", "movzx   r9d, [rsp+0A8h+prev_hole]", "jnz     loc_542F"], ["movzx~edx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~prev_hole_0,psize", "mov~edi,[rsp+0]", "mov~[rsp+0],r9b", "call~FOO", "test~al,al", "movzx~r9d,[rsp+0]", "jnz~FOO"]], [0, 0, 46, 0, 0, 2, 0, 0, 6, 12, 0.2030527289546716, ["mov     rsi, cbuf", "mov     rdx, csize"], ["mov~rsi,cbuf", "mov~rdx,csize"]], [0, 0, 46, 0, 0, 7, 2, 1, 5, 9, 0.4042553191489362, ["cmp     n_read, csize", "mov     rbx, csize", "cmovbe  rbx, n_read", "test    csize, csize", "setnz   r12b", "and     r12b, [rsp+0A8h+var_8B]", "jz      loc_5490"], ["cmp~n_read,csize", "mov~rbx,csize", "cmovbe~rbx,n_read", "test~csize,csize", "setnz~r12b", "and~r12b,[rsp+0]", "jz~FOO"]], [1, 0, 46, 1, 0, 4, 0, 0, 8, 6, 0.17252543940795564, ["mov     rax, 7FFFFFFFFFFFFFFFh", "sub     rax, csize", "cmp     rax, psize", "jb      short loc_5580"], ["mov~rax,0", "sub~rax,csize", "cmp~rax,psize", "jb~FOO"]], [0, 0, 46, 0, 0, 2, 1, 1, 7, 7, 0.0849522047486895, ["test    csize, csize", "jnz     short loc_54F8"], ["test~csize,csize", "jnz~FOO"]], [0, 0, 46, 0, 0, 2, 0, 0, 11, 7, 0.08572309589885908, ["mov     ecx, r12d", "nop     dword ptr [rax]"], ["mov~ecx,r12d", "nop~<TAG>"]], [1, 0, 46, 0, 0, 2, 0, 1, 7, 11, 0.20906567992599445, ["cmp     byte ptr [rsi], 0", "jnz     loc_55C0"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 46, 0, 0, 2, 1, 1, 9, 11, 0.020351526364477335, ["test    dl, 0Fh", "jnz     short loc_538A"], ["test~dl,0", "jnz~FOO"]], [0, 0, 46, 2, 0, 3, 0, 0, 9, 5, 0.1504779525131052, ["add     psize, csize", "add     cbuf, csize", "mov     r15, csize"], ["add~psize,csize", "add~cbuf,csize", "mov~r15,csize"]], [2, 0, 1, 0, 3, 16, 4, 3, 4, -1, 0.001387604070305273, ["mov     rsi, [rsp+0A8h+arg]; arg", "mov     edi, 4; s", "mov     rbx, rax", "xor     r15d, r15d", "call    quotearg_style", "lea     rsi, aErrorReadingS; \"error reading %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbp, rax", "call    _dcgettext", "mov     esi, [rbx]; errnum", "mov     rdx, rax; format", "mov     rcx, rbp", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rsi,[rsp+0]", "mov~edi,0", "mov~rbx,rax", "xor~r15d,r15d", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbp,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "mov~rcx,rbp", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 46, 0, 1, 3, 0, 2, 3, 4, 0.018501387604070305, ["call    ___errno_location", "cmp     dword ptr [rax], 4", "jz      short loc_52A6"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 46, 0, 0, 2, 0, 1, 6, 8, 0.1868640148011101, ["cmp     cl, 1", "jz      short loc_54E8"], ["cmp~cl,0", "jz~FOO"]], [0, 0, 46, 1, 0, 2, 0, 1, 10, 4, 0.3368794326241135, ["sub     rbp, csize", "jnz     loc_5368"], ["sub~rbp,csize", "jnz~FOO"]], [0, 0, 46, 1, 0, 5, 0, 1, 11, 5, 0.10638297872340426, ["mov     r11, pbuf_0", "mov     ecx, r12d", "add     pbuf_0, csize", "mov     r15, csize", "jmp     short loc_5513"], ["mov~r11,pbuf_0", "mov~ecx,r12d", "add~pbuf_0,csize", "mov~r15,csize", "jmp~FOO"]], [0, 0, 46, 0, 0, 5, 2, 1, 12, 5, 0.03191489361702128, ["xor     r15d, r15d", "test    r9b, r9b", "mov     ecx, r12d", "mov     r11, pbuf_0", "jnz     short loc_5513"], ["xor~r15d,r15d", "test~r9b,r9b", "mov~ecx,r12d", "mov~r11,pbuf_0", "jnz~FOO"]], [0, 0, 46, 1, 0, 4, 1, 1, 13, 5, 0.0, ["add     r14, csize", "mov     r15, csize", "xor     r13d, r13d", "jmp     short loc_5513"], ["add~r14,csize", "mov~r15,csize", "xor~r13d,r13d", "jmp~FOO"]], [0, 0, 46, 0, 0, 2, 0, 1, 7, 7, 0.09882824545174221, ["cmp     n_read, r15", "ja      short loc_54E8"], ["cmp~n_read,r15", "ja~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.005550416281221092, ["mov     r15d, 1", "jmp     loc_5315"], ["mov~r15d,0", "jmp~FOO"]], [3, 0, 47, 1, 0, 22, 1, 1, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 78h", "mov     rax, [rsp+0A8h+src_name]", "mov     rbx, [rsp+0A8h+total_n_read]", "mov     r10, [rsp+0A8h+last_write_made_hole]", "mov     [rsp+0A8h+punch_holes], r9b", "mov     [rsp+0A8h+arg], rax", "mov     rax, [rsp+0A8h+dst_name]", "mov     byte ptr [r10], 0", "mov     [rsp+0A8h+var_68], rbx", "mov     [rsp+0A8h+var_48], r10", "mov     qword ptr [rbx], 0", "mov     [rsp+0A8h+name], rax", "mov     rax, [rsp+0A8h+max_n_read]", "test    max_n_read_0, max_n_read_0", "mov     [rsp+0A8h+var_80], max_n_read_0", "jz      loc_5613"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,[rsp+0]", "mov~rbx,[rsp+0]", "mov~r10,[rsp+0]", "mov~[rsp+0],r9b", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~<TAG>,0", "mov~[rsp+0],rbx", "mov~[rsp+0],r10", "mov~<TAG>,0", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "test~max_n_read_0,max_n_read_0", "mov~[rsp+0],max_n_read_0", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 4, 1, 0.058279370952821465, ["test    r15b, r15b", "jz      loc_5613"], ["test~r15b,r15b", "jz~FOO"]], [2, 0, 46, 2, 0, 3, 0, 1, 8, 10, 0.08973172987974098, ["add     rsi, 1; s2", "sub     rdx, 1; n", "jz      loc_5528"], ["add~rsi,0", "sub~rdx,0", "jz~FOO"]], [0, 0, 46, 0, 0, 2, 0, 1, 11, 3, 0.055658341042244826, ["mov     r12d, ecx", "jmp     loc_5444"], ["mov~r12d,ecx", "jmp~FOO"]], [0, 0, 46, 0, 0, 11, 3, 0, 1, 4, 0.020351526364477335, ["test    hole_size_0, hole_size_0", "mov     [rsp+0A8h+hole_size], hole_size_0", "mov     [rsp+0A8h+var_3C], r9d", "cmovz   hole_size_0, buf_size_0", "mov     [rsp+0A8h+buf_size], buf_size_0", "mov     [rsp+0A8h+buf], buf_0", "mov     [rsp+0A8h+dest_fd], esi", "mov     [rsp+0A8h+src_fd], edi", "xor     r13d, r13d", "mov     [rsp+0A8h+var_60], r8", "xor     r15d, r15d"], ["test~hole_size_0,hole_size_0", "mov~[rsp+0],hole_size_0", "mov~[rsp+0],r9d", "cmovz~hole_size_0,buf_size_0", "mov~[rsp+0],buf_size_0", "mov~[rsp+0],buf_0", "mov~[rsp+0],esi", "mov~[rsp+0],edi", "xor~r13d,r13d", "mov~[rsp+0],r8", "xor~r15d,r15d"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["add     rsp, 78h", "mov     eax, r15d", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "mov~eax,r15d", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [2, 0, 1, 0, 3, 16, 5, 4, 9, -1, 0.007246376811594204, ["mov     rsi, [rsp+0A8h+arg]; arg", "mov     edi, 4; s", "xor     r15d, r15d", "call    quotearg_style", "lea     rsi, aOverflowReadin; \"overflow reading %s\"", "mov     csize, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_5315"], ["mov~rsi,[rsp+0]", "mov~edi,0", "xor~r15d,r15d", "call~FOO", "lea~rsi,<TAG>", "mov~csize,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 1, 0, 4, 18, 3, 5, 10, -1, 0.0021584952204748687, ["mov     rsi, [rsp+0A8h+name]; arg", "mov     edi, 4; s", "mov     r15d, ecx", "call    quotearg_style", "lea     rsi, aErrorWritingS; \"error writing %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     n_read, rax", "call    _dcgettext", "mov     csize, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, rbp", "mov     rdx, rbx; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_5315"], ["mov~rsi,[rsp+0]", "mov~edi,0", "mov~r15d,ecx", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~n_read,rax", "call~FOO", "mov~csize,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,rbp", "mov~rdx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 46, 0, 1, 9, 0, 2, 9, 5, 0.13228492136910272, ["mov     edi, [rsp+0A8h+dest_fd]; fd", "mov     rdx, psize; count", "mov     rsi, pbuf_0; buf", "mov     byte ptr [rsp+0A8h+pbuf], r9b", "call    full_write", "cmp     psize, rax", "movzx   r9d, byte ptr [rsp+0A8h+pbuf]", "movzx   ecx, [rsp+0A8h+prev_hole]", "jnz     loc_55CD"], ["mov~edi,[rsp+0]", "mov~rdx,psize", "mov~rsi,pbuf_0", "mov~[yte ptr [rsp+0],r9b", "call~FOO", "cmp~psize,rax", "movzx~r9d,[yte ptr [rsp+0]", "movzx~ecx,[rsp+0]", "jnz~FOO"]], [1, 0, 46, 1, 0, 6, 2, 1, 8, 6, 0.1697502312673451, ["add     psize, csize", "xor     r9d, r9d", "test    cl, cl", "mov     r15d, 1", "mov     [rsp+0A8h+prev_hole], cl", "jz      loc_5407"], ["add~psize,csize", "xor~r9d,r9d", "test~cl,cl", "mov~r15d,0", "mov~[rsp+0],cl", "jz~FOO"]], [1, 0, 1, 1, 0, 12, 0, 1, 5, -1, 0.018501387604070305, ["movzx   edx, byte ptr [rsp+0A8h+var_3C]; punch_holes", "mov     rsi, [rsp+0A8h+name]; name", "mov     rcx, psize; size", "mov     edi, [rsp+0A8h+dest_fd]; fd", "add     rsp, 78h", "pop     rbx", "pop     rbp", "pop     r12", "pop     psize", "pop     r14", "pop     make_hole_0", "jmp     create_hole"], ["movzx~edx,[yte ptr [rsp+0]", "mov~rsi,[rsp+0]", "mov~rcx,psize", "mov~edi,[rsp+0]", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~psize", "pop~r14", "pop~make_hole_0", "jmp~FOO"]], [0, 0, 46, 0, 0, 2, 1, 1, 11, 7, 0.0509559050262103, ["test    r9b, r9b", "jz      loc_549A"], ["test~r9b,r9b", "jz~FOO"]], [0, 0, 46, 0, 0, 2, 0, 1, 8, 7, 0.004625346901017576, ["mov     r12d, ecx", "jmp     short loc_549A"], ["mov~r12d,ecx", "jmp~FOO"]], [0, 0, 46, 0, 0, 1, 0, 1, 3, 2, 0.12257169287696577, ["jz      loc_545F"], ["jz~FOO"]], [0, 0, 46, 0, 1, 10, 1, 1, 2, 3, 0.15541165587419056, ["mov     rax, [rsp+0A8h+buf_size]", "mov     rdx, [rsp+0A8h+var_80]", "mov     rsi, [rsp+0A8h+buf]; buf", "mov     edi, [rsp+0A8h+src_fd]; fd", "cmp     rax, rdx", "cmovbe  rdx, rax; nbytes", "call    _read", "test    rax, rax", "mov     [rsp+0A8h+var_78], rax", "jns     short loc_5330"], ["mov~rax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~edi,[rsp+0]", "cmp~rax,rdx", "cmovbe~rdx,rax", "call~FOO", "test~rax,rax", "mov~[rsp+0],rax", "jns~FOO"]], [0, 0, 46, 0, 0, 3, 1, 1, 10, 4, 0.24822695035460998, ["test    r15d, r15d", "mov     psize, csize", "jz      loc_5548"], ["test~r15d,r15d", "mov~psize,csize", "jz~FOO"]], [0, 0, 46, 0, 0, 2, 1, 1, 10, 8, 0.16366019118100528, ["test    r9b, r9b", "jz      short loc_54F2"], ["test~r9b,r9b", "jz~FOO"]], [0, 0, 46, 0, 0, 5, 2, 1, 9, 9, 0.1498612395929695, ["test    psize, psize", "setnz   r9b", "and     r9d, edx", "cmp     n_read, r15", "ja      loc_5538"], ["test~psize,psize", "setnz~r9b", "and~r9d,edx", "cmp~n_read,r15", "ja~FOO"]], [0, 0, 46, 0, 0, 2, 1, 1, 10, 8, 0.057816836262719704, ["test    al, al", "jz      loc_5538"], ["test~al,al", "jz~FOO"]], [1, 0, 46, 0, 0, 5, 3, 0, 9, 9, 0.05504162812210916, ["mov     r9d, ecx", "xor     r9d, 1", "test    psize, psize", "setnz   al", "and     r9d, eax"], ["mov~r9d,ecx", "xor~r9d,0", "test~psize,psize", "setnz~al", "and~r9d,eax"]], [0, 0, 46, 0, 0, 2, 1, 1, 11, 3, 0.12750539623805118, ["test    csize, csize", "jnz     loc_5560"], ["test~csize,csize", "jnz~FOO"]], [0, 0, 46, 0, 0, 4, 1, 1, 8, 10, 0.104995374653099, ["mov     eax, r12d", "mov     edx, ecx", "xor     r12d, r12d", "jmp     loc_53D1"], ["mov~eax,r12d", "mov~edx,ecx", "xor~r12d,r12d", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []], [0, 0, 46, 1, 0, 6, 0, 1, 12, 2, 0.15772432932469935, ["mov     rdi, [rsp+0A8h+var_78]", "sub     [rsp+0A8h+var_80], rdi", "mov     r15d, r12d", "mov     rax, [rsp+0A8h+var_48]", "mov     [rax], r12b", "jnz     loc_52A6"], ["mov~rdi,[rsp+0]", "sub~[rsp+0],rdi", "mov~r15d,r12d", "mov~rax,[rsp+0]", "mov~<TAG>,r12b", "jnz~FOO"]], [0, 0, 46, 0, 1, 12, 3, 1, 10, 10, 0.020814061054579093, ["mov     rdi, cbuf; s1", "mov     [rsp+0A8h+pbuf], pbuf_0", "mov     [rsp+0A8h+prev_hole], cl", "call    _memcmp", "movzx   ecx, [rsp+0A8h+prev_hole]", "test    eax, eax", "mov     r11, [rsp+0A8h+pbuf]", "setz    r12b", "mov     edx, r12d", "xor     edx, ecx", "test    eax, eax", "setnz   al"], ["mov~rdi,cbuf", "mov~[rsp+0],pbuf_0", "mov~[rsp+0],cl", "call~FOO", "movzx~ecx,[rsp+0]", "test~eax,eax", "mov~r11,[rsp+0]", "setz~r12b", "mov~edx,r12d", "xor~edx,ecx", "test~eax,eax", "setnz~al"]], [1, 0, 46, 1, 0, 11, 0, 0, 4, 10, 0.11655874190564293, ["mov     rax, [rsp+0A8h+var_68]", "mov     rbp, [rsp+0A8h+var_78]", "mov     ecx, r15d", "mov     r14, [rsp+0A8h+buf]", "mov     r10, [rsp+0A8h+var_60]", "add     [rax], rbp", "cmp     [rsp+0A8h+hole_size], 0", "mov     r11, r14", "mov     make_hole_0, r10", "setnz   [rsp+0A8h+var_8B]", "nop     dword ptr [rax+00000000h]"], ["mov~rax,[rsp+0]", "mov~rbp,[rsp+0]", "mov~ecx,r15d", "mov~r14,[rsp+0]", "mov~r10,[rsp+0]", "add~<TAG>,rbp", "cmp~[rsp+0],0", "mov~r11,r14", "mov~make_hole_0,r10", "setnz~[rsp+0]", "nop~[word ptr [rax+0]"]]], "func_feature": [15, 44, 50, 6, 48, 72, 2, 259, 0.09362, 3, 14], "succs": [[4, 30], [0], [0], [27], [3, 37], [10], [5, 15], [28, 12], [34, 7], [7], [24, 43], [10, 46], [16], [27], [36, 13], [8, 20], [25, 6], [16], [16, 19], [16], [8, 31], [27], [26, 21], [32, 21], [41, 11], [45], [36], [], [27], [27], [37, 29], [4, 30], [44], [2, 31], [31], [23, 47], [35, 14], [17, 42], [9, 1], [40, 38], [33, 38], [38], [18, 45], [39], [], [36, 23], [39], [6]], "fname": "sparse_copy", "n_num": 48}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 4, 0, 1, 5, 0, 2, 0, 0, 0.07142857142857142, ["mov     r13, src_name", "call    ___errno_location", "cmp     byte ptr [x+23h], 0", "mov     r12, rax", "jnz     short loc_56C0"], ["mov~r13,src_name", "call~FOO", "cmp~[yte ptr [x+0],0", "mov~r12,rax", "jnz~FOO"]], [2, 0, 8, 1, 0, 8, 0, 1, 0, 2, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbp, x", "sub     rsp, 8", "cmp     byte ptr [x+25h], 0", "jz      short loc_56A0"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbp,x", "sub~rsp,0", "cmp~[yte ptr [x+0],0", "jz~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 2, -1, 0.03571428571428571, ["movzx   ebx, byte ptr [x+26h]", "test    bl, bl", "jnz     loc_5645"], ["movzx~ebx,[yte ptr [x+0]", "test~bl,bl", "jnz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.03571428571428571, ["mov     ebx, ecx", "and     bl, [r8+21h]", "jnz     short loc_56D8"], ["mov~ebx,ecx", "and~bl,[r8+0]", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, -1, 0.008928571428571428, ["mov     dword ptr [rax], 5Fh ; '_'", "jmp     short loc_5687"], ["mov~<TAG>,0", "jmp~FOO"]], [2, 0, 0, 1, 1, 9, 0, 1, 2, 0, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'", "add     rsp, 8", "mov     eax, ebx", "pop     rbx", "pop     x", "pop     r12", "pop     r13", "retn"], ["call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~eax,ebx", "pop~rbx", "pop~x", "pop~r12", "pop~r13", "retn"]], [3, 0, 1, 0, 3, 16, 3, 3, 2, -1, 0.04464285714285714, ["mov     rsi, src_name; arg", "mov     edi, 4; s", "mov     dword ptr [r12], 5Fh ; '_'", "call    quotearg_style", "lea     rsi, aFailedToGetSec; \"failed to get security context of %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbx, rax", "call    _dcgettext", "mov     esi, [r12]; errnum", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "movzx   ebx, byte ptr [x+26h]"], ["mov~rsi,src_name", "mov~edi,0", "mov~<TAG>,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,rbx", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "movzx~ebx,[yte ptr [x+0]"]], [2, 0, 0, 1, 0, 8, 1, 0, 3, -1, 0.0, ["add     rsp, 8", "xor     ebx, 1", "mov     eax, ebx", "pop     rbx", "pop     x", "pop     r12", "pop     src_name", "retn"], ["add~rsp,0", "xor~ebx,0", "mov~eax,ebx", "pop~rbx", "pop~x", "pop~r12", "pop~src_name", "retn"]], [2, 0, 0, 1, 0, 8, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     ebx, 1", "mov     eax, ebx", "pop     rbx", "pop     x", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "mov~ebx,0", "mov~eax,ebx", "pop~rbx", "pop~x", "pop~r12", "pop~r13", "retn"]]], "func_feature": [5, 6, 10, 0, 9, 10, 6, 62, 0.02183, 1, 4], "succs": [[2, 6], [0, 3], [4, 6], [8, 5], [7], [], [7], [], []], "fname": "set_process_security_ctx", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[3, 0, 0, 0, 3, 21, 5, 3, 0, 0, 0.0, ["mov     rdx, dst_name; arg", "mov     dword ptr [rbx], 5Fh ; '_'", "mov     esi, 4; s", "xor     edi, edi; n", "call    quotearg_n_style", "lea     rsi, aFailedToSetThe; \"failed to set the security context of %\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     x, rax", "call    _dcgettext", "mov     esi, [rbx]; errnum", "mov     rcx, rbp", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "pop     rbx", "xor     eax, eax", "pop     rbp", "pop     dst_name", "retn"], ["mov~rdx,dst_name", "mov~<TAG>,0", "mov~esi,0", "xor~edi,edi", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~x,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,rbp", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "pop~rbx", "xor~eax,eax", "pop~rbp", "pop~dst_name", "retn"]], [1, 0, 3, 0, 1, 9, 0, 2, 0, 2, 0.0, ["push    r12", "push    rbp", "mov     rbp, x", "push    rbx", "mov     r12, dst_name", "call    ___errno_location", "cmp     byte ptr [x+23h], 0", "mov     rbx, rax", "jz      short loc_570E"], ["push~r12", "push~rbp", "mov~rbp,x", "push~rbx", "mov~r12,dst_name", "call~FOO", "cmp~[yte ptr [x+0],0", "mov~rbx,rax", "jz~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 1, 1, 0.16666666666666666, ["cmp     byte ptr [x+26h], 0", "jz      short loc_5758"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [1, 0, 0, 0, 0, 6, 1, 0, 2, 0, 0.0, ["mov     dword ptr [rax], 5Fh ; '_'", "xor     eax, eax", "pop     rbx", "pop     x", "pop     dst_name", "retn"], ["mov~<TAG>,0", "xor~eax,eax", "pop~rbx", "pop~x", "pop~dst_name", "retn"]]], "func_feature": [4, 6, 6, 0, 4, 4, 5, 38, 0.04167, 1, 0], "succs": [[], [0, 2], [0, 3], []], "fname": "set_file_security_ctx", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 0, 0, 1, 11, 1, 1, 0, 0, 0.0, ["lea     r8, triple_free; data_freer", "lea     rcx, triple_compare; comparator", "xor     esi, esi; tuning", "lea     rdx, triple_hash; hasher", "push    rbx", "mov     rbx, x", "mov     edi, 3Dh ; '='; candidate", "call    hash_initialize", "mov     [x+40h], rax", "pop     x", "retn"], ["lea~r8,<TAG>", "lea~rcx,<TAG>", "xor~esi,esi", "lea~rdx,<TAG>", "push~rbx", "mov~rbx,x", "mov~edi,0", "call~FOO", "mov~[x+0],rax", "pop~x", "retn"]]], "func_feature": [1, 1, 1, 0, 1, 0, 1, 11, 0.0, 3, 0], "succs": [[]], "fname": "dest_info_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 0, 0, 1, 11, 1, 1, 0, 0, 0.0, ["lea     r8, triple_free; data_freer", "lea     rcx, triple_compare; comparator", "xor     esi, esi; tuning", "lea     rdx, triple_hash_no_name; hasher", "push    rbx", "mov     rbx, x", "mov     edi, 3Dh ; '='; candidate", "call    hash_initialize", "mov     [x+48h], rax", "pop     x", "retn"], ["lea~r8,<TAG>", "lea~rcx,<TAG>", "xor~esi,esi", "lea~rdx,<TAG>", "push~rbx", "mov~rbx,x", "mov~edi,0", "call~FOO", "mov~[x+0],rax", "pop~x", "retn"]]], "func_feature": [1, 1, 1, 0, 1, 0, 1, 11, 0.0, 3, 0], "succs": [[]], "fname": "src_info_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 0, 0, 1, 16, 1, 1, 0, 0, 0.0, ["pxor    xmm0, xmm0", "push    rbx", "mov     rbx, x", "movups  xmmword ptr [x], xmm0", "movups  xmmword ptr [x+10h], xmm0", "movups  xmmword ptr [x+20h], xmm0", "movups  xmmword ptr [x+30h], xmm0", "movups  xmmword ptr [x+40h], xmm0", "call    _geteuid", "test    eax, eax", "mov     dword ptr [x+34h], 0FFFFFFFFh", "setz    al", "mov     [x+1Bh], al", "mov     [x+1Ah], al", "pop     x", "retn"], ["pxor~xmm0,xmm0", "push~rbx", "mov~rbx,x", "movups~<TAG>,xmm0", "movups~[mmword ptr [x+0],xmm0", "movups~[mmword ptr [x+0],xmm0", "movups~[mmword ptr [x+0],xmm0", "movups~[mmword ptr [x+0],xmm0", "call~FOO", "test~eax,eax", "mov~[word ptr [x+0],0", "setz~al", "mov~[x+0],al", "mov~[x+0],al", "pop~x", "retn"]]], "func_feature": [1, 1, 1, 0, 1, 0, 1, 16, 0.0, 0, 0], "succs": [[]], "fname": "cp_options_default", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[2, 0, 2, 0, 1, 10, 1, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, x", "call    ___errno_location", "mov     edx, [rax]", "cmp     edx, 1", "setz    al", "cmp     edx, 16h", "setz    dl", "or      al, dl", "jz      short loc_5832"], ["push~rbx", "mov~rbx,x", "call~FOO", "mov~edx,<TAG>", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~al,dl", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     x", "retn"], ["pop~x", "retn"]], [1, 0, 1, 0, 0, 2, 1, 0, 0, 1, 0.0, ["movzx   eax, byte ptr [x+1Ah]", "xor     eax, 1"], ["movzx~eax,[yte ptr [x+0]", "xor~eax,0"]]], "func_feature": [1, 2, 2, 0, 3, 3, 3, 14, 0.0, 0, 0], "succs": [[1, 2], [], [1]], "fname": "chown_failure_ok", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.004404761904761905, ["jmp     short loc_5A0C"], ["jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, 0, 0.02880952380952381, ["cmp     byte ptr [x+1Bh], 0", "jnz     loc_5996"], ["cmp~[yte ptr [x+0],0", "jnz~FOO"]], [2, 0, 1, 0, 4, 16, 3, 4, 6, 0, 0.019285714285714288, ["mov     rsi, dst_name; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aFailedToPreser_1; \"failed to preserve ownership for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     gid, rax", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "mov     rdx, rbx; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rsi,dst_name", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~gid,rax", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "mov~rdx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [0, 0, 3, 0, 1, 6, 2, 2, 5, 0, 0.07095238095238095, ["mov     rdi, x; x", "call    chown_failure_ok", "mov     edx, eax", "xor     eax, eax", "test    dl, dl", "jz      loc_59D0"], ["mov~rdi,x", "call~FOO", "mov~edx,eax", "xor~eax,eax", "test~dl,dl", "jz~FOO"]], [1, 1, 20, 0, 0, 7, 3, 1, 3, 0, 0.09904761904761905, ["mov     eax, edx", "mov     ecx, esi", "not     eax", "and     ecx, 0FFFh", "or      ah, 0Eh", "test    eax, ecx", "jnz     loc_5960"], ["mov~eax,edx", "mov~ecx,esi", "not~eax", "and~ecx,<STR>", "or~ah,0", "test~eax,ecx", "jnz~FOO"]], [0, 0, 21, 0, 0, 3, 0, 1, 3, 0, 0.012380952380952381, ["mov     esi, [dst_sb+18h]", "mov     edx, [x+10h]", "jmp     loc_587E"], ["mov~esi,[dst_sb+0]", "mov~edx,[x+0]", "jmp~FOO"]], [0, 0, 21, 0, 0, 2, 0, 0, 2, 0, 0.025, ["mov     esi, [dst_sb+18h]", "mov     edx, [src_sb+18h]"], ["mov~esi,[dst_sb+0]", "mov~edx,[src_sb+0]"]], [2, 0, 0, 1, 0, 9, 0, 0, 3, 0, 0.0, ["add     rsp, 8", "mov     eax, 1", "pop     dest_desc", "pop     x", "pop     gid", "pop     dst_name", "pop     uid", "pop     r15", "retn"], ["add~rsp,0", "mov~eax,0", "pop~dest_desc", "pop~x", "pop~gid", "pop~dst_name", "pop~uid", "pop~r15", "retn"]], [0, 0, 8, 0, 1, 4, 1, 2, 2, 0, 0.0688095238095238, ["mov     edi, ebx; fd", "call    _fchown", "test    eax, eax", "jz      short loc_58FC"], ["mov~edi,ebx", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 8, 0, 1, 4, 1, 2, 2, 0, 0.0688095238095238, ["mov     rdi, dst_name; file", "call    _lchown", "test    eax, eax", "jnz     short loc_5930"], ["mov~rdi,dst_name", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 2, 0, 0.025, ["cmp     byte ptr [x+2Bh], 0", "jz      loc_5895"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [1, 0, 24, 0, 0, 3, 1, 1, 1, 0, 0.016666666666666666, ["mov     rax, 0FF0000000000FFh", "test    [x+18h], rax", "jz      loc_5910"], ["mov~rax,0", "test~[x+0],rax", "jz~FOO"]], [1, 0, 5, 0, 1, 5, 0, 2, 5, 0, 0.05571428571428572, ["call    ___errno_location", "mov     dest_desc, rax", "mov     eax, [rax]", "cmp     eax, 1", "jz      loc_5A40"], ["call~FOO", "mov~dest_desc,rax", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 6, 0, 0.010238095238095237, ["cmp     eax, 16h", "jz      loc_5A40"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 13, 0, 0, 4, 0, 1, 1, 0, 0.14261904761904762, ["cmp     ebx, 0FFFFFFFFh", "mov     edx, r12d; group", "mov     esi, r14d; owner", "jz      short loc_58F0"], ["cmp~ebx,0", "mov~edx,r12d", "mov~esi,r14d", "jz~FOO"]], [1, 0, 25, 1, 0, 14, 1, 1, 0, 0, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r13, dst_name", "push    rbp", "push    rbx", "mov     rbp, x", "mov     ebx, edx", "sub     rsp, 8", "test    r8b, r8b", "mov     r14d, [src_sb+1Ch]", "mov     r12d, [src_sb+20h]", "jnz     short loc_5895"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r13,dst_name", "push~rbp", "push~rbx", "mov~rbp,x", "mov~ebx,edx", "sub~rsp,0", "test~r8b,r8b", "mov~r14d,[src_sb+0]", "mov~r12d,[src_sb+0]", "jnz~FOO"]], [1, 0, 19, 0, 1, 7, 3, 2, 4, 0, 0.05738095238095239, ["and     edx, esi", "mov     x, dst_name; name", "mov     esi, ebx; desc", "and     edx, 1C0h; mode", "call    qset_acl", "test    eax, eax", "jz      loc_5895"], ["and~edx,esi", "mov~x,dst_name", "mov~esi,ebx", "and~edx,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 0, 1, 0, 10, 0, 0, 7, 0, 0.0, ["movzx   eax, byte ptr [x+24h]", "add     rsp, 8", "pop     rbx", "pop     x", "pop     r12", "neg     eax", "pop     dst_name", "pop     r14", "pop     r15", "retn"], ["movzx~eax,[yte ptr [x+0]", "add~rsp,0", "pop~rbx", "pop~x", "pop~r12", "neg~eax", "pop~dst_name", "pop~r14", "pop~r15", "retn"]], [2, 0, 1, 0, 3, 15, 3, 4, 7, 0, 0.009642857142857144, ["mov     rsi, dst_name; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aClearingPermis; \"clearing permissions for %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     gid, rax", "call    _dcgettext", "mov     esi, [rbx]; errnum", "mov     rdx, rax; format", "mov     rcx, r12", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_5A0C"], ["mov~rsi,dst_name", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~gid,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "mov~rcx,r12", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 6, 0, 1, 5, 0, 2, 3, 0, 0.05880952380952381, ["call    ___errno_location", "mov     r14d, [rax]", "mov     r15, rax", "cmp     r14d, 1", "jz      loc_5A28"], ["call~FOO", "mov~r14d,<TAG>", "mov~r15,rax", "cmp~r14d,0", "jz~FOO"]], [1, 0, 6, 0, 1, 5, 0, 2, 3, 0, 0.05880952380952381, ["call    ___errno_location", "mov     ebx, [rax]", "mov     uid, rax", "cmp     ebx, 1", "jz      short loc_5948"], ["call~FOO", "mov~ebx,<TAG>", "mov~uid,rax", "cmp~ebx,0", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 4, 0, 0.017738095238095237, ["cmp     ebx, 16h", "jnz     loc_58CA"], ["cmp~ebx,0", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 4, 0, 0.017738095238095237, ["cmp     r14d, 16h", "jz      loc_5A28"], ["cmp~r14d,0", "jz~FOO"]], [1, 0, 4, 0, 1, 6, 0, 2, 4, 0, 0.017738095238095237, ["mov     edx, r12d; group", "mov     esi, 0FFFFFFFFh; owner", "mov     rdi, dst_name; file", "call    _lchown", "mov     [r14], ebx", "jmp     loc_58CA"], ["mov~edx,r12d", "mov~esi,0", "mov~rdi,dst_name", "call~FOO", "mov~<TAG>,ebx", "jmp~FOO"]], [1, 0, 4, 0, 1, 6, 0, 2, 4, 0, 0.017738095238095237, ["mov     edx, r12d; group", "mov     esi, 0FFFFFFFFh; owner", "mov     edi, ebx; fd", "call    _fchown", "mov     [r15], r14d", "jmp     loc_58CA"], ["mov~edx,r12d", "mov~esi,0", "mov~edi,ebx", "call~FOO", "mov~<TAG>,r14d", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 6, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     x", "pop     gid", "pop     dst_name", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~x", "pop~gid", "pop~dst_name", "pop~r14", "pop~r15", "retn"]]], "func_feature": [16, 18, 37, 0, 26, 39, 2, 150, 0.03474, 2, 4], "succs": [[17], [0, 18], [17], [25, 2], [16, 14], [4], [4], [], [19, 7], [20, 7], [5, 14], [10, 6], [1, 13], [1, 18], [8, 9], [11, 14], [12, 14], [], [17], [24, 22], [21, 23], [3, 23], [24, 3], [3], [3], []], "fname": "set_owner", "n_num": 26}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 2, 9, 1, 2, 0, 0, 0.0, ["xor     edi, edi; mask", "call    _umask", "mov     ebx, eax", "mov     edi, eax; mask", "mov     cs:mask_7898, eax", "call    _umask", "mov     eax, ebx", "pop     rbx", "retn"], ["xor~edi,edi", "call~FOO", "mov~ebx,eax", "mov~edi,eax", "mov~<TAG>,eax", "call~FOO", "mov~eax,ebx", "pop~rbx", "retn"]], [1, 0, 2, 0, 0, 4, 0, 1, 0, 0, 0.0, ["push    rbx", "mov     ebx, cs:mask_7898", "cmp     ebx, 0FFFFFFFFh", "jz      short loc_5A60"], ["push~rbx", "mov~ebx,<TAG>", "cmp~ebx,0", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0.0, ["mov     eax, ebx", "pop     rbx", "retn"], ["mov~eax,ebx", "pop~rbx", "retn"]]], "func_feature": [2, 1, 3, 0, 3, 2, 5, 16, 0.0, 1, 0], "succs": [[], [0, 2], []], "fname": "cached_umask", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 371, 0, 0, 2, 0, 1, 0, 0, 0.012291876187283494, ["movzx   eax, byte ptr [x_0+18h]", "jmp     loc_6BCB"], ["movzx~eax,[yte ptr [x_0+0]", "jmp~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 15, 24, 0.008805791742432697, ["cmp     [rbp+earlier_file], 0", "jz      loc_7000"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 15, 24, 0.02091439029923776, ["cmp     [rbp+earlier_file], 0", "jz      short loc_7000"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 371, 0, 0, 3, 0, 1, 18, 24, 0.0064354574914414, ["mov     eax, [x_0+4]", "cmp     eax, 4", "jz      loc_7000"], ["mov~eax,[x_0+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 371, 0, 0, 2, 1, 1, 20, 24, 0.0008596694399577402, ["test    r13b, r13b", "jnz     loc_7000"], ["test~r13b,r13b", "jnz~FOO"]], [2, 0, 519, 0, 0, 4, 1, 1, 22, 35, 0.008888753441217402, ["mov     eax, [r12+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_5C9F"], ["mov~eax,[r12+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 520, 0, 0, 2, 0, 1, 21, 36, 0.010707900324058552, ["cmp     byte ptr [x_0+2Ch], 0", "jz      short loc_755D"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 1, 371, 0, 0, 4, 1, 1, 20, 32, 0.06924338930708357, ["cmp     r15d, 4000h", "setnz   r15b", "test    r14b, r14b", "jnz     short loc_6022"], ["cmp~r15d,<STR>", "setnz~r15b", "test~r14b,r14b", "jnz~FOO"]], [2, 0, 371, 0, 1, 10, 2, 2, 19, 29, 0.05071287802598563, ["movzx   ecx, byte ptr [x_0+16h]; force", "mov     dst_lstat_sb, [rbp+dst_name]; dstname", "mov     r8d, 0FFFFFFFFh; symlinkat_errno", "mov     rdi, [rbp+src_name]; srcname", "mov     esi, 0FFFFFF9Ch; dstdir", "call    force_symlinkat", "xor     r8d, r8d", "test    eax, eax", "mov     r12d, eax", "jle     loc_5FFF"], ["movzx~ecx,[yte ptr [x_0+0]", "mov~dst_lstat_sb,[rbp+0]", "mov~r8d,0", "mov~rdi,[rbp+0]", "mov~esi,0", "call~FOO", "xor~r8d,r8d", "test~eax,eax", "mov~r12d,eax", "jle~FOO"]], [1, 0, 371, 0, 1, 7, 1, 2, 25, 29, 0.021604750149838984, ["mov     rdi, [rbp+restore_dst_mode_0]; ptr", "mov     byte ptr [rbp+dest_link_val], r8b", "call    free", "movzx   r8d, byte ptr [rbp+dest_link_val]", "mov     byte ptr [rbp+symlink_err], 0", "test    r8b, r8b", "jnz     loc_5FFF"], ["mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "movzx~r8d,[yte ptr [rbp+0]", "mov~[yte ptr [rbp+0],0", "test~r8b,r8b", "jnz~FOO"]], [1, 0, 371, 0, 1, 14, 3, 2, 23, 30, 0.0030120175946525257, ["mov     edx, [rbp+omitted_permissions]", "mov     rax, [rbp+var_258]", "lea     rcx, [rbp+dev]; dev", "mov     rsi, [rbp+dst_name]; path", "xor     edi, edi; ver", "mov     byte ptr [rbp+dest_link_val], r8b", "not     edx", "and     edx, [rbp+mode]; mode", "mov     [rbp+dev], rax", "call    ___xmknod", "test    eax, eax", "mov     byte ptr [rbp+symlink_err], 0", "movzx   r8d, byte ptr [rbp+dest_link_val]", "jz      loc_5FFF"], ["mov~edx,[rbp+0]", "mov~rax,[rbp+0]", "lea~rcx,[rbp+0]", "mov~rsi,[rbp+0]", "xor~edi,edi", "mov~[yte ptr [rbp+0],r8b", "not~edx", "and~edx,[rbp+0]", "mov~[rbp+0],rax", "call~FOO", "test~eax,eax", "mov~[yte ptr [rbp+0],0", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 371, 0, 1, 13, 3, 2, 22, 31, 0.003332012718536352, ["mov     r12d, [rbp+omitted_permissions]", "mov     rsi, [rbp+dst_name]; path", "lea     rcx, [rbp+var_2F8]; dev", "xor     edi, edi; ver", "mov     byte ptr [rbp+symlink_err], r8b", "mov     [rbp+var_2F8], 0", "not     r12d", "and     r12d, [rbp+mode]", "mov     edx, r12d; mode", "call    ___xmknod", "test    eax, eax", "movzx   r8d, byte ptr [rbp+symlink_err]", "jz      loc_5FFF"], ["mov~r12d,[rbp+0]", "mov~rsi,[rbp+0]", "lea~rcx,[rbp+0]", "xor~edi,edi", "mov~[yte ptr [rbp+0],r8b", "mov~[rbp+0],0", "not~r12d", "and~r12d,[rbp+0]", "mov~edx,r12d", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 371, 0, 1, 7, 2, 2, 23, 30, 0.0024202805798514814, ["mov     rdi, [rbp+dst_name]; path", "mov     esi, r12d", "and     esi, 0FFFFEFFFh; mode", "call    _mkfifo", "test    eax, eax", "movzx   r8d, byte ptr [rbp+symlink_err]", "jz      loc_5FFF"], ["mov~rdi,[rbp+0]", "mov~esi,r12d", "and~esi,0", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 371, 0, 0, 3, 0, 1, 30, 33, 0.0009066528510041751, ["movzx   r8d, byte ptr [rbp+symlink_err]", "mov     byte ptr [rbp+symlink_err], 1", "jmp     loc_5FFF"], ["movzx~r8d,[yte ptr [rbp+0]", "mov~[yte ptr [rbp+0],0", "jmp~FOO"]], [0, 0, 371, 0, 1, 8, 1, 2, 30, 30, 0.006841800505897053, ["mov     edx, [rbp+group]; group", "mov     esi, [rbp+owner]; owner", "mov     rdi, [rbp+dst_name]; file", "mov     byte ptr [rbp+dest_link_val], r8b", "call    _lchown", "test    eax, eax", "movzx   r8d, byte ptr [rbp+dest_link_val]", "jz      loc_5FFF"], ["mov~edx,[rbp+0]", "mov~esi,[rbp+0]", "mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 371, 0, 0, 2, 0, 1, 32, 33, 0.00014222005505947844, ["mov     byte ptr [rbp+symlink_err], al", "jmp     loc_5FFF"], ["mov~[yte ptr [rbp+0],al", "jmp~FOO"]], [0, 0, 371, 0, 0, 1, 0, 1, 33, 33, 0.00013714076737878278, ["jmp     loc_5FFF"], ["jmp~FOO"]], [0, 0, 371, 0, 0, 1, 1, 0, 21, 33, 0.0005485630695151311, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [0, 0, 559, 0, 0, 2, 2, 0, 15, 39, 0.006624660957547313, ["xor     ecx, ecx", "xor     r15d, r15d"], ["xor~ecx,ecx", "xor~r15d,r15d"]], [1, 0, 560, 0, 0, 2, 0, 1, 14, 35, 0.009161765154054795, ["cmp     dword ptr [x_0+4], 2", "jz      loc_7010"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [1, 0, 371, 0, 0, 5, 2, 1, 21, 31, 0.009053830290840012, ["movzx   eax, byte ptr [rbx+14h]", "xor     eax, 1", "and     al, r15b", "mov     r12d, eax", "jnz     loc_7D50"], ["movzx~eax,[yte ptr [rbx+0]", "xor~eax,0", "and~al,r15b", "mov~r12d,eax", "jnz~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 15, -1, 0.004173904651611658, ["test    r13b, r13b", "jz      short loc_62C0"], ["test~r13b,r13b", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 14, -1, 0.006713548491959487, ["mov     rax, [rbp+symlink_err]", "test    rax, rax", "jz      short loc_62AD"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 8, 0, 0, 1, 0, 0, 15, -1, 0.0, ["mov     byte ptr [rax], 1"], ["mov~<TAG>,0"]], [1, 0, 515, 0, 1, 10, 1, 2, 24, 36, 0.003643119088978961, ["mov     rsi, [rbp+src_name]; filename", "lea     rdx, [rbp+timespec]; stat_buf", "mov     edi, 1; ver", "mov     byte ptr [rbp+earlier_file], r9b", "mov     byte ptr [rbp+dst_backup], r8b", "call    ___xstat", "test    eax, eax", "movzx   r8d, byte ptr [rbp+dst_backup]", "movzx   r9d, byte ptr [rbp+earlier_file]", "jz      loc_75DC"], ["mov~rsi,[rbp+0]", "lea~rdx,[rbp+0]", "mov~edi,0", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jz~FOO"]], [2, 0, 517, 0, 0, 4, 1, 1, 23, 37, 0.0036443889108991353, ["mov     eax, [dst_lstat_sb+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_8FEC"], ["mov~eax,[dst_lstat_sb+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [5, 0, 405, 0, 3, 18, 2, 4, 23, 26, 0.0016122505646474804, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "mov     byte ptr [rbp+earlier_file], r9b", "mov     r15d, 11h", "call    quotearg_style", "lea     rsi, aRemovedS; \"removed %s\\n\"", "mov     r12, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, r12", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     [rbp+dst_backup], 0", "movzx   r9d, byte ptr [rbp+earlier_file]", "jmp     loc_5E0E"], ["mov~rsi,[rbp+0]", "mov~edi,0", "mov~[yte ptr [rbp+0],r9b", "mov~r15d,0", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rdx,r12", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~[rbp+0],0", "movzx~r9d,[yte ptr [rbp+0]", "jmp~FOO"]], [0, 0, 410, 0, 0, 3, 1, 1, 22, 27, 0.005445419667679138, ["movzx   r14d, byte ptr [x_0+2Eh]", "test    r14b, r14b", "jnz     loc_87CC"], ["movzx~r14d,[yte ptr [x_0+0]", "test~r14b,r14b", "jnz~FOO"]], [3, 0, 5, 0, 2, 13, 2, 3, 21, -1, 0.0001028555755340871, ["mov     rdx, [rbp+dst_name]; arg", "mov     esi, 3; s", "xor     edi, edi; n", "call    quotearg_n_style_colon", "mov     rdx, [rbp+src_name]; arg", "mov     esi, 3; s", "xor     edi, edi; n", "mov     r12, rax", "call    quotearg_n_style_colon", "mov     edx, 5", "mov     x_0, rax", "lea     rsi, aCannotMoveDire; \"cannot move directory onto non-director\"...", "jmp     loc_70BB"], ["mov~rdx,[rbp+0]", "mov~esi,0", "xor~edi,edi", "call~FOO", "mov~rdx,[rbp+0]", "mov~esi,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~edx,0", "mov~x_0,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 446, 0, 0, 2, 1, 1, 20, 30, 0.0006869736588140878, ["test    r15d, r15d", "jnz     loc_7A1F"], ["test~r15d,r15d", "jnz~FOO"]], [0, 0, 505, 0, 0, 1, 0, 1, 25, 35, 0.0038247036235638313, ["jmp     loc_5C9F"], ["jmp~FOO"]], [1, 0, 52, 0, 0, 3, 1, 1, 21, -1, 0.059224494356911385, ["test    r13b, r13b", "mov     r12d, 1", "jz      short loc_6082"], ["test~r13b,r13b", "mov~r12d,0", "jz~FOO"]], [1, 0, 371, 0, 0, 4, 1, 1, 22, 30, 0.008589075468056359, ["mov     r15d, eax", "mov     rax, 0FF000000FF00h", "test    [rbx+20h], rax", "jz      loc_6022"], ["mov~r15d,eax", "mov~rax,0", "test~[rbx+0],rax", "jz~FOO"]], [0, 0, 371, 0, 1, 10, 2, 2, 23, 29, 0.008124320645272706, ["movzx   esi, byte ptr [rbx+25h]; process_local", "mov     rdi, [rbp+dst_name]; dst_name", "xor     edx, edx; recurse", "mov     rcx, rbx; x", "mov     byte ptr [rbp+dest_link_val], r8b", "call    set_file_security_ctx", "test    al, al", "mov     r15d, eax", "movzx   r8d, byte ptr [rbp+dest_link_val]", "jnz     loc_6022"], ["movzx~esi,[yte ptr [rbx+0]", "mov~rdi,[rbp+0]", "xor~edx,edx", "mov~rcx,rbx", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~al,al", "mov~r15d,eax", "movzx~r8d,[yte ptr [rbp+0]", "jnz~FOO"]], [0, 0, 53, 0, 0, 2, 0, 1, 25, -1, 0.00012698219201739147, ["mov     r15d, r12d", "jmp     loc_6022"], ["mov~r15d,r12d", "jmp~FOO"]], [2, 0, 558, 0, 0, 5, 1, 1, 16, 38, 0.008262731234571663, ["mov     eax, [rbp+var_268]", "lea     dst_lstat_sb, [rbp+src_mode]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_7CD3"], ["mov~eax,[rbp+0]", "lea~dst_lstat_sb,[rbp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [3, 0, 567, 0, 0, 4, 0, 1, 16, 37, 0.0013485508792246974, ["cmp     dword ptr [x_0+4], 2", "mov     ecx, 1", "mov     r15d, 1", "jz      loc_7015"], ["cmp~[word ptr [x_0+0],0", "mov~ecx,0", "mov~r15d,0", "jz~FOO"]], [1, 0, 51, 0, 0, 1, 0, 0, 22, -1, 0.004967543351720355, ["mov     byte ptr [rbp+restore_dst_mode_0], 0"], ["mov~[yte ptr [rbp+0],0"]], [1, 0, 371, 0, 0, 1, 0, 0, 30, 36, 0.0309066189890863, ["mov     [rbp+restore_dst_mode_0], 0"], ["mov~[rbp+0],0"]], [1, 0, 371, 0, 0, 2, 0, 1, 29, 35, 0.11322240169038693, ["cmp     byte ptr [rbp+format], 0", "jz      loc_902F"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 0, 371, 0, 1, 7, 2, 2, 31, 33, 0.0040041717882817445, ["mov     edx, dword ptr [rbp+symlink_err]", "mov     edi, dword ptr [rbp+dest_link_val]; fd", "xor     eax, eax", "mov     esi, 40049409h; request", "call    _ioctl", "test    eax, eax", "jz      loc_902F"], ["mov~edx,[word ptr [rbp+0]", "mov~edi,[word ptr [rbp+0]", "xor~eax,eax", "mov~esi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 552, 0, 0, 3, 1, 1, 17, 37, 0.014670506608153272, ["mov     esi, [x_0]", "test    esi, esi", "jz      loc_7518"], ["mov~esi,<TAG>", "test~esi,esi", "jz~FOO"]], [2, 0, 557, 0, 0, 5, 1, 1, 17, 38, 0.0008177653165920011, ["mov     eax, [rbp+dst_sb.st_mode]", "lea     rdx, [rbp+src_mode]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_7032"], ["mov~eax,[rbp+0]", "lea~rdx,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [2, 0, 556, 0, 0, 5, 1, 1, 20, 38, 0.0034767724174361784, ["mov     eax, dword ptr [rbp+timespec.tv_nsec+10h]", "mov     rdx, [rbp+s]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_7032"], ["mov~eax,[word ptr [rbp+0]", "mov~rdx,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [2, 0, 555, 0, 0, 4, 1, 1, 21, 38, 0.0002882495758794786, ["mov     eax, [rbp+dot_sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_7032"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 554, 0, 0, 2, 0, 1, 22, 37, 0.0007860197685876532, ["cmp     byte ptr [x_0+15h], 0", "jz      loc_7032"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 50, 0, 0, 2, 0, 1, 23, -1, 0.0045738985564664405, ["cmp     qword ptr [rbx+40h], 0", "jz      short loc_606D"], ["cmp~[word ptr [rbx+0],0", "jz~FOO"]], [1, 0, 51, 0, 0, 5, 2, 1, 26, -1, 0.0006933227684149574, ["mov     [rbp+restore_dst_mode], r12b", "xor     r15d, r15d", "xor     r8d, r8d", "mov     byte ptr [rbp+symlink_err], 0", "jmp     loc_6034"], ["mov~[rbp+0],r12b", "xor~r15d,r15d", "xor~r8d,r8d", "mov~[yte ptr [rbp+0],0", "jmp~FOO"]], [0, 0, 28, 0, 0, 1, 0, 1, 30, -1, 9.142717825252186e-05, ["jmp     loc_61C7"], ["jmp~FOO"]], [0, 0, 31, 0, 0, 3, 0, 1, 29, -1, 0.0014272798382754801, ["mov     eax, [rbp+dst_sb.st_gid]", "cmp     [rbp+group], eax", "jnz     loc_6182"], ["mov~eax,[rbp+0]", "cmp~[rbp+0],eax", "jnz~FOO"]], [0, 0, 515, 0, 0, 2, 1, 1, 18, 37, 0.00126372677495708, ["test    cl, cl", "jnz     loc_80D2"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 25, -1, 0.010463332622233057, ["cmp     dword ptr [x_0+4], 3", "jnz     short loc_784C"], ["cmp~[word ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 64, 0, 1, 16, 1, 2, 24, -1, 0.013190910106766625, ["movdqu  xmm0, xmmword ptr [x_0]", "mov     esi, 2; option", "mov     rdi, [rbp+src_name]; dir", "movaps  xmmword ptr [rbp+dev], xmm0", "movdqu  xmm0, xmmword ptr [x_0+10h]", "movaps  [rbp+var_2E0], xmm0", "movdqu  xmm0, xmmword ptr [x_0+20h]", "movaps  xmmword ptr [rbp+ptr], xmm0", "movdqu  xmm0, xmmword ptr [x_0+30h]", "movaps  [rbp+var_2C0], xmm0", "movdqu  xmm0, xmmword ptr [x_0+40h]", "movaps  [rbp+var_2B0], xmm0", "call    savedir", "test    rax, rax", "mov     [rbp+s], rax", "jz      loc_8698"], ["movdqu~xmm0,<TAG>", "mov~esi,0", "mov~rdi,[rbp+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqu~xmm0,[mmword ptr [x_0+0]", "movaps~[rbp+0],xmm0", "movdqu~xmm0,[mmword ptr [x_0+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqu~xmm0,[mmword ptr [x_0+0]", "movaps~[rbp+0],xmm0", "movdqu~xmm0,[mmword ptr [x_0+0]", "movaps~[rbp+0],xmm0", "call~FOO", "test~rax,rax", "mov~[rbp+0],rax", "jz~FOO"]], [1, 0, 61, 0, 0, 1, 0, 0, 26, -1, 0.0, ["mov     dword ptr [rbp+dev+4], 2"], ["mov~[word ptr [rbp+0],0"]], [0, 0, 419, 0, 4, 19, 0, 5, 21, 28, 0.00393136866485844, ["mov     rdi, srcbase; s", "mov     byte ptr [rbp+omitted_permissions], r9b", "call    _strlen", "mov     rdi, [rbp+dst_name]; name", "mov     [rbp+dst_backup], rax", "call    last_component", "mov     rdi, rax; s", "mov     [rbp+earlier_file], rax", "call    _strlen", "mov     r15, cs:simple_backup_suffix", "mov     r12, rax", "mov     rdi, r15; s", "call    _strlen", "mov     r8, rax", "lea     rax, [r12+rax]", "cmp     [rbp+dst_backup], rax", "mov     rsi, [rbp+earlier_file]; s2", "movzx   r9d, byte ptr [rbp+omitted_permissions]", "jz      loc_829E"], ["mov~rdi,srcbase", "mov~[yte ptr [rbp+0],r9b", "call~FOO", "mov~rdi,[rbp+0]", "mov~[rbp+0],rax", "call~FOO", "mov~rdi,rax", "mov~[rbp+0],rax", "call~FOO", "mov~r15,<TAG>", "mov~r12,rax", "mov~rdi,r15", "call~FOO", "mov~r8,rax", "lea~rax,<TAG>", "cmp~[rbp+0],rax", "mov~rsi,[rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 420, 0, 0, 2, 0, 1, 20, 28, 0.009632869086439316, ["cmp     r15d, 3", "jz      short loc_6849"], ["cmp~r15d,0", "jz~FOO"]], [1, 0, 453, 0, 0, 2, 0, 1, 16, 31, 0.009076687085403143, ["cmp     byte ptr [x_0+18h], 0", "jz      short loc_6D6F"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 1, 461, 0, 0, 5, 1, 1, 20, 31, 0.00013460112353843497, ["mov     eax, [rbp+dst_sb.st_mode]", "mov     edx, eax", "and     edx, 0F000h", "cmp     edx, 4000h", "jz      loc_6D5D"], ["mov~eax,[rbp+0]", "mov~edx,eax", "and~edx,0", "cmp~edx,<STR>", "jz~FOO"]], [0, 1, 461, 0, 0, 2, 0, 1, 15, 31, 0.027946381910512012, ["cmp     r12d, 4000h", "jz      loc_7270"], ["cmp~r12d,<STR>", "jz~FOO"]], [1, 0, 510, 0, 0, 2, 0, 1, 19, 36, 0.0017701317567224372, ["cmp     byte ptr [x_0+18h], 0", "jnz     loc_6ECE"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 17, 0, 1, 4, 1, 2, 31, -1, 0.01001635530633184, ["call    cached_umask", "not     eax", "and     [rbp+omitted_permissions], eax", "jz      loc_61FD"], ["call~FOO", "not~eax", "and~[rbp+0],eax", "jz~FOO"]], [0, 0, 18, 0, 0, 3, 1, 1, 30, -1, 0.015674681782626803, ["mov     eax, [rbp+omitted_permissions]", "test    eax, eax", "jnz     loc_8841"], ["mov~eax,[rbp+0]", "test~eax,eax", "jnz~FOO"]], [1, 0, 509, 0, 0, 2, 0, 1, 20, 36, 0.00033929641707047, ["cmp     dword ptr [x_0+4], 2", "jz      loc_6ECE"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [1, 0, 60, 0, 0, 3, 0, 1, 26, -1, 0.008152256727516533, ["mov     rax, [rbp+s]", "cmp     byte ptr [rax], 0", "jz      loc_8D95"], ["mov~rax,[rbp+0]", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 32, -1, 0.008623360659901054, ["cmp     [rbp+restore_dst_mode], 1", "jz      loc_620A"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 371, 0, 0, 3, 0, 1, 40, 35, 0.010851051581859493, ["cmp     [rbp+var_390], 1", "mov     rsi, [rbp+length]; length", "jz      short loc_972E"], ["cmp~[rbp+0],0", "mov~rsi,[rbp+0]", "jz~FOO"]], [0, 0, 371, 0, 0, 4, 0, 1, 39, 36, 0.014029839122028194, ["mov     rcx, [rbp+n_bytes]", "cmp     [rbp+length], rcx", "setnle  r12b", "jg      short loc_96AC"], ["mov~rcx,[rbp+0]", "cmp~[rbp+0],rcx", "setnle~r12b", "jg~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 40, 36, 0.0018056867704873067, ["cmp     byte ptr [rbp+format], 0", "jz      loc_903A"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [3, 0, 371, 0, 2, 21, 3, 3, 26, 33, 0.019876522516482288, ["mov     eax, dword ptr [rbp+x]", "mov     rdi, [rbp+dst_name]; file", "mov     esi, 0C1h; flags", "not     eax", "and     eax, [rbp+var_3A4]", "mov     edx, eax", "mov     dword ptr [rbp+restore_dst_mode_0], eax", "xor     eax, eax", "call    open_safer", "mov     r14d, eax", "mov     dword ptr [rbp+dest_link_val], eax", "call    ___errno_location", "mov     r8d, [rax]", "mov     r12, rax", "mov     eax, r14d", "shr     eax, 1Fh", "cmp     r8d, 11h", "setz    dl", "and     dl, al", "mov     r14d, edx", "jz      loc_92C2"], ["mov~eax,[word ptr [rbp+0]", "mov~rdi,[rbp+0]", "mov~esi,0", "not~eax", "and~eax,[rbp+0]", "mov~edx,eax", "mov~[word ptr [rbp+0],eax", "xor~eax,eax", "call~FOO", "mov~r14d,eax", "mov~[word ptr [rbp+0],eax", "call~FOO", "mov~r8d,<TAG>", "mov~r12,rax", "mov~eax,r14d", "shr~eax,0", "cmp~r8d,0", "setz~dl", "and~dl,al", "mov~r14d,edx", "jz~FOO"]], [0, 0, 371, 0, 0, 5, 1, 1, 30, 31, 0.0036418492670587874, ["movzx   r14d, byte ptr [x_0+21h]", "mov     eax, [rbp+omitted_permissions]", "mov     dword ptr [rbp+x], eax", "test    r14b, r14b", "jz      short loc_8E6C"], ["movzx~r14d,[yte ptr [x_0+0]", "mov~eax,[rbp+0]", "mov~[word ptr [rbp+0],eax", "test~r14b,r14b", "jz~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 30, 34, 0.0007796706589867836, ["mov     dword ptr [rbp+x], 0", "jmp     loc_8E6C"], ["mov~[word ptr [rbp+0],0", "jmp~FOO"]], [0, 0, 371, 0, 0, 2, 0, 0, 25, 34, 0.017118469305864543, ["mov     eax, [rbp+omitted_permissions]", "mov     dword ptr [rbp+x], eax"], ["mov~eax,[rbp+0]", "mov~[word ptr [rbp+0],eax"]], [0, 0, 14, 0, 0, 2, 1, 1, 33, -1, 0.007212588506587836, ["test    r14b, r14b", "jnz     loc_91D7"], ["test~r14b,r14b", "jnz~FOO"]], [2, 0, 508, 0, 0, 4, 1, 1, 21, 36, 0.0001919970743302959, ["mov     eax, [dst_lstat_sb+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_6ECE"], ["mov~eax,[dst_lstat_sb+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 49, 0, 1, 9, 1, 2, 24, -1, 0.0013485508792246974, ["lea     r12, [rbp+timespec]", "mov     rsi, [rbp+dst_name]; filename", "mov     edi, 1; ver", "mov     byte ptr [rbp+dest_link_val], r8b", "mov     dst_lstat_sb, r12; stat_buf", "call    ___lxstat", "test    eax, eax", "movzx   r8d, byte ptr [rbp+dest_link_val]", "jz      loc_80B2"], ["lea~r12,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "mov~[yte ptr [rbp+0],r8b", "mov~dst_lstat_sb,r12", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 17, -1, 2.5396438403478294e-06, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 6, 0, 0, 2, 0, 1, 16, -1, 0.002590436717154786, ["cmp     byte ptr [x_0+31h], 0", "jz      loc_6D28"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [5, 0, 371, 0, 5, 26, 5, 6, 33, 31, 0.0027910685805422647, ["mov     rdx, [rbp+src_name]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     rdx, [rbp+dst_name]; arg", "mov     esi, 4; s", "xor     edi, edi; n", "mov     r12, rax", "call    quotearg_n_style", "lea     rsi, aFailedToCloneS; \"failed to clone %s from %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     [rbp+format], rax", "call    _dcgettext", "mov     [rbp+restore_dst_mode_0], rax", "call    ___errno_location", "mov     rcx, [rbp+format]", "mov     esi, [rax]; errnum", "mov     r8, r12", "mov     rdx, [rbp+restore_dst_mode_0]; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "xor     r8d, r8d", "mov     [rbp+restore_dst_mode_0], 0", "jmp     loc_8D15"], ["mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rdx,[rbp+0]", "mov~esi,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~[rbp+0],rax", "call~FOO", "mov~[rbp+0],rax", "call~FOO", "mov~rcx,[rbp+0]", "mov~esi,<TAG>", "mov~r8,r12", "mov~rdx,[rbp+0]", "xor~edi,edi", "xor~eax,eax", "call~FOO", "xor~r8d,r8d", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 32, 32, 0.0035224860065624394, ["cmp     dword ptr [x_0+38h], 2", "jnz     loc_896C"], ["cmp~[word ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 409, 0, 1, 9, 1, 2, 21, 27, 0.01212172004998019, ["mov     edx, [x_0]; backup_type", "mov     rsi, [rbp+dst_name]; file", "mov     edi, 0FFFFFF9Ch; dir_fd", "mov     byte ptr [rbp+dst_backup], r9b", "call    backup_file_rename", "test    rax, rax", "mov     r12, rax", "movzx   r9d, byte ptr [rbp+dst_backup]", "jz      loc_8191"], ["mov~edx,<TAG>", "mov~rsi,[rbp+0]", "mov~edi,0", "mov~[yte ptr [rbp+0],r9b", "call~FOO", "test~rax,rax", "mov~r12,rax", "movzx~r9d,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 418, 0, 1, 8, 1, 2, 22, 28, 0.003514867075041396, ["mov     rdx, r12; n", "mov     rdi, srcbase; s1", "mov     byte ptr [rbp+dst_backup], r9b", "mov     [rbp+earlier_file], r8", "call    _memcmp", "test    eax, eax", "movzx   r9d, byte ptr [rbp+dst_backup]", "jnz     loc_6849"], ["mov~rdx,r12", "mov~rdi,srcbase", "mov~[yte ptr [rbp+0],r9b", "mov~[rbp+0],r8", "call~FOO", "test~eax,eax", "movzx~r9d,[yte ptr [rbp+0]", "jnz~FOO"]], [0, 0, 417, 0, 1, 7, 1, 2, 23, 28, 0.003093286197543656, ["lea     rdi, [srcbase+r12]; s1", "mov     rsi, r15; s2", "call    _strcmp", "test    eax, eax", "movzx   r9d, byte ptr [rbp+dst_backup]", "mov     r8, [rbp+earlier_file]", "jnz     loc_6849"], ["lea~rdi,<TAG>", "mov~rsi,r15", "call~FOO", "test~eax,eax", "movzx~r9d,[yte ptr [rbp+0]", "mov~r8,[rbp+0]", "jnz~FOO"]], [2, 0, 416, 0, 5, 27, 2, 6, 24, 28, 0.002666626032365221, ["mov     rdi, [rbp+dst_name]", "or      rcx, 0FFFFFFFFFFFFFFFFh", "repne scasb", "mov     rax, rcx", "not     rax", "lea     srcbase, [rax-1]", "lea     rdi, [r14+r8+1]; n", "call    xmalloc", "mov     r15, cs:simple_backup_suffix", "mov     rsi, [rbp+dst_name]; src", "mov     rdx, r14; n", "mov     rdi, rax; dest", "mov     r12, rax", "call    _mempcpy", "mov     rsi, r15; src", "mov     rdi, rax; dest", "call    _strcpy", "lea     rdx, [rbp+timespec]; stat_buf", "mov     rsi, r12; filename", "mov     edi, 1; ver", "call    ___xstat", "mov     rdi, r12; ptr", "mov     r15d, eax", "call    free", "test    r15d, r15d", "movzx   r9d, byte ptr [rbp+dst_backup]", "jnz     loc_6849"], ["mov~rdi,[rbp+0]", "or~rcx,0", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "lea~srcbase,[rax-1]+0]", "lea~rdi,[r14+0]", "call~FOO", "mov~r15,<TAG>", "mov~rsi,[rbp+0]", "mov~rdx,r14", "mov~rdi,rax", "mov~r12,rax", "call~FOO", "mov~rsi,r15", "mov~rdi,rax", "call~FOO", "lea~rdx,[rbp+0]", "mov~rsi,r12", "mov~edi,0", "call~FOO", "mov~rdi,r12", "mov~r15d,eax", "call~FOO", "test~r15d,r15d", "movzx~r9d,[yte ptr [rbp+0]", "jnz~FOO"]], [0, 0, 415, 0, 0, 3, 0, 1, 25, 28, 0.00223488657950609, ["mov     rax, [rbp+timespec.tv_nsec]", "cmp     [rbp+ino], rax", "jnz     loc_6849"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [0, 0, 414, 0, 0, 3, 0, 1, 26, 28, 0.0017980678389662632, ["mov     rax, [rbp+timespec.tv_sec]", "cmp     [rbp+src_mode], rax", "jnz     loc_6849"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [2, 0, 371, 0, 0, 4, 1, 1, 22, 11, 0.032929022033949956, ["mov     eax, r15d", "and     ah, 0BFh", "cmp     eax, 2000h", "jz      loc_802C"], ["mov~eax,r15d", "and~ah,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 23, 10, 0.028822417944107517, ["cmp     r15d, 0C000h", "jz      loc_802C"], ["cmp~r15d,0", "jz~FOO"]], [2, 0, 527, 0, 0, 4, 1, 1, 23, 37, 0.0006577677546500878, ["mov     eax, [rbp+var_268]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_7542"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [0, 0, 528, 0, 0, 2, 1, 1, 22, 37, 0.0026557055638517253, ["test    sil, sil", "jz      loc_7542"], ["test~sil,sil", "jz~FOO"]], [2, 0, 507, 0, 0, 4, 1, 1, 22, 36, 3.961844390942614e-05, ["mov     eax, [r12+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_6ECE"], ["mov~eax,[r12+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 47, 0, 0, 3, 0, 0, 24, -1, 0.000893954631802436, ["movzx   eax, byte ptr [rbp+restore_dst_mode_0]", "movzx   r12d, [rbp+restore_dst_mode]", "mov     [rbp+restore_dst_mode], al"], ["movzx~eax,[yte ptr [rbp+0]", "movzx~r12d,[rbp+0]", "mov~[rbp+0],al"]], [0, 0, 48, 0, 1, 6, 0, 2, 25, -1, 0.0, ["mov     rdi, [rbx+40h]; ht", "mov     rsi, [rbp+dst_name]; file", "mov     rdx, r12; stats", "call    record_file", "movzx   r8d, byte ptr [rbp+dest_link_val]", "jmp     loc_606D"], ["mov~rdi,[rbx+0]", "mov~rsi,[rbp+0]", "mov~rdx,r12", "call~FOO", "movzx~r8d,[yte ptr [rbp+0]", "jmp~FOO"]], [0, 0, 9, 0, 0, 5, 1, 1, 34, -1, 0.0014679141397210453, ["mov     eax, [rbp+dst_sb.st_mode]", "mov     [rbp+dst_mode], eax", "not     eax", "test    [rbp+omitted_permissions], eax", "jnz     loc_620A"], ["mov~eax,[rbp+0]", "mov~[rbp+0],eax", "not~eax", "test~[rbp+0],eax", "jnz~FOO"]], [1, 0, 13, 0, 1, 6, 1, 2, 34, -1, 0.0029536057863245257, ["mov     rsi, [rbp+dst_name]; filename", "lea     rdx, [rbp+dst_sb]; stat_buf", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jz      loc_886A"], ["mov~rsi,[rbp+0]", "lea~rdx,[rbp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 35, -1, 1.1428397281565233e-05, ["jmp     loc_62C6"], ["jmp~FOO"]], [1, 0, 46, 0, 0, 2, 0, 1, 22, -1, 0.0527636404270665, ["cmp     byte ptr [rbx+17h], 0", "jz      short loc_6091"], ["cmp~[yte ptr [rbx+0],0", "jz~FOO"]], [0, 0, 45, 0, 0, 2, 1, 1, 23, -1, 0.0005168175215107833, ["test    r15b, r15b", "jnz     loc_62C6"], ["test~r15b,r15b", "jnz~FOO"]], [3, 0, 404, 0, 0, 5, 0, 1, 24, 26, 0.0006793547272930443, ["cmp     qword ptr [x_0+40h], 0", "mov     r14d, r13d", "mov     [rbp+dst_backup], 0", "mov     r15d, 11h", "jnz     loc_5E22"], ["cmp~[word ptr [x_0+0],0", "mov~r14d,r13d", "mov~[rbp+0],0", "mov~r15d,0", "jnz~FOO"]], [0, 0, 406, 0, 0, 2, 1, 1, 23, 26, 0.00397030987041044, ["test    r13b, r13b", "jnz     loc_87A8"], ["test~r13b,r13b", "jnz~FOO"]], [1, 0, 371, 0, 1, 9, 0, 2, 34, 32, 0.006313131313131312, ["mov     r9, [rbp+s]; dst_sb", "mov     edx, dword ptr [rbp+dest_link_val]; dest_desc", "lea     rcx, [rbp+src_mode]; src_sb", "mov     rsi, [rbp+dst_name]; dst_name", "movzx   r8d, r14b; new_dst", "mov     rdi, rbx; x", "call    set_owner", "cmp     eax, 0FFFFFFFFh", "jz      loc_8D12"], ["mov~r9,[rbp+0]", "mov~edx,[word ptr [rbp+0]", "lea~rcx,[rbp+0]", "mov~rsi,[rbp+0]", "movzx~r8d,r14b", "mov~rdi,rbx", "call~FOO", "cmp~eax,0", "jz~FOO"]], [0, 0, 371, 0, 0, 3, 0, 1, 33, 33, 0.007069945177554965, ["mov     eax, dword ptr [rbp+timespec.tv_nsec+14h]", "cmp     [rbp+owner], eax", "jnz     short loc_9066"], ["mov~eax,[word ptr [rbp+0]", "cmp~[rbp+0],eax", "jnz~FOO"]], [0, 0, 371, 0, 0, 3, 0, 1, 34, 33, 4.31739452859131e-05, ["mov     eax, dword ptr [rbp+var_B0]", "cmp     [rbp+group], eax", "jz      short loc_90A4"], ["mov~eax,[word ptr [rbp+0]", "cmp~[rbp+0],eax", "jz~FOO"]], [0, 0, 44, 0, 0, 2, 1, 1, 23, -1, 0.049750353010493804, ["test    r8b, r8b", "jnz     loc_62C6"], ["test~r8b,r8b", "jnz~FOO"]], [0, 0, 371, 0, 0, 2, 0, 0, 45, 40, 0.0, ["movzx   eax, [rbp+var_2F9]", "mov     byte ptr [rbp+format], al"], ["movzx~eax,[rbp+0]", "mov~[yte ptr [rbp+0],al"]], [0, 0, 371, 0, 0, 5, 1, 1, 44, 40, 0.006658946149392009, ["mov     rax, [rbp+var_2F8]", "lea     rcx, [r12+rax]", "test    rax, rax", "mov     [rbp+n_bytes], rcx", "jz      short loc_8C1F"], ["mov~rax,[rbp+0]", "lea~rcx,<TAG>", "test~rax,rax", "mov~[rbp+0],rcx", "jz~FOO"]], [0, 0, 371, 0, 0, 2, 1, 1, 35, 34, 0.0013155355093001757, ["test    eax, eax", "jnz     short loc_90A4"], ["test~eax,eax", "jnz~FOO"]], [1, 0, 371, 0, 0, 1, 1, 0, 36, 34, 0.0, ["and     [rbp+var_340], 0FFFFF1FFh"], ["and~[rbp+0],0"]], [2, 0, 371, 0, 1, 7, 0, 2, 24, 29, 0.0022425055110271335, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     edx, 5", "mov     r13, rax", "lea     rsi, aCannotCreateSp; \"cannot create special file %s\"", "jmp     loc_6F5F"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~edx,0", "mov~r13,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 43, 0, 0, 2, 0, 1, 24, -1, 0.0522379341521145, ["cmp     byte ptr [rbx+1Fh], 0", "jz      loc_6158"], ["cmp~[yte ptr [rbx+0],0", "jz~FOO"]], [1, 0, 44, 0, 0, 4, 0, 1, 26, -1, 0.004154857322809049, ["movzx   eax, byte ptr [rbp+restore_dst_mode_0]", "mov     byte ptr [rbp+symlink_err], 0", "mov     [rbp+restore_dst_mode], al", "jmp     loc_609A"], ["movzx~eax,[yte ptr [rbp+0]", "mov~[yte ptr [rbp+0],0", "mov~[rbp+0],al", "jmp~FOO"]], [0, 0, 39, 0, 1, 3, 1, 2, 26, -1, 0.0028532898546307847, ["call    utimens", "test    eax, eax", "jz      loc_6165"], ["call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 42, 0, 0, 12, 0, 1, 25, -1, 0.008274159631853227, ["mov     rax, [rbp+var_238]", "cmp     byte ptr [rbp+symlink_err], 0", "lea     rsi, [rbp+timespec]; timespec", "mov     rdi, [rbp+dst_name]; file", "mov     [rbp+timespec.tv_sec], rax", "mov     rax, [rbp+var_230]", "mov     [rbp+timespec.tv_nsec], rax", "mov     rax, [rbp+var_228]", "mov     [rbp+timespec.tv_sec+10h], rax", "mov     rax, [rbp+var_220]", "mov     [rbp+timespec.tv_nsec+10h], rax", "jz      loc_80A0"], ["mov~rax,[rbp+0]", "cmp~[yte ptr [rbp+0],0", "lea~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "jz~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 33, 33, 0.02336049059146612, ["cmp     byte ptr [rbx+27h], 0", "jz      short loc_90B7"], ["cmp~[yte ptr [rbx+0],0", "jz~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 32, 34, 0.03003425132992682, ["cmp     byte ptr [rbx+1Dh], 0", "jz      short loc_90A4"], ["cmp~[yte ptr [rbx+0],0", "jz~FOO"]], [0, 0, 38, 0, 0, 1, 0, 1, 27, -1, 0.001420930728674611, ["jmp     loc_610A"], ["jmp~FOO"]], [3, 1, 6, 0, 1, 11, 2, 2, 30, -1, 7.618931521043489e-06, ["mov     eax, [rbp+mode]", "mov     edx, 1B6h", "mov     ebx, 1FFh", "and     eax, 7000h", "cmp     eax, 4000h", "cmovnz  ebx, edx", "call    cached_umask", "not     eax", "mov     edx, eax", "and     edx, ebx", "jmp     loc_85D8"], ["mov~eax,[rbp+0]", "mov~edx,0", "mov~ebx,0", "and~eax,0", "cmp~eax,<STR>", "cmovnz~ebx,edx", "call~FOO", "not~eax", "mov~edx,eax", "and~edx,ebx", "jmp~FOO"]], [0, 0, 22, 0, 0, 2, 1, 1, 29, -1, 0.018455591787807677, ["test    [rbx+20h], r14b", "jnz     loc_8889"], ["test~[rbx+0],r14b", "jnz~FOO"]], [4, 0, 5, 0, 2, 12, 1, 2, 19, -1, 0.0006513944579650244, ["mov     dst_lstat_sb, [rbp+dst_name]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     dst_lstat_sb, [rbp+src_name]; arg", "mov     esi, 4; s", "xor     edi, edi; n", "mov     r12, rax", "call    quotearg_n_style", "lea     rsi, aSAndSAreTheSam; \"%s and %s are the same file\"", "mov     x_0, rax", "mov     edx, 5; category"], ["mov~dst_lstat_sb,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~dst_lstat_sb,[rbp+0]", "mov~esi,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "mov~x_0,rax", "mov~edx,0"]], [0, 0, 508, 0, 0, 2, 1, 1, 20, 37, 0.0062607299952254685, ["test    r12b, r12b", "jz      loc_7080"], ["test~r12b,r12b", "jz~FOO"]], [1, 0, 518, 0, 0, 2, 0, 1, 22, 38, 0.0027638943914505432, ["cmp     dword ptr [x_0+4], 2", "jnz     loc_7080"], ["cmp~[word ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 507, 0, 0, 2, 0, 1, 29, 36, 0.0003108282189743805, ["cmp     byte ptr [x_0+17h], 0", "jz      loc_7080"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 513, 0, 1, 7, 1, 2, 18, 37, 0.001340931947703654, ["mov     rsi, [rbp+dst_name]; dest", "mov     rdi, [rbp+src_name]; source", "mov     byte ptr [rbp+earlier_file], r9b", "mov     byte ptr [rbp+dst_backup], r8b", "call    same_name", "test    al, al", "jnz     loc_7080"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 371, 0, 1, 4, 1, 2, 41, 34, 0.007899985439375316, ["mov     edi, dword ptr [rbp+dest_link_val]; fd", "call    _ftruncate", "test    eax, eax", "jnz     loc_95FA"], ["mov~edi,[word ptr [rbp+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 371, 2, 1, 10, 1, 1, 36, 39, 0.00023703342509913075, ["mov     rax, [rbp+b]", "lea     rdi, [r12+rax]; n", "call    xmalloc", "lea     rcx, [rax+r12-1]", "mov     [rbp+restore_dst_mode_0], rax", "xor     edx, edx", "mov     rax, rcx", "div     r12", "sub     rcx, rdx", "mov     [rbp+buf], rcx"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "call~FOO", "lea~rcx,[rax+0]", "mov~[rbp+0],rax", "xor~edx,edx", "mov~rax,rcx", "div~,r12", "sub~rcx,rdx", "mov~[rbp+0],rcx"]], [1, 0, 371, 0, 0, 2, 1, 1, 35, 38, 0.0013790266053088714, ["test    byte ptr [rbp+parent], 1", "jz      loc_8A14"], ["test~[yte ptr [rbp+0],0", "jz~FOO"]], [2, 0, 371, 0, 0, 3, 0, 1, 27, 32, 0.008994783571551925, ["cmp     byte ptr [x_0+18h], 0", "mov     r8d, 11h", "jz      loc_9255"], ["cmp~[yte ptr [x_0+0],0", "mov~r8d,0", "jz~FOO"]], [2, 0, 58, 0, 0, 16, 0, 1, 27, -1, 0.003946606527900527, ["lea     rax, [rbp+dev]", "lea     r10, [rbp+src_mode]", "mov     dword ptr [rbp+length], r13d", "mov     r15, [rbp+s]", "mov     r13, qword ptr [rbp+var_340]", "mov     r12d, 1", "mov     [rbp+parent], rax", "lea     rax, [rbp+var_2F9]", "mov     [rbp+restore_dst_mode], 0", "mov     byte ptr [rbp+b], r14b", "mov     [rbp+x], x_0", "mov     [rbp+dst_backup], rax", "lea     rax, [rbp+var_2F8]", "mov     qword ptr [rbp+var_340], r10", "mov     [rbp+earlier_file], rax", "jmp     short loc_78F4"], ["lea~rax,[rbp+0]", "lea~r10,[rbp+0]", "mov~[word ptr [rbp+0],r13d", "mov~r15,[rbp+0]", "mov~r13,[word ptr [rbp+0]", "mov~r12d,0", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[rbp+0],0", "mov~[yte ptr [rbp+0],r14b", "mov~[rbp+0],x_0", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[word ptr [rbp+0],r10", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 371, 0, 0, 3, 1, 1, 34, 32, 0.021684325656836548, ["mov     rax, 0FF0000000000FFh", "test    [rbx+18h], rax", "jnz     loc_939D"], ["mov~rax,0", "test~[rbx+0],rax", "jnz~FOO"]], [0, 0, 371, 0, 1, 3, 1, 2, 35, 33, 0.0025421834841881773, ["call    _geteuid", "test    eax, eax", "jz      loc_90B7"], ["call~FOO", "test~eax,eax", "jz~FOO"]], [0, 1, 371, 0, 1, 6, 1, 2, 36, 33, 0.0012723615640142624, ["mov     rsi, [rbp+dst_name]; name", "mov     edi, dword ptr [rbp+dest_link_val]; desc", "mov     edx, 180h; mode", "call    fchmod_or_lchmod", "test    eax, eax", "jnz     loc_90B7"], ["mov~rsi,[rbp+0]", "mov~edi,[word ptr [rbp+0]", "mov~edx,<STR>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 371, 0, 1, 7, 1, 2, 37, 33, 0.0, ["mov     edx, dword ptr [rbp+x]", "mov     rsi, [rbp+dst_name]; name", "mov     edi, dword ptr [rbp+dest_link_val]; desc", "not     edx", "and     edx, [rbp+var_3A4]; mode", "call    fchmod_or_lchmod", "jmp     loc_90B7"], ["mov~edx,[word ptr [rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,[word ptr [rbp+0]", "not~edx", "and~edx,[rbp+0]", "call~FOO", "jmp~FOO"]], [0, 1, 371, 0, 0, 2, 1, 1, 34, 33, 0.0038094657605217443, ["test    byte ptr [rbp+timespec.tv_nsec+10h], 80h", "jz      loc_9ADE"], ["test~[yte ptr [rbp+0],<STR>", "jz~FOO"]], [1, 0, 371, 0, 0, 4, 2, 1, 24, 35, 0.15195704954337202, ["and     r12d, 1FFh", "test    r14b, r14b", "mov     [rbp+var_3A4], r12d", "jnz     loc_8E60"], ["and~r12d,0", "test~r14b,r14b", "mov~[rbp+0],r12d", "jnz~FOO"]], [0, 0, 371, 0, 0, 3, 0, 1, 23, 32, 0.15288909883277968, ["mov     rax, [rbp+dot_sb.st_dev]", "cmp     [rbp+src_mode], rax", "jz      loc_88B6"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [5, 0, 405, 2, 3, 18, 2, 4, 22, 26, 0.011227765418177754, ["mov     rdi, tmp_backup; s", "mov     byte ptr [rbp+earlier_file], r9b", "mov     r14d, 1", "call    _strlen", "lea     dst_lstat_sb, [rax+1]; n", "add     rax, 1Fh", "mov     rsi, __old; src", "and     rax, 0FFFFFFFFFFFFFFF0h", "mov     r15d, 11h", "sub     rsp, rax", "lea     rdi, [rsp+3C0h+var_3B1]", "and     rdi, 0FFFFFFFFFFFFFFF0h; dest", "call    _memcpy", "mov     rdi, __old; ptr", "mov     [rbp+dst_backup], rax", "call    free", "movzx   r9d, byte ptr [rbp+earlier_file]", "jmp     loc_5E0E"], ["mov~rdi,tmp_backup", "mov~[yte ptr [rbp+0],r9b", "mov~r14d,0", "call~FOO", "lea~dst_lstat_sb,[rax+0]", "add~rax,0", "mov~rsi,__old", "and~rax,0", "mov~r15d,0", "sub~rsp,rax", "lea~rdi,[rsp+0]", "and~rdi,0", "call~FOO", "mov~rdi,__old", "mov~[rbp+0],rax", "call~FOO", "movzx~r9d,[yte ptr [rbp+0]", "jmp~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 35, 32, 0.008878594865856012, ["cmp     byte ptr [rbx+2Bh], 0", "jnz     loc_9B62"], ["cmp~[yte ptr [rbx+0],0", "jnz~FOO"]], [1, 0, 578, 0, 0, 2, 0, 1, 12, 29, 0.00021523481546947853, ["cmp     byte ptr [x_0+16h], 0", "jnz     loc_6C60"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 580, 0, 1, 5, 0, 2, 11, 29, 0.010614949359501823, ["call    ___errno_location", "mov     use_lstat, rax", "mov     eax, [rax]", "cmp     eax, 28h ; '('", "jz      loc_68D0"], ["call~FOO", "mov~use_lstat,rax", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 371, 0, 0, 5, 0, 1, 35, 38, 0.048845816529356594, ["mov     eax, [x_0+0Ch]", "mov     [rbp+var_390], eax", "movzx   eax, byte ptr [rbp+format]", "mov     [rbp+var_3A5], al", "jmp     loc_8AFC"], ["mov~eax,[x_0+0]", "mov~[rbp+0],eax", "movzx~eax,[yte ptr [rbp+0]", "mov~[rbp+0],al", "jmp~FOO"]], [1, 0, 371, 2, 1, 12, 1, 2, 34, 34, 0.059136453370445985, ["mov     rax, [rbp+b]", "lea     rdi, [r12+rax]; n", "call    xmalloc", "lea     rcx, [rax+r12-1]", "xor     edx, edx", "mov     [rbp+restore_dst_mode_0], rax", "mov     rax, rcx", "div     r12", "sub     rcx, rdx", "cmp     dword ptr [rbp+parent], 0", "mov     [rbp+buf], rcx", "jnz     short loc_98BF"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "call~FOO", "lea~rcx,[rax+0]", "xor~edx,edx", "mov~[rbp+0],rax", "mov~rax,rcx", "div~,r12", "sub~rcx,rdx", "cmp~[word ptr [rbp+0],0", "mov~[rbp+0],rcx", "jnz~FOO"]], [0, 0, 4, 0, 2, 10, 4, 3, 18, -1, 0.000710652814239807, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, r12", "mov     dst_lstat_sb, rax; format", "mov     rcx, rbx", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_5D90"], ["xor~edi,edi", "call~FOO", "mov~r8,r12", "mov~dst_lstat_sb,rax", "mov~rcx,rbx", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [4, 0, 5, 0, 2, 13, 1, 3, 17, -1, 0.00027131861694382653, ["mov     rdx, [rbp+src_name]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     rdx, [rbp+dst_name]; arg", "mov     esi, 4; s", "xor     edi, edi; n", "mov     r12, rax", "call    quotearg_n_style", "mov     edx, 5", "mov     x_0, rax", "lea     rsi, aCannotOverwrit_0; \"cannot overwrite non-directory %s with \"...", "jmp     loc_70BB"], ["mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rdx,[rbp+0]", "mov~esi,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~edx,0", "mov~x_0,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [4, 0, 5, 0, 2, 13, 1, 3, 19, -1, 5.079287680695659e-05, ["mov     rdx, [rbp+src_name]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     rdx, [rbp+dst_name]; arg", "mov     esi, 4; s", "xor     edi, edi; n", "mov     r12, rax", "call    quotearg_n_style", "mov     edx, 5", "mov     x_0, rax", "lea     rsi, aWillNotOverwri; \"will not overwrite just-created %s with\"...", "jmp     loc_70BB"], ["mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rdx,[rbp+0]", "mov~esi,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~edx,0", "mov~x_0,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 371, 0, 0, 3, 1, 1, 36, 32, 0.006349109600869573, ["mov     r12d, r14d", "and     r12b, [rbx+20h]", "jnz     loc_99D7"], ["mov~r12d,r14d", "and~r12b,[rbx+0]", "jnz~FOO"]], [0, 0, 371, 0, 0, 1, 0, 1, 26, 28, 0.0007923688781885228, ["jmp     un_backup"], ["jmp~FOO"]], [1, 0, 484, 0, 0, 2, 0, 1, 12, 34, 0.015001929121523472, ["cmp     byte ptr [x_0+18h], 0", "jz      loc_6710"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 1, 501, 0, 0, 4, 1, 1, 11, 33, 0.08285068712281245, ["mov     eax, [rbp+mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_70E0"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 371, 0, 0, 1, 0, 0, 28, 31, 0.003330107985656091, ["mov     r9d, 1"], ["mov~r9d,0"]], [0, 0, 371, 0, 0, 1, 0, 1, 29, 32, 0.0003542803157285222, ["jmp     loc_8ED1"], ["jmp~FOO"]], [0, 0, 483, 0, 0, 1, 0, 1, 13, 37, 4.571358912626093e-05, ["jmp     loc_6C80"], ["jmp~FOO"]], [1, 0, 58, 0, 1, 7, 1, 2, 29, -1, 0.0, ["movzx   eax, byte ptr [rbp+var_2F8]", "mov     rdi, r15; s", "or      [rbp+restore_dst_mode], al", "call    _strlen", "lea     r15, [r15+rax+1]", "cmp     byte ptr [r15], 0", "jz      loc_7991"], ["movzx~eax,[yte ptr [rbp+0]", "mov~rdi,r15", "or~[rbp+0],al", "call~FOO", "lea~r15,[r15+0]", "cmp~<TAG>,0", "jz~FOO"]], [3, 1, 58, 1, 5, 34, 4, 6, 28, -1, 0.0027758307175001777, ["mov     rdi, [rbp+src_name]; dir", "xor     edx, edx; base_in_result", "mov     rsi, r15; base", "call    file_name_concat", "mov     rdi, [rbp+dst_name]; dir", "xor     edx, edx; base_in_result", "mov     rsi, r15; base", "mov     rbx, rax", "call    file_name_concat", "mov     r14, rax", "mov     rax, [rbp+format]", "mov     r9, [rbp+parent]; x", "mov     r8, [rbp+dest_link_val]; ancestors", "mov     rcx, qword ptr [rbp+var_340]; parent", "mov     rsi, r14; dst_name", "mov     edx, dword ptr [rbp+symlink_err]; new_dst", "mov     rdi, rbx; src_name", "movzx   eax, byte ptr [rax]", "push    0; rename_succeeded", "push    [rbp+dst_backup]; copy_into_self", "push    [rbp+earlier_file]; first_dir_created_per_command_line_arg", "push    0; command_line_arg", "mov     byte ptr [rbp+var_2F8], al", "call    copy_internal", "and     r12d, eax", "movzx   eax, [rbp+var_2F9]", "add     rsp, 20h", "or      [r13+0], al", "mov     rdi, r14; ptr", "call    free", "mov     rdi, rbx; ptr", "call    free", "cmp     [rbp+var_2F9], 0", "jz      loc_78D0"], ["mov~rdi,[rbp+0]", "xor~edx,edx", "mov~rsi,r15", "call~FOO", "mov~rdi,[rbp+0]", "xor~edx,edx", "mov~rsi,r15", "mov~rbx,rax", "call~FOO", "mov~r14,rax", "mov~rax,[rbp+0]", "mov~r9,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,[word ptr [rbp+0]", "mov~rsi,r14", "mov~edx,[word ptr [rbp+0]", "mov~rdi,rbx", "movzx~eax,<TAG>", "push~0", "push~[rbp+0]", "push~[rbp+0]", "push~0", "mov~[yte ptr [rbp+0],al", "call~FOO", "and~r12d,eax", "movzx~eax,[rbp+0]", "add~rsp,<STR>", "or~[r13+0],al", "mov~rdi,r14", "call~FOO", "mov~rdi,rbx", "call~FOO", "cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 371, 0, 0, 3, 0, 1, 37, 31, 0.004276760227145745, ["cmp     dword ptr [rbp+x], 0", "mov     r8d, 1", "jz      loc_8D15"], ["cmp~[word ptr [rbp+0],0", "mov~r8d,0", "jz~FOO"]], [0, 0, 371, 1, 0, 8, 0, 1, 32, 37, 0.0, ["mov     rax, [rbp+dot_sb.st_size]", "cqo", "idiv    r8", "cmp     [rbp+dot_sb.st_blocks], rax", "setl    al", "movzx   eax, al", "mov     dword ptr [rbp+parent], eax", "jmp     loc_89FE"], ["mov~rax,[rbp+0]", "cqo~,", "idiv~,r8", "cmp~[rbp+0],rax", "setl~al", "movzx~eax,al", "mov~[word ptr [rbp+0],eax", "jmp~FOO"]], [6, 1, 371, 0, 2, 26, 3, 3, 31, 37, 0.0756339797573455, ["call    _getpagesize", "mov     rcx, qword ptr [rbp+var_A0+8]", "movsxd  r12, eax", "mov     rax, 1FFFFFFFFFFE0000h", "mov     r8d, 200h", "mov     edi, dword ptr [rbp+symlink_err]; fd", "mov     [rbp+restore_dst_mode_0], r8", "lea     rdx, [rcx-20000h]", "cmp     rdx, rax", "mov     eax, 20000h", "lea     rdx, [rcx-1]", "cmovbe  rax, rcx", "mov     [rbp+b], rax", "mov     rax, 1FFFFFFFFFFFFFFFh", "cmp     rdx, rax", "cmova   rcx, r8", "xor     edx, edx; len", "xor     esi, esi; offset", "mov     [rbp+hole_size], rcx", "mov     ecx, 2; advice", "call    fdadvise", "mov     r9d, [rbp+dot_sb.st_mode]", "mov     r8, [rbp+restore_dst_mode_0]", "and     r9d, 0F000h", "cmp     r9d, 8000h", "jz      loc_98DA"], ["call~FOO", "mov~rcx,[word ptr [rbp+0]", "movsxd~r12,eax", "mov~rax,0", "mov~r8d,<STR>", "mov~edi,[word ptr [rbp+0]", "mov~[rbp+0],r8", "lea~rdx,[rcx-20000h]+0]", "cmp~rdx,rax", "mov~eax,0", "lea~rdx,[rcx-1]+0]", "cmovbe~rax,rcx", "mov~[rbp+0],rax", "mov~rax,0", "cmp~rdx,rax", "cmova~rcx,r8", "xor~edx,edx", "xor~esi,esi", "mov~[rbp+0],rcx", "mov~ecx,0", "call~FOO", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "and~r9d,0", "cmp~r9d,0", "jz~FOO"]], [0, 0, 39, 0, 1, 3, 1, 2, 26, -1, 0.0027847194709413946, ["call    lutimens", "test    eax, eax", "jz      short loc_6158"], ["call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 541, 0, 0, 4, 1, 1, 19, 35, 0.013756996718780156, ["mov     eax, [r12+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_5C9F"], ["mov~eax,[r12+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 544, 0, 0, 3, 1, 1, 18, 36, 0.014488668109184366, ["movzx   esi, byte ptr [x_0+18h]", "test    sil, sil", "jnz     loc_70F0"], ["movzx~esi,[yte ptr [x_0+0]", "test~sil,sil", "jnz~FOO"]], [1, 0, 543, 0, 0, 2, 0, 1, 19, 36, 0.003095825841384004, ["cmp     byte ptr [x_0+15h], 0", "jnz     loc_70F0"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 540, 0, 0, 2, 1, 1, 20, 37, 0.0022437753329473072, ["test    cl, cl", "jz      short loc_7115"], ["test~cl,cl", "jz~FOO"]], [1, 0, 38, 0, 1, 3, 0, 2, 27, -1, 0.0014107721533132196, ["call    ___errno_location", "cmp     dword ptr [rax], 26h ; '&'", "jz      short loc_6158"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [4, 0, 371, 1, 2, 13, 3, 3, 25, 34, 0.13354590152277043, ["cmp     byte ptr [x_0+23h], 1", "mov     rdi, [rbp+dst_name]; file", "sbb     esi, esi", "xor     eax, eax", "and     esi, 0FFFFFE00h", "add     esi, 201h; flags", "call    open_safer", "mov     dword ptr [rbp+dest_link_val], eax", "call    ___errno_location", "mov     r12, rax", "mov     rax, 0FF000000FF00h", "test    [x_0+20h], rax", "jnz     loc_9195"], ["cmp~[yte ptr [x_0+0],0", "mov~rdi,[rbp+0]", "sbb~esi,esi", "xor~eax,eax", "and~esi,0", "add~esi,0", "call~FOO", "mov~[word ptr [rbp+0],eax", "call~FOO", "mov~r12,rax", "mov~rax,0", "test~[x_0+0],rax", "jnz~FOO"]], [1, 0, 509, 0, 1, 11, 2, 2, 19, 38, 0.00047643718444925277, ["mov     rsi, [rbp+dst_name]; dest", "mov     rdi, [rbp+src_name]; source", "mov     byte ptr [rbp+earlier_file], r9b", "mov     byte ptr [rbp+dst_backup], r8b", "call    same_name", "xor     eax, 1", "movzx   r8d, byte ptr [rbp+dst_backup]", "movzx   r9d, byte ptr [rbp+earlier_file]", "mov     r12d, eax", "xor     eax, eax", "jmp     loc_71FC"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "xor~eax,0", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "mov~r12d,eax", "xor~eax,eax", "jmp~FOO"]], [1, 0, 539, 0, 0, 2, 0, 1, 21, 37, 0.0005549121791160007, ["cmp     qword ptr [r12+10h], 1", "ja      loc_84CB"], ["cmp~[word ptr [r12+0],0", "ja~FOO"]], [0, 0, 371, 0, 1, 6, 1, 2, 38, 31, 0.002549802415709221, ["mov     byte ptr [rbp+format], r8b", "call    cached_umask", "not     eax", "test    dword ptr [rbp+x], eax", "movzx   r8d, byte ptr [rbp+format]", "jz      loc_8D15"], ["mov~[yte ptr [rbp+0],r8b", "call~FOO", "not~eax", "test~[word ptr [rbp+0],eax", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 26, 33, 0.11892623011882146, ["cmp     dword ptr [rbp+dest_link_val], 0", "js      loc_91A2"], ["cmp~[word ptr [rbp+0],0", "js~FOO"]], [3, 0, 371, 0, 3, 18, 4, 4, 31, 30, 0.001639340098944524, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "mov     byte ptr [rbp+dest_link_val], r8b", "call    quotearg_style", "lea     rsi, aNotWritingThro; \"not writing through dangling symlink %s\"", "mov     r12, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     [rbp+restore_dst_mode_0], 0", "movzx   r8d, byte ptr [rbp+dest_link_val]", "jmp     loc_7BD8"], ["mov~rsi,[rbp+0]", "mov~edi,0", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~[rbp+0],0", "movzx~r8d,[yte ptr [rbp+0]", "jmp~FOO"]], [0, 0, 371, 0, 0, 3, 1, 1, 30, 31, 0.003526295472322961, ["movzx   r8d, byte ptr [x_0+30h]", "test    r8b, r8b", "jz      loc_9A87"], ["movzx~r8d,[yte ptr [x_0+0]", "test~r8b,r8b", "jz~FOO"]], [1, 0, 371, 0, 0, 1, 0, 0, 27, 33, 0.11265860075782971, ["mov     dword ptr [rbp+x], 0"], ["mov~[word ptr [rbp+0],0"]], [0, 0, 371, 0, 1, 8, 2, 2, 27, 32, 0.0053425640921450504, ["movzx   esi, byte ptr [x_0+25h]; process_local", "mov     rdi, [rbp+dst_name]; dst_name", "xor     edx, edx; recurse", "mov     rcx, x_0; x", "call    set_file_security_ctx", "test    al, al", "mov     r8d, eax", "jnz     loc_891C"], ["movzx~esi,[yte ptr [x_0+0]", "mov~rdi,[rbp+0]", "xor~edx,edx", "mov~rcx,x_0", "call~FOO", "test~al,al", "mov~r8d,eax", "jnz~FOO"]], [0, 0, 371, 0, 0, 1, 0, 1, 29, 34, 0.00025650402787513076, ["jmp     loc_891C"], ["jmp~FOO"]], [0, 0, 476, 0, 0, 3, 0, 1, 15, 34, 0.0011936326049634797, ["movzx   r8d, byte ptr [rbp+dst_backup]", "movzx   r9d, byte ptr [rbp+earlier_file]", "jmp     loc_6710"], ["movzx~r8d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jmp~FOO"]], [0, 0, 477, 0, 1, 8, 1, 2, 14, 35, 0.00035808978148904396, ["mov     rsi, [rbp+dst_name]; dst_name", "lea     dst_lstat_sb, [rbp+dst_sb.st_mode]; dst_sb", "mov     rdi, x_0; x", "mov     byte ptr [rbp+earlier_file], r9b", "mov     byte ptr [rbp+dst_backup], r8b", "call    overwrite_ok", "test    al, al", "jnz     loc_8110"], ["mov~rsi,[rbp+0]", "lea~dst_lstat_sb,[rbp+0]", "mov~rdi,x_0", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~al,al", "jnz~FOO"]], [2, 0, 533, 0, 0, 4, 1, 1, 21, 36, 0.004049462103434614, ["mov     eax, [dst_lstat_sb+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      short loc_7150"], ["mov~eax,[dst_lstat_sb+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [2, 0, 3, 0, 3, 18, 4, 4, 13, -1, 0.00013333130161826104, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "mov     [rbp+src_name], use_lstat", "xor     r12d, r12d", "call    quotearg_style", "lea     rsi, aCannotStatS; \"cannot stat %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     x_0, rax", "call    _dcgettext", "mov     use_lstat, [rbp+src_name]", "mov     dst_lstat_sb, rax; format", "mov     rcx, rbx", "xor     edi, edi; status", "xor     eax, eax", "mov     esi, [use_lstat]; errnum", "call    _error", "jmp     loc_62C6"], ["mov~rsi,[rbp+0]", "mov~edi,0", "mov~[rbp+0],use_lstat", "xor~r12d,r12d", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~x_0,rax", "call~FOO", "mov~use_lstat,[rbp+0]", "mov~dst_lstat_sb,rax", "mov~rcx,rbx", "xor~edi,edi", "xor~eax,eax", "mov~esi,<TAG>", "call~FOO", "jmp~FOO"]], [2, 0, 577, 0, 0, 3, 0, 1, 12, 28, 0.011664457176525565, ["cmp     eax, 2", "mov     r8d, 1", "jnz     loc_68DA"], ["cmp~eax,0", "mov~r8d,0", "jnz~FOO"]], [1, 0, 371, 0, 1, 17, 2, 1, 36, 37, 0.050161352038656765, ["mov     rax, [rbp+dot_sb.st_size]", "mov     edi, dword ptr [rbp+symlink_err]; src_fd", "xor     r12d, r12d", "mov     [rbp+length], rax", "lea     rax, [rbp+dev]", "mov     rsi, rax; scan", "mov     [rbp+parent], rax", "call    extent_scan_init", "lea     rax, [rbp+var_2F9]", "xor     ecx, ecx", "mov     [rbp+var_388], x_0", "mov     [rbp+n_bytes], 0", "mov     x_0, rcx", "mov     [rbp+var_360], r13d", "mov     [rbp-3B8h], rax", "lea     rax, [rbp+var_2F8]", "mov     [rbp+total_n_read], rax"], ["mov~rax,[rbp+0]", "mov~edi,[word ptr [rbp+0]", "xor~r12d,r12d", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~rsi,rax", "mov~[rbp+0],rax", "call~FOO", "lea~rax,[rbp+0]", "xor~ecx,ecx", "mov~[rbp+0],x_0", "mov~[rbp+0],0", "mov~x_0,rcx", "mov~[rbp+0],r13d", "mov~[rbp-3B8h]+0],rax", "lea~rax,[rbp+0]", "mov~[rbp+0],rax"]], [2, 0, 371, 0, 0, 2, 0, 0, 37, 38, 0.0007111002752973922, ["mov     [rbp+var_3A5], 0", "mov     [rbp+var_390], 1"], ["mov~[rbp+0],0", "mov~[rbp+0],0"]], [0, 0, 532, 0, 0, 3, 0, 1, 22, 35, 0.008747295279310029, ["mov     rax, [r12+8]", "cmp     [dst_lstat_sb+8], rax", "jnz     loc_5C9F"], ["mov~rax,[r12+0]", "cmp~[dst_lstat_sb+0],rax", "jnz~FOO"]], [0, 0, 533, 0, 0, 1, 0, 1, 22, 36, 0.003223823890937535, ["jmp     loc_7124"], ["jmp~FOO"]], [1, 0, 371, 0, 0, 3, 0, 1, 33, 35, 0.06331162784397781, ["mov     eax, [x_0+0Ch]", "cmp     eax, 3", "jz      loc_98FE"], ["mov~eax,[x_0+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 623, 0, 1, 3, 0, 2, 3, 34, 1.5237863042086977e-05, ["call    ___errno_location", "mov     r15d, [rax]", "jmp     loc_5B0B"], ["call~FOO", "mov~r15d,<TAG>", "jmp~FOO"]], [2, 0, 626, 0, 1, 8, 1, 2, 2, 33, 0.0005269760968721746, ["mov     edx, 0FFFFFF9Ch; fd2", "mov     rcx, dst_name_0; dst", "mov     r8d, 1; flags", "mov     dst_name_0, src_name_0; src", "mov     edi, edx; fd1", "call    renameatu", "test    eax, eax", "jnz     loc_6930"], ["mov~edx,0", "mov~rcx,dst_name_0", "mov~r8d,0", "mov~dst_name_0,src_name_0", "mov~edi,edx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 371, 0, 1, 7, 1, 2, 39, 31, 0.001282520139375654, ["mov     edx, [rbp+var_3A4]; mode", "mov     rsi, [rbp+dst_name]; name", "mov     edi, dword ptr [rbp+dest_link_val]; desc", "call    fchmod_or_lchmod", "test    eax, eax", "movzx   r8d, byte ptr [rbp+format]", "jz      loc_8D15"], ["mov~edx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,[word ptr [rbp+0]", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 531, 0, 0, 3, 0, 1, 23, 35, 0.0003517406718881744, ["mov     rax, [r12]", "cmp     [dst_lstat_sb], rax", "jnz     loc_5C9F"], ["mov~rax,<TAG>", "cmp~<TAG>,rax", "jnz~FOO"]], [0, 0, 65, 0, 0, 1, 0, 1, 25, -1, 2.7936082243826124e-05, ["jmp     loc_77E0"], ["jmp~FOO"]], [0, 0, 67, 0, 0, 5, 2, 1, 23, -1, 0.02366948059204177, ["mov     rax, [rbp+parent]", "test    rax, rax", "setnz   r12b", "and     r12b, [x_0+1Ch]", "jnz     loc_7FBB"], ["mov~rax,[rbp+0]", "test~rax,rax", "setnz~r12b", "and~r12b,[x_0+0]", "jnz~FOO"]], [0, 0, 530, 0, 0, 3, 1, 1, 24, 36, 0.00022983776755147855, ["movzx   eax, byte ptr [x_0+17h]", "test    al, al", "jnz     loc_7208"], ["movzx~eax,[yte ptr [x_0+0]", "test~al,al", "jnz~FOO"]], [1, 0, 371, 0, 0, 3, 0, 1, 18, 30, 0.05664929550279868, ["mov     rax, [rbp+src_name]", "cmp     byte ptr [rax], 2Fh ; '/'", "jz      short loc_6984"], ["mov~rax,[rbp+0]", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 371, 0, 0, 4, 1, 1, 17, 16, 0.2727806052479213, ["movzx   eax, byte ptr [x_0+2Ch]", "test    al, al", "mov     byte ptr [rbp+symlink_err], al", "jnz     loc_6940"], ["movzx~eax,[yte ptr [x_0+0]", "test~al,al", "mov~[yte ptr [rbp+0],al", "jnz~FOO"]], [0, 0, 529, 0, 0, 1, 0, 0, 22, 38, 0.0004650087871676876, ["movzx   esi, byte ptr [x_0+18h]"], ["movzx~esi,[yte ptr [x_0+0]"]], [2, 0, 535, 0, 0, 4, 1, 1, 23, 38, 0.0007237984944991314, ["mov     eax, [rdx+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_714C"], ["mov~eax,[rdx+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [2, 0, 534, 0, 0, 4, 1, 1, 21, 37, 0.0023098060727963507, ["mov     eax, [r12+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_714C"], ["mov~eax,[r12+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [3, 0, 37, 0, 4, 18, 3, 5, 28, -1, 0.0015542620302928711, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aPreservingTime; \"preserving times for %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r13, rax", "call    _dcgettext", "mov     r15, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "xor     edi, edi; status", "xor     eax, eax", "mov     rcx, r13", "mov     dst_lstat_sb, r15; format", "call    _error", "cmp     byte ptr [rbx+24h], 0", "jnz     loc_5D90"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r13,rax", "call~FOO", "mov~r15,rax", "call~FOO", "mov~esi,<TAG>", "xor~edi,edi", "xor~eax,eax", "mov~rcx,r13", "mov~dst_lstat_sb,r15", "call~FOO", "cmp~[yte ptr [rbx+0],0", "jnz~FOO"]], [1, 0, 371, 0, 1, 9, 1, 2, 28, 32, 0.11732265667062851, ["lea     rax, [rbp+timespec]", "mov     esi, dword ptr [rbp+dest_link_val]; fildes", "mov     edi, 1; ver", "mov     rdx, rax; stat_buf", "mov     [rbp+s], rax", "call    ___fxstat", "test    eax, eax", "mov     dword ptr [rbp+parent], eax", "jnz     loc_94F6"], ["lea~rax,[rbp+0]", "mov~esi,[word ptr [rbp+0]", "mov~edi,0", "mov~rdx,rax", "mov~[rbp+0],rax", "call~FOO", "test~eax,eax", "mov~[word ptr [rbp+0],eax", "jnz~FOO"]], [2, 0, 371, 0, 0, 3, 0, 0, 28, 33, 0.0056888022023791375, ["cmp     dword ptr [rbp+dest_link_val], 0", "mov     r14d, 1", "jns     loc_8926"], ["cmp~[word ptr [rbp+0],0", "mov~r14d,0", "jns~FOO"]], [0, 0, 36, 0, 0, 1, 0, 0, 29, -1, 0.00016507684962260892, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 35, 0, 0, 2, 0, 1, 25, -1, 0.04176190331067971, ["cmp     byte ptr [rbp+symlink_err], 0", "jnz     loc_62C6"], ["cmp~[yte ptr [rbp+0],0", "jnz~FOO"]], [1, 0, 72, 0, 1, 7, 0, 2, 24, -1, 0.0, ["mov     rdx, [rbp+dst_sb.st_dev]; dev", "mov     rsi, [rbp+dst_sb.st_ino]; ino", "mov     rdi, [rbp+dst_name]; name", "call    remember_copied", "mov     rax, [rbp+format]", "mov     byte ptr [rax], 1", "jmp     loc_7778"], ["mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "mov~rax,[rbp+0]", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 73, 0, 0, 3, 0, 1, 23, -1, 0.007027194506242444, ["mov     rax, [rbp+format]", "cmp     byte ptr [rax], 0", "jz      loc_856C"], ["mov~rax,[rbp+0]", "cmp~<TAG>,0", "jz~FOO"]], [1, 1, 371, 0, 0, 5, 1, 1, 18, 23, 0.014920407562043499, ["mov     r12d, [rbp+mode]", "mov     rdi, [rbp+dst_name]; path", "and     r12d, 0F000h", "cmp     r12d, 4000h", "jz      loc_74A0"], ["mov~r12d,[rbp+0]", "mov~rdi,[rbp+0]", "and~r12d,0", "cmp~r12d,<STR>", "jz~FOO"]], [0, 1, 371, 0, 0, 2, 0, 1, 17, 24, 0.01782449029348124, ["cmp     r15d, 12h", "jnz     loc_6BE8"], ["cmp~r15d,<STR>", "jnz~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 30, 34, 0.0808521013013135, ["cmp     dword ptr [x_0+38h], 0", "jnz     loc_97C4"], ["cmp~[word ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 26, -1, 0.040390495636891885, ["cmp     byte ptr [rbx+1Dh], 0", "jz      short loc_61C7"], ["cmp~[yte ptr [rbx+0],0", "jz~FOO"]], [0, 0, 371, 0, 0, 3, 0, 0, 34, 37, 0.0012723615640142624, ["mov     rax, [rbp+dot_sb.st_size]", "cmp     [rbp+b], rax", "jbe     loc_8A83"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jbe~FOO"]], [4, 0, 371, 1, 1, 19, 0, 2, 33, 37, 0.011699292624535668, ["mov     rdi, [rbp+dot_sb.st_blksize]", "mov     rax, 7FFFFFFFFFFFFFFFh", "mov     rsi, [rbp+b]; b", "sub     rax, r12", "mov     dword ptr [rbp+length], r9d", "mov     r8, rax", "mov     rax, 1FFFFFFFFFFE0000h", "lea     rdx, [rdi-20000h]", "mov     [rbp+restore_dst_mode_0], r8", "cmp     rdx, rax", "mov     eax, 20000h", "mov     rdx, r8; lcm_max", "cmova   rdi, rax; a", "call    buffer_lcm", "mov     r9d, dword ptr [rbp+length]", "mov     rcx, rax", "mov     r8, [rbp+restore_dst_mode_0]", "cmp     r9d, 8000h", "jz      loc_974D"], ["mov~rdi,[rbp+0]", "mov~rax,0", "mov~rsi,[rbp+0]", "sub~rax,r12", "mov~[word ptr [rbp+0],r9d", "mov~r8,rax", "mov~rax,0", "lea~rdx,[rdi-20000h]+0]", "mov~[rbp+0],r8", "cmp~rdx,rax", "mov~eax,0", "mov~rdx,r8", "cmova~rdi,rax", "call~FOO", "mov~r9d,[word ptr [rbp+0]", "mov~rcx,rax", "mov~r8,[rbp+0]", "cmp~r9d,0", "jz~FOO"]], [0, 0, 33, 0, 0, 2, 1, 1, 27, -1, 0.007000528245918794, ["test    r14b, r14b", "jnz     short loc_6182"], ["test~r14b,r14b", "jnz~FOO"]], [1, 0, 526, 0, 0, 2, 0, 0, 24, 37, 0.0004698341104643484, ["cmp     qword ptr [r12+10h], 1", "jbe     loc_7542"], ["cmp~[word ptr [r12+0],0", "jbe~FOO"]], [2, 0, 371, 0, 1, 12, 1, 2, 19, 31, 0.008865896646654273, ["mov     rdi, [rbp+dst_name]; file", "call    dir_name", "lea     r8, asc_12A38+1; \".\"", "mov     rdi, rax", "mov     ecx, 2", "mov     dst_mode_bits, rax", "mov     rsi, r8", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_7C58"], ["mov~rdi,[rbp+0]", "call~FOO", "lea~r8,<TAG>", "mov~rdi,rax", "mov~ecx,0", "mov~dst_mode_bits,rax", "mov~rsi,r8", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [0, 0, 32, 0, 0, 3, 0, 1, 28, -1, 0.0027885289367019167, ["mov     eax, [rbp+dst_sb.st_uid]", "cmp     [rbp+owner], eax", "jz      loc_882A"], ["mov~eax,[rbp+0]", "cmp~[rbp+0],eax", "jz~FOO"]], [2, 0, 371, 0, 1, 9, 1, 1, 45, 34, 0.0007695120836253923, ["mov     rdx, [rbp+dst_name]; arg", "mov     esi, 3; s", "xor     edi, edi; n", "mov     rbx, [rbp+var_388]", "mov     r13d, [rbp+var_360]", "call    quotearg_n_style_colon", "lea     rsi, aSWriteFailed; \"%s: write failed\"", "mov     r12, rax", "mov     edx, 5; category"], ["mov~rdx,[rbp+0]", "mov~esi,0", "xor~edi,edi", "mov~rbx,[rbp+0]", "mov~r13d,[rbp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0"]], [0, 0, 371, 0, 1, 5, 1, 2, 44, 35, 0.0027021810461300903, ["mov     edi, dword ptr [rbp+dest_link_val]; fd", "mov     rsi, rcx; n_bytes", "call    write_zeros", "test    al, al", "jz      loc_9953"], ["mov~edi,[word ptr [rbp+0]", "mov~rsi,rcx", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 371, 0, 1, 2, 0, 1, 20, 30, 0.003599945143693048, ["mov     rdi, r12; ptr", "call    free"], ["mov~rdi,r12", "call~FOO"]], [1, 0, 371, 0, 1, 6, 1, 2, 20, 31, 0.006349109600869573, ["lea     rdx, [rbp+dot_sb]; stat_buf", "mov     rsi, r8; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jnz     loc_697C"], ["lea~rdx,[rbp+0]", "mov~rsi,r8", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 371, 0, 1, 6, 1, 2, 21, 31, 0.00508944625605705, ["lea     rdx, [rbp+timespec]; stat_buf", "mov     rsi, r12; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jnz     loc_697C"], ["lea~rdx,[rbp+0]", "mov~rsi,r12", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 371, 0, 0, 1, 0, 1, 24, 31, 0.00028951939779965256, ["jmp     loc_697C"], ["jmp~FOO"]], [2, 0, 371, 0, 4, 16, 3, 4, 40, 32, 1.2698219201739147e-05, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aPreservingPerm; \"preserving permissions for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r12, rax", "call    _dcgettext", "mov     [rbp+format], rax", "call    ___errno_location", "mov     rdx, [rbp+format]; format", "mov     esi, [rax]; errnum", "mov     rcx, r12", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~[rbp+0],rax", "call~FOO", "mov~rdx,[rbp+0]", "mov~esi,<TAG>", "mov~rcx,r12", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [3, 0, 7, 0, 3, 16, 4, 4, 18, -1, 0.003207062241591239, ["mov     rsi, cs:top_level_src_name; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aWarningSourceD; \"warning: source directory %s specified \"...", "xor     edi, edi; domainname", "mov     r12, rax", "mov     edx, 5; category", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "mov     rcx, r12", "call    _error", "cmp     byte ptr [x_0+18h], 0", "jnz     loc_6D04"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~r12,rax", "mov~edx,0", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "mov~rcx,r12", "call~FOO", "cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 371, 0, 1, 5, 1, 2, 17, 25, 0.011255193571653511, ["mov     rsi, [rbp+earlier_file]; dest", "mov     rdi, [rbp+dst_name]; source", "call    same_name", "test    al, al", "jnz     loc_814A"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 19, -1, 2.768211785979134e-05, ["jmp     loc_62C0"], ["jmp~FOO"]], [1, 0, 371, 0, 0, 3, 1, 1, 37, 31, 0.0018742571541766982, ["movzx   r8d, byte ptr [rbx+24h]", "xor     r8d, 1", "jmp     loc_8D15"], ["movzx~r8d,[yte ptr [rbx+0]", "xor~r8d,0", "jmp~FOO"]], [0, 0, 371, 0, 0, 1, 0, 1, 36, 32, 0.0012571237009721757, ["jmp     loc_9187"], ["jmp~FOO"]], [1, 0, 371, 0, 0, 2, 0, 0, 26, 33, 0.013009537209168451, ["cmp     dword ptr [rbp+dest_link_val], 0", "jns     loc_93EE"], ["cmp~[word ptr [rbp+0],0", "jns~FOO"]], [0, 0, 55, 0, 0, 3, 0, 0, 29, -1, 0.00041904123365739176, ["movzx   r14d, byte ptr [rbp+b]", "mov     rbx, [rbp+x]", "mov     r13d, dword ptr [rbp+length]"], ["movzx~r14d,[yte ptr [rbp+0]", "mov~rbx,[rbp+0]", "mov~r13d,[word ptr [rbp+0]"]], [0, 0, 371, 0, 0, 3, 1, 1, 27, 32, 0.013698415600862799, ["movzx   r9d, byte ptr [x_0+16h]", "test    r9b, r9b", "jnz     loc_8DC0"], ["movzx~r9d,[yte ptr [x_0+0]", "test~r9b,r9b", "jnz~FOO"]], [2, 0, 29, 0, 1, 9, 0, 2, 28, -1, 0.0015631507837340893, ["mov     rsi, [rbp+dst_name]; dst_name", "lea     rcx, [rbp+src_mode]; src_sb", "lea     use_lstat, [rbp+dst_sb]; dst_sb", "movzx   r8d, r14b; new_dst", "mov     edx, 0FFFFFFFFh; dest_desc", "mov     rdi, rbx; x", "call    set_owner", "cmp     eax, 0FFFFFFFFh", "jz      loc_5D90"], ["mov~rsi,[rbp+0]", "lea~rcx,[rbp+0]", "lea~use_lstat,[rbp+0]", "movzx~r8d,r14b", "mov~edx,0", "mov~rdi,rbx", "call~FOO", "cmp~eax,0", "jz~FOO"]], [0, 0, 371, 0, 1, 14, 1, 2, 32, 34, 0.004094752418587483, ["mov     rax, [rbp+var_238]", "mov     rsi, [rbp+dst_name]; file", "lea     rdx, [rbp+var_2A0]; timespec", "mov     edi, dword ptr [rbp+dest_link_val]; fd", "mov     [rbp+var_2A0.tv_sec], rax", "mov     rax, [rbp+var_230]", "mov     [rbp+var_2A0.tv_nsec], rax", "mov     rax, [rbp+var_228]", "mov     [rbp+var_290], rax", "mov     rax, [rbp+var_220]", "mov     [rbp+var_288], rax", "call    fdutimens", "test    eax, eax", "jz      loc_9044"], ["mov~rax,[rbp+0]", "mov~rsi,[rbp+0]", "lea~rdx,[rbp+0]", "mov~edi,[word ptr [rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [3, 0, 371, 0, 4, 18, 3, 5, 33, 33, 0.00370110762333357, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aPreservingTime; \"preserving times for %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r12, rax", "call    _dcgettext", "mov     [rbp+format], rax", "call    ___errno_location", "mov     rdx, [rbp+format]; format", "mov     esi, [rax]; errnum", "xor     edi, edi; status", "xor     eax, eax", "mov     rcx, r12", "call    _error", "cmp     byte ptr [rbx+24h], 0", "jz      loc_9044"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r12,rax", "call~FOO", "mov~[rbp+0],rax", "call~FOO", "mov~rdx,[rbp+0]", "mov~esi,<TAG>", "xor~edi,edi", "xor~eax,eax", "mov~rcx,r12", "call~FOO", "cmp~[yte ptr [rbx+0],0", "jz~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 31, 35, 0.03562231432663882, ["cmp     byte ptr [rbx+1Fh], 0", "jnz     loc_9446"], ["cmp~[yte ptr [rbx+0],0", "jnz~FOO"]], [1, 0, 371, 0, 0, 3, 0, 1, 28, 31, 0.005523302078783138, ["mov     r8d, [r12]", "cmp     r8d, 2", "jnz     loc_8ED7"], ["mov~r8d,<TAG>", "cmp~r8d,0", "jnz~FOO"]], [0, 0, 525, 0, 1, 11, 1, 2, 25, 37, 0.00027682117859791343, ["mov     rdi, [rbp+src_name]; name", "mov     byte ptr [rbp+omitted_permissions], r9b", "mov     byte ptr [rbp+earlier_file], r8b", "mov     [rbp+dst_backup], dst_lstat_sb", "call    _canonicalize_file_name", "test    rax, rax", "mov     r15, rax", "mov     dst_lstat_sb, [rbp+dst_backup]", "movzx   r8d, byte ptr [rbp+earlier_file]", "movzx   r9d, byte ptr [rbp+omitted_permissions]", "jz      loc_7542"], ["mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r8b", "mov~[rbp+0],dst_lstat_sb", "call~FOO", "test~rax,rax", "mov~r15,rax", "mov~dst_lstat_sb,[rbp+0]", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 54, 0, 1, 5, 0, 1, 28, -1, 0.0010971261390302623, ["mov     rdi, [rbp+s]; ptr", "call    free", "movzx   ecx, [rbp+restore_dst_mode]", "mov     rax, [rbp+format]", "mov     [rax], cl"], ["mov~rdi,[rbp+0]", "call~FOO", "movzx~ecx,[rbp+0]", "mov~rax,[rbp+0]", "mov~<TAG>,cl"]], [2, 0, 55, 0, 0, 3, 0, 1, 27, -1, 0.001726957811436524, ["mov     [rbp+restore_dst_mode], 0", "mov     r12d, 1", "jmp     loc_79A7"], ["mov~[rbp+0],0", "mov~r12d,0", "jmp~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 29, 31, 0.0017599731813610457, ["cmp     byte ptr [x_0+18h], 0", "jnz     loc_8ED7"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 53, 0, 0, 2, 1, 1, 25, -1, 0.007385284287731488, ["test    r13b, r13b", "jnz     loc_7FA2"], ["test~r13b,r13b", "jnz~FOO"]], [0, 0, 66, 0, 0, 3, 0, 1, 24, -1, 0.008236064974248012, ["mov     rcx, [rbp+src_mode]", "cmp     [rax], rcx", "jnz     loc_79C3"], ["mov~rcx,[rbp+0]", "cmp~<TAG>,rcx", "jnz~FOO"]], [2, 0, 54, 0, 4, 18, 4, 5, 25, -1, 0.00027428153475756557, ["mov     rsi, [rbp+src_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aCannotAccessS; \"cannot access %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r12, rax", "call    _dcgettext", "mov     r15, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "mov     rdx, r15; format", "xor     edi, edi; status", "xor     eax, eax", "xor     r12d, r12d", "call    _error", "jmp     loc_79C3"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~r15,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "mov~rdx,r15", "xor~edi,edi", "xor~eax,eax", "xor~r12d,r12d", "call~FOO", "jmp~FOO"]], [1, 0, 27, 0, 0, 3, 1, 1, 27, -1, 0.031063653633214474, ["mov     rax, 0FF0000000000FFh", "test    [rbx+18h], rax", "jnz     loc_8270"], ["mov~rax,0", "test~[rbx+0],rax", "jnz~FOO"]], [1, 0, 28, 0, 0, 6, 2, 0, 29, -1, 0.00015237863042086977, ["mov     ecx, [rbp+mode]", "mov     edx, ecx", "and     dh, 0F1h", "test    eax, eax", "cmovnz  edx, ecx", "mov     [rbp+mode], edx"], ["mov~ecx,[rbp+0]", "mov~edx,ecx", "and~dh,0", "test~eax,eax", "cmovnz~edx,ecx", "mov~[rbp+0],edx"]], [1, 0, 24, 0, 0, 2, 0, 1, 28, -1, 0.024050427168093944, ["cmp     byte ptr [rbx+2Bh], 0", "jnz     loc_85D5"], ["cmp~[yte ptr [rbx+0],0", "jnz~FOO"]], [1, 0, 470, 0, 0, 2, 0, 1, 16, 32, 0.001336699207969741, ["cmp     byte ptr [x_0+18h], 0", "jz      loc_7DFB"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 1, 472, 0, 0, 2, 0, 1, 15, 31, 0.02319428501124781, ["cmp     r12d, 4000h", "jz      loc_79E8"], ["cmp~r12d,<STR>", "jz~FOO"]], [2, 0, 3, 0, 3, 16, 4, 4, 23, -1, 0.00012190290433669582, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aCannotBackupS; \"cannot backup %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     x_0, rax", "call    _dcgettext", "mov     esi, [r12]; errnum", "mov     rdx, rax; format", "mov     rcx, rbx", "xor     edi, edi; status", "xor     eax, eax", "xor     r12d, r12d", "call    _error", "jmp     loc_62C6"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~x_0,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "mov~rcx,rbx", "xor~edi,edi", "xor~eax,eax", "xor~r12d,r12d", "call~FOO", "jmp~FOO"]], [1, 0, 407, 0, 1, 6, 0, 2, 22, 27, 0.0010234764676601753, ["mov     byte ptr [rbp+dst_backup], r9b", "call    ___errno_location", "cmp     dword ptr [rax], 2", "mov     tmp_backup, rax", "movzx   r9d, byte ptr [rbp+dst_backup]", "jz      loc_8611"], ["mov~[yte ptr [rbp+0],r9b", "call~FOO", "cmp~<TAG>,0", "mov~tmp_backup,rax", "movzx~r9d,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 469, 0, 0, 3, 1, 1, 17, 31, 0.0015504525645323498, ["mov     r15d, [x_0]", "test    r15d, r15d", "jz      loc_7DFB"], ["mov~r15d,<TAG>", "test~r15d,r15d", "jz~FOO"]], [1, 0, 509, 0, 2, 12, 2, 2, 26, 38, 8.63478905718262e-05, ["mov     rsi, [rbp+dst_name]; dest", "mov     rdi, rax; source", "mov     byte ptr [rbp+earlier_file], r9b", "mov     byte ptr [rbp+dst_backup], r8b", "call    same_name", "mov     rdi, r15; ptr", "xor     eax, 1", "mov     r12d, eax", "call    free", "movzx   r8d, byte ptr [rbp+dst_backup]", "movzx   r9d, byte ptr [rbp+earlier_file]", "xor     eax, eax"], ["mov~rsi,[rbp+0]", "mov~rdi,rax", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "mov~rdi,r15", "xor~eax,0", "mov~r12d,eax", "call~FOO", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "xor~eax,eax"]], [0, 0, 413, 0, 1, 7, 1, 2, 21, 28, 0.004806699241831658, ["mov     r14, [rbp+dst_name]", "mov     byte ptr [rbp+dst_backup], r9b", "mov     rdi, r14; name", "call    _unlink", "test    eax, eax", "movzx   r9d, byte ptr [rbp+dst_backup]", "jz      loc_81F3"], ["mov~r14,[rbp+0]", "mov~[yte ptr [rbp+0],r9b", "mov~rdi,r14", "call~FOO", "test~eax,eax", "movzx~r9d,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 412, 0, 1, 5, 0, 2, 22, 28, 0.0005498328914353051, ["call    ___errno_location", "cmp     dword ptr [rax], 2", "mov     r15, rax", "movzx   r9d, byte ptr [rbp+dst_backup]", "jz      loc_81F3"], ["call~FOO", "cmp~<TAG>,0", "mov~r15,rax", "movzx~r9d,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 5, 0, 0, 2, 0, 1, 35, -1, 0.001533944879570089, ["mov     rsi, [rbp+dst_name]", "jmp     loc_6365"], ["mov~rsi,[rbp+0]", "jmp~FOO"]], [2, 0, 509, 0, 0, 4, 1, 1, 21, 38, 4.723737543046963e-05, ["movzx   r12d, byte ptr [x_0+18h]", "mov     eax, 1", "xor     r12d, 1", "jmp     loc_71FC"], ["movzx~r12d,[yte ptr [x_0+0]", "mov~eax,0", "xor~r12d,0", "jmp~FOO"]], [1, 0, 509, 0, 0, 3, 1, 1, 23, 38, 0.0007085606314570444, ["movzx   r12d, byte ptr [x_0+18h]", "xor     r12d, 1", "jmp     loc_71FC"], ["movzx~r12d,[yte ptr [x_0+0]", "xor~r12d,0", "jmp~FOO"]], [0, 0, 467, 0, 0, 2, 1, 1, 18, 30, 0.002363138593443655, ["test    r13b, r13b", "jnz     loc_675A"], ["test~r13b,r13b", "jnz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 31, -1, 0.0028837655807149604, ["cmp     [rbp+restore_dst_mode], 0", "jz      loc_62C6"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 506, 0, 0, 1, 0, 0, 21, 36, 0.007056400410406444, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [4, 0, 371, 0, 4, 22, 4, 4, 20, 28, 0.008036702932780707, ["mov     dst_lstat_sb, [rbp+src_name]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     dst_lstat_sb, [rbp+dst_name]; arg", "mov     esi, 4; s", "xor     edi, edi; n", "mov     r13, rax", "call    quotearg_n_style", "lea     rsi, aCannotCreateSy; \"cannot create symbolic link %s to %s\"", "mov     r14, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, r13", "mov     dst_lstat_sb, rax; format", "mov     rcx, r14", "mov     esi, r12d; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "nop     dword ptr [rax+rax+00h]"], ["mov~dst_lstat_sb,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~dst_lstat_sb,[rbp+0]", "mov~esi,0", "xor~edi,edi", "mov~r13,rax", "call~FOO", "lea~rsi,<TAG>", "mov~r14,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r8,r13", "mov~dst_lstat_sb,rax", "mov~rcx,r14", "mov~esi,r12d", "xor~edi,edi", "xor~eax,eax", "call~FOO", "nop~[word ptr [rax+0]"]], [2, 0, 371, 0, 0, 4, 1, 1, 32, 36, 0.07496351378349367, ["mov     eax, dword ptr [rbp+timespec.tv_nsec+10h]", "and     eax, 0F000h", "cmp     eax, 8000h", "jz      loc_986F"], ["mov~eax,[word ptr [rbp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 371, 1, 1, 7, 1, 1, 44, 34, 0.0023563662098693944, ["mov     rdx, [rbp+length]", "mov     rsi, [rbp+n_bytes]; offset", "mov     edi, dword ptr [rbp+dest_link_val]; fd", "sub     rdx, rsi; length", "call    punch_hole", "test    eax, eax", "jns     loc_903A"], ["mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,[word ptr [rbp+0]", "sub~rdx,rsi", "call~FOO", "test~eax,eax", "jns~FOO"]], [0, 0, 371, 0, 0, 2, 1, 1, 43, 35, 0.0027601695804846996, ["test    r12b, r12b", "jz      loc_903A"], ["test~r12b,r12b", "jz~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 21, 27, 0.15587064070134804, ["cmp     byte ptr [rbx+25h], 0", "jnz     loc_6B90"], ["cmp~[yte ptr [rbx+0],0", "jnz~FOO"]], [0, 0, 371, 0, 1, 7, 2, 2, 20, 28, 0.006577677546500878, ["mov     r8d, dword ptr [rbp+dest_link_val]; dereference", "mov     rsi, [rbp+dst_name]; dst_name", "xor     ecx, ecx; verbose", "mov     rdi, [rbp+src_name]; src_name", "call    create_hard_link", "test    al, al", "jz      un_backup"], ["mov~r8d,[word ptr [rbp+0]", "mov~rsi,[rbp+0]", "xor~ecx,ecx", "mov~rdi,[rbp+0]", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 371, 0, 2, 9, 4, 3, 21, 28, 0.009781438251099665, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, r12", "mov     dst_lstat_sb, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     un_backup"], ["xor~edi,edi", "call~FOO", "mov~rcx,r12", "mov~dst_lstat_sb,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 371, 0, 3, 11, 3, 4, 22, 28, 0.017416877457105413, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r12, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r13", "mov     dst_lstat_sb, r12; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     un_backup"], ["xor~edi,edi", "call~FOO", "mov~r12,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r13", "mov~dst_lstat_sb,r12", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 371, 0, 0, 3, 1, 1, 24, 28, 0.0076595658224890536, ["movzx   r14d, byte ptr [rbx+26h]", "test    r14b, r14b", "jnz     un_backup"], ["movzx~r14d,[yte ptr [rbx+0]", "test~r14b,r14b", "jnz~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 23, 28, 0.00318217373195583, ["cmp     byte ptr [x_0+26h], 0", "jnz     un_backup"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [2, 0, 371, 0, 5, 19, 3, 6, 25, 28, 0.09184114019849855, ["mov     rsi, [rbp+src_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aFailedToCloseS; \"failed to close %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r12, rax", "call    _dcgettext", "mov     r13, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "xor     edi, edi; status", "mov     rcx, r12", "mov     rdx, r13; format", "xor     eax, eax", "call    _error", "mov     rdi, [rbp+restore_dst_mode_0]; ptr", "call    free", "jmp     un_backup"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r12,rax", "call~FOO", "mov~r13,rax", "call~FOO", "mov~esi,<TAG>", "xor~edi,edi", "mov~rcx,r12", "mov~rdx,r13", "xor~eax,eax", "call~FOO", "mov~rdi,[rbp+0]", "call~FOO", "jmp~FOO"]], [2, 0, 371, 0, 4, 17, 3, 5, 28, 28, 0.004838021515862615, ["mov     rdi, r12; ptr", "call    free", "mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aCannotCreateSy_0; \"cannot create symbolic link %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r12, rax", "call    _dcgettext", "mov     esi, dword ptr [rbp+symlink_err]; errnum", "mov     rdx, rax; format", "mov     rcx, r12", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     un_backup"], ["mov~rdi,r12", "call~FOO", "mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r12,rax", "call~FOO", "mov~esi,[word ptr [rbp+0]", "mov~rdx,rax", "mov~rcx,r12", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 371, 0, 3, 15, 4, 4, 32, 28, 0.0037028007192271353, ["lea     rsi, aFailedToPreser_1; \"failed to preserve ownership for %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r12, rax", "call    ___errno_location", "mov     rcx, [rbp+dst_name]", "mov     esi, [rax]; errnum", "xor     edi, edi; status", "xor     eax, eax", "mov     rdx, r12; format", "call    _error", "movzx   r8d, byte ptr [x_0+24h]", "test    r8b, r8b", "jnz     un_backup"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r12,rax", "call~FOO", "mov~rcx,[rbp+0]", "mov~esi,<TAG>", "xor~edi,edi", "xor~eax,eax", "mov~rdx,r12", "call~FOO", "movzx~r8d,[yte ptr [x_0+0]", "test~r8b,r8b", "jnz~FOO"]], [1, 1, 450, 0, 0, 4, 1, 1, 18, 29, 0.013711113820064541, ["mov     edx, [rbp+var_268]", "and     edx, 0F000h", "cmp     edx, 4000h", "jz      loc_7FD6"], ["mov~edx,[rbp+0]", "and~edx,0", "cmp~edx,<STR>", "jz~FOO"]], [1, 0, 453, 0, 0, 2, 0, 1, 18, 29, 0.001863252030868524, ["cmp     byte ptr [x_0+18h], 0", "jnz     loc_7A07"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 452, 0, 0, 3, 1, 1, 17, 30, 0.009422078647690447, ["mov     r15d, [x_0]", "test    r15d, r15d", "jnz     loc_7A07"], ["mov~r15d,<TAG>", "test~r15d,r15d", "jnz~FOO"]], [0, 0, 627, 0, 0, 2, 1, 1, 1, 34, 1.5237863042086977e-05, ["test    r15d, r15d", "js      loc_5DA0"], ["test~r15d,r15d", "js~FOO"]], [2, 0, 628, 1, 0, 30, 2, 1, 0, 33, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "mov     r14d, edx", "push    rbx", "mov     rbx, x_0", "sub     rsp, 398h", "mov     rax, [rbp+first_dir_created_per_command_line_arg]", "mov     r13d, [rbp+command_line_arg]", "mov     [rbp+parent], parent_0", "mov     parent_0, [rbp+rename_succeeded]", "mov     [rbp+src_name], src_name_0", "mov     [rbp+dst_name], dst_name_0", "mov     [rbp+format], rax", "mov     rax, [rbp+copy_into_self]", "mov     [rbp+symlink_err], rcx", "mov     [rbp+restore_dst_mode_0], ancestors_0", "mov     rcx, fs:28h", "mov     [rbp+var_38], rcx", "xor     ecx, ecx", "mov     byte ptr [rax], 0", "movzx   r12d, byte ptr [x_0+18h]", "mov     qword ptr [rbp+var_340], rax", "mov     [rbp+restore_dst_mode], r13b", "mov     r15d, [x_0+34h]", "test    r12b, r12b", "jz      short loc_5B21"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "mov~r14d,edx", "push~rbx", "mov~rbx,x_0", "sub~rsp,0", "mov~rax,[rbp+0]", "mov~r13d,[rbp+0]", "mov~[rbp+0],parent_0", "mov~parent_0,[rbp+0]", "mov~[rbp+0],src_name_0", "mov~[rbp+0],dst_name_0", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rcx", "mov~[rbp+0],ancestors_0", "mov~rcx,<TAG>", "mov~[rbp+0],rcx", "xor~ecx,ecx", "mov~<TAG>,0", "movzx~r12d,[yte ptr [x_0+0]", "mov~[word ptr [rbp+0],rax", "mov~[rbp+0],r13b", "mov~r15d,[x_0+0]", "test~r12b,r12b", "jz~FOO"]], [3, 0, 386, 0, 0, 4, 0, 1, 24, 25, 0.0034128580474540914, ["mov     [rbp+dst_backup], 0", "mov     r14d, 1", "mov     r15d, 11h", "jmp     loc_5EE9"], ["mov~[rbp+0],0", "mov~r14d,0", "mov~r15d,0", "jmp~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 22, -1, 0.006422759272239661, ["cmp     [rbp+earlier_file], 0", "jz      loc_72C0"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 371, 0, 0, 4, 1, 1, 29, 31, 0.009358587551681752, ["movzx   eax, byte ptr [x_0+1Dh]", "test    al, al", "mov     byte ptr [rbp+symlink_err], al", "jnz     loc_9203"], ["movzx~eax,[yte ptr [x_0+0]", "test~al,al", "mov~[yte ptr [rbp+0],al", "jnz~FOO"]], [0, 0, 7, 0, 1, 6, 2, 2, 32, -1, 0.0015148975507674803, ["mov     esi, [rbp+dst_mode]", "or      esi, [rbp+omitted_permissions]; mode", "mov     rdi, [rbp+dst_name]; file", "call    _chmod", "test    eax, eax", "jz      loc_62C6"], ["mov~esi,[rbp+0]", "or~esi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 417, 0, 0, 2, 0, 1, 22, 27, 0.0029646109096326994, ["cmp     dword ptr [x_0+4], 2", "jnz     loc_72A7"], ["cmp~[word ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 419, 0, 0, 2, 0, 1, 21, 28, 0.0020262125106241765, ["cmp     byte ptr [x_0+22h], 0", "jz      loc_8226"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 418, 0, 0, 2, 0, 0, 22, 28, 0.00010920468513495667, ["cmp     [rbp+dst_sb.st_nlink], 1", "jbe     loc_8226"], ["cmp~[rbp+0],0", "jbe~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 19, -1, 0.007813214274830097, ["mov     rax, [rbp+dst_backup]", "test    rax, rax", "jz      loc_5D90"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 18, 27, 0.007250683164193053, ["cmp     byte ptr [x_0+25h], 0", "jz      loc_6A28"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 10, 0, 1, 4, 0, 2, 23, -1, 0.0, ["mov     rsi, [rbp+src_mode]; dev", "mov     rdi, [rbp+ino]; ino", "call    forget_created", "jmp     loc_6A28"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "jmp~FOO"]], [0, 0, 476, 0, 0, 1, 0, 0, 16, 34, 0.0011987118926441755, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 477, 0, 1, 10, 1, 2, 15, 35, 0.00032507441156452217, ["mov     rsi, [rbp+dst_name]; dst_name", "lea     dst_lstat_sb, [rbp+dst_sb.st_mode]; dst_sb", "mov     rdi, x_0; x", "mov     byte ptr [rbp+earlier_file], r9b", "mov     byte ptr [rbp+dst_backup], r8b", "call    overwrite_ok", "test    al, al", "movzx   r8d, byte ptr [rbp+dst_backup]", "movzx   r9d, byte ptr [rbp+earlier_file]", "jz      loc_62C0"], ["mov~rsi,[rbp+0]", "lea~dst_lstat_sb,[rbp+0]", "mov~rdi,x_0", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~al,al", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jz~FOO"]], [2, 0, 371, 0, 2, 12, 1, 3, 29, 31, 0.0006425298916080008, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     [rbp+dest_link_val], rax", "call    _dcgettext", "mov     rcx, [rbp+dest_link_val]", "mov     rdx, rax", "mov     esi, [r12]", "jmp     loc_7BC1"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~[rbp+0],rax", "call~FOO", "mov~rcx,[rbp+0]", "mov~rdx,rax", "mov~esi,<TAG>", "jmp~FOO"]], [0, 0, 371, 0, 1, 4, 1, 2, 28, 32, 0.0065649793272991395, ["mov     rdi, [rbp+dst_name]; name", "call    _unlink", "test    eax, eax", "jnz     loc_9A06"], ["mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 416, 0, 0, 4, 1, 1, 23, 28, 0.0004723737543046963, ["mov     eax, [rbp+var_268]", "and     eax, 0F000h", "cmp     eax, 8000h", "jnz     loc_7E59"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [0, 0, 371, 0, 1, 5, 1, 2, 31, 29, 0.0054551549690671376, ["mov     rdi, x_0; x", "call    chown_failure_ok", "test    al, al", "movzx   r8d, byte ptr [rbp+dest_link_val]", "jz      loc_9A44"], ["mov~rdi,x_0", "call~FOO", "test~al,al", "movzx~r8d,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 406, 0, 0, 1, 0, 1, 24, 27, 0.0008520505084366967, ["jmp     loc_72A7"], ["jmp~FOO"]], [0, 0, 464, 0, 1, 10, 1, 2, 18, 32, 0.00125204441329148, ["mov     rdi, [x_0+40h]; ht", "mov     rsi, [rbp+dst_name]; file", "lea     dst_lstat_sb, [rbp+dst_sb]; stats", "mov     byte ptr [rbp+earlier_file], r9b", "mov     byte ptr [rbp+dst_backup], r8b", "call    seen_file", "test    al, al", "movzx   r8d, byte ptr [rbp+dst_backup]", "movzx   r9d, byte ptr [rbp+earlier_file]", "jnz     loc_8595"], ["mov~rdi,[x_0+0]", "mov~rsi,[rbp+0]", "lea~dst_lstat_sb,[rbp+0]", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~al,al", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jnz~FOO"]], [1, 0, 466, 0, 0, 2, 0, 1, 17, 30, 0.002673398415939482, ["cmp     r15d, 3", "jnz     loc_7210"], ["cmp~r15d,0", "jnz~FOO"]], [0, 0, 8, 0, 1, 5, 1, 2, 20, -1, 0.005097065187578093, ["mov     rsi, [rbp+dst_name]; new", "mov     rdi, rax; old", "call    _rename", "test    eax, eax", "jnz     loc_72E0"], ["mov~rsi,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 443, 0, 1, 9, 0, 2, 19, 29, 0.009726412634558796, ["mov     rdi, [rbp+src_name]; name", "mov     byte ptr [rbp+earlier_file], r9b", "mov     byte ptr [rbp+dst_backup], r8b", "call    last_component", "cmp     byte ptr [rax], 2Eh ; '.'", "mov     r14, rax", "movzx   r8d, byte ptr [rbp+dst_backup]", "movzx   r9d, byte ptr [rbp+earlier_file]", "jnz     loc_67DD"], ["mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "cmp~<TAG>,0", "mov~r14,rax", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jnz~FOO"]], [0, 0, 444, 0, 0, 1, 0, 1, 20, 30, 0.00021079043874886984, ["jmp     loc_7A1F"], ["jmp~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 21, -1, 0.0012939485366572192, ["cmp     byte ptr [rbx+2Eh], 0", "jz      loc_5D90"], ["cmp~[yte ptr [rbx+0],0", "jz~FOO"]], [0, 1, 462, 0, 0, 2, 0, 1, 19, 31, 0.0016329909893436543, ["cmp     r12d, 4000h", "jz      short loc_7270"], ["cmp~r12d,<STR>", "jz~FOO"]], [1, 0, 442, 0, 0, 2, 0, 1, 20, 29, 0.0009345889332480012, ["mov     eax, 1", "jmp     loc_67A2"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 6, 0, 4, 16, 3, 4, 33, -1, 7.111002752973922e-05, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aPreservingPerm; \"preserving permissions for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, rax", "call    _dcgettext", "mov     r13, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r14", "mov     dst_lstat_sb, r13; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,rax", "call~FOO", "mov~r13,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r14", "mov~dst_lstat_sb,r13", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [2, 0, 371, 0, 1, 7, 0, 2, 21, 29, 0.0019123518117818965, ["mov     rsi, [rbp+src_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     edx, 5", "mov     r13, rax", "lea     rsi, aCannotOpenSFor; \"cannot open %s for reading\"", "jmp     loc_6F5F"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~edx,0", "mov~r13,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [2, 0, 371, 1, 1, 14, 3, 2, 20, 30, 0.16584636170623326, ["mov     eax, [rbp+var_268]", "xor     esi, esi", "cmp     dword ptr [x_0+4], 2", "mov     rdi, [rbp+src_name]; file", "mov     [rbp+var_340], eax", "movzx   eax, byte ptr [x_0+23h]", "setz    sil", "shl     esi, 11h; flags", "mov     byte ptr [rbp+format], al", "xor     eax, eax", "call    open_safer", "test    eax, eax", "mov     dword ptr [rbp+symlink_err], eax", "js      loc_824B"], ["mov~eax,[rbp+0]", "xor~esi,esi", "cmp~[word ptr [x_0+0],0", "mov~rdi,[rbp+0]", "mov~[rbp+0],eax", "movzx~eax,[yte ptr [x_0+0]", "setz~sil", "shl~esi,0", "mov~[yte ptr [rbp+0],al", "xor~eax,eax", "call~FOO", "test~eax,eax", "mov~[word ptr [rbp+0],eax", "js~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 29, -1, 0.0014806123589227846, ["cmp     byte ptr [rbx+24h], 0", "jnz     loc_5D90"], ["cmp~[yte ptr [rbx+0],0", "jnz~FOO"]], [1, 0, 7, 0, 1, 8, 1, 2, 28, -1, 0.004262792186023831, ["mov     r8d, [rbp+mode]; mode", "mov     rdx, [rbp+dst_name]; dst_name", "mov     ecx, 0FFFFFFFFh; dest_desc", "mov     rdi, [rbp+src_name]; src_name", "mov     esi, ecx; source_desc", "call    copy_acl", "test    eax, eax", "jnz     loc_626A"], ["mov~r8d,[rbp+0]", "mov~rdx,[rbp+0]", "mov~ecx,0", "mov~rdi,[rbp+0]", "mov~esi,ecx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 456, 0, 0, 1, 0, 0, 16, 30, 0.022879792449018065, ["mov     r15d, [x_0]"], ["mov~r15d,<TAG>"]], [0, 0, 3, 0, 0, 1, 0, 1, 30, -1, 7.618931521043489e-06, ["jmp     short loc_62C6"], ["jmp~FOO"]], [0, 0, 371, 0, 1, 5, 1, 2, 16, 26, 0.014919053085328638, ["mov     rsi, [rbp+earlier_file]; dest", "mov     rdi, [rbp+src_name]; source", "call    same_name", "test    al, al", "jz      loc_7A60"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 455, 0, 0, 3, 1, 1, 17, 29, 0.04428108890898029, ["movzx   eax, byte ptr [x_0+18h]", "test    al, al", "jnz     loc_7C30"], ["movzx~eax,[yte ptr [x_0+0]", "test~al,al", "jnz~FOO"]], [0, 0, 467, 0, 0, 3, 1, 1, 16, 30, 0.022340118132944144, ["test    r13b, r13b", "mov     r15d, [x_0]", "jz      loc_7273"], ["test~r13b,r13b", "mov~r15d,<TAG>", "jz~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 34, 38, 0.002565040278751308, ["cmp     eax, 2", "jnz     loc_8A14"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 444, 0, 0, 2, 1, 1, 18, 28, 0.02549647215252314, ["test    r15d, r15d", "jnz     loc_676E"], ["test~r15d,r15d", "jnz~FOO"]], [1, 0, 372, 0, 0, 2, 0, 1, 11, 22, 0.10848116882310654, ["cmp     byte ptr [x_0+18h], 0", "jz      loc_5F1B"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 387, 0, 0, 2, 1, 1, 10, 23, 0.13018801265532753, ["test    r15d, r15d", "jz      loc_6280"], ["test~r15d,r15d", "jz~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 19, 25, 0.0026602769227643515, ["cmp     eax, 3", "jnz     short loc_7A95"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 12, -1, 0.011731884720486798, ["cmp     byte ptr [x_0+2Eh], 0", "jnz     loc_6E10"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 371, 0, 1, 5, 1, 2, 16, 27, 0.008885931614728138, ["mov     rsi, [rbp+dst_name]; new", "mov     rdi, [rbp+src_name]; old", "call    _rename", "test    eax, eax", "jz      loc_628A"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 371, 0, 1, 4, 1, 2, 17, 26, 0.000909192494844523, ["call    ___errno_location", "mov     r15d, [rax]", "test    r15d, r15d", "jz      loc_628A"], ["call~FOO", "mov~r15d,<TAG>", "test~r15d,r15d", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 13, -1, 0.009232875181584534, ["cmp     byte ptr [x_0+21h], 0", "jnz     loc_6DF0"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [2, 0, 12, 0, 3, 13, 2, 4, 13, -1, 0.0, ["lea     rsi, aRenamed; \"renamed \"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     edi, 1", "mov     rsi, rax", "xor     eax, eax", "call    ___printf_chk", "mov     dst_lstat_sb, [rbp+dst_backup]; backup_dst_name", "mov     rsi, [rbp+dst_name]; dst", "mov     rdi, [rbp+src_name]; src", "call    emit_verbose", "jmp     loc_6294"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~edi,0", "mov~rsi,rax", "xor~eax,eax", "call~FOO", "mov~dst_lstat_sb,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 29, -1, 3.4285191844695696e-05, ["jmp     loc_62C6"], ["jmp~FOO"]], [1, 1, 421, 0, 0, 6, 2, 1, 19, 27, 0.029590801297137235, ["mov     edx, [rbp+dst_sb.st_mode]", "and     edx, 0F000h", "cmp     edx, 4000h", "setz    r12b", "or      r12b, al", "jz      loc_7E3B"], ["mov~edx,[rbp+0]", "and~edx,0", "cmp~edx,<STR>", "setz~r12b", "or~r12b,al", "jz~FOO"]], [1, 0, 441, 0, 0, 6, 2, 1, 21, 28, 0.0037612125275551353, ["xor     edx, edx", "cmp     byte ptr [srcbase+1], 2Eh ; '.'", "setz    dl", "movzx   edx, byte ptr [srcbase+dst_lstat_sb+1]", "test    dl, dl", "jz      loc_7288"], ["xor~edx,edx", "cmp~[yte ptr [srcbase+0],0", "setz~dl", "movzx~edx,[yte ptr [srcbase+0]", "test~dl,dl", "jz~FOO"]], [1, 0, 440, 0, 0, 2, 0, 1, 22, 28, 0.000581578439439653, ["cmp     dl, 2Fh ; '/'", "jz      loc_7288"], ["cmp~dl,0", "jz~FOO"]], [1, 0, 10, 0, 1, 6, 1, 2, 14, -1, 0.0, ["mov     rdi, [rbp+dst_name]; dst_name", "mov     rcx, x_0; x", "mov     edx, 1; recurse", "xor     esi, esi; process_local", "call    set_file_security_ctx", "jmp     loc_629E"], ["mov~rdi,[rbp+0]", "mov~rcx,x_0", "mov~edx,0", "xor~esi,esi", "call~FOO", "jmp~FOO"]], [5, 0, 4, 0, 4, 21, 3, 5, 22, -1, 0.0, ["mov     dst_lstat_sb, [rbp+dst_name]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     dst_lstat_sb, [rbp+dst_backup]; arg", "xor     edi, edi; n", "mov     esi, 4; s", "mov     r12, rax", "call    quotearg_n_style", "lea     rsi, aSSUnbackup; \"%s -> %s (unbackup)\\n\"", "mov     rbx, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, r12", "mov     rsi, rax", "mov     dst_lstat_sb, rbx", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_5D90"], ["mov~dst_lstat_sb,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~dst_lstat_sb,[rbp+0]", "xor~edi,edi", "mov~esi,0", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,r12", "mov~rsi,rax", "mov~dst_lstat_sb,rbx", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [3, 0, 371, 2, 1, 16, 1, 2, 36, 32, 0.023858684058147683, ["lea     rax, [rbp+var_2F8]", "sub     rsp, 8", "mov     r8, [rbp+hole_size]; hole_size", "mov     rcx, [rbp+b]; buf_size", "mov     rdx, [rbp+buf]; buf", "mov     esi, dword ptr [rbp+dest_link_val]; dest_fd", "mov     edi, dword ptr [rbp+symlink_err]; src_fd", "push    rax; last_write_made_hole", "push    [rbp+parent]; total_n_read", "push    0FFFFFFFFFFFFFFFFh; max_n_read", "push    [rbp+dst_name]; dst_name", "push    [rbp+src_name]; src_name", "call    sparse_copy", "add     rsp, 30h", "test    al, al", "jz      loc_8D12"], ["lea~rax,[rbp+0]", "sub~rsp,0", "mov~r8,[rbp+0]", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~esi,[word ptr [rbp+0]", "mov~edi,[word ptr [rbp+0]", "push~rax", "push~[rbp+0]", "push~0", "push~[rbp+0]", "push~[rbp+0]", "call~FOO", "add~rsp,0", "test~al,al", "jz~FOO"]], [3, 0, 371, 0, 0, 8, 1, 1, 40, 33, 0.005090716077977224, ["xor     r9d, r9d", "cmp     dword ptr [rbx+0Ch], 3", "mov     eax, 0", "setz    r9b", "cmp     [rbp+var_3A5], 0", "cmovnz  rax, [rbp+hole_size]", "mov     [rbp+hole_size], rax", "jmp     loc_9581"], ["xor~r9d,r9d", "cmp~[word ptr [rbx+0],0", "mov~eax,0", "setz~r9b", "cmp~[rbp+0],0", "cmovnz~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 371, 0, 0, 6, 1, 1, 35, 33, 0.009857204292336708, ["xor     r9d, r9d", "cmp     dword ptr [x_0+0Ch], 3", "lea     rax, [rbp+dev]", "mov     [rbp+parent], rax", "setz    r9b", "jmp     loc_9581"], ["xor~r9d,r9d", "cmp~[word ptr [x_0+0],0", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "setz~r9b", "jmp~FOO"]], [2, 0, 371, 0, 0, 6, 1, 0, 37, 33, 0.007366660232902271, ["xor     r9d, r9d", "cmp     dword ptr [x_0+0Ch], 3", "lea     rax, [rbp+dev]", "mov     [rbp+hole_size], 0", "mov     [rbp+parent], rax", "setz    r9b; punch_holes"], ["xor~r9d,r9d", "cmp~[word ptr [x_0+0],0", "lea~rax,[rbp+0]", "mov~[rbp+0],0", "mov~[rbp+0],rax", "setz~r9b"]], [2, 0, 405, 0, 0, 4, 0, 1, 20, 26, 0.06196970825700301, ["mov     r14d, r8d", "mov     r15d, 11h", "mov     [rbp+dst_backup], 0", "jmp     loc_5E0E"], ["mov~r14d,r8d", "mov~r15d,0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 1, 422, 0, 0, 4, 1, 1, 20, 27, 0.004390197652014614, ["mov     eax, [rbp+dst_sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_72A7"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [0, 0, 445, 0, 0, 2, 1, 1, 19, 27, 0.027677179663435143, ["test    r15d, r15d", "jz      loc_72A7"], ["test~r15d,r15d", "jz~FOO"]], [1, 0, 392, 0, 0, 2, 0, 1, 12, 23, 0.002672551867992699, ["cmp     byte ptr [x_0+2Eh], 0", "jnz     loc_6490"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 401, 0, 0, 3, 1, 1, 11, 24, 0.005356955407240354, ["mov     edx, [x_0]", "test    edx, edx", "jnz     loc_6AB8"], ["mov~edx,<TAG>", "test~edx,edx", "jnz~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 14, -1, 0.0006844582020579338, ["mov     r12d, 1"], ["mov~r12d,0"]], [0, 0, 374, 0, 1, 6, 1, 2, 15, 29, 0.07179790417302984, ["mov     rdx, [rbp+src_mode]; dev", "mov     rsi, [rbp+ino]; ino", "mov     rdi, [rbp+dst_name]; name", "call    remember_copied", "test    earlier_file_0, earlier_file_0", "jz      loc_62C0"], ["mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~earlier_file_0,earlier_file_0", "jz~FOO"]], [1, 0, 373, 0, 1, 8, 1, 2, 16, 28, 0.07238202225630982, ["movzx   ecx, byte ptr [x_0+2Eh]; verbose", "mov     r8d, dword ptr [rbp+dest_link_val]; dereference", "mov     edx, 1; replace", "mov     rsi, [rbp+dst_name]; dst_name", "mov     rdi, earlier_file_0; src_name", "call    create_hard_link", "test    al, al", "jnz     loc_62C0"], ["movzx~ecx,[yte ptr [x_0+0]", "mov~r8d,[word ptr [rbp+0]", "mov~edx,0", "mov~rsi,[rbp+0]", "mov~rdi,earlier_file_0", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 479, 0, 0, 3, 0, 1, 13, 35, 0.003388420022261792, ["mov     eax, [x_0+8]", "cmp     eax, 2", "jz      loc_62C0"], ["mov~eax,[x_0+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 475, 0, 0, 2, 1, 1, 13, 33, 0.05018344492447744, ["test    r14b, r14b", "jnz     loc_62C0"], ["test~r14b,r14b", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 13, -1, 0.0015012106844993199, ["cmp     [rbp+symlink_err], 0", "jz      loc_62C0"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 4, 0, 0, 3, 0, 1, 14, -1, 0.0, ["mov     rax, [rbp+symlink_err]", "mov     byte ptr [rax], 1", "jmp     loc_62C0"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 18, -1, 0.0007306555328680705, ["jmp     loc_62C0"], ["jmp~FOO"]], [0, 0, 387, 0, 0, 2, 1, 1, 13, 22, 0.002911278388985395, ["test    r15d, r15d", "jz      loc_5F1B"], ["test~r15d,r15d", "jz~FOO"]], [0, 0, 386, 0, 0, 1, 0, 1, 14, 25, 0.00034285191844695697, ["jmp     loc_5EE9"], ["jmp~FOO"]], [0, 0, 618, 0, 0, 4, 1, 1, 3, 32, 0.002086317414845742, ["mov     rax, [rbp+symlink_err]", "mov     r14d, r12d", "test    rax, rax", "jz      short loc_5DD8"], ["mov~rax,[rbp+0]", "mov~r14d,r12d", "test~rax,rax", "jz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 7, -1, 0.0031796340881154826, ["mov     rsi, [rbp+var_38]", "xor     rsi, fs:28h", "mov     eax, r12d", "jnz     loc_8FA4"], ["mov~rsi,[rbp+0]", "xor~rsi,<TAG>", "mov~eax,r12d", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 16, -1, 0.0015631265966498955, ["xor     r12d, r12d", "jmp     loc_62C6"], ["xor~r12d,r12d", "jmp~FOO"]], [4, 0, 3, 0, 4, 22, 5, 5, 15, -1, 0.00014475969889982628, ["mov     dst_lstat_sb, [rbp+dst_name]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     dst_lstat_sb, [rbp+src_name]; arg", "xor     edi, edi; n", "mov     esi, 4; s", "mov     r13, rax", "call    quotearg_n_style", "lea     rsi, aWillNotCopySTh; \"will not copy %s through just-created s\"...", "mov     x_0, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r8, r13", "mov     dst_lstat_sb, rax; format", "mov     rcx, rbx", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_62C6"], ["mov~dst_lstat_sb,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~dst_lstat_sb,[rbp+0]", "xor~edi,edi", "mov~esi,0", "mov~r13,rax", "call~FOO", "lea~rsi,<TAG>", "mov~x_0,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r8,r13", "mov~dst_lstat_sb,rax", "mov~rcx,rbx", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 3, 12, 4, 4, 6, -1, 0.00015618809618139152, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "mov     dst_lstat_sb, rbx; format", "xor     edi, edi; status", "xor     eax, eax", "xor     r12d, r12d", "call    _error", "jmp     loc_62C6"], ["xor~edi,edi", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "mov~dst_lstat_sb,rbx", "xor~edi,edi", "xor~eax,eax", "xor~r12d,r12d", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 1, 6, 3, 2, 9, -1, 3.8094657605217443e-05, ["mov     rcx, r13", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_62C6"], ["mov~rcx,r13", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 1, 6, 0, 2, 17, -1, 7.618931521043489e-06, ["mov     rdi, [x_0+40h]; ht", "mov     rsi, [rbp+dst_name]; file", "lea     dst_lstat_sb, [rbp+src_mode]; stats", "mov     r12d, r13d", "call    record_file", "jmp     loc_62C6"], ["mov~rdi,[x_0+0]", "mov~rsi,[rbp+0]", "lea~dst_lstat_sb,[rbp+0]", "mov~r12d,r13d", "call~FOO", "jmp~FOO"]], [2, 0, 3, 0, 3, 16, 5, 4, 17, -1, 4.571358912626093e-05, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "xor     r12d, r12d", "call    quotearg_style", "lea     rsi, aCannotOverwrit; \"cannot overwrite directory %s with non-\"...", "mov     x_0, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     dst_lstat_sb, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_62C6"], ["mov~rsi,[rbp+0]", "mov~edi,0", "xor~r12d,r12d", "call~FOO", "lea~rsi,<TAG>", "mov~x_0,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~dst_lstat_sb,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 3, 0, 3, 15, 4, 4, 9, -1, 4.571358912626093e-05, ["mov     rsi, [rbp+src_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aWarningSourceF; \"warning: source file %s specified more \"...", "mov     x_0, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rbx", "mov     dst_lstat_sb, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_62C6"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~x_0,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rbx", "mov~dst_lstat_sb,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [6, 0, 3, 0, 4, 25, 5, 5, 17, -1, 0.00015618809618139152, ["mov     dst_lstat_sb, cs:top_level_dst_name; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     dst_lstat_sb, cs:top_level_src_name; arg", "mov     esi, 4; s", "xor     edi, edi; n", "mov     r12, rax", "call    quotearg_n_style", "lea     rsi, aCannotMoveSToA; \"cannot move %s to a subdirectory of its\"...", "mov     x_0, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, r12", "mov     dst_lstat_sb, rax; format", "mov     rcx, rbx", "xor     eax, eax", "xor     esi, esi; errnum", "xor     edi, edi; status", "call    _error", "mov     rax, qword ptr [rbp+var_340]", "mov     r12d, 1", "mov     byte ptr [rax], 1", "jmp     loc_62C6"], ["mov~dst_lstat_sb,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~dst_lstat_sb,<TAG>", "mov~esi,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "mov~x_0,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r8,r12", "mov~dst_lstat_sb,rax", "mov~rcx,rbx", "xor~eax,eax", "xor~esi,esi", "xor~edi,edi", "call~FOO", "mov~rax,[word ptr [rbp+0]", "mov~r12d,0", "mov~<TAG>,0", "jmp~FOO"]], [2, 0, 3, 0, 3, 15, 3, 4, 23, -1, 0.00011047450705513058, ["mov     rsi, r14; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     x_0, rax", "call    _dcgettext", "mov     esi, [r15]; errnum", "mov     rdx, rax; format", "mov     rcx, rbx", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_62C6"], ["mov~rsi,r14", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~x_0,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "mov~rcx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [3, 0, 3, 0, 3, 18, 5, 4, 29, -1, 2.7936082243826124e-05, ["mov     rdx, [rbp+src_name]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     rdx, [rbp+dst_name]; arg", "mov     r12, rax", "mov     esi, 4; s", "xor     edi, edi; n", "call    quotearg_n_style", "mov     r8, r12", "mov     rcx, rax", "mov     rdx, fmt; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "xor     r12d, r12d", "jmp     loc_62C6"], ["mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rdx,[rbp+0]", "mov~r12,rax", "mov~esi,0", "xor~edi,edi", "call~FOO", "mov~r8,r12", "mov~rcx,rax", "mov~rdx,fmt", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "xor~r12d,r12d", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 31, -1, 1.3968041121913062e-05, ["jmp     loc_62C6"], ["jmp~FOO"]], [2, 0, 371, 0, 0, 7, 1, 1, 27, 32, 0.011639822631274188, ["mov     eax, dword ptr [rbp+dest_link_val]", "shr     eax, 1Fh", "cmp     r8d, 15h", "setz    dl", "and     dl, al", "mov     r9d, edx", "jz      loc_93D6"], ["mov~eax,[word ptr [rbp+0]", "shr~eax,0", "cmp~r8d,0", "setz~dl", "and~dl,al", "mov~r9d,edx", "jz~FOO"]], [1, 0, 371, 0, 1, 8, 1, 2, 28, 33, 0.005348489927772529, ["mov     rsi, [rbp+dst_name]; filename", "lea     rdx, [rbp+timespec]; stat_buf", "mov     edi, 1; ver", "mov     dword ptr [rbp+parent], r8d", "call    ___lxstat", "test    eax, eax", "mov     r8d, dword ptr [rbp+parent]", "jnz     short loc_92C2"], ["mov~rsi,[rbp+0]", "lea~rdx,[rbp+0]", "mov~edi,0", "mov~[word ptr [rbp+0],r8d", "call~FOO", "test~eax,eax", "mov~r8d,[word ptr [rbp+0]", "jnz~FOO"]], [2, 0, 371, 0, 0, 4, 1, 1, 29, 32, 0.004138349637846788, ["mov     eax, dword ptr [rbp+timespec.tv_nsec+10h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     short loc_92C2"], ["mov~eax,[word ptr [rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 371, 0, 1, 7, 1, 1, 31, 33, 0.00027682117859791343, ["mov     edx, dword ptr [rbp+restore_dst_mode_0]", "mov     rdi, [rbp+dst_name]; file", "mov     esi, 41h ; 'A'; flags", "xor     eax, eax", "call    open_safer", "mov     r8d, [r12]", "mov     dword ptr [rbp+dest_link_val], eax"], ["mov~edx,[word ptr [rbp+0]", "mov~rdi,[rbp+0]", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~r8d,<TAG>", "mov~[word ptr [rbp+0],eax"]], [1, 0, 371, 0, 0, 4, 1, 1, 20, 13, 0.038920041853330485, ["cmp     r15d, 0A000h", "setnz   r8b", "and     r8b, [x_0+14h]", "jnz     loc_7B10"], ["cmp~r15d,0", "setnz~r8b", "and~r8b,[x_0+0]", "jnz~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 19, 14, 0.2056628978352075, ["cmp     r15d, 8000h", "jz      loc_7B10"], ["cmp~r15d,0", "jz~FOO"]], [0, 0, 374, 0, 0, 4, 1, 1, 13, 26, 0.007647714151234086, ["test    r13b, r13b", "mov     dst_lstat_sb, [rbp+src_mode]; dev", "mov     rdi, [rbp+ino]; ino", "jz      loc_7390"], ["test~r13b,r13b", "mov~dst_lstat_sb,[rbp+0]", "mov~rdi,[rbp+0]", "jz~FOO"]], [1, 1, 384, 0, 0, 4, 1, 1, 12, 24, 0.008138373341189288, ["mov     eax, [rbp+mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_6AD0"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 371, 2, 1, 12, 1, 2, 36, 34, 0.009687894702980187, ["mov     rax, [rbp+b]", "lea     rdi, [r12+rax]; n", "call    xmalloc", "lea     rcx, [rax+r12-1]", "xor     edx, edx", "mov     [rbp+restore_dst_mode_0], rax", "mov     rax, rcx", "div     r12", "sub     rcx, rdx", "cmp     dword ptr [rbp+parent], 0", "mov     [rbp+buf], rcx", "jz      loc_955D"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "call~FOO", "lea~rcx,[rax+0]", "xor~edx,edx", "mov~[rbp+0],rax", "mov~rax,rcx", "div~,r12", "sub~rcx,rdx", "cmp~[word ptr [rbp+0],0", "mov~[rbp+0],rcx", "jz~FOO"]], [0, 0, 371, 0, 0, 2, 0, 1, 35, 35, 0.004542999556408876, ["mov     [rbp+b], rcx", "jmp     loc_8AB0"], ["mov~[rbp+0],rcx", "jmp~FOO"]], [0, 0, 371, 0, 0, 2, 0, 1, 35, 35, 0.004542999556408876, ["cmp     rsi, r8", "ja      loc_9551"], ["cmp~rsi,r8", "ja~FOO"]], [0, 0, 0, 0, 0, 8, 0, 0, 8, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [4, 0, 371, 0, 4, 22, 5, 5, 20, 28, 0.00026920224707686994, ["mov     rdx, [rbp+earlier_file]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     rdx, [rbp+dst_name]; arg", "xor     edi, edi; n", "mov     esi, 4; s", "mov     r13, rax", "call    quotearg_n_style", "lea     rsi, aWillNotCreateH; \"will not create hard link %s to directo\"...", "mov     r12, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r8, r13", "mov     rdx, rax; format", "mov     rcx, r12", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_6B86"], ["mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rdx,[rbp+0]", "xor~edi,edi", "mov~esi,0", "mov~r13,rax", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r8,r13", "mov~rdx,rax", "mov~rcx,r12", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 371, 0, 1, 8, 1, 2, 40, 33, 0.004897703146110789, ["mov     rdx, [rbp+src_name]; arg", "mov     esi, 3; s", "xor     edi, edi; n", "call    quotearg_n_style_colon", "mov     edx, 5", "mov     r12, rax", "lea     rsi, aSFailedToGetEx; \"%s: failed to get extents info\"", "jmp     loc_961A"], ["mov~rdx,[rbp+0]", "mov~esi,0", "xor~edi,edi", "call~FOO", "mov~edx,0", "mov~r12,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 39, 34, 0.011598553418868536, ["cmp     byte ptr [rbp+ptr], 0", "jz      loc_99B0"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [2, 0, 371, 0, 0, 5, 0, 1, 28, 31, 0.004340886234114528, ["mov     rsi, [rbp+dst_name]", "mov     r8d, 15h", "cmp     byte ptr [rsi], 0", "mov     rdi, rsi", "jz      loc_8ED7"], ["mov~rsi,[rbp+0]", "mov~r8d,0", "cmp~<TAG>,0", "mov~rdi,rsi", "jz~FOO"]], [1, 0, 372, 0, 0, 2, 0, 1, 14, 23, 0.002825777046360351, ["cmp     byte ptr [x_0+17h], 0", "jz      loc_6B98"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 374, 0, 0, 2, 0, 1, 13, 22, 0.010448941307137753, ["cmp     byte ptr [x_0+22h], 0", "jnz     loc_7AF0"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 372, 0, 1, 4, 0, 1, 14, 25, 0.0037400488288855628, ["mov     rsi, rdi; ino", "mov     rdi, [rbp+dst_name]; name", "call    remember_copied", "mov     [rbp+earlier_file], rax"], ["mov~rsi,rdi", "mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],rax"]], [2, 0, 582, 0, 1, 10, 1, 2, 10, 30, 0.018533558853706358, ["lea     r12, [rbp+dst_sb]", "mov     rdx, [rbp+dst_name]; filename", "mov     esi, 0FFFFFF9Ch; fildes", "mov     edi, 1; ver", "mov     byte ptr [rbp+dst_backup], r9b", "mov     rcx, r12; stat_buf", "call    ___fxstatat", "test    eax, eax", "movzx   r9d, byte ptr [rbp+dst_backup]", "jnz     loc_62F0"], ["lea~r12,[rbp+0]", "mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "mov~[yte ptr [rbp+0],r9b", "mov~rcx,r12", "call~FOO", "test~eax,eax", "movzx~r9d,[yte ptr [rbp+0]", "jnz~FOO"]], [2, 0, 4, 0, 1, 7, 0, 2, 21, -1, 0.0012482349475309582, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     edx, 5", "mov     r12, rax", "lea     rsi, aCannotUnBackup; \"cannot un-backup %s\"", "jmp     loc_637E"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~edx,0", "mov~r12,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 372, 0, 1, 4, 0, 2, 14, 25, 0.0037400488288855628, ["mov     rsi, dst_lstat_sb; dev", "call    src_to_dest_lookup", "mov     [rbp+earlier_file], rax", "jmp     loc_6AFD"], ["mov~rsi,dst_lstat_sb", "call~FOO", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 18, 15, 0.21452117555034092, ["cmp     byte ptr [x_0+17h], 0", "jz      loc_7308"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 29, 32, 0.004312315240910614, ["cmp     byte ptr [x_0+2Eh], 0", "jz      short loc_8E13"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [3, 0, 371, 1, 0, 10, 3, 1, 29, 31, 0.0, ["xor     eax, eax", "or      rcx, 0FFFFFFFFFFFFFFFFh", "xor     r8d, r8d", "repne scasb", "mov     rax, rcx", "not     rax", "cmp     byte ptr [rsi+rax-2], 2Fh ; '/'", "setnz   r8b", "add     r8d, 14h", "jmp     loc_8ED7"], ["xor~eax,eax", "or~rcx,0", "xor~r8d,r8d", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "cmp~[yte ptr [rsi+0],0", "setnz~r8b", "add~r8d,0", "jmp~FOO"]], [1, 0, 575, 0, 0, 3, 1, 1, 13, 27, 0.015814870122614004, ["xor     r9d, r9d", "cmp     r15d, 11h", "jz      loc_5C7B"], ["xor~r9d,r9d", "cmp~r15d,0", "jz~FOO"]], [0, 0, 576, 0, 0, 2, 1, 1, 13, 28, 0.0014552159205193063, ["xor     r8d, r8d", "jmp     loc_6312"], ["xor~r8d,r8d", "jmp~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 27, 6, 0.010145877142189579, ["cmp     byte ptr [x_0+2Dh], 1", "jnz     short loc_873A"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [2, 0, 371, 0, 1, 9, 1, 2, 26, 7, 0.023232661851501944, ["movzx   ecx, byte ptr [x_0+16h]; force", "mov     rdx, [rbp+dst_name]; dstname", "mov     r8d, 0FFFFFFFFh; symlinkat_errno", "mov     esi, 0FFFFFF9Ch; dstdir", "mov     rdi, src_link_val; srcname", "call    force_symlinkat", "test    eax, eax", "mov     dword ptr [rbp+symlink_err], eax", "jle     loc_8F68"], ["movzx~ecx,[yte ptr [x_0+0]", "mov~rdx,[rbp+0]", "mov~r8d,0", "mov~esi,0", "mov~rdi,src_link_val", "call~FOO", "test~eax,eax", "mov~[word ptr [rbp+0],eax", "jle~FOO"]], [0, 0, 622, 0, 0, 5, 2, 1, 2, 33, 0.002662816566604699, ["mov     rax, [rbp+symlink_err]", "test    r15d, r15d", "setz    r14b", "test    rax, rax", "jz      short loc_5B21"], ["mov~rax,[rbp+0]", "test~r15d,r15d", "setz~r14b", "test~rax,rax", "jz~FOO"]], [0, 0, 621, 0, 0, 1, 0, 0, 3, 33, 0.0, ["mov     [rax], r14b"], ["mov~<TAG>,r14b"]], [1, 1, 371, 0, 0, 4, 1, 1, 16, 27, 0.016093299742310805, ["mov     eax, [rbp+mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_6B0B"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [0, 0, 620, 0, 0, 2, 1, 1, 1, 32, 0.007368776602769227, ["test    r15d, r15d", "jz      loc_5DD8"], ["test~r15d,r15d", "jz~FOO"]], [2, 0, 371, 0, 0, 4, 1, 1, 29, 4, 0.006653866861711313, ["mov     eax, [rbp+dst_sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_873A"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [0, 0, 371, 0, 0, 2, 1, 1, 28, 5, 0.0077560722884222714, ["test    r14b, r14b", "jz      loc_9319"], ["test~r14b,r14b", "jz~FOO"]], [1, 0, 405, 0, 0, 3, 0, 1, 14, 26, 0.014942502463454526, ["mov     r14d, r8d", "mov     [rbp+dst_backup], 0", "jmp     loc_5E0E"], ["mov~r14d,r8d", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 21, 12, 0.03787116894726683, ["cmp     r15d, 1000h", "jz      loc_83F2"], ["cmp~r15d,0", "jz~FOO"]], [1, 0, 616, 0, 0, 3, 0, 1, 2, 31, 0.004566279624945397, ["cmp     r15d, 11h", "mov     r12, [rbp+src_name]", "jz      loc_6338"], ["cmp~r15d,0", "mov~r12,[rbp+0]", "jz~FOO"]], [0, 0, 371, 2, 0, 8, 1, 1, 34, 36, 0.010693593663757928, ["mov     rax, [rbp+b]", "xor     edx, edx", "lea     rsi, [rcx+rax-1]", "mov     rax, rsi", "div     rcx", "sub     rsi, rdx", "mov     [rbp+b], rsi", "jz      loc_9551"], ["mov~rax,[rbp+0]", "xor~edx,edx", "lea~rsi,[rcx+0]", "mov~rax,rsi", "div~,rcx", "sub~rsi,rdx", "mov~[rbp+0],rsi", "jz~FOO"]], [1, 0, 371, 1, 0, 3, 0, 1, 35, 37, 0.0, ["add     rax, 1", "mov     [rbp+b], rax", "jmp     loc_8A83"], ["add~rax,0", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 615, 0, 0, 2, 0, 1, 3, 30, 0.00586149798352279, ["cmp     dword ptr [x_0+8], 2", "jz      loc_5B88"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [1, 0, 371, 0, 0, 9, 1, 1, 30, 3, 0.005549121791160007, ["or      rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, r14d", "mov     rdi, src_link_val", "repne scasb", "mov     rsi, [rbp+dst_sb.st_size]; size", "not     rcx", "lea     rax, [rcx-1]", "cmp     rsi, rax", "jnz     loc_873A"], ["or~rcx,0", "mov~eax,r14d", "mov~rdi,src_link_val", "scasb~<TAG>,", "mov~rsi,[rbp+0]", "not~rcx", "lea~rax,[rcx-1]+0]", "cmp~rsi,rax", "jnz~FOO"]], [2, 0, 613, 0, 0, 6, 0, 1, 3, 32, 0.0035097877873607004, ["cmp     dword ptr [x_0+4], 2", "lea     r10, [rbp+src_mode]", "mov     rsi, name; filename", "mov     edi, 1; ver", "mov     rdx, r10; stat_buf", "jz      loc_6350"], ["cmp~[word ptr [x_0+0],0", "lea~r10,[rbp+0]", "mov~rsi,name", "mov~edi,0", "mov~rdx,r10", "jz~FOO"]], [0, 0, 614, 0, 0, 3, 1, 1, 3, 33, 0.00014222005505947844, ["mov     r12, [rbp+dst_name]", "xor     r15d, r15d", "jmp     loc_5B3B"], ["mov~r12,[rbp+0]", "xor~r15d,r15d", "jmp~FOO"]], [0, 0, 614, 0, 0, 1, 0, 1, 4, 33, 3.555501376486961e-05, ["jmp     loc_5B3B"], ["jmp~FOO"]], [0, 0, 537, 0, 1, 11, 1, 2, 22, 39, 0.00041904123365739187, ["mov     rsi, [rbp+dst_name]; dest", "mov     rdi, [rbp+src_name]; source", "mov     byte ptr [rbp+omitted_permissions], r9b", "mov     byte ptr [rbp+earlier_file], r8b", "mov     [rbp+dst_backup], rdx", "call    same_name", "test    al, al", "mov     rdx, [rbp+dst_backup]", "movzx   r8d, byte ptr [rbp+earlier_file]", "movzx   r9d, byte ptr [rbp+omitted_permissions]", "jz      loc_8D87"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r8b", "mov~[rbp+0],rdx", "call~FOO", "test~al,al", "mov~rdx,[rbp+0]", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 24, 9, 0.027971637257590994, ["cmp     r15d, 0A000h", "jz      loc_86E0"], ["cmp~r15d,0", "jz~FOO"]], [2, 0, 371, 0, 1, 9, 0, 2, 43, 34, 0.004747864159530267, ["mov     rsi, [rbp+src_name]; arg", "mov     edi, 4; s", "mov     rbx, [rbp+var_388]", "mov     r13d, [rbp+var_360]", "call    quotearg_style", "mov     edx, 5", "mov     r12, rax", "lea     rsi, aCannotLseekS; \"cannot lseek %s\"", "jmp     loc_9983"], ["mov~rsi,[rbp+0]", "mov~edi,0", "mov~rbx,[rbp+0]", "mov~r13d,[rbp+0]", "call~FOO", "mov~edx,0", "mov~r12,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 371, 0, 1, 8, 2, 2, 42, 35, 0.01159982324078871, ["mov     edi, dword ptr [rbp+symlink_err]; fd", "xor     edx, edx; whence", "mov     rsi, r12; offset", "mov     [rbp+n_bytes], rcx", "call    _lseek", "test    rax, rax", "mov     rcx, [rbp+n_bytes]; size", "js      loc_9B2F"], ["mov~edi,[word ptr [rbp+0]", "xor~edx,edx", "mov~rsi,r12", "mov~[rbp+0],rcx", "call~FOO", "test~rax,rax", "mov~rcx,[rbp+0]", "js~FOO"]], [0, 0, 611, 0, 1, 6, 2, 2, 4, 31, 0.0024952000731417426, ["call    ___lxstat", "test    eax, eax", "mov     rsi, name; arg", "setnz   al", "test    al, al", "jz      loc_5B6C"], ["call~FOO", "test~eax,eax", "mov~rsi,name", "setnz~al", "test~al,al", "jz~FOO"]], [0, 0, 371, 0, 1, 4, 1, 2, 31, 2, 0.0044418370767683535, ["mov     rdi, [rbp+dst_name]; file", "call    areadlink_with_size", "test    dest_link_val_0, dest_link_val_0", "jz      loc_873A"], ["mov~rdi,[rbp+0]", "call~FOO", "test~dest_link_val_0,dest_link_val_0", "jz~FOO"]], [3, 0, 371, 0, 0, 6, 1, 1, 22, 31, 0.01049634799215758, ["mov     r12d, [rbp+dst_sb.st_mode]", "mov     byte ptr [rbp+restore_dst_mode_0], 0", "mov     eax, r12d", "and     eax, 1C0h", "cmp     eax, 1C0h", "jz      short loc_7768"], ["mov~r12d,[rbp+0]", "mov~[yte ptr [rbp+0],0", "mov~eax,r12d", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 371, 0, 1, 6, 1, 2, 21, 30, 0.012860756407521408, ["mov     rsi, [rbp+dst_name]; filename", "lea     rdx, [rbp+dst_sb]; stat_buf", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jnz     loc_8125"], ["mov~rsi,[rbp+0]", "lea~rdx,[rbp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 611, 0, 1, 6, 2, 2, 4, 31, 0.0024952000731417426, ["call    ___xstat", "test    eax, eax", "mov     rsi, name", "setnz   al", "test    al, al", "jnz     loc_6365"], ["call~FOO", "test~eax,eax", "mov~rsi,name", "setnz~al", "test~al,al", "jnz~FOO"]], [1, 0, 371, 0, 1, 6, 1, 2, 21, 32, 0.16232387569967185, ["mov     esi, dword ptr [rbp+symlink_err]; fildes", "lea     rdx, [rbp+dot_sb]; stat_buf", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "jnz     loc_8487"], ["mov~esi,[word ptr [rbp+0]", "lea~rdx,[rbp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 371, 0, 1, 4, 1, 2, 37, 36, 0.054610808046946166, ["mov     rdi, [rbp+parent]; scan", "call    extent_scan_read", "test    al, al", "jz      loc_9771"], ["mov~rdi,[rbp+0]", "call~FOO", "test~al,al", "jz~FOO"]], [3, 0, 371, 0, 1, 6, 0, 2, 39, 37, 0.00685703836893914, ["mov     rdi, [rbp+ptr+8]; ptr", "call    free", "cmp     byte ptr [rbp+ptr+1], 0", "mov     [rbp+ptr+8], 0", "mov     qword ptr [rbp+var_2E0+8], 0", "jz      loc_8B63"], ["mov~rdi,[rbp+0]", "call~FOO", "cmp~[yte ptr [rbp+0],0", "mov~[rbp+0],0", "mov~[word ptr [rbp+0],0", "jz~FOO"]], [2, 0, 4, 0, 1, 5, 0, 1, 5, -1, 0.00033269334308556566, ["mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aCannotStatS; \"cannot stat %s\"", "mov     r12, rax", "mov     edx, 5; category"], ["mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0"]], [0, 0, 371, 0, 0, 3, 0, 1, 22, 32, 0.1550884303985209, ["mov     rax, [rbp+dot_sb.st_ino]", "cmp     [rbp+ino], rax", "jnz     short loc_7B92"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [0, 0, 371, 0, 1, 7, 1, 2, 36, 31, 0.0009193510702059142, ["mov     edx, [rbx+10h]; mode", "mov     esi, dword ptr [rbp+dest_link_val]; desc", "mov     rdi, [rbp+dst_name]; name", "call    set_acl", "test    eax, eax", "setz    r8b", "jmp     loc_8D15"], ["mov~edx,[rbx+0]", "mov~esi,[word ptr [rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "setz~r8b", "jmp~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 38, 38, 0.028438931724214994, ["cmp     qword ptr [rbp+var_2E0+8], 0", "jz      loc_964E"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [2, 0, 371, 0, 1, 7, 0, 2, 25, 29, 0.0011225225774337405, ["mov     rsi, [rbp+src_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     edx, 5", "mov     dst_mode_bits, rax", "lea     rsi, aSHasUnknownFil; \"%s has unknown file type\"", "jmp     loc_6628"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~edx,0", "mov~dst_mode_bits,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [5, 0, 371, 0, 4, 23, 5, 4, 17, 28, 0.0020537253188946123, ["mov     dst_lstat_sb, cs:top_level_dst_name; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     dst_lstat_sb, cs:top_level_src_name; arg", "mov     esi, 4; s", "xor     edi, edi; n", "mov     r13, rax", "call    quotearg_n_style", "lea     rsi, aCannotCopyADir; \"cannot copy a directory, %s, into itsel\"...", "mov     r12, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, r13", "mov     dst_lstat_sb, rax; format", "mov     rcx, r12", "xor     eax, eax", "xor     esi, esi; errnum", "xor     edi, edi; status", "call    _error", "mov     rax, qword ptr [rbp+var_340]", "mov     byte ptr [rax], 1"], ["mov~dst_lstat_sb,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~dst_lstat_sb,<TAG>", "mov~esi,0", "xor~edi,edi", "mov~r13,rax", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r8,r13", "mov~dst_lstat_sb,rax", "mov~rcx,r12", "xor~eax,eax", "xor~esi,esi", "xor~edi,edi", "call~FOO", "mov~rax,[word ptr [rbp+0]", "mov~<TAG>,0"]], [0, 0, 371, 0, 1, 8, 1, 2, 32, 1, 0.003332012718536352, ["mov     rdi, dest_link_val_0; s1", "mov     rsi, r12; s2", "mov     [rbp+dest_link_val], dest_link_val_0", "call    _strcmp", "mov     rdx, [rbp+dest_link_val]", "test    eax, eax", "mov     rdi, rdx; ptr", "jnz     loc_9B82"], ["mov~rdi,dest_link_val_0", "mov~rsi,r12", "mov~[rbp+0],dest_link_val_0", "call~FOO", "mov~rdx,[rbp+0]", "test~eax,eax", "mov~rdi,rdx", "jnz~FOO"]], [0, 0, 371, 0, 1, 2, 0, 2, 33, 0, 3.555501376486961e-05, ["call    free", "jmp     loc_873A"], ["call~FOO", "jmp~FOO"]], [1, 0, 371, 0, 1, 8, 1, 2, 17, 28, 0.005391748527853116, ["movzx   ecx, byte ptr [x_0+2Eh]; verbose", "mov     r8d, dword ptr [rbp+dest_link_val]; dereference", "mov     edx, 1; replace", "mov     rsi, [rbp+dst_name]; dst_name", "mov     rdi, [rbp+earlier_file]; src_name", "call    create_hard_link", "test    al, al", "jz      loc_6B86"], ["movzx~ecx,[yte ptr [x_0+0]", "mov~r8d,[word ptr [rbp+0]", "mov~edx,0", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 604, 0, 0, 2, 1, 1, 4, 29, 0.03044779000193013, ["test    r13b, r13b", "jz      short loc_5BCA"], ["test~r13b,r13b", "jz~FOO"]], [0, 0, 605, 0, 0, 2, 1, 1, 3, 30, 0.010920468513495667, ["xor     r15d, r15d", "jmp     loc_5B88"], ["xor~r15d,r15d", "jmp~FOO"]], [0, 0, 609, 0, 0, 3, 1, 1, 6, 30, 0.0001904732880260872, ["movzx   r12d, byte ptr [x_0+2Ah]", "test    r12b, r12b", "jnz     loc_5B88"], ["movzx~r12d,[yte ptr [x_0+0]", "test~r12b,r12b", "jnz~FOO"]], [1, 1, 610, 0, 0, 5, 1, 1, 5, 30, 0.007834801247473053, ["mov     eax, [rbp+var_268]", "mov     [rbp+mode], eax", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_6648"], ["mov~eax,[rbp+0]", "mov~[rbp+0],eax", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 27, -1, 0.0013612490984264366, ["cmp     byte ptr [x_0+18h], 0", "jz      loc_85F6"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 371, 0, 0, 5, 2, 1, 39, 38, 0.024756448155710643, ["mov     rdx, rbx", "mov     rcx, r12", "xor     r13d, r13d", "xor     eax, eax", "jmp     loc_8C4D"], ["mov~rdx,rbx", "mov~rcx,r12", "xor~r13d,r13d", "xor~eax,eax", "jmp~FOO"]], [0, 0, 603, 0, 0, 3, 1, 1, 5, 29, 0.0003352329869259135, ["mov     rdi, [x_0+48h]; ht", "test    rdi, rdi", "jz      short loc_5BCA"], ["mov~rdi,[x_0+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 371, 0, 1, 2, 0, 1, 18, 26, 0.22978491474133422, ["call    restore_default_fscreatecon_or_die", "nop     dword ptr [rax]"], ["call~FOO", "nop~<TAG>"]], [1, 0, 372, 0, 0, 2, 0, 1, 17, 27, 0.0730016953533547, ["cmp     byte ptr [x_0+25h], 0", "jnz     loc_6B90"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 371, 0, 0, 3, 1, 1, 28, 27, 0.013767409258525584, ["movzx   r8d, byte ptr [x_0+25h]", "test    r8b, r8b", "jnz     loc_6B90"], ["movzx~r8d,[yte ptr [x_0+0]", "test~r8b,r8b", "jnz~FOO"]], [0, 0, 371, 0, 2, 4, 0, 3, 33, 28, 0.0016863235099909587, ["call    free", "mov     rdi, r12; ptr", "call    free", "jmp     loc_8F70"], ["call~FOO", "mov~rdi,r12", "call~FOO", "jmp~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 15, 25, 0.23284137610319283, ["cmp     [rbp+var_270], 1", "ja      loc_6F88"], ["cmp~[rbp+0],0", "ja~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 15, 26, 0.0004825323296660876, ["cmp     byte ptr [x_0+17h], 0", "jz      loc_6B98"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [2, 0, 371, 0, 0, 3, 0, 0, 42, 35, 0.012346478529850973, ["cmp     [rbp+var_390], 3", "mov     r8d, 0", "cmovz   r8, [rbp+hole_size]; hole_size"], ["cmp~[rbp+0],0", "mov~r8d,0", "cmovz~r8,[rbp+0]"]], [1, 0, 371, 2, 0, 6, 0, 1, 41, 36, 0.025223742622334643, ["mov     rax, r12", "mov     byte ptr [rbp+format], 0", "sub     rax, rcx", "mov     rcx, rax", "sub     rcx, rdx", "jz      loc_8B98"], ["mov~rax,r12", "mov~[yte ptr [rbp+0],0", "sub~rax,rcx", "mov~rcx,rax", "sub~rcx,rdx", "jz~FOO"]], [0, 0, 371, 0, 1, 7, 1, 2, 44, 34, 0.0009295096455673056, ["mov     rsi, [rbp+dst_name]; name", "mov     edi, dword ptr [rbp+dest_link_val]; fd", "movzx   edx, dl; punch_holes", "call    create_hole", "test    al, al", "mov     byte ptr [rbp+format], al", "jnz     loc_8B98"], ["mov~rsi,[rbp+0]", "mov~edi,[word ptr [rbp+0]", "movzx~edx,dl", "call~FOO", "test~al,al", "mov~[yte ptr [rbp+0],al", "jnz~FOO"]], [1, 0, 4, 0, 1, 5, 1, 1, 28, -1, 0.0002336472333120003, ["lea     rsi, aBackingUpSMigh; \"backing up %s might destroy source;  %s\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     x_0, rax"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~x_0,rax"]], [0, 0, 371, 0, 0, 3, 1, 1, 16, 24, 0.2146377169843477, ["test    r13b, r13b", "mov     edx, [x_0+4]", "jz      short loc_6BB7"], ["test~r13b,r13b", "mov~edx,[x_0+0]", "jz~FOO"]], [1, 1, 602, 0, 0, 5, 1, 1, 6, 30, 0.0003022176170013917, ["mov     eax, [rbp+mode]", "lea     r10, [rbp+src_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_5BBB"], ["mov~eax,[rbp+0]", "lea~r10,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 17, 24, 3.4285191844695696e-05, ["cmp     edx, 3", "jz      loc_6F88"], ["cmp~edx,0", "jz~FOO"]], [0, 0, 601, 0, 0, 3, 1, 1, 7, 30, 0.0002057111510681742, ["mov     r11d, [x_0]", "test    r11d, r11d", "jz      loc_64C8"], ["mov~r11d,<TAG>", "test~r11d,r11d", "jz~FOO"]], [1, 0, 374, 0, 0, 2, 0, 1, 13, 26, 0.010749550483040255, ["cmp     [rbp+var_270], 1", "jz      loc_73E8"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 379, 0, 0, 3, 1, 1, 12, 23, 0.021353410064439235, ["movzx   eax, byte ptr [x_0+18h]", "test    al, al", "jnz     loc_63B0"], ["movzx~eax,[yte ptr [x_0+0]", "test~al,al", "jnz~FOO"]], [2, 0, 371, 0, 2, 11, 2, 2, 23, 31, 0.0011860136734424362, ["mov     rsi, [rbp+src_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aSkippingFileSA; \"skipping file %s, as it was replaced wh\"...", "mov     dst_mode_bits, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "xor     esi, esi; errnum"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~dst_mode_bits,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "xor~esi,esi"]], [2, 0, 371, 0, 0, 3, 0, 1, 17, 23, 0.21386058596920127, ["cmp     edx, 4", "mov     [rbp+earlier_file], 0", "jz      loc_6F88"], ["cmp~edx,0", "mov~[rbp+0],0", "jz~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 37, 35, 0.004979395022975311, ["cmp     byte ptr [rbp+var_2F8], 0", "jz      loc_903A"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [0, 0, 371, 0, 1, 5, 1, 1, 38, 34, 0.0032270407731353084, ["mov     rsi, [rbp+dev]; length", "mov     edi, dword ptr [rbp+dest_link_val]; fd", "call    _ftruncate", "test    eax, eax", "jns     loc_903A"], ["mov~rsi,[rbp+0]", "mov~edi,[word ptr [rbp+0]", "call~FOO", "test~eax,eax", "jns~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 42, 36, 0.0038780361442111357, ["cmp     [rbp+var_390], 3", "jnz     loc_903A"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 371, 1, 1, 5, 1, 2, 41, 35, 0.001340931947703654, ["sub     rsi, [rbp+n_bytes]; n_bytes", "mov     edi, dword ptr [rbp+dest_link_val]; fd", "call    write_zeros", "test    al, al", "jnz     loc_903A"], ["sub~rsi,[rbp+0]", "mov~edi,[word ptr [rbp+0]", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 371, 0, 0, 2, 1, 1, 17, 22, 0.22664896252727276, ["test    al, al", "jnz     loc_63D9"], ["test~al,al", "jnz~FOO"]], [2, 0, 372, 0, 0, 3, 0, 1, 14, 27, 0.007077564109076008, ["cmp     byte ptr [x_0+22h], 0", "mov     [rbp+earlier_file], 0", "jz      short loc_63D9"], ["cmp~[yte ptr [x_0+0],0", "mov~[rbp+0],0", "jz~FOO"]], [2, 0, 596, 0, 0, 4, 0, 1, 5, 28, 0.04059112750027936, ["mov     eax, [x_0+4]", "mov     dword ptr [rbp+dest_link_val], 1", "cmp     eax, 4", "jz      short loc_5BEE"], ["mov~eax,[x_0+0]", "mov~[word ptr [rbp+0],0", "cmp~eax,0", "jz~FOO"]], [0, 0, 597, 0, 1, 3, 0, 1, 7, 29, 0.006041812696187486, ["mov     rsi, [rbp+src_name]; file", "mov     rdx, r10; stats", "call    record_file"], ["mov~rsi,[rbp+0]", "mov~rdx,r10", "call~FOO"]], [0, 0, 371, 0, 0, 3, 0, 1, 16, 21, 0.20592829061652393, ["movzx   eax, r14b", "mov     dword ptr [rbp+symlink_err], eax", "jmp     loc_5F30"], ["movzx~eax,r14b", "mov~[word ptr [rbp+0],eax", "jmp~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 15, 22, 0.0011597706870921755, ["mov     [rbp+earlier_file], 0", "jmp     loc_6BD3"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 600, 0, 1, 7, 1, 2, 8, 31, 0.00015999756194191324, ["mov     rsi, [rbp+src_name]; file", "mov     dst_lstat_sb, r10; stats", "mov     [rbp+dest_link_val], r10", "call    seen_file", "test    al, al", "mov     r12d, eax", "jnz     loc_73A8"], ["mov~rsi,[rbp+0]", "mov~dst_lstat_sb,r10", "mov~[rbp+0],r10", "call~FOO", "test~al,al", "mov~r12d,eax", "jnz~FOO"]], [1, 0, 595, 0, 0, 5, 1, 0, 6, 28, 0.0, ["cmp     eax, 3", "setz    al", "movzx   eax, al", "and     eax, r13d", "mov     dword ptr [rbp+dest_link_val], eax"], ["cmp~eax,0", "setz~al", "movzx~eax,al", "and~eax,r13d", "mov~[word ptr [rbp+0],eax"]], [1, 0, 4, 0, 1, 6, 1, 2, 28, -1, 0.0002336472333120003, ["lea     rsi, aBackingUpSMigh_0; \"backing up %s might destroy source;  %s\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     x_0, rax", "jmp     loc_83AA"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~x_0,rax", "jmp~FOO"]], [0, 0, 594, 0, 0, 2, 1, 1, 6, 27, 0.043471083615233795, ["test    r14b, r14b", "jnz     loc_5E00"], ["test~r14b,r14b", "jnz~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 15, 26, 0.028268493404262785, ["cmp     r15d, 11h", "jnz     short loc_640B"], ["cmp~r15d,0", "jnz~FOO"]], [3, 0, 371, 2, 1, 15, 1, 2, 43, 34, 0.013273448531577931, ["sub     rsp, 8", "mov     rcx, [rbp+b]; buf_size", "mov     rdx, [rbp+buf]; buf", "mov     esi, dword ptr [rbp+dest_link_val]; dest_fd", "mov     edi, dword ptr [rbp+symlink_err]; src_fd", "mov     r9d, 1; punch_holes", "push    qword ptr [rbp-3B8h]; last_write_made_hole", "push    [rbp+total_n_read]; total_n_read", "push    rbx; max_n_read", "push    [rbp+dst_name]; dst_name", "push    [rbp+src_name]; src_name", "call    sparse_copy", "add     rsp, 30h", "test    al, al", "jz      loc_8CF8"], ["sub~rsp,0", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~esi,[word ptr [rbp+0]", "mov~edi,[word ptr [rbp+0]", "mov~r9d,0", "push~[word ptr [rbp-3B8h]+0]", "push~[rbp+0]", "push~rbx", "push~[rbp+0]", "push~[rbp+0]", "call~FOO", "add~rsp,0", "test~al,al", "jz~FOO"]], [0, 0, 371, 0, 0, 2, 1, 1, 45, 35, 0.00032253476772417435, ["xor     r8d, r8d", "jmp     loc_8BAD"], ["xor~r8d,r8d", "jmp~FOO"]], [1, 0, 592, 0, 0, 2, 0, 1, 7, 33, 0.01459025386279828, ["cmp     r15d, 11h", "jz      loc_6560"], ["cmp~r15d,0", "jz~FOO"]], [0, 0, 371, 0, 1, 5, 0, 2, 14, 25, 0.003499290592820588, ["mov     rsi, [rbp+src_mode]; dev", "mov     rdi, [rbp+ino]; ino", "call    src_to_dest_lookup", "mov     [rbp+earlier_file], rax", "jmp     loc_6FA9"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 371, 0, 2, 11, 2, 3, 37, 31, 0.000462215178943305, ["call    cached_umask", "mov     esi, dword ptr [rbp+dest_link_val]; desc", "not     eax", "mov     rdi, [rbp+dst_name]; name", "mov     edx, eax", "mov     r14d, r12d", "and     edx, 1B6h; mode", "call    set_acl", "test    eax, eax", "setz    r8b", "jmp     loc_8D15"], ["call~FOO", "mov~esi,[word ptr [rbp+0]", "not~eax", "mov~rdi,[rbp+0]", "mov~edx,eax", "mov~r14d,r12d", "and~edx,0", "call~FOO", "test~eax,eax", "setz~r8b", "jmp~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 16, 25, 0.019593352228283505, ["cmp     r15d, 16h", "jz      loc_7430"], ["cmp~r15d,0", "jz~FOO"]], [2, 0, 589, 0, 0, 4, 1, 1, 8, 32, 0.008755930068367212, ["mov     eax, [rbp+mode]", "and     eax, 0F000h", "cmp     eax, 8000h", "jz      loc_6500"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 591, 0, 0, 2, 0, 1, 8, 33, 0.008320211840158203, ["cmp     dword ptr [x_0+8], 2", "jnz     loc_5C01"], ["cmp~[word ptr [x_0+0],0", "jnz~FOO"]], [2, 0, 371, 0, 0, 3, 0, 1, 28, 31, 0.004494323049468876, ["cmp     byte ptr [x_0+26h], 0", "mov     [rbp+restore_dst_mode_0], 0", "jnz     loc_8D15"], ["cmp~[yte ptr [x_0+0],0", "mov~[rbp+0],0", "jnz~FOO"]], [0, 0, 371, 0, 1, 6, 1, 2, 24, 29, 0.11505602454311806, ["mov     edi, dword ptr [rbp+symlink_err]; fd", "mov     byte ptr [rbp+dest_link_val], r8b", "call    _close", "test    eax, eax", "movzx   r8d, byte ptr [rbp+dest_link_val]", "js      loc_8647"], ["mov~edi,[word ptr [rbp+0]", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "js~FOO"]], [0, 0, 4, 0, 1, 5, 1, 2, 8, -1, 3.682483568504353e-05, ["lea     rsi, aOmittingDirect; \"omitting directory %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     dst_lstat_sb, rax", "jmp     loc_668A"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~dst_lstat_sb,rax", "jmp~FOO"]], [3, 0, 6, 0, 1, 7, 0, 2, 7, -1, 0.00015999756194191324, ["mov     name, [rbp+src_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "cmp     byte ptr [x_0+19h], 0", "mov     r13, rax", "mov     edx, 5; category", "jnz     loc_7410"], ["mov~name,[rbp+0]", "mov~edi,0", "call~FOO", "cmp~[yte ptr [x_0+0],0", "mov~r13,rax", "mov~edx,0", "jnz~FOO"]], [0, 0, 371, 0, 0, 3, 0, 1, 45, 39, 0.005988480175540181, ["mov     rcx, [rbp+n_bytes]", "cmp     [rbp+length], rcx", "jz      loc_9647"], ["mov~rcx,[rbp+0]", "cmp~[rbp+0],rcx", "jz~FOO"]], [4, 0, 5, 0, 3, 18, 2, 3, 18, -1, 0.0012914088928168712, ["mov     dst_lstat_sb, [rbp+dst_name]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     dst_lstat_sb, [rbp+src_name]; arg", "mov     esi, 4; s", "xor     edi, edi; n", "mov     r12, rax", "call    quotearg_n_style", "lea     rsi, aCannotMoveSToS; \"cannot move %s to %s\"", "mov     x_0, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, r12", "mov     rcx, rbx", "mov     dst_lstat_sb, rax; format", "mov     esi, r15d; errnum"], ["mov~dst_lstat_sb,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~dst_lstat_sb,[rbp+0]", "mov~esi,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "mov~x_0,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r8,r12", "mov~rcx,rbx", "mov~dst_lstat_sb,rax", "mov~esi,r15d"]], [2, 0, 371, 1, 0, 5, 0, 1, 43, 35, 0.00524182488647792, ["mov     eax, [rbp+var_390]", "cmp     eax, 3", "setz    dl", "sub     eax, 1", "jz      loc_9428"], ["mov~eax,[rbp+0]", "cmp~eax,0", "setz~dl", "sub~eax,0", "jz~FOO"]], [2, 2, 588, 0, 0, 10, 3, 1, 9, 31, 0.004874465404971607, ["cmp     eax, 0A000h", "mov     r8d, 100h; flag", "setz    r9b", "cmp     eax, 4000h", "setz    al", "or      r9d, eax", "movzx   eax, byte ptr [x_0+14h]", "xor     eax, 1", "or      r9b, al", "jz      loc_6500"], ["cmp~eax,0", "mov~r8d,<STR>", "setz~r9b", "cmp~eax,<STR>", "setz~al", "or~r9d,eax", "movzx~eax,[yte ptr [x_0+0]", "xor~eax,0", "or~r9b,al", "jz~FOO"]], [1, 1, 451, 0, 0, 4, 1, 1, 18, 28, 0.019168102976349695, ["mov     eax, [rbp+var_268]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_7FD0"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [0, 0, 505, 0, 0, 2, 0, 1, 16, 35, 0.010821422403722102, ["mov     r14d, eax", "jmp     loc_5C9F"], ["mov~r14d,eax", "jmp~FOO"]], [0, 0, 568, 0, 0, 3, 1, 1, 15, 36, 0.0014374384136368714, ["movzx   eax, byte ptr [x_0+17h]", "test    al, al", "jnz     loc_7208"], ["movzx~eax,[yte ptr [x_0+0]", "test~al,al", "jnz~FOO"]], [0, 0, 371, 0, 0, 6, 0, 0, 46, 38, 0.002711069799571308, ["lea     eax, [r13+1]", "cmp     rax, qword ptr [rbp+var_2E0+8]", "mov     rcx, r12", "mov     rdx, rbx", "mov     r13, rax", "jnb     loc_964E"], ["lea~eax,[r13+0]", "cmp~rax,[word ptr [rbp+0]", "mov~rcx,r12", "mov~rdx,rbx", "mov~r13,rax", "jnb~FOO"]], [0, 0, 371, 0, 1, 3, 1, 2, 19, 23, 0.004449456008289397, ["call    _unlink", "test    eax, eax", "jz      short loc_645B"], ["call~FOO", "test~eax,eax", "jz~FOO"]], [1, 1, 449, 0, 0, 3, 1, 1, 19, 28, 0.008168764412478793, ["and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_7C46"], ["and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [0, 0, 4, 0, 2, 7, 2, 3, 19, -1, 9.777628785339144e-05, ["xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     rsi, [rbp+src_mode]; dev", "mov     rdi, [rbp+ino]; ino", "call    forget_created", "jmp     loc_5D90"], ["xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "jmp~FOO"]], [4, 0, 5, 0, 3, 19, 2, 4, 21, -1, 6.349109600869574e-05, ["mov     dst_lstat_sb, [rbp+dst_name]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     dst_lstat_sb, [rbp+src_name]; arg", "mov     esi, 4; s", "xor     edi, edi; n", "mov     r12, rax", "call    quotearg_n_style", "lea     rsi, aInterDeviceMov; \"inter-device move failed: %s to %s; una\"...", "mov     x_0, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, r12", "mov     rcx, rbx", "mov     dst_lstat_sb, rax", "mov     esi, [r14]", "jmp     loc_6C36"], ["mov~dst_lstat_sb,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~dst_lstat_sb,[rbp+0]", "mov~esi,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "lea~rsi,<TAG>", "mov~x_0,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r8,r12", "mov~rcx,rbx", "mov~dst_lstat_sb,rax", "mov~esi,<TAG>", "jmp~FOO"]], [1, 0, 371, 0, 1, 4, 0, 2, 20, 23, 0.00065522811080974, ["call    ___errno_location", "cmp     dword ptr [rax], 2", "mov     r14, rax", "jnz     loc_74BE"], ["call~FOO", "cmp~<TAG>,0", "mov~r14,rax", "jnz~FOO"]], [0, 0, 371, 0, 1, 7, 2, 2, 22, 29, 0.003679943924664005, ["movzx   esi, byte ptr [x_0+25h]; process_local", "mov     rdi, [rbp+dst_name]; dst_name", "xor     edx, edx; recurse", "mov     rcx, x_0; x", "call    set_file_security_ctx", "test    al, al", "jnz     loc_7F8C"], ["movzx~esi,[yte ptr [x_0+0]", "mov~rdi,[rbp+0]", "xor~edx,edx", "mov~rcx,x_0", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 371, 0, 0, 3, 1, 1, 21, 30, 0.027913225449262995, ["mov     rax, 0FF000000FF00h", "test    [x_0+20h], rax", "jnz     loc_8540"], ["mov~rax,0", "test~[x_0+0],rax", "jnz~FOO"]], [0, 1, 371, 0, 0, 5, 1, 1, 20, 22, 0.003108524060585743, ["cmp     r12d, 4000h", "setnz   dl", "and     dl, [x_0+2Eh]", "mov     r14d, edx", "jnz     loc_7DB0"], ["cmp~r12d,<STR>", "setnz~dl", "and~dl,[x_0+0]", "mov~r14d,edx", "jnz~FOO"]], [0, 0, 371, 0, 0, 9, 0, 1, 40, 37, 0.02589420859618647, ["lea     rsi, [rax+rax*2]", "mov     rax, [rbp+ptr+8]", "lea     rax, [rax+rsi*8]", "mov     rsi, [rbp+length]", "mov     r12, [rax]", "mov     rbx, [rax+8]", "lea     rax, [r12+rbx]", "cmp     rsi, rax", "jge     short loc_8C80"], ["lea~rsi,<TAG>", "mov~rax,[rbp+0]", "lea~rax,<TAG>", "mov~rsi,[rbp+0]", "mov~r12,<TAG>", "mov~rbx,[rax+0]", "lea~rax,<TAG>", "cmp~rsi,rax", "jge~FOO"]], [0, 1, 587, 0, 0, 4, 1, 1, 9, 31, 0.005219856967258912, ["movzx   r9d, byte ptr [x_0+18h]", "mov     r8d, 100h", "test    r9b, r9b", "jnz     loc_5C41"], ["movzx~r9d,[yte ptr [x_0+0]", "mov~r8d,<STR>", "test~r9b,r9b", "jnz~FOO"]], [0, 0, 586, 0, 0, 3, 1, 1, 10, 31, 0.00026666260323652207, ["movzx   r9d, byte ptr [x_0+2Ch]", "test    r9b, r9b", "jnz     loc_5C41"], ["movzx~r9d,[yte ptr [x_0+0]", "test~r9b,r9b", "jnz~FOO"]], [0, 0, 585, 0, 0, 3, 1, 1, 11, 31, 0.00018285435650504373, ["movzx   r9d, byte ptr [x_0+17h]", "test    r9b, r9b", "jnz     loc_5C41"], ["movzx~r9d,[yte ptr [x_0+0]", "test~r9b,r9b", "jnz~FOO"]], [1, 0, 584, 0, 0, 4, 1, 1, 12, 31, 9.396682209286969e-05, ["mov     r10d, [x_0]", "mov     r9d, 1", "test    r10d, r10d", "jnz     loc_5C41"], ["mov~r10d,<TAG>", "mov~r9d,0", "test~r10d,r10d", "jnz~FOO"]], [1, 0, 583, 1, 0, 6, 2, 1, 13, 31, 0.0, ["movzx   r9d, byte ptr [x_0+15h]", "xor     r8d, r8d", "test    r9b, r9b", "setnz   r8b", "shl     r8d, 8", "jmp     loc_5C41"], ["movzx~r9d,[yte ptr [x_0+0]", "xor~r8d,r8d", "test~r9b,r9b", "setnz~r8b", "shl~r8d,0", "jmp~FOO"]], [1, 0, 488, 0, 0, 2, 0, 1, 14, 36, 0.0015364845234104368, ["cmp     byte ptr [x_0+18h], 0", "jz      loc_66BC"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 495, 0, 1, 11, 1, 2, 13, 31, 0.07140679902161626, ["lea     r10, [rbp+src_mode]", "mov     rdi, [rbp+dst_name]; dst_name", "lea     rsi, [rbp+dst_sb]; dst_stat", "mov     byte ptr [rbp+earlier_file], r9b", "mov     byte ptr [rbp+dst_backup], r8b", "mov     rdx, r10; src_stat", "call    utimecmp", "test    eax, eax", "movzx   r8d, byte ptr [rbp+dst_backup]", "movzx   r9d, byte ptr [rbp+earlier_file]", "js      loc_6C70"], ["lea~r10,[rbp+0]", "mov~rdi,[rbp+0]", "lea~rsi,[rbp+0]", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r8b", "mov~rdx,r10", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "js~FOO"]], [0, 0, 574, 0, 0, 1, 1, 0, 11, 36, 0.009193510702059142, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [0, 0, 483, 0, 0, 1, 0, 0, 15, 37, 0.00011428397281565232, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 371, 1, 0, 4, 0, 0, 41, 37, 0.0, ["cmp     r12, rsi", "cmovg   r12, rsi", "sub     rsi, r12", "mov     rbx, rsi"], ["cmp~r12,rsi", "cmovg~r12,rsi", "sub~rsi,r12", "mov~rbx,rsi"]], [1, 0, 573, 0, 0, 2, 0, 1, 12, 35, 0.012752821544306625, ["cmp     dword ptr [x_0+8], 2", "jz      short loc_5C9F"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [2, 0, 371, 0, 0, 3, 0, 1, 20, 21, 0.00891034041386036, ["mov     dword ptr [rbp+symlink_err], 1", "mov     r14d, 1", "jmp     loc_5F30"], ["mov~[word ptr [rbp+0],0", "mov~r14d,0", "jmp~FOO"]], [0, 0, 371, 0, 1, 3, 1, 2, 19, 22, 0.008860817358973577, ["call    _rmdir", "test    eax, eax", "jz      loc_6471"], ["call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 371, 0, 1, 4, 0, 2, 20, 22, 0.00065522811080974, ["call    ___errno_location", "cmp     dword ptr [rax], 2", "mov     r14, rax", "jz      loc_6471"], ["call~FOO", "cmp~<TAG>,0", "mov~r14,rax", "jz~FOO"]], [2, 0, 371, 0, 1, 7, 0, 2, 24, 29, 0.0019402878940257416, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     edx, 5", "mov     r13, rax", "lea     rsi, aCannotCreateFi; \"cannot create fifo %s\"", "jmp     loc_6F5F"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~edx,0", "mov~r13,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 482, 0, 0, 3, 0, 1, 12, 36, 0.005115377833698315, ["mov     eax, [x_0+8]", "cmp     eax, 2", "jz      short loc_6D04"], ["mov~eax,[x_0+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 488, 0, 0, 2, 0, 1, 11, 35, 0.018796804023505313, ["cmp     byte ptr [x_0+18h], 0", "jnz     loc_6C80"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 481, 0, 0, 2, 0, 1, 13, 35, 0.005193571653511311, ["cmp     eax, 3", "jz      short loc_6CD8"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 572, 0, 0, 3, 0, 1, 13, 36, 0.00806717865886488, ["mov     rax, [rbp+dst_sb.st_ino]", "cmp     [rbp+ino], rax", "jz      loc_6E58"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [1, 0, 480, 0, 0, 2, 0, 1, 14, 34, 0.0054297585306636595, ["cmp     eax, 4", "jnz     loc_6710"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 571, 0, 0, 3, 0, 1, 14, 36, 0.0014628348520403498, ["mov     rax, [rbp+dst_sb.st_dev]", "cmp     [rbp+src_mode], rax", "jnz     loc_5C95"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [1, 0, 479, 0, 0, 2, 0, 1, 15, 34, 0.0003377726307662613, ["cmp     byte ptr [x_0+2Fh], 0", "jz      loc_6710"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 371, 0, 0, 3, 0, 1, 22, 30, 0.004214538953057223, ["mov     rax, [rbp+timespec.tv_nsec]", "cmp     [rbp+dot_sb.st_ino], rax", "jz      loc_8DA7"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [1, 1, 389, 0, 0, 4, 1, 1, 11, 24, 0.0007568138644236532, ["mov     eax, [rbp+mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_5EE0"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 390, 0, 0, 2, 0, 1, 10, 24, 0.0010437936183829578, ["cmp     byte ptr [x_0+18h], 0", "jz      loc_6490"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 504, 0, 0, 2, 0, 1, 10, 34, 0.10095670802174322, ["cmp     byte ptr [x_0+2Dh], 0", "jz      loc_66A0"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 505, 0, 0, 3, 2, 1, 9, 35, 0.008597456292729505, ["xor     r8d, r8d", "xor     r9d, r9d", "jmp     loc_5C9F"], ["xor~r8d,r8d", "xor~r9d,r9d", "jmp~FOO"]], [0, 0, 505, 0, 0, 2, 1, 1, 18, 35, 0.017823728400329135, ["xor     r14d, r14d", "jmp     loc_5C9F"], ["xor~r14d,r14d", "jmp~FOO"]], [0, 0, 509, 0, 0, 3, 0, 1, 27, 35, 0.004359600990509472, ["mov     rax, [rbp+dot_sb.st_ino]", "cmp     [rbp+timespec.tv_nsec], rax", "jnz     loc_5C9F"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [0, 0, 508, 0, 0, 3, 0, 1, 28, 35, 0.000526697945403946, ["mov     rax, [rbp+dot_sb.st_dev]", "cmp     [rbp+timespec.tv_sec], rax", "jnz     loc_5C9F"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [2, 0, 505, 0, 0, 5, 1, 1, 30, 35, 0.0012698219201739147, ["mov     eax, [r12+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "setnz   r14b", "jmp     loc_5C9F"], ["mov~eax,[r12+0]", "and~eax,0", "cmp~eax,0", "setnz~r14b", "jmp~FOO"]], [0, 0, 505, 0, 0, 1, 0, 1, 27, 35, 0.0014891987738115794, ["jmp     loc_5C9F"], ["jmp~FOO"]], [0, 0, 388, 0, 1, 5, 0, 2, 12, 24, 0.0, ["mov     dst_lstat_sb, [rbp+dst_backup]; backup_dst_name", "mov     rsi, [rbp+dst_name]; dst", "mov     rdi, [rbp+src_name]; src", "call    emit_verbose", "jmp     loc_5EE0"], ["mov~dst_lstat_sb,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "jmp~FOO"]], [1, 0, 498, 0, 0, 3, 1, 1, 12, 32, 0.06852684290666182, ["xor     ecx, ecx", "cmp     byte ptr [x_0+1Fh], 0", "jz      short loc_5CE5"], ["xor~ecx,ecx", "cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [2, 0, 371, 0, 3, 14, 1, 4, 22, 31, 0.005625311106370442, ["mov     rsi, [rbp+src_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aCannotFstatS; \"cannot fstat %s\"", "mov     edx, 5; category", "mov     dst_mode_bits, rax", "xor     edi, edi; domainname", "call    _dcgettext", "mov     [rbp+dest_link_val], rax", "call    ___errno_location", "mov     rcx, r12", "mov     rdx, [rbp+dest_link_val]", "mov     esi, [rax]", "jmp     loc_7BC1"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "mov~dst_mode_bits,rax", "xor~edi,edi", "call~FOO", "mov~[rbp+0],rax", "call~FOO", "mov~rcx,r12", "mov~rdx,[rbp+0]", "mov~esi,<TAG>", "jmp~FOO"]], [2, 0, 371, 0, 2, 10, 1, 3, 23, 29, 0.001979652373551133, ["mov     rdi, r12; ptr", "call    free", "mov     rdx, [rbp+dst_name]; arg", "mov     esi, 3; s", "xor     edi, edi; n", "call    quotearg_n_style_colon", "mov     edx, 5", "mov     r12, rax", "lea     rsi, aSCanMakeRelati; \"%s: can make relative symbolic links on\"...", "jmp     loc_6628"], ["mov~rdi,r12", "call~FOO", "mov~rdx,[rbp+0]", "mov~esi,0", "xor~edi,edi", "call~FOO", "mov~edx,0", "mov~r12,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 371, 0, 0, 3, 0, 1, 23, 30, 0.0014171212629140889, ["mov     rax, [rbp+timespec.tv_sec]", "cmp     [rbp+dot_sb.st_dev], rax", "jnz     loc_7CA4"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [2, 0, 497, 0, 0, 3, 0, 1, 13, 32, 0.00029967797316104387, ["cmp     byte ptr [x_0+18h], 0", "mov     ecx, 1", "jz      short loc_5CE5"], ["cmp~[yte ptr [x_0+0],0", "mov~ecx,0", "jz~FOO"]], [0, 0, 478, 0, 1, 9, 1, 2, 16, 34, 2.0317150722782635e-05, ["mov     esi, [rbp+dst_sb.st_mode]; mode", "mov     rdi, [rbp+dst_name]; file", "mov     byte ptr [rbp+earlier_file], r9b", "mov     byte ptr [rbp+dst_backup], r8b", "call    writable_destination", "test    al, al", "movzx   r8d, byte ptr [rbp+dst_backup]", "movzx   r9d, byte ptr [rbp+earlier_file]", "jnz     loc_6710"], ["mov~esi,[rbp+0]", "mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~al,al", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jnz~FOO"]], [0, 0, 496, 0, 0, 4, 1, 0, 14, 32, 0.0, ["xor     ecx, ecx", "mov     rax, [rbp+src_mode]", "cmp     [rbp+dst_sb.st_dev], rax", "setnz   cl; options"], ["xor~ecx,ecx", "mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "setnz~cl"]], [0, 0, 371, 0, 0, 1, 0, 1, 34, 32, 0.0033074628280796562, ["jmp     loc_8D12"], ["jmp~FOO"]], [0, 0, 598, 0, 0, 3, 0, 1, 9, 30, 0.0015110880850069586, ["mov     rdi, [x_0+48h]", "mov     r10, [rbp+dest_link_val]", "jmp     loc_5BBB"], ["mov~rdi,[x_0+0]", "mov~r10,[rbp+0]", "jmp~FOO"]], [0, 0, 371, 0, 0, 2, 0, 0, 44, 33, 0.006540852710815835, ["mov     rbx, [rbp+var_388]", "mov     r13d, [rbp+var_360]"], ["mov~rbx,[rbp+0]", "mov~r13d,[rbp+0]"]], [0, 0, 371, 0, 0, 1, 1, 0, 35, 31, 0.05803763413552217, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [0, 0, 371, 0, 3, 11, 3, 4, 40, 32, 0.016712549565382283, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     [rbp+format], rax", "call    ___errno_location", "mov     rdx, [rbp+format]; format", "mov     esi, [rax]; errnum", "mov     rcx, r12", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_8D12"], ["xor~edi,edi", "call~FOO", "mov~[rbp+0],rax", "call~FOO", "mov~rdx,[rbp+0]", "mov~esi,<TAG>", "mov~rcx,r12", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 371, 0, 1, 2, 0, 1, 45, 32, 0.01326709942197706, ["mov     rdi, [rbp+ptr+8]; ptr", "call    free"], ["mov~rdi,[rbp+0]", "call~FOO"]], [1, 0, 371, 0, 0, 4, 0, 1, 38, 35, 0.024561742127950637, ["cmp     byte ptr [rbp+ptr+1], 0", "mov     rbx, [rbp+var_388]", "mov     r13d, [rbp+var_360]", "jnz     loc_968B"], ["cmp~[yte ptr [rbp+0],0", "mov~rbx,[rbp+0]", "mov~r13d,[rbp+0]", "jnz~FOO"]], [0, 0, 512, 0, 0, 5, 1, 1, 19, 36, 0.0022056806753420898, ["mov     edi, [x_0]", "movzx   r8d, byte ptr [rbp+dst_backup]", "movzx   r9d, byte ptr [rbp+earlier_file]", "test    edi, edi", "jnz     loc_6ECE"], ["mov~edi,<TAG>", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "test~edi,edi", "jnz~FOO"]], [0, 0, 371, 0, 1, 6, 1, 1, 29, 30, 0.08770194401270498, ["mov     edi, dword ptr [rbp+dest_link_val]; fd", "mov     byte ptr [rbp+format], r8b", "call    _close", "test    eax, eax", "movzx   r8d, byte ptr [rbp+format]", "jns     loc_7BD8"], ["mov~edi,[word ptr [rbp+0]", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "jns~FOO"]], [1, 0, 371, 0, 1, 9, 1, 2, 35, 31, 0.011195596596200017, ["mov     r8d, [rbp+var_340]; mode", "mov     ecx, dword ptr [rbp+dest_link_val]; dest_desc", "mov     rdx, [rbp+dst_name]; dst_name", "mov     esi, dword ptr [rbp+symlink_err]; source_desc", "mov     rdi, [rbp+src_name]; src_name", "call    copy_acl", "test    eax, eax", "mov     r8d, 1", "jz      loc_8D15"], ["mov~r8d,[rbp+0]", "mov~ecx,[word ptr [rbp+0]", "mov~rdx,[rbp+0]", "mov~esi,[word ptr [rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "mov~r8d,0", "jz~FOO"]], [3, 0, 371, 0, 4, 19, 4, 5, 29, 31, 0.0024901207854610466, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aCannotFstatS; \"cannot fstat %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r12, rax", "call    _dcgettext", "mov     [rbp+restore_dst_mode_0], rax", "call    ___errno_location", "mov     rdx, [rbp+restore_dst_mode_0]; format", "mov     esi, [rax]; errnum", "mov     rcx, r12", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "xor     r8d, r8d", "mov     [rbp+restore_dst_mode_0], 0", "jmp     loc_8D15"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~[rbp+0],rax", "call~FOO", "mov~rdx,[rbp+0]", "mov~esi,<TAG>", "mov~rcx,r12", "xor~edi,edi", "xor~eax,eax", "call~FOO", "xor~r8d,r8d", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 376, 0, 0, 3, 1, 1, 14, 30, 0.07051284438981383, ["mov     rax, [rbp+symlink_err]", "test    rax, rax", "jz      short loc_5D37"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 375, 0, 0, 1, 0, 0, 15, 30, 0.0, ["mov     byte ptr [rax], 1"], ["mov~<TAG>,0"]], [0, 0, 511, 0, 0, 2, 1, 1, 20, 36, 0.00016914027976716543, ["test    r15d, r15d", "jz      loc_6ECE"], ["test~r15d,r15d", "jz~FOO"]], [2, 0, 535, 0, 0, 4, 1, 1, 20, 37, 0.002999573339834821, ["mov     eax, [dst_lstat_sb+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_8525"], ["mov~eax,[dst_lstat_sb+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [2, 1, 474, 0, 0, 7, 2, 1, 14, 32, 0.05064797601673231, ["mov     eax, [rbp+dst_sb.st_mode]", "mov     r12d, [rbp+mode]", "mov     edx, eax", "and     r12d, 0F000h", "and     edx, 0F000h", "cmp     edx, 4000h", "jz      loc_6D50"], ["mov~eax,[rbp+0]", "mov~r12d,[rbp+0]", "mov~edx,eax", "and~r12d,0", "and~edx,0", "cmp~edx,<STR>", "jz~FOO"]], [0, 0, 69, 0, 0, 1, 0, 1, 24, -1, 0.00016253720578226108, ["jmp     loc_7F8C"], ["jmp~FOO"]], [2, 0, 371, 0, 4, 18, 4, 5, 30, 30, 0.0, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aFailedToCloseS; \"failed to close %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r12, rax", "call    _dcgettext", "mov     [rbp+dest_link_val], rax", "call    ___errno_location", "mov     rdx, [rbp+dest_link_val]; format", "mov     esi, [rax]; errnum", "mov     rcx, r12", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "xor     r8d, r8d", "jmp     loc_7BD8"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~[rbp+0],rax", "call~FOO", "mov~rdx,[rbp+0]", "mov~esi,<TAG>", "mov~rcx,r12", "xor~edi,edi", "xor~eax,eax", "call~FOO", "xor~r8d,r8d", "jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 18, -1, 4.105757541895658e-05, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [2, 0, 371, 0, 1, 7, 0, 2, 45, 33, 0.0019525628392540895, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     edx, 5", "mov     r12, rax", "lea     rsi, aErrorDeallocat; \"error deallocating %s\"", "jmp     loc_961A"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~edx,0", "mov~r12,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [2, 0, 371, 0, 1, 6, 0, 1, 39, 33, 0.008318180125085924, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aFailedToExtend; \"failed to extend %s\"", "mov     r12, rax", "mov     edx, 5; category"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0"]], [1, 0, 371, 0, 1, 9, 1, 2, 16, 17, 0.13615284592488813, ["mov     ecx, dword ptr [rbp+symlink_err]; new_dst", "mov     edx, [rbp+mode]; mode", "mov     r8, x_0; x", "mov     rsi, [rbp+dst_name]; dst_name", "mov     rdi, [rbp+src_name]; src_name", "call    set_process_security_ctx", "test    al, al", "mov     [rbp+omitted_permissions], 0", "jz      loc_5D90"], ["mov~ecx,[word ptr [rbp+0]", "mov~edx,[rbp+0]", "mov~r8,x_0", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~al,al", "mov~[rbp+0],0", "jz~FOO"]], [0, 0, 371, 0, 1, 8, 1, 2, 15, 18, 0.19184215605603427, ["mov     ecx, dword ptr [rbp+symlink_err]; new_dst", "mov     edx, [rbp+mode]; mode", "mov     r8, x_0; x", "mov     rsi, [rbp+dst_name]; dst_name", "mov     rdi, [rbp+src_name]; src_name", "call    set_process_security_ctx", "test    al, al", "jz      loc_5D90"], ["mov~ecx,[word ptr [rbp+0]", "mov~edx,[rbp+0]", "mov~r8,x_0", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 371, 0, 1, 8, 1, 2, 16, 34, 0.0013891851806702626, ["mov     ecx, dword ptr [rbp+symlink_err]; new_dst", "mov     edx, [rbp+mode]; mode", "mov     r8, x_0; x", "mov     rsi, [rbp+dst_name]; dst_name", "mov     rdi, [rbp+src_name]; src_name", "call    set_process_security_ctx", "test    al, al", "jz      loc_5D90"], ["mov~ecx,[word ptr [rbp+0]", "mov~edx,[rbp+0]", "mov~r8,x_0", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 5, 0, 1, 5, 1, 2, 30, -1, 0.0014501366328386106, ["mov     rdi, [rbp+dst_name]; name", "mov     esi, 0FFFFFFFFh; desc", "call    set_acl", "test    eax, eax", "jnz     loc_5D90"], ["mov~rdi,[rbp+0]", "mov~esi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 371, 0, 0, 2, 0, 1, 14, 19, 0.3326044555511535, ["cmp     byte ptr [x_0+1Dh], 0", "jnz     loc_6578"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 29, -1, 0.0028317028819878297, ["mov     edx, [rbx+10h]; mode"], ["mov~edx,[rbx+0]"]], [2, 1, 371, 0, 0, 7, 2, 1, 16, 17, 0.19109804041081235, ["mov     r15d, [rbp+mode]", "mov     eax, r12d", "and     eax, 3Fh", "mov     [rbp+omitted_permissions], eax", "and     r15d, 0F000h", "cmp     r15d, 4000h", "jnz     loc_5FA8"], ["mov~r15d,[rbp+0]", "mov~eax,r12d", "and~eax,0", "mov~[rbp+0],eax", "and~r15d,0", "cmp~r15d,<STR>", "jnz~FOO"]], [1, 1, 371, 0, 0, 4, 1, 1, 15, 18, 0.13915216530033897, ["mov     r15d, [rbp+mode]", "and     r15d, 0F000h", "cmp     r15d, 4000h", "jz      loc_6DB0"], ["mov~r15d,[rbp+0]", "and~r15d,0", "cmp~r15d,<STR>", "jz~FOO"]], [1, 0, 617, 0, 0, 2, 0, 0, 4, 32, 0.0, ["mov     byte ptr [rax], 1", "nop     word ptr [rax+rax+00h]"], ["mov~<TAG>,0", "nop~[ord ptr [rax+0]"]], [0, 0, 514, 0, 0, 18, 0, 0, 24, 38, 0.0008774469468401751, ["movdqa  xmm0, xmmword ptr [dst_lstat_sb]", "movaps  xmmword ptr [rbp+timespec.tv_sec], xmm0", "movdqa  xmm0, xmmword ptr [dst_lstat_sb+10h]", "movaps  xmmword ptr [rbp+timespec.tv_sec+10h], xmm0", "movdqa  xmm0, xmmword ptr [dst_lstat_sb+20h]", "movaps  [rbp+var_B0], xmm0", "movdqa  xmm0, xmmword ptr [dst_lstat_sb+30h]", "movaps  [rbp+var_A0], xmm0", "movdqa  xmm0, xmmword ptr [dst_lstat_sb+40h]", "movaps  [rbp+var_90], xmm0", "movdqa  xmm0, xmmword ptr [dst_lstat_sb+50h]", "movaps  [rbp+var_80], xmm0", "movdqa  xmm0, xmmword ptr [dst_lstat_sb+60h]", "movaps  [rbp+var_70], xmm0", "movdqa  xmm0, xmmword ptr [dst_lstat_sb+70h]", "movaps  [rbp+var_60], xmm0", "movdqa  xmm0, xmmword ptr [dst_lstat_sb+80h]", "movaps  [rbp+var_50], xmm0"], ["movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [dst_lstat_sb+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [dst_lstat_sb+0]", "movaps~[rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [dst_lstat_sb+0]", "movaps~[rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [dst_lstat_sb+0]", "movaps~[rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [dst_lstat_sb+0]", "movaps~[rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [dst_lstat_sb+0]", "movaps~[rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [dst_lstat_sb+0]", "movaps~[rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [dst_lstat_sb+0]", "movaps~[rbp+0],xmm0"]], [1, 0, 616, 0, 0, 2, 0, 1, 2, 31, 0.009549060839707838, ["cmp     byte ptr [x_0+31h], 0", "jnz     short loc_5DF0"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 371, 0, 0, 5, 1, 1, 17, 32, 0.0557629598025172, ["mov     omitted_permissions_0, [rbp+restore_dst_mode_0]", "mov     dst_lstat_sb, [rbp+ino]", "mov     rcx, [rbp+src_mode]", "test    rax, rax", "jnz     short loc_65FC"], ["mov~omitted_permissions_0,[rbp+0]", "mov~dst_lstat_sb,[rbp+0]", "mov~rcx,[rbp+0]", "test~rax,rax", "jnz~FOO"]], [0, 1, 371, 0, 0, 4, 1, 1, 17, 33, 0.0010387143307022623, ["mov     eax, r12d", "and     eax, 12h", "mov     [rbp+omitted_permissions], eax", "jmp     loc_65C9"], ["mov~eax,r12d", "and~eax,<STR>", "mov~[rbp+0],eax", "jmp~FOO"]], [0, 0, 371, 0, 0, 1, 0, 1, 18, 32, 0.04701388677251912, ["jmp     loc_6EE0"], ["jmp~FOO"]], [1, 0, 371, 0, 1, 5, 3, 1, 23, 30, 0.00899795812635236, ["xor     edi, edi; status", "xor     eax, eax", "call    _error", "xor     r8d, r8d", "mov     [rbp+restore_dst_mode_0], 0"], ["xor~edi,edi", "xor~eax,eax", "call~FOO", "xor~r8d,r8d", "mov~[rbp+0],0"]], [2, 0, 513, 0, 0, 4, 1, 1, 25, 37, 0.0028647182519123517, ["mov     eax, [r12+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_8FA9"], ["mov~eax,[r12+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 371, 0, 0, 3, 1, 1, 19, 32, 0.0004291998090187832, ["mov     rax, [rax]", "test    rax, rax", "jz      loc_6EE0"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 371, 0, 0, 2, 0, 1, 18, 31, 0.007509726835908531, ["cmp     [rax+8], dst_lstat_sb", "jnz     short loc_65F0"], ["cmp~[rax+0],dst_lstat_sb", "jnz~FOO"]], [0, 0, 371, 0, 0, 2, 0, 1, 19, 30, 0.0056888022023791375, ["cmp     [rax+10h], rcx", "jnz     short loc_65F0"], ["cmp~[rax+0],rcx", "jnz~FOO"]], [1, 0, 405, 0, 0, 2, 1, 0, 7, 26, 0.030236999563181256, ["xor     r9d, r9d", "mov     [rbp+dst_backup], 0"], ["xor~r9d,r9d", "mov~[rbp+0],0"]], [3, 0, 371, 0, 3, 13, 2, 3, 30, 32, 0.0, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aRemovedS; \"removed %s\\n\"", "mov     r12, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, r12", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rdx,r12", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [0, 0, 404, 0, 0, 2, 1, 1, 8, 25, 0.12668372742962092, ["test    r13b, r13b", "jz      loc_5ED0"], ["test~r13b,r13b", "jz~FOO"]], [3, 0, 405, 0, 0, 4, 0, 1, 23, 26, 0.0010209368238198275, ["mov     [rbp+dst_backup], 0", "mov     r14d, 1", "mov     r15d, 11h", "jmp     loc_5E0E"], ["mov~[rbp+0],0", "mov~r14d,0", "mov~r15d,0", "jmp~FOO"]], [0, 0, 371, 0, 0, 1, 0, 1, 42, 34, 0.0008685581933989576, ["jmp     loc_95FA"], ["jmp~FOO"]], [1, 0, 403, 0, 0, 2, 0, 1, 9, 25, 0.005424679242982964, ["cmp     qword ptr [x_0+40h], 0", "jz      loc_5ED0"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [2, 0, 371, 0, 1, 6, 0, 1, 20, 29, 0.005135159845183311, ["mov     rsi, [rbp+src_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aCannotCopyCycl; \"cannot copy cyclic symbolic link %s\"", "mov     dst_mode_bits, rax", "mov     edx, 5; category"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~dst_mode_bits,rax", "mov~edx,0"]], [0, 0, 402, 0, 0, 3, 1, 1, 10, 25, 0.0057806526546050506, ["movzx   r12d, byte ptr [x_0+18h]", "test    r12b, r12b", "jnz     loc_5ED0"], ["movzx~r12d,[yte ptr [x_0+0]", "test~r12b,r12b", "jnz~FOO"]], [1, 0, 420, 0, 0, 2, 0, 1, 20, 29, 0.0061014943264356605, ["cmp     byte ptr [x_0+15h], 0", "jnz     short loc_7E59"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 68, 0, 1, 5, 1, 2, 26, -1, 8.63478905718262e-05, ["mov     rsi, [rbp+dst_name]; dst", "mov     rdi, [rbp+src_name]; src", "xor     edx, edx; backup_dst_name", "call    emit_verbose", "jmp     loc_77C8"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "xor~edx,edx", "call~FOO", "jmp~FOO"]], [1, 0, 70, 0, 0, 2, 0, 1, 25, -1, 0.0025701195664320033, ["cmp     byte ptr [x_0+18h], 0", "jz      loc_862D"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 397, 0, 0, 3, 1, 1, 12, 26, 0.0026767846077266123, ["test    r9b, r9b", "lea     dst_lstat_sb, [rbp+dst_sb]; stats", "jz      loc_76C0"], ["test~r9b,r9b", "lea~dst_lstat_sb,[rbp+0]", "jz~FOO"]], [1, 0, 371, 0, 0, 1, 0, 0, 46, 38, 0.00166727618118835, ["mov     byte ptr [rbp+ptr+1], 1"], ["mov~[yte ptr [rbp+0],0"]], [0, 0, 371, 0, 3, 11, 3, 4, 44, 33, 0.0061218114771584425, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     [rbp+format], rax", "call    ___errno_location", "mov     rdx, [rbp+format]; format", "mov     esi, [rax]; errnum", "mov     rcx, r12", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_8D06"], ["xor~edi,edi", "call~FOO", "mov~[rbp+0],rax", "call~FOO", "mov~rdx,[rbp+0]", "mov~esi,<TAG>", "mov~rcx,r12", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 394, 0, 0, 4, 1, 1, 13, 25, 0.0026551976350836556, ["mov     eax, [dst_lstat_sb+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     short loc_5ED0"], ["mov~eax,[dst_lstat_sb+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [0, 0, 395, 0, 0, 3, 0, 1, 14, 26, 1.5237863042086977e-05, ["mov     rcx, [rbp+earlier_file]", "mov     dst_lstat_sb, rcx", "jmp     loc_5E4A"], ["mov~rcx,[rbp+0]", "mov~dst_lstat_sb,rcx", "jmp~FOO"]], [2, 0, 371, 0, 1, 10, 1, 2, 31, 30, 0.0019326689625046981, ["mov     edx, [rbp+var_3A4]; mode", "mov     rsi, [rbp+dst_name]; dst_name", "mov     r8, x_0; x", "mov     rdi, [rbp+src_name]; src_name", "mov     ecx, 1; new_dst", "call    set_process_security_ctx", "test    al, al", "mov     r8d, eax", "mov     [rbp+restore_dst_mode_0], 0", "jz      loc_7BD8"], ["mov~edx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~r8,x_0", "mov~rdi,[rbp+0]", "mov~ecx,0", "call~FOO", "test~al,al", "mov~r8d,eax", "mov~[rbp+0],0", "jz~FOO"]], [0, 0, 510, 0, 0, 18, 0, 0, 26, 36, 0.0013192845073502128, ["movdqa  xmm0, xmmword ptr [r12]", "movaps  xmmword ptr [rbp+dot_sb.st_dev], xmm0", "movdqa  xmm0, xmmword ptr [r12+10h]", "movaps  xmmword ptr [rbp+dot_sb.st_nlink], xmm0", "movdqa  xmm0, xmmword ptr [r12+20h]", "movaps  xmmword ptr [rbp+dot_sb.st_gid], xmm0", "movdqa  xmm0, xmmword ptr [r12+30h]", "movaps  xmmword ptr [rbp+dot_sb.st_size], xmm0", "movdqa  xmm0, xmmword ptr [r12+40h]", "movaps  xmmword ptr [rbp+dot_sb.st_blocks], xmm0", "movdqa  xmm0, xmmword ptr [r12+50h]", "movaps  xmmword ptr [rbp+dot_sb.st_atim.tv_nsec], xmm0", "movdqa  xmm0, xmmword ptr [r12+60h]", "movaps  xmmword ptr [rbp+dot_sb.st_mtim.tv_nsec], xmm0", "movdqa  xmm0, xmmword ptr [r12+70h]", "movaps  xmmword ptr [rbp+dot_sb.st_ctim.tv_nsec], xmm0", "movdqa  xmm0, xmmword ptr [r12+80h]", "movaps  xmmword ptr [rbp+dot_sb.__glibc_reserved+8], xmm0"], ["movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r12+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r12+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r12+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r12+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r12+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r12+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r12+0]", "movaps~[mmword ptr [rbp+0],xmm0", "movdqa~xmm0,[mmword ptr [r12+0]", "movaps~[mmword ptr [rbp+0],xmm0"]], [0, 0, 393, 0, 1, 5, 1, 2, 14, 25, 0.0006603073984904357, ["mov     rdi, [x_0+40h]; ht", "mov     rsi, [rbp+dst_name]; file", "call    seen_file", "test    al, al", "jz      short loc_5ED0"], ["mov~rdi,[x_0+0]", "mov~rsi,[rbp+0]", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 511, 0, 1, 10, 1, 2, 26, 36, 0.0023962144310786617, ["mov     rsi, [rbp+dst_name]; filename", "lea     rdx, [rbp+dot_sb]; stat_buf", "mov     edi, 1; ver", "mov     byte ptr [rbp+earlier_file], r9b", "mov     byte ptr [rbp+dst_backup], r8b", "call    ___xstat", "test    eax, eax", "movzx   r8d, byte ptr [rbp+dst_backup]", "movzx   r9d, byte ptr [rbp+earlier_file]", "jz      loc_7671"], ["mov~rsi,[rbp+0]", "lea~rdx,[rbp+0]", "mov~edi,0", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 371, 0, 0, 2, 0, 0, 40, 37, 0.0017371163867979152, ["mov     rbx, [rbp+var_388]", "mov     r13d, [rbp+var_360]"], ["mov~rbx,[rbp+0]", "mov~r13d,[rbp+0]"]], [0, 0, 4, 0, 1, 4, 1, 1, 8, -1, 3.682483568504353e-05, ["lea     rsi, aRNotSpecifiedO; \"-r not specified; omitting directory %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     dst_lstat_sb, rax; format"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~dst_lstat_sb,rax"]], [1, 1, 480, 0, 0, 4, 1, 1, 12, 34, 0.01691693244241013, ["mov     eax, [rbp+mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_6710"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 560, 0, 1, 11, 1, 2, 17, 36, 0.002305996607035829, ["lea     r12, [rbp+dot_sb]", "mov     rsi, [rbp+dst_name]; filename", "mov     edi, 1; ver", "mov     byte ptr [rbp+earlier_file], r9b", "mov     byte ptr [rbp+dst_backup], r8b", "mov     dst_lstat_sb, r12; stat_buf", "call    ___lxstat", "test    eax, eax", "movzx   r8d, byte ptr [rbp+dst_backup]", "movzx   r9d, byte ptr [rbp+earlier_file]", "jz      loc_7ED2"], ["lea~r12,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r8b", "mov~dst_lstat_sb,r12", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jz~FOO"]], [3, 0, 371, 0, 3, 14, 2, 4, 21, 21, 0.0013828360710693931, ["lea     rsi, aCopied; \"copied \"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     edi, 1", "mov     rsi, rax", "xor     eax, eax", "call    ___printf_chk", "mov     rdx, [rbp+dst_backup]; backup_dst_name", "mov     rsi, [rbp+dst_name]; dst", "mov     rdi, [rbp+src_name]; src", "call    emit_verbose", "mov     dword ptr [rbp+symlink_err], 1", "jmp     loc_5F30"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~edi,0", "mov~rsi,rax", "xor~eax,eax", "call~FOO", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "mov~[word ptr [rbp+0],0", "jmp~FOO"]], [1, 0, 478, 0, 0, 2, 0, 1, 14, 34, 0.004093905870640701, ["cmp     eax, 3", "jnz     short loc_6710"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 559, 0, 1, 10, 1, 2, 18, 36, 0.0009168114263655665, ["lea     rax, [rbp+timespec]", "mov     rsi, [rbp+src_name]; filename", "mov     edi, 1; ver", "mov     rdx, rax; stat_buf", "mov     [rbp+s], rax", "call    ___lxstat", "test    eax, eax", "movzx   r8d, byte ptr [rbp+dst_backup]", "movzx   r9d, byte ptr [rbp+earlier_file]", "jnz     loc_6ECE"], ["lea~rax,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "mov~rdx,rax", "mov~[rbp+0],rax", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jnz~FOO"]], [0, 0, 506, 0, 0, 1, 0, 1, 23, 36, 0.0019197167789189243, ["jmp     loc_6ECE"], ["jmp~FOO"]], [1, 0, 391, 0, 0, 2, 0, 1, 9, 24, 0.12812582185696508, ["cmp     byte ptr [x_0+2Eh], 0", "jz      short loc_5EE0"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 396, 0, 1, 8, 1, 2, 13, 25, 0.00101204807037861, ["lea     rcx, [rbp+timespec]", "mov     rsi, [rbp+dst_name]; filename", "mov     edi, 1; ver", "mov     dst_lstat_sb, rcx; stat_buf", "mov     [rbp+earlier_file], rcx", "call    ___lxstat", "test    eax, eax", "jnz     loc_5ED0"], ["lea~rcx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "mov~dst_lstat_sb,rcx", "mov~[rbp+0],rcx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 385, 0, 0, 2, 0, 1, 11, 24, 0.02871414446171402, ["cmp     byte ptr [x_0+2Ah], 0", "jz      short loc_5F05"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 386, 0, 0, 1, 0, 1, 25, 25, 0.0004198877816041744, ["jmp     loc_5EE9"], ["jmp~FOO"]], [0, 0, 371, 0, 1, 6, 1, 2, 25, 8, 0.02523898048537673, ["mov     rsi, [rbp+size]; size", "mov     rdi, [rbp+src_name]; file", "call    areadlink_with_size", "test    rax, rax", "mov     dst_mode_bits, rax", "jz      loc_8F43"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~rax,rax", "mov~dst_mode_bits,rax", "jz~FOO"]], [2, 0, 371, 1, 0, 10, 2, 1, 19, 31, 0.0476767338148499, ["sub     rsp, 30h", "mov     rsi, [rbp+restore_dst_mode_0]", "lea     rax, [rsp+3F0h+var_3E1]", "and     rax, 0FFFFFFFFFFFFFFF0h", "test    r14b, r14b", "mov     [rbp+dest_link_val], rax", "mov     [rax], rsi", "mov     [rax+8], dst_lstat_sb", "mov     [rax+10h], rcx", "jnz     short loc_6F21"], ["sub~rsp,0", "mov~rsi,[rbp+0]", "lea~rax,[rsp+0]", "and~rax,0", "test~r14b,r14b", "mov~[rbp+0],rax", "mov~<TAG>,rsi", "mov~[rax+0],dst_lstat_sb", "mov~[rax+0],rcx", "jnz~FOO"]], [0, 0, 371, 0, 1, 8, 2, 2, 20, 30, 0.017818141183880306, ["mov     esi, [rbp+omitted_permissions]", "mov     r15, [rbp+dst_name]", "not     esi", "mov     rdi, r15; path", "and     esi, r12d; mode", "call    _mkdir", "test    eax, eax", "jz      loc_7700"], ["mov~esi,[rbp+0]", "mov~r15,[rbp+0]", "not~esi", "mov~rdi,r15", "and~esi,r12d", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 1, 371, 0, 0, 4, 1, 1, 20, 31, 0.028649722162963864, ["mov     eax, [rbp+dst_sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_7F78"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [0, 0, 558, 0, 0, 4, 1, 1, 19, 39, 0.0009218907140462621, ["xor     ecx, ecx", "mov     rax, [rbp+dot_sb.st_ino]", "cmp     [rbp+timespec.tv_nsec], rax", "jnz     short loc_7F2F"], ["xor~ecx,ecx", "mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [1, 0, 371, 0, 0, 3, 0, 0, 12, 21, 0.1145671431038511, ["movzx   eax, r14b", "mov     [rbp+earlier_file], 0", "mov     dword ptr [rbp+symlink_err], eax"], ["movzx~eax,r14b", "mov~[rbp+0],0", "mov~[word ptr [rbp+0],eax"]], [0, 0, 557, 0, 0, 3, 0, 0, 20, 39, 0.0, ["mov     rax, [rbp+dot_sb.st_dev]", "cmp     [rbp+timespec.tv_sec], rax", "setz    cl"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "setz~cl"]], [3, 0, 371, 0, 3, 22, 4, 4, 29, 30, 0.012013361912792017, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "mov     byte ptr [rbp+restore_dst_mode_0], r9b", "mov     dword ptr [rbp+dest_link_val], r8d", "call    quotearg_style", "lea     rsi, aCannotCreateRe; \"cannot create regular file %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r12, rax", "call    _dcgettext", "mov     r8d, dword ptr [rbp+dest_link_val]", "mov     rdx, rax; format", "mov     rcx, r12", "xor     edi, edi; status", "xor     eax, eax", "mov     esi, r8d; errnum", "call    _error", "movzx   r9d, byte ptr [rbp+restore_dst_mode_0]", "xor     r8d, r8d", "mov     [rbp+restore_dst_mode_0], 0", "mov     r14d, r9d", "jmp     loc_7BD8"], ["mov~rsi,[rbp+0]", "mov~edi,0", "mov~[yte ptr [rbp+0],r9b", "mov~[word ptr [rbp+0],r8d", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~r8d,[word ptr [rbp+0]", "mov~rdx,rax", "mov~rcx,r12", "xor~edi,edi", "xor~eax,eax", "mov~esi,r8d", "call~FOO", "movzx~r9d,[yte ptr [rbp+0]", "xor~r8d,r8d", "mov~[rbp+0],0", "mov~r14d,r9d", "jmp~FOO"]], [1, 1, 371, 0, 0, 4, 1, 1, 13, 20, 0.3332749215250053, ["mov     r12d, [rbp+mode]", "and     r12d, 0FFFh", "cmp     byte ptr [x_0+2Bh], 0", "jz      short loc_5F4F"], ["mov~r12d,[rbp+0]", "and~r12d,<STR>", "cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 1, 371, 0, 0, 2, 1, 0, 14, 20, 0.0, ["mov     r12d, [x_0+10h]", "and     r12d, 0FFFh"], ["mov~r12d,[x_0+0]", "and~r12d,<STR>"]], [2, 0, 371, 0, 1, 6, 0, 1, 21, 29, 0.003347250581578438, ["mov     rsi, r15; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aCannotCreateDi; \"cannot create directory %s\"", "mov     r13, rax", "mov     edx, 5; category"], ["mov~rsi,r15", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~r13,rax", "mov~edx,0"]], [2, 0, 371, 0, 1, 8, 2, 2, 23, 30, 0.0020317150722782636, ["mov     rdi, [rbp+dst_name]; file", "mov     esi, r12d", "or      esi, 1C0h; mode", "call    _chmod", "test    eax, eax", "mov     [rbp+dst_mode], r12d", "mov     byte ptr [rbp+restore_dst_mode_0], 1", "jnz     loc_8783"], ["mov~rdi,[rbp+0]", "mov~esi,r12d", "or~esi,0", "call~FOO", "test~eax,eax", "mov~[rbp+0],r12d", "mov~[yte ptr [rbp+0],0", "jnz~FOO"]], [2, 0, 371, 0, 1, 7, 0, 2, 26, 29, 0.0003961844390942614, ["mov     rsi, [rbp+src_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     edx, 5", "mov     r13, rax", "lea     rsi, aCannotReadSymb; \"cannot read symbolic link %s\"", "jmp     loc_6F5F"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~edx,0", "mov~r13,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 371, 0, 1, 2, 0, 1, 27, 28, 0.01147665051453184, ["mov     rdi, src_link_val; ptr", "call    free"], ["mov~rdi,src_link_val", "call~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 24, -1, 0.004832942228181919, ["cmp     byte ptr [x_0+2Eh], 0", "jz      short loc_77C8"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [2, 0, 371, 0, 1, 7, 0, 2, 22, 29, 0.0007542742205833053, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     edx, 5", "mov     r13, rax", "lea     rsi, aCannotStatS; \"cannot stat %s\"", "jmp     loc_6F5F"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~edx,0", "mov~r13,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [2, 0, 371, 0, 1, 7, 0, 2, 24, 29, 0.0015212466603683498, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     edx, 5", "mov     r13, rax", "lea     rsi, aSettingPermiss; \"setting permissions for %s\"", "jmp     loc_6F5F"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~edx,0", "mov~r13,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [2, 0, 68, 0, 0, 3, 0, 1, 22, -1, 0.023118377878686293, ["mov     byte ptr [rbp+restore_dst_mode_0], 0", "mov     [rbp+omitted_permissions], 0", "jmp     loc_77C8"], ["mov~[yte ptr [rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 443, 0, 1, 9, 0, 2, 19, 28, 0.0040346475143659185, ["mov     rdi, [rbp+src_name]; name", "mov     byte ptr [rbp+earlier_file], r9b", "mov     byte ptr [rbp+dst_backup], r8b", "call    last_component", "cmp     byte ptr [rax], 2Eh ; '.'", "mov     r14, rax", "movzx   r8d, byte ptr [rbp+dst_backup]", "movzx   r9d, byte ptr [rbp+earlier_file]", "jnz     short loc_67C7"], ["mov~rdi,[rbp+0]", "mov~[yte ptr [rbp+0],r9b", "mov~[yte ptr [rbp+0],r8b", "call~FOO", "cmp~<TAG>,0", "mov~r14,rax", "movzx~r8d,[yte ptr [rbp+0]", "movzx~r9d,[yte ptr [rbp+0]", "jnz~FOO"]], [0, 0, 442, 0, 0, 1, 1, 0, 20, 29, 0.0010056989607777405, ["xor     eax, eax"], ["xor~eax,eax"]], [0, 0, 371, 0, 1, 5, 0, 1, 16, 25, 0.01680812482857404, ["mov     dst_lstat_sb, [rbp+src_mode]; dev", "mov     rsi, [rbp+ino]; ino", "mov     rdi, [rbp+dst_name]; name", "call    remember_copied", "mov     [rbp+earlier_file], rax"], ["mov~dst_lstat_sb,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [3, 0, 68, 0, 3, 14, 2, 3, 26, -1, 8.63478905718262e-05, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aCreatedDirecto; \"created directory %s\\n\"", "mov     r12, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, r12", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "nop     dword ptr [rax+00000000h]"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rdx,r12", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "nop~[word ptr [rax+0]"]], [0, 0, 423, 0, 0, 2, 1, 1, 23, 28, 0.00020190168530765244, ["test    al, al", "jnz     short loc_67DD"], ["test~al,al", "jnz~FOO"]], [2, 0, 371, 0, 0, 3, 0, 1, 19, 29, 0.007248143520352705, ["cmp     byte ptr [x_0+16h], 0", "mov     edx, 1", "jnz     short loc_5FD8"], ["cmp~[yte ptr [x_0+0],0", "mov~edx,0", "jnz~FOO"]], [0, 0, 450, 0, 0, 1, 0, 0, 19, 29, 6.222127408852182e-05, ["mov     eax, [rbp+dst_sb.st_mode]"], ["mov~eax,[rbp+0]"]], [1, 0, 371, 0, 0, 3, 1, 0, 20, 29, 0.0, ["xor     edx, edx", "cmp     dword ptr [x_0+8], 3", "setz    dl; replace"], ["xor~edx,edx", "cmp~[word ptr [x_0+0],0", "setz~dl"]]], "func_feature": [337, 497, 879, 28, 629, 1037, 2, 3318, 0.01749, 57, 30], "succs": [[450], [0, 304], [0, 386], [0, 311], [0, 367], [515, 119], [5, 119], [20, 31], [254, 7], [144, 7], [107, 7], [12, 7], [504, 7], [7], [287, 7], [7], [7], [7], [35], [18, 515], [32, 31], [332, 76], [21, 23], [21], [566, 30], [24, 560], [572], [26, 98], [140], [292, 28], [515], [37, 95], [33, 31], [262, 31], [31], [41, 42], [593, 35], [46], [228], [202, 38], [78, 38], [50, 157], [41, 121], [41, 44], [41, 45], [41, 597], [74, 90], [46], [237], [48, 225], [162, 59], [53, 63], [51, 236], [63], [80, 79], [54, 79], [269, 349], [56, 302], [56, 302], [517, 62], [64, 252], [252, 60], [73, 517], [232, 126], [72, 275], [449, 122], [65, 67], [65, 228], [355, 125], [586, 68], [68], [68], [92, 93], [89, 517], [90, 91], [332], [75, 348], [538], [154, 77], [243, 134], [81, 79], [82, 79], [83, 79], [84, 79], [425, 79], [10, 86], [401, 10], [6, 207], [6, 87], [117, 517], [95], [90], [275, 94], [248, 92], [343], [96, 102], [102, 343], [577, 601], [272, 97], [105, 533], [99, 101], [112, 99], [108, 343], [473], [473, 103], [112, 106], [112], [261], [197, 111], [108], [114, 203], [155, 110], [131, 127], [112, 100], [193], [554], [115, 61], [140], [117, 253], [25, 117], [520, 117], [537, 117], [448, 550], [138], [123, 205], [147, 356], [151], [539, 135], [129, 127], [130, 127], [127], [128, 127], [161, 71], [444, 132], [572], [414, 143], [381, 174], [136, 175], [176], [138, 325], [344], [140], [140], [152, 465], [258], [336, 149], [145, 523], [609], [147], [505], [223, 151], [150, 223], [538, 164], [255], [153, 255], [160, 197], [515, 159], [156, 158], [544, 156], [163, 173], [193, 197], [165, 222], [118], [400, 173], [538, 183], [168, 224], [470], [358, 166], [194], [168, 469], [168], [336], [337, 171], [88, 178], [343], [380, 174], [410], [176], [184, 515], [178], [307, 139], [384], [181, 342], [216, 538], [515, 187], [52], [235, 52], [478, 190], [208, 8], [377, 188], [88], [192, 190], [179, 190], [344, 196], [540, 39], [194, 148], [197], [203, 343], [616], [616, 198], [481, 502], [200, 474], [40, 154], [237, 206], [393, 394], [393, 204], [209, 225], [6, 230], [212, 213], [225, 49], [583], [210, 462], [8], [212, 214], [512, 212], [212], [220], [337, 219], [217, 3], [332], [538], [220], [224, 169], [231], [229, 285], [344, 238], [113, 227], [113, 530], [113, 226], [233, 609], [245, 6], [234], [231], [609, 70], [109, 47], [185, 234], [234], [301, 239], [237], [556, 116], [244, 141], [240, 306], [343], [242, 573], [251, 141], [118], [27, 247], [352, 27], [412], [118], [118], [290, 267], [275, 343], [478], [258], [180, 205], [228, 549], [256, 228], [273, 428], [17, 258], [258], [258], [258, 34], [258, 546], [258], [258], [16, 258], [482, 292], [267, 620], [267, 349], [384, 182], [387, 270], [600], [281, 279], [13, 14], [297, 343], [286, 327], [276, 278], [276, 246], [344, 291], [428, 279], [279], [336], [282, 332], [565], [378, 284], [288, 246], [266, 15], [327], [142, 295], [289, 268], [294, 375], [296, 55], [292], [344, 322], [57, 302], [319], [300], [261], [409, 298], [344, 303], [300, 317], [305], [343], [417, 218], [308, 477], [305, 290], [124, 205], [620, 318], [312, 607], [600, 309], [4, 367], [315, 316], [312, 314], [312, 466], [321, 22], [315], [343], [578, 327], [320, 318], [625, 318], [22], [344], [533, 446], [323], [323], [323], [572], [55, 327], [293, 327], [513, 340], [330, 581], [343], [332, 334], [332, 429], [595, 332], [545, 332], [338, 332], [332], [332], [341, 607], [600], [561, 559], [366, 623], [343], [343], [343], [343], [343], [343], [343], [343], [343], [343], [343], [370, 195], [355, 357], [355, 167], [355], [299, 391], [299, 359], [376, 373], [361, 443], [177, 326], [363], [363, 364], [], [280], [534], [368, 324], [609, 379], [432, 455], [371, 607], [1], [137, 497], [346], [1], [360, 626], [571, 69], [609], [500, 390], [380], [265, 389], [382, 615], [385, 387], [387], [304, 420], [392, 561], [265, 396], [265, 388], [572], [11, 85], [395, 397], [364, 365], [393], [421, 399], [265, 405], [408, 404], [397], [397], [250, 191], [416, 602], [583], [402, 475], [424, 412], [265, 418], [613, 199], [617, 406], [424, 412], [524, 413], [536, 415], [410, 590], [346], [444, 133], [538], [426, 411], [260], [280], [419, 431], [265], [280, 339], [427, 452], [421], [472, 421], [421, 423], [458, 437], [489], [452, 439], [432], [548, 428], [274, 428], [430], [622, 438], [432, 460], [461], [434, 403], [434, 532], [353], [440, 445], [441, 453], [445, 622], [456, 453], [464, 451], [442, 372], [565], [450, 622], [228, 447], [228, 550], [257, 228], [228, 574], [460, 454], [433, 460], [457, 459], [452], [610], [454], [531, 350], [459], [353], [570, 463], [313, 466], [104, 532], [461], [467, 468], [2], [538], [201, 351], [490, 476], [467, 516], [170, 538], [264, 9], [347], [591, 471], [480, 582], [483], [211, 436], [490, 374], [329, 627], [515], [36, 478], [489, 411], [488, 485], [329, 29], [344], [483], [488, 484], [619, 263], [619, 486], [594, 501], [499, 435], [491, 374], [492, 374], [493, 374], [494, 374], [374], [498, 335], [541, 495], [500], [505], [435], [515, 508], [610], [501, 503], [484, 501], [261], [337, 507], [592, 505], [172, 509], [19, 510], [336, 511], [19, 479], [528, 336], [525, 526], [522, 310], [513, 310], [146, 506], [515], [515], [515, 519], [120, 515], [515], [515], [310], [496, 527], [565], [260], [525, 215], [496, 529], [336, 172], [496], [533], [453], [535], [538], [533], [533], [369, 66], [517, 543], [547, 470], [538, 221], [538], [333, 542], [333], [249, 517], [192, 6], [241, 58], [619], [470], [344], [534], [534], [344, 189], [344, 557], [344, 563], [344, 354], [552, 558], [554], [562, 189], [553, 551], [561], [566], [422, 398], [568, 564], [562], [603], [470], [587, 589], [568, 603], [569, 567], [576, 567], [572], [69], [598, 575], [572], [550], [577, 598], [260], [331, 598], [277, 246], [186], [624, 579], [584, 599], [411], [535], [588, 598], [584], [470, 71], [518], [345, 598], [521, 518], [66], [347], [336, 335], [596, 517], [610], [336, 283], [517, 606], [517], [514, 310], [585, 598], [362, 443], [600], [614, 383], [604, 605], [612, 407], [604, 487], [608, 43], [610], [43], [470], [555, 611], [555], [261], [618, 199], [261], [430], [186, 580], [261], [261], [186], [328, 621], [319], [2], [], [186], [328, 55], [259, 628], [482], [259]], "fname": "copy_internal", "n_num": 629}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 12, 0, 0, 4, 0, 1, 0, 0, 0.1, ["mov     eax, [options+0Ch]", "lea     r10d, [rax-1]", "cmp     r10d, 2", "ja      loc_9C98"], ["mov~eax,[options+0]", "lea~r10d,[rax-1]+0]", "cmp~r10d,0", "ja~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 1, -1, 0.058333333333333334, ["cmp     dword ptr [options], 3", "ja      loc_9CB7"], ["cmp~<TAG>,0", "ja~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 1, 2, 1, 1, 17, 3, 2, 6, -1, 0.06666666666666667, ["mov     [rsp+18h+first_dir_created_per_command_line_arg], 0", "push    rename_succeeded_0; rename_succeeded", "movzx   edx, dl; new_dst", "push    copy_into_self_0; copy_into_self", "mov     rename_succeeded_0, options; x", "xor     r8d, r8d; ancestors", "xor     ecx, ecx; parent", "mov     cs:top_level_dst_name, dst_name", "mov     cs:top_level_src_name, src_name", "lea     rax, [rsp+28h+first_dir_created_per_command_line_arg]", "push    rax; first_dir_created_per_command_line_arg", "push    1; command_line_arg", "call    copy_internal", "add     rsp, 20h", "mov     rsi, [rsp+18h+var_10]", "xor     rsi, fs:28h", "jnz     short loc_9C74"], ["mov~[rsp+0],0", "push~rename_succeeded_0", "movzx~edx,dl", "push~copy_into_self_0", "mov~rename_succeeded_0,options", "xor~r8d,r8d", "xor~ecx,ecx", "mov~<TAG>,dst_name", "mov~<TAG>,src_name", "lea~rax,[rsp+0]", "push~rax", "push~0", "call~FOO", "add~rsp,<STR>", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 6, -1, 0.029166666666666667, ["cmp     r10d, 2", "jz      short loc_9C55"], ["cmp~r10d,0", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 5, -1, 0.125, ["cmp     eax, 2", "jz      short loc_9BE6"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 16, 1, 0, 6, 2, 1, 0, 1, 0.0, ["sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+18h+var_10], rax", "xor     eax, eax", "test    options, options", "jz      loc_9CD6"], ["sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~options,options", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 6, -1, 0.0, ["lea     options, __PRETTY_FUNCTION___7875; \"valid_options\"", "lea     dst_name, file; \"src/copy.c\"", "lea     src_name, assertion; \"!(co->hard_link && co->symbolic_link)\"", "mov     edx, 0B8Ah; line", "call    ___assert_fail"], ["lea~options,<TAG>", "lea~dst_name,<TAG>", "lea~src_name,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 5, -1, 0.020833333333333332, ["cmp     byte ptr [options+2Ch], 0", "jz      short loc_9BDB"], ["cmp~[yte ptr [options+0],0", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 1, 0, 0.0, ["lea     options, __PRETTY_FUNCTION___7875; \"valid_options\"", "lea     dst_name, file; \"src/copy.c\"", "lea     src_name, aCoNull; \"co != NULL\"", "mov     edx, 0B86h; line", "call    ___assert_fail"], ["lea~options,<TAG>", "lea~dst_name,<TAG>", "lea~src_name,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 7, -1, 0.0, ["add     rsp, 18h", "retn"], ["add~rsp,0", "retn"]], [1, 0, 10, 0, 0, 3, 0, 1, 3, -1, 0.125, ["mov     r10d, [options+38h]", "cmp     r10d, 2", "ja      loc_9C79"], ["mov~r10d,[options+0]", "cmp~r10d,0", "ja~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 2, -1, 0.0, ["lea     options, __PRETTY_FUNCTION___7875; \"valid_options\"", "lea     dst_name, file; \"src/copy.c\"", "lea     src_name, aValidBackupTyp; \"VALID_BACKUP_TYPE (co->backup_type)\"", "mov     edx, 0B87h; line", "call    ___assert_fail"], ["lea~options,<TAG>", "lea~dst_name,<TAG>", "lea~src_name,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 3, -1, 0.0, ["lea     options, __PRETTY_FUNCTION___7875; \"valid_options\"", "lea     dst_name, file; \"src/copy.c\"", "lea     src_name, aValidSparseMod; \"VALID_SPARSE_MODE (co->sparse_mode)\"", "mov     edx, 0B88h; line", "call    ___assert_fail"], ["lea~options,<TAG>", "lea~dst_name,<TAG>", "lea~src_name,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 4, -1, 0.0, ["lea     options, __PRETTY_FUNCTION___7875; \"valid_options\"", "lea     dst_name, file; \"src/copy.c\"", "lea     src_name, aValidReflinkMo; \"VALID_REFLINK_MODE (co->reflink_mode)\"", "mov     edx, 0B89h; line", "call    ___assert_fail"], ["lea~options,<TAG>", "lea~dst_name,<TAG>", "lea~src_name,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 4, -1, 0.13333333333333333, ["cmp     byte ptr [options+17h], 0", "jnz     short loc_9C30"], ["cmp~[yte ptr [options+0],0", "jnz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 7, -1, 0.0, ["lea     options, __PRETTY_FUNCTION___7875; \"valid_options\"", "lea     dst_name, file; \"src/copy.c\"", "lea     src_name, aCoReflinkModeR; \"! (co->reflink_mode == REFLINK_ALWAYS &\"...", "mov     edx, 0B8Dh; line", "call    ___assert_fail"], ["lea~options,<TAG>", "lea~dst_name,<TAG>", "lea~src_name,<TAG>", "mov~edx,0", "call~FOO"]]], "func_feature": [8, 5, 17, 1, 17, 18, 2, 73, 0.03873, 11, 3], "succs": [[11, 13], [0, 12], [], [2, 10], [16, 3], [3, 4], [9, 1], [], [5, 7], [], [], [14, 15], [], [], [], [8, 5], []], "fname": "copy", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 1, 0, 5, 1, 0, 0, 0, 0.0, ["mov     rax, [p]", "xor     edx, edx", "div     table_size", "mov     rax, rdx", "retn"], ["mov~rax,<TAG>", "xor~edx,edx", "div~,table_size", "mov~rax,rdx", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 0, 1], "succs": [[]], "fname": "src_to_dest_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.0, ["xor     eax, eax", "mov     rdx, [b]", "cmp     [a], rdx", "jz      short loc_9D20"], ["xor~eax,eax", "mov~rdx,<TAG>", "cmp~<TAG>,rdx", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["mov     rax, [b+8]", "cmp     [a+8], rax", "setz    al", "retn"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "setz~al", "retn"]]], "func_feature": [0, 1, 1, 0, 3, 2, 0, 9, 0.0, 0, 0], "succs": [[1, 2], [], []], "fname": "src_to_dest_compare", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 1, 0, 1, 7, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, a", "mov     a, [a+10h]; ptr", "call    free", "mov     rdi, a; ptr", "pop     a", "jmp     free"], ["push~rbx", "mov~rbx,a", "mov~a,[a+0]", "call~FOO", "mov~rdi,a", "pop~a", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 0, 2, 0, 2, 1, 0, 7, 0.0, 0, 0], "succs": [[1], []], "fname": "src_to_dest_free", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 1, 4, 1, 1, 13, 2, 2, 0, 0, 0.0, ["push    rbx", "sub     rsp, 20h", "mov     [rsp+28h+var_28], ino", "mov     ino, cs:src_to_dest; table", "mov     [rsp+28h+dev], dev_0", "mov     dev_0, rsp; entry", "mov     [rsp+28h+var_18], 0", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "call    hash_delete", "test    ent, ent", "jz      short loc_9D9F"], ["push~rbx", "sub~rsp,<STR>", "mov~<TAG>,ino", "mov~ino,<TAG>", "mov~[rsp+0],dev_0", "mov~dev_0,rsp", "mov~[rsp+0],0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~ent,ent", "jz~FOO"]], [0, 0, 3, 0, 2, 5, 0, 2, 0, 2, 0.0, ["mov     rdi, [ent+10h]; ptr", "mov     rbx, ent", "call    free", "mov     rdi, ent; ptr", "call    free"], ["mov~rdi,[ent+0]", "mov~rbx,ent", "call~FOO", "mov~rdi,ent", "call~FOO"]], [0, 1, 0, 1, 0, 3, 0, 0, 0, -1, 0.0, ["add     rsp, 20h", "pop     rbx", "retn"], ["add~rsp,<STR>", "pop~rbx", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 0, 1, 0.3333333333333333, ["mov     rax, [rsp+28h+var_10]", "xor     rax, fs:28h", "jnz     short loc_9DB5"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [4, 3, 6, 3, 5, 5, 2, 25, 0.06667, 2, 2], "succs": [[1, 3], [3], [], [2, 4], []], "fname": "forget_created", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.30000000000000004, ["mov     rdx, [rsp+28h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_9E14"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 2, 0.07500000000000001, ["xor     eax, eax", "jmp     short loc_9DF5"], ["xor~eax,eax", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 1, 2, 0.07500000000000001, ["mov     e, [e+10h]"], ["mov~e,[e+0]"]], [1, 0, 0, 1, 0, 2, 0, 0, 3, -1, 0.0, ["add     rsp, 28h", "retn"], ["add~rsp,0", "retn"]], [1, 0, 5, 1, 1, 11, 2, 2, 0, 3, 0.0, ["sub     rsp, 28h", "mov     [rsp+28h+var_28], ino", "mov     ino, cs:src_to_dest; table", "mov     [rsp+28h+dev], dev_0", "mov     dev_0, rsp; entry", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "call    hash_lookup", "test    e, e", "jz      short loc_9E10"], ["sub~rsp,0", "mov~<TAG>,ino", "mov~ino,<TAG>", "mov~[rsp+0],dev_0", "mov~dev_0,rsp", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~e,e", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 4, 5, 2, 6, 6, 2, 20, 0.075, 2, 2], "succs": [[3, 5], [0], [0], [], [1, 2], []], "fname": "src_to_dest_lookup", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 1, 0, 2, 5, 0, 2, 0, 0, 0.05, ["mov     rdi, [ent+10h]; ptr", "call    free", "mov     rdi, ent; ptr", "call    free", "mov     rax, [ent_from_table+10h]"], ["mov~rdi,[ent+0]", "call~FOO", "mov~rdi,ent", "call~FOO", "mov~rax,[ent_from_table+0]"]], [0, 0, 3, 0, 0, 3, 0, 1, 1, -1, 0.15000000000000002, ["cmp     ent, ent_from_table", "mov     dev, ent_from_table", "jz      short loc_9E90"], ["cmp~ent,ent_from_table", "mov~dev,ent_from_table", "jz~FOO"]], [2, 0, 5, 1, 3, 21, 1, 4, 0, 1, 0.0, ["push    r13", "push    r12", "mov     r13, name", "push    rbp", "push    rbx", "mov     edi, 18h; n", "mov     r12, ino", "mov     rbp, dev", "sub     rsp, 8", "call    xmalloc", "mov     rdi, name; string", "mov     rbx, rax", "call    xstrdup", "mov     rdi, cs:src_to_dest; table", "mov     rsi, ent; entry", "mov     [ent+10h], rax", "mov     [ent], ino", "mov     [ent+8], dev", "call    hash_insert", "test    ent_from_table, ent_from_table", "jz      short loc_9E94"], ["push~r13", "push~r12", "mov~r13,name", "push~rbp", "push~rbx", "mov~edi,0", "mov~r12,ino", "mov~rbp,dev", "sub~rsp,0", "call~FOO", "mov~rdi,name", "mov~rbx,rax", "call~FOO", "mov~rdi,<TAG>", "mov~rsi,ent", "mov~[ent+0],rax", "mov~<TAG>,ino", "mov~[ent+0],dev", "call~FOO", "test~ent_from_table,ent_from_table", "jz~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "pop     ent", "pop     ent_from_table", "pop     ino", "pop     name", "retn"], ["add~rsp,0", "pop~ent", "pop~ent_from_table", "pop~ino", "pop~name", "retn"]], [0, 0, 1, 0, 0, 2, 1, 1, 2, -1, 0.05, ["xor     eax, eax", "jmp     short loc_9E84"], ["xor~eax,eax", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [6, 2, 9, 0, 6, 6, 4, 38, 0.04167, 1, 2], "succs": [[3], [0, 4], [1, 5], [], [3], []], "fname": "remember_copied", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [2, 0, 2, 1, 1, 10, 2, 2, 0, 1, 0.0, ["lea     r8, src_to_dest_free; data_freer", "lea     rcx, src_to_dest_compare; comparator", "lea     rdx, src_to_dest_hash; hasher", "sub     rsp, 8", "xor     esi, esi; tuning", "mov     edi, 67h ; 'g'; candidate", "call    hash_initialize", "test    rax, rax", "mov     cs:src_to_dest, rax", "jz      short loc_9ED6"], ["lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "sub~rsp,0", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 3, 0, 3, 2, 1, 13, 0.0, 4, 2], "succs": [[], [0, 2], []], "fname": "hash_init", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     rdi, cs:src_to_dest; table", "jmp     hash_free"], ["mov~rdi,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 1, 0], "succs": [[], [0]], "fname": "forget_all", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[6, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0.0, ["mov     [scan], edi", "mov     qword ptr [scan+18h], 0", "mov     qword ptr [scan+28h], 0", "mov     qword ptr [scan+8], 0", "mov     byte ptr [scan+20h], 0", "mov     byte ptr [scan+21h], 0", "mov     dword ptr [scan+10h], 1", "retn"], ["mov~<TAG>,edi", "mov~[word ptr [scan+0],0", "mov~[word ptr [scan+0],0", "mov~[word ptr [scan+0],0", "mov~[yte ptr [scan+0],0", "mov~[yte ptr [scan+0],0", "mov~[word ptr [scan+0],0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 8, 0.0, 0, 0], "succs": [[]], "fname": "extent_scan_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 4, 1, 0, 8, 0, 1, 0, 0, 0.0011614401858304297, ["lea     eax, [r15-1]", "mov     rdx, [scan+28h]", "lea     rcx, [rax+rax*2]", "mov     [scan+18h], rax", "mov     rax, [rdx+rcx*8-18h]", "add     rax, [rdx+rcx*8-10h]", "mov     [scan+8], rax", "jmp     short loc_A1AC"], ["lea~eax,[r15-1]+0]", "mov~rdx,[scan+0]", "lea~rcx,<TAG>", "mov~[scan+0],rax", "mov~rax,[rdx+0]", "add~rax,[rdx+0]", "mov~[scan+0],rax", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 10, 4, 0.01684088269454123, ["test    al, al", "jnz     short loc_A1A5"], ["test~al,al", "jnz~FOO"]], [0, 0, 42, 2, 0, 10, 0, 0, 14, 6, 0.059233449477351915, ["mov     edx, ecx", "mov     rdi, r13", "lea     rax, ds:0[rdx*8]", "sub     rax, rdx", "lea     rsi, [r12+rax*8]", "mov     rax, [rsi+10h]", "mov     rdx, [rsi]", "sub     rdi, rax", "cmp     rdx, rdi", "jbe     loc_A038"], ["mov~edx,ecx", "mov~rdi,r13", "lea~rax,<TAG>", "sub~rax,rdx", "lea~rsi,<TAG>", "mov~rax,[rsi+0]", "mov~rdx,<TAG>", "sub~rdi,rax", "cmp~rdx,rdi", "jbe~FOO"]], [1, 0, 42, 2, 0, 6, 0, 0, 13, 7, 0.06547619047619048, ["add     ecx, 1", "add     rax, r10", "mov     [rbx+10h], r9d", "cmp     ecx, r8d", "mov     [rbx+8], rax", "jb      short loc_A0E3"], ["add~ecx,0", "add~rax,r10", "mov~[rbx+0],r9d", "cmp~ecx,r8d", "mov~[rbx+0],rax", "jb~FOO"]], [1, 0, 42, 1, 0, 3, 0, 0, 14, 6, 0.17087688734030199, ["add     ecx, 1", "cmp     ecx, r8d", "jnb     short loc_A150"], ["add~ecx,0", "cmp~ecx,r8d", "jnb~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 3, 1, 0.0429732868757259, ["mov     rbx, [rsp+var_s1008]", "xor     rbx, fs:28h", "jnz     loc_A228"], ["mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "jnz~FOO"]], [1, 0, 4, 0, 0, 3, 1, 1, 2, 2, 0.036875725900116146, ["xor     eax, eax", "cmp     qword ptr [scan+8], 0", "jnz     short loc_A080"], ["xor~eax,eax", "cmp~[word ptr [scan+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 11, 2, 0.0351335656213705, ["mov     eax, 1", "jmp     loc_A080"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 3, 0, 0, 4, 0, 1, 3, 2, 0.0017421602787456446, ["cmp     qword ptr [scan+8], 0", "mov     byte ptr [scan+21h], 1", "setnz   al", "jmp     loc_A080"], ["cmp~[word ptr [scan+0],0", "mov~[yte ptr [scan+0],0", "setnz~al", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 1, 0, 3, 2, 0.0, ["mov     byte ptr [scan+20h], 1", "xor     eax, eax"], ["mov~[yte ptr [scan+0],0", "xor~eax,eax"]], [1, 0, 42, 2, 1, 8, 1, 2, 7, 6, 0.2229965156794425, ["lea     rsi, [rcx+rcx*2]", "shl     rsi, 3; n", "call    xrealloc", "mov     r8d, [rsp+var_s14]", "add     rbx, rax", "mov     [scan+28h], rax", "test    r8d, r8d", "jz      loc_A150"], ["lea~rsi,<TAG>", "shl~rsi,0", "call~FOO", "mov~r8d,[rsp+0]", "add~rbx,rax", "mov~[scan+0],rax", "test~r8d,r8d", "jz~FOO"]], [0, 0, 42, 0, 0, 2, 1, 1, 6, 7, 0.21544715447154472, ["test    rsi, rsi", "jnz     loc_A223"], ["test~rsi,rsi", "jnz~FOO"]], [1, 0, 42, 2, 0, 5, 0, 1, 13, 7, 0.046215640727835856, ["sub     rax, length_adjust", "mov     [rsi], new_logical", "sub     ecx, 1", "mov     [rsi+10h], rax", "jmp     loc_A0DB"], ["sub~rax,length_adjust", "mov~<TAG>,new_logical", "sub~ecx,0", "mov~[rsi+0],rax", "jmp~FOO"]], [0, 0, 42, 1, 0, 4, 0, 0, 12, 3, 0.07467092528068137, ["mov     r10, new_logical", "sub     r10, rdx", "cmp     length_adjust, rax", "jnb     loc_A188"], ["mov~r10,new_logical", "sub~r10,rdx", "cmp~length_adjust,rax", "jnb~FOO"]], [1, 0, 42, 0, 0, 2, 0, 1, 5, 9, 0.0, ["mov     esi, 1", "jmp     loc_9FE6"], ["mov~esi,0", "jmp~FOO"]], [1, 0, 42, 3, 0, 9, 1, 0, 4, 9, 0.2067363530778165, ["mov     rdi, [scan+28h]; p", "mov     edx, 18h", "add     rcx, rax", "mov     rax, rdx", "xor     esi, esi", "mov     [scan+18h], rcx", "sub     rbx, rdi", "mul     rcx", "jo      loc_A219"], ["mov~rdi,[scan+0]", "mov~edx,0", "add~rcx,rax", "mov~rax,rdx", "xor~esi,esi", "mov~[scan+0],rcx", "sub~rbx,rdi", "mul~,rcx", "jo~FOO"]], [1, 2, 42, 0, 1, 17, 3, 2, 1, 3, 0.23315911730545877, ["xor     eax, eax", "mov     ecx, 200h", "mov     rdi, fiemap", "rep stosq", "mov     eax, [scan+10h]", "mov     edi, [scan]; fd", "mov     esi, 0C020660Bh; request", "mov     [rsp+var_s0], rdx", "not     rdx", "mov     [rsp+var_s18], 48h ; 'H'", "mov     [rsp+var_s8], rdx", "mov     rdx, fiemap", "mov     [rsp+var_s10], eax", "xor     eax, eax", "call    _ioctl", "test    eax, eax", "js      loc_A070"], ["xor~eax,eax", "mov~ecx,<STR>", "mov~rdi,fiemap", "stosq~<TAG>,", "mov~eax,[scan+0]", "mov~edi,<TAG>", "mov~esi,0", "mov~<TAG>,rdx", "not~rdx", "mov~[rsp+0],<STR>", "mov~[rsp+0],rdx", "mov~rdx,fiemap", "mov~[rsp+0],eax", "xor~eax,eax", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 42, 1, 0, 5, 0, 0, 11, 4, 0.2183507549361208, ["mov     rdx, [rbx+8]", "add     rdx, [rbx]", "cmp     r15d, 47h ; 'G'", "mov     [scan+8], rdx", "jbe     loc_9F63"], ["mov~rdx,[rbx+0]", "add~rdx,<TAG>", "cmp~r15d,0", "mov~[scan+0],rdx", "jbe~FOO"]], [1, 1, 42, 1, 0, 17, 2, 0, 0, 4, 0.0, ["push    r15", "push    r14", "xor     r15d, r15d", "push    r13", "push    r12", "mov     r14, scan", "push    rbp", "push    rbx", "mov     r13, 7FFFFFFFFFFFFFFFh", "sub     rsp, 1018h", "mov     rbx, [scan+28h]", "mov     rdx, [scan+8]", "mov     rbp, rsp", "mov     rax, fs:28h", "mov     [rsp+var_s1008], rax", "xor     eax, eax", "lea     r12, [rbp+var_s20]"], ["push~r15", "push~r14", "xor~r15d,r15d", "push~r13", "push~r12", "mov~r14,scan", "push~rbp", "push~rbx", "mov~r13,0", "sub~rsp,<STR>", "mov~rbx,[scan+0]", "mov~rdx,[scan+0]", "mov~rbp,rsp", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~r12,[rbp+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 42, 0, 0, 2, 1, 1, 5, 8, 0.2229965156794425, ["test    rax, rax", "js      loc_A223"], ["test~rax,rax", "js~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 9, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6956; \"extent_scan_read\"", "lea     rsi, aSrcExtentScanC; \"src/extent-scan.c\"", "lea     rdi, aFmExtentsIFeLo; \"fm_extents[i].fe_logical <= OFF_T_MAX -\"...", "mov     edx, 8Dh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 42, 1, 0, 6, 0, 1, 8, 7, 0.13240418118466898, ["mov     rax, [rsp+var_s30]", "mov     rdx, [rsp+var_s20]", "mov     rcx, r13", "sub     rcx, rax", "cmp     rdx, rcx", "ja      loc_A10A"], ["mov~rax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rcx,r13", "sub~rcx,rax", "cmp~rdx,rcx", "ja~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 1018h", "pop     rbx", "pop     fiemap", "pop     r12", "pop     r13", "pop     scan", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~fiemap", "pop~r12", "pop~r13", "pop~scan", "pop~r15", "retn"]], [0, 0, 42, 0, 0, 3, 1, 1, 2, 3, 0.22473867595818817, ["mov     eax, [rsp+var_s14]", "test    eax, eax", "jz      loc_A1E8"], ["mov~eax,[rsp+0]", "test~eax,eax", "jz~FOO"]], [0, 0, 42, 0, 0, 4, 1, 1, 10, 3, 0.23315911730545877, ["mov     ecx, r15d", "test    al, al", "mov     [scan+18h], rcx", "jnz     short loc_A1AC"], ["mov~ecx,r15d", "test~al,al", "mov~[scan+0],rcx", "jnz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 12, 3, 0.0014518002322880372, ["jmp     short loc_A1AC"], ["jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 10, 3, 0.02177700348432056, ["mov     eax, r15d", "mov     [scan+18h], rax"], ["mov~eax,r15d", "mov~[scan+0],rax"]], [0, 1, 42, 0, 0, 3, 0, 0, 9, 4, 0.258130081300813, ["cmp     r15d, 48h ; 'H'", "movzx   eax, byte ptr [scan+21h]", "jbe     short loc_A1C0"], ["cmp~r15d,<STR>", "movzx~eax,[yte ptr [scan+0]", "jbe~FOO"]], [1, 0, 42, 0, 0, 2, 1, 1, 8, 5, 0.30023228803716606, ["test    byte ptr [rbx+10h], 1", "jnz     short loc_A1A0"], ["test~[yte ptr [rbx+0],0", "jnz~FOO"]], [0, 0, 42, 0, 0, 2, 0, 1, 12, 5, 0.06315331010452961, ["cmp     rdi, rdx", "jnz     loc_A05C"], ["cmp~rdi,rdx", "jnz~FOO"]], [1, 0, 42, 1, 0, 8, 1, 1, 11, 5, 0.10501355013550136, ["mov     r9d, [rsi+28h]", "mov     r10, [rbx+8]", "mov     rdi, [rbx]", "mov     r11d, r9d", "add     rdi, r10", "and     r11d, 0FFFFFFFEh", "cmp     [rbx+10h], r11d", "jz      loc_A130"], ["mov~r9d,[rsi+0]", "mov~r10,[rbx+0]", "mov~rdi,<TAG>", "mov~r11d,r9d", "add~rdi,r10", "and~r11d,0", "cmp~[rbx+0],r11d", "jz~FOO"]], [0, 0, 42, 0, 0, 2, 1, 0, 9, 6, 0.13182346109175377, ["xor     ecx, ecx", "mov     rsi, r12"], ["xor~ecx,ecx", "mov~rsi,r12"]], [0, 0, 42, 0, 0, 3, 0, 1, 11, 4, 0.10288424312814556, ["mov     rdi, [scan+8]", "cmp     rdi, rdx", "ja      short loc_A061"], ["mov~rdi,[scan+0]", "cmp~rdi,rdx", "ja~FOO"]], [0, 0, 42, 0, 0, 2, 1, 1, 10, 5, 0.21544715447154472, ["test    r15d, r15d", "jz      short loc_A0B0"], ["test~r15d,r15d", "jz~FOO"]], [0, 0, 42, 0, 0, 1, 0, 0, 12, 8, 0.032859078590785906, ["mov     r9d, [rsi+28h]"], ["mov~r9d,[rsi+0]"]], [0, 0, 42, 0, 0, 5, 0, 1, 3, 10, 0.2148664343786295, ["mov     rcx, [scan+18h]", "mov     rdx, rax", "not     rdx", "cmp     rcx, rdx", "ja      loc_A1FA"], ["mov~rcx,[scan+0]", "mov~rdx,rax", "not~rdx", "cmp~rcx,rdx", "ja~FOO"]], [1, 0, 5, 0, 0, 1, 0, 0, 9, 4, 0.03397212543554007, ["mov     byte ptr [scan+21h], 1"], ["mov~[yte ptr [scan+0],0"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 42, 0, 0, 1, 0, 0, 14, 6, 0.047473867595818814, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 42, 1, 0, 8, 0, 0, 13, 7, 0.09272164150212932, ["mov     esi, r15d", "add     r15d, 1", "lea     rdi, [rsi+rsi*2]", "mov     rsi, [scan+28h]", "lea     rbx, [rsi+rdi*8]", "mov     [last_ei], rdx", "mov     [last_ei+8], rax", "mov     [last_ei+10h], r9d"], ["mov~esi,r15d", "add~r15d,0", "lea~rdi,<TAG>", "mov~rsi,[scan+0]", "lea~rbx,<TAG>", "mov~<TAG>,rdx", "mov~[last_ei+0],rax", "mov~[last_ei+0],r9d"]], [0, 0, 42, 0, 0, 2, 0, 0, 12, 4, 0.04011807975222609, ["cmp     rdi, rdx", "jbe     short loc_A0BD"], ["cmp~rdi,rdx", "jbe~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 4, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6956; \"extent_scan_read\"", "lea     rsi, aSrcExtentScanC; \"src/extent-scan.c\"", "lea     rdi, aScanEiCountSiz; \"scan->ei_count <= SIZE_MAX - fiemap->fm\"...", "mov     edx, 7Eh ; '~'; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]]], "func_feature": [6, 19, 28, 8, 43, 62, 1, 190, 0.09589, 5, 20], "succs": [[7], [0, 27], [34, 21], [2, 39], [2, 29], [38, 23], [9, 5], [5], [5], [5], [29, 22], [10, 19], [4], [12, 6], [20], [20, 14], [24, 6], [16, 26], [16], [], [11, 19], [], [32, 21], [], [8, 36], [17, 7], [7], [7], [25, 1], [28, 37], [41, 3], [41, 30], [34], [35, 13], [33, 31], [40], [42, 15], [27], [], [29], [4], [40, 13], []], "fname": "extent_scan_read", "n_num": 43}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 7, 0, 1, 0, 0, 0.0, ["mov     rax, a", "mov     rcx, dest; to", "mov     edx, [a+10h]; tofd", "mov     r8d, [rax+14h]; flags", "mov     a, [a+8]; from", "mov     edi, [a]; fromfd", "jmp     _linkat"], ["mov~rax,a", "mov~rcx,dest", "mov~edx,[a+0]", "mov~r8d,[rax+0]", "mov~a,[a+0]", "mov~edi,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 7, 0.0, 0, 0], "succs": [[], [0]], "fname": "try_link", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 1, 3, 1, 1, 11, 0, 1, 0, 0, 0.0, ["push    r12", "push    rbp", "mov     rbp, dstname", "push    rbx", "mov     r12, buf", "call    last_component", "sub     rax, dstname", "lea     rdi, [dstdirlen+9]; size", "mov     rbx, dstdirlen", "cmp     dsttmpsize, 100h", "jbe     short loc_A281"], ["push~r12", "push~rbp", "mov~rbp,dstname", "push~rbx", "mov~r12,buf", "call~FOO", "sub~rax,dstname", "lea~rdi,[dstdirlen+0]", "mov~rbx,dstdirlen", "cmp~dsttmpsize,<STR>", "jbe~FOO"]], [2, 0, 1, 0, 1, 8, 0, 1, 0, 1, 0.08333333333333333, ["mov     rdx, dstdirlen; n", "mov     rsi, dstname; src", "mov     rdi, dsttmp; dest", "call    _mempcpy", "mov     rcx, 5858585858587543h", "mov     byte ptr [rax+8], 0", "mov     [rax], rcx", "mov     rax, dsttmp"], ["mov~rdx,dstdirlen", "mov~rsi,dstname", "mov~rdi,dsttmp", "call~FOO", "mov~rcx,0", "mov~[yte ptr [rax+0],0", "mov~<TAG>,rcx", "mov~rax,dsttmp"]], [0, 0, 2, 0, 1, 5, 2, 2, 0, 1, 0.08333333333333333, ["call    _malloc", "mov     buf, rax", "xor     eax, eax", "test    dsttmp, dsttmp", "jz      short loc_A2A3"], ["call~FOO", "mov~buf,rax", "xor~eax,eax", "test~dsttmp,dsttmp", "jz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["pop     dstdirlen", "pop     dstname", "pop     dsttmp", "retn"], ["pop~dstdirlen", "pop~dstname", "pop~dsttmp", "retn"]]], "func_feature": [3, 2, 4, 0, 4, 5, 2, 28, 0.04167, 0, 1], "succs": [[1, 2], [3], [1, 3], []], "fname": "samedir_template", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 5, 0, 1, 0, 0, 0.0, ["mov     rax, a", "mov     rdx, dest; to", "mov     esi, [a+8]; tofd", "mov     dest, [a]; from", "jmp     _symlinkat"], ["mov~rax,a", "mov~rdx,dest", "mov~esi,[a+0]", "mov~dest,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 5, 0.0, 0, 0], "succs": [[], [0]], "fname": "try_symlink", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.11666666666666667, ["mov     dstname, [rsp+178h+var_40]", "xor     dstname, fs:28h", "mov     eax, ecx", "jnz     loc_A42C"], ["mov~dstname,[rsp+0]", "xor~dstname,<TAG>", "mov~eax,ecx", "jnz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 1, 2, 0.14375, ["cmp     r9b, 1", "jnz     short loc_A390"], ["cmp~r9b,0", "jnz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 2, 2, 0.15, ["cmp     ecx, 11h", "jnz     short loc_A390"], ["cmp~ecx,0", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 6, 2, 0.10833333333333334, ["cmp     dsttmp, [rsp+178h+var_178]", "jz      short loc_A390"], ["cmp~dsttmp,<TAG>", "jz~FOO"]], [0, 0, 15, 0, 1, 6, 1, 2, 1, 2, 0.010416666666666666, ["mov     rcx, dstname; to", "mov     dword ptr [rsp+178h+var_178], r9d", "call    _linkat", "test    eax, eax", "mov     ecx, eax", "jz      short loc_A390"], ["mov~rcx,dstname", "mov~<TAG>,r9d", "call~FOO", "test~eax,eax", "mov~ecx,eax", "jz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 4, 2, 0.0125, ["call    ___errno_location", "mov     ecx, [rax]", "jmp     loc_A390"], ["call~FOO", "mov~ecx,<TAG>", "jmp~FOO"]], [0, 0, 3, 0, 1, 5, 0, 1, 7, 2, 0.0, ["mov     rdi, dsttmp; ptr", "mov     dword ptr [rsp+178h+var_178], ecx", "call    free", "mov     ecx, dword ptr [rsp+178h+var_178]", "nop     word ptr [rax+rax+00h]"], ["mov~rdi,dsttmp", "mov~<TAG>,ecx", "call~FOO", "mov~ecx,<TAG>", "nop~[ord ptr [rax+0]"]], [0, 0, 5, 0, 1, 7, 1, 2, 6, 3, 0.041666666666666664, ["xor     edx, edx; flag", "mov     rsi, dsttmp; name", "mov     edi, ebp; fd", "mov     [rsp+178h+err], ecx", "call    _unlinkat", "mov     ecx, [rsp+178h+err]", "jmp     loc_A376"], ["xor~edx,edx", "mov~rsi,dsttmp", "mov~edi,ebp", "mov~[rsp+0],ecx", "call~FOO", "mov~ecx,[rsp+0]", "jmp~FOO"]], [1, 0, 7, 0, 1, 8, 1, 2, 5, 4, 0.058333333333333334, ["mov     rcx, dstname; new", "mov     edx, ebp; newfd", "mov     rsi, dsttmp; old", "mov     edi, ebp; oldfd", "call    _renameat", "test    eax, eax", "mov     ecx, 0FFFFFFFFh", "jz      short loc_A407"], ["mov~rcx,dstname", "mov~edx,ebp", "mov~rsi,dsttmp", "mov~edi,ebp", "call~FOO", "test~eax,eax", "mov~ecx,0", "jz~FOO"]], [0, 0, 6, 0, 1, 2, 0, 1, 6, 4, 0.0, ["call    ___errno_location", "mov     ecx, [rax]"], ["call~FOO", "mov~ecx,<TAG>"]], [0, 0, 11, 0, 1, 8, 1, 2, 3, 3, 0.16666666666666666, ["lea     rax, [rsp+178h+buf]", "mov     rdi, dstname; dstname", "mov     rsi, rax; buf", "mov     [rsp+178h+var_178], rax", "call    samedir_template", "test    rax, rax", "mov     r15, rax", "jz      loc_A420"], ["lea~rax,[rsp+0]", "mov~rdi,dstname", "mov~rsi,rax", "mov~<TAG>,rax", "call~FOO", "test~rax,rax", "mov~r15,rax", "jz~FOO"]], [1, 0, 16, 1, 0, 18, 2, 1, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r14d, edi", "push    r13", "push    r12", "mov     r13, srcname", "push    rbp", "push    rbx", "mov     rbx, dstname", "mov     ebp, edx", "mov     r12d, r8d", "sub     rsp, 148h", "mov     ecx, [rsp+178h+linkat_errno]", "mov     rax, fs:28h", "mov     [rsp+178h+var_40], rax", "xor     eax, eax", "test    ecx, ecx", "js      loc_A3C0"], ["push~r15", "push~r14", "mov~r14d,edi", "push~r13", "push~r12", "mov~r13,srcname", "push~rbp", "push~rbx", "mov~rbx,dstname", "mov~ebp,edx", "mov~r12d,r8d", "sub~rsp,0", "mov~ecx,[rsp+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~ecx,ecx", "js~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 9, 0, 1, 12, 2, 2, 4, 4, 0.15, ["lea     rdx, [rsp+178h+arg]; args", "lea     rcx, try_link; tryfunc", "xor     esi, esi; suffixlen", "mov     r8d, 6; x_suffix_len", "mov     rdi, dsttmp; tmpl", "mov     [rsp+178h+arg.srcdir], r14d", "mov     [rsp+178h+arg.srcname], srcname", "mov     [rsp+178h+arg.dstdir], ebp", "mov     [rsp+178h+arg.flags], r12d", "call    try_tempname_len", "test    eax, eax", "jz      short loc_A3E8"], ["lea~rdx,[rsp+0]", "lea~rcx,<TAG>", "xor~esi,esi", "mov~r8d,0", "mov~rdi,dsttmp", "mov~[rsp+0],r14d", "mov~[rsp+0],srcname", "mov~[rsp+0],ebp", "mov~[rsp+0],r12d", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 148h", "pop     rbx", "pop     dstdir", "pop     flags", "pop     srcname", "pop     srcdir", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~dstdir", "pop~flags", "pop~srcname", "pop~srcdir", "pop~r15", "retn"]], [0, 0, 5, 0, 1, 2, 0, 1, 5, 3, 0.07083333333333333, ["call    ___errno_location", "mov     ecx, [rax]"], ["call~FOO", "mov~ecx,<TAG>"]], [0, 0, 14, 0, 1, 4, 0, 2, 2, 3, 0.04583333333333333, ["call    ___errno_location", "mov     r9d, dword ptr [rsp+178h+var_178]", "mov     ecx, [rax]", "jmp     loc_A311"], ["call~FOO", "mov~r9d,<TAG>", "mov~ecx,<TAG>", "jmp~FOO"]]], "func_feature": [11, 9, 23, 2, 17, 24, 1, 94, 0.06324, 2, 2], "succs": [[12, 14], [0, 2], [0, 10], [0, 6], [0, 16], [0], [0], [3], [9, 7], [7], [5, 13], [1, 4], [], [8, 15], [], [3], [1]], "fname": "force_linkat", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 8, 0, 1, 10, 2, 2, 0, 0, 0.14285714285714288, ["lea     rdx, [rsp+158h+arg]; args", "lea     rcx, try_symlink; tryfunc", "xor     esi, esi; suffixlen", "mov     r8d, 6; x_suffix_len", "mov     rdi, dsttmp; tmpl", "mov     [rsp+158h+arg.srcname], srcname", "mov     [rsp+158h+arg.dstdir], ebp", "call    try_tempname_len", "test    eax, eax", "jz      short loc_A540"], ["lea~rdx,[rsp+0]", "lea~rcx,<TAG>", "xor~esi,esi", "mov~r8d,0", "mov~rdi,dsttmp", "mov~[rsp+0],srcname", "mov~[rsp+0],ebp", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 10, 0, 1, 7, 1, 2, 3, 3, 0.16666666666666669, ["lea     r14, [rsp+158h+buf]", "mov     rdi, dstname; dstname", "mov     rsi, r14; buf", "call    samedir_template", "test    rax, rax", "mov     r13, rax", "jz      loc_A580"], ["lea~r14,[rsp+0]", "mov~rdi,dstname", "mov~rsi,r14", "call~FOO", "test~rax,rax", "mov~r13,rax", "jz~FOO"]], [0, 0, 3, 0, 1, 5, 0, 1, 7, 2, 0.0, ["mov     rdi, dsttmp; ptr", "mov     [rsp+158h+err], r8d", "call    free", "mov     r8d, [rsp+158h+err]", "nop     word ptr [rax+rax+00h]"], ["mov~rdi,dsttmp", "mov~[rsp+0],r8d", "call~FOO", "mov~r8d,[rsp+0]", "nop~[ord ptr [rax+0]"]], [0, 0, 4, 0, 0, 2, 0, 1, 6, 2, 0.10476190476190478, ["cmp     dsttmp, r14", "jz      short loc_A4E8"], ["cmp~dsttmp,r14", "jz~FOO"]], [0, 0, 14, 0, 1, 5, 1, 2, 1, 2, 0.011904761904761906, ["mov     [rsp+158h+err], ecx", "call    _symlinkat", "test    eax, eax", "mov     r8d, eax", "jz      short loc_A4E8"], ["mov~[rsp+0],ecx", "call~FOO", "test~eax,eax", "mov~r8d,eax", "jz~FOO"]], [0, 1, 15, 1, 0, 14, 2, 1, 0, 3, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "mov     r12, srcname", "push    rbx", "mov     ebp, esi", "mov     rbx, dstname", "sub     rsp, 130h", "mov     rax, fs:28h", "mov     [rsp+158h+var_30], rax", "xor     eax, eax", "test    r8d, r8d", "js      loc_A518"], ["push~r14", "push~r13", "push~r12", "push~rbp", "mov~r12,srcname", "push~rbx", "mov~ebp,esi", "mov~rbx,dstname", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~r8d,r8d", "js~FOO"]], [0, 0, 5, 0, 1, 2, 0, 1, 5, 3, 0.04047619047619048, ["call    ___errno_location", "mov     r8d, [rax]"], ["call~FOO", "mov~r8d,<TAG>"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.12380952380952381, ["mov     dstname, [rsp+158h+var_30]", "xor     dstname, fs:28h", "mov     eax, r8d", "jnz     loc_A58D"], ["mov~dstname,[rsp+0]", "xor~dstname,<TAG>", "mov~eax,r8d", "jnz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 1, 2, 0.15000000000000002, ["cmp     cl, 1", "jnz     short loc_A4E8"], ["cmp~cl,0", "jnz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 2, 2, 0.1523809523809524, ["cmp     r8d, 11h", "jnz     short loc_A4E8"], ["cmp~r8d,0", "jnz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 4, 2, 0.014285714285714287, ["call    ___errno_location", "mov     r8d, [rax]", "jmp     loc_A4E8"], ["call~FOO", "mov~r8d,<TAG>", "jmp~FOO"]], [1, 0, 6, 0, 1, 8, 1, 2, 5, 3, 0.07380952380952381, ["mov     rcx, dstname; new", "mov     edx, ebp; newfd", "mov     rsi, dsttmp; old", "mov     edi, ebp; oldfd", "call    _renameat", "test    eax, eax", "mov     r8d, 0FFFFFFFFh", "jz      loc_A4CB"], ["mov~rcx,dstname", "mov~edx,ebp", "mov~rsi,dsttmp", "mov~edi,ebp", "call~FOO", "test~eax,eax", "mov~r8d,0", "jz~FOO"]], [0, 0, 5, 0, 2, 9, 1, 3, 6, 3, 0.0, ["call    ___errno_location", "mov     r8d, [rax]", "xor     edx, edx; flag", "mov     rsi, dsttmp; name", "mov     edi, ebp; fd", "mov     [rsp+158h+err], r8d", "call    _unlinkat", "mov     r8d, [rsp+158h+err]", "jmp     loc_A4CB"], ["call~FOO", "mov~r8d,<TAG>", "xor~edx,edx", "mov~rsi,dsttmp", "mov~edi,ebp", "mov~[rsp+0],r8d", "call~FOO", "mov~r8d,[rsp+0]", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 1, 0, 1, 0, 7, 0, 0, 3, -1, 0.0, ["add     rsp, 130h", "pop     rbx", "pop     dstdir", "pop     srcname", "pop     r13", "pop     r14", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~dstdir", "pop~srcname", "pop~r13", "pop~r14", "retn"]], [0, 0, 13, 0, 1, 4, 0, 2, 2, 3, 0.04761904761904762, ["call    ___errno_location", "mov     ecx, [rsp+158h+err]", "mov     r8d, [rax]", "jmp     loc_A473"], ["call~FOO", "mov~ecx,[rsp+0]", "mov~r8d,<TAG>", "jmp~FOO"]]], "func_feature": [11, 9, 23, 1, 16, 23, 2, 85, 0.06429, 2, 2], "succs": [[11, 6], [0, 10], [7], [2, 7], [15, 7], [8, 4], [3], [13, 14], [9, 7], [1, 7], [7], [3, 12], [3], [], [], [8]], "fname": "force_symlinkat", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["mov     eax, ebx", "pop     ret", "pop     rbp", "pop     r12", "retn"], ["mov~eax,ebx", "pop~ret", "pop~rbp", "pop~r12", "retn"]], [1, 0, 2, 0, 0, 2, 0, 1, 1, -1, 0.16666666666666666, ["cmp     eax, 0FFFFFFFFh", "jnz     short loc_A5F2"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 1, 0, 4, 15, 3, 4, 2, -1, 0.0, ["mov     rdi, dst_name; arg", "call    quote", "lea     rsi, aPreservingPerm; \"preserving permissions for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     src_name, rax", "call    _dcgettext", "mov     dst_name, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "mov     rdx, rbp; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,dst_name", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~src_name,rax", "call~FOO", "mov~dst_name,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "mov~rdx,rbp", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 4, 0, 1, 9, 0, 2, 0, 1, 0.0, ["push    r12", "push    rbp", "mov     r12, src_name", "push    rbx", "mov     rbp, dst_name", "call    qcopy_acl", "cmp     eax, 0FFFFFFFEh", "mov     ebx, eax", "jz      short loc_A600"], ["push~r12", "push~rbp", "mov~r12,src_name", "push~rbx", "mov~rbp,dst_name", "call~FOO", "cmp~eax,0", "mov~ebx,eax", "jz~FOO"]], [0, 0, 0, 0, 3, 15, 2, 3, 1, 0, 0.0, ["mov     rdi, src_name; arg", "call    quote", "mov     dst_name, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "lea     rdx, aS+2; format", "mov     rcx, rbp", "xor     eax, eax", "xor     edi, edi; status", "call    _error", "mov     eax, ebx", "pop     ret", "pop     rbp", "pop     src_name", "retn"], ["mov~rdi,src_name", "call~FOO", "mov~dst_name,rax", "call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rbp", "xor~eax,eax", "xor~edi,edi", "call~FOO", "mov~eax,ebx", "pop~ret", "pop~rbp", "pop~src_name", "retn"]]], "func_feature": [8, 5, 10, 0, 5, 5, 3, 46, 0.03333, 2, 0], "succs": [[], [0, 2], [0], [1, 4], []], "fname": "copy_acl", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 2, 0, 1, 8, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "mov     rbp, name", "push    rbx", "call    qset_acl", "test    eax, eax", "mov     ebx, eax", "jz      short loc_A679"], ["push~r12", "push~rbp", "mov~rbp,name", "push~rbx", "call~FOO", "test~eax,eax", "mov~ebx,eax", "jz~FOO"]], [1, 0, 1, 0, 4, 15, 3, 4, 0, 1, 0.0, ["mov     rdi, name; arg", "call    quote", "lea     rsi, aSettingPermiss; \"setting permissions for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r12, rax", "call    _dcgettext", "mov     name, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r12", "mov     rdx, rbp; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,name", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r12,rax", "call~FOO", "mov~name,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r12", "mov~rdx,rbp", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["mov     eax, ebx", "pop     ret", "pop     rbp", "pop     r12", "retn"], ["mov~eax,ebx", "pop~ret", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [5, 4, 6, 0, 3, 3, 3, 28, 0.0, 1, 0], "succs": [[1, 2], [2], []], "fname": "set_acl", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 12, 0, 1, 3, 0, 2, 0, 0, 0.06439393939393939, ["call    ___errno_location", "cmp     dword ptr [rax], 22h ; '\"'", "jz      short loc_A6E6"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 12, 0, 1, 7, 1, 2, 2, 4, 0.3560606060606061, ["mov     rdx, buf_size; len", "mov     rsi, buffer; buf", "mov     rdi, file; path", "call    _readlink", "test    rax, rax", "mov     r12, rax", "js      short loc_A738"], ["mov~rdx,buf_size", "mov~rsi,buffer", "mov~rdi,file", "call~FOO", "test~rax,rax", "mov~r12,rax", "js~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 5, 1, 0.15151515151515152, ["cmp     buf_size, r15", "ja      short loc_A760"], ["cmp~buf_size,r15", "ja~FOO"]], [0, 0, 12, 0, 1, 4, 0, 2, 4, 2, 0.26515151515151514, ["mov     rdi, buffer; ptr", "call    free", "cmp     buf_size, r14", "ja      short loc_A720"], ["mov~rdi,buffer", "call~FOO", "cmp~buf_size,r14", "ja~FOO"]], [0, 0, 12, 1, 1, 6, 1, 2, 5, 5, 0.07575757575757576, ["add     buf_size, buf_size", "mov     rdi, buf_size; size", "call    _malloc", "test    rax, rax", "mov     buffer, rax", "jnz     short loc_A6D0"], ["add~buf_size,buf_size", "mov~rdi,buf_size", "call~FOO", "test~rax,rax", "mov~buffer,rax", "jnz~FOO"]], [0, 0, 12, 0, 1, 5, 1, 2, 1, 5, 0.21212121212121213, ["mov     rdi, buf_size; size", "call    _malloc", "test    rax, rax", "mov     rbp, rax", "jz      short loc_A70B"], ["mov~rdi,buf_size", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, -1, 0.011363636363636364, ["mov     byte ptr [buffer+link_length+0], 0", "jmp     short loc_A70B"], ["mov~[yte ptr [buffer+0],0", "jmp~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 3, 3, 0.32196969696969696, ["cmp     buf_size, link_length", "ja      short loc_A750"], ["cmp~buf_size,link_length", "ja~FOO"]], [0, 0, 1, 0, 1, 4, 1, 2, 4, -1, 0.011363636363636364, ["mov     rdi, buffer; ptr", "xor     ebp, ebp", "call    free", "jmp     short loc_A70B"], ["mov~rdi,buffer", "xor~ebp,ebp", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 1, 4, 1, 2, 6, 0, 0.007575757575757576, ["call    ___errno_location", "xor     ebp, ebp", "mov     dword ptr [rax], 0Ch", "jmp     short loc_A70B"], ["call~FOO", "xor~ebp,ebp", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 6, 6, 0.09848484848484848, ["mov     buf_size, 7FFFFFFFFFFFFFFFh", "jmp     short loc_A6C0"], ["mov~buf_size,0", "jmp~FOO"]], [5, 0, 12, 1, 0, 15, 0, 0, 0, 6, 0.0, ["push    r15", "push    r14", "mov     eax, 401h", "push    r13", "push    r12", "mov     r13, file", "push    rbp", "push    rbx", "lea     rbx, [size+1]", "mov     r14, 3FFFFFFFFFFFFFFFh", "mov     r15, 7FFFFFFFFFFFFFFEh", "sub     rsp, 8", "cmp     size, 401h", "cmovnb  rbx, rax", "nop     dword ptr [rax+00000000h]"], ["push~r15", "push~r14", "mov~eax,0", "push~r13", "push~r12", "mov~r13,file", "push~rbp", "push~rbx", "lea~rbx,[size+0]", "mov~r14,0", "mov~r15,0", "sub~rsp,0", "cmp~size,0", "cmovnb~rbx,rax", "nop~[word ptr [rax+0]"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, rbp", "pop     buf_size", "pop     rbp", "pop     r12", "pop     file", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,rbp", "pop~buf_size", "pop~rbp", "pop~r12", "pop~file", "pop~r14", "pop~r15", "retn"]]], "func_feature": [7, 5, 18, 0, 13, 19, 2, 65, 0.12121, 0, 3], "succs": [[8, 7], [0, 7], [9, 10], [2, 4], [1, 12], [1, 12], [12], [3, 6], [12], [12], [5], [5], []], "fname": "areadlink_with_size", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     edi, 1; status", "jmp     usage"], ["mov~edi,0", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[], [0]], "fname": "__argmatch_die", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 12, 2, 1, 11, 1, 1, 0, 0, 0.03311965811965811, ["mov     rdi, [rsp+58h+var_58]", "mov     rdx, valsize; n", "mov     rsi, rbp; s2", "imul    rdi, valsize", "add     rdi, rax; s1", "call    _memcmp", "test    eax, eax", "movzx   eax, [rsp+58h+ambiguous]", "mov     ecx, 1", "cmovnz  eax, ecx", "mov     [rsp+58h+ambiguous], al"], ["mov~rdi,<TAG>", "mov~rdx,valsize", "mov~rsi,rbp", "imul~rdi,valsize", "add~rdi,rax", "call~FOO", "test~eax,eax", "movzx~eax,[rsp+0]", "mov~ecx,0", "cmovnz~eax,ecx", "mov~[rsp+0],al"]], [0, 0, 12, 0, 0, 3, 1, 1, 5, 5, 0.1111111111111111, ["mov     rax, [rsp+58h+vallist]", "test    rax, rax", "jz      loc_A880"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 12, 0, 0, 4, 1, 1, 1, 3, 0.07051282051282051, ["mov     r12, arglen", "mov     [rsp+58h+ambiguous], 0", "xor     ebx, ebx", "jmp     short loc_A817"], ["mov~r12,arglen", "mov~[rsp+0],0", "xor~ebx,ebx", "jmp~FOO"]], [2, 0, 13, 1, 1, 17, 1, 2, 0, 4, 0.0, ["push    r15", "push    r14", "mov     r15, arglist", "push    r13", "push    r12", "mov     r13, valsize", "push    rbp", "push    rbx", "mov     rbp, vallist_0", "sub     rsp, 28h", "mov     [rsp+58h+arg], arg_0", "mov     [rsp+58h+vallist], vallist_0", "call    _strlen", "mov     r14, [arglist]", "mov     [rsp+58h+var_58], 0FFFFFFFFFFFFFFFFh", "test    r14, r14", "jz      loc_A86D"], ["push~r15", "push~r14", "mov~r15,arglist", "push~r13", "push~r12", "mov~r13,valsize", "push~rbp", "push~rbx", "mov~rbp,vallist_0", "sub~rsp,0", "mov~[rsp+0],arg_0", "mov~[rsp+0],vallist_0", "call~FOO", "mov~r14,<TAG>", "mov~<TAG>,0", "test~r14,r14", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 6, 4, 0.03311965811965811, ["mov     [rsp+58h+ambiguous], 1", "jmp     short loc_A807"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 12, 0, 1, 6, 1, 2, 2, 2, 0.3696581196581197, ["mov     rsi, [rsp+58h+arg]; s2", "mov     rdx, arglen; n", "mov     rdi, r14; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_A807"], ["mov~rsi,[rsp+0]", "mov~rdx,arglen", "mov~rdi,r14", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 12, 2, 0, 6, 1, 1, 5, 3, 0.10683760683760685, ["mov     [rsp+58h+var_58], i", "add     matchind, 1", "add     rbp, valsize", "mov     r14, [arglist+i*8]", "test    r14, r14", "jnz     short loc_A817"], ["mov~<TAG>,i", "add~matchind,0", "add~rbp,valsize", "mov~r14,<TAG>", "test~r14,r14", "jnz~FOO"]], [1, 0, 12, 2, 0, 5, 1, 1, 3, 3, 0.20512820512820512, ["add     i, 1", "add     rbp, valsize", "mov     r14, [arglist+i*8]", "test    r14, r14", "jz      short loc_A858"], ["add~i,0", "add~rbp,valsize", "mov~r14,<TAG>", "test~r14,r14", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 4, 4, 0.26282051282051283, ["cmp     [rsp+58h+var_58], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_A7D0"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 6, -1, 0.03205128205128205, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 12, 0, 1, 4, 0, 2, 3, 1, 0.3269230769230769, ["mov     rdi, r14; s", "call    _strlen", "cmp     rax, arglen", "jz      short loc_A890"], ["mov~rdi,r14", "call~FOO", "cmp~rax,arglen", "jz~FOO"]], [2, 0, 1, 0, 0, 4, 0, 0, 4, -1, 0.05128205128205128, ["cmp     [rsp+58h+ambiguous], 0", "mov     rax, 0FFFFFFFFFFFFFFFEh", "cmovz   rax, [rsp+58h+var_58]", "mov     [rsp+58h+var_58], rax"], ["cmp~[rsp+0],0", "mov~rax,0", "cmovz~rax,<TAG>", "mov~<TAG>,rax"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, 0, 0.01282051282051282, ["mov     [rsp+58h+var_58], i", "jmp     short loc_A86D"], ["mov~<TAG>,i", "jmp~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 1, -1, 0.0, ["mov     rax, [rsp+58h+var_58]", "add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     r12", "pop     valsize", "pop     r14", "pop     arglist", "retn"], ["mov~rax,<TAG>", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~valsize", "pop~r14", "pop~arglist", "retn"]]], "func_feature": [4, 7, 14, 1, 14, 20, 1, 76, 0.11538, 0, 8], "succs": [[7], [0, 4], [5], [2, 13], [7], [10, 7], [9, 5], [11, 5], [1, 6], [11], [8, 12], [13], [13], []], "fname": "argmatch", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[2, 0, 1, 0, 2, 18, 4, 3, 0, 0, 0.25, ["mov     rsi, context; arg", "mov     edi, 1; n", "call    quote_n", "mov     rdx, value; arg", "mov     context, rax", "mov     esi, 8; s", "xor     edi, edi; n", "call    quotearg_n_style", "mov     r8, rbp", "mov     rdx, format; format", "mov     rcx, rax", "pop     format", "pop     rbp", "pop     value", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "jmp     _error"], ["mov~rsi,context", "mov~edi,0", "call~FOO", "mov~rdx,value", "mov~context,rax", "mov~esi,0", "xor~edi,edi", "call~FOO", "mov~r8,rbp", "mov~rdx,format", "mov~rcx,rax", "pop~format", "pop~rbp", "pop~value", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "jmp~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 1, 0, 0.08333333333333333, ["lea     value, aInvalidArgumen; \"invalid argument %s for %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax", "jmp     short loc_A8C6"], ["lea~value,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbx,rax", "jmp~FOO"]], [0, 0, 2, 0, 1, 4, 1, 1, 1, -1, 0.08333333333333333, ["lea     value, aAmbiguousArgum; \"ambiguous argument %s for %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax"], ["lea~value,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbx,rax"]], [2, 0, 4, 0, 0, 8, 0, 1, 0, 1, 0.0, ["cmp     problem, 0FFFFFFFFFFFFFFFFh", "push    r12", "mov     edx, 5; category", "push    rbp", "mov     r12, value", "push    rbx", "mov     rbp, context", "jz      short loc_A900"], ["cmp~problem,0", "push~r12", "mov~edx,0", "push~rbp", "mov~r12,value", "push~rbx", "mov~rbp,context", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []]], "func_feature": [4, 6, 7, 0, 5, 5, 1, 35, 0.08333, 2, 0], "succs": [[4], [0], [0], [1, 2], []], "fname": "argmatch_invalid", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[2, 0, 10, 1, 2, 21, 2, 3, 0, 0, 0.0, ["push    r15", "push    r14", "mov     r14, arglist", "push    r13", "push    r12", "xor     edi, edi; domainname", "push    rbp", "push    rbx", "mov     rbp, vallist", "lea     vallist, aValidArguments; \"Valid arguments are:\"", "mov     r12, valsize", "mov     edx, 5; category", "sub     rsp, 8", "mov     rbx, cs:stderr@@GLIBC_2_2_5", "call    _dcgettext", "mov     rdi, rax; s", "mov     rsi, rbx; stream", "call    _fputs_unlocked", "mov     r15, [arglist]", "test    r15, r15", "jz      loc_A9F8"], ["push~r15", "push~r14", "mov~r14,arglist", "push~r13", "push~r12", "xor~edi,edi", "push~rbp", "push~rbx", "mov~rbp,vallist", "lea~vallist,<TAG>", "mov~r12,valsize", "mov~edx,0", "sub~rsp,0", "mov~rbx,<TAG>", "call~FOO", "mov~rdi,rax", "mov~rsi,rbx", "call~FOO", "mov~r15,<TAG>", "test~r15,r15", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0.0, [], []], [2, 0, 1, 1, 0, 9, 0, 1, 0, 0, 0.08888888888888889, ["add     rsp, 8", "mov     esi, 0Ah; int", "pop     rbx", "pop     rbp", "pop     valsize", "pop     r13", "pop     arglist", "pop     r15", "jmp     ___overflow"], ["add~rsp,0", "mov~esi,0", "pop~rbx", "pop~rbp", "pop~valsize", "pop~r13", "pop~arglist", "pop~r15", "jmp~FOO"]], [2, 0, 9, 2, 2, 14, 2, 3, 0, 2, 0.1388888888888889, ["mov     rdi, r15; arg", "add     i, 1", "mov     last_val, rbp", "call    quote", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "lea     rdx, aS_0; \"\\n  - %s\"", "mov     rcx, rax", "mov     esi, 1", "xor     eax, eax", "add     rbp, valsize", "call    ___fprintf_chk", "mov     r15, [arglist+i*8]", "test    r15, r15", "jz      short loc_A9F8"], ["mov~rdi,r15", "add~i,0", "mov~last_val,rbp", "call~FOO", "mov~rdi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~esi,0", "xor~eax,eax", "add~rbp,valsize", "call~FOO", "mov~r15,<TAG>", "test~r15,r15", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 0, 3, 0.18888888888888888, ["test    i, i", "jz      short loc_A970"], ["test~i,i", "jz~FOO"]], [0, 0, 9, 0, 1, 6, 1, 2, 0, 3, 0.08888888888888889, ["mov     rdx, valsize; n", "mov     rsi, rbp; s2", "mov     rdi, last_val; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_A970"], ["mov~rdx,valsize", "mov~rsi,rbp", "mov~rdi,last_val", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 4, 0, 0, 0, 1, 0.23333333333333334, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_AA28"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 0, 2, 0.044444444444444446, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 9, 0, 0, 3, 2, 1, 0, 4, 0.05555555555555556, ["xor     r13d, r13d", "xor     ebx, ebx", "jmp     short loc_A9A8"], ["xor~r13d,r13d", "xor~ebx,ebx", "jmp~FOO"]], [2, 0, 9, 2, 2, 13, 2, 3, 0, 3, 0.061111111111111116, ["mov     rdi, r15; arg", "add     i, 1", "add     rbp, valsize", "call    quote", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "lea     rdx, aS; \", %s\"", "mov     rcx, rax", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "mov     r15, [arglist+i*8]", "test    r15, r15", "jnz     short loc_A9A8"], ["mov~rdi,r15", "add~i,0", "add~rbp,valsize", "call~FOO", "mov~rdi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~r15,<TAG>", "test~r15,r15", "jnz~FOO"]], [2, 0, 0, 1, 0, 11, 0, 0, 0, -1, 0.0, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah", "add     rsp, 8", "pop     rbx", "pop     rbp", "pop     valsize", "pop     r13", "pop     arglist", "pop     r15", "retn"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~valsize", "pop~r13", "pop~arglist", "pop~r15", "retn"]]], "func_feature": [7, 10, 14, 0, 11, 15, 1, 84, 0.08182, 4, 7], "succs": [[8, 6], [], [1], [4, 6], [3, 5], [9, 3], [10, 2], [6], [4], [4, 7], []], "fname": "argmatch_valid", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 0, 1, 0, 8, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "pop     arglist", "pop     vallist", "pop     arg", "pop     exit_fn", "pop     context", "pop     valsize", "retn"], ["add~rsp,0", "pop~arglist", "pop~vallist", "pop~arg", "pop~exit_fn", "pop~context", "pop~valsize", "retn"]], [1, 0, 1, 0, 3, 11, 0, 4, 1, 0, 0.0, ["mov     rdx, res; problem", "mov     rsi, arg; value", "mov     rdi, context; context", "call    argmatch_invalid", "mov     rdx, valsize; valsize", "mov     rsi, vallist; vallist", "mov     rdi, arglist; arglist", "call    argmatch_valid", "call    exit_fn", "mov     rax, 0FFFFFFFFFFFFFFFFh", "jmp     short loc_AA76"], ["mov~rdx,res", "mov~rsi,arg", "mov~rdi,context", "call~FOO", "mov~rdx,valsize", "mov~rsi,vallist", "mov~rdi,arglist", "call~FOO", "call~exit_fn", "mov~rax,0", "jmp~FOO"]], [1, 0, 2, 1, 1, 20, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r14, context", "push    r13", "push    r12", "mov     r12, arg", "push    rbp", "push    rbx", "mov     rbp, vallist", "mov     rbx, arglist", "mov     vallist, valsize; valsize", "mov     arglist, vallist; vallist", "sub     rsp, 8", "mov     arg, arglist; arglist", "mov     context, arg; arg", "mov     r15, valsize", "mov     r13, exit_fn", "call    argmatch", "test    res, res", "js      short loc_AA85"], ["push~r15", "push~r14", "mov~r14,context", "push~r13", "push~r12", "mov~r12,arg", "push~rbp", "push~rbx", "mov~rbp,vallist", "mov~rbx,arglist", "mov~vallist,valsize", "mov~arglist,vallist", "sub~rsp,0", "mov~arg,arglist", "mov~context,arg", "mov~r15,valsize", "mov~r13,exit_fn", "call~FOO", "test~res,res", "js~FOO"]]], "func_feature": [4, 1, 6, 0, 3, 3, 4, 39, 0.0, 0, 2], "succs": [[], [0], [0, 1]], "fname": "__xargmatch_internal", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 3, 0, 1, 6, 1, 2, 0, 0, 0.25, ["mov     rdx, valsize; n", "mov     rsi, rbp; s2", "mov     rdi, value; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_AAD0"], ["mov~rdx,valsize", "mov~rsi,rbp", "mov~rdi,value", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 1, 2, 0.16666666666666666, ["mov     r12, valsize", "mov     r13, value", "mov     rbp, vallist", "lea     rbx, [arglist+8]", "jmp     short loc_AADF"], ["mov~r12,valsize", "mov~r13,value", "mov~rbp,vallist", "lea~rbx,[arglist+0]", "jmp~FOO"]], [1, 0, 3, 2, 0, 5, 1, 1, 3, 1, 0.0, ["mov     r14, [rbx]", "add     rbp, valsize", "add     rbx, 8", "test    r14, r14", "jz      short loc_AAF1"], ["mov~r14,<TAG>", "add~rbp,valsize", "add~rbx,0", "test~r14,r14", "jz~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 1, 0, 0.0, ["pop     rbx", "mov     rax, r14", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "retn"], ["pop~rbx", "mov~rax,r14", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "retn"]], [0, 0, 4, 0, 0, 8, 1, 1, 0, 1, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     r14, [arglist]", "test    r14, r14", "jz      short loc_AAF1"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~r14,<TAG>", "test~r14,r14", "jz~FOO"]]], "func_feature": [1, 3, 5, 0, 5, 7, 0, 31, 0.08333, 0, 2], "succs": [[2, 3], [0], [0, 3], [], [1, 3]], "fname": "argmatch_to_argument", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 6, 0, 1, 5, 1, 2, 0, 0, 0.047619047619047616, ["lea     rdi, aSimpleBackupSu; \"SIMPLE_BACKUP_SUFFIX\"", "call    _getenv", "test    rax, rax", "mov     s, rax", "jz      short loc_AB0E"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~s,rax", "jz~FOO"]], [0, 0, 7, 0, 0, 4, 1, 1, 0, 2, 0.0, ["test    s, s", "push    rbx", "mov     rbx, s", "jz      short loc_AB30"], ["test~s,s", "push~rbx", "mov~rbx,s", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 2, 0, 0.07142857142857142, ["jmp     short loc_AB09"], ["jmp~FOO"]], [0, 0, 3, 0, 1, 4, 0, 2, 2, -1, 0.09523809523809523, ["mov     rdi, s; name", "call    last_component", "cmp     rax, s", "jnz     short loc_AB0E"], ["mov~rdi,s", "call~FOO", "cmp~rax,s", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 1, -1, 0.21428571428571427, ["cmp     byte ptr [s], 0", "jnz     short loc_AB20"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 3, -1, 0.011904761904761904, ["jmp     short loc_AB15"], ["jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 2, -1, 0.10714285714285714, ["lea     s, asc_15170; \"~\""], ["lea~s,<TAG>"]], [0, 0, 0, 0, 0, 3, 0, 0, 3, -1, 0.0, ["mov     cs:simple_backup_suffix, rbx", "pop     rbx", "retn"], ["mov~<TAG>,rbx", "pop~rbx", "retn"]]], "func_feature": [2, 2, 8, 0, 8, 11, 2, 21, 0.06845, 3, 0], "succs": [[2, 6], [0, 4], [4], [5, 6], [3, 6], [7], [7], []], "fname": "set_simple_backup_suffix", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[4, 0, 64, 2, 0, 9, 1, 0, 0, 0, 0.014020805065581185, ["cmp     cl, 39h ; '9'", "setz    al", "add     rbp, 1", "and     r8d, eax", "movsx   eax, byte ptr [rbx+rbp]", "mov     ecx, eax", "sub     eax, 30h ; '0'", "cmp     eax, 9", "jbe     short loc_ACE8"], ["cmp~cl,0", "setz~al", "add~rbp,0", "and~r8d,eax", "movsx~eax,<TAG>", "mov~ecx,eax", "sub~eax,0", "cmp~eax,0", "jbe~FOO"]], [0, 0, 64, 0, 0, 1, 0, 0, 12, 8, 0.012890094979647219, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 64, 1, 0, 5, 1, 0, 16, 6, 0.07507914970601538, ["mov     edx, 2", "xor     esi, esi", "mov     rax, rdx", "mul     rcx", "jo      loc_B153"], ["mov~edx,0", "xor~esi,esi", "mov~rax,rdx", "mul~,rcx", "jo~FOO"]], [0, 0, 64, 0, 0, 9, 0, 0, 15, 7, 0.1517412935323383, ["movzx   esi, r8b", "movzx   r9d, r8b", "mov     [rsp+0B8h+var_94], esi", "mov     rsi, [rsp+0B8h+filelen]", "lea     rax, [r9+rbp]", "mov     [rsp+0B8h+var_90], rax", "lea     rcx, [rsi+rax+4]", "cmp     rcx, [rsp+0B8h+size]", "jbe     loc_B0A8"], ["movzx~esi,r8b", "movzx~r9d,r8b", "mov~[rsp+0],esi", "mov~rsi,[rsp+0]", "lea~rax,<TAG>", "mov~[rsp+0],rax", "lea~rcx,[rsi+0]", "cmp~rcx,[rsp+0]", "jbe~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 12, 6, 0.22840343735866123, ["cmp     cl, 7Eh ; '~'", "jnz     loc_AC80"], ["cmp~cl,0", "jnz~FOO"]], [4, 0, 64, 1, 0, 8, 0, 1, 11, 7, 0.22501130710085934, ["cmp     al, 39h ; '9'", "movsx   eax, byte ptr [rbx+1]", "mov     ebp, 1", "setz    r8b", "mov     ecx, eax", "sub     eax, 30h ; '0'", "cmp     eax, 9", "ja      short loc_AD03"], ["cmp~al,0", "movsx~eax,[yte ptr [rbx+0]", "mov~ebp,0", "setz~r8b", "mov~ecx,eax", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 88h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     base_offset", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~base_offset", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.02939846223428313, ["mov     rsi, [rsp+0B8h+var_40]", "xor     rsi, fs:28h", "mov     rax, r15", "jnz     loc_B15D"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~rax,r15", "jnz~FOO"]], [3, 0, 64, 2, 1, 17, 0, 2, 17, 7, 0.1546811397557666, ["mov     rax, [rsp+0B8h+filelen]", "lea     rdx, [rbp+2]; n", "mov     [rsp+0B8h+var_60], r8", "mov     rsi, rbx; src", "add     rax, r8", "mov     r8d, 7E2Eh", "lea     rcx, [rax+r9+2]", "mov     [rax], r8w", "mov     byte ptr [rax+2], 30h ; '0'", "mov     rdi, rcx; dest", "call    _memcpy", "add     rbp, rax", "mov     r8, [rsp+0B8h+var_60]", "movzx   edx, byte ptr [rbp-1]", "lea     rax, [rbp-1]", "cmp     dl, 39h ; '9'", "jnz     short loc_AE1F"], ["mov~rax,[rsp+0]", "lea~rdx,[rbp+0]", "mov~[rsp+0],r8", "mov~rsi,rbx", "add~rax,r8", "mov~r8d,0", "lea~rcx,[rax+0]", "mov~<TAG>,r8w", "mov~[yte ptr [rax+0],0", "mov~rdi,rcx", "call~FOO", "add~rbp,rax", "mov~r8,[rsp+0]", "movzx~edx,[yte ptr [rbp-1]+0]", "lea~rax,[rbp-1]+0]", "cmp~dl,0", "jnz~FOO"]], [0, 0, 64, 0, 0, 2, 0, 1, 16, 8, 0.06467661691542288, ["mov     r8, r15", "jmp     loc_ADC7"], ["mov~r8,r15", "jmp~FOO"]], [0, 0, 64, 0, 1, 8, 1, 2, 19, 3, 0.08186341022161918, ["mov     rsi, [rsp+0B8h+size]; size", "mov     rdi, r15; ptr", "mov     [rsp+0B8h+var_60], r9", "call    _realloc", "test    rax, rax", "mov     r8, rax", "mov     r9, [rsp+0B8h+var_60]", "jz      loc_B050"], ["mov~rsi,[rsp+0]", "mov~rdi,r15", "mov~[rsp+0],r9", "call~FOO", "test~rax,rax", "mov~r8,rax", "mov~r9,[rsp+0]", "jz~FOO"]], [0, 0, 64, 0, 1, 4, 1, 2, 7, 5, 0.32360922659430125, ["mov     rdi, dirp; dirp", "call    _readdir", "test    rax, rax", "jz      loc_AE40"], ["mov~rdi,dirp", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 64, 0, 1, 5, 0, 1, 8, 6, 0.25169606512890097, ["lea     rbx, [rax+13h]", "mov     rdi, rbx; s", "call    _strlen", "cmp     rax, qword ptr [rsp+0B8h+fd]", "jb      short loc_AC80"], ["lea~rbx,[rax+0]", "mov~rdi,rbx", "call~FOO", "cmp~rax,[word ptr [rsp+0]", "jb~FOO"]], [0, 0, 64, 0, 1, 7, 1, 2, 9, 6, 0.24106739032112168, ["lea     rbp, [r12+2]", "lea     rdi, [r15+base_offset]; s1", "mov     rsi, rbx; s2", "mov     rdx, rbp; n", "call    _memcmp", "test    eax, eax", "jnz     short loc_AC80"], ["lea~rbp,[r12+0]", "lea~rdi,<TAG>", "mov~rsi,rbx", "mov~rdx,rbp", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 64, 1, 0, 5, 0, 1, 10, 6, 0.2331524197195839, ["add     rbx, rbp", "movzx   eax, byte ptr [rbx]", "lea     edx, [rax-31h]", "cmp     dl, 8", "ja      short loc_AC80"], ["add~rbx,rbp", "movzx~eax,<TAG>", "lea~edx,[rax-31h]+0]", "cmp~dl,0", "ja~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 13, 6, 0.19018543645409317, ["cmp     byte ptr [rbx+rbp+1], 0", "jnz     loc_AC80"], ["cmp~[yte ptr [rbx+0],0", "jnz~FOO"]], [0, 0, 64, 0, 0, 2, 0, 1, 15, 6, 0.023518769787426504, ["mov     byte ptr [rsp+0B8h+var_60], r8b", "jnz     loc_AC80"], ["mov~[yte ptr [rsp+0],r8b", "jnz~FOO"]], [0, 0, 64, 0, 1, 7, 1, 2, 16, 6, 0.003165988240615106, ["mov     rax, [rsp+0B8h+filelen]", "mov     rsi, rbx; s2", "lea     rdi, [r15+rax+2]; s1", "call    _memcmp", "test    eax, eax", "movzx   r8d, byte ptr [rsp+0B8h+var_60]", "jg      loc_AC80"], ["mov~rax,[rsp+0]", "mov~rsi,rbx", "lea~rdi,[r15+0]", "call~FOO", "test~eax,eax", "movzx~r8d,[yte ptr [rsp+0]", "jg~FOO"]], [2, 0, 64, 0, 0, 7, 0, 0, 6, 6, 0.21008593396653097, ["mov     rax, [rsp+0B8h+ssize]", "mov     [rsp+0B8h+var_90], 1", "mov     [rsp+0B8h+var_94], 2", "mov     [rsp+0B8h+size], rax", "lea     rax, [r12+4]", "mov     qword ptr [rsp+0B8h+fd], rax", "nop     dword ptr [rax+rax+00h]"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "lea~rax,[r12+0]", "mov~[word ptr [rsp+0],rax", "nop~[word ptr [rax+0]"]], [0, 0, 64, 0, 0, 2, 1, 1, 17, 5, 0.0773405698778833, ["test    rax, rax", "js      loc_B040"], ["test~rax,rax", "js~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 17, 6, 0.0, ["mov     esi, 1", "jmp     loc_AD89"], ["mov~esi,0", "jmp~FOO"]], [2, 0, 64, 1, 1, 8, 2, 1, 12, 6, 0.031207598371777476, ["mov     dword ptr [rax], 0", "mov     esi, 3; name", "call    _fpathconf", "mov     ecx, [r12]", "xor     edx, edx", "test    ecx, ecx", "setz    dl", "sub     rax, rdx"], ["mov~<TAG>,0", "mov~esi,0", "call~FOO", "mov~ecx,<TAG>", "xor~edx,edx", "test~ecx,ecx", "setz~dl", "sub~rax,rdx"]], [0, 0, 64, 0, 1, 7, 1, 2, 11, 7, 0.07440072365445499, ["mov     edi, [rsp+0B8h+sdir]", "mov     [rsp+0B8h+fd], edi", "call    ___errno_location", "mov     edi, [rsp+0B8h+fd]; fd", "mov     r12, rax", "test    edi, edi", "js      loc_B0E2"], ["mov~edi,[rsp+0]", "mov~[rsp+0],edi", "call~FOO", "mov~edi,[rsp+0]", "mov~r12,rax", "test~edi,edi", "js~FOO"]], [2, 0, 64, 0, 0, 5, 1, 0, 2, 6, 0.041383989145183174, ["lea     s, [rsp+0B8h+sdir]", "mov     [rsp+0B8h+sdir], 0FFFFFFFFh", "mov     [rsp+0B8h+base_max], 0", "xor     r13d, r13d", "mov     [rsp+0B8h+pnew_fd], rax"], ["lea~s,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r13d,r13d", "mov~[rsp+0],rax"]], [3, 0, 65, 2, 2, 17, 1, 3, 1, 2, 0.02939846223428313, ["call    _strlen", "mov     rsi, [rsp+0B8h+filelen]", "add     rax, 1", "cmp     rax, 9", "mov     [rsp+0B8h+simple_backup_suffix_size], rax", "lea     rdx, [rsi+1]", "mov     rsi, simple_backup_suffix_size_0", "mov     eax, 9", "cmovnb  rax, simple_backup_suffix_size_0", "add     rax, rdx", "mov     [rsp+0B8h+n], rdx", "mov     rdi, rax; size", "mov     [rsp+0B8h+ssize], rax", "call    _malloc", "test    rax, rax", "mov     r15, rax", "jz      loc_AEE0"], ["call~FOO", "mov~rsi,[rsp+0]", "add~rax,0", "cmp~rax,0", "mov~[rsp+0],rax", "lea~rdx,[rsi+0]", "mov~rsi,simple_backup_suffix_size_0", "mov~eax,0", "cmovnb~rax,simple_backup_suffix_size_0", "add~rax,rdx", "mov~[rsp+0],rdx", "mov~rdi,rax", "mov~[rsp+0],rax", "call~FOO", "test~rax,rax", "mov~r15,rax", "jz~FOO"]], [0, 0, 64, 0, 0, 2, 1, 1, 18, 5, 0.012890094979647219, ["test    rsi, rsi", "jnz     loc_B040"], ["test~rsi,rsi", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 1, 10, 2, 0.0020352781546811396, ["mov     rdi, s; ptr", "xor     r15d, r15d", "call    free", "mov     [rbx], ebp", "nop     dword ptr [rax+00000000h]"], ["mov~rdi,s", "xor~r15d,r15d", "call~FOO", "mov~<TAG>,ebp", "nop~[word ptr [rax+0]"]], [0, 0, 5, 0, 0, 3, 1, 1, 9, 3, 0.02736318407960199, ["test    dirp, dirp", "mov     rbx, rax", "jz      short loc_AECC"], ["test~dirp,dirp", "mov~rbx,rax", "jz~FOO"]], [0, 0, 4, 0, 1, 2, 0, 1, 10, 3, 0.0, ["mov     rdi, dirp; dirp", "call    _closedir"], ["mov~rdi,dirp", "call~FOO"]], [3, 0, 64, 1, 1, 16, 2, 2, 12, 6, 0.031207598371777476, ["movzx   edx, word ptr [rbx]", "mov     esi, 2Eh ; '.'", "mov     rdi, s; path", "mov     [rbx], si", "mov     dword ptr [rax], 0", "mov     esi, 3; name", "mov     [rsp+0B8h+fd], edx", "call    _pathconf", "mov     edi, [r12]", "mov     edx, [rsp+0B8h+fd]", "xor     ecx, ecx", "test    edi, edi", "mov     [rbx], dx", "setz    cl", "sub     rax, rcx", "jmp     loc_AFC6"], ["movzx~edx,<TAG>", "mov~esi,0", "mov~rdi,s", "mov~<TAG>,si", "mov~<TAG>,0", "mov~esi,0", "mov~[rsp+0],edx", "call~FOO", "mov~edi,<TAG>", "mov~edx,[rsp+0]", "xor~ecx,ecx", "test~edi,edi", "mov~<TAG>,dx", "setz~cl", "sub~rax,rcx", "jmp~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 7, 2, 0.0, ["mov     rdi, dirp; dirp", "call    _closedir", "jmp     loc_AEE0"], ["mov~rdi,dirp", "call~FOO", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 6, 2, 0.027589326096788783, ["test    dirp, dirp", "jz      loc_AEE0"], ["test~dirp,dirp", "jz~FOO"]], [3, 0, 64, 1, 0, 5, 0, 1, 19, 7, 0.014020805065581185, ["mov     byte ptr [rax], 30h ; '0'", "sub     rax, 1", "movzx   edx, byte ptr [rax]", "cmp     dl, 39h ; '9'", "jz      short loc_AE10"], ["mov~<TAG>,0", "sub~rax,0", "movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [0, 0, 64, 0, 0, 1, 0, 0, 18, 8, 0.012890094979647219, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 64, 0, 0, 3, 0, 0, 14, 7, 0.18091361374943465, ["mov     rdx, [rsp+0B8h+var_90]; n", "cmp     rdx, rbp", "jb      short loc_AD4C"], ["mov~rdx,[rsp+0]", "cmp~rdx,rbp", "jb~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 5, 3, 0.35594753505201265, ["cmp     [rsp+0B8h+rename], 0", "jz      loc_B11E"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 64, 0, 1, 8, 2, 2, 7, 3, 0.32180009045680685, ["xor     r8d, r8d", "cmp     [rsp+0B8h+backup_type], 1", "mov     rsi, [rsp+0B8h+file]; src", "mov     edi, 0FFFFFF9Ch; fd1", "setnz   r8b; flags", "call    renameatu", "test    eax, eax", "jz      loc_B11E"], ["xor~r8d,r8d", "cmp~[rsp+0],0", "mov~rsi,[rsp+0]", "mov~edi,0", "setnz~r8b", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 64, 1, 1, 7, 1, 2, 18, 6, 0.15807327001356852, ["add     edx, 1", "mov     rdi, dirp; dirp", "mov     r15, r8", "mov     [rax], dl", "call    _readdir", "test    rax, rax", "jnz     loc_AC91"], ["add~edx,0", "mov~rdi,dirp", "mov~r15,r8", "mov~<TAG>,dl", "call~FOO", "test~rax,rax", "jnz~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 10, 5, 0.10922659430122117, ["cmp     [rsp+0B8h+base_max], 0", "jnz     loc_B070"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 64, 0, 2, 8, 0, 2, 9, 4, 0.21743554952510177, ["mov     rdi, s; name", "call    last_component", "mov     rdi, rax; name", "mov     rbx, rax", "call    base_len", "cmp     rax, 0Eh", "mov     rbp, rax", "jbe     loc_AE5F"], ["mov~rdi,s", "call~FOO", "mov~rdi,rax", "mov~rbx,rax", "call~FOO", "cmp~rax,0", "mov~rbp,rax", "jbe~FOO"]], [2, 0, 64, 0, 0, 4, 1, 0, 7, 4, 0.0, ["mov     [rsp+0B8h+sdir], 0FFFFFF9Ch", "mov     rcx, s; dst", "mov     edx, 0FFFFFF9Ch; fd2", "xor     r14d, r14d"], ["mov~[rsp+0],0", "mov~rcx,s", "mov~edx,0", "xor~r14d,r14d"]], [0, 0, 64, 0, 0, 4, 1, 0, 6, 4, 0.31953867028493893, ["mov     edx, [rsp+0B8h+sdir]", "lea     rcx, [s+base_offset]", "test    edx, edx", "jns     short loc_AE89"], ["mov~edx,[rsp+0]", "lea~rcx,<TAG>", "test~edx,edx", "jns~FOO"]], [2, 0, 64, 0, 0, 4, 0, 1, 6, 7, 0.006105834464043419, ["mov     [rbp+0], bx", "mov     dword ptr [rdx], 7E317E2Eh", "mov     byte ptr [rdx+4], 0", "jmp     loc_AC56"], ["mov~[rbp+0],bx", "mov~<TAG>,0", "mov~[yte ptr [rdx+0],0", "jmp~FOO"]], [1, 0, 64, 0, 1, 12, 2, 2, 5, 6, 0.1078697421981004, ["mov     rcx, [rsp+0B8h+pnew_fd]; pnew_fd", "mov     edi, [rsp+0B8h+dir_fd]; dir_fd", "mov     r9d, 2Eh ; '.'", "xor     edx, edx; extra_flags", "movzx   ebx, word ptr [rbp+0]", "mov     rsi, s; dir", "mov     [rbp+0], r9w", "call    opendirat", "test    rax, rax", "mov     dirp, rax", "lea     rdx, [rbp+r12+0]", "jz      loc_B0B0"], ["mov~rcx,[rsp+0]", "mov~edi,[rsp+0]", "mov~r9d,0", "xor~edx,edx", "movzx~ebx,[ord ptr [rbp+0]", "mov~rsi,s", "mov~[rbp+0],r9w", "call~FOO", "test~rax,rax", "mov~dirp,rax", "lea~rdx,[rbp+0]", "jz~FOO"]], [0, 0, 64, 0, 1, 6, 0, 2, 4, 4, 0.015377657168701944, ["mov     rax, [rsp+0B8h+filelen]", "mov     rdx, [rsp+0B8h+simple_backup_suffix_size]; n", "mov     rsi, cs:simple_backup_suffix; src", "lea     rdi, [s+rax]; dest", "call    _memcpy", "jmp     loc_AE5F"], ["mov~rax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 64, 0, 1, 6, 0, 2, 3, 5, 0.3358208955223881, ["mov     rdx, [rsp+0B8h+n]; n", "mov     rsi, [rsp+0B8h+file]; src", "mov     rdi, s; dest", "call    _memcpy", "cmp     [rsp+0B8h+backup_type], 1", "jz      loc_AF10"], ["mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,s", "call~FOO", "cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 64, 2, 0, 10, 0, 1, 12, 4, 0.014020805065581185, ["mov     rax, [rsp+0B8h+filelen]", "mov     rsi, [rsp+0B8h+base_max]", "add     rax, s", "lea     rdx, [rsi-1]", "sub     rax, rbx", "cmp     rax, rsi", "cmovnb  rax, rdx", "mov     byte ptr [rbx+rax], 7Eh ; '~'", "mov     byte ptr [rbx+rax+1], 0", "jmp     loc_AE5F"], ["mov~rax,[rsp+0]", "mov~rsi,[rsp+0]", "add~rax,s", "lea~rdx,[rsi-1]+0]", "sub~rax,rbx", "cmp~rax,rsi", "cmovnb~rax,rdx", "mov~<TAG>,0", "mov~[yte ptr [rbx+0],0", "jmp~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 15, 5, 0.0002261420171867933, ["mov     [rsp+0B8h+base_max], 0Eh", "jmp     loc_B07B"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 64, 0, 0, 2, 0, 0, 11, 4, 0.07598371777476255, ["cmp     rbp, [rsp+0B8h+base_max]", "jbe     loc_AE5F"], ["cmp~rbp,[rsp+0]", "jbe~FOO"]], [0, 1, 67, 3, 2, 26, 2, 3, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, file_0", "sub     rsp, 88h", "mov     [rsp+0B8h+dir_fd], edi", "mov     dir_fd_0, file_0; name", "mov     [rsp+0B8h+file], file_0", "mov     [rsp+0B8h+backup_type], edx", "mov     [rsp+0B8h+rename], cl", "mov     rax, fs:28h", "mov     [rsp+0B8h+var_40], rax", "xor     eax, eax", "call    last_component", "mov     rdi, rax; s", "mov     r14, rax", "call    _strlen", "mov     rdi, cs:simple_backup_suffix; s", "sub     r14, file_0", "add     rax, base_offset", "mov     [rsp+0B8h+filelen], rax", "test    rdi, rdi", "jz      loc_B134"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,file_0", "sub~rsp,<STR>", "mov~[rsp+0],edi", "mov~dir_fd_0,file_0", "mov~[rsp+0],file_0", "mov~[rsp+0],edx", "mov~[rsp+0],cl", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~rdi,rax", "mov~r14,rax", "call~FOO", "mov~rdi,<TAG>", "sub~r14,file_0", "add~rax,base_offset", "mov~[rsp+0],rax", "test~rdi,rdi", "jz~FOO"]], [0, 0, 64, 0, 1, 6, 1, 2, 4, 7, 0.30845771144278605, ["lea     rbp, [s+base_offset]", "mov     rdi, rbp; name", "call    base_len", "test    dirp, dirp", "mov     r12, rax", "jz      loc_AFF0"], ["lea~rbp,<TAG>", "mov~rdi,rbp", "call~FOO", "test~dirp,dirp", "mov~r12,rax", "jz~FOO"]], [1, 0, 64, 0, 1, 4, 0, 2, 8, 4, 0.31953867028493893, ["call    ___errno_location", "mov     ebp, [rax]", "cmp     ebp, 11h", "jz      loc_AC19"], ["call~FOO", "mov~ebp,<TAG>", "cmp~ebp,0", "jz~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 8, 5, 0.21019900497512436, ["cmp     [rsp+0B8h+backup_type], 2", "jnz     short loc_AF60"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 64, 0, 0, 3, 0, 1, 7, 4, 0.33740388964269563, ["mov     eax, [rsp+0B8h+var_94]", "cmp     eax, 2", "jz      loc_AF30"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 64, 0, 0, 1, 0, 0, 19, 5, 0.1044776119402985, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 64, 0, 0, 2, 0, 0, 19, 4, 0.006897331524197196, ["lea     rax, [rcx+rcx]", "mov     [rsp+0B8h+size], rax"], ["lea~rax,<TAG>", "mov~[rsp+0],rax"]], [0, 0, 64, 0, 0, 3, 1, 0, 13, 5, 0.0777928539122569, ["test    rax, rax", "mov     [rsp+0B8h+base_max], rax", "jns     loc_B070"], ["test~rax,rax", "mov~[rsp+0],rax", "jns~FOO"]], [0, 0, 66, 0, 1, 3, 0, 2, 1, 3, 0.0, ["call    set_simple_backup_suffix", "mov     rdi, cs:simple_backup_suffix", "jmp     loc_ABB3"], ["call~FOO", "mov~rdi,<TAG>", "jmp~FOO"]], [0, 0, 64, 0, 0, 2, 0, 1, 18, 4, 0.059588421528720036, ["mov     [rsp+0B8h+size], rcx", "jmp     loc_ADA4"], ["mov~[rsp+0],rcx", "jmp~FOO"]], [4, 0, 64, 1, 1, 12, 0, 2, 6, 5, 0.08977838082315694, ["mov     qword ptr [rsp+0B8h+fd], rdx", "call    ___errno_location", "cmp     dword ptr [rax], 0Ch", "mov     rdx, qword ptr [rsp+0B8h+fd]", "mov     [rbp+0], bx", "mov     dword ptr [rdx], 7E317E2Eh", "mov     byte ptr [rdx+4], 0", "setz    al", "movzx   eax, al", "add     eax, 2", "mov     [rsp+0B8h+var_94], eax", "jmp     loc_AE40"], ["mov~[word ptr [rsp+0],rdx", "call~FOO", "cmp~<TAG>,0", "mov~rdx,[word ptr [rsp+0]", "mov~[rbp+0],bx", "mov~<TAG>,0", "mov~[yte ptr [rdx+0],0", "setz~al", "movzx~eax,al", "add~eax,0", "mov~[rsp+0],eax", "jmp~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 8, 3, 0.11521935775667119, ["cmp     eax, 3", "jz      loc_B050"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 64, 0, 1, 2, 0, 1, 5, 7, 0.18860244233378562, ["mov     rdi, dirp; dirp", "call    _rewinddir"], ["mov~rdi,dirp", "call~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 14, 5, 0.025780189959294438, ["cmp     rax, 0FFFFFFFFFFFFFFFFh", "jnz     loc_B145"], ["cmp~rax,0", "jnz~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 9, 4, 0.08717774762550883, ["cmp     eax, 1", "jz      loc_AF60"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 15, 4, 0.013568521031207599, ["mov     [rsp+0B8h+base_max], 0FFFFFFFFFFFFFFFFh", "jmp     loc_AE5F"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 3, 0, 2, 6, 1, 3, 9, 2, 0.023066485753052916, ["mov     rdi, r15; ptr", "xor     r15d, r15d", "call    free", "call    ___errno_location", "mov     dword ptr [rax], 0Ch", "jmp     loc_AEE0"], ["mov~rdi,r15", "xor~r15d,r15d", "call~FOO", "call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 64, 0, 1, 7, 0, 1, 9, 5, 0.0, ["mov     rax, [rsp+0B8h+filelen]", "mov     rdx, [rsp+0B8h+simple_backup_suffix_size]; n", "mov     rsi, cs:simple_backup_suffix; src", "lea     rdi, [s+rax]; dest", "call    _memcpy", "mov     [rsp+0B8h+backup_type], 1", "nop     dword ptr [rax+00000000h]"], ["mov~rax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~[rsp+0],0", "nop~[word ptr [rax+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [32, 31, 77, 4, 68, 107, 2, 360, 0.10415, 2, 20], "succs": [[0, 4], [0], [19, 20], [9, 2], [11, 15], [1, 4], [], [67, 6], [33, 37], [8], [8, 65], [12, 53], [11, 13], [11, 14], [11, 5], [34, 11], [17, 11], [3, 11], [11], [25, 58], [19], [56], [21, 29], [45], [7, 23], [58, 55], [7], [26, 28], [26], [56], [7], [30, 7], [32, 37], [32], [16, 3], [41, 31], [51, 31], [12, 54], [48, 22], [35, 38], [36], [40, 36], [18], [42, 59], [35], [50, 44], [35], [46], [35, 46], [24, 57], [43, 61], [27, 45], [66, 39], [60, 52], [53], [10], [48, 62], [24], [10], [53], [65, 63], [18], [64, 47], [35, 39], [35], [7], [39], []], "fname": "backupfile_internal", "n_num": 68}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     ecx, 1", "jmp     backupfile_internal"], ["mov~ecx,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 1, 2, 0.0, 0, 0], "succs": [[1], []], "fname": "backup_file_rename", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[3, 0, 0, 2, 1, 10, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     r9, cs:argmatch_die; exit_fn", "lea     rdx, backup_args; arglist", "lea     rcx, backup_types; vallist", "mov     r8d, 4; valsize", "call    __xargmatch_internal", "lea     rdx, backup_types", "mov     eax, [rdx+rax*4]", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~r9,<TAG>", "lea~rdx,<TAG>", "lea~rcx,<TAG>", "mov~r8d,0", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 10, 0.0, 3, 2], "succs": [[]], "fname": "get_version_0", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 5, 2, 2, 0, 1, 0.0, ["sub     rsp, 8", "xor     ecx, ecx; rename", "call    backupfile_internal", "test    result, result", "jz      short loc_B1D5"], ["sub~rsp,0", "xor~ecx,ecx", "call~FOO", "test~result,result", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 3, 0, 3, 2, 1, 8, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "find_backup_file_name", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.16666666666666666, ["cmp     byte ptr [version], 0", "jz      short loc_B1F0"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 0, 1, 0.0, ["test    version, version", "jz      short loc_B1F0"], ["test~version,version", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 2, -1, 0.16666666666666666, ["jmp     short get_version_0"], ["jmp~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 2", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []]], "func_feature": [0, 1, 3, 0, 5, 5, 0, 7, 0.06667, 0, 0], "succs": [[2, 3], [0, 3], [4], [], []], "fname": "get_version", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 4, 0, 0, 2, 0, 1, 0, 0, 0.11904761904761904, ["cmp     byte ptr [rax], 0", "jz      short loc_B240"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 5, 1, 1, 5, 1, 2, 1, 1, 0.14285714285714285, ["lea     context, aVersionControl; \"VERSION_CONTROL\"", "sub     rsp, 8", "call    _getenv", "test    rax, rax", "jz      short loc_B240"], ["lea~context,<TAG>", "sub~rsp,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 0, 2, 0.0, ["test    version, version", "jz      short loc_B20A"], ["test~version,version", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 1, 2, 0.047619047619047616, ["cmp     byte ptr [version], 0", "jnz     short loc_B232"], ["cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 0, 1, 0, 3, 0, 0, 2, 0, 0.0, ["mov     eax, 2", "add     rsp, 8", "retn"], ["mov~eax,0", "add~rsp,0", "retn"]], [1, 0, 2, 1, 0, 3, 0, 0, 3, -1, 0.09523809523809523, ["lea     rdi, asc_15187; \"$\"", "mov     rsi, rax; version", "add     rsp, 8"], ["lea~rdi,<TAG>", "mov~rsi,rax", "add~rsp,0"]], [0, 0, 1, 0, 0, 1, 0, 1, 2, -1, 0.11904761904761904, ["jmp     get_version_0"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []]], "func_feature": [1, 2, 6, 0, 8, 10, 1, 18, 0.06548, 2, 3], "succs": [[4, 5], [0, 4], [1, 3], [1, 6], [], [6], [7], []], "fname": "xget_version", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 2, 0, 0, 3, 1, 0, 0, 0, 0.011111111111111112, ["test    b, b", "mov     edi, 2000h", "cmovnz  rdi, b"], ["test~b,b", "mov~edi,0", "cmovnz~rdi,b"]], [0, 0, 10, 0, 0, 3, 1, 1, 0, 4, 0.0, ["test    a, a", "mov     rcx, lcm_max", "jnz     short loc_B278"], ["test~a,a", "mov~rcx,lcm_max", "jnz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 0, 2, 2, 0.11111111111111112, ["mov     r8, b", "mov     rax, a"], ["mov~r8,b", "mov~rax,a"]], [0, 0, 8, 0, 0, 2, 1, 1, 1, 3, 0.07777777777777778, ["test    b, b", "jz      short loc_B264"], ["test~b,b", "jz~FOO"]], [0, 0, 4, 2, 0, 8, 1, 1, 4, -1, 0.17777777777777778, ["xor     edx, edx", "mov     rax, a", "div     n", "mov     n, b", "imul    r8, rax", "mov     r9, rax", "cmp     lcm, lcm_max", "ja      short loc_B264"], ["xor~edx,edx", "mov~rax,a", "div~,n", "mov~n,b", "imul~r8,rax", "mov~r9,rax", "cmp~lcm,lcm_max", "ja~FOO"]], [0, 0, 7, 1, 0, 4, 2, 1, 3, 1, 0.2111111111111111, ["xor     edx, edx", "div     n", "test    r, r", "jnz     short loc_B2B8"], ["xor~edx,edx", "div~,n", "test~r,r", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 4, 0, 0.0, ["mov     rax, n", "mov     n, r", "jmp     short loc_B283"], ["mov~rax,n", "mov~n,r", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 6, -1, 0.005555555555555556, ["jmp     short loc_B26E"], ["jmp~FOO"]], [0, 0, 3, 1, 0, 5, 1, 1, 5, -1, 0.06666666666666667, ["xor     edx, edx", "mov     q, lcm", "div     b", "cmp     rax, q", "jnz     short loc_B264"], ["xor~edx,edx", "mov~q,lcm", "div~,b", "cmp~rax,q", "jnz~FOO"]], [0, 0, 1, 0, 0, 3, 0, 0, 2, -1, 0.08333333333333334, ["cmp     size, lcm_max", "cmovbe  lcm_max, size", "mov     r8, rcx"], ["cmp~size,lcm_max", "cmovbe~lcm_max,size", "mov~r8,rcx"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, -1, 0.0, ["mov     rax, r8", "retn"], ["mov~rax,r8", "retn"]]], "func_feature": [0, 7, 7, 0, 11, 15, 1, 36, 0.06768, 0, 4], "succs": [[9], [0, 3], [5], [9, 2], [8, 9], [4, 6], [5], [10], [9, 7], [10], []], "fname": "buffer_lcm", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:file_name, file", "retn"], ["mov~<TAG>,file", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdin_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 9, 0, 1, 7, 2, 2, 0, 0, 0.030303030303030304, ["xor     esi, esi; offset", "mov     rdi, rbx; fp", "mov     edx, 1; whence", "call    rpl_fseeko", "test    eax, eax", "mov     rdi, cs:stdin@@GLIBC_2_2_5; stream", "jz      loc_B308"], ["xor~esi,esi", "mov~rdi,rbx", "mov~edx,0", "call~FOO", "test~eax,eax", "mov~rdi,<TAG>", "jz~FOO"]], [0, 0, 12, 0, 1, 8, 1, 2, 0, 3, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, cs:stdin@@GLIBC_2_2_5", "mov     rdi, rbx; fp", "call    freadahead", "test    rax, rax", "jnz     loc_B388"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,<TAG>", "mov~rdi,rbx", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 4, 0, 1, 2, 0, 1, 3, 2, 0.015151515151515152, ["call    close_stream", "nop     dword ptr [rax+00000000h]"], ["call~FOO", "nop~[word ptr [rax+0]"]], [0, 0, 8, 0, 1, 4, 1, 2, 2, 3, 0.015151515151515152, ["call    rpl_fflush", "test    eax, eax", "mov     rdi, cs:stdin@@GLIBC_2_2_5; stream", "jz      loc_B3A6"], ["call~FOO", "test~eax,eax", "mov~rdi,<TAG>", "jz~FOO"]], [0, 0, 6, 0, 1, 4, 1, 2, 1, 2, 0.045454545454545456, ["mov     rdi, rbx; stream", "call    close_stream", "test    eax, eax", "jnz     short loc_B328"], ["mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 6, 0, 1, 3, 1, 2, 2, 2, 0.08333333333333334, ["call    close_stream", "test    eax, eax", "jnz     loc_B328"], ["call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 1, 0, 2, 9, 2, 2, 3, -1, 0.026515151515151516, ["mov     rdi, rbx; arg", "call    quotearg_colon", "mov     esi, [rbp+0]; errnum", "lea     rdx, format; \"%s: %s\"", "mov     rcx, rax", "mov     r8, close_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,rbx", "call~FOO", "mov~esi,[rbp+0]", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8,close_error", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 3, 0, 2, 10, 2, 3, 2, 1, 0.13636363636363635, ["lea     rsi, aErrorClosingFi; \"error closing file\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rbx, cs:file_name", "mov     r12, rax", "call    ___errno_location", "mov     rbp, rax", "test    rbx, rbx", "jz      short loc_B3C0"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rbx,<TAG>", "mov~r12,rax", "call~FOO", "mov~rbp,rax", "test~rbx,rbx", "jz~FOO"]], [0, 0, 1, 0, 1, 7, 2, 2, 3, 0, 0.026515151515151516, ["mov     esi, [rax]; errnum", "lea     rdx, aS+2; format", "mov     rcx, close_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_B373"], ["mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,close_error", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 0, 4, 0, 1, 3, -1, 0.022727272727272728, ["pop     rbx", "pop     rbp", "pop     r12", "jmp     close_stdout"], ["pop~rbx", "pop~rbp", "pop~r12", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 2, -1, 0.015151515151515152, ["pop     rbx", "pop     rbp", "pop     r12", "jmp     close_stdout"], ["pop~rbx", "pop~rbp", "pop~r12", "jmp~FOO"]], [0, 0, 0, 0, 2, 3, 0, 2, 4, -1, 0.0, ["call    close_stdout", "mov     edi, cs:exit_failure; status", "call    __exit"], ["call~FOO", "mov~edi,<TAG>", "call~FOO"]]], "func_feature": [13, 12, 22, 0, 13, 17, 0, 65, 0.03205, 6, 0], "succs": [[3, 5], [0, 4], [7], [2, 5], [11, 7], [9, 7], [12], [8, 6], [12], [10], [], [10], []], "fname": "close_stdin", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:file_name_0, file", "retn"], ["mov~<TAG>,file", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:ignore_EPIPE, dil", "retn"], ["mov~<TAG>,dil", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_ignore_EPIPE", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 0, 1, 0, 4, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [0, 0, 2, 0, 1, 4, 1, 2, 1, -1, 0.09523809523809523, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jnz     short loc_B482"], ["mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 3, 0, 1, 8, 2, 2, 2, 1, 0.11904761904761903, ["lea     rsi, aWriteError; \"write error\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdi, cs:file_name_0; arg", "mov     rbp, rax", "test    rdi, rdi", "jz      short loc_B48D"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdi,<TAG>", "mov~rbp,rax", "test~rdi,rdi", "jz~FOO"]], [1, 0, 7, 0, 1, 4, 0, 2, 1, 2, 0.07142857142857142, ["call    ___errno_location", "cmp     cs:ignore_EPIPE, 0", "mov     rbx, rax", "jz      short loc_B443"], ["call~FOO", "cmp~<TAG>,0", "mov~rbx,rax", "jz~FOO"]], [0, 1, 6, 0, 0, 2, 0, 1, 2, 2, 0.04166666666666666, ["cmp     dword ptr [rax], 20h ; ' '", "jnz     short loc_B443"], ["cmp~<TAG>,<STR>", "jnz~FOO"]], [1, 0, 8, 1, 1, 7, 1, 2, 0, 3, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jz      short loc_B42C"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     edi, cs:exit_failure; status", "call    __exit"], ["mov~edi,<TAG>", "call~FOO"]], [0, 0, 1, 0, 1, 7, 2, 2, 3, 0, 0.014880952380952378, ["mov     esi, [rbx]; errnum", "lea     rdx, aS+2; format", "mov     rcx, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_B482"], ["mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 2, 8, 2, 2, 3, -1, 0.014880952380952378, ["call    quotearg_colon", "mov     esi, [rbx]; errnum", "lea     rdx, format; \"%s: %s\"", "mov     rcx, rax", "mov     r8, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO"]]], "func_feature": [8, 8, 14, 0, 9, 12, 3, 46, 0.03968, 8, 2], "succs": [[], [0, 6], [8, 7], [2, 4], [1, 2], [1, 3], [], [6], [6]], "fname": "close_stdout", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 4, 1, 2, 0, 1, 0.0, ["sub     rsp, 8", "call    mdir_name", "test    result, result", "jz      short loc_B4C3"], ["sub~rsp,0", "call~FOO", "test~result,result", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 1, 3, 0, 3, 2, 3, 7, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "dir_name", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 4, 0, 0, 3, 0, 1, 0, 0, 0.07142857142857142, ["cmp     byte ptr [file+length-1], 2Fh ; '/'", "lea     rax, [length-1]", "jnz     short loc_B513"], ["cmp~[yte ptr [file+0],0", "lea~rax,[length-1]+0]", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 2, -1, 0.19047619047619047, ["cmp     prefix_length, length", "jnz     short loc_B500"], ["cmp~prefix_length,length", "jnz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 4, -1, 0.023809523809523808, ["mov     length, rax"], ["mov~length,rax"]], [1, 0, 0, 1, 0, 6, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "mov     rdx, length", "mov     rax, rdx", "pop     file", "pop     prefix_length", "retn"], ["add~rsp,0", "mov~rdx,length", "mov~rax,rdx", "pop~file", "pop~prefix_length", "retn"]], [2, 0, 7, 2, 1, 12, 1, 1, 0, 1, 0.0, ["push    rbp", "push    rbx", "xor     ebp, ebp", "mov     rbx, file", "sub     rsp, 8", "cmp     byte ptr [file], 2Fh ; '/'", "setz    bpl", "call    last_component", "mov     rcx, rax", "sub     rcx, file", "cmp     length, prefix_length", "jbe     short loc_B520"], ["push~rbp", "push~rbx", "xor~ebp,ebp", "mov~rbx,file", "sub~rsp,0", "cmp~<TAG>,0", "setz~bpl", "call~FOO", "mov~rcx,rax", "sub~rcx,file", "cmp~length,prefix_length", "jbe~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 2, 1, 0.023809523809523808, ["jmp     short loc_B520"], ["jmp~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 1, 2, 0.11904761904761904, ["cmp     byte ptr [rax-1], 2Fh ; '/'", "lea     rdx, [length-1]", "jz      short loc_B50E"], ["cmp~[yte ptr [rax-1]+0],0", "lea~rdx,[length-1]+0]", "jz~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "mov     rax, length", "pop     file", "pop     prefix_length", "retn"], ["add~rsp,0", "mov~rax,length", "pop~file", "pop~prefix_length", "retn"]]], "func_feature": [1, 1, 5, 0, 8, 10, 2, 33, 0.05357, 0, 4], "succs": [[2, 7], [0, 7], [1], [], [3, 6], [3], [1, 5], []], "fname": "dir_len", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 3, 0, 1, 7, 1, 2, 0, 0, 0.16666666666666666, ["mov     rdx, length; n", "mov     rsi, file; src", "mov     rdi, dir; dest", "call    _memcpy", "test    length, length", "mov     rcx, rax", "jz      short loc_B580"], ["mov~rdx,length", "mov~rsi,file", "mov~rdi,dir", "call~FOO", "test~length,length", "mov~rcx,rax", "jz~FOO"]], [1, 0, 4, 1, 2, 14, 2, 3, 0, 2, 0.0, ["push    rbp", "push    rbx", "mov     rbp, file", "sub     rsp, 8", "call    dir_len", "test    rax, rax", "mov     rbx, rax", "setz    al", "movzx   eax, al", "lea     rdi, [length+rax+1]; size", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "jz      short loc_B576"], ["push~rbp", "push~rbx", "mov~rbp,file", "sub~rsp,0", "call~FOO", "test~rax,rax", "mov~rbx,rax", "setz~al", "movzx~eax,al", "lea~rdi,[length+0]", "call~FOO", "test~rax,rax", "mov~rcx,rax", "jz~FOO"]], [2, 0, 2, 0, 0, 3, 0, 1, 2, 0, 0.0, ["mov     byte ptr [rax], 2Eh ; '.'", "mov     ebx, 1", "jmp     short loc_B572"], ["mov~<TAG>,0", "mov~ebx,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, -1, 0.16666666666666666, ["mov     byte ptr [rcx+length], 0"], ["mov~<TAG>,0"]], [1, 0, 0, 1, 0, 5, 0, 0, 1, -1, 0.0, ["add     rsp, 8", "mov     rax, rcx", "pop     length", "pop     file", "retn"], ["add~rsp,0", "mov~rax,rcx", "pop~length", "pop~file", "retn"]]], "func_feature": [3, 3, 6, 0, 5, 6, 1, 30, 0.06667, 0, 2], "succs": [[2, 3], [0, 4], [3], [4], []], "fname": "mdir_name", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 6, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666669, ["test    sil, sil", "jz      short loc_B5CA"], ["test~sil,sil", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 3, 2, 0.33333333333333337, ["cmp     dl, 2Fh ; '/'", "jnz     short loc_B5C0"], ["cmp~dl,0", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 0, 5, 2, 0.0, ["mov     base, p", "xor     esi, esi"], ["mov~base,p", "xor~esi,esi"]], [2, 0, 9, 1, 0, 4, 0, 1, 2, 2, 0.08888888888888889, ["add     base, 1", "movzx   edx, byte ptr [base]", "cmp     dl, 2Fh ; '/'", "jz      short loc_B5A0"], ["add~base,0", "movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 1, 3, 0.011111111111111112, ["nop     dword ptr [base+base+00h]"], ["nop~[word ptr [base+0]"]], [0, 0, 7, 0, 0, 2, 1, 1, 1, 1, 0.23333333333333334, ["test    dl, dl", "jz      short locret_B5EA"], ["test~dl,dl", "jz~FOO"]], [1, 0, 10, 0, 0, 4, 0, 1, 0, 2, 0.0, ["movzx   edx, byte ptr [base]", "mov     rax, base", "cmp     dl, 2Fh ; '/'", "jnz     short loc_B5AC"], ["movzx~edx,<TAG>", "mov~rax,base", "cmp~dl,0", "jnz~FOO"]], [2, 0, 6, 1, 0, 5, 1, 1, 4, 1, 0.022222222222222223, ["add     p, 1", "movzx   edx, byte ptr [rcx]", "mov     esi, 1", "test    dl, dl", "jnz     short loc_B5D5"], ["add~p,0", "movzx~edx,<TAG>", "mov~esi,0", "test~dl,dl", "jnz~FOO"]], [1, 0, 6, 1, 0, 4, 1, 1, 5, 1, 0.07777777777777778, ["add     p, 1", "movzx   edx, byte ptr [p]", "test    dl, dl", "jz      short locret_B5EA"], ["add~p,0", "movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 2, 3, 0.22222222222222224, ["mov     rcx, p", "xor     esi, esi", "jmp     short loc_B5D5"], ["mov~rcx,p", "xor~esi,esi", "jmp~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 6, 8, 0, 11, 17, 13, 30, 0.10505, 0, 3], "succs": [[8, 2], [0, 7], [8], [3, 5], [3], [9, 10], [4, 5], [1, 10], [1, 10], [1], []], "fname": "last_component", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 5, 0, 0, 3, 0, 1, 0, 0, 0.16666666666666666, ["cmp     byte ptr [name+len-1], 2Fh ; '/'", "lea     rax, [len-1]", "jz      short loc_B610"], ["cmp~[yte ptr [name+0],0", "lea~rax,[len-1]+0]", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 1, 0.2857142857142857, ["cmp     len, 1", "jz      short loc_B630"], ["cmp~len,0", "jz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 1, 2, 0.11904761904761904, ["cmp     byte ptr [name+len-1], 2Fh ; '/'", "lea     rdx, [len-1]", "jz      short loc_B618"], ["cmp~[yte ptr [name+0],0", "lea~rdx,[len-1]+0]", "jz~FOO"]], [1, 0, 7, 0, 1, 5, 0, 1, 0, 3, 0.0, ["push    rbx", "mov     rbx, name", "call    _strlen", "cmp     len, 1", "jbe     short loc_B60A"], ["push~rbx", "mov~rbx,name", "call~FOO", "cmp~len,0", "jbe~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     name", "retn"], ["pop~name", "retn"]], [0, 0, 0, 0, 0, 3, 0, 0, 4, -1, 0.0, ["mov     rax, len", "pop     name", "retn"], ["mov~rax,len", "pop~name", "retn"]], [0, 0, 5, 0, 0, 2, 0, 0, 4, 2, 0.047619047619047616, ["mov     len, rax", "nop     dword ptr [rax+rax+00h]"], ["mov~len,rax", "nop~[word ptr [rax+0]"]], [1, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0.0, ["mov     eax, 1", "pop     name", "retn"], ["mov~eax,0", "pop~name", "retn"]]], "func_feature": [1, 0, 4, 0, 8, 9, 6, 23, 0.07738, 0, 0], "succs": [[5, 6], [0, 7], [1, 4], [2, 4], [], [], [1], []], "fname": "base_len", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[5, 0, 0, 3, 2, 18, 0, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, file", "sub     rsp, 8", "call    last_component", "cmp     byte ptr [had_slash], 0", "mov     rbx, had_slash", "cmovz   rbx, file", "mov     rdi, base; name", "call    base_len", "add     base, had_slash", "cmp     byte ptr [base_lim], 0", "mov     byte ptr [base_lim], 0", "setnz   al", "add     rsp, 8", "pop     base_lim", "pop     file", "retn"], ["push~rbp", "push~rbx", "mov~rbp,file", "sub~rsp,0", "call~FOO", "cmp~<TAG>,0", "mov~rbx,had_slash", "cmovz~rbx,file", "mov~rdi,base", "call~FOO", "add~base,had_slash", "cmp~<TAG>,0", "mov~<TAG>,0", "setnz~al", "add~rsp,0", "pop~base_lim", "pop~file", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 3, 18, 0.0, 0, 3], "succs": [[]], "fname": "strip_trailing_slashes", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     _posix_fadvise"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 1, 1, 0.0, 0, 0], "succs": [[1], []], "fname": "fdadvise", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 3, 0, 0, 2, 1, 1, 0, 0, 0.0, ["test    fp, fp", "jz      short locret_B6B0"], ["test~fp,fp", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0.0, [], []], [0, 0, 1, 0, 1, 9, 2, 2, 1, 0, 0.16666666666666666, ["push    rbx", "mov     ebx, esi", "call    _fileno", "mov     ecx, ebx; advise", "xor     edx, edx; len", "xor     esi, esi; offset", "pop     advice", "mov     edi, eax; fd", "jmp     _posix_fadvise"], ["push~rbx", "mov~ebx,esi", "call~FOO", "mov~ecx,ebx", "xor~edx,edx", "xor~esi,esi", "pop~advice", "mov~edi,eax", "jmp~FOO"]]], "func_feature": [1, 3, 3, 0, 4, 3, 0, 12, 0.04167, 0, 0], "succs": [[], [0, 3], [], [2]], "fname": "fadvise", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 3, 0, 0, 7, 0, 1, 0, 0, 0.0, ["lea     rax, [rsp+58h+arg_0]", "mov     [rsp+58h+ap.gp_offset], 10h", "mov     edx, dword ptr [rsp+58h+var_28]", "mov     [rsp+58h+ap.overflow_arg_area], rax", "lea     rax, [rsp+58h+var_38]", "mov     [rsp+58h+ap.reg_save_area], rax", "jmp     short loc_B6E1"], ["lea~rax,[rsp+0]", "mov~<TAG>,0", "mov~edx,[word ptr [rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 1, 4, 1, 0, 8, 3, 1, 0, 2, 0.0, ["sub     rsp, 58h", "mov     [rsp+58h+var_28], rdx", "xor     edx, edx", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "test    sil, 40h", "jnz     short loc_B708"], ["sub~rsp,<STR>", "mov~[rsp+0],rdx", "xor~edx,edx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~sil,0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 2, 7, 2, 3, 1, 1, 0.3333333333333333, ["xor     eax, eax", "call    _open", "mov     edi, eax; fd", "call    fd_safer", "mov     rcx, [rsp+58h+var_40]", "xor     rcx, fs:28h", "jnz     short loc_B729"], ["xor~eax,eax", "call~FOO", "mov~edi,eax", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 2, -1, 0.0, ["add     rsp, 58h", "retn"], ["add~rsp,<STR>", "retn"]]], "func_feature": [3, 5, 6, 3, 5, 5, 4, 25, 0.06667, 1, 2], "succs": [[3], [0, 3], [], [2, 4], []], "fname": "open_safer", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.14285714285714285, ["cmp     ent, ent_from_table", "jz      short loc_B7A0"], ["cmp~ent,ent_from_table", "jz~FOO"]], [2, 0, 5, 1, 3, 23, 1, 4, 1, 1, 0.11904761904761904, ["push    r13", "push    r12", "mov     r13, ht", "push    rbp", "push    rbx", "mov     r12, file", "mov     edi, 18h; n", "mov     rbp, stats", "sub     rsp, 8", "call    xmalloc", "mov     rdi, file; string", "mov     rbx, rax", "call    xstrdup", "mov     [ent], rax", "mov     rax, [stats+8]", "mov     rsi, ent; entry", "mov     rdi, ht; table", "mov     [ent+8], rax", "mov     rax, [stats+0]", "mov     [ent+10h], rax", "call    hash_insert", "test    ent_from_table, ent_from_table", "jz      short loc_B7B2"], ["push~r13", "push~r12", "mov~r13,ht", "push~rbp", "push~rbx", "mov~r12,file", "mov~edi,0", "mov~rbp,stats", "sub~rsp,0", "call~FOO", "mov~rdi,file", "mov~rbx,rax", "call~FOO", "mov~<TAG>,rax", "mov~rax,[stats+0]", "mov~rsi,ent", "mov~rdi,ht", "mov~[ent+0],rax", "mov~rax,[stats+0]", "mov~[ent+0],rax", "call~FOO", "test~ent_from_table,ent_from_table", "jz~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "pop     ent", "pop     stats", "pop     file", "pop     ht", "retn"], ["add~rsp,0", "pop~ent", "pop~stats", "pop~file", "pop~ht", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 7, 0, 0, 2, 1, 1, 0, 2, 0.0, ["test    ht, ht", "jz      short locret_B7B0"], ["test~ht,ht", "jz~FOO"]], [1, 0, 1, 1, 0, 7, 0, 1, 3, -1, 0.07142857142857142, ["add     rsp, 8", "mov     rdi, ent; x", "pop     ent", "pop     stats", "pop     file", "pop     ht", "jmp     triple_free"], ["add~rsp,0", "mov~rdi,ent", "pop~ent", "pop~stats", "pop~file", "pop~ht", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []]], "func_feature": [4, 2, 8, 0, 8, 7, 3, 42, 0.04167, 0, 3], "succs": [[2, 6], [0, 3], [], [], [], [1, 4], [7], []], "fname": "record_file", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 28h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.3333333333333333, ["mov     rcx, [rsp+28h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_B811"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 3, 0, 1, 9, 1, 1, 1, 2, 0.0, ["mov     rax, [stats+8]", "mov     [rsp+28h+new_ent.name], file", "mov     file, rsp; entry", "mov     [rsp+28h+new_ent.st_ino], rax", "mov     rax, [stats]", "mov     [rsp+28h+new_ent.st_dev], rax", "call    hash_lookup", "test    rax, rax", "setnz   al"], ["mov~rax,[stats+0]", "mov~<TAG>,file", "mov~file,rsp", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "call~FOO", "test~rax,rax", "setnz~al"]], [1, 0, 4, 1, 0, 6, 2, 1, 0, 2, 0.0, ["sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "test    ht, ht", "jz      short loc_B7FC"], ["sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~ht,ht", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 4, 4, 1, 5, 5, 3, 21, 0.06667, 1, 2], "succs": [[], [0, 4], [1], [1, 2], []], "fname": "seen_file", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 1, 14, 0, 0, 3, 0, 1, 0, 0, 0.02380952380952381, ["cmp     edx, 4000h", "mov     eax, 64h ; 'd'", "jz      short loc_B890"], ["cmp~edx,<STR>", "mov~eax,0", "jz~FOO"]], [3, 0, 15, 0, 0, 5, 1, 1, 0, 4, 0.0, ["mov     edx, edi", "mov     eax, 2Dh ; '-'", "and     edx, 0F000h", "cmp     edx, 8000h", "jz      short loc_B890"], ["mov~edx,edi", "mov~eax,0", "and~edx,0", "cmp~edx,0", "jz~FOO"]], [2, 0, 6, 1, 0, 3, 1, 1, 2, 2, 0.1142857142857143, ["and     eax, 0FFFFFFB5h", "add     eax, 78h ; 'x'", "jmp     loc_B8D8"], ["and~eax,0", "add~eax,0", "jmp~FOO"]], [9, 2, 8, 2, 0, 21, 6, 1, 1, 3, 0.2666666666666667, ["mov     [str], al", "mov     eax, edi", "and     eax, 100h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFBBh", "add     eax, 72h ; 'r'", "mov     [str+1], al", "mov     eax, edi", "and     eax, 80h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB6h", "add     eax, 77h ; 'w'", "mov     [str+2], al", "mov     eax, edi", "and     eax, 40h", "cmp     eax, 1", "sbb     eax, eax", "test    edi, 800h", "jz      loc_B970"], ["mov~<TAG>,al", "mov~eax,edi", "and~eax,<STR>", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,<STR>", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "test~edi,0", "jz~FOO"]], [2, 0, 11, 0, 0, 3, 0, 1, 4, 4, 0.0380952380952381, ["cmp     edx, 0A000h", "mov     eax, 6Ch ; 'l'", "jz      short loc_B890"], ["cmp~edx,0", "mov~eax,0", "jz~FOO"]], [2, 0, 12, 0, 0, 3, 0, 1, 3, 4, 0.04285714285714286, ["cmp     edx, 2000h", "mov     eax, 63h ; 'c'", "jz      short loc_B890"], ["cmp~edx,0", "mov~eax,0", "jz~FOO"]], [3, 0, 9, 0, 0, 5, 0, 0, 6, 4, 0.0, ["cmp     edx, 0C000h", "mov     eax, 73h ; 's'", "mov     edx, 3Fh ; '?'", "cmovnz  eax, edx", "nop     dword ptr [rax+00000000h]"], ["cmp~edx,0", "mov~eax,0", "mov~edx,0", "cmovnz~eax,edx", "nop~[word ptr [rax+0]"]], [2, 0, 10, 0, 0, 3, 0, 1, 5, 4, 0.02380952380952381, ["cmp     edx, 1000h", "mov     eax, 70h ; 'p'", "jz      short loc_B890"], ["cmp~edx,0", "mov~eax,0", "jz~FOO"]], [2, 1, 0, 1, 0, 6, 1, 0, 6, -1, 0.0, ["and     eax, 0FFFFFFE0h", "add     eax, 74h ; 't'", "mov     [str+9], al", "mov     eax, 20h ; ' '", "mov     [str+0Ah], ax", "retn"], ["and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,<STR>", "mov~[str+0],ax", "retn"]], [10, 1, 2, 2, 0, 21, 6, 1, 5, -1, 0.12380952380952381, ["mov     [str+6], al", "mov     eax, edi", "and     eax, 4", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFBBh", "add     eax, 72h ; 'r'", "mov     [str+7], al", "mov     eax, edi", "and     eax, 2", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB6h", "add     eax, 77h ; 'w'", "mov     [str+8], al", "mov     eax, edi", "and     eax, 1", "cmp     eax, 1", "sbb     eax, eax", "and     edi, 200h", "jz      short loc_B980"], ["mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~edi,<STR>", "jz~FOO"]], [2, 0, 13, 0, 0, 3, 0, 1, 2, 4, 0.0380952380952381, ["cmp     edx, 6000h", "mov     eax, 62h ; 'b'", "jz      short loc_B890"], ["cmp~edx,0", "mov~eax,0", "jz~FOO"]], [10, 1, 5, 2, 0, 21, 6, 1, 3, 1, 0.2380952380952381, ["mov     [str+3], al", "mov     eax, edi", "and     eax, 20h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFBBh", "add     eax, 72h ; 'r'", "mov     [str+4], al", "mov     eax, edi", "and     eax, 10h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB6h", "add     eax, 77h ; 'w'", "mov     [str+5], al", "mov     eax, edi", "and     eax, 8", "cmp     eax, 1", "sbb     eax, eax", "test    edi, 400h", "jz      loc_B998"], ["mov~[str+0],al", "mov~eax,edi", "and~eax,<STR>", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "test~edi,0", "jz~FOO"]], [2, 0, 6, 1, 0, 2, 1, 0, 2, 2, 0.1142857142857143, ["and     eax, 0FFFFFFE0h", "add     eax, 73h ; 's'"], ["and~eax,0", "add~eax,0"]], [2, 1, 0, 1, 0, 6, 1, 0, 6, -1, 0.0, ["and     eax, 0FFFFFFB5h", "add     eax, 78h ; 'x'", "mov     [str+9], al", "mov     eax, 20h ; ' '", "mov     [str+0Ah], ax", "retn"], ["and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,<STR>", "mov~[str+0],ax", "retn"]], [2, 0, 3, 1, 0, 3, 1, 1, 4, 0, 0.07857142857142858, ["and     eax, 0FFFFFFB5h", "add     eax, 78h ; 'x'", "jmp     loc_B91D"], ["and~eax,0", "add~eax,0", "jmp~FOO"]], [2, 0, 3, 1, 0, 2, 1, 0, 4, -1, 0.07857142857142858, ["and     eax, 0FFFFFFE0h", "add     eax, 73h ; 's'"], ["and~eax,0", "add~eax,0"]]], "func_feature": [0, 25, 11, 0, 16, 23, 2, 110, 0.07381, 0, 12], "succs": [[10, 3], [0, 3], [11], [2, 12], [3, 7], [3, 4], [3], [3, 6], [], [8, 13], [3, 5], [14, 15], [11], [], [9], [9]], "fname": "strmode", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     edi, [statp+18h]; mode", "jmp     strmode"], ["mov~edi,[statp+0]", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[1], []], "fname": "filemodestring", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 4, 1, 2, 0, 1, 0.0, ["sub     rsp, 8", "call    mfile_name_concat", "test    p, p", "jz      short loc_B9D3"], ["sub~rsp,0", "call~FOO", "test~p,p", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 1, 3, 0, 3, 2, 4, 7, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "file_name_concat", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 4, 1, 1, 6, 1, 2, 0, 0, 0.2777777777777778, ["lea     rdi, [dirlen+baselen+1]", "add     rdi, [rsp+48h+var_48]; size", "call    _malloc", "test    rax, rax", "mov     dirbaselen, rax", "jz      short loc_BAB6"], ["lea~rdi,[dirlen+0]", "add~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~dirbaselen,rax", "jz~FOO"]], [3, 0, 5, 0, 0, 9, 1, 1, 2, -1, 0.034722222222222224, ["xor     eax, eax", "cmp     byte ptr [base+0], 2Fh ; '/'", "mov     edx, 0", "setnz   al", "mov     [rsp+48h+var_48], rax", "mov     eax, 2Fh ; '/'", "cmovz   eax, edx", "mov     [rsp+48h+sep], al", "jmp     short loc_BA6E"], ["xor~eax,eax", "cmp~[yte ptr [base+0],0", "mov~edx,0", "setnz~al", "mov~<TAG>,rax", "mov~eax,0", "cmovz~eax,edx", "mov~[rsp+0],al", "jmp~FOO"]], [2, 0, 5, 0, 0, 3, 0, 1, 2, 0, 0.034722222222222224, ["mov     [rsp+48h+var_48], 0", "mov     [rsp+48h+sep], 0", "jmp     short loc_BA6E"], ["mov~<TAG>,0", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 5, 0, 0, 8, 1, 0, 1, -1, 0.06944444444444445, ["xor     eax, eax", "cmp     byte ptr [base+0], 2Fh ; '/'", "mov     edx, 0", "setz    al", "mov     [rsp+48h+var_48], rax", "mov     eax, 2Eh ; '.'", "cmovnz  eax, edx", "mov     [rsp+48h+sep], al"], ["xor~eax,eax", "cmp~[yte ptr [base+0],0", "mov~edx,0", "setz~al", "mov~<TAG>,rax", "mov~eax,0", "cmovnz~eax,edx", "mov~[rsp+0],al"]], [0, 0, 3, 1, 1, 10, 1, 2, 3, -1, 0.16666666666666666, ["mov     rdi, p_concat; dest", "mov     rdx, dirlen; n", "mov     rsi, dir; src", "call    _mempcpy", "movzx   ecx, [rsp+48h+sep]", "mov     rdi, [rsp+48h+var_48]", "add     rdi, rax; dest", "test    base_in_result, base_in_result", "mov     [rax], cl", "jz      short loc_BAA8"], ["mov~rdi,p_concat", "mov~rdx,dirlen", "mov~rsi,dir", "call~FOO", "movzx~ecx,[rsp+0]", "mov~rdi,<TAG>", "add~rdi,rax", "test~base_in_result,base_in_result", "mov~<TAG>,cl", "jz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 4, -1, 0.0, ["mov     [base_in_result], p"], ["mov~<TAG>,p"]], [1, 0, 7, 0, 0, 2, 0, 1, 1, 1, 0.027777777777777776, ["cmp     byte ptr [dir+dirlen-1], 2Fh ; '/'", "jz      loc_BAD0"], ["cmp~[yte ptr [dir+0],0", "jz~FOO"]], [1, 0, 9, 3, 3, 22, 1, 4, 0, 2, 0.0, ["push    r15", "push    r14", "mov     r15, base_in_result", "push    r13", "push    r12", "mov     r12, dir", "push    rbp", "push    rbx", "mov     rbp, base", "sub     rsp, 18h", "call    last_component", "mov     rbx, rax", "mov     rdi, dirbase; name", "call    base_len", "sub     dirbase, dir", "mov     r13, rax", "mov     rdi, base; s", "add     rbx, dirbaselen", "call    _strlen", "test    dirbaselen, dirbaselen", "mov     r14, rax", "jz      short loc_BA50"], ["push~r15", "push~r14", "mov~r15,base_in_result", "push~r13", "push~r12", "mov~r12,dir", "push~rbp", "push~rbx", "mov~rbp,base", "sub~rsp,0", "call~FOO", "mov~rbx,rax", "mov~rdi,dirbase", "call~FOO", "sub~dirbase,dir", "mov~r13,rax", "mov~rdi,base", "add~rbx,dirbaselen", "call~FOO", "test~dirbaselen,dirbaselen", "mov~r14,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 3, -1, 0.0, ["add     rsp, 18h", "mov     rax, p_concat", "pop     dirlen", "pop     base", "pop     dir", "pop     p_concat", "pop     baselen", "pop     base_in_result", "retn"], ["add~rsp,0", "mov~rax,p_concat", "pop~dirlen", "pop~base", "pop~dir", "pop~p_concat", "pop~baselen", "pop~base_in_result", "retn"]], [1, 0, 1, 0, 1, 4, 0, 1, 4, -1, 0.027777777777777776, ["mov     rdx, baselen; n", "mov     rsi, base; src", "call    _mempcpy", "mov     byte ptr [rax], 0"], ["mov~rdx,baselen", "mov~rsi,base", "call~FOO", "mov~<TAG>,0"]]], "func_feature": [6, 5, 12, 1, 10, 13, 1, 74, 0.06389, 0, 6], "succs": [[8, 4], [0], [0], [0], [9, 5], [9], [1, 2], [3, 6], [], [8]], "fname": "mfile_name_concat", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 5, 0, 1, 6, 0, 2, 0, 0, 0.21428571428571427, ["mov     rdx, count; count", "mov     rsi, ptr; buf", "mov     edi, r13d; fd", "call    safe_write", "cmp     n_rw, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_BB00"], ["mov~rdx,count", "mov~rsi,ptr", "mov~edi,r13d", "call~FOO", "cmp~n_rw,0", "jnz~FOO"]], [0, 0, 5, 0, 0, 5, 1, 1, 1, -1, 0.09523809523809523, ["mov     r13d, edi", "mov     rbp, ptr", "mov     rbx, count", "xor     r12d, r12d", "jmp     short loc_BB10"], ["mov~r13d,edi", "mov~rbp,ptr", "mov~rbx,count", "xor~r12d,r12d", "jmp~FOO"]], [0, 0, 5, 3, 0, 4, 0, 1, 4, -1, 0.047619047619047616, ["add     total, n_rw", "add     ptr, n_rw", "sub     rbx, n_rw", "jz      short loc_BB24"], ["add~total,n_rw", "add~ptr,n_rw", "sub~rbx,n_rw", "jz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 3, -1, 0.16666666666666666, ["test    n_rw, n_rw", "jz      short loc_BB38"], ["test~n_rw,n_rw", "jz~FOO"]], [1, 0, 7, 1, 0, 7, 1, 1, 0, 1, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "test    count, count", "jz      short loc_BB51"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "test~count,count", "jz~FOO"]], [2, 0, 0, 1, 1, 9, 0, 1, 4, -1, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 1Ch", "add     rsp, 8", "mov     rax, total", "pop     count", "pop     ptr", "pop     total", "pop     fd", "retn"], ["call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rax,total", "pop~count", "pop~ptr", "pop~total", "pop~fd", "retn"]], [1, 0, 0, 1, 0, 7, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, r12", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "mov~rax,r12", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 1, 0, 0, 2, 1, 1, 1, 0, 0.023809523809523808, ["xor     r12d, r12d", "jmp     short loc_BB24"], ["xor~r12d,r12d", "jmp~FOO"]]], "func_feature": [2, 4, 8, 0, 8, 10, 2, 42, 0.06845, 0, 6], "succs": [[3, 6], [0], [0, 6], [2, 5], [1, 7], [], [], [6]], "fname": "full_write", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 8, 0, 0, 1, 0, 0, 0, 0, 0.09722222222222221, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [5, 0, 9, 0, 0, 7, 1, 1, 0, 1, 0.0, ["cmp     candidate, 0Ah", "mov     eax, 0Ah", "mov     r9, 0AAAAAAAAAAAAAAABh", "cmovb   candidate, rax", "or      candidate, 1", "cmp     candidate, 0FFFFFFFFFFFFFFFFh", "jz      short loc_BBEF"], ["cmp~candidate,0", "mov~eax,0", "mov~r9,0", "cmovb~candidate,rax", "or~candidate,0", "cmp~candidate,0", "jz~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 3, 1, 0.125, ["test    rax, rax", "jnz     short loc_BBEF"], ["test~rax,rax", "jnz~FOO"]], [2, 0, 8, 2, 0, 10, 0, 0, 2, 2, 0.3819444444444444, ["mov     rax, candidate", "mov     rcx, candidate", "mul     r9", "mov     rax, rdx", "shr     rax, 1", "lea     rax, [rax+rax*2]", "sub     rcx, rax", "cmp     candidate, 9", "mov     rax, rcx", "jbe     short loc_BBE0"], ["mov~rax,candidate", "mov~rcx,candidate", "mul~,r9", "mov~rax,rdx", "shr~rax,0", "lea~rax,<TAG>", "sub~rcx,rax", "cmp~candidate,0", "mov~rax,rcx", "jbe~FOO"]], [1, 0, 8, 3, 0, 8, 1, 0, 5, 2, 0.1875, ["add     rcx, 2", "xor     edx, edx", "mov     rax, candidate", "div     rcx", "add     rsi, r8", "cmp     rsi, candidate", "mov     rax, rdx", "jb      short loc_BBC0"], ["add~rcx,0", "xor~edx,edx", "mov~rax,candidate", "div~,rcx", "add~rsi,r8", "cmp~rsi,candidate", "mov~rax,rdx", "jb~FOO"]], [2, 0, 8, 1, 0, 3, 0, 1, 4, 1, 0.22916666666666666, ["add     candidate, 2", "cmp     candidate, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_BB88"], ["add~candidate,0", "cmp~candidate,0", "jnz~FOO"]], [1, 0, 8, 1, 0, 3, 1, 1, 6, 2, 0.048611111111111105, ["add     r8, 8", "test    rdx, rdx", "jz      short loc_BBE5"], ["add~r8,0", "test~rdx,rdx", "jz~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 3, 2, 0.2569444444444444, ["test    rcx, rcx", "jz      short loc_BBE5"], ["test~rcx,rcx", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     rax, candidate", "retn"], ["mov~rax,candidate", "retn"]], [3, 0, 8, 0, 0, 4, 0, 1, 4, 3, 0.1736111111111111, ["mov     r8d, 10h", "mov     esi, 9", "mov     ecx, 3", "jmp     short loc_BBC9"], ["mov~r8d,0", "mov~esi,0", "mov~ecx,0", "jmp~FOO"]]], "func_feature": [0, 5, 6, 0, 10, 16, 2, 42, 0.15, 0, 7], "succs": [[3], [0, 8], [8, 5], [2, 7], [2, 6], [8, 3], [4, 5], [9, 5], [], [4]], "fname": "next_prime", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 0, 1, 0, 6, 1, 0, 0, 0, 0.0, ["mov     rax, data", "xor     edx, edx", "ror     rax, 3", "div     n", "mov     rax, rdx", "retn"], ["mov~rax,data", "xor~edx,edx", "ror~rax,0", "div~,n", "mov~rax,rdx", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 6, 0.0, 0, 1], "succs": [[]], "fname": "raw_hasher", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["cmp     a, b", "setz    al", "retn"], ["cmp~a,b", "setz~al", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 0], "succs": [[]], "fname": "raw_comparator", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 2, 0, 1, 7, 0, 1, 0, 0, 0.0, ["push    rbx", "mov     rbx, table", "mov     table, key", "mov     key, [table+10h]", "call    qword ptr [table+30h]", "cmp     [table+10h], n", "jbe     short loc_BC3D"], ["push~rbx", "mov~rbx,table", "mov~table,key", "mov~key,[table+0]", "call~[word ptr [table+0]", "cmp~[table+0],n", "jbe~FOO"]], [1, 0, 0, 2, 0, 4, 0, 0, 0, -1, 0.0, ["shl     n, 4", "add     rax, [table]", "pop     table", "retn"], ["shl~n,0", "add~rax,<TAG>", "pop~table", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [2, 0, 2, 0, 3, 2, 5, 12, 0.0, 0, 2], "succs": [[1, 2], [], []], "fname": "safe_hasher", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 3, 0, 0, 3, 1, 1, 0, 0, 0.032679738562091505, ["mov     rax, [bucket+8]", "test    rax, rax", "jz      short loc_BD50"], ["mov~rax,[bucket+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 2, -1, 0.05228758169934641, ["test    r13b, r13b", "jz      short loc_BCFE"], ["test~r13b,r13b", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, -1, 0.0032679738562091504, ["mov     qword ptr [bucket], 0", "jmp     short loc_BCFE"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 8, 0, 0, 4, 1, 1, 6, 1, 0.029411764705882353, ["mov     cursor, [cursor+8]", "mov     rax, [cursor+8]", "test    rax, rax", "jz      loc_BD60"], ["mov~cursor,[cursor+0]", "mov~rax,[cursor+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 8, 0, 1, 4, 1, 2, 5, 2, 0.06535947712418301, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jz      short loc_BCB0"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 0, 1, 4, 3, 0.09477124183006536, ["mov     rsi, [rax]", "cmp     entry, rsi", "jnz     short loc_BCC9"], ["mov~rsi,<TAG>", "cmp~entry,rsi", "jnz~FOO"]], [0, 0, 10, 0, 0, 3, 1, 1, 3, 1, 0.08496732026143791, ["mov     rax, [cursor+8]", "test    rax, rax", "jz      loc_BD60"], ["mov~rax,[cursor+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 0, 0, 13, 0, 0, 4, -1, 0.0, ["movdqu  xmm0, xmmword ptr [next]", "movups  xmmword ptr [bucket], xmm0", "mov     qword ptr [next], 0", "mov     rdx, [table+48h]", "mov     [next+8], rdx", "mov     [table+48h], next", "mov     next, rsi", "pop     bucket", "pop     entry", "pop     table", "pop     r13", "pop     bucket_head", "retn"], ["movdqu~xmm0,<TAG>", "movups~<TAG>,xmm0", "mov~<TAG>,0", "mov~rdx,[table+0]", "mov~[next+0],rdx", "mov~[table+0],next", "mov~next,rsi", "pop~bucket", "pop~entry", "pop~table", "pop~r13", "pop~bucket_head", "retn"]], [0, 0, 3, 0, 0, 1, 0, 1, 5, -1, 0.0392156862745098, ["jmp     short loc_BCDC"], ["jmp~FOO"]], [0, 0, 8, 0, 0, 3, 0, 1, 7, 3, 0.016339869281045753, ["mov     rsi, [rax]", "cmp     rsi, entry", "jz      short loc_BCDC"], ["mov~rsi,<TAG>", "cmp~rsi,entry", "jz~FOO"]], [0, 0, 0, 0, 0, 8, 1, 0, 1, 0, 0.0, ["xor     esi, esi", "pop     rbx", "mov     rax, rsi", "pop     entry", "pop     table", "pop     r13", "pop     bucket_head", "retn"], ["xor~esi,esi", "pop~rbx", "mov~rax,rsi", "pop~entry", "pop~table", "pop~r13", "pop~bucket_head", "retn"]], [0, 0, 18, 0, 1, 14, 1, 2, 0, 1, 0.0, ["push    r14", "push    r13", "mov     r14, bucket_head", "push    r12", "push    rbp", "mov     r12, table", "push    rbx", "mov     rbp, entry", "mov     r13d, ecx", "call    safe_hasher", "mov     [bucket_head], bucket", "mov     rsi, [bucket]", "test    rsi, rsi", "jz      loc_BD60"], ["push~r14", "push~r13", "mov~r14,bucket_head", "push~r12", "push~rbp", "mov~r12,table", "push~rbx", "mov~rbp,entry", "mov~r13d,ecx", "call~FOO", "mov~<TAG>,bucket", "mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [0, 0, 16, 0, 1, 4, 1, 2, 2, 2, 0.06862745098039216, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     loc_BD10"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 17, 0, 0, 3, 0, 1, 1, 3, 0.05228758169934641, ["cmp     rsi, entry", "mov     rbx, bucket", "jz      loc_BD13"], ["cmp~rsi,entry", "mov~rbx,bucket", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 3, -1, 0.016339869281045753, ["mov     rsi, [bucket]"], ["mov~rsi,<TAG>"]], [1, 0, 1, 0, 0, 6, 0, 0, 7, -1, 0.0, ["mov     rdx, [rax+8]", "mov     [cursor+8], rdx", "mov     qword ptr [rax], 0", "mov     rdx, [table+48h]", "mov     [rax+8], rdx", "mov     [table+48h], rax"], ["mov~rdx,[rax+0]", "mov~[cursor+0],rdx", "mov~<TAG>,0", "mov~rdx,[table+0]", "mov~[rax+0],rdx", "mov~[table+0],rax"]], [0, 0, 2, 0, 0, 2, 1, 1, 6, -1, 0.05555555555555556, ["test    r13b, r13b", "jz      short loc_BCFE"], ["test~r13b,r13b", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 0, 6, -1, 0.00980392156862745, ["mov     rax, [cursor+8]", "mov     rsi, [rax]"], ["mov~rax,[cursor+0]", "mov~rsi,<TAG>"]], [0, 0, 0, 0, 0, 7, 0, 0, 3, -1, 0.0, ["pop     rbx", "mov     rax, rsi", "pop     entry", "pop     table", "pop     r13", "pop     bucket_head", "retn"], ["pop~rbx", "mov~rax,rsi", "pop~entry", "pop~table", "pop~r13", "pop~bucket_head", "retn"]]], "func_feature": [3, 9, 16, 0, 19, 27, 3, 85, 0.03268, 0, 0], "succs": [[2, 7], [0, 18], [18], [9, 10], [17, 3], [8, 4], [10, 5], [], [16], [16, 4], [], [10, 13], [6, 14], [1, 12], [1], [18], [18, 15], [16], []], "fname": "hash_find_entry", "n_num": 19}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 10, 0, 0, 5, 0, 1, 0, 0, 0.0, ["mov     tuning, [rdi]", "lea     rcx, default_tuning", "mov     eax, 1", "cmp     tuning, rcx", "jz      short locret_BDE5"], ["mov~tuning,<TAG>", "lea~rcx,<TAG>", "mov~eax,0", "cmp~tuning,rcx", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 1, 0, 0, 1, 0.07222222222222223, ["mov     [rdi], rcx", "xor     eax, eax"], ["mov~<TAG>,rcx", "xor~eax,eax"]], [0, 0, 9, 0, 0, 3, 0, 0, 0, 2, 0.08888888888888889, ["movss   xmm0, dword ptr [tuning+8]", "ucomiss xmm0, cs:dword_15294", "jbe     short loc_BDE0"], ["movss~xmm0,[word ptr [tuning+0]", "ucomiss~xmm0,<TAG>", "jbe~FOO"]], [0, 0, 8, 0, 0, 3, 0, 0, 0, 2, 0.13333333333333333, ["movss   xmm1, cs:dword_15298", "ucomiss xmm1, xmm0", "jbe     short loc_BDE0"], ["movss~xmm1,<TAG>", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [0, 0, 7, 0, 0, 3, 0, 0, 0, 2, 0.16666666666666669, ["movss   xmm1, dword ptr [tuning+0Ch]", "ucomiss xmm1, cs:dword_1529C", "jbe     short loc_BDE0"], ["movss~xmm1,[word ptr [tuning+0]", "ucomiss~xmm1,<TAG>", "jbe~FOO"]], [0, 0, 6, 0, 0, 3, 0, 0, 0, 2, 0.17777777777777778, ["movss   xmm1, dword ptr [tuning]", "ucomiss xmm1, cs:dword_152A0", "jb      short loc_BDE0"], ["movss~xmm1,<TAG>", "ucomiss~xmm1,<TAG>", "jb~FOO"]], [0, 0, 5, 0, 0, 4, 0, 0, 0, 2, 0.16666666666666669, ["addss   xmm1, cs:dword_15294", "movss   xmm2, dword ptr [tuning+4]", "ucomiss xmm2, xmm1", "jbe     short loc_BDE0"], ["addss~xmm1,<TAG>", "movss~xmm2,[word ptr [tuning+0]", "ucomiss~xmm2,xmm1", "jbe~FOO"]], [0, 0, 4, 0, 0, 3, 0, 0, 0, 2, 0.13333333333333333, ["movss   xmm3, cs:dword_152A4", "ucomiss xmm3, xmm2", "jb      short loc_BDE0"], ["movss~xmm3,<TAG>", "ucomiss~xmm3,xmm2", "jb~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 0, 2, 0.011111111111111112, ["xchg    ax, ax"], ["xchg~ax,ax"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 3, 0, 0, 2, 0, 1, 0, 1, 0.08333333333333334, ["ucomiss xmm0, xmm1", "ja      short locret_BDE5"], ["ucomiss~xmm0,xmm1", "ja~FOO"]]], "func_feature": [0, 1, 2, 0, 11, 18, 4, 30, 0.09394, 6, 0], "succs": [[9, 2], [9], [1, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 10], [1], [], [8, 9]], "fname": "check_tuning", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 0, 1, 0, 9, 1, 0, 0, 0, 0.0, ["add     rsp, 8", "xor     eax, eax", "pop     new_bucket", "pop     dst", "pop     bucket", "pop     src", "pop     safe", "pop     r15", "retn"], ["add~rsp,0", "xor~eax,eax", "pop~new_bucket", "pop~dst", "pop~bucket", "pop~src", "pop~safe", "pop~r15", "retn"]], [1, 0, 18, 0, 1, 4, 1, 2, 8, 0, 0.09064327485380116, ["mov     edi, 10h; size", "call    _malloc", "test    rax, rax", "jnz     short loc_BEBE"], ["mov~edi,0", "call~FOO", "test~rax,rax", "jnz~FOO"]], [1, 0, 18, 0, 1, 7, 0, 2, 4, 0, 0.13450292397660818, ["mov     r15, [cursor]", "mov     rdi, dst; table", "mov     rsi, data; key", "call    safe_hasher", "cmp     qword ptr [new_bucket], 0", "mov     rdx, [cursor+8]", "jnz     short loc_BE38"], ["mov~r15,<TAG>", "mov~rdi,dst", "mov~rsi,data", "call~FOO", "cmp~<TAG>,0", "mov~rdx,[cursor+0]", "jnz~FOO"]], [0, 0, 18, 0, 0, 3, 1, 1, 3, 0, 0.42105263157894735, ["mov     rbx, [bucket+8]", "test    cursor, cursor", "jnz     short loc_BE4C"], ["mov~rbx,[bucket+0]", "test~cursor,cursor", "jnz~FOO"]], [2, 0, 18, 1, 0, 9, 1, 1, 5, 0, 0.04239766081871345, ["mov     [new_bucket], data", "add     qword ptr [dst+18h], 1", "test    next, next", "mov     qword ptr [cursor], 0", "mov     new_bucket, [dst+48h]", "mov     [cursor+8], rax", "mov     [dst+48h], cursor", "mov     rbx, next", "jnz     short loc_BE4C"], ["mov~<TAG>,data", "add~[word ptr [dst+0],0", "test~next,next", "mov~<TAG>,0", "mov~new_bucket,[dst+0]", "mov~[cursor+0],rax", "mov~[dst+0],cursor", "mov~rbx,next", "jnz~FOO"]], [0, 0, 18, 0, 0, 6, 1, 1, 5, 0, 0.04239766081871345, ["mov     rcx, [new_bucket+8]", "test    next, next", "mov     [cursor+8], rcx", "mov     [new_bucket+8], cursor", "mov     rbx, next", "jz      short loc_BE87"], ["mov~rcx,[new_bucket+0]", "test~next,next", "mov~[cursor+0],rcx", "mov~[new_bucket+0],cursor", "mov~rbx,next", "jz~FOO"]], [1, 0, 18, 1, 0, 3, 0, 1, 3, 0, 0.3830409356725146, ["add     bucket, 10h", "cmp     [src+8], bucket", "ja      loc_BE18"], ["add~bucket,0", "cmp~[src+0],bucket", "ja~FOO"]], [0, 0, 18, 0, 0, 3, 1, 1, 2, 0, 0.435672514619883, ["mov     r15, [bucket]", "test    r15, r15", "jz      loc_BEDA"], ["mov~r15,<TAG>", "test~r15,r15", "jz~FOO"]], [1, 0, 18, 0, 0, 3, 1, 1, 5, 0, 0.42105263157894735, ["test    r14b, r14b", "mov     qword ptr [bucket+8], 0", "jnz     short loc_BEDA"], ["test~r14b,r14b", "mov~[word ptr [bucket+0],0", "jnz~FOO"]], [2, 0, 18, 1, 0, 2, 0, 0, 8, 0, 0.24269005847953215, ["mov     qword ptr [bucket], 0", "sub     qword ptr [src+18h], 1"], ["mov~<TAG>,0", "sub~[word ptr [src+0],0"]], [1, 0, 19, 1, 0, 10, 0, 0, 0, 0, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r12, [src]", "cmp     bucket, [src+8]", "jnb     loc_BEE8"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r12,<TAG>", "cmp~bucket,[src+0]", "jnb~FOO"]], [0, 0, 18, 0, 0, 1, 0, 0, 6, 0, 0.12280701754385964, ["mov     data, [bucket]"], ["mov~data,<TAG>"]], [1, 0, 18, 1, 0, 3, 0, 1, 7, 0, 0.06432748538011696, ["mov     [new_bucket], r15", "add     qword ptr [dst+18h], 1", "jmp     short loc_BECD"], ["mov~<TAG>,r15", "add~[word ptr [dst+0],0", "jmp~FOO"]], [1, 0, 18, 0, 1, 6, 0, 2, 6, 0, 0.29532163742690054, ["mov     rsi, r15; key", "mov     rdi, dst; table", "call    safe_hasher", "cmp     qword ptr [rax], 0", "mov     cursor, rax", "jz      short loc_BF00"], ["mov~rsi,r15", "mov~rdi,dst", "call~FOO", "cmp~<TAG>,0", "mov~cursor,rax", "jz~FOO"]], [0, 0, 18, 0, 0, 4, 0, 0, 9, 0, 0.1286549707602339, ["mov     rdx, [new_bucket+8]", "mov     [rax], r15", "mov     [rax+8], rdx", "mov     [new_bucket+8], rax"], ["mov~rdx,[new_bucket+0]", "mov~<TAG>,r15", "mov~[rax+0],rdx", "mov~[new_bucket+0],rax"]], [0, 0, 18, 0, 0, 2, 0, 0, 8, 0, 0.04093567251461988, ["mov     rdx, [rax+8]", "mov     [dst+48h], rdx"], ["mov~rdx,[rax+0]", "mov~[dst+0],rdx"]], [0, 0, 18, 0, 0, 1, 0, 1, 4, 0, 0.24853801169590642, ["jmp     short loc_BE8B"], ["jmp~FOO"]], [0, 0, 18, 0, 0, 4, 0, 0, 1, 0, 0.049707602339181284, ["mov     rbp, dst", "mov     r13, src", "mov     r14d, edx", "nop     dword ptr [rax+00h]"], ["mov~rbp,dst", "mov~r13,src", "mov~r14d,edx", "nop~[word ptr [rax+0]"]], [0, 0, 18, 0, 0, 3, 1, 1, 7, 0, 0.18128654970760233, ["mov     new_bucket, [dst+48h]", "test    rax, rax", "jz      short loc_BF10"], ["mov~new_bucket,[dst+0]", "test~rax,rax", "jz~FOO"]], [2, 0, 0, 1, 0, 9, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "mov     eax, 1", "pop     rbx", "pop     rbp", "pop     bucket", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "mov~eax,0", "pop~rbx", "pop~rbp", "pop~bucket", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [3, 8, 15, 0, 20, 29, 3, 92, 0.16725, 0, 7], "succs": [[], [0, 14], [4, 5], [16, 2], [2, 11], [2, 11], [19, 7], [3, 6], [13, 6], [6], [17, 19], [8], [9], [18, 12], [9], [14], [8], [7], [1, 15], []], "fname": "transfer_entries", "n_num": 20}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+10h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_buckets", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+18h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_buckets_used", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+20h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_entries", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 7, 0, 0, 4, 1, 1, 0, 0, 0.20833333333333331, ["mov     rdx, [cursor+8]", "mov     ecx, 1", "test    cursor, cursor", "jz      short loc_BF95"], ["mov~rdx,[cursor+0]", "mov~ecx,0", "test~cursor,cursor", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 2, -1, 0.3055555555555555, ["cmp     qword ptr [bucket], 0", "jz      short loc_BF9C"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 7, 1, 0, 3, 0, 0, 3, -1, 0.2361111111111111, ["add     bucket, 10h", "cmp     bucket, rdi", "jb      short loc_BF70"], ["add~bucket,0", "cmp~bucket,rdi", "jb~FOO"]], [0, 0, 7, 0, 0, 2, 0, 0, 4, -1, 0.16666666666666666, ["cmp     max_bucket_length, rcx", "cmovb   max_bucket_length, rcx"], ["cmp~max_bucket_length,rcx", "cmovb~max_bucket_length,rcx"]], [0, 0, 7, 0, 0, 1, 0, 0, 4, -1, 0.08333333333333333, ["nop     dword ptr [max_bucket_length+00h]"], ["nop~[word ptr [max_bucket_length+0]"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 9, 0, 0, 5, 1, 0, 0, 1, 0.0, ["mov     bucket, [table]", "mov     table, [table+8]", "xor     eax, eax", "cmp     bucket, rdi", "jnb     short locret_BFA7"], ["mov~bucket,<TAG>", "mov~table,[table+0]", "xor~eax,eax", "cmp~bucket,rdi", "jnb~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 1, -1, 0.09722222222222221, ["xchg    ax, ax"], ["xchg~ax,ax"]], [1, 0, 7, 1, 0, 4, 1, 1, 5, -1, 0.06944444444444445, ["mov     cursor, [cursor+8]", "add     bucket_length, 1", "test    cursor, cursor", "jnz     short loc_BF88"], ["mov~cursor,[cursor+0]", "add~bucket_length,0", "test~cursor,cursor", "jnz~FOO"]]], "func_feature": [0, 3, 3, 0, 10, 13, 0, 24, 0.11667, 0, 2], "succs": [[3, 4], [0, 2], [1, 5], [2], [9], [], [], [8, 6], [1], [9, 3]], "fname": "hash_get_max_bucket_length", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 8, 0, 0, 2, 0, 1, 0, 0, 0.17857142857142855, ["cmp     qword ptr [bucket], 0", "jz      short loc_BFED"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 8, 1, 0, 3, 0, 0, 2, 2, 0.3214285714285714, ["add     bucket, 10h", "cmp     bucket, r8", "jb      short loc_BFC0"], ["add~bucket,0", "cmp~bucket,r8", "jb~FOO"]], [0, 0, 8, 0, 0, 6, 2, 0, 0, 2, 0.0, ["mov     bucket, [table]", "mov     r8, [table+8]", "xor     edx, edx", "xor     esi, esi", "cmp     bucket, r8", "jnb     short loc_BFF6"], ["mov~bucket,<TAG>", "mov~r8,[table+0]", "xor~edx,edx", "xor~esi,esi", "cmp~bucket,r8", "jnb~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["cmp     [table+20h], rdx", "setz    al", "retn"], ["cmp~[table+0],rdx", "setz~al", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.21428571428571427, ["xor     eax, eax", "cmp     [table+18h], rsi", "jz      short loc_C000"], ["xor~eax,eax", "cmp~[table+0],rsi", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 8, 1, 0, 4, 1, 1, 4, 3, 0.10714285714285714, ["mov     cursor, [cursor+8]", "add     n_entries, 1", "test    cursor, cursor", "jnz     short loc_BFE0"], ["mov~cursor,[cursor+0]", "add~n_entries,0", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 3, 4, 0.07142857142857142, ["nop     word ptr [cursor+cursor+00000000h]"], ["nop~[ord ptr [cursor+0]"]], [2, 0, 8, 2, 0, 5, 1, 1, 2, 3, 0.125, ["mov     rax, [cursor+8]", "add     n_buckets_used, 1", "add     n_entries, 1", "test    cursor, cursor", "jz      short loc_BFED"], ["mov~rax,[cursor+0]", "add~n_buckets_used,0", "add~n_entries,0", "test~cursor,cursor", "jz~FOO"]]], "func_feature": [0, 5, 4, 0, 9, 13, 0, 28, 0.1131, 0, 4], "succs": [[8, 1], [0, 4], [0, 4], [], [3, 5], [], [1, 6], [6], [1, 7]], "fname": "hash_table_ok", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 13, 1, 0, 4, 1, 1, 0, 0, 0.06043956043956045, ["mov     rax, [rax+8]", "add     rdx, 1", "test    rax, rax", "jnz     short loc_C058"], ["mov~rax,[rax+0]", "add~rdx,0", "test~rax,rax", "jnz~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 4, 6, 0.03296703296703297, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 13, 0, 0, 2, 0, 1, 2, 4, 0.14835164835164835, ["cmp     qword ptr [rsi], 0", "jz      short loc_C06C"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 13, 1, 0, 3, 0, 0, 3, 3, 0.28571428571428575, ["add     rsi, 10h", "cmp     rsi, rdi", "jb      short loc_C040"], ["add~rsi,0", "cmp~rsi,rdi", "jb~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 1, 5, 0.03296703296703297, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [4, 0, 1, 1, 1, 18, 1, 2, 4, -1, 0.07142857142857144, ["divsd   xmm0, xmm1", "lea     rdx, aBucketsUsedLu2; \"# buckets used:    %lu (%.2f%%)\\n\"", "mov     rcx, r13", "mov     rdi, stream", "mov     esi, 1", "mov     eax, 1", "call    ___fprintf_chk", "add     rsp, 8", "mov     rcx, rbx", "mov     rdi, stream", "pop     rbx", "pop     rbp", "pop     stream", "pop     r13", "lea     rdx, aMaxBucketLengt; \"max bucket length: %lu\\n\"", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["divsd~xmm0,xmm1", "lea~rdx,<TAG>", "mov~rcx,r13", "mov~rdi,stream", "mov~esi,0", "mov~eax,0", "call~FOO", "add~rsp,0", "mov~rcx,rbx", "mov~rdi,stream", "pop~rbx", "pop~rbp", "pop~stream", "pop~r13", "lea~rdx,<TAG>", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [2, 0, 2, 0, 0, 8, 2, 1, 3, 0, 0.06043956043956045, ["mov     rax, rbp", "pxor    xmm1, xmm1", "shr     rax, 1", "and     ebp, 1", "or      rax, rbp", "cvtsi2sd xmm1, rax", "addsd   xmm1, xmm1", "jmp     loc_C0C8"], ["mov~rax,rbp", "pxor~xmm1,xmm1", "shr~rax,0", "and~ebp,0", "or~rax,rbp", "cvtsi2sd~xmm1,rax", "addsd~xmm1,xmm1", "jmp~FOO"]], [0, 0, 2, 0, 0, 2, 0, 0, 3, -1, 0.06043956043956045, ["pxor    xmm1, xmm1", "cvtsi2sd xmm1, rbp"], ["pxor~xmm1,xmm1", "cvtsi2sd~xmm1,rbp"]], [2, 0, 4, 0, 0, 11, 3, 0, 2, 1, 0.09890109890109891, ["mov     rax, r13", "mov     rdx, r13", "pxor    xmm0, xmm0", "shr     rax, 1", "and     edx, 1", "or      rax, rdx", "test    rbp, rbp", "cvtsi2sd xmm0, rax", "addsd   xmm0, xmm0", "mulsd   xmm0, cs:qword_152B8", "jns     short loc_C0BF"], ["mov~rax,r13", "mov~rdx,r13", "pxor~xmm0,xmm0", "shr~rax,0", "and~edx,0", "or~rax,rdx", "test~rbp,rbp", "cvtsi2sd~xmm0,rax", "addsd~xmm0,xmm0", "mulsd~xmm0,<TAG>", "jns~FOO"]], [0, 0, 4, 0, 0, 5, 1, 1, 2, 1, 0.09890109890109891, ["pxor    xmm0, xmm0", "test    rbp, rbp", "cvtsi2sd xmm0, r13", "mulsd   xmm0, cs:qword_152B8", "js      short loc_C139"], ["pxor~xmm0,xmm0", "test~rbp,rbp", "cvtsi2sd~xmm0,r13", "mulsd~xmm0,<TAG>", "js~FOO"]], [2, 0, 6, 0, 2, 13, 3, 3, 1, 2, 0.26373626373626374, ["lea     rdx, aEntriesLu; \"# entries:         %lu\\n\"", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rdx, aBucketsLu; \"# buckets:         %lu\\n\"", "xor     eax, eax", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "call    ___fprintf_chk", "test    r13, r13", "js      short loc_C110"], ["lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rdx,<TAG>", "xor~eax,eax", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "call~FOO", "test~r13,r13", "js~FOO"]], [1, 0, 14, 1, 0, 14, 1, 0, 0, 3, 0.0, ["push    r13", "push    r12", "mov     r12, stream", "push    rbp", "push    rbx", "xor     ebx, ebx", "sub     rsp, 8", "mov     stream, [table]", "mov     rcx, [table+20h]", "mov     rbp, [table+10h]", "mov     r13, [table+18h]", "mov     table, [table+8]", "cmp     rsi, rdi", "jnb     short loc_C075"], ["push~r13", "push~r12", "mov~r12,stream", "push~rbp", "push~rbx", "xor~ebx,ebx", "sub~rsp,0", "mov~stream,<TAG>", "mov~rcx,[table+0]", "mov~rbp,[table+0]", "mov~r13,[table+0]", "mov~table,[table+0]", "cmp~rsi,rdi", "jnb~FOO"]], [0, 0, 13, 0, 0, 2, 0, 0, 4, 4, 0.16483516483516486, ["cmp     rbx, rdx", "cmovb   rbx, rdx"], ["cmp~rbx,rdx", "cmovb~rbx,rdx"]], [1, 0, 13, 0, 0, 4, 1, 1, 3, 5, 0.08241758241758243, ["mov     rax, [rsi+8]", "mov     edx, 1", "test    rax, rax", "jz      short loc_C065"], ["mov~rax,[rsi+0]", "mov~edx,0", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 5, -1, 0.0, [], []]], "func_feature": [3, 13, 10, 0, 15, 22, 0, 88, 0.09744, 5, 4], "succs": [[0, 12], [0], [3, 13], [2, 10], [2], [14], [5], [5], [6, 7], [6, 7], [8, 9], [10, 4], [3], [1, 12], []], "fname": "hash_print_statistics", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 7, 0, 0, 1, 0, 0, 0, 0, 0.07142857142857142, ["mov     rsi, [cursor]"], ["mov~rsi,<TAG>"]], [0, 0, 7, 0, 0, 3, 1, 1, 4, 4, 0.17857142857142855, ["mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_C180"], ["mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 2, -1, 0.0, ["pop     rbx", "mov     rax, rsi", "pop     entry", "pop     table", "retn"], ["pop~rbx", "mov~rax,rsi", "pop~entry", "pop~table", "retn"]], [0, 0, 7, 0, 0, 2, 0, 1, 2, 2, 0.30357142857142855, ["cmp     rsi, entry", "jz      short loc_C19F"], ["cmp~rsi,entry", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 1, 0, 1, -1, 0.05357142857142857, ["xor     esi, esi"], ["xor~esi,esi"]], [0, 0, 7, 0, 0, 2, 0, 1, 1, 3, 0.08928571428571427, ["mov     rbx, bucket", "jmp     short loc_C183"], ["mov~rbx,bucket", "jmp~FOO"]], [0, 0, 7, 0, 1, 4, 1, 2, 3, 1, 0.26785714285714285, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_C1B0"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 8, 0, 1, 9, 1, 2, 0, 4, 0.0, ["push    r12", "push    rbp", "mov     r12, table", "push    rbx", "mov     rbp, entry", "call    safe_hasher", "mov     rsi, [bucket]", "test    rsi, rsi", "jz      short loc_C19D"], ["push~r12", "push~rbp", "mov~r12,table", "push~rbx", "mov~rbp,entry", "call~FOO", "mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [0, 0, 0, 0, 0, 6, 0, 0, 4, 0, 0.0, ["mov     rsi, [cursor]", "pop     cursor", "pop     entry", "mov     rax, rsi", "pop     table", "retn"], ["mov~rsi,<TAG>", "pop~cursor", "pop~entry", "mov~rax,rsi", "pop~table", "retn"]]], "func_feature": [2, 4, 7, 0, 9, 11, 3, 33, 0.10714, 0, 0], "succs": [[3], [0, 4], [], [2, 6], [2], [3], [8, 1], [4, 5], []], "fname": "hash_lookup", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 9, 0, 0, 2, 0, 1, 0, 0, 0.0, ["cmp     qword ptr [table+20h], 0", "jz      short loc_C1F3"], ["cmp~[word ptr [table+0],0", "jz~FOO"]], [1, 0, 4, 1, 0, 3, 0, 0, 0, 1, 0.15277777777777776, ["add     bucket, 10h", "cmp     bucket, rcx", "jnb     short loc_C1F8"], ["add~bucket,0", "cmp~bucket,rcx", "jnb~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 0, 2, 0.06944444444444445, ["mov     rax, [bucket]", "test    rax, rax", "jz      short loc_C1E0"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 0, 2, 0.1388888888888889, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 7, 0, 0, 4, 0, 0, 0, 1, 0.09722222222222221, ["mov     rdx, [table]", "mov     rcx, [table+8]", "cmp     bucket, rcx", "jnb     short loc_C1F8"], ["mov~rdx,<TAG>", "mov~rcx,[table+0]", "cmp~bucket,rcx", "jnb~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 2, 1, 0, 0, -1, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 6, 0, 0, 3, 1, 1, 0, 3, 0.1388888888888889, ["mov     rax, [bucket]", "test    rax, rax", "jnz     short locret_C1F6"], ["mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [1, 0, 0, 1, 1, 2, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]]], "func_feature": [1, 3, 4, 0, 10, 11, 0, 22, 0.05972, 0, 2], "succs": [[4, 6], [9, 2], [1, 5], [1], [8, 9], [], [], [], [3, 7], []], "fname": "hash_get_first", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 0, 1, 0, 5, 0, 0, 0, 0, 0.0, ["mov     rax, [cursor]", "add     rsp, 8", "pop     entry", "pop     table", "retn"], ["mov~rax,<TAG>", "add~rsp,0", "pop~entry", "pop~table", "retn"]], [0, 0, 6, 0, 0, 2, 1, 1, 1, 0, 0.1277777777777778, ["test    cursor, cursor", "jnz     short loc_C278"], ["test~cursor,cursor", "jnz~FOO"]], [0, 0, 9, 0, 0, 4, 0, 1, 3, 0, 0.044444444444444446, ["mov     rax, [cursor]", "mov     rdx, [rdx+8]", "cmp     rax, entry", "jnz     short loc_C238"], ["mov~rax,<TAG>", "mov~rdx,[rdx+0]", "cmp~rax,entry", "jnz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 2, 0, 0.1277777777777778, ["test    rdx, rdx", "jz      short loc_C24E"], ["test~rdx,rdx", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 1, 0, 4, 0, 0.03888888888888889, ["xor     eax, eax"], ["xor~eax,eax"]], [1, 0, 4, 1, 0, 3, 0, 1, 3, 0, 0.2111111111111111, ["add     bucket, 10h", "cmp     rdx, bucket", "ja      short loc_C258"], ["add~bucket,0", "cmp~rdx,bucket", "ja~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 2, 0, 0.22222222222222224, ["mov     rdx, [table+8]", "jmp     short loc_C260"], ["mov~rdx,[table+0]", "jmp~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 4, 0, 0.03888888888888889, ["mov     rax, [bucket]", "test    rax, rax", "jnz     short loc_C26B"], ["mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [1, 0, 10, 1, 1, 12, 0, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, table", "mov     rbx, entry", "sub     rsp, 8", "call    safe_hasher", "mov     rdx, rax", "mov     rcx, rax", "mov     cursor, [rdx]", "mov     bucket, [bucket+8]", "cmp     rax, entry", "jz      short loc_C249"], ["push~rbp", "push~rbx", "mov~rbp,table", "mov~rbx,entry", "sub~rsp,0", "call~FOO", "mov~rdx,rax", "mov~rcx,rax", "mov~cursor,<TAG>", "mov~bucket,[bucket+0]", "cmp~rax,entry", "jz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 1, 0, 0.022222222222222223, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 0, 1, 0, 4, 0, 0, 5, 0, 0.0, ["add     rsp, 8", "pop     entry", "pop     table", "retn"], ["add~rsp,0", "pop~entry", "pop~table", "retn"]]], "func_feature": [1, 4, 8, 0, 11, 15, 0, 39, 0.07576, 0, 4], "succs": [[], [0, 6], [1, 3], [2, 6], [10], [4, 7], [5], [10, 5], [1, 9], [3], []], "fname": "hash_get_next", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 10, 0, 0, 3, 1, 1, 0, 0, 0.30303030303030304, ["mov     rcx, [bucket]", "test    rcx, rcx", "jz      short loc_C2DD"], ["mov~rcx,<TAG>", "test~rcx,rcx", "jz~FOO"]], [1, 0, 10, 1, 0, 3, 0, 1, 3, -1, 0.20833333333333334, ["add     bucket, 10h", "cmp     [table+8], bucket", "ja      short loc_C29C"], ["add~bucket,0", "cmp~[table+0],bucket", "ja~FOO"]], [0, 0, 10, 0, 0, 1, 1, 0, 1, -1, 0.07575757575757576, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [0, 0, 10, 0, 0, 2, 0, 1, 6, -1, 0.17424242424242425, ["cmp     buffer_size, counter", "jz      short locret_C2F0"], ["cmp~buffer_size,counter", "jz~FOO"]], [1, 0, 10, 1, 0, 6, 1, 1, 7, -1, 0.09848484848484848, ["mov     r8, [cursor]", "add     counter, 1", "mov     [buffer+counter*8-8], r8", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_C2C0"], ["mov~r8,<TAG>", "add~counter,0", "mov~[buffer+0],r8", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 5, -1, 0.1590909090909091, ["nop     word ptr [counter+counter+00h]"], ["nop~[ord ptr [counter+0]"]], [0, 0, 10, 0, 0, 1, 0, 0, 5, -1, 0.17424242424242425, ["mov     r8, counter"], ["mov~r8,counter"]], [0, 0, 10, 0, 0, 2, 0, 0, 3, -1, 0.2689393939393939, ["cmp     buffer_size, counter", "jbe     short loc_C2E7"], ["cmp~buffer_size,counter", "jbe~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     rax, counter", "retn"], ["mov~rax,counter", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 7, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 2, 1, 0, 1, 0, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [0, 0, 12, 0, 0, 3, 0, 0, 0, 1, 0.0, ["mov     bucket, [table]", "cmp     [table+8], bucket", "jbe     short loc_C2F2"], ["mov~bucket,<TAG>", "cmp~[table+0],bucket", "jbe~FOO"]], [0, 0, 10, 0, 0, 5, 1, 1, 4, -1, 0.25, ["mov     [buffer+counter*8], rcx", "mov     rcx, [cursor+8]", "lea     rax, [counter+1]", "test    cursor, cursor", "jz      short loc_C2DA"], ["mov~<TAG>,rcx", "mov~rcx,[cursor+0]", "lea~rax,[counter+0]", "test~cursor,cursor", "jz~FOO"]]], "func_feature": [0, 5, 5, 0, 13, 17, 0, 32, 0.1317, 0, 2], "succs": [[1, 7], [0, 8], [0], [9, 4], [3, 6], [3], [1], [8, 12], [], [], [], [10, 2], [5, 6]], "fname": "hash_get_entries", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 7, 0, 0, 4, 1, 0, 0, 0, 0.08333333333333333, ["mov     r13, processor_data", "mov     r12, processor", "mov     r15, table", "xor     ebp, ebp"], ["mov~r13,processor_data", "mov~r12,processor", "mov~r15,table", "xor~ebp,ebp"]], [1, 0, 9, 1, 0, 10, 0, 0, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r14, [table]", "cmp     [table+8], bucket", "jbe     short loc_C366"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r14,<TAG>", "cmp~[table+0],bucket", "jbe~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     bucket", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~bucket", "pop~r15", "retn"]], [0, 0, 7, 0, 1, 4, 1, 2, 4, -1, 0.25, ["mov     rsi, processor_data", "call    processor", "test    al, al", "jz      short loc_C354"], ["mov~rsi,processor_data", "call~processor", "test~al,al", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 1, 1, 1, 0, 0.013888888888888888, ["xor     ebp, ebp", "jmp     short loc_C354"], ["xor~ebp,ebp", "jmp~FOO"]], [1, 0, 7, 1, 0, 3, 0, 1, 3, -1, 0.1388888888888889, ["add     bucket, 10h", "cmp     [table+8], bucket", "ja      short loc_C322"], ["add~bucket,0", "cmp~[table+0],bucket", "ja~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 2, -1, 0.25, ["mov     rdi, [bucket]", "test    rdi, rdi", "jz      short loc_C34A"], ["mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 3, -1, 0.16666666666666666, ["mov     rbx, bucket", "jmp     short loc_C333"], ["mov~rbx,bucket", "jmp~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 6, -1, 0.013888888888888888, ["mov     rdi, [cursor]"], ["mov~rdi,<TAG>"]], [1, 0, 7, 1, 0, 4, 1, 1, 5, -1, 0.19444444444444442, ["mov     cursor, [cursor+8]", "add     counter, 1", "test    cursor, cursor", "jnz     short loc_C330"], ["mov~cursor,[cursor+0]", "add~counter,0", "test~cursor,cursor", "jnz~FOO"]]], "func_feature": [1, 5, 7, 0, 10, 14, 0, 42, 0.11111, 0, 4], "succs": [[6], [0, 4], [], [9, 2], [2], [2, 6], [5, 7], [3], [3], [8, 5]], "fname": "hash_do_for_each", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, rdx", "retn"], ["mov~rax,rdx", "retn"]], [0, 0, 3, 0, 0, 4, 2, 1, 0, 0, 0.0, ["movzx   ecx, byte ptr [string]", "xor     edx, edx", "test    cl, cl", "jz      short loc_C39D"], ["movzx~ecx,<TAG>", "xor~edx,edx", "test~cl,cl", "jz~FOO"]], [2, 0, 2, 5, 0, 10, 2, 1, 2, 0, 0.16666666666666666, ["mov     rax, value", "add     string, 1", "shl     rax, 5", "sub     rax, value", "xor     edx, edx", "add     rax, ch_0", "movzx   ecx, byte ptr [rdi]", "div     n_buckets", "test    cl, cl", "jnz     short loc_C380"], ["mov~rax,value", "add~string,0", "shl~rax,0", "sub~rax,value", "xor~edx,edx", "add~rax,ch_0", "movzx~ecx,<TAG>", "div~,n_buckets", "test~cl,cl", "jnz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 1, 0, 0.16666666666666666, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]]], "func_feature": [0, 4, 2, 0, 4, 5, 0, 17, 0.08333, 0, 5], "succs": [[], [0, 3], [0, 2], [2]], "fname": "hash_string", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[3, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0.0, ["mov     rax, 3F80000000000000h", "mov     byte ptr [tuning+10h], 0", "mov     [tuning], rax", "mov     rax, 3FB4FDF43F4CCCCDh", "mov     [tuning+8], rax", "retn"], ["mov~rax,0", "mov~[yte ptr [tuning+0],0", "mov~<TAG>,rax", "mov~rax,0", "mov~[tuning+0],rax", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 6, 0.0, 0, 0], "succs": [[]], "fname": "hash_reset_tuning", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 13, 0, 0, 2, 0, 0, 0, 0, 0.06309523809523811, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, candidate"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,candidate"]], [0, 0, 15, 0, 0, 3, 1, 0, 4, 6, 0.028571428571428574, ["test    candidate, candidate", "movss   xmm1, dword ptr [tuning+8]", "jns     short loc_C501"], ["test~candidate,candidate", "movss~xmm1,[word ptr [tuning+0]", "jns~FOO"]], [0, 0, 15, 0, 0, 2, 1, 1, 3, 6, 0.05952380952380953, ["test    candidate, candidate", "js      short loc_C54B"], ["test~candidate,candidate", "js~FOO"]], [1, 0, 3, 0, 1, 6, 1, 2, 8, -1, 0.04285714285714286, ["mov     esi, 10h; size", "mov     rdi, rbp; nmemb", "call    _calloc", "test    rax, rax", "mov     [table], rax", "jz      short fail"], ["mov~esi,0", "mov~rdi,rbp", "call~FOO", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 7, -1, 0.08095238095238096, ["test    rbp, rbp", "mov     [table+10h], rbp", "jz      short fail"], ["test~rbp,rbp", "mov~[table+0],rbp", "jz~FOO"]], [0, 0, 12, 0, 0, 3, 0, 0, 5, 4, 0.16666666666666669, ["divss   xmm0, xmm1", "ucomiss xmm0, cs:dword_152AC", "jnb     short fail"], ["divss~xmm0,xmm1", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [2, 0, 13, 0, 0, 8, 2, 1, 4, 5, 0.06309523809523811, ["mov     rax, candidate", "pxor    xmm0, xmm0", "shr     rax, 1", "and     ebp, 1", "or      rax, rbp", "cvtsi2ss xmm0, rax", "addss   xmm0, xmm0", "jmp     short loc_C50A"], ["mov~rax,candidate", "pxor~xmm0,xmm0", "shr~rax,0", "and~ebp,0", "or~rax,rbp", "cvtsi2ss~xmm0,rax", "addss~xmm0,xmm0", "jmp~FOO"]], [1, 1, 21, 1, 1, 23, 3, 2, 0, 5, 0.0, ["push    r15", "push    r14", "lea     rax, raw_hasher", "push    r13", "push    r12", "mov     r12, hasher", "push    rbp", "push    rbx", "mov     r13, comparator", "mov     rbp, candidate", "mov     edi, 50h ; 'P'; size", "mov     r15, tuning", "sub     rsp, 8", "test    hasher, hasher", "mov     r14, data_freer", "cmovz   r12, rax", "lea     rax, raw_comparator", "test    comparator, comparator", "cmovz   r13, rax", "call    _malloc", "test    rax, rax", "mov     rbx, rax", "jz      loc_C4CA"], ["push~r15", "push~r14", "lea~rax,<TAG>", "push~r13", "push~r12", "mov~r12,hasher", "push~rbp", "push~rbx", "mov~r13,comparator", "mov~rbp,candidate", "mov~edi,<STR>", "mov~r15,tuning", "sub~rsp,0", "test~hasher,hasher", "mov~r14,data_freer", "cmovz~r12,rax", "lea~rax,<TAG>", "test~comparator,comparator", "cmovz~r13,rax", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 0, 0, 6, 3, 0.14761904761904762, ["ucomiss xmm0, cs:dword_152B0", "jb      short loc_C570"], ["ucomiss~xmm0,<TAG>", "jb~FOO"]], [0, 0, 20, 0, 0, 3, 1, 1, 1, 4, 0.045238095238095244, ["test    tuning, tuning", "lea     rdi, [table+28h]; table", "jz      loc_C4E0"], ["test~tuning,tuning", "lea~rdi,[table+0]", "jz~FOO"]], [0, 0, 17, 0, 1, 4, 1, 2, 2, 3, 0.04642857142857143, ["mov     [table+28h], tuning", "call    check_tuning", "test    al, al", "jz      fail"], ["mov~[table+0],tuning", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 9, 0, 0, 5, 1, 1, 7, 2, 0.06071428571428572, ["subss   xmm0, cs:dword_152B0", "mov     rax, 8000000000000000h", "cvttss2si rbp, xmm0", "xor     rbp, rax", "jmp     loc_C448"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rbp,xmm0", "xor~rbp,rax", "jmp~FOO"]], [4, 0, 1, 2, 0, 10, 0, 1, 9, -1, 0.0011904761904761906, ["shl     rbp, 4", "mov     qword ptr [table+18h], 0", "mov     qword ptr [table+20h], 0", "add     rbp, rax", "mov     [table+30h], hasher", "mov     [table+38h], comparator", "mov     [table+8], rbp", "mov     [table+40h], data_freer", "mov     qword ptr [table+48h], 0", "jmp     short loc_C4CA"], ["shl~rbp,0", "mov~[word ptr [table+0],0", "mov~[word ptr [table+0],0", "add~rbp,rax", "mov~[table+0],hasher", "mov~[table+0],comparator", "mov~[table+0],rbp", "mov~[table+0],data_freer", "mov~[word ptr [table+0],0", "jmp~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 3, 2, 0.07142857142857144, ["cmp     byte ptr [tuning+10h], 0", "jz      loc_C540"], ["cmp~[yte ptr [tuning+0],0", "jz~FOO"]], [0, 0, 1, 0, 1, 3, 1, 1, 3, -1, 0.04166666666666667, ["mov     rdi, table; ptr", "xor     ebx, ebx", "call    free"], ["mov~rdi,table", "xor~ebx,ebx", "call~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 5, -1, 0.17142857142857143, ["test    rax, rax", "js      short fail"], ["test~rax,rax", "js~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 6, -1, 0.1142857142857143, ["test    rcx, rcx", "jnz     short fail"], ["test~rcx,rcx", "jnz~FOO"]], [0, 0, 16, 0, 1, 6, 1, 2, 2, 7, 0.036904761904761905, ["lea     table, default_tuning", "mov     [table+28h], rax", "call    check_tuning", "test    al, al", "movss   xmm1, cs:dword_152A8", "jz      short fail"], ["lea~table,<TAG>", "mov~[table+0],rax", "call~FOO", "test~al,al", "movss~xmm1,<TAG>", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 1, -1, 0.0, ["add     rsp, 8", "mov     rax, rbx", "pop     rbx", "pop     rbp", "pop     hasher", "pop     comparator", "pop     data_freer", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,rbx", "pop~rbx", "pop~rbp", "pop~hasher", "pop~comparator", "pop~data_freer", "pop~r15", "retn"]], [1, 0, 8, 1, 1, 8, 1, 1, 4, 1, 0.20476190476190478, ["mov     rdi, rbp; candidate", "call    next_prime", "mov     edx, 8", "mov     rbp, rax", "xor     ecx, ecx", "mov     rax, rdx", "mul     rbp", "jo      loc_C57A"], ["mov~rdi,rbp", "call~FOO", "mov~edx,0", "mov~rbp,rax", "xor~ecx,ecx", "mov~rax,rdx", "mul~,rbp", "jo~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 7, 2, 0.06071428571428572, ["cvttss2si rbp, xmm0", "jmp     loc_C448"], ["cvttss2si~rbp,xmm0", "jmp~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 5, 0, 0.0, ["mov     ecx, 1", "jmp     loc_C466"], ["mov~ecx,0", "jmp~FOO"]]], "func_feature": [6, 17, 21, 0, 22, 35, 4, 110, 0.06851, 6, 5], "succs": [[5], [0, 6], [0, 6], [12, 14], [3, 14], [8, 14], [5], [9, 18], [11, 20], [17, 10], [13, 14], [19], [18], [1, 19], [18], [16, 14], [4, 14], [2, 14], [], [21, 15], [19], [15]], "fname": "hash_initialize", "n_num": 22}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 11, 0, 1, 3, 0, 1, 0, 0, 0.0, ["mov     rdi, [cursor]", "call    rax", "mov     rax, [table+40h]"], ["mov~rdi,<TAG>", "call~rax", "mov~rax,[table+0]"]], [0, 0, 11, 0, 0, 2, 1, 1, 4, 5, 0.21818181818181817, ["test    rax, rax", "jz      short loc_C5C6"], ["test~rax,rax", "jz~FOO"]], [1, 0, 11, 0, 0, 8, 1, 1, 5, 4, 0.21818181818181817, ["mov     rdx, [cursor+8]", "mov     rcx, [table+48h]", "mov     qword ptr [cursor], 0", "test    next, next", "mov     [cursor+8], rcx", "mov     [table+48h], cursor", "mov     rbx, next", "jnz     short loc_C5B8"], ["mov~rdx,[cursor+0]", "mov~rcx,[table+0]", "mov~<TAG>,0", "test~next,next", "mov~[cursor+0],rcx", "mov~[table+0],cursor", "mov~rbx,next", "jnz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 1, 2, 0.3818181818181818, ["cmp     qword ptr [bucket], 0", "jz      short loc_C601"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 11, 1, 0, 3, 0, 1, 2, 1, 0.3818181818181818, ["add     bucket, 10h", "cmp     [table+8], bucket", "ja      short loc_C5A0"], ["add~bucket,0", "cmp~[table+0],bucket", "ja~FOO"]], [0, 0, 11, 0, 0, 7, 0, 0, 0, 1, 0.0, ["push    r12", "push    rbp", "mov     rbp, table", "push    rbx", "mov     r12, [table]", "cmp     bucket, [table+8]", "jnb     short loc_C60B"], ["push~r12", "push~rbp", "mov~rbp,table", "push~rbx", "mov~r12,<TAG>", "cmp~bucket,[table+0]", "jnb~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 3, 3, 0.35454545454545455, ["test    rax, rax", "jz      short loc_C5F0"], ["test~rax,rax", "jz~FOO"]], [0, 0, 11, 0, 0, 4, 1, 1, 2, 4, 0.35454545454545455, ["mov     rbx, [bucket+8]", "mov     rax, [table+40h]", "test    cursor, cursor", "jz      short loc_C5E5"], ["mov~rbx,[bucket+0]", "mov~rax,[table+0]", "test~cursor,cursor", "jz~FOO"]], [2, 0, 11, 0, 0, 2, 0, 0, 4, 2, 0.35454545454545455, ["mov     qword ptr [bucket], 0", "mov     qword ptr [bucket+8], 0"], ["mov~<TAG>,0", "mov~[word ptr [bucket+0],0"]], [0, 0, 11, 0, 1, 2, 0, 1, 4, 3, 0.0, ["mov     rdi, [bucket]", "call    rax"], ["mov~rdi,<TAG>", "call~rax"]], [0, 0, 11, 0, 0, 1, 0, 0, 3, 6, 0.1909090909090909, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [2, 0, 0, 0, 0, 6, 0, 0, 1, 0, 0.0, ["mov     qword ptr [table+18h], 0", "mov     qword ptr [table+20h], 0", "pop     rbx", "pop     table", "pop     bucket", "retn"], ["mov~[word ptr [table+0],0", "mov~[word ptr [table+0],0", "pop~rbx", "pop~table", "pop~bucket", "retn"]]], "func_feature": [2, 4, 8, 0, 12, 18, 0, 42, 0.20455, 0, 1], "succs": [[2], [0, 2], [1, 6], [4, 7], [11, 3], [11, 3], [8, 9], [10, 6], [4], [8], [1], []], "fname": "hash_clear", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 10, 0, 0, 2, 0, 0, 0, 0, 0.24404761904761907, ["cmp     rbp, rax", "jnb     short loc_C6BC"], ["cmp~rbp,rax", "jnb~FOO"]], [1, 0, 21, 0, 0, 8, 0, 1, 0, 3, 0.0, ["push    r12", "push    rbp", "mov     r12, table", "push    rbx", "cmp     qword ptr [table+40h], 0", "mov     rbp, [table]", "mov     rax, [table+8]", "jz      short loc_C683"], ["push~r12", "push~rbp", "mov~r12,table", "push~rbx", "cmp~[word ptr [table+0],0", "mov~rbp,<TAG>", "mov~rax,[table+0]", "jz~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 1, 3, 0.02142857142857143, ["cmp     qword ptr [table+20h], 0", "jz      short loc_C683"], ["cmp~[word ptr [table+0],0", "jz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 0, 6, 3, 0.19761904761904764, ["mov     bucket, [table]"], ["mov~bucket,<TAG>"]], [0, 0, 9, 0, 0, 1, 0, 0, 2, 4, 0.1142857142857143, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [0, 0, 1, 0, 1, 7, 0, 2, 3, 0, 0.04761904761904762, ["mov     cursor, [table]; ptr", "call    free", "pop     rbx", "mov     rdi, table; ptr", "pop     rbp", "pop     table", "jmp     free"], ["mov~cursor,<TAG>", "call~FOO", "pop~rbx", "mov~rdi,table", "pop~rbp", "pop~table", "jmp~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 3, 3, 0.11190476190476191, ["mov     rdi, [bucket+8]; ptr", "test    cursor, cursor", "jz      short loc_C6B1"], ["mov~rdi,[bucket+0]", "test~cursor,cursor", "jz~FOO"]], [1, 0, 9, 1, 0, 3, 0, 1, 4, 2, 0.05476190476190477, ["add     bucket, 10h", "cmp     [table+8], bucket", "ja      short loc_C690"], ["add~bucket,0", "cmp~[table+0],bucket", "ja~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 4, 4, 0.03571428571428572, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 4, 0, 0, 3, 1, 1, 2, 1, 0.1619047619047619, ["mov     rdi, [table+48h]; ptr", "test    cursor, cursor", "jz      short loc_C6E1"], ["mov~rdi,[table+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 4, 1, 0.004761904761904762, ["mov     rbx, [cursor+8]", "call    free", "test    next, next", "mov     rdi, next", "jnz     short loc_C6D0"], ["mov~rbx,[cursor+0]", "call~FOO", "test~next,next", "mov~rdi,next", "jnz~FOO"]], [0, 0, 9, 0, 1, 5, 1, 2, 5, 3, 0.01666666666666667, ["mov     rbx, [cursor+8]", "call    free", "test    next, next", "mov     rdi, next", "jnz     short loc_C6A0"], ["mov~rbx,[cursor+0]", "call~FOO", "test~next,next", "mov~rdi,next", "jnz~FOO"]], [0, 0, 19, 0, 0, 2, 0, 0, 2, 2, 0.04404761904761905, ["cmp     bucket, rax", "jnb     short loc_C6BC"], ["cmp~bucket,rax", "jnb~FOO"]], [0, 0, 18, 0, 0, 1, 0, 0, 3, 6, 0.0642857142857143, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 3, 0, 0, 1, 0, 0, 3, 2, 0.04285714285714286, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 18, 0, 0, 3, 1, 1, 4, 5, 0.11904761904761905, ["mov     rdi, [bucket+0]", "test    rdi, rdi", "jz      short loc_C676"], ["mov~rdi,[bucket+0]", "test~rdi,rdi", "jz~FOO"]], [1, 0, 18, 1, 0, 3, 0, 1, 5, 4, 0.2142857142857143, ["add     bucket, 10h", "cmp     rax, bucket", "ja      short loc_C648"], ["add~bucket,0", "cmp~rax,bucket", "ja~FOO"]], [0, 0, 18, 0, 0, 2, 0, 1, 5, 7, 0.04761904761904762, ["mov     rbx, bucket", "jmp     short loc_C663"], ["mov~rbx,bucket", "jmp~FOO"]], [0, 0, 18, 0, 0, 1, 0, 0, 7, 7, 0.0, ["mov     rdi, [cursor]"], ["mov~rdi,<TAG>"]], [0, 0, 18, 0, 1, 4, 1, 2, 6, 6, 0.10714285714285715, ["call    qword ptr [table+40h]", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_C660"], ["call~[word ptr [table+0]", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 18, 0, 0, 1, 0, 0, 7, 5, 0.10476190476190478, ["mov     rax, [table+8]"], ["mov~rax,[table+0]"]]], "func_feature": [4, 6, 16, 0, 22, 33, 1, 59, 0.07976, 0, 2], "succs": [[10, 4], [0, 2], [0, 13], [0], [7], [], [5], [8, 9], [10, 7], [12], [6, 15], [11, 6], [8, 12], [10, 14], [16], [11], [17, 18], [16, 3], [20], [20], [19, 21], [17]], "fname": "hash_free", "n_num": 22}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 3, 0, 0, 1, 1, 0, 0, 0, 0.07065217391304347, ["xor     ebx, ebx"], ["xor~ebx,ebx"]], [0, 0, 20, 0, 0, 3, 0, 0, 3, 10, 0.1141304347826087, ["divss   xmm0, dword ptr [r12+8]", "ucomiss xmm0, cs:dword_152AC", "jnb     loc_C880"], ["divss~xmm0,[word ptr [r12+0]", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [1, 0, 14, 0, 0, 5, 2, 1, 2, 6, 0.2246376811594203, ["test    rax, rax", "mov     eax, 1", "cmovs   rcx, rax", "test    rbx, rbx", "jz      loc_C880"], ["test~rax,rax", "mov~eax,0", "cmovs~rcx,rax", "test~rbx,rbx", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 1, 1, 3, 5, 0.1793478260869565, ["and     ecx, 1", "jnz     loc_C880"], ["and~ecx,0", "jnz~FOO"]], [1, 0, 10, 0, 1, 6, 1, 2, 5, 3, 0.1431159420289855, ["mov     esi, 10h; size", "mov     rdi, rbx; nmemb", "call    _calloc", "test    rax, rax", "mov     [new_table+78h+storage.bucket], rax", "jz      loc_C880"], ["mov~esi,0", "mov~rdi,rbx", "call~FOO", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [1, 0, 16, 1, 1, 8, 1, 1, 1, 7, 0.2028985507246377, ["mov     table, rsi; candidate", "call    next_prime", "mov     edx, 8", "mov     rbx, rax", "xor     ecx, ecx", "mov     rax, rdx", "mul     rbx", "jo      loc_C92F"], ["mov~table,rsi", "call~FOO", "mov~edx,0", "mov~rbx,rax", "xor~ecx,ecx", "mov~rax,rdx", "mul~,rbx", "jo~FOO"]], [2, 0, 24, 1, 0, 11, 1, 1, 0, 8, 0.0, ["push    r12", "push    rbp", "mov     rbp, table", "push    rbx", "sub     rsp, 60h", "mov     r12, [table+28h]", "mov     rax, fs:28h", "mov     [rsp+78h+var_20], rax", "xor     eax, eax", "cmp     byte ptr [r12+10h], 0", "jnz     short loc_C778"], ["push~r12", "push~rbp", "mov~rbp,table", "push~rbx", "sub~rsp,0", "mov~r12,[table+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~[yte ptr [r12+0],0", "jnz~FOO"]], [0, 0, 17, 0, 0, 2, 0, 1, 5, 8, 0.0625, ["cvttss2si rsi, xmm0", "jmp     loc_C778"], ["cvttss2si~rsi,xmm0", "jmp~FOO"]], [1, 0, 17, 0, 0, 5, 1, 0, 5, 8, 0.0625, ["subss   xmm0, cs:dword_152B0", "mov     rax, 8000000000000000h", "cvttss2si rsi, xmm0", "xor     rsi, rax", "nop     dword ptr [rax+00h]"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rsi,xmm0", "xor~rsi,rax", "nop~[word ptr [rax+0]"]], [0, 0, 2, 0, 0, 4, 1, 1, 4, -1, 0.07608695652173914, ["mov     rcx, [rsp+78h+var_20]", "xor     rcx, fs:28h", "mov     eax, ebx", "jnz     loc_C92A"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 9, -1, 0.010869565217391304, ["mov     rdi, [new_table+78h+storage.bucket]; ptr", "call    free", "jmp     short loc_C882"], ["mov~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 5, -1, 0.005434782608695652, ["mov     ebx, 1", "jmp     short loc_C882"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 3, 0, 1, 13, 0, 2, 7, -1, 0.005434782608695652, ["mov     rdi, [table+0]; ptr", "call    free", "mov     rax, [new_table+78h+storage.bucket]", "mov     [table+0], rax", "mov     rax, [new_table+78h+storage.bucket_limit]", "mov     [table+8], rax", "mov     rax, [new_table+78h+storage.n_buckets]", "mov     [table+10h], rax", "mov     rax, [new_table+78h+storage.n_buckets_used]", "mov     [table+18h], rax", "mov     rax, [new_table+78h+storage.free_entry_list]", "mov     [table+48h], rax", "jmp     loc_C882"], ["mov~rdi,[table+0]", "call~FOO", "mov~rax,<TAG>", "mov~[table+0],rax", "mov~rax,[new_table+0]", "mov~[table+0],rax", "mov~rax,[new_table+0]", "mov~[table+0],rax", "mov~rax,[new_table+0]", "mov~[table+0],rax", "mov~rax,[new_table+0]", "mov~[table+0],rax", "jmp~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 2, 7, 0.0, ["mov     ecx, 1", "jmp     loc_C796"], ["mov~ecx,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 5, -1, 0.0, ["add     rsp, 60h", "pop     rbx", "pop     table", "pop     r12", "retn"], ["add~rsp,0", "pop~rbx", "pop~table", "pop~r12", "retn"]], [0, 0, 23, 0, 0, 2, 1, 1, 1, 12, 0.010869565217391304, ["test    candidate, candidate", "js      loc_C8A8"], ["test~candidate,candidate", "js~FOO"]], [0, 0, 21, 0, 0, 2, 0, 0, 2, 11, 0.022644927536231884, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, candidate"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,candidate"]], [3, 0, 8, 2, 1, 23, 2, 2, 6, 2, 0.12681159420289856, ["mov     [new_table+78h+storage.n_buckets], rbx", "shl     rbx, 4", "mov     [new_table+78h+storage.tuning], r12", "add     rbx, rax", "mov     rax, [table+30h]", "mov     r12, new_table", "xor     edx, edx; safe", "mov     rsi, table; src", "mov     rdi, r12; dst", "mov     [new_table+78h+storage.bucket_limit], rbx", "mov     [new_table+78h+storage.n_buckets_used], 0", "mov     [new_table+78h+storage.hasher], rax", "mov     rax, [table+38h]", "mov     [new_table+78h+storage.n_entries], 0", "mov     [new_table+78h+storage.comparator], rax", "mov     rax, [table+40h]", "mov     [new_table+78h+storage.data_freer], rax", "mov     rax, [table+48h]", "mov     [new_table+78h+storage.free_entry_list], rax", "call    transfer_entries", "test    al, al", "mov     ebx, eax", "jnz     loc_C8F0"], ["mov~[new_table+0],rbx", "shl~rbx,0", "mov~[new_table+0],r12", "add~rbx,rax", "mov~rax,[table+0]", "mov~r12,new_table", "xor~edx,edx", "mov~rsi,table", "mov~rdi,r12", "mov~[new_table+0],rbx", "mov~[new_table+0],0", "mov~[new_table+0],rax", "mov~rax,[table+0]", "mov~[new_table+0],0", "mov~[new_table+0],rax", "mov~rax,[table+0]", "mov~[new_table+0],rax", "mov~rax,[table+0]", "mov~[new_table+0],rax", "call~FOO", "test~al,al", "mov~ebx,eax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 0, 21, 0, 0, 8, 2, 1, 2, 11, 0.022644927536231884, ["mov     rax, candidate", "pxor    xmm0, xmm0", "shr     rax, 1", "and     esi, 1", "or      rax, rsi", "cvtsi2ss xmm0, rax", "addss   xmm0, xmm0", "jmp     loc_C739"], ["mov~rax,candidate", "pxor~xmm0,xmm0", "shr~rax,0", "and~esi,0", "or~rax,rsi", "cvtsi2ss~xmm0,rax", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 4, 4, 0.17391304347826086, ["cmp     [table+10h], rbx", "jz      loc_C8E0"], ["cmp~[table+0],rbx", "jz~FOO"]], [0, 0, 19, 0, 0, 2, 0, 0, 4, 9, 0.11231884057971014, ["ucomiss xmm0, cs:dword_152B0", "jb      loc_C8D0"], ["ucomiss~xmm0,<TAG>", "jb~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 6, 0, 1, 8, 1, 2, 7, 1, 0.08152173913043478, ["mov     rax, [new_table+78h+storage.free_entry_list]", "mov     edx, 1; safe", "mov     rsi, r12; src", "mov     rdi, table; dst", "mov     [table+48h], rax", "call    transfer_entries", "test    al, al", "jz      loc_C939"], ["mov~rax,[new_table+0]", "mov~edx,0", "mov~rsi,r12", "mov~rdi,table", "mov~[table+0],rax", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 5, 0, 1, 6, 2, 2, 8, 1, 0.034420289855072464, ["xor     edx, edx; safe", "mov     rsi, r12; src", "mov     rdi, table; dst", "call    transfer_entries", "test    al, al", "jz      loc_C939"], ["xor~edx,edx", "mov~rsi,r12", "mov~rdi,table", "call~FOO", "test~al,al", "jz~FOO"]]], "func_feature": [9, 17, 25, 1, 25, 35, 2, 127, 0.06971, 3, 5], "succs": [[9], [0, 21], [0, 3], [0, 20], [0, 17], [2, 13], [5, 15], [5], [5], [18, 14], [9], [9], [9], [2], [], [16, 19], [1], [12, 23], [], [1], [11, 4], [8, 7], [], [24, 22], [10, 22]], "fname": "hash_rehash", "n_num": 25}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 7, 0, 0, 3, 1, 1, 0, 0, 0.06890756302521009, ["mov     rax, [table+48h]", "test    rax, rax", "jz      loc_CB40"], ["mov~rax,[table+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 9, 0, 0, 3, 0, 1, 6, 3, 0.13949579831932774, ["mov     r12, [rsp+38h+bucket]", "cmp     qword ptr [r12], 0", "jz      loc_CB28"], ["mov~r12,<TAG>", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 12, 0, 1, 4, 1, 2, 15, 3, 0.07478991596638655, ["mov     rdi, table; table", "call    hash_rehash", "test    al, al", "jz      short loc_CB53"], ["mov~rdi,table", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 13, 0, 0, 5, 1, 1, 14, 4, 0.03529411764705882, ["subss   xmm0, cs:dword_152B0", "mov     rax, 8000000000000000h", "cvttss2si rsi, xmm0", "xor     rsi, rax", "jmp     loc_CAF8"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rsi,xmm0", "xor~rsi,rax", "jmp~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 14, 4, 0.03529411764705882, ["cvttss2si rsi, xmm0; candidate"], ["cvttss2si~rsi,xmm0"]], [0, 0, 4, 0, 0, 3, 2, 1, 2, 2, 0.0067226890756302525, ["xor     eax, eax", "test    matched_ent, matched_ent", "jz      short loc_C98C"], ["xor~eax,eax", "test~matched_ent,matched_ent", "jz~FOO"]], [0, 0, 34, 0, 1, 10, 2, 2, 1, 3, 0.027731092436974792, ["mov     r12, rsp", "xor     ecx, ecx; delete", "mov     r13, matched_ent", "mov     matched_ent, r12; bucket_head", "mov     rbx, table", "mov     rbp, entry", "call    hash_find_entry", "test    rax, rax", "mov     rdx, rax", "jz      short loc_C9B0"], ["mov~r12,rsp", "xor~ecx,ecx", "mov~r13,matched_ent", "mov~matched_ent,r12", "mov~rbx,table", "mov~rbp,entry", "call~FOO", "test~rax,rax", "mov~rdx,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 3, 2, 0.0, ["mov     [matched_ent+0], data"], ["mov~[matched_ent+0],data"]], [0, 0, 4, 0, 0, 2, 0, 0, 8, 3, 0.011344537815126052, ["mov     rdx, [rax+8]", "mov     [table+48h], rdx"], ["mov~rdx,[rax+0]", "mov~[table+0],rdx"]], [1, 0, 18, 0, 0, 3, 0, 1, 11, 4, 0.10588235294117648, ["cmp     byte ptr [tuning+10h], 0", "mulss   xmm0, dword ptr [tuning+0Ch]", "jnz     short loc_CADD"], ["cmp~[yte ptr [tuning+0],0", "mulss~xmm0,[word ptr [tuning+0]", "jnz~FOO"]], [0, 0, 19, 0, 0, 4, 0, 0, 10, 4, 0.15546218487394958, ["movaps  xmm3, xmm2", "mulss   xmm3, xmm0", "ucomiss xmm1, xmm3", "jbe     loc_C9EA"], ["movaps~xmm3,xmm2", "mulss~xmm3,xmm0", "ucomiss~xmm1,xmm3", "jbe~FOO"]], [0, 0, 16, 0, 0, 2, 0, 0, 12, 3, 0.10756302521008404, ["ucomiss xmm0, cs:dword_152AC", "jnb     short loc_CB53"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 17, 0, 0, 1, 0, 0, 12, 4, 0.0, ["mulss   xmm0, xmm2"], ["mulss~xmm0,xmm2"]], [0, 0, 11, 0, 1, 7, 2, 2, 16, 4, 0.05294117647058824, ["xor     ecx, ecx; delete", "mov     rdx, r12; bucket_head", "mov     rsi, entry; entry", "mov     rdi, table; table", "call    hash_find_entry", "test    rax, rax", "jz      loc_C9EA"], ["xor~ecx,ecx", "mov~rdx,r12", "mov~rsi,entry", "mov~rdi,table", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 25, 0, 1, 7, 1, 2, 6, 8, 0.1, ["lea     rdi, [table+28h]; table", "call    check_tuning", "mov     rax, [table+10h]", "mov     rdx, [table+28h]", "test    rax, rax", "movss   xmm2, dword ptr [rdx+8]", "js      loc_CB60"], ["lea~rdi,[table+0]", "call~FOO", "mov~rax,[table+0]", "mov~rdx,[table+0]", "test~rax,rax", "movss~xmm2,[word ptr [rdx+0]", "js~FOO"]], [0, 0, 26, 0, 0, 3, 0, 1, 5, 4, 0.14705882352941177, ["mulss   xmm0, dword ptr [rdx+8]", "ucomiss xmm1, xmm0", "ja      loc_CA80"], ["mulss~xmm0,[word ptr [rdx+0]", "ucomiss~xmm1,xmm0", "ja~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 3, 1, 0.05378151260504202, ["mov     rcx, [rsp+38h+var_30]", "xor     rcx, fs:28h", "jnz     loc_CBBF"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [2, 0, 3, 1, 0, 7, 0, 1, 9, 2, 0.00546218487394958, ["mov     rdx, [r12+8]", "mov     [rax], entry", "mov     [rax+8], rdx", "mov     [r12+8], rax", "mov     eax, 1", "add     qword ptr [table+20h], 1", "jmp     loc_C98C"], ["mov~rdx,[r12+0]", "mov~<TAG>,entry", "mov~[rax+0],rdx", "mov~[r12+0],rax", "mov~eax,0", "add~[word ptr [table+0],0", "jmp~FOO"]], [3, 0, 3, 2, 0, 5, 0, 1, 7, 2, 0.03781512605042017, ["mov     [r12], entry", "mov     eax, 1", "add     qword ptr [table+20h], 1", "add     qword ptr [table+18h], 1", "jmp     loc_C98C"], ["mov~<TAG>,entry", "mov~eax,0", "add~[word ptr [table+0],0", "add~[word ptr [table+0],0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 9, 2, 0.019747899159663868, ["mov     eax, 0FFFFFFFFh", "jmp     loc_C98C"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 35, 1, 0, 10, 2, 1, 0, 4, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+38h+var_30], rax", "xor     eax, eax", "test    entry, entry", "jz      loc_CB1D"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~entry,entry", "jz~FOO"]], [0, 0, 23, 0, 0, 2, 0, 0, 7, 7, 0.05294117647058824, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [1, 0, 5, 0, 1, 4, 1, 2, 8, 3, 0.02142857142857143, ["mov     edi, 10h; size", "call    _malloc", "test    rax, rax", "jnz     loc_CA0E"], ["mov~edi,0", "call~FOO", "test~rax,rax", "jnz~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 4, -1, 0.0, ["add     rsp, 18h", "pop     table", "pop     entry", "pop     r12", "pop     matched_ent", "retn"], ["add~rsp,0", "pop~table", "pop~entry", "pop~r12", "pop~matched_ent", "retn"]], [0, 0, 22, 0, 0, 3, 1, 1, 8, 6, 0.13529411764705884, ["mov     rax, [table+18h]", "test    rax, rax", "js      loc_CB80"], ["mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [2, 0, 23, 0, 0, 8, 2, 1, 7, 7, 0.05294117647058824, ["mov     rcx, rax", "pxor    xmm0, xmm0", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm0, rcx", "addss   xmm0, xmm0", "jmp     loc_CAA8"], ["mov~rcx,rax", "pxor~xmm0,xmm0", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm0,rcx", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 31, 0, 0, 3, 1, 1, 2, 7, 0.046218487394957986, ["mov     data, [table+18h]", "test    rax, rax", "js      short loc_CA30"], ["mov~data,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 20, 0, 0, 2, 0, 0, 9, 5, 0.06680672268907563, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [0, 0, 15, 0, 0, 2, 0, 0, 13, 5, 0.08991596638655462, ["ucomiss xmm0, cs:dword_152B0", "jnb     loc_CBA0"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 0, 20, 0, 0, 8, 2, 1, 9, 5, 0.06680672268907563, ["mov     rcx, rax", "pxor    xmm1, xmm1", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_CABE"], ["mov~rcx,rax", "pxor~xmm1,xmm1", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 29, 0, 0, 6, 1, 1, 3, 6, 0.033613445378151266, ["pxor    xmm1, xmm1", "mov     data, [table+28h]", "cvtsi2ss xmm1, rax", "mov     rax, [table+10h]", "test    rax, rax", "js      loc_CA5A"], ["pxor~xmm1,xmm1", "mov~data,[table+0]", "cvtsi2ss~xmm1,rax", "mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [2, 0, 29, 0, 0, 11, 3, 0, 3, 6, 0.033613445378151266, ["mov     data, rax", "pxor    xmm1, xmm1", "and     eax, 1", "shr     rdx, 1", "or      rdx, rax", "mov     rax, [table+10h]", "cvtsi2ss xmm1, rdx", "mov     rdx, [table+28h]", "test    rax, rax", "addss   xmm1, xmm1", "jns     loc_C9D3"], ["mov~data,rax", "pxor~xmm1,xmm1", "and~eax,0", "shr~rdx,0", "or~rdx,rax", "mov~rax,[table+0]", "cvtsi2ss~xmm1,rdx", "mov~rdx,[table+0]", "test~rax,rax", "addss~xmm1,xmm1", "jns~FOO"]], [0, 0, 27, 0, 0, 2, 0, 0, 4, 5, 0.05378151260504202, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [2, 0, 27, 0, 0, 8, 2, 1, 4, 5, 0.05378151260504202, ["mov     rcx, rax", "pxor    xmm0, xmm0", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm0, rcx", "addss   xmm0, xmm0", "jmp     loc_C9DC"], ["mov~rcx,rax", "pxor~xmm0,xmm0", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm0,rcx", "addss~xmm0,xmm0", "jmp~FOO"]]], "func_feature": [7, 26, 29, 1, 36, 52, 1, 153, 0.05257, 3, 5], "succs": [[8, 23], [0, 18], [19, 13], [2], [2], [16, 7], [27, 5], [16], [17], [11, 12], [9, 1], [19, 29], [11], [1, 20], [26, 22], [1, 14], [24, 30], [16], [16], [16], [], [20, 6], [25], [17, 19], [], [28, 31], [25], [32, 33], [10], [3, 4], [], [10], [34, 35], [34, 35], [15], [15]], "fname": "hash_insert_if_absent", "n_num": 36}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 3, 0, 0, 2, 1, 1, 0, 0, 0.05, ["xor     ebx, ebx", "jmp     short loc_CBFD"], ["xor~ebx,ebx", "jmp~FOO"]], [2, 0, 6, 1, 1, 10, 1, 2, 0, 3, 0.0, ["push    rbx", "mov     rbx, entry", "sub     rsp, 10h", "mov     rdx, rsp; matched_ent", "mov     rax, fs:28h", "mov     [rsp+18h+var_10], rax", "xor     eax, eax", "call    hash_insert_if_absent", "cmp     eax, 0FFFFFFFFh", "jz      short loc_CC20"], ["push~rbx", "mov~rbx,entry", "sub~rsp,0", "mov~rdx,rsp", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "cmp~eax,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.26666666666666666, ["mov     rcx, [rsp+18h+var_10]", "xor     rcx, fs:28h", "mov     err, rbx", "jnz     short loc_CC24"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~err,rbx", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 1, 2, 0.08333333333333333, ["test    eax, eax", "jnz     short loc_CBFD"], ["test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 2, 2, 0.0, ["mov     entry, [rsp+18h+matched_ent]"], ["mov~entry,<TAG>"]], [1, 0, 0, 1, 0, 3, 0, 0, 3, -1, 0.0, ["add     rsp, 10h", "pop     rbx", "retn"], ["add~rsp,0", "pop~rbx", "retn"]]], "func_feature": [2, 4, 6, 1, 7, 8, 3, 23, 0.05714, 1, 2], "succs": [[3], [0, 4], [], [2, 6], [3, 5], [3], []], "fname": "hash_insert", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.06878306878306878, ["mov     rcx, [rsp+28h+var_20]", "xor     rcx, fs:28h", "mov     rax, data", "jnz     loc_CE2E"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,data", "jnz~FOO"]], [2, 0, 28, 1, 1, 14, 2, 2, 0, 2, 0.0, ["push    r12", "push    rbp", "mov     ecx, 1; delete", "push    rbx", "mov     rbx, table", "sub     rsp, 10h", "mov     rdx, rsp; bucket_head", "mov     rax, fs:28h", "mov     [rsp+28h+var_20], rax", "xor     eax, eax", "call    hash_find_entry", "test    rax, rax", "mov     rbp, rax", "jz      short loc_CC6F"], ["push~r12", "push~rbp", "mov~ecx,0", "push~rbx", "mov~rbx,table", "sub~rsp,0", "mov~rdx,rsp", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [0, 0, 20, 0, 0, 3, 0, 0, 6, 2, 0.2037037037037037, ["mulss   xmm1, dword ptr [rdx]", "ucomiss xmm1, xmm0", "jbe     short loc_CC6F"], ["mulss~xmm1,<TAG>", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [0, 0, 13, 0, 0, 4, 0, 0, 11, 2, 0.2222222222222222, ["movss   xmm2, dword ptr [rdx]", "mulss   xmm2, xmm0", "ucomiss xmm2, xmm1", "jbe     loc_CC6F"], ["movss~xmm2,<TAG>", "mulss~xmm2,xmm0", "ucomiss~xmm2,xmm1", "jbe~FOO"]], [0, 0, 7, 0, 1, 4, 1, 2, 15, 2, 0.13095238095238093, ["mov     rdi, table; table", "call    hash_rehash", "test    al, al", "jnz     loc_CC6F"], ["mov~rdi,table", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 17, 2, 0.011904761904761904, ["mov     qword ptr [table+48h], 0", "jmp     loc_CC6F"], ["mov~[word ptr [table+0],0", "jmp~FOO"]], [2, 0, 27, 1, 0, 4, 0, 1, 1, 2, 0.031746031746031744, ["mov     data, [rsp+28h+bucket]", "sub     qword ptr [table+20h], 1", "cmp     qword ptr [rax], 0", "jz      short loc_CC90"], ["mov~data,<TAG>", "sub~[word ptr [table+0],0", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 0, 10, 3, 0.1025132275132275, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [0, 0, 16, 0, 0, 3, 1, 1, 9, 4, 0.21825396825396826, ["mov     rax, [table+18h]", "test    rax, rax", "js      loc_CDF0"], ["mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [2, 0, 14, 0, 0, 8, 2, 1, 10, 3, 0.1025132275132275, ["mov     rcx, rax", "pxor    xmm1, xmm1", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_CD0A"], ["mov~rcx,rax", "pxor~xmm1,xmm1", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 2, -1, 0.0, ["add     rsp, 10h", "pop     table", "pop     rbp", "pop     r12", "retn"], ["add~rsp,0", "pop~table", "pop~rbp", "pop~r12", "retn"]], [2, 0, 21, 0, 0, 8, 2, 1, 5, 3, 0.07936507936507936, ["mov     rcx, rax", "pxor    xmm1, xmm1", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_CCC8"], ["mov~rcx,rax", "pxor~xmm1,xmm1", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 23, 0, 0, 4, 1, 1, 4, 4, 0.14417989417989419, ["mov     rax, [table+10h]", "mov     rdx, [table+28h]", "test    rax, rax", "js      loc_CD80"], ["mov~rax,[table+0]", "mov~rdx,[table+0]", "test~rax,rax", "js~FOO"]], [1, 0, 26, 1, 0, 5, 1, 1, 2, 6, 0.06084656084656084, ["mov     rax, [table+18h]", "sub     rax, 1", "test    rax, rax", "mov     [table+18h], rax", "js      loc_CDA0"], ["mov~rax,[table+0]", "sub~rax,0", "test~rax,rax", "mov~[table+0],rax", "js~FOO"]], [1, 0, 12, 0, 0, 3, 0, 1, 12, 5, 0.19047619047619047, ["cmp     byte ptr [tuning+10h], 0", "mulss   xmm0, dword ptr [tuning+4]", "jz      loc_CDE0"], ["cmp~[yte ptr [tuning+0],0", "mulss~xmm0,[word ptr [tuning+0]", "jz~FOO"]], [0, 0, 24, 0, 0, 2, 0, 0, 3, 5, 0.04365079365079365, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 10, 0, 0, 2, 0, 0, 13, 4, 0.1746031746031746, ["ucomiss xmm0, cs:dword_152B0", "jnb     loc_CDC0"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 13, 5, 0.0, ["mulss   xmm0, dword ptr [tuning+8]", "jmp     loc_CD2A"], ["mulss~xmm0,[word ptr [tuning+0]", "jmp~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 14, 3, 0.06878306878306878, ["cvttss2si rsi, xmm0; candidate"], ["cvttss2si~rsi,xmm0"]], [2, 0, 24, 0, 0, 8, 2, 1, 3, 5, 0.04365079365079365, ["mov     rdx, rax", "pxor    xmm0, xmm0", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0", "jmp     loc_CCAE"], ["mov~rdx,rax", "pxor~xmm0,xmm0", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 21, 0, 0, 2, 0, 0, 5, 3, 0.07936507936507936, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [1, 0, 8, 0, 0, 5, 1, 1, 14, 3, 0.06878306878306878, ["subss   xmm0, cs:dword_152B0", "mov     rax, 8000000000000000h", "cvttss2si rsi, xmm0", "xor     rsi, rax", "jmp     loc_CD3C"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rsi,xmm0", "xor~rsi,rax", "jmp~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 16, 3, 0.0873015873015873, ["mov     rdi, [table+48h]; ptr", "test    cursor, cursor", "jz      short loc_CD69"], ["mov~rdi,[table+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 17, 4, 0.03042328042328042, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [0, 0, 19, 0, 1, 6, 1, 2, 7, 6, 0.19047619047619047, ["lea     rdi, [table+28h]; table", "call    check_tuning", "mov     rax, [table+10h]", "mov     rdx, [table+28h]", "test    rax, rax", "js      loc_CE10"], ["lea~rdi,[table+0]", "call~FOO", "mov~rax,[table+0]", "mov~rdx,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 18, 3, 0.005291005291005291, ["mov     r12, [cursor+8]", "call    free", "test    next, next", "mov     rdi, next", "jnz     short loc_CD58"], ["mov~r12,[cursor+0]", "call~FOO", "test~next,next", "mov~rdi,next", "jnz~FOO"]], [0, 0, 17, 0, 0, 2, 0, 0, 8, 5, 0.09457671957671956, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [2, 0, 17, 0, 0, 8, 2, 1, 8, 5, 0.09457671957671956, ["mov     rcx, rax", "pxor    xmm0, xmm0", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm0, rcx", "addss   xmm0, xmm0", "jmp     loc_CCF4"], ["mov~rcx,rax", "pxor~xmm0,xmm0", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm0,rcx", "addss~xmm0,xmm0", "jmp~FOO"]]], "func_feature": [5, 19, 23, 1, 29, 41, 1, 121, 0.08789, 2, 4], "succs": [[16, 10], [0, 6], [0, 25], [0, 14], [0, 23], [0], [0, 13], [3], [9, 7], [3], [], [2], [11, 21], [20, 15], [17, 18], [12], [], [19, 22], [17], [4], [12], [2], [4], [24, 5], [26], [27, 28], [26, 5], [8], [8]], "fname": "hash_delete", "n_num": 29}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[2, 0, 0, 3, 1, 15, 2, 1, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, p", "mov     rbx, table_size", "sub     rsp, 8", "mov     p, [p]; x", "call    hash_pjw", "xor     tmp, [p+8]", "xor     edx, edx", "add     rsp, 8", "div     table_size", "pop     table_size", "pop     p", "mov     rax, rdx", "retn"], ["push~rbp", "push~rbx", "mov~rbp,p", "mov~rbx,table_size", "sub~rsp,0", "mov~p,<TAG>", "call~FOO", "xor~tmp,[p+0]", "xor~edx,edx", "add~rsp,0", "div~,table_size", "pop~table_size", "pop~p", "mov~rax,rdx", "retn"]]], "func_feature": [1, 2, 1, 0, 1, 0, 0, 15, 0.0, 0, 3], "succs": [[]], "fname": "triple_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 1, 0, 5, 1, 0, 0, 0, 0.0, ["mov     rax, [p+8]", "xor     edx, edx", "div     table_size", "mov     rax, rdx", "retn"], ["mov~rax,[p+0]", "xor~edx,edx", "div~,table_size", "mov~rax,rdx", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 0, 1], "succs": [[]], "fname": "triple_hash_no_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 2, 0, 0, 3, 0, 1, 0, 0, 0.16666666666666666, ["mov     rcx, [b+10h]", "cmp     [a+10h], rcx", "jnz     short locret_CE8C"], ["mov~rcx,[b+0]", "cmp~[a+0],rcx", "jnz~FOO"]], [0, 0, 3, 0, 0, 4, 1, 1, 0, 2, 0.0, ["xor     eax, eax", "mov     rdx, [b+8]", "cmp     [a+8], rdx", "jz      short loc_CE90"], ["xor~eax,eax", "mov~rdx,[b+0]", "cmp~[a+0],rdx", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn"], ["retn"]], [2, 0, 0, 2, 1, 6, 0, 1, 2, 0, 0.0, ["sub     rsp, 8", "mov     b, [b]; dest", "mov     a, [a]; source", "call    same_name", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 1, 3, 0, 4, 4, 0, 14, 0.04167, 0, 2], "succs": [[2, 3], [0, 2], [], []], "fname": "triple_compare", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 2, 0, 0, 3, 0, 1, 0, 0, 0.16666666666666666, ["mov     rcx, [b+10h]", "cmp     [a+10h], rcx", "jnz     short locret_CEBC"], ["mov~rcx,[b+0]", "cmp~[a+0],rcx", "jnz~FOO"]], [0, 0, 3, 0, 0, 4, 1, 1, 0, 2, 0.0, ["xor     eax, eax", "mov     rdx, [b+8]", "cmp     [a+8], rdx", "jz      short loc_CEC0"], ["xor~eax,eax", "mov~rdx,[b+0]", "cmp~[a+0],rdx", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn"], ["retn"]], [2, 0, 0, 2, 1, 8, 1, 1, 2, 0, 0.0, ["sub     rsp, 8", "mov     b, [b]; s2", "mov     a, [a]; s1", "call    _strcmp", "test    eax, eax", "setz    al", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "test~eax,eax", "setz~al", "add~rsp,0", "retn"]]], "func_feature": [1, 2, 3, 0, 4, 4, 0, 16, 0.04167, 0, 2], "succs": [[2, 3], [0, 2], [], []], "fname": "triple_compare_ino_str", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 1, 0, 1, 7, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, a", "mov     a, [a]; ptr", "call    free", "mov     rdi, a; ptr", "pop     a", "jmp     free"], ["push~rbx", "mov~rbx,a", "mov~a,<TAG>", "call~FOO", "mov~rdi,a", "pop~a", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 0, 2, 0, 2, 1, 1, 7, 0.0, 0, 0], "succs": [[1], []], "fname": "triple_free", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 0, 1, 0, 8, 0, 0, 0, 0, 0.0, ["mov     [pnew_fd], ebx", "add     rsp, 8", "mov     dirp, rbp", "pop     new_fd", "pop     rbp", "pop     pnew_fd", "pop     r13", "retn"], ["mov~<TAG>,ebx", "add~rsp,0", "mov~dirp,rbp", "pop~new_fd", "pop~rbp", "pop~pnew_fd", "pop~r13", "retn"]], [0, 0, 2, 0, 1, 6, 1, 2, 1, -1, 0.16666666666666666, ["mov     edi, eax; fd", "mov     ebx, eax", "call    _fdopendir", "test    rax, rax", "mov     rbp, rax", "jz      short loc_CF58"], ["mov~edi,eax", "mov~ebx,eax", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [1, 0, 0, 1, 2, 13, 0, 2, 2, -1, 0.0, ["call    ___errno_location", "mov     r13d, [rax]", "mov     pnew_fd, rax", "mov     edi, ebx; fd", "call    _close", "mov     rax, dirp", "mov     [r12], r13d", "add     rsp, 8", "pop     new_fd", "pop     dirp", "pop     r12", "pop     fdopendir_errno", "retn"], ["call~FOO", "mov~r13d,<TAG>", "mov~pnew_fd,rax", "mov~edi,ebx", "call~FOO", "mov~rax,dirp", "mov~<TAG>,r13d", "add~rsp,0", "pop~new_fd", "pop~dirp", "pop~r12", "pop~fdopendir_errno", "retn"]], [2, 0, 4, 1, 1, 11, 3, 2, 0, 1, 0.0, ["push    r13", "push    r12", "or      edx, 90900h; flags", "push    rbp", "push    rbx", "xor     eax, eax", "mov     r12, pnew_fd", "sub     rsp, 8", "call    openat_safer", "test    eax, eax", "js      short loc_CF80"], ["push~r13", "push~r12", "or~edx,0", "push~rbp", "push~rbx", "xor~eax,eax", "mov~r12,pnew_fd", "sub~rsp,0", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 0, 1, 0, 8, 1, 0, 1, 0, 0.0, ["add     rsp, 8", "xor     ebp, ebp", "pop     rbx", "mov     new_fd, rbp", "pop     rbp", "pop     pnew_fd", "pop     r13", "retn"], ["add~rsp,0", "xor~ebp,ebp", "pop~rbx", "mov~new_fd,rbp", "pop~rbp", "pop~pnew_fd", "pop~r13", "retn"]]], "func_feature": [4, 5, 6, 0, 5, 4, 1, 46, 0.03333, 0, 4], "succs": [[], [0, 2], [], [1, 4], []], "fname": "opendirat", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 4, 1, 0, 5, 0, 1, 0, 0, 0.14285714285714285, ["lea     r8, [slash+1]", "mov     rdx, base", "sub     rdx, argv0", "cmp     rdx, 6", "jle     short loc_CFFD"], ["lea~r8,[slash+0]", "mov~rdx,base", "sub~rdx,argv0", "cmp~rdx,0", "jle~FOO"]], [1, 0, 5, 0, 1, 5, 1, 2, 1, -1, 0.11904761904761904, ["mov     esi, 2Fh ; '/'; c", "mov     rbx, argv0", "call    _strrchr", "test    slash, slash", "jz      short loc_CFFD"], ["mov~esi,0", "mov~rbx,argv0", "call~FOO", "test~slash,slash", "jz~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 0, 1, 0.0, ["test    argv0, argv0", "push    rbx", "jz      short loc_D00D"], ["test~argv0,argv0", "push~rbx", "jz~FOO"]], [2, 0, 0, 0, 2, 6, 0, 2, 1, 0, 0.0, ["mov     rcx, cs:stderr@@GLIBC_2_2_5; s", "lea     argv0, aANullArgv0WasP; \"A NULL argv[0] was passed through an ex\"...", "mov     edx, 37h ; '7'; n", "mov     esi, 1; size", "call    _fwrite", "call    _abort"], ["mov~rcx,<TAG>", "lea~argv0,<TAG>", "mov~edx,0", "mov~esi,0", "call~FOO", "call~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["mov     cs:program_name, argv0", "mov     cs:program_invocation_name@@GLIBC_2_2_5, argv0", "pop     argv0", "retn"], ["mov~<TAG>,argv0", "mov~<TAG>,argv0", "pop~argv0", "retn"]], [2, 0, 3, 0, 0, 8, 1, 1, 3, -1, 0.14285714285714285, ["lea     rsi, [slash-6]", "lea     rdi, aLibs; \"/.libs/\"", "mov     ecx, 7", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     short loc_CFFD"], ["lea~rsi,[slash-6]+0]", "lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "test~dl,dl", "jnz~FOO"]], [2, 0, 2, 0, 0, 9, 1, 1, 4, -1, 0.09523809523809523, ["lea     rdi, aLt; \"lt-\"", "mov     ecx, 3", "mov     rsi, base", "mov     rbx, base", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     short loc_CFFD"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,base", "mov~rbx,base", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "test~dl,dl", "jnz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 5, -1, 0.0, ["lea     rbx, [slash+4]", "mov     cs:__bss_start, argv0"], ["lea~rbx,[slash+0]", "mov~<TAG>,argv0"]]], "func_feature": [3, 4, 8, 0, 8, 11, 1, 42, 0.0625, 7, 1], "succs": [[4, 5], [0, 4], [1, 3], [], [], [4, 6], [4, 7], [4]], "fname": "set_program_name", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 5, 1, 1, 15, 2, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "mov     r12d, ecx", "push    rbx", "mov     rbp, dst_name", "mov     edx, r8d; mode", "sub     rsp, 10h", "lea     rbx, [rsp+28h+ctx]", "mov     rax, fs:28h", "mov     [rsp+28h+var_20], rax", "xor     eax, eax", "mov     dest_desc, rbx; ctx", "call    get_permissions", "test    eax, eax", "jnz     short loc_D098"], ["push~r12", "push~rbp", "mov~r12d,ecx", "push~rbx", "mov~rbp,dst_name", "mov~edx,r8d", "sub~rsp,0", "lea~rbx,[rsp+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~dest_desc,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 0, 1, 0.30000000000000004, ["mov     rcx, [rsp+28h+var_20]", "xor     rcx, fs:28h", "mov     eax, ebp", "jnz     short loc_D09F"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebp", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 0, 2, 0.07500000000000001, ["mov     ebp, 0FFFFFFFEh", "jmp     short loc_D07A"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 3, 0, 2, 7, 0, 2, 0, 2, 0.07500000000000001, ["mov     rsi, dst_name; name", "mov     rdi, rbx; ctx", "mov     edx, r12d; desc", "call    set_permissions", "mov     rdi, rbx; ctx", "mov     ebp, eax", "call    free_permission_context"], ["mov~rsi,dst_name", "mov~rdi,rbx", "mov~edx,r12d", "call~FOO", "mov~rdi,rbx", "mov~ebp,eax", "call~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 0, -1, 0.0, ["add     rsp, 10h", "pop     rbx", "pop     rbp", "pop     dest_desc", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~dest_desc", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [4, 3, 7, 1, 6, 6, 1, 34, 0.075, 1, 2], "succs": [[2, 3], [4, 5], [1], [1], [], []], "fname": "qcopy_acl", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 2, 1, 2, 18, 2, 3, 0, 0, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 18h", "lea     rbx, [rsp+28h+ctx]", "mov     [rsp+28h+ctx.mode], edx", "mov     edx, esi; desc", "mov     desc, name; name", "mov     name, rbx; ctx", "mov     rax, fs:28h", "mov     [rsp+28h+var_20], rax", "xor     eax, eax", "call    set_permissions", "mov     rdi, rbx; ctx", "mov     ebp, eax", "call    free_permission_context", "mov     rcx, [rsp+28h+var_20]", "xor     rcx, fs:28h", "jnz     short loc_D0FF"], ["push~rbp", "push~rbx", "sub~rsp,0", "lea~rbx,[rsp+0]", "mov~[rsp+0],edx", "mov~edx,esi", "mov~desc,name", "mov~name,rbx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~rdi,rbx", "mov~ebp,eax", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 0, -1, 0.0, ["add     rsp, 18h", "mov     eax, ebp", "pop     rbx", "pop     ret", "retn"], ["add~rsp,0", "mov~eax,ebp", "pop~rbx", "pop~ret", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 2, 4, 1, 3, 2, 2, 24, 0.0, 1, 2], "succs": [[1, 2], [], []], "fname": "qset_acl", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 7, 0, 0, 2, 0, 1, 0, 0, 0.075, ["cmp     byte ptr [locale_code+2], 31h ; '1'", "jnz     short loc_D130"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [2, 0, 8, 0, 0, 4, 1, 1, 2, -1, 0.058333333333333334, ["movzx   edx, byte ptr [locale_code+1]", "and     edx, 0FFFFFFDFh", "cmp     dl, 42h ; 'B'", "jnz     short loc_D130"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 3, 3, 0.0375, ["cmp     byte ptr [locale_code+3], 2Dh ; '-'", "jnz     loc_D130"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [2, 0, 5, 0, 0, 4, 1, 1, 2, 4, 0.03333333333333333, ["movzx   edx, byte ptr [locale_code+2]", "and     edx, 0FFFFFFDFh", "cmp     dl, 46h ; 'F'", "jnz     loc_D130"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [2, 0, 0, 1, 0, 8, 0, 0, 6, 0, 0.0, ["cmp     byte ptr [msgid+0], 60h ; '`'", "lea     locale_code, unk_15304", "lea     rdx, unk_15308", "cmovnz  rax, rdx", "add     rsp, 8", "pop     s", "pop     msgid", "retn"], ["cmp~[yte ptr [msgid+0],0", "lea~locale_code,<TAG>", "lea~rdx,<TAG>", "cmovnz~rax,rdx", "add~rsp,0", "pop~s", "pop~msgid", "retn"]], [1, 0, 2, 0, 0, 2, 0, 1, 5, 1, 0.020833333333333332, ["cmp     byte ptr [locale_code+5], 0", "jnz     loc_D130"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 4, -1, 0.08333333333333333, ["cmp     byte ptr [locale_code+3], 38h ; '8'", "jnz     short loc_D130"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [3, 0, 16, 1, 1, 10, 1, 2, 0, 6, 0.0, ["push    rbp", "push    rbx", "mov     rbp, msgid", "mov     ebx, esi", "sub     rsp, 8", "call    locale_charset", "movzx   edx, byte ptr [locale_code]", "and     edx, 0FFFFFFDFh", "cmp     dl, 55h ; 'U'", "jz      short loc_D1A0"], ["push~rbp", "push~rbx", "mov~rbp,msgid", "mov~ebx,esi", "sub~rsp,0", "call~FOO", "movzx~edx,<TAG>", "and~edx,0", "cmp~dl,0", "jz~FOO"]], [2, 0, 6, 0, 0, 4, 1, 1, 1, 5, 0.022916666666666665, ["movzx   edx, byte ptr [locale_code+1]", "and     edx, 0FFFFFFDFh", "cmp     dl, 54h ; 'T'", "jnz     short loc_D130"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [2, 0, 0, 1, 0, 8, 0, 0, 2, -1, 0.0, ["lea     locale_code, unk_15313", "lea     rdx, asc_15315; \"'\"", "cmp     ebx, 9", "cmovnz  rax, rdx", "add     rsp, 8", "pop     s", "pop     msgid", "retn"], ["lea~locale_code,<TAG>", "lea~rdx,<TAG>", "cmp~ebx,0", "cmovnz~rax,rdx", "add~rsp,0", "pop~s", "pop~msgid", "retn"]], [1, 0, 5, 0, 0, 2, 0, 1, 5, -1, 0.08333333333333333, ["cmp     byte ptr [locale_code+4], 30h ; '0'", "jnz     short loc_D130"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 6, -1, 0.075, ["cmp     byte ptr [locale_code+5], 33h ; '3'", "jnz     short loc_D130"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 7, -1, 0.058333333333333334, ["cmp     byte ptr [locale_code+6], 30h ; '0'", "jnz     short loc_D130"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 8, -1, 0.03333333333333333, ["cmp     byte ptr [locale_code+7], 0", "jnz     short loc_D130"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, 2, 0.03333333333333333, ["cmp     byte ptr [locale_code+4], 38h ; '8'", "jnz     loc_D130"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 1, -1, 0.035416666666666666, ["cmp     dl, 47h ; 'G'", "jz      short loc_D150"], ["cmp~dl,0", "jz~FOO"]], [2, 0, 0, 1, 0, 8, 0, 0, 9, -1, 0.0, ["cmp     byte ptr [msgid+0], 60h ; '`'", "lea     locale_code, unk_1530C", "lea     rdx, unk_15310", "cmovnz  rax, rdx", "add     rsp, 8", "pop     s", "pop     msgid", "retn"], ["cmp~[yte ptr [msgid+0],0", "lea~locale_code,<TAG>", "lea~rdx,<TAG>", "cmovnz~rax,rdx", "add~rsp,0", "pop~s", "pop~msgid", "retn"]]], "func_feature": [1, 4, 15, 0, 17, 28, 2, 66, 0.03824, 6, 4], "succs": [[9, 6], [0, 9], [9, 14], [9, 2], [], [9, 4], [9, 10], [8, 15], [9, 3], [], [9, 11], [9, 12], [9, 13], [16, 9], [9, 5], [9, 1], []], "fname": "gettext_quote", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 251, 0, 0, 5, 2, 1, 0, 0, 0.06321923690344744, ["mov     eax, r8d", "mov     rcx, r15", "xor     eax, 1", "and     al, dl", "jz      short loc_D830"], ["mov~eax,r8d", "mov~rcx,r15", "xor~eax,0", "and~al,dl", "jz~FOO"]], [2, 0, 251, 0, 0, 4, 0, 1, 10, -1, 0.06676715097767733, ["cmp     [rsp+0E8h+quoting_style], 2", "setz    dl", "cmp     [rsp+0E8h+c_and_shell_quote_compat], 0", "jnz     loc_E38A"], ["cmp~[rsp+0],0", "setz~dl", "cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 251, 2, 0, 3, 0, 1, 15, -1, 0.08655379708011288, ["add     r15, 1", "add     i, 1", "jmp     loc_D490"], ["add~r15,0", "add~i,0", "jmp~FOO"]], [0, 0, 251, 0, 0, 2, 0, 0, 14, -1, 0.08672555514660778, ["cmp     buffersize_0, r15", "jbe     short loc_D5FB"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 15, -1, 0.0, ["mov     byte ptr [r14+r15], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [1, 0, 0, 1, 0, 8, 0, 0, 11, -1, 0.0, ["add     rsp, 0B8h", "pop     rbx", "pop     argsize_0", "pop     r12", "pop     buffersize_0", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~argsize_0", "pop~r12", "pop~buffersize_0", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 10, -1, 0.006943933259722734, ["mov     rbx, [rsp+0E8h+var_40]", "xor     rbx, fs:28h", "mov     rax, r15", "jnz     loc_E3F3"], ["mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "mov~rax,r15", "jnz~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 10, -1, 0.0334590847748743, ["cmp     [rsp+0E8h+c_and_shell_quote_compat], 0", "jnz     loc_E2B0"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 9, -1, 0.041003148897885824, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 000000000000D3EE case 39", "jz      loc_DA00"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 251, 0, 0, 2, 0, 0, 12, -1, 0.018660287081339714, ["cmp     buffersize_0, r15", "jbe     short loc_D80D"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 13, -1, 0.0, ["mov     byte ptr [r14+r15], 27h ; '''"], ["mov~<TAG>,0"]], [1, 0, 251, 0, 0, 3, 0, 0, 10, -1, 0.0, ["mov     rax, [rsp+0E8h+arg]", "cmp     byte ptr [rax+1], 0", "setnz   al"], ["mov~rax,[rsp+0]", "cmp~[yte ptr [rax+0],0", "setnz~al"]], [2, 0, 251, 0, 0, 4, 0, 1, 9, -1, 0.01081462397251871, ["cmp     argsize_0, 1; jumptable 000000000000D3EE cases 123,125", "setnz   al", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_D40C"], ["cmp~argsize_0,0", "setnz~al", "cmp~argsize_0,0", "jnz~FOO"]], [0, 0, 256, 0, 0, 1, 0, 0, 7, -1, 0.0, ["mov     [buffer+r15], al"], ["mov~<TAG>,al"]], [0, 0, 256, 0, 0, 2, 0, 0, 6, -1, 0.003471966629861367, ["cmp     buffersize_0, r15", "jbe     short loc_E1D9"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 13, -1, 0.005618942461047724, ["mov     i, argsize_0", "jmp     force_outer_quoting_style"], ["mov~i,argsize_0", "jmp~FOO"]], [2, 0, 251, 0, 0, 5, 0, 1, 12, -1, 0.09628266470371734, ["cmp     [rsp+0E8h+quoting_style], 2", "setz    dl", "cmp     [rsp+0E8h+c_and_shell_quote_compat], 0", "mov     eax, edx", "jnz     loc_DE08"], ["cmp~[rsp+0],0", "setz~dl", "cmp~[rsp+0],0", "mov~eax,edx", "jnz~FOO"]], [1, 0, 251, 0, 0, 3, 0, 0, 15, -1, 0.034241197399092135, ["mov     rax, 7000A38200000000h", "bt      rax, rbx", "jnb     loc_DA70"], ["mov~rax,0", "bt~rax,rbx", "jnb~FOO"]], [1, 0, 251, 0, 0, 3, 0, 1, 14, -1, 0.03862102809471231, ["movzx   ebx, byte ptr [rax+rcx]", "cmp     bl, 3Eh ; '>'", "ja      loc_DA70"], ["movzx~ebx,<TAG>", "cmp~bl,0", "ja~FOO"]], [0, 0, 251, 0, 0, 2, 1, 1, 11, -1, 0.03204617020406494, ["test    buffersize_0, buffersize_0", "jz      loc_DE10"], ["test~buffersize_0,buffersize_0", "jz~FOO"]], [1, 0, 6, 0, 0, 4, 0, 0, 19, -1, 0.0005152741994847259, ["mov     r14, [rsp+0E8h+argsize]", "mov     r13, [rsp+0E8h+buffersize]", "mov     i, [rsp+0E8h+var_B8]", "mov     [rsp+0E8h+quoting_style], 2"], ["mov~r14,[rsp+0]", "mov~r13,[rsp+0]", "mov~i,[rsp+0]", "mov~[rsp+0],0"]], [2, 0, 251, 1, 0, 6, 1, 1, 18, -1, 0.003594650963072016, ["mov     esi, 1", "shl     rsi, cl", "mov     rcx, rsi", "mov     rsi, 20000002Bh", "test    rcx, rsi", "jz      short loc_DD40"], ["mov~esi,0", "shl~rsi,cl", "mov~rcx,rsi", "mov~rsi,0", "test~rcx,rsi", "jz~FOO"]], [0, 0, 251, 1, 0, 6, 1, 1, 12, -1, 0.15664335664335666, ["mov     rcx, rdi", "xor     esi, esi", "movzx   r9d, [rsp+0E8h+c_and_shell_quote_compat]", "add     rcx, i", "mov     rdi, [rsp+0E8h+arg]", "jmp     loc_DCBE"], ["mov~rcx,rdi", "xor~esi,esi", "movzx~r9d,[rsp+0]", "add~rcx,i", "mov~rdi,[rsp+0]", "jmp~FOO"]], [0, 0, 251, 0, 0, 3, 1, 1, 11, -1, 0.09736228683597105, ["movzx   edx, [rsp+0E8h+backslash_escapes]", "xor     r12d, r12d", "jmp     loc_DBF0"], ["movzx~edx,[rsp+0]", "xor~r12d,r12d", "jmp~FOO"]], [1, 0, 251, 0, 0, 2, 0, 0, 13, -1, 0.06622500306710834, ["cmp     m, 1", "jbe     loc_E1EB"], ["cmp~m,0", "jbe~FOO"]], [0, 0, 251, 0, 0, 3, 0, 0, 13, -1, 0.018488529014844806, ["lea     rcx, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_D81C"], ["lea~rcx,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 9, -1, 0.07953543532490874, ["cmp     [rsp+0E8h+backslash_escapes], 0; jumptable 000000000000D3EE case 0", "jnz     loc_D7E3"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 251, 1, 0, 5, 0, 1, 8, -1, 0.31162346425504306, ["lea     rcx, off_153AC", "movzx   edx, bl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [1, 0, 251, 0, 0, 4, 1, 1, 10, -1, 0.0106428659060238, ["cmp     [rsp+0E8h+quoting_style], 2", "setz    dl", "test    al, al", "jz      loc_D668"], ["cmp~[rsp+0],0", "setz~dl", "test~al,al", "jz~FOO"]], [1, 0, 6, 0, 0, 6, 0, 1, 12, -1, 0.0004521793995478207, ["cmp     [rsp+0E8h+quoting_style], 2", "movzx   ebx, [rsp+0E8h+c_and_shell_quote_compat]", "mov     i, argsize_0", "setz    al", "mov     [rsp+0E8h+backslash_escapes], bl", "jmp     force_outer_quoting_style"], ["cmp~[rsp+0],0", "movzx~ebx,[rsp+0]", "mov~i,argsize_0", "setz~al", "mov~[rsp+0],bl", "jmp~FOO"]], [1, 0, 251, 0, 0, 3, 0, 1, 11, -1, 0.006672275093327726, ["cmp     [rsp+0E8h+c_and_shell_quote_compat], 0", "movzx   r10d, byte ptr [rsp+0E8h+ps]", "jnz     loc_E345"], ["cmp~[rsp+0],0", "movzx~r10d,[yte ptr [rsp+0]", "jnz~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 16, -1, 0.03127223653539443, ["cmp     [rsp+0E8h+c_and_shell_quote_compat], 0", "jnz     loc_E402"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 251, 0, 0, 4, 1, 1, 14, -1, 0.0551220709115446, ["cmp     [rsp+0E8h+quoting_style], 2", "setz    al", "test    r9b, r9b", "jnz     loc_E0D0"], ["cmp~[rsp+0],0", "setz~al", "test~r9b,r9b", "jnz~FOO"]], [0, 0, 251, 0, 0, 2, 1, 1, 13, -1, 0.19705557600294443, ["test    dl, dl", "jnz     loc_DC10"], ["test~dl,dl", "jnz~FOO"]], [1, 0, 251, 0, 0, 3, 1, 1, 12, -1, 0.010220627325890484, ["xor     edx, edx", "cmp     [rsp+0E8h+orig_buffersize], 0", "jnz     loc_DE10"], ["xor~edx,edx", "cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 251, 0, 0, 5, 2, 1, 5, -1, 8.58790332474543e-05, ["mov     [rsp+0E8h+all_c_and_shell_quote_compat], 1", "xor     eax, eax", "xor     r12d, r12d", "mov     [rsp+0E8h+orig_buffersize], 0", "jmp     loc_D9C4"], ["mov~[rsp+0],0", "xor~eax,eax", "xor~r12d,r12d", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 253, 0, 0, 2, 1, 1, 4, -1, 0.006355048460311619, ["test    buffersize_0, buffersize_0", "jnz     loc_E40A"], ["test~buffersize_0,buffersize_0", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 17, -1, 0.0003435161329898172, ["mov     i, argsize_0", "jmp     loc_DDA0"], ["mov~i,argsize_0", "jmp~FOO"]], [0, 0, 251, 0, 0, 3, 2, 0, 11, -1, 0.01612685560053981, ["xor     r12d, r12d", "xor     eax, eax", "nop     dword ptr [escaping+00000000h]"], ["xor~r12d,r12d", "xor~eax,eax", "nop~[word ptr [escaping+0]"]], [0, 0, 251, 0, 0, 2, 1, 1, 10, -1, 0.008054226475279107, ["test    i, i", "jnz     loc_D41C"], ["test~i,i", "jnz~FOO"]], [1, 0, 251, 0, 0, 3, 2, 1, 10, -1, 0.013441295546558731, ["xor     edx, edx", "test    byte ptr [rsp+0E8h+flags], 1", "jz      loc_D53B"], ["xor~edx,edx", "test~[yte ptr [rsp+0],0", "jz~FOO"]], [0, 0, 251, 0, 0, 3, 0, 1, 14, -1, 0.018316770948349898, ["lea     len, [r15+2]", "cmp     buffersize_0, len", "ja      loc_DE59"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "ja~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 14, -1, 0.0, ["mov     byte ptr [r14+r15+1], 24h ; '$'"], ["mov~[yte ptr [r14+0],0"]], [1, 0, 251, 0, 0, 4, 2, 1, 15, -1, 0.048607532818059136, ["mov     esi, r8d", "xor     esi, 1", "and     al, sil", "jz      short loc_DC5B"], ["mov~esi,r8d", "xor~esi,0", "and~al,sil", "jz~FOO"]], [1, 0, 251, 1, 0, 2, 0, 1, 11, -1, 0.012072138387927863, ["add     i, 1", "jmp     loc_D2E8"], ["add~i,0", "jmp~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 10, -1, 0.1518760479286795, ["cmp     [rsp+0E8h+backslash_escapes], 1", "jnz     loc_D542"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 251, 0, 0, 6, 2, 1, 11, -1, 0.0029321555637345114, ["cmp     eax, 2", "mov     ebx, 3Fh ; '?'", "setz    dl", "xor     r12d, r12d", "xor     eax, eax", "jmp     loc_D428"], ["cmp~eax,0", "mov~ebx,0", "setz~dl", "xor~r12d,r12d", "xor~eax,eax", "jmp~FOO"]], [1, 0, 251, 0, 0, 5, 2, 1, 10, -1, 0.004305197726250357, ["mov     [rsp+0E8h+encountered_single_quote], r12b", "xor     edx, edx", "xor     eax, eax", "mov     ebx, 27h ; '''", "jmp     loc_D428"], ["mov~[rsp+0],r12b", "xor~edx,edx", "xor~eax,eax", "mov~ebx,0", "jmp~FOO"]], [1, 0, 251, 0, 0, 4, 1, 1, 9, -1, 0.010882100355784567, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 000000000000D3EE cases 37,43-58,65-90,93,95,97-122", "setz    dl", "xor     eax, eax", "jmp     loc_D428"], ["cmp~[rsp+0],0", "setz~dl", "xor~eax,eax", "jmp~FOO"]], [0, 0, 251, 0, 0, 3, 1, 1, 10, -1, 0.018568040146987652, ["movzx   eax, [rsp+0E8h+c_and_shell_quote_compat]", "and     al, dl", "jz      loc_D428"], ["movzx~eax,[rsp+0]", "and~al,dl", "jz~FOO"]], [1, 0, 251, 0, 0, 3, 0, 1, 11, -1, 0.0072138387927861616, ["cmp     [rsp+0E8h+quoting_style], 2", "setz    dl", "jmp     loc_D428"], ["cmp~[rsp+0],0", "setz~dl", "jmp~FOO"]], [1, 0, 251, 0, 0, 4, 1, 1, 15, -1, 0.006956201693043799, ["mov     eax, r12d", "mov     ebx, 30h ; '0'", "xor     r12d, r12d", "jmp     loc_D428"], ["mov~eax,r12d", "mov~ebx,0", "xor~r12d,r12d", "jmp~FOO"]], [1, 0, 251, 0, 0, 6, 2, 1, 10, -1, 0.00027603974972396027, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 000000000000D77A cases 37,43-58,65-90,93,95,97-122", "mov     r12d, r10d", "setz    dl", "xor     r10d, r10d", "xor     eax, eax", "jmp     loc_D428"], ["cmp~[rsp+0],0", "mov~r12d,r10d", "setz~dl", "xor~r10d,r10d", "xor~eax,eax", "jmp~FOO"]], [1, 0, 251, 0, 0, 5, 3, 1, 12, -1, 0.01724941724941725, ["xor     edx, edx", "xor     r12d, r12d", "xor     eax, eax", "mov     ebx, 3Fh ; '?'", "jmp     loc_D428"], ["xor~edx,edx", "xor~r12d,r12d", "xor~eax,eax", "mov~ebx,0", "jmp~FOO"]], [1, 0, 251, 0, 0, 5, 1, 1, 18, -1, 0.012145748987854251, ["mov     eax, r12d", "lea     r15, [rcx+3]", "xor     r12d, r12d", "mov     ebx, 30h ; '0'", "jmp     loc_D428"], ["mov~eax,r12d", "lea~r15,[rcx+0]", "xor~r12d,r12d", "mov~ebx,0", "jmp~FOO"]], [1, 0, 251, 1, 0, 6, 3, 1, 21, -1, 0.026990553306342775, ["add     r15, 4", "xor     edx, edx", "xor     r12d, r12d", "xor     eax, eax", "mov     rbp, i", "jmp     loc_D428"], ["add~r15,0", "xor~edx,edx", "xor~r12d,r12d", "xor~eax,eax", "mov~rbp,i", "jmp~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 18, -1, 0.0, ["mov     byte ptr [r14+r15], 3Fh ; '?'"], ["mov~<TAG>,0"]], [0, 0, 251, 0, 0, 2, 0, 0, 17, -1, 0.027677585572322416, ["cmp     buffersize_0, r15", "jbe     short loc_E228"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [0, 0, 251, 0, 0, 2, 0, 0, 16, -1, 0.018660287081339714, ["cmp     r13, r15", "jbe     short loc_DC36"], ["cmp~r13,r15", "jbe~FOO"]], [0, 0, 251, 0, 0, 3, 0, 0, 14, -1, 0.01832903938167096, ["lea     len, [r15+2]", "cmp     buffersize_0, len", "jbe     loc_E422"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 251, 0, 0, 3, 0, 0, 13, -1, 0.018500797448165872, ["lea     rax, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_DE29"], ["lea~rax,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 14, -1, 0.0, ["mov     byte ptr [r14+r15+1], 5Ch ; '\\'"], ["mov~[yte ptr [r14+0],0"]], [1, 0, 251, 0, 0, 1, 0, 0, 17, -1, 0.0, ["mov     byte ptr [r14+r15], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 251, 0, 0, 2, 0, 0, 12, -1, 0.0625322046374678, ["cmp     buffersize_0, len", "jbe     short loc_D83A"], ["cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 251, 0, 0, 2, 0, 0, 15, -1, 0.018145012881854987, ["lea     len, [r15+3]", "mov     r8d, eax"], ["lea~len,[r15+0]", "mov~r8d,eax"]], [0, 0, 251, 0, 0, 2, 1, 1, 11, -1, 0.05057068662331825, ["test    dl, dl", "jnz     loc_D542"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 257, 0, 0, 4, 1, 1, 4, -1, 0.000490737332842596, ["mov     rdx, [rsp+0E8h+quote_string_0]", "movzx   eax, byte ptr [rdx]", "test    al, al", "jz      loc_DFFC"], ["mov~rdx,[rsp+0]", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 258, 0, 0, 3, 2, 1, 3, -1, 0.015998037050668632, ["xor     r15d, r15d", "test    ebx, ebx", "jz      loc_E1BD"], ["xor~r15d,r15d", "test~ebx,ebx", "jz~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 15, -1, 0.0, ["mov     byte ptr [r14+r15+2], 27h ; '''", "jmp     loc_D829"], ["mov~[yte ptr [r14+0],0", "jmp~FOO"]], [2, 0, 251, 1, 0, 8, 2, 1, 13, -1, 0.03127325890483785, ["mov     [rsp+0E8h+orig_buffersize], r13", "add     r15, 3", "xor     eax, eax", "mov     [rsp+0E8h+encountered_single_quote], r12b", "xor     r8d, r8d", "mov     r13, rdx", "mov     ebx, 27h ; '''", "jmp     loc_D459"], ["mov~[rsp+0],r13", "add~r15,0", "xor~eax,eax", "mov~[rsp+0],r12b", "xor~r8d,r8d", "mov~r13,rdx", "mov~ebx,0", "jmp~FOO"]], [1, 0, 251, 0, 0, 4, 0, 1, 15, -1, 0.007545086492454912, ["mov     rdx, buffersize_0", "mov     byte ptr [r14+r15+2], 27h ; '''", "mov     buffersize_0, [rsp+0E8h+orig_buffersize]", "jmp     loc_DA22"], ["mov~rdx,buffersize_0", "mov~[yte ptr [r14+0],0", "mov~buffersize_0,[rsp+0]", "jmp~FOO"]], [0, 0, 251, 0, 0, 3, 0, 1, 15, -1, 0.007545086492454912, ["mov     rdx, buffersize_0", "mov     buffersize_0, [rsp+0E8h+orig_buffersize]", "jmp     loc_DA22"], ["mov~rdx,buffersize_0", "mov~buffersize_0,[rsp+0]", "jmp~FOO"]], [0, 0, 251, 0, 0, 3, 0, 0, 19, -1, 0.027334069439332597, ["lea     len, [r15+2]", "cmp     buffersize_0, len", "jbe     short loc_E246"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 251, 0, 0, 3, 0, 0, 18, -1, 0.02750582750582751, ["lea     rax, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_E237"], ["lea~rax,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 19, -1, 0.0, ["mov     byte ptr [r14+r15+1], 22h ; '\"'"], ["mov~[yte ptr [r14+0],0"]], [1, 0, 251, 0, 0, 1, 0, 0, 18, -1, 0.0, ["mov     byte ptr [r14+r15+1], 24h ; '$'"], ["mov~[yte ptr [r14+0],0"]], [0, 0, 251, 0, 0, 3, 0, 0, 17, -1, 0.018488529014844806, ["lea     rsi, [r15+1]", "cmp     r13, len", "jbe     short loc_DC45"], ["lea~rsi,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 20, -1, 0.0, ["mov     byte ptr [r14+r15+2], 22h ; '\"'"], ["mov~[yte ptr [r14+0],0"]], [0, 0, 251, 0, 0, 3, 1, 1, 12, -1, 0.10582995951417014, ["mov     rsi, [rsp+0E8h+var_C8]", "test    rsi, rsi", "jz      short loc_D459"], ["mov~rsi,[rsp+0]", "test~rsi,rsi", "jz~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 11, -1, 0.10434793276898535, ["cmp     [rsp+0E8h+c_and_shell_quote_compat], 0", "jnz     loc_D43B"], ["cmp~[rsp+0],0", "jnz~FOO"]], [3, 0, 252, 0, 0, 5, 1, 1, 4, -1, 0.0015642252484357748, ["mov     [rsp+0E8h+orig_buffersize], 0", "mov     [rsp+0E8h+all_c_and_shell_quote_compat], 1", "xor     r12d, r12d", "mov     [rsp+0E8h+encountered_single_quote], 0", "jmp     loc_DEEB"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r12d,r12d", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 254, 0, 0, 2, 1, 1, 3, -1, 0.0001104158998895841, ["test    buffersize_0, buffersize_0", "jz      loc_E0F6"], ["test~buffersize_0,buffersize_0", "jz~FOO"]], [0, 0, 251, 0, 0, 3, 0, 0, 18, -1, 0.018316770948349898, ["lea     len, [r15+2]", "cmp     r13, len", "jbe     short loc_DC54"], ["lea~len,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [1, 0, 251, 0, 0, 2, 1, 1, 11, -1, 0.05218991534781009, ["test    byte ptr [rsp+0E8h+flags], 4", "jz      short loc_DA70"], ["test~[yte ptr [rsp+0],0", "jz~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 10, -1, 0.05836093730830573, ["cmp     eax, 5", "jz      loc_DA48"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 19, -1, 0.0, ["mov     byte ptr [r14+r15+2], 27h ; '''"], ["mov~[yte ptr [r14+0],0"]], [1, 0, 251, 0, 0, 1, 0, 0, 21, -1, 0.0, ["mov     byte ptr [r14+r15+3], 3Fh ; '?'"], ["mov~[yte ptr [r14+0],0"]], [0, 0, 251, 0, 0, 3, 0, 0, 20, -1, 0.02716231137283769, ["lea     len, [r15+3]", "cmp     buffersize_0, len", "jbe     short loc_E255"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 251, 0, 0, 3, 0, 0, 14, -1, 0.022770212243896457, ["lea     rax, [i+1]", "cmp     rax, argsize_0", "jnb     short loc_D86B"], ["lea~rax,[i+0]", "cmp~rax,argsize_0", "jnb~FOO"]], [1, 0, 251, 0, 0, 3, 0, 1, 13, -1, 0.06236044657097289, ["cmp     [rsp+0E8h+quoting_style], 2", "lea     r15, [len+1]", "jz      loc_DE49"], ["cmp~[rsp+0],0", "lea~r15,[len+0]", "jz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 11, -1, 0.0007115691326217643, ["mov     i, argsize_0", "movzx   eax, [rsp+0E8h+c_and_shell_quote_compat]", "jmp     force_outer_quoting_style"], ["mov~i,argsize_0", "movzx~eax,[rsp+0]", "jmp~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 10, -1, 0.014914325440641215, ["cmp     [rsp+0E8h+c_and_shell_quote_compat], 0", "jnz     loc_E2B0"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 10, -1, 0.012669202142886391, ["cmp     [rsp+0E8h+c_and_shell_quote_compat], 0", "jnz     loc_E2B0"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 251, 0, 0, 6, 0, 0, 13, -1, 0.006092503987240825, ["mov     edx, ebx", "shr     dl, 5", "movzx   edx, dl", "mov     edx, [rsi+rdx*4]", "bt      edx, ebx", "jb      store_escape"], ["mov~edx,ebx", "shr~dl,0", "movzx~edx,dl", "mov~edx,<TAG>", "bt~edx,ebx", "jb~FOO"]], [1, 0, 251, 0, 0, 4, 1, 1, 14, -1, 0.03635136793031529, ["mov     eax, r12d", "mov     ebx, 30h ; '0'", "xor     r12d, r12d", "jmp     loc_D459"], ["mov~eax,r12d", "mov~ebx,0", "xor~r12d,r12d", "jmp~FOO"]], [0, 0, 251, 0, 0, 3, 0, 0, 12, -1, 0.04620291988713041, ["lea     rcx, [i+2]", "cmp     rcx, argsize_0", "jnb     short loc_DA70"], ["lea~rcx,[i+0]", "cmp~rcx,argsize_0", "jnb~FOO"]], [1, 0, 251, 1, 0, 2, 0, 0, 19, -1, 0.018145012881854987, ["add     r15, 3", "mov     r8d, eax"], ["add~r15,0", "mov~r8d,eax"]], [2, 0, 251, 0, 0, 3, 0, 1, 9, -1, 0.004409975988923354, ["mov     edx, 7; jumptable 000000000000D3EE case 7", "mov     ebx, 61h ; 'a'", "jmp     c_escape"], ["mov~edx,0", "mov~ebx,0", "jmp~FOO"]], [0, 0, 251, 0, 0, 2, 1, 1, 12, -1, 0.23937430990062541, ["test    r10b, r10b", "jnz     store_escape"], ["test~r10b,r10b", "jnz~FOO"]], [0, 0, 251, 0, 0, 1, 0, 1, 12, -1, 0.0488923649449966, ["jmp     loc_D459"], ["jmp~FOO"]], [1, 0, 251, 0, 0, 4, 2, 1, 11, -1, 0.011256287572077046, ["xor     r12d, r12d", "xor     eax, eax", "mov     ebx, 3Fh ; '?'", "jmp     loc_D459"], ["xor~r12d,r12d", "xor~eax,eax", "mov~ebx,0", "jmp~FOO"]], [1, 0, 251, 1, 0, 2, 0, 0, 19, -1, 0.03743099006256901, ["movzx   ebx, byte ptr [rdi+rbp]", "add     r15, 1"], ["movzx~ebx,<TAG>", "add~r15,0"]], [0, 0, 251, 0, 0, 2, 0, 0, 18, -1, 0.03760274812906392, ["cmp     r13, r15", "jbe     short loc_DCB6"], ["cmp~r13,r15", "jbe~FOO"]], [0, 0, 251, 0, 0, 1, 0, 0, 19, -1, 0.0, ["mov     [r14+r15], bl"], ["mov~<TAG>,bl"]], [0, 0, 251, 0, 0, 2, 0, 0, 16, -1, 0.047920500552079505, ["cmp     r13, r15", "jbe     short loc_DC65"], ["cmp~r13,r15", "jbe~FOO"]], [2, 0, 251, 1, 0, 6, 0, 0, 15, -1, 0.015580910317752423, ["mov     rax, [rsp+0E8h+arg]", "movzx   eax, byte ptr [rax+i+1]", "mov     byte ptr [rsp+0E8h+ps], al", "sub     eax, 30h ; '0'", "cmp     al, 9", "jbe     loc_E099"], ["mov~rax,[rsp+0]", "movzx~eax,[yte ptr [rax+0]", "mov~[yte ptr [rsp+0],al", "sub~eax,0", "cmp~al,0", "jbe~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 17, -1, 0.0, ["mov     byte ptr [r14+r15], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [1, 0, 251, 0, 0, 3, 0, 1, 13, -1, 0.04328303275671697, ["mov     rax, [rsp+0E8h+arg]", "cmp     byte ptr [rax+i+1], 3Fh ; '?'", "jz      loc_E1F2"], ["mov~rax,[rsp+0]", "cmp~[yte ptr [rax+0],0", "jz~FOO"]], [1, 0, 251, 0, 0, 2, 0, 0, 9, -1, 0.00455772297877561, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 000000000000D3EE cases 35,126", "setz    dl"], ["cmp~[rsp+0],0", "setz~dl"]], [0, 0, 257, 0, 0, 2, 1, 1, 2, -1, 7.36105999263894e-05, ["test    ebx, ebx; jumptable 000000000000D291 case 4", "jnz     loc_D293; jumptable 000000000000D291 case 1"], ["test~ebx,ebx", "jnz~FOO"]], [0, 0, 284, 1, 0, 5, 0, 1, 1, -1, 0.0034842350631824324, ["lea     rcx, off_15380", "mov     edx, r15d", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "mov~edx,r15d", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [0, 0, 251, 0, 0, 1, 0, 0, 14, -1, 0.0014231382652435285, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [2, 0, 251, 1, 0, 3, 2, 0, 13, -1, 0.22329775487670225, ["xor     eax, 1", "add     i, 1", "and     eax, r8d"], ["xor~eax,0", "add~i,0", "and~eax,r8d"]], [0, 0, 256, 0, 0, 2, 1, 1, 2, -1, 9.81474665685192e-05, ["test    ebx, ebx; jumptable 000000000000D291 case 2", "jz      loc_E3F8"], ["test~ebx,ebx", "jz~FOO"]], [1, 0, 251, 0, 0, 4, 1, 1, 10, -1, 7.36105999263894e-05, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 000000000000D77A cases 35,126", "setz    dl", "xor     r10d, r10d", "jmp     loc_D668"], ["cmp~[rsp+0],0", "setz~dl", "xor~r10d,r10d", "jmp~FOO"]], [0, 0, 251, 0, 0, 3, 0, 0, 17, -1, 0.04774874248558459, ["lea     rax, [r15+1]", "cmp     r13, len", "jbe     short loc_DC7B"], ["lea~rax,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [0, 0, 251, 0, 0, 2, 1, 1, 12, -1, 0.36201079622132254, ["test    al, al", "jz      short loc_D490"], ["test~al,al", "jz~FOO"]], [2, 0, 251, 1, 0, 5, 1, 1, 11, -1, 0.026168568273831433, ["add     i, 1", "mov     eax, r8d", "xor     r12d, r12d", "mov     ebx, 5Ch ; '\\'", "jmp     store_c"], ["add~i,0", "mov~eax,r8d", "xor~r12d,r12d", "mov~ebx,0", "jmp~FOO"]], [1, 0, 251, 1, 0, 3, 0, 0, 15, -1, 0.1383511225616489, ["add     i, 1", "cmp     rbp, ilim", "jnb     store_c"], ["add~i,0", "cmp~rbp,ilim", "jnb~FOO"]], [7, 0, 251, 0, 0, 10, 2, 1, 2, -1, 0.0020447388868441506, ["mov     [rsp+0E8h+all_c_and_shell_quote_compat], 1; jumptable 000000000000D291 case 0", "mov     [rsp+0E8h+encountered_single_quote], 0", "xor     r12d, r12d", "mov     [rsp+0E8h+orig_buffersize], 0", "mov     [rsp+0E8h+c_and_shell_quote_compat], 0", "xor     r15d, r15d", "mov     [rsp+0E8h+backslash_escapes], 0", "mov     [rsp+0E8h+quote_string_len], 0", "mov     [rsp+0E8h+s2], 0", "jmp     loc_D2D3"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r12d,r12d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 251, 0, 0, 2, 0, 0, 13, -1, 0.012489265120844069, ["cmp     buffersize_0, r15", "jbe     short loc_D47A"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 254, 0, 0, 2, 0, 1, 3, -1, 9.81474665685192e-05, ["mov     [rsp+0E8h+backslash_escapes], 0", "jmp     loc_DE71"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 254, 0, 0, 1, 0, 0, 3, -1, 9.81474665685192e-05, ["mov     [rsp+0E8h+backslash_escapes], 1"], ["mov~[rsp+0],0"]], [1, 0, 251, 0, 0, 1, 0, 0, 14, -1, 0.0, ["mov     byte ptr [r14+r15], 27h ; '''"], ["mov~<TAG>,0"]], [1, 0, 251, 0, 0, 4, 1, 1, 9, -1, 0.002110579479000529, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 000000000000D3EE cases 33,34,36,38,40-42,59-62,91,94,96,124", "setz    dl", "xor     r12d, r12d", "jmp     short loc_D671"], ["cmp~[rsp+0],0", "setz~dl", "xor~r12d,r12d", "jmp~FOO"]], [1, 1, 251, 0, 0, 4, 0, 1, 9, -1, 0.002110579479000529, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 000000000000D3EE case 32", "mov     ebx, 20h ; ' '", "setz    dl", "jmp     short loc_D671"], ["cmp~[rsp+0],0", "mov~ebx,<STR>", "setz~dl", "jmp~FOO"]], [1, 0, 251, 0, 0, 5, 2, 1, 10, -1, 6.0816376605850294e-05, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 000000000000D77A cases 33,34,36,38,40-42,59-62,91,94,96,124", "setz    dl", "xor     r10d, r10d", "xor     r12d, r12d", "jmp     loc_D671"], ["cmp~[rsp+0],0", "setz~dl", "xor~r10d,r10d", "xor~r12d,r12d", "jmp~FOO"]], [1, 1, 251, 0, 0, 6, 1, 1, 10, -1, 6.0816376605850294e-05, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 000000000000D77A case 32", "mov     r12d, r10d", "mov     ebx, 20h ; ' '", "setz    dl", "xor     r10d, r10d", "jmp     loc_D671"], ["cmp~[rsp+0],0", "mov~r12d,r10d", "mov~ebx,<STR>", "setz~dl", "xor~r10d,r10d", "jmp~FOO"]], [3, 0, 286, 1, 1, 29, 2, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15d, r8d", "push    r13", "push    r12", "mov     r14, buffer", "push    rbp", "push    rbx", "mov     ebx, r9d", "mov     r13, buffersize_0", "mov     rbp, argsize_0", "and     ebx, 2", "sub     rsp, 0B8h", "mov     rax, [rsp+0E8h+quote_these_too]", "mov     [rsp+0E8h+arg], arg_0", "mov     [rsp+0E8h+quoting_style], r8d", "mov     [rsp+0E8h+flags], r9d", "mov     [rsp+0E8h+var_C8], rax", "mov     rax, [rsp+0E8h+left_quote]", "mov     [rsp+0E8h+quote_string_0], rax", "mov     rax, [rsp+0E8h+right_quote]", "mov     [rsp+0E8h+quote_string], rax", "mov     rax, fs:28h", "mov     [rsp+0E8h+var_40], rax", "xor     eax, eax", "call    ___ctype_get_mb_cur_max", "cmp     r15d, 0Ah; switch 11 cases", "mov     [rsp+0E8h+var_90], rax", "ja      loc_E42F; jumptable 000000000000D291 default case"], ["push~r15", "push~r14", "mov~r15d,r8d", "push~r13", "push~r12", "mov~r14,buffer", "push~rbp", "push~rbx", "mov~ebx,r9d", "mov~r13,buffersize_0", "mov~rbp,argsize_0", "and~ebx,0", "sub~rsp,0", "mov~rax,[rsp+0]", "mov~[rsp+0],arg_0", "mov~[rsp+0],r8d", "mov~[rsp+0],r9d", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "cmp~r15d,0", "mov~[rsp+0],rax", "ja~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 13, -1, 0.0, ["mov     byte ptr [r14+r15], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 251, 0, 0, 2, 0, 0, 12, -1, 0.01867255551466078, ["cmp     buffersize_0, r15", "jbe     short loc_DE1A"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [0, 0, 251, 0, 0, 2, 0, 1, 14, -1, 0.006772175193227825, ["mov     eax, edx", "jmp     loc_D747"], ["mov~eax,edx", "jmp~FOO"]], [0, 0, 251, 0, 0, 3, 0, 0, 14, -1, 0.01231750705434916, ["lea     rax, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_D489"], ["lea~rax,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 251, 0, 0, 3, 0, 0, 18, -1, 0.04757698441908968, ["lea     rax, [r15+2]", "cmp     r13, len", "jbe     short loc_DC94"], ["lea~rax,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [2, 0, 251, 1, 0, 4, 0, 0, 18, -1, 0.0, ["mov     eax, ebx", "shr     al, 6", "add     eax, 30h ; '0'", "mov     [r14+r15+1], al"], ["mov~eax,ebx", "shr~al,0", "add~eax,0", "mov~[r14+0],al"]], [1, 0, 251, 0, 0, 1, 0, 0, 15, -1, 0.0, ["mov     byte ptr [r14+r15+1], 27h ; '''"], ["mov~[yte ptr [r14+0],0"]], [1, 0, 6, 0, 0, 3, 0, 1, 11, -1, 0.0017783386204438837, ["mov     i, argsize_0", "mov     [rsp+0E8h+quoting_style], 2", "jmp     force_outer_quoting_style"], ["mov~i,argsize_0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 251, 0, 0, 4, 1, 1, 10, -1, 0.020316175053017083, ["cmp     [rsp+0E8h+quoting_style], 2", "setz    al", "and     al, [rsp+0E8h+c_and_shell_quote_compat]", "jnz     loc_D67E"], ["cmp~[rsp+0],0", "setz~al", "and~al,[rsp+0]", "jnz~FOO"]], [0, 0, 261, 0, 1, 5, 0, 2, 4, -1, 0.0, ["mov     esi, [rsp+0E8h+quoting_style]; s", "mov     rdi, rcx; msgid", "call    gettext_quote", "mov     [rsp+0E8h+quote_string_0], rax", "jmp     loc_DFC6"], ["mov~esi,[rsp+0]", "mov~rdi,rcx", "call~FOO", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 262, 0, 1, 9, 1, 2, 3, -1, 0.0001104158998895841, ["lea     rsi, asc_15317; \"`\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rax", "mov     [rsp+0E8h+quote_string_0], rax", "lea     rax, asc_15317; \"`\"", "cmp     rcx, rax", "jz      loc_E35E"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rax", "mov~[rsp+0],rax", "lea~rax,<TAG>", "cmp~rcx,rax", "jz~FOO"]], [1, 0, 251, 1, 0, 2, 1, 0, 15, -1, 0.012145748987854251, ["add     r15, 2", "xor     r8d, r8d"], ["add~r15,0", "xor~r8d,r8d"]], [3, 0, 251, 1, 0, 5, 1, 0, 19, -1, 0.0, ["mov     eax, ebx", "shr     al, 3", "and     eax, 7", "add     eax, 30h ; '0'", "mov     [r14+r15+2], al"], ["mov~eax,ebx", "shr~al,0", "and~eax,0", "add~eax,0", "mov~[r14+0],al"]], [0, 0, 251, 1, 0, 5, 0, 1, 9, -1, 0.06923953239742718, ["lea     rcx, off_155A8", "movzx   edx, bl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [0, 0, 251, 0, 0, 2, 0, 0, 13, -1, 0.4920009814746657, ["cmp     r15, r13", "jnb     short loc_D499"], ["cmp~r15,r13", "jnb~FOO"]], [4, 0, 251, 3, 0, 6, 1, 0, 19, -1, 0.047405226352594775, ["and     ebx, 7", "add     i, 1", "add     r15, 3", "add     ebx, 30h ; '0'", "cmp     rbp, ilim", "jnb     loc_D490"], ["and~ebx,0", "add~i,0", "add~r15,0", "add~ebx,0", "cmp~rbp,ilim", "jnb~FOO"]], [5, 0, 252, 0, 0, 7, 1, 1, 2, -1, 1.22684333210649e-05, ["mov     [rsp+0E8h+all_c_and_shell_quote_compat], 1; jumptable 000000000000D291 case 3", "mov     [rsp+0E8h+encountered_single_quote], 0", "xor     r12d, r12d", "mov     [rsp+0E8h+orig_buffersize], 0", "mov     [rsp+0E8h+c_and_shell_quote_compat], 1", "mov     [rsp+0E8h+backslash_escapes], 1", "jmp     loc_D2B3"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r12d,r12d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 251, 0, 0, 1, 0, 0, 14, -1, 0.0, ["mov     [r14+r15], bl"], ["mov~<TAG>,bl"]], [0, 0, 251, 0, 0, 2, 0, 0, 16, -1, 0.012489265120844069, ["cmp     buffersize_0, len", "jbe     short loc_E0A3"], ["cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 17, -1, 0.0, ["mov     byte ptr [r14+len], 30h ; '0'"], ["mov~<TAG>,0"]], [2, 0, 251, 0, 0, 4, 1, 1, 10, -1, 5.4682159945317844e-05, ["mov     edx, 0Ah; jumptable 000000000000D77A case 10", "xor     r10d, r10d", "mov     ebx, 6Eh ; 'n'", "jmp     c_and_shell_escape"], ["mov~edx,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 10, -1, 0.0, ["mov     byte ptr [r14+r15], 0", "jmp     loc_DDD9"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 9, -1, 0.005189547294810453, ["cmp     buffersize_0, r15", "jbe     loc_DDD9"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [6, 0, 251, 0, 0, 11, 2, 1, 3, -1, 0.003067108330266225, ["lea     rax, asc_15315; \"'\"", "mov     [rsp+0E8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0E8h+encountered_single_quote], 0", "xor     r12d, r12d", "mov     [rsp+0E8h+orig_buffersize], 0", "mov     [rsp+0E8h+c_and_shell_quote_compat], 1", "mov     [rsp+0E8h+backslash_escapes], 0", "mov     [rsp+0E8h+quote_string_len], 1", "xor     r15d, r15d", "mov     [rsp+0E8h+s2], rax", "jmp     loc_D2D3"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r12d,r12d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort; jumptable 000000000000D291 default case"], ["call~FOO"]], [0, 0, 251, 0, 0, 3, 0, 0, 17, -1, 0.01231750705434916, ["lea     rax, [rcx+2]", "cmp     buffersize_0, len", "jbe     short loc_E0B2"], ["lea~rax,[rcx+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 251, 0, 0, 1, 0, 0, 20, -1, 0.006434793276898541, ["mov     esi, edx"], ["mov~esi,edx"]], [1, 0, 251, 0, 0, 1, 0, 0, 18, -1, 0.0, ["mov     byte ptr [r14+rcx+2], 30h ; '0'"], ["mov~[yte ptr [r14+0],0"]], [5, 0, 252, 0, 0, 6, 1, 0, 2, -1, 0.003091645196908355, ["mov     [rsp+0E8h+all_c_and_shell_quote_compat], 1; jumptable 000000000000D291 case 1", "mov     [rsp+0E8h+encountered_single_quote], 0", "xor     r12d, r12d", "mov     [rsp+0E8h+orig_buffersize], 0", "mov     [rsp+0E8h+c_and_shell_quote_compat], 1", "mov     [rsp+0E8h+backslash_escapes], 0"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r12d,r12d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [0, 0, 9, 0, 0, 2, 0, 0, 12, -1, 0.009790209790209791, ["cmp     buffersize_0, len", "jbe     short loc_E323"], ["cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 9, 1, 0, 4, 1, 1, 13, -1, 0.003459698196540302, ["add     len, 1", "movzx   ecx, byte ptr [rax+len]", "test    cl, cl", "jnz     short loc_E31A"], ["add~len,0", "movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [0, 0, 9, 1, 0, 2, 0, 0, 11, -1, 0.012906391853760276, ["mov     rdx, r15", "sub     rax, r15"], ["mov~rdx,r15", "sub~rax,r15"]], [1, 0, 251, 1, 0, 4, 2, 1, 19, -1, 0.012145748987854251, ["add     r15, 2", "xor     r10d, r10d", "xor     r8d, r8d", "jmp     short loc_DCAD"], ["add~r15,0", "xor~r10d,r10d", "xor~r8d,r8d", "jmp~FOO"]], [0, 0, 251, 0, 0, 2, 1, 1, 17, -1, 0.012973868237026133, ["xor     r10d, r10d", "jmp     loc_DCAD"], ["xor~r10d,r10d", "jmp~FOO"]], [2, 0, 251, 1, 0, 7, 1, 1, 14, -1, 0.4918292234081708, ["movzx   edi, [rsp+0E8h+all_c_and_shell_quote_compat]", "add     r15, 1", "mov     eax, 0", "test    r12b, r12b", "cmovz   edi, eax", "mov     [rsp+0E8h+all_c_and_shell_quote_compat], dil", "jmp     loc_D2E8"], ["movzx~edi,[rsp+0]", "add~r15,0", "mov~eax,0", "test~r12b,r12b", "cmovz~edi,eax", "mov~[rsp+0],dil", "jmp~FOO"]], [7, 0, 251, 0, 0, 11, 1, 1, 5, -1, 0.009201324990798676, ["lea     rax, asc_15315; \"'\"", "mov     [rsp+0E8h+orig_buffersize], 0", "mov     [rsp+0E8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0E8h+encountered_single_quote], 0", "xor     r12d, r12d", "mov     [rsp+0E8h+c_and_shell_quote_compat], 0", "mov     [rsp+0E8h+quote_string_len], 1", "mov     [rsp+0E8h+s2], rax", "mov     r15d, 1", "mov     [rsp+0E8h+quoting_style], 2", "jmp     loc_D2D3"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r12d,r12d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~r15d,0", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 251, 0, 0, 3, 0, 1, 9, -1, 0.0016341553183658415, ["mov     edx, 0Dh; jumptable 000000000000D3EE case 13", "mov     ebx, 72h ; 'r'", "jmp     c_and_shell_escape"], ["mov~edx,0", "mov~ebx,0", "jmp~FOO"]], [1, 0, 251, 0, 0, 3, 0, 1, 9, -1, 0.07426900584795304, ["mov     eax, [rsp+0E8h+quoting_style]; jumptable 000000000000D3EE case 63", "cmp     eax, 2", "jz      loc_DA88"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 251, 0, 0, 1, 1, 0, 10, -1, 0.0008833271991166729, ["xor     r10d, r10d; jumptable 000000000000D77A case 63"], ["xor~r10d,r10d"]], [0, 0, 256, 0, 0, 2, 1, 1, 2, -1, 0.000122684333210649, ["test    ebx, ebx; jumptable 000000000000D291 case 5", "jnz     loc_E2BD"], ["test~ebx,ebx", "jnz~FOO"]], [2, 0, 251, 0, 0, 5, 0, 1, 9, -1, 0.0717948717948718, ["lea     rax, [rsp+0E8h+mbstate]", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "mov     qword ptr [rsp+0E8h+mbstate.__count], 0", "mov     [rsp+0E8h+ps], rax", "jnz     short loc_DAF4"], ["lea~rax,[rsp+0]", "cmp~argsize_0,0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],rax", "jnz~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 8, -1, 0.1730953257269047, ["cmp     [rsp+0E8h+var_90], 1; jumptable 000000000000D3EE default case", "jnz     loc_DAA8"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 251, 0, 0, 3, 0, 1, 9, -1, 0.004409975988923354, ["mov     edx, 0Ch; jumptable 000000000000D3EE case 12", "mov     ebx, 66h ; 'f'", "jmp     c_escape"], ["mov~edx,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 251, 0, 0, 5, 1, 0, 3, -1, 0.009225861857440806, ["lea     rax, asc_15315; \"'\"", "mov     [rsp+0E8h+quote_string_len], 1", "xor     r15d, r15d", "mov     [rsp+0E8h+quoting_style], 2", "mov     [rsp+0E8h+s2], rax"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],rax"]], [0, 0, 251, 0, 0, 3, 0, 1, 9, -1, 0.02514853567485147, ["cmp     rbx, r11", "mov     byte ptr [rsp+0E8h+ps], r10b", "ja      loc_D930"], ["cmp~rbx,r11", "mov~[yte ptr [rsp+0],r10b", "ja~FOO"]], [1, 0, 251, 0, 0, 3, 0, 1, 8, -1, 0.02540617277459383, ["cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "lea     rbx, [i+rax+0]", "jnz     short loc_D370"], ["cmp~argsize_0,0", "lea~rbx,[i+0]", "jnz~FOO"]], [1, 0, 251, 0, 0, 2, 0, 0, 9, -1, 0.0031407189301926146, ["cmp     rax, 1", "jbe     short loc_D370"], ["cmp~rax,0", "jbe~FOO"]], [0, 0, 251, 0, 1, 8, 0, 1, 10, -1, 0.0, ["mov     byte ptr [rsp+0E8h+pending_shell_escape_end], r8b", "mov     byte ptr [rsp+0E8h+var_B8], r10b", "mov     [rsp+0E8h+ps], r9", "call    _strlen", "movzx   r8d, byte ptr [rsp+0E8h+pending_shell_escape_end]", "movzx   r10d, byte ptr [rsp+0E8h+var_B8]", "mov     r11, rax", "mov     r9, [rsp+0E8h+ps]"], ["mov~[yte ptr [rsp+0],r8b", "mov~[yte ptr [rsp+0],r10b", "mov~[rsp+0],r9", "call~FOO", "movzx~r8d,[yte ptr [rsp+0]", "movzx~r10d,[yte ptr [rsp+0]", "mov~r11,rax", "mov~r9,[rsp+0]"]], [0, 0, 251, 0, 0, 2, 0, 0, 15, -1, 0.006269169427064164, ["cmp     r13, r15", "jbe     short loc_DCDD"], ["cmp~r13,r15", "jbe~FOO"]], [1, 0, 251, 0, 0, 5, 3, 1, 14, -1, 0.1386946386946387, ["mov     eax, esi", "xor     eax, 1", "and     eax, r8d", "test    r10b, r10b", "jz      short loc_DCE1"], ["mov~eax,esi", "xor~eax,0", "and~eax,r8d", "test~r10b,r10b", "jz~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [r14+r15], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [2, 0, 251, 0, 0, 3, 0, 1, 9, -1, 0.004409975988923354, ["mov     edx, 0Bh; jumptable 000000000000D3EE case 11", "mov     ebx, 76h ; 'v'", "jmp     c_escape"], ["mov~edx,0", "mov~ebx,0", "jmp~FOO"]], [0, 0, 6, 0, 0, 4, 0, 1, 15, -1, 0.0032634032634032634, ["movzx   ebx, [rsp+0E8h+c_and_shell_quote_compat]", "mov     i, argsize_0", "mov     [rsp+0E8h+backslash_escapes], bl", "jmp     force_outer_quoting_style"], ["movzx~ebx,[rsp+0]", "mov~i,argsize_0", "mov~[rsp+0],bl", "jmp~FOO"]], [1, 0, 251, 1, 0, 1, 0, 0, 16, -1, 0.0060974113605692555, ["add     r15, 1"], ["add~r15,0"]], [0, 0, 13, 0, 0, 2, 0, 1, 11, -1, 0.0002821739663844927, ["movzx   eax, [rsp+0E8h+encountered_single_quote]", "jmp     loc_E2FC"], ["movzx~eax,[rsp+0]", "jmp~FOO"]], [1, 0, 251, 0, 0, 6, 2, 1, 10, -1, 0.023310023310023312, ["test    buffersize_0, buffersize_0", "setz    al", "cmp     [rsp+0E8h+orig_buffersize], 0", "setnz   dl", "and     al, dl", "jz      loc_E3DC"], ["test~buffersize_0,buffersize_0", "setz~al", "cmp~[rsp+0],0", "setnz~dl", "and~al,dl", "jz~FOO"]], [0, 0, 251, 0, 0, 6, 1, 0, 3, -1, 0.12738314317261687, ["xor     r11d, r11d", "mov     rax, argsize_0", "mov     r8d, r12d", "mov     argsize_0, r11", "mov     r11, argsize_0", "nop     word ptr [rax+rax+00h]"], ["xor~r11d,r11d", "mov~rax,argsize_0", "mov~r8d,r12d", "mov~argsize_0,r11", "mov~r11,argsize_0", "nop~[ord ptr [rax+0]"]], [5, 0, 251, 0, 0, 9, 0, 1, 6, -1, 0.02285609127714391, ["lea     rbx, asc_15315; \"'\"", "mov     byte ptr [r14], 27h ; '''", "mov     [rsp+0E8h+quoting_style], 2", "mov     r15d, 1", "mov     [rsp+0E8h+quote_string_len], 1", "mov     [rsp+0E8h+c_and_shell_quote_compat], 0", "mov     [rsp+0E8h+s2], rbx", "mov     [rsp+0E8h+encountered_single_quote], al", "jmp     loc_D2D3"], ["lea~rbx,<TAG>", "mov~<TAG>,0", "mov~[rsp+0],0", "mov~r15d,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rbx", "mov~[rsp+0],al", "jmp~FOO"]], [4, 0, 251, 0, 0, 7, 0, 1, 5, -1, 0.00923813029076187, ["lea     rax, unk_15313", "mov     [rsp+0E8h+c_and_shell_quote_compat], 0", "mov     [rsp+0E8h+backslash_escapes], 1", "mov     [rsp+0E8h+quote_string_len], 1", "mov     r15d, 1", "mov     [rsp+0E8h+s2], rax", "jmp     loc_D2D3"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r15d,0", "mov~[rsp+0],rax", "jmp~FOO"]], [7, 0, 251, 0, 0, 12, 2, 1, 2, -1, 0.0020447388868441506, ["lea     rax, unk_15313; jumptable 000000000000D291 case 6", "mov     [rsp+0E8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0E8h+encountered_single_quote], 0", "xor     r12d, r12d", "mov     [rsp+0E8h+orig_buffersize], 0", "mov     [rsp+0E8h+c_and_shell_quote_compat], 1", "mov     [rsp+0E8h+backslash_escapes], 1", "mov     [rsp+0E8h+quote_string_len], 1", "xor     r15d, r15d", "mov     [rsp+0E8h+s2], rax", "mov     [rsp+0E8h+quoting_style], 5", "jmp     loc_D2D3"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r12d,r12d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [7, 0, 251, 0, 0, 10, 2, 1, 2, -1, 0.0020447388868441506, ["mov     [rsp+0E8h+all_c_and_shell_quote_compat], 1; jumptable 000000000000D291 case 7", "mov     [rsp+0E8h+encountered_single_quote], 0", "xor     r12d, r12d", "mov     [rsp+0E8h+orig_buffersize], 0", "mov     [rsp+0E8h+c_and_shell_quote_compat], 0", "xor     r15d, r15d", "mov     [rsp+0E8h+backslash_escapes], 1", "mov     [rsp+0E8h+quote_string_len], 0", "mov     [rsp+0E8h+s2], 0", "jmp     loc_D2D3"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r12d,r12d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [4, 0, 251, 0, 1, 13, 2, 2, 4, -1, 0.03695252116304748, ["test    ebx, ebx", "mov     rbx, [rsp+0E8h+quote_string]", "setnz   [rsp+0E8h+c_and_shell_quote_compat]", "xor     r12d, r12d", "mov     rdi, rbx; s", "call    _strlen", "mov     [rsp+0E8h+s2], rbx", "mov     [rsp+0E8h+quote_string_len], rax", "mov     [rsp+0E8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0E8h+encountered_single_quote], 0", "mov     [rsp+0E8h+orig_buffersize], 0", "mov     [rsp+0E8h+backslash_escapes], 1", "jmp     loc_D2D3"], ["test~ebx,ebx", "mov~rbx,[rsp+0]", "setnz~[rsp+0]", "xor~r12d,r12d", "mov~rdi,rbx", "call~FOO", "mov~[rsp+0],rbx", "mov~[rsp+0],rax", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [6, 0, 251, 0, 0, 11, 2, 1, 3, -1, 0.00307937676358729, ["lea     rax, unk_15313", "mov     [rsp+0E8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0E8h+encountered_single_quote], 0", "xor     r12d, r12d", "mov     [rsp+0E8h+orig_buffersize], 0", "mov     [rsp+0E8h+c_and_shell_quote_compat], 1", "mov     [rsp+0E8h+backslash_escapes], 1", "mov     [rsp+0E8h+quote_string_len], 1", "xor     r15d, r15d", "mov     [rsp+0E8h+s2], rax", "jmp     loc_D2D3"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r12d,r12d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],rax", "jmp~FOO"]], [2, 0, 251, 0, 0, 3, 0, 1, 9, -1, 0.0016341553183658415, ["mov     edx, 0Ah; jumptable 000000000000D3EE case 10", "mov     ebx, 6Eh ; 'n'", "jmp     c_and_shell_escape"], ["mov~edx,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 251, 0, 0, 4, 1, 1, 10, -1, 5.4682159945317844e-05, ["mov     edx, 0Dh; jumptable 000000000000D77A case 13", "xor     r10d, r10d", "mov     ebx, 72h ; 'r'", "jmp     c_and_shell_escape"], ["mov~edx,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [0, 0, 251, 0, 1, 9, 0, 1, 10, -1, 0.0, ["mov     rdi, [rsp+0E8h+arg]; s", "mov     byte ptr [rsp+0E8h+argsize], r8b", "mov     byte ptr [rsp+0E8h+pending_shell_escape_end], r10b", "mov     [rsp+0E8h+var_B8], r9", "call    _strlen", "movzx   r8d, byte ptr [rsp+0E8h+argsize]", "movzx   r10d, byte ptr [rsp+0E8h+pending_shell_escape_end]", "mov     r11, rax", "mov     r9, [rsp+0E8h+var_B8]"], ["mov~rdi,[rsp+0]", "mov~[yte ptr [rsp+0],r8b", "mov~[yte ptr [rsp+0],r10b", "mov~[rsp+0],r9", "call~FOO", "movzx~r8d,[yte ptr [rsp+0]", "movzx~r10d,[yte ptr [rsp+0]", "mov~r11,rax", "mov~r9,[rsp+0]"]], [0, 0, 251, 0, 0, 1, 1, 0, 10, -1, 0.0004968715495031285, ["xor     r10d, r10d; jumptable 000000000000D77A case 39"], ["xor~r10d,r10d"]], [0, 0, 251, 0, 0, 2, 1, 1, 16, -1, 0.028701999754631335, ["test    al, al", "jz      loc_E0EE"], ["test~al,al", "jz~FOO"]], [1, 0, 251, 0, 0, 4, 0, 1, 4, -1, 0.6373328425960005, ["cmp     argsize_0, i", "setnz   r12b", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_D302"], ["cmp~argsize_0,i", "setnz~r12b", "cmp~argsize_0,0", "jnz~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 12, -1, 0.052619310514047356, ["cmp     bytes, 0FFFFFFFFFFFFFFFFh", "jz      loc_E185"], ["cmp~bytes,0", "jz~FOO"]], [0, 0, 251, 1, 1, 12, 1, 2, 11, -1, 0.07276407802723593, ["mov     rax, [rsp+0E8h+arg]", "lea     r14, [i+m+0]", "mov     rdx, [rsp+0E8h+var_B8]", "mov     rcx, [rsp+0E8h+ps]; ps", "mov     rdi, [rsp+0E8h+pending_shell_escape_end]; pwc", "lea     r13, [rax+r14]", "sub     rdx, r14; n", "mov     rsi, r13; s", "call    rpl_mbrtowc", "test    rax, rax", "mov     r15, rax", "jz      short loc_DBB1"], ["mov~rax,[rsp+0]", "lea~r14,[i+0]", "mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rdi,[rsp+0]", "lea~r13,<TAG>", "sub~rdx,r14", "mov~rsi,r13", "call~FOO", "test~rax,rax", "mov~r15,rax", "jz~FOO"]], [0, 0, 251, 0, 0, 2, 0, 0, 17, -1, 0.012489265120844069, ["cmp     r13, r15", "jbe     short loc_DD00"], ["cmp~r13,r15", "jbe~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 9, -1, 0.000122684333210649, ["mov     eax, edx"], ["mov~eax,edx"]], [1, 0, 251, 0, 0, 2, 0, 1, 8, -1, 0.030008587903324748, ["cmp     [rsp+0E8h+encountered_single_quote], 0", "jz      loc_E2FA"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 18, -1, 0.0, ["mov     byte ptr [r14+r15], 27h ; '''"], ["mov~<TAG>,0"]], [1, 0, 251, 0, 0, 2, 0, 1, 10, -1, 0.0028567923304765393, ["mov     ebx, 76h ; 'v'; jumptable 000000000000D77A case 11", "jmp     loc_D5A0"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 251, 0, 0, 3, 0, 0, 5, -1, 0.0, ["mov     rax, [rsp+0E8h+arg]", "cmp     byte ptr [rax+i], 0", "setnz   r12b"], ["mov~rax,[rsp+0]", "cmp~<TAG>,0", "setnz~r12b"]], [1, 0, 251, 0, 0, 2, 0, 1, 10, -1, 0.0028567923304765393, ["mov     ebx, 61h ; 'a'; jumptable 000000000000D77A case 7", "jmp     loc_D5A0"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 12, 0, 0, 3, 1, 1, 8, -1, 0.03031529873635137, ["mov     rbx, [rsp+0E8h+s2]", "test    rbx, rbx", "jz      short loc_E332"], ["mov~rbx,[rsp+0]", "test~rbx,rbx", "jz~FOO"]], [1, 0, 251, 0, 0, 4, 2, 1, 7, -1, 0.06287572077045761, ["mov     eax, ebx", "xor     eax, 1", "and     dl, al", "jz      loc_E2FC"], ["mov~eax,ebx", "xor~eax,0", "and~dl,al", "jz~FOO"]], [0, 0, 251, 0, 0, 2, 1, 1, 5, -1, 0.6371610845295056, ["test    r12b, r12b", "jz      loc_D960"], ["test~r12b,r12b", "jz~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 15, -1, 0.012513801987486198, ["cmp     byte ptr [rcx], 0", "jnz     short loc_E167"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 251, 0, 0, 14, 0, 0, 14, -1, 0.021445221445221447, ["mov     r11, [rsp+0E8h+var_B8]", "mov     rsi, r14", "mov     rcx, r13", "mov     bytes, m", "mov     rdi, rbx", "movzx   r8d, [rsp+0E8h+var_6B]", "movzx   ebx, [rsp+0E8h+c]", "mov     r9, [rsp+0E8h+var_60]", "cmp     rsi, r11", "movzx   r10d, [rsp+0E8h+var_69]", "mov     bytes, [rsp+0E8h+var_68]", "mov     r14, [rsp+0E8h+argsize]", "mov     r13, [rsp+0E8h+buffersize]", "jnb     short loc_E178"], ["mov~r11,[rsp+0]", "mov~rsi,r14", "mov~rcx,r13", "mov~bytes,m", "mov~rdi,rbx", "movzx~r8d,[rsp+0]", "movzx~ebx,[rsp+0]", "mov~r9,[rsp+0]", "cmp~rsi,r11", "movzx~r10d,[rsp+0]", "mov~bytes,[rsp+0]", "mov~r14,[rsp+0]", "mov~r13,[rsp+0]", "jnb~FOO"]], [0, 0, 251, 0, 0, 3, 0, 0, 18, -1, 0.01231750705434916, ["lea     rax, [r15+1]", "cmp     r13, len", "jbe     short loc_DD0F"], ["lea~rax,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 9, -1, 0.019212366580787635, ["test    al, al", "jz      short loc_E332"], ["test~al,al", "jz~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 19, -1, 0.0, ["mov     byte ptr [r14+r15+1], 27h ; '''"], ["mov~[yte ptr [r14+0],0"]], [2, 1, 3, 2, 1, 14, 0, 2, 10, -1, 7.36105999263894e-05, ["sub     rsp, 8", "mov     r8d, 5; quoting_style", "mov     rcx, r11; argsize", "push    [rsp+0F0h+quote_string]; right_quote", "push    [rsp+0F8h+quote_string_0]; left_quote", "mov     rdi, r14; buffer", "push    [rsp+100h+var_C8]; quote_these_too", "mov     r9d, [rsp+108h+flags]; flags", "mov     rdx, [rsp+108h+arg]; arg", "mov     rsi, [rsp+108h+orig_buffersize]; buffersize", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r15, len", "jmp     loc_DDD9"], ["sub~rsp,0", "mov~r8d,0", "mov~rcx,r11", "push~[rsp+0]", "push~[rsp+0]", "mov~rdi,r14", "push~[rsp+0]", "mov~r9d,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "call~FOO", "add~rsp,<STR>", "mov~r15,len", "jmp~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 9, -1, 0.0266347687400319, ["cmp     [rsp+0E8h+all_c_and_shell_quote_compat], 0", "jnz     loc_E39D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [4, 0, 252, 0, 0, 5, 1, 0, 4, -1, 0.0015642252484357748, ["mov     byte ptr [buffer], 22h ; '\"'", "mov     [rsp+0E8h+all_c_and_shell_quote_compat], 1", "xor     r12d, r12d", "mov     [rsp+0E8h+encountered_single_quote], 0", "mov     [rsp+0E8h+orig_buffersize], 0"], ["mov~<TAG>,0", "mov~[rsp+0],0", "xor~r12d,r12d", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [0, 0, 10, 0, 0, 4, 1, 1, 10, -1, 0.01607164765059502, ["movzx   ecx, byte ptr [rbx]", "mov     rax, rbx", "test    cl, cl", "jz      short loc_E332"], ["movzx~ecx,<TAG>", "mov~rax,rbx", "test~cl,cl", "jz~FOO"]], [1, 0, 251, 0, 0, 4, 1, 1, 14, -1, 0.021862348178137654, ["cmp     [rsp+0E8h+quoting_style], 2", "setz    al", "and     al, [rsp+0E8h+c_and_shell_quote_compat]", "jnz     loc_DD20"], ["cmp~[rsp+0],0", "setz~al", "and~al,[rsp+0]", "jnz~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 13, -1, 0.046546436020120235, ["cmp     bytes, 0FFFFFFFFFFFFFFFEh", "jz      loc_E111"], ["cmp~bytes,0", "jz~FOO"]], [2, 0, 251, 0, 0, 4, 1, 1, 10, -1, 5.4682159945317844e-05, ["mov     edx, 9; jumptable 000000000000D77A case 9", "xor     r10d, r10d", "mov     ebx, 74h ; 't'", "jmp     c_and_shell_escape"], ["mov~edx,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [2, 0, 251, 0, 0, 2, 0, 0, 9, -1, 0.0016341553183658415, ["mov     edx, 9; jumptable 000000000000D3EE case 9", "mov     ebx, 74h ; 't'"], ["mov~edx,0", "mov~ebx,0"]], [0, 0, 9, 0, 0, 1, 0, 0, 13, -1, 0.0, ["mov     [r14+len], cl"], ["mov~<TAG>,cl"]], [1, 0, 251, 0, 0, 7, 1, 1, 6, -1, 0.5633909949699424, ["cmp     [rsp+0E8h+quoting_style], 2", "mov     rdi, [rsp+0E8h+arg]; s", "lea     r9, [rdi+i]", "setnz   al", "and     al, [rsp+0E8h+backslash_escapes]", "mov     r10d, eax", "jz      loc_D3D0"], ["cmp~[rsp+0],0", "mov~rdi,[rsp+0]", "lea~r9,<TAG>", "setnz~al", "and~al,[rsp+0]", "mov~r10d,eax", "jz~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 15, -1, 0.015703594650963073, ["cmp     bytes, 1", "jz      loc_DB89"], ["cmp~bytes,0", "jz~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 10, -1, 0.0028567923304765393, ["mov     ebx, 62h ; 'b'; jumptable 000000000000D77A case 8", "jmp     loc_D5A0"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 14, -1, 0.000245368666421298, ["mov     r15, len"], ["mov~r15,len"]], [0, 0, 251, 0, 0, 3, 1, 1, 7, -1, 0.10270606586396064, ["mov     rax, [rsp+0E8h+quote_string_len]", "test    rax, rax", "jz      loc_D760"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 251, 0, 0, 2, 1, 1, 10, -1, 0.015151515151515152, ["xor     r10d, r10d", "jmp     loc_D3D0"], ["xor~r10d,r10d", "jmp~FOO"]], [0, 0, 251, 0, 1, 12, 1, 2, 10, -1, 0.00971484655695182, ["mov     rdx, [rsp+0E8h+quote_string_len]; n", "mov     rsi, [rsp+0E8h+s2]; s2", "mov     rdi, r9; s1", "mov     [rsp+0E8h+argsize], argsize_0", "mov     byte ptr [rsp+0E8h+pending_shell_escape_end], r8b", "mov     [rsp+0E8h+var_B8], r9", "call    _memcmp", "test    eax, eax", "mov     r9, [rsp+0E8h+var_B8]", "movzx   r8d, byte ptr [rsp+0E8h+pending_shell_escape_end]", "mov     r11, [rsp+0E8h+argsize]", "jnz     loc_D930"], ["mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,r9", "mov~[rsp+0],argsize_0", "mov~[yte ptr [rsp+0],r8b", "mov~[rsp+0],r9", "call~FOO", "test~eax,eax", "mov~r9,[rsp+0]", "movzx~r8d,[yte ptr [rsp+0]", "mov~r11,[rsp+0]", "jnz~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 10, -1, 0.057908991593202216, ["cmp     [rsp+0E8h+backslash_escapes], 0", "jnz     short loc_D5A0"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 251, 0, 0, 3, 0, 1, 9, -1, 0.004409975988923354, ["mov     edx, 8; jumptable 000000000000D3EE case 8", "mov     ebx, 62h ; 'b'", "jmp     short c_escape"], ["mov~edx,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 251, 0, 0, 3, 0, 1, 11, -1, 0.004150819940293625, ["mov     edx, 5Ch ; '\\'", "mov     ebx, 5Ch ; '\\'", "jmp     c_escape"], ["mov~edx,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 251, 0, 0, 4, 1, 1, 10, -1, 7.36105999263894e-05, ["mov     edx, 0Ch; jumptable 000000000000D77A case 12", "xor     r10d, r10d", "mov     ebx, 66h ; 'f'", "jmp     c_escape"], ["mov~edx,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [0, 0, 251, 0, 0, 5, 0, 1, 16, -1, 0.012685560053981108, ["mov     rdi, [rsp+0E8h+arg]", "lea     rcx, [rdi+bytes]", "lea     rdx, [rdi+r14+1]", "lea     r8, [rcx+r14]", "jmp     short loc_DD4D"], ["mov~rdi,[rsp+0]", "lea~rcx,<TAG>", "lea~rdx,[rdi+0]", "lea~r8,<TAG>", "jmp~FOO"]], [0, 0, 252, 0, 0, 1, 0, 1, 8, -1, 0.01236658078763342, ["jmp     loc_DFFC"], ["jmp~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 13, -1, 0.0, ["mov     byte ptr [r14+len], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 0, 251, 0, 0, 3, 2, 0, 11, -1, 0.003189792663476874, ["mov     ebx, edx", "xor     r12d, r12d", "xor     eax, eax"], ["mov~ebx,edx", "xor~r12d,r12d", "xor~eax,eax"]], [0, 0, 251, 0, 0, 1, 0, 1, 16, -1, 0.0030180345969819658, ["jmp     short loc_E178"], ["jmp~FOO"]], [1, 1, 251, 0, 1, 15, 2, 1, 9, -1, 0.09806158753527175, ["mov     [rsp+0E8h+pending_shell_escape_end], argsize_0", "mov     byte ptr [rsp+0E8h+var_B8], r8b", "mov     byte ptr [rsp+0E8h+ps], r10b", "call    ___ctype_b_loc", "mov     rcx, [rax]", "movzx   edx, bl", "movzx   r10d, byte ptr [rsp+0E8h+ps]", "movzx   r8d, byte ptr [rsp+0E8h+var_B8]", "mov     r11, [rsp+0E8h+pending_shell_escape_end]", "mov     edi, 1", "movzx   eax, word ptr [rcx+rdx*2]", "and     ax, 4000h", "setnz   r12b", "setz    al", "and     al, [rsp+0E8h+backslash_escapes]"], ["mov~[rsp+0],argsize_0", "mov~[yte ptr [rsp+0],r8b", "mov~[yte ptr [rsp+0],r10b", "call~FOO", "mov~rcx,<TAG>", "movzx~edx,bl", "movzx~r10d,[yte ptr [rsp+0]", "movzx~r8d,[yte ptr [rsp+0]", "mov~r11,[rsp+0]", "mov~edi,0", "movzx~eax,<TAG>", "and~ax,<STR>", "setnz~r12b", "setz~al", "and~al,[rsp+0]"]], [1, 0, 251, 0, 0, 2, 0, 1, 9, -1, 0.026311699995910466, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 000000000000D3EE case 92", "jz      loc_D940"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 251, 0, 0, 2, 1, 1, 10, -1, 0.10781499202551835, ["test    al, al", "jnz     loc_E0E1"], ["test~al,al", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 8, -1, 0.014366335418967, ["cmp     [rsp+0E8h+backslash_escapes], 0", "jz      short loc_DDA0"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 6, 0, 0, 5, 0, 1, 11, -1, 0.0002967792441476652, ["movzx   ebx, [rsp+0E8h+c_and_shell_quote_compat]", "mov     i, argsize_0", "mov     eax, edx", "mov     [rsp+0E8h+backslash_escapes], bl", "jmp     force_outer_quoting_style"], ["movzx~ebx,[rsp+0]", "mov~i,argsize_0", "mov~eax,edx", "mov~[rsp+0],bl", "jmp~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 7, -1, 0.004404367562262299, ["mov     [rsp+0E8h+quoting_style], 2", "jmp     force_outer_quoting_style"], ["mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 251, 1, 0, 4, 0, 1, 17, -1, 0.012722365353944302, ["movzx   ecx, byte ptr [rdx]", "sub     ecx, 5Bh ; '['", "cmp     cl, 21h ; '!'", "ja      short loc_DD40"], ["movzx~ecx,<TAG>", "sub~ecx,0", "cmp~cl,0", "ja~FOO"]], [1, 0, 251, 1, 0, 3, 0, 1, 18, -1, 0.008870077291129923, ["add     rdx, 1", "cmp     r8, rdx", "jz      loc_DB89"], ["add~rdx,0", "cmp~r8,rdx", "jz~FOO"]], [0, 0, 251, 0, 0, 1, 0, 0, 11, -1, 0.01977671451355662, ["mov     buffersize_0, [rsp+0E8h+orig_buffersize]"], ["mov~buffersize_0,[rsp+0]"]], [1, 0, 256, 1, 0, 4, 1, 1, 7, -1, 0.009434425223898908, ["add     r15, 1", "movzx   eax, byte ptr [rdx+len]", "test    al, al", "jnz     short loc_E1D0"], ["add~r15,0", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 12, -1, 0.013098597309123626, ["cmp     [rsp+0E8h+quote_string_len], 0", "jnz     loc_D94B"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 251, 1, 2, 10, 2, 3, 15, -1, 0.017666543982333457, ["mov     edi, [rsp+0E8h+w]; wc", "call    _iswprint", "mov     rdi, [rsp+0E8h+ps]; ps", "test    eax, eax", "mov     eax, 0", "cmovz   r12d, eax", "add     m, bytes", "call    _mbsinit", "test    eax, eax", "jz      short loc_DB33"], ["mov~edi,[rsp+0]", "call~FOO", "mov~rdi,[rsp+0]", "test~eax,eax", "mov~eax,0", "cmovz~r12d,eax", "add~m,bytes", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 251, 0, 0, 12, 1, 0, 10, -1, 0.07162311372837689, ["lea     rax, [rsp+0E8h+w]", "xor     ecx, ecx", "mov     [rsp+0E8h+c], bl", "mov     [rsp+0E8h+var_6B], r8b", "mov     c_0, rcx", "mov     [rsp+0E8h+var_60], r9", "mov     [rsp+0E8h+pending_shell_escape_end], rax", "mov     [rsp+0E8h+var_69], r10b", "mov     [rsp+0E8h+var_68], r15", "mov     [rsp+0E8h+argsize], r14", "mov     [rsp+0E8h+buffersize], buffersize_0", "mov     [rsp+0E8h+var_B8], r11"], ["lea~rax,[rsp+0]", "xor~ecx,ecx", "mov~[rsp+0],bl", "mov~[rsp+0],r8b", "mov~c_0,rcx", "mov~[rsp+0],r9", "mov~[rsp+0],rax", "mov~[rsp+0],r10b", "mov~[rsp+0],r15", "mov~[rsp+0],r14", "mov~[rsp+0],buffersize_0", "mov~[rsp+0],r11"]], [1, 0, 251, 0, 0, 2, 0, 1, 17, -1, 0.0, ["cmp     byte ptr [r9+m], 0", "jz      short loc_E175"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 251, 1, 0, 4, 0, 1, 16, -1, 0.006269169427064164, ["add     m, 1", "lea     rdx, [i+m+0]", "cmp     r11, rdx", "ja      short loc_E160"], ["add~m,0", "lea~rdx,[i+0]", "cmp~r11,rdx", "ja~FOO"]], [1, 0, 251, 0, 0, 11, 3, 1, 6, -1, 0.07053122316280211, ["cmp     [rsp+0E8h+quoting_style], 2", "movzx   ebx, [rsp+0E8h+c_and_shell_quote_compat]", "mov     r12d, r8d", "mov     i, argsize_0", "setz    dl", "mov     eax, ebx", "test    r15, r15", "setz    cl", "and     eax, edx", "and     al, cl", "jnz     loc_E3E6"], ["cmp~[rsp+0],0", "movzx~ebx,[rsp+0]", "mov~r12d,r8d", "mov~i,argsize_0", "setz~dl", "mov~eax,ebx", "test~r15,r15", "setz~cl", "and~eax,edx", "and~al,cl", "jnz~FOO"]], [1, 0, 251, 0, 0, 3, 0, 1, 8, -1, 0.07406102669260568, ["movzx   ebx, byte ptr [r9]", "cmp     bl, 7Eh ; '~'; switch 127 cases", "ja      short loc_D6F0; jumptable 000000000000D77A default case"], ["movzx~ebx,<TAG>", "cmp~bl,0", "ja~FOO"]], [0, 0, 251, 0, 0, 1, 0, 0, 17, -1, 0.0060851429272481905, ["mov     rdi, m"], ["mov~rdi,m"]], [1, 0, 251, 0, 0, 2, 0, 1, 10, -1, 0.00815850815850816, ["cmp     [rsp+0E8h+backslash_escapes], 0", "jz      loc_D790"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 251, 0, 0, 3, 1, 1, 15, -1, 0.02092994724573672, ["movzx   edx, [rsp+0E8h+backslash_escapes]", "xor     r12d, r12d", "jmp     loc_DBE6"], ["movzx~edx,[rsp+0]", "xor~r12d,r12d", "jmp~FOO"]], [1, 0, 251, 0, 0, 2, 0, 1, 11, -1, 0.013572976730871468, ["cmp     [rsp+0E8h+c_and_shell_quote_compat], 0", "jz      loc_D790"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 251, 0, 0, 3, 1, 1, 10, -1, 0.009434425223898908, ["xor     r10d, r10d; jumptable 000000000000D77A case 92", "cmp     [rsp+0E8h+backslash_escapes], 0", "jnz     loc_D57E"], ["xor~r10d,r10d", "cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 263, 0, 0, 2, 0, 1, 2, -1, 0.0002944423997055576, ["cmp     [rsp+0E8h+quoting_style], 0Ah; jumptable 000000000000D291 cases 8-10", "jz      short loc_DFF1"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 259, 0, 1, 5, 0, 2, 5, -1, 0.0, ["mov     esi, [rsp+0E8h+quoting_style]; s", "mov     rdi, rcx; msgid", "call    gettext_quote", "mov     [rsp+0E8h+quote_string], rax", "jmp     loc_DFF1"], ["mov~esi,[rsp+0]", "mov~rdi,rcx", "call~FOO", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 260, 0, 1, 9, 1, 2, 4, -1, 0.006416390626916943, ["lea     rsi, asc_15315; \"'\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rax", "mov     [rsp+0E8h+quote_string], rax", "lea     rax, asc_15315; \"'\"", "cmp     rcx, rax", "jz      loc_E374"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rax", "mov~[rsp+0],rax", "lea~rax,<TAG>", "cmp~rcx,rax", "jz~FOO"]], [0, 0, 251, 0, 0, 1, 0, 0, 11, -1, 0.00015540015540015543, ["xchg    ax, ax"], ["xchg~ax,ax"]], [1, 0, 251, 0, 0, 3, 0, 1, 7, -1, 0.4817007553849656, ["movzx   ebx, byte ptr [r9]", "cmp     bl, 7Eh ; '~'; switch 127 cases", "ja      loc_D6F8; jumptable 000000000000D3EE default case"], ["movzx~ebx,<TAG>", "cmp~bl,0", "ja~FOO"]], [1, 0, 251, 0, 0, 2, 0, 0, 13, -1, 0.000449842555105713, ["mov     ebx, 5Ch ; '\\'", "nop     word ptr [rax+rax+00h]"], ["mov~ebx,0", "nop~[ord ptr [rax+0]"]], [1, 0, 4, 0, 0, 4, 1, 0, 9, -1, 0.0, ["test    al, al", "mov     eax, 4", "cmovz   eax, [rsp+0E8h+quoting_style]", "mov     [rsp+0E8h+quoting_style], eax"], ["test~al,al", "mov~eax,0", "cmovz~eax,[rsp+0]", "mov~[rsp+0],eax"]], [0, 0, 251, 0, 0, 1, 1, 0, 11, -1, 0.07405226352594774, ["xor     r12d, r12d"], ["xor~r12d,r12d"]], [0, 0, 251, 0, 0, 1, 1, 0, 10, -1, 0.0008447692658218975, ["xor     r10d, r10d; jumptable 000000000000D77A case 0"], ["xor~r10d,r10d"]], [0, 0, 251, 0, 0, 2, 1, 0, 9, -1, 0.002392344497607656, ["xor     r10d, r10d; jumptable 000000000000D77A default case", "nop     dword ptr [rax+rax+00h]"], ["xor~r10d,r10d", "nop~[word ptr [rax+0]"]], [0, 0, 251, 0, 0, 11, 1, 1, 13, -1, 0.002834008097165992, ["mov     rdi, m", "movzx   r8d, [rsp+0E8h+var_6B]", "movzx   ebx, [rsp+0E8h+c]", "movzx   r10d, [rsp+0E8h+var_69]", "mov     r15, [rsp+0E8h+var_68]", "xor     r12d, r12d", "mov     r14, [rsp+0E8h+argsize]", "mov     r13, [rsp+0E8h+buffersize]", "mov     r11, [rsp+0E8h+var_B8]", "movzx   edx, [rsp+0E8h+backslash_escapes]", "jmp     loc_DBE6"], ["mov~rdi,m", "movzx~r8d,[rsp+0]", "movzx~ebx,[rsp+0]", "movzx~r10d,[rsp+0]", "mov~r15,[rsp+0]", "xor~r12d,r12d", "mov~r14,[rsp+0]", "mov~r13,[rsp+0]", "mov~r11,[rsp+0]", "movzx~edx,[rsp+0]", "jmp~FOO"]], [1, 0, 251, 0, 0, 4, 2, 1, 13, -1, 0.08741258741258742, ["mov     eax, r8d", "xor     eax, 1", "and     al, dl", "jz      short loc_D5F1"], ["mov~eax,r8d", "xor~eax,0", "and~al,dl", "jz~FOO"]], [0, 0, 251, 0, 0, 2, 0, 0, 14, -1, 0.018660287081339714, ["cmp     buffersize_0, r15", "jbe     short loc_D5CC"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 15, -1, 0.0, ["mov     byte ptr [r14+r15], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 251, 0, 0, 1, 0, 0, 12, -1, 0.002968960863697706, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 256, 0, 0, 1, 0, 0, 5, -1, 0.0004416635995583364, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [0, 0, 251, 0, 0, 3, 0, 0, 15, -1, 0.018488529014844806, ["lea     rdx, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_D5DB"], ["lea~rdx,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [r14+r15+1], 24h ; '$'"], ["mov~[yte ptr [r14+0],0"]], [3, 1, 3, 2, 1, 14, 1, 1, 9, -1, 0.008293460925039874, ["sub     rsp, 8", "mov     rcx, argsize_0; argsize", "mov     rsi, buffersize_0; buffersize", "push    [rsp+0F0h+quote_string]; right_quote", "push    [rsp+0F8h+quote_string_0]; left_quote", "mov     rdi, r14; buffer", "push    0; quote_these_too", "mov     r9d, [rsp+108h+flags]", "mov     r8d, [rsp+108h+quoting_style]; quoting_style", "mov     rdx, [rsp+108h+arg]; arg", "and     r9d, 0FFFFFFFDh; flags", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r15, len"], ["sub~rsp,0", "mov~rcx,argsize_0", "mov~rsi,buffersize_0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdi,r14", "push~0", "mov~r9d,[rsp+0]", "mov~r8d,[rsp+0]", "mov~rdx,[rsp+0]", "and~r9d,0", "call~FOO", "add~rsp,<STR>", "mov~r15,len"]], [1, 0, 251, 0, 0, 11, 2, 0, 12, -1, 0.036412710096920625, ["mov     edx, r12d", "mov     rdi, m", "movzx   r8d, [rsp+0E8h+var_6B]", "xor     edx, 1", "movzx   ebx, [rsp+0E8h+c]", "movzx   r10d, [rsp+0E8h+var_69]", "and     dl, [rsp+0E8h+backslash_escapes]", "mov     bytes, [rsp+0E8h+var_68]", "mov     r14, [rsp+0E8h+argsize]", "mov     r13, [rsp+0E8h+buffersize]", "mov     r11, [rsp+0E8h+var_B8]"], ["mov~edx,r12d", "mov~rdi,m", "movzx~r8d,[rsp+0]", "xor~edx,0", "movzx~ebx,[rsp+0]", "movzx~r10d,[rsp+0]", "and~dl,[rsp+0]", "mov~bytes,[rsp+0]", "mov~r14,[rsp+0]", "mov~r13,[rsp+0]", "mov~r11,[rsp+0]"]], [0, 0, 251, 0, 0, 3, 0, 0, 16, -1, 0.018316770948349898, ["lea     len, [r15+2]", "cmp     buffersize_0, len", "jbe     short loc_D5EA"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 251, 0, 0, 1, 0, 0, 17, -1, 0.0, ["mov     byte ptr [r14+r15+2], 27h ; '''"], ["mov~[yte ptr [r14+0],0"]], [1, 0, 251, 1, 0, 2, 0, 0, 17, -1, 0.018145012881854987, ["add     r15, 3", "mov     r8d, eax"], ["add~r15,0", "mov~r8d,eax"]], [0, 0, 251, 0, 0, 1, 1, 0, 10, -1, 0.0001104158998895841, ["xor     r10d, r10d; jumptable 000000000000D77A cases 123,125"], ["xor~r10d,r10d"]], [0, 0, 0, 0, 1, 1, 0, 1, 11, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [17, 143, 186, 8, 287, 456, 7, 1036, 0.03607, 7, 40], "succs": [[9, 63], [0, 244], [143], [2, 4], [2], [], [5, 286], [90, 19], [47, 7], [25, 10], [25], [28], [11, 28], [249], [249, 13], [243], [273, 15], [53, 31], [17, 53], [34, 130], [243], [20, 247], [33], [22], [131, 22], [41, 42], [40, 1], [192, 97, 165, 166, 8, 12, 170, 171, 108, 48, 241, 232, 180, 26, 124, 125, 222], [38, 39], [243], [276, 29], [57, 37], [43, 181], [32, 178], [130, 69], [186], [35, 164], [280], [45], [49, 38], [44, 238], [64, 68], [41], [104, 58], [197], [65, 79], [45], [45], [45], [136, 45], [45], [45], [45], [45], [45], [45], [73], [56, 73], [76, 62], [70, 71], [59, 61], [59], [76], [89, 237], [63], [78, 79], [277, 190], [66, 190], [64], [98], [69], [69], [77, 87], [72, 74], [72], [82], [82, 75], [87], [98, 93], [99, 78], [187], [80, 217], [96, 85], [53, 95], [83, 46], [96], [55], [86, 55], [105, 51], [88, 94], [243], [90, 117], [90, 100], [16, 98], [98], [107, 53], [104], [231], [112, 16], [98], [98], [33], [101, 103], [101], [106, 115], [51, 147], [115], [18, 111], [39], [122, 157], [262, 113, 168, 109, 189, 145, 119, 188, 157], [53], [116], [152, 121], [39], [133, 134], [120, 143], [116], [196, 116], [185], [123, 132], [36], [36], [132], [49], [49], [49], [49], [153, 110], [60], [129, 60], [242], [140, 135], [144, 141], [133], [140], [243], [136, 231], [264], [264, 138], [143], [144], [193, 226, 195, 261, 167, 234, 204, 206, 271, 114, 52, 149, 285, 270, 221, 126, 127], [146, 163], [155, 143], [172], [163], [154, 148], [154], [137], [6], [6, 150], [185], [], [156, 54], [102], [54], [172], [159, 223], [227, 158], [158], [102], [102], [197], [185], [137], [92, 84], [166], [81, 191], [194, 252], [240, 169], [231], [185], [229, 230], [173, 175], [176, 173], [173], [179, 182], [177, 118], [182], [231], [243], [118], [207], [248, 183], [197], [185], [185], [185], [185], [185], [185], [137], [137], [252], [8], [200, 162], [209, 205], [272, 220], [281, 198], [203, 212], [207], [216, 201], [212], [269], [209], [269], [213, 151], [202, 207], [224, 255], [254, 239], [210, 259], [161, 214], [218, 151], [161], [6], [184, 215], [187], [160, 151], [225, 251], [219, 211], [137], [137], [159], [266, 228], [235, 251], [269], [151], [256, 174], [266], [229, 30], [269, 238], [231], [231], [231], [246], [190], [89], [79], [259], [242], [258, 91], [50, 23], [280, 268], [243], [243], [21, 247], [251, 246], [186], [236, 14], [267, 117], [281, 199], [199], [257, 254], [257, 253], [208, 245], [142, 271], [259], [233, 260], [24], [233, 250], [265, 260], [67, 139], [67], [67, 263], [233], [170, 27], [269], [280], [16], [1], [170], [24], [274, 3], [275, 278], [278], [266], [14], [282, 279], [282], [6], [24], [283, 284], [284], [3], [12], []], "fname": "quotearg_buffer_restyled", "n_num": 287}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 11, 0, 0, 2, 0, 1, 0, 0, 0.07051282051282051, ["cmp     cs:nslots, r15d", "jg      short loc_E4E5"], ["cmp~<TAG>,r15d", "jg~FOO"]], [1, 0, 13, 1, 1, 18, 1, 2, 0, 3, 0.0, ["push    r15", "push    r14", "movsxd  r15, edi", "push    r13", "push    r12", "mov     r14, argsize", "push    rbp", "push    rbx", "mov     rbp, options", "sub     rsp, 28h", "mov     [rsp+58h+arg], arg_0", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "test    r15d, r15d", "mov     rbx, cs:slotvec_0", "mov     [rsp+58h+e], eax", "js      loc_E5E1"], ["push~r15", "push~r14", "movsxd~r15,edi", "push~r13", "push~r12", "mov~r14,argsize", "push~rbp", "push~rbx", "mov~rbp,options", "sub~rsp,0", "mov~[rsp+0],arg_0", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "test~r15d,r15d", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [1, 0, 8, 1, 0, 6, 0, 1, 3, -1, 0.08974358974358974, ["lea     r12d, [n+1]", "lea     e_0, slotvec0", "movsxd  rsi, r12d", "shl     rsi, 4; n", "cmp     sv, rax", "jz      loc_E5C0"], ["lea~r12d,[n+0]", "lea~e_0,<TAG>", "movsxd~rsi,r12d", "shl~rsi,0", "cmp~sv,rax", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 2, 1, 0.0641025641025641, ["cmp     r15d, 7FFFFFFFh", "jz      loc_E5E6"], ["cmp~r15d,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.10256410256410256, ["lea     rsi, [qsize+1]", "lea     qsize, slot0", "cmp     val, rax", "mov     [rbx], size_0", "jz      short loc_E55F"], ["lea~rsi,[qsize+0]", "lea~qsize,<TAG>", "cmp~val,rax", "mov~<TAG>,size_0", "jz~FOO"]], [3, 1, 4, 4, 1, 24, 1, 2, 2, -1, 0.1794871794871795, ["mov     eax, [options+4]", "shl     n, 4", "sub     rsp, 8", "add     sv, r15", "lea     r15, [options+8]", "mov     r8d, [options+0]; quoting_style", "mov     r11, [rbx]", "mov     r12, [rbx+8]", "mov     rcx, argsize; argsize", "or      eax, 1", "mov     [rsp+60h+flags], eax", "push    qword ptr [options+30h]; right_quote", "mov     r9d, eax; flags", "push    qword ptr [options+28h]; left_quote", "push    r15; quote_these_too", "mov     rsi, size_0; buffersize", "mov     rdx, [rsp+78h+arg]; arg", "mov     rdi, val; buffer", "mov     [rsp+78h+size], size_0", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+58h+size]", "cmp     r11, qsize", "ja      short loc_E5A1"], ["mov~eax,[options+0]", "shl~n,0", "sub~rsp,0", "add~sv,r15", "lea~r15,[options+0]", "mov~r8d,[options+0]", "mov~r11,<TAG>", "mov~r12,[rbx+0]", "mov~rcx,argsize", "or~eax,0", "mov~[rsp+0],eax", "push~[word ptr [options+0]", "mov~r9d,eax", "push~[word ptr [options+0]", "push~r15", "mov~rsi,size_0", "mov~rdx,[rsp+0]", "mov~rdi,val", "mov~[rsp+0],size_0", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,qsize", "ja~FOO"]], [0, 0, 6, 0, 1, 4, 0, 1, 4, -1, 0.04487179487179487, ["mov     rdi, sv; p", "call    xrealloc", "mov     sv, rax", "mov     cs:slotvec_0, sv"], ["mov~rdi,sv", "call~FOO", "mov~sv,rax", "mov~<TAG>,sv"]], [2, 0, 5, 4, 1, 10, 1, 1, 5, -1, 0.1282051282051282, ["movsxd  rdi, cs:nslots", "mov     edx, r12d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, r12d"], ["movsxd~rdi,<TAG>", "mov~edx,r12d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,r12d"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, -1, 0.0, ["mov     rdi, val; ptr", "mov     [rsp+58h+size], size_0", "call    free", "mov     rsi, [rsp+58h+size]"], ["mov~rdi,val", "mov~[rsp+0],size_0", "call~FOO", "mov~rsi,[rsp+0]"]], [0, 0, 6, 0, 1, 7, 1, 2, 4, -1, 0.04487179487179487, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     sv, rax", "mov     cs:slotvec_0, sv", "movups  xmmword ptr [sv], xmm0", "jmp     loc_E4BD"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~sv,rax", "mov~<TAG>,sv", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 1, 1, 2, 2, 17, 0, 2, 4, -1, 0.01282051282051282, ["mov     rdi, rsi; n", "mov     [rsp+58h+size], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, [options+0]; quoting_style", "push    qword ptr [options+30h]; right_quote", "push    qword ptr [options+28h]; left_quote", "mov     rcx, argsize; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+78h+flags]; flags", "mov     rdi, rax; buffer", "mov     rdx, [rsp+78h+arg]; arg", "mov     rsi, [rsp+78h+size]; buffersize", "mov     val, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,[options+0]", "push~[word ptr [options+0]", "push~[word ptr [options+0]", "mov~rcx,argsize", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~val,rax", "call~FOO", "add~rsp,<STR>"]], [1, 0, 0, 1, 0, 11, 0, 0, 3, -1, 0.0, ["mov     eax, [rsp+58h+e]", "mov     [r13+0], eax", "add     rsp, 28h", "mov     rax, val", "pop     rbx", "pop     options", "pop     val", "pop     r13", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~[r13+0],eax", "add~rsp,0", "mov~rax,val", "pop~rbx", "pop~options", "pop~val", "pop~r13", "pop~argsize", "pop~r15", "retn"]]], "func_feature": [10, 4, 17, 0, 14, 17, 13, 112, 0.05266, 4, 13], "succs": [[3, 7], [0, 5], [8, 11], [2, 4], [], [], [10, 12], [13, 6], [9], [7], [12], [9], [13], []], "fname": "quotearg_n_options", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 0, 0, 2, 18, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, o", "call    ___errno_location", "mov     r12d, [p]", "mov     rbp, p", "lea     p, default_quoting_options", "test    o, o", "mov     esi, 38h ; '8'; s", "cmovz   o, p", "mov     rdi, rbx; p", "call    xmemdup", "mov     [rbp+0], r12d", "pop     rbx", "pop     rbp", "pop     e", "retn"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,o", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,p", "lea~p,<TAG>", "test~o,o", "mov~esi,0", "cmovz~o,p", "mov~rdi,rbx", "call~FOO", "mov~[rbp+0],r12d", "pop~rbx", "pop~rbp", "pop~e", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 18, 0.0, 1, 0], "succs": [[]], "fname": "clone_quoting_options", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     eax, [rdi]", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~eax,<TAG>", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "get_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     [rdi], esi", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~<TAG>,esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[4, 0, 0, 1, 0, 19, 6, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    p, p", "mov     ecx, esi", "cmovz   p, rax", "mov     eax, esi", "and     ecx, 1Fh", "shr     al, 5", "movzx   eax, al", "lea     p, [p+rax*4+8]", "mov     esi, [p]", "mov     eax, esi", "shr     eax, cl", "xor     edx, eax", "and     eax, 1", "and     edx, 1", "shl     edx, cl", "xor     edx, esi", "mov     [p], edx", "retn"], ["lea~rax,<TAG>", "test~p,p", "mov~ecx,esi", "cmovz~p,rax", "mov~eax,esi", "and~ecx,0", "shr~al,0", "movzx~eax,al", "lea~p,[p+0]", "mov~esi,<TAG>", "mov~eax,esi", "shr~eax,cl", "xor~edx,eax", "and~eax,0", "and~edx,0", "shl~edx,cl", "xor~edx,esi", "mov~<TAG>,edx", "retn"]]], "func_feature": [0, 6, 0, 0, 1, 0, 0, 19, 0.0, 1, 1], "succs": [[]], "fname": "set_char_quoting", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0.0, ["lea     r, default_quoting_options", "test    o, o", "cmovz   o, r", "mov     eax, [o+4]", "mov     [o+4], esi", "retn"], ["lea~r,<TAG>", "test~o,o", "cmovz~o,r", "mov~eax,[o+0]", "mov~[o+0],esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 6, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_flags", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 0, 1, 1, 2, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]], [1, 0, 3, 0, 0, 6, 2, 1, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "test    left_quote, left_quote", "mov     dword ptr [o], 0Ah", "jz      short loc_E6F7"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "test~left_quote,left_quote", "mov~<TAG>,0", "jz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, 0, 0.16666666666666666, ["test    right_quote, right_quote", "jz      short loc_E6F7"], ["test~right_quote,right_quote", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["mov     [o+28h], left_quote", "mov     [o+30h], right_quote", "retn"], ["mov~[o+0],left_quote", "mov~[o+0],right_quote", "retn"]]], "func_feature": [1, 3, 3, 0, 4, 4, 0, 13, 0.04167, 1, 1], "succs": [[], [0, 2], [0, 3], []], "fname": "set_custom_quoting", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[3, 0, 0, 3, 2, 39, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "lea     r, default_quoting_options", "push    r13", "push    r12", "mov     r13, buffer", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, buffersize", "mov     r15, arg", "sub     rsp, 18h", "test    o, o", "cmovz   rbx, r", "mov     [rsp+48h+argsize], argsize_0", "call    ___errno_location", "mov     r12d, [r]", "mov     rbp, r", "lea     r, [p+8]", "sub     rsp, 8", "mov     r9d, [p+4]; flags", "push    qword ptr [p+30h]; right_quote", "mov     r8d, [p]; quoting_style", "push    qword ptr [p+28h]; left_quote", "mov     rdx, arg; arg", "push    r; quote_these_too", "mov     rcx, [rsp+68h+argsize]; argsize", "mov     rsi, buffersize; buffersize", "mov     rdi, buffer; buffer", "call    quotearg_buffer_restyled", "mov     [rbp+0], r12d", "add     rsp, 38h", "pop     p", "pop     rbp", "pop     e", "pop     buffer", "pop     buffersize", "pop     arg", "retn"], ["push~r15", "push~r14", "lea~r,<TAG>", "push~r13", "push~r12", "mov~r13,buffer", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,buffersize", "mov~r15,arg", "sub~rsp,0", "test~o,o", "cmovz~rbx,r", "mov~[rsp+0],argsize_0", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,r", "lea~r,[p+0]", "sub~rsp,0", "mov~r9d,[p+0]", "push~[word ptr [p+0]", "mov~r8d,<TAG>", "push~[word ptr [p+0]", "mov~rdx,arg", "push~r", "mov~rcx,[rsp+0]", "mov~rsi,buffersize", "mov~rdi,buffer", "call~FOO", "mov~[rbp+0],r12d", "add~rsp,0", "pop~p", "pop~rbp", "pop~e", "pop~buffer", "pop~buffersize", "pop~arg", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 39, 0.0, 1, 3], "succs": [[]], "fname": "quotearg_buffer", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 0, 1, 0, 9, 0, 0, 0, 0, 0.0, ["mov     rax, [rsp+68h+var_58]", "add     rsp, 38h", "pop     p", "pop     flags", "pop     size", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["mov~rax,[rsp+0]", "add~rsp,0", "pop~p", "pop~flags", "pop~size", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [3, 2, 2, 5, 4, 59, 7, 5, 0, 0, 0.0, ["push    r15", "push    r14", "lea     rax, default_quoting_options", "push    r13", "push    r12", "mov     r12, size", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, arg", "mov     r15, argsize", "sub     rsp, 38h", "test    o, o", "cmovz   rbx, rax", "xor     ebp, ebp", "call    ___errno_location", "test    size, size", "mov     r13, rax", "mov     eax, [rax]", "setz    bpl", "or      ebp, [p+4]", "lea     r10, [p+8]", "sub     rsp, 8", "mov     r8d, [p]; quoting_style", "mov     rcx, argsize; argsize", "mov     [rsp+70h+e], eax", "push    qword ptr [p+30h]; right_quote", "mov     rdx, arg; arg", "push    qword ptr [p+28h]; left_quote", "push    r10; quote_these_too", "xor     esi, esi; buffersize", "mov     r9d, ebp; flags", "xor     edi, edi; buffer", "mov     [rsp+88h+quote_these_too], r10", "call    quotearg_buffer_restyled", "lea     rsi, [rax+1]", "mov     [rsp+88h+var_40], rax", "add     rsp, 20h", "mov     rdi, bufsize_0; n", "mov     [rsp+68h+bufsize], bufsize_0", "call    xmalloc", "mov     [rsp+68h+var_58], rax", "sub     rsp, 8", "push    qword ptr [p+30h]; right_quote", "push    qword ptr [p+28h]; left_quote", "mov     r10, [rsp+80h+quote_these_too]", "mov     r9d, ebp; flags", "mov     r8d, [p]; quoting_style", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "mov     rdi, rax; buffer", "push    r10; quote_these_too", "mov     rsi, [rsp+88h+bufsize]; buffersize", "call    quotearg_buffer_restyled", "mov     eax, [rsp+88h+e]", "add     rsp, 20h", "test    size, size", "mov     [r13+0], eax", "jz      short loc_E84F"], ["push~r15", "push~r14", "lea~rax,<TAG>", "push~r13", "push~r12", "mov~r12,size", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,arg", "mov~r15,argsize", "sub~rsp,0", "test~o,o", "cmovz~rbx,rax", "xor~ebp,ebp", "call~FOO", "test~size,size", "mov~r13,rax", "mov~eax,<TAG>", "setz~bpl", "or~ebp,[p+0]", "lea~r10,[p+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~[rsp+0],eax", "push~[word ptr [p+0]", "mov~rdx,arg", "push~[word ptr [p+0]", "push~r10", "xor~esi,esi", "mov~r9d,ebp", "xor~edi,edi", "mov~[rsp+0],r10", "call~FOO", "lea~rsi,[rax+0]", "mov~[rsp+0],rax", "add~rsp,<STR>", "mov~rdi,bufsize_0", "mov~[rsp+0],bufsize_0", "call~FOO", "mov~[rsp+0],rax", "sub~rsp,0", "push~[word ptr [p+0]", "push~[word ptr [p+0]", "mov~r10,[rsp+0]", "mov~r9d,ebp", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~rdx,arg", "mov~rdi,rax", "push~r10", "mov~rsi,[rsp+0]", "call~FOO", "mov~eax,[rsp+0]", "add~rsp,<STR>", "test~size,size", "mov~[r13+0],eax", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     r11, [rsp+68h+var_40]", "mov     [size], r11"], ["mov~r11,[rsp+0]", "mov~<TAG>,r11"]]], "func_feature": [4, 7, 5, 2, 3, 3, 1, 70, 0.0, 1, 6], "succs": [[], [0, 2], [0]], "fname": "quotearg_alloc_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rcx, o", "xor     edx, edx", "jmp     quotearg_alloc_mem"], ["mov~rcx,o", "xor~edx,edx", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[], [0]], "fname": "quotearg_alloc", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 1, 3, 0, 1, 3, 0, 1, 0, 0, 0.0, ["call    free", "mov     cs:slotvec0.size, 100h", "mov     cs:slotvec0.val, rbx"], ["call~FOO", "mov~<TAG>,<STR>", "mov~<TAG>,rbx"]], [0, 0, 4, 0, 0, 4, 0, 1, 1, 2, 0.2857142857142857, ["mov     rdi, [sv+8]; ptr", "lea     rbx, slot0", "cmp     rdi, rbx", "jz      short loc_E8E9"], ["mov~rdi,[sv+0]", "lea~rbx,<TAG>", "cmp~rdi,rbx", "jz~FOO"]], [2, 0, 6, 2, 0, 5, 0, 0, 1, 4, 0.023809523809523808, ["sub     eax, 2", "lea     rbx, [sv+18h]", "shl     rax, 4", "lea     rbp, [sv+rax+28h]", "nop     word ptr [rax+rax+00000000h]"], ["sub~eax,0", "lea~rbx,[sv+0]", "shl~rax,0", "lea~rbp,[sv+0]", "nop~[ord ptr [rax+0]"]], [1, 0, 7, 0, 0, 7, 0, 1, 0, 3, 0.0, ["mov     eax, cs:nslots", "push    r12", "mov     r12, cs:slotvec_0", "push    rbp", "push    rbx", "cmp     eax, 1", "jle     short loc_E8C1"], ["mov~eax,<TAG>", "push~r12", "mov~r12,<TAG>", "push~rbp", "push~rbx", "cmp~eax,0", "jle~FOO"]], [1, 0, 6, 1, 1, 5, 0, 2, 2, 3, 0.11904761904761904, ["mov     rdi, [rbx]; ptr", "add     rbx, 10h", "call    free", "cmp     rbx, rbp", "jnz     short loc_E8B0"], ["mov~rdi,<TAG>", "add~rbx,0", "call~FOO", "cmp~rbx,rbp", "jnz~FOO"]], [1, 0, 0, 0, 0, 5, 0, 0, 3, 0, 0.0, ["pop     rbx", "mov     cs:nslots, 1", "pop     rbp", "pop     sv", "retn"], ["pop~rbx", "mov~<TAG>,0", "pop~rbp", "pop~sv", "retn"]], [0, 0, 2, 0, 0, 3, 0, 1, 2, 1, 0.23809523809523808, ["lea     rbx, slotvec0", "cmp     sv, rbx", "jz      short loc_E904"], ["lea~rbx,<TAG>", "cmp~sv,rbx", "jz~FOO"]], [0, 0, 1, 0, 1, 3, 0, 1, 3, 1, 0.0, ["mov     rdi, sv; ptr", "call    free", "mov     cs:slotvec_0, rbx"], ["mov~rdi,sv", "call~FOO", "mov~<TAG>,rbx"]]], "func_feature": [3, 0, 7, 0, 8, 11, 0, 35, 0.08333, 5, 3], "succs": [[6], [0, 6], [4], [1, 2], [1, 4], [], [5, 7], [5]], "fname": "quotearg_free", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rdx,0", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_n", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_n_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options; options", "mov     rsi, arg; arg", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "xor     edi, edi; n", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rsi,arg", "mov~rdx,0", "xor~edi,edi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 1, 0], "succs": [[1], []], "fname": "quotearg", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options; options", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "xor     edi, edi; n", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rdx,argsize", "mov~argsize,arg", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [8, 0, 2, 0, 1, 15, 1, 2, 1, 0, 0.16666666666666666, ["mov     [rsp+48h+o.style], esi", "mov     rcx, rsp; options", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     s, arg; arg", "mov     qword ptr [rsp+48h+o.flags], 0", "mov     qword ptr [rsp+48h+o.quote_these_too+4], 0", "mov     qword ptr [rsp+48h+o.quote_these_too+0Ch], 0", "mov     qword ptr [rsp+48h+o.quote_these_too+14h], 0", "mov     qword ptr [rsp+48h+o.quote_these_too+1Ch], 0", "mov     [rsp+48h+o.left_quote+4], 0", "mov     dword ptr [rsp+48h+o.right_quote+4], 0", "call    quotearg_n_options", "mov     rcx, [rsp+48h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_EA19"], ["mov~<TAG>,esi", "mov~rcx,rsp", "mov~rdx,0", "mov~s,arg", "mov~[word ptr [rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],0", "mov~[word ptr [rsp+0],0", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 1, 4, 1, 0, 7, 1, 1, 0, 0, 0.0, ["sub     rsp, 48h", "mov     rax, arg", "mov     arg, fs:28h", "mov     [rsp+48h+var_10], arg", "xor     edx, edx", "cmp     esi, 0Ah", "jz      short loc_EA14"], ["sub~rsp,<STR>", "mov~rax,arg", "mov~arg,<TAG>", "mov~[rsp+0],arg", "xor~edx,edx", "cmp~esi,0", "jz~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 2, 0, 0.0, ["add     rsp, 48h", "retn"], ["add~rsp,<STR>", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [3, 2, 5, 1, 5, 4, 33, 26, 0.03333, 1, 2], "succs": [[], [0, 3], [1, 4], [], []], "fname": "quotearg_n_style", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 1, 4, 1, 0, 8, 1, 1, 0, 2, 0.0, ["sub     rsp, 48h", "mov     rax, arg", "mov     arg, argsize; argsize", "mov     argsize, fs:28h", "mov     [rsp+48h+var_10], argsize", "xor     ecx, ecx", "cmp     esi, 0Ah", "jz      short loc_EAA0"], ["sub~rsp,<STR>", "mov~rax,arg", "mov~arg,argsize", "mov~argsize,<TAG>", "mov~[rsp+0],argsize", "xor~ecx,ecx", "cmp~esi,0", "jz~FOO"]], [7, 0, 2, 0, 1, 14, 1, 2, 1, 1, 0.16666666666666666, ["mov     [rsp+48h+o.style], esi", "mov     rcx, rsp; options", "mov     s, arg; arg", "mov     qword ptr [rsp+48h+o.flags], 0", "mov     qword ptr [rsp+48h+o.quote_these_too+4], 0", "mov     qword ptr [rsp+48h+o.quote_these_too+0Ch], 0", "mov     qword ptr [rsp+48h+o.quote_these_too+14h], 0", "mov     qword ptr [rsp+48h+o.quote_these_too+1Ch], 0", "mov     [rsp+48h+o.left_quote+4], 0", "mov     dword ptr [rsp+48h+o.right_quote+4], 0", "call    quotearg_n_options", "mov     rdx, [rsp+48h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_EAA5"], ["mov~<TAG>,esi", "mov~rcx,rsp", "mov~s,arg", "mov~[word ptr [rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],0", "mov~[word ptr [rsp+0],0", "call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 2, -1, 0.0, ["add     rsp, 48h", "retn"], ["add~rsp,<STR>", "retn"]]], "func_feature": [3, 2, 5, 1, 5, 4, 1, 26, 0.03333, 1, 2], "succs": [[], [0, 2], [3, 4], [], []], "fname": "quotearg_n_style_mem", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 1, 1, 0, 0, 0.0, ["mov     rdx, arg; arg", "mov     esi, edi; s", "xor     edi, edi; n", "jmp     quotearg_n_style"], ["mov~rdx,arg", "mov~esi,edi", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 64, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "quotearg_style", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["mov     rcx, argsize; argsize", "mov     argsize, arg; arg", "mov     esi, edi; s", "xor     edi, edi; n", "jmp     quotearg_n_style_mem"], ["mov~rcx,argsize", "mov~argsize,arg", "mov~esi,edi", "xor~edi,edi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_style_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 1, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 48h", "retn"], ["add~rsp,<STR>", "retn"]], [3, 1, 2, 2, 1, 35, 6, 2, 0, 1, 0.0, ["sub     rsp, 48h", "mov     ecx, edx", "mov     rax, fs:28h", "mov     [rsp+48h+var_10], rax", "xor     eax, eax", "mov     rax, cs:default_quoting_options.right_quote", "mov     r8, rsp", "and     ecx, 1Fh", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     [rsp+48h+options.right_quote], rax", "mov     eax, edx", "movaps  xmmword ptr [rsp+48h+options.style], xmm0", "shr     al, 5", "movzx   eax, al", "lea     r9, [r8+rax*4+8]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "movaps  xmmword ptr [rsp+48h+options.quote_these_too+8], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+48h+options.quote_these_too+18h], xmm0", "mov     edx, [r9]", "mov     eax, edx", "shr     eax, cl", "not     eax", "and     eax, 1", "shl     eax, cl", "mov     rcx, r8; options", "xor     eax, edx", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "mov     [r9], eax", "xor     edi, edi; n", "call    quotearg_n_options", "mov     rsi, [rsp+48h+var_10]", "xor     rsi, fs:28h", "jnz     short loc_EB63"], ["sub~rsp,<STR>", "mov~ecx,edx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "mov~r8,rsp", "and~ecx,0", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "mov~eax,edx", "movaps~<TAG>,xmm0", "shr~al,0", "movzx~eax,al", "lea~r9,[r8+0]", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "mov~edx,<TAG>", "mov~eax,edx", "shr~eax,cl", "not~eax", "and~eax,0", "shl~eax,cl", "mov~rcx,r8", "xor~eax,edx", "mov~rdx,argsize", "mov~argsize,arg", "mov~<TAG>,eax", "xor~edi,edi", "call~FOO", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 6, 3, 1, 3, 2, 3, 38, 0.0, 5, 3], "succs": [[], [0, 2], []], "fname": "quotearg_char_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["movsx   edx, sil", "mov     ch_0, 0FFFFFFFFFFFFFFFFh", "jmp     quotearg_char_mem"], ["movsx~edx,sil", "mov~ch_0,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_char", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 1, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     edx, 3Ah ; ':'; ch_0", "mov     rsi, 0FFFFFFFFFFFFFFFFh; argsize", "jmp     quotearg_char_mem"], ["mov~edx,<STR>", "mov~rsi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 2, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_colon", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     edx, 3Ah ; ':'; ch_0", "jmp     quotearg_char_mem"], ["mov~edx,<STR>", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_colon_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [8, 0, 2, 0, 1, 15, 1, 2, 1, 0, 0.16666666666666666, ["mov     [rsp+48h+options.style], esi", "mov     rcx, rsp; options", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     s, arg; arg", "mov     qword ptr [rsp+48h+options.flags], 0", "mov     qword ptr [rsp+48h+options.quote_these_too+4], 4000000h", "mov     qword ptr [rsp+48h+options.quote_these_too+0Ch], 0", "mov     qword ptr [rsp+48h+options.quote_these_too+14h], 0", "mov     qword ptr [rsp+48h+options.quote_these_too+1Ch], 0", "mov     [rsp+48h+options.left_quote+4], 0", "mov     dword ptr [rsp+48h+options.right_quote+4], 0", "call    quotearg_n_options", "mov     rcx, [rsp+48h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_EC39"], ["mov~<TAG>,esi", "mov~rcx,rsp", "mov~rdx,0", "mov~s,arg", "mov~[word ptr [rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],0", "mov~[word ptr [rsp+0],0", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 1, 4, 1, 0, 7, 1, 1, 0, 0, 0.0, ["sub     rsp, 48h", "mov     rax, arg", "mov     arg, fs:28h", "mov     [rsp+48h+var_10], arg", "xor     edx, edx", "cmp     esi, 0Ah", "jz      short loc_EC34"], ["sub~rsp,<STR>", "mov~rax,arg", "mov~arg,<TAG>", "mov~[rsp+0],arg", "xor~edx,edx", "cmp~esi,0", "jz~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 2, 0, 0.0, ["add     rsp, 48h", "retn"], ["add~rsp,<STR>", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [3, 2, 5, 1, 5, 4, 5, 26, 0.03333, 1, 2], "succs": [[], [0, 3], [1, 4], [], []], "fname": "quotearg_n_style_colon", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 2, 0, 1, 9, 1, 2, 0, 0, 0.2, ["mov     [rsp+48h+left_quote], left_quote_0", "mov     [rsp+48h+right_quote], right_quote_0", "mov     rcx, rsp; options", "mov     right_quote_0, argsize; argsize", "mov     left_quote_0, arg; arg", "call    quotearg_n_options", "mov     rdi, [rsp+48h+var_10]", "xor     rdi, fs:28h", "jnz     short loc_ECCC"], ["mov~[rsp+0],left_quote_0", "mov~[rsp+0],right_quote_0", "mov~rcx,rsp", "mov~right_quote_0,argsize", "mov~left_quote_0,arg", "call~FOO", "mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 1, 2, 0.15000000000000002, ["test    right_quote_0, right_quote_0", "jz      short loc_ECC7"], ["test~right_quote_0,right_quote_0", "jz~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 3, -1, 0.0, ["add     rsp, 48h", "retn"], ["add~rsp,<STR>", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 1, 5, 1, 0, 16, 2, 1, 0, 3, 0.0, ["sub     rsp, 48h", "mov     r9, arg", "mov     arg, cs:default_quoting_options.right_quote", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+48h+var_10], rax", "xor     eax, eax", "movaps  [rsp+48h+var_48], xmm0", "test    left_quote_0, left_quote_0", "mov     [rsp+48h+right_quote], rcx", "mov     dword ptr [rsp+48h+var_48], 0Ah", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "movaps  [rsp+48h+var_38], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+20h], xmm0", "jz      short loc_ECC7"], ["sub~rsp,<STR>", "mov~r9,arg", "mov~arg,<TAG>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~<TAG>,xmm0", "test~left_quote_0,left_quote_0", "mov~[rsp+0],rcx", "mov~<TAG>,0", "movdqa~xmm0,<TAG>", "movaps~[rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 4, 6, 3, 6, 6, 3, 31, 0.05833, 5, 2], "succs": [[2, 5], [0, 3], [], [], [1, 3], []], "fname": "quotearg_n_custom_mem", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     r8, 0FFFFFFFFFFFFFFFFh", "jmp     quotearg_n_custom_mem"], ["mov~r8,0", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[], [0]], "fname": "quotearg_n_custom", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 1, 0, 0, 6, 1, 1, 0, 0, 0.0, ["mov     rcx, arg; arg", "mov     r8, 0FFFFFFFFFFFFFFFFh; argsize", "mov     arg, right_quote; right_quote", "mov     right_quote, left_quote; left_quote", "xor     edi, edi; n", "jmp     quotearg_n_custom_mem"], ["mov~rcx,arg", "mov~r8,0", "mov~arg,right_quote", "mov~right_quote,left_quote", "xor~edi,edi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 6, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_custom", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 6, 1, 1, 0, 0, 0.0, ["mov     r8, argsize; argsize", "mov     argsize, arg; arg", "mov     arg, right_quote; right_quote", "mov     right_quote, left_quote; left_quote", "xor     edi, edi; n", "jmp     quotearg_n_custom_mem"], ["mov~r8,argsize", "mov~argsize,arg", "mov~arg,right_quote", "mov~right_quote,left_quote", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 6, 0.0, 0, 0], "succs": [[], [0]], "fname": "quotearg_custom_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["lea     rcx, quote_quoting_options", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 1, 0], "succs": [[], [0]], "fname": "quote_n_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["lea     rcx, quote_quoting_options; options", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "xor     edi, edi; n", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rdx,argsize", "mov~argsize,arg", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 1, 0], "succs": [[], [0]], "fname": "quote_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["lea     rcx, quote_quoting_options", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rdx,0", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 1, 3, 0.0, 1, 0], "succs": [[], [0]], "fname": "quote_n", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["lea     rcx, quote_quoting_options; options", "mov     rsi, arg; arg", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "xor     edi, edi; n", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rsi,arg", "mov~rdx,0", "xor~edi,edi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 7, 5, 0.0, 1, 0], "succs": [[1], []], "fname": "quote", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[2, 0, 3, 0, 0, 3, 1, 1, 0, 0, 0.0028735632183908046, ["mov     dword ptr [r9], 15h", "or      r15d, 0FFFFFFFFh", "jmp     loc_EDFA"], ["mov~<TAG>,0", "or~r15d,0", "jmp~FOO"]], [1, 1, 5, 0, 0, 4, 1, 1, 10, 3, 0.022988505747126436, ["mov     eax, [rsp+178h+src_st.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_EE83"], ["mov~eax,[rsp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 6, 3, 0.0028735632183908046, ["cmp     byte ptr [dst_temp+dst_len-1], 2Fh ; '/'", "jz      short loc_EEC0"], ["cmp~[yte ptr [dst_temp+0],0", "jz~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 5, 4, 0.15459770114942528, ["cmp     byte ptr [src_temp+src_len-1], 2Fh ; '/'", "jz      short loc_EEC0"], ["cmp~[yte ptr [src_temp+0],0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 1, 1, 0.06436781609195402, ["mov     rdx, [rsp+178h+var_40]", "xor     rdx, fs:28h", "mov     eax, r15d", "jnz     loc_F005"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "mov~eax,r15d", "jnz~FOO"]], [2, 0, 3, 0, 0, 3, 0, 1, 9, 2, 0.0034482758620689655, ["mov     dword ptr [r9], 2", "mov     r15d, 0FFFFFFFFh", "jmp     loc_EDFA"], ["mov~<TAG>,0", "mov~r15d,0", "jmp~FOO"]], [1, 1, 5, 0, 0, 4, 1, 1, 8, 3, 0.021839080459770115, ["mov     eax, [rsp+178h+src_st.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_EE83"], ["mov~eax,[rsp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [2, 0, 29, 0, 0, 9, 2, 1, 1, 2, 0.029885057471264367, ["mov     r9, rax", "mov     eax, [rax]", "lea     ecx, [rax-16h]", "and     ecx, 0FFFFFFEFh", "setnz   bl", "cmp     eax, 5Fh ; '_'", "setnz   al", "and     bl, al", "jnz     short loc_EDFA"], ["mov~r9,rax", "mov~eax,<TAG>", "lea~ecx,[rax-16h]+0]", "and~ecx,0", "setnz~bl", "cmp~eax,0", "setnz~al", "and~bl,al", "jnz~FOO"]], [0, 0, 3, 0, 1, 7, 0, 2, 4, 2, 0.027011494252873563, ["mov     edi, [rsp+178h+fd1]; oldfd", "mov     rcx, dst_temp; new", "mov     edx, r14d; newfd", "mov     rsi, src_temp; old", "call    _renameat", "mov     r15d, eax", "jmp     loc_EDFA"], ["mov~edi,[rsp+0]", "mov~rcx,dst_temp", "mov~edx,r14d", "mov~rsi,src_temp", "call~FOO", "mov~r15d,eax", "jmp~FOO"]], [2, 0, 3, 0, 0, 3, 0, 1, 4, 2, 0.005172413793103448, ["mov     dword ptr [r9], 5Fh ; '_'", "mov     r15d, 0FFFFFFFFh", "jmp     loc_EDFA"], ["mov~<TAG>,0", "mov~r15d,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 7, 2, 0.023563218390804597, ["mov     r15d, 0FFFFFFFFh", "jmp     loc_EDFA"], ["mov~r15d,0", "jmp~FOO"]], [2, 0, 3, 0, 0, 3, 0, 1, 5, 2, 0.006896551724137931, ["mov     dword ptr [r9], 11h", "mov     r15d, 0FFFFFFFFh", "jmp     loc_EDFA"], ["mov~<TAG>,0", "mov~r15d,0", "jmp~FOO"]], [2, 0, 30, 1, 2, 27, 2, 3, 0, 2, 0.0, ["push    r15", "push    r14", "mov     r9d, r8d", "push    r13", "push    r12", "mov     r14d, edx", "push    rbp", "push    rbx", "mov     r12, src", "mov     r13, dst", "mov     ebp, r8d", "mov     flags, dst", "sub     rsp, 148h", "mov     ecx, edx", "mov     fd2, src", "mov     rax, fs:28h", "mov     [rsp+178h+var_40], rax", "xor     eax, eax", "mov     esi, edi", "mov     [rsp+178h+fd1], edi", "mov     edi, 13Ch; sysno", "call    _syscall", "mov     rbx, rax", "mov     r15d, eax", "call    ___errno_location", "test    ebx, ebx", "js      short loc_EE30"], ["push~r15", "push~r14", "mov~r9d,r8d", "push~r13", "push~r12", "mov~r14d,edx", "push~rbp", "push~rbx", "mov~r12,src", "mov~r13,dst", "mov~ebp,r8d", "mov~flags,dst", "sub~rsp,0", "mov~ecx,edx", "mov~fd2,src", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~esi,edi", "mov~[rsp+0],edi", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~r15d,eax", "call~FOO", "test~ebx,ebx", "js~FOO"]], [1, 1, 12, 0, 1, 10, 1, 2, 8, 4, 0.11379310344827587, ["lea     rcx, [rsp+178h+dst_st]; stat_buf", "mov     r8d, 100h; flag", "mov     rdx, dst_temp; filename", "mov     esi, r14d; fildes", "mov     edi, 1; ver", "mov     [rsp+178h+var_170], r9", "call    ___fxstatat", "test    eax, eax", "mov     r9, [rsp+178h+var_170]", "jz      short loc_EFC2"], ["lea~rcx,[rsp+0]", "mov~r8d,<STR>", "mov~rdx,dst_temp", "mov~esi,r14d", "mov~edi,0", "mov~[rsp+0],r9", "call~FOO", "test~eax,eax", "mov~r9,[rsp+0]", "jz~FOO"]], [0, 0, 15, 0, 0, 3, 1, 1, 7, 4, 0.15057471264367817, ["test    bl, bl", "mov     r9, [rsp+178h+var_170]", "jz      short loc_EF6A"], ["test~bl,bl", "mov~r9,[rsp+0]", "jz~FOO"]], [0, 0, 20, 0, 2, 8, 1, 3, 3, 3, 0.15517241379310345, ["mov     rdi, src_temp; s", "mov     [rsp+178h+var_170], r9", "call    _strlen", "mov     rdi, dst_temp; s", "mov     rbp, rax", "call    _strlen", "test    src_len, src_len", "jz      short loc_EE83"], ["mov~rdi,src_temp", "mov~[rsp+0],r9", "call~FOO", "mov~rdi,dst_temp", "mov~rbp,rax", "call~FOO", "test~src_len,src_len", "jz~FOO"]], [0, 0, 19, 0, 0, 3, 1, 1, 4, 3, 0.14885057471264368, ["test    dst_len, dst_len", "mov     r9, [rsp+178h+var_170]", "jz      short loc_EE83"], ["test~dst_len,dst_len", "mov~r9,[rsp+0]", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 11, 3, 0.0022988505747126436, ["jmp     loc_EE83"], ["jmp~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 9, 3, 0.040229885057471264, ["cmp     dword ptr [r9], 2", "jnz     short loc_EF49"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 27, 0, 0, 2, 1, 1, 3, 3, 0.02413793103448276, ["and     ebp, 0FFFFFFFEh", "jz      short loc_EF10"], ["and~ebp,0", "jz~FOO"]], [0, 0, 28, 0, 0, 2, 1, 1, 2, 4, 0.05747126436781609, ["test    ebp, ebp", "jnz     short loc_EEA0"], ["test~ebp,ebp", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 2, -1, 0.0, ["add     rsp, 148h", "pop     rbx", "pop     rbp", "pop     src", "pop     dst", "pop     fd2", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~src", "pop~dst", "pop~fd2", "pop~r15", "retn"]], [1, 1, 6, 0, 0, 4, 1, 1, 10, 3, 0.01954022988505747, ["mov     eax, [rsp+178h+src_st.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     short loc_EF49"], ["mov~eax,[rsp+0]", "and~eax,0", "cmp~eax,<STR>", "jnz~FOO"]], [1, 1, 25, 0, 1, 10, 1, 2, 4, 3, 0.04080459770114943, ["lea     rcx, [rsp+178h+dst_st]; stat_buf", "mov     r8d, 100h; flag", "mov     rdx, dst_temp; filename", "mov     esi, r14d; fildes", "mov     edi, 1; ver", "mov     [rsp+178h+var_170], r9", "call    ___fxstatat", "test    eax, eax", "mov     r9, [rsp+178h+var_170]", "jz      short loc_EF58"], ["lea~rcx,[rsp+0]", "mov~r8d,<STR>", "mov~rdx,dst_temp", "mov~esi,r14d", "mov~edi,0", "mov~[rsp+0],r9", "call~FOO", "test~eax,eax", "mov~r9,[rsp+0]", "jz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 7, 4, 0.07816091954022988, ["mov     ebx, 1", "jmp     loc_EE4C"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 6, 3, 0.0706896551724138, ["cmp     eax, 2", "jz      short loc_EFB8"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 24, 0, 0, 3, 0, 1, 5, 3, 0.05459770114942529, ["mov     eax, [r9]", "cmp     eax, 4Bh ; 'K'", "jz      short loc_EF58"], ["mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 1, 16, 0, 1, 9, 1, 2, 6, 3, 0.16091954022988506, ["mov     esi, [rsp+178h+fd1]; fildes", "lea     rcx, [rsp+178h+src_st]; stat_buf", "mov     r8d, 100h; flag", "mov     rdx, src_temp; filename", "mov     edi, 1; ver", "mov     [rsp+178h+var_170], r9", "call    ___fxstatat", "test    eax, eax", "jnz     short loc_EF49"], ["mov~esi,[rsp+0]", "lea~rcx,[rsp+0]", "mov~r8d,<STR>", "mov~rdx,src_temp", "mov~edi,0", "mov~[rsp+0],r9", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 10, 3, 0.0022988505747126436, ["mov     dword ptr [r9], 14h", "jmp     loc_EF49"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 1, 8, 0, 0, 4, 1, 1, 9, 4, 0.052873563218390804, ["mov     eax, [rsp+178h+dst_st.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_EFE1"], ["mov~eax,[rsp+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]]], "func_feature": [9, 18, 38, 2, 31, 49, 2, 149, 0.04961, 1, 2], "succs": [[5], [0, 9], [9, 28], [2, 28], [], [4, 22], [5], [9, 6], [5, 21], [5], [5], [5], [5], [8, 5], [19, 30], [14, 7], [9, 17], [9, 3], [9], [11, 23], [24, 10], [16, 20], [], [18, 11], [27, 12], [16], [25, 11], [26, 12], [11, 15], [11], [1, 29]], "fname": "renameatu", "n_num": 31}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 6, 1, 0, 9, 0, 0, 0, 0, 0.0, ["push    r13", "push    r12", "mov     r13d, edi", "push    rbp", "push    rbx", "mov     r12, buf", "mov     rbx, count", "sub     rsp, 8", "nop     dword ptr [rax+rax+00h]"], ["push~r13", "push~r12", "mov~r13d,edi", "push~rbp", "push~rbx", "mov~r12,buf", "mov~rbx,count", "sub~rsp,0", "nop~[word ptr [rax+0]"]], [1, 0, 6, 0, 1, 4, 0, 2, 0, 2, 0.3, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 4", "jz      short loc_F028"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 6, 0, 1, 7, 1, 1, 0, 1, 0.4166666666666667, ["mov     rdx, count; n", "mov     rsi, buf; buf", "mov     edi, r13d; fd", "call    _write", "test    rax, rax", "mov     rbp, rax", "jns     short loc_F060"], ["mov~rdx,count", "mov~rsi,buf", "mov~edi,r13d", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jns~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 0, 1, 0.25, ["cmp     eax, 16h", "jnz     short loc_F060"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "mov     rax, result", "pop     count", "pop     result", "pop     buf", "pop     fd", "retn"], ["add~rsp,0", "mov~rax,result", "pop~count", "pop~result", "pop~buf", "pop~fd", "retn"]], [1, 0, 6, 0, 0, 2, 0, 0, 0, 1, 0.2, ["cmp     count, 7FF00000h", "jbe     short loc_F060"], ["cmp~count,0", "jbe~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 0, 2, 0.16666666666666666, ["mov     ebx, 7FF00000h", "jmp     short loc_F028"], ["mov~ebx,0", "jmp~FOO"]]], "func_feature": [2, 1, 5, 0, 7, 10, 1, 33, 0.19048, 0, 2], "succs": [[2], [2, 3], [1, 4], [4, 5], [], [4, 6], [2]], "fname": "safe_write", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 1, 0, 1, 0, 6, 0, 0, 0, 0, 0.0, ["add     rsp, 138h", "pop     dest_dirname", "pop     rbp", "pop     dest", "pop     source_dfd", "retn"], ["add~rsp,<STR>", "pop~dest_dirname", "pop~rbp", "pop~dest", "pop~source_dfd", "retn"]], [0, 0, 2, 0, 1, 6, 1, 2, 3, 1, 0.21428571428571427, ["mov     rdi, dest_dirname; ptr", "call    free", "mov     rdx, [rsp+158h+var_30]", "xor     rdx, fs:28h", "mov     eax, ebp", "jnz     short loc_F192"], ["mov~rdi,dest_dirname", "call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "mov~eax,ebp", "jnz~FOO"]], [1, 0, 5, 0, 2, 8, 1, 3, 2, 3, 0.0, ["call    ___errno_location", "mov     esi, [rax]; errnum", "lea     rdx, aS+2; format", "mov     rcx, dest_dirname", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     short loc_F0F8"], ["call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,dest_dirname", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 1, 6, 0, 3, 13, 1, 4, 1, 3, 0.21428571428571427, ["mov     rdi, source_dirname; ptr", "call    free", "mov     rdi, dest; file", "call    dir_name", "lea     rcx, [rsp+158h+dest_dir_stats]; stat_buf", "mov     r8d, 100h; flag", "mov     rdx, rax; filename", "mov     esi, ebp; fildes", "mov     edi, 1; ver", "mov     source_dirname, rax", "call    ___fxstatat", "test    eax, eax", "jnz     short loc_F148"], ["mov~rdi,source_dirname", "call~FOO", "mov~rdi,dest", "call~FOO", "lea~rcx,[rsp+0]", "mov~r8d,<STR>", "mov~rdx,rax", "mov~esi,ebp", "mov~edi,0", "mov~source_dirname,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 0, 4, 1, 1, 2, 2, 0.2857142857142857, ["xor     ebp, ebp", "mov     rax, [rsp+158h+dest_dir_stats.st_ino]", "cmp     [rsp+158h+source_dir_stats.st_ino], rax", "jnz     short loc_F119"], ["xor~ebp,ebp", "mov~rax,[rsp+0]", "cmp~[rsp+0],rax", "jnz~FOO"]], [1, 0, 7, 0, 2, 8, 1, 3, 1, 4, 0.0, ["call    ___errno_location", "mov     esi, [rax]; errnum", "lea     rdx, aS+2; format", "mov     rcx, source_dirname", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_F0C4"], ["call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,source_dirname", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 2, 8, 1, 2, 22, 2, 3, 0, 4, 0.0, ["push    r13", "push    r12", "mov     r13d, edi", "push    rbp", "push    rbx", "mov     source_dfd, source; file", "mov     ebp, edx", "mov     r12, dest", "sub     rsp, 138h", "mov     rax, fs:28h", "mov     [rsp+158h+var_30], rax", "xor     eax, eax", "call    dir_name", "mov     rcx, rsp; stat_buf", "mov     r8d, 100h; flag", "mov     rdx, rax; filename", "mov     esi, r13d; fildes", "mov     edi, 1; ver", "mov     rbx, rax", "call    ___fxstatat", "test    eax, eax", "jnz     loc_F170"], ["push~r13", "push~r12", "mov~r13d,edi", "push~rbp", "push~rbx", "mov~source_dfd,source", "mov~ebp,edx", "mov~r12,dest", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~rcx,rsp", "mov~r8d,<STR>", "mov~rdx,rax", "mov~esi,r13d", "mov~edi,0", "mov~rbx,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 3, 0, 0, 3, 0, 0, 3, 2, 0.0, ["mov     rax, [rsp+158h+dest_dir_stats.st_dev]", "cmp     [rsp+158h+source_dir_stats.st_dev], rax", "setz    bpl"], ["mov~rax,[rsp+0]", "cmp~<TAG>,rax", "setz~bpl"]]], "func_feature": [11, 7, 17, 1, 9, 11, 1, 71, 0.07937, 2, 2], "succs": [[], [0, 7], [4], [2, 4], [8, 1], [3], [3, 5], [], [1]], "fname": "same_nameat_0", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 3, 0, 1, 6, 1, 2, 0, 0, 0.16666666666666666, ["mov     rdx, source_baselen; n", "mov     rsi, dest_basename; s2", "mov     rdi, source_basename; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_F1E9"], ["mov~rdx,source_baselen", "mov~rsi,dest_basename", "mov~rdi,source_basename", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 4, 1, 4, 24, 0, 5, 0, 2, 0.0, ["push    r15", "push    r14", "mov     r15d, edx", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbp, dest", "mov     rbx, source", "sub     rsp, 18h", "mov     [rsp+48h+source_dfd], edi", "mov     source_dfd_0, source; name", "call    last_component", "mov     rdi, dest; name", "mov     r12, rax", "call    last_component", "mov     rdi, source_basename; name", "mov     r13, rax", "call    base_len", "mov     rdi, dest_basename; name", "mov     r14, rax", "call    base_len", "cmp     source_baselen, dest_baselen", "jz      short loc_F200"], ["push~r15", "push~r14", "mov~r15d,edx", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbp,dest", "mov~rbx,source", "sub~rsp,0", "mov~[rsp+0],edi", "mov~source_dfd_0,source", "call~FOO", "mov~rdi,dest", "mov~r12,rax", "call~FOO", "mov~rdi,source_basename", "mov~r13,rax", "call~FOO", "mov~rdi,dest_basename", "mov~r14,rax", "call~FOO", "cmp~source_baselen,dest_baselen", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 1, 0, 1, -1, 0.0, ["add     rsp, 18h", "xor     eax, eax", "pop     source", "pop     dest", "pop     source_basename", "pop     dest_basename", "pop     source_baselen", "pop     dest_dfd", "retn"], ["add~rsp,0", "xor~eax,eax", "pop~source", "pop~dest", "pop~source_basename", "pop~dest_basename", "pop~source_baselen", "pop~dest_dfd", "retn"]], [1, 0, 1, 1, 0, 12, 0, 1, 2, 0, 0.16666666666666666, ["mov     edi, [rsp+48h+source_dfd]", "add     rsp, 18h", "mov     rcx, dest", "mov     edx, r15d", "mov     rsi, source", "pop     source", "pop     dest", "pop     source_basename", "pop     dest_basename", "pop     source_baselen", "pop     dest_dfd", "jmp     same_nameat_0"], ["mov~edi,[rsp+0]", "add~rsp,0", "mov~rcx,dest", "mov~edx,r15d", "mov~rsi,source", "pop~source", "pop~dest", "pop~source_basename", "pop~dest_basename", "pop~source_baselen", "pop~dest_dfd", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []]], "func_feature": [5, 2, 8, 0, 5, 5, 1, 51, 0.06667, 0, 3], "succs": [[2, 3], [0, 2], [], [4], []], "fname": "same_nameat", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 1, 0, 0, 5, 0, 1, 0, 0, 0.0, ["mov     edx, 0FFFFFF9Ch; dest_dfd", "mov     rcx, dest; dest", "mov     dest, source; source", "mov     edi, edx; source_dfd", "jmp     same_nameat"], ["mov~edx,0", "mov~rcx,dest", "mov~dest,source", "mov~edi,edx", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 7, 5, 0.0, 0, 0], "succs": [[1], []], "fname": "same_name", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 2, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     rax, [deb+8]", "cmp     [dea+8], rax", "jb      short loc_F278"], ["mov~rax,[deb+0]", "cmp~[dea+0],rax", "jb~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 0, -1, 0.0, ["setnbe  al", "movzx   eax, al", "retn"], ["setnbe~al", "movzx~eax,al", "retn"]], [1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]]], "func_feature": [0, 0, 0, 0, 3, 2, 0, 8, 0.0, 0, 0], "succs": [[1, 2], [], []], "fname": "direntry_cmp_inode", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     deb, [deb]; s2", "mov     dea, [dea]; s1", "jmp     _strcmp"], ["mov~deb,<TAG>", "mov~dea,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[], [0]], "fname": "direntry_cmp_name", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 2, 0, 0, 2, 0, 1, 0, 0, 0.009136212624584717, ["lea     readdir_errno, [name_space+used+0]", "jmp     loc_F3E8"], ["lea~readdir_errno,[name_space+0]", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 5, -1, 0.050387596899224806, ["cmp     [rsp+78h+allocated], used", "jz      loc_F563"], ["cmp~[rsp+0],used", "jz~FOO"]], [1, 0, 41, 0, 0, 2, 0, 1, 9, 0, 0.0, ["mov     esi, 1", "jmp     short loc_F5E8"], ["mov~esi,0", "jmp~FOO"]], [2, 0, 41, 1, 0, 10, 2, 0, 8, 1, 0.05426356589147287, ["test    n_0, n_0", "mov     eax, 8", "mov     edx, 10h", "cmovnz  rax, n_0", "xor     esi, esi", "mov     rdi, rax", "mov     [rsp+78h+n], rax", "mov     rax, rdx", "mul     rdi", "jo      short loc_F601"], ["test~n_0,n_0", "mov~eax,0", "mov~edx,0", "cmovnz~rax,n_0", "xor~esi,esi", "mov~rdi,rax", "mov~[rsp+0],rax", "mov~rax,rdx", "mul~,rdi", "jo~FOO"]], [1, 0, 41, 0, 1, 6, 1, 2, 2, 7, 0.46400885935769653, ["mov     dword ptr [rbp+0], 0", "mov     rdi, dirp; dirp", "call    _readdir", "test    rax, rax", "mov     rcx, rax", "jz      loc_F3B0"], ["mov~[word ptr [rbp+0],0", "mov~rdi,dirp", "call~FOO", "test~rax,rax", "mov~rcx,rax", "jz~FOO"]], [3, 0, 41, 0, 1, 10, 3, 2, 1, 8, 0.022148394241417495, ["mov     rbx, dirp", "xor     r14d, r14d", "xor     r12d, r12d", "call    ___errno_location", "xor     r13d, r13d", "mov     rbp, rax", "mov     [rsp+78h+n], 0", "mov     [rsp+78h+entries], 0", "mov     [rsp+78h+allocated], 0", "jmp     short loc_F2F4"], ["mov~rbx,dirp", "xor~r14d,r14d", "xor~r12d,r12d", "call~FOO", "xor~r13d,r13d", "mov~rbp,rax", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 41, 0, 0, 3, 1, 1, 5, 5, 0.020487264673311183, ["movzx   eax, byte ptr [dp_0+14h]", "test    al, al", "jz      short loc_F2F4"], ["movzx~eax,[yte ptr [dp_0+0]", "test~al,al", "jz~FOO"]], [1, 0, 41, 3, 1, 12, 0, 2, 7, 8, 0.1982281284606866, ["shl     entries_used, 4", "mov     rdi, entry; string", "add     r12, [rsp+78h+entries]", "mov     [rsp+78h+dp], rcx", "call    xstrdup", "mov     rcx, [rsp+78h+dp]", "add     used, [rsp+78h+entry_size]", "mov     [r12], rax", "mov     rax, [rcx]", "mov     [r12+8], rax", "mov     r12, [rsp+78h+var_40]", "jmp     loc_F2F4"], ["shl~entries_used,0", "mov~rdi,entry", "add~r12,[rsp+0]", "mov~[rsp+0],rcx", "call~FOO", "mov~rcx,[rsp+0]", "add~used,[rsp+0]", "mov~<TAG>,rax", "mov~rax,<TAG>", "mov~[r12+0],rax", "mov~r12,[rsp+0]", "jmp~FOO"]], [0, 0, 41, 0, 1, 6, 0, 2, 7, 8, 0.1434108527131783, ["mov     rdx, [rsp+78h+entry_size]; n", "lea     rdi, [name_space+used+0]; dest", "mov     rsi, entry; src", "call    _memcpy", "mov     used, [rsp+78h+dp]", "jmp     loc_F2F4"], ["mov~rdx,[rsp+0]", "lea~rdi,[name_space+0]", "mov~rsi,entry", "call~FOO", "mov~used,[rsp+0]", "jmp~FOO"]], [0, 0, 41, 0, 0, 2, 1, 1, 4, 5, 0.24086378737541528, ["test    al, al", "jnz     short loc_F329"], ["test~al,al", "jnz~FOO"]], [0, 0, 41, 2, 0, 10, 0, 1, 6, 9, 0.10465116279069767, ["mov     rsi, [rsp+78h+entry_size]", "mov     entry_size_0, [rsp+78h+allocated]", "mov     rdx, rsi", "sub     rax, used", "add     rdx, used", "mov     [rsp+78h+dp], rdx", "setb    dl", "cmp     rax, rsi", "movzx   edx, dl", "ja      short loc_F4F5"], ["mov~rsi,[rsp+0]", "mov~entry_size_0,[rsp+0]", "mov~rdx,rsi", "sub~rax,used", "add~rdx,used", "mov~[rsp+0],rdx", "setb~dl", "cmp~rax,rsi", "movzx~edx,dl", "ja~FOO"]], [0, 0, 41, 0, 1, 4, 0, 1, 10, 9, 0.10132890365448505, ["mov     rsi, [rsp+78h+allocated]; n", "mov     rdi, name_space; p", "call    xrealloc", "mov     name_space, rax"], ["mov~rsi,[rsp+0]", "mov~rdi,name_space", "call~FOO", "mov~name_space,rax"]], [0, 1, 41, 0, 0, 6, 2, 0, 9, 10, 0.0517718715393134, ["test    rdx, rdx", "mov     eax, 80h", "cmovnz  rax, rdx", "test    rax, rax", "mov     [rsp+78h+allocated], rax", "jns     loc_F4E5"], ["test~rdx,rdx", "mov~eax,<STR>", "cmovnz~rax,rdx", "test~rax,rax", "mov~[rsp+0],rax", "jns~FOO"]], [0, 0, 41, 0, 0, 3, 1, 1, 8, 11, 0.0741971207087486, ["test    name_space, name_space", "mov     rdx, [rsp+78h+dp]", "jz      loc_F57F"], ["test~name_space,name_space", "mov~rdx,[rsp+0]", "jz~FOO"]], [1, 0, 41, 1, 1, 8, 0, 2, 10, 9, 0.15946843853820597, ["mov     rsi, [rsp+78h+n]", "mov     rdi, [rsp+78h+entries]; p", "mov     [rsp+78h+dp], dp_0", "shl     n_0, 4; n", "call    xrealloc", "mov     rcx, [rsp+78h+dp]", "mov     [rsp+78h+entries], rax", "jmp     loc_F365"], ["mov~rsi,[rsp+0]", "mov~rdi,[rsp+0]", "mov~[rsp+0],dp_0", "shl~n_0,0", "call~FOO", "mov~rcx,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 41, 0, 0, 5, 0, 1, 6, 3, 0.1301218161683278, ["cmp     entries_used, [rsp+78h+n]", "lea     entry_size_0, [entries_used+1]", "mov     rcx, [rsp+78h+dp]", "mov     [rsp+78h+var_40], rax", "jz      loc_F511"], ["cmp~entries_used,[rsp+0]", "lea~entry_size_0,[entries_used+0]", "mov~rcx,[rsp+0]", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 41, 0, 0, 2, 0, 1, 7, 2, 0.10575858250276854, ["cmp     [rsp+78h+entries], 0", "jz      loc_F5C5"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 41, 0, 0, 4, 0, 1, 3, 6, 0.2547065337763012, ["lea     r15, [dp_0+13h]", "movzx   eax, byte ptr [dp_0+13h]", "cmp     al, 2Eh ; '.'", "jnz     short loc_F2F0"], ["lea~r15,[dp_0+0]", "movzx~eax,[yte ptr [dp_0+0]", "cmp~al,0", "jnz~FOO"]], [1, 0, 41, 0, 0, 2, 0, 1, 4, 6, 0.028792912513842746, ["cmp     byte ptr [dp_0+14h], 2Eh ; '.'", "jz      short loc_F3A0"], ["cmp~[yte ptr [dp_0+0],0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 41, 0, 0, 2, 1, 1, 7, 12, 0.0769656699889258, ["test    rdx, rdx", "jnz     loc_F599"], ["test~rdx,rdx", "jnz~FOO"]], [1, 0, 41, 0, 0, 3, 0, 1, 9, 11, 0.014673311184939091, ["mov     rax, 5555555555555553h", "cmp     rdx, rax", "ja      loc_F599"], ["mov~rax,0", "cmp~rdx,rax", "ja~FOO"]], [1, 0, 41, 0, 0, 3, 0, 1, 8, 11, 0.043743078626799554, ["mov     rax, 555555555555554h", "cmp     n_0, rax", "ja      short loc_F599"], ["mov~rax,0", "cmp~n_0,rax", "ja~FOO"]], [0, 0, 41, 0, 0, 2, 1, 1, 9, 12, 0.06866002214839424, ["test    rax, rax", "js      short loc_F599"], ["test~rax,rax", "js~FOO"]], [0, 0, 41, 0, 0, 2, 1, 1, 10, 11, 0.0741971207087486, ["test    rsi, rsi", "jnz     short loc_F599"], ["test~rsi,rsi", "jnz~FOO"]], [0, 0, 41, 0, 0, 2, 0, 1, 5, 6, 0.0005537098560354374, ["movzx   eax, byte ptr [dp_0+15h]", "jmp     loc_F2F0"], ["movzx~eax,[yte ptr [dp_0+0]", "jmp~FOO"]], [2, 0, 41, 1, 1, 7, 0, 2, 5, 4, 0.24252491694352157, ["mov     rdi, entry; s", "mov     [rsp+78h+dp], dp_0", "call    _strlen", "add     rax, 1", "cmp     [rsp+78h+cmp], 0", "mov     [rsp+78h+entry_size], rax", "jz      loc_F488"], ["mov~rdi,entry", "mov~[rsp+0],dp_0", "call~FOO", "add~rax,0", "cmp~[rsp+0],0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 41, 0, 0, 4, 0, 0, 10, 10, 0.021040974529346623, ["mov     rax, rdx", "shr     rax, 1", "lea     rax, [rdx+rax+1]", "mov     [rsp+78h+allocated], rax"], ["mov~rax,rdx", "shr~rax,0", "lea~rax,[rdx+0]", "mov~[rsp+0],rax"]], [2, 0, 5, 2, 2, 14, 1, 2, 6, -1, 0.03433001107419712, ["mov     r15, [rsp+78h+entries]", "mov     rcx, [rsp+78h+cmp]; compar", "mov     rsi, entries_used; nmemb", "mov     edx, 10h; size", "shl     entries_used, 4", "mov     rdi, r15; base", "mov     rbp, r15", "add     r12, r15", "call    _qsort", "mov     rdi, rbx; n", "xor     ebx, ebx", "call    xmalloc", "mov     name_space, rax", "nop     dword ptr [rax+00000000h]"], ["mov~r15,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rsi,entries_used", "mov~edx,0", "shl~entries_used,0", "mov~rdi,r15", "mov~rbp,r15", "add~r12,r15", "call~FOO", "mov~rdi,rbx", "xor~ebx,ebx", "call~FOO", "mov~name_space,rax", "nop~[word ptr [rax+0]"]], [0, 0, 7, 0, 0, 3, 1, 1, 5, -1, 0.08305647840531562, ["test    entries_used, entries_used", "lea     readdir_errno, [used+1]", "jnz     short loc_F400"], ["test~entries_used,entries_used", "lea~readdir_errno,[used+0]", "jnz~FOO"]], [0, 1, 43, 1, 0, 13, 1, 1, 0, 9, 0.0, ["push    r15", "lea     rax, comparison_function_table", "push    r14", "push    r13", "push    r12", "mov     esi, esi", "push    rbp", "push    rbx", "sub     rsp, 48h", "mov     rax, [rax+option*8]", "test    dirp, dirp", "mov     [rsp+78h+cmp], rax", "jz      loc_F5BD"], ["push~r15", "lea~rax,<TAG>", "push~r14", "push~r13", "push~r12", "mov~esi,esi", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "test~dirp,dirp", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 13, 0, 0, 3, 1, 1, 3, -1, 0.20099667774086377, ["mov     ebx, [rbp+0]", "test    ebx, ebx", "jnz     loc_F5A0"], ["mov~ebx,[rbp+0]", "test~ebx,ebx", "jnz~FOO"]], [1, 0, 41, 1, 0, 4, 0, 0, 9, 10, 0.04928017718715393, ["mov     rax, n_0", "shr     rax, 1", "add     rax, [rsp+78h+var_40]", "mov     [rsp+78h+n], rax"], ["mov~rax,n_0", "shr~rax,0", "add~rax,[rsp+0]", "mov~[rsp+0],rax"]], [0, 0, 1, 0, 2, 7, 1, 3, 4, -1, 0.015503875968992248, ["mov     rdi, [rsp+78h+entries]; ptr", "call    free", "mov     rdi, name_space; ptr", "xor     r13d, r13d", "call    free", "mov     [rbp+0], ebx", "jmp     loc_F3EB"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~rdi,name_space", "xor~r13d,r13d", "call~FOO", "mov~[rbp+0],ebx", "jmp~FOO"]], [0, 0, 1, 0, 0, 2, 1, 1, 1, -1, 0.0005537098560354374, ["xor     r13d, r13d", "jmp     loc_F3EB"], ["xor~r13d,r13d", "jmp~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 4, -1, 0.16057585825027684, ["cmp     [rsp+78h+cmp], 0", "jz      loc_F470"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 3, 0, 1, 4, 0, 1, 6, -1, 0.018272425249169433, ["mov     rdi, rbx; n", "call    xmalloc", "mov     name_space, rax", "mov     rbx, name_space"], ["mov~rdi,rbx", "call~FOO", "mov~name_space,rax", "mov~rbx,name_space"]], [0, 0, 41, 0, 0, 3, 0, 1, 11, 10, 0.08084163898117386, ["lea     rax, [n_0+1]", "mov     [rsp+78h+var_40], rax", "jmp     loc_F53C"], ["lea~rax,[n_0+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 5, 2, 2, 11, 0, 3, 7, -1, 0.01937984496124031, ["mov     rsi, [rbp+0]; src", "lea     r14, [name_space+used+0]", "add     rbp, 10h", "mov     rdi, dest; dest", "call    _stpcpy", "mov     rdi, [rbp-10h]; ptr", "sub     rax, dest", "lea     used, [used+rax+1]", "call    free", "cmp     r12, rbp", "jnz     short loc_F438"], ["mov~rsi,[rbp+0]", "lea~r14,[name_space+0]", "add~rbp,0", "mov~rdi,dest", "call~FOO", "mov~rdi,[rbp-10h]+0]", "sub~rax,dest", "lea~used,[used+0]", "call~FOO", "cmp~r12,rbp", "jnz~FOO"]], [0, 0, 2, 0, 1, 2, 0, 1, 7, -1, 0.005537098560354374, ["mov     rdi, [rsp+78h+entries]; ptr", "call    free"], ["mov~rdi,[rsp+0]", "call~FOO"]], [0, 0, 3, 1, 0, 2, 0, 1, 8, -1, 0.0033222591362126247, ["add     used, name_space", "jmp     loc_F3DE"], ["add~used,name_space", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 7, -1, 0.005537098560354374, ["mov     byte ptr [rbx], 0"], ["mov~<TAG>,0"]], [0, 0, 2, 1, 1, 7, 0, 2, 6, -1, 0.009136212624584717, ["mov     readdir_errno, [rsp+78h+allocated]", "mov     rdi, name_space; p", "lea     rsi, [rbx+1]; n", "call    xrealloc", "mov     name_space, rax", "add     rbx, name_space", "jmp     loc_F3E8"], ["mov~readdir_errno,[rsp+0]", "mov~rdi,name_space", "lea~rsi,[rbx+0]", "call~FOO", "mov~name_space,rax", "add~rbx,name_space", "jmp~FOO"]], [0, 1, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["add     rsp, 48h", "mov     rax, r13", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "mov~rax,r13", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [17, 20, 50, 1, 44, 65, 1, 212, 0.07824, 1, 17], "succs": [[41], [0, 42], [23], [2, 23], [17, 31], [4], [26, 4], [4], [4], [26, 4], [8, 20], [8], [11, 19], [12, 21], [7], [16, 7], [3, 22], [9, 18], [25, 6], [], [19, 13], [27, 19], [32, 19], [24, 19], [19, 37], [9], [10, 15], [11], [38], [36, 28], [34, 5], [33, 35], [14], [43], [43], [1, 29], [39], [14], [40, 38], [41], [39], [43], [41], []], "fname": "streamsavedir", "n_num": 44}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 1, 0, 2, 8, 1, 3, 0, 0, 0.0, ["call    ___errno_location", "mov     r12d, [rax]", "mov     dirp, rax", "mov     rdi, name_space; ptr", "call    free", "xor     ebp, ebp", "mov     [rbx], r12d", "jmp     short loc_F63C"], ["call~FOO", "mov~r12d,<TAG>", "mov~dirp,rax", "mov~rdi,name_space", "call~FOO", "xor~ebp,ebp", "mov~<TAG>,r12d", "jmp~FOO"]], [0, 0, 2, 0, 2, 9, 1, 3, 1, 0, 0.125, ["mov     esi, ebp; option", "mov     rbx, dirp", "mov     rdi, dirp; dirp", "call    streamsavedir", "mov     rdi, dirp; dirp", "mov     option, rax", "call    _closedir", "test    eax, eax", "jnz     short loc_F650"], ["mov~esi,ebp", "mov~rbx,dirp", "mov~rdi,dirp", "call~FOO", "mov~rdi,dirp", "mov~option,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 1, 7, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "mov     ebp, esi", "push    rbx", "call    opendir_safer", "test    dirp, dirp", "jz      short loc_F648"], ["push~r12", "push~rbp", "mov~ebp,esi", "push~rbx", "call~FOO", "test~dirp,dirp", "jz~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 2, 0, 0.0, ["mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "retn"], ["mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "retn"]], [0, 0, 1, 0, 0, 2, 1, 1, 1, 0, 0.041666666666666664, ["xor     ebp, ebp", "jmp     short loc_F63C"], ["xor~ebp,ebp", "jmp~FOO"]]], "func_feature": [5, 4, 9, 0, 5, 6, 1, 31, 0.03333, 0, 0], "succs": [[3], [0, 3], [1, 4], [], [3]], "fname": "savedir", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[2, 0, 6, 1, 2, 13, 2, 3, 0, 0, 0.0, ["push    rbx", "mov     flags, tmpl; filename", "mov     edi, 1; ver", "sub     rsp, 0A0h", "mov     rdx, rsp; stat_buf", "mov     rax, fs:28h", "mov     [rsp+0A8h+var_10], rax", "xor     eax, eax", "call    ___lxstat", "mov     ebx, eax", "call    ___errno_location", "test    ebx, ebx", "jz      short loc_F6C0"], ["push~rbx", "mov~flags,tmpl", "mov~edi,0", "sub~rsp,0", "mov~rdx,rsp", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~ebx,eax", "call~FOO", "test~ebx,ebx", "jz~FOO"]], [2, 0, 3, 0, 0, 2, 0, 0, 0, 2, 0.15, ["mov     dword ptr [rax], 11h", "mov     eax, 0FFFFFFFFh"], ["mov~<TAG>,0", "mov~eax,0"]], [1, 0, 5, 0, 0, 3, 0, 1, 0, 3, 0.03333333333333333, ["mov     edx, [rax]", "cmp     edx, 4Bh ; 'K'", "jz      short loc_F6C0"], ["mov~edx,<TAG>", "cmp~edx,0", "jz~FOO"]], [1, 0, 0, 1, 0, 3, 0, 0, 0, -1, 0.0, ["add     rsp, 0A0h", "pop     rbx", "retn"], ["add~rsp,0", "pop~rbx", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 0, 1, 0.26666666666666666, ["mov     rcx, [rsp+0A8h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_F6E7"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 3, 0, 0, 5, 1, 1, 0, 2, 0.05, ["xor     eax, eax", "cmp     edx, 2", "setnz   al", "neg     eax", "jmp     short loc_F6CB"], ["xor~eax,eax", "cmp~edx,0", "setnz~al", "neg~eax", "jmp~FOO"]]], "func_feature": [3, 4, 7, 1, 7, 8, 0, 30, 0.07143, 1, 2], "succs": [[1, 2], [4], [1, 6], [], [3, 5], [], [4]], "fname": "try_nocreate", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     esi, 1C0h; mode", "jmp     _mkdir"], ["mov~esi,0", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[], [0]], "fname": "try_dir", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[2, 1, 1, 0, 0, 6, 3, 1, 0, 0, 0.0, ["mov     esi, [openflags]", "mov     edx, 180h", "xor     eax, eax", "and     sil, 3Ch", "or      sil, 0C2h; oflag", "jmp     _open"], ["mov~esi,<TAG>", "mov~edx,<STR>", "xor~eax,eax", "and~sil,0", "or~sil,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 3, 1, 0, 2, 1, 0, 6, 0.0, 0, 0], "succs": [[1], []], "fname": "try_file", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 11, 0, 0, 3, 1, 1, 0, 0, 0.2125, ["test    x_suffix_len, x_suffix_len", "mov     r15, [rsp+68h+fd]", "jz      short loc_F7F7"], ["test~x_suffix_len,x_suffix_len", "mov~r15,[rsp+0]", "jz~FOO"]], [1, 0, 11, 1, 0, 2, 0, 1, 7, -1, 0.08541666666666667, ["sub     r13d, 1", "jnz     short loc_F7C8"], ["sub~r13d,0", "jnz~FOO"]], [1, 0, 11, 2, 0, 6, 0, 0, 3, -1, 0.125, ["mov     rand_src, [rsp+68h+var_68]", "lea     r12, letters; \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLM\"...", "mov     r13d, 3A2F8h", "add     rax, x_suffix_len", "add     rbx, rax", "nop     dword ptr [rax+rax+00h]"], ["mov~rand_src,<TAG>", "lea~r12,<TAG>", "mov~r13d,0", "add~rax,x_suffix_len", "add~rbx,rax", "nop~[word ptr [rax+0]"]], [0, 0, 13, 0, 1, 6, 2, 2, 2, 1, 0.1, ["xor     edi, edi; name", "mov     rsi, x_suffix_len; bytes_bound", "call    randint_all_new", "test    rax, rax", "mov     suffixlen, rax", "jz      loc_F88D"], ["xor~edi,edi", "mov~rsi,x_suffix_len", "call~FOO", "test~rax,rax", "mov~suffixlen,rax", "jz~FOO"]], [0, 0, 2, 0, 0, 4, 0, 0, 6, -1, 0.058333333333333334, ["mov     rcx, [rsp+68h+p_saved_errno]", "mov     eax, [rsp+68h+save_errno]", "mov     [rcx], eax", "mov     ecx, eax"], ["mov~rcx,[rsp+0]", "mov~eax,[rsp+0]", "mov~<TAG>,eax", "mov~ecx,eax"]], [0, 0, 11, 0, 1, 7, 1, 1, 5, -1, 0.225, ["mov     rsi, [rsp+68h+args]", "mov     rdi, [rsp+68h+var_68]", "mov     rax, [rsp+68h+tryfunc]", "call    rax", "test    eax, eax", "mov     edx, eax", "jns     short loc_F839"], ["mov~rsi,[rsp+0]", "mov~rdi,<TAG>", "mov~rax,[rsp+0]", "call~rax", "test~eax,eax", "mov~edx,eax", "jns~FOO"]], [1, 0, 16, 1, 2, 23, 0, 3, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r15, tmpl", "push    r13", "push    r12", "mov     r14, x_suffix_len", "push    rbp", "push    rbx", "mov     ebp, esi", "sub     rsp, 38h", "mov     [rsp+68h+args], args_0", "mov     [rsp+68h+var_68], tmpl", "mov     [rsp+68h+tryfunc], tryfunc_0", "call    ___errno_location", "mov     [rsp+68h+p_saved_errno], rax", "mov     eax, [rax]", "mov     rdi, tmpl; s", "mov     [rsp+68h+save_errno], eax", "call    _strlen", "movsxd  rsi, ebp", "lea     rdx, [rsi+x_suffix_len]", "cmp     rdx, len", "ja      loc_F87B"], ["push~r15", "push~r14", "mov~r15,tmpl", "push~r13", "push~r12", "mov~r14,x_suffix_len", "push~rbp", "push~rbx", "mov~ebp,esi", "sub~rsp,0", "mov~[rsp+0],args_0", "mov~<TAG>,tmpl", "mov~[rsp+0],tryfunc_0", "call~FOO", "mov~[rsp+0],rax", "mov~eax,<TAG>", "mov~rdi,tmpl", "mov~[rsp+0],eax", "call~FOO", "movsxd~rsi,ebp", "lea~rdx,<TAG>", "cmp~rdx,len", "ja~FOO"]], [0, 0, 15, 2, 1, 10, 0, 2, 1, 2, 0.05416666666666667, ["sub     len, x_suffix_len", "mov     rbx, rax", "sub     rbx, rsi", "lea     rsi, aSimpleBackupSu+13h; accept", "lea     rax, [tmpl+rbx]", "mov     rdi, rax; s", "mov     [rsp+68h+fd], rax", "call    _strspn", "cmp     x_suffix_len, rax", "ja      loc_F87B"], ["sub~len,x_suffix_len", "mov~rbx,rax", "sub~rbx,rsi", "lea~rsi,<TAG>", "lea~rax,<TAG>", "mov~rdi,rax", "mov~[rsp+0],rax", "call~FOO", "cmp~x_suffix_len,rax", "ja~FOO"]], [0, 0, 1, 0, 1, 8, 0, 1, 7, -1, 0.03125, ["mov     rdi, rand_src; s", "mov     dword ptr [rsp+68h+fd], edx", "mov     dword ptr [rsp+68h+var_68], ecx", "call    randint_all_free", "mov     rax, [rsp+68h+p_saved_errno]", "mov     ecx, dword ptr [rsp+68h+var_68]", "mov     edx, dword ptr [rsp+68h+fd]", "mov     [rax], ecx"], ["mov~rdi,rand_src", "mov~[word ptr [rsp+0],edx", "mov~<TAG>,ecx", "call~FOO", "mov~rax,[rsp+0]", "mov~ecx,<TAG>", "mov~edx,[word ptr [rsp+0]", "mov~<TAG>,ecx"]], [1, 0, 2, 0, 0, 2, 0, 1, 7, -1, 0.00625, ["mov     edx, 0FFFFFFFFh", "jmp     short done"], ["mov~edx,0", "jmp~FOO"]], [2, 0, 11, 1, 1, 8, 0, 2, 6, -1, 0.0375, ["mov     esi, 3Dh ; '='; genmax", "mov     rdi, rand_src; s", "add     r15, 1", "call    randint_genmax", "movzx   eax, byte ptr [r12+rax]", "mov     [r15-1], al", "cmp     r15, rbx", "jnz     short loc_F7D8"], ["mov~esi,0", "mov~rdi,rand_src", "add~r15,0", "call~FOO", "movzx~eax,<TAG>", "mov~[r15-1]+0],al", "cmp~r15,rbx", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 0, 0.004166666666666667, ["mov     edx, 0FFFFFFFFh", "jmp     short loc_F863"], ["mov~edx,0", "jmp~FOO"]], [0, 0, 11, 0, 0, 1, 0, 0, 5, -1, 0.03333333333333333, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["add     rsp, 38h", "mov     eax, edx", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     x_suffix_len", "pop     r15", "retn"], ["add~rsp,0", "mov~eax,edx", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~x_suffix_len", "pop~r15", "retn"]], [2, 0, 1, 0, 1, 6, 0, 2, 8, -1, 0.00625, ["mov     rdi, rand_src; s", "call    randint_all_free", "mov     rax, [rsp+68h+p_saved_errno]", "mov     edx, 0FFFFFFFFh", "mov     dword ptr [rax], 11h", "jmp     short loc_F863"], ["mov~rdi,rand_src", "call~FOO", "mov~rax,[rsp+0]", "mov~edx,0", "mov~<TAG>,0", "jmp~FOO"]], [2, 0, 1, 0, 0, 4, 0, 1, 1, -1, 0.008333333333333333, ["mov     rax, [rsp+68h+p_saved_errno]", "mov     edx, 0FFFFFFFFh", "mov     dword ptr [rax], 16h", "jmp     short loc_F863"], ["mov~rax,[rsp+0]", "mov~edx,0", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 11, 0, 0, 4, 0, 1, 6, -1, 0.12916666666666665, ["mov     fd_0, [rsp+68h+p_saved_errno]", "mov     ecx, [rax]", "cmp     ecx, 11h", "jnz     short loc_F874"], ["mov~fd_0,[rsp+0]", "mov~ecx,<TAG>", "cmp~ecx,0", "jnz~FOO"]]], "func_feature": [8, 4, 19, 1, 17, 24, 6, 105, 0.06569, 2, 8], "succs": [[12, 5], [0, 14], [0], [2, 11], [8], [16, 4], [15, 7], [3, 15], [13], [8], [10, 5], [13], [10], [], [13], [13], [9, 1]], "fname": "try_tempname_len", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 0, 0, 1, 5, 0, 1, 0, 0, 0.0, ["lea     kind, __PRETTY_FUNCTION___5642; \"gen_tempname_len\"", "lea     suffixlen, aLibTempnameC; \"lib/tempname.c\"", "lea     tmpl, aInvalidKindInG; \"! \\\"invalid KIND in __gen_tempname\\\"\"", "mov     edx, 147h; line", "call    ___assert_fail"], ["lea~kind,<TAG>", "lea~suffixlen,<TAG>", "lea~tmpl,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 2, -1, 0.13333333333333333, ["test    ecx, ecx", "jz      short loc_F8F0"], ["test~ecx,ecx", "jz~FOO"]], [1, 0, 0, 1, 1, 5, 0, 1, 3, -1, 0.0, ["lea     flags_0, [rsp+18h+flags]; args", "lea     kind, try_file; tryfunc", "call    try_tempname_len", "add     rsp, 18h", "retn"], ["lea~flags_0,[rsp+0]", "lea~kind,<TAG>", "call~FOO", "add~rsp,0", "retn"]], [2, 0, 6, 1, 0, 4, 0, 1, 0, 1, 0.0, ["sub     rsp, 18h", "cmp     ecx, 1", "mov     [rsp+18h+flags], edx", "jz      short loc_F910"], ["sub~rsp,0", "cmp~ecx,0", "mov~[rsp+0],edx", "jz~FOO"]], [1, 0, 0, 1, 1, 5, 0, 1, 2, -1, 0.0, ["lea     flags_0, [rsp+18h+flags]; args", "lea     kind, try_nocreate; tryfunc", "call    try_tempname_len", "add     rsp, 18h", "retn"], ["lea~flags_0,[rsp+0]", "lea~kind,<TAG>", "call~FOO", "add~rsp,0", "retn"]], [1, 0, 4, 0, 0, 2, 0, 1, 1, -1, 0.13333333333333333, ["cmp     ecx, 2", "jz      short loc_F8D8"], ["cmp~ecx,0", "jz~FOO"]], [1, 0, 0, 1, 1, 5, 0, 1, 1, 0, 0.0, ["lea     flags_0, [rsp+18h+flags]; args", "lea     kind, try_dir; tryfunc", "call    try_tempname_len", "add     rsp, 18h", "retn"], ["lea~flags_0,[rsp+0]", "lea~kind,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [4, 1, 7, 0, 7, 6, 1, 28, 0.0381, 6, 4], "succs": [[], [0, 2], [], [5, 6], [], [1, 4], []], "fname": "gen_tempname_len", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     r8d, 6; x_suffix_len", "jmp     gen_tempname_len"], ["mov~r8d,0", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[], [0]], "fname": "gen_tempname", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     r8d, 6; x_suffix_len", "jmp     try_tempname_len"], ["mov~r8d,0", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[], [0]], "fname": "try_tempname", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 0, 1, 0, 7, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "mov     eax, ebx", "pop     fd", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "mov~eax,ebx", "pop~fd", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [2, 0, 2, 1, 0, 8, 0, 1, 0, 0, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     ebx, edi", "sub     rsp, 8", "cmp     edi, 2", "ja      short loc_F982"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~ebx,edi", "sub~rsp,0", "cmp~edi,0", "ja~FOO"]], [0, 0, 1, 0, 3, 9, 0, 3, 1, 0, 0.0, ["call    dup_safer", "mov     r12d, eax", "call    ___errno_location", "mov     r13d, [rax]", "mov     rbp, rax", "mov     edi, ebx; fd", "call    _close", "mov     ebx, r12d", "mov     [rbp+0], r13d"], ["call~FOO", "mov~r12d,eax", "call~FOO", "mov~r13d,<TAG>", "mov~rbp,rax", "mov~edi,ebx", "call~FOO", "mov~ebx,r12d", "mov~[rbp+0],r13d"]]], "func_feature": [3, 0, 4, 0, 3, 3, 2, 24, 0.0, 0, 2], "succs": [[], [0, 2], [0]], "fname": "fd_safer", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 1, 0, 5, 1, 0, 0, 0, 0.0, ["mov     rax, [p]", "xor     edx, edx", "div     table_size", "mov     rax, rdx", "retn"], ["mov~rax,<TAG>", "xor~edx,edx", "div~,table_size", "mov~rax,rdx", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 0, 1], "succs": [[]], "fname": "dev_info_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["mov     rax, [b]", "cmp     [a], rax", "setz    al", "retn"], ["mov~rax,<TAG>", "cmp~<TAG>,rax", "setz~al", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 4, 0.0, 0, 0], "succs": [[]], "fname": "dev_info_compare", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.03172924378635643, ["mov     rsi, [rsp+158h+var_40]", "xor     rsi, fs:28h", "mov     eax, ebx", "jnz     loc_100D8"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [0, 0, 58, 0, 0, 3, 0, 1, 3, 15, 0.04217345319936541, ["lea     rax, [dst_s_0-1]", "cmp     rax, src_s_0", "jg      loc_FAEF"], ["lea~rax,[dst_s_0-1]+0]", "cmp~rax,src_s_0", "jg~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 2, -1, 0.03960489536904132, ["mov     ebx, 1", "jl      short loc_FAEF"], ["mov~ebx,0", "jl~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 2, -1, 0.0010576414595452142, ["xor     ebx, ebx", "jmp     short loc_FAEF"], ["xor~ebx,ebx", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, -1, 0.013824884792626727, ["mov     ebx, 0FFFFFFFFh", "jmp     short loc_FAEF"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 29, 0, 0, 2, 0, 1, 11, 7, 0.19392611618946892, ["cmp     r14, r12", "jg      loc_FAEF"], ["cmp~r14,r12", "jg~FOO"]], [1, 0, 27, 0, 0, 2, 0, 1, 13, 6, 0.0007932310946589106, ["cmp     byte ptr [rsp+158h+fildes], 0", "jnz     loc_FAEF"], ["cmp~[yte ptr [rsp+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 16, -1, 0.002776308831306187, ["mov     ebx, 0FFFFFFFEh", "jmp     loc_FAEF"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 0, 4, -1, 0.0003966155473294553, ["setl    bl", "movzx   ebx, bl"], ["setl~bl", "movzx~ebx,bl"]], [1, 0, 30, 0, 0, 13, 1, 1, 13, 8, 0.026441036488630353, ["cmp     ebp, 77359400h", "mov     r12, [rsp+158h+old_res]", "mov     m, [rsp+158h+dst_res]", "setz    byte ptr [rsp+158h+filename]", "movzx   eax, byte ptr [rsp+158h+filename]", "mov     dword ptr [rsp+158h+old_res], r9d", "mov     r14, [rsp+158h+dst_m_s]", "mov     r9d, [rsp+158h+var_11C]", "mov     [rsi+8], ebp", "not     eax", "cdqe", "and     rax, r12", "jmp     loc_FE13"], ["cmp~ebp,0", "mov~r12,[rsp+0]", "mov~m,[rsp+0]", "setz~[yte ptr [rsp+0]", "movzx~eax,[yte ptr [rsp+0]", "mov~[word ptr [rsp+0],r9d", "mov~r14,[rsp+0]", "mov~r9d,[rsp+0]", "mov~[rsi+0],ebp", "not~eax", "cdqe~", "and~rax,r12", "jmp~FOO"]], [6, 0, 37, 7, 0, 23, 0, 1, 12, 9, 0.046007403490216814, ["mov     eax, r8d", "sar     r8d, 1Fh", "lea     ebp, [res_0+res_0*4]", "imul    edi", "mov     eax, ecx", "sar     ecx, 1Fh", "add     ebp, ebp", "mov     r9d, ebp", "sar     edx, 2", "sub     edx, r8d", "mov     r8d, edx", "imul    edi", "mov     eax, esi", "sar     esi, 1Fh", "sar     edx, 2", "sub     edx, ecx", "mov     ecx, edx", "imul    edi", "sar     edx, 2", "sub     edx, esi", "cmp     ebp, dword ptr [rsp+158h+res]", "mov     esi, edx", "jge     loc_10050"], ["mov~eax,r8d", "sar~r8d,0", "lea~ebp,<TAG>", "imul~,edi", "mov~eax,ecx", "sar~ecx,0", "add~ebp,ebp", "mov~r9d,ebp", "sar~edx,0", "sub~edx,r8d", "mov~r8d,edx", "imul~,edi", "mov~eax,esi", "sar~esi,0", "sar~edx,0", "sub~edx,ecx", "mov~ecx,edx", "imul~,edi", "sar~edx,0", "sub~edx,esi", "cmp~ebp,[word ptr [rsp+0]", "mov~esi,edx", "jge~FOO"]], [6, 0, 37, 12, 0, 33, 2, 1, 13, 9, 0.024325753569539928, ["mov     eax, r8d", "mov     r12d, r8d", "imul    edi", "mov     eax, r8d", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     r12d, eax", "mov     eax, ecx", "imul    edi", "mov     eax, ecx", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "mov     edx, ecx", "add     eax, eax", "sub     edx, eax", "mov     eax, esi", "or      r12d, edx", "imul    edi", "mov     eax, esi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "mov     edx, esi", "add     eax, eax", "sub     edx, eax", "or      r12d, edx", "jnz     loc_10050"], ["mov~eax,r8d", "mov~r12d,r8d", "imul~,edi", "mov~eax,r8d", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~r12d,eax", "mov~eax,ecx", "imul~,edi", "mov~eax,ecx", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "mov~edx,ecx", "add~eax,eax", "sub~edx,eax", "mov~eax,esi", "or~r12d,edx", "imul~,edi", "mov~eax,esi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "mov~edx,esi", "add~eax,eax", "sub~edx,eax", "or~r12d,edx", "jnz~FOO"]], [3, 0, 43, 0, 0, 4, 0, 0, 7, 11, 0.08693435068368967, ["mov     [rsp+158h+tmp_dst_res.resolution], 77359400h", "mov     [rsp+158h+tmp_dst_res.exact], 0", "mov     dword ptr [rsp+158h+res], 77359400h", "mov     [rsp+158h+dst_res], rcx"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],rcx"]], [0, 0, 44, 0, 0, 2, 0, 1, 6, 12, 0.06670695776988744, ["lea     rcx, [rsp+158h+tmp_dst_res]", "jmp     loc_FBF0"], ["lea~rcx,[rsp+0]", "jmp~FOO"]], [0, 0, 44, 0, 0, 1, 0, 0, 8, 12, 0.0006610259122157589, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 15, 2, 0, 8, 1, 1, 20, -1, 0.05023796932839767, ["mov     eax, ecx", "cdq", "idiv    edi", "cdq", "mov     ecx, eax", "idiv    edi", "test    edx, edx", "jnz     loc_1011C"], ["mov~eax,ecx", "cdq~,", "idiv~,edi", "cdq~,", "mov~ecx,eax", "idiv~,edi", "test~edx,edx", "jnz~FOO"]], [3, 0, 15, 0, 0, 4, 0, 1, 19, -1, 0.05684822845055526, ["mov     r8d, 9", "mov     esi, 0Ah", "mov     edi, 0Ah", "jmp     short loc_FF7D"], ["mov~r8d,0", "mov~esi,0", "mov~edi,0", "jmp~FOO"]], [1, 0, 15, 1, 0, 3, 0, 1, 22, -1, 0.0018508725542041248, ["imul    esi, 0Ah", "cmp     esi, dword ptr [rsp+158h+old_res]", "jz      short loc_FF9D"], ["imul~esi,,0", "cmp~esi,[word ptr [rsp+0]", "jz~FOO"]], [12, 0, 39, 12, 0, 36, 2, 1, 10, 9, 0.047593865679534636, ["mov     eax, 66666667h", "imul    edi", "mov     eax, edi", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     edi, eax", "mov     eax, 66666667h", "imul    dword ptr [rsp+158h+old_res]", "mov     eax, dword ptr [rsp+158h+old_res]", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "mov     edx, dword ptr [rsp+158h+old_res]", "mov     dword ptr [rsp+158h+old_res], 0Ah", "add     eax, eax", "sub     edx, eax", "mov     eax, 66666667h", "or      edi, edx", "imul    r8d", "mov     eax, r8d", "mov     [rsp+158h+var_11C], edi", "sar     eax, 1Fh", "mov     edi, 66666667h", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "mov     edx, 8", "add     eax, eax", "sub     r8d, eax", "mov     eax, [rsp+158h+var_11C]", "or      eax, r8d", "jnz     loc_100C4"], ["mov~eax,0", "imul~,edi", "mov~eax,edi", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~edi,eax", "mov~eax,0", "imul~,[word ptr [rsp+0]", "mov~eax,[word ptr [rsp+0]", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "mov~edx,[word ptr [rsp+0]", "mov~[word ptr [rsp+0],0", "add~eax,eax", "sub~edx,eax", "mov~eax,0", "or~edi,edx", "imul~,r8d", "mov~eax,r8d", "mov~[rsp+0],edi", "sar~eax,0", "mov~edi,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "mov~edx,0", "add~eax,eax", "sub~r8d,eax", "mov~eax,[rsp+0]", "or~eax,r8d", "jnz~FOO"]], [1, 0, 41, 0, 0, 8, 0, 1, 9, 9, 0.16219687240311248, ["cmp     dword ptr [rsp+158h+res], 0Ah", "mov     rax, [dst_stat_0+48h]", "mov     ecx, edi", "mov     edx, dword ptr [rsp+158h+old_res]", "mov     esi, r8d", "mov     [rsp+158h+dst_a_s_0], rax", "mov     dword ptr [rsp+158h+dst_stat], edx", "jle     loc_100A8"], ["cmp~[word ptr [rsp+0],0", "mov~rax,[dst_stat_0+0]", "mov~ecx,edi", "mov~edx,[word ptr [rsp+0]", "mov~esi,r8d", "mov~[rsp+0],rax", "mov~[word ptr [rsp+0],edx", "jle~FOO"]], [0, 0, 52, 0, 1, 13, 1, 2, 6, 13, 0.030105008687769125, ["mov     rax, [dst_stat_0+0]", "mov     rdi, rdx; table", "mov     [rsp+158h+a], r11", "mov     dword ptr [rsp+158h+old_res], r10d", "mov     dword ptr [rsp+158h+res], r9d", "mov     [rsi], rax", "call    hash_insert", "test    rax, rax", "mov     [rsp+158h+dst_res], rax", "mov     r9d, dword ptr [rsp+158h+res]", "mov     r10d, dword ptr [rsp+158h+old_res]", "mov     r11, [rsp+158h+a]", "jz      low_memory"], ["mov~rax,[dst_stat_0+0]", "mov~rdi,rdx", "mov~[rsp+0],r11", "mov~[word ptr [rsp+0],r10d", "mov~[word ptr [rsp+0],r9d", "mov~<TAG>,rax", "call~FOO", "test~rax,rax", "mov~[rsp+0],rax", "mov~r9d,[word ptr [rsp+0]", "mov~r10d,[word ptr [rsp+0]", "mov~r11,[rsp+0]", "jz~FOO"]], [2, 0, 53, 0, 0, 3, 0, 1, 7, 14, 0.0013220518244315177, ["mov     dword ptr [rax+8], 77359400h", "mov     byte ptr [rax+0Ch], 0", "jmp     loc_FA59"], ["mov~[word ptr [rax+0],0", "mov~[yte ptr [rax+0],0", "jmp~FOO"]], [0, 0, 55, 0, 0, 3, 1, 1, 5, 14, 0.019490821183047517, ["mov     rsi, cs:new_dst_res_5308; entry", "test    rsi, rsi", "jz      loc_FB30"], ["mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [0, 0, 59, 0, 0, 3, 0, 1, 2, 16, 0.02829190904283448, ["lea     rax, [src_s_0-1]", "cmp     rax, dst_s_0", "jg      loc_FB28"], ["lea~rax,[src_s_0-1]+0]", "cmp~rax,dst_s_0", "jg~FOO"]], [2, 0, 30, 0, 0, 3, 0, 0, 16, 8, 0.006610259122157588, ["mov     dword ptr [rax+8], 3B9ACA00h", "mov     dword ptr [rsp+158h+old_res], 3B9ACA00h", "mov     rax, r12"], ["mov~[word ptr [rax+0],0", "mov~[word ptr [rsp+0],0", "mov~rax,r12"]], [1, 0, 32, 0, 0, 10, 3, 1, 15, 9, 0.01850872554204125, ["mov     r14, [rsp+158h+dst_m_s]", "mov     res_0, [rsp+158h+dst_stat]", "mov     rax, [rsp+158h+dst_a_s_0]", "mov     r12, [rsp+158h+old_res]", "mov     r9d, [rsp+158h+var_11C]", "or      rax, r14", "or      rax, [rbp+68h]", "test    al, 1", "mov     rax, [rsp+158h+dst_res]", "jz      loc_10088"], ["mov~r14,[rsp+0]", "mov~res_0,[rsp+0]", "mov~rax,[rsp+0]", "mov~r12,[rsp+0]", "mov~r9d,[rsp+0]", "or~rax,r14", "or~rax,[rbp+0]", "test~al,0", "mov~rax,[rsp+0]", "jz~FOO"]], [0, 1, 21, 0, 1, 13, 1, 2, 17, 3, 0.011369645690111053, ["mov     [rsp+158h+timespec.tv_nsec+10h], rdx", "mov     ecx, 100h; flags", "mov     rdx, rbp; times", "mov     rsi, r11; path", "mov     edi, r10d; fd", "mov     dword ptr [rsp+158h+filename], r8d", "mov     [rsp+158h+fildes], r9d", "mov     [rsp+158h+timespec.tv_sec+10h], r14", "call    _utimensat", "mov     r8d, dword ptr [rsp+158h+filename]", "mov     r9d, [rsp+158h+fildes]", "test    r8d, r8d", "jnz     loc_FEC1"], ["mov~[rsp+0],rdx", "mov~ecx,<STR>", "mov~rdx,rbp", "mov~rsi,r11", "mov~edi,r10d", "mov~[word ptr [rsp+0],r8d", "mov~[rsp+0],r9d", "mov~[rsp+0],r14", "call~FOO", "mov~r8d,[word ptr [rsp+0]", "mov~r9d,[rsp+0]", "test~r8d,r8d", "jnz~FOO"]], [1, 1, 22, 0, 1, 22, 4, 2, 16, 2, 0.14595452141723955, ["lea     rcx, [rsp+158h+dst_status]; stat_buf", "mov     rdx, r11; filename", "mov     r8d, 100h; flag", "mov     esi, r10d; fildes", "mov     edi, 1; ver", "mov     dword ptr [rsp+158h+res], r9d", "mov     [rsp+158h+filename], r11", "mov     [rsp+158h+fildes], r10d", "call    ___fxstatat", "mov     rcx, [rsp+158h+dst_status.st_mtim.tv_nsec]", "mov     r8d, eax", "mov     rax, [rsp+158h+dst_status.st_mtim.tv_sec]", "movsxd  rdx, r15d", "mov     r10d, [rsp+158h+fildes]", "mov     r11, [rsp+158h+filename]", "mov     r9d, dword ptr [rsp+158h+res]", "xor     rcx, rdx", "xor     rax, r14", "or      rax, rcx", "movsxd  rcx, r8d", "or      rax, rcx", "jnz     loc_100DD"], ["lea~rcx,[rsp+0]", "mov~rdx,r11", "mov~r8d,<STR>", "mov~esi,r10d", "mov~edi,0", "mov~[word ptr [rsp+0],r9d", "mov~[rsp+0],r11", "mov~[rsp+0],r10d", "call~FOO", "mov~rcx,[rsp+0]", "mov~r8d,eax", "mov~rax,[rsp+0]", "movsxd~rdx,r15d", "mov~r10d,[rsp+0]", "mov~r11,[rsp+0]", "mov~r9d,[word ptr [rsp+0]", "xor~rcx,rdx", "xor~rax,r14", "or~rax,rcx", "movsxd~rcx,r8d", "or~rax,rcx", "jnz~FOO"]], [0, 0, 61, 0, 0, 9, 1, 1, 1, 17, 0.014278159703860392, ["cmp     dst_s_0, src_s_0", "mov     r10d, edi", "setz    byte ptr [rsp+158h+fildes]", "movzx   edi, byte ptr [rsp+158h+fildes]", "cmp     r15d, r13d", "setz    al", "and     al, dil", "mov     byte ptr [rsp+158h+filename], al", "jnz     loc_FB20"], ["cmp~dst_s_0,src_s_0", "mov~r10d,edi", "setz~[yte ptr [rsp+0]", "movzx~edi,[yte ptr [rsp+0]", "cmp~r15d,r13d", "setz~al", "and~al,dil", "mov~[yte ptr [rsp+0],al", "jnz~FOO"]], [1, 1, 62, 1, 0, 19, 3, 1, 0, 18, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     ebx, r8d", "and     ebx, 1", "sub     rsp, 128h", "mov     r13, [src_stat+60h]", "mov     r14, [dst_stat_0+58h]", "mov     rax, fs:28h", "mov     [rsp+158h+var_40], rax", "xor     eax, eax", "test    ebx, ebx", "mov     r12, [src_stat+58h]", "mov     r15, [dst_stat_0+60h]", "mov     r9d, r13d", "jz      loc_FAD8"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~ebx,r8d", "and~ebx,0", "sub~rsp,<STR>", "mov~r13,[src_stat+0]", "mov~r14,[dst_stat_0+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~ebx,ebx", "mov~r12,[src_stat+0]", "mov~r15,[dst_stat_0+0]", "mov~r9d,r13d", "jz~FOO"]], [1, 0, 15, 1, 0, 2, 0, 1, 21, -1, 0.024061343204653623, ["sub     r8d, 1", "jnz     short loc_FF74"], ["sub~r8d,0", "jnz~FOO"]], [9, 0, 42, 12, 0, 37, 2, 1, 8, 10, 0.17220669335952254, ["mov     rcx, [dst_stat_0+50h]", "mov     eax, 66666667h", "mov     rsi, [dst_stat_0+70h]", "imul    ecx", "mov     eax, ecx", "mov     [rsp+158h+a], rcx", "sar     eax, 1Fh", "sar     edx, 2", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "mov     dword ptr [rsp+158h+old_res], edx", "add     eax, eax", "sub     ecx, eax", "mov     eax, 66666667h", "imul    esi", "mov     eax, esi", "sar     eax, 1Fh", "sar     edx, 2", "mov     edi, edx", "sub     edi, eax", "lea     eax, [rdi+rdi*4]", "add     eax, eax", "sub     esi, eax", "mov     eax, 66666667h", "imul    r15d", "mov     eax, r15d", "or      ecx, esi", "sar     eax, 1Fh", "mov     esi, r15d", "sar     edx, 2", "mov     r8d, edx", "sub     r8d, eax", "lea     eax, [r8+r8*4]", "add     eax, eax", "sub     esi, eax", "or      ecx, esi", "jnz     loc_FFC8"], ["mov~rcx,[dst_stat_0+0]", "mov~eax,0", "mov~rsi,[dst_stat_0+0]", "imul~,ecx", "mov~eax,ecx", "mov~[rsp+0],rcx", "sar~eax,0", "sar~edx,0", "sub~edx,eax", "lea~eax,<TAG>", "mov~[word ptr [rsp+0],edx", "add~eax,eax", "sub~ecx,eax", "mov~eax,0", "imul~,esi", "mov~eax,esi", "sar~eax,0", "sar~edx,0", "mov~edi,edx", "sub~edi,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~esi,eax", "mov~eax,0", "imul~,r15d", "mov~eax,r15d", "or~ecx,esi", "sar~eax,0", "mov~esi,r15d", "sar~edx,0", "mov~r8d,edx", "sub~r8d,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~esi,eax", "or~ecx,esi", "jnz~FOO"]], [1, 0, 10, 0, 0, 1, 0, 0, 22, -1, 0.0013220518244315177, ["mov     dword ptr [rsp+158h+old_res], 77359400h"], ["mov~[word ptr [rsp+0],0"]], [4, 0, 30, 0, 0, 6, 1, 1, 16, 8, 0.006610259122157588, ["mov     dword ptr [rax+8], 77359400h", "mov     rax, r12", "mov     byte ptr [rsp+158h+filename], 1", "and     rax, 0FFFFFFFFFFFFFFFEh", "mov     dword ptr [rsp+158h+old_res], 77359400h", "jmp     loc_FE13"], ["mov~[word ptr [rax+0],0", "mov~rax,r12", "mov~[yte ptr [rsp+0],0", "and~rax,0", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [2, 0, 30, 0, 0, 5, 0, 1, 10, 8, 0.11486741708846415, ["mov     rax, [rsp+158h+dst_res]", "mov     dword ptr [rsp+158h+old_res], 0Ah", "mov     dword ptr [rax+8], 0Ah", "mov     rax, src_s_0", "jmp     loc_FE13"], ["mov~rax,[rsp+0]", "mov~[word ptr [rsp+0],0", "mov~[word ptr [rax+0],0", "mov~rax,src_s_0", "jmp~FOO"]], [1, 0, 30, 0, 0, 4, 0, 1, 11, 8, 0.007932310946589107, ["mov     rax, [rsp+158h+dst_res]", "mov     dword ptr [rax+8], 0Ah", "mov     rax, src_s_0", "jmp     loc_FE13"], ["mov~rax,[rsp+0]", "mov~[word ptr [rax+0],0", "mov~rax,src_s_0", "jmp~FOO"]], [0, 0, 19, 0, 0, 1, 0, 1, 18, 2, 0.004230565838180857, ["jmp     loc_FF32"], ["jmp~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 128h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     dst_ns", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~dst_ns", "retn"]], [0, 0, 28, 0, 0, 2, 0, 1, 12, 6, 0.18138551031200423, ["cmp     r15d, r13d", "jl      short loc_FE2C"], ["cmp~r15d,r13d", "jl~FOO"]], [0, 0, 46, 0, 0, 2, 0, 1, 7, 12, 0.035789831532824654, ["cmp     cs:new_dst_res_5308, dst_res_0", "jz      loc_10040"], ["cmp~<TAG>,dst_res_0", "jz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 1, 18, 0, 0.022210470650449496, ["mov     dword ptr [rsp+158h+old_res], ebx", "jmp     loc_FF9D"], ["mov~[word ptr [rsp+0],ebx", "jmp~FOO"]], [3, 0, 18, 3, 0, 10, 2, 1, 17, 1, 0.1285034373347435, ["mov     ecx, dword ptr [rsp+158h+dst_status.st_mtim.tv_sec]", "mov     esi, 0Ah", "and     ecx, 1", "imul    ecx, 3B9ACA00h", "add     ecx, dword ptr [rsp+158h+dst_status.st_mtim.tv_nsec]", "mov     eax, ecx", "cdq", "idiv    esi", "test    edx, edx", "jnz     loc_10125"], ["mov~ecx,[word ptr [rsp+0]", "mov~esi,0", "and~ecx,0", "imul~ecx,,0", "add~ecx,[word ptr [rsp+0]", "mov~eax,ecx", "cdq~,", "idiv~,esi", "test~edx,edx", "jnz~FOO"]], [2, 1, 23, 2, 1, 29, 2, 2, 15, 3, 0.16115811739820202, ["mov     rax, [rsp+158h+dst_a_s_0]", "mov     edx, 38E38E39h", "lea     rbp, [rsp+158h+timespec]", "mov     rsi, r11; path", "mov     edi, r10d; fd", "mov     ecx, 100h; flags", "mov     dword ptr [rsp+158h+res], r9d", "mov     [rsp+158h+fildes], r10d", "mov     [rsp+158h+timespec.tv_sec], rax", "movsxd  rax, dword ptr [rsp+158h+a]", "mov     [rsp+158h+timespec.tv_nsec], rax", "movzx   eax, byte ptr [rsp+158h+filename]", "mov     [rsp+158h+filename], r11", "or      rax, r14", "mov     [rsp+158h+timespec.tv_sec+10h], rax", "mov     eax, dword ptr [rsp+158h+old_res]", "mul     edx", "mov     eax, edx", "mov     rdx, rbp; times", "shr     eax, 1", "add     eax, r15d", "cdqe", "mov     [rsp+158h+timespec.tv_nsec+10h], rax", "call    _utimensat", "test    eax, eax", "mov     r10d, [rsp+158h+fildes]", "mov     r11, [rsp+158h+filename]", "mov     r9d, dword ptr [rsp+158h+res]", "jz      short loc_FECB"], ["mov~rax,[rsp+0]", "mov~edx,0", "lea~rbp,[rsp+0]", "mov~rsi,r11", "mov~edi,r10d", "mov~ecx,<STR>", "mov~[word ptr [rsp+0],r9d", "mov~[rsp+0],r10d", "mov~[rsp+0],rax", "movsxd~rax,[word ptr [rsp+0]", "mov~[rsp+0],rax", "movzx~eax,[yte ptr [rsp+0]", "mov~[rsp+0],r11", "or~rax,r14", "mov~[rsp+0],rax", "mov~eax,[word ptr [rsp+0]", "mul~,edx", "mov~eax,edx", "mov~rdx,rbp", "shr~eax,0", "add~eax,r15d", "cdqe~", "mov~[rsp+0],rax", "call~FOO", "test~eax,eax", "mov~r10d,[rsp+0]", "mov~r11,[rsp+0]", "mov~r9d,[word ptr [rsp+0]", "jz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 1, -1, 0.07207071088615245, ["cmp     src_s_0, r14", "jg      short loc_FB28"], ["cmp~src_s_0,r14", "jg~FOO"]], [0, 0, 5, 0, 0, 2, 0, 1, 3, -1, 0.014806980433632998, ["cmp     r9d, r15d", "jg      short loc_FB28"], ["cmp~r9d,r15d", "jg~FOO"]], [0, 0, 26, 0, 0, 2, 0, 1, 13, 5, 0.17662612374405076, ["cmp     r14, rax", "jl      loc_FB28"], ["cmp~r14,rax", "jl~FOO"]], [0, 0, 24, 2, 0, 7, 0, 1, 15, 4, 0.0006610259122157589, ["mov     eax, r9d", "cdq", "idiv    dword ptr [rsp+158h+old_res]", "mov     eax, r13d", "sub     eax, edx", "cmp     eax, r15d", "jg      loc_FB28"], ["mov~eax,r9d", "cdq~,", "idiv~,[word ptr [rsp+0]", "mov~eax,r13d", "sub~eax,edx", "cmp~eax,r15d", "jg~FOO"]], [1, 0, 37, 0, 0, 7, 0, 0, 11, 10, 0.03886832363828662, ["mov     [rsp+158h+var_11C], r9d", "mov     [rsp+158h+dst_m_s], dst_m_s_0", "mov     r9d, 0Ah", "mov     r8d, dword ptr [rsp+158h+dst_stat]", "mov     [rsp+158h+old_res], src_s_0", "mov     r14d, edx", "mov     [rsp+158h+dst_stat], dst_stat_0"], ["mov~[rsp+0],r9d", "mov~[rsp+0],dst_m_s_0", "mov~r9d,0", "mov~r8d,[word ptr [rsp+0]", "mov~[rsp+0],src_s_0", "mov~r14d,edx", "mov~[rsp+0],dst_stat_0"]], [1, 0, 44, 0, 0, 5, 0, 1, 8, 11, 0.09365792853365565, ["mov     rax, [rsp+158h+dst_res]", "cmp     byte ptr [rax+0Ch], 0", "mov     esi, [rax+8]", "mov     dword ptr [rsp+158h+res], esi", "jz      loc_FC0A"], ["mov~rax,[rsp+0]", "cmp~[yte ptr [rax+0],0", "mov~esi,[rax+0]", "mov~[word ptr [rsp+0],esi", "jz~FOO"]], [0, 0, 47, 0, 1, 17, 1, 2, 7, 12, 0.031823676059530105, ["lea     rcx, [rsp+158h+tmp_dst_res]", "mov     rax, [dst_stat_0+0]", "mov     rdi, rdx; table", "mov     [rsp+158h+dst_stat], r11", "mov     dword ptr [rsp+158h+a], r10d", "mov     rsi, rcx; entry", "mov     dword ptr [rsp+158h+old_res], r9d", "mov     [rsp+158h+res], rcx", "mov     [rsp+158h+tmp_dst_res.dev], rax", "call    hash_lookup", "test    rax, rax", "mov     [rsp+158h+dst_res], rax", "mov     rcx, [rsp+158h+res]", "mov     r9d, dword ptr [rsp+158h+old_res]", "mov     r10d, dword ptr [rsp+158h+a]", "mov     r11, [rsp+158h+dst_stat]", "jnz     loc_FAA1"], ["lea~rcx,[rsp+0]", "mov~rax,[dst_stat_0+0]", "mov~rdi,rdx", "mov~[rsp+0],r11", "mov~[word ptr [rsp+0],r10d", "mov~rsi,rcx", "mov~[word ptr [rsp+0],r9d", "mov~[rsp+0],rcx", "mov~[rsp+0],rax", "call~FOO", "test~rax,rax", "mov~[rsp+0],rax", "mov~rcx,[rsp+0]", "mov~r9d,[word ptr [rsp+0]", "mov~r10d,[word ptr [rsp+0]", "mov~r11,[rsp+0]", "jnz~FOO"]], [1, 0, 45, 0, 0, 2, 0, 1, 8, 12, 0.0, ["mov     cs:new_dst_res_5308, 0", "jmp     loc_FAA1"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 25, 0, 0, 1, 0, 1, 14, 4, 0.16922263352723427, ["jnz     short loc_FE4D"], ["jnz~FOO"]], [0, 0, 49, 0, 0, 3, 1, 1, 7, 13, 0.002776308831306187, ["mov     rdx, cs:ht_5307", "test    rdx, rdx", "jz      loc_10032"], ["mov~rdx,<TAG>", "test~rdx,rdx", "jz~FOO"]], [1, 0, 56, 0, 1, 16, 2, 2, 5, 13, 0.05084233587670923, ["mov     options, cs:data_freer; data_freer", "lea     rdx, dev_info_hash; hasher", "lea     src_stat, dev_info_compare; comparator", "mov     [rsp+158h+old_res], dst_name_0", "mov     edi, 10h; candidate", "xor     esi, esi; tuning", "mov     dword ptr [rsp+158h+res], r10d", "mov     dword ptr [rsp+158h+dst_res], r13d", "call    hash_initialize", "test    rax, rax", "mov     rdx, rax", "mov     cs:ht_5307, rax", "mov     r9d, dword ptr [rsp+158h+dst_res]", "mov     r10d, dword ptr [rsp+158h+res]", "mov     r11, [rsp+158h+old_res]", "jnz     loc_FA49"], ["mov~options,<TAG>", "lea~rdx,<TAG>", "lea~src_stat,<TAG>", "mov~[rsp+0],dst_name_0", "mov~edi,0", "xor~esi,esi", "mov~[word ptr [rsp+0],r10d", "mov~[word ptr [rsp+0],r13d", "call~FOO", "test~rax,rax", "mov~rdx,rax", "mov~<TAG>,rax", "mov~r9d,[word ptr [rsp+0]", "mov~r10d,[word ptr [rsp+0]", "mov~r11,[rsp+0]", "jnz~FOO"]], [1, 0, 9, 2, 0, 14, 2, 0, 19, -1, 0.0523532522474881, ["mov     esi, dword ptr [rsp+158h+old_res]", "xor     eax, eax", "cmp     esi, 77359400h", "mov     ebx, esi", "setz    al", "not     eax", "cdqe", "and     r12, rax", "mov     eax, r9d", "mov     r9d, r13d", "cdq", "idiv    esi", "sub     r9d, edx", "nop     dword ptr [rax+00000000h]"], ["mov~esi,[word ptr [rsp+0]", "xor~eax,eax", "cmp~esi,0", "mov~ebx,esi", "setz~al", "not~eax", "cdqe~", "and~r12,rax", "mov~eax,r9d", "mov~r9d,r13d", "cdq~,", "idiv~,esi", "sub~r9d,edx", "nop~[word ptr [rax+0]"]], [1, 0, 16, 0, 0, 2, 0, 1, 18, -1, 0.08884188260179798, ["cmp     dword ptr [rsp+158h+old_res], 0Ah", "jz      short loc_FF9D"], ["cmp~[word ptr [rsp+0],0", "jz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 1, 21, -1, 0.005288207297726071, ["mov     dword ptr [rsp+158h+old_res], esi", "jmp     loc_FF9D"], ["mov~[word ptr [rsp+0],esi", "jmp~FOO"]], [0, 0, 57, 0, 0, 5, 1, 1, 4, 14, 0.05526176626123744, ["mov     rbp, dst_stat_0", "mov     dst_stat_0, cs:ht_5307", "mov     r11, dst_name_0", "test    rdx, rdx", "jz      loc_FFE0"], ["mov~rbp,dst_stat_0", "mov~dst_stat_0,<TAG>", "mov~r11,dst_name_0", "test~rdx,rdx", "jz~FOO"]], [1, 0, 37, 1, 0, 2, 0, 1, 14, 10, 0.01930195663670016, ["sub     r14d, 1", "jnz     loc_FD34"], ["sub~r14d,0", "jnz~FOO"]], [1, 0, 8, 0, 0, 4, 0, 1, 9, -1, 0.05733927627105839, ["mov     rax, [rsp+158h+dst_res]", "mov     [rax+8], ebx", "mov     byte ptr [rax+0Ch], 1", "jmp     loc_FAD8"], ["mov~rax,[rsp+0]", "mov~[rax+0],ebx", "mov~[yte ptr [rax+0],0", "jmp~FOO"]], [1, 0, 8, 2, 0, 12, 2, 0, 9, -1, 0.022663745561683164, ["xor     eax, eax", "cmp     esi, 77359400h", "setz    al", "not     eax", "cdqe", "and     src_s_0, rax", "mov     eax, r9d", "mov     r9d, r13d", "cdq", "idiv    esi", "sub     r9d, edx", "nop     dword ptr [rax]"], ["xor~eax,eax", "cmp~esi,0", "setz~al", "not~eax", "cdqe~", "and~src_s_0,rax", "mov~eax,r9d", "mov~r9d,r13d", "cdq~,", "idiv~,esi", "sub~r9d,edx", "nop~<TAG>"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 54, 0, 1, 14, 1, 2, 6, 13, 0.015033617889249831, ["mov     edi, 10h; size", "mov     [rsp+158h+a], r11", "mov     dword ptr [rsp+158h+old_res], r10d", "mov     dword ptr [rsp+158h+res], r9d", "mov     [rsp+158h+dst_res], rdx", "call    _malloc", "test    rax, rax", "mov     rsi, rax", "mov     cs:new_dst_res_5308, rax", "mov     rdx, [rsp+158h+dst_res]", "mov     r9d, dword ptr [rsp+158h+res]", "mov     r10d, dword ptr [rsp+158h+old_res]", "mov     r11, [rsp+158h+a]", "jz      short loc_FB98"], ["mov~edi,0", "mov~[rsp+0],r11", "mov~[word ptr [rsp+0],r10d", "mov~[word ptr [rsp+0],r9d", "mov~[rsp+0],rdx", "call~FOO", "test~rax,rax", "mov~rsi,rax", "mov~<TAG>,rax", "mov~rdx,[rsp+0]", "mov~r9d,[word ptr [rsp+0]", "mov~r10d,[word ptr [rsp+0]", "mov~r11,[rsp+0]", "jz~FOO"]]], "func_feature": [8, 39, 61, 2, 63, 99, 1, 483, 0.04761, 6, 61], "succs": [[37, 61], [0, 57], [0, 44], [0], [0], [0, 38], [0, 45], [0], [0], [5], [9, 11], [9, 58], [31], [12], [12], [56, 30], [15], [54, 15], [35, 47], [18, 34], [52, 39], [20], [20, 62], [1, 4], [5], [24, 33], [36, 7], [41, 26], [3, 23], [43, 28], [32, 17], [59, 19], [54], [5], [5], [5], [41], [], [45, 6], [48, 50], [54], [40, 55], [27, 7], [2, 4], [8, 4], [51, 4], [42, 4], [10], [60, 31], [48, 14], [48], [42, 46], [49, 13], [13, 22], [59], [16, 54], [54], [53, 22], [25, 10], [43], [43], [], [49, 21]], "fname": "utimecmpat", "n_num": 63}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 1, 0, 0, 6, 0, 1, 0, 0, 0.0, ["mov     r8d, ecx", "mov     options, src_stat", "mov     src_stat, dst_stat", "mov     dst_stat, dst_name", "mov     edi, 0FFFFFF9Ch", "jmp     utimecmpat"], ["mov~r8d,ecx", "mov~options,src_stat", "mov~src_stat,dst_stat", "mov~dst_stat,dst_name", "mov~edi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 1, 6, 0.0, 0, 0], "succs": [[1], []], "fname": "utimecmp", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.013636363636363636, ["mov     qword ptr [ts], 0", "xor     eax, eax", "jmp     loc_10188"], ["mov~<TAG>,0", "xor~eax,eax", "jmp~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 2, 0, 0.04090909090909091, ["cmp     rdx, 3FFFFFFFh", "jz      short loc_10218"], ["cmp~rdx,0", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 1, 0, 3, 0, 0.0, ["mov     rax, [statbuf+60h]", "mov     rdx, [statbuf+58h]", "mov     [timespec+18h], rax", "mov     [timespec+10h], rdx", "add     rsp, 18h", "xor     eax, eax", "pop     timespec", "pop     statbuf", "retn"], ["mov~rax,[statbuf+0]", "mov~rdx,[statbuf+0]", "mov~[timespec+0],rax", "mov~[timespec+0],rdx", "add~rsp,0", "xor~eax,eax", "pop~timespec", "pop~statbuf", "retn"]], [1, 0, 4, 0, 0, 2, 0, 1, 2, 0, 0.049999999999999996, ["cmp     rdx, 3FFFFFFEh", "jz      short loc_101AE"], ["cmp~rdx,0", "jz~FOO"]], [1, 0, 4, 0, 1, 5, 0, 2, 3, 0, 0.02727272727272727, ["mov     statbuf, timespec; ts", "call    gettime", "mov     rdx, [timespec+18h]", "cmp     rdx, 3FFFFFFEh", "jnz     short loc_1017D"], ["mov~statbuf,timespec", "call~FOO", "mov~rdx,[timespec+0]", "cmp~rdx,0", "jnz~FOO"]], [1, 0, 2, 0, 0, 3, 1, 1, 3, 0, 0.05909090909090909, ["xor     eax, eax", "cmp     rdx, 3FFFFFFFh", "jz      short loc_101F8"], ["xor~eax,eax", "cmp~rdx,0", "jz~FOO"]], [2, 0, 11, 1, 0, 9, 0, 1, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, statbuf", "sub     rsp, 18h", "mov     rbx, [ts]", "mov     rax, [timespec+8]", "mov     rdx, [timespec+18h]", "cmp     rax, 3FFFFFFEh", "jz      short loc_101D0"], ["push~rbp", "push~rbx", "mov~rbp,statbuf", "sub~rsp,0", "mov~rbx,<TAG>", "mov~rax,[timespec+0]", "mov~rdx,[timespec+0]", "cmp~rax,0", "jz~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 2, 0, 0.0, ["add     rsp, 18h", "pop     timespec", "pop     statbuf", "retn"], ["add~rsp,0", "pop~timespec", "pop~statbuf", "retn"]], [2, 0, 3, 0, 0, 3, 0, 1, 1, 0, 0.02727272727272727, ["cmp     rdx, 3FFFFFFEh", "mov     eax, 1", "jz      short loc_10188"], ["cmp~rdx,0", "mov~eax,0", "jz~FOO"]], [1, 0, 2, 0, 0, 7, 1, 1, 2, 0, 0.01818181818181818, ["mov     rax, [statbuf+50h]", "mov     rcx, [statbuf+48h]", "mov     [timespec+8], rax", "xor     eax, eax", "cmp     rdx, 3FFFFFFFh", "mov     [timespec], rcx", "jnz     short loc_10188"], ["mov~rax,[statbuf+0]", "mov~rcx,[statbuf+0]", "mov~[timespec+0],rax", "xor~eax,eax", "cmp~rdx,0", "mov~<TAG>,rcx", "jnz~FOO"]], [1, 0, 0, 1, 1, 8, 0, 1, 3, 0, 0.0, ["lea     rdi, [timespec+10h]; ts", "mov     [rsp+28h+var_19], al", "call    gettime", "movzx   eax, [rsp+28h+var_19]", "add     rsp, 18h", "pop     timespec", "pop     statbuf", "retn"], ["lea~rdi,[timespec+0]", "mov~[rsp+0],al", "call~FOO", "movzx~eax,[rsp+0]", "add~rsp,0", "pop~timespec", "pop~statbuf", "retn"]], [1, 0, 8, 0, 0, 2, 0, 1, 1, 0, 0.05454545454545454, ["cmp     rax, 3FFFFFFFh", "jz      short loc_10190"], ["cmp~rax,0", "jz~FOO"]]], "func_feature": [2, 4, 11, 1, 12, 17, 2, 57, 0.02424, 0, 4], "succs": [[7], [0, 4], [], [2, 5], [2, 5], [10, 7], [8, 11], [], [9, 7], [10, 7], [], [1, 3]], "fname": "update_timespec", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 6, 0, 0, 2, 0, 1, 0, 0, 0.013888888888888888, ["cmp     rdx, 3B9AC9FFh", "ja      short loc_102C0"], ["cmp~rdx,0", "ja~FOO"]], [1, 0, 7, 0, 0, 4, 0, 0, 1, 2, 0.16666666666666666, ["mov     rdx, [timespec+18h]", "lea     r8, [rdx-3FFFFFFEh]", "cmp     r8, 1", "jbe     short loc_10264"], ["mov~rdx,[timespec+0]", "lea~r8,[rdx-3FFFFFFEh]+0]", "cmp~r8,0", "jbe~FOO"]], [3, 0, 3, 0, 0, 5, 1, 0, 3, -1, 0.0, ["xor     esi, esi", "cmp     r9, 3FFFFFFEh", "mov     qword ptr [timespec], 0", "setz    sil", "mov     r10d, 1"], ["xor~esi,esi", "cmp~r9,0", "mov~<TAG>,0", "setz~sil", "mov~r10d,0"]], [1, 0, 4, 0, 0, 4, 2, 1, 2, -1, 0.2222222222222222, ["xor     esi, esi", "xor     r10d, r10d", "cmp     rcx, 1", "ja      short loc_10289"], ["xor~esi,esi", "xor~r10d,r10d", "cmp~rcx,0", "ja~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 1, 1, 0.013888888888888888, ["cmp     r9, 3B9AC9FFh", "ja      short loc_102C0"], ["cmp~r9,0", "ja~FOO"]], [1, 0, 9, 0, 0, 4, 0, 0, 0, 2, 0.0, ["mov     r9, [timespec+8]", "lea     rcx, [r9-3FFFFFFEh]", "cmp     rcx, 1", "jbe     short loc_1024A"], ["mov~r9,[timespec+0]", "lea~rcx,[r9-3FFFFFFEh]+0]", "cmp~rcx,0", "jbe~FOO"]], [3, 0, 1, 1, 0, 6, 1, 0, 4, -1, 0.0, ["xor     eax, eax", "cmp     rdx, 3FFFFFFEh", "mov     qword ptr [timespec+10h], 0", "setz    al", "mov     r10d, 1", "add     esi, eax"], ["xor~eax,eax", "cmp~rdx,0", "mov~[word ptr [timespec+0],0", "setz~al", "mov~r10d,0", "add~esi,eax"]], [1, 0, 2, 0, 0, 2, 0, 1, 3, -1, 0.16666666666666666, ["cmp     r8, 1", "ja      short loc_102AB"], ["cmp~r8,0", "ja~FOO"]], [1, 0, 0, 1, 0, 5, 1, 0, 4, -1, 0.0, ["xor     eax, eax", "cmp     esi, 1", "setz    al", "add     eax, r10d", "retn"], ["xor~eax,eax", "cmp~esi,0", "setz~al", "add~eax,r10d", "retn"]], [4, 0, 0, 2, 1, 6, 0, 1, 2, 0, 0.0, ["sub     rsp, 8", "call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     eax, 0FFFFFFFFh", "add     rsp, 8", "retn"], ["sub~rsp,0", "call~FOO", "mov~<TAG>,0", "mov~eax,0", "add~rsp,0", "retn"]]], "func_feature": [1, 5, 5, 0, 10, 14, 2, 40, 0.05833, 0, 4], "succs": [[9, 3], [0, 3], [7], [2, 7], [9, 1], [1, 4], [8], [8, 6], [], []], "fname": "validate_timespec", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     ecx, 100h; flags", "jmp     _utimensat"], ["mov~ecx,<STR>", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[], [0]], "fname": "lutimensat", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 4, 0, 1, 4, 1, 1, 0, 0, 0.0035067212156633543, ["lea     rdx, [rsp+138h+truncated_timeval]; tvp", "xor     esi, esi; file", "mov     edi, ebx; fd", "call    _futimesat"], ["lea~rdx,[rsp+0]", "xor~esi,esi", "mov~edi,ebx", "call~FOO"]], [1, 0, 7, 0, 0, 3, 1, 1, 15, -1, 0.01928696668614845, ["test    r14b, r14b", "mov     [rsp+138h+truncated_timeval.tv_usec], 0", "jz      short loc_104F7"], ["test~r14b,r14b", "mov~[rsp+0],0", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 15, -1, 0.00657510227936879, ["mov     [rsp+138h+truncated_timeval.tv_usec+10h], 0", "jmp     loc_104F7"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 16, -1, 0.0004383401519579193, ["cmp     [rsp+138h+st.st_mtim.tv_nsec], 0", "jz      loc_10728"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 43, 0, 0, 6, 0, 1, 9, 5, 0.029076563413208648, ["mov     rax, [rsp+138h+st.st_atim.tv_nsec]", "mov     rdx, [rsp+138h+st.st_atim.tv_sec]", "mov     r13d, 3", "mov     [rsi], rdx", "mov     [rsi+8], rax", "jmp     loc_10373"], ["mov~rax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r13d,0", "mov~<TAG>,rdx", "mov~[rsi+0],rax", "jmp~FOO"]], [1, 0, 46, 0, 0, 3, 0, 1, 8, 6, 0.055230859146697835, ["mov     rsi, [rsp+138h+ts]", "cmp     qword ptr [rsi+8], 3FFFFFFEh", "jz      loc_106D0"], ["mov~rsi,[rsp+0]", "cmp~[word ptr [rsi+0],0", "jz~FOO"]], [1, 0, 3, 0, 1, 4, 0, 1, 8, -1, 0.005610753945061367, ["mov     rsi, file; file", "mov     edi, 0FFFFFF9Ch; fd", "call    _futimesat", "mov     ebp, eax"], ["mov~rsi,file", "mov~edi,0", "call~FOO", "mov~ebp,eax"]], [0, 0, 21, 0, 0, 3, 1, 1, 7, -1, 0.1835768556399766, ["test    ebx, ebx", "mov     rdx, t; tvp", "js      loc_105F8"], ["test~ebx,ebx", "mov~rdx,t", "js~FOO"]], [1, 0, 40, 0, 1, 5, 0, 2, 7, 3, 0.0657510227936879, ["mov     edi, ebx; fd", "call    _futimens", "cmp     eax, 0", "mov     ebp, eax", "jle     loc_106BD"], ["mov~edi,ebx", "call~FOO", "cmp~eax,0", "mov~ebp,eax", "jle~FOO"]], [0, 0, 42, 0, 0, 2, 1, 1, 6, 4, 0.12916423144360023, ["test    ebx, ebx", "js      loc_106A0"], ["test~ebx,ebx", "js~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, -1, 0.013500876680303916, ["mov     ebp, 0FFFFFFFFh", "jmp     loc_10607"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 57, 0, 1, 10, 1, 2, 1, 9, 0.00891291642314436, ["movdqu  xmm0, xmmword ptr [timespec]", "lea     fd, [rsp+138h+adjusted_timespec]; timespec", "movaps  xmmword ptr [rsp+138h+adjusted_timespec.tv_sec], xmm0", "mov     [rsp+138h+ts], rdi", "movdqu  xmm0, xmmword ptr [timespec+10h]", "movaps  xmmword ptr [rsp+138h+adjusted_timespec.tv_sec+10h], xmm0", "call    validate_timespec", "test    eax, eax", "mov     r13d, eax", "js      loc_10703"], ["movdqu~xmm0,<TAG>", "lea~fd,[rsp+0]", "movaps~[mmword ptr [rsp+0],xmm0", "mov~[rsp+0],rdi", "movdqu~xmm0,[mmword ptr [timespec+0]", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "test~eax,eax", "mov~r13d,eax", "js~FOO"]], [0, 0, 29, 0, 0, 2, 1, 1, 8, -1, 0.02951490356516657, ["test    al, al", "jnz     loc_10703"], ["test~al,al", "jnz~FOO"]], [0, 0, 47, 0, 0, 2, 1, 1, 7, 7, 0.05119812974868497, ["test    al, al", "jnz     loc_10703"], ["test~al,al", "jnz~FOO"]], [1, 0, 4, 0, 1, 2, 0, 1, 4, -1, 0.0035067212156633543, ["call    ___errno_location", "mov     dword ptr [rax], 9"], ["call~FOO", "mov~<TAG>,0"]], [0, 0, 3, 0, 1, 5, 0, 2, 10, -1, 0.0, ["mov     rsi, t; tvp", "mov     rdi, file; file", "call    _utimes", "mov     ebp, eax", "jmp     short loc_10607"], ["mov~rsi,t", "mov~rdi,file", "call~FOO", "mov~ebp,eax", "jmp~FOO"]], [1, 0, 4, 0, 0, 3, 1, 1, 9, -1, 0.010958503798947984, ["test    file, file", "mov     ebp, 0FFFFFFFFh", "jz      short loc_10607"], ["test~file,file", "mov~ebp,0", "jz~FOO"]], [1, 0, 48, 0, 1, 5, 1, 1, 6, 8, 0.013033313851548801, ["mov     esi, ebx; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "setnz   al"], ["mov~esi,ebx", "mov~edi,0", "call~FOO", "test~eax,eax", "setnz~al"]], [0, 0, 50, 0, 0, 3, 1, 1, 5, 9, 0.01613091759205143, ["test    ebx, ebx", "lea     rdx, [rsp+138h+st]; stat_buf", "js      loc_10680"], ["test~ebx,ebx", "lea~rdx,[rsp+0]", "js~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, -1, 0.03331385154880187, ["mov     rcx, [rsp+138h+var_30]", "xor     rcx, fs:28h", "mov     eax, ebp", "jnz     loc_10736"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebp", "jnz~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 9, -1, 0.13720046756282875, ["test    t, t", "jz      loc_10607"], ["test~t,t", "jz~FOO"]], [0, 0, 14, 0, 0, 2, 1, 1, 11, -1, 0.0004383401519579193, ["test    r14b, r14b", "jz      loc_10607"], ["test~r14b,r14b", "jz~FOO"]], [1, 0, 13, 0, 1, 6, 1, 2, 11, -1, 0.11440677966101694, ["lea     rdx, [rsp+138h+st]; stat_buf", "mov     esi, ebx; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "jnz     loc_10607"], ["lea~rdx,[rsp+0]", "mov~esi,ebx", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 14, -1, 0.007890122735242549, ["xor     ebp, ebp", "jmp     loc_10607"], ["xor~ebp,ebp", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 8, -1, 0.0036820572764465222, ["jmp     loc_10607"], ["jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 9, -1, 0.008766803039158387, ["mov     cs:utimensat_works_really, 1", "jmp     loc_10607"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 26, 0, 1, 6, 2, 2, 7, -1, 0.015078901227352426, ["lea     rsi, [rsp+138h+ts]; ts", "lea     rdi, [rsp+138h+st]; statbuf", "xor     ebp, ebp", "call    update_timespec", "test    al, al", "jz      loc_103B5"], ["lea~rsi,[rsp+0]", "lea~rdi,[rsp+0]", "xor~ebp,ebp", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 48, 0, 1, 6, 1, 2, 6, 8, 0.013033313851548801, ["mov     rsi, file; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "setnz   al", "jmp     loc_1058E"], ["mov~rsi,file", "mov~edi,0", "call~FOO", "test~eax,eax", "setnz~al", "jmp~FOO"]], [1, 0, 35, 0, 1, 2, 0, 1, 8, -1, 0.1201052016364699, ["call    ___errno_location", "mov     dword ptr [rax], 26h ; '&'"], ["call~FOO", "mov~<TAG>,0"]], [2, 0, 40, 0, 1, 8, 1, 2, 7, 3, 0.0657510227936879, ["xor     ecx, ecx; flags", "mov     rdx, rsi; times", "mov     edi, 0FFFFFF9Ch; fd", "mov     rsi, file; path", "call    _utimensat", "cmp     eax, 0", "mov     ebp, eax", "jg      loc_1038D"], ["xor~ecx,ecx", "mov~rdx,rsi", "mov~edi,0", "mov~rsi,file", "call~FOO", "cmp~eax,0", "mov~ebp,eax", "jg~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 13, -1, 0.046171829339567504, ["test    r14b, r14b", "jz      loc_10505"], ["test~r14b,r14b", "jz~FOO"]], [2, 0, 12, 2, 0, 13, 1, 1, 12, -1, 0.10520163646990063, ["mov     rdx, [rsp+138h+st.st_mtim.tv_sec]", "sub     rdx, [t+10h]", "mov     rax, [rsp+138h+st.st_atim.tv_sec]", "sub     rax, [t+0]", "movdqa  xmm0, xmmword ptr [t+0]", "cmp     mdiff, 1", "setz    dl", "movaps  xmmword ptr [rsp+138h+truncated_timeval.tv_sec], xmm0", "and     r14d, edx", "cmp     adiff, 1", "movdqa  xmm0, xmmword ptr [t+10h]", "movaps  xmmword ptr [rsp+138h+truncated_timeval.tv_sec+10h], xmm0", "jnz     loc_10710"], ["mov~rdx,[rsp+0]", "sub~rdx,[t+0]", "mov~rax,[rsp+0]", "sub~rax,[t+0]", "movdqa~xmm0,[mmword ptr [t+0]", "cmp~mdiff,0", "setz~dl", "movaps~[mmword ptr [rsp+0],xmm0", "and~r14d,edx", "cmp~adiff,0", "movdqa~xmm0,[mmword ptr [t+0]", "movaps~[mmword ptr [rsp+0],xmm0", "jnz~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 13, -1, 0.04193454120397428, ["test    r12b, r12b", "jz      loc_10710"], ["test~r12b,r12b", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 14, -1, 0.030829924021040324, ["cmp     [rsp+138h+st.st_atim.tv_nsec], 0", "jnz     loc_10710"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 33, 0, 0, 2, 0, 1, 5, -1, 0.05394506136762127, ["cmp     r13d, 3", "jz      short loc_1053C"], ["cmp~r13d,0", "jz~FOO"]], [2, 0, 34, 0, 0, 4, 1, 1, 4, -1, 0.20742255990648742, ["test    r13d, r13d", "mov     cs:utimensat_works_really, 0FFFFFFFFh", "mov     cs:lutimensat_works_really, 0FFFFFFFFh", "jnz     loc_10510"], ["test~r13d,r13d", "mov~<TAG>,0", "mov~<TAG>,0", "jnz~FOO"]], [5, 0, 22, 4, 0, 21, 0, 0, 6, -1, 0.07367036820572764, ["mov     rax, [rsi]", "mov     rdi, [rsi+8]", "mov     rcx, 20C49BA5E353F7CFh", "lea     adjustment_needed, [rsp+138h+timeval]", "mov     [rsp+138h+timeval.tv_sec], rax", "mov     rax, rdi", "sar     rdi, 3Fh", "imul    rcx", "mov     rax, [rsi+10h]", "mov     rsi, [rsi+18h]", "mov     [rsp+138h+timeval.tv_sec+10h], rax", "mov     rax, rsi", "sar     rsi, 3Fh", "sar     rdx, 7", "sub     rdx, rdi", "mov     [rsp+138h+timeval.tv_usec], rdx", "imul    rcx", "mov     rcx, rdx", "sar     rcx, 7", "sub     rcx, rsi", "mov     [rsp+138h+timeval.tv_usec+10h], rcx"], ["mov~rax,<TAG>", "mov~rdi,[rsi+0]", "mov~rcx,0", "lea~adjustment_needed,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,rdi", "sar~rdi,0", "imul~,rcx", "mov~rax,[rsi+0]", "mov~rsi,[rsi+0]", "mov~[rsp+0],rax", "mov~rax,rsi", "sar~rsi,0", "sar~rdx,0", "sub~rdx,rdi", "mov~[rsp+0],rdx", "imul~,rcx", "mov~rcx,rdx", "sar~rcx,0", "sub~rcx,rsi", "mov~[rsp+0],rcx"]], [0, 0, 24, 0, 0, 3, 1, 1, 5, -1, 0.15727644652250147, ["mov     rsi, [rsp+138h+ts]", "test    rsi, rsi", "jz      loc_10650"], ["mov~rsi,[rsp+0]", "test~rsi,rsi", "jz~FOO"]], [1, 0, 59, 1, 0, 13, 2, 1, 0, 10, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "mov     r12, file", "push    rbx", "mov     ebx, edi", "sub     rsp, 110h", "mov     rax, fs:28h", "mov     [rsp+138h+var_30], rax", "xor     eax, eax", "test    timespec, timespec", "jz      loc_105E0"], ["push~r14", "push~r13", "push~r12", "push~rbp", "mov~r12,file", "push~rbx", "mov~ebx,edi", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~timespec,timespec", "jz~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 4, -1, 0.0, ["add     rsp, 110h", "pop     fd", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "retn"], ["add~rsp,0", "pop~fd", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "retn"]], [0, 0, 32, 0, 0, 3, 1, 1, 6, -1, 0.026008182349503212, ["test    ebx, ebx", "lea     rdx, [rsp+138h+st]; stat_buf", "js      loc_10660"], ["test~ebx,ebx", "lea~rdx,[rsp+0]", "js~FOO"]], [0, 0, 22, 0, 0, 2, 1, 1, 6, -1, 0.10698421975452951, ["xor     r13d, r13d", "jmp     loc_1041A"], ["xor~r13d,r13d", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 14, -1, 0.018994739918176504, ["cmp     [rsp+138h+st.st_mtim.tv_nsec], 0", "jnz     loc_10505"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 53, 0, 0, 3, 1, 1, 3, 7, 0.07159555815312682, ["mov     eax, cs:utimensat_works_really", "test    eax, eax", "js      short loc_10398"], ["mov~eax,<TAG>", "test~eax,eax", "js~FOO"]], [0, 0, 35, 0, 0, 1, 0, 1, 10, 0, 0.018702513150204558, ["jmp     loc_10398"], ["jmp~FOO"]], [1, 0, 30, 0, 1, 5, 1, 1, 7, -1, 0.010081823495032144, ["mov     esi, ebx; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "setnz   al"], ["mov~esi,ebx", "mov~edi,0", "call~FOO", "test~eax,eax", "setnz~al"]], [0, 0, 19, 0, 1, 6, 2, 2, 8, -1, 0.16364699006428987, ["xor     esi, esi; file", "mov     edi, ebx; fd", "call    _futimesat", "test    eax, eax", "mov     ebp, eax", "jnz     loc_10630"], ["xor~esi,esi", "mov~edi,ebx", "call~FOO", "test~eax,eax", "mov~ebp,eax", "jnz~FOO"]], [1, 0, 30, 0, 1, 6, 1, 2, 7, -1, 0.010081823495032144, ["mov     rsi, file; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "setnz   al", "jmp     loc_10534"], ["mov~rsi,file", "mov~edi,0", "call~FOO", "test~eax,eax", "setnz~al", "jmp~FOO"]], [2, 0, 44, 0, 0, 3, 0, 1, 9, 5, 0.032583284628872, ["cmp     qword ptr [rsi+18h], 3FFFFFFEh", "mov     r13d, 3", "jnz     loc_10373"], ["cmp~[word ptr [rsi+0],0", "mov~r13d,0", "jnz~FOO"]], [1, 0, 27, 0, 0, 2, 0, 1, 6, -1, 0.05102279368790181, ["cmp     [rsp+138h+ts], 0", "jz      loc_10650"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 37, 0, 1, 3, 0, 2, 9, 1, 0.015195791934541203, ["call    ___errno_location", "cmp     dword ptr [rax], 26h ; '&'", "jnz     loc_106BF"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 38, 0, 0, 1, 0, 1, 8, 2, 0.023670368205727644, ["jnz     short loc_1073B"], ["jnz~FOO"]], [0, 0, 56, 0, 0, 2, 1, 0, 2, 8, 0.046756282875511396, ["test    ebx, ebx", "jns     short loc_1035A"], ["test~ebx,ebx", "jns~FOO"]], [1, 0, 57, 0, 0, 3, 1, 1, 1, 9, 0.007744009351256575, ["mov     [rsp+138h+ts], 0", "xor     r13d, r13d", "jmp     loc_1034D"], ["mov~[rsp+0],0", "xor~r13d,r13d", "jmp~FOO"]], [0, 0, 55, 0, 0, 2, 1, 1, 3, 8, 0.0035067212156633543, ["test    file, file", "jz      loc_106F8"], ["test~file,file", "jz~FOO"]], [0, 0, 43, 0, 0, 5, 0, 1, 10, 5, 0.0, ["mov     rax, [rsp+138h+st.st_mtim.tv_nsec]", "mov     rdx, [rsp+138h+st.st_mtim.tv_sec]", "mov     [rsi+18h], rax", "mov     [rsi+10h], rdx", "jmp     loc_10373"], ["mov~rax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~[rsi+0],rax", "mov~[rsi+0],rdx", "jmp~FOO"]], [2, 0, 15, 0, 0, 6, 1, 1, 10, -1, 0.12974868497954412, ["cmp     qword ptr [t+8], 7A11Fh", "setnle  r12b", "cmp     qword ptr [t+18h], 7A11Fh", "setnle  r14b", "test    r12b, r12b", "jnz     short loc_10467"], ["cmp~[word ptr [t+0],0", "setnle~r12b", "cmp~[word ptr [t+0],0", "setnle~r14b", "test~r12b,r12b", "jnz~FOO"]], [1, 0, 52, 0, 0, 2, 0, 1, 4, 6, 0.030450029222676797, ["cmp     r13d, 2", "jz      loc_10570"], ["cmp~r13d,0", "jz~FOO"]], [0, 0, 43, 0, 0, 1, 0, 0, 5, 5, 0.02542372881355932, ["mov     rsi, [rsp+138h+ts]; times"], ["mov~rsi,[rsp+0]"]]], "func_feature": [17, 37, 66, 1, 60, 95, 3, 237, 0.04455, 3, 8], "succs": [[23], [0, 3], [0], [0, 2], [9], [49, 4], [19], [6, 47], [52, 28], [8, 29], [19], [10, 53], [10, 50], [10, 5], [10], [19], [19, 15], [13], [17, 27], [42, 39], [57, 19], [19, 22], [19, 31], [19], [19], [19], [24, 37], [13], [35], [52, 28], [43, 23], [32, 30], [33, 30], [1, 30], [40, 50], [34, 37], [7], [41, 36], [11, 54], [], [48, 46], [7], [], [2, 23], [58, 35], [35], [12], [16, 20], [12], [56, 9], [41, 26], [25, 45], [25, 51], [44, 55], [53], [44, 14], [9], [21, 22], [18, 59], [9]], "fname": "fdutimens", "n_num": 60}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     rdx, timespec; timespec", "mov     timespec, file; file", "mov     edi, 0FFFFFFFFh; fd", "jmp     fdutimens"], ["mov~rdx,timespec", "mov~timespec,file", "mov~edi,0", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 2, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "utimens", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 16, 0, 0, 3, 1, 1, 0, 0, 0.1764705882352941, ["test    ebx, ebx", "mov     cs:lutimensat_works_really, 0FFFFFFFFh", "jz      loc_108A5"], ["test~ebx,ebx", "mov~<TAG>,0", "jz~FOO"]], [0, 0, 30, 0, 0, 3, 1, 1, 2, 6, 0.03654188948306595, ["mov     eax, cs:lutimensat_works_really", "test    eax, eax", "js      short loc_107F6"], ["mov~eax,<TAG>", "test~eax,eax", "js~FOO"]], [0, 0, 17, 0, 0, 1, 0, 1, 5, 0, 0.024955436720142603, ["jmp     loc_107F6"], ["jmp~FOO"]], [1, 0, 17, 0, 1, 2, 0, 1, 3, -1, 0.1051693404634581, ["call    ___errno_location", "mov     dword ptr [rax], 26h ; '&'"], ["call~FOO", "mov~<TAG>,0"]], [1, 0, 34, 1, 0, 10, 2, 1, 0, 5, 0.0, ["push    r12", "push    rbp", "mov     r12, file", "push    rbx", "sub     rsp, 0D0h", "mov     rax, fs:28h", "mov     [rsp+0E8h+var_20], rax", "xor     eax, eax", "test    timespec, timespec", "jz      loc_10880"], ["push~r12", "push~rbp", "mov~r12,file", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~timespec,timespec", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 4, -1, 0.09982174688057041, ["cmp     ebx, 3", "jnz     loc_10948"], ["cmp~ebx,0", "jnz~FOO"]], [1, 0, 23, 0, 0, 6, 0, 1, 6, 4, 0.01871657754010695, ["mov     rax, [rsp+0E8h+st.st_atim.tv_nsec]", "mov     rcx, [rsp+0E8h+st.st_atim.tv_sec]", "mov     ebx, 3", "mov     [rdx], rcx", "mov     [rdx+8], rax", "jmp     loc_107CE"], ["mov~rax,[rsp+0]", "mov~rcx,[rsp+0]", "mov~ebx,0", "mov~<TAG>,rcx", "mov~[rdx+0],rax", "jmp~FOO"]], [1, 0, 26, 0, 0, 3, 0, 1, 5, 5, 0.0303030303030303, ["mov     rdx, [rsp+0E8h+ts]", "cmp     qword ptr [rdx+8], 3FFFFFFEh", "jz      short loc_10978"], ["mov~rdx,[rsp+0]", "cmp~[word ptr [rdx+0],0", "jz~FOO"]], [1, 0, 27, 0, 1, 6, 1, 2, 4, 6, 0.0213903743315508, ["lea     rdx, [rsp+0E8h+st]; stat_buf", "mov     rsi, file; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jnz     short loc_108C0"], ["lea~rdx,[rsp+0]", "mov~rsi,file", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 24, 0, 0, 6, 3, 0, 1, 4, 0.0106951871657754, ["mov     ecx, cs:lutimensat_works_really", "xor     edx, edx", "xor     ebx, ebx", "mov     [rsp+0E8h+ts], 0", "test    ecx, ecx", "jns     loc_107CE"], ["mov~ecx,<TAG>", "xor~edx,edx", "xor~ebx,ebx", "mov~[rsp+0],0", "test~ecx,ecx", "jns~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 5, -1, 0.038101604278074866, ["cmp     [rsp+0E8h+ts], 0", "jz      short loc_10830"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 29, 0, 0, 2, 0, 1, 3, 5, 0.0303030303030303, ["cmp     ebx, 2", "jz      loc_108F0"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 9, 0, 0, 1, 0, 0, 2, -1, 0.00980392156862745, ["mov     cs:lutimensat_works_really, 0FFFFFFFFh"], ["mov~<TAG>,0"]], [1, 0, 4, 0, 1, 3, 0, 2, 5, -1, 0.0053475935828877, ["call    ___errno_location", "mov     dword ptr [rax], 26h ; '&'", "jmp     loc_108C0"], ["call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [2, 0, 6, 0, 0, 4, 1, 1, 4, -1, 0.06082887700534759, ["mov     eax, [rsp+0E8h+st.st_mode]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_10996"], ["mov~eax,[rsp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [2, 0, 24, 0, 0, 3, 0, 1, 6, 4, 0.02406417112299465, ["cmp     qword ptr [rdx+18h], 3FFFFFFEh", "mov     ebx, 3", "jnz     loc_107CE"], ["cmp~[word ptr [rdx+0],0", "mov~ebx,0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, -1, 0.0570409982174688, ["mov     rcx, [rsp+0E8h+var_20]", "xor     rcx, fs:28h", "mov     eax, ebp", "jnz     loc_109A6"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebp", "jnz~FOO"]], [0, 0, 8, 0, 1, 6, 2, 2, 6, -1, 0.027406417112299464, ["lea     rsi, [rsp+0E8h+ts]; ts", "lea     rdi, [rsp+0E8h+st]; statbuf", "xor     ebp, ebp", "call    update_timespec", "test    al, al", "jnz     short loc_10858"], ["lea~rsi,[rsp+0]", "lea~rdi,[rsp+0]", "xor~ebp,ebp", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 6, -1, 0.0213903743315508, ["cmp     [rsp+0E8h+ts], 0", "jnz     loc_10819"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 7, -1, 0.0035650623885918, ["xchg    ax, ax"], ["xchg~ax,ax"]], [0, 0, 31, 0, 1, 10, 1, 2, 1, 7, 0.017825311942959, ["movdqu  xmm0, xmmword ptr [timespec]", "lea     file, [rsp+0E8h+adjusted_timespec]; timespec", "movaps  xmmword ptr [rsp+0E8h+adjusted_timespec.tv_sec], xmm0", "mov     [rsp+0E8h+ts], rdi", "movdqu  xmm0, xmmword ptr [timespec+10h]", "movaps  xmmword ptr [rsp+0E8h+adjusted_timespec.tv_sec+10h], xmm0", "call    validate_timespec", "test    eax, eax", "mov     ebx, eax", "js      loc_108C0"], ["movdqu~xmm0,<TAG>", "lea~file,[rsp+0]", "movaps~[mmword ptr [rsp+0],xmm0", "mov~[rsp+0],rdi", "movdqu~xmm0,[mmword ptr [timespec+0]", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "test~eax,eax", "mov~ebx,eax", "js~FOO"]], [1, 0, 19, 0, 1, 3, 0, 2, 4, 1, 0.02406417112299465, ["call    ___errno_location", "cmp     dword ptr [rax], 26h ; '&'", "jnz     loc_108D6"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 20, 0, 0, 1, 0, 1, 3, 2, 0.05080213903743315, ["jnz     loc_109AB"], ["jnz~FOO"]], [1, 0, 8, 0, 1, 6, 1, 2, 3, -1, 0.07754010695187165, ["lea     rdx, [rsp+0E8h+st]; stat_buf", "mov     rsi, file; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jz      loc_10830"], ["lea~rdx,[rsp+0]", "mov~rsi,file", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 7, -1, 0.006238859180035651, ["jmp     loc_10830"], ["jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 4, -1, 0.012254901960784314, ["nop"], ["nop"]], [0, 0, 23, 0, 0, 5, 0, 1, 7, 4, 0.0, ["mov     rax, [rsp+0E8h+st.st_mtim.tv_nsec]", "mov     rcx, [rsp+0E8h+st.st_mtim.tv_sec]", "mov     [rdx+18h], rax", "mov     [rdx+10h], rcx", "jmp     loc_107CE"], ["mov~rax,[rsp+0]", "mov~rcx,[rsp+0]", "mov~[rdx+0],rax", "mov~[rdx+0],rcx", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, -1, 0.029411764705882353, ["mov     ebp, 0FFFFFFFFh", "jmp     short loc_10858"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 11, 0, 1, 6, 1, 2, 5, -1, 0.04122103386809269, ["lea     rdx, [rsp+0E8h+st]; stat_buf", "mov     rsi, file; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jnz     loc_108C0"], ["lea~rdx,[rsp+0]", "mov~rsi,file", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 23, 0, 0, 1, 0, 0, 4, 4, 0.02762923351158645, ["mov     rdx, [rsp+0E8h+ts]; times"], ["mov~rdx,[rsp+0]"]], [2, 1, 22, 0, 1, 7, 0, 2, 2, 3, 0.15775401069518716, ["mov     ecx, 100h; flags", "mov     rsi, file; path", "mov     edi, 0FFFFFF9Ch; fd", "call    _utimensat", "cmp     eax, 0", "mov     ebp, eax", "jle     loc_108D0"], ["mov~ecx,<STR>", "mov~rsi,file", "mov~edi,0", "call~FOO", "cmp~eax,0", "mov~ebp,eax", "jle~FOO"]], [1, 0, 3, 0, 1, 5, 0, 1, 5, -1, 0.012700534759358287, ["mov     rdx, [rsp+0E8h+ts]; timespec", "mov     rsi, file; file", "mov     edi, 0FFFFFFFFh; fd", "call    fdutimens", "mov     ebp, eax"], ["mov~rdx,[rsp+0]", "mov~rsi,file", "mov~edi,0", "call~FOO", "mov~ebp,eax"]], [2, 0, 3, 0, 0, 3, 0, 1, 4, -1, 0.02406417112299465, ["mov     cs:utimensat_works_really, 1", "mov     cs:lutimensat_works_really, 1", "jmp     loc_10858"], ["mov~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 4, -1, 0.0, ["add     rsp, 0D0h", "pop     rbx", "pop     rbp", "pop     file", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~file", "retn"]]], "func_feature": [11, 15, 37, 1, 35, 53, 1, 127, 0.03667, 3, 2], "succs": [[24, 5], [0, 11], [0], [0], [9, 21], [10, 29], [31], [6, 15], [28, 7], [12, 31], [18, 14], [8, 30], [24], [28], [32, 13], [27, 31], [], [16, 34], [17, 20], [25, 18], [14], [1, 28], [33, 2], [33, 22], [26, 14], [14], [28], [31], [17], [19, 28], [31], [3, 23], [17], [17], []], "fname": "lutimens", "n_num": 35}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 1, 0, 1, 11, 1, 2, 0, 0, 0.006578947368421052, ["mov     r15, [authors+20h]; jumptable 0000000000010A64 case 5", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [authors+18h]", "mov     r13, [authors+10h]", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "call    _dcgettext", "push    r15", "jmp     short loc_10C76"], ["mov~r15,[authors+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "call~FOO", "push~r15", "jmp~FOO"]], [0, 0, 15, 1, 0, 4, 0, 1, 3, -1, 0.1368421052631579, ["lea     rdx, off_15B78", "movsxd  rax, dword ptr [rdx+n_authors*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [2, 0, 2, 1, 1, 16, 1, 1, 4, -1, 0.007894736842105263, ["mov     r9, [authors+38h]; jumptable 0000000000010A64 case 8", "mov     rax, [authors+10h]", "lea     rsi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r8, [authors+8]", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     [rsp+58h+var_48], r9", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     [rsp+58h+var_58], rax", "mov     [rsp+58h+var_50], r8", "mov     authors, [authors]", "call    _dcgettext", "sub     rsp, 8"], ["mov~r9,[authors+0]", "mov~rax,[authors+0]", "lea~rsi,<TAG>", "mov~r8,[authors+0]", "mov~edx,0", "xor~edi,edi", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~[rsp+0],r9", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~<TAG>,rax", "mov~[rsp+0],r8", "mov~authors,<TAG>", "call~FOO", "sub~rsp,0"]], [2, 0, 1, 1, 1, 15, 1, 1, 5, -1, 0.010526315789473684, ["mov     r9, [rsp+60h+var_48]", "mov     rdx, rax", "mov     rcx, rbx", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "push    r9", "push    r13", "push    r12", "push    r15", "push    r14", "mov     r9, [rsp+88h+var_58]", "mov     r8, [rsp+88h+var_50]", "call    ___fprintf_chk", "add     rsp, 30h"], ["mov~r9,[rsp+0]", "mov~rdx,rax", "mov~rcx,rbx", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "push~r9", "push~r13", "push~r12", "push~r15", "push~r14", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "call~FOO", "add~rsp,0"]], [0, 0, 2, 0, 1, 5, 1, 2, 4, -1, 0.015789473684210527, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r10, [rsp+58h+var_40]", "push    r10", "jmp     loc_10AB4"], ["xor~edi,edi", "call~FOO", "mov~r10,[rsp+0]", "push~r10", "jmp~FOO"]], [2, 0, 0, 1, 1, 19, 1, 1, 5, -1, 0.0, ["push    r14", "mov     rdx, rax", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "pop     rax", "pop     rdx", "add     rsp, 28h", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["push~r14", "mov~rdx,rax", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "call~FOO", "pop~rax", "pop~rdx", "add~rsp,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [2, 0, 1, 1, 1, 9, 1, 1, 4, -1, 0.006578947368421052, ["lea     rsi, aWrittenBySSSAn; jumptable 0000000000010A64 case 4", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [authors+18h]", "mov     r13, [authors+10h]", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "call    _dcgettext", "sub     rsp, 8"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "call~FOO", "sub~rsp,0"]], [5, 0, 17, 0, 4, 20, 3, 5, 2, 1, 0.12894736842105262, ["lea     rsi, aC_0; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7E3h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     n_authors, 9; switch 10 cases", "ja      loc_10D90; jumptable 0000000000010A64 default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~n_authors,0", "ja~FOO"]], [2, 0, 1, 1, 1, 16, 1, 1, 4, -1, 0.006578947368421052, ["mov     r8, [authors+8]; jumptable 0000000000010A64 case 6", "mov     n_authors, [authors+28h]", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     edx, 5; category", "mov     r13, [authors+10h]", "xor     edi, edi; domainname", "mov     authors, [authors]", "mov     [rsp+58h+var_58], r8", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r13", "push    r12", "push    r15", "push    r14"], ["mov~r8,[authors+0]", "mov~n_authors,[authors+0]", "lea~rsi,<TAG>", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~edx,0", "mov~r13,[authors+0]", "xor~edi,edi", "mov~authors,<TAG>", "mov~<TAG>,r8", "call~FOO", "sub~rsp,0", "mov~r9,r13", "push~r12", "push~r15", "push~r14"]], [1, 0, 3, 0, 0, 16, 0, 1, 3, 0, 0.015789473684210527, ["mov     r10, [authors+40h]; jumptable 0000000000010A64 default case", "mov     r9, [authors+38h]", "mov     edx, 5", "mov     rax, [authors+10h]", "mov     r8, [authors+8]", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     [rsp+58h+var_40], r10", "mov     [rsp+58h+var_48], r9", "mov     [rsp+58h+var_58], rax", "mov     [rsp+58h+var_50], r8", "mov     authors, [authors]", "jmp     loc_10B62"], ["mov~r10,[authors+0]", "mov~r9,[authors+0]", "mov~edx,0", "mov~rax,[authors+0]", "mov~r8,[authors+0]", "lea~rsi,<TAG>", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~<TAG>,rax", "mov~[rsp+0],r8", "mov~authors,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 15, 0, 0, 4, -1, 0.002631578947368421, ["mov     r10, [authors+40h]; jumptable 0000000000010A64 case 9", "mov     r9, [authors+38h]", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     rax, [authors+10h]", "mov     r8, [authors+8]", "mov     edx, 5; category", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     authors, [authors]", "mov     [rsp+58h+var_40], r10", "mov     [rsp+58h+var_48], r9", "mov     [rsp+58h+var_58], rax", "mov     [rsp+58h+var_50], r8"], ["mov~r10,[authors+0]", "mov~r9,[authors+0]", "lea~rsi,<TAG>", "mov~rax,[authors+0]", "mov~r8,[authors+0]", "mov~edx,0", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~authors,<TAG>", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~<TAG>,rax", "mov~[rsp+0],r8"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [1, 0, 18, 0, 1, 7, 1, 1, 1, 2, 0.024999999999999998, ["mov     authors, package", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     n_authors, version", "xor     eax, eax", "mov     version, command_name", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~authors,package", "lea~package,<TAG>", "mov~n_authors,version", "xor~eax,eax", "mov~version,command_name", "mov~esi,0", "call~FOO"]], [3, 0, 1, 1, 1, 18, 2, 2, 4, -1, 0.002631578947368421, ["mov     authors, [authors]; jumptable 0000000000010A64 case 1", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     rcx, rbx", "mov     rdi, stream", "pop     rbx", "pop     stream", "pop     n_authors", "pop     r13", "pop     r14", "pop     r15", "mov     rdx, rax", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~authors,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~rcx,rbx", "mov~rdi,stream", "pop~rbx", "pop~stream", "pop~n_authors", "pop~r13", "pop~r14", "pop~r15", "mov~rdx,rax", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [3, 0, 1, 1, 1, 20, 2, 2, 4, -1, 0.002631578947368421, ["mov     n_authors, [authors+8]; jumptable 0000000000010A64 case 2", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "mov     authors, [authors]", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     r8, r12", "mov     rcx, rbx", "mov     rdi, stream", "mov     rdx, rax", "mov     esi, 1", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~n_authors,[authors+0]", "lea~rsi,<TAG>", "mov~authors,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~r8,r12", "mov~rcx,rbx", "mov~rdi,stream", "mov~rdx,rax", "mov~esi,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "xor~eax,eax", "jmp~FOO"]], [3, 0, 1, 1, 1, 22, 2, 2, 4, -1, 0.002631578947368421, ["mov     r13, [authors+10h]; jumptable 0000000000010A64 case 3", "mov     n_authors, [authors+8]", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "mov     authors, [authors]", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdi, stream", "mov     rdx, rax", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "lea~rsi,<TAG>", "mov~authors,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,0", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdi,stream", "mov~rdx,rax", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [1, 0, 18, 0, 1, 7, 1, 2, 1, 2, 0.02236842105263158, ["mov     r8, version", "mov     version, package", "lea     package, aSS_2; \"%s %s\\n\"", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_109FC"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 20, 1, 0, 12, 1, 1, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, n_authors", "push    rbp", "push    rbx", "mov     rbp, stream", "mov     rbx, authors", "sub     rsp, 28h", "test    command_name, command_name", "jz      loc_10AF8"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,n_authors", "push~rbp", "push~rbx", "mov~rbp,stream", "mov~rbx,authors", "sub~rsp,0", "test~command_name,command_name", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 28h; jumptable 0000000000010A64 case 0", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 1, 0, 1, 19, 1, 2, 4, -1, 0.006578947368421052, ["mov     r9, [authors+10h]; jumptable 0000000000010A64 case 7", "mov     r13, [authors+30h]", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "mov     n_authors, [authors+28h]", "mov     r15, [authors+20h]", "mov     edx, 5; category", "mov     r14, [authors+18h]", "mov     r8, [authors+8]", "xor     edi, edi; domainname", "mov     [rsp+58h+var_50], r9", "mov     authors, [authors]", "mov     [rsp+58h+var_58], r8", "call    _dcgettext", "push    r13", "push    r12", "push    r15", "push    r14", "mov     r9, [rsp+78h+var_50]", "jmp     short loc_10D13"], ["mov~r9,[authors+0]", "mov~r13,[authors+0]", "lea~rsi,<TAG>", "mov~n_authors,[authors+0]", "mov~r15,[authors+0]", "mov~edx,0", "mov~r14,[authors+0]", "mov~r8,[authors+0]", "xor~edi,edi", "mov~[rsp+0],r9", "mov~authors,<TAG>", "mov~<TAG>,r8", "call~FOO", "push~r13", "push~r12", "push~r15", "push~r14", "mov~r9,[rsp+0]", "jmp~FOO"]], [2, 1, 0, 2, 1, 16, 1, 1, 5, -1, 0.0, ["mov     r8, [rsp+78h+var_58]", "mov     rcx, rbx", "mov     rdx, rax", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 20h", "add     rsp, 28h", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "call~FOO", "add~rsp,<STR>", "add~rsp,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [18, 21, 29, 4, 21, 29, 3, 275, 0.01905, 16, 13], "succs": [[5], [0, 2, 6, 8, 10, 13, 14, 15, 18, 19], [3], [18], [3], [], [5], [1, 9], [20], [4], [4], [], [11, 7], [11], [11], [11], [7], [16, 12], [], [20], []], "fname": "version_etc_arn", "n_num": 21}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0.08333333333333333, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 4, 0, 0, 3, 1, 1, 0, 1, 0.0, ["xor     r9d, r9d", "cmp     qword ptr [authors], 0", "jz      short loc_10DFB"], ["xor~r9d,r9d", "cmp~<TAG>,0", "jz~FOO"]], [2, 0, 3, 1, 0, 3, 0, 1, 2, 1, 0.16666666666666666, ["add     n_authors, 1; n_authors", "cmp     qword ptr [authors+n_authors*8], 0", "jnz     short loc_10DF0"], ["add~n_authors,0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0.25, ["jmp     version_etc_arn"], ["jmp~FOO"]]], "func_feature": [0, 1, 3, 0, 5, 6, 0, 8, 0.1, 0, 1], "succs": [[2], [0, 4], [2, 4], [], [3]], "fname": "version_etc_ar", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 68h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 2, 0, 1, 4, 1, 2, 4, -1, 0.21428571428571427, ["call    version_etc_arn", "mov     rax, [rsp+68h+var_10]", "xor     rax, fs:28h", "jnz     short loc_10E65"], ["call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 8, 0, 0, 3, 0, 1, 1, 1, 0.25, ["mov     eax, [authors]", "cmp     eax, 2Fh ; '/'", "ja      short loc_10E6A"], ["mov~eax,<TAG>", "cmp~eax,0", "ja~FOO"]], [2, 0, 8, 1, 0, 3, 0, 1, 4, 2, 0.125, ["add     n_authors, 1; n_authors", "cmp     n_authors, 0Ah", "jnz     short loc_10E20"], ["add~n_authors,0", "cmp~n_authors,0", "jnz~FOO"]], [1, 0, 8, 1, 0, 8, 2, 0, 0, 2, 0.0, ["sub     rsp, 68h", "mov     r10, authors", "xor     r9d, r9d", "mov     rax, fs:28h", "mov     [rsp+68h+var_10], rax", "xor     eax, eax", "mov     authors, rsp; authors", "nop     dword ptr [rax]"], ["sub~rsp,0", "mov~r10,authors", "xor~r9d,r9d", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~authors,rsp", "nop~<TAG>"]], [0, 0, 8, 0, 0, 4, 1, 1, 3, 3, 0.3571428571428571, ["mov     rax, [r11]", "test    rax, rax", "mov     [r8+n_authors*8], rax", "jz      short loc_10E4B"], ["mov~rax,<TAG>", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [1, 0, 8, 2, 0, 4, 0, 0, 2, 4, 0.09821428571428571, ["mov     r11d, eax", "add     r11, [authors+10h]", "add     eax, 8", "mov     [authors], eax"], ["mov~r11d,eax", "add~r11,[authors+0]", "add~eax,0", "mov~<TAG>,eax"]], [0, 0, 8, 0, 0, 4, 0, 1, 2, 0, 0.09821428571428571, ["mov     r11, [authors+8]", "lea     rax, [r11+8]", "mov     [authors+8], rax", "jmp     short loc_10E35"], ["mov~r11,[authors+0]", "lea~rax,[r11+0]", "mov~[authors+0],rax", "jmp~FOO"]]], "func_feature": [2, 4, 7, 1, 9, 11, 0, 33, 0.12698, 1, 5], "succs": [[], [0, 2], [], [8, 7], [1, 3], [3], [1, 4], [6], [6]], "fname": "version_etc_va", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 1, 4, 1, 2, 5, -1, 0.17777777777777778, ["call    version_etc_arn", "mov     rax, [rsp+0C8h+var_50]", "xor     rax, fs:28h", "jnz     short loc_10F40"], ["call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [2, 0, 10, 2, 0, 4, 0, 0, 2, 4, 0.08333333333333334, ["mov     eax, r10d", "mov     r11d, 1", "add     r10d, 8", "add     rax, rbp"], ["mov~eax,r10d", "mov~r11d,0", "add~r10d,0", "add~rax,rbp"]], [1, 0, 10, 0, 0, 2, 0, 1, 1, 1, 0.17777777777777778, ["cmp     r10d, 2Fh ; '/'", "ja      short loc_10F4C"], ["cmp~r10d,0", "ja~FOO"]], [1, 2, 10, 1, 0, 20, 3, 0, 0, 2, 0.0, ["push    rbp", "push    rbx", "mov     r10d, 20h ; ' '", "xor     r11d, r11d", "sub     rsp, 0B8h", "mov     rax, fs:28h", "mov     [rsp+0C8h+var_50], rax", "xor     eax, eax", "lea     rax, [rsp+0C8h+arg_0]", "mov     [rsp+0C8h+var_28], r8", "lea     rbx, [rsp+0C8h+arg_0]", "lea     r8, [rsp+0C8h+var_A8]; authors", "mov     [rsp+0C8h+var_20], r9", "mov     [rsp+0C8h+authors.gp_offset], 20h ; ' '", "mov     [rsp+0C8h+authors.overflow_arg_area], rax", "lea     rax, [rsp+0C8h+var_48]", "xor     r9d, r9d", "mov     [rsp+0C8h+authors.reg_save_area], rax", "mov     rbp, rax", "nop     word ptr [rax+rax+00000000h]"], ["push~rbp", "push~rbx", "mov~r10d,<STR>", "xor~r11d,r11d", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "mov~[rsp+0],r8", "lea~rbx,[rsp+0]", "lea~r8,[rsp+0]", "mov~[rsp+0],r9", "mov~[rsp+0],<STR>", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "xor~r9d,r9d", "mov~[rsp+0],rax", "mov~rbp,rax", "nop~[ord ptr [rax+0]"]], [0, 0, 3, 0, 0, 2, 0, 1, 5, -1, 0.0, ["mov     [rsp+0C8h+authors.gp_offset], r10d", "jmp     short loc_10F21"], ["mov~[rsp+0],r10d", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 4, -1, 0.26666666666666666, ["test    r11b, r11b", "jnz     short loc_10F45"], ["test~r11b,r11b", "jnz~FOO"]], [0, 0, 10, 0, 0, 4, 1, 1, 3, 3, 0.3111111111111111, ["mov     rax, [rax]", "test    rax, rax", "mov     [r8+r9*8], rax", "jz      short loc_10F1C"], ["mov~rax,<TAG>", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [1, 0, 10, 1, 0, 3, 0, 1, 2, 0, 0.08333333333333334, ["mov     rax, rbx", "add     rbx, 8", "jmp     short loc_10F06"], ["mov~rax,rbx", "add~rbx,0", "jmp~FOO"]], [2, 0, 10, 1, 0, 3, 0, 1, 4, 2, 0.07777777777777778, ["add     r9, 1; n_authors", "cmp     r9, 0Ah", "jnz     short loc_10EF0"], ["add~r9,0", "cmp~r9,0", "jnz~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 6, -1, 0.0, ["add     rsp, 0B8h", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]]], "func_feature": [2, 6, 9, 5, 11, 14, 1, 49, 0.10707, 1, 6], "succs": [[], [0, 10], [7], [8, 2], [3], [1], [1, 5], [9, 6], [7], [3, 6], []], "fname": "version_etc", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[5, 0, 1, 0, 5, 29, 5, 6, 0, 0, 0.0, ["push    rbx", "lea     rsi, aReportBugsToS; \"\\nReport bugs to: %s\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "lea     rdx, aBugCoreutilsGn; \"bug-coreutils@gnu.org\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "lea     rsi, aSHomePageS; \"%s home page: <%s>\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, package; \"GNU \"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aGeneralHelpUsi; \"General help using GNU software: <https\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "pop     rbx", "jmp     _fputs_unlocked"], ["push~rbx", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "pop~rbx", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [5, 5, 6, 0, 2, 1, 0, 29, 0.0, 7, 0], "succs": [[1], []], "fname": "emit_bug_reporting_address", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["movzx   eax, cs:can_write_3065", "retn"], ["movzx~eax,<TAG>", "retn"]], [1, 0, 2, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:initialized_3064, 0", "jz      short loc_10FF8"], ["cmp~<TAG>,0", "jz~FOO"]], [3, 0, 0, 2, 1, 8, 1, 1, 1, 0, 0.0, ["sub     rsp, 8", "call    _geteuid", "test    eax, eax", "mov     cs:initialized_3064, 1", "setz    al", "mov     cs:can_write_3065, al", "add     rsp, 8", "retn"], ["sub~rsp,0", "call~FOO", "test~eax,eax", "mov~<TAG>,0", "setz~al", "mov~<TAG>,al", "add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 2, 1, 12, 0.0, 2, 2], "succs": [[], [0, 2], []], "fname": "can_write_any_file", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_11035"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    _malloc", "test    p, p", "jnz     short loc_11033"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 4, 20, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "xmalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 1, 0, 1, 2, -1, 0.16666666666666666, ["jmp     short xmalloc"], ["jmp~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 1, 1, 0.16666666666666666, ["movzx   eax, al", "test    rax, rax", "jnz     short loc_1105B"], ["movzx~eax,al", "test~rax,rax", "jnz~FOO"]], [1, 0, 0, 1, 1, 2, 0, 1, 1, 0, 0.0, ["sub     rsp, 8", "call    xalloc_die"], ["sub~rsp,0", "call~FOO"]], [0, 0, 4, 1, 0, 6, 1, 1, 0, 1, 0.0, ["mov     rax, n", "mul     s", "mov     n, rax", "seto    al", "test    rdi, rdi", "js      short loc_1105B"], ["mov~rax,n", "mul~,s", "mov~n,rax", "seto~al", "test~rdi,rdi", "js~FOO"]]], "func_feature": [1, 2, 4, 0, 5, 5, 0, 12, 0.06667, 0, 2], "succs": [[], [0], [1, 3], [], [2, 3]], "fname": "xnmalloc", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     short xmalloc"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 1, 0.0, 0, 0], "succs": [[1], []], "fname": "xcharalloc", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]], [0, 0, 3, 0, 1, 4, 1, 2, 1, 2, 0.2, ["mov     n, rbx; size", "call    _realloc", "test    p, p", "jnz     short loc_110A0"], ["mov~n,rbx", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 2, 1, 0.1, ["test    n, n", "jnz     short loc_110B1"], ["test~n,n", "jnz~FOO"]], [0, 0, 6, 0, 0, 4, 1, 1, 0, 3, 0.0, ["test    n, n", "push    rbx", "mov     rbx, n", "jnz     short loc_1108E"], ["test~n,n", "push~rbx", "mov~rbx,n", "jnz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 1, 3, 0.03333333333333333, ["test    p, p", "jnz     short loc_110A8"], ["test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 1, 4, 1, 1, 2, -1, 0.0, ["call    free", "xor     eax, eax", "pop     n", "retn"], ["call~FOO", "xor~eax,eax", "pop~n", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [3, 5, 7, 0, 7, 8, 9, 19, 0.04762, 0, 0], "succs": [[], [0, 2], [0, 6], [1, 4], [1, 5], [], []], "fname": "xrealloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.16666666666666666, ["jmp     short xrealloc"], ["jmp~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 1, 1, 0.16666666666666666, ["movzx   eax, al", "test    rax, rax", "jnz     short loc_110DB"], ["movzx~eax,al", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [0, 0, 4, 1, 0, 6, 1, 1, 0, 1, 0.0, ["mov     rax, n", "mul     s", "mov     n, rax", "seto    al", "test    rsi, rsi", "js      short loc_110DB"], ["mov~rax,n", "mul~,s", "mov~n,rax", "seto~al", "test~rsi,rsi", "js~FOO"]], [1, 0, 0, 1, 1, 2, 0, 1, 1, 0, 0.0, ["sub     rsp, 8", "call    xalloc_die"], ["sub~rsp,0", "call~FOO"]]], "func_feature": [1, 2, 4, 0, 5, 5, 0, 12, 0.06667, 0, 2], "succs": [[2], [0, 4], [], [1, 4], []], "fname": "xnrealloc", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 4, 1, 0, 6, 1, 1, 0, 0, 0.125, ["mov     rax, n", "mul     s", "seto    dl", "test    rax, rax", "movzx   edx, dl", "js      short loc_1114B"], ["mov~rax,n", "mul~,s", "seto~dl", "test~rax,rax", "movzx~edx,dl", "js~FOO"]], [0, 1, 5, 1, 0, 8, 3, 1, 2, 0, 0.0, ["xor     edx, edx", "mov     eax, 80h", "xor     r8d, r8d", "div     s", "test    n, n", "setz    r8b", "lea     rcx, [r8+n]", "jmp     short loc_11135"], ["xor~edx,edx", "mov~eax,<STR>", "xor~r8d,r8d", "div~,s", "test~n,n", "setz~r8b", "lea~rcx,<TAG>", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 1, 1, 0.041666666666666664, ["test    n, n", "jz      short loc_11158"], ["test~n,n", "jz~FOO"]], [0, 0, 1, 1, 0, 4, 0, 1, 3, -1, 0.09722222222222221, ["mov     [pn], n", "imul    n, s", "mov     pn, rcx", "jmp     xrealloc"], ["mov~<TAG>,n", "imul~n,s", "mov~pn,rcx", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 3, -1, 0.08333333333333333, ["test    rdx, rdx", "jz      short loc_1111A"], ["test~rdx,rdx", "jz~FOO"]], [1, 0, 2, 0, 0, 3, 0, 0, 2, -1, 0.05555555555555555, ["mov     rax, n", "shr     rax, 1", "lea     n, [rax+n+1]"], ["mov~rax,n", "shr~rax,0", "lea~n,[rax+0]"]], [1, 0, 4, 1, 0, 5, 1, 0, 1, -1, 0.05555555555555555, ["xor     edx, edx", "mov     rax, 5555555555555554h", "div     s", "cmp     rax, n", "jbe     short loc_1114B"], ["xor~edx,edx", "mov~rax,0", "div~,s", "cmp~rax,n", "jbe~FOO"]], [0, 0, 9, 0, 0, 4, 1, 1, 0, 2, 0.0, ["test    p, p", "mov     r9, s", "mov     rcx, [pn]", "jz      short loc_11130"], ["test~p,p", "mov~r9,s", "mov~rcx,<TAG>", "jz~FOO"]], [1, 0, 0, 1, 1, 2, 0, 1, 2, -1, 0.0, ["sub     rsp, 8", "call    xalloc_die"], ["sub~rsp,0", "call~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []]], "func_feature": [1, 8, 7, 0, 10, 13, 0, 36, 0.04583, 0, 5], "succs": [[8, 4], [0], [0, 1], [9], [8, 3], [3], [8, 5], [2, 6], [], []], "fname": "x2nrealloc", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 0, 1, 1, 2, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    xalloc_die"], ["sub~rsp,0", "call~FOO"]], [1, 0, 4, 0, 0, 3, 0, 1, 1, 0, 0.05, ["mov     rdx, 5555555555555553h", "cmp     rax, rdx", "ja      short loc_111C1"], ["mov~rdx,0", "cmp~rax,rdx", "ja~FOO"]], [0, 1, 3, 0, 0, 5, 2, 0, 1, 0, 0.08333333333333333, ["test    rax, rax", "mov     edx, 80h", "cmovz   rax, rdx", "test    rax, rax", "jns     short loc_111A2"], ["test~rax,rax", "mov~edx,<STR>", "cmovz~rax,rdx", "test~rax,rax", "jns~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 0, 0, 0.0, ["test    p, p", "mov     rax, [pn]", "jz      short loc_111B0"], ["test~p,p", "mov~rax,<TAG>", "jz~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 2, 0, 0.13333333333333333, ["mov     [pn], rax", "mov     pn, rax; n", "jmp     xrealloc"], ["mov~<TAG>,rax", "mov~pn,rax", "jmp~FOO"]], [1, 0, 2, 0, 0, 3, 0, 0, 2, 0, 0.06666666666666667, ["mov     rdx, rax", "shr     rdx, 1", "lea     rax, [rdx+rax+1]"], ["mov~rdx,rax", "shr~rdx,0", "lea~rax,[rdx+0]"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0.0, [], []]], "func_feature": [1, 3, 4, 0, 7, 8, 0, 19, 0.04762, 0, 1], "succs": [[], [0, 5], [0, 4], [1, 2], [6], [4], []], "fname": "x2realloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 1, 0, 1, 8, 1, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, s", "call    xmalloc", "mov     rdx, s; n", "xor     esi, esi; c", "mov     rdi, rax; s", "pop     s", "jmp     _memset"], ["push~rbx", "mov~rbx,s", "call~FOO", "mov~rdx,s", "xor~esi,esi", "mov~rdi,rax", "pop~s", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 1, 2, 0, 2, 1, 0, 8, 0.0, 0, 0], "succs": [[1], []], "fname": "xzalloc", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 4, 2, 0, 6, 1, 1, 0, 0, 0.0, ["mov     rax, n", "sub     rsp, 8", "mul     s", "seto    dl", "test    rax, rax", "js      short loc_11219"], ["mov~rax,n", "sub~rsp,0", "mul~,s", "seto~dl", "test~rax,rax", "js~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 0, 1, 0.16666666666666666, ["movzx   edx, dl", "test    rdx, rdx", "jnz     short loc_11219"], ["movzx~edx,dl", "test~rdx,rdx", "jnz~FOO"]], [0, 0, 2, 0, 1, 3, 1, 2, 0, 1, 0.16666666666666666, ["call    _calloc", "test    p, p", "jz      short loc_11219"], ["call~FOO", "test~p,p", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 3, 5, 0, 5, 6, 0, 15, 0.06667, 0, 3], "succs": [[1, 4], [2, 4], [3, 4], [], []], "fname": "xcalloc", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [2, 0, 1, 2, 1, 14, 0, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, p", "mov     p, s; n", "mov     rbx, s", "sub     rsp, 8", "call    xmalloc", "add     rsp, 8", "mov     rdx, s; n", "mov     rsi, p; src", "pop     s", "pop     p", "mov     rdi, rax; dest", "jmp     _memcpy"], ["push~rbp", "push~rbx", "mov~rbp,p", "mov~p,s", "mov~rbx,s", "sub~rsp,0", "call~FOO", "add~rsp,0", "mov~rdx,s", "mov~rsi,p", "pop~s", "pop~p", "mov~rdi,rax", "jmp~FOO"]]], "func_feature": [1, 0, 2, 0, 2, 1, 2, 14, 0.0, 0, 2], "succs": [[], [0]], "fname": "xmemdup", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 1, 0, 1, 7, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, string", "call    _strlen", "mov     rdi, string; p", "lea     rsi, [rax+1]; s", "pop     string", "jmp     short xmemdup"], ["push~rbx", "mov~rbx,string", "call~FOO", "mov~rdi,string", "lea~rsi,[rax+0]", "pop~string", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 0, 2, 0, 2, 1, 5, 7, 0.0, 0, 0], "succs": [[1], []], "fname": "xstrdup", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[2, 0, 0, 1, 3, 12, 3, 3, 0, 0, 0.0, ["lea     rsi, aMemoryExhauste; \"memory exhausted\"", "sub     rsp, 8", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     edi, cs:exit_failure; status", "lea     rdx, aS+2; format", "mov     rcx, rax", "xor     esi, esi; errnum", "xor     eax, eax", "call    _error", "call    _abort"], ["lea~rsi,<TAG>", "sub~rsp,0", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~edi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "xor~esi,esi", "xor~eax,eax", "call~FOO", "call~FOO"]]], "func_feature": [3, 3, 3, 0, 1, 0, 16, 12, 0.0, 3, 1], "succs": [[]], "fname": "xalloc_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 4, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     byte ptr [rax], 0", "mov     rdi, [rsp+28h+response]", "jmp     short loc_11308"], ["mov~<TAG>,0", "mov~rdi,[rsp+0]", "jmp~FOO"]], [1, 0, 5, 0, 0, 4, 0, 1, 1, 3, 0.06666666666666667, ["mov     rdi, [rsp+28h+response]; response", "lea     rax, [rdi+rax-1]", "cmp     byte ptr [rax], 0Ah", "jz      short loc_11338"], ["mov~rdi,[rsp+0]", "lea~rax,[rdi+0]", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 1, 6, 1, 2, 1, 1, 0.26666666666666666, ["mov     rdi, [rsp+28h+response]; ptr", "call    free", "mov     rdx, [rsp+28h+var_10]", "xor     rdx, fs:28h", "mov     eax, ebx", "jnz     short loc_11342"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [3, 1, 6, 1, 1, 15, 3, 2, 0, 2, 0.0, ["push    rbx", "mov     edx, 0Ah; delimiter", "xor     ebx, ebx", "sub     rsp, 20h", "mov     rcx, cs:stdin@@GLIBC_2_2_5; stream", "lea     rsi, [rsp+28h+response_size]; n", "lea     rdi, [rsp+28h+response]; lineptr", "mov     [rsp+28h+response], 0", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "mov     [rsp+28h+response_size], 0", "call    ___getdelim", "test    rax, rax", "jle     short loc_11312"], ["push~rbx", "mov~edx,0", "xor~ebx,ebx", "sub~rsp,<STR>", "mov~rcx,<TAG>", "lea~rsi,[rsp+0]", "lea~rdi,[rsp+0]", "mov~[rsp+0],0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~[rsp+0],0", "call~FOO", "test~rax,rax", "jle~FOO"]], [0, 0, 3, 0, 1, 3, 1, 1, 2, 2, 0.2, ["call    _rpmatch", "test    eax, eax", "setnle  bl"], ["call~FOO", "test~eax,eax", "setnle~bl"]], [0, 1, 0, 1, 0, 3, 0, 0, 2, -1, 0.0, ["add     rsp, 20h", "pop     yes", "retn"], ["add~rsp,<STR>", "pop~yes", "retn"]]], "func_feature": [4, 5, 8, 1, 7, 8, 1, 35, 0.07619, 2, 2], "succs": [[5], [0, 5], [], [2, 6], [1, 3], [3], []], "fname": "yesno", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 4, 0, 1, 3, 1, 2, 0, 0, 0.1, ["call    ___freading", "test    eax, eax", "jz      short loc_1136A"], ["call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 5, 0, 0, 4, 1, 1, 0, 3, 0.0, ["test    stream, stream", "push    rbx", "mov     rbx, stream", "jz      short loc_1136A"], ["test~stream,stream", "push~rbx", "mov~rbx,stream", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 1, -1, 0.125, ["mov     rdi, stream; stream", "pop     stream", "jmp     _fflush"], ["mov~rdi,stream", "pop~stream", "jmp~FOO"]], [1, 0, 1, 0, 1, 7, 1, 2, 3, 0, 0.025, ["mov     rdi, stream; fp", "mov     edx, 1; whence", "xor     esi, esi; offset", "call    rpl_fseeko", "mov     rdi, stream; stream", "pop     stream", "jmp     _fflush"], ["mov~rdi,stream", "mov~edx,0", "xor~esi,esi", "call~FOO", "mov~rdi,stream", "pop~stream", "jmp~FOO"]], [0, 1, 3, 0, 0, 2, 1, 1, 2, 1, 0.1, ["test    dword ptr [stream], 100h", "jnz     short loc_11378"], ["test~<TAG>,<STR>", "jnz~FOO"]]], "func_feature": [2, 4, 7, 0, 6, 8, 2, 19, 0.05833, 0, 0], "succs": [[3, 5], [0, 3], [], [2], [2], [3, 4]], "fname": "rpl_fflush", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 3, 0, 0, 4, 1, 1, 0, 0, 0.0, ["xor     eax, eax", "mov     rcx, [fp+20h]", "cmp     [fp+28h], rcx", "ja      short locret_113B7"], ["xor~eax,eax", "mov~rcx,[fp+0]", "cmp~[fp+0],rcx", "ja~FOO"]], [0, 0, 1, 2, 0, 3, 0, 0, 0, 1, 0.0, ["mov     rdx, [fp+58h]", "sub     rdx, [fp+48h]", "add     rax, rdx"], ["mov~rdx,[fp+0]", "sub~rdx,[fp+0]", "add~rax,rdx"]], [0, 1, 2, 1, 0, 4, 1, 1, 0, 1, 0.16666666666666666, ["mov     rax, [fp+10h]", "sub     rax, [fp+8]", "test    dword ptr [fp], 100h", "jz      short locret_113B7"], ["mov~rax,[fp+0]", "sub~rax,[fp+0]", "test~<TAG>,<STR>", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 2, 2, 0, 4, 5, 1, 12, 0.04167, 0, 3], "succs": [[2, 3], [3], [1, 3], []], "fname": "freadahead", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 2, 0, 2, 13, 0, 3, 0, 0, 0.14285714285714285, ["push    r12", "push    rbp", "mov     r12d, edx", "push    rbx", "mov     rbp, offset", "mov     rbx, fp", "call    _fileno", "mov     edx, r12d; whence", "mov     rsi, offset; offset", "mov     edi, eax; fd", "call    _lseek", "cmp     pos, 0FFFFFFFFFFFFFFFFh", "jz      short loc_11412"], ["push~r12", "push~rbp", "mov~r12d,edx", "push~rbx", "mov~rbp,offset", "mov~rbx,fp", "call~FOO", "mov~edx,r12d", "mov~rsi,offset", "mov~edi,eax", "call~FOO", "cmp~pos,0", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 2, 0.14285714285714285, ["cmp     qword ptr [fp+48h], 0", "jnz     short loc_113CA"], ["cmp~[word ptr [fp+0],0", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 0, 4, 0.0, ["mov     rax, [fp+8]", "cmp     [fp+10h], rax", "jz      short loc_113D0"], ["mov~rax,[fp+0]", "cmp~[fp+0],rax", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 1, -1, 0.07142857142857142, ["jmp     _fseeko"], ["jmp~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 1, 3, 0.09523809523809523, ["mov     rax, [fp+20h]", "cmp     [fp+28h], rax", "jnz     short loc_113CA"], ["mov~rax,[fp+0]", "cmp~[fp+0],rax", "jnz~FOO"]], [1, 0, 1, 0, 0, 3, 2, 0, 4, 1, 0.0, ["and     dword ptr [fp], 0FFFFFFEFh", "mov     [fp+90h], pos", "xor     eax, eax"], ["and~<TAG>,0", "mov~[fp+0],pos", "xor~eax,eax"]], [0, 0, 0, 0, 0, 4, 0, 0, 4, 0, 0.0, ["pop     fp", "pop     offset", "pop     whence", "retn"], ["pop~fp", "pop~offset", "pop~whence", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []]], "func_feature": [2, 2, 7, 0, 8, 10, 2, 29, 0.05655, 0, 0], "succs": [[5, 6], [0, 3], [3, 4], [7], [1, 3], [6], [], []], "fname": "rpl_fseeko", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 5, 0, 0, 2, 1, 1, 0, 0, 0.06666666666666667, ["test    n, n", "jz      short loc_11480"], ["test~n,n", "jz~FOO"]], [2, 0, 6, 1, 1, 19, 2, 1, 0, 2, 0.0, ["push    r13", "push    r12", "mov     r13, s", "push    rbp", "push    rbx", "mov     rbx, pwc", "mov     r12, n", "sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+38h+var_30], rax", "xor     eax, eax", "lea     rax, [rsp+38h+wc]", "test    pwc, pwc", "cmovz   rbx, rax", "mov     rdi, pwc; pwc", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFDh", "mov     rbp, rax", "jbe     short loc_11480"], ["push~r13", "push~r12", "mov~r13,s", "push~rbp", "push~rbx", "mov~rbx,pwc", "mov~r12,n", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "test~pwc,pwc", "cmovz~rbx,rax", "mov~rdi,pwc", "call~FOO", "cmp~rax,0", "mov~rbp,rax", "jbe~FOO"]], [0, 0, 4, 0, 1, 4, 2, 2, 2, 2, 0.06666666666666667, ["xor     edi, edi; category", "call    hard_locale", "test    al, al", "jnz     short loc_11480"], ["xor~edi,edi", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 1, 1, 0.26666666666666666, ["mov     rdx, [rsp+38h+var_30]", "xor     rdx, fs:28h", "mov     rax, rbp", "jnz     short loc_1149E"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "mov~rax,rbp", "jnz~FOO"]], [1, 0, 3, 0, 0, 4, 0, 0, 3, 2, 0.0, ["movzx   eax, byte ptr [s+0]", "mov     ebp, 1", "mov     [pwc], eax", "nop     dword ptr [rax+00h]"], ["movzx~eax,[yte ptr [s+0]", "mov~ebp,0", "mov~<TAG>,eax", "nop~[word ptr [rax+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 2, -1, 0.0, ["add     rsp, 18h", "pop     pwc", "pop     rbp", "pop     n", "pop     s", "retn"], ["add~rsp,0", "pop~pwc", "pop~rbp", "pop~n", "pop~s", "retn"]]], "func_feature": [3, 6, 6, 1, 7, 9, 1, 40, 0.05714, 1, 2], "succs": [[2, 3], [0, 3], [3, 4], [5, 6], [3], [], []], "fname": "rpl_mbrtowc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 2, 1, 0.0, 0, 0], "succs": [[]], "fname": "free_permission_context", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0.0, ["mov     [ctx], edx", "xor     eax, eax", "retn"], ["mov~<TAG>,edx", "xor~eax,eax", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 1, 3, 0.0, 0, 0], "succs": [[]], "fname": "get_permissions", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.08333333333333333, ["jmp     _chmod"], ["jmp~FOO"]], [1, 0, 4, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     eax, esi", "mov     esi, edx; mode", "cmp     eax, 0FFFFFFFFh", "jz      short loc_114E0"], ["mov~eax,esi", "mov~esi,edx", "cmp~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0.0, [], []], [0, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.08333333333333333, ["mov     edi, eax; file", "jmp     _fchmod"], ["mov~edi,eax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0.0, [], []]], "func_feature": [0, 0, 3, 0, 5, 4, 1, 7, 0.03333, 0, 0], "succs": [[4], [0, 3], [], [2], []], "fname": "chmod_or_fchmod", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[2, 0, 0, 2, 1, 12, 1, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rax, name", "mov     esi, edx; desc", "mov     edx, [ctx]; mode", "mov     ctx, name; name", "call    chmod_or_fchmod", "test    eax, eax", "setnz   al", "add     rsp, 8", "movzx   eax, al", "neg     eax", "retn"], ["sub~rsp,0", "mov~rax,name", "mov~esi,edx", "mov~edx,<TAG>", "mov~ctx,name", "call~FOO", "test~eax,eax", "setnz~al", "add~rsp,0", "movzx~eax,al", "neg~eax", "retn"]]], "func_feature": [1, 1, 1, 0, 1, 0, 2, 12, 0.0, 0, 2], "succs": [[]], "fname": "set_permissions", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["pop     rbx", "mov     eax, 0FFFFFFFFh", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "mov~eax,0", "pop~stream", "pop~r12", "retn"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, -1, 0.047619047619047616, ["test    eax, eax", "jnz     short loc_11578"], ["test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 2, 0.07142857142857142, ["test    eax, eax", "jz      short loc_1154F"], ["test~eax,eax", "jz~FOO"]], [0, 1, 7, 0, 2, 12, 2, 3, 0, 3, 0.0, ["push    r12", "push    rbp", "mov     rbp, stream", "push    rbx", "call    ___fpending", "mov     ebx, [stream+0]", "mov     rdi, stream; fp", "mov     r12, rax", "call    rpl_fclose", "and     ebx, 20h", "test    ebx, ebx", "jnz     short loc_11558"], ["push~r12", "push~rbp", "mov~rbp,stream", "push~rbx", "call~FOO", "mov~ebx,[stream+0]", "mov~rdi,stream", "mov~r12,rax", "call~FOO", "and~ebx,<STR>", "test~ebx,ebx", "jnz~FOO"]], [1, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.047619047619047616, ["test    r12, r12", "mov     eax, 0FFFFFFFFh", "jz      short loc_11588"], ["test~r12,r12", "mov~eax,0", "jz~FOO"]], [2, 0, 0, 0, 1, 7, 0, 1, 2, -1, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 0", "mov     eax, 0FFFFFFFFh", "pop     rbx", "pop     stream", "pop     r12", "retn"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "pop~rbx", "pop~stream", "pop~r12", "retn"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["pop     rbx", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "pop~stream", "pop~r12", "retn"]], [1, 0, 0, 0, 1, 9, 0, 1, 3, 0, 0.0, ["call    ___errno_location", "cmp     dword ptr [rax], 9", "pop     rbx", "pop     stream", "pop     r12", "setnz   al", "movzx   eax, al", "neg     eax", "retn"], ["call~FOO", "cmp~<TAG>,0", "pop~rbx", "pop~stream", "pop~r12", "setnz~al", "movzx~eax,al", "neg~eax", "retn"]]], "func_feature": [4, 5, 8, 0, 8, 8, 5, 44, 0.02083, 0, 0], "succs": [[], [0, 5], [4, 6], [1, 2], [6, 7], [], [], []], "fname": "close_stream", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 6, 0, 1, 4, 0, 1, 0, 0, 0.11904761904761904, ["mov     rdi, dp; dirp", "call    _dirfd", "cmp     eax, 2", "jbe     short loc_115D0"], ["mov~rdi,dp", "call~FOO", "cmp~eax,0", "jbe~FOO"]], [0, 0, 7, 0, 1, 9, 1, 2, 0, 4, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "call    _opendir", "test    rax, rax", "mov     rbx, rax", "jz      short loc_115C2"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 2, 0, 1, 6, 1, 2, 3, 1, 0.10714285714285714, ["mov     edi, r12d; fd", "call    _fdopendir", "test    rax, rax", "mov     r13, rax", "mov     r14d, [rbp+0]", "jnz     short loc_115F9"], ["mov~edi,r12d", "call~FOO", "test~rax,rax", "mov~r13,rax", "mov~r14d,[rbp+0]", "jnz~FOO"]], [2, 0, 4, 0, 2, 10, 2, 2, 2, 2, 0.19047619047619047, ["mov     edi, eax; fd", "mov     edx, 3", "mov     esi, 406h; action", "xor     eax, eax", "call    rpl_fcntl", "mov     r12d, eax", "call    ___errno_location", "test    r12d, r12d", "mov     rbp, rax", "jns     short loc_11618"], ["mov~edi,eax", "mov~edx,0", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~r12d,eax", "call~FOO", "test~r12d,r12d", "mov~rbp,rax", "jns~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 1, -1, 0.0, ["mov     rax, dp", "pop     dp", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "retn"], ["mov~rax,dp", "pop~dp", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "retn"]], [0, 0, 0, 0, 1, 11, 0, 1, 4, -1, 0.0, ["mov     rdi, dp; dirp", "mov     dp, r13", "call    _closedir", "mov     [rbp+0], r14d", "mov     rax, rbx", "pop     rbx", "pop     rbp", "pop     f", "pop     r13", "pop     e", "retn"], ["mov~rdi,dp", "mov~dp,r13", "call~FOO", "mov~[rbp+0],r14d", "mov~rax,rbx", "pop~rbx", "pop~rbp", "pop~f", "pop~r13", "pop~e", "retn"]], [0, 0, 1, 0, 1, 3, 0, 2, 4, 0, 0.0, ["mov     edi, r12d; fd", "call    _close", "jmp     short loc_115F9"], ["mov~edi,r12d", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 0, 2, 1, 0, 3, -1, 0.03571428571428571, ["mov     r14d, [rax]", "xor     r13d, r13d"], ["mov~r14d,<TAG>", "xor~r13d,r13d"]]], "func_feature": [7, 5, 10, 0, 8, 10, 1, 52, 0.05655, 0, 0], "succs": [[3, 4], [0, 4], [5, 6], [2, 7], [], [], [5], [5]], "fname": "opendir_safer", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rsi, ts; tp", "xor     edi, edi; clock_id", "jmp     _clock_gettime"], ["mov~rsi,ts", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 2, 3, 0.0, 0, 0], "succs": [[], [0]], "fname": "gettime", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 28h", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 12, 3, 2, 0, 1, 0.0, ["sub     rsp, 28h", "xor     edi, edi; clock_id", "mov     rsi, rsp; tp", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "call    _clock_gettime", "mov     rcx, [rsp+28h+var_10]", "xor     rcx, fs:28h", "mov     rax, [rsp+28h+ts.tv_sec]", "mov     rdx, [rsp+28h+ts.tv_nsec]", "jnz     short loc_1168C"], ["sub~rsp,0", "xor~edi,edi", "mov~rsi,rsp", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,<TAG>", "mov~rdx,[rsp+0]", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 3, 3, 1, 3, 2, 0, 15, 0.0, 1, 2], "succs": [[], [0, 2], []], "fname": "current_timespec", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [2, 0, 3, 1, 1, 7, 2, 2, 0, 2, 0.0, ["sub     rsp, 8", "xor     esi, esi; locale", "call    _setlocale", "mov     rdx, rax", "mov     eax, 1", "test    p, p", "jz      short loc_116D5"], ["sub~rsp,0", "xor~esi,esi", "call~FOO", "mov~rdx,rax", "mov~eax,0", "test~p,p", "jz~FOO"]], [2, 0, 2, 0, 0, 9, 2, 1, 1, 1, 0.16666666666666666, ["lea     rdi, aC; \"C\"", "mov     ecx, 2", "mov     rsi, p", "repe cmpsb", "setnbe  cl", "sbb     cl, 0", "xor     eax, eax", "test    cl, cl", "jnz     short loc_116E0"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,p", "cmpsb~<TAG>,<TAG>", "setnbe~cl", "sbb~cl,0", "xor~eax,eax", "test~cl,cl", "jnz~FOO"]], [3, 0, 0, 1, 0, 10, 1, 0, 2, 0, 0.0, ["lea     rdi, aPosix; \"POSIX\"", "mov     ecx, 6", "mov     rsi, rdx", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "setnz   al", "add     rsp, 8", "retn"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,rdx", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "setnz~al", "add~rsp,0", "retn"]]], "func_feature": [1, 5, 3, 0, 4, 4, 1, 28, 0.04167, 2, 3], "succs": [[], [0, 2], [0, 3], []], "fname": "hard_locale", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[2, 0, 2, 2, 0, 6, 1, 1, 0, 0, 0.16666666666666666, ["rol     h, 9", "add     s, 1", "add     rax, rcx", "movsx   rcx, byte ptr [s]", "test    cl, cl", "jnz     short loc_11710"], ["rol~h,0", "add~s,0", "add~rax,rcx", "movsx~rcx,<TAG>", "test~cl,cl", "jnz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 0, 1, -1, 0.16666666666666666, ["xor     eax, eax", "nop     word ptr [h+h+00h]"], ["xor~eax,eax", "nop~[ord ptr [h+0]"]], [0, 0, 4, 0, 0, 3, 1, 1, 0, 1, 0.0, ["movsx   rcx, byte ptr [s]", "test    cl, cl", "jz      short loc_11730"], ["movsx~rcx,<TAG>", "test~cl,cl", "jz~FOO"]], [0, 0, 0, 1, 0, 4, 1, 0, 3, -1, 0.0, ["xor     edx, edx", "div     tablesize", "mov     rax, rdx", "retn"], ["xor~edx,edx", "div~,tablesize", "mov~rax,rdx", "retn"]], [0, 0, 0, 0, 0, 3, 1, 0, 1, 0, 0.0, ["xor     edx, edx", "mov     rax, rdx", "retn"], ["xor~edx,edx", "mov~rax,rdx", "retn"]]], "func_feature": [0, 5, 2, 0, 5, 5, 1, 18, 0.06667, 0, 3], "succs": [[0, 3], [0], [1, 4], [], []], "fname": "hash_pjw", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[2, 0, 2, 1, 1, 5, 1, 2, 0, 0, 0.0, ["sub     rsp, 8", "mov     edi, 0Eh; item", "call    _nl_langinfo", "test    codeset, codeset", "jz      short loc_11770"], ["sub~rsp,0", "mov~edi,0", "call~FOO", "test~codeset,codeset", "jz~FOO"]], [1, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0.0, ["lea     codeset, aAscii; \"ASCII\"", "add     rsp, 8", "retn"], ["lea~codeset,<TAG>", "add~rsp,0", "retn"]], [2, 0, 0, 1, 0, 5, 0, 0, 0, -1, 0.0, ["cmp     byte ptr [codeset], 0", "lea     rdx, aAscii; \"ASCII\"", "cmovz   codeset, rdx", "add     rsp, 8", "retn"], ["cmp~<TAG>,0", "lea~rdx,<TAG>", "cmovz~codeset,rdx", "add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 2, 1, 13, 0.0, 1, 3], "succs": [[1, 2], [], []], "fname": "locale_charset", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 2, 7, 2, 3, 1, 0, 0.3333333333333333, ["xor     eax, eax", "call    _openat", "mov     edi, eax; fd", "call    fd_safer", "mov     rsi, [rsp+58h+var_40]", "xor     rsi, fs:28h", "jnz     short loc_117E9"], ["xor~eax,eax", "call~FOO", "mov~edi,eax", "call~FOO", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 2, 0, 0.0, ["add     rsp, 58h", "retn"], ["add~rsp,<STR>", "retn"]], [1, 0, 3, 0, 0, 7, 0, 1, 1, 0, 0.0, ["lea     rax, [rsp+58h+arg_0]", "mov     [rsp+58h+ap.gp_offset], 18h", "mov     ecx, dword ptr [rsp+58h+var_20]", "mov     [rsp+58h+ap.overflow_arg_area], rax", "lea     rax, [rsp+58h+var_38]", "mov     [rsp+58h+ap.reg_save_area], rax", "jmp     short loc_117A0"], ["lea~rax,[rsp+0]", "mov~<TAG>,0", "mov~ecx,[word ptr [rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 1, 4, 1, 0, 8, 3, 1, 0, 0, 0.0, ["sub     rsp, 58h", "mov     [rsp+58h+var_20], rcx", "xor     ecx, ecx", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "test    dl, 40h", "jnz     short loc_117C8"], ["sub~rsp,<STR>", "mov~[rsp+0],rcx", "xor~ecx,ecx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~dl,0", "jnz~FOO"]]], "func_feature": [3, 5, 6, 3, 5, 5, 1, 25, 0.06667, 1, 2], "succs": [[], [0, 2], [], [1], [1, 3]], "fname": "openat_safer", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[3, 0, 0, 0, 1, 9, 0, 1, 0, 0, 0.0, ["push    rbx", "mov     rbx, source", "mov     edi, 18h; n", "call    xmalloc", "mov     [s], source", "mov     qword ptr [s+10h], 0", "mov     qword ptr [s+8], 0", "pop     source", "retn"], ["push~rbx", "mov~rbx,source", "mov~edi,0", "call~FOO", "mov~<TAG>,source", "mov~[word ptr [s+0],0", "mov~[word ptr [s+0],0", "pop~source", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 9, 0.0, 0, 0], "succs": [[]], "fname": "randint_new", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 2, 0, 1, 4, 1, 2, 0, 0, 0.0, ["push    rbx", "call    randread_new", "test    source, source", "jz      short loc_11850"], ["push~rbx", "call~FOO", "test~source,source", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0.0, ["xor     eax, eax", "pop     rbx", "retn"], ["xor~eax,eax", "pop~rbx", "retn"]], [3, 0, 0, 0, 1, 8, 0, 1, 0, -1, 0.0, ["mov     rbx, source", "mov     edi, 18h; n", "call    xmalloc", "mov     [rax], source", "mov     qword ptr [rax+10h], 0", "mov     qword ptr [rax+8], 0", "pop     source", "retn"], ["mov~rbx,source", "mov~edi,0", "call~FOO", "mov~<TAG>,source", "mov~[word ptr [rax+0],0", "mov~[word ptr [rax+0],0", "pop~source", "retn"]]], "func_feature": [2, 2, 3, 0, 3, 2, 1, 15, 0.0, 0, 0], "succs": [[1, 2], [], []], "fname": "randint_all_new", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [s]", "retn"], ["mov~rax,<TAG>", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "randint_get_source", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.13186813186813187, ["mov     rcx, [rsp+58h+var_40]", "xor     rcx, fs:28h", "mov     rax, rbp", "jnz     short loc_11985"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,rbp", "jnz~FOO"]], [0, 0, 3, 0, 0, 4, 0, 1, 4, 2, 0.016483516483516484, ["mov     [s+8], rax", "mov     [s+10h], rsi", "mov     randnum, reduced_randnum", "jmp     short loc_1194F"], ["mov~[s+0],rax", "mov~[s+0],rsi", "mov~randnum,reduced_randnum", "jmp~FOO"]], [2, 0, 3, 0, 0, 2, 0, 0, 3, 2, 0.14835164835164835, ["mov     qword ptr [s+10h], 0", "mov     qword ptr [s+8], 0"], ["mov~[word ptr [s+0],0", "mov~[word ptr [s+0],0"]], [3, 0, 14, 3, 0, 5, 0, 1, 3, 6, 0.16483516483516486, ["shl     rmax, 8", "add     i, 1; size", "add     rax, 0FFh", "cmp     genmax, rmax", "ja      short loc_118F0"], ["shl~rmax,0", "add~i,0", "add~rax,0", "cmp~genmax,rmax", "ja~FOO"]], [0, 0, 14, 0, 0, 3, 1, 0, 2, 7, 0.14285714285714288, ["mov     rax, randmax", "xor     edx, edx", "nop"], ["mov~rax,randmax", "xor~edx,edx", "nop"]], [0, 0, 14, 0, 0, 2, 0, 0, 4, 5, 0.18681318681318682, ["lea     last_usable_choice, [unusable_choices-1]", "mov     rbp, reduced_randnum"], ["lea~last_usable_choice,[unusable_choices-1]+0]", "mov~rbp,reduced_randnum"]], [0, 0, 14, 4, 0, 12, 2, 0, 3, 3, 0.23626373626373628, ["mov     rax, randmax", "xor     edx, edx", "sub     rax, genmax", "div     choices", "sub     randmax, rdx", "mov     rdi, rdx", "mov     rsi, rax", "xor     edx, edx", "mov     rax, randnum", "div     choices", "cmp     randnum, last_usable_choice", "jbe     loc_11978"], ["mov~rax,randmax", "xor~edx,edx", "sub~rax,genmax", "div~,choices", "sub~randmax,rdx", "mov~rdi,rdx", "mov~rsi,rax", "xor~edx,edx", "mov~rax,randnum", "div~,choices", "cmp~randnum,last_usable_choice", "jbe~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 2, 3, 0.11538461538461539, ["cmp     randmax, genmax", "jz      loc_1193F"], ["cmp~randmax,genmax", "jz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 6, 3, 0.23076923076923078, ["cmp     randmax, genmax", "jnz     loc_118B9"], ["cmp~randmax,genmax", "jnz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 0, 1, 4, 0.28571428571428575, ["cmp     randmax, genmax", "jnb     short loc_118B0"], ["cmp~randmax,genmax", "jnb~FOO"]], [1, 0, 14, 1, 0, 19, 1, 1, 0, 5, 0.0, ["push    r15", "push    r14", "lea     r15, [genmax+1]", "push    r13", "push    r12", "mov     r13, s", "push    rbp", "push    rbx", "mov     r14, genmax", "sub     rsp, 28h", "mov     rbp, [s+8]", "mov     rbx, [s+10h]", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "mov     rax, [s]", "lea     r12, [rsp+58h+buf]", "mov     [rsp+58h+source], rax", "jmp     short loc_118E5"], ["push~r15", "push~r14", "lea~r15,[genmax+0]", "push~r13", "push~r12", "mov~r13,s", "push~rbp", "push~rbx", "mov~r14,genmax", "sub~rsp,0", "mov~rbp,[s+0]", "mov~rbx,[s+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "lea~r12,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 14, 0, 1, 5, 0, 1, 4, 5, 0.18681318681318682, ["mov     rdi, [rsp+58h+source]; s", "mov     rsi, r12; buf", "call    randread", "mov     rax, r12", "nop     dword ptr [rax+rax+00h]"], ["mov~rdi,[rsp+0]", "mov~rsi,r12", "call~FOO", "mov~rax,r12", "nop~[word ptr [rax+0]"]], [1, 0, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     r12", "pop     s", "pop     genmax", "pop     choices", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~s", "pop~genmax", "pop~choices", "retn"]], [4, 0, 14, 5, 0, 8, 0, 1, 5, 4, 0.2087912087912088, ["movzx   edx, byte ptr [rax]", "shl     randmax, 8", "shl     randnum, 8", "add     rbx, 0FFh", "add     rax, 1", "add     rbp, rdx", "cmp     genmax, randmax", "ja      short loc_11918"], ["movzx~edx,<TAG>", "shl~randmax,0", "shl~randnum,0", "add~rbx,0", "add~rax,0", "add~rbp,rdx", "cmp~genmax,randmax", "ja~FOO"]]], "func_feature": [2, 5, 9, 1, 15, 20, 1, 79, 0.137, 1, 14], "succs": [[13, 7], [0], [0], [3, 12], [3], [10], [1, 5], [], [2, 6], [2, 6], [8, 4], [10], [14], [], [9, 14]], "fname": "randint_genmax", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[2, 0, 1, 0, 1, 8, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     rbx, s", "mov     esi, 18h", "call    ___explicit_bzero_chk", "mov     rdi, s; ptr", "pop     s", "jmp     free"], ["push~rbx", "mov~rdx,0", "mov~rbx,s", "mov~esi,0", "call~FOO", "mov~rdi,s", "pop~s", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 0, 2, 0, 2, 1, 0, 8, 0.0, 0, 0], "succs": [[1], []], "fname": "randint_free", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[4, 0, 0, 2, 4, 26, 0, 4, 0, 0, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, s", "sub     rsp, 8", "mov     s, [s]; s", "call    randread_free", "mov     r12d, eax", "call    ___errno_location", "mov     r13d, [rax]", "mov     rdi, s", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 18h", "mov     rbp, rax", "call    ___explicit_bzero_chk", "mov     rdi, s; ptr", "call    free", "mov     [rbp+0], r13d", "add     rsp, 8", "mov     eax, r12d", "pop     s", "pop     rbp", "pop     r", "pop     e", "retn"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,s", "sub~rsp,0", "mov~s,<TAG>", "call~FOO", "mov~r12d,eax", "call~FOO", "mov~r13d,<TAG>", "mov~rdi,s", "mov~rdx,0", "mov~esi,0", "mov~rbp,rax", "call~FOO", "mov~rdi,s", "call~FOO", "mov~[rbp+0],r13d", "add~rsp,0", "mov~eax,r12d", "pop~s", "pop~rbp", "pop~r", "pop~e", "retn"]]], "func_feature": [4, 0, 4, 0, 1, 0, 2, 26, 0.0, 0, 2], "succs": [[]], "fname": "randint_all_free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 2, 0, 1, 4, 1, 2, 0, 0, 0.07500000000000001, ["lea     rsi, aSEndOfFile; \"%s: end of file\"", "xor     edi, edi; domainname", "call    _dcgettext", "jmp     short loc_11A43"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "jmp~FOO"]], [2, 0, 4, 0, 2, 7, 0, 3, 1, 0, 0.15000000000000002, ["call    quote", "mov     rbp, rax", "call    ___errno_location", "cmp     dword ptr [rax], 0", "mov     rbx, rax", "mov     edx, 5; category", "jz      short loc_11A5D"], ["call~FOO", "mov~rbp,rax", "call~FOO", "cmp~<TAG>,0", "mov~rbx,rax", "mov~edx,0", "jz~FOO"]], [1, 0, 5, 1, 0, 5, 1, 1, 0, 0, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "test    file_name, file_name", "jz      short loc_11A58"], ["push~rbp", "push~rbx", "sub~rsp,0", "test~file_name,file_name", "jz~FOO"]], [0, 0, 1, 0, 1, 6, 1, 1, 3, 0, 0.15000000000000002, ["mov     edi, cs:exit_failure; status", "mov     esi, [rbx]; errnum", "mov     rdx, rax; format", "mov     rcx, rbp", "xor     eax, eax", "call    _error"], ["mov~edi,<TAG>", "mov~esi,<TAG>", "mov~rdx,rax", "mov~rcx,rbp", "xor~eax,eax", "call~FOO"]], [0, 0, 2, 0, 1, 3, 1, 1, 2, 0, 0.07500000000000001, ["lea     rsi, aSReadError; \"%s: read error\"", "xor     edi, edi; domainname", "call    _dcgettext"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [6, 4, 9, 0, 6, 7, 0, 26, 0.075, 3, 1], "succs": [[3], [0, 4], [1, 5], [5], [3], []], "fname": "randread_error", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[3, 0, 15, 2, 1, 19, 2, 2, 0, 0, 0.036231884057971016, ["test    rbp, rbp", "mov     r15, r14", "mov     eax, 10h", "cmovs   rbp, name", "lea     name, [rsp+68h+tv]", "sub     r15, rbp", "cmp     r15, 10h", "mov     rdi, r12; tv", "cmova   r15, rax", "xor     esi, esi; tz", "call    _gettimeofday", "lea     rax, [r13+rbp+0]", "add     rbp, r15", "mov     ecx, r15d", "cmp     rbp, 7FFh", "mov     rsi, r12", "mov     rdi, rax", "rep movsb", "ja      loc_11BA5"], ["test~rbp,rbp", "mov~r15,r14", "mov~eax,0", "cmovs~rbp,name", "lea~name,[rsp+0]", "sub~r15,rbp", "cmp~r15,0", "mov~rdi,r12", "cmova~r15,rax", "xor~esi,esi", "call~FOO", "lea~rax,[r13+0]", "add~rbp,r15", "mov~ecx,r15d", "cmp~rbp,0", "mov~rsi,r12", "mov~rdi,rax", "movsb~<TAG>,<TAG>", "ja~FOO"]], [3, 1, 16, 0, 2, 13, 0, 3, 3, 4, 0.03260869565217391, ["cmp     bytes_bound, 800h", "mov     rdx, bytes_bound", "mov     r14d, 800h", "cmova   rdx, r14", "mov     ecx, 1018h", "mov     rsi, r13", "mov     edi, eax", "call    ___read_chk", "mov     edi, r15d; fd", "mov     bytes_bound, rax", "call    _close", "cmp     rbp, 7FFh", "jle     loc_11CC4"], ["cmp~bytes_bound,0", "mov~rdx,bytes_bound", "mov~r14d,0", "cmova~rdx,r14", "mov~ecx,<STR>", "mov~rsi,r13", "mov~edi,eax", "call~FOO", "mov~edi,r15d", "mov~bytes_bound,rax", "call~FOO", "cmp~rbp,0", "jle~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, -1, 0.07971014492753624, ["mov     rdx, [rsp+68h+var_40]", "xor     rdx, fs:28h", "mov     rax, rbx", "jnz     loc_11CBF"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "mov~rax,rbx", "jnz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 4, -1, 0.08152173913043478, ["mov     rdi, r13; s", "call    isaac_seed", "jmp     loc_11AF7"], ["mov~rdi,r13", "call~FOO", "jmp~FOO"]], [2, 1, 3, 0, 1, 8, 0, 2, 1, -1, 0.005434782608695652, ["mov     edi, 1038h; n", "call    xmalloc", "mov     rbx, rax", "mov     qword ptr [rax], 0", "lea     rax, randread_error", "mov     qword ptr [rbx+10h], 0", "mov     [rbx+8], rax", "jmp     loc_11AF7"], ["mov~edi,<STR>", "call~FOO", "mov~rbx,rax", "mov~<TAG>,0", "lea~rax,<TAG>", "mov~[word ptr [rbx+0],0", "mov~[rbx+0],rax", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 3, -1, 0.005434782608695652, ["xor     ebx, ebx", "jmp     loc_11AF7"], ["xor~ebx,ebx", "jmp~FOO"]], [2, 1, 3, 0, 2, 14, 1, 2, 3, -1, 0.005434782608695652, ["mov     edi, 1038h; n", "call    xmalloc", "mov     rbx, rax", "mov     [rax], source", "lea     rax, randread_error", "cmp     bytes_bound, 1000h", "mov     ecx, 1000h", "lea     rsi, [rbx+18h]; buf", "cmovbe  rcx, bytes_bound; n", "mov     [rbx+8], rax", "mov     [rbx+10h], name", "xor     edx, edx; modes", "mov     rdi, source; stream", "call    _setvbuf"], ["mov~edi,<STR>", "call~FOO", "mov~rbx,rax", "mov~<TAG>,source", "lea~rax,<TAG>", "cmp~bytes_bound,0", "mov~ecx,0", "lea~rsi,[rbx+0]", "cmovbe~rcx,bytes_bound", "mov~[rbx+0],rax", "mov~[rbx+0],name", "xor~edx,edx", "mov~rdi,source", "call~FOO"]], [2, 0, 13, 2, 1, 14, 0, 2, 6, 1, 0.05434782608695652, ["sub     r14, rdx", "cmp     r14, 4", "cmova   r14, r8", "call    _getppid", "mov     rdx, [rsp+68h+var_68]", "mov     dword ptr [rsp+68h+tv.tv_sec], eax", "mov     ecx, r14d", "mov     rsi, r12", "lea     rax, [r13+rdx+0]", "add     r14, rdx", "cmp     r14, 7FFh", "mov     rdi, rax", "rep movsb", "ja      loc_11BA5"], ["sub~r14,rdx", "cmp~r14,0", "cmova~r14,r8", "call~FOO", "mov~rdx,<TAG>", "mov~[word ptr [rsp+0],eax", "mov~ecx,r14d", "mov~rsi,r12", "lea~rax,[r13+0]", "add~r14,rdx", "cmp~r14,0", "mov~rdi,rax", "movsb~<TAG>,<TAG>", "ja~FOO"]], [3, 0, 14, 2, 1, 19, 0, 2, 5, 2, 0.04710144927536232, ["mov     r15, r14", "mov     r8d, 4", "sub     r15, rbp", "mov     [rsp+68h+var_60], r8", "cmp     r15, 4", "cmova   r15, r8", "lea     rdx, [rbp+r15+0]", "add     rbp, r13", "mov     [rsp+68h+var_68], rdx", "call    _getpid", "mov     rdx, [rsp+68h+var_68]", "mov     dword ptr [rsp+68h+tv.tv_sec], eax", "mov     ecx, r15d", "mov     rdi, rbp", "mov     rsi, r12", "mov     r8, [rsp+68h+var_60]", "rep movsb", "cmp     rdx, 7FFh", "jg      loc_11BA5"], ["mov~r15,r14", "mov~r8d,0", "sub~r15,rbp", "mov~[rsp+0],r8", "cmp~r15,0", "cmova~r15,r8", "lea~rdx,[rbp+0]", "add~rbp,r13", "mov~<TAG>,rdx", "call~FOO", "mov~rdx,<TAG>", "mov~[word ptr [rsp+0],eax", "mov~ecx,r15d", "mov~rdi,rbp", "mov~rsi,r12", "mov~r8,[rsp+0]", "movsb~<TAG>,<TAG>", "cmp~rdx,0", "jg~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 9, -1, 0.014492753623188406, ["jmp     loc_11BA5"], ["jmp~FOO"]], [1, 0, 6, 1, 0, 6, 0, 0, 8, -1, 0.034420289855072464, ["mov     edx, eax", "add     eax, 1", "movzx   edi, byte ptr [r12+rdx]", "cmp     eax, esi", "mov     [rcx+rdx], dil", "jb      short loc_11C9B"], ["mov~edx,eax", "add~eax,0", "movzx~edi,<TAG>", "cmp~eax,esi", "mov~<TAG>,dil", "jb~FOO"]], [1, 0, 24, 1, 0, 12, 2, 1, 0, 7, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 38h", "mov     rax, fs:28h", "mov     [rsp+68h+var_40], rax", "xor     eax, eax", "test    bytes_bound, bytes_bound", "jz      loc_11BB8"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~bytes_bound,bytes_bound", "jz~FOO"]], [3, 0, 7, 1, 1, 11, 1, 2, 6, -1, 0.07065217391304347, ["call    _getgid", "mov     dword ptr [rsp+68h+tv.tv_sec], eax", "mov     eax, 800h", "mov     edx, 4", "sub     rax, rbp", "lea     rcx, [r13+rbp+0]", "cmp     rax, 4", "cmova   rax, rdx", "test    eax, eax", "mov     esi, eax", "jz      loc_11BA5"], ["call~FOO", "mov~[word ptr [rsp+0],eax", "mov~eax,0", "mov~edx,0", "sub~rax,rbp", "lea~rcx,[r13+0]", "cmp~rax,0", "cmova~rax,rdx", "test~eax,eax", "mov~esi,eax", "jz~FOO"]], [1, 0, 8, 1, 0, 3, 0, 1, 5, -1, 0.12318840579710146, ["add     rbp, r14", "cmp     rbp, 7FFh", "ja      loc_11BA5"], ["add~rbp,r14", "cmp~rbp,0", "ja~FOO"]], [0, 0, 12, 0, 0, 1, 0, 1, 7, 0, 0.057971014492753624, ["jmp     loc_11C1F"], ["jmp~FOO"]], [0, 0, 6, 0, 0, 1, 1, 0, 7, -1, 0.050724637681159424, ["xor     eax, eax"], ["xor~eax,eax"]], [1, 0, 12, 0, 3, 13, 1, 3, 3, -1, 0.043478260869565216, ["lea     name, [rsp+68h+tv]", "xor     esi, esi; tz", "mov     r14d, 18h", "mov     rdi, r12; tv", "call    _gettimeofday", "movdqa  xmm0, xmmword ptr [rsp+68h+tv.tv_sec]", "movups  xmmword ptr [rbx+20h], xmm0", "call    _getpid", "mov     [rbx+30h], eax", "mov     dword ptr [rsp+68h+tv.tv_sec], eax", "call    _getppid", "mov     dword ptr [rsp+68h+tv.tv_sec], eax", "mov     [rbx+34h], eax"], ["lea~name,[rsp+0]", "xor~esi,esi", "mov~r14d,0", "mov~rdi,r12", "call~FOO", "movdqa~xmm0,[mmword ptr [rsp+0]", "movups~[mmword ptr [rbx+0],xmm0", "call~FOO", "mov~[rbx+0],eax", "mov~[word ptr [rsp+0],eax", "call~FOO", "mov~[word ptr [rsp+0],eax", "mov~[rbx+0],eax"]], [3, 1, 18, 0, 2, 16, 3, 3, 2, 5, 0.05434782608695652, ["mov     edi, 1038h; n", "call    xmalloc", "mov     rbx, rax", "mov     qword ptr [rax], 0", "lea     rax, randread_error", "lea     rdi, aDevUrandom; \"/dev/urandom\"", "xor     esi, esi; oflag", "mov     qword ptr [rbx+10h], 0", "mov     [rbx+8], rax", "mov     qword ptr [rbx+18h], 0", "xor     eax, eax", "call    _open", "test    eax, eax", "lea     r13, [rbx+20h]", "mov     r15d, eax", "js      short loc_11BE8"], ["mov~edi,<STR>", "call~FOO", "mov~rbx,rax", "mov~<TAG>,0", "lea~rax,<TAG>", "lea~rdi,<TAG>", "xor~esi,esi", "mov~[word ptr [rbx+0],0", "mov~[rbx+0],rax", "mov~[word ptr [rbx+0],0", "xor~eax,eax", "call~FOO", "test~eax,eax", "lea~r13,[rbx+0]", "mov~r15d,eax", "js~FOO"]], [0, 0, 22, 0, 0, 4, 1, 1, 1, 6, 0.034420289855072464, ["test    name, name", "mov     r12, name", "mov     rbp, bytes_bound", "jz      short loc_11B20"], ["test~name,name", "mov~r12,name", "mov~rbp,bytes_bound", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 38h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 5, 0, 1, 5, 1, 2, 2, -1, 0.012681159420289856, ["lea     bytes_bound, mode; \"rb\"", "call    fopen_safer", "test    rax, rax", "mov     r13, rax", "jz      loc_11CB8"], ["lea~bytes_bound,<TAG>", "call~FOO", "test~rax,rax", "mov~r13,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [3, 0, 11, 1, 1, 11, 1, 2, 4, -1, 0.1286231884057971, ["mov     ebp, 800h", "mov     eax, 4", "sub     rbp, r14", "cmp     rbp, 4", "cmova   rbp, rax", "call    _getuid", "test    ebp, ebp", "mov     dword ptr [rsp+68h+tv.tv_sec], eax", "lea     rcx, [r13+r14+0]", "mov     esi, ebp", "jz      short loc_11C5C"], ["mov~ebp,0", "mov~eax,0", "sub~rbp,r14", "cmp~rbp,0", "cmova~rbp,rax", "call~FOO", "test~ebp,ebp", "mov~[word ptr [rsp+0],eax", "lea~rcx,[r13+0]", "mov~esi,ebp", "jz~FOO"]], [0, 0, 10, 0, 0, 1, 1, 0, 5, -1, 0.018115942028985508, ["xor     eax, eax"], ["xor~eax,eax"]], [1, 0, 10, 1, 0, 6, 0, 0, 6, -1, 0.016304347826086956, ["mov     edx, eax", "add     eax, 1", "movzx   edi, byte ptr [r12+rdx]", "cmp     eax, esi", "mov     [rcx+rdx], dil", "jb      short loc_11C4A"], ["mov~edx,eax", "add~eax,0", "movzx~edi,<TAG>", "cmp~eax,esi", "mov~<TAG>,dil", "jb~FOO"]]], "func_feature": [18, 17, 35, 3, 25, 37, 1, 196, 0.04029, 4, 13], "succs": [[8, 3], [0, 3], [19, 21], [2], [2], [2], [2], [3, 14], [3, 7], [3], [9, 10], [18, 4], [3, 15], [3, 12], [22], [10], [22], [16, 1], [17, 20], [], [5, 6], [], [13, 23], [24], [24, 13]], "fname": "randread_new", "n_num": 25}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     [s+8], handler", "retn"], ["mov~[s+0],handler", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "randread_set_handler", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     [s+10h], handler_arg", "retn"], ["mov~[s+0],handler_arg", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "randread_set_handler_arg", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 0, 1, 0, 8, 0, 0, 0, 0, 0.0, ["add     rsp, 18h", "pop     rbx", "pop     rbp", "pop     s", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~s", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 1, 1, 1, 7, 0, 2, 3, -1, 0.04044117647058824, ["mov     rsi, [rsp+48h+result]; src", "mov     rdx, rbp; n", "mov     rdi, rbx; dest", "sub     r14, rbp", "call    _memcpy", "mov     [s+18h], r14", "jmp     loc_11E32"], ["mov~rsi,[rsp+0]", "mov~rdx,rbp", "mov~rdi,rbx", "sub~r14,rbp", "call~FOO", "mov~[s+0],r14", "jmp~FOO"]], [1, 0, 3, 2, 1, 8, 0, 2, 2, -1, 0.01838235294117647, ["mov     rdx, rbp; n", "mov     rdi, rbx; ptr", "mov     esi, 1; size", "call    _fread_unlocked", "add     rbx, rax", "sub     rbp, rax", "mov     edx, [r13+0]", "jnz     short loc_11DF8"], ["mov~rdx,rbp", "mov~rdi,rbx", "mov~esi,0", "call~FOO", "add~rbx,rax", "sub~rbp,rax", "mov~edx,[r13+0]", "jnz~FOO"]], [1, 0, 2, 0, 0, 1, 0, 0, 4, -1, 0.058823529411764705, ["mov     r14d, 800h"], ["mov~r14d,0"]], [0, 0, 3, 0, 1, 4, 0, 2, 4, -1, 0.011029411764705881, ["mov     rsi, [rsp+48h+result]; result", "mov     rdi, r13; s", "call    isaac_refill", "jmp     short loc_11F10"], ["mov~rsi,[rsp+0]", "mov~rdi,r13", "call~FOO", "jmp~FOO"]], [2, 0, 12, 0, 1, 6, 0, 2, 3, -1, 0.1213235294117647, ["mov     rsi, [rsp+48h+result]; result", "mov     rdi, r13; s", "mov     r14d, 800h", "call    isaac_refill", "cmp     rbp, 800h", "ja      loc_11E65"], ["mov~rsi,[rsp+0]", "mov~rdi,r13", "mov~r14d,0", "call~FOO", "cmp~rbp,0", "ja~FOO"]], [1, 0, 17, 1, 0, 14, 1, 1, 0, 2, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, s", "push    rbp", "push    rbx", "mov     rbp, size", "mov     rbx, buf", "sub     rsp, 18h", "mov     rcx, [s]", "test    rcx, rcx", "mov     [rsp+48h+result], rcx", "jz      short loc_11E48"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,s", "push~rbp", "push~rbx", "mov~rbp,size", "mov~rbx,buf", "sub~rsp,0", "mov~rcx,<TAG>", "test~rcx,rcx", "mov~[rsp+0],rcx", "jz~FOO"]], [1, 0, 12, 0, 0, 4, 1, 1, 4, -1, 0.08088235294117647, ["lea     r15, [rbp-800h]", "mov     r14, r15", "and     r14d, 7FFh", "jmp     short loc_11EBC"], ["lea~r15,[rbp-800h]+0]", "mov~r14,r15", "and~r14d,0", "jmp~FOO"]], [1, 0, 12, 0, 0, 2, 0, 0, 3, -1, 0.11397058823529412, ["cmp     rbp, 7FFh", "jbe     loc_11F33"], ["cmp~rbp,0", "jbe~FOO"]], [2, 0, 12, 4, 1, 10, 1, 2, 2, -1, 0.1323529411764706, ["mov     esi, 800h", "mov     rdi, rbx; dest", "mov     rdx, r14; n", "sub     rsi, r14", "add     rsi, [rsp+48h+result]; src", "add     rbx, r14", "sub     rbp, r14", "call    _memcpy", "test    bl, 7", "jnz     short loc_11EF0"], ["mov~esi,0", "mov~rdi,rbx", "mov~rdx,r14", "sub~rsi,r14", "add~rsi,[rsp+0]", "add~rbx,r14", "sub~rbp,r14", "call~FOO", "test~bl,0", "jnz~FOO"]], [0, 0, 13, 0, 0, 6, 0, 0, 1, 1, 0.044117647058823525, ["mov     r14, [s+18h]", "lea     rax, [s+838h]", "lea     r13, [s+20h]", "mov     [rsp+48h+result], rax", "cmp     size, r14", "jbe     loc_11F42"], ["mov~r14,[s+0]", "lea~rax,[s+0]", "lea~r13,[s+0]", "mov~[rsp+0],rax", "cmp~size,r14", "jbe~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 6, -1, 0.11764705882352941, ["cmp     r15, r14", "jz      short loc_11EF0"], ["cmp~r15,r14", "jz~FOO"]], [2, 0, 0, 1, 0, 9, 0, 0, 6, -1, 0.0, ["mov     qword ptr [s+18h], 0", "add     rsp, 18h", "pop     rbx", "pop     rbp", "pop     s", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~[word ptr [s+0],0", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~s", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 12, 1, 1, 7, 1, 2, 5, -1, 0.13970588235294118, ["mov     rsi, rbx; result", "mov     rdi, r13; s", "add     rbx, 800h", "call    isaac_refill", "test    r15, r15", "mov     rbp, r15", "jnz     short loc_11EB0"], ["mov~rsi,rbx", "mov~rdi,r13", "add~rbx,0", "call~FOO", "test~r15,r15", "mov~rbp,r15", "jnz~FOO"]], [0, 0, 2, 1, 0, 5, 0, 1, 2, 0, 0.011029411764705881, ["mov     r15, rax", "sub     r15, r14", "lea     rax, [r15+800h]", "mov     [rsp+48h+result], rax", "jmp     short loc_11F16"], ["mov~r15,rax", "sub~r15,r14", "lea~rax,[r15+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 3, 0, 1, 4, 0, 2, 1, -1, 0.011029411764705881, ["call    ___errno_location", "mov     rcx, [rsp+48h+result]", "mov     r13, rax", "jmp     short loc_11E16"], ["call~FOO", "mov~rcx,[rsp+0]", "mov~r13,rax", "jmp~FOO"]], [0, 1, 3, 0, 1, 8, 1, 1, 3, -1, 0.0, ["mov     rax, [s]", "mov     rdi, [s+10h]", "mov     eax, [rax]", "and     eax, 20h", "cmovnz  eax, edx", "mov     [r13+0], eax", "call    qword ptr [s+8]", "mov     rcx, [s]; stream"], ["mov~rax,<TAG>", "mov~rdi,[s+0]", "mov~eax,<TAG>", "and~eax,<STR>", "cmovnz~eax,edx", "mov~[r13+0],eax", "call~[word ptr [s+0]", "mov~rcx,<TAG>"]], [1, 0, 12, 1, 0, 1, 0, 0, 7, -1, 0.007352941176470588, ["sub     r15, 800h"], ["sub~r15,0"]]], "func_feature": [8, 5, 19, 0, 18, 24, 1, 106, 0.05045, 0, 13], "succs": [[], [0], [0, 16], [1], [3], [9, 3], [10, 15], [13], [4, 7], [8, 5], [9, 14], [17, 5], [], [11, 12], [1], [2], [2], [13]], "fname": "randread", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[2, 1, 3, 1, 2, 12, 1, 3, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     rbx, s", "mov     esi, 1038h", "sub     rsp, 8", "mov     rbp, [s]", "call    ___explicit_bzero_chk", "mov     rdi, s; ptr", "call    free", "test    source, source", "jz      short loc_11FA0"], ["push~rbp", "push~rbx", "mov~rdx,0", "mov~rbx,s", "mov~esi,<STR>", "sub~rsp,0", "mov~rbp,<TAG>", "call~FOO", "mov~rdi,s", "call~FOO", "test~source,source", "jz~FOO"]], [1, 0, 0, 1, 0, 5, 1, 0, 0, 0, 0.0, ["add     rsp, 8", "xor     eax, eax", "pop     s", "pop     source", "retn"], ["add~rsp,0", "xor~eax,eax", "pop~s", "pop~source", "retn"]], [1, 0, 1, 1, 0, 5, 0, 1, 0, -1, 0.16666666666666666, ["add     rsp, 8", "mov     rdi, source; fp", "pop     s", "pop     source", "jmp     rpl_fclose"], ["add~rsp,0", "mov~rdi,source", "pop~s", "pop~source", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0.0, [], []]], "func_feature": [2, 2, 4, 0, 4, 3, 1, 22, 0.04167, 0, 3], "succs": [[1, 2], [], [3], []], "fname": "randread_free", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[16, 2, 4, 20, 0, 71, 12, 0, 0, 0, 0.25, ["mov     r8, a", "shl     r8, 15h", "xor     a, r8", "mov     r8, [m]", "not     rdx", "add     rdx, [m+400h]", "mov     r10, x", "and     r10d, 7F8h", "mov     r11, [s+r10]", "mov     r10, a", "shr     r10, 5", "add     r11, a", "xor     a, r10", "add     b, r11", "mov     [m], y", "shr     y, 8", "and     ecx, 7F8h", "mov     r11, [s+rcx]", "add     r11, x", "mov     [r], r11", "add     rdx, [m+408h]", "mov     rcx, [m+8]", "mov     r10, rdx", "mov     a, rcx", "and     edx, 7F8h", "mov     x, [s+rdx]", "mov     rdx, a", "shl     rdx, 0Ch", "xor     rdx, a", "add     r8, a", "add     r8, r11", "mov     [m+8], y", "shr     y, 8", "and     r8d, 7F8h", "add     rcx, [s+r8]", "mov     [r+8], rcx", "mov     r8, [m+10h]", "mov     r11, rcx", "add     rdx, [m+410h]", "mov     rcx, x", "and     ecx, 7F8h", "mov     r10, [s+rcx]", "add     r10, a", "mov     rcx, r10", "add     rcx, r11", "mov     [m+10h], y", "shr     y, 8", "and     ecx, 7F8h", "mov     r10, [s+rcx]", "mov     rcx, a", "shr     rcx, 21h", "xor     a, rcx", "add     r10, x", "mov     [r+10h], r10", "mov     rcx, [m+18h]", "add     rdx, [m+418h]", "mov     x, rcx", "and     r8d, 7F8h", "mov     r11, [s+r8]", "add     r11, a", "mov     r8, r11", "add     r8, r10", "add     m, 20h", "add     r, 20h", "mov     [rax-8], y", "shr     y, 8", "and     r8d, 7F8h", "add     rcx, [s+r8]", "mov     [rsi-8], rcx", "cmp     m, r9", "jb      loc_11FE0"], ["mov~r8,a", "shl~r8,0", "xor~a,r8", "mov~r8,<TAG>", "not~rdx", "add~rdx,[m+0]", "mov~r10,x", "and~r10d,0", "mov~r11,<TAG>", "mov~r10,a", "shr~r10,0", "add~r11,a", "xor~a,r10", "add~b,r11", "mov~<TAG>,y", "shr~y,0", "and~ecx,0", "mov~r11,<TAG>", "add~r11,x", "mov~<TAG>,r11", "add~rdx,[m+0]", "mov~rcx,[m+0]", "mov~r10,rdx", "mov~a,rcx", "and~edx,0", "mov~x,<TAG>", "mov~rdx,a", "shl~rdx,0", "xor~rdx,a", "add~r8,a", "add~r8,r11", "mov~[m+0],y", "shr~y,0", "and~r8d,0", "add~rcx,<TAG>", "mov~[r+0],rcx", "mov~r8,[m+0]", "mov~r11,rcx", "add~rdx,[m+0]", "mov~rcx,x", "and~ecx,0", "mov~r10,<TAG>", "add~r10,a", "mov~rcx,r10", "add~rcx,r11", "mov~[m+0],y", "shr~y,0", "and~ecx,0", "mov~r10,<TAG>", "mov~rcx,a", "shr~rcx,0", "xor~a,rcx", "add~r10,x", "mov~[r+0],r10", "mov~rcx,[m+0]", "add~rdx,[m+0]", "mov~x,rcx", "and~r8d,0", "mov~r11,<TAG>", "add~r11,a", "mov~r8,r11", "add~r8,r10", "add~m,<STR>", "add~r,<STR>", "mov~[rax-8]+0],y", "shr~y,0", "and~r8d,0", "add~rcx,<TAG>", "mov~[rsi-8]+0],rcx", "cmp~m,r9", "jb~FOO"]], [0, 0, 4, 1, 0, 8, 0, 0, 0, 4, 0.0, ["mov     rax, [s+810h]", "mov     rdx, [s+800h]", "lea     r9, [s+400h]", "lea     rcx, [rax+1]", "mov     rax, s", "mov     [s+810h], rcx", "add     rcx, [s+808h]", "nop     word ptr [m+m+00h]"], ["mov~rax,[s+0]", "mov~rdx,[s+0]", "lea~r9,[s+0]", "lea~rcx,[rax+0]", "mov~rax,s", "mov~[s+0],rcx", "add~rcx,[s+0]", "nop~[ord ptr [m+0]"]], [0, 0, 0, 0, 0, 3, 0, 0, 4, 0, 0.0, ["mov     [s+800h], a", "mov     [s+808h], rcx", "retn"], ["mov~[s+0],a", "mov~[s+0],rcx", "retn"]], [16, 2, 2, 20, 0, 71, 12, 0, 3, 1, 0.25, ["mov     r8, a", "shl     r8, 15h", "xor     a, r8", "mov     r8, [m]", "not     rdx", "add     rdx, [m-400h]", "mov     r10, x", "and     r10d, 7F8h", "mov     r11, [s+r10]", "mov     r10, a", "shr     r10, 5", "add     r11, a", "xor     a, r10", "add     b, r11", "mov     [m], y", "shr     y, 8", "and     ecx, 7F8h", "mov     r11, [s+rcx]", "add     r11, x", "mov     [r], r11", "add     rdx, [m-3F8h]", "mov     rcx, [m+8]", "mov     r10, rdx", "mov     a, rcx", "and     edx, 7F8h", "mov     x, [s+rdx]", "mov     rdx, a", "shl     rdx, 0Ch", "xor     rdx, a", "add     r8, a", "add     r8, r11", "mov     [m+8], y", "shr     y, 8", "and     r8d, 7F8h", "add     rcx, [s+r8]", "mov     [r+8], rcx", "mov     r8, [m+10h]", "mov     r11, rcx", "add     rdx, [m-3F0h]", "mov     rcx, x", "and     ecx, 7F8h", "mov     r10, [s+rcx]", "add     r10, a", "mov     rcx, r10", "add     rcx, r11", "mov     [m+10h], y", "shr     y, 8", "and     ecx, 7F8h", "mov     r10, [s+rcx]", "mov     rcx, a", "shr     rcx, 21h", "xor     a, rcx", "add     r10, x", "mov     [r+10h], r10", "mov     rcx, [m+18h]", "add     rdx, [m-3E8h]", "mov     x, rcx", "and     r8d, 7F8h", "mov     r11, [s+r8]", "add     r11, a", "mov     r8, r11", "add     r8, r10", "add     m, 20h", "add     r, 20h", "mov     [rax-8], y", "shr     y, 8", "and     r8d, 7F8h", "add     rcx, [s+r8]", "mov     [rsi-8], rcx", "cmp     m, r9", "jb      loc_12110"], ["mov~r8,a", "shl~r8,0", "xor~a,r8", "mov~r8,<TAG>", "not~rdx", "add~rdx,[m-400h]+0]", "mov~r10,x", "and~r10d,0", "mov~r11,<TAG>", "mov~r10,a", "shr~r10,0", "add~r11,a", "xor~a,r10", "add~b,r11", "mov~<TAG>,y", "shr~y,0", "and~ecx,0", "mov~r11,<TAG>", "add~r11,x", "mov~<TAG>,r11", "add~rdx,[m-3F8h]+0]", "mov~rcx,[m+0]", "mov~r10,rdx", "mov~a,rcx", "and~edx,0", "mov~x,<TAG>", "mov~rdx,a", "shl~rdx,0", "xor~rdx,a", "add~r8,a", "add~r8,r11", "mov~[m+0],y", "shr~y,0", "and~r8d,0", "add~rcx,<TAG>", "mov~[r+0],rcx", "mov~r8,[m+0]", "mov~r11,rcx", "add~rdx,[m-3F0h]+0]", "mov~rcx,x", "and~ecx,0", "mov~r10,<TAG>", "add~r10,a", "mov~rcx,r10", "add~rcx,r11", "mov~[m+0],y", "shr~y,0", "and~ecx,0", "mov~r10,<TAG>", "mov~rcx,a", "shr~rcx,0", "xor~a,rcx", "add~r10,x", "mov~[r+0],r10", "mov~rcx,[m+0]", "add~rdx,[m-3E8h]+0]", "mov~x,rcx", "and~r8d,0", "mov~r11,<TAG>", "add~r11,a", "mov~r8,r11", "add~r8,r10", "add~m,<STR>", "add~r,<STR>", "mov~[rax-8]+0],y", "shr~y,0", "and~r8d,0", "add~rcx,<TAG>", "mov~[rsi-8]+0],rcx", "cmp~m,r9", "jb~FOO"]], [0, 0, 2, 0, 0, 2, 0, 0, 2, 2, 0.3333333333333333, ["lea     r9, [s+800h]", "nop     word ptr [m+m+00000000h]"], ["lea~r9,[s+0]", "nop~[ord ptr [m+0]"]]], "func_feature": [0, 24, 0, 0, 5, 6, 3, 155, 0.16667, 0, 41], "succs": [[0, 4], [0], [], [2, 3], [3]], "fname": "isaac_refill", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[9, 0, 3, 28, 0, 63, 8, 1, 0, 0, 0.3333333333333333, ["add     e, [rax+20h]", "add     h, [rax+38h]", "mov     r13, [rax]", "add     f, [rax+28h]", "add     g, [rax+30h]", "sub     r13, e", "add     r9, r13", "mov     r13, h", "shr     r13, 9", "add     h, a", "xor     f, r13", "mov     r13, [rax+8]", "sub     r13, f", "add     r11, r13", "mov     r13, a", "shl     r13, 9", "add     a, b", "xor     g, r13", "mov     r13, [rax+10h]", "sub     r13, g", "add     rbx, r13", "mov     r13, b", "shr     r13, 17h", "add     b, c", "xor     h, r13", "mov     r13, [rax+18h]", "sub     r13, h", "add     r8, r13", "mov     r13, c", "shl     r13, 0Fh", "add     c, d", "xor     a, r13", "mov     r13, d", "sub     e, a", "shr     r13, 0Eh", "mov     [rax], a", "xor     b, r13", "mov     r13, e", "add     d, e", "sub     f, b", "shl     r13, 14h", "mov     [rax+8], b", "xor     c, r13", "lea     r13, [e+f]", "mov     rsi, f", "sub     g, c", "shr     rsi, 11h", "mov     [rax+10h], c", "xor     d, rsi", "mov     rsi, g", "add     f, g", "sub     h, d", "shl     rsi, 0Eh", "mov     [rax+18h], d", "xor     rsi, e", "add     g, h", "mov     [rax+28h], f", "mov     [rax+20h], e", "mov     [rax+30h], g", "add     rax, 40h", "mov     [rax-8], h", "cmp     r12, rax", "jnz     loc_122A8"], ["add~e,[rax+0]", "add~h,[rax+0]", "mov~r13,<TAG>", "add~f,[rax+0]", "add~g,[rax+0]", "sub~r13,e", "add~r9,r13", "mov~r13,h", "shr~r13,0", "add~h,a", "xor~f,r13", "mov~r13,[rax+0]", "sub~r13,f", "add~r11,r13", "mov~r13,a", "shl~r13,0", "add~a,b", "xor~g,r13", "mov~r13,[rax+0]", "sub~r13,g", "add~rbx,r13", "mov~r13,b", "shr~r13,0", "add~b,c", "xor~h,r13", "mov~r13,[rax+0]", "sub~r13,h", "add~r8,r13", "mov~r13,c", "shl~r13,0", "add~c,d", "xor~a,r13", "mov~r13,d", "sub~e,a", "shr~r13,0", "mov~<TAG>,a", "xor~b,r13", "mov~r13,e", "add~d,e", "sub~f,b", "shl~r13,0", "mov~[rax+0],b", "xor~c,r13", "lea~r13,<TAG>", "mov~rsi,f", "sub~g,c", "shr~rsi,0", "mov~[rax+0],c", "xor~d,rsi", "mov~rsi,g", "add~f,g", "sub~h,d", "shl~rsi,0", "mov~[rax+0],d", "xor~rsi,e", "add~g,h", "mov~[rax+0],f", "mov~[rax+0],e", "mov~[rax+0],g", "add~rax,0", "mov~[rax-8]+0],h", "cmp~r12,rax", "jnz~FOO"]], [8, 0, 3, 0, 0, 16, 0, 0, 0, 3, 0.0, ["push    r13", "push    r12", "lea     r12, [s+800h]", "push    rbp", "mov     rdx, s", "push    rbx", "mov     rax, s", "mov     rcx, 98F5704F6C44C0ABh", "mov     r10, 0AE985BF2CBFC89EDh", "mov     rbp, 48FE4A0FA5A09315h", "mov     rsi, 82F053DB8355E0CEh", "mov     r8, 0B29B2E824A595524h", "mov     rbx, 8C0EA5053D4712A0h", "mov     r11, 0B9F8B322C73AC862h", "mov     r9, 647C4677A2884B7Ch", "nop     dword ptr [rax+rax+00h]"], ["push~r13", "push~r12", "lea~r12,[s+0]", "push~rbp", "mov~rdx,s", "push~rbx", "mov~rax,s", "mov~rcx,0", "mov~r10,0", "mov~rbp,0", "mov~rsi,0", "mov~r8,0", "mov~rbx,0", "mov~r11,0", "mov~r9,0", "nop~[word ptr [rax+0]"]], [9, 0, 2, 28, 0, 63, 8, 1, 2, 1, 0.3333333333333333, ["add     e, [rdx+20h]", "add     h, [rdx+38h]", "mov     r12, [rdx]", "add     f, [rdx+28h]", "add     g, [rdx+30h]", "sub     r12, e", "add     r9, r12", "mov     r12, h", "shr     r12, 9", "add     h, a", "xor     f, r12", "mov     r12, [rdx+8]", "sub     r12, f", "add     r11, r12", "mov     r12, a", "shl     r12, 9", "add     a, b", "xor     g, r12", "mov     r12, [rdx+10h]", "sub     r12, g", "add     rbx, r12", "mov     r12, b", "shr     r12, 17h", "add     b, c", "xor     h, r12", "mov     r12, [rdx+18h]", "sub     r12, h", "add     r8, r12", "mov     r12, c", "shl     r12, 0Fh", "add     c, d", "xor     a, r12", "mov     r12, d", "sub     e, a", "shr     r12, 0Eh", "mov     [rdx], a", "xor     b, r12", "mov     r12, e", "add     d, e", "sub     f, b", "shl     r12, 14h", "mov     [rdx+8], b", "xor     c, r12", "lea     r12, [e+f]", "mov     rsi, f", "sub     g, c", "shr     rsi, 11h", "mov     [rdx+10h], c", "xor     d, rsi", "mov     rsi, g", "add     f, g", "sub     h, d", "shl     rsi, 0Eh", "mov     [rdx+18h], d", "xor     rsi, e", "add     g, h", "mov     [rdx+28h], f", "mov     [rdx+20h], e", "mov     [rdx+30h], g", "add     rdx, 40h", "mov     [rdx-8], h", "cmp     rax, rdx", "jnz     loc_12380"], ["add~e,[rdx+0]", "add~h,[rdx+0]", "mov~r12,<TAG>", "add~f,[rdx+0]", "add~g,[rdx+0]", "sub~r12,e", "add~r9,r12", "mov~r12,h", "shr~r12,0", "add~h,a", "xor~f,r12", "mov~r12,[rdx+0]", "sub~r12,f", "add~r11,r12", "mov~r12,a", "shl~r12,0", "add~a,b", "xor~g,r12", "mov~r12,[rdx+0]", "sub~r12,g", "add~rbx,r12", "mov~r12,b", "shr~r12,0", "add~b,c", "xor~h,r12", "mov~r12,[rdx+0]", "sub~r12,h", "add~r8,r12", "mov~r12,c", "shl~r12,0", "add~c,d", "xor~a,r12", "mov~r12,d", "sub~e,a", "shr~r12,0", "mov~<TAG>,a", "xor~b,r12", "mov~r12,e", "add~d,e", "sub~f,b", "shl~r12,0", "mov~[rdx+0],b", "xor~c,r12", "lea~r12,<TAG>", "mov~rsi,f", "sub~g,c", "shr~rsi,0", "mov~[rdx+0],c", "xor~d,rsi", "mov~rsi,g", "add~f,g", "sub~h,d", "shl~rsi,0", "mov~[rdx+0],d", "xor~rsi,e", "add~g,h", "mov~[rdx+0],f", "mov~[rdx+0],e", "mov~[rdx+0],g", "add~rdx,0", "mov~[rdx-8]+0],h", "cmp~rax,rdx", "jnz~FOO"]], [3, 0, 0, 0, 0, 8, 0, 0, 3, 0, 0.0, ["pop     c", "mov     qword ptr [s+810h], 0", "mov     qword ptr [s+808h], 0", "pop     f", "mov     qword ptr [s+800h], 0", "pop     r12", "pop     r13", "retn"], ["pop~c", "mov~[word ptr [s+0],0", "mov~[word ptr [s+0],0", "pop~f", "mov~[word ptr [s+0],0", "pop~r12", "pop~r13", "retn"]]], "func_feature": [0, 16, 2, 0, 4, 5, 1, 150, 0.16667, 0, 56], "succs": [[0, 2], [0], [2, 3], []], "fname": "isaac_seed", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[1, 0, 1, 0, 0, 4, 2, 1, 0, 0, 0.0, ["mov     edx, 3", "xor     esi, esi; action", "xor     eax, eax", "jmp     rpl_fcntl"], ["mov~edx,0", "xor~esi,esi", "xor~eax,eax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 2, 1, 0, 2, 1, 2, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "dup_safer", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 9, 0, 1, 8, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, fp", "call    _fileno", "test    eax, eax", "mov     rdi, fp; fp", "js      short loc_124F7"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,fp", "call~FOO", "test~eax,eax", "mov~rdi,fp", "js~FOO"]], [1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     [rbp+0], r12d", "mov     eax, 0FFFFFFFFh", "jmp     short loc_124D0"], ["mov~[rbp+0],r12d", "mov~eax,0", "jmp~FOO"]], [0, 0, 2, 0, 2, 7, 1, 3, 0, 1, 0.1111111111111111, ["call    ___errno_location", "mov     r12d, [rax]", "mov     rdi, fp; stream", "mov     rbp, rax", "call    _fclose", "test    r12d, r12d", "jnz     short loc_12500"], ["call~FOO", "mov~r12d,<TAG>", "mov~rdi,fp", "mov~rbp,rax", "call~FOO", "test~r12d,r12d", "jnz~FOO"]], [0, 0, 8, 0, 1, 3, 1, 2, 0, 3, 0.08333333333333333, ["call    ___freading", "test    eax, eax", "jnz     short loc_124D8"], ["call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 0, -1, 0.06944444444444445, ["pop     fp", "pop     rbp", "pop     r12", "jmp     _fclose"], ["pop~fp", "pop~rbp", "pop~r12", "jmp~FOO"]], [0, 0, 6, 0, 1, 4, 1, 2, 0, 2, 0.15277777777777776, ["mov     rdi, fp; stream", "call    rpl_fflush", "test    eax, eax", "jz      short loc_124F4"], ["mov~rdi,fp", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 7, 0, 2, 8, 1, 3, 0, 3, 0.027777777777777776, ["mov     rdi, fp; stream", "call    _fileno", "xor     esi, esi; offset", "mov     edx, 1; whence", "mov     edi, eax; fd", "call    _lseek", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_124AC"], ["mov~rdi,fp", "call~FOO", "xor~esi,esi", "mov~edx,0", "mov~edi,eax", "call~FOO", "cmp~rax,0", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 0, -1, 0.0, ["pop     fp", "pop     rbp", "pop     saved_errno", "retn"], ["pop~fp", "pop~rbp", "pop~saved_errno", "retn"]], [0, 0, 2, 0, 0, 1, 0, 0, 0, -1, 0.08333333333333333, ["mov     rdi, fp; stream"], ["mov~rdi,fp"]]], "func_feature": [7, 5, 14, 0, 10, 13, 4, 42, 0.05278, 0, 0], "succs": [[3, 5], [8], [8, 1], [6, 7], [], [4], [9, 2], [9, 6], [], [5]], "fname": "rpl_fclose", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.043434343434343436, ["mov     rcx, [rsp+68h+var_50]", "xor     rcx, fs:28h", "mov     eax, ebx", "jnz     loc_1275D"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, -1, 0.0022727272727272726, ["mov     cs:have_dupfd_cloexec_3326, 1", "jmp     short loc_125F0"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 3, 0, 1, 6, 1, 2, 10, -1, 0.006060606060606061, ["mov     rdx, [rax]", "mov     edi, ebp; fd", "xor     eax, eax", "call    _fcntl", "mov     ebx, eax", "jmp     short loc_125F0"], ["mov~rdx,<TAG>", "mov~edi,ebp", "xor~eax,eax", "call~FOO", "mov~ebx,eax", "jmp~FOO"]], [0, 0, 3, 0, 1, 6, 1, 2, 7, -1, 0.010707070707070707, ["mov     edx, [rax]", "mov     edi, ebp; fd", "xor     eax, eax", "call    _fcntl", "mov     ebx, eax", "jmp     loc_125F0"], ["mov~edx,<TAG>", "mov~edi,ebp", "xor~eax,eax", "call~FOO", "mov~ebx,eax", "jmp~FOO"]], [0, 0, 7, 0, 1, 6, 3, 2, 3, -1, 0.008333333333333333, ["xor     esi, esi; cmd", "xor     eax, eax", "call    _fcntl", "test    eax, eax", "mov     ebx, eax", "js      loc_125F0"], ["xor~esi,esi", "xor~eax,eax", "call~FOO", "test~eax,eax", "mov~ebx,eax", "js~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 4, -1, 0.006060606060606061, ["cmp     cs:have_dupfd_cloexec_3326, 0FFFFFFFFh", "jnz     loc_125F0"], ["cmp~<TAG>,0", "jnz~FOO"]], [3, 0, 4, 0, 1, 8, 2, 2, 6, -1, 0.0015151515151515152, ["or      eax, 1", "mov     esi, 2; cmd", "mov     edi, ebx; fd", "mov     edx, eax", "xor     eax, eax", "call    _fcntl", "cmp     eax, 0FFFFFFFFh", "jnz     loc_125F0"], ["or~eax,0", "mov~esi,0", "mov~edi,ebx", "mov~edx,eax", "xor~eax,eax", "call~FOO", "cmp~eax,0", "jnz~FOO"]], [1, 0, 3, 0, 2, 8, 0, 3, 6, -1, 0.0015151515151515152, ["call    ___errno_location", "mov     r12d, [rax]", "mov     fd, rax", "mov     edi, ebx; fd", "call    _close", "mov     ebx, 0FFFFFFFFh", "mov     [rbp+0], r12d", "jmp     loc_125F0"], ["call~FOO", "mov~r12d,<TAG>", "mov~fd,rax", "mov~edi,ebx", "call~FOO", "mov~ebx,0", "mov~[rbp+0],r12d", "jmp~FOO"]], [0, 0, 7, 0, 1, 8, 3, 2, 5, -1, 0.006313131313131313, ["xor     esi, esi; cmd", "xor     eax, eax", "mov     edx, r12d", "mov     edi, ebp; fd", "call    _fcntl", "test    eax, eax", "mov     ebx, eax", "js      loc_125F0"], ["xor~esi,esi", "xor~eax,eax", "mov~edx,r12d", "mov~edi,ebp", "call~FOO", "test~eax,eax", "mov~ebx,eax", "js~FOO"]], [0, 0, 3, 0, 1, 7, 2, 2, 1, -1, 0.0015151515151515152, ["mov     rax, [rsp+68h+arg.reg_save_area]", "xor     esi, esi; cmd", "mov     edx, [rax+10h]", "xor     eax, eax", "call    _fcntl", "mov     ebx, eax", "jmp     loc_125F0"], ["mov~rax,[rsp+0]", "xor~esi,esi", "mov~edx,[rax+0]", "xor~eax,eax", "call~FOO", "mov~ebx,eax", "jmp~FOO"]], [0, 0, 3, 0, 1, 5, 1, 1, 3, -1, 0.023383838383838382, ["mov     edi, ebp; fd", "xor     eax, eax", "call    _fcntl", "mov     ebx, eax", "nop     dword ptr [rax+rax+00h]"], ["mov~edi,ebp", "xor~eax,eax", "call~FOO", "mov~ebx,eax", "nop~[word ptr [rax+0]"]], [2, 0, 13, 0, 0, 6, 0, 1, 2, -1, 0.010858585858585859, ["mov     rax, [rsp+68h+arg.reg_save_area]", "cmp     cs:have_dupfd_cloexec_3326, 0", "mov     [rsp+68h+arg.gp_offset], 18h", "mov     r12d, [rax+10h]", "mov     edx, r12d", "js      loc_126B3"], ["mov~rax,[rsp+0]", "cmp~<TAG>,0", "mov~<TAG>,0", "mov~r12d,[rax+0]", "mov~edx,r12d", "js~FOO"]], [1, 0, 43, 0, 0, 2, 0, 1, 1, 5, 0.0202020202020202, ["cmp     esi, 406h", "jnz     short loc_125B0"], ["cmp~esi,0", "jnz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 5, 1, 0.030404040404040406, ["mov     eax, [rsp+68h+arg.gp_offset]", "cmp     eax, 2Fh ; '/'", "ja      loc_12784"], ["mov~eax,<TAG>", "cmp~eax,0", "ja~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 4, 2, 0.02531986531986532, ["cmp     esi, 4", "jz      loc_12690"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 6, 2, 0.013131313131313131, ["cmp     esi, 2", "jz      loc_12690"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 5, 2, 0.010067340067340067, ["cmp     esi, 406h", "jge     short loc_12690"], ["cmp~esi,0", "jge~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 7, 2, 0.009595959595959595, ["cmp     esi, 402h", "jz      short loc_12690"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 8, 2, 0.006060606060606061, ["cmp     esi, 400h", "jz      short loc_12690"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 5, 2, 0.02016835016835017, ["cmp     esi, 409h", "jz      short loc_12690"], ["cmp~esi,0", "jz~FOO"]], [0, 0, 12, 0, 0, 1, 0, 1, 7, 2, 0.009595959595959595, ["jg      short loc_12690"], ["jg~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 8, 2, 0.006060606060606061, ["cmp     esi, 8", "jnz     short loc_12638"], ["cmp~esi,0", "jnz~FOO"]], [1, 0, 5, 0, 1, 6, 2, 2, 5, -1, 0.010606060606060607, ["xor     eax, eax", "mov     esi, 1; cmd", "mov     edi, ebx; fd", "call    _fcntl", "test    eax, eax", "js      short loc_12701"], ["xor~eax,eax", "mov~esi,0", "mov~edi,ebx", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 6, 3, 0.011582491582491583, ["cmp     esi, 9", "jz      loc_125E0"], ["cmp~esi,0", "jz~FOO"]], [0, 1, 0, 1, 0, 5, 0, 0, 3, -1, 0.0, ["add     rsp, 50h", "pop     rbx", "pop     rbp", "pop     r12", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "retn"]], [0, 0, 19, 0, 0, 1, 0, 1, 5, 3, 0.021178451178451182, ["jg      loc_12680"], ["jg~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 6, 0, 0.008131313131313132, ["mov     rax, [rsp+68h+arg.overflow_arg_area]", "jmp     loc_126A1"], ["mov~rax,[rsp+0]", "jmp~FOO"]], [0, 0, 4, 1, 0, 1, 0, 0, 6, -1, 0.008131313131313132, ["add     rax, [rsp+68h+arg.reg_save_area]"], ["add~rax,[rsp+0]"]], [1, 0, 20, 0, 0, 2, 0, 1, 4, 3, 0.025185185185185185, ["cmp     esi, 407h", "jg      short loc_12660"], ["cmp~esi,0", "jg~FOO"]], [0, 0, 30, 0, 0, 1, 0, 1, 3, 3, 0.03939393939393939, ["jg      short loc_12610"], ["jg~FOO"]], [1, 0, 10, 0, 1, 6, 2, 2, 3, -1, 0.006060606060606061, ["xor     eax, eax", "mov     esi, 406h; cmd", "call    _fcntl", "test    eax, eax", "mov     ebx, eax", "js      loc_12728"], ["xor~eax,eax", "mov~esi,0", "call~FOO", "test~eax,eax", "mov~ebx,eax", "js~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 6, 3, 0.011582491582491583, ["cmp     esi, 401h", "jz      short loc_125E0"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 9, 0, 1, 3, 0, 2, 4, -1, 0.005555555555555556, ["call    ___errno_location", "cmp     dword ptr [rax], 16h", "jnz     loc_1259F"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 31, 0, 0, 2, 0, 1, 2, 4, 0.02904040404040404, ["cmp     esi, 0Bh", "jz      short loc_125E0"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 8, -1, 0.031818181818181815, ["mov     eax, [rsp+68h+arg.gp_offset]", "cmp     eax, 2Fh ; '/'", "ja      loc_1277A"], ["mov~eax,<TAG>", "cmp~eax,0", "ja~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 8, -1, 0.0101010101010101, ["cmp     esi, 1", "jnz     short loc_12638"], ["cmp~esi,0", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 7, -1, 0.017676767676767676, ["cmp     esi, 40Ah", "jnz     short loc_12638"], ["cmp~esi,0", "jnz~FOO"]], [0, 0, 4, 1, 0, 1, 0, 0, 9, -1, 0.006818181818181818, ["add     rax, [rsp+68h+arg.reg_save_area]"], ["add~rax,[rsp+0]"]], [0, 0, 10, 0, 0, 1, 0, 1, 7, -1, 0.013131313131313131, ["jg      short loc_125E0"], ["jg~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 9, -1, 0.00202020202020202, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 4, 0, 0, 2, 0, 1, 9, -1, 0.006818181818181818, ["mov     rax, [rsp+68h+arg.overflow_arg_area]", "jmp     loc_12649"], ["mov~rax,[rsp+0]", "jmp~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 6, -1, 0.004545454545454545, ["mov     cs:have_dupfd_cloexec_3326, 0FFFFFFFFh", "jmp     loc_126D3"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 1, 45, 1, 0, 19, 2, 1, 0, 6, 0.0, ["push    r12", "push    rbp", "mov     ebp, edi", "push    rbx", "sub     rsp, 50h", "mov     rax, fs:28h", "mov     [rsp+68h+var_50], rax", "xor     eax, eax", "lea     rax, [rsp+68h+arg_0]", "test    esi, esi", "mov     [rsp+68h+var_38], rdx", "mov     [rsp+68h+var_30], rcx", "mov     [rsp+68h+var_28], r8", "mov     [rsp+68h+arg.overflow_arg_area], rax", "lea     rax, [rsp+68h+var_48]", "mov     [rsp+68h+var_20], r9", "mov     [rsp+68h+arg.gp_offset], 10h", "mov     [rsp+68h+arg.reg_save_area], rax", "jz      loc_12762"], ["push~r12", "push~rbp", "mov~ebp,edi", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "test~esi,esi", "mov~[rsp+0],rdx", "mov~[rsp+0],rcx", "mov~[rsp+0],r8", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],r9", "mov~<TAG>,0", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 10, 0, 0, 1, 0, 1, 6, -1, 0.021683501683501687, ["jl      loc_125E0"], ["jl~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 8, -1, 0.00202020202020202, ["jmp     loc_125E0"], ["jmp~FOO"]]], "func_feature": [13, 20, 53, 6, 46, 75, 2, 157, 0.0123, 2, 4], "succs": [[24, 43], [0], [0], [0], [0, 5], [0, 22], [0, 7], [0], [0, 41], [0], [0], [4, 30], [33, 11], [26, 27], [25, 13], [13, 38], [13, 31], [18, 13], [34, 13], [44, 13], [13, 21], [34, 13], [6, 7], [10, 20], [], [15, 23], [3], [3], [16, 19], [28, 14], [32, 1], [17, 10], [8, 1], [10, 29], [40, 37], [34, 39], [34, 45], [2], [10, 35], [10], [2], [22], [9, 12], [], [10, 36], [10]], "fname": "rpl_fcntl", "n_num": 46}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 1, 0, 2, 8, 1, 3, 0, 0, 0.023809523809523808, ["call    ___errno_location", "mov     r12d, [rax]", "mov     mode, rax", "mov     rdi, fp; fp", "call    rpl_fclose", "xor     ebx, ebx", "mov     [rbp+0], r12d", "jmp     short loc_127B1"], ["call~FOO", "mov~r12d,<TAG>", "mov~mode,rax", "mov~rdi,fp", "call~FOO", "xor~ebx,ebx", "mov~[rbp+0],r12d", "jmp~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 2, 0, 0.19047619047619047, ["mov     edi, eax; fd", "call    dup_safer", "test    eax, eax", "mov     r12d, eax", "js      short loc_12808"], ["mov~edi,eax", "call~FOO", "test~eax,eax", "mov~r12d,eax", "js~FOO"]], [0, 0, 7, 0, 1, 8, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "mov     rbp, mode", "push    rbx", "call    _fopen", "test    rax, rax", "mov     rbx, rax", "jz      short loc_127B1"], ["push~r12", "push~rbp", "mov~rbp,mode", "push~rbx", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 1, 0, 2, 8, 1, 3, 4, 0, 0.011904761904761904, ["call    ___errno_location", "mov     ebp, [rax]", "mov     fp, rax", "mov     edi, r12d; fd", "call    _close", "mov     [rbx], ebp", "xor     ebx, ebx", "jmp     short loc_127B1"], ["call~FOO", "mov~ebp,<TAG>", "mov~fp,rax", "mov~edi,r12d", "call~FOO", "mov~<TAG>,ebp", "xor~ebx,ebx", "jmp~FOO"]], [0, 0, 3, 0, 1, 4, 1, 2, 3, 0, 0.14285714285714285, ["mov     rdi, fp; fp", "call    rpl_fclose", "test    eax, eax", "jnz     short loc_127ED"], ["mov~rdi,fp", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 2, 0, 1, 6, 1, 2, 4, 0, 0.011904761904761904, ["mov     rsi, mode; modes", "mov     edi, r12d; fd", "call    _fdopen", "test    rax, rax", "mov     fp, rax", "jnz     short loc_127B1"], ["mov~rsi,mode", "mov~edi,r12d", "call~FOO", "test~rax,rax", "mov~fp,rax", "jnz~FOO"]], [1, 0, 6, 0, 1, 4, 0, 1, 1, 0, 0.11904761904761904, ["mov     rdi, fp; stream", "call    _fileno", "cmp     eax, 2", "jbe     short loc_127C0"], ["mov~rdi,fp", "call~FOO", "cmp~eax,0", "jbe~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 1, 0, 0.0, ["mov     rax, rbx", "pop     rbx", "pop     rbp", "pop     r12", "retn"], ["mov~rax,rbx", "pop~rbx", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [9, 6, 15, 0, 8, 12, 1, 48, 0.0625, 0, 0], "succs": [[7], [0, 4], [6, 7], [7], [3, 5], [3, 7], [1, 7], []], "fname": "fopen_safer", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 0, 0, 0, 0.16666666666666666, ["xor     ebx, ebx", "nop     dword ptr [rax+rax+00000000h]"], ["xor~ebx,ebx", "nop~[word ptr [rax+0]"]], [2, 0, 3, 2, 1, 17, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15, rdx", "push    r13", "push    r12", "lea     r12, __frame_dummy_init_array_entry", "push    rbp", "lea     rbp, __do_global_dtors_aux_fini_array_entry", "push    rbx", "mov     r13d, edi", "mov     r14, rsi", "sub     rbp, r12", "sub     rsp, 8", "sar     rbp, 3", "call    _init_proc", "test    rbp, rbp", "jz      short loc_12886"], ["push~r15", "push~r14", "mov~r15,rdx", "push~r13", "push~r12", "lea~r12,<TAG>", "push~rbp", "lea~rbp,<TAG>", "push~rbx", "mov~r13d,edi", "mov~r14,rsi", "sub~rbp,r12", "sub~rsp,0", "sar~rbp,0", "call~FOO", "test~rbp,rbp", "jz~FOO"]], [1, 0, 2, 1, 1, 7, 0, 2, 2, 1, 0.16666666666666666, ["mov     rdx, r15", "mov     rsi, r14", "mov     edi, r13d", "call    qword ptr [r12+rbx*8]", "add     rbx, 1", "cmp     rbp, rbx", "jnz     short loc_12870"], ["mov~rdx,r15", "mov~rsi,r14", "mov~edi,r13d", "call~<TAG>", "add~rbx,0", "cmp~rbp,rbx", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 5, 0, 34, 0.08333, 2, 4], "succs": [[2], [0, 3], [2, 3], []], "fname": "__libc_csu_init", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_csu_fini", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rdx, cs:__dso_handle", "xor     esi, esi", "jmp     ___cxa_atexit"], ["mov~rdx,<TAG>", "xor~esi,esi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 1, 3, 0.0, 1, 0], "succs": [[1], []], "fname": "atexit", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[2, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0.0, ["sub     rsp, 8; _fini", "add     rsp, 8", "retn"], ["sub~rsp,0", "add~rsp,0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 2], "succs": [[]], "fname": "term_proc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getenv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp_free:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp_free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn utimensat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "utimensat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn abort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __errno_location:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn unlink:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "unlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strncmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fpending:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __read_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__read_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mkdir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mkdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn unlinkat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "unlinkat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn qsort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "qsort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn readlink:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "readlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fcntl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn clock_gettime:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "clock_gettime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn write:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "write", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getpid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getpid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fread_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fread_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn textdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn pathconf:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "pathconf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fclose:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn opendir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "opendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn bindtextdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn stpcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "stpcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn rmdir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "rmdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dcgettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_get_mb_cur_max:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strlen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __lxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__lxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn openat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "openat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __stack_chk_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getuid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getopt_long:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbrtowc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstatat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstatat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __overflow:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__overflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strrchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ftruncate:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ftruncate", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn lseek:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn gettimeofday:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "gettimeofday", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __assert_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn geteuid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "geteuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ioctl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn canonicalize_file_name:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "canonicalize_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn close:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn rewinddir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "rewinddir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strspn:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strspn", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn closedir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "closedir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn posix_fadvise:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "posix_fadvise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn read:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "read", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __libc_start_main:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_start_main", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fallocate:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fallocate", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fputs_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn utimes:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "utimes", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn calloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __getdelim:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__getdelim", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dirfd:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dirfd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fpathconf:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fpathconf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn rpmatch:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "rpmatch", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn syscall:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "syscall", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mkfifo:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mkfifo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn umask:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "umask", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __xmknod:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__xmknod", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fileno:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getgid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getgid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __xstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__xstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn readdir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "readdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn malloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fflush:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn nl_langinfo:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn lchown:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "lchown", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __freading:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn realloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fdopen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fdopen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn linkat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "linkat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn setlocale:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __printf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fchmod:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fchmod", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn setvbuf:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "setvbuf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn chmod:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "chmod", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mempcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mempcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn error:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __explicit_bzero_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__explicit_bzero_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn open:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fseeko:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fchown:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fchown", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fopen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fopen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn rename:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "rename", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fdopendir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fdopendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn futimens:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "futimens", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn euidaccess:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "euidaccess", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __cxa_atexit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn renameat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "renameat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getpagesize:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getpagesize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getppid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getppid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fwrite:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbsinit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn symlinkat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "symlinkat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswprint:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp___cxa_finalize:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp___cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn futimesat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "futimesat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_b_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O2_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __gmon_start__:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__gmon_start__", "n_num": 1}
