{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    rax ; __gmon_start__"], ["call~rax"]], [1, 0, 2, 1, 0, 4, 1, 1, 0, 1, 0.0, ["sub     rsp, 8; _init", "mov     rax, cs:__gmon_start___ptr", "test    rax, rax", "jz      short loc_17A2"], ["sub~rsp,0", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 3, 1, 7, 0.0, 1, 2], "succs": [[2], [0, 2], []], "fname": "init_proc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0.0, ["push    cs:qword_20DDC0", "jmp     cs:qword_20DDC8"], ["push~<TAG>", "jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 62, 2, 0.0, 2, 0], "succs": [[]], "fname": "sub_17B0", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:endgrent_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "endgrent", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__snprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "__snprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:abort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 15, 1, 0.0, 1, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__errno_location_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 42, 1, 0.0, 1, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "strcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fpending_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:qsort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "qsort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fcntl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:textdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fclose_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:opendir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "opendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpwuid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpwuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:bindtextdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:stpcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "stpcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dcgettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 48, 1, 0.0, 1, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_get_mb_cur_max_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strlen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 15, 1, 0.0, 1, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__lxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__lxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:openat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "openat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__stack_chk_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 19, 1, 0.0, 1, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getopt_long_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbrtowc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getgrgid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "getgrgid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstatat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstatat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strrchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__assert_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:close_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 18, 1, 0.0, 1, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__openat_2_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 7, 1, 0.0, 1, 0], "succs": [[]], "fname": "__openat_2", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:closedir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "closedir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fputs_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 10, 1, 0.0, 1, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:calloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dirfd_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "dirfd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpwnam_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpwnam", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 12, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getgrnam_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getgrnam", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__xstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__xstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:readdir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "readdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:malloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 19, 1, 0.0, 1, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:endpwent_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "endpwent", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fchdir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 7, 1, 0.0, 1, 0], "succs": [[]], "fname": "fchdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:realloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 14, 1, 0.0, 1, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:setlocale_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__printf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memmove_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:error_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 20, 1, 0.0, 1, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:open_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fchown_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fchown", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fdopendir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fdopendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strtoul_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strtoul", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_atexit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fchownat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fchownat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fwrite_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 8, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbsinit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswprint_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_b_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:data_freer"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 63, 1, 0.0, 1, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_finalize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[1, 0, 62, 0, 0, 2, 0, 1, 0, 0, 0.04666842940243258, ["cmp     eax, 76h ; 'v'", "jz      loc_1DE5"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 62, 0, 0, 1, 0, 1, 5, 7, 0.09413008989952407, ["jg      short loc_1D40"], ["jg~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 3, -1, 0.09214701216287678, ["mov     r13d, 10h", "jmp     loc_1E7F"], ["mov~r13d,0", "jmp~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 2, 3, 0.22236911686938127, ["cmp     [rsp+158h+chopt.recurse], 0", "jz      loc_1F7B"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 9, -1, 0.02749867794817557, ["test    r15b, r15b", "jnz     loc_1FBC"], ["test~r15b,r15b", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 8, -1, 0.053939714436805924, ["cmp     [rsp+158h+chopt.recurse], 0", "jz      short loc_1F08"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 8, 5, 0.015071390798519302, ["mov     r14d, 1", "jmp     loc_1C84"], ["mov~r14d,0", "jmp~FOO"]], [0, 1, 62, 0, 0, 2, 0, 1, 7, 6, 0.024986779481755685, ["cmp     eax, 80h", "jz      short loc_1D7F"], ["cmp~eax,<STR>", "jz~FOO"]], [2, 0, 21, 0, 2, 11, 4, 3, 5, 0, 0.002776308831306187, ["lea     rsi, aRDereferenceRe; \"-R --dereference requires either -H or \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "xor     r14d, r14d", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_1E7F"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "xor~r14d,r14d", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 23, 1, 0, 2, 0, 1, 4, 1, 0.01850872554204125, ["sub     r14d, 1", "jz      short loc_20E0"], ["sub~r14d,0", "jz~FOO"]], [1, 0, 24, 0, 0, 2, 0, 1, 3, 2, 0.11911686938127974, ["cmp     r13d, 10h", "jz      loc_20BC"], ["cmp~r13d,0", "jz~FOO"]], [0, 0, 62, 0, 0, 2, 1, 1, 8, 5, 0.015071390798519302, ["xor     r15d, r15d", "jmp     loc_1C84"], ["xor~r15d,r15d", "jmp~FOO"]], [0, 0, 62, 0, 0, 1, 0, 1, 7, 6, 0.024986779481755685, ["jl      short loc_1D8A"], ["jl~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 8, 6, 0.009122157588577472, ["cmp     eax, 68h ; 'h'", "jnz     short loc_1CDD"], ["cmp~eax,0", "jnz~FOO"]], [2, 0, 0, 1, 3, 16, 1, 3, 9, -1, 0.0, ["movsxd  rax, cs:optind@@GLIBC_2_2_5", "sub     rsp, 8", "mov     esi, r13d; bit_flags", "push    r12; chopt", "mov     r9d, [rsp+168h+required_gid]; required_gid", "mov     r8d, [rsp+168h+required_uid]; required_uid", "mov     ecx, [rsp+168h+gid]; gid", "mov     edx, [rsp+168h+uid]; uid", "lea     rdi, [argv+rax*8]; files", "call    chown_files", "mov     ebx, eax", "mov     rdi, r12; chopt", "xor     ebx, 1", "call    chopt_free", "movzx   edi, bl; status", "call    _exit"], ["movsxd~rax,<TAG>", "sub~rsp,0", "mov~esi,r13d", "push~r12", "mov~r9d,[rsp+0]", "mov~r8d,[rsp+0]", "mov~ecx,[rsp+0]", "mov~edx,[rsp+0]", "lea~rdi,<TAG>", "call~FOO", "mov~ebx,eax", "mov~rdi,r12", "xor~ebx,0", "call~FOO", "movzx~edi,bl", "call~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 10, -1, 0.014013749338974087, ["lea     rdi, dev_ino_buf_6419; root_d_i", "call    get_root_dev_ino", "test    rax, rax", "mov     [rsp+158h+chopt.root_dev_ino], rax", "jnz     loc_1F08"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~[rsp+0],rax", "jnz~FOO"]], [2, 0, 1, 0, 4, 16, 2, 5, 11, -1, 0.0, ["lea     rdi, filename; \"/\"", "call    quote", "lea     rsi, aFailedToGetAtt; \"failed to get attributes of %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r14, rax", "call    _dcgettext", "mov     rbp, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r14", "mov     rdx, rbp; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_1F08"], ["lea~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r14,rax", "call~FOO", "mov~rbp,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r14", "mov~rdx,rbp", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 62, 0, 0, 2, 1, 1, 9, 5, 0.01560021152829191, ["xor     r14d, r14d", "jmp     loc_1C84"], ["xor~r14d,r14d", "jmp~FOO"]], [0, 0, 62, 0, 1, 9, 1, 2, 5, 5, 0.023929138022210472, ["mov     r8, [rsp+158h+groupname]; groupname", "mov     rcx, [rsp+158h+username]; username", "mov     rdx, [rsp+158h+var_140]; gid", "mov     rsi, [rsp+158h+var_138]; uid", "mov     rdi, cs:optarg@@GLIBC_2_2_5; spec", "call    parse_user_spec", "test    e_0, e_0", "mov     [rsp+158h+e], e_0", "jz      loc_1C84"], ["mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,<TAG>", "call~FOO", "test~e_0,e_0", "mov~[rsp+0],e_0", "jz~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 4, 6, 0.11885245901639344, ["cmp     eax, 81h", "jz      loc_1DF2"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 62, 0, 1, 8, 1, 2, 1, 4, 0.4629825489159175, ["lea     rcx, long_options; longopts", "lea     rdx, shortopts; \"HLPRcfhv\"", "xor     r8d, r8d; longind", "mov     rsi, argv; argv", "mov     edi, ebp; argc", "call    _getopt_long", "cmp     eax, 0FFFFFFFFh", "jz      loc_1E6A"], ["lea~rcx,<TAG>", "lea~rdx,<TAG>", "xor~r8d,r8d", "mov~rsi,argv", "mov~edi,ebp", "call~FOO", "cmp~eax,0", "jz~FOO"]], [0, 0, 20, 1, 0, 8, 2, 1, 4, -1, 0.2017451084082496, ["movsxd  rax, cs:optind@@GLIBC_2_2_5", "test    r14d, r14d", "mov     dereference, cs:reference_file", "mov     edx, ebp", "setnz   [rsp+158h+chopt.affect_symlink_referent]", "sub     edx, eax", "test    r14, r14", "jz      loc_1F48"], ["movsxd~rax,<TAG>", "test~r14d,r14d", "mov~dereference,<TAG>", "mov~edx,ebp", "setnz~[rsp+0]", "sub~edx,eax", "test~r14,r14", "jz~FOO"]], [0, 0, 21, 0, 0, 2, 1, 1, 5, -1, 0.002776308831306187, ["xor     r14d, r14d", "jmp     loc_1E7F"], ["xor~r14d,r14d", "jmp~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 9, 5, 0.01560021152829191, ["mov     r13d, 10h", "jmp     loc_1C84"], ["mov~r13d,0", "jmp~FOO"]], [0, 0, 62, 0, 0, 3, 0, 1, 9, 5, 0.01560021152829191, ["mov     optc, cs:optarg@@GLIBC_2_2_5", "mov     cs:reference_file, rax", "jmp     loc_1C84"], ["mov~optc,<TAG>", "mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 8, 5, 0.015071390798519302, ["mov     [rsp+158h+chopt.verbosity], 1", "jmp     loc_1C84"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 8, 5, 0.029613960867265997, ["mov     r13d, 11h", "jmp     loc_1C84"], ["mov~r13d,0", "jmp~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 7, 5, 0.02088841882601798, ["mov     r15d, 1", "jmp     loc_1C84"], ["mov~r15d,0", "jmp~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 7, 5, 0.027234267583289264, ["mov     [rsp+158h+chopt.recurse], 1", "jmp     loc_1C84"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 7, 5, 0.02088841882601798, ["mov     [rsp+158h+chopt.verbosity], 0", "jmp     loc_1C84"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 62, 0, 2, 10, 2, 3, 6, 5, 0.0, ["mov     rdi, cs:optarg@@GLIBC_2_2_5; name", "call    quote", "mov     rcx, [rsp+158h+e]", "lea     rdx, format; \"%s: %s\"", "mov     r8, rax", "xor     esi, esi; errnum", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_1C84"], ["mov~rdi,<TAG>", "call~FOO", "mov~rcx,[rsp+0]", "lea~rdx,<TAG>", "mov~r8,rax", "xor~esi,esi", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 5, 5, 0.015996827075621365, ["mov     r13d, 2", "jmp     loc_1C84"], ["mov~r13d,0", "jmp~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 3, 5, 0.007139079851930196, ["mov     [rsp+158h+chopt.force_silent], 1", "jmp     loc_1C84"], ["mov~[rsp+0],0", "jmp~FOO"]], [8, 0, 62, 1, 5, 42, 2, 5, 0, 5, 0.0, ["push    r15", "push    r14", "xor     r15d, r15d", "push    r13", "push    r12", "mov     r14d, 0FFFFFFFFh", "push    rbp", "push    rbx", "mov     rbx, argv", "movsxd  rbp, edi", "mov     edi, 6; category", "mov     r13d, 10h", "sub     rsp, 128h", "mov     rax, fs:28h", "mov     [rsp+158h+var_40], rax", "xor     eax, eax", "mov     rax, [argv]", "lea     argv, aReportBugsToS+16h; locale", "mov     [rsp+158h+uid], 0FFFFFFFFh", "mov     [rsp+158h+gid], 0FFFFFFFFh", "mov     [rsp+158h+required_uid], 0FFFFFFFFh", "lea     r12, [rsp+158h+chopt]", "mov     [rsp+158h+required_gid], 0FFFFFFFFh", "mov     cs:program_name, rax", "call    _setlocale", "lea     rsi, dirname; \"/usr/local/share/locale\"", "lea     rdi, domainname; \"coreutils\"", "call    _bindtextdomain", "lea     rdi, domainname; \"coreutils\"", "call    _textdomain", "lea     rdi, close_stdout", "call    atexit", "mov     rdi, r12; chopt", "call    chopt_init", "lea     rax, [rsp+158h+g_dummy]", "mov     [rsp+158h+groupname], rax", "lea     rax, [rsp+158h+u_dummy]", "mov     [rsp+158h+username], rax", "lea     rax, [rsp+158h+required_gid]", "mov     [rsp+158h+var_140], rax", "lea     rax, [rsp+158h+required_uid]", "mov     [rsp+158h+var_138], rax"], ["push~r15", "push~r14", "xor~r15d,r15d", "push~r13", "push~r12", "mov~r14d,0", "push~rbp", "push~rbx", "mov~rbx,argv", "movsxd~rbp,edi", "mov~edi,0", "mov~r13d,0", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "lea~argv,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "lea~r12,[rsp+0]", "mov~[rsp+0],0", "mov~<TAG>,rax", "call~FOO", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "mov~rdi,r12", "call~FOO", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax"]], [1, 0, 62, 0, 0, 2, 0, 1, 6, 6, 0.05301427815970386, ["cmp     eax, 52h ; 'R'", "jz      loc_1DDB"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 62, 0, 0, 1, 0, 1, 5, 7, 0.09518773135906927, ["jg      short loc_1D20"], ["jg~FOO"]], [0, 0, 12, 0, 0, 2, 1, 1, 5, -1, 0.10351665785298783, ["test    edx, edx", "jle     loc_1F51"], ["test~edx,edx", "jle~FOO"]], [0, 0, 62, 0, 0, 1, 0, 1, 3, 7, 0.2316234796404019, ["jg      short loc_1CF0"], ["jg~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 2, 6, 0.239555790586991, ["cmp     eax, 66h ; 'f'", "jz      loc_1E60"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 7, 6, 0.024986779481755685, ["cmp     eax, 63h ; 'c'", "jz      short loc_1D67"], ["cmp~eax,0", "jz~FOO"]], [0, 1, 62, 0, 0, 2, 0, 1, 8, 6, 0.009122157588577472, ["cmp     eax, 50h ; 'P'", "jnz     short loc_1CDD"], ["cmp~eax,<STR>", "jnz~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 4, 6, 0.11197778952934954, ["cmp     eax, 4Ch ; 'L'", "jz      loc_1E55"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 1, 0, 3, 14, 4, 4, 7, -1, 0.003437334743521946, ["mov     rdi, [argv+rbp*8-8]; name", "call    quote", "lea     rsi, aMissingOperand_0; \"missing operand after %s\"", "mov     argv, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_1CDD"], ["mov~rdi,[argv+0]", "call~FOO", "lea~rsi,<TAG>", "mov~argv,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 6, -1, 0.028820729772607086, ["cmp     eax, ebp", "jl      short loc_1F86"], ["cmp~eax,ebp", "jl~FOO"]], [2, 0, 0, 1, 2, 12, 2, 2, 9, -1, 0.0, ["sub     rsp, 8", "mov     rdi, cs:__bss_start; stream", "lea     r9, aJimMeyering; \"Jim Meyering\"", "push    0", "lea     r8, aDavidMackenzie; \"David MacKenzie\"", "lea     rcx, version; \"6.12\"", "lea     rdx, package; \"GNU \"", "lea     rsi, command_name; \"chown\"", "xor     eax, eax", "call    version_etc", "xor     edi, edi; status", "call    _exit"], ["sub~rsp,0", "mov~rdi,<TAG>", "lea~r9,<TAG>", "push~0", "lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "xor~eax,eax", "call~FOO", "xor~edi,edi", "call~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 8, -1, 0.00965097831835008, ["cmp     eax, 0FFFFFF7Dh", "jz      loc_1D92"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 7, -1, 0.03807509254362771, ["cmp     [rsp+158h+chopt.user_name], 0", "jz      short loc_20CA"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 10, 0, 1, 9, 1, 2, 6, -1, 0.05552617662612375, ["mov     rdi, [argv+rax*8]; spec", "lea     rcx, [r12+18h]; username", "lea     rdx, [rsp+158h+gid]; gid", "lea     rsi, [rsp+158h+uid]; uid", "lea     r8, [r12+20h]; groupname", "call    parse_user_spec", "test    rax, rax", "mov     rbp, rax", "jz      short loc_2069"], ["mov~rdi,<TAG>", "lea~rcx,[r12+0]", "lea~rdx,[rsp+0]", "lea~rsi,[rsp+0]", "lea~r8,[r12+0]", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [1, 0, 9, 0, 2, 10, 2, 2, 7, -1, 0.0, ["movsxd  rax, cs:optind@@GLIBC_2_2_5", "mov     rdi, [argv+rax*8]; name", "call    quote", "lea     rdx, format; \"%s: %s\"", "mov     r8, rax", "mov     rcx, rbp", "xor     esi, esi; errnum", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["movsxd~rax,<TAG>", "mov~rdi,<TAG>", "call~FOO", "lea~rdx,<TAG>", "mov~r8,rax", "mov~rcx,rbp", "xor~esi,esi", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 7, 0, 1, 6, 1, 2, 6, -1, 0.07588577472236911, ["lea     rdx, [rsp+158h+ref_stats]; stat_buf", "mov     rsi, r14; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jnz     loc_207D"], ["lea~rdx,[rsp+0]", "mov~rsi,r14", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 6, 7, 0.0413802221047065, ["cmp     eax, 0FFFFFF7Eh", "jz      loc_1E4E"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 6, 6, 0.04666842940243258, ["cmp     eax, 83h", "jz      loc_1DD0"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 15, 1, 0, 2, 0, 1, 5, -1, 0.08236382866208355, ["sub     edx, 1", "jg      loc_2019"], ["sub~edx,0", "jg~FOO"]], [0, 1, 62, 0, 0, 2, 0, 1, 7, 6, 0.04032258064516129, ["cmp     eax, 48h ; 'H'", "jz      loc_1D74"], ["cmp~eax,<STR>", "jz~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 8, 6, 0.009122157588577472, ["cmp     eax, 84h", "jnz     short loc_1CDD"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 0, 0, 1, 2, 1, 1, 7, -1, 0.0, ["xor     edi, edi; status", "call    usage"], ["xor~edi,edi", "call~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 9, -1, 0.0, ["lea     rax, aReportBugsToS+16h; \"\"", "mov     [rsp+158h+chopt.user_name], rax", "jmp     short loc_2071"], ["lea~rax,<TAG>", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 8, -1, 0.011634056054997356, ["cmp     [rsp+158h+chopt.group_name], 0", "jz      short loc_2071"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 8, -1, 0.0, ["mov     edi, 1; status", "call    usage"], ["mov~edi,0", "call~FOO"]], [1, 0, 1, 0, 2, 10, 4, 3, 7, -1, 0.003437334743521946, ["lea     rsi, msgid; \"missing operand\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_1CDD"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 6, 0, 4, 16, 2, 5, 7, -1, 0.0, ["mov     rdi, r14; name", "call    quote", "lea     rsi, aFailedToGetAtt; \"failed to get attributes of %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r14, rax", "call    _dcgettext", "mov     rbp, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r14", "mov     rdx, rbp; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_1EC7"], ["mov~rdi,r14", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r14,rax", "call~FOO", "mov~rbp,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r14", "mov~rdx,rbp", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 5, 0, 2, 9, 0, 2, 7, -1, 0.05684822845055526, ["mov     edi, [rsp+158h+ref_stats.st_uid]; uid", "mov     eax, [rsp+158h+ref_stats.st_gid]", "mov     [rsp+158h+uid], edi", "mov     [rsp+158h+gid], eax", "call    uid_to_name", "mov     edi, [rsp+158h+ref_stats.st_gid]; gid", "mov     [rsp+158h+chopt.user_name], rax", "call    gid_to_name", "mov     [rsp+158h+chopt.group_name], rax"], ["mov~edi,[rsp+0]", "mov~eax,[rsp+0]", "mov~[rsp+0],edi", "mov~[rsp+0],eax", "call~FOO", "mov~edi,[rsp+0]", "mov~[rsp+0],rax", "call~FOO", "mov~[rsp+0],rax"]], [1, 0, 5, 1, 0, 2, 0, 1, 8, -1, 0.007932310946589107, ["add     cs:optind@@GLIBC_2_2_5, 1", "jmp     loc_1EF8"], ["add~<TAG>,0", "jmp~FOO"]]], "func_feature": [38, 38, 94, 3, 63, 93, 0, 301, 0.05007, 24, 7], "succs": [[29, 7], [0, 51], [21], [2, 10], [14, 15], [4, 14], [20], [13, 6], [21], [8, 22], [9, 21], [20], [11, 54], [17, 58], [], [16, 14], [14], [20], [20, 30], [1, 18], [3, 38], [52, 36], [21], [20], [20], [20], [20], [20], [20], [20], [20], [20], [20], [20], [28, 39], [34, 50], [49, 43], [41, 19], [32, 37], [40, 25], [58, 23], [35, 31], [58], [42, 59], [], [58, 44], [57, 62], [48, 46], [46], [60, 61], [53, 55], [27, 12], [43, 47], [26, 45], [24, 58], [], [62], [56, 62], [], [58], [61], [5], [5]], "fname": "main", "n_num": 63}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[1, 0, 0, 0, 1, 12, 2, 1, 0, 0, 0.0, ["xor     ebp, ebp", "mov     r9, rdx; rtld_fini", "pop     rsi; argc", "mov     rdx, rsp; ubp_av", "and     rsp, 0FFFFFFFFFFFFFFF0h", "push    rax", "push    rsp; stack_end", "lea     r8, __libc_csu_fini; fini", "lea     rcx, __libc_csu_init; init", "lea     rdi, main; main", "call    cs:__libc_start_main_ptr", "hlt"], ["xor~ebp,ebp", "mov~r9,rdx", "pop~rsi", "mov~rdx,rsp", "and~rsp,0", "push~rax", "push~rsp", "lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "call~<TAG>", "hlt"]]], "func_feature": [1, 2, 1, 0, 1, 0, 0, 12, 0.0, 4, 0], "succs": [[]], "fname": "_start", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_deregisterTMCloneTable_ptr", "test    rax, rax", "jz      short loc_2170"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 6, 0, 1, 0, 1, 0.0, ["lea     rdi, __bss_start", "push    rbp", "lea     rax, __bss_start", "cmp     rax, rdi", "mov     rbp, rsp", "jz      short loc_2170"], ["lea~rdi,<TAG>", "push~rbp", "lea~rax,<TAG>", "cmp~rax,rdi", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, -1, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 13, 0.04167, 2, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "deregister_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [3, 0, 3, 2, 0, 11, 0, 1, 0, 0, 0.0, ["lea     rdi, __bss_start", "lea     rsi, __bss_start", "push    rbp", "sub     rsi, rdi", "mov     rbp, rsp", "sar     rsi, 3", "mov     rax, rsi", "shr     rax, 3Fh", "add     rsi, rax", "sar     rsi, 1", "jz      short loc_21C0"], ["lea~rdi,<TAG>", "lea~rsi,<TAG>", "push~rbp", "sub~rsi,rdi", "mov~rbp,rsp", "sar~rsi,0", "mov~rax,rsi", "shr~rax,0", "add~rsi,rax", "sar~rsi,0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_registerTMCloneTable_ptr", "test    rax, rax", "jz      short loc_21C0"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, 0, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 18, 0.04167, 2, 2], "succs": [[], [0, 2], [0, 3], []], "fname": "register_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[1, 0, 0, 0, 1, 4, 0, 1, 0, 0, 0.0, ["call    deregister_tm_clones", "mov     cs:completed_7698, 1", "pop     rbp", "retn"], ["call~FOO", "mov~<TAG>,0", "pop~rbp", "retn"]], [1, 0, 2, 0, 0, 4, 0, 1, 1, -1, 0.16666666666666666, ["cmp     cs:__cxa_finalize_ptr, 0", "push    rbp", "mov     rbp, rsp", "jz      short loc_21F3"], ["cmp~<TAG>,0", "push~rbp", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     rdi, cs:__dso_handle", "call    __cxa_finalize"], ["mov~rdi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:completed_7698, 0", "jnz     short locret_2208"], ["cmp~<TAG>,0", "jnz~FOO"]]], "func_feature": [2, 0, 4, 0, 5, 5, 0, 13, 0.03333, 3, 0], "succs": [[], [0, 2], [0], [], [1, 3]], "fname": "__do_global_dtors_aux", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "pop     rbp", "jmp     register_tm_clones"], ["push~rbp", "mov~rbp,rsp", "pop~rbp", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "frame_dummy", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 1, 2, 0, 1, 0, 0, 0.0, ["mov     edi, ebx; status", "call    _exit"], ["mov~edi,ebx", "call~FOO"]], [14, 0, 1, 0, 24, 103, 15, 25, 1, 0, 0.08333333333333333, ["lea     rsi, aUsageSOptionOw; \"Usage: %s [OPTION]... [OWNER][:[GROUP]]\"...", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbp, cs:__bss_start", "lea     rsi, aChangeTheOwner; \"Change the owner and/or group of each F\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:__bss_start", "lea     rsi, aHNoDereference; \"  -h, --no-dereference   affect each sy\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:__bss_start", "lea     rsi, aFromCurrentOwn; \"      --from=CURRENT_OWNER:CURRENT_GROU\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:__bss_start", "lea     rsi, aNoPreserveRoot; \"      --no-preserve-root  do not treat \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:__bss_start", "lea     rsi, aFSilentQuietSu; \"  -f, --silent, --quiet  suppress most \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:__bss_start", "lea     rsi, aTheFollowingOp; \"The following options modify how a hier\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:__bss_start", "lea     rsi, aHelpDisplayThi; \"      --help     display this help and \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:__bss_start", "lea     rsi, aVersionOutputV; \"      --version  output version informa\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:__bss_start", "lea     rsi, aOwnerIsUnchang; \"\\nOwner is unchanged if missing.  Group\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:program_name", "lea     rsi, aExamplesSRootU; \"\\nExamples:\\n  %s root /u        Change\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, rbp", "mov     rcx, rbp", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "lea     rsi, aReportBugsToS; \"\\nReport bugs to <%s>.\\n\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, aBugCoreutilsGn; \"bug-coreutils@gnu.org\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_225F"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rcx,rbp", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r8,rbp", "mov~rcx,rbp", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 2, 9, 2, 2, 1, -1, 0.08333333333333333, ["lea     rsi, aTrySHelpForMor; \"Try `%s --help' for more information.\\n\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     rcx, rbp", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~rcx,rbp", "mov~esi,0", "xor~eax,eax", "call~FOO"]], [2, 0, 3, 1, 0, 8, 1, 1, 0, 1, 0.0, ["push    rbp", "push    rbx", "mov     edx, 5; category", "mov     ebx, edi", "sub     rsp, 8", "test    edi, edi", "mov     rbp, cs:program_name", "jz      short loc_2266"], ["push~rbp", "push~rbx", "mov~edx,0", "mov~ebx,edi", "sub~rsp,0", "test~edi,edi", "mov~rbp,<TAG>", "jz~FOO"]]], "func_feature": [27, 18, 29, 0, 4, 4, 2, 122, 0.04167, 17, 1], "succs": [[], [0], [0], [1, 2]], "fname": "usage", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[7, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0.0, ["mov     dword ptr [chopt], 2", "mov     qword ptr [chopt+8], 0", "mov     byte ptr [chopt+10h], 1", "mov     byte ptr [chopt+4], 0", "mov     byte ptr [chopt+11h], 0", "mov     qword ptr [chopt+18h], 0", "mov     qword ptr [chopt+20h], 0", "retn"], ["mov~<TAG>,0", "mov~[word ptr [chopt+0],0", "mov~[yte ptr [chopt+0],0", "mov~[yte ptr [chopt+0],0", "mov~[yte ptr [chopt+0],0", "mov~[word ptr [chopt+0],0", "mov~[word ptr [chopt+0],0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 8, 0.0, 0, 0], "succs": [[]], "fname": "chopt_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "chopt_free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0.07500000000000001, ["mov     rdi, [grp]; string"], ["mov~rdi,<TAG>"]], [0, 1, 5, 1, 1, 9, 2, 2, 0, 3, 0.0, ["push    rbx", "mov     ebx, edi", "sub     rsp, 20h", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "call    _getgrgid", "test    grp, grp", "jz      short loc_24C0"], ["push~rbx", "mov~ebx,edi", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~grp,grp", "jz~FOO"]], [0, 0, 3, 0, 1, 5, 0, 2, 1, 2, 0.07500000000000001, ["mov     edi, ebx; i", "mov     rsi, rsp; buf", "call    umaxtostr", "mov     rdi, rax", "jmp     short loc_24A4"], ["mov~edi,ebx", "mov~rsi,rsp", "call~FOO", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 1, 4, 1, 2, 2, 1, 0.30000000000000004, ["call    xstrdup", "mov     rdx, [rsp+28h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_24CF"], ["call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 1, 0, 1, 0, 3, 0, 0, 3, -1, 0.0, ["add     rsp, 20h", "pop     gid", "retn"], ["add~rsp,<STR>", "pop~gid", "retn"]]], "func_feature": [4, 3, 7, 1, 6, 6, 1, 23, 0.075, 1, 2], "succs": [[4], [0, 2], [4], [], [3, 5], []], "fname": "gid_to_name", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0.07500000000000001, ["mov     rdi, [pwd]; string"], ["mov~rdi,<TAG>"]], [0, 1, 5, 1, 1, 9, 2, 2, 0, 3, 0.0, ["push    rbx", "mov     ebx, edi", "sub     rsp, 20h", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "call    _getpwuid", "test    pwd, pwd", "jz      short loc_2520"], ["push~rbx", "mov~ebx,edi", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~pwd,pwd", "jz~FOO"]], [0, 0, 3, 0, 1, 5, 0, 2, 1, 2, 0.07500000000000001, ["mov     edi, ebx; i", "mov     rsi, rsp; buf", "call    umaxtostr", "mov     rdi, rax", "jmp     short loc_2504"], ["mov~edi,ebx", "mov~rsi,rsp", "call~FOO", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 1, 4, 1, 2, 2, 1, 0.30000000000000004, ["call    xstrdup", "mov     rdx, [rsp+28h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_252F"], ["call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 1, 0, 1, 0, 3, 0, 0, 3, -1, 0.0, ["add     rsp, 20h", "pop     uid", "retn"], ["add~rsp,<STR>", "pop~uid", "retn"]]], "func_feature": [4, 3, 7, 1, 6, 6, 1, 23, 0.075, 1, 2], "succs": [[4], [0, 2], [4], [], [3, 5], []], "fname": "uid_to_name", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 140, 1, 0, 4, 0, 1, 0, 0, 0.1508029008029008, ["movzx   edx, ax", "movsxd  rdx, dword ptr [r15+rdx*4]", "add     rdx, r15", "jmp     rdx; switch jump"], ["movzx~edx,ax", "movsxd~rdx,<TAG>", "add~rdx,r15", "jmp~rdx"]], [1, 0, 140, 0, 0, 4, 0, 1, 3, 7, 0.6477434602434603, ["mov     r12, [ent+30h]", "movzx   eax, word ptr [ent+60h]", "cmp     ax, 0Ah; switch 11 cases", "ja      loc_26FA; jumptable 0000000000002600 default case"], ["mov~r12,[ent+0]", "movzx~eax,[ord ptr [ent+0]", "cmp~ax,0", "ja~FOO"]], [0, 0, 140, 0, 0, 3, 0, 1, 10, 5, 0.009482646982646982, ["mov     rdi, [rdx]", "cmp     [r9+8], rdi", "jnz     loc_279D"], ["mov~rdi,<TAG>", "cmp~[r9+0],rdi", "jnz~FOO"]], [0, 0, 140, 0, 0, 3, 1, 1, 9, 6, 0.014083139083139084, ["mov     rdx, [rbp+8]", "test    rdx, rdx", "jz      loc_279D"], ["mov~rdx,[rbp+0]", "test~rdx,rdx", "jz~FOO"]], [0, 0, 140, 0, 0, 2, 1, 1, 8, 11, 0.044552091427091434, ["test    eax, eax", "jnz     loc_2674"], ["test~eax,eax", "jnz~FOO"]], [1, 0, 140, 0, 1, 6, 2, 2, 7, 11, 0.08167411292411292, ["xor     eax, eax", "xor     edi, edi; status", "call    _error", "mov     eax, [rbp+0]", "cmp     eax, 2", "jnz     loc_2C00"], ["xor~eax,eax", "xor~edi,edi", "call~FOO", "mov~eax,[rbp+0]", "cmp~eax,0", "jnz~FOO"]], [0, 0, 140, 0, 0, 1, 0, 0, 18, 12, 0.0038243006993006986, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 140, 0, 0, 2, 0, 1, 20, 13, 0.001116938616938617, ["cmp     [rsp+1B8h+required_gid], 0FFFFFFFFh", "jz      short loc_3218"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 140, 0, 0, 2, 0, 1, 19, 12, 0.0143502331002331, ["cmp     eax, [rsp+1B8h+var_BC]", "jz      loc_3200"], ["cmp~eax,[rsp+0]", "jz~FOO"]], [2, 0, 140, 0, 0, 4, 0, 1, 13, 10, 0.08853600103600102, ["mov     eax, [rbp+0]", "mov     byte ptr [rsp+1B8h+ok], 0", "cmp     eax, 2", "jz      loc_2678"], ["mov~eax,[rbp+0]", "mov~<TAG>,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 140, 0, 0, 4, 1, 1, 12, 11, 0.12835729085729086, ["movzx   eax, byte ptr [rbp+11h]", "test    al, al", "mov     byte ptr [rsp+1B8h+ok], al", "jz      loc_2E00"], ["movzx~eax,[yte ptr [rbp+0]", "test~al,al", "mov~<TAG>,al", "jz~FOO"]], [1, 0, 140, 0, 0, 2, 0, 1, 5, 11, 0.020007770007770008, ["cmp     qword ptr [ent+50h], 0; jumptable 0000000000002600 case 10", "jnz     short loc_261A"], ["cmp~[word ptr [ent+0],0", "jnz~FOO"]], [0, 0, 140, 0, 0, 2, 1, 1, 14, 10, 0.028075628075628075, ["test    eax, eax", "jnz     loc_2678"], ["test~eax,eax", "jnz~FOO"]], [1, 0, 140, 0, 1, 9, 2, 2, 7, 6, 0.018866550116550116, ["mov     esi, [fts+2Ch]; fildes", "mov     rcx, [rsp+1B8h+var_188]; stat_buf", "xor     r8d, r8d; flag", "mov     rdx, r10; filename", "mov     edi, 1; ver", "mov     [rsp+1B8h+s], r10", "call    ___fxstatat", "test    eax, eax", "jnz     loc_30B0"], ["mov~esi,[fts+0]", "mov~rcx,[rsp+0]", "xor~r8d,r8d", "mov~rdx,r10", "mov~edi,0", "mov~[rsp+0],r10", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 140, 0, 0, 4, 1, 1, 6, 5, 0.02598096348096348, ["mov     edx, [ent+80h]", "and     edx, 0F000h", "cmp     edx, 0A000h", "jz      loc_2FF0"], ["mov~edx,[ent+0]", "and~edx,0", "cmp~edx,0", "jz~FOO"]], [0, 0, 140, 0, 0, 3, 0, 1, 19, 12, 0.035037878787878785, ["mov     eax, [rsp+1B8h+required_gid]", "cmp     eax, [rsp+1B8h+var_B8]", "jnz     loc_315B"], ["mov~eax,[rsp+0]", "cmp~eax,[rsp+0]", "jnz~FOO"]], [1, 0, 140, 0, 0, 3, 0, 1, 18, 13, 0.05040792540792541, ["mov     eax, [rsp+1B8h+required_uid]", "cmp     eax, 0FFFFFFFFh", "jz      loc_3207"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 140, 0, 0, 4, 1, 1, 9, 13, 0.031974391349391354, ["mov     r14, [rbp+18h]", "mov     r8, [rbp+20h]", "test    r14, r14", "jz      loc_2828"], ["mov~r14,[rbp+0]", "mov~r8,[rbp+0]", "test~r14,r14", "jz~FOO"]], [1, 0, 140, 0, 0, 2, 0, 1, 6, 10, 0.012577700077700078, ["cmp     qword ptr [ent+18h], 0", "jz      loc_2F58"], ["cmp~[word ptr [ent+0],0", "jz~FOO"]], [2, 0, 140, 0, 1, 6, 0, 2, 13, 12, 0.03307109557109557, ["mov     rdi, r12; name", "call    quote", "cmp     [rsp+1B8h+uid], 0FFFFFFFFh", "mov     r14, rax", "mov     edx, 5; category", "jz      loc_3030"], ["mov~rdi,r12", "call~FOO", "cmp~[rsp+0],0", "mov~r14,rax", "mov~edx,0", "jz~FOO"]], [0, 1, 140, 0, 5, 17, 0, 5, 17, 12, 0.006628787878787879, ["mov     rdi, rsi; s", "mov     [rsp+1B8h+src], rsi", "call    _strlen", "mov     rdi, [rsp+1B8h+s]; s", "mov     r14, rax", "call    _strlen", "lea     rdi, [r14+rax+2]; n", "call    xmalloc", "mov     rsi, [rsp+1B8h+src]; src", "mov     rdi, rax; dest", "mov     r14, rax", "call    _stpcpy", "mov     rsi, [rsp+1B8h+s]; src", "lea     rdi, [rax+1]; dest", "mov     byte ptr [rax], 3Ah ; ':'", "call    _strcpy", "mov     [rsp+1B8h+s], r14"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "call~FOO", "mov~rdi,[rsp+0]", "mov~r14,rax", "call~FOO", "lea~rdi,[r14+0]", "call~FOO", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~r14,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rdi,[rax+0]", "mov~<TAG>,<STR>", "call~FOO", "mov~[rsp+0],r14"]], [0, 0, 140, 0, 0, 2, 1, 1, 16, 13, 0.020007770007770008, ["test    rax, rax", "jz      loc_3050"], ["test~rax,rax", "jz~FOO"]], [0, 0, 140, 0, 0, 2, 1, 1, 10, 13, 0.023641058016058012, ["test    r8, r8", "jz      loc_2D70"], ["test~r8,r8", "jz~FOO"]], [0, 0, 140, 0, 0, 4, 1, 1, 15, 14, 0.024239186739186746, ["mov     r14, [rbp+18h]", "mov     r8, [rbp+20h]", "test    r14, r14", "jnz     loc_2C19"], ["mov~r14,[rbp+0]", "mov~r8,[rbp+0]", "test~r14,r14", "jnz~FOO"]], [0, 0, 140, 0, 0, 2, 1, 1, 16, 11, 0.008644133644133644, ["test    eax, eax", "jz      loc_2814"], ["test~eax,eax", "jz~FOO"]], [0, 0, 140, 0, 0, 4, 0, 1, 8, 5, 0.004370629370629371, ["movzx   eax, word ptr [ent+60h]", "mov     r9, [rsp+1B8h+var_188]", "mov     r10, [rsp+1B8h+s]", "jmp     loc_2742"], ["movzx~eax,[ord ptr [ent+0]", "mov~r9,[rsp+0]", "mov~r10,[rsp+0]", "jmp~FOO"]], [0, 0, 140, 0, 0, 1, 0, 0, 16, 13, 0.010602013727013731, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [0, 0, 140, 0, 1, 4, 1, 1, 14, 11, 0.01316045066045066, ["lea     rsi, aChangingOwners; \"changing ownership of %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, rax; format"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rdx,rax"]], [0, 0, 140, 0, 0, 2, 1, 1, 10, 12, 0.03257252007252007, ["test    r8, r8", "jz      loc_3080"], ["test~r8,r8", "jz~FOO"]], [1, 0, 140, 0, 0, 3, 0, 1, 12, 10, 0.16007349132349133, ["mov     eax, [rbp+0]", "cmp     eax, 2", "jz      loc_2678"], ["mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 140, 0, 0, 2, 1, 1, 11, 11, 0.14414740352240352, ["test    dl, dl", "jnz     loc_2A28"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 140, 0, 1, 11, 0, 2, 20, 11, 0.025446775446775448, ["mov     rax, [rsp+1B8h+var_1A8]", "mov     edi, r14d; fd", "mov     [rsp+1B8h+src], r9", "mov     edx, [rax]", "mov     dword ptr [rsp+1B8h+s], edx", "call    _close", "mov     rax, [rsp+1B8h+var_1A8]", "mov     edx, dword ptr [rsp+1B8h+s]", "mov     r9, [rsp+1B8h+src]", "mov     [rax], edx", "jmp     loc_2A28"], ["mov~rax,[rsp+0]", "mov~edi,r14d", "mov~[rsp+0],r9", "mov~edx,<TAG>", "mov~[word ptr [rsp+0],edx", "call~FOO", "mov~rax,[rsp+0]", "mov~edx,[word ptr [rsp+0]", "mov~r9,[rsp+0]", "mov~<TAG>,edx", "jmp~FOO"]], [0, 0, 140, 0, 0, 2, 0, 1, 22, 11, 0.006055749805749806, ["mov     r9, [rsp+1B8h+s]", "jmp     loc_2A28"], ["mov~r9,[rsp+0]", "jmp~FOO"]], [0, 0, 140, 0, 0, 1, 0, 0, 13, 11, 0.02347594535094535, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [0, 0, 140, 0, 1, 7, 1, 2, 20, 13, 0.018210955710955712, ["mov     edx, [rsp+1B8h+gid]; group", "mov     esi, [rsp+1B8h+uid]; owner", "mov     edi, r14d; fd", "mov     [rsp+1B8h+s], r9", "call    _fchown", "test    eax, eax", "jnz     loc_2F78"], ["mov~edx,[rsp+0]", "mov~esi,[rsp+0]", "mov~edi,r14d", "mov~[rsp+0],r9", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 140, 0, 1, 6, 0, 2, 6, 13, 0.001456876456876457, ["mov     rdi, r12; name", "call    quote", "mov     edx, 5", "mov     r14, rax", "lea     rsi, aCannotAccessS; \"cannot access %s\"", "jmp     short loc_264F"], ["mov~rdi,r12", "call~FOO", "mov~edx,0", "mov~r14,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 140, 0, 0, 3, 0, 1, 13, 12, 0.08690025252525252, ["mov     ecx, [rsp+1B8h+uid]", "cmp     ecx, 0FFFFFFFFh", "jz      loc_2CC8"], ["mov~ecx,[rsp+0]", "cmp~ecx,0", "jz~FOO"]], [0, 0, 140, 0, 1, 4, 1, 2, 21, 12, 0.013594276094276094, ["mov     edi, r14d; fd", "call    _close", "test    eax, eax", "jnz     loc_27ED"], ["mov~edi,r14d", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 140, 0, 1, 5, 1, 2, 14, 11, 0.01316045066045066, ["lea     rsi, aChangingGroupO; \"changing group of %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, rax", "jmp     loc_2E2C"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rdx,rax", "jmp~FOO"]], [0, 0, 140, 0, 0, 2, 0, 1, 14, 12, 0.05317356254856255, ["cmp     ecx, [r9+1Ch]", "jz      loc_2CC8"], ["cmp~ecx,[r9+0]", "jz~FOO"]], [1, 0, 140, 0, 1, 5, 0, 1, 5, 13, 0.026110463610463614, ["mov     rdi, r12; jumptable 0000000000002600 case 7", "call    quote", "lea     rsi, format+4; msgid", "mov     r14, rax", "mov     edx, 5; category"], ["mov~rdi,r12", "call~FOO", "lea~rsi,<TAG>", "mov~r14,rax", "mov~edx,0"]], [1, 0, 140, 0, 1, 9, 2, 2, 15, 10, 0.03307109557109557, ["mov     rax, [rsp+1B8h+var_1A8]", "xor     edi, edi; status", "mov     rcx, r14", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error", "mov     eax, [rbp+0]", "cmp     eax, 2", "jz      loc_2678"], ["mov~rax,[rsp+0]", "xor~edi,edi", "mov~rcx,r14", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 1, 6, 1, 2, 4, -1, 0.013791763791763792, ["mov     rdi, fts; sp_0", "call    fts_close", "mov     ent, [rsp+1B8h+var_40]", "xor     ent, fs:28h", "movzx   eax, byte ptr [rsp+1B8h+ok]", "jnz     loc_324F"], ["mov~rdi,fts", "call~FOO", "mov~ent,[rsp+0]", "xor~ent,<TAG>", "movzx~eax,<TAG>", "jnz~FOO"]], [1, 0, 140, 0, 0, 3, 0, 1, 17, 12, 0.006628787878787879, ["mov     r14, rsi", "mov     [rsp+1B8h+s], 0", "jmp     loc_2AB4"], ["mov~r14,rsi", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 140, 0, 0, 1, 0, 1, 17, 10, 0.006216006216006216, ["jmp     loc_2678"], ["jmp~FOO"]], [1, 0, 140, 0, 0, 3, 0, 1, 9, 1, 0.0909228502978503, ["mov     eax, [rbp+0]", "cmp     eax, 2", "jz      loc_2678"], ["mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 140, 0, 0, 2, 1, 1, 8, 2, 0.10608488733488733, ["test    al, al", "jz      loc_3254"], ["test~al,al", "jz~FOO"]], [0, 0, 140, 0, 0, 3, 1, 1, 9, 2, 0.04025835275835276, ["mov     rdx, [rbp+8]", "test    rdx, rdx", "jz      loc_3254"], ["mov~rdx,[rbp+0]", "test~rdx,rdx", "jz~FOO"]], [0, 0, 140, 0, 0, 2, 1, 1, 9, 2, 0.05305215617715618, ["test    cl, cl", "jz      loc_3254"], ["test~cl,cl", "jz~FOO"]], [0, 0, 140, 0, 0, 5, 1, 1, 15, 13, 0.04771027583527584, ["mov     rsi, [rbp+18h]", "mov     rax, [rbp+20h]", "test    rsi, rsi", "mov     [rsp+1B8h+s], rax", "jz      loc_2D98"], ["mov~rsi,[rbp+0]", "mov~rax,[rbp+0]", "test~rsi,rsi", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 140, 0, 0, 2, 0, 1, 15, 11, 0.00041278166278166275, ["cmp     esi, [r9+20h]", "jnz     loc_2A4B"], ["cmp~esi,[r9+0]", "jnz~FOO"]], [0, 0, 140, 0, 1, 5, 1, 1, 6, 12, 0.06717819217819218, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     esi, [ent+38h]; errnum", "mov     rcx, r14", "mov     rdx, rax; format"], ["xor~edi,edi", "call~FOO", "mov~esi,[ent+0]", "mov~rcx,r14", "mov~rdx,rax"]], [1, 0, 140, 0, 1, 6, 0, 2, 5, 13, 0.026110463610463614, ["mov     rdi, r12; jumptable 0000000000002600 case 4", "call    quote", "mov     edx, 5", "mov     r14, rax", "lea     rsi, aCannotReadDire; \"cannot read directory %s\"", "jmp     loc_264F"], ["mov~rdi,r12", "call~FOO", "mov~edx,0", "mov~r14,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [3, 0, 140, 0, 1, 11, 1, 2, 11, 11, 0.01291116291116291, ["lea     rsi, aFailedToChange; \"failed to change group of %s to %s\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     [rsp+1B8h+ok], r8", "call    _dcgettext", "mov     r8, [rsp+1B8h+ok]", "mov     rsi, rax", "mov     byte ptr [rsp+1B8h+ok], 0", "mov     [rsp+1B8h+s], 0", "mov     r14, r8", "jmp     loc_2C90"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~<TAG>,r8", "call~FOO", "mov~r8,<TAG>", "mov~rsi,rax", "mov~<TAG>,0", "mov~[rsp+0],0", "mov~r14,r8", "jmp~FOO"]], [0, 0, 140, 0, 0, 1, 0, 1, 10, 0, 0.044094794094794096, ["jmp     loc_2CDB"], ["jmp~FOO"]], [0, 0, 140, 0, 0, 2, 1, 1, 8, 7, 0.11722189847189846, ["test    al, al", "jz      loc_279D"], ["test~al,al", "jz~FOO"]], [1, 0, 140, 0, 0, 3, 0, 1, 7, 4, 0.15306915306915306, ["mov     ecx, [rsp+1B8h+required_gid]", "cmp     ecx, 0FFFFFFFFh", "jz      loc_2E60"], ["mov~ecx,[rsp+0]", "cmp~ecx,0", "jz~FOO"]], [1, 0, 140, 0, 2, 12, 1, 3, 8, 12, 0.007745726495726496, ["mov     rdi, r12; name", "call    quote", "lea     rsi, aCannotDerefere; \"cannot dereference %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, rax", "call    _dcgettext", "mov     rdx, rax", "mov     rax, [rsp+1B8h+var_1A8]", "mov     rcx, r14", "mov     esi, [rax]", "jmp     loc_265F"], ["mov~rdi,r12", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~rcx,r14", "mov~esi,<TAG>", "jmp~FOO"]], [1, 1, 140, 0, 0, 3, 0, 1, 13, 13, 0.07253626003626003, ["cmp     eax, 4000h", "mov     ecx, 10900h", "jnz     short loc_29F8"], ["cmp~eax,<STR>", "mov~ecx,0", "jnz~FOO"]], [1, 1, 140, 0, 0, 4, 1, 1, 12, 14, 0.14633514633514633, ["mov     eax, [r9+18h]", "and     eax, 0F000h", "cmp     eax, 8000h", "jz      loc_2EF8"], ["mov~eax,[r9+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 140, 0, 0, 1, 0, 0, 8, 10, 0.0719616032116032, ["mov     byte ptr [rsp+1B8h+ok], 0"], ["mov~<TAG>,0"]], [1, 0, 140, 0, 1, 11, 0, 2, 17, 11, 0.022261881636881635, ["mov     rax, [rsp+1B8h+var_1A8]", "mov     edi, r14d; fd", "mov     edx, [rax]", "mov     dword ptr [rsp+1B8h+ok], edx", "call    _close", "mov     rax, [rsp+1B8h+var_1A8]", "mov     edx, dword ptr [rsp+1B8h+ok]", "mov     [rax], edx", "mov     eax, [rbp+0]", "cmp     eax, 2", "jz      loc_2674"], ["mov~rax,[rsp+0]", "mov~edi,r14d", "mov~edx,<TAG>", "mov~<TAG>,edx", "call~FOO", "mov~rax,[rsp+0]", "mov~edx,<TAG>", "mov~<TAG>,edx", "mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 140, 0, 0, 2, 0, 1, 9, 9, 0.5474949818699819, ["cmp     byte ptr [rbp+4], 0", "jnz     loc_25D0"], ["cmp~[yte ptr [rbp+0],0", "jnz~FOO"]], [1, 0, 140, 0, 3, 12, 1, 4, 12, 10, 0.17166860916860918, ["mov     rdi, r12; name", "mov     [rsp+1B8h+src], rsi", "call    quote", "mov     rsi, [rsp+1B8h+src]", "mov     rdx, rax", "mov     rcx, r14", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rdi, [rsp+1B8h+s]; ptr", "call    free", "jmp     loc_2678"], ["mov~rdi,r12", "mov~[rsp+0],rsi", "call~FOO", "mov~rsi,[rsp+0]", "mov~rdx,rax", "mov~rcx,r14", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rdi,[rsp+0]", "call~FOO", "jmp~FOO"]], [0, 0, 140, 0, 0, 2, 1, 1, 11, 10, 0.08328477078477078, ["test    eax, eax", "jnz     loc_2678"], ["test~eax,eax", "jnz~FOO"]], [1, 0, 140, 0, 0, 3, 0, 1, 12, 10, 0.03045438357938358, ["mov     eax, [rbp+0]", "cmp     eax, 2", "jz      loc_2678"], ["mov~eax,[rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 140, 0, 0, 2, 1, 1, 13, 10, 0.006701631701631702, ["test    eax, eax", "jnz     loc_2678"], ["test~eax,eax", "jnz~FOO"]], [2, 0, 140, 0, 3, 13, 2, 4, 14, 10, 0.0, ["mov     rdi, r12; name", "call    quote", "lea     rsi, aNeitherSymboli; \"neither symbolic link %s nor referent h\"...", "mov     r12, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdx, r12", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_2678"], ["mov~rdi,r12", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdx,r12", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 140, 0, 0, 2, 0, 1, 7, 3, 0.10967851592851594, ["cmp     ecx, [r9+1Ch]", "jz      loc_2AD0"], ["cmp~ecx,[r9+0]", "jz~FOO"]], [5, 0, 140, 1, 0, 11, 2, 1, 6, 4, 0.26590423465423463, ["mov     edx, eax", "mov     ecx, [rsp+1B8h+required_uid]", "and     edx, 0FFFFFFFDh", "cmp     dx, 4", "setz    dl", "sub     eax, 1", "cmp     ax, 1", "setbe   al", "or      eax, edx", "cmp     ecx, 0FFFFFFFFh", "jz      loc_2AD0"], ["mov~edx,eax", "mov~ecx,[rsp+0]", "and~edx,0", "cmp~dx,0", "setz~dl", "sub~eax,0", "cmp~ax,0", "setbe~al", "or~eax,edx", "cmp~ecx,0", "jz~FOO"]], [0, 0, 140, 0, 0, 2, 0, 1, 11, 4, 0.006131831131831132, ["mov     ecx, eax", "jmp     loc_2B10"], ["mov~ecx,eax", "jmp~FOO"]], [1, 0, 140, 0, 0, 2, 0, 1, 5, 7, 0.045940170940170943, ["cmp     byte ptr [rbp+4], 0; jumptable 0000000000002600 case 1", "jz      loc_26FA; jumptable 0000000000002600 default case"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [2, 0, 140, 0, 1, 7, 1, 1, 12, 11, 0.023641058016058012, ["lea     rsi, aFailedToChange_0; \"failed to change ownership of %s to %s\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     byte ptr [rsp+1B8h+ok], 0", "mov     rsi, rax", "xchg    ax, ax"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~<TAG>,0", "mov~rsi,rax", "xchg~ax,ax"]], [1, 0, 140, 0, 0, 2, 0, 1, 11, 12, 0.00844543188293188, ["mov     [rsp+1B8h+s], 0", "jmp     loc_2C74"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 1, 140, 0, 5, 20, 0, 5, 11, 12, 0.00844543188293188, ["mov     rdi, r14; s", "mov     [rsp+1B8h+ok], r8", "call    _strlen", "mov     r8, [rsp+1B8h+ok]", "mov     [rsp+1B8h+s], rax", "mov     rdi, r8; s", "call    _strlen", "mov     rdx, [rsp+1B8h+s]", "lea     rdi, [rdx+rax+2]; n", "call    xmalloc", "mov     rsi, r14; src", "mov     rdi, rax; dest", "mov     [rsp+1B8h+s], rax", "mov     r14, rax", "call    _stpcpy", "mov     r8, [rsp+1B8h+ok]", "lea     rdi, [rax+1]; dest", "mov     byte ptr [rax], 3Ah ; ':'", "mov     rsi, r8; src", "call    _strcpy"], ["mov~rdi,r14", "mov~<TAG>,r8", "call~FOO", "mov~r8,<TAG>", "mov~[rsp+0],rax", "mov~rdi,r8", "call~FOO", "mov~rdx,[rsp+0]", "lea~rdi,[rdx+0]", "call~FOO", "mov~rsi,r14", "mov~rdi,rax", "mov~[rsp+0],rax", "mov~r14,rax", "call~FOO", "mov~r8,<TAG>", "lea~rdi,[rax+0]", "mov~<TAG>,<STR>", "mov~rsi,r8", "call~FOO"]], [2, 0, 140, 0, 1, 7, 1, 2, 14, 11, 0.006993006993006993, ["lea     rsi, aOwnershipOfSRe_0; \"ownership of %s retained\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     [rsp+1B8h+s], 0", "mov     rsi, rax", "jmp     loc_2C90"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~[rsp+0],0", "mov~rsi,rax", "jmp~FOO"]], [0, 0, 140, 0, 0, 2, 1, 1, 13, 12, 0.020736208236208236, ["test    r14, r14", "jz      loc_2FC8"], ["test~r14,r14", "jz~FOO"]], [0, 0, 140, 0, 0, 3, 1, 1, 6, 9, 0.040306915306915304, ["mov     rax, [rbp+8]", "test    rax, rax", "jz      loc_25D0"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 140, 0, 1, 6, 1, 2, 17, 11, 0.007101058663558663, ["lea     rsi, aChangedGroupOf; \"changed group of %s to %s\\n\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     [rsp+1B8h+s], 0", "mov     rsi, rax", "jmp     loc_2C90"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~[rsp+0],0", "mov~rsi,rax", "jmp~FOO"]], [1, 0, 140, 0, 0, 4, 1, 1, 16, 12, 0.02095231157731157, ["mov     r14, [rsp+1B8h+s]", "mov     edx, 5; category", "test    r14, r14", "jz      loc_2FA0"], ["mov~r14,[rsp+0]", "mov~edx,0", "test~r14,r14", "jz~FOO"]], [1, 0, 140, 0, 2, 9, 1, 3, 10, 8, 0.271029606967107, ["mov     rsi, ent; p", "mov     edx, 4; instr", "mov     rdi, fts; sp_0", "call    fts_set", "mov     rdi, fts; sp_0", "call    fts_read", "test    rax, rax", "mov     ent, rax", "jnz     loc_25E4"], ["mov~rsi,ent", "mov~edx,0", "mov~rdi,fts", "call~FOO", "mov~rdi,fts", "call~FOO", "test~rax,rax", "mov~ent,rax", "jnz~FOO"]], [3, 0, 140, 0, 1, 8, 1, 2, 11, 11, 0.01291116291116291, ["lea     rsi, aFailedToChange_1; \"failed to change ownership of %s\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     byte ptr [rsp+1B8h+ok], 0", "mov     rsi, rax", "mov     [rsp+1B8h+s], 0", "jmp     loc_2C90"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~<TAG>,0", "mov~rsi,rax", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 140, 0, 0, 3, 0, 1, 7, 9, 0.03307109557109557, ["mov     rdi, [rax]", "cmp     [ent+70h], rdi", "jnz     loc_25D0"], ["mov~rdi,<TAG>", "cmp~[ent+0],rdi", "jnz~FOO"]], [0, 0, 4, 0, 0, 4, 1, 1, 3, -1, 0.027195027195027196, ["mov     ent, [rsp+1B8h+var_1A8]", "mov     eax, [rax]", "test    eax, eax", "jnz     loc_2E90"], ["mov~ent,[rsp+0]", "mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [0, 0, 140, 0, 1, 5, 1, 2, 2, 8, 0.4039574430199431, ["mov     rdi, fts; sp_0", "call    fts_read", "test    rax, rax", "mov     rbx, rax", "jz      loc_26A6"], ["mov~rdi,fts", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 140, 0, 0, 3, 0, 1, 8, 9, 0.026563714063714064, ["mov     rax, [rax+8]", "cmp     [ent+68h], rax", "jnz     loc_25D0"], ["mov~rax,[rax+0]", "cmp~[ent+0],rax", "jnz~FOO"]], [1, 0, 140, 0, 0, 3, 0, 1, 14, 12, 0.006628787878787879, ["mov     r14, rsi", "mov     [rsp+1B8h+s], 0", "jmp     loc_2D4C"], ["mov~r14,rsi", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 140, 0, 0, 2, 1, 1, 13, 13, 0.020007770007770008, ["test    r14, r14", "jz      loc_3068"], ["test~r14,r14", "jz~FOO"]], [2, 0, 3, 0, 2, 12, 3, 3, 4, -1, 0.0, ["lea     rsi, aFtsReadFailed; \"fts_read failed\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, rax; format", "mov     rax, [rsp+1B8h+var_1A8]", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error", "mov     byte ptr [rsp+1B8h+ok], 0", "jmp     loc_26B5"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 140, 0, 1, 12, 3, 2, 12, 12, 0.049505471380471386, ["mov     edx, [rsp+1B8h+uid]; owner", "mov     ecx, [rsp+1B8h+gid]; group", "xor     r8d, r8d; flag", "mov     rsi, r10; file", "mov     edi, r11d; fd", "mov     [rsp+1B8h+s], r9", "call    _fchownat", "test    eax, eax", "mov     r9, [rsp+1B8h+s]", "setz    dl", "test    dl, dl", "jz      loc_27ED"], ["mov~edx,[rsp+0]", "mov~ecx,[rsp+0]", "xor~r8d,r8d", "mov~rsi,r10", "mov~edi,r11d", "mov~[rsp+0],r9", "call~FOO", "test~eax,eax", "mov~r9,[rsp+0]", "setz~dl", "test~dl,dl", "jz~FOO"]], [0, 0, 140, 0, 0, 2, 1, 1, 11, 13, 0.17329545454545456, ["test    r14b, r14b", "jnz     loc_29F8"], ["test~r14b,r14b", "jnz~FOO"]], [0, 0, 140, 0, 0, 2, 0, 0, 17, 13, 0.011472902097902098, ["mov     r11d, [fts+2Ch]", "nop     dword ptr [rax]"], ["mov~r11d,[fts+0]", "nop~<TAG>"]], [1, 0, 140, 0, 1, 6, 1, 2, 18, 11, 0.020007770007770008, ["lea     rsi, aChangedOwnersh; \"changed ownership of %s to %s\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rax", "jmp     loc_2C90"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rax", "jmp~FOO"]], [1, 0, 140, 0, 1, 6, 1, 2, 15, 11, 0.020007770007770008, ["lea     rsi, aOwnershipOfSRe; \"ownership of %s retained as %s\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rax", "jmp     loc_2C90"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rax", "jmp~FOO"]], [2, 0, 140, 0, 1, 7, 1, 2, 14, 11, 0.006993006993006993, ["lea     rsi, aGroupOfSRetain; \"group of %s retained as %s\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     [rsp+1B8h+s], 0", "mov     rsi, rax", "jmp     loc_2C90"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~[rsp+0],0", "mov~rsi,rax", "jmp~FOO"]], [1, 0, 140, 0, 1, 7, 2, 2, 17, 11, 0.007101058663558663, ["lea     rsi, aNoChangeToOwne; \"no change to ownership of %s\\n\"", "xor     edi, edi; domainname", "xor     r14d, r14d", "call    _dcgettext", "mov     [rsp+1B8h+s], 0", "mov     rsi, rax", "jmp     loc_2C90"], ["lea~rsi,<TAG>", "xor~edi,edi", "xor~r14d,r14d", "call~FOO", "mov~[rsp+0],0", "mov~rsi,rax", "jmp~FOO"]], [1, 0, 140, 0, 0, 2, 0, 1, 6, 6, 0.22567016317016317, ["cmp     qword ptr [rbp+8], 0", "jnz     loc_2726"], ["cmp~[word ptr [rbp+0],0", "jnz~FOO"]], [1, 0, 140, 0, 0, 2, 0, 1, 5, 6, 0.22936091686091686, ["cmp     dword ptr [rbp+0], 2", "jz      loc_2EC0"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [0, 0, 140, 0, 0, 2, 1, 1, 7, 6, 0.22231934731934733, ["test    dl, dl", "jnz     loc_272A"], ["test~dl,dl", "jnz~FOO"]], [1, 0, 140, 0, 0, 3, 0, 1, 14, 11, 0.03328962703962704, ["mov     esi, [rsp+1B8h+gid]", "cmp     esi, 0FFFFFFFFh", "jz      short loc_2CDB"], ["mov~esi,[rsp+0]", "cmp~esi,0", "jz~FOO"]], [1, 0, 140, 0, 0, 3, 0, 0, 8, 14, 0.21887140637140637, ["lea     ecx, [rax-1]", "cmp     cx, 1", "jbe     short loc_2EE9"], ["lea~ecx,[rax-1]+0]", "cmp~cx,0", "jbe~FOO"]], [2, 0, 140, 0, 0, 3, 1, 1, 9, 14, 0.07561188811188811, ["and     eax, 0FFFFFFFDh", "cmp     ax, 4", "jnz     loc_27A1"], ["and~eax,0", "cmp~ax,0", "jnz~FOO"]], [0, 0, 140, 0, 0, 4, 1, 1, 8, 3, 0.029097060347060347, ["cmp     [r9+20h], ecx", "setz    cl", "test    al, al", "jz      loc_2795"], ["cmp~[r9+0],ecx", "setz~cl", "test~al,al", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 188h", "pop     rbx", "pop     rbp", "pop     r12", "pop     fts", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~fts", "pop~r14", "pop~r15", "retn"]], [2, 0, 140, 0, 0, 8, 1, 1, 9, 11, 0.020007770007770008, ["lea     rdi, filename; \"/\"", "mov     ecx, 2", "mov     rsi, r12", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jz      loc_3188"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,r12", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jz~FOO"]], [0, 0, 140, 0, 0, 4, 1, 1, 12, 13, 0.047494172494172496, ["mov     rsi, [rbp+18h]", "mov     r14, [rbp+20h]", "test    rsi, rsi", "jz      loc_2DD0"], ["mov~rsi,[rbp+0]", "mov~r14,[rbp+0]", "test~rsi,rsi", "jz~FOO"]], [2, 0, 140, 0, 4, 20, 5, 5, 13, 10, 0.009477386039886041, ["lea     rsi, filename; \"/\"", "mov     edi, 1; n", "call    quote_n", "mov     rsi, r12; name", "xor     edi, edi; n", "mov     r14, rax", "call    quote_n", "lea     rsi, aItIsDangerousT; \"it is dangerous to operate recursively \"...", "mov     ent, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r8, r14", "mov     rdx, rax; format", "mov     rcx, rbx", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_2B6A"], ["lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,r12", "xor~edi,edi", "mov~r14,rax", "call~FOO", "lea~rsi,<TAG>", "mov~ent,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r8,r14", "mov~rdx,rax", "mov~rcx,rbx", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 140, 0, 0, 8, 1, 1, 12, 11, 0.02570496632996633, ["lea     rdi, filename; \"/\"", "mov     ecx, 2", "mov     rsi, r12", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_30E0"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,r12", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [0, 0, 140, 0, 0, 3, 1, 1, 9, 3, 0.013718919968919968, ["mov     rdx, [rbp+8]", "test    rdx, rdx", "jz      loc_2795"], ["mov~rdx,[rbp+0]", "test~rdx,rdx", "jz~FOO"]], [1, 0, 140, 0, 0, 2, 0, 1, 5, 7, 0.0006798756798756799, ["cmp     byte ptr [rbp+4], 0; jumptable 0000000000002600 case 6", "jz      loc_25D0"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 0, 140, 0, 0, 2, 0, 1, 13, 14, 0.06704869204869204, ["mov     ecx, 900h", "jmp     loc_2991"], ["mov~ecx,0", "jmp~FOO"]], [0, 0, 140, 0, 0, 3, 0, 1, 10, 3, 0.007308663558663559, ["mov     rax, [rdx]", "cmp     [r9+8], rax", "jnz     loc_2795"], ["mov~rax,<TAG>", "cmp~[r9+0],rax", "jnz~FOO"]], [0, 0, 140, 0, 0, 1, 0, 0, 11, 4, 0.0008498445998445999, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 140, 0, 0, 3, 0, 1, 11, 11, 0.03249401061901062, ["mov     rax, [rsp+1B8h+var_1A8]", "cmp     dword ptr [rax], 5Fh ; '_'", "jz      loc_2F08"], ["mov~rax,[rsp+0]", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 140, 0, 0, 3, 0, 1, 11, 3, 0.044860463610463606, ["mov     rax, [rdx+8]", "cmp     [r9], rax", "jnz     loc_2795"], ["mov~rax,[rdx+0]", "cmp~<TAG>,rax", "jnz~FOO"]], [0, 0, 140, 0, 0, 4, 1, 1, 10, 3, 0.036778036778036774, ["xor     ecx, ecx", "mov     rax, [rdx]", "cmp     [r9+8], rax", "jz      loc_2B10"], ["xor~ecx,ecx", "mov~rax,<TAG>", "cmp~[r9+0],rax", "jz~FOO"]], [2, 0, 140, 0, 0, 9, 1, 1, 4, 6, 0.506021756021756, ["cmp     [rsp+1B8h+required_uid], 0FFFFFFFFh; jumptable 0000000000002600 default case", "mov     r10, [ent+28h]", "lea     r9, [ent+68h]", "movzx   edx, byte ptr [rbp+10h]", "setz    r14b", "cmp     [rsp+1B8h+required_gid], 0FFFFFFFFh", "setz    cl", "and     r14b, cl", "jz      short loc_2726"], ["cmp~[rsp+0],0", "mov~r10,[ent+0]", "lea~r9,[ent+0]", "movzx~edx,[yte ptr [rbp+0]", "setz~r14b", "cmp~[rsp+0],0", "setz~cl", "and~r14b,cl", "jz~FOO"]], [2, 0, 140, 0, 4, 19, 5, 4, 10, 10, 0.006628787878787879, ["lea     rsi, filename; \"/\"", "mov     edi, 1; n", "call    quote_n", "mov     rsi, r12; name", "xor     edi, edi; n", "mov     r14, rax", "call    quote_n", "lea     rsi, aItIsDangerousT; \"it is dangerous to operate recursively \"...", "mov     r12, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, r14", "mov     rdx, rax; format", "mov     rcx, r12", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,r12", "xor~edi,edi", "mov~r14,rax", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r8,r14", "mov~rdx,rax", "mov~rcx,r12", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [0, 0, 140, 0, 0, 2, 1, 1, 5, 5, 0.27695221445221446, ["test    dl, dl", "jz      short loc_2742"], ["test~dl,dl", "jz~FOO"]], [0, 0, 140, 0, 0, 3, 0, 1, 17, 12, 0.055118492618492616, ["mov     rax, [rsp+1B8h+var_D8]", "cmp     [r9], rax", "jnz     loc_2BCE"], ["mov~rax,[rsp+0]", "cmp~<TAG>,rax", "jnz~FOO"]], [0, 0, 140, 0, 0, 4, 0, 1, 16, 12, 0.0794200012950013, ["mov     r9, [rsp+1B8h+s]", "mov     rax, [rsp+1B8h+var_D0]", "cmp     [r9+8], rax", "jz      loc_3130"], ["mov~r9,[rsp+0]", "mov~rax,[rsp+0]", "cmp~[r9+0],rax", "jz~FOO"]], [0, 0, 140, 0, 0, 2, 0, 1, 9, 13, 0.13901029526029526, ["mov     r11d, [fts+2Ch]", "jmp     loc_27AD"], ["mov~r11d,[fts+0]", "jmp~FOO"]], [0, 1, 140, 0, 5, 18, 0, 5, 14, 12, 0.006628787878787879, ["mov     rdi, rsi; s", "mov     [rsp+1B8h+src], rsi", "call    _strlen", "mov     rdi, r14; s", "mov     [rsp+1B8h+s], rax", "call    _strlen", "mov     rdx, [rsp+1B8h+s]", "lea     rdi, [rdx+rax+2]; n", "call    xmalloc", "mov     rsi, [rsp+1B8h+src]; src", "mov     rdi, rax; dest", "mov     [rsp+1B8h+s], rax", "call    _stpcpy", "lea     rdi, [rax+1]; dest", "mov     rsi, r14; src", "mov     byte ptr [rax], 3Ah ; ':'", "call    _strcpy", "mov     r14, [rsp+1B8h+s]"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "call~FOO", "mov~rdi,r14", "mov~[rsp+0],rax", "call~FOO", "mov~rdx,[rsp+0]", "lea~rdi,[rdx+0]", "call~FOO", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~[rsp+0],rax", "call~FOO", "lea~rdi,[rax+0]", "mov~rsi,r14", "mov~<TAG>,<STR>", "call~FOO", "mov~r14,[rsp+0]"]], [2, 0, 140, 0, 2, 11, 4, 3, 14, 9, 0.02570496632996633, ["lea     rsi, aUseNoPreserveR; \"use --no-preserve-root to override this\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     byte ptr [rsp+1B8h+ok], 0", "jmp     loc_25D0"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 140, 0, 3, 13, 4, 3, 13, 10, 0.009477386039886041, ["mov     rdi, r12; name", "call    quote", "lea     rsi, aItIsDangerousT_0; \"it is dangerous to operate recursively \"...", "mov     ent, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,r12", "call~FOO", "lea~rsi,<TAG>", "mov~ent,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [3, 0, 140, 0, 4, 17, 4, 5, 11, 9, 0.020007770007770008, ["lea     rsi, aUseNoPreserveR; \"use --no-preserve-root to override this\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     edx, 4; instr", "mov     rsi, ent; p", "mov     rdi, fts; sp_0", "call    fts_set", "mov     rdi, fts; sp_0", "call    fts_read", "mov     byte ptr [rsp+1B8h+ok], 0", "jmp     loc_25D0"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~edx,0", "mov~rsi,ent", "mov~rdi,fts", "call~FOO", "mov~rdi,fts", "call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 140, 0, 3, 14, 4, 4, 10, 10, 0.006628787878787879, ["mov     rdi, r12; name", "call    quote", "lea     rsi, aItIsDangerousT_0; \"it is dangerous to operate recursively \"...", "mov     r12, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_2920"], ["mov~rdi,r12", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 140, 0, 0, 3, 1, 1, 10, 13, 0.21563714063714062, ["test    dl, dl", "mov     r11d, [fts+2Ch]", "jnz     loc_2968"], ["test~dl,dl", "mov~r11d,[fts+0]", "jnz~FOO"]], [2, 0, 140, 0, 1, 6, 0, 2, 7, 9, 0.0118006993006993, ["mov     qword ptr [ent+18h], 1", "mov     edx, 1; instr", "mov     rsi, ent; p", "mov     rdi, fts; sp_0", "call    fts_set", "jmp     loc_25D0"], ["mov~[word ptr [ent+0],0", "mov~edx,0", "mov~rsi,ent", "mov~rdi,fts", "call~FOO", "jmp~FOO"]], [2, 0, 144, 1, 0, 17, 1, 1, 0, 10, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 188h", "mov     rbx, fs:28h", "mov     [rsp+1B8h+var_40], rbx", "xor     ebx, ebx", "cmp     r8d, 0FFFFFFFFh", "mov     [rsp+1B8h+uid], edx", "mov     [rsp+1B8h+gid], ecx", "mov     [rsp+1B8h+required_uid], r8d", "mov     [rsp+1B8h+required_gid], r9d", "mov     rbp, [rsp+1B8h+chopt]", "jnz     short loc_2594"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,<TAG>", "mov~[rsp+0],rbx", "xor~ebx,ebx", "cmp~r8d,0", "mov~[rsp+0],edx", "mov~[rsp+0],ecx", "mov~[rsp+0],r8d", "mov~[rsp+0],r9d", "mov~rbp,[rsp+0]", "jnz~FOO"]], [1, 0, 143, 0, 0, 2, 0, 1, 1, 10, 9.712509712509713e-05, ["cmp     r9d, 0FFFFFFFFh", "jnz     short loc_2594"], ["cmp~r9d,0", "jnz~FOO"]], [2, 0, 141, 0, 0, 5, 1, 1, 3, 10, 0.0, ["mov     eax, esi", "or      eax, 8", "cmp     dword ptr [rbp+0], 2", "cmovz   esi, eax", "jmp     loc_2594"], ["mov~eax,esi", "or~eax,0", "cmp~[word ptr [rbp+0],0", "cmovz~esi,eax", "jmp~FOO"]], [1, 0, 142, 0, 0, 2, 0, 1, 2, 10, 9.712509712509713e-05, ["cmp     byte ptr [rbp+10h], 0", "jz      loc_2D80"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [0, 0, 140, 0, 1, 9, 0, 2, 16, 12, 0.00846121471121471, ["mov     rax, [rsp+1B8h+var_1A8]", "mov     edi, r14d; fd", "mov     edx, [rax]", "mov     dword ptr [rsp+1B8h+ok], edx", "call    _close", "mov     rax, [rsp+1B8h+var_1A8]", "mov     edx, dword ptr [rsp+1B8h+ok]", "mov     [rax], edx", "jmp     loc_27ED"], ["mov~rax,[rsp+0]", "mov~edi,r14d", "mov~edx,<TAG>", "mov~<TAG>,edx", "call~FOO", "mov~rax,[rsp+0]", "mov~edx,<TAG>", "mov~<TAG>,edx", "jmp~FOO"]], [1, 0, 140, 0, 1, 7, 1, 2, 15, 13, 0.09001473063973063, ["mov     rdx, [rsp+1B8h+stat_buf]; stat_buf", "mov     esi, r14d; fildes", "mov     edi, 1; ver", "mov     [rsp+1B8h+s], r9", "call    ___fxstat", "test    eax, eax", "jnz     loc_2F78"], ["mov~rdx,[rsp+0]", "mov~esi,r14d", "mov~edi,0", "mov~[rsp+0],r9", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 140, 0, 0, 1, 0, 0, 9, 14, 0.13577602952602952, ["movzx   edx, byte ptr [rbp+10h]"], ["movzx~edx,[yte ptr [rbp+0]"]], [0, 0, 140, 0, 1, 12, 1, 1, 14, 13, 0.13526288526288524, ["mov     edx, ecx", "mov     rsi, r10", "mov     edi, r11d", "mov     [rsp+1B8h+s], r9", "mov     [rsp+1B8h+var_16C], ecx", "mov     [rsp+1B8h+var_178], r10", "mov     dword ptr [rsp+1B8h+src], r11d", "call    ___openat_2", "test    eax, eax", "mov     r14d, eax", "mov     r9, [rsp+1B8h+s]", "jns     loc_2B98"], ["mov~edx,ecx", "mov~rsi,r10", "mov~edi,r11d", "mov~[rsp+0],r9", "mov~[rsp+0],ecx", "mov~[rsp+0],r10", "mov~[word ptr [rsp+0],r11d", "call~FOO", "test~eax,eax", "mov~r14d,eax", "mov~r9,[rsp+0]", "jns~FOO"]], [1, 0, 140, 0, 1, 12, 2, 1, 17, 14, 0.015090811965811966, ["or      ecx, 1", "mov     rsi, r10", "mov     edi, r11d", "mov     edx, ecx", "mov     [rsp+1B8h+src], r9", "mov     [rsp+1B8h+s], r10", "call    ___openat_2", "test    eax, eax", "mov     r14d, eax", "mov     r10, [rsp+1B8h+s]", "mov     r9, [rsp+1B8h+src]", "jns     loc_2B98"], ["or~ecx,0", "mov~rsi,r10", "mov~edi,r11d", "mov~edx,ecx", "mov~[rsp+0],r9", "mov~[rsp+0],r10", "call~FOO", "test~eax,eax", "mov~r14d,eax", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "jns~FOO"]], [1, 0, 140, 0, 0, 6, 0, 1, 15, 12, 0.044110981610981606, ["mov     rax, [rsp+1B8h+var_1A8]", "mov     r11d, dword ptr [rsp+1B8h+src]", "mov     r10, [rsp+1B8h+var_178]", "mov     ecx, [rsp+1B8h+var_16C]", "cmp     dword ptr [rax], 0Dh", "jnz     loc_27ED"], ["mov~rax,[rsp+0]", "mov~r11d,[word ptr [rsp+0]", "mov~r10,[rsp+0]", "mov~ecx,[rsp+0]", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 140, 0, 0, 1, 0, 1, 19, 12, 0.007049663299663299, ["jmp     loc_27ED"], ["jmp~FOO"]], [1, 0, 140, 0, 2, 12, 1, 2, 1, 9, 0.027195027195027196, ["xor     edx, edx; compar", "lea     r15, off_B728", "call    xfts_open", "mov     r13, rax", "call    ___errno_location", "mov     [rsp+1B8h+var_1A8], rax", "lea     rax, [rsp+1B8h+var_D8]", "mov     byte ptr [rsp+1B8h+ok], 1", "mov     [rsp+1B8h+stat_buf], rax", "lea     rax, [rsp+1B8h+var_168]", "mov     [rsp+1B8h+var_188], rax", "nop     word ptr [rax+rax+00h]"], ["xor~edx,edx", "lea~r15,<TAG>", "call~FOO", "mov~r13,rax", "call~FOO", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~<TAG>,0", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "nop~[ord ptr [rax+0]"]], [1, 0, 140, 0, 1, 11, 1, 2, 10, 12, 0.18135198135198136, ["mov     edx, [rsp+1B8h+uid]; owner", "mov     ecx, [rsp+1B8h+gid]; group", "mov     r8d, 100h; flag", "mov     rsi, r10; file", "mov     edi, r11d; fd", "mov     [rsp+1B8h+s], r9", "call    _fchownat", "test    eax, eax", "mov     r9, [rsp+1B8h+s]", "setz    dl", "jz      short loc_27E5"], ["mov~edx,[rsp+0]", "mov~ecx,[rsp+0]", "mov~r8d,0", "mov~rsi,r10", "mov~edi,r11d", "mov~[rsp+0],r9", "call~FOO", "test~eax,eax", "mov~r9,[rsp+0]", "setz~dl", "jz~FOO"]], [1, 1, 140, 0, 0, 4, 1, 1, 16, 14, 0.030885780885780884, ["mov     eax, [r9+18h]", "and     eax, 0F000h", "cmp     eax, 8000h", "jz      loc_31BC"], ["mov~eax,[r9+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 140, 0, 0, 3, 0, 1, 18, 13, 0.009477790727790727, ["mov     rax, [rsp+1B8h+var_1A8]", "cmp     dword ptr [rax], 0Dh", "jz      loc_29F1"], ["mov~rax,[rsp+0]", "cmp~<TAG>,0", "jz~FOO"]]], "func_feature": [82, 108, 205, 10, 145, 239, 1, 761, 0.06327, 23, 4], "succs": [[40, 11, 110, 72, 53, 117], [0, 117], [136, 71], [136, 2], [17, 61], [4, 61], [4], [34, 15], [31, 7], [12, 63], [9, 19], [18, 35], [63, 23], [25, 58], [13, 70], [34, 31], [8, 15], [28, 22], [129, 35], [27, 38], [93], [44, 20], [74, 75], [26, 22], [45, 23], [70], [28], [41], [82, 54], [36, 63], [10, 29], [29], [29], [29], [37, 134], [52], [100, 39], [32, 10], [41], [50, 100], [52], [24, 63], [], [104, 42], [93], [63], [63, 55], [48, 46], [116, 46], [136, 46], [80, 21], [65, 50], [5], [52], [64], [65], [136, 3], [56, 103], [5], [137, 90], [59, 111], [63], [61, 6], [81, 85], [63], [106, 63], [67, 63], [68, 63], [63], [57, 47], [57, 69], [115], [117, 78], [64], [73], [73], [64], [76, 95], [83, 85], [64], [96, 79], [1, 84], [64], [85, 86], [89, 43], [1, 84], [105, 85], [94], [123, 87], [43], [33, 10], [90, 60], [90], [64], [64], [64], [64], [99, 119], [97, 119], [101, 14], [65, 51], [122, 102], [128, 122], [49, 109], [], [118, 127], [88, 77], [124], [107, 125], [112, 49], [117, 85], [137], [113, 49], [115], [66, 30], [49, 108], [49, 115], [98, 119], [126], [70, 14], [16, 62], [120, 62], [142], [94], [85], [124], [85], [126], [91, 142], [85], [131, 141], [133, 141], [141], [132, 141], [10], [121, 134], [128], [139, 135], [144, 135], [10, 143], [10], [85], [114, 30], [138, 92], [140, 92]], "fname": "chown_files", "n_num": 145}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[1, 0, 16, 0, 1, 8, 1, 2, 0, 0, 0.10144927536231885, ["mov     r8, version", "mov     version, package", "lea     package, aSS_0; \"%s %s\\n\"", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_32F8"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 18, 0, 0, 2, 1, 1, 4, -1, 0.1956521739130435, ["test    command_name, command_name", "jz      loc_3368"], ["test~command_name,command_name", "jz~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 7, -1, 0.05434782608695652, ["mov     edx, 5; jumptable 0000000000003360 default case", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "jmp     loc_33A0"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [4, 1, 15, 0, 4, 20, 3, 5, 6, -1, 0.24456521739130435, ["lea     rsi, aC; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7D8h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     n_authors, 9; switch 10 cases", "ja      loc_3480; jumptable 0000000000003360 default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,<STR>", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~n_authors,0", "ja~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000003360 case 2", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "jmp     short loc_33A0"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 13, 1, 0, 4, 0, 1, 7, -1, 0.18115942028985507, ["lea     rdx, off_B9C4", "movsxd  rax, dword ptr [rdx+n_authors*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, -1, 0.0, ["call    _abort; jumptable 0000000000003360 case 0"], ["call~FOO"]], [0, 0, 2, 0, 2, 9, 2, 3, 8, -1, 0.07608695652173914, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, authors; args", "mov     rsi, rax; format", "mov     rdi, stream; fp", "call    rpl_vfprintf", "mov     rax, [rsp+38h+var_20]", "xor     rax, fs:28h", "jnz     loc_3496"], ["xor~edi,edi", "call~FOO", "mov~rdx,authors", "mov~rsi,rax", "mov~rdi,stream", "call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000003360 case 9", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "jmp     short loc_33A0"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000003360 case 1", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "jmp     short loc_33A0"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000003360 case 3", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "jmp     short loc_33A0"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000003360 case 4", "lea     rsi, aWrittenBySSSAn; \"Written by %s, %s, %s,\\nand %s.\\n\"", "jmp     loc_33A0"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000003360 case 5", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "jmp     loc_33A0"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000003360 case 6", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "jmp     loc_33A0"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000003360 case 7", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "jmp     loc_33A0"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 8, -1, 0.0006038647342995169, ["lea     rsi, aWrittenBySSSSS; jumptable 0000000000003360 case 8", "mov     edx, 5; category", "nop     dword ptr [rax+00h]"], ["lea~rsi,<TAG>", "mov~edx,0", "nop~[word ptr [rax+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 1, 24, 1, 0, 16, 2, 0, 0, 2, 0.0, ["push    r12", "push    rbp", "mov     r12, authors", "push    rbx", "mov     rbp, stream", "xor     ebx, ebx", "sub     rsp, 20h", "mov     rax, fs:28h", "mov     [rsp+38h+var_20], rax", "xor     eax, eax", "movdqu  xmm0, xmmword ptr [authors]", "movups  xmmword ptr [rsp+38h+tmp_authors.gp_offset], xmm0", "mov     rax, [authors+10h]", "mov     [rsp+38h+tmp_authors.reg_save_area], rax", "mov     authors, rax", "nop     dword ptr [rax]"], ["push~r12", "push~rbp", "mov~r12,authors", "push~rbx", "mov~rbp,stream", "xor~ebx,ebx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movdqu~xmm0,<TAG>", "movups~<TAG>,xmm0", "mov~rax,[authors+0]", "mov~[rsp+0],rax", "mov~authors,rax", "nop~<TAG>"]], [1, 0, 24, 0, 0, 3, 0, 1, 1, 1, 0.08876811594202899, ["mov     eax, [rsp+38h+tmp_authors.gp_offset]", "cmp     eax, 2Fh ; '/'", "ja      loc_349B"], ["mov~eax,<TAG>", "cmp~eax,0", "ja~FOO"]], [1, 0, 24, 1, 0, 2, 0, 1, 4, 2, 0.012681159420289856, ["add     n_authors, 1", "jmp     short loc_32A8"], ["add~n_authors,0", "jmp~FOO"]], [1, 0, 24, 2, 0, 4, 0, 0, 2, 4, 0.05615942028985507, ["mov     edi, eax", "add     eax, 8", "add     rdi, r8", "mov     [rsp+38h+tmp_authors.gp_offset], eax"], ["mov~edi,eax", "add~eax,0", "add~rdi,r8", "mov~<TAG>,eax"]], [1, 0, 24, 0, 0, 2, 0, 1, 3, 3, 0.18659420289855072, ["cmp     qword ptr [rdi], 0", "jz      short loc_32D0"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 24, 0, 0, 4, 0, 1, 2, 0, 0.05615942028985507, ["mov     rdi, [rsp+38h+tmp_authors.overflow_arg_area]", "lea     rax, [rdi+8]", "mov     [rsp+38h+tmp_authors.overflow_arg_area], rax", "jmp     loc_32BF"], ["mov~rdi,[rsp+0]", "lea~rax,[rdi+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 16, 0, 1, 8, 1, 1, 5, -1, 0.10144927536231885, ["mov     r8, package", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     r9, version", "mov     rdi, stream", "mov     version, command_name", "xor     eax, eax", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~r8,package", "lea~package,<TAG>", "mov~r9,version", "mov~rdi,stream", "mov~version,command_name", "xor~eax,eax", "mov~esi,0", "call~FOO"]], [0, 1, 0, 1, 0, 5, 0, 0, 9, -1, 0.0, ["add     rsp, 20h", "pop     n_authors", "pop     stream", "pop     authors", "retn"], ["add~rsp,<STR>", "pop~n_authors", "pop~stream", "pop~authors", "retn"]]], "func_feature": [10, 10, 28, 1, 25, 36, 1, 119, 0.05442, 17, 6], "succs": [[3], [0, 23], [7], [2, 5], [7], [4, 6, 8, 9, 10, 11, 12, 13, 14, 15], [], [16, 24], [7], [7], [7], [7], [7], [7], [7], [7], [], [18], [20, 22], [18], [21], [1, 19], [21], [3], []], "fname": "version_etc_va", "n_num": 25}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[1, 1, 2, 0, 1, 14, 2, 2, 0, 0, 0.3333333333333333, ["mov     rax, fs:28h", "mov     [rsp+0D8h+var_C0], rax", "xor     eax, eax", "lea     rax, [rsp+0D8h+arg_0]", "mov     r8, rsp; authors", "mov     [rsp+0D8h+authors.overflow_arg_area], rax", "lea     rax, [rsp+0D8h+var_B8]", "mov     [rsp+0D8h+authors.gp_offset], 20h ; ' '", "mov     [rsp+0D8h+authors.fp_offset], 30h ; '0'", "mov     [rsp+0D8h+authors.reg_save_area], rax", "call    version_etc_va", "mov     rax, [rsp+0D8h+var_C0]", "xor     rax, fs:28h", "jnz     short loc_3552"], ["mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "mov~r8,rsp", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~<TAG>,<STR>", "mov~[rsp+0],0", "mov~[rsp+0],rax", "call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 4, 1, 0, 5, 1, 1, 0, 2, 0.0, ["sub     rsp, 0D8h", "test    al, al", "mov     [rsp+0D8h+var_98], r8", "mov     [rsp+0D8h+var_90], r9", "jz      short loc_34FC"], ["sub~rsp,0", "test~al,al", "mov~[rsp+0],r8", "mov~[rsp+0],r9", "jz~FOO"]], [0, 0, 3, 0, 0, 8, 0, 0, 1, 2, 0.0, ["movaps  [rsp+0D8h+var_88], xmm0", "movaps  [rsp+0D8h+var_78], xmm1", "movaps  [rsp+0D8h+var_68], xmm2", "movaps  [rsp+0D8h+var_58], xmm3", "movaps  [rsp+0D8h+var_48], xmm4", "movaps  [rsp+0D8h+var_38], xmm5", "movaps  [rsp+0D8h+var_28], xmm6", "movaps  [rsp+0D8h+var_18], xmm7"], ["movaps~[rsp+0],xmm0", "movaps~[rsp+0],xmm1", "movaps~[rsp+0],xmm2", "movaps~[rsp+0],xmm3", "movaps~[rsp+0],xmm4", "movaps~[rsp+0],xmm5", "movaps~[rsp+0],xmm6", "movaps~[rsp+0],xmm7"]], [1, 0, 0, 1, 0, 2, 0, 0, 2, -1, 0.0, ["add     rsp, 0D8h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 3, 4, 12, 5, 5, 1, 30, 0.06667, 1, 2], "succs": [[3, 4], [0, 2], [0], [], []], "fname": "version_etc", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:file_name, file", "retn"], ["mov~<TAG>,file", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[1, 0, 3, 0, 2, 10, 2, 3, 0, 0, 0.06666666666666667, ["lea     rsi, aWriteError; \"write error\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r12, cs:file_name", "mov     rbp, rax", "call    ___errno_location", "mov     rbx, rax", "test    r12, r12", "jz      short loc_35EE"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r12,<TAG>", "mov~rbp,rax", "call~FOO", "mov~rbx,rax", "test~r12,r12", "jz~FOO"]], [0, 0, 6, 0, 1, 7, 1, 2, 0, 2, 0.0, ["mov     rdi, cs:__bss_start; stream", "push    r12", "push    rbp", "push    rbx", "call    close_stream", "test    eax, eax", "jnz     short loc_3599"], ["mov~rdi,<TAG>", "push~r12", "push~rbp", "push~rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 1, 0, 1, 7, 2, 2, 2, 0, 0.016666666666666666, ["mov     esi, [rax]; errnum", "lea     rdx, format+4; format", "mov     rcx, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_35E3"], ["mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     edi, cs:exit_failure; status", "call    __exit"], ["mov~edi,<TAG>", "call~FOO"]], [0, 0, 2, 0, 1, 4, 1, 2, 1, -1, 0.06666666666666667, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jnz     short loc_35E3"], ["mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 1, 0, 2, 9, 2, 2, 2, -1, 0.016666666666666666, ["mov     rdi, r12; arg", "call    quotearg_colon", "mov     esi, [rbx]; errnum", "lea     rdx, format; \"%s: %s\"", "mov     rcx, rax", "mov     r8, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,r12", "call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["pop     rbx", "pop     rbp", "pop     r12", "retn"], ["pop~rbx", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [8, 8, 12, 0, 7, 8, 0, 43, 0.02381, 7, 0], "succs": [[2, 5], [0, 4], [3], [], [3, 6], [3], []], "fname": "close_stdout", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["mov     rax, [ay]", "cmp     [ax_0], rax", "setz    al", "retn"], ["mov~rax,<TAG>", "cmp~<TAG>,rax", "setz~al", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.0, ["xor     eax, eax", "mov     rdx, [ay+8]", "cmp     [ax_0+8], rdx", "jz      short loc_3620"], ["xor~eax,eax", "mov~rdx,[ay+0]", "cmp~[ax_0+0],rdx", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 1, 1, 0, 3, 2, 0, 9, 0.0, 0, 0], "succs": [[], [0, 2], []], "fname": "AD_compare", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 1, 0, 5, 1, 0, 0, 0, 0.0, ["mov     rax, [ax_0+8]", "xor     edx, edx", "div     table_size", "mov     rax, rdx", "retn"], ["mov~rax,[ax_0+0]", "xor~edx,edx", "div~,table_size", "mov~rax,rdx", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 0, 1], "succs": [[]], "fname": "AD_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[1, 0, 4, 0, 1, 6, 1, 2, 0, 0, 0.015476190476190477, ["mov     rsi, [p+28h]; filename", "mov     rdx, sbp; stat_buf", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jnz     loc_368D"], ["mov~rsi,[p+0]", "mov~rdx,sbp", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 5, 0, 1, 5, 0, 2, 3, -1, 0.04325396825396825, ["call    ___errno_location", "mov     r12d, [rax]", "mov     r13, rax", "cmp     r12d, 2", "jz      loc_3770"], ["call~FOO", "mov~r12d,<TAG>", "mov~r13,rax", "cmp~r12d,0", "jz~FOO"]], [1, 0, 15, 0, 1, 5, 1, 2, 2, 5, 0.12619047619047621, ["mov     follow, sbp; stat_buf", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jz      loc_36F7"], ["mov~follow,sbp", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 4, -1, 0.013492063492063494, ["mov     [p+38h], r12d"], ["mov~[p+0],r12d"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, -1, 0.03333333333333334, ["cmp     eax, 0A000h", "jz      loc_37A0"], ["cmp~eax,0", "jz~FOO"]], [1, 1, 9, 0, 0, 4, 1, 1, 3, 4, 0.1265873015873016, ["mov     eax, [p+80h]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_3730"], ["mov~eax,[p+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [2, 0, 1, 0, 0, 3, 0, 1, 5, -1, 0.0035714285714285718, ["mov     dword ptr [r13+0], 0", "mov     eax, 0Dh", "jmp     loc_36C2"], ["mov~[word ptr [r13+0],0", "mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 5, -1, 0.002380952380952381, ["mov     eax, 0Ch", "jmp     loc_36C2"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 12, 0, 1, 9, 1, 2, 3, 5, 0.026190476190476195, ["mov     eax, [sp_0+2Ch]", "mov     follow, rsi; filename", "mov     r8d, 100h; flag", "mov     rcx, sbp; stat_buf", "mov     edi, 1; ver", "mov     esi, eax; fildes", "call    ___fxstatat", "test    eax, eax", "jnz     short loc_3760"], ["mov~eax,[sp_0+0]", "mov~follow,rsi", "mov~r8d,0", "mov~rcx,sbp", "mov~edi,0", "mov~esi,eax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 1, 0, 1, 0, 10, 0, 0, 5, -1, 0.0, ["cmp     eax, 8000h", "setz    al", "add     rsp, 8", "movzx   eax, al", "pop     sbp", "lea     eax, [rax+rax*4+3]", "pop     p", "pop     r12", "pop     r13", "retn"], ["cmp~eax,<STR>", "setz~al", "add~rsp,0", "movzx~eax,al", "pop~sbp", "lea~eax,[rax+0]", "pop~p", "pop~r12", "pop~r13", "retn"]], [2, 0, 5, 0, 0, 3, 0, 1, 4, 3, 0.08134920634920635, ["cmp     byte ptr [p+0F8h], 2Eh ; '.'", "mov     eax, 1", "jnz     short loc_36C2"], ["cmp~[yte ptr [p+0],0", "mov~eax,0", "jnz~FOO"]], [5, 0, 1, 1, 0, 10, 2, 0, 5, -1, 0.007936507936507938, ["lea     rdi, [sbp+8]", "mov     qword ptr [p+68h], 0", "mov     qword ptr [sbp+88h], 0", "xor     eax, eax", "and     rdi, 0FFFFFFFFFFFFFFF8h", "sub     sbp, rdi", "lea     ecx, [rbx+90h]", "shr     ecx, 3", "rep stosq", "mov     eax, 0Ah"], ["lea~rdi,[sbp+0]", "mov~[word ptr [p+0],0", "mov~[word ptr [sbp+0],0", "xor~eax,eax", "and~rdi,0", "sub~sbp,rdi", "lea~ecx,[rbx+0]", "shr~ecx,0", "stosq~<TAG>,", "mov~eax,0"]], [0, 0, 2, 0, 1, 4, 0, 2, 4, -1, 0.008730158730158732, ["call    ___errno_location", "mov     eax, [rax]", "mov     [p+38h], eax", "jmp     err"], ["call~FOO", "mov~eax,<TAG>", "mov~[p+0],eax", "jmp~FOO"]], [1, 1, 3, 0, 0, 4, 1, 1, 6, 1, 0.022619047619047622, ["mov     edx, [p+0F8h]", "and     edx, 0FFFF00h", "cmp     edx, 2E00h", "jnz     loc_36C2"], ["mov~edx,[p+0]", "and~edx,0", "cmp~edx,<STR>", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 5, 2, 0.05714285714285715, ["cmp     byte ptr [p+0F9h], 0", "jnz     short loc_37B0"], ["cmp~[yte ptr [p+0],0", "jnz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 1, 7, 0, 0.002380952380952381, ["jmp     loc_3747"], ["jmp~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 5, -1, 0.0, ["add     rsp, 8", "pop     rbx", "pop     p", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "pop~rbx", "pop~p", "pop~r12", "pop~r13", "retn"]], [3, 0, 1, 1, 0, 5, 1, 1, 6, -1, 0.0035714285714285718, ["cmp     qword ptr [p+50h], 1", "sbb     eax, eax", "and     eax, 0FFFFFFFCh", "add     eax, 5", "jmp     loc_36C2"], ["cmp~[word ptr [p+0],0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "jmp~FOO"]], [1, 0, 19, 0, 0, 2, 1, 1, 1, 6, 0.033730158730158735, ["test    al, 2", "jnz     short loc_3663"], ["test~al,0", "jnz~FOO"]], [2, 0, 21, 1, 0, 11, 0, 1, 0, 7, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbp, p", "lea     rbx, [p+68h]", "sub     rsp, 8", "cmp     qword ptr [rbp+50h], 0", "mov     eax, [sp_0+48h]", "mov     p, [p+28h]; filename", "jnz     short loc_36D0"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbp,p", "lea~rbx,[p+0]", "sub~rsp,0", "cmp~[word ptr [rbp+0],0", "mov~eax,[sp_0+0]", "mov~p,[p+0]", "jnz~FOO"]], [1, 0, 20, 0, 0, 2, 1, 1, 1, 6, 0.01865079365079365, ["test    al, 1", "jz      short loc_36D0"], ["test~al,0", "jz~FOO"]], [0, 0, 18, 0, 0, 2, 1, 1, 2, 6, 0.01626984126984127, ["test    dl, dl", "jnz     short loc_3663"], ["test~dl,dl", "jnz~FOO"]]], "func_feature": [5, 11, 23, 0, 22, 33, 7, 99, 0.02922, 0, 5], "succs": [[3, 6], [0, 3], [1, 5], [11], [9, 7], [10, 4], [16], [16], [12, 5], [], [16, 14], [16], [11], [16, 15], [17, 13], [17], [], [16], [2, 21], [18, 20], [18, 2], [8, 2]], "fname": "fts_stat", "n_num": 22}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.004761904761904762, ["mov     rdi, [sp_0+10h]; ptr"], ["mov~rdi,[sp_0+0]"]], [1, 0, 13, 1, 1, 5, 1, 2, 2, 4, 0.06666666666666668, ["shl     rsi, 3; size", "call    _realloc", "test    rax, rax", "mov     rdi, rax; base", "jz      loc_38A0"], ["shl~rsi,0", "call~FOO", "test~rax,rax", "mov~rdi,rax", "jz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 3, 3, 0.09523809523809525, ["mov     [sp_0+10h], a"], ["mov~[sp_0+0],a"]], [2, 0, 4, 2, 0, 5, 0, 1, 4, -1, 0.1, ["mov     rsi, [ap_0+8]", "add     ap_0, 8", "sub     rcx, 1", "mov     [rdi+10h], rsi", "jnz     short loc_3870"], ["mov~rsi,[ap_0+0]", "add~ap_0,0", "sub~rcx,0", "mov~[rdi+0],rsi", "jnz~FOO"]], [0, 0, 4, 0, 0, 3, 0, 1, 3, -1, 0.1142857142857143, ["mov     rdi, head", "mov     rdx, ap_0", "jmp     short loc_3873"], ["mov~rdi,head", "mov~rdx,ap_0", "jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 5, -1, 0.0, ["mov     rdi, [ap_0]"], ["mov~rdi,<TAG>"]], [0, 0, 1, 0, 0, 1, 0, 0, 5, -1, 0.014285714285714287, ["mov     ap_0, [r8+r12*8-8]"], ["mov~ap_0,[r8+0]"]], [1, 0, 14, 0, 0, 5, 0, 1, 1, 5, 0.01904761904761905, ["lea     head, [nitems+28h]", "mov     rax, 1FFFFFFFFFFFFFFFh", "cmp     rsi, rax", "mov     [sp_0+38h], rsi", "ja      loc_38A4"], ["lea~head,[nitems+0]", "mov~rax,0", "cmp~rsi,rax", "mov~[sp_0+0],rsi", "ja~FOO"]], [1, 0, 15, 1, 0, 12, 0, 0, 0, 3, 0.0, ["push    r13", "push    r12", "mov     r12, nitems", "push    rbp", "push    rbx", "mov     rbp, sp_0", "mov     rbx, head", "sub     rsp, 8", "cmp     [rbp+38h], nitems", "mov     r13, [sp_0+40h]", "mov     sp_0, [sp_0+10h]; ptr", "jnb     short loc_3825"], ["push~r13", "push~r12", "mov~r12,nitems", "push~rbp", "push~rbx", "mov~rbp,sp_0", "mov~rbx,head", "sub~rsp,0", "cmp~[rbp+0],nitems", "mov~r13,[sp_0+0]", "mov~sp_0,[sp_0+0]", "jnb~FOO"]], [2, 0, 6, 1, 1, 9, 0, 2, 2, 1, 0.2, ["mov     rcx, compare; compar", "mov     edx, 8; size", "mov     rsi, nitems; nmemb", "call    _qsort", "mov     r8, [sp_0+10h]", "mov     rcx, nitems", "sub     rcx, 1", "mov     rax, [ap_0]", "jz      short loc_38D0"], ["mov~rcx,compare", "mov~edx,0", "mov~rsi,nitems", "call~FOO", "mov~r8,[sp_0+0]", "mov~rcx,nitems", "sub~rcx,0", "mov~rax,<TAG>", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 2, 0.17142857142857143, ["test    p, p", "jz      short loc_3841"], ["test~p,p", "jz~FOO"]], [1, 0, 8, 1, 0, 5, 1, 1, 3, 2, 0.03333333333333334, ["add     ap_0, 8", "mov     [ap_0-8], p", "mov     p, [p+10h]", "test    p, p", "jnz     short loc_3830"], ["add~ap_0,0", "mov~[ap_0-8]+0],p", "mov~p,[p+0]", "test~p,p", "jnz~FOO"]], [3, 0, 0, 1, 1, 10, 0, 1, 2, -1, 0.0, ["call    free", "mov     qword ptr [sp_0+10h], 0", "mov     qword ptr [sp_0+38h], 0", "add     rsp, 8", "mov     rax, head", "pop     head", "pop     sp_0", "pop     nitems", "pop     compare", "retn"], ["call~FOO", "mov~[word ptr [sp_0+0],0", "mov~[word ptr [sp_0+0],0", "add~rsp,0", "mov~rax,head", "pop~head", "pop~sp_0", "pop~nitems", "pop~compare", "retn"]], [0, 0, 8, 0, 0, 2, 0, 0, 2, 3, 0.02380952380952381, ["mov     rdx, rdi", "nop     dword ptr [rax]"], ["mov~rdx,rdi", "nop~<TAG>"]], [0, 0, 1, 0, 0, 2, 0, 1, 3, 0, 0.0380952380952381, ["mov     rdx, head", "jmp     short loc_388A"], ["mov~rdx,head", "jmp~FOO"]], [2, 0, 0, 1, 0, 7, 0, 0, 4, -1, 0.0, ["mov     qword ptr [rdx+10h], 0", "add     rsp, 8", "pop     p", "pop     sp_0", "pop     r12", "pop     compare", "retn"], ["mov~[word ptr [rdx+0],0", "add~rsp,0", "pop~p", "pop~sp_0", "pop~r12", "pop~compare", "retn"]]], "func_feature": [3, 3, 11, 0, 16, 21, 2, 71, 0.05506, 0, 8], "succs": [[12], [0, 2], [10], [5, 6], [3], [3], [15], [1, 12], [10, 7], [4, 14], [9, 13], [9, 11], [], [11], [15], []], "fname": "fts_sort", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[5, 0, 1, 0, 1, 13, 0, 1, 0, 0, 0.0, ["lea     rdi, [p+0F8h]; dest", "mov     rdx, namelen; n", "mov     rsi, name; src", "call    _memcpy", "mov     rax, [sp_0+20h]", "mov     byte ptr [p+namelen+0F8h], 0", "mov     [p+58h], namelen", "mov     [p+48h], sp_0", "mov     dword ptr [p+38h], 0", "mov     dword ptr [p+62h], 30000h", "mov     [p+30h], rax", "mov     qword ptr [p+18h], 0", "mov     qword ptr [p+20h], 0"], ["lea~rdi,[p+0]", "mov~rdx,namelen", "mov~rsi,name", "call~FOO", "mov~rax,[sp_0+0]", "mov~[yte ptr [p+0],0", "mov~[p+0],namelen", "mov~[p+0],sp_0", "mov~[word ptr [p+0],0", "mov~[word ptr [p+0],0", "mov~[p+0],rax", "mov~[word ptr [p+0],0", "mov~[word ptr [p+0],0"]], [1, 0, 2, 1, 1, 13, 1, 2, 0, 1, 0.0, ["push    r13", "push    r12", "mov     r12, sp_0", "push    rbp", "push    rbx", "lea     sp_0, [namelen+100h]; size", "mov     r13, name", "mov     rbp, namelen", "sub     rsp, 8", "call    _malloc", "test    rax, rax", "mov     rbx, rax", "jz      short loc_3950"], ["push~r13", "push~r12", "mov~r12,sp_0", "push~rbp", "push~rbx", "lea~sp_0,[namelen+0]", "mov~r13,name", "mov~rbp,namelen", "sub~rsp,0", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "mov     rax, p", "pop     p", "pop     namelen", "pop     sp_0", "pop     name", "retn"], ["add~rsp,0", "mov~rax,p", "pop~p", "pop~namelen", "pop~sp_0", "pop~name", "retn"]]], "func_feature": [2, 1, 3, 0, 3, 3, 5, 33, 0.0, 0, 2], "succs": [[2], [0, 2], []], "fname": "fts_alloc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     fd_ring", "retn"], ["pop~fd_ring", "retn"]], [0, 0, 4, 0, 1, 4, 1, 2, 1, 2, 0.5, ["mov     rdi, fd_ring; ir", "call    i_ring_empty", "test    al, al", "jz      short loc_3970"], ["mov~rdi,fd_ring", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 1, 1, 2, 1, 0.16666666666666666, ["mov     rdi, fd_ring; ir", "call    i_ring_pop", "test    eax, eax", "jns     short loc_3990"], ["mov~rdi,fd_ring", "call~FOO", "test~eax,eax", "jns~FOO"]], [0, 0, 4, 0, 0, 3, 0, 1, 0, 3, 0.0, ["push    rbx", "mov     rbx, fd_ring", "jmp     short loc_397C"], ["push~rbx", "mov~rbx,fd_ring", "jmp~FOO"]], [0, 0, 4, 0, 1, 3, 0, 2, 3, 0, 0.0, ["mov     edi, eax; fd", "call    _close", "jmp     short loc_397C"], ["mov~edi,eax", "call~FOO", "jmp~FOO"]]], "func_feature": [3, 2, 6, 0, 5, 6, 4, 16, 0.13333, 0, 0], "succs": [[], [0, 2], [1, 4], [1], [1]], "fname": "fd_ring_clear", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[1, 0, 0, 1, 1, 7, 0, 1, 0, 0, 0.0, ["mov     edi, esi; fd", "call    _close", "mov     [sp_0+2Ch], ebp", "add     rsp, 8", "pop     sp_0", "pop     fd", "retn"], ["mov~edi,esi", "call~FOO", "mov~[sp_0+0],ebp", "add~rsp,0", "pop~sp_0", "pop~fd", "retn"]], [0, 0, 2, 0, 0, 2, 1, 0, 3, -1, 0.05555555555555555, ["test    esi, esi", "jns     short loc_39F0"], ["test~esi,esi", "jns~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 1, 1, 0.013888888888888888, ["cmp     esi, 0FFFFFF9Ch", "jnz     short loc_3A01"], ["cmp~esi,0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 1, 1, 2, -1, 0.10416666666666666, ["test    byte ptr [rbx+48h], 4", "jnz     short loc_39C5"], ["test~[yte ptr [rbx+0],0", "jnz~FOO"]], [1, 0, 0, 1, 1, 7, 0, 1, 3, -1, 0.0, ["mov     edi, eax; fd", "call    _close", "mov     [sp_0+2Ch], ebp", "add     rsp, 8", "pop     sp_0", "pop     fd", "retn"], ["mov~edi,eax", "call~FOO", "mov~[sp_0+0],ebp", "add~rsp,0", "pop~sp_0", "pop~fd", "retn"]], [0, 0, 2, 0, 1, 4, 1, 2, 2, -1, 0.0625, ["lea     rdi, [sp_0+58h]; ir", "call    i_ring_push", "test    eax, eax", "js      short loc_39C5"], ["lea~rdi,[sp_0+0]", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 3, -1, 0.0, ["mov     [sp_0+2Ch], ebp", "add     rsp, 8", "pop     sp_0", "pop     fd", "retn"], ["mov~[sp_0+0],ebp", "add~rsp,0", "pop~sp_0", "pop~fd", "retn"]], [1, 0, 9, 1, 0, 8, 0, 1, 0, 2, 0.0, ["push    rbp", "push    rbx", "mov     ebp, esi", "mov     rbx, sp_0", "sub     rsp, 8", "mov     esi, [sp_0+2Ch]; val", "cmp     esi, ebp", "jnz     short loc_39B7"], ["push~rbp", "push~rbx", "mov~ebp,esi", "mov~rbx,sp_0", "sub~rsp,0", "mov~esi,[sp_0+0]", "cmp~esi,ebp", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 1, -1, 0.16666666666666666, ["test    dl, dl", "jnz     short loc_39D0"], ["test~dl,dl", "jnz~FOO"]]], "func_feature": [4, 4, 9, 0, 10, 12, 6, 40, 0.04028, 0, 4], "succs": [[], [0, 7], [], [9, 2], [1, 7], [], [5, 7], [], [9, 3], [4, 6]], "fname": "cwd_advance_fd", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[1, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["mov     [rbx], p", "mov     eax, 1", "pop     rbx", "retn"], ["mov~<TAG>,p", "mov~eax,0", "pop~rbx", "retn"]], [0, 0, 2, 0, 1, 5, 1, 2, 1, 1, 0.16666666666666666, ["mov     [rsi], new_len", "mov     rsi, new_len; size", "call    _realloc", "test    p, p", "jz      short loc_3A68"], ["mov~<TAG>,new_len", "mov~rsi,new_len", "call~FOO", "test~p,p", "jz~FOO"]], [1, 0, 0, 0, 1, 6, 1, 1, 2, 0, 0.0, ["mov     rdi, [rbx]; ptr", "call    free", "mov     qword ptr [rbx], 0", "xor     eax, eax", "pop     rbx", "retn"], ["mov~rdi,<TAG>", "call~FOO", "mov~<TAG>,0", "xor~eax,eax", "pop~rbx", "retn"]], [2, 0, 0, 0, 2, 7, 1, 2, 1, -1, 0.0, ["call    free", "mov     qword ptr [rbx], 0", "call    ___errno_location", "mov     dword ptr [rax], 24h ; '$'", "xor     eax, eax", "pop     rbx", "retn"], ["call~FOO", "mov~<TAG>,0", "call~FOO", "mov~<TAG>,0", "xor~eax,eax", "pop~rbx", "retn"]], [0, 0, 4, 0, 0, 7, 0, 1, 0, 2, 0.0, ["push    rbx", "mov     rcx, [rsi]", "mov     rbx, rdi", "mov     rdi, [rdi]; ptr", "lea     rax, [rcx+more+100h]", "cmp     rcx, new_len", "ja      short loc_3A48"], ["push~rbx", "mov~rcx,<TAG>", "mov~rbx,rdi", "mov~rdi,<TAG>", "lea~rax,[rcx+0]", "cmp~rcx,new_len", "ja~FOO"]]], "func_feature": [4, 3, 6, 0, 5, 4, 2, 29, 0.03333, 0, 0], "succs": [[], [0, 2], [], [], [1, 3]], "fname": "fts_palloc", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 5, 0, 0, 3, 0, 1, 0, 0, 0.08333333333333334, ["mov     rsi, [ent+70h]", "cmp     [rcx], rsi", "jz      short loc_3B10"], ["mov~rsi,[ent+0]", "cmp~<TAG>,rsi", "jz~FOO"]], [1, 0, 7, 0, 0, 3, 0, 1, 3, 1, 0.08333333333333334, ["mov     rcx, [rsi]", "cmp     qword ptr [rcx+10h], 0", "jz      short loc_3B30"], ["mov~rcx,<TAG>", "cmp~[word ptr [rcx+0],0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 5, 0, 1, 9, 1, 2, 1, 1, 0.015151515151515152, ["mov     rax, [ent+68h]", "mov     rdi, [rcx]; table", "mov     rsi, rsp; entry", "mov     [rsp+28h+obj.dev], rax", "mov     rax, [ent+70h]", "mov     [rsp+28h+obj.ino], rax", "call    hash_delete", "test    found, found", "jz      short loc_3B30"], ["mov~rax,[ent+0]", "mov~rdi,<TAG>", "mov~rsi,rsp", "mov~<TAG>,rax", "mov~rax,[ent+0]", "mov~[rsp+0],rax", "call~FOO", "test~found,found", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 1, 3, 0.06060606060606061, ["mov     rax, [ent+8]", "test    parent, parent", "jz      short loc_3AC2"], ["mov~rax,[ent+0]", "test~parent,parent", "jz~FOO"]], [2, 0, 12, 1, 0, 7, 2, 1, 0, 2, 0.0, ["sub     rsp, 28h", "mov     rcx, rsi", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "and     edi, 102h", "jnz     short loc_3AE0"], ["sub~rsp,0", "mov~rcx,rsi", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "and~edi,0", "jnz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 2, -1, 0.022727272727272728, ["mov     rdi, found; ptr", "call    free", "jmp     short loc_3AC2"], ["mov~rdi,found", "call~FOO", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, -1, 0.13636363636363635, ["mov     rax, [rsp+28h+var_10]", "xor     rax, fs:28h", "jnz     short loc_3B2B"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 2, 2, 0.06818181818181818, ["cmp     qword ptr [parent+50h], 0", "js      short loc_3AC2"], ["cmp~[word ptr [parent+0],0", "js~FOO"]], [0, 0, 4, 0, 0, 3, 0, 1, 5, -1, 0.03787878787878788, ["mov     rsi, [ent+68h]", "cmp     [rcx+8], rsi", "jnz     short loc_3AC2"], ["mov~rsi,[ent+0]", "cmp~[rcx+0],rsi", "jnz~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 6, -1, 0.0, ["mov     ent, [parent+68h]", "mov     parent, [parent+70h]", "mov     [rcx+8], rdx", "mov     [rcx], rax", "jmp     short loc_3AC2"], ["mov~ent,[parent+0]", "mov~parent,[parent+0]", "mov~[rcx+0],rdx", "mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 3, -1, 0.0, ["add     rsp, 28h", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [4, 5, 14, 1, 13, 18, 3, 45, 0.03904, 1, 2], "succs": [[8, 10], [0, 2], [], [2, 6], [8, 9], [3, 4], [8], [], [12, 7], [8, 1], [8, 11], [8], []], "fname": "leave_dir", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 4, -1, 0.043434343434343436, ["mov     rcx, [rsp+0E8h+var_40]", "xor     rcx, fs:28h", "mov     eax, ebp", "jnz     loc_3E00"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebp", "jnz~FOO"]], [0, 0, 26, 0, 0, 2, 1, 1, 2, 1, 0.03215488215488215, ["test    ebx, ebx", "js      loc_3E1B"], ["test~ebx,ebx", "js~FOO"]], [0, 0, 31, 0, 0, 2, 1, 1, 1, 2, 0.02685185185185185, ["test    r10d, r10d", "jz      short loc_3C80"], ["test~r10d,r10d", "jz~FOO"]], [3, 0, 23, 1, 0, 5, 3, 1, 4, -1, 0.05664983164983165, ["shl     eax, 0Dh", "and     eax, 20000h", "or      eax, 10900h", "test    edx, edx", "jz      loc_3BD1"], ["shl~eax,0", "and~eax,0", "or~eax,0", "test~edx,edx", "jz~FOO"]], [1, 1, 24, 0, 0, 4, 1, 1, 7, -1, 0.00505050505050505, ["mov     edx, eax", "mov     r13d, 1", "and     edx, 200h", "jmp     loc_3D58"], ["mov~edx,eax", "mov~r13d,0", "and~edx,<STR>", "jmp~FOO"]], [0, 1, 24, 0, 0, 4, 2, 1, 3, 0, 0.013215488215488215, ["mov     edx, eax", "xor     r13d, r13d", "and     edx, 200h", "jmp     loc_3D58"], ["mov~edx,eax", "xor~r13d,r13d", "and~edx,<STR>", "jmp~FOO"]], [0, 1, 24, 0, 0, 3, 1, 0, 6, -1, 0.00808080808080808, ["mov     eax, [sp_0+48h]", "mov     edx, eax", "and     edx, 200h"], ["mov~eax,[sp_0+0]", "mov~edx,eax", "and~edx,<STR>"]], [0, 0, 21, 0, 1, 8, 0, 2, 5, -1, 0.028451178451178453, ["mov     edi, [sp_0+2Ch]", "mov     rsi, dir_0", "mov     edx, eax", "mov     [rsp+0E8h+dir], dir_0", "call    ___openat_2", "mov     r8, [rsp+0E8h+dir]", "mov     r12d, eax", "jmp     loc_3BEA"], ["mov~edi,[sp_0+0]", "mov~rsi,dir_0", "mov~edx,eax", "mov~[rsp+0],dir_0", "call~FOO", "mov~r8,[rsp+0]", "mov~r12d,eax", "jmp~FOO"]], [0, 0, 3, 0, 1, 4, 1, 2, 4, -1, 0.0007575757575757576, ["mov     edi, ebx; fd", "xor     ebp, ebp", "call    _close", "jmp     loc_3C54"], ["mov~edi,ebx", "xor~ebp,ebp", "call~FOO", "jmp~FOO"]], [0, 0, 5, 0, 0, 2, 1, 0, 3, -1, 0.002525252525252525, ["test    ebx, ebx", "jns     loc_3D00"], ["test~ebx,ebx", "jns~FOO"]], [0, 0, 29, 0, 1, 8, 1, 2, 5, -1, 0.021212121212121213, ["lea     r12, [sp_0+58h]", "mov     [rsp+0E8h+dir], r8", "mov     rdi, r12; ir", "call    i_ring_empty", "test    al, al", "mov     r13d, eax", "mov     r8, [rsp+0E8h+dir]", "jz      short loc_3DB0"], ["lea~r12,[sp_0+0]", "mov~[rsp+0],r8", "mov~rdi,r12", "call~FOO", "test~al,al", "mov~r13d,eax", "mov~r8,[rsp+0]", "jz~FOO"]], [1, 0, 17, 0, 0, 4, 2, 1, 3, -1, 0.02803030303030303, ["xor     r13d, r13d", "test    al, 2", "mov     r12d, ebx", "jnz     loc_3C00"], ["xor~r13d,r13d", "test~al,0", "mov~r12d,ebx", "jnz~FOO"]], [1, 0, 13, 0, 1, 6, 1, 2, 4, -1, 0.09444444444444444, ["lea     rdx, [rsp+0E8h+sb]; stat_buf", "mov     esi, r12d; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "jz      loc_3CD8"], ["lea~rdx,[rsp+0]", "mov~esi,r12d", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 14, 0, 0, 8, 1, 1, 5, -1, 0.025, ["mov     ecx, 3", "mov     rsi, r8", "mov     rdi, r9", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jz      loc_3C00"], ["mov~ecx,0", "mov~rsi,r8", "mov~rdi,r9", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "test~dl,dl", "jz~FOO"]], [0, 0, 14, 0, 0, 1, 0, 1, 8, -1, 0.012121212121212121, ["jmp     loc_3C00"], ["jmp~FOO"]], [0, 0, 14, 0, 0, 1, 0, 1, 5, -1, 0.005555555555555556, ["jmp     loc_3C00"], ["jmp~FOO"]], [0, 0, 14, 0, 0, 1, 0, 0, 8, -1, 0.031818181818181815, ["xchg    ax, ax"], ["xchg~ax,ax"]], [2, 0, 16, 0, 0, 4, 1, 1, 4, -1, 0.017424242424242425, ["test    al, 2", "mov     r12d, ebx", "mov     r13d, 1", "jz      loc_3CA2"], ["test~al,0", "mov~r12d,ebx", "mov~r13d,0", "jz~FOO"]], [0, 0, 11, 0, 0, 3, 0, 1, 6, -1, 0.022222222222222223, ["mov     rax, [rsp+0E8h+sb.st_ino]", "cmp     [r15], rax", "jnz     loc_3CE6"], ["mov~rax,[rsp+0]", "cmp~<TAG>,rax", "jnz~FOO"]], [0, 0, 12, 0, 0, 3, 0, 1, 5, -1, 0.048484848484848485, ["mov     rax, [rsp+0E8h+sb.st_dev]", "cmp     [r14], rax", "jz      loc_3D90"], ["mov~rax,[rsp+0]", "cmp~<TAG>,rax", "jz~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 4, -1, 0.0452020202020202, ["test    r8, r8", "jz      short loc_3CBD"], ["test~r8,r8", "jz~FOO"]], [1, 0, 18, 0, 0, 3, 1, 1, 7, -1, 0.07171717171717172, ["mov     eax, [sp_0+48h]", "test    al, 2", "jz      loc_3C96"], ["mov~eax,[sp_0+0]", "test~al,0", "jz~FOO"]], [1, 0, 5, 0, 0, 1, 0, 0, 5, -1, 0.031060606060606063, ["mov     ebp, 0FFFFFFFFh"], ["mov~ebp,0"]], [1, 0, 6, 0, 1, 3, 0, 2, 6, -1, 0.005303030303030303, ["call    ___errno_location", "mov     dword ptr [rax], 2", "jmp     loc_3C1A"], ["call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 15, 0, 0, 1, 0, 0, 5, -1, 0.011111111111111112, ["lea     r9, dir; \"..\""], ["lea~r9,<TAG>"]], [2, 0, 44, 0, 0, 9, 1, 1, 1, 3, 0.0065656565656565654, ["lea     r9, dir; \"..\"", "mov     ecx, 3", "mov     rsi, dir_0", "mov     sp_0, r9", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     loc_3C40"], ["lea~r9,<TAG>", "mov~ecx,0", "mov~rsi,dir_0", "mov~sp_0,r9", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "test~dl,dl", "jnz~FOO"]], [2, 0, 45, 1, 0, 19, 3, 1, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r15, rdx", "push    r13", "push    r12", "mov     r14, rsi", "push    rbp", "push    rbx", "mov     rbp, sp_0", "mov     ebx, ecx", "sub     rsp, 0B8h", "mov     rax, fs:28h", "mov     [rsp+0E8h+var_40], rax", "xor     eax, eax", "mov     eax, [sp_0+48h]", "mov     r10d, eax", "and     r10d, 4", "test    dir_0, dir_0", "jz      loc_3C40"], ["push~r15", "push~r14", "mov~r15,rdx", "push~r13", "push~r12", "mov~r14,rsi", "push~rbp", "push~rbx", "mov~rbp,sp_0", "mov~ebx,ecx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~eax,[sp_0+0]", "mov~r10d,eax", "and~r10d,0", "test~dir_0,dir_0", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 0, 6, -1, 0.03207070707070707, ["test    ebx, ebx", "jns     short loc_3C54"], ["test~ebx,ebx", "jns~FOO"]], [0, 0, 5, 0, 1, 4, 0, 2, 6, -1, 0.013636363636363636, ["mov     edi, r12d; fd", "call    _fchdir", "mov     ebp, eax", "jmp     loc_3C1F"], ["mov~edi,r12d", "call~FOO", "mov~ebp,eax", "jmp~FOO"]], [1, 0, 3, 0, 1, 7, 2, 2, 6, -1, 0.01893939393939394, ["xor     r13d, 1", "mov     rdi, sp_0; sp_0", "mov     esi, r12d; fd", "movzx   edx, r13b; chdir_down_one", "xor     ebp, ebp", "call    cwd_advance_fd", "jmp     loc_3C54"], ["xor~r13d,0", "mov~rdi,sp_0", "mov~esi,r12d", "movzx~edx,r13b", "xor~ebp,ebp", "call~FOO", "jmp~FOO"]], [1, 0, 7, 0, 0, 2, 1, 1, 5, -1, 0.06136363636363636, ["test    ah, 2", "jnz     short loc_3D10"], ["test~ah,0", "jnz~FOO"]], [0, 0, 39, 0, 0, 2, 1, 1, 2, -1, 0.015572390572390573, ["test    r10d, r10d", "jnz     loc_3C45"], ["test~r10d,r10d", "jnz~FOO"]], [0, 0, 34, 0, 0, 2, 1, 0, 3, -1, 0.02845117845117845, ["test    ebx, ebx", "jns     loc_3E05"], ["test~ebx,ebx", "jns~FOO"]], [0, 0, 27, 0, 1, 8, 1, 2, 6, -1, 0.021717171717171718, ["mov     rdi, r12; ir", "mov     [rsp+0E8h+dir], r8", "call    i_ring_pop", "mov     r12d, eax", "mov     r8, [rsp+0E8h+dir]", "mov     eax, [sp_0+48h]", "test    r12d, r12d", "js      short loc_3DE3"], ["mov~rdi,r12", "mov~[rsp+0],r8", "call~FOO", "mov~r12d,eax", "mov~r8,[rsp+0]", "mov~eax,[sp_0+0]", "test~r12d,r12d", "js~FOO"]], [1, 0, 31, 0, 0, 2, 1, 1, 4, -1, 0.024158249158249157, ["test    ah, 2", "jnz     loc_3D30"], ["test~ah,0", "jnz~FOO"]], [0, 0, 3, 0, 2, 7, 0, 3, 7, -1, 0.0, ["call    ___errno_location", "mov     r13d, [rax]", "mov     rbx, rax", "mov     edi, r12d; fd", "call    _close", "mov     [rbx], r13d", "jmp     short loc_3C54"], ["call~FOO", "mov~r13d,<TAG>", "mov~rbx,rax", "mov~edi,r12d", "call~FOO", "mov~<TAG>,r13d", "jmp~FOO"]], [0, 0, 8, 0, 0, 2, 0, 1, 7, -1, 0.009848484848484848, ["mov     eax, [sp_0+48h]", "jmp     loc_3CBD"], ["mov~eax,[sp_0+0]", "jmp~FOO"]], [2, 0, 15, 0, 0, 4, 1, 1, 7, -1, 0.023232323232323233, ["test    al, 2", "mov     ebx, r12d", "mov     r13d, 1", "jz      loc_3CBD"], ["test~al,0", "mov~ebx,r12d", "mov~r13d,0", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 1, 1, 2, -1, 0.012121212121212121, ["test    ah, 2", "jz      short loc_3C52"], ["test~ah,0", "jz~FOO"]], [4, 0, 22, 1, 0, 4, 2, 0, 5, -1, 0.013552188552188553, ["shl     eax, 0Dh", "mov     r13d, 1", "and     eax, 20000h", "or      eax, 10900h"], ["shl~eax,0", "mov~r13d,0", "and~eax,0", "or~eax,0"]], [0, 0, 3, 0, 0, 1, 1, 0, 3, -1, 0.008333333333333333, ["xor     ebp, ebp"], ["xor~ebp,ebp"]], [0, 0, 21, 0, 1, 7, 1, 1, 5, -1, 0.050841750841750834, ["mov     esi, eax; flags", "mov     rdi, dir_0; file", "xor     eax, eax", "mov     [rsp+0E8h+dir], dir_0", "call    open_safer", "mov     r8, [rsp+0E8h+dir]", "mov     r12d, eax"], ["mov~esi,eax", "mov~rdi,dir_0", "xor~eax,eax", "mov~[rsp+0],dir_0", "call~FOO", "mov~r8,[rsp+0]", "mov~r12d,eax"]], [1, 0, 3, 0, 0, 2, 0, 1, 7, -1, 0.013636363636363636, ["mov     ebp, 0FFFFFFFFh", "jmp     loc_3C54"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 20, 0, 0, 2, 1, 1, 6, -1, 0.09242424242424242, ["test    r12d, r12d", "js      loc_3DF6"], ["test~r12d,r12d", "js~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 0B8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [12, 39, 46, 1, 46, 69, 4, 184, 0.02466, 2, 4], "succs": [[], [0, 45], [12, 6], [2, 39], [8, 42], [4], [4], [4], [44], [1], [9, 41], [34, 7], [13, 21], [20, 23], [13, 31], [13], [13], [13], [16, 14], [24, 37], [24, 19], [25, 31], [17, 21], [28], [23], [14], [32, 3], [26, 3], [1, 36], [28], [1], [29, 30], [33, 39], [18, 35], [5, 38], [40, 11], [1], [31], [15, 31], [41, 10], [42], [1], [44], [1], [43, 22], []], "fname": "fts_safe_changedir", "n_num": 46}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[1, 0, 82, 0, 0, 9, 1, 1, 0, 0, 0.08305847076461768, ["mov     rax, [rsp+88h+level]", "lea     rsi, [p+0F8h]; src", "mov     [p+50h], rax", "mov     rax, [sp_0]", "mov     [p+40h], rdx", "mov     [p+8], rax", "mov     eax, [sp_0+48h]", "test    al, 4", "jnz     loc_4190"], ["mov~rax,[rsp+0]", "lea~rsi,[p+0]", "mov~[p+0],rax", "mov~rax,<TAG>", "mov~[p+0],rdx", "mov~[p+0],rax", "mov~eax,[sp_0+0]", "test~al,0", "jnz~FOO"]], [0, 0, 82, 1, 0, 2, 0, 0, 12, 2, 0.09793853073463267, ["add     rdx, [rsp+88h+len]", "jb      loc_45B5"], ["add~rdx,[rsp+0]", "jb~FOO"]], [3, 0, 1, 0, 2, 10, 2, 3, 14, 0, 0.0006371814092953523, ["mov     rdi, [rsp+88h+dirp]; dirp", "xor     r13d, r13d", "call    _closedir", "mov     rax, [rsp+88h+cur]", "mov     edi, 7", "mov     [rax+60h], di", "or      dword ptr [sp_0+48h], 2000h", "call    ___errno_location", "mov     dword ptr [rax], 24h ; '$'", "jmp     loc_417D"], ["mov~rdi,[rsp+0]", "xor~r13d,r13d", "call~FOO", "mov~rax,[rsp+0]", "mov~edi,0", "mov~[rax+0],di", "or~[word ptr [sp_0+0],0", "call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 4, 0, 1, 4, 1, 2, 13, 1, 0.01278110944527736, ["mov     rdi, p; ptr", "call    free", "test    head, head", "jz      short loc_45D9"], ["mov~rdi,p", "call~FOO", "test~head,head", "jz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 15, 1, 0.00014992503748125936, ["mov     rbp, [rdi+10h]", "call    free", "test    rbp, rbp", "mov     rdi, rbp", "jnz     short loc_45C8"], ["mov~rbp,[rdi+0]", "call~FOO", "test~rbp,rbp", "mov~rdi,rbp", "jnz~FOO"]], [0, 0, 82, 0, 0, 1, 0, 0, 14, 13, 0.04051724137931034, ["mov     [p+28h], rsi"], ["mov~[p+0],rsi"]], [1, 0, 82, 0, 0, 2, 0, 1, 15, 12, 0.0891304347826087, ["cmp     qword ptr [sp_0+40h], 0", "jz      short loc_401D"], ["cmp~[word ptr [sp_0+0],0", "jz~FOO"]], [0, 0, 82, 0, 1, 8, 0, 2, 14, 13, 0.04051724137931034, ["mov     rax, [p+30h]", "mov     rdi, [rsp+88h+cp]; dest", "mov     [p+28h], rax", "mov     rax, [p+58h]", "lea     rdx, [rax+1]; n", "call    _memmove", "mov     eax, [sp_0+48h]", "jmp     loc_400D"], ["mov~rax,[p+0]", "mov~rdi,[rsp+0]", "mov~[p+0],rax", "mov~rax,[p+0]", "lea~rdx,[rax+0]", "call~FOO", "mov~eax,[sp_0+0]", "jmp~FOO"]], [1, 0, 82, 0, 0, 2, 1, 1, 16, 11, 0.07196401799100449, ["test    ah, 4", "jz      loc_4200"], ["test~ah,0", "jz~FOO"]], [1, 0, 2, 0, 1, 7, 0, 2, 3, -1, 0.0, ["mov     rbx, [rsp+88h+cur]", "mov     r9d, 4", "mov     [rbx+60h], r9w", "call    ___errno_location", "mov     eax, [rax]", "mov     [rbx+38h], eax", "jmp     loc_417A"], ["mov~rbx,[rsp+0]", "mov~r9d,0", "mov~[rbx+0],r9w", "call~FOO", "mov~eax,<TAG>", "mov~[rbx+0],eax", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, -1, 0.0011244377811094452, ["cmp     [rsp+88h+type], 3", "jz      loc_4408"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 82, 0, 0, 3, 1, 1, 16, 12, 0.015517241379310345, ["and     eax, 18h", "cmp     eax, 18h", "jz      loc_41E0"], ["and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 82, 0, 0, 2, 0, 1, 14, 4, 0.0075712143928035975, ["movzx   esi, [rsp+88h+doadjust]", "jmp     loc_410C"], ["movzx~esi,[rsp+0]", "jmp~FOO"]], [0, 0, 82, 0, 0, 3, 0, 1, 13, 5, 0.017166416791604196, ["mov     rax, [sp_0+20h]", "cmp     rax, [rsp+88h+maxlen]", "jz      loc_4220"], ["mov~rax,[sp_0+0]", "cmp~rax,[rsp+0]", "jz~FOO"]], [2, 0, 82, 0, 0, 3, 0, 0, 17, 11, 0.012556221889055471, ["mov     eax, 0Bh", "mov     [p+60h], ax", "mov     eax, 2"], ["mov~eax,0", "mov~[p+0],ax", "mov~eax,0"]], [1, 0, 82, 0, 0, 2, 1, 1, 17, 12, 0.003973013493253373, ["test    byte ptr [dp+12h], 0FBh", "jz      loc_4029"], ["test~[yte ptr [dp+0],0", "jz~FOO"]], [1, 2, 116, 1, 0, 16, 1, 1, 0, 14, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, sp_0", "sub     rsp, 58h", "mov     rax, [sp_0]", "mov     [rsp+88h+type], esi", "mov     [rsp+88h+cur], rax", "mov     sp_0, [cur_0+28h]; name", "mov     eax, [sp_0+48h]", "and     eax, 204h", "cmp     eax, 200h", "jz      loc_4130"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,sp_0", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],esi", "mov~[rsp+0],rax", "mov~sp_0,[cur_0+0]", "mov~eax,[sp_0+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [0, 0, 82, 0, 0, 1, 0, 0, 18, 10, 0.02361319340329835, ["mov     [p+98h], rax"], ["mov~[p+0],rax"]], [2, 0, 82, 0, 0, 4, 0, 1, 18, 11, 0.0029610194902548724, ["mov     edx, 0Bh", "mov     eax, 1", "mov     [p+60h], dx", "jmp     loc_4038"], ["mov~edx,0", "mov~eax,0", "mov~[p+0],dx", "jmp~FOO"]], [1, 0, 44, 0, 1, 4, 0, 2, 9, -1, 0.1373063468265868, ["mov     rdi, [rsp+88h+dirp]; dirp", "call    _closedir", "cmp     [rsp+88h+doadjust], 0", "jnz     loc_4480"], ["mov~rdi,[rsp+0]", "call~FOO", "cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 82, 0, 1, 5, 1, 2, 8, 6, 0.25139930034982494, ["mov     rdi, [rsp+88h+dirp]; dirp", "call    _readdir", "test    rax, rax", "mov     rbp, rax", "jz      loc_4230"], ["mov~rdi,[rsp+0]", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [1, 0, 31, 0, 0, 2, 1, 1, 10, -1, 0.1139180409795103, ["test    byte ptr [sp_0+48h], 4", "jz      short loc_426C"], ["test~[yte ptr [sp_0+0],0", "jz~FOO"]], [1, 0, 38, 0, 0, 2, 0, 1, 12, -1, 0.05037481259370315, ["cmp     qword ptr [rax+50h], 0", "js      loc_4245"], ["cmp~[word ptr [rax+0],0", "js~FOO"]], [1, 0, 82, 0, 0, 3, 1, 1, 18, 9, 0.1053223388305847, ["test    head, head", "mov     qword ptr [p+10h], 0", "jz      loc_41B8"], ["test~head,head", "mov~[word ptr [p+0],0", "jz~FOO"]], [0, 0, 82, 0, 1, 6, 1, 2, 17, 10, 0.07361319340329835, ["xor     edx, edx; follow", "mov     rsi, p; p", "mov     rdi, sp_0; sp_0", "call    fts_stat", "mov     [p+60h], ax", "jmp     loc_403F"], ["xor~edx,edx", "mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "mov~[p+0],ax", "jmp~FOO"]], [0, 0, 82, 0, 0, 1, 0, 0, 19, 8, 0.05164917541229385, ["mov     [tail+10h], p"], ["mov~[tail+0],p"]], [0, 1, 104, 1, 0, 11, 3, 1, 5, 10, 0.007496251874062968, ["mov     rcx, [rsp+88h+cur]", "xor     edx, edx", "test    al, 20h", "setz    dl", "add     rdx, rdx", "cmp     [rcx+78h], rdx", "setnz   r12b", "mov     ecx, r12d", "or      cl, bpl", "mov     [rsp+88h+descend], cl", "jz      loc_3F40"], ["mov~rcx,[rsp+0]", "xor~edx,edx", "test~al,<STR>", "setz~dl", "add~rdx,rdx", "cmp~[rcx+0],rdx", "setnz~r12b", "mov~ecx,r12d", "or~cl,bpl", "mov~[rsp+0],cl", "jz~FOO"]], [4, 0, 105, 0, 0, 8, 1, 1, 4, 11, 0.006821589205397301, ["mov     eax, [sp_0+48h]", "cmp     ecx, 3", "mov     r12d, 1", "setz    bpl", "mov     edx, eax", "and     edx, 18h", "cmp     edx, 18h", "jz      loc_4430"], ["mov~eax,[sp_0+0]", "cmp~ecx,0", "mov~r12d,0", "setz~bpl", "mov~edx,eax", "and~edx,0", "cmp~edx,0", "jz~FOO"]], [0, 0, 30, 0, 0, 3, 0, 1, 11, -1, 0.015517241379310345, ["mov     rax, [rsp+88h+len]", "cmp     [sp_0+30h], rax", "jz      short loc_425E"], ["mov~rax,[rsp+0]", "cmp~[sp_0+0],rax", "jz~FOO"]], [0, 0, 103, 0, 0, 1, 0, 1, 6, 14, 0.0008245877061469265, ["jmp     loc_3EB2"], ["jmp~FOO"]], [1, 0, 82, 1, 0, 2, 0, 0, 20, 7, 0.11139430284857571, ["add     [rsp+88h+nitems], 1", "mov     r14, tail"], ["add~[rsp+0],0", "mov~r14,tail"]], [0, 0, 82, 0, 0, 2, 0, 1, 19, 8, 0.05164917541229385, ["mov     head, p", "jmp     loc_4054"], ["mov~head,p", "jmp~FOO"]], [1, 0, 29, 0, 0, 2, 0, 1, 12, -1, 0.0036356821589205394, ["cmp     [rsp+88h+nitems], 0", "jnz     short loc_4264"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 28, 1, 0, 1, 0, 0, 12, -1, 0.0036356821589205394, ["sub     [rsp+88h+cp], 1"], ["sub~[rsp+0],0"]], [1, 0, 27, 0, 0, 2, 0, 0, 13, -1, 0.006071964017991004, ["mov     rax, [rsp+88h+cp]", "mov     byte ptr [rax], 0"], ["mov~rax,[rsp+0]", "mov~<TAG>,0"]], [1, 0, 26, 0, 0, 2, 0, 1, 11, -1, 0.09817591204397808, ["cmp     [rsp+88h+descend], 0", "jz      loc_4318"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 43, 0, 0, 4, 1, 1, 10, -1, 0.046176911544227886, ["mov     rax, [sp_0+8]", "mov     rcx, [sp_0+20h]", "test    rax, rax", "jz      short loc_44B8"], ["mov~rax,[sp_0+0]", "mov~rcx,[sp_0+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 108, 0, 1, 7, 1, 2, 3, 12, 0.0, ["mov     r14, rax", "xor     edx, edx; follow", "mov     rsi, rax; p", "mov     rdi, sp_0; sp_0", "call    fts_stat", "mov     [r14+60h], ax", "jmp     loc_3E87"], ["mov~r14,rax", "xor~edx,edx", "mov~rsi,rax", "mov~rdi,sp_0", "call~FOO", "mov~[r14+0],ax", "jmp~FOO"]], [1, 0, 109, 0, 0, 3, 0, 1, 2, 12, 0.032083958020989505, ["mov     rax, [rsp+88h+cur]", "cmp     word ptr [rax+60h], 0Bh", "jz      loc_4460"], ["mov~rax,[rsp+0]", "cmp~[ord ptr [rax+0],0", "jz~FOO"]], [0, 1, 82, 0, 0, 2, 1, 1, 9, 5, 0.11199400299850074, ["test    byte ptr [sp_0+48h], 20h", "jnz     short loc_4083"], ["test~[yte ptr [sp_0+0],<STR>", "jnz~FOO"]], [1, 0, 25, 0, 0, 2, 0, 1, 12, -1, 0.04595202398800599, ["cmp     [rsp+88h+type], 1", "jz      short loc_42D8"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 82, 0, 0, 2, 0, 1, 10, 5, 0.015067466266866565, ["cmp     byte ptr [rbp+13h], 2Eh ; '.'", "jz      loc_41C0"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [0, 0, 113, 0, 1, 5, 1, 2, 2, 13, 0.008245877061469264, ["mov     edi, eax; fd", "call    _fdopendir", "test    rax, rax", "mov     [rsp+88h+dirp], rax", "jnz     loc_3E77"], ["mov~edi,eax", "call~FOO", "test~rax,rax", "mov~[rsp+0],rax", "jnz~FOO"]], [0, 0, 112, 0, 1, 4, 1, 2, 1, 13, 0.008245877061469264, ["call    _opendir", "test    rax, rax", "mov     [rsp+88h+dirp], rax", "jz      loc_416F"], ["call~FOO", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 24, 0, 0, 2, 0, 1, 13, -1, 0.0003748125937031484, ["cmp     [rsp+88h+nitems], 0", "jz      short loc_42D8"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 13, -1, 0.02192653673163418, ["cmp     qword ptr [sp_0+40h], 0", "jz      loc_417D"], ["cmp~[word ptr [sp_0+0],0", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 12, -1, 0.0578335832083958, ["cmp     [rsp+88h+nitems], 0", "jnz     loc_4286"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 42, 0, 0, 1, 0, 0, 11, -1, 0.012818590704647675, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [1, 0, 107, 0, 0, 3, 0, 1, 3, 11, 0.047526236881559214, ["mov     ecx, [rsp+88h+type]", "cmp     ecx, 2", "jz      loc_3F38"], ["mov~ecx,[rsp+0]", "cmp~ecx,0", "jz~FOO"]], [2, 0, 82, 0, 0, 5, 2, 1, 7, 7, 0.11181909045477263, ["mov     [rsp+88h+doadjust], 0", "xor     r14d, r14d", "mov     [rsp+88h+nitems], 0", "xor     r13d, r13d", "jmp     loc_405D"], ["mov~[rsp+0],0", "xor~r14d,r14d", "mov~[rsp+0],0", "xor~r13d,r13d", "jmp~FOO"]], [1, 0, 82, 0, 0, 2, 0, 1, 11, 6, 0.014692653673163417, ["cmp     byte ptr [rbp+14h], 0", "jz      loc_405D"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [0, 0, 82, 0, 0, 1, 0, 1, 13, 7, 0.0035982008995502244, ["jmp     loc_405D"], ["jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 14, -1, 0.013343328335832082, ["mov     rax, [rsp+88h+nitems]", "cmp     rax, 1", "jbe     loc_417D"], ["mov~rax,[rsp+0]", "cmp~rax,0", "jbe~FOO"]], [0, 0, 42, 0, 0, 4, 0, 1, 12, -1, 0.01169415292353823, ["mov     rdx, [rax+28h]", "lea     rsi, [rax+0F8h]", "cmp     rdx, rsi", "jz      short loc_44AB"], ["mov~rdx,[rax+0]", "lea~rsi,[rax+0]", "cmp~rdx,rsi", "jz~FOO"]], [0, 0, 42, 0, 0, 4, 1, 1, 13, -1, 0.008845577211394302, ["mov     [rax+30h], rcx", "mov     rax, [rax+10h]", "test    rax, rax", "jnz     short loc_4490"], ["mov~[rax+0],rcx", "mov~rax,[rax+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 0, 14, 2, 0.004197901049475262, ["mov     rdi, head; ptr", "nop     dword ptr [rax]"], ["mov~rdi,head", "nop~<TAG>"]], [0, 0, 82, 0, 2, 10, 1, 3, 10, 4, 0.10209895052473762, ["lea     r12, [rbp+13h]", "mov     rdi, r12; s", "call    _strlen", "mov     rsi, r12; name", "mov     rdx, rax; namelen", "mov     rdi, sp_0; sp_0", "call    fts_alloc", "test    rax, rax", "mov     r15, rax", "jz      mem1"], ["lea~r12,[rbp+0]", "mov~rdi,r12", "call~FOO", "mov~rsi,r12", "mov~rdx,rax", "mov~rdi,sp_0", "call~FOO", "test~rax,rax", "mov~r15,rax", "jz~FOO"]], [1, 0, 82, 0, 0, 2, 0, 1, 12, 5, 0.006371814092953522, ["cmp     word ptr [rbp+14h], 2Eh ; '.'", "jnz     loc_4083"], ["cmp~[ord ptr [rbp+0],0", "jnz~FOO"]], [0, 0, 42, 2, 0, 3, 0, 0, 13, -1, 0.0, ["sub     rdx, [rax+30h]", "add     rdx, rcx", "mov     [rax+28h], rdx"], ["sub~rdx,[rax+0]", "add~rdx,rcx", "mov~[rax+0],rdx"]], [0, 1, 1, 1, 0, 11, 0, 1, 15, -1, 0.006746626686656671, ["add     rsp, 58h", "mov     rsi, r13", "mov     rdi, sp_0", "pop     sp_0", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "mov     rdx, rax", "jmp     fts_sort"], ["add~rsp,<STR>", "mov~rsi,r13", "mov~rdi,sp_0", "pop~sp_0", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "mov~rdx,rax", "jmp~FOO"]], [0, 0, 82, 0, 1, 5, 0, 1, 11, 3, 0.08650674662668666, ["mov     rdi, r12; s", "call    _strlen", "cmp     rax, [rsp+88h+maxlen]", "mov     rdx, rax", "jb      loc_3FD8"], ["mov~rdi,r12", "call~FOO", "cmp~rax,[rsp+0]", "mov~rdx,rax", "jb~FOO"]], [0, 0, 38, 0, 0, 2, 0, 1, 11, -1, 0.03943028485757121, ["mov     rax, head", "jmp     short loc_44C3"], ["mov~rax,head", "jmp~FOO"]], [0, 0, 38, 0, 0, 1, 0, 0, 15, -1, 0.010344827586206896, ["mov     rax, rdx"], ["mov~rax,rdx"]], [0, 0, 38, 0, 0, 4, 1, 1, 14, -1, 0.014842578710644677, ["mov     rdx, [rax+10h]", "mov     [rax+30h], rcx", "test    rdx, rdx", "jnz     short loc_44C0"], ["mov~rdx,[rax+0]", "mov~[rax+0],rcx", "test~rdx,rdx", "jnz~FOO"]], [0, 0, 38, 0, 0, 2, 0, 1, 15, -1, 0.0, ["mov     rdx, [rax+8]", "jmp     short loc_44C0"], ["mov~rdx,[rax+0]", "jmp~FOO"]], [1, 0, 102, 0, 1, 5, 1, 2, 5, 13, 0.014392803598200898, ["mov     rdi, [rsp+88h+dirp]; dirp", "call    _dirfd", "test    byte ptr [sp_0+49h], 2", "mov     r13d, eax", "jz      loc_43C8"], ["mov~rdi,[rsp+0]", "call~FOO", "test~[yte ptr [sp_0+0],0", "mov~r13d,eax", "jz~FOO"]], [1, 0, 25, 0, 0, 3, 1, 1, 8, -1, 0.02669915042478761, ["xor     r13d, r13d", "cmp     [rsp+88h+descend], 0", "jz      short loc_4324"], ["xor~r13d,r13d", "cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 29, 0, 0, 2, 1, 1, 7, -1, 0.050624687656171924, ["test    byte ptr [sp_0+48h], 4", "jz      loc_42BC"], ["test~[yte ptr [sp_0+0],0", "jz~FOO"]], [0, 0, 101, 0, 0, 2, 1, 0, 6, 12, 0.00748375812093953, ["test    eax, eax", "jns     loc_43BE"], ["test~eax,eax", "jns~FOO"]], [1, 0, 24, 0, 0, 3, 1, 0, 9, -1, 0.030534732633683143, ["mov     [rsp+88h+nitems], 0", "xor     r13d, r13d", "nop     word ptr [rax+rax+00h]"], ["mov~[rsp+0],0", "xor~r13d,r13d", "nop~[ord ptr [rax+0]"]], [2, 0, 27, 0, 0, 4, 0, 1, 8, -1, 0.02220139930034982, ["cmp     [rsp+88h+descend], 0", "mov     level_0, [rsp+88h+cp]", "mov     byte ptr [rax-1], 0", "jnz     loc_42C6"], ["cmp~[rsp+0],0", "mov~level_0,[rsp+0]", "mov~[yte ptr [rax-1]+0],0", "jnz~FOO"]], [0, 0, 96, 0, 0, 2, 1, 1, 7, 11, 0.027486256871564217, ["test    bpl, bpl", "jz      short loc_3EEA"], ["test~bpl,bpl", "jz~FOO"]], [0, 0, 99, 0, 0, 2, 1, 1, 6, 12, 0.020477261369315342, ["test    r13d, r13d", "js      loc_3ED1"], ["test~r13d,r13d", "js~FOO"]], [0, 0, 98, 0, 1, 9, 2, 2, 7, 11, 0.012543728135932034, ["mov     dir_fd, [rsp+88h+cur]", "xor     r8d, r8d; dir", "mov     ecx, r13d; fd", "mov     rdi, sp_0; sp_0", "lea     rdx, [rax+70h]; p", "lea     rsi, [rax+68h]; p", "call    fts_safe_changedir", "test    eax, eax", "jnz     loc_3ED1"], ["mov~dir_fd,[rsp+0]", "xor~r8d,r8d", "mov~ecx,r13d", "mov~rdi,sp_0", "lea~rdx,[rax+0]", "lea~rsi,[rax+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 95, 0, 0, 2, 1, 1, 8, 11, 0.0011994002998500749, ["test    r12b, r12b", "jz      short loc_3EEA"], ["test~r12b,r12b", "jz~FOO"]], [0, 0, 38, 0, 0, 4, 0, 1, 13, -1, 0.019340329835082458, ["mov     rdx, [rax+28h]", "lea     rsi, [rax+0F8h]", "cmp     rdx, rsi", "jz      short loc_44E9"], ["mov~rdx,[rax+0]", "lea~rsi,[rax+0]", "cmp~rdx,rsi", "jz~FOO"]], [1, 0, 90, 1, 0, 5, 0, 0, 6, 9, 0.0, ["mov     rax, [sp_0+20h]", "add     rax, len_0", "lea     rcx, [cp_0+1]", "mov     byte ptr [cp_0], 2Fh ; '/'", "mov     [rsp+88h+cp], rcx"], ["mov~rax,[sp_0+0]", "add~rax,len_0", "lea~rcx,[cp_0+0]", "mov~<TAG>,0", "mov~[rsp+0],rcx"]], [3, 0, 91, 0, 0, 10, 1, 1, 5, 9, 0.1494752623688156, ["mov     rcx, [rsp+88h+cur]", "mov     [rsp+88h+cp], 0", "mov     rsi, [rcx+40h]", "mov     rcx, [rcx+30h]", "cmp     byte ptr [rcx+rsi-1], 2Fh ; '/'", "lea     rdx, [rsi-1]", "cmovnz  rdx, rsi", "test    al, 4", "mov     [rsp+88h+var_48], rdx", "jz      short loc_3F7F"], ["mov~rcx,[rsp+0]", "mov~[rsp+0],0", "mov~rsi,[rcx+0]", "mov~rcx,[rcx+0]", "cmp~[yte ptr [rcx+0],0", "lea~rdx,[rsi-1]+0]", "cmovnz~rdx,rsi", "test~al,0", "mov~[rsp+0],rdx", "jz~FOO"]], [1, 0, 23, 0, 0, 3, 0, 1, 10, -1, 0.06959020489755126, ["mov     rax, [rsp+88h+cur]", "cmp     qword ptr [rax+50h], 0", "jnz     loc_453B"], ["mov~rax,[rsp+0]", "cmp~[word ptr [rax+0],0", "jnz~FOO"]], [0, 0, 82, 0, 1, 10, 1, 2, 12, 6, 0.015854572713643177, ["mov     rcx, [sp_0+20h]", "lea     rsi, [sp_0+30h]; sp_0", "lea     rdi, [sp_0+20h]; sp_0", "mov     [rsp+88h+maxlen], rcx", "mov     oldaddr_0, [rsp+88h+var_48]", "lea     rdx, [rcx+rax+2]; more", "call    fts_palloc", "test    al, al", "mov     esi, eax", "jz      mem1"], ["mov~rcx,[sp_0+0]", "lea~rsi,[sp_0+0]", "lea~rdi,[sp_0+0]", "mov~[rsp+0],rcx", "mov~oldaddr_0,[rsp+0]", "lea~rdx,[rcx+0]", "call~FOO", "test~al,al", "mov~esi,eax", "jz~FOO"]], [0, 0, 38, 2, 0, 3, 0, 0, 14, -1, 0.0, ["sub     rdx, [rax+30h]", "add     rdx, rcx", "mov     [rax+28h], rdx"], ["sub~rdx,[rax+0]", "add~rdx,rcx", "mov~[rax+0],rdx"]], [0, 0, 94, 0, 1, 4, 0, 1, 9, 11, 0.0, ["call    ___errno_location", "mov     rcx, [rsp+88h+cur]", "mov     eax, [rax]", "mov     [rcx+38h], eax"], ["call~FOO", "mov~rcx,[rsp+0]", "mov~eax,<TAG>", "mov~[rcx+0],eax"]], [1, 0, 21, 0, 1, 5, 1, 2, 11, -1, 0.02851074462768614, ["lea     rdi, [sp_0+58h]; fd_ring", "call    fd_ring_clear", "mov     eax, [sp_0+48h]", "test    al, 4", "jnz     short loc_4318"], ["lea~rdi,[sp_0+0]", "call~FOO", "mov~eax,[sp_0+0]", "test~al,0", "jnz~FOO"]], [1, 0, 20, 0, 0, 2, 1, 1, 12, -1, 0.012668665667166417, ["test    ah, 2", "jz      loc_45A6"], ["test~ah,0", "jz~FOO"]], [3, 0, 89, 3, 0, 13, 0, 1, 6, 8, 0.15952023988005995, ["mov     rax, [rsp+88h+var_48]", "mov     rcx, [sp_0+30h]", "add     rax, 1", "sub     rcx, rax", "mov     [rsp+88h+len], rax", "mov     len_0, [rsp+88h+cur]", "mov     [rsp+88h+maxlen], rcx", "mov     rax, [rax+50h]", "mov     [rsp+88h+nitems], rax", "add     rax, 1", "cmp     [rsp+88h+dirp], 0", "mov     [rsp+88h+level], rax", "jz      loc_44FC"], ["mov~rax,[rsp+0]", "mov~rcx,[sp_0+0]", "add~rax,0", "sub~rcx,rax", "mov~[rsp+0],rax", "mov~len_0,[rsp+0]", "mov~[rsp+0],rcx", "mov~rax,[rax+0]", "mov~[rsp+0],rax", "add~rax,0", "cmp~[rsp+0],0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 82, 1, 0, 4, 1, 0, 14, 4, 0.0075712143928035975, ["add     rax, [rsp+88h+len]", "test    byte ptr [sp_0+48h], 4", "cmovz   rax, [rsp+88h+cp]", "mov     [rsp+88h+cp], rax"], ["add~rax,[rsp+0]", "test~[yte ptr [sp_0+0],0", "cmovz~rax,[rsp+0]", "mov~[rsp+0],rax"]], [2, 0, 13, 0, 1, 5, 0, 1, 13, -1, 0.0008995502248875561, ["mov     edx, 1; chdir_down_one", "mov     esi, 0FFFFFF9Ch; fd", "mov     rdi, sp_0; sp_0", "call    cwd_advance_fd", "nop     dword ptr [rax+rax+00h]"], ["mov~edx,0", "mov~esi,0", "mov~rdi,sp_0", "call~FOO", "nop~[word ptr [rax+0]"]], [4, 0, 93, 0, 1, 14, 2, 2, 8, 10, 0.045027486256871564, ["mov     rax, [rsp+88h+cur]", "mov     rdi, [rsp+88h+dirp]; dirp", "or      word ptr [rax+62h], 1", "call    _closedir", "mov     eax, [sp_0+48h]", "mov     edx, r13d", "mov     [rsp+88h+dirp], 0", "not     edx", "shr     edx, 1Fh", "mov     ecx, eax", "shr     ecx, 9", "and     cl, dl", "mov     [rsp+88h+descend], cl", "jz      short loc_3F40"], ["mov~rax,[rsp+0]", "mov~rdi,[rsp+0]", "or~[ord ptr [rax+0],0", "call~FOO", "mov~eax,[sp_0+0]", "mov~edx,r13d", "mov~[rsp+0],0", "not~edx", "shr~edx,0", "mov~ecx,eax", "shr~ecx,0", "and~cl,dl", "mov~[rsp+0],cl", "jz~FOO"]], [0, 0, 17, 0, 0, 2, 1, 1, 12, -1, 0.027811094452773612, ["test    al, al", "jz      loc_4318"], ["test~al,al", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 9, -1, 0.005847076461769115, ["cmp     [rsp+88h+type], 3", "jnz     loc_417A"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 7, 0, 0, 1, 1, 0, 10, -1, 0.0007496251874062968, ["xor     r13d, r13d"], ["xor~r13d,r13d"]], [1, 0, 7, 0, 0, 2, 0, 1, 9, -1, 0.03665667166416792, ["cmp     [rsp+88h+type], 3", "jz      loc_4528"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 82, 1, 1, 8, 0, 2, 15, 3, 0.0232383808095952, ["mov     rax, [sp_0+30h]", "sub     rax, [rsp+88h+len]", "mov     rdi, r12; s", "mov     [rsp+88h+doadjust], sil", "mov     [rsp+88h+maxlen], rax", "call    _strlen", "mov     rdx, rax", "jmp     loc_3FD8"], ["mov~rax,[sp_0+0]", "sub~rax,[rsp+0]", "mov~rdi,r12", "mov~[rsp+0],sil", "mov~[rsp+0],rax", "call~FOO", "mov~rdx,rax", "jmp~FOO"]], [1, 0, 92, 0, 1, 5, 0, 2, 9, 10, 0.0, ["mov     edi, r13d; fd", "call    _close", "mov     [rsp+88h+descend], 0", "mov     eax, [sp_0+48h]", "jmp     short loc_3F40"], ["mov~edi,r13d", "call~FOO", "mov~[rsp+0],0", "mov~eax,[sp_0+0]", "jmp~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 10, -1, 0.025187406296851574, ["test    r13, r13", "mov     rdi, r13; ptr", "jz      loc_417A"], ["test~r13,r13", "mov~rdi,r13", "jz~FOO"]], [1, 0, 6, 0, 0, 4, 0, 1, 10, -1, 0.0010494752623688155, ["mov     rax, [rsp+88h+cur]", "mov     ecx, 6", "mov     [rax+60h], cx", "jmp     loc_432F"], ["mov~rax,[rsp+0]", "mov~ecx,0", "mov~[rax+0],cx", "jmp~FOO"]], [1, 0, 92, 0, 0, 2, 0, 0, 4, 10, 0.04767616191904048, ["mov     eax, [sp_0+48h]", "mov     [rsp+88h+descend], 0"], ["mov~eax,[sp_0+0]", "mov~[rsp+0],0"]], [0, 0, 114, 0, 1, 8, 3, 2, 1, 14, 0.0002998500749625187, ["mov     type_0, rdi; file", "mov     edi, [sp_0+2Ch]; fd", "xor     edx, edx; oflag", "xor     eax, eax", "call    _openat", "test    eax, eax", "mov     ebp, eax", "js      short loc_416F"], ["mov~type_0,rdi", "mov~edi,[sp_0+0]", "xor~edx,edx", "xor~eax,eax", "call~FOO", "test~eax,eax", "mov~ebp,eax", "js~FOO"]], [0, 0, 4, 0, 1, 5, 1, 2, 12, -1, 0.007196401799100449, ["mov     rbx, [rdi+10h]", "call    free", "test    rbx, rbx", "mov     rdi, rbx", "jnz     short loc_4340"], ["mov~rbx,[rdi+0]", "call~FOO", "test~rbx,rbx", "mov~rdi,rbx", "jnz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 11, -1, 0.01394302848575712, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 2, 0, 0, 1, 0, 1, 13, -1, 0.0002998500749625187, ["jmp     loc_417A"], ["jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 14, -1, 0.013043478260869565, ["mov     rdi, r13; ptr", "xchg    ax, ax"], ["mov~rdi,r13", "xchg~ax,ax"]], [2, 0, 5, 0, 0, 6, 2, 1, 13, -1, 0.020052473763118438, ["mov     rax, [rsp+88h+cur]", "mov     esi, 7", "mov     [rax+60h], si", "or      dword ptr [sp_0+48h], 2000h", "test    r13, r13", "jz      loc_417A"], ["mov~rax,[rsp+0]", "mov~esi,0", "mov~[rax+0],si", "or~[word ptr [sp_0+0],0", "test~r13,r13", "jz~FOO"]], [1, 0, 18, 0, 1, 10, 1, 1, 11, -1, 0.030659670164917538, ["mov     rax, [rsp+88h+cur]", "lea     r8, dir; \"..\"", "mov     ecx, 0FFFFFFFFh; fd", "mov     rdi, sp_0; sp_0", "mov     rax, [rax+8]", "lea     rdx, [rax+70h]; p", "lea     rsi, [rax+68h]; p", "call    fts_safe_changedir", "test    eax, eax", "setnz   al"], ["mov~rax,[rsp+0]", "lea~r8,<TAG>", "mov~ecx,0", "mov~rdi,sp_0", "mov~rax,[rax+0]", "lea~rdx,[rax+0]", "lea~rsi,[rax+0]", "call~FOO", "test~eax,eax", "setnz~al"]], [0, 0, 18, 0, 1, 5, 1, 2, 13, -1, 0.0008245877061469265, ["mov     edi, [sp_0+28h]; fd", "call    _fchdir", "test    eax, eax", "setnz   al", "jmp     short loc_4565"], ["mov~edi,[sp_0+0]", "call~FOO", "test~eax,eax", "setnz~al", "jmp~FOO"]], [1, 0, 92, 0, 0, 3, 0, 1, 8, 10, 0.01839080459770115, ["mov     [rsp+88h+descend], 1", "mov     eax, [sp_0+48h]", "jmp     loc_3F40"], ["mov~[rsp+0],0", "mov~eax,[sp_0+0]", "jmp~FOO"]], [0, 0, 4, 0, 2, 6, 0, 2, 3, -1, 0.0002998500749625187, ["call    ___errno_location", "mov     r12d, [rax]", "mov     sp_0, rax", "mov     edi, ebp; fd", "call    _close", "mov     [rbx], r12d"], ["call~FOO", "mov~r12d,<TAG>", "mov~sp_0,rax", "mov~edi,ebp", "call~FOO", "mov~<TAG>,r12d"]], [0, 0, 4, 0, 2, 7, 1, 3, 11, -1, 0.014205397301349324, ["call    ___errno_location", "mov     rdi, p; ptr", "mov     r12, rax", "mov     r14d, [rax]", "call    free", "test    head, head", "jz      short loc_4391"], ["call~FOO", "mov~rdi,p", "mov~r12,rax", "mov~r14d,<TAG>", "call~FOO", "test~head,head", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 1, 0, 3, -1, 0.0033358320839580206, ["xor     r13d, r13d"], ["xor~r13d,r13d"]], [0, 0, 2, 0, 0, 1, 0, 1, 16, -1, 0.0002998500749625187, ["jmp     loc_417A"], ["jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 0, 12, -1, 0.004197901049475262, ["mov     rdi, head; ptr", "nop     dword ptr [rax+rax+00h]"], ["mov~rdi,head", "nop~[word ptr [rax+0]"]], [0, 1, 0, 1, 0, 9, 0, 0, 4, -1, 0.0, ["add     rsp, 58h", "mov     rax, r13", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "mov~rax,r13", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [2, 0, 1, 0, 1, 9, 2, 2, 12, -1, 0.002061469265367316, ["mov     rdi, [rsp+88h+dirp]; dirp", "xor     r13d, r13d", "call    _closedir", "mov     rax, [rsp+88h+cur]", "mov     r8d, 7", "mov     [rax+60h], r8w", "or      dword ptr [sp_0+48h], 2000h", "mov     [r12], r14d", "jmp     loc_417D"], ["mov~rdi,[rsp+0]", "xor~r13d,r13d", "call~FOO", "mov~rax,[rsp+0]", "mov~r8d,0", "mov~[rax+0],r8w", "or~[word ptr [sp_0+0],0", "mov~<TAG>,r14d", "jmp~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 13, -1, 0.00014992503748125936, ["mov     rbp, [rdi+10h]", "call    free", "test    rbp, rbp", "mov     rdi, rbp", "jnz     short loc_4380"], ["mov~rbp,[rdi+0]", "call~FOO", "test~rbp,rbp", "mov~rdi,rbp", "jnz~FOO"]], [0, 0, 4, 0, 1, 5, 1, 2, 15, -1, 0.006746626686656671, ["mov     rbx, [rdi+10h]", "call    free", "test    rbx, rbx", "mov     rdi, rbx", "jnz     short loc_4590"], ["mov~rbx,[rdi+0]", "call~FOO", "test~rbx,rbx", "mov~rdi,rbx", "jnz~FOO"]], [0, 0, 100, 0, 1, 3, 0, 1, 7, 13, 0.00022488755622188903, ["mov     edi, eax; fd", "call    dup_safer", "mov     r13d, eax"], ["mov~edi,eax", "call~FOO", "mov~r13d,eax"]], [0, 0, 0, 0, 0, 0, 0, 0, 16, -1, 0.0, [], []]], "func_feature": [36, 61, 121, 1, 117, 182, 3, 477, 0.02974, 1, 17], "succs": [[5, 7], [0, 3], [111], [2, 55], [2, 4], [6], [8, 11], [6], [24, 11], [108], [9, 108], [14, 15], [92], [12, 85], [17], [18, 14], [97, 43], [23], [17], [36, 21], [19, 39], [35, 28], [75, 21], [25, 31], [23], [30], [29, 77], [65, 26], [32, 33], [65], [20], [30], [33, 34], [34], [35], [40, 46], [61, 47], [48], [48, 37], [56, 41], [44, 78], [56, 50], [106, 38], [10, 38], [45, 78], [52, 111], [91, 45], [53], [96, 27], [20], [57, 20], [20], [59, 111], [58, 54], [53, 61], [4], [107, 60], [56, 51], [54], [116], [1, 79], [22], [22], [64, 62], [62], [72, 68], [91, 69], [66, 70], [115, 71], [78], [89, 69], [74, 87], [73, 71], [105, 71], [81, 87], [80, 63], [84], [84, 76], [82, 103], [107, 13], [63], [87], [83, 46], [104, 86], [49, 67], [92], [46], [93, 77], [102, 46], [90, 108], [95], [94, 95], [1], [77], [99, 108], [94], [77], [42, 10], [98, 100], [98], [108], [114], [108, 101], [88], [88], [77], [10], [112, 110], [111], [108], [113], [], [111], [112, 113], [114, 109], [72], []], "fname": "fts_build", "n_num": 117}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 4, 0, 1, 5, 1, 2, 0, 0, 0.01461038961038961, ["lea     rdi, dir+1; file", "mov     esi, edx; flags", "xor     eax, eax", "call    open_safer", "jmp     short loc_49DD"], ["lea~rdi,<TAG>", "mov~esi,edx", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [4, 0, 6, 1, 0, 6, 3, 1, 17, -1, 0.05584415584415584, ["mov     edx, eax", "shl     edx, 0Dh", "and     edx, 20000h", "or      edx, 10900h", "test    ah, 2", "jz      short loc_49F1"], ["mov~edx,eax", "shl~edx,0", "and~edx,0", "or~edx,0", "test~ah,0", "jz~FOO"]], [0, 0, 41, 0, 1, 7, 2, 2, 9, 5, 0.00909090909090909, ["lea     rsi, aReportBugsToS+16h; name", "xor     edx, edx; namelen", "mov     rdi, sp_0; sp_0", "call    fts_alloc", "test    rax, rax", "mov     r15, rax", "jz      mem2"], ["lea~rsi,<TAG>", "xor~edx,edx", "mov~rdi,sp_0", "call~FOO", "test~rax,rax", "mov~r15,rax", "jz~FOO"]], [0, 0, 43, 0, 0, 3, 1, 1, 8, 5, 0.15974025974025974, ["mov     rsi, [argv]", "test    rsi, rsi", "jz      loc_4900"], ["mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [0, 0, 40, 0, 0, 2, 1, 1, 9, 4, 0.15616883116883118, ["xor     r15d, r15d", "jmp     loc_4714"], ["xor~r15d,r15d", "jmp~FOO"]], [0, 0, 20, 0, 0, 2, 1, 1, 19, -1, 0.08463203463203461, ["test    compar, compar", "jz      short loc_481D"], ["test~compar,compar", "jz~FOO"]], [1, 0, 34, 1, 0, 4, 1, 1, 18, -1, 0.05795454545454545, ["add     nitems, 1", "mov     rsi, [r12+nitems*8]", "test    rsi, rsi", "jz      loc_4801"], ["add~nitems,0", "mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [1, 0, 34, 1, 0, 7, 1, 1, 18, -1, 0.0573051948051948, ["add     nitems, 1", "mov     rax, [rsp+58h+tmp]", "mov     [rsp+58h+tmp], rcx", "mov     rsi, [r12+rbp*8]", "mov     [rax+10h], rcx", "test    rsi, rsi", "jnz     loc_4760"], ["add~nitems,0", "mov~rax,[rsp+0]", "mov~[rsp+0],rcx", "mov~rsi,<TAG>", "mov~[rax+0],rcx", "test~rsi,rsi", "jnz~FOO"]], [1, 0, 7, 0, 0, 3, 1, 1, 16, -1, 0.0849025974025974, ["mov     eax, [sp_0+48h]", "test    eax, 204h", "jz      loc_49B8"], ["mov~eax,[sp_0+0]", "test~eax,0", "jz~FOO"]], [0, 0, 8, 0, 1, 3, 0, 2, 16, -1, 0.0025974025974025974, ["mov     rdi, rax; state", "call    cycle_check_init", "jmp     loc_487E"], ["mov~rdi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 13, 0, 1, 9, 2, 2, 15, -1, 0.09269480519480519, ["mov     r8, cs:data_freer; data_freer", "lea     rcx, AD_compare; comparator", "lea     rdx, AD_hash; hasher", "xor     esi, esi; tuning", "mov     edi, 1Fh; candidate", "call    hash_initialize", "test    rax, rax", "mov     [sp_0+50h], rax", "jz      short loc_48BF"], ["mov~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "mov~[sp_0+0],rax", "jz~FOO"]], [1, 0, 49, 0, 0, 5, 1, 1, 5, 8, 0.09415584415584416, ["mov     rdi, [argv]; s", "mov     [rbx+48h], ebp", "mov     dword ptr [rbx+2Ch], 0FFFFFF9Ch", "test    rdi, rdi", "jz      loc_49A8"], ["mov~rdi,<TAG>", "mov~[rbx+0],ebp", "mov~[word ptr [rbx+0],0", "test~rdi,rdi", "jz~FOO"]], [2, 0, 50, 0, 0, 3, 2, 1, 5, 9, 0.0, ["and     ebp, 0FFFFFDFFh", "or      ebp, 4", "jmp     loc_4677"], ["and~ebp,0", "or~ebp,0", "jmp~FOO"]], [1, 0, 51, 0, 0, 3, 1, 1, 4, 9, 0.06493506493506493, ["test    bpl, 2", "mov     [sp_0+40h], compar", "jnz     loc_48E8"], ["test~bpl,0", "mov~[sp_0+0],compar", "jnz~FOO"]], [1, 0, 19, 0, 0, 2, 0, 0, 20, -1, 0.010714285714285714, ["cmp     nitems, 1", "jbe     short loc_481D"], ["cmp~nitems,0", "jbe~FOO"]], [1, 0, 40, 0, 0, 2, 0, 0, 10, 4, 0.012012987012987014, ["mov     rsi, [argv]", "mov     qword ptr [parent+50h], 0FFFFFFFFFFFFFFFFh"], ["mov~rsi,<TAG>", "mov~[word ptr [parent+0],0"]], [1, 0, 34, 0, 0, 4, 2, 1, 12, -1, 0.1172077922077922, ["mov     [rsp+58h+tmp], 0", "xor     ebp, ebp", "xor     r13d, r13d", "jmp     short loc_4760"], ["mov~[rsp+0],0", "xor~ebp,ebp", "xor~r13d,r13d", "jmp~FOO"]], [0, 0, 37, 0, 0, 2, 1, 1, 11, 2, 0.2025974025974026, ["test    rsi, rsi", "jz      loc_4A03"], ["test~rsi,rsi", "jz~FOO"]], [0, 1, 14, 0, 1, 5, 1, 2, 15, -1, 0.01461038961038961, ["mov     edi, 20h ; ' '; size", "call    _malloc", "test    rax, rax", "mov     [sp_0+50h], rax", "jz      loc_48BF"], ["mov~edi,<STR>", "call~FOO", "test~rax,rax", "mov~[sp_0+0],rax", "jz~FOO"]], [2, 0, 16, 0, 0, 5, 1, 1, 14, -1, 0.12743506493506493, ["test    dword ptr [sp_0+48h], 102h", "mov     edx, 9", "mov     [rax+10h], r13", "mov     [rax+60h], dx", "jz      loc_4980"], ["test~[word ptr [sp_0+0],0", "mov~edx,0", "mov~[rax+0],r13", "mov~[rax+0],dx", "jz~FOO"]], [0, 0, 47, 0, 0, 3, 1, 0, 6, 9, 0.004545454545454545, ["mov     r13, argv", "xor     ebp, ebp", "nop     dword ptr [rax+rax+00h]"], ["mov~r13,argv", "xor~ebp,ebp", "nop~[word ptr [rax+0]"]], [1, 0, 1, 0, 1, 3, 0, 1, 17, -1, 0.005032467532467532, ["lea     rdi, [sp_0+58h]; ir", "mov     esi, 0FFFFFFFFh; default_val", "call    i_ring_init"], ["lea~rdi,[sp_0+0]", "mov~esi,0", "call~FOO"]], [0, 0, 3, 0, 0, 3, 1, 0, 19, -1, 0.016883116883116882, ["test    eax, eax", "mov     [sp_0+28h], eax", "jns     loc_488C"], ["test~eax,eax", "mov~[sp_0+0],eax", "jns~FOO"]], [1, 0, 2, 0, 0, 2, 1, 1, 20, -1, 0.0, ["or      dword ptr [sp_0+48h], 4", "jmp     loc_488C"], ["or~[word ptr [sp_0+0],0", "jmp~FOO"]], [0, 0, 39, 0, 0, 2, 1, 1, 10, 3, 0.18896103896103897, ["test    compar, compar", "jz      short loc_472B"], ["test~compar,compar", "jz~FOO"]], [0, 0, 18, 0, 1, 5, 0, 1, 21, -1, 0.0, ["mov     rsi, root; head", "mov     rdx, nitems; nitems", "mov     rdi, sp_0; sp_0", "call    fts_sort", "mov     root, rax"], ["mov~rsi,root", "mov~rdx,nitems", "mov~rdi,sp_0", "call~FOO", "mov~root,rax"]], [1, 0, 34, 0, 0, 1, 0, 0, 18, -1, 0.007224025974025974, ["mov     qword ptr [p_0+10h], 0"], ["mov~[word ptr [p_0+0],0"]], [2, 0, 34, 0, 0, 5, 1, 1, 17, -1, 0.014285714285714285, ["mov     esi, 0Bh", "test    compar, compar", "mov     qword ptr [p_0+98h], 2", "mov     [p_0+60h], si", "jnz     loc_4748"], ["mov~esi,0", "test~compar,compar", "mov~[word ptr [p_0+0],0", "mov~[p_0+0],si", "jnz~FOO"]], [0, 0, 17, 0, 0, 2, 1, 1, 13, 0, 0.07207792207792207, ["xor     r13d, r13d", "jmp     loc_483A"], ["xor~r13d,r13d", "jmp~FOO"]], [0, 0, 18, 0, 1, 7, 2, 2, 12, 1, 0.08506493506493507, ["lea     rsi, aReportBugsToS+16h; name", "xor     edx, edx; namelen", "mov     rdi, sp_0; sp_0", "call    fts_alloc", "test    rax, rax", "mov     [sp_0], rax", "jz      loc_48C4"], ["lea~rsi,<TAG>", "xor~edx,edx", "mov~rdi,sp_0", "call~FOO", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [2, 0, 56, 1, 0, 9, 1, 1, 0, 13, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 28h", "test    esi, 0FFFFF800h", "jnz     loc_4958"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "test~esi,0", "jnz~FOO"]], [2, 0, 38, 0, 0, 5, 1, 0, 11, 3, 0.0, ["mov     r13d, [sp_0+48h]", "shr     r13d, 0Ah", "mov     eax, r13d", "and     eax, 1", "mov     [rsp+58h+var_41], al"], ["mov~r13d,[sp_0+0]", "shr~r13d,0", "mov~eax,r13d", "and~eax,0", "mov~[rsp+0],al"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["add     rsp, 28h", "mov     rax, rbx", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,rbx", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [2, 0, 52, 0, 1, 8, 1, 2, 3, 10, 0.04983766233766234, ["mov     r12, argv", "mov     esi, 1; size", "mov     edi, 78h ; 'x'; nmemb", "mov     r14, compar", "call    _calloc", "test    rax, rax", "mov     rbx, rax", "jz      loc_489A"], ["mov~r12,argv", "mov~esi,0", "mov~edi,0", "mov~r14,compar", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 1, 0, 1, 4, 1, 2, 8, -1, 0.010876623376623377, ["mov     rdi, sp_0; ptr", "xor     ebx, ebx", "call    free", "jmp     short loc_489A"], ["mov~rdi,sp_0", "xor~ebx,ebx", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 1, 4, 1, 2, 1, -1, 0.0008116883116883117, ["call    ___errno_location", "xor     ebx, ebx", "mov     dword ptr [rax], 16h", "jmp     loc_489A"], ["call~FOO", "xor~ebx,ebx", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 34, 0, 0, 6, 1, 1, 15, -1, 0.12012987012987013, ["mov     qword ptr [p_0+50h], 0", "mov     [p_0+8], parent", "lea     p_0, [p_0+0F8h]", "test    root, root", "mov     [p_0+28h], rax", "jz      loc_4910"], ["mov~[word ptr [p_0+0],0", "mov~[p_0+0],parent", "lea~p_0,[p_0+0]", "test~root,root", "mov~[p_0+0],rax", "jz~FOO"]], [0, 0, 34, 0, 1, 6, 1, 2, 14, -1, 0.1357683982683983, ["mov     rdx, len; namelen", "mov     rdi, sp_0; sp_0", "call    fts_alloc", "test    rax, rax", "mov     rcx, rax", "jz      loc_48BF"], ["mov~rdx,len", "mov~rdi,sp_0", "call~FOO", "test~rax,rax", "mov~rcx,rax", "jz~FOO"]], [1, 0, 45, 0, 0, 2, 0, 1, 6, 7, 0.10097402597402598, ["mov     edx, 1000h", "jmp     loc_46C5"], ["mov~edx,0", "jmp~FOO"]], [1, 0, 47, 1, 1, 7, 1, 2, 7, 8, 0.017207792207792207, ["call    _strlen", "cmp     rbp, rax", "cmovb   rbp, rax", "add     r13, 8", "mov     rdi, [r13+0]", "test    rdi, rdi", "jnz     short loc_4698"], ["call~FOO", "cmp~rbp,rax", "cmovb~rbp,rax", "add~r13,0", "mov~rdi,[r13+0]", "test~rdi,rdi", "jnz~FOO"]], [0, 0, 34, 0, 1, 9, 2, 2, 16, -1, 0.09707792207792208, ["xor     edx, edx; follow", "mov     rsi, p_0; p", "mov     rdi, sp_0; sp_0", "mov     [rsp+58h+p], p_0", "call    fts_stat", "mov     rcx, [rsp+58h+p]", "test    compar, compar", "mov     [rcx+60h], ax", "jnz     loc_4748"], ["xor~edx,edx", "mov~rsi,p_0", "mov~rdi,sp_0", "mov~[rsp+0],p_0", "call~FOO", "mov~rcx,[rsp+0]", "test~compar,compar", "mov~[rcx+0],ax", "jnz~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 16, -1, 0.019155844155844155, ["cmp     [rsp+58h+var_41], 0", "jz      loc_4910"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 17, 0, 1, 7, 2, 2, 20, -1, 0.07002164502164501, ["lea     rsi, aReportBugsToS+16h; name", "xor     edx, edx; namelen", "mov     rdi, sp_0; sp_0", "call    fts_alloc", "test    rax, rax", "mov     [sp_0], rax", "jz      loc_48BF"], ["lea~rsi,<TAG>", "xor~edx,edx", "mov~rdi,sp_0", "call~FOO", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [2, 0, 55, 0, 0, 5, 1, 1, 1, 12, 0.017207792207792207, ["mov     eax, esi", "mov     ebp, esi", "and     eax, 204h", "cmp     eax, 204h", "jz      loc_4958"], ["mov~eax,esi", "mov~ebp,esi", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 6, 0, 1, 3, 0, 2, 14, -1, 0.014339826839826838, ["call    ___errno_location", "mov     dword ptr [rax], 2", "jmp     loc_48BF"], ["call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 34, 0, 1, 6, 1, 2, 13, -1, 0.1598484848484848, ["mov     rdi, rsi; s", "mov     [rsp+58h+p], rsi", "call    _strlen", "test    len, len", "mov     rsi, [rsp+58h+p]; name", "jz      loc_4970"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "call~FOO", "test~len,len", "mov~rsi,[rsp+0]", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 15, -1, 0.040746753246753246, ["test    r13, r13", "jnz     short loc_48B0"], ["test~r13,r13", "jnz~FOO"]], [0, 0, 6, 0, 1, 4, 0, 1, 16, -1, 0.0, ["mov     rbp, [r13+10h]", "mov     rdi, r13; ptr", "call    free", "mov     r13, rbp"], ["mov~rbp,[r13+0]", "mov~rdi,r13", "call~FOO", "mov~r13,rbp"]], [1, 0, 34, 0, 0, 3, 1, 1, 17, -1, 0.049107142857142856, ["test    root, root", "mov     qword ptr [rcx+10h], 0", "jnz     loc_47E2"], ["test~root,root", "mov~[word ptr [rcx+0],0", "jnz~FOO"]], [2, 0, 45, 0, 0, 4, 0, 0, 8, 7, 0.02922077922077922, ["lea     rdx, [rbp+1]", "mov     eax, 1000h", "cmp     rdx, 1000h", "cmovb   rdx, rax; more"], ["lea~rdx,[rbp+0]", "mov~eax,0", "cmp~rdx,0", "cmovb~rdx,rax"]], [0, 1, 54, 0, 0, 2, 1, 1, 2, 11, 0.033766233766233764, ["test    sil, 12h", "jz      loc_4958"], ["test~sil,<STR>", "jz~FOO"]], [0, 0, 3, 0, 1, 2, 0, 1, 13, -1, 0.02646103896103896, ["mov     rdi, parent; ptr", "call    free"], ["mov~rdi,parent", "call~FOO"]], [0, 0, 34, 0, 0, 2, 0, 0, 17, -1, 0.04626623376623377, ["mov     [rcx+10h], root", "mov     r13, root"], ["mov~[rcx+0],root", "mov~r13,root"]], [0, 0, 34, 0, 0, 3, 0, 1, 18, -1, 0.0003246753246753247, ["mov     [rsp+58h+tmp], rcx", "mov     root, rcx", "jmp     loc_474F"], ["mov~[rsp+0],rcx", "mov~root,rcx", "jmp~FOO"]], [0, 0, 2, 0, 1, 2, 0, 1, 10, -1, 0.018668831168831168, ["mov     rdi, [sp_0+20h]; ptr", "call    free"], ["mov~rdi,[sp_0+0]", "call~FOO"]], [0, 0, 4, 0, 1, 3, 0, 1, 18, -1, 0.01461038961038961, ["mov     edi, [sp_0+2Ch]", "lea     rsi, dir+1; \".\"", "call    ___openat_2"], ["mov~edi,[sp_0+0]", "lea~rsi,<TAG>", "call~FOO"]], [0, 0, 44, 0, 1, 6, 1, 2, 7, 6, 0.15584415584415584, ["lea     rsi, [sp_0+30h]; sp_0", "lea     rdi, [sp_0+20h]; sp_0", "call    fts_palloc", "test    al, al", "mov     [rsp+58h+var_41], al", "jz      mem1"], ["lea~rsi,[sp_0+0]", "lea~rdi,[sp_0+0]", "call~FOO", "test~al,al", "mov~[rsp+0],al", "jz~FOO"]]], "func_feature": [22, 49, 64, 0, 57, 88, 1, 240, 0.05336, 5, 6], "succs": [[22], [0, 55], [54, 15], [2, 4], [24], [42, 14], [5, 45], [5, 45], [1, 21], [8], [8, 46], [20, 38], [11], [11, 12], [25, 42], [24], [45], [16, 29], [9, 46], [18, 10], [39], [32], [21, 23], [21], [17, 31], [42], [7], [26, 52], [19], [51, 28], [35, 43], [17], [], [32, 13], [32], [32], [40, 41], [36, 46], [56], [49, 39], [48, 52], [40, 27], [19, 46], [50, 35], [46], [44, 37], [51, 47], [46], [53, 7], [56], [33, 35], [54], [6], [6], [34], [22], [34, 3]], "fname": "fts_open", "n_num": 57}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[1, 0, 11, 0, 0, 2, 1, 1, 0, 0, 0.14130434782608695, ["test    al, 4", "jnz     short loc_4AC9"], ["test~al,0", "jnz~FOO"]], [0, 1, 13, 0, 2, 8, 1, 3, 2, 5, 0.25905797101449274, ["mov     rdi, [sp_0+10h]; ptr", "call    free", "mov     rdi, [sp_0+20h]; ptr", "call    free", "mov     eax, [sp_0+48h]", "mov     ebx, eax", "and     ebx, 200h", "jz      short loc_4B00"], ["mov~rdi,[sp_0+0]", "call~FOO", "mov~rdi,[sp_0+0]", "call~FOO", "mov~eax,[sp_0+0]", "mov~ebx,eax", "and~ebx,<STR>", "jz~FOO"]], [0, 0, 16, 0, 0, 3, 1, 1, 1, 6, 0.2318840579710145, ["mov     rdi, [sp_0+8]; ptr", "test    rdi, rdi", "jz      short loc_4AA1"], ["mov~rdi,[sp_0+0]", "test~rdi,rdi", "jz~FOO"]], [1, 0, 24, 1, 0, 7, 1, 1, 0, 7, 0.0, ["push    rbp", "push    rbx", "mov     rbp, sp_0", "sub     rsp, 8", "mov     sp_0, [sp_0]", "test    rdi, rdi", "jz      short loc_4A83"], ["push~rbp", "push~rbx", "mov~rbp,sp_0", "sub~rsp,0", "mov~sp_0,<TAG>", "test~rdi,rdi", "jz~FOO"]], [0, 0, 17, 0, 1, 4, 0, 2, 3, 7, 0.06159420289855073, ["mov     rbx, p", "mov     p, rbx; ptr", "call    free", "jmp     loc_4A83"], ["mov~rbx,p", "mov~p,rbx", "call~FOO", "jmp~FOO"]], [0, 0, 17, 0, 1, 2, 0, 1, 4, 7, 0.0923913043478261, ["mov     rdi, p; ptr", "call    free"], ["mov~rdi,p", "call~FOO"]], [0, 0, 15, 0, 0, 1, 0, 0, 2, 7, 0.016304347826086956, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 10, 0, 1, 5, 1, 2, 4, 6, 0.04891304347826087, ["mov     edi, [sp_0+28h]; fd", "call    _fchdir", "test    eax, eax", "mov     ebx, eax", "jz      short loc_4B19"], ["mov~edi,[sp_0+0]", "call~FOO", "test~eax,eax", "mov~ebx,eax", "jz~FOO"]], [0, 0, 9, 0, 1, 2, 0, 1, 5, 6, 0.0, ["call    ___errno_location", "mov     ebx, [rax]"], ["call~FOO", "mov~ebx,<TAG>"]], [0, 0, 8, 0, 0, 1, 0, 0, 5, 5, 0.030797101449275364, ["mov     edi, [sp_0+28h]; fd"], ["mov~edi,[sp_0+0]"]], [0, 0, 15, 0, 1, 5, 1, 2, 3, 6, 0.025362318840579712, ["mov     rbx, [rdi+10h]", "call    free", "test    rbx, rbx", "mov     rdi, rbx", "jnz     short loc_4A90"], ["mov~rbx,[rdi+0]", "call~FOO", "test~rbx,rbx", "mov~rdi,rbx", "jnz~FOO"]], [0, 0, 7, 0, 1, 2, 0, 2, 4, 4, 0.03804347826086957, ["call    _close", "jmp     short loc_4AC9"], ["call~FOO", "jmp~FOO"]], [0, 0, 8, 0, 0, 4, 2, 0, 3, 4, 0.09782608695652174, ["mov     edi, [sp_0+2Ch]", "xor     ebx, ebx", "test    edi, edi", "jns     short loc_4B1C"], ["mov~edi,[sp_0+0]", "xor~ebx,ebx", "test~edi,edi", "jns~FOO"]], [0, 0, 3, 0, 1, 2, 0, 2, 5, 2, 0.051630434782608696, ["call    free", "jmp     short loc_4AE9"], ["call~FOO", "jmp~FOO"]], [1, 0, 6, 0, 1, 5, 1, 2, 4, 3, 0.1956521739130435, ["lea     rdi, [sp_0+58h]; fd_ring", "call    fd_ring_clear", "test    dword ptr [sp_0+48h], 102h", "mov     rdi, [sp_0+50h]; ptr", "jz      short loc_4B28"], ["lea~rdi,[sp_0+0]", "call~FOO", "test~[word ptr [sp_0+0],0", "mov~rdi,[sp_0+0]", "jz~FOO"]], [1, 0, 21, 0, 1, 4, 0, 2, 3, 8, 0.018115942028985508, ["call    free", "cmp     qword ptr [p+50h], 0", "mov     rdi, p; ptr", "js      short loc_4A7B"], ["call~FOO", "cmp~[word ptr [p+0],0", "mov~rdi,p", "js~FOO"]], [0, 0, 21, 0, 0, 3, 1, 1, 2, 9, 0.014492753623188406, ["mov     rbx, [p+10h]", "test    rbx, rbx", "jnz     short loc_4A50"], ["mov~rbx,[p+0]", "test~rbx,rbx", "jnz~FOO"]], [0, 0, 18, 0, 0, 1, 0, 1, 2, 8, 0.034420289855072464, ["jmp     loc_4B30"], ["jmp~FOO"]], [1, 0, 23, 0, 0, 2, 0, 0, 1, 9, 0.010869565217391304, ["cmp     qword ptr [p+50h], 0", "jns     short loc_4A5F"], ["cmp~[word ptr [p+0],0", "jns~FOO"]], [1, 0, 1, 0, 1, 4, 0, 2, 7, 0, 0.0, ["call    ___errno_location", "mov     [rax], ebx", "mov     ebx, 0FFFFFFFFh", "jmp     short loc_4AF5"], ["call~FOO", "mov~<TAG>,ebx", "mov~ebx,0", "jmp~FOO"]], [0, 0, 2, 0, 1, 4, 1, 2, 6, 1, 0.07971014492753624, ["mov     rdi, sp_0; ptr", "call    free", "test    ebx, ebx", "jnz     short loc_4B40"], ["mov~rdi,sp_0", "call~FOO", "test~ebx,ebx", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 5, 2, 0.08605072463768117, ["test    rdi, rdi", "jz      short loc_4AE9"], ["test~rdi,rdi", "jz~FOO"]], [0, 0, 3, 0, 1, 1, 0, 1, 6, 2, 0.0, ["call    hash_free"], ["call~FOO"]], [1, 0, 21, 0, 1, 5, 0, 1, 3, 8, 0.018115942028985508, ["mov     rbx, [p+8]", "call    free", "cmp     qword ptr [p+50h], 0", "mov     rdi, p", "jns     short loc_4A5F"], ["mov~rbx,[p+0]", "call~FOO", "cmp~[word ptr [p+0],0", "mov~rdi,p", "jns~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 7, -1, 0.0, ["add     rsp, 8", "mov     eax, ebx", "pop     rbx", "pop     sp_0", "retn"], ["add~rsp,0", "mov~eax,ebx", "pop~rbx", "pop~sp_0", "retn"]]], "func_feature": [15, 12, 31, 0, 25, 38, 1, 84, 0.0621, 0, 2], "succs": [[14, 7], [0, 12], [1, 6], [2, 18], [2], [2], [10], [8, 9], [9], [11], [1, 10], [14], [11, 14], [20], [13, 21], [16, 5], [23, 15], [4], [16, 17], [24], [24, 19], [20, 22], [20], [16, 5], []], "fname": "fts_close", "n_num": 25}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 21, 0, 0, 6, 1, 1, 0, 0, 0.0025788387857353374, ["mov     rdx, [p+8]", "mov     rdx, [rdx+28h]", "mov     [p+28h], rdx", "mov     p, [p+10h]", "test    p, p", "jnz     short loc_4DF0"], ["mov~rdx,[p+0]", "mov~rdx,[rdx+0]", "mov~[p+0],rdx", "mov~p,[p+0]", "test~p,p", "jnz~FOO"]], [0, 0, 21, 0, 0, 2, 0, 0, 11, -1, 0.0022104332449160036, ["mov     rax, p", "nop     dword ptr [p]"], ["mov~rax,p", "nop~<TAG>"]], [0, 0, 19, 0, 0, 1, 0, 1, 13, -1, 0.002799882110226938, ["jmp     short loc_4D98"], ["jmp~FOO"]], [0, 0, 9, 0, 1, 4, 1, 2, 11, -1, 0.001878868258178603, ["mov     edi, [sp_0+28h]; fd", "call    _fchdir", "test    eax, eax", "jnz     loc_5080"], ["mov~edi,[sp_0+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 1, 11, 0, 0, 2, 1, 1, 10, -1, 0.0037208959622752726, ["and     edi, 200h", "jz      short loc_51FF"], ["and~edi,<STR>", "jz~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 10, -1, 0.005108556832694763, ["mov     rdi, [sp_0+50h]; state", "lea     rsi, [p+68h]; sb", "call    cycle_check", "test    al, al", "jz      loc_4CE7"], ["mov~rdi,[sp_0+0]", "lea~rsi,[p+0]", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 1, 1, 9, -1, 0.03325474015129187, ["test    dword ptr [sp_0+48h], 102h", "jz      loc_5000"], ["test~[word ptr [sp_0+0],0", "jz~FOO"]], [2, 0, 24, 0, 0, 5, 0, 1, 8, -1, 0.01989389920424403, ["mov     rdx, [sp_0+20h]", "mov     rax, [p+40h]", "mov     byte ptr [rdx+rax], 0", "cmp     qword ptr [p+50h], 0", "jz      loc_5140"], ["mov~rdx,[sp_0+0]", "mov~rax,[p+0]", "mov~<TAG>,0", "cmp~[word ptr [p+0],0", "jz~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 7, -1, 0.019746536987916296, ["cmp     word ptr [p+60h], 0Bh", "jz      loc_4D37"], ["cmp~[ord ptr [p+0],0", "jz~FOO"]], [1, 0, 47, 0, 0, 2, 0, 1, 6, -1, 0.006926024167403478, ["cmp     ax, 4", "jnz     loc_4C83"], ["cmp~ax,0", "jnz~FOO"]], [0, 0, 48, 0, 0, 1, 0, 1, 5, -1, 0.0038314176245210726, ["jmp     loc_4E10"], ["jmp~FOO"]], [0, 0, 8, 0, 0, 1, 0, 1, 7, -1, 0.0027262010020630708, ["jmp     loc_4C9B"], ["jmp~FOO"]], [1, 0, 17, 0, 0, 3, 1, 1, 9, -1, 0.010057471264367816, ["movzx   eax, word ptr [p+62h]", "test    al, 2", "jz      loc_5050"], ["movzx~eax,[ord ptr [p+0]", "test~al,0", "jz~FOO"]], [1, 0, 1, 0, 0, 4, 0, 1, 11, -1, 0.0, ["mov     ecx, 2", "mov     [p+0], p", "mov     [p+60h], cx", "jmp     loc_4CE7"], ["mov~ecx,0", "mov~[p+0],p", "mov~[p+0],cx", "jmp~FOO"]], [1, 0, 13, 0, 0, 4, 1, 1, 10, -1, 0.006189213085764809, ["mov     eax, [sp_0+48h]", "mov     edi, [p+3Ch]; fd", "test    al, 4", "jz      loc_50C2"], ["mov~eax,[sp_0+0]", "mov~edi,[p+0]", "test~al,0", "jz~FOO"]], [0, 0, 7, 0, 1, 1, 0, 1, 11, -1, 0.0030946065428824046, ["call    _close"], ["call~FOO"]], [1, 0, 8, 0, 1, 6, 0, 2, 12, -1, 0.0005894488653109342, ["mov     esi, edi; fd", "mov     edx, 1; chdir_down_one", "mov     rdi, sp_0; sp_0", "call    cwd_advance_fd", "mov     edi, [p+3Ch]", "jmp     loc_4C33"], ["mov~esi,edi", "mov~edx,0", "mov~rdi,sp_0", "call~FOO", "mov~edi,[p+0]", "jmp~FOO"]], [0, 0, 8, 0, 0, 2, 0, 1, 13, -1, 0.0011788977306218685, ["mov     edi, [p+3Ch]", "jmp     loc_4C33"], ["mov~edi,[p+0]", "jmp~FOO"]], [0, 0, 0, 0, 1, 11, 1, 1, 3, -1, 0.0, ["mov     rsi, p; p", "xor     edx, edx; follow", "call    fts_stat", "mov     [p+60h], ax", "mov     rax, p", "pop     rbx", "pop     p", "pop     sp_0", "pop     r13", "pop     r14", "retn"], ["mov~rsi,p", "xor~edx,edx", "call~FOO", "mov~[p+0],ax", "mov~rax,p", "pop~rbx", "pop~p", "pop~sp_0", "pop~r13", "pop~r14", "retn"]], [2, 0, 115, 0, 0, 6, 0, 1, 2, 10, 0.016799292661361626, ["movzx   eax, word ptr [rbp+64h]", "mov     r13d, 3", "mov     r12, sp_0", "mov     [p+64h], r13w", "cmp     ax, 1", "jz      loc_4E20"], ["movzx~eax,[ord ptr [rbp+0]", "mov~r13d,0", "mov~r12,sp_0", "mov~[p+0],r13w", "cmp~ax,0", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 0, 0, 11, -1, 0.004641909814323607, ["mov     eax, [p+38h]", "mov     edi, [sp_0+48h]; fts"], ["mov~eax,[p+0]", "mov~edi,[sp_0+0]"]], [1, 0, 9, 0, 0, 2, 1, 1, 10, -1, 0.0030577659888004712, ["test    al, 1", "jnz     loc_4C38"], ["test~al,0", "jnz~FOO"]], [1, 0, 8, 0, 1, 9, 1, 2, 11, -1, 0.0006262894193928676, ["mov     rax, [p+8]", "lea     r8, dir; \"..\"", "mov     ecx, 0FFFFFFFFh; fd", "mov     rdi, sp_0; sp_0", "lea     rdx, [rax+70h]; p", "lea     rsi, [rax+68h]; p", "call    fts_safe_changedir", "test    eax, eax", "jz      loc_4C38"], ["mov~rax,[p+0]", "lea~r8,<TAG>", "mov~ecx,0", "mov~rdi,sp_0", "lea~rdx,[rax+0]", "lea~rsi,[rax+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 12, -1, 0.00022104332449160034, ["jmp     loc_4C38"], ["jmp~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 11, -1, 0.010094311818449749, ["test    eax, eax", "jz      loc_5030"], ["test~eax,eax", "jz~FOO"]], [1, 0, 6, 0, 1, 7, 1, 2, 12, -1, 0.000663129973474801, ["call    ___errno_location", "mov     edi, [sp_0+48h]", "mov     eax, [rax]", "or      edi, 2000h", "mov     [p+38h], eax", "mov     [sp_0+48h], edi", "jmp     loc_4C40"], ["call~FOO", "mov~edi,[sp_0+0]", "mov~eax,<TAG>", "or~edi,0", "mov~[p+0],eax", "mov~[sp_0+0],edi", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 10, -1, 0.004862953138815207, ["mov     eax, [p+38h]", "jmp     loc_4C40"], ["mov~eax,[p+0]", "jmp~FOO"]], [2, 0, 6, 0, 1, 7, 0, 2, 11, -1, 0.0004420866489832007, ["mov     rdi, sp_0; sp_0", "mov     edx, 1; chdir_down_one", "mov     esi, 0FFFFFF9Ch; fd", "call    cwd_advance_fd", "mov     eax, [p+38h]", "mov     edi, [sp_0+48h]", "jmp     loc_4C40"], ["mov~rdi,sp_0", "mov~edx,0", "mov~esi,0", "call~FOO", "mov~eax,[p+0]", "mov~edi,[sp_0+0]", "jmp~FOO"]], [0, 0, 22, 0, 1, 3, 0, 1, 12, -1, 0.002247273798997937, ["mov     edi, [sp_0+2Ch]", "lea     rsi, dir+1; \".\"", "call    ___openat_2"], ["mov~edi,[sp_0+0]", "lea~rsi,<TAG>", "call~FOO"]], [4, 0, 24, 1, 0, 6, 3, 1, 11, 1, 0.004789272030651341, ["mov     edx, eax", "shl     edx, 0Dh", "and     edx, 20000h", "or      edx, 10900h", "test    ah, 2", "jz      loc_5333"], ["mov~edx,eax", "shl~edx,0", "and~edx,0", "or~edx,0", "test~ah,0", "jz~FOO"]], [1, 0, 3, 0, 1, 7, 0, 2, 12, -1, 0.0028735632183908046, ["mov     edx, 6", "lea     rsi, [sp_0+50h]; fts", "mov     [p+60h], dx", "mov     rdx, p; ent", "call    leave_dir", "mov     edi, [sp_0+48h]", "jmp     loc_4C51"], ["mov~edx,0", "lea~rsi,[sp_0+0]", "mov~[p+0],dx", "mov~rdx,p", "call~FOO", "mov~edi,[sp_0+0]", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 0, 12, -1, 0.0028735632183908046, ["mov     eax, 7", "mov     [p+60h], ax"], ["mov~eax,0", "mov~[p+0],ax"]], [0, 0, 21, 0, 0, 3, 1, 1, 13, -1, 0.006557618626584143, ["test    eax, eax", "mov     [p+3Ch], eax", "js      loc_5319"], ["test~eax,eax", "mov~[p+0],eax", "js~FOO"]], [0, 0, 22, 0, 1, 5, 1, 2, 12, 0, 0.002247273798997937, ["lea     rdi, dir+1; file", "mov     esi, edx; flags", "xor     eax, eax", "call    open_safer", "jmp     loc_524A"], ["lea~rdi,<TAG>", "mov~esi,edx", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 27, 0, 1, 5, 1, 2, 7, -1, 0.009593280282935454, ["lea     rdi, [sp_0+58h]; fd_ring", "call    fd_ring_clear", "mov     eax, [sp_0+48h]", "test    al, 4", "jnz     short loc_4E92"], ["lea~rdi,[sp_0+0]", "call~FOO", "mov~eax,[sp_0+0]", "test~al,0", "jnz~FOO"]], [1, 0, 69, 0, 1, 5, 0, 2, 6, 6, 0.017565576186265842, ["mov     [sp_0], p", "mov     rdi, tmp; ptr", "call    free", "cmp     qword ptr [p+50h], 0", "jz      loc_4E40"], ["mov~<TAG>,p", "mov~rdi,tmp", "call~FOO", "cmp~[word ptr [p+0],0", "jz~FOO"]], [1, 0, 26, 0, 0, 2, 1, 1, 8, -1, 0.002541998231653404, ["test    ah, 2", "jnz     short loc_4E80"], ["test~ah,0", "jnz~FOO"]], [1, 0, 2, 0, 0, 3, 1, 1, 13, -1, 0.003684055408193339, ["and     edi, 2000h", "mov     rbp, p", "jz      loc_4CE7"], ["and~edi,0", "mov~rbp,p", "jz~FOO"]], [0, 0, 24, 0, 1, 4, 1, 2, 9, -1, 0.001878868258178603, ["mov     edi, [sp_0+28h]; fd", "call    _fchdir", "test    eax, eax", "jz      short loc_4E92"], ["mov~edi,[sp_0+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 0, 8, 1, 0, 1, -1, 0.0, ["xor     ebp, ebp", "pop     rbx", "mov     rax, rbp", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "retn"], ["xor~ebp,ebp", "pop~rbx", "mov~rax,rbp", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "retn"]], [0, 0, 117, 0, 0, 8, 1, 1, 0, 12, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbp, [sp_0]", "test    rbp, rbp", "jz      loc_4C60"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbp,<TAG>", "test~rbp,rbp", "jz~FOO"]], [0, 1, 116, 0, 0, 3, 1, 1, 1, 11, 0.00847332743884468, ["mov     edx, [sp_0+48h]", "test    dh, 20h", "jnz     loc_4C60"], ["mov~edx,[sp_0+0]", "test~dh,<STR>", "jnz~FOO"]], [1, 0, 6, 0, 0, 3, 1, 1, 9, -1, 0.006483937518420277, ["mov     edi, [sp_0+48h]; fts", "test    edi, 2000h", "jnz     loc_4C60"], ["mov~edi,[sp_0+0]", "test~edi,0", "jnz~FOO"]], [1, 0, 1, 0, 0, 3, 2, 1, 10, -1, 0.00025788387857353373, ["or      dword ptr [sp_0+48h], 2000h", "xor     ebp, ebp", "jmp     loc_4CE7"], ["or~[word ptr [sp_0+0],0", "xor~ebp,ebp", "jmp~FOO"]], [4, 0, 22, 1, 0, 6, 3, 1, 7, -1, 0.0031731997249238625, ["mov     edx, eax", "shl     edx, 0Dh", "and     edx, 20000h", "or      edx, 10900h", "test    ah, 2", "jz      loc_5304"], ["mov~edx,eax", "shl~edx,0", "and~edx,0", "or~edx,0", "test~ah,0", "jz~FOO"]], [1, 0, 24, 0, 0, 3, 1, 1, 6, -1, 0.007618626584143825, ["mov     eax, [sp_0+48h]", "test    al, 4", "jz      loc_525F"], ["mov~eax,[sp_0+0]", "test~al,0", "jz~FOO"]], [1, 0, 108, 0, 0, 3, 0, 0, 4, 9, 0.015030946065428824, ["lea     eax, [rcx-0Ch]", "cmp     ax, 1", "jbe     short loc_4CF8"], ["lea~eax,[rcx-0Ch]+0]", "cmp~ax,0", "jbe~FOO"]], [1, 0, 113, 0, 0, 3, 0, 1, 3, 9, 0.024830533451223106, ["cmp     ax, 2", "movzx   ecx, word ptr [p+60h]", "jz      loc_4C70"], ["cmp~ax,0", "movzx~ecx,[ord ptr [p+0]", "jz~FOO"]], [1, 0, 96, 0, 0, 2, 0, 1, 5, 8, 0.013012083701738873, ["cmp     cx, 1", "jnz     next"], ["cmp~cx,0", "jnz~FOO"]], [0, 0, 20, 0, 1, 3, 0, 1, 8, -1, 0.0018076431869535315, ["mov     edi, [sp_0+2Ch]", "lea     rsi, dir+1; \".\"", "call    ___openat_2"], ["mov~edi,[sp_0+0]", "lea~rsi,<TAG>", "call~FOO"]], [1, 0, 45, 0, 0, 2, 1, 1, 6, -1, 0.018140288829944, ["test    dl, 40h", "jz      loc_4D40"], ["test~dl,0", "jz~FOO"]], [1, 0, 9, 0, 2, 9, 1, 3, 13, -1, 0.0, ["call    ___errno_location", "mov     edi, [p+3Ch]; fd", "mov     ebp, [rax]", "mov     r13, rax", "call    _close", "mov     [r13+0], ebp", "mov     [p+38h], ebp", "or      dword ptr [sp_0+48h], 2000h", "jmp     loc_51F7"], ["call~FOO", "mov~edi,[p+0]", "mov~ebp,<TAG>", "mov~r13,rax", "call~FOO", "mov~[r13+0],ebp", "mov~[p+0],ebp", "or~[word ptr [sp_0+0],0", "jmp~FOO"]], [0, 0, 10, 0, 1, 3, 1, 2, 12, -1, 0.002357795461243737, ["call    _fchdir", "test    eax, eax", "jnz     loc_529F"], ["call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 23, 0, 1, 4, 0, 1, 9, -1, 0.0008104921898025346, ["mov     edx, 1; chdir_down_one", "mov     esi, 0FFFFFF9Ch; fd", "mov     rdi, sp_0; sp_0", "call    cwd_advance_fd"], ["mov~edx,0", "mov~esi,0", "mov~rdi,sp_0", "call~FOO"]], [0, 0, 19, 0, 0, 3, 1, 1, 9, -1, 0.005825719618823067, ["test    eax, eax", "mov     [p+3Ch], eax", "js      short loc_52E8"], ["test~eax,eax", "mov~[p+0],eax", "js~FOO"]], [0, 0, 20, 0, 1, 5, 1, 2, 8, -1, 0.0018076431869535315, ["lea     rdi, dir+1; file", "mov     esi, edx; flags", "xor     eax, eax", "call    open_safer", "jmp     loc_528A"], ["lea~rdi,<TAG>", "mov~esi,edx", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 44, 0, 0, 3, 0, 1, 7, -1, 0.002652519893899204, ["mov     rax, [r12+18h]", "cmp     [p+68h], rax", "jz      loc_4D40"], ["mov~rax,[r12+0]", "cmp~[p+0],rax", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 1, 1, 8, -1, 0.0056734453286177424, ["test    byte ptr [p+62h], 2", "jnz     loc_5178"], ["test~[yte ptr [p+0],0", "jnz~FOO"]], [0, 0, 1, 0, 1, 4, 0, 2, 11, -1, 0.000663129973474801, ["lea     rsi, [sp_0+50h]; fts", "mov     rdx, p; ent", "call    leave_dir", "jmp     loc_4CE7"], ["lea~rsi,[sp_0+0]", "mov~rdx,p", "call~FOO", "jmp~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 10, -1, 0.004420866489832007, ["mov     r10d, [p+38h]", "test    r10d, r10d", "jz      short loc_510E"], ["mov~r10d,[p+0]", "test~r10d,r10d", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 11, -1, 0.001399941055113469, ["cmp     word ptr [p+60h], 4", "jz      short loc_510E"], ["cmp~[ord ptr [p+0],0", "jz~FOO"]], [1, 0, 2, 0, 0, 2, 0, 0, 12, -1, 0.0, ["mov     r9d, 7", "mov     [p+60h], r9w"], ["mov~r9d,0", "mov~[p+0],r9w"]], [0, 0, 19, 0, 0, 2, 0, 1, 10, -1, 0.001399941055113469, ["mov     rbx, [sp_0+8]", "jmp     loc_4D98"], ["mov~rbx,[sp_0+0]", "jmp~FOO"]], [1, 0, 24, 0, 1, 8, 1, 2, 9, -1, 0.006189213085764809, ["mov     r8, [p+28h]; dir", "lea     rdx, [p+70h]; p", "lea     rsi, [p+68h]; p", "mov     ecx, 0FFFFFFFFh; fd", "mov     rdi, sp_0; sp_0", "call    fts_safe_changedir", "test    eax, eax", "jz      loc_50A0"], ["mov~r8,[p+0]", "lea~rdx,[p+0]", "lea~rsi,[p+0]", "mov~ecx,0", "mov~rdi,sp_0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 9, -1, 0.004641909814323607, ["mov     rdi, [sp_0+8]; ptr", "test    rdi, rdi", "jz      short loc_4CCA"], ["mov~rdi,[sp_0+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 6, 0, 1, 3, 0, 2, 9, -1, 0.0, ["mov     edi, [p+3Ch]; fd", "call    _close", "jmp     loc_4CA5"], ["mov~edi,[p+0]", "call~FOO", "jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 10, -1, 0.0022104332449160036, ["nop"], ["nop"]], [1, 0, 1, 0, 1, 4, 1, 2, 11, -1, 7.368110816386678e-05, ["call    ___errno_location", "xor     ebp, ebp", "mov     dword ptr [rax], 0Ch", "jmp     loc_4CE7"], ["call~FOO", "xor~ebp,ebp", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 5, 0, 1, 5, 1, 2, 10, -1, 0.019157088122605363, ["mov     edi, 18h; size", "call    _malloc", "test    rax, rax", "mov     rbx, rax", "jz      loc_50B0"], ["mov~edi,0", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 3, 0, 1, 4, 1, 2, 12, -1, 0.005010315355142941, ["mov     rdi, rbx; ptr", "call    free", "test    r12, r12", "jz      loc_50B0"], ["mov~rdi,rbx", "call~FOO", "test~r12,r12", "jz~FOO"]], [0, 0, 4, 0, 1, 5, 1, 2, 11, -1, 0.001326259946949602, ["mov     rbx, [rdi+10h]", "call    free", "test    rbx, rbx", "mov     rdi, rbx", "jnz     short loc_4CB0"], ["mov~rbx,[rdi+0]", "call~FOO", "test~rbx,rbx", "mov~rdi,rbx", "jnz~FOO"]], [1, 0, 2, 0, 0, 1, 0, 0, 12, -1, 0.0002947244326554671, ["mov     qword ptr [sp_0+8], 0"], ["mov~[word ptr [sp_0+0],0"]], [2, 0, 22, 1, 2, 12, 1, 3, 8, -1, 0.012135278514588859, ["mov     rdx, [p+58h]", "lea     tmp, [p+0F8h]", "mov     rdi, [sp_0+20h]; dest", "mov     rsi, rbp; src", "mov     [p+40h], rdx", "add     rdx, 1; n", "call    _memmove", "mov     esi, 2Fh ; '/'; c", "mov     rdi, rbp; s", "call    _strrchr", "test    rax, rax", "jz      short loc_4EEF"], ["mov~rdx,[p+0]", "lea~tmp,[p+0]", "mov~rdi,[sp_0+0]", "mov~rsi,rbp", "mov~[p+0],rdx", "add~rdx,0", "call~FOO", "mov~esi,0", "mov~rdi,rbp", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 1, 1, 11, -1, 0.004420866489832007, ["test    ah, 2", "jz      loc_51EA"], ["test~ah,0", "jz~FOO"]], [0, 0, 21, 0, 0, 2, 0, 1, 9, -1, 0.003315649867374005, ["cmp     rbp, rax", "jz      loc_5160"], ["cmp~rbp,rax", "jz~FOO"]], [1, 0, 1, 0, 1, 6, 0, 1, 10, -1, 0.0008104921898025346, ["mov     edi, [sp_0+48h]; sp_0", "mov     r11d, 6", "lea     rsi, [sp_0+50h]; fts", "mov     [p+60h], r11w", "mov     rdx, p; ent", "call    leave_dir"], ["mov~edi,[sp_0+0]", "mov~r11d,0", "lea~rsi,[sp_0+0]", "mov~[p+0],r11w", "mov~rdx,p", "call~FOO"]], [2, 0, 1, 0, 2, 7, 1, 3, 7, -1, 0.0004052460949012673, ["mov     rdi, p; ptr", "xor     ebp, ebp", "call    free", "call    ___errno_location", "mov     dword ptr [rax], 0", "mov     qword ptr [sp_0], 0", "jmp     loc_4CE7"], ["mov~rdi,p", "xor~ebp,ebp", "call~FOO", "call~FOO", "mov~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 28, 0, 1, 6, 0, 2, 6, -1, 0.019709696433834363, ["mov     p, [tmp+8]", "mov     rdi, tmp; ptr", "mov     [sp_0], p", "call    free", "cmp     qword ptr [p+50h], 0FFFFFFFFFFFFFFFFh", "jz      loc_52C6"], ["mov~p,[tmp+0]", "mov~rdi,tmp", "mov~<TAG>,p", "call~FOO", "cmp~[word ptr [p+0],0", "jz~FOO"]], [0, 0, 18, 0, 2, 9, 0, 2, 10, -1, 0.001989389920424403, ["lea     r13, [rax+1]", "mov     rdi, r13; s", "call    _strlen", "lea     rdx, [rax+1]; n", "mov     r14, rax", "mov     rsi, r13; src", "mov     rdi, rbp; dest", "call    _memmove", "mov     [p+58h], r14"], ["lea~r13,[rax+0]", "mov~rdi,r13", "call~FOO", "lea~rdx,[rax+0]", "mov~r14,rax", "mov~rsi,r13", "mov~rdi,rbp", "call~FOO", "mov~[p+0],r14"]], [1, 0, 20, 0, 0, 2, 0, 1, 10, -1, 0.0011788977306218685, ["cmp     byte ptr [p+0F9h], 0", "jnz     loc_4ECD"], ["cmp~[yte ptr [p+0],0", "jnz~FOO"]], [1, 0, 25, 0, 1, 7, 1, 2, 8, -1, 0.018803418803418803, ["mov     esi, 3; type", "mov     rdi, sp_0; sp_0", "call    fts_build", "test    rax, rax", "mov     rbx, rax", "mov     [sp_0+8], rax", "jz      loc_50E2"], ["mov~esi,0", "mov~rdi,sp_0", "call~FOO", "test~rax,rax", "mov~rbx,rax", "mov~[sp_0+0],rax", "jz~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 7, -1, 0.0, ["pop     rbx", "mov     rax, rbp", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "retn"], ["pop~rbx", "mov~rax,rbp", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "retn"]], [1, 0, 17, 0, 0, 3, 0, 1, 6, -1, 0.0027262010020630708, ["cmp     ax, 0Bh", "mov     [sp_0], p", "jnz     short loc_4CE7"], ["cmp~ax,0", "mov~<TAG>,p", "jnz~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 9, -1, 0.003757736516357206, ["cmp     rax, 1", "jz      short loc_4CE7"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 10, -1, 0.04118773946360153, ["cmp     ax, 1", "jnz     loc_4CE7"], ["cmp~ax,0", "jnz~FOO"]], [0, 0, 4, 0, 1, 11, 0, 2, 11, -1, 0.00976274683171235, ["mov     rax, [p+68h]", "mov     rdi, [sp_0+50h]; table", "mov     rsi, rbx; entry", "mov     [rbx], rax", "mov     rax, [p+70h]", "mov     [rbx+10h], p", "mov     [rbx+8], rax", "call    hash_insert", "cmp     rbx, rax", "mov     sp_0, rax", "jz      loc_4CE7"], ["mov~rax,[p+0]", "mov~rdi,[sp_0+0]", "mov~rsi,rbx", "mov~<TAG>,rax", "mov~rax,[p+0]", "mov~[rbx+0],p", "mov~[rbx+0],rax", "call~FOO", "cmp~rbx,rax", "mov~sp_0,rax", "jz~FOO"]], [1, 0, 1, 0, 0, 5, 0, 1, 13, -1, 3.684055408193339e-05, ["mov     rax, [r12+10h]", "mov     esi, 2", "mov     [p+60h], si", "mov     [p+0], rax", "jmp     loc_4CE7"], ["mov~rax,[r12+0]", "mov~esi,0", "mov~[p+0],si", "mov~[p+0],rax", "jmp~FOO"]], [1, 0, 1, 0, 1, 7, 0, 2, 10, -1, 0.0003438451714313783, ["call    ___errno_location", "mov     eax, [rax]", "mov     ebx, 7", "mov     [p+60h], bx", "mov     [p+38h], eax", "mov     [sp_0], p", "jmp     loc_4CE7"], ["call~FOO", "mov~eax,<TAG>", "mov~ebx,0", "mov~[p+0],bx", "mov~[p+0],eax", "mov~<TAG>,p", "jmp~FOO"]], [0, 0, 17, 0, 0, 5, 0, 0, 9, -1, 0.01324049513704686, ["mov     rax, [sp_0+20h]", "mov     rbp, p", "mov     [p+30h], rax", "mov     [p+28h], rax", "movzx   eax, word ptr [p+60h]"], ["mov~rax,[sp_0+0]", "mov~rbp,p", "mov~[p+0],rax", "mov~[p+0],rax", "movzx~eax,[ord ptr [p+0]"]], [0, 0, 18, 0, 0, 1, 0, 1, 11, -1, 0.000663129973474801, ["jmp     loc_4EEF"], ["jmp~FOO"]], [1, 0, 16, 0, 0, 3, 0, 1, 10, -1, 0.055039787798408485, ["cmp     ax, 0Bh", "mov     [sp_0], p", "jz      loc_4D20"], ["cmp~ax,0", "mov~<TAG>,p", "jz~FOO"]], [3, 0, 17, 2, 1, 16, 0, 2, 9, -1, 0.036833185971117004, ["mov     rax, [p+8]", "lea     rsi, [p+0F8h]; src", "mov     rbp, p", "mov     rdi, [rax+40h]", "mov     rax, [rax+30h]", "cmp     byte ptr [rax+rdi-1], 2Fh ; '/'", "lea     rdx, [rdi-1]", "cmovz   rdi, rdx", "add     rdi, [sp_0+20h]", "mov     byte ptr [rdi], 2Fh ; '/'", "mov     rax, [p+58h]", "add     rdi, 1; dest", "lea     rdx, [rax+1]; n", "call    _memmove", "movzx   eax, word ptr [p+60h]", "jmp     check_for_dir"], ["mov~rax,[p+0]", "lea~rsi,[p+0]", "mov~rbp,p", "mov~rdi,[rax+0]", "mov~rax,[rax+0]", "cmp~[yte ptr [rax+0],0", "lea~rdx,[rdi-1]+0]", "cmovz~rdi,rdx", "add~rdi,[sp_0+0]", "mov~<TAG>,0", "mov~rax,[p+0]", "add~rdi,0", "lea~rdx,[rax+0]", "call~FOO", "movzx~eax,[ord ptr [p+0]", "jmp~FOO"]], [1, 0, 17, 0, 0, 3, 1, 1, 10, -1, 0.005260831122900088, ["or      word ptr [p+62h], 2", "movzx   eax, word ptr [p+60h]", "jmp     check_for_dir"], ["or~[ord ptr [p+0],0", "movzx~eax,[ord ptr [p+0]", "jmp~FOO"]], [2, 0, 27, 0, 1, 6, 0, 2, 5, -1, 0.009239610963748895, ["mov     edx, 1; follow", "mov     rsi, p; p", "call    fts_stat", "cmp     ax, 1", "mov     [p+60h], ax", "jz      loc_5120"], ["mov~edx,0", "mov~rsi,p", "call~FOO", "cmp~ax,0", "mov~[p+0],ax", "jz~FOO"]], [0, 0, 12, 0, 1, 6, 1, 2, 9, -1, 0.0028735632183908046, ["xor     edx, edx; follow", "mov     rsi, p; p", "mov     rdi, sp_0; sp_0", "call    fts_stat", "mov     [p+60h], ax", "jmp     loc_4F11"], ["xor~edx,edx", "mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "mov~[p+0],ax", "jmp~FOO"]], [0, 0, 16, 0, 0, 1, 0, 0, 7, -1, 0.0029472443265546712, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [1, 0, 10, 0, 0, 2, 0, 1, 8, -1, 0.04121229983298949, ["cmp     qword ptr [p+50h], 0", "jnz     short loc_4F2B"], ["cmp~[word ptr [p+0],0", "jnz~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 7, -1, 0.00518223794085863, ["mov     [sp_0], p", "jmp     loc_4F1B"], ["mov~<TAG>,p", "jmp~FOO"]], [1, 0, 19, 0, 0, 2, 1, 1, 14, -1, 0.002799882110226938, ["or      word ptr [p+62h], 2", "jmp     loc_51B5"], ["or~[ord ptr [p+0],0", "jmp~FOO"]], [0, 0, 9, 0, 0, 2, 0, 0, 9, -1, 0.0, ["mov     rax, [p+68h]", "mov     [sp_0+18h], rax"], ["mov~rax,[p+0]", "mov~[sp_0+0],rax"]], [1, 0, 15, 0, 0, 3, 0, 1, 8, -1, 0.01422045387562629, ["mov     rax, [p+98h]", "cmp     rax, 2", "jz      loc_5185"], ["mov~rax,[p+0]", "cmp~rax,0", "jz~FOO"]], [1, 0, 19, 0, 1, 6, 0, 2, 14, -1, 0.002799882110226938, ["call    ___errno_location", "mov     eax, [rax]", "mov     r8d, 7", "mov     [p+60h], r8w", "mov     [p+38h], eax", "jmp     loc_51B5"], ["call~FOO", "mov~eax,<TAG>", "mov~r8d,0", "mov~[p+0],r8w", "mov~[p+0],eax", "jmp~FOO"]], [1, 0, 25, 0, 0, 3, 1, 1, 10, 2, 0.005305039787798408, ["mov     eax, [sp_0+48h]", "test    al, 4", "jnz     short loc_51B5"], ["mov~eax,[sp_0+0]", "test~al,0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 36, 0, 0, 3, 1, 1, 7, -1, 0.019908635425876803, ["mov     sp_0, [r12+8]; ptr", "test    rdi, rdi", "jz      short loc_4D7A"], ["mov~sp_0,[r12+0]", "test~rdi,rdi", "jz~FOO"]], [1, 0, 35, 0, 0, 2, 1, 1, 8, -1, 0.007957559681697613, ["test    dh, 10h", "jz      short loc_4DB0"], ["test~dh,0", "jz~FOO"]], [1, 0, 13, 0, 1, 5, 1, 2, 9, -1, 0.009689065723548482, ["lea     rdi, [sp_0+58h]; fd_ring", "call    fd_ring_clear", "mov     edi, [sp_0+48h]", "test    dil, 4", "jz      short loc_51C3"], ["lea~rdi,[sp_0+0]", "call~FOO", "mov~edi,[sp_0+0]", "test~dil,0", "jz~FOO"]], [1, 0, 28, 0, 0, 3, 1, 0, 9, -1, 0.0024314765694076037, ["and     dh, 0EFh", "mov     [sp_0+48h], edx", "nop     word ptr [rax+rax+00000000h]"], ["and~dh,0", "mov~[sp_0+0],edx", "nop~[ord ptr [rax+0]"]], [0, 0, 28, 0, 1, 5, 1, 2, 10, -1, 0.003463012083701739, ["mov     rbx, [rdi+10h]", "call    free", "test    rbx, rbx", "mov     rdi, rbx", "jnz     short loc_4D60"], ["mov~rbx,[rdi+0]", "call~FOO", "test~rbx,rbx", "mov~rdi,rbx", "jnz~FOO"]], [1, 0, 26, 0, 0, 1, 0, 0, 11, -1, 0.00434718538166814, ["mov     qword ptr [sp_0+8], 0"], ["mov~[word ptr [sp_0+0],0"]], [1, 0, 99, 0, 0, 2, 0, 1, 4, 8, 0.017536103743000294, ["cmp     cx, 1", "jnz     short next"], ["cmp~cx,0", "jnz~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 9, -1, 0.021013852048334804, ["mov     qword ptr [sp_0+8], 0", "jmp     name"], ["mov~[word ptr [sp_0+0],0", "jmp~FOO"]], [1, 0, 22, 0, 1, 7, 2, 2, 10, -1, 0.004494547597995874, ["call    ___errno_location", "mov     rbx, [sp_0+8]", "mov     eax, [rax]", "or      word ptr [rbp+62h], 1", "test    p, p", "mov     [rbp+38h], eax", "jz      short loc_4D98"], ["call~FOO", "mov~rbx,[sp_0+0]", "mov~eax,<TAG>", "or~[ord ptr [rbp+0],0", "test~p,p", "mov~[rbp+0],eax", "jz~FOO"]], [1, 0, 27, 0, 0, 2, 0, 1, 8, 4, 0.010587975243147656, ["cmp     ax, 2", "jz      loc_519B"], ["cmp~ax,0", "jz~FOO"]], [1, 0, 69, 0, 0, 4, 0, 1, 7, 5, 0.011582670203359857, ["movzx   eax, word ptr [p+64h]", "mov     tmp, p", "cmp     ax, 4", "jnz     loc_4FA8"], ["movzx~eax,[ord ptr [p+0]", "mov~tmp,p", "cmp~ax,0", "jnz~FOO"]], [2, 0, 26, 0, 1, 7, 0, 2, 9, 3, 0.006483937518420277, ["mov     edx, 1; follow", "mov     rsi, p; p", "mov     rdi, sp_0; sp_0", "call    fts_stat", "cmp     ax, 1", "mov     [p+60h], ax", "jz      short loc_5216"], ["mov~edx,0", "mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "cmp~ax,0", "mov~[p+0],ax", "jz~FOO"]], [0, 0, 69, 0, 0, 3, 1, 1, 5, 7, 0.03366489832007073, ["mov     rbx, [tmp+10h]", "test    p, p", "jnz     short loc_4BA8"], ["mov~rbx,[tmp+0]", "test~p,p", "jnz~FOO"]], [1, 0, 18, 0, 0, 3, 0, 1, 10, -1, 0.010610079575596816, ["mov     edi, 3", "mov     [p+64h], di", "jmp     name"], ["mov~edi,0", "mov~[p+0],di", "jmp~FOO"]]], "func_feature": [47, 60, 143, 0, 118, 180, 3, 471, 0.00738, 2, 5], "succs": [[0, 2], [0], [111], [25, 23], [27, 3], [81, 13], [68, 5], [106, 12], [103, 7], [50, 11], [9], [57], [21, 14], [81], [73, 15], [20], [15], [15], [], [18, 47], [24], [20, 22], [25, 20], [20], [30, 31], [24], [24], [24], [32], [33, 28], [37], [37], [98, 101], [32], [72, 36], [34, 114], [53, 38], [81, 39], [72, 43], [], [41, 39], [19, 39], [59, 39], [81], [49, 55], [97, 44], [48, 93], [110, 46], [50, 116], [54], [56, 104], [17], [17, 51], [72], [92, 87], [54], [104, 57], [64, 65], [81], [58, 60], [58, 61], [58], [111], [112, 62], [66, 75], [64], [70], [81], [67, 85], [67, 86], [70, 71], [75], [88, 74], [16, 52], [78, 79], [81], [81], [8, 76], [88], [89, 78], [42, 111], [], [81, 95], [81, 103], [96, 81], [81, 69], [81], [81], [90], [88], [100, 84], [90], [90], [82, 45], [84], [100], [99, 6], [96], [117], [6], [83, 94], [117], [29, 117], [], [80, 105], [107, 63], [26, 4], [108], [108, 109], [80], [10, 116], [91], [1, 111], [91, 115], [113, 116], [117, 102], [35, 77], [91]], "fname": "fts_read", "n_num": 118}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[4, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     eax, 1", "add     rsp, 8", "retn"], ["sub~rsp,0", "call~FOO", "mov~<TAG>,0", "mov~eax,0", "add~rsp,0", "retn"]], [1, 0, 2, 0, 0, 2, 0, 1, 0, 0, 0.0, ["cmp     edx, 4", "ja      short loc_5360"], ["cmp~edx,0", "ja~FOO"]], [0, 0, 0, 0, 0, 3, 1, 0, 1, 0, 0.0, ["mov     [p+64h], dx", "xor     eax, eax", "retn"], ["mov~[p+0],dx", "xor~eax,eax", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 2, 3, 11, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "fts_set", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 9, 0, 1, 4, 0, 1, 0, 0, 0.07478632478632478, ["mov     edi, [sp_0+2Ch]", "lea     rsi, dir+1; \".\"", "call    ___openat_2", "mov     r12d, eax"], ["mov~edi,[sp_0+0]", "lea~rsi,<TAG>", "call~FOO", "mov~r12d,eax"]], [4, 0, 11, 1, 0, 6, 3, 1, 9, 5, 0.17094017094017094, ["mov     edx, eax", "shl     edx, 0Dh", "and     edx, 20000h", "or      edx, 10900h", "test    ah, 2", "jz      short loc_54E8"], ["mov~edx,eax", "shl~edx,0", "and~edx,0", "or~edx,0", "test~ah,0", "jz~FOO"]], [1, 0, 1, 0, 0, 3, 1, 1, 12, -1, 0.005698005698005698, ["mov     qword ptr [sp_0+8], 0", "xor     eax, eax", "jmp     loc_542A"], ["mov~[word ptr [sp_0+0],0", "xor~eax,eax", "jmp~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 11, 3, 0.15384615384615385, ["test    r12d, r12d", "js      short loc_54FD"], ["test~r12d,r12d", "js~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 6, 8, 0.1908831908831909, ["cmp     qword ptr [p+50h], 0", "jnz     short loc_541C"], ["cmp~[word ptr [p+0],0", "jnz~FOO"]], [2, 0, 17, 0, 0, 3, 0, 1, 5, 9, 0.16809116809116809, ["cmp     r13d, 1000h", "mov     ebp, 1", "jnz     short loc_5403"], ["cmp~r13d,0", "mov~ebp,0", "jnz~FOO"]], [2, 0, 16, 0, 0, 2, 1, 0, 6, 9, 0.0, ["or      dword ptr [sp_0+48h], 1000h", "mov     ebp, 2"], ["or~[word ptr [sp_0+0],0", "mov~ebp,0"]], [0, 0, 9, 0, 1, 6, 1, 2, 10, 4, 0.07478632478632478, ["lea     rdi, dir+1; file", "mov     esi, edx; flags", "xor     eax, eax", "call    open_safer", "mov     r12d, eax", "jmp     short loc_5488"], ["lea~rdi,<TAG>", "mov~esi,edx", "xor~eax,eax", "call~FOO", "mov~r12d,eax", "jmp~FOO"]], [1, 0, 14, 0, 0, 3, 0, 1, 7, 7, 0.17094017094017094, ["mov     rax, [p+28h]", "cmp     byte ptr [rax], 2Fh ; '/'", "jz      short loc_541C"], ["mov~rax,[p+0]", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 13, 0, 0, 3, 1, 1, 8, 6, 0.17236467236467237, ["mov     eax, [sp_0+48h]", "test    al, 4", "jz      short loc_5460"], ["mov~eax,[sp_0+0]", "test~al,0", "jz~FOO"]], [0, 0, 1, 0, 1, 6, 1, 2, 14, 0, 0.002136752136752137, ["mov     ebx, [r14]", "mov     edi, r12d; fd", "call    _close", "xor     eax, eax", "mov     [r14], ebx", "jmp     loc_542A"], ["mov~ebx,<TAG>", "mov~edi,r12d", "call~FOO", "xor~eax,eax", "mov~<TAG>,ebx", "jmp~FOO"]], [0, 0, 4, 0, 1, 4, 1, 2, 13, 1, 0.04914529914529915, ["mov     edi, r12d; fd", "call    _fchdir", "test    eax, eax", "jnz     short loc_550C"], ["mov~edi,r12d", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 27, 0, 1, 11, 1, 2, 0, 14, 0.0, ["push    r14", "push    r13", "mov     r13d, esi", "push    r12", "push    rbp", "push    rbx", "mov     rbx, sp_0", "call    ___errno_location", "test    r13d, 0FFFFEFFFh", "mov     r14, rax", "jnz     loc_54C0"], ["push~r14", "push~r13", "mov~r13d,esi", "push~r12", "push~rbp", "push~rbx", "mov~rbx,sp_0", "call~FOO", "test~r13d,0", "mov~r14,rax", "jnz~FOO"]], [1, 0, 6, 0, 1, 6, 1, 2, 12, 2, 0.11396011396011396, ["mov     esi, ebp; type", "mov     rdi, sp_0; sp_0", "call    fts_build", "test    byte ptr [sp_0+49h], 2", "mov     [sp_0+8], rax", "jnz     short loc_54D0"], ["mov~esi,ebp", "mov~rdi,sp_0", "call~FOO", "test~[yte ptr [sp_0+0],0", "mov~[sp_0+0],rax", "jnz~FOO"]], [1, 1, 25, 0, 0, 4, 1, 1, 1, 13, 0.03418803418803419, ["mov     r12, [sp_0]", "mov     dword ptr [rax], 0", "test    byte ptr [sp_0+49h], 20h", "jnz     loc_5450"], ["mov~r12,<TAG>", "mov~<TAG>,0", "test~[yte ptr [sp_0+0],<STR>", "jnz~FOO"]], [0, 0, 1, 0, 1, 4, 0, 1, 7, -1, 0.01566951566951567, ["mov     esi, ebp; type", "mov     rdi, sp_0; sp_0", "call    fts_build", "mov     [sp_0+8], rax"], ["mov~esi,ebp", "mov~rdi,sp_0", "call~FOO", "mov~[sp_0+0],rax"]], [0, 0, 2, 0, 1, 2, 0, 1, 14, -1, 0.0014245014245014246, ["mov     edi, r12d; fd", "call    _close"], ["mov~edi,r12d", "call~FOO"]], [0, 0, 0, 0, 0, 6, 0, 0, 2, -1, 0.0, ["pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "retn"], ["pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 14, -1, 0.0035612535612535613, ["mov     rax, [sp_0+8]", "jmp     loc_542A"], ["mov~rax,[sp_0+0]", "jmp~FOO"]], [1, 0, 1, 0, 0, 3, 1, 1, 1, -1, 0.0014245014245014246, ["mov     dword ptr [rax], 16h", "xor     eax, eax", "jmp     loc_542A"], ["mov~<TAG>,0", "xor~eax,eax", "jmp~FOO"]], [1, 0, 2, 0, 1, 5, 0, 2, 13, -1, 0.02492877492877493, ["mov     edx, 1; chdir_down_one", "mov     esi, r12d; fd", "mov     rdi, sp_0; sp_0", "call    cwd_advance_fd", "jmp     short loc_54B5"], ["mov~edx,0", "mov~esi,r12d", "mov~rdi,sp_0", "call~FOO", "jmp~FOO"]], [1, 0, 24, 0, 0, 3, 0, 1, 2, 12, 0.06410256410256411, ["movzx   eax, word ptr [p+60h]", "cmp     ax, 9", "jz      short loc_5438"], ["movzx~eax,[ord ptr [p+0]", "cmp~ax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 3, -1, 0.0, ["pop     sp_0", "mov     rax, [p+10h]", "pop     rbp", "pop     p", "pop     instr", "pop     r14", "retn"], ["pop~sp_0", "mov~rax,[p+0]", "pop~rbp", "pop~p", "pop~instr", "pop~r14", "retn"]], [1, 0, 22, 0, 0, 2, 0, 1, 3, 11, 0.08974358974358974, ["cmp     ax, 1", "jnz     loc_5450"], ["cmp~ax,0", "jnz~FOO"]], [0, 0, 20, 0, 0, 3, 1, 1, 4, 10, 0.11253561253561255, ["mov     rdi, [sp_0+8]; ptr", "test    rdi, rdi", "jz      short loc_53E9"], ["mov~rdi,[sp_0+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 19, 0, 0, 1, 0, 0, 5, 11, 0.007122507122507123, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [0, 0, 0, 0, 0, 7, 1, 0, 2, -1, 0.0, ["pop     sp_0", "xor     eax, eax", "pop     rbp", "pop     p", "pop     instr", "pop     r14", "retn"], ["pop~sp_0", "xor~eax,eax", "pop~rbp", "pop~p", "pop~instr", "pop~r14", "retn"]], [0, 0, 19, 0, 1, 5, 1, 2, 6, 10, 0.025641025641025644, ["mov     rbp, [rdi+10h]", "call    free", "test    rbp, rbp", "mov     rdi, rbp", "jnz     short loc_53D8"], ["mov~rbp,[rdi+0]", "call~FOO", "test~rbp,rbp", "mov~rdi,rbp", "jnz~FOO"]]], "func_feature": [10, 17, 30, 0, 28, 39, 0, 115, 0.06171, 1, 1], "succs": [[3], [0, 7], [17], [2, 13], [8, 15], [4, 6], [4], [3], [9, 15], [1, 15], [17], [16, 10], [19, 14], [11, 20], [26, 21], [17], [18], [], [17], [17], [18], [22, 23], [], [24, 26], [25, 5], [27], [], [27, 5]], "fname": "fts_children", "n_num": 28}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 7, 0, 1, 5, 1, 2, 0, 0, 0.07692307692307693, ["mov     rsi, [rax]", "mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_55E0"], ["mov~rsi,<TAG>", "mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 3, -1, 0.1043956043956044, ["mov     rax, [cursor+8]", "test    rax, rax", "jnz     short loc_55B8"], ["mov~rax,[cursor+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 5, -1, 0.01098901098901099, ["mov     cursor, [cursor+8]"], ["mov~cursor,[cursor+0]"]], [0, 0, 3, 0, 0, 3, 1, 1, 4, -1, 0.04395604395604396, ["mov     rdx, [bucket+8]", "test    rdx, rdx", "jz      loc_5610"], ["mov~rdx,[bucket+0]", "test~rdx,rdx", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 3, -1, 0.05494505494505495, ["test    r12b, r12b", "mov     rax, [bucket]", "jz      short loc_55D5"], ["test~r12b,r12b", "mov~rax,<TAG>", "jz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, -1, 0.038461538461538464, ["mov     rdx, [cursor+8]", "test    r12b, r12b", "mov     rax, [rdx]", "jz      short loc_55D5"], ["mov~rdx,[cursor+0]", "test~r12b,r12b", "mov~rax,<TAG>", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 5, -1, 0.005494505494505495, ["mov     qword ptr [bucket], 0", "jmp     short loc_55D5"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 12, 0, 0, 4, 1, 1, 1, -1, 0.06593406593406594, ["mov     [bucket_head], bucket", "mov     rsi, [bucket]", "test    rsi, rsi", "jz      short loc_55D3"], ["mov~<TAG>,bucket", "mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [1, 0, 14, 2, 1, 17, 0, 1, 0, 1, 0.0, ["push    r14", "push    r13", "mov     r13, table", "push    r12", "push    rbp", "mov     rbp, entry", "push    rbx", "mov     rbx, [table]", "mov     r14, bucket_head", "mov     entry, [table+10h]", "mov     r12d, ecx", "mov     table, entry", "call    qword ptr [table+30h]", "shl     rax, 4", "add     rbx, rax", "cmp     [table+8], bucket", "jbe     loc_5619"], ["push~r14", "push~r13", "mov~r13,table", "push~r12", "push~rbp", "mov~rbp,entry", "push~rbx", "mov~rbx,<TAG>", "mov~r14,bucket_head", "mov~entry,[table+0]", "mov~r12d,ecx", "mov~table,entry", "call~[word ptr [table+0]", "shl~rax,0", "add~rbx,rax", "cmp~[table+0],bucket", "jbe~FOO"]], [0, 0, 0, 0, 0, 6, 0, 0, 3, -1, 0.0, ["pop     rbx", "pop     entry", "pop     r12", "pop     table", "pop     bucket_head", "retn"], ["pop~rbx", "pop~entry", "pop~r12", "pop~table", "pop~bucket_head", "retn"]], [0, 0, 1, 0, 0, 1, 1, 0, 2, -1, 0.02197802197802198, ["xor     eax, eax"], ["xor~eax,eax"]], [1, 0, 0, 0, 0, 12, 0, 0, 5, -1, 0.0, ["movdqu  xmm0, xmmword ptr [next]", "movups  xmmword ptr [bucket], xmm0", "mov     qword ptr [next], 0", "mov     rcx, [table+48h]", "mov     [next+8], rcx", "mov     [table+48h], next", "pop     bucket", "pop     entry", "pop     r12", "pop     table", "pop     bucket_head", "retn"], ["movdqu~xmm0,<TAG>", "movups~<TAG>,xmm0", "mov~<TAG>,0", "mov~rcx,[table+0]", "mov~[next+0],rcx", "mov~[table+0],next", "pop~bucket", "pop~entry", "pop~r12", "pop~table", "pop~bucket_head", "retn"]], [0, 0, 11, 0, 1, 4, 1, 2, 2, -1, 0.09890109890109891, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jz      short loc_55CA"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 0, 0, 0, 12, 0, 0, 6, -1, 0.0, ["mov     rcx, [next+8]", "mov     [cursor+8], rcx", "mov     qword ptr [next], 0", "mov     rcx, [table+48h]", "mov     [next+8], rcx", "mov     [table+48h], next", "pop     cursor", "pop     entry", "pop     r12", "pop     table", "pop     bucket_head", "retn"], ["mov~rcx,[next+0]", "mov~[cursor+0],rcx", "mov~<TAG>,0", "mov~rcx,[table+0]", "mov~[next+0],rcx", "mov~[table+0],next", "pop~cursor", "pop~entry", "pop~r12", "pop~table", "pop~bucket_head", "retn"]]], "func_feature": [4, 8, 12, 0, 15, 19, 2, 78, 0.0348, 0, 2], "succs": [[2, 5], [0, 10], [1], [11, 6], [9, 3], [9, 14], [9], [10, 12], [13, 7], [], [9], [], [1, 4], [], []], "fname": "hash_find_entry", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[1, 0, 3, 0, 0, 3, 0, 1, 0, 0, 0.09027777777777778, ["ucomiss xmm0, xmm1", "mov     eax, 1", "ja      short locret_5694"], ["ucomiss~xmm0,xmm1", "mov~eax,0", "ja~FOO"]], [0, 0, 4, 0, 0, 3, 0, 0, 5, 2, 0.1388888888888889, ["movss   xmm3, cs:dword_BAD4", "ucomiss xmm3, xmm2", "jb      short loc_5688"], ["movss~xmm3,<TAG>", "ucomiss~xmm3,xmm2", "jb~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 7, 2, 0.013888888888888888, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 5, 0, 0, 4, 0, 0, 4, 2, 0.16666666666666666, ["addss   xmm1, cs:dword_BAC4", "movss   xmm2, dword ptr [tuning+4]", "ucomiss xmm2, xmm1", "jbe     short loc_5688"], ["addss~xmm1,<TAG>", "movss~xmm2,[word ptr [tuning+0]", "ucomiss~xmm2,xmm1", "jbe~FOO"]], [0, 0, 6, 0, 0, 3, 0, 0, 3, 2, 0.16666666666666666, ["movss   xmm1, dword ptr [tuning]", "ucomiss xmm1, cs:dword_BAD0", "jb      short loc_5688"], ["movss~xmm1,<TAG>", "ucomiss~xmm1,<TAG>", "jb~FOO"]], [0, 0, 7, 0, 0, 3, 0, 0, 2, 2, 0.1388888888888889, ["movss   xmm1, dword ptr [tuning+0Ch]", "ucomiss xmm1, cs:dword_BACC", "jbe     short loc_5688"], ["movss~xmm1,[word ptr [tuning+0]", "ucomiss~xmm1,<TAG>", "jbe~FOO"]], [0, 0, 8, 0, 0, 3, 0, 0, 1, 2, 0.08333333333333333, ["movss   xmm1, cs:dword_BAC8", "ucomiss xmm1, xmm0", "jbe     short loc_5688"], ["movss~xmm1,<TAG>", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [0, 0, 9, 0, 0, 4, 0, 0, 0, 2, 0.0, ["mov     rax, [rdi]", "movss   xmm0, dword ptr [tuning+8]", "ucomiss xmm0, cs:dword_BAC4", "jbe     short loc_5688"], ["mov~rax,<TAG>", "movss~xmm0,[word ptr [tuning+0]", "ucomiss~xmm0,<TAG>", "jbe~FOO"]], [0, 0, 1, 0, 0, 3, 1, 0, 1, 1, 0.09027777777777778, ["lea     rax, default_tuning", "mov     [rdi], rax", "xor     eax, eax"], ["lea~rax,<TAG>", "mov~<TAG>,rax", "xor~eax,eax"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 1, 1, 0, 10, 16, 4, 28, 0.08889, 6, 0], "succs": [[9, 2], [0, 8], [8], [8, 1], [8, 3], [8, 4], [8, 5], [8, 6], [9], []], "fname": "check_tuning", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+10h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_buckets", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+18h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_buckets_used", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+20h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_entries", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[1, 0, 7, 1, 0, 4, 1, 1, 0, 0, 0.06944444444444445, ["mov     cursor, [cursor+8]", "add     bucket_length, 1", "test    cursor, cursor", "jnz     short loc_56F8"], ["mov~cursor,[cursor+0]", "add~bucket_length,0", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 4, -1, 0.08333333333333333, ["nop     dword ptr [max_bucket_length+00h]"], ["nop~[word ptr [max_bucket_length+0]"]], [1, 0, 7, 0, 0, 2, 0, 1, 2, -1, 0.3055555555555555, ["cmp     qword ptr [bucket], 0", "jz      short loc_570C"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 7, 1, 0, 3, 0, 0, 3, -1, 0.2361111111111111, ["add     bucket, 10h", "cmp     bucket, rdi", "jb      short loc_56E0"], ["add~bucket,0", "cmp~bucket,rdi", "jb~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 1, -1, 0.09722222222222221, ["xchg    ax, ax"], ["xchg~ax,ax"]], [0, 0, 7, 0, 0, 2, 0, 0, 4, -1, 0.16666666666666666, ["cmp     max_bucket_length, rcx", "cmovb   max_bucket_length, rcx"], ["cmp~max_bucket_length,rcx", "cmovb~max_bucket_length,rcx"]], [1, 0, 7, 0, 0, 4, 1, 1, 3, -1, 0.20833333333333331, ["mov     rdx, [cursor+8]", "mov     ecx, 1", "test    cursor, cursor", "jz      short loc_5705"], ["mov~rdx,[cursor+0]", "mov~ecx,0", "test~cursor,cursor", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 9, 0, 0, 5, 1, 0, 0, 1, 0.0, ["mov     bucket, [table]", "mov     table, [table+8]", "xor     eax, eax", "cmp     bucket, rdi", "jnb     short locret_5717"], ["mov~bucket,<TAG>", "mov~table,[table+0]", "xor~eax,eax", "cmp~bucket,rdi", "jnb~FOO"]]], "func_feature": [0, 3, 3, 0, 10, 13, 0, 24, 0.11667, 0, 2], "succs": [[0, 5], [0], [3, 6], [2, 7], [2], [3], [1, 5], [], [], [8, 4]], "fname": "hash_get_max_bucket_length", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[1, 0, 8, 1, 0, 3, 0, 0, 0, 0, 0.3214285714285714, ["add     bucket, 10h", "cmp     bucket, r8", "jb      short loc_5730"], ["add~bucket,0", "cmp~bucket,r8", "jb~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 1, 3, 0.17857142857142855, ["cmp     qword ptr [bucket], 0", "jz      short loc_575D"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 8, 2, 0, 5, 1, 1, 2, 3, 0.125, ["mov     rax, [cursor+8]", "add     n_buckets_used, 1", "add     n_entries, 1", "test    cursor, cursor", "jz      short loc_575D"], ["mov~rax,[cursor+0]", "add~n_buckets_used,0", "add~n_entries,0", "test~cursor,cursor", "jz~FOO"]], [1, 0, 8, 1, 0, 4, 1, 1, 4, 3, 0.10714285714285714, ["mov     cursor, [cursor+8]", "add     n_entries, 1", "test    cursor, cursor", "jnz     short loc_5750"], ["mov~cursor,[cursor+0]", "add~n_entries,0", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 3, 4, 0.07142857142857142, ["nop     word ptr [cursor+cursor+00000000h]"], ["nop~[ord ptr [cursor+0]"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.21428571428571427, ["xor     eax, eax", "cmp     [table+18h], rsi", "jz      short loc_5770"], ["xor~eax,eax", "cmp~[table+0],rsi", "jz~FOO"]], [0, 0, 8, 0, 0, 6, 2, 0, 0, 2, 0.0, ["mov     bucket, [table]", "mov     r8, [table+8]", "xor     edx, edx", "xor     esi, esi", "cmp     bucket, r8", "jnb     short loc_5766"], ["mov~bucket,<TAG>", "mov~r8,[table+0]", "xor~edx,edx", "xor~esi,esi", "cmp~bucket,r8", "jnb~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["cmp     [table+20h], rdx", "setz    al", "retn"], ["cmp~[table+0],rdx", "setz~al", "retn"]]], "func_feature": [0, 5, 4, 0, 9, 13, 0, 28, 0.1131, 0, 4], "succs": [[1, 5], [0, 2], [0, 4], [0, 3], [3], [8, 7], [1, 5], [], []], "fname": "hash_table_ok", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 2, 0, 0, 2, 0, 0, 0, 0, 0.06043956043956045, ["pxor    xmm1, xmm1", "cvtsi2sd xmm1, rbp"], ["pxor~xmm1,xmm1", "cvtsi2sd~xmm1,rbp"]], [2, 0, 4, 0, 0, 11, 3, 0, 2, 1, 0.09890109890109891, ["mov     rax, r13", "mov     rdx, r13", "pxor    xmm0, xmm0", "shr     rax, 1", "and     edx, 1", "or      rax, rdx", "test    rbp, rbp", "cvtsi2sd xmm0, rax", "addsd   xmm0, xmm0", "mulsd   xmm0, cs:qword_BAE8", "jns     short loc_582F"], ["mov~rax,r13", "mov~rdx,r13", "pxor~xmm0,xmm0", "shr~rax,0", "and~edx,0", "or~rax,rdx", "test~rbp,rbp", "cvtsi2sd~xmm0,rax", "addsd~xmm0,xmm0", "mulsd~xmm0,<TAG>", "jns~FOO"]], [0, 0, 4, 0, 0, 5, 1, 1, 2, 1, 0.09890109890109891, ["pxor    xmm0, xmm0", "test    rbp, rbp", "cvtsi2sd xmm0, r13", "mulsd   xmm0, cs:qword_BAE8", "js      short loc_58A9"], ["pxor~xmm0,xmm0", "test~rbp,rbp", "cvtsi2sd~xmm0,r13", "mulsd~xmm0,<TAG>", "js~FOO"]], [1, 0, 13, 0, 0, 4, 1, 1, 3, 5, 0.08241758241758243, ["mov     rax, [rsi+8]", "mov     edx, 1", "test    rax, rax", "jz      short loc_57D5"], ["mov~rax,[rsi+0]", "mov~edx,0", "test~rax,rax", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 2, 4, 0.14835164835164835, ["cmp     qword ptr [rsi], 0", "jz      short loc_57DC"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 13, 1, 0, 3, 0, 0, 3, 3, 0.28571428571428575, ["add     rsi, 10h", "cmp     rsi, rdi", "jb      short loc_57B0"], ["add~rsi,0", "cmp~rsi,rdi", "jb~FOO"]], [0, 0, 13, 0, 0, 2, 0, 0, 4, 4, 0.16483516483516486, ["cmp     rbx, rdx", "cmovb   rbx, rdx"], ["cmp~rbx,rdx", "cmovb~rbx,rdx"]], [0, 0, 13, 0, 0, 1, 0, 0, 4, 6, 0.03296703296703297, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 14, 1, 0, 14, 1, 0, 0, 3, 0.0, ["push    r13", "push    r12", "mov     r12, stream", "push    rbp", "push    rbx", "xor     ebx, ebx", "sub     rsp, 8", "mov     stream, [table]", "mov     rcx, [table+20h]", "mov     rbp, [table+10h]", "mov     r13, [table+18h]", "mov     table, [table+8]", "cmp     rsi, rdi", "jnb     short loc_57E5"], ["push~r13", "push~r12", "mov~r12,stream", "push~rbp", "push~rbx", "xor~ebx,ebx", "sub~rsp,0", "mov~stream,<TAG>", "mov~rcx,[table+0]", "mov~rbp,[table+0]", "mov~r13,[table+0]", "mov~table,[table+0]", "cmp~rsi,rdi", "jnb~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 1, 5, 0.03296703296703297, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [2, 0, 2, 0, 0, 8, 2, 1, 3, 0, 0.06043956043956045, ["mov     rax, rbp", "pxor    xmm1, xmm1", "shr     rax, 1", "and     ebp, 1", "or      rax, rbp", "cvtsi2sd xmm1, rax", "addsd   xmm1, xmm1", "jmp     loc_5838"], ["mov~rax,rbp", "pxor~xmm1,xmm1", "shr~rax,0", "and~ebp,0", "or~rax,rbp", "cvtsi2sd~xmm1,rax", "addsd~xmm1,xmm1", "jmp~FOO"]], [2, 0, 6, 0, 2, 13, 3, 3, 1, 2, 0.26373626373626374, ["lea     rdx, aEntriesLu; \"# entries:         %lu\\n\"", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rdx, aBucketsLu; \"# buckets:         %lu\\n\"", "xor     eax, eax", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "call    ___fprintf_chk", "test    r13, r13", "js      short loc_5880"], ["lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rdx,<TAG>", "xor~eax,eax", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "call~FOO", "test~r13,r13", "js~FOO"]], [1, 0, 13, 1, 0, 4, 1, 1, 5, 5, 0.06043956043956045, ["mov     rax, [rax+8]", "add     rdx, 1", "test    rax, rax", "jnz     short loc_57C8"], ["mov~rax,[rax+0]", "add~rdx,0", "test~rax,rax", "jnz~FOO"]], [4, 0, 1, 1, 1, 18, 1, 2, 4, -1, 0.07142857142857144, ["divsd   xmm0, xmm1", "lea     rdx, aBucketsUsedLu2; \"# buckets used:    %lu (%.2f%%)\\n\"", "mov     rcx, r13", "mov     rdi, stream", "mov     esi, 1", "mov     eax, 1", "call    ___fprintf_chk", "add     rsp, 8", "mov     rcx, rbx", "mov     rdi, stream", "pop     rbx", "pop     rbp", "pop     stream", "pop     r13", "lea     rdx, aMaxBucketLengt; \"max bucket length: %lu\\n\"", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["divsd~xmm0,xmm1", "lea~rdx,<TAG>", "mov~rcx,r13", "mov~rdi,stream", "mov~esi,0", "mov~eax,0", "call~FOO", "add~rsp,0", "mov~rcx,rbx", "mov~rdi,stream", "pop~rbx", "pop~rbp", "pop~stream", "pop~r13", "lea~rdx,<TAG>", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 5, -1, 0.0, [], []]], "func_feature": [3, 13, 10, 0, 15, 22, 0, 88, 0.09744, 5, 4], "succs": [[13], [0, 10], [0, 10], [6, 7], [3, 5], [11, 4], [5], [12], [9, 11], [4], [13], [1, 2], [12, 6], [14], []], "fname": "hash_print_statistics", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.03571428571428571, ["jmp     short loc_5921"], ["jmp~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 1, -1, 0.10714285714285714, ["mov     rsi, [bucket+0]", "test    rsi, rsi", "jnz     short loc_590C"], ["mov~rsi,[bucket+0]", "test~rsi,rsi", "jnz~FOO"]], [1, 0, 8, 2, 1, 13, 0, 1, 0, 1, 0.0, ["push    r13", "push    r12", "mov     r13, entry", "push    rbp", "mov     rbp, [table]", "mov     r12, table", "mov     entry, [table+10h]", "mov     table, entry", "call    qword ptr [table+30h]", "shl     rax, 4", "add     rbp, rax", "cmp     [table+8], bucket", "jbe     short loc_593A"], ["push~r13", "push~r12", "mov~r13,entry", "push~rbp", "mov~rbp,<TAG>", "mov~r12,table", "mov~entry,[table+0]", "mov~table,entry", "call~[word ptr [table+0]", "shl~rax,0", "add~rbp,rax", "cmp~[table+0],bucket", "jbe~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 4, -1, 0.03571428571428571, ["mov     rsi, [cursor+0]"], ["mov~rsi,[cursor+0]"]], [0, 0, 5, 0, 0, 3, 1, 1, 3, -1, 0.08928571428571427, ["mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_5908"], ["mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 0, 0, 0, 5, 1, 0, 3, -1, 0.0, ["pop     rbp", "xor     eax, eax", "pop     table", "pop     entry", "retn"], ["pop~rbp", "xor~eax,eax", "pop~table", "pop~entry", "retn"]], [0, 0, 5, 0, 1, 4, 1, 2, 2, -1, 0.17857142857142855, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_5930"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 3, -1, 0.0, ["mov     rax, [cursor+0]", "pop     cursor", "pop     table", "pop     entry", "retn"], ["mov~rax,[cursor+0]", "pop~cursor", "pop~table", "pop~entry", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [3, 4, 7, 0, 9, 10, 0, 36, 0.0496, 0, 2], "succs": [[5], [0, 6], [8, 1], [6], [3, 5], [], [4, 7], [], []], "fname": "hash_lookup", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 4, 0, 0, 3, 1, 1, 5, 2, 0.06944444444444445, ["mov     rax, [bucket]", "test    rax, rax", "jz      short loc_5960"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 0, 2, 0.0, ["cmp     qword ptr [table+20h], 0", "jz      short loc_5973"], ["cmp~[word ptr [table+0],0", "jz~FOO"]], [1, 0, 4, 1, 0, 3, 0, 0, 4, 1, 0.15277777777777776, ["add     bucket, 10h", "cmp     bucket, rcx", "jnb     short loc_5978"], ["add~bucket,0", "cmp~bucket,rcx", "jnb~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 3, 2, 0.1388888888888889, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 7, 0, 0, 4, 0, 0, 1, 1, 0.09722222222222221, ["mov     rdx, [table]", "mov     rcx, [table+8]", "cmp     bucket, rcx", "jnb     short loc_5978"], ["mov~rdx,<TAG>", "mov~rcx,[table+0]", "cmp~bucket,rcx", "jnb~FOO"]], [0, 0, 0, 0, 0, 2, 1, 0, 1, -1, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 6, 0, 0, 3, 1, 1, 2, 3, 0.1388888888888889, ["mov     rax, [bucket]", "test    rax, rax", "jnz     short locret_5976"], ["mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [1, 0, 0, 1, 1, 2, 0, 1, 2, 0, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]]], "func_feature": [1, 3, 4, 0, 10, 11, 0, 22, 0.05972, 0, 2], "succs": [[], [0, 3], [5, 6], [1, 9], [3], [8, 9], [], [], [4, 7], []], "fname": "hash_get_first", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 9, 0, 0, 3, 1, 1, 0, 0, 0.08181818181818182, ["test    cursor, cursor", "mov     rax, cursor", "jz      short loc_59F8"], ["test~cursor,cursor", "mov~rax,cursor", "jz~FOO"]], [1, 0, 11, 1, 1, 14, 0, 1, 0, 1, 0.0, ["push    r12", "push    rbp", "mov     r12, table", "push    rbx", "mov     rbx, [table]", "mov     rbp, entry", "mov     entry, [table+10h]", "mov     table, entry", "call    qword ptr [table+30h]", "mov     rsi, [table+8]", "shl     rax, 4", "lea     rdx, [rbx+rax]", "cmp     rsi, bucket", "jbe     short loc_5A08"], ["push~r12", "push~rbp", "mov~r12,table", "push~rbx", "mov~rbx,<TAG>", "mov~rbp,entry", "mov~entry,[table+0]", "mov~table,entry", "call~[word ptr [table+0]", "mov~rsi,[table+0]", "shl~rax,0", "lea~rdx,<TAG>", "cmp~rsi,bucket", "jbe~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 3, -1, 0.09090909090909091, ["test    rax, rax", "jz      short loc_59F8"], ["test~rax,rax", "jz~FOO"]], [0, 0, 8, 0, 0, 4, 0, 1, 2, -1, 0.07272727272727272, ["mov     rcx, [rax]", "mov     rax, [rax+8]", "cmp     rcx, entry", "jz      short loc_59E0"], ["mov~rcx,<TAG>", "mov~rax,[rax+0]", "cmp~rcx,entry", "jz~FOO"]], [0, 0, 8, 0, 0, 4, 0, 1, 4, -1, 0.01818181818181818, ["mov     rcx, [cursor]", "mov     cursor, [cursor+8]", "cmp     rcx, entry", "jnz     short loc_59CF"], ["mov~rcx,<TAG>", "mov~cursor,[cursor+0]", "cmp~rcx,entry", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, -1, 0.02727272727272727, ["mov     rax, [rax]"], ["mov~rax,<TAG>"]], [0, 0, 0, 0, 0, 5, 1, 0, 3, -1, 0.0, ["pop     rbx", "xor     eax, eax", "pop     entry", "pop     table", "retn"], ["pop~rbx", "xor~eax,eax", "pop~entry", "pop~table", "retn"]], [1, 0, 4, 1, 0, 3, 0, 1, 2, -1, 0.14545454545454545, ["add     bucket, 10h", "cmp     rsi, bucket", "ja      short loc_59F0"], ["add~bucket,0", "cmp~rsi,bucket", "ja~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 4, -1, 0.0, ["pop     rbx", "pop     entry", "pop     table", "retn"], ["pop~rbx", "pop~entry", "pop~table", "retn"]], [0, 0, 4, 0, 0, 3, 1, 1, 3, -1, 0.03636363636363636, ["mov     rax, [bucket]", "test    rax, rax", "jnz     short loc_59E8"], ["mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 3, -1, 0.05454545454545454, ["test    rax, rax", "jz      short loc_59F8"], ["test~rax,rax", "jz~FOO"]]], "func_feature": [2, 5, 9, 0, 12, 17, 0, 46, 0.04394, 0, 2], "succs": [[3, 7], [0, 8], [5, 7], [2, 11], [2, 11], [9], [], [10, 6], [], [], [9, 7], [4, 7]], "fname": "hash_get_next", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 10, 0, 0, 3, 1, 1, 0, 0, 0.30303030303030304, ["mov     rcx, [bucket]", "test    rcx, rcx", "jz      short loc_5A5D"], ["mov~rcx,<TAG>", "test~rcx,rcx", "jz~FOO"]], [1, 0, 10, 1, 0, 3, 0, 1, 3, -1, 0.20833333333333334, ["add     bucket, 10h", "cmp     [table+8], bucket", "ja      short loc_5A1C"], ["add~bucket,0", "cmp~[table+0],bucket", "ja~FOO"]], [0, 0, 10, 0, 0, 1, 1, 0, 1, -1, 0.07575757575757576, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [0, 0, 10, 0, 0, 2, 0, 1, 6, -1, 0.17424242424242425, ["cmp     buffer_size, counter", "jz      short locret_5A70"], ["cmp~buffer_size,counter", "jz~FOO"]], [1, 0, 10, 1, 0, 6, 1, 1, 7, -1, 0.09848484848484848, ["mov     r8, [cursor]", "add     counter, 1", "mov     [buffer+counter*8-8], r8", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_5A40"], ["mov~r8,<TAG>", "add~counter,0", "mov~[buffer+0],r8", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 5, -1, 0.1590909090909091, ["nop     word ptr [counter+counter+00h]"], ["nop~[ord ptr [counter+0]"]], [0, 0, 10, 0, 0, 1, 0, 0, 5, -1, 0.17424242424242425, ["mov     r8, counter"], ["mov~r8,counter"]], [0, 0, 10, 0, 0, 2, 0, 0, 3, -1, 0.2689393939393939, ["cmp     buffer_size, counter", "jbe     short loc_5A67"], ["cmp~buffer_size,counter", "jbe~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     rax, counter", "retn"], ["mov~rax,counter", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 7, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 2, 1, 0, 1, 0, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [0, 0, 12, 0, 0, 3, 0, 0, 0, 1, 0.0, ["mov     bucket, [table]", "cmp     [table+8], bucket", "jbe     short loc_5A72"], ["mov~bucket,<TAG>", "cmp~[table+0],bucket", "jbe~FOO"]], [0, 0, 10, 0, 0, 5, 1, 1, 4, -1, 0.25, ["mov     [buffer+counter*8], rcx", "mov     rcx, [cursor+8]", "lea     rax, [counter+1]", "test    cursor, cursor", "jz      short loc_5A5A"], ["mov~<TAG>,rcx", "mov~rcx,[cursor+0]", "lea~rax,[counter+0]", "test~cursor,cursor", "jz~FOO"]]], "func_feature": [0, 5, 5, 0, 13, 17, 0, 32, 0.1317, 0, 2], "succs": [[1, 7], [0, 8], [0], [9, 4], [3, 6], [3], [1], [8, 12], [], [], [], [10, 2], [5, 6]], "fname": "hash_get_entries", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 7, 0, 0, 4, 1, 0, 0, 0, 0.08333333333333333, ["mov     r13, processor_data", "mov     r12, processor", "mov     r15, table", "xor     ebp, ebp"], ["mov~r13,processor_data", "mov~r12,processor", "mov~r15,table", "xor~ebp,ebp"]], [1, 0, 9, 1, 0, 10, 0, 0, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r14, [table]", "cmp     [table+8], bucket", "jbe     short loc_5AE6"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r14,<TAG>", "cmp~[table+0],bucket", "jbe~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     bucket", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~bucket", "pop~r15", "retn"]], [0, 0, 7, 0, 1, 4, 1, 2, 4, -1, 0.25, ["mov     rsi, processor_data", "call    processor", "test    al, al", "jz      short loc_5AD4"], ["mov~rsi,processor_data", "call~processor", "test~al,al", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 1, 1, 1, 0, 0.013888888888888888, ["xor     ebp, ebp", "jmp     short loc_5AD4"], ["xor~ebp,ebp", "jmp~FOO"]], [1, 0, 7, 1, 0, 3, 0, 1, 3, -1, 0.1388888888888889, ["add     bucket, 10h", "cmp     [table+8], bucket", "ja      short loc_5AA2"], ["add~bucket,0", "cmp~[table+0],bucket", "ja~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 2, -1, 0.25, ["mov     rdi, [bucket]", "test    rdi, rdi", "jz      short loc_5ACA"], ["mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 3, -1, 0.16666666666666666, ["mov     rbx, bucket", "jmp     short loc_5AB3"], ["mov~rbx,bucket", "jmp~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 6, -1, 0.013888888888888888, ["mov     rdi, [cursor]"], ["mov~rdi,<TAG>"]], [1, 0, 7, 1, 0, 4, 1, 1, 5, -1, 0.19444444444444442, ["mov     cursor, [cursor+8]", "add     counter, 1", "test    cursor, cursor", "jnz     short loc_5AB0"], ["mov~cursor,[cursor+0]", "add~counter,0", "test~cursor,cursor", "jnz~FOO"]]], "func_feature": [1, 5, 7, 0, 10, 14, 0, 42, 0.11111, 0, 4], "succs": [[6], [0, 4], [], [9, 2], [2], [2, 6], [5, 7], [3], [3], [8, 5]], "fname": "hash_do_for_each", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, rdx", "retn"], ["mov~rax,rdx", "retn"]], [0, 0, 3, 0, 0, 4, 2, 1, 0, 0, 0.0, ["movzx   ecx, byte ptr [string]", "xor     edx, edx", "test    cl, cl", "jz      short loc_5B1D"], ["movzx~ecx,<TAG>", "xor~edx,edx", "test~cl,cl", "jz~FOO"]], [2, 0, 2, 5, 0, 10, 2, 1, 2, 0, 0.16666666666666666, ["mov     rax, value", "add     string, 1", "shl     rax, 5", "sub     rax, value", "xor     edx, edx", "add     rax, ch_0", "movzx   ecx, byte ptr [rdi]", "div     n_buckets", "test    cl, cl", "jnz     short loc_5B00"], ["mov~rax,value", "add~string,0", "shl~rax,0", "sub~rax,value", "xor~edx,edx", "add~rax,ch_0", "movzx~ecx,<TAG>", "div~,n_buckets", "test~cl,cl", "jnz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 1, 0, 0.16666666666666666, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]]], "func_feature": [0, 4, 2, 0, 4, 5, 0, 17, 0.08333, 0, 5], "succs": [[], [0, 3], [0, 2], [2]], "fname": "hash_string", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[3, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0.0, ["mov     rax, 3F80000000000000h", "mov     byte ptr [tuning+10h], 0", "mov     [tuning], rax", "mov     rax, 3FB4FDF43F4CCCCDh", "mov     [tuning+8], rax", "retn"], ["mov~rax,0", "mov~[yte ptr [tuning+0],0", "mov~<TAG>,rax", "mov~rax,0", "mov~[tuning+0],rax", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 6, 0.0, 0, 0], "succs": [[]], "fname": "hash_reset_tuning", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 18, 0, 0, 3, 0, 0, 0, 0, 0.12931034482758622, ["divss   xmm0, xmm1", "ucomiss xmm0, cs:dword_BADC", "jnb     short fail"], ["divss~xmm0,xmm1", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [2, 0, 19, 0, 0, 8, 2, 1, 6, 0, 0.04802955665024631, ["mov     rax, candidate", "pxor    xmm0, xmm0", "shr     rax, 1", "and     ebx, 1", "or      rax, rbx", "cvtsi2ss xmm0, rax", "addss   xmm0, xmm0", "jmp     short loc_5CFF"], ["mov~rax,candidate", "pxor~xmm0,xmm0", "shr~rax,0", "and~ebx,0", "or~rax,rbx", "cvtsi2ss~xmm0,rax", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 19, 0, 0, 2, 0, 0, 6, -1, 0.04802955665024631, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, candidate"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,candidate"]], [2, 0, 13, 2, 0, 10, 0, 0, 8, -1, 0.2210591133004926, ["mov     rax, rbx", "mov     rcx, rbx", "mul     r8", "mov     rax, rdx", "shr     rax, 1", "lea     rax, [rax+rax*2]", "sub     rcx, rax", "cmp     rbx, 9", "mov     rax, rcx", "jbe     short loc_5C48"], ["mov~rax,rbx", "mov~rcx,rbx", "mul~,r8", "mov~rax,rdx", "shr~rax,0", "lea~rax,<TAG>", "sub~rcx,rax", "cmp~rbx,0", "mov~rax,rcx", "jbe~FOO"]], [1, 0, 13, 1, 0, 2, 0, 1, 10, -1, 0.021551724137931036, ["add     rbx, 2", "jmp     short loc_5BF0"], ["add~rbx,0", "jmp~FOO"]], [4, 0, 13, 0, 0, 6, 1, 0, 7, -1, 0.19704433497536947, ["cmp     candidate, 0Ah", "mov     eax, 0Ah", "mov     r8, 0AAAAAAAAAAAAAAABh", "cmovb   candidate, rax", "or      rbx, 1", "nop     dword ptr [rax+00h]"], ["cmp~candidate,0", "mov~eax,0", "mov~r8,0", "cmovb~candidate,rax", "or~rbx,0", "nop~[word ptr [rax+0]"]], [0, 1, 27, 0, 1, 9, 1, 2, 2, 4, 0.06157635467980296, ["mov     rbx, candidate", "mov     edi, 50h ; 'P'; size", "mov     r15, tuning", "mov     rbp, hasher", "mov     r13, data_freer", "call    _malloc", "test    rax, rax", "mov     r14, rax", "jz      loc_5CD0"], ["mov~rbx,candidate", "mov~edi,<STR>", "mov~r15,tuning", "mov~rbp,hasher", "mov~r13,data_freer", "call~FOO", "test~rax,rax", "mov~r14,rax", "jz~FOO"]], [0, 0, 28, 0, 0, 3, 1, 1, 1, 5, 0.03201970443349754, ["test    comparator, comparator", "mov     r12, comparator", "jz      loc_5CD0"], ["test~comparator,comparator", "mov~r12,comparator", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 9, -1, 0.0874384236453202, ["test    rcx, rcx", "jz      short loc_5C4D"], ["test~rcx,rcx", "jz~FOO"]], [0, 0, 17, 0, 0, 2, 0, 0, 8, -1, 0.11822660098522167, ["ucomiss xmm0, cs:dword_BAE0", "jb      short loc_5D34"], ["ucomiss~xmm0,<TAG>", "jb~FOO"]], [1, 0, 15, 0, 0, 5, 1, 1, 9, -1, 0.053571428571428575, ["subss   xmm0, cs:dword_BAE0", "mov     rax, 8000000000000000h", "cvttss2si rbx, xmm0", "xor     rbx, rax", "jmp     loc_5BBE"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rbx,xmm0", "xor~rbx,rax", "jmp~FOO"]], [0, 0, 26, 0, 0, 3, 1, 1, 3, 3, 0.08866995073891626, ["test    tuning, tuning", "lea     rdi, [table+28h]; table", "jz      loc_5CD5"], ["test~tuning,tuning", "lea~rdi,[table+0]", "jz~FOO"]], [3, 0, 13, 0, 0, 4, 0, 1, 10, -1, 0.05603448275862069, ["mov     edi, 10h", "mov     esi, 9", "mov     ecx, 3", "jmp     short loc_5C31"], ["mov~edi,0", "mov~esi,0", "mov~ecx,0", "jmp~FOO"]], [4, 0, 1, 2, 0, 9, 0, 0, 12, -1, 0.0067733990147783255, ["shl     rbx, 4", "mov     qword ptr [table+18h], 0", "mov     qword ptr [table+20h], 0", "add     rbx, rax", "mov     [table+30h], hasher", "mov     [table+38h], comparator", "mov     [table+8], rbx", "mov     [table+40h], data_freer", "mov     qword ptr [table+48h], 0"], ["shl~rbx,0", "mov~[word ptr [table+0],0", "mov~[word ptr [table+0],0", "add~rbx,rax", "mov~[table+0],hasher", "mov~[table+0],comparator", "mov~[table+0],rbx", "mov~[table+0],data_freer", "mov~[word ptr [table+0],0"]], [1, 0, 4, 0, 1, 6, 1, 2, 11, -1, 0.03633004926108374, ["mov     esi, 10h; size", "mov     rdi, rbx; nmemb", "call    _calloc", "test    rax, rax", "mov     [table], rax", "jz      short fail"], ["mov~esi,0", "mov~rdi,rbx", "call~FOO", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [0, 0, 23, 0, 1, 4, 1, 2, 4, 3, 0.07266009852216748, ["mov     [table+28h], tuning", "call    check_tuning", "test    al, al", "jz      fail"], ["mov~[table+0],tuning", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 13, 1, 0, 3, 1, 1, 12, -1, 0.004310344827586207, ["add     rdi, 8", "test    rdx, rdx", "jz      short loc_5C4D"], ["add~rdi,0", "test~rdx,rdx", "jz~FOO"]], [1, 0, 13, 3, 0, 8, 1, 1, 11, -1, 0.05233990147783251, ["add     rcx, 2", "xor     edx, edx", "mov     rax, rbx", "div     rcx", "add     rsi, rdi", "cmp     rbx, rsi", "mov     rax, rdx", "ja      short loc_5C28"], ["add~rcx,0", "xor~edx,edx", "mov~rax,rbx", "div~,rcx", "add~rsi,rdi", "cmp~rbx,rsi", "mov~rax,rdx", "ja~FOO"]], [0, 0, 2, 0, 1, 2, 0, 1, 5, -1, 0.049876847290640396, ["mov     rdi, table; ptr", "call    free"], ["mov~rdi,table", "call~FOO"]], [1, 0, 14, 0, 0, 3, 0, 1, 6, -1, 0.21798029556650247, ["mov     rax, 0FFFFFFFFFFFFFFFh", "cmp     candidate, rax", "ja      fail"], ["mov~rax,0", "cmp~candidate,rax", "ja~FOO"]], [1, 0, 5, 0, 0, 4, 0, 1, 10, -1, 0.08866995073891626, ["mov     rax, 0FFFFFFFFFFFFFFFh", "mov     [table+10h], rbx", "cmp     rbx, rax", "ja      short fail"], ["mov~rax,0", "mov~[table+0],rbx", "cmp~rbx,rax", "ja~FOO"]], [0, 0, 22, 0, 1, 6, 1, 2, 4, 2, 0.038177339901477834, ["lea     table, default_tuning", "mov     [table+28h], rax", "call    check_tuning", "test    al, al", "movss   xmm1, cs:dword_BAD8", "jz      short fail"], ["lea~table,<TAG>", "mov~[table+0],rax", "call~FOO", "test~al,al", "movss~xmm1,<TAG>", "jz~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 5, 2, 0.0874384236453202, ["cmp     byte ptr [tuning+10h], 0", "jz      loc_5D3E"], ["cmp~[yte ptr [tuning+0],0", "jz~FOO"]], [0, 0, 15, 0, 0, 2, 0, 1, 9, -1, 0.053571428571428575, ["cvttss2si rbx, xmm0", "jmp     loc_5BBE"], ["cvttss2si~rbx,xmm0", "jmp~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, r14", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,r14", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 1, 0, 0, 2, 1, 1, 1, -1, 0.02647783251231527, ["xor     r14d, r14d", "jmp     short loc_5CAF"], ["xor~r14d,r14d", "jmp~FOO"]], [0, 0, 21, 0, 0, 3, 1, 0, 6, 1, 0.014778325123152709, ["test    candidate, candidate", "movss   xmm1, dword ptr [tuning+8]", "jns     short loc_5CF6"], ["test~candidate,candidate", "movss~xmm1,[word ptr [tuning+0]", "jns~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 9, -1, 0.12623152709359606, ["test    rax, rax", "jnz     short loc_5C58"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 29, 1, 0, 9, 1, 1, 0, 6, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "test    hasher, hasher", "jz      loc_5CD0"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "test~hasher,hasher", "jz~FOO"]], [0, 0, 21, 0, 0, 2, 1, 1, 5, 1, 0.05172413793103448, ["test    candidate, candidate", "js      short loc_5D49"], ["test~candidate,candidate", "js~FOO"]]], "func_feature": [5, 18, 26, 0, 30, 48, 2, 135, 0.06966, 4, 11], "succs": [[9, 18], [0], [0], [8, 27], [3], [3], [25, 11], [25, 6], [4, 12], [10, 23], [19], [21, 15], [17], [24], [18, 13], [18, 22], [17, 4], [16, 27], [25], [18, 5], [18, 14], [18, 29], [26, 19], [19], [], [24], [1, 2], [20, 4], [25, 7], [1, 2]], "fname": "hash_initialize", "n_num": 30}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 11, 0, 1, 3, 0, 1, 0, 0, 0.0, ["mov     rdi, [cursor]", "call    rax", "mov     rax, [table+40h]"], ["mov~rdi,<TAG>", "call~rax", "mov~rax,[table+0]"]], [0, 0, 11, 0, 0, 2, 1, 1, 4, 5, 0.21818181818181817, ["test    rax, rax", "jz      short loc_5DA6"], ["test~rax,rax", "jz~FOO"]], [1, 0, 11, 0, 0, 8, 1, 1, 5, 4, 0.21818181818181817, ["mov     rdx, [cursor+8]", "mov     rcx, [table+48h]", "mov     qword ptr [cursor], 0", "test    next, next", "mov     [cursor+8], rcx", "mov     [table+48h], cursor", "mov     rbx, next", "jnz     short loc_5D98"], ["mov~rdx,[cursor+0]", "mov~rcx,[table+0]", "mov~<TAG>,0", "test~next,next", "mov~[cursor+0],rcx", "mov~[table+0],cursor", "mov~rbx,next", "jnz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 1, 2, 0.3818181818181818, ["cmp     qword ptr [bucket], 0", "jz      short loc_5DE1"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 11, 1, 0, 3, 0, 1, 2, 1, 0.3818181818181818, ["add     bucket, 10h", "cmp     [table+8], bucket", "ja      short loc_5D80"], ["add~bucket,0", "cmp~[table+0],bucket", "ja~FOO"]], [0, 0, 11, 0, 0, 7, 0, 0, 0, 1, 0.0, ["push    r12", "push    rbp", "mov     rbp, table", "push    rbx", "mov     r12, [table]", "cmp     bucket, [table+8]", "jnb     short loc_5DEB"], ["push~r12", "push~rbp", "mov~rbp,table", "push~rbx", "mov~r12,<TAG>", "cmp~bucket,[table+0]", "jnb~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 3, 3, 0.35454545454545455, ["test    rax, rax", "jz      short loc_5DD0"], ["test~rax,rax", "jz~FOO"]], [0, 0, 11, 0, 0, 4, 1, 1, 2, 4, 0.35454545454545455, ["mov     rbx, [bucket+8]", "mov     rax, [table+40h]", "test    cursor, cursor", "jz      short loc_5DC5"], ["mov~rbx,[bucket+0]", "mov~rax,[table+0]", "test~cursor,cursor", "jz~FOO"]], [2, 0, 11, 0, 0, 2, 0, 0, 4, 2, 0.35454545454545455, ["mov     qword ptr [bucket], 0", "mov     qword ptr [bucket+8], 0"], ["mov~<TAG>,0", "mov~[word ptr [bucket+0],0"]], [0, 0, 11, 0, 1, 2, 0, 1, 4, 3, 0.0, ["mov     rdi, [bucket]", "call    rax"], ["mov~rdi,<TAG>", "call~rax"]], [0, 0, 11, 0, 0, 1, 0, 0, 3, 6, 0.1909090909090909, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [2, 0, 0, 0, 0, 6, 0, 0, 1, 0, 0.0, ["mov     qword ptr [table+18h], 0", "mov     qword ptr [table+20h], 0", "pop     rbx", "pop     table", "pop     bucket", "retn"], ["mov~[word ptr [table+0],0", "mov~[word ptr [table+0],0", "pop~rbx", "pop~table", "pop~bucket", "retn"]]], "func_feature": [2, 4, 8, 0, 12, 18, 0, 42, 0.20455, 0, 1], "succs": [[2], [0, 2], [1, 6], [4, 7], [11, 3], [11, 3], [8, 9], [10, 6], [4], [8], [1], []], "fname": "hash_clear", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 9, 0, 1, 5, 1, 2, 0, 0, 0.01666666666666667, ["mov     rbx, [cursor+8]", "call    free", "test    next, next", "mov     rdi, next", "jnz     short loc_5E80"], ["mov~rbx,[cursor+0]", "call~FOO", "test~next,next", "mov~rdi,next", "jnz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 4, 4, 0.03571428571428572, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 21, 0, 0, 8, 0, 1, 0, 3, 0.0, ["push    r12", "push    rbp", "mov     r12, table", "push    rbx", "cmp     qword ptr [table+40h], 0", "mov     rbp, [table]", "mov     rax, [table+8]", "jz      short loc_5E63"], ["push~r12", "push~rbp", "mov~r12,table", "push~rbx", "cmp~[word ptr [table+0],0", "mov~rbp,<TAG>", "mov~rax,[table+0]", "jz~FOO"]], [1, 0, 9, 1, 0, 3, 0, 1, 4, 2, 0.05476190476190477, ["add     bucket, 10h", "cmp     [table+8], bucket", "ja      short loc_5E70"], ["add~bucket,0", "cmp~[table+0],bucket", "ja~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 3, 3, 0.11190476190476191, ["mov     rdi, [bucket+8]; ptr", "test    cursor, cursor", "jz      short loc_5E91"], ["mov~rdi,[bucket+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [0, 0, 1, 0, 1, 7, 0, 2, 3, 0, 0.04761904761904762, ["mov     cursor, [table]; ptr", "call    free", "pop     rbx", "mov     rdi, table; ptr", "pop     rbp", "pop     table", "jmp     free"], ["mov~cursor,<TAG>", "call~FOO", "pop~rbx", "mov~rdi,table", "pop~rbp", "pop~table", "jmp~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 1, 3, 0.02142857142857143, ["cmp     qword ptr [table+20h], 0", "jz      short loc_5E63"], ["cmp~[word ptr [table+0],0", "jz~FOO"]], [0, 0, 19, 0, 0, 2, 0, 0, 2, 2, 0.04404761904761905, ["cmp     bucket, rax", "jnb     short loc_5E9C"], ["cmp~bucket,rax", "jnb~FOO"]], [0, 0, 18, 0, 0, 1, 0, 0, 3, 6, 0.0642857142857143, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 4, 0, 0, 3, 1, 1, 2, 1, 0.1619047619047619, ["mov     rdi, [table+48h]; ptr", "test    cursor, cursor", "jz      short loc_5EC1"], ["mov~rdi,[table+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 0, 1, 2, 0.24404761904761907, ["cmp     rbp, rax", "jnb     short loc_5E9C"], ["cmp~rbp,rax", "jnb~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 3, 2, 0.04285714285714286, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 18, 0, 0, 3, 1, 1, 4, 5, 0.11904761904761905, ["mov     rdi, [bucket+0]", "test    rdi, rdi", "jz      short loc_5E56"], ["mov~rdi,[bucket+0]", "test~rdi,rdi", "jz~FOO"]], [1, 0, 18, 1, 0, 3, 0, 1, 5, 4, 0.2142857142857143, ["add     bucket, 10h", "cmp     rax, bucket", "ja      short loc_5E28"], ["add~bucket,0", "cmp~rax,bucket", "ja~FOO"]], [0, 0, 18, 0, 0, 2, 0, 1, 5, 7, 0.04761904761904762, ["mov     rbx, bucket", "jmp     short loc_5E43"], ["mov~rbx,bucket", "jmp~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 4, 1, 0.004761904761904762, ["mov     rbx, [cursor+8]", "call    free", "test    next, next", "mov     rdi, next", "jnz     short loc_5EB0"], ["mov~rbx,[cursor+0]", "call~FOO", "test~next,next", "mov~rdi,next", "jnz~FOO"]], [0, 0, 18, 0, 0, 1, 0, 0, 7, 7, 0.0, ["mov     rdi, [cursor]"], ["mov~rdi,<TAG>"]], [0, 0, 18, 0, 1, 4, 1, 2, 6, 6, 0.10714285714285715, ["call    qword ptr [table+40h]", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_5E40"], ["call~[word ptr [table+0]", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 18, 0, 0, 1, 0, 0, 7, 5, 0.10476190476190478, ["mov     rax, [table+8]"], ["mov~rax,[table+0]"]], [0, 0, 11, 0, 0, 1, 0, 0, 6, 3, 0.19761904761904764, ["mov     bucket, [table]"], ["mov~bucket,<TAG>"]], [0, 0, 9, 0, 0, 1, 0, 0, 2, 4, 0.1142857142857143, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]]], "func_feature": [4, 6, 16, 0, 22, 33, 1, 59, 0.07976, 0, 2], "succs": [[0, 3], [0], [11, 7], [10, 4], [1, 3], [], [5], [8, 11], [9, 10], [13], [12, 6], [10, 21], [16], [14, 15], [20, 13], [18], [16, 6], [18], [17, 19], [14], [11], [4]], "fname": "hash_free", "n_num": 22}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[1, 0, 20, 2, 1, 8, 0, 1, 0, 0, 0.44155844155844154, ["mov     rbx, [new_table]", "mov     rsi, [new_table+10h]", "mov     rdi, r15", "call    qword ptr [new_table+30h]", "shl     rax, 4", "add     rbx, rax", "cmp     [new_table+8], new_bucket", "jbe     loc_6090"], ["mov~rbx,<TAG>", "mov~rsi,[new_table+0]", "mov~rdi,r15", "call~[word ptr [new_table+0]", "shl~rax,0", "add~rbx,rax", "cmp~[new_table+0],new_bucket", "jbe~FOO"]], [0, 0, 20, 0, 0, 2, 0, 1, 4, 2, 0.19047619047619047, ["mov     r13, bucket", "jmp     short loc_5F71"], ["mov~r13,bucket", "jmp~FOO"]], [0, 0, 20, 0, 0, 2, 0, 0, 9, 2, 0.2077922077922078, ["mov     r15, [next+0]", "mov     r13, next"], ["mov~r15,[next+0]", "mov~r13,next"]], [1, 0, 0, 1, 0, 9, 1, 0, 1, -1, 0.0, ["add     rsp, 18h", "xor     eax, eax", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "xor~eax,eax", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 22, 1, 1, 17, 1, 2, 0, 6, 0.0, ["push    r15", "push    r14", "mov     rax, table_0", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     rcx, [rax+38h]; comparator", "mov     rdx, [rax+30h]; hasher", "mov     [rsp+48h+table], table_0", "mov     r8, [rax+40h]; data_freer", "mov     table_0, candidate; candidate", "mov     candidate, [table_0+28h]; tuning", "call    hash_initialize", "test    new_table, new_table", "jz      loc_607F"], ["push~r15", "push~r14", "mov~rax,table_0", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rcx,[rax+0]", "mov~rdx,[rax+0]", "mov~[rsp+0],table_0", "mov~r8,[rax+0]", "mov~table_0,candidate", "mov~candidate,[table_0+0]", "call~FOO", "test~new_table,new_table", "jz~FOO"]], [1, 0, 20, 0, 1, 4, 1, 2, 9, 5, 0.07034632034632035, ["mov     edi, 10h; size", "call    _malloc", "test    rax, rax", "jnz     short loc_6053"], ["mov~edi,0", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 20, 0, 0, 3, 0, 1, 6, 5, 0.4025974025974026, ["cmp     qword ptr [new_bucket], 0", "mov     rbp, [cursor+8]", "jnz     short loc_5F50"], ["cmp~<TAG>,0", "mov~rbp,[cursor+0]", "jnz~FOO"]], [1, 0, 20, 1, 0, 4, 0, 1, 7, 4, 0.16017316017316016, ["mov     [new_bucket], r15", "add     qword ptr [new_table+18h], 1", "cmp     bucket, cursor", "jz      short loc_5F65"], ["mov~<TAG>,r15", "add~[word ptr [new_table+0],0", "cmp~bucket,cursor", "jz~FOO"]], [0, 0, 20, 0, 0, 1, 0, 0, 9, 5, 0.010822510822510822, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 20, 0, 0, 6, 1, 1, 8, 3, 0.06060606060606061, ["mov     qword ptr [cursor+0], 0", "mov     rax, [new_table+48h]", "test    next, next", "mov     [cursor+8], rax", "mov     [new_table+48h], cursor", "jnz     short loc_5F6A"], ["mov~[word ptr [cursor+0],0", "mov~rax,[new_table+0]", "test~next,next", "mov~[cursor+0],rax", "mov~[new_table+0],cursor", "jnz~FOO"]], [0, 0, 21, 0, 0, 7, 0, 0, 1, 5, 0.04329004329004329, ["mov     rcx, [rsp+48h+table]", "mov     r12, new_table", "mov     r14, [rcx]", "cmp     [rcx+8], bucket", "mov     new_table, [rcx+48h]", "mov     [new_table+48h], rax", "jbe     loc_5FE6"], ["mov~rcx,[rsp+0]", "mov~r12,new_table", "mov~r14,<TAG>", "cmp~[rcx+0],bucket", "mov~new_table,[rcx+0]", "mov~[new_table+0],rax", "jbe~FOO"]], [0, 0, 20, 0, 0, 1, 0, 0, 2, 4, 0.08008658008658008, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [2, 0, 0, 1, 2, 24, 0, 2, 2, -1, 0.0, ["mov     rdi, r14; ptr", "call    free", "mov     rax, [new_table]", "mov     rdx, [rsp+48h+table]", "mov     rdi, new_table; ptr", "mov     [rdx], rax", "mov     rax, [new_table+8]", "mov     [rdx+8], rax", "mov     rax, [new_table+10h]", "mov     [rdx+10h], rax", "mov     rax, [new_table+18h]", "mov     [rdx+18h], rax", "mov     rax, [new_table+48h]", "mov     [rdx+48h], rax", "call    free", "add     rsp, 18h", "mov     eax, 1", "pop     rbx", "pop     rbp", "pop     new_table", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~rdi,r14", "call~FOO", "mov~rax,<TAG>", "mov~rdx,[rsp+0]", "mov~rdi,new_table", "mov~<TAG>,rax", "mov~rax,[new_table+0]", "mov~[rdx+0],rax", "mov~rax,[new_table+0]", "mov~[rdx+0],rax", "mov~rax,[new_table+0]", "mov~[rdx+0],rax", "mov~rax,[new_table+0]", "mov~[rdx+0],rax", "call~FOO", "add~rsp,0", "mov~eax,0", "pop~rbx", "pop~rbp", "pop~new_table", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 1, 0, 0, 1, 0, 0, 5, -1, 0.0367965367965368, ["mov     bucket, [rax]"], ["mov~bucket,<TAG>"]], [0, 0, 20, 0, 0, 3, 1, 1, 3, 3, 0.20995670995670995, ["mov     r15, [bucket]", "test    r15, r15", "jz      loc_5FD0"], ["mov~r15,<TAG>", "test~r15,r15", "jz~FOO"]], [1, 0, 20, 1, 0, 4, 0, 1, 4, 4, 0.16233766233766234, ["mov     rax, [rsp+48h+table]", "add     bucket, 10h", "cmp     [rax+8], bucket", "ja      loc_5F38"], ["mov~rax,[rsp+0]", "add~bucket,0", "cmp~[rax+0],bucket", "ja~FOO"]], [0, 0, 20, 0, 0, 3, 1, 1, 8, 6, 0.1406926406926407, ["mov     rax, [new_table+48h]", "test    rax, rax", "jz      short loc_6070"], ["mov~rax,[new_table+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 20, 0, 0, 2, 0, 1, 7, 5, 0.20562770562770563, ["cmp     bucket, cursor", "jz      loc_6040"], ["cmp~bucket,cursor", "jz~FOO"]], [0, 0, 20, 0, 0, 2, 0, 0, 9, 5, 0.03354978354978355, ["mov     rcx, [rax+8]", "mov     [new_table+48h], rcx"], ["mov~rcx,[rax+0]", "mov~[new_table+0],rcx"]], [0, 0, 20, 0, 0, 2, 1, 1, 8, 3, 0.2813852813852814, ["test    next, next", "jz      short loc_5FD0"], ["test~next,next", "jz~FOO"]], [0, 0, 20, 0, 0, 3, 0, 0, 8, 4, 0.02813852813852814, ["mov     rax, [new_bucket+8]", "mov     [cursor+8], rax", "mov     [new_bucket+8], cursor"], ["mov~rax,[new_bucket+0]", "mov~[cursor+0],rax", "mov~[new_bucket+0],cursor"]], [0, 0, 20, 0, 0, 5, 0, 1, 10, 4, 0.10822510822510822, ["mov     rdx, [new_bucket+8]", "mov     [rax], r15", "mov     [rax+8], rdx", "mov     [new_bucket+8], rax", "jmp     loc_5F65"], ["mov~rdx,[new_bucket+0]", "mov~<TAG>,r15", "mov~[rax+0],rdx", "mov~[new_bucket+0],rax", "jmp~FOO"]]], "func_feature": [6, 7, 18, 0, 23, 32, 2, 114, 0.12498, 0, 7], "succs": [[6, 7], [0], [0], [], [11, 3], [3, 22], [], [8, 18], [10, 20], [16], [9, 2], [12, 13], [15], [], [13], [16, 1], [14, 15], [19, 5], [17, 21], [22], [16, 2], [20], [20]], "fname": "hash_rehash", "n_num": 23}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[1, 0, 31, 0, 0, 3, 0, 1, 0, 0, 0.049910873440285206, ["mov     r12, [rsp+28h+bucket]", "cmp     qword ptr [r12], 0", "jz      short loc_6130"], ["mov~r12,<TAG>", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 32, 0, 1, 7, 2, 2, 1, -1, 0.0285204991087344, ["xor     ecx, ecx; delete", "mov     rdx, rsp; bucket_head", "mov     rbp, table", "mov     rbx, entry", "call    hash_find_entry", "test    data, data", "jz      short loc_60F8"], ["xor~ecx,ecx", "mov~rdx,rsp", "mov~rbp,table", "mov~rbx,entry", "call~FOO", "test~data,data", "jz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 0, 14, -1, 0.10606060606060605, ["ucomiss xmm0, cs:dword_BADC", "jnb     short loc_619B"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [1, 0, 12, 0, 0, 3, 0, 1, 13, -1, 0.11853832442067735, ["cmp     byte ptr [tuning+10h], 0", "mulss   xmm0, dword ptr [tuning+0Ch]", "jnz     short loc_6201"], ["cmp~[yte ptr [tuning+0],0", "mulss~xmm0,[word ptr [tuning+0]", "jnz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 0, 14, -1, 0.0, ["mulss   xmm0, xmm2"], ["mulss~xmm0,xmm2"]], [0, 0, 7, 0, 0, 3, 1, 1, 3, -1, 0.013368983957219251, ["mov     data, [table+48h]", "test    rax, rax", "jz      short loc_6188"], ["mov~data,[table+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 4, -1, 0.0035650623885918, ["mov     rdx, [rax+8]", "mov     [table+48h], rdx"], ["mov~rdx,[rax+0]", "mov~[table+0],rdx"]], [0, 0, 8, 0, 0, 2, 0, 0, 15, -1, 0.07397504456327986, ["ucomiss xmm0, cs:dword_BAE0", "jnb     loc_62BE"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [1, 0, 5, 0, 1, 4, 1, 2, 4, -1, 0.0089126559714795, ["mov     edi, 10h; size", "call    _malloc", "test    rax, rax", "jnz     loc_6114"], ["mov~edi,0", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 16, -1, 0.021836007130124777, ["cvttss2si rsi, xmm0; candidate"], ["cvttss2si~rsi,xmm0"]], [2, 0, 14, 0, 0, 8, 2, 1, 11, -1, 0.06818181818181818, ["mov     rcx, rax", "pxor    xmm1, xmm1", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_61E6"], ["mov~rcx,rax", "pxor~xmm1,xmm1", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 16, 0, 0, 3, 1, 1, 10, -1, 0.14705882352941177, ["mov     rax, [table+18h]", "test    rax, rax", "js      loc_6280"], ["mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 5, -1, 0.011140819964349376, ["xor     eax, eax", "jmp     loc_60D6"], ["xor~eax,eax", "jmp~FOO"]], [0, 0, 5, 0, 1, 4, 1, 2, 17, -1, 0.0338680926916221, ["mov     rdi, table; table", "call    hash_rehash", "test    al, al", "jnz     loc_617B"], ["mov~rdi,table", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 6, 0, 0, 5, 1, 1, 16, -1, 0.021836007130124777, ["subss   xmm0, cs:dword_BAE0", "mov     rax, 8000000000000000h", "cvttss2si rsi, xmm0", "xor     rsi, rax", "jmp     loc_621C"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rsi,xmm0", "xor~rsi,rax", "jmp~FOO"]], [1, 0, 3, 1, 0, 7, 0, 1, 5, -1, 0.007575757575757575, ["mov     rdx, [r12+8]", "mov     [rax], entry", "mov     [rax+8], rdx", "mov     [r12+8], rax", "mov     rax, entry", "add     qword ptr [table+20h], 1", "jmp     short loc_60D6"], ["mov~rdx,[r12+0]", "mov~<TAG>,entry", "mov~[rax+0],rdx", "mov~[r12+0],rax", "mov~rax,entry", "add~[word ptr [table+0],0", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 18, -1, 0.0053475935828877, ["xor     eax, eax", "jmp     loc_60D6"], ["xor~eax,eax", "jmp~FOO"]], [2, 0, 17, 0, 0, 8, 2, 1, 9, -1, 0.0641711229946524, ["mov     rcx, rax", "pxor    xmm0, xmm0", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm0, rcx", "addss   xmm0, xmm0", "jmp     loc_61D0"], ["mov~rcx,rax", "pxor~xmm0,xmm0", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm0,rcx", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 19, 0, 1, 7, 1, 2, 8, -1, 0.13101604278074866, ["lea     rdi, [table+28h]; table", "call    check_tuning", "mov     rax, [table+10h]", "mov     rdx, [table+28h]", "test    rax, rax", "movss   xmm2, dword ptr [rdx+8]", "js      loc_62A0"], ["lea~rdi,[table+0]", "call~FOO", "mov~rax,[table+0]", "mov~rdx,[table+0]", "test~rax,rax", "movss~xmm2,[word ptr [rdx+0]", "js~FOO"]], [1, 0, 34, 1, 0, 9, 2, 1, 0, 1, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 10h", "mov     rax, fs:28h", "mov     [rsp+28h+var_20], rax", "xor     eax, eax", "test    entry, entry", "jz      loc_62E2"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~entry,entry", "jz~FOO"]], [0, 0, 20, 0, 0, 3, 0, 1, 7, -1, 0.1497326203208556, ["mulss   xmm1, dword ptr [rdx+8]", "ucomiss xmm0, xmm1", "ja      short loc_61A8"], ["mulss~xmm1,[word ptr [rdx+0]", "ucomiss~xmm0,xmm1", "ja~FOO"]], [2, 0, 24, 0, 0, 8, 2, 1, 4, -1, 0.0374331550802139, ["mov     rdx, rax", "pxor    xmm0, xmm0", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0", "jmp     loc_6157"], ["mov~rdx,rax", "pxor~xmm0,xmm0", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0", "jmp~FOO"]], [2, 0, 26, 2, 0, 7, 1, 1, 3, -1, 0.058823529411764705, ["mov     data, [table+18h]", "mov     [r12], entry", "add     qword ptr [table+20h], 1", "add     rax, 1", "test    rax, rax", "mov     [table+18h], rax", "js      loc_6260"], ["mov~data,[table+0]", "mov~<TAG>,entry", "add~[word ptr [table+0],0", "add~rax,0", "test~rax,rax", "mov~[table+0],rax", "js~FOO"]], [0, 0, 17, 0, 0, 2, 0, 0, 9, -1, 0.0641711229946524, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [2, 0, 21, 0, 0, 8, 2, 1, 6, -1, 0.06016042780748663, ["mov     rcx, rax", "pxor    xmm1, xmm1", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_6171"], ["mov~rcx,rax", "pxor~xmm1,xmm1", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 23, 0, 0, 4, 1, 1, 5, -1, 0.1122994652406417, ["mov     rax, [table+10h]", "mov     rdx, [table+28h]", "test    rax, rax", "js      loc_6238"], ["mov~rax,[table+0]", "mov~rdx,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 24, 0, 0, 2, 0, 0, 4, -1, 0.0374331550802139, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, -1, 0.0552584670231729, ["mov     rcx, [rsp+28h+var_20]", "xor     rcx, fs:28h", "jnz     loc_62DD"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 0, 11, -1, 0.06818181818181818, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [0, 0, 3, 0, 0, 2, 0, 1, 8, -1, 0.0427807486631016, ["mov     rax, entry", "jmp     loc_60D6"], ["mov~rax,entry", "jmp~FOO"]], [0, 0, 21, 0, 0, 2, 0, 0, 6, -1, 0.06016042780748663, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [0, 0, 13, 0, 0, 4, 0, 0, 12, -1, 0.14705882352941177, ["movaps  xmm3, xmm2", "mulss   xmm3, xmm0", "ucomiss xmm1, xmm3", "jbe     short loc_617B"], ["movaps~xmm3,xmm2", "mulss~xmm3,xmm0", "ucomiss~xmm1,xmm3", "jbe~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 3, -1, 0.0, ["add     rsp, 10h", "pop     rbx", "pop     table", "pop     r12", "retn"], ["add~rsp,0", "pop~rbx", "pop~table", "pop~r12", "retn"]]], "func_feature": [6, 23, 28, 1, 35, 48, 1, 137, 0.05167, 3, 5], "succs": [[5, 22], [0, 29], [12, 7], [2, 4], [2], [8, 6], [15], [9, 14], [12, 15], [13], [33], [10, 30], [29], [16, 31], [13], [29], [29], [11], [17, 23], [24, 1], [18, 31], [26], [27, 21], [11], [], [20], [32, 25], [26], [], [34, 28], [33], [29], [20], [3, 31], []], "fname": "hash_insert", "n_num": 35}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 3, 0, 1, 3, 0, 2, 0, 0, 0.02717391304347826, ["mov     rdi, table; table", "call    hash_rehash", "jmp     loc_632D"], ["mov~rdi,table", "call~FOO", "jmp~FOO"]], [1, 0, 4, 0, 0, 5, 1, 1, 14, 3, 0.025362318840579712, ["subss   xmm0, cs:dword_BAE0", "mov     rax, 8000000000000000h", "cvttss2si rsi, xmm0", "xor     rsi, rax", "jmp     short loc_63F8"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rsi,xmm0", "xor~rsi,rax", "jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 14, 3, 0.025362318840579712, ["cvttss2si rsi, xmm0; candidate"], ["cvttss2si~rsi,xmm0"]], [0, 0, 17, 0, 0, 2, 0, 0, 5, 3, 0.08695652173913043, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [0, 0, 19, 0, 0, 4, 1, 1, 4, 4, 0.161231884057971, ["mov     rax, [table+10h]", "mov     rdx, [table+28h]", "test    rax, rax", "js      loc_6408"], ["mov~rax,[table+0]", "mov~rdx,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 16, 0, 0, 3, 0, 0, 6, 2, 0.2210144927536232, ["mulss   xmm1, dword ptr [rdx]", "ucomiss xmm1, xmm0", "jbe     short loc_632D"], ["mulss~xmm1,<TAG>", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [2, 0, 17, 0, 0, 8, 2, 1, 5, 3, 0.08695652173913043, ["mov     rcx, rax", "pxor    xmm1, xmm1", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_6388"], ["mov~rcx,rax", "pxor~xmm1,xmm1", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [2, 0, 10, 0, 0, 8, 2, 1, 10, 3, 0.09329710144927536, ["mov     rcx, rax", "pxor    xmm1, xmm1", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_63CA"], ["mov~rcx,rax", "pxor~xmm1,xmm1", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 12, 0, 0, 3, 1, 1, 9, 4, 0.21195652173913043, ["mov     rax, [table+18h]", "test    rax, rax", "js      loc_6480"], ["mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [2, 0, 24, 1, 1, 13, 2, 2, 0, 2, 0.0, ["push    rbp", "push    rbx", "mov     ecx, 1; delete", "mov     rbx, table", "sub     rsp, 18h", "mov     rdx, rsp; bucket_head", "mov     rax, fs:28h", "mov     [rsp+28h+var_20], rax", "xor     eax, eax", "call    hash_find_entry", "test    rax, rax", "mov     rbp, rax", "jz      short loc_632D"], ["push~rbp", "push~rbx", "mov~ecx,0", "mov~rbx,table", "sub~rsp,0", "mov~rdx,rsp", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [0, 0, 15, 0, 1, 6, 1, 2, 7, 6, 0.1956521739130435, ["lea     rdi, [table+28h]; table", "call    check_tuning", "mov     rax, [table+10h]", "mov     rdx, [table+28h]", "test    rax, rax", "js      loc_64A0"], ["lea~rdi,[table+0]", "call~FOO", "mov~rax,[table+0]", "mov~rdx,[table+0]", "test~rax,rax", "js~FOO"]], [2, 0, 23, 1, 0, 4, 0, 1, 1, 2, 0.036231884057971016, ["mov     data, [rsp+28h+bucket]", "sub     qword ptr [table+20h], 1", "cmp     qword ptr [rax], 0", "jz      short loc_6350"], ["mov~data,<TAG>", "sub~[word ptr [table+0],0", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 0, 0, 8, 5, 0.09329710144927536, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [2, 0, 13, 0, 0, 8, 2, 1, 8, 5, 0.09329710144927536, ["mov     rcx, rax", "pxor    xmm0, xmm0", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm0, rcx", "addss   xmm0, xmm0", "jmp     loc_63B4"], ["mov~rcx,rax", "pxor~xmm0,xmm0", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm0,rcx", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 1, 1, 0.07971014492753624, ["mov     rcx, [rsp+28h+var_20]", "xor     rcx, fs:28h", "mov     rax, data", "jnz     loc_64BE"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,data", "jnz~FOO"]], [0, 0, 9, 0, 0, 4, 0, 0, 11, 2, 0.1956521739130435, ["movss   xmm2, dword ptr [rdx]", "mulss   xmm2, xmm0", "ucomiss xmm2, xmm1", "jbe     loc_632D"], ["movss~xmm2,<TAG>", "mulss~xmm2,xmm0", "ucomiss~xmm2,xmm1", "jbe~FOO"]], [0, 0, 10, 0, 0, 2, 0, 0, 10, 3, 0.09329710144927536, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [2, 0, 20, 0, 0, 8, 2, 1, 3, 5, 0.04891304347826087, ["mov     rdx, rax", "pxor    xmm0, xmm0", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0", "jmp     loc_636E"], ["mov~rdx,rax", "pxor~xmm0,xmm0", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0", "jmp~FOO"]], [1, 0, 22, 1, 0, 5, 1, 1, 2, 6, 0.06884057971014493, ["mov     rax, [table+18h]", "sub     rax, 1", "test    rax, rax", "mov     [table+18h], rax", "js      loc_6430"], ["mov~rax,[table+0]", "sub~rax,0", "test~rax,rax", "mov~[table+0],rax", "js~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 2, -1, 0.0, ["add     rsp, 18h", "pop     table", "pop     rbp", "retn"], ["add~rsp,0", "pop~table", "pop~rbp", "retn"]], [1, 0, 8, 0, 0, 3, 0, 1, 12, 5, 0.14492753623188406, ["cmp     byte ptr [tuning+10h], 0", "mulss   xmm0, dword ptr [tuning+4]", "jz      loc_6470"], ["cmp~[yte ptr [tuning+0],0", "mulss~xmm0,[word ptr [tuning+0]", "jz~FOO"]], [0, 0, 20, 0, 0, 2, 0, 0, 3, 5, 0.04891304347826087, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [0, 0, 6, 0, 0, 2, 0, 0, 13, 4, 0.10869565217391304, ["ucomiss xmm0, cs:dword_BAE0", "jnb     short loc_6450"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 13, 5, 0.0, ["mulss   xmm0, dword ptr [tuning+8]", "jmp     loc_63EA"], ["mulss~xmm0,[word ptr [tuning+0]", "jmp~FOO"]]], "func_feature": [4, 16, 19, 1, 25, 34, 1, 107, 0.08587, 2, 4], "succs": [[14], [0], [0], [5], [3, 6], [10, 14], [5], [15], [16, 7], [11, 14], [12, 13], [18, 14], [8], [8], [19, 23], [20, 14], [15], [4], [17, 21], [], [24, 22], [4], [1, 2], [], [22]], "fname": "hash_delete", "n_num": 25}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[2, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0.0, ["mov     byte ptr [ir+1Ch], 1", "mov     qword ptr [ir+14h], 0", "mov     [ir], esi", "mov     [ir+4], esi", "mov     [ir+8], esi", "mov     [ir+0Ch], esi", "mov     [ir+10h], esi", "retn"], ["mov~[yte ptr [ir+0],0", "mov~[word ptr [ir+0],0", "mov~<TAG>,esi", "mov~[ir+0],esi", "mov~[ir+0],esi", "mov~[ir+0],esi", "mov~[ir+0],esi", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 8, 0.0, 0, 0], "succs": [[]], "fname": "i_ring_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["movzx   eax, byte ptr [ir+1Ch]", "retn"], ["movzx~eax,[yte ptr [ir+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 2, 2, 0.0, 0, 0], "succs": [[]], "fname": "i_ring_empty", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     byte ptr [ir+1Ch], 0", "retn"], ["mov~[yte ptr [ir+0],0", "retn"]], [2, 0, 2, 1, 0, 14, 2, 1, 0, 0, 0.0, ["movzx   edx, byte ptr [ir+1Ch]", "mov     ecx, [ir+14h]", "xor     edx, 1", "movzx   edx, dl", "add     ecx, edx", "and     ecx, 3", "mov     eax, ecx", "lea     r8, [ir+old_val*4]", "mov     eax, [r8]", "mov     [r8], esi", "mov     esi, [ir+18h]", "mov     [ir+14h], ecx", "cmp     esi, ecx", "jnz     short loc_6530"], ["movzx~edx,[yte ptr [ir+0]", "mov~ecx,[ir+0]", "xor~edx,0", "movzx~edx,dl", "add~ecx,edx", "and~ecx,0", "mov~eax,ecx", "lea~r8,<TAG>", "mov~eax,<TAG>", "mov~<TAG>,esi", "mov~esi,[ir+0]", "mov~[ir+0],ecx", "cmp~esi,ecx", "jnz~FOO"]], [1, 0, 1, 1, 0, 3, 1, 0, 1, 0, 0.0, ["add     edx, esi", "and     edx, 3", "mov     [ir+18h], edx"], ["add~edx,esi", "and~edx,0", "mov~[ir+0],edx"]]], "func_feature": [0, 3, 1, 0, 3, 3, 1, 19, 0.0, 0, 2], "succs": [[], [0, 2], [0]], "fname": "i_ring_push", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     byte ptr [ir+1Ch], 1", "retn"], ["mov~[yte ptr [ir+0],0", "retn"]], [0, 0, 2, 0, 0, 8, 0, 1, 1, -1, 0.16666666666666666, ["mov     eax, [ir+14h]", "mov     esi, [ir+10h]", "lea     rcx, [ir+rax*4]", "mov     rdx, rax", "mov     eax, [rcx]", "mov     [rcx], esi", "cmp     edx, [ir+18h]", "jz      short loc_6570"], ["mov~eax,[ir+0]", "mov~esi,[ir+0]", "lea~rcx,<TAG>", "mov~rdx,rax", "mov~eax,<TAG>", "mov~<TAG>,esi", "cmp~edx,[ir+0]", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     byte ptr [ir+1Ch], 0", "jnz     short loc_6575"], ["cmp~[yte ptr [ir+0],0", "jnz~FOO"]], [2, 0, 0, 1, 0, 4, 1, 0, 2, -1, 0.0, ["add     edx, 3", "and     edx, 3", "mov     [ir+14h], edx", "retn"], ["add~edx,0", "and~edx,0", "mov~[ir+0],edx", "retn"]], [1, 0, 0, 1, 1, 2, 0, 1, 1, 0, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]]], "func_feature": [1, 1, 3, 0, 5, 4, 2, 18, 0.03333, 0, 2], "succs": [[], [0, 3], [1, 4], [], []], "fname": "i_ring_pop", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 2, 7, 2, 3, 1, 0, 0.3333333333333333, ["xor     eax, eax", "call    _open", "mov     edi, eax; fd", "call    fd_safer", "mov     rcx, [rsp+58h+var_40]", "xor     rcx, fs:28h", "jnz     short loc_65E9"], ["xor~eax,eax", "call~FOO", "mov~edi,eax", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 0, 7, 0, 1, 1, 0, 0.0, ["lea     rax, [rsp+58h+arg_0]", "mov     [rsp+58h+ap.gp_offset], 10h", "mov     edx, dword ptr [rsp+58h+var_28]", "mov     [rsp+58h+ap.overflow_arg_area], rax", "lea     rax, [rsp+58h+var_38]", "mov     [rsp+58h+ap.reg_save_area], rax", "jmp     short loc_65A1"], ["lea~rax,[rsp+0]", "mov~<TAG>,0", "mov~edx,[word ptr [rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 1, 4, 1, 0, 8, 3, 1, 0, 0, 0.0, ["sub     rsp, 58h", "mov     [rsp+58h+var_28], rdx", "xor     edx, edx", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "test    sil, 40h", "jnz     short loc_65C8"], ["sub~rsp,<STR>", "mov~[rsp+0],rdx", "xor~edx,edx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~sil,0", "jnz~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 2, 0, 0.0, ["add     rsp, 58h", "retn"], ["add~rsp,<STR>", "retn"]]], "func_feature": [3, 5, 6, 3, 5, 5, 5, 25, 0.06667, 1, 2], "succs": [[], [0, 4], [1], [1, 2], []], "fname": "open_safer", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     rdx, name; arg", "mov     esi, 6; s", "jmp     quotearg_n_style"], ["mov~rdx,name", "mov~esi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 4, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quote_n", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[1, 0, 1, 0, 0, 4, 1, 1, 0, 0, 0.0, ["mov     rdx, name; arg", "mov     esi, 6; s", "xor     edi, edi; n", "jmp     quotearg_n_style"], ["mov~rdx,name", "mov~esi,0", "xor~edi,edi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 15, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "quote", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[1, 0, 159, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rdi, [rsp+0C8h+buffer]", "mov     byte ptr [rdi+rbx+1], 22h ; '\"'"], ["mov~rdi,<TAG>", "mov~[yte ptr [rdi+0],0"]], [0, 0, 159, 0, 0, 3, 0, 0, 18, -1, 0.04117072048760854, ["lea     rdx, [rbx+1]", "cmp     r8, len", "jbe     short loc_6808"], ["lea~rdx,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [0, 0, 164, 0, 0, 1, 0, 0, 8, -1, 0.0, ["mov     [rdx+rbx], al"], ["mov~<TAG>,al"]], [0, 0, 164, 0, 0, 2, 0, 0, 7, -1, 0.005175090564084872, ["cmp     buffersize, rbx", "jbe     short loc_6C08"], ["cmp~buffersize,rbx", "jbe~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 9, -1, 0.019895348168592952, ["movzx   edx, byte ptr [rax]", "test    dl, dl", "jz      short loc_7024"], ["movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 8, -1, 0.024725432695072165, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     short loc_7024"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 11, -1, 0.012779598642976252, ["test    r10, r10", "jnz     loc_6DCC"], ["test~r10,r10", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.013469610718187568, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      loc_6E28"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 159, 0, 0, 3, 0, 0, 19, -1, 0.04059571042493244, ["lea     len, [rbx+2]", "cmp     r8, len", "jbe     short loc_681A"], ["lea~len,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [0, 0, 4, 0, 0, 3, 0, 0, 11, -1, 0.013857742510493935, ["mov     r12, argsize_0", "mov     r14, r8", "mov     argsize_0, arg_0"], ["mov~r12,argsize_0", "mov~r14,r8", "mov~argsize_0,arg_0"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.01507963889368064, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_6A0D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 16, -1, 0.04272803940735629, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_6A0D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 12, -1, 0.0468729036091465, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_6A0D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 11, -1, 0.000646886320510609, ["jmp     loc_6A0D"], ["jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.0010062676096831695, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_6A0D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.033719548425430776, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_6A0D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 14, -1, 0.03774941061468576, ["test    sil, sil", "jnz     loc_6A0D"], ["test~sil,sil", "jnz~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 10, -1, 0.043264715465853996, ["cmp     [rsp+0C8h+elide_outer_quotes], 0; jumptable 0000000000006D38 case 0", "mov     rdx, rbx", "jnz     loc_6A0D"], ["cmp~[rsp+0],0", "mov~rdx,rbx", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.004969045291625938, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_6A0D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 20, -1, 0.0, ["mov     rdi, [rsp+0C8h+buffer]", "mov     byte ptr [rdi+rbx+2], 22h ; '\"'"], ["mov~rdi,<TAG>", "mov~[yte ptr [rdi+0],0"]], [0, 0, 4, 0, 0, 2, 0, 0, 8, -1, 0.007575757575757576, ["cmp     rbx, r14", "jnb     loc_6A42"], ["cmp~rbx,r14", "jnb~FOO"]], [0, 0, 11, 0, 0, 3, 1, 1, 7, -1, 0.041185095739175434, ["mov     rax, [rsp+0C8h+quote_string]", "test    rax, rax", "jz      short loc_7024"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 8, 1, 0, 4, 1, 1, 12, -1, 0.0004600080501408775, ["add     len, 1", "movzx   edx, byte ptr [rax+len]", "test    dl, dl", "jnz     short loc_7010"], ["add~len,0", "movzx~edx,<TAG>", "test~dl,dl", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.00083695909122854, ["mov     ebp, 61h ; 'a'; jumptable 0000000000006D38 case 7", "jmp     store_escape"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 159, 1, 0, 5, 0, 1, 10, -1, 0.036911995166264665, ["lea     rcx, off_BD5C", "movzx   edx, bpl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bpl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.022502060452724588, ["mov     ebp, 3Fh ; '?'", "jmp     loc_6838; jumptable 0000000000006778 cases 37,43-58,65-90,93,95,97-122"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.07325628198493474, ["cmp     eax, 3", "jnz     loc_6E1B"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 1, 1, 11, -1, 0.06460238054165948, ["test    byte ptr [rsp+0C8h+flags], 4", "jz      loc_6E1B"], ["test~[yte ptr [rsp+0],0", "jz~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 14, -1, 0.05155444386943438, ["movzx   ebp, byte ptr [arg_0+rax]", "cmp     bpl, 3Eh ; '>'", "ja      loc_6E1B"], ["movzx~ebp,<TAG>", "cmp~bpl,0", "ja~FOO"]], [1, 0, 159, 0, 0, 3, 0, 0, 15, -1, 0.047126866386828434, ["mov     rdi, 7000A38200000000h", "bt      rdi, rbp", "jnb     loc_6E1B"], ["mov~rdi,0", "bt~rdi,rbp", "jnb~FOO"]], [0, 0, 159, 0, 0, 3, 0, 0, 20, -1, 0.04002070036225634, ["lea     len, [rbx+3]", "cmp     r8, len", "jbe     short loc_682C"], ["lea~len,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [0, 0, 8, 0, 0, 2, 0, 0, 11, -1, 0.010235179115634523, ["cmp     r14, len", "jbe     short loc_7018"], ["cmp~r14,len", "jbe~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 12, -1, 0.0, ["mov     [rcx+len], dl"], ["mov~<TAG>,dl"]], [1, 0, 159, 0, 0, 2, 0, 0, 21, -1, 0.0, ["mov     rdi, [rsp+0C8h+buffer]", "mov     byte ptr [rdi+rbx+3], 3Fh ; '?'"], ["mov~rdi,<TAG>", "mov~[yte ptr [rdi+0],0"]], [1, 0, 160, 0, 1, 7, 1, 2, 5, -1, 0.04600080501408775, ["mov     rdi, [rsp+0C8h+quote_string]; s", "test    ebp, ebp", "mov     ebp, 1", "setnz   [rsp+0C8h+elide_outer_quotes]", "call    _strlen", "mov     r11, rax", "jmp     loc_66A8"], ["mov~rdi,[rsp+0]", "test~ebp,ebp", "mov~ebp,0", "setnz~[rsp+0]", "call~FOO", "mov~r11,rax", "jmp~FOO"]], [0, 0, 166, 0, 0, 3, 2, 1, 4, -1, 0.019435340118452073, ["xor     ebx, ebx", "test    ebp, ebp", "jnz     short loc_6C15"], ["xor~ebx,ebx", "test~ebp,ebp", "jnz~FOO"]], [0, 0, 165, 0, 0, 3, 1, 1, 5, -1, 0.0008050140877465356, ["movzx   eax, byte ptr [quote_string_0]", "test    al, al", "jz      short loc_6C15"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 164, 1, 0, 4, 1, 1, 8, -1, 0.013915243516761544, ["add     rbx, 1", "movzx   eax, byte ptr [r15+len]", "test    al, al", "jnz     short loc_6C00"], ["add~rbx,0", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 10, -1, 0.0017825311942959003, ["mov     ebp, 5Ch ; '\\'", "mov     eax, 5Ch ; '\\'", "jmp     c_and_shell_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 9, -1, 0.018788453797941466, ["test    r11b, r11b; jumptable 0000000000006778 case 92", "jz      loc_6E28"], ["test~r11b,r11b", "jz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 11, -1, 0.00575489237728327, ["test    r11b, r11b; jumptable 0000000000006D38 case 92", "jz      short loc_6E28"], ["test~r11b,r11b", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 12, -1, 0.004834876277001514, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      short loc_6E28"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 159, 1, 0, 3, 0, 0, 21, -1, 0.03944569029958024, ["add     rbx, 4", "mov     r15, i_0", "nop     dword ptr [rax+rax+00h]"], ["add~rbx,0", "mov~r15,i_0", "nop~[word ptr [rax+0]"]], [1, 0, 3, 0, 0, 3, 0, 1, 9, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 0", "jmp     loc_6A42"], ["mov~rax,<TAG>", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 9, -1, 0.17992671816201253, ["test    r11b, r11b; jumptable 0000000000006778 cases 37,43-58,65-90,93,95,97-122", "jz      loc_690D"], ["test~r11b,r11b", "jz~FOO"]], [0, 0, 159, 1, 0, 5, 0, 1, 8, -1, 0.32742875579687775, ["lea     rcx, off_BB60", "movzx   edx, bpl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bpl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [1, 0, 159, 0, 0, 4, 0, 0, 12, -1, 0.06225442278573208, ["lea     rax, [i_0+2]", "mov     ebp, 3Fh ; '?'", "cmp     rax, argsize_0", "jnb     loc_6838; jumptable 0000000000006778 cases 37,43-58,65-90,93,95,97-122"], ["lea~rax,[i_0+0]", "mov~ebp,0", "cmp~rax,argsize_0", "jnb~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 13, -1, 0.05586701933950511, ["cmp     byte ptr [arg_0+i_0+1], 3Fh ; '?'", "jnz     short loc_6838; jumptable 0000000000006778 cases 37,43-58,65-90,93,95,97-122"], ["cmp~[yte ptr [arg_0+0],0", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 10, -1, 0.008998907480880915, ["test    al, al", "jnz     loc_6838; jumptable 0000000000006778 cases 37,43-58,65-90,93,95,97-122"], ["test~al,al", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 9, -1, 0.0004743833017077799, ["test    i_0, i_0; jumptable 0000000000006778 cases 35,126", "jnz     loc_6838; jumptable 0000000000006778 cases 37,43-58,65-90,93,95,97-122"], ["test~i_0,i_0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 9, -1, 0.009962049335863378, ["cmp     [rsp+0C8h+quoting_style], 2; jumptable 0000000000006778 cases 32-34,36,38,40-42,59-62,91,94,96,124", "jnz     loc_6838; jumptable 0000000000006778 cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.005333218331320799, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      loc_6838; jumptable 0000000000006778 cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.03817587641117054, ["cmp     [rsp+0C8h+quoting_style], 2; jumptable 0000000000006778 case 39", "mov     ebp, 27h ; '''", "jnz     loc_6838; jumptable 0000000000006778 cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "mov~ebp,0", "jnz~FOO"]], [2, 0, 159, 1, 0, 3, 0, 1, 14, -1, 0.030849289862572595, ["add     rbx, 3", "mov     ebp, 27h ; '''", "jmp     loc_6838; jumptable 0000000000006778 cases 37,43-58,65-90,93,95,97-122"], ["add~rbx,0", "mov~ebp,0", "jmp~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 10, -1, 0.07923638663676615, ["test    r12b, r12b", "jz      loc_6838; jumptable 0000000000006778 cases 37,43-58,65-90,93,95,97-122"], ["test~r12b,r12b", "jz~FOO"]], [3, 0, 3, 1, 1, 13, 1, 1, 8, -1, 0.013153355183715715, ["sub     rsp, 8", "mov     rdx, arg_0; arg", "mov     rcx, argsize_0; argsize", "push    0; quote_these_too", "mov     r9d, [rsp+0D8h+flags]", "mov     rsi, r14; buffersize", "mov     r8d, [rsp+0D8h+quoting_style]; quoting_style", "mov     rdi, [rsp+0D8h+buffer]; buffer", "and     r9d, 0FFFFFFFDh; flags", "call    quotearg_buffer_restyled", "mov     rbx, len", "pop     len", "pop     rdx"], ["sub~rsp,0", "mov~rdx,arg_0", "mov~rcx,argsize_0", "push~0", "mov~r9d,[rsp+0]", "mov~rsi,r14", "mov~r8d,[rsp+0]", "mov~rdi,[rsp+0]", "and~r9d,0", "call~FOO", "mov~rbx,len", "pop~len", "pop~rdx"]], [0, 0, 13, 0, 0, 2, 1, 1, 7, -1, 0.0030906790868840206, ["test    rbx, rbx", "jz      force_outer_quoting_style"], ["test~rbx,rbx", "jz~FOO"]], [0, 0, 4, 0, 0, 4, 0, 1, 20, -1, 0.0008625150940141453, ["mov     r13, arg_0", "mov     printable, [rsp+0C8h+argsize]", "mov     arg_0, [rsp+0C8h+var_80]", "jmp     force_outer_quoting_style"], ["mov~r13,arg_0", "mov~printable,[rsp+0]", "mov~arg_0,[rsp+0]", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.14407963250467995, ["cmp     [rsp+0C8h+var_B8], 0", "jz      short loc_6883"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 159, 0, 0, 1, 0, 1, 11, -1, 0.001466275659824047, ["jmp     loc_6841"], ["jmp~FOO"]], [2, 0, 159, 1, 0, 5, 0, 0, 12, -1, 0.04125697199700995, ["lea     rax, [i_0+1]", "add     rbx, 1", "mov     ebp, 30h ; '0'", "cmp     rax, argsize_0", "jnb     loc_6841"], ["lea~rax,[i_0+0]", "add~rbx,0", "mov~ebp,0", "cmp~rax,argsize_0", "jnb~FOO"]], [2, 0, 159, 1, 0, 4, 0, 1, 13, -1, 0.023719165085388995, ["movzx   eax, byte ptr [arg_0+i_0+1]", "sub     eax, 30h ; '0'", "cmp     al, 9", "ja      loc_6841"], ["movzx~eax,[yte ptr [arg_0+0]", "sub~eax,0", "cmp~al,0", "ja~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 16, -1, 0.017882812949226612, ["lea     rbx, [rdx+3]", "mov     ebp, 30h ; '0'", "jmp     loc_6841"], ["lea~rbx,[rdx+0]", "mov~ebp,0", "jmp~FOO"]], [2, 0, 160, 0, 0, 6, 3, 1, 2, -1, 0.0023000402507043875, ["mov     [rsp+0C8h+elide_outer_quotes], 0; jumptable 0000000000006688 case 0", "xor     ebp, ebp", "xor     r11d, r11d", "mov     [rsp+0C8h+quote_string], 0", "xor     ebx, ebx", "jmp     loc_66A8"], ["mov~[rsp+0],0", "xor~ebp,ebp", "xor~r11d,r11d", "mov~[rsp+0],0", "xor~ebx,ebx", "jmp~FOO"]], [0, 0, 185, 1, 0, 6, 0, 1, 1, -1, 0.0053188430797538955, ["lea     rcx, off_BB40", "mov     edx, r15d", "mov     ebp, ebx", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "mov~edx,r15d", "mov~ebp,ebx", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [1, 0, 159, 0, 0, 2, 0, 1, 13, -1, 0.0706112356966247, ["cmp     bytes, 0FFFFFFFFFFFFFFFEh", "jz      loc_70A1"], ["cmp~bytes,0", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 12, -1, 0.07972514519004083, ["cmp     bytes, 0FFFFFFFFFFFFFFFFh", "jz      loc_706F"], ["cmp~bytes,0", "jz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 9, -1, 0.010580185153240182, ["mov     rsi, [rsp+0C8h+var_40]", "xor     rsi, fs:28h", "mov     rax, rbx", "jnz     loc_7147"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~rax,rbx", "jnz~FOO"]], [0, 0, 8, 1, 0, 3, 0, 0, 10, -1, 0.015007762635846128, ["mov     rcx, [rsp+0C8h+buffer]", "sub     rax, rbx", "nop"], ["mov~rcx,<TAG>", "sub~rax,rbx", "nop"]], [2, 0, 159, 0, 0, 5, 0, 1, 9, -1, 0.10643436260134553, ["lea     rax, [rsp+0C8h+mbstate]", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "mov     qword ptr [rsp+0C8h+mbstate.__count], 0", "mov     [rsp+0C8h+p], rax", "jnz     short loc_6E93"], ["lea~rax,[rsp+0]", "cmp~argsize_0,0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],rax", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 8, -1, 0.1785981254671957, ["cmp     [rsp+0C8h+var_88], 1; jumptable 0000000000006778 default case", "jnz     loc_6E40"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 159, 1, 0, 3, 0, 1, 19, -1, 0.013023977919613594, ["add     rax, 1", "cmp     r8, rax", "jnz     short loc_6F38"], ["add~rax,0", "cmp~r8,rax", "jnz~FOO"]], [1, 0, 159, 0, 0, 4, 0, 1, 18, -1, 0.019320338105916855, ["movzx   edi, byte ptr [rax]", "lea     ecx, [rdi-5Bh]", "cmp     cl, 21h ; '!'", "ja      short loc_6F5E"], ["movzx~edi,<TAG>", "lea~ecx,[rdi-5Bh]+0]", "cmp~cl,0", "ja~FOO"]], [2, 0, 159, 1, 0, 5, 1, 1, 19, -1, 0.00557759760795814, ["mov     edx, 1", "mov     rdi, 20000002Bh", "shl     rdx, cl", "test    rdx, rdi", "jnz     loc_703A"], ["mov~edx,0", "mov~rdi,0", "shl~rdx,cl", "test~rdx,rdi", "jnz~FOO"]], [3, 0, 159, 1, 0, 10, 2, 1, 11, -1, 0.014894038423450206, ["mov     eax, ebp", "mov     rsi, [rsp+0C8h+var_B8]", "mov     ecx, ebp", "shr     al, 5", "and     ecx, 1Fh", "mov     edx, 1", "movzx   eax, al", "shl     edx, cl", "test    [rsi+rax*4], edx", "jz      short loc_6883"], ["mov~eax,ebp", "mov~rsi,[rsp+0]", "mov~ecx,ebp", "shr~al,0", "and~ecx,0", "mov~edx,0", "movzx~eax,al", "shl~edx,cl", "test~<TAG>,edx", "jz~FOO"]], [3, 0, 160, 0, 0, 7, 1, 1, 4, -1, 0.0023000402507043875, ["lea     rax, asc_BAF0+2; \"'`\"", "mov     [rsp+0C8h+elide_outer_quotes], 0", "xor     ebp, ebp", "mov     r11d, 1", "mov     ebx, 1", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_66A8"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "xor~ebp,ebp", "mov~r11d,0", "mov~ebx,0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 162, 0, 0, 2, 1, 1, 3, -1, 0.00017250301880282904, ["test    buffersize, buffersize", "jz      loc_704C"], ["test~buffersize,buffersize", "jz~FOO"]], [0, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.010489461343351278, ["mov     ebp, eax", "jmp     store_escape"], ["mov~ebp,eax", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.00083695909122854, ["mov     ebp, 66h ; 'f'; jumptable 0000000000006D38 case 12", "jmp     store_escape"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.00083695909122854, ["mov     ebp, 76h ; 'v'; jumptable 0000000000006D38 case 11", "jmp     store_escape"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.00083695909122854, ["mov     ebp, 62h ; 'b'; jumptable 0000000000006D38 case 8", "jmp     store_escape"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 10, -1, 0.0, ["add     rsp, 98h", "pop     rbx", "pop     rbp", "pop     argsize_0", "pop     arg_0", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~argsize_0", "pop~arg_0", "pop~r14", "pop~r15", "retn"]], [3, 0, 187, 1, 1, 25, 2, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15d, r8d", "push    r13", "push    r12", "mov     r14, buffersize", "push    rbp", "push    rbx", "mov     ebx, r9d", "mov     r13, arg_0", "mov     r12, argsize_0", "and     ebx, 2", "sub     rsp, 98h", "mov     rax, [rsp+0C8h+quote_these_too]", "mov     [rsp+0C8h+buffer], buffer_0", "mov     [rsp+0C8h+quoting_style], r8d", "mov     [rsp+0C8h+flags], r9d", "mov     [rsp+0C8h+var_B8], rax", "mov     rax, fs:28h", "mov     [rsp+0C8h+var_40], rax", "xor     eax, eax", "call    ___ctype_get_mb_cur_max", "cmp     r15d, 7; switch 8 cases", "mov     [rsp+0C8h+var_88], rax", "ja      loc_714C; jumptable 0000000000006688 default case"], ["push~r15", "push~r14", "mov~r15d,r8d", "push~r13", "push~r12", "mov~r14,buffersize", "push~rbp", "push~rbx", "mov~ebx,r9d", "mov~r13,arg_0", "mov~r12,argsize_0", "and~ebx,0", "sub~rsp,0", "mov~rax,[rsp+0]", "mov~<TAG>,buffer_0", "mov~[rsp+0],r8d", "mov~[rsp+0],r9d", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "cmp~r15d,0", "mov~[rsp+0],rax", "ja~FOO"]], [3, 0, 160, 0, 0, 8, 2, 1, 2, -1, 0.0023000402507043875, ["lea     rax, asc_BAF0+2; jumptable 0000000000006688 case 1", "mov     [rsp+0C8h+elide_outer_quotes], 1", "xor     ebp, ebp", "mov     r11d, 1", "xor     ebx, ebx", "mov     [rsp+0C8h+quoting_style], 2", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_66A8"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "xor~ebp,ebp", "mov~r11d,0", "xor~ebx,ebx", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 9, -1, 0.0628725586031089, ["test    r11b, r11b; jumptable 0000000000006778 case 0", "jnz     loc_6D40; jumptable 0000000000006D38 case 0"], ["test~r11b,r11b", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 13, -1, 0.03956069231211547, ["cmp     rbx, r8", "jnb     short loc_687F"], ["cmp~rbx,r8", "jnb~FOO"]], [0, 0, 164, 0, 0, 2, 1, 1, 2, -1, 0.00023000402507043874, ["test    ebx, ebx; jumptable 0000000000006688 case 2", "jnz     loc_7104"], ["test~ebx,ebx", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 14, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 5Ch ; '\\'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [1, 0, 159, 1, 0, 1, 0, 0, 14, -1, 0.038985682249439366, ["add     rbx, 1"], ["add~rbx,0"]], [1, 0, 159, 0, 0, 3, 2, 1, 10, -1, 0.01578402622045886, ["xor     ebp, ebp", "test    byte ptr [rsp+0C8h+flags], 1", "jz      loc_690D"], ["xor~ebp,ebp", "test~[yte ptr [rsp+0],0", "jz~FOO"]], [1, 0, 159, 1, 0, 1, 0, 0, 11, -1, 0.30266612999060816, ["add     i_0, 1"], ["add~i_0,0"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.1325398194468402, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      loc_6883"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 159, 1, 0, 2, 0, 1, 11, -1, 0.014864010120177103, ["add     i_0, 1", "jmp     loc_66C0"], ["add~i_0,0", "jmp~FOO"]], [0, 0, 159, 0, 1, 11, 0, 1, 10, -1, 0.0, ["mov     rdi, arg_0; s", "mov     [rsp+0C8h+var_80], r8", "mov     byte ptr [rsp+0C8h+arg], r11b", "mov     [rsp+0C8h+i], r10", "mov     [rsp+0C8h+argsize], arg_0", "call    _strlen", "movzx   r11d, byte ptr [rsp+0C8h+arg]", "mov     r8, [rsp+0C8h+var_80]", "mov     argsize_0, rax", "mov     r10, [rsp+0C8h+i]", "mov     r9, [rsp+0C8h+argsize]"], ["mov~rdi,arg_0", "mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[rsp+0],r10", "mov~[rsp+0],arg_0", "call~FOO", "movzx~r11d,[yte ptr [rsp+0]", "mov~r8,[rsp+0]", "mov~argsize_0,rax", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]"]], [0, 0, 159, 0, 0, 2, 0, 0, 13, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     [rax+rbx], bpl"], ["mov~rax,<TAG>", "mov~<TAG>,bpl"]], [0, 0, 159, 0, 0, 2, 0, 0, 12, -1, 0.4664481628428498, ["cmp     rbx, r8", "jnb     short loc_6894"], ["cmp~rbx,r8", "jnb~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 7, -1, 0.5060843822703411, ["movzx   ebp, byte ptr [r14]", "cmp     bpl, 7Eh ; '~'; switch 127 cases", "ja      loc_6A90; jumptable 0000000000006778 default case"], ["movzx~ebp,<TAG>", "cmp~bpl,0", "ja~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.039729544473377544, ["movzx   ebp, byte ptr [r14]", "cmp     bpl, 7Eh ; '~'; switch 127 cases", "ja      loc_6A90; jumptable 0000000000006778 default case"], ["movzx~ebp,<TAG>", "cmp~bpl,0", "ja~FOO"]], [1, 0, 159, 1, 0, 2, 0, 1, 13, -1, 0.46587315278017366, ["add     rbx, 1", "jmp     loc_66C0"], ["add~rbx,0", "jmp~FOO"]], [1, 0, 159, 1, 0, 3, 0, 0, 14, -1, 0.15122764648381348, ["add     i_0, 1", "cmp     r15, ilim", "jb      short loc_6B08"], ["add~i_0,0", "cmp~r15,ilim", "jb~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 13, -1, 0.15870277729860274, ["test    r12b, r12b", "jz      short loc_6B68"], ["test~r12b,r12b", "jz~FOO"]], [3, 0, 159, 2, 0, 3, 1, 0, 18, -1, 0.030849289862572595, ["and     ebp, 7", "add     rbx, 3", "add     ebp, 30h ; '0'"], ["and~ebp,0", "add~rbx,0", "add~ebp,0"]], [0, 0, 159, 0, 0, 11, 0, 1, 13, -1, 0.0039963199355988735, ["movzx   r11d, [rsp+0C8h+var_6A]", "mov     bytes, m", "mov     bytes, [rsp+0C8h+i]", "mov     r10, [rsp+0C8h+var_78]", "movzx   ebp, [rsp+0C8h+c]", "mov     r9, arg_0", "mov     m, [rsp+0C8h+var_68]", "mov     r8, [rsp+0C8h+var_80]", "mov     r13, [rsp+0C8h+argsize]", "mov     r12d, r11d", "jmp     loc_6FC1"], ["movzx~r11d,[rsp+0]", "mov~bytes,m", "mov~bytes,[rsp+0]", "mov~r10,[rsp+0]", "movzx~ebp,[rsp+0]", "mov~r9,arg_0", "mov~m,[rsp+0]", "mov~r8,[rsp+0]", "mov~r13,[rsp+0]", "mov~r12d,r11d", "jmp~FOO"]], [3, 0, 160, 0, 0, 6, 2, 0, 2, -1, 0.0023000402507043875, ["mov     [rsp+0C8h+elide_outer_quotes], 0; jumptable 0000000000006688 case 5", "mov     ebp, 1", "xor     r11d, r11d", "mov     [rsp+0C8h+quote_string], 0", "xor     ebx, ebx", "nop     word ptr [rax+rax+00h]"], ["mov~[rsp+0],0", "mov~ebp,0", "xor~r11d,r11d", "mov~[rsp+0],0", "xor~ebx,ebx", "nop~[ord ptr [rax+0]"]], [4, 0, 160, 0, 0, 8, 0, 1, 4, -1, 0.0023000402507043875, ["mov     rax, [rsp+0C8h+buffer]", "mov     [rsp+0C8h+elide_outer_quotes], 0", "mov     r11d, 1", "mov     ebx, 1", "mov     byte ptr [rax], 27h ; '''", "lea     rax, asc_BAF0+2; \"'`\"", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_66A8"], ["mov~rax,<TAG>", "mov~[rsp+0],0", "mov~r11d,0", "mov~ebx,0", "mov~<TAG>,0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "jmp~FOO"]], [2, 0, 159, 0, 0, 4, 0, 1, 9, -1, 0.009573917543557013, ["cmp     argsize_0, 1; jumptable 0000000000006778 cases 123,125", "setnz   al", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_68B5"], ["cmp~argsize_0,0", "setnz~al", "cmp~argsize_0,0", "jnz~FOO"]], [0, 0, 164, 0, 0, 2, 1, 1, 2, -1, 0.00023000402507043874, ["test    ebx, ebx; jumptable 0000000000006688 case 3", "jnz     loc_7124"], ["test~ebx,ebx", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 10, -1, 0.0, ["cmp     byte ptr [arg_0+1], 0", "setnz   al"], ["cmp~[yte ptr [arg_0+0],0", "setnz~al"]], [0, 0, 162, 0, 0, 2, 1, 1, 3, -1, 0.00017250301880282904, ["test    buffersize, buffersize", "jz      short loc_6CC2"], ["test~buffersize,buffersize", "jz~FOO"]], [0, 0, 159, 0, 0, 7, 1, 0, 3, -1, 0.12342590995342419, ["mov     r10, quote_string_len", "mov     r9, arg_0", "xor     r15d, r15d", "mov     r11d, ebp", "mov     r8, buffersize", "mov     arg_0, argsize_0", "nop     word ptr [rax+rax+00h]"], ["mov~r10,quote_string_len", "mov~r9,arg_0", "xor~r15d,r15d", "mov~r11d,ebp", "mov~r8,buffersize", "mov~arg_0,argsize_0", "nop~[ord ptr [rax+0]"]], [4, 0, 160, 0, 0, 7, 0, 1, 4, -1, 0.00920016100281755, ["lea     rax, asc_BAF0; \"\\\"'`\"", "mov     [rsp+0C8h+elide_outer_quotes], 0", "mov     ebp, 1", "mov     r11d, 1", "mov     ebx, 1", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_66A8"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~ebp,0", "mov~r11d,0", "mov~ebx,0", "mov~[rsp+0],rax", "jmp~FOO"]], [4, 0, 160, 0, 0, 8, 1, 1, 2, -1, 0.0023000402507043875, ["lea     rax, asc_BAF0; jumptable 0000000000006688 case 4", "mov     [rsp+0C8h+elide_outer_quotes], 1", "mov     ebp, 1", "mov     r11d, 1", "xor     ebx, ebx", "mov     [rsp+0C8h+quoting_style], 3", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_66A8"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~ebp,0", "mov~r11d,0", "xor~ebx,ebx", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [2, 0, 160, 0, 0, 7, 2, 1, 3, -1, 0.004600080501408775, ["lea     rax, asc_BAF0+2; \"'`\"", "mov     [rsp+0C8h+elide_outer_quotes], 1", "xor     ebp, ebp", "mov     r11d, 1", "xor     ebx, ebx", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_66A8"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "xor~ebp,ebp", "mov~r11d,0", "xor~ebx,ebx", "mov~[rsp+0],rax", "jmp~FOO"]], [3, 0, 160, 0, 0, 7, 1, 1, 3, -1, 0.004600080501408775, ["lea     rax, asc_BAF0; \"\\\"'`\"", "mov     [rsp+0C8h+elide_outer_quotes], 1", "mov     ebp, 1", "mov     r11d, 1", "xor     ebx, ebx", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_66A8"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~ebp,0", "mov~r11d,0", "xor~ebx,ebx", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 161, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax], 22h ; '\"'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [1, 0, 159, 0, 0, 2, 0, 1, 15, -1, 0.028491748605600598, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      short loc_6F67"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 14, -1, 0.03780691162095337, ["cmp     [rsp+0C8h+quoting_style], 2", "jnz     short loc_6F67"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 159, 0, 0, 4, 0, 1, 4, -1, 0.6129894773158531, ["cmp     argsize_0, i_0", "setnz   r12b", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_66D6"], ["cmp~argsize_0,i_0", "setnz~r12b", "cmp~argsize_0,0", "jnz~FOO"]], [0, 0, 159, 0, 0, 13, 1, 0, 10, -1, 0.10585935253866943, ["lea     rax, [rsp+0C8h+w]", "xor     edi, edi", "mov     [rsp+0C8h+var_60], r14", "mov     [rsp+0C8h+var_68], rbx", "mov     [rsp+0C8h+i], i_0", "mov     rbx, rdi", "mov     [rsp+0C8h+arg], rax", "mov     [rsp+0C8h+var_78], r10", "mov     r14, arg_0", "mov     [rsp+0C8h+var_6A], r11b", "mov     [rsp+0C8h+c], bpl", "mov     [rsp+0C8h+var_80], r8", "mov     [rsp+0C8h+argsize], r13"], ["lea~rax,[rsp+0]", "xor~edi,edi", "mov~[rsp+0],r14", "mov~[rsp+0],rbx", "mov~[rsp+0],i_0", "mov~rbx,rdi", "mov~[rsp+0],rax", "mov~[rsp+0],r10", "mov~r14,arg_0", "mov~[rsp+0],r11b", "mov~[rsp+0],bpl", "mov~[rsp+0],r8", "mov~[rsp+0],r13"]], [1, 0, 159, 0, 0, 2, 0, 0, 5, -1, 0.0, ["cmp     byte ptr [arg_0+i_0], 0", "setnz   r12b"], ["cmp~<TAG>,0", "setnz~r12b"]], [0, 0, 159, 0, 0, 2, 1, 1, 5, -1, 0.6124144672531769, ["test    r12b, r12b", "jz      loc_6FD0"], ["test~r12b,r12b", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 15, -1, 0.014346501063768616, ["cmp     byte ptr [rsi], 0", "jnz     short loc_70EF"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 159, 0, 0, 14, 0, 0, 14, -1, 0.027686734517854063, ["mov     rdi, r13", "mov     r13, [rsp+0C8h+argsize]", "mov     rsi, rbp", "mov     bytes, m", "mov     r9, arg_0", "mov     bytes, [rsp+0C8h+i]", "mov     r10, [rsp+0C8h+var_78]", "movzx   r11d, [rsp+0C8h+var_6A]", "cmp     rdi, r13", "movzx   ebp, [rsp+0C8h+c]", "mov     rbx, [rsp+0C8h+var_68]", "mov     r8, [rsp+0C8h+var_80]", "mov     arg_0, [rsp+0C8h+var_60]", "jnb     short loc_70FC"], ["mov~rdi,r13", "mov~r13,[rsp+0]", "mov~rsi,rbp", "mov~bytes,m", "mov~r9,arg_0", "mov~bytes,[rsp+0]", "mov~r10,[rsp+0]", "movzx~r11d,[rsp+0]", "cmp~rdi,r13", "movzx~ebp,[rsp+0]", "mov~rbx,[rsp+0]", "mov~r8,[rsp+0]", "mov~arg_0,[rsp+0]", "jnb~FOO"]], [0, 0, 159, 0, 0, 1, 0, 1, 16, -1, 0.0022281639928698753, ["jmp     short loc_70FC"], ["jmp~FOO"]], [3, 0, 159, 0, 1, 16, 2, 1, 9, -1, 0.06704617330803289, ["mov     [rsp+0C8h+arg], arg_0", "mov     [rsp+0C8h+i], r8", "mov     byte ptr [rsp+0C8h+argsize], r11b", "mov     [rsp+0C8h+p], r10", "call    ___ctype_b_loc", "mov     rcx, [rax]", "movzx   edx, bpl", "movzx   r11d, byte ptr [rsp+0C8h+argsize]", "mov     r10, [rsp+0C8h+p]", "mov     r8, [rsp+0C8h+i]", "mov     eax, 1", "mov     r9, [rsp+0C8h+arg]", "movzx   r12d, word ptr [rcx+rdx*2]", "shr     r12w, 0Eh", "xor     r12d, 1", "and     r12d, r11d"], ["mov~[rsp+0],arg_0", "mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[rsp+0],r10", "call~FOO", "mov~rcx,<TAG>", "movzx~edx,bpl", "movzx~r11d,[yte ptr [rsp+0]", "mov~r10,[rsp+0]", "mov~r8,[rsp+0]", "mov~eax,0", "mov~r9,[rsp+0]", "movzx~r12d,<TAG>", "shr~r12w,0", "xor~r12d,0", "and~r12d,r11d"]], [0, 0, 159, 0, 0, 3, 1, 1, 6, -1, 0.5538496923696165, ["test    r10, r10", "lea     r14, [arg_0+i_0]", "jz      short loc_6758"], ["test~r10,r10", "lea~r14,<TAG>", "jz~FOO"]], [0, 0, 159, 0, 0, 1, 0, 1, 14, -1, 0.007935138864930136, ["jmp     loc_6AE7"], ["jmp~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 7, -1, 0.06937336681169705, ["test    r11b, r11b", "jz      short loc_6758"], ["test~r11b,r11b", "jz~FOO"]], [2, 0, 159, 0, 0, 2, 0, 0, 9, -1, 0.0031043698026620298, ["mov     ebp, 9; jumptable 0000000000006778 case 9", "mov     eax, 74h ; 't'"], ["mov~ebp,0", "mov~eax,0"]], [0, 0, 159, 0, 0, 1, 0, 0, 11, -1, 0.05712724972687022, ["mov     r12d, r11d"], ["mov~r12d,r11d"]], [1, 0, 14, 0, 0, 7, 1, 1, 6, -1, 0.0534184348226094, ["cmp     [rsp+0C8h+quoting_style], 2", "mov     r12, argsize_0", "mov     r14, r8", "mov     argsize_0, arg_0", "setz    al", "test    [rsp+0C8h+elide_outer_quotes], al", "jz      short loc_6FF0"], ["cmp~[rsp+0],0", "mov~r12,argsize_0", "mov~r14,r8", "mov~argsize_0,arg_0", "setz~al", "test~[rsp+0],al", "jz~FOO"]], [0, 0, 159, 0, 0, 3, 0, 1, 8, -1, 0.06536267162453127, ["lea     rax, [i_0+r10]", "cmp     rax, argsize_0", "ja      loc_6D18"], ["lea~rax,<TAG>", "cmp~rax,argsize_0", "ja~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.024435874056367417, ["cmp     [rsp+0C8h+quoting_style], 2", "jnz     short c_escape"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.0031043698026620298, ["mov     ebp, 0Dh; jumptable 0000000000006778 case 13", "mov     eax, 72h ; 'r'", "jmp     short c_and_shell_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.0031043698026620298, ["mov     ebp, 0Ah; jumptable 0000000000006778 case 10", "mov     eax, 6Eh ; 'n'", "jmp     short c_and_shell_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 159, 1, 1, 12, 1, 2, 11, -1, 0.10873440285204991, ["mov     rax, [rsp+0C8h+i]", "mov     rdx, [rsp+0C8h+argsize]", "mov     rcx, [rsp+0C8h+p]; p", "mov     rdi, [rsp+0C8h+arg]; pwc", "lea     r13, [rax+m]", "lea     rbp, [arg_0+r13]", "sub     rdx, r13; n", "mov     rsi, rbp; s", "call    _mbrtowc", "test    rax, rax", "mov     r15, rax", "jz      loc_6F90"], ["mov~rax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rdi,[rsp+0]", "lea~r13,<TAG>", "lea~rbp,<TAG>", "sub~rdx,r13", "mov~rsi,rbp", "call~FOO", "test~rax,rax", "mov~r15,rax", "jz~FOO"]], [1, 0, 159, 1, 2, 10, 2, 3, 15, -1, 0.030073026277959866, ["mov     edi, [rsp+0C8h+w]; wc", "call    _iswprint", "mov     rdi, [rsp+0C8h+p]; ps", "test    eax, eax", "mov     eax, 0", "cmovz   r12d, eax", "add     m, bytes", "call    _mbsinit", "test    eax, eax", "jz      loc_6ECD"], ["mov~edi,[rsp+0]", "call~FOO", "mov~rdi,[rsp+0]", "test~eax,eax", "mov~eax,0", "cmovz~r12d,eax", "add~m,bytes", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 159, 0, 0, 2, 0, 1, 15, -1, 0.02624920936116382, ["mov     r12d, r11d", "jmp     loc_6FC1"], ["mov~r12d,r11d", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 17, -1, 0.0, ["cmp     byte ptr [r14+m], 0", "jz      short loc_70FC"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 159, 1, 0, 4, 0, 1, 16, -1, 0.007029498016215284, ["add     m, 1", "lea     rdx, [r15+m]", "cmp     r13, rdx", "ja      short loc_70E8"], ["add~m,0", "lea~rdx,<TAG>", "cmp~r13,rdx", "ja~FOO"]], [0, 0, 159, 1, 0, 5, 0, 1, 12, -1, 0.14300500258754528, ["mov     rdx, rax", "movzx   esi, [rsp+0C8h+elide_outer_quotes]", "mov     rcx, [rsp+0C8h+buffer]", "add     rdx, r15", "jmp     short loc_6B1A"], ["mov~rdx,rax", "movzx~esi,[rsp+0]", "mov~rcx,<TAG>", "add~rdx,r15", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 13, -1, 0.0943879017882813, ["cmp     m, 1", "ja      loc_6AF3"], ["cmp~m,0", "ja~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 15, -1, 0.03257432005060089, ["cmp     rbx, r8", "jnb     short loc_6B31"], ["cmp~rbx,r8", "jnb~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 10, -1, 0.0465971041397986, ["test    r11b, r11b", "jnz     loc_69B8"], ["test~r11b,r11b", "jnz~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.003419507262011998, ["mov     ebp, 7; jumptable 0000000000006778 case 7", "mov     eax, 61h ; 'a'", "jmp     c_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.003419507262011998, ["mov     ebp, 0Ch; jumptable 0000000000006778 case 12", "mov     eax, 66h ; 'f'", "jmp     c_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.003419507262011998, ["mov     ebp, 0Bh; jumptable 0000000000006778 case 11", "mov     eax, 76h ; 'v'", "jmp     c_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 15, -1, 0.012017710309930424, ["cmp     rbx, r8", "jnb     short loc_6B11"], ["cmp~rbx,r8", "jnb~FOO"]], [0, 0, 159, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     [rcx+rbx], bpl"], ["mov~<TAG>,bpl"]], [2, 0, 159, 0, 0, 4, 1, 1, 9, -1, 0.011019223590381077, ["test    r11b, r11b; jumptable 0000000000006778 case 8", "mov     ebp, 8", "mov     eax, 62h ; 'b'", "jz      loc_690D"], ["test~r11b,r11b", "mov~ebp,0", "mov~eax,0", "jz~FOO"]], [1, 0, 159, 1, 0, 2, 0, 0, 16, -1, 0.011442700247254328, ["movzx   ebp, byte ptr [arg_0+r15]", "add     rbx, 1"], ["movzx~ebp,<TAG>", "add~rbx,0"]], [1, 0, 159, 0, 0, 2, 0, 1, 16, -1, 0.023949169110459433, ["cmp     bytes, 1", "jz      short loc_6F67"], ["cmp~bytes,0", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 14, -1, 0.0, ["mov     len, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx+2], 27h ; '''"], ["mov~len,<TAG>", "mov~[yte ptr [rax+0],0"]], [0, 0, 159, 0, 0, 3, 0, 0, 13, -1, 0.03142429992524869, ["lea     rax, [rbx+2]", "cmp     r8, len", "jbe     short loc_698C"], ["lea~rax,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [rcx+rbx], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 0, 159, 0, 1, 14, 1, 2, 9, -1, 0.020515537593336457, ["mov     rsi, [rsp+0C8h+quote_string]; s2", "mov     rdx, r10; n", "mov     rdi, r14; s1", "mov     [rsp+0C8h+arg], arg_0", "mov     [rsp+0C8h+i], r8", "mov     byte ptr [rsp+0C8h+argsize], r11b", "mov     [rsp+0C8h+p], r10", "call    _memcmp", "test    eax, eax", "mov     r10, [rsp+0C8h+p]", "movzx   r11d, byte ptr [rsp+0C8h+argsize]", "mov     r8, [rsp+0C8h+i]", "mov     r9, [rsp+0C8h+arg]", "jnz     short loc_6758"], ["mov~rsi,[rsp+0]", "mov~rdx,r10", "mov~rdi,r14", "mov~[rsp+0],arg_0", "mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[rsp+0],r10", "call~FOO", "test~eax,eax", "mov~r10,[rsp+0]", "movzx~r11d,[yte ptr [rsp+0]", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]", "jnz~FOO"]], [0, 0, 159, 0, 0, 3, 0, 0, 16, -1, 0.03199930998792479, ["lea     rax, [rbx+1]", "cmp     r8, len", "jbe     short loc_6B46"], ["lea~rax,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [0, 0, 159, 0, 0, 1, 0, 1, 15, -1, 0.13409234661606578, ["jmp     store_c"], ["jmp~FOO"]], [2, 0, 159, 1, 0, 3, 0, 1, 12, -1, 0.020892032277231517, ["add     i_0, 1", "mov     ebp, 5Ch ; '\\'", "jmp     store_c"], ["add~i_0,0", "mov~ebp,0", "jmp~FOO"]], [0, 0, 159, 0, 0, 4, 0, 0, 17, -1, 0.019377839112184464, ["lea     rcx, [arg_0+r15]", "lea     bytes, [arg_0+r13+1]", "lea     r8, [rcx+r13]", "nop     dword ptr [rax]"], ["lea~rcx,<TAG>", "lea~bytes,[arg_0+0]", "lea~r8,<TAG>", "nop~<TAG>"]], [2, 0, 159, 1, 0, 4, 0, 0, 17, -1, 0.0, ["mov     eax, ebp", "shr     al, 6", "add     eax, 30h ; '0'", "mov     [rcx+rbx+1], al"], ["mov~eax,ebp", "shr~al,0", "add~eax,0", "mov~[rcx+0],al"]], [0, 0, 159, 0, 0, 2, 0, 0, 11, -1, 0.01388649301362774, ["cmp     rbx, r8", "jnb     short loc_674F"], ["cmp~rbx,r8", "jnb~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 10, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 12, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 5Ch ; '\\'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort; jumptable 0000000000006688 default case"], ["call~FOO"]], [0, 0, 159, 0, 0, 3, 0, 0, 17, -1, 0.03142429992524869, ["lea     rax, [rbx+2]", "cmp     r8, len", "jbe     short loc_6B5E"], ["lea~rax,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 1, 0, 2, 0, 0, 12, -1, 0.013311482950951642, ["add     rbx, 1", "nop     dword ptr [rax+rax+00h]"], ["add~rbx,0", "nop~[word ptr [rax+0]"]], [1, 0, 159, 0, 0, 2, 0, 0, 12, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 5Ch ; '\\'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [0, 0, 159, 0, 0, 2, 0, 0, 11, -1, 0.041831982059686044, ["cmp     r8, rbx", "jbe     short loc_6D5B"], ["cmp~r8,rbx", "jbe~FOO"]], [3, 0, 159, 1, 0, 5, 1, 0, 18, -1, 0.0, ["mov     eax, ebp", "shr     al, 3", "and     eax, 7", "add     eax, 30h ; '0'", "mov     [rcx+rbx+2], al"], ["mov~eax,ebp", "shr~al,0", "and~eax,0", "add~eax,0", "mov~[rcx+0],al"]], [0, 0, 159, 0, 0, 2, 0, 0, 11, -1, 0.03257432005060089, ["cmp     r8, rbx", "jbe     short loc_6968"], ["cmp~r8,rbx", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 12, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 27h ; '''"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [0, 0, 159, 0, 0, 3, 0, 0, 12, -1, 0.03199930998792479, ["lea     rax, [rbx+1]", "cmp     r8, len", "jbe     short loc_697A"], ["lea~rax,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 13, -1, 0.0, ["mov     len, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx+1], 5Ch ; '\\'"], ["mov~len,<TAG>", "mov~[yte ptr [rax+0],0"]], [1, 0, 168, 0, 1, 9, 1, 2, 3, -1, 0.010120177103099304, ["lea     rsi, asc_BAF0+2; msgid", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, rax", "mov     [rsp+0C8h+quote_string], rax", "lea     rax, asc_BAF0+2; \"'`\"", "cmp     rsi, rax", "jnz     short loc_6BE6"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,rax", "mov~[rsp+0],rax", "lea~rax,<TAG>", "cmp~rsi,rax", "jnz~FOO"]], [0, 0, 167, 0, 0, 4, 1, 0, 4, -1, 0.0, ["lea     rax, asc_BAF0; \"\\\"'`\"", "test    bl, bl", "cmovz   rax, rsi", "mov     [rsp+0C8h+quote_string], rax"], ["lea~rax,<TAG>", "test~bl,bl", "cmovz~rax,rsi", "mov~[rsp+0],rax"]], [0, 0, 159, 0, 0, 2, 0, 0, 14, -1, 0.019032833074578807, ["cmp     r8, len", "jbe     short loc_6D8F"], ["cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.08334291683437792, ["mov     eax, [rsp+0C8h+quoting_style]; jumptable 0000000000006778 case 63", "cmp     eax, 2", "jz      loc_6E10"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 15, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+len], 30h ; '0'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [0, 0, 159, 0, 0, 3, 0, 0, 15, -1, 0.01845782301190271, ["lea     rax, [rdx+2]", "cmp     r8, len", "jbe     short loc_6DA1"], ["lea~rax,[rdx+0]", "cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 16, -1, 0.0, ["mov     len, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rdx+2], 30h ; '0'"], ["mov~len,<TAG>", "mov~[yte ptr [rax+0],0"]], [2, 0, 170, 0, 1, 10, 1, 2, 2, -1, 0.0005750100626760969, ["lea     rsi, asc_BAF0+4; jumptable 0000000000006688 cases 6,7", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "cmp     [rsp+0C8h+quoting_style], 7", "mov     quoting_style_0, rax", "lea     rax, asc_BAF0+4; \"`\"", "setz    bl", "cmp     r15, rax", "jnz     short loc_6BAD"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "cmp~[rsp+0],0", "mov~quoting_style_0,rax", "lea~rax,<TAG>", "setz~bl", "cmp~r15,rax", "jnz~FOO"]], [0, 0, 169, 0, 0, 3, 1, 0, 3, -1, 0.0, ["lea     rax, asc_BAF0; \"\\\"'`\"", "test    bl, bl", "cmovnz  r15, rax"], ["lea~rax,<TAG>", "test~bl,bl", "cmovnz~r15,rax"]], [0, 0, 159, 0, 0, 1, 0, 0, 10, -1, 0.002245528384048306, ["nop     dword ptr [esc+esc+00h]"], ["nop~[word ptr [esc+0]"]], [1, 0, 159, 0, 0, 11, 2, 0, 12, -1, 0.05534471853257432, ["movzx   r11d, [rsp+0C8h+var_6A]", "movzx   ebp, [rsp+0C8h+c]", "mov     rax, m", "mov     bytes, [rsp+0C8h+i]", "mov     r10, [rsp+0C8h+var_78]", "xor     r12d, 1", "mov     m, [rsp+0C8h+var_68]", "mov     r8, [rsp+0C8h+var_80]", "mov     r9, arg_0", "mov     r13, [rsp+0C8h+argsize]", "and     r12d, r11d"], ["movzx~r11d,[rsp+0]", "movzx~ebp,[rsp+0]", "mov~rax,m", "mov~bytes,[rsp+0]", "mov~r10,[rsp+0]", "xor~r12d,0", "mov~m,[rsp+0]", "mov~r8,[rsp+0]", "mov~r9,arg_0", "mov~r13,[rsp+0]", "and~r12d,r11d"]], [0, 0, 164, 0, 0, 2, 0, 0, 6, -1, 0.0006900120752113162, ["mov     rdx, [rsp+0C8h+buffer]", "nop     dword ptr [rax+rax+00000000h]"], ["mov~rdx,<TAG>", "nop~[word ptr [rax+0]"]], [0, 0, 159, 0, 0, 2, 0, 0, 17, -1, 0.04174573055028463, ["cmp     r8, rbx", "jbe     short loc_67F6"], ["cmp~r8,rbx", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 18, -1, 0.0, ["mov     rdi, [rsp+0C8h+buffer]", "mov     byte ptr [rdi+rbx], 3Fh ; '?'"], ["mov~rdi,<TAG>", "mov~<TAG>,0"]]], "func_feature": [13, 67, 129, 7, 188, 323, 6, 671, 0.04616, 7, 32], "succs": [[8], [0, 8], [37], [2, 37], [68, 20], [20, 4], [9, 158], [38, 6], [19, 30], [55], [9, 161], [9, 186], [9, 85], [9], [9, 143], [9, 170], [9, 142], [168, 9], [9, 25], [30], [67, 43], [20, 5], [20, 31], [12], [128, 133, 70, 17, 40, 105, 44, 78, 79, 80, 177, 50, 52, 23, 49, 134], [44], [25, 27], [25, 46], [25, 29], [25, 11], [33, 42], [32, 22], [22], [42], [109], [34, 36], [185, 34], [34, 3], [132], [38, 7], [41, 38], [158, 38], [44], [67], [58, 91], [128, 133, 70, 39, 105, 44, 146, 177, 144, 145, 50, 84, 149, 52, 49, 134], [44, 47], [28, 44], [49, 44], [50, 44], [51, 44], [44, 13], [44, 15], [44], [129, 44], [67], [21, 55], [55], [74, 90], [58], [58, 61], [176, 58], [58], [109], [103, 106, 111, 83, 181, 86, 63], [122, 116], [65, 102], [81, 162], [31], [93, 118], [124, 69], [72, 136], [73, 71], [57, 71], [90, 12], [109], [104, 75], [12], [12], [12], [12], [], [64, 164], [109], [89, 17], [88, 87], [112, 76], [88], [90], [91, 92], [95], [90, 59], [117], [118], [98], [98, 94], [45, 70], [24, 70], [117], [147, 157], [16, 99], [99], [141], [109], [109], [48, 107], [113, 108], [48], [114, 110], [117], [109], [109], [109], [109], [110], [136, 151], [136, 115], [120, 119], [135], [120], [130, 125], [123, 139], [121, 137], [137], [54], [96, 127], [54], [96, 131], [132], [140], [56, 21], [97, 155], [14, 143], [132], [132], [184, 66], [184, 135], [141], [137, 139], [137, 138], [100], [140, 126], [154, 156], [91, 77], [143], [143], [143], [148, 150], [150], [91, 183], [100], [136, 159], [53], [152, 53], [156], [96, 10], [160, 165], [95], [95], [72], [165], [163, 166], [], [166], [], [169, 101], [96], [60], [60, 167], [101], [171, 172], [172], [153, 173], [153], [35, 175], [35], [178, 179], [26, 18], [179], [180, 62], [62], [174, 182], [174], [77], [141], [3], [1, 187], [1]], "fname": "quotearg_buffer_restyled", "n_num": 188}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 9, 0, 0, 2, 0, 1, 0, 0, 0.08181818181818182, ["cmp     cs:nslots, r15d", "ja      short loc_71FF"], ["cmp~<TAG>,r15d", "ja~FOO"]], [1, 0, 11, 1, 1, 18, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "movsxd  r15, edi", "push    r13", "push    r12", "mov     r14, argsize", "push    rbp", "push    rbx", "mov     rbp, options", "sub     rsp, 28h", "mov     [rsp+58h+arg], arg_0", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "test    r15d, r15d", "mov     rbx, cs:slotvec_0", "mov     [rsp+58h+e], eax", "js      loc_72F3"], ["push~r15", "push~r14", "movsxd~r15,edi", "push~r13", "push~r12", "mov~r14,argsize", "push~rbp", "push~rbx", "mov~rbp,options", "sub~rsp,0", "mov~[rsp+0],arg_0", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "test~r15d,r15d", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [1, 0, 0, 1, 0, 11, 0, 0, 3, -1, 0.0, ["mov     eax, [rsp+58h+e]", "mov     [r13+0], eax", "add     rsp, 28h", "mov     rax, val", "pop     rbx", "pop     options", "pop     val", "pop     r13", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~[r13+0],eax", "add~rsp,0", "mov~rax,val", "pop~rbx", "pop~options", "pop~val", "pop~r13", "pop~argsize", "pop~r15", "retn"]], [3, 0, 4, 3, 1, 23, 1, 2, 2, -1, 0.21818181818181817, ["mov     eax, [options+4]", "shl     n0, 4", "sub     rsp, 8", "add     sv, r15", "lea     r15, [options+8]", "mov     r8d, [options+0]; quoting_style", "mov     r11, [rbx]", "mov     r12, [rbx+8]", "mov     rcx, argsize; argsize", "or      eax, 1", "mov     [rsp+60h+flags], eax", "push    r15; quote_these_too", "mov     r9d, eax; flags", "mov     rdx, [rsp+68h+arg]; arg", "mov     rsi, size_0; buffersize", "mov     rdi, val; buffer", "mov     [rsp+68h+size], size_0", "call    quotearg_buffer_restyled", "pop     rcx", "pop     rsi", "mov     r11, [rsp+58h+size]", "cmp     r11, qsize", "ja      short loc_72AB"], ["mov~eax,[options+0]", "shl~n0,0", "sub~rsp,0", "add~sv,r15", "lea~r15,[options+0]", "mov~r8d,[options+0]", "mov~r11,<TAG>", "mov~r12,[rbx+0]", "mov~rcx,argsize", "or~eax,0", "mov~[rsp+0],eax", "push~r15", "mov~r9d,eax", "mov~rdx,[rsp+0]", "mov~rsi,size_0", "mov~rdi,val", "mov~[rsp+0],size_0", "call~FOO", "pop~rcx", "pop~rsi", "mov~r11,[rsp+0]", "cmp~r11,qsize", "ja~FOO"]], [1, 0, 1, 1, 2, 16, 0, 2, 4, -1, 0.01818181818181818, ["mov     rdi, rsi; n", "mov     [rsp+58h+size], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, [options+0]; quoting_style", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rcx, argsize; argsize", "mov     rdx, [rsp+68h+arg]; arg", "mov     rsi, [rsp+68h+size]; buffersize", "mov     rdi, rax; buffer", "mov     val, rax", "call    quotearg_buffer_restyled", "pop     rax", "pop     rdx"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,[options+0]", "push~r15", "mov~r9d,[rsp+0]", "mov~rcx,argsize", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~val,rax", "call~FOO", "pop~rax", "pop~rdx"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.12727272727272726, ["lea     rsi, [qsize+1]", "lea     qsize, slot0", "cmp     val, rax", "mov     [rbx], size_0", "jz      short loc_7271"], ["lea~rsi,[qsize+0]", "lea~qsize,<TAG>", "cmp~val,rax", "mov~<TAG>,size_0", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, -1, 0.0, ["mov     rdi, val; ptr", "mov     [rsp+58h+size], size_0", "call    free", "mov     rsi, [rsp+58h+size]"], ["mov~rdi,val", "mov~[rsp+0],size_0", "call~FOO", "mov~rsi,[rsp+0]"]], [2, 0, 5, 4, 1, 8, 1, 1, 4, -1, 0.13636363636363635, ["mov     edi, cs:nslots", "xor     esi, esi; c", "sub     rdx, rdi", "shl     rdi, 4", "shl     rdx, 4; n", "add     rdi, rbx; s", "call    _memset", "mov     cs:nslots, r12d"], ["mov~edi,<TAG>", "xor~esi,esi", "sub~rdx,rdi", "shl~rdi,0", "shl~rdx,0", "add~rdi,rbx", "call~FOO", "mov~<TAG>,r12d"]], [0, 0, 6, 0, 1, 9, 1, 2, 3, -1, 0.03636363636363636, ["xor     edi, edi; p", "mov     [rsp+58h+size], n1", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     sv, rax", "mov     cs:slotvec_0, sv", "mov     rdx, [rsp+58h+size]", "movups  xmmword ptr [sv], xmm0", "jmp     loc_71DD"], ["xor~edi,edi", "mov~[rsp+0],n1", "call~FOO", "movdqa~xmm0,<TAG>", "mov~sv,rax", "mov~<TAG>,sv", "mov~rdx,[rsp+0]", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 8, 1, 0, 7, 0, 1, 2, -1, 0.05454545454545454, ["lea     edx, [n0+1]", "lea     e_0, slotvec0", "mov     rsi, rdx", "mov     r12, rdx", "shl     rsi, 4; n", "cmp     sv, rax", "jz      loc_72C8"], ["lea~edx,[n0+0]", "lea~e_0,<TAG>", "mov~rsi,rdx", "mov~r12,rdx", "shl~rsi,0", "cmp~sv,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 6, 0, 1, 6, 0, 1, 3, -1, 0.03636363636363636, ["mov     rdi, sv; p", "mov     [rsp+58h+size], n1", "call    xrealloc", "mov     rdx, [rsp+58h+size]", "mov     sv, rax", "mov     cs:slotvec_0, sv"], ["mov~rdi,sv", "mov~[rsp+0],n1", "call~FOO", "mov~rdx,[rsp+0]", "mov~sv,rax", "mov~<TAG>,sv"]]], "func_feature": [9, 4, 15, 0, 12, 15, 7, 110, 0.05909, 4, 11], "succs": [[9, 3], [0, 10], [], [2, 5], [2], [4, 6], [4], [3], [7], [8, 11], [], [7]], "fname": "quotearg_n_options", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[1, 0, 0, 0, 2, 18, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, o", "call    ___errno_location", "mov     r12d, [p]", "mov     rbp, p", "lea     p, default_quoting_options", "test    o, o", "mov     esi, 28h ; '('; s", "cmovz   o, p", "mov     rdi, rbx; p", "call    xmemdup", "mov     [rbp+0], r12d", "pop     rbx", "pop     rbp", "pop     e", "retn"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,o", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,p", "lea~p,<TAG>", "test~o,o", "mov~esi,0", "cmovz~o,p", "mov~rdi,rbx", "call~FOO", "mov~[rbp+0],r12d", "pop~rbx", "pop~rbp", "pop~e", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 18, 0.0, 1, 0], "succs": [[]], "fname": "clone_quoting_options", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     eax, [rdi]", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~eax,<TAG>", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "get_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     [rdi], esi", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~<TAG>,esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[4, 0, 0, 1, 0, 19, 6, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    p, p", "mov     ecx, esi", "cmovz   p, rax", "mov     eax, esi", "and     ecx, 1Fh", "shr     al, 5", "movzx   eax, al", "lea     p, [p+rax*4+8]", "mov     esi, [p]", "mov     eax, esi", "shr     eax, cl", "xor     edx, eax", "and     eax, 1", "and     edx, 1", "shl     edx, cl", "xor     edx, esi", "mov     [p], edx", "retn"], ["lea~rax,<TAG>", "test~p,p", "mov~ecx,esi", "cmovz~p,rax", "mov~eax,esi", "and~ecx,0", "shr~al,0", "movzx~eax,al", "lea~p,[p+0]", "mov~esi,<TAG>", "mov~eax,esi", "shr~eax,cl", "xor~edx,eax", "and~eax,0", "and~edx,0", "shl~edx,cl", "xor~edx,esi", "mov~<TAG>,edx", "retn"]]], "func_feature": [0, 6, 0, 0, 1, 0, 0, 19, 0.0, 1, 1], "succs": [[]], "fname": "set_char_quoting", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0.0, ["lea     r, default_quoting_options", "test    o, o", "cmovz   o, r", "mov     eax, [o+4]", "mov     [o+4], esi", "retn"], ["lea~r,<TAG>", "test~o,o", "cmovz~o,r", "mov~eax,[o+0]", "mov~[o+0],esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 6, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_flags", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[3, 0, 0, 3, 2, 37, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "lea     r, default_quoting_options", "push    r13", "push    r12", "mov     r13, buffer", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, buffersize", "mov     r15, arg", "sub     rsp, 18h", "test    o, o", "cmovz   rbx, r", "mov     [rsp+48h+argsize], argsize_0", "call    ___errno_location", "mov     r12d, [r]", "mov     rbp, r", "lea     r, [p+8]", "sub     rsp, 8", "mov     r9d, [p+4]; flags", "mov     r8d, [p]; quoting_style", "push    r; quote_these_too", "mov     rcx, [rsp+58h+argsize]; argsize", "mov     rdx, arg; arg", "mov     rsi, buffersize; buffersize", "mov     rdi, buffer; buffer", "call    quotearg_buffer_restyled", "mov     [rbp+0], r12d", "add     rsp, 28h", "pop     p", "pop     rbp", "pop     e", "pop     buffer", "pop     buffersize", "pop     arg", "retn"], ["push~r15", "push~r14", "lea~r,<TAG>", "push~r13", "push~r12", "mov~r13,buffer", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,buffersize", "mov~r15,arg", "sub~rsp,0", "test~o,o", "cmovz~rbx,r", "mov~[rsp+0],argsize_0", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,r", "lea~r,[p+0]", "sub~rsp,0", "mov~r9d,[p+0]", "mov~r8d,<TAG>", "push~r", "mov~rcx,[rsp+0]", "mov~rdx,arg", "mov~rsi,buffersize", "mov~rdi,buffer", "call~FOO", "mov~[rbp+0],r12d", "add~rsp,0", "pop~p", "pop~rbp", "pop~e", "pop~buffer", "pop~buffersize", "pop~arg", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 37, 0.0, 1, 3], "succs": [[]], "fname": "quotearg_buffer", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[2, 0, 2, 2, 4, 54, 7, 5, 0, 0, 0.0, ["push    r15", "push    r14", "lea     rax, default_quoting_options", "push    r13", "push    r12", "mov     r12, size", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, arg", "mov     r15, argsize", "sub     rsp, 38h", "test    o, o", "cmovz   rbx, rax", "xor     ebp, ebp", "call    ___errno_location", "test    size, size", "mov     r13, rax", "mov     eax, [rax]", "setz    bpl", "or      ebp, [p+4]", "lea     r10, [p+8]", "sub     rsp, 8", "mov     r8d, [p]; quoting_style", "mov     rcx, argsize; argsize", "mov     [rsp+70h+e], eax", "push    r10; quote_these_too", "mov     rdx, arg; arg", "xor     esi, esi; buffersize", "xor     edi, edi; buffer", "mov     r9d, ebp; flags", "mov     [rsp+78h+var_48], r10", "call    quotearg_buffer_restyled", "lea     rsi, [rax+1]", "mov     [rsp+78h+var_40], rax", "mov     rdi, bufsize_0; n", "mov     [rsp+78h+bufsize], bufsize_0", "call    xmalloc", "mov     r10, [rsp+78h+var_48]", "mov     rsi, [rsp+78h+bufsize]; buffersize", "mov     rdx, arg; arg", "mov     r8d, [p]; quoting_style", "mov     r9d, ebp; flags", "mov     rcx, argsize; argsize", "mov     rdi, rax; buffer", "mov     [rsp+78h+var_58], rax", "mov     [rsp+78h+quote_these_too], r10; quote_these_too", "call    quotearg_buffer_restyled", "mov     eax, [rsp+78h+e]", "test    size, size", "mov     [r13+0], eax", "pop     rax", "pop     rdx", "jz      short loc_750B"], ["push~r15", "push~r14", "lea~rax,<TAG>", "push~r13", "push~r12", "mov~r12,size", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,arg", "mov~r15,argsize", "sub~rsp,0", "test~o,o", "cmovz~rbx,rax", "xor~ebp,ebp", "call~FOO", "test~size,size", "mov~r13,rax", "mov~eax,<TAG>", "setz~bpl", "or~ebp,[p+0]", "lea~r10,[p+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~[rsp+0],eax", "push~r10", "mov~rdx,arg", "xor~esi,esi", "xor~edi,edi", "mov~r9d,ebp", "mov~[rsp+0],r10", "call~FOO", "lea~rsi,[rax+0]", "mov~[rsp+0],rax", "mov~rdi,bufsize_0", "mov~[rsp+0],bufsize_0", "call~FOO", "mov~r10,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdx,arg", "mov~r8d,<TAG>", "mov~r9d,ebp", "mov~rcx,argsize", "mov~rdi,rax", "mov~[rsp+0],rax", "mov~<TAG>,r10", "call~FOO", "mov~eax,[rsp+0]", "test~size,size", "mov~[r13+0],eax", "pop~rax", "pop~rdx", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 0, 0, 0.0, ["mov     rax, [rsp+68h+var_58]", "add     rsp, 38h", "pop     p", "pop     flags", "pop     size", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["mov~rax,[rsp+0]", "add~rsp,0", "pop~p", "pop~flags", "pop~size", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [0, 0, 1, 0, 0, 2, 0, 0, 0, 1, 0.0, ["mov     r11, [rsp+68h+var_40]", "mov     [size], r11"], ["mov~r11,[rsp+0]", "mov~<TAG>,r11"]]], "func_feature": [4, 7, 5, 3, 3, 3, 1, 65, 0.0, 1, 3], "succs": [[1, 2], [], [1]], "fname": "quotearg_alloc_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rcx, o", "xor     edx, edx", "jmp     quotearg_alloc_mem"], ["mov~rcx,o", "xor~edx,edx", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_alloc", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 4, 0, 0, 4, 0, 1, 0, 0, 0.2857142857142857, ["mov     rdi, [sv+8]; ptr", "lea     rbx, slot0", "cmp     rdi, rbx", "jz      short loc_7599"], ["mov~rdi,[sv+0]", "lea~rbx,<TAG>", "cmp~rdi,rbx", "jz~FOO"]], [1, 0, 7, 0, 0, 7, 0, 0, 0, 3, 0.0, ["mov     eax, cs:nslots", "push    r12", "mov     r12, cs:slotvec_0", "push    rbp", "push    rbx", "cmp     eax, 1", "jbe     short loc_7571"], ["mov~eax,<TAG>", "push~r12", "mov~r12,<TAG>", "push~rbp", "push~rbx", "cmp~eax,0", "jbe~FOO"]], [1, 0, 6, 1, 1, 5, 0, 2, 2, 3, 0.11904761904761904, ["mov     rdi, [rbx]; ptr", "add     rbx, 10h", "call    free", "cmp     rbx, rbp", "jnz     short loc_7560"], ["mov~rdi,<TAG>", "add~rbx,0", "call~FOO", "cmp~rbx,rbp", "jnz~FOO"]], [1, 0, 0, 0, 0, 5, 0, 0, 3, 0, 0.0, ["pop     rbx", "mov     cs:nslots, 1", "pop     rbp", "pop     sv", "retn"], ["pop~rbx", "mov~<TAG>,0", "pop~rbp", "pop~sv", "retn"]], [0, 0, 2, 0, 0, 3, 0, 1, 2, 1, 0.23809523809523808, ["lea     rbx, slotvec0", "cmp     sv, rbx", "jz      short loc_75B4"], ["lea~rbx,<TAG>", "cmp~sv,rbx", "jz~FOO"]], [0, 0, 1, 0, 1, 3, 0, 1, 3, 1, 0.0, ["mov     rdi, sv; ptr", "call    free", "mov     cs:slotvec_0, rbx"], ["mov~rdi,sv", "call~FOO", "mov~<TAG>,rbx"]], [1, 0, 3, 0, 1, 3, 0, 1, 2, 2, 0.0, ["call    free", "mov     cs:slotvec0.size, 100h", "mov     cs:slotvec0.val, rbx"], ["call~FOO", "mov~<TAG>,0", "mov~<TAG>,rbx"]], [2, 0, 6, 2, 0, 5, 0, 0, 1, 4, 0.023809523809523808, ["sub     eax, 2", "lea     rbx, [sv+18h]", "shl     rax, 4", "lea     rbp, [sv+rax+28h]", "nop     word ptr [rax+rax+00000000h]"], ["sub~eax,0", "lea~rbx,[sv+0]", "shl~rax,0", "lea~rbp,[sv+0]", "nop~[ord ptr [rax+0]"]]], "func_feature": [3, 0, 6, 0, 8, 11, 0, 35, 0.08333, 5, 3], "succs": [[4, 6], [0, 7], [0, 2], [], [3, 5], [3], [4], [2]], "fname": "quotearg_free", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rdx,0", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_n", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_n_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options; options", "mov     rsi, arg; arg", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "xor     edi, edi; n", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rsi,arg", "mov~rdx,0", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options; options", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "xor     edi, edi; n", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rdx,argsize", "mov~argsize,arg", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[3, 0, 2, 1, 1, 23, 2, 2, 0, 0, 0.0, ["pxor    xmm0, xmm0", "sub     rsp, 68h", "mov     dword ptr [rsp+68h+s], esi", "mov     dword ptr [rsp+68h+s+4], 0", "mov     rax, arg", "mov     rcx, fs:28h", "mov     [rsp+68h+var_10], rcx", "xor     ecx, ecx", "movups  [rsp+68h+s+8], xmm0", "mov     rcx, rsp; options", "mov     s_0, rax; arg", "movups  [rsp+68h+var_20], xmm0", "movdqa  xmm0, [rsp+68h+s]", "mov     arg, qword ptr [rsp+68h+var_20+8]", "movaps  xmmword ptr [rsp+68h+o.style], xmm0", "movdqa  xmm0, xmmword ptr [rsp+40h]", "mov     qword ptr [rsp+68h+o.quote_these_too+18h], rdx", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "movaps  xmmword ptr [rsp+68h+o.quote_these_too+8], xmm0", "call    quotearg_n_options", "mov     rdx, [rsp+68h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_76B7"], ["pxor~xmm0,xmm0", "sub~rsp,0", "mov~[word ptr [rsp+0],esi", "mov~[word ptr [rsp+0],0", "mov~rax,arg", "mov~rcx,<TAG>", "mov~[rsp+0],rcx", "xor~ecx,ecx", "movups~[rsp+0],xmm0", "mov~rcx,rsp", "mov~s_0,rax", "movups~[rsp+0],xmm0", "movdqa~xmm0,[rsp+0]", "mov~arg,[word ptr [rsp+0]", "movaps~<TAG>,xmm0", "movdqa~xmm0,[mmword ptr [rsp+0]", "mov~[word ptr [rsp+0],rdx", "mov~rdx,0", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 68h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 2, 3, 2, 3, 2, 3, 26, 0.0, 1, 2], "succs": [[1, 2], [], []], "fname": "quotearg_n_style", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 68h", "retn"], ["add~rsp,0", "retn"]], [2, 0, 2, 1, 1, 23, 2, 2, 0, 1, 0.0, ["pxor    xmm0, xmm0", "sub     rsp, 68h", "mov     dword ptr [rsp+68h+s], esi", "mov     dword ptr [rsp+68h+s+4], 0", "mov     rax, arg", "mov     arg, argsize; argsize", "mov     s_0, arg; arg", "movups  [rsp+68h+s+8], xmm0", "mov     argsize, fs:28h", "mov     [rsp+68h+var_10], argsize", "xor     ecx, ecx", "movups  [rsp+68h+var_20], xmm0", "movdqa  xmm0, [rsp+68h+s]", "mov     rcx, qword ptr [rsp+68h+var_20+8]", "movaps  xmmword ptr [rsp+68h+o.style], xmm0", "movdqa  xmm0, xmmword ptr [rsp+40h]", "mov     qword ptr [rsp+68h+o.quote_these_too+18h], rcx", "mov     rcx, rsp; options", "movaps  xmmword ptr [rsp+68h+o.quote_these_too+8], xmm0", "call    quotearg_n_options", "mov     rdx, [rsp+68h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_7733"], ["pxor~xmm0,xmm0", "sub~rsp,0", "mov~[word ptr [rsp+0],esi", "mov~[word ptr [rsp+0],0", "mov~rax,arg", "mov~arg,argsize", "mov~s_0,arg", "movups~[rsp+0],xmm0", "mov~argsize,<TAG>", "mov~[rsp+0],argsize", "xor~ecx,ecx", "movups~[rsp+0],xmm0", "movdqa~xmm0,[rsp+0]", "mov~rcx,[word ptr [rsp+0]", "movaps~<TAG>,xmm0", "movdqa~xmm0,[mmword ptr [rsp+0]", "mov~[word ptr [rsp+0],rcx", "mov~rcx,rsp", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 2, 3, 2, 3, 2, 1, 26, 0.0, 1, 2], "succs": [[], [0, 2], []], "fname": "quotearg_n_style_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 1, 1, 0, 0, 0.0, ["mov     rdx, arg; arg", "mov     esi, edi; s", "xor     edi, edi; n", "jmp     quotearg_n_style"], ["mov~rdx,arg", "mov~esi,edi", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "quotearg_style", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["mov     rcx, argsize; argsize", "mov     argsize, arg; arg", "mov     esi, edi; s", "xor     edi, edi; n", "jmp     quotearg_n_style_mem"], ["mov~rcx,argsize", "mov~argsize,arg", "mov~esi,edi", "xor~edi,edi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_style_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 38h", "retn"], ["add~rsp,0", "retn"]], [4, 0, 2, 2, 1, 33, 6, 2, 0, 1, 0.0, ["sub     rsp, 38h", "mov     ecx, edx", "mov     rax, fs:28h", "mov     [rsp+38h+var_10], rax", "xor     eax, eax", "mov     rax, qword ptr cs:default_quoting_options.quote_these_too+18h", "mov     r8, rsp", "and     ecx, 1Fh", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     qword ptr [rsp+38h+options.quote_these_too+18h], rax", "mov     eax, edx", "shr     al, 5", "movzx   eax, al", "movaps  xmmword ptr [rsp+38h+options.style], xmm0", "lea     r9, [r8+rax*4+8]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "movaps  xmmword ptr [rsp+38h+options.quote_these_too+8], xmm0", "mov     edx, [r9]", "mov     eax, edx", "shr     eax, cl", "not     eax", "and     eax, 1", "shl     eax, cl", "mov     rcx, r8; options", "xor     eax, edx", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "mov     [r9], eax", "xor     edi, edi; n", "call    quotearg_n_options", "mov     rsi, [rsp+38h+var_10]", "xor     rsi, fs:28h", "jnz     short loc_77E6"], ["sub~rsp,0", "mov~ecx,edx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "mov~r8,rsp", "and~ecx,0", "movdqa~xmm0,<TAG>", "mov~[word ptr [rsp+0],rax", "mov~eax,edx", "shr~al,0", "movzx~eax,al", "movaps~<TAG>,xmm0", "lea~r9,[r8+0]", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "mov~edx,<TAG>", "mov~eax,edx", "shr~eax,cl", "not~eax", "and~eax,0", "shl~eax,cl", "mov~rcx,r8", "xor~eax,edx", "mov~rdx,argsize", "mov~argsize,arg", "mov~<TAG>,eax", "xor~edi,edi", "call~FOO", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 6, 3, 1, 3, 2, 3, 36, 0.0, 4, 3], "succs": [[], [0, 2], []], "fname": "quotearg_char_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["movsx   edx, sil", "mov     ch_0, 0FFFFFFFFFFFFFFFFh", "jmp     quotearg_char_mem"], ["movsx~edx,sil", "mov~ch_0,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_char", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[1, 1, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     edx, 3Ah ; ':'; ch_0", "mov     rsi, 0FFFFFFFFFFFFFFFFh; argsize", "jmp     quotearg_char_mem"], ["mov~edx,<STR>", "mov~rsi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 1, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_colon", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     edx, 3Ah ; ':'; ch_0", "jmp     quotearg_char_mem"], ["mov~edx,<STR>", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_colon_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[2, 0, 5, 1, 1, 12, 2, 2, 0, 0, 0.0, ["push    rbx", "lea     rsi, filename; \"/\"", "mov     rbx, root_d_i", "mov     edi, 1; ver", "sub     rsp, 0A0h", "mov     rdx, rsp; stat_buf", "mov     rax, fs:28h", "mov     [rsp+0A8h+var_10], rax", "xor     eax, eax", "call    ___lxstat", "test    eax, eax", "jnz     short loc_7898"], ["push~rbx", "lea~rsi,<TAG>", "mov~rbx,root_d_i", "mov~edi,0", "sub~rsp,0", "mov~rdx,rsp", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 0, 1, 0.30000000000000004, ["mov     rcx, [rsp+0A8h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_789C"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 0, 2, 0.07500000000000001, ["xor     eax, eax", "jmp     short loc_7879"], ["xor~eax,eax", "jmp~FOO"]], [0, 0, 3, 0, 0, 5, 0, 0, 0, 2, 0.07500000000000001, ["mov     rax, [rsp+0A8h+statbuf.st_ino]", "mov     [root_d_i], rax", "mov     rax, [rsp+0A8h+statbuf.st_dev]", "mov     [root_d_i+8], rax", "mov     rax, root_d_i"], ["mov~rax,[rsp+0]", "mov~<TAG>,rax", "mov~rax,<TAG>", "mov~[root_d_i+0],rax", "mov~rax,root_d_i"]], [1, 0, 0, 1, 0, 3, 0, 0, 0, -1, 0.0, ["add     rsp, 0A0h", "pop     root_d_i", "retn"], ["add~rsp,0", "pop~root_d_i", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 4, 5, 1, 6, 6, 1, 26, 0.075, 2, 2], "succs": [[2, 3], [4, 5], [1], [1], [], []], "fname": "get_root_dev_ino", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, p", "retn"], ["mov~rax,p", "retn"]], [3, 0, 2, 5, 0, 12, 1, 1, 1, 0, 0.5, ["mov     rax, i", "sub     p, 1", "mul     rsi", "shr     rdx, 3", "lea     rax, [rdx+rdx*4]", "add     rax, rax", "sub     i, rax", "add     edi, 30h ; '0'", "test    rdx, rdx", "mov     [p], dil", "mov     rdi, rdx", "jnz     short loc_78C8"], ["mov~rax,i", "sub~p,0", "mul~,rsi", "shr~rdx,0", "lea~rax,<TAG>", "add~rax,rax", "sub~i,rax", "add~edi,0", "test~rdx,rdx", "mov~<TAG>,dil", "mov~rdi,rdx", "jnz~FOO"]], [2, 0, 2, 0, 0, 4, 0, 0, 0, 0, 0.0, ["lea     p, [buf+14h]", "mov     byte ptr [buf+14h], 0", "mov     buf, 0CCCCCCCCCCCCCCCDh", "nop     word ptr [rax+rax+00h]"], ["lea~p,[buf+0]", "mov~[yte ptr [buf+0],0", "mov~buf,0", "nop~[ord ptr [rax+0]"]]], "func_feature": [0, 1, 1, 0, 3, 3, 3, 18, 0.16667, 0, 5], "succs": [[], [0, 1], [1]], "fname": "umaxtostr", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 21, 0, 0, 6, 3, 1, 0, 0, 0.036585365853658534, ["mov     edx, [pwd+10h]", "xor     r10d, r10d", "xor     ebp, ebp", "test    r9b, r9b", "mov     [rsp+88h+unum], edx", "jnz     loc_7B88"], ["mov~edx,[pwd+0]", "xor~r10d,r10d", "xor~ebp,ebp", "test~r9b,r9b", "mov~[rsp+0],edx", "jnz~FOO"]], [0, 0, 27, 0, 1, 6, 1, 2, 6, -1, 0.03484320557491289, ["mov     rdi, u; string", "mov     byte ptr [rsp+88h+var_70], r9b", "call    _getpwnam", "test    pwd, pwd", "movzx   r9d, byte ptr [rsp+88h+var_70]", "jz      short loc_7AA0"], ["mov~rdi,u", "mov~[yte ptr [rsp+0],r9b", "call~FOO", "test~pwd,pwd", "movzx~r9d,[yte ptr [rsp+0]", "jz~FOO"]], [1, 0, 12, 0, 0, 3, 0, 1, 5, -1, 0.10569105691056911, ["mov     rax, [rsp+88h+name]", "cmp     byte ptr [rax], 2Bh ; '+'", "jz      loc_7AF0"], ["mov~rax,<TAG>", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 4, -1, 0.20150987224157957, ["cmp     [rsp+88h+var_71], 0", "jz      loc_7C40"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 9, 0, 1, 8, 2, 2, 6, -1, 0.052555168408826944, ["mov     rdi, [rsp+88h+name]; s", "lea     rcx, [rsp+88h+tmp]; val", "lea     r8, aReportBugsToS+16h; valid_suffixes", "xor     esi, esi; ptr", "mov     edx, 0Ah; strtol_base", "call    xstrtoul", "test    eax, eax", "jz      short loc_7B48"], ["mov~rdi,<TAG>", "lea~rcx,[rsp+0]", "lea~r8,<TAG>", "xor~esi,esi", "mov~edx,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 11, 0, 1, 4, 1, 2, 6, -1, 0.03193960511033682, ["mov     rdi, [rsp+88h+name]; name", "call    _getgrnam", "test    grp, grp", "jz      loc_7AF0"], ["mov~rdi,<TAG>", "call~FOO", "test~grp,grp", "jz~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 58h", "pop     u", "pop     rbp", "pop     uid", "pop     gid", "pop     username", "pop     groupname", "retn"], ["add~rsp,<STR>", "pop~u", "pop~rbp", "pop~uid", "pop~gid", "pop~username", "pop~groupname", "retn"]], [1, 0, 2, 0, 2, 9, 2, 3, 3, -1, 0.04645760743321719, ["mov     rdi, u; ptr", "call    free", "xor     edi, edi; p", "mov     edx, 5; category", "mov     rsi, rbp; msgid", "call    _dcgettext", "mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "jnz     loc_7C66"], ["mov~rdi,u", "call~FOO", "xor~edi,edi", "mov~edx,0", "mov~rsi,rbp", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 5, -1, 0.0743321718931475, ["test    error_msg, error_msg", "jnz     loc_7B28"], ["test~error_msg,error_msg", "jnz~FOO"]], [0, 0, 20, 0, 1, 6, 1, 2, 8, -1, 0.020905923344947737, ["mov     eax, [pwd+14h]", "mov     edi, eax; gid", "mov     [rsp+88h+gnum], eax", "call    _getgrgid", "test    grp, grp", "jz      loc_7C50"], ["mov~eax,[pwd+0]", "mov~edi,eax", "mov~[rsp+0],eax", "call~FOO", "test~grp,grp", "jz~FOO"]], [0, 0, 16, 0, 1, 4, 0, 2, 8, -1, 0.051103368176538905, ["mov     [rsp+88h+var_70], r10", "call    _endpwent", "mov     r10, [rsp+88h+var_70]", "jmp     loc_797A"], ["mov~[rsp+0],r10", "call~FOO", "mov~r10,[rsp+0]", "jmp~FOO"]], [0, 0, 17, 0, 2, 6, 1, 3, 10, -1, 0.029616724738675958, ["call    xstrdup", "xor     ebp, ebp", "mov     [rsp+88h+var_70], rax", "call    _endgrent", "mov     r10, [rsp+88h+var_70]", "jmp     loc_7A8A"], ["call~FOO", "xor~ebp,ebp", "mov~[rsp+0],rax", "call~FOO", "mov~r10,[rsp+0]", "jmp~FOO"]], [2, 0, 17, 0, 0, 11, 0, 0, 8, -1, 0.0, ["mov     rax, [rsp+88h+tmp]", "movzx   esi, [rsp+88h+var_71]", "mov     edx, 0FFFFFFFFh", "mov     ecx, [rsp+88h+unum]", "cmp     rax, rdx", "cmovbe  ecx, eax", "cmova   esi, r9d", "mov     eax, 0", "mov     [rsp+88h+unum], ecx", "mov     r9d, esi", "cmovbe  rbp, rax"], ["mov~rax,[rsp+0]", "movzx~esi,[rsp+0]", "mov~edx,0", "mov~ecx,[rsp+0]", "cmp~rax,rdx", "cmovbe~ecx,eax", "cmova~esi,r9d", "mov~eax,0", "mov~[rsp+0],ecx", "mov~r9d,esi", "cmovbe~rbp,rax"]], [1, 0, 18, 0, 1, 11, 2, 2, 7, -1, 0.013937282229965157, ["lea     rcx, [rsp+88h+tmp]; val", "lea     r8, aReportBugsToS+16h; valid_suffixes", "xor     esi, esi; ptr", "mov     edx, 0Ah; strtol_base", "mov     rdi, u; s", "mov     byte ptr [rsp+88h+var_70], r9b", "call    xstrtoul", "test    eax, eax", "lea     rbp, aInvalidUser; \"invalid user\"", "movzx   r9d, byte ptr [rsp+88h+var_70]", "jnz     short loc_7C1E"], ["lea~rcx,[rsp+0]", "lea~r8,<TAG>", "xor~esi,esi", "mov~edx,0", "mov~rdi,u", "mov~[yte ptr [rsp+0],r9b", "call~FOO", "test~eax,eax", "lea~rbp,<TAG>", "movzx~r9d,[yte ptr [rsp+0]", "jnz~FOO"]], [0, 0, 18, 0, 0, 1, 0, 0, 9, -1, 0.008710801393728223, ["mov     rdi, [grp]; string"], ["mov~rdi,<TAG>"]], [0, 0, 20, 0, 0, 2, 1, 1, 6, -1, 0.07897793263646923, ["test    r9b, r9b", "jz      loc_7BC0"], ["test~r9b,r9b", "jz~FOO"]], [1, 0, 28, 0, 0, 5, 2, 1, 5, -1, 0.10220673635307781, ["test    r10, r10", "setnz   r9b", "and     r9d, eax", "cmp     byte ptr [u], 2Bh ; '+'", "jz      short loc_7AA0"], ["test~r10,r10", "setnz~r9b", "and~r9d,eax", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 7, -1, 0.018292682926829267, ["mov     eax, [grp+10h]"], ["mov~eax,[grp+0]"]], [0, 0, 4, 0, 2, 5, 0, 2, 7, -1, 0.008420441347270616, ["call    _endgrent", "mov     rdi, [rsp+88h+name]; string", "lea     rbp, aInvalidGroup; \"invalid group\"", "call    xstrdup", "mov     r10, rax"], ["call~FOO", "mov~rdi,<TAG>", "lea~rbp,<TAG>", "call~FOO", "mov~r10,rax"]], [1, 0, 8, 0, 0, 4, 0, 1, 7, -1, 0.018002322880371662, ["mov     rax, [rsp+88h+tmp]", "mov     edx, 0FFFFFFFFh", "cmp     rax, rdx", "ja      short loc_7B10"], ["mov~rax,[rsp+0]", "mov~edx,0", "cmp~rax,rdx", "ja~FOO"]], [2, 0, 35, 0, 1, 8, 0, 2, 2, 2, 0.019454123112659698, ["mov     [rsp+88h+name], separator", "lea     separator, [ulen+1]; s", "call    xmemdup", "mov     r10, [rsp+88h+name]", "mov     rbx, rax", "mov     byte ptr [u+ulen], 0", "cmp     byte ptr [r10+1], 0", "jnz     loc_7B60"], ["mov~<TAG>,separator", "lea~separator,[ulen+0]", "call~FOO", "mov~r10,<TAG>", "mov~rbx,rax", "mov~<TAG>,0", "cmp~[yte ptr [r10+0],0", "jnz~FOO"]], [0, 0, 39, 1, 0, 3, 0, 1, 1, 3, 0.017034456058846303, ["mov     rbp, separator", "sub     rbp, spec", "jnz     loc_7A10"], ["mov~rbp,separator", "sub~rbp,spec", "jnz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 6, -1, 0.042682926829268296, ["mov     rdi, r10; ptr", "call    free", "jmp     loc_79D6"], ["mov~rdi,r10", "call~FOO", "jmp~FOO"]], [1, 0, 31, 1, 0, 6, 1, 1, 3, 1, 0.020518776616337595, ["mov     u, r10", "add     rax, 1", "setnz   [rsp+88h+var_71]", "test    u, u", "mov     [rsp+88h+name], g", "jz      loc_7C6B"], ["mov~u,r10", "add~rax,0", "setnz~[rsp+0]", "test~u,u", "mov~<TAG>,g", "jz~FOO"]], [0, 0, 16, 0, 1, 6, 1, 2, 8, -1, 0.018583042973286876, ["xor     r10d, r10d", "mov     [rsp+88h+var_71], r9b", "mov     [rsp+88h+var_70], r10", "call    _endpwent", "mov     r10, [rsp+88h+var_70]", "jmp     loc_797A"], ["xor~r10d,r10d", "mov~[rsp+0],r9b", "mov~[rsp+0],r10", "call~FOO", "mov~r10,[rsp+0]", "jmp~FOO"]], [0, 0, 31, 0, 0, 2, 1, 1, 3, -1, 0.05274874177313201, ["test    rbx, rbx", "jz      loc_7B3A"], ["test~rbx,rbx", "jz~FOO"]], [0, 0, 32, 0, 1, 5, 0, 2, 2, -1, 0.01955090979481223, ["mov     [rsp+88h+name], separator", "call    xstrdup", "mov     r10, [rsp+88h+name]", "mov     rbx, rax", "jmp     loc_7A33"], ["mov~<TAG>,separator", "call~FOO", "mov~r10,<TAG>", "mov~rbx,rax", "jmp~FOO"]], [0, 0, 5, 0, 0, 1, 1, 0, 3, -1, 0.004548974061169183, ["xor     ebx, ebx"], ["xor~ebx,ebx"]], [1, 0, 19, 0, 0, 2, 0, 1, 2, -1, 0.017905536198219125, ["cmp     byte ptr [separator+1], 0", "jz      loc_7B38"], ["cmp~[yte ptr [separator+0],0", "jz~FOO"]], [0, 0, 4, 0, 2, 5, 0, 2, 8, -1, 0.0078397212543554, ["mov     [rsp+88h+gnum], eax", "call    _endgrent", "mov     rdi, [rsp+88h+name]; string", "call    xstrdup", "mov     r10, rax"], ["mov~[rsp+0],eax", "call~FOO", "mov~rdi,<TAG>", "call~FOO", "mov~r10,rax"]], [0, 0, 5, 0, 0, 1, 0, 1, 8, -1, 0.0023228803716608595, ["jmp     loc_79A7"], ["jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 4, -1, 0.013937282229965157, ["xor     r10d, r10d", "jmp     loc_79BC"], ["xor~r10d,r10d", "jmp~FOO"]], [0, 0, 29, 0, 0, 3, 1, 1, 4, -1, 0.017615176151761516, ["test    g, g", "setz    al", "jmp     loc_7A4E"], ["test~g,g", "setz~al", "jmp~FOO"]], [3, 0, 29, 0, 0, 3, 0, 0, 4, -1, 0.056136275648470776, ["mov     [rsp+88h+var_71], 0", "mov     eax, 1", "mov     [rsp+88h+name], 0"], ["mov~[rsp+0],0", "mov~eax,0", "mov~<TAG>,0"]], [1, 0, 16, 0, 1, 7, 1, 2, 7, -1, 0.0627177700348432, ["xor     r10d, r10d", "mov     [rsp+88h+var_71], 0", "lea     rbp, aInvalidSpec; \"invalid spec\"", "mov     [rsp+88h+var_70], r10", "call    _endpwent", "mov     r10, [rsp+88h+var_70]", "jmp     loc_797A"], ["xor~r10d,r10d", "mov~[rsp+0],0", "lea~rbp,<TAG>", "mov~[rsp+0],r10", "call~FOO", "mov~r10,[rsp+0]", "jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 6, -1, 0.011614401858304297, ["jmp     loc_79BC"], ["jmp~FOO"]], [2, 1, 42, 1, 0, 23, 2, 1, 0, 4, 0.0, ["push    r15", "push    r14", "mov     r10, separator", "push    r13", "push    r12", "mov     r13, gid", "push    rbp", "push    rbx", "mov     r12, uid", "mov     r14, username", "mov     r15, groupname", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "mov     eax, [uid]", "test    separator, separator", "mov     [rsp+88h+unum], eax", "mov     eax, [gid]", "mov     qword ptr [groupname], 0", "mov     qword ptr [username], 0", "mov     [rsp+88h+gnum], eax", "jz      loc_7AD0"], ["push~r15", "push~r14", "mov~r10,separator", "push~r13", "push~r12", "mov~r13,gid", "push~rbp", "push~rbx", "mov~r12,uid", "mov~r14,username", "mov~r15,groupname", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~eax,<TAG>", "test~separator,separator", "mov~[rsp+0],eax", "mov~eax,<TAG>", "mov~<TAG>,0", "mov~<TAG>,0", "mov~[rsp+0],eax", "jz~FOO"]], [0, 0, 18, 0, 1, 5, 0, 2, 9, -1, 0.008710801393728223, ["mov     edi, [rsp+88h+gnum]; i", "lea     rsi, [rsp+88h+buf]; buf", "call    umaxtostr", "mov     rdi, rax", "jmp     loc_7BA2"], ["mov~edi,[rsp+0]", "lea~rsi,[rsp+0]", "call~FOO", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 3, 0, 0, 8, 2, 0, 2, -1, 0.023519163763066203, ["mov     eax, [rsp+88h+unum]", "xor     ebp, ebp", "mov     [uid], eax", "mov     eax, [rsp+88h+gnum]", "mov     [gid+0], eax", "mov     [username], rbx", "xor     ebx, ebx", "mov     [groupname], r10"], ["mov~eax,[rsp+0]", "xor~ebp,ebp", "mov~<TAG>,eax", "mov~eax,[rsp+0]", "mov~[gid+0],eax", "mov~<TAG>,rbx", "xor~ebx,ebx", "mov~<TAG>,r10"]], [1, 0, 33, 0, 0, 3, 1, 1, 1, -1, 0.006194347657762292, ["xor     ebx, ebx", "cmp     byte ptr [spec], 0", "jz      loc_79BC"], ["xor~ebx,ebx", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 16, 0, 0, 3, 2, 1, 4, 0, 0.016260162601626015, ["xor     r10d, r10d", "xor     ebp, ebp", "jmp     loc_797A"], ["xor~r10d,r10d", "xor~ebp,ebp", "jmp~FOO"]], [1, 0, 16, 1, 0, 6, 3, 0, 3, -1, 0.020905923344947737, ["add     r10, 1", "setnz   [rsp+88h+var_71]", "mov     [rsp+88h+name], g", "xor     ebx, ebx", "xor     r10d, r10d", "xor     ebp, ebp"], ["add~r10,0", "setnz~[rsp+0]", "mov~<TAG>,g", "xor~ebx,ebx", "xor~r10d,r10d", "xor~ebp,ebp"]]], "func_feature": [21, 34, 53, 2, 43, 61, 2, 211, 0.03244, 5, 5], "succs": [[9, 10], [0, 15], [4, 5], [8, 2], [18, 19], [17, 4], [], [40, 6], [35, 22], [37, 14], [3], [10], [24], [24, 12], [11], [34, 13], [1, 15], [29], [22], [18, 30], [25, 23], [28, 20], [7], [32, 41], [3], [33, 31], [25], [31], [42, 27], [38], [29], [38], [16], [16], [3], [38], [21, 39], [11], [7], [26, 38], [], [3], [3]], "fname": "parse_with_separator", "n_num": 43}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[1, 0, 0, 1, 0, 9, 0, 0, 0, 0, 0.0, ["add     rsp, 18h", "mov     rax, rbp", "pop     spec", "pop     rbp", "pop     colon", "pop     gid", "pop     username", "pop     groupname", "retn"], ["add~rsp,0", "mov~rax,rbp", "pop~spec", "pop~rbp", "pop~colon", "pop~gid", "pop~username", "pop~groupname", "retn"]], [1, 1, 4, 1, 2, 26, 1, 3, 0, 0, 0.0, ["push    r15", "push    r14", "mov     r15, groupname", "push    r13", "push    r12", "mov     r13, gid", "push    rbp", "push    rbx", "mov     rbp, uid_0", "mov     r14, username", "mov     rbx, spec", "mov     esi, 3Ah ; ':'; c", "sub     rsp, 18h", "call    _strchr", "mov     rdx, uid_0; uid", "mov     r12, rax", "mov     r9, groupname; groupname", "mov     r8, username; username", "mov     rcx, gid; gid", "mov     rsi, colon; separator", "mov     rdi, spec; spec", "mov     [rsp+48h+uid], uid_0", "call    parse_with_separator", "test    colon, colon", "mov     uid_0, rax", "jnz     short loc_7D0A"], ["push~r15", "push~r14", "mov~r15,groupname", "push~r13", "push~r12", "mov~r13,gid", "push~rbp", "push~rbx", "mov~rbp,uid_0", "mov~r14,username", "mov~rbx,spec", "mov~esi,<STR>", "sub~rsp,0", "call~FOO", "mov~rdx,uid_0", "mov~r12,rax", "mov~r9,groupname", "mov~r8,username", "mov~rcx,gid", "mov~rsi,colon", "mov~rdi,spec", "mov~[rsp+0],uid_0", "call~FOO", "test~colon,colon", "mov~uid_0,rax", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 0, 0.16666666666666666, ["test    error_msg, error_msg", "jz      short loc_7D0A"], ["test~error_msg,error_msg", "jz~FOO"]], [1, 0, 2, 0, 1, 5, 1, 2, 2, 0, 0.16666666666666666, ["mov     esi, 2Eh ; '.'; c", "mov     rdi, spec; s", "call    _strchr", "test    dot, dot", "jz      short loc_7D0A"], ["mov~esi,0", "mov~rdi,spec", "call~FOO", "test~dot,dot", "jz~FOO"]], [1, 0, 1, 0, 1, 10, 1, 1, 3, 0, 0.0, ["mov     rdx, [rsp+48h+uid]; uid", "mov     r9, groupname; groupname", "mov     r8, username; username", "mov     rcx, gid; gid", "mov     rsi, dot; separator", "mov     rdi, spec; spec", "call    parse_with_separator", "test    rax, rax", "mov     eax, 0", "cmovz   error_msg, rax"], ["mov~rdx,[rsp+0]", "mov~r9,groupname", "mov~r8,username", "mov~rcx,gid", "mov~rsi,dot", "mov~rdi,spec", "call~FOO", "test~rax,rax", "mov~eax,0", "cmovz~error_msg,rax"]]], "func_feature": [4, 4, 7, 0, 5, 7, 2, 52, 0.06667, 0, 2], "succs": [[], [0, 2], [0, 3], [0, 4], [0]], "fname": "parse_user_spec", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 3, 0, 2, 7, 0, 3, 0, 0, 0.0, ["call    ___errno_location", "mov     r13d, [rax]", "mov     r12, rax", "mov     rdi, output; ptr", "call    free", "mov     [r12], r13d", "jmp     short loc_7D95"], ["call~FOO", "mov~r13d,<TAG>", "mov~r12,rax", "mov~rdi,output", "call~FOO", "mov~<TAG>,r13d", "jmp~FOO"]], [1, 0, 4, 0, 0, 3, 0, 1, 2, 2, 0.048611111111111105, ["cmp     output, r12", "mov     ebx, 0FFFFFFFFh", "jz      short loc_7D95"], ["cmp~output,r12", "mov~ebx,0", "jz~FOO"]], [1, 0, 4, 0, 1, 2, 0, 1, 3, 3, 0.027777777777777776, ["call    ___errno_location", "mov     dword ptr [rax], 4Bh ; 'K'"], ["call~FOO", "mov~<TAG>,0"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 2, 0.0625, ["cmp     len, 7FFFFFFFh", "ja      short loc_7DE3"], ["cmp~len,0", "ja~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.19444444444444442, ["mov     rcx, [rsp+818h+var_30]", "xor     rcx, fs:28h", "mov     eax, ebx", "jnz     short loc_7DFD"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [1, 0, 3, 0, 1, 4, 0, 2, 1, 2, 0.08333333333333333, ["mov     rdi, fp; fp", "mov     ebx, 0FFFFFFFFh", "call    fseterr", "jmp     short loc_7D95"], ["mov~rdi,fp", "mov~ebx,0", "call~FOO", "jmp~FOO"]], [1, 0, 8, 0, 1, 8, 0, 1, 1, 3, 0.05555555555555555, ["mov     rcx, fp; s", "mov     rdx, len; n", "mov     esi, 1; size", "mov     rdi, output; ptr", "mov     rbp, output", "call    _fwrite", "cmp     rax, len", "jb      short loc_7DC0"], ["mov~rcx,fp", "mov~rdx,len", "mov~esi,0", "mov~rdi,output", "mov~rbp,output", "call~FOO", "cmp~rax,len", "jb~FOO"]], [2, 0, 9, 1, 1, 20, 2, 2, 0, 3, 0.0, ["push    r13", "push    r12", "mov     rax, format", "push    rbp", "push    rbx", "mov     r13, fp", "sub     rsp, 7F8h", "lea     r12, [rsp+818h+buf]", "lea     format, [rsp+818h+lenbuf]; lengthp", "mov     [rsp+818h+lenbuf], 7D0h", "mov     rcx, fs:28h", "mov     [rsp+818h+var_30], rcx", "xor     ecx, ecx", "mov     fp, r12; resultbuf", "mov     rcx, args; args", "mov     args, format; format", "call    vasnprintf", "test    output, output", "mov     rbx, [rsp+818h+lenbuf]", "jz      short loc_7DEE"], ["push~r13", "push~r12", "mov~rax,format", "push~rbp", "push~rbx", "mov~r13,fp", "sub~rsp,0", "lea~r12,[rsp+0]", "lea~format,[rsp+0]", "mov~[rsp+0],0", "mov~rcx,<TAG>", "mov~[rsp+0],rcx", "xor~ecx,ecx", "mov~fp,r12", "mov~rcx,args", "mov~args,format", "call~FOO", "test~output,output", "mov~rbx,[rsp+0]", "jz~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 7F8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [7, 3, 13, 1, 10, 13, 1, 57, 0.04722, 1, 2], "succs": [[4], [0, 4], [5], [2, 4], [8, 9], [4], [1, 3], [5, 6], [], []], "fname": "rpl_vfprintf", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_7E25"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    _malloc", "test    p, p", "jnz     short loc_7E23"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 4, 7, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "xmalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    _realloc", "test    p, p", "jnz     short loc_7E43"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, 1, 0.16666666666666666, ["test    n, n", "jnz     short loc_7E45"], ["test~n,n", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 4, 0, 4, 4, 4, 10, 0.04167, 0, 0], "succs": [[], [0, 2], [0, 3], []], "fname": "xrealloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[1, 0, 3, 0, 0, 3, 0, 1, 0, 0, 0.1, ["mov     rdx, 0AAAAAAAAAAAAAAA9h", "cmp     rax, rdx", "ja      short loc_7E94"], ["mov~rdx,0", "cmp~rax,rdx", "ja~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 0, 2, 0.0, ["test    p, p", "mov     rax, [pn]", "jz      short loc_7E80"], ["test~p,p", "mov~rax,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [1, 0, 1, 1, 0, 6, 0, 1, 2, -1, 0.05, ["lea     rdx, [rax+1]", "shr     rdx, 1", "add     rax, rdx", "mov     [pn], rax", "mov     pn, rax; n", "jmp     short xrealloc"], ["lea~rdx,[rax+0]", "shr~rdx,0", "add~rax,rdx", "mov~<TAG>,rax", "mov~pn,rax", "jmp~FOO"]], [1, 0, 1, 0, 0, 6, 1, 1, 1, -1, 0.05, ["test    rax, rax", "mov     edx, 40h ; '@'", "cmovz   rax, rdx", "mov     [pn], rax", "mov     pn, rax; n", "jmp     short xrealloc"], ["test~rax,rax", "mov~edx,0", "cmovz~rax,rdx", "mov~<TAG>,rax", "mov~pn,rax", "jmp~FOO"]], [1, 0, 0, 1, 1, 2, 0, 1, 2, 0, 0.0, ["sub     rsp, 8", "call    xalloc_die"], ["sub~rsp,0", "call~FOO"]]], "func_feature": [1, 2, 5, 0, 6, 6, 0, 20, 0.03333, 0, 2], "succs": [[3, 5], [0, 4], [], [2], [2], []], "fname": "x2realloc", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 1, 0, 1, 8, 1, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, s", "call    xmalloc", "mov     rdx, s; n", "xor     esi, esi; c", "mov     rdi, rax; s", "pop     s", "jmp     _memset"], ["push~rbx", "mov~rbx,s", "call~FOO", "mov~rdx,s", "xor~esi,esi", "mov~rdi,rax", "pop~s", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 1, 2, 0, 2, 1, 0, 8, 0.0, 0, 0], "succs": [[1], []], "fname": "xzalloc", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 4, 1, 2, 0, 1, 0.0, ["sub     rsp, 8", "call    _calloc", "test    p, p", "jz      short loc_7ED3"], ["sub~rsp,0", "call~FOO", "test~p,p", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 1, 3, 0, 3, 2, 0, 7, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "xcalloc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [2, 0, 1, 2, 1, 14, 0, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, p", "mov     p, s; n", "mov     rbx, s", "sub     rsp, 8", "call    xmalloc", "add     rsp, 8", "mov     rdx, s; n", "mov     rsi, p; src", "pop     s", "pop     p", "mov     rdi, rax; dest", "jmp     _memcpy"], ["push~rbp", "push~rbx", "mov~rbp,p", "mov~p,s", "mov~rbx,s", "sub~rsp,0", "call~FOO", "add~rsp,0", "mov~rdx,s", "mov~rsi,p", "pop~s", "pop~p", "mov~rdi,rax", "jmp~FOO"]]], "func_feature": [1, 0, 2, 0, 2, 1, 3, 14, 0.0, 0, 2], "succs": [[], [0]], "fname": "xmemdup", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 1, 7, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, string", "call    _strlen", "mov     rdi, string; p", "lea     rsi, [rax+1]; s", "pop     string", "jmp     short xmemdup"], ["push~rbx", "mov~rbx,string", "call~FOO", "mov~rdi,string", "lea~rsi,[rax+0]", "pop~string", "jmp~FOO"]]], "func_feature": [1, 0, 2, 0, 2, 1, 6, 7, 0.0, 0, 0], "succs": [[], [0]], "fname": "xstrdup", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 75, 0, 1, 13, 1, 2, 0, 0, 0.01281613123718387, ["lea     rax, [rsp+58h+t_ptr]", "mov     r12, s", "mov     rbp, ptr", "test    ptr, ptr", "mov     r14, val", "mov     r15d, edx", "mov     r13, valid_suffixes", "cmovz   rbp, rax", "movzx   ebx, byte ptr [q]", "call    ___ctype_b_loc", "mov     rcx, [rax]", "mov     rax, q", "jmp     short loc_7F8F"], ["lea~rax,[rsp+0]", "mov~r12,s", "mov~rbp,ptr", "test~ptr,ptr", "mov~r14,val", "mov~r15d,edx", "mov~r13,valid_suffixes", "cmovz~rbp,rax", "movzx~ebx,<TAG>", "call~FOO", "mov~rcx,<TAG>", "mov~rax,q", "jmp~FOO"]], [2, 0, 77, 1, 0, 12, 1, 1, 0, 14, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "cmp     edx, 24h ; '$'", "ja      loc_8281"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edx,0", "ja~FOO"]], [0, 0, 64, 0, 0, 3, 1, 1, 5, 9, 0.06197311460469356, ["test    valid_suffixes, valid_suffixes", "mov     [rsp+58h+var_50], r8", "jnz     short loc_8040"], ["test~valid_suffixes,valid_suffixes", "mov~[rsp+0],r8", "jnz~FOO"]], [1, 0, 71, 0, 2, 12, 0, 3, 4, 10, 0.05724538619275462, ["call    ___errno_location", "mov     edx, r15d; base", "mov     dword ptr [rax], 0", "mov     rsi, p; endptr", "mov     rdi, s; nptr", "mov     [rsp+58h+var_50], rax", "call    _strtoul", "mov     r8, [p+0]", "mov     ch_0, rax", "mov     rcx, [rsp+58h+var_50]", "cmp     r8, s", "jz      short loc_7FF8"], ["call~FOO", "mov~edx,r15d", "mov~<TAG>,0", "mov~rsi,p", "mov~rdi,s", "mov~[rsp+0],rax", "call~FOO", "mov~r8,[p+0]", "mov~ch_0,rax", "mov~rcx,[rsp+0]", "cmp~r8,s", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 6, -1, 0.0005696058327637275, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [2, 0, 3, 1, 0, 9, 1, 1, 13, -1, 0.02332535885167464, ["movsxd  suffixes, esi; jumptable 00000000000080EE case 33", "mov     eax, r12d", "add     r8, suffixes", "or      eax, 2", "mov     [p+0], r8", "cmp     byte ptr [r8], 0", "mov     [val], tmp", "cmovnz  r12d, eax", "jmp     loc_800E"], ["movsxd~suffixes,esi", "mov~eax,r12d", "add~r8,suffixes", "or~eax,0", "mov~[p+0],r8", "cmp~<TAG>,0", "mov~<TAG>,tmp", "cmovnz~r12d,eax", "jmp~FOO"]], [0, 0, 50, 1, 0, 5, 0, 1, 12, 2, 0.18079289131920712, ["lea     rdx, off_BFE0", "movzx   r15d, r15b", "movsxd  rax, dword ptr [rdx+r15*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movzx~r15d,r15b", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [0, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.0003417634996582365, ["add     tmp, tmp", "jmp     short loc_8110; jumptable 00000000000080EE case 33"], ["add~tmp,tmp", "jmp~FOO"]], [1, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.0003417634996582365, ["shl     tmp, 9", "jmp     short loc_8110; jumptable 00000000000080EE case 33"], ["shl~tmp,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 16, -1, 0.016404647983595352, ["or      r12d, r9d", "jmp     loc_8110; jumptable 00000000000080EE case 33"], ["or~r12d,r9d", "jmp~FOO"]], [0, 0, 5, 1, 0, 4, 0, 0, 13, -1, 0.0010252904989747095, ["mov     rax, tmp; jumptable 00000000000080EE cases 9,41", "mul     rcx", "mov     tmp, rax", "jno     loc_8110; jumptable 00000000000080EE case 33"], ["mov~rax,tmp", "mul~,rcx", "mov~tmp,rax", "jno~FOO"]], [2, 0, 4, 0, 0, 3, 1, 1, 14, -1, 0.0010252904989747095, ["mov     r12d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_8110; jumptable 00000000000080EE case 33"], ["mov~r12d,0", "or~rbx,0", "jmp~FOO"]], [1, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.0003417634996582365, ["shl     tmp, 0Ah", "jmp     loc_8110; jumptable 00000000000080EE case 33"], ["shl~tmp,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 0, 17, -1, 0.0075187969924812035, ["or      r12d, edi", "nop     dword ptr [rax]"], ["or~r12d,edi", "nop~<TAG>"]], [2, 0, 8, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_8197"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 8, 1, 0, 4, 0, 0, 14, -1, 0.013670539986329461, ["mov     rax, tmp", "mul     rcx", "mov     tmp, rax", "jo      loc_82FA"], ["mov~rax,tmp", "mul~,rcx", "mov~tmp,rax", "jo~FOO"]], [0, 0, 59, 0, 1, 7, 1, 2, 8, 6, 0.1339712918660287, ["movsx   esi, r15b; c", "mov     rdi, valid_suffixes; s", "mov     [rsp+58h+var_50], r8", "call    _strchr", "test    rax, rax", "mov     r8, [rsp+58h+var_50]", "jz      loc_8130; jumptable 00000000000080EE default case"], ["movsx~esi,r15b", "mov~rdi,valid_suffixes", "mov~[rsp+0],r8", "call~FOO", "test~rax,rax", "mov~r8,[rsp+0]", "jz~FOO"]], [0, 0, 61, 0, 0, 3, 1, 1, 8, 7, 0.03896103896103897, ["movzx   r15d, byte ptr [r8]", "test    r15b, r15b", "jnz     short loc_8068"], ["movzx~r15d,<TAG>", "test~r15b,r15b", "jnz~FOO"]], [1, 0, 61, 0, 1, 8, 2, 2, 7, 7, 0.07792207792207793, ["movsx   esi, r15b; c", "mov     rdi, valid_suffixes; s", "xor     r12d, r12d", "call    _strchr", "test    rax, rax", "mov     ebx, 1", "mov     r8, [rsp+58h+var_50]", "jz      short loc_8008"], ["movsx~esi,r15b", "mov~rdi,valid_suffixes", "xor~r12d,r12d", "call~FOO", "test~rax,rax", "mov~ebx,0", "mov~r8,[rsp+0]", "jz~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 4, -1, 0.006151742993848257, ["mov     r12d, 4"], ["mov~r12d,0"]], [1, 0, 72, 0, 0, 2, 0, 1, 3, 11, 0.04921394395078606, ["cmp     bl, 2Dh ; '-'", "jz      short loc_8008"], ["cmp~bl,0", "jz~FOO"]], [2, 0, 64, 0, 0, 3, 0, 1, 6, 9, 0.007575757575757575, ["cmp     eax, 22h ; '\"'", "mov     r12d, 1", "jnz     short loc_8008"], ["cmp~eax,0", "mov~r12d,0", "jnz~FOO"]], [0, 0, 62, 0, 0, 3, 1, 1, 6, 8, 0.06994759626338574, ["movzx   r15d, byte ptr [s]", "test    r15b, r15b", "jz      short loc_8008"], ["movzx~r15d,<TAG>", "test~r15b,r15b", "jz~FOO"]], [1, 0, 9, 0, 0, 3, 1, 0, 13, -1, 0.016404647983595352, ["mov     edi, 8; jumptable 00000000000080EE case 23", "xor     r9d, r9d", "nop     dword ptr [rax+00h]"], ["mov~edi,0", "xor~r9d,r9d", "nop~[word ptr [rax+0]"]], [0, 0, 12, 1, 0, 3, 0, 0, 13, 1, 0.016404647983595352, ["mov     rax, tmp; jumptable 00000000000080EE cases 5,37", "mul     rcx", "jo      loc_8309"], ["mov~rax,tmp", "mul~,rcx", "jo~FOO"]], [0, 1, 6, 1, 0, 4, 0, 0, 13, -1, 0.005126452494873548, ["mov     edx, 400h; jumptable 00000000000080EE case 0", "mov     rax, rdx", "mul     tmp", "jo      short loc_81F3"], ["mov~edx,<STR>", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]], [1, 0, 75, 1, 0, 2, 0, 0, 3, 13, 0.0, ["add     q, 1", "movzx   ebx, byte ptr [q]"], ["add~q,0", "movzx~ebx,<TAG>"]], [0, 1, 75, 0, 0, 3, 1, 1, 2, 12, 0.03776486671223513, ["movzx   edx, bl", "test    byte ptr [rcx+rdx*2+1], 20h", "jnz     short loc_7F88"], ["movzx~edx,bl", "test~[yte ptr [rcx+0],<STR>", "jnz~FOO"]], [2, 0, 5, 0, 0, 3, 1, 1, 16, -1, 0.00589542036910458, ["mov     edi, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_810A"], ["mov~edi,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 16, -1, 0.00589542036910458, ["mov     rbx, rax"], ["mov~rbx,rax"]], [0, 0, 9, 1, 0, 2, 0, 0, 15, -1, 0.008714969241285031, ["mul     rcx", "jno     loc_80FE"], ["mul~,rcx", "jno~FOO"]], [2, 0, 10, 0, 0, 3, 1, 1, 14, 0, 0.004955570745044429, ["mov     edi, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_826A"], ["mov~edi,0", "or~rax,0", "jmp~FOO"]], [0, 0, 10, 0, 0, 1, 1, 0, 14, -1, 0.004955570745044429, ["xor     edi, edi"], ["xor~edi,edi"]], [1, 0, 8, 1, 0, 2, 0, 1, 15, -1, 0.006835269993164731, ["sub     edi, 1", "jnz     short loc_8188"], ["sub~edi,0", "jnz~FOO"]], [1, 0, 8, 0, 0, 3, 1, 0, 13, -1, 0.016404647983595352, ["mov     edi, 7; jumptable 00000000000080EE case 24", "xor     r9d, r9d", "nop     dword ptr [rax+rax+00h]"], ["mov~edi,0", "xor~r9d,r9d", "nop~[word ptr [rax+0]"]], [1, 0, 9, 0, 0, 2, 1, 0, 13, -1, 0.016404647983595352, ["mov     edi, 6; jumptable 00000000000080EE case 3", "xor     r9d, r9d"], ["mov~edi,0", "xor~r9d,r9d"]], [0, 0, 9, 1, 0, 4, 0, 0, 14, -1, 0.01384142173615858, ["mov     rax, tmp", "mul     rcx", "mov     tmp, rax", "jo      loc_82EB"], ["mov~rax,tmp", "mul~,rcx", "mov~tmp,rax", "jo~FOO"]], [1, 0, 9, 1, 0, 2, 0, 1, 15, -1, 0.007347915242652085, ["sub     edi, 1", "jnz     short loc_8210"], ["sub~edi,0", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 1, 0, 13, -1, 0.016404647983595352, ["mov     edi, 5; jumptable 00000000000080EE case 14", "xor     r9d, r9d"], ["mov~edi,0", "xor~r9d,r9d"]], [1, 0, 0, 0, 1, 5, 0, 1, 1, -1, 0.0, ["lea     val, __PRETTY_FUNCTION___4894; \"xstrtoul\"", "lea     ptr, file; \"xstrtol.c\"", "lea     s, assertion; \"0 <= strtol_base && strtol_base <= 36\"", "mov     edx, 53h ; 'S'; line", "call    ___assert_fail"], ["lea~val,<TAG>", "lea~ptr,<TAG>", "lea~s,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, -1, 0.025290498974709502, ["mov     rdi, [rsp+58h+var_40]", "xor     rdi, fs:28h", "mov     eax, r12d", "jnz     loc_82A0"], ["mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "mov~eax,r12d", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 8, -1, 0.0015379357484620643, ["mov     [val], tmp", "jmp     short loc_800E"], ["mov~<TAG>,tmp", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 9, -1, 0.004870129870129871, ["mov     [val], tmp; jumptable 00000000000080EE default case", "or      r12d, 2", "jmp     loc_800E"], ["mov~<TAG>,tmp", "or~r12d,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 58, 0, 1, 7, 1, 2, 9, 5, 0.1384142173615858, ["mov     esi, 30h ; '0'; c", "mov     rdi, valid_suffixes; s", "mov     [rsp+58h+var_50], r8", "call    _strchr", "test    rax, rax", "mov     r8, [rsp+58h+var_50]", "jz      short loc_80C8"], ["mov~esi,0", "mov~rdi,valid_suffixes", "mov~[rsp+0],r8", "call~FOO", "test~rax,rax", "mov~r8,[rsp+0]", "jz~FOO"]], [2, 0, 9, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_821F"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 16, -1, 0.0034176349965823654, ["jmp     loc_819C"], ["jmp~FOO"]], [1, 0, 57, 0, 0, 3, 0, 1, 10, 5, 0.010936431989063569, ["movzx   eax, byte ptr [r8+1]", "cmp     al, 44h ; 'D'", "jz      short loc_80B8"], ["movzx~eax,[yte ptr [r8+0]", "cmp~al,0", "jz~FOO"]], [0, 0, 7, 1, 0, 2, 0, 0, 15, -1, 0.021872863978127138, ["mul     rcx", "jo      loc_82C0"], ["mul~,rcx", "jo~FOO"]], [2, 0, 8, 0, 0, 3, 1, 1, 16, -1, 0.0, ["mov     edi, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_80FE"], ["mov~edi,0", "or~rax,0", "jmp~FOO"]], [2, 0, 8, 0, 0, 3, 1, 1, 14, -1, 0.00888585099111415, ["or      rax, 0FFFFFFFFFFFFFFFFh", "mov     edi, 1", "jmp     loc_80FE"], ["or~rax,0", "mov~edi,0", "jmp~FOO"]], [0, 0, 8, 0, 0, 1, 1, 0, 14, -1, 0.00888585099111415, ["xor     edi, edi"], ["xor~edi,edi"]], [1, 0, 56, 0, 0, 2, 0, 1, 11, 5, 0.00598086124401914, ["cmp     al, 69h ; 'i'", "jz      loc_813C"], ["cmp~al,0", "jz~FOO"]], [2, 0, 9, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     short loc_823C"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 9, 1, 0, 4, 0, 0, 14, -1, 0.01384142173615858, ["mov     rax, tmp", "mul     rcx", "mov     tmp, rax", "jo      short loc_82A5"], ["mov~rax,tmp", "mul~,rcx", "mov~tmp,rax", "jo~FOO"]], [1, 0, 9, 1, 0, 2, 0, 1, 15, -1, 0.007347915242652085, ["sub     edi, 1", "jnz     short loc_81B0"], ["sub~edi,0", "jnz~FOO"]], [2, 0, 9, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_81BF"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 9, 1, 0, 4, 0, 0, 14, -1, 0.01384142173615858, ["mov     rax, tmp", "mul     rcx", "mov     tmp, rax", "jo      loc_82DC"], ["mov~rax,tmp", "mul~,rcx", "mov~tmp,rax", "jo~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 28h", "pop     rbx", "pop     p", "pop     r12", "pop     valid_suffixes", "pop     val", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~p", "pop~r12", "pop~valid_suffixes", "pop~val", "pop~r15", "retn"]], [0, 0, 5, 0, 0, 1, 0, 1, 16, -1, 0.0034176349965823654, ["jmp     short loc_819C"], ["jmp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 16, -1, 0.0034176349965823654, ["jmp     short loc_819C"], ["jmp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 16, -1, 0.0034176349965823654, ["jmp     loc_819C"], ["jmp~FOO"]], [1, 0, 54, 0, 0, 2, 0, 1, 12, 5, 0.0005126452494873548, ["cmp     al, 42h ; 'B'", "jnz     short loc_80C8"], ["cmp~al,0", "jnz~FOO"]], [2, 0, 51, 1, 0, 3, 0, 1, 11, 3, 0.1814764183185236, ["sub     r15d, 42h ; 'B'", "cmp     r15b, 35h ; '5'; switch 54 cases", "ja      short loc_8130; jumptable 00000000000080EE default case"], ["sub~r15d,0", "cmp~r15b,0", "ja~FOO"]], [1, 0, 9, 1, 0, 2, 0, 1, 15, -1, 0.007347915242652085, ["sub     edi, 1", "jnz     short loc_8231"], ["sub~edi,0", "jnz~FOO"]], [0, 0, 63, 0, 0, 2, 1, 1, 6, 9, 0.006664388243335612, ["xor     r12d, r12d", "jmp     short loc_7FDE"], ["xor~r12d,r12d", "jmp~FOO"]], [0, 0, 66, 0, 0, 3, 1, 1, 5, 10, 0.0053542948279790385, ["mov     eax, [rcx]", "test    eax, eax", "jz      short loc_8038"], ["mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [2, 0, 52, 0, 0, 3, 0, 1, 11, 4, 0.013328776486671225, ["mov     esi, 2", "mov     ecx, 3E8h", "jmp     short loc_80D2"], ["mov~esi,0", "mov~ecx,0", "jmp~FOO"]], [1, 0, 9, 0, 0, 2, 1, 0, 13, -1, 0.016404647983595352, ["mov     edi, 4; jumptable 00000000000080EE cases 18,50", "xor     r9d, r9d"], ["mov~edi,0", "xor~r9d,r9d"]], [1, 1, 52, 0, 0, 2, 0, 0, 10, 4, 0.13636363636363638, ["mov     esi, 1", "mov     ecx, 400h"], ["mov~esi,0", "mov~ecx,<STR>"]], [0, 0, 10, 1, 0, 3, 0, 0, 13, -1, 0.02460697197539303, ["mov     rax, tmp; jumptable 00000000000080EE cases 11,43", "mul     rcx", "jo      loc_82CE"], ["mov~rax,tmp", "mul~,rcx", "jo~FOO"]], [1, 1, 52, 0, 0, 6, 1, 1, 12, 4, 0.00888585099111415, ["xor     esi, esi", "cmp     byte ptr [r8+2], 42h ; 'B'", "mov     ecx, 400h", "setz    sil", "lea     esi, [rsi+rsi+1]", "jmp     short loc_80D2"], ["xor~esi,esi", "cmp~[yte ptr [r8+0],0", "mov~ecx,<STR>", "setz~sil", "lea~esi,[rsi+0]", "jmp~FOO"]], [0, 0, 9, 1, 0, 4, 0, 0, 14, -1, 0.01384142173615858, ["mov     rax, tmp", "mul     rcx", "mov     tmp, rax", "jo      loc_82B1"], ["mov~rax,tmp", "mul~,rcx", "mov~tmp,rax", "jo~FOO"]], [1, 0, 9, 1, 0, 2, 0, 1, 15, -1, 0.007347915242652085, ["sub     edi, 1", "jnz     short loc_81CE"], ["sub~edi,0", "jnz~FOO"]], [1, 0, 6, 1, 0, 4, 0, 0, 13, -1, 0.005126452494873548, ["mov     edx, 2; jumptable 00000000000080EE case 53", "mov     rax, rdx", "mul     tmp", "jo      loc_81F3"], ["mov~edx,0", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]], [2, 0, 9, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_81DD"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 62, 0, 0, 2, 1, 1, 7, 8, 0.032809295967190705, ["test    valid_suffixes, valid_suffixes", "jz      short loc_7FEC"], ["test~valid_suffixes,valid_suffixes", "jz~FOO"]], [0, 1, 6, 1, 0, 4, 0, 0, 13, -1, 0.005126452494873548, ["mov     edx, 200h; jumptable 00000000000080EE case 32", "mov     rax, rdx", "mul     tmp", "jo      short loc_81F3"], ["mov~edx,<STR>", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]]], "func_feature": [8, 36, 57, 2, 78, 123, 2, 260, 0.0216, 5, 27], "succs": [[27], [0, 39], [4, 22], [2, 66], [19], [40], [34, 35, 68, 5, 38, 42, 77, 10, 23, 24, 25, 70, 74], [5], [5], [5], [11, 5], [5], [5], [5], [33], [33, 14], [42, 44], [16, 41], [16, 19], [40], [3, 19], [19, 76], [18, 19], [57], [32, 31], [11, 12], [27], [26, 20], [13], [13], [48, 49], [30], [30], [9, 15], [15], [54], [37, 45], [36, 46], [36], [], [58, 43], [40], [40], [], [69, 47], [37], [9], [67, 52], [28, 29], [48], [48], [48], [62, 71], [64], [64, 53], [57, 59], [55], [56, 55], [], [9], [9], [9], [67, 69], [42, 6], [61, 54], [76], [65, 21], [63], [72], [63], [50, 51], [63], [73, 75], [72, 60], [11, 7], [73], [17, 41], [8, 11]], "fname": "xstrtoul", "n_num": 78}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[1, 0, 0, 1, 0, 5, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "mov     fts, rbp", "pop     argv", "pop     rbp", "retn"], ["add~rsp,0", "mov~fts,rbp", "pop~argv", "pop~rbp", "retn"]], [1, 1, 7, 1, 1, 9, 2, 2, 0, 2, 0.0, ["push    rbp", "push    rbx", "or      esi, 200h; options", "mov     rbx, argv", "sub     rsp, 8", "call    fts_open", "test    rax, rax", "mov     rbp, rax", "jz      short loc_8350"], ["push~rbp", "push~rbx", "or~esi,<STR>", "mov~rbx,argv", "sub~rsp,0", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [2, 0, 4, 1, 0, 6, 1, 1, 3, 2, 0.16666666666666666, ["cmp     byte ptr [rax], 0", "cmovz   edx, ecx", "add     argv, 8", "mov     rax, [argv]", "test    rax, rax", "jnz     short loc_8360"], ["cmp~<TAG>,0", "cmovz~edx,ecx", "add~argv,0", "mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [1, 0, 4, 0, 0, 3, 1, 0, 2, 3, 0.14285714285714285, ["xor     edx, edx", "mov     ecx, 1", "nop"], ["xor~edx,edx", "mov~ecx,0", "nop"]], [0, 0, 2, 0, 0, 2, 1, 1, 4, 1, 0.14285714285714285, ["test    dl, dl", "jz      short loc_83B6"], ["test~dl,dl", "jz~FOO"]], [3, 0, 0, 1, 3, 18, 3, 3, 5, -1, 0.0, ["lea     rdi, aReportBugsToS+16h; name", "call    quote", "lea     rsi, aInvalidArgumen; \"invalid argument: %s\"", "mov     argv, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     eax, eax", "mov     edi, 1; status", "call    _error", "add     rsp, 8", "mov     rax, fts", "pop     rbx", "pop     fts", "retn"], ["lea~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~argv,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~eax,eax", "mov~edi,0", "call~FOO", "add~rsp,0", "mov~rax,fts", "pop~rbx", "pop~fts", "retn"]], [0, 0, 5, 0, 0, 3, 1, 1, 1, 1, 0.11904761904761904, ["mov     fts, [argv]", "test    rax, rax", "jz      short loc_83B6"], ["mov~fts,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [5, 9, 9, 0, 8, 9, 1, 47, 0.07143, 2, 4], "succs": [[], [0, 6], [2, 4], [2], [5, 7], [], [3, 7], []], "fname": "xfts_open", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 0.0, ["or      dword ptr [fp], 20h", "retn"], ["or~<TAG>,<STR>", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 1, 2, 0.0, 0, 0], "succs": [[]], "fname": "fseterr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[2, 0, 0, 1, 3, 12, 3, 3, 0, 0, 0.0, ["lea     rsi, aMemoryExhauste; \"memory exhausted\"", "sub     rsp, 8", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     edi, cs:exit_failure; status", "lea     rdx, format+4; format", "mov     rcx, rax", "xor     esi, esi; errnum", "xor     eax, eax", "call    _error", "call    _abort"], ["lea~rsi,<TAG>", "sub~rsp,0", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~edi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "xor~esi,esi", "xor~eax,eax", "call~FOO", "call~FOO"]]], "func_feature": [3, 3, 3, 0, 1, 0, 5, 12, 0.0, 3, 1], "succs": [[]], "fname": "xalloc_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[2, 0, 0, 0, 1, 7, 0, 1, 0, 0, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 0", "mov     eax, 0FFFFFFFFh", "pop     rbx", "pop     stream", "pop     r12", "retn"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "pop~rbx", "pop~stream", "pop~r12", "retn"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, -1, 0.047619047619047616, ["test    eax, eax", "jnz     short loc_8468"], ["test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["pop     rbx", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "pop~stream", "pop~r12", "retn"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 2, 0.07142857142857142, ["test    eax, eax", "jz      short loc_843F"], ["test~eax,eax", "jz~FOO"]], [1, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.047619047619047616, ["test    r12, r12", "mov     eax, 0FFFFFFFFh", "jz      short loc_8478"], ["test~r12,r12", "mov~eax,0", "jz~FOO"]], [0, 1, 7, 0, 2, 12, 2, 3, 0, 3, 0.0, ["push    r12", "push    rbp", "mov     rbp, stream", "push    rbx", "call    ___fpending", "mov     ebx, [stream+0]", "mov     rdi, stream; stream", "mov     r12, rax", "call    _fclose", "and     ebx, 20h", "test    ebx, ebx", "jnz     short loc_8448"], ["push~r12", "push~rbp", "mov~rbp,stream", "push~rbx", "call~FOO", "mov~ebx,[stream+0]", "mov~rdi,stream", "mov~r12,rax", "call~FOO", "and~ebx,<STR>", "test~ebx,ebx", "jnz~FOO"]], [1, 0, 0, 0, 1, 9, 0, 1, 3, 0, 0.0, ["call    ___errno_location", "cmp     dword ptr [rax], 9", "pop     rbx", "pop     stream", "pop     r12", "setnz   al", "movzx   eax, al", "neg     eax", "retn"], ["call~FOO", "cmp~<TAG>,0", "pop~rbx", "pop~stream", "pop~r12", "setnz~al", "movzx~eax,al", "neg~eax", "retn"]], [1, 0, 0, 0, 0, 5, 0, 0, 2, -1, 0.0, ["pop     rbx", "mov     eax, 0FFFFFFFFh", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "mov~eax,0", "pop~stream", "pop~r12", "retn"]]], "func_feature": [4, 5, 8, 0, 8, 8, 2, 44, 0.02083, 0, 0], "succs": [[], [0, 7], [], [2, 4], [2, 6], [1, 3], [], []], "fname": "close_stream", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[2, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     qword ptr [state+10h], 0", "mov     dword ptr [state+18h], 95F616h", "retn"], ["mov~[word ptr [state+0],0", "mov~[word ptr [state+0],0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 3, 0.0, 0, 0], "succs": [[]], "fname": "cycle_check_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 3, 0, 0, 2, 1, 1, 0, 0, 0.08181818181818182, ["test    r8, r8", "jz      short loc_84F1"], ["test~r8,r8", "jz~FOO"]], [0, 0, 5, 0, 0, 5, 2, 1, 3, -1, 0.12727272727272726, ["lea     r8, [rdx+1]", "xor     eax, eax", "test    rdx, r8", "mov     [state+10h], r8", "jz      short loc_8500"], ["lea~r8,[rdx+0]", "xor~eax,eax", "test~rdx,r8", "mov~[state+0],r8", "jz~FOO"]], [0, 0, 0, 0, 0, 5, 1, 0, 3, -1, 0.0, ["mov     rax, [sb]", "mov     [state], rcx", "mov     [state+8], rax", "xor     eax, eax", "retn"], ["mov~rax,<TAG>", "mov~<TAG>,rcx", "mov~[state+0],rax", "xor~eax,eax", "retn"]], [0, 0, 1, 0, 0, 1, 0, 1, 5, -1, 0.03636363636363636, ["jmp     short loc_84D8"], ["jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, -1, 0.01818181818181818, ["mov     qword ptr [state+10h], 1"], ["mov~[word ptr [state+0],0"]], [1, 0, 11, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     dword ptr [state+18h], 95F616h", "jnz     short loc_8507"], ["cmp~[word ptr [state+0],0", "jnz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 3, -1, 0.02727272727272727, ["mov     rax, [state+8]", "cmp     [sb], rax", "jnz     short loc_84BB"], ["mov~rax,[state+0]", "cmp~<TAG>,rax", "jnz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 2, -1, 0.10909090909090909, ["cmp     [state], rcx", "jz      short loc_84E8"], ["cmp~<TAG>,rcx", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 9, 0, 0, 4, 1, 1, 1, -1, 0.08181818181818182, ["mov     rdx, [state+10h]", "mov     rcx, [sb+8]", "test    rdx, rdx", "jz      short loc_84D0"], ["mov~rdx,[state+0]", "mov~rcx,[sb+0]", "test~rdx,rdx", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [2, 0, 0, 1, 1, 6, 0, 1, 1, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___4570; \"cycle_check\"", "lea     sb, aCycleCheckC; \"cycle-check.c\"", "lea     state, aStateMagicCcMa; \"state->magic == CC_MAGIC\"", "sub     rsp, 8", "mov     edx, 3Ch ; '<'; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~sb,<TAG>", "lea~state,<TAG>", "sub~rsp,0", "mov~edx,0", "call~FOO"]]], "func_feature": [1, 5, 8, 0, 12, 14, 1, 34, 0.04015, 3, 1], "succs": [[10, 3], [0, 8], [], [2], [2], [9, 11], [1, 10], [1, 6], [], [4, 7], [], []], "fname": "cycle_check", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[1, 0, 1, 0, 0, 4, 2, 1, 0, 0, 0.0, ["mov     edx, 3", "xor     esi, esi; cmd", "xor     eax, eax", "jmp     _fcntl"], ["mov~edx,0", "xor~esi,esi", "xor~eax,eax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 2, 1, 0, 2, 1, 2, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "dup_safer", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[1, 0, 0, 1, 0, 7, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "mov     eax, ebx", "pop     fd", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "mov~eax,ebx", "pop~fd", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [2, 0, 2, 1, 0, 8, 0, 1, 0, 0, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     ebx, edi", "sub     rsp, 8", "cmp     edi, 2", "ja      short loc_8572"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~ebx,edi", "sub~rsp,0", "cmp~edi,0", "ja~FOO"]], [0, 0, 1, 0, 3, 9, 0, 3, 1, 0, 0.0, ["call    dup_safer", "mov     r12d, eax", "call    ___errno_location", "mov     r13d, [rax]", "mov     rbp, rax", "mov     edi, ebx; fd", "call    _close", "mov     ebx, r12d", "mov     [rbp+0], r13d"], ["call~FOO", "mov~r12d,eax", "call~FOO", "mov~r13d,<TAG>", "mov~rbp,rax", "mov~edi,ebx", "call~FOO", "mov~ebx,r12d", "mov~[rbp+0],r13d"]]], "func_feature": [3, 0, 4, 0, 3, 3, 1, 24, 0.0, 0, 2], "succs": [[], [0, 2], [0]], "fname": "fd_safer", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 344, 0, 1, 11, 1, 2, 0, 0, 0.01954529185664711, ["mov     rdi, rbx; size", "mov     [rbp+fbp], cp_0", "mov     byte ptr [rbp+n], dl", "mov     qword ptr [rbp+has_width], n_0", "call    _malloc", "test    rax, rax", "mov     r9, rax", "mov     rcx, qword ptr [rbp+has_width]", "movzx   edx, byte ptr [rbp+n]", "mov     r8, [rbp+fbp]", "jz      out_of_memory"], ["mov~rdi,rbx", "mov~[rbp+0],cp_0", "mov~[yte ptr [rbp+0],dl", "mov~[word ptr [rbp+0],n_0", "call~FOO", "test~rax,rax", "mov~r9,rax", "mov~rcx,[word ptr [rbp+0]", "movzx~edx,[yte ptr [rbp+0]", "mov~r8,[rbp+0]", "jz~FOO"]], [0, 0, 344, 0, 0, 4, 1, 1, 13, 27, 0.03613000108930767, ["cmp     result_0, [rbp+result]", "setz    dl", "test    result_0, result_0", "jz      loc_8FD0"], ["cmp~result_0,[rbp+0]", "setz~dl", "test~result_0,result_0", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 14, 26, 0.014670640046062153, ["test    dl, dl", "jnz     loc_8FD0"], ["test~dl,dl", "jnz~FOO"]], [1, 0, 344, 0, 0, 4, 0, 1, 10, 21, 0.501423880736372, ["movzx   eax, byte ptr [dp+48h]", "mov     rdx, [dp+50h]", "cmp     al, 25h ; '%'", "jz      loc_8F68"], ["movzx~eax,[yte ptr [dp+0]", "mov~rdx,[dp+0]", "cmp~al,0", "jz~FOO"]], [0, 0, 344, 0, 0, 3, 0, 1, 9, 22, 0.5744775213582111, ["mov     rax, [rbp+i]", "cmp     [rbp+d.count], rax", "jz      loc_974A"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 0, 3, 0, 0, 3, 0, 1, 15, -1, 0.0005602153716873376, ["mov     rax, [rbp+lengthp]", "mov     [rax], length", "jmp     loc_8712"], ["mov~rax,[rbp+0]", "mov~<TAG>,length", "jmp~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 14, -1, 0.005633276793078228, ["mov     rdi, [rbp+d.dir]; ptr", "call    free", "mov     rdi, [rbp+a.arg]; ptr", "test    rdi, rdi", "jz      short loc_9800"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~rdi,[rbp+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 15, -1, 0.0, ["call    free"], ["call~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 15, 25, 0.019514168780442258, ["test    length, length", "jz      loc_9580"], ["test~length,length", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 30, 26, 0.03885716064175783, ["cmp     allocated, rax", "jnb     loc_94F0"], ["cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 29, 27, 0.046178864318949284, ["test    rsi, rsi", "jz      loc_980F"], ["test~rsi,rsi", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 11, 20, 0.44815284542724204, ["cmp     rdx, 0FFFFFFFFFFFFFFFFh", "jz      loc_96C0; jumptable 0000000000008A8E default case"], ["cmp~rdx,0", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 16, 25, 0.0023264499463126935, ["test    dl, dl", "jz      loc_9580"], ["test~dl,dl", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 31, 32, 0.034297629977747, ["test    allocated, allocated", "jnz     loc_9ADC"], ["test~allocated,allocated", "jnz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 32, 31, 0.018370395729913943, ["cmp     rax, 0Ch", "ja      loc_9AEE"], ["cmp~rax,0", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 37, 26, 0.016522463080250852, ["mov     result_0, r9", "jmp     loc_94F0"], ["mov~result_0,r9", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 36, 27, 0.019514168780442258, ["test    length, length", "jz      loc_9B08"], ["test~length,length", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 37, 27, 0.0023264499463126935, ["test    dl, dl", "jz      loc_9B08"], ["test~dl,dl", "jz~FOO"]], [1, 0, 344, 0, 0, 1, 0, 0, 33, 30, 0.013989822754081014, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [2, 0, 344, 2, 0, 7, 0, 1, 12, 19, 0.4481411742736652, ["mov     r8, [rbp+a.arg]", "shl     rdx, 5", "add     rdx, r8", "cmp     al, 6Eh ; 'n'", "mov     edi, [rdx]", "mov     dword ptr [rbp+has_width], edi", "jz      loc_9050"], ["mov~r8,[rbp+0]", "shl~rdx,0", "add~rdx,r8", "cmp~al,0", "mov~edi,<TAG>", "mov~[word ptr [rbp+0],edi", "jz~FOO"]], [0, 0, 344, 0, 0, 4, 1, 1, 34, 29, 0.03612611070478206, ["cmp     result_0, [rbp+result]", "setz    dl", "test    result_0, result_0", "jz      loc_9901"], ["cmp~result_0,[rbp+0]", "setz~dl", "test~result_0,result_0", "jz~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 33, 30, 0.01400538429218344, ["add     allocated, allocated", "cmp     allocated, rax", "jnb     loc_9830"], ["add~allocated,allocated", "cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 34, 30, 0.0025754345559515102, ["mov     rbx, memory_size", "jmp     loc_9830"], ["mov~rbx,memory_size", "jmp~FOO"]], [2, 0, 344, 0, 0, 4, 1, 0, 13, 18, 0.4331398515429265, ["and     eax, 0FFFFFFDFh", "lea     ecx, [rax-45h]", "cmp     cl, 2", "jbe     short loc_8846"], ["and~eax,0", "lea~ecx,[rax-45h]+0]", "cmp~cl,0", "jbe~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 14, 17, 0.10951821478034889, ["cmp     al, 41h ; 'A'", "jnz     short loc_8853"], ["cmp~al,0", "jnz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 35, 28, 0.014643407354382907, ["test    dl, dl", "jnz     loc_9901"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 344, 0, 1, 10, 0, 2, 17, 24, 0.0013266211232318202, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "mov     qword ptr [rbp+n], r8", "mov     qword ptr [rbp+has_width], rcx", "call    _memcpy", "mov     rcx, qword ptr [rbp+has_width]", "mov     result_0, rax", "mov     r8, qword ptr [rbp+n]", "jmp     loc_87DB"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "mov~[word ptr [rbp+0],r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "mov~result_0,rax", "mov~r8,[word ptr [rbp+0]", "jmp~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 14, 17, 0.3232481598481194, ["cmp     dword ptr [rbp+has_width], 0Ch", "jz      loc_9270"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [1, 1, 344, 1, 0, 4, 0, 1, 13, 27, 0.013001665084576959, ["mov     eax, edi", "sub     eax, 12h", "cmp     eax, 4; switch 5 cases", "ja      loc_96C0; jumptable 0000000000008A8E default case"], ["mov~eax,edi", "sub~eax,<STR>", "cmp~eax,0", "ja~FOO"]], [2, 0, 344, 0, 0, 6, 1, 1, 15, 16, 0.22990616392524238, ["mov     eax, [dp+10h]", "mov     rdi, [rbp+buf]", "test    al, 1", "mov     byte ptr [rdi], 25h ; '%'", "lea     r12, [rdi+1]", "jz      short loc_8878"], ["mov~eax,[dp+0]", "mov~rdi,[rbp+0]", "test~al,0", "mov~<TAG>,0", "lea~r12,[rdi+0]", "jz~FOO"]], [1, 0, 344, 1, 0, 6, 0, 1, 18, 17, 0.008449915189617341, ["mov     rax, [dp+50h]", "mov     r8, [rbp+a.arg]", "shl     rax, 5", "mov     eax, [r8+rax]", "mov     dword ptr [rbp+has_width], eax", "jmp     loc_8853"], ["mov~rax,[dp+0]", "mov~r8,[rbp+0]", "shl~rax,0", "mov~eax,<TAG>", "mov~[word ptr [rbp+0],eax", "jmp~FOO"]], [0, 0, 344, 1, 0, 4, 0, 1, 14, 26, 0.013320676615676694, ["lea     rcx, off_C164", "movsxd  rax, dword ptr [rcx+rax*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [0, 0, 344, 0, 0, 2, 0, 0, 13, 26, 0.046676833538226915, ["cmp     allocated, rax", "jnb     loc_8F8F"], ["cmp~allocated,rax", "jnb~FOO"]], [1, 0, 344, 1, 0, 4, 0, 0, 12, 27, 0.051259706509391385, ["mov     rax, length", "add     rax, 1", "mov     r12, rax", "jnb     loc_9070"], ["mov~rax,length", "add~rax,0", "mov~r12,rax", "jnb~FOO"]], [1, 0, 344, 0, 0, 3, 0, 0, 16, 16, 0.0, ["mov     rdi, [rbp+buf]", "lea     fbp_0, [rdi+2]", "mov     byte ptr [rdi+1], 27h ; '''"], ["mov~rdi,[rbp+0]", "lea~fbp_0,[rdi+0]", "mov~[yte ptr [rdi+0],0"]], [1, 0, 344, 0, 0, 2, 1, 1, 16, 15, 0.23057531006364668, ["test    al, 2", "jz      short loc_8885"], ["test~al,0", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 14, 32, 0.034297629977747, ["test    allocated, allocated", "jnz     loc_9630"], ["test~allocated,allocated", "jnz~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 37, 26, 0.015102472728404476, ["mov     result_0, memory", "mov     rcx, qword ptr [rbp+has_width]", "mov     r8, qword ptr [rbp+n]", "jmp     loc_94F0"], ["mov~result_0,memory", "mov~rcx,[word ptr [rbp+0]", "mov~r8,[word ptr [rbp+0]", "jmp~FOO"]], [0, 0, 344, 0, 1, 7, 1, 2, 36, 27, 0.01489628234854733, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "mov     qword ptr [rbp+n], r8", "mov     qword ptr [rbp+has_width], rcx", "call    _realloc", "test    memory, memory", "jz      out_of_memory"], ["mov~rsi,rbx", "mov~rdi,result_0", "mov~[word ptr [rbp+0],r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "test~memory,memory", "jz~FOO"]], [2, 0, 344, 1, 0, 2, 0, 0, 17, 15, 0.0, ["mov     byte ptr [r12], 2Dh ; '-'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [1, 0, 344, 0, 0, 2, 0, 1, 15, 31, 0.018370395729913943, ["cmp     rax, 0Ch", "ja      loc_9642"], ["cmp~rax,0", "ja~FOO"]], [1, 0, 344, 0, 0, 2, 1, 1, 17, 14, 0.231244456202051, ["test    al, 4", "jz      short loc_8892"], ["test~al,0", "jz~FOO"]], [1, 0, 344, 0, 0, 1, 0, 0, 16, 30, 0.013989822754081014, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [2, 0, 344, 1, 0, 2, 0, 0, 18, 14, 0.0, ["mov     byte ptr [r12], 2Bh ; '+'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [1, 0, 344, 0, 0, 3, 1, 1, 17, 37, 0.16561366925506918, ["xor     edx, edx", "mov     dword ptr [rbp+has_width], 0", "jmp     loc_9341"], ["xor~edx,edx", "mov~[word ptr [rbp+0],0", "jmp~FOO"]], [0, 0, 344, 0, 0, 6, 0, 1, 16, 38, 0.20391061452513967, ["mov     eax, [dp+10h]", "mov     rdi, [dp+20h]", "mov     [rbp+flags], eax", "mov     flags_0, [dp+18h]", "cmp     rax, rdi", "jz      loc_9883"], ["mov~eax,[dp+0]", "mov~rdi,[dp+0]", "mov~[rbp+0],eax", "mov~flags_0,[dp+0]", "cmp~rax,rdi", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 1, 1, 18, 13, 0.23191360234045533, ["test    al, 8", "jz      short loc_889F"], ["test~al,0", "jz~FOO"]], [1, 1, 344, 1, 0, 2, 0, 0, 19, 13, 0.0, ["mov     byte ptr [r12], 20h ; ' '", "add     r12, 1"], ["mov~<TAG>,<STR>", "add~r12,0"]], [0, 0, 344, 0, 0, 4, 1, 1, 17, 29, 0.03613000108930767, ["cmp     result_0, [rbp+result]", "setz    dl", "test    result_0, result_0", "jz      loc_9530"], ["cmp~result_0,[rbp+0]", "setz~dl", "test~result_0,result_0", "jz~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 16, 30, 0.01400538429218344, ["add     allocated, allocated", "cmp     allocated, rax", "jnb     loc_9091"], ["add~allocated,allocated", "cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 17, 30, 0.0025754345559515102, ["mov     rbx, memory_size", "jmp     loc_9091"], ["mov~rbx,memory_size", "jmp~FOO"]], [1, 0, 344, 0, 0, 2, 1, 1, 19, 12, 0.23258274847885965, ["test    al, 10h", "jz      short loc_88AC"], ["test~al,0", "jz~FOO"]], [2, 0, 344, 0, 0, 4, 0, 1, 30, 30, 0.01417267082678452, ["mov     r11d, 6E69h", "mov     byte ptr [rdi+2], 66h ; 'f'", "mov     [rdi], r11w", "jmp     loc_9737"], ["mov~r11d,0", "mov~[yte ptr [rdi+0],0", "mov~<TAG>,r11w", "jmp~FOO"]], [2, 0, 344, 1, 0, 5, 0, 1, 29, 31, 0.030344999299730786, ["movzx   esi, byte ptr [dp+48h]", "lea     rax, [p_0+3]", "sub     esi, 41h ; 'A'", "cmp     sil, 19h", "ja      loc_9894"], ["movzx~esi,[yte ptr [dp+0]", "lea~rax,[p_0+0]", "sub~esi,0", "cmp~sil,0", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 18, 28, 0.014670640046062153, ["test    dl, dl", "jnz     loc_9530"], ["test~dl,dl", "jnz~FOO"]], [2, 0, 344, 1, 0, 2, 0, 0, 20, 12, 0.0, ["mov     byte ptr [r12], 23h ; '#'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [0, 1, 344, 0, 0, 2, 1, 1, 20, 11, 0.23325189461726398, ["test    al, 20h", "jz      short loc_88B9"], ["test~al,<STR>", "jz~FOO"]], [2, 0, 344, 1, 0, 2, 0, 0, 21, 11, 0.0, ["mov     byte ptr [r12], 30h ; '0'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [0, 0, 344, 0, 1, 5, 1, 2, 19, 27, 0.014919624655700969, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      short loc_9130"], ["mov~rsi,rbx", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 26, 35, 0.0013227307387062136, ["lea     rdi, [rcx+1]", "mov     byte ptr [rcx], 2Bh ; '+'", "jmp     loc_96FF"], ["lea~rdi,[rcx+0]", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 344, 0, 0, 2, 1, 1, 25, 36, 0.0069715690698868675, ["test    byte ptr [rbp+flags], 4", "jz      loc_9A69"], ["test~[yte ptr [rbp+0],0", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 20, 26, 0.0151180342665069, ["mov     result_0, memory", "jmp     loc_8F8F"], ["mov~result_0,memory", "jmp~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 21, 10, 0.23392104075566827, ["mov     rsi, [dp+18h]; src", "mov     rdx, [dp+20h]", "cmp     rsi, rdx", "jz      short loc_88F6"], ["mov~rsi,[dp+0]", "mov~rdx,[dp+0]", "cmp~rsi,rdx", "jz~FOO"]], [2, 0, 344, 0, 0, 4, 0, 1, 25, 29, 0.0892668181323042, ["mov     edi, 616Eh", "mov     byte ptr [rcx+2], 6Eh ; 'n'", "mov     [rcx], di", "jmp     loc_943D"], ["mov~edi,0", "mov~[yte ptr [rcx+0],0", "mov~<TAG>,di", "jmp~FOO"]], [1, 0, 344, 0, 0, 6, 0, 1, 24, 30, 0.18053329391077014, ["fstp    st", "movzx   edi, byte ptr [dp+48h]", "lea     rax, [rcx+3]", "lea     esi, [rdi-41h]", "cmp     sil, 19h", "ja      loc_98C0"], ["fstp~<TAG>,<TAG>", "movzx~edi,[yte ptr [dp+0]", "lea~rax,[rcx+0]", "lea~esi,[rdi-41h]+0]", "cmp~sil,0", "ja~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 25, 6, 0.23306515616003484, ["mov     dword ptr [rbp+n], 0", "jmp     loc_89AF"], ["mov~[word ptr [rbp+0],0", "jmp~FOO"]], [2, 0, 344, 0, 0, 6, 0, 1, 24, 7, 0.23760134451689205, ["movzx   eax, byte ptr [dp+48h]", "mov     byte ptr [fbp_0+1], 0", "mov     [fbp_0], al", "mov     rax, [dp+28h]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      loc_90C8"], ["movzx~eax,[yte ptr [dp+0]", "mov~[yte ptr [fbp_0+0],0", "mov~<TAG>,al", "mov~rax,[dp+0]", "cmp~rax,0", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 11, 29, 0.013927576601671309, ["js      out_of_memory"], ["js~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 10, 30, 0.034297629977747, ["test    allocated, allocated", "jnz     loc_90E0"], ["test~allocated,allocated", "jnz~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 2, -1, 5.446538335849115e-05, ["mov     rdi, [rbp+d.dir]; ptr", "call    free", "mov     rdi, [rbp+a.arg]; ptr", "test    rdi, rdi", "jz      short loc_98EE"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~rdi,[rbp+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 357, 0, 1, 5, 1, 2, 1, 30, 0.00275439224412941, ["mov     rsi, rbx; a", "mov     rdi, args; args", "call    printf_fetchargs", "test    eax, eax", "js      loc_98D1"], ["mov~rsi,rbx", "mov~rdi,args", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    free"], ["call~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 12, 28, 0.01400538429218344, ["add     allocated, allocated", "cmp     allocated, rax", "jnb     loc_878D"], ["add~allocated,allocated", "cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 2, 1, 10, 0, 1, 22, 10, 0.0, ["mov     rcx, rdx", "mov     rdi, fbp_0; dest", "mov     [rbp+fbp], r8", "sub     rcx, rsi", "mov     rdx, n_1; n", "mov     qword ptr [rbp+n], n_1", "call    _memcpy", "mov     rcx, qword ptr [rbp+n]", "mov     r8, [rbp+fbp]", "add     fbp_0, rcx"], ["mov~rcx,rdx", "mov~rdi,fbp_0", "mov~[rbp+0],r8", "sub~rcx,rsi", "mov~rdx,n_1", "mov~[word ptr [rbp+0],n_1", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "mov~r8,[rbp+0]", "add~fbp_0,rcx"]], [1, 0, 344, 0, 0, 2, 0, 1, 12, 29, 0.0024937364809137735, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 11, 29, 0.018370395729913943, ["cmp     rax, 0Ch", "ja      loc_90F2"], ["cmp~rax,0", "ja~FOO"]], [1, 0, 3, 0, 1, 4, 1, 2, 3, -1, 7.00269214609172e-05, ["call    ___errno_location", "xor     r15d, r15d", "mov     dword ptr [rax], 16h", "jmp     loc_8712"], ["call~FOO", "xor~r15d,r15d", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 13, 28, 0.0025754345559515102, ["mov     rbx, memory_size", "jmp     loc_878D"], ["mov~rbx,memory_size", "jmp~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 22, 9, 0.2345901868940726, ["mov     rsi, [dp+30h]; src", "mov     rdx, [dp+38h]", "cmp     rsi, rdx", "jz      short loc_8933"], ["mov~rsi,[dp+0]", "mov~rdx,[dp+0]", "cmp~rsi,rdx", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 10, 24, 0.0025754345559515102, ["mov     r14, allocated", "jmp     loc_87DB"], ["mov~r14,allocated", "jmp~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 9, 25, 0.005371324235020724, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "jz      loc_9108"], ["cmp~allocated,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 39, 35, 0.008709274157991108, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "jz      loc_8A50"], ["cmp~allocated,0", "jz~FOO"]], [1, 0, 344, 1, 0, 7, 1, 0, 40, 36, 0.018865771359507837, ["lea     rsi, [allocated+allocated]", "lea     edx, [rcx+2]", "test    allocated, allocated", "mov     rax, 0FFFFFFFFFFFFFFFFh", "cmovns  rax, rsi", "add     rdx, length", "jb      loc_9110"], ["lea~rsi,<TAG>", "lea~edx,[rcx+0]", "test~allocated,allocated", "mov~rax,0", "cmovns~rax,rsi", "add~rdx,length", "jb~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 38, 36, 0.035149624188854825, ["test    allocated, allocated", "js      loc_9110"], ["test~allocated,allocated", "js~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 40, -1, 0.0002632493528993739, ["jmp     out_of_memory"], ["jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 18, 18, 0.0010504038219137579, ["jmp     short loc_92C3"], ["jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 17, 18, 0.004396134513935357, ["fstp    st"], ["fstp~<TAG>,<TAG>"]], [0, 0, 344, 0, 0, 4, 0, 1, 15, 25, 0.0016631393846967834, ["mov     rax, [rdx+10h]; jumptable 000000000000906C cases 3,4", "mov     r12, length", "mov     [rax], length", "jmp     loc_8F94"], ["mov~rax,[rdx+0]", "mov~r12,length", "mov~<TAG>,length", "jmp~FOO"]], [0, 0, 344, 2, 1, 10, 0, 1, 23, 9, 0.0, ["mov     rcx, rdx", "mov     rdi, fbp_0; dest", "mov     [rbp+fbp], r8", "sub     rcx, rsi", "mov     rdx, n_2; n", "mov     qword ptr [rbp+n], n_2", "call    _memcpy", "mov     rcx, qword ptr [rbp+n]", "mov     r8, [rbp+fbp]", "add     fbp_0, rcx"], ["mov~rcx,rdx", "mov~rdi,fbp_0", "mov~[rbp+0],r8", "sub~rcx,rsi", "mov~rdx,n_2", "mov~[word ptr [rbp+0],n_2", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "mov~r8,[rbp+0]", "add~fbp_0,rcx"]], [0, 0, 8, 0, 1, 3, 0, 2, 12, -1, 0.00018673845722911252, ["mov     rdi, result_0; ptr", "call    free", "jmp     loc_86D3"], ["mov~rdi,result_0", "call~FOO", "jmp~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 11, -1, 0.002427599943978463, ["test    result_0, result_0", "jnz     loc_9130"], ["test~result_0,result_0", "jnz~FOO"]], [0, 0, 344, 0, 1, 7, 1, 2, 15, 25, 0.014919624655700969, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "mov     qword ptr [rbp+n], cp_0", "mov     qword ptr [rbp+has_width], n_0", "call    _realloc", "test    memory, memory", "jz      loc_9130"], ["mov~rsi,rbx", "mov~rdi,result_0", "mov~[word ptr [rbp+0],cp_0", "mov~[word ptr [rbp+0],n_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 23, 8, 0.23525933303247692, ["mov     edi, dword ptr [rbp+has_width]", "cmp     edi, 10h", "ja      short loc_896F"], ["mov~edi,[word ptr [rbp+0]", "cmp~edi,0", "ja~FOO"]], [0, 0, 344, 0, 1, 11, 1, 2, 35, 28, 0.019564743779275143, ["mov     rdi, rbx; size", "mov     byte ptr [rbp+fbp], dl", "mov     qword ptr [rbp+n], r8", "mov     qword ptr [rbp+has_width], rcx", "call    _malloc", "test    rax, rax", "mov     r9, rax", "mov     rcx, qword ptr [rbp+has_width]", "mov     r8, qword ptr [rbp+n]", "movzx   edx, byte ptr [rbp+fbp]", "jz      out_of_memory"], ["mov~rdi,rbx", "mov~[yte ptr [rbp+0],dl", "mov~[word ptr [rbp+0],r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "test~rax,rax", "mov~r9,rax", "mov~rcx,[word ptr [rbp+0]", "mov~r8,[word ptr [rbp+0]", "movzx~edx,[yte ptr [rbp+0]", "jz~FOO"]], [2, 0, 344, 1, 0, 5, 1, 1, 24, 9, 0.011577784348204976, ["mov     eax, 1", "mov     ecx, edi", "shl     rax, cl", "test    eax, 14180h", "jnz     short loc_8966"], ["mov~eax,0", "mov~ecx,edi", "shl~rax,cl", "test~eax,0", "jnz~FOO"]], [1, 0, 344, 0, 0, 2, 1, 1, 25, 9, 0.0069715690698868675, ["test    ah, 10h", "jnz     loc_9230"], ["test~ah,0", "jnz~FOO"]], [1, 0, 344, 0, 0, 2, 1, 1, 26, 8, 0.0036530710695445137, ["test    ah, 6", "jz      short loc_896F"], ["test~ah,0", "jz~FOO"]], [2, 0, 344, 1, 0, 2, 0, 0, 27, 9, 1.5561538102426044e-05, ["mov     byte ptr [r12], 6Ch ; 'l'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [2, 0, 344, 1, 0, 2, 0, 0, 25, 8, 0.005290922954824855, ["mov     byte ptr [r12], 6Ch ; 'l'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [3, 0, 344, 0, 1, 10, 0, 2, 34, 30, 0.023770897848876794, ["mov     r9, [rbp+var_388]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     eax, 1", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "mov     r10, [rbp+maxlen]", "jmp     loc_8AF6"], ["mov~r9,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "mov~eax,0", "mov~[rbp+0],maxlen_0", "call~FOO", "mov~r10,[rbp+0]", "jmp~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 31, 0.02577833626408976, ["cmp     eax, 2", "jnz     loc_9140"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 344, 0, 1, 10, 0, 2, 38, 26, 0.0013266211232318202, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "mov     qword ptr [rbp+n], r8", "mov     qword ptr [rbp+has_width], rcx", "call    _memcpy", "mov     rcx, qword ptr [rbp+has_width]", "mov     result_0, rax", "mov     r8, qword ptr [rbp+n]", "jmp     loc_94F0"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "mov~[word ptr [rbp+0],r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "mov~result_0,rax", "mov~r8,[word ptr [rbp+0]", "jmp~FOO"]], [2, 0, 344, 1, 0, 3, 0, 1, 26, 8, 0.0013188403541806069, ["mov     byte ptr [r12], 4Ch ; 'L'", "add     r12, 1", "jmp     loc_896F"], ["mov~<TAG>,0", "add~r12,0", "jmp~FOO"]], [1, 0, 344, 1, 0, 3, 0, 1, 20, 36, 0.031885591571870965, ["add     rcx, 1", "cmp     r8, digitp", "jz      loc_9B68"], ["add~rcx,0", "cmp~r8,digitp", "jz~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 19, 37, 0.042988749007951944, ["mov     rdi, [dp+40h]", "cmp     rdi, 0FFFFFFFFFFFFFFFFh", "jz      loc_9981"], ["mov~rdi,[dp+0]", "cmp~rdi,0", "jz~FOO"]], [1, 0, 344, 1, 0, 4, 0, 1, 34, 31, 0.0011593345886307402, ["sub     rsp, 10h", "mov     r9, [rbp+var_388]", "fstp    [rsp+3D0h+x.value]", "jmp     loc_8AC9"], ["sub~rsp,0", "mov~r9,[rbp+0]", "fstp~<TAG>,<TAG>", "jmp~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 31, 0.02692599969914369, ["cmp     eax, 2", "jnz     loc_9180"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 344, 0, 0, 2, 1, 0, 21, 41, 0.024836214811471965, ["xor     eax, eax", "mov     r10, 1999999999999999h"], ["xor~eax,eax", "mov~r10,0"]], [2, 0, 344, 2, 0, 4, 0, 1, 25, 7, 0.002536530710695445, ["shl     rax, 5", "add     rax, r8", "cmp     dword ptr [rax], 5", "jnz     loc_96C0; jumptable 0000000000008A8E default case"], ["shl~rax,0", "add~rax,r8", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 30, 41, 0.01606728809075489, ["js      out_of_memory"], ["js~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 29, 42, 0.036211699164345405, ["test    allocated, allocated", "jnz     loc_9198"], ["test~allocated,allocated", "jnz~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 31, 40, 0.01614509578126702, ["add     allocated, allocated", "cmp     allocated, rax", "jnb     loc_8A10"], ["add~allocated,allocated", "cmp~allocated,rax", "jnb~FOO"]], [1, 0, 344, 0, 0, 3, 0, 0, 26, 6, 0.0026532422464636404, ["mov     eax, [rax+10h]", "mov     dword ptr [rbp+n], 1", "mov     [rbp+prefixes], eax"], ["mov~eax,[rax+0]", "mov~[word ptr [rbp+0],0", "mov~[rbp+0],eax"]], [0, 0, 344, 0, 0, 1, 0, 0, 32, 42, 0.0001050403821913758, ["nop     word ptr [memory_size+memory_size+00h]"], ["nop~[ord ptr [memory_size+0]"]], [1, 0, 344, 1, 0, 7, 0, 1, 22, 40, 0.025637634023746907, ["movsx   esi, byte ptr [digitp]", "lea     r9, [digitp+1]", "sub     esi, 30h ; '0'", "cmp     rax, r10", "movsxd  rcx, esi", "mov     rsi, rdi", "ja      short loc_99B6"], ["movsx~esi,<TAG>", "lea~r9,[digitp+0]", "sub~esi,0", "cmp~rax,r10", "movsxd~rcx,esi", "mov~rsi,rdi", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 25, 37, 0.027878495510496256, ["cmp     r8, digitp", "jnz     short loc_999A"], ["cmp~r8,digitp", "jnz~FOO"]], [0, 0, 344, 1, 0, 2, 0, 0, 23, 40, 0.0, ["lea     rsi, [rax+rax*4]", "add     rsi, rsi"], ["lea~rsi,<TAG>", "add~rsi,rsi"]], [1, 0, 344, 0, 0, 2, 0, 1, 31, 41, 0.01490795350212415, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 30, 41, 0.018144753427428766, ["cmp     rax, 0Ch", "ja      loc_91B0"], ["cmp~rax,0", "ja~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 30, 1, 0.009500319011531099, ["jns     loc_91B0"], ["jns~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 26, 5, 0.23872177526026672, ["mov     rax, [dp+40h]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      short loc_89E4"], ["mov~rax,[dp+0]", "cmp~rax,0", "jz~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 23, 39, 0.02630678016215123, ["add     rcx, rsi", "mov     rax, precision", "jnb     short loc_99F4"], ["add~rcx,rsi", "mov~rax,precision", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 32, 40, 0.014900172733072937, ["test    rdx, rdx", "jnz     out_of_memory"], ["test~rdx,rdx", "jnz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 24, 40, 0.009679276699709, ["cmp     r8, digitp", "jz      out_of_memory"], ["cmp~r8,digitp", "jz~FOO"]], [2, 0, 344, 2, 0, 4, 0, 1, 27, 6, 0.0023497922534663324, ["shl     rax, 5", "add     r8, rax", "cmp     dword ptr [r8], 5", "jnz     loc_96C0; jumptable 0000000000008A8E default case"], ["shl~rax,0", "add~r8,rax", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 25, 39, 0.009500319011531099, ["lea     rcx, [digitp+1]", "cmp     byte ptr [digitp-1], 30h ; '0'", "jz      short loc_99E7"], ["lea~rcx,[digitp+0]", "cmp~[yte ptr [digitp-1]+0],0", "jz~FOO"]], [0, 0, 344, 0, 0, 5, 1, 1, 33, 39, 0.015149157342711753, ["cmp     result_0, [rbp+result]", "mov     rbx, memory_size", "setz    dl", "test    result_0, result_0", "jnz     loc_8A23"], ["cmp~result_0,[rbp+0]", "mov~rbx,memory_size", "setz~dl", "test~result_0,result_0", "jnz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 26, 40, 0.00249762686543938, ["cmp     r8, digitp", "jz      out_of_memory"], ["cmp~r8,digitp", "jz~FOO"]], [1, 0, 344, 0, 0, 4, 0, 1, 27, 39, 0.0025754345559515102, ["mov     r9, digitp", "lea     digitp, [r9+1]", "cmp     byte ptr [digitp-1], 30h ; '0'", "jnz     short loc_99D1"], ["mov~r9,digitp", "lea~digitp,[r9+0]", "cmp~[yte ptr [digitp-1]+0],0", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 34, 39, 0.00016469294491734226, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 344, 0, 0, 5, 0, 0, 28, 5, 0.00265324224646364, ["mov     eax, dword ptr [rbp+n]", "mov     edx, [r8+10h]", "mov     [rbp+rax*4+prefixes], edx", "lea     eax, [rax+1]", "mov     dword ptr [rbp+n], eax"], ["mov~eax,[word ptr [rbp+0]", "mov~edx,[r8+0]", "mov~[rbp+0],edx", "lea~eax,[rax+0]", "mov~[word ptr [rbp+0],eax"]], [0, 0, 344, 0, 0, 1, 0, 0, 26, 38, 0.01024727284044755, ["mov     rax, rdi"], ["mov~rax,rdi"]], [0, 0, 344, 0, 0, 2, 0, 1, 24, 38, 0.014627845816280481, ["mov     rcx, digitp", "jmp     short loc_99EA"], ["mov~rcx,digitp", "jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 26, 36, 0.02774622243662564, ["jmp     loc_937B"], ["jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 28, 36, 0.13081417967351894, ["cmp     allocated, rax", "jnb     short loc_8A42"], ["cmp~allocated,rax", "jnb~FOO"]], [1, 0, 344, 1, 0, 4, 1, 0, 27, 4, 0.23969437139166835, ["mov     rax, length", "xor     edx, edx", "add     rax, 2", "jb      loc_9B78"], ["mov~rax,length", "xor~edx,edx", "add~rax,0", "jb~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 34, 37, 0.019506388011391044, ["test    length, length", "jz      loc_9658"], ["test~length,length", "jz~FOO"]], [0, 0, 344, 0, 1, 7, 1, 2, 33, 38, 0.01965681621304783, ["mov     rdi, rbx; size", "mov     byte ptr [rbp+fbp], dl", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "movzx   edx, byte ptr [rbp+fbp]", "jz      out_of_memory"], ["mov~rdi,rbx", "mov~[yte ptr [rbp+0],dl", "call~FOO", "test~rax,rax", "mov~rcx,rax", "movzx~edx,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 344, 0, 0, 1, 0, 0, 31, 40, 0.013795303527800687, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [0, 0, 344, 0, 0, 2, 1, 1, 35, 37, 0.0023264499463126935, ["test    dl, dl", "jz      loc_9658"], ["test~dl,dl", "jz~FOO"]], [1, 0, 344, 1, 0, 7, 0, 1, 19, 41, 0.02777734551283049, ["movsx   ecx, byte ptr [digitp]", "lea     r8, [digitp+1]", "sub     ecx, 30h ; '0'", "cmp     width_0, r10", "movsxd  rax, ecx", "mov     rcx, r9", "ja      short loc_9A24"], ["movsx~ecx,<TAG>", "lea~r8,[digitp+0]", "sub~ecx,0", "cmp~width_0,r10", "movsxd~rax,ecx", "mov~rcx,r9", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 22, 38, 0.01438275159116727, ["cmp     rdi, digitp", "jnz     short loc_9A08"], ["cmp~rdi,digitp", "jnz~FOO"]], [1, 0, 344, 0, 0, 3, 1, 0, 18, 42, 0.027053733991067676, ["xor     edx, edx", "mov     r10, 1999999999999999h", "mov     r9, rsi"], ["xor~edx,edx", "mov~r10,0", "mov~r9,rsi"]], [0, 0, 344, 0, 0, 4, 1, 1, 32, 39, 0.03050450506528065, ["cmp     result_0, [rbp+result]", "setz    dl", "test    result_0, result_0", "jz      loc_91E0"], ["cmp~result_0,[rbp+0]", "setz~dl", "test~result_0,result_0", "jz~FOO"]], [0, 0, 344, 1, 0, 2, 0, 0, 20, 41, 0.0, ["lea     rcx, [width_0+width_0*4]", "add     rcx, rcx"], ["lea~rcx,<TAG>", "add~rcx,rcx"]], [0, 0, 344, 0, 1, 6, 0, 2, 36, 36, 0.0013266211232318204, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_8A42"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 33, 38, 0.027246956422506134, ["test    dl, dl", "jnz     loc_91E0"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 20, 40, 0.028446491651234806, ["add     rax, rcx", "mov     width_0, rax", "jnb     short loc_9A56"], ["add~rax,rcx", "mov~width_0,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 5, 0, 0, 26, 34, 0.031850578111140504, ["fldz", "fxch    st(1)", "fucomi  st, st(1)", "fstp    st(1)", "jbe     short loc_96BE"], ["fldz~<TAG>", "fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "jbe~FOO"]], [1, 0, 344, 0, 0, 3, 1, 1, 26, 35, 0.003649180685018907, ["test    byte ptr [rbp+flags], 8", "mov     rdi, rcx", "jz      loc_96FF"], ["test~[yte ptr [rbp+0],0", "mov~rdi,rcx", "jz~FOO"]], [0, 1, 344, 0, 0, 3, 0, 1, 27, 35, 0.0, ["lea     rdi, [rcx+1]", "mov     byte ptr [rcx], 20h ; ' '", "jmp     loc_96FF"], ["lea~rdi,[rcx+0]", "mov~<TAG>,<STR>", "jmp~FOO"]], [1, 0, 344, 0, 0, 3, 0, 0, 25, 35, 0.02087191297987893, ["fchs", "lea     rdi, [rcx+1]", "mov     byte ptr [rcx], 2Dh ; '-'"], ["fchs~<TAG>", "lea~rdi,[rcx+0]", "mov~<TAG>,0"]], [0, 0, 344, 0, 0, 2, 0, 1, 21, 39, 0.017837413049905854, ["cmp     rdi, digitp", "jz      loc_9B00"], ["cmp~rdi,digitp", "jz~FOO"]], [0, 0, 344, 0, 1, 5, 1, 2, 34, 37, 0.027335138471753215, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      out_of_memory"], ["mov~rsi,rbx", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 22, 40, 0.009702619006862638, ["lea     rax, [digitp+1]", "cmp     byte ptr [digitp-1], 30h ; '0'", "jnz     short loc_9A5B"], ["lea~rax,[digitp+0]", "cmp~[yte ptr [digitp-1]+0],0", "jnz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 24, 41, 6.224615240970417e-05, ["mov     r8, digitp", "jmp     short loc_9A35"], ["mov~r8,digitp", "jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 35, 36, 0.027512799365089245, ["mov     result_0, memory"], ["mov~result_0,memory"]], [1, 0, 344, 0, 0, 3, 0, 1, 17, 39, 0.03629728762390875, ["mov     rsi, [dp+28h]", "cmp     rsi, 0FFFFFFFFFFFFFFFFh", "jz      loc_99F9"], ["mov~rsi,[dp+0]", "cmp~rsi,0", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 21, 39, 0.008609420955167209, ["mov     rax, digitp", "jmp     short loc_9A42"], ["mov~rax,digitp", "jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 23, 39, 0.0027699537822318356, ["mov     rdx, r9"], ["mov~rdx,r9"]], [0, 0, 344, 0, 0, 4, 0, 1, 15, 25, 0.0016631393846967834, ["mov     rax, [rdx+10h]; jumptable 000000000000906C case 2", "mov     r12, length", "mov     [rax], r14d", "jmp     loc_8F94"], ["mov~rax,[rdx+0]", "mov~r12,length", "mov~<TAG>,r14d", "jmp~FOO"]], [1, 0, 344, 0, 0, 3, 0, 0, 29, 35, 0.24093151367081123, ["mov     byte ptr [result_0+length], 0", "mov     [rbp+fbp], fbp_0", "xchg    ax, ax"], ["mov~<TAG>,0", "mov~[rbp+0],fbp_0", "xchg~ax,ax"]], [0, 0, 344, 0, 0, 2, 0, 1, 35, 36, 0.016514682311199638, ["mov     result_0, rcx", "jmp     loc_8A42"], ["mov~result_0,rcx", "jmp~FOO"]], [2, 0, 344, 0, 0, 3, 0, 1, 28, 3, 0.10688053407198768, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "jz      loc_8A42"], ["cmp~allocated,0", "mov~edx,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 23, 37, 0.031068610821493595, ["mov     dword ptr [rbp+has_width], 1", "jmp     loc_9341"], ["mov~[word ptr [rbp+0],0", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 22, 38, 0.01407152082911875, ["mov     rdx, rsi", "jmp     loc_9A47"], ["mov~rdx,rsi", "jmp~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 15, 25, 0.0016631393846967834, ["mov     rax, [rdx+10h]; jumptable 000000000000906C case 1", "mov     r12, length", "mov     [rax], r14w", "jmp     loc_8F94"], ["mov~rax,[rdx+0]", "mov~r12,length", "mov~<TAG>,r14w", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 23, 39, 0.004933007578469056, ["cmp     rdi, digitp", "jz      loc_9B00"], ["cmp~rdi,digitp", "jz~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 15, 25, 0.0016631393846967834, ["mov     rax, [rdx+10h]; jumptable 000000000000906C case 0", "mov     r12, length", "mov     [rax], r14b", "jmp     loc_8F94"], ["mov~rax,[rdx+0]", "mov~r12,length", "mov~<TAG>,r14b", "jmp~FOO"]], [4, 0, 344, 1, 0, 9, 0, 1, 30, 34, 0.3117209504987473, ["mov     eax, dword ptr [rbp+has_width]", "mov     r12, allocated", "mov     r10d, 7FFFFFFFh", "sub     r12, length", "mov     [rbp+retcount], 0FFFFFFFFh", "cmp     maxlen_0, 7FFFFFFFh", "cmovbe  r10, maxlen_0", "cmp     eax, 11h; switch 18 cases", "ja      loc_96C0; jumptable 0000000000008A8E default case"], ["mov~eax,[word ptr [rbp+0]", "mov~r12,allocated", "mov~r10d,0", "sub~r12,length", "mov~[rbp+0],0", "cmp~maxlen_0,0", "cmovbe~r10,maxlen_0", "cmp~eax,0", "ja~FOO"]], [0, 0, 344, 0, 0, 4, 0, 0, 41, 35, 0.015540789384956144, ["cmp     rax, rdx", "cmovb   rax, rdx", "cmp     allocated, rax", "jnb     loc_8A50"], ["cmp~rax,rdx", "cmovb~rax,rdx", "cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 44, 35, 0.01388089198736403, ["mov     result_0, memory", "jmp     loc_8A50"], ["mov~result_0,memory", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 40, 35, 0.02471172250665256, ["cmp     allocated, rdx", "jnb     loc_8A50"], ["cmp~allocated,rdx", "jnb~FOO"]], [0, 0, 344, 0, 1, 6, 0, 2, 46, 35, 0.0013266211232318202, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_8A50"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 37, 35, 0.009609249778248083, ["mov     byte ptr [rdi+1], 0", "jmp     loc_8A50"], ["mov~[yte ptr [rdi+0],0", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 45, 35, 0.015332005415415259, ["mov     result_0, rcx", "jmp     loc_8A50"], ["mov~result_0,rcx", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 29, 28, 0.007228334448576897, ["test    pad, pad", "jz      loc_94B0"], ["test~pad,pad", "jz~FOO"]], [1, 0, 344, 2, 0, 6, 1, 1, 28, 29, 0.025349745568852024, ["sub     rdx, r8", "lea     rsi, [p_0+pad]", "mov     r8, end", "sub     r8, rcx", "test    byte ptr [rbp+flags], 2", "jnz     loc_9A85"], ["sub~rdx,r8", "lea~rsi,<TAG>", "mov~r8,end", "sub~r8,rcx", "test~[yte ptr [rbp+0],0", "jnz~FOO"]], [1, 0, 344, 1, 1, 10, 1, 2, 15, 20, 0.2130218950841101, ["fld     tbyte ptr [rdx+10h]", "sub     rsp, 10h", "fld     st", "fstp    [rsp+3D0h+x.value]; x", "fstp    [rbp+has_width]", "call    rpl_isnanl", "test    eax, eax", "pop     r11", "pop     r12", "jnz     short loc_92E8"], ["fld~<TAG>,[byte ptr [rdx+0]", "sub~rsp,0", "fld~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "fstp~<TAG>,[rbp+0]", "call~FOO", "test~eax,eax", "pop~r11", "pop~r12", "jnz~FOO"]], [0, 0, 344, 1, 0, 4, 0, 1, 31, 33, 0.31162758127013274, ["lea     rsi, off_C11C", "movsxd  rax, dword ptr [rsi+rax*4]", "add     rax, rsi", "jmp     rax; switch jump"], ["lea~rsi,<TAG>", "movsxd~rax,<TAG>", "add~rax,rsi", "jmp~rax"]], [1, 1, 344, 1, 0, 4, 0, 1, 30, 29, 0.0023264499463126935, ["add     p_0, 1", "mov     byte ptr [p_0-1], 20h ; ' '", "cmp     end, p_0", "jnz     short loc_9A8E"], ["add~p_0,0", "mov~[yte ptr [p_0-1]+0],<STR>", "cmp~end,p_0", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 31, 28, 0.0026610230155148535, ["jmp     loc_94B0"], ["jmp~FOO"]], [1, 0, 344, 0, 0, 9, 1, 1, 16, 19, 0.010317299761908467, ["fld     [rbp+has_width]", "mov     edx, 0", "fld     st", "fadd    st, st(1)", "fucomip st, st(1)", "setnp   al", "cmovnz  eax, edx", "test    al, al", "jz      short loc_92C1"], ["fld~<TAG>,[rbp+0]", "mov~edx,0", "fld~<TAG>,<TAG>", "fadd~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "setnp~al", "cmovnz~eax,edx", "test~al,al", "jz~FOO"]], [0, 0, 23, 0, 1, 5, 1, 2, 16, -1, 0.01058184590964971, ["mov     rdi, rbx; size", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "jz      out_of_memory"], ["mov~rdi,rbx", "call~FOO", "test~rax,rax", "mov~rcx,rax", "jz~FOO"]], [0, 0, 27, 0, 0, 4, 1, 1, 15, -1, 0.02050621683447192, ["cmp     result_0, [rbp+result]", "setz    r13b", "test    result_0, result_0", "jz      loc_9AA0"], ["cmp~result_0,[rbp+0]", "setz~r13b", "test~result_0,result_0", "jz~FOO"]], [0, 0, 26, 0, 0, 2, 1, 1, 16, -1, 0.005290922954824855, ["test    r13b, r13b", "jnz     loc_9AA0"], ["test~r13b,r13b", "jnz~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.031188369825140255, ["mov     rax, [dp+50h]; jumptable 0000000000008A8E cases 7-10,15-17", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "mov     r9, [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      loc_8F48"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "mov~r9,[rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 14, 0, 0, 2, 1, 1, 17, -1, 0.007858576741725153, ["test    length, length", "jz      loc_9B60"], ["test~length,length", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 32, 0.006275968316708447, ["cmp     eax, 2", "jz      loc_8F30"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 344, 0, 0, 8, 1, 1, 17, 19, 0.003921507601811363, ["fldz", "mov     edx, 1", "fucomip st, st(1)", "fstp    st", "setp    al", "cmovnz  eax, edx", "test    al, al", "jnz     short loc_92E8"], ["fldz~<TAG>", "mov~edx,0", "fucomip~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "setp~al", "cmovnz~eax,edx", "test~al,al", "jnz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 18, -1, 0.002482065327336954, ["test    r13b, r13b", "jz      loc_9B60"], ["test~r13b,r13b", "jz~FOO"]], [1, 0, 344, 1, 0, 2, 0, 0, 34, 31, 0.0037970152969919544, ["sub     rsp, 8", "push    [rbp+var_388]"], ["sub~rsp,0", "push~[rbp+0]"]], [0, 0, 32, 0, 0, 2, 1, 1, 12, -1, 0.006675899845940773, ["test    allocated, allocated", "jz      out_of_memory"], ["test~allocated,allocated", "jz~FOO"]], [2, 0, 33, 0, 0, 3, 0, 1, 11, -1, 0.018378176498965157, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "mov     eax, 1", "jz      loc_97AA"], ["cmp~allocated,0", "mov~eax,0", "jz~FOO"]], [0, 0, 11, 0, 1, 6, 0, 2, 19, -1, 4.279422978167162e-05, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_97AA"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 32, 31, 0.013927576601671309, ["js      out_of_memory"], ["js~FOO"]], [2, 0, 344, 0, 1, 10, 1, 1, 35, 30, 0.007959726739390922, ["mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "pop     rsi", "pop     rdi", "mov     r10, [rbp+maxlen]"], ["mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "pop~rsi", "pop~rdi", "mov~r10,[rbp+0]"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 31, 0.00249762686543938, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [0, 0, 344, 0, 0, 3, 1, 1, 35, 29, 0.12740490603424606, ["movsxd  rcx, [rbp+retcount]", "test    ecx, ecx", "js      loc_8C3D"], ["movsxd~rcx,[rbp+0]", "test~ecx,ecx", "js~FOO"]], [5, 0, 344, 3, 1, 17, 1, 2, 34, 30, 0.02376700746435119, ["mov     eax, [rbp+prefixes+4]", "sub     rsp, 8", "push    [rbp+var_388]", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "sub     rsp, 18h", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "fstp    [rsp+3E8h+var_3E0]", "push    rax", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "add     rsp, 30h", "mov     r10, [rbp+maxlen]", "jmp     loc_8AF6"], ["mov~eax,[rbp+0]", "sub~rsp,0", "push~[rbp+0]", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "sub~rsp,0", "mov~rcx,0", "mov~edx,0", "fstp~<TAG>,[rsp+0]", "push~rax", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "add~rsp,0", "mov~r10,[rbp+0]", "jmp~FOO"]], [3, 0, 344, 0, 1, 12, 0, 2, 34, 30, 0.026447482402494036, ["mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     eax, 1", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "pop     r8", "mov     r10, [rbp+maxlen]", "pop     r9", "jmp     loc_8AF6"], ["mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "mov~eax,0", "mov~[rbp+0],maxlen_0", "call~FOO", "pop~r8", "mov~r10,[rbp+0]", "pop~r9", "jmp~FOO"]], [2, 1, 344, 1, 1, 11, 1, 2, 34, 30, 0.03445000337166657, ["mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "add     rsp, 20h", "mov     r10, [rbp+maxlen]", "jmp     loc_8AF6"], ["mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "add~rsp,<STR>", "mov~r10,[rbp+0]", "jmp~FOO"]], [0, 0, 344, 0, 0, 3, 0, 0, 36, 28, 0.18268597334827227, ["movsxd  rdx, ecx", "cmp     rdx, r10", "jnb     short loc_8B1B"], ["movsxd~rdx,ecx", "cmp~rdx,r10", "jnb~FOO"]], [2, 0, 344, 0, 1, 13, 2, 1, 35, 29, 0.1935907211735478, ["mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen_0", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "pop     rdx", "pop     rcx", "movsxd  rcx, [rbp+retcount]", "mov     r10, [rbp+maxlen]", "test    ecx, ecx", "jns     loc_8B05"], ["mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen_0", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "pop~rdx", "pop~rcx", "movsxd~rcx,[rbp+0]", "mov~r10,[rbp+0]", "test~ecx,ecx", "jns~FOO"]], [1, 0, 344, 1, 0, 3, 0, 1, 37, 28, 0.0002878884548948818, ["add     rdx, result_0", "cmp     byte ptr [rdx+length], 0", "jnz     loc_96C0; jumptable 0000000000008A8E default case"], ["add~rdx,result_0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 41, 1, 0, 4, 1, 0, 10, -1, 0.07104620220662611, ["mov     r12, length", "xor     eax, eax", "add     r12, 1", "jb      loc_9B10"], ["mov~r12,length", "xor~eax,eax", "add~r12,0", "jb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 37, 27, 0.18305945026273046, ["cmp     ecx, eax", "jl      loc_8F10"], ["cmp~ecx,eax", "jl~FOO"]], [2, 0, 344, 2, 0, 5, 0, 1, 18, 38, 0.0072438959866793235, ["mov     rax, [rbp+a.arg]", "shl     rsi, 5", "add     rax, rsi", "cmp     dword ptr [rax], 5", "jnz     loc_96C0; jumptable 0000000000008A8E default case"], ["mov~rax,[rbp+0]", "shl~rsi,0", "add~rax,rsi", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 31, 0, 0, 1, 0, 1, 13, -1, 0.0037736729898383155, ["js      out_of_memory"], ["js~FOO"]], [0, 0, 344, 0, 0, 3, 0, 0, 38, 26, 0.09111150879486253, ["lea     eax, [rcx+1]", "cmp     rax, r10", "jb      loc_8F25"], ["lea~eax,[rcx+0]", "cmp~rax,r10", "jb~FOO"]], [1, 0, 30, 0, 0, 2, 0, 1, 14, -1, 0.005520455641835639, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [1, 0, 32, 0, 0, 2, 0, 1, 13, -1, 0.0166119419243398, ["cmp     r12, 0Ch", "ja      loc_9B2E"], ["cmp~r12,0", "ja~FOO"]], [0, 0, 31, 0, 0, 1, 0, 1, 15, -1, 8.947884408894975e-05, ["jmp     short loc_9B2E"], ["jmp~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 39, 37, 0.03830602283396359, ["cmp     r12, 7FFFFFFEh", "ja      overflow"], ["cmp~r12,0", "ja~FOO"]], [0, 0, 344, 0, 0, 5, 0, 0, 38, 26, 0.18250312527556878, ["movsxd  rcx, eax", "mov     [rbp+retcount], eax", "lea     eax, [rcx+1]", "cmp     rax, r10", "jnb     loc_8B2F"], ["movsxd~rcx,eax", "mov~[rbp+0],eax", "lea~eax,[rcx+0]", "cmp~rax,r10", "jnb~FOO"]], [1, 0, 344, 0, 0, 5, 1, 1, 19, 37, 0.007508442134420566, ["movsxd  rdx, dword ptr [rax+10h]", "mov     dword ptr [rbp+has_width], 1", "test    edx, edx", "mov     rax, rdx", "js      loc_96AD"], ["movsxd~rdx,[word ptr [rax+0]", "mov~[word ptr [rbp+0],0", "test~edx,edx", "mov~rax,rdx", "js~FOO"]], [0, 0, 28, 0, 0, 2, 0, 1, 16, -1, 0.0007313922908140241, ["mov     rbx, memory_size", "jmp     loc_9776"], ["mov~rbx,memory_size", "jmp~FOO"]], [0, 0, 29, 0, 0, 2, 1, 1, 15, -1, 0.0030267191609218654, ["test    rax, rax", "jnz     out_of_memory"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 33, 0, 0, 1, 0, 1, 13, -1, 0.01555375733337483, ["js      out_of_memory"], ["js~FOO"]], [0, 0, 36, 0, 0, 2, 1, 1, 12, -1, 0.03661629915500848, ["test    allocated, allocated", "jnz     loc_9B49"], ["test~allocated,allocated", "jnz~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 18, 36, 0.21019747591851978, ["mov     rcx, [dp+30h]", "mov     r8, [dp+38h]", "cmp     rcx, r8", "jz      short loc_9398"], ["mov~rcx,[dp+0]", "mov~r8,[dp+0]", "cmp~rcx,r8", "jz~FOO"]], [1, 0, 344, 0, 0, 4, 1, 1, 20, 37, 0.0, ["neg     eax", "or      [rbp+flags], 2", "movsxd  arg, eax", "jmp     loc_9341"], ["neg~eax", "or~[rbp+0],0", "movsxd~arg,eax", "jmp~FOO"]], [0, 0, 32, 1, 0, 3, 0, 0, 14, -1, 0.013203965079908498, ["add     allocated, allocated", "cmp     allocated, r12", "jnb     loc_9776"], ["add~allocated,allocated", "cmp~allocated,r12", "jnb~FOO"]], [2, 0, 344, 2, 0, 5, 0, 1, 20, 37, 0.009103499789919235, ["mov     rax, [rbp+a.arg]", "shl     rdi, 5", "add     rax, rdi", "cmp     dword ptr [rax], 5", "jnz     loc_96C0; jumptable 0000000000008A8E default case"], ["mov~rax,[rbp+0]", "shl~rdi,0", "add~rax,rdi", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 21, 35, 0.005049719114237251, ["mov     r12d, 0Ch", "jmp     loc_939E"], ["mov~r12d,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, -1, 0.005524346026361245, ["mov     rbx, [rbp+var_38]", "xor     rbx, fs:28h", "mov     rax, r15", "jnz     loc_9B73"], ["mov~rbx,[rbp+0]", "xor~rbx,<TAG>", "mov~rax,r15", "jnz~FOO"]], [0, 0, 344, 0, 0, 3, 1, 1, 21, 36, 0.009290238247148348, ["movsxd  rax, dword ptr [rax+10h]", "test    eax, eax", "js      short loc_9398"], ["movsxd~rax,[word ptr [rax+0]", "test~eax,eax", "js~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 44, 40, 0.002412038405876037, ["cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 344, 0, 0, 3, 0, 0, 43, 39, 0.010006068999859946, ["cmp     rsi, rax", "mov     allocated, rsi", "jnb     short loc_8B88"], ["cmp~rsi,rax", "mov~allocated,rsi", "jnb~FOO"]], [1, 0, 344, 0, 0, 3, 1, 1, 22, 35, 0.03741512477759968, ["test    rax, rax", "mov     r12d, 0Ch", "jz      short loc_939E"], ["test~rax,rax", "mov~r12d,0", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 45, 39, 0.0025754345559515102, ["mov     rbx, rax"], ["mov~rbx,rax"]], [0, 0, 344, 0, 0, 2, 1, 1, 29, 2, 0.012246930486609296, ["test    allocated, allocated", "jz      out_of_memory"], ["test~allocated,allocated", "jz~FOO"]], [1, 0, 344, 1, 0, 3, 0, 0, 23, 36, 0.0025546858384816085, ["add     rax, 0Ch", "mov     r12, rax", "jb      out_of_memory"], ["add~rax,0", "mov~r12,rax", "jb~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 24, 35, 0.0025754345559515102, ["jmp     short loc_939E"], ["jmp~FOO"]], [0, 0, 344, 0, 0, 4, 1, 1, 44, 38, 0.010838611288339739, ["cmp     result_0, [rbp+result]", "setz    r12b", "test    result_0, result_0", "jz      loc_8CA0"], ["cmp~result_0,[rbp+0]", "setz~r12b", "test~result_0,result_0", "jz~FOO"]], [0, 1, 344, 0, 0, 1, 0, 0, 19, 35, 0.16783378202434862, ["mov     r12d, 12h"], ["mov~r12d,<STR>"]], [0, 0, 344, 0, 0, 2, 1, 1, 42, 37, 0.01904472904768574, ["test    r12b, r12b", "jnz     loc_8CA0"], ["test~r12b,r12b", "jnz~FOO"]], [0, 0, 344, 0, 0, 7, 1, 1, 41, 38, 0.020043261075924745, ["cmp     allocated, rdx", "mov     rbx, rdx", "cmovnb  rbx, allocated", "cmp     result_0, [rbp+result]", "setz    r12b", "test    result_0, result_0", "jnz     loc_8B9C"], ["cmp~allocated,rdx", "mov~rbx,rdx", "cmovnb~rbx,allocated", "cmp~result_0,[rbp+0]", "setz~r12b", "test~result_0,result_0", "jnz~FOO"]], [1, 0, 344, 1, 0, 4, 0, 0, 20, 34, 0.2163261283411919, ["cmp     width_0, r12", "cmovnb  r12, width_0", "add     r12, 1", "jb      out_of_memory"], ["cmp~width_0,r12", "cmovnb~r12,width_0", "add~r12,0", "jb~FOO"]], [0, 0, 344, 0, 1, 5, 1, 2, 43, 36, 0.013731760580549117, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      out_of_memory"], ["mov~rsi,rbx", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [0, 1, 344, 0, 0, 2, 0, 1, 21, 33, 0.21363657583915593, ["cmp     r12, 2BCh", "ja      loc_9668"], ["cmp~r12,<STR>", "ja~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 22, 32, 0.20689842984080548, ["lea     rcx, [rbp+tmpbuf]"], ["lea~rcx,[rbp+0]"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.04304671573738331, ["mov     rax, [dp+50h]; jumptable 0000000000008A8E cases 5,6,13,14", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "mov     r9d, [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      loc_8E10"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "mov~r9d,[rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 31, 0.09337026605042938, ["cmp     eax, 2", "jz      loc_8E58"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.023930987172105296, ["mov     rax, [dp+50h]; jumptable 0000000000008A8E case 4", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movzx   r9d, word ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jnz     loc_8BEE"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movzx~r9d,[ord ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jnz~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.023930987172105296, ["mov     rax, [dp+50h]; jumptable 0000000000008A8E case 2", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movzx   r9d, byte ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jnz     loc_8BEE"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movzx~r9d,[yte ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jnz~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.023930987172105296, ["mov     rax, [dp+50h]; jumptable 0000000000008A8E case 1", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movsx   r9d, byte ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jnz     loc_8BEE"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movsx~r9d,[yte ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jnz~FOO"]], [1, 0, 344, 1, 0, 2, 0, 0, 34, 30, 0.11343421100408194, ["sub     rsp, 8", "push    [rbp+var_388]"], ["sub~rsp,0", "push~[rbp+0]"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 31, 0.023677334101035806, ["cmp     eax, 2", "jnz     loc_8BF7"], ["cmp~eax,0", "jnz~FOO"]], [2, 0, 344, 3, 1, 18, 1, 2, 23, 31, 0.21237609125285942, ["mov     rax, [dp+50h]", "sub     rsp, 10h", "mov     [rbp+maxlen], rcx", "mov     [rbp+fbp], rdx", "shl     rax, 5", "add     rax, [rbp+a.arg]", "fld     tbyte ptr [rax+10h]", "fld     st", "fstp    [rsp+3D0h+x.value]; x", "fstp    [rbp+n]", "call    rpl_isnanl", "test    eax, eax", "pop     r9", "mov     rdx, [rbp+fbp]", "mov     rcx, [rbp+maxlen]", "pop     r10", "fld     [rbp+n]", "jz      loc_96C8"], ["mov~rax,[dp+0]", "sub~rsp,0", "mov~[rbp+0],rcx", "mov~[rbp+0],rdx", "shl~rax,0", "add~rax,[rbp+0]", "fld~<TAG>,[byte ptr [rax+0]", "fld~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "fstp~<TAG>,[rbp+0]", "call~FOO", "test~eax,eax", "pop~r9", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "pop~r10", "fld~<TAG>,[rbp+0]", "jz~FOO"]], [0, 0, 344, 0, 1, 6, 1, 2, 23, 32, 0.004901884502264204, ["mov     rdi, r12; size", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "mov     rdx, qword ptr [rbp+n]", "jnz     loc_93C3"], ["mov~rdi,r12", "call~FOO", "test~rax,rax", "mov~rcx,rax", "mov~rdx,[word ptr [rbp+0]", "jnz~FOO"]], [2, 0, 344, 0, 0, 10, 2, 1, 24, 36, 0.029843139695927546, ["fnstcw  word ptr [rbp+retcount]", "movzx   r8d, word ptr [rbp+retcount]", "mov     eax, r8d", "or      ah, 3", "mov     word ptr [rbp+retcount], ax", "fldcw   word ptr [rbp+retcount]", "fxam", "fnstsw  ax", "test    ah, 2", "jz      loc_98A7"], ["fnstcw~[ord ptr [rbp+0]", "movzx~r8d,[ord ptr [rbp+0]", "mov~eax,r8d", "or~ah,0", "mov~[ord ptr [rbp+0],ax", "fldcw~[ord ptr [rbp+0]", "fxam~<TAG>", "fnstsw~ax", "test~ah,0", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 34, 30, 0.07715313331569693, ["mov     r9d, [rbp+prefixes]", "jmp     loc_8C01"], ["mov~r9d,[rbp+0]", "jmp~FOO"]], [2, 0, 344, 0, 0, 3, 0, 0, 25, 29, 0.0892668181323042, ["mov     r8d, 414Eh", "mov     byte ptr [rcx+2], 4Eh ; 'N'", "mov     [rcx], r8w"], ["mov~r8d,0", "mov~[yte ptr [rcx+0],0", "mov~<TAG>,r8w"]], [1, 0, 344, 0, 0, 3, 0, 1, 36, 28, 0.13897879999792526, ["mov     rdi, [rbp+fbp]", "cmp     byte ptr [rdi+1], 0", "jnz     loc_8F58"], ["mov~rdi,[rbp+0]", "cmp~[yte ptr [rdi+0],0", "jnz~FOO"]], [0, 0, 344, 1, 0, 5, 1, 1, 26, 28, 0.21555453541027994, ["mov     r10d, dword ptr [rbp+has_width]", "mov     r8, p_0", "sub     r8, rcx", "test    r10d, r10d", "jz      short loc_94B0"], ["mov~r10d,[word ptr [rbp+0]", "mov~r8,p_0", "sub~r8,rcx", "test~r10d,r10d", "jz~FOO"]], [0, 0, 344, 0, 0, 3, 0, 1, 31, 29, 0.03134871850733727, ["mov     word ptr [rbp+retcount], r8w", "fldcw   word ptr [rbp+retcount]", "jmp     loc_943D"], ["mov~[ord ptr [rbp+0],r8w", "fldcw~[ord ptr [rbp+0]", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 0, 37, 27, 0.1273698925735152, ["test    eax, eax", "jns     loc_8F10"], ["test~eax,eax", "jns~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 27, 28, 0.027590607055601374, ["cmp     rdx, r8", "jbe     short loc_94B0"], ["cmp~rdx,r8", "jbe~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 18, -1, 0.0005641057562129441, ["mov     result_0, rcx", "jmp     loc_97AA"], ["mov~result_0,rcx", "jmp~FOO"]], [1, 0, 344, 1, 0, 4, 0, 0, 39, 36, 0.028100247428455828, ["lea     retcount_0, [allocated+allocated]", "mov     rdx, rax", "add     rdx, 0Ch", "jb      out_of_memory"], ["lea~retcount_0,<TAG>", "mov~rdx,rax", "add~rdx,0", "jb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 29, 29, 0.01612175347411338, ["cmp     rcx, p_0", "jnb     short loc_9493"], ["cmp~rcx,p_0", "jnb~FOO"]], [0, 0, 344, 2, 0, 3, 0, 0, 30, 31, 0.004645119123574174, ["mov     rdi, rcx", "sub     rdi, p_0", "add     rdi, q"], ["mov~rdi,rcx", "sub~rdi,p_0", "add~rdi,q"]], [2, 0, 344, 2, 0, 6, 0, 1, 31, 30, 0.004979692192776334, ["sub     p_0, 1", "movzx   r9d, byte ptr [p_0]", "sub     q, 1", "cmp     rdi, q", "mov     [q], r9b", "jnz     short loc_947C"], ["sub~p_0,0", "movzx~r9d,<TAG>", "sub~q,0", "cmp~rdi,q", "mov~<TAG>,r9b", "jnz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 42, 40, 0.0100203337431205, ["test    allocated, allocated", "js      out_of_memory"], ["test~allocated,allocated", "js~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 32, 29, 0.005314265261978494, ["mov     p_0, rcx"], ["mov~p_0,rcx"]], [0, 0, 344, 0, 0, 2, 1, 1, 30, 28, 0.01746004575092202, ["test    pad, pad", "jz      short loc_94B0"], ["test~pad,pad", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 42, 38, 0.005565843461301049, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 344, 1, 0, 1, 0, 0, 31, 30, 0.004645119123574174, ["add     pad, p_0"], ["add~pad,p_0"]], [1, 1, 344, 1, 0, 4, 0, 1, 32, 29, 0.004979692192776334, ["add     p_0, 1", "mov     byte ptr [p_0-1], 20h ; ' '", "cmp     p_0, rdx", "jnz     short loc_949B"], ["add~p_0,0", "mov~[yte ptr [p_0-1]+0],<STR>", "cmp~p_0,rdx", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 33, 28, 0.005314265261978494, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 344, 0, 1, 5, 1, 2, 43, 37, 0.01848840406052401, ["mov     rdi, rbx; size", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "jz      out_of_memory"], ["mov~rdi,rbx", "call~FOO", "test~rax,rax", "mov~rcx,rax", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 27, 27, 0.2202385583791102, ["cmp     r12, r8", "jbe     loc_96C0; jumptable 0000000000008A8E default case"], ["cmp~r12,r8", "jbe~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 44, 36, 0.018323711115606666, ["test    length, length", "jz      loc_8FC0"], ["test~length,length", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 45, 36, 0.0023264499463126935, ["test    r12b, r12b", "jz      loc_8FC0"], ["test~r12b,r12b", "jz~FOO"]], [0, 0, 344, 2, 0, 9, 1, 1, 28, 26, 0.22030469491604548, ["mov     rdx, allocated", "mov     rax, length", "xor     esi, esi", "sub     rdx, length", "add     rax, r8", "setb    sil", "cmp     rdx, r8", "mov     r12, rax", "ja      short loc_94F0"], ["mov~rdx,allocated", "mov~rax,length", "xor~esi,esi", "sub~rdx,length", "add~rax,r8", "setb~sil", "cmp~rdx,r8", "mov~r12,rax", "ja~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 30, 27, 0.005322046031029707, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "jnz     out_of_memory"], ["cmp~allocated,0", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 31, 26, 0.0025754345559515102, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.052272503280891135, ["mov     rax, [dp+50h]; jumptable 0000000000008A8E case 12", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "fld     tbyte ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      loc_95A0"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "fld~<TAG>,[byte ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 344, 0, 1, 9, 0, 2, 29, 25, 0.22322248331025038, ["lea     rdi, [result_0+length]; dest", "mov     rsi, rcx; src", "mov     rdx, r8; n", "mov     qword ptr [rbp+has_width], rcx", "call    _memcpy", "mov     rcx, qword ptr [rbp+has_width]", "lea     rax, [rbp+tmpbuf]", "cmp     rcx, rax", "jz      loc_8F94"], ["lea~rdi,<TAG>", "mov~rsi,rcx", "mov~rdx,r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "lea~rax,[rbp+0]", "cmp~rcx,rax", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 15, 31, 0.013927576601671309, ["js      out_of_memory"], ["js~FOO"]], [0, 0, 344, 0, 1, 3, 0, 2, 30, 25, 0.0, ["mov     rdi, rcx; ptr", "call    free", "jmp     loc_8F94"], ["mov~rdi,rcx", "call~FOO", "jmp~FOO"]], [0, 0, 344, 0, 1, 7, 1, 2, 18, 28, 0.01954529185664711, ["mov     rdi, rbx; size", "mov     byte ptr [rbp+has_width], dl", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "movzx   edx, byte ptr [rbp+has_width]", "jz      out_of_memory"], ["mov~rdi,rbx", "mov~[yte ptr [rbp+0],dl", "call~FOO", "test~rax,rax", "mov~rcx,rax", "movzx~edx,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 19, 27, 0.019514168780442258, ["test    length, length", "jz      loc_9660"], ["test~length,length", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 20, 27, 0.0023264499463126935, ["test    dl, dl", "jz      loc_9660"], ["test~dl,dl", "jz~FOO"]], [0, 0, 344, 0, 1, 6, 0, 2, 21, 26, 0.0013266211232318202, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_8F8F"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 16, 24, 0.016522463080250852, ["mov     result_0, r9", "jmp     loc_87DB"], ["mov~result_0,r9", "jmp~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 31, 0, 4.279422978167162e-05, ["jmp     out_of_memory"], ["jmp~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.05121431868992617, ["mov     rax, [dp+50h]; jumptable 0000000000008A8E case 11", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movsd   xmm0, qword ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      loc_9590"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movsd~xmm0,[word ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 344, 1, 0, 3, 0, 1, 33, 31, 0.023436324779674625, ["sub     rsp, 8", "push    [rbp+var_388]", "jmp     loc_8DA5"], ["sub~rsp,0", "push~[rbp+0]", "jmp~FOO"]], [0, 0, 344, 0, 0, 3, 0, 0, 34, 31, 7.780769051213022e-06, ["mov     eax, [rbp+prefixes+4]", "push    [rbp+var_388]", "push    rax"], ["mov~eax,[rbp+0]", "push~[rbp+0]", "push~rax"]], [2, 0, 344, 2, 0, 5, 0, 1, 33, 31, 0.023346845935585673, ["sub     rsp, 8", "push    [rbp+var_388]", "sub     rsp, 10h", "fstp    [rsp+3E0h+var_3E0]", "jmp     loc_8E6B"], ["sub~rsp,0", "push~[rbp+0]", "sub~rsp,0", "fstp~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 10, 0, 0, 2, 0, 1, 40, -1, 0.017432813059242776, ["cmp     result_0, [rbp+result]", "jz      short loc_95D2"], ["cmp~result_0,[rbp+0]", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 41, -1, 0.0023497922534663324, ["test    result_0, result_0", "jnz     loc_96A0"], ["test~result_0,result_0", "jnz~FOO"]], [1, 0, 359, 1, 1, 22, 2, 2, 0, 31, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, format", "push    rbx", "lea     rbx, [rbp+a]", "mov     r13, args", "sub     rsp, 398h", "mov     [rbp+lengthp], lengthp_0", "lea     lengthp_0, [rbp+d]; d", "mov     [rbp+result], resultbuf_0", "mov     format, rbx; a", "mov     resultbuf_0, format; format", "mov     rax, fs:28h", "mov     [rbp+var_38], rax", "xor     eax, eax", "call    printf_parse", "test    eax, eax", "js      loc_9620"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,format", "push~rbx", "lea~rbx,[rbp+0]", "mov~r13,args", "sub~rsp,0", "mov~[rbp+0],lengthp_0", "lea~lengthp_0,[rbp+0]", "mov~[rbp+0],resultbuf_0", "mov~format,rbx", "mov~resultbuf_0,format", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 41, -1, 0.01057017475607289, ["mov     rax, [rbp+buf_malloced]", "test    rax, rax", "jz      short loc_95E6"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 8, 0, 1, 3, 0, 2, 42, -1, 0.0, ["mov     rdi, result_0; ptr", "call    free", "jmp     loc_95D2"], ["mov~rdi,result_0", "call~FOO", "jmp~FOO"]], [0, 0, 6, 0, 1, 2, 0, 1, 42, -1, 0.0, ["mov     rdi, rax; ptr", "call    free"], ["mov~rdi,rax", "call~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 42, -1, 0.005917274863447503, ["mov     rdi, [rbp+d.dir]; ptr", "call    free", "mov     rdi, [rbp+a.arg]; ptr", "test    rdi, rdi", "jz      short loc_9603"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~rdi,[rbp+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 43, -1, 0.0, ["call    free"], ["call~FOO"]], [3, 0, 353, 2, 0, 7, 0, 0, 2, 29, 0.005446538335849115, ["mov     rax, [rbp+d.max_width_length]", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "add     rax, 7", "cmp     rax, 6", "cmovbe  rax, rdx", "add     rax, [rbp+d.max_precision_length]", "jb      out_of_memory_1"], ["mov~rax,[rbp+0]", "mov~rdx,0", "add~rax,0", "cmp~rax,0", "cmovbe~rax,rdx", "add~rax,[rbp+0]", "jb~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 33, 32, 1.5561538102426044e-05, ["nop"], ["nop"]], [1, 0, 3, 0, 1, 4, 1, 2, 43, -1, 0.0012021288184124118, ["call    ___errno_location", "xor     r15d, r15d", "mov     dword ptr [rax], 4Bh ; 'K'", "jmp     loc_8712"], ["call~FOO", "xor~r15d,r15d", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 33, 31, 0.05123701259965861, ["push    [rbp+var_388]", "push    r9"], ["push~[rbp+0]", "push~r9"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.04609988951307937, ["mov     rax, [dp+50h]; jumptable 0000000000008A8E case 3", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movsx   r9d, word ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      short loc_8E10"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movsx~r9d,[ord ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 33, 32, 1.5561538102426044e-05, ["jmp     loc_8E10"], ["jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 33, 32, 1.5561538102426044e-05, ["jmp     loc_8E10"], ["jmp~FOO"]], [1, 0, 352, 1, 0, 3, 0, 0, 3, 28, 0.008076438275159116, ["mov     rdi, rax", "add     rdi, 6; size", "jb      out_of_memory_1"], ["mov~rdi,rax", "add~rdi,0", "jb~FOO"]], [0, 0, 344, 0, 0, 3, 0, 1, 33, 31, 0.022912743862269973, ["push    [rbp+var_388]", "push    arg", "jmp     loc_8E18"], ["push~[rbp+0]", "push~arg", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, -1, 2.3342307153639065e-05, ["xor     r15d, r15d", "jmp     loc_8712"], ["xor~r15d,r15d", "jmp~FOO"]], [1, 0, 351, 0, 0, 2, 0, 0, 4, 27, 0.01073746129067397, ["cmp     rdi, 0F9Fh", "jbe     loc_8740"], ["cmp~rdi,0", "jbe~FOO"]], [1, 0, 349, 0, 0, 2, 0, 1, 5, 28, 0.00012449230481940835, ["cmp     buf_memsize, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory_1"], ["cmp~buf_memsize,0", "jz~FOO"]], [0, 0, 348, 0, 1, 4, 1, 2, 6, 27, 0.0026999268607709186, ["call    _malloc", "test    rax, rax", "mov     [rbp+buf], rax", "jz      out_of_memory_1"], ["call~FOO", "test~rax,rax", "mov~[rbp+0],rax", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 16, 31, 0.0024937364809137735, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [0, 0, 347, 0, 0, 1, 0, 0, 7, 26, 0.005306484492927281, ["mov     [rbp+buf_malloced], buf_0"], ["mov~[rbp+0],buf_0"]], [0, 0, 344, 0, 0, 1, 0, 0, 34, 33, 6.224615240970417e-05, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 346, 0, 0, 3, 1, 1, 6, 25, 0.023902522525326403, ["xor     ebx, ebx", "cmp     [rbp+result], 0", "jz      short loc_8668"], ["xor~ebx,ebx", "cmp~[rbp+0],0", "jz~FOO"]], [4, 0, 347, 2, 0, 8, 2, 1, 5, 26, 0.013266211232318203, ["add     rax, 24h", "mov     [rbp+buf_malloced], 0", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rax, [rsp+3C0h+flags+3]", "and     rax, 0FFFFFFFFFFFFFFF0h", "mov     [rbp+buf], rax", "jmp     loc_8652"], ["add~rax,0", "mov~[rbp+0],0", "and~rax,0", "sub~rsp,rax", "lea~rax,[rsp+0]", "and~rax,0", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 344, 1, 0, 3, 0, 0, 34, 32, 0.004617108354989806, ["sub     rsp, 8", "push    [rbp+var_388]", "push    r9"], ["sub~rsp,0", "push~[rbp+0]", "push~r9"]], [0, 0, 344, 0, 0, 2, 0, 1, 20, 26, 0.016522463080250852, ["mov     result_0, rcx", "jmp     loc_8F8F"], ["mov~result_0,rcx", "jmp~FOO"]], [0, 0, 345, 0, 0, 2, 0, 0, 7, 25, 0.0, ["mov     rax, [rbp+lengthp]", "mov     rbx, [rax]"], ["mov~rax,[rbp+0]", "mov~rbx,<TAG>"]], [0, 0, 344, 0, 0, 2, 0, 0, 35, 31, 0.008099780582312756, ["mov     eax, [rbp+prefixes+4]", "push    rax"], ["mov~eax,[rbp+0]", "push~rax"]], [1, 0, 344, 1, 0, 4, 0, 1, 34, 32, 0.0004792953735547243, ["sub     rsp, 8", "push    [rbp+var_388]", "push    arg", "jmp     loc_8E64"], ["sub~rsp,0", "push~[rbp+0]", "push~arg", "jmp~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 22, 33, 0.00473848835218873, ["cmp     r12, 0FFFFFFFFFFFFFFFFh", "mov     qword ptr [rbp+n], width_0", "jz      out_of_memory"], ["cmp~r12,0", "mov~[word ptr [rbp+0],width_0", "jz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 24, -1, 8.558845956334324e-05, ["jmp     out_of_memory"], ["jmp~FOO"]], [1, 0, 344, 0, 0, 11, 1, 1, 7, 24, 0.029115637789639128, ["mov     args, [rbp+d.dir]", "mov     r8, cp_0", "lea     rax, [rbp+retcount]", "xor     r10d, r10d", "mov     r15, [rbp+result]", "mov     [rbp+i], 0", "mov     [rbp+var_388], rax", "mov     cp_0, r10", "mov     rcx, [dp+0]", "cmp     rcx, cp_0", "jz      loc_8FB1"], ["mov~args,[rbp+0]", "mov~r8,cp_0", "lea~rax,[rbp+0]", "xor~r10d,r10d", "mov~r15,[rbp+0]", "mov~[rbp+0],0", "mov~[rbp+0],rax", "mov~cp_0,r10", "mov~rcx,[dp+0]", "cmp~rcx,cp_0", "jz~FOO"]], [0, 0, 344, 2, 0, 5, 0, 0, 8, 25, 0.048406757857279936, ["sub     rcx, cp_0", "mov     rax, length", "add     rax, n_0", "mov     r14, rax", "jnb     loc_8770"], ["sub~rcx,cp_0", "mov~rax,length", "add~rax,n_0", "mov~r14,rax", "jnb~FOO"]], [1, 1, 344, 2, 0, 6, 0, 1, 15, 24, 0.5391320811482339, ["mov     r8, [dp+8]", "add     dp, 58h", "mov     rcx, [dp+0]", "add     [rbp+i], 1", "cmp     rcx, cp_0", "jnz     loc_86A5"], ["mov~r8,[dp+0]", "add~dp,<STR>", "mov~rcx,[dp+0]", "add~[rbp+0],0", "cmp~rcx,cp_0", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 27, -1, 7.586249824932697e-05, ["fstp    st"], ["fstp~<TAG>,<TAG>"]], [0, 0, 0, 0, 1, 1, 0, 1, 12, -1, 0.0, ["call    _abort; jumptable 0000000000008A8E default case"], ["call~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 11, 28, 0.05127137766296821, ["cmp     rdx, 0FFFFFFFFFFFFFFFFh", "jnz     loc_96C0; jumptable 0000000000008A8E default case"], ["cmp~rdx,0", "jnz~FOO"]], [0, 0, 344, 0, 0, 5, 0, 0, 27, 33, 0.02976727719767822, ["fld     st", "fadd    st, st(1)", "fucomip st, st(1)", "fstp    st", "jp      short loc_96C0; jumptable 0000000000008A8E default case"], ["fld~<TAG>,<TAG>", "fadd~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "jp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 28, 32, 0.030018206999579838, ["jnz     short loc_96C0; jumptable 0000000000008A8E default case"], ["jnz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 1, 10, -1, 0.02313611677378192, ["cmp     result_0, [rbp+result]", "jz      short loc_86D3"], ["cmp~result_0,[rbp+0]", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 13, 27, 0.0025832153250027233, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "jnz     out_of_memory"], ["cmp~allocated,0", "jnz~FOO"]], [0, 0, 20, 0, 1, 5, 1, 2, 17, -1, 0.0029450210858841287, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      out_of_memory"], ["mov~rsi,rbx", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 11, -1, 0.01605561693717807, ["mov     rax, [rbp+buf_malloced]", "test    rax, rax", "jz      short out_of_memory_1"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 6, 0, 1, 2, 0, 1, 12, -1, 0.0, ["mov     rdi, rax; ptr", "call    free"], ["mov~rdi,rax", "call~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 3, -1, 0.011356032430245406, ["mov     rdi, [rbp+d.dir]; ptr", "call    free", "mov     rdi, [rbp+a.arg]; ptr", "test    rdi, rdi", "jz      short loc_8704"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~rdi,[rbp+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    free"], ["call~FOO"]], [1, 0, 3, 0, 1, 3, 1, 1, 4, -1, 0.006314094085059367, ["call    ___errno_location", "xor     r15d, r15d", "mov     dword ptr [rax], 0Ch"], ["call~FOO", "xor~r15d,r15d", "mov~<TAG>,0"]], [0, 0, 344, 0, 0, 2, 0, 1, 39, 25, 0.2359777573748723, ["lea     r12, [rcx+length]", "jmp     short loc_8F94"], ["lea~r12,<TAG>", "jmp~FOO"]], [2, 0, 344, 0, 0, 3, 0, 0, 30, 30, 0.01417267082678452, ["mov     esi, 4E49h", "mov     byte ptr [rdi+2], 46h ; 'F'", "mov     [rdi], si"], ["mov~esi,0", "mov~[yte ptr [rdi+0],0", "mov~<TAG>,si"]], [0, 0, 0, 0, 0, 8, 0, 0, 3, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [0, 0, 37, 0, 0, 2, 0, 0, 11, -1, 0.048287452731828016, ["cmp     allocated, r12", "jnb     short loc_97AA"], ["cmp~allocated,r12", "jnb~FOO"]], [1, 0, 28, 0, 0, 1, 0, 0, 14, -1, 0.010807488212134887, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [0, 0, 344, 0, 0, 2, 0, 0, 9, 24, 0.04103577597609748, ["cmp     allocated, rax", "jnb     short loc_87DB"], ["cmp~allocated,rax", "jnb~FOO"]], [1, 0, 344, 0, 0, 1, 0, 0, 12, 28, 0.013989822754081014, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [0, 0, 344, 0, 0, 1, 0, 0, 14, 26, 0.0025754345559515102, ["mov     r12, allocated"], ["mov~r12,allocated"]], [1, 0, 344, 0, 0, 1, 0, 0, 14, 25, 0.056597314078523524, ["mov     byte ptr [result_0+length], 25h ; '%'"], ["mov~<TAG>,0"]], [0, 0, 11, 0, 0, 1, 0, 0, 18, -1, 0.0004979692192776334, ["mov     result_0, memory"], ["mov~result_0,memory"]], [1, 0, 10, 0, 0, 3, 0, 0, 12, -1, 0.018043603429762998, ["cmp     allocated, r12", "mov     byte ptr [result_0+length], 0", "jbe     short loc_97CF"], ["cmp~allocated,r12", "mov~<TAG>,0", "jbe~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 8, 23, 0.5205178879880488, ["mov     r14, length", "jmp     loc_87EA"], ["mov~r14,length", "jmp~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 13, -1, 0.002528749941644232, ["cmp     result_0, [rbp+result]", "jz      short loc_97CF"], ["cmp~result_0,[rbp+0]", "jz~FOO"]], [0, 0, 8, 0, 1, 5, 1, 1, 14, -1, 0.0, ["mov     rdi, result_0; ptr", "mov     rsi, r12; size", "call    _realloc", "test    memory, memory", "cmovnz  result_0, memory"], ["mov~rdi,result_0", "mov~rsi,r12", "call~FOO", "test~memory,memory", "cmovnz~result_0,memory"]], [0, 0, 344, 0, 0, 3, 0, 0, 16, 24, 0.0151180342665069, ["mov     rcx, qword ptr [rbp+has_width]", "mov     r8, qword ptr [rbp+n]", "mov     result_0, memory"], ["mov~rcx,[word ptr [rbp+0]", "mov~r8,[word ptr [rbp+0]", "mov~result_0,memory"]], [0, 0, 7, 0, 0, 3, 1, 1, 13, -1, 0.010644092062059414, ["mov     rax, [rbp+buf_malloced]", "test    rax, rax", "jz      short loc_97E3"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 6, 0, 1, 2, 0, 1, 14, -1, 0.0, ["mov     rdi, rax; ptr", "call    free"], ["mov~rdi,rax", "call~FOO"]], [0, 0, 344, 0, 1, 4, 0, 1, 10, 23, 0.05095625651639408, ["lea     rdi, [result_0+length]; dest", "mov     rdx, rcx; n", "mov     rsi, r8; src", "call    _memcpy"], ["lea~rdi,<TAG>", "mov~rdx,rcx", "mov~rsi,r8", "call~FOO"]]], "func_feature": [54, 114, 306, 3, 360, 586, 1, 1250, 0.04697, 3, 103], "succs": [[8, 334], [0, 2], [0, 91], [331, 11], [3, 205], [226], [5, 7], [5], [12, 287], [280, 13], [9, 277], [330, 19], [26, 287], [195, 14], [18, 197], [280], [17, 15], [101, 15], [20], [28, 23], [25, 93], [20, 197], [20], [24, 27], [27, 29], [93, 38], [359], [178, 29], [330, 31], [34, 35], [29], [160, 168, 166, 87], [36, 350], [32, 335], [35], [41, 39], [40, 281], [280], [37, 334], [41], [42, 314], [43, 46], [48], [46], [220], [44, 157], [51, 47], [51], [283, 54], [48, 314], [48], [56, 55], [257], [52, 343], [58, 283], [56], [57, 62], [62], [89, 61], [148], [59, 149], [350], [73, 78], [256], [254, 63], [120], [65, 108], [72, 334], [75, 67], [76, 71], [69, 301], [76], [1, 74], [78], [77, 334], [74, 348], [226], [1], [88, 92], [359], [334, 79], [169, 84], [81, 170], [81, 261], [334], [30], [30], [328], [92], [337], [89, 337], [89, 356], [66, 94], [16, 334], [98, 95], [96, 102], [97, 66], [98], [66], [198], [291, 99], [280], [66], [224, 107], [223, 103], [196], [105, 199], [114], [112, 330], [334, 111], [109, 118], [113, 143], [120], [117], [121, 116], [114, 133], [121], [122, 334], [138, 117], [288, 117], [124, 135], [123, 132], [334, 126], [125, 334], [130, 330], [131, 127], [129, 146], [128, 334], [131, 127], [137], [135], [115], [115], [230], [161, 110], [163, 134], [162, 139], [136, 334], [143], [145, 162], [144, 147], [164, 140], [140], [137, 146], [147], [161], [153, 137], [152, 158], [329, 332], [148, 150], [148], [148], [154, 165], [156, 334], [159, 167], [154], [161], [142, 207], [141], [141], [328], [169], [161], [232, 161], [220], [164], [328], [155, 165], [328], [330, 179], [169, 265], [169], [169, 238], [169], [169], [169], [273, 180], [176, 262], [45, 182], [289, 330, 247, 305, 243, 245, 246, 279, 186], [180, 181], [273], [189, 86], [187, 334], [185, 183], [336, 183], [188, 309], [260, 190], [323, 191], [85, 45], [194, 260], [196], [208, 334], [192, 352], [352], [21, 334], [198], [334, 22], [202, 255], [198], [198], [198], [204, 206], [202, 255], [330, 206], [193, 345], [209, 214], [330, 215], [210, 334], [213, 342], [217, 334], [210, 346], [210], [82, 293], [213, 342], [220, 221], [184], [216, 334], [334, 222], [218, 211], [104, 236], [220], [184, 212], [330, 227], [239], [], [344, 225], [236, 230], [334, 231], [235, 228], [233, 239], [235], [334, 119], [234, 334], [239], [272, 237], [239], [240, 272], [268, 237], [241, 334], [171, 334], [242, 324], [250], [304, 244], [248, 319], [244, 302], [306, 244], [307, 244], [203], [248, 316], [64, 252], [250, 325], [60, 151], [203], [256], [258, 174], [273, 259], [256], [83, 214], [177, 273], [352], [172, 334], [267, 263], [264], [264, 266], [229, 334], [267], [273, 269], [272], [270], [270, 271], [273], [274, 334], [330, 276], [275, 175], [173, 175], [280, 10], [334, 278], [280], [106, 292], [328, 282], [49, 334], [328], [284, 334], [320, 285], [320, 286], [350], [359], [334], [290, 100], [200], [200], [201], [296, 294], [296, 297], [310, 70], [298, 299], [296], [299], [300, 303], [303], [339, 308], [304], [226], [253], [304, 249], [304], [304], [339, 311], [253], [226], [312, 318], [313, 339], [339, 315], [50, 334], [317], [319], [321, 326], [317], [322], [350], [326], [201], [322], [251, 334], [334], [353, 327], [80, 347], [353, 327], [330], [], [33, 330], [330, 333], [330, 53], [337, 90], [349, 334], [334, 351], [338, 339], [339], [340, 341], [341], [226], [328], [257], [], [352, 219], [184], [68, 359], [1], [350], [328], [352], [354, 357], [4], [355, 357], [357], [359], [6, 358], [6], [4]], "fname": "vasnprintf", "n_num": 360}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [2, 1, 4, 0, 0, 9, 1, 1, 0, 2, 0.0, ["mov     rdx, qword ptr [rsp+x.value]", "mov     rax, qword ptr [rsp+x.value+8]", "mov     rsi, rdx", "mov     ecx, eax", "shr     rsi, 20h", "mov     eax, esi", "shr     eax, 1Fh", "and     ecx, 7FFFh", "jz      short locret_9BD0"], ["mov~rdx,[word ptr [rsp+0]", "mov~rax,[word ptr [rsp+0]", "mov~rsi,rdx", "mov~ecx,eax", "shr~rsi,<STR>", "mov~eax,esi", "shr~eax,0", "and~ecx,0", "jz~FOO"]], [2, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.16666666666666666, ["xor     eax, 1", "cmp     ecx, 7FFFh", "jz      short loc_9BD8"], ["xor~eax,0", "cmp~ecx,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 0, 1, 0, 5, 2, 0, 2, 0, 0.0, ["add     esi, 80000000h", "xor     eax, eax", "or      esi, edx", "setnz   al", "retn"], ["add~esi,0", "xor~eax,eax", "or~esi,edx", "setnz~al", "retn"]]], "func_feature": [0, 4, 2, 0, 5, 4, 2, 19, 0.03333, 0, 1], "succs": [[], [0, 2], [3, 4], [], []], "fname": "rpl_isnanl", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 34, 0, 0, 4, 0, 1, 0, 0, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_9CE9"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000009C26 cases 3,4", "cmp     r11d, 2Fh ; '/'", "ja      loc_9D7A"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     rdx, [rdx]", "mov     [ap+10h], rdx", "jmp     short loc_9C50"], ["mov~rdx,<TAG>", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_9C81"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000009C26 case 15", "cmp     r11d, 2Fh ; '/'", "ja      loc_9D8B"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000009C26 cases 5,6,13,14", "cmp     r11d, 2Fh ; '/'", "ja      loc_9DCC"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [0, 0, 34, 1, 0, 4, 0, 1, 3, 2, 0.7546218487394959, ["mov     edx, [ap]", "movsxd  rdx, dword ptr [r8+rdx*4]", "add     rdx, r8", "jmp     rdx; switch jump"], ["mov~edx,<TAG>", "movsxd~rdx,<TAG>", "add~rdx,r8", "jmp~rdx"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_9D0F"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 2, 3, 0.7823529411764706, ["cmp     dword ptr [ap], 16h; switch 23 cases", "ja      short loc_9C60; jumptable 0000000000009C26 default case"], ["cmp~<TAG>,0", "ja~FOO"]], [1, 1, 34, 2, 0, 4, 0, 1, 5, 4, 0.7537815126050421, ["add     i, 1", "add     ap, 20h", "cmp     [a], i", "ja      short loc_9C18"], ["add~i,0", "add~ap,<STR>", "cmp~<TAG>,i", "ja~FOO"]], [0, 0, 34, 0, 0, 5, 1, 0, 1, 4, 0.027731092436974792, ["lea     r8, off_C180", "lea     r10, wide_null_string_2670", "lea     r9, aNull; \"(NULL)\"", "xor     ecx, ecx", "nop     dword ptr [ap+00000000h]"], ["lea~r8,<TAG>", "lea~r10,<TAG>", "lea~r9,<TAG>", "xor~ecx,ecx", "nop~[word ptr [ap+0]"]], [0, 0, 34, 0, 0, 5, 1, 1, 6, 5, 0.07899159663865547, ["mov     rdx, [rdx]", "test    rdx, rdx", "cmovz   rdx, r9", "mov     [ap+10h], rdx", "jmp     loc_9C50"], ["mov~rdx,<TAG>", "test~rdx,rdx", "cmovz~rdx,r9", "mov~[ap+0],rdx", "jmp~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     short loc_9D67"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000009C26 case 16", "cmp     r11d, 2Fh ; '/'", "ja      short loc_9D9C"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     edx, [rdx]", "mov     [ap+10h], edx", "jmp     short loc_9C50"], ["mov~edx,<TAG>", "mov~[ap+0],edx", "jmp~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_9CA5"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 1, 0.07899159663865547, ["mov     r11d, [args+4]; jumptable 0000000000009C26 case 11", "cmp     r11d, 0AFh", "ja      loc_9DDD"], ["mov~r11d,[args+0]", "cmp~r11d,0", "ja~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000009C26 cases 1,2", "cmp     r11d, 2Fh ; '/'", "ja      loc_9DBB"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000009C26 cases 7-10,17-22", "cmp     r11d, 2Fh ; '/'", "ja      loc_9DAA"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 10h", "mov     [args+4], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~[args+0],r11d"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_9CC7"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [2, 0, 34, 1, 0, 8, 1, 0, 4, 5, 0.0067226890756302525, ["mov     rdx, [args+8]; jumptable 0000000000009C26 case 12", "add     rdx, 0Fh", "and     rdx, 0FFFFFFFFFFFFFFF0h", "lea     r11, [rdx+10h]", "mov     [args+8], r11", "fld     tbyte ptr [rdx]", "fstp    tbyte ptr [ap+10h]", "nop     dword ptr [ap+00000000h]"], ["mov~rdx,[args+0]", "add~rdx,0", "and~rdx,0", "lea~r11,[rdx+0]", "mov~[args+0],r11", "fld~<TAG>,<TAG>", "fstp~<TAG>,[byte ptr [ap+0]", "nop~[word ptr [ap+0]"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["movsd   xmm0, qword ptr [rdx]", "movsd   qword ptr [ap+10h], xmm0", "jmp     loc_9C50"], ["movsd~xmm0,<TAG>", "movsd~[word ptr [ap+0],xmm0", "jmp~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 0, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_9D42"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     edx, [rdx]", "mov     [ap+10h], dl", "jmp     short loc_9C50"], ["mov~edx,<TAG>", "mov~[ap+0],dl", "jmp~FOO"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     edx, [rdx]", "mov     [ap+10h], dx", "jmp     loc_9C50"], ["mov~edx,<TAG>", "mov~[ap+0],dx", "jmp~FOO"]], [0, 0, 34, 0, 0, 5, 1, 1, 6, 5, 0.07899159663865547, ["mov     rdx, [rdx]", "test    rdx, rdx", "cmovz   rdx, r10", "mov     [ap+10h], rdx", "jmp     loc_9C50"], ["mov~rdx,<TAG>", "test~rdx,rdx", "cmovz~rdx,r10", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 1, 0, 1, -1, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [1, 0, 35, 0, 0, 3, 0, 1, 0, 5, 0.0, ["cmp     qword ptr [a], 0", "mov     rax, [a+8]", "jz      short loc_9C5D"], ["cmp~<TAG>,0", "mov~rax,[a+0]", "jz~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [1, 0, 0, 0, 0, 2, 0, 0, 3, -1, 0.0, ["mov     eax, 0FFFFFFFFh; jumptable 0000000000009C26 default case", "retn"], ["mov~eax,0", "retn"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]]], "func_feature": [0, 5, 25, 0, 36, 52, 1, 132, 0.10528, 3, 18], "succs": [[29], [0, 35], [11], [2], [2], [13], [9, 5], [18, 14], [1, 34, 6, 7, 16, 19, 20, 21, 25], [13], [8, 34], [10, 31], [10], [11], [17], [30], [33, 15], [11], [17], [27, 22], [24, 23], [3, 4], [26], [28], [28], [11], [11], [26], [11], [11], [11], [], [12, 31], [30], [], [29]], "fname": "printf_fetchargs", "n_num": 36}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 184, 0, 0, 3, 0, 1, 0, 0, 0.03025851938895418, ["movzx   ebx, byte ptr [rcx]", "mov     rbp, rcx", "jmp     loc_9F9F"], ["movzx~ebx,<TAG>", "mov~rbp,rcx", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 20, 32, 0.008049353701527614, ["cmp     edi, 5", "jz      loc_A3FA"], ["cmp~edi,0", "jz~FOO"]], [0, 0, 184, 1, 0, 7, 0, 0, 16, 32, 0.023824911868390128, ["mov     rdi, [rsp+78h+max_precision_length]", "mov     rax, rcx", "mov     [dp+38h], rcx", "sub     rax, rbp", "cmp     rdi, rax", "cmovnb  rax, rdi", "mov     [rsp+78h+max_precision_length], rax"], ["mov~rdi,[rsp+0]", "mov~rax,rcx", "mov~[dp+0],rcx", "sub~rax,rbp", "cmp~rdi,rax", "cmovnb~rax,rdi", "mov~[rsp+0],rax"]], [0, 0, 184, 0, 0, 1, 0, 0, 13, 15, 0.05666862514688602, ["mov     rdi, rax"], ["mov~rdi,rax"]], [2, 0, 184, 0, 0, 9, 1, 0, 12, 13, 0.14612220916568744, ["test    max_width_length_0, max_width_length_0", "mov     esi, 1", "mov     [dp+18h], rbp", "cmovz   max_width_length_0, rsi", "mov     [dp+20h], rax", "movzx   esi, byte ptr [rbp+1]", "lea     edi, [rsi-30h]", "cmp     dil, 9", "jbe     loc_A405"], ["test~max_width_length_0,max_width_length_0", "mov~esi,0", "mov~[dp+0],rbp", "cmovz~max_width_length_0,rsi", "mov~[dp+0],rax", "movzx~esi,[yte ptr [rbp+0]", "lea~edi,[rsi-30h]+0]", "cmp~dil,0", "jbe~FOO"]], [2, 1, 184, 2, 0, 5, 0, 0, 18, 10, 0.010252643948296123, ["add     rcx, 1", "mov     dword ptr [rsi], 0", "add     rsi, 20h", "cmp     rcx, rbx", "jbe     short loc_A1F8"], ["add~rcx,0", "mov~<TAG>,0", "add~rsi,<STR>", "cmp~rcx,rbx", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 17, 11, 0.009841363102232667, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 184, 0, 0, 5, 0, 1, 17, 5, 0.008431257344300823, ["mov     rdi, [rsp+78h+arg_posn]", "cmp     rdi, 0FFFFFFFFFFFFFFFFh", "lea     rax, [rdi+1]", "mov     [dp+40h], rdi", "jz      loc_A5BD; jumptable 000000000000A015 default case"], ["mov~rdi,[rsp+0]", "cmp~rdi,0", "lea~rax,[rdi+0]", "mov~[dp+0],rdi", "jz~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 16, 4, 0.09952996474735605, ["mov     rbx, [dp+40h]", "cmp     rbx, 0FFFFFFFFFFFFFFFFh", "jz      loc_A7F8"], ["mov~rbx,[dp+0]", "cmp~rbx,0", "jz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 19, 9, 0.010663924794359576, ["mov     [a], rcx"], ["mov~<TAG>,rcx"]], [1, 0, 184, 1, 1, 12, 1, 2, 26, 21, 0.015129259694477086, ["lea     rax, [d_allocated_0+d_allocated_0*4]", "mov     rdi, [d+8]; ptr", "mov     [rsp+78h+d_allocated], d_allocated_0", "lea     rsi, [d_allocated_0+rax*2]", "shl     rsi, 3; size", "call    _realloc", "test    memory, memory", "mov     r9, [rsp+78h+d_allocated]", "mov     rdx, [rsp+78h+cp]", "mov     r10, [rsp+78h+max_width_length]", "mov     r8, [rsp+78h+a_allocated]", "jz      loc_A6FA"], ["lea~rax,<TAG>", "mov~rdi,[d+0]", "mov~[rsp+0],d_allocated_0", "lea~rsi,<TAG>", "shl~rsi,0", "call~FOO", "test~memory,memory", "mov~r9,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r10,[rsp+0]", "mov~r8,[rsp+0]", "jz~FOO"]], [1, 0, 184, 1, 0, 7, 0, 1, 25, 22, 0.014923619271445358, ["add     r9, r9", "mov     rax, 2E8BA2E8BA2E8BAh", "mov     [rsp+78h+a_allocated], a_allocated_0", "cmp     d_allocated_0, rax", "mov     [rsp+78h+max_width_length], r10", "mov     [rsp+78h+cp], rdx", "ja      loc_A6FA"], ["add~r9,r9", "mov~rax,0", "mov~[rsp+0],a_allocated_0", "cmp~d_allocated_0,rax", "mov~[rsp+0],r10", "mov~[rsp+0],rdx", "ja~FOO"]], [0, 0, 184, 1, 0, 5, 0, 1, 22, 22, 0.4343419506462985, ["lea     rsi, off_C1FC", "movzx   ecx, cl", "movsxd  rcx, dword ptr [rsi+rcx*4]", "add     rcx, rsi", "jmp     rcx; switch jump"], ["lea~rsi,<TAG>", "movzx~ecx,cl", "movsxd~rcx,<TAG>", "add~rcx,rsi", "jmp~rcx"]], [1, 0, 184, 0, 0, 3, 0, 1, 21, 23, 0.43827849588719153, ["lea     ecx, [c-25h]", "cmp     cl, 53h ; 'S'; switch 84 cases", "ja      loc_A5BD; jumptable 000000000000A015 default case"], ["lea~ecx,[c-25h]+0]", "cmp~cl,0", "ja~FOO"]], [2, 0, 184, 1, 0, 5, 0, 0, 14, 14, 0.05707990599294947, ["add     np, 1", "movzx   r11d, byte ptr [np]", "lea     ebx, [r11-30h]", "cmp     bl, 9", "jbe     short loc_A408"], ["add~np,0", "movzx~r11d,<TAG>", "lea~ebx,[r11-30h]+0]", "cmp~bl,0", "jbe~FOO"]], [1, 0, 184, 1, 0, 5, 1, 1, 17, 8, 0.1394535840188014, ["shl     rbx, 5", "lea     rcx, [rax+rbx]", "mov     esi, [rcx]", "test    esi, esi", "jnz     loc_A6BF"], ["shl~rbx,0", "lea~rcx,<TAG>", "mov~esi,<TAG>", "test~esi,esi", "jnz~FOO"]], [1, 0, 184, 2, 0, 6, 0, 1, 16, 9, 0.1378084606345476, ["mov     rcx, [a]", "mov     rsi, rcx", "shl     rsi, 5", "add     rsi, rax", "cmp     rcx, rbx", "ja      short loc_A20E"], ["mov~rcx,<TAG>", "mov~rsi,rcx", "shl~rsi,0", "add~rsi,rax", "cmp~rcx,rbx", "ja~FOO"]], [1, 0, 184, 1, 0, 7, 0, 1, 27, 29, 0.02925969447708578, ["add     a_allocated_0, a_allocated_0", "lea     rsi, [r13+1]", "cmp     a_allocated_0, r13", "cmovbe  a_allocated_0, rsi", "mov     rsi, 7FFFFFFFFFFFFFFh", "cmp     a_allocated_0, rsi", "ja      out_of_memory"], ["add~a_allocated_0,a_allocated_0", "lea~rsi,[r13+0]", "cmp~a_allocated_0,r13", "cmovbe~a_allocated_0,rsi", "mov~rsi,0", "cmp~a_allocated_0,rsi", "ja~FOO"]], [0, 0, 184, 0, 0, 3, 0, 0, 26, 25, 0.186310223266745, ["cmp     a_allocated_0, r13", "mov     rax, [a+8]", "jbe     loc_A600"], ["cmp~a_allocated_0,r13", "mov~rax,[a+0]", "jbe~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 15, 13, 0.05749118683901293, ["cmp     r11b, 24h ; '$'", "jnz     loc_A145"], ["cmp~r11b,0", "jnz~FOO"]], [1, 2, 185, 1, 1, 16, 1, 2, 0, 20, 0.0, ["push    r15", "push    r14", "mov     r15, a", "push    r13", "push    r12", "mov     r14, d", "push    rbp", "push    rbx", "mov     rbx, format", "mov     edi, 58h ; 'X'; size", "sub     rsp, 48h", "mov     qword ptr [d], 0", "call    _malloc", "test    rax, rax", "mov     [d+8], rax", "jz      out_of_memory_1"], ["push~r15", "push~r14", "mov~r15,a", "push~r13", "push~r12", "mov~r14,d", "push~rbp", "push~rbx", "mov~rbx,format", "mov~edi,<STR>", "sub~rsp,<STR>", "mov~<TAG>,0", "call~FOO", "test~rax,rax", "mov~[d+0],rax", "jz~FOO"]], [2, 0, 184, 0, 0, 3, 0, 0, 23, 28, 0.008578143360752051, ["mov     ecx, 10h; jumptable 000000000000A015 case 46", "mov     ebx, 73h ; 's'", "nop     dword ptr [rax+00000000h]"], ["mov~ecx,0", "mov~ebx,0", "nop~[word ptr [rax+0]"]], [0, 0, 184, 0, 0, 1, 1, 0, 16, 17, 0.04274383078730905, ["xor     edi, edi"], ["xor~edi,edi"]], [1, 0, 184, 0, 0, 2, 0, 1, 24, 27, 0.18960047003525266, ["cmp     arg_index, 0FFFFFFFFFFFFFFFFh", "jz      loc_A67B"], ["cmp~arg_index,0", "jz~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.02814336075205633, ["cmp     eax, 0Fh; jumptable 000000000000A015 cases 51,74,80,83", "mov     ecx, 0Ah", "jg      loc_A028"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 24, 28, 0.01471797884841363, ["test    al, 4", "jnz     loc_A028"], ["test~al,0", "jnz~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 25, 28, 0.009841363102232667, ["cmp     eax, 7", "mov     ecx, 8", "jg      loc_A028"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [2, 0, 184, 0, 0, 3, 1, 1, 26, 28, 0.004935370152761457, ["test    al, 2", "mov     ecx, 2", "jnz     loc_A028"], ["test~al,0", "mov~ecx,0", "jnz~FOO"]], [4, 0, 184, 1, 0, 6, 2, 1, 27, 28, 0.0, ["and     eax, 1", "cmp     eax, 1", "sbb     ecx, ecx", "and     ecx, 2", "add     ecx, 4", "jmp     loc_A028"], ["and~eax,0", "cmp~eax,0", "sbb~ecx,ecx", "and~ecx,0", "add~ecx,0", "jmp~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.02814336075205633, ["cmp     eax, 0Fh; jumptable 000000000000A015 case 73", "mov     ecx, 16h", "jg      loc_A028"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 24, 28, 0.01471797884841363, ["test    al, 4", "jnz     loc_A028"], ["test~al,0", "jnz~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 25, 28, 0.009841363102232667, ["cmp     eax, 7", "mov     ecx, 15h", "jg      loc_A028"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [1, 1, 184, 0, 0, 3, 1, 1, 26, 28, 0.004935370152761457, ["test    al, 2", "mov     ecx, 12h", "jnz     loc_A028"], ["test~al,0", "mov~ecx,<STR>", "jnz~FOO"]], [2, 0, 184, 1, 0, 5, 2, 1, 27, 28, 0.0, ["xor     ecx, ecx", "test    al, 1", "setz    cl", "add     ecx, 13h", "jmp     loc_A028"], ["xor~ecx,ecx", "test~al,0", "setz~cl", "add~ecx,0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 23, 28, 0.008578143360752051, ["mov     ecx, 11h; jumptable 000000000000A015 case 75", "jmp     loc_A028"], ["mov~ecx,0", "jmp~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.008578143360752051, ["mov     ecx, 0Eh; jumptable 000000000000A015 case 30", "mov     ebx, 63h ; 'c'", "jmp     loc_A028"], ["mov~ecx,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 184, 1, 0, 5, 1, 1, 23, 28, 0.008578143360752051, ["xor     ecx, ecx; jumptable 000000000000A015 case 78", "cmp     eax, 7", "setnle  cl", "add     ecx, 0Fh", "jmp     loc_A028"], ["xor~ecx,ecx", "cmp~eax,0", "setnle~cl", "add~ecx,0", "jmp~FOO"]], [2, 0, 184, 1, 0, 5, 1, 1, 23, 28, 0.008578143360752051, ["xor     ecx, ecx; jumptable 000000000000A015 case 62", "cmp     eax, 7", "setnle  cl", "add     ecx, 0Dh", "jmp     loc_A028"], ["xor~ecx,ecx", "cmp~eax,0", "setnle~cl", "add~ecx,0", "jmp~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.02814336075205633, ["cmp     eax, 0Fh; jumptable 000000000000A015 cases 63,68", "mov     ecx, 9", "jg      loc_A028"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 24, 28, 0.01471797884841363, ["test    al, 4", "jnz     loc_A028"], ["test~al,0", "jnz~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 25, 28, 0.009841363102232667, ["cmp     eax, 7", "mov     ecx, 7", "jg      loc_A028"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [2, 0, 184, 0, 0, 3, 1, 1, 26, 28, 0.004935370152761457, ["test    al, 2", "mov     ecx, 1", "jnz     loc_A028"], ["test~al,0", "mov~ecx,0", "jnz~FOO"]], [4, 0, 184, 1, 0, 6, 2, 1, 27, 28, 0.0, ["and     eax, 1", "cmp     eax, 1", "sbb     ecx, ecx", "and     ecx, 2", "add     ecx, 3", "jmp     loc_A028"], ["and~eax,0", "cmp~eax,0", "sbb~ecx,ecx", "and~ecx,0", "add~ecx,0", "jmp~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.01351351351351347, ["cmp     eax, 0Fh; jumptable 000000000000A015 cases 28,32-34,60,64-66", "mov     ecx, 0Ch", "jg      loc_A028"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [2, 0, 184, 1, 0, 5, 2, 1, 24, 28, 0.0, ["xor     ecx, ecx", "test    al, 4", "setnz   cl", "add     ecx, 0Bh", "jmp     loc_A028"], ["xor~ecx,ecx", "test~al,0", "setnz~cl", "add~ecx,0", "jmp~FOO"]], [0, 0, 184, 1, 0, 6, 0, 0, 15, 9, 0.01063454759106933, ["mov     rsi, cp_0", "lea     rcx, [rbp+2]", "mov     rbp, cp_0", "sub     rsi, rdi", "cmp     max_width_length_0, rsi", "cmovb   max_width_length_0, rsi"], ["mov~rsi,cp_0", "lea~rcx,[rbp+0]", "mov~rbp,cp_0", "sub~rsi,rdi", "cmp~max_width_length_0,rsi", "cmovb~max_width_length_0,rsi"]], [1, 0, 184, 0, 0, 4, 0, 0, 14, 10, 0.015188014101057579, ["movzx   esi, byte ptr [cp_0]", "lea     ecx, [rsi-30h]", "cmp     cl, 9", "jbe     short loc_A390"], ["movzx~esi,<TAG>", "lea~ecx,[rsi-30h]+0]", "cmp~cl,0", "jbe~FOO"]], [2, 0, 184, 0, 0, 5, 0, 1, 18, 7, 0.12690951821386603, ["mov     dword ptr [rcx], 5", "movzx   ebx, byte ptr [rbp+0]", "lea     rcx, [rbp+1]", "cmp     bl, 2Eh ; '.'", "jnz     loc_9F9F"], ["mov~<TAG>,0", "movzx~ebx,[yte ptr [rbp+0]", "lea~rcx,[rbp+0]", "cmp~bl,0", "jnz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 25, 26, 0.1753819036427732, ["mov     [dp+50h], arg_index"], ["mov~[dp+0],arg_index"]], [0, 0, 184, 0, 0, 3, 1, 1, 2, 18, 0.43967391304347825, ["movzx   ecx, byte ptr [cp_0]", "test    cl, cl", "jnz     short loc_9E60"], ["movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [6, 0, 184, 0, 0, 10, 3, 1, 1, 19, 0.005346650998824912, ["mov     qword ptr [a], 0", "mov     qword ptr [a+8], 0", "xor     esi, esi", "mov     [rsp+78h+max_precision_length], 0", "xor     r10d, r10d", "xor     r8d, r8d", "mov     r9d, 1", "mov     [rsp+78h+arg_posn], 0", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "jmp     short loc_9E6C"], ["mov~<TAG>,0", "mov~[word ptr [a+0],0", "xor~esi,esi", "mov~[rsp+0],0", "xor~r10d,r10d", "xor~r8d,r8d", "mov~r9d,0", "mov~[rsp+0],0", "mov~rdx,0", "jmp~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 4, 19, 0.42851057579318447, ["mov     rbx, rbp"], ["mov~rbx,rbp"]], [0, 0, 184, 0, 0, 1, 1, 0, 19, 10, 0.04274383078730905, ["xor     r11d, r11d"], ["xor~r11d,r11d"]], [1, 0, 184, 0, 0, 2, 0, 1, 18, 5, 0.05749118683901293, ["cmp     dil, 24h ; '$'", "jnz     loc_A277"], ["cmp~dil,0", "jnz~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 26, 26, 0.0051410105757931845, ["mov     arg_index, [rsp+78h+arg_posn]", "mov     [rsp+78h+arg_posn], arg_posn_0", "jmp     loc_A037"], ["mov~arg_index,[rsp+0]", "mov~[rsp+0],arg_posn_0", "jmp~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 14, 6, 0.17273795534665098, ["cmp     byte ptr [rbp+1], 2Ah ; '*'", "mov     [dp+30h], rbp", "jnz     loc_A3C4"], ["cmp~[yte ptr [rbp+0],0", "mov~[dp+0],rbp", "jnz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 13, 7, 0.30608108108108106, ["cmp     bl, 2Eh ; '.'", "jz      loc_A237"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 184, 1, 0, 9, 1, 1, 28, 28, 0.0254406580493537, ["mov     rsi, a_allocated_0", "mov     [rsp+78h+var_40], a_allocated_0", "mov     [rsp+78h+d_allocated], r9", "shl     rsi, 5; size", "test    rax, rax", "mov     [rsp+78h+a_allocated], r10", "mov     [rsp+78h+max_width_length], rdx", "mov     dword ptr [rsp+78h+cp], ecx", "jz      loc_A6D5"], ["mov~rsi,a_allocated_0", "mov~[rsp+0],a_allocated_0", "mov~[rsp+0],r9", "shl~rsi,0", "test~rax,rax", "mov~[rsp+0],r10", "mov~[rsp+0],rdx", "mov~[word ptr [rsp+0],ecx", "jz~FOO"]], [0, 0, 184, 1, 0, 2, 0, 0, 18, 16, 0.0, ["lea     rsi, [n+n*4]", "add     rsi, rsi"], ["lea~rsi,<TAG>", "add~rsi,rsi"]], [2, 0, 184, 1, 0, 7, 0, 1, 17, 16, 0.043683901292596944, ["movsx   eax, sil", "mov     rbx, 1999999999999999h", "mov     rsi, rdx", "sub     eax, 30h ; '0'", "cmp     n, rbx", "cdqe", "ja      short loc_A447"], ["movsx~eax,sil", "mov~rbx,0", "mov~rsi,rdx", "sub~eax,0", "cmp~n,rbx", "cdqe~", "ja~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 18, 15, 0.044506462984723855, ["mov     rbp, np"], ["mov~rbp,np"]], [0, 0, 184, 0, 0, 3, 0, 1, 18, 4, 0.0051410105757931845, ["mov     rbx, [rsp+78h+arg_posn]", "mov     [rsp+78h+arg_posn], arg_posn_0", "jmp     loc_A286"], ["mov~rbx,[rsp+0]", "mov~[rsp+0],arg_posn_0", "jmp~FOO"]], [1, 0, 184, 2, 0, 6, 0, 1, 27, 24, 0.18331374853113983, ["mov     rsi, [a]", "mov     r11, rsi", "shl     r11, 5", "add     r11, rax", "cmp     rsi, r13", "ja      short loc_A077"], ["mov~rsi,<TAG>", "mov~r11,rsi", "shl~r11,0", "add~r11,rax", "cmp~rsi,r13", "ja~FOO"]], [0, 0, 184, 0, 0, 2, 0, 1, 31, 25, 0.0254406580493537, ["mov     [a+8], memory", "jmp     loc_A044"], ["mov~[a+0],memory", "jmp~FOO"]], [2, 0, 184, 1, 0, 6, 0, 1, 20, 9, 0.043683901292596944, ["mov     rdi, 1999999999999999h", "sub     eax, 30h ; '0'", "mov     rsi, rdx", "cmp     n, rdi", "cdqe", "ja      short loc_A85E"], ["mov~rdi,0", "sub~eax,0", "mov~rsi,rdx", "cmp~n,rdi", "cdqe~", "ja~FOO"]], [1, 0, 184, 0, 0, 2, 0, 0, 23, 6, 0.04471210340775558, ["cmp     bl, 9", "jbe     short loc_A840"], ["cmp~bl,0", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 28, 26, 0.009841363102232667, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 184, 0, 1, 7, 0, 1, 29, 27, 0.010443595769682726, ["mov     rdi, rax; ptr", "call    _realloc", "mov     ecx, dword ptr [rsp+78h+cp]", "mov     rdx, [rsp+78h+max_width_length]", "mov     r10, [rsp+78h+a_allocated]", "mov     r9, [rsp+78h+d_allocated]", "mov     r8, [rsp+78h+var_40]"], ["mov~rdi,rax", "call~FOO", "mov~ecx,[word ptr [rsp+0]", "mov~rdx,[rsp+0]", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]"]], [1, 0, 184, 1, 0, 6, 0, 1, 14, 20, 0.0051410105757931845, ["movsx   eax, bl", "mov     rdi, rdx", "mov     rsi, rbp", "sub     eax, 30h ; '0'", "cdqe", "jmp     loc_A32A"], ["movsx~eax,bl", "mov~rdi,rdx", "mov~rsi,rbp", "sub~eax,0", "cdqe~", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 13, 21, 0.008372502937720329, ["cmp     dil, 9", "ja      loc_A5BD; jumptable 000000000000A015 default case"], ["cmp~dil,0", "ja~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 21, 8, 0.044506462984723855, ["mov     rdi, np"], ["mov~rdi,np"]], [0, 0, 184, 1, 0, 2, 0, 0, 21, 9, 0.0, ["lea     rsi, [n+n*4]", "add     rsi, rsi"], ["lea~rsi,<TAG>", "add~rsi,rsi"]], [1, 0, 184, 2, 0, 9, 2, 1, 19, 14, 0.05543478260869565, ["xor     ebx, ebx", "add     rax, rsi", "movzx   esi, byte ptr [np+1]", "setb    bl", "add     np, 1", "mov     rdi, rax", "test    rbx, rbx", "lea     r11d, [rsi-30h]", "jnz     loc_A7DA"], ["xor~ebx,ebx", "add~rax,rsi", "movzx~esi,[yte ptr [np+0]", "setb~bl", "add~np,0", "mov~rdi,rax", "test~rbx,rbx", "lea~r11d,[rsi-30h]+0]", "jnz~FOO"]], [1, 0, 184, 1, 0, 6, 0, 1, 21, 15, 0.0051410105757931845, ["movsx   eax, sil", "mov     rbp, np", "mov     rsi, rdx", "sub     eax, 30h ; '0'", "cdqe", "jmp     loc_A44A"], ["movsx~eax,sil", "mov~rbp,np", "mov~rsi,rdx", "sub~eax,0", "cdqe~", "jmp~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 3, 17, 0.43484136310223265, ["cmp     cl, 25h ; '%'", "lea     rbp, [cp_0+1]", "jz      short loc_9EA0"], ["cmp~cl,0", "lea~rbp,[cp_0+0]", "jz~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 27, 20, 0.015349588719153937, ["mov     [d+8], memory", "mov     rsi, [d]", "jmp     loc_9E69"], ["mov~[d+0],memory", "mov~rsi,<TAG>", "jmp~FOO"]], [0, 0, 184, 0, 0, 2, 0, 1, 24, 20, 0.4071680376028202, ["mov     rax, [d+8]", "jmp     loc_9E69"], ["mov~rax,[d+0]", "jmp~FOO"]], [0, 0, 184, 0, 0, 2, 1, 1, 30, 26, 0.026674500587544066, ["test    memory, memory", "jz      loc_A6FA"], ["test~memory,memory", "jz~FOO"]], [0, 0, 184, 0, 1, 8, 0, 2, 29, 27, 0.010443595769682726, ["mov     rdi, memory_size; size", "call    _malloc", "mov     r8, [rsp+78h+var_40]", "mov     r9, [rsp+78h+d_allocated]", "mov     r10, [rsp+78h+a_allocated]", "mov     rdx, [rsp+78h+max_width_length]", "mov     ecx, dword ptr [rsp+78h+cp]", "jmp     loc_A669"], ["mov~rdi,memory_size", "call~FOO", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]", "mov~r10,[rsp+0]", "mov~rdx,[rsp+0]", "mov~ecx,[word ptr [rsp+0]", "jmp~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 18, -1, 0.011236780258519388, ["mov     rdi, [d+8]; ptr", "test    rdi, rdi", "jz      short out_of_memory_1"], ["mov~rdi,[d+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 17, -1, 0.021107520564042304, ["test    rax, rax", "jz      short loc_A70B"], ["test~rax,rax", "jz~FOO"]], [0, 0, 4, 0, 1, 2, 0, 1, 18, -1, 0.0, ["mov     rdi, rax; ptr", "call    free"], ["mov~rdi,rax", "call~FOO"]], [1, 0, 184, 0, 0, 2, 0, 0, 20, 13, 0.04471210340775558, ["cmp     r11b, 9", "jbe     short loc_A425"], ["cmp~r11b,0", "jbe~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 14, -1, 0.02144535840188014, ["mov     rax, [a+8]; jumptable 000000000000A015 default case"], ["mov~rax,[a+0]"]], [1, 0, 184, 0, 0, 5, 0, 1, 13, 12, 0.10005875440658049, ["mov     rdi, [rsp+78h+arg_posn]", "cmp     rdi, 0FFFFFFFFFFFFFFFFh", "lea     rcx, [rdi+1]", "mov     [dp+28h], rdi", "jz      loc_A5BD; jumptable 000000000000A015 default case"], ["mov~rdi,[rsp+0]", "cmp~rdi,0", "lea~rcx,[rdi+0]", "mov~[dp+0],rdi", "jz~FOO"]], [2, 0, 184, 1, 0, 4, 0, 1, 14, 17, 0.0445945945945946, ["mov     r13, n", "sub     r13, 1", "cmp     r13, 0FFFFFFFFFFFFFFFDh", "ja      loc_A5BD; jumptable 000000000000A015 default case"], ["mov~r13,n", "sub~r13,0", "cmp~r13,0", "ja~FOO"]], [2, 0, 184, 1, 0, 4, 0, 1, 21, 12, 0.0445945945945946, ["mov     rbx, n", "sub     rbx, 1", "cmp     rbx, 0FFFFFFFFFFFFFFFDh", "ja      loc_A5BD; jumptable 000000000000A015 default case"], ["mov~rbx,n", "sub~rbx,0", "cmp~rbx,0", "ja~FOO"]], [1, 0, 184, 0, 0, 5, 0, 1, 25, 27, 0.009665099882491186, ["mov     rsi, [rsp+78h+arg_posn]", "cmp     rsi, 0FFFFFFFFFFFFFFFFh", "lea     rax, [rsi+1]", "mov     [dp+50h], rsi", "jz      loc_A5BD; jumptable 000000000000A015 default case"], ["mov~rsi,[rsp+0]", "cmp~rsi,0", "lea~rax,[rsi+0]", "mov~[dp+0],rsi", "jz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 20, 16, 0.006169212690951821, ["cmp     r11b, 9", "ja      loc_A5BD; jumptable 000000000000A015 default case"], ["cmp~r11b,0", "ja~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 24, 5, 0.0445945945945946, ["lea     rbx, [n-1]", "cmp     rbx, 0FFFFFFFFFFFFFFFDh", "ja      loc_A5BD; jumptable 000000000000A015 default case"], ["lea~rbx,[n-1]+0]", "cmp~rbx,0", "ja~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 23, 9, 0.006169212690951821, ["cmp     bl, 9", "ja      loc_A5BD; jumptable 000000000000A015 default case"], ["cmp~bl,0", "ja~FOO"]], [3, 0, 184, 0, 0, 11, 0, 0, 15, 5, 0.14559341950646298, ["mov     rdi, [rsp+78h+max_precision_length]", "lea     rcx, [rbp+2]", "mov     eax, 2", "mov     [dp+38h], cp_0", "cmp     rdi, 2", "cmovnb  rax, rdi", "mov     [rsp+78h+max_precision_length], rax", "movsx   eax, byte ptr [rbp+2]", "lea     esi, [rax-30h]", "cmp     sil, 9", "jbe     loc_A81F"], ["mov~rdi,[rsp+0]", "lea~rcx,[rbp+0]", "mov~eax,0", "mov~[dp+0],cp_0", "cmp~rdi,0", "cmovnb~rax,rdi", "mov~[rsp+0],rax", "movsx~eax,[yte ptr [rbp+0]", "lea~esi,[rax-30h]+0]", "cmp~sil,0", "jbe~FOO"]], [2, 1, 184, 2, 0, 5, 0, 0, 29, 25, 0.010252643948296123, ["add     rsi, 1", "mov     dword ptr [r11], 0", "add     r11, 20h", "cmp     rsi, r13", "jbe     short loc_A060"], ["add~rsi,0", "mov~<TAG>,0", "add~r11,<STR>", "cmp~rsi,r13", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 30, 24, 0.010663924794359576, ["mov     [a], rsi"], ["mov~<TAG>,rsi"]], [1, 0, 184, 2, 0, 9, 2, 1, 22, 7, 0.05543478260869565, ["xor     ebp, ebp", "add     rsi, rax", "setb    bpl", "add     np, 1", "movsx   eax, byte ptr [rcx]", "test    rbp, rbp", "mov     r11, rsi", "lea     ebx, [rax-30h]", "jnz     short loc_A89D"], ["xor~ebp,ebp", "add~rsi,rax", "setb~bpl", "add~np,0", "movsx~eax,<TAG>", "test~rbp,rbp", "mov~r11,rsi", "lea~ebx,[rax-30h]+0]", "jnz~FOO"]], [1, 0, 184, 1, 0, 5, 0, 1, 24, 8, 0.0051410105757931845, ["sub     eax, 30h ; '0'", "mov     rsi, rdx", "mov     rdi, np", "cdqe", "jmp     short loc_A861"], ["sub~eax,0", "mov~rsi,rdx", "mov~rdi,np", "cdqe~", "jmp~FOO"]], [1, 0, 184, 1, 0, 5, 1, 1, 28, 23, 0.18495887191539365, ["shl     r13, 5", "lea     rsi, [rax+r13]", "mov     edi, [rsi]", "test    edi, edi", "jnz     loc_A5F1"], ["shl~r13,0", "lea~rsi,<TAG>", "mov~edi,<TAG>", "test~edi,edi", "jnz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 29, 22, 0.08660399529964748, ["mov     [rsi], ecx"], ["mov~<TAG>,ecx"]], [1, 0, 184, 1, 0, 3, 0, 1, 22, 11, 0.0445945945945946, ["mov     [dp+28h], rbx", "add     rbp, 2", "jmp     loc_A16A"], ["mov~[dp+0],rbx", "add~rbp,0", "jmp~FOO"]], [0, 0, 1, 0, 0, 7, 1, 0, 3, -1, 0.00024970622796709755, ["lea     rdx, [rsi+rsi*4]", "lea     rdx, [rsi+rdx*2]", "mov     [rax+rdx*8], cp_0", "mov     rax, [rsp+78h+max_precision_length]", "mov     [d+10h], max_width_length_0", "mov     [d+18h], rax", "xor     eax, eax"], ["lea~rdx,<TAG>", "lea~rdx,<TAG>", "mov~<TAG>,cp_0", "mov~rax,[rsp+0]", "mov~[d+0],max_width_length_0", "mov~[d+0],rax", "xor~eax,eax"]], [0, 0, 184, 0, 0, 3, 0, 0, 17, 3, 0.14703290246768508, ["cmp     a_allocated_0, rbx", "mov     rax, [a+8]", "jbe     loc_A740"], ["cmp~a_allocated_0,rbx", "mov~rax,[a+0]", "jbe~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 25, 4, 0.0445945945945946, ["mov     [dp+40h], rbx", "lea     rcx, [rdi+2]", "jmp     loc_A286"], ["mov~[dp+0],rbx", "lea~rcx,[rdi+0]", "jmp~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 2, -1, 0.0, ["add     rsp, 48h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     d", "pop     a", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~d", "pop~a", "retn"]], [2, 0, 1, 0, 1, 4, 0, 2, 17, -1, 0.00390716803760282, ["call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     eax, 0FFFFFFFFh", "jmp     loc_9E8E"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [2, 0, 1, 0, 1, 4, 0, 2, 1, -1, 0.001189776733254994, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch", "mov     eax, 0FFFFFFFFh", "jmp     loc_9E8E"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 184, 0, 0, 7, 0, 0, 23, 21, 0.43278495887191537, ["mov     [dp+48h], bl; jumptable 000000000000A015 case 0", "mov     rax, [d]", "mov     [dp+8], rbp", "lea     rsi, [rax+1]", "cmp     rsi, r9", "mov     [d], rsi", "jb      short loc_A115"], ["mov~[dp+0],bl", "mov~rax,<TAG>", "mov~[dp+0],rbp", "lea~rsi,[rax+0]", "cmp~rsi,r9", "mov~<TAG>,rsi", "jb~FOO"]], [0, 0, 184, 0, 0, 2, 0, 1, 29, 22, 0.09380141010575793, ["cmp     edi, ecx", "jz      loc_A08B; jumptable 000000000000A015 case 0"], ["cmp~edi,ecx", "jz~FOO"]], [1, 0, 184, 2, 0, 6, 0, 1, 18, 33, 0.1422150411280846, ["mov     rsi, [a]", "mov     rdi, rsi", "shl     rdi, 5", "add     rdi, rax", "cmp     rsi, rbx", "ja      short loc_A2BE"], ["mov~rsi,<TAG>", "mov~rdi,rsi", "shl~rdi,0", "add~rdi,rax", "cmp~rsi,rbx", "ja~FOO"]], [0, 0, 184, 0, 0, 2, 0, 1, 22, 34, 0.0254406580493537, ["mov     [a+8], memory", "jmp     loc_A293"], ["mov~[a+0],memory", "jmp~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 19, 35, 0.009841363102232667, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [1, 0, 184, 2, 0, 9, 2, 1, 12, 19, 0.057638072855464156, ["movzx   ebx, byte ptr [rbp+1]", "xor     r11d, r11d", "add     rax, rdi", "setb    r11b", "add     rbp, 1", "mov     rcx, rax", "test    r11, r11", "lea     edi, [rbx-30h]", "jnz     loc_A6A2"], ["movzx~ebx,[yte ptr [rbp+0]", "xor~r11d,r11d", "add~rax,rdi", "setb~r11b", "add~rbp,0", "mov~rcx,rax", "test~r11,r11", "lea~edi,[rbx-30h]+0]", "jnz~FOO"]], [0, 0, 184, 0, 0, 2, 1, 1, 24, 23, 0.021063454759106932, ["test    r9, r9", "js      loc_A6FA"], ["test~r9,r9", "js~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 16, 7, 0.05666862514688602, ["mov     rsi, cp_0"], ["mov~rsi,cp_0"]], [2, 1, 184, 2, 0, 5, 0, 0, 20, 34, 0.010252643948296123, ["add     rsi, 1", "mov     dword ptr [rdi], 0", "add     rdi, 20h", "cmp     rsi, rbx", "jbe     short loc_A2A8"], ["add~rsi,0", "mov~<TAG>,0", "add~rdi,<STR>", "cmp~rsi,rbx", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 21, 33, 0.010663924794359578, ["mov     [a], rsi"], ["mov~<TAG>,rsi"]], [1, 0, 184, 0, 0, 2, 0, 1, 18, 9, 0.007990599294947122, ["cmp     esi, 5", "jnz     error"], ["cmp~esi,0", "jnz~FOO"]], [1, 0, 184, 1, 0, 5, 1, 1, 19, 32, 0.14386016451233843, ["shl     rbx, 5", "lea     rsi, [rax+rbx]", "mov     edi, [rsi]", "test    edi, edi", "jnz     loc_A72E"], ["shl~rbx,0", "lea~rsi,<TAG>", "mov~edi,<TAG>", "test~edi,edi", "jnz~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 19, 8, 0.005992949471210341, ["movzx   ebx, byte ptr [rbp+0]", "lea     rcx, [rbp+1]", "jmp     loc_9F96"], ["movzx~ebx,[yte ptr [rbp+0]", "lea~rcx,[rbp+0]", "jmp~FOO"]], [0, 0, 184, 0, 1, 8, 0, 2, 20, 0, 0.010575793184488837, ["mov     rdi, memory_size; size", "call    _malloc", "mov     r8, [rsp+78h+var_40]", "mov     r9, [rsp+78h+d_allocated]", "mov     r10, [rsp+78h+a_allocated]", "mov     rdx, [rsp+78h+max_width_length]", "mov     rcx, [rsp+78h+cp]", "jmp     loc_A7A7"], ["mov~rdi,memory_size", "call~FOO", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]", "mov~r10,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "jmp~FOO"]], [1, 0, 184, 1, 0, 9, 1, 1, 19, 1, 0.025705052878965923, ["mov     rsi, a_allocated_0", "mov     [rsp+78h+var_40], a_allocated_0", "mov     [rsp+78h+d_allocated], r9", "shl     rsi, 5; size", "test    rax, rax", "mov     [rsp+78h+a_allocated], max_width_length_0", "mov     [rsp+78h+max_width_length], rdx", "mov     [rsp+78h+cp], cp_0", "jz      loc_A8B3"], ["mov~rsi,a_allocated_0", "mov~[rsp+0],a_allocated_0", "mov~[rsp+0],r9", "shl~rsi,0", "test~rax,rax", "mov~[rsp+0],max_width_length_0", "mov~[rsp+0],rdx", "mov~[rsp+0],cp_0", "jz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 20, -1, 0.007917156286721504, ["mov     rax, [a+8]"], ["mov~rax,[a+0]"]], [0, 0, 184, 0, 0, 2, 1, 1, 19, 11, 0.02743830787309048, ["test    memory, memory", "jz      loc_A6FA"], ["test~memory,memory", "jz~FOO"]], [0, 0, 184, 0, 0, 2, 1, 1, 21, 35, 0.026938895417156286, ["test    memory, memory", "jz      loc_A6FA"], ["test~memory,memory", "jz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 16, 34, 0.004935370152761457, ["nop"], ["nop"]], [2, 0, 184, 1, 0, 4, 0, 1, 15, 33, 0.022591069330199765, ["movzx   eax, byte ptr [rbp+1]", "sub     eax, 30h ; '0'", "cmp     al, 9", "ja      short loc_A3DE"], ["movzx~eax,[yte ptr [rbp+0]", "sub~eax,0", "cmp~al,0", "ja~FOO"]], [1, 0, 184, 0, 0, 4, 0, 1, 20, 31, 0.13125734430082256, ["mov     dword ptr [rsi], 5", "mov     rbp, rcx", "movzx   ebx, byte ptr [rcx]", "jmp     loc_9F9F"], ["mov~<TAG>,0", "mov~rbp,rcx", "movzx~ebx,<TAG>", "jmp~FOO"]], [0, 0, 184, 0, 0, 2, 0, 0, 6, 18, 0.06304347826086956, ["mov     rax, cp_0", "nop     dword ptr [rax+00h]"], ["mov~rax,cp_0", "nop~[word ptr [rax+0]"]], [0, 0, 184, 0, 0, 1, 0, 1, 5, 19, 0.0626321974148061, ["jmp     loc_A2E1"], ["jmp~FOO"]], [2, 0, 184, 1, 0, 5, 0, 0, 7, 17, 0.06345475910693302, ["add     np, 1", "movzx   ecx, byte ptr [np]", "lea     esi, [rcx-30h]", "cmp     sil, 9", "jbe     short loc_A2E8"], ["add~np,0", "movzx~ecx,<TAG>", "lea~esi,[rcx-30h]+0]", "cmp~sil,0", "jbe~FOO"]], [6, 0, 184, 0, 0, 17, 0, 1, 4, 16, 0.4350470035252644, ["lea     c, [rsi+rsi*4]", "mov     r13, rdx", "lea     rcx, [rsi+rcx*2]", "lea     r12, [rax+rcx*8]", "mov     [dp], rbx", "mov     dword ptr [dp+10h], 0", "mov     qword ptr [dp+18h], 0", "mov     qword ptr [dp+20h], 0", "mov     [dp+28h], rdx", "mov     qword ptr [dp+30h], 0", "mov     qword ptr [dp+38h], 0", "mov     [dp+40h], rdx", "mov     [dp+50h], rdx", "movzx   ebx, byte ptr [rbx+1]", "lea     eax, [rbx-30h]", "cmp     al, 9", "ja      short loc_9F26"], ["lea~c,<TAG>", "mov~r13,rdx", "lea~rcx,<TAG>", "lea~r12,<TAG>", "mov~<TAG>,rbx", "mov~[word ptr [dp+0],0", "mov~[word ptr [dp+0],0", "mov~[word ptr [dp+0],0", "mov~[dp+0],rdx", "mov~[word ptr [dp+0],0", "mov~[word ptr [dp+0],0", "mov~[dp+0],rdx", "mov~[dp+0],rdx", "movzx~ebx,[yte ptr [rbx+0]", "lea~eax,[rbx-30h]+0]", "cmp~al,0", "ja~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 8, 16, 0.06386603995299647, ["cmp     cl, 24h ; '$'", "mov     r13, rdx", "jnz     loc_9F26"], ["cmp~cl,0", "mov~r13,rdx", "jnz~FOO"]], [0, 0, 184, 0, 1, 7, 0, 2, 18, 12, 0.010825499412455935, ["mov     rdi, memory_size; size", "call    _malloc", "mov     r8, [rsp+78h+d_allocated]", "mov     r9, [rsp+78h+a_allocated]", "mov     r10, [rsp+78h+max_width_length]", "mov     rdx, [rsp+78h+cp]", "jmp     loc_A1D4"], ["mov~rdi,memory_size", "call~FOO", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]", "mov~r10,[rsp+0]", "mov~rdx,[rsp+0]", "jmp~FOO"]], [1, 0, 184, 1, 0, 8, 1, 1, 17, 13, 0.026204465334900118, ["mov     rsi, a_allocated_0", "mov     [rsp+78h+d_allocated], a_allocated_0", "mov     [rsp+78h+a_allocated], d_allocated_0", "shl     rsi, 5; size", "test    rax, rax", "mov     [rsp+78h+max_width_length], max_width_length_0", "mov     [rsp+78h+cp], rdx", "jz      loc_A7B9"], ["mov~rsi,a_allocated_0", "mov~[rsp+0],a_allocated_0", "mov~[rsp+0],d_allocated_0", "shl~rsi,0", "test~rax,rax", "mov~[rsp+0],max_width_length_0", "mov~[rsp+0],rdx", "jz~FOO"]], [1, 0, 184, 1, 0, 7, 0, 1, 16, 14, 0.03381316098707403, ["add     a_allocated_0, a_allocated_0", "lea     rcx, [rbx+1]", "cmp     a_allocated_0, rbx", "cmovbe  a_allocated_0, rcx", "mov     rcx, 7FFFFFFFFFFFFFFh", "cmp     a_allocated_0, rcx", "ja      out_of_memory"], ["add~a_allocated_0,a_allocated_0", "lea~rcx,[rbx+0]", "cmp~a_allocated_0,rbx", "cmovbe~a_allocated_0,rcx", "mov~rcx,0", "cmp~a_allocated_0,rcx", "ja~FOO"]], [1, 0, 184, 1, 0, 7, 0, 1, 18, 2, 0.03108108108108108, ["add     a_allocated_0, a_allocated_0", "lea     rsi, [rbx+1]", "cmp     a_allocated_0, rbx", "cmovbe  a_allocated_0, rsi", "mov     rsi, 7FFFFFFFFFFFFFFh", "cmp     a_allocated_0, rsi", "ja      short out_of_memory"], ["add~a_allocated_0,a_allocated_0", "lea~rsi,[rbx+0]", "cmp~a_allocated_0,rbx", "cmovbe~a_allocated_0,rsi", "mov~rsi,0", "cmp~a_allocated_0,rsi", "ja~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 6, 14, 0.46630434782608693, ["cmp     bl, 2Dh ; '-'", "jz      short loc_9F40"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 184, 0, 0, 4, 0, 1, 5, 15, 0.4754994124559342, ["lea     rax, [rbp+1]", "cmp     bl, 27h ; '''", "mov     rcx, rax", "jnz     short loc_9F00"], ["lea~rax,[rbp+0]", "cmp~bl,0", "mov~rcx,rax", "jnz~FOO"]], [0, 0, 184, 0, 0, 1, 1, 0, 9, 22, 0.04494712103407755, ["xor     ecx, ecx"], ["xor~ecx,ecx"]], [2, 0, 184, 1, 0, 5, 0, 0, 17, 6, 0.05707990599294947, ["add     np, 1", "movzx   edi, byte ptr [np]", "lea     r11d, [rdi-30h]", "cmp     r11b, 9", "jbe     short loc_A822"], ["add~np,0", "movzx~edi,<TAG>", "lea~r11d,[rdi-30h]+0]", "cmp~r11b,0", "jbe~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 7, 13, 0.46166274970622795, ["cmp     bl, 2Bh ; '+'", "jz      short loc_9F50"], ["cmp~bl,0", "jz~FOO"]], [0, 0, 2, 0, 1, 1, 0, 1, 17, -1, 0.0, ["call    free"], ["call~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 16, -1, 0.014130434782608696, ["mov     rdi, [d+8]; ptr", "test    rdi, rdi", "jz      short loc_A5DC"], ["mov~rdi,[d+0]", "test~rdi,rdi", "jz~FOO"]], [0, 1, 184, 0, 0, 2, 0, 1, 8, 12, 0.4569623971797885, ["cmp     bl, 20h ; ' '", "jz      short loc_9F60"], ["cmp~bl,<STR>", "jz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 9, 11, 0.45220329024676853, ["cmp     bl, 23h ; '#'", "jz      short loc_9F70"], ["cmp~bl,0", "jz~FOO"]], [0, 0, 2, 0, 1, 1, 0, 1, 19, -1, 0.0, ["call    free"], ["call~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 10, 10, 0.44738542890716804, ["cmp     bl, 30h ; '0'", "jnz     short loc_9F80"], ["cmp~bl,0", "jnz~FOO"]], [2, 0, 184, 1, 0, 7, 0, 1, 10, 21, 0.04588719153936545, ["movsx   eax, bl", "mov     rsi, 1999999999999999h", "mov     rdi, rdx", "sub     eax, 30h ; '0'", "cmp     n, rsi", "cdqe", "ja      short loc_A327"], ["movsx~eax,bl", "mov~rsi,0", "mov~rdi,rdx", "sub~eax,0", "cmp~n,rsi", "cdqe~", "ja~FOO"]], [1, 0, 184, 0, 0, 2, 0, 0, 13, 18, 0.04471210340775558, ["cmp     dil, 9", "jbe     short loc_A306"], ["cmp~dil,0", "jbe~FOO"]], [0, 1, 184, 0, 0, 2, 1, 0, 11, 17, 0.0003231492361927144, ["or      dword ptr [dp+10h], 20h", "nop"], ["or~[word ptr [dp+0],<STR>", "nop"]], [0, 0, 184, 0, 0, 2, 0, 0, 7, 16, 0.032961222091656875, ["movzx   ebx, byte ptr [rax]", "mov     rbp, rax"], ["movzx~ebx,<TAG>", "mov~rbp,rax"]], [1, 0, 184, 0, 0, 2, 1, 1, 6, 17, 0.004641598119858989, ["or      dword ptr [dp+10h], 1", "jmp     short loc_9F20"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 7, 17, 8.813160987074031e-05, ["or      dword ptr [dp+10h], 2", "jmp     short loc_9F20"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 8, 17, 0.00014688601645123384, ["or      dword ptr [dp+10h], 4", "jmp     short loc_9F20"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 9, 17, 0.00020564042303172737, ["or      dword ptr [dp+10h], 8", "jmp     short loc_9F20"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 10, 17, 0.0002643948296122209, ["or      dword ptr [dp+10h], 10h", "jmp     short loc_9F20"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [0, 0, 184, 1, 0, 2, 0, 0, 11, 21, 0.0, ["lea     rdi, [n+n*4]", "add     rdi, rdi"], ["lea~rdi,<TAG>", "add~rdi,rdi"]], [0, 0, 184, 0, 0, 1, 0, 0, 11, 20, 0.04670975323149236, ["mov     rsi, rbp"], ["mov~rsi,rbp"]], [0, 0, 184, 0, 0, 3, 0, 1, 15, 16, 0.0445945945945946, ["lea     rbp, [rsi+2]", "movzx   ebx, byte ptr [rsi+2]", "jmp     loc_9F26"], ["lea~rbp,[rsi+0]", "movzx~ebx,[yte ptr [rsi+0]", "jmp~FOO"]], [0, 0, 6, 0, 0, 1, 0, 1, 21, -1, 0.002408930669800235, ["jmp     error"], ["jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 11, 9, 0.44250881316098706, ["cmp     bl, 2Ah ; '*'", "jz      loc_A11E"], ["cmp~bl,0", "jz~FOO"]], [0, 0, 184, 0, 0, 3, 0, 0, 14, 11, 0.0949764982373678, ["mov     rbx, [rsp+78h+arg_posn]", "mov     rbp, cp_0", "mov     [rsp+78h+arg_posn], arg_posn_0"], ["mov~rbx,[rsp+0]", "mov~rbp,cp_0", "mov~[rsp+0],arg_posn_0"]], [0, 0, 184, 0, 0, 3, 0, 1, 15, 10, 0.145358401880141, ["cmp     a_allocated_0, rbx", "mov     rax, [a+8]", "ja      short loc_A1E1"], ["cmp~a_allocated_0,rbx", "mov~rax,[a+0]", "ja~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 17, 31, 8.813160987074031e-05, ["or      eax, 4", "jmp     short loc_9FD3"], ["or~eax,0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 16, 28, 0.45193889541715626, ["cmp     bl, 4Ch ; 'L'", "jz      short loc_9FF0"], ["cmp~bl,0", "jz~FOO"]], [2, 0, 184, 1, 0, 6, 0, 0, 13, 10, 0.02444183313748531, ["mov     [dp+18h], rbp", "movzx   esi, byte ptr [rbp+0]", "mov     rdi, rbp", "sub     esi, 30h ; '0'", "cmp     sil, 9", "jbe     short loc_A397"], ["mov~[dp+0],rbp", "movzx~esi,[yte ptr [rbp+0]", "mov~rdi,rbp", "sub~esi,0", "cmp~sil,0", "jbe~FOO"]], [1, 0, 184, 0, 0, 3, 0, 0, 12, 8, 0.2918331374853114, ["lea     esi, [rbx-30h]", "cmp     sil, 9", "jbe     loc_A36F"], ["lea~esi,[rbx-30h]+0]", "cmp~sil,0", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 1, 14, 9, 0.010076380728554641, ["jmp     short loc_A3B6"], ["jmp~FOO"]], [1, 0, 184, 1, 0, 2, 0, 0, 15, 11, 0.0, ["mov     rbp, cp_0", "add     cp_0, 1"], ["mov~rbp,cp_0", "add~cp_0,0"]], [0, 0, 184, 0, 0, 3, 0, 1, 15, 8, 0.026498237367802584, ["mov     [dp+20h], rbp", "movzx   ebx, byte ptr [rbp+0]", "jmp     loc_9F96"], ["mov~[dp+0],rbp", "movzx~ebx,[yte ptr [rbp+0]", "jmp~FOO"]], [0, 0, 184, 0, 1, 7, 0, 1, 20, 36, 0.010575793184488837, ["mov     rdi, rax; ptr", "call    _realloc", "mov     rcx, [rsp+78h+cp]", "mov     rdx, [rsp+78h+max_width_length]", "mov     r10, [rsp+78h+a_allocated]", "mov     r9, [rsp+78h+d_allocated]", "mov     r8, [rsp+78h+var_40]"], ["mov~rdi,rax", "call~FOO", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]"]], [1, 0, 184, 0, 0, 3, 1, 1, 14, 30, 0.43334312573443007, ["xor     eax, eax", "mov     esi, 1", "jmp     short loc_9FD7"], ["xor~eax,eax", "mov~esi,0", "jmp~FOO"]], [2, 0, 184, 1, 0, 3, 0, 1, 15, 29, 0.461192714453584, ["add     rbp, 1", "cmp     bl, 68h ; 'h'", "jnz     short loc_9FB0"], ["add~rbp,0", "cmp~bl,0", "jnz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 17, 27, 0.4472972972972973, ["cmp     bl, 6Ch ; 'l'", "jz      short loc_9FD0"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 18, 26, 0.4427144535840188, ["cmp     bl, 6Ah ; 'j'", "jz      short loc_9FD0"], ["cmp~bl,0", "jz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 15, -1, 0.024118683901292598, ["test    rax, rax", "jz      short loc_A5CE"], ["test~rax,rax", "jz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 1, 30, -1, 0.002408930669800235, ["jmp     short error"], ["jmp~FOO"]], [2, 0, 184, 0, 0, 4, 1, 1, 19, 25, 0.4429200940070505, ["mov     ecx, ebx", "and     ecx, 0FFFFFFDFh", "cmp     cl, 5Ah ; 'Z'", "jz      short loc_9FD0"], ["mov~ecx,ebx", "and~ecx,0", "cmp~cl,0", "jz~FOO"]], [0, 0, 4, 0, 1, 2, 0, 1, 16, -1, 0.0, ["mov     rdi, rax; ptr", "call    free"], ["mov~rdi,rax", "call~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 20, 24, 0.443096357226792, ["cmp     bl, 74h ; 't'", "jnz     short loc_9FF8"], ["cmp~bl,0", "jnz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 21, 32, 0.0002643948296122209, ["xchg    ax, ax"], ["xchg~ax,ax"]], [0, 0, 184, 0, 1, 6, 0, 1, 18, 12, 0.010825499412455935, ["mov     rdi, rax; ptr", "call    _realloc", "mov     rdx, [rsp+78h+cp]", "mov     r10, [rsp+78h+max_width_length]", "mov     r9, [rsp+78h+a_allocated]", "mov     r8, [rsp+78h+d_allocated]"], ["mov~rdi,rax", "call~FOO", "mov~rdx,[rsp+0]", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]"]], [1, 0, 184, 1, 0, 1, 0, 0, 18, 31, 0.006110458284371329, ["add     eax, 8"], ["add~eax,0"]], [0, 0, 184, 0, 0, 1, 0, 0, 17, 30, 0.022062279670975328, ["movzx   ebx, byte ptr [rbp+0]"], ["movzx~ebx,[yte ptr [rbp+0]"]], [1, 0, 184, 1, 0, 6, 2, 1, 16, 31, 0.004700352526439483, ["mov     ecx, eax", "mov     edi, esi", "and     ecx, 1", "shl     edi, cl", "or      eax, edi", "jmp     short loc_9FD3"], ["mov~ecx,eax", "mov~edi,esi", "and~ecx,0", "shl~edi,cl", "or~eax,edi", "jmp~FOO"]], [3, 0, 184, 2, 0, 5, 0, 0, 17, 33, 0.005346650998824913, ["add     cp_0, 1", "movzx   eax, byte ptr [cp_0]", "sub     eax, 30h ; '0'", "cmp     al, 9", "jbe     short loc_A3D0"], ["add~cp_0,0", "movzx~eax,<TAG>", "sub~eax,0", "cmp~al,0", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 20, 10, 0.0254406580493537, ["mov     [a+8], memory"], ["mov~[a+0],memory"]]], "func_feature": [14, 58, 138, 1, 186, 294, 1, 687, 0.08677, 1, 63], "succs": [[170], [0, 158], [0], [14], [3, 84], [9, 5], [5], [83, 61], [100, 7], [15], [120, 75], [120, 10], [34, 35, 36, 37, 38, 105, 43, 83, 21, 24, 29], [83, 12], [19, 14], [115, 47], [6, 15], [80, 57], [17, 62], [84, 22], [104, 50], [23], [59], [48, 87], [25, 23], [26, 23], [27, 23], [28, 23], [23], [30, 23], [31, 23], [32, 23], [33, 23], [23], [23], [23], [23], [23], [39, 23], [40, 23], [41, 23], [42, 23], [23], [44, 23], [23], [168], [45, 167], [170, 55], [18], [74, 99], [49], [49], [64], [8, 52], [18], [91, 124], [170, 55], [67, 78], [60], [58, 60], [72], [100], [96, 66], [62], [70, 71], [64, 89], [92], [77], [110], [83, 68], [94], [70], [88, 82], [72], [129, 51], [51], [51], [120, 63], [77], [144, 104], [81, 79], [79], [59, 86], [174], [160, 83], [83, 157], [98, 83], [83, 54], [73, 83], [83, 101], [83, 95], [8, 112], [92, 93], [96], [65, 90], [94], [97, 106], [105], [161], [102], [107, 134], [100], [], [102], [102], [76, 111], [105, 175], [116, 109], [107], [113], [147, 69], [120, 11], [138], [113, 114], [116], [117, 174], [1, 125], [56], [122], [169, 118], [80], [120, 185], [120, 108], [184], [2, 123], [170], [128], [126], [128, 130], [136, 127], [136, 137], [121], [131, 180], [80, 132], [80, 119], [139, 151], [150, 135], [146], [138, 53], [152, 142], [103], [140, 103], [153, 143], [145, 154], [104], [148, 159], [155, 156], [146, 85], [149], [136], [149], [149], [149], [149], [149], [156], [110], [136], [174], [4, 165], [161], [16, 133], [182], [162, 172], [46, 166], [56, 164], [168], [46], [56], [122], [171], [163, 183], [173, 181], [176, 181], [177, 141], [174], [178, 181], [141], [179, 13], [181], [121], [182], [171], [182], [184, 2], [16]], "fname": "printf_parse", "n_num": 186}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 0, 0, 0, 0.16666666666666666, ["xor     ebx, ebx", "nop     dword ptr [rax+rax+00000000h]"], ["xor~ebx,ebx", "nop~[word ptr [rax+0]"]], [2, 0, 3, 2, 1, 17, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15, rdx", "push    r13", "push    r12", "lea     r12, __frame_dummy_init_array_entry", "push    rbp", "lea     rbp, __do_global_dtors_aux_fini_array_entry", "push    rbx", "mov     r13d, edi", "mov     r14, rsi", "sub     rbp, r12", "sub     rsp, 8", "sar     rbp, 3", "call    _init_proc", "test    rbp, rbp", "jz      short loc_A936"], ["push~r15", "push~r14", "mov~r15,rdx", "push~r13", "push~r12", "lea~r12,<TAG>", "push~rbp", "lea~rbp,<TAG>", "push~rbx", "mov~r13d,edi", "mov~r14,rsi", "sub~rbp,r12", "sub~rsp,0", "sar~rbp,0", "call~FOO", "test~rbp,rbp", "jz~FOO"]], [1, 0, 2, 1, 1, 7, 0, 2, 2, 1, 0.16666666666666666, ["mov     rdx, r15", "mov     rsi, r14", "mov     edi, r13d", "call    qword ptr [r12+rbx*8]", "add     rbx, 1", "cmp     rbp, rbx", "jnz     short loc_A920"], ["mov~rdx,r15", "mov~rsi,r14", "mov~edi,r13d", "call~<TAG>", "add~rbx,0", "cmp~rbp,rbx", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 5, 0, 34, 0.08333, 2, 4], "succs": [[2], [0, 3], [2, 3], []], "fname": "__libc_csu_init", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_csu_fini", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rdx, cs:__dso_handle", "xor     esi, esi", "jmp     ___cxa_atexit"], ["mov~rdx,<TAG>", "xor~esi,esi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 1, 3, 0.0, 1, 0], "succs": [[1], []], "fname": "atexit", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[2, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0.0, ["sub     rsp, 8; _fini", "add     rsp, 8", "retn"], ["sub~rsp,0", "add~rsp,0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 2], "succs": [[]], "fname": "term_proc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn endgrent:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "endgrent", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __snprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__snprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp_free:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp_free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn abort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __errno_location:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fpending:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn qsort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "qsort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fcntl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn textdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fclose:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn opendir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "opendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getpwuid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getpwuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn bindtextdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn stpcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "stpcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dcgettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_get_mb_cur_max:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strlen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __lxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__lxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn openat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "openat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __stack_chk_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getopt_long:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbrtowc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getgrgid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getgrgid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstatat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstatat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strrchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __assert_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn close:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __openat_2:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__openat_2", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn closedir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "closedir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __libc_start_main:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_start_main", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fputs_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn calloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dirfd:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dirfd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getpwnam:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getpwnam", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getgrnam:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getgrnam", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __xstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__xstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn readdir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "readdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn malloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn endpwent:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "endpwent", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fchdir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fchdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn realloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn setlocale:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __printf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memmove:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn error:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn open:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fchown:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fchown", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fdopendir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fdopendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strtoul:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strtoul", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __cxa_atexit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fchownat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fchownat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fwrite:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbsinit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswprint:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp___cxa_finalize:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp___cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_b_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O3_chown.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __gmon_start__:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__gmon_start__", "n_num": 1}
