{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    rax ; __gmon_start__"], ["call~rax"]], [1, 0, 2, 1, 0, 4, 1, 1, 0, 1, 0.0, ["sub     rsp, 8; _init", "mov     rax, cs:__gmon_start___ptr", "test    rax, rax", "jz      short loc_2BB2"], ["sub~rsp,0", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 3, 1, 7, 0.0, 1, 2], "succs": [[2], [0, 2], []], "fname": "init_proc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0.0, ["push    cs:qword_219D00", "jmp     cs:qword_219D08"], ["push~<TAG>", "jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 86, 2, 0.0, 2, 0], "succs": [[]], "fname": "sub_2BC0", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_toupper_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_toupper_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getenv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 11, 1, 0.0, 1, 0], "succs": [[]], "fname": "getenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigprocmask_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigprocmask", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__snprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "__snprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:raise_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "raise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:localtime_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "localtime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strverscmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "strverscmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:abort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 14, 1, 0.0, 1, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__errno_location_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 24, 1, 0.0, 1, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strncpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strncpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strncmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "strcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fpending_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:isatty_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "isatty", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigaction_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigaction", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswcntrl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswcntrl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:localeconv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "localeconv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:readlink_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "readlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:clock_gettime_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "clock_gettime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:textdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fclose_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:opendir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "opendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpwuid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpwuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:bindtextdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dcgettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 58, 1, 0.0, 1, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_get_mb_cur_max_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strlen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 39, 1, 0.0, 1, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__lxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__lxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__stack_chk_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 24, 1, 0.0, 1, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getopt_long_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbrtowc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 8, 1, 0.0, 1, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getgrgid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getgrgid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_obstack_begin_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "_obstack_begin", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__overflow_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 17, 1, 0.0, 1, 0], "succs": [[]], "fname": "__overflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strrchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 17, 1, 0.0, 1, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:gettimeofday_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "gettimeofday", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__assert_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 7, 1, 0.0, 1, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__strtoul_internal_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__strtoul_internal", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fnmatch_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fnmatch", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 27, 1, 0.0, 1, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ioctl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:closedir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "closedir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strndup_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strndup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_setjmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "_setjmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fputs_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 32, 1, 0.0, 1, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:calloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 35, 1, 0.0, 1, 0], "succs": [[]], "fname": "strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:signal_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "signal", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dirfd_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "dirfd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpwnam_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpwnam", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__memcpy_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__memcpy_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigemptyset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigemptyset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 21, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getgrnam_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getgrnam", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:tcgetpgrp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "tcgetpgrp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__xstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "__xstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:readdir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "readdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:wcwidth_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "wcwidth", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strcoll_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strcoll", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mktime_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mktime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fwrite_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 7, 1, 0.0, 1, 0], "succs": [[]], "fname": "fwrite_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:realloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 12, 1, 0.0, 1, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:setlocale_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_obstack_newchunk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "_obstack_newchunk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__printf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 8, 1, 0.0, 1, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strftime_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strftime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mempcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "mempcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memmove_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:error_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 16, 1, 0.0, 1, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strtoul_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strtoul", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_atexit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigismember_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigismember", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fwrite_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 11, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fflush_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fflush_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbsinit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswprint_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigaddset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigaddset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_tolower_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_tolower_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_b_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__sprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 10, 1, 0.0, 1, 0], "succs": [[]], "fname": "__sprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:free_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 49, 1, 0.0, 1, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:malloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 19, 1, 0.0, 1, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_finalize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[2, 1, 315, 0, 0, 4, 0, 1, 0, 0, 7.971014492753623e-05, ["mov     cs:human_output_opts, 90h; jumptable 0000000000003448 case 271", "mov     cs:output_block_size, 1", "mov     cs:file_output_block_size, 1", "jmp     loc_3408"], ["mov~<TAG>,<STR>", "mov~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 315, 1, 0, 3, 0, 1, 11, 24, 0.06708796764408494, ["movsxd  rax, dword ptr [r13+rax*4+0]", "add     rax, r13", "jmp     rax; switch jump"], ["movsxd~rax,[word ptr [r13+0]", "add~rax,r13", "jmp~rax"]], [2, 0, 101, 0, 1, 5, 0, 2, 32, 9, 0.011463599595551063, ["mov     rsi, [rsp+3D8h+file]; filename", "mov     edi, 1; ver", "call    ___xstat", "shr     eax, 1Fh", "jmp     loc_3E1F"], ["mov~rsi,[rsp+0]", "mov~edi,0", "call~FOO", "shr~eax,0", "jmp~FOO"]], [0, 0, 101, 0, 1, 5, 1, 2, 31, 10, 0.02740984159083249, ["mov     rdi, rax; dirp", "call    _dirfd", "test    eax, eax", "mov     rdx, [rsp+3D8h+stat_buf]; stat_buf", "js      loc_47F2"], ["mov~rdi,rax", "call~FOO", "test~eax,eax", "mov~rdx,[rsp+0]", "js~FOO"]], [1, 0, 315, 0, 0, 2, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     cs:qmark_funny_chars, 0; jumptable 0000000000003448 case 270", "jmp     loc_3408"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 148, 0, 1, 4, 1, 2, 20, 15, 0.024873609706774522, ["mov     edi, 1; fd", "call    _tcgetpgrp", "test    eax, eax", "js      loc_3C40"], ["mov~edi,0", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 152, 0, 1, 4, 1, 2, 20, 16, 0.005000842601954837, ["mov     edi, 0Ch; type", "call    is_colored", "test    al, al", "jz      loc_4004"], ["mov~edi,0", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 151, 0, 0, 2, 0, 1, 21, 16, 0.001575665655544321, ["cmp     cs:format_0, 0", "jnz     loc_4004"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 149, 0, 0, 1, 0, 0, 19, 16, 0.020816481294236605, ["mov     cs:check_symlink_color, 1"], ["mov~<TAG>,0"]], [0, 0, 164, 0, 1, 3, 0, 1, 24, 20, 0.0, ["mov     r12, [rdi+20h]", "call    free", "mov     rdi, r12; ptr"], ["mov~r12,[rdi+0]", "call~FOO", "mov~rdi,r12"]], [0, 0, 164, 0, 0, 2, 1, 1, 23, 19, 0.03581479609032693, ["test    rdi, rdi", "jnz     short loc_43FA"], ["test~rdi,rdi", "jnz~FOO"]], [1, 0, 101, 1, 0, 5, 0, 0, 30, 1, 0.015866194809571958, ["mov     rax, cs:dev_ino_obstack.next_free", "mov     rdx, rax", "sub     rdx, cs:dev_ino_obstack.object_base", "cmp     edx, 0Fh", "jbe     loc_4FE3"], ["mov~rax,<TAG>", "mov~rdx,rax", "sub~rdx,<TAG>", "cmp~edx,0", "jbe~FOO"]], [0, 0, 101, 0, 0, 2, 1, 1, 29, 2, 0.018469834850016853, ["test    rax, rax", "jz      loc_4809"], ["test~rax,rax", "jz~FOO"]], [0, 0, 147, 0, 1, 6, 0, 1, 21, 21, 0.012807549713515337, ["lea     r13, sig_8184", "lea     rdi, caught_signals; set", "lea     r14, [rsp+3D8h+act]", "mov     r12, r13", "call    _sigemptyset", "nop     dword ptr [rax+00000000h]"], ["lea~r13,<TAG>", "lea~rdi,<TAG>", "lea~r14,[rsp+0]", "mov~r12,r13", "call~FOO", "nop~[word ptr [rax+0]"]], [1, 0, 101, 0, 1, 4, 0, 1, 32, 8, 0.0, ["lea     rdi, dev_ino_obstack; struct obstack *", "mov     esi, 0FFFFFFF0h; int", "call    __obstack_newchunk", "mov     rax, cs:dev_ino_obstack.next_free"], ["lea~rdi,<TAG>", "mov~esi,0", "call~FOO", "mov~rax,<TAG>"]], [1, 0, 101, 1, 0, 4, 0, 1, 31, 8, 0.011375126390293226, ["mov     rdx, cs:dev_ino_obstack.chunk_limit", "sub     rdx, rax", "cmp     rdx, 0FFFFFFFFFFFFFFF0h", "jge     short loc_484B"], ["mov~rdx,<TAG>", "sub~rdx,rax", "cmp~rdx,0", "jge~FOO"]], [1, 0, 147, 0, 1, 7, 1, 2, 22, 20, 0.012445230872935626, ["mov     r15d, [r12]", "xor     esi, esi; act", "mov     rdx, r14; oact", "mov     edi, r15d; sig", "call    _sigaction", "cmp     qword ptr [rsp+3D8h+act.__sigaction_handler], 1", "jz      short loc_4060"], ["mov~r15d,<TAG>", "xor~esi,esi", "mov~rdx,r14", "mov~edi,r15d", "call~FOO", "cmp~[word ptr [rsp+0],0", "jz~FOO"]], [1, 0, 147, 1, 0, 4, 0, 1, 23, 19, 0.011653185035389283, ["lea     rax, unk_13370", "add     r12, 4", "cmp     rax, r12", "jnz     short loc_4038"], ["lea~rax,<TAG>", "add~r12,0", "cmp~rax,r12", "jnz~FOO"]], [1, 0, 315, 0, 2, 12, 1, 3, 12, 23, 7.971014492753623e-05, ["mov     r9, cs:argmatch_die; jumptable 0000000000003448 case 269", "mov     rsi, cs:optarg@@GLIBC_2_2_5; arg", "lea     rcx, quoting_style_vals; vallist", "lea     rdx, quoting_style_args; arglist", "lea     rdi, aQuotingStyle_0; \"--quoting-style\"", "mov     r8d, 4; valsize", "call    __xargmatch_internal", "lea     rdx, quoting_style_vals", "xor     edi, edi; o", "mov     esi, [rdx+rax*4]; s", "call    set_quoting_style", "jmp     loc_3408"], ["mov~r9,<TAG>", "mov~rsi,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "lea~rdi,<TAG>", "mov~r8d,0", "call~FOO", "lea~rdx,<TAG>", "xor~edi,edi", "mov~esi,<TAG>", "call~FOO", "jmp~FOO"]], [0, 0, 147, 0, 1, 3, 0, 1, 23, 20, 0.0, ["lea     rdi, caught_signals; set", "mov     esi, r15d; signo", "call    _sigaddset"], ["lea~rdi,<TAG>", "mov~esi,r15d", "call~FOO"]], [1, 0, 186, 0, 0, 3, 0, 1, 20, 22, 0.04502864846646445, ["cmp     edx, 3", "mov     rax, qword ptr [rsp+3D8h+longind]", "jz      short loc_431E"], ["cmp~edx,0", "mov~rax,[word ptr [rsp+0]", "jz~FOO"]], [1, 0, 186, 0, 0, 2, 0, 1, 24, 23, 0.0013734411863835525, ["mov     edx, 1", "jmp     loc_42B4"], ["mov~edx,0", "jmp~FOO"]], [2, 0, 186, 1, 0, 4, 0, 1, 25, 23, 0.00021065048870913381, ["add     rax, 1", "mov     edx, 1", "mov     qword ptr [rsp+3D8h+longind], rax", "jmp     loc_42B4"], ["add~rax,0", "mov~edx,0", "mov~[word ptr [rsp+0],rax", "jmp~FOO"]], [1, 0, 186, 0, 0, 2, 0, 1, 25, 23, 0.00022750252780586453, ["mov     edx, 4", "jmp     loc_42B4"], ["mov~edx,0", "jmp~FOO"]], [4, 0, 186, 0, 1, 8, 0, 1, 19, 23, 0.03842264914054601, ["mov     rdi, rax; string", "mov     word ptr [rsp+3D8h+s1], 3F3Fh", "mov     [rsp+3D8h+var_2D6], 0", "call    xstrdup", "mov     qword ptr [rsp+3D8h+serious], 0", "mov     cs:color_buf, rax", "mov     edx, 1", "mov     [rsp+3D8h+di_0.st_ino], rax"], ["mov~rdi,rax", "mov~[ord ptr [rsp+0],0", "mov~[rsp+0],0", "call~FOO", "mov~[word ptr [rsp+0],0", "mov~<TAG>,rax", "mov~edx,0", "mov~[rsp+0],rax"]], [0, 0, 101, 0, 1, 11, 1, 2, 32, 7, 0.007735085945399394, ["lea     rdx, [rax-10h]", "mov     rsi, [rsp+3D8h+val]; entry", "mov     rdi, cs:active_dir_set; table", "mov     cs:dev_ino_obstack.next_free, rdx", "mov     rdx, [rax-10h]", "mov     rax, [rax-8]", "mov     [rsp+3D8h+di_0.st_ino], rdx", "mov     [rsp+3D8h+di_0.st_dev], rax", "call    hash_delete", "test    found, found", "jz      loc_4B8C"], ["lea~rdx,[rax-10h]+0]", "mov~rsi,[rsp+0]", "mov~rdi,<TAG>", "mov~<TAG>,rdx", "mov~rdx,[rax-10h]+0]", "mov~rax,[rax-8]+0]", "mov~[rsp+0],rdx", "mov~[rsp+0],rax", "call~FOO", "test~found,found", "jz~FOO"]], [1, 0, 186, 0, 0, 2, 0, 1, 21, 22, 0.018377148634984835, ["cmp     edx, 4", "jz      loc_4C0C"], ["cmp~edx,0", "jz~FOO"]], [1, 1, 143, 0, 0, 6, 0, 0, 24, 18, 0.011223458038422651, ["lea     rdi, [rsp+3D8h+act.sa_mask]", "lea     rsi, caught_signals", "mov     ecx, 20h ; ' '", "rep movsd", "mov     [rsp+3D8h+act.sa_flags], 10000000h", "xchg    ax, ax"], ["lea~rdi,[rsp+0]", "lea~rsi,<TAG>", "mov~ecx,<STR>", "movsd~<TAG>,<TAG>", "mov~[rsp+0],0", "xchg~ax,ax"]], [1, 0, 315, 0, 1, 11, 0, 2, 12, 23, 7.971014492753623e-05, ["mov     r9, cs:argmatch_die; jumptable 0000000000003448 case 268", "mov     rsi, cs:optarg@@GLIBC_2_2_5; arg", "lea     rdx, indicator_style_args; arglist", "lea     rcx, indicator_style_types; vallist", "lea     rdi, aIndicatorStyle_0; \"--indicator-style\"", "mov     r8d, 4; valsize", "call    __xargmatch_internal", "lea     rdx, indicator_style_types", "mov     eax, [rdx+rax*4]", "mov     cs:indicator_style_0, eax", "jmp     loc_3408"], ["mov~r9,<TAG>", "mov~rsi,<TAG>", "lea~rdx,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "mov~r8d,0", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>", "mov~<TAG>,eax", "jmp~FOO"]], [0, 0, 101, 0, 4, 9, 0, 5, 33, 6, 0.003244017526120661, ["mov     rdi, found; ptr", "call    free", "mov     rdi, [thispend]; ptr", "call    free", "mov     rdi, [thispend+8]; ptr", "call    free", "mov     rdi, thispend; ptr", "call    free", "jmp     loc_3D81"], ["mov~rdi,found", "call~FOO", "mov~rdi,<TAG>", "call~FOO", "mov~rdi,[thispend+0]", "call~FOO", "mov~rdi,thispend", "call~FOO", "jmp~FOO"]], [0, 0, 143, 0, 1, 6, 1, 2, 25, 17, 0.010793731041456017, ["mov     r15d, [r13+0]", "lea     rdi, caught_signals; set", "mov     esi, r15d; signo", "call    _sigismember", "test    eax, eax", "jz      short loc_40CF"], ["mov~r15d,[r13+0]", "lea~rdi,<TAG>", "mov~esi,r15d", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 143, 1, 0, 3, 0, 1, 26, 16, 0.009866868891135827, ["add     r13, 4", "cmp     r12, r13", "jnz     short loc_4090"], ["add~r13,0", "cmp~r12,r13", "jnz~FOO"]], [1, 0, 315, 0, 1, 8, 0, 2, 12, 23, 7.971014492753623e-05, ["mov     edi, 10h; jumptable 0000000000003448 case 267", "call    xmalloc", "mov     rdx, cs:optarg@@GLIBC_2_2_5", "mov     [rax], rdx", "mov     rdx, cs:hide_patterns", "mov     cs:hide_patterns, rax", "mov     [rax+8], rdx", "jmp     loc_3408"], ["mov~edi,0", "call~FOO", "mov~rdx,<TAG>", "mov~<TAG>,rdx", "mov~rdx,<TAG>", "mov~<TAG>,rax", "mov~[rax+0],rdx", "jmp~FOO"]], [14, 0, 336, 0, 1, 19, 1, 2, 2, 29, 0.02264914054600607, ["lea     rdi, name; \"QUOTING_STYLE\"", "mov     cs:time_type_0, 0", "mov     cs:sort_type_0, 0", "mov     cs:sort_reverse, 0", "mov     cs:numeric_ids, 0", "mov     cs:print_block_size, 0", "mov     cs:indicator_style_0, 0", "mov     cs:print_inode, 0", "mov     cs:dereference, 1", "mov     cs:recursive, 0", "mov     cs:immediate_dirs, 0", "mov     cs:ignore_mode, 0", "mov     cs:ignore_patterns, 0", "mov     cs:hide_patterns, 0", "mov     cs:print_scontext, 0", "call    _getenv", "test    rax, rax", "mov     r12, rax", "jz      short loc_3303"], ["lea~rdi,<TAG>", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "call~FOO", "test~rax,rax", "mov~r12,rax", "jz~FOO"]], [2, 0, 337, 0, 0, 3, 0, 1, 4, 30, 0.002839568587799124, ["mov     cs:format_0, 2", "mov     cs:qmark_funny_chars, 1", "jmp     loc_3240"], ["mov~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [2, 0, 337, 0, 1, 5, 1, 2, 1, 30, 0.002839568587799124, ["mov     esi, 5; s", "xor     edi, edi; o", "mov     cs:format_0, 2", "call    set_quoting_style", "jmp     loc_3240"], ["mov~esi,0", "xor~edi,edi", "mov~<TAG>,0", "call~FOO", "jmp~FOO"]], [1, 0, 337, 0, 0, 2, 0, 1, 4, 30, 0.002839568587799124, ["mov     cs:format_0, 1", "jmp     loc_3240"], ["mov~<TAG>,0", "jmp~FOO"]], [2, 0, 337, 0, 1, 4, 1, 1, 2, 30, 0.002839568587799124, ["mov     esi, 5; s", "xor     edi, edi; o", "mov     cs:format_0, 0", "call    set_quoting_style"], ["mov~esi,0", "xor~edi,edi", "mov~<TAG>,0", "call~FOO"]], [1, 0, 315, 0, 0, 2, 0, 1, 13, 23, 0.0, ["mov     cs:ignore_mode, 1", "jmp     loc_3408"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 315, 0, 0, 2, 0, 1, 12, 23, 0.0009391641388608022, ["cmp     cs:ignore_mode, 0; jumptable 0000000000003448 case 196", "jnz     loc_3408"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 143, 0, 1, 9, 1, 1, 26, 17, 0.0, ["lea     rax, stophandler", "lea     rcx, sighandler", "cmp     r15d, 14h", "mov     rsi, r14; act", "mov     edi, r15d; sig", "cmovnz  rax, rcx", "xor     edx, edx; oact", "mov     qword ptr [rsp+3D8h+act.__sigaction_handler], rax", "call    _sigaction"], ["lea~rax,<TAG>", "lea~rcx,<TAG>", "cmp~r15d,0", "mov~rsi,r14", "mov~edi,r15d", "cmovnz~rax,rcx", "xor~edx,edx", "mov~[word ptr [rsp+0],rax", "call~FOO"]], [1, 0, 101, 0, 2, 9, 1, 3, 30, 7, 0.0047185709470845974, ["lea     rsi, aCannotOpenDire; \"cannot open directory %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdx, [rsp+3D8h+file]; file", "mov     edi, dword ptr [rsp+3D8h+serious]; serious", "mov     rsi, rax; message", "call    file_failure", "jmp     loc_3D61"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdx,[rsp+0]", "mov~edi,[word ptr [rsp+0]", "mov~rsi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 101, 0, 2, 12, 1, 3, 29, 8, 0.1666161105493765, ["movzx   eax, byte ptr [thispend+10h]", "mov     dword ptr [rsp+3D8h+serious], eax", "mov     rax, [thispend+8]", "mov     [rsp+3D8h+var_3B0], rax", "call    ___errno_location", "mov     rdi, [rsp+3D8h+file]; name", "mov     dword ptr [rax], 0", "mov     r12, rax", "call    _opendir", "test    rax, rax", "mov     r13, rax", "jz      loc_48A8"], ["movzx~eax,[yte ptr [thispend+0]", "mov~[word ptr [rsp+0],eax", "mov~rax,[thispend+0]", "mov~[rsp+0],rax", "call~FOO", "mov~rdi,[rsp+0]", "mov~<TAG>,0", "mov~r12,rax", "call~FOO", "test~rax,rax", "mov~r13,rax", "jz~FOO"]], [0, 0, 139, 0, 0, 1, 0, 1, 27, 15, 0.009369733737782273, ["jmp     loc_3C40"], ["jmp~FOO"]], [0, 0, 101, 0, 1, 4, 0, 2, 36, 12, 0.0, ["mov     esi, dword ptr [rsp+3D8h+serious]; command_line_arg", "mov     rdi, [rsp+3D8h+file]; dirname", "call    extract_dirs_from_files", "jmp     loc_45C9"], ["mov~esi,[word ptr [rsp+0]", "mov~rdi,[rsp+0]", "call~FOO", "jmp~FOO"]], [1, 0, 101, 0, 1, 3, 0, 2, 35, 12, 0.08894506235254467, ["call    sort_files", "cmp     cs:recursive, 0", "jnz     loc_48D1"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 315, 0, 0, 3, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     cs:format_0, 0; jumptable 0000000000003448 case 265", "lea     r15, aFullIso; \"full-iso\"", "jmp     loc_3408"], ["mov~<TAG>,0", "lea~r15,<TAG>", "jmp~FOO"]], [1, 0, 132, 0, 1, 9, 2, 2, 19, 14, 0.003471520053926525, ["lea     r8, dev_ino_free; data_freer", "lea     rcx, dev_ino_compare; comparator", "lea     rdx, dev_ino_hash; hasher", "xor     esi, esi; tuning", "mov     edi, 1Eh; candidate", "call    hash_initialize", "test    rax, rax", "mov     cs:active_dir_set, rax", "jz      loc_427B"], ["lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [1, 0, 133, 0, 0, 2, 0, 1, 18, 13, 0.22973542298618135, ["cmp     cs:recursive, 0", "jnz     loc_40DD"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 315, 0, 1, 11, 0, 2, 12, 23, 7.971014492753623e-05, ["mov     r9, cs:argmatch_die; jumptable 0000000000003448 case 264", "mov     rsi, cs:optarg@@GLIBC_2_2_5; arg", "lea     rdx, format_args; arglist", "lea     rcx, format_types; vallist", "lea     rdi, aFormat; \"--format\"", "mov     r8d, 4; valsize", "call    __xargmatch_internal", "lea     rdx, format_types", "mov     eax, [rdx+rax*4]", "mov     cs:format_0, eax", "jmp     loc_3408"], ["mov~r9,<TAG>", "mov~rsi,<TAG>", "lea~rdx,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "mov~r8d,0", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>", "mov~<TAG>,eax", "jmp~FOO"]], [0, 0, 131, 0, 1, 7, 2, 2, 20, 13, 0.001095382541287496, ["mov     r8, cs:free_ptr; void (*)(void *)", "mov     rcx, cs:malloc_ptr; void *(*)(__int64)", "lea     rdi, dev_ino_obstack; struct obstack *", "xor     edx, edx; int", "xor     esi, esi; int", "call    __obstack_begin", "jmp     loc_3C5A"], ["mov~r8,<TAG>", "mov~rcx,<TAG>", "lea~rdi,<TAG>", "xor~edx,edx", "xor~esi,esi", "call~FOO", "jmp~FOO"]], [1, 0, 315, 0, 0, 2, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     cs:indicator_style_0, 2; jumptable 0000000000003448 case 263", "jmp     loc_3408"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 101, 1, 0, 1, 0, 0, 44, 8, 0.00645433097404786, ["add     cs:dired_pos, 1"], ["add~<TAG>,0"]], [1, 0, 101, 0, 1, 3, 0, 2, 43, 9, 0.003715874620829121, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     loc_46DF"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [1, 0, 101, 0, 0, 3, 0, 0, 43, 9, 0.003715874620829121, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [1, 0, 333, 0, 3, 14, 4, 4, 4, 29, 0.0014029322548028314, ["mov     rdi, r12; arg", "call    quotearg", "lea     rsi, aIgnoringInvali_0; \"ignoring invalid value of environment v\"...", "mov     r12, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_3303"], ["mov~rdi,r12", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 335, 0, 1, 7, 1, 2, 3, 30, 0.00015166835187057636, ["lea     rdx, quoting_style_vals; vallist", "lea     rsi, quoting_style_args; arglist", "mov     ecx, 4; valsize", "mov     rdi, rax; arg", "call    argmatch", "test    eax, eax", "js      loc_490D"], ["lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~ecx,0", "mov~rdi,rax", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 315, 0, 0, 2, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     cs:dereference, 4; jumptable 0000000000003448 case 262", "jmp     loc_3408"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 31, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___8187; \"main\"", "lea     rsi, file; \"ls.c\"", "lea     rdi, assertion; \"hash_get_n_entries (active_dir_set) == \"...", "mov     edx, 560h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 3, 0, 1, 3, 1, 2, 30, -1, 0.005594876980114594, ["call    hash_get_n_entries", "test    rax, rax", "jz      loc_4CDA"], ["call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 154, 0, 1, 4, 1, 2, 19, 17, 0.006167846309403438, ["mov     edi, 0Eh; type", "call    is_colored", "test    al, al", "jz      short loc_415B"], ["mov~edi,0", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 155, 0, 1, 4, 1, 2, 18, 17, 0.026879002359285475, ["mov     edi, 0Dh; type", "call    is_colored", "test    al, al", "jz      loc_4140"], ["mov~edi,0", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 315, 0, 0, 3, 1, 1, 12, 24, 0.004221435793731042, ["mov     rsi, cs:optarg@@GLIBC_2_2_5; jumptable 0000000000003448 case 261", "test    rsi, rsi", "jz      loc_3B2F"], ["mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [1, 0, 153, 0, 0, 2, 0, 1, 20, 17, 8.426019548365353e-06, ["cmp     cs:color_symlink_as_referent, 0", "jnz     loc_3FFD"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 189, 0, 0, 4, 0, 1, 16, 15, 0.2372851365015167, ["cmp     cs:print_with_color, 0", "mov     eax, cs:optind@@GLIBC_2_2_5", "mov     dword ptr [rsp+3D8h+file], eax", "jnz     loc_3FCC"], ["cmp~<TAG>,0", "mov~eax,<TAG>", "mov~[word ptr [rsp+0],eax", "jnz~FOO"]], [3, 0, 192, 1, 0, 5, 0, 1, 15, 16, 0.09349932591843614, ["mov     eax, cs:time_type_0", "mov     cs:dired, 0", "sub     eax, 1", "cmp     eax, 1", "ja      short loc_3C29"], ["mov~eax,<TAG>", "mov~<TAG>,0", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 190, 0, 0, 2, 0, 1, 17, 16, 0.001600943714189417, ["mov     cs:sort_type_0, 4", "jmp     loc_3C29"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 216, 0, 0, 2, 0, 1, 15, 16, 0.12216043141220088, ["cmp     cs:format_0, 0", "jnz     loc_3C29"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 190, 0, 0, 1, 0, 1, 20, 16, 0.007204246713852377, ["jmp     loc_3C29"], ["jmp~FOO"]], [0, 0, 190, 0, 0, 3, 0, 1, 22, 16, 0.008004718570947086, ["mov     cs:long_time_format, r15", "mov     cs:long_time_format+8, r14", "jmp     loc_3C29"], ["mov~<TAG>,r15", "mov~<TAG>,r14", "jmp~FOO"]], [1, 0, 195, 0, 0, 2, 0, 1, 22, 16, 0.0052325581395348845, ["cmp     eax, 3", "jnz     loc_3C29"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 194, 0, 1, 4, 1, 2, 23, 16, 0.0033619817997977757, ["mov     edi, 2; category", "call    hard_locale", "test    al, al", "jz      loc_3C29"], ["mov~edi,0", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 190, 0, 0, 2, 0, 1, 26, 16, 0.0008004718570947085, ["mov     cs:long_time_format+8, rax", "jmp     loc_3C29"], ["mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 190, 0, 0, 4, 0, 1, 21, 16, 0.001600943714189417, ["lea     rax, aYMDHMSNZ; \"%Y-%m-%d %H:%M:%S.%N %z\"", "mov     cs:long_time_format+8, rax", "mov     cs:long_time_format, rax", "jmp     loc_3C29"], ["lea~rax,<TAG>", "mov~<TAG>,rax", "mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 190, 0, 0, 5, 0, 1, 22, 16, 0.0008004718570947085, ["lea     rax, aYMD; \"%Y-%m-%d \"", "mov     cs:long_time_format, rax", "lea     rax, aMDHM; \"%m-%d %H:%M\"", "mov     cs:long_time_format+8, rax", "jmp     loc_3C29"], ["lea~rax,<TAG>", "mov~<TAG>,rax", "lea~rax,<TAG>", "mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 190, 0, 0, 4, 0, 1, 20, 16, 0.009605662285136502, ["lea     rax, unk_1362A", "mov     cs:long_time_format+8, rax", "mov     cs:long_time_format, rax", "jmp     loc_3C29"], ["lea~rax,<TAG>", "mov~<TAG>,rax", "mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 191, 0, 0, 2, 0, 1, 16, 16, 0.0004929221435793731, ["cmp     byte ptr [rsp+3D8h+file], 0", "jz      loc_3EEF"], ["cmp~[yte ptr [rsp+0],0", "jz~FOO"]], [0, 0, 150, 0, 0, 1, 0, 1, 22, 17, 1.6852039096730706e-05, ["jmp     loc_3FFD"], ["jmp~FOO"]], [0, 0, 120, 0, 2, 15, 4, 3, 22, 10, 0.0, ["mov     r13, cs:free_ptr", "mov     r12, cs:malloc_ptr", "lea     rdi, dired_obstack; struct obstack *", "xor     edx, edx; int", "xor     esi, esi; int", "mov     r8, r13; void (*)(void *)", "mov     rcx, r12; void *(*)(__int64)", "call    __obstack_begin", "lea     rdi, subdired_obstack; struct obstack *", "mov     r8, r13; void (*)(void *)", "mov     rcx, r12; void *(*)(__int64)", "xor     edx, edx; int", "xor     esi, esi; int", "call    __obstack_begin", "jmp     loc_3C98"], ["mov~r13,<TAG>", "mov~r12,<TAG>", "lea~rdi,<TAG>", "xor~edx,edx", "xor~esi,esi", "mov~r8,r13", "mov~rcx,r12", "call~FOO", "lea~rdi,<TAG>", "mov~r8,r13", "mov~rcx,r12", "xor~edx,edx", "xor~esi,esi", "call~FOO", "jmp~FOO"]], [2, 0, 121, 0, 0, 4, 1, 1, 21, 10, 0.21949780923491743, ["mov     cs:format_needs_type, al", "and     cs:format_needs_type, 1", "cmp     cs:dired, 0", "jnz     loc_4941"], ["mov~<TAG>,al", "and~<TAG>,0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 207, 0, 0, 2, 0, 1, 19, 18, 0.006740815638692282, ["cmp     byte ptr [r15], 2Bh ; '+'", "jnz     loc_4D10"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 212, 0, 1, 6, 1, 2, 18, 18, 0.014779238287832829, ["mov     edx, 6; n", "mov     rsi, r13; s2", "mov     rdi, r15; s1", "call    _strncmp", "test    eax, eax", "jnz     loc_4AE6"], ["mov~edx,0", "mov~rsi,r13", "mov~rdi,r15", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 128, 0, 0, 2, 0, 1, 21, 12, 0.00884732052578362, ["cmp     cs:print_scontext, 0", "jnz     loc_3C75"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 129, 0, 0, 2, 0, 1, 20, 12, 0.010566228513650152, ["cmp     cs:format_0, 0", "jnz     loc_417F"], ["cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 315, 0, 1, 10, 0, 2, 13, 24, 0.002553083923154702, ["mov     r9, cs:argmatch_die; exit_fn", "lea     rdx, color_args; arglist", "lea     rcx, color_types; vallist", "lea     rdi, aColor; \"--color\"", "mov     r8d, 4; valsize", "call    __xargmatch_internal", "lea     rdx, color_types", "mov     eax, [rdx+rax*4]", "cmp     eax, 1", "jz      loc_3B2F"], ["mov~r9,<TAG>", "lea~rdx,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "mov~r8d,0", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 127, 0, 0, 2, 0, 1, 22, 12, 0.007111560498820358, ["cmp     cs:print_block_size, 0", "jnz     loc_3C75"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 315, 0, 0, 2, 0, 1, 14, 24, 0.0017104819683181666, ["cmp     eax, 2", "jz      loc_3B1D"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 315, 0, 0, 2, 0, 1, 15, 23, 0.00393495112908662, ["mov     cs:print_with_color, 0", "jmp     loc_3408"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 315, 0, 1, 4, 1, 2, 15, 24, 8.426019548365353e-06, ["mov     edi, 1; fd", "call    _isatty", "test    eax, eax", "jz      loc_399B"], ["mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [3, 0, 101, 1, 1, 7, 0, 2, 40, 13, 0.0, ["mov     rcx, cs:stdout@@GLIBC_2_2_5; stream", "lea     rdi, asc_13472; \"  \"", "mov     edx, 2; n", "mov     esi, 1; size", "call    _fwrite_unlocked", "add     cs:dired_pos, 2", "jmp     loc_4607"], ["mov~rcx,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "mov~esi,0", "call~FOO", "add~<TAG>,0", "jmp~FOO"]], [1, 0, 101, 0, 0, 2, 0, 1, 39, 13, 0.02101449275362319, ["cmp     cs:dired, 0", "jnz     loc_4980"], ["cmp~<TAG>,0", "jnz~FOO"]], [3, 0, 125, 0, 0, 4, 0, 1, 23, 11, 0.005872935625210651, ["cmp     cs:recursive, 0", "mov     cs:format_needs_stat, 0", "mov     eax, 1", "jnz     loc_3C7E"], ["cmp~<TAG>,0", "mov~<TAG>,0", "mov~eax,0", "jnz~FOO"]], [1, 0, 124, 0, 0, 2, 0, 1, 24, 11, 0.0035894843276036404, ["cmp     cs:print_with_color, 0", "jnz     loc_3C7E"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 315, 0, 1, 6, 1, 2, 12, 24, 0.0017273340074148973, ["mov     rdi, cs:optarg@@GLIBC_2_2_5; jumptable 0000000000003448 case 260", "lea     rdx, output_block_size; block_size", "lea     rsi, human_output_opts; opts", "call    human_options", "test    eax, eax", "jnz     loc_4FC8"], ["mov~rdi,<TAG>", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 123, 0, 0, 2, 0, 1, 25, 11, 0.0018031681833501855, ["cmp     cs:indicator_style_0, 0", "jnz     loc_3C7E"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 122, 0, 0, 2, 0, 1, 26, 11, 0.0, ["movzx   eax, cs:directories_first", "jmp     loc_3C7E"], ["movzx~eax,<TAG>", "jmp~FOO"]], [0, 0, 315, 0, 0, 3, 0, 1, 13, 23, 0.00262891809908999, ["mov     rax, cs:output_block_size", "mov     cs:file_output_block_size, rax", "jmp     loc_3408"], ["mov~rax,<TAG>", "mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 316, 0, 3, 14, 4, 4, 9, 24, 0.0013313110886417259, ["mov     rdi, r12; arg", "call    quotearg", "lea     rsi, aIgnoringInvali_1; \"ignoring invalid tab size in environmen\"...", "mov     r12, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_33E6"], ["mov~rdi,r12", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 318, 0, 1, 8, 4, 2, 8, 25, 0.00043815301651499834, ["mov     rcx, [rsp+3D8h+val]; val", "xor     r8d, r8d; valid_suffixes", "xor     edx, edx; strtol_base", "xor     esi, esi; ptr", "mov     rdi, rax; s", "call    xstrtoul", "test    eax, eax", "jnz     loc_49AA"], ["mov~rcx,[rsp+0]", "xor~r8d,r8d", "xor~edx,edx", "xor~esi,esi", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 315, 0, 0, 2, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     cs:print_author, 1; jumptable 0000000000003448 case 259", "jmp     loc_3408"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 113, 0, 1, 3, 0, 2, 25, 8, 0.01327098078867543, ["call    sort_files", "cmp     cs:immediate_dirs, 0", "jnz     short loc_41F2"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 114, 0, 0, 2, 0, 1, 24, 7, 0.213422649140546, ["cmp     cs:cwd_n_used, 0", "jnz     loc_41D8"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 331, 0, 1, 4, 1, 2, 4, 28, 0.00010953825412874959, ["lea     rdi, aLsBlockSize+3; name", "call    _getenv", "test    rax, rax", "jnz     loc_3331"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 332, 0, 2, 9, 1, 3, 3, 28, 0.03356926188068757, ["lea     rdi, aLsBlockSize; \"LS_BLOCK_SIZE\"", "call    _getenv", "lea     rdx, output_block_size; block_size", "lea     rsi, human_output_opts; opts", "mov     r12, rax", "mov     rdi, rax; spec", "call    human_options", "test    r12, r12", "jz      loc_49DE"], ["lea~rdi,<TAG>", "call~FOO", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~r12,rax", "mov~rdi,rax", "call~FOO", "test~r12,r12", "jz~FOO"]], [1, 0, 315, 0, 0, 2, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     cs:format_0, 3; jumptable 0000000000003448 case 251", "jmp     loc_3408"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 329, 0, 0, 1, 0, 1, 5, 27, 0.0013860802157061006, ["jmp     loc_333F"], ["jmp~FOO"]], [1, 0, 111, 0, 0, 2, 0, 1, 26, 7, 0.01134984833164813, ["cmp     cs:cwd_n_used, 0", "jz      loc_3D0B"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 112, 0, 1, 3, 1, 1, 26, 8, 0.0, ["mov     esi, 1; command_line_arg", "xor     edi, edi; dirname", "call    extract_dirs_from_files"], ["mov~esi,0", "xor~edi,edi", "call~FOO"]], [0, 0, 104, 0, 0, 2, 1, 1, 26, 7, 0.040040444893832156, ["test    r15, r15", "jnz     loc_4E8F"], ["test~r15,r15", "jnz~FOO"]], [1, 0, 105, 1, 0, 3, 0, 1, 25, 6, 0.1994944388270981, ["sub     r13d, 1", "mov     r15, cs:pending_dirs", "jle     loc_49F8"], ["sub~r13d,0", "mov~r15,<TAG>", "jle~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 27, -1, 0.048078867542972706, ["cmp     cs:print_with_color, 0", "jz      loc_4A9C"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 101, 0, 0, 2, 1, 1, 27, 4, 0.20437310414560164, ["test    r15, r15", "jz      loc_4A01"], ["test~r15,r15", "jz~FOO"]], [1, 0, 106, 0, 1, 3, 0, 2, 27, 9, 0.008164812942366028, ["call    print_current_files", "cmp     cs:pending_dirs, 0", "jz      loc_4A01"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [10, 0, 345, 1, 4, 35, 1, 5, 0, 31, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, argv", "mov     ebp, edi", "mov     edi, 6; category", "sub     rsp, 3A8h", "mov     rax, fs:28h", "mov     [rsp+3D8h+var_40], rax", "xor     eax, eax", "mov     rax, [argv]", "lea     argv, aReportBugsToS+16h; locale", "mov     cs:program_name, rax", "call    _setlocale", "lea     rsi, dirname; \"/usr/local/share/locale\"", "lea     rdi, domainname; \"coreutils\"", "call    _bindtextdomain", "lea     rdi, domainname; \"coreutils\"", "call    _textdomain", "lea     rdi, close_stdout", "mov     cs:exit_failure, 2", "call    atexit", "mov     rax, 8000000000000000h", "mov     cs:exit_status, 0", "mov     cs:print_dir_name, 1", "mov     cs:current_time.tv_sec, rax", "mov     eax, cs:ls_mode", "mov     cs:pending_dirs, 0", "mov     cs:current_time.tv_nsec, 0FFFFFFFFFFFFFFFFh", "mov     cs:qmark_funny_chars, 0", "cmp     eax, 2", "jz      loc_3EB6"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,argv", "mov~ebp,edi", "mov~edi,0", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "lea~argv,<TAG>", "mov~<TAG>,rax", "call~FOO", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "mov~<TAG>,0", "call~FOO", "mov~rax,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,rax", "mov~eax,<TAG>", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 28, -1, 0.026794742163801823, ["cmp     cs:used_color, 0", "jz      short loc_4A2F"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 315, 0, 0, 2, 0, 1, 13, 24, 0.0017357600269632626, ["cmp     [rsp+3D8h+di_0.st_ino], 0", "jnz     short loc_3A55"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 315, 0, 1, 8, 4, 2, 12, 25, 0.002553083923154702, ["mov     rcx, [rsp+3D8h+val]; jumptable 0000000000003448 case 250", "mov     rdi, cs:optarg@@GLIBC_2_2_5; s", "xor     r8d, r8d; valid_suffixes", "xor     edx, edx; strtol_base", "xor     esi, esi; ptr", "call    xstrtoul", "test    eax, eax", "jnz     short loc_3A1B"], ["mov~rcx,[rsp+0]", "mov~rdi,<TAG>", "xor~r8d,r8d", "xor~edx,edx", "xor~esi,esi", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 343, 0, 0, 2, 0, 1, 1, 31, 5.055611729019212e-05, ["cmp     eax, 3", "jz      short loc_322A"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 341, 1, 0, 2, 0, 1, 2, 32, 6.740815638692282e-05, ["sub     eax, 1", "jz      loc_3AF5"], ["sub~eax,0", "jz~FOO"]], [0, 0, 105, 0, 0, 4, 0, 0, 28, 8, 0.006488035052241322, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     [rdi+30h], rax", "jbe     loc_4FB9"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~[rdi+0],rax", "jbe~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 101, 0, 0, 6, 0, 1, 28, 3, 0.18878496798112573, ["mov     rax, [thispend+18h]", "cmp     cs:active_dir_set, 0", "mov     cs:pending_dirs, rax", "mov     rax, [thispend]", "mov     [rsp+3D8h+file], rax", "jz      short loc_3DB7"], ["mov~rax,[thispend+0]", "cmp~<TAG>,0", "mov~<TAG>,rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 16, 0, 2, 4, 0, 2, 29, -1, 0.0, ["lea     rdi, color_indicator; ind", "call    put_indicator", "lea     rdi, ind; ind", "call    put_indicator"], ["lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO"]], [1, 0, 103, 0, 0, 3, 0, 0, 29, 7, 0.0017483990562858107, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [1, 0, 102, 1, 0, 3, 0, 1, 30, 6, 0.003277721604314122, ["add     cs:dired_pos, 1", "mov     r15, cs:pending_dirs", "jmp     loc_3D1C"], ["add~<TAG>,0", "mov~r15,<TAG>", "jmp~FOO"]], [1, 0, 103, 0, 1, 3, 0, 2, 29, 7, 0.0017483990562858107, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     loc_4233"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [0, 0, 15, 0, 1, 6, 0, 2, 29, -1, 0.02168857431749242, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "lea     rbx, sig_8184", "lea     r12, caught_signals", "lea     r13, [rbx+30h]", "call    _fflush_unlocked", "jmp     short loc_4A59"], ["mov~rdi,<TAG>", "lea~rbx,<TAG>", "lea~r12,<TAG>", "lea~r13,[rbx+0]", "call~FOO", "jmp~FOO"]], [2, 0, 315, 0, 3, 13, 3, 3, 13, 24, 0.0017357600269632626, ["mov     rdi, cs:optarg@@GLIBC_2_2_5; arg", "call    quotearg", "lea     rsi, msgid; \"invalid line width: %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     qword ptr [rsp+3D8h+serious], rax", "call    _dcgettext", "mov     rcx, qword ptr [rsp+3D8h+serious]", "mov     rdx, rax; format", "xor     esi, esi; errnum", "mov     edi, 2; status", "xor     eax, eax", "call    _error"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~[word ptr [rsp+0],rax", "call~FOO", "mov~rcx,[word ptr [rsp+0]", "mov~rdx,rax", "xor~esi,esi", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 15, 1, 0, 3, 0, 1, 31, -1, 0.013911358274351198, ["add     rbx, 4", "cmp     rbx, r13", "jz      short loc_4A74"], ["add~rbx,0", "cmp~rbx,r13", "jz~FOO"]], [0, 0, 15, 0, 1, 6, 1, 2, 30, -1, 0.019118638355240986, ["mov     ebp, [rbx]", "mov     rdi, r12; set", "mov     esi, ebp; signo", "call    _sigismember", "test    eax, eax", "jz      short loc_4A50"], ["mov~ebp,<TAG>", "mov~rdi,r12", "mov~esi,ebp", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 15, 0, 1, 4, 1, 2, 31, -1, 0.0, ["xor     esi, esi; handler", "mov     edi, ebp; sig", "call    _signal", "jmp     short loc_4A50"], ["xor~esi,esi", "mov~edi,ebp", "call~FOO", "jmp~FOO"]], [0, 0, 315, 0, 0, 3, 0, 1, 14, 23, 0.00788675429726997, ["mov     rax, [rsp+3D8h+di_0.st_ino]", "mov     cs:line_length, rax", "jmp     loc_3408"], ["mov~rax,[rsp+0]", "mov~<TAG>,rax", "jmp~FOO"]], [2, 0, 315, 0, 0, 3, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     cs:sort_type_0, 3; jumptable 0000000000003448 case 249", "mov     byte ptr [rsp+3D8h+file], 1", "jmp     loc_3408"], ["mov~<TAG>,0", "mov~[yte ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 323, 0, 3, 14, 4, 4, 8, 26, 0.004082406471183014, ["mov     rdi, r12; arg", "call    quotearg", "lea     rsi, aIgnoringInvali; \"ignoring invalid width in environment v\"...", "mov     r12, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_3373"], ["mov~rdi,r12", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 326, 0, 1, 8, 4, 2, 7, 27, 0.00045500505561172906, ["xor     r8d, r8d; valid_suffixes", "xor     edx, edx; strtol_base", "xor     esi, esi; ptr", "mov     rcx, rax; val", "mov     rdi, r12; s", "call    xstrtoul", "test    eax, eax", "jnz     loc_4247"], ["xor~r8d,r8d", "xor~edx,edx", "xor~esi,esi", "mov~rcx,rax", "mov~rdi,r12", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 325, 0, 0, 3, 1, 1, 8, 27, 0.0001600943714189417, ["mov     rax, [rsp+3D8h+di_0.st_ino]", "test    rax, rax", "jz      loc_4247"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 32, -1, 0.011274014155712843, ["mov     ebx, cs:stop_signal_count", "jmp     short loc_4A89"], ["mov~ebx,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 20, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 101, 0, 2, 14, 1, 3, 34, 9, 0.015984159083249076, ["mov     rdx, [rsp+3D8h+act.sa_mask.__val]", "mov     edi, 10h; n", "mov     rbp, qword ptr [rsp+3D8h+act.__sigaction_handler]", "mov     [rsp+3D8h+n], rdx", "call    xmalloc", "mov     rdx, [rsp+3D8h+n]", "mov     rdi, cs:active_dir_set; table", "mov     rsi, rax; entry", "mov     [rax+8], rbp", "mov     rbx, rax", "mov     [rax], rdx", "call    hash_insert", "test    rax, rax", "jz      loc_427B"], ["mov~rdx,[rsp+0]", "mov~edi,0", "mov~rbp,[word ptr [rsp+0]", "mov~[rsp+0],rdx", "call~FOO", "mov~rdx,[rsp+0]", "mov~rdi,<TAG>", "mov~rsi,rax", "mov~[rax+0],rbp", "mov~rbx,rax", "mov~<TAG>,rdx", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 315, 0, 0, 2, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     cs:time_type_0, 2; jumptable 0000000000003448 case 248", "jmp     loc_3408"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 33, -1, 0.008704078193461409, ["test    ebx, ebx", "jnz     short loc_4A7C"], ["test~ebx,ebx", "jnz~FOO"]], [2, 0, 11, 1, 1, 3, 0, 1, 34, -1, 0.0, ["mov     edi, 13h; sig", "sub     ebx, 1", "call    _raise"], ["mov~edi,0", "sub~ebx,0", "call~FOO"]], [1, 0, 192, 0, 1, 8, 1, 2, 25, 17, 0.0011290866194809573, ["mov     r13, cs:long_time_format+8", "xor     edi, edi; domainname", "mov     edx, 2; category", "mov     cs:long_time_format, rax", "mov     rsi, r13; msgid", "call    _dcgettext", "cmp     rax, r13", "jz      loc_4F9F"], ["mov~r13,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~<TAG>,rax", "mov~rsi,r13", "call~FOO", "cmp~rax,r13", "jz~FOO"]], [0, 0, 8, 0, 0, 3, 1, 1, 34, -1, 0.003286147623862488, ["mov     edi, cs:interrupt_signal; sig", "test    edi, edi", "jz      short loc_4A9C"], ["mov~edi,<TAG>", "test~edi,edi", "jz~FOO"]], [0, 0, 7, 0, 1, 1, 0, 1, 35, -1, 0.0, ["call    _raise"], ["call~FOO"]], [2, 0, 315, 0, 0, 3, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     cs:sort_type_0, 4; jumptable 0000000000003448 case 247", "mov     byte ptr [rsp+3D8h+file], 1", "jmp     loc_3408"], ["mov~<TAG>,0", "mov~[yte ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 28, -1, 0.016632962588473205, ["cmp     cs:dired, 0", "jnz     loc_4E20"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 315, 0, 0, 2, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     cs:print_block_size, 1; jumptable 0000000000003448 case 246", "jmp     loc_3408"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 187, 0, 0, 2, 0, 1, 18, 18, 0.03944219750589822, ["cmp     byte ptr [rax], 0", "jnz     loc_4280"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 315, 0, 0, 2, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     cs:sort_reverse, 1; jumptable 0000000000003448 case 245", "jmp     loc_3408"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 29, -1, 0.011156049882035727, ["mov     rdi, cs:active_dir_set; table", "test    rdi, rdi", "jz      loc_4CE6"], ["mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [1, 0, 5, 0, 4, 16, 1, 5, 29, -1, 0.0, ["lea     rsi, dired_obstack; os", "lea     rdi, prefix; \"//DIRED//\"", "call    dired_dump_obstack", "lea     rsi, subdired_obstack; os", "lea     rdi, aSubdired; \"//SUBDIRED//\"", "call    dired_dump_obstack", "mov     rdi, cs:filename_quoting_options; o", "call    get_quoting_style", "lea     rdx, quoting_style_args", "mov     eax, eax", "lea     rsi, aDiredOptionsQu; \"//DIRED-OPTIONS// --quoting-style=%s\\n\"", "mov     edi, 1", "mov     rdx, [rdx+rax*8]", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_4AA9"], ["lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "mov~rdi,<TAG>", "call~FOO", "lea~rdx,<TAG>", "mov~eax,eax", "lea~rsi,<TAG>", "mov~edi,0", "mov~rdx,<TAG>", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 315, 0, 0, 2, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     cs:qmark_funny_chars, 1; jumptable 0000000000003448 case 244", "jmp     loc_3408"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 186, 0, 0, 2, 0, 1, 22, 21, 0.013527974384900575, ["cmp     edx, 2", "jz      short loc_42FF"], ["cmp~edx,0", "jz~FOO"]], [1, 0, 315, 0, 0, 2, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     cs:indicator_style_0, 1; jumptable 0000000000003448 case 243", "jmp     loc_3408"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 186, 0, 0, 3, 0, 1, 23, 20, 0.01067155375800472, ["movzx   edx, byte ptr [rax]", "cmp     dl, 2Ah ; '*'", "jz      loc_4EE4"], ["movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [0, 1, 186, 0, 0, 2, 0, 1, 24, 19, 0.0077898550724637685, ["cmp     dl, 3Ah ; ':'", "jz      loc_4ED1"], ["cmp~dl,<STR>", "jz~FOO"]], [2, 0, 315, 0, 0, 3, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     cs:format_0, 0; jumptable 0000000000003448 case 242", "mov     cs:print_group, 0", "jmp     loc_3408"], ["mov~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 186, 0, 0, 2, 1, 1, 25, 18, 0.006239467475564544, ["test    dl, dl", "jz      loc_4412"], ["test~dl,dl", "jz~FOO"]], [1, 0, 315, 0, 0, 2, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     cs:format_0, 4; jumptable 0000000000003448 case 240", "jmp     loc_3408"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 186, 0, 0, 5, 0, 0, 26, 22, 0.00024435456690259525, ["lea     rdx, [rax+1]", "mov     qword ptr [rsp+3D8h+longind], rdx", "movzx   eax, byte ptr [rax]", "mov     [rsp+3D8h+s1], al", "mov     rax, rdx"], ["lea~rdx,[rax+0]", "mov~[word ptr [rsp+0],rdx", "movzx~eax,<TAG>", "mov~[rsp+0],al", "mov~rax,rdx"]], [0, 0, 333, 0, 1, 5, 1, 1, 4, 29, 0.0014029322548028314, ["lea     rdx, quoting_style_vals", "cdqe", "xor     edi, edi; o", "mov     esi, [rdx+rax*4]; s", "call    set_quoting_style"], ["lea~rdx,<TAG>", "cdqe~", "xor~edi,edi", "mov~esi,<TAG>", "call~FOO"]], [1, 0, 339, 0, 1, 4, 1, 2, 3, 31, 0.002890124705089316, ["mov     edi, 1; fd", "call    _isatty", "test    eax, eax", "jz      loc_4131"], ["mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 186, 0, 0, 2, 0, 1, 23, 21, 0.003319851702055949, ["cmp     byte ptr [rax], 0", "jz      loc_43C4"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 195, 1, 1, 7, 1, 2, 20, 18, 0.005350522413211999, ["add     r15, 1", "mov     esi, 0Ah; c", "mov     rdi, r15; s", "call    _strchr", "test    rax, rax", "mov     r13, rax", "jz      loc_4F3B"], ["add~r15,0", "mov~esi,0", "mov~rdi,r15", "call~FOO", "test~rax,rax", "mov~r13,rax", "jz~FOO"]], [0, 0, 186, 0, 0, 5, 0, 0, 24, 22, 0.0005645433097404786, ["lea     rdx, [rax+1]", "mov     qword ptr [rsp+3D8h+longind], rdx", "movzx   eax, byte ptr [rax]", "mov     [rsp+3D8h+s1+1], al", "mov     rax, rdx"], ["lea~rdx,[rax+0]", "mov~[word ptr [rsp+0],rdx", "movzx~eax,<TAG>", "mov~[rsp+0],al", "mov~rax,rdx"]], [1, 0, 193, 0, 1, 6, 1, 2, 21, 18, 0.0021570610043815303, ["lea     r14, [rax+1]", "mov     esi, 0Ah; c", "mov     rdi, r14; s", "call    _strchr", "test    rax, rax", "jz      short loc_4B59"], ["lea~r14,[rax+0]", "mov~esi,0", "mov~rdi,r14", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 186, 0, 0, 4, 0, 1, 21, 21, 0.02743511964947759, ["lea     rdx, [rax+1]", "mov     qword ptr [rsp+3D8h+longind], rdx", "cmp     byte ptr [rax], 3Dh ; '='", "jnz     loc_43C4"], ["lea~rdx,[rax+0]", "mov~[word ptr [rsp+0],rdx", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 329, 0, 0, 2, 0, 0, 4, 27, 0.037424165824064715, ["mov     rax, cs:output_block_size", "mov     cs:file_output_block_size, rax"], ["mov~rax,<TAG>", "mov~<TAG>,rax"]], [1, 0, 136, 0, 0, 2, 0, 1, 19, 15, 0.0017020559487698013, ["cmp     cs:indicator_style_0, 3", "jz      short loc_3FC1"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 137, 0, 0, 3, 0, 1, 18, 15, 0.005080889787664308, ["cmp     cs:immediate_dirs, 0", "mov     eax, 2", "jnz     short loc_3FC1"], ["cmp~<TAG>,0", "mov~eax,0", "jnz~FOO"]], [2, 0, 315, 0, 0, 3, 0, 1, 13, 23, 0.006530165149983148, ["mov     cs:print_with_color, 1", "mov     cs:tabsize, 0", "jmp     loc_3408"], ["mov~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 186, 0, 0, 4, 1, 1, 22, 24, 0.006268958543983822, ["xor     r15d, r15d", "lea     rsi, aLc; \"lc\"", "lea     r14, [rsp+3D8h+s1]", "jmp     short loc_4358"], ["xor~r15d,r15d", "lea~rsi,<TAG>", "lea~r14,[rsp+0]", "jmp~FOO"]], [2, 0, 192, 0, 3, 13, 3, 3, 22, 18, 0.0, ["mov     rdi, r15; name", "call    quote", "lea     rsi, aInvalidTimeSty; \"invalid time style format %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     [rsp+3D8h+file], rax", "call    _dcgettext", "mov     rcx, [rsp+3D8h+file]", "mov     rdx, rax; format", "xor     esi, esi; errnum", "mov     edi, 2; status", "xor     eax, eax", "call    _error"], ["mov~rdi,r15", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~[rsp+0],rax", "call~FOO", "mov~rcx,[rsp+0]", "mov~rdx,rax", "xor~esi,esi", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 186, 1, 0, 5, 1, 1, 24, 22, 0.002110717896865521, ["lea     rax, indicator_name", "add     r15, 1", "mov     rsi, [rax+r15*8]; s2", "test    rsi, rsi", "jz      short loc_4395"], ["lea~rax,<TAG>", "add~r15,0", "mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [0, 0, 186, 0, 1, 4, 1, 2, 23, 23, 0.006538591169531514, ["mov     rdi, r14; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_4344"], ["mov~rdi,r14", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 191, 0, 0, 1, 0, 0, 22, 17, 0.0032187394674755647, ["mov     byte ptr [r13+0], 0"], ["mov~[yte ptr [r13+0],0"]], [1, 0, 233, 1, 0, 4, 1, 0, 11, 21, 0.0, ["mov     rax, rdx", "mov     ecx, 3", "xor     edx, edx", "div     rcx"], ["mov~rax,rdx", "mov~ecx,0", "xor~edx,edx", "div~,rcx"]], [2, 0, 234, 0, 0, 4, 0, 0, 10, 21, 0.20505561172901923, ["mov     rdx, cs:line_length", "mov     eax, 1", "cmp     rdx, 2", "jbe     short loc_3B65"], ["mov~rdx,<TAG>", "mov~eax,0", "cmp~rdx,0", "jbe~FOO"]], [0, 1, 328, 0, 1, 8, 1, 2, 5, 26, 0.044219750589821374, ["lea     rdi, aColumns; \"COLUMNS\"", "mov     cs:line_length, 50h", "call    _getenv", "mov     r12, rax", "lea     rax, [rsp+3D8h+di_0]", "test    r12, r12", "mov     [rsp+3D8h+val], rax", "jz      short loc_3373"], ["lea~rdi,<TAG>", "mov~<TAG>,<STR>", "call~FOO", "mov~r12,rax", "lea~rax,[rsp+0]", "test~r12,r12", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 191, 0, 0, 2, 0, 1, 21, 17, 0.0026794742163801823, ["mov     r14, r15", "jmp     loc_4B5E"], ["mov~r14,r15", "jmp~FOO"]], [1, 0, 327, 0, 0, 2, 0, 1, 6, 26, 0.000572969329288844, ["cmp     byte ptr [r12], 0", "jnz     loc_3F67"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 232, 0, 2, 8, 1, 3, 11, 20, 0.20721267273340077, ["xor     edi, edi; o", "mov     cs:max_idx, rax", "call    clone_quoting_options", "mov     rdi, rax; o", "mov     cs:filename_quoting_options, rax", "call    get_quoting_style", "cmp     eax, 5", "jz      loc_4B71"], ["xor~edi,edi", "mov~<TAG>,rax", "call~FOO", "mov~rdi,rax", "mov~<TAG>,rax", "call~FOO", "cmp~eax,0", "jz~FOO"]], [1, 1, 231, 0, 1, 5, 0, 2, 12, 20, 0.0, ["mov     rdi, cs:filename_quoting_options; o", "mov     edx, 1; i", "mov     esi, 20h ; ' '; c", "call    set_char_quoting", "jmp     loc_3B8B"], ["mov~rdi,<TAG>", "mov~edx,0", "mov~esi,<STR>", "call~FOO", "jmp~FOO"]], [3, 0, 322, 0, 1, 7, 1, 2, 6, 25, 0.05968992248062016, ["mov     rdx, [rsp+3D8h+val]", "xor     eax, eax", "mov     esi, 5413h; request", "mov     edi, 1; fd", "call    _ioctl", "cmp     eax, 0FFFFFFFFh", "jz      short loc_339F"], ["mov~rdx,[rsp+0]", "xor~eax,eax", "mov~esi,0", "mov~edi,0", "call~FOO", "cmp~eax,0", "jz~FOO"]], [0, 0, 323, 0, 0, 2, 0, 1, 9, 26, 0.0013608021570610045, ["mov     cs:line_length, rax", "jmp     loc_3373"], ["mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 186, 2, 1, 12, 2, 2, 24, 22, 0.0030881361644759017, ["lea     rax, color_indicator", "movsxd  rcx, r15d", "mov     rdi, [rsp+3D8h+val]; dest", "shl     rcx, 4", "xor     edx, edx; equals_end", "mov     rsi, r12; src", "add     rcx, rax; output_count", "mov     rax, [rsp+3D8h+di_0.st_ino]", "mov     [rcx+8], rax", "call    get_funky_string", "test    al, al", "jnz     loc_4C47"], ["lea~rax,<TAG>", "movsxd~rcx,r15d", "mov~rdi,[rsp+0]", "shl~rcx,0", "xor~edx,edx", "mov~rsi,r12", "add~rcx,rax", "mov~rax,[rsp+0]", "mov~[rcx+0],rax", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 230, 0, 0, 3, 0, 0, 12, 19, 0.20930232558139536, ["mov     eax, cs:indicator_style_0", "cmp     eax, 1", "jbe     short loc_3BCF"], ["mov~eax,<TAG>", "cmp~eax,0", "jbe~FOO"]], [0, 0, 321, 0, 0, 3, 1, 1, 7, 25, 0.00019379844961240313, ["movzx   eax, word ptr [rsp+3D8h+di_0.st_ino+2]", "test    ax, ax", "jz      short loc_339F"], ["movzx~eax,[ord ptr [rsp+0]", "test~ax,ax", "jz~FOO"]], [0, 0, 320, 0, 0, 1, 0, 0, 8, 25, 0.0, ["mov     cs:line_length, rax"], ["mov~<TAG>,rax"]], [1, 0, 0, 0, 1, 5, 0, 1, 33, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___8187; \"main\"", "lea     rsi, file; \"ls.c\"", "lea     rdi, aFound; \"found\"", "mov     edx, 529h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 229, 0, 0, 5, 1, 1, 13, 19, 0.001836872261543647, ["lea     rdx, asc_135D9; \"*=>@|\"", "lea     r13, [rdx+rax-2]", "movsx   esi, byte ptr [r13+0]; c", "test    sil, sil", "jz      short loc_3BCF"], ["lea~rdx,<TAG>", "lea~r13,[rdx+0]", "movsx~esi,[yte ptr [r13+0]", "test~sil,sil", "jz~FOO"]], [0, 0, 228, 0, 0, 1, 0, 0, 14, 20, 0.0009268621503201888, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 319, 0, 1, 6, 1, 2, 7, 24, 0.06719750589821369, ["lea     rdi, aTabsize; \"TABSIZE\"", "call    _getenv", "test    rax, rax", "mov     r12, rax", "mov     cs:tabsize, 8", "jz      short loc_33E6"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~r12,rax", "mov~<TAG>,0", "jz~FOO"]], [1, 0, 165, 0, 3, 13, 4, 3, 25, 21, 0.005561172901921133, ["mov     rdi, r14; arg", "call    quotearg", "lea     rsi, aUnrecognizedPr; \"unrecognized prefix: %s\"", "mov     r12, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,r14", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [2, 0, 228, 1, 1, 7, 1, 2, 15, 19, 0.0019127064374789352, ["mov     rdi, cs:filename_quoting_options; o", "add     r13, 1", "mov     edx, 1; i", "call    set_char_quoting", "movsx   esi, byte ptr [r13+0]", "test    sil, sil", "jnz     short loc_3BB0"], ["mov~rdi,<TAG>", "add~r13,0", "mov~edx,0", "call~FOO", "movsx~esi,[yte ptr [r13+0]", "test~sil,sil", "jnz~FOO"]], [4, 0, 101, 1, 1, 8, 0, 2, 39, 12, 0.007937310414560162, ["mov     rcx, cs:stdout@@GLIBC_2_2_5; stream", "lea     rdi, asc_13472; \"  \"", "mov     edx, 2; n", "mov     esi, 1; size", "call    _fwrite_unlocked", "add     cs:dired_pos, 2", "cmp     cs:dired, 0", "jz      loc_4768"], ["mov~rcx,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "mov~esi,0", "call~FOO", "add~<TAG>,0", "cmp~<TAG>,0", "jz~FOO"]], [2, 0, 101, 0, 0, 3, 0, 1, 38, 12, 0.027300303336703743, ["cmp     cs:dired, 0", "mov     cs:first_8461, 0", "jnz     loc_4BAB"], ["cmp~<TAG>,0", "mov~<TAG>,0", "jnz~FOO"]], [0, 0, 316, 0, 0, 2, 0, 0, 9, 24, 0.0013313110886417259, ["mov     rax, [rsp+3D8h+di_0.st_ino]", "mov     cs:tabsize, rax"], ["mov~rax,[rsp+0]", "mov~<TAG>,rax"]], [0, 0, 101, 0, 0, 4, 0, 0, 40, 13, 0.005299966295921807, ["mov     rax, cs:subdired_obstack.next_free", "lea     rdx, [rax+8]", "cmp     cs:subdired_obstack.chunk_limit, rdx", "jb      loc_4DE5"], ["mov~rax,<TAG>", "lea~rdx,[rax+0]", "cmp~<TAG>,rdx", "jb~FOO"]], [3, 0, 315, 1, 1, 7, 0, 2, 13, 24, 0.0, ["mov     edi, 1; fd", "call    _isatty", "cmp     eax, 1", "sbb     eax, eax", "add     eax, 2", "mov     cs:format_0, eax", "jmp     loc_34E4"], ["mov~edi,0", "call~FOO", "cmp~eax,0", "sbb~eax,eax", "add~eax,0", "mov~<TAG>,eax", "jmp~FOO"]], [3, 0, 315, 0, 0, 4, 0, 1, 12, 24, 0.0017104819683181666, ["cmp     cs:format_0, 0; jumptable 0000000000003448 case 233", "mov     cs:ignore_mode, 2", "mov     cs:sort_type_0, 0FFFFFFFFh", "jz      loc_4C90"], ["cmp~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "jz~FOO"]], [2, 1, 226, 0, 2, 9, 1, 3, 13, 18, 0.21327940680822383, ["xor     edi, edi; o", "call    clone_quoting_options", "mov     edx, 1; i", "mov     esi, 3Ah ; ':'; c", "mov     rdi, rax; o", "mov     cs:dirname_quoting_options, rax", "call    set_char_quoting", "cmp     cs:dired, 0", "jz      loc_3ED1"], ["xor~edi,edi", "call~FOO", "mov~edx,0", "mov~esi,<STR>", "mov~rdi,rax", "mov~<TAG>,rax", "call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 164, 0, 3, 13, 4, 4, 22, 20, 0.03454246713852376, ["lea     rsi, aUnparsableValu; \"unparsable value for LS_COLORS environm\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     rdi, cs:color_buf; ptr", "call    free", "mov     rdi, cs:color_ext_list", "jmp     short loc_4406"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~rdi,<TAG>", "call~FOO", "mov~rdi,<TAG>", "jmp~FOO"]], [1, 0, 186, 0, 0, 4, 0, 1, 22, 21, 0.0035094371418941694, ["lea     rdx, [rax+1]", "mov     qword ptr [rsp+3D8h+longind], rdx", "cmp     byte ptr [rax], 3Dh ; '='", "jnz     loc_43C4"], ["lea~rdx,[rax+0]", "mov~[word ptr [rsp+0],rdx", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 186, 1, 1, 10, 2, 2, 23, 21, 0.0015166835187057635, ["mov     rcx, qword ptr [rsp+3D8h+serious]", "mov     rax, [rsp+3D8h+di_0.st_ino]", "xor     edx, edx; equals_end", "mov     rdi, [rsp+3D8h+val]; dest", "mov     rsi, r12; src", "mov     [rcx+18h], rax", "add     rcx, 10h; output_count", "call    get_funky_string", "test    al, al", "jz      loc_43C4"], ["mov~rcx,[word ptr [rsp+0]", "mov~rax,[rsp+0]", "xor~edx,edx", "mov~rdi,[rsp+0]", "mov~rsi,r12", "mov~[rcx+0],rax", "add~rcx,0", "call~FOO", "test~al,al", "jz~FOO"]], [3, 0, 186, 1, 2, 16, 1, 3, 24, 21, 0.0015419615773508595, ["mov     edi, 28h ; '('; n", "call    xmalloc", "mov     rcx, rax; output_count", "mov     qword ptr [rsp+3D8h+serious], rax", "mov     rax, cs:color_ext_list", "mov     rdi, [rsp+3D8h+val]; dest", "mov     edx, 1; equals_end", "mov     rsi, r12; src", "add     qword ptr [rsp+3D8h+longind], 1", "mov     cs:color_ext_list, rcx", "mov     [rcx+20h], rax", "mov     rax, [rsp+3D8h+di_0.st_ino]", "mov     [rcx+8], rax", "call    get_funky_string", "test    al, al", "jz      loc_43C4"], ["mov~edi,0", "call~FOO", "mov~rcx,rax", "mov~[word ptr [rsp+0],rax", "mov~rax,<TAG>", "mov~rdi,[rsp+0]", "mov~edx,0", "mov~rsi,r12", "add~[word ptr [rsp+0],0", "mov~<TAG>,rcx", "mov~[rcx+0],rax", "mov~rax,[rsp+0]", "mov~[rcx+0],rax", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 315, 0, 0, 6, 1, 0, 8, 23, 0.07697168857431749, ["lea     r12, [rsp+3D8h+longind]", "lea     r14, long_options", "lea     r13, off_12E18", "mov     byte ptr [rsp+3D8h+file], 0", "xor     r15d, r15d", "nop     dword ptr [rax+00000000h]"], ["lea~r12,[rsp+0]", "lea~r14,<TAG>", "lea~r13,<TAG>", "mov~[yte ptr [rsp+0],0", "xor~r15d,r15d", "nop~[word ptr [rax+0]"]], [1, 0, 222, 0, 0, 2, 0, 1, 14, 17, 0.09473795079204585, ["cmp     cs:format_0, 0", "jz      loc_3EFE"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 315, 0, 1, 9, 0, 2, 9, 22, 0.2703319851702056, ["lea     rdx, shortopts; \"abcdfghiklmnopqrstuvw:xABCDFGHI:LNQRST:\"...", "mov     r8, r12; longind", "mov     rcx, r14; longopts", "mov     rsi, argv; argv", "mov     edi, ebp; argc", "mov     [rsp+3D8h+longind], 0FFFFFFFFh", "call    _getopt_long", "cmp     eax, 0FFFFFFFFh", "jz      loc_3B46"], ["lea~rdx,<TAG>", "mov~r8,r12", "mov~rcx,r14", "mov~rsi,argv", "mov~edi,ebp", "mov~[rsp+0],0", "call~FOO", "cmp~eax,0", "jz~FOO"]], [1, 0, 101, 1, 0, 4, 0, 1, 41, 12, 0.0016599258510279745, ["mov     rdx, cs:dired_pos", "mov     [rax], rdx", "add     cs:subdired_obstack.next_free, 8", "jmp     loc_4768"], ["mov~rdx,<TAG>", "mov~<TAG>,rdx", "add~<TAG>,0", "jmp~FOO"]], [1, 0, 101, 0, 1, 5, 0, 2, 41, 13, 0.0, ["lea     rdi, subdired_obstack; struct obstack *", "mov     esi, 8; int", "call    __obstack_newchunk", "mov     rax, cs:subdired_obstack.next_free", "jmp     loc_4BF5"], ["lea~rdi,<TAG>", "mov~esi,0", "call~FOO", "mov~rax,<TAG>", "jmp~FOO"]], [1, 0, 161, 0, 0, 1, 0, 0, 24, 18, 0.03421385237613751, ["mov     cs:print_with_color, 0"], ["mov~<TAG>,0"]], [1, 0, 160, 0, 0, 2, 0, 1, 25, 17, 0.040175261206606, ["cmp     qword ptr cs:unk_21A0D0, 6", "jz      loc_4F43"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 157, 0, 0, 2, 0, 1, 26, 16, 0.039644421975058984, ["cmp     cs:print_with_color, 0", "jnz     loc_3FEB"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 159, 0, 1, 6, 1, 2, 26, 17, 0.0015082574991573982, ["mov     rdi, cs:s1; s1", "lea     rsi, s2; \"target\"", "mov     edx, 6; n", "call    _strncmp", "test    eax, eax", "jnz     loc_4420"], ["mov~rdi,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 158, 0, 0, 2, 0, 1, 27, 17, 0.0, ["mov     cs:color_symlink_as_referent, 1", "jmp     loc_4420"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 315, 0, 0, 2, 0, 1, 12, 23, 0.0027170542635658913, ["mov     cs:format_0, 0; jumptable 0000000000003448 case 239", "jmp     short loc_3408"], ["mov~<TAG>,0", "jmp~FOO"]], [3, 0, 315, 0, 0, 4, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     cs:human_output_opts, 0; jumptable 0000000000003448 case 238", "mov     cs:output_block_size, 400h", "mov     cs:file_output_block_size, 400h", "jmp     short loc_3408"], ["mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 315, 0, 0, 2, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     cs:print_inode, 1; jumptable 0000000000003448 case 236", "jmp     short loc_3408"], ["mov~<TAG>,0", "jmp~FOO"]], [3, 0, 315, 0, 0, 4, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     cs:human_output_opts, 0B0h; jumptable 0000000000003448 case 235", "mov     cs:output_block_size, 1", "mov     cs:file_output_block_size, 1", "jmp     loc_3408"], ["mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [2, 0, 315, 0, 0, 3, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     cs:format_0, 0; jumptable 0000000000003448 case 234", "mov     cs:print_owner, 0", "jmp     loc_3408"], ["mov~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [3, 0, 315, 0, 0, 4, 0, 1, 13, 23, 0.005266262217728346, ["mov     cs:print_block_size, 0", "mov     cs:print_with_color, 0", "mov     byte ptr [rsp+3D8h+file], 1", "jmp     loc_3408"], ["mov~<TAG>,0", "mov~<TAG>,0", "mov~[yte ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 315, 0, 0, 2, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     cs:immediate_dirs, 1; jumptable 0000000000003448 case 231", "jmp     loc_3408"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 315, 0, 0, 2, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     cs:time_type_0, 1; jumptable 0000000000003448 case 230", "jmp     loc_3408"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 315, 0, 1, 4, 1, 2, 12, 23, 7.971014492753623e-05, ["mov     esi, 5; jumptable 0000000000003448 case 229", "xor     edi, edi; o", "call    set_quoting_style", "jmp     loc_3408"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "jmp~FOO"]], [1, 0, 315, 0, 0, 2, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     cs:ignore_mode, 2; jumptable 0000000000003448 case 228", "jmp     loc_3408"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 315, 0, 0, 2, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     cs:print_scontext, 1; jumptable 0000000000003448 case 221", "jmp     loc_3408"], ["mov~<TAG>,0", "jmp~FOO"]], [2, 0, 315, 0, 0, 3, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     cs:sort_type_0, 1; jumptable 0000000000003448 case 219", "mov     byte ptr [rsp+3D8h+file], 1", "jmp     loc_3408"], ["mov~<TAG>,0", "mov~[yte ptr [rsp+0],0", "jmp~FOO"]], [2, 0, 315, 0, 0, 3, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     cs:sort_type_0, 0FFFFFFFFh; jumptable 0000000000003448 case 216", "mov     byte ptr [rsp+3D8h+file], 1", "jmp     loc_3408"], ["mov~<TAG>,0", "mov~[yte ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 315, 0, 0, 3, 0, 1, 13, 23, 0.005266262217728346, ["mov     rax, [rsp+3D8h+di_0.st_ino]", "mov     cs:tabsize, rax", "jmp     loc_3408"], ["mov~rax,[rsp+0]", "mov~<TAG>,rax", "jmp~FOO"]], [2, 0, 315, 0, 0, 3, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     cs:sort_type_0, 2; jumptable 0000000000003448 case 214", "mov     byte ptr [rsp+3D8h+file], 1", "jmp     loc_3408"], ["mov~<TAG>,0", "mov~[yte ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 315, 0, 0, 2, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     cs:recursive, 1; jumptable 0000000000003448 case 213", "jmp     loc_3408"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 315, 0, 1, 4, 1, 2, 12, 23, 7.971014492753623e-05, ["mov     esi, 3; jumptable 0000000000003448 case 212", "xor     edi, edi; o", "call    set_quoting_style", "jmp     loc_3408"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "jmp~FOO"]], [0, 0, 315, 0, 1, 4, 2, 2, 12, 23, 7.971014492753623e-05, ["xor     esi, esi; jumptable 0000000000003448 case 209", "xor     edi, edi; o", "call    set_quoting_style", "jmp     loc_3408"], ["xor~esi,esi", "xor~edi,edi", "call~FOO", "jmp~FOO"]], [1, 0, 315, 0, 0, 2, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     cs:dereference, 5; jumptable 0000000000003448 case 207", "jmp     loc_3408"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 315, 0, 1, 10, 0, 2, 12, 23, 7.971014492753623e-05, ["mov     rdx, cs:optarg@@GLIBC_2_2_5; jumptable 0000000000003448 case 204", "mov     edi, 10h; n", "mov     qword ptr [rsp+3D8h+serious], rdx", "call    xmalloc", "mov     rdx, qword ptr [rsp+3D8h+serious]", "mov     [rax], rdx", "mov     rdx, cs:ignore_patterns", "mov     [rax+8], rdx", "mov     cs:ignore_patterns, rax", "jmp     loc_3408"], ["mov~rdx,<TAG>", "mov~edi,0", "mov~[word ptr [rsp+0],rdx", "call~FOO", "mov~rdx,[word ptr [rsp+0]", "mov~<TAG>,rdx", "mov~rdx,<TAG>", "mov~[rax+0],rdx", "mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 315, 0, 0, 2, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     cs:dereference, 3; jumptable 0000000000003448 case 203", "jmp     loc_3408"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 315, 0, 0, 2, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     cs:print_group, 0; jumptable 0000000000003448 case 202", "jmp     loc_3408"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 315, 0, 0, 2, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     cs:indicator_style_0, 3; jumptable 0000000000003448 case 201", "jmp     loc_3408"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 315, 0, 0, 2, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     cs:dired, 1; jumptable 0000000000003448 case 199", "jmp     loc_3408"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 315, 0, 0, 2, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     cs:format_0, 2; jumptable 0000000000003448 case 198", "jmp     loc_3408"], ["mov~<TAG>,0", "jmp~FOO"]], [2, 0, 315, 0, 2, 15, 0, 3, 12, 23, 7.971014492753623e-05, ["mov     edi, 10h; jumptable 0000000000003448 case 197", "call    xmalloc", "mov     rdx, cs:ignore_patterns", "lea     rcx, asc_1354B+1; \"*~\"", "mov     edi, 10h; n", "mov     cs:ignore_patterns, rax", "mov     [rax], rcx", "mov     [rax+8], rdx", "call    xmalloc", "mov     rdx, cs:ignore_patterns", "lea     rcx, asc_1354B; \".*~\"", "mov     [rax], rcx", "mov     [rax+8], rdx", "mov     cs:ignore_patterns, rax", "jmp     loc_3408"], ["mov~edi,0", "call~FOO", "mov~rdx,<TAG>", "lea~rcx,<TAG>", "mov~edi,0", "mov~<TAG>,rax", "mov~<TAG>,rcx", "mov~[rax+0],rdx", "call~FOO", "mov~rdx,<TAG>", "lea~rcx,<TAG>", "mov~<TAG>,rcx", "mov~[rax+0],rdx", "mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 315, 0, 0, 2, 0, 1, 12, 23, 0.0009391641388608022, ["cmp     cs:format_0, 0; jumptable 0000000000003448 case 180", "jz      loc_3408"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 315, 0, 0, 2, 0, 1, 13, 23, 0.0, ["mov     cs:format_0, 1", "jmp     loc_3408"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 315, 0, 0, 2, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     r15, cs:optarg@@GLIBC_2_2_5; jumptable 0000000000003448 case 274", "jmp     loc_3408"], ["mov~r15,<TAG>", "jmp~FOO"]], [1, 0, 315, 0, 1, 11, 0, 2, 12, 23, 7.971014492753623e-05, ["mov     r9, cs:argmatch_die; jumptable 0000000000003448 case 273", "mov     rsi, cs:optarg@@GLIBC_2_2_5; arg", "lea     rdx, time_args; arglist", "lea     rcx, time_types; vallist", "lea     rdi, context; \"--time\"", "mov     r8d, 4; valsize", "call    __xargmatch_internal", "lea     rdx, time_types", "mov     eax, [rdx+rax*4]", "mov     cs:time_type_0, eax", "jmp     loc_3408"], ["mov~r9,<TAG>", "mov~rsi,<TAG>", "lea~rdx,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "mov~r8d,0", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>", "mov~<TAG>,eax", "jmp~FOO"]], [2, 0, 315, 0, 1, 12, 0, 2, 12, 23, 7.971014492753623e-05, ["mov     r9, cs:argmatch_die; jumptable 0000000000003448 case 272", "mov     rsi, cs:optarg@@GLIBC_2_2_5; arg", "lea     rdx, sort_args; arglist", "lea     rcx, sort_types; vallist", "lea     rdi, aSort; \"--sort\"", "mov     r8d, 4; valsize", "call    __xargmatch_internal", "lea     rdx, sort_types", "mov     byte ptr [rsp+3D8h+file], 1", "mov     eax, [rdx+rax*4]", "mov     cs:sort_type_0, eax", "jmp     loc_3408"], ["mov~r9,<TAG>", "mov~rsi,<TAG>", "lea~rdx,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "mov~r8d,0", "call~FOO", "lea~rdx,<TAG>", "mov~[yte ptr [rsp+0],0", "mov~eax,<TAG>", "mov~<TAG>,eax", "jmp~FOO"]], [1, 0, 315, 0, 0, 2, 0, 1, 12, 23, 7.971014492753623e-05, ["mov     cs:directories_first, 1; jumptable 0000000000003448 case 266", "jmp     loc_3408"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 139, 0, 0, 1, 0, 1, 27, 15, 0.03513650151668352, ["jmp     loc_3C40"], ["jmp~FOO"]], [2, 0, 315, 1, 0, 3, 0, 1, 10, 25, 0.06617795753286149, ["add     eax, 83h", "cmp     eax, 112h; switch 275 cases", "ja      loc_4EC7; jumptable 0000000000003448 default case"], ["add~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 101, 1, 0, 4, 0, 1, 36, 18, 0.008080552746882373, ["mov     rax, cs:dev_ino_obstack.chunk_limit", "sub     rax, cs:dev_ino_obstack.next_free", "cmp     rax, 0Fh", "jg      short loc_4457"], ["mov~rax,<TAG>", "sub~rax,<TAG>", "cmp~rax,0", "jg~FOO"]], [0, 0, 101, 0, 0, 2, 0, 1, 35, 8, 0.01323727671048197, ["cmp     rbx, rax", "jz      loc_4432"], ["cmp~rbx,rax", "jz~FOO"]], [1, 0, 138, 0, 0, 2, 0, 1, 17, 14, 0.23255813953488375, ["cmp     cs:dereference, 1", "jz      loc_3F9B"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 315, 0, 0, 1, 0, 0, 12, 24, 0.0, ["mov     cs:numeric_ids, 1; jumptable 0000000000003448 case 241"], ["mov~<TAG>,0"]], [1, 0, 101, 0, 1, 3, 0, 1, 37, 18, 0.0, ["lea     rdi, dev_ino_obstack; struct obstack *", "mov     esi, 10h; int", "call    __obstack_newchunk"], ["lea~rdi,<TAG>", "mov~esi,0", "call~FOO"]], [0, 0, 134, 0, 0, 2, 0, 1, 19, 14, 0.003387259858442872, ["mov     cs:dereference, eax", "jmp     loc_3C4D"], ["mov~<TAG>,eax", "jmp~FOO"]], [2, 0, 130, 1, 0, 4, 1, 1, 19, 12, 0.22609538254128753, ["mov     eax, cs:sort_type_0", "sub     eax, 2", "and     eax, 0FFFFFFFDh", "jz      short loc_3C75"], ["mov~eax,<TAG>", "sub~eax,0", "and~eax,0", "jz~FOO"]], [0, 0, 101, 0, 0, 7, 0, 0, 37, 17, 0.004440512301988541, ["mov     rax, cs:dev_ino_obstack.next_free", "lea     rdx, [rax+10h]", "mov     cs:dev_ino_obstack.next_free, rdx", "mov     rdx, qword ptr [rsp+3D8h+act.__sigaction_handler]", "mov     [rax+8], rdx", "mov     rdx, [rsp+3D8h+act.sa_mask.__val]", "mov     [rax], rdx"], ["mov~rax,<TAG>", "lea~rdx,[rax+0]", "mov~<TAG>,rdx", "mov~rdx,[word ptr [rsp+0]", "mov~[rax+0],rdx", "mov~rdx,[rsp+0]", "mov~<TAG>,rdx"]], [1, 0, 122, 0, 0, 2, 1, 0, 20, 11, 0.21567239635995958, ["mov     cs:format_needs_stat, 1", "xor     eax, eax"], ["mov~<TAG>,0", "xor~eax,eax"]], [1, 0, 101, 0, 1, 3, 0, 1, 31, 16, 0.13080552746882373, ["call    clear_files", "mov     [rsp+3D8h+n], 0", "nop     dword ptr [rax+rax+00000000h]"], ["call~FOO", "mov~[rsp+0],0", "nop~[word ptr [rax+0]"]], [1, 0, 101, 0, 0, 2, 0, 1, 30, 11, 0.15741489720256152, ["cmp     cs:active_dir_set, 0", "jz      loc_447A"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 315, 0, 3, 14, 3, 4, 13, 24, 0.0, ["mov     rdi, cs:optarg@@GLIBC_2_2_5; arg", "call    quotearg", "lea     rsi, aInvalidTabSize; \"invalid tab size: %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     qword ptr [rsp+3D8h+serious], rax", "call    _dcgettext", "mov     rcx, qword ptr [rsp+3D8h+serious]", "mov     rdx, rax; format", "xor     esi, esi; errnum", "mov     edi, 2; status", "xor     eax, eax", "call    _error", "jmp     loc_358B"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~[word ptr [rsp+0],rax", "call~FOO", "mov~rcx,[word ptr [rsp+0]", "mov~rdx,rax", "xor~esi,esi", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 315, 0, 1, 8, 4, 2, 12, 24, 0.0017104819683181666, ["mov     rcx, [rsp+3D8h+val]; jumptable 0000000000003448 case 215", "mov     rdi, cs:optarg@@GLIBC_2_2_5; s", "xor     r8d, r8d; valid_suffixes", "xor     edx, edx; strtol_base", "xor     esi, esi; ptr", "call    xstrtoul", "test    eax, eax", "jnz     loc_4C51"], ["mov~rcx,[rsp+0]", "mov~rdi,<TAG>", "xor~r8d,r8d", "xor~edx,edx", "xor~esi,esi", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 101, 0, 1, 6, 1, 2, 32, 15, 0.14264408493427705, ["mov     dword ptr [r12], 0", "mov     rdi, r13; dirp", "call    _readdir", "test    rax, rax", "mov     r14, rax", "jz      loc_4570"], ["mov~<TAG>,0", "mov~rdi,r13", "call~FOO", "test~rax,rax", "mov~r14,rax", "jz~FOO"]], [1, 0, 101, 0, 1, 6, 1, 2, 38, 16, 0.0052634535445455575, ["mov     rdi, [rbx]; pattern", "mov     edx, 4; flags", "mov     rsi, rbp; name", "call    _fnmatch", "test    eax, eax", "jz      short loc_4490"], ["mov~rdi,<TAG>", "mov~edx,0", "mov~rsi,rbp", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 101, 0, 1, 6, 1, 2, 36, 16, 0.004934838782159309, ["mov     rdi, [rbx]; pattern", "mov     edx, 4; flags", "mov     rsi, rbp; name", "call    _fnmatch", "test    eax, eax", "jz      loc_4490"], ["mov~rdi,<TAG>", "mov~edx,0", "mov~rsi,rbp", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 101, 1, 1, 7, 1, 2, 36, 16, 0.0023059206830693185, ["mov     r8, [rsp+3D8h+file]; dirname", "mov     rdx, [r14]; inode", "xor     ecx, ecx; command_line_arg", "mov     rdi, rbp; name", "call    gobble_file", "add     [rsp+3D8h+n], rax", "jmp     loc_4490"], ["mov~r8,[rsp+0]", "mov~rdx,<TAG>", "xor~ecx,ecx", "mov~rdi,rbp", "call~FOO", "add~[rsp+0],rax", "jmp~FOO"]], [2, 0, 101, 0, 2, 10, 1, 3, 34, 14, 0.00015166835187057636, ["lea     rsi, aReadingDirecto; \"reading directory %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdx, [rsp+3D8h+file]; file", "mov     edi, dword ptr [rsp+3D8h+serious]; serious", "mov     rsi, rax; message", "call    file_failure", "cmp     dword ptr [r12], 4Bh ; 'K'", "jz      loc_4490"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdx,[rsp+0]", "mov~edi,[word ptr [rsp+0]", "mov~rsi,rax", "call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 101, 0, 0, 2, 1, 1, 35, 16, 0.0067239635995955515, ["test    eax, eax", "jz      loc_4490"], ["test~eax,eax", "jz~FOO"]], [0, 0, 101, 0, 0, 1, 0, 1, 37, 16, 0.0007751937984496125, ["jmp     loc_4490"], ["jmp~FOO"]], [1, 0, 117, 0, 0, 2, 0, 1, 23, 9, 0.003707448601280755, ["cmp     cs:immediate_dirs, 0", "jz      loc_4E77"], ["cmp~<TAG>,0", "jz~FOO"]], [3, 0, 119, 1, 2, 12, 1, 3, 22, 9, 0.21784630940343783, ["mov     edi, 47E0h; n", "mov     cs:cwd_n_alloc, 64h", "mov     r13d, ebp", "call    xmalloc", "mov     cs:cwd_n_used, 0", "mov     cs:cwd_file, rax", "lea     r14, aReportBugsToS+16h; \"\"", "call    clear_files", "movsxd  r12, dword ptr [rsp+3D8h+file]", "sub     r13d, r12d", "test    r13d, r13d", "jle     loc_4CAD"], ["mov~edi,0", "mov~<TAG>,0", "mov~r13d,ebp", "call~FOO", "mov~<TAG>,0", "mov~<TAG>,rax", "lea~r14,<TAG>", "call~FOO", "movsxd~r12,[word ptr [rsp+0]", "sub~r13d,r12d", "test~r13d,r13d", "jle~FOO"]], [1, 0, 101, 0, 0, 4, 0, 1, 33, 18, 0.04162453656892484, ["lea     rbp, [rax+13h]", "mov     eax, cs:ignore_mode", "cmp     eax, 2", "jz      short loc_44FD"], ["lea~rbp,[rax+0]", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 101, 0, 0, 2, 0, 1, 34, 17, 0.021823390630266264, ["cmp     byte ptr [r14+13h], 2Eh ; '.'", "jz      loc_4700"], ["cmp~[yte ptr [r14+0],0", "jz~FOO"]], [0, 0, 101, 0, 0, 2, 1, 1, 35, 19, 0.010616784630940344, ["test    eax, eax", "jnz     short loc_44FD"], ["test~eax,eax", "jnz~FOO"]], [0, 0, 101, 0, 0, 3, 1, 1, 36, 18, 0.00817885630827997, ["mov     rbx, cs:hide_patterns", "test    rbx, rbx", "jz      short loc_44FD"], ["mov~rbx,<TAG>", "test~rbx,rbx", "jz~FOO"]], [2, 0, 115, 0, 1, 7, 1, 2, 24, 8, 0.0004844961240310078, ["lea     rdi, asc_1366C; \".\"", "mov     r8, r14; dirname", "mov     ecx, 1; command_line_arg", "xor     edx, edx; inode", "mov     esi, 3; type", "call    gobble_file", "jmp     loc_3CFD"], ["lea~rdi,<TAG>", "mov~r8,r14", "mov~ecx,0", "xor~edx,edx", "mov~esi,0", "call~FOO", "jmp~FOO"]], [0, 0, 101, 0, 0, 1, 0, 0, 37, 17, 0.006299853948994495, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 1, 0, 1, 2, 0, 1, 31, -1, 8.426019548365353e-06, ["mov     rdi, cs:active_dir_set; table", "call    hash_free"], ["mov~rdi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 30, -1, 0.0, ["mov     edi, cs:exit_status; status", "call    _exit"], ["mov~edi,<TAG>", "call~FOO"]], [0, 0, 101, 0, 0, 3, 1, 1, 39, 17, 0.00011796427367711494, ["mov     rbx, [rbx+8]", "test    rbx, rbx", "jnz     short loc_44E0"], ["mov~rbx,[rbx+0]", "test~rbx,rbx", "jnz~FOO"]], [1, 0, 115, 0, 1, 5, 1, 2, 24, 8, 0.0004844961240310078, ["lea     rdi, asc_1366C; \".\"", "mov     edx, 1; command_line_arg", "xor     esi, esi; realname", "call    queue_directory", "jmp     loc_3CFD"], ["lea~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "call~FOO", "jmp~FOO"]], [2, 0, 116, 1, 1, 9, 2, 2, 23, 8, 0.2114341085271318, ["mov     rdi, [argv+r12*8]; name", "xor     edx, edx; inode", "xor     esi, esi; type", "mov     r8, r14; dirname", "mov     ecx, 1; command_line_arg", "add     r12, 1", "call    gobble_file", "cmp     ebp, r12d", "jg      short loc_3CDF"], ["mov~rdi,<TAG>", "xor~edx,edx", "xor~esi,esi", "mov~r8,r14", "mov~ecx,0", "add~r12,0", "call~FOO", "cmp~ebp,r12d", "jg~FOO"]], [0, 0, 101, 0, 0, 3, 1, 1, 34, 18, 0.016290304460173016, ["mov     rbx, cs:ignore_patterns", "test    rbx, rbx", "jz      short loc_4531"], ["mov~rbx,<TAG>", "test~rbx,rbx", "jz~FOO"]], [2, 0, 101, 0, 0, 5, 1, 1, 36, 17, 0.002713178294573644, ["xor     eax, eax", "cmp     byte ptr [r14+14h], 2Eh ; '.'", "setz    al", "cmp     byte ptr [r14+rax+14h], 0", "jnz     loc_44FD"], ["xor~eax,eax", "cmp~[yte ptr [r14+0],0", "setz~al", "cmp~[yte ptr [r14+0],0", "jnz~FOO"]], [0, 0, 101, 0, 0, 1, 0, 0, 35, 17, 0.005937535108414785, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 101, 0, 0, 3, 1, 1, 37, 17, 5.055611729019212e-05, ["mov     rbx, [rbx+8]", "test    rbx, rbx", "jnz     short loc_4510"], ["mov~rbx,[rbx+0]", "test~rbx,rbx", "jnz~FOO"]], [0, 0, 101, 0, 0, 5, 0, 1, 26, 5, 0.16296764408493428, ["lea     rax, [rsp+3D8h+s1]", "mov     [rsp+3D8h+buf], rax", "lea     rax, [rsp+3D8h+act]", "mov     [rsp+3D8h+stat_buf], rax", "jmp     short loc_3D88"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 103, 0, 0, 2, 0, 1, 27, 6, 0.0026373441186383554, ["cmp     qword ptr [r15+18h], 0", "jnz     loc_3D1C"], ["cmp~[word ptr [r15+0],0", "jnz~FOO"]], [1, 0, 102, 0, 0, 2, 0, 1, 28, 6, 0.0, ["mov     cs:print_dir_name, 0", "jmp     loc_3D1C"], ["mov~<TAG>,0", "jmp~FOO"]], [2, 0, 101, 1, 0, 5, 1, 1, 35, 17, 0.00594596112796315, ["movzx   eax, byte ptr [r14+12h]", "xor     esi, esi", "sub     eax, 1", "cmp     al, 0Dh", "ja      short loc_454C"], ["movzx~eax,[yte ptr [r14+0]", "xor~esi,esi", "sub~eax,0", "cmp~al,0", "ja~FOO"]], [2, 0, 200, 0, 1, 11, 0, 2, 19, 17, 0.016388608021570612, ["mov     r9, cs:argmatch_die; exit_fn", "lea     rdx, time_style_args; arglist", "lea     rcx, time_style_types; vallist", "lea     rdi, aTimeStyle_0; \"time style\"", "mov     r8d, 4; valsize", "mov     rsi, r15; arg", "call    __xargmatch_internal", "lea     rdx, time_style_types", "mov     eax, [rdx+rax*4]", "cmp     eax, 1", "jz      loc_4F9F"], ["mov~r9,<TAG>", "lea~rdx,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "mov~r8d,0", "mov~rsi,r15", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 201, 0, 0, 1, 0, 0, 18, 18, 0.013709133805190428, ["lea     r15, dirname+11h; \"locale\""], ["lea~r15,<TAG>"]], [0, 0, 101, 0, 0, 3, 0, 0, 36, 17, 0.0, ["lea     rcx, CSWTCH_786", "movzx   eax, al", "mov     esi, [rcx+rax*4]; type"], ["lea~rcx,<TAG>", "movzx~eax,al", "mov~esi,<TAG>"]], [0, 0, 199, 0, 0, 1, 0, 0, 20, 17, 0.008695652173913044, ["jb      loc_4EA6"], ["jb~FOO"]], [1, 0, 197, 0, 0, 2, 0, 1, 21, 17, 0.006580721267273341, ["cmp     eax, 2", "jz      loc_4F7E"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 101, 0, 3, 10, 1, 3, 34, 7, 0.0014829794405123021, ["lea     rsi, aCannotDetermin; \"cannot determine device and inode of %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     edi, dword ptr [rsp+3D8h+serious]; serious", "mov     rdx, [rsp+3D8h+file]; file", "mov     rsi, rax; message", "call    file_failure", "mov     rdi, r13; dirp", "call    _closedir"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~edi,[word ptr [rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rdi,r13", "call~FOO"]], [0, 0, 101, 0, 0, 2, 1, 1, 33, 8, 0.021949780923491743, ["test    al, al", "jnz     loc_3D35"], ["test~al,al", "jnz~FOO"]], [0, 0, 101, 0, 0, 3, 1, 1, 33, 14, 0.09653690596562185, ["mov     edx, [r12]", "test    edx, edx", "jz      short loc_45A7"], ["mov~edx,<TAG>", "test~edx,edx", "jz~FOO"]], [1, 0, 101, 0, 3, 7, 0, 3, 31, 6, 0.04010785305021908, ["mov     rdi, [thispend]; ptr", "call    free", "mov     rdi, [thispend+8]; ptr", "call    free", "mov     rdi, thispend; ptr", "call    free", "mov     cs:print_dir_name, 1"], ["mov~rdi,<TAG>", "call~FOO", "mov~rdi,[thispend+0]", "call~FOO", "mov~rdi,thispend", "call~FOO", "mov~<TAG>,0"]], [1, 0, 101, 0, 5, 18, 4, 6, 36, 7, 0.0006740815638692282, ["mov     rdi, rbx; ptr", "call    free", "mov     rdi, [rsp+3D8h+file]; arg", "call    quotearg_colon", "lea     rsi, aSNotListingAlr; \"%s: not listing already-listed director\"...", "mov     rbx, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "xor     edi, edi; status", "mov     rdx, rax; format", "mov     rcx, rbx", "xor     esi, esi; errnum", "xor     eax, eax", "call    _error", "mov     rdi, r13; dirp", "call    _closedir", "jmp     loc_3D61"], ["mov~rdi,rbx", "call~FOO", "mov~rdi,[rsp+0]", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "xor~edi,edi", "mov~rdx,rax", "mov~rcx,rbx", "xor~esi,esi", "xor~eax,eax", "call~FOO", "mov~rdi,r13", "call~FOO", "jmp~FOO"]], [1, 0, 101, 0, 0, 2, 0, 1, 40, 7, 0.03434445567913718, ["cmp     cs:cwd_n_used, 0", "jz      loc_3D61"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 101, 0, 1, 2, 0, 2, 41, 7, 0.0, ["call    print_current_files", "jmp     loc_3D61"], ["call~FOO", "jmp~FOO"]], [0, 0, 101, 0, 0, 1, 0, 0, 32, 5, 0.04237445230872936, ["mov     thispend, cs:pending_dirs"], ["mov~thispend,<TAG>"]], [1, 0, 193, 0, 1, 7, 1, 2, 24, 17, 0.002275025278058645, ["mov     r13, cs:long_time_format", "xor     edi, edi; domainname", "mov     edx, 2; category", "mov     rsi, r13; msgid", "call    _dcgettext", "cmp     rax, r13", "jz      loc_4F9F"], ["mov~r13,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~rsi,r13", "call~FOO", "cmp~rax,r13", "jz~FOO"]], [0, 0, 101, 0, 1, 4, 1, 2, 34, 13, 0.09258510279743849, ["mov     rdi, r13; dirp", "call    _closedir", "test    eax, eax", "jnz     loc_48E4"], ["mov~rdi,r13", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 101, 0, 2, 9, 1, 3, 35, 13, 0.0, ["lea     rsi, aClosingDirecto; \"closing directory %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdx, [rsp+3D8h+file]; file", "mov     edi, dword ptr [rsp+3D8h+serious]; serious", "mov     rsi, rax; message", "call    file_failure", "jmp     loc_45B7"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdx,[rsp+0]", "mov~edi,[word ptr [rsp+0]", "mov~rsi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 101, 0, 0, 2, 0, 1, 36, 11, 0.08530502190765084, ["cmp     cs:recursive, 0", "jnz     loc_4723"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 101, 0, 0, 2, 0, 1, 37, 10, 0.044548365352207624, ["cmp     cs:print_dir_name, 0", "jnz     loc_4723"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 101, 0, 1, 5, 0, 2, 41, 12, 0.0, ["lea     rdi, subdired_obstack; struct obstack *", "mov     esi, 8; int", "call    __obstack_newchunk", "mov     rax, cs:subdired_obstack.next_free", "jmp     loc_47B6"], ["lea~rdi,<TAG>", "mov~esi,0", "call~FOO", "mov~rax,<TAG>", "jmp~FOO"]], [0, 0, 101, 0, 0, 4, 0, 0, 40, 12, 0.005299966295921807, ["mov     rax, cs:subdired_obstack.next_free", "lea     rdx, [rax+8]", "cmp     cs:subdired_obstack.chunk_limit, rdx", "jb      loc_4DC8"], ["mov~rax,<TAG>", "lea~rdx,[rax+0]", "cmp~<TAG>,rdx", "jb~FOO"]], [0, 0, 101, 0, 0, 3, 1, 1, 38, 9, 0.05436467812605326, ["mov     eax, cs:format_0", "test    eax, eax", "jz      short loc_45FA"], ["mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [3, 0, 101, 1, 1, 7, 0, 2, 40, 10, 0.010920121334681497, ["mov     rcx, cs:stdout@@GLIBC_2_2_5; stream", "lea     rdi, asc_136B7; \":\\n\"", "mov     edx, 2; n", "mov     esi, 1; size", "call    _fwrite_unlocked", "add     cs:dired_pos, 2", "jmp     loc_45E3"], ["mov~rcx,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "mov~esi,0", "call~FOO", "add~<TAG>,0", "jmp~FOO"]], [1, 0, 101, 0, 0, 2, 0, 1, 39, 8, 0.028943377148634986, ["cmp     cs:print_block_size, 0", "jz      loc_46E7"], ["cmp~<TAG>,0", "jz~FOO"]], [3, 1, 101, 3, 2, 23, 2, 2, 42, 10, 0.011914391641388609, ["mov     r8, cs:output_block_size; to_block_size", "mov     edx, cs:human_output_opts; opts", "mov     ecx, 200h; from_block_size", "mov     rsi, [rsp+3D8h+buf]; buf", "mov     rdi, [rsp+3D8h+n]; n", "add     cs:dired_pos, 1", "call    human_readable", "mov     rsi, cs:stdout@@GLIBC_2_2_5; stream", "mov     rbx, rax", "mov     rdi, rax; s", "call    _fputs_unlocked", "xor     eax, eax", "or      rcx, 0FFFFFFFFFFFFFFFFh", "mov     rdi, rbx", "repne scasb", "mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, rcx", "not     rax", "sub     rax, 1", "add     cs:dired_pos, rax", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_4E02"], ["mov~r8,<TAG>", "mov~edx,<TAG>", "mov~ecx,<STR>", "mov~rsi,[rsp+0]", "mov~rdi,[rsp+0]", "add~<TAG>,0", "call~FOO", "mov~rsi,<TAG>", "mov~rbx,rax", "mov~rdi,rax", "call~FOO", "xor~eax,eax", "or~rcx,0", "mov~rdi,rbx", "scasb~<TAG>,", "mov~rdi,<TAG>", "mov~rax,rcx", "not~rax", "sub~rax,0", "add~<TAG>,rax", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [0, 0, 214, 0, 1, 5, 1, 2, 17, 19, 0.013035052241321201, ["lea     rdi, aTimeStyle; \"TIME_STYLE\"", "call    _getenv", "test    rax, rax", "mov     r15, rax", "jnz     loc_3F29"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~r15,rax", "jnz~FOO"]], [0, 0, 215, 0, 0, 2, 1, 1, 16, 20, 0.02527805864509606, ["test    r15, r15", "jz      loc_4CF1"], ["test~r15,r15", "jz~FOO"]], [0, 1, 101, 0, 1, 3, 0, 2, 41, 11, 0.006445904954499495, ["mov     esi, 20h ; ' '; int", "call    ___overflow", "jmp     loc_4668"], ["mov~esi,<STR>", "call~FOO", "jmp~FOO"]], [3, 0, 101, 2, 2, 20, 3, 2, 40, 12, 0.017374452308729357, ["lea     rsi, aTotal; \"total\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, cs:stdout@@GLIBC_2_2_5; stream", "mov     rbx, rax", "mov     rdi, rax; s", "call    _fputs_unlocked", "xor     eax, eax", "or      rcx, 0FFFFFFFFFFFFFFFFh", "mov     rdi, rbx", "repne scasb", "mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, rcx", "not     rax", "sub     rax, 1", "add     cs:dired_pos, rax", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_4E11"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,<TAG>", "mov~rbx,rax", "mov~rdi,rax", "call~FOO", "xor~eax,eax", "or~rcx,0", "mov~rdi,rbx", "scasb~<TAG>,", "mov~rdi,<TAG>", "mov~rax,rcx", "not~rax", "sub~rax,0", "add~<TAG>,rax", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [2, 0, 101, 0, 1, 4, 0, 1, 32, 9, 0.011463599595551063, ["mov     esi, eax; fildes", "mov     edi, 1; ver", "call    ___fxstat", "shr     eax, 1Fh"], ["mov~esi,eax", "mov~edi,0", "call~FOO", "shr~eax,0"]], [0, 1, 101, 0, 0, 3, 0, 0, 41, 11, 0.006445904954499495, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 20h ; ' '"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,<STR>"]], [0, 0, 0, 0, 1, 2, 1, 1, 12, -1, 0.0, ["xor     edi, edi; jumptable 0000000000003448 case 1", "call    usage"], ["xor~edi,edi", "call~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 11, -1, 0.0, ["mov     edi, 2; jumptable 0000000000003448 default case", "call    usage"], ["mov~edi,0", "call~FOO"]], [2, 0, 220, 1, 0, 4, 0, 1, 14, 17, 0.11854145601617797, ["mov     eax, cs:time_type_0", "sub     eax, 1", "cmp     eax, 1", "ja      short loc_3F13"], ["mov~eax,<TAG>", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 219, 0, 0, 2, 0, 1, 15, 17, 0.001445062352544658, ["cmp     byte ptr [rsp+3D8h+file], 0", "jnz     short loc_3F13"], ["cmp~[yte ptr [rsp+0],0", "jnz~FOO"]], [1, 0, 217, 0, 0, 2, 0, 1, 16, 17, 0.0006024603977081227, ["cmp     cs:format_0, 0", "jz      short loc_3F20"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 2, 0, 0, 4, 0, 1, 12, -1, 0.0017526120660599934, ["mov     eax, cs:ls_mode; jumptable 0000000000003448 case 0", "lea     rsi, domainname+7; \"ls\"", "cmp     eax, 1", "jz      short loc_3714"], ["mov~eax,<TAG>", "lea~rsi,<TAG>", "cmp~eax,0", "jz~FOO"]], [2, 0, 218, 1, 0, 4, 0, 1, 15, 17, 0.0011880687563195149, ["mov     eax, cs:time_type_0", "sub     eax, 1", "cmp     eax, 1", "ja      short loc_3F13"], ["mov~eax,<TAG>", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 1, 0, 0, 4, 0, 0, 13, -1, 0.0, ["cmp     eax, 2", "lea     rsi, aVdir; \"vdir\"", "lea     rax, aVdir+1; \"dir\"", "cmovz   rsi, rax; command_name"], ["cmp~eax,0", "lea~rsi,<TAG>", "lea~rax,<TAG>", "cmovz~rsi,rax"]], [1, 0, 217, 0, 0, 2, 0, 1, 16, 17, 0.00021907650825749917, ["cmp     byte ptr [rsp+3D8h+file], 0", "jz      short loc_3F20"], ["cmp~[yte ptr [rsp+0],0", "jz~FOO"]], [1, 0, 101, 0, 0, 2, 0, 1, 37, 13, 0.03640040444893832, ["cmp     cs:first_8461, 0", "jnz     short loc_4754"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 212, 0, 0, 2, 0, 1, 17, 19, 0.012108190091001012, ["lea     r13, posix_prefix_8309; \"posix-\"", "jmp     short loc_3F3C"], ["lea~r13,<TAG>", "jmp~FOO"]], [1, 0, 212, 1, 0, 1, 0, 0, 20, 19, 0.0001600943714189417, ["add     r15, 6"], ["add~r15,0"]], [1, 0, 212, 0, 1, 4, 1, 2, 19, 17, 0.007701381867205932, ["mov     edi, 2; category", "call    hard_locale", "test    al, al", "jnz     short loc_3F38"], ["mov~edi,0", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 101, 0, 0, 4, 0, 0, 38, 15, 0.007945736434108527, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_4F6F"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [2, 0, 0, 1, 2, 11, 2, 2, 13, -1, 0.0, ["sub     rsp, 8", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "lea     r9, aDavidMackenzie; \"David MacKenzie\"", "push    0", "lea     r8, aRichardStallma; \"Richard Stallman\"", "lea     rcx, version; \"6.12\"", "lea     rdx, package; \"GNU \"", "xor     eax, eax", "call    version_etc", "xor     edi, edi; status", "call    _exit"], ["sub~rsp,0", "mov~rdi,<TAG>", "lea~r9,<TAG>", "push~0", "lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "xor~eax,eax", "call~FOO", "xor~edi,edi", "call~FOO"]], [1, 0, 101, 0, 0, 3, 0, 0, 39, 14, 0.00173154701718908, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [1, 0, 101, 1, 0, 1, 0, 0, 40, 13, 0.002485675766767779, ["add     cs:dired_pos, 1"], ["add~<TAG>,0"]], [1, 0, 101, 0, 1, 3, 0, 2, 39, 14, 0.00173154701718908, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     loc_474C"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [1, 0, 101, 1, 1, 11, 2, 2, 39, 11, 0.01820020222446916, ["mov     rax, [rsp+3D8h+var_3B0]", "mov     rdx, cs:dirname_quoting_options; options", "mov     rdi, cs:stdout@@GLIBC_2_2_5; out", "test    rax, rax", "cmovz   rax, [rsp+3D8h+file]", "xor     ecx, ecx; width", "mov     rsi, rax; name", "call    quote_name", "add     cs:dired_pos, rax", "cmp     cs:dired, 0", "jz      short loc_47C8"], ["mov~rax,[rsp+0]", "mov~rdx,<TAG>", "mov~rdi,<TAG>", "test~rax,rax", "cmovz~rax,[rsp+0]", "xor~ecx,ecx", "mov~rsi,rax", "call~FOO", "add~<TAG>,rax", "cmp~<TAG>,0", "jz~FOO"]], [3, 0, 135, 1, 0, 4, 1, 0, 20, 15, 0.0, ["cmp     cs:format_0, 1", "sbb     eax, eax", "and     eax, 0FFFFFFFEh", "add     eax, 4"], ["cmp~<TAG>,0", "sbb~eax,eax", "and~eax,0", "add~eax,0"]], [1, 0, 101, 1, 0, 3, 0, 0, 41, 11, 0.0016599258510279745, ["mov     rdx, cs:dired_pos", "mov     [rax], rdx", "add     cs:subdired_obstack.next_free, 8"], ["mov~rdx,<TAG>", "mov~<TAG>,rdx", "add~<TAG>,0"]], [0, 0, 0, 0, 1, 6, 1, 1, 13, -1, 0.0, ["mov     r8, cs:optarg@@GLIBC_2_2_5; arg", "mov     esi, [rsp+3D8h+longind]; opt_idx", "lea     rcx, long_options; long_options", "xor     edx, edx; c", "mov     edi, eax; err", "call    xstrtol_fatal"], ["mov~r8,<TAG>", "mov~esi,[rsp+0]", "lea~rcx,<TAG>", "xor~edx,edx", "mov~edi,eax", "call~FOO"]], [0, 0, 188, 0, 1, 5, 1, 2, 17, 18, 0.061931243680485346, ["lea     rdi, aLsColors; \"LS_COLORS\"", "call    _getenv", "test    rax, rax", "mov     qword ptr [rsp+3D8h+longind], rax", "jz      short loc_3FEB"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~[word ptr [rsp+0],rax", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 31, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___8112; \"dev_ino_pop\"", "lea     rsi, file; \"ls.c\"", "lea     rdi, aSizeofStructDe; \"sizeof (struct dev_ino) <= obstack_obje\"...", "mov     edx, 39Fh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]]], "func_feature": [185, 168, 460, 3, 346, 562, 0, 1569, 0.02254, 164, 47], "succs": [[209], [0, 132, 263, 139, 145, 18, 147, 149, 152, 4, 154, 28, 157, 159, 32, 39, 46, 221, 49, 51, 57, 62, 322, 323, 327, 201, 241, 227, 217, 218, 219, 220, 93, 223, 224, 225, 226, 99, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 104, 242, 243, 116, 245, 246, 247, 248, 254], [298], [320, 2], [209], [13, 253], [5, 7], [5, 77], [5], [10], [9, 212], [345, 15], [42, 11], [16], [25], [25, 14], [17, 19], [16, 27], [209], [17], [26, 167], [20], [20], [20], [20], [29, 190], [153, 204], [30], [209], [304], [40, 31], [43, 30], [209], [56, 103], [33], [33], [33], [33], [209], [209, 38], [31], [300], [41, 261], [253], [308], [308, 44], [209], [137, 50], [257, 47], [209], [257], [209], [302], [52], [52], [103], [161, 55], [209], [], [58, 279], [6, 63], [8, 60], [171, 84], [8, 6], [344, 253], [64, 76], [64], [64, 317], [64], [64], [64, 71], [64, 305], [64], [64], [64], [64], [64, 66], [8], [272], [272, 78], [292, 164], [80, 334], [259, 85], [82, 259], [171, 86], [259, 91], [88, 87], [209], [171, 87], [319], [89, 319], [92, 79], [94, 79], [96, 343], [79, 95], [79], [209], [207], [97, 198], [209], [106, 107], [100, 109], [168, 105], [168, 102], [209], [179], [112, 109], [106], [289, 110], [288, 108], [114, 146], [121, 110], [110, 119], [35, 117], [122, 126], [131, 127], [115, 127], [37, 118], [120, 162], [123, 125], [], [42, 12], [126], [124], [288], [124], [129], [131], [136, 129], [128, 130], [128], [209], [209], [184], [133, 135], [185, 133], [140], [], [137, 252], [209], [141, 143], [140], [72, 75], [144, 146], [146], [209], [150, 151], [209], [24, 61], [209], [280, 59], [150], [209], [155, 163], [209], [156, 206], [22, 158], [209], [160, 213], [209], [163], [103], [34, 36], [203, 165], [180, 166], [167], [176, 173], [203, 172], [179], [256, 341], [256, 169], [209], [175], [176], [194, 175], [186, 174], [69], [182], [177, 182], [184, 181], [69], [184, 134], [187, 183], [187], [193, 188], [184], [194, 21], [202, 191], [193, 189], [193], [], [192, 202], [195], [98, 207], [203], [202, 195], [340, 199], [340, 196], [207], [210, 211], [222], [200, 222], [208, 324], [10], [203, 205], [203, 21], [203, 23], [209], [328, 65], [178, 250], [340], [210], [213], [214, 215], [249, 61], [216, 214], [214], [209], [209], [209], [209], [209], [209], [209], [209], [209], [209], [209], [209], [209], [209], [209], [209], [209], [209], [209], [209], [209], [209], [209], [209], [209], [209], [209, 244], [209], [209], [209], [209], [209], [253], [1, 323], [258, 255], [251, 301], [48, 170], [217], [258], [48], [259, 83], [260], [79], [264], [3, 260], [230], [230, 262], [273, 299], [264, 281], [264, 287], [264], [264, 306], [264, 285], [264], [282, 277], [283, 271], [274, 284], [275, 269], [284, 276], [284, 278], [101], [265], [280], [], [265, 284], [101], [283, 101], [291, 286], [284, 270], [266], [266, 291], [111], [288, 290], [288], [267, 294], [75, 295], [292], [267], [296, 73], [74, 70], [300], [297, 138], [306, 268], [304], [300], [300, 303], [300], [111], [75, 142], [307, 45], [45], [331, 309], [312, 331], [342], [342, 310], [314, 90], [312], [90, 302], [53, 54], [332, 293], [332, 316], [315], [321, 318], [298], [315], [], [], [67, 325], [67, 326], [66, 317], [336, 329], [330, 67], [336], [67, 317], [197, 335], [81], [81], [68, 333], [337, 339], [], [338], [197], [338], [313, 311], [256], [313], [], [148, 61], []], "fname": "main", "n_num": 346}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 0, 0, 1, 12, 2, 1, 0, 0, 0.0, ["xor     ebp, ebp", "mov     r9, rdx; rtld_fini", "pop     rsi; argc", "mov     rdx, rsp; ubp_av", "and     rsp, 0FFFFFFFFFFFFFFF0h", "push    rax", "push    rsp; stack_end", "lea     r8, __libc_csu_fini; fini", "lea     rcx, __libc_csu_init; init", "lea     rdi, main; main", "call    cs:__libc_start_main_ptr", "hlt"], ["xor~ebp,ebp", "mov~r9,rdx", "pop~rsi", "mov~rdx,rsp", "and~rsp,0", "push~rax", "push~rsp", "lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "call~<TAG>", "hlt"]]], "func_feature": [1, 2, 1, 0, 1, 0, 0, 12, 0.0, 4, 0], "succs": [[]], "fname": "_start", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_deregisterTMCloneTable_ptr", "test    rax, rax", "jz      short loc_5070"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 6, 0, 1, 0, 1, 0.0, ["lea     rdi, __bss_start", "push    rbp", "lea     rax, __bss_start", "cmp     rax, rdi", "mov     rbp, rsp", "jz      short loc_5070"], ["lea~rdi,<TAG>", "push~rbp", "lea~rax,<TAG>", "cmp~rax,rdi", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, -1, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 13, 0.04167, 2, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "deregister_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [3, 0, 3, 2, 0, 11, 0, 1, 0, 0, 0.0, ["lea     rdi, __bss_start", "lea     rsi, __bss_start", "push    rbp", "sub     rsi, rdi", "mov     rbp, rsp", "sar     rsi, 3", "mov     rax, rsi", "shr     rax, 3Fh", "add     rsi, rax", "sar     rsi, 1", "jz      short loc_50C0"], ["lea~rdi,<TAG>", "lea~rsi,<TAG>", "push~rbp", "sub~rsi,rdi", "mov~rbp,rsp", "sar~rsi,0", "mov~rax,rsi", "shr~rax,0", "add~rsi,rax", "sar~rsi,0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_registerTMCloneTable_ptr", "test    rax, rax", "jz      short loc_50C0"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, 0, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 18, 0.04167, 2, 2], "succs": [[], [0, 2], [0, 3], []], "fname": "register_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 0, 0, 1, 4, 0, 1, 0, 0, 0.0, ["call    deregister_tm_clones", "mov     cs:completed_7698, 1", "pop     rbp", "retn"], ["call~FOO", "mov~<TAG>,0", "pop~rbp", "retn"]], [1, 0, 2, 0, 0, 4, 0, 1, 1, -1, 0.16666666666666666, ["cmp     cs:__cxa_finalize_ptr, 0", "push    rbp", "mov     rbp, rsp", "jz      short loc_50F3"], ["cmp~<TAG>,0", "push~rbp", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     rdi, cs:__dso_handle", "call    __cxa_finalize"], ["mov~rdi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:completed_7698, 0", "jnz     short locret_5108"], ["cmp~<TAG>,0", "jnz~FOO"]]], "func_feature": [2, 0, 4, 0, 5, 5, 0, 13, 0.03333, 3, 0], "succs": [[], [0, 2], [0], [], [1, 3]], "fname": "__do_global_dtors_aux", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "pop     rbp", "jmp     register_tm_clones"], ["push~rbp", "mov~rbp,rsp", "pop~rbp", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "frame_dummy", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 1, 0, 5, 1, 0, 0, 0, 0.0, ["mov     rax, [p]", "xor     edx, edx", "div     table_size", "mov     rax, rdx", "retn"], ["mov~rax,<TAG>", "xor~edx,edx", "div~,table_size", "mov~rax,rdx", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 0, 1], "succs": [[]], "fname": "dev_ino_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.0, ["xor     eax, eax", "mov     rdx, [b]", "cmp     [a], rdx", "jz      short loc_5140"], ["xor~eax,eax", "mov~rdx,<TAG>", "cmp~<TAG>,rdx", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["mov     rax, [b+8]", "cmp     [a+8], rax", "setz    al", "retn"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "setz~al", "retn"]]], "func_feature": [0, 1, 1, 0, 3, 2, 0, 9, 0.0, 0, 0], "succs": [[1, 2], [], []], "fname": "dev_ino_compare", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     eax, cs:interrupt_signal", "test    eax, eax", "jnz     short locret_5160"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.0, ["mov     cs:interrupt_signal, edi"], ["mov~<TAG>,edi"]]], "func_feature": [0, 1, 1, 0, 3, 3, 0, 5, 0.0, 1, 0], "succs": [[1, 2], [], [1]], "fname": "sighandler", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[12, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0.0, ["pop     rbx", "mov     cs:cwd_n_used, 0", "mov     cs:any_has_acl, 0", "pop     rbp", "mov     cs:inode_number_width, 0", "mov     cs:block_size_width, 0", "mov     cs:nlink_width, 0", "mov     cs:owner_width, 0", "mov     cs:group_width, 0", "mov     cs:author_width, 0", "mov     cs:scontext_width, 0", "mov     cs:major_device_number_width, 0", "mov     cs:minor_device_number_width, 0", "mov     cs:file_size_width, 0", "pop     r12", "retn"], ["pop~rbx", "mov~<TAG>,0", "mov~<TAG>,0", "pop~rbp", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0", "pop~r12", "retn"]], [0, 0, 3, 0, 0, 6, 1, 1, 0, 0, 0.0, ["mov     rax, cs:cwd_n_used", "push    r12", "push    rbp", "push    rbx", "test    rax, rax", "jz      short loc_51AE"], ["mov~rax,<TAG>", "push~r12", "push~rbp", "push~rbx", "test~rax,rax", "jz~FOO"]], [1, 0, 2, 1, 2, 8, 0, 3, 2, 0, 0.16666666666666666, ["mov     rbp, [rbx]", "add     rbx, 8", "mov     rdi, [f+0]; ptr", "call    free", "mov     rdi, [f+8]; ptr", "call    free", "cmp     rbx, r12", "jnz     short loc_5190"], ["mov~rbp,<TAG>", "add~rbx,0", "mov~rdi,[f+0]", "call~FOO", "mov~rdi,[f+0]", "call~FOO", "cmp~rbx,r12", "jnz~FOO"]], [0, 0, 2, 0, 0, 3, 0, 0, 1, 0, 0.16666666666666666, ["mov     rbx, cs:sorted_file", "lea     r12, [rbx+rax*8]", "nop     dword ptr [rax+rax+00h]"], ["mov~rbx,<TAG>", "lea~r12,<TAG>", "nop~[word ptr [rax+0]"]]], "func_feature": [2, 1, 4, 0, 4, 5, 2, 33, 0.08333, 13, 1], "succs": [[], [0, 3], [0, 2], [2]], "fname": "clear_files", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     free"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 1, 0.0, 0, 0], "succs": [[1], []], "fname": "dev_ino_free", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 44, 0, 0, 1, 0, 1, 0, 0, 0.6506342494714588, ["jle     loc_5358"], ["jle~FOO"]], [3, 0, 44, 2, 0, 6, 0, 1, 6, 9, 0.3580866807610994, ["mov     [r9], cl; jumptable 0000000000005301 default case", "movzx   ecx, byte ptr [r8]", "add     count, 1", "add     r9, 1", "cmp     cl, 3Dh ; '='", "jnz     short loc_5280"], ["mov~<TAG>,cl", "movzx~ecx,<TAG>", "add~count,0", "add~r9,0", "cmp~cl,0", "jnz~FOO"]], [0, 0, 44, 0, 0, 1, 0, 0, 2, 9, 0.32478858350951373, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 44, 1, 0, 4, 0, 1, 6, 5, 0.44714587737843553, ["movzx   r13d, cl", "movsxd  r13, dword ptr [r11+r13*4]", "add     r13, r11", "jmp     r13; switch jump"], ["movzx~r13d,cl", "movsxd~r13,<TAG>", "add~r13,r11", "jmp~r13"]], [2, 0, 44, 1, 0, 4, 0, 1, 5, 6, 0.4704016913319239, ["movzx   ecx, byte ptr [r8+1]", "add     r8, 2", "cmp     cl, 78h ; 'x'; switch 121 cases", "ja      short loc_52AE; jumptable 0000000000005301 default case"], ["movzx~ecx,[yte ptr [r8+0]", "add~r8,0", "cmp~cl,0", "ja~FOO"]], [2, 0, 44, 2, 0, 4, 0, 1, 9, 11, 0.17019027484143764, ["mov     [r9], r14b", "add     count, 1", "add     r9, 1", "jmp     loc_526F"], ["mov~<TAG>,r14b", "add~count,0", "add~r9,0", "jmp~FOO"]], [0, 1, 44, 0, 0, 4, 0, 1, 8, 3, 0.21088794926004228, ["movzx   r13d, byte ptr [r8]", "lea     ecx, [r13-30h]", "cmp     cl, 36h ; '6'", "ja      short loc_53F8"], ["movzx~r13d,<TAG>", "lea~ecx,[r13-30h]+0]", "cmp~cl,<STR>", "ja~FOO"]], [1, 0, 44, 0, 0, 2, 1, 1, 11, 4, 0.06871035940803383, ["test    r15d, 3FFh", "jz      short loc_53F8"], ["test~r15d,0", "jz~FOO"]], [0, 0, 44, 0, 0, 1, 0, 0, 13, 12, 0.019027484143763214, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 44, 0, 0, 2, 0, 1, 7, 10, 0.0, ["mov     ecx, 0Dh; jumptable 0000000000005301 case 114", "jmp     loc_52AE; jumptable 0000000000005301 default case"], ["mov~ecx,0", "jmp~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 4, 7, 0.5895877378435518, ["cmp     cl, 5Ch ; '\\'", "jz      short loc_52E8"], ["cmp~cl,0", "jz~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 7, 10, 0.0, ["mov     ecx, 1Bh; jumptable 0000000000005301 case 101", "jmp     loc_52AE; jumptable 0000000000005301 default case"], ["mov~ecx,0", "jmp~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 5, 12, 0.10068710359408034, ["cmp     cl, 5Eh ; '^'", "jnz     short loc_52D0"], ["cmp~cl,0", "jnz~FOO"]], [0, 1, 44, 0, 0, 2, 0, 1, 7, 10, 0.0, ["mov     ecx, 20h ; ' '; jumptable 0000000000005301 case 95", "jmp     loc_52AE; jumptable 0000000000005301 default case"], ["mov~ecx,<STR>", "jmp~FOO"]], [2, 0, 44, 1, 0, 5, 0, 1, 7, 10, 0.039640591966173366, ["movzx   r13d, byte ptr [r8]; jumptable 0000000000005301 cases 48-55", "sub     ecx, 30h ; '0'", "lea     r14d, [r13-30h]", "cmp     r14b, 7", "ja      short loc_52AE; jumptable 0000000000005301 default case"], ["movzx~r13d,<TAG>", "sub~ecx,0", "lea~r14d,[r13-30h]+0]", "cmp~r14b,0", "ja~FOO"]], [0, 0, 1, 0, 0, 3, 1, 1, 7, -1, 0.0015856236786469346, ["mov     r14, r8; jumptable 0000000000005301 case 0", "xor     eax, eax", "jmp     short loc_533F"], ["mov~r14,r8", "xor~eax,eax", "jmp~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 7, 10, 0.0, ["mov     ecx, 7Fh; jumptable 0000000000005301 case 63", "jmp     loc_52AE; jumptable 0000000000005301 default case"], ["mov~ecx,0", "jmp~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 7, 10, 0.0, ["mov     ecx, 9; jumptable 0000000000005301 case 116", "jmp     loc_52AE; jumptable 0000000000005301 default case"], ["mov~ecx,0", "jmp~FOO"]], [1, 0, 44, 0, 0, 5, 0, 1, 6, 11, 0.08905919661733616, ["movzx   ecx, byte ptr [p+1]", "lea     r14, [p+1]", "lea     r13d, [rcx-40h]", "cmp     r13b, 3Eh ; '>'", "ja      loc_5338"], ["movzx~ecx,[yte ptr [p+0]", "lea~r14,[p+0]", "lea~r13d,[rcx-40h]+0]", "cmp~r13b,0", "ja~FOO"]], [0, 0, 44, 0, 0, 2, 1, 0, 7, 4, 0.15116279069767444, ["xor     r14d, r14d; jumptable 0000000000005301 cases 88,120", "nop     dword ptr [rax+rax+00h]"], ["xor~r14d,r14d", "nop~[word ptr [rax+0]"]], [1, 0, 44, 0, 0, 2, 0, 1, 7, 10, 0.0, ["mov     ecx, 7; jumptable 0000000000005301 case 97", "jmp     loc_52AE; jumptable 0000000000005301 default case"], ["mov~ecx,0", "jmp~FOO"]], [2, 0, 44, 1, 0, 2, 1, 0, 7, 10, 0.027748414376321355, ["add     r8, 2", "and     ecx, 1Fh"], ["add~r8,0", "and~ecx,0"]], [2, 0, 44, 2, 0, 4, 0, 1, 10, 4, 0.011099365750528542, ["shl     r14d, 4", "add     r8, 1", "lea     r14d, [r13+r14-37h]", "jmp     loc_53A8"], ["shl~r14d,0", "add~r8,0", "lea~r14d,[r13+0]", "jmp~FOO"]], [1, 0, 44, 1, 0, 4, 1, 1, 9, 2, 0.1178646934460888, ["mov     r15, rax", "shl     r15, cl", "test    r15d, 7E0000h", "jnz     loc_54A0"], ["mov~r15,rax", "shl~r15,cl", "test~r15d,0", "jnz~FOO"]], [2, 0, 44, 1, 0, 6, 0, 0, 8, 11, 0.020084566596194505, ["add     r8, 1", "lea     ecx, [r13+rcx*8-30h]", "movzx   r13d, byte ptr [p]", "lea     r14d, [r13-30h]", "cmp     r14b, 7", "jbe     short loc_5319"], ["add~r8,0", "lea~ecx,[r13+0]", "movzx~r13d,<TAG>", "lea~r14d,[r13-30h]+0]", "cmp~r14b,0", "jbe~FOO"]], [0, 0, 44, 0, 0, 1, 0, 1, 9, 10, 0.022198731501057084, ["jmp     loc_52AE; jumptable 0000000000005301 default case"], ["jmp~FOO"]], [2, 0, 44, 2, 0, 4, 0, 1, 11, 0, 0.0010570824524312897, ["shl     r14d, 4", "add     r8, 1", "lea     r14d, [r13+r14-57h]", "jmp     loc_53A8"], ["shl~r14d,0", "add~r8,0", "lea~r14d,[r13+0]", "jmp~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 7, 10, 0.0, ["mov     ecx, 0Bh; jumptable 0000000000005301 case 118", "jmp     loc_52AE; jumptable 0000000000005301 default case"], ["mov~ecx,0", "jmp~FOO"]], [2, 1, 44, 2, 0, 7, 0, 0, 12, 3, 0.023255813953488372, ["add     r8, 1", "shl     r14d, 4", "lea     r14d, [r13+r14-30h]", "movzx   r13d, byte ptr [p]", "lea     ecx, [r13-30h]", "cmp     cl, 36h ; '6'", "jbe     short loc_53B5"], ["add~r8,0", "shl~r14d,0", "lea~r14d,[r13+0]", "movzx~r13d,<TAG>", "lea~ecx,[r13-30h]+0]", "cmp~cl,<STR>", "jbe~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 7, 12, 0.04281183932346723, ["cmp     cl, 3Fh ; '?'", "jz      short loc_5370"], ["cmp~cl,0", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 1, 0, 8, -1, 0.0015856236786469346, ["xor     eax, eax"], ["xor~eax,eax"]], [3, 0, 44, 3, 0, 5, 0, 1, 3, 11, 0.09328752642706131, ["mov     [q], cl", "add     p, 1", "add     r10, 1", "add     r9, 1", "jmp     short loc_526F"], ["mov~<TAG>,cl", "add~p,0", "add~r10,0", "add~r9,0", "jmp~FOO"]], [0, 0, 44, 0, 0, 2, 1, 1, 2, 12, 0.07029598308668077, ["test    r12b, r12b", "jz      short loc_52D0"], ["test~r12b,r12b", "jz~FOO"]], [0, 1, 44, 0, 0, 2, 0, 1, 5, 12, 0.022463002114164906, ["cmp     cl, 3Ah ; ':'", "jnz     loc_52D0"], ["cmp~cl,<STR>", "jnz~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 7, 10, 0.0, ["mov     ecx, 8; jumptable 0000000000005301 case 98", "jmp     loc_52AE; jumptable 0000000000005301 default case"], ["mov~ecx,0", "jmp~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 7, 10, 0.0, ["mov     ecx, 0Ch; jumptable 0000000000005301 case 102", "jmp     loc_52AE; jumptable 0000000000005301 default case"], ["mov~ecx,0", "jmp~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 7, 10, 0.0, ["mov     ecx, 0Ah; jumptable 0000000000005301 case 110", "jmp     loc_52AE; jumptable 0000000000005301 default case"], ["mov~ecx,0", "jmp~FOO"]], [1, 0, 44, 0, 0, 3, 0, 1, 1, 10, 0.35650105708245244, ["movzx   ecx, byte ptr [p]", "cmp     cl, 3Dh ; '='", "jz      short loc_52C2"], ["movzx~ecx,<TAG>", "cmp~cl,0", "jz~FOO"]], [0, 0, 44, 0, 0, 2, 1, 1, 10, 1, 0.08826638477801269, ["test    r15, rbp", "jnz     loc_54B8"], ["test~r15,rbp", "jnz~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 3, -1, 0.015856236786469344, ["mov     eax, edx", "mov     r14, p", "jmp     short loc_533F"], ["mov~eax,edx", "mov~r14,p", "jmp~FOO"]], [0, 0, 0, 0, 0, 10, 0, 0, 4, -1, 0.0, ["mov     [dest], q", "mov     [src], r14", "mov     [output_count], r10", "pop     output_count", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~<TAG>,q", "mov~<TAG>,r14", "mov~<TAG>,r10", "pop~output_count", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 1, 0, 0, 3, 0, 1, 5, -1, 0.0021141649048625794, ["mov     r14, p", "mov     eax, 1", "jmp     short loc_533F"], ["mov~r14,p", "mov~eax,0", "jmp~FOO"]], [0, 0, 44, 0, 0, 2, 1, 1, 4, 13, 0.04254756871035941, ["test    cl, cl", "jz      short loc_5365"], ["test~cl,cl", "jz~FOO"]], [2, 0, 44, 0, 0, 14, 1, 0, 0, 11, 0.0, ["mov     r8, [src]", "mov     r9, [dest]", "lea     r11, off_12C20", "push    r15", "xor     r10d, r10d", "push    r14", "mov     eax, 1", "push    r13", "push    r12", "mov     r12d, edx", "push    rbp", "mov     rbp, 7E000000000000h", "push    rbx", "mov     rbx, output_count"], ["mov~r8,<TAG>", "mov~r9,<TAG>", "lea~r11,<TAG>", "push~r15", "xor~r10d,r10d", "push~r14", "mov~eax,0", "push~r13", "push~r12", "mov~r12d,edx", "push~rbp", "mov~rbp,0", "push~rbx", "mov~rbx,output_count"]], [3, 0, 44, 2, 0, 5, 0, 1, 8, 11, 0.022198731501057084, ["mov     byte ptr [r9], 7Fh", "add     count, 1", "add     r9, 1", "mov     r8, p", "jmp     loc_526F"], ["mov~<TAG>,0", "add~count,0", "add~r9,0", "mov~r8,p", "jmp~FOO"]]], "func_feature": [0, 10, 36, 0, 45, 75, 3, 148, 0.10384, 1, 21], "succs": [[10, 42], [0, 32], [0], [1, 34, 35, 36, 9, 11, 13, 14, 15, 16, 17, 19, 20, 27], [1, 3], [37], [5, 23], [28, 5], [5], [1], [4, 12], [1], [18, 31], [1], [24, 1], [40], [1], [1], [21, 29], [6], [1], [1], [6], [38, 22], [24, 25], [1], [6], [1], [8, 23], [44, 30], [40], [37], [39, 31], [41, 31], [1], [1], [1], [32, 2], [26, 7], [40], [], [40], [33, 41], [37], [37]], "fname": "get_funky_string", "n_num": 45}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["cmp     byte ptr [rsi], 30h ; '0'", "setnz   al", "retn"], ["cmp~<TAG>,0", "setnz~al", "retn"]], [1, 0, 4, 0, 0, 3, 0, 1, 1, 0, 0.15000000000000002, ["cmp     len, 1", "mov     rsi, [rdi+8]", "jz      short loc_5520"], ["cmp~len,0", "mov~rsi,[rdi+0]", "jz~FOO"]], [1, 0, 5, 2, 0, 8, 2, 1, 0, 0, 0.0, ["lea     rax, color_indicator", "mov     edi, edi", "shl     type, 4", "add     rdi, rax", "xor     eax, eax", "mov     len, [rdi]", "test    len, len", "jz      short locret_5517"], ["lea~rax,<TAG>", "mov~edi,edi", "shl~type,0", "add~rdi,rax", "xor~eax,eax", "mov~len,<TAG>", "test~len,len", "jz~FOO"]], [2, 0, 1, 0, 0, 7, 1, 0, 3, 0, 0.0, ["lea     rdi, a00; \"00\"", "mov     ecx, 2", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "setnz   al"], ["lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "setnz~al"]], [2, 0, 2, 0, 0, 3, 0, 1, 2, 0, 0.15000000000000002, ["cmp     len, 2", "mov     eax, 1", "jnz     short locret_5517"], ["cmp~len,0", "mov~eax,0", "jnz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 3, 3, 0, 6, 7, 4, 25, 0.05, 2, 2], "succs": [[], [0, 4], [1, 5], [5], [3, 5], []], "fname": "is_colored", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 2, 0, 0, 4, 2, 1, 0, 0, 0.3333333333333333, ["mov     [new+8], rax", "xor     eax, eax", "test    name, name", "jz      short loc_5572"], ["mov~[new+0],rax", "xor~eax,eax", "test~name,name", "jz~FOO"]], [1, 1, 4, 1, 1, 14, 2, 2, 0, 2, 0.0, ["push    r13", "push    r12", "mov     r12, realname", "push    rbp", "push    rbx", "mov     rbp, name", "mov     edi, 20h ; ' '; n", "mov     r13d, edx", "sub     rsp, 8", "call    xmalloc", "mov     rbx, rax", "xor     eax, eax", "test    realname, realname", "jz      short loc_555F"], ["push~r13", "push~r12", "mov~r12,realname", "push~rbp", "push~rbx", "mov~rbp,name", "mov~edi,<STR>", "mov~r13d,edx", "sub~rsp,0", "call~FOO", "mov~rbx,rax", "xor~eax,eax", "test~realname,realname", "jz~FOO"]], [0, 0, 3, 0, 1, 2, 0, 1, 1, 2, 0.0, ["mov     rdi, realname; string", "call    xstrdup"], ["mov~rdi,realname", "call~FOO"]], [1, 0, 0, 1, 0, 11, 0, 0, 2, 0, 0.0, ["mov     [new], rax", "mov     rax, cs:pending_dirs", "mov     [new+10h], r13b", "mov     cs:pending_dirs, new", "mov     [new+18h], rax", "add     rsp, 8", "pop     new", "pop     name", "pop     realname", "pop     r13", "retn"], ["mov~<TAG>,rax", "mov~rax,<TAG>", "mov~[new+0],r13b", "mov~<TAG>,new", "mov~[new+0],rax", "add~rsp,0", "pop~new", "pop~name", "pop~realname", "pop~r13", "retn"]], [0, 0, 1, 0, 1, 2, 0, 1, 2, 1, 0.0, ["mov     rdi, name; string", "call    xstrdup"], ["mov~rdi,name", "call~FOO"]]], "func_feature": [3, 4, 5, 0, 5, 6, 4, 33, 0.06667, 1, 2], "succs": [[3, 4], [0, 2], [0], [], [3]], "fname": "queue_directory", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 3, 0, 0, 1, 0, 1, 1, -1, 0.15000000000000002, ["jl      short loc_55C0"], ["jl~FOO"]], [0, 0, 5, 0, 0, 3, 0, 1, 0, 1, 0.0, ["mov     rax, [b+40h]", "cmp     [a+40h], rax", "jg      short loc_55D0"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 2, -1, 0.1, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []]], "func_feature": [0, 0, 3, 0, 6, 5, 0, 11, 0.04167, 0, 0], "succs": [[], [0, 3], [1, 4], [5], [], []], "fname": "strcmp_size", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 3, 0, 0, 1, 0, 1, 1, -1, 0.15000000000000002, ["jl      short loc_5600"], ["jl~FOO"]], [0, 0, 5, 0, 0, 4, 0, 1, 0, 1, 0.0, ["mov     rdx, [a+40h]", "cmp     [b+40h], rdx", "mov     rax, b", "jg      short loc_5610"], ["mov~rdx,[a+0]", "cmp~[b+0],rdx", "mov~rax,b", "jg~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 2, -1, 0.1, ["mov     b, [a]; s2", "mov     a, [b]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 3, 0, 6, 5, 0, 12, 0.04167, 0, 0], "succs": [[], [0, 5], [1, 3], [], [], [4]], "fname": "rev_strcmp_size", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[], [0]], "fname": "strcmp_name", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     rax, b", "mov     b, [a]; s2", "mov     a, [b]; s1", "jmp     _strcmp"], ["mov~rax,b", "mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "rev_strcmp_name", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 13, 0, 0, 2, 1, 1, 0, 0, 0.19005847953216373, ["test    rbx, rbx", "jz      short loc_5692"], ["test~rbx,rbx", "jz~FOO"]], [1, 0, 14, 1, 1, 8, 0, 2, 3, -1, 0.12280701754385964, ["lea     rdi, [rbx+rbx*2]", "shl     rdi, 3; n", "call    xmalloc", "mov     rbx, cs:cwd_n_used", "mov     cs:sorted_file, rax", "lea     rax, [rbx+rbx*2]", "mov     cs:sorted_file_alloc, rax", "jmp     loc_565E"], ["lea~rdi,<TAG>", "shl~rdi,0", "call~FOO", "mov~rbx,<TAG>", "mov~<TAG>,rax", "lea~rax,<TAG>", "mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 19, 1, 0, 7, 0, 1, 0, 3, 0.0, ["push    rbx", "mov     rbx, cs:cwd_n_used", "mov     rax, rbx", "shr     rax, 1", "add     rax, rbx", "cmp     rax, cs:sorted_file_alloc", "ja      loc_5750"], ["push~rbx", "mov~rbx,<TAG>", "mov~rax,rbx", "shr~rax,0", "add~rax,rbx", "cmp~rax,<TAG>", "ja~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 2, 1, 0.09941520467836257, ["test    rcx, rcx", "jnz     short loc_57C1"], ["test~rcx,rcx", "jnz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 2, 2, 0.0, ["mov     ecx, 1", "jmp     short loc_576B"], ["mov~ecx,0", "jmp~FOO"]], [1, 0, 18, 1, 1, 7, 1, 1, 1, 2, 0.011695906432748537, ["mov     rdi, cs:sorted_file; ptr", "call    free", "mov     edx, 18h", "xor     ecx, ecx", "mov     rax, rdx", "mul     rbx", "jo      short loc_57BA"], ["mov~rdi,<TAG>", "call~FOO", "mov~edx,0", "xor~ecx,ecx", "mov~rax,rdx", "mul~,rbx", "jo~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, -1, 0.0, ["pop     rbx", "retn"], ["pop~rbx", "retn"]], [1, 0, 10, 0, 0, 2, 0, 1, 2, -1, 0.23391812865497075, ["cmp     cs:sort_type_0, 0FFFFFFFFh", "jz      loc_574C"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 1, 1, 1, 13, 0, 1, 5, -1, 0.02046783625730994, ["cmp     ecx, 4", "mov     edx, 0", "cmovz   edx, cs:time_type_0", "cdqe", "movzx   r8d, cs:directories_first", "add     edx, ecx", "lea     rdx, [rax+rdx*2]", "movzx   eax, cs:sort_reverse", "lea     rax, [rax+rdx*2]", "lea     rdx, [r8+rax*2]", "lea     rax, sort_functions", "mov     rdx, [rax+rdx*8]; cmp", "call    mpsort"], ["cmp~ecx,0", "mov~edx,0", "cmovz~edx,<TAG>", "cdqe~", "movzx~r8d,<TAG>", "add~edx,ecx", "lea~rdx,<TAG>", "movzx~eax,<TAG>", "lea~rax,<TAG>", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~rdx,<TAG>", "call~FOO"]], [2, 0, 4, 2, 0, 5, 0, 1, 7, -1, 0.008771929824561403, ["mov     [rax], rdx", "add     rax, 8", "add     rdx, 0B8h", "cmp     rax, r8", "jnz     short loc_56E0"], ["mov~<TAG>,rdx", "add~rax,0", "add~rdx,0", "cmp~rax,r8", "jnz~FOO"]], [0, 0, 4, 0, 0, 4, 0, 0, 6, -1, 0.03508771929824561, ["mov     rdx, cs:cwd_file", "lea     r8, [rdi+rsi*8]", "mov     rax, rdi", "nop"], ["mov~rdx,<TAG>", "lea~r8,<TAG>", "mov~rax,rdi", "nop"]], [0, 0, 2, 0, 0, 2, 0, 0, 4, -1, 0.03216374269005848, ["mov     rsi, cs:cwd_n_used; n", "mov     rdi, cs:sorted_file; base"], ["mov~rsi,<TAG>", "mov~rdi,<TAG>"]], [0, 0, 9, 0, 1, 5, 1, 2, 3, -1, 0.21052631578947367, ["lea     rdi, failed_strcoll; env", "call    __setjmp", "test    eax, eax", "mov     ecx, cs:sort_type_0", "jz      short loc_5700"], ["lea~rdi,<TAG>", "call~FOO", "test~eax,eax", "mov~ecx,<TAG>", "jz~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 6, -1, 0.023391812865497075, ["mov     eax, 1", "jmp     short loc_570E"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 5, 0, 0, 4, 1, 1, 5, -1, 0.1023391812865497, ["mov     rsi, cs:cwd_n_used", "mov     rdi, cs:sorted_file", "test    rsi, rsi", "jz      short loc_56F3"], ["mov~rsi,<TAG>", "mov~rdi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 4, -1, 0.14619883040935672, ["cmp     ecx, 3", "jz      loc_579B"], ["cmp~ecx,0", "jz~FOO"]], [2, 0, 12, 2, 0, 5, 0, 1, 3, -1, 0.03216374269005848, ["mov     [rdx], rax", "add     rax, 0B8h", "add     rdx, 8", "cmp     rbx, rax", "jnz     short loc_5680"], ["mov~<TAG>,rax", "add~rax,0", "add~rdx,0", "cmp~rbx,rax", "jnz~FOO"]], [1, 0, 12, 2, 0, 5, 0, 0, 2, -1, 0.017543859649122806, ["imul    rbx, 0B8h", "mov     rax, cs:cwd_file", "mov     rdx, cs:sorted_file", "add     rbx, rax", "nop     dword ptr [rax+rax+00h]"], ["imul~rbx,,0", "mov~rax,<TAG>", "mov~rdx,<TAG>", "add~rbx,rax", "nop~[word ptr [rax+0]"]], [0, 1, 0, 0, 1, 5, 0, 1, 5, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___8924; \"sort_files\"", "lea     rsi, file; \"ls.c\"", "lea     rdi, aSortTypeSortVe; \"sort_type != sort_version\"", "mov     edx, 0CA3h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,<STR>", "call~FOO"]]], "func_feature": [6, 5, 18, 0, 20, 27, 2, 85, 0.06433, 13, 10], "succs": [[8, 18], [0], [0, 6], [], [1, 3], [4], [4, 5], [], [13, 7], [7], [10, 14], [10], [9], [16, 12], [9], [11, 14], [19, 15], [8, 17], [17], []], "fname": "sort_files", "n_num": 20}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[3, 0, 1, 2, 1, 13, 0, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, b", "mov     rbx, a", "sub     rsp, 8", "call    ___errno_location", "mov     dword ptr [rax], 0", "add     rsp, 8", "mov     rsi, b; s2", "mov     rdi, a; s1", "pop     a", "pop     b", "jmp     _strcoll"], ["push~rbp", "push~rbx", "mov~rbp,b", "mov~rbx,a", "sub~rsp,0", "call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rsi,b", "mov~rdi,a", "pop~a", "pop~b", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 0, 2, 0, 2, 1, 28, 13, 0.0, 0, 2], "succs": [[1], []], "fname": "xstrcoll", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 5, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     rax, [b+40h]", "cmp     [a+40h], rax", "jg      short loc_5820"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 2, 0, 0.1, ["mov     b, [b]; b", "mov     a, [a]; a", "jmp     short xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 0, 0.15000000000000002, ["mov     eax, 1", "jge     short loc_5818"], ["mov~eax,0", "jge~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 3, 0, 6, 5, 0, 11, 0.04167, 0, 0], "succs": [[], [0, 4], [], [2], [3, 5], []], "fname": "xstrcoll_size", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.15000000000000002, ["mov     eax, 1", "jge     short loc_5850"], ["mov~eax,0", "jge~FOO"]], [0, 0, 5, 0, 0, 4, 0, 1, 0, 1, 0.0, ["mov     rax, [a+40h]", "cmp     [b+40h], rax", "mov     rdx, b", "jg      short loc_5860"], ["mov~rax,[a+0]", "cmp~[b+0],rax", "mov~rdx,b", "jg~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 2, -1, 0.1, ["mov     b, [a]; b", "mov     a, [b]; a", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 3, 0, 6, 5, 0, 12, 0.04167, 0, 0], "succs": [[2, 5], [0, 3], [], [], [], [4]], "fname": "rev_xstrcoll_size", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     b, [b]; b", "mov     a, [a]; a", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[], [0]], "fname": "xstrcoll_name", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     rax, b", "mov     b, [a]; b", "mov     a, [b]; a", "jmp     xstrcoll"], ["mov~rax,b", "mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "rev_xstrcoll_name", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     rax, b", "mov     b, [a]; s2", "mov     a, [b]; s1", "jmp     _strverscmp"], ["mov~rax,b", "mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "rev_xstrcoll_version", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     _strverscmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[], [0]], "fname": "xstrcoll_version", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[2, 0, 18, 1, 0, 3, 0, 1, 0, 0, 0.47380952380952385, ["sub     i, 1", "cmp     i, 0FFFFFFFFFFFFFFFFh", "jz      loc_59A0"], ["sub~i,0", "cmp~i,0", "jz~FOO"]], [0, 0, 18, 0, 0, 3, 0, 1, 1, 7, 0.1285714285714286, ["mov     rbx, cs:cwd_n_used", "lea     r12, ds:0FFFFFFFFFFFFFFF8h[i*8]", "jmp     short loc_5901"], ["mov~rbx,<TAG>", "lea~r12,<TAG>", "jmp~FOO"]], [1, 0, 18, 1, 0, 1, 0, 0, 5, 7, 0.3023809523809524, ["sub     r12, 8"], ["sub~r12,0"]], [1, 0, 18, 0, 0, 6, 2, 1, 6, 2, 0.10476190476190478, ["xor     edx, edx", "cmp     byte ptr [rax+1], 2Eh ; '.'", "setz    dl", "movzx   eax, byte ptr [rax+rdx+1]", "test    al, al", "jz      loc_58FD"], ["xor~edx,edx", "cmp~[yte ptr [rax+0],0", "setz~dl", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [1, 0, 18, 0, 1, 3, 0, 2, 5, 3, 0.1761904761904762, ["call    last_component", "cmp     byte ptr [rax], 2Eh ; '.'", "jz      loc_5A00"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 18, 0, 1, 4, 0, 2, 5, 9, 0.09642857142857143, ["mov     rsi, [f+8]; realname", "mov     edx, r13d; command_line_arg", "call    queue_directory", "jmp     short loc_596C"], ["mov~rsi,[f+0]", "mov~edx,r13d", "call~FOO", "jmp~FOO"]], [0, 0, 18, 0, 0, 3, 1, 1, 4, 4, 0.25952380952380955, ["test    dirname, dirname", "mov     rdi, [f+0]; name", "jz      short loc_5988"], ["test~dirname,dirname", "mov~rdi,[f+0]", "jz~FOO"]], [1, 0, 18, 0, 0, 3, 0, 1, 6, 10, 0.09523809523809525, ["mov     rdi, [f+0]", "cmp     byte ptr [rdi], 2Fh ; '/'", "jz      short loc_5988"], ["mov~rdi,[f+0]", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 7, 1, 0.05, ["cmp     al, 2Fh ; '/'", "jz      loc_58FD"], ["cmp~al,0", "jz~FOO"]], [0, 0, 18, 0, 0, 1, 0, 1, 8, 0, 0.02380952380952381, ["jmp     loc_593C"], ["jmp~FOO"]], [1, 0, 18, 0, 0, 5, 0, 1, 3, 5, 0.3023809523809524, ["mov     rax, cs:sorted_file", "mov     rbp, [rax+r12]", "mov     eax, [f+0A0h]", "cmp     eax, 3", "jnz     short loc_58F8"], ["mov~rax,<TAG>", "mov~rbp,<TAG>", "mov~eax,[f+0]", "cmp~eax,0", "jnz~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 3, -1, 0.1285714285714286, ["mov     rdx, cs:cwd_n_used", "test    rdx, rdx", "jz      short loc_59E0"], ["mov~rdx,<TAG>", "test~rdx,rdx", "jz~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 4, 5, 0.026190476190476195, ["cmp     eax, 9", "jz      short loc_5925"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 2, 0, 0, 5, 1, 0, 4, -1, 0.045238095238095244, ["mov     rsi, cs:sorted_file", "lea     rdi, [rsi+rdx*8]", "mov     rax, rsi", "xor     edx, edx", "nop     dword ptr [rax+00h]"], ["mov~rsi,<TAG>", "lea~rdi,<TAG>", "mov~rax,rsi", "xor~edx,edx", "nop~[word ptr [rax+0]"]], [1, 0, 21, 1, 0, 11, 1, 1, 0, 8, 0.0, ["push    r15", "push    r14", "mov     r14, dirname", "push    r13", "push    r12", "movzx   r13d, sil", "push    rbp", "push    rbx", "sub     rsp, 8", "test    dirname, dirname", "jz      short loc_58E0"], ["push~r15", "push~r14", "mov~r14,dirname", "push~r13", "push~r12", "movzx~r13d,sil", "push~rbp", "push~rbx", "sub~rsp,0", "test~dirname,dirname", "jz~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 1, 8, 0.002380952380952381, ["cmp     cs:active_dir_set, 0", "jz      short loc_58E0"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 19, 0, 1, 4, 2, 1, 2, 8, 0.0, ["mov     command_line_arg, dirname; realname", "xor     edx, edx; command_line_arg", "xor     edi, edi; name", "call    queue_directory"], ["mov~command_line_arg,dirname", "xor~edx,edx", "xor~edi,edi", "call~FOO"]], [2, 0, 2, 2, 0, 9, 0, 1, 5, -1, 0.002380952380952381, ["mov     rcx, [rax]", "cmp     dword ptr [f+0A0h], 9", "mov     [rsi+j*8], f", "setnz   cl", "add     rax, 8", "movzx   ecx, cl", "add     j, rcx", "cmp     rdi, rax", "jnz     short loc_59C0"], ["mov~rcx,<TAG>", "cmp~[word ptr [f+0],0", "mov~<TAG>,f", "setnz~cl", "add~rax,0", "movzx~ecx,cl", "add~j,rcx", "cmp~rdi,rax", "jnz~FOO"]], [0, 0, 18, 0, 3, 11, 1, 3, 7, 9, 0.04166666666666667, ["mov     rsi, rdi; abase", "xor     edx, edx; base_in_result", "mov     rdi, dirname; dir", "call    file_name_concat", "mov     rsi, [f+8]; realname", "mov     r15, rax", "mov     rdi, name; name", "mov     edx, r13d; command_line_arg", "call    queue_directory", "mov     rdi, name; ptr", "call    free"], ["mov~rsi,rdi", "xor~edx,edx", "mov~rdi,dirname", "call~FOO", "mov~rsi,[f+0]", "mov~r15,rax", "mov~rdi,name", "mov~edx,r13d", "call~FOO", "mov~rdi,name", "call~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 6, 8, 0.17857142857142858, ["cmp     dword ptr [f+0A0h], 9", "jnz     short loc_58FD"], ["cmp~[word ptr [f+0],0", "jnz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 4, -1, 0.0, ["mov     cs:cwd_n_used, rdx", "add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     command_line_arg", "pop     dirname", "pop     r15", "retn"], ["mov~<TAG>,rdx", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~command_line_arg", "pop~dirname", "pop~r15", "retn"]], [0, 0, 18, 0, 1, 3, 0, 2, 7, 8, 0.0, ["mov     rdi, [f+0]; ptr", "call    free", "jmp     loc_58FD"], ["mov~rdi,[f+0]", "call~FOO", "jmp~FOO"]]], "func_feature": [7, 9, 24, 0, 22, 34, 2, 95, 0.11082, 4, 6], "succs": [[10, 11], [0], [0], [8, 2], [3, 7], [19], [4, 5], [18, 5], [9, 2], [7], [12, 6], [20, 13], [2, 6], [17], [1, 15], [16, 1], [1], [17, 20], [19], [2, 21], [], [2]], "fname": "extract_dirs_from_files", "n_num": 22}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["pop     from", "pop     rbp", "pop     to", "retn"], ["pop~from", "pop~rbp", "pop~to", "retn"]], [0, 0, 11, 3, 0, 8, 1, 0, 6, 4, 0.16666666666666666, ["mov     rax, from", "xor     edx, edx", "div     rcx", "add     rcx, from", "mov     rbx, rcx", "sub     rbx, rdx", "cmp     from, to", "jnb     short loc_5ABD"], ["mov~rax,from", "xor~edx,edx", "div~,rcx", "add~rcx,from", "mov~rbx,rcx", "sub~rbx,rdx", "cmp~from,to", "jnb~FOO"]], [0, 0, 11, 0, 0, 3, 0, 0, 5, 4, 0.1858974358974359, ["mov     rbx, rbp", "cmp     rbx, to", "jb      short loc_5A86"], ["mov~rbx,rbp", "cmp~rbx,to", "jb~FOO"]], [0, 0, 11, 0, 0, 6, 0, 1, 1, 4, 0.07051282051282051, ["push    r12", "mov     r12, to", "push    rbp", "push    rbx", "mov     rbx, from", "jmp     short loc_5A86"], ["push~r12", "mov~r12,to", "push~rbp", "push~rbx", "mov~rbx,from", "jmp~FOO"]], [0, 0, 13, 0, 0, 2, 0, 0, 0, 5, 0.0, ["cmp     from, to", "jnb     locret_5AD8"], ["cmp~from,to", "jnb~FOO"]], [1, 0, 11, 0, 1, 4, 0, 2, 5, 0, 0.05448717948717949, ["mov     esi, 9; int", "call    ___overflow", "mov     rcx, cs:tabsize", "jmp     loc_5A70"], ["mov~esi,0", "call~FOO", "mov~rcx,<TAG>", "jmp~FOO"]], [1, 0, 11, 0, 0, 3, 0, 0, 5, 5, 0.05448717948717949, ["lea     rax, [rsi+1]", "mov     [rdi+28h], rax", "mov     byte ptr [rsi], 9"], ["lea~rax,[rsi+0]", "mov~[rdi+0],rax", "mov~<TAG>,0"]], [0, 0, 11, 0, 0, 2, 0, 0, 4, 1, 0.1858974358974359, ["cmp     rsi, r8", "jnb     short loc_5AE0"], ["cmp~rsi,r8", "jnb~FOO"]], [0, 0, 11, 0, 0, 2, 0, 0, 3, 6, 0.20512820512820512, ["cmp     rsi, r8", "jnb     short loc_5AC8"], ["cmp~rsi,r8", "jnb~FOO"]], [0, 0, 11, 2, 0, 9, 2, 0, 3, 2, 0.22435897435897434, ["xor     edx, edx", "mov     rax, to", "div     rcx", "xor     edx, edx", "mov     r9, rax", "mov     rax, rbp", "div     rcx", "cmp     r9, rax", "jbe     short loc_5AA5"], ["xor~edx,edx", "mov~rax,to", "div~,rcx", "xor~edx,edx", "mov~r9,rax", "mov~rax,rbp", "div~,rcx", "cmp~r9,rax", "jbe~FOO"]], [0, 0, 11, 0, 0, 7, 1, 1, 2, 3, 0.47435897435897434, ["mov     rcx, cs:tabsize", "mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "lea     rbp, [from+1]", "test    rcx, rcx", "mov     rsi, [rdi+28h]", "mov     r8, [rdi+30h]", "jnz     short loc_5A48"], ["mov~rcx,<TAG>", "mov~rdi,<TAG>", "lea~rbp,[from+0]", "test~rcx,rcx", "mov~rsi,[rdi+0]", "mov~r8,[rdi+0]", "jnz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn"], ["retn"]], [0, 1, 11, 0, 0, 3, 0, 0, 4, 5, 0.0641025641025641, ["lea     rax, [rsi+1]", "mov     [rdi+28h], rax", "mov     byte ptr [rsi], 20h ; ' '"], ["lea~rax,[rsi+0]", "mov~[rdi+0],rax", "mov~<TAG>,<STR>"]], [0, 1, 11, 0, 1, 3, 0, 2, 4, 5, 0.0641025641025641, ["mov     esi, 20h ; ' '; int", "call    ___overflow", "jmp     short loc_5AB5"], ["mov~esi,<STR>", "call~FOO", "jmp~FOO"]]], "func_feature": [2, 4, 6, 0, 14, 19, 2, 57, 0.125, 2, 5], "succs": [[], [0, 10], [0, 10], [10], [11, 3], [1], [1], [5, 6], [12, 13], [8, 7], [8, 9], [], [2], [2]], "fname": "indent", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 4, 0, 0.03446115288220551, ["mov     rax, rbx", "mov     rbx, [rbp+var_38]", "xor     rbx, fs:28h", "jnz     loc_5EF4"], ["mov~rax,rbx", "mov~rbx,[rbp+0]", "xor~rbx,<TAG>", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 6, 0, 0.028978696741854635, ["jmp     loc_5C0D"], ["jmp~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 5, 0, 0.07988721804511278, ["cmp     [rbp+out], 0", "jnz     loc_5BF2"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 2, 0, 0.015037593984962405, ["cmp     [rbp+width], 0", "jz      short loc_5BE8"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 55, 0, 0, 2, 0, 1, 1, 0, 0.03446115288220551, ["cmp     cs:qmark_funny_chars, 0", "jnz     loc_5C50"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 5, 0, 1, 5, 0, 1, 4, 0, 0.038377192982456135, ["mov     rcx, [rbp+out]; stream", "mov     rdi, [rbp+buf]; ptr", "mov     rdx, rbx; n", "mov     esi, 1; size", "call    _fwrite_unlocked"], ["mov~rcx,[rbp+0]", "mov~rdi,[rbp+0]", "mov~rdx,rbx", "mov~esi,0", "call~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 5, 0, 0.016604010025062656, ["cmp     [rbp+out], 0", "jnz     loc_5BF2"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 3, 0, 0.007518796992481203, ["cmp     [rbp+out], 0", "jz      short loc_5C21"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 13, 0, 0, 4, 0, 0, 3, 0, 0.008458646616541353, ["mov     r15, [rbp+buf]", "mov     rax, [rbp+var_2058]", "cmp     r15, rax", "jnb     short loc_5EDA"], ["mov~r15,[rbp+0]", "mov~rax,[rbp+0]", "cmp~r15,rax", "jnb~FOO"]], [1, 0, 43, 0, 1, 6, 0, 1, 2, 0, 0.03477443609022556, ["call    ___ctype_get_mb_cur_max", "mov     rcx, [rbp+buf]", "cmp     rax, 1", "lea     rdi, [rcx+len]", "mov     [rbp+var_2058], rdi", "jbe     loc_5EA0"], ["call~FOO", "mov~rcx,[rbp+0]", "cmp~rax,0", "lea~rdi,<TAG>", "mov~[rbp+0],rdi", "jbe~FOO"]], [2, 0, 34, 1, 0, 5, 0, 1, 12, 0, 0.039473684210526314, ["mov     byte ptr [rbx], 3Fh ; '?'", "add     displayed_width, 1", "mov     rbx, r15", "mov     r14, rcx", "jmp     loc_5D4C"], ["mov~<TAG>,0", "add~displayed_width,0", "mov~rbx,r15", "mov~r14,rcx", "jmp~FOO"]], [0, 0, 34, 0, 1, 5, 1, 2, 11, 0, 0.041353383458646614, ["call    _wcwidth", "mov     rdx, [rbp+bytes]", "test    eax, eax", "lea     rcx, [p+rdx]", "js      loc_5E00"], ["call~FOO", "mov~rdx,[rbp+0]", "test~eax,eax", "lea~rcx,<TAG>", "js~FOO"]], [0, 0, 34, 0, 1, 4, 1, 2, 11, 0, 0.03164160401002506, ["call    _wcwidth", "test    eax, eax", "lea     rcx, [p+1]", "js      short loc_5E00"], ["call~FOO", "test~eax,eax", "lea~rcx,[p+0]", "js~FOO"]], [1, 0, 14, 0, 1, 3, 0, 2, 3, 0, 0.010025062656641603, ["call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "ja      loc_5DD0"], ["call~FOO", "cmp~rax,0", "ja~FOO"]], [0, 0, 8, 0, 0, 3, 2, 1, 4, 0, 0.004699248120300752, ["xor     ebx, ebx", "xor     r12d, r12d", "jmp     loc_5D74"], ["xor~ebx,ebx", "xor~r12d,r12d", "jmp~FOO"]], [0, 0, 36, 0, 0, 2, 0, 0, 3, 0, 0.03728070175438596, ["cmp     q, rdi", "jnb     loc_5EE2"], ["cmp~q,rdi", "jnb~FOO"]], [0, 0, 34, 0, 0, 4, 1, 1, 10, 0, 0.08145363408521303, ["test    bytes_0, bytes_0", "mov     edi, [rbp+wc]; c", "mov     [rbp+bytes], bytes_0", "jz      loc_5E18"], ["test~bytes_0,bytes_0", "mov~edi,[rbp+0]", "mov~[rbp+0],bytes_0", "jz~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 9, 0, 0.09586466165413533, ["cmp     bytes_0, 0FFFFFFFFFFFFFFFEh", "jz      loc_5E88"], ["cmp~bytes_0,0", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 5, 0, 0.05419799498746867, ["cmp     [rbp+width], 0", "jz      short loc_5C21"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 34, 1, 0, 4, 0, 1, 10, 0, 0.005952380952380952, ["mov     byte ptr [rbx], 3Fh ; '?'", "add     displayed_width, 1", "mov     r14, [rbp+var_2058]", "jmp     short loc_5E7B"], ["mov~<TAG>,0", "add~displayed_width,0", "mov~r14,[rbp+0]", "jmp~FOO"]], [0, 0, 34, 0, 0, 7, 1, 0, 4, 0, 0.040726817042606514, ["lea     rax, [rbp+wc]", "lea     options, [rbp+mbstate]", "mov     len, q", "mov     name, q", "xor     r12d, r12d", "mov     [rbp+pwc], rax", "nop     dword ptr [rax+rax+00000000h]"], ["lea~rax,[rbp+0]", "lea~options,[rbp+0]", "mov~len,q", "mov~name,q", "xor~r12d,r12d", "mov~[rbp+0],rax", "nop~[word ptr [rax+0]"]], [3, 0, 56, 1, 1, 13, 2, 2, 1, 0, 0.0, ["lea     rsi, [len+1]; buffersize", "lea     len, [len+1Fh]", "mov     r8, options; o", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, name; arg", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rax, [rsp+2080h+buf+7]", "and     rax, 0FFFFFFFFFFFFFFF0h", "mov     rdi, rax; buffer", "mov     [rbp+buf], rax", "call    quotearg_buffer", "jmp     loc_5B6E"], ["lea~rsi,[len+0]", "lea~len,[len+0]", "mov~r8,options", "mov~rcx,0", "mov~rdx,name", "and~rax,0", "sub~rsp,rax", "lea~rax,[rsp+0]", "and~rax,0", "mov~rdi,rax", "mov~[rbp+0],rax", "call~FOO", "jmp~FOO"]], [4, 0, 57, 1, 1, 26, 1, 2, 0, 0, 0.0, ["push    rbp", "mov     r8, options; o", "mov     rbp, rsp", "push    r15", "push    r14", "lea     r15, [rbp+smallbuf]", "push    r13", "push    r12", "push    rbx", "mov     r14, name", "mov     r13, options", "mov     options, name; arg", "mov     esi, 2000h; buffersize", "sub     rsp, 2058h", "mov     [rbp+out], out_0", "mov     [rbp+width], width_0", "mov     out_0, r15; buffer", "mov     width_0, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rax, fs:28h", "mov     [rbp+var_38], rax", "xor     eax, eax", "call    quotearg_buffer", "cmp     rax, 1FFFh", "mov     rbx, rax", "mov     [rbp+buf], r15", "ja      loc_5D90"], ["push~rbp", "mov~r8,options", "mov~rbp,rsp", "push~r15", "push~r14", "lea~r15,[rbp+0]", "push~r13", "push~r12", "push~rbx", "mov~r14,name", "mov~r13,options", "mov~options,name", "mov~esi,0", "sub~rsp,0", "mov~[rbp+0],out_0", "mov~[rbp+0],width_0", "mov~out_0,r15", "mov~width_0,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "call~FOO", "cmp~rax,0", "mov~rbx,rax", "mov~[rbp+0],r15", "ja~FOO"]], [0, 0, 3, 0, 0, 2, 0, 0, 6, 0, 0.004699248120300752, ["mov     rax, [rbp+width]", "mov     [rax], r12"], ["mov~rax,[rbp+0]", "mov~<TAG>,r12"]], [0, 0, 4, 0, 0, 1, 0, 1, 6, 0, 0.006265664160401002, ["jmp     loc_5C17"], ["jmp~FOO"]], [0, 0, 12, 0, 0, 4, 0, 0, 4, 0, 0.006265664160401002, ["mov     r15, [rbp+buf]", "lea     options, [r15+len]", "cmp     r15, plimit", "jnb     loc_5EEC"], ["mov~r15,[rbp+0]", "lea~options,<TAG>", "cmp~r15,plimit", "jnb~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 5, 0, 0.1237468671679198, ["movzx   eax, byte ptr [p]", "cmp     al, 3Fh ; '?'", "jg      loc_5E40"], ["movzx~eax,<TAG>", "cmp~al,0", "jg~FOO"]], [0, 0, 34, 0, 0, 2, 0, 0, 8, 0, 0.1463032581453634, ["cmp     p, [rbp+var_2058]", "jb      loc_5CA0"], ["cmp~p,[rbp+0]", "jb~FOO"]], [0, 0, 34, 0, 0, 5, 0, 1, 12, 0, 0.007832080200501253, ["movzx   edx, byte ptr [r14]", "mov     r14, p", "mov     [rbx], dl", "mov     rbx, r15", "jmp     loc_5D47"], ["movzx~edx,<TAG>", "mov~r14,p", "mov~<TAG>,dl", "mov~rbx,r15", "jmp~FOO"]], [1, 0, 12, 0, 0, 1, 0, 0, 6, 0, 0.0, ["mov     byte ptr [p_0], 3Fh ; '?'"], ["mov~<TAG>,0"]], [1, 0, 12, 0, 0, 3, 1, 1, 5, 0, 0.006892230576441102, ["movzx   edx, byte ptr [p_0]", "test    byte ptr [rcx+rdx*2+1], 40h", "jnz     short loc_5ECD"], ["movzx~edx,<TAG>", "test~[yte ptr [rcx+0],0", "jnz~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 6, 0, 0.02631578947368421, ["cmp     al, 25h ; '%'", "jge     loc_5E58"], ["cmp~al,0", "jge~FOO"]], [0, 0, 8, 0, 0, 2, 0, 1, 4, 0, 0.014724310776942355, ["mov     r12, len", "jmp     loc_5D74"], ["mov~r12,len", "jmp~FOO"]], [1, 0, 12, 1, 0, 3, 0, 1, 6, 0, 0.008771929824561403, ["add     p_0, 1", "cmp     p_0, [rbp+var_2058]", "jnz     short loc_5EC0"], ["add~p_0,0", "cmp~p_0,[rbp+0]", "jnz~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 6, 0, 0.08897243107769423, ["cmp     al, 41h ; 'A'", "jl      loc_5CC0"], ["cmp~al,0", "jl~FOO"]], [0, 0, 34, 0, 0, 2, 0, 0, 12, 0, 0.018170426065162906, ["mov     rdi, q", "nop     dword ptr [w]"], ["mov~rdi,q", "nop~<TAG>"]], [0, 0, 10, 0, 1, 5, 1, 1, 5, 0, 0.0037593984962406013, ["call    ___ctype_b_loc", "xor     r12d, r12d", "mov     rcx, [rax]", "mov     rax, r15", "nop     word ptr [p_1+p_1+00000000h]"], ["call~FOO", "xor~r12d,r12d", "mov~rcx,<TAG>", "mov~rax,r15", "nop~[ord ptr [p_1+0]"]], [1, 0, 34, 1, 1, 9, 0, 2, 8, 0, 0.1237468671679198, ["mov     rdx, [rbp+var_2058]", "mov     rdi, [rbp+pwc]; pwc", "mov     rcx, r13; p", "mov     rsi, p; s", "lea     r15, [q+1]", "sub     rdx, p; n", "call    _mbrtowc", "cmp     bytes_0, 0FFFFFFFFFFFFFFFFh", "jz      loc_5E70"], ["mov~rdx,[rbp+0]", "mov~rdi,[rbp+0]", "mov~rcx,r13", "mov~rsi,p", "lea~r15,[q+0]", "sub~rdx,p", "call~FOO", "cmp~bytes_0,0", "jz~FOO"]], [0, 0, 34, 0, 1, 4, 1, 2, 13, 0, 0.08991228070175439, ["mov     rdi, r13; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_5CD0"], ["mov~rdi,r13", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 34, 0, 0, 2, 0, 0, 7, 0, 0.08834586466165413, ["mov     qword ptr [rbp+mbstate.__count], 0", "nop     dword ptr [rax+rax+00h]"], ["mov~[word ptr [rbp+0],0", "nop~[word ptr [rax+0]"]], [1, 0, 34, 0, 0, 3, 0, 0, 7, 0, 0.005325814536340852, ["lea     edx, [rax-20h]", "cmp     dl, 3", "jbe     loc_5E58"], ["lea~edx,[rax-20h]+0]", "cmp~dl,0", "jbe~FOO"]], [0, 0, 34, 0, 0, 2, 0, 1, 10, 0, 0.03665413533834586, ["mov     rbx, q", "jmp     loc_5D60"], ["mov~rbx,q", "jmp~FOO"]], [3, 0, 34, 2, 0, 3, 0, 0, 9, 0, 0.019423558897243107, ["add     p, 1", "mov     byte ptr [rbx], 3Fh ; '?'", "add     displayed_width, 1"], ["add~p,0", "mov~<TAG>,0", "add~displayed_width,0"]], [0, 0, 12, 0, 1, 4, 0, 1, 4, 0, 0.004699248120300752, ["call    ___ctype_b_loc", "mov     rcx, [rax]", "mov     rax, r15", "xchg    ax, ax"], ["call~FOO", "mov~rcx,<TAG>", "mov~rax,r15", "xchg~ax,ax"]], [0, 0, 34, 0, 0, 5, 0, 1, 13, 0, 0.019110275689223057, ["mov     rsi, r14", "movsb", "cmp     p, rcx", "mov     r14, p", "jnz     short loc_5D38"], ["mov~rsi,r14", "movsb~<TAG>,<TAG>", "cmp~p,rcx", "mov~r14,p", "jnz~FOO"]], [0, 0, 34, 1, 0, 1, 0, 0, 14, 0, 0.020050125313283207, ["add     rbx, bytes_0"], ["add~rbx,bytes_0"]], [0, 0, 0, 0, 0, 8, 0, 0, 5, 0, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [0, 0, 34, 1, 0, 2, 0, 0, 13, 0, 0.039160401002506263, ["cdqe", "add     displayed_width, w"], ["cdqe~", "add~displayed_width,w"]], [1, 0, 34, 0, 0, 2, 0, 1, 7, 0, 0.013471177944862155, ["cmp     al, 5Fh ; '_'", "jle     short loc_5E58"], ["cmp~al,0", "jle~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 8, 0, 0.005325814536340852, ["lea     edx, [rax-61h]", "cmp     dl, 1Dh", "ja      loc_5CC0"], ["lea~edx,[rax-61h]+0]", "cmp~dl,0", "ja~FOO"]], [4, 0, 10, 1, 0, 8, 1, 1, 6, 0, 0.004699248120300752, ["movzx   edx, byte ptr [p_1]", "movzx   edx, word ptr [rcx+rdx*2]", "and     dx, 4000h", "cmp     dx, 1", "sbb     displayed_width, 0FFFFFFFFFFFFFFFFh", "add     p_1, 1", "cmp     plimit, p_1", "jnz     short loc_5BC0"], ["movzx~edx,<TAG>", "movzx~edx,<TAG>", "and~dx,0", "cmp~dx,0", "sbb~displayed_width,0", "add~p_1,0", "cmp~plimit,p_1", "jnz~FOO"]], [0, 0, 34, 0, 0, 1, 0, 0, 14, 0, 0.05639097744360902, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 8, 0, 0, 1, 0, 1, 7, 0, 0.005012531328320802, ["jmp     loc_5DE4"], ["jmp~FOO"]], [0, 0, 8, 0, 1, 5, 1, 1, 4, 0, 0.005012531328320802, ["mov     rdi, [rbp+buf]; string", "xor     edx, edx; flags", "mov     rsi, len; nbytes", "call    mbsnwidth", "movsxd  r12, eax"], ["mov~rdi,[rbp+0]", "xor~edx,edx", "mov~rsi,len", "call~FOO", "movsxd~r12,eax"]], [3, 0, 34, 3, 0, 5, 0, 1, 7, 0, 0.03164160401002506, ["mov     [q], al", "add     p, 1", "add     displayed_width, 1", "add     rbx, 1", "jmp     loc_5D60"], ["mov~<TAG>,al", "add~p,0", "add~displayed_width,0", "add~rbx,0", "jmp~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 5, 0, 0.002506265664160401, ["xor     r12d, r12d", "jmp     loc_5DE4"], ["xor~r12d,r12d", "jmp~FOO"]], [0, 0, 8, 1, 0, 1, 0, 0, 9, 0, 0.06516290726817042, ["sub     q, [rbp+buf]"], ["sub~q,[rbp+0]"]]], "func_feature": [13, 16, 49, 2, 58, 86, 4, 219, 0.03172, 2, 15], "succs": [[], [0, 47], [19], [2, 6], [8, 14], [10, 4], [19], [25, 6], [1, 6], [33, 44], [16, 9], [39], [11, 36], [11, 29], [26, 54], [3], [21, 15], [12, 13], [17, 20], [24, 1], [42], [27], [5], [5, 22], [1], [24], [56, 37], [32, 35], [57, 27], [48], [34], [34, 30], [41, 55], [3], [33, 31], [40, 49], [45], [51], [18, 43], [52, 38], [38], [40, 55], [28], [42], [31], [45, 46], [48], [], [39], [50, 55], [40, 55], [51, 53], [28], [7], [7], [28], [7], [3]], "fname": "quote_name", "n_num": 58}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 1, 5, 0, 0, 3, 0, 0, 0, 0, 0.05952380952380952, ["lea     rcx, [rdx+1]", "mov     [rdi+28h], rcx", "mov     byte ptr [rdx], 20h ; ' '"], ["lea~rcx,[rdx+0]", "mov~[rdi+0],rcx", "mov~<TAG>,<STR>"]], [0, 0, 5, 0, 0, 4, 0, 0, 2, -1, 0.26190476190476186, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rdx, [rdi+28h]", "cmp     rdx, [rdi+30h]", "jnb     short loc_5F90"], ["mov~rdi,<TAG>", "mov~rdx,[rdi+0]", "cmp~rdx,[rdi+0]", "jnb~FOO"]], [1, 0, 5, 2, 3, 14, 1, 3, 1, -1, 0.09523809523809523, ["xor     esi, esi; flags", "mov     rbp, name", "call    gnu_mbswidth", "mov     rsi, cs:stdout@@GLIBC_2_2_5; stream", "sub     ebx, eax", "mov     eax, 0", "cmovs   ebx, eax", "mov     rdi, name; s", "call    _fputs_unlocked", "mov     rdi, name; s", "movsxd  name, ebx", "call    _strlen", "add     rbp, rax", "nop     word ptr [rax+rax+00h]"], ["xor~esi,esi", "mov~rbp,name", "call~FOO", "mov~rsi,<TAG>", "sub~ebx,eax", "mov~eax,0", "cmovs~ebx,eax", "mov~rdi,name", "call~FOO", "mov~rdi,name", "movsxd~name,ebx", "call~FOO", "add~rbp,rax", "nop~[ord ptr [rax+0]"]], [1, 0, 7, 1, 0, 6, 1, 1, 0, 1, 0.0, ["push    rbp", "push    rbx", "mov     ebx, edx", "sub     rsp, 8", "test    name, name", "jz      loc_5FA0"], ["push~rbp", "push~rbx", "mov~ebx,edx", "sub~rsp,0", "test~name,name", "jz~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 2, -1, 0.0, ["mov     rax, cs:dired_pos", "lea     rax, [len+rax+1]", "mov     cs:dired_pos, rax", "add     rsp, 8", "pop     rbx", "pop     len", "retn"], ["mov~rax,<TAG>", "lea~rax,[len+0]", "mov~<TAG>,rax", "add~rsp,0", "pop~rbx", "pop~len", "retn"]], [1, 0, 1, 0, 1, 7, 1, 2, 1, 0, 0.023809523809523808, ["mov     rcx, id", "lea     id, aLu; \"%*lu \"", "mov     edi, 1", "xor     eax, eax", "movsxd  rbp, ebx", "call    ___printf_chk", "jmp     short loc_5F6C"], ["mov~rcx,id", "lea~id,<TAG>", "mov~edi,0", "xor~eax,eax", "movsxd~rbp,ebx", "call~FOO", "jmp~FOO"]], [2, 0, 5, 1, 0, 3, 0, 1, 4, -1, 0.19047619047619047, ["sub     ebx, 1", "cmp     ebx, 0FFFFFFFFh", "jnz     short loc_5F48"], ["sub~ebx,0", "cmp~ebx,0", "jnz~FOO"]], [0, 1, 5, 0, 1, 3, 0, 2, 3, -1, 0.05952380952380952, ["mov     esi, 20h ; ' '; int", "call    ___overflow", "jmp     short loc_5F64"], ["mov~esi,<STR>", "call~FOO", "jmp~FOO"]]], "func_feature": [5, 3, 9, 0, 8, 10, 3, 47, 0.08631, 3, 5], "succs": [[6], [0, 7], [1], [2, 5], [], [4], [1, 4], [6]], "fname": "format_user_or_group", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 4, 1, 0, 6, 1, 1, 0, 0, 0.0, ["push    rbx", "lea     rax, string; \"?\"", "mov     ebx, edi", "sub     rsp, 10h", "test    dl, dl", "jz      short loc_5FDD"], ["push~rbx", "lea~rax,<TAG>", "mov~ebx,edi", "sub~rsp,0", "test~dl,dl", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0.0, [], []], [1, 0, 1, 1, 0, 6, 0, 1, 0, -1, 0.25, ["add     rsp, 10h", "mov     edx, esi; width", "mov     rsi, u; id", "pop     u", "mov     rdi, rax; uid", "jmp     format_user_or_group"], ["add~rsp,0", "mov~edx,esi", "mov~rsi,u", "pop~u", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 2, 0, 1, 4, 0, 2, 0, 0, 0.0, ["mov     [rsp+18h+width], esi", "call    getuser", "mov     esi, [rsp+18h+width]", "jmp     short loc_5FDD"], ["mov~[rsp+0],esi", "call~FOO", "mov~esi,[rsp+0]", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 0, 1, 0.08333333333333333, ["xor     eax, eax", "cmp     cs:numeric_ids, 0", "jz      short loc_5FF0"], ["xor~eax,eax", "cmp~<TAG>,0", "jz~FOO"]]], "func_feature": [1, 2, 5, 0, 5, 6, 2, 19, 0.06667, 2, 2], "succs": [[2, 4], [], [1], [2], [2, 3]], "fname": "format_user", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 10, 0, 0, 2, 0, 1, 0, 0, 0.08181818181818182, ["cmp     rcx, __value", "jz      loc_60BA"], ["cmp~rcx,__value", "jz~FOO"]], [1, 0, 11, 1, 0, 10, 1, 1, 0, 6, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rcx, [__o+18h]", "mov     rbx, [__o+10h]", "mov     rbp, rcx", "sub     rbp, rbx", "shr     ebp, 3", "test    ebp, ebp", "jz      loc_60AF"], ["push~r12", "push~rbp", "push~rbx", "mov~rcx,[__o+0]", "mov~rbx,[__o+0]", "mov~rbp,rcx", "sub~rbp,rbx", "shr~ebp,0", "test~ebp,ebp", "jz~FOO"]], [0, 0, 4, 0, 0, 4, 0, 0, 5, 1, 0.24545454545454545, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_60C3"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [2, 0, 6, 1, 1, 8, 1, 2, 4, 2, 0.2636363636363636, ["mov     rdx, [rbx]", "xor     eax, eax", "mov     rsi, rbp", "mov     edi, 1", "add     rbx, 8", "call    ___printf_chk", "cmp     rbx, r12", "jnz     short loc_6078"], ["mov~rdx,<TAG>", "xor~eax,eax", "mov~rsi,rbp", "mov~edi,0", "add~rbx,0", "call~FOO", "cmp~rbx,r12", "jnz~FOO"]], [0, 0, 6, 0, 1, 7, 0, 1, 3, 3, 0.2636363636363636, ["mov     rax, [__o1+18h]", "lea     r12, [__value+rbp*8]", "lea     rbp, aLu_0; \" %lu\"", "mov     [__o1+10h], rax", "mov     __o1, cs:stdout@@GLIBC_2_2_5; stream", "call    _fputs_unlocked", "nop     dword ptr [rax+00000000h]"], ["mov~rax,[__o1+0]", "lea~r12,<TAG>", "lea~rbp,<TAG>", "mov~[__o1+0],rax", "mov~__o1,<TAG>", "call~FOO", "nop~[word ptr [rax+0]"]], [1, 0, 1, 0, 0, 5, 0, 1, 6, 0, 0.07272727272727272, ["pop     rbx", "pop     rbp", "pop     r12", "mov     esi, 0Ah; int", "jmp     ___overflow"], ["pop~rbx", "pop~rbp", "pop~r12", "mov~esi,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 3, 0, 0, 6, -1, 0.06363636363636363, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [0, 0, 8, 3, 0, 14, 1, 1, 2, 4, 0.20909090909090908, ["movsxd  rax, dword ptr [__o1+30h]", "mov     rdx, rax", "add     rax, rcx", "mov     rcx, [__o1+20h]", "not     edx", "movsxd  rdx, edx", "and     rax, rdx", "mov     rdx, [__o1+8]", "mov     r8, rcx", "mov     [__o1+18h], rax", "sub     r8, rdx", "sub     rax, rdx", "cmp     rax, r8", "jg      short loc_60B4"], ["movsxd~rax,[word ptr [__o1+0]", "mov~rdx,rax", "add~rax,rcx", "mov~rcx,[__o1+0]", "not~edx", "movsxd~rdx,edx", "and~rax,rdx", "mov~rdx,[__o1+0]", "mov~r8,rcx", "mov~[__o1+0],rax", "sub~r8,rdx", "sub~rax,rdx", "cmp~rax,r8", "jg~FOO"]], [1, 0, 9, 0, 0, 2, 1, 1, 2, 5, 0.0, ["or      byte ptr [__o1+50h], 2", "jmp     loc_6026"], ["or~[yte ptr [__o1+0],0", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 3, 4, 0.0, ["mov     [__o1+18h], rcx", "jmp     short loc_6052"], ["mov~[__o1+0],rcx", "jmp~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 1, -1, 0.0, ["pop     rbx", "pop     rbp", "pop     r12", "retn"], ["pop~rbx", "pop~rbp", "pop~r12", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 7, -1, 0.0, [], []]], "func_feature": [2, 4, 9, 0, 12, 15, 2, 61, 0.1, 2, 5], "succs": [[8, 7], [0, 10], [5, 6], [2, 3], [3], [11], [10], [9, 4], [7], [4], [], []], "fname": "dired_dump_obstack", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     eax, cs:interrupt_signal", "test    eax, eax", "jnz     short locret_60F9"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 1, 1, 0, 3, 0, 0, 0, 1, 0.0, ["mov     eax, cs:stop_signal_count", "add     eax, 1", "mov     cs:stop_signal_count, eax"], ["mov~eax,<TAG>", "add~eax,0", "mov~<TAG>,eax"]]], "func_feature": [0, 1, 1, 0, 3, 3, 0, 7, 0.0, 2, 1], "succs": [[1, 2], [], [1]], "fname": "stophandler", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.125, ["mov     eax, cs:exit_status", "test    eax, eax", "jnz     short loc_6138"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 3, 17, 3, 4, 0, 2, 0.0, ["push    r12", "push    rbp", "mov     rbp, message", "push    rbx", "mov     ebx, edi", "mov     serious, file; arg", "call    quotearg_colon", "mov     r12, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "xor     edi, edi; status", "xor     eax, eax", "mov     rcx, r12", "mov     rdx, message; format", "call    _error", "test    bl, bl", "jz      short loc_6140"], ["push~r12", "push~rbp", "mov~rbp,message", "push~rbx", "mov~ebx,edi", "mov~serious,file", "call~FOO", "mov~r12,rax", "call~FOO", "mov~esi,<TAG>", "xor~edi,edi", "xor~eax,eax", "mov~rcx,r12", "mov~rdx,message", "call~FOO", "test~bl,bl", "jz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["pop     rbx", "pop     message", "pop     r12", "retn"], ["pop~rbx", "pop~message", "pop~r12", "retn"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, -1, 0.041666666666666664, ["mov     cs:exit_status, 2"], ["mov~<TAG>,0"]], [1, 0, 0, 0, 0, 5, 0, 0, 2, 0, 0.0, ["pop     rbx", "mov     cs:exit_status, 1", "pop     message", "pop     r12", "retn"], ["pop~rbx", "mov~<TAG>,0", "pop~message", "pop~r12", "retn"]]], "func_feature": [3, 4, 5, 0, 5, 5, 7, 30, 0.03333, 1, 0], "succs": [[2, 4], [0, 3], [], [2], []], "fname": "file_failure", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 7, 0, 0, 3, 0, 1, 0, 0, 0.19999999999999998, ["mov     rax, [a+68h]", "cmp     [r8+68h], rax", "jg      short loc_61D0"], ["mov~rax,[a+0]", "cmp~[r8+0],rax", "jg~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 2, 0.14545454545454545, ["test    cl, cl", "jnz     short loc_61A0"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 2, 2, 0.02727272727272727, ["test    dl, dl", "mov     eax, 1", "jz      short loc_61A0"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 5, -1, 0.06363636363636363, ["mov     b, [a]; s2", "mov     a, [b]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, -1, 0.12727272727272726, ["mov     rax, [a+70h]", "sub     eax, [r8+70h]", "jnz     short locret_619E"], ["mov~rax,[a+0]", "sub~eax,[r8+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, -1, 0.1909090909090909, ["jl      short loc_61C8"], ["jl~FOO"]], [4, 0, 11, 0, 0, 14, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "mov     r8, b", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_6191"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "mov~r8,b", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 10, 0, 0, 2, 1, 1, 1, 1, 0.00909090909090909, ["test    cl, cl", "jnz     short loc_61D0"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 5, 8, 0, 12, 15, 0, 36, 0.06364, 0, 1], "succs": [[9, 5], [0, 2], [0, 11], [10], [11, 3], [4, 7], [8, 1], [], [1, 9], [], [], []], "fname": "rev_strcmp_df_mtime", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 8, 0, 0, 2, 1, 1, 1, 0, 0.013888888888888888, ["test    cl, cl", "jnz     short loc_6240"], ["test~cl,cl", "jnz~FOO"]], [0, 0, 5, 0, 0, 3, 0, 1, 2, 0, 0.19444444444444442, ["mov     rax, [b+40h]", "cmp     [a+40h], rax", "jg      short loc_6240"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 4, 0, 0.08333333333333333, ["mov     b, [b]", "mov     a, [a]", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [4, 0, 9, 0, 0, 13, 2, 1, 0, 0, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_620E"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 0, 0.15277777777777776, ["mov     eax, 1", "jl      short locret_621B"], ["mov~eax,0", "jl~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 1, 0, 0.16666666666666666, ["test    cl, cl", "jnz     short loc_6220"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 6, 0, 0, 3, 1, 1, 2, 0, 0.041666666666666664, ["test    dl, dl", "mov     eax, 1", "jz      short loc_6220"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 5, 7, 0, 10, 13, 0, 31, 0.06528, 0, 0], "succs": [[], [0, 7], [0, 6], [], [3], [1, 7], [9, 4], [8, 2], [9, 2], []], "fname": "xstrcoll_df_size", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 8, 0, 0, 2, 1, 1, 0, 0, 0.15555555555555556, ["test    cl, cl", "jnz     short loc_6290"], ["test~cl,cl", "jnz~FOO"]], [4, 0, 10, 0, 0, 13, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_627E"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 1, 0.011111111111111112, ["test    cl, cl", "jnz     short loc_62C0"], ["test~cl,cl", "jnz~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 4, -1, 0.06666666666666667, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 3, -1, 0.16666666666666669, ["jl      short loc_62B0"], ["jl~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 5, 0, 0, 3, 0, 1, 2, 1, 0.2, ["mov     rax, [b+40h]", "cmp     [a+40h], rax", "jg      short loc_62C0"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [1, 0, 7, 0, 0, 3, 1, 1, 2, 2, 0.03333333333333333, ["test    dl, dl", "mov     eax, 1", "jz      short loc_6290"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 5, -1, 0.0, [], []]], "func_feature": [0, 5, 7, 0, 11, 13, 0, 32, 0.05758, 0, 0], "succs": [[6, 7], [0, 2], [0, 5], [10], [9, 3], [], [4, 5], [8, 6], [], [], []], "fname": "strcmp_df_size", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.15277777777777776, ["mov     eax, 1", "jl      short locret_630E"], ["mov~eax,0", "jl~FOO"]], [0, 0, 5, 0, 0, 3, 0, 1, 2, 1, 0.19444444444444442, ["mov     rax, [a+40h]", "cmp     [r8+40h], rax", "jg      short loc_6330"], ["mov~rax,[a+0]", "cmp~[r8+0],rax", "jg~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 1, 2, 0.16666666666666666, ["test    cl, cl", "jnz     short loc_6310"], ["test~cl,cl", "jnz~FOO"]], [4, 0, 9, 0, 0, 14, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "mov     r8, b", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_6301"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "mov~r8,b", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 1, 1, 0.013888888888888888, ["test    cl, cl", "jnz     short loc_6330"], ["test~cl,cl", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 5, -1, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 4, -1, 0.08333333333333333, ["mov     b, [a]", "mov     a, [b]", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [1, 0, 6, 0, 0, 3, 1, 1, 2, 2, 0.041666666666666664, ["test    dl, dl", "mov     eax, 1", "jz      short loc_6310"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]]], "func_feature": [0, 5, 7, 0, 10, 13, 0, 32, 0.06528, 0, 0], "succs": [[8, 6], [0, 9], [1, 7], [2, 4], [9, 2], [], [5], [8, 1], [], []], "fname": "rev_xstrcoll_df_size", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 3, 0, 0, 1, 0, 1, 3, -1, 0.16666666666666669, ["jl      short loc_63A0"], ["jl~FOO"]], [0, 0, 5, 0, 0, 3, 0, 1, 2, 1, 0.2, ["mov     rax, [a+40h]", "cmp     [r8+40h], rax", "jg      short loc_63B0"], ["mov~rax,[a+0]", "cmp~[r8+0],rax", "jg~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 1, 2, 0.15555555555555556, ["test    cl, cl", "jnz     short loc_6380"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 7, 0, 0, 3, 1, 1, 2, 2, 0.03333333333333333, ["test    dl, dl", "mov     eax, 1", "jz      short loc_6380"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [4, 0, 10, 0, 0, 14, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "mov     r8, b", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_6371"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "mov~r8,b", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 1, 0.011111111111111112, ["test    cl, cl", "jnz     short loc_63B0"], ["test~cl,cl", "jnz~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 4, -1, 0.06666666666666667, ["mov     b, [a]; s2", "mov     a, [b]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 5, -1, 0.0, [], []], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 5, 7, 0, 11, 13, 0, 33, 0.05758, 0, 0], "succs": [[], [0, 7], [8, 1], [2, 4], [2, 10], [3, 6], [8, 3], [9], [], [], []], "fname": "rev_strcmp_df_size", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 2, -1, 0.09523809523809523, ["mov     b, [b]", "mov     a, [a]", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 1, -1, 0.19047619047619047, ["test    cl, cl", "jnz     short loc_6400"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 2, -1, 0.07142857142857142, ["test    dl, dl", "mov     eax, 1", "jz      short loc_6400"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [4, 0, 7, 0, 0, 13, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_63EE"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 1, 1, 0.023809523809523808, ["test    cl, cl", "jnz     short loc_6410"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 5, 5, 0, 8, 9, 0, 26, 0.04762, 0, 0], "succs": [[], [0], [1, 3], [1, 7], [2, 5], [2, 6], [], []], "fname": "xstrcoll_df_name", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 2, -1, 0.09523809523809523, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 1, -1, 0.19047619047619047, ["test    cl, cl", "jnz     short loc_6460"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 2, -1, 0.07142857142857142, ["test    dl, dl", "mov     eax, 1", "jz      short loc_6460"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [4, 0, 7, 0, 0, 13, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_644E"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 1, 1, 0.023809523809523808, ["test    cl, cl", "jnz     short loc_6470"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 5, 5, 0, 8, 9, 0, 26, 0.04762, 0, 0], "succs": [[], [0], [1, 3], [1, 7], [2, 5], [2, 6], [], []], "fname": "strcmp_df_name", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 2, -1, 0.09523809523809523, ["mov     b, [a]", "mov     a, [b]", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 1, -1, 0.19047619047619047, ["test    cl, cl", "jnz     short loc_64C0"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 2, -1, 0.07142857142857142, ["test    dl, dl", "mov     eax, 1", "jz      short loc_64C0"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [4, 0, 7, 0, 0, 14, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "mov     r8, b", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_64B1"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "mov~r8,b", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 1, 1, 0.023809523809523808, ["test    cl, cl", "jnz     short loc_64D0"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 5, 5, 0, 8, 9, 0, 27, 0.04762, 0, 0], "succs": [[], [0], [1, 3], [1, 7], [2, 5], [2, 6], [], []], "fname": "rev_xstrcoll_df_name", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.09523809523809523, ["mov     b, [a]; s2", "mov     a, [b]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 1, -1, 0.19047619047619047, ["test    cl, cl", "jnz     short loc_6520"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 2, -1, 0.07142857142857142, ["test    dl, dl", "mov     eax, 1", "jz      short loc_6520"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [4, 0, 7, 0, 0, 14, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "mov     r8, b", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_6511"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "mov~r8,b", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 1, 1, 0.023809523809523808, ["test    cl, cl", "jnz     short loc_6530"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 5, 5, 0, 8, 9, 0, 27, 0.04762, 0, 0], "succs": [[6], [0, 2], [0, 7], [1, 4], [1, 5], [], [], []], "fname": "rev_strcmp_df_name", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 1, 1, 0, 0, 3, 0, 1, 0, 0, 0.012987012987012988, ["cmp     esi, 0C000h", "setz    al", "jmp     short loc_65B8"], ["cmp~esi,<STR>", "setz~al", "jmp~FOO"]], [1, 1, 3, 0, 0, 3, 0, 1, 7, -1, 0.049783549783549784, ["cmp     esi, 1000h", "mov     eax, 7Ch ; '|'", "jz      short locret_6630"], ["cmp~esi,<STR>", "mov~eax,0", "jz~FOO"]], [1, 0, 14, 0, 0, 3, 1, 1, 3, 5, 0.1471861471861472, ["test    cl, cl", "mov     eax, 2Fh ; '/'", "jnz     short locret_6562"], ["test~cl,cl", "mov~eax,0", "jnz~FOO"]], [1, 0, 15, 0, 0, 3, 0, 1, 2, 6, 0.045454545454545456, ["cmp     eax, 4000h", "setz    cl", "jmp     short loc_657D"], ["cmp~eax,0", "setz~cl", "jmp~FOO"]], [2, 0, 15, 0, 0, 5, 1, 0, 2, 6, 0.047619047619047616, ["cmp     edx, 3", "setz    cl", "cmp     edx, 9", "setz    al", "or      ecx, eax"], ["cmp~edx,0", "setz~cl", "cmp~edx,0", "setz~al", "or~ecx,eax"]], [1, 0, 13, 0, 0, 3, 1, 1, 4, 4, 0.15584415584415584, ["xor     eax, eax", "cmp     cs:indicator_style_0, 1", "jz      short locret_6562"], ["xor~eax,eax", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 5, 3, 0.16666666666666666, ["test    dil, dil", "jnz     short loc_65D8"], ["test~dil,dil", "jnz~FOO"]], [3, 0, 0, 0, 0, 6, 2, 0, 3, -1, 0.0, ["and     esi, 49h", "cmp     esi, 1", "sbb     eax, eax", "not     eax", "and     eax, 2Ah", "retn"], ["and~esi,0", "cmp~esi,0", "sbb~eax,eax", "not~eax", "and~eax,0", "retn"]], [1, 0, 2, 0, 0, 3, 1, 1, 2, -1, 0.008658008658008658, ["xor     eax, eax", "cmp     cs:indicator_style_0, 3", "jz      loc_6608"], ["xor~eax,eax", "cmp~<TAG>,0", "jz~FOO"]], [2, 0, 5, 0, 0, 3, 0, 1, 6, 2, 0.07792207792207792, ["cmp     edx, 6", "mov     eax, 40h ; '@'", "jz      locret_6620"], ["cmp~edx,0", "mov~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 7, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 7, -1, 0.0, ["rep retn"], ["retn"]], [3, 0, 5, 0, 0, 4, 1, 1, 6, -1, 0.07792207792207792, ["and     esi, 0F000h", "mov     eax, 40h ; '@'", "cmp     esi, 0A000h", "jz      short locret_6628"], ["and~esi,0", "mov~eax,0", "cmp~esi,0", "jz~FOO"]], [2, 0, 3, 0, 0, 3, 0, 1, 7, 1, 0.049783549783549784, ["cmp     edx, 1", "mov     eax, 7Ch ; '|'", "jz      locret_6638"], ["cmp~edx,0", "mov~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 8, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 1, 0, 0, 2, 0, 0, 8, -1, 0.012987012987012988, ["cmp     edx, 7", "setz    al"], ["cmp~edx,0", "setz~al"]], [0, 0, 0, 0, 0, 1, 0, 0, 8, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 0, 0, 0, 3, 1, 0, 9, -1, 0.0, ["neg     eax", "and     eax, 3Dh", "retn"], ["neg~eax", "and~eax,0", "retn"]], [0, 0, 22, 0, 0, 2, 1, 1, 0, 8, 0.0, ["test    dil, dil", "jz      short loc_6568"], ["test~dil,dil", "jz~FOO"]], [2, 0, 18, 0, 0, 4, 1, 1, 1, 7, 0.023809523809523808, ["mov     eax, esi", "and     eax, 0F000h", "cmp     eax, 8000h", "jnz     short loc_65C0"], ["mov~eax,esi", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 17, 0, 0, 3, 1, 1, 1, 7, 0.01948051948051948, ["xor     eax, eax", "cmp     edx, 5", "jz      short locret_65D0"], ["xor~eax,eax", "cmp~edx,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 12, 13, 0, 23, 26, 2, 61, 0.03896, 1, 0], "succs": [[17], [0, 14], [5, 22], [2], [2], [22, 6], [9, 12], [], [22, 7], [10, 13], [], [], [1, 11], [16, 15], [], [17], [], [], [19, 21], [8, 3], [], [4, 20], []], "fname": "get_type_indicator", "n_num": 23}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 6, 1, 0, 2, 0, 0, 0, 0, 0.026190476190476195, ["movsxd  rax, cs:scontext_width", "add     rax, 1"], ["movsxd~rax,<TAG>", "add~rax,0"]], [1, 0, 8, 0, 0, 2, 0, 1, 3, 4, 0.03928571428571429, ["cmp     cs:print_scontext, 0", "jnz     short loc_6779"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 4, 5, 0.0642857142857143, ["cmp     cs:format_0, 4", "jz      short loc_67C0"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, 1, 0.09047619047619049, ["mov     rdx, [rsp+2C8h+var_20]", "xor     rdx, fs:28h", "mov     rax, rbx", "jnz     loc_67D2"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "mov~rax,rbx", "jnz~FOO"]], [0, 0, 4, 1, 1, 9, 2, 2, 4, 2, 0.1619047619047619, ["mov     rdx, cs:filename_quoting_options; options", "mov     rsi, [f+0]; name", "lea     rcx, [rsp+2C8h+name_width]; width", "xor     edi, edi; out", "call    quote_name", "mov     eax, cs:indicator_style_0", "add     len, [rsp+2C8h+name_width]", "test    eax, eax", "jz      short loc_66F2"], ["mov~rdx,<TAG>", "mov~rsi,[f+0]", "lea~rcx,[rsp+0]", "xor~edi,edi", "call~FOO", "mov~eax,<TAG>", "add~len,[rsp+0]", "test~eax,eax", "jz~FOO"]], [0, 0, 3, 1, 1, 8, 1, 1, 5, 2, 0.0, ["movzx   edi, byte ptr [f+0B0h]; stat_ok", "mov     edx, [f+0A0h]; type", "mov     esi, [f+28h]; mode", "call    get_type_indicator", "test    al, al", "setnz   al", "movzx   eax, al", "add     len, rax"], ["movzx~edi,[yte ptr [f+0]", "mov~edx,[f+0]", "mov~esi,[f+0]", "call~FOO", "test~al,al", "setnz~al", "movzx~eax,al", "add~len,rax"]], [0, 0, 5, 1, 0, 2, 0, 1, 5, 3, 0.03571428571428572, ["add     len, rax", "jmp     loc_66AC"], ["add~len,rax", "jmp~FOO"]], [1, 0, 6, 1, 1, 4, 0, 2, 5, 4, 0.01666666666666667, ["mov     rdi, [f+0A8h]; s", "call    _strlen", "add     rax, 1", "jmp     short loc_6784"], ["mov~rdi,[f+0]", "call~FOO", "add~rax,0", "jmp~FOO"]], [2, 0, 14, 1, 0, 4, 0, 1, 2, 5, 0.034523809523809526, ["movsxd  rbx, cs:inode_number_width", "add     rbx, 1", "cmp     cs:print_block_size, 0", "jz      loc_6790"], ["movsxd~rbx,<TAG>", "add~rbx,0", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 19, 0, 0, 2, 0, 1, 1, 6, 0.01904761904761905, ["cmp     cs:format_0, 4", "jz      loc_67A0"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 1, 0, 1, 0, 4, 0, 0, 6, -1, 0.0, ["add     rsp, 2B8h", "pop     rbx", "pop     f", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~f", "retn"]], [1, 0, 11, 1, 0, 2, 0, 0, 3, 5, 0.030952380952380953, ["movsxd  rax, cs:block_size_width", "add     rax, 1"], ["movsxd~rax,<TAG>", "add~rax,0"]], [1, 0, 13, 0, 0, 2, 0, 1, 3, 6, 0.026190476190476195, ["cmp     cs:format_0, 4", "jnz     loc_6691"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 4, 3, 0.029761904761904764, ["jmp     loc_66AC"], ["jmp~FOO"]], [0, 0, 10, 1, 0, 1, 0, 0, 4, 4, 0.07857142857142858, ["add     len, rax"], ["add~len,rax"]], [1, 1, 11, 1, 2, 10, 0, 3, 4, 5, 0.01666666666666667, ["mov     rdi, [f+50h]; n", "mov     r8, cs:output_block_size; to_block_size", "lea     rsi, [rsp+2C8h+buf]; buf", "mov     edx, cs:human_output_opts; opts", "mov     ecx, 200h; from_block_size", "call    human_readable", "mov     rdi, rax; s", "call    _strlen", "add     rax, 1", "jmp     loc_669C"], ["mov~rdi,[f+0]", "mov~r8,<TAG>", "lea~rsi,[rsp+0]", "mov~edx,<TAG>", "mov~ecx,<STR>", "call~FOO", "mov~rdi,rax", "call~FOO", "add~rax,0", "jmp~FOO"]], [0, 0, 15, 0, 0, 1, 1, 0, 1, 5, 0.026190476190476195, ["xor     ebx, ebx"], ["xor~ebx,ebx"]], [1, 1, 21, 1, 0, 9, 1, 1, 0, 6, 0.0, ["push    rbp", "push    rbx", "mov     rbp, f", "sub     rsp, 2B8h", "mov     rax, fs:28h", "mov     [rsp+2C8h+var_20], rax", "xor     eax, eax", "cmp     cs:print_inode, 0", "jz      loc_6720"], ["push~rbp", "push~rbx", "mov~rbp,f", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 3, 3, 0.18214285714285716, ["cmp     cs:print_scontext, 0", "jnz     loc_6770"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 2, 4, 0.10833333333333334, ["cmp     cs:print_block_size, 0", "jz      loc_669F"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 15, 0, 2, 7, 0, 3, 2, 5, 0.02023809523809524, ["mov     f, [f+18h]; i", "lea     rsi, [rsp+2C8h+buf]; buf", "call    umaxtostr", "mov     rdi, rax; s", "call    _strlen", "lea     rbx, [rax+1]", "jmp     loc_6722"], ["mov~f,[f+0]", "lea~rsi,[rsp+0]", "call~FOO", "mov~rdi,rax", "call~FOO", "lea~rbx,[rax+0]", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [8, 6, 23, 1, 22, 30, 6, 81, 0.04578, 12, 11], "succs": [[6], [0, 13], [0, 7], [10, 21], [3, 5], [3], [4], [6], [1, 11], [8, 20], [], [14], [11, 15], [4], [18], [14], [19], [16, 9], [2, 4], [18, 12], [19], []], "fname": "length_of_file_name_and_frills", "n_num": 22}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 22, 0, 0, 2, 1, 1, 0, 0, 0.22698412698412698, ["test    max_cols, max_cols", "jz      short loc_6959"], ["test~max_cols,max_cols", "jz~FOO"]], [0, 0, 36, 0, 0, 13, 0, 0, 0, 3, 0.0, ["mov     r9, cs:cwd_n_used", "mov     rcx, cs:max_idx", "push    r14", "push    r13", "push    r12", "push    rbp", "mov     r12d, edi", "cmp     r9, rcx", "push    rbx", "mov     rbx, rcx", "cmovbe  rbx, r9", "cmp     max_cols, cs:column_info_alloc_9289", "jbe     loc_6901"], ["mov~r9,<TAG>", "mov~rcx,<TAG>", "push~r14", "push~r13", "push~r12", "push~rbp", "mov~r12d,edi", "cmp~r9,rcx", "push~rbx", "mov~rbx,rcx", "cmovbe~rbx,r9", "cmp~max_cols,<TAG>", "jbe~FOO"]], [0, 0, 23, 0, 0, 2, 0, 0, 8, -1, 0.2007936507936508, ["mov     r9, cs:cwd_n_used", "mov     cs:column_info_alloc_9289, rbp"], ["mov~r9,<TAG>", "mov~<TAG>,rbp"]], [0, 0, 16, 0, 1, 7, 1, 2, 4, -1, 0.1595238095238095, ["mov     rax, cs:sorted_file", "mov     rdi, [rax+filesno*8]; f", "call    length_of_file_name_and_frills", "test    max_cols, max_cols", "mov     r10, rax", "mov     rdi, cs:cwd_n_used", "jz      loc_6A20"], ["mov~rax,<TAG>", "mov~rdi,<TAG>", "call~FOO", "test~max_cols,max_cols", "mov~r10,rax", "mov~rdi,<TAG>", "jz~FOO"]], [1, 0, 16, 1, 0, 3, 0, 0, 5, -1, 0.05952380952380952, ["add     filesno, 1", "cmp     filesno, rdi", "jb      loc_6968"], ["add~filesno,0", "cmp~filesno,rdi", "jb~FOO"]], [0, 0, 16, 0, 0, 2, 1, 0, 3, -1, 0.15079365079365079, ["xor     ebp, ebp", "nop     dword ptr [rax+00h]"], ["xor~ebp,ebp", "nop~[word ptr [rax+0]"]], [1, 0, 16, 0, 0, 3, 0, 1, 6, -1, 0.12857142857142856, ["cmp     byte ptr [rcx], 0", "lea     r8, [rsi+1]", "jz      short loc_69F5"], ["cmp~<TAG>,0", "lea~r8,[rsi+0]", "jz~FOO"]], [0, 0, 16, 0, 0, 6, 1, 1, 5, -1, 0.12222222222222222, ["mov     r14, cs:line_length", "mov     rcx, cs:column_info_0", "xor     esi, esi", "lea     r11, [name_length+2]", "lea     r13, [rdi-1]", "jmp     short loc_6A01"], ["mov~r14,<TAG>", "mov~rcx,<TAG>", "xor~esi,esi", "lea~r11,[name_length+0]", "lea~r13,[rdi-1]+0]", "jmp~FOO"]], [1, 0, 16, 1, 0, 4, 0, 1, 7, -1, 0.06190476190476191, ["add     rcx, 18h", "cmp     max_cols, r8", "mov     rsi, r8", "jz      short loc_6A20"], ["add~rcx,0", "cmp~max_cols,r8", "mov~rsi,r8", "jz~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 7, -1, 0.08492063492063492, ["test    r12b, r12b", "jnz     short loc_69A8"], ["test~r12b,r12b", "jnz~FOO"]], [2, 0, 3, 1, 0, 3, 0, 1, 7, -1, 0.0, ["sub     rax, 18h", "cmp     byte ptr [rax+18h], 0", "jnz     short loc_6A64"], ["sub~rax,0", "cmp~[yte ptr [rax+0],0", "jnz~FOO"]], [2, 0, 3, 1, 0, 3, 0, 1, 6, -1, 0.026984126984126985, ["sub     cols, 1", "cmp     cols, 1", "jnz     short loc_6A50"], ["sub~cols,0", "cmp~cols,0", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 0, 3, -1, 0.11904761904761904, ["cmp     max_cols, 1", "jbe     short loc_6A64"], ["cmp~max_cols,0", "jbe~FOO"]], [0, 0, 17, 0, 0, 2, 1, 1, 2, -1, 0.24285714285714285, ["test    r9, r9", "jz      loc_6A2D"], ["test~r9,r9", "jz~FOO"]], [1, 0, 31, 1, 1, 6, 0, 2, 3, 2, 0.038492063492063494, ["lea     rbp, [max_cols+max_cols]", "lea     rsi, [rbp+max_cols+0]", "shl     rsi, 4; n", "call    xrealloc", "mov     cs:column_info_0, rax", "jmp     loc_6852"], ["lea~rbp,<TAG>", "lea~rsi,[rbp+0]", "shl~rsi,0", "call~FOO", "mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 32, 1, 0, 4, 0, 0, 2, 1, 0.017063492063492062, ["mov     edx, 30h ; '0'", "mov     rax, rdx", "mul     max_cols", "jo      short loc_6A9B"], ["mov~edx,0", "mov~rax,rdx", "mul~,max_cols", "jo~FOO"]], [1, 0, 21, 0, 0, 5, 1, 0, 2, -1, 0.03333333333333333, ["mov     rdi, cs:column_info_0", "lea     r8, [max_cols+max_cols*2+3]", "xor     esi, esi", "mov     edx, 3", "nop     dword ptr [rax+00000000h]"], ["mov~rdi,<TAG>", "lea~r8,[max_cols+0]", "xor~esi,esi", "mov~edx,0", "nop~[word ptr [rax+0]"]], [0, 0, 16, 1, 0, 5, 1, 1, 8, -1, 0.025396825396825397, ["mov     rax, filesno", "xor     edx, edx", "div     r8", "mov     r9, rdx", "jmp     short loc_69C0"], ["mov~rax,filesno", "xor~edx,edx", "div~,r8", "mov~r9,rdx", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 32, 1, 0, 4, 0, 0, 2, 1, 0.017063492063492062, ["mov     edx, 18h", "mov     rax, rdx", "mul     rcx", "jo      loc_6A9B"], ["mov~edx,0", "mov~rax,rdx", "mul~,rcx", "jo~FOO"]], [1, 0, 30, 4, 0, 12, 1, 1, 4, 1, 0.12142857142857143, ["mov     rax, cs:column_info_alloc_9289", "mov     rdi, rbp", "sub     rdi, rax", "add     rax, 1", "add     rax, rbp", "mov     rcx, rdi", "mov     rsi, rax", "setb    al", "movzx   eax, al", "imul    rcx, rsi", "test    rax, rax", "jnz     loc_6A9B"], ["mov~rax,<TAG>", "mov~rdi,rbp", "sub~rdi,rax", "add~rax,0", "add~rax,rbp", "mov~rcx,rdi", "mov~rsi,rax", "setb~al", "movzx~eax,al", "imul~rcx,rsi", "test~rax,rax", "jnz~FOO"]], [0, 0, 29, 1, 0, 5, 1, 1, 5, 1, 0.1373015873015873, ["xor     edx, edx", "mov     rax, rcx", "div     rdi", "cmp     rsi, rax", "jnz     loc_6A9B"], ["xor~edx,edx", "mov~rax,rcx", "div~,rdi", "cmp~rsi,rax", "jnz~FOO"]], [2, 0, 28, 1, 0, 5, 0, 0, 6, 1, 0.15317460317460319, ["mov     edx, 8", "shr     rcx, 1", "mov     rax, rdx", "mul     rcx", "jo      loc_6A9B"], ["mov~edx,0", "shr~rcx,0", "mov~rax,rdx", "mul~,rcx", "jo~FOO"]], [1, 0, 35, 0, 0, 5, 0, 0, 1, 2, 0.009523809523809525, ["mov     rax, rcx", "mov     by_columns, cs:column_info_0; p", "shr     rax, 1", "cmp     max_cols, rax", "jb      loc_6A70"], ["mov~rax,rcx", "mov~by_columns,<TAG>", "shr~rax,0", "cmp~max_cols,rax", "jb~FOO"]], [2, 0, 21, 1, 0, 6, 0, 0, 3, -1, 0.03888888888888889, ["mov     rax, [rdi+rdx*8-8]", "add     rsi, 8", "mov     byte ptr [rdi+rdx*8-18h], 1", "mov     [rdi+rdx*8-10h], rdx", "lea     rcx, [rax+rsi]", "nop     word ptr [rax+rax+00000000h]"], ["mov~rax,[rdi+0]", "add~rsi,0", "mov~[yte ptr [rdi+0],0", "mov~[rdi+0],rdx", "lea~rcx,<TAG>", "nop~[ord ptr [rax+0]"]], [1, 0, 21, 1, 0, 3, 0, 1, 5, -1, 0.04365079365079365, ["add     rdx, 3", "cmp     r8, rdx", "jnz     short loc_6920"], ["add~rdx,0", "cmp~r8,rdx", "jnz~FOO"]], [0, 0, 26, 0, 1, 5, 0, 1, 7, -1, 0.16746031746031745, ["lea     rdi, ds:0[rcx*8]; n", "call    xmalloc", "mov     rdx, cs:column_info_alloc_9289", "cmp     rbp, rdx", "jbe     short loc_68F3"], ["lea~rdi,<TAG>", "call~FOO", "mov~rdx,<TAG>", "cmp~rbp,rdx", "jbe~FOO"]], [0, 0, 16, 2, 0, 8, 2, 0, 8, -1, 0.025396825396825397, ["lea     rax, [r13+r8+0]", "xor     edx, edx", "div     r8", "xor     edx, edx", "mov     r9, rax", "mov     rax, filesno", "div     r9", "mov     r9, rax"], ["lea~rax,[r13+0]", "xor~edx,edx", "div~,r8", "xor~edx,edx", "mov~r9,rax", "mov~rax,filesno", "div~,r9", "mov~r9,rax"]], [2, 0, 4, 1, 0, 5, 0, 1, 4, -1, 0.07380952380952381, ["mov     rdx, cs:column_info_0", "lea     rax, [max_cols+max_cols*2]", "shl     rax, 3", "cmp     byte ptr [rdx+rax-18h], 0", "jnz     short loc_6A64"], ["mov~rdx,<TAG>", "lea~rax,<TAG>", "shl~rax,0", "cmp~[yte ptr [rdx+0],0", "jnz~FOO"]], [1, 0, 31, 1, 1, 5, 0, 1, 3, 2, 0.038492063492063494, ["lea     rsi, [rcx+rcx*2]", "shl     rsi, 3; n", "call    xrealloc", "mov     rbp, cs:max_idx", "mov     cs:column_info_0, rax"], ["lea~rsi,<TAG>", "shl~rsi,0", "call~FOO", "mov~rbp,<TAG>", "mov~<TAG>,rax"]], [2, 0, 21, 1, 0, 4, 0, 1, 4, -1, 0.04126984126984127, ["mov     qword ptr [rax], 3", "add     rax, 8", "cmp     rcx, rax", "jnz     short loc_6940"], ["mov~<TAG>,0", "add~rax,0", "cmp~rcx,rax", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 5, -1, 0.050793650793650794, ["lea     rax, [rdx+rax-30h]", "jmp     short loc_6A5A"], ["lea~rax,[rdx+0]", "jmp~FOO"]], [0, 0, 16, 0, 0, 8, 0, 0, 9, -1, 0.051587301587301584, ["mov     rdx, [rcx+10h]", "cmp     idx, rsi", "mov     rax, name_length", "cmovnz  rax, r11", "lea     rsi, [rdx+idx*8]", "mov     rdx, [rsi]", "cmp     rdx, rax", "jnb     short loc_69F5"], ["mov~rdx,[rcx+0]", "cmp~idx,rsi", "mov~rax,name_length", "cmovnz~rax,r11", "lea~rsi,<TAG>", "mov~rdx,<TAG>", "cmp~rdx,rax", "jnb~FOO"]], [0, 0, 25, 0, 0, 6, 0, 0, 8, -1, 0.007936507936507936, ["mov     rcx, cs:column_info_0", "lea     rsi, [rdx+rdx*2]", "lea     rdx, ds:8[rdx*8]", "lea     rcx, [rcx+rsi*8+10h]", "lea     rsi, ds:8[rbp*8]", "nop     dword ptr [rax]"], ["mov~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdx,<TAG>", "lea~rcx,[rcx+0]", "lea~rsi,<TAG>", "nop~<TAG>"]], [0, 0, 0, 0, 0, 7, 0, 0, 4, -1, 0.0, ["mov     rax, cols", "pop     cols", "pop     rbp", "pop     by_columns", "pop     r13", "pop     r14", "retn"], ["mov~rax,cols", "pop~cols", "pop~rbp", "pop~by_columns", "pop~r13", "pop~r14", "retn"]], [2, 0, 25, 3, 0, 6, 0, 1, 9, -1, 0.01904761904761905, ["mov     [rcx], rax", "add     rax, rdx", "add     rdx, 8", "add     rcx, 18h", "cmp     rsi, rdx", "jnz     short loc_68E0"], ["mov~<TAG>,rax", "add~rax,rdx", "add~rdx,0", "add~rcx,0", "cmp~rsi,rdx", "jnz~FOO"]], [0, 0, 16, 2, 0, 8, 0, 0, 10, -1, 0.0, ["mov     idx, [rcx+8]", "sub     r9, rdx", "mov     rdx, r9", "add     rdx, rax", "mov     [rcx+8], rdx", "mov     [rsi], rax", "cmp     [rcx+8], r14", "setb    byte ptr [rcx]"], ["mov~idx,[rcx+0]", "sub~r9,rdx", "mov~rdx,r9", "add~rdx,rax", "mov~[rcx+0],rdx", "mov~<TAG>,rax", "cmp~[rcx+0],r14", "setb~<TAG>"]]], "func_feature": [5, 12, 23, 0, 37, 58, 2, 179, 0.07284, 7, 26], "succs": [[16, 13], [0, 23], [0], [4, 7], [3, 12], [3], [8, 9], [6], [4, 6], [17, 27], [34, 11], [10, 34], [34, 28], [12, 5], [20], [18, 14], [24], [32], [], [18, 29], [18, 21], [18, 22], [18, 26], [19, 15], [30], [24, 13], [33, 2], [32], [34, 31], [20], [25, 30], [11], [8, 36], [35], [], [2, 35], [8]], "fname": "calculate_columns", "n_num": 37}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 4, 0, 0, 4, 0, 0, 0, 0, 0.15000000000000002, ["mov     stat_ok, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     type, [rdi+28h]", "cmp     rdx, [rdi+30h]", "jnb     short loc_6AE0"], ["mov~stat_ok,<TAG>", "mov~type,[rdi+0]", "cmp~rdx,[rdi+0]", "jnb~FOO"]], [1, 0, 5, 1, 1, 5, 1, 2, 0, 2, 0.0, ["sub     rsp, 8", "movzx   edi, dil; stat_ok", "call    get_type_indicator", "test    al, al", "jz      short loc_6AD4"], ["sub~rsp,0", "movzx~edi,dil", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 2, 0, 1, 3, 0, 2, 2, 0, 0.07500000000000001, ["movzx   esi, al; int", "call    ___overflow", "jmp     short loc_6ACC"], ["movzx~esi,al", "call~FOO", "jmp~FOO"]], [0, 0, 2, 0, 0, 3, 0, 0, 2, -1, 0.07500000000000001, ["lea     rcx, [rdx+1]", "mov     [rdi+28h], rcx", "mov     [rdx], al"], ["lea~rcx,[rdx+0]", "mov~[rdi+0],rcx", "mov~<TAG>,al"]], [1, 0, 1, 1, 0, 1, 0, 0, 3, -1, 0.15000000000000002, ["add     cs:dired_pos, 1"], ["add~<TAG>,0"]], [1, 0, 0, 1, 0, 2, 0, 0, 1, -1, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [2, 1, 4, 0, 6, 7, 3, 18, 0.075, 2, 3], "succs": [[2, 3], [0, 5], [4], [4], [5], []], "fname": "print_type_indicator", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 3, 0, 1, 5, 1, 2, 0, 0, 0.10683760683760682, ["mov     rsi, rax; s2", "mov     rdi, rbp; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_6B98"], ["mov~rsi,rax", "mov~rdi,rbp", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 3, -1, 0.10683760683760682, ["test    rbp, rbp", "lea     rax, aReportBugsToS+16h; \"\"", "jnz     short loc_6B75"], ["test~rbp,rbp", "lea~rax,<TAG>", "jnz~FOO"]], [0, 0, 4, 0, 0, 3, 1, 0, 3, -1, 0.05341880341880341, ["lea     rdx, aReportBugsToS+16h; \"\"", "test    rbp, rbp", "cmovz   rbp, rdx"], ["lea~rdx,<TAG>", "test~rbp,rbp", "cmovz~rbp,rdx"]], [0, 0, 10, 0, 0, 2, 1, 1, 1, -1, 0.1282051282051282, ["test    cl, cl", "jnz     short loc_6B38"], ["test~cl,cl", "jnz~FOO"]], [4, 0, 13, 0, 0, 13, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_6B22"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 12, 0, 0, 2, 1, 1, 1, 1, 0.00641025641025641, ["test    cl, cl", "jnz     loc_6BB0"], ["test~cl,cl", "jnz~FOO"]], [2, 0, 7, 0, 2, 15, 1, 3, 2, -1, 0.1794871794871795, ["push    r12", "push    rbp", "push    rbx", "mov     r12, [a]", "mov     rbx, b", "mov     esi, 2Eh ; '.'; c", "mov     a, r12; s", "call    _strrchr", "mov     b, [b]", "mov     esi, 2Eh ; '.'; c", "mov     rbp, rax", "mov     rdi, rbx; s", "call    _strrchr", "test    rax, rax", "jz      short loc_6BA0"], ["push~r12", "push~rbp", "push~rbx", "mov~r12,<TAG>", "mov~rbx,b", "mov~esi,0", "mov~a,r12", "call~FOO", "mov~b,<TAG>", "mov~esi,0", "mov~rbp,rax", "mov~rdi,rbx", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 9, 0, 0, 3, 1, 1, 2, -1, 0.019230769230769232, ["test    dl, dl", "mov     eax, 1", "jz      short loc_6B38"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 5, -1, 0.0, ["pop     rbx", "pop     rbp", "pop     r12", "retn"], ["pop~rbx", "pop~rbp", "pop~r12", "retn"]], [0, 0, 2, 0, 0, 1, 0, 1, 4, -1, 0.027777777777777776, ["jmp     short loc_6B84"], ["jmp~FOO"]], [0, 0, 1, 0, 0, 6, 0, 1, 5, -1, 0.05769230769230769, ["mov     rsi, rbx; s2", "mov     rdi, r12; s1", "pop     rbx", "pop     rbp", "pop     r12", "jmp     _strcmp"], ["mov~rsi,rbx", "mov~rdi,r12", "pop~rbx", "pop~rbp", "pop~r12", "jmp~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []]], "func_feature": [3, 9, 12, 0, 14, 17, 0, 60, 0.04899, 1, 0], "succs": [[8, 10], [0, 9], [0], [6, 7], [3, 5], [3, 12], [1, 2], [11, 6], [], [10], [13], [], [], []], "fname": "strcmp_df_extension", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 2, -1, 0.09523809523809523, ["mov     b, [a]; s2", "mov     a, [b]; s1", "jmp     _strverscmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 1, -1, 0.19047619047619047, ["test    cl, cl", "jnz     short loc_6C00"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 2, -1, 0.07142857142857142, ["test    dl, dl", "mov     eax, 1", "jz      short loc_6C00"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [4, 0, 7, 0, 0, 14, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "mov     r8, b", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 9", "setz    al", "cmp     edx, 3", "setz    dl", "or      dl, al", "jnz     short loc_6BF1"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "mov~r8,b", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 1, 1, 0.023809523809523808, ["test    cl, cl", "jnz     short loc_6C10"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 5, 5, 0, 8, 9, 0, 27, 0.04762, 0, 0], "succs": [[], [0], [1, 3], [1, 7], [2, 5], [2, 6], [], []], "fname": "rev_xstrcoll_df_version", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.09523809523809523, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     _strverscmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 1, -1, 0.19047619047619047, ["test    cl, cl", "jnz     short loc_6C60"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 2, -1, 0.07142857142857142, ["test    dl, dl", "mov     eax, 1", "jz      short loc_6C60"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [4, 0, 7, 0, 0, 13, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 9", "setz    al", "cmp     edx, 3", "setz    dl", "or      dl, al", "jnz     short loc_6C4E"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [0, 0, 6, 0, 0, 2, 1, 1, 1, 1, 0.023809523809523808, ["test    cl, cl", "jnz     short loc_6C70"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 5, 5, 0, 8, 9, 0, 26, 0.04762, 0, 0], "succs": [[4], [0, 2], [0, 7], [1, 5], [], [1, 6], [], []], "fname": "xstrcoll_df_version", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.0, ["cmp     qword ptr cs:unk_21A088, 0", "jz      short loc_6C98"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 0, -1, 0.08333333333333333, ["lea     rdi, unk_21A080", "jmp     short put_indicator"], ["lea~rdi,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0.0, [], []], [2, 0, 1, 2, 2, 8, 0, 3, 0, 0, 0.08333333333333333, ["lea     rdi, color_indicator; ind", "sub     rsp, 8", "call    put_indicator", "lea     rdi, stru_21A090; ind", "call    put_indicator", "lea     rdi, ind", "add     rsp, 8", "jmp     short put_indicator"], ["lea~rdi,<TAG>", "sub~rsp,0", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "add~rsp,0", "jmp~FOO"]]], "func_feature": [2, 0, 5, 0, 4, 4, 2, 12, 0.04167, 5, 2], "succs": [[1, 3], [2], [], [2]], "fname": "prep_non_filename_text", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 1, 0, 0, 6, 0, 1, 0, 0, 0.3333333333333333, ["mov     rdi, [ind+8]; ptr", "mov     rsi, [ind]; size", "mov     edx, 1; n", "pop     ind", "mov     rcx, cs:stdout@@GLIBC_2_2_5; stream", "jmp     _fwrite_unlocked"], ["mov~rdi,[ind+0]", "mov~rsi,<TAG>", "mov~edx,0", "pop~ind", "mov~rcx,<TAG>", "jmp~FOO"]], [1, 0, 2, 0, 1, 3, 0, 2, 1, 0, 0.0, ["mov     cs:used_color, 1", "call    prep_non_filename_text", "jmp     short loc_6CDD"], ["mov~<TAG>,0", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 0, 4, 0, 1, 0, 1, 0.0, ["cmp     cs:used_color, 0", "push    rbx", "mov     rbx, ind", "jz      short loc_6D00"], ["cmp~<TAG>,0", "push~rbx", "mov~rbx,ind", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []]], "func_feature": [1, 0, 4, 0, 4, 4, 11, 13, 0.08333, 2, 0], "succs": [[3], [0], [0, 1], []], "fname": "put_indicator", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 33, 0, 0, 2, 0, 1, 0, 0, 0.012704174228675136, ["cmp     eax, 0A000h", "jz      loc_7028"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 37, 0, 0, 2, 0, 1, 4, 8, 0.02223230490018149, ["cmp     eax, 4000h", "jz      loc_70D0"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 11, 0, 0, 4, 1, 1, 4, 3, 0.11373260738052028, ["mov     eax, cs:interrupt_signal", "mov     edx, cs:stop_signal_count", "or      edx, eax", "jz      loc_6EB0"], ["mov~eax,<TAG>", "mov~edx,<TAG>", "or~edx,eax", "jz~FOO"]], [0, 0, 12, 0, 0, 2, 1, 1, 3, 2, 0.1560798548094374, ["test    r13d, r13d", "jnz     short loc_6DF7"], ["test~r13d,r13d", "jnz~FOO"]], [1, 0, 12, 1, 0, 4, 1, 1, 5, 2, 0.007259528130671507, ["mov     [rdx], rax", "add     qword ptr [__o+18h], 8", "test    r13d, r13d", "jz      short loc_6DAD"], ["mov~<TAG>,rax", "add~[word ptr [__o+0],0", "test~r13d,r13d", "jz~FOO"]], [1, 0, 13, 0, 1, 6, 0, 2, 5, 3, 0.0, ["mov     esi, 8; int", "mov     rdi, __o; struct obstack *", "call    __obstack_newchunk", "mov     rdx, [__o+18h]", "mov     rax, cs:dired_pos", "jmp     loc_6DEA"], ["mov~esi,0", "mov~rdi,__o", "call~FOO", "mov~rdx,[__o+0]", "mov~rax,<TAG>", "jmp~FOO"]], [0, 0, 14, 0, 0, 4, 0, 0, 4, 3, 0.024803387779794316, ["mov     rdx, [__o+18h]", "lea     rcx, [rdx+8]", "cmp     [__o+20h], rcx", "jb      loc_6FF0"], ["mov~rdx,[__o+0]", "lea~rcx,[rdx+0]", "cmp~[__o+0],rcx", "jb~FOO"]], [0, 0, 32, 2, 1, 7, 1, 2, 7, 7, 0.019963702359346643, ["mov     rsi, [rbp+8]; s2", "mov     rdi, r13", "sub     rdi, rdx", "add     rdi, p; s1", "call    _strncmp", "test    eax, eax", "jz      short loc_70A2"], ["mov~rsi,[rbp+0]", "mov~rdi,r13", "sub~rdi,rdx", "add~rdi,p", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 32, 0, 0, 3, 0, 0, 6, 8, 0.019963702359346643, ["mov     rdx, [rbp+0]; n", "cmp     r13, rdx", "jb      short loc_708F"], ["mov~rdx,[rbp+0]", "cmp~r13,rdx", "jb~FOO"]], [0, 0, 10, 0, 0, 2, 0, 1, 5, 7, 0.08711433756805809, ["mov     rbp, rsp", "jmp     short loc_6E71"], ["mov~rbp,rsp", "jmp~FOO"]], [0, 0, 10, 0, 2, 5, 0, 3, 7, 6, 0.0, ["lea     rdi, color_indicator; ind", "call    put_indicator", "lea     rdi, ind; ind", "call    put_indicator", "jmp     loc_6E10"], ["lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 6, 6, 0.07864488808227466, ["cmp     cs:used_color, 0", "jz      short loc_6E10"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 35, 0, 0, 2, 1, 1, 6, 8, 0.008771929824561405, ["and     esi, 49h", "jz      short loc_7050"], ["and~esi,0", "jz~FOO"]], [1, 0, 37, 0, 0, 2, 1, 1, 5, 8, 0.01058681185722928, ["test    esi, 400h", "jnz     short loc_7122"], ["test~esi,0", "jnz~FOO"]], [3, 1, 27, 1, 0, 6, 2, 1, 7, 7, 0.0, ["and     esi, 200h", "cmp     esi, 1", "sbb     rbp, rbp", "and     bpl, 40h", "add     rbp, 120h", "jmp     loc_6EEC"], ["and~esi,<STR>", "cmp~esi,0", "sbb~rbp,rbp", "and~bpl,0", "add~rbp,0", "jmp~FOO"]], [2, 0, 28, 0, 0, 3, 1, 1, 6, 7, 0.0024198427102238356, ["test    sil, 2", "mov     ebp, 130h", "jnz     loc_6EEC"], ["test~sil,0", "mov~ebp,0", "jnz~FOO"]], [0, 0, 32, 0, 0, 3, 1, 1, 7, 8, 0.002117362371445856, ["mov     rbp, [rbp+20h]", "test    rbp, rbp", "jnz     short loc_7070"], ["mov~rbp,[rbp+0]", "test~rbp,rbp", "jnz~FOO"]], [2, 0, 56, 0, 0, 3, 0, 1, 2, 7, 0.009981851179673321, ["cmp     qword ptr cs:unk_21A128, 0", "mov     ebp, 0C0h", "jnz     loc_6EEC"], ["cmp~<TAG>,0", "mov~ebp,0", "jnz~FOO"]], [1, 0, 57, 0, 0, 2, 0, 1, 1, 8, 0.010284331518451302, ["cmp     edx, 0FFFFFFFFh", "jz      loc_7010"], ["cmp~edx,0", "jz~FOO"]], [1, 2, 29, 0, 0, 5, 1, 1, 5, 7, 0.01648517846339988, ["mov     eax, esi", "mov     ebp, 140h", "and     eax, 202h", "cmp     eax, 202h", "jz      loc_6EEC"], ["mov~eax,esi", "mov~ebp,0", "and~eax,<STR>", "cmp~eax,<STR>", "jz~FOO"]], [0, 2, 29, 0, 0, 3, 0, 1, 7, 7, 0.00544464609800363, ["cmp     eax, 0C000h", "mov     ebp, 90h", "jz      loc_6EEC"], ["cmp~eax,<STR>", "mov~ebp,<STR>", "jz~FOO"]], [0, 2, 30, 0, 0, 3, 0, 1, 6, 7, 0.011343012704174229, ["cmp     eax, 1000h", "mov     ebp, 80h", "jz      loc_6EEC"], ["cmp~eax,<STR>", "mov~ebp,<STR>", "jz~FOO"]], [0, 0, 55, 0, 0, 1, 0, 1, 3, 10, 0.008469449485783424, ["jmp     loc_6EC9"], ["jmp~FOO"]], [1, 0, 16, 1, 1, 9, 1, 2, 3, 3, 0.05399274047186933, ["mov     rdx, cs:filename_quoting_options; options", "mov     rdi, cs:stdout@@GLIBC_2_2_5; out", "xor     ecx, ecx; width", "mov     rsi, p; name", "call    quote_name", "add     rax, cs:dired_pos", "cmp     cs:dired, 0", "mov     cs:dired_pos, rax", "jnz     short loc_6DD8"], ["mov~rdx,<TAG>", "mov~rdi,<TAG>", "xor~ecx,ecx", "mov~rsi,p", "call~FOO", "add~rax,<TAG>", "cmp~<TAG>,0", "mov~<TAG>,rax", "jnz~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 2, 4, 0.07819116757410768, ["cmp     cs:dired, 0", "jz      short loc_6D79"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 17, 1, 0, 3, 0, 0, 4, 4, 0.010284331518451302, ["mov     rdx, cs:dired_pos", "mov     [rax], rdx", "add     qword ptr [__o+18h], 8"], ["mov~rdx,<TAG>", "mov~<TAG>,rdx", "add~[word ptr [__o+0],0"]], [0, 1, 27, 0, 0, 2, 0, 1, 6, 7, 0.008166969147005446, ["mov     ebp, 110h", "jmp     loc_6EEC"], ["mov~ebp,<STR>", "jmp~FOO"]], [0, 0, 10, 0, 1, 4, 1, 2, 8, 4, 0.010738052026618271, ["xor     esi, esi; handler", "mov     edi, ebx; sig", "call    _signal", "jmp     short loc_6E4B"], ["xor~esi,esi", "mov~edi,ebx", "call~FOO", "jmp~FOO"]], [0, 0, 10, 0, 2, 10, 2, 3, 7, 5, 0.05142165759225651, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "call    _fflush_unlocked", "lea     rsi, caught_signals; set", "xor     edi, edi; how", "mov     rdx, rbp; oset", "call    _sigprocmask", "mov     ebx, cs:interrupt_signal", "mov     eax, cs:stop_signal_count", "test    eax, eax", "jz      short loc_6EA0"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~rdx,rbp", "call~FOO", "mov~ebx,<TAG>", "mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 0, 13, 1, 1, 7, 1, 2, 2, 3, 0.14352692075015125, ["mov     rdx, cs:filename_quoting_options; options", "mov     rdi, cs:stdout@@GLIBC_2_2_5; out", "xor     ecx, ecx; width", "mov     rsi, p; name", "call    quote_name", "add     cs:dired_pos, rax", "jmp     loc_6DA8"], ["mov~rdx,<TAG>", "mov~rdi,<TAG>", "xor~ecx,ecx", "mov~rsi,p", "call~FOO", "add~<TAG>,rax", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 4, 1, 0.0338777979431337, ["mov     rax, [rsp+0B8h+var_30]", "xor     rax, fs:28h", "jnz     loc_712C"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 23, 0, 3, 9, 1, 4, 5, 5, 0.05021173623714459, ["lea     rdi, color_indicator; ind", "mov     r13d, 1", "call    put_indicator", "mov     rdi, rbp; ind", "call    put_indicator", "lea     rdi, ind; ind", "call    put_indicator", "test    stack, stack", "jnz     loc_6D4F"], ["lea~rdi,<TAG>", "mov~r13d,0", "call~FOO", "mov~rdi,rbp", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "test~stack,stack", "jnz~FOO"]], [1, 0, 25, 0, 0, 3, 1, 1, 4, 5, 0.2425892316999395, ["xor     r13d, r13d", "cmp     qword ptr [rbp+8], 0", "jz      loc_6D46"], ["xor~r13d,r13d", "cmp~[word ptr [rbp+0],0", "jz~FOO"]], [1, 0, 28, 0, 0, 3, 1, 1, 6, 7, 0.0065033272837265585, ["test    edx, edx", "mov     ebp, 70h ; 'p'", "jnz     loc_6EEC"], ["test~edx,edx", "mov~ebp,0", "jnz~FOO"]], [1, 1, 28, 0, 0, 3, 0, 1, 8, 7, 0.0030248033877797948, ["cmp     eax, 6000h", "mov     ebp, 0A0h", "jz      loc_6EEC"], ["cmp~eax,<STR>", "mov~ebp,0", "jz~FOO"]], [0, 0, 14, 0, 0, 1, 0, 0, 6, 4, 0.002268602540834846, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 3, 0, 1, 2, 0, 2, 5, 2, 0.007259528130671507, ["call    prep_non_filename_text", "jmp     loc_6DAD"], ["call~FOO", "jmp~FOO"]], [1, 0, 10, 0, 2, 10, 2, 3, 9, 3, 0.01058681185722928, ["mov     edi, ebx; sig", "call    _raise", "xor     edx, edx; oset", "mov     rsi, rbp; set", "mov     edi, 2; how", "call    _sigprocmask", "mov     edx, cs:interrupt_signal", "mov     eax, cs:stop_signal_count", "or      edx, eax", "jz      short loc_6EB0"], ["mov~edi,ebx", "call~FOO", "xor~edx,edx", "mov~rsi,rbp", "mov~edi,0", "call~FOO", "mov~edx,<TAG>", "mov~eax,<TAG>", "or~edx,eax", "jz~FOO"]], [1, 0, 39, 0, 0, 2, 1, 1, 4, 8, 0.015275257108287962, ["test    esi, 800h", "jnz     short loc_7118"], ["test~esi,0", "jnz~FOO"]], [2, 0, 51, 0, 0, 4, 1, 1, 3, 9, 0.025710828796128255, ["mov     eax, esi", "and     eax, 0F000h", "cmp     eax, 8000h", "jz      loc_70B0"], ["mov~eax,esi", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [2, 0, 58, 1, 0, 13, 2, 1, 0, 5, 0.0, ["push    r13", "push    r12", "xor     r13d, r13d", "push    rbp", "push    rbx", "mov     r12, p", "mov     rbx, stack", "sub     rsp, 98h", "mov     rax, fs:28h", "mov     [rsp+0B8h+var_30], rax", "xor     eax, eax", "cmp     cs:print_with_color, 0", "jnz     loc_6EC0"], ["push~r13", "push~r12", "xor~r13d,r13d", "push~rbp", "push~rbx", "mov~r12,p", "mov~rbx,stack", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 10, 1, 0, 3, 0, 0, 8, 4, 0.010738052026618271, ["sub     eax, 1", "mov     ebx, 13h", "mov     cs:stop_signal_count, eax"], ["sub~eax,0", "mov~ebx,0", "mov~<TAG>,eax"]], [0, 0, 22, 0, 0, 2, 1, 1, 1, 4, 0.18632788868723535, ["test    stack, stack", "jz      loc_6F38"], ["test~stack,stack", "jz~FOO"]], [1, 0, 27, 0, 0, 2, 0, 1, 7, 7, 0.008166969147005446, ["mov     ebp, 0E0h", "jmp     loc_6EEC"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 54, 0, 0, 2, 1, 1, 2, 9, 0.04083484573502723, ["test    cl, cl", "jnz     loc_6F60"], ["test~cl,cl", "jnz~FOO"]], [2, 1, 27, 0, 0, 5, 0, 1, 9, 7, 0.0, ["cmp     eax, 2000h", "mov     ebp, 0B0h", "mov     eax, 0D0h", "cmovnz  rbp, rax", "jmp     loc_6EEC"], ["cmp~eax,0", "mov~ebp,0", "mov~eax,<STR>", "cmovnz~rbp,rax", "jmp~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 5, -1, 0.0, ["add     rsp, 98h", "pop     rbx", "pop     rbp", "pop     p", "pop     used_color_this_time", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~p", "pop~used_color_this_time", "retn"]], [2, 1, 27, 1, 0, 5, 1, 1, 7, 7, 0.0, ["cmp     qword ptr cs:unk_21A138, 1", "sbb     rbp, rbp", "and     rbp, 0FFFFFFFFFFFFFFA0h", "add     rbp, 0D0h", "jmp     loc_6EEC"], ["cmp~<TAG>,0", "sbb~rbp,rbp", "and~rbp,0", "add~rbp,<STR>", "jmp~FOO"]], [1, 0, 18, 0, 1, 5, 0, 2, 4, 5, 0.0, ["mov     esi, 8; int", "mov     rdi, __o; struct obstack *", "call    __obstack_newchunk", "mov     rax, [__o+18h]", "jmp     loc_6D6A"], ["mov~esi,0", "mov~rdi,__o", "call~FOO", "mov~rax,[__o+0]", "jmp~FOO"]], [0, 0, 19, 0, 0, 4, 0, 0, 3, 5, 0.02238354506957048, ["mov     rax, [__o+18h]", "lea     rdx, [rax+8]", "cmp     [__o+20h], rdx", "jb      loc_6FD0"], ["mov~rax,[__o+0]", "lea~rdx,[rax+0]", "cmp~[__o+0],rdx", "jb~FOO"]], [1, 0, 35, 0, 0, 5, 0, 1, 3, 8, 0.02843315184513007, ["lea     rax, filetype_indicator_9200", "mov     r8d, r8d", "movsxd  rbp, dword ptr [rax+type*4]", "cmp     ebp, 5", "jz      loc_7050"], ["lea~rax,<TAG>", "mov~r8d,r8d", "movsxd~rbp,<TAG>", "cmp~ebp,0", "jz~FOO"]], [0, 0, 33, 0, 1, 6, 1, 2, 4, 8, 0.018148820326678767, ["mov     p, r12; s", "call    _strlen", "mov     rbp, cs:color_ext_list", "mov     r13, rax", "test    rbp, rbp", "jz      short loc_7098"], ["mov~p,r12", "call~FOO", "mov~rbp,<TAG>", "mov~r13,rax", "test~rbp,rbp", "jz~FOO"]], [0, 1, 27, 0, 0, 2, 0, 1, 5, 7, 0.012250453720508168, ["mov     ebp, 100h", "jmp     loc_6EEC"], ["mov~ebp,<STR>", "jmp~FOO"]], [0, 0, 32, 0, 0, 1, 0, 0, 5, 9, 0.013309134906231096, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 27, 1, 0, 1, 0, 0, 4, 7, 0.024500907441016337, ["shl     rbp, 4"], ["shl~rbp,0"]], [0, 1, 27, 0, 0, 2, 0, 1, 5, 7, 0.017241379310344827, ["mov     ebp, 50h ; 'P'", "jmp     loc_6EEC"], ["mov~ebp,<STR>", "jmp~FOO"]], [0, 0, 26, 1, 0, 2, 0, 0, 3, 6, 0.21324863883847553, ["lea     rax, color_indicator", "add     rbp, rax"], ["lea~rax,<TAG>", "add~rbp,rax"]], [1, 0, 26, 1, 0, 2, 0, 1, 8, 6, 0.023593466424682397, ["add     rbp, 10h", "jmp     loc_6EF6"], ["add~rbp,0", "jmp~FOO"]]], "func_feature": [18, 30, 66, 1, 59, 92, 3, 222, 0.03392, 16, 14], "succs": [[34, 21], [0, 19], [9, 37], [2, 31], [2, 31], [4], [4, 5], [16, 58], [16, 7], [11], [28], [10, 28], [52, 44], [26, 12], [57], [57, 14], [56, 8], [57, 22], [17, 45], [57, 15], [57, 35], [57, 20], [45], [3, 6], [50, 23], [23], [57], [38], [42, 27], [3], [], [30, 47], [24, 36], [32, 43], [48, 57], [57, 46], [29], [31], [11, 37], [13, 53], [1, 39], [18, 43], [38], [24, 29], [57], [40, 51], [57], [], [57], [25], [49, 25], [52, 55], [56, 54], [57], [8], [57], [57], [33], [33]], "fname": "print_name_with_quoting", "n_num": 59}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 19, 0, 1, 6, 1, 2, 0, 0, 0.005263157894736842, ["mov     rdi, [rdi+18h]; i", "mov     rsi, rsp; buf", "call    umaxtostr", "xor     edx, edx", "cmp     cs:format_0, 4", "jz      short loc_7295"], ["mov~rdi,[rdi+0]", "mov~rsi,rsp", "call~FOO", "xor~edx,edx", "cmp~<TAG>,0", "jz~FOO"]], [2, 0, 20, 1, 0, 8, 1, 1, 0, 7, 0.0, ["push    rbx", "mov     rbx, f", "sub     rsp, 2A0h", "mov     rax, fs:28h", "mov     [rsp+2A8h+var_10], rax", "xor     eax, eax", "cmp     cs:print_inode, 0", "jnz     loc_7278"], ["push~rbx", "mov~rbx,f", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 5, 0, 0, 2, 0, 1, 4, 3, 0.17763157894736842, ["mov     esi, [f+28h]", "jmp     short loc_71D4"], ["mov~esi,[f+0]", "jmp~FOO"]], [1, 0, 8, 0, 0, 5, 0, 1, 3, 4, 0.25263157894736843, ["cmp     cs:color_symlink_as_referent, 0", "mov     r8d, [f+0A0h]; type", "movzx   ecx, byte ptr [f+0B0h]; stat_ok", "movzx   edx, byte ptr [f+0B1h]; linkok", "jz      short loc_7220"], ["cmp~<TAG>,0", "mov~r8d,[f+0]", "movzx~ecx,[yte ptr [f+0]", "movzx~edx,[yte ptr [f+0]", "jz~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 4, 4, 0.034210526315789476, ["test    dl, dl", "jz      short loc_7220"], ["test~dl,dl", "jz~FOO"]], [1, 0, 9, 0, 1, 4, 1, 1, 4, 5, 0.04736842105263158, ["lea     rsi, aS; \"%*s \"", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk"], ["lea~rsi,<TAG>", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 11, 0, 0, 4, 1, 1, 3, 6, 0.04736842105263158, ["xor     edx, edx", "cmp     cs:format_0, 4", "mov     rcx, [f+0A8h]", "jz      short loc_7199"], ["xor~edx,edx", "cmp~<TAG>,0", "mov~rcx,[f+0]", "jz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 4, 6, 0.0, ["mov     edx, cs:scontext_width"], ["mov~edx,<TAG>"]], [1, 0, 12, 0, 0, 2, 0, 1, 2, 5, 0.25263157894736843, ["cmp     cs:print_scontext, 0", "jz      short loc_71AC"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 17, 0, 1, 6, 1, 2, 2, 7, 0.08947368421052632, ["lea     rsi, aS; \"%*s \"", "mov     rcx, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_716B"], ["lea~rsi,<TAG>", "mov~rcx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 18, 0, 0, 1, 0, 0, 2, 8, 0.0, ["mov     edx, cs:inode_number_width"], ["mov~edx,<TAG>"]], [0, 0, 4, 0, 1, 6, 2, 2, 5, 2, 0.16842105263157894, ["mov     rdi, [f]; p", "xor     r9d, r9d; stack", "call    print_name_with_quoting", "mov     eax, cs:indicator_style_0", "test    eax, eax", "jz      short loc_71FE"], ["mov~rdi,<TAG>", "xor~r9d,r9d", "call~FOO", "mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 5, 3, 0.006578947368421052, ["mov     esi, [f+0A4h]; mode"], ["mov~esi,[f+0]"]], [1, 0, 13, 0, 1, 6, 1, 2, 3, 6, 0.06842105263157895, ["lea     rsi, aS; \"%*s \"", "mov     rcx, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_7178"], ["lea~rsi,<TAG>", "mov~rcx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 1, 15, 0, 1, 9, 1, 2, 2, 7, 0.02631578947368421, ["mov     edx, cs:human_output_opts; opts", "mov     rdi, [f+50h]; n", "mov     rsi, rsp; buf", "mov     r8, cs:output_block_size; to_block_size", "mov     ecx, 200h; from_block_size", "call    human_readable", "xor     edx, edx", "cmp     cs:format_0, 4", "jz      short loc_7257"], ["mov~edx,<TAG>", "mov~rdi,[f+0]", "mov~rsi,rsp", "mov~r8,<TAG>", "mov~ecx,<STR>", "call~FOO", "xor~edx,edx", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 14, 0, 0, 1, 0, 0, 3, 7, 0.0, ["mov     edx, cs:block_size_width"], ["mov~edx,<TAG>"]], [0, 0, 2, 0, 0, 3, 1, 1, 6, 1, 0.09473684210526316, ["mov     rax, [rsp+2A8h+var_10]", "xor     rax, fs:28h", "jnz     loc_72B0"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 3, 0, 1, 4, 0, 1, 6, 2, 0.0, ["movzx   edi, byte ptr [f+0B0h]; stat_ok", "mov     edx, [f+0A0h]; type", "mov     esi, [f+28h]; mode", "call    print_type_indicator"], ["movzx~edi,[yte ptr [f+0]", "mov~edx,[f+0]", "mov~esi,[f+0]", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 1, 6, 0.16842105263157894, ["cmp     cs:print_block_size, 0", "jnz     loc_7228"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 0, 1, 0, 3, 0, 0, 7, -1, 0.0, ["add     rsp, 2A0h", "pop     f", "retn"], ["add~rsp,0", "pop~f", "retn"]]], "func_feature": [8, 11, 21, 1, 21, 29, 5, 77, 0.06855, 13, 2], "succs": [[9, 10], [0, 19], [11], [2, 4], [2, 12], [3], [5, 7], [5], [3, 6], [19], [9], [16, 17], [11], [8], [13, 15], [13], [18, 20], [16], [], [8, 14], []], "fname": "print_file_name_and_frills", "n_num": 21}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 78, 1, 1, 8, 2, 2, 0, 0, 0.02732673267326733, ["mov     r14d, cs:block_size_width", "xor     esi, esi; flags", "mov     rdi, blocks; string", "call    gnu_mbswidth", "sub     r14d, eax", "test    r14d, r14d", "mov     eax, r14d", "jle     loc_7938"], ["mov~r14d,<TAG>", "xor~esi,esi", "mov~rdi,blocks", "call~FOO", "sub~r14d,eax", "test~r14d,r14d", "mov~eax,r14d", "jle~FOO"]], [0, 1, 79, 0, 1, 8, 0, 2, 8, 21, 0.0, ["mov     rdi, [f+50h]; n", "mov     r8, cs:output_block_size; to_block_size", "lea     rsi, [rsp+12D8h+hbuf]; buf", "mov     edx, cs:human_output_opts; opts", "mov     ecx, 200h; from_block_size", "call    human_readable", "mov     r15, rax", "jmp     loc_73EB"], ["mov~rdi,[f+0]", "mov~r8,<TAG>", "lea~rsi,[rsp+0]", "mov~edx,<TAG>", "mov~ecx,<STR>", "call~FOO", "mov~r15,rax", "jmp~FOO"]], [0, 0, 80, 0, 0, 3, 1, 1, 7, 21, 0.015841584158415842, ["test    dl, dl", "lea     r15, string; \"?\"", "jnz     loc_7B40"], ["test~dl,dl", "lea~r15,<TAG>", "jnz~FOO"]], [0, 0, 20, 0, 1, 7, 1, 1, 16, 7, 0.04612211221122116, ["mov     rdi, [rsp+12D8h+when_timespec.tv_sec]; i", "lea     rsi, [rsp+12D8h+hbuf_0]; buf", "call    imaxtostr", "mov     r8d, cs:width_8944", "mov     rbp, rax", "test    r8d, r8d", "jns     loc_75AF"], ["mov~rdi,[rsp+0]", "lea~rsi,[rsp+0]", "call~FOO", "mov~r8d,<TAG>", "mov~rbp,rax", "test~r8d,r8d", "jns~FOO"]], [0, 0, 22, 0, 0, 2, 1, 1, 15, 8, 0.10229372937293738, ["test    dl, dl", "jz      loc_7598"], ["test~dl,dl", "jz~FOO"]], [1, 0, 12, 2, 1, 10, 0, 2, 18, 5, 0.10455445544554456, ["mov     rsi, cs:stdout@@GLIBC_2_2_5; stream", "mov     rdi, r12; s", "sub     p, r12", "call    _fputs_unlocked", "add     cs:dired_pos, rbp", "cmp     cs:color_symlink_as_referent, 0", "mov     r8d, [f+0A0h]; type", "movzx   ecx, byte ptr [f+0B0h]; stat_ok", "movzx   edx, byte ptr [f+0B1h]; linkok", "jz      loc_7750"], ["mov~rsi,<TAG>", "mov~rdi,r12", "sub~p,r12", "call~FOO", "add~<TAG>,rbp", "cmp~<TAG>,0", "mov~r8d,[f+0]", "movzx~ecx,[yte ptr [f+0]", "movzx~edx,[yte ptr [f+0]", "jz~FOO"]], [0, 1, 13, 0, 0, 4, 0, 1, 21, 6, 0.020594059405940595, ["mov     ecx, 20h ; ' '", "lea     rbp, [r13+1]", "mov     [r13+0], cx", "jmp     loc_75DC"], ["mov~ecx,<STR>", "lea~rbp,[r13+0]", "mov~[r13+0],cx", "jmp~FOO"]], [2, 0, 13, 0, 2, 10, 1, 2, 17, 6, 0.09009900990099011, ["lea     rcx, aS; \"%*s \"", "mov     r9, rbp", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "mov     rdi, p", "xor     eax, eax", "call    ___sprintf_chk", "mov     rdi, p; s", "call    _strlen", "lea     rbp, [p+rax+0]"], ["lea~rcx,<TAG>", "mov~r9,rbp", "mov~rdx,0", "mov~esi,0", "mov~rdi,p", "xor~eax,eax", "call~FOO", "mov~rdi,p", "call~FOO", "lea~rbp,[p+0]"]], [0, 0, 60, 0, 1, 8, 0, 2, 14, 16, 0.0, ["mov     edi, esi; gid", "mov     [rsp+12D8h+var_12D0], rsi", "mov     dword ptr [rsp+12D8h+var_12D8], edx", "call    getgroup", "mov     rsi, [rsp+12D8h+var_12D0]", "mov     rdi, rax", "mov     edx, dword ptr [rsp+12D8h+var_12D8]", "jmp     short loc_7BCC"], ["mov~edi,esi", "mov~[rsp+0],rsi", "mov~<TAG>,edx", "call~FOO", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~edx,<TAG>", "jmp~FOO"]], [1, 0, 61, 0, 0, 3, 1, 1, 13, 16, 0.0038613861386138618, ["xor     edi, edi; name", "cmp     cs:numeric_ids, 0", "jz      short loc_7BFA"], ["xor~edi,edi", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 19, 5, 0.008811881188118813, ["test    dl, dl", "jz      loc_7750"], ["test~dl,dl", "jz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 20, 4, 0.00044554455445544556, ["mov     esi, [f+0A4h]; mode"], ["mov~esi,[f+0]"]], [1, 0, 19, 0, 1, 5, 1, 2, 17, 8, 0.03910891089108911, ["lea     rdi, [rsp+12D8h+timer]; timer", "mov     [rsp+12D8h+timer], 0", "call    _localtime", "test    rax, rax", "jz      short loc_7A65"], ["lea~rdi,[rsp+0]", "mov~[rsp+0],0", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 20, 0, 0, 4, 1, 1, 16, 7, 0.08704620462046211, ["mov     r8d, cs:width_8944", "lea     rbp, string; \"?\"", "test    r8d, r8d", "js      loc_7A12"], ["mov~r8d,<TAG>", "lea~rbp,<TAG>", "test~r8d,r8d", "js~FOO"]], [1, 1, 77, 1, 0, 4, 0, 1, 10, 20, 0.009801980198019802, ["add     p, 1", "mov     byte ptr [p-1], 20h ; ' '", "cmp     p, rcx", "jnz     short loc_7420"], ["add~p,0", "mov~[yte ptr [p-1]+0],<STR>", "cmp~p,rcx", "jnz~FOO"]], [1, 0, 77, 1, 0, 5, 0, 0, 9, 21, 0.004554455445544555, ["sub     eax, 1", "mov     rdx, rax", "lea     rcx, [p+rax+1]", "mov     rax, p", "nop     dword ptr [p+00000000h]"], ["sub~eax,0", "mov~rdx,rax", "lea~rcx,[p+0]", "mov~rax,p", "nop~[word ptr [p+0]"]], [0, 0, 16, 0, 1, 7, 1, 2, 19, 8, 0.004752475247524753, ["xor     edx, edx; flags", "mov     rsi, rax; nbytes", "mov     rdi, r14; string", "call    mbsnwidth", "mov     r8d, eax", "mov     cs:width_8944, eax", "jmp     loc_7A5C"], ["xor~edx,edx", "mov~rsi,rax", "mov~rdi,r14", "call~FOO", "mov~r8d,eax", "mov~<TAG>,eax", "jmp~FOO"]], [1, 0, 18, 0, 1, 10, 3, 2, 18, 9, 0.023762376237623763, ["lea     r14, [rsp+12D8h+hbuf]", "mov     rdx, cs:long_time_format; format", "xor     r9d, r9d; ns", "xor     r8d, r8d; ut", "mov     rcx, rax; tp", "mov     esi, 3E9h; maxsize", "mov     rdi, r14; s", "call    nstrftime", "test    rax, rax", "jnz     loc_7C16"], ["lea~r14,[rsp+0]", "mov~rdx,<TAG>", "xor~r9d,r9d", "xor~r8d,r8d", "mov~rcx,rax", "mov~esi,0", "mov~rdi,r14", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 75, 0, 0, 2, 0, 0, 11, 19, 0.014851485148514853, ["movsxd  p, edx", "lea     rdx, [rbp+rax+1]"], ["movsxd~p,edx", "lea~rdx,[rbp+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 91, 0, 0, 2, 0, 1, 5, 21, 0.0015841584158415843, ["cmp     eax, 2", "jnz     loc_7C31"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 23, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 22, 1, 0.019405940594059406, ["mov     rax, [rsp+12D8h+var_40]", "xor     rax, fs:28h", "jnz     loc_7C36"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 8, 0, 1, 6, 0, 2, 20, 3, 0.07287128712871288, ["mov     rdi, [f]; p", "lea     r9, dired_obstack; stack", "call    print_name_with_quoting", "mov     edx, [f+0A0h]; type", "cmp     edx, 6", "jz      loc_7800"], ["mov~rdi,<TAG>", "lea~r9,<TAG>", "call~FOO", "mov~edx,[f+0]", "cmp~edx,0", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 19, 4, 0.07975247524752475, ["mov     esi, [f+28h]", "jmp     loc_7625"], ["mov~esi,[f+0]", "jmp~FOO"]], [1, 0, 75, 1, 0, 6, 1, 1, 10, 18, 0.05287128712871288, ["add     blocks, 1", "movzx   eax, byte ptr [blocks-1]", "lea     rbp, [p+1]", "test    al, al", "mov     [p-1], al", "jnz     loc_7938"], ["add~blocks,0", "movzx~eax,[yte ptr [blocks-1]+0]", "lea~rbp,[p+0]", "test~al,al", "mov~[p-1]+0],al", "jnz~FOO"]], [0, 0, 75, 0, 0, 2, 0, 1, 9, 19, 0.025940594059405943, ["mov     rdx, p", "jmp     loc_7435"], ["mov~rdx,p", "jmp~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 21, 2, 0.023019801980198023, ["mov     eax, cs:indicator_style_0", "test    eax, eax", "jz      short loc_765C"], ["mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 1, 72, 0, 0, 2, 0, 0, 11, 17, 0.05702970297029703, ["mov     byte ptr [rdx], 20h ; ' '", "movzx   edx, byte ptr [f+0B0h]"], ["mov~<TAG>,<STR>", "movzx~edx,[yte ptr [f+0]"]], [0, 0, 16, 0, 0, 1, 0, 0, 19, 8, 0.004752475247524753, ["mov     r8d, cs:width_8944"], ["mov~r8d,<TAG>"]], [0, 0, 3, 0, 1, 3, 0, 1, 22, 2, 0.0, ["movzx   edi, byte ptr [f+0B0h]; stat_ok", "mov     esi, [f+28h]; mode", "call    print_type_indicator"], ["movzx~edi,[yte ptr [f+0]", "mov~esi,[f+0]", "call~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 21, 2, 0.03222772277227723, ["cmp     qword ptr [f+8], 0", "jz      loc_765C"], ["cmp~[word ptr [f+0],0", "jz~FOO"]], [0, 0, 15, 0, 0, 2, 1, 0, 20, 7, 0.004455445544554456, ["test    r8d, r8d", "jns     loc_75AF"], ["test~r8d,r8d", "jns~FOO"]], [0, 0, 71, 0, 0, 3, 1, 1, 7, 16, 0.20386138613861388, ["test    dl, dl", "lea     rax, string; \"?\"", "jnz     loc_7920"], ["test~dl,dl", "lea~rax,<TAG>", "jnz~FOO"]], [1, 0, 81, 0, 0, 3, 0, 1, 6, 17, 0.15237623762376237, ["cmp     cs:print_block_size, 0", "movzx   edx, byte ptr [f+0B0h]", "jz      short loc_7457"], ["cmp~<TAG>,0", "movzx~edx,[yte ptr [f+0]", "jz~FOO"]], [4, 0, 4, 2, 2, 17, 2, 3, 22, 2, 0.009306930693069308, ["mov     rcx, cs:stdout@@GLIBC_2_2_5; stream", "lea     rdi, asc_1347F; \" -> \"", "mov     edx, 4; n", "mov     esi, 1; size", "call    _fwrite_unlocked", "movzx   edx, byte ptr [f+0B1h]", "movzx   ecx, byte ptr [f+0B0h]; stat_ok", "xor     r9d, r9d; stack", "mov     esi, [f+0A4h]; mode", "mov     rdi, [f+8]; p", "mov     r8d, [f+0A0h]; type", "add     cs:dired_pos, 4", "sub     edx, 1; linkok", "call    print_name_with_quoting", "mov     edx, cs:indicator_style_0", "test    edx, edx", "jz      loc_765C"], ["mov~rcx,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "mov~esi,0", "call~FOO", "movzx~edx,[yte ptr [f+0]", "movzx~ecx,[yte ptr [f+0]", "xor~r9d,r9d", "mov~esi,[f+0]", "mov~rdi,[f+0]", "mov~r8d,[f+0]", "add~<TAG>,0", "sub~edx,0", "call~FOO", "mov~edx,<TAG>", "test~edx,edx", "jz~FOO"]], [1, 0, 3, 0, 1, 5, 1, 2, 23, 2, 0.0, ["mov     esi, [f+0A4h]; mode", "xor     edx, edx; type", "mov     edi, 1; stat_ok", "call    print_type_indicator", "jmp     loc_765C"], ["mov~esi,[f+0]", "xor~edx,edx", "mov~edi,0", "call~FOO", "jmp~FOO"]], [1, 0, 14, 0, 0, 3, 1, 1, 18, 7, 0.0013861386138613863, ["mov     cs:width_8944, 0", "xor     r8d, r8d", "jmp     loc_75AF"], ["mov~<TAG>,0", "xor~r8d,r8d", "jmp~FOO"]], [1, 0, 62, 0, 0, 5, 0, 1, 12, 16, 0.011287128712871288, ["cmp     byte ptr [f+0B0h], 0", "mov     edx, cs:group_width; width", "lea     rdi, string; \"?\"", "mov     esi, [f+30h]; id", "jz      short loc_7BCC"], ["cmp~[yte ptr [f+0],0", "mov~edx,<TAG>", "lea~rdi,<TAG>", "mov~esi,[f+0]", "jz~FOO"]], [1, 0, 63, 0, 0, 2, 0, 1, 11, 15, 0.0401980198019802, ["cmp     cs:print_group, 0", "jnz     loc_7BA8"], ["cmp~<TAG>,0", "jnz~FOO"]], [3, 0, 68, 1, 1, 7, 0, 2, 9, 15, 0.0, ["mov     rcx, cs:stdout@@GLIBC_2_2_5; stream", "lea     rdi, asc_13472; \"  \"", "mov     edx, 2; n", "mov     esi, 1; size", "call    _fwrite_unlocked", "add     cs:dired_pos, 2", "jmp     loc_74AE"], ["mov~rcx,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "mov~esi,0", "call~FOO", "add~<TAG>,0", "jmp~FOO"]], [4, 0, 69, 2, 2, 17, 1, 3, 8, 15, 0.2117821782178218, ["sub     rsp, 8", "mov     r9d, cs:nlink_width", "lea     rcx, aSS; \"%s %*s \"", "push    rax", "mov     r8, r13", "mov     rdi, p", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "xor     eax, eax", "call    ___sprintf_chk", "mov     rdi, p; s", "call    _strlen", "add     p, rax", "cmp     cs:dired, 0", "pop     r8", "pop     r9", "jnz     loc_78F0"], ["sub~rsp,0", "mov~r9d,<TAG>", "lea~rcx,<TAG>", "push~rax", "mov~r8,r13", "mov~rdi,p", "mov~rdx,0", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~rdi,p", "call~FOO", "add~p,rax", "cmp~<TAG>,0", "pop~r8", "pop~r9", "jnz~FOO"]], [0, 0, 35, 0, 1, 11, 0, 2, 17, 10, 0.058910891089108894, ["lea     rdi, current_time; ts", "mov     [rsp+12D8h+var_12D8], when_local", "call    gettime", "mov     rcx, cs:current_time.tv_sec", "mov     rsi, [rsp+12D8h+when_timespec.tv_sec]", "mov     rdi, cs:current_time.tv_nsec", "mov     r9, [rsp+12D8h+when_timespec.tv_nsec]", "mov     rax, [rsp+12D8h+var_12D8]", "lea     r8, [rcx-0F0C2ACh]", "cmp     r8, rsi", "jge     loc_77A8"], ["lea~rdi,<TAG>", "mov~<TAG>,when_local", "call~FOO", "mov~rcx,<TAG>", "mov~rsi,[rsp+0]", "mov~rdi,<TAG>", "mov~r9,[rsp+0]", "mov~rax,<TAG>", "lea~r8,[rcx-0F0C2ACh]+0]", "cmp~r8,rsi", "jge~FOO"]], [0, 0, 40, 0, 0, 4, 0, 1, 16, 11, 0.1011881188118812, ["mov     rcx, cs:current_time.tv_sec", "mov     rsi, [rsp+12D8h+when_timespec.tv_sec]", "cmp     rsi, rcx", "jg      loc_7970"], ["mov~rcx,<TAG>", "mov~rsi,[rsp+0]", "cmp~rsi,rcx", "jg~FOO"]], [0, 0, 37, 0, 0, 4, 0, 1, 18, 10, 0.012673267326732674, ["cmp     edi, r9d", "mov     r10d, edi", "mov     r8d, r9d", "js      short loc_7970"], ["cmp~edi,r9d", "mov~r10d,edi", "mov~r8d,r9d", "js~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 23, -1, 0.0, ["add     rsp, 12A8h", "pop     f", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~f", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 65, 2, 1, 7, 0, 2, 10, 16, 0.034653465346534656, ["mov     rsi, cs:stdout@@GLIBC_2_2_5; stream", "mov     rdi, r12; s", "sub     p, r12", "call    _fputs_unlocked", "add     cs:dired_pos, rbp", "cmp     cs:print_owner, 0", "jnz     loc_7BE0"], ["mov~rsi,<TAG>", "mov~rdi,r12", "sub~p,r12", "call~FOO", "add~<TAG>,rbp", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 67, 0, 0, 4, 2, 1, 9, 14, 0.21891089108910894, ["movzx   eax, cs:print_owner", "or      al, cs:print_group", "or      al, cs:print_author", "jnz     loc_7880"], ["movzx~eax,<TAG>", "or~al,<TAG>", "or~al,<TAG>", "jnz~FOO"]], [1, 0, 66, 0, 0, 2, 0, 1, 10, 13, 0.18514851485148517, ["cmp     cs:print_scontext, 0", "jnz     loc_7880"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 70, 0, 1, 4, 0, 2, 8, 16, 0.0, ["mov     rdi, [f+20h]; i", "lea     rsi, [rsp+12D8h+hbuf]; buf", "call    umaxtostr", "jmp     loc_7466"], ["mov~rdi,[f+0]", "lea~rsi,[rsp+0]", "call~FOO", "jmp~FOO"]], [0, 0, 64, 0, 1, 5, 0, 2, 11, 16, 0.0, ["movzx   edx, byte ptr [f+0B0h]; stat_ok", "mov     edi, [f+2Ch]; u", "mov     esi, cs:owner_width; width", "call    format_user", "jmp     loc_78A6"], ["movzx~edx,[yte ptr [f+0]", "mov~edi,[f+0]", "mov~esi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 58, 0, 0, 2, 0, 1, 12, 14, 0.0505940594059406, ["cmp     cs:print_author, 0", "jnz     loc_7B88"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 59, 0, 1, 2, 0, 2, 13, 15, 0.017524752475247526, ["call    format_user_or_group", "jmp     loc_78B3"], ["call~FOO", "jmp~FOO"]], [4, 0, 99, 0, 0, 12, 0, 1, 1, 22, 0.004900990099009902, ["mov     eax, [rdi+0A0h]", "lea     rdx, filetype_letter; \"?pcdb-lswd\"", "cmp     cs:any_has_acl, 0", "lea     r13, [rsp+12D8h+modebuf]", "mov     r10d, 3F3Fh", "movzx   eax, byte ptr [rdx+rax]", "mov     [rsp+12D8h+modebuf], al", "mov     rax, 3F3F3F3F3F3F3F3Fh", "mov     qword ptr [rsp+12D8h+modebuf+1], rax", "mov     [r13+9], r10w", "mov     [rsp+12D8h+modebuf+0Bh], 0", "jz      loc_7312"], ["mov~eax,[rdi+0]", "lea~rdx,<TAG>", "cmp~<TAG>,0", "lea~r13,[rsp+0]", "mov~r10d,0", "movzx~eax,<TAG>", "mov~[rsp+0],al", "mov~rax,0", "mov~[word ptr [rsp+0],rax", "mov~[r13+0],r10w", "mov~[rsp+0],0", "jz~FOO"]], [2, 0, 101, 1, 0, 13, 1, 1, 0, 23, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, f", "sub     rsp, 12A8h", "mov     rax, fs:28h", "mov     [rsp+12D8h+var_40], rax", "xor     eax, eax", "cmp     byte ptr [f+0B0h], 0", "jz      loc_7688"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,f", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~[yte ptr [f+0],0", "jz~FOO"]], [1, 0, 56, 0, 0, 3, 0, 1, 13, 13, 0.05336633663366337, ["cmp     cs:print_scontext, 0", "mov     rbp, r12", "jz      loc_74D4"], ["cmp~<TAG>,0", "mov~rbp,r12", "jz~FOO"]], [0, 0, 57, 0, 1, 5, 0, 2, 13, 14, 0.0, ["movzx   edx, byte ptr [f+0B0h]; stat_ok", "mov     edi, [f+2Ch]; u", "mov     esi, cs:author_width; width", "call    format_user", "jmp     loc_78C0"], ["movzx~edx,[yte ptr [f+0]", "mov~edi,[f+0]", "mov~esi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 97, 0, 0, 2, 0, 1, 2, 21, 0.01925742574257426, ["cmp     byte ptr [f+0B2h], 0", "jz      loc_7317"], ["cmp~[yte ptr [f+0],0", "jz~FOO"]], [1, 0, 99, 0, 1, 6, 0, 2, 1, 22, 0.004900990099009902, ["lea     r13, [rsp+12D8h+modebuf]", "lea     f, [f+10h]; statp", "mov     rsi, r13; str", "call    filemodestring", "cmp     cs:any_has_acl, 0", "jnz     loc_76CE"], ["lea~r13,[rsp+0]", "lea~f,[f+0]", "mov~rsi,r13", "call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 54, 0, 0, 2, 0, 1, 11, 12, 0.24594059405940596, ["cmp     byte ptr [f+0B0h], 0", "jz      loc_7740"], ["cmp~[yte ptr [f+0],0", "jz~FOO"]], [0, 0, 55, 0, 1, 5, 1, 2, 14, 13, 0.0, ["mov     rdi, [f+0A8h]; name", "mov     edx, cs:scontext_width; width", "xor     esi, esi; id", "call    format_user_or_group", "jmp     loc_74D4"], ["mov~rdi,[f+0]", "mov~edx,<TAG>", "xor~esi,esi", "call~FOO", "jmp~FOO"]], [2, 0, 95, 0, 0, 4, 0, 1, 3, 20, 0.01410891089108911, ["mov     eax, cs:time_type_0", "mov     [rsp+12D8h+modebuf+0Ah], 2Bh ; '+'", "cmp     eax, 1", "jnz     loc_7326"], ["mov~eax,<TAG>", "mov~[rsp+0],0", "cmp~eax,0", "jnz~FOO"]], [2, 0, 52, 0, 0, 4, 1, 1, 12, 11, 0.20940594059405943, ["mov     eax, [f+28h]", "and     eax, 0B000h", "cmp     eax, 2000h", "jz      loc_7A80"], ["mov~eax,[f+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 88, 0, 0, 6, 0, 1, 4, 19, 0.060990099009900996, ["cmp     cs:print_inode, 0", "mov     rax, [f+80h]", "mov     rdx, [f+78h]", "mov     [rsp+12D8h+when_timespec.tv_nsec], rax", "mov     [rsp+12D8h+when_timespec.tv_sec], rdx", "jnz     loc_7354"], ["cmp~<TAG>,0", "mov~rax,[f+0]", "mov~rdx,[f+0]", "mov~[rsp+0],rax", "mov~[rsp+0],rdx", "jnz~FOO"]], [1, 0, 95, 0, 0, 3, 0, 1, 3, 20, 0.03292079207920792, ["mov     eax, cs:time_type_0", "cmp     eax, 1", "jz      loc_76EF"], ["mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 96, 0, 0, 1, 0, 0, 2, 21, 0.009554455445544556, ["mov     [rsp+12D8h+modebuf+0Ah], 0"], ["mov~[rsp+0],0"]], [1, 0, 50, 0, 1, 7, 0, 1, 13, 13, 0.0006930693069306931, ["mov     rdi, [f+40h]; n", "mov     r8, cs:file_output_block_size; to_block_size", "lea     rsi, [rsp+12D8h+hbuf]; buf", "mov     edx, cs:human_output_opts; opts", "mov     ecx, 1; from_block_size", "call    human_readable", "mov     r14, rax"], ["mov~rdi,[f+0]", "mov~r8,<TAG>", "lea~rsi,[rsp+0]", "mov~edx,<TAG>", "mov~ecx,0", "call~FOO", "mov~r14,rax"]], [0, 0, 82, 0, 0, 3, 0, 1, 5, 18, 0.10554455445544556, ["lea     r12, [rsp+12D8h+buf]", "mov     rbp, p", "jmp     loc_73CC"], ["lea~r12,[rsp+0]", "mov~rbp,p", "jmp~FOO"]], [1, 0, 88, 0, 0, 2, 0, 1, 6, 19, 0.034851485148514855, ["cmp     cs:print_inode, 0", "jz      loc_7711"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 93, 0, 0, 1, 0, 0, 4, 21, 0.0034653465346534654, ["jb      loc_7728"], ["jb~FOO"]], [0, 0, 49, 1, 1, 7, 2, 2, 13, 12, 0.03821782178217822, ["mov     r13d, cs:file_size_width", "xor     esi, esi; flags", "mov     rdi, size; string", "call    gnu_mbswidth", "sub     r13d, eax", "test    r13d, r13d", "jle     short loc_7554"], ["mov~r13d,<TAG>", "xor~esi,esi", "mov~rdi,size", "call~FOO", "sub~r13d,eax", "test~r13d,r13d", "jle~FOO"]], [0, 0, 50, 0, 0, 2, 0, 1, 12, 13, 0.032574257425742575, ["lea     r14, string; \"?\"", "jmp     loc_7517"], ["lea~r14,<TAG>", "jmp~FOO"]], [6, 2, 43, 2, 3, 44, 7, 4, 13, 10, 0.20435643564356437, ["mov     edx, cs:major_device_number_width", "mov     eax, cs:minor_device_number_width", "lea     rsi, [rsp+12D8h+hbuf]; buf", "mov     r13d, cs:file_size_width", "lea     eax, [rdx+rax+2]", "sub     r13d, eax", "mov     rax, [f+38h]", "movzx   edx, al", "shr     rax, 0Ch", "mov     rdi, rax", "xor     dil, dil", "or      edi, edx; i", "call    umaxtostr", "mov     r15, rax", "mov     rax, [f+38h]", "lea     rsi, [rsp+12D8h+hbuf_0]; buf", "mov     r14d, cs:minor_device_number_width", "mov     rdi, rax", "shr     rax, 20h", "shr     rdi, 8", "mov     edx, edi", "mov     rdi, rax", "and     edx, 0FFFh", "and     edi, 0FFFFF000h", "or      edi, edx; i", "call    umaxtostr", "test    r13d, r13d", "mov     r8d, 0", "push    r15", "cmovns  r8d, r13d", "add     r8d, cs:major_device_number_width", "push    r14", "lea     rcx, unk_13475", "mov     r9, rax", "mov     esi, 1", "mov     rdi, p", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "xor     eax, eax", "call    ___sprintf_chk", "movsxd  rax, cs:file_size_width", "pop     rsi", "pop     rdi", "lea     blanks_width, [p+rax+1]", "jmp     loc_7571"], ["mov~edx,<TAG>", "mov~eax,<TAG>", "lea~rsi,[rsp+0]", "mov~r13d,<TAG>", "lea~eax,[rdx+0]", "sub~r13d,eax", "mov~rax,[f+0]", "movzx~edx,al", "shr~rax,0", "mov~rdi,rax", "xor~dil,dil", "or~edi,edx", "call~FOO", "mov~r15,rax", "mov~rax,[f+0]", "lea~rsi,[rsp+0]", "mov~r14d,<TAG>", "mov~rdi,rax", "shr~rax,<STR>", "shr~rdi,0", "mov~edx,edi", "mov~rdi,rax", "and~edx,<STR>", "and~edi,0", "or~edi,edx", "call~FOO", "test~r13d,r13d", "mov~r8d,0", "push~r15", "cmovns~r8d,r13d", "add~r8d,<TAG>", "push~r14", "lea~rcx,<TAG>", "mov~r9,rax", "mov~esi,0", "mov~rdi,p", "mov~rdx,0", "xor~eax,eax", "call~FOO", "movsxd~rax,<TAG>", "pop~rsi", "pop~rdi", "lea~blanks_width,[p+0]", "jmp~FOO"]], [0, 0, 89, 0, 0, 5, 0, 1, 5, 20, 0.009504950495049506, ["mov     rax, [f+70h]", "mov     rdx, [f+68h]", "mov     [rsp+12D8h+when_timespec.tv_nsec], rax", "mov     [rsp+12D8h+when_timespec.tv_sec], rdx", "jmp     loc_7347"], ["mov~rax,[f+0]", "mov~rdx,[f+0]", "mov~[rsp+0],rax", "mov~[rsp+0],rdx", "jmp~FOO"]], [0, 0, 48, 0, 0, 5, 0, 0, 14, 14, 0.0100990099009901, ["lea     edx, [pad-1]", "mov     rax, rdx", "lea     rcx, [p+rdx+1]", "mov     rdx, p", "nop"], ["lea~edx,[pad-1]+0]", "mov~rax,rdx", "lea~rcx,[p+0]", "mov~rdx,p", "nop"]], [0, 0, 89, 0, 0, 4, 0, 0, 6, 20, 0.008811881188118813, ["mov     rax, [f+60h]", "mov     rdx, [f+58h]", "mov     [rsp+12D8h+when_timespec.tv_nsec], rax", "mov     [rsp+12D8h+when_timespec.tv_sec], rdx"], ["mov~rax,[f+0]", "mov~rdx,[f+0]", "mov~[rsp+0],rax", "mov~[rsp+0],rdx"]], [0, 0, 39, 0, 0, 3, 0, 1, 17, 10, 0.03504950495049506, ["mov     rdi, cs:current_time.tv_nsec", "mov     r9, [rsp+12D8h+when_timespec.tv_nsec]; ns", "jge     loc_7940"], ["mov~rdi,<TAG>", "mov~r9,[rsp+0]", "jge~FOO"]], [1, 1, 48, 1, 0, 4, 0, 1, 15, 13, 0.009702970297029703, ["add     p, 1", "mov     byte ptr [p-1], 20h ; ' '", "cmp     p, rcx", "jnz     short loc_7540"], ["add~p,0", "mov~[yte ptr [p-1]+0],<STR>", "cmp~p,rcx", "jnz~FOO"]], [0, 0, 46, 0, 0, 2, 0, 0, 16, 12, 0.00910891089108911, ["cdqe", "lea     rbp, [rbp+rax+1]"], ["cdqe~", "lea~rbp,[rbp+0]"]], [1, 0, 29, 1, 0, 4, 1, 1, 19, 9, 0.009009900990099011, ["sub     rcx, 0F0C2ACh", "xor     edx, edx", "cmp     rcx, rsi", "jge     loc_77C0"], ["sub~rcx,0", "xor~edx,edx", "cmp~rcx,rsi", "jge~FOO"]], [0, 0, 86, 0, 0, 4, 1, 1, 5, 21, 0.005148514851485149, ["mov     rdi, [f+18h]; i", "lea     r9, string; \"?\"", "test    rdi, rdi", "jnz     loc_7B70"], ["mov~rdi,[f+0]", "lea~r9,<TAG>", "test~rdi,rdi", "jnz~FOO"]], [0, 0, 46, 0, 0, 2, 0, 1, 15, 12, 0.0, ["mov     rbp, p", "jmp     loc_7554"], ["mov~rbp,p", "jmp~FOO"]], [1, 0, 46, 1, 0, 6, 1, 1, 14, 11, 0.040594059405940595, ["add     size, 1", "movzx   eax, byte ptr [size-1]", "lea     r13, [p+1]", "test    al, al", "mov     [p-1], al", "jnz     loc_7760"], ["add~size,0", "movzx~eax,[yte ptr [size-1]+0]", "lea~r13,[p+0]", "test~al,al", "mov~[p-1]+0],al", "jnz~FOO"]], [1, 0, 28, 1, 0, 4, 0, 1, 20, 9, 0.0027722772277227726, ["mov     edx, r8d", "sub     edx, r10d", "shr     edx, 1Fh", "jmp     loc_77C0"], ["mov~edx,r8d", "sub~edx,r10d", "shr~edx,0", "jmp~FOO"]], [0, 0, 29, 0, 0, 3, 0, 1, 20, 10, 0.0005940594059405942, ["mov     r8d, r9d", "mov     r10d, edi", "jmp     short loc_795D"], ["mov~r8d,r9d", "mov~r10d,edi", "jmp~FOO"]], [0, 1, 43, 0, 0, 1, 0, 0, 15, 10, 0.03405940594059406, ["mov     byte ptr [rbp+0], 20h ; ' '"], ["mov~[yte ptr [rbp+0],<STR>"]], [0, 0, 85, 0, 1, 4, 0, 2, 6, 21, 0.0, ["lea     rsi, [rsp+12D8h+hbuf]; buf", "call    umaxtostr", "mov     r9, rax", "jmp     loc_7368"], ["lea~rsi,[rsp+0]", "call~FOO", "mov~r9,rax", "jmp~FOO"]], [0, 0, 41, 0, 0, 2, 1, 1, 15, 8, 0.1470132013201321, ["test    dl, dl", "jnz     loc_7770"], ["test~dl,dl", "jnz~FOO"]], [1, 0, 42, 0, 1, 6, 1, 2, 14, 9, 0.2411881188118812, ["lea     rdi, [rsp+12D8h+when_timespec]; timer", "call    _localtime", "test    when_local, when_local", "mov     byte ptr [p+0], 1", "movzx   edx, byte ptr [f+0B0h]", "jz      loc_79E8"], ["lea~rdi,[rsp+0]", "call~FOO", "test~when_local,when_local", "mov~[yte ptr [p+0],0", "movzx~edx,[yte ptr [f+0]", "jz~FOO"]], [1, 1, 84, 0, 1, 9, 1, 1, 6, 20, 0.019207920792079208, ["lea     r12, [rsp+12D8h+buf]", "mov     r8d, cs:inode_number_width", "lea     rcx, aS; \"%*s \"", "mov     edx, 0E3Bh", "mov     esi, 1", "xor     eax, eax", "mov     rdi, p", "mov     rbp, p", "call    ___sprintf_chk"], ["lea~r12,[rsp+0]", "mov~r8d,<TAG>", "lea~rcx,<TAG>", "mov~edx,<STR>", "mov~esi,0", "xor~eax,eax", "mov~rdi,p", "mov~rbp,p", "call~FOO"]], [1, 0, 35, 0, 0, 4, 0, 1, 18, 9, 0.013960396039603964, ["lea     r8, [rcx-0F0C2ACh]", "mov     edx, 1", "cmp     r8, rsi", "jl      short loc_77C0"], ["lea~r8,[rcx-0F0C2ACh]+0]", "mov~edx,0", "cmp~r8,rsi", "jl~FOO"]], [2, 0, 84, 1, 0, 7, 2, 1, 7, 19, 0.025940594059405943, ["mov     eax, [rbp+0]", "add     rbp, 4", "lea     edx, [rax-1010101h]", "not     eax", "and     edx, eax", "and     edx, 80808080h", "jz      short loc_7395"], ["mov~eax,[rbp+0]", "add~rbp,0", "lea~edx,[rax-1010101h]+0]", "not~eax", "and~edx,eax", "and~edx,0", "jz~FOO"]], [0, 0, 34, 0, 0, 3, 1, 1, 18, 9, 0.02554455445544552, ["xor     edx, edx", "cmp     rsi, six_months_ago", "jl      short loc_77C0"], ["xor~edx,edx", "cmp~rsi,six_months_ago", "jl~FOO"]], [0, 0, 33, 0, 0, 2, 0, 1, 19, 10, 0.007326732673267327, ["cmp     edi, r9d", "js      loc_79AC"], ["cmp~edi,r9d", "js~FOO"]], [1, 0, 31, 0, 0, 3, 0, 1, 18, 9, 0.0273267326732673, ["cmp     rsi, rcx", "mov     edx, 1", "jl      loc_77C0"], ["cmp~rsi,rcx", "mov~edx,0", "jl~FOO"]], [0, 0, 28, 0, 0, 1, 0, 0, 20, 9, 0.0013861386138613863, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 30, 0, 0, 2, 0, 1, 19, 9, 0.007227722772277228, ["mov     edx, 0", "jg      loc_77C0"], ["mov~edx,0", "jg~FOO"]], [3, 0, 82, 1, 0, 9, 1, 0, 8, 18, 0.032475247524752476, ["mov     eax, edx", "shr     eax, 10h", "test    edx, 8080h", "cmovz   edx, eax", "lea     rax, [rbp+2]", "cmovz   rbp, rax", "mov     eax, edx", "add     al, dl", "sbb     rbp, 3"], ["mov~eax,edx", "shr~eax,0", "test~edx,0", "cmovz~edx,eax", "lea~rax,[rbp+0]", "cmovz~rbp,rax", "mov~eax,edx", "add~al,dl", "sbb~rbp,0"]], [1, 0, 25, 0, 0, 2, 0, 1, 20, 7, 0.03405940594059406, ["cmp     byte ptr [p+0], 0", "jz      loc_77EA"], ["cmp~[yte ptr [p+0],0", "jz~FOO"]], [1, 0, 27, 0, 1, 9, 2, 2, 19, 8, 0.058712871287128716, ["lea     rcx, long_time_format", "xor     r8d, r8d; ut", "mov     esi, 3E9h; maxsize", "mov     rdi, p; s", "mov     recent, [rcx+recent*8]; format", "mov     rcx, rax; tp", "call    nstrftime", "test    s, s", "jz      loc_79D0"], ["lea~rcx,<TAG>", "xor~r8d,r8d", "mov~esi,0", "mov~rdi,p", "mov~recent,<TAG>", "mov~rcx,rax", "call~FOO", "test~s,s", "jz~FOO"]], [0, 0, 23, 0, 0, 2, 0, 0, 21, 9, 0.01504950495049505, ["movzx   edx, byte ptr [f+0B0h]", "nop     word ptr [rax+rax+00h]"], ["movzx~edx,[yte ptr [f+0]", "nop~[ord ptr [rax+0]"]], [0, 0, 14, 1, 0, 1, 0, 0, 20, 7, 0.012673267326732674, ["add     p, s"], ["add~p,s"]]], "func_feature": [37, 50, 115, 3, 102, 158, 1, 499, 0.04124, 40, 25], "succs": [[26, 15], [0], [0, 1], [12, 7], [3, 13], [24, 10], [5], [5], [52], [8, 52], [24, 11], [23], [17, 37], [12, 7], [18, 14], [14], [32], [16, 29], [25], [], [75, 19], [], [21, 45], [27, 31], [23], [26, 28], [25], [22, 30], [33], [32], [22], [35, 22], [37, 7], [41, 49], [33, 2], [36, 22], [22], [7], [9, 52], [51, 38], [47], [40, 47], [92, 94], [42, 76], [42, 79], [], [50, 39], [48, 46], [59, 46], [41], [39], [56, 55], [51], [57, 65], [58, 53], [59, 60], [55], [64, 61], [57, 65], [62, 71], [59], [69, 63], [72, 66], [80, 67], [69, 63], [64], [70], [34], [80, 67], [73, 20], [74, 82], [70], [88], [68], [77], [68], [90, 44], [77, 78], [82], [99, 83], [89, 86], [82], [81, 85], [99], [83], [88], [89], [43, 13], [4, 87], [91], [99, 92], [97, 91], [99, 93], [94, 95], [96, 99], [99], [99, 84], [34], [100, 6], [98, 101], [4], [6]], "fname": "print_long_format", "n_num": 102}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 10, 1, 0, 6, 2, 1, 0, 0, 0.014328808446455506, ["xor     edx, edx", "mov     rax, rbx", "div     r13", "test    rdx, rdx", "mov     rbp, rdx", "jz      short loc_7CD8"], ["xor~edx,edx", "mov~rax,rbx", "div~,r13", "test~rdx,rdx", "mov~rbp,rdx", "jz~FOO"]], [1, 0, 10, 0, 0, 4, 1, 1, 3, 5, 0.006787330316742082, ["xor     r15d, r15d", "mov     ebx, 1", "mov     rcx, [rsp+68h+var_60]", "jmp     short loc_7D32"], ["xor~r15d,r15d", "mov~ebx,0", "mov~rcx,[rsp+0]", "jmp~FOO"]], [1, 0, 10, 1, 2, 12, 0, 2, 6, 2, 0.014328808446455506, ["mov     rax, cs:sorted_file", "mov     r12, [rax+rbx*8]", "add     rbx, 1", "mov     rdi, r12; f", "call    print_file_name_and_frills", "mov     rdi, r12; f", "call    length_of_file_name_and_frills", "cmp     rbx, cs:cwd_n_used", "mov     rcx, rax", "mov     rax, [r14+10h]", "mov     r12, [rax+rbp*8]", "jnb     loc_8020"], ["mov~rax,<TAG>", "mov~r12,<TAG>", "add~rbx,0", "mov~rdi,r12", "call~FOO", "mov~rdi,r12", "call~FOO", "cmp~rbx,<TAG>", "mov~rcx,rax", "mov~rax,[r14+0]", "mov~r12,<TAG>", "jnb~FOO"]], [2, 0, 5, 2, 0, 4, 0, 1, 6, -1, 0.004147812971342383, ["add     cs:dired_pos, 1", "add     i, 1", "cmp     cs:cwd_n_used, i", "ja      short loc_7E40"], ["add~<TAG>,0", "add~i,0", "cmp~<TAG>,i", "ja~FOO"]], [1, 0, 5, 0, 1, 3, 0, 2, 5, -1, 0.001885369532428356, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     loc_7E70"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [1, 0, 5, 0, 0, 3, 0, 0, 5, -1, 0.001885369532428356, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [0, 0, 0, 0, 0, 0, 0, 0, 5, -1, 0.0, [], []], [2, 0, 1, 1, 0, 9, 0, 1, 4, 0, 0.009426847662141781, ["add     rsp, 38h", "mov     esi, 0Ah; int", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "jmp     ___overflow"], ["add~rsp,0", "mov~esi,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "jmp~FOO"]], [0, 0, 16, 0, 1, 7, 1, 1, 3, 3, 0.013574660633484163, ["mov     rax, cs:sorted_file", "xor     ebx, ebx", "mov     rbp, [rax]", "mov     rdi, rbp; f", "call    length_of_file_name_and_frills", "mov     r12, rax", "nop     dword ptr [rax]"], ["mov~rax,<TAG>", "xor~ebx,ebx", "mov~rbp,<TAG>", "mov~rdi,rbp", "call~FOO", "mov~r12,rax", "nop~<TAG>"]], [1, 0, 17, 0, 0, 2, 0, 1, 2, 2, 0.011312217194570135, ["cmp     cs:cwd_n_used, 0; jumptable 0000000000007C6F case 4", "jz      loc_8020"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 8, 1, 0, 4, 0, 1, 8, -1, 0.008295625942684766, ["add     [rsp+68h+var_40], 1", "mov     rax, [rsp+68h+var_40]", "cmp     [rsp+68h+var_50], rax", "jnz     loc_7F60"], ["add~[rsp+0],0", "mov~rax,[rsp+0]", "cmp~[rsp+0],rax", "jnz~FOO"]], [1, 0, 8, 0, 1, 3, 0, 2, 7, -1, 0.003393665158371041, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     loc_7FF8"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [1, 0, 8, 0, 0, 3, 0, 0, 7, -1, 0.003393665158371041, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [1, 0, 5, 0, 1, 3, 0, 2, 5, -1, 0.001885369532428356, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     loc_7EE0"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [0, 0, 5, 0, 1, 7, 0, 1, 4, -1, 0.007541478129713424, ["mov     rax, cs:sorted_file", "mov     rdi, [rax+i*8]; f", "call    print_file_name_and_frills", "mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_8080"], ["mov~rax,<TAG>", "mov~rdi,<TAG>", "call~FOO", "mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [0, 0, 16, 0, 0, 4, 0, 0, 10, 4, 0.032805429864253395, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_80D1"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [1, 0, 16, 0, 1, 3, 0, 2, 9, 5, 0.013574660633484163, ["mov     esi, 2Ch ; ','; int", "call    ___overflow", "jmp     loc_7DFE"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [1, 0, 16, 0, 0, 3, 0, 0, 9, 5, 0.013574660633484163, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 2Ch ; ','"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [0, 0, 5, 0, 1, 7, 0, 1, 4, -1, 0.007541478129713424, ["mov     rax, cs:sorted_file", "mov     rdi, [rax+i*8]; f", "call    print_long_format", "mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_8090"], ["mov~rax,<TAG>", "mov~rdi,<TAG>", "call~FOO", "mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 7, -1, 0.0, ["add     rsp, 38h", "pop     i", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~i", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 8, 0, 0, 4, 0, 0, 6, -1, 0.011689291101055807, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_80A0"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [1, 0, 8, 3, 2, 15, 0, 2, 5, -1, 0.016591251885369532, ["mov     rax, cs:sorted_file", "mov     rbx, [rax+r13]", "mov     rdi, rbx; f", "call    length_of_file_name_and_frills", "mov     rsi, [r15+10h]", "mov     [rsp+68h+var_58], rax", "mov     rdi, rbx; f", "mov     rax, [rsi+rbp]", "add     rbp, 8", "mov     [rsp+68h+var_60], rax", "call    print_file_name_and_frills", "add     r12, [rsp+68h+var_50]", "add     r13, [rsp+68h+var_48]", "cmp     r12, cs:cwd_n_used", "jb      short loc_7F78"], ["mov~rax,<TAG>", "mov~rbx,<TAG>", "mov~rdi,rbx", "call~FOO", "mov~rsi,[r15+0]", "mov~[rsp+0],rax", "mov~rdi,rbx", "mov~rax,<TAG>", "add~rbp,0", "mov~[rsp+0],rax", "call~FOO", "add~r12,[rsp+0]", "add~r13,[rsp+0]", "cmp~r12,<TAG>", "jb~FOO"]], [0, 0, 8, 0, 0, 5, 2, 1, 4, -1, 0.015082956259426848, ["mov     r12, [rsp+68h+var_40]", "xor     ebp, ebp", "xor     r14d, r14d", "lea     r13, ds:0[r12*8]", "jmp     short loc_7F94"], ["mov~r12,[rsp+0]", "xor~ebp,ebp", "xor~r14d,r14d", "lea~r13,<TAG>", "jmp~FOO"]], [0, 0, 8, 1, 1, 7, 0, 1, 6, -1, 0.0, ["mov     rbx, [rsp+68h+var_60]", "mov     rax, [rsp+68h+var_58]", "add     rbx, r14", "lea     rdi, [rax+r14]; from", "mov     rsi, rbx; to", "mov     r14, rbx", "call    indent"], ["mov~rbx,[rsp+0]", "mov~rax,[rsp+0]", "add~rbx,r14", "lea~rdi,<TAG>", "mov~rsi,rbx", "mov~r14,rbx", "call~FOO"]], [1, 0, 16, 1, 1, 5, 0, 1, 4, 2, 0.05995475113122172, ["mov     rdi, rbp; f", "add     rbx, 1", "call    print_file_name_and_frills", "cmp     rbx, cs:cwd_n_used", "jnb     loc_8020"], ["mov~rdi,rbp", "add~rbx,0", "call~FOO", "cmp~rbx,<TAG>", "jnb~FOO"]], [0, 0, 16, 0, 0, 4, 0, 1, 11, 3, 0.013574660633484163, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     [rax], r13b", "jmp     loc_7D88"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,r13b", "jmp~FOO"]], [0, 0, 16, 1, 0, 2, 0, 1, 6, 3, 0.001885369532428356, ["add     r12, rax", "jmp     loc_7D88"], ["add~r12,rax", "jmp~FOO"]], [0, 0, 16, 0, 1, 3, 0, 2, 11, 3, 0.013574660633484163, ["mov     esi, r14d; int", "call    ___overflow", "jmp     loc_7D88"], ["mov~esi,r14d", "call~FOO", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 38h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 7, 0, 0, 3, 1, 1, 2, -1, 0.0047762694821518355, ["xor     ebx, ebx; jumptable 0000000000007C6F case 0", "cmp     cs:cwd_n_used, 0", "jz      loc_800E"], ["xor~ebx,ebx", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 7, 0, 0, 3, 1, 1, 2, -1, 0.0047762694821518355, ["xor     ebx, ebx; jumptable 0000000000007C6F case 1", "cmp     cs:cwd_n_used, 0", "jz      loc_800E"], ["xor~ebx,ebx", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 9, 2, 1, 16, 3, 2, 2, -1, 0.006284565108094521, ["mov     edi, 1; jumptable 0000000000007C6F case 2", "xor     r14d, r14d", "call    calculate_columns", "lea     rdx, [rax+rax*2]", "mov     rcx, rax", "mov     rax, cs:column_info_0", "lea     r15, [rax+rdx*8-18h]", "mov     rax, cs:cwd_n_used", "xor     edx, edx", "div     rcx", "test    rdx, rdx", "setnz   r14b", "add     r14, rax", "mov     rax, r14", "mov     [rsp+68h+var_50], r14", "jz      loc_800E"], ["mov~edi,0", "xor~r14d,r14d", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~rax,<TAG>", "lea~r15,[rax+0]", "mov~rax,<TAG>", "xor~edx,edx", "div~,rcx", "test~rdx,rdx", "setnz~r14b", "add~r14,rax", "mov~rax,r14", "mov~[rsp+0],r14", "jz~FOO"]], [1, 0, 50, 2, 0, 12, 0, 1, 1, 3, 0.018853695324283562, ["push    r15", "push    r14", "lea     rdx, off_12E04", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 38h", "mov     eax, cs:format_0", "movsxd  rax, dword ptr [rdx+rax*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["push~r15", "push~r14", "lea~rdx,<TAG>", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~eax,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [0, 0, 5, 0, 0, 1, 0, 0, 3, -1, 0.005656108597285068, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 10, 1, 1, 6, 0, 2, 5, 3, 0.004901960784313725, ["add     r12, r15", "lea     rdi, [rcx+r15]; from", "mov     rsi, r12; to", "mov     r15, r12", "call    indent", "jmp     short loc_7CFB"], ["add~r12,r15", "lea~rdi,<TAG>", "mov~rsi,r12", "mov~r15,r12", "call~FOO", "jmp~FOO"]], [1, 0, 10, 0, 1, 4, 1, 2, 6, 3, 0.0013197586726998493, ["mov     esi, 0Ah; int", "xor     r15d, r15d", "call    ___overflow", "jmp     loc_7CFB"], ["mov~esi,0", "xor~r15d,r15d", "call~FOO", "jmp~FOO"]], [1, 0, 10, 0, 0, 4, 1, 0, 6, 3, 0.0013197586726998493, ["lea     rdx, [rax+1]", "xor     r15d, r15d", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "xor~r15d,r15d", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [0, 0, 3, 0, 0, 4, 0, 0, 3, 1, 0.027149321266968326, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_80DE"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [1, 0, 11, 0, 3, 17, 1, 3, 2, 2, 0.006787330316742082, ["xor     edi, edi; jumptable 0000000000007C6F case 3", "call    calculate_columns", "lea     rdx, [rax+rax*2]", "mov     r13, rax", "mov     rax, cs:column_info_0", "lea     r14, [rax+rdx*8-18h]", "mov     rax, cs:sorted_file", "mov     rbx, [rax]", "mov     rdi, rbx; f", "call    length_of_file_name_and_frills", "mov     [rsp+68h+var_60], rax", "mov     rax, [r14+10h]", "mov     rdi, rbx; f", "mov     r12, [rax]", "call    print_file_name_and_frills", "cmp     cs:cwd_n_used, 1", "jbe     loc_8020"], ["xor~edi,edi", "call~FOO", "lea~rdx,<TAG>", "mov~r13,rax", "mov~rax,<TAG>", "lea~r14,[rax+0]", "mov~rax,<TAG>", "mov~rbx,<TAG>", "mov~rdi,rbx", "call~FOO", "mov~[rsp+0],rax", "mov~rax,[r14+0]", "mov~rdi,rbx", "mov~r12,<TAG>", "call~FOO", "cmp~<TAG>,0", "jbe~FOO"]], [0, 0, 16, 0, 1, 6, 1, 2, 5, 4, 0.04034690799396682, ["mov     rax, cs:sorted_file", "mov     rbp, [rax+rbx*8]", "mov     rdi, rbp; f", "call    length_of_file_name_and_frills", "test    rbx, rbx", "jz      loc_8050"], ["mov~rax,<TAG>", "mov~rbp,<TAG>", "mov~rdi,rbp", "call~FOO", "test~rbx,rbx", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 3, -1, 0.005656108597285068, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 10, 0, 0, 4, 0, 0, 5, 4, 0.006033182503770739, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_80B0"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [1, 0, 52, 0, 0, 2, 0, 1, 0, 4, 0.0, ["cmp     cs:format_0, 4; switch 5 cases", "ja      locret_8078; jumptable 0000000000007C6F default case"], ["cmp~<TAG>,0", "ja~FOO"]], [0, 0, 16, 0, 0, 3, 0, 0, 6, 8, 0.032805429864253395, ["lea     r12, [rax+r12+2]", "cmp     r12, cs:line_length", "jb      loc_8060"], ["lea~r12,[rax+0]", "cmp~r12,<TAG>", "jb~FOO"]], [0, 0, 16, 0, 0, 4, 0, 0, 8, 6, 0.032805429864253395, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_80C2"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [2, 0, 0, 1, 0, 11, 0, 0, 4, -1, 0.0, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah", "add     rsp, 38h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 5, 1, 0, 3, 0, 1, 6, -1, 0.004147812971342383, ["add     i, 1", "cmp     cs:cwd_n_used, i", "ja      short loc_7EB0"], ["add~i,0", "cmp~<TAG>,i", "ja~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn; jumptable 0000000000007C6F default case"], ["retn"]], [2, 0, 8, 1, 0, 4, 0, 0, 3, -1, 0.007918552036199095, ["shl     rax, 3", "mov     [rsp+68h+var_40], 0", "mov     [rsp+68h+var_48], rax", "nop     word ptr [rax+rax+00000000h]"], ["shl~rax,0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "nop~[ord ptr [rax+0]"]], [2, 0, 16, 0, 0, 3, 0, 0, 7, 7, 0.013574660633484163, ["mov     r14d, 0Ah", "mov     r13d, 0Ah", "mov     r12, rax"], ["mov~r14d,0", "mov~r13d,0", "mov~r12,rax"]], [1, 0, 5, 0, 0, 3, 0, 0, 5, -1, 0.001885369532428356, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [1, 0, 0, 1, 0, 8, 0, 0, 7, -1, 0.0, ["add     rsp, 38h", "pop     i", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~i", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 2, 16, 0, 0, 3, 0, 1, 7, 7, 0.013574660633484163, ["mov     r14d, 20h ; ' '", "mov     r13d, 20h ; ' '", "jmp     loc_7DDE"], ["mov~r14d,<STR>", "mov~r13d,<STR>", "jmp~FOO"]]], "func_feature": [21, 15, 45, 5, 53, 73, 2, 274, 0.01024, 8, 23], "succs": [[41, 34], [0], [0, 37], [18, 19], [3], [3], [], [6], [24], [8, 37], [28, 22], [10], [10], [46], [50, 13], [25, 27], [15], [15], [4, 5], [], [11, 12], [20, 23], [21], [21], [37, 39], [24], [24], [24], [], [40, 28], [33, 28], [48, 28], [9, 38, 29, 30, 31], [14], [2], [2], [2], [45, 7], [1, 37], [26, 43], [18], [35, 36], [32, 47], [49, 52], [16, 17], [], [51, 14], [], [22], [44], [46], [], [44]], "fname": "print_current_files", "n_num": 53}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 7, 0, 0, 3, 0, 1, 0, 0, 0.19999999999999998, ["mov     rax, [a+58h]", "cmp     [r8+58h], rax", "jg      short loc_8170"], ["mov~rax,[a+0]", "cmp~[r8+0],rax", "jg~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 2, 0.14545454545454545, ["test    cl, cl", "jnz     short loc_8140"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 2, 2, 0.02727272727272727, ["test    dl, dl", "mov     eax, 1", "jz      short loc_8140"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 5, -1, 0.06363636363636363, ["mov     b, [a]; s2", "mov     a, [b]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, -1, 0.12727272727272726, ["mov     rax, [a+60h]", "sub     eax, [r8+60h]", "jnz     short locret_813E"], ["mov~rax,[a+0]", "sub~eax,[r8+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, -1, 0.1909090909090909, ["jl      short loc_8168"], ["jl~FOO"]], [4, 0, 11, 0, 0, 14, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "mov     r8, b", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_8131"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "mov~r8,b", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 10, 0, 0, 2, 1, 1, 1, 1, 0.00909090909090909, ["test    cl, cl", "jnz     short loc_8170"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 5, 8, 0, 12, 15, 0, 36, 0.06364, 0, 1], "succs": [[9, 5], [0, 2], [0, 11], [10], [11, 3], [4, 7], [8, 1], [], [1, 9], [], [], []], "fname": "rev_strcmp_df_atime", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.06363636363636363, ["mov     b, [a]; s2", "mov     a, [b]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, -1, 0.12727272727272726, ["mov     rax, [a+80h]", "sub     eax, [r8+80h]", "jnz     short locret_81BE"], ["mov~rax,[a+0]", "sub~eax,[r8+0]", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 10, 0, 0, 2, 1, 1, 1, 1, 0.00909090909090909, ["test    cl, cl", "jnz     short loc_8200"], ["test~cl,cl", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 2, 1, 0.19999999999999998, ["mov     rax, [a+78h]", "cmp     [r8+78h], rax", "jg      short loc_8200"], ["mov~rax,[a+0]", "cmp~[r8+0],rax", "jg~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 2, 0.14545454545454545, ["test    cl, cl", "jnz     short loc_81C0"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 2, 2, 0.02727272727272727, ["test    dl, dl", "mov     eax, 1", "jz      short loc_81C0"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, -1, 0.1909090909090909, ["jl      short loc_81F0"], ["jl~FOO"]], [4, 0, 11, 0, 0, 14, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "mov     r8, b", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_81B1"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "mov~r8,b", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 5, 8, 0, 12, 15, 0, 36, 0.06364, 0, 1], "succs": [[10], [0, 11], [], [2, 5], [2, 7], [4, 6], [11, 4], [9, 1], [3, 5], [], [], []], "fname": "rev_strcmp_df_ctime", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 0, 1, 0, 4, 0, 0, 0, 0, 0.0, ["add     rsp, 28h", "pop     rbx", "pop     u", "retn"], ["add~rsp,0", "pop~rbx", "pop~u", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 3, 1, 0.21428571428571427, ["mov     rsi, [rsp+38h+var_20]", "xor     rsi, fs:28h", "jnz     short loc_82CC"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 3, 0, 1, 6, 2, 2, 2, 2, 0.10714285714285714, ["xor     esi, esi; flags", "call    gnu_mbswidth", "mov     edx, 0", "test    eax, eax", "cmovs   eax, edx", "jmp     short loc_828E"], ["xor~esi,esi", "call~FOO", "mov~edx,0", "test~eax,eax", "cmovs~eax,edx", "jmp~FOO"]], [0, 0, 7, 0, 1, 4, 1, 2, 1, 3, 0.07142857142857142, ["call    getuser", "test    rax, rax", "mov     rdi, rax; string", "jz      loc_8231"], ["call~FOO", "test~rax,rax", "mov~rdi,rax", "jz~FOO"]], [2, 0, 5, 1, 0, 7, 2, 1, 2, 3, 0.10714285714285714, ["mov     ecx, [rax]", "add     rax, 4", "lea     edx, [rcx-1010101h]", "not     ecx", "and     edx, ecx", "and     edx, 80808080h", "jz      short loc_8255"], ["mov~ecx,<TAG>", "add~rax,0", "lea~edx,[rcx-1010101h]+0]", "not~ecx", "and~edx,ecx", "and~edx,0", "jz~FOO"]], [2, 0, 5, 0, 1, 9, 1, 1, 1, 4, 0.07142857142857142, ["mov     rbx, rsp", "lea     rcx, aLu_0+1; \"%lu\"", "mov     r8d, ebp", "mov     edx, 15h", "mov     esi, 1", "mov     rdi, rbx; uid", "xor     eax, eax", "call    ___sprintf_chk", "mov     rax, rbx"], ["mov~rbx,rsp", "lea~rcx,<TAG>", "mov~r8d,ebp", "mov~edx,0", "mov~esi,0", "mov~rdi,rbx", "xor~eax,eax", "call~FOO", "mov~rax,rbx"]], [3, 0, 3, 2, 0, 10, 1, 0, 3, 2, 0.10714285714285714, ["mov     ecx, edx", "shr     ecx, 10h", "test    edx, 8080h", "cmovz   edx, ecx", "lea     rcx, [rax+2]", "mov     esi, edx", "cmovz   rax, rcx", "add     sil, dl", "sbb     rax, 3", "sub     eax, ebx"], ["mov~ecx,edx", "shr~ecx,0", "test~edx,0", "cmovz~edx,ecx", "lea~rcx,[rax+0]", "mov~esi,edx", "cmovz~rax,rcx", "add~sil,dl", "sbb~rax,0", "sub~eax,ebx"]], [2, 0, 8, 1, 0, 9, 1, 1, 0, 4, 0.0, ["push    rbp", "push    rbx", "mov     ebp, edi", "sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+38h+var_20], rax", "xor     eax, eax", "cmp     cs:numeric_ids, 0", "jz      short loc_82A8"], ["push~rbp", "push~rbx", "mov~ebp,edi", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~<TAG>,0", "jz~FOO"]]], "func_feature": [4, 9, 9, 1, 9, 11, 2, 53, 0.0754, 3, 5], "succs": [[], [0, 2], [], [1], [3, 6], [5, 7], [5], [1], [4, 6]], "fname": "format_user_width", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 100, 0, 0, 2, 1, 1, 0, 0, 0.051617944475087336, ["test    dl, dl", "jz      short loc_881A"], ["test~dl,dl", "jz~FOO"]], [0, 0, 103, 0, 0, 2, 0, 0, 9, -1, 0.02224673653245082, ["cmp     r9, rdi", "jnb     short loc_87FE"], ["cmp~r9,rdi", "jnb~FOO"]], [1, 0, 102, 0, 0, 2, 0, 1, 10, -1, 0.0018845375988233131, ["cmp     byte ptr [rdi-1], 2Fh ; '/'", "jz      short loc_87FE"], ["cmp~[yte ptr [rdi-1]+0],0", "jz~FOO"]], [0, 0, 108, 0, 0, 3, 1, 1, 7, -1, 0.018063982349696635, ["test    r10b, r10b", "mov     rax, absolute_name", "jz      loc_87FE"], ["test~r10b,r10b", "mov~rax,absolute_name", "jz~FOO"]], [1, 0, 101, 0, 0, 2, 0, 0, 11, -1, 0.0, ["mov     byte ptr [rax], 2Fh ; '/'", "lea     rax, [r8+2]"], ["mov~<TAG>,0", "lea~rax,[r8+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 1, 144, 1, 0, 6, 0, 0, 2, 1, 0.0002757859900717044, ["mov     edx, 170h", "mov     byte ptr [rbp+src], r8b", "mov     [rbp+dirname], dirname_0", "mov     rax, rdx", "mul     rsi", "jo      loc_8E00"], ["mov~edx,<STR>", "mov~[yte ptr [rbp+0],r8b", "mov~[rbp+0],dirname_0", "mov~rax,rdx", "mul~,rsi", "jo~FOO"]], [1, 0, 95, 0, 0, 2, 0, 0, 6, -1, 0.021603235888950176, ["cmp     ecx, 4", "jbe     short loc_8458"], ["cmp~ecx,0", "jbe~FOO"]], [1, 0, 96, 0, 0, 2, 0, 0, 5, -1, 0.1674327388613103, ["cmp     ecx, 3", "jb      short loc_8461"], ["cmp~ecx,0", "jb~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 8, -1, 0.01323772752344181, ["mov     name, [rbp+var_38]", "xor     name, fs:28h", "mov     rax, r13", "jnz     loc_8DFB"], ["mov~name,[rbp+0]", "xor~name,<TAG>", "mov~rax,r13", "jnz~FOO"]], [1, 0, 5, 0, 2, 11, 3, 3, 7, -1, 0.008963044677330391, ["lea     rsi, aCannotAccessS; \"cannot access %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdx, absolute_name; file", "movzx   edi, r12b; serious", "mov     rsi, rax; message", "call    file_failure", "xor     r13d, r13d", "test    r12b, r12b", "jnz     loc_85F5"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdx,absolute_name", "movzx~edi,r12b", "mov~rsi,rax", "call~FOO", "xor~r13d,r13d", "test~r12b,r12b", "jnz~FOO"]], [2, 0, 3, 0, 2, 10, 2, 3, 11, -1, 0.0006894649751792609, ["lea     rsi, aCannotAccessS; \"cannot access %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, absolute_name; file", "mov     rsi, rax; message", "mov     edi, 1; serious", "call    file_failure", "xor     r13d, r13d", "jmp     loc_85F5"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rdx,absolute_name", "mov~rsi,rax", "mov~edi,0", "call~FOO", "xor~r13d,r13d", "jmp~FOO"]], [1, 0, 3, 1, 1, 4, 0, 1, 7, -1, 0.01395017466446038, ["mov     rdi, name; string", "call    xstrdup", "add     cs:cwd_n_used, 1", "mov     [f], rax"], ["mov~rdi,name", "call~FOO", "add~<TAG>,0", "mov~<TAG>,rax"]], [1, 0, 86, 0, 0, 2, 0, 1, 7, -1, 0.004389593675307961, ["cmp     ecx, 5", "jnz     short loc_8461"], ["cmp~ecx,0", "jnz~FOO"]], [1, 0, 134, 0, 0, 3, 1, 1, 6, -1, 0.008288901146044005, ["xor     r13d, r13d", "cmp     cs:format_needs_type, 0", "jz      loc_85E2"], ["xor~r13d,r13d", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 136, 0, 0, 4, 1, 1, 5, -1, 0.009009009009009009, ["movzx   r10d, cs:print_inode", "test    r10b, r10b", "mov     edx, r10d", "jz      loc_8A01"], ["movzx~r10d,<TAG>", "test~r10b,r10b", "mov~edx,r10d", "jz~FOO"]], [0, 0, 135, 0, 0, 4, 1, 1, 6, -1, 0.0029876815591101304, ["movzx   r10d, cs:print_inode", "test    r10b, r10b", "mov     edx, r10d", "jnz     loc_8690"], ["movzx~r10d,<TAG>", "test~r10b,r10b", "mov~edx,r10d", "jnz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 1, 16, -1, 0.0014708586137157566, ["jmp     loc_85D3"], ["jmp~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 15, -1, 0.0076760433903291046, ["cmp     cs:print_scontext, 0", "jnz     loc_85AD"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 133, 0, 0, 2, 0, 1, 7, -1, 0.012103940675369249, ["cmp     r14d, 6", "jz      loc_865E"], ["cmp~r14d,0", "jz~FOO"]], [2, 0, 99, 2, 0, 6, 1, 1, 10, -1, 0.0045045045045045045, ["add     rsi, 1", "add     rax, 1", "mov     [rax-1], dl", "movzx   edx, byte ptr [rsi]", "test    dl, dl", "jnz     short loc_8808"], ["add~rsi,0", "add~rax,0", "mov~[rax-1]+0],dl", "movzx~edx,<TAG>", "test~dl,dl", "jnz~FOO"]], [0, 0, 99, 0, 0, 2, 0, 0, 9, -1, 0.0020224305938591654, ["mov     rsi, name", "nop     dword ptr [rax]"], ["mov~rsi,name", "nop~<TAG>"]], [0, 0, 0, 0, 0, 8, 0, 0, 9, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     r14", "pop     f", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~r14", "pop~f", "pop~rbp", "retn"]], [1, 0, 48, 0, 0, 2, 0, 1, 11, -1, 0.01199669056811914, ["cmp     cs:immediate_dirs, 1", "jz      loc_8CB8"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 50, 0, 0, 2, 0, 1, 10, -1, 0.16023166023166024, ["cmp     eax, 4000h", "jz      loc_8BA8"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 84, 0, 1, 6, 1, 2, 8, -1, 0.038763253048967335, ["mov     rdx, r14; stat_buf", "mov     rsi, absolute_name; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jz      short loc_8475"], ["mov~rdx,r14", "mov~rsi,absolute_name", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 111, 0, 0, 4, 1, 1, 9, -1, 0.017841821413249987, ["movzx   esi, byte ptr [r9]", "mov     r13, name", "test    sil, sil", "jz      loc_840A"], ["movzx~esi,<TAG>", "mov~r13,name", "test~sil,sil", "jz~FOO"]], [0, 0, 85, 0, 0, 2, 0, 1, 9, -1, 0.014118710547281978, ["mov     r13, name", "jmp     loc_840A"], ["mov~r13,name", "jmp~FOO"]], [1, 0, 97, 0, 0, 2, 0, 1, 9, -1, 0.05906416620702335, ["mov     byte ptr [rax], 0", "jmp     loc_83FB"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 132, 0, 0, 2, 1, 1, 8, -1, 0.0035392535392535394, ["test    r14d, r14d", "jz      loc_865E"], ["test~r14d,r14d", "jz~FOO"]], [1, 0, 118, 0, 0, 2, 0, 1, 9, -1, 0.010916528773671632, ["cmp     r14d, 5", "jz      loc_8DB4"], ["cmp~r14d,0", "jz~FOO"]], [0, 0, 119, 0, 0, 1, 0, 1, 10, -1, 0.002367163081448796, ["jmp     loc_8A24"], ["jmp~FOO"]], [0, 0, 140, 0, 0, 3, 1, 1, 3, -1, 0.008963044677330391, ["movzx   eax, cs:format_needs_stat", "test    al, al", "jnz     loc_83D9"], ["movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [6, 0, 141, 3, 0, 16, 3, 1, 2, -1, 0.032404853833425264, ["imul    rsi, 0B8h", "xor     eax, eax", "lea     r15, [rdi+rsi]", "lea     rdi, [f+8]", "mov     rcx, f", "mov     qword ptr [f], 0", "mov     qword ptr [f+0B0h], 0", "and     rdi, 0FFFFFFFFFFFFFFF8h", "sub     rcx, rdi", "add     ecx, 0B8h", "shr     ecx, 3", "test    r12b, r12b", "rep stosq", "mov     [f+18h], inode", "mov     [f+0A0h], r14d", "jz      loc_8620"], ["imul~rsi,,0", "xor~eax,eax", "lea~r15,<TAG>", "lea~rdi,[f+0]", "mov~rcx,f", "mov~<TAG>,0", "mov~[word ptr [f+0],0", "and~rdi,0", "sub~rcx,rdi", "add~ecx,0", "shr~ecx,0", "test~r12b,r12b", "stosq~<TAG>,", "mov~[f+0],inode", "mov~[f+0],r14d", "jz~FOO"]], [1, 0, 139, 0, 0, 2, 0, 1, 4, -1, 0.010204081632653062, ["cmp     r14d, 3", "jz      loc_89E0"], ["cmp~r14d,0", "jz~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 9, -1, 0.0063430777716492, ["mov     eax, r10d", "xor     r13d, r13d", "jmp     loc_85DA"], ["mov~eax,r10d", "xor~r13d,r13d", "jmp~FOO"]], [1, 0, 121, 0, 0, 2, 0, 1, 8, -1, 0.007515168229453944, ["cmp     cs:format_needs_type, 0", "jz      loc_8A2E"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 116, 0, 0, 3, 0, 1, 11, -1, 0.0027578599007170436, ["cmp     cs:print_with_color, 0", "mov     [rbp+dirname], r9", "jz      loc_8A2E"], ["cmp~<TAG>,0", "mov~[rbp+0],r9", "jz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 1, 13, -1, 0.00036771465342893915, ["jmp     loc_8A2E"], ["jmp~FOO"]], [2, 0, 30, 1, 0, 7, 2, 1, 19, -1, 0.006251149108291966, ["mov     ecx, [rax]", "add     rax, 4", "lea     edx, [rcx-1010101h]", "not     ecx", "and     edx, ecx", "and     edx, 80808080h", "jz      short loc_8C22"], ["mov~ecx,<TAG>", "add~rax,0", "lea~edx,[rcx-1010101h]+0]", "not~ecx", "and~edx,ecx", "and~edx,0", "jz~FOO"]], [2, 0, 30, 0, 1, 8, 1, 1, 18, -1, 0.009836366979224123, ["lea     rcx, aLu_0+1; \"%lu\"", "mov     r8d, r14d", "mov     edx, 15h", "mov     esi, 1", "mov     rdi, r12", "xor     eax, eax", "call    ___sprintf_chk", "mov     rax, r12"], ["lea~rcx,<TAG>", "mov~r8d,r14d", "mov~edx,0", "mov~esi,0", "mov~rdi,r12", "xor~eax,eax", "call~FOO", "mov~rax,r12"]], [1, 0, 46, 0, 0, 1, 0, 0, 11, -1, 0.009376723662437948, ["mov     byte ptr [f+0B1h], 1"], ["mov~[yte ptr [f+0],0"]], [0, 0, 47, 0, 0, 1, 0, 1, 17, -1, 0.0008733223018937304, ["jmp     loc_870B"], ["jmp~FOO"]], [1, 0, 73, 0, 0, 2, 0, 1, 10, -1, 0.03856407427835999, ["cmp     cs:check_symlink_color, 0", "jnz     loc_8A66"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 5, 0, 2, 7, 0, 3, 11, -1, 0.006297113439970583, ["mov     rdi, [f+18h]; i", "lea     rsi, [rbp+buf]; buf", "call    umaxtostr", "mov     rdi, rax; s", "call    _strlen", "cmp     cs:inode_number_width, eax", "jge     loc_85E2"], ["mov~rdi,[f+0]", "lea~rsi,[rbp+0]", "call~FOO", "mov~rdi,rax", "call~FOO", "cmp~<TAG>,eax", "jge~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 10, -1, 0.028865600294171723, ["test    al, al", "jnz     loc_8828"], ["test~al,al", "jnz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 2, -1, 0.0, ["lea     command_line_arg, __PRETTY_FUNCTION___8520; \"gobble_file\"", "lea     type, file; \"ls.c\"", "lea     rdi, aCommandLineArg; \"! command_line_arg || inode == NOT_AN_I\"...", "mov     edx, 0A03h; line", "call    ___assert_fail"], ["lea~command_line_arg,<TAG>", "lea~type,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 147, 0, 0, 2, 1, 1, 1, 3, 4.5964331678617394e-05, ["test    r8b, r8b", "jz      loc_8D29"], ["test~r8b,r8b", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 8, -1, 0.0015398051112336826, ["jmp     loc_85E2"], ["jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 12, -1, 0.0, ["mov     cs:inode_number_width, eax", "jmp     loc_85E2"], ["mov~<TAG>,eax", "jmp~FOO"]], [3, 0, 28, 2, 0, 10, 1, 0, 20, -1, 0.002574002574002574, ["mov     ecx, edx", "shr     ecx, 10h", "test    edx, 8080h", "cmovz   edx, ecx", "lea     rcx, [rax+2]", "cmovz   rax, rcx", "mov     ecx, edx", "add     cl, dl", "sbb     rax, 3", "sub     eax, r12d"], ["mov~ecx,edx", "shr~ecx,0", "test~edx,0", "cmovz~edx,ecx", "lea~rcx,[rax+0]", "cmovz~rax,rcx", "mov~ecx,edx", "add~cl,dl", "sbb~rax,0", "sub~eax,r12d"]], [0, 0, 92, 0, 0, 2, 1, 1, 7, -1, 0.017075749218606363, ["test    r12b, r12b", "jnz     loc_8990"], ["test~r12b,r12b", "jnz~FOO"]], [1, 0, 132, 0, 0, 6, 2, 1, 6, -1, 0.010296010296010296, ["cmp     r14d, 6", "setz    al", "test    r14d, r14d", "setz    cl", "or      al, cl", "jz      short loc_8690"], ["cmp~r14d,0", "setz~al", "test~r14d,r14d", "setz~cl", "or~al,cl", "jz~FOO"]], [0, 0, 74, 0, 0, 3, 1, 1, 10, -1, 0.030750137892995036, ["mov     edi, cs:format_0", "test    edi, edi", "jnz     loc_86FE"], ["mov~edi,<TAG>", "test~edi,edi", "jnz~FOO"]], [2, 0, 75, 0, 0, 4, 1, 1, 9, -1, 0.10022522522522523, ["mov     eax, [f+28h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_8A58"], ["mov~eax,[f+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [0, 0, 27, 0, 0, 2, 0, 1, 20, -1, 0.012272476558190843, ["cmp     cs:group_width, eax", "jge     loc_8597"], ["cmp~<TAG>,eax", "jge~FOO"]], [1, 0, 28, 0, 1, 6, 2, 2, 19, -1, 0.012226512226512228, ["xor     esi, esi; flags", "call    gnu_mbswidth", "mov     edx, 0", "test    eax, eax", "cmovs   eax, edx", "jmp     loc_8C5B"], ["xor~esi,esi", "call~FOO", "mov~edx,0", "test~eax,eax", "cmovs~eax,edx", "jmp~FOO"]], [1, 0, 131, 0, 0, 3, 0, 1, 7, -1, 0.032282282282282276, ["mov     ecx, cs:dereference", "cmp     ecx, 5", "jz      loc_8728"], ["mov~ecx,<TAG>", "cmp~ecx,0", "jz~FOO"]], [0, 0, 26, 0, 0, 2, 0, 1, 21, -1, 0.0, ["mov     cs:group_width, eax", "jmp     loc_8597"], ["mov~<TAG>,eax", "jmp~FOO"]], [1, 0, 84, 0, 1, 6, 1, 2, 6, -1, 0.1626524483667341, ["mov     rdx, r14; stat_buf", "mov     rsi, absolute_name; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jnz     short loc_841E"], ["mov~rdx,r14", "mov~rsi,absolute_name", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 88, 0, 0, 4, 1, 1, 10, -1, 0.0026659312373598087, ["mov     edx, [f+28h]", "and     edx, 0F000h", "cmp     edx, 4000h", "jnz     loc_8461"], ["mov~edx,[f+0]", "and~edx,0", "cmp~edx,0", "jnz~FOO"]], [1, 0, 86, 0, 1, 3, 0, 2, 10, -1, 0.002803824232395661, ["call    ___errno_location", "cmp     dword ptr [rax], 2", "jz      loc_8461"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 126, 0, 0, 2, 0, 1, 8, -1, 0.008503401360544218, ["cmp     cs:color_symlink_as_referent, 0", "jnz     loc_83DF"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 72, 0, 1, 7, 1, 2, 11, -1, 0.05993748850891708, ["mov     rsi, [f+40h]; size", "mov     rdi, absolute_name; file", "call    areadlink_with_size", "test    rax, rax", "mov     rcx, rax", "mov     [f+8], rax", "jz      loc_8D80"], ["mov~rsi,[f+0]", "mov~rdi,absolute_name", "call~FOO", "test~rax,rax", "mov~rcx,rax", "mov~[f+0],rax", "jz~FOO"]], [0, 0, 18, 0, 2, 7, 0, 3, 16, -1, 0.05561684133112705, ["mov     rdi, [f+20h]; i", "lea     rsi, [rbp+b]; buf", "call    umaxtostr", "mov     rdi, rax; s", "call    _strlen", "cmp     cs:nlink_width, eax", "jge     short loc_8886"], ["mov~rdi,[f+0]", "lea~rsi,[rbp+0]", "call~FOO", "mov~rdi,rax", "call~FOO", "cmp~<TAG>,eax", "jge~FOO"]], [0, 0, 19, 0, 0, 3, 1, 1, 15, -1, 0.08866519580805296, ["mov     eax, cs:format_0", "test    eax, eax", "jz      loc_8860"], ["mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 0, 17, 0, 0, 1, 0, 0, 17, -1, 0.0, ["mov     cs:nlink_width, eax"], ["mov~<TAG>,eax"]], [1, 0, 125, 0, 0, 2, 0, 1, 9, -1, 0.0028497885640742784, ["cmp     cs:check_symlink_color, 0", "jnz     loc_83DF"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 69, 0, 0, 2, 0, 1, 12, -1, 0.04644695716124288, ["cmp     byte ptr [rcx], 2Fh ; '/'", "jz      loc_8CD0"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 71, 0, 2, 11, 2, 3, 12, -1, 0.011008457437028865, ["lea     rsi, aCannotReadSymb; \"cannot read symbolic link %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "movzx   edi, r12b; serious", "mov     rdx, absolute_name; file", "mov     rsi, rax; message", "call    file_failure", "mov     rcx, [f+8]", "test    rcx, rcx", "jnz     loc_8A82"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "movzx~edi,r12b", "mov~rdx,absolute_name", "mov~rsi,rax", "call~FOO", "mov~rcx,[f+0]", "test~rcx,rcx", "jnz~FOO"]], [1, 0, 81, 0, 0, 4, 1, 1, 7, -1, 0.20500091928663358, ["mov     r8d, cs:format_0", "mov     byte ptr [f+0B0h], 1", "test    r8d, r8d", "jnz     loc_86C0"], ["mov~r8d,<TAG>", "mov~[yte ptr [f+0],0", "test~r8d,r8d", "jnz~FOO"]], [0, 0, 84, 0, 0, 2, 1, 1, 9, -1, 0.010296010296010296, ["test    eax, eax", "jz      loc_8475"], ["test~eax,eax", "jz~FOO"]], [0, 0, 124, 0, 0, 2, 0, 0, 10, -1, 0.0027808420665563524, ["mov     edx, eax", "nop     dword ptr [rax+00000000h]"], ["mov~edx,eax", "nop~[word ptr [rax+0]"]], [3, 0, 109, 1, 2, 23, 2, 3, 6, -1, 0.024315131457988602, ["mov     rdi, name; s", "mov     [rbp+var_398], ecx", "mov     [rbp+var_391], sil", "mov     byte ptr [rbp+src], dl", "mov     [rbp+dirname], r9", "call    _strlen", "mov     r9, [rbp+dirname]", "mov     r13, rax", "mov     rdi, r9; s", "call    _strlen", "lea     rax, [r13+rax+20h]", "movzx   esi, [rbp+var_391]", "mov     r9, [rbp+dirname]", "movzx   edx, byte ptr [rbp+src]", "mov     ecx, [rbp+var_398]", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "movzx   r10d, byte ptr [r9+1]", "lea     r8, [rsp+3A0h+var_391]", "and     r8, 0FFFFFFFFFFFFFFF0h", "cmp     sil, 2Eh ; '.'", "mov     r13, r8", "jz      loc_8A40"], ["mov~rdi,name", "mov~[rbp+0],ecx", "mov~[rbp+0],sil", "mov~[yte ptr [rbp+0],dl", "mov~[rbp+0],r9", "call~FOO", "mov~r9,[rbp+0]", "mov~r13,rax", "mov~rdi,r9", "call~FOO", "lea~rax,[r13+0]", "movzx~esi,[rbp+0]", "mov~r9,[rbp+0]", "movzx~edx,[yte ptr [rbp+0]", "mov~ecx,[rbp+0]", "and~rax,0", "sub~rsp,rax", "movzx~r10d,[yte ptr [r9+0]", "lea~r8,[rsp+0]", "and~r8,0", "cmp~sil,0", "mov~r13,r8", "jz~FOO"]], [0, 0, 123, 0, 0, 2, 1, 1, 7, -1, 0.015451676165961882, ["test    r8b, r8b", "jz      short loc_869D"], ["test~r8b,r8b", "jz~FOO"]], [2, 0, 16, 0, 0, 4, 1, 1, 17, -1, 0.045964331678617396, ["mov     eax, [f+28h]", "and     eax, 0B000h", "cmp     eax, 2000h", "jnz     loc_8950"], ["mov~eax,[f+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [0, 0, 122, 0, 0, 2, 1, 1, 8, -1, 0.012441012441012441, ["test    dl, dl", "jnz     loc_83D9"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 40, 0, 0, 3, 1, 1, 14, -1, 0.08025372311086597, ["mov     edx, cs:format_0", "test    edx, edx", "jnz     loc_8CA0"], ["mov~edx,<TAG>", "test~edx,edx", "jnz~FOO"]], [1, 0, 68, 0, 1, 7, 1, 2, 13, -1, 0.003263467549181835, ["mov     esi, 2Fh ; '/'; c", "mov     rdi, absolute_name; s", "mov     [rbp+dirname], rcx", "call    _strrchr", "test    rax, rax", "mov     rcx, [rbp+dirname]", "jz      loc_8CD0"], ["mov~esi,0", "mov~rdi,absolute_name", "mov~[rbp+0],rcx", "call~FOO", "test~rax,rax", "mov~rcx,[rbp+0]", "jz~FOO"]], [0, 0, 120, 0, 0, 2, 1, 1, 9, -1, 0.007722007722007722, ["test    r14d, r14d", "jz      loc_83D9"], ["test~r14d,r14d", "jz~FOO"]], [0, 0, 90, 0, 0, 2, 1, 1, 9, -1, 0.006113256113256114, ["test    eax, eax", "js      loc_8CF0"], ["test~eax,eax", "js~FOO"]], [0, 0, 32, 0, 1, 5, 1, 2, 18, -1, 0.015811730097444382, ["mov     edi, r14d; gid", "call    getgroup", "test    rax, rax", "mov     rdi, rax; string", "jz      loc_8C01"], ["mov~edi,r14d", "call~FOO", "test~rax,rax", "mov~rdi,rax", "jz~FOO"]], [1, 0, 33, 0, 0, 3, 0, 1, 17, -1, 0.033783783783783786, ["cmp     cs:numeric_ids, 0", "mov     r14d, [f+30h]", "jz      loc_8D50"], ["cmp~<TAG>,0", "mov~r14d,[f+0]", "jz~FOO"]], [1, 0, 45, 0, 0, 2, 0, 1, 12, -1, 0.003102592388306674, ["mov     dword ptr [f+0A0h], 3", "jmp     loc_851C"], ["mov~[word ptr [f+0],0", "jmp~FOO"]], [0, 0, 47, 0, 0, 2, 1, 1, 12, -1, 0.004044861187718331, ["test    r12b, r12b", "jz      loc_8CB8"], ["test~r12b,r12b", "jz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 8, -1, 0.10436201507630079, ["cmp     cs:print_scontext, 0", "jz      short loc_86EA"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 77, 0, 2, 14, 3, 2, 8, -1, 0.0988462952748667, ["call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'", "mov     [rbp+dirname], rax", "lea     rax, UNKNOWN_SECURITY_CONTEXT; \"?\"", "mov     rsi, r14; sb", "mov     rdi, absolute_name; name", "mov     [f+0A8h], rax", "call    file_has_acl", "test    eax, eax", "setnle  dl", "or      cs:any_has_acl, dl", "test    eax, eax", "mov     [f+0B2h], dl", "jns     short loc_84F2"], ["call~FOO", "mov~<TAG>,0", "mov~[rbp+0],rax", "lea~rax,<TAG>", "mov~rsi,r14", "mov~rdi,absolute_name", "mov~[f+0],rax", "call~FOO", "test~eax,eax", "setnle~dl", "or~<TAG>,dl", "test~eax,eax", "mov~[f+0],dl", "jns~FOO"]], [2, 2, 13, 0, 2, 16, 3, 3, 18, -1, 0.022798308512594227, ["mov     rax, [f+38h]", "lea     r12, [rbp+buf]", "mov     rsi, r12; buf", "mov     rdi, rax", "shr     rax, 20h", "shr     rdi, 8", "mov     edx, edi", "mov     rdi, rax", "and     edx, 0FFFh", "and     edi, 0FFFFF000h", "or      edi, edx; i", "call    umaxtostr", "mov     rdi, rax; s", "call    _strlen", "cmp     cs:major_device_number_width, eax", "jge     short loc_88E1"], ["mov~rax,[f+0]", "lea~r12,[rbp+0]", "mov~rsi,r12", "mov~rdi,rax", "shr~rax,<STR>", "shr~rdi,0", "mov~edx,edi", "mov~rdi,rax", "and~edx,<STR>", "and~edi,0", "or~edi,edx", "call~FOO", "mov~rdi,rax", "call~FOO", "cmp~<TAG>,eax", "jge~FOO"]], [0, 0, 12, 0, 0, 1, 0, 0, 19, -1, 0.0, ["mov     cs:major_device_number_width, eax"], ["mov~<TAG>,eax"]], [0, 0, 66, 0, 1, 5, 1, 2, 13, -1, 0.04265489979775694, ["mov     rdi, rcx; string", "call    xstrdup", "test    rax, rax", "mov     r14, rax", "jnz     loc_8B08"], ["mov~rdi,rcx", "call~FOO", "test~rax,rax", "mov~r14,rax", "jnz~FOO"]], [2, 0, 75, 0, 1, 5, 0, 1, 9, -1, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'", "lea     rax, UNKNOWN_SECURITY_CONTEXT; \"?\"", "mov     byte ptr [f+0B2h], 0", "mov     [f+0A8h], rax"], ["call~FOO", "mov~<TAG>,0", "lea~rax,<TAG>", "mov~[yte ptr [f+0],0", "mov~[f+0],rax"]], [0, 0, 56, 0, 0, 2, 1, 1, 14, -1, 0.0253723110865968, ["xor     r14d, r14d", "jmp     loc_8B20"], ["xor~r14d,r14d", "jmp~FOO"]], [0, 0, 57, 0, 0, 1, 0, 1, 13, -1, 0.010456885456885457, ["jmp     loc_8CE4"], ["jmp~FOO"]], [0, 0, 76, 0, 2, 9, 2, 2, 9, -1, 0.0, ["mov     rdi, absolute_name; arg", "call    quotearg_colon", "mov     rcx, rax", "mov     rax, [rbp+dirname]", "lea     rdx, aInvalidTabSize+12h; format", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error"], ["mov~rdi,absolute_name", "call~FOO", "mov~rcx,rax", "mov~rax,[rbp+0]", "lea~rdx,<TAG>", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 16, -1, 0.028130170987313845, ["movzx   eax, cs:print_inode"], ["movzx~eax,<TAG>"]], [0, 0, 9, 0, 0, 4, 0, 1, 20, -1, 0.0016547159404302263, ["mov     eax, cs:major_device_number_width", "lea     eax, [rdx+rax+2]", "cmp     cs:file_size_width, eax", "jge     loc_85D3"], ["mov~eax,<TAG>", "lea~eax,[rdx+0]", "cmp~<TAG>,eax", "jge~FOO"]], [0, 0, 8, 0, 0, 2, 0, 1, 20, -1, 0.00036771465342893915, ["mov     cs:file_size_width, eax", "jmp     loc_85D3"], ["mov~<TAG>,eax", "jmp~FOO"]], [1, 0, 10, 0, 2, 11, 1, 3, 18, -1, 0.012502298216583932, ["mov     rdi, [f+40h]; n", "mov     r8, cs:file_output_block_size; to_block_size", "lea     rsi, [rbp+buf]; buf", "mov     edx, cs:human_output_opts; opts", "mov     ecx, 1; from_block_size", "call    human_readable", "xor     esi, esi; flags", "mov     rdi, rax; string", "call    gnu_mbswidth", "cmp     cs:file_size_width, eax", "jge     loc_85D3"], ["mov~rdi,[f+0]", "mov~r8,<TAG>", "lea~rsi,[rbp+0]", "mov~edx,<TAG>", "mov~ecx,0", "call~FOO", "xor~esi,esi", "mov~rdi,rax", "call~FOO", "cmp~<TAG>,eax", "jge~FOO"]], [2, 0, 74, 0, 0, 4, 1, 1, 9, -1, 0.10564901636330208, ["mov     eax, [f+28h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_8506"], ["mov~eax,[f+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [0, 0, 65, 1, 4, 19, 0, 4, 14, -1, 0.00020683949255377828, ["sub     rax, absolute_name", "mov     rdi, rcx; s", "mov     [rbp+src], rcx", "mov     r14, rax", "lea     rax, [rax+1]", "mov     [rbp+dirname], rax", "call    _strlen", "lea     rdi, [r14+rax+2]; n", "call    xmalloc", "mov     rdx, [rbp+dirname]; n", "mov     rsi, absolute_name; src", "mov     rdi, rax; dest", "mov     r14, rax", "call    _strncpy", "mov     rax, [rbp+dirname]", "mov     rcx, [rbp+src]", "lea     rdi, [r14+rax]; dest", "mov     rsi, rcx; src", "call    _strcpy"], ["sub~rax,absolute_name", "mov~rdi,rcx", "mov~[rbp+0],rcx", "mov~r14,rax", "lea~rax,[rax+0]", "mov~[rbp+0],rax", "call~FOO", "lea~rdi,[r14+0]", "call~FOO", "mov~rdx,[rbp+0]", "mov~rsi,absolute_name", "mov~rdi,rax", "mov~r14,rax", "call~FOO", "mov~rax,[rbp+0]", "mov~rcx,[rbp+0]", "lea~rdi,<TAG>", "mov~rsi,rcx", "call~FOO"]], [2, 0, 55, 0, 1, 6, 1, 2, 15, -1, 0.04977937120794264, ["mov     rdi, r14; ptr", "call    free", "mov     eax, [f+28h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_8506"], ["mov~rdi,r14", "call~FOO", "mov~eax,[f+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 11, 0, 2, 13, 2, 3, 19, -1, 0.012410369553226696, ["mov     len, [f+38h]", "mov     rsi, r12; buf", "movzx   edx, al", "shr     rax, 0Ch", "mov     rdi, rax", "xor     dil, dil", "or      edi, edx; i", "call    umaxtostr", "mov     rdi, rax; s", "call    _strlen", "mov     edx, cs:minor_device_number_width", "cmp     edx, eax", "jge     short loc_8916"], ["mov~len,[f+0]", "mov~rsi,r12", "movzx~edx,al", "shr~rax,0", "mov~rdi,rax", "xor~dil,dil", "or~edi,edx", "call~FOO", "mov~rdi,rax", "call~FOO", "mov~edx,<TAG>", "cmp~edx,eax", "jge~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 14, -1, 0.029784886927744073, ["cmp     cs:indicator_style_0, 1", "ja      short loc_8B50"], ["cmp~<TAG>,0", "ja~FOO"]], [1, 0, 45, 0, 0, 1, 0, 0, 11, -1, 0.14253539253539255, ["mov     dword ptr [f+0A0h], 5"], ["mov~[word ptr [f+0],0"]], [0, 0, 10, 0, 0, 2, 0, 0, 20, -1, 0.0, ["mov     cs:minor_device_number_width, eax", "mov     edx, eax"], ["mov~<TAG>,eax", "mov~edx,eax"]], [1, 0, 63, 0, 0, 2, 0, 1, 15, -1, 0.0034473248758963046, ["cmp     cs:check_symlink_color, 0", "jnz     short loc_8B50"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 56, 0, 0, 1, 0, 0, 16, -1, 0.001287001287001287, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [2, 0, 148, 1, 0, 20, 2, 1, 0, 3, 0.0, ["push    rbp", "mov     r9, dirname_0", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "mov     r14d, esi", "push    rbx", "mov     r13, inode", "mov     rbx, name", "mov     r12d, ecx", "sub     rsp, 378h", "mov     rax, fs:28h", "mov     [rbp+var_38], rax", "xor     eax, eax", "test    inode, inode", "setz    r8b", "cmp     cl, 1", "jnz     short loc_8327"], ["push~rbp", "mov~r9,dirname_0", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "mov~r14d,esi", "push~rbx", "mov~r13,inode", "mov~rbx,name", "mov~r12d,ecx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "test~inode,inode", "setz~r8b", "cmp~cl,0", "jnz~FOO"]], [1, 0, 45, 0, 0, 2, 0, 1, 12, -1, 0.02895752895752896, ["mov     dword ptr [f+0A0h], 6", "jmp     loc_851C"], ["mov~[word ptr [f+0],0", "jmp~FOO"]], [1, 0, 48, 0, 0, 2, 0, 1, 16, -1, 0.024223202794631367, ["cmp     cs:check_symlink_color, 0", "jnz     loc_8713"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 10, -1, 0.0014708586137157566, ["jmp     loc_8CFE"], ["jmp~FOO"]], [0, 0, 44, 0, 0, 4, 1, 1, 12, -1, 0.17949071520500093, ["mov     ecx, cs:format_0", "mov     absolute_name, [f+50h]", "test    ecx, ecx", "jz      short loc_8533"], ["mov~ecx,<TAG>", "mov~absolute_name,[f+0]", "test~ecx,ecx", "jz~FOO"]], [1, 0, 45, 0, 0, 2, 0, 1, 13, -1, 0.0010341974627688913, ["mov     dword ptr [f+0A0h], 9", "jmp     loc_851C"], ["mov~[word ptr [f+0],0", "jmp~FOO"]], [0, 0, 36, 0, 1, 4, 0, 2, 16, -1, 0.004688361831218974, ["mov     edi, [f+2Ch]; u", "call    format_user_width", "cmp     cs:owner_width, eax", "jge     loc_858A"], ["mov~edi,[f+0]", "call~FOO", "cmp~<TAG>,eax", "jge~FOO"]], [1, 0, 37, 0, 0, 2, 0, 1, 15, -1, 0.06513145798860084, ["cmp     cs:print_owner, 0", "jnz     loc_8C78"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 1, 19, -1, 0.0057455414598271744, ["jmp     short loc_892C"], ["jmp~FOO"]], [1, 0, 43, 0, 0, 2, 0, 1, 13, -1, 0.08788380216951645, ["cmp     cs:print_block_size, 0", "jz      short loc_85A4"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 113, 0, 0, 4, 0, 1, 8, -1, 0.028329349757921188, ["movzx   edx, byte ptr [name]", "lea     type, [f+10h]", "cmp     dl, 2Fh ; '/'", "jz      loc_8DF3"], ["movzx~edx,<TAG>", "lea~type,[f+0]", "cmp~dl,0", "jz~FOO"]], [1, 0, 61, 0, 1, 6, 1, 2, 15, -1, 0.023901452472881043, ["lea     rdx, [rbp+linkstats]; stat_buf", "mov     rsi, r14; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jnz     short loc_8B20"], ["lea~rdx,[rbp+0]", "mov~rsi,r14", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 58, 0, 0, 4, 1, 1, 18, -1, 0.004918183489612061, ["mov     edx, eax", "and     edx, 0F000h", "cmp     edx, 4000h", "jz      short loc_8B20"], ["mov~edx,eax", "and~edx,0", "cmp~edx,0", "jz~FOO"]], [0, 0, 56, 0, 0, 2, 0, 1, 17, -1, 0.0064350064350064354, ["mov     [f+0A4h], eax", "jmp     loc_8B20"], ["mov~[f+0],eax", "jmp~FOO"]], [0, 0, 145, 0, 0, 4, 0, 1, 1, 2, 0.013329656186799044, ["mov     type, cs:cwd_n_used", "cmp     rsi, cs:cwd_n_alloc", "mov     name, cs:cwd_file; p", "jnz     short loc_838C"], ["mov~type,<TAG>", "cmp~rsi,<TAG>", "mov~name,<TAG>", "jnz~FOO"]], [0, 0, 107, 0, 0, 1, 0, 1, 8, -1, 0.0002757859900717044, ["jmp     loc_87C6"], ["jmp~FOO"]], [0, 0, 20, 0, 0, 2, 0, 1, 16, -1, 0.0, ["mov     cs:scontext_width, eax", "jmp     loc_85C5"], ["mov~<TAG>,eax", "jmp~FOO"]], [0, 0, 21, 0, 1, 4, 0, 2, 15, -1, 0.007630079058650488, ["mov     rdi, [f+0A8h]; s", "call    _strlen", "cmp     cs:scontext_width, eax", "jl      loc_8940"], ["mov~rdi,[f+0]", "call~FOO", "cmp~<TAG>,eax", "jl~FOO"]], [0, 0, 110, 0, 0, 1, 0, 0, 10, -1, 0.004090825519396948, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 1, 42, 0, 2, 12, 1, 3, 13, -1, 0.08558558558558559, ["mov     r8, cs:output_block_size; to_block_size", "mov     edx, cs:human_output_opts; opts", "lea     r12, [rbp+buf]", "mov     ecx, 200h; from_block_size", "mov     rdi, blocks; n", "mov     rsi, r12; buf", "call    human_readable", "xor     esi, esi; flags", "mov     rdi, rax; string", "call    gnu_mbswidth", "cmp     cs:block_size_width, eax", "jge     short loc_856F"], ["mov~r8,<TAG>", "mov~edx,<TAG>", "lea~r12,[rbp+0]", "mov~ecx,<STR>", "mov~rdi,blocks", "mov~rsi,r12", "call~FOO", "xor~esi,esi", "mov~rdi,rax", "call~FOO", "cmp~<TAG>,eax", "jge~FOO"]], [0, 0, 41, 0, 0, 1, 0, 0, 14, -1, 0.0, ["mov     cs:block_size_width, eax"], ["mov~<TAG>,eax"]], [0, 0, 35, 0, 0, 2, 0, 1, 17, -1, 0.0, ["mov     cs:owner_width, eax", "jmp     loc_858A"], ["mov~<TAG>,eax", "jmp~FOO"]], [1, 0, 60, 0, 0, 4, 1, 1, 16, -1, 0.014157014157014158, ["test    r12b, r12b", "mov     byte ptr [f+0B1h], 1", "mov     eax, [rbp+linkstats.st_mode]", "jz      short loc_8B98"], ["test~r12b,r12b", "mov~[yte ptr [f+0],0", "mov~eax,[rbp+0]", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 59, 0, 0, 3, 1, 1, 17, -1, 0.007170435741864313, ["mov     esi, cs:format_0", "test    esi, esi", "jz      short loc_8B98"], ["mov~esi,<TAG>", "test~esi,esi", "jz~FOO"]], [1, 0, 142, 1, 1, 8, 0, 1, 3, -1, 0.00652693509836367, ["mov     rsi, rax; n", "call    xrealloc", "shl     cs:cwd_n_alloc, 1", "movzx   r8d, byte ptr [rbp+src]", "mov     rdi, rax", "mov     rsi, cs:cwd_n_used", "mov     r9, [rbp+dirname]", "mov     cs:cwd_file, rax"], ["mov~rsi,rax", "call~FOO", "shl~<TAG>,0", "movzx~r8d,[yte ptr [rbp+0]", "mov~rdi,rax", "mov~rsi,<TAG>", "mov~r9,[rbp+0]", "mov~<TAG>,rax"]], [1, 0, 34, 0, 0, 2, 0, 1, 16, -1, 0.05589262732119875, ["cmp     cs:print_group, 0", "jnz     loc_8BF0"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 57, 0, 0, 1, 0, 0, 19, -1, 4.5964331678617394e-05, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [1, 0, 25, 0, 0, 2, 0, 1, 17, -1, 0.023211987497701782, ["cmp     cs:print_author, 0", "jnz     loc_8BD0"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 14, -1, 0.09960470674756389, ["cmp     cs:print_scontext, 0", "jz      short loc_85C5"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 24, 0, 1, 4, 0, 2, 18, -1, 0.005239933811362383, ["mov     edi, [f+2Ch]; u", "call    format_user_width", "cmp     cs:author_width, eax", "jge     loc_85A4"], ["mov~edi,[f+0]", "call~FOO", "cmp~<TAG>,eax", "jge~FOO"]], [0, 0, 23, 0, 0, 2, 0, 1, 19, -1, 0.0, ["mov     cs:author_width, eax", "jmp     loc_85A4"], ["mov~<TAG>,eax", "jmp~FOO"]], [2, 0, 91, 0, 1, 8, 0, 2, 8, -1, 0.013789299503585218, ["mov     rdx, r14; stat_buf", "mov     rsi, absolute_name; filename", "mov     edi, 1; ver", "mov     dword ptr [rbp+dirname], ecx", "call    ___xstat", "mov     ecx, dword ptr [rbp+dirname]", "cmp     ecx, 3", "jz      short loc_89CF"], ["mov~rdx,r14", "mov~rsi,absolute_name", "mov~edi,0", "mov~[word ptr [rbp+0],ecx", "call~FOO", "mov~ecx,[word ptr [rbp+0]", "cmp~ecx,0", "jz~FOO"]], [1, 0, 117, 0, 0, 2, 0, 1, 10, -1, 0.013329656186799044, ["cmp     cs:indicator_style_0, 3", "jz      loc_83D9"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 110, 0, 0, 3, 1, 1, 5, -1, 0.016133480419194705, ["movzx   esi, byte ptr [r9]", "test    sil, sil", "jnz     loc_8750"], ["movzx~esi,<TAG>", "test~sil,sil", "jnz~FOO"]], [0, 0, 106, 0, 0, 2, 0, 1, 7, -1, 0.013145798860084575, ["mov     rdi, r9", "jmp     short loc_87DB"], ["mov~rdi,r9", "jmp~FOO"]], [0, 0, 106, 0, 0, 3, 0, 0, 9, -1, 0.0, ["mov     esi, r10d", "movzx   r10d, byte ptr [rdi+1]", "mov     r8, rax"], ["mov~esi,r10d", "movzx~r10d,[yte ptr [rdi+0]", "mov~r8,rax"]], [1, 0, 106, 1, 0, 5, 1, 1, 8, -1, 0.021051663908806768, ["lea     rax, [r8+1]", "add     rdi, 1", "test    r10b, r10b", "mov     [rax-1], sil", "jnz     short loc_87D0"], ["lea~rax,[r8+0]", "add~rdi,0", "test~r10b,r10b", "mov~[rax-1]+0],sil", "jnz~FOO"]], [0, 0, 112, 0, 0, 1, 0, 0, 3, -1, 0.09455629098486243, ["mov     ecx, cs:dereference"], ["mov~ecx,<TAG>"]], [1, 0, 136, 0, 0, 2, 0, 1, 5, -1, 0.0068486854201139915, ["cmp     cs:print_with_color, 0", "jnz     loc_83D9"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 115, 0, 1, 5, 1, 2, 12, -1, 0.006113256113256114, ["mov     edi, 0Eh; type", "call    is_colored", "test    al, al", "mov     r9, [rbp+dirname]", "jnz     loc_83D9"], ["mov~edi,0", "call~FOO", "test~al,al", "mov~r9,[rbp+0]", "jnz~FOO"]], [1, 0, 111, 0, 0, 5, 0, 1, 4, -1, 0.1140221854507569, ["movzx   edx, byte ptr [name]", "lea     type, [f+10h]", "mov     r13, name", "cmp     dl, 2Fh ; '/'", "jz      short loc_83FB"], ["movzx~edx,<TAG>", "lea~type,[f+0]", "mov~r13,name", "cmp~dl,0", "jz~FOO"]]], "func_feature": [50, 78, 168, 2, 149, 242, 3, 598, 0.02528, 42, 15], "succs": [[28, 21], [0, 2], [0, 4], [0, 122], [0], [], [132, 5], [51, 13], [59, 7], [130, 22], [48, 9], [9], [9], [25, 59], [19, 12], [52, 14], [74, 14], [94], [17, 124], [57, 29], [28, 20], [20], [], [83, 84], [103, 23], [10, 70], [25, 125], [25], [8], [57, 30], [35, 140], [30], [145, 34], [32, 145], [146, 15], [45], [35, 79], [35, 147], [35], [50, 39], [39], [108], [41], [41, 63], [49, 12], [12, 44], [], [121, 46], [12], [12], [55], [59, 139], [57, 74], [43, 63], [24, 53], [58, 135], [55], [117, 62], [135], [10, 70], [59, 71], [11, 59], [67, 148], [68, 69], [66, 75], [64, 94], [75], [72, 148], [89, 78], [92, 68], [85, 86], [110, 70], [74], [3, 142], [36, 76], [97, 87], [145, 36], [18, 114], [89, 99], [145, 31], [60, 61], [40, 56], [40, 81], [111], [112, 83], [90, 98], [93, 54], [88, 101], [101], [91, 102], [98], [100], [91], [54], [45], [96, 94], [94], [115, 94], [24, 43], [102], [24, 109], [104, 95], [105, 118], [111], [95], [106, 118], [100], [121, 47], [111], [42, 108], [11], [116, 126], [111], [128, 133], [113, 133], [96], [136, 126], [26, 27], [129, 100], [100, 134], [100], [33, 6], [142], [65], [65, 123], [73], [77, 127], [77], [133], [120, 131], [], [120, 119], [33], [82, 135], [120], [136, 137], [65, 124], [136, 138], [136], [80, 71], [145, 37], [8, 73], [144], [144], [1, 143], [148], [16, 145], [145, 38], [8, 141]], "fname": "gobble_file", "n_num": 149}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 3, 1, 0, 3, 0, 1, 0, 0, 0.11904761904761904, ["mov     rax, [b+70h]", "sub     eax, [a+70h]", "jnz     short locret_8E35"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 1, -1, 0.11904761904761904, ["jl      short loc_8E30"], ["jl~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 3, 0, 1, 0, 1, 0.0, ["mov     rax, [b+68h]", "cmp     [a+68h], rax", "jg      short loc_8E40"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 3, -1, 0.07142857142857142, ["mov     b, [b]; b", "mov     a, [a]; a", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, -1, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 4, 0, 8, 8, 0, 14, 0.04167, 0, 1], "succs": [[5, 7], [0, 6], [], [1, 2], [], [4], [7], []], "fname": "xstrcoll_mtime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 3, 1, 0, 3, 0, 1, 0, 0, 0.11904761904761904, ["mov     rax, [b+60h]", "sub     eax, [a+60h]", "jnz     short locret_8E75"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 1, -1, 0.11904761904761904, ["jl      short loc_8E70"], ["jl~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 3, 0, 1, 0, 1, 0.0, ["mov     rax, [b+58h]", "cmp     [a+58h], rax", "jg      short loc_8E80"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 3, -1, 0.07142857142857142, ["mov     b, [b]; b", "mov     a, [a]; a", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, -1, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 4, 0, 8, 8, 0, 14, 0.04167, 0, 1], "succs": [[5, 7], [0, 6], [], [1, 2], [], [4], [7], []], "fname": "xstrcoll_atime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 5, 0, 0, 1, 0, 1, 1, -1, 0.11904761904761904, ["jl      short loc_8EC0"], ["jl~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 3, 1, 0, 3, 0, 1, 2, -1, 0.11904761904761904, ["mov     rax, [b+80h]", "sub     eax, [a+80h]", "jnz     short locret_8EC5"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 3, -1, 0.07142857142857142, ["mov     b, [b]; b", "mov     a, [a]; a", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 3, 0, 1, 0, 1, 0.0, ["mov     rax, [b+78h]", "cmp     [a+78h], rax", "jg      short loc_8ED0"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]]], "func_feature": [0, 0, 4, 0, 8, 8, 0, 14, 0.04167, 0, 1], "succs": [[2], [0, 3], [], [2, 5], [], [4], [], [1, 6]], "fname": "xstrcoll_ctime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.07142857142857142, ["mov     b, [a]; b", "mov     a, [b]; a", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 2, -1, 0.11904761904761904, ["mov     rax, [a+80h]", "sub     eax, [b+80h]", "jnz     short locret_8F15"], ["mov~rax,[a+0]", "sub~eax,[b+0]", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 4, 0, 1, 0, 1, 0.0, ["mov     rax, [a+78h]", "cmp     [b+78h], rax", "mov     rdx, b", "jg      short loc_8F20"], ["mov~rax,[a+0]", "cmp~[b+0],rax", "mov~rdx,b", "jg~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [0, 0, 5, 0, 0, 1, 0, 1, 1, -1, 0.11904761904761904, ["jl      short loc_8F10"], ["jl~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, -1, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 4, 0, 8, 8, 0, 15, 0.04167, 0, 1], "succs": [[4], [0, 7], [], [2, 5], [], [1, 6], [7], []], "fname": "rev_xstrcoll_ctime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     rax, [a+68h]", "cmp     [b+68h], rax", "mov     rdx, b", "jg      short loc_8F60"], ["mov~rax,[a+0]", "cmp~[b+0],rax", "mov~rdx,b", "jg~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 2, 0, 0.11904761904761904, ["mov     rax, [a+70h]", "sub     eax, [b+70h]", "jnz     short locret_8F5D"], ["mov~rax,[a+0]", "sub~eax,[b+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 1, 0, 0.11904761904761904, ["jl      short loc_8F58"], ["jl~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 3, 0, 0.07142857142857142, ["mov     b, [a]; b", "mov     a, [b]; a", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 0, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]]], "func_feature": [0, 0, 4, 0, 8, 8, 0, 15, 0.04167, 0, 1], "succs": [[], [0, 3], [5, 6], [2, 7], [], [4], [], [6]], "fname": "rev_xstrcoll_mtime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     rax, [a+58h]", "cmp     [b+58h], rax", "mov     rdx, b", "jg      short loc_8FA0"], ["mov~rax,[a+0]", "cmp~[b+0],rax", "mov~rdx,b", "jg~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 2, 0, 0.11904761904761904, ["mov     rax, [a+60h]", "sub     eax, [b+60h]", "jnz     short locret_8F9D"], ["mov~rax,[a+0]", "sub~eax,[b+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 1, 0, 0.11904761904761904, ["jl      short loc_8F98"], ["jl~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 3, 0, 0.07142857142857142, ["mov     b, [a]; b", "mov     a, [b]; a", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 0, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]]], "func_feature": [0, 0, 4, 0, 8, 8, 0, 15, 0.04167, 0, 1], "succs": [[], [0, 3], [5, 6], [2, 7], [], [4], [], [6]], "fname": "rev_xstrcoll_atime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 3, 1, 0, 3, 0, 1, 0, 0, 0.11904761904761904, ["mov     rax, [b+60h]", "sub     eax, [a+60h]", "jnz     short locret_8FD5"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 1, -1, 0.11904761904761904, ["jl      short loc_8FD0"], ["jl~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 3, 0, 1, 0, 1, 0.0, ["mov     rax, [b+58h]", "cmp     [a+58h], rax", "jg      short loc_8FE0"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 3, -1, 0.07142857142857142, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, -1, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []]], "func_feature": [0, 0, 4, 0, 8, 8, 0, 14, 0.04167, 0, 1], "succs": [[4, 6], [0, 5], [], [1, 2], [7], [6], [], []], "fname": "strcmp_atime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 3, 1, 0, 3, 0, 1, 0, 0, 0.11904761904761904, ["mov     rax, [b+70h]", "sub     eax, [a+70h]", "jnz     short locret_9015"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 1, -1, 0.11904761904761904, ["jl      short loc_9010"], ["jl~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 3, 0, 1, 0, 1, 0.0, ["mov     rax, [b+68h]", "cmp     [a+68h], rax", "jg      short loc_9020"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 3, -1, 0.07142857142857142, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, -1, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []]], "func_feature": [0, 0, 4, 0, 8, 8, 0, 14, 0.04167, 0, 1], "succs": [[4, 6], [0, 5], [], [1, 2], [7], [6], [], []], "fname": "strcmp_mtime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 3, -1, 0.07142857142857142, ["mov     b, [a]; s2", "mov     a, [b]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 4, 0, 1, 0, 1, 0.0, ["mov     rax, [a+68h]", "cmp     [b+68h], rax", "mov     rdx, b", "jg      short loc_9060"], ["mov~rax,[a+0]", "cmp~[b+0],rax", "mov~rdx,b", "jg~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 2, -1, 0.11904761904761904, ["mov     rax, [a+70h]", "sub     eax, [b+70h]", "jnz     short locret_905D"], ["mov~rax,[a+0]", "sub~eax,[b+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 1, -1, 0.11904761904761904, ["jl      short loc_9058"], ["jl~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, -1, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]]], "func_feature": [0, 0, 4, 0, 8, 8, 0, 15, 0.04167, 0, 1], "succs": [[], [0], [], [2, 5], [1, 6], [4, 7], [], [6]], "fname": "rev_strcmp_mtime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 5, 0, 0, 1, 0, 1, 1, -1, 0.11904761904761904, ["jl      short loc_90A0"], ["jl~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 3, 1, 0, 3, 0, 1, 2, -1, 0.11904761904761904, ["mov     rax, [b+80h]", "sub     eax, [a+80h]", "jnz     short locret_90A5"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 3, -1, 0.07142857142857142, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 3, 0, 1, 0, 1, 0.0, ["mov     rax, [b+78h]", "cmp     [a+78h], rax", "jg      short loc_90B0"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []]], "func_feature": [0, 0, 4, 0, 8, 8, 0, 14, 0.04167, 0, 1], "succs": [[2], [0, 3], [], [2, 4], [7], [], [1, 5], []], "fname": "strcmp_ctime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.07142857142857142, ["mov     b, [a]; s2", "mov     a, [b]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 2, -1, 0.11904761904761904, ["mov     rax, [a+80h]", "sub     eax, [b+80h]", "jnz     short locret_90F5"], ["mov~rax,[a+0]", "sub~eax,[b+0]", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 4, 0, 1, 0, 1, 0.0, ["mov     rax, [a+78h]", "cmp     [b+78h], rax", "mov     rdx, b", "jg      short loc_9100"], ["mov~rax,[a+0]", "cmp~[b+0],rax", "mov~rdx,b", "jg~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 1, -1, 0.11904761904761904, ["jl      short loc_90F0"], ["jl~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, -1, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []]], "func_feature": [0, 0, 4, 0, 8, 8, 0, 15, 0.04167, 0, 1], "succs": [[7], [0, 6], [], [2, 4], [1, 5], [6], [], []], "fname": "rev_strcmp_ctime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 3, -1, 0.07142857142857142, ["mov     b, [a]; s2", "mov     a, [b]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 4, 0, 1, 0, 1, 0.0, ["mov     rax, [a+58h]", "cmp     [b+58h], rax", "mov     rdx, b", "jg      short loc_9140"], ["mov~rax,[a+0]", "cmp~[b+0],rax", "mov~rdx,b", "jg~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 2, -1, 0.11904761904761904, ["mov     rax, [a+60h]", "sub     eax, [b+60h]", "jnz     short locret_913D"], ["mov~rax,[a+0]", "sub~eax,[b+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 1, -1, 0.11904761904761904, ["jl      short loc_9138"], ["jl~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, -1, 0.023809523809523808, ["mov     eax, 1"], ["mov~eax,0"]]], "func_feature": [0, 0, 4, 0, 8, 8, 0, 15, 0.04167, 0, 1], "succs": [[], [0], [], [2, 5], [1, 6], [4, 7], [], [6]], "fname": "rev_strcmp_atime", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 9, 0, 0, 2, 1, 1, 0, 0, 0.14545454545454545, ["test    cl, cl", "jnz     short loc_9190"], ["test~cl,cl", "jnz~FOO"]], [4, 0, 11, 0, 0, 13, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_917E"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 1, 1, 0.00909090909090909, ["test    cl, cl", "jnz     short loc_91D0"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, -1, 0.1909090909090909, ["jl      short loc_91C0"], ["jl~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 5, -1, 0.06363636363636363, ["mov     b, [b]", "mov     a, [a]", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, -1, 0.12727272727272726, ["mov     rax, [b+80h]", "sub     eax, [a+80h]", "jnz     short locret_918B"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 2, 2, 0.02727272727272727, ["test    dl, dl", "mov     eax, 1", "jz      short loc_9190"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 7, 0, 0, 3, 0, 1, 2, 1, 0.19999999999999998, ["mov     rax, [b+78h]", "cmp     [a+78h], rax", "jg      short loc_91D0"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]]], "func_feature": [0, 5, 8, 0, 12, 15, 0, 35, 0.06364, 0, 1], "succs": [[8, 10], [0, 2], [0, 11], [], [3, 7], [], [5], [9, 6], [9, 10], [], [11, 4], []], "fname": "xstrcoll_df_ctime", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.06363636363636363, ["mov     b, [b]", "mov     a, [a]", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, -1, 0.12727272727272726, ["mov     rax, [b+60h]", "sub     eax, [a+60h]", "jnz     short locret_921B"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, -1, 0.1909090909090909, ["jl      short loc_9240"], ["jl~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []], [4, 0, 11, 0, 0, 13, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_920E"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 2, 1, 0.19999999999999998, ["mov     rax, [b+58h]", "cmp     [a+58h], rax", "jg      short loc_9250"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 1, 1, 0.00909090909090909, ["test    cl, cl", "jnz     short loc_9250"], ["test~cl,cl", "jnz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 2, 0.14545454545454545, ["test    cl, cl", "jnz     short loc_9220"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 2, 2, 0.02727272727272727, ["test    dl, dl", "mov     eax, 1", "jz      short loc_9220"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 5, 8, 0, 12, 15, 0, 35, 0.06364, 0, 1], "succs": [[4], [0, 11], [], [1, 2], [], [8, 7], [10, 3], [8, 10], [9, 6], [11, 6], [], []], "fname": "xstrcoll_df_atime", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 5, -1, 0.06363636363636363, ["mov     b, [a]", "mov     a, [b]", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 2, 1, 0.19999999999999998, ["mov     rax, [a+68h]", "cmp     [r8+68h], rax", "jg      short loc_92D0"], ["mov~rax,[a+0]", "cmp~[r8+0],rax", "jg~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 2, 0.14545454545454545, ["test    cl, cl", "jnz     short loc_92A0"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 2, 2, 0.02727272727272727, ["test    dl, dl", "mov     eax, 1", "jz      short loc_92A0"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, -1, 0.12727272727272726, ["mov     rax, [a+70h]", "sub     eax, [r8+70h]", "jnz     short locret_929E"], ["mov~rax,[a+0]", "sub~eax,[r8+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, -1, 0.1909090909090909, ["jl      short loc_92C8"], ["jl~FOO"]], [4, 0, 11, 0, 0, 14, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "mov     r8, b", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_9291"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "mov~r8,b", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 10, 0, 0, 2, 1, 1, 1, 1, 0.00909090909090909, ["test    cl, cl", "jnz     short loc_92D0"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 5, 8, 0, 12, 15, 0, 36, 0.06364, 0, 1], "succs": [[], [0], [10, 6], [2, 4], [2, 11], [1, 11], [8, 5], [9, 3], [], [10, 3], [], []], "fname": "rev_xstrcoll_df_mtime", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 5, -1, 0.06363636363636363, ["mov     b, [a]", "mov     a, [b]", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 2, 1, 0.19999999999999998, ["mov     rax, [a+58h]", "cmp     [r8+58h], rax", "jg      short loc_9350"], ["mov~rax,[a+0]", "cmp~[r8+0],rax", "jg~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 2, 0.14545454545454545, ["test    cl, cl", "jnz     short loc_9320"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 2, 2, 0.02727272727272727, ["test    dl, dl", "mov     eax, 1", "jz      short loc_9320"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, -1, 0.12727272727272726, ["mov     rax, [a+60h]", "sub     eax, [r8+60h]", "jnz     short locret_931E"], ["mov~rax,[a+0]", "sub~eax,[r8+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, -1, 0.1909090909090909, ["jl      short loc_9348"], ["jl~FOO"]], [4, 0, 11, 0, 0, 14, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "mov     r8, b", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_9311"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "mov~r8,b", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 10, 0, 0, 2, 1, 1, 1, 1, 0.00909090909090909, ["test    cl, cl", "jnz     short loc_9350"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 5, 8, 0, 12, 15, 0, 36, 0.06364, 0, 1], "succs": [[], [0], [10, 6], [2, 4], [2, 11], [1, 11], [8, 5], [9, 3], [], [10, 3], [], []], "fname": "rev_xstrcoll_df_atime", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.06363636363636363, ["mov     b, [a]", "mov     a, [b]", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, -1, 0.12727272727272726, ["mov     rax, [a+80h]", "sub     eax, [r8+80h]", "jnz     short locret_939E"], ["mov~rax,[a+0]", "sub~eax,[r8+0]", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 10, 0, 0, 2, 1, 1, 1, 1, 0.00909090909090909, ["test    cl, cl", "jnz     short loc_93E0"], ["test~cl,cl", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 2, 1, 0.19999999999999998, ["mov     rax, [a+78h]", "cmp     [r8+78h], rax", "jg      short loc_93E0"], ["mov~rax,[a+0]", "cmp~[r8+0],rax", "jg~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []], [0, 0, 9, 0, 0, 2, 1, 1, 1, 2, 0.14545454545454545, ["test    cl, cl", "jnz     short loc_93A0"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 2, 2, 0.02727272727272727, ["test    dl, dl", "mov     eax, 1", "jz      short loc_93A0"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, -1, 0.1909090909090909, ["jl      short loc_93D0"], ["jl~FOO"]], [4, 0, 11, 0, 0, 14, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "mov     r8, b", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_9391"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "mov~r8,b", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 5, 8, 0, 12, 15, 0, 36, 0.06364, 0, 1], "succs": [[5], [0, 11], [], [2, 6], [8, 2], [], [4, 7], [11, 4], [1, 10], [3, 6], [], []], "fname": "rev_xstrcoll_df_ctime", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 9, 0, 0, 2, 1, 1, 0, 0, 0.14545454545454545, ["test    cl, cl", "jnz     short loc_9430"], ["test~cl,cl", "jnz~FOO"]], [4, 0, 11, 0, 0, 13, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_941E"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 1, 1, 0.00909090909090909, ["test    cl, cl", "jnz     short loc_9460"], ["test~cl,cl", "jnz~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, -1, 0.12727272727272726, ["mov     rax, [b+70h]", "sub     eax, [a+70h]", "jnz     short locret_942B"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, -1, 0.1909090909090909, ["jl      short loc_9450"], ["jl~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 3, 0, 1, 2, 1, 0.19999999999999998, ["mov     rax, [b+68h]", "cmp     [a+68h], rax", "jg      short loc_9460"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 5, -1, 0.06363636363636363, ["mov     b, [b]", "mov     a, [a]", "jmp     xstrcoll"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 2, 2, 0.02727272727272727, ["test    dl, dl", "mov     eax, 1", "jz      short loc_9430"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]]], "func_feature": [0, 5, 8, 0, 12, 15, 0, 35, 0.06364, 0, 1], "succs": [[9, 6], [0, 2], [0, 5], [8, 10], [11, 3], [], [4, 5], [], [7], [10, 6], [], []], "fname": "xstrcoll_df_mtime", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 0, 6, 0, 1, 0, 0, 0.16666666666666666, ["pop     rbx", "mov     rsi, [b]; b", "mov     rdi, [a+0]; a", "pop     a", "pop     b", "jmp     xstrcoll"], ["pop~rbx", "mov~rsi,<TAG>", "mov~rdi,[a+0]", "pop~a", "pop~b", "jmp~FOO"]], [2, 0, 3, 0, 3, 22, 3, 4, 0, 1, 0.0, ["push    r12", "push    rbp", "mov     rbp, a", "push    rbx", "mov     a, [a]; s", "mov     r12, b", "mov     esi, 2Eh ; '.'; c", "call    _strrchr", "mov     rdi, [b]; s", "mov     esi, 2Eh ; '.'; c", "mov     rbx, rax", "call    _strrchr", "lea     rdx, aReportBugsToS+16h; \"\"", "test    rax, rax", "cmovz   rax, rdx", "test    rbx, rbx", "cmovz   rbx, rdx", "mov     rsi, rax; b", "mov     rdi, rbx; a", "call    xstrcoll", "test    eax, eax", "jnz     short loc_94D0"], ["push~r12", "push~rbp", "mov~rbp,a", "push~rbx", "mov~a,<TAG>", "mov~r12,b", "mov~esi,0", "call~FOO", "mov~rdi,<TAG>", "mov~esi,0", "mov~rbx,rax", "call~FOO", "lea~rdx,<TAG>", "test~rax,rax", "cmovz~rax,rdx", "test~rbx,rbx", "cmovz~rbx,rdx", "mov~rsi,rax", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 1, 0, 0.0, ["pop     rbx", "pop     a", "pop     b", "retn"], ["pop~rbx", "pop~a", "pop~b", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []]], "func_feature": [3, 3, 5, 0, 4, 3, 0, 32, 0.04167, 1, 0], "succs": [[3], [0, 2], [], []], "fname": "xstrcoll_extension", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 0, 6, 0, 1, 0, 0, 0.16666666666666666, ["pop     rbx", "mov     rsi, [a]; b", "mov     rdi, [b+0]; a", "pop     b", "pop     a", "jmp     xstrcoll"], ["pop~rbx", "mov~rsi,<TAG>", "mov~rdi,[b+0]", "pop~b", "pop~a", "jmp~FOO"]], [2, 0, 3, 0, 3, 22, 3, 4, 0, 1, 0.0, ["push    r12", "push    rbp", "mov     rbp, b", "push    rbx", "mov     r12, a", "mov     a, [rbp+0]; s", "mov     esi, 2Eh ; '.'; c", "call    _strrchr", "mov     rdi, [a]; s", "mov     esi, 2Eh ; '.'; c", "mov     rbx, rax", "call    _strrchr", "lea     rdx, aReportBugsToS+16h; \"\"", "test    rax, rax", "cmovz   rax, rdx", "test    rbx, rbx", "cmovz   rbx, rdx", "mov     rsi, rax; b", "mov     rdi, rbx; a", "call    xstrcoll", "test    eax, eax", "jnz     short loc_9540"], ["push~r12", "push~rbp", "mov~rbp,b", "push~rbx", "mov~r12,a", "mov~a,[rbp+0]", "mov~esi,0", "call~FOO", "mov~rdi,<TAG>", "mov~esi,0", "mov~rbx,rax", "call~FOO", "lea~rdx,<TAG>", "test~rax,rax", "cmovz~rax,rdx", "test~rbx,rbx", "cmovz~rbx,rdx", "mov~rsi,rax", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 1, 0, 0.0, ["pop     rbx", "pop     b", "pop     a", "retn"], ["pop~rbx", "pop~b", "pop~a", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []]], "func_feature": [3, 3, 5, 0, 4, 3, 0, 32, 0.04167, 1, 0], "succs": [[3], [0, 2], [], []], "fname": "rev_xstrcoll_extension", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 9, 0, 0, 2, 1, 1, 0, 0, 0.14545454545454545, ["test    cl, cl", "jnz     short loc_9590"], ["test~cl,cl", "jnz~FOO"]], [4, 0, 11, 0, 0, 13, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_957E"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 1, 1, 0.00909090909090909, ["test    cl, cl", "jnz     short loc_95C0"], ["test~cl,cl", "jnz~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, -1, 0.12727272727272726, ["mov     rax, [b+70h]", "sub     eax, [a+70h]", "jnz     short locret_958B"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, -1, 0.1909090909090909, ["jl      short loc_95B0"], ["jl~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 7, 0, 0, 3, 0, 1, 2, 1, 0.19999999999999998, ["mov     rax, [b+68h]", "cmp     [a+68h], rax", "jg      short loc_95C0"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 2, 2, 0.02727272727272727, ["test    dl, dl", "mov     eax, 1", "jz      short loc_9590"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 5, -1, 0.06363636363636363, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]]], "func_feature": [0, 5, 8, 0, 12, 15, 0, 35, 0.06364, 0, 1], "succs": [[6, 7], [0, 2], [0, 5], [8, 11], [9, 3], [], [4, 5], [8, 6], [], [], [], [10]], "fname": "strcmp_df_mtime", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 9, 0, 0, 2, 1, 1, 0, 0, 0.14545454545454545, ["test    cl, cl", "jnz     short loc_9610"], ["test~cl,cl", "jnz~FOO"]], [4, 0, 11, 0, 0, 13, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_95FE"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 1, 1, 0.00909090909090909, ["test    cl, cl", "jnz     short loc_9650"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, -1, 0.1909090909090909, ["jl      short loc_9640"], ["jl~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 5, -1, 0.06363636363636363, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, -1, 0.12727272727272726, ["mov     rax, [b+80h]", "sub     eax, [a+80h]", "jnz     short locret_960B"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 2, 2, 0.02727272727272727, ["test    dl, dl", "mov     eax, 1", "jz      short loc_9610"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 7, 0, 0, 3, 0, 1, 2, 1, 0.19999999999999998, ["mov     rax, [b+78h]", "cmp     [a+78h], rax", "jg      short loc_9650"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []]], "func_feature": [0, 5, 8, 0, 12, 15, 0, 35, 0.06364, 0, 1], "succs": [[9, 7], [0, 2], [0, 10], [], [3, 6], [11], [8, 5], [8, 9], [], [10, 4], [], []], "fname": "strcmp_df_ctime", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.06363636363636363, ["mov     b, [b]; s2", "mov     a, [a]; s1", "jmp     _strcmp"], ["mov~b,<TAG>", "mov~a,<TAG>", "jmp~FOO"]], [0, 0, 3, 1, 0, 3, 0, 1, 4, -1, 0.12727272727272726, ["mov     rax, [b+60h]", "sub     eax, [a+60h]", "jnz     short locret_969B"], ["mov~rax,[b+0]", "sub~eax,[a+0]", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 5, 0, 0, 1, 0, 1, 3, -1, 0.1909090909090909, ["jl      short loc_96C0"], ["jl~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []], [4, 0, 11, 0, 0, 13, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_968E"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 2, 1, 0.19999999999999998, ["mov     rax, [b+58h]", "cmp     [a+58h], rax", "jg      short loc_96D0"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "jg~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 1, 1, 0.00909090909090909, ["test    cl, cl", "jnz     short loc_96D0"], ["test~cl,cl", "jnz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 1, 2, 0.14545454545454545, ["test    cl, cl", "jnz     short loc_96A0"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 2, 2, 0.02727272727272727, ["test    dl, dl", "mov     eax, 1", "jz      short loc_96A0"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 5, 8, 0, 12, 15, 0, 35, 0.06364, 0, 1], "succs": [[4], [0, 11], [], [1, 2], [], [8, 7], [10, 3], [8, 10], [9, 6], [11, 6], [], []], "fname": "strcmp_df_atime", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 4, 0, 0, 3, 1, 1, 0, 0, 0.06666666666666667, ["test    rbx, rbx", "lea     rax, aReportBugsToS+16h; \"\"", "jz      short loc_972D"], ["test~rbx,rbx", "lea~rax,<TAG>", "jz~FOO"]], [2, 0, 6, 0, 2, 15, 1, 3, 0, 2, 0.0, ["push    r12", "push    rbp", "mov     r12, a", "push    rbx", "mov     rbp, [b]", "mov     esi, 2Eh ; '.'; c", "mov     a, rbp; s", "call    _strrchr", "mov     a, [a]", "mov     esi, 2Eh ; '.'; c", "mov     rbx, rax", "mov     rdi, r12; s", "call    _strrchr", "test    rax, rax", "jz      short loc_9740"], ["push~r12", "push~rbp", "mov~r12,a", "push~rbx", "mov~rbp,<TAG>", "mov~esi,0", "mov~a,rbp", "call~FOO", "mov~a,<TAG>", "mov~esi,0", "mov~rbx,rax", "mov~rdi,r12", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 1, 8, 2, 2, 1, 1, 0.06666666666666667, ["lea     rdx, aReportBugsToS+16h; \"\"", "test    rbx, rbx", "mov     rsi, rax; s2", "cmovz   rbx, rdx", "mov     rdi, rbx; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_975B"], ["lea~rdx,<TAG>", "test~rbx,rbx", "mov~rsi,rax", "cmovz~rbx,rdx", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 1, 0, 0, 6, 0, 1, 2, -1, 0.13333333333333333, ["pop     rbx", "mov     rsi, r12; s2", "mov     rdi, rbp; s1", "pop     rbp", "pop     r12", "jmp     _strcmp"], ["pop~rbx", "mov~rsi,r12", "mov~rdi,rbp", "pop~rbp", "pop~r12", "jmp~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 2, 1, 0.03333333333333333, ["mov     rsi, rax; s2", "mov     rdi, rbx; s1", "call    _strcmp", "test    eax, eax", "jz      short loc_972D"], ["mov~rsi,rax", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [0, 0, 0, 0, 0, 4, 0, 0, 2, 0, 0.0, ["pop     rbx", "pop     rbp", "pop     r12", "retn"], ["pop~rbx", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [4, 5, 9, 0, 7, 9, 0, 41, 0.04286, 1, 0], "succs": [[3, 4], [0, 2], [3, 6], [5], [3, 6], [], []], "fname": "rev_strcmp_extension", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 4, 0, 0, 3, 1, 1, 0, 0, 0.06666666666666667, ["test    rbx, rbx", "lea     rax, aReportBugsToS+16h; \"\"", "jz      short loc_97AD"], ["test~rbx,rbx", "lea~rax,<TAG>", "jz~FOO"]], [2, 0, 6, 0, 2, 15, 1, 3, 0, 2, 0.0, ["push    r12", "push    rbp", "mov     r12, b", "push    rbx", "mov     rbp, [a]", "mov     esi, 2Eh ; '.'; c", "mov     a, rbp; s", "call    _strrchr", "mov     b, [b]", "mov     esi, 2Eh ; '.'; c", "mov     rbx, rax", "mov     rdi, r12; s", "call    _strrchr", "test    rax, rax", "jz      short loc_97C0"], ["push~r12", "push~rbp", "mov~r12,b", "push~rbx", "mov~rbp,<TAG>", "mov~esi,0", "mov~a,rbp", "call~FOO", "mov~b,<TAG>", "mov~esi,0", "mov~rbx,rax", "mov~rdi,r12", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 1, 8, 2, 2, 1, 1, 0.06666666666666667, ["lea     rdx, aReportBugsToS+16h; \"\"", "test    rbx, rbx", "mov     rsi, rax; s2", "cmovz   rbx, rdx", "mov     rdi, rbx; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_97DB"], ["lea~rdx,<TAG>", "test~rbx,rbx", "mov~rsi,rax", "cmovz~rbx,rdx", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 1, 0, 0, 6, 0, 1, 2, -1, 0.13333333333333333, ["pop     rbx", "mov     rsi, r12; s2", "mov     rdi, rbp; s1", "pop     rbp", "pop     r12", "jmp     _strcmp"], ["pop~rbx", "mov~rsi,r12", "mov~rdi,rbp", "pop~rbp", "pop~r12", "jmp~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 2, 1, 0.03333333333333333, ["mov     rsi, rax; s2", "mov     rdi, rbx; s1", "call    _strcmp", "test    eax, eax", "jz      short loc_97AD"], ["mov~rsi,rax", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [0, 0, 0, 0, 0, 4, 0, 0, 2, 0, 0.0, ["pop     rbx", "pop     rbp", "pop     r12", "retn"], ["pop~rbx", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [4, 5, 9, 0, 7, 9, 0, 41, 0.04286, 1, 0], "succs": [[3, 4], [0, 2], [3, 6], [5], [3, 6], [], []], "fname": "strcmp_extension", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["pop     a", "pop     b", "pop     r12", "retn"], ["pop~a", "pop~b", "pop~r12", "retn"]], [2, 0, 3, 0, 3, 22, 3, 4, 2, -1, 0.16666666666666666, ["push    r12", "push    rbp", "mov     rbp, b", "push    rbx", "mov     rbx, a", "mov     a, [a]; s", "mov     esi, 2Eh ; '.'; c", "call    _strrchr", "mov     rdi, [b+0]; s", "mov     esi, 2Eh ; '.'; c", "mov     r12, rax", "call    _strrchr", "lea     rdx, aReportBugsToS+16h; \"\"", "test    rax, rax", "cmovz   rax, rdx", "test    r12, r12", "cmovz   r12, rdx", "mov     rsi, rax; b", "mov     rdi, r12; a", "call    xstrcoll", "test    eax, eax", "jnz     short loc_9880"], ["push~r12", "push~rbp", "mov~rbp,b", "push~rbx", "mov~rbx,a", "mov~a,<TAG>", "mov~esi,0", "call~FOO", "mov~rdi,[b+0]", "mov~esi,0", "mov~r12,rax", "call~FOO", "lea~rdx,<TAG>", "test~rax,rax", "cmovz~rax,rdx", "test~r12,r12", "cmovz~r12,rdx", "mov~rsi,rax", "mov~rdi,r12", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [0, 0, 1, 0, 0, 6, 0, 1, 3, -1, 0.06944444444444445, ["mov     rsi, [b+0]", "mov     rdi, [a]", "pop     a", "pop     b", "pop     r12", "jmp     xstrcoll"], ["mov~rsi,[b+0]", "mov~rdi,<TAG>", "pop~a", "pop~b", "pop~r12", "jmp~FOO"]], [4, 0, 9, 0, 0, 13, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_980E"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 1, -1, 0.16666666666666666, ["test    cl, cl", "jnz     short loc_9820"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 5, 0, 0, 3, 1, 1, 2, -1, 0.041666666666666664, ["test    dl, dl", "mov     eax, 1", "jz      short loc_9820"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 1, 1, 0.013888888888888888, ["test    cl, cl", "jnz     short loc_9888"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [3, 8, 9, 0, 10, 11, 0, 55, 0.04583, 1, 0], "succs": [[], [0, 3], [], [2], [5, 7], [1, 6], [1, 9], [8, 5], [], []], "fname": "xstrcoll_df_extension", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 6, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    cl, cl", "jnz     short loc_98D0"], ["test~cl,cl", "jnz~FOO"]], [4, 0, 9, 0, 0, 13, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_98BE"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 1, 1, 0.013888888888888888, ["test    cl, cl", "jnz     short loc_9938"], ["test~cl,cl", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [0, 0, 1, 0, 0, 6, 0, 1, 3, -1, 0.06944444444444445, ["mov     rsi, [a+0]", "mov     rdi, [b]", "pop     b", "pop     a", "pop     r12", "jmp     xstrcoll"], ["mov~rsi,[a+0]", "mov~rdi,<TAG>", "pop~b", "pop~a", "pop~r12", "jmp~FOO"]], [2, 0, 3, 0, 3, 22, 3, 4, 2, -1, 0.16666666666666666, ["push    r12", "push    rbp", "mov     rbp, a", "push    rbx", "mov     rbx, b", "mov     esi, 2Eh ; '.'; c", "mov     a, [b]; s", "call    _strrchr", "mov     rdi, [a+0]; s", "mov     esi, 2Eh ; '.'; c", "mov     r12, rax", "call    _strrchr", "lea     rdx, aReportBugsToS+16h; \"\"", "test    rax, rax", "cmovz   rax, rdx", "test    r12, r12", "cmovz   r12, rdx", "mov     rsi, rax; b", "mov     rdi, r12; a", "call    xstrcoll", "test    eax, eax", "jnz     short loc_9930"], ["push~r12", "push~rbp", "mov~rbp,a", "push~rbx", "mov~rbx,b", "mov~esi,0", "mov~a,<TAG>", "call~FOO", "mov~rdi,[a+0]", "mov~esi,0", "mov~r12,rax", "call~FOO", "lea~rdx,<TAG>", "test~rax,rax", "cmovz~rax,rdx", "test~r12,r12", "cmovz~r12,rdx", "mov~rsi,rax", "mov~rdi,r12", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 5, 0, 0, 3, 1, 1, 2, -1, 0.041666666666666664, ["test    dl, dl", "mov     eax, 1", "jz      short loc_98D0"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 4, 0, 0, 3, -1, 0.0, ["pop     b", "pop     a", "pop     r12", "retn"], ["pop~b", "pop~a", "pop~r12", "retn"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]]], "func_feature": [3, 8, 9, 0, 10, 11, 0, 55, 0.04583, 1, 0], "succs": [[5, 6], [0, 2], [0, 9], [], [3], [8, 4], [5, 7], [], [], []], "fname": "rev_xstrcoll_df_extension", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 4, 0, 0, 3, 1, 0, 0, 0, 0.05341880341880341, ["lea     rdx, aReportBugsToS+16h; \"\"", "test    rbp, rbp", "cmovz   rbp, rdx"], ["lea~rdx,<TAG>", "test~rbp,rbp", "cmovz~rbp,rdx"]], [2, 0, 7, 0, 2, 15, 1, 3, 2, -1, 0.1794871794871795, ["push    r12", "push    rbp", "push    rbx", "mov     r12, [b]", "mov     rbx, a", "mov     esi, 2Eh ; '.'; c", "mov     a, r12; s", "call    _strrchr", "mov     a, [a]", "mov     esi, 2Eh ; '.'; c", "mov     rbp, rax", "mov     rdi, rbx; s", "call    _strrchr", "test    rax, rax", "jz      short loc_99F0"], ["push~r12", "push~rbp", "push~rbx", "mov~r12,<TAG>", "mov~rbx,a", "mov~esi,0", "mov~a,r12", "call~FOO", "mov~a,<TAG>", "mov~esi,0", "mov~rbp,rax", "mov~rdi,rbx", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 12, 0, 0, 2, 1, 1, 1, 1, 0.00641025641025641, ["test    cl, cl", "jnz     loc_9A00"], ["test~cl,cl", "jnz~FOO"]], [4, 0, 13, 0, 0, 13, 2, 1, 0, 2, 0.0, ["mov     eax, [a+0A0h]", "mov     edx, [b+0A0h]", "cmp     eax, 3", "setz    cl", "cmp     eax, 9", "setz    al", "or      ecx, eax", "cmp     edx, 3", "setz    al", "cmp     edx, 9", "setz    dl", "or      dl, al", "jnz     short loc_9972"], ["mov~eax,[a+0]", "mov~edx,[b+0]", "cmp~eax,0", "setz~cl", "cmp~eax,0", "setz~al", "or~ecx,eax", "cmp~edx,0", "setz~al", "cmp~edx,0", "setz~dl", "or~dl,al", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 5, -1, 0.0, ["pop     rbx", "pop     rbp", "pop     r12", "retn"], ["pop~rbx", "pop~rbp", "pop~r12", "retn"]], [0, 0, 3, 0, 1, 5, 1, 2, 4, -1, 0.10683760683760682, ["mov     rsi, rax; s2", "mov     rdi, rbp; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_99E8"], ["mov~rsi,rax", "mov~rdi,rbp", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 3, -1, 0.10683760683760682, ["test    rbp, rbp", "lea     rax, aReportBugsToS+16h; \"\"", "jnz     short loc_99C5"], ["test~rbp,rbp", "lea~rax,<TAG>", "jnz~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 1, -1, 0.1282051282051282, ["test    cl, cl", "jnz     short loc_9988"], ["test~cl,cl", "jnz~FOO"]], [1, 0, 9, 0, 0, 3, 1, 1, 2, -1, 0.019230769230769232, ["test    dl, dl", "mov     eax, 1", "jz      short loc_9988"], ["test~dl,dl", "mov~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 6, -1, 0.0, [], []], [0, 0, 1, 0, 0, 6, 0, 1, 5, -1, 0.05769230769230769, ["mov     rsi, rbx; s2", "mov     rdi, r12; s1", "pop     rbx", "pop     rbp", "pop     r12", "jmp     _strcmp"], ["mov~rsi,rbx", "mov~rdi,r12", "pop~rbx", "pop~rbp", "pop~r12", "jmp~FOO"]], [0, 0, 2, 0, 0, 1, 0, 1, 4, -1, 0.027777777777777776, ["jmp     short loc_99D4"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [3, 9, 12, 0, 14, 17, 0, 60, 0.04899, 1, 0], "succs": [[6], [0, 7], [], [8, 2], [8, 3], [], [11, 5], [12, 6], [1, 9], [1, 13], [], [10], [11], []], "fname": "rev_strcmp_df_extension", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 1, 2, 0, 1, 0, 0, 0.0, ["mov     edi, ebx; status", "call    _exit"], ["mov~edi,ebx", "call~FOO"]], [28, 0, 1, 0, 54, 218, 29, 55, 1, 0, 0.08333333333333333, ["lea     rsi, aUsageSOptionFi; \"Usage: %s [OPTION]... [FILE]...\\n\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aListInformatio; \"List information about the FILEs (the c\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aMandatoryArgum; \"Mandatory arguments to long options are\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aAAllDoNotIgnor; \"  -a, --all                  do not ign\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aBlockSizeSizeU; \"      --block-size=SIZE      use SIZE-b\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aCListEntriesBy; \"  -C                         list entri\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aFDoNotSortEnab; \"  -f                         do not sor\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aGLikeLButDoNot; \"  -g                         like -l, b\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aGroupDirectori; \"      --group-directories-first\\n      \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aGNoGroupInALon; \"  -G, --no-group             in a long \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aHDereferenceCo; \"  -H, --dereference-command-line\\n     \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aIndicatorStyle; \"      --indicator-style=WORD  append in\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aLUseALongListi; \"  -l                         use a long\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNNumericUidGid; \"  -n, --numeric-uid-gid      like -l, b\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aQHideControlCh; \"  -q, --hide-control-chars   print ? in\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aRReverseRevers; \"  -r, --reverse              reverse or\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aSSortByFileSiz; \"  -S                         sort by fi\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aTimeStyleStyle; \"      --time-style=STYLE     with -l, s\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aTSortByModific; \"  -t                         sort by mo\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aUWithLtSortByA; \"  -u                         with -lt: \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aWWidthColsAssu; \"  -w, --width=COLS           assume scr\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aHelpDisplayThi; \"      --help     display this help and \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aVersionOutputV; \"      --version  output version informa\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aSizeMayBeOrMay; \"\\nSIZE may be (or may be an integer opt\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aByDefaultColor; \"\\nBy default, color is not used to dist\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aExitStatusIs0I; \"\\nExit status is 0 if OK, 1 if minor pr\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "lea     rsi, aReportBugsToS; \"\\nReport bugs to <%s>.\\n\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, aBugCoreutilsGn; \"bug-coreutils@gnu.org\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_9A4F"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 2, 9, 2, 2, 1, -1, 0.08333333333333333, ["lea     rsi, aTrySHelpForMor; \"Try `%s --help' for more information.\\n\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     rcx, rbp", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~rcx,rbp", "mov~esi,0", "xor~eax,eax", "call~FOO"]], [2, 0, 3, 1, 0, 8, 1, 1, 0, 1, 0.0, ["push    rbp", "push    rbx", "mov     edx, 5; category", "mov     ebx, edi", "sub     rsp, 8", "test    edi, edi", "mov     rbp, cs:program_name", "jz      short loc_9A56"], ["push~rbp", "push~rbx", "mov~edx,0", "mov~ebx,edi", "sub~rsp,0", "test~edi,edi", "mov~rbp,<TAG>", "jz~FOO"]]], "func_feature": [57, 32, 59, 0, 4, 4, 3, 237, 0.04167, 32, 1], "succs": [[], [0], [0], [1, 2]], "fname": "usage", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 1, 2, 0.0, 0, 0], "succs": [[]], "fname": "file_has_acl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 12, 0, 1, 3, 0, 2, 0, 0, 0.06439393939393939, ["call    ___errno_location", "cmp     dword ptr [rax], 22h ; '\"'", "jz      short loc_9EC6"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 12, 0, 1, 7, 1, 2, 2, 4, 0.3560606060606061, ["mov     rdx, buf_size; len", "mov     rsi, buffer; buf", "mov     rdi, file; path", "call    _readlink", "test    rax, rax", "mov     r12, rax", "js      short loc_9F18"], ["mov~rdx,buf_size", "mov~rsi,buffer", "mov~rdi,file", "call~FOO", "test~rax,rax", "mov~r12,rax", "js~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 5, 1, 0.15151515151515152, ["cmp     buf_size, r15", "ja      short loc_9F40"], ["cmp~buf_size,r15", "ja~FOO"]], [0, 0, 12, 0, 1, 4, 0, 2, 4, 2, 0.26515151515151514, ["mov     rdi, buffer; ptr", "call    free", "cmp     buf_size, r14", "ja      short loc_9F00"], ["mov~rdi,buffer", "call~FOO", "cmp~buf_size,r14", "ja~FOO"]], [0, 0, 12, 1, 1, 6, 1, 2, 5, 5, 0.07575757575757576, ["add     buf_size, buf_size", "mov     rdi, buf_size; size", "call    malloc", "test    rax, rax", "mov     buffer, rax", "jnz     short loc_9EB0"], ["add~buf_size,buf_size", "mov~rdi,buf_size", "call~FOO", "test~rax,rax", "mov~buffer,rax", "jnz~FOO"]], [0, 0, 12, 0, 1, 5, 1, 2, 1, 5, 0.21212121212121213, ["mov     rdi, buf_size; size", "call    malloc", "test    rax, rax", "mov     rbp, rax", "jz      short loc_9EEB"], ["mov~rdi,buf_size", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, -1, 0.011363636363636364, ["mov     byte ptr [buffer+link_length+0], 0", "jmp     short loc_9EEB"], ["mov~[yte ptr [buffer+0],0", "jmp~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 3, 3, 0.32196969696969696, ["cmp     buf_size, link_length", "ja      short loc_9F30"], ["cmp~buf_size,link_length", "ja~FOO"]], [0, 0, 1, 0, 1, 4, 1, 2, 4, -1, 0.011363636363636364, ["mov     rdi, buffer; ptr", "xor     ebp, ebp", "call    free", "jmp     short loc_9EEB"], ["mov~rdi,buffer", "xor~ebp,ebp", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 1, 4, 1, 2, 6, 0, 0.007575757575757576, ["call    ___errno_location", "xor     ebp, ebp", "mov     dword ptr [rax], 0Ch", "jmp     short loc_9EEB"], ["call~FOO", "xor~ebp,ebp", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 6, 6, 0.09848484848484848, ["mov     buf_size, 7FFFFFFFFFFFFFFFh", "jmp     short loc_9EA0"], ["mov~buf_size,0", "jmp~FOO"]], [5, 0, 12, 1, 0, 15, 0, 0, 0, 6, 0.0, ["push    r15", "push    r14", "mov     eax, 401h", "push    r13", "push    r12", "mov     r13, file", "push    rbp", "push    rbx", "lea     rbx, [size+1]", "mov     r14, 3FFFFFFFFFFFFFFFh", "mov     r15, 7FFFFFFFFFFFFFFEh", "sub     rsp, 8", "cmp     size, 401h", "cmovnb  rbx, rax", "nop     dword ptr [rax+00000000h]"], ["push~r15", "push~r14", "mov~eax,0", "push~r13", "push~r12", "mov~r13,file", "push~rbp", "push~rbx", "lea~rbx,[size+0]", "mov~r14,0", "mov~r15,0", "sub~rsp,0", "cmp~size,0", "cmovnb~rbx,rax", "nop~[word ptr [rax+0]"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, rbp", "pop     buf_size", "pop     rbp", "pop     r12", "pop     file", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,rbp", "pop~buf_size", "pop~rbp", "pop~r12", "pop~file", "pop~r14", "pop~r15", "retn"]]], "func_feature": [7, 5, 18, 0, 13, 19, 1, 65, 0.12121, 0, 3], "succs": [[8, 7], [0, 7], [9, 10], [2, 4], [1, 12], [1, 12], [12], [3, 6], [12], [12], [5], [5], []], "fname": "areadlink_with_size", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 9, 0, 1, 6, 2, 2, 0, 0, 0.012096774193548387, ["call    ___ctype_b_loc", "mov     edx, [rsp+68h+flags]", "mov     rcx, [rax]", "xor     ebp, ebp", "and     edx, 2", "jmp     short loc_A0D0"], ["call~FOO", "mov~edx,[rsp+0]", "mov~rcx,<TAG>", "xor~ebp,ebp", "and~edx,0", "jmp~FOO"]], [0, 0, 10, 0, 0, 3, 1, 0, 1, 2, 0.008568548387096774, ["xor     ebp, ebp", "cmp     p, plimit", "jnb     short loc_A065"], ["xor~ebp,ebp", "cmp~p,plimit", "jnb~FOO"]], [2, 0, 32, 1, 1, 16, 1, 1, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "lea     r13, [string+nbytes]", "push    rbp", "push    rbx", "mov     rbx, string", "sub     rsp, 38h", "mov     rax, fs:28h", "mov     [rsp+68h+var_40], rax", "xor     eax, eax", "mov     [rsp+68h+flags], edx", "call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "jbe     loc_A0A8"], ["push~r15", "push~r14", "push~r13", "push~r12", "lea~r13,<TAG>", "push~rbp", "push~rbx", "mov~rbx,string", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~[rsp+0],edx", "call~FOO", "cmp~rax,0", "jbe~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 38h", "pop     p", "pop     rbp", "pop     r12", "pop     plimit", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~p", "pop~rbp", "pop~r12", "pop~plimit", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.06048387096774194, ["mov     rsi, [rsp+68h+var_40]", "xor     rsi, fs:28h", "mov     eax, ebp", "jnz     short loc_A0F6"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~eax,ebp", "jnz~FOO"]], [1, 0, 23, 1, 1, 9, 0, 2, 6, 5, 0.18951612903225806, ["mov     rdx, plimit", "mov     rcx, r12; p", "mov     rsi, p; s", "sub     rdx, p; n", "mov     rdi, r14; pwc", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     r15, rax", "jz      short loc_A050"], ["mov~rdx,plimit", "mov~rcx,r12", "mov~rsi,p", "sub~rdx,p", "mov~rdi,r14", "call~FOO", "cmp~rax,0", "mov~r15,rax", "jz~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 5, 6, 0.14717741935483872, ["mov     qword ptr [r12], 0", "jmp     short loc_9FF1"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 23, 2, 1, 6, 1, 2, 9, 3, 0.061995967741935484, ["mov     rdi, r12; ps", "add     ebp, eax", "add     p, bytes", "call    _mbsinit", "test    eax, eax", "jnz     short loc_9FB2"], ["mov~rdi,r12", "add~ebp,eax", "add~p,bytes", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 24, 0, 0, 3, 1, 0, 1, 2, 0.02167338709677419, ["xor     ebp, ebp", "cmp     p, plimit", "jnb     loc_A065"], ["xor~ebp,ebp", "cmp~p,plimit", "jnb~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 7, 4, 0.11743951612903225, ["cmp     bytes, 0FFFFFFFFFFFFFFFEh", "jz      short loc_A090"], ["cmp~bytes,0", "jz~FOO"]], [1, 0, 23, 0, 0, 2, 1, 1, 8, 3, 0.03679435483870968, ["test    byte ptr [rsp+68h+flags], 1", "jnz     short loc_A060"], ["test~[yte ptr [rsp+0],0", "jnz~FOO"]], [0, 0, 23, 0, 0, 3, 0, 1, 2, 6, 0.03931451612903226, ["lea     r12, [rsp+68h+mbstate]", "lea     r14, [rsp+68h+wc]", "jmp     short loc_9FBB"], ["lea~r12,[rsp+0]", "lea~r14,[rsp+0]", "jmp~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 4, 4, 0.03629032258064516, ["cmp     al, 25h ; '%'", "jge     short loc_9FAB"], ["cmp~al,0", "jge~FOO"]], [1, 0, 23, 0, 0, 3, 0, 1, 3, 5, 0.19858870967741934, ["movzx   eax, byte ptr [p]", "cmp     al, 3Fh ; '?'", "jle     short loc_9FA0"], ["movzx~eax,<TAG>", "cmp~al,0", "jle~FOO"]], [1, 1, 23, 1, 0, 3, 0, 1, 5, 4, 0.012096774193548387, ["sub     eax, 20h ; ' '", "cmp     al, 3", "ja      short loc_9FD1"], ["sub~eax,<STR>", "cmp~al,0", "ja~FOO"]], [1, 0, 23, 0, 1, 7, 2, 1, 8, 4, 0.0625, ["mov     edi, [rsp+68h+wc]; c", "test    bytes, bytes", "mov     eax, 1", "cmovz   bytes, rax", "call    _wcwidth", "test    eax, eax", "jns     short loc_9FE0"], ["mov~edi,[rsp+0]", "test~bytes,bytes", "mov~eax,0", "cmovz~bytes,rax", "call~FOO", "test~eax,eax", "jns~FOO"]], [2, 0, 23, 2, 0, 2, 0, 0, 5, 3, 0.08618951612903225, ["add     p, 1", "add     ebp, 1"], ["add~p,0", "add~ebp,0"]], [1, 0, 23, 0, 0, 2, 0, 1, 5, 4, 0.02721774193548387, ["cmp     al, 5Fh ; '_'", "jle     short loc_9FAB"], ["cmp~al,0", "jle~FOO"]], [2, 0, 23, 1, 0, 3, 0, 0, 6, 4, 0.012096774193548387, ["sub     eax, 61h ; 'a'", "cmp     al, 1Dh", "jbe     short loc_9FAB"], ["sub~eax,0", "cmp~al,0", "jbe~FOO"]], [1, 0, 23, 0, 0, 2, 1, 1, 7, 4, 0.053931451612903226, ["test    byte ptr [rsp+68h+flags], 1", "jz      loc_9FAB"], ["test~[yte ptr [rsp+0],0", "jz~FOO"]], [1, 0, 9, 1, 0, 1, 0, 0, 4, 3, 0.007056451612903226, ["add     ebp, 1"], ["add~ebp,0"]], [2, 0, 9, 1, 0, 5, 1, 1, 3, 4, 0.029233870967741934, ["add     p, 1", "movzx   eax, byte ptr [p-1]", "movzx   eax, word ptr [rcx+rax*2]", "test    ah, 40h", "jnz     short loc_A0C8"], ["add~p,0", "movzx~eax,[yte ptr [p-1]+0]", "movzx~eax,<TAG>", "test~ah,0", "jnz~FOO"]], [1, 0, 23, 0, 0, 2, 1, 1, 9, 3, 0.02167338709677419, ["test    byte ptr [rsp+68h+flags], 2", "jnz     short loc_A060"], ["test~[yte ptr [rsp+0],0", "jnz~FOO"]], [0, 0, 23, 0, 0, 2, 0, 0, 6, 2, 0.1754032258064516, ["cmp     p, plimit", "jnb     loc_A065"], ["cmp~p,plimit", "jnb~FOO"]], [1, 0, 23, 1, 0, 3, 0, 1, 9, 3, 0.021169354838709676, ["add     ebp, 1", "mov     rbx, plimit", "jmp     loc_9FB2"], ["add~ebp,0", "mov~rbx,plimit", "jmp~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 4, 5, 0.1441532258064516, ["cmp     al, 41h ; 'A'", "jl      short loc_9FD1"], ["cmp~al,0", "jl~FOO"]], [0, 0, 23, 0, 1, 6, 1, 2, 10, 4, 0.017137096774193547, ["mov     edi, [rsp+68h+wc]; wc", "call    _iswcntrl", "test    eax, eax", "setz    al", "movzx   eax, al", "jmp     short loc_9FE0"], ["mov~edi,[rsp+0]", "call~FOO", "test~eax,eax", "setz~al", "movzx~eax,al", "jmp~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 5, 2, 0.019153225806451613, ["cmp     plimit, p", "jz      short loc_A065"], ["cmp~plimit,p", "jz~FOO"]], [3, 0, 9, 1, 0, 5, 2, 1, 5, 3, 0.0030241935483870967, ["shr     ax, 1", "xor     eax, 1", "and     eax, 1", "add     ebp, eax", "jmp     short loc_A0CB"], ["shr~ax,0", "xor~eax,0", "and~eax,0", "add~ebp,eax", "jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 8, 3, 0.012096774193548387, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 3, 0, 0, 1, 0, 0, 5, 2, 0.025201612903225805, ["mov     ebp, 0FFFFFFFFh"], ["mov~ebp,0"]], [0, 0, 9, 0, 0, 2, 1, 1, 4, 3, 0.016129032258064516, ["test    edx, edx", "jnz     loc_A060"], ["test~edx,edx", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [7, 17, 28, 1, 33, 52, 3, 121, 0.05077, 1, 13], "succs": [[21], [0, 4], [8, 1], [], [32, 3], [9, 19], [5], [5, 23], [11, 4], [10, 15], [24, 30], [13], [16, 14], [25, 12], [16, 6], [22, 7], [23], [16, 18], [16, 6], [16, 29], [27], [20, 31], [26, 30], [4, 13], [23], [17, 6], [7], [4, 21], [27], [30], [4], [28, 30], []], "fname": "mbsnwidth", "n_num": 33}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[2, 0, 1, 2, 1, 13, 0, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     ebp, esi", "mov     rbx, string", "sub     rsp, 8", "call    _strlen", "add     rsp, 8", "mov     edx, ebp", "mov     rdi, string", "pop     string", "pop     flags", "mov     rsi, rax", "jmp     mbsnwidth"], ["push~rbp", "push~rbx", "mov~ebp,esi", "mov~rbx,string", "sub~rsp,0", "call~FOO", "add~rsp,0", "mov~edx,ebp", "mov~rdi,string", "pop~string", "pop~flags", "mov~rsi,rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 0, 2, 0, 2, 1, 7, 13, 0.0, 0, 2], "succs": [[1], []], "fname": "gnu_mbswidth", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 24, 0, 0, 2, 0, 1, 0, 0, 0.18659420289855072, ["cmp     qword ptr [rdi], 0", "jz      short loc_A190"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 24, 0, 0, 4, 0, 1, 2, 0, 0.05615942028985507, ["mov     rdi, [rsp+38h+tmp_authors.overflow_arg_area]", "lea     rax, [rdi+8]", "mov     [rsp+38h+tmp_authors.overflow_arg_area], rax", "jmp     loc_A17F"], ["mov~rdi,[rsp+0]", "lea~rax,[rdi+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 24, 2, 0, 4, 0, 0, 2, 4, 0.05615942028985507, ["mov     edi, eax", "add     eax, 8", "add     rdi, r8", "mov     [rsp+38h+tmp_authors.gp_offset], eax"], ["mov~edi,eax", "add~eax,0", "add~rdi,r8", "mov~<TAG>,eax"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 000000000000A220 case 5", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "jmp     loc_A260"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 13, 1, 0, 4, 0, 1, 7, -1, 0.18115942028985507, ["lea     rdx, off_15A24", "movsxd  rax, dword ptr [rdx+n_authors*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 24, 1, 0, 2, 0, 1, 4, 2, 0.012681159420289856, ["add     n_authors, 1", "jmp     short loc_A168"], ["add~n_authors,0", "jmp~FOO"]], [5, 0, 15, 0, 4, 20, 3, 5, 6, -1, 0.24456521739130435, ["lea     rsi, aC_0; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7D8h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     n_authors, 9; switch 10 cases", "ja      loc_A340; jumptable 000000000000A220 default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~n_authors,0", "ja~FOO"]], [1, 0, 16, 0, 1, 8, 1, 2, 5, -1, 0.10144927536231885, ["mov     r8, version", "mov     version, package", "lea     package, aSS_0; \"%s %s\\n\"", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_A1B8"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 16, 0, 1, 8, 1, 1, 5, -1, 0.10144927536231885, ["mov     r8, package", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     r9, version", "mov     rdi, stream", "mov     version, command_name", "xor     eax, eax", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~r8,package", "lea~package,<TAG>", "mov~r9,version", "mov~rdi,stream", "mov~version,command_name", "xor~eax,eax", "mov~esi,0", "call~FOO"]], [0, 1, 0, 1, 0, 5, 0, 0, 9, -1, 0.0, ["add     rsp, 20h", "pop     n_authors", "pop     stream", "pop     authors", "retn"], ["add~rsp,<STR>", "pop~n_authors", "pop~stream", "pop~authors", "retn"]], [0, 0, 2, 0, 2, 9, 2, 3, 8, -1, 0.07608695652173914, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, authors; args", "mov     rsi, rax; format", "mov     rdi, stream; fp", "call    rpl_vfprintf", "mov     rax, [rsp+38h+var_20]", "xor     rax, fs:28h", "jnz     loc_A356"], ["xor~edi,edi", "call~FOO", "mov~rdx,authors", "mov~rsi,rax", "mov~rdi,stream", "call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 18, 0, 0, 2, 1, 1, 4, -1, 0.1956521739130435, ["test    command_name, command_name", "jz      loc_A228"], ["test~command_name,command_name", "jz~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 000000000000A220 case 6", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "jmp     loc_A260"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 000000000000A220 case 9", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "jmp     short loc_A260"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 8, -1, 0.0006038647342995169, ["lea     rsi, aWrittenBySSSSS; jumptable 000000000000A220 case 8", "mov     edx, 5; category", "nop     dword ptr [rax+00h]"], ["lea~rsi,<TAG>", "mov~edx,0", "nop~[word ptr [rax+0]"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 000000000000A220 case 7", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "jmp     loc_A260"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 000000000000A220 case 1", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "jmp     short loc_A260"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 000000000000A220 case 2", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "jmp     short loc_A260"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 7, -1, 0.05434782608695652, ["mov     edx, 5; jumptable 000000000000A220 default case", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "jmp     loc_A260"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, -1, 0.0, ["call    _abort; jumptable 000000000000A220 case 0"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 000000000000A220 case 3", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "jmp     short loc_A260"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 1, 24, 1, 0, 16, 2, 0, 0, 2, 0.0, ["push    r12", "push    rbp", "mov     r12, authors", "push    rbx", "mov     rbp, stream", "xor     ebx, ebx", "sub     rsp, 20h", "mov     rax, fs:28h", "mov     [rsp+38h+var_20], rax", "xor     eax, eax", "movdqu  xmm0, xmmword ptr [authors]", "movups  xmmword ptr [rsp+38h+tmp_authors.gp_offset], xmm0", "mov     rax, [authors+10h]", "mov     [rsp+38h+tmp_authors.reg_save_area], rax", "mov     authors, rax", "nop     dword ptr [rax]"], ["push~r12", "push~rbp", "mov~r12,authors", "push~rbx", "mov~rbp,stream", "xor~ebx,ebx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movdqu~xmm0,<TAG>", "movups~<TAG>,xmm0", "mov~rax,[authors+0]", "mov~[rsp+0],rax", "mov~authors,rax", "nop~<TAG>"]], [1, 0, 24, 0, 0, 3, 0, 1, 1, 1, 0.08876811594202899, ["mov     eax, [rsp+38h+tmp_authors.gp_offset]", "cmp     eax, 2Fh ; '/'", "ja      loc_A35B"], ["mov~eax,<TAG>", "cmp~eax,0", "ja~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 000000000000A220 case 4", "lea     rsi, aWrittenBySSSAn; \"Written by %s, %s, %s,\\nand %s.\\n\"", "jmp     loc_A260"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]]], "func_feature": [10, 10, 28, 1, 25, 36, 1, 119, 0.05442, 17, 6], "succs": [[11, 5], [0], [0], [10], [3, 12, 13, 14, 15, 16, 17, 19, 21, 24], [23], [18, 4], [6], [6], [], [9, 20], [8, 7], [10], [10], [10], [10], [10], [10], [10], [], [], [10], [23], [1, 2], [10]], "fname": "version_etc_va", "n_num": 25}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 1, 2, 0, 1, 14, 2, 2, 0, 0, 0.3333333333333333, ["mov     rax, fs:28h", "mov     [rsp+0D8h+var_C0], rax", "xor     eax, eax", "lea     rax, [rsp+0D8h+arg_0]", "mov     r8, rsp; authors", "mov     [rsp+0D8h+authors.overflow_arg_area], rax", "lea     rax, [rsp+0D8h+var_B8]", "mov     [rsp+0D8h+authors.gp_offset], 20h ; ' '", "mov     [rsp+0D8h+authors.fp_offset], 30h ; '0'", "mov     [rsp+0D8h+authors.reg_save_area], rax", "call    version_etc_va", "mov     rax, [rsp+0D8h+var_C0]", "xor     rax, fs:28h", "jnz     short loc_A412"], ["mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "mov~r8,rsp", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~<TAG>,<STR>", "mov~[rsp+0],0", "mov~[rsp+0],rax", "call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 1, 4, 1, 0, 5, 1, 1, 0, 2, 0.0, ["sub     rsp, 0D8h", "test    al, al", "mov     [rsp+0D8h+var_98], r8", "mov     [rsp+0D8h+var_90], r9", "jz      short loc_A3BC"], ["sub~rsp,<STR>", "test~al,al", "mov~[rsp+0],r8", "mov~[rsp+0],r9", "jz~FOO"]], [0, 0, 3, 0, 0, 8, 0, 0, 1, 2, 0.0, ["movaps  [rsp+0D8h+var_88], xmm0", "movaps  [rsp+0D8h+var_78], xmm1", "movaps  [rsp+0D8h+var_68], xmm2", "movaps  [rsp+0D8h+var_58], xmm3", "movaps  [rsp+0D8h+var_48], xmm4", "movaps  [rsp+0D8h+var_38], xmm5", "movaps  [rsp+0D8h+var_28], xmm6", "movaps  [rsp+0D8h+var_18], xmm7"], ["movaps~[rsp+0],xmm0", "movaps~[rsp+0],xmm1", "movaps~[rsp+0],xmm2", "movaps~[rsp+0],xmm3", "movaps~[rsp+0],xmm4", "movaps~[rsp+0],xmm5", "movaps~[rsp+0],xmm6", "movaps~[rsp+0],xmm7"]], [0, 1, 0, 1, 0, 2, 0, 0, 2, -1, 0.0, ["add     rsp, 0D8h", "retn"], ["add~rsp,<STR>", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 3, 4, 12, 5, 5, 1, 30, 0.06667, 1, 2], "succs": [[3, 4], [0, 2], [0], [], []], "fname": "version_etc", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[2, 0, 0, 1, 3, 12, 3, 3, 0, 0, 0.0, ["lea     rsi, aMemoryExhauste; \"memory exhausted\"", "sub     rsp, 8", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     edi, cs:exit_failure; status", "lea     rdx, aInvalidTabSize+12h; format", "mov     rcx, rax", "xor     esi, esi; errnum", "xor     eax, eax", "call    _error", "call    _abort"], ["lea~rsi,<TAG>", "sub~rsp,0", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~edi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "xor~esi,esi", "xor~eax,eax", "call~FOO", "call~FOO"]]], "func_feature": [3, 3, 3, 0, 1, 0, 10, 12, 0.0, 3, 1], "succs": [[]], "fname": "xalloc_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     edi, 1", "xor     eax, eax", "jmp     usage"], ["mov~edi,0", "xor~eax,eax", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[], [0]], "fname": "__argmatch_die", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 12, 2, 0, 6, 1, 1, 0, 0, 0.10683760683760685, ["mov     [rsp+58h+var_58], i", "add     matchind, 1", "add     rbp, valsize", "mov     r14, [arglist+i*8]", "test    r14, r14", "jnz     short loc_A507"], ["mov~<TAG>,i", "add~matchind,0", "add~rbp,valsize", "mov~r14,<TAG>", "test~r14,r14", "jnz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 4, 4, 0.26282051282051283, ["cmp     [rsp+58h+var_58], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_A4C0"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 6, -1, 0.03205128205128205, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [2, 0, 13, 1, 1, 17, 1, 2, 0, 4, 0.0, ["push    r15", "push    r14", "mov     r15, arglist", "push    r13", "push    r12", "mov     r13, valsize", "push    rbp", "push    rbx", "mov     rbp, vallist_0", "sub     rsp, 28h", "mov     [rsp+58h+arg], arg_0", "mov     [rsp+58h+vallist], vallist_0", "call    _strlen", "mov     r14, [arglist]", "mov     [rsp+58h+var_58], 0FFFFFFFFFFFFFFFFh", "test    r14, r14", "jz      loc_A55D"], ["push~r15", "push~r14", "mov~r15,arglist", "push~r13", "push~r12", "mov~r13,valsize", "push~rbp", "push~rbx", "mov~rbp,vallist_0", "sub~rsp,0", "mov~[rsp+0],arg_0", "mov~[rsp+0],vallist_0", "call~FOO", "mov~r14,<TAG>", "mov~<TAG>,0", "test~r14,r14", "jz~FOO"]], [1, 0, 12, 2, 0, 5, 1, 1, 3, 3, 0.20512820512820512, ["add     i, 1", "add     rbp, valsize", "mov     r14, [arglist+i*8]", "test    r14, r14", "jz      short loc_A548"], ["add~i,0", "add~rbp,valsize", "mov~r14,<TAG>", "test~r14,r14", "jz~FOO"]], [0, 0, 12, 0, 1, 6, 1, 2, 2, 2, 0.3696581196581197, ["mov     rsi, [rsp+58h+arg]; s2", "mov     rdx, arglen; n", "mov     rdi, r14; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_A4F7"], ["mov~rsi,[rsp+0]", "mov~rdx,arglen", "mov~rdi,r14", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 6, 4, 0.03311965811965812, ["mov     [rsp+58h+ambiguous], 1", "jmp     short loc_A4F7"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 12, 2, 1, 11, 1, 1, 6, 4, 0.03311965811965812, ["mov     rdi, [rsp+58h+var_58]", "mov     rdx, valsize; n", "mov     rsi, rbp; s2", "imul    rdi, valsize", "add     rdi, rax; s1", "call    _memcmp", "test    eax, eax", "movzx   eax, [rsp+58h+ambiguous]", "mov     ecx, 1", "cmovnz  eax, ecx", "mov     [rsp+58h+ambiguous], al"], ["mov~rdi,<TAG>", "mov~rdx,valsize", "mov~rsi,rbp", "imul~rdi,valsize", "add~rdi,rax", "call~FOO", "test~eax,eax", "movzx~eax,[rsp+0]", "mov~ecx,0", "cmovnz~eax,ecx", "mov~[rsp+0],al"]], [0, 0, 12, 0, 1, 4, 0, 2, 3, 1, 0.3269230769230769, ["mov     rdi, r14; s", "call    _strlen", "cmp     rax, arglen", "jz      short loc_A580"], ["mov~rdi,r14", "call~FOO", "cmp~rax,arglen", "jz~FOO"]], [0, 0, 12, 0, 0, 3, 1, 1, 5, 5, 0.1111111111111111, ["mov     rax, [rsp+58h+vallist]", "test    rax, rax", "jz      loc_A570"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, 0, 0.01282051282051282, ["mov     [rsp+58h+var_58], i", "jmp     short loc_A55D"], ["mov~<TAG>,i", "jmp~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 1, -1, 0.0, ["mov     rax, [rsp+58h+var_58]", "add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     r12", "pop     valsize", "pop     r14", "pop     arglist", "retn"], ["mov~rax,<TAG>", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~valsize", "pop~r14", "pop~arglist", "retn"]], [2, 0, 1, 0, 0, 4, 0, 0, 4, -1, 0.05128205128205128, ["cmp     [rsp+58h+ambiguous], 0", "mov     rax, 0FFFFFFFFFFFFFFFEh", "cmovz   rax, [rsp+58h+var_58]", "mov     [rsp+58h+var_58], rax"], ["cmp~[rsp+0],0", "mov~rax,0", "cmovz~rax,<TAG>", "mov~<TAG>,rax"]], [1, 0, 12, 0, 0, 4, 1, 1, 1, 3, 0.07051282051282051, ["mov     r12, arglen", "mov     [rsp+58h+ambiguous], 0", "xor     ebx, ebx", "jmp     short loc_A507"], ["mov~r12,arglen", "mov~[rsp+0],0", "xor~ebx,ebx", "jmp~FOO"]]], "func_feature": [4, 7, 14, 1, 14, 20, 3, 76, 0.11538, 0, 8], "succs": [[2, 5], [0, 9], [12], [11, 13], [12, 5], [8, 4], [4], [4], [1, 10], [6, 7], [11], [], [11], [5]], "fname": "argmatch", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[2, 0, 1, 0, 2, 18, 4, 3, 0, 0, 0.25, ["mov     rsi, context; name", "mov     edi, 1; n", "call    quote_n", "mov     rdx, value; arg", "mov     context, rax", "mov     esi, 6; s", "xor     edi, edi; n", "call    quotearg_n_style", "mov     r8, rbp", "mov     rdx, format; format", "mov     rcx, rax", "pop     format", "pop     rbp", "pop     value", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "jmp     _error"], ["mov~rsi,context", "mov~edi,0", "call~FOO", "mov~rdx,value", "mov~context,rax", "mov~esi,0", "xor~edi,edi", "call~FOO", "mov~r8,rbp", "mov~rdx,format", "mov~rcx,rax", "pop~format", "pop~rbp", "pop~value", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "jmp~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 1, 0, 0.08333333333333333, ["lea     value, aInvalidArgumen; \"invalid argument %s for %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax", "jmp     short loc_A5B6"], ["lea~value,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbx,rax", "jmp~FOO"]], [0, 0, 2, 0, 1, 4, 1, 1, 1, -1, 0.08333333333333333, ["lea     value, aAmbiguousArgum; \"ambiguous argument %s for %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax"], ["lea~value,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbx,rax"]], [2, 0, 4, 0, 0, 8, 0, 1, 0, 1, 0.0, ["cmp     problem, 0FFFFFFFFFFFFFFFFh", "push    r12", "mov     edx, 5; category", "push    rbp", "mov     r12, value", "push    rbx", "mov     rbp, context", "jz      short loc_A5F0"], ["cmp~problem,0", "push~r12", "mov~edx,0", "push~rbp", "mov~r12,value", "push~rbx", "mov~rbp,context", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []]], "func_feature": [4, 6, 7, 0, 5, 5, 1, 35, 0.08333, 2, 0], "succs": [[4], [0], [0], [1, 2], []], "fname": "argmatch_invalid", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 9, 0, 0, 3, 2, 1, 0, 0, 0.05555555555555556, ["xor     r13d, r13d", "xor     ebx, ebx", "jmp     short loc_A691"], ["xor~r13d,r13d", "xor~ebx,ebx", "jmp~FOO"]], [3, 0, 10, 1, 2, 22, 3, 3, 0, 2, 0.0, ["push    r15", "push    r14", "mov     r14, arglist", "push    r13", "push    r12", "xor     edi, edi; domainname", "push    rbp", "push    rbx", "mov     rbp, vallist", "lea     vallist, aValidArguments; \"Valid arguments are:\"", "mov     r12, valsize", "mov     edx, 5; category", "sub     rsp, 18h", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "mov     rcx, [arglist]", "test    rcx, rcx", "jz      loc_A6E0"], ["push~r15", "push~r14", "mov~r14,arglist", "push~r13", "push~r12", "xor~edi,edi", "push~rbp", "push~rbx", "mov~rbp,vallist", "lea~vallist,<TAG>", "mov~r12,valsize", "mov~edx,0", "sub~rsp,0", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~rcx,<TAG>", "test~rcx,rcx", "jz~FOO"]], [2, 0, 1, 1, 0, 9, 0, 1, 2, 0, 0.08888888888888889, ["add     rsp, 18h", "mov     esi, 0Ah; int", "pop     rbx", "pop     rbp", "pop     valsize", "pop     r13", "pop     arglist", "pop     r15", "jmp     ___overflow"], ["add~rsp,0", "mov~esi,0", "pop~rbx", "pop~rbp", "pop~valsize", "pop~r13", "pop~arglist", "pop~r15", "jmp~FOO"]], [0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 0.23333333333333334, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_A710"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [2, 0, 9, 2, 1, 11, 2, 2, 3, 2, 0.1388888888888889, ["lea     rdx, aS_1; \"\\n  - `%s'\"", "xor     eax, eax", "add     i, 1", "mov     esi, 1", "mov     rdi, r15", "mov     last_val, rbp", "call    ___fprintf_chk", "mov     rcx, [arglist+i*8]", "add     last_val, valsize", "test    rcx, rcx", "jz      short loc_A6E0"], ["lea~rdx,<TAG>", "xor~eax,eax", "add~i,0", "mov~esi,0", "mov~rdi,r15", "mov~last_val,rbp", "call~FOO", "mov~rcx,<TAG>", "add~last_val,valsize", "test~rcx,rcx", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 5, 2, 0.044444444444444446, ["nop"], ["nop"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [2, 0, 0, 1, 0, 11, 0, 0, 2, -1, 0.0, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah", "add     rsp, 18h", "pop     rbx", "pop     rbp", "pop     valsize", "pop     r13", "pop     arglist", "pop     r15", "retn"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~valsize", "pop~r13", "pop~arglist", "pop~r15", "retn"]], [0, 0, 9, 0, 0, 3, 1, 1, 2, 3, 0.18888888888888888, ["test    i, i", "mov     r15, cs:stderr@@GLIBC_2_2_5", "jz      short loc_A668"], ["test~i,i", "mov~r15,<TAG>", "jz~FOO"]], [0, 0, 9, 0, 1, 8, 1, 2, 3, 3, 0.08888888888888889, ["mov     rdx, valsize; n", "mov     rsi, rbp; s2", "mov     rdi, last_val; s1", "mov     [rsp+48h+var_40], rcx", "call    _memcmp", "test    eax, eax", "mov     rcx, [rsp+48h+var_40]", "jnz     short loc_A668"], ["mov~rdx,valsize", "mov~rsi,rbp", "mov~rdi,last_val", "mov~[rsp+0],rcx", "call~FOO", "test~eax,eax", "mov~rcx,[rsp+0]", "jnz~FOO"]], [2, 0, 9, 2, 1, 10, 2, 2, 4, 3, 0.061111111111111116, ["lea     rdx, aS_0; \", `%s'\"", "xor     eax, eax", "add     i, 1", "mov     esi, 1", "mov     rdi, r15", "add     rbp, valsize", "call    ___fprintf_chk", "mov     rcx, [arglist+i*8]", "test    rcx, rcx", "jnz     short loc_A691"], ["lea~rdx,<TAG>", "xor~eax,eax", "add~i,0", "mov~esi,0", "mov~rdi,r15", "add~rbp,valsize", "call~FOO", "mov~rcx,<TAG>", "test~rcx,rcx", "jnz~FOO"]]], "func_feature": [5, 11, 12, 1, 11, 15, 1, 82, 0.08182, 4, 7], "succs": [[8], [0, 3], [6], [2, 7], [8, 3], [3], [], [], [9, 4], [10, 4], [8, 5]], "fname": "argmatch_valid", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 0, 1, 0, 8, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "pop     arglist", "pop     vallist", "pop     arg", "pop     exit_fn", "pop     context", "pop     valsize", "retn"], ["add~rsp,0", "pop~arglist", "pop~vallist", "pop~arg", "pop~exit_fn", "pop~context", "pop~valsize", "retn"]], [1, 0, 1, 0, 3, 11, 0, 4, 1, 0, 0.0, ["mov     rdx, res; problem", "mov     rsi, arg; value", "mov     rdi, context; context", "call    argmatch_invalid", "mov     rdx, valsize; valsize", "mov     rsi, vallist; vallist", "mov     rdi, arglist; arglist", "call    argmatch_valid", "call    exit_fn", "mov     rax, 0FFFFFFFFFFFFFFFFh", "jmp     short loc_A766"], ["mov~rdx,res", "mov~rsi,arg", "mov~rdi,context", "call~FOO", "mov~rdx,valsize", "mov~rsi,vallist", "mov~rdi,arglist", "call~FOO", "call~exit_fn", "mov~rax,0", "jmp~FOO"]], [1, 0, 2, 1, 1, 20, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r14, context", "push    r13", "push    r12", "mov     r12, arg", "push    rbp", "push    rbx", "mov     rbp, vallist", "mov     rbx, arglist", "mov     vallist, valsize; valsize", "mov     arglist, vallist; vallist", "sub     rsp, 8", "mov     arg, arglist; arglist", "mov     context, arg; arg", "mov     r15, valsize", "mov     r13, exit_fn", "call    argmatch", "test    res, res", "js      short loc_A775"], ["push~r15", "push~r14", "mov~r14,context", "push~r13", "push~r12", "mov~r12,arg", "push~rbp", "push~rbx", "mov~rbp,vallist", "mov~rbx,arglist", "mov~vallist,valsize", "mov~arglist,vallist", "sub~rsp,0", "mov~arg,arglist", "mov~context,arg", "mov~r15,valsize", "mov~r13,exit_fn", "call~FOO", "test~res,res", "js~FOO"]]], "func_feature": [4, 1, 6, 0, 3, 3, 7, 39, 0.0, 0, 2], "succs": [[], [0], [0, 1]], "fname": "__xargmatch_internal", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 3, 0, 1, 6, 1, 2, 0, 0, 0.25, ["mov     rdx, valsize; n", "mov     rsi, rbp; s2", "mov     rdi, value; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_A7C0"], ["mov~rdx,valsize", "mov~rsi,rbp", "mov~rdi,value", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 1, 2, 0.16666666666666666, ["mov     r12, valsize", "mov     r13, value", "mov     rbp, vallist", "lea     rbx, [arglist+8]", "jmp     short loc_A7CF"], ["mov~r12,valsize", "mov~r13,value", "mov~rbp,vallist", "lea~rbx,[arglist+0]", "jmp~FOO"]], [1, 0, 3, 2, 0, 5, 1, 1, 3, 1, 0.0, ["mov     r14, [rbx]", "add     rbp, valsize", "add     rbx, 8", "test    r14, r14", "jz      short loc_A7E1"], ["mov~r14,<TAG>", "add~rbp,valsize", "add~rbx,0", "test~r14,r14", "jz~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 1, 0, 0.0, ["pop     rbx", "mov     rax, r14", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "retn"], ["pop~rbx", "mov~rax,r14", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "retn"]], [0, 0, 4, 0, 0, 8, 1, 1, 0, 1, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     r14, [arglist]", "test    r14, r14", "jz      short loc_A7E1"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~r14,<TAG>", "test~r14,r14", "jz~FOO"]]], "func_feature": [1, 3, 5, 0, 5, 7, 0, 31, 0.08333, 0, 2], "succs": [[2, 3], [0], [0, 3], [], [1, 3]], "fname": "argmatch_to_argument", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 6, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666669, ["test    sil, sil", "jz      short loc_A82A"], ["test~sil,sil", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 3, 2, 0.33333333333333337, ["cmp     dl, 2Fh ; '/'", "jnz     short loc_A820"], ["cmp~dl,0", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 0, 5, 2, 0.0, ["mov     base, p", "xor     esi, esi"], ["mov~base,p", "xor~esi,esi"]], [2, 0, 9, 1, 0, 4, 0, 1, 2, 2, 0.08888888888888889, ["add     base, 1", "movzx   edx, byte ptr [base]", "cmp     dl, 2Fh ; '/'", "jz      short loc_A800"], ["add~base,0", "movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 1, 3, 0.011111111111111112, ["nop     dword ptr [base+base+00h]"], ["nop~[word ptr [base+0]"]], [0, 0, 7, 0, 0, 2, 1, 1, 1, 1, 0.23333333333333334, ["test    dl, dl", "jz      short locret_A84A"], ["test~dl,dl", "jz~FOO"]], [1, 0, 10, 0, 0, 4, 0, 1, 0, 2, 0.0, ["movzx   edx, byte ptr [base]", "mov     rax, base", "cmp     dl, 2Fh ; '/'", "jnz     short loc_A80C"], ["movzx~edx,<TAG>", "mov~rax,base", "cmp~dl,0", "jnz~FOO"]], [2, 0, 6, 1, 0, 5, 1, 1, 4, 1, 0.022222222222222223, ["add     p, 1", "movzx   edx, byte ptr [rcx]", "mov     esi, 1", "test    dl, dl", "jnz     short loc_A835"], ["add~p,0", "movzx~edx,<TAG>", "mov~esi,0", "test~dl,dl", "jnz~FOO"]], [1, 0, 6, 1, 0, 4, 1, 1, 5, 1, 0.07777777777777778, ["add     p, 1", "movzx   edx, byte ptr [p]", "test    dl, dl", "jz      short locret_A84A"], ["add~p,0", "movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 2, 3, 0.22222222222222224, ["mov     rcx, p", "xor     esi, esi", "jmp     short loc_A835"], ["mov~rcx,p", "xor~esi,esi", "jmp~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 6, 8, 0, 11, 17, 2, 30, 0.10505, 0, 3], "succs": [[8, 2], [0, 7], [8], [3, 5], [3], [9, 10], [4, 5], [1, 10], [1, 10], [1], []], "fname": "last_component", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 19, 0, 0, 2, 1, 1, 0, 0, 0.029644268774703556, ["test    cl, cl", "jz      short loc_A889"], ["test~cl,cl", "jz~FOO"]], [1, 0, 19, 0, 0, 2, 0, 1, 3, 7, 0.14031620553359683, ["cmp     al, 2Fh ; '/'", "jnz     short loc_A880"], ["cmp~al,0", "jnz~FOO"]], [0, 0, 19, 0, 0, 2, 1, 0, 5, 7, 0.0, ["mov     rbx, rdx", "xor     ecx, ecx"], ["mov~rbx,rdx", "xor~ecx,ecx"]], [1, 0, 1, 1, 0, 6, 0, 1, 3, -1, 0.024703557312252964, ["add     rsp, 8", "mov     rdi, name; string", "mov     rsi, rax; n", "pop     rbx", "pop     name", "jmp     xstrndup"], ["add~rsp,0", "mov~rdi,name", "mov~rsi,rax", "pop~rbx", "pop~name", "jmp~FOO"]], [1, 0, 6, 0, 1, 4, 0, 1, 2, -1, 0.12351778656126482, ["mov     name, rbp; s", "call    _strlen", "cmp     rax, 1", "jbe     short loc_A901"], ["mov~name,rbp", "call~FOO", "cmp~rax,0", "jbe~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 4, -1, 0.05731225296442687, ["cmp     rdx, 1", "mov     rax, rdx", "jz      short loc_A901"], ["cmp~rdx,0", "mov~rax,rdx", "jz~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 5, -1, 0.02766798418972332, ["cmp     byte ptr [name+rax-1], 2Fh ; '/'", "lea     rdx, [rax-1]", "jnz     short loc_A901"], ["cmp~[yte ptr [name+0],0", "lea~rdx,[rax-1]+0]", "jnz~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 3, -1, 0.07114624505928853, ["cmp     byte ptr [name+rax-1], 2Fh ; '/'", "lea     rdx, [rax-1]", "jz      short loc_A918"], ["cmp~[yte ptr [name+0],0", "lea~rdx,[rax-1]+0]", "jz~FOO"]], [1, 0, 19, 1, 0, 4, 1, 1, 5, 6, 0.06521739130434782, ["add     rdx, 1", "movzx   eax, byte ptr [rdx]", "test    al, al", "jz      short loc_A8A8"], ["add~rdx,0", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 19, 0, 0, 3, 1, 1, 2, 8, 0.09486166007905138, ["mov     rdx, rbx", "xor     ecx, ecx", "jmp     short loc_A894"], ["mov~rdx,rbx", "xor~ecx,ecx", "jmp~FOO"]], [2, 0, 19, 1, 0, 5, 1, 1, 4, 6, 0.11067193675889328, ["add     rdx, 1", "movzx   eax, byte ptr [rdx]", "mov     ecx, 1", "test    al, al", "jnz     short loc_A894"], ["add~rdx,0", "movzx~eax,<TAG>", "mov~ecx,0", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [2, 0, 1, 2, 0, 10, 1, 1, 7, -1, 0.016798418972332016, ["xor     edx, edx", "cmp     byte ptr [rbx+rax], 2Fh ; '/'", "mov     rdi, rbx; string", "setz    dl", "add     rsp, 8", "pop     rbx", "pop     name", "add     rax, rdx", "mov     rsi, length; n", "jmp     xstrndup"], ["xor~edx,edx", "cmp~<TAG>,0", "mov~rdi,rbx", "setz~dl", "add~rsp,0", "pop~rbx", "pop~name", "add~rax,rdx", "mov~rsi,length", "jmp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 10, 0, 0.001976284584980237, ["jmp     short loc_A930"], ["jmp~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 9, 1, 0.02766798418972332, ["cmp     byte ptr [rbx+rax-1], 2Fh ; '/'", "lea     rdx, [rax-1]", "jnz     short loc_A8C6"], ["cmp~[yte ptr [rbx+0],0", "lea~rdx,[rax-1]+0]", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 6, -1, 0.001976284584980237, ["jmp     short loc_A918"], ["jmp~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 5, 5, 0.20158102766798416, ["cmp     byte ptr [rbx], 0", "jz      short loc_A8E8"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 8, 2, 0.05731225296442687, ["cmp     rdx, 1", "mov     rax, rdx", "jz      short loc_A8C6"], ["cmp~rdx,0", "mov~rax,rdx", "jz~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 7, 3, 0.07114624505928853, ["cmp     byte ptr [rbx+rax-1], 2Fh ; '/'", "lea     rdx, [rax-1]", "jz      short loc_A930"], ["cmp~[yte ptr [rbx+0],0", "lea~rdx,[rax-1]+0]", "jz~FOO"]], [1, 0, 6, 0, 1, 4, 0, 1, 6, 4, 0.11561264822134387, ["mov     name, rbx; s", "call    _strlen", "cmp     rax, 1", "jbe     short loc_A8C6"], ["mov~name,rbx", "call~FOO", "cmp~rax,0", "jbe~FOO"]], [2, 0, 23, 1, 0, 8, 0, 1, 0, 10, 0.0, ["push    rbp", "push    rbx", "mov     rbp, name", "mov     rbx, name", "sub     rsp, 8", "movzx   eax, byte ptr [name]", "cmp     al, 2Fh ; '/'", "jnz     short loc_A873"], ["push~rbp", "push~rbx", "mov~rbp,name", "mov~rbx,name", "sub~rsp,0", "movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [0, 0, 22, 0, 0, 1, 0, 0, 1, 11, 0.001976284584980237, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [2, 0, 22, 1, 0, 4, 0, 1, 2, 10, 0.04150197628458498, ["add     rbx, 1", "movzx   eax, byte ptr [rbx]", "cmp     al, 2Fh ; '/'", "jz      short loc_A868"], ["add~rbx,0", "movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [0, 0, 20, 0, 0, 2, 1, 1, 1, 9, 0.11857707509881422, ["test    al, al", "jz      short loc_A8E8"], ["test~al,al", "jz~FOO"]]], "func_feature": [2, 7, 21, 0, 24, 39, 0, 79, 0.05838, 0, 7], "succs": [[8, 2], [0, 10], [8], [11], [3, 7], [3, 6], [3, 15], [3, 5], [16, 1], [1], [16, 1], [], [11], [17], [12, 13], [5], [19, 4], [12, 14], [17, 12], [18, 12], [21, 23], [22], [22, 23], [9, 4]], "fname": "base_name", "n_num": 24}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 5, 0, 0, 3, 0, 1, 0, 0, 0.16666666666666666, ["cmp     byte ptr [name+len-1], 2Fh ; '/'", "lea     rax, [len-1]", "jz      short loc_A970"], ["cmp~[yte ptr [name+0],0", "lea~rax,[len-1]+0]", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 1, 0.2857142857142857, ["cmp     len, 1", "jz      short loc_A990"], ["cmp~len,0", "jz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 1, 2, 0.11904761904761904, ["cmp     byte ptr [name+len-1], 2Fh ; '/'", "lea     rdx, [len-1]", "jz      short loc_A978"], ["cmp~[yte ptr [name+0],0", "lea~rdx,[len-1]+0]", "jz~FOO"]], [1, 0, 7, 0, 1, 5, 0, 1, 0, 3, 0.0, ["push    rbx", "mov     rbx, name", "call    _strlen", "cmp     len, 1", "jbe     short loc_A96A"], ["push~rbx", "mov~rbx,name", "call~FOO", "cmp~len,0", "jbe~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     name", "retn"], ["pop~name", "retn"]], [0, 0, 0, 0, 0, 3, 0, 0, 4, -1, 0.0, ["mov     rax, len", "pop     name", "retn"], ["mov~rax,len", "pop~name", "retn"]], [0, 0, 5, 0, 0, 2, 0, 0, 4, 2, 0.047619047619047616, ["mov     len, rax", "nop     dword ptr [rax+rax+00h]"], ["mov~len,rax", "nop~[word ptr [rax+0]"]], [1, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0.0, ["mov     eax, 1", "pop     name", "retn"], ["mov~eax,0", "pop~name", "retn"]]], "func_feature": [1, 0, 4, 0, 8, 9, 1, 23, 0.07738, 0, 0], "succs": [[5, 6], [0, 7], [1, 4], [2, 4], [], [], [1], []], "fname": "base_len", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:file_name, file", "retn"], ["mov~<TAG>,file", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 3, 0, 2, 10, 2, 3, 0, 0, 0.06666666666666667, ["lea     rsi, aWriteError; \"write error\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r12, cs:file_name", "mov     rbp, rax", "call    ___errno_location", "mov     rbx, rax", "test    r12, r12", "jz      short loc_AA2E"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r12,<TAG>", "mov~rbp,rax", "call~FOO", "mov~rbx,rax", "test~r12,r12", "jz~FOO"]], [0, 0, 6, 0, 1, 7, 1, 2, 0, 2, 0.0, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "push    r12", "push    rbp", "push    rbx", "call    close_stream", "test    eax, eax", "jnz     short loc_A9D9"], ["mov~rdi,<TAG>", "push~r12", "push~rbp", "push~rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 1, 0, 1, 7, 2, 2, 2, 0, 0.016666666666666666, ["mov     esi, [rax]; errnum", "lea     rdx, aInvalidTabSize+12h; format", "mov     rcx, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_AA23"], ["mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     edi, cs:exit_failure; status", "call    __exit"], ["mov~edi,<TAG>", "call~FOO"]], [0, 0, 2, 0, 1, 4, 1, 2, 1, -1, 0.06666666666666667, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jnz     short loc_AA23"], ["mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 1, 0, 2, 9, 2, 2, 2, -1, 0.016666666666666666, ["mov     rdi, r12; arg", "call    quotearg_colon", "mov     esi, [rbx]; errnum", "lea     rdx, aSS_1; \"%s: %s\"", "mov     rcx, rax", "mov     r8, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,r12", "call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["pop     rbx", "pop     rbp", "pop     r12", "retn"], ["pop~rbx", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [8, 8, 12, 0, 7, 8, 0, 43, 0.02381, 7, 0], "succs": [[2, 5], [0, 4], [3], [], [3, 6], [3], []], "fname": "close_stdout", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[10, 1, 5, 2, 0, 21, 6, 1, 0, 0, 0.2380952380952381, ["mov     [str+3], al", "mov     eax, edi", "and     eax, 20h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFBBh", "add     eax, 72h ; 'r'", "mov     [str+4], al", "mov     eax, edi", "and     eax, 10h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB6h", "add     eax, 77h ; 'w'", "mov     [str+5], al", "mov     eax, edi", "and     eax, 8", "cmp     eax, 1", "sbb     eax, eax", "test    edi, 400h", "jz      loc_ABC8"], ["mov~[str+0],al", "mov~eax,edi", "and~eax,<STR>", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "test~edi,0", "jz~FOO"]], [2, 0, 6, 1, 0, 3, 1, 1, 2, 2, 0.1142857142857143, ["and     eax, 0FFFFFFB5h", "add     eax, 78h ; 'x'", "jmp     loc_AB08"], ["and~eax,0", "add~eax,0", "jmp~FOO"]], [2, 0, 6, 1, 0, 2, 1, 0, 2, 2, 0.1142857142857143, ["and     eax, 0FFFFFFE0h", "add     eax, 73h ; 's'"], ["and~eax,0", "add~eax,0"]], [2, 1, 0, 1, 0, 6, 1, 0, 6, -1, 0.0, ["and     eax, 0FFFFFFB5h", "add     eax, 78h ; 'x'", "mov     [str+9], al", "mov     eax, 20h ; ' '", "mov     [str+0Ah], ax", "retn"], ["and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,<STR>", "mov~[str+0],ax", "retn"]], [10, 1, 2, 2, 0, 21, 6, 1, 5, -1, 0.12380952380952381, ["mov     [str+6], al", "mov     eax, edi", "and     eax, 4", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFBBh", "add     eax, 72h ; 'r'", "mov     [str+7], al", "mov     eax, edi", "and     eax, 2", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB6h", "add     eax, 77h ; 'w'", "mov     [str+8], al", "mov     eax, edi", "and     eax, 1", "cmp     eax, 1", "sbb     eax, eax", "and     edi, 200h", "jz      short loc_ABB0"], ["mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~edi,<STR>", "jz~FOO"]], [3, 0, 15, 0, 0, 5, 1, 1, 0, 4, 0.0, ["mov     edx, edi", "mov     eax, 2Dh ; '-'", "and     edx, 0F000h", "cmp     edx, 8000h", "jz      short loc_AAC0"], ["mov~edx,edi", "mov~eax,0", "and~edx,0", "cmp~edx,0", "jz~FOO"]], [1, 1, 10, 0, 0, 3, 0, 1, 5, 4, 0.02380952380952381, ["cmp     edx, 1000h", "mov     eax, 70h ; 'p'", "jz      short loc_AAC0"], ["cmp~edx,<STR>", "mov~eax,0", "jz~FOO"]], [2, 0, 11, 0, 0, 3, 0, 1, 4, 4, 0.0380952380952381, ["cmp     edx, 0A000h", "mov     eax, 6Ch ; 'l'", "jz      short loc_AAC0"], ["cmp~edx,0", "mov~eax,0", "jz~FOO"]], [9, 2, 8, 2, 0, 21, 6, 1, 1, 3, 0.2666666666666667, ["mov     [str], al", "mov     eax, edi", "and     eax, 100h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFBBh", "add     eax, 72h ; 'r'", "mov     [str+1], al", "mov     eax, edi", "and     eax, 80h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB6h", "add     eax, 77h ; 'w'", "mov     [str+2], al", "mov     eax, edi", "and     eax, 40h", "cmp     eax, 1", "sbb     eax, eax", "test    edi, 800h", "jz      loc_ABA0"], ["mov~<TAG>,al", "mov~eax,edi", "and~eax,<STR>", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,<STR>", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "test~edi,0", "jz~FOO"]], [2, 0, 3, 1, 0, 3, 1, 1, 4, 0, 0.07857142857142858, ["and     eax, 0FFFFFFB5h", "add     eax, 78h ; 'x'", "jmp     loc_AB4D"], ["and~eax,0", "add~eax,0", "jmp~FOO"]], [2, 0, 3, 1, 0, 2, 1, 0, 4, -1, 0.07857142857142858, ["and     eax, 0FFFFFFE0h", "add     eax, 73h ; 's'"], ["and~eax,0", "add~eax,0"]], [2, 0, 12, 0, 0, 3, 0, 1, 3, 4, 0.04285714285714286, ["cmp     edx, 2000h", "mov     eax, 63h ; 'c'", "jz      short loc_AAC0"], ["cmp~edx,0", "mov~eax,0", "jz~FOO"]], [1, 1, 13, 0, 0, 3, 0, 1, 2, 4, 0.0380952380952381, ["cmp     edx, 6000h", "mov     eax, 62h ; 'b'", "jz      short loc_AAC0"], ["cmp~edx,<STR>", "mov~eax,0", "jz~FOO"]], [2, 0, 14, 0, 0, 3, 0, 1, 1, 4, 0.02380952380952381, ["cmp     edx, 4000h", "mov     eax, 64h ; 'd'", "jz      short loc_AAC0"], ["cmp~edx,0", "mov~eax,0", "jz~FOO"]], [2, 1, 9, 0, 0, 5, 0, 0, 6, 4, 0.0, ["cmp     edx, 0C000h", "mov     eax, 73h ; 's'", "mov     edx, 3Fh ; '?'", "cmovnz  eax, edx", "nop     dword ptr [rax+00000000h]"], ["cmp~edx,<STR>", "mov~eax,0", "mov~edx,0", "cmovnz~eax,edx", "nop~[word ptr [rax+0]"]], [2, 1, 0, 1, 0, 6, 1, 0, 6, -1, 0.0, ["and     eax, 0FFFFFFE0h", "add     eax, 74h ; 't'", "mov     [str+9], al", "mov     eax, 20h ; ' '", "mov     [str+0Ah], ax", "retn"], ["and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,<STR>", "mov~[str+0],ax", "retn"]]], "func_feature": [0, 25, 11, 0, 16, 23, 1, 110, 0.07381, 0, 12], "succs": [[9, 10], [0], [0], [], [3, 15], [8, 13], [8, 14], [8, 6], [1, 2], [4], [4], [8, 7], [8, 11], [8, 12], [8], []], "fname": "strmode", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     edi, [statp+18h]; mode", "jmp     strmode"], ["mov~edi,[statp+0]", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 1, 2, 0.0, 0, 0], "succs": [[1], []], "fname": "filemodestring", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 4, 1, 2, 9, 1, 3, 0, 0, 0.2777777777777778, ["mov     rdi, r12; s", "call    _strlen", "lea     rdi, [rbx+dirlen+1]", "mov     [rsp+48h+baselen], rax", "add     rdi, baselen_0; size", "call    malloc", "test    rax, rax", "mov     dirbase, rax", "jz      short loc_AC9E"], ["mov~rdi,r12", "call~FOO", "lea~rdi,[rbx+0]", "mov~<TAG>,rax", "add~rdi,baselen_0", "call~FOO", "test~rax,rax", "mov~dirbase,rax", "jz~FOO"]], [2, 0, 7, 1, 0, 3, 0, 1, 2, 1, 0.1111111111111111, ["add     r12, 1", "cmp     byte ptr [r12], 2Fh ; '/'", "jnz     short loc_AC41"], ["add~r12,0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 7, 0, 0, 4, 0, 1, 1, 2, 0.19444444444444442, ["movzx   eax, byte ptr [abase]", "cmp     al, 2Fh ; '/'", "mov     [rsp+48h+var_39], al", "jz      short loc_ACB0"], ["movzx~eax,<TAG>", "cmp~al,0", "mov~[rsp+0],al", "jz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 3, 0, 0.0, ["jmp     short loc_ACB0"], ["jmp~FOO"]], [1, 0, 9, 3, 2, 20, 1, 3, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r15, base_in_result", "push    r13", "push    r12", "mov     r14, dir", "push    rbp", "push    rbx", "mov     r12, abase", "sub     rsp, 18h", "call    last_component", "mov     r13, rax", "mov     rdi, dirbase; name", "mov     rbp, r13", "sub     rbp, dir", "call    base_len", "add     rbp, rax", "test    rax, rax", "mov     rbx, rax", "jz      short loc_AC34"], ["push~r15", "push~r14", "mov~r15,base_in_result", "push~r13", "push~r12", "mov~r14,dir", "push~rbp", "push~rbx", "mov~r12,abase", "sub~rsp,0", "call~FOO", "mov~r13,rax", "mov~rdi,dirbase", "mov~rbp,r13", "sub~rbp,dir", "call~FOO", "add~rbp,rax", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [1, 0, 2, 1, 0, 6, 1, 0, 4, -1, 0.0, ["xor     eax, eax", "cmp     [rsp+48h+var_39], 2Fh ; '/'", "mov     rcx, p", "setz    al", "sub     rcx, rax", "mov     [base_in_result], rcx"], ["xor~eax,eax", "cmp~[rsp+0],0", "mov~rcx,p", "setz~al", "sub~rcx,rax", "mov~<TAG>,rcx"]], [1, 0, 3, 0, 1, 8, 1, 2, 3, -1, 0.16666666666666666, ["mov     rdi, p_concat; dest", "mov     rdx, dirlen; n", "mov     rsi, dir; src", "call    _mempcpy", "test    base_in_result, base_in_result", "mov     byte ptr [rax], 2Fh ; '/'", "lea     rdi, [rax+rbx]; dest", "jz      short loc_AC8F"], ["mov~rdi,p_concat", "mov~rdx,dirlen", "mov~rsi,dir", "call~FOO", "test~base_in_result,base_in_result", "mov~<TAG>,0", "lea~rdi,<TAG>", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 3, -1, 0.0, ["add     rsp, 18h", "mov     rax, p_concat", "pop     rbx", "pop     dirlen", "pop     r12", "pop     p_concat", "pop     dir", "pop     base_in_result", "retn"], ["add~rsp,0", "mov~rax,p_concat", "pop~rbx", "pop~dirlen", "pop~r12", "pop~p_concat", "pop~dir", "pop~base_in_result", "retn"]], [1, 0, 1, 0, 1, 4, 0, 1, 4, -1, 0.027777777777777776, ["mov     rdx, [rsp+48h+baselen]; n", "mov     rsi, r12; src", "call    _mempcpy", "mov     byte ptr [rax], 0"], ["mov~rdx,<TAG>", "mov~rsi,r12", "call~FOO", "mov~<TAG>,0"]], [1, 0, 8, 0, 0, 3, 0, 0, 1, 3, 0.0, ["cmp     byte ptr [dirbase+dirbaselen-1], 2Fh ; '/'", "setnz   bl", "movzx   ebx, bl"], ["cmp~[yte ptr [dirbase+0],0", "setnz~bl", "movzx~ebx,bl"]]], "func_feature": [6, 4, 12, 0, 10, 14, 1, 67, 0.07778, 0, 7], "succs": [[6, 7], [0, 3], [0, 1], [1], [9, 2], [8], [8, 5], [], [7], [2]], "fname": "mfile_name_concat", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 4, 1, 2, 0, 1, 0.0, ["sub     rsp, 8", "call    mfile_name_concat", "test    p, p", "jz      short loc_ACD3"], ["sub~rsp,0", "call~FOO", "test~p,p", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 1, 3, 0, 3, 2, 1, 7, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "file_name_concat", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 3, 1, 1, 7, 1, 1, 0, 0, 0.0, ["mov     rdi, rsp; tv", "xor     esi, esi; tz", "call    _gettimeofday", "mov     rax, [rsp+28h+tv.tv_sec]", "mov     [ts], rax", "imul    rax, [rsp+28h+tv.tv_usec], 3E8h", "mov     [ts+8], rax"], ["mov~rdi,rsp", "xor~esi,esi", "call~FOO", "mov~rax,<TAG>", "mov~<TAG>,rax", "imul~rax,[rsp+0],0", "mov~[ts+0],rax"]], [0, 1, 4, 1, 1, 11, 3, 2, 0, 2, 0.0, ["push    rbx", "mov     rsi, ts; tp", "mov     rbx, ts", "xor     edi, edi; clock_id", "sub     rsp, 20h", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "call    _clock_gettime", "test    eax, eax", "jz      short loc_AD24"], ["push~rbx", "mov~rsi,ts", "mov~rbx,ts", "xor~edi,edi", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 1, 0, 1, 0, 3, 0, 0, 2, -1, 0.0, ["add     rsp, 20h", "pop     ts", "retn"], ["add~rsp,<STR>", "pop~ts", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.3333333333333333, ["mov     rax, [rsp+28h+var_10]", "xor     rax, fs:28h", "jnz     short loc_AD3A"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 5, 5, 1, 5, 5, 1, 25, 0.06667, 1, 3], "succs": [[3], [0, 3], [], [2, 4], []], "fname": "gettime", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [2, 0, 3, 1, 1, 7, 2, 2, 0, 2, 0.0, ["sub     rsp, 8", "xor     esi, esi; locale", "call    _setlocale", "mov     rdx, rax", "mov     eax, 1", "test    p, p", "jz      short loc_AD75"], ["sub~rsp,0", "xor~esi,esi", "call~FOO", "mov~rdx,rax", "mov~eax,0", "test~p,p", "jz~FOO"]], [2, 0, 2, 0, 0, 9, 2, 1, 1, 1, 0.16666666666666666, ["lea     rdi, aC; \"C\"", "mov     ecx, 2", "mov     rsi, p", "repe cmpsb", "setnbe  cl", "sbb     cl, 0", "xor     eax, eax", "test    cl, cl", "jnz     short loc_AD80"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,p", "cmpsb~<TAG>,<TAG>", "setnbe~cl", "sbb~cl,0", "xor~eax,eax", "test~cl,cl", "jnz~FOO"]], [3, 0, 0, 1, 0, 10, 1, 0, 2, 0, 0.0, ["lea     rdi, aPosix; \"POSIX\"", "mov     ecx, 6", "mov     rsi, rdx", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "setnz   al", "add     rsp, 8", "retn"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,rdx", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "setnz~al", "add~rsp,0", "retn"]]], "func_feature": [1, 5, 3, 0, 4, 4, 2, 28, 0.04167, 2, 3], "succs": [[], [0, 2], [0, 3], []], "fname": "hard_locale", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0.0, ["movdqu  xmm0, xmmword ptr [next]", "movups  xmmword ptr [bucket], xmm0", "mov     qword ptr [next], 0", "mov     rcx, [table+48h]", "mov     [next+8], rcx", "mov     [table+48h], next", "pop     bucket", "pop     entry", "pop     r12", "pop     table", "pop     bucket_head", "retn"], ["movdqu~xmm0,<TAG>", "movups~<TAG>,xmm0", "mov~<TAG>,0", "mov~rcx,[table+0]", "mov~[next+0],rcx", "mov~[table+0],next", "pop~bucket", "pop~entry", "pop~r12", "pop~table", "pop~bucket_head", "retn"]], [0, 0, 3, 0, 0, 3, 1, 1, 4, -1, 0.04395604395604396, ["mov     rdx, [bucket+8]", "test    rdx, rdx", "jz      loc_AE80"], ["mov~rdx,[bucket+0]", "test~rdx,rdx", "jz~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 3, -1, 0.1043956043956044, ["mov     rax, [cursor+8]", "test    rax, rax", "jnz     short loc_AE28"], ["mov~rax,[cursor+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 11, 0, 1, 4, 1, 2, 2, -1, 0.09890109890109891, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jz      short loc_AE3A"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 5, -1, 0.01098901098901099, ["mov     cursor, [cursor+8]"], ["mov~cursor,[cursor+0]"]], [0, 0, 1, 0, 0, 1, 1, 0, 2, -1, 0.02197802197802198, ["xor     eax, eax"], ["xor~eax,eax"]], [0, 0, 12, 0, 0, 4, 1, 1, 1, -1, 0.06593406593406594, ["mov     [bucket_head], bucket", "mov     rsi, [bucket]", "test    rsi, rsi", "jz      short loc_AE43"], ["mov~<TAG>,bucket", "mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 14, 2, 1, 17, 0, 1, 0, 1, 0.0, ["push    r14", "push    r13", "mov     r13, table", "push    r12", "push    rbp", "mov     rbp, entry", "push    rbx", "mov     rbx, [table]", "mov     r14, bucket_head", "mov     entry, [table+10h]", "mov     r12d, ecx", "mov     table, entry", "call    qword ptr [table+30h]", "shl     rax, 4", "add     rbx, rax", "cmp     [table+8], bucket", "jbe     loc_AE89"], ["push~r14", "push~r13", "mov~r13,table", "push~r12", "push~rbp", "mov~rbp,entry", "push~rbx", "mov~rbx,<TAG>", "mov~r14,bucket_head", "mov~entry,[table+0]", "mov~r12d,ecx", "mov~table,entry", "call~[word ptr [table+0]", "shl~rax,0", "add~rbx,rax", "cmp~[table+0],bucket", "jbe~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 5, -1, 0.005494505494505495, ["mov     qword ptr [bucket], 0", "jmp     short loc_AE45"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 3, -1, 0.05494505494505495, ["test    r12b, r12b", "mov     rax, [bucket]", "jz      short loc_AE45"], ["test~r12b,r12b", "mov~rax,<TAG>", "jz~FOO"]], [0, 0, 7, 0, 1, 5, 1, 2, 4, -1, 0.07692307692307693, ["mov     rsi, [rax]", "mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_AE50"], ["mov~rsi,<TAG>", "mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, -1, 0.038461538461538464, ["mov     rdx, [cursor+8]", "test    r12b, r12b", "mov     rax, [rdx]", "jz      short loc_AE45"], ["mov~rdx,[cursor+0]", "test~r12b,r12b", "mov~rax,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 0, 6, 0, 0, 3, -1, 0.0, ["pop     rbx", "pop     entry", "pop     r12", "pop     table", "pop     bucket_head", "retn"], ["pop~rbx", "pop~entry", "pop~r12", "pop~table", "pop~bucket_head", "retn"]], [1, 0, 0, 0, 0, 12, 0, 0, 6, -1, 0.0, ["mov     rcx, [next+8]", "mov     [cursor+8], rcx", "mov     qword ptr [next], 0", "mov     rcx, [table+48h]", "mov     [next+8], rcx", "mov     [table+48h], next", "pop     cursor", "pop     entry", "pop     r12", "pop     table", "pop     bucket_head", "retn"], ["mov~rcx,[next+0]", "mov~[cursor+0],rcx", "mov~<TAG>,0", "mov~rcx,[table+0]", "mov~[next+0],rcx", "mov~[table+0],next", "pop~cursor", "pop~entry", "pop~r12", "pop~table", "pop~bucket_head", "retn"]]], "func_feature": [4, 8, 12, 0, 15, 19, 2, 78, 0.0348, 0, 2], "succs": [[], [0, 9], [11, 5], [2, 10], [2], [13], [3, 5], [], [6, 7], [13], [1, 13], [12, 4], [13, 14], [], []], "fname": "hash_find_entry", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 0, 0, 0, 0.09027777777777778, ["lea     rax, default_tuning", "mov     [rdi], rax", "xor     eax, eax"], ["lea~rax,<TAG>", "mov~<TAG>,rax", "xor~eax,eax"]], [0, 0, 9, 0, 0, 4, 0, 0, 0, 2, 0.0, ["mov     rax, [rdi]", "movss   xmm0, dword ptr [tuning+8]", "ucomiss xmm0, cs:dword_15BA4", "jbe     short loc_AEF8"], ["mov~rax,<TAG>", "movss~xmm0,[word ptr [tuning+0]", "ucomiss~xmm0,<TAG>", "jbe~FOO"]], [0, 0, 8, 0, 0, 3, 0, 0, 1, 2, 0.08333333333333333, ["movss   xmm1, cs:dword_15BA8", "ucomiss xmm1, xmm0", "jbe     short loc_AEF8"], ["movss~xmm1,<TAG>", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [0, 0, 7, 0, 0, 3, 0, 0, 2, 2, 0.1388888888888889, ["movss   xmm1, dword ptr [tuning+0Ch]", "ucomiss xmm1, cs:dword_15BAC", "jbe     short loc_AEF8"], ["movss~xmm1,[word ptr [tuning+0]", "ucomiss~xmm1,<TAG>", "jbe~FOO"]], [0, 0, 6, 0, 0, 3, 0, 0, 3, 2, 0.16666666666666666, ["movss   xmm1, dword ptr [tuning]", "ucomiss xmm1, cs:dword_15BB0", "jb      short loc_AEF8"], ["movss~xmm1,<TAG>", "ucomiss~xmm1,<TAG>", "jb~FOO"]], [0, 0, 5, 0, 0, 4, 0, 0, 4, 2, 0.16666666666666666, ["addss   xmm1, cs:dword_15BA4", "movss   xmm2, dword ptr [tuning+4]", "ucomiss xmm2, xmm1", "jbe     short loc_AEF8"], ["addss~xmm1,<TAG>", "movss~xmm2,[word ptr [tuning+0]", "ucomiss~xmm2,xmm1", "jbe~FOO"]], [0, 0, 4, 0, 0, 3, 0, 0, 5, 2, 0.1388888888888889, ["movss   xmm3, cs:dword_15BB4", "ucomiss xmm3, xmm2", "jb      short loc_AEF8"], ["movss~xmm3,<TAG>", "ucomiss~xmm3,xmm2", "jb~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 7, 2, 0.013888888888888888, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 3, 0, 0, 3, 0, 1, 6, 1, 0.09027777777777778, ["ucomiss xmm0, xmm1", "mov     eax, 1", "ja      short locret_AF04"], ["ucomiss~xmm0,xmm1", "mov~eax,0", "ja~FOO"]]], "func_feature": [0, 1, 1, 0, 10, 16, 4, 28, 0.08889, 6, 0], "succs": [[8], [0, 2], [0, 3], [0, 4], [0, 5], [0, 6], [0, 9], [0], [], [8, 7]], "fname": "check_tuning", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+10h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_buckets", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+18h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_buckets_used", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+20h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_entries", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 7, 0, 0, 4, 1, 1, 0, 0, 0.20833333333333331, ["mov     rdx, [cursor+8]", "mov     ecx, 1", "test    cursor, cursor", "jz      short loc_AF75"], ["mov~rdx,[cursor+0]", "mov~ecx,0", "test~cursor,cursor", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 2, -1, 0.3055555555555555, ["cmp     qword ptr [bucket], 0", "jz      short loc_AF7C"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 7, 1, 0, 3, 0, 0, 3, -1, 0.2361111111111111, ["add     bucket, 10h", "cmp     bucket, rdi", "jb      short loc_AF50"], ["add~bucket,0", "cmp~bucket,rdi", "jb~FOO"]], [0, 0, 7, 0, 0, 2, 0, 0, 4, -1, 0.16666666666666666, ["cmp     max_bucket_length, rcx", "cmovb   max_bucket_length, rcx"], ["cmp~max_bucket_length,rcx", "cmovb~max_bucket_length,rcx"]], [0, 0, 7, 0, 0, 1, 0, 0, 4, -1, 0.08333333333333333, ["nop     dword ptr [max_bucket_length+00h]"], ["nop~[word ptr [max_bucket_length+0]"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 9, 0, 0, 5, 1, 0, 0, 1, 0.0, ["mov     bucket, [table]", "mov     table, [table+8]", "xor     eax, eax", "cmp     bucket, rdi", "jnb     short locret_AF87"], ["mov~bucket,<TAG>", "mov~table,[table+0]", "xor~eax,eax", "cmp~bucket,rdi", "jnb~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 1, -1, 0.09722222222222221, ["xchg    ax, ax"], ["xchg~ax,ax"]], [1, 0, 7, 1, 0, 4, 1, 1, 5, -1, 0.06944444444444445, ["mov     cursor, [cursor+8]", "add     bucket_length, 1", "test    cursor, cursor", "jnz     short loc_AF68"], ["mov~cursor,[cursor+0]", "add~bucket_length,0", "test~cursor,cursor", "jnz~FOO"]]], "func_feature": [0, 3, 3, 0, 10, 13, 0, 24, 0.11667, 0, 2], "succs": [[3, 4], [0, 2], [1, 5], [2], [9], [], [], [8, 6], [1], [9, 3]], "fname": "hash_get_max_bucket_length", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 8, 0, 0, 2, 0, 1, 0, 0, 0.17857142857142855, ["cmp     qword ptr [bucket], 0", "jz      short loc_AFCD"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 8, 1, 0, 3, 0, 0, 2, 2, 0.3214285714285714, ["add     bucket, 10h", "cmp     bucket, r8", "jb      short loc_AFA0"], ["add~bucket,0", "cmp~bucket,r8", "jb~FOO"]], [0, 0, 8, 0, 0, 6, 2, 0, 0, 2, 0.0, ["mov     bucket, [table]", "mov     r8, [table+8]", "xor     edx, edx", "xor     esi, esi", "cmp     bucket, r8", "jnb     short loc_AFD6"], ["mov~bucket,<TAG>", "mov~r8,[table+0]", "xor~edx,edx", "xor~esi,esi", "cmp~bucket,r8", "jnb~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["cmp     [table+20h], rdx", "setz    al", "retn"], ["cmp~[table+0],rdx", "setz~al", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.21428571428571427, ["xor     eax, eax", "cmp     [table+18h], rsi", "jz      short loc_AFE0"], ["xor~eax,eax", "cmp~[table+0],rsi", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 8, 1, 0, 4, 1, 1, 4, 3, 0.10714285714285714, ["mov     cursor, [cursor+8]", "add     n_entries, 1", "test    cursor, cursor", "jnz     short loc_AFC0"], ["mov~cursor,[cursor+0]", "add~n_entries,0", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 3, 4, 0.07142857142857142, ["nop     word ptr [cursor+cursor+00000000h]"], ["nop~[ord ptr [cursor+0]"]], [2, 0, 8, 2, 0, 5, 1, 1, 2, 3, 0.125, ["mov     rax, [cursor+8]", "add     n_buckets_used, 1", "add     n_entries, 1", "test    cursor, cursor", "jz      short loc_AFCD"], ["mov~rax,[cursor+0]", "add~n_buckets_used,0", "add~n_entries,0", "test~cursor,cursor", "jz~FOO"]]], "func_feature": [0, 5, 4, 0, 9, 13, 0, 28, 0.1131, 0, 4], "succs": [[8, 1], [0, 4], [0, 4], [], [3, 5], [], [1, 6], [6], [1, 7]], "fname": "hash_table_ok", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 13, 1, 0, 4, 1, 1, 0, 0, 0.06043956043956045, ["mov     rax, [rax+8]", "add     rdx, 1", "test    rax, rax", "jnz     short loc_B038"], ["mov~rax,[rax+0]", "add~rdx,0", "test~rax,rax", "jnz~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 4, 6, 0.03296703296703297, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 13, 0, 0, 2, 0, 1, 2, 4, 0.14835164835164835, ["cmp     qword ptr [rsi], 0", "jz      short loc_B04C"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 13, 1, 0, 3, 0, 0, 3, 3, 0.28571428571428575, ["add     rsi, 10h", "cmp     rsi, rdi", "jb      short loc_B020"], ["add~rsi,0", "cmp~rsi,rdi", "jb~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 1, 5, 0.03296703296703297, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 2, 0, 0, 2, 0, 0, 3, -1, 0.06043956043956045, ["pxor    xmm1, xmm1", "cvtsi2sd xmm1, rbp"], ["pxor~xmm1,xmm1", "cvtsi2sd~xmm1,rbp"]], [2, 0, 4, 0, 0, 11, 3, 0, 2, 1, 0.09890109890109891, ["mov     rax, r13", "mov     rdx, r13", "pxor    xmm0, xmm0", "shr     rax, 1", "and     edx, 1", "or      rax, rdx", "test    rbp, rbp", "cvtsi2sd xmm0, rax", "addsd   xmm0, xmm0", "mulsd   xmm0, cs:qword_15BC8", "jns     short loc_B09F"], ["mov~rax,r13", "mov~rdx,r13", "pxor~xmm0,xmm0", "shr~rax,0", "and~edx,0", "or~rax,rdx", "test~rbp,rbp", "cvtsi2sd~xmm0,rax", "addsd~xmm0,xmm0", "mulsd~xmm0,<TAG>", "jns~FOO"]], [0, 0, 4, 0, 0, 5, 1, 1, 2, 1, 0.09890109890109891, ["pxor    xmm0, xmm0", "test    rbp, rbp", "cvtsi2sd xmm0, r13", "mulsd   xmm0, cs:qword_15BC8", "js      short loc_B119"], ["pxor~xmm0,xmm0", "test~rbp,rbp", "cvtsi2sd~xmm0,r13", "mulsd~xmm0,<TAG>", "js~FOO"]], [4, 0, 1, 1, 1, 18, 1, 2, 4, -1, 0.07142857142857144, ["divsd   xmm0, xmm1", "lea     rdx, aBucketsUsedLu2; \"# buckets used:    %lu (%.2f%%)\\n\"", "mov     rcx, r13", "mov     rdi, stream", "mov     esi, 1", "mov     eax, 1", "call    ___fprintf_chk", "add     rsp, 8", "mov     rcx, rbx", "mov     rdi, stream", "pop     rbx", "pop     rbp", "pop     stream", "pop     r13", "lea     rdx, aMaxBucketLengt; \"max bucket length: %lu\\n\"", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["divsd~xmm0,xmm1", "lea~rdx,<TAG>", "mov~rcx,r13", "mov~rdi,stream", "mov~esi,0", "mov~eax,0", "call~FOO", "add~rsp,0", "mov~rcx,rbx", "mov~rdi,stream", "pop~rbx", "pop~rbp", "pop~stream", "pop~r13", "lea~rdx,<TAG>", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [2, 0, 2, 0, 0, 8, 2, 1, 3, 0, 0.06043956043956045, ["mov     rax, rbp", "pxor    xmm1, xmm1", "shr     rax, 1", "and     ebp, 1", "or      rax, rbp", "cvtsi2sd xmm1, rax", "addsd   xmm1, xmm1", "jmp     loc_B0A8"], ["mov~rax,rbp", "pxor~xmm1,xmm1", "shr~rax,0", "and~ebp,0", "or~rax,rbp", "cvtsi2sd~xmm1,rax", "addsd~xmm1,xmm1", "jmp~FOO"]], [2, 0, 6, 0, 2, 13, 3, 3, 1, 2, 0.26373626373626374, ["lea     rdx, aEntriesLu; \"# entries:         %lu\\n\"", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rdx, aBucketsLu; \"# buckets:         %lu\\n\"", "xor     eax, eax", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "call    ___fprintf_chk", "test    r13, r13", "js      short loc_B0F0"], ["lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rdx,<TAG>", "xor~eax,eax", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "call~FOO", "test~r13,r13", "js~FOO"]], [1, 0, 14, 1, 0, 14, 1, 0, 0, 3, 0.0, ["push    r13", "push    r12", "mov     r12, stream", "push    rbp", "push    rbx", "xor     ebx, ebx", "sub     rsp, 8", "mov     stream, [table]", "mov     rcx, [table+20h]", "mov     rbp, [table+10h]", "mov     r13, [table+18h]", "mov     table, [table+8]", "cmp     rsi, rdi", "jnb     short loc_B055"], ["push~r13", "push~r12", "mov~r12,stream", "push~rbp", "push~rbx", "xor~ebx,ebx", "sub~rsp,0", "mov~stream,<TAG>", "mov~rcx,[table+0]", "mov~rbp,[table+0]", "mov~r13,[table+0]", "mov~table,[table+0]", "cmp~rsi,rdi", "jnb~FOO"]], [0, 0, 13, 0, 0, 2, 0, 0, 4, 4, 0.16483516483516486, ["cmp     rbx, rdx", "cmovb   rbx, rdx"], ["cmp~rbx,rdx", "cmovb~rbx,rdx"]], [1, 0, 13, 0, 0, 4, 1, 1, 3, 5, 0.08241758241758243, ["mov     rax, [rsi+8]", "mov     edx, 1", "test    rax, rax", "jz      short loc_B045"], ["mov~rax,[rsi+0]", "mov~edx,0", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 5, -1, 0.0, [], []]], "func_feature": [3, 13, 10, 0, 15, 22, 0, 88, 0.09744, 5, 4], "succs": [[0, 12], [0], [3, 13], [2, 10], [2], [8], [9, 5], [9, 5], [14], [8], [6, 7], [10, 4], [3], [1, 12], []], "fname": "hash_print_statistics", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["pop     rbp", "xor     eax, eax", "pop     table", "pop     entry", "retn"], ["pop~rbp", "xor~eax,eax", "pop~table", "pop~entry", "retn"]], [0, 0, 1, 0, 0, 1, 0, 1, 2, -1, 0.03571428571428571, ["jmp     short loc_B191"], ["jmp~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 3, -1, 0.08928571428571427, ["mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_B178"], ["mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [1, 0, 8, 2, 1, 13, 0, 1, 0, 1, 0.0, ["push    r13", "push    r12", "mov     r13, entry", "push    rbp", "mov     rbp, [table]", "mov     r12, table", "mov     entry, [table+10h]", "mov     table, entry", "call    qword ptr [table+30h]", "shl     rax, 4", "add     rbp, rax", "cmp     [table+8], bucket", "jbe     short loc_B1AA"], ["push~r13", "push~r12", "mov~r13,entry", "push~rbp", "mov~rbp,<TAG>", "mov~r12,table", "mov~entry,[table+0]", "mov~table,entry", "call~[word ptr [table+0]", "shl~rax,0", "add~rbp,rax", "cmp~[table+0],bucket", "jbe~FOO"]], [0, 0, 5, 0, 1, 4, 1, 2, 2, -1, 0.17857142857142855, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_B1A0"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 1, -1, 0.10714285714285714, ["mov     rsi, [bucket+0]", "test    rsi, rsi", "jnz     short loc_B17C"], ["mov~rsi,[bucket+0]", "test~rsi,rsi", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 4, -1, 0.03571428571428571, ["mov     rsi, [cursor+0]"], ["mov~rsi,[cursor+0]"]], [0, 0, 0, 0, 0, 5, 0, 0, 3, -1, 0.0, ["mov     rax, [cursor+0]", "pop     cursor", "pop     table", "pop     entry", "retn"], ["mov~rax,[cursor+0]", "pop~cursor", "pop~table", "pop~entry", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [3, 4, 7, 0, 9, 10, 0, 36, 0.0496, 0, 2], "succs": [[], [0], [0, 6], [8, 5], [2, 7], [1, 4], [4], [], []], "fname": "hash_lookup", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 7, 0, 0, 4, 0, 0, 0, 0, 0.09722222222222221, ["mov     rdx, [table]", "mov     rcx, [table+8]", "cmp     bucket, rcx", "jnb     short loc_B1E8"], ["mov~rdx,<TAG>", "mov~rcx,[table+0]", "cmp~bucket,rcx", "jnb~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 0, 2, 0.0, ["cmp     qword ptr [table+20h], 0", "jz      short loc_B1E3"], ["cmp~[word ptr [table+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 1, 0, 1, -1, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 6, 0, 0, 3, 1, 1, 2, 3, 0.1388888888888889, ["mov     rax, [bucket]", "test    rax, rax", "jnz     short locret_B1E6"], ["mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 6, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 4, 0, 0, 3, 1, 1, 5, 2, 0.06944444444444445, ["mov     rax, [bucket]", "test    rax, rax", "jz      short loc_B1D0"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 3, 2, 0.1388888888888889, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 0, 1, 1, 2, 0, 1, 2, 0, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]], [1, 0, 4, 1, 0, 3, 0, 0, 4, 1, 0.15277777777777776, ["add     bucket, 10h", "cmp     bucket, rcx", "jnb     short loc_B1E8"], ["add~bucket,0", "cmp~bucket,rcx", "jnb~FOO"]]], "func_feature": [1, 3, 4, 0, 10, 11, 0, 22, 0.05972, 0, 2], "succs": [[8, 4], [0, 2], [], [], [3, 7], [], [9, 5], [9], [], [8, 6]], "fname": "hash_get_first", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 8, 0, 0, 2, 1, 1, 0, 0, 0.05454545454545454, ["test    rax, rax", "jz      short loc_B268"], ["test~rax,rax", "jz~FOO"]], [0, 0, 8, 0, 0, 4, 0, 1, 4, -1, 0.01818181818181818, ["mov     rcx, [cursor]", "mov     cursor, [cursor+8]", "cmp     rcx, entry", "jnz     short loc_B23F"], ["mov~rcx,<TAG>", "mov~cursor,[cursor+0]", "cmp~rcx,entry", "jnz~FOO"]], [0, 0, 8, 0, 0, 4, 0, 1, 2, -1, 0.07272727272727272, ["mov     rcx, [rax]", "mov     rax, [rax+8]", "cmp     rcx, entry", "jz      short loc_B250"], ["mov~rcx,<TAG>", "mov~rax,[rax+0]", "cmp~rcx,entry", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 3, -1, 0.03636363636363636, ["mov     rax, [bucket]", "test    rax, rax", "jnz     short loc_B258"], ["mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [1, 0, 4, 1, 0, 3, 0, 1, 2, -1, 0.14545454545454545, ["add     bucket, 10h", "cmp     rsi, bucket", "ja      short loc_B260"], ["add~bucket,0", "cmp~rsi,bucket", "ja~FOO"]], [1, 0, 11, 1, 1, 14, 0, 1, 0, 1, 0.0, ["push    r12", "push    rbp", "mov     r12, table", "push    rbx", "mov     rbx, [table]", "mov     rbp, entry", "mov     entry, [table+10h]", "mov     table, entry", "call    qword ptr [table+30h]", "mov     rsi, [table+8]", "shl     rax, 4", "lea     rdx, [rbx+rax]", "cmp     rsi, bucket", "jbe     short loc_B278"], ["push~r12", "push~rbp", "mov~r12,table", "push~rbx", "mov~rbx,<TAG>", "mov~rbp,entry", "mov~entry,[table+0]", "mov~table,entry", "call~[word ptr [table+0]", "mov~rsi,[table+0]", "shl~rax,0", "lea~rdx,<TAG>", "cmp~rsi,bucket", "jbe~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 1, -1, 0.08181818181818182, ["test    cursor, cursor", "mov     rax, cursor", "jz      short loc_B268"], ["test~cursor,cursor", "mov~rax,cursor", "jz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 3, -1, 0.09090909090909091, ["test    rax, rax", "jz      short loc_B268"], ["test~rax,rax", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, -1, 0.02727272727272727, ["mov     rax, [rax]"], ["mov~rax,<TAG>"]], [0, 0, 0, 0, 0, 5, 1, 0, 3, -1, 0.0, ["pop     rbx", "xor     eax, eax", "pop     entry", "pop     table", "retn"], ["pop~rbx", "xor~eax,eax", "pop~entry", "pop~table", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 4, -1, 0.0, ["pop     rbx", "pop     entry", "pop     table", "retn"], ["pop~rbx", "pop~entry", "pop~table", "retn"]]], "func_feature": [2, 5, 9, 0, 12, 17, 0, 46, 0.04394, 0, 2], "succs": [[1, 4], [0, 7], [0, 7], [11, 4], [9, 3], [10, 6], [2, 4], [8, 4], [11], [], [], []], "fname": "hash_get_next", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 10, 0, 0, 2, 0, 1, 6, -1, 0.17424242424242425, ["cmp     buffer_size, counter", "jz      short locret_B2E0"], ["cmp~buffer_size,counter", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 1, 0, 1, 0, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [0, 0, 12, 0, 0, 3, 0, 0, 0, 1, 0.0, ["mov     bucket, [table]", "cmp     [table+8], bucket", "jbe     short loc_B2E2"], ["mov~bucket,<TAG>", "cmp~[table+0],bucket", "jbe~FOO"]], [0, 0, 10, 0, 0, 5, 1, 1, 4, -1, 0.25, ["mov     [buffer+counter*8], rcx", "mov     rcx, [cursor+8]", "lea     rax, [counter+1]", "test    cursor, cursor", "jz      short loc_B2CA"], ["mov~<TAG>,rcx", "mov~rcx,[cursor+0]", "lea~rax,[counter+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 0, 3, -1, 0.2689393939393939, ["cmp     buffer_size, counter", "jbe     short loc_B2D7"], ["cmp~buffer_size,counter", "jbe~FOO"]], [0, 0, 10, 0, 0, 1, 1, 0, 1, -1, 0.07575757575757576, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [0, 0, 10, 0, 0, 1, 0, 0, 5, -1, 0.1590909090909091, ["nop     word ptr [counter+counter+00h]"], ["nop~[ord ptr [counter+0]"]], [1, 0, 10, 1, 0, 6, 1, 1, 7, -1, 0.09848484848484848, ["mov     r8, [cursor]", "add     counter, 1", "mov     [buffer+counter*8-8], r8", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_B2B0"], ["mov~r8,<TAG>", "add~counter,0", "mov~[buffer+0],r8", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 10, 0, 0, 3, 1, 1, 2, -1, 0.30303030303030304, ["mov     rcx, [bucket]", "test    rcx, rcx", "jz      short loc_B2CD"], ["mov~rcx,<TAG>", "test~rcx,rcx", "jz~FOO"]], [1, 0, 10, 1, 0, 3, 0, 1, 3, -1, 0.20833333333333334, ["add     bucket, 10h", "cmp     [table+8], bucket", "ja      short loc_B28C"], ["add~bucket,0", "cmp~[table+0],bucket", "ja~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 5, -1, 0.17424242424242425, ["mov     r8, counter"], ["mov~r8,counter"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     rax, counter", "retn"], ["mov~rax,counter", "retn"]]], "func_feature": [0, 5, 5, 0, 13, 17, 0, 32, 0.1317, 0, 2], "succs": [[], [0, 8], [], [2, 6], [11, 7], [12, 4], [9], [1], [1, 11], [10, 5], [9, 12], [10], []], "fname": "hash_get_entries", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 7, 0, 0, 1, 0, 0, 0, 0, 0.013888888888888888, ["mov     rdi, [cursor]"], ["mov~rdi,<TAG>"]], [1, 0, 7, 1, 0, 4, 1, 1, 5, -1, 0.19444444444444442, ["mov     cursor, [cursor+8]", "add     counter, 1", "test    cursor, cursor", "jnz     short loc_B320"], ["mov~cursor,[cursor+0]", "add~counter,0", "test~cursor,cursor", "jnz~FOO"]], [1, 0, 7, 1, 0, 3, 0, 1, 3, -1, 0.1388888888888889, ["add     bucket, 10h", "cmp     [table+8], bucket", "ja      short loc_B312"], ["add~bucket,0", "cmp~[table+0],bucket", "ja~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 2, -1, 0.25, ["mov     rdi, [bucket]", "test    rdi, rdi", "jz      short loc_B33A"], ["mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [1, 0, 9, 1, 0, 10, 0, 0, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r14, [table]", "cmp     [table+8], bucket", "jbe     short loc_B356"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r14,<TAG>", "cmp~[table+0],bucket", "jbe~FOO"]], [0, 0, 7, 0, 1, 4, 1, 2, 4, -1, 0.25, ["mov     rsi, processor_data", "call    processor", "test    al, al", "jz      short loc_B344"], ["mov~rsi,processor_data", "call~processor", "test~al,al", "jz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 3, -1, 0.16666666666666666, ["mov     rbx, bucket", "jmp     short loc_B323"], ["mov~rbx,bucket", "jmp~FOO"]], [0, 0, 7, 0, 0, 4, 1, 0, 1, -1, 0.08333333333333333, ["mov     r13, processor_data", "mov     r12, processor", "mov     r15, table", "xor     ebp, ebp"], ["mov~r13,processor_data", "mov~r12,processor", "mov~r15,table", "xor~ebp,ebp"]], [0, 0, 1, 0, 0, 2, 1, 1, 1, 0, 0.013888888888888888, ["xor     ebp, ebp", "jmp     short loc_B344"], ["xor~ebp,ebp", "jmp~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     bucket", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~bucket", "pop~r15", "retn"]]], "func_feature": [1, 5, 7, 0, 10, 14, 0, 42, 0.11111, 0, 4], "succs": [[5], [0, 2], [9, 3], [2, 6], [8, 7], [1, 9], [5], [3], [9], []], "fname": "hash_do_for_each", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, rdx", "retn"], ["mov~rax,rdx", "retn"]], [0, 0, 3, 0, 0, 4, 2, 1, 0, 0, 0.0, ["movzx   ecx, byte ptr [string]", "xor     edx, edx", "test    cl, cl", "jz      short loc_B38D"], ["movzx~ecx,<TAG>", "xor~edx,edx", "test~cl,cl", "jz~FOO"]], [2, 0, 2, 5, 0, 10, 2, 1, 2, 0, 0.16666666666666666, ["mov     rax, value", "add     string, 1", "shl     rax, 5", "sub     rax, value", "xor     edx, edx", "add     rax, ch_0", "movzx   ecx, byte ptr [rdi]", "div     n_buckets", "test    cl, cl", "jnz     short loc_B370"], ["mov~rax,value", "add~string,0", "shl~rax,0", "sub~rax,value", "xor~edx,edx", "add~rax,ch_0", "movzx~ecx,<TAG>", "div~,n_buckets", "test~cl,cl", "jnz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 1, 0, 0.16666666666666666, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]]], "func_feature": [0, 4, 2, 0, 4, 5, 0, 17, 0.08333, 0, 5], "succs": [[], [0, 3], [0, 2], [2]], "fname": "hash_string", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[3, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0.0, ["mov     rax, 3F80000000000000h", "mov     byte ptr [tuning+10h], 0", "mov     [tuning], rax", "mov     rax, 3FB4FDF43F4CCCCDh", "mov     [tuning+8], rax", "retn"], ["mov~rax,0", "mov~[yte ptr [tuning+0],0", "mov~<TAG>,rax", "mov~rax,0", "mov~[tuning+0],rax", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 6, 0.0, 0, 0], "succs": [[]], "fname": "hash_reset_tuning", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 13, 0, 0, 2, 1, 1, 0, 0, 0.0874384236453202, ["test    rcx, rcx", "jz      short loc_B4BD"], ["test~rcx,rcx", "jz~FOO"]], [2, 0, 13, 2, 0, 10, 0, 0, 8, -1, 0.2210591133004926, ["mov     rax, rbx", "mov     rcx, rbx", "mul     r8", "mov     rax, rdx", "shr     rax, 1", "lea     rax, [rax+rax*2]", "sub     rcx, rax", "cmp     rbx, 9", "mov     rax, rcx", "jbe     short loc_B4B8"], ["mov~rax,rbx", "mov~rcx,rbx", "mul~,r8", "mov~rax,rdx", "shr~rax,0", "lea~rax,<TAG>", "sub~rcx,rax", "cmp~rbx,0", "mov~rax,rcx", "jbe~FOO"]], [0, 0, 17, 0, 0, 2, 0, 0, 8, -1, 0.11822660098522167, ["ucomiss xmm0, cs:dword_15BC0", "jb      short loc_B5A4"], ["ucomiss~xmm0,<TAG>", "jb~FOO"]], [0, 0, 18, 0, 0, 3, 0, 0, 7, -1, 0.12931034482758622, ["divss   xmm0, xmm1", "ucomiss xmm0, cs:dword_15BBC", "jnb     short fail"], ["divss~xmm0,xmm1", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 26, 0, 0, 3, 1, 1, 3, 3, 0.08866995073891626, ["test    tuning, tuning", "lea     rdi, [table+28h]; table", "jz      loc_B545"], ["test~tuning,tuning", "lea~rdi,[table+0]", "jz~FOO"]], [0, 1, 27, 0, 1, 9, 1, 2, 2, 4, 0.06157635467980296, ["mov     rbx, candidate", "mov     edi, 50h ; 'P'; size", "mov     r15, tuning", "mov     rbp, hasher", "mov     r13, data_freer", "call    malloc", "test    rax, rax", "mov     r14, rax", "jz      loc_B540"], ["mov~rbx,candidate", "mov~edi,<STR>", "mov~r15,tuning", "mov~rbp,hasher", "mov~r13,data_freer", "call~FOO", "test~rax,rax", "mov~r14,rax", "jz~FOO"]], [3, 0, 13, 0, 0, 4, 0, 1, 10, -1, 0.05603448275862069, ["mov     edi, 10h", "mov     esi, 9", "mov     ecx, 3", "jmp     short loc_B4A1"], ["mov~edi,0", "mov~esi,0", "mov~ecx,0", "jmp~FOO"]], [4, 0, 1, 2, 0, 9, 0, 0, 12, -1, 0.0067733990147783255, ["shl     rbx, 4", "mov     qword ptr [table+18h], 0", "mov     qword ptr [table+20h], 0", "add     rbx, rax", "mov     [table+30h], hasher", "mov     [table+38h], comparator", "mov     [table+8], rbx", "mov     [table+40h], data_freer", "mov     qword ptr [table+48h], 0"], ["shl~rbx,0", "mov~[word ptr [table+0],0", "mov~[word ptr [table+0],0", "add~rbx,rax", "mov~[table+0],hasher", "mov~[table+0],comparator", "mov~[table+0],rbx", "mov~[table+0],data_freer", "mov~[word ptr [table+0],0"]], [1, 0, 4, 0, 1, 6, 1, 2, 11, -1, 0.03633004926108374, ["mov     esi, 10h; size", "mov     rdi, rbx; nmemb", "call    _calloc", "test    rax, rax", "mov     [table], rax", "jz      short fail"], ["mov~esi,0", "mov~rdi,rbx", "call~FOO", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [0, 0, 2, 0, 1, 2, 0, 1, 5, -1, 0.049876847290640396, ["mov     rdi, table; ptr", "call    free"], ["mov~rdi,table", "call~FOO"]], [0, 0, 23, 0, 1, 4, 1, 2, 4, 3, 0.07266009852216748, ["mov     [table+28h], tuning", "call    check_tuning", "test    al, al", "jz      fail"], ["mov~[table+0],tuning", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 14, 0, 0, 3, 0, 1, 6, -1, 0.21798029556650247, ["mov     rax, 0FFFFFFFFFFFFFFFh", "cmp     candidate, rax", "ja      fail"], ["mov~rax,0", "cmp~candidate,rax", "ja~FOO"]], [1, 0, 5, 0, 0, 4, 0, 1, 10, -1, 0.08866995073891626, ["mov     rax, 0FFFFFFFFFFFFFFFh", "mov     [table+10h], rbx", "cmp     rbx, rax", "ja      short fail"], ["mov~rax,0", "mov~[table+0],rbx", "cmp~rbx,rax", "ja~FOO"]], [0, 0, 22, 0, 1, 6, 1, 2, 4, 2, 0.038177339901477834, ["lea     table, default_tuning", "mov     [table+28h], rax", "call    check_tuning", "test    al, al", "movss   xmm1, cs:dword_15BB8", "jz      short fail"], ["lea~table,<TAG>", "mov~[table+0],rax", "call~FOO", "test~al,al", "movss~xmm1,<TAG>", "jz~FOO"]], [1, 0, 13, 1, 0, 3, 1, 1, 12, -1, 0.004310344827586207, ["add     rdi, 8", "test    rdx, rdx", "jz      short loc_B4BD"], ["add~rdi,0", "test~rdx,rdx", "jz~FOO"]], [1, 0, 13, 3, 0, 8, 1, 1, 11, -1, 0.05233990147783251, ["add     rcx, 2", "xor     edx, edx", "mov     rax, rbx", "div     rcx", "add     rsi, rdi", "cmp     rbx, rsi", "mov     rax, rdx", "ja      short loc_B498"], ["add~rcx,0", "xor~edx,edx", "mov~rax,rbx", "div~,rcx", "add~rsi,rdi", "cmp~rbx,rsi", "mov~rax,rdx", "ja~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 5, 2, 0.0874384236453202, ["cmp     byte ptr [tuning+10h], 0", "jz      loc_B5AE"], ["cmp~[yte ptr [tuning+0],0", "jz~FOO"]], [0, 0, 15, 0, 0, 2, 0, 1, 9, -1, 0.053571428571428575, ["cvttss2si rbx, xmm0", "jmp     loc_B42E"], ["cvttss2si~rbx,xmm0", "jmp~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, r14", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,r14", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 1, 0, 0, 2, 1, 1, 1, -1, 0.02647783251231527, ["xor     r14d, r14d", "jmp     short loc_B51F"], ["xor~r14d,r14d", "jmp~FOO"]], [0, 0, 21, 0, 0, 3, 1, 0, 6, 1, 0.014778325123152709, ["test    candidate, candidate", "movss   xmm1, dword ptr [tuning+8]", "jns     short loc_B566"], ["test~candidate,candidate", "movss~xmm1,[word ptr [tuning+0]", "jns~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 9, -1, 0.12623152709359606, ["test    rax, rax", "jnz     short loc_B4C8"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 13, 1, 0, 2, 0, 1, 10, -1, 0.021551724137931036, ["add     rbx, 2", "jmp     short loc_B460"], ["add~rbx,0", "jmp~FOO"]], [1, 0, 29, 1, 0, 9, 1, 1, 0, 6, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "test    hasher, hasher", "jz      loc_B540"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "test~hasher,hasher", "jz~FOO"]], [0, 0, 28, 0, 0, 3, 1, 1, 1, 5, 0.03201970443349754, ["test    comparator, comparator", "mov     r12, comparator", "jz      loc_B540"], ["test~comparator,comparator", "mov~r12,comparator", "jz~FOO"]], [2, 0, 19, 0, 0, 8, 2, 1, 6, 0, 0.04802955665024631, ["mov     rax, candidate", "pxor    xmm0, xmm0", "shr     rax, 1", "and     ebx, 1", "or      rax, rbx", "cvtsi2ss xmm0, rax", "addss   xmm0, xmm0", "jmp     short loc_B56F"], ["mov~rax,candidate", "pxor~xmm0,xmm0", "shr~rax,0", "and~ebx,0", "or~rax,rbx", "cvtsi2ss~xmm0,rax", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 21, 0, 0, 2, 1, 1, 5, 1, 0.05172413793103448, ["test    candidate, candidate", "js      short loc_B5B9"], ["test~candidate,candidate", "js~FOO"]], [1, 0, 15, 0, 0, 5, 1, 1, 9, -1, 0.053571428571428575, ["subss   xmm0, cs:dword_15BC0", "mov     rax, 8000000000000000h", "cvttss2si rbx, xmm0", "xor     rbx, rax", "jmp     loc_B42E"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rbx,xmm0", "xor~rbx,rax", "jmp~FOO"]], [4, 0, 13, 0, 0, 6, 1, 0, 7, -1, 0.19704433497536947, ["cmp     candidate, 0Ah", "mov     eax, 0Ah", "mov     r8, 0AAAAAAAAAAAAAAABh", "cmovb   candidate, rax", "or      rbx, 1", "nop     dword ptr [rax+00h]"], ["cmp~candidate,0", "mov~eax,0", "mov~r8,0", "cmovb~candidate,rax", "or~rbx,0", "nop~[word ptr [rax+0]"]], [0, 0, 19, 0, 0, 2, 0, 0, 6, -1, 0.04802955665024631, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, candidate"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,candidate"]]], "func_feature": [5, 18, 26, 0, 30, 48, 2, 135, 0.06966, 4, 11], "succs": [[22, 6], [0, 21], [17, 27], [9, 2], [10, 13], [19, 4], [15], [18], [9, 7], [19], [16, 9], [9, 28], [8, 9], [9, 26], [22, 15], [21, 14], [11, 20], [11], [], [18], [25, 29], [12, 22], [1], [24, 19], [19, 5], [3], [25, 29], [11], [1], [3]], "fname": "hash_initialize", "n_num": 30}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 11, 0, 0, 4, 1, 1, 0, 0, 0.35454545454545455, ["mov     rbx, [bucket+8]", "mov     rax, [table+40h]", "test    cursor, cursor", "jz      short loc_B635"], ["mov~rbx,[bucket+0]", "mov~rax,[table+0]", "test~cursor,cursor", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 1, 2, 0.3818181818181818, ["cmp     qword ptr [bucket], 0", "jz      short loc_B651"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 0, 3, 6, 0.1909090909090909, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [2, 0, 11, 0, 0, 2, 0, 0, 4, 2, 0.35454545454545455, ["mov     qword ptr [bucket], 0", "mov     qword ptr [bucket+8], 0"], ["mov~<TAG>,0", "mov~[word ptr [bucket+0],0"]], [0, 0, 11, 0, 0, 2, 1, 1, 3, 3, 0.35454545454545455, ["test    rax, rax", "jz      short loc_B640"], ["test~rax,rax", "jz~FOO"]], [0, 0, 11, 0, 1, 2, 0, 1, 4, 3, 0.0, ["mov     rdi, [bucket]", "call    rax"], ["mov~rdi,<TAG>", "call~rax"]], [0, 0, 11, 0, 0, 2, 1, 1, 4, 5, 0.21818181818181817, ["test    rax, rax", "jz      short loc_B616"], ["test~rax,rax", "jz~FOO"]], [1, 0, 11, 0, 0, 8, 1, 1, 5, 4, 0.21818181818181817, ["mov     rdx, [cursor+8]", "mov     rcx, [table+48h]", "mov     qword ptr [cursor], 0", "test    next, next", "mov     [cursor+8], rcx", "mov     [table+48h], cursor", "mov     rbx, next", "jnz     short loc_B608"], ["mov~rdx,[cursor+0]", "mov~rcx,[table+0]", "mov~<TAG>,0", "test~next,next", "mov~[cursor+0],rcx", "mov~[table+0],cursor", "mov~rbx,next", "jnz~FOO"]], [0, 0, 11, 0, 0, 7, 0, 0, 0, 1, 0.0, ["push    r12", "push    rbp", "mov     rbp, table", "push    rbx", "mov     r12, [table]", "cmp     bucket, [table+8]", "jnb     short loc_B65B"], ["push~r12", "push~rbp", "mov~rbp,table", "push~rbx", "mov~r12,<TAG>", "cmp~bucket,[table+0]", "jnb~FOO"]], [2, 0, 0, 0, 0, 6, 0, 0, 1, 0, 0.0, ["mov     qword ptr [table+18h], 0", "mov     qword ptr [table+20h], 0", "pop     rbx", "pop     table", "pop     bucket", "retn"], ["mov~[word ptr [table+0],0", "mov~[word ptr [table+0],0", "pop~rbx", "pop~table", "pop~bucket", "retn"]], [1, 0, 11, 1, 0, 3, 0, 1, 2, 1, 0.3818181818181818, ["add     bucket, 10h", "cmp     [table+8], bucket", "ja      short loc_B5F0"], ["add~bucket,0", "cmp~[table+0],bucket", "ja~FOO"]], [0, 0, 11, 0, 1, 3, 0, 1, 5, 5, 0.0, ["mov     rdi, [cursor]", "call    rax", "mov     rax, [table+40h]"], ["mov~rdi,<TAG>", "call~rax", "mov~rax,[table+0]"]]], "func_feature": [2, 4, 8, 0, 12, 18, 0, 42, 0.20455, 0, 1], "succs": [[2, 4], [0, 10], [6], [10], [3, 5], [3], [11, 7], [4, 6], [9, 1], [], [9, 1], [7]], "fname": "hash_clear", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 21, 0, 0, 8, 0, 1, 0, 0, 0.0, ["push    r12", "push    rbp", "mov     r12, table", "push    rbx", "cmp     qword ptr [table+40h], 0", "mov     rbp, [table]", "mov     rax, [table+8]", "jz      short loc_B6D3"], ["push~r12", "push~rbp", "mov~r12,table", "push~rbx", "cmp~[word ptr [table+0],0", "mov~rbp,<TAG>", "mov~rax,[table+0]", "jz~FOO"]], [0, 0, 1, 0, 1, 7, 0, 2, 0, 0, 0.04761904761904762, ["mov     cursor, [table]; ptr", "call    free", "pop     rbx", "mov     rdi, table; ptr", "pop     rbp", "pop     table", "jmp     free"], ["mov~cursor,<TAG>", "call~FOO", "pop~rbx", "mov~rdi,table", "pop~rbp", "pop~table", "jmp~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 0, 1, 0.1619047619047619, ["mov     rdi, [table+48h]; ptr", "test    cursor, cursor", "jz      short loc_B731"], ["mov~rdi,[table+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 1, 0.004761904761904762, ["mov     rbx, [cursor+8]", "call    free", "test    next, next", "mov     rdi, next", "jnz     short loc_B720"], ["mov~rbx,[cursor+0]", "call~FOO", "test~next,next", "mov~rdi,next", "jnz~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 0, 3, 0.02142857142857143, ["cmp     qword ptr [table+20h], 0", "jz      short loc_B6D3"], ["cmp~[word ptr [table+0],0", "jz~FOO"]], [0, 0, 19, 0, 0, 2, 0, 0, 0, 2, 0.04404761904761905, ["cmp     bucket, rax", "jnb     short loc_B70C"], ["cmp~bucket,rax", "jnb~FOO"]], [0, 0, 18, 0, 0, 1, 0, 0, 0, 6, 0.0642857142857143, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 10, 0, 0, 2, 0, 0, 0, 2, 0.24404761904761907, ["cmp     rbp, rax", "jnb     short loc_B70C"], ["cmp~rbp,rax", "jnb~FOO"]], [1, 0, 9, 1, 0, 3, 0, 1, 0, 2, 0.05476190476190477, ["add     bucket, 10h", "cmp     [table+8], bucket", "ja      short loc_B6E0"], ["add~bucket,0", "cmp~[table+0],bucket", "ja~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 0, 2, 0.04285714285714286, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 18, 0, 0, 3, 1, 1, 0, 5, 0.11904761904761905, ["mov     rdi, [bucket+0]", "test    rdi, rdi", "jz      short loc_B6C6"], ["mov~rdi,[bucket+0]", "test~rdi,rdi", "jz~FOO"]], [1, 0, 18, 1, 0, 3, 0, 1, 0, 4, 0.2142857142857143, ["add     bucket, 10h", "cmp     rax, bucket", "ja      short loc_B698"], ["add~bucket,0", "cmp~rax,bucket", "ja~FOO"]], [0, 0, 18, 0, 0, 2, 0, 1, 0, 7, 0.04761904761904762, ["mov     rbx, bucket", "jmp     short loc_B6B3"], ["mov~rbx,bucket", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0.0, [], []], [0, 0, 18, 0, 0, 1, 0, 0, 0, 7, 0.0, ["mov     rdi, [cursor]"], ["mov~rdi,<TAG>"]], [0, 0, 18, 0, 1, 4, 1, 2, 0, 6, 0.10714285714285715, ["call    qword ptr [table+40h]", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_B6B0"], ["call~[word ptr [table+0]", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 0, 3, 0.11190476190476191, ["mov     rdi, [bucket+8]; ptr", "test    cursor, cursor", "jz      short loc_B701"], ["mov~rdi,[bucket+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 9, 0, 1, 5, 1, 2, 0, 3, 0.01666666666666667, ["mov     rbx, [cursor+8]", "call    free", "test    next, next", "mov     rdi, next", "jnz     short loc_B6F0"], ["mov~rbx,[cursor+0]", "call~FOO", "test~next,next", "mov~rdi,next", "jnz~FOO"]], [0, 0, 18, 0, 0, 1, 0, 0, 0, 5, 0.10476190476190478, ["mov     rax, [table+8]"], ["mov~rax,[table+0]"]], [0, 0, 11, 0, 0, 1, 0, 0, 0, 3, 0.19761904761904764, ["mov     bucket, [table]"], ["mov~bucket,<TAG>"]], [0, 0, 9, 0, 0, 1, 0, 0, 0, 4, 0.1142857142857143, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 9, 0, 0, 1, 0, 0, 0, 4, 0.03571428571428572, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]]], "func_feature": [4, 6, 16, 0, 22, 33, 1, 59, 0.07976, 0, 2], "succs": [[4, 7], [13], [1, 9], [1, 3], [5, 7], [2, 6], [10], [2, 20], [16, 2], [3], [11, 12], [10, 19], [15], [], [15], [18, 14], [8, 21], [8, 17], [11], [7], [16], [17]], "fname": "hash_free", "n_num": 22}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 20, 2, 1, 8, 0, 1, 5, 0, 0.44155844155844154, ["mov     rbx, [new_table]", "mov     rsi, [new_table+10h]", "mov     rdi, r15", "call    qword ptr [new_table+30h]", "shl     rax, 4", "add     rbx, rax", "cmp     [new_table+8], new_bucket", "jbe     loc_B900"], ["mov~rbx,<TAG>", "mov~rsi,[new_table+0]", "mov~rdi,r15", "call~[word ptr [new_table+0]", "shl~rax,0", "add~rbx,rax", "cmp~[new_table+0],new_bucket", "jbe~FOO"]], [1, 0, 22, 1, 1, 17, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "mov     rax, table_0", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     rcx, [rax+38h]; comparator", "mov     rdx, [rax+30h]; hasher", "mov     [rsp+48h+table], table_0", "mov     r8, [rax+40h]; data_freer", "mov     table_0, candidate; candidate", "mov     candidate, [table_0+28h]; tuning", "call    hash_initialize", "test    new_table, new_table", "jz      loc_B8EF"], ["push~r15", "push~r14", "mov~rax,table_0", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rcx,[rax+0]", "mov~rdx,[rax+0]", "mov~[rsp+0],table_0", "mov~r8,[rax+0]", "mov~table_0,candidate", "mov~candidate,[table_0+0]", "call~FOO", "test~new_table,new_table", "jz~FOO"]], [1, 0, 20, 0, 0, 3, 0, 1, 6, 0, 0.4025974025974026, ["cmp     qword ptr [new_bucket], 0", "mov     rbp, [cursor+8]", "jnz     short loc_B7C0"], ["cmp~<TAG>,0", "mov~rbp,[cursor+0]", "jnz~FOO"]], [1, 0, 20, 1, 0, 4, 0, 1, 7, 0, 0.16017316017316016, ["mov     [new_bucket], r15", "add     qword ptr [new_table+18h], 1", "cmp     bucket, cursor", "jz      short loc_B7D5"], ["mov~<TAG>,r15", "add~[word ptr [new_table+0],0", "cmp~bucket,cursor", "jz~FOO"]], [0, 0, 21, 0, 0, 7, 0, 0, 1, 0, 0.04329004329004329, ["mov     rcx, [rsp+48h+table]", "mov     r12, new_table", "mov     r14, [rcx]", "cmp     [rcx+8], bucket", "mov     new_table, [rcx+48h]", "mov     [new_table+48h], rax", "jbe     loc_B856"], ["mov~rcx,[rsp+0]", "mov~r12,new_table", "mov~r14,<TAG>", "cmp~[rcx+0],bucket", "mov~new_table,[rcx+0]", "mov~[new_table+0],rax", "jbe~FOO"]], [0, 0, 20, 0, 0, 1, 0, 0, 2, 0, 0.08008658008658008, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [2, 0, 0, 1, 2, 24, 0, 2, 2, 0, 0.0, ["mov     rdi, r14; ptr", "call    free", "mov     rax, [new_table]", "mov     rdx, [rsp+48h+table]", "mov     rdi, new_table; ptr", "mov     [rdx], rax", "mov     rax, [new_table+8]", "mov     [rdx+8], rax", "mov     rax, [new_table+10h]", "mov     [rdx+10h], rax", "mov     rax, [new_table+18h]", "mov     [rdx+18h], rax", "mov     rax, [new_table+48h]", "mov     [rdx+48h], rax", "call    free", "add     rsp, 18h", "mov     eax, 1", "pop     rbx", "pop     rbp", "pop     new_table", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~rdi,r14", "call~FOO", "mov~rax,<TAG>", "mov~rdx,[rsp+0]", "mov~rdi,new_table", "mov~<TAG>,rax", "mov~rax,[new_table+0]", "mov~[rdx+0],rax", "mov~rax,[new_table+0]", "mov~[rdx+0],rax", "mov~rax,[new_table+0]", "mov~[rdx+0],rax", "mov~rax,[new_table+0]", "mov~[rdx+0],rax", "call~FOO", "add~rsp,0", "mov~eax,0", "pop~rbx", "pop~rbp", "pop~new_table", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 1, 0, 0, 1, 0, 0, 5, 0, 0.0367965367965368, ["mov     bucket, [rax]"], ["mov~bucket,<TAG>"]], [0, 0, 20, 0, 0, 3, 1, 1, 3, 0, 0.20995670995670995, ["mov     r15, [bucket]", "test    r15, r15", "jz      loc_B840"], ["mov~r15,<TAG>", "test~r15,r15", "jz~FOO"]], [1, 0, 20, 1, 0, 4, 0, 1, 4, 0, 0.16233766233766234, ["mov     rax, [rsp+48h+table]", "add     bucket, 10h", "cmp     [rax+8], bucket", "ja      loc_B7A8"], ["mov~rax,[rsp+0]", "add~bucket,0", "cmp~[rax+0],bucket", "ja~FOO"]], [1, 0, 20, 0, 0, 6, 1, 1, 8, 0, 0.06060606060606061, ["mov     qword ptr [cursor+0], 0", "mov     rax, [new_table+48h]", "test    next, next", "mov     [cursor+8], rax", "mov     [new_table+48h], cursor", "jnz     short loc_B7DA"], ["mov~[word ptr [cursor+0],0", "mov~rax,[new_table+0]", "test~next,next", "mov~[cursor+0],rax", "mov~[new_table+0],cursor", "jnz~FOO"]], [0, 0, 20, 0, 0, 1, 0, 0, 9, 0, 0.010822510822510822, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 20, 0, 0, 3, 1, 1, 8, 0, 0.1406926406926407, ["mov     rax, [new_table+48h]", "test    rax, rax", "jz      short loc_B8E0"], ["mov~rax,[new_table+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 20, 0, 0, 2, 0, 1, 7, 0, 0.20562770562770563, ["cmp     bucket, cursor", "jz      loc_B8B0"], ["cmp~bucket,cursor", "jz~FOO"]], [0, 0, 20, 0, 0, 2, 0, 0, 9, 0, 0.03354978354978355, ["mov     rcx, [rax+8]", "mov     [new_table+48h], rcx"], ["mov~rcx,[rax+0]", "mov~[new_table+0],rcx"]], [0, 0, 20, 0, 0, 2, 0, 1, 4, 0, 0.19047619047619047, ["mov     r13, bucket", "jmp     short loc_B7E1"], ["mov~r13,bucket", "jmp~FOO"]], [0, 0, 20, 0, 0, 2, 1, 1, 8, 0, 0.2813852813852814, ["test    next, next", "jz      short loc_B840"], ["test~next,next", "jz~FOO"]], [0, 0, 20, 0, 0, 3, 0, 0, 8, 0, 0.02813852813852814, ["mov     rax, [new_bucket+8]", "mov     [cursor+8], rax", "mov     [new_bucket+8], cursor"], ["mov~rax,[new_bucket+0]", "mov~[cursor+0],rax", "mov~[new_bucket+0],cursor"]], [0, 0, 20, 0, 0, 5, 0, 1, 10, 0, 0.10822510822510822, ["mov     rdx, [new_bucket+8]", "mov     [rax], r15", "mov     [rax+8], rdx", "mov     [new_bucket+8], rax", "jmp     loc_B7D5"], ["mov~rdx,[new_bucket+0]", "mov~<TAG>,r15", "mov~[rax+0],rdx", "mov~[new_bucket+0],rax", "jmp~FOO"]], [1, 0, 20, 0, 1, 4, 1, 2, 9, 0, 0.07034632034632035, ["mov     edi, 10h; size", "call    malloc", "test    rax, rax", "jnz     short loc_B8C3"], ["mov~edi,0", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 20, 0, 0, 2, 0, 0, 9, 0, 0.2077922077922078, ["mov     r15, [next+0]", "mov     r13, next"], ["mov~r15,[next+0]", "mov~r13,next"]], [1, 0, 0, 1, 0, 9, 1, 0, 1, 0, 0.0, ["add     rsp, 18h", "xor     eax, eax", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "xor~eax,eax", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [6, 7, 18, 0, 23, 32, 2, 114, 0.12498, 0, 7], "succs": [[], [0, 3], [5, 22], [4, 14], [17, 11], [6, 7], [9], [], [7], [16, 10], [8, 9], [12, 21], [10], [20, 15], [18, 13], [19], [1], [10, 21], [17], [17], [19, 22], [1], []], "fname": "hash_rehash", "n_num": 23}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 4, 0, 0, 2, 0, 0, 0, 0, 0.0035650623885918, ["mov     rdx, [rax+8]", "mov     [table+48h], rdx"], ["mov~rdx,[rax+0]", "mov~[table+0],rdx"]], [0, 0, 7, 0, 0, 3, 1, 1, 3, -1, 0.013368983957219251, ["mov     data, [table+48h]", "test    rax, rax", "jz      short loc_B9F8"], ["mov~data,[table+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 8, 0, 0, 2, 0, 0, 15, -1, 0.07397504456327986, ["ucomiss xmm0, cs:dword_15BC0", "jnb     loc_BB2E"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 10, 0, 0, 2, 0, 0, 14, -1, 0.10606060606060605, ["ucomiss xmm0, cs:dword_15BBC", "jnb     short loc_BA0B"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [1, 0, 5, 0, 1, 4, 1, 2, 4, -1, 0.0089126559714795, ["mov     edi, 10h; size", "call    malloc", "test    rax, rax", "jnz     loc_B984"], ["mov~edi,0", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 16, -1, 0.021836007130124777, ["cvttss2si rsi, xmm0; candidate"], ["cvttss2si~rsi,xmm0"]], [2, 0, 14, 0, 0, 8, 2, 1, 11, -1, 0.06818181818181818, ["mov     rcx, rax", "pxor    xmm1, xmm1", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_BA56"], ["mov~rcx,rax", "pxor~xmm1,xmm1", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 16, 0, 0, 3, 1, 1, 10, -1, 0.14705882352941177, ["mov     rax, [table+18h]", "test    rax, rax", "js      loc_BAF0"], ["mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 5, -1, 0.011140819964349376, ["xor     eax, eax", "jmp     loc_B946"], ["xor~eax,eax", "jmp~FOO"]], [0, 0, 5, 0, 1, 4, 1, 2, 17, -1, 0.0338680926916221, ["mov     rdi, table; table", "call    hash_rehash", "test    al, al", "jnz     loc_B9EB"], ["mov~rdi,table", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 6, 0, 0, 5, 1, 1, 16, -1, 0.021836007130124777, ["subss   xmm0, cs:dword_15BC0", "mov     rax, 8000000000000000h", "cvttss2si rsi, xmm0", "xor     rsi, rax", "jmp     loc_BA8C"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rsi,xmm0", "xor~rsi,rax", "jmp~FOO"]], [1, 0, 3, 1, 0, 7, 0, 1, 5, -1, 0.007575757575757575, ["mov     rdx, [r12+8]", "mov     [rax], entry", "mov     [rax+8], rdx", "mov     [r12+8], rax", "mov     rax, entry", "add     qword ptr [table+20h], 1", "jmp     short loc_B946"], ["mov~rdx,[r12+0]", "mov~<TAG>,entry", "mov~[rax+0],rdx", "mov~[r12+0],rax", "mov~rax,entry", "add~[word ptr [table+0],0", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 18, -1, 0.0053475935828877, ["xor     eax, eax", "jmp     loc_B946"], ["xor~eax,eax", "jmp~FOO"]], [2, 0, 17, 0, 0, 8, 2, 1, 9, -1, 0.0641711229946524, ["mov     rcx, rax", "pxor    xmm0, xmm0", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm0, rcx", "addss   xmm0, xmm0", "jmp     loc_BA40"], ["mov~rcx,rax", "pxor~xmm0,xmm0", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm0,rcx", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 19, 0, 1, 7, 1, 2, 8, -1, 0.13101604278074866, ["lea     rdi, [table+28h]; table", "call    check_tuning", "mov     rax, [table+10h]", "mov     rdx, [table+28h]", "test    rax, rax", "movss   xmm2, dword ptr [rdx+8]", "js      loc_BB10"], ["lea~rdi,[table+0]", "call~FOO", "mov~rax,[table+0]", "mov~rdx,[table+0]", "test~rax,rax", "movss~xmm2,[word ptr [rdx+0]", "js~FOO"]], [1, 0, 34, 1, 0, 9, 2, 1, 0, 1, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 10h", "mov     rax, fs:28h", "mov     [rsp+28h+var_20], rax", "xor     eax, eax", "test    entry, entry", "jz      loc_BB52"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~entry,entry", "jz~FOO"]], [0, 0, 20, 0, 0, 3, 0, 1, 7, -1, 0.1497326203208556, ["mulss   xmm1, dword ptr [rdx+8]", "ucomiss xmm0, xmm1", "ja      short loc_BA18"], ["mulss~xmm1,[word ptr [rdx+0]", "ucomiss~xmm0,xmm1", "ja~FOO"]], [2, 0, 26, 2, 0, 7, 1, 1, 3, -1, 0.058823529411764705, ["mov     data, [table+18h]", "mov     [r12], entry", "add     qword ptr [table+20h], 1", "add     rax, 1", "test    rax, rax", "mov     [table+18h], rax", "js      loc_BAD0"], ["mov~data,[table+0]", "mov~<TAG>,entry", "add~[word ptr [table+0],0", "add~rax,0", "test~rax,rax", "mov~[table+0],rax", "js~FOO"]], [1, 0, 31, 0, 0, 3, 0, 1, 2, -1, 0.049910873440285206, ["mov     r12, [rsp+28h+bucket]", "cmp     qword ptr [r12], 0", "jz      short loc_B9A0"], ["mov~r12,<TAG>", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 17, 0, 0, 2, 0, 0, 9, -1, 0.0641711229946524, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [2, 0, 21, 0, 0, 8, 2, 1, 6, -1, 0.06016042780748663, ["mov     rcx, rax", "pxor    xmm1, xmm1", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_B9E1"], ["mov~rcx,rax", "pxor~xmm1,xmm1", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 23, 0, 0, 4, 1, 1, 5, -1, 0.1122994652406417, ["mov     rax, [table+10h]", "mov     rdx, [table+28h]", "test    rax, rax", "js      loc_BAA8"], ["mov~rax,[table+0]", "mov~rdx,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 24, 0, 0, 2, 0, 0, 4, -1, 0.0374331550802139, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [0, 0, 32, 0, 1, 7, 2, 2, 1, -1, 0.0285204991087344, ["xor     ecx, ecx; delete", "mov     rdx, rsp; bucket_head", "mov     rbp, table", "mov     rbx, entry", "call    hash_find_entry", "test    data, data", "jz      short loc_B968"], ["xor~ecx,ecx", "mov~rdx,rsp", "mov~rbp,table", "mov~rbx,entry", "call~FOO", "test~data,data", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, -1, 0.0552584670231729, ["mov     rcx, [rsp+28h+var_20]", "xor     rcx, fs:28h", "jnz     loc_BB4D"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 0, 11, -1, 0.06818181818181818, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [2, 0, 24, 0, 0, 8, 2, 1, 4, -1, 0.0374331550802139, ["mov     rdx, rax", "pxor    xmm0, xmm0", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0", "jmp     loc_B9C7"], ["mov~rdx,rax", "pxor~xmm0,xmm0", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 8, -1, 0.0427807486631016, ["mov     rax, entry", "jmp     loc_B946"], ["mov~rax,entry", "jmp~FOO"]], [0, 0, 21, 0, 0, 2, 0, 0, 6, -1, 0.06016042780748663, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [0, 0, 13, 0, 0, 4, 0, 0, 12, -1, 0.14705882352941177, ["movaps  xmm3, xmm2", "mulss   xmm3, xmm0", "ucomiss xmm1, xmm3", "jbe     short loc_B9EB"], ["movaps~xmm3,xmm2", "mulss~xmm3,xmm0", "ucomiss~xmm1,xmm3", "jbe~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 3, -1, 0.0, ["add     rsp, 10h", "pop     rbx", "pop     table", "pop     r12", "retn"], ["add~rsp,0", "pop~rbx", "pop~table", "pop~r12", "retn"]], [1, 0, 12, 0, 0, 3, 0, 1, 13, -1, 0.11853832442067735, ["cmp     byte ptr [tuning+10h], 0", "mulss   xmm0, dword ptr [tuning+0Ch]", "jnz     short loc_BA71"], ["cmp~[yte ptr [tuning+0],0", "mulss~xmm0,[word ptr [tuning+0]", "jnz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 0, 14, -1, 0.0, ["mulss   xmm0, xmm2"], ["mulss~xmm0,xmm2"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [6, 23, 28, 1, 35, 48, 1, 137, 0.05167, 3, 5], "succs": [[11], [0, 4], [10, 5], [8, 2], [8, 11], [9], [30], [26, 6], [25], [28, 12], [9], [25], [25], [7], [19, 13], [34, 23], [28, 14], [27, 22], [17, 1], [7], [16], [20, 29], [21], [25, 18], [], [24, 31], [30], [21], [25], [16], [32, 28], [], [33, 3], [3], []], "fname": "hash_insert", "n_num": 35}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[2, 0, 10, 0, 0, 8, 2, 1, 0, 0, 0.09329710144927536, ["mov     rcx, rax", "pxor    xmm1, xmm1", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_BC3A"], ["mov~rcx,rax", "pxor~xmm1,xmm1", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 12, 0, 0, 3, 1, 1, 9, 4, 0.21195652173913043, ["mov     rax, [table+18h]", "test    rax, rax", "js      loc_BCF0"], ["mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [2, 0, 24, 1, 1, 13, 2, 2, 0, 2, 0.0, ["push    rbp", "push    rbx", "mov     ecx, 1; delete", "mov     rbx, table", "sub     rsp, 18h", "mov     rdx, rsp; bucket_head", "mov     rax, fs:28h", "mov     [rsp+28h+var_20], rax", "xor     eax, eax", "call    hash_find_entry", "test    rax, rax", "mov     rbp, rax", "jz      short loc_BB9D"], ["push~rbp", "push~rbx", "mov~ecx,0", "mov~rbx,table", "sub~rsp,0", "mov~rdx,rsp", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [2, 0, 17, 0, 0, 8, 2, 1, 5, 3, 0.08695652173913043, ["mov     rcx, rax", "pxor    xmm1, xmm1", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_BBF8"], ["mov~rcx,rax", "pxor~xmm1,xmm1", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 19, 0, 0, 4, 1, 1, 4, 4, 0.161231884057971, ["mov     rax, [table+10h]", "mov     rdx, [table+28h]", "test    rax, rax", "js      loc_BC78"], ["mov~rax,[table+0]", "mov~rdx,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 15, 0, 1, 6, 1, 2, 7, 6, 0.1956521739130435, ["lea     rdi, [table+28h]; table", "call    check_tuning", "mov     rax, [table+10h]", "mov     rdx, [table+28h]", "test    rax, rax", "js      loc_BD10"], ["lea~rdi,[table+0]", "call~FOO", "mov~rax,[table+0]", "mov~rdx,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 16, 0, 0, 3, 0, 0, 6, 2, 0.2210144927536232, ["mulss   xmm1, dword ptr [rdx]", "ucomiss xmm1, xmm0", "jbe     short loc_BB9D"], ["mulss~xmm1,<TAG>", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [2, 0, 23, 1, 0, 4, 0, 1, 1, 2, 0.036231884057971016, ["mov     data, [rsp+28h+bucket]", "sub     qword ptr [table+20h], 1", "cmp     qword ptr [rax], 0", "jz      short loc_BBC0"], ["mov~data,<TAG>", "sub~[word ptr [table+0],0", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 0, 0, 8, 5, 0.09329710144927536, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [2, 0, 13, 0, 0, 8, 2, 1, 8, 5, 0.09329710144927536, ["mov     rcx, rax", "pxor    xmm0, xmm0", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "cvtsi2ss xmm0, rcx", "addss   xmm0, xmm0", "jmp     loc_BC24"], ["mov~rcx,rax", "pxor~xmm0,xmm0", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "cvtsi2ss~xmm0,rcx", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 1, 1, 0.07971014492753624, ["mov     rcx, [rsp+28h+var_20]", "xor     rcx, fs:28h", "mov     rax, data", "jnz     loc_BD2E"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,data", "jnz~FOO"]], [0, 0, 9, 0, 0, 4, 0, 0, 11, 2, 0.1956521739130435, ["movss   xmm2, dword ptr [rdx]", "mulss   xmm2, xmm0", "ucomiss xmm2, xmm1", "jbe     loc_BB9D"], ["movss~xmm2,<TAG>", "mulss~xmm2,xmm0", "ucomiss~xmm2,xmm1", "jbe~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 15, 2, 0.02717391304347826, ["mov     rdi, table; table", "call    hash_rehash", "jmp     loc_BB9D"], ["mov~rdi,table", "call~FOO", "jmp~FOO"]], [0, 0, 10, 0, 0, 2, 0, 0, 10, 3, 0.09329710144927536, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [2, 0, 20, 0, 0, 8, 2, 1, 3, 5, 0.04891304347826087, ["mov     rdx, rax", "pxor    xmm0, xmm0", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0", "jmp     loc_BBDE"], ["mov~rdx,rax", "pxor~xmm0,xmm0", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0", "jmp~FOO"]], [1, 0, 22, 1, 0, 5, 1, 1, 2, 6, 0.06884057971014493, ["mov     rax, [table+18h]", "sub     rax, 1", "test    rax, rax", "mov     [table+18h], rax", "js      loc_BCA0"], ["mov~rax,[table+0]", "sub~rax,0", "test~rax,rax", "mov~[table+0],rax", "js~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 2, -1, 0.0, ["add     rsp, 18h", "pop     table", "pop     rbp", "retn"], ["add~rsp,0", "pop~table", "pop~rbp", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 8, 0, 0, 3, 0, 1, 12, 5, 0.14492753623188406, ["cmp     byte ptr [tuning+10h], 0", "mulss   xmm0, dword ptr [tuning+4]", "jz      loc_BCE0"], ["cmp~[yte ptr [tuning+0],0", "mulss~xmm0,[word ptr [tuning+0]", "jz~FOO"]], [0, 0, 20, 0, 0, 2, 0, 0, 3, 5, 0.04891304347826087, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [1, 0, 4, 0, 0, 5, 1, 1, 14, 3, 0.025362318840579712, ["subss   xmm0, cs:dword_15BC0", "mov     rax, 8000000000000000h", "cvttss2si rsi, xmm0", "xor     rsi, rax", "jmp     short loc_BC68"], ["subss~xmm0,<TAG>", "mov~rax,0", "cvttss2si~rsi,xmm0", "xor~rsi,rax", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 0, 13, 4, 0.10869565217391304, ["ucomiss xmm0, cs:dword_15BC0", "jnb     short loc_BCC0"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 13, 5, 0.0, ["mulss   xmm0, dword ptr [tuning+8]", "jmp     loc_BC5A"], ["mulss~xmm0,[word ptr [tuning+0]", "jmp~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 14, 3, 0.025362318840579712, ["cvttss2si rsi, xmm0; candidate"], ["cvttss2si~rsi,xmm0"]], [0, 0, 17, 0, 0, 2, 0, 0, 5, 3, 0.08695652173913043, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]]], "func_feature": [4, 16, 19, 1, 25, 34, 1, 107, 0.08587, 2, 4], "succs": [[11], [0, 13], [10, 7], [6], [24, 3], [8, 9], [10, 5], [10, 15], [1], [1], [16, 17], [10, 18], [10], [11], [4], [19, 14], [], [], [21, 22], [4], [12], [20, 23], [21], [12], [6]], "fname": "hash_delete", "n_num": 25}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 11, 0, 0, 4, 1, 0, 0, 0, 0.18131868131868134, ["mov     [rsp+var_20], rax", "test    rax, rax", "fild    [rsp+var_20]", "jns     short loc_BD88"], ["mov~[rsp+0],rax", "test~rax,rax", "fild~<TAG>,[rsp+0]", "jns~FOO"]], [2, 0, 12, 0, 0, 13, 2, 1, 1, 6, 0.03296703296703297, ["fnstcw  [rsp+var_A]", "movzx   eax, [rsp+var_A]", "fsubr   st(1), st", "fxch    st(1)", "mov     rdx, 8000000000000000h", "or      ah, 0Ch", "mov     [rsp+var_C], ax", "fldcw   [rsp+var_C]", "fistp   [rsp+var_18]", "fldcw   [rsp+var_A]", "mov     rax, [rsp+var_18]", "xor     rax, rdx", "jmp     loc_BD74"], ["fnstcw~[rsp+0]", "movzx~eax,[rsp+0]", "fsubr~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "mov~rdx,0", "or~ah,0", "mov~[rsp+0],ax", "fldcw~[rsp+0]", "fistp~<TAG>,[rsp+0]", "fldcw~[rsp+0]", "mov~rax,[rsp+0]", "xor~rax,rdx", "jmp~FOO"]], [1, 0, 12, 0, 0, 10, 1, 0, 1, 6, 0.03296703296703297, ["fstp    st(1)", "fnstcw  [rsp+var_A]", "movzx   eax, [rsp+var_A]", "or      ah, 0Ch", "mov     [rsp+var_C], ax", "fld     st", "fldcw   [rsp+var_C]", "fistp   [rsp+var_18]", "fldcw   [rsp+var_A]", "mov     rax, [rsp+var_18]"], ["fstp~<TAG>,<TAG>", "fnstcw~[rsp+0]", "movzx~eax,[rsp+0]", "or~ah,0", "mov~[rsp+0],ax", "fld~<TAG>,<TAG>", "fldcw~[rsp+0]", "fistp~<TAG>,[rsp+0]", "fldcw~[rsp+0]", "mov~rax,[rsp+0]"]], [1, 0, 3, 1, 0, 5, 1, 1, 6, 1, 0.1208791208791209, ["add     rax, 1", "mov     [rsp+var_20], rax", "test    rax, rax", "fild    [rsp+var_20]", "js      short loc_BE00"], ["add~rax,0", "mov~[rsp+0],rax", "test~rax,rax", "fild~<TAG>,[rsp+0]", "js~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 6, 2, 0.016483516483516484, ["fstp    st", "jmp     short loc_BDA0"], ["fstp~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 5, 2, 0.11538461538461539, ["fstp    st", "nop     word ptr [rax+rax+00h]"], ["fstp~<TAG>,<TAG>", "nop~[ord ptr [rax+0]"]], [0, 0, 10, 0, 0, 1, 0, 0, 3, 5, 0.0, ["fadd    cs:dword_15BBC"], ["fadd~<TAG>,<TAG>"]], [0, 0, 0, 0, 0, 2, 0, 0, 7, 0, 0.0, ["fadd    cs:dword_15BBC", "retn"], ["fadd~<TAG>,<TAG>", "retn"]], [0, 0, 9, 0, 0, 2, 1, 1, 3, 4, 0.24725274725274726, ["test    edi, edi", "jnz     short loc_BDB8"], ["test~edi,edi", "jnz~FOO"]], [0, 0, 14, 0, 0, 4, 0, 0, 0, 7, 0.0, ["fld     cs:dword_15BC0", "fld     [rsp+value.value]", "fucomi  st, st(1)", "jnb     short loc_BDC0"], ["fld~<TAG>,<TAG>", "fld~<TAG>,[rsp+0]", "fucomi~<TAG>,<TAG>", "jnb~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 7, -1, 0.016483516483516484, ["jmp     short locret_BDBA"], ["jmp~FOO"]], [0, 0, 7, 0, 0, 3, 0, 0, 4, 3, 0.19780219780219782, ["fxch    st(1)", "fucomip st, st(1)", "jp      short loc_BD98"], ["fxch~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "jp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 5, 3, 0.04395604395604396, ["jz      short locret_BDBA"], ["jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, -1, 0.03296703296703297, ["fstp    st(1)"], ["fstp~<TAG>,<TAG>"]], [0, 0, 0, 0, 0, 1, 0, 0, 5, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 6, 6, 4, 15, 19, 3, 52, 0.06923, 2, 1], "succs": [[8, 6], [0], [0], [10, 7], [3], [3], [8], [], [11, 13], [1, 2], [14], [12, 5], [4, 14], [14], []], "fname": "adjust_value", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 76, 0, 0, 3, 0, 1, 0, 0, 0.011383442265795206, ["lea     r9d, [tenths+1]", "cmp     r9d, 0Ah", "jz      loc_C701"], ["lea~r9d,[tenths+0]", "cmp~r9d,0", "jz~FOO"]], [0, 0, 78, 0, 0, 2, 1, 1, 13, 14, 0.032352941176470584, ["test    dl, dl", "jz      loc_C679"], ["test~dl,dl", "jz~FOO"]], [1, 0, 93, 1, 0, 4, 0, 1, 4, 12, 0.0057461873638344225, ["setb    dil", "movzx   edi, dil", "add     edi, 2", "jmp     use_integer_arithmetic"], ["setb~dil", "movzx~edi,dil", "add~edi,0", "jmp~FOO"]], [0, 0, 95, 4, 0, 13, 2, 0, 3, 13, 0.006753812636165577, ["mov     divisor, n_0", "xor     edx, edx", "div     divisor", "mov     n_0, rax", "lea     rax, [rdx+rdx*4]", "xor     edx, edx", "mov     rsi, rbx", "add     rax, rax", "div     divisor", "add     rdx, rdx", "mov     r9d, eax", "cmp     divisor, r2", "jbe     loc_C5F8"], ["mov~divisor,n_0", "xor~edx,edx", "div~,divisor", "mov~n_0,rax", "lea~rax,<TAG>", "xor~edx,edx", "mov~rsi,rbx", "add~rax,rax", "div~,divisor", "add~rdx,rdx", "mov~r9d,eax", "cmp~divisor,r2", "jbe~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 17, -1, 0.006998910675381264, ["mov     r8d, [rsp+0C8h+var_98]", "test    r8d, r8d", "jnz     loc_C3C0"], ["mov~r8d,[rsp+0]", "test~r8d,r8d", "jnz~FOO"]], [0, 0, 7, 0, 0, 8, 1, 1, 16, -1, 0.02080610021786492, ["lea     rcx, power_letter", "movsxd  exponent_0, ebx", "mov     rdi, [rsp+0C8h+psuffix]", "test    eax, eax", "movzx   ecx, byte ptr [rcx+exponent_0]", "lea     rdx, [rdi+1]", "mov     [rdi], cl", "jz      loc_C634"], ["lea~rcx,<TAG>", "movsxd~exponent_0,ebx", "mov~rdi,[rsp+0]", "test~eax,eax", "movzx~ecx,<TAG>", "lea~rdx,[rdi+0]", "mov~<TAG>,cl", "jz~FOO"]], [1, 0, 41, 0, 0, 3, 0, 1, 12, 8, 0.00504720406681191, ["mov     rax, [rsp+0C8h+buf]", "cmp     byte ptr [rax+r14-1], 30h ; '0'", "jnz     loc_C168"], ["mov~rax,<TAG>", "cmp~[yte ptr [rax+0],0", "jnz~FOO"]], [1, 0, 43, 0, 0, 2, 1, 1, 11, 8, 0.022585330428467682, ["test    r12b, 8", "jz      loc_C160"], ["test~r12b,0", "jz~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 16, -1, 0.0007897603485838779, ["lea     rax, [psuffix_0+1]", "mov     byte ptr [psuffix_0], 42h ; 'B'", "mov     [rsp+0C8h+psuffix], rax"], ["lea~rax,[psuffix_0+0]", "mov~<TAG>,0", "mov~[rsp+0],rax"]], [1, 0, 4, 0, 0, 3, 0, 1, 18, -1, 0.0, ["lea     psuffix_0, [rdi+2]", "mov     byte ptr [rdi+1], 69h ; 'i'", "jmp     loc_C20B"], ["lea~psuffix_0,[rdi+0]", "mov~[yte ptr [rdi+0],0", "jmp~FOO"]], [1, 0, 5, 0, 0, 5, 1, 1, 17, -1, 0.00021786492374727668, ["mov     exponent_0, [rsp+0C8h+psuffix]", "test    eax, eax", "lea     rdx, [rbx+1]", "mov     byte ptr [rbx], 6Bh ; 'k'", "jnz     loc_C20B"], ["mov~exponent_0,[rsp+0]", "test~eax,eax", "lea~rdx,[rbx+0]", "mov~<TAG>,0", "jnz~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 15, -1, 0.013997821350762527, ["test    eax, eax", "mov     rdx, [rsp+0C8h+psuffix]", "jnz     loc_C20B"], ["test~eax,eax", "mov~rdx,[rsp+0]", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 16, -1, 0.000326797385620915, ["jmp     loc_C217"], ["jmp~FOO"]], [0, 0, 58, 0, 0, 3, 1, 1, 6, 11, 0.0031590413943355117, ["mov     r8, [rsp+0C8h+psuffix]", "xor     ebx, ebx", "jmp     loc_C450"], ["mov~r8,[rsp+0]", "xor~ebx,ebx", "jmp~FOO"]], [0, 0, 91, 0, 0, 4, 0, 1, 5, 12, 0.017973856209150325, ["mov     r8d, [rsp+0C8h+base]", "cmp     r8, amt", "mov     r11, r8", "ja      loc_C610"], ["mov~r8d,[rsp+0]", "cmp~r8,amt", "mov~r11,r8", "ja~FOO"]], [1, 0, 39, 0, 0, 4, 0, 1, 13, 9, 0.002541757443718228, ["fld     cs:flt_15C1C", "cmp     r15d, 1", "fmul    st(1), st", "jnz     loc_C5A0"], ["fld~<TAG>,<TAG>", "cmp~r15d,0", "fmul~<TAG>,<TAG>", "jnz~FOO"]], [0, 0, 25, 0, 0, 4, 0, 1, 14, 0, 0.0013616557734204792, ["mov     ebx, dword ptr [rsp+0C8h+damt.value]", "mov     r15, rax", "mov     r12d, r14d", "jmp     loc_C19A"], ["mov~ebx,[word ptr [rsp+0]", "mov~r15,rax", "mov~r12d,r14d", "jmp~FOO"]], [0, 0, 32, 2, 1, 10, 1, 2, 13, 1, 0.011982570806100218, ["mov     rax, [rsp+0C8h+from_block_size]", "sub     r12, rbp", "sub     r8, rbp", "mov     rdi, r8; dest", "mov     rdx, rbp; n", "lea     rsi, [rax+r12]; src", "call    _memcpy", "test    r12, r12", "mov     r8, rax", "jz      loc_C808"], ["mov~rax,[rsp+0]", "sub~r12,rbp", "sub~r8,rbp", "mov~rdi,r8", "mov~rdx,rbp", "lea~rsi,<TAG>", "call~FOO", "test~r12,r12", "mov~r8,rax", "jz~FOO"]], [0, 0, 36, 0, 0, 1, 0, 1, 14, 8, 0.0010348583877995642, ["jmp     loc_C553"], ["jmp~FOO"]], [1, 0, 68, 1, 0, 7, 0, 0, 16, 13, 0.02080610021786492, ["mov     rax, [rsp+0C8h+buf]", "lea     r8, [rax+287h]", "mov     [rax+287h], r9b", "mov     eax, ebp", "sub     p_0, rbp", "cmp     ebp, 8", "jnb     loc_C6B1"], ["mov~rax,<TAG>", "lea~r8,[rax+0]", "mov~[rax+0],r9b", "mov~eax,ebp", "sub~p_0,rbp", "cmp~ebp,0", "jnb~FOO"]], [1, 0, 69, 0, 0, 2, 0, 1, 16, 14, 0.0017429193899782135, ["mov     r9d, 30h ; '0'", "jmp     loc_C40A"], ["mov~r9d,0", "jmp~FOO"]], [1, 0, 69, 1, 0, 1, 0, 0, 15, 14, 0.01312636165577342, ["add     r9d, 30h ; '0'"], ["add~r9d,0"]], [0, 0, 73, 0, 0, 2, 1, 1, 14, 13, 0.022821350762527233, ["test    eax, eax", "jnz     loc_C406"], ["test~eax,eax", "jnz~FOO"]], [0, 0, 132, 0, 0, 2, 1, 1, 1, 13, 0.002096949891067538, ["test    rcx, rcx", "jz      loc_BEF5"], ["test~rcx,rcx", "jz~FOO"]], [10, 1, 136, 4, 3, 52, 4, 4, 0, 14, 0.0, ["push    r15", "push    r14", "mov     eax, edx", "push    r13", "push    r12", "mov     r15d, edx", "push    rbp", "push    rbx", "and     eax, 20h", "and     r15d, 3", "mov     r12d, edx", "mov     rbx, n_0", "sub     rsp, 98h", "mov     [rsp+0C8h+from_block_size], from_block_size_0", "mov     [rsp+0C8h+var_98], eax", "mov     from_block_size_0, fs:28h", "mov     [rsp+0C8h+var_40], from_block_size_0", "xor     ecx, ecx", "cmp     eax, 1", "mov     [rsp+0C8h+buf], buf_0", "mov     [rsp+0C8h+to_block_size], to_block_size_0", "sbb     eax, eax", "and     eax, 0FFFFFFE8h", "add     eax, 400h", "mov     [rsp+0C8h+base], eax", "call    _localeconv", "mov     r14, [rax]", "mov     r13, rax", "mov     rdi, r14; s", "call    _strlen", "mov     rcx, [l+10h]", "mov     l, [l+8]", "mov     rbp, rax", "sub     pointlen, 1", "mov     edx, 1", "cmp     rax, 10h", "lea     rax, asc_1366C; \".\"", "mov     rdi, r13; s", "cmovnb  pointlen, rdx", "mov     [rsp+0C8h+grouping], rcx", "cmovnb  r14, rax", "call    _strlen", "cmp     rax, 11h", "lea     rax, aReportBugsToS+16h; \"\"", "mov     rdi, [rsp+0C8h+to_block_size]", "mov     rcx, [rsp+0C8h+from_block_size]", "cmovnb  r13, rax", "mov     rax, [rsp+0C8h+buf]", "add     rax, 288h", "cmp     rdi, rcx", "mov     [rsp+0C8h+psuffix], rax", "ja      loc_C028"], ["push~r15", "push~r14", "mov~eax,edx", "push~r13", "push~r12", "mov~r15d,edx", "push~rbp", "push~rbx", "and~eax,<STR>", "and~r15d,0", "mov~r12d,edx", "mov~rbx,n_0", "sub~rsp,0", "mov~[rsp+0],from_block_size_0", "mov~[rsp+0],eax", "mov~from_block_size_0,<TAG>", "mov~[rsp+0],from_block_size_0", "xor~ecx,ecx", "cmp~eax,0", "mov~<TAG>,buf_0", "mov~[rsp+0],to_block_size_0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[rsp+0],eax", "call~FOO", "mov~r14,<TAG>", "mov~r13,rax", "mov~rdi,r14", "call~FOO", "mov~rcx,[l+0]", "mov~l,[l+0]", "mov~rbp,rax", "sub~pointlen,0", "mov~edx,0", "cmp~rax,0", "lea~rax,<TAG>", "mov~rdi,r13", "cmovnb~pointlen,rdx", "mov~[rsp+0],rcx", "cmovnb~r14,rax", "call~FOO", "cmp~rax,0", "lea~rax,<TAG>", "mov~rdi,[rsp+0]", "mov~rcx,[rsp+0]", "cmovnb~r13,rax", "mov~rax,<TAG>", "add~rax,0", "cmp~rdi,rcx", "mov~[rsp+0],rax", "ja~FOO"]], [1, 0, 63, 0, 0, 2, 1, 1, 17, 13, 0.006535947712418301, ["test    bpl, 4", "jnz     loc_C7B6"], ["test~bpl,0", "jnz~FOO"]], [1, 0, 2, 0, 0, 6, 1, 1, 11, -1, 0.014596949891067537, ["mov     rax, [rsp+0C8h+psuffix]", "mov     rcx, [rsp+0C8h+var_40]", "xor     rcx, fs:28h", "mov     byte ptr [rax], 0", "mov     rax, p_0", "jnz     loc_C7CB"], ["mov~rax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~<TAG>,0", "mov~rax,p_0", "jnz~FOO"]], [0, 1, 24, 0, 0, 2, 1, 1, 10, -1, 0.14640522875816994, ["test    r12b, 80h", "jz      short loc_C217"], ["test~r12b,<STR>", "jz~FOO"]], [0, 1, 16, 0, 0, 5, 2, 1, 12, -1, 0.08611111111111111, ["mov     eax, r12d", "and     eax, 100h", "mov     ecx, eax", "or      ecx, ebx", "jz      short loc_C217"], ["mov~eax,r12d", "and~eax,<STR>", "mov~ecx,eax", "or~ecx,ebx", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 17, -1, 0.0005174291938997821, ["mov     [rsp+0C8h+psuffix], psuffix_0", "jmp     loc_C217"], ["mov~[rsp+0],psuffix_0", "jmp~FOO"]], [0, 0, 61, 0, 0, 2, 1, 1, 18, 12, 0.004983660130718954, ["test    eax, eax", "jz      short loc_C447"], ["test~eax,eax", "jz~FOO"]], [0, 0, 131, 1, 0, 6, 2, 1, 2, 13, 0.003540305010893246, ["mov     psuffix_0, [rsp+0C8h+to_block_size]", "xor     edx, edx", "div     rcx", "test    rdx, rdx", "mov     r8, rax", "jnz     loc_BEF5"], ["mov~psuffix_0,[rsp+0]", "xor~edx,edx", "div~,rcx", "test~rdx,rdx", "mov~r8,rax", "jnz~FOO"]], [1, 0, 49, 0, 0, 2, 0, 1, 9, 8, 0.03461328976034858, ["cmp     ebx, 8", "jz      loc_C480"], ["cmp~ebx,0", "jz~FOO"]], [0, 0, 51, 0, 0, 3, 0, 1, 8, 9, 0.03736383442265795, ["mov     eax, [rsp+0C8h+base]", "cmp     rax, amt", "jz      loc_C640"], ["mov~eax,[rsp+0]", "cmp~rax,amt", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 12, -1, 0.0, ["add     rsp, 98h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 58, 0, 0, 3, 2, 0, 17, 11, 0.04738562091503268, ["xor     edi, edi", "xor     r9d, r9d", "nop     dword ptr [rax+00h]"], ["xor~edi,edi", "xor~r9d,r9d", "nop~[word ptr [rax+0]"]], [3, 0, 62, 3, 0, 15, 2, 0, 17, 12, 0.014705882352941176, ["mov     rax, [decimal_point]", "mov     r9, decimal_point", "mov     [p_0], rax", "mov     eax, ebp", "mov     rdx, [decimal_point+rax-8]", "mov     [p_0+rax-8], rdx", "lea     rdx, [p_0+8]", "mov     rax, p_0", "and     rdx, 0FFFFFFFFFFFFFFF8h", "sub     rax, rdx", "sub     r9, rax", "add     eax, ebp", "and     eax, 0FFFFFFF8h", "cmp     eax, 8", "jb      loc_C447"], ["mov~rax,<TAG>", "mov~r9,decimal_point", "mov~<TAG>,rax", "mov~eax,ebp", "mov~rdx,[decimal_point+0]", "mov~[p_0+0],rdx", "lea~rdx,[p_0+0]", "mov~rax,p_0", "and~rdx,0", "sub~rax,rdx", "sub~r9,rax", "add~eax,ebp", "and~eax,0", "cmp~eax,0", "jb~FOO"]], [0, 0, 59, 0, 0, 1, 0, 1, 20, 12, 0.006427015250544662, ["jmp     loc_C447"], ["jmp~FOO"]], [0, 0, 59, 0, 0, 2, 0, 1, 16, 12, 0.007625272331154684, ["mov     r8, [rsp+0C8h+psuffix]", "jmp     loc_C447"], ["mov~r8,[rsp+0]", "jmp~FOO"]], [0, 0, 59, 0, 0, 5, 0, 1, 18, 12, 0.0016067538126361654, ["mov     edx, [decimal_point]", "mov     [p_0], edx", "mov     edx, [decimal_point+rax-4]", "mov     [p_0+rax-4], edx", "jmp     loc_C447"], ["mov~edx,<TAG>", "mov~<TAG>,edx", "mov~edx,[decimal_point+0]", "mov~[p_0+0],edx", "jmp~FOO"]], [0, 0, 59, 0, 0, 3, 0, 1, 20, 12, 0.0, ["movzx   edx, word ptr [decimal_point+rax-2]", "mov     [p_0+rax-2], dx", "jmp     loc_C447"], ["movzx~edx,[ord ptr [decimal_point+0]", "mov~[p_0+0],dx", "jmp~FOO"]], [1, 0, 60, 0, 0, 4, 1, 1, 19, 12, 0.0017429193899782135, ["movzx   edx, byte ptr [decimal_point]", "test    al, 2", "mov     [p_0], dl", "jnz     loc_C7D0"], ["movzx~edx,<TAG>", "test~al,0", "mov~<TAG>,dl", "jnz~FOO"]], [2, 0, 20, 1, 0, 3, 0, 1, 15, -1, 0.006372549019607843, ["add     ebx, 1", "cmp     ebx, 8", "jnz     short loc_C4DD"], ["add~ebx,0", "cmp~ebx,0", "jnz~FOO"]], [0, 0, 20, 1, 0, 3, 0, 0, 14, -1, 0.014025054466230936, ["imul    power, rdx", "cmp     rcx, power", "jbe     loc_C1A9"], ["imul~power,rdx", "cmp~rcx,power", "jbe~FOO"]], [2, 0, 45, 1, 0, 3, 1, 1, 10, 7, 0.03425925925925926, ["add     ebx, 1", "test    r12b, 8", "jz      loc_C712"], ["add~ebx,0", "test~r12b,0", "jz~FOO"]], [1, 0, 57, 0, 0, 2, 0, 1, 5, 10, 0.12826797385620914, ["cmp     r15d, 1", "jz      loc_C5D0"], ["cmp~r15d,0", "jz~FOO"]], [2, 0, 92, 0, 0, 5, 1, 1, 4, 11, 0.03676470588235294, ["mov     ecx, r12d", "mov     r8, [rsp+0C8h+psuffix]", "mov     ebx, 0FFFFFFFFh", "and     ecx, 10h", "jz      loc_C450"], ["mov~ecx,r12d", "mov~r8,[rsp+0]", "mov~ebx,0", "and~ecx,0", "jz~FOO"]], [0, 0, 58, 0, 0, 2, 0, 1, 11, 11, 0.022113289760348584, ["mov     r8, [rsp+0C8h+psuffix]", "jmp     loc_C450"], ["mov~r8,[rsp+0]", "jmp~FOO"]], [0, 0, 58, 0, 0, 3, 1, 1, 16, 11, 0.022113289760348584, ["mov     r8, [rsp+0C8h+psuffix]", "xor     r9d, r9d", "jmp     loc_C450"], ["mov~r8,[rsp+0]", "xor~r9d,r9d", "jmp~FOO"]], [0, 0, 54, 0, 0, 2, 1, 1, 6, 9, 0.08480392156862746, ["test    r15d, r15d", "jnz     short loc_C480"], ["test~r15d,r15d", "jnz~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 11, 6, 0.024074074074074074, ["lea     inexact_style, [integerlim_0-1]", "mov     byte ptr [integerlim_0-1], 31h ; '1'", "jmp     do_grouping"], ["lea~inexact_style,[integerlim_0-1]+0]", "mov~[yte ptr [integerlim_0-1]+0],0", "jmp~FOO"]], [0, 0, 37, 0, 0, 2, 1, 1, 13, 7, 0.006835511982570806, ["test    eax, eax", "jz      loc_C656"], ["test~eax,eax", "jz~FOO"]], [1, 0, 36, 0, 0, 4, 1, 1, 14, 7, 0.0029956427015250544, ["movzx   edx, byte ptr [decimal_point]", "test    al, 2", "mov     [p_0], dl", "jz      loc_C656"], ["movzx~edx,<TAG>", "test~al,0", "mov~<TAG>,dl", "jz~FOO"]], [0, 0, 35, 0, 0, 3, 0, 1, 15, 7, 0.0, ["movzx   edx, word ptr [decimal_point+rax-2]", "mov     [p_0+rax-2], dx", "jmp     loc_C656"], ["movzx~edx,[ord ptr [decimal_point+0]", "mov~[p_0+0],dx", "jmp~FOO"]], [3, 0, 38, 3, 0, 14, 2, 0, 12, 7, 0.01056644880174292, ["mov     rax, [decimal_point]", "lea     rcx, [p_0+8]", "and     rcx, 0FFFFFFFFFFFFFFF8h", "mov     [p_0], rax", "mov     eax, ebp", "mov     rdx, [decimal_point+rax-8]", "mov     [p_0+rax-8], rdx", "mov     rax, p_0", "sub     rax, rcx", "sub     decimal_point, rax", "add     eax, ebp", "and     eax, 0FFFFFFF8h", "cmp     eax, 8", "jb      loc_C656"], ["mov~rax,<TAG>", "lea~rcx,[p_0+0]", "and~rcx,0", "mov~<TAG>,rax", "mov~eax,ebp", "mov~rdx,[decimal_point+0]", "mov~[p_0+0],rdx", "mov~rax,p_0", "sub~rax,rcx", "sub~decimal_point,rax", "add~eax,ebp", "and~eax,0", "cmp~eax,0", "jb~FOO"]], [0, 0, 35, 0, 0, 1, 0, 1, 15, 7, 0.003812636165577342, ["jmp     loc_C656"], ["jmp~FOO"]], [0, 0, 35, 0, 0, 5, 0, 1, 13, 7, 0.0009531590413943355, ["mov     edx, [decimal_point]", "mov     [p_0], edx", "mov     edx, [decimal_point+rax-4]", "mov     [p_0+rax-4], edx", "jmp     loc_C656"], ["mov~edx,<TAG>", "mov~<TAG>,edx", "mov~edx,[decimal_point+0]", "mov~[p_0+0],edx", "jmp~FOO"]], [0, 0, 129, 2, 0, 7, 1, 1, 2, 13, 0.006535947712418301, ["mov     rsi, n_0", "xor     edx, edx", "imul    rsi, multiplier", "mov     multiplier, amt", "div     multiplier", "cmp     rax, n_0", "jnz     loc_BEF5"], ["mov~rsi,n_0", "xor~edx,edx", "imul~rsi,multiplier", "mov~multiplier,amt", "div~,multiplier", "cmp~rax,n_0", "jnz~FOO"]], [0, 0, 130, 1, 0, 6, 2, 1, 1, 13, 0.00520152505446623, ["xor     edx, edx", "mov     psuffix_0, rcx", "div     rdi", "test    rdx, rdx", "mov     rdi, rax", "jz      loc_C250"], ["xor~edx,edx", "mov~psuffix_0,rcx", "div~,rdi", "test~rdx,rdx", "mov~rdi,rax", "jz~FOO"]], [0, 0, 53, 1, 0, 3, 1, 1, 7, 9, 0.0008714596949891067, ["add     edi, r9d", "test    edi, edi", "jle     short loc_C480"], ["add~edi,r9d", "test~edi,edi", "jle~FOO"]], [1, 0, 52, 1, 0, 3, 1, 1, 7, 9, 0.04022331154684096, ["add     amt, 1", "test    ecx, ecx", "jz      short loc_C480"], ["add~amt,0", "test~ecx,ecx", "jz~FOO"]], [2, 0, 54, 2, 0, 9, 1, 1, 6, 10, 0.041666666666666664, ["mov     rax, amt", "movsxd  rounding, edi", "and     eax, 1", "add     rax, rounding", "setnz   al", "movzx   eax, al", "add     r9d, eax", "cmp     r9d, 5", "jg      loc_C466"], ["mov~rax,amt", "movsxd~rounding,edi", "and~eax,0", "add~rax,rounding", "setnz~al", "movzx~eax,al", "add~r9d,eax", "cmp~r9d,0", "jg~FOO"]], [0, 0, 93, 0, 0, 3, 2, 1, 3, 12, 0.01056644880174292, ["xor     edi, edi", "xor     r9d, r9d", "jmp     use_integer_arithmetic"], ["xor~edi,edi", "xor~r9d,r9d", "jmp~FOO"]], [0, 0, 17, 0, 0, 2, 1, 1, 13, -1, 0.0009259259259259259, ["xor     ebx, ebx", "jmp     loc_C1A9"], ["xor~ebx,ebx", "jmp~FOO"]], [1, 0, 22, 0, 0, 3, 0, 0, 12, -1, 0.03104575163398693, ["mov     rcx, [rsp+0C8h+to_block_size]", "cmp     rcx, 1", "jbe     loc_C672"], ["mov~rcx,[rsp+0]", "cmp~rcx,0", "jbe~FOO"]], [0, 0, 37, 0, 0, 1, 0, 0, 9, 9, 8.169934640522875e-05, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 52, 0, 0, 3, 0, 1, 9, 11, 0.002832244008714597, ["fstp    st(2)", "fstp    st(2)", "jmp     short loc_BF74"], ["fstp~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "jmp~FOO"]], [1, 0, 57, 0, 0, 2, 0, 1, 8, 12, 0.0015795206971677559, ["cmp     ebx, 8", "jnz     short loc_BF50"], ["cmp~ebx,0", "jnz~FOO"]], [1, 0, 71, 0, 0, 2, 1, 1, 15, 12, 0.022930283224400872, ["test    r12b, 8", "jnz     short loc_C6A4"], ["test~r12b,0", "jnz~FOO"]], [0, 0, 72, 0, 0, 2, 1, 1, 16, 13, 0.0008714596949891067, ["xor     edi, edi", "jmp     loc_C681"], ["xor~edi,edi", "jmp~FOO"]], [0, 0, 93, 0, 0, 3, 2, 0, 4, 12, 0.0057461873638344225, ["xor     edi, edi", "test    r2, r2", "setnz   dil"], ["xor~edi,edi", "test~r2,r2", "setnz~dil"]], [1, 0, 36, 0, 0, 3, 0, 0, 7, 8, 0.09188453159041395, ["mov     inexact_style, integerlim_0", "mov     rcx, 0CCCCCCCCCCCCCCCDh", "nop     dword ptr [rax]"], ["mov~inexact_style,integerlim_0", "mov~rcx,0", "nop~<TAG>"]], [0, 0, 37, 0, 0, 1, 0, 1, 7, 9, 0.0010076252723311546, ["jmp     loc_C480"], ["jmp~FOO"]], [1, 0, 89, 0, 0, 2, 0, 1, 10, 12, 0.008714596949891067, ["cmp     ebx, 8", "jz      loc_C668"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 83, 0, 0, 2, 0, 1, 10, 12, 0.030555555555555555, ["cmp     r10, 9", "ja      loc_C668"], ["cmp~r10,0", "ja~FOO"]], [2, 0, 79, 1, 0, 6, 1, 1, 12, 15, 0.012445533769063181, ["mov     edx, eax", "and     edx, 1", "add     edx, edi", "cmp     edx, 2", "setnle  dl", "jmp     loc_C3F0"], ["mov~edx,eax", "and~edx,0", "add~edx,edi", "cmp~edx,0", "setnle~dl", "jmp~FOO"]], [1, 0, 81, 0, 0, 2, 0, 1, 11, 16, 0.022549019607843137, ["cmp     r15d, 1", "jz      loc_C692"], ["cmp~r15d,0", "jz~FOO"]], [0, 0, 89, 0, 0, 2, 1, 1, 6, 16, 0.01857298474945534, ["xor     ebx, ebx", "jmp     short loc_C0C7"], ["xor~ebx,ebx", "jmp~FOO"]], [0, 0, 89, 0, 0, 3, 1, 0, 8, 14, 0.01377995642701525, ["test    edi, edi", "setnz   dil", "movzx   edi, dil"], ["test~edi,edi", "setnz~dil", "movzx~edi,dil"]], [1, 0, 89, 3, 0, 16, 2, 1, 7, 15, 0.024509803921568627, ["mov     rax, amt", "xor     edx, edx", "mov     esi, edi", "div     r8", "sar     esi, 1", "mov     r10, rax", "lea     eax, [rdx+rdx*4]", "xor     edx, edx", "lea     eax, [tenths+rax*2]", "div     r11d", "lea     edx, [rsi+rdx*2]", "mov     r9d, eax", "mov     rsi, r10", "add     edi, edx", "cmp     r11d, edx", "ja      short loc_C0A8"], ["mov~rax,amt", "xor~edx,edx", "mov~esi,edi", "div~,r8", "sar~esi,0", "mov~r10,rax", "lea~eax,<TAG>", "xor~edx,edx", "lea~eax,<TAG>", "div~,r11d", "lea~edx,<TAG>", "mov~r9d,eax", "mov~rsi,r10", "add~edi,edx", "cmp~r11d,edx", "ja~FOO"]], [3, 0, 36, 5, 0, 12, 1, 1, 8, 7, 0.09090413943355119, ["mov     rax, amt", "sub     p_0, 1", "mul     rcx", "shr     rdx, 3", "lea     rax, [rdx+rdx*4]", "add     rax, rax", "sub     amt, rax", "add     esi, 30h ; '0'", "test    rdx, rdx", "mov     [p_0], sil", "mov     rsi, rdx", "jnz     short loc_C490"], ["mov~rax,amt", "sub~p_0,0", "mul~,rcx", "shr~rdx,0", "lea~rax,<TAG>", "add~rax,rax", "sub~amt,rax", "add~esi,0", "test~rdx,rdx", "mov~<TAG>,sil", "mov~rsi,rdx", "jnz~FOO"]], [0, 0, 34, 0, 0, 1, 0, 1, 9, 6, 0.0898148148148148, ["jmp     do_grouping"], ["jmp~FOO"]], [1, 0, 89, 1, 0, 3, 0, 1, 9, 13, 0.036274509803921565, ["add     ebx, 1", "cmp     r8, r10", "ja      loc_C3CD"], ["add~ebx,0", "cmp~r8,r10", "ja~FOO"]], [1, 0, 89, 1, 0, 5, 0, 1, 8, 14, 0.01377995642701525, ["cmp     r11d, edi", "setb    dil", "movzx   edi, dil", "add     edi, 2", "jmp     short loc_C0B2"], ["cmp~r11d,edi", "setb~dil", "movzx~edi,dil", "add~edi,0", "jmp~FOO"]], [1, 0, 37, 0, 0, 2, 2, 0, 13, 9, 0.0058823529411764705, ["and     eax, 0FFFFFFF8h", "xor     edx, edx"], ["and~eax,0", "xor~edx,edx"]], [1, 0, 23, 0, 0, 2, 0, 1, 11, -1, 0.12309368191721133, ["cmp     ebx, 0FFFFFFFFh", "jz      loc_C4C0"], ["cmp~ebx,0", "jz~FOO"]], [2, 0, 32, 1, 2, 22, 0, 3, 10, 4, 0.03965141612200435, ["mov     r14, integerlim_0", "mov     rdi, thousands_sep; s", "mov     [rsp+0C8h+integerlim], integerlim_0", "sub     r14, p_0", "mov     rbp, 0FFFFFFFFFFFFFFFFh", "call    _strlen", "lea     rdi, [rsp+0C8h+var_78]", "mov     ecx, 29h ; ')'", "mov     rdx, r14", "mov     rsi, p_0", "mov     [rsp+0C8h+n], rax", "mov     [rsp+0C8h+from_block_size], rdi", "call    ___memcpy_chk", "mov     ecx, r12d", "mov     dword ptr [rsp+0C8h+damt.value], ebx", "mov     opts, r14", "mov     exponent_0, thousands_sep", "mov     r8, [rsp+0C8h+integerlim]", "mov     p_0, [rsp+0C8h+grouping]", "mov     thousands_sep, [rsp+0C8h+n]", "mov     r14d, ecx", "jmp     short loc_C312"], ["mov~r14,integerlim_0", "mov~rdi,thousands_sep", "mov~[rsp+0],integerlim_0", "sub~r14,p_0", "mov~rbp,0", "call~FOO", "lea~rdi,[rsp+0]", "mov~ecx,0", "mov~rdx,r14", "mov~rsi,p_0", "mov~[rsp+0],rax", "mov~[rsp+0],rdi", "call~FOO", "mov~ecx,r12d", "mov~[word ptr [rsp+0],ebx", "mov~opts,r14", "mov~exponent_0,thousands_sep", "mov~r8,[rsp+0]", "mov~p_0,[rsp+0]", "mov~thousands_sep,[rsp+0]", "mov~r14d,ecx", "jmp~FOO"]], [1, 0, 33, 0, 0, 2, 1, 1, 9, 5, 0.18513071895424837, ["test    r12b, 4", "jnz     loc_C278"], ["test~r12b,0", "jnz~FOO"]], [2, 0, 20, 0, 0, 3, 0, 0, 13, -1, 0.018790849673202614, ["mov     edx, [rsp+0C8h+base]", "mov     ebx, 1", "mov     eax, 1"], ["mov~edx,[rsp+0]", "mov~ebx,0", "mov~eax,0"]], [1, 0, 61, 0, 0, 2, 2, 0, 18, 14, 0.0033769063180827887, ["and     eax, 0FFFFFFF8h", "xor     edi, edi"], ["and~eax,0", "xor~edi,edi"]], [0, 0, 17, 0, 0, 1, 0, 1, 16, -1, 0.0004629629629629629, ["jmp     loc_C1A9"], ["jmp~FOO"]], [0, 0, 32, 0, 0, 2, 0, 0, 12, 2, 0.029030501089324617, ["cmp     rbp, r12", "jbe     short loc_C2D8"], ["cmp~rbp,r12", "jbe~FOO"]], [1, 0, 61, 1, 0, 6, 0, 0, 19, 13, 0.004956427015250544, ["mov     r10d, edi", "add     edi, 8", "mov     r11, [r9+r10]", "cmp     edi, eax", "mov     [rdx+r10], r11", "jb      short loc_C6EA"], ["mov~r10d,edi", "add~edi,0", "mov~r11,<TAG>", "cmp~edi,eax", "mov~<TAG>,r11", "jb~FOO"]], [1, 0, 39, 0, 0, 2, 1, 1, 12, 8, 0.011546840958605665, ["and     ebp, 4", "jnz     loc_C7E1"], ["and~ebp,0", "jnz~FOO"]], [2, 0, 44, 1, 0, 7, 0, 0, 11, 8, 0.025490196078431372, ["mov     rax, rbp", "mov     byte ptr [r8-1], 30h ; '0'", "not     rax", "add     r8, rax", "cmp     ebp, 8", "mov     eax, ebp", "jnb     short loc_C76A"], ["mov~rax,rbp", "mov~[yte ptr [r8-1]+0],0", "not~rax", "add~r8,rax", "cmp~ebp,0", "mov~eax,ebp", "jnb~FOO"]], [0, 0, 68, 0, 0, 4, 1, 0, 2, 12, 0.017592592592592594, ["mov     [rsp+0C8h+from_block_size], rcx", "test    rcx, rcx", "fild    [rsp+0C8h+from_block_size]", "jns     short loc_BF09"], ["mov~[rsp+0],rcx", "test~rcx,rcx", "fild~<TAG>,[rsp+0]", "jns~FOO"]], [0, 0, 67, 0, 0, 1, 0, 0, 3, 12, 0.0, ["fadd    cs:dword_15BBC"], ["fadd~<TAG>,<TAG>"]], [1, 0, 74, 0, 0, 3, 0, 1, 15, 13, 0.007080610021786492, ["lea     rsi, [r10+1]", "cmp     amt, 0Ah", "jz      short loc_C760"], ["lea~rsi,[r10+0]", "cmp~amt,0", "jz~FOO"]], [1, 0, 38, 0, 0, 2, 0, 1, 6, 8, 0.023910675381263617, ["cmp     r15d, 1", "jz      short loc_C11C"], ["cmp~r15d,0", "jz~FOO"]], [1, 0, 62, 0, 0, 3, 1, 1, 5, 9, 0.03622004357298475, ["test    r12b, 10h", "fmulp   st(1), st", "jz      loc_C108"], ["test~r12b,0", "fmulp~<TAG>,<TAG>", "jz~FOO"]], [0, 0, 32, 1, 1, 6, 0, 1, 14, 4, 0.0003812636165577342, ["sub     r8, r13", "mov     rdx, r13; n", "mov     rsi, thousands_sep; src", "mov     rdi, r8; dest", "call    _memcpy", "mov     r8, rax"], ["sub~r8,r13", "mov~rdx,r13", "mov~rsi,thousands_sep", "mov~rdi,r8", "call~FOO", "mov~r8,rax"]], [0, 0, 9, 0, 0, 3, 1, 1, 16, -1, 0.006835511982570806, ["mov     r9d, [rsp+0C8h+var_98]", "test    r9d, r9d", "jz      loc_C620"], ["mov~r9d,[rsp+0]", "test~r9d,r9d", "jz~FOO"]], [0, 0, 37, 0, 0, 3, 0, 1, 7, 8, 0.0007080610021786493, ["fld     cs:tbyte_15C20", "fucomip st, st(1)", "ja      loc_C3A0"], ["fld~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "ja~FOO"]], [0, 0, 32, 0, 0, 3, 1, 1, 11, 3, 0.037527233115468406, ["movzx   eax, byte ptr [r15]", "test    al, al", "jz      short loc_C327"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 66, 0, 0, 5, 1, 0, 3, 11, 0.02423747276688453, ["mov     rax, [rsp+0C8h+to_block_size]", "mov     [rsp+0C8h+from_block_size], rax", "test    rax, rax", "fild    [rsp+0C8h+from_block_size]", "jns     short loc_BF22"], ["mov~rax,[rsp+0]", "mov~[rsp+0],rax", "test~rax,rax", "fild~<TAG>,[rsp+0]", "jns~FOO"]], [0, 0, 65, 0, 0, 1, 0, 0, 4, 11, 0.0, ["fadd    cs:dword_15BBC"], ["fadd~<TAG>,<TAG>"]], [2, 0, 32, 1, 0, 4, 0, 0, 12, 3, 0.0, ["cmp     al, 7Fh", "movzx   ebp, al", "cmovnb  rbp, r12", "add     r15, 1"], ["cmp~al,0", "movzx~ebp,al", "cmovnb~rbp,r12", "add~r15,0"]], [0, 0, 64, 0, 0, 5, 1, 0, 4, 10, 0.030446623093681915, ["fdivp   st(1), st", "mov     [rsp+0C8h+from_block_size], n_0", "test    n_0, n_0", "fild    [rsp+0C8h+from_block_size]", "jns     short loc_BF38"], ["fdivp~<TAG>,<TAG>", "mov~[rsp+0],n_0", "test~n_0,n_0", "fild~<TAG>,[rsp+0]", "jns~FOO"]], [0, 0, 63, 0, 0, 1, 0, 0, 5, 10, 0.0, ["fadd    cs:dword_15BBC"], ["fadd~<TAG>,<TAG>"]], [3, 0, 45, 1, 2, 19, 1, 2, 10, 9, 0.022312999273783586, ["sub     rsp, 10h", "lea     rcx, a1lf; \"%.1Lf\"", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "fld     st", "fstp    [rsp+0D8h+value.value]", "mov     decimal_point, [rsp+0D8h+buf]", "mov     esi, 1", "xor     eax, eax", "mov     rdi, r14", "fstp    [rsp+0D8h+damt.value]", "call    ___sprintf_chk", "mov     rdi, r14; s", "call    _strlen", "mov     r14, rax", "pop     buflen", "pop     rdx", "cmp     buflen, [rsp+0C8h+from_block_size]", "fld     [rsp+0C8h+damt.value]", "jbe     loc_BFF2"], ["sub~rsp,0", "lea~rcx,<TAG>", "mov~rdx,0", "fld~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "mov~decimal_point,[rsp+0]", "mov~esi,0", "xor~eax,eax", "mov~rdi,r14", "fstp~<TAG>,[rsp+0]", "call~FOO", "mov~rdi,r14", "call~FOO", "mov~r14,rax", "pop~buflen", "pop~rdx", "cmp~buflen,[rsp+0]", "fld~<TAG>,[rsp+0]", "jbe~FOO"]], [2, 0, 51, 1, 0, 10, 2, 1, 9, 10, 0.02712418300653595, ["mov     ecx, [rsp+0C8h+var_98]", "add     rbp, 1", "xor     eax, eax", "fdivrp  st(1), st", "test    ecx, ecx", "setz    al", "cmp     r15d, 1", "lea     rax, [rbp+rax+1]", "mov     [rsp+0C8h+from_block_size], rax", "jz      loc_C500"], ["mov~ecx,[rsp+0]", "add~rbp,0", "xor~eax,eax", "fdivrp~<TAG>,<TAG>", "test~ecx,ecx", "setz~al", "cmp~r15d,0", "lea~rax,[rbp+0]", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 57, 0, 0, 4, 1, 1, 6, 13, 0.01437908496732026, ["fild    [rsp+0C8h+base]", "xor     ebx, ebx", "fld     st", "jmp     short loc_BF54"], ["fild~<TAG>,[rsp+0]", "xor~ebx,ebx", "fld~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 25, 1, 1, 11, 0, 2, 13, -1, 0.006808278867102396, ["mov     eax, r14d", "mov     r15, r8", "mov     opts, r12", "mov     rsi, [rsp+0C8h+from_block_size]; src", "sub     r15, r14", "mov     rdx, r14; n", "mov     rdi, r15; dest", "mov     ebx, dword ptr [rsp+0C8h+damt.value]", "mov     r12d, eax", "call    _memcpy", "jmp     loc_C19A"], ["mov~eax,r14d", "mov~r15,r8", "mov~opts,r12", "mov~rsi,[rsp+0]", "sub~r15,r14", "mov~rdx,r14", "mov~rdi,r15", "mov~ebx,[word ptr [rsp+0]", "mov~r12d,eax", "call~FOO", "jmp~FOO"]], [0, 0, 36, 0, 0, 2, 0, 0, 11, 8, 0.008714596949891067, ["fld     cs:flt_15C1C", "fmul    st(1), st"], ["fld~<TAG>,<TAG>", "fmul~<TAG>,<TAG>"]], [0, 0, 57, 0, 0, 2, 0, 0, 9, 13, 0.00010893246187363834, ["fstp    st(1)", "fxch    st(2)"], ["fstp~<TAG>,<TAG>", "fxch~<TAG>,<TAG>"]], [4, 0, 35, 1, 2, 17, 2, 3, 7, 7, 0.027668845315904137, ["sub     rsp, 10h", "lea     rcx, a0lf; \"%.0Lf\"", "mov     esi, 1", "mov     n_0, [rsp+0D8h+buf]", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "xor     eax, eax", "fstp    [rsp+0D8h+value.value]", "xor     ebp, ebp", "mov     rdi, rbx", "call    ___sprintf_chk", "mov     rdi, rbx; s", "mov     ebx, 0FFFFFFFFh", "call    _strlen", "pop     rsi", "pop     rdi", "mov     decimal_point, rax", "jmp     short loc_C170"], ["sub~rsp,0", "lea~rcx,<TAG>", "mov~esi,0", "mov~n_0,[rsp+0]", "mov~rdx,0", "xor~eax,eax", "fstp~<TAG>,<TAG>", "xor~ebp,ebp", "mov~rdi,rbx", "call~FOO", "mov~rdi,rbx", "mov~ebx,0", "call~FOO", "pop~rsi", "pop~rdi", "mov~decimal_point,rax", "jmp~FOO"]], [1, 0, 36, 1, 1, 7, 0, 2, 8, 8, 0.0, ["sub     rsp, 10h", "mov     edi, r15d; inexact_style", "fstp    [rsp+0D8h+value.value]; value", "call    adjust_value", "pop     r8", "pop     r9", "jmp     loc_C11C"], ["sub~rsp,0", "mov~edi,r15d", "fstp~<TAG>,<TAG>", "call~FOO", "pop~r8", "pop~r9", "jmp~FOO"]], [1, 0, 57, 1, 0, 6, 0, 0, 7, 12, 0.019825708061002176, ["fld     st", "add     ebx, 1", "fmul    st, st(2)", "fxch    st(3)", "fucomi  st, st(3)", "jb      short loc_BF70"], ["fld~<TAG>,<TAG>", "add~ebx,0", "fmul~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "jb~FOO"]], [0, 0, 35, 0, 0, 2, 0, 1, 12, 7, 0.017156862745098037, ["fstp    st", "jmp     short loc_C170"], ["fstp~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 35, 0, 0, 2, 0, 0, 13, 7, 0.001906318082788671, ["fstp    st", "nop     word ptr [rax+rax+00h]"], ["fstp~<TAG>,<TAG>", "nop~[ord ptr [rax+0]"]], [0, 1, 14, 0, 0, 5, 0, 1, 14, -1, 0.0, ["mov     rcx, [rsp+0C8h+buf]", "lea     rdi, [rcx+289h]", "mov     byte ptr [rcx+288h], 20h ; ' '", "mov     [rsp+0C8h+psuffix], rdi", "jmp     loc_C1C1"], ["mov~rcx,<TAG>", "lea~rdi,[rcx+0]", "mov~[yte ptr [rcx+0],<STR>", "mov~[rsp+0],rdi", "jmp~FOO"]], [1, 0, 15, 0, 0, 2, 1, 1, 13, -1, 0.07908496732026143, ["and     r12d, 40h", "jnz     loc_C358"], ["and~r12d,0", "jnz~FOO"]], [0, 0, 52, 0, 0, 2, 0, 0, 8, 11, 0.0196078431372549, ["fstp    st(2)", "fstp    st(2)"], ["fstp~<TAG>,<TAG>", "fstp~<TAG>,<TAG>"]], [1, 0, 46, 1, 1, 10, 0, 2, 11, 10, 0.0029774872912127818, ["sub     rsp, 10h", "mov     edi, r15d; inexact_style", "fld     st", "fstp    [rsp+0D8h+value.value]; value", "fstp    [rsp+0D8h+damt.value]", "call    adjust_value", "pop     rax", "pop     rdx", "fld     [rsp+0C8h+damt.value]", "jmp     loc_BFA9"], ["sub~rsp,0", "mov~edi,r15d", "fld~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "fstp~<TAG>,[rsp+0]", "call~FOO", "pop~rax", "pop~rdx", "fld~<TAG>,[rsp+0]", "jmp~FOO"]], [0, 0, 48, 0, 0, 3, 0, 1, 10, 11, 0.005519244734931007, ["fld     cs:tbyte_15C20", "fucomip st, st(1)", "ja      loc_C378"], ["fld~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "ja~FOO"]], [0, 0, 34, 3, 1, 9, 0, 1, 8, 6, 0.07129629629629629, ["mov     inexact_style, [rsp+0C8h+psuffix]", "mov     rsi, [rsp+0C8h+buf]; src", "mov     rdx, buflen; n", "sub     r15, buflen", "sub     buflen, nonintegerlen", "mov     rdi, p_0; dest", "call    _memmove", "mov     r8, r14", "add     r8, p_0"], ["mov~inexact_style,[rsp+0]", "mov~rsi,<TAG>", "mov~rdx,buflen", "sub~r15,buflen", "sub~buflen,nonintegerlen", "mov~rdi,p_0", "call~FOO", "mov~r8,r14", "add~r8,p_0"]], [3, 0, 35, 1, 2, 17, 2, 3, 12, 7, 0.01906318082788671, ["fdivp   st(1), st", "sub     rsp, 10h", "lea     rcx, a0lf; \"%.0Lf\"", "mov     r14, [rsp+0D8h+buf]", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "xor     eax, eax", "xor     ebp, ebp", "mov     rdi, r14", "fstp    [rsp+0D8h+value.value]", "call    ___sprintf_chk", "mov     rdi, r14; s", "call    _strlen", "pop     r10", "mov     r14, rax", "pop     r11", "jmp     loc_C170"], ["fdivp~<TAG>,<TAG>", "sub~rsp,0", "lea~rcx,<TAG>", "mov~r14,[rsp+0]", "mov~rdx,0", "mov~esi,0", "xor~eax,eax", "xor~ebp,ebp", "mov~rdi,r14", "fstp~<TAG>,<TAG>", "call~FOO", "mov~rdi,r14", "call~FOO", "pop~r10", "mov~r14,rax", "pop~r11", "jmp~FOO"]], [0, 0, 37, 0, 0, 3, 0, 0, 14, 8, 0.004738562091503268, ["fld     cs:tbyte_15C20", "fucomip st, st(2)", "jbe     short loc_C553"], ["fld~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "jbe~FOO"]], [1, 0, 36, 1, 1, 9, 0, 2, 15, 8, 0.0, ["fstp    dword ptr [rsp+0C8h+from_block_size]", "sub     rsp, 10h", "mov     edi, r15d; inexact_style", "fstp    [rsp+0D8h+value.value]; value", "call    adjust_value", "pop     rbp", "pop     r14", "fld     dword ptr [rsp+0C8h+from_block_size]", "jmp     short loc_C553"], ["fstp~<TAG>,[word ptr [rsp+0]", "sub~rsp,0", "mov~edi,r15d", "fstp~<TAG>,<TAG>", "call~FOO", "pop~rbp", "pop~r14", "fld~<TAG>,[word ptr [rsp+0]", "jmp~FOO"]], [0, 0, 46, 0, 0, 1, 0, 0, 11, 10, 0.0029774872912127818, ["fld     st"], ["fld~<TAG>,<TAG>"]], [0, 0, 38, 0, 0, 2, 0, 0, 13, 9, 0.002033405954974582, ["fld     cs:flt_15C1C", "fmul    st(1), st"], ["fld~<TAG>,<TAG>", "fmul~<TAG>,<TAG>"]], [1, 0, 37, 1, 0, 6, 0, 0, 14, 8, 0.004901960784313725, ["mov     esi, edx", "add     edx, 8", "mov     rdi, [r14+rsi]", "cmp     edx, eax", "mov     [rcx+rsi], rdi", "jb      short loc_C7A0"], ["mov~esi,edx", "add~edx,0", "mov~rdi,<TAG>", "cmp~edx,eax", "mov~<TAG>,rdi", "jb~FOO"]], [3, 0, 45, 1, 2, 18, 1, 3, 12, 9, 0.009767610748002906, ["fstp    [rsp+0C8h+damt.value]", "sub     rsp, 10h", "lea     rcx, a1lf; \"%.1Lf\"", "mov     esi, 1", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "xor     eax, eax", "mov     decimal_point, [rsp+0D8h+buf]", "mov     rdi, r14", "fstp    [rsp+0D8h+value.value]", "call    ___sprintf_chk", "mov     rdi, r14; s", "call    _strlen", "pop     rcx", "pop     rsi", "cmp     rax, [rsp+0C8h+from_block_size]", "mov     r14, rax", "fld     [rsp+0C8h+damt.value]", "ja      loc_C598"], ["fstp~<TAG>,[rsp+0]", "sub~rsp,0", "lea~rcx,<TAG>", "mov~esi,0", "mov~rdx,0", "xor~eax,eax", "mov~decimal_point,[rsp+0]", "mov~rdi,r14", "fstp~<TAG>,<TAG>", "call~FOO", "mov~rdi,r14", "call~FOO", "pop~rcx", "pop~rsi", "cmp~rax,[rsp+0]", "mov~r14,rax", "fld~<TAG>,[rsp+0]", "ja~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 14, -1, 0.0673202614379085, ["test    ebx, ebx", "jz      loc_C7F6"], ["test~ebx,ebx", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 12, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 15, -1, 0.040522875816993466, ["cmp     ebx, 1", "jnz     short loc_C1DC"], ["cmp~ebx,0", "jnz~FOO"]], [0, 0, 79, 0, 0, 5, 3, 0, 12, 15, 0.012445533769063181, ["test    r15d, r15d", "setz    dl", "test    edi, edi", "setnle  r8b", "and     edx, r8d"], ["test~r15d,r15d", "setz~dl", "test~edi,edi", "setnle~r8b", "and~edx,r8d"]]], "func_feature": [21, 82, 117, 3, 137, 209, 7, 652, 0.02032, 9, 61], "succs": [[97, 21], [0, 22], [46], [2, 70], [8, 9], [4, 29], [119, 15], [118, 6], [26], [8], [8, 29], [8, 12], [26], [45], [13, 77], [18, 127], [27], [16, 100], [126], [25, 36], [19], [19], [68, 21], [95, 31], [58, 23], [30, 39], [34, 134], [26, 85], [121, 26], [26], [41, 35], [3, 95], [44, 71], [32, 65], [], [45], [89, 35], [35], [35], [35], [35], [40, 35], [90, 43], [42, 28], [50, 94], [49, 61], [45, 14], [45], [45], [59, 71], [87], [50, 52], [50, 53], [50], [50, 84], [50], [50], [62, 95], [57, 95], [60, 71], [33, 71], [72, 60], [46], [28], [88, 63], [71], [110], [66, 114], [48, 20], [68], [46], [80], [71], [79, 47], [76, 47], [1], [136, 75], [79], [82], [83, 78], [80, 81], [87], [73, 74], [82], [131], [64, 28], [103], [27, 86], [43], [92], [28], [112, 17], [92, 37], [56, 51], [93, 54], [96, 104], [104], [69, 38], [115, 102], [98, 111], [103], [10, 5], [115, 116], [106, 91], [105, 107], [107], [91], [99, 108], [99], [113, 7], [124, 109], [117], [27], [126], [117], [125], [115], [122, 67], [125], [125], [133], [120, 133], [110], [132], [129, 123], [87], [125], [128, 126], [126], [132], [127], [131, 55], [130, 7], [11, 135], [], [101, 5], [1]], "fname": "human_readable", "n_num": 137}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 4, 0, 0.07122507122507123, ["mov     rcx, [rsp+38h+var_30]", "xor     rcx, fs:28h", "jnz     loc_CA01"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [2, 0, 13, 1, 0, 5, 0, 1, 6, 0, 0.029914529914529916, ["add     rbx, 1", "movzx   edi, byte ptr [rbx]", "lea     edx, [rdi-30h]", "cmp     dl, 9", "ja      short loc_C8F0"], ["add~rbx,0", "movzx~edi,<TAG>", "lea~edx,[rdi-30h]+0]", "cmp~dl,0", "ja~FOO"]], [0, 0, 14, 0, 0, 3, 0, 1, 5, 0, 0.09116809116809117, ["mov     rcx, [rsp+38h+var_38]", "cmp     rbx, rcx", "jnz     short loc_C8F9"], ["mov~rcx,<TAG>", "cmp~rbx,rcx", "jnz~FOO"]], [0, 0, 13, 0, 0, 2, 0, 1, 7, 0, 0.007122507122507123, ["cmp     rbx, rcx", "jz      loc_C9C0"], ["cmp~rbx,rcx", "jz~FOO"]], [0, 0, 25, 0, 1, 5, 1, 2, 2, 0, 0.011396011396011397, ["lea     rdi, aBlocksize; \"BLOCKSIZE\"", "call    _getenv", "test    rax, rax", "mov     rbx, rax", "jnz     loc_C84C"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jnz~FOO"]], [0, 0, 26, 0, 1, 5, 1, 2, 1, 0, 0.005698005698005698, ["lea     rdi, aLsBlockSize+3; name", "call    _getenv", "test    rax, rax", "mov     spec, rax", "jnz     loc_C84C"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~spec,rax", "jnz~FOO"]], [2, 0, 20, 1, 0, 2, 0, 0, 2, 0, 0.0, ["add     rbx, 1", "mov     ebp, 4"], ["add~rbx,0", "mov~ebp,0"]], [1, 0, 21, 0, 0, 3, 1, 1, 1, 0, 0.08262108262108263, ["xor     ebp, ebp", "cmp     byte ptr [rbx], 27h ; '''", "jnz     short loc_C85C"], ["xor~ebp,ebp", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 5, 0, 0, 3, 0, 1, 5, 0, 0.07122507122507123, ["mov     rdx, [block_size]", "mov     [opts+0], ebp", "jmp     short loc_C924"], ["mov~rdx,<TAG>", "mov~[opts+0],ebp", "jmp~FOO"]], [1, 0, 15, 0, 0, 4, 0, 0, 4, 0, 0.09971509971509972, ["movzx   esi, byte ptr [rbx]", "lea     edx, [rsi-30h]", "cmp     dl, 9", "jbe     short loc_C908"], ["movzx~esi,<TAG>", "lea~edx,[rsi-30h]+0]", "cmp~dl,0", "jbe~FOO"]], [0, 1, 6, 0, 0, 2, 1, 1, 9, 0, 0.017094017094017096, ["or      ebp, 20h", "jmp     loc_C908"], ["or~ebp,<STR>", "jmp~FOO"]], [1, 1, 8, 0, 0, 3, 1, 1, 8, 0, 0.03561253561253561, ["or      ebp, 180h", "cmp     byte ptr [rcx-2], 69h ; 'i'", "jnz     loc_C908"], ["or~ebp,<STR>", "cmp~[yte ptr [rcx-2]+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 6, 2, 0, 3, 0, 0.01851851851851852, ["lea     rdx, block_size_opts", "cdqe", "mov     qword ptr [block_size], 1", "or      ebp, [rdx+rax*4]", "xor     eax, eax", "mov     [opts+0], ebp"], ["lea~rdx,<TAG>", "cdqe~", "mov~<TAG>,0", "or~ebp,<TAG>", "xor~eax,eax", "mov~[opts+0],ebp"]], [1, 0, 19, 0, 1, 7, 1, 2, 2, 0, 0.12820512820512822, ["lea     rdx, block_size_opts; vallist", "lea     rsi, block_size_args; arglist", "mov     ecx, 4; valsize", "mov     rdi, rbx; arg", "call    argmatch", "test    eax, eax", "js      short loc_C8B8"], ["lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~ecx,0", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 5, 0, 0, 2, 0, 0, 4, 0, 0.02421652421652422, ["mov     rdx, [block_size]", "mov     dword ptr [opts+0], 0"], ["mov~rdx,<TAG>", "mov~[word ptr [opts+0],0"]], [0, 0, 17, 0, 1, 8, 2, 2, 3, 0, 0.11965811965811966, ["lea     r8, valid_suffixes; \"eEgGkKmMpPtTyYzZ0\"", "xor     edx, edx; strtol_base", "mov     rsi, rsp; ptr", "mov     rcx, block_size; val", "mov     rdi, rbx; s", "call    xstrtoumax", "test    eax, eax", "jnz     short loc_C918"], ["lea~r8,<TAG>", "xor~edx,edx", "mov~rsi,rsp", "mov~rcx,block_size", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 5, 0, 1, 4, 1, 2, 3, 0, 0.01566951566951567, ["lea     rdi, aPosixlyCorrect; \"POSIXLY_CORRECT\"", "call    _getenv", "test    rax, rax", "jz      short loc_C9EA"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 5, 0, 0.08262108262108263, ["test    rdx, rdx", "jnz     loc_C895"], ["test~rdx,rdx", "jnz~FOO"]], [2, 2, 3, 1, 1, 9, 1, 2, 6, 0, 0.0, ["lea     rdi, aPosixlyCorrect; \"POSIXLY_CORRECT\"", "call    _getenv", "cmp     rax, 1", "sbb     rax, rax", "and     eax, 200h", "add     rax, 200h", "mov     [block_size], rax", "mov     eax, 4", "jmp     loc_C895"], ["lea~rdi,<TAG>", "call~FOO", "cmp~rax,0", "sbb~rax,rax", "and~eax,<STR>", "add~rax,<STR>", "mov~<TAG>,rax", "mov~eax,0", "jmp~FOO"]], [1, 1, 3, 0, 0, 4, 1, 1, 4, 0, 0.005698005698005698, ["mov     qword ptr [block_size], 200h", "xor     eax, eax", "mov     dword ptr [opts+0], 0", "jmp     loc_C895"], ["mov~<TAG>,<STR>", "xor~eax,eax", "mov~[word ptr [opts+0],0", "jmp~FOO"]], [2, 0, 3, 0, 0, 4, 1, 1, 4, 0, 0.005698005698005698, ["mov     qword ptr [block_size], 400h", "xor     eax, eax", "mov     dword ptr [opts+0], 0", "jmp     loc_C895"], ["mov~<TAG>,0", "xor~eax,eax", "mov~[word ptr [opts+0],0", "jmp~FOO"]], [0, 1, 7, 0, 0, 1, 1, 0, 8, 0, 0.01851851851851852, ["or      bpl, 80h"], ["or~bpl,<STR>"]], [1, 0, 10, 0, 0, 2, 0, 1, 7, 0, 0.07692307692307693, ["cmp     byte ptr [rcx-1], 42h ; 'B'", "jz      short loc_C9D8"], ["cmp~[yte ptr [rcx-1]+0],0", "jz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 6, 0, 0.06410256410256411, ["jmp     loc_C9C0"], ["jmp~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 5, 0, 0.0, ["add     rsp, 18h", "pop     rbx", "pop     rbp", "pop     block_size", "pop     opts", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~block_size", "pop~opts", "retn"]], [1, 0, 27, 1, 0, 13, 2, 1, 0, 0, 0.0, ["push    r13", "push    r12", "mov     r13, opts", "push    rbp", "push    rbx", "mov     r12, block_size", "mov     rbx, spec", "sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+38h+var_30], rax", "xor     eax, eax", "test    spec, spec", "jz      loc_C960"], ["push~r13", "push~r12", "mov~r13,opts", "push~rbp", "push~rbx", "mov~r12,block_size", "mov~rbx,spec", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~spec,spec", "jz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 9, 0, 0.0014245014245014246, ["jmp     short loc_C9CA"], ["jmp~FOO"]]], "func_feature": [7, 19, 28, 2, 28, 41, 2, 111, 0.03872, 7, 5], "succs": [[], [0, 25], [9, 4], [24, 2], [2, 23], [8, 17], [8, 5], [14], [14, 7], [18], [9, 3], [9], [9, 27], [1], [16, 13], [18], [10, 15], [20, 21], [1, 19], [1], [1], [1], [11], [12, 22], [23], [], [8, 6], [11]], "fname": "human_options", "n_num": 28}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 5, 0, 1, 4, 0, 1, 0, 0, 0.0, ["mov     r12, [pwent]", "mov     rdi, r12; s", "call    _strlen", "lea     rdi, [rax+11h]; n"], ["mov~r12,<TAG>", "mov~rdi,r12", "call~FOO", "lea~rdi,[rax+0]"]], [1, 0, 6, 0, 1, 6, 1, 2, 1, 3, 0.09090909090909091, ["mov     ebp, edi", "lea     r12, aReportBugsToS+16h; \"\"", "call    _getpwuid", "test    pwent, pwent", "mov     edi, 11h", "jz      short loc_CA64"], ["mov~ebp,edi", "lea~r12,<TAG>", "call~FOO", "test~pwent,pwent", "mov~edi,0", "jz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 1, 1, 3, 0.045454545454545456, ["cmp     edi, [tail]", "jnz     short loc_CA34"], ["cmp~edi,<TAG>", "jnz~FOO"]], [0, 0, 11, 0, 0, 6, 1, 1, 0, 4, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, cs:user_alist", "test    tail, tail", "jz      short loc_CA3D"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,<TAG>", "test~tail,tail", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 2, 2, 0.05454545454545454, ["jmp     short loc_CA8C"], ["jmp~FOO"]], [0, 0, 4, 0, 2, 9, 0, 2, 2, 2, 0.09090909090909091, ["call    xmalloc", "lea     rdi, [rax+10h]; dest", "mov     [rax], ebp", "mov     rsi, name; src", "mov     tail, rax", "call    _strcpy", "mov     rax, cs:user_alist", "mov     cs:user_alist, match", "mov     [match+8], rax"], ["call~FOO", "lea~rdi,[rax+0]", "mov~<TAG>,ebp", "mov~rsi,name", "mov~tail,rax", "call~FOO", "mov~rax,<TAG>", "mov~<TAG>,match", "mov~[match+0],rax"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, -1, 0.04090909090909091, ["lea     rax, [match+10h]"], ["lea~rax,[match+0]"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 1, 0.21818181818181817, ["cmp     byte ptr [match+10h], 0", "jz      short loc_CAA0"], ["cmp~[yte ptr [match+0],0", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 3, 2, 0.03636363636363636, ["cmp     [tail], edi", "jz      short loc_CA8C"], ["cmp~<TAG>,edi", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 2, 3, 0.07272727272727272, ["mov     tail, [tail+8]", "test    tail, tail", "jnz     short loc_CA30"], ["mov~tail,[tail+0]", "test~tail,tail", "jnz~FOO"]], [0, 0, 1, 0, 0, 2, 1, 1, 4, 0, 0.04090909090909091, ["xor     eax, eax", "jmp     short loc_CA96"], ["xor~eax,eax", "jmp~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 5, -1, 0.0, ["pop     match", "pop     rbp", "pop     r12", "retn"], ["pop~match", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [4, 4, 12, 0, 12, 17, 2, 42, 0.05758, 2, 0], "succs": [[5], [0, 5], [9, 4], [1, 2], [7], [7], [11], [10, 6], [9, 7], [8, 1], [11], []], "fname": "getuser", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.03571428571428572, ["mov     rax, cs:nouser_alist", "mov     cs:nouser_alist, tail", "mov     [tail+8], rax", "xor     eax, eax", "jmp     loc_CAF2"], ["mov~rax,<TAG>", "mov~<TAG>,tail", "mov~[tail+0],rax", "xor~eax,eax", "jmp~FOO"]], [0, 0, 4, 0, 4, 13, 1, 5, 2, 0, 0.1523809523809524, ["mov     rdi, user; name", "call    _getpwnam", "mov     rdi, user; s", "mov     rbp, rax", "call    _strlen", "lea     rdi, [rax+11h]; n", "call    xmalloc", "lea     rdi, [rax+10h]; dest", "mov     rsi, user; src", "mov     tail, rax", "call    _strcpy", "test    pwent, pwent", "jz      short loc_CB8C"], ["mov~rdi,user", "call~FOO", "mov~rdi,user", "mov~rbp,rax", "call~FOO", "lea~rdi,[rax+0]", "call~FOO", "lea~rdi,[rax+0]", "mov~rsi,user", "mov~tail,rax", "call~FOO", "test~pwent,pwent", "jz~FOO"]], [0, 0, 15, 0, 0, 7, 1, 1, 0, 0, 0.0, ["push    r12", "push    rbp", "mov     r12, user", "push    rbx", "mov     rbx, cs:user_alist", "test    tail, tail", "jz      short loc_CB00"], ["push~r12", "push~rbp", "mov~r12,user", "push~rbx", "mov~rbx,<TAG>", "test~tail,tail", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 3, 0, 0.13333333333333336, ["cmp     [tail+10h], bpl", "jnz     short loc_CB18"], ["cmp~[tail+0],bpl", "jnz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 2, 0, 0.1142857142857143, ["movzx   ebp, byte ptr [user]", "jmp     short loc_CB21"], ["movzx~ebp,<TAG>", "jmp~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 4, 0, 0.0761904761904762, ["mov     tail, [tail+8]", "test    tail, tail", "jz      short loc_CB40"], ["mov~tail,[tail+0]", "test~tail,tail", "jz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 1, 0, 0.01666666666666667, ["movzx   ebp, byte ptr [user]", "jmp     short loc_CAD9"], ["movzx~ebp,<TAG>", "jmp~FOO"]], [0, 0, 2, 0, 0, 6, 0, 1, 3, 0, 0.030952380952380953, ["mov     eax, [pwent+10h]", "mov     [tail], eax", "mov     rax, cs:user_alist", "mov     cs:user_alist, tail", "mov     [tail+8], rax", "jmp     loc_CAEF"], ["mov~eax,[pwent+0]", "mov~<TAG>,eax", "mov~rax,<TAG>", "mov~<TAG>,tail", "mov~[tail+0],rax", "jmp~FOO"]], [0, 0, 10, 0, 0, 3, 1, 1, 1, 0, 0.2, ["mov     tail, cs:nouser_alist", "test    tail, tail", "jz      short loc_CB40"], ["mov~tail,<TAG>", "test~tail,tail", "jz~FOO"]], [0, 0, 14, 0, 0, 3, 1, 1, 3, 0, 0.13333333333333336, ["mov     tail, [tail+8]", "test    tail, tail", "jz      short loc_CB00"], ["mov~tail,[tail+0]", "test~tail,tail", "jz~FOO"]], [0, 0, 0, 0, 0, 5, 1, 0, 5, 0, 0.0, ["pop     tail", "xor     eax, eax", "pop     rbp", "pop     user", "retn"], ["pop~tail", "xor~eax,eax", "pop~rbp", "pop~user", "retn"]], [0, 0, 9, 0, 1, 5, 1, 2, 4, 0, 0.04285714285714286, ["lea     rdi, [tail+10h]; s1", "mov     rsi, user; s2", "call    _strcmp", "test    eax, eax", "jnz     short loc_CB18"], ["lea~rdi,[tail+0]", "mov~rsi,user", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 14, 0, 1, 5, 1, 2, 3, 0, 0.028571428571428574, ["lea     rdi, [tail+10h]; s1", "mov     rsi, user; s2", "call    _strcmp", "test    eax, eax", "jnz     short loc_CAD0"], ["lea~rdi,[tail+0]", "mov~rsi,user", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 2, 0, 0.08571428571428572, ["cmp     [tail+10h], bpl", "jnz     short loc_CAD0"], ["cmp~[tail+0],bpl", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, 0, 0.02142857142857143, ["mov     rax, tail"], ["mov~rax,tail"]], [0, 0, 0, 0, 0, 4, 0, 0, 4, 0, 0.0, ["pop     tail", "pop     rbp", "pop     user", "retn"], ["pop~tail", "pop~rbp", "pop~user", "retn"]]], "func_feature": [6, 9, 19, 0, 16, 23, 0, 68, 0.06696, 2, 0], "succs": [[15], [0, 7], [8, 6], [11, 5], [3], [1, 3], [13], [14], [1, 4], [8, 13], [], [10, 5], [9, 14], [9, 12], [15], []], "fname": "getuidbyname", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 5, 0, 1, 4, 0, 1, 0, 0, 0.0, ["mov     r12, [grent]", "mov     rdi, r12; s", "call    _strlen", "lea     rdi, [rax+11h]; n"], ["mov~r12,<TAG>", "mov~rdi,r12", "call~FOO", "lea~rdi,[rax+0]"]], [1, 0, 6, 0, 1, 6, 1, 2, 1, 3, 0.09090909090909091, ["mov     ebp, edi", "lea     r12, aReportBugsToS+16h; \"\"", "call    _getgrgid", "test    grent, grent", "mov     edi, 11h", "jz      short loc_CC04"], ["mov~ebp,edi", "lea~r12,<TAG>", "call~FOO", "test~grent,grent", "mov~edi,0", "jz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 1, 1, 3, 0.045454545454545456, ["cmp     edi, [tail]", "jnz     short loc_CBD4"], ["cmp~edi,<TAG>", "jnz~FOO"]], [0, 0, 11, 0, 0, 6, 1, 1, 0, 4, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, cs:group_alist", "test    tail, tail", "jz      short loc_CBDD"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,<TAG>", "test~tail,tail", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 2, 2, 0.05454545454545454, ["jmp     short loc_CC2C"], ["jmp~FOO"]], [0, 0, 4, 0, 2, 9, 0, 2, 2, 2, 0.09090909090909091, ["call    xmalloc", "lea     rdi, [rax+10h]; dest", "mov     [rax], ebp", "mov     rsi, name; src", "mov     tail, rax", "call    _strcpy", "mov     rax, cs:group_alist", "mov     cs:group_alist, match", "mov     [match+8], rax"], ["call~FOO", "lea~rdi,[rax+0]", "mov~<TAG>,ebp", "mov~rsi,name", "mov~tail,rax", "call~FOO", "mov~rax,<TAG>", "mov~<TAG>,match", "mov~[match+0],rax"]], [0, 0, 1, 0, 0, 2, 1, 1, 4, 0, 0.04090909090909091, ["xor     eax, eax", "jmp     short loc_CC36"], ["xor~eax,eax", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 1, 0.21818181818181817, ["cmp     byte ptr [match+10h], 0", "jz      short loc_CC40"], ["cmp~[yte ptr [match+0],0", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, -1, 0.04090909090909091, ["lea     rax, [match+10h]"], ["lea~rax,[match+0]"]], [0, 0, 9, 0, 0, 2, 0, 1, 3, 2, 0.03636363636363636, ["cmp     [tail], edi", "jz      short loc_CC2C"], ["cmp~<TAG>,edi", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 2, 3, 0.07272727272727272, ["mov     tail, [tail+8]", "test    tail, tail", "jnz     short loc_CBD0"], ["mov~tail,[tail+0]", "test~tail,tail", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 5, -1, 0.0, ["pop     match", "pop     rbp", "pop     r12", "retn"], ["pop~match", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [4, 4, 12, 0, 12, 17, 2, 42, 0.05758, 2, 0], "succs": [[5], [0, 5], [10, 4], [1, 2], [7], [7], [11], [8, 6], [11], [10, 7], [9, 1], []], "fname": "getgroup", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.03571428571428572, ["mov     rax, cs:nogroup_alist", "mov     cs:nogroup_alist, tail", "mov     [tail+8], rax", "xor     eax, eax", "jmp     loc_CC92"], ["mov~rax,<TAG>", "mov~<TAG>,tail", "mov~[tail+0],rax", "xor~eax,eax", "jmp~FOO"]], [0, 0, 4, 0, 4, 13, 1, 5, 2, 0, 0.1523809523809524, ["mov     rdi, group; name", "call    _getgrnam", "mov     rdi, group; s", "mov     rbp, rax", "call    _strlen", "lea     rdi, [rax+11h]; n", "call    xmalloc", "lea     rdi, [rax+10h]; dest", "mov     rsi, group; src", "mov     tail, rax", "call    _strcpy", "test    grent, grent", "jz      short loc_CD2C"], ["mov~rdi,group", "call~FOO", "mov~rdi,group", "mov~rbp,rax", "call~FOO", "lea~rdi,[rax+0]", "call~FOO", "lea~rdi,[rax+0]", "mov~rsi,group", "mov~tail,rax", "call~FOO", "test~grent,grent", "jz~FOO"]], [0, 0, 15, 0, 0, 7, 1, 1, 0, 0, 0.0, ["push    r12", "push    rbp", "mov     r12, group", "push    rbx", "mov     rbx, cs:group_alist", "test    tail, tail", "jz      short loc_CCA0"], ["push~r12", "push~rbp", "mov~r12,group", "push~rbx", "mov~rbx,<TAG>", "test~tail,tail", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 3, 0, 0.13333333333333336, ["cmp     [tail+10h], bpl", "jnz     short loc_CCB8"], ["cmp~[tail+0],bpl", "jnz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 2, 0, 0.1142857142857143, ["movzx   ebp, byte ptr [group]", "jmp     short loc_CCC1"], ["movzx~ebp,<TAG>", "jmp~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 4, 0, 0.0761904761904762, ["mov     tail, [tail+8]", "test    tail, tail", "jz      short loc_CCE0"], ["mov~tail,[tail+0]", "test~tail,tail", "jz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 1, 0, 0.01666666666666667, ["movzx   ebp, byte ptr [group]", "jmp     short loc_CC79"], ["movzx~ebp,<TAG>", "jmp~FOO"]], [0, 0, 2, 0, 0, 6, 0, 1, 3, 0, 0.030952380952380953, ["mov     eax, [grent+10h]", "mov     [tail], eax", "mov     rax, cs:group_alist", "mov     cs:group_alist, tail", "mov     [tail+8], rax", "jmp     loc_CC8F"], ["mov~eax,[grent+0]", "mov~<TAG>,eax", "mov~rax,<TAG>", "mov~<TAG>,tail", "mov~[tail+0],rax", "jmp~FOO"]], [0, 0, 10, 0, 0, 3, 1, 1, 1, 0, 0.2, ["mov     tail, cs:nogroup_alist", "test    tail, tail", "jz      short loc_CCE0"], ["mov~tail,<TAG>", "test~tail,tail", "jz~FOO"]], [0, 0, 14, 0, 0, 3, 1, 1, 3, 0, 0.13333333333333336, ["mov     tail, [tail+8]", "test    tail, tail", "jz      short loc_CCA0"], ["mov~tail,[tail+0]", "test~tail,tail", "jz~FOO"]], [0, 0, 14, 0, 1, 5, 1, 2, 3, 0, 0.028571428571428574, ["lea     rdi, [tail+10h]; s1", "mov     rsi, group; s2", "call    _strcmp", "test    eax, eax", "jnz     short loc_CC70"], ["lea~rdi,[tail+0]", "mov~rsi,group", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 2, 0, 0.08571428571428572, ["cmp     [tail+10h], bpl", "jnz     short loc_CC70"], ["cmp~[tail+0],bpl", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, 0, 0.02142857142857143, ["mov     rax, tail"], ["mov~rax,tail"]], [0, 0, 0, 0, 0, 5, 1, 0, 5, 0, 0.0, ["pop     tail", "xor     eax, eax", "pop     rbp", "pop     group", "retn"], ["pop~tail", "xor~eax,eax", "pop~rbp", "pop~group", "retn"]], [0, 0, 9, 0, 1, 5, 1, 2, 4, 0, 0.04285714285714286, ["lea     rdi, [tail+10h]; s1", "mov     rsi, group; s2", "call    _strcmp", "test    eax, eax", "jnz     short loc_CCB8"], ["lea~rdi,[tail+0]", "mov~rsi,group", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 4, 0, 0.0, ["pop     tail", "pop     rbp", "pop     group", "retn"], ["pop~tail", "pop~rbp", "pop~group", "retn"]]], "func_feature": [6, 9, 19, 0, 16, 23, 0, 68, 0.06696, 2, 0], "succs": [[15], [0, 7], [8, 6], [5, 14], [3], [1, 3], [11], [12], [1, 4], [8, 11], [9, 12], [9, 10], [15], [], [13, 5], []], "fname": "getgidbyname", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[3, 0, 2, 5, 0, 12, 1, 1, 0, 0, 0.06666666666666667, ["mov     rax, i", "sub     p, 1", "mul     rsi", "shr     rdx, 3", "lea     rax, [rdx+rdx*4]", "add     rax, rax", "sub     i, rax", "add     edi, 30h ; '0'", "test    rdx, rdx", "mov     [p], dil", "mov     rdi, rdx", "jnz     short loc_CD80"], ["mov~rax,i", "sub~p,0", "mul~,rsi", "shr~rdx,0", "lea~rax,<TAG>", "add~rax,rax", "sub~i,rax", "add~edi,0", "test~rdx,rdx", "mov~<TAG>,dil", "mov~rdi,rdx", "jnz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 1, -1, 0.06666666666666667, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, -1, 0.0, ["mov     rax, p", "retn"], ["mov~rax,p", "retn"]], [2, 0, 0, 1, 0, 4, 0, 0, 2, 0, 0.0, ["sub     rcx, 2", "mov     byte ptr [rsi-1], 2Dh ; '-'", "mov     rax, p", "retn"], ["sub~rcx,0", "mov~[yte ptr [rsi-1]+0],0", "mov~rax,p", "retn"]], [2, 0, 3, 3, 0, 14, 1, 1, 1, 1, 0.1, ["mov     rax, i", "lea     rsi, [p-1]", "imul    r9", "mov     rax, i", "sar     rax, 3Fh", "sar     rdx, 2", "sub     rdx, rax", "lea     rax, [rdx+rdx*4]", "lea     eax, [r8+rax*2]", "sub     eax, edi", "test    rdx, rdx", "mov     i, rdx", "mov     [rcx-1], al", "jnz     short loc_CDB0"], ["mov~rax,i", "lea~rsi,[p-1]+0]", "imul~,r9", "mov~rax,i", "sar~rax,0", "sar~rdx,0", "sub~rdx,rax", "lea~rax,<TAG>", "lea~eax,<TAG>", "sub~eax,edi", "test~rdx,rdx", "mov~i,rdx", "mov~[rcx-1]+0],al", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 2, 2, 0.0, ["mov     rcx, p"], ["mov~rcx,p"]], [4, 0, 6, 0, 0, 7, 1, 1, 0, 2, 0.0, ["test    i, i", "lea     rcx, [buf+14h]", "mov     byte ptr [buf+14h], 0", "mov     r9, 6666666666666667h", "mov     buf, 0CCCCCCCCCCCCCCCDh", "mov     r8d, 30h ; '0'", "js      short loc_CDB3"], ["test~i,i", "lea~rcx,[buf+0]", "mov~[yte ptr [buf+0],0", "mov~r9,0", "mov~buf,0", "mov~r8d,0", "js~FOO"]]], "func_feature": [0, 3, 3, 0, 7, 8, 1, 41, 0.03333, 0, 9], "succs": [[0, 2], [0], [], [], [3, 5], [4], [1, 4]], "fname": "imaxtostr", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[2, 0, 16, 1, 2, 21, 0, 2, 0, 0, 0.030303030303030304, ["mov     b_0, [rsp+68h+blim]", "mov     r12, [rsp+68h+p_tt]", "mov     rcx, cmp; cmp", "mov     rsi, [rsp+68h+b]", "shr     r14, 2", "mov     rdx, r12; tmp", "lea     r15, [base+r14*8+0]", "sub     rsi, r14; n", "mov     [rsp+68h+var_48], r14", "mov     rbp, r14", "mov     rdi, r15; base", "call    mpsort_with_tmp", "mov     rsi, r14; n", "mov     rcx, cmp; cmp", "mov     rdx, r12; tmp", "mov     rdi, base; base", "call    mpsort_with_tmp", "mov     r14, [base+0]", "mov     r15, [r15]", "mov     [rsp+68h+t], 0", "nop     dword ptr [rax+00000000h]"], ["mov~b_0,<TAG>", "mov~r12,[rsp+0]", "mov~rcx,cmp", "mov~rsi,[rsp+0]", "shr~r14,0", "mov~rdx,r12", "lea~r15,[base+0]", "sub~rsi,r14", "mov~[rsp+0],r14", "mov~rbp,r14", "mov~rdi,r15", "call~FOO", "mov~rsi,r14", "mov~rcx,cmp", "mov~rdx,r12", "mov~rdi,base", "call~FOO", "mov~r14,[base+0]", "mov~r15,<TAG>", "mov~[rsp+0],0", "nop~[word ptr [rax+0]"]], [2, 0, 18, 1, 1, 15, 0, 2, 1, 4, 0.0367965367965368, ["mov     rax, [rsp+68h+blim]", "mov     r15, [rsp+68h+p_tt]", "mov     cmp, rax", "mov     n_0, rax", "mov     tmp_0, r15; tmp", "shr     rcx, 1", "lea     base, [base+rcx*8]; base", "sub     rsi, rcx; n", "mov     r14, rcx", "mov     [rsp+68h+b], rcx", "mov     b_0, cmp; cmp", "mov     [rsp+68h+var_40], rdi", "call    mpsort_with_tmp", "cmp     b_0, 1", "jnz     loc_CF40"], ["mov~rax,<TAG>", "mov~r15,[rsp+0]", "mov~cmp,rax", "mov~n_0,rax", "mov~tmp_0,r15", "shr~rcx,0", "lea~base,<TAG>", "sub~rsi,rcx", "mov~r14,rcx", "mov~[rsp+0],rcx", "mov~b_0,cmp", "mov~[rsp+0],rdi", "call~FOO", "cmp~b_0,0", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 1, -1, 0.006493506493506494, ["jnz     short loc_CE30"], ["jnz~FOO"]], [2, 0, 22, 1, 0, 13, 0, 1, 0, 5, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r13, base", "push    rbp", "push    rbx", "mov     rbx, cmp", "sub     rsp, 38h", "cmp     n_0, 2", "mov     [rsp+68h+blim], n_0", "mov     [rsp+68h+p_tt], tmp_0", "ja      short loc_CE40"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r13,base", "push~rbp", "push~rbx", "mov~rbx,cmp", "sub~rsp,0", "cmp~n_0,0", "mov~<TAG>,n_0", "mov~[rsp+0],tmp_0", "ja~FOO"]], [1, 0, 8, 0, 0, 6, 1, 0, 3, -1, 0.18831168831168832, ["mov     rax, [rsp+68h+var_40]", "mov     r15, [rsp+68h+b]", "xor     r12d, r12d", "mov     [rsp+68h+t], 0", "mov     rbp, [rax]", "nop     dword ptr [rax+rax+00h]"], ["mov~rax,[rsp+0]", "mov~r15,[rsp+0]", "xor~r12d,r12d", "mov~[rsp+0],0", "mov~rbp,<TAG>", "nop~[word ptr [rax+0]"]], [1, 0, 9, 2, 1, 10, 0, 2, 5, 0, 0.13636363636363635, ["mov     rax, [rsp+68h+t]", "mov     rdx, [rsp+68h+var_48]", "mov     rdi, r12; dest", "sub     rdx, rax", "lea     rsi, [base+rax*8+0]; src", "shl     rdx, 3; n", "call    _memcpy", "mov     rax, [rsp+68h+p_tt]", "mov     r14, [rax]", "jmp     loc_CE82"], ["mov~rax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rdi,r12", "sub~rdx,rax", "lea~rsi,[base+0]", "shl~rdx,0", "call~FOO", "mov~rax,[rsp+0]", "mov~r14,<TAG>", "jmp~FOO"]], [0, 0, 9, 0, 0, 2, 0, 0, 2, -1, 0.0367965367965368, ["mov     b_0, [base+0]", "mov     [r15], r14"], ["mov~b_0,[base+0]", "mov~<TAG>,r14"]], [1, 0, 16, 1, 0, 4, 0, 1, 4, 1, 0.1038961038961039, ["add     rbp, 1", "cmp     [rsp+68h+b], rbp", "mov     [r12-8], r15", "jz      short loc_CFFF"], ["add~rbp,0", "cmp~[rsp+0],rbp", "mov~[r12-8]+0],r15", "jz~FOO"]], [0, 0, 10, 0, 0, 3, 0, 0, 5, 1, 0.021645021645021644, ["mov     rax, [rsp+68h+b]", "mov     [rsp+68h+t], rbp", "mov     [rsp+68h+var_48], rax"], ["mov~rax,[rsp+0]", "mov~[rsp+0],rbp", "mov~[rsp+0],rax"]], [1, 0, 16, 1, 1, 6, 1, 2, 3, 2, 0.09307359307359307, ["mov     rsi, r15", "mov     rdi, r14", "add     r12, 8", "call    cmp", "test    eax, eax", "jle     short loc_CFCD"], ["mov~rsi,r15", "mov~rdi,r14", "add~r12,0", "call~cmp", "test~eax,eax", "jle~FOO"]], [0, 0, 16, 0, 0, 2, 0, 1, 5, 3, 0.010822510822510822, ["mov     r14, [base+rax*8+0]", "jmp     short loc_CF98"], ["mov~r14,[base+0]", "jmp~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 3, -1, 0.0, ["mov     [base+0], p1", "mov     [base+8], p0"], ["mov~[base+0],p1", "mov~[base+0],p0"]], [0, 0, 2, 0, 1, 7, 1, 2, 2, -1, 0.004329004329004329, ["mov     r12, [base+8]", "mov     rbp, [base]", "mov     n_0, p1", "mov     base, p0", "call    cmp", "test    eax, eax", "jle     short loc_CE30"], ["mov~r12,[base+0]", "mov~rbp,<TAG>", "mov~n_0,p1", "mov~base,p0", "call~cmp", "test~eax,eax", "jle~FOO"]], [1, 0, 8, 1, 1, 6, 1, 2, 4, -1, 0.2012987012987013, ["mov     rsi, bb", "mov     rdi, p_tt_0", "add     i, 1", "call    cmp", "test    eax, eax", "jle     short loc_CED4"], ["mov~rsi,bb", "mov~rdi,p_tt_0", "add~i,0", "call~cmp", "test~eax,eax", "jle~FOO"]], [0, 0, 8, 0, 0, 3, 0, 1, 6, -1, 0.015151515151515152, ["mov     rdx, [rsp+68h+p_tt]", "mov     p_tt_0, [rdx+t_0*8]", "jmp     short loc_CEA0"], ["mov~rdx,[rsp+0]", "mov~p_tt_0,<TAG>", "jmp~FOO"]], [1, 0, 1, 2, 0, 15, 0, 1, 6, -1, 0.0367965367965368, ["mov     rax, [rsp+68h+t]", "lea     rdi, [base+r12*8+0]; dest", "mov     r12, [rsp+68h+b]", "mov     rcx, [rsp+68h+p_tt]", "add     rsp, 38h", "pop     cmp", "sub     r12, rax", "pop     bb", "lea     rdx, ds:0[r12*8]; n", "lea     rsi, [rcx+rax*8]; src", "pop     r12", "pop     base", "pop     p_tt_0", "pop     b_0", "jmp     _memcpy"], ["mov~rax,[rsp+0]", "lea~rdi,[base+0]", "mov~r12,[rsp+0]", "mov~rcx,[rsp+0]", "add~rsp,0", "pop~cmp", "sub~r12,rax", "pop~bb", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "pop~r12", "pop~base", "pop~p_tt_0", "pop~b_0", "jmp~FOO"]], [1, 0, 8, 1, 0, 4, 0, 1, 5, -1, 0.10173160173160173, ["add     b_0, 1", "cmp     [rsp+68h+blim], b_0", "mov     [base+r12*8-8], bb", "jz      short loc_CF00"], ["add~b_0,0", "cmp~<TAG>,b_0", "mov~[base+0],bb", "jz~FOO"]], [1, 0, 16, 1, 1, 7, 1, 2, 5, 2, 0.008658008658008658, ["mov     r15, [base+rbp*8+0]", "mov     rdi, r14", "add     r12, 8", "mov     rsi, r15", "call    cmp", "test    eax, eax", "jg      short loc_CFA8"], ["mov~r15,[base+0]", "mov~rdi,r14", "add~r12,0", "mov~rsi,r15", "call~cmp", "test~eax,eax", "jg~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 7, -1, 0.0, [], []], [1, 0, 8, 1, 1, 7, 1, 2, 6, -1, 0.008658008658008658, ["mov     bb, [base+b_0*8+0]", "mov     rdi, p_tt_0", "add     i, 1", "mov     rsi, bb", "call    cmp", "test    eax, eax", "jg      short loc_CEB0"], ["mov~bb,[base+0]", "mov~rdi,p_tt_0", "add~i,0", "mov~rsi,bb", "call~cmp", "test~eax,eax", "jg~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 2, -1, 0.0, ["add     rsp, 38h", "pop     cmp", "pop     rbp", "pop     r12", "pop     base", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~cmp", "pop~rbp", "pop~r12", "pop~base", "pop~r14", "pop~r15", "retn"]], [1, 0, 8, 1, 0, 5, 0, 1, 5, -1, 0.06926406926406926, ["add     [rsp+68h+t], 1", "mov     [base+r12*8-8], p_tt_0", "mov     rax, [rsp+68h+t]", "cmp     [rsp+68h+b], t_0", "jz      loc_CE30"], ["add~[rsp+0],0", "mov~[base+0],p_tt_0", "mov~rax,[rsp+0]", "cmp~[rsp+0],t_0", "jz~FOO"]], [1, 0, 16, 1, 0, 5, 0, 1, 4, 2, 0.032467532467532464, ["add     [rsp+68h+t], 1", "mov     [r12-8], r14", "mov     rax, [rsp+68h+t]", "cmp     [rsp+68h+var_48], rax", "jz      short loc_CFF0"], ["add~[rsp+0],0", "mov~[r12-8]+0],r14", "mov~rax,[rsp+0]", "cmp~[rsp+0],rax", "jz~FOO"]]], "func_feature": [9, 6, 25, 2, 23, 33, 4, 152, 0.04969, 0, 16], "succs": [[9], [0, 6], [12, 20], [1, 2], [13], [4], [4], [17, 5], [5], [22, 7], [9], [20], [11, 20], [16, 21], [13], [18], [19, 15], [22, 7], [], [16, 21], [], [20, 14], [8, 10]], "fname": "mpsort_with_tmp", "n_num": 23}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["lea     rax, [base+n*8]", "mov     rcx, cmp; cmp", "mov     cmp, rax; tmp", "jmp     mpsort_with_tmp"], ["lea~rax,<TAG>", "mov~rcx,cmp", "mov~cmp,rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 1, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "mpsort", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     rdx, name; arg", "mov     esi, 6; s", "jmp     quotearg_n_style"], ["mov~rdx,name", "mov~esi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 1, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quote_n", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 1, 0, 0, 4, 1, 1, 0, 0, 0.0, ["mov     rdx, name; arg", "mov     esi, 6; s", "xor     edi, edi; n", "jmp     quotearg_n_style"], ["mov~rdx,name", "mov~esi,0", "xor~edi,edi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 1, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "quote", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 159, 0, 0, 1, 0, 0, 0, 0, 0.0022455283840483054, ["nop     dword ptr [esc+esc+00h]"], ["nop~[word ptr [esc+0]"]], [2, 0, 159, 0, 0, 4, 1, 1, 9, -1, 0.011019223590381079, ["test    r11b, r11b; jumptable 000000000000D1C8 case 8", "mov     ebp, 8", "mov     eax, 62h ; 'b'", "jz      loc_D35D"], ["test~r11b,r11b", "mov~ebp,0", "mov~eax,0", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.00083695909122854, ["mov     ebp, 66h ; 'f'; jumptable 000000000000D788 case 12", "jmp     store_escape"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 159, 1, 0, 5, 0, 1, 10, -1, 0.03691199516626467, ["lea     rcx, off_15E7C", "movzx   edx, bpl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bpl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [1, 0, 159, 0, 0, 2, 0, 1, 13, -1, 0.05586701933950511, ["cmp     byte ptr [arg_0+i_0+1], 3Fh ; '?'", "jnz     short loc_D288; jumptable 000000000000D1C8 cases 37,43-58,65-90,93,95,97-122"], ["cmp~[yte ptr [arg_0+0],0", "jnz~FOO"]], [1, 0, 159, 0, 0, 4, 0, 0, 12, -1, 0.06225442278573209, ["lea     rax, [i_0+2]", "mov     ebp, 3Fh ; '?'", "cmp     rax, argsize_0", "jnb     loc_D288; jumptable 000000000000D1C8 cases 37,43-58,65-90,93,95,97-122"], ["lea~rax,[i_0+0]", "mov~ebp,0", "cmp~rax,argsize_0", "jnb~FOO"]], [0, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.010489461343351275, ["mov     ebp, eax", "jmp     store_escape"], ["mov~ebp,eax", "jmp~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 10, -1, 0.046597104139798666, ["test    r11b, r11b", "jnz     loc_D408"], ["test~r11b,r11b", "jnz~FOO"]], [1, 0, 159, 0, 0, 11, 2, 0, 12, -1, 0.05534471853257432, ["movzx   r11d, [rsp+0C8h+var_6A]", "movzx   ebp, [rsp+0C8h+c]", "mov     rax, m", "mov     bytes, [rsp+0C8h+i]", "mov     r10, [rsp+0C8h+var_78]", "xor     r12d, 1", "mov     m, [rsp+0C8h+var_68]", "mov     r8, [rsp+0C8h+var_80]", "mov     r9, arg_0", "mov     r13, [rsp+0C8h+argsize]", "and     r12d, r11d"], ["movzx~r11d,[rsp+0]", "movzx~ebp,[rsp+0]", "mov~rax,m", "mov~bytes,[rsp+0]", "mov~r10,[rsp+0]", "xor~r12d,0", "mov~m,[rsp+0]", "mov~r8,[rsp+0]", "mov~r9,arg_0", "mov~r13,[rsp+0]", "and~r12d,r11d"]], [0, 0, 159, 1, 1, 12, 1, 2, 11, -1, 0.10873440285204991, ["mov     rax, [rsp+0C8h+i]", "mov     rdx, [rsp+0C8h+argsize]", "mov     rcx, [rsp+0C8h+p]; p", "mov     rdi, [rsp+0C8h+arg]; pwc", "lea     r13, [rax+m]", "lea     rbp, [arg_0+r13]", "sub     rdx, r13; n", "mov     rsi, rbp; s", "call    _mbrtowc", "test    rax, rax", "mov     r15, rax", "jz      loc_D9E0"], ["mov~rax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rdi,[rsp+0]", "lea~r13,<TAG>", "lea~rbp,<TAG>", "sub~rdx,r13", "mov~rsi,rbp", "call~FOO", "test~rax,rax", "mov~r15,rax", "jz~FOO"]], [1, 0, 159, 1, 2, 10, 2, 3, 15, -1, 0.030073026277959866, ["mov     edi, [rsp+0C8h+w]; wc", "call    _iswprint", "mov     rdi, [rsp+0C8h+p]; ps", "test    eax, eax", "mov     eax, 0", "cmovz   r12d, eax", "add     m, bytes", "call    _mbsinit", "test    eax, eax", "jz      loc_D91D"], ["mov~edi,[rsp+0]", "call~FOO", "mov~rdi,[rsp+0]", "test~eax,eax", "mov~eax,0", "cmovz~r12d,eax", "add~m,bytes", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 11, -1, 0.005754892377283269, ["test    r11b, r11b; jumptable 000000000000D788 case 92", "jz      short loc_D878"], ["test~r11b,r11b", "jz~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 14, -1, 0.05155444386943438, ["movzx   ebp, byte ptr [arg_0+rax]", "cmp     bpl, 3Eh ; '>'", "ja      loc_D86B"], ["movzx~ebp,<TAG>", "cmp~bpl,0", "ja~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 13, -1, 0.0943879017882813, ["cmp     m, 1", "ja      loc_D543"], ["cmp~m,0", "ja~FOO"]], [0, 0, 159, 0, 0, 11, 0, 1, 13, -1, 0.0039963199355988735, ["movzx   r11d, [rsp+0C8h+var_6A]", "mov     bytes, m", "mov     bytes, [rsp+0C8h+i]", "mov     r10, [rsp+0C8h+var_78]", "movzx   ebp, [rsp+0C8h+c]", "mov     r9, arg_0", "mov     m, [rsp+0C8h+var_68]", "mov     r8, [rsp+0C8h+var_80]", "mov     r13, [rsp+0C8h+argsize]", "mov     r12d, r11d", "jmp     loc_DA11"], ["movzx~r11d,[rsp+0]", "mov~bytes,m", "mov~bytes,[rsp+0]", "mov~r10,[rsp+0]", "movzx~ebp,[rsp+0]", "mov~r9,arg_0", "mov~m,[rsp+0]", "mov~r8,[rsp+0]", "mov~r13,[rsp+0]", "mov~r12d,r11d", "jmp~FOO"]], [0, 0, 159, 0, 0, 2, 0, 1, 15, -1, 0.02624920936116382, ["mov     r12d, r11d", "jmp     loc_DA11"], ["mov~r12d,r11d", "jmp~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.003419507262011999, ["mov     ebp, 7; jumptable 000000000000D1C8 case 7", "mov     eax, 61h ; 'a'", "jmp     c_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 159, 1, 0, 5, 0, 1, 8, -1, 0.32742875579687775, ["lea     rcx, off_15C80", "movzx   edx, bpl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bpl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [0, 0, 159, 0, 0, 1, 0, 1, 14, -1, 0.007935138864930136, ["jmp     loc_D537"], ["jmp~FOO"]], [1, 0, 168, 0, 1, 9, 1, 2, 3, -1, 0.010120177103099304, ["lea     rsi, aS_0+5; msgid", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, rax", "mov     [rsp+0C8h+quote_string], rax", "lea     rax, aS_0+5; \"'\"", "cmp     rsi, rax", "jnz     short loc_D636"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,rax", "mov~[rsp+0],rax", "lea~rax,<TAG>", "cmp~rsi,rax", "jnz~FOO"]], [2, 0, 170, 0, 1, 10, 1, 2, 2, -1, 0.0005750100626760969, ["lea     rsi, asc_15C32; jumptable 000000000000D0D8 cases 6,7", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "cmp     [rsp+0C8h+quoting_style], 7", "mov     quoting_style_0, rax", "lea     rax, asc_15C32; \"`\"", "setz    bl", "cmp     r15, rax", "jnz     short loc_D5FD"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "cmp~[rsp+0],0", "mov~quoting_style_0,rax", "lea~rax,<TAG>", "setz~bl", "cmp~r15,rax", "jnz~FOO"]], [0, 0, 169, 0, 0, 3, 1, 0, 3, -1, 0.0, ["lea     rax, unk_15C30", "test    bl, bl", "cmovnz  r15, rax"], ["lea~rax,<TAG>", "test~bl,bl", "cmovnz~r15,rax"]], [2, 0, 159, 1, 0, 3, 0, 1, 12, -1, 0.020892032277231517, ["add     i_0, 1", "mov     ebp, 5Ch ; '\\'", "jmp     store_c"], ["add~i_0,0", "mov~ebp,0", "jmp~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 11, -1, 0.012779598642976252, ["test    r10, r10", "jnz     loc_D81C"], ["test~r10,r10", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 12, -1, 0.004834876277001514, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      short loc_D878"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 159, 0, 0, 3, 0, 0, 15, -1, 0.047126866386828434, ["mov     rdi, 7000A38200000000h", "bt      rdi, rbp", "jnb     loc_D86B"], ["mov~rdi,0", "bt~rdi,rbp", "jnb~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.003419507262011999, ["mov     ebp, 0Ch; jumptable 000000000000D1C8 case 12", "mov     eax, 66h ; 'f'", "jmp     c_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 8, -1, 0.007575757575757576, ["cmp     rbx, r14", "jnb     loc_D492"], ["cmp~rbx,r14", "jnb~FOO"]], [0, 0, 11, 0, 0, 3, 1, 1, 7, -1, 0.041185095739175434, ["mov     rax, [rsp+0C8h+quote_string]", "test    rax, rax", "jz      short loc_DA74"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 8, -1, 0.024725432695072165, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     short loc_DA74"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 9, -1, 0.019895348168592952, ["movzx   edx, byte ptr [rax]", "test    dl, dl", "jz      short loc_DA74"], ["movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [1, 0, 8, 1, 0, 4, 1, 1, 12, -1, 0.0004600080501408775, ["add     len, 1", "movzx   edx, byte ptr [rax+len]", "test    dl, dl", "jnz     short loc_DA60"], ["add~len,0", "movzx~edx,<TAG>", "test~dl,dl", "jnz~FOO"]], [0, 0, 167, 0, 0, 4, 1, 0, 4, -1, 0.0, ["lea     rax, unk_15C30", "test    bl, bl", "cmovz   rax, rsi", "mov     [rsp+0C8h+quote_string], rax"], ["lea~rax,<TAG>", "test~bl,bl", "cmovz~rax,rsi", "mov~[rsp+0],rax"]], [1, 0, 159, 0, 0, 2, 0, 1, 16, -1, 0.0427280394073563, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_D45D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.00083695909122854, ["mov     ebp, 76h ; 'v'; jumptable 000000000000D788 case 11", "jmp     store_escape"], ["mov~ebp,0", "jmp~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.003419507262011999, ["mov     ebp, 0Bh; jumptable 000000000000D1C8 case 11", "mov     eax, 76h ; 'v'", "jmp     c_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 8, 1, 0, 3, 0, 0, 10, -1, 0.015007762635846128, ["mov     rcx, [rsp+0C8h+buffer]", "sub     rax, rbx", "nop"], ["mov~rcx,<TAG>", "sub~rax,rbx", "nop"]], [0, 0, 159, 0, 0, 2, 0, 0, 17, -1, 0.04174573055028463, ["cmp     r8, rbx", "jbe     short loc_D246"], ["cmp~r8,rbx", "jbe~FOO"]], [1, 0, 159, 1, 0, 3, 0, 1, 19, -1, 0.013023977919613594, ["add     rax, 1", "cmp     r8, rax", "jnz     short loc_D988"], ["add~rax,0", "cmp~r8,rax", "jnz~FOO"]], [1, 0, 159, 0, 0, 4, 0, 1, 18, -1, 0.019320338105916855, ["movzx   edi, byte ptr [rax]", "lea     ecx, [rdi-5Bh]", "cmp     cl, 21h ; '!'", "ja      short loc_D9AE"], ["movzx~edi,<TAG>", "lea~ecx,[rdi-5Bh]+0]", "cmp~cl,0", "ja~FOO"]], [2, 0, 159, 1, 0, 5, 1, 1, 19, -1, 0.00557759760795814, ["mov     edx, 1", "mov     rdi, 20000002Bh", "shl     rdx, cl", "test    rdx, rdi", "jnz     loc_DA8A"], ["mov~edx,0", "mov~rdi,0", "shl~rdx,cl", "test~rdx,rdi", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 18, -1, 0.0, ["mov     rdi, [rsp+0C8h+buffer]", "mov     byte ptr [rdi+rbx], 3Fh ; '?'"], ["mov~rdi,<TAG>", "mov~<TAG>,0"]], [0, 0, 159, 0, 0, 2, 1, 1, 9, -1, 0.018788453797941466, ["test    r11b, r11b; jumptable 000000000000D1C8 case 92", "jz      loc_D878"], ["test~r11b,r11b", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.00083695909122854, ["mov     ebp, 62h ; 'b'; jumptable 000000000000D788 case 8", "jmp     store_escape"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 164, 0, 0, 2, 0, 0, 6, -1, 0.0006900120752113162, ["mov     rdx, [rsp+0C8h+buffer]", "nop     dword ptr [rax+rax+00000000h]"], ["mov~rdx,<TAG>", "nop~[word ptr [rax+0]"]], [0, 0, 165, 0, 0, 3, 1, 1, 5, -1, 0.0008050140877465356, ["movzx   eax, byte ptr [quote_string_0]", "test    al, al", "jz      short loc_D665"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 159, 0, 0, 3, 0, 0, 18, -1, 0.04117072048760854, ["lea     rdx, [rbx+1]", "cmp     r8, len", "jbe     short loc_D258"], ["lea~rdx,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.013469610718187568, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      loc_D878"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 19, -1, 0.0, ["mov     rdi, [rsp+0C8h+buffer]", "mov     byte ptr [rdi+rbx+1], 22h ; '\"'"], ["mov~rdi,<TAG>", "mov~[yte ptr [rdi+0],0"]], [0, 0, 164, 0, 0, 1, 0, 0, 8, -1, 0.0, ["mov     [rdx+rbx], al"], ["mov~<TAG>,al"]], [0, 0, 164, 0, 0, 2, 0, 0, 7, -1, 0.005175090564084872, ["cmp     buffersize, rbx", "jbe     short loc_D658"], ["cmp~buffersize,rbx", "jbe~FOO"]], [0, 0, 159, 0, 0, 3, 0, 0, 19, -1, 0.04059571042493244, ["lea     len, [rbx+2]", "cmp     r8, len", "jbe     short loc_D26A"], ["lea~len,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [0, 0, 4, 0, 0, 3, 0, 0, 11, -1, 0.013857742510493935, ["mov     r12, argsize_0", "mov     r14, r8", "mov     argsize_0, arg_0"], ["mov~r12,argsize_0", "mov~r14,r8", "mov~argsize_0,arg_0"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.01507963889368064, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_D45D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 12, -1, 0.0468729036091465, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_D45D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 11, -1, 0.000646886320510609, ["jmp     loc_D45D"], ["jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.0010062676096831695, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_D45D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.03371954842543079, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_D45D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 14, -1, 0.03774941061468576, ["test    sil, sil", "jnz     loc_D45D"], ["test~sil,sil", "jnz~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 10, -1, 0.04326471546585399, ["cmp     [rsp+0C8h+elide_outer_quotes], 0; jumptable 000000000000D788 case 0", "mov     rdx, rbx", "jnz     loc_D45D"], ["cmp~[rsp+0],0", "mov~rdx,rbx", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.004969045291625936, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_D45D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 20, -1, 0.0, ["mov     rdi, [rsp+0C8h+buffer]", "mov     byte ptr [rdi+rbx+2], 22h ; '\"'"], ["mov~rdi,<TAG>", "mov~[yte ptr [rdi+0],0"]], [0, 0, 13, 0, 0, 2, 1, 1, 7, -1, 0.0030906790868840206, ["test    rbx, rbx", "jz      force_outer_quoting_style"], ["test~rbx,rbx", "jz~FOO"]], [1, 0, 14, 0, 0, 7, 1, 1, 6, -1, 0.0534184348226094, ["cmp     [rsp+0C8h+quoting_style], 2", "mov     r12, argsize_0", "mov     r14, r8", "mov     argsize_0, arg_0", "setz    al", "test    [rsp+0C8h+elide_outer_quotes], al", "jz      short loc_DA40"], ["cmp~[rsp+0],0", "mov~r12,argsize_0", "mov~r14,r8", "mov~argsize_0,arg_0", "setz~al", "test~[rsp+0],al", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.022502060452724588, ["mov     ebp, 3Fh ; '?'", "jmp     loc_D288; jumptable 000000000000D1C8 cases 37,43-58,65-90,93,95,97-122"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.07325628198493474, ["cmp     eax, 3", "jnz     loc_D86B"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 1, 1, 11, -1, 0.06460238054165948, ["test    byte ptr [rsp+0C8h+flags], 4", "jz      loc_D86B"], ["test~[yte ptr [rsp+0],0", "jz~FOO"]], [0, 0, 159, 0, 0, 3, 0, 0, 20, -1, 0.04002070036225634, ["lea     len, [rbx+3]", "cmp     r8, len", "jbe     short loc_D27C"], ["lea~len,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [0, 0, 8, 0, 0, 2, 0, 0, 11, -1, 0.010235179115634523, ["cmp     r14, len", "jbe     short loc_DA68"], ["cmp~r14,len", "jbe~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 12, -1, 0.0, ["mov     [rcx+len], dl"], ["mov~<TAG>,dl"]], [1, 0, 159, 0, 0, 2, 0, 0, 21, -1, 0.0, ["mov     rdi, [rsp+0C8h+buffer]", "mov     byte ptr [rdi+rbx+3], 3Fh ; '?'"], ["mov~rdi,<TAG>", "mov~[yte ptr [rdi+0],0"]], [1, 0, 159, 1, 0, 3, 0, 0, 14, -1, 0.15122764648381348, ["add     i_0, 1", "cmp     r15, ilim", "jb      short loc_D558"], ["add~i_0,0", "cmp~r15,ilim", "jb~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 13, -1, 0.15870277729860274, ["test    r12b, r12b", "jz      short loc_D5B8"], ["test~r12b,r12b", "jz~FOO"]], [3, 0, 159, 2, 0, 3, 1, 0, 18, -1, 0.030849289862572595, ["and     ebp, 7", "add     rbx, 3", "add     ebp, 30h ; '0'"], ["and~ebp,0", "add~rbx,0", "add~ebp,0"]], [1, 0, 160, 0, 1, 7, 1, 2, 5, -1, 0.04600080501408775, ["mov     rdi, [rsp+0C8h+quote_string]; s", "test    ebp, ebp", "mov     ebp, 1", "setnz   [rsp+0C8h+elide_outer_quotes]", "call    _strlen", "mov     r11, rax", "jmp     loc_D0F8"], ["mov~rdi,[rsp+0]", "test~ebp,ebp", "mov~ebp,0", "setnz~[rsp+0]", "call~FOO", "mov~r11,rax", "jmp~FOO"]], [0, 0, 166, 0, 0, 3, 2, 1, 4, -1, 0.019435340118452073, ["xor     ebx, ebx", "test    ebp, ebp", "jnz     short loc_D665"], ["xor~ebx,ebx", "test~ebp,ebp", "jnz~FOO"]], [1, 0, 164, 1, 0, 4, 1, 1, 8, -1, 0.013915243516761544, ["add     rbx, 1", "movzx   eax, byte ptr [r15+len]", "test    al, al", "jnz     short loc_D650"], ["add~rbx,0", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 10, -1, 0.0017825311942959003, ["mov     ebp, 5Ch ; '\\'", "mov     eax, 5Ch ; '\\'", "jmp     c_and_shell_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 159, 1, 0, 3, 0, 0, 21, -1, 0.03944569029958024, ["add     rbx, 4", "mov     r15, i_0", "nop     dword ptr [rax+rax+00h]"], ["add~rbx,0", "mov~r15,i_0", "nop~[word ptr [rax+0]"]], [1, 0, 3, 0, 0, 3, 0, 1, 9, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 0", "jmp     loc_D492"], ["mov~rax,<TAG>", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 9, -1, 0.17992671816201247, ["test    r11b, r11b; jumptable 000000000000D1C8 cases 37,43-58,65-90,93,95,97-122", "jz      loc_D35D"], ["test~r11b,r11b", "jz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 10, -1, 0.008998907480880915, ["test    al, al", "jnz     loc_D288; jumptable 000000000000D1C8 cases 37,43-58,65-90,93,95,97-122"], ["test~al,al", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 9, -1, 0.0004743833017077799, ["test    i_0, i_0; jumptable 000000000000D1C8 cases 35,126", "jnz     loc_D288; jumptable 000000000000D1C8 cases 37,43-58,65-90,93,95,97-122"], ["test~i_0,i_0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 9, -1, 0.009962049335863378, ["cmp     [rsp+0C8h+quoting_style], 2; jumptable 000000000000D1C8 cases 32-34,36,38,40-42,59-62,91,94,96,124", "jnz     loc_D288; jumptable 000000000000D1C8 cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.005333218331320799, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      loc_D288; jumptable 000000000000D1C8 cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.03817587641117053, ["cmp     [rsp+0C8h+quoting_style], 2; jumptable 000000000000D1C8 case 39", "mov     ebp, 27h ; '''", "jnz     loc_D288; jumptable 000000000000D1C8 cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "mov~ebp,0", "jnz~FOO"]], [2, 0, 159, 1, 0, 3, 0, 1, 14, -1, 0.030849289862572595, ["add     rbx, 3", "mov     ebp, 27h ; '''", "jmp     loc_D288; jumptable 000000000000D1C8 cases 37,43-58,65-90,93,95,97-122"], ["add~rbx,0", "mov~ebp,0", "jmp~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 10, -1, 0.07923638663676615, ["test    r12b, r12b", "jz      loc_D288; jumptable 000000000000D1C8 cases 37,43-58,65-90,93,95,97-122"], ["test~r12b,r12b", "jz~FOO"]], [3, 0, 3, 1, 1, 13, 1, 1, 8, -1, 0.013153355183715715, ["sub     rsp, 8", "mov     rdx, arg_0; arg", "mov     rcx, argsize_0; argsize", "push    0; quote_these_too", "mov     r9d, [rsp+0D8h+flags]", "mov     rsi, r14; buffersize", "mov     r8d, [rsp+0D8h+quoting_style]; quoting_style", "mov     rdi, [rsp+0D8h+buffer]; buffer", "and     r9d, 0FFFFFFFDh; flags", "call    quotearg_buffer_restyled", "mov     rbx, len", "pop     len", "pop     rdx"], ["sub~rsp,0", "mov~rdx,arg_0", "mov~rcx,argsize_0", "push~0", "mov~r9d,[rsp+0]", "mov~rsi,r14", "mov~r8d,[rsp+0]", "mov~rdi,[rsp+0]", "and~r9d,0", "call~FOO", "mov~rbx,len", "pop~len", "pop~rdx"]], [0, 0, 4, 0, 0, 4, 0, 1, 20, -1, 0.0008625150940141453, ["mov     r13, arg_0", "mov     printable, [rsp+0C8h+argsize]", "mov     arg_0, [rsp+0C8h+var_80]", "jmp     force_outer_quoting_style"], ["mov~r13,arg_0", "mov~printable,[rsp+0]", "mov~arg_0,[rsp+0]", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.14407963250468, ["cmp     [rsp+0C8h+var_B8], 0", "jz      short loc_D2D3"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 159, 0, 0, 1, 0, 1, 11, -1, 0.001466275659824047, ["jmp     loc_D291"], ["jmp~FOO"]], [2, 0, 159, 1, 0, 5, 0, 0, 12, -1, 0.04125697199700995, ["lea     rax, [i_0+1]", "add     rbx, 1", "mov     ebp, 30h ; '0'", "cmp     rax, argsize_0", "jnb     loc_D291"], ["lea~rax,[i_0+0]", "add~rbx,0", "mov~ebp,0", "cmp~rax,argsize_0", "jnb~FOO"]], [2, 0, 159, 1, 0, 4, 0, 1, 13, -1, 0.023719165085388995, ["movzx   eax, byte ptr [arg_0+i_0+1]", "sub     eax, 30h ; '0'", "cmp     al, 9", "ja      loc_D291"], ["movzx~eax,[yte ptr [arg_0+0]", "sub~eax,0", "cmp~al,0", "ja~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 16, -1, 0.017882812949226612, ["lea     rbx, [rdx+3]", "mov     ebp, 30h ; '0'", "jmp     loc_D291"], ["lea~rbx,[rdx+0]", "mov~ebp,0", "jmp~FOO"]], [2, 0, 160, 0, 0, 6, 3, 1, 2, -1, 0.0023000402507043875, ["mov     [rsp+0C8h+elide_outer_quotes], 0; jumptable 000000000000D0D8 case 0", "xor     ebp, ebp", "xor     r11d, r11d", "mov     [rsp+0C8h+quote_string], 0", "xor     ebx, ebx", "jmp     loc_D0F8"], ["mov~[rsp+0],0", "xor~ebp,ebp", "xor~r11d,r11d", "mov~[rsp+0],0", "xor~ebx,ebx", "jmp~FOO"]], [0, 0, 185, 1, 0, 6, 0, 1, 1, -1, 0.0053188430797538955, ["lea     rcx, off_15C60", "mov     edx, r15d", "mov     ebp, ebx", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "mov~edx,r15d", "mov~ebp,ebx", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [2, 0, 160, 0, 0, 7, 2, 1, 3, -1, 0.004600080501408775, ["lea     rax, aS_0+5; \"'\"", "mov     [rsp+0C8h+elide_outer_quotes], 1", "xor     ebp, ebp", "mov     r11d, 1", "xor     ebx, ebx", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_D0F8"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "xor~ebp,ebp", "mov~r11d,0", "xor~ebx,ebx", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 164, 0, 0, 2, 1, 1, 2, -1, 0.00023000402507043874, ["test    ebx, ebx; jumptable 000000000000D0D8 case 2", "jnz     loc_DB54"], ["test~ebx,ebx", "jnz~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.08334291683437793, ["mov     eax, [rsp+0C8h+quoting_style]; jumptable 000000000000D1C8 case 63", "cmp     eax, 2", "jz      loc_D860"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 15, -1, 0.028491748605600598, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      short loc_D9B7"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 14, -1, 0.03780691162095337, ["cmp     [rsp+0C8h+quoting_style], 2", "jnz     short loc_D9B7"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 9, -1, 0.010580185153240182, ["mov     rsi, [rsp+0C8h+var_40]", "xor     rsi, fs:28h", "mov     rax, rbx", "jnz     loc_DB97"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~rax,rbx", "jnz~FOO"]], [2, 0, 159, 0, 0, 5, 0, 1, 9, -1, 0.10643436260134553, ["lea     rax, [rsp+0C8h+mbstate]", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "mov     qword ptr [rsp+0C8h+mbstate.__count], 0", "mov     [rsp+0C8h+p], rax", "jnz     short loc_D8E3"], ["lea~rax,[rsp+0]", "cmp~argsize_0,0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],rax", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 8, -1, 0.1785981254671957, ["cmp     [rsp+0C8h+var_88], 1; jumptable 000000000000D1C8 default case", "jnz     loc_D890"], ["cmp~[rsp+0],0", "jnz~FOO"]], [3, 0, 159, 1, 0, 10, 2, 1, 11, -1, 0.014894038423450202, ["mov     eax, ebp", "mov     rsi, [rsp+0C8h+var_B8]", "mov     ecx, ebp", "shr     al, 5", "and     ecx, 1Fh", "mov     edx, 1", "movzx   eax, al", "shl     edx, cl", "test    [rsi+rax*4], edx", "jz      short loc_D2D3"], ["mov~eax,ebp", "mov~rsi,[rsp+0]", "mov~ecx,ebp", "shr~al,0", "and~ecx,0", "mov~edx,0", "movzx~eax,al", "shl~edx,cl", "test~<TAG>,edx", "jz~FOO"]], [3, 0, 160, 0, 0, 7, 1, 1, 4, -1, 0.0023000402507043875, ["lea     rax, aS_0+5; \"'\"", "mov     [rsp+0C8h+elide_outer_quotes], 0", "xor     ebp, ebp", "mov     r11d, 1", "mov     ebx, 1", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_D0F8"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "xor~ebp,ebp", "mov~r11d,0", "mov~ebx,0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 162, 0, 0, 2, 1, 1, 3, -1, 0.00017250301880282904, ["test    buffersize, buffersize", "jz      loc_DA9C"], ["test~buffersize,buffersize", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.00083695909122854, ["mov     ebp, 61h ; 'a'; jumptable 000000000000D788 case 7", "jmp     store_escape"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 10, -1, 0.0, ["add     rsp, 98h", "pop     rbx", "pop     rbp", "pop     argsize_0", "pop     arg_0", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~argsize_0", "pop~arg_0", "pop~r14", "pop~r15", "retn"]], [3, 0, 187, 1, 1, 25, 2, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15d, r8d", "push    r13", "push    r12", "mov     r14, buffersize", "push    rbp", "push    rbx", "mov     ebx, r9d", "mov     r13, arg_0", "mov     r12, argsize_0", "and     ebx, 2", "sub     rsp, 98h", "mov     rax, [rsp+0C8h+quote_these_too]", "mov     [rsp+0C8h+buffer], buffer_0", "mov     [rsp+0C8h+quoting_style], r8d", "mov     [rsp+0C8h+flags], r9d", "mov     [rsp+0C8h+var_B8], rax", "mov     rax, fs:28h", "mov     [rsp+0C8h+var_40], rax", "xor     eax, eax", "call    ___ctype_get_mb_cur_max", "cmp     r15d, 7; switch 8 cases", "mov     [rsp+0C8h+var_88], rax", "ja      loc_DB9C; jumptable 000000000000D0D8 default case"], ["push~r15", "push~r14", "mov~r15d,r8d", "push~r13", "push~r12", "mov~r14,buffersize", "push~rbp", "push~rbx", "mov~ebx,r9d", "mov~r13,arg_0", "mov~r12,argsize_0", "and~ebx,0", "sub~rsp,0", "mov~rax,[rsp+0]", "mov~<TAG>,buffer_0", "mov~[rsp+0],r8d", "mov~[rsp+0],r9d", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "cmp~r15d,0", "mov~[rsp+0],rax", "ja~FOO"]], [3, 0, 160, 0, 0, 8, 2, 1, 2, -1, 0.0023000402507043875, ["lea     rax, aS_0+5; jumptable 000000000000D0D8 case 1", "mov     [rsp+0C8h+elide_outer_quotes], 1", "xor     ebp, ebp", "mov     r11d, 1", "xor     ebx, ebx", "mov     [rsp+0C8h+quoting_style], 2", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_D0F8"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "xor~ebp,ebp", "mov~r11d,0", "xor~ebx,ebx", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 9, -1, 0.06287255860310889, ["test    r11b, r11b; jumptable 000000000000D1C8 case 0", "jnz     loc_D790; jumptable 000000000000D788 case 0"], ["test~r11b,r11b", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 13, -1, 0.03956069231211547, ["cmp     rbx, r8", "jnb     short loc_D2CF"], ["cmp~rbx,r8", "jnb~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 14, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 5Ch ; '\\'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [1, 0, 159, 1, 0, 1, 0, 0, 14, -1, 0.038985682249439366, ["add     rbx, 1"], ["add~rbx,0"]], [1, 0, 159, 0, 0, 3, 2, 1, 10, -1, 0.01578402622045886, ["xor     ebp, ebp", "test    byte ptr [rsp+0C8h+flags], 1", "jz      loc_D35D"], ["xor~ebp,ebp", "test~[yte ptr [rsp+0],0", "jz~FOO"]], [1, 0, 159, 1, 0, 1, 0, 0, 11, -1, 0.30266612999060816, ["add     i_0, 1"], ["add~i_0,0"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.13253981944684032, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      loc_D2D3"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 159, 1, 0, 2, 0, 1, 11, -1, 0.014864010120177103, ["add     i_0, 1", "jmp     loc_D110"], ["add~i_0,0", "jmp~FOO"]], [0, 0, 159, 0, 1, 11, 0, 1, 10, -1, 0.0, ["mov     rdi, arg_0; s", "mov     [rsp+0C8h+var_80], r8", "mov     byte ptr [rsp+0C8h+arg], r11b", "mov     [rsp+0C8h+i], r10", "mov     [rsp+0C8h+argsize], arg_0", "call    _strlen", "movzx   r11d, byte ptr [rsp+0C8h+arg]", "mov     r8, [rsp+0C8h+var_80]", "mov     argsize_0, rax", "mov     r10, [rsp+0C8h+i]", "mov     r9, [rsp+0C8h+argsize]"], ["mov~rdi,arg_0", "mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[rsp+0],r10", "mov~[rsp+0],arg_0", "call~FOO", "movzx~r11d,[yte ptr [rsp+0]", "mov~r8,[rsp+0]", "mov~argsize_0,rax", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]"]], [0, 0, 159, 0, 0, 2, 0, 0, 13, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     [rax+rbx], bpl"], ["mov~rax,<TAG>", "mov~<TAG>,bpl"]], [0, 0, 159, 0, 0, 2, 0, 0, 12, -1, 0.4664481628428498, ["cmp     rbx, r8", "jnb     short loc_D2E4"], ["cmp~rbx,r8", "jnb~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 7, -1, 0.506084382270341, ["movzx   ebp, byte ptr [r14]", "cmp     bpl, 7Eh ; '~'; switch 127 cases", "ja      loc_D4E0; jumptable 000000000000D1C8 default case"], ["movzx~ebp,<TAG>", "cmp~bpl,0", "ja~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.039729544473377544, ["movzx   ebp, byte ptr [r14]", "cmp     bpl, 7Eh ; '~'; switch 127 cases", "ja      loc_D4E0; jumptable 000000000000D1C8 default case"], ["movzx~ebp,<TAG>", "cmp~bpl,0", "ja~FOO"]], [1, 0, 159, 1, 0, 2, 0, 1, 13, -1, 0.46587315278017366, ["add     rbx, 1", "jmp     loc_D110"], ["add~rbx,0", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 12, -1, 0.07972514519004083, ["cmp     bytes, 0FFFFFFFFFFFFFFFFh", "jz      loc_DABF"], ["cmp~bytes,0", "jz~FOO"]], [3, 0, 160, 0, 0, 6, 2, 0, 2, -1, 0.0023000402507043875, ["mov     [rsp+0C8h+elide_outer_quotes], 0; jumptable 000000000000D0D8 case 5", "mov     ebp, 1", "xor     r11d, r11d", "mov     [rsp+0C8h+quote_string], 0", "xor     ebx, ebx", "nop     word ptr [rax+rax+00h]"], ["mov~[rsp+0],0", "mov~ebp,0", "xor~r11d,r11d", "mov~[rsp+0],0", "xor~ebx,ebx", "nop~[ord ptr [rax+0]"]], [0, 0, 159, 0, 0, 14, 0, 0, 14, -1, 0.027686734517854063, ["mov     rdi, r13", "mov     r13, [rsp+0C8h+argsize]", "mov     rsi, rbp", "mov     bytes, m", "mov     r9, arg_0", "mov     bytes, [rsp+0C8h+i]", "mov     r10, [rsp+0C8h+var_78]", "movzx   r11d, [rsp+0C8h+var_6A]", "cmp     rdi, r13", "movzx   ebp, [rsp+0C8h+c]", "mov     rbx, [rsp+0C8h+var_68]", "mov     r8, [rsp+0C8h+var_80]", "mov     arg_0, [rsp+0C8h+var_60]", "jnb     short loc_DB4C"], ["mov~rdi,r13", "mov~r13,[rsp+0]", "mov~rsi,rbp", "mov~bytes,m", "mov~r9,arg_0", "mov~bytes,[rsp+0]", "mov~r10,[rsp+0]", "movzx~r11d,[rsp+0]", "cmp~rdi,r13", "movzx~ebp,[rsp+0]", "mov~rbx,[rsp+0]", "mov~r8,[rsp+0]", "mov~arg_0,[rsp+0]", "jnb~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 13, -1, 0.0706112356966247, ["cmp     bytes, 0FFFFFFFFFFFFFFFEh", "jz      loc_DAF1"], ["cmp~bytes,0", "jz~FOO"]], [4, 0, 160, 0, 0, 8, 0, 1, 4, -1, 0.0023000402507043875, ["mov     rax, [rsp+0C8h+buffer]", "mov     [rsp+0C8h+elide_outer_quotes], 0", "mov     r11d, 1", "mov     ebx, 1", "mov     byte ptr [rax], 27h ; '''", "lea     rax, aS_0+5; \"'\"", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_D0F8"], ["mov~rax,<TAG>", "mov~[rsp+0],0", "mov~r11d,0", "mov~ebx,0", "mov~<TAG>,0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "jmp~FOO"]], [2, 0, 159, 0, 0, 4, 0, 1, 9, -1, 0.009573917543557013, ["cmp     argsize_0, 1; jumptable 000000000000D1C8 cases 123,125", "setnz   al", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_D305"], ["cmp~argsize_0,0", "setnz~al", "cmp~argsize_0,0", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 14, -1, 0.019032833074578807, ["cmp     r8, len", "jbe     short loc_D7DF"], ["cmp~r8,len", "jbe~FOO"]], [0, 0, 164, 0, 0, 2, 1, 1, 2, -1, 0.00023000402507043874, ["test    ebx, ebx; jumptable 000000000000D0D8 case 3", "jnz     loc_DB74"], ["test~ebx,ebx", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 10, -1, 0.0, ["cmp     byte ptr [arg_0+1], 0", "setnz   al"], ["cmp~[yte ptr [arg_0+0],0", "setnz~al"]], [0, 0, 162, 0, 0, 2, 1, 1, 3, -1, 0.00017250301880282904, ["test    buffersize, buffersize", "jz      short loc_D712"], ["test~buffersize,buffersize", "jz~FOO"]], [0, 0, 159, 0, 0, 7, 1, 0, 3, -1, 0.12342590995342419, ["mov     r10, quote_string_len", "mov     r9, arg_0", "xor     r15d, r15d", "mov     r11d, ebp", "mov     r8, buffersize", "mov     arg_0, argsize_0", "nop     word ptr [rax+rax+00h]"], ["mov~r10,quote_string_len", "mov~r9,arg_0", "xor~r15d,r15d", "mov~r11d,ebp", "mov~r8,buffersize", "mov~arg_0,argsize_0", "nop~[ord ptr [rax+0]"]], [4, 0, 160, 0, 0, 7, 0, 1, 4, -1, 0.00920016100281755, ["lea     rax, unk_15C30", "mov     [rsp+0C8h+elide_outer_quotes], 0", "mov     ebp, 1", "mov     r11d, 1", "mov     ebx, 1", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_D0F8"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~ebp,0", "mov~r11d,0", "mov~ebx,0", "mov~[rsp+0],rax", "jmp~FOO"]], [4, 0, 160, 0, 0, 8, 1, 1, 2, -1, 0.0023000402507043875, ["lea     rax, unk_15C30; jumptable 000000000000D0D8 case 4", "mov     [rsp+0C8h+elide_outer_quotes], 1", "mov     ebp, 1", "mov     r11d, 1", "xor     ebx, ebx", "mov     [rsp+0C8h+quoting_style], 3", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_D0F8"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~ebp,0", "mov~r11d,0", "xor~ebx,ebx", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [3, 0, 160, 0, 0, 7, 1, 1, 3, -1, 0.004600080501408775, ["lea     rax, unk_15C30", "mov     [rsp+0C8h+elide_outer_quotes], 1", "mov     ebp, 1", "mov     r11d, 1", "xor     ebx, ebx", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_D0F8"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~ebp,0", "mov~r11d,0", "xor~ebx,ebx", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 161, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax], 22h ; '\"'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [0, 0, 159, 0, 0, 13, 1, 0, 10, -1, 0.10585935253866943, ["lea     rax, [rsp+0C8h+w]", "xor     edi, edi", "mov     [rsp+0C8h+var_60], r14", "mov     [rsp+0C8h+var_68], rbx", "mov     [rsp+0C8h+i], i_0", "mov     rbx, rdi", "mov     [rsp+0C8h+arg], rax", "mov     [rsp+0C8h+var_78], r10", "mov     r14, arg_0", "mov     [rsp+0C8h+var_6A], r11b", "mov     [rsp+0C8h+c], bpl", "mov     [rsp+0C8h+var_80], r8", "mov     [rsp+0C8h+argsize], r13"], ["lea~rax,[rsp+0]", "xor~edi,edi", "mov~[rsp+0],r14", "mov~[rsp+0],rbx", "mov~[rsp+0],i_0", "mov~rbx,rdi", "mov~[rsp+0],rax", "mov~[rsp+0],r10", "mov~r14,arg_0", "mov~[rsp+0],r11b", "mov~[rsp+0],bpl", "mov~[rsp+0],r8", "mov~[rsp+0],r13"]], [1, 0, 159, 0, 0, 4, 0, 1, 4, -1, 0.6129894773158531, ["cmp     argsize_0, i_0", "setnz   r12b", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_D126"], ["cmp~argsize_0,i_0", "setnz~r12b", "cmp~argsize_0,0", "jnz~FOO"]], [0, 0, 159, 0, 0, 1, 0, 1, 15, -1, 0.13409234661606578, ["jmp     store_c"], ["jmp~FOO"]], [0, 0, 159, 0, 0, 4, 0, 0, 17, -1, 0.019377839112184464, ["lea     rcx, [arg_0+r15]", "lea     bytes, [arg_0+r13+1]", "lea     r8, [rcx+r13]", "nop     dword ptr [rax]"], ["lea~rcx,<TAG>", "lea~bytes,[arg_0+0]", "lea~r8,<TAG>", "nop~<TAG>"]], [1, 0, 159, 0, 0, 2, 0, 1, 16, -1, 0.023949169110459433, ["cmp     bytes, 1", "jz      short loc_D9B7"], ["cmp~bytes,0", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 5, -1, 0.0, ["cmp     byte ptr [arg_0+i_0], 0", "setnz   r12b"], ["cmp~<TAG>,0", "setnz~r12b"]], [0, 0, 159, 0, 0, 2, 1, 1, 5, -1, 0.6124144672531769, ["test    r12b, r12b", "jz      loc_DA20"], ["test~r12b,r12b", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 15, -1, 0.014346501063768616, ["cmp     byte ptr [rsi], 0", "jnz     short loc_DB3F"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 159, 0, 0, 1, 0, 1, 16, -1, 0.0022281639928698753, ["jmp     short loc_DB4C"], ["jmp~FOO"]], [3, 0, 159, 0, 1, 16, 2, 1, 9, -1, 0.06704617330803289, ["mov     [rsp+0C8h+arg], arg_0", "mov     [rsp+0C8h+i], r8", "mov     byte ptr [rsp+0C8h+argsize], r11b", "mov     [rsp+0C8h+p], r10", "call    ___ctype_b_loc", "mov     rcx, [rax]", "movzx   edx, bpl", "movzx   r11d, byte ptr [rsp+0C8h+argsize]", "mov     r10, [rsp+0C8h+p]", "mov     r8, [rsp+0C8h+i]", "mov     eax, 1", "mov     r9, [rsp+0C8h+arg]", "movzx   r12d, word ptr [rcx+rdx*2]", "shr     r12w, 0Eh", "xor     r12d, 1", "and     r12d, r11d"], ["mov~[rsp+0],arg_0", "mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[rsp+0],r10", "call~FOO", "mov~rcx,<TAG>", "movzx~edx,bpl", "movzx~r11d,[yte ptr [rsp+0]", "mov~r10,[rsp+0]", "mov~r8,[rsp+0]", "mov~eax,0", "mov~r9,[rsp+0]", "movzx~r12d,<TAG>", "shr~r12w,0", "xor~r12d,0", "and~r12d,r11d"]], [0, 0, 159, 0, 0, 3, 1, 1, 6, -1, 0.5538496923696165, ["test    r10, r10", "lea     r14, [arg_0+i_0]", "jz      short loc_D1A8"], ["test~r10,r10", "lea~r14,<TAG>", "jz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 7, -1, 0.06937336681169705, ["test    r11b, r11b", "jz      short loc_D1A8"], ["test~r11b,r11b", "jz~FOO"]], [2, 0, 159, 0, 0, 2, 0, 0, 9, -1, 0.003104369802662029, ["mov     ebp, 9; jumptable 000000000000D1C8 case 9", "mov     eax, 74h ; 't'"], ["mov~ebp,0", "mov~eax,0"]], [0, 0, 159, 0, 0, 1, 0, 0, 11, -1, 0.05712724972687022, ["mov     r12d, r11d"], ["mov~r12d,r11d"]], [0, 0, 159, 0, 0, 3, 0, 1, 8, -1, 0.06536267162453127, ["lea     rax, [i_0+r10]", "cmp     rax, argsize_0", "ja      loc_D768"], ["lea~rax,<TAG>", "cmp~rax,argsize_0", "ja~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.024435874056367417, ["cmp     [rsp+0C8h+quoting_style], 2", "jnz     short c_escape"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.003104369802662029, ["mov     ebp, 0Dh; jumptable 000000000000D1C8 case 13", "mov     eax, 72h ; 'r'", "jmp     short c_and_shell_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.003104369802662029, ["mov     ebp, 0Ah; jumptable 000000000000D1C8 case 10", "mov     eax, 6Eh ; 'n'", "jmp     short c_and_shell_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 17, -1, 0.0, ["cmp     byte ptr [r14+m], 0", "jz      short loc_DB4C"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 159, 1, 0, 4, 0, 1, 16, -1, 0.007029498016215284, ["add     m, 1", "lea     rdx, [r15+m]", "cmp     r13, rdx", "ja      short loc_DB38"], ["add~m,0", "lea~rdx,<TAG>", "cmp~r13,rdx", "ja~FOO"]], [0, 0, 159, 1, 0, 5, 0, 1, 12, -1, 0.14300500258754528, ["mov     rdx, rax", "movzx   esi, [rsp+0C8h+elide_outer_quotes]", "mov     rcx, [rsp+0C8h+buffer]", "add     rdx, r15", "jmp     short loc_D56A"], ["mov~rdx,rax", "movzx~esi,[rsp+0]", "mov~rcx,<TAG>", "add~rdx,r15", "jmp~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 15, -1, 0.012017710309930424, ["cmp     rbx, r8", "jnb     short loc_D561"], ["cmp~rbx,r8", "jnb~FOO"]], [0, 0, 159, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     [rcx+rbx], bpl"], ["mov~<TAG>,bpl"]], [1, 0, 159, 1, 0, 2, 0, 0, 16, -1, 0.011442700247254328, ["movzx   ebp, byte ptr [arg_0+r15]", "add     rbx, 1"], ["movzx~ebp,<TAG>", "add~rbx,0"]], [0, 0, 159, 0, 0, 2, 0, 0, 15, -1, 0.03257432005060089, ["cmp     rbx, r8", "jnb     short loc_D581"], ["cmp~rbx,r8", "jnb~FOO"]], [1, 0, 159, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [rcx+rbx], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 0, 159, 0, 1, 14, 1, 2, 9, -1, 0.020515537593336457, ["mov     rsi, [rsp+0C8h+quote_string]; s2", "mov     rdx, r10; n", "mov     rdi, r14; s1", "mov     [rsp+0C8h+arg], arg_0", "mov     [rsp+0C8h+i], r8", "mov     byte ptr [rsp+0C8h+argsize], r11b", "mov     [rsp+0C8h+p], r10", "call    _memcmp", "test    eax, eax", "mov     r10, [rsp+0C8h+p]", "movzx   r11d, byte ptr [rsp+0C8h+argsize]", "mov     r8, [rsp+0C8h+i]", "mov     r9, [rsp+0C8h+arg]", "jnz     short loc_D1A8"], ["mov~rsi,[rsp+0]", "mov~rdx,r10", "mov~rdi,r14", "mov~[rsp+0],arg_0", "mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[rsp+0],r10", "call~FOO", "test~eax,eax", "mov~r10,[rsp+0]", "movzx~r11d,[yte ptr [rsp+0]", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]", "jnz~FOO"]], [0, 0, 159, 0, 0, 3, 0, 0, 16, -1, 0.03199930998792479, ["lea     rax, [rbx+1]", "cmp     r8, len", "jbe     short loc_D596"], ["lea~rax,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [2, 0, 159, 1, 0, 4, 0, 0, 17, -1, 0.0, ["mov     eax, ebp", "shr     al, 6", "add     eax, 30h ; '0'", "mov     [rcx+rbx+1], al"], ["mov~eax,ebp", "shr~al,0", "add~eax,0", "mov~[rcx+0],al"]], [0, 0, 159, 0, 0, 2, 0, 0, 11, -1, 0.01388649301362774, ["cmp     rbx, r8", "jnb     short loc_D19F"], ["cmp~rbx,r8", "jnb~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 10, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 12, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 5Ch ; '\\'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort; jumptable 000000000000D0D8 default case"], ["call~FOO"]], [0, 0, 159, 0, 0, 3, 0, 0, 17, -1, 0.03142429992524869, ["lea     rax, [rbx+2]", "cmp     r8, len", "jbe     short loc_D5AE"], ["lea~rax,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 11, -1, 0.041831982059686044, ["cmp     r8, rbx", "jbe     short loc_D7AB"], ["cmp~r8,rbx", "jbe~FOO"]], [1, 0, 159, 1, 0, 2, 0, 0, 12, -1, 0.013311482950951642, ["add     rbx, 1", "nop     dword ptr [rax+rax+00h]"], ["add~rbx,0", "nop~[word ptr [rax+0]"]], [1, 0, 159, 0, 0, 2, 0, 0, 12, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 5Ch ; '\\'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [3, 0, 159, 1, 0, 5, 1, 0, 18, -1, 0.0, ["mov     eax, ebp", "shr     al, 3", "and     eax, 7", "add     eax, 30h ; '0'", "mov     [rcx+rbx+2], al"], ["mov~eax,ebp", "shr~al,0", "and~eax,0", "add~eax,0", "mov~[rcx+0],al"]], [0, 0, 159, 0, 0, 2, 0, 0, 11, -1, 0.03257432005060089, ["cmp     r8, rbx", "jbe     short loc_D3B8"], ["cmp~r8,rbx", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 12, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 27h ; '''"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [0, 0, 159, 0, 0, 3, 0, 0, 12, -1, 0.03199930998792479, ["lea     rax, [rbx+1]", "cmp     r8, len", "jbe     short loc_D3CA"], ["lea~rax,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 13, -1, 0.0, ["mov     len, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx+1], 5Ch ; '\\'"], ["mov~len,<TAG>", "mov~[yte ptr [rax+0],0"]], [0, 0, 159, 0, 0, 3, 0, 0, 13, -1, 0.03142429992524869, ["lea     rax, [rbx+2]", "cmp     r8, len", "jbe     short loc_D3DC"], ["lea~rax,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 14, -1, 0.0, ["mov     len, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx+2], 27h ; '''"], ["mov~len,<TAG>", "mov~[yte ptr [rax+0],0"]], [1, 0, 159, 0, 0, 2, 0, 0, 15, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+len], 30h ; '0'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [0, 0, 159, 0, 0, 3, 0, 0, 15, -1, 0.01845782301190271, ["lea     rax, [rdx+2]", "cmp     r8, len", "jbe     short loc_D7F1"], ["lea~rax,[rdx+0]", "cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 16, -1, 0.0, ["mov     len, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rdx+2], 30h ; '0'"], ["mov~len,<TAG>", "mov~[yte ptr [rax+0],0"]]], "func_feature": [13, 67, 129, 7, 188, 323, 6, 671, 0.04616, 7, 32], "succs": [[6], [0, 118], [54], [2, 11, 131, 104, 43, 108, 34, 80, 82, 99, 85, 83, 153, 59, 157, 158], [80, 12], [80, 4], [54], [118, 6], [13], [8, 126], [8, 9], [24, 77], [64, 25], [161, 18], [13], [13], [7], [1, 35, 131, 104, 112, 42, 80, 16, 99, 82, 83, 85, 153, 26, 157, 158], [87], [32, 75], [19, 21], [19], [122], [52, 22], [77, 22], [64, 33], [7], [102, 79], [27, 29], [27, 30], [27, 36], [27, 68], [75], [52, 37], [54], [7], [68], [41, 46], [10, 39], [40, 38], [89, 38], [46], [77, 47], [54], [50], [74, 44], [48, 51], [77, 23], [51], [76], [49, 76], [67, 61], [88], [170, 52], [113, 52], [52], [52, 7], [179, 52], [52, 165], [52, 175], [64, 52], [67], [88, 28], [28, 62], [80], [64, 66], [64, 5], [78, 70], [69, 31], [31], [78], [162, 143], [58, 71], [71], [136], [74, 45], [74, 50], [156], [80], [102], [90, 118], [80, 82], [80, 83], [80, 84], [80, 55], [80, 57], [80], [80, 154], [102], [88], [105, 117], [90], [90, 93], [90, 132], [90], [136], [98, 133, 138, 111, 20, 95, 127], [136], [97, 107], [65, 60], [145, 10], [10, 100], [171, 109], [120, 141], [150, 103], [117, 54], [136], [106, 130], [54], [], [96, 173], [136], [59, 116], [114, 115], [115], [117], [118, 119], [122], [91, 117], [142], [141], [125], [121, 125], [104, 17], [104, 3], [142], [129, 14], [136], [148, 15], [128, 101], [136], [81, 134], [185, 186], [139, 135], [81], [137, 140], [142], [136], [136], [136], [137], [9], [146, 147], [122], [39], [144, 10], [147], [63, 151], [160, 149], [15], [87], [152, 123], [123, 155], [156], [161], [124, 167], [56, 7], [156], [156], [160, 15], [159, 15], [72], [163, 164], [164], [72], [168, 166], [168], [123, 53], [169, 174], [174], [176, 172], [], [176], [], [73, 178], [177, 92], [123], [92], [73], [180, 181], [181], [182, 183], [183], [184, 86], [86], [186], [187, 94], [94]], "fname": "quotearg_buffer_restyled", "n_num": 188}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 11, 1, 1, 18, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "movsxd  r15, edi", "push    r13", "push    r12", "mov     r14, argsize", "push    rbp", "push    rbx", "mov     rbp, options", "sub     rsp, 28h", "mov     [rsp+58h+arg], arg_0", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "test    r15d, r15d", "mov     rbx, cs:slotvec_0", "mov     [rsp+58h+e], eax", "js      loc_DD43"], ["push~r15", "push~r14", "movsxd~r15,edi", "push~r13", "push~r12", "mov~r14,argsize", "push~rbp", "push~rbx", "mov~rbp,options", "sub~rsp,0", "mov~[rsp+0],arg_0", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "test~r15d,r15d", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [0, 0, 6, 0, 1, 6, 0, 1, 3, 0, 0.03636363636363636, ["mov     rdi, sv; p", "mov     [rsp+58h+size], n1", "call    xrealloc", "mov     rdx, [rsp+58h+size]", "mov     sv, rax", "mov     cs:slotvec_0, sv"], ["mov~rdi,sv", "mov~[rsp+0],n1", "call~FOO", "mov~rdx,[rsp+0]", "mov~sv,rax", "mov~<TAG>,sv"]], [1, 0, 8, 1, 0, 7, 0, 1, 2, 0, 0.05454545454545454, ["lea     edx, [n0+1]", "lea     e_0, slotvec0", "mov     rsi, rdx", "mov     r12, rdx", "shl     rsi, 4; n", "cmp     sv, rax", "jz      loc_DD18"], ["lea~edx,[n0+0]", "lea~e_0,<TAG>", "mov~rsi,rdx", "mov~r12,rdx", "shl~rsi,0", "cmp~sv,rax", "jz~FOO"]], [2, 0, 5, 4, 1, 8, 1, 1, 4, 0, 0.13636363636363635, ["mov     edi, cs:nslots", "xor     esi, esi; c", "sub     rdx, rdi", "shl     rdi, 4", "shl     rdx, 4; n", "add     rdi, rbx; s", "call    _memset", "mov     cs:nslots, r12d"], ["mov~edi,<TAG>", "xor~esi,esi", "sub~rdx,rdi", "shl~rdi,0", "shl~rdx,0", "add~rdi,rbx", "call~FOO", "mov~<TAG>,r12d"]], [0, 0, 6, 0, 1, 9, 1, 2, 3, 0, 0.03636363636363636, ["xor     edi, edi; p", "mov     [rsp+58h+size], n1", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     sv, rax", "mov     cs:slotvec_0, sv", "mov     rdx, [rsp+58h+size]", "movups  xmmword ptr [sv], xmm0", "jmp     loc_DC2D"], ["xor~edi,edi", "mov~[rsp+0],n1", "call~FOO", "movdqa~xmm0,<TAG>", "mov~sv,rax", "mov~<TAG>,sv", "mov~rdx,[rsp+0]", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 1, 0, 0.08181818181818182, ["cmp     cs:nslots, r15d", "ja      short loc_DC4F"], ["cmp~<TAG>,r15d", "ja~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, 0, 0.12727272727272726, ["lea     rsi, [qsize+1]", "lea     qsize, slot0", "cmp     val, rax", "mov     [rbx], size_0", "jz      short loc_DCC1"], ["lea~rsi,[qsize+0]", "lea~qsize,<TAG>", "cmp~val,rax", "mov~<TAG>,size_0", "jz~FOO"]], [3, 0, 4, 3, 1, 23, 1, 2, 2, 0, 0.21818181818181817, ["mov     eax, [options+4]", "shl     n0, 4", "sub     rsp, 8", "add     sv, r15", "lea     r15, [options+8]", "mov     r8d, [options+0]; quoting_style", "mov     r11, [rbx]", "mov     r12, [rbx+8]", "mov     rcx, argsize; argsize", "or      eax, 1", "mov     [rsp+60h+flags], eax", "push    r15; quote_these_too", "mov     r9d, eax; flags", "mov     rdx, [rsp+68h+arg]; arg", "mov     rsi, size_0; buffersize", "mov     rdi, val; buffer", "mov     [rsp+68h+size], size_0", "call    quotearg_buffer_restyled", "pop     rcx", "pop     rsi", "mov     r11, [rsp+58h+size]", "cmp     r11, qsize", "ja      short loc_DCFB"], ["mov~eax,[options+0]", "shl~n0,0", "sub~rsp,0", "add~sv,r15", "lea~r15,[options+0]", "mov~r8d,[options+0]", "mov~r11,<TAG>", "mov~r12,[rbx+0]", "mov~rcx,argsize", "or~eax,0", "mov~[rsp+0],eax", "push~r15", "mov~r9d,eax", "mov~rdx,[rsp+0]", "mov~rsi,size_0", "mov~rdi,val", "mov~[rsp+0],size_0", "call~FOO", "pop~rcx", "pop~rsi", "mov~r11,[rsp+0]", "cmp~r11,qsize", "ja~FOO"]], [1, 0, 0, 1, 0, 11, 0, 0, 3, 0, 0.0, ["mov     eax, [rsp+58h+e]", "mov     [r13+0], eax", "add     rsp, 28h", "mov     rax, val", "pop     rbx", "pop     options", "pop     val", "pop     r13", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~[r13+0],eax", "add~rsp,0", "mov~rax,val", "pop~rbx", "pop~options", "pop~val", "pop~r13", "pop~argsize", "pop~r15", "retn"]], [1, 0, 1, 1, 2, 16, 0, 2, 4, 0, 0.01818181818181818, ["mov     rdi, rsi; n", "mov     [rsp+58h+size], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, [options+0]; quoting_style", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rcx, argsize; argsize", "mov     rdx, [rsp+68h+arg]; arg", "mov     rsi, [rsp+68h+size]; buffersize", "mov     rdi, rax; buffer", "mov     val, rax", "call    quotearg_buffer_restyled", "pop     rax", "pop     rdx"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,[options+0]", "push~r15", "mov~r9d,[rsp+0]", "mov~rcx,argsize", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~val,rax", "call~FOO", "pop~rax", "pop~rdx"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, 0, 0.0, ["mov     rdi, val; ptr", "mov     [rsp+58h+size], size_0", "call    free", "mov     rsi, [rsp+58h+size]"], ["mov~rdi,val", "mov~[rsp+0],size_0", "call~FOO", "mov~rsi,[rsp+0]"]]], "func_feature": [9, 4, 15, 0, 12, 15, 7, 110, 0.05909, 4, 11], "succs": [[], [0, 6], [4], [2, 5], [8], [4], [8, 3], [10, 11], [9, 7], [], [9], [10]], "fname": "quotearg_n_options", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 0, 0, 2, 18, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, o", "call    ___errno_location", "mov     r12d, [p]", "mov     rbp, p", "lea     p, default_quoting_options", "test    o, o", "mov     esi, 28h ; '('; s", "cmovz   o, p", "mov     rdi, rbx; p", "call    xmemdup", "mov     [rbp+0], r12d", "pop     rbx", "pop     rbp", "pop     e", "retn"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,o", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,p", "lea~p,<TAG>", "test~o,o", "mov~esi,0", "cmovz~o,p", "mov~rdi,rbx", "call~FOO", "mov~[rbp+0],r12d", "pop~rbx", "pop~rbp", "pop~e", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 2, 18, 0.0, 1, 0], "succs": [[]], "fname": "clone_quoting_options", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     eax, [rdi]", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~eax,<TAG>", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 2, 5, 0.0, 1, 0], "succs": [[]], "fname": "get_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     [rdi], esi", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~<TAG>,esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 7, 5, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[4, 0, 0, 1, 0, 19, 6, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    p, p", "mov     ecx, esi", "cmovz   p, rax", "mov     eax, esi", "and     ecx, 1Fh", "shr     al, 5", "movzx   eax, al", "lea     p, [p+rax*4+8]", "mov     esi, [p]", "mov     eax, esi", "shr     eax, cl", "xor     edx, eax", "and     eax, 1", "and     edx, 1", "shl     edx, cl", "xor     edx, esi", "mov     [p], edx", "retn"], ["lea~rax,<TAG>", "test~p,p", "mov~ecx,esi", "cmovz~p,rax", "mov~eax,esi", "and~ecx,0", "shr~al,0", "movzx~eax,al", "lea~p,[p+0]", "mov~esi,<TAG>", "mov~eax,esi", "shr~eax,cl", "xor~edx,eax", "and~eax,0", "and~edx,0", "shl~edx,cl", "xor~edx,esi", "mov~<TAG>,edx", "retn"]]], "func_feature": [0, 6, 0, 0, 1, 0, 3, 19, 0.0, 1, 1], "succs": [[]], "fname": "set_char_quoting", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0.0, ["lea     r, default_quoting_options", "test    o, o", "cmovz   o, r", "mov     eax, [o+4]", "mov     [o+4], esi", "retn"], ["lea~r,<TAG>", "test~o,o", "cmovz~o,r", "mov~eax,[o+0]", "mov~[o+0],esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 6, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_flags", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[3, 0, 0, 3, 2, 37, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "lea     r, default_quoting_options", "push    r13", "push    r12", "mov     r13, buffer", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, buffersize", "mov     r15, arg", "sub     rsp, 18h", "test    o, o", "cmovz   rbx, r", "mov     [rsp+48h+argsize], argsize_0", "call    ___errno_location", "mov     r12d, [r]", "mov     rbp, r", "lea     r, [p+8]", "sub     rsp, 8", "mov     r9d, [p+4]; flags", "mov     r8d, [p]; quoting_style", "push    r; quote_these_too", "mov     rcx, [rsp+58h+argsize]; argsize", "mov     rdx, arg; arg", "mov     rsi, buffersize; buffersize", "mov     rdi, buffer; buffer", "call    quotearg_buffer_restyled", "mov     [rbp+0], r12d", "add     rsp, 28h", "pop     p", "pop     rbp", "pop     e", "pop     buffer", "pop     buffersize", "pop     arg", "retn"], ["push~r15", "push~r14", "lea~r,<TAG>", "push~r13", "push~r12", "mov~r13,buffer", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,buffersize", "mov~r15,arg", "sub~rsp,0", "test~o,o", "cmovz~rbx,r", "mov~[rsp+0],argsize_0", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,r", "lea~r,[p+0]", "sub~rsp,0", "mov~r9d,[p+0]", "mov~r8d,<TAG>", "push~r", "mov~rcx,[rsp+0]", "mov~rdx,arg", "mov~rsi,buffersize", "mov~rdi,buffer", "call~FOO", "mov~[rbp+0],r12d", "add~rsp,0", "pop~p", "pop~rbp", "pop~e", "pop~buffer", "pop~buffersize", "pop~arg", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 2, 37, 0.0, 1, 3], "succs": [[]], "fname": "quotearg_buffer", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[2, 0, 2, 2, 4, 54, 7, 5, 0, 0, 0.0, ["push    r15", "push    r14", "lea     rax, default_quoting_options", "push    r13", "push    r12", "mov     r12, size", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, arg", "mov     r15, argsize", "sub     rsp, 38h", "test    o, o", "cmovz   rbx, rax", "xor     ebp, ebp", "call    ___errno_location", "test    size, size", "mov     r13, rax", "mov     eax, [rax]", "setz    bpl", "or      ebp, [p+4]", "lea     r10, [p+8]", "sub     rsp, 8", "mov     r8d, [p]; quoting_style", "mov     rcx, argsize; argsize", "mov     [rsp+70h+e], eax", "push    r10; quote_these_too", "mov     rdx, arg; arg", "xor     esi, esi; buffersize", "xor     edi, edi; buffer", "mov     r9d, ebp; flags", "mov     [rsp+78h+var_48], r10", "call    quotearg_buffer_restyled", "lea     rsi, [rax+1]", "mov     [rsp+78h+var_40], rax", "mov     rdi, bufsize_0; n", "mov     [rsp+78h+bufsize], bufsize_0", "call    xmalloc", "mov     r10, [rsp+78h+var_48]", "mov     rsi, [rsp+78h+bufsize]; buffersize", "mov     rdx, arg; arg", "mov     r8d, [p]; quoting_style", "mov     r9d, ebp; flags", "mov     rcx, argsize; argsize", "mov     rdi, rax; buffer", "mov     [rsp+78h+var_58], rax", "mov     [rsp+78h+quote_these_too], r10; quote_these_too", "call    quotearg_buffer_restyled", "mov     eax, [rsp+78h+e]", "test    size, size", "mov     [r13+0], eax", "pop     rax", "pop     rdx", "jz      short loc_DF5B"], ["push~r15", "push~r14", "lea~rax,<TAG>", "push~r13", "push~r12", "mov~r12,size", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,arg", "mov~r15,argsize", "sub~rsp,0", "test~o,o", "cmovz~rbx,rax", "xor~ebp,ebp", "call~FOO", "test~size,size", "mov~r13,rax", "mov~eax,<TAG>", "setz~bpl", "or~ebp,[p+0]", "lea~r10,[p+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~[rsp+0],eax", "push~r10", "mov~rdx,arg", "xor~esi,esi", "xor~edi,edi", "mov~r9d,ebp", "mov~[rsp+0],r10", "call~FOO", "lea~rsi,[rax+0]", "mov~[rsp+0],rax", "mov~rdi,bufsize_0", "mov~[rsp+0],bufsize_0", "call~FOO", "mov~r10,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdx,arg", "mov~r8d,<TAG>", "mov~r9d,ebp", "mov~rcx,argsize", "mov~rdi,rax", "mov~[rsp+0],rax", "mov~<TAG>,r10", "call~FOO", "mov~eax,[rsp+0]", "test~size,size", "mov~[r13+0],eax", "pop~rax", "pop~rdx", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 0, 0, 0.0, ["mov     rax, [rsp+68h+var_58]", "add     rsp, 38h", "pop     p", "pop     flags", "pop     size", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["mov~rax,[rsp+0]", "add~rsp,0", "pop~p", "pop~flags", "pop~size", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [0, 0, 1, 0, 0, 2, 0, 0, 0, 1, 0.0, ["mov     r11, [rsp+68h+var_40]", "mov     [size], r11"], ["mov~r11,[rsp+0]", "mov~<TAG>,r11"]]], "func_feature": [4, 7, 5, 3, 3, 3, 1, 65, 0.0, 1, 3], "succs": [[1, 2], [], [1]], "fname": "quotearg_alloc_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rcx, o", "xor     edx, edx", "jmp     quotearg_alloc_mem"], ["mov~rcx,o", "xor~edx,edx", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_alloc", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 1, 3, 0, 1, 3, 0, 1, 0, 0, 0.0, ["call    free", "mov     cs:slotvec0.size, 100h", "mov     cs:slotvec0.val, rbx"], ["call~FOO", "mov~<TAG>,<STR>", "mov~<TAG>,rbx"]], [0, 0, 4, 0, 0, 4, 0, 1, 1, 2, 0.2857142857142857, ["mov     rdi, [sv+8]; ptr", "lea     rbx, slot0", "cmp     rdi, rbx", "jz      short loc_DFE9"], ["mov~rdi,[sv+0]", "lea~rbx,<TAG>", "cmp~rdi,rbx", "jz~FOO"]], [2, 0, 6, 2, 0, 5, 0, 0, 1, 4, 0.023809523809523808, ["sub     eax, 2", "lea     rbx, [sv+18h]", "shl     rax, 4", "lea     rbp, [sv+rax+28h]", "nop     word ptr [rax+rax+00000000h]"], ["sub~eax,0", "lea~rbx,[sv+0]", "shl~rax,0", "lea~rbp,[sv+0]", "nop~[ord ptr [rax+0]"]], [1, 0, 7, 0, 0, 7, 0, 0, 0, 3, 0.0, ["mov     eax, cs:nslots", "push    r12", "mov     r12, cs:slotvec_0", "push    rbp", "push    rbx", "cmp     eax, 1", "jbe     short loc_DFC1"], ["mov~eax,<TAG>", "push~r12", "mov~r12,<TAG>", "push~rbp", "push~rbx", "cmp~eax,0", "jbe~FOO"]], [1, 0, 6, 1, 1, 5, 0, 2, 2, 3, 0.11904761904761904, ["mov     rdi, [rbx]; ptr", "add     rbx, 10h", "call    free", "cmp     rbx, rbp", "jnz     short loc_DFB0"], ["mov~rdi,<TAG>", "add~rbx,0", "call~FOO", "cmp~rbx,rbp", "jnz~FOO"]], [1, 0, 0, 0, 0, 5, 0, 0, 3, 0, 0.0, ["pop     rbx", "mov     cs:nslots, 1", "pop     rbp", "pop     sv", "retn"], ["pop~rbx", "mov~<TAG>,0", "pop~rbp", "pop~sv", "retn"]], [0, 0, 2, 0, 0, 3, 0, 1, 2, 1, 0.23809523809523808, ["lea     rbx, slotvec0", "cmp     sv, rbx", "jz      short loc_E004"], ["lea~rbx,<TAG>", "cmp~sv,rbx", "jz~FOO"]], [0, 0, 1, 0, 1, 3, 0, 1, 3, 1, 0.0, ["mov     rdi, sv; ptr", "call    free", "mov     cs:slotvec_0, rbx"], ["mov~rdi,sv", "call~FOO", "mov~<TAG>,rbx"]]], "func_feature": [3, 0, 6, 0, 8, 11, 0, 35, 0.08333, 5, 3], "succs": [[6], [0, 6], [4], [1, 2], [1, 4], [], [5, 7], [5]], "fname": "quotearg_free", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rdx,0", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_n", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_n_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options; options", "mov     rsi, arg; arg", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "xor     edi, edi; n", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rsi,arg", "mov~rdx,0", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 6, 5, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options; options", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "xor     edi, edi; n", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rdx,argsize", "mov~argsize,arg", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[3, 0, 2, 1, 1, 23, 2, 2, 0, 0, 0.0, ["pxor    xmm0, xmm0", "sub     rsp, 68h", "mov     dword ptr [rsp+68h+s], esi", "mov     dword ptr [rsp+68h+s+4], 0", "mov     rax, arg", "mov     rcx, fs:28h", "mov     [rsp+68h+var_10], rcx", "xor     ecx, ecx", "movups  [rsp+68h+s+8], xmm0", "mov     rcx, rsp; options", "mov     s_0, rax; arg", "movups  [rsp+68h+var_20], xmm0", "movdqa  xmm0, [rsp+68h+s]", "mov     arg, qword ptr [rsp+68h+var_20+8]", "movaps  xmmword ptr [rsp+68h+o.style], xmm0", "movdqa  xmm0, xmmword ptr [rsp+40h]", "mov     qword ptr [rsp+68h+o.quote_these_too+18h], rdx", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "movaps  xmmword ptr [rsp+68h+o.quote_these_too+8], xmm0", "call    quotearg_n_options", "mov     rdx, [rsp+68h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_E107"], ["pxor~xmm0,xmm0", "sub~rsp,0", "mov~[word ptr [rsp+0],esi", "mov~[word ptr [rsp+0],0", "mov~rax,arg", "mov~rcx,<TAG>", "mov~[rsp+0],rcx", "xor~ecx,ecx", "movups~[rsp+0],xmm0", "mov~rcx,rsp", "mov~s_0,rax", "movups~[rsp+0],xmm0", "movdqa~xmm0,[rsp+0]", "mov~arg,[word ptr [rsp+0]", "movaps~<TAG>,xmm0", "movdqa~xmm0,[mmword ptr [rsp+0]", "mov~[word ptr [rsp+0],rdx", "mov~rdx,0", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 68h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 2, 3, 2, 3, 2, 4, 26, 0.0, 1, 2], "succs": [[1, 2], [], []], "fname": "quotearg_n_style", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 68h", "retn"], ["add~rsp,0", "retn"]], [2, 0, 2, 1, 1, 23, 2, 2, 0, 1, 0.0, ["pxor    xmm0, xmm0", "sub     rsp, 68h", "mov     dword ptr [rsp+68h+s], esi", "mov     dword ptr [rsp+68h+s+4], 0", "mov     rax, arg", "mov     arg, argsize; argsize", "mov     s_0, arg; arg", "movups  [rsp+68h+s+8], xmm0", "mov     argsize, fs:28h", "mov     [rsp+68h+var_10], argsize", "xor     ecx, ecx", "movups  [rsp+68h+var_20], xmm0", "movdqa  xmm0, [rsp+68h+s]", "mov     rcx, qword ptr [rsp+68h+var_20+8]", "movaps  xmmword ptr [rsp+68h+o.style], xmm0", "movdqa  xmm0, xmmword ptr [rsp+40h]", "mov     qword ptr [rsp+68h+o.quote_these_too+18h], rcx", "mov     rcx, rsp; options", "movaps  xmmword ptr [rsp+68h+o.quote_these_too+8], xmm0", "call    quotearg_n_options", "mov     rdx, [rsp+68h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_E183"], ["pxor~xmm0,xmm0", "sub~rsp,0", "mov~[word ptr [rsp+0],esi", "mov~[word ptr [rsp+0],0", "mov~rax,arg", "mov~arg,argsize", "mov~s_0,arg", "movups~[rsp+0],xmm0", "mov~argsize,<TAG>", "mov~[rsp+0],argsize", "xor~ecx,ecx", "movups~[rsp+0],xmm0", "movdqa~xmm0,[rsp+0]", "mov~rcx,[word ptr [rsp+0]", "movaps~<TAG>,xmm0", "movdqa~xmm0,[mmword ptr [rsp+0]", "mov~[word ptr [rsp+0],rcx", "mov~rcx,rsp", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 2, 3, 2, 3, 2, 1, 26, 0.0, 1, 2], "succs": [[], [0, 2], []], "fname": "quotearg_n_style_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 1, 1, 0, 0, 0.0, ["mov     rdx, arg; arg", "mov     esi, edi; s", "xor     edi, edi; n", "jmp     quotearg_n_style"], ["mov~rdx,arg", "mov~esi,edi", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "quotearg_style", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["mov     rcx, argsize; argsize", "mov     argsize, arg; arg", "mov     esi, edi; s", "xor     edi, edi; n", "jmp     quotearg_n_style_mem"], ["mov~rcx,argsize", "mov~argsize,arg", "mov~esi,edi", "xor~edi,edi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_style_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 38h", "retn"], ["add~rsp,0", "retn"]], [4, 0, 2, 2, 1, 33, 6, 2, 0, 1, 0.0, ["sub     rsp, 38h", "mov     ecx, edx", "mov     rax, fs:28h", "mov     [rsp+38h+var_10], rax", "xor     eax, eax", "mov     rax, qword ptr cs:default_quoting_options.quote_these_too+18h", "mov     r8, rsp", "and     ecx, 1Fh", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     qword ptr [rsp+38h+options.quote_these_too+18h], rax", "mov     eax, edx", "shr     al, 5", "movzx   eax, al", "movaps  xmmword ptr [rsp+38h+options.style], xmm0", "lea     r9, [r8+rax*4+8]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "movaps  xmmword ptr [rsp+38h+options.quote_these_too+8], xmm0", "mov     edx, [r9]", "mov     eax, edx", "shr     eax, cl", "not     eax", "and     eax, 1", "shl     eax, cl", "mov     rcx, r8; options", "xor     eax, edx", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "mov     [r9], eax", "xor     edi, edi; n", "call    quotearg_n_options", "mov     rsi, [rsp+38h+var_10]", "xor     rsi, fs:28h", "jnz     short loc_E236"], ["sub~rsp,0", "mov~ecx,edx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "mov~r8,rsp", "and~ecx,0", "movdqa~xmm0,<TAG>", "mov~[word ptr [rsp+0],rax", "mov~eax,edx", "shr~al,0", "movzx~eax,al", "movaps~<TAG>,xmm0", "lea~r9,[r8+0]", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "mov~edx,<TAG>", "mov~eax,edx", "shr~eax,cl", "not~eax", "and~eax,0", "shl~eax,cl", "mov~rcx,r8", "xor~eax,edx", "mov~rdx,argsize", "mov~argsize,arg", "mov~<TAG>,eax", "xor~edi,edi", "call~FOO", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 6, 3, 1, 3, 2, 3, 36, 0.0, 4, 3], "succs": [[], [0, 2], []], "fname": "quotearg_char_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["movsx   edx, sil", "mov     ch_0, 0FFFFFFFFFFFFFFFFh", "jmp     quotearg_char_mem"], ["movsx~edx,sil", "mov~ch_0,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_char", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 1, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     edx, 3Ah ; ':'; ch_0", "mov     rsi, 0FFFFFFFFFFFFFFFFh; argsize", "jmp     quotearg_char_mem"], ["mov~edx,<STR>", "mov~rsi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 4, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_colon", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     edx, 3Ah ; ':'; ch_0", "jmp     quotearg_char_mem"], ["mov~edx,<STR>", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_colon_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 2, 0, 1, 4, 0, 1, 0, 0, 0.16666666666666666, ["mov     r12, src", "lea     rbx, [rdx-1]", "call    ___ctype_tolower_loc", "nop     dword ptr [rax+rax+00000000h]"], ["mov~r12,src", "lea~rbx,[rdx-1]+0]", "call~FOO", "nop~[word ptr [rax+0]"]], [0, 0, 3, 0, 0, 6, 1, 1, 0, 1, 0.0, ["test    rdx, rdx", "push    r12", "push    rbp", "mov     rbp, dest", "push    rbx", "jz      short loc_E2B9"], ["test~rdx,rdx", "push~r12", "push~rbp", "mov~rbp,dest", "push~rbx", "jz~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 1, 0, 0.0, ["mov     rax, dest", "pop     rbx", "pop     dest", "pop     r12", "retn"], ["mov~rax,dest", "pop~rbx", "pop~dest", "pop~r12", "retn"]], [2, 0, 2, 1, 0, 7, 0, 1, 2, 1, 0.16666666666666666, ["movzx   ecx, byte ptr [src+len]", "mov     rdx, [rax]", "mov     edx, [rdx+rcx*4]", "mov     [dest+len+0], dl", "sub     len, 1", "cmp     len, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_E2A0"], ["movzx~ecx,<TAG>", "mov~rdx,<TAG>", "mov~edx,<TAG>", "mov~[dest+0],dl", "sub~len,0", "cmp~len,0", "jnz~FOO"]]], "func_feature": [1, 1, 3, 0, 4, 5, 2, 22, 0.08333, 0, 1], "succs": [[3], [0, 2], [], [2, 3]], "fname": "memcpy_lowcase", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 2, 0, 1, 4, 0, 1, 0, 0, 0.16666666666666666, ["mov     r12, src", "lea     rbx, [rdx-1]", "call    ___ctype_toupper_loc", "nop     dword ptr [rax+rax+00000000h]"], ["mov~r12,src", "lea~rbx,[rdx-1]+0]", "call~FOO", "nop~[word ptr [rax+0]"]], [0, 0, 3, 0, 0, 6, 1, 1, 0, 1, 0.0, ["test    rdx, rdx", "push    r12", "push    rbp", "mov     rbp, dest", "push    rbx", "jz      short loc_E309"], ["test~rdx,rdx", "push~r12", "push~rbp", "mov~rbp,dest", "push~rbx", "jz~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 1, 0, 0.0, ["mov     rax, dest", "pop     rbx", "pop     dest", "pop     r12", "retn"], ["mov~rax,dest", "pop~rbx", "pop~dest", "pop~r12", "retn"]], [2, 0, 2, 1, 0, 7, 0, 1, 2, 1, 0.16666666666666666, ["movzx   ecx, byte ptr [src+len]", "mov     rdx, [rax]", "mov     edx, [rdx+rcx*4]", "mov     [dest+len+0], dl", "sub     len, 1", "cmp     len, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_E2F0"], ["movzx~ecx,<TAG>", "mov~rdx,<TAG>", "mov~edx,<TAG>", "mov~[dest+0],dl", "sub~len,0", "cmp~len,0", "jnz~FOO"]]], "func_feature": [1, 1, 3, 0, 4, 5, 5, 22, 0.08333, 0, 1], "succs": [[3], [0, 2], [], [2, 3]], "fname": "memcpy_uppcase", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 338, 0, 0, 8, 0, 1, 0, 0, 0.00569450837979302, ["movsxd  _delta, edx; n", "cmp     r11d, 30h ; '0'", "mov     [rsp+4F8h+var_499], r10b", "lea     r13, [rax+_delta]", "mov     [rsp+4F8h+digits], r9d", "mov     [rsp+4F8h+pad], r11d", "mov     [rsp+4F8h+padding], rcx", "jz      loc_FB87"], ["movsxd~_delta,edx", "cmp~r11d,0", "mov~[rsp+0],r10b", "lea~r13,<TAG>", "mov~[rsp+0],r9d", "mov~[rsp+0],r11d", "mov~[rsp+0],rcx", "jz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 26, 23, 0.008524713143402723, ["test    edx, edx", "jle     short loc_F82E"], ["test~edx,edx", "jle~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 18, 21, 0.01320335987360695, ["test    ebx, ebx; jumptable 000000000000E5C4 cases 65,66,97", "jnz     short loc_E830; jumptable 000000000000E5C4 default case"], ["test~ebx,ebx", "jnz~FOO"]], [0, 0, 338, 1, 0, 5, 0, 1, 17, 3, 0.6626813632721259, ["lea     rdi, off_160BC", "movzx   eax, cl", "movsxd  rax, dword ptr [rdi+rax*4]", "add     rax, rdi", "jmp     rax; switch jump"], ["lea~rdi,<TAG>", "movzx~eax,cl", "movsxd~rax,<TAG>", "add~rax,rdi", "jmp~rax"]], [0, 0, 338, 0, 0, 2, 1, 0, 19, 20, 0.01309253860274272, ["test    r8b, r8b", "cmovnz  r10d, r8d"], ["test~r8b,r8b", "cmovnz~r10d,r8d"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, -1, 0.005813854363800658, ["mov     rsi, [rsp+4F8h+var_40]", "xor     rsi, fs:28h", "mov     rax, r15", "jnz     loc_FC03"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~rax,r15", "jnz~FOO"]], [1, 0, 338, 0, 0, 7, 2, 1, 20, 19, 0.029083479674242428, ["mov     edx, 2520h", "mov     r12, r14", "xor     r8d, r8d", "mov     word ptr [rsp+4F8h+ufmt], dx", "xor     ebx, ebx", "mov     rax, [rsp+4F8h+u]", "jmp     loc_E70B"], ["mov~edx,0", "mov~r12,r14", "xor~r8d,r8d", "mov~[ord ptr [rsp+0],dx", "xor~ebx,ebx", "mov~rax,[rsp+0]", "jmp~FOO"]], [0, 0, 338, 0, 0, 3, 0, 1, 19, 20, 0.013101063315886133, ["mov     ecx, r12d", "mov     r10d, r8d", "jmp     loc_E80B"], ["mov~ecx,r12d", "mov~r10d,r8d", "jmp~FOO"]], [0, 1, 338, 0, 1, 8, 0, 1, 28, 23, 0.0014278894515199563, ["mov     rdi, [rsp+4F8h+dest]; s", "mov     esi, 20h ; ' '; c", "call    _memset", "movzx   r10d, [rsp+4F8h+var_499]", "mov     r9d, [rsp+4F8h+digits]", "mov     r11d, [rsp+4F8h+pad]", "mov     rcx, [rsp+4F8h+padding]", "mov     [rsp+4F8h+dest], r13"], ["mov~rdi,<TAG>", "mov~esi,<STR>", "call~FOO", "movzx~r10d,[rsp+0]", "mov~r9d,[rsp+0]", "mov~r11d,[rsp+0]", "mov~rcx,[rsp+0]", "mov~<TAG>,r13"]], [0, 0, 338, 0, 0, 2, 0, 0, 20, 24, 0.00025574139430208174, ["mov     r14, f", "nop     dword ptr [rax]"], ["mov~r14,f", "nop~<TAG>"]], [1, 0, 338, 1, 0, 4, 0, 1, 19, 22, 0.015139890542683238, ["mov     rdx, [rsp+4F8h+maxsize]", "sub     rdx, i", "cmp     al, 25h ; '%'", "jnz     loc_E82A"], ["mov~rdx,[rsp+0]", "sub~rdx,i", "cmp~al,0", "jnz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 0, 17, 23, 0.05639523980018072, ["lea     rax, [r14-1]; jumptable 000000000000E5C4 default case", "mov     r13d, 1"], ["lea~rax,[r14-1]+0]", "mov~r13d,0"]], [1, 0, 338, 0, 0, 2, 0, 1, 16, 4, 0.6830000170494263, ["cmp     cl, 7Ah ; 'z'; switch 123 cases", "ja      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~cl,0", "ja~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 3, 0.0, ["cmp     ebx, 4Fh ; 'O'; jumptable 000000000000E5C4 cases 88,99,120", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 18, 22, 0.00284725418989651, ["test    ebx, ebx; jumptable 000000000000E5C4 case 70", "jnz     loc_E830; jumptable 000000000000E5C4 default case"], ["test~ebx,ebx", "jnz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 24, 0.044754744002864305, ["cmp     ebx, 45h ; 'E'; jumptable 000000000000E5C4 cases 71,86,103", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 24, 0.00284725418989651, ["cmp     ebx, 45h ; 'E'; jumptable 000000000000E5C4 case 72", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 24, 0.00284725418989651, ["cmp     ebx, 45h ; 'E'; jumptable 000000000000E5C4 case 73", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 19, 24, 0.005016793684892503, ["cmp     ebx, 4Fh ; 'O'", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 24, 0.00284725418989651, ["cmp     ebx, 45h ; 'E'; jumptable 000000000000E5C4 case 77", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 24, 0.019811433345267932, ["cmp     ebx, 45h ; 'E'; jumptable 000000000000E5C4 case 78", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 24, 0.0056433601009326035, ["cmp     ebx, 45h ; 'E'; jumptable 000000000000E5C4 case 107", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 24, 0.00284725418989651, ["cmp     ebx, 45h ; 'E'; jumptable 000000000000E5C4 case 87", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 20, 21, 0.01705795099994885, ["cmp     al, 7Ah ; 'z'", "jnz     loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~al,0", "jnz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 18, 22, 0.00284725418989651, ["test    ebx, ebx; jumptable 000000000000E5C4 case 68", "jnz     loc_E830; jumptable 000000000000E5C4 default case"], ["test~ebx,ebx", "jnz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 24, 0.00284725418989651, ["cmp     ebx, 45h ; 'E'; jumptable 000000000000E5C4 case 119", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 24, 0.0056433601009326035, ["cmp     ebx, 45h ; 'E'; jumptable 000000000000E5C4 case 101", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 24, 0.012483021612989418, ["cmp     ebx, 45h ; 'E'; jumptable 000000000000E5C4 case 106", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 24, 0.00284725418989651, ["cmp     ebx, 45h ; 'E'; jumptable 000000000000E5C4 case 100", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 24, 0.00284725418989651, ["cmp     ebx, 45h ; 'E'; jumptable 000000000000E5C4 case 85", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 24, 0.00284725418989651, ["cmp     ebx, 45h ; 'E'; jumptable 000000000000E5C4 case 83", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 22, 0.010434248887524934, ["cmp     ebx, 4Fh ; 'O'; jumptable 000000000000E5C4 case 67", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 24, 0.012483021612989418, ["cmp     ebx, 45h ; 'E'; jumptable 000000000000E5C4 case 109", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 24, 0.0056433601009326035, ["cmp     ebx, 45h ; 'E'; jumptable 000000000000E5C4 case 108", "jz      loc_E830; jumptable 000000000000E5C4 default case"], ["cmp~ebx,0", "jz~FOO"]], [0, 0, 338, 0, 0, 2, 0, 1, 19, 24, 0.00011082127086423541, ["mov     r10d, r8d", "jmp     loc_E830; jumptable 000000000000E5C4 default case"], ["mov~r10d,r8d", "jmp~FOO"]], [1, 0, 338, 0, 0, 5, 2, 1, 20, 22, 0.11966992310708745, ["test    ebp, ebp", "mov     r9d, 1", "cmovg   r9d, ebp", "test    rsi, rsi", "js      loc_F5B0"], ["test~ebp,ebp", "mov~r9d,0", "cmovg~r9d,ebp", "test~rsi,rsi", "js~FOO"]], [4, 0, 338, 7, 0, 21, 2, 1, 19, 23, 0.11965287368080063, ["mov     rax, t", "imul    r8", "mov     rax, t", "sar     rax, 3Fh", "sar     rdx, 2", "sub     rdx, rax", "mov     rax, rdx", "lea     rdx, [rdx+rdx*4]", "add     rdx, rdx", "sub     t, rdx", "mov     rdx, rcx", "mov     rcx, rax", "mov     eax, edi", "sub     eax, edx", "add     edx, 30h ; '0'", "test    rsi, rsi", "cmovs   edx, eax", "sub     bufp, 1", "test    t, t", "mov     [bufp], dl", "jnz     short loc_EFE8"], ["mov~rax,t", "imul~,r8", "mov~rax,t", "sar~rax,0", "sar~rdx,0", "sub~rdx,rax", "mov~rax,rdx", "lea~rdx,<TAG>", "add~rdx,rdx", "sub~t,rdx", "mov~rdx,rcx", "mov~rcx,rax", "mov~eax,edi", "sub~eax,edx", "add~edx,0", "test~rsi,rsi", "cmovs~edx,eax", "sub~bufp,0", "test~t,t", "mov~<TAG>,dl", "jnz~FOO"]], [1, 0, 338, 1, 0, 5, 0, 0, 26, 22, 0.014244795662625952, ["movzx   edi, byte ptr [rsp+4F8h+subfmt]", "mov     rax, [rsp+4F8h+dest]", "add     rax, 1", "mov     [rax-1], dil", "mov     [rsp+4F8h+dest], rax"], ["movzx~edi,[yte ptr [rsp+0]", "mov~rax,<TAG>", "add~rax,0", "mov~[rax-1]+0],dil", "mov~<TAG>,rax"]], [0, 0, 338, 0, 0, 2, 1, 1, 25, 23, 0.014159548531191925, ["test    r9d, r9d", "jnz     short loc_F82E"], ["test~r9d,r9d", "jnz~FOO"]], [1, 0, 338, 0, 1, 9, 0, 2, 28, 23, 0.0014278894515199563, ["mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _memset", "mov     [rsp+4F8h+dest], r13", "mov     rcx, [rsp+4F8h+padding]", "mov     r11d, [rsp+4F8h+pad]", "mov     r9d, [rsp+4F8h+digits]", "movzx   r10d, [rsp+4F8h+var_499]", "jmp     loc_F82E"], ["mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~<TAG>,r13", "mov~rcx,[rsp+0]", "mov~r11d,[rsp+0]", "mov~r9d,[rsp+0]", "movzx~r10d,[rsp+0]", "jmp~FOO"]], [2, 0, 338, 1, 0, 5, 0, 1, 18, 22, 0.05641228922646753, ["mov     rbx, rax", "lea     rax, [rax-1]", "add     r13d, 1", "cmp     byte ptr [rax+1], 25h ; '%'", "jnz     short loc_E83A"], ["mov~rbx,rax", "lea~rax,[rax-1]+0]", "add~r13d,0", "cmp~[yte ptr [rax+0],0", "jnz~FOO"]], [0, 0, 338, 2, 0, 5, 0, 1, 25, 21, 0.027739416568632463, ["mov     rax, [rsp+4F8h+maxsize]", "add     i, r12", "mov     r12, r14", "sub     rax, i", "jmp     loc_F068"], ["mov~rax,[rsp+0]", "add~i,r12", "mov~r12,r14", "sub~rax,i", "jmp~FOO"]], [0, 0, 338, 0, 0, 3, 1, 1, 24, 22, 0.027620070584624828, ["mov     rax, [rsp+4F8h+dest]", "test    rax, rax", "jz      short loc_F843"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 338, 2, 0, 7, 0, 1, 21, 21, 0.08547729868889911, ["mov     rax, [rsp+4F8h+maxsize]", "lea     rcx, [r13+17h]", "mov     r12, r14", "sub     rcx, rbx", "sub     rax, i", "cmp     r11d, 2Dh ; '-'", "jz      short loc_F068"], ["mov~rax,[rsp+0]", "lea~rcx,[r13+0]", "mov~r12,r14", "sub~rcx,rbx", "sub~rax,i", "cmp~r11d,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 27, 22, 0.05041515353008371, ["cmp     byte ptr [rsp+4F8h+subfmt], 0", "jz      loc_F03C"], ["cmp~[yte ptr [rsp+0],0", "jz~FOO"]], [0, 0, 338, 1, 0, 3, 0, 0, 19, 21, 0.05642933865275433, ["mov     rdx, [rsp+4F8h+maxsize]", "mov     r12, r14", "sub     rdx, i"], ["mov~rdx,[rsp+0]", "mov~r12,r14", "sub~rdx,i"]], [0, 0, 338, 1, 0, 4, 1, 1, 22, 22, 0.020689478799038413, ["mov     r8d, r9d", "sub     r8d, ecx", "test    r8d, r8d", "jg      loc_FA48"], ["mov~r8d,r9d", "sub~r8d,ecx", "test~r8d,r8d", "jg~FOO"]], [0, 0, 338, 0, 0, 1, 0, 0, 23, 21, 0.0026852846401718583, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 338, 2, 0, 8, 0, 0, 20, 20, 0.0872930625884439, ["mov     esi, ebp", "mov     eax, 0", "sub     esi, r13d", "cmovns  eax, esi", "add     eax, r13d", "movsxd  width, eax", "cmp     rbp, rdx", "jnb     loc_E4E5"], ["mov~esi,ebp", "mov~eax,0", "sub~esi,r13d", "cmovns~eax,esi", "add~eax,r13d", "movsxd~width,eax", "cmp~rbp,rdx", "jnb~FOO"]], [1, 0, 338, 0, 0, 3, 0, 1, 20, 21, 0.01204541967162805, ["mov     r12, f", "mov     r13d, 1", "jmp     loc_E856"], ["mov~r12,f", "mov~r13d,0", "jmp~FOO"]], [1, 0, 338, 0, 0, 4, 0, 1, 19, 21, 0.013055598179121271, ["mov     r12, r14", "mov     modifier, r14", "mov     r13d, 1", "jmp     loc_E856"], ["mov~r12,r14", "mov~modifier,r14", "mov~r13d,0", "jmp~FOO"]], [1, 0, 338, 0, 1, 6, 0, 2, 27, 22, 0.0014278894515199563, ["mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _memset", "mov     [rsp+4F8h+dest], rbp", "movzx   r10d, byte ptr [rsp+4F8h+subfmt]", "jmp     loc_F0C3"], ["mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~<TAG>,rbp", "movzx~r10d,[yte ptr [rsp+0]", "jmp~FOO"]], [1, 0, 338, 0, 0, 5, 0, 1, 26, 23, 0.00569450837979302, ["movsxd  rdx, ebp; n", "cmp     r11d, 30h ; '0'", "mov     byte ptr [rsp+4F8h+subfmt], r10b", "lea     rbp, [rax+rdx]", "jz      loc_F856"], ["movsxd~rdx,ebp", "cmp~r11d,0", "mov~[yte ptr [rsp+0],r10b", "lea~rbp,<TAG>", "jz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 19, 21, 0.007425025147903773, ["xor     r9d, r9d", "jmp     loc_EB54"], ["xor~r9d,r9d", "jmp~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 22, 0.010084735648645423, ["cmp     ebx, 45h ; 'E'; jumptable 000000000000E5C4 case 89", "jz      loc_F872"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 18, 22, 0.008682420336555675, ["cmp     ebx, 45h ; 'E'; jumptable 000000000000E5C4 case 121", "jz      loc_F872"], ["cmp~ebx,0", "jz~FOO"]], [0, 0, 338, 0, 0, 3, 1, 1, 21, 19, 0.0860314050432203, ["mov     rax, [rsp+4F8h+dest]", "test    rax, rax", "jz      short loc_E8C8"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 22, 22, 0.01976880977955092, ["test    esi, esi", "jle     short loc_E8AD"], ["test~esi,esi", "jle~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 29, 24, 0.0026170869350246365, ["mov     r8d, 2Bh ; '+'", "jmp     loc_F5C5"], ["mov~r8d,0", "jmp~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 28, 25, 0.00597582391352531, ["cmp     r11d, 2Dh ; '-'", "jz      loc_F87A"], ["cmp~r11d,0", "jz~FOO"]], [0, 0, 338, 0, 0, 2, 0, 1, 20, 18, 0.019586949232491657, ["mov     r12, r14", "jmp     loc_E550"], ["mov~r12,r14", "jmp~FOO"]], [0, 0, 338, 0, 0, 4, 1, 1, 19, 19, 0.06396660585704626, ["mov     rax, [rsp+4F8h+tp]", "mov     edi, [rax+20h]", "test    edi, edi", "js      loc_F885"], ["mov~rax,[rsp+0]", "mov~edi,[rax+0]", "test~edi,edi", "js~FOO"]], [0, 0, 338, 0, 0, 3, 1, 1, 23, 19, 0.20582067413431537, ["mov     rax, [rsp+4F8h+dest]", "test    rax, rax", "jz      short loc_F0DF"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 338, 2, 0, 8, 0, 0, 22, 20, 0.2070993811058258, ["sub     ebp, ecx", "mov     edx, 0", "movsxd  r13, ecx", "cmovns  edx, ebp", "add     ecx, edx", "movsxd  r14, ecx", "cmp     r14, rax", "jnb     loc_E4E5"], ["sub~ebp,ecx", "mov~edx,0", "movsxd~r13,ecx", "cmovns~edx,ebp", "add~ecx,edx", "movsxd~r14,ecx", "cmp~r14,rax", "jnb~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 24, 22, 0.022556390977443608, ["test    r9d, r9d", "jnz     short loc_F0C3"], ["test~r9d,r9d", "jnz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 25, 22, 0.008524713143402723, ["test    ebp, ebp", "jle     short loc_F0C3"], ["test~ebp,ebp", "jle~FOO"]], [2, 0, 338, 2, 0, 8, 0, 0, 27, 23, 0.01705795099994885, ["mov     ecx, ebp", "sub     ecx, 1", "cmovns  edx, ecx", "mov     r12d, edx", "add     r12d, 1", "movsxd  r12, r12d", "cmp     r12, rax", "jnb     loc_E4E5"], ["mov~ecx,ebp", "sub~ecx,0", "cmovns~edx,ecx", "mov~r12d,edx", "add~r12d,0", "movsxd~r12,r12d", "cmp~r12,rax", "jnb~FOO"]], [1, 0, 338, 3, 0, 11, 1, 1, 26, 22, 0.03498116038395308, ["mov     eax, ebp", "add     i, padding_0", "xor     edx, edx", "sub     eax, r8d", "cmp     r8d, ebp", "cmovge  eax, edx", "mov     ebp, eax", "mov     width, [rsp+4F8h+maxsize]", "sub     rax, i", "cmp     byte ptr [rsp+4F8h+subfmt], 0", "jnz     loc_F88D"], ["mov~eax,ebp", "add~i,padding_0", "xor~edx,edx", "sub~eax,r8d", "cmp~r8d,ebp", "cmovge~eax,edx", "mov~ebp,eax", "mov~width,[rsp+0]", "sub~rax,i", "cmp~[yte ptr [rsp+0],0", "jnz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 20, 20, 0.011346393193869026, ["test    ebp, ebp", "jle     short loc_F440"], ["test~ebp,ebp", "jle~FOO"]], [0, 0, 338, 0, 0, 3, 1, 1, 19, 19, 0.021688291022340423, ["mov     rax, [rsp+4F8h+dest]", "test    rax, rax", "jz      loc_E9B2"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 1, 338, 0, 1, 5, 0, 1, 24, 22, 0.0014278894515199563, ["mov     rdi, [rsp+4F8h+dest]; s", "mov     esi, 20h ; ' '; c", "call    _memset", "movzx   r10d, byte ptr [rsp+4F8h+subfmt]", "mov     [rsp+4F8h+dest], r14"], ["mov~rdi,<TAG>", "mov~esi,<STR>", "call~FOO", "movzx~r10d,[yte ptr [rsp+0]", "mov~<TAG>,r14"]], [1, 0, 338, 0, 0, 5, 0, 1, 23, 23, 0.00569450837979302, ["movsxd  rdx, esi; n", "cmp     r11d, 30h ; '0'", "mov     byte ptr [rsp+4F8h+subfmt], r10b", "lea     r14, [rax+rdx]", "jz      loc_F682"], ["movsxd~rdx,esi", "cmp~r11d,0", "mov~[yte ptr [rsp+0],r10b", "lea~r14,<TAG>", "jz~FOO"]], [0, 0, 338, 0, 0, 3, 1, 1, 28, 22, 0.016938605015941213, ["mov     rax, [rsp+4F8h+dest]", "test    rax, rax", "jz      short loc_F904"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 29, 23, 0.008516188430259322, ["test    r9d, r9d", "jnz     short loc_F8F0"], ["test~r9d,r9d", "jnz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 30, 23, 0.00284725418989651, ["test    ecx, ecx", "jle     short loc_F8F0"], ["test~ecx,ecx", "jle~FOO"]], [0, 0, 338, 0, 0, 6, 1, 1, 23, 21, 0.01983700748469814, ["movsxd  r13, r13d", "test    r10b, r10b", "mov     rsi, rbx; src", "mov     rdx, r13; n", "mov     rdi, [rsp+4F8h+dest]; dest", "jz      short loc_E900"], ["movsxd~r13,r13d", "test~r10b,r10b", "mov~rsi,rbx", "mov~rdx,r13", "mov~rdi,<TAG>", "jz~FOO"]], [1, 0, 338, 0, 1, 6, 0, 2, 24, 22, 0.0014278894515199563, ["mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _memset", "mov     [rsp+4F8h+dest], r14", "movzx   r10d, byte ptr [rsp+4F8h+subfmt]", "jmp     loc_E8AD"], ["mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~<TAG>,r14", "movzx~r10d,[yte ptr [rsp+0]", "jmp~FOO"]], [0, 1, 338, 0, 1, 5, 0, 1, 27, 22, 0.0014278894515199563, ["mov     rdi, [rsp+4F8h+dest]; s", "mov     esi, 20h ; ' '; c", "call    _memset", "movzx   r10d, byte ptr [rsp+4F8h+subfmt]", "mov     [rsp+4F8h+dest], rbp"], ["mov~rdi,<TAG>", "mov~esi,<STR>", "call~FOO", "movzx~r10d,[yte ptr [rsp+0]", "mov~<TAG>,rbp"]], [0, 0, 338, 1, 0, 1, 0, 0, 25, 19, 0.019888155763558554, ["add     [rsp+4F8h+dest], r13"], ["add~<TAG>,r13"]], [0, 0, 338, 0, 1, 2, 0, 2, 24, 20, 0.008499139003972516, ["call    _memcpy", "jmp     short loc_E8C4"], ["call~FOO", "jmp~FOO"]], [0, 0, 338, 0, 1, 1, 0, 1, 24, 20, 0.008499139003972516, ["call    memcpy_uppcase"], ["call~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 5, -1, 0.002881353042470121, ["cmp     [rsp+4F8h+maxsize], 0", "jz      loc_E4E8"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 4, -1, 0.0090745571411522, ["mov     rax, [rsp+4F8h+dest]", "test    rax, rax", "jz      loc_E4E8"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 338, 1, 0, 2, 0, 1, 22, 18, 0.12350604402161867, ["add     i, rbp", "jmp     loc_E550"], ["add~i,rbp", "jmp~FOO"]], [0, 0, 338, 0, 0, 3, 1, 1, 23, 19, 0.034260822123335546, ["mov     rax, [rsp+4F8h+dest]", "test    rax, rax", "jz      loc_E8C8"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 338, 1, 0, 2, 0, 1, 27, 19, 0.028302047636097043, ["add     [rsp+4F8h+dest], rbx", "jmp     loc_E8C8"], ["add~<TAG>,rbx", "jmp~FOO"]], [0, 0, 338, 0, 0, 5, 1, 1, 25, 21, 0.022641638108877635, ["test    r10b, r10b", "mov     rdx, _n; n", "mov     rsi, rbx; src", "mov     rdi, [rsp+4F8h+dest]; dest", "jz      loc_F678"], ["test~r10b,r10b", "mov~rdx,_n", "mov~rsi,rbx", "mov~rdi,<TAG>", "jz~FOO"]], [1, 0, 338, 1, 0, 2, 0, 1, 11, 21, 0.0014151023818048522, ["add     len, 1", "jmp     loc_E4BF"], ["add~len,0", "jmp~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 10, 22, 0.005703033092936422, ["cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      loc_E8D0"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 338, 0, 1, 1, 0, 1, 26, 20, 0.009901454316062264, ["call    memcpy_uppcase"], ["call~FOO"]], [0, 0, 338, 1, 0, 1, 0, 0, 27, 19, 0.022692786387738053, ["add     [rsp+4F8h+dest], _n"], ["add~<TAG>,_n"]], [0, 0, 338, 0, 1, 2, 0, 2, 26, 20, 0.009901454316062264, ["call    _memcpy", "jmp     loc_F0DB"], ["call~FOO", "jmp~FOO"]], [2, 0, 338, 0, 1, 22, 0, 1, 18, 24, 0.11963582425451383, ["mov     rax, [rsp+4F8h+tp]; jumptable 000000000000E5C4 case 115", "lea     rdi, [rsp+4F8h+ltm]; tp", "mov     byte ptr [rsp+4F8h+padding], r10b", "mov     dword ptr [rsp+4F8h+subfmt], r11d", "lea     r13, [rsp+4F8h+ubuf]", "movdqu  xmm0, xmmword ptr [rax]", "lea     modifier, [r13+17h]", "movaps  xmmword ptr [rsp+4F8h+ltm.tm_sec], xmm0", "movdqu  xmm0, xmmword ptr [rax+10h]", "movaps  xmmword ptr [rsp+4F8h+ltm.tm_mon], xmm0", "movdqu  xmm0, xmmword ptr [rax+20h]", "mov     rax, [rax+30h]", "movaps  xmmword ptr [rsp+4F8h+ltm.tm_isdst], xmm0", "mov     [rsp+4F8h+ltm.tm_zone], rax", "call    _mktime", "movzx   r10d, byte ptr [rsp+4F8h+padding]", "mov     r11d, dword ptr [rsp+4F8h+subfmt]", "mov     rsi, rax", "mov     rcx, t", "mov     r8, 6666666666666667h", "mov     edi, 30h ; '0'", "nop     word ptr [rax+rax+00h]"], ["mov~rax,[rsp+0]", "lea~rdi,[rsp+0]", "mov~[yte ptr [rsp+0],r10b", "mov~[word ptr [rsp+0],r11d", "lea~r13,[rsp+0]", "movdqu~xmm0,<TAG>", "lea~modifier,[r13+0]", "movaps~[mmword ptr [rsp+0],xmm0", "movdqu~xmm0,[mmword ptr [rax+0]", "movaps~[mmword ptr [rsp+0],xmm0", "movdqu~xmm0,[mmword ptr [rax+0]", "mov~rax,[rax+0]", "movaps~[mmword ptr [rsp+0],xmm0", "mov~[rsp+0],rax", "call~FOO", "movzx~r10d,[yte ptr [rsp+0]", "mov~r11d,[word ptr [rsp+0]", "mov~rsi,rax", "mov~rcx,t", "mov~r8,0", "mov~edi,0", "nop~[ord ptr [rax+0]"]], [0, 0, 338, 1, 0, 2, 0, 1, 24, 18, 0.20599116839718343, ["add     i, r14", "jmp     loc_E550"], ["add~i,r14", "jmp~FOO"]], [1, 0, 338, 0, 0, 4, 0, 1, 17, 7, 0.01261231309566433, ["mov     r12d, ebx", "mov     r14, rsi", "mov     ebp, 7FFFFFFFh", "jmp     loc_E59E"], ["mov~r12d,ebx", "mov~r14,rsi", "mov~ebp,0", "jmp~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 16, 8, 0.018311083832029052, ["cmp     eax, 9", "ja      loc_E8E0"], ["cmp~eax,0", "ja~FOO"]], [0, 0, 338, 0, 1, 2, 0, 2, 13, 20, 0.005677458953506214, ["call    _memcpy", "jmp     loc_E6A3"], ["call~FOO", "jmp~FOO"]], [1, 0, 338, 0, 0, 5, 0, 1, 12, 21, 0.014193647383765535, ["cmp     [rsp+4F8h+to_uppcase], 0", "mov     rdx, r12; n", "mov     rsi, r14; src", "mov     rdi, [rsp+4F8h+dest]; dest", "jz      loc_E8F0"], ["cmp~[rsp+0],0", "mov~rdx,r12", "mov~rsi,r14", "mov~rdi,<TAG>", "jz~FOO"]], [1, 0, 338, 0, 0, 6, 2, 1, 18, 22, 0.039136958041361906, ["mov     rdi, [rsp+4F8h+zone]; jumptable 000000000000E5C4 case 90", "test    r8b, r8b", "mov     eax, 0", "cmovnz  r10d, eax", "test    rdi, rdi", "jz      loc_F97A"], ["mov~rdi,[rsp+0]", "test~r8b,r8b", "mov~eax,0", "cmovnz~r10d,eax", "test~rdi,rdi", "jz~FOO"]], [1, 0, 338, 1, 0, 5, 0, 0, 30, 22, 0.008567336709119737, ["movzx   ecx, byte ptr [rsp+4F8h+subfmt]", "mov     rax, [rsp+4F8h+dest]", "add     rax, 1", "mov     [rax-1], cl", "mov     [rsp+4F8h+dest], rax"], ["movzx~ecx,[yte ptr [rsp+0]", "mov~rax,<TAG>", "add~rax,0", "mov~[rax-1]+0],cl", "mov~<TAG>,rax"]], [0, 1, 338, 1, 1, 12, 0, 1, 31, 23, 0.0, ["movsxd  _delta_1, ecx", "mov     esi, 20h ; ' '; c", "mov     rdi, rax; s", "mov     rdx, _delta_1; n", "mov     byte ptr [rsp+4F8h+digits], r10b", "mov     [rsp+4F8h+pad], r9d", "mov     [rsp+4F8h+padding], _delta_1", "call    _memset", "mov     rcx, [rsp+4F8h+padding]", "movzx   r10d, byte ptr [rsp+4F8h+digits]", "add     [rsp+4F8h+dest], rcx", "mov     r9d, [rsp+4F8h+pad]"], ["movsxd~_delta_1,ecx", "mov~esi,<STR>", "mov~rdi,rax", "mov~rdx,_delta_1", "mov~[yte ptr [rsp+0],r10b", "mov~[rsp+0],r9d", "mov~[rsp+0],_delta_1", "call~FOO", "mov~rcx,[rsp+0]", "movzx~r10d,[yte ptr [rsp+0]", "add~<TAG>,rcx", "mov~r9d,[rsp+0]"]], [0, 0, 338, 0, 1, 2, 0, 2, 27, 20, 0.0014278894515199563, ["call    memcpy_uppcase", "jmp     loc_E7F4"], ["call~FOO", "jmp~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 26, 21, 0.00569450837979302, ["test    r10b, r10b", "jnz     loc_E907"], ["test~r10b,r10b", "jnz~FOO"]], [0, 0, 338, 0, 0, 2, 0, 1, 21, 20, 0.016231053825038786, ["mov     r14, f", "jmp     do_z_conversion"], ["mov~r14,f", "jmp~FOO"]], [0, 0, 338, 0, 0, 1, 1, 0, 18, 20, 0.04484567427639395, ["xor     r9d, r9d; jumptable 000000000000E5C4 case 122"], ["xor~r9d,r9d"]], [1, 0, 338, 3, 0, 8, 0, 1, 29, 21, 0.01702385214737524, ["mov     rax, [rsp+4F8h+maxsize]", "lea     rcx, [r13+17h]", "add     i, r12", "mov     r11d, 5Fh ; '_'", "mov     r12, r14", "sub     rcx, rbx", "sub     rax, i", "jmp     loc_F068"], ["mov~rax,[rsp+0]", "lea~rcx,[r13+0]", "add~i,r12", "mov~r11d,0", "mov~r12,r14", "sub~rcx,rbx", "sub~rax,i", "jmp~FOO"]], [0, 0, 338, 1, 1, 9, 0, 1, 19, 21, 0.0181491142823044, ["mov     byte ptr [rsp+4F8h+pad], r10b", "mov     byte ptr [rsp+4F8h+padding], r8b", "mov     dword ptr [rsp+4F8h+subfmt], r11d", "call    _strlen", "movzx   r8d, byte ptr [rsp+4F8h+padding]", "movzx   r10d, byte ptr [rsp+4F8h+pad]", "movsxd  modifier, eax", "mov     r11d, dword ptr [rsp+4F8h+subfmt]", "sub     ebp, eax"], ["mov~[yte ptr [rsp+0],r10b", "mov~[yte ptr [rsp+0],r8b", "mov~[word ptr [rsp+0],r11d", "call~FOO", "movzx~r8d,[yte ptr [rsp+0]", "movzx~r10d,[yte ptr [rsp+0]", "movsxd~modifier,eax", "mov~r11d,[word ptr [rsp+0]", "sub~ebp,eax"]], [1, 0, 338, 0, 1, 7, 0, 2, 27, 22, 0.0014278894515199563, ["mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _memset", "mov     [rsp+4F8h+dest], rbx", "movzx   r8d, byte ptr [rsp+4F8h+subfmt]", "movzx   r10d, byte ptr [rsp+4F8h+padding]", "jmp     loc_E7CF"], ["mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~<TAG>,rbx", "movzx~r8d,[yte ptr [rsp+0]", "movzx~r10d,[yte ptr [rsp+0]", "jmp~FOO"]], [1, 0, 338, 0, 0, 5, 0, 1, 26, 23, 0.00569450837979302, ["mov     r11d, [rsp+4F8h+pad]", "movsxd  _delta, edx; n", "lea     rbx, [rax+_delta]", "cmp     r11d, 30h ; '0'", "jz      loc_E911"], ["mov~r11d,[rsp+0]", "movsxd~_delta,edx", "lea~rbx,<TAG>", "cmp~r11d,0", "jz~FOO"]], [2, 0, 338, 0, 0, 4, 0, 1, 20, 24, 0.003614478372802755, ["mov     esi, [rsp+4F8h+number_value]", "mov     ebp, 9", "mov     r9d, 9", "jmp     do_number"], ["mov~esi,[rsp+0]", "mov~ebp,0", "mov~r9d,0", "jmp~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 19, 25, 0.01780812575656829, ["cmp     ebp, 0FFFFFFFFh", "jz      loc_F924"], ["cmp~ebp,0", "jz~FOO"]], [0, 0, 338, 0, 0, 4, 2, 1, 18, 21, 0.01605061406350348, ["test    r8b, r8b; jumptable 000000000000E5C4 cases 98,104", "cmovz   r8d, r10d", "test    ebx, ebx", "jnz     loc_F93B"], ["test~r8b,r8b", "cmovz~r8d,r10d", "test~ebx,ebx", "jnz~FOO"]], [0, 0, 338, 0, 0, 2, 0, 0, 19, 21, 0.0027449576321756774, ["lea     rax, aYMD_0; \"%Y-%m-%d\"", "mov     [rsp+4F8h+subfmt], rax"], ["lea~rax,<TAG>", "mov~[rsp+0],rax"]], [1, 0, 338, 2, 0, 9, 1, 0, 20, 20, 0.03918810632022232, ["test    ebp, ebp", "mov     r12d, 0", "mov     rax, [rsp+4F8h+maxsize]", "cmovns  r12d, ebp", "add     r12d, ebx", "movsxd  r12, r12d", "sub     rax, i", "cmp     r12, rax", "jnb     loc_E4E5"], ["test~ebp,ebp", "mov~r12d,0", "mov~rax,[rsp+0]", "cmovns~r12d,ebp", "add~r12d,ebx", "movsxd~r12,r12d", "sub~rax,i", "cmp~r12,rax", "jnb~FOO"]], [0, 0, 338, 0, 0, 4, 1, 1, 19, 21, 0.0181491142823044, ["lea     rax, aReportBugsToS+16h; \"\"", "xor     ebx, ebx", "mov     [rsp+4F8h+zone], rax", "jmp     loc_F12B"], ["lea~rax,<TAG>", "xor~ebx,ebx", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 338, 1, 0, 4, 1, 1, 18, 21, 0.03556936559084787, ["mov     rdx, [rsp+4F8h+maxsize]; jumptable 000000000000E5C4 case 37", "sub     rdx, i", "test    ebx, ebx", "jnz     loc_F943"], ["mov~rdx,[rsp+0]", "sub~rdx,i", "test~ebx,ebx", "jnz~FOO"]], [1, 0, 338, 0, 0, 1, 0, 0, 23, 24, 0.0045351473922902496, ["shr     r8d, 1Fh"], ["shr~r8d,0"]], [1, 0, 338, 0, 0, 2, 0, 1, 22, 25, 0.020800300069902647, ["cmp     colons, 2", "jz      loc_F954"], ["cmp~colons,0", "jz~FOO"]], [0, 0, 338, 0, 0, 3, 1, 1, 21, 19, 0.03906876033621468, ["mov     rax, [rsp+4F8h+dest]", "test    rax, rax", "jz      loc_E9B2"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 22, 22, 0.025361021601623103, ["test    ebp, ebp", "jle     short loc_F198"], ["test~ebp,ebp", "jle~FOO"]], [1, 0, 338, 0, 0, 6, 0, 1, 23, 23, 0.00569450837979302, ["movsxd  rdx, ebp; n", "cmp     r11d, 30h ; '0'", "mov     byte ptr [rsp+4F8h+padding], r10b", "lea     r13, [rax+rdx]", "mov     byte ptr [rsp+4F8h+subfmt], r8b", "jz      loc_FB39"], ["movsxd~rdx,ebp", "cmp~r11d,0", "mov~[yte ptr [rsp+0],r10b", "lea~r13,<TAG>", "mov~[yte ptr [rsp+0],r8b", "jz~FOO"]], [5, 0, 338, 4, 0, 8, 0, 1, 24, 23, 0.008192249330810019, ["imul    edi, 64h", "mov     byte ptr [rsp+4F8h+subfmt], 1", "mov     r9d, 9", "imul    esi, 2710h", "add     esi, edi", "mov     edi, 14h", "add     esi, eax", "jmp     do_number_body"], ["imul~edi,,0", "mov~[yte ptr [rsp+0],0", "mov~r9d,0", "imul~esi,,0", "add~esi,edi", "mov~edi,0", "add~esi,eax", "jmp~FOO"]], [1, 0, 338, 0, 0, 3, 1, 1, 24, 24, 0.006504356128416279, ["shr     r8d, 1Fh", "test    eax, eax", "jnz     tz_hh_mm_ss"], ["shr~r8d,0", "test~eax,eax", "jnz~FOO"]], [0, 1, 338, 0, 1, 6, 0, 1, 24, 22, 0.0014278894515199563, ["mov     rdi, [rsp+4F8h+dest]; s", "mov     esi, 20h ; ' '; c", "call    _memset", "movzx   r10d, byte ptr [rsp+4F8h+padding]", "movzx   r8d, byte ptr [rsp+4F8h+subfmt]", "mov     [rsp+4F8h+dest], r13"], ["mov~rdi,<TAG>", "mov~esi,<STR>", "call~FOO", "movzx~r10d,[yte ptr [rsp+0]", "movzx~r8d,[yte ptr [rsp+0]", "mov~<TAG>,r13"]], [3, 0, 338, 1, 0, 4, 1, 1, 20, 26, 0.01858387465261794, ["sub     esi, 1", "mov     eax, 16Dh", "test    sil, 3", "jnz     short loc_F9DE"], ["sub~esi,0", "mov~eax,0", "test~sil,0", "jnz~FOO"]], [5, 1, 338, 6, 0, 28, 2, 1, 19, 27, 0.04282815883245528, ["mov     rdx, [rsp+4F8h+tp]", "mov     edi, [rdx+14h]", "mov     r9d, [rdx+1Ch]", "mov     eax, edi", "mov     r8d, r9d", "sar     eax, 1Fh", "and     eax, 190h", "lea     esi, [rdi+rax-64h]", "mov     eax, [rdx+18h]", "mov     edx, 92492493h", "sub     r8d, eax", "mov     dword ptr [rsp+4F8h+subfmt], eax", "add     r8d, 17Eh", "mov     eax, r8d", "imul    edx", "lea     eax, [rdx+r8]", "mov     edx, r8d", "sar     edx, 1Fh", "sar     eax, 2", "sub     eax, edx", "lea     edx, ds:0[rax*8]", "sub     edx, eax", "mov     eax, edx", "mov     edx, r9d", "sub     edx, r8d", "lea     r8d, [rdx+rax+3]", "test    r8d, r8d", "js      loc_F98D"], ["mov~rdx,[rsp+0]", "mov~edi,[rdx+0]", "mov~r9d,[rdx+0]", "mov~eax,edi", "mov~r8d,r9d", "sar~eax,0", "and~eax,<STR>", "lea~esi,[rdi+0]", "mov~eax,[rdx+0]", "mov~edx,0", "sub~r8d,eax", "mov~[word ptr [rsp+0],eax", "add~r8d,0", "mov~eax,r8d", "imul~,edx", "lea~eax,<TAG>", "mov~edx,r8d", "sar~edx,0", "sar~eax,0", "sub~eax,edx", "lea~edx,<TAG>", "sub~edx,eax", "mov~eax,edx", "mov~edx,r9d", "sub~edx,r8d", "lea~r8d,[rdx+0]", "test~r8d,r8d", "js~FOO"]], [3, 0, 338, 4, 1, 24, 1, 1, 19, 20, 0.03358736978500673, ["mov     dword ptr [rsp+4F8h+padding], r11d", "sub     rsp, 8", "movzx   ebx, r10b", "mov     eax, [rsp+500h+number_value]", "xor     esi, esi; s", "mov     rdx, 0FFFFFFFFFFFFFFFFh; maxsize", "mov     edi, ebx; upcase", "push    rax; ns", "mov     r9d, [rsp+508h+ut]; ut", "mov     r8, [rsp+508h+tp]; tp", "mov     rcx, [rsp+508h+subfmt]; format", "call    strftime_case_", "pop     r12", "mov     r13, rax", "mov     r12d, 0", "pop     len", "sub     ebp, r13d", "mov     r10, [rsp+4F8h+maxsize]", "cmovns  r12d, ebp", "add     r12d, r13d", "movsxd  r12, r12d", "sub     r10, i", "cmp     r12, r10", "jnb     loc_E4E5"], ["mov~[word ptr [rsp+0],r11d", "sub~rsp,0", "movzx~ebx,r10b", "mov~eax,[rsp+0]", "xor~esi,esi", "mov~rdx,0", "mov~edi,ebx", "push~rax", "mov~r9d,[rsp+0]", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "call~FOO", "pop~r12", "mov~r13,rax", "mov~r12d,0", "pop~len", "sub~ebp,r13d", "mov~r10,[rsp+0]", "cmovns~r12d,ebp", "add~r12d,r13d", "movsxd~r12,r12d", "sub~r10,i", "cmp~r12,r10", "jnb~FOO"]], [0, 0, 338, 0, 0, 3, 0, 1, 19, 21, 0.0027449576321756774, ["lea     rax, aMDY; \"%m/%d/%y\"", "mov     [rsp+4F8h+subfmt], rax", "jmp     subformat"], ["lea~rax,<TAG>", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 338, 0, 0, 3, 0, 1, 18, 21, 0.00973096005319421, ["lea     rax, aMDHM+6; jumptable 000000000000E5C4 case 82", "mov     [rsp+4F8h+subfmt], rax", "jmp     subformat"], ["lea~rax,<TAG>", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 338, 0, 0, 3, 0, 1, 18, 21, 0.00973096005319421, ["lea     rax, aHMS; jumptable 000000000000E5C4 case 84", "mov     [rsp+4F8h+subfmt], rax", "jmp     subformat"], ["lea~rax,<TAG>", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 338, 0, 0, 5, 1, 1, 23, 21, 0.025429219306770327, ["test    r8b, r8b", "mov     rdx, rbx; len", "mov     rsi, [rsp+4F8h+zone]; src", "mov     rdi, [rsp+4F8h+dest]; dest", "jnz     loc_FAE5"], ["test~r8b,r8b", "mov~rdx,rbx", "mov~rsi,[rsp+0]", "mov~rdi,<TAG>", "jnz~FOO"]], [1, 0, 338, 0, 1, 7, 0, 2, 24, 22, 0.0014278894515199563, ["mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _memset", "mov     [rsp+4F8h+dest], r13", "movzx   r8d, byte ptr [rsp+4F8h+subfmt]", "movzx   r10d, byte ptr [rsp+4F8h+padding]", "jmp     loc_F198"], ["mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~<TAG>,r13", "movzx~r8d,[yte ptr [rsp+0]", "movzx~r10d,[yte ptr [rsp+0]", "jmp~FOO"]], [0, 0, 338, 0, 0, 3, 1, 1, 20, 19, 0.03336572724327826, ["mov     rax, [rsp+4F8h+dest]", "test    rax, rax", "jnz     loc_F69E"], ["mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 24, 21, 0.00569450837979302, ["test    r10b, r10b", "jz      loc_FADB"], ["test~r10b,r10b", "jz~FOO"]], [0, 0, 338, 0, 1, 1, 0, 1, 25, 20, 0.0014278894515199563, ["call    memcpy_uppcase"], ["call~FOO"]], [0, 0, 338, 1, 0, 3, 0, 1, 20, 18, 0.14745480481248474, ["add     i, r12", "mov     r12, r14", "jmp     loc_E550"], ["add~i,r12", "mov~r12,r14", "jmp~FOO"]], [0, 0, 338, 0, 0, 3, 1, 1, 20, 19, 0.019623889656113072, ["mov     rax, [rsp+4F8h+dest]", "test    rax, rax", "jz      loc_E9B2"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 338, 1, 0, 5, 0, 1, 22, 19, 0.011414590899016247, ["mov     rax, [rsp+4F8h+dest]", "mov     [rax], cl", "add     rax, 1", "mov     [rsp+4F8h+dest], p", "jmp     loc_E9B2"], ["mov~rax,<TAG>", "mov~<TAG>,cl", "add~rax,0", "mov~<TAG>,p", "jmp~FOO"]], [0, 0, 338, 1, 0, 2, 0, 1, 25, 19, 0.025514466438204354, ["add     [rsp+4F8h+dest], rbx", "jmp     loc_E9B2"], ["add~<TAG>,rbx", "jmp~FOO"]], [0, 0, 338, 0, 0, 3, 1, 1, 19, 19, 0.021688291022340423, ["mov     rax, [rsp+4F8h+dest]", "test    rax, rax", "jz      loc_E9B2"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [2, 0, 338, 1, 0, 5, 0, 1, 21, 19, 0.011414590899016247, ["mov     rax, [rsp+4F8h+dest]", "mov     byte ptr [rax], 9", "add     rax, 1", "mov     [rsp+4F8h+dest], p", "jmp     loc_E9B2"], ["mov~rax,<TAG>", "mov~<TAG>,0", "add~rax,0", "mov~<TAG>,p", "jmp~FOO"]], [2, 0, 338, 1, 0, 5, 0, 1, 21, 19, 0.011414590899016247, ["mov     rax, [rsp+4F8h+dest]", "mov     byte ptr [rax], 0Ah", "add     rax, 1", "mov     [rsp+4F8h+dest], p", "jmp     loc_E9B2"], ["mov~rax,<TAG>", "mov~<TAG>,0", "add~rax,0", "mov~<TAG>,p", "jmp~FOO"]], [1, 0, 338, 2, 1, 17, 0, 2, 22, 19, 0.011414590899016247, ["sub     rsp, 8", "movsxd  _n, r13d", "mov     rdx, r10; maxsize", "mov     eax, [rsp+500h+number_value]", "mov     edi, ebx; upcase", "push    rax; ns", "mov     rbp, [rsp+508h+dest]", "mov     r9d, [rsp+508h+ut]; ut", "mov     r8, [rsp+508h+tp]; tp", "mov     rcx, [rsp+508h+subfmt]; format", "mov     rsi, rbp; s", "add     rbp, _n", "call    strftime_case_", "mov     [rsp+508h+dest], rbp", "pop     r10", "pop     r11", "jmp     loc_E9B2"], ["sub~rsp,0", "movsxd~_n,r13d", "mov~rdx,r10", "mov~eax,[rsp+0]", "mov~edi,ebx", "push~rax", "mov~rbp,[rsp+0]", "mov~r9d,[rsp+0]", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rsi,rbp", "add~rbp,_n", "call~FOO", "mov~[rsp+0],rbp", "pop~r10", "pop~r11", "jmp~FOO"]], [0, 0, 338, 0, 1, 2, 0, 2, 25, 20, 0.0014278894515199563, ["call    _memcpy", "jmp     loc_F1BB"], ["call~FOO", "jmp~FOO"]], [0, 0, 338, 0, 1, 2, 0, 2, 24, 20, 0.0168959814502242, ["call    memcpy_lowcase", "jmp     loc_F1BB"], ["call~FOO", "jmp~FOO"]], [2, 1, 338, 3, 0, 8, 0, 0, 22, 26, 0.0, ["mov     eax, r8d", "sar     eax, 7", "sub     eax, r13d", "imul    eax, 190h", "cmp     esi, eax", "setz    al", "movzx   eax, al", "add     eax, 16Dh"], ["mov~eax,r8d", "sar~eax,0", "sub~eax,r13d", "imul~eax,,<STR>", "cmp~esi,eax", "setz~al", "movzx~eax,al", "add~eax,0"]], [5, 0, 338, 3, 0, 12, 0, 1, 21, 26, 0.00284725418989651, ["mov     r8d, 51EB851Fh", "mov     eax, esi", "mov     r13d, esi", "imul    r8d", "sar     r13d, 1Fh", "mov     eax, 16Eh", "mov     r8d, edx", "sar     edx, 5", "sub     edx, r13d", "imul    edx, 64h", "cmp     esi, edx", "jnz     short loc_F9DE"], ["mov~r8d,0", "mov~eax,esi", "mov~r13d,esi", "imul~,r8d", "sar~r13d,0", "mov~eax,0", "mov~r8d,edx", "sar~edx,0", "sub~edx,r13d", "imul~edx,,0", "cmp~esi,edx", "jnz~FOO"]], [1, 0, 338, 0, 1, 5, 0, 2, 22, 20, 0.0014278894515199563, ["mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _memset", "mov     [rsp+4F8h+dest], rbx", "jmp     loc_F440"], ["mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~<TAG>,rbx", "jmp~FOO"]], [0, 1, 338, 0, 1, 4, 0, 1, 22, 20, 0.0014278894515199563, ["mov     rdi, [rsp+4F8h+dest]; s", "mov     esi, 20h ; ' '; c", "call    _memset", "mov     [rsp+4F8h+dest], rbx"], ["mov~rdi,<TAG>", "mov~esi,<STR>", "call~FOO", "mov~<TAG>,rbx"]], [0, 0, 338, 0, 0, 3, 0, 1, 19, 25, 0.003614478372802755, ["mov     rax, [rsp+4F8h+tp]", "mov     esi, [rax+0Ch]", "jmp     do_number_spacepad"], ["mov~rax,[rsp+0]", "mov~esi,[rax+0]", "jmp~FOO"]], [3, 0, 338, 3, 0, 9, 0, 0, 18, 20, 0.022165674958370973, ["sub     ebp, 1; jumptable 000000000000E5C4 case 116", "mov     r12d, 0", "mov     rax, [rsp+4F8h+maxsize]", "cmovns  r12d, ebp", "add     r12d, 1", "movsxd  r12, r12d", "sub     rax, i", "cmp     r12, rax", "jnb     loc_E4E5"], ["sub~ebp,0", "mov~r12d,0", "mov~rax,[rsp+0]", "cmovns~r12d,ebp", "add~r12d,0", "movsxd~r12,r12d", "sub~rax,i", "cmp~r12,rax", "jnb~FOO"]], [5, 0, 338, 7, 0, 18, 0, 1, 21, 25, 0.018635022931478354, ["add     r9d, eax", "mov     edx, 92492493h", "mov     r13d, 0FFFFFFFFh", "mov     esi, r9d", "sub     esi, dword ptr [rsp+4F8h+subfmt]", "add     esi, 17Eh", "mov     eax, esi", "sub     r9d, esi", "imul    edx", "lea     eax, [rdx+rsi]", "mov     edx, esi", "sar     edx, 1Fh", "sar     eax, 2", "sub     eax, edx", "lea     edx, ds:0[rax*8]", "sub     edx, eax", "lea     esi, [r9+rdx+3]", "jmp     loc_EAC4"], ["add~r9d,eax", "mov~edx,0", "mov~r13d,0", "mov~esi,r9d", "sub~esi,[word ptr [rsp+0]", "add~esi,0", "mov~eax,esi", "sub~r9d,esi", "imul~,edx", "lea~eax,<TAG>", "mov~edx,esi", "sar~edx,0", "sar~eax,0", "sub~eax,edx", "lea~edx,<TAG>", "sub~edx,eax", "lea~esi,[r9+0]", "jmp~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 20, 20, 0.011346393193869026, ["test    ebp, ebp", "jle     short loc_F24F"], ["test~ebp,ebp", "jle~FOO"]], [2, 0, 338, 0, 0, 3, 1, 1, 20, 26, 0.02140555470308424, ["test    sil, 3", "mov     eax, 16Dh", "jnz     short loc_EA7D"], ["test~sil,0", "mov~eax,0", "jnz~FOO"]], [1, 0, 338, 0, 0, 4, 0, 1, 21, 21, 0.00569450837979302, ["movsxd  rdx, ebp; n", "cmp     r11d, 30h ; '0'", "lea     modifier, [rax+rdx]", "jz      loc_FB5B"], ["movsxd~rdx,ebp", "cmp~r11d,0", "lea~modifier,<TAG>", "jz~FOO"]], [3, 0, 338, 1, 0, 9, 1, 1, 23, 23, 0.031524389204303276, ["mov     eax, 0FFFFF894h", "lea     esi, [rdi+year_adjust+76Ch]", "mov     byte ptr [rsp+4F8h+subfmt], 0", "sub     eax, r13d", "mov     r9d, 4", "cmp     edi, eax", "setl    r8b", "xor     edi, edi", "jmp     do_number_body"], ["mov~eax,0", "lea~esi,[rdi+0]", "mov~[yte ptr [rsp+0],0", "sub~eax,r13d", "mov~r9d,0", "cmp~edi,eax", "setl~r8b", "xor~edi,edi", "jmp~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 22, 24, 0.04299865309532334, ["cmp     cl, 47h ; 'G'", "jz      loc_FA20"], ["cmp~cl,0", "jz~FOO"]], [0, 1, 338, 0, 1, 4, 0, 1, 22, 20, 0.0014278894515199563, ["mov     rdi, [rsp+4F8h+dest]; s", "mov     esi, 20h ; ' '; c", "call    _memset", "mov     [rsp+4F8h+dest], rbx"], ["mov~rdi,<TAG>", "mov~esi,<STR>", "call~FOO", "mov~<TAG>,rbx"]], [1, 0, 338, 0, 0, 2, 0, 1, 23, 25, 0.015165464682113446, ["cmp     r11d, 5Fh ; '_'", "jz      loc_F72A"], ["cmp~r11d,0", "jz~FOO"]], [0, 0, 338, 0, 0, 3, 0, 0, 24, 24, 0.011968697253337424, ["movsxd  rdx, r9d", "cmp     rdx, rax", "jnb     loc_E4E5"], ["movsxd~rdx,r9d", "cmp~rdx,rax", "jnb~FOO"]], [5, 0, 338, 3, 0, 13, 0, 1, 21, 26, 0.00284725418989651, ["mov     r13d, 51EB851Fh", "mov     eax, esi", "imul    r13d", "mov     eax, esi", "sar     eax, 1Fh", "mov     dword ptr [rsp+4F8h+padding], eax", "mov     r13d, edx", "sar     edx, 5", "sub     edx, eax", "mov     eax, 16Eh", "imul    edx, 64h", "cmp     esi, edx", "jnz     short loc_EA7D"], ["mov~r13d,0", "mov~eax,esi", "imul~,r13d", "mov~eax,esi", "sar~eax,0", "mov~[word ptr [rsp+0],eax", "mov~r13d,edx", "sar~edx,0", "sub~edx,eax", "mov~eax,0", "imul~edx,,0", "cmp~esi,edx", "jnz~FOO"]], [1, 0, 338, 0, 1, 5, 0, 2, 22, 20, 0.0014278894515199563, ["mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _memset", "mov     [rsp+4F8h+dest], rbx", "jmp     loc_F24F"], ["mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~<TAG>,rbx", "jmp~FOO"]], [0, 0, 338, 0, 0, 2, 0, 1, 25, 23, 0.011900499548190203, ["movsxd  r13, r8d", "jmp     loc_F554"], ["movsxd~r13,r8d", "jmp~FOO"]], [2, 1, 338, 3, 0, 8, 0, 0, 22, 26, 0.0, ["sar     r13d, 7", "mov     eax, r13d", "sub     eax, dword ptr [rsp+4F8h+padding]", "imul    eax, 190h", "cmp     esi, eax", "setz    al", "movzx   eax, al", "add     eax, 16Dh"], ["sar~r13d,0", "mov~eax,r13d", "sub~eax,[word ptr [rsp+0]", "imul~eax,,<STR>", "cmp~esi,eax", "setz~al", "movzx~eax,al", "add~eax,0"]], [1, 0, 338, 0, 0, 5, 2, 1, 20, 20, 0.004778101716877227, ["mov     eax, 2520h", "xor     r8d, r8d", "xor     r9d, r9d", "mov     word ptr [rsp+4F8h+ufmt], ax", "jmp     loc_EB64"], ["mov~eax,0", "xor~r8d,r8d", "xor~r9d,r9d", "mov~[ord ptr [rsp+0],ax", "jmp~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 19, 21, 0.01029785347723049, ["cmp     ebx, 45h ; 'E'", "jz      loc_FA66"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 338, 0, 1, 6, 0, 2, 23, 20, 0.0014278894515199563, ["mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _memset", "mov     [rsp+4F8h+dest], rbp", "mov     r10, [rsp+4F8h+padding]", "jmp     loc_F6D4"], ["mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~<TAG>,rbp", "mov~r10,[rsp+0]", "jmp~FOO"]], [1, 0, 338, 0, 0, 6, 0, 1, 22, 21, 0.00569450837979302, ["mov     r11d, dword ptr [rsp+4F8h+padding]", "movsxd  rdx, ebp; n", "mov     [rsp+4F8h+padding], r10", "lea     _delta, [rax+rdx]", "cmp     r11d, 30h ; '0'", "jz      loc_FA7E"], ["mov~r11d,[word ptr [rsp+0]", "movsxd~rdx,ebp", "mov~[rsp+0],r10", "lea~_delta,<TAG>", "cmp~r11d,0", "jz~FOO"]], [5, 0, 338, 5, 0, 18, 0, 1, 18, 24, 0.012039736529532469, ["mov     rax, [rsp+4F8h+tp]; jumptable 000000000000E5C4 case 117", "mov     edx, 92492493h", "mov     r9d, 1", "mov     eax, [rax+18h]", "lea     esi, [rax+6]", "mov     dword ptr [rsp+4F8h+subfmt], eax", "mov     eax, esi", "imul    edx", "lea     eax, [rdx+rsi]", "mov     edx, esi", "sar     edx, 1Fh", "sar     eax, 2", "sub     eax, edx", "lea     edx, ds:0[rax*8]", "sub     edx, eax", "sub     esi, edx", "add     esi, 1", "jmp     do_number"], ["mov~rax,[rsp+0]", "mov~edx,0", "mov~r9d,0", "mov~eax,[rax+0]", "lea~esi,[rax+0]", "mov~[word ptr [rsp+0],eax", "mov~eax,esi", "imul~,edx", "lea~eax,<TAG>", "mov~edx,esi", "sar~edx,0", "sar~eax,0", "sub~eax,edx", "lea~edx,<TAG>", "sub~edx,eax", "sub~esi,edx", "add~esi,0", "jmp~FOO"]], [5, 0, 338, 3, 0, 11, 0, 1, 24, 24, 0.0014747753738086713, ["mov     eax, esi", "mov     edx, 92492493h", "mov     r9d, 2", "imul    edx", "lea     eax, [rdx+days]", "sar     esi, 1Fh", "sar     eax, 2", "sub     eax, esi", "mov     esi, eax", "add     esi, 1", "jmp     do_number"], ["mov~eax,esi", "mov~edx,0", "mov~r9d,0", "imul~,edx", "lea~eax,<TAG>", "sar~esi,0", "sar~eax,0", "sub~eax,esi", "mov~esi,eax", "add~esi,0", "jmp~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 23, 25, 0.00863553441426696, ["cmp     cl, 67h ; 'g'", "jnz     loc_FA99"], ["cmp~cl,0", "jnz~FOO"]], [5, 0, 338, 7, 0, 19, 1, 0, 21, 25, 0.021456702981944655, ["sub     r9d, eax", "mov     edx, 92492493h", "mov     r13d, 1", "mov     esi, r9d", "sub     esi, dword ptr [rsp+4F8h+subfmt]", "add     esi, 17Eh", "mov     eax, esi", "sub     r9d, esi", "imul    edx", "lea     eax, [rdx+rsi]", "mov     edx, esi", "sar     edx, 1Fh", "sar     eax, 2", "sub     eax, edx", "lea     edx, ds:0[rax*8]", "sub     edx, eax", "lea     esi, [r9+rdx+3]", "test    esi, esi", "jns     short loc_EAC4"], ["sub~r9d,eax", "mov~edx,0", "mov~r13d,0", "mov~esi,r9d", "sub~esi,[word ptr [rsp+0]", "add~esi,0", "mov~eax,esi", "sub~r9d,esi", "imul~,edx", "lea~eax,<TAG>", "mov~edx,esi", "sar~edx,0", "sar~eax,0", "sub~eax,edx", "lea~edx,<TAG>", "sub~edx,eax", "lea~esi,[r9+0]", "test~esi,esi", "jns~FOO"]], [1, 0, 338, 0, 0, 1, 0, 0, 21, 24, 0.007629618263345438, ["shr     r8d, 1Fh"], ["shr~r8d,0"]], [10, 0, 338, 10, 0, 31, 0, 1, 20, 25, 0.04154092714780148, ["mov     r8, [rax+28h]", "mov     edx, 91A2B3C5h", "mov     edi, 88888889h", "mov     eax, r8d", "mov     r13d, r8d", "imul    edx", "mov     eax, r8d", "sar     r13d, 1Fh", "lea     esi, [rdx+diff]", "imul    edi", "sar     esi, 0Bh", "sub     esi, r13d", "lea     ecx, [rdx+diff]", "sar     ecx, 5", "sub     ecx, r13d", "mov     eax, ecx", "imul    edi", "mov     eax, ecx", "sar     eax, 1Fh", "lea     edi, [rdx+rcx]", "sar     edi, 5", "sub     edi, eax", "mov     eax, ecx", "imul    edi, 3Ch", "imul    ecx, 3Ch", "sub     eax, edi", "mov     edi, eax", "mov     eax, r8d", "sub     eax, ecx", "cmp     colons, 1", "jz      loc_FABD"], ["mov~r8,[rax+0]", "mov~edx,0", "mov~edi,0", "mov~eax,r8d", "mov~r13d,r8d", "imul~,edx", "mov~eax,r8d", "sar~r13d,0", "lea~esi,<TAG>", "imul~,edi", "sar~esi,0", "sub~esi,r13d", "lea~ecx,<TAG>", "sar~ecx,0", "sub~ecx,r13d", "mov~eax,ecx", "imul~,edi", "mov~eax,ecx", "sar~eax,0", "lea~edi,<TAG>", "sar~edi,0", "sub~edi,eax", "mov~eax,ecx", "imul~edi,,0", "imul~ecx,,0", "sub~eax,edi", "mov~edi,eax", "mov~eax,r8d", "sub~eax,ecx", "cmp~colons,0", "jz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 0, 22, 25, 0.0, ["mov     esi, r8d", "xor     r13d, r13d"], ["mov~esi,r8d", "xor~r13d,r13d"]], [4, 0, 338, 1, 0, 9, 1, 1, 19, 23, 0.011383333617490452, ["mov     rax, [rsp+4F8h+tp]", "mov     byte ptr [rsp+4F8h+subfmt], 0", "mov     r9d, 3", "mov     esi, [rax+1Ch]", "cmp     esi, 0FFFFFFFFh", "setl    r8b", "add     esi, 1", "xor     edi, edi", "jmp     do_number_body"], ["mov~rax,[rsp+0]", "mov~[yte ptr [rsp+0],0", "mov~r9d,0", "mov~esi,[rax+0]", "cmp~esi,0", "setl~r8b", "add~esi,0", "xor~edi,edi", "jmp~FOO"]], [4, 0, 338, 2, 0, 6, 0, 1, 22, 23, 0.009117180706869213, ["imul    esi, 64h", "mov     byte ptr [rsp+4F8h+subfmt], 1", "mov     r9d, 6", "add     esi, edi", "mov     edi, 4", "jmp     do_number_body"], ["imul~esi,,0", "mov~[yte ptr [rsp+0],0", "mov~r9d,0", "add~esi,edi", "mov~edi,0", "jmp~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 25, 24, 0.002881353042470121, ["test    edi, edi", "jnz     tz_hh_mm"], ["test~edi,edi", "jnz~FOO"]], [1, 0, 338, 0, 0, 4, 0, 1, 19, 24, 0.0007927983223364534, ["mov     rax, [rsp+4F8h+tp]", "mov     r9d, 2", "mov     esi, [rax+0Ch]", "jmp     do_number"], ["mov~rax,[rsp+0]", "mov~r9d,0", "mov~esi,[rax+0]", "jmp~FOO"]], [1, 0, 338, 0, 0, 1, 0, 0, 29, 25, 0.0005200075017475662, ["mov     byte ptr [rsp+4F8h+subfmt], 2Bh ; '+'"], ["mov~[yte ptr [rsp+0],0"]], [1, 0, 338, 0, 0, 2, 0, 0, 19, 23, 0.005677458953506214, ["lea     rcx, [r14+2]", "mov     r9d, 1"], ["lea~rcx,[r14+0]", "mov~r9d,0"]], [0, 1, 338, 0, 0, 4, 0, 1, 18, 23, 0.016972703868514825, ["movzx   eax, byte ptr [r14+1]; jumptable 000000000000E5C4 case 58", "lea     rdx, [r14+1]", "cmp     al, 3Ah ; ':'", "jz      loc_FAEF"], ["movzx~eax,[yte ptr [r14+0]", "lea~rdx,[r14+0]", "cmp~al,<STR>", "jz~FOO"]], [2, 1, 338, 2, 0, 6, 0, 1, 20, 22, 0.008567336709119737, ["mov     rdx, rcx", "add     rcx, 1", "movzx   eax, byte ptr [rcx-1]", "add     colons, 1", "cmp     al, 3Ah ; ':'", "jnz     loc_EE47"], ["mov~rdx,rcx", "add~rcx,0", "movzx~eax,[yte ptr [rcx-1]+0]", "add~colons,0", "cmp~al,<STR>", "jnz~FOO"]], [0, 0, 338, 0, 0, 1, 0, 1, 21, 23, 0.0, ["jmp     short loc_FAF9"], ["jmp~FOO"]], [8, 0, 338, 9, 0, 24, 0, 0, 24, 24, 0.004322029563705181, ["mov     esi, 51EB851Fh", "mov     eax, edi", "mov     ecx, edi", "imul    esi", "mov     r9d, 2", "mov     eax, edx", "mov     edx, edi", "sar     edx, 1Fh", "sar     eax, 5", "sub     eax, edx", "imul    eax, 64h", "sub     ecx, eax", "add     ecx, r13d", "mov     eax, ecx", "imul    esi", "mov     eax, ecx", "sar     eax, 1Fh", "mov     esi, edx", "sar     esi, 5", "sub     esi, eax", "imul    esi, 64h", "sub     ecx, esi", "mov     esi, ecx", "jns     short do_number"], ["mov~esi,0", "mov~eax,edi", "mov~ecx,edi", "imul~,esi", "mov~r9d,0", "mov~eax,edx", "mov~edx,edi", "sar~edx,0", "sar~eax,0", "sub~eax,edx", "imul~eax,,0", "sub~ecx,eax", "add~ecx,r13d", "mov~eax,ecx", "imul~,esi", "mov~eax,ecx", "sar~eax,0", "mov~esi,edx", "sar~esi,0", "sub~esi,eax", "imul~esi,,0", "sub~ecx,esi", "mov~esi,ecx", "jns~FOO"]], [0, 0, 338, 0, 0, 3, 0, 1, 24, 23, 0.004083337595689905, ["movzx   eax, byte ptr [r14]", "mov     modifier, r14", "jmp     bad_format"], ["movzx~eax,<TAG>", "mov~modifier,r14", "jmp~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 23, 24, 0.01342642320085929, ["cmp     colons, 3", "jnz     loc_FB12"], ["cmp~colons,0", "jnz~FOO"]], [1, 0, 338, 0, 0, 4, 0, 1, 19, 24, 0.0007927983223364534, ["mov     rax, [rsp+4F8h+tp]", "mov     r9d, 1", "mov     esi, [rax+18h]", "jmp     do_number"], ["mov~rax,[rsp+0]", "mov~r9d,0", "mov~esi,[rax+0]", "jmp~FOO"]], [2, 0, 338, 2, 0, 8, 0, 0, 25, 24, 0.0, ["mov     eax, 0FFFFF894h", "mov     edx, ecx", "add     esi, 64h ; 'd'", "sub     eax, r13d", "neg     edx", "cmp     edi, eax", "cmovl   esi, edx", "nop     dword ptr [rax+rax+00000000h]"], ["mov~eax,0", "mov~edx,ecx", "add~esi,0", "sub~eax,r13d", "neg~edx", "cmp~edi,eax", "cmovl~esi,edx", "nop~[word ptr [rax+0]"]], [5, 0, 338, 4, 0, 13, 0, 1, 19, 24, 0.0007927983223364534, ["mov     rax, [rsp+4F8h+tp]", "mov     edx, 92492493h", "mov     r9d, 2", "mov     ecx, [rax+1Ch]", "sub     ecx, [rax+18h]", "add     ecx, 7", "mov     eax, ecx", "imul    edx", "lea     esi, [rdx+rcx]", "sar     ecx, 1Fh", "sar     esi, 2", "sub     esi, ecx", "jmp     do_number"], ["mov~rax,[rsp+0]", "mov~edx,0", "mov~r9d,0", "mov~ecx,[rax+0]", "sub~ecx,[rax+0]", "add~ecx,0", "mov~eax,ecx", "imul~,edx", "lea~esi,<TAG>", "sar~ecx,0", "sar~esi,0", "sub~esi,ecx", "jmp~FOO"]], [4, 0, 338, 2, 0, 7, 1, 1, 22, 23, 0.007433549861047176, ["imul    esi, 64h", "shr     r8d, 1Fh", "mov     byte ptr [rsp+4F8h+subfmt], 1", "mov     r9d, 5", "add     esi, edi", "xor     edi, edi", "jmp     do_number_body"], ["imul~esi,,0", "shr~r8d,0", "mov~[yte ptr [rsp+0],0", "mov~r9d,0", "add~esi,edi", "xor~edi,edi", "jmp~FOO"]], [0, 0, 338, 0, 0, 1, 0, 0, 21, 24, 0.03107257940770293, ["jb      loc_FB1E"], ["jb~FOO"]], [2, 0, 338, 0, 0, 5, 1, 0, 19, 23, 0.09963116407799479, ["mov     eax, esi", "xor     edi, edi", "mov     byte ptr [rsp+4F8h+subfmt], 0", "shr     eax, 1Fh", "mov     r8d, eax"], ["mov~eax,esi", "xor~edi,edi", "mov~[yte ptr [rsp+0],0", "shr~eax,0", "mov~r8d,eax"]], [1, 0, 338, 0, 0, 4, 0, 1, 19, 24, 0.0007927983223364534, ["mov     rax, [rsp+4F8h+tp]", "mov     r9d, 2", "mov     esi, [rax+8]", "jmp     short do_number"], ["mov~rax,[rsp+0]", "mov~r9d,0", "mov~esi,[rax+0]", "jmp~FOO"]], [1, 0, 338, 0, 0, 3, 0, 1, 19, 24, 0.0007927983223364534, ["mov     esi, [rsp+4F8h+hour12]", "mov     r9d, 2", "jmp     short do_number"], ["mov~esi,[rsp+0]", "mov~r9d,0", "jmp~FOO"]], [1, 0, 338, 0, 0, 4, 0, 1, 19, 24, 0.0007927983223364534, ["mov     rax, [rsp+4F8h+tp]", "mov     r9d, 2", "mov     esi, [rax+4]", "jmp     do_number"], ["mov~rax,[rsp+0]", "mov~r9d,0", "mov~esi,[rax+0]", "jmp~FOO"]], [0, 0, 338, 0, 0, 2, 0, 1, 22, 24, 0.01142311561215965, ["mov     r9d, ebp", "jmp     do_number"], ["mov~r9d,ebp", "jmp~FOO"]], [2, 0, 338, 0, 0, 3, 0, 1, 20, 24, 0.016606141203348506, ["cmp     r11d, 30h ; '0'", "mov     r9d, 2", "jz      do_number"], ["cmp~r11d,0", "mov~r9d,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 21, 24, 0.00284725418989651, ["cmp     r11d, 2Dh ; '-'", "jz      do_number"], ["cmp~r11d,0", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 22, 24, 0.0, ["mov     r11d, 5Fh ; '_'", "jmp     do_number"], ["mov~r11d,0", "jmp~FOO"]], [6, 0, 338, 6, 0, 26, 0, 1, 19, 24, 0.0007927983223364534, ["mov     rdi, [rsp+4F8h+tp]", "mov     ecx, 92492493h", "mov     r9d, 2", "mov     eax, [rdi+18h]", "lea     esi, [rax+6]", "mov     dword ptr [rsp+4F8h+subfmt], eax", "mov     eax, esi", "imul    ecx", "lea     eax, [rdx+rsi]", "mov     edx, esi", "sar     edx, 1Fh", "sar     eax, 2", "sub     eax, edx", "lea     edx, ds:0[rax*8]", "sub     edx, eax", "mov     eax, edx", "mov     edx, [rdi+1Ch]", "sub     eax, esi", "lea     edi, [rax+rdx+7]", "mov     eax, edi", "imul    ecx", "lea     esi, [rdx+rdi]", "sar     edi, 1Fh", "sar     esi, 2", "sub     esi, edi", "jmp     do_number"], ["mov~rdi,[rsp+0]", "mov~ecx,0", "mov~r9d,0", "mov~eax,[rdi+0]", "lea~esi,[rax+0]", "mov~[word ptr [rsp+0],eax", "mov~eax,esi", "imul~,ecx", "lea~eax,<TAG>", "mov~edx,esi", "sar~edx,0", "sar~eax,0", "sub~eax,edx", "lea~edx,<TAG>", "sub~edx,eax", "mov~eax,edx", "mov~edx,[rdi+0]", "sub~eax,esi", "lea~edi,[rax+0]", "mov~eax,edi", "imul~,ecx", "lea~esi,<TAG>", "sar~edi,0", "sar~esi,0", "sub~esi,edi", "jmp~FOO"]], [5, 0, 338, 4, 0, 16, 0, 0, 19, 24, 0.0035036571019385196, ["mov     rax, [rsp+4F8h+tp]", "mov     edx, 51EB851Fh", "mov     r9d, 2", "mov     ecx, [rax+14h]", "mov     eax, ecx", "imul    edx", "mov     eax, ecx", "sar     eax, 1Fh", "mov     esi, edx", "sar     esi, 5", "sub     esi, eax", "mov     eax, ecx", "imul    esi, 64h", "sub     eax, esi", "mov     esi, eax", "jns     do_number"], ["mov~rax,[rsp+0]", "mov~edx,0", "mov~r9d,0", "mov~ecx,[rax+0]", "mov~eax,ecx", "imul~,edx", "mov~eax,ecx", "sar~eax,0", "mov~esi,edx", "sar~esi,0", "sub~esi,eax", "mov~eax,ecx", "imul~esi,,0", "sub~eax,esi", "mov~esi,eax", "jns~FOO"]], [2, 0, 338, 1, 0, 5, 0, 1, 20, 24, 0.0, ["neg     eax", "add     esi, 64h ; 'd'", "cmp     ecx, 0FFFFF893h", "cmovle  esi, eax", "jmp     do_number"], ["neg~eax", "add~esi,0", "cmp~ecx,0", "cmovle~esi,eax", "jmp~FOO"]], [1, 0, 338, 0, 0, 4, 0, 1, 19, 24, 0.0007927983223364534, ["mov     rax, [rsp+4F8h+tp]", "mov     r9d, 2", "mov     esi, [rax]", "jmp     do_number"], ["mov~rax,[rsp+0]", "mov~r9d,0", "mov~esi,<TAG>", "jmp~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 20, 22, 0.20021993759909978, ["cmp     ebx, 4Fh ; 'O'", "jnz     loc_EBE4"], ["cmp~ebx,0", "jnz~FOO"]], [2, 0, 338, 0, 0, 3, 0, 1, 26, 23, 0.0014278894515199563, ["mov     byte ptr [rsp+4F8h+subfmt], 1", "mov     r9d, 3", "jmp     do_number_body"], ["mov~[yte ptr [rsp+0],0", "mov~r9d,0", "jmp~FOO"]], [4, 0, 338, 1, 0, 9, 1, 1, 19, 23, 0.011383333617490452, ["mov     rax, [rsp+4F8h+tp]", "mov     byte ptr [rsp+4F8h+subfmt], 0", "mov     r9d, 2", "mov     esi, [rax+10h]", "cmp     esi, 0FFFFFFFFh", "setl    r8b", "add     esi, 1", "xor     edi, edi", "jmp     do_number_body"], ["mov~rax,[rsp+0]", "mov~[yte ptr [rsp+0],0", "mov~r9d,0", "mov~esi,[rax+0]", "cmp~esi,0", "setl~r8b", "add~esi,0", "xor~edi,edi", "jmp~FOO"]], [0, 0, 338, 0, 0, 3, 1, 1, 21, 21, 0.12596116140691865, ["test    r8b, r8b", "mov     ecx, r12d", "jnz     loc_EC48"], ["test~r8b,r8b", "mov~ecx,r12d", "jnz~FOO"]], [1, 0, 338, 0, 0, 3, 1, 0, 20, 20, 0.13426423200859292, ["mov     esi, 2520h", "xor     r8d, r8d", "mov     word ptr [rsp+4F8h+ufmt], si"], ["mov~esi,0", "xor~r8d,r8d", "mov~[ord ptr [rsp+0],si"]], [1, 1, 343, 1, 0, 22, 1, 1, 0, 20, 0.0, ["push    r15", "push    r14", "mov     r14, format", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 4C8h", "mov     rax, [tp_0+30h]", "mov     [rsp+4F8h+dest], s", "mov     esi, [tp_0+8]", "mov     format, fs:28h", "mov     [rsp+4F8h+var_40], format", "xor     ecx, ecx", "mov     [rsp+4F8h+maxsize], maxsize_0", "mov     [rsp+4F8h+tp], tp_0", "cmp     esi, 0Ch", "mov     [rsp+4F8h+ut], r9d", "mov     [rsp+4F8h+to_uppcase], dil", "mov     [rsp+4F8h+hour12], esi", "mov     [rsp+4F8h+zone], rax", "jle     loc_E5D0"], ["push~r15", "push~r14", "mov~r14,format", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,[tp_0+0]", "mov~<TAG>,s", "mov~esi,[tp_0+0]", "mov~format,<TAG>", "mov~[rsp+0],format", "xor~ecx,ecx", "mov~[rsp+0],maxsize_0", "mov~[rsp+0],tp_0", "cmp~esi,0", "mov~[rsp+0],r9d", "mov~[rsp+0],dil", "mov~[rsp+0],esi", "mov~[rsp+0],rax", "jle~FOO"]], [1, 0, 338, 1, 0, 6, 0, 1, 21, 19, 0.14538045794759005, ["mov     rax, [rsp+4F8h+var_4D0]", "mov     [rsp+4F8h+ufmt+2], bl", "mov     r12, r14", "mov     ebx, r9d", "add     rax, 3", "jmp     loc_E70B"], ["mov~rax,[rsp+0]", "mov~[rsp+0],bl", "mov~r12,r14", "mov~ebx,r9d", "add~rax,0", "jmp~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 20, 0, 0.0005754181371796839, ["xor     r9d, r9d", "jmp     loc_EB64"], ["xor~r9d,r9d", "jmp~FOO"]], [1, 0, 341, 1, 0, 2, 0, 0, 1, 19, 0.0014534635909501646, ["sub     esi, 0Ch", "mov     [rsp+4F8h+hour12], esi"], ["sub~esi,0", "mov~[rsp+0],esi"]], [1, 0, 338, 0, 0, 4, 0, 1, 21, 21, 0.00569450837979302, ["movsxd  rdx, ebp; n", "cmp     r11d, 30h ; '0'", "lea     modifier, [rax+rdx]", "jz      loc_FB71"], ["movsxd~rdx,ebp", "cmp~r11d,0", "lea~modifier,<TAG>", "jz~FOO"]], [0, 0, 340, 0, 0, 3, 1, 1, 2, 18, 0.008695207406270779, ["movzx   eax, byte ptr [format]", "test    al, al", "jz      loc_F715"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 341, 0, 0, 6, 1, 1, 1, 19, 0.0014534635909501646, ["mov     edi, [rsp+4F8h+hour12]", "mov     eax, 0Ch", "test    edi, edi", "cmovnz  eax, edi", "mov     [rsp+4F8h+hour12], eax", "jmp     loc_E380"], ["mov~edi,[rsp+0]", "mov~eax,0", "test~edi,edi", "cmovnz~eax,edi", "mov~[rsp+0],eax", "jmp~FOO"]], [2, 0, 338, 0, 1, 13, 1, 2, 21, 18, 0.21166010263754623, ["mov     [rax], cl", "lea     r13, [rsp+4F8h+ubuf]", "mov     rcx, [rsp+4F8h+tp]; tp", "mov     rdx, [rsp+4F8h+var_4D0]; format", "mov     byte ptr [rax+1], 0", "mov     esi, 400h; maxsize", "mov     rdi, r13; s", "mov     byte ptr [rsp+4F8h+padding], r10b", "mov     byte ptr [rsp+4F8h+subfmt], r8b", "mov     [rsp+4F8h+pad], r11d", "call    _strftime", "test    len, len", "jz      loc_E550"], ["mov~<TAG>,cl", "lea~r13,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~[yte ptr [rax+0],0", "mov~esi,0", "mov~rdi,r13", "mov~[yte ptr [rsp+0],r10b", "mov~[yte ptr [rsp+0],r8b", "mov~[rsp+0],r11d", "call~FOO", "test~len,len", "jz~FOO"]], [0, 0, 338, 0, 0, 2, 0, 0, 20, 19, 0.03143345893077356, ["mov     rax, [rsp+4F8h+u]", "mov     r12, r14"], ["mov~rax,[rsp+0]", "mov~r12,r14"]], [7, 0, 338, 5, 0, 24, 2, 1, 20, 30, 0.0026810222836001567, ["mov     rax, [rsp+4F8h+tp]", "mov     edx, 51EB851Fh", "mov     r9d, 2", "mov     ecx, [rax+14h]", "mov     eax, ecx", "mov     edi, ecx", "imul    edx", "mov     eax, edx", "mov     edx, ecx", "sar     edx, 1Fh", "sar     eax, 5", "sub     eax, edx", "lea     esi, [rax+13h]", "imul    eax, 64h", "sub     edi, eax", "mov     eax, edi", "shr     eax, 1Fh", "test    esi, esi", "setnle  dl", "and     eax, edx", "cmp     ecx, 0FFFFF894h", "setl    r8b", "sub     esi, eax", "jmp     loc_EBDD"], ["mov~rax,[rsp+0]", "mov~edx,0", "mov~r9d,0", "mov~ecx,[rax+0]", "mov~eax,ecx", "mov~edi,ecx", "imul~,edx", "mov~eax,edx", "mov~edx,ecx", "sar~edx,0", "sar~eax,0", "sub~eax,edx", "lea~esi,[rax+0]", "imul~eax,,0", "sub~edi,eax", "mov~eax,edi", "shr~eax,0", "test~esi,esi", "setnle~dl", "and~eax,edx", "cmp~ecx,0", "setl~r8b", "sub~esi,eax", "jmp~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 4, 16, 0.758563074352548, ["cmp     al, 3Fh ; '?'", "jg      short loc_E430"], ["cmp~al,0", "jg~FOO"]], [0, 0, 338, 0, 0, 4, 1, 1, 9, 17, 0.7560354969055291, ["movzx   eax, byte ptr [f+1]", "lea     r14, [f+1]", "test    al, al", "jnz     loc_E3B2"], ["movzx~eax,[yte ptr [f+0]", "lea~r14,[f+0]", "test~al,al", "jnz~FOO"]], [1, 0, 338, 0, 0, 6, 1, 0, 3, 17, 0.011320819054438817, ["lea     rdi, [rsp+4F8h+ufmt]", "lea     rsi, [rsp+4F8h+ufmt+2]", "mov     [rsp+4F8h+format_end], 0", "xor     r15d, r15d", "mov     [rsp+4F8h+var_4D0], rdi", "mov     [rsp+4F8h+u], rsi"], ["lea~rdi,[rsp+0]", "lea~rsi,[rsp+0]", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],rdi", "mov~[rsp+0],rsi"]], [1, 0, 338, 0, 0, 2, 0, 1, 5, 15, 0.7012002796105911, ["cmp     al, 26h ; '&'", "jge     loc_E528"], ["cmp~al,0", "jge~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 6, 14, 0.6890184645286686, ["cmp     al, 23h ; '#'", "jle     loc_E518"], ["cmp~al,0", "jle~FOO"]], [1, 0, 338, 0, 1, 6, 0, 2, 23, 20, 0.0014278894515199563, ["mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _memset", "movzx   ecx, byte ptr [r14]", "mov     [rsp+4F8h+dest], rbx", "jmp     loc_EEB8"], ["mov~esi,0", "mov~rdi,rax", "call~FOO", "movzx~ecx,<TAG>", "mov~<TAG>,rbx", "jmp~FOO"]], [1, 0, 338, 0, 0, 4, 0, 1, 22, 21, 0.00569450837979302, ["movsxd  rdx, ebp; n", "cmp     r11d, 30h ; '0'", "lea     rbx, [rax+rdx]", "jz      loc_FBB2"], ["movsxd~rdx,ebp", "cmp~r11d,0", "lea~rbx,<TAG>", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 7, 13, 0.6831875607385811, ["cmp     al, 25h ; '%'", "jnz     short loc_E448"], ["cmp~al,0", "jnz~FOO"]], [0, 0, 338, 0, 0, 3, 2, 0, 8, 12, 0.6825737813922561, ["movzx   r10d, [rsp+4F8h+to_uppcase]", "xor     r8d, r8d", "xor     r11d, r11d"], ["movzx~r10d,[rsp+0]", "xor~r8d,r8d", "xor~r11d,r11d"]], [3, 0, 338, 1, 0, 6, 0, 0, 20, 30, 0.0026810222836001567, ["mov     rax, [rsp+4F8h+tp]", "mov     r9d, 4", "mov     esi, [rax+14h]", "cmp     esi, 0FFFFF894h", "setl    r8b", "add     esi, 76Ch"], ["mov~rax,[rsp+0]", "mov~r9d,0", "mov~esi,[rax+0]", "cmp~esi,0", "setl~r8b", "add~esi,0"]], [1, 0, 338, 0, 0, 2, 0, 1, 23, 25, 0.0603805431947215, ["cmp     r11d, 5Fh ; '_'", "jz      loc_F72F"], ["cmp~r11d,0", "jz~FOO"]], [0, 0, 338, 3, 0, 8, 1, 1, 22, 24, 0.09092459038753345, ["lea     rcx, [r13+17h]", "lea     r8d, [digits_0-1]", "mov     rax, [rsp+4F8h+maxsize]", "sub     rcx, rbx", "sub     r8d, ecx", "sub     rax, i", "test    r8d, r8d", "jle     loc_F7B1"], ["lea~rcx,[r13+0]", "lea~r8d,[digits_0-1]+0]", "mov~rax,[rsp+0]", "sub~rcx,rbx", "sub~r8d,ecx", "sub~rax,i", "test~r8d,r8d", "jle~FOO"]], [0, 0, 338, 0, 0, 2, 0, 1, 19, 25, 0.003614478372802755, ["mov     esi, [rsp+4F8h+hour12]", "jmp     do_number_spacepad"], ["mov~esi,[rsp+0]", "jmp~FOO"]], [2, 0, 338, 1, 0, 6, 0, 1, 9, 11, 0.6914224336351081, ["add     r14, 1", "movsx   ebx, byte ptr [f]", "cmp     bl, 30h ; '0'", "mov     ecx, ebx", "mov     r12d, ebx", "jz      short loc_E421"], ["add~r14,0", "movsx~ebx,<TAG>", "cmp~bl,0", "mov~ecx,ebx", "mov~r12d,ebx", "jz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 12, 12, 4.6885922288714986e-05, ["mov     r8d, 1", "jmp     short loc_E3D6"], ["mov~r8d,0", "jmp~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 12, 12, 4.6885922288714986e-05, ["mov     r10d, 1", "jmp     short loc_E3D6"], ["mov~r10d,0", "jmp~FOO"]], [0, 0, 338, 0, 0, 2, 0, 1, 10, 12, 0.00011934598400763814, ["mov     r11d, ebx", "jmp     short loc_E3D6"], ["mov~r11d,ebx", "jmp~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 21, 28, 0.08254479736756858, ["test    r8b, r8b", "jnz     short loc_EC48"], ["test~r8b,r8b", "jnz~FOO"]], [1, 0, 338, 0, 0, 2, 1, 0, 21, 29, 0.008251922322813837, ["xor     edi, edi", "mov     byte ptr [rsp+4F8h+subfmt], 0"], ["xor~edi,edi", "mov~[yte ptr [rsp+0],0"]], [0, 0, 338, 0, 0, 1, 0, 1, 10, 10, 0.6886263277240721, ["jg      short loc_E400"], ["jg~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 11, 9, 0.34289379912365947, ["cmp     bl, 23h ; '#'", "jnz     short loc_E418"], ["cmp~bl,0", "jnz~FOO"]], [1, 0, 338, 0, 1, 9, 0, 2, 30, 24, 0.0014278894515199563, ["mov     esi, 30h ; '0'; c", "mov     rdi, rax; s", "call    _memset", "mov     [rsp+4F8h+dest], rbp", "mov     rcx, [rsp+4F8h+padding]", "mov     r11d, [rsp+4F8h+pad]", "mov     r9d, [rsp+4F8h+digits]", "movzx   r10d, [rsp+4F8h+var_499]", "jmp     loc_F53C"], ["mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~<TAG>,rbp", "mov~rcx,[rsp+0]", "mov~r11d,[rsp+0]", "mov~r9d,[rsp+0]", "movzx~r10d,[rsp+0]", "jmp~FOO"]], [1, 0, 338, 0, 0, 8, 0, 1, 29, 25, 0.00569450837979302, ["movsxd  rdx, ebp; n", "cmp     r11d, 30h ; '0'", "mov     [rsp+4F8h+var_499], r10b", "lea     _delta, [rax+rdx]", "mov     [rsp+4F8h+digits], r9d", "mov     [rsp+4F8h+pad], r11d", "mov     [rsp+4F8h+padding], rcx", "jz      loc_FBCC"], ["movsxd~rdx,ebp", "cmp~r11d,0", "mov~[rsp+0],r10b", "lea~_delta,<TAG>", "mov~[rsp+0],r9d", "mov~[rsp+0],r11d", "mov~[rsp+0],rcx", "jz~FOO"]], [1, 0, 338, 0, 0, 4, 0, 1, 22, 27, 0.08459072852198524, ["lea     r13, [rsp+4F8h+ubuf]", "mov     r12d, 0CCCCCCCDh", "lea     modifier, [r13+17h]", "jmp     short loc_EC2C"], ["lea~r13,[rsp+0]", "mov~r12d,0", "lea~modifier,[r13+0]", "jmp~FOO"]], [0, 0, 338, 0, 0, 2, 0, 1, 22, 28, 0.0006137793463249961, ["neg     esi", "jmp     short loc_EBE9"], ["neg~esi", "jmp~FOO"]], [0, 0, 338, 0, 0, 2, 0, 1, 21, 25, 0.005668934240362812, ["mov     esi, [rsp+4F8h+number_value]", "jmp     loc_ECA7"], ["mov~esi,[rsp+0]", "jmp~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 20, 26, 0.011354917907012428, ["cmp     ebp, 8", "jg      loc_FBF7"], ["cmp~ebp,0", "jg~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 11, 9, 0.34289379912365947, ["cmp     bl, 5Eh ; '^'", "jnz     loc_E588"], ["cmp~bl,0", "jnz~FOO"]], [1, 1, 338, 1, 0, 2, 0, 0, 24, 25, 0.04091436073176138, ["mov     byte ptr [rbx-1], 3Ah ; ':'", "sub     rbx, 2"], ["mov~[yte ptr [rbx-1]+0],<STR>", "sub~rbx,0"]], [1, 0, 338, 0, 0, 3, 1, 1, 23, 26, 0.08466745094027586, ["test    dil, 1", "lea     rcx, [bufp-1]", "jnz     short loc_EC00"], ["test~dil,0", "lea~rcx,[bufp-1]+0]", "jnz~FOO"]], [3, 0, 338, 3, 0, 9, 0, 0, 18, 20, 0.022165674958370973, ["sub     ebp, 1; jumptable 000000000000E5C4 case 110", "mov     r12d, 0", "mov     rax, [rsp+4F8h+maxsize]", "cmovns  r12d, ebp", "add     r12d, 1", "movsxd  r12, r12d", "sub     rax, i", "cmp     r12, rax", "jnb     loc_E4E5"], ["sub~ebp,0", "mov~r12d,0", "mov~rax,[rsp+0]", "cmovns~r12d,ebp", "add~r12d,0", "movsxd~r12,r12d", "sub~rax,i", "cmp~r12,rax", "jnb~FOO"]], [1, 0, 338, 0, 0, 4, 1, 1, 19, 1, 0.0348476065447064, ["mov     r9d, 2520h", "test    ebx, ebx", "mov     word ptr [rsp+4F8h+ufmt], r9w", "jnz     loc_FC08"], ["mov~r9d,0", "test~ebx,ebx", "mov~[ord ptr [rsp+0],r9w", "jnz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 12, 8, 0.34000818372461766, ["cmp     bl, 2Dh ; '-'", "jnz     loc_E591"], ["cmp~bl,0", "jnz~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 12, 8, 0.34000818372461766, ["cmp     bl, 5Fh ; '_'", "jz      loc_E421"], ["cmp~bl,0", "jz~FOO"]], [3, 0, 338, 4, 0, 13, 1, 1, 25, 24, 0.08471859921913627, ["mov     eax, esi", "sar     edi, 1", "mul     r12d", "shr     edx, 3", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     esi, eax", "mov     eax, edi", "add     esi, 30h ; '0'", "or      eax, edx", "mov     [rcx-1], sil", "mov     esi, edx", "jz      do_number_sign_and_padding"], ["mov~eax,esi", "sar~edi,0", "mul~,r12d", "shr~edx,0", "lea~eax,<TAG>", "add~eax,eax", "sub~esi,eax", "mov~eax,edi", "add~esi,0", "or~eax,edx", "mov~[rcx-1]+0],sil", "mov~esi,edx", "jz~FOO"]], [0, 0, 338, 0, 0, 4, 0, 1, 24, 25, 0.04091436073176138, ["mov     rax, rcx", "mov     rcx, bufp", "mov     bufp, rax", "jmp     short loc_EC08"], ["mov~rax,rcx", "mov~rcx,bufp", "mov~bufp,rax", "jmp~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 5, 22, 0.05452406526520382, ["cmp     al, 41h ; 'A'", "jl      short loc_E448"], ["cmp~al,0", "jl~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 6, 21, 0.0055495882563551735, ["cmp     al, 5Fh ; '_'", "jle     loc_E528"], ["cmp~al,0", "jle~FOO"]], [1, 0, 338, 0, 0, 3, 0, 0, 7, 21, 0.00015344483658124902, ["lea     edx, [rax-61h]", "cmp     dl, 1Dh", "jbe     loc_E528"], ["lea~edx,[rax-61h]+0]", "cmp~dl,0", "jbe~FOO"]], [1, 0, 338, 0, 0, 4, 0, 1, 6, 23, 0.04738035565103234, ["cmp     [rsp+4F8h+format_end], 0", "mov     rax, qword ptr cs:mbstate_zero.__count", "mov     qword ptr [rsp+4F8h+mbstate.__count], rax", "jz      loc_E6B8"], ["cmp~[rsp+0],0", "mov~rax,<TAG>", "mov~[word ptr [rsp+0],rax", "jz~FOO"]], [1, 0, 338, 0, 0, 3, 0, 1, 8, 21, 0.00015344483658124902, ["lea     edx, [rax-8]", "cmp     dl, 5", "ja      loc_E448"], ["lea~edx,[rax-8]+0]", "cmp~dl,0", "ja~FOO"]], [0, 0, 338, 0, 0, 4, 1, 1, 26, 23, 0.08467597565341926, ["cmp     r9d, ebp", "cmovl   r9d, ebp", "test    r8b, r8b", "jnz     loc_F5B0"], ["cmp~r9d,ebp", "cmovl~r9d,ebp", "test~r8b,r8b", "jnz~FOO"]], [0, 0, 338, 1, 0, 5, 1, 1, 7, 22, 0.04741445450360595, ["mov     r13, [rsp+4F8h+format_end]", "xor     ebx, ebx", "lea     r12, [rsp+4F8h+mbstate]", "sub     r13, r14", "jmp     short loc_E4A3"], ["mov~r13,[rsp+0]", "xor~ebx,ebx", "lea~r12,[rsp+0]", "sub~r13,r14", "jmp~FOO"]], [0, 0, 338, 0, 1, 5, 0, 2, 7, 23, 0.0, ["mov     rdi, r14; s", "call    _strlen", "lea     rax, [r14+rax+1]", "mov     [rsp+4F8h+format_end], rax", "jmp     loc_E463"], ["mov~rdi,r14", "call~FOO", "lea~rax,[r14+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 9, 22, 0.011371967333299234, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_E6D0"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 338, 1, 1, 9, 2, 2, 8, 21, 0.04750822634818338, ["lea     rbp, [r14+len]", "mov     rdx, fsize", "xor     edi, edi; pwc", "sub     rdx, len; n", "mov     rcx, r12; p", "mov     rsi, rbp; s", "call    _mbrtowc", "test    rax, rax", "jnz     short loc_E480"], ["lea~rbp,<TAG>", "mov~rdx,fsize", "xor~edi,edi", "sub~rdx,len", "mov~rcx,r12", "mov~rsi,rbp", "call~FOO", "test~rax,rax", "jnz~FOO"]], [1, 0, 338, 0, 0, 3, 0, 0, 21, 26, 0.00284725418989651, ["mov     esi, [rsp+4F8h+number_value]", "mov     ecx, ebp", "mov     edi, 66666667h"], ["mov~esi,[rsp+0]", "mov~ecx,ebp", "mov~edi,0"]], [3, 0, 338, 0, 0, 4, 0, 1, 21, 24, 0.11008814553390278, ["cmp     r11d, 2Dh ; '-'", "mov     byte ptr [rsp+4F8h+subfmt], 2Dh ; '-'", "mov     r8d, 2Dh ; '-'", "jnz     loc_F482"], ["cmp~r11d,0", "mov~[yte ptr [rsp+0],0", "mov~r8d,0", "jnz~FOO"]], [0, 0, 338, 1, 1, 5, 1, 2, 11, 21, 0.001449201234378463, ["mov     rdi, r12; ps", "add     len, rax", "call    _mbsinit", "test    eax, eax", "jnz     short loc_E4BF"], ["mov~rdi,r12", "add~len,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [4, 0, 338, 3, 0, 9, 0, 1, 22, 25, 0.002864303616183315, ["mov     eax, esi", "add     ecx, 1", "sar     esi, 1Fh", "imul    edi", "sar     edx, 2", "sub     edx, esi", "cmp     ecx, 9", "mov     esi, edx", "jnz     short loc_EC91"], ["mov~eax,esi", "add~ecx,0", "sar~esi,0", "imul~,edi", "sar~edx,0", "sub~edx,esi", "cmp~ecx,0", "mov~esi,edx", "jnz~FOO"]], [1, 0, 338, 0, 0, 1, 0, 0, 18, 4, 0.004249569501986258, ["mov     eax, 1; jumptable 000000000000E5C4 case 80"], ["mov~eax,0"]], [0, 0, 338, 0, 0, 3, 0, 0, 24, 24, 0.02575742076279133, ["movsxd  rdx, r9d", "cmp     rdx, rax", "jnb     loc_E4E5"], ["movsxd~rdx,r9d", "cmp~rdx,rax", "jnb~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 19, 3, 0.01138901675958604, ["test    r8b, r8b", "jnz     loc_F71D"], ["test~r8b,r8b", "jnz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 18, 4, 0.004249569501986258, ["xor     eax, eax; jumptable 000000000000E5C4 case 112", "jmp     loc_ECB4"], ["xor~eax,eax", "jmp~FOO"]], [1, 0, 338, 0, 0, 3, 0, 1, 20, 2, 0.004275143641416466, ["mov     r8d, eax", "mov     ecx, 70h ; 'p'", "jmp     underlying_strftime"], ["mov~r8d,eax", "mov~ecx,0", "jmp~FOO"]], [3, 0, 338, 2, 0, 7, 0, 0, 25, 23, 0.02572332191021772, ["sub     ebp, 1", "mov     edx, 0", "cmovns  edx, ebp", "add     edx, 1", "movsxd  rdx, edx", "cmp     rdx, rax", "jnb     loc_E4E5"], ["sub~ebp,0", "mov~edx,0", "cmovns~edx,ebp", "add~edx,0", "movsxd~rdx,edx", "cmp~rdx,rax", "jnb~FOO"]], [0, 0, 338, 0, 0, 2, 0, 0, 19, 25, 0.003614478372802755, ["mov     rax, [rsp+4F8h+tp]", "mov     esi, [rax+8]"], ["mov~rax,[rsp+0]", "mov~esi,[rax+0]"]], [2, 0, 338, 2, 0, 11, 1, 0, 9, 20, 0.04753380048761359, ["mov     eax, ebx", "mov     ebp, 0", "mov     rdx, [rsp+4F8h+maxsize]", "xor     eax, 0FFFFFFFFh", "movsxd  r12, ebx", "cmovns  ebp, eax", "add     ebp, ebx", "sub     rdx, i", "movsxd  rbp, ebp", "cmp     rbp, rdx", "jb      loc_E668"], ["mov~eax,ebx", "mov~ebp,0", "mov~rdx,[rsp+0]", "xor~eax,0", "movsxd~r12,ebx", "cmovns~ebp,eax", "add~ebp,ebx", "sub~rdx,i", "movsxd~rbp,ebp", "cmp~rbp,rdx", "jb~FOO"]], [0, 0, 338, 1, 1, 4, 0, 2, 10, 21, 0.0028302047636097043, ["mov     rdi, rbp; s", "call    _strlen", "add     len, rax", "jmp     loc_E4BF"], ["mov~rdi,rbp", "call~FOO", "add~len,rax", "jmp~FOO"]], [0, 0, 338, 1, 0, 6, 1, 1, 26, 22, 0.025706272483930915, ["mov     rax, [rsp+4F8h+dest]", "add     i, rdx", "movsxd  r13, r8d", "mov     r12, r14", "test    rax, rax", "jz      loc_F59D"], ["mov~rax,<TAG>", "add~i,rdx", "movsxd~r13,r8d", "mov~r12,r14", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 1, 0, 7, -1, 0.00528958450548139, ["xor     r15d, r15d"], ["xor~r15d,r15d"]], [1, 0, 338, 1, 0, 4, 0, 0, 6, 20, 0.023050824339760967, ["mov     rdx, [rsp+4F8h+maxsize]", "sub     rdx, i", "cmp     rdx, 1", "jbe     short loc_E4E5"], ["mov~rdx,[rsp+0]", "sub~rdx,i", "cmp~rdx,0", "jbe~FOO"]], [1, 0, 338, 3, 0, 11, 0, 0, 22, 20, 0.03585920583772356, ["lea     r14d, [len-1]", "mov     edx, ebp", "mov     eax, 0", "sub     edx, r14d", "cmovns  eax, edx", "add     eax, r14d", "movsxd  width, eax", "mov     rax, [rsp+4F8h+maxsize]", "sub     rax, i", "cmp     rbp, rax", "jnb     loc_E4E5"], ["lea~r14d,[len-1]+0]", "mov~edx,ebp", "mov~eax,0", "sub~edx,r14d", "cmovns~eax,edx", "add~eax,r14d", "movsxd~width,eax", "mov~rax,[rsp+0]", "sub~rax,i", "cmp~rbp,rax", "jnb~FOO"]], [2, 0, 338, 2, 0, 7, 0, 0, 19, 20, 0.019675037934973487, ["sub     ebp, 1", "cmovns  ebx, ebp", "mov     r12d, ebx", "add     r12d, 1", "movsxd  r12, r12d", "cmp     r12, rdx", "jnb     loc_E4E5"], ["sub~ebp,0", "cmovns~ebx,ebp", "mov~r12d,ebx", "add~r12d,0", "movsxd~r12,r12d", "cmp~r12,rdx", "jnb~FOO"]], [3, 0, 338, 3, 0, 10, 0, 0, 22, 23, 0.025207576765041855, ["mov     ecx, ebp", "mov     r12d, 0", "mov     rax, [rsp+4F8h+maxsize]", "sub     ecx, 1", "cmovns  r12d, ecx", "add     r12d, 1", "sub     rax, i", "movsxd  r12, r12d", "cmp     r12, rax", "jnb     loc_E4E5"], ["mov~ecx,ebp", "mov~r12d,0", "mov~rax,[rsp+0]", "sub~ecx,0", "cmovns~r12d,ecx", "add~r12d,0", "sub~rax,i", "movsxd~r12,r12d", "cmp~r12,rax", "jnb~FOO"]], [0, 0, 338, 0, 0, 3, 0, 0, 24, 24, 0.03501525923652669, ["movsxd  r12, r8d", "cmp     r12, rax", "jnb     loc_E4E5"], ["movsxd~r12,r8d", "cmp~r12,rax", "jnb~FOO"]], [3, 0, 338, 2, 0, 8, 0, 0, 23, 23, 0.027705317716058855, ["mov     edx, ebp", "mov     r12d, 0", "sub     edx, 1", "cmovns  r12d, edx", "add     r12d, 1", "movsxd  r12, r12d", "cmp     r12, rax", "jnb     loc_E4E5"], ["mov~edx,ebp", "mov~r12d,0", "sub~edx,0", "cmovns~r12d,edx", "add~r12d,0", "movsxd~r12,r12d", "cmp~r12,rax", "jnb~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 27, 24, 0.014295943941486368, ["test    r9d, r9d", "jnz     short loc_F53C"], ["test~r9d,r9d", "jnz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 28, 24, 0.008524713143402723, ["test    ebp, ebp", "jle     short loc_F53C"], ["test~ebp,ebp", "jle~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, -1, 0.0, ["mov     byte ptr [rax], 0", "jmp     loc_E4E8"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 4C8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 1, 338, 0, 0, 2, 0, 1, 7, 21, 0.002992174313334356, ["cmp     al, 20h ; ' '", "jge     short loc_E528"], ["cmp~al,<STR>", "jge~FOO"]], [0, 1, 338, 0, 1, 8, 0, 1, 30, 24, 0.0014278894515199563, ["mov     rdi, [rsp+4F8h+dest]; s", "mov     esi, 20h ; ' '; c", "call    _memset", "movzx   r10d, [rsp+4F8h+var_499]", "mov     r9d, [rsp+4F8h+digits]", "mov     r11d, [rsp+4F8h+pad]", "mov     rcx, [rsp+4F8h+padding]", "mov     [rsp+4F8h+dest], rbp"], ["mov~rdi,<TAG>", "mov~esi,<STR>", "call~FOO", "movzx~r10d,[rsp+0]", "mov~r9d,[rsp+0]", "mov~r11d,[rsp+0]", "mov~rcx,[rsp+0]", "mov~<TAG>,rbp"]], [0, 0, 338, 0, 0, 3, 1, 1, 7, 19, 0.02196818577054882, ["mov     rsi, [rsp+4F8h+dest]", "test    rsi, rsi", "jz      short loc_E549"], ["mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [1, 0, 338, 1, 0, 3, 0, 0, 8, 19, 0.0, ["mov     [rsi], al", "add     rsi, 1", "mov     [rsp+4F8h+dest], p"], ["mov~<TAG>,al", "add~rsi,0", "mov~<TAG>,p"]], [1, 0, 338, 1, 0, 2, 0, 0, 8, 18, 0.022002284623122433, ["add     i, 1", "mov     r12, r14"], ["add~i,0", "mov~r12,r14"]], [1, 0, 338, 1, 0, 6, 0, 0, 28, 23, 0.014381191072920395, ["movzx   esi, byte ptr [rsp+4F8h+subfmt]", "mov     rax, [rsp+4F8h+dest]", "mov     r12, r14", "add     rax, 1", "mov     [rax-1], sil", "mov     [rsp+4F8h+dest], rax"], ["movzx~esi,[yte ptr [rsp+0]", "mov~rax,<TAG>", "mov~r12,r14", "add~rax,0", "mov~[rax-1]+0],sil", "mov~<TAG>,rax"]], [0, 0, 338, 0, 0, 3, 1, 1, 26, 22, 0.029171568376724123, ["mov     r14, [rsp+4F8h+dest]", "test    r14, r14", "jz      short loc_F59D"], ["mov~r14,<TAG>", "test~r14,r14", "jz~FOO"]], [0, 0, 338, 1, 0, 3, 0, 1, 11, 18, 0.04729510851959831, ["add     i, rbp", "lea     r12, [r14+_n-1]", "jmp     loc_E550"], ["add~i,rbp", "lea~r12,[r14+0]", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 3, -1, 0.00020459311544166538, ["xor     r15d, r15d", "jmp     loc_E563"], ["xor~r15d,r15d", "jmp~FOO"]], [1, 0, 338, 1, 1, 14, 0, 1, 27, 22, 0.0, ["mov     rdx, r13; n", "mov     esi, 30h ; '0'; c", "mov     rdi, r14; s", "mov     byte ptr [rsp+4F8h+digits], r10b", "mov     [rsp+4F8h+pad], r9d", "mov     dword ptr [rsp+4F8h+padding], r11d", "mov     [rsp+4F8h+subfmt], rcx", "call    _memset", "movzx   r10d, byte ptr [rsp+4F8h+digits]", "mov     r9d, [rsp+4F8h+pad]", "add     rax, r13", "mov     r11d, dword ptr [rsp+4F8h+padding]", "mov     rcx, [rsp+4F8h+subfmt]", "mov     [rsp+4F8h+dest], rax"], ["mov~rdx,r13", "mov~esi,0", "mov~rdi,r14", "mov~[yte ptr [rsp+0],r10b", "mov~[rsp+0],r9d", "mov~[word ptr [rsp+0],r11d", "mov~[rsp+0],rcx", "call~FOO", "movzx~r10d,[yte ptr [rsp+0]", "mov~r9d,[rsp+0]", "add~rax,r13", "mov~r11d,[word ptr [rsp+0]", "mov~rcx,[rsp+0]", "mov~<TAG>,rax"]], [2, 0, 338, 0, 0, 4, 0, 0, 13, 7, 0.6827442756551242, ["lea     eax, [rbx-30h]", "mov     ebp, 0FFFFFFFFh", "cmp     eax, 9", "jbe     short loc_E600"], ["lea~eax,[rbx-30h]+0]", "mov~ebp,0", "cmp~eax,0", "jbe~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 14, 6, 0.682931819344279, ["cmp     cl, 45h ; 'E'", "jz      short loc_E5F0"], ["cmp~cl,0", "jz~FOO"]], [0, 0, 338, 0, 0, 2, 0, 1, 19, 7, 0.009816207184628237, ["mov     r12d, ebx", "jmp     loc_E59E"], ["mov~r12d,ebx", "jmp~FOO"]], [1, 0, 338, 0, 0, 2, 0, 1, 15, 6, 0.00284725418989651, ["cmp     cl, 4Fh ; 'O'", "jz      short loc_E5F0"], ["cmp~cl,0", "jz~FOO"]], [0, 0, 338, 0, 0, 1, 1, 0, 16, 5, 0.0014278894515199563, ["xor     ebx, ebx"], ["xor~ebx,ebx"]], [0, 0, 338, 2, 0, 5, 1, 1, 27, 21, 0.040633045198029086, ["mov     rax, [rsp+4F8h+maxsize]", "add     r15, r13", "xor     ebp, ebp", "sub     rax, i", "jmp     loc_F068"], ["mov~rax,[rsp+0]", "add~r15,r13", "xor~ebp,ebp", "sub~rax,i", "jmp~FOO"]], [1, 0, 338, 1, 0, 4, 0, 1, 15, 5, 0.6786822498422928, ["movsx   r12d, byte ptr [r14+1]", "add     r14, 1", "mov     ecx, r12d", "jmp     short loc_E5AA"], ["movsx~r12d,[yte ptr [r14+0]", "add~r14,0", "mov~ecx,r12d", "jmp~FOO"]], [0, 0, 338, 0, 0, 3, 1, 1, 23, 22, 0.02466199512386408, ["mov     rax, [rsp+4F8h+dest]", "test    rax, rax", "jz      short loc_F64E"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 24, 23, 0.008516188430259322, ["test    r9d, r9d", "jnz     short loc_F63F"], ["test~r9d,r9d", "jnz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 25, 23, 0.00284725418989651, ["test    ecx, ecx", "jle     short loc_F63F"], ["test~ecx,ecx", "jle~FOO"]], [0, 0, 338, 0, 0, 1, 1, 0, 14, 10, 0.025147903773038036, ["xor     ebp, ebp"], ["xor~ebp,ebp"]], [1, 0, 338, 0, 0, 6, 0, 1, 15, 9, 0.025386595741053314, ["movsx   ebx, byte ptr [r14+1]", "cmp     ebp, 0CCCCCCCh", "lea     rsi, [r14+1]", "mov     ecx, ebx", "lea     eax, [rbx-30h]", "jg      short loc_E645"], ["movsx~ebx,[yte ptr [r14+0]", "cmp~ebp,0", "lea~rsi,[r14+0]", "mov~ecx,ebx", "lea~eax,[rbx-30h]+0]", "jg~FOO"]], [1, 0, 338, 0, 0, 2, 0, 0, 18, 8, 0.010020800300069903, ["cmp     eax, 9", "jbe     short loc_E602"], ["cmp~eax,0", "jbe~FOO"]], [0, 0, 338, 0, 0, 2, 0, 1, 16, 10, 0.008494876647400815, ["movsx   edx, byte ptr [r14]", "jz      short loc_E640"], ["movsx~edx,<TAG>", "jz~FOO"]], [0, 0, 338, 0, 0, 3, 0, 0, 17, 9, 0.004270881284844765, ["lea     edi, [width+width*4+0]", "mov     r14, rsi", "lea     ebp, [rdx+rdi*2-30h]"], ["lea~edi,[width+0]", "mov~r14,rsi", "lea~ebp,[rdx+0]"]], [1, 0, 338, 0, 0, 2, 0, 1, 17, 9, 0.0014278894515199563, ["cmp     dl, 37h ; '7'", "jle     short loc_E61E"], ["cmp~dl,0", "jle~FOO"]], [2, 0, 338, 1, 0, 6, 0, 1, 17, 9, 0.002860041259611614, ["movsx   ebx, byte ptr [r14+2]", "mov     ebp, 7FFFFFFFh", "add     r14, 2", "mov     ecx, ebx", "lea     eax, [rbx-30h]", "jmp     short loc_E629"], ["movsx~ebx,[yte ptr [r14+0]", "mov~ebp,0", "add~r14,0", "mov~ecx,ebx", "lea~eax,[rbx-30h]+0]", "jmp~FOO"]], [1, 0, 338, 3, 0, 8, 0, 1, 24, 21, 0.024747242255298108, ["mov     rax, [rsp+4F8h+maxsize]", "lea     rcx, [r13+17h]", "add     i, r12", "mov     r11d, 2Dh ; '-'", "mov     r12, r14", "sub     rcx, rbx", "sub     rax, i", "jmp     loc_F068"], ["mov~rax,[rsp+0]", "lea~rcx,[r13+0]", "add~i,r12", "mov~r11d,0", "mov~r12,r14", "sub~rcx,rbx", "sub~rax,i", "jmp~FOO"]], [1, 0, 338, 1, 0, 5, 0, 1, 27, 21, 0.015084479907251121, ["lea     rcx, [r13+17h]", "mov     padding_0, r14", "mov     r11d, 5Fh ; '_'", "sub     rcx, rbx", "jmp     loc_F068"], ["lea~rcx,[r13+0]", "mov~padding_0,r14", "mov~r11d,0", "sub~rcx,rbx", "jmp~FOO"]], [0, 1, 338, 1, 1, 14, 0, 1, 26, 23, 0.0, ["movsxd  _delta_0, ecx", "mov     esi, 20h ; ' '; c", "mov     rdi, rax; s", "mov     rdx, _delta_0; n", "mov     byte ptr [rsp+4F8h+digits], r8b", "mov     byte ptr [rsp+4F8h+pad], r10b", "mov     dword ptr [rsp+4F8h+padding], r9d", "mov     [rsp+4F8h+subfmt], _delta_0", "call    _memset", "mov     rcx, [rsp+4F8h+subfmt]", "movzx   r8d, byte ptr [rsp+4F8h+digits]", "add     [rsp+4F8h+dest], rcx", "movzx   r10d, byte ptr [rsp+4F8h+pad]", "mov     r9d, dword ptr [rsp+4F8h+padding]"], ["movsxd~_delta_0,ecx", "mov~esi,<STR>", "mov~rdi,rax", "mov~rdx,_delta_0", "mov~[yte ptr [rsp+0],r8b", "mov~[yte ptr [rsp+0],r10b", "mov~[word ptr [rsp+0],r9d", "mov~[rsp+0],_delta_0", "call~FOO", "mov~rcx,[rsp+0]", "movzx~r8d,[yte ptr [rsp+0]", "add~<TAG>,rcx", "movzx~r10d,[yte ptr [rsp+0]", "mov~r9d,[word ptr [rsp+0]"]], [1, 0, 338, 0, 0, 1, 0, 0, 19, 22, 0.008456515438255503, ["mov     r9d, 1"], ["mov~r9d,0"]], [1, 0, 338, 1, 0, 4, 0, 0, 25, 22, 0.008567336709119737, ["mov     rax, [rsp+4F8h+dest]", "mov     [rax], r8b", "add     rax, 1", "mov     [rsp+4F8h+dest], p"], ["mov~rax,<TAG>", "mov~<TAG>,r8b", "add~rax,0", "mov~<TAG>,p"]], [0, 0, 338, 0, 0, 3, 1, 1, 10, 19, 0.04717576253559067, ["mov     rdi, [rsp+4F8h+dest]; s", "test    rdi, rdi", "jz      short loc_E6A7"], ["mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 11, 22, 0.014159548531191925, ["test    eax, eax", "jle     short loc_E689"], ["test~eax,eax", "jle~FOO"]], [0, 1, 338, 1, 1, 5, 0, 1, 12, 22, 0.0, ["movsxd  fsize, eax", "mov     esi, 20h ; ' '; c", "mov     rdx, r13; n", "call    _memset", "add     [rsp+4F8h+dest], r13"], ["movsxd~fsize,eax", "mov~esi,<STR>", "mov~rdx,r13", "call~FOO", "add~<TAG>,r13"]], [0, 0, 338, 0, 0, 2, 1, 1, 21, 20, 0.011346393193869026, ["test    ebp, ebp", "jle     short loc_EEB8"], ["test~ebp,ebp", "jle~FOO"]], [0, 0, 338, 0, 1, 1, 0, 1, 13, 20, 0.005677458953506214, ["call    memcpy_uppcase"], ["call~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 21, 20, 0.011346393193869026, ["test    ebp, ebp", "jle     short loc_F6D4"], ["test~ebp,ebp", "jle~FOO"]], [0, 0, 338, 1, 0, 1, 0, 0, 14, 19, 0.014244795662625952, ["add     [rsp+4F8h+dest], r12"], ["add~<TAG>,r12"]], [0, 0, 338, 0, 1, 2, 0, 2, 26, 20, 0.01968356264811689, ["call    memcpy_lowcase", "jmp     loc_E7F4"], ["call~FOO", "jmp~FOO"]], [0, 0, 338, 0, 0, 6, 1, 1, 25, 21, 0.028216800504663016, ["movsxd  rbx, r14d", "test    r8b, r8b", "lea     rsi, [r13+1]; src", "mov     rdx, rbx; len", "mov     rdi, [rsp+4F8h+dest]; dest", "jnz     loc_F66E"], ["movsxd~rbx,r14d", "test~r8b,r8b", "lea~rsi,[r13+0]", "mov~rdx,rbx", "mov~rdi,<TAG>", "jnz~FOO"]], [0, 1, 338, 0, 1, 5, 0, 1, 23, 20, 0.0014278894515199563, ["mov     rdi, [rsp+4F8h+dest]; s", "mov     esi, 20h ; ' '; c", "call    _memset", "movzx   ecx, byte ptr [r14]", "mov     [rsp+4F8h+dest], rbx"], ["mov~rdi,<TAG>", "mov~esi,<STR>", "call~FOO", "movzx~ecx,<TAG>", "mov~<TAG>,rbx"]], [0, 1, 338, 0, 1, 5, 0, 1, 23, 20, 0.0014278894515199563, ["mov     rdi, [rsp+4F8h+dest]; s", "mov     esi, 20h ; ' '; c", "call    _memset", "mov     r10, [rsp+4F8h+padding]", "mov     [rsp+4F8h+dest], rbp"], ["mov~rdi,<TAG>", "mov~esi,<STR>", "call~FOO", "mov~r10,[rsp+0]", "mov~<TAG>,rbp"]], [0, 0, 338, 0, 0, 1, 1, 0, 18, 2, 0.02053461317693326, ["xor     r8d, r8d; jumptable 000000000000E5C4 case 114"], ["xor~r8d,r8d"]], [1, 0, 338, 0, 0, 3, 1, 1, 20, 2, 0.004275143641416466, ["mov     ecx, 70h ; 'p'", "xor     r10d, r10d", "jmp     underlying_strftime"], ["mov~ecx,0", "xor~r10d,r10d", "jmp~FOO"]], [1, 0, 338, 0, 0, 1, 0, 0, 24, 25, 0.0003580379520229144, ["mov     byte ptr [rsp+4F8h+subfmt], 0"], ["mov~[yte ptr [rsp+0],0"]], [0, 0, 338, 0, 0, 2, 0, 0, 18, 23, 0.00816667519137981, ["movzx   eax, byte ptr [r14-1]; jumptable 000000000000E5C4 case 0", "lea     modifier, [r14-1]"], ["movzx~eax,[yte ptr [r14-1]+0]", "lea~modifier,[r14-1]+0]"]], [0, 0, 338, 0, 0, 4, 1, 1, 24, 22, 0.02813155337322899, ["test    ebx, ebx", "movzx   r8d, byte ptr [rsp+4F8h+subfmt]", "movzx   r10d, byte ptr [rsp+4F8h+padding]", "jnz     short loc_E7CF"], ["test~ebx,ebx", "movzx~r8d,[yte ptr [rsp+0]", "movzx~r10d,[yte ptr [rsp+0]", "jnz~FOO"]], [0, 0, 338, 0, 0, 2, 1, 1, 25, 22, 0.008524713143402723, ["test    edx, edx", "jle     short loc_E7CF"], ["test~edx,edx", "jle~FOO"]], [0, 1, 338, 0, 1, 8, 0, 1, 27, 22, 0.0014278894515199563, ["mov     rdi, [rsp+4F8h+dest]; s", "mov     esi, 20h ; ' '; c", "mov     byte ptr [rsp+4F8h+padding], r10b", "mov     byte ptr [rsp+4F8h+subfmt], r8b", "call    _memset", "movzx   r10d, byte ptr [rsp+4F8h+padding]", "movzx   r8d, byte ptr [rsp+4F8h+subfmt]", "mov     [rsp+4F8h+dest], rbx"], ["mov~rdi,<TAG>", "mov~esi,<STR>", "mov~[yte ptr [rsp+0],r10b", "mov~[yte ptr [rsp+0],r8b", "call~FOO", "movzx~r10d,[yte ptr [rsp+0]", "movzx~r8d,[yte ptr [rsp+0]", "mov~<TAG>,rbx"]], [0, 0, 338, 0, 0, 3, 1, 1, 25, 23, 0.03494706153137947, ["mov     rax, [rsp+4F8h+dest]", "test    rax, rax", "jz      short loc_F777"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 1, 338, 1, 1, 11, 0, 1, 26, 23, 0.0, ["mov     rdx, r12; n", "mov     esi, 20h ; ' '; c", "mov     rdi, rax; s", "mov     byte ptr [rsp+4F8h+digits], r10b", "mov     [rsp+4F8h+pad], r9d", "mov     dword ptr [rsp+4F8h+padding], r8d", "call    _memset", "add     [rsp+4F8h+dest], r12", "movzx   r10d, byte ptr [rsp+4F8h+digits]", "mov     r9d, [rsp+4F8h+pad]", "mov     r8d, dword ptr [rsp+4F8h+padding]"], ["mov~rdx,r12", "mov~esi,<STR>", "mov~rdi,rax", "mov~[yte ptr [rsp+0],r10b", "mov~[rsp+0],r9d", "mov~[word ptr [rsp+0],r8d", "call~FOO", "add~<TAG>,r12", "movzx~r10d,[yte ptr [rsp+0]", "mov~r9d,[rsp+0]", "mov~r8d,[word ptr [rsp+0]"]], [0, 0, 338, 0, 1, 1, 0, 1, 27, 20, 0.0014278894515199563, ["call    _memcpy"], ["call~FOO"]]], "func_feature": [47, 115, 299, 2, 344, 557, 3, 1591, 0.05044, 8, 208], "succs": [[40, 9], [0, 38], [12, 4], [129, 2, 23, 12, 130, 270, 15, 16, 17, 18, 20, 21, 22, 151, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 169, 182, 55, 56, 334, 337, 14, 93, 99, 273, 105, 112, 116, 250], [7], [], [290, 5], [217], [7], [38], [12], [10, 50], [41], [3, 12], [12, 334], [113, 12], [12, 126], [194, 12], [195, 12], [12, 229], [196, 12], [12, 111], [276, 12], [201, 12], [104, 12], [128, 12], [188, 12], [12, 150], [176, 12], [179, 12], [12, 190], [204, 12], [12, 166], [12, 207], [232, 12], [12], [267, 44], [36, 37], [42], [1, 38], [38], [41, 46], [64], [42, 39], [64, 47], [60, 44], [49], [48, 159], [64], [280, 57], [49], [49], [87], [52, 78], [209], [19, 54], [202, 54], [58, 84], [72, 76], [284], [59, 180], [221], [61, 174], [65, 94], [280, 63], [66, 87], [53, 87], [280, 73], [67, 319], [214, 142], [136, 69], [76], [77, 71], [74, 106], [75, 100], [100, 101], [80, 81], [76], [87], [84], [79], [79], [289, 6], [82, 6], [221], [338, 84], [84], [90, 92], [277], [88, 268], [91], [94], [91], [37], [221], [302], [317, 95], [329], [97, 327], [115, 107], [106], [100], [86], [102, 343], [62], [62], [64], [114], [331], [340, 108], [193], [246, 110], [8, 35], [127], [280, 119], [114], [283, 51], [122], [187, 117], [120, 136], [121, 131], [132, 124], [205], [122, 178], [131], [152, 147], [154, 125], [280, 133], [127], [127], [127], [145, 134], [131], [136, 328], [144, 135], [139], [221], [136, 326], [136], [136], [136, 153], [136], [136], [136], [139], [139], [152], [152, 146], [142], [142], [198], [280, 140], [157], [155, 141], [161, 172], [162, 158], [205], [171, 156], [141], [160, 336], [280, 163], [172, 164], [141], [297], [172], [211], [219, 165], [143], [333, 167], [193], [193], [185, 170], [157, 175], [177], [192, 173], [157], [205], [205], [177, 206], [193], [231], [183], [321, 181], [184, 24], [183], [193, 189], [11], [186, 123], [193], [193], [193], [205], [118, 191], [205], [193], [193], [193], [193], [193, 199], [200, 193], [193], [193], [193, 203], [193], [193], [208, 237], [205], [205], [209, 244], [211], [216, 213], [217], [211], [215], [148, 149], [299, 222], [215], [282, 221], [217], [238], [256, 223], [83, 220], [220], [224, 281], [291, 227], [138], [225, 332], [259, 228], [233], [238], [285, 271], [286, 230], [198], [236, 239], [233], [233], [233], [243, 244], [237], [240, 247], [234, 252], [296], [241, 292], [249], [243], [197], [266, 245], [235, 253], [254], [248, 255], [280, 70], [218, 212], [236, 301], [236, 301], [249, 261], [254], [257, 259], [281, 258], [281, 259], [262, 263], [281, 259], [267, 45], [265], [262], [89, 278], [264, 277], [269], [284, 231], [265, 277], [269, 197], [272], [280, 275], [274, 335], [272], [251], [280, 279], [198], [280, 323], [277], [306, 287], [6], [280, 293], [280, 85], [280, 137], [280, 308], [280, 341], [280, 43], [288, 296], [296, 242], [6], [], [281, 260], [296], [294, 295], [295], [221], [297], [306, 300], [221], [83], [306], [302, 311], [304, 307], [302], [305, 307], [13], [64], [13], [309, 318], [322, 310], [320, 322], [312], [96, 314], [312, 303], [315, 316], [313], [96, 315], [313], [64], [64], [322], [24], [318], [298, 324], [98, 325], [98], [226, 138], [329], [168, 143], [298], [86], [330, 103], [138], [143], [251], [251], [285], [11], [339, 331], [331, 109], [331], [68, 342], [68], [86]], "fname": "strftime_case_", "n_num": 344}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[2, 0, 0, 2, 1, 11, 1, 1, 0, 0, 0.0, ["sub     rsp, 10h", "push    ns; ns", "mov     r9d, r8d; ut", "mov     ut, tp; tp", "mov     tp, format; format", "mov     format, maxsize; maxsize", "mov     maxsize, s; s", "xor     edi, edi; upcase", "call    strftime_case_", "add     rsp, 18h", "retn"], ["sub~rsp,0", "push~ns", "mov~r9d,r8d", "mov~ut,tp", "mov~tp,format", "mov~format,maxsize", "mov~maxsize,s", "xor~edi,edi", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 1, 1, 0, 1, 0, 2, 11, 0.0, 0, 2], "succs": [[]], "fname": "nstrftime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, p", "retn"], ["mov~rax,p", "retn"]], [3, 0, 2, 5, 0, 12, 1, 1, 1, 0, 0.5, ["mov     rax, i", "sub     p, 1", "mul     rsi", "shr     rdx, 3", "lea     rax, [rdx+rdx*4]", "add     rax, rax", "sub     i, rax", "add     edi, 30h ; '0'", "test    rdx, rdx", "mov     [p], dil", "mov     rdi, rdx", "jnz     short loc_FC58"], ["mov~rax,i", "sub~p,0", "mul~,rsi", "shr~rdx,0", "lea~rax,<TAG>", "add~rax,rax", "sub~i,rax", "add~edi,0", "test~rdx,rdx", "mov~<TAG>,dil", "mov~rdi,rdx", "jnz~FOO"]], [2, 0, 2, 0, 0, 4, 0, 0, 0, 0, 0.0, ["lea     p, [buf+14h]", "mov     byte ptr [buf+14h], 0", "mov     buf, 0CCCCCCCCCCCCCCCDh", "nop     word ptr [rax+rax+00h]"], ["lea~p,[buf+0]", "mov~[yte ptr [buf+0],0", "mov~buf,0", "nop~[ord ptr [rax+0]"]]], "func_feature": [0, 1, 1, 0, 3, 3, 10, 18, 0.16667, 0, 5], "succs": [[], [0, 1], [1]], "fname": "umaxtostr", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 4, 0, 1, 2, 0, 1, 0, 0, 0.027777777777777776, ["call    ___errno_location", "mov     dword ptr [rax], 4Bh ; 'K'"], ["call~FOO", "mov~<TAG>,0"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 2, 0.0625, ["cmp     len, 7FFFFFFFh", "ja      short loc_FD53"], ["cmp~len,0", "ja~FOO"]], [1, 0, 8, 0, 1, 8, 0, 1, 1, 3, 0.05555555555555555, ["mov     rcx, fp; s", "mov     rdx, len; n", "mov     esi, 1; size", "mov     rdi, output; ptr", "mov     rbp, output", "call    _fwrite", "cmp     rax, len", "jb      short loc_FD30"], ["mov~rcx,fp", "mov~rdx,len", "mov~esi,0", "mov~rdi,output", "mov~rbp,output", "call~FOO", "cmp~rax,len", "jb~FOO"]], [0, 1, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 7F8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.19444444444444442, ["mov     rcx, [rsp+818h+var_30]", "xor     rcx, fs:28h", "mov     eax, ebx", "jnz     short loc_FD6D"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [1, 0, 3, 0, 1, 4, 0, 2, 1, 2, 0.08333333333333333, ["mov     rdi, fp; fp", "mov     ebx, 0FFFFFFFFh", "call    fseterr", "jmp     short loc_FD05"], ["mov~rdi,fp", "mov~ebx,0", "call~FOO", "jmp~FOO"]], [1, 1, 9, 1, 1, 20, 2, 2, 0, 3, 0.0, ["push    r13", "push    r12", "mov     rax, format", "push    rbp", "push    rbx", "mov     r13, fp", "sub     rsp, 7F8h", "lea     r12, [rsp+818h+buf]", "lea     format, [rsp+818h+lenbuf]; lengthp", "mov     [rsp+818h+lenbuf], 7D0h", "mov     rcx, fs:28h", "mov     [rsp+818h+var_30], rcx", "xor     ecx, ecx", "mov     fp, r12; resultbuf", "mov     rcx, args; args", "mov     args, format; format", "call    vasnprintf", "test    output, output", "mov     rbx, [rsp+818h+lenbuf]", "jz      short loc_FD5E"], ["push~r13", "push~r12", "mov~rax,format", "push~rbp", "push~rbx", "mov~r13,fp", "sub~rsp,<STR>", "lea~r12,[rsp+0]", "lea~format,[rsp+0]", "mov~[rsp+0],0", "mov~rcx,<TAG>", "mov~[rsp+0],rcx", "xor~ecx,ecx", "mov~fp,r12", "mov~rcx,args", "mov~args,format", "call~FOO", "test~output,output", "mov~rbx,[rsp+0]", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 3, 0, 2, 7, 0, 3, 3, 2, 0.0, ["call    ___errno_location", "mov     r13d, [rax]", "mov     r12, rax", "mov     rdi, output; ptr", "call    free", "mov     [r12], r13d", "jmp     short loc_FD05"], ["call~FOO", "mov~r13d,<TAG>", "mov~r12,rax", "mov~rdi,output", "call~FOO", "mov~<TAG>,r13d", "jmp~FOO"]], [1, 0, 4, 0, 0, 3, 0, 1, 2, 2, 0.048611111111111105, ["cmp     output, r12", "mov     ebx, 0FFFFFFFFh", "jz      short loc_FD05"], ["cmp~output,r12", "mov~ebx,0", "jz~FOO"]]], "func_feature": [7, 3, 13, 1, 10, 13, 1, 57, 0.04722, 1, 2], "succs": [[5], [0, 4], [1, 9], [], [3, 7], [4], [2, 5], [], [4], [8, 4]], "fname": "rpl_vfprintf", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_FD95"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    malloc", "test    p, p", "jnz     short loc_FD93"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 4, 0, 4, 4, 19, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 2], [], []], "fname": "xmalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_FDB5"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    _realloc", "test    p, p", "jnz     short loc_FDB3"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 4, 0, 4, 4, 7, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 2], [], []], "fname": "xrealloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 1, 0, 0, 6, 1, 1, 0, 0, 0.05, ["test    rax, rax", "mov     edx, 40h ; '@'", "cmovz   rax, rdx", "mov     [pn], rax", "mov     pn, rax; n", "jmp     short xrealloc"], ["test~rax,rax", "mov~edx,0", "cmovz~rax,rdx", "mov~<TAG>,rax", "mov~pn,rax", "jmp~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 0, 2, 0.0, ["test    p, p", "mov     rax, [pn]", "jz      short loc_FDF0"], ["test~p,p", "mov~rax,<TAG>", "jz~FOO"]], [1, 0, 1, 1, 0, 6, 0, 1, 2, -1, 0.05, ["lea     rdx, [rax+1]", "shr     rdx, 1", "add     rax, rdx", "mov     [pn], rax", "mov     pn, rax; n", "jmp     short xrealloc"], ["lea~rdx,[rax+0]", "shr~rdx,0", "add~rax,rdx", "mov~<TAG>,rax", "mov~pn,rax", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 1, 1, 0.1, ["mov     rdx, 0AAAAAAAAAAAAAAA9h", "cmp     rax, rdx", "ja      short loc_FE04"], ["mov~rdx,0", "cmp~rax,rdx", "ja~FOO"]], [1, 0, 0, 1, 1, 2, 0, 1, 2, 0, 0.0, ["sub     rsp, 8", "call    xalloc_die"], ["sub~rsp,0", "call~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []]], "func_feature": [1, 2, 5, 0, 6, 6, 0, 20, 0.03333, 0, 2], "succs": [[5], [0, 3], [5], [2, 4], [], []], "fname": "x2realloc", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 1, 8, 1, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, s", "call    xmalloc", "mov     rdx, s; n", "xor     esi, esi; c", "mov     rdi, rax; s", "pop     s", "jmp     _memset"], ["push~rbx", "mov~rbx,s", "call~FOO", "mov~rdx,s", "xor~esi,esi", "mov~rdi,rax", "pop~s", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 1, 2, 0, 2, 1, 0, 8, 0.0, 0, 0], "succs": [[1], []], "fname": "xzalloc", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 4, 1, 2, 0, 1, 0.0, ["sub     rsp, 8", "call    _calloc", "test    p, p", "jz      short loc_FE43"], ["sub~rsp,0", "call~FOO", "test~p,p", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 1, 3, 0, 3, 2, 0, 7, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "xcalloc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [2, 0, 1, 2, 1, 14, 0, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, p", "mov     p, s; n", "mov     rbx, s", "sub     rsp, 8", "call    xmalloc", "add     rsp, 8", "mov     rdx, s; n", "mov     rsi, p; src", "pop     s", "pop     p", "mov     rdi, rax; dest", "jmp     _memcpy"], ["push~rbp", "push~rbx", "mov~rbp,p", "mov~p,s", "mov~rbx,s", "sub~rsp,0", "call~FOO", "add~rsp,0", "mov~rdx,s", "mov~rsi,p", "pop~s", "pop~p", "mov~rdi,rax", "jmp~FOO"]]], "func_feature": [1, 0, 2, 0, 2, 1, 2, 14, 0.0, 0, 2], "succs": [[], [0]], "fname": "xmemdup", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 1, 7, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, string", "call    _strlen", "mov     rdi, string; p", "lea     rsi, [rax+1]; s", "pop     string", "jmp     short xmemdup"], ["push~rbx", "mov~rbx,string", "call~FOO", "mov~rdi,string", "lea~rsi,[rax+0]", "pop~string", "jmp~FOO"]]], "func_feature": [1, 0, 2, 0, 2, 1, 5, 7, 0.0, 0, 0], "succs": [[], [0]], "fname": "xstrdup", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 4, 0, 0, 3, 1, 1, 0, 0, 0.17777777777777778, ["test    r10d, r10d", "movsxd  rax, r10d", "js      short loc_FF32"], ["test~r10d,r10d", "movsxd~rax,r10d", "js~FOO"]], [0, 0, 5, 0, 0, 2, 0, 1, 2, 2, 0.022222222222222223, ["lea     opt_idx, aInvalidSuffixI; \"invalid suffix in %s%s argument `%s'\"", "jmp     short loc_FEDC"], ["lea~opt_idx,<TAG>", "jmp~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 1, 2, 0.061111111111111116, ["cmp     edi, 4", "lea     opt_idx, aInvalidSSArgum; \"invalid %s%s argument `%s'\"", "jz      short loc_FEDC"], ["cmp~edi,0", "lea~opt_idx,<TAG>", "jz~FOO"]], [1, 0, 5, 1, 0, 3, 0, 1, 2, 2, 0.03888888888888889, ["sub     edi, 1", "lea     opt_idx, aSSArgumentSToo; \"%s%s argument `%s' too large\"", "jnz     short loc_FF16"], ["sub~edi,0", "lea~opt_idx,<TAG>", "jnz~FOO"]], [2, 0, 10, 1, 0, 13, 1, 1, 0, 3, 0.0, ["push    r13", "push    r12", "mov     r10d, esi", "push    rbp", "push    rbx", "mov     r12, arg", "sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+38h+var_30], rax", "xor     eax, eax", "cmp     edi, 3", "mov     ebp, cs:exit_failure", "ja      short loc_FF24"], ["push~r13", "push~r12", "mov~r10d,esi", "push~rbp", "push~rbx", "mov~r12,arg", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edi,0", "mov~ebp,<TAG>", "ja~FOO"]], [1, 0, 2, 1, 0, 6, 0, 1, 3, 0, 0.044444444444444446, ["lea     rbx, off_162E0", "mov     [rsp+38h+var_32], dl", "mov     [rsp+38h+var_31], 0", "lea     r13, [rsp+38h+var_32]", "sub     rbx, rax", "jmp     short loc_FEF3"], ["lea~rbx,<TAG>", "mov~[rsp+0],dl", "mov~[rsp+0],0", "lea~r13,[rsp+0]", "sub~rbx,rax", "jmp~FOO"]], [1, 0, 7, 0, 0, 2, 0, 0, 1, 3, 0.02777777777777778, ["cmp     edi, 2", "jnb     short loc_FF1B"], ["cmp~edi,0", "jnb~FOO"]], [1, 0, 2, 1, 0, 3, 0, 0, 3, -1, 0.044444444444444446, ["shl     rax, 5", "lea     rbx, off_162E0", "mov     r13, [long_options+rax]"], ["shl~rax,0", "lea~rbx,<TAG>", "mov~r13,<TAG>"]], [0, 0, 1, 0, 0, 1, 0, 1, 2, -1, 0.016666666666666666, ["jmp     short loc_FF16"], ["jmp~FOO"]], [1, 0, 1, 0, 2, 11, 3, 2, 4, -1, 0.044444444444444446, ["mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r9, arg", "mov     rdx, rax; format", "mov     r8, r13", "mov     rcx, rbx", "xor     esi, esi; errnum", "mov     edi, ebp; status", "xor     eax, eax", "call    _error"], ["mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r9,arg", "mov~rdx,rax", "mov~r8,r13", "mov~rcx,rbx", "xor~esi,esi", "mov~edi,ebp", "xor~eax,eax", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [3, 5, 10, 3, 11, 15, 1, 48, 0.04343, 6, 4], "succs": [[5, 7], [0], [0, 8], [0, 10], [2, 6], [9], [1, 3], [9], [10], [10], []], "fname": "xstrtol_fatal", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 9, 1, 0, 2, 0, 1, 0, 0, 0.007347915242652085, ["sub     edi, 1", "jnz     short loc_101EE"], ["sub~edi,0", "jnz~FOO"]], [2, 0, 9, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_101FD"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 9, 1, 0, 4, 0, 0, 14, -1, 0.01384142173615858, ["mov     rax, tmp", "mul     rcx", "mov     tmp, rax", "jo      loc_102D1"], ["mov~rax,tmp", "mul~,rcx", "mov~tmp,rax", "jo~FOO"]], [0, 0, 62, 0, 0, 2, 1, 1, 7, 8, 0.032809295967190705, ["test    valid_suffixes, valid_suffixes", "jz      short loc_1000C"], ["test~valid_suffixes,valid_suffixes", "jz~FOO"]], [0, 0, 63, 0, 0, 2, 1, 1, 6, 9, 0.006664388243335612, ["xor     r12d, r12d", "jmp     short loc_FFFE"], ["xor~r12d,r12d", "jmp~FOO"]], [2, 0, 64, 0, 0, 3, 0, 1, 6, 9, 0.007575757575757575, ["cmp     eax, 22h ; '\"'", "mov     r12d, 1", "jnz     short loc_10028"], ["cmp~eax,0", "mov~r12d,0", "jnz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 16, -1, 0.0034176349965823654, ["jmp     short loc_101BC"], ["jmp~FOO"]], [1, 0, 9, 0, 0, 2, 1, 0, 13, -1, 0.016404647983595352, ["mov     edi, 4; jumptable 000000000001010E cases 18,50", "xor     r9d, r9d"], ["mov~edi,0", "xor~r9d,r9d"]], [0, 0, 50, 1, 0, 5, 0, 1, 12, 2, 0.18079289131920712, ["lea     rdx, off_16340", "movzx   r15d, r15b", "movsxd  rax, dword ptr [rdx+r15*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movzx~r15d,r15b", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 61, 0, 1, 8, 2, 2, 7, 7, 0.07792207792207793, ["movsx   esi, r15b; c", "mov     rdi, valid_suffixes; s", "xor     r12d, r12d", "call    _strchr", "test    rax, rax", "mov     ebx, 1", "mov     r8, [rsp+58h+var_50]", "jz      short loc_10028"], ["movsx~esi,r15b", "mov~rdi,valid_suffixes", "xor~r12d,r12d", "call~FOO", "test~rax,rax", "mov~ebx,0", "mov~r8,[rsp+0]", "jz~FOO"]], [0, 0, 62, 0, 0, 3, 1, 1, 6, 8, 0.06994759626338574, ["movzx   r15d, byte ptr [s]", "test    r15b, r15b", "jz      short loc_10028"], ["movzx~r15d,<TAG>", "test~r15b,r15b", "jz~FOO"]], [1, 0, 58, 0, 1, 7, 1, 2, 9, 5, 0.1384142173615858, ["mov     esi, 30h ; '0'; c", "mov     rdi, valid_suffixes; s", "mov     [rsp+58h+var_50], r8", "call    _strchr", "test    rax, rax", "mov     r8, [rsp+58h+var_50]", "jz      short loc_100E8"], ["mov~esi,0", "mov~rdi,valid_suffixes", "mov~[rsp+0],r8", "call~FOO", "test~rax,rax", "mov~r8,[rsp+0]", "jz~FOO"]], [0, 0, 59, 0, 1, 7, 1, 2, 8, 6, 0.1339712918660287, ["movsx   esi, r15b; c", "mov     rdi, valid_suffixes; s", "mov     [rsp+58h+var_50], r8", "call    _strchr", "test    rax, rax", "mov     r8, [rsp+58h+var_50]", "jz      loc_10150; jumptable 000000000001010E default case"], ["movsx~esi,r15b", "mov~rdi,valid_suffixes", "mov~[rsp+0],r8", "call~FOO", "test~rax,rax", "mov~r8,[rsp+0]", "jz~FOO"]], [0, 0, 10, 0, 0, 1, 1, 0, 14, -1, 0.004955570745044429, ["xor     edi, edi"], ["xor~edi,edi"]], [0, 0, 12, 1, 0, 3, 0, 0, 13, 1, 0.016404647983595352, ["mov     rax, tmp; jumptable 000000000001010E cases 5,37", "mul     rcx", "jo      loc_10329"], ["mov~rax,tmp", "mul~,rcx", "jo~FOO"]], [0, 0, 61, 0, 0, 3, 1, 1, 8, 7, 0.03896103896103897, ["movzx   r15d, byte ptr [r8]", "test    r15b, r15b", "jnz     short loc_10088"], ["movzx~r15d,<TAG>", "test~r15b,r15b", "jnz~FOO"]], [1, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.0003417634996582365, ["shl     tmp, 0Ah", "jmp     loc_10130; jumptable 000000000001010E case 33"], ["shl~tmp,0", "jmp~FOO"]], [1, 0, 6, 1, 0, 4, 0, 0, 13, -1, 0.005126452494873548, ["mov     edx, 400h; jumptable 000000000001010E case 0", "mov     rax, rdx", "mul     tmp", "jo      short loc_10213"], ["mov~edx,0", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]], [2, 0, 8, 0, 0, 3, 1, 1, 14, -1, 0.00888585099111415, ["or      rax, 0FFFFFFFFFFFFFFFFh", "mov     edi, 1", "jmp     loc_1011E"], ["or~rax,0", "mov~edi,0", "jmp~FOO"]], [0, 0, 10, 1, 0, 3, 0, 0, 13, -1, 0.02460697197539303, ["mov     rax, tmp; jumptable 000000000001010E cases 11,43", "mul     rcx", "jo      loc_102EE"], ["mov~rax,tmp", "mul~,rcx", "jo~FOO"]], [0, 0, 5, 1, 0, 4, 0, 0, 13, -1, 0.0010252904989747095, ["mov     rax, tmp; jumptable 000000000001010E cases 9,41", "mul     rcx", "mov     tmp, rax", "jno     loc_10130; jumptable 000000000001010E case 33"], ["mov~rax,tmp", "mul~,rcx", "mov~tmp,rax", "jno~FOO"]], [2, 0, 51, 1, 0, 3, 0, 1, 11, 3, 0.1814764183185236, ["sub     r15d, 42h ; 'B'", "cmp     r15b, 35h ; '5'; switch 54 cases", "ja      short loc_10150; jumptable 000000000001010E default case"], ["sub~r15d,0", "cmp~r15b,0", "ja~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 8, -1, 0.0015379357484620643, ["mov     [val], tmp", "jmp     short loc_1002E"], ["mov~<TAG>,tmp", "jmp~FOO"]], [0, 1, 6, 1, 0, 4, 0, 0, 13, -1, 0.005126452494873548, ["mov     edx, 200h; jumptable 000000000001010E case 32", "mov     rax, rdx", "mul     tmp", "jo      short loc_10213"], ["mov~edx,<STR>", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]], [2, 0, 9, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_1023F"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 9, 1, 0, 4, 0, 0, 14, -1, 0.01384142173615858, ["mov     rax, tmp", "mul     rcx", "mov     tmp, rax", "jo      loc_1030B"], ["mov~rax,tmp", "mul~,rcx", "mov~tmp,rax", "jo~FOO"]], [1, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.0003417634996582365, ["shl     tmp, 9", "jmp     short loc_10130; jumptable 000000000001010E case 33"], ["shl~tmp,0", "jmp~FOO"]], [0, 0, 8, 0, 0, 1, 1, 0, 14, -1, 0.00888585099111415, ["xor     edi, edi"], ["xor~edi,edi"]], [2, 0, 4, 0, 0, 3, 1, 1, 14, -1, 0.0010252904989747095, ["mov     r12d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_10130; jumptable 000000000001010E case 33"], ["mov~r12d,0", "or~rbx,0", "jmp~FOO"]], [1, 0, 6, 1, 0, 4, 0, 0, 13, -1, 0.005126452494873548, ["mov     edx, 2; jumptable 000000000001010E case 53", "mov     rax, rdx", "mul     tmp", "jo      loc_10213"], ["mov~edx,0", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]], [0, 0, 75, 0, 1, 13, 1, 2, 1, 13, 0.01281613123718387, ["lea     rax, [rsp+58h+t_ptr]", "mov     r12, s", "mov     rbp, ptr", "test    ptr, ptr", "mov     r14, val", "mov     r15d, edx", "mov     r13, valid_suffixes", "cmovz   rbp, rax", "movzx   ebx, byte ptr [q]", "call    ___ctype_b_loc", "mov     rcx, [rax]", "mov     rax, q", "jmp     short loc_FFAF"], ["lea~rax,[rsp+0]", "mov~r12,s", "mov~rbp,ptr", "test~ptr,ptr", "mov~r14,val", "mov~r15d,edx", "mov~r13,valid_suffixes", "cmovz~rbp,rax", "movzx~ebx,<TAG>", "call~FOO", "mov~rcx,<TAG>", "mov~rax,q", "jmp~FOO"]], [2, 0, 77, 1, 0, 12, 1, 1, 0, 14, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "cmp     edx, 24h ; '$'", "ja      loc_102A1"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edx,0", "ja~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 6, -1, 0.0005696058327637275, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 64, 0, 0, 3, 1, 1, 5, 9, 0.06197311460469356, ["test    valid_suffixes, valid_suffixes", "mov     [rsp+58h+var_50], r8", "jnz     short loc_10060"], ["test~valid_suffixes,valid_suffixes", "mov~[rsp+0],r8", "jnz~FOO"]], [1, 0, 8, 0, 0, 3, 1, 0, 13, -1, 0.016404647983595352, ["mov     edi, 7; jumptable 000000000001010E case 24", "xor     r9d, r9d", "nop     dword ptr [rax+rax+00h]"], ["mov~edi,0", "xor~r9d,r9d", "nop~[word ptr [rax+0]"]], [2, 0, 8, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_101B7"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 8, 1, 0, 4, 0, 0, 14, -1, 0.013670539986329461, ["mov     rax, tmp", "mul     rcx", "mov     tmp, rax", "jo      loc_1031A"], ["mov~rax,tmp", "mul~,rcx", "mov~tmp,rax", "jo~FOO"]], [0, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.0003417634996582365, ["add     tmp, tmp", "jmp     short loc_10130; jumptable 000000000001010E case 33"], ["add~tmp,tmp", "jmp~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 4, -1, 0.006151742993848257, ["mov     r12d, 4"], ["mov~r12d,0"]], [1, 0, 72, 0, 0, 2, 0, 1, 3, 11, 0.04921394395078606, ["cmp     bl, 2Dh ; '-'", "jz      short loc_10028"], ["cmp~bl,0", "jz~FOO"]], [2, 0, 8, 0, 0, 3, 1, 1, 16, -1, 0.0, ["mov     edi, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_1011E"], ["mov~edi,0", "or~rax,0", "jmp~FOO"]], [0, 0, 9, 1, 0, 2, 0, 0, 15, -1, 0.008714969241285031, ["mul     rcx", "jno     loc_1011E"], ["mul~,rcx", "jno~FOO"]], [1, 0, 75, 1, 0, 2, 0, 0, 3, 13, 0.0, ["add     q, 1", "movzx   ebx, byte ptr [q]"], ["add~q,0", "movzx~ebx,<TAG>"]], [0, 1, 75, 0, 0, 3, 1, 1, 2, 12, 0.03776486671223513, ["movzx   edx, bl", "test    byte ptr [rcx+rdx*2+1], 20h", "jnz     short loc_FFA8"], ["movzx~edx,bl", "test~[yte ptr [rcx+0],<STR>", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 0, 17, -1, 0.0075187969924812035, ["or      r12d, edi", "nop     dword ptr [rax]"], ["or~r12d,edi", "nop~<TAG>"]], [2, 0, 5, 0, 0, 3, 1, 1, 16, -1, 0.00589542036910458, ["mov     edi, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_1012A"], ["mov~edi,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 16, -1, 0.00589542036910458, ["mov     rbx, rax"], ["mov~rbx,rax"]], [1, 0, 8, 1, 0, 2, 0, 1, 15, -1, 0.006835269993164731, ["sub     edi, 1", "jnz     short loc_101A8"], ["sub~edi,0", "jnz~FOO"]], [2, 0, 10, 0, 0, 3, 1, 1, 14, 0, 0.004955570745044429, ["mov     edi, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_1028A"], ["mov~edi,0", "or~rax,0", "jmp~FOO"]], [1, 0, 9, 1, 0, 2, 0, 1, 15, -1, 0.007347915242652085, ["sub     edi, 1", "jnz     short loc_10230"], ["sub~edi,0", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 1, 0, 13, -1, 0.016404647983595352, ["mov     edi, 5; jumptable 000000000001010E case 14", "xor     r9d, r9d"], ["mov~edi,0", "xor~r9d,r9d"]], [1, 0, 0, 0, 1, 5, 0, 1, 1, -1, 0.0, ["lea     val, __PRETTY_FUNCTION___4894; \"xstrtoul\"", "lea     ptr, aXstrtolC; \"xstrtol.c\"", "lea     s, a0StrtolBaseStr; \"0 <= strtol_base && strtol_base <= 36\"", "mov     edx, 53h ; 'S'; line", "call    ___assert_fail"], ["lea~val,<TAG>", "lea~ptr,<TAG>", "lea~s,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, -1, 0.025290498974709502, ["mov     rdi, [rsp+58h+var_40]", "xor     rdi, fs:28h", "mov     eax, r12d", "jnz     loc_102C0"], ["mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "mov~eax,r12d", "jnz~FOO"]], [2, 0, 3, 1, 0, 9, 1, 1, 13, -1, 0.02332535885167464, ["movsxd  suffixes, esi; jumptable 000000000001010E case 33", "mov     eax, r12d", "add     r8, suffixes", "or      eax, 2", "mov     [p+0], r8", "cmp     byte ptr [r8], 0", "mov     [val], tmp", "cmovnz  r12d, eax", "jmp     loc_1002E"], ["movsxd~suffixes,esi", "mov~eax,r12d", "add~r8,suffixes", "or~eax,0", "mov~[p+0],r8", "cmp~<TAG>,0", "mov~<TAG>,tmp", "cmovnz~r12d,eax", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 9, -1, 0.004870129870129871, ["mov     [val], tmp; jumptable 000000000001010E default case", "or      r12d, 2", "jmp     loc_1002E"], ["mov~<TAG>,tmp", "or~r12d,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 71, 0, 2, 12, 0, 3, 4, 10, 0.05724538619275462, ["call    ___errno_location", "mov     edx, r15d; base", "mov     dword ptr [rax], 0", "mov     rsi, p; endptr", "mov     rdi, s; nptr", "mov     [rsp+58h+var_50], rax", "call    _strtoul", "mov     r8, [p+0]", "mov     ch_0, rax", "mov     rcx, [rsp+58h+var_50]", "cmp     r8, s", "jz      short loc_10018"], ["call~FOO", "mov~edx,r15d", "mov~<TAG>,0", "mov~rsi,p", "mov~rdi,s", "mov~[rsp+0],rax", "call~FOO", "mov~r8,[p+0]", "mov~ch_0,rax", "mov~rcx,[rsp+0]", "cmp~r8,s", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 16, -1, 0.0034176349965823654, ["jmp     loc_101BC"], ["jmp~FOO"]], [0, 0, 7, 1, 0, 2, 0, 0, 15, -1, 0.021872863978127138, ["mul     rcx", "jo      loc_102E0"], ["mul~,rcx", "jo~FOO"]], [1, 0, 57, 0, 0, 3, 0, 1, 10, 5, 0.010936431989063569, ["movzx   eax, byte ptr [r8+1]", "cmp     al, 44h ; 'D'", "jz      short loc_100D8"], ["movzx~eax,[yte ptr [r8+0]", "cmp~al,0", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 16, -1, 0.016404647983595352, ["or      r12d, r9d", "jmp     loc_10130; jumptable 000000000001010E case 33"], ["or~r12d,r9d", "jmp~FOO"]], [1, 0, 9, 0, 0, 3, 1, 0, 13, -1, 0.016404647983595352, ["mov     edi, 8; jumptable 000000000001010E case 23", "xor     r9d, r9d", "nop     dword ptr [rax+00h]"], ["mov~edi,0", "xor~r9d,r9d", "nop~[word ptr [rax+0]"]], [1, 0, 9, 1, 0, 2, 0, 1, 15, -1, 0.007347915242652085, ["sub     edi, 1", "jnz     short loc_101D0"], ["sub~edi,0", "jnz~FOO"]], [2, 0, 9, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_101DF"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 9, 1, 0, 4, 0, 0, 14, -1, 0.01384142173615858, ["mov     rax, tmp", "mul     rcx", "mov     tmp, rax", "jo      loc_102FC"], ["mov~rax,tmp", "mul~,rcx", "mov~tmp,rax", "jo~FOO"]], [1, 0, 56, 0, 0, 2, 0, 1, 11, 5, 0.00598086124401914, ["cmp     al, 69h ; 'i'", "jz      loc_1015C"], ["cmp~al,0", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 28h", "pop     rbx", "pop     p", "pop     r12", "pop     valid_suffixes", "pop     val", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~p", "pop~r12", "pop~valid_suffixes", "pop~val", "pop~r15", "retn"]], [1, 0, 9, 0, 0, 2, 1, 0, 13, -1, 0.016404647983595352, ["mov     edi, 6; jumptable 000000000001010E case 3", "xor     r9d, r9d"], ["mov~edi,0", "xor~r9d,r9d"]], [1, 0, 54, 0, 0, 2, 0, 1, 12, 5, 0.0005126452494873548, ["cmp     al, 42h ; 'B'", "jnz     short loc_100E8"], ["cmp~al,0", "jnz~FOO"]], [0, 0, 9, 1, 0, 4, 0, 0, 14, -1, 0.01384142173615858, ["mov     rax, tmp", "mul     rcx", "mov     tmp, rax", "jo      short loc_102C5"], ["mov~rax,tmp", "mul~,rcx", "mov~tmp,rax", "jo~FOO"]], [1, 0, 9, 1, 0, 2, 0, 1, 15, -1, 0.007347915242652085, ["sub     edi, 1", "jnz     short loc_10251"], ["sub~edi,0", "jnz~FOO"]], [0, 0, 66, 0, 0, 3, 1, 1, 5, 10, 0.0053542948279790385, ["mov     eax, [rcx]", "test    eax, eax", "jz      short loc_10058"], ["mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [2, 0, 9, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     short loc_1025C"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 16, -1, 0.0034176349965823654, ["jmp     loc_101BC"], ["jmp~FOO"]], [2, 0, 52, 0, 0, 3, 0, 1, 11, 4, 0.013328776486671225, ["mov     esi, 2", "mov     ecx, 3E8h", "jmp     short loc_100F2"], ["mov~esi,0", "mov~ecx,0", "jmp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 16, -1, 0.0034176349965823654, ["jmp     short loc_101BC"], ["jmp~FOO"]], [2, 0, 52, 0, 0, 2, 0, 0, 10, 4, 0.13636363636363638, ["mov     esi, 1", "mov     ecx, 400h"], ["mov~esi,0", "mov~ecx,0"]], [2, 0, 52, 0, 0, 6, 1, 1, 12, 4, 0.00888585099111415, ["xor     esi, esi", "cmp     byte ptr [r8+2], 42h ; 'B'", "mov     ecx, 400h", "setz    sil", "lea     esi, [rsi+rsi+1]", "jmp     short loc_100F2"], ["xor~esi,esi", "cmp~[yte ptr [r8+0],0", "mov~ecx,0", "setz~sil", "lea~esi,[rsi+0]", "jmp~FOO"]]], "func_feature": [8, 36, 57, 2, 78, 123, 4, 260, 0.0216, 5, 27], "succs": [[2, 6], [0], [0, 1], [22, 15], [3], [3, 38], [60], [2], [34, 67, 7, 14, 29, 17, 50, 19, 20, 53, 54, 23, 61], [12, 38], [9, 38], [59, 76], [11, 54], [41], [48, 13], [12, 22], [53], [16, 28], [58], [18, 27], [28, 53], [8, 54], [52], [26, 28], [49], [24, 49], [53], [58], [53], [28, 37], [43], [51, 30], [38], [32, 10], [36], [47], [35, 47], [53], [52], [56, 38], [58], [40, 58], [43], [42, 39], [53], [44], [44], [60, 36], [41], [25, 57], [25], [], [66, 55], [52], [52], [], [33, 71], [60], [45, 46], [65, 74], [53], [64], [64, 75], [62], [62, 63], [68, 77], [], [69], [74, 76], [72, 70], [73, 69], [4, 5], [70], [60], [21], [60], [21], [21]], "fname": "xstrtoul", "n_num": 78}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 0.0, ["or      dword ptr [fp], 20h", "retn"], ["or~<TAG>,<STR>", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 1, 2, 0.0, 0, 0], "succs": [[]], "fname": "fseterr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 4, 1, 2, 0, 1, 0.0, ["sub     rsp, 8", "call    _strndup", "test    s, s", "jz      short loc_10363"], ["sub~rsp,0", "call~FOO", "test~s,s", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 1, 3, 0, 3, 2, 2, 7, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "xstrndup", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 64, 0, 0, 3, 1, 1, 0, 0, 0.06197311460469356, ["test    valid_suffixes, valid_suffixes", "mov     [rsp+58h+var_50], rcx", "jnz     short loc_10480"], ["test~valid_suffixes,valid_suffixes", "mov~[rsp+0],rcx", "jnz~FOO"]], [1, 0, 71, 0, 2, 13, 1, 3, 4, 10, 0.05724538619275462, ["call    ___errno_location", "xor     ecx, ecx; group", "mov     dword ptr [rax], 0", "mov     edx, r15d; base", "mov     rsi, p; endptr", "mov     rdi, s; nptr", "mov     [rsp+58h+var_50], rax", "call    ___strtoul_internal", "mov     rcx, [p+0]", "mov     ch_0, rax", "mov     r8, [rsp+58h+var_50]", "cmp     rcx, s", "jz      short loc_10438"], ["call~FOO", "xor~ecx,ecx", "mov~<TAG>,0", "mov~edx,r15d", "mov~rsi,p", "mov~rdi,s", "mov~[rsp+0],rax", "call~FOO", "mov~rcx,[p+0]", "mov~ch_0,rax", "mov~r8,[rsp+0]", "cmp~rcx,s", "jz~FOO"]], [0, 0, 9, 1, 0, 4, 0, 0, 14, -1, 0.01384142173615858, ["mov     rax, tmp", "mul     rsi", "mov     tmp, rax", "jo      short loc_106FB"], ["mov~rax,tmp", "mul~,rsi", "mov~tmp,rax", "jo~FOO"]], [1, 0, 9, 1, 0, 2, 0, 1, 15, -1, 0.007347915242652085, ["sub     r8d, 1", "jnz     short loc_10684"], ["sub~r8d,0", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 1, 0, 13, -1, 0.016404647983595352, ["mov     r8d, 6; jumptable 000000000001052E case 3", "xor     r9d, r9d"], ["mov~r8d,0", "xor~r9d,r9d"]], [0, 0, 5, 0, 0, 1, 0, 1, 16, -1, 0.0034176349965823654, ["jmp     loc_105E5"], ["jmp~FOO"]], [1, 0, 9, 1, 0, 2, 0, 1, 15, -1, 0.007347915242652085, ["sub     r8d, 1", "jnz     short loc_10661"], ["sub~r8d,0", "jnz~FOO"]], [2, 0, 9, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     short loc_1068F"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [2, 0, 52, 0, 0, 3, 0, 1, 11, 4, 0.013328776486671225, ["mov     edi, 2", "mov     esi, 3E8h", "jmp     short loc_10512"], ["mov~edi,0", "mov~esi,0", "jmp~FOO"]], [1, 0, 57, 0, 0, 3, 0, 1, 10, 5, 0.010936431989063569, ["movzx   eax, byte ptr [rcx+1]", "cmp     al, 44h ; 'D'", "jz      short loc_104F7"], ["movzx~eax,[yte ptr [rcx+0]", "cmp~al,0", "jz~FOO"]], [1, 0, 54, 0, 0, 2, 0, 1, 12, 5, 0.0005126452494873548, ["cmp     al, 42h ; 'B'", "jnz     short loc_10508"], ["cmp~al,0", "jnz~FOO"]], [0, 0, 62, 0, 0, 3, 1, 1, 6, 8, 0.06994759626338574, ["movzx   r15d, byte ptr [s]", "test    r15b, r15b", "jz      short loc_10448"], ["movzx~r15d,<TAG>", "test~r15b,r15b", "jz~FOO"]], [0, 0, 9, 1, 0, 4, 0, 0, 14, -1, 0.01384142173615858, ["mov     rax, tmp", "mul     rsi", "mov     tmp, rax", "jo      loc_10734"], ["mov~rax,tmp", "mul~,rsi", "mov~tmp,rax", "jo~FOO"]], [1, 0, 9, 1, 0, 2, 0, 1, 15, -1, 0.007347915242652085, ["sub     r8d, 1", "jnz     short loc_10600"], ["sub~r8d,0", "jnz~FOO"]], [1, 0, 9, 0, 0, 3, 1, 0, 13, -1, 0.016404647983595352, ["mov     r8d, 8; jumptable 000000000001052E case 23", "xor     r9d, r9d", "nop     word ptr [rax+rax+00000000h]"], ["mov~r8d,0", "xor~r9d,r9d", "nop~[ord ptr [rax+0]"]], [1, 0, 72, 0, 0, 2, 0, 1, 3, 11, 0.04921394395078606, ["cmp     bl, 2Dh ; '-'", "jz      short loc_10448"], ["cmp~bl,0", "jz~FOO"]], [2, 0, 52, 0, 0, 6, 1, 1, 12, 4, 0.00888585099111415, ["xor     edi, edi", "cmp     byte ptr [rcx+2], 42h ; 'B'", "mov     esi, 400h", "setz    dil", "lea     edi, [rdi+rdi+1]", "jmp     loc_10512"], ["xor~edi,edi", "cmp~[yte ptr [rcx+0],0", "mov~esi,0", "setz~dil", "lea~edi,[rdi+0]", "jmp~FOO"]], [1, 0, 56, 0, 0, 2, 0, 1, 11, 5, 0.00598086124401914, ["cmp     al, 69h ; 'i'", "jz      loc_1057B"], ["cmp~al,0", "jz~FOO"]], [0, 0, 12, 1, 0, 3, 0, 0, 13, 1, 0.016404647983595352, ["mov     rax, tmp; jumptable 000000000001052E cases 5,37", "mul     rsi", "jo      loc_10761"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [0, 0, 50, 1, 0, 5, 0, 1, 12, 2, 0.18079289131920712, ["lea     rdx, off_16428", "movzx   r15d, r15b", "movsxd  rax, dword ptr [rdx+r15*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movzx~r15d,r15b", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [2, 0, 77, 1, 0, 12, 1, 1, 0, 14, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "cmp     edx, 24h ; '$'", "ja      loc_106D7"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edx,0", "ja~FOO"]], [2, 0, 9, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_1060F"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 66, 0, 0, 3, 1, 1, 5, 10, 0.0053542948279790385, ["mov     eax, [r8]", "test    eax, eax", "jz      short loc_10478"], ["mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 16, -1, 0.0034176349965823654, ["jmp     short loc_105E5"], ["jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, -1, 0.025290498974709502, ["mov     rdi, [rsp+58h+var_40]", "xor     rdi, fs:28h", "mov     eax, r12d", "jnz     loc_106F6"], ["mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "mov~eax,r12d", "jnz~FOO"]], [2, 0, 51, 1, 0, 3, 0, 1, 11, 3, 0.1814764183185236, ["sub     r15d, 42h ; 'B'", "cmp     r15b, 35h ; '5'; switch 54 cases", "ja      short loc_1056F; jumptable 000000000001052E default case"], ["sub~r15d,0", "cmp~r15b,0", "ja~FOO"]], [2, 0, 52, 0, 0, 2, 0, 0, 10, 4, 0.13636363636363638, ["mov     edi, 1", "mov     esi, 400h"], ["mov~edi,0", "mov~esi,0"]], [1, 0, 9, 0, 0, 2, 1, 0, 13, -1, 0.016404647983595352, ["mov     r8d, 4; jumptable 000000000001052E cases 18,50", "xor     r9d, r9d"], ["mov~r8d,0", "xor~r9d,r9d"]], [1, 0, 6, 1, 0, 4, 0, 0, 13, -1, 0.005126452494873548, ["mov     edx, 2; jumptable 000000000001052E case 53", "mov     rax, rdx", "mul     tmp", "jo      loc_10646"], ["mov~edx,0", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]], [2, 0, 64, 0, 0, 3, 0, 1, 6, 9, 0.007575757575757577, ["cmp     eax, 22h ; '\"'", "mov     r12d, 1", "jnz     short loc_10448"], ["cmp~eax,0", "mov~r12d,0", "jnz~FOO"]], [2, 0, 5, 0, 0, 3, 1, 1, 16, -1, 0.00589542036910458, ["mov     r8d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_1054B"], ["mov~r8d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 7, 1, 0, 2, 0, 0, 15, -1, 0.021872863978127138, ["mul     rsi", "jo      loc_10716"], ["mul~,rsi", "jo~FOO"]], [0, 0, 62, 0, 0, 2, 1, 1, 7, 8, 0.032809295967190705, ["test    valid_suffixes, valid_suffixes", "jz      short loc_1042F"], ["test~valid_suffixes,valid_suffixes", "jz~FOO"]], [0, 0, 63, 0, 0, 2, 1, 1, 6, 9, 0.006664388243335612, ["xor     r12d, r12d", "jmp     short loc_10421"], ["xor~r12d,r12d", "jmp~FOO"]], [1, 0, 6, 1, 0, 4, 0, 0, 13, -1, 0.005126452494873548, ["mov     edx, 400h; jumptable 000000000001052E case 0", "mov     rax, rdx", "mul     tmp", "jo      short loc_10646"], ["mov~edx,0", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]], [1, 0, 61, 0, 1, 8, 2, 2, 7, 7, 0.07792207792207793, ["movsx   esi, r15b; c", "mov     rdi, valid_suffixes; s", "xor     r12d, r12d", "call    _strchr", "test    rax, rax", "mov     ebx, 1", "mov     rcx, [rsp+58h+var_50]", "jz      short loc_10448"], ["movsx~esi,r15b", "mov~rdi,valid_suffixes", "xor~r12d,r12d", "call~FOO", "test~rax,rax", "mov~ebx,0", "mov~rcx,[rsp+0]", "jz~FOO"]], [0, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.0003417634996582365, ["add     tmp, tmp", "jmp     short loc_10550; jumptable 000000000001052E case 33"], ["add~tmp,tmp", "jmp~FOO"]], [0, 0, 9, 1, 0, 4, 0, 0, 14, -1, 0.01384142173615858, ["mov     rax, tmp", "mul     rsi", "mov     tmp, rax", "jo      loc_10707"], ["mov~rax,tmp", "mul~,rsi", "mov~tmp,rax", "jo~FOO"]], [1, 0, 9, 1, 0, 2, 0, 1, 15, -1, 0.007347915242652085, ["sub     r8d, 1", "jnz     short loc_10620"], ["sub~r8d,0", "jnz~FOO"]], [1, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.0003417634996582365, ["shl     tmp, 0Ah", "jmp     loc_10550; jumptable 000000000001052E case 33"], ["shl~tmp,0", "jmp~FOO"]], [0, 0, 61, 0, 0, 3, 1, 1, 8, 7, 0.03896103896103897, ["movzx   r15d, byte ptr [rcx]", "test    r15b, r15b", "jnz     short loc_104A8"], ["movzx~r15d,<TAG>", "test~r15b,r15b", "jnz~FOO"]], [2, 0, 8, 0, 0, 3, 1, 1, 14, -1, 0.00888585099111415, ["or      rax, 0FFFFFFFFFFFFFFFFh", "mov     r8d, 1", "jmp     loc_1053F"], ["or~rax,0", "mov~r8d,0", "jmp~FOO"]], [0, 0, 10, 1, 0, 3, 0, 0, 13, -1, 0.02460697197539303, ["mov     rax, tmp; jumptable 000000000001052E cases 11,43", "mul     rsi", "jo      loc_10725"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 16, -1, 0.00589542036910458, ["mov     rbx, rax"], ["mov~rbx,rax"]], [0, 0, 3, 0, 0, 2, 0, 1, 8, -1, 0.0015379357484620643, ["mov     [val], tmp", "jmp     short loc_1044E"], ["mov~<TAG>,tmp", "jmp~FOO"]], [2, 0, 9, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_1062F"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [0, 1, 6, 1, 0, 4, 0, 0, 13, -1, 0.005126452494873548, ["mov     edx, 200h; jumptable 000000000001052E case 32", "mov     rax, rdx", "mul     tmp", "jo      loc_10646"], ["mov~edx,<STR>", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 16, -1, 0.0034176349965823654, ["jmp     short loc_105E5"], ["jmp~FOO"]], [0, 0, 5, 1, 0, 4, 0, 0, 13, -1, 0.0010252904989747095, ["mov     rax, tmp; jumptable 000000000001052E cases 9,41", "mul     rsi", "mov     tmp, rax", "jno     loc_10550; jumptable 000000000001052E case 33"], ["mov~rax,tmp", "mul~,rsi", "mov~tmp,rax", "jno~FOO"]], [0, 0, 8, 0, 0, 1, 1, 0, 14, -1, 0.00888585099111415, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [1, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.0003417634996582365, ["shl     tmp, 9", "jmp     short loc_10550; jumptable 000000000001052E case 33"], ["shl~tmp,0", "jmp~FOO"]], [0, 0, 75, 0, 1, 13, 1, 2, 1, 13, 0.01281613123718387, ["lea     rax, [rsp+58h+t_ptr]", "mov     r12, s", "mov     rbp, ptr", "test    ptr, ptr", "mov     r14, val", "mov     r15d, edx", "mov     r13, valid_suffixes", "cmovz   rbp, rax", "movzx   ebx, byte ptr [q]", "call    ___ctype_b_loc", "mov     rcx, [rax]", "mov     rax, q", "jmp     short loc_103CF"], ["lea~rax,[rsp+0]", "mov~r12,s", "mov~rbp,ptr", "test~ptr,ptr", "mov~r14,val", "mov~r15d,edx", "mov~r13,valid_suffixes", "cmovz~rbp,rax", "movzx~ebx,<TAG>", "call~FOO", "mov~rcx,<TAG>", "mov~rax,q", "jmp~FOO"]], [0, 0, 59, 0, 1, 7, 1, 2, 8, 6, 0.1339712918660287, ["movsx   esi, r15b; c", "mov     rdi, valid_suffixes; s", "mov     [rsp+58h+var_50], rcx", "call    _strchr", "test    rax, rax", "mov     rcx, [rsp+58h+var_50]", "jz      loc_1056F; jumptable 000000000001052E default case"], ["movsx~esi,r15b", "mov~rdi,valid_suffixes", "mov~[rsp+0],rcx", "call~FOO", "test~rax,rax", "mov~rcx,[rsp+0]", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 6, -1, 0.0005696058327637275, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 10, 0, 0, 1, 1, 0, 14, -1, 0.004955570745044429, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [1, 0, 3, 0, 0, 1, 0, 0, 4, -1, 0.006151742993848257, ["mov     r12d, 4"], ["mov~r12d,0"]], [1, 0, 8, 0, 0, 3, 1, 0, 13, -1, 0.016404647983595352, ["mov     r8d, 7; jumptable 000000000001052E case 24", "xor     r9d, r9d", "nop     dword ptr [rax+00000000h]"], ["mov~r8d,0", "xor~r9d,r9d", "nop~[word ptr [rax+0]"]], [1, 0, 75, 1, 0, 2, 0, 0, 3, 13, 0.0, ["add     q, 1", "movzx   ebx, byte ptr [q]"], ["add~q,0", "movzx~ebx,<TAG>"]], [0, 1, 75, 0, 0, 3, 1, 1, 2, 12, 0.03776486671223513, ["movzx   edx, bl", "test    byte ptr [rcx+rdx*2+1], 20h", "jnz     short loc_103C8"], ["movzx~edx,bl", "test~[yte ptr [rcx+0],<STR>", "jnz~FOO"]], [2, 0, 9, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_10670"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 9, 1, 0, 4, 0, 0, 14, -1, 0.01384142173615858, ["mov     rax, tmp", "mul     rsi", "mov     tmp, rax", "jo      loc_10743"], ["mov~rax,tmp", "mul~,rsi", "mov~tmp,rax", "jo~FOO"]], [0, 0, 4, 0, 0, 2, 1, 0, 17, -1, 0.0075187969924812035, ["or      r12d, r8d", "xchg    ax, ax"], ["or~r12d,r8d", "xchg~ax,ax"]], [1, 0, 58, 0, 1, 7, 1, 2, 9, 5, 0.1384142173615858, ["mov     esi, 30h ; '0'; c", "mov     rdi, valid_suffixes; s", "mov     [rsp+58h+var_50], rcx", "call    _strchr", "test    rax, rax", "mov     rcx, [rsp+58h+var_50]", "jz      short loc_10508"], ["mov~esi,0", "mov~rdi,valid_suffixes", "mov~[rsp+0],rcx", "call~FOO", "test~rax,rax", "mov~rcx,[rsp+0]", "jz~FOO"]], [2, 0, 4, 0, 0, 3, 1, 1, 14, -1, 0.0010252904989747095, ["mov     r12d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_10550; jumptable 000000000001052E case 33"], ["mov~r12d,0", "or~rbx,0", "jmp~FOO"]], [2, 0, 8, 0, 0, 3, 1, 1, 16, -1, 0.0, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_1053F"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [0, 0, 9, 1, 0, 2, 0, 0, 15, -1, 0.008714969241285031, ["mul     rsi", "jno     loc_1053F"], ["mul~,rsi", "jno~FOO"]], [0, 0, 8, 1, 0, 4, 0, 0, 14, -1, 0.013670539986329461, ["mov     rax, tmp", "mul     rsi", "mov     tmp, rax", "jo      loc_10752"], ["mov~rax,tmp", "mul~,rsi", "mov~tmp,rax", "jo~FOO"]], [1, 0, 8, 1, 0, 2, 0, 1, 15, -1, 0.006835269993164731, ["sub     r8d, 1", "jnz     short loc_105D0"], ["sub~r8d,0", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 1, 0, 13, -1, 0.016404647983595352, ["mov     r8d, 5; jumptable 000000000001052E case 14", "xor     r9d, r9d"], ["mov~r8d,0", "xor~r9d,r9d"]], [2, 0, 3, 1, 0, 9, 1, 1, 13, -1, 0.02332535885167464, ["movsxd  suffixes, edi; jumptable 000000000001052E case 33", "mov     eax, r12d", "add     rcx, suffixes", "or      eax, 2", "mov     [p+0], rcx", "cmp     byte ptr [rcx], 0", "mov     [val], tmp", "cmovnz  r12d, eax", "jmp     loc_1044E"], ["movsxd~suffixes,edi", "mov~eax,r12d", "add~rcx,suffixes", "or~eax,0", "mov~[p+0],rcx", "cmp~<TAG>,0", "mov~<TAG>,tmp", "cmovnz~r12d,eax", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 9, -1, 0.004870129870129871, ["mov     [val], tmp; jumptable 000000000001052E default case", "or      r12d, 2", "jmp     loc_1044E"], ["mov~<TAG>,tmp", "or~r12d,0", "jmp~FOO"]], [2, 0, 8, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_105DF"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 16, -1, 0.016404647983595352, ["or      r12d, r9d", "jmp     loc_10550; jumptable 000000000001052E case 33"], ["or~r12d,r9d", "jmp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 16, -1, 0.0034176349965823654, ["jmp     loc_105E5"], ["jmp~FOO"]], [2, 0, 10, 0, 0, 3, 1, 1, 14, 0, 0.004955570745044429, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_106BF"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 1, -1, 0.0, ["lea     val, __PRETTY_FUNCTION___4894_0; \"xstrtoumax\"", "lea     ptr, aXstrtolC; \"xstrtol.c\"", "lea     s, a0StrtolBaseStr; \"0 <= strtol_base && strtol_base <= 36\"", "mov     edx, 53h ; 'S'; line", "call    ___assert_fail"], ["lea~val,<TAG>", "lea~ptr,<TAG>", "lea~s,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 28h", "pop     rbx", "pop     p", "pop     r12", "pop     valid_suffixes", "pop     val", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~p", "pop~r12", "pop~valid_suffixes", "pop~val", "pop~r15", "retn"]]], "func_feature": [8, 37, 57, 2, 78, 123, 1, 261, 0.0216, 5, 27], "succs": [[11, 54], [0, 22], [3, 7], [2, 74], [2], [73], [5, 61], [3], [26], [8, 17], [8, 27], [56, 36], [13, 21], [12, 23], [12], [56, 1], [26], [16, 10], [75, 55], [35, 4, 69, 70, 71, 43, 14, 47, 49, 18, 57, 28, 29], [76, 52], [13], [34, 30], [73], [], [24, 77], [19, 71], [26], [38], [64, 37], [56, 33], [62], [44, 31], [41, 45], [33], [40, 64], [56, 53], [70], [46, 39], [48, 38], [70], [45, 53], [32], [42, 50], [62], [25], [39], [64, 51], [73], [64, 70], [32], [70], [59], [71, 63], [56], [66], [25], [67], [59], [58, 15], [6], [60, 6], [70], [9, 27], [70], [32], [32, 65], [72, 68], [73, 67], [61], [25], [25], [68], [70], [73], [66], [], []], "fname": "xstrtoumax", "n_num": 78}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[2, 0, 0, 0, 1, 7, 0, 1, 0, 0, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 0", "mov     eax, 0FFFFFFFFh", "pop     rbx", "pop     stream", "pop     r12", "retn"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "pop~rbx", "pop~stream", "pop~r12", "retn"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, -1, 0.047619047619047616, ["test    eax, eax", "jnz     short loc_107C8"], ["test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["pop     rbx", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "pop~stream", "pop~r12", "retn"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 2, 0.07142857142857142, ["test    eax, eax", "jz      short loc_1079F"], ["test~eax,eax", "jz~FOO"]], [1, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.047619047619047616, ["test    r12, r12", "mov     eax, 0FFFFFFFFh", "jz      short loc_107D8"], ["test~r12,r12", "mov~eax,0", "jz~FOO"]], [0, 1, 7, 0, 2, 12, 2, 3, 0, 3, 0.0, ["push    r12", "push    rbp", "mov     rbp, stream", "push    rbx", "call    ___fpending", "mov     ebx, [stream+0]", "mov     rdi, stream; stream", "mov     r12, rax", "call    _fclose", "and     ebx, 20h", "test    ebx, ebx", "jnz     short loc_107A8"], ["push~r12", "push~rbp", "mov~rbp,stream", "push~rbx", "call~FOO", "mov~ebx,[stream+0]", "mov~rdi,stream", "mov~r12,rax", "call~FOO", "and~ebx,<STR>", "test~ebx,ebx", "jnz~FOO"]], [1, 0, 0, 0, 1, 9, 0, 1, 3, 0, 0.0, ["call    ___errno_location", "cmp     dword ptr [rax], 9", "pop     rbx", "pop     stream", "pop     r12", "setnz   al", "movzx   eax, al", "neg     eax", "retn"], ["call~FOO", "cmp~<TAG>,0", "pop~rbx", "pop~stream", "pop~r12", "setnz~al", "movzx~eax,al", "neg~eax", "retn"]], [1, 0, 0, 0, 0, 5, 0, 0, 2, -1, 0.0, ["pop     rbx", "mov     eax, 0FFFFFFFFh", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "mov~eax,0", "pop~stream", "pop~r12", "retn"]]], "func_feature": [4, 5, 8, 0, 8, 8, 2, 44, 0.02083, 0, 0], "succs": [[], [0, 7], [], [2, 4], [2, 6], [1, 3], [], []], "fname": "close_stream", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 344, 0, 0, 2, 0, 1, 0, 0, 0.0257783362640897, ["cmp     eax, 2", "jnz     loc_113B0"], ["cmp~eax,0", "jnz~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.05121431868992605, ["mov     rax, [dp+50h]; jumptable 0000000000010CFE case 11", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movsd   xmm0, qword ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      loc_11800"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movsd~xmm0,[word ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 344, 1, 0, 3, 0, 1, 33, 31, 0.023436324779674587, ["sub     rsp, 8", "push    [rbp+var_388]", "jmp     loc_11015"], ["sub~rsp,0", "push~[rbp+0]", "jmp~FOO"]], [0, 0, 32, 0, 0, 2, 1, 1, 12, -1, 0.006675899845940773, ["test    allocated, allocated", "jz      out_of_memory"], ["test~allocated,allocated", "jz~FOO"]], [2, 0, 33, 0, 0, 3, 0, 1, 11, -1, 0.018378176498965157, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "mov     eax, 1", "jz      loc_11A1A"], ["cmp~allocated,0", "mov~eax,0", "jz~FOO"]], [0, 0, 344, 0, 0, 3, 0, 0, 34, 31, 7.780769051213022e-06, ["mov     eax, [rbp+prefixes+4]", "push    [rbp+var_388]", "push    rax"], ["mov~eax,[rbp+0]", "push~[rbp+0]", "push~rax"]], [2, 0, 344, 2, 0, 5, 0, 1, 33, 31, 0.023346845935585635, ["sub     rsp, 8", "push    [rbp+var_388]", "sub     rsp, 10h", "fstp    [rsp+3E0h+var_3E0]", "jmp     loc_110DB"], ["sub~rsp,0", "push~[rbp+0]", "sub~rsp,0", "fstp~<TAG>,<TAG>", "jmp~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.052272503280891024, ["mov     rax, [dp+50h]; jumptable 0000000000010CFE case 12", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "fld     tbyte ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      loc_11810"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "fld~<TAG>,[byte ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 1, 40, -1, 0.017432813059242776, ["cmp     result_0, [rbp+result]", "jz      short loc_11842"], ["cmp~result_0,[rbp+0]", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 39, 37, 0.03830602283396357, ["cmp     r12, 7FFFFFFEh", "ja      overflow"], ["cmp~r12,0", "ja~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 41, -1, 0.0023497922534663324, ["test    result_0, result_0", "jnz     loc_11910"], ["test~result_0,result_0", "jnz~FOO"]], [1, 0, 359, 1, 1, 22, 2, 2, 0, 31, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, format", "push    rbx", "lea     rbx, [rbp+a]", "mov     r13, args", "sub     rsp, 398h", "mov     [rbp+lengthp], lengthp_0", "lea     lengthp_0, [rbp+d]; d", "mov     [rbp+result], resultbuf_0", "mov     format, rbx; a", "mov     resultbuf_0, format; format", "mov     rax, fs:28h", "mov     [rbp+var_38], rax", "xor     eax, eax", "call    printf_parse", "test    eax, eax", "js      loc_11890"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,format", "push~rbx", "lea~rbx,[rbp+0]", "mov~r13,args", "sub~rsp,0", "mov~[rbp+0],lengthp_0", "lea~lengthp_0,[rbp+0]", "mov~[rbp+0],resultbuf_0", "mov~format,rbx", "mov~resultbuf_0,format", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 41, -1, 0.01057017475607289, ["mov     rax, [rbp+buf_malloced]", "test    rax, rax", "jz      short loc_11856"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 8, 0, 1, 3, 0, 2, 42, -1, 0.0, ["mov     rdi, result_0; ptr", "call    free", "jmp     loc_11842"], ["mov~rdi,result_0", "call~FOO", "jmp~FOO"]], [3, 0, 344, 0, 1, 12, 0, 2, 34, 30, 0.026447482402494015, ["mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     eax, 1", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "pop     r8", "mov     r10, [rbp+maxlen]", "pop     r9", "jmp     loc_10D66"], ["mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "mov~eax,0", "mov~[rbp+0],maxlen_0", "call~FOO", "pop~r8", "mov~r10,[rbp+0]", "pop~r9", "jmp~FOO"]], [0, 0, 6, 0, 1, 2, 0, 1, 42, -1, 0.0, ["mov     rdi, rax; ptr", "call    free"], ["mov~rdi,rax", "call~FOO"]], [0, 0, 357, 0, 1, 5, 1, 2, 1, 30, 0.00275439224412941, ["mov     rsi, rbx; a", "mov     rdi, args; args", "call    printf_fetchargs", "test    eax, eax", "js      loc_11B41"], ["mov~rsi,rbx", "mov~rdi,args", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 42, 40, 0.010020333743120504, ["test    allocated, allocated", "js      out_of_memory"], ["test~allocated,allocated", "js~FOO"]], [0, 0, 344, 0, 0, 4, 0, 0, 41, 35, 0.015540789384956141, ["cmp     rax, rdx", "cmovb   rax, rdx", "cmp     allocated, rax", "jnb     loc_10CC0"], ["cmp~rax,rdx", "cmovb~rax,rdx", "cmp~allocated,rax", "jnb~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 42, -1, 0.005917274863447503, ["mov     rdi, [rbp+d.dir]; ptr", "call    free", "mov     rdi, [rbp+a.arg]; ptr", "test    rdi, rdi", "jz      short loc_11873"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~rdi,[rbp+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 43, -1, 0.0, ["call    free"], ["call~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.02393098717210534, ["mov     rax, [dp+50h]; jumptable 0000000000010CFE case 4", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movzx   r9d, word ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jnz     loc_10E5E"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movzx~r9d,[ord ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jnz~FOO"]], [0, 0, 344, 1, 0, 4, 0, 1, 31, 33, 0.31162758127013274, ["lea     rsi, off_1650C", "movsxd  rax, dword ptr [rsi+rax*4]", "add     rax, rsi", "jmp     rax; switch jump"], ["lea~rsi,<TAG>", "movsxd~rax,<TAG>", "add~rax,rsi", "jmp~rax"]], [3, 0, 353, 2, 0, 7, 0, 0, 2, 29, 0.005446538335849115, ["mov     rax, [rbp+d.max_width_length]", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "add     rax, 7", "cmp     rax, 6", "cmovbe  rax, rdx", "add     rax, [rbp+d.max_precision_length]", "jb      out_of_memory_1"], ["mov~rax,[rbp+0]", "mov~rdx,0", "add~rax,0", "cmp~rax,0", "cmovbe~rax,rdx", "add~rax,[rbp+0]", "jb~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 33, 32, 1.5561538102426044e-05, ["nop"], ["nop"]], [1, 0, 3, 0, 1, 4, 1, 2, 43, -1, 0.0012021288184124118, ["call    ___errno_location", "xor     r15d, r15d", "mov     dword ptr [rax], 4Bh ; 'K'", "jmp     loc_10982"], ["call~FOO", "xor~r15d,r15d", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 33, 31, 0.05123701259965865, ["push    [rbp+var_388]", "push    r9"], ["push~[rbp+0]", "push~r9"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.04304671573738338, ["mov     rax, [dp+50h]; jumptable 0000000000010CFE cases 5,6,13,14", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "mov     r9d, [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      loc_11080"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "mov~r9d,[rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.046099889513079396, ["mov     rax, [dp+50h]; jumptable 0000000000010CFE case 3", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movsx   r9d, word ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      short loc_11080"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movsx~r9d,[ord ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 33, 32, 1.5561538102426044e-05, ["jmp     loc_11080"], ["jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 33, 32, 1.5561538102426044e-05, ["jmp     loc_11080"], ["jmp~FOO"]], [1, 0, 352, 1, 0, 3, 0, 0, 3, 28, 0.008076438275159116, ["mov     rdi, rax", "add     rdi, 6; size", "jb      out_of_memory_1"], ["mov~rdi,rax", "add~rdi,0", "jb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 34, 30, 0.07715313331569693, ["mov     r9d, [rbp+prefixes]", "jmp     loc_10E71"], ["mov~r9d,[rbp+0]", "jmp~FOO"]], [0, 0, 344, 0, 0, 3, 0, 1, 33, 31, 0.02291274386226999, ["push    [rbp+var_388]", "push    arg", "jmp     loc_11088"], ["push~[rbp+0]", "push~arg", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, -1, 2.3342307153639065e-05, ["xor     r15d, r15d", "jmp     loc_10982"], ["xor~r15d,r15d", "jmp~FOO"]], [0, 1, 351, 0, 0, 2, 0, 0, 4, 27, 0.01073746129067397, ["cmp     rdi, 0F9Fh", "jbe     loc_109B0"], ["cmp~rdi,<STR>", "jbe~FOO"]], [1, 0, 349, 0, 0, 2, 0, 1, 5, 28, 0.00012449230481940835, ["cmp     buf_memsize, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory_1"], ["cmp~buf_memsize,0", "jz~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 16, 30, 0.01400538429218344, ["add     allocated, allocated", "cmp     allocated, rax", "jnb     loc_11301"], ["add~allocated,allocated", "cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 15, 31, 0.013927576601671309, ["js      out_of_memory"], ["js~FOO"]], [0, 0, 348, 0, 1, 4, 1, 2, 6, 27, 0.0026999268607709186, ["call    malloc", "test    rax, rax", "mov     [rbp+buf], rax", "jz      out_of_memory_1"], ["call~FOO", "test~rax,rax", "mov~[rbp+0],rax", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 16, 31, 0.0024937364809137735, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 15, 31, 0.018370395729913943, ["cmp     rax, 0Ch", "ja      loc_118B2"], ["cmp~rax,0", "ja~FOO"]], [0, 0, 347, 0, 0, 1, 0, 0, 7, 26, 0.005306484492927281, ["mov     [rbp+buf_malloced], buf_0"], ["mov~[rbp+0],buf_0"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 31, 0.02367733410103583, ["cmp     eax, 2", "jnz     loc_10E67"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 17, 30, 0.0025754345559515102, ["mov     rbx, memory_size", "jmp     loc_11301"], ["mov~rbx,memory_size", "jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 34, 33, 6.224615240970417e-05, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 344, 0, 0, 2, 0, 1, 35, 36, 0.016514682311199638, ["mov     result_0, rcx", "jmp     loc_10CB2"], ["mov~result_0,rcx", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 34, 37, 0.019506388011391044, ["test    length, length", "jz      loc_118C8"], ["test~length,length", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 35, 37, 0.0023264499463126935, ["test    dl, dl", "jz      loc_118C8"], ["test~dl,dl", "jz~FOO"]], [1, 0, 346, 0, 0, 3, 1, 1, 6, 25, 0.023902522525326403, ["xor     ebx, ebx", "cmp     [rbp+result], 0", "jz      short loc_108D8"], ["xor~ebx,ebx", "cmp~[rbp+0],0", "jz~FOO"]], [4, 0, 347, 2, 0, 8, 2, 1, 5, 26, 0.013266211232318203, ["add     rax, 24h", "mov     [rbp+buf_malloced], 0", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rax, [rsp+3C0h+flags+3]", "and     rax, 0FFFFFFFFFFFFFFF0h", "mov     [rbp+buf], rax", "jmp     loc_108C2"], ["add~rax,0", "mov~[rbp+0],0", "and~rax,0", "sub~rsp,rax", "lea~rax,[rsp+0]", "and~rax,0", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 344, 1, 0, 3, 0, 0, 34, 32, 0.004617108354989785, ["sub     rsp, 8", "push    [rbp+var_388]", "push    r9"], ["sub~rsp,0", "push~[rbp+0]", "push~r9"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 31, 0.09337026605042945, ["cmp     eax, 2", "jz      loc_110C8"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 20, 26, 0.016522463080250852, ["mov     result_0, rcx", "jmp     loc_111FF"], ["mov~result_0,rcx", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 19, 27, 0.019514168780442258, ["test    length, length", "jz      loc_118D0"], ["test~length,length", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 20, 27, 0.0023264499463126935, ["test    dl, dl", "jz      loc_118D0"], ["test~dl,dl", "jz~FOO"]], [0, 0, 345, 0, 0, 2, 0, 0, 7, 25, 0.0, ["mov     rax, [rbp+lengthp]", "mov     rbx, [rax]"], ["mov~rax,[rbp+0]", "mov~rbx,<TAG>"]], [0, 0, 344, 0, 0, 2, 0, 0, 35, 31, 0.008099780582312756, ["mov     eax, [rbp+prefixes+4]", "push    rax"], ["mov~eax,[rbp+0]", "push~rax"]], [1, 0, 344, 1, 0, 4, 0, 1, 34, 32, 0.0004792953735547249, ["sub     rsp, 8", "push    [rbp+var_388]", "push    arg", "jmp     loc_110D4"], ["sub~rsp,0", "push~[rbp+0]", "push~arg", "jmp~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 22, 33, 0.00473848835218873, ["cmp     r12, 0FFFFFFFFFFFFFFFFh", "mov     qword ptr [rbp+n], width_0", "jz      out_of_memory"], ["cmp~r12,0", "mov~[word ptr [rbp+0],width_0", "jz~FOO"]], [0, 1, 344, 0, 0, 2, 0, 1, 21, 33, 0.21363657583915593, ["cmp     r12, 2BCh", "ja      loc_118D8"], ["cmp~r12,<STR>", "ja~FOO"]], [0, 0, 344, 0, 1, 6, 1, 2, 23, 32, 0.004901884502264204, ["mov     rdi, r12; size", "call    malloc", "test    rax, rax", "mov     rcx, rax", "mov     rdx, qword ptr [rbp+n]", "jnz     loc_11633"], ["mov~rdi,r12", "call~FOO", "test~rax,rax", "mov~rcx,rax", "mov~rdx,[word ptr [rbp+0]", "jnz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 24, -1, 8.558845956334324e-05, ["jmp     out_of_memory"], ["jmp~FOO"]], [2, 0, 344, 0, 0, 6, 1, 1, 15, 16, 0.22990616392524238, ["mov     eax, [dp+10h]", "mov     rdi, [rbp+buf]", "test    al, 1", "mov     byte ptr [rdi], 25h ; '%'", "lea     r12, [rdi+1]", "jz      short loc_10AE8"], ["mov~eax,[dp+0]", "mov~rdi,[rbp+0]", "test~al,0", "mov~<TAG>,0", "lea~r12,[rdi+0]", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 14, 17, 0.10951821478034889, ["cmp     al, 41h ; 'A'", "jnz     short loc_10AC3"], ["cmp~al,0", "jnz~FOO"]], [1, 0, 344, 1, 0, 6, 0, 1, 18, 17, 0.008449915189617341, ["mov     rax, [dp+50h]", "mov     r8, [rbp+a.arg]", "shl     rax, 5", "mov     eax, [r8+rax]", "mov     dword ptr [rbp+has_width], eax", "jmp     loc_10AC3"], ["mov~rax,[dp+0]", "mov~r8,[rbp+0]", "shl~rax,0", "mov~eax,<TAG>", "mov~[word ptr [rbp+0],eax", "jmp~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 14, 17, 0.3232481598481194, ["cmp     dword ptr [rbp+has_width], 0Ch", "jz      loc_114E0"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [1, 0, 344, 0, 0, 11, 1, 1, 7, 24, 0.029115637789639128, ["mov     args, [rbp+d.dir]", "mov     r8, cp_0", "lea     rax, [rbp+retcount]", "xor     r10d, r10d", "mov     r15, [rbp+result]", "mov     [rbp+i], 0", "mov     [rbp+var_388], rax", "mov     cp_0, r10", "mov     rcx, [dp+0]", "cmp     rcx, cp_0", "jz      loc_11221"], ["mov~args,[rbp+0]", "mov~r8,cp_0", "lea~rax,[rbp+0]", "xor~r10d,r10d", "mov~r15,[rbp+0]", "mov~[rbp+0],0", "mov~[rbp+0],rax", "mov~cp_0,r10", "mov~rcx,[dp+0]", "cmp~rcx,cp_0", "jz~FOO"]], [2, 1, 344, 1, 1, 11, 1, 2, 34, 30, 0.03445000337166668, ["mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "add     rsp, 20h", "mov     r10, [rbp+maxlen]", "jmp     loc_10D66"], ["mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "add~rsp,<STR>", "mov~r10,[rbp+0]", "jmp~FOO"]], [0, 0, 344, 2, 0, 5, 0, 0, 8, 25, 0.04840675785727994, ["sub     rcx, cp_0", "mov     rax, length", "add     rax, n_0", "mov     r14, rax", "jnb     loc_109E0"], ["sub~rcx,cp_0", "mov~rax,length", "add~rax,n_0", "mov~r14,rax", "jnb~FOO"]], [1, 1, 344, 2, 0, 6, 0, 1, 15, 24, 0.5391320811482341, ["mov     r8, [dp+8]", "add     dp, 58h", "mov     rcx, [dp+0]", "add     [rbp+i], 1", "cmp     rcx, cp_0", "jnz     loc_10915"], ["mov~r8,[dp+0]", "add~dp,<STR>", "mov~rcx,[dp+0]", "add~[rbp+0],0", "cmp~rcx,cp_0", "jnz~FOO"]], [1, 0, 344, 0, 0, 4, 1, 1, 20, 37, 0.0, ["neg     eax", "or      [rbp+flags], 2", "movsxd  arg, eax", "jmp     loc_115B1"], ["neg~eax", "or~[rbp+0],0", "movsxd~arg,eax", "jmp~FOO"]], [1, 0, 344, 0, 0, 5, 1, 1, 19, 37, 0.007508442134420566, ["movsxd  rdx, dword ptr [rax+10h]", "mov     dword ptr [rbp+has_width], 1", "test    edx, edx", "mov     rax, rdx", "js      loc_1191D"], ["movsxd~rdx,[word ptr [rax+0]", "mov~[word ptr [rbp+0],0", "test~edx,edx", "mov~rax,rdx", "js~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 9, 25, 0.005371324235020723, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "jz      loc_11378"], ["cmp~allocated,0", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 27, -1, 7.586249824932697e-05, ["fstp    st"], ["fstp~<TAG>,<TAG>"]], [0, 0, 344, 0, 0, 5, 0, 0, 26, 34, 0.031850578111140504, ["fldz", "fxch    st(1)", "fucomi  st, st(1)", "fstp    st(1)", "jbe     short loc_1192E"], ["fldz~<TAG>", "fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "jbe~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 12, -1, 0.0, ["call    _abort; jumptable 0000000000010CFE default case"], ["call~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 11, 20, 0.44815284542724204, ["cmp     rdx, 0FFFFFFFFFFFFFFFFh", "jz      loc_11930; jumptable 0000000000010CFE default case"], ["cmp~rdx,0", "jz~FOO"]], [2, 0, 344, 2, 0, 4, 0, 1, 25, 7, 0.002536530710695445, ["shl     rax, 5", "add     rax, r8", "cmp     dword ptr [rax], 5", "jnz     loc_11930; jumptable 0000000000010CFE default case"], ["shl~rax,0", "add~rax,r8", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 344, 2, 0, 4, 0, 1, 27, 6, 0.0023497922534663324, ["shl     rax, 5", "add     r8, rax", "cmp     dword ptr [r8], 5", "jnz     loc_11930; jumptable 0000000000010CFE default case"], ["shl~rax,0", "add~r8,rax", "cmp~<TAG>,0", "jnz~FOO"]], [4, 0, 344, 1, 0, 9, 0, 1, 30, 34, 0.3117209504987473, ["mov     eax, dword ptr [rbp+has_width]", "mov     r12, allocated", "mov     r10d, 7FFFFFFFh", "sub     r12, length", "mov     [rbp+retcount], 0FFFFFFFFh", "cmp     maxlen_0, 7FFFFFFFh", "cmovbe  r10, maxlen_0", "cmp     eax, 11h; switch 18 cases", "ja      loc_11930; jumptable 0000000000010CFE default case"], ["mov~eax,[word ptr [rbp+0]", "mov~r12,allocated", "mov~r10d,0", "sub~r12,length", "mov~[rbp+0],0", "cmp~maxlen_0,0", "cmovbe~r10,maxlen_0", "cmp~eax,0", "ja~FOO"]], [1, 0, 344, 1, 0, 3, 0, 1, 37, 28, 0.0002878884548948818, ["add     rdx, result_0", "cmp     byte ptr [rdx+length], 0", "jnz     loc_11930; jumptable 0000000000010CFE default case"], ["add~rdx,result_0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 11, 28, 0.05127137766296821, ["cmp     rdx, 0FFFFFFFFFFFFFFFFh", "jnz     loc_11930; jumptable 0000000000010CFE default case"], ["cmp~rdx,0", "jnz~FOO"]], [1, 1, 344, 1, 0, 4, 0, 1, 13, 27, 0.013001665084576959, ["mov     eax, edi", "sub     eax, 12h", "cmp     eax, 4; switch 5 cases", "ja      loc_11930; jumptable 0000000000010CFE default case"], ["mov~eax,edi", "sub~eax,<STR>", "cmp~eax,0", "ja~FOO"]], [2, 0, 344, 2, 0, 5, 0, 1, 18, 38, 0.0072438959866793235, ["mov     rax, [rbp+a.arg]", "shl     rsi, 5", "add     rax, rsi", "cmp     dword ptr [rax], 5", "jnz     loc_11930; jumptable 0000000000010CFE default case"], ["mov~rax,[rbp+0]", "shl~rsi,0", "add~rax,rsi", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 344, 2, 0, 5, 0, 1, 20, 37, 0.009103499789919235, ["mov     rax, [rbp+a.arg]", "shl     rdi, 5", "add     rax, rdi", "cmp     dword ptr [rax], 5", "jnz     loc_11930; jumptable 0000000000010CFE default case"], ["mov~rax,[rbp+0]", "shl~rdi,0", "add~rax,rdi", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 27, 27, 0.2202385583791102, ["cmp     r12, r8", "jbe     loc_11930; jumptable 0000000000010CFE default case"], ["cmp~r12,r8", "jbe~FOO"]], [0, 0, 344, 0, 0, 5, 0, 0, 27, 33, 0.02976727719767822, ["fld     st", "fadd    st, st(1)", "fucomip st, st(1)", "fstp    st", "jp      short loc_11930; jumptable 0000000000010CFE default case"], ["fld~<TAG>,<TAG>", "fadd~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "jp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 28, 32, 0.030018206999579838, ["jnz     short loc_11930; jumptable 0000000000010CFE default case"], ["jnz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 1, 10, -1, 0.02313611677378192, ["cmp     result_0, [rbp+result]", "jz      short loc_10943"], ["cmp~result_0,[rbp+0]", "jz~FOO"]], [0, 0, 344, 0, 1, 5, 1, 2, 34, 37, 0.027335138471753215, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      out_of_memory"], ["mov~rsi,rbx", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 44, 40, 0.002412038405876037, ["cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 344, 0, 1, 5, 1, 2, 43, 36, 0.013731760580549115, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      out_of_memory"], ["mov~rsi,rbx", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [1, 0, 344, 1, 0, 4, 0, 0, 39, 36, 0.028100247428455828, ["lea     retcount_0, [allocated+allocated]", "mov     rdx, rax", "add     rdx, 0Ch", "jb      out_of_memory"], ["lea~retcount_0,<TAG>", "mov~rdx,rax", "add~rdx,0", "jb~FOO"]], [0, 0, 344, 0, 1, 5, 1, 2, 43, 37, 0.018488404060524006, ["mov     rdi, rbx; size", "call    malloc", "test    rax, rax", "mov     rcx, rax", "jz      out_of_memory"], ["mov~rdi,rbx", "call~FOO", "test~rax,rax", "mov~rcx,rax", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 13, 27, 0.0025832153250027233, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "jnz     out_of_memory"], ["cmp~allocated,0", "jnz~FOO"]], [0, 0, 344, 0, 1, 11, 1, 2, 14, 26, 0.01954529185664711, ["mov     rdi, rbx; size", "mov     [rbp+fbp], cp_0", "mov     byte ptr [rbp+n], dl", "mov     qword ptr [rbp+has_width], n_0", "call    malloc", "test    rax, rax", "mov     r9, rax", "mov     rcx, qword ptr [rbp+has_width]", "movzx   edx, byte ptr [rbp+n]", "mov     r8, [rbp+fbp]", "jz      out_of_memory"], ["mov~rdi,rbx", "mov~[rbp+0],cp_0", "mov~[yte ptr [rbp+0],dl", "mov~[word ptr [rbp+0],n_0", "call~FOO", "test~rax,rax", "mov~r9,rax", "mov~rcx,[word ptr [rbp+0]", "movzx~edx,[yte ptr [rbp+0]", "mov~r8,[rbp+0]", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 11, 29, 0.013927576601671309, ["js      out_of_memory"], ["js~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 12, 29, 0.0024937364809137735, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 40, -1, 0.00026324935289937385, ["jmp     out_of_memory"], ["jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 30, 41, 0.01606728809075489, ["js      out_of_memory"], ["js~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 31, 41, 0.01490795350212415, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 32, 40, 0.014900172733072937, ["test    rdx, rdx", "jnz     out_of_memory"], ["test~rdx,rdx", "jnz~FOO"]], [0, 0, 344, 0, 1, 7, 1, 2, 33, 38, 0.01965681621304783, ["mov     rdi, rbx; size", "mov     byte ptr [rbp+fbp], dl", "call    malloc", "test    rax, rax", "mov     rcx, rax", "movzx   edx, byte ptr [rbp+fbp]", "jz      out_of_memory"], ["mov~rdi,rbx", "mov~[yte ptr [rbp+0],dl", "call~FOO", "test~rax,rax", "mov~rcx,rax", "movzx~edx,[yte ptr [rbp+0]", "jz~FOO"]], [1, 0, 344, 1, 0, 3, 0, 0, 23, 36, 0.0025546858384816085, ["add     rax, 0Ch", "mov     r12, rax", "jb      out_of_memory"], ["add~rax,0", "mov~r12,rax", "jb~FOO"]], [1, 0, 344, 1, 0, 4, 0, 0, 20, 34, 0.21632612834119191, ["cmp     width_0, r12", "cmovnb  r12, width_0", "add     r12, 1", "jb      out_of_memory"], ["cmp~width_0,r12", "cmovnb~r12,width_0", "add~r12,0", "jb~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 30, 27, 0.005322046031029707, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "jnz     out_of_memory"], ["cmp~allocated,0", "jnz~FOO"]], [0, 0, 344, 0, 1, 7, 1, 2, 18, 28, 0.01954529185664711, ["mov     rdi, rbx; size", "mov     byte ptr [rbp+has_width], dl", "call    malloc", "test    rax, rax", "mov     rcx, rax", "movzx   edx, byte ptr [rbp+has_width]", "jz      out_of_memory"], ["mov~rdi,rbx", "mov~[yte ptr [rbp+0],dl", "call~FOO", "test~rax,rax", "mov~rcx,rax", "movzx~edx,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 20, 0, 1, 5, 1, 2, 17, -1, 0.0029450210858841287, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      out_of_memory"], ["mov~rsi,rbx", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [0, 0, 344, 0, 1, 7, 1, 2, 36, 27, 0.01489628234854733, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "mov     qword ptr [rbp+n], r8", "mov     qword ptr [rbp+has_width], rcx", "call    _realloc", "test    memory, memory", "jz      out_of_memory"], ["mov~rsi,rbx", "mov~rdi,result_0", "mov~[word ptr [rbp+0],r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "test~memory,memory", "jz~FOO"]], [0, 0, 344, 0, 1, 11, 1, 2, 35, 28, 0.019564743779275143, ["mov     rdi, rbx; size", "mov     byte ptr [rbp+fbp], dl", "mov     qword ptr [rbp+n], r8", "mov     qword ptr [rbp+has_width], rcx", "call    malloc", "test    rax, rax", "mov     r9, rax", "mov     rcx, qword ptr [rbp+has_width]", "mov     r8, qword ptr [rbp+n]", "movzx   edx, byte ptr [rbp+fbp]", "jz      out_of_memory"], ["mov~rdi,rbx", "mov~[yte ptr [rbp+0],dl", "mov~[word ptr [rbp+0],r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "test~rax,rax", "mov~r9,rax", "mov~rcx,[word ptr [rbp+0]", "mov~r8,[word ptr [rbp+0]", "movzx~edx,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 24, 40, 0.009679276699709, ["cmp     r8, digitp", "jz      out_of_memory"], ["cmp~r8,digitp", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 26, 40, 0.00249762686543938, ["cmp     r8, digitp", "jz      out_of_memory"], ["cmp~r8,digitp", "jz~FOO"]], [0, 0, 23, 0, 1, 5, 1, 2, 16, -1, 0.01058184590964971, ["mov     rdi, rbx; size", "call    malloc", "test    rax, rax", "mov     rcx, rax", "jz      out_of_memory"], ["mov~rdi,rbx", "call~FOO", "test~rax,rax", "mov~rcx,rax", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 32, 31, 0.013927576601671309, ["js      out_of_memory"], ["js~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 31, 0.00249762686543938, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [0, 0, 31, 0, 0, 1, 0, 1, 13, -1, 0.0037736729898383155, ["js      out_of_memory"], ["js~FOO"]], [1, 0, 30, 0, 0, 2, 0, 1, 14, -1, 0.005520455641835639, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [0, 0, 29, 0, 0, 2, 1, 1, 15, -1, 0.0030267191609218654, ["test    rax, rax", "jnz     out_of_memory"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 33, 0, 0, 1, 0, 1, 13, -1, 0.01555375733337483, ["js      out_of_memory"], ["js~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 29, 2, 0.012246930486609296, ["test    allocated, allocated", "jz      out_of_memory"], ["test~allocated,allocated", "jz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 31, 0, 4.279422978167162e-05, ["jmp     out_of_memory"], ["jmp~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 11, -1, 0.002427599943978463, ["test    result_0, result_0", "jnz     loc_113A0"], ["test~result_0,result_0", "jnz~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.02393098717210534, ["mov     rax, [dp+50h]; jumptable 0000000000010CFE case 2", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movzx   r9d, byte ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jnz     loc_10E5E"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movzx~r9d,[yte ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 11, -1, 0.01605561693717807, ["mov     rax, [rbp+buf_malloced]", "test    rax, rax", "jz      short out_of_memory_1"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 8, 0, 1, 3, 0, 2, 12, -1, 0.00018673845722911252, ["mov     rdi, result_0; ptr", "call    free", "jmp     loc_10943"], ["mov~rdi,result_0", "call~FOO", "jmp~FOO"]], [0, 0, 6, 0, 1, 2, 0, 1, 12, -1, 0.0, ["mov     rdi, rax; ptr", "call    free"], ["mov~rdi,rax", "call~FOO"]], [2, 0, 344, 0, 0, 10, 2, 1, 24, 36, 0.029843139695927546, ["fnstcw  word ptr [rbp+retcount]", "movzx   r8d, word ptr [rbp+retcount]", "mov     eax, r8d", "or      ah, 3", "mov     word ptr [rbp+retcount], ax", "fldcw   word ptr [rbp+retcount]", "fxam", "fnstsw  ax", "test    ah, 2", "jz      loc_11B17"], ["fnstcw~[ord ptr [rbp+0]", "movzx~r8d,[ord ptr [rbp+0]", "mov~eax,r8d", "or~ah,0", "mov~[ord ptr [rbp+0],ax", "fldcw~[ord ptr [rbp+0]", "fxam~<TAG>", "fnstsw~ax", "test~ah,0", "jz~FOO"]], [2, 0, 344, 3, 1, 18, 1, 2, 23, 31, 0.21237609125285942, ["mov     rax, [dp+50h]", "sub     rsp, 10h", "mov     [rbp+maxlen], rcx", "mov     [rbp+fbp], rdx", "shl     rax, 5", "add     rax, [rbp+a.arg]", "fld     tbyte ptr [rax+10h]", "fld     st", "fstp    [rsp+3D0h+x.value]; x", "fstp    [rbp+n]", "call    rpl_isnanl", "test    eax, eax", "pop     r9", "mov     rdx, [rbp+fbp]", "mov     rcx, [rbp+maxlen]", "pop     r10", "fld     [rbp+n]", "jz      loc_11938"], ["mov~rax,[dp+0]", "sub~rsp,0", "mov~[rbp+0],rcx", "mov~[rbp+0],rdx", "shl~rax,0", "add~rax,[rbp+0]", "fld~<TAG>,[byte ptr [rax+0]", "fld~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "fstp~<TAG>,[rbp+0]", "call~FOO", "test~eax,eax", "pop~r9", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "pop~r10", "fld~<TAG>,[rbp+0]", "jz~FOO"]], [1, 0, 344, 0, 0, 3, 0, 0, 25, 35, 0.02087191297987893, ["fchs", "lea     rdi, [rcx+1]", "mov     byte ptr [rcx], 2Dh ; '-'"], ["fchs~<TAG>", "lea~rdi,[rcx+0]", "mov~<TAG>,0"]], [0, 0, 5, 0, 1, 5, 1, 2, 3, -1, 0.011356032430245406, ["mov     rdi, [rbp+d.dir]; ptr", "call    free", "mov     rdi, [rbp+a.arg]; ptr", "test    rdi, rdi", "jz      short loc_10974"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~rdi,[rbp+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    free"], ["call~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.02393098717210534, ["mov     rax, [dp+50h]; jumptable 0000000000010CFE case 1", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movsx   r9d, byte ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jnz     loc_10E5E"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movsx~r9d,[yte ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jnz~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 26, 35, 0.0013227307387062136, ["lea     rdi, [rcx+1]", "mov     byte ptr [rcx], 2Bh ; '+'", "jmp     loc_1196F"], ["lea~rdi,[rcx+0]", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 344, 0, 0, 3, 1, 1, 26, 35, 0.003649180685018907, ["test    byte ptr [rbp+flags], 8", "mov     rdi, rcx", "jz      loc_1196F"], ["test~[yte ptr [rbp+0],0", "mov~rdi,rcx", "jz~FOO"]], [0, 1, 344, 0, 0, 3, 0, 1, 27, 35, 0.0, ["lea     rdi, [rcx+1]", "mov     byte ptr [rcx], 20h ; ' '", "jmp     loc_1196F"], ["lea~rdi,[rcx+0]", "mov~<TAG>,<STR>", "jmp~FOO"]], [1, 0, 3, 0, 1, 3, 1, 1, 4, -1, 0.006314094085059367, ["call    ___errno_location", "xor     r15d, r15d", "mov     dword ptr [rax], 0Ch"], ["call~FOO", "xor~r15d,r15d", "mov~<TAG>,0"]], [0, 0, 344, 0, 0, 5, 0, 0, 38, 26, 0.18250312527556878, ["movsxd  rcx, eax", "mov     [rbp+retcount], eax", "lea     eax, [rcx+1]", "cmp     rax, r10", "jnb     loc_10D9F"], ["movsxd~rcx,eax", "mov~[rbp+0],eax", "lea~eax,[rcx+0]", "cmp~rax,r10", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 37, 27, 0.1830594502627305, ["cmp     ecx, eax", "jl      loc_11180"], ["cmp~ecx,eax", "jl~FOO"]], [0, 0, 344, 0, 0, 2, 1, 0, 37, 27, 0.1273698925735151, ["test    eax, eax", "jns     loc_11180"], ["test~eax,eax", "jns~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, -1, 0.005524346026361245, ["mov     rbx, [rbp+var_38]", "xor     rbx, fs:28h", "mov     rax, r15", "jnz     loc_11DE3"], ["mov~rbx,[rbp+0]", "xor~rbx,<TAG>", "mov~rax,r15", "jnz~FOO"]], [0, 0, 3, 0, 0, 3, 0, 1, 15, -1, 0.0005602153716873376, ["mov     rax, [rbp+lengthp]", "mov     [rax], length", "jmp     loc_10982"], ["mov~rax,[rbp+0]", "mov~<TAG>,length", "jmp~FOO"]], [1, 0, 3, 0, 1, 4, 1, 2, 3, -1, 7.00269214609172e-05, ["call    ___errno_location", "xor     r15d, r15d", "mov     dword ptr [rax], 16h", "jmp     loc_10982"], ["call~FOO", "xor~r15d,r15d", "mov~<TAG>,0", "jmp~FOO"]], [1, 1, 344, 1, 0, 5, 0, 1, 29, 31, 0.030344999299730786, ["movzx   esi, byte ptr [dp+48h]", "lea     rax, [p_0+3]", "sub     esi, 41h ; 'A'", "cmp     sil, 19h", "ja      loc_11B04"], ["movzx~esi,[yte ptr [dp+0]", "lea~rax,[p_0+0]", "sub~esi,0", "cmp~sil,<STR>", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 39, 25, 0.23597775737487225, ["lea     r12, [rcx+length]", "jmp     short loc_11204"], ["lea~r12,<TAG>", "jmp~FOO"]], [0, 0, 344, 0, 0, 3, 0, 0, 38, 26, 0.09111150879486254, ["lea     eax, [rcx+1]", "cmp     rax, r10", "jb      loc_11195"], ["lea~eax,[rcx+0]", "cmp~rax,r10", "jb~FOO"]], [2, 0, 344, 0, 0, 3, 0, 0, 30, 30, 0.01417267082678452, ["mov     esi, 4E49h", "mov     byte ptr [rdi+2], 46h ; 'F'", "mov     [rdi], si"], ["mov~esi,0", "mov~[yte ptr [rdi+0],0", "mov~<TAG>,si"]], [0, 0, 0, 0, 0, 8, 0, 0, 3, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 32, 0.006275968316708451, ["cmp     eax, 2", "jz      loc_111A0"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 344, 0, 0, 3, 0, 1, 31, 29, 0.03134871850733727, ["mov     word ptr [rbp+retcount], r8w", "fldcw   word ptr [rbp+retcount]", "jmp     loc_116AD"], ["mov~[ord ptr [rbp+0],r8w", "fldcw~[ord ptr [rbp+0]", "jmp~FOO"]], [2, 0, 344, 0, 0, 4, 0, 1, 30, 30, 0.01417267082678452, ["mov     r11d, 6E69h", "mov     byte ptr [rdi+2], 66h ; 'f'", "mov     [rdi], r11w", "jmp     loc_119A7"], ["mov~r11d,0", "mov~[yte ptr [rdi+0],0", "mov~<TAG>,r11w", "jmp~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.03118836982514017, ["mov     rax, [dp+50h]; jumptable 0000000000010CFE cases 7-10,15-17", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "mov     r9, [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      loc_111B8"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "mov~r9,[rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 41, 1, 0, 4, 1, 0, 10, -1, 0.07104620220662611, ["mov     r12, length", "xor     eax, eax", "add     r12, 1", "jb      loc_11D80"], ["mov~r12,length", "xor~eax,eax", "add~r12,0", "jb~FOO"]], [0, 0, 344, 0, 0, 3, 0, 1, 9, 22, 0.5744775213582111, ["mov     rax, [rbp+i]", "cmp     [rbp+d.count], rax", "jz      loc_119BA"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 0, 37, 0, 0, 2, 0, 0, 11, -1, 0.048287452731828016, ["cmp     allocated, r12", "jnb     short loc_11A1A"], ["cmp~allocated,r12", "jnb~FOO"]], [0, 0, 36, 0, 0, 2, 1, 1, 12, -1, 0.03661629915500848, ["test    allocated, allocated", "jnz     loc_11DB9"], ["test~allocated,allocated", "jnz~FOO"]], [1, 0, 32, 0, 0, 2, 0, 1, 13, -1, 0.0166119419243398, ["cmp     r12, 0Ch", "ja      loc_11D9E"], ["cmp~r12,0", "ja~FOO"]], [1, 0, 344, 0, 0, 4, 0, 1, 10, 21, 0.501423880736372, ["movzx   eax, byte ptr [dp+48h]", "mov     rdx, [dp+50h]", "cmp     al, 25h ; '%'", "jz      loc_111D8"], ["movzx~eax,[yte ptr [dp+0]", "mov~rdx,[dp+0]", "cmp~al,0", "jz~FOO"]], [1, 0, 28, 0, 0, 1, 0, 0, 14, -1, 0.010807488212134887, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [0, 0, 344, 0, 0, 2, 0, 0, 9, 24, 0.04103577597609748, ["cmp     allocated, rax", "jnb     short loc_10A4B"], ["cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 10, 30, 0.034297629977747, ["test    allocated, allocated", "jnz     loc_11350"], ["test~allocated,allocated", "jnz~FOO"]], [1, 0, 344, 1, 0, 4, 0, 0, 12, 27, 0.051259706509391385, ["mov     rax, length", "add     rax, 1", "mov     r12, rax", "jnb     loc_112E0"], ["mov~rax,length", "add~rax,0", "mov~r12,rax", "jnb~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 11, 29, 0.018370395729913943, ["cmp     rax, 0Ch", "ja      loc_11362"], ["cmp~rax,0", "ja~FOO"]], [0, 0, 27, 0, 0, 4, 1, 1, 15, -1, 0.02050621683447192, ["cmp     result_0, [rbp+result]", "setz    r13b", "test    result_0, result_0", "jz      loc_11D10"], ["cmp~result_0,[rbp+0]", "setz~r13b", "test~result_0,result_0", "jz~FOO"]], [0, 0, 28, 0, 0, 2, 0, 1, 16, -1, 0.0007313922908140241, ["mov     rbx, memory_size", "jmp     loc_119E6"], ["mov~rbx,memory_size", "jmp~FOO"]], [0, 0, 32, 1, 0, 3, 0, 0, 14, -1, 0.013203965079908498, ["add     allocated, allocated", "cmp     allocated, r12", "jnb     loc_119E6"], ["add~allocated,allocated", "cmp~allocated,r12", "jnb~FOO"]], [1, 0, 344, 0, 0, 1, 0, 0, 12, 28, 0.013989822754081014, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [0, 0, 344, 0, 0, 1, 0, 0, 14, 26, 0.0025754345559515102, ["mov     r12, allocated"], ["mov~r12,allocated"]], [0, 0, 26, 0, 0, 2, 1, 1, 16, -1, 0.005290922954824855, ["test    r13b, r13b", "jnz     loc_11D10"], ["test~r13b,r13b", "jnz~FOO"]], [1, 0, 344, 0, 0, 1, 0, 0, 14, 25, 0.056597314078523524, ["mov     byte ptr [result_0+length], 25h ; '%'"], ["mov~<TAG>,0"]], [0, 0, 344, 0, 0, 2, 0, 0, 13, 26, 0.046676833538226915, ["cmp     allocated, rax", "jnb     loc_111FF"], ["cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 20, 26, 0.0151180342665069, ["mov     result_0, memory", "jmp     loc_111FF"], ["mov~result_0,memory", "jmp~FOO"]], [0, 0, 344, 0, 1, 6, 0, 2, 21, 26, 0.0013266211232318202, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_111FF"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [0, 0, 344, 0, 0, 4, 1, 1, 13, 27, 0.03613000108930767, ["cmp     result_0, [rbp+result]", "setz    dl", "test    result_0, result_0", "jz      loc_11240"], ["cmp~result_0,[rbp+0]", "setz~dl", "test~result_0,result_0", "jz~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 12, 28, 0.01400538429218344, ["add     allocated, allocated", "cmp     allocated, rax", "jnb     loc_109FD"], ["add~allocated,allocated", "cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 13, 28, 0.0025754345559515102, ["mov     rbx, memory_size", "jmp     loc_109FD"], ["mov~rbx,memory_size", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 14, 26, 0.014670640046062153, ["test    dl, dl", "jnz     loc_11240"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 0, 18, -1, 0.0004979692192776334, ["mov     result_0, memory"], ["mov~result_0,memory"]], [0, 0, 344, 0, 0, 4, 0, 1, 15, 25, 0.0016631393846967834, ["mov     rax, [rdx+10h]; jumptable 00000000000112DC cases 3,4", "mov     r12, length", "mov     [rax], length", "jmp     loc_11204"], ["mov~rax,[rdx+0]", "mov~r12,length", "mov~<TAG>,length", "jmp~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 15, 25, 0.0016631393846967834, ["mov     rax, [rdx+10h]; jumptable 00000000000112DC case 2", "mov     r12, length", "mov     [rax], r14d", "jmp     loc_11204"], ["mov~rax,[rdx+0]", "mov~r12,length", "mov~<TAG>,r14d", "jmp~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 15, 25, 0.0016631393846967834, ["mov     rax, [rdx+10h]; jumptable 00000000000112DC case 1", "mov     r12, length", "mov     [rax], r14w", "jmp     loc_11204"], ["mov~rax,[rdx+0]", "mov~r12,length", "mov~<TAG>,r14w", "jmp~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 15, 25, 0.0016631393846967834, ["mov     rax, [rdx+10h]; jumptable 00000000000112DC case 0", "mov     r12, length", "mov     [rax], r14b", "jmp     loc_11204"], ["mov~rax,[rdx+0]", "mov~r12,length", "mov~<TAG>,r14b", "jmp~FOO"]], [0, 0, 344, 0, 1, 9, 0, 2, 29, 25, 0.22322248331025038, ["lea     rdi, [result_0+length]; dest", "mov     rsi, rcx; src", "mov     rdx, r8; n", "mov     qword ptr [rbp+has_width], rcx", "call    _memcpy", "mov     rcx, qword ptr [rbp+has_width]", "lea     rax, [rbp+tmpbuf]", "cmp     rcx, rax", "jz      loc_11204"], ["lea~rdi,<TAG>", "mov~rsi,rcx", "mov~rdx,r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "lea~rax,[rbp+0]", "cmp~rcx,rax", "jz~FOO"]], [0, 0, 344, 0, 1, 3, 0, 2, 30, 25, 0.0, ["mov     rdi, rcx; ptr", "call    free", "jmp     loc_11204"], ["mov~rdi,rcx", "call~FOO", "jmp~FOO"]], [1, 0, 10, 0, 0, 3, 0, 0, 12, -1, 0.018043603429762998, ["cmp     allocated, r12", "mov     byte ptr [result_0+length], 0", "jbe     short loc_11A3F"], ["cmp~allocated,r12", "mov~<TAG>,0", "jbe~FOO"]], [0, 0, 11, 0, 1, 6, 0, 2, 19, -1, 4.279422978167162e-05, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_11A1A"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 18, -1, 0.0005641057562129441, ["mov     result_0, rcx", "jmp     loc_11A1A"], ["mov~result_0,rcx", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 8, 23, 0.5205178879880488, ["mov     r14, length", "jmp     loc_10A5A"], ["mov~r14,length", "jmp~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 13, -1, 0.002528749941644232, ["cmp     result_0, [rbp+result]", "jz      short loc_11A3F"], ["cmp~result_0,[rbp+0]", "jz~FOO"]], [1, 0, 344, 1, 0, 4, 1, 0, 27, 4, 0.23969437139166835, ["mov     rax, length", "xor     edx, edx", "add     rax, 2", "jb      loc_11DE8"], ["mov~rax,length", "xor~edx,edx", "add~rax,0", "jb~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 26, 5, 0.23872177526026672, ["mov     rax, [dp+40h]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      short loc_10C54"], ["mov~rax,[dp+0]", "cmp~rax,0", "jz~FOO"]], [0, 0, 344, 0, 0, 5, 0, 0, 28, 5, 0.00265324224646364, ["mov     eax, dword ptr [rbp+n]", "mov     edx, [r8+10h]", "mov     [rbp+rax*4+prefixes], edx", "lea     eax, [rax+1]", "mov     dword ptr [rbp+n], eax"], ["mov~eax,[word ptr [rbp+0]", "mov~edx,[r8+0]", "mov~[rbp+0],edx", "lea~eax,[rax+0]", "mov~[word ptr [rbp+0],eax"]], [0, 0, 344, 0, 0, 2, 0, 1, 45, 35, 0.015332005415415259, ["mov     result_0, rcx", "jmp     loc_10CC0"], ["mov~result_0,rcx", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 44, 36, 0.018323711115606666, ["test    length, length", "jz      loc_11230"], ["test~length,length", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 45, 36, 0.0023264499463126935, ["test    r12b, r12b", "jz      loc_11230"], ["test~r12b,r12b", "jz~FOO"]], [0, 0, 344, 0, 1, 7, 1, 2, 15, 25, 0.014919624655700969, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "mov     qword ptr [rbp+n], cp_0", "mov     qword ptr [rbp+has_width], n_0", "call    _realloc", "test    memory, memory", "jz      loc_113A0"], ["mov~rsi,rbx", "mov~rdi,result_0", "mov~[word ptr [rbp+0],cp_0", "mov~[word ptr [rbp+0],n_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [0, 0, 8, 0, 1, 5, 1, 1, 14, -1, 0.0, ["mov     rdi, result_0; ptr", "mov     rsi, r12; size", "call    _realloc", "test    memory, memory", "cmovnz  result_0, memory"], ["mov~rdi,result_0", "mov~rsi,r12", "call~FOO", "test~memory,memory", "cmovnz~result_0,memory"]], [0, 0, 344, 0, 0, 3, 0, 0, 16, 24, 0.0151180342665069, ["mov     rcx, qword ptr [rbp+has_width]", "mov     r8, qword ptr [rbp+n]", "mov     result_0, memory"], ["mov~rcx,[word ptr [rbp+0]", "mov~r8,[word ptr [rbp+0]", "mov~result_0,memory"]], [0, 0, 7, 0, 0, 3, 1, 1, 13, -1, 0.010644092062059414, ["mov     rax, [rbp+buf_malloced]", "test    rax, rax", "jz      short loc_11A53"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 6, 0, 1, 2, 0, 1, 14, -1, 0.0, ["mov     rdi, rax; ptr", "call    free"], ["mov~rdi,rax", "call~FOO"]], [0, 0, 344, 0, 1, 4, 0, 1, 10, 23, 0.05095625651639408, ["lea     rdi, [result_0+length]; dest", "mov     rdx, rcx; n", "mov     rsi, r8; src", "call    _memcpy"], ["lea~rdi,<TAG>", "mov~rdx,rcx", "mov~rsi,r8", "call~FOO"]], [0, 0, 344, 0, 1, 10, 0, 2, 17, 24, 0.0013266211232318202, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "mov     qword ptr [rbp+n], r8", "mov     qword ptr [rbp+has_width], rcx", "call    _memcpy", "mov     rcx, qword ptr [rbp+has_width]", "mov     result_0, rax", "mov     r8, qword ptr [rbp+n]", "jmp     loc_10A4B"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "mov~[word ptr [rbp+0],r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "mov~result_0,rax", "mov~r8,[word ptr [rbp+0]", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 10, 24, 0.0025754345559515102, ["mov     r14, allocated", "jmp     loc_10A4B"], ["mov~r14,allocated", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 16, 24, 0.016522463080250852, ["mov     result_0, r9", "jmp     loc_10A4B"], ["mov~result_0,r9", "jmp~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 14, -1, 0.005633276793078228, ["mov     rdi, [rbp+d.dir]; ptr", "call    free", "mov     rdi, [rbp+a.arg]; ptr", "test    rdi, rdi", "jz      short loc_11A70"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~rdi,[rbp+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 15, -1, 0.0, ["call    free"], ["call~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 15, 25, 0.019514168780442258, ["test    length, length", "jz      loc_117F0"], ["test~length,length", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 30, 26, 0.03885716064175783, ["cmp     allocated, rax", "jnb     loc_11760"], ["cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 29, 27, 0.046178864318949284, ["test    rsi, rsi", "jz      loc_11A7F"], ["test~rsi,rsi", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 29, 42, 0.036211699164345405, ["test    allocated, allocated", "jnz     loc_11408"], ["test~allocated,allocated", "jnz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 28, 36, 0.13081417967351894, ["cmp     allocated, rax", "jnb     short loc_10CB2"], ["cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 16, 25, 0.0023264499463126935, ["test    dl, dl", "jz      loc_117F0"], ["test~dl,dl", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 31, 32, 0.034297629977747, ["test    allocated, allocated", "jnz     loc_11D4C"], ["test~allocated,allocated", "jnz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 32, 31, 0.018370395729913943, ["cmp     rax, 0Ch", "ja      loc_11D5E"], ["cmp~rax,0", "ja~FOO"]], [1, 0, 344, 0, 0, 1, 0, 0, 33, 30, 0.013989822754081014, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [2, 0, 344, 2, 0, 7, 0, 1, 12, 19, 0.4481411742736652, ["mov     r8, [rbp+a.arg]", "shl     rdx, 5", "add     rdx, r8", "cmp     al, 6Eh ; 'n'", "mov     edi, [rdx]", "mov     dword ptr [rbp+has_width], edi", "jz      loc_112C0"], ["mov~r8,[rbp+0]", "shl~rdx,0", "add~rdx,r8", "cmp~al,0", "mov~edi,<TAG>", "mov~[word ptr [rbp+0],edi", "jz~FOO"]], [0, 0, 344, 0, 0, 4, 1, 1, 34, 29, 0.03612611070478206, ["cmp     result_0, [rbp+result]", "setz    dl", "test    result_0, result_0", "jz      loc_11B71"], ["cmp~result_0,[rbp+0]", "setz~dl", "test~result_0,result_0", "jz~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 33, 30, 0.01400538429218344, ["add     allocated, allocated", "cmp     allocated, rax", "jnb     loc_11AA0"], ["add~allocated,allocated", "cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 34, 30, 0.0025754345559515102, ["mov     rbx, memory_size", "jmp     loc_11AA0"], ["mov~rbx,memory_size", "jmp~FOO"]], [2, 0, 344, 0, 0, 4, 1, 0, 13, 18, 0.4331398515429265, ["and     eax, 0FFFFFFDFh", "lea     ecx, [rax-45h]", "cmp     cl, 2", "jbe     short loc_10AB6"], ["and~eax,0", "lea~ecx,[rax-45h]+0]", "cmp~cl,0", "jbe~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 35, 28, 0.014643407354382907, ["test    dl, dl", "jnz     loc_11B71"], ["test~dl,dl", "jnz~FOO"]], [1, 0, 344, 0, 0, 3, 1, 0, 18, 42, 0.027053733991067676, ["xor     edx, edx", "mov     r10, 1999999999999999h", "mov     r9, rsi"], ["xor~edx,edx", "mov~r10,0", "mov~r9,rsi"]], [1, 0, 344, 0, 0, 3, 0, 1, 17, 39, 0.03629728762390875, ["mov     rsi, [dp+28h]", "cmp     rsi, 0FFFFFFFFFFFFFFFFh", "jz      loc_11C69"], ["mov~rsi,[dp+0]", "cmp~rsi,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 37, 35, 0.009609249778248083, ["mov     byte ptr [rdi+1], 0", "jmp     loc_10CC0"], ["mov~[yte ptr [rdi+0],0", "jmp~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 36, 28, 0.13897879999792506, ["mov     rdi, [rbp+fbp]", "cmp     byte ptr [rdi+1], 0", "jnz     loc_111C8"], ["mov~rdi,[rbp+0]", "cmp~[yte ptr [rdi+0],0", "jnz~FOO"]], [0, 0, 344, 1, 0, 4, 0, 1, 14, 26, 0.013320676615676694, ["lea     rcx, off_16554", "movsxd  rax, dword ptr [rcx+rax*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [1, 0, 344, 0, 0, 3, 0, 0, 16, 16, 0.0, ["mov     rdi, [rbp+buf]", "lea     fbp_0, [rdi+2]", "mov     byte ptr [rdi+1], 27h ; '''"], ["mov~rdi,[rbp+0]", "lea~fbp_0,[rdi+0]", "mov~[yte ptr [rdi+0],0"]], [1, 0, 344, 0, 0, 2, 1, 1, 16, 15, 0.23057531006364668, ["test    al, 2", "jz      short loc_10AF5"], ["test~al,0", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 14, 32, 0.034297629977747, ["test    allocated, allocated", "jnz     loc_118A0"], ["test~allocated,allocated", "jnz~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 37, 26, 0.015102472728404476, ["mov     result_0, memory", "mov     rcx, qword ptr [rbp+has_width]", "mov     r8, qword ptr [rbp+n]", "jmp     loc_11760"], ["mov~result_0,memory", "mov~rcx,[word ptr [rbp+0]", "mov~r8,[word ptr [rbp+0]", "jmp~FOO"]], [2, 0, 344, 1, 0, 2, 0, 0, 17, 15, 0.0, ["mov     byte ptr [r12], 2Dh ; '-'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [1, 0, 344, 0, 0, 2, 1, 1, 17, 14, 0.231244456202051, ["test    al, 4", "jz      short loc_10B02"], ["test~al,0", "jz~FOO"]], [1, 0, 344, 0, 0, 1, 0, 0, 16, 30, 0.013989822754081014, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [2, 0, 344, 1, 0, 2, 0, 0, 18, 14, 0.0, ["mov     byte ptr [r12], 2Bh ; '+'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [1, 0, 344, 0, 0, 3, 1, 1, 17, 37, 0.16561366925506918, ["xor     edx, edx", "mov     dword ptr [rbp+has_width], 0", "jmp     loc_115B1"], ["xor~edx,edx", "mov~[word ptr [rbp+0],0", "jmp~FOO"]], [0, 0, 344, 0, 0, 6, 0, 1, 16, 38, 0.20391061452513967, ["mov     eax, [dp+10h]", "mov     rdi, [dp+20h]", "mov     [rbp+flags], eax", "mov     flags_0, [dp+18h]", "cmp     rax, rdi", "jz      loc_11AF3"], ["mov~eax,[dp+0]", "mov~rdi,[dp+0]", "mov~[rbp+0],eax", "mov~flags_0,[dp+0]", "cmp~rax,rdi", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 1, 1, 18, 13, 0.23191360234045533, ["test    al, 8", "jz      short loc_10B0F"], ["test~al,0", "jz~FOO"]], [1, 1, 344, 1, 0, 2, 0, 0, 19, 13, 0.0, ["mov     byte ptr [r12], 20h ; ' '", "add     r12, 1"], ["mov~<TAG>,<STR>", "add~r12,0"]], [0, 0, 344, 0, 0, 4, 1, 1, 17, 29, 0.03613000108930767, ["cmp     result_0, [rbp+result]", "setz    dl", "test    result_0, result_0", "jz      loc_117A0"], ["cmp~result_0,[rbp+0]", "setz~dl", "test~result_0,result_0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 1, 1, 19, 12, 0.23258274847885965, ["test    al, 10h", "jz      short loc_10B1C"], ["test~al,0", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 18, 28, 0.014670640046062153, ["test    dl, dl", "jnz     loc_117A0"], ["test~dl,dl", "jnz~FOO"]], [2, 0, 344, 1, 0, 2, 0, 0, 20, 12, 0.0, ["mov     byte ptr [r12], 23h ; '#'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [1, 0, 344, 0, 0, 2, 1, 1, 25, 36, 0.0069715690698868675, ["test    byte ptr [rbp+flags], 4", "jz      loc_11CD9"], ["test~[yte ptr [rbp+0],0", "jz~FOO"]], [2, 0, 344, 1, 0, 2, 0, 0, 21, 11, 0.0, ["mov     byte ptr [r12], 30h ; '0'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [0, 1, 344, 0, 0, 2, 1, 1, 20, 11, 0.23325189461726398, ["test    al, 20h", "jz      short loc_10B29"], ["test~al,<STR>", "jz~FOO"]], [0, 0, 344, 0, 1, 5, 1, 2, 19, 27, 0.014919624655700969, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      short loc_113A0"], ["mov~rsi,rbx", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 21, 10, 0.23392104075566827, ["mov     rsi, [dp+18h]; src", "mov     rdx, [dp+20h]", "cmp     rsi, rdx", "jz      short loc_10B66"], ["mov~rsi,[dp+0]", "mov~rdx,[dp+0]", "cmp~rsi,rdx", "jz~FOO"]], [2, 0, 344, 0, 0, 4, 0, 1, 25, 29, 0.0892668181323042, ["mov     edi, 616Eh", "mov     byte ptr [rcx+2], 6Eh ; 'n'", "mov     [rcx], di", "jmp     loc_116AD"], ["mov~edi,0", "mov~[yte ptr [rcx+0],0", "mov~<TAG>,di", "jmp~FOO"]], [0, 1, 344, 0, 0, 6, 0, 1, 24, 30, 0.18053329391077014, ["fstp    st", "movzx   edi, byte ptr [dp+48h]", "lea     rax, [rcx+3]", "lea     esi, [rdi-41h]", "cmp     sil, 19h", "ja      loc_11B30"], ["fstp~<TAG>,<TAG>", "movzx~edi,[yte ptr [dp+0]", "lea~rax,[rcx+0]", "lea~esi,[rdi-41h]+0]", "cmp~sil,<STR>", "ja~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 25, 6, 0.23306515616003484, ["mov     dword ptr [rbp+n], 0", "jmp     loc_10C1F"], ["mov~[word ptr [rbp+0],0", "jmp~FOO"]], [2, 0, 344, 0, 0, 6, 0, 1, 24, 7, 0.23760134451689205, ["movzx   eax, byte ptr [dp+48h]", "mov     byte ptr [fbp_0+1], 0", "mov     [fbp_0], al", "mov     rax, [dp+28h]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      loc_11338"], ["movzx~eax,[yte ptr [dp+0]", "mov~[yte ptr [fbp_0+0],0", "mov~<TAG>,al", "mov~rax,[dp+0]", "cmp~rax,0", "jz~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 2, -1, 5.446538335849115e-05, ["mov     rdi, [rbp+d.dir]; ptr", "call    free", "mov     rdi, [rbp+a.arg]; ptr", "test    rdi, rdi", "jz      short loc_11B5E"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~rdi,[rbp+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    free"], ["call~FOO"]], [0, 0, 344, 2, 1, 10, 0, 1, 22, 10, 0.0, ["mov     rcx, rdx", "mov     rdi, fbp_0; dest", "mov     [rbp+fbp], r8", "sub     rcx, rsi", "mov     rdx, n_1; n", "mov     qword ptr [rbp+n], n_1", "call    _memcpy", "mov     rcx, qword ptr [rbp+n]", "mov     r8, [rbp+fbp]", "add     fbp_0, rcx"], ["mov~rcx,rdx", "mov~rdi,fbp_0", "mov~[rbp+0],r8", "sub~rcx,rsi", "mov~rdx,n_1", "mov~[word ptr [rbp+0],n_1", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "mov~r8,[rbp+0]", "add~fbp_0,rcx"]], [0, 0, 344, 0, 0, 4, 0, 1, 22, 9, 0.2345901868940726, ["mov     rsi, [dp+30h]; src", "mov     rdx, [dp+38h]", "cmp     rsi, rdx", "jz      short loc_10BA3"], ["mov~rsi,[dp+0]", "mov~rdx,[dp+0]", "cmp~rsi,rdx", "jz~FOO"]], [0, 0, 344, 0, 0, 3, 0, 0, 43, 39, 0.010006068999859946, ["cmp     rsi, rax", "mov     allocated, rsi", "jnb     short loc_10DF8"], ["cmp~rsi,rax", "mov~allocated,rsi", "jnb~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 39, 35, 0.008709274157991111, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "jz      loc_10CC0"], ["cmp~allocated,0", "jz~FOO"]], [1, 0, 344, 1, 0, 7, 1, 0, 40, 36, 0.01886577135950784, ["lea     rsi, [allocated+allocated]", "lea     edx, [rcx+2]", "test    allocated, allocated", "mov     rax, 0FFFFFFFFFFFFFFFFh", "cmovns  rax, rsi", "add     rdx, length", "jb      loc_11380"], ["lea~rsi,<TAG>", "lea~edx,[rcx+0]", "test~allocated,allocated", "mov~rax,0", "cmovns~rax,rsi", "add~rdx,length", "jb~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 38, 36, 0.035149624188854825, ["test    allocated, allocated", "js      loc_11380"], ["test~allocated,allocated", "js~FOO"]], [0, 0, 344, 2, 1, 10, 0, 1, 23, 9, 0.0, ["mov     rcx, rdx", "mov     rdi, fbp_0; dest", "mov     [rbp+fbp], r8", "sub     rcx, rsi", "mov     rdx, n_2; n", "mov     qword ptr [rbp+n], n_2", "call    _memcpy", "mov     rcx, qword ptr [rbp+n]", "mov     r8, [rbp+fbp]", "add     fbp_0, rcx"], ["mov~rcx,rdx", "mov~rdi,fbp_0", "mov~[rbp+0],r8", "sub~rcx,rsi", "mov~rdx,n_2", "mov~[word ptr [rbp+0],n_2", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "mov~r8,[rbp+0]", "add~fbp_0,rcx"]], [2, 0, 344, 0, 0, 3, 0, 1, 28, 3, 0.10688053407198768, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "jz      loc_10CB2"], ["cmp~allocated,0", "mov~edx,0", "jz~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 23, 8, 0.23525933303247692, ["mov     edi, dword ptr [rbp+has_width]", "cmp     edi, 10h", "ja      short loc_10BDF"], ["mov~edi,[word ptr [rbp+0]", "cmp~edi,0", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 36, 27, 0.019514168780442258, ["test    length, length", "jz      loc_11D78"], ["test~length,length", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 37, 27, 0.0023264499463126935, ["test    dl, dl", "jz      loc_11D78"], ["test~dl,dl", "jz~FOO"]], [2, 0, 344, 1, 0, 5, 1, 1, 24, 9, 0.011577784348204976, ["mov     eax, 1", "mov     ecx, edi", "shl     rax, cl", "test    eax, 14180h", "jnz     short loc_10BD6"], ["mov~eax,0", "mov~ecx,edi", "shl~rax,cl", "test~eax,0", "jnz~FOO"]], [1, 0, 344, 0, 0, 2, 1, 1, 25, 9, 0.0069715690698868675, ["test    ah, 10h", "jnz     loc_114A0"], ["test~ah,0", "jnz~FOO"]], [1, 0, 344, 0, 0, 2, 1, 1, 26, 8, 0.0036530710695445133, ["test    ah, 6", "jz      short loc_10BDF"], ["test~ah,0", "jz~FOO"]], [2, 0, 344, 1, 0, 2, 0, 0, 27, 9, 1.5561538102426044e-05, ["mov     byte ptr [r12], 6Ch ; 'l'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [2, 0, 344, 1, 0, 2, 0, 0, 25, 8, 0.005290922954824854, ["mov     byte ptr [r12], 6Ch ; 'l'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [3, 0, 344, 0, 1, 10, 0, 2, 34, 30, 0.023770897848876746, ["mov     r9, [rbp+var_388]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     eax, 1", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "mov     r10, [rbp+maxlen]", "jmp     loc_10D66"], ["mov~r9,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "mov~eax,0", "mov~[rbp+0],maxlen_0", "call~FOO", "mov~r10,[rbp+0]", "jmp~FOO"]], [0, 0, 344, 0, 1, 10, 0, 2, 38, 26, 0.0013266211232318202, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "mov     qword ptr [rbp+n], r8", "mov     qword ptr [rbp+has_width], rcx", "call    _memcpy", "mov     rcx, qword ptr [rbp+has_width]", "mov     result_0, rax", "mov     r8, qword ptr [rbp+n]", "jmp     loc_11760"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "mov~[word ptr [rbp+0],r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "mov~result_0,rax", "mov~r8,[word ptr [rbp+0]", "jmp~FOO"]], [2, 0, 344, 1, 0, 3, 0, 1, 26, 8, 0.0013188403541806067, ["mov     byte ptr [r12], 4Ch ; 'L'", "add     r12, 1", "jmp     loc_10BDF"], ["mov~<TAG>,0", "add~r12,0", "jmp~FOO"]], [1, 0, 344, 1, 0, 3, 0, 1, 20, 36, 0.031885591571870965, ["add     rcx, 1", "cmp     r8, digitp", "jz      loc_11DD8"], ["add~rcx,0", "cmp~r8,digitp", "jz~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 19, 37, 0.042988749007951944, ["mov     rdi, [dp+40h]", "cmp     rdi, 0FFFFFFFFFFFFFFFFh", "jz      loc_11BF1"], ["mov~rdi,[dp+0]", "cmp~rdi,0", "jz~FOO"]], [1, 0, 344, 1, 0, 4, 0, 1, 34, 31, 0.0011593345886307402, ["sub     rsp, 10h", "mov     r9, [rbp+var_388]", "fstp    [rsp+3D0h+x.value]", "jmp     loc_10D39"], ["sub~rsp,0", "mov~r9,[rbp+0]", "fstp~<TAG>,<TAG>", "jmp~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 31, 0.02692599969914362, ["cmp     eax, 2", "jnz     loc_113F0"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 344, 0, 0, 2, 1, 0, 21, 41, 0.024836214811471965, ["xor     eax, eax", "mov     r10, 1999999999999999h"], ["xor~eax,eax", "mov~r10,0"]], [0, 0, 344, 1, 0, 3, 0, 0, 31, 40, 0.01614509578126702, ["add     allocated, allocated", "cmp     allocated, rax", "jnb     loc_10C80"], ["add~allocated,allocated", "cmp~allocated,rax", "jnb~FOO"]], [1, 0, 344, 0, 0, 3, 0, 0, 26, 6, 0.0026532422464636404, ["mov     eax, [rax+10h]", "mov     dword ptr [rbp+n], 1", "mov     [rbp+prefixes], eax"], ["mov~eax,[rax+0]", "mov~[word ptr [rbp+0],0", "mov~[rbp+0],eax"]], [0, 0, 344, 0, 0, 1, 0, 0, 32, 42, 0.0001050403821913758, ["nop     word ptr [memory_size+memory_size+00h]"], ["nop~[ord ptr [memory_size+0]"]], [0, 0, 344, 0, 0, 1, 0, 0, 23, 39, 0.0027699537822318356, ["mov     rdx, r9"], ["mov~rdx,r9"]], [1, 0, 344, 0, 0, 3, 0, 1, 22, 40, 0.009702619006862638, ["lea     rax, [digitp+1]", "cmp     byte ptr [digitp-1], 30h ; '0'", "jnz     short loc_11CCB"], ["lea~rax,[digitp+0]", "cmp~[yte ptr [digitp-1]+0],0", "jnz~FOO"]], [1, 0, 344, 1, 0, 7, 0, 1, 22, 40, 0.025637634023746903, ["movsx   esi, byte ptr [digitp]", "lea     r9, [digitp+1]", "sub     esi, 30h ; '0'", "cmp     rax, r10", "movsxd  rcx, esi", "mov     rsi, rdi", "ja      short loc_11C26"], ["movsx~esi,<TAG>", "lea~r9,[digitp+0]", "sub~esi,0", "cmp~rax,r10", "movsxd~rcx,esi", "mov~rsi,rdi", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 25, 37, 0.027878495510496256, ["cmp     r8, digitp", "jnz     short loc_11C0A"], ["cmp~r8,digitp", "jnz~FOO"]], [0, 0, 344, 1, 0, 2, 0, 0, 23, 40, 0.0, ["lea     rsi, [rax+rax*4]", "add     rsi, rsi"], ["lea~rsi,<TAG>", "add~rsi,rsi"]], [1, 0, 344, 0, 0, 2, 0, 1, 30, 41, 0.018144753427428766, ["cmp     rax, 0Ch", "ja      loc_11420"], ["cmp~rax,0", "ja~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 30, 1, 0.009500319011531099, ["jns     loc_11420"], ["jns~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 23, 39, 0.02630678016215122, ["add     rcx, rsi", "mov     rax, precision", "jnb     short loc_11C64"], ["add~rcx,rsi", "mov~rax,precision", "jnb~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 25, 39, 0.009500319011531099, ["lea     rcx, [digitp+1]", "cmp     byte ptr [digitp-1], 30h ; '0'", "jz      short loc_11C57"], ["lea~rcx,[digitp+0]", "cmp~[yte ptr [digitp-1]+0],0", "jz~FOO"]], [0, 0, 344, 0, 0, 5, 1, 1, 33, 39, 0.015149157342711753, ["cmp     result_0, [rbp+result]", "mov     rbx, memory_size", "setz    dl", "test    result_0, result_0", "jnz     loc_10C93"], ["cmp~result_0,[rbp+0]", "mov~rbx,memory_size", "setz~dl", "test~result_0,result_0", "jnz~FOO"]], [1, 0, 344, 0, 0, 4, 0, 1, 27, 39, 0.0025754345559515102, ["mov     r9, digitp", "lea     digitp, [r9+1]", "cmp     byte ptr [digitp-1], 30h ; '0'", "jnz     short loc_11C41"], ["mov~r9,digitp", "lea~digitp,[r9+0]", "cmp~[yte ptr [digitp-1]+0],0", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 34, 39, 0.00016469294491734226, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 344, 0, 0, 1, 0, 0, 26, 38, 0.01024727284044755, ["mov     rax, rdi"], ["mov~rax,rdi"]], [0, 0, 344, 0, 0, 2, 0, 1, 24, 38, 0.014627845816280481, ["mov     rcx, digitp", "jmp     short loc_11C5A"], ["mov~rcx,digitp", "jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 26, 36, 0.02774622243662564, ["jmp     loc_115EB"], ["jmp~FOO"]], [0, 0, 344, 0, 0, 4, 1, 1, 32, 39, 0.03050450506528065, ["cmp     result_0, [rbp+result]", "setz    dl", "test    result_0, result_0", "jz      loc_11450"], ["cmp~result_0,[rbp+0]", "setz~dl", "test~result_0,result_0", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 33, 38, 0.02724695642250613, ["test    dl, dl", "jnz     loc_11450"], ["test~dl,dl", "jnz~FOO"]], [1, 0, 344, 0, 0, 1, 0, 0, 31, 40, 0.013795303527800687, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [1, 0, 344, 1, 0, 7, 0, 1, 19, 41, 0.02777734551283049, ["movsx   ecx, byte ptr [digitp]", "lea     r8, [digitp+1]", "sub     ecx, 30h ; '0'", "cmp     width_0, r10", "movsxd  rax, ecx", "mov     rcx, r9", "ja      short loc_11C94"], ["movsx~ecx,<TAG>", "lea~r8,[digitp+0]", "sub~ecx,0", "cmp~width_0,r10", "movsxd~rax,ecx", "mov~rcx,r9", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 22, 38, 0.01438275159116727, ["cmp     rdi, digitp", "jnz     short loc_11C78"], ["cmp~rdi,digitp", "jnz~FOO"]], [0, 0, 344, 1, 0, 2, 0, 0, 20, 41, 0.0, ["lea     rcx, [width_0+width_0*4]", "add     rcx, rcx"], ["lea~rcx,<TAG>", "add~rcx,rcx"]], [0, 0, 344, 0, 1, 6, 0, 2, 36, 36, 0.0013266211232318204, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_10CB2"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 20, 40, 0.028446491651234806, ["add     rax, rcx", "mov     width_0, rax", "jnb     short loc_11CC6"], ["add~rax,rcx", "mov~width_0,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 21, 39, 0.017837413049905854, ["cmp     rdi, digitp", "jz      loc_11D70"], ["cmp~rdi,digitp", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 24, 41, 6.224615240970417e-05, ["mov     r8, digitp", "jmp     short loc_11CA5"], ["mov~r8,digitp", "jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 35, 36, 0.027512799365089245, ["mov     result_0, memory"], ["mov~result_0,memory"]], [0, 0, 344, 0, 0, 2, 0, 1, 21, 39, 0.008609420955167209, ["mov     rax, digitp", "jmp     short loc_11CB2"], ["mov~rax,digitp", "jmp~FOO"]], [1, 0, 344, 0, 0, 3, 0, 0, 29, 35, 0.24093151367081123, ["mov     byte ptr [result_0+length], 0", "mov     [rbp+fbp], fbp_0", "xchg    ax, ax"], ["mov~<TAG>,0", "mov~[rbp+0],fbp_0", "xchg~ax,ax"]], [1, 0, 344, 0, 0, 2, 0, 1, 23, 37, 0.031068610821493595, ["mov     dword ptr [rbp+has_width], 1", "jmp     loc_115B1"], ["mov~[word ptr [rbp+0],0", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 22, 38, 0.01407152082911875, ["mov     rdx, rsi", "jmp     loc_11CB7"], ["mov~rdx,rsi", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 23, 39, 0.004933007578469056, ["cmp     rdi, digitp", "jz      loc_11D70"], ["cmp~rdi,digitp", "jz~FOO"]], [0, 0, 344, 0, 0, 3, 0, 0, 36, 28, 0.18268597334827227, ["movsxd  rdx, ecx", "cmp     rdx, r10", "jnb     short loc_10D8B"], ["movsxd~rdx,ecx", "cmp~rdx,r10", "jnb~FOO"]], [2, 0, 344, 0, 1, 13, 2, 1, 35, 29, 0.1935907211735477, ["mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen_0", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "pop     rdx", "pop     rcx", "movsxd  rcx, [rbp+retcount]", "mov     r10, [rbp+maxlen]", "test    ecx, ecx", "jns     loc_10D75"], ["mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen_0", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "pop~rdx", "pop~rcx", "movsxd~rcx,[rbp+0]", "mov~r10,[rbp+0]", "test~ecx,ecx", "jns~FOO"]], [0, 0, 344, 0, 0, 3, 1, 1, 35, 29, 0.12740490603424603, ["movsxd  rcx, [rbp+retcount]", "test    ecx, ecx", "js      loc_10EAD"], ["movsxd~rcx,[rbp+0]", "test~ecx,ecx", "js~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 44, 35, 0.01388089198736403, ["mov     result_0, memory", "jmp     loc_10CC0"], ["mov~result_0,memory", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 40, 35, 0.02471172250665256, ["cmp     allocated, rdx", "jnb     loc_10CC0"], ["cmp~allocated,rdx", "jnb~FOO"]], [0, 0, 344, 0, 1, 6, 0, 2, 46, 35, 0.0013266211232318202, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_10CC0"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 29, 28, 0.007228334448576897, ["test    pad, pad", "jz      loc_11720"], ["test~pad,pad", "jz~FOO"]], [1, 0, 344, 2, 0, 6, 1, 1, 28, 29, 0.025349745568852024, ["sub     rdx, r8", "lea     rsi, [p_0+pad]", "mov     r8, end", "sub     r8, rcx", "test    byte ptr [rbp+flags], 2", "jnz     loc_11CF5"], ["sub~rdx,r8", "lea~rsi,<TAG>", "mov~r8,end", "sub~r8,rcx", "test~[yte ptr [rbp+0],0", "jnz~FOO"]], [1, 0, 344, 1, 1, 10, 1, 2, 15, 20, 0.2130218950841101, ["fld     tbyte ptr [rdx+10h]", "sub     rsp, 10h", "fld     st", "fstp    [rsp+3D0h+x.value]; x", "fstp    [rbp+has_width]", "call    rpl_isnanl", "test    eax, eax", "pop     r11", "pop     r12", "jnz     short loc_11558"], ["fld~<TAG>,[byte ptr [rdx+0]", "sub~rsp,0", "fld~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "fstp~<TAG>,[rbp+0]", "call~FOO", "test~eax,eax", "pop~r11", "pop~r12", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 22, 32, 0.20689842984080548, ["lea     rcx, [rbp+tmpbuf]"], ["lea~rcx,[rbp+0]"]], [0, 0, 344, 0, 0, 1, 0, 1, 31, 28, 0.0026610230155148535, ["jmp     loc_11720"], ["jmp~FOO"]], [1, 1, 344, 1, 0, 4, 0, 1, 30, 29, 0.0023264499463126935, ["add     p_0, 1", "mov     byte ptr [p_0-1], 20h ; ' '", "cmp     end, p_0", "jnz     short loc_11CFE"], ["add~p_0,0", "mov~[yte ptr [p_0-1]+0],<STR>", "cmp~end,p_0", "jnz~FOO"]], [1, 0, 344, 0, 0, 9, 1, 1, 16, 19, 0.010317299761908467, ["fld     [rbp+has_width]", "mov     edx, 0", "fld     st", "fadd    st, st(1)", "fucomip st, st(1)", "setnp   al", "cmovnz  eax, edx", "test    al, al", "jz      short loc_11531"], ["fld~<TAG>,[rbp+0]", "mov~edx,0", "fld~<TAG>,<TAG>", "fadd~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "setnp~al", "cmovnz~eax,edx", "test~al,al", "jz~FOO"]], [0, 0, 14, 0, 0, 2, 1, 1, 17, -1, 0.007858576741725153, ["test    length, length", "jz      loc_11DD0"], ["test~length,length", "jz~FOO"]], [1, 0, 344, 0, 0, 8, 1, 1, 17, 19, 0.003921507601811363, ["fldz", "mov     edx, 1", "fucomip st, st(1)", "fstp    st", "setp    al", "cmovnz  eax, edx", "test    al, al", "jnz     short loc_11558"], ["fldz~<TAG>", "mov~edx,0", "fucomip~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "setp~al", "cmovnz~eax,edx", "test~al,al", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 18, 18, 0.0010504038219137579, ["jmp     short loc_11533"], ["jmp~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 18, -1, 0.002482065327336954, ["test    r13b, r13b", "jz      loc_11DD0"], ["test~r13b,r13b", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 17, 18, 0.004396134513935357, ["fstp    st"], ["fstp~<TAG>,<TAG>"]], [1, 0, 344, 1, 0, 2, 0, 0, 34, 31, 0.0037970152969919544, ["sub     rsp, 8", "push    [rbp+var_388]"], ["sub~rsp,0", "push~[rbp+0]"]], [0, 0, 344, 0, 0, 2, 0, 1, 37, 26, 0.016522463080250852, ["mov     result_0, r9", "jmp     loc_11760"], ["mov~result_0,r9", "jmp~FOO"]], [2, 0, 344, 0, 1, 10, 1, 1, 35, 30, 0.007959726739390922, ["mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "pop     rsi", "pop     rdi", "mov     r10, [rbp+maxlen]"], ["mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "pop~rsi", "pop~rdi", "mov~r10,[rbp+0]"]], [5, 0, 344, 3, 1, 17, 1, 2, 34, 30, 0.023767007464351154, ["mov     eax, [rbp+prefixes+4]", "sub     rsp, 8", "push    [rbp+var_388]", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "sub     rsp, 18h", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "fstp    [rsp+3E8h+var_3E0]", "push    rax", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "add     rsp, 30h", "mov     r10, [rbp+maxlen]", "jmp     loc_10D66"], ["mov~eax,[rbp+0]", "sub~rsp,0", "push~[rbp+0]", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "sub~rsp,0", "mov~rcx,0", "mov~edx,0", "fstp~<TAG>,[rsp+0]", "push~rax", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "add~rsp,0", "mov~r10,[rbp+0]", "jmp~FOO"]], [0, 0, 31, 0, 0, 1, 0, 1, 15, -1, 8.947884408894975e-05, ["jmp     short loc_11D9E"], ["jmp~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 18, 36, 0.21019747591851978, ["mov     rcx, [dp+30h]", "mov     r8, [dp+38h]", "cmp     rcx, r8", "jz      short loc_11608"], ["mov~rcx,[dp+0]", "mov~r8,[dp+0]", "cmp~rcx,r8", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 21, 35, 0.005049719114237251, ["mov     r12d, 0Ch", "jmp     loc_1160E"], ["mov~r12d,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 344, 0, 0, 3, 1, 1, 21, 36, 0.009290238247148348, ["movsxd  rax, dword ptr [rax+10h]", "test    eax, eax", "js      short loc_11608"], ["movsxd~rax,[word ptr [rax+0]", "test~eax,eax", "js~FOO"]], [1, 0, 344, 0, 0, 3, 1, 1, 22, 35, 0.03741512477759968, ["test    rax, rax", "mov     r12d, 0Ch", "jz      short loc_1160E"], ["test~rax,rax", "mov~r12d,0", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 45, 39, 0.0025754345559515094, ["mov     rbx, rax"], ["mov~rbx,rax"]], [0, 0, 344, 0, 0, 1, 0, 1, 24, 35, 0.0025754345559515102, ["jmp     short loc_1160E"], ["jmp~FOO"]], [0, 0, 344, 0, 0, 4, 1, 1, 44, 38, 0.010838611288339739, ["cmp     result_0, [rbp+result]", "setz    r12b", "test    result_0, result_0", "jz      loc_10F10"], ["cmp~result_0,[rbp+0]", "setz~r12b", "test~result_0,result_0", "jz~FOO"]], [0, 1, 344, 0, 0, 1, 0, 0, 19, 35, 0.16783378202434865, ["mov     r12d, 12h"], ["mov~r12d,<STR>"]], [0, 0, 344, 0, 0, 2, 1, 1, 42, 37, 0.019044729047685737, ["test    r12b, r12b", "jnz     loc_10F10"], ["test~r12b,r12b", "jnz~FOO"]], [0, 0, 344, 0, 0, 7, 1, 1, 41, 38, 0.020043261075924745, ["cmp     allocated, rdx", "mov     rbx, rdx", "cmovnb  rbx, allocated", "cmp     result_0, [rbp+result]", "setz    r12b", "test    result_0, result_0", "jnz     loc_10E0C"], ["cmp~allocated,rdx", "mov~rbx,rdx", "cmovnb~rbx,allocated", "cmp~result_0,[rbp+0]", "setz~r12b", "test~result_0,result_0", "jnz~FOO"]], [1, 0, 344, 1, 0, 2, 0, 0, 34, 30, 0.11343421100408216, ["sub     rsp, 8", "push    [rbp+var_388]"], ["sub~rsp,0", "push~[rbp+0]"]], [2, 0, 344, 0, 0, 3, 0, 0, 25, 29, 0.0892668181323042, ["mov     r8d, 414Eh", "mov     byte ptr [rcx+2], 4Eh ; 'N'", "mov     [rcx], r8w"], ["mov~r8d,0", "mov~[yte ptr [rcx+0],0", "mov~<TAG>,r8w"]], [0, 0, 344, 1, 0, 5, 1, 1, 26, 28, 0.21555453541027994, ["mov     r10d, dword ptr [rbp+has_width]", "mov     r8, p_0", "sub     r8, rcx", "test    r10d, r10d", "jz      short loc_11720"], ["mov~r10d,[word ptr [rbp+0]", "mov~r8,p_0", "sub~r8,rcx", "test~r10d,r10d", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 27, 28, 0.027590607055601374, ["cmp     rdx, r8", "jbe     short loc_11720"], ["cmp~rdx,r8", "jbe~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 29, 29, 0.01612175347411338, ["cmp     rcx, p_0", "jnb     short loc_11703"], ["cmp~rcx,p_0", "jnb~FOO"]], [0, 0, 344, 2, 0, 3, 0, 0, 30, 31, 0.004645119123574174, ["mov     rdi, rcx", "sub     rdi, p_0", "add     rdi, q"], ["mov~rdi,rcx", "sub~rdi,p_0", "add~rdi,q"]], [2, 0, 344, 2, 0, 6, 0, 1, 31, 30, 0.004979692192776334, ["sub     p_0, 1", "movzx   r9d, byte ptr [p_0]", "sub     q, 1", "cmp     rdi, q", "mov     [q], r9b", "jnz     short loc_116EC"], ["sub~p_0,0", "movzx~r9d,<TAG>", "sub~q,0", "cmp~rdi,q", "mov~<TAG>,r9b", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 32, 29, 0.005314265261978494, ["mov     p_0, rcx"], ["mov~p_0,rcx"]], [0, 0, 344, 0, 0, 2, 1, 1, 30, 28, 0.01746004575092202, ["test    pad, pad", "jz      short loc_11720"], ["test~pad,pad", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 42, 38, 0.005565843461301048, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 344, 1, 0, 1, 0, 0, 31, 30, 0.004645119123574174, ["add     pad, p_0"], ["add~pad,p_0"]], [1, 1, 344, 1, 0, 4, 0, 1, 32, 29, 0.004979692192776334, ["add     p_0, 1", "mov     byte ptr [p_0-1], 20h ; ' '", "cmp     p_0, rdx", "jnz     short loc_1170B"], ["add~p_0,0", "mov~[yte ptr [p_0-1]+0],<STR>", "cmp~p_0,rdx", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 33, 28, 0.005314265261978494, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 344, 2, 0, 9, 1, 1, 28, 26, 0.22030469491604548, ["mov     rdx, allocated", "mov     rax, length", "xor     esi, esi", "sub     rdx, length", "add     rax, r8", "setb    sil", "cmp     rdx, r8", "mov     r12, rax", "ja      short loc_11760"], ["mov~rdx,allocated", "mov~rax,length", "xor~esi,esi", "sub~rdx,length", "add~rax,r8", "setb~sil", "cmp~rdx,r8", "mov~r12,rax", "ja~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 31, 26, 0.0025754345559515102, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]]], "func_feature": [54, 114, 306, 3, 360, 586, 1, 1250, 0.04697, 3, 103], "succs": [[5, 269], [0, 2], [14], [89, 116], [184, 3], [14], [68], [275, 6], [10, 12], [8, 257], [12, 13], [16, 34], [19, 15], [12], [313], [19], [251, 23], [89, 255], [80, 17], [25, 20], [25], [24, 52], [1, 27, 132, 7, 76, 21, 151, 123, 28], [130, 31], [26], [140], [32], [26, 52], [26, 43], [26], [26], [130, 35], [312], [32], [140], [50, 36], [130, 39], [40, 238], [89, 37], [42, 130], [89, 44], [40, 232], [49], [345, 45], [238], [51], [307], [48, 46], [301, 46], [56, 67], [49], [57], [345, 51], [169], [53, 55], [172, 53], [67], [68], [57], [89, 61], [320, 59], [128, 62], [89], [226, 227], [66, 63], [63], [319, 63], [187, 69], [313], [73, 159], [187, 69], [334], [334, 71], [89, 202], [76], [74, 87], [], [76, 215], [76, 278], [76, 191], [76, 22], [138, 76], [161, 76], [225, 76], [72, 76], [337, 76], [76, 358], [88, 76], [76, 143], [122, 124], [89, 305], [89, 339], [89, 314], [89, 315], [89, 193], [89, 167], [89, 206], [89, 174], [89, 175], [89], [89, 277], [89, 102], [89, 289], [89, 47], [89, 340], [89, 60], [89, 359], [89, 54], [89, 177], [89, 229], [89, 262], [288, 89], [89, 290], [89, 324], [89, 217], [89, 218], [89, 117], [89, 118], [89, 164], [89, 165], [89, 286], [89], [124, 125], [52, 29], [130, 126], [124], [130], [129, 242], [248, 127], [75], [136, 131], [136], [52, 30], [75], [75, 135], [75], [140], [144, 9], [137, 145], [137, 258], [336, 147], [140], [140], [146, 150], [70], [144, 9], [149], [], [329, 58], [347], [149], [33, 148], [154, 4], [152, 157], [184, 155], [156, 119], [117, 158], [82, 77], [163], [160, 200], [97, 162], [170, 95], [98, 166], [168, 113], [163], [163, 333], [173], [169], [113, 108], [70], [169, 228], [169], [169], [176, 96], [98, 173], [173], [96, 195], [184], [70], [70], [70], [70], [70, 183], [70], [188, 198], [184], [184], [153], [196, 198], [210, 260], [189, 79], [189], [80], [192, 194], [192, 316], [197, 125], [198], [200], [204, 199], [204], [153], [200], [200], [200], [205, 141], [141], [211, 203], [212, 182], [106, 207], [100, 285], [209, 307], [201, 203], [114, 213], [115, 214], [216], [83, 219], [220, 110], [216, 115], [216], [64, 66], [109, 110], [298], [84, 221], [80], [139, 223], [178, 179, 180, 181], [227], [230, 231], [41, 38], [182], [231], [233, 236], [238], [236], [334], [234, 222], [237, 239], [239], [240, 107], [241, 244], [107, 245], [244], [133, 134], [246], [243, 246], [171, 125], [253, 254], [347], [346, 247], [190], [249, 78], [252, 142], [142], [254], [259, 261], [91, 341], [80, 99], [256, 18], [256, 93], [261], [120, 307], [264, 250], [330, 263], [330, 270], [265, 268], [266, 271], [250, 267], [268], [250], [313], [182], [250], [276, 335], [272, 85], [331], [274, 332], [282], [295, 279], [190], [101], [299], [280, 310], [284, 287], [282, 294], [287], [297, 101], [121, 101], [293, 111], [112, 292], [296, 291], [112, 292], [103], [283], [283], [338], [296, 103], [90, 103], [295], [300, 302], [298, 308], [302], [307], [306, 303], [281, 309], [281], [307], [299], [80], [334], [308], [304, 309], [81, 138], [224, 311], [224, 311], [80], [80, 344], [80], [322, 86], [317, 349], [323, 235], [128], [86], [321, 322], [328, 325], [186, 327], [235, 326], [65], [185, 186], [65], [331], [182], [313], [313], [117], [273, 342], [105], [], [338, 342], [104, 105], [341], [105], [94, 343], [105], [92, 94], [354, 343], [312], [347], [348, 86], [86, 318], [353, 350], [351], [352, 351], [353], [355, 86], [94], [356], [356, 357], [86], [208, 182], [182]], "fname": "vasnprintf", "n_num": 360}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [2, 1, 4, 0, 0, 9, 1, 1, 0, 2, 0.0, ["mov     rdx, qword ptr [rsp+x.value]", "mov     rax, qword ptr [rsp+x.value+8]", "mov     rsi, rdx", "mov     ecx, eax", "shr     rsi, 20h", "mov     eax, esi", "shr     eax, 1Fh", "and     ecx, 7FFFh", "jz      short locret_11E40"], ["mov~rdx,[word ptr [rsp+0]", "mov~rax,[word ptr [rsp+0]", "mov~rsi,rdx", "mov~ecx,eax", "shr~rsi,<STR>", "mov~eax,esi", "shr~eax,0", "and~ecx,0", "jz~FOO"]], [2, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.16666666666666666, ["xor     eax, 1", "cmp     ecx, 7FFFh", "jz      short loc_11E48"], ["xor~eax,0", "cmp~ecx,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 0, 1, 0, 5, 2, 0, 2, 0, 0.0, ["add     esi, 80000000h", "xor     eax, eax", "or      esi, edx", "setnz   al", "retn"], ["add~esi,0", "xor~eax,eax", "or~esi,edx", "setnz~al", "retn"]]], "func_feature": [0, 4, 2, 0, 5, 4, 2, 19, 0.03333, 0, 1], "succs": [[], [0, 2], [3, 4], [], []], "fname": "rpl_isnanl", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 34, 0, 0, 5, 1, 0, 0, 0, 0.027731092436974792, ["lea     r8, off_16570", "lea     r10, wide_null_string_2670", "lea     r9, aNull; \"(NULL)\"", "xor     ecx, ecx", "nop     dword ptr [ap+00000000h]"], ["lea~r8,<TAG>", "lea~r10,<TAG>", "lea~r9,<TAG>", "xor~ecx,ecx", "nop~[word ptr [ap+0]"]], [1, 0, 35, 0, 0, 3, 0, 1, 0, 5, 0.0, ["cmp     qword ptr [a], 0", "mov     rax, [a+8]", "jz      short loc_11ECD"], ["cmp~<TAG>,0", "mov~rax,[a+0]", "jz~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000011E96 cases 5,6,13,14", "cmp     r11d, 2Fh ; '/'", "ja      loc_1203C"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [0, 0, 34, 1, 0, 4, 0, 1, 3, 2, 0.7546218487394959, ["mov     edx, [ap]", "movsxd  rdx, dword ptr [r8+rdx*4]", "add     rdx, r8", "jmp     rdx; switch jump"], ["mov~edx,<TAG>", "movsxd~rdx,<TAG>", "add~rdx,r8", "jmp~rdx"]], [1, 0, 34, 0, 0, 2, 0, 1, 2, 3, 0.7823529411764706, ["cmp     dword ptr [ap], 16h; switch 23 cases", "ja      short loc_11ED0; jumptable 0000000000011E96 default case"], ["cmp~<TAG>,0", "ja~FOO"]], [1, 1, 34, 2, 0, 4, 0, 1, 5, 4, 0.7537815126050421, ["add     i, 1", "add     ap, 20h", "cmp     [a], i", "ja      short loc_11E88"], ["add~i,0", "add~ap,<STR>", "cmp~<TAG>,i", "ja~FOO"]], [0, 0, 34, 0, 0, 5, 1, 1, 6, 5, 0.07899159663865547, ["mov     rdx, [rdx]", "test    rdx, rdx", "cmovz   rdx, r9", "mov     [ap+10h], rdx", "jmp     loc_11EC0"], ["mov~rdx,<TAG>", "test~rdx,rdx", "cmovz~rdx,r9", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_11F7F"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     short loc_11FD7"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000011E96 case 16", "cmp     r11d, 2Fh ; '/'", "ja      short loc_1200C"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     edx, [rdx]", "mov     [ap+10h], edx", "jmp     short loc_11EC0"], ["mov~edx,<TAG>", "mov~[ap+0],edx", "jmp~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_11F15"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 1, 0.07899159663865547, ["mov     r11d, [args+4]; jumptable 0000000000011E96 case 11", "cmp     r11d, 0AFh", "ja      loc_1204D"], ["mov~r11d,[args+0]", "cmp~r11d,0", "ja~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000011E96 cases 1,2", "cmp     r11d, 2Fh ; '/'", "ja      loc_1202B"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_11EF1"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000011E96 cases 7-10,17-22", "cmp     r11d, 2Fh ; '/'", "ja      loc_1201A"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000011E96 case 15", "cmp     r11d, 2Fh ; '/'", "ja      loc_11FFB"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 10h", "mov     [args+4], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~[args+0],r11d"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_11F37"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [2, 0, 34, 1, 0, 8, 1, 0, 4, 5, 0.0067226890756302525, ["mov     rdx, [args+8]; jumptable 0000000000011E96 case 12", "add     rdx, 0Fh", "and     rdx, 0FFFFFFFFFFFFFFF0h", "lea     r11, [rdx+10h]", "mov     [args+8], r11", "fld     tbyte ptr [rdx]", "fstp    tbyte ptr [ap+10h]", "nop     dword ptr [ap+00000000h]"], ["mov~rdx,[args+0]", "add~rdx,0", "and~rdx,0", "lea~r11,[rdx+0]", "mov~[args+0],r11", "fld~<TAG>,<TAG>", "fstp~<TAG>,[byte ptr [ap+0]", "nop~[word ptr [ap+0]"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["movsd   xmm0, qword ptr [rdx]", "movsd   qword ptr [ap+10h], xmm0", "jmp     loc_11EC0"], ["movsd~xmm0,<TAG>", "movsd~[word ptr [ap+0],xmm0", "jmp~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 0, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_11FB2"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     edx, [rdx]", "mov     [ap+10h], dl", "jmp     short loc_11EC0"], ["mov~edx,<TAG>", "mov~[ap+0],dl", "jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000011E96 cases 3,4", "cmp     r11d, 2Fh ; '/'", "ja      loc_11FEA"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     rdx, [rdx]", "mov     [ap+10h], rdx", "jmp     short loc_11EC0"], ["mov~rdx,<TAG>", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     edx, [rdx]", "mov     [ap+10h], dx", "jmp     loc_11EC0"], ["mov~edx,<TAG>", "mov~[ap+0],dx", "jmp~FOO"]], [0, 0, 34, 0, 0, 5, 1, 1, 6, 5, 0.07899159663865547, ["mov     rdx, [rdx]", "test    rdx, rdx", "cmovz   rdx, r10", "mov     [ap+10h], rdx", "jmp     loc_11EC0"], ["mov~rdx,<TAG>", "test~rdx,rdx", "cmovz~rdx,r10", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 1, 0, 1, -1, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [1, 0, 0, 0, 0, 2, 0, 0, 3, -1, 0.0, ["mov     eax, 0FFFFFFFFh; jumptable 0000000000011E96 default case", "retn"], ["mov~eax,0", "retn"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_11F59"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]]], "func_feature": [0, 5, 25, 0, 36, 52, 1, 132, 0.10528, 3, 18], "succs": [[4], [0, 30], [9, 13], [32, 2, 11, 14, 15, 17, 18, 22, 26], [32, 3], [4, 30], [5], [6], [6], [12], [29], [10, 31], [5], [12], [24, 19], [20, 21], [27], [16, 35], [8, 7], [23], [25], [25], [5], [5], [23], [5], [33, 34], [5], [5], [5], [], [29], [], [28], [28], [27]], "fname": "printf_fetchargs", "n_num": 36}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[1, 0, 184, 0, 0, 3, 0, 0, 0, 0, 0.2918331374853114, ["lea     esi, [rbx-30h]", "cmp     sil, 9", "jbe     loc_125DF"], ["lea~esi,[rbx-30h]+0]", "cmp~sil,0", "jbe~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 11, 9, 0.44250881316098706, ["cmp     bl, 2Ah ; '*'", "jz      loc_1238E"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 184, 1, 0, 2, 0, 0, 15, 11, 0.0, ["mov     rbp, cp_0", "add     cp_0, 1"], ["mov~rbp,cp_0", "add~cp_0,0"]], [1, 0, 184, 0, 0, 4, 0, 0, 14, 10, 0.015188014101057579, ["movzx   esi, byte ptr [cp_0]", "lea     ecx, [rsi-30h]", "cmp     cl, 9", "jbe     short loc_12600"], ["movzx~esi,<TAG>", "lea~ecx,[rsi-30h]+0]", "cmp~cl,0", "jbe~FOO"]], [4, 0, 184, 1, 0, 6, 2, 1, 27, 28, 0.0, ["and     eax, 1", "cmp     eax, 1", "sbb     ecx, ecx", "and     ecx, 2", "add     ecx, 3", "jmp     loc_12298"], ["and~eax,0", "cmp~eax,0", "sbb~ecx,ecx", "and~ecx,0", "add~ecx,0", "jmp~FOO"]], [2, 0, 184, 0, 0, 3, 1, 1, 26, 28, 0.004935370152761457, ["test    al, 2", "mov     ecx, 1", "jnz     loc_12298"], ["test~al,0", "mov~ecx,0", "jnz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 13, 7, 0.30608108108108106, ["cmp     bl, 2Eh ; '.'", "jz      loc_124A7"], ["cmp~bl,0", "jz~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 15, 8, 0.026498237367802584, ["mov     [dp+20h], rbp", "movzx   ebx, byte ptr [rbp+0]", "jmp     loc_12206"], ["mov~[dp+0],rbp", "movzx~ebx,[yte ptr [rbp+0]", "jmp~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 19, 8, 0.005992949471210341, ["movzx   ebx, byte ptr [rbp+0]", "lea     rcx, [rbp+1]", "jmp     loc_12206"], ["movzx~ebx,[yte ptr [rbp+0]", "lea~rcx,[rbp+0]", "jmp~FOO"]], [2, 0, 184, 1, 0, 6, 0, 0, 13, 10, 0.02444183313748531, ["mov     [dp+18h], rbp", "movzx   esi, byte ptr [rbp+0]", "mov     rdi, rbp", "sub     esi, 30h ; '0'", "cmp     sil, 9", "jbe     short loc_12607"], ["mov~[dp+0],rbp", "movzx~esi,[yte ptr [rbp+0]", "mov~rdi,rbp", "sub~esi,0", "cmp~sil,0", "jbe~FOO"]], [0, 0, 184, 0, 1, 7, 0, 1, 20, 36, 0.010575793184488837, ["mov     rdi, rax; ptr", "call    _realloc", "mov     rcx, [rsp+78h+cp]", "mov     rdx, [rsp+78h+max_width_length]", "mov     r10, [rsp+78h+a_allocated]", "mov     r9, [rsp+78h+d_allocated]", "mov     r8, [rsp+78h+var_40]"], ["mov~rdi,rax", "call~FOO", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]"]], [1, 0, 184, 1, 0, 9, 1, 1, 19, 1, 0.025705052878965923, ["mov     rsi, a_allocated_0", "mov     [rsp+78h+var_40], a_allocated_0", "mov     [rsp+78h+d_allocated], r9", "shl     rsi, 5; size", "test    rax, rax", "mov     [rsp+78h+a_allocated], max_width_length_0", "mov     [rsp+78h+max_width_length], rdx", "mov     [rsp+78h+cp], cp_0", "jz      loc_12B23"], ["mov~rsi,a_allocated_0", "mov~[rsp+0],a_allocated_0", "mov~[rsp+0],r9", "shl~rsi,0", "test~rax,rax", "mov~[rsp+0],max_width_length_0", "mov~[rsp+0],rdx", "mov~[rsp+0],cp_0", "jz~FOO"]], [2, 0, 184, 1, 0, 7, 0, 1, 17, 16, 0.043683901292596944, ["movsx   eax, sil", "mov     rbx, 1999999999999999h", "mov     rsi, rdx", "sub     eax, 30h ; '0'", "cmp     n, rbx", "cdqe", "ja      short loc_126B7"], ["movsx~eax,sil", "mov~rbx,0", "mov~rsi,rdx", "sub~eax,0", "cmp~n,rbx", "cdqe~", "ja~FOO"]], [1, 0, 184, 0, 0, 2, 0, 0, 20, 13, 0.04471210340775558, ["cmp     r11b, 9", "jbe     short loc_12695"], ["cmp~r11b,0", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 1, 0, 16, 17, 0.04274383078730905, ["xor     edi, edi"], ["xor~edi,edi"]], [1, 0, 184, 0, 0, 3, 1, 1, 14, 30, 0.43334312573443007, ["xor     eax, eax", "mov     esi, 1", "jmp     short loc_12247"], ["xor~eax,eax", "mov~esi,0", "jmp~FOO"]], [2, 0, 184, 0, 0, 5, 0, 1, 18, 7, 0.12690951821386603, ["mov     dword ptr [rcx], 5", "movzx   ebx, byte ptr [rbp+0]", "lea     rcx, [rbp+1]", "cmp     bl, 2Eh ; '.'", "jnz     loc_1220F"], ["mov~<TAG>,0", "movzx~ebx,[yte ptr [rbp+0]", "lea~rcx,[rbp+0]", "cmp~bl,0", "jnz~FOO"]], [1, 0, 184, 0, 0, 4, 0, 1, 20, 31, 0.13125734430082256, ["mov     dword ptr [rsi], 5", "mov     rbp, rcx", "movzx   ebx, byte ptr [rcx]", "jmp     loc_1220F"], ["mov~<TAG>,0", "mov~rbp,rcx", "movzx~ebx,<TAG>", "jmp~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 17, 31, 0.030258519388954172, ["movzx   ebx, byte ptr [rcx]", "mov     rbp, rcx", "jmp     loc_1220F"], ["movzx~ebx,<TAG>", "mov~rbp,rcx", "jmp~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.013513513513513476, ["cmp     eax, 0Fh; jumptable 0000000000012285 cases 28,32-34,60,64-66", "mov     ecx, 0Ch", "jg      loc_12298"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [0, 0, 184, 1, 0, 5, 0, 1, 22, 22, 0.4343419506462985, ["lea     rsi, off_165EC", "movzx   ecx, cl", "movsxd  rcx, dword ptr [rsi+rcx*4]", "add     rcx, rsi", "jmp     rcx; switch jump"], ["lea~rsi,<TAG>", "movzx~ecx,cl", "movsxd~rcx,<TAG>", "add~rcx,rsi", "jmp~rcx"]], [0, 0, 184, 0, 0, 2, 1, 1, 21, 35, 0.026938895417156286, ["test    memory, memory", "jz      loc_1296A"], ["test~memory,memory", "jz~FOO"]], [0, 0, 184, 0, 1, 8, 0, 2, 20, 0, 0.010575793184488837, ["mov     rdi, memory_size; size", "call    malloc", "mov     r8, [rsp+78h+var_40]", "mov     r9, [rsp+78h+d_allocated]", "mov     r10, [rsp+78h+a_allocated]", "mov     rdx, [rsp+78h+max_width_length]", "mov     rcx, [rsp+78h+cp]", "jmp     loc_12A17"], ["mov~rdi,memory_size", "call~FOO", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]", "mov~r10,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "jmp~FOO"]], [1, 0, 184, 1, 0, 8, 1, 1, 17, 13, 0.026204465334900118, ["mov     rsi, a_allocated_0", "mov     [rsp+78h+d_allocated], a_allocated_0", "mov     [rsp+78h+a_allocated], d_allocated_0", "shl     rsi, 5; size", "test    rax, rax", "mov     [rsp+78h+max_width_length], max_width_length_0", "mov     [rsp+78h+cp], rdx", "jz      loc_12A29"], ["mov~rsi,a_allocated_0", "mov~[rsp+0],a_allocated_0", "mov~[rsp+0],d_allocated_0", "shl~rsi,0", "test~rax,rax", "mov~[rsp+0],max_width_length_0", "mov~[rsp+0],rdx", "jz~FOO"]], [1, 0, 184, 1, 0, 7, 0, 1, 16, 14, 0.03381316098707403, ["add     a_allocated_0, a_allocated_0", "lea     rcx, [rbx+1]", "cmp     a_allocated_0, rbx", "cmovbe  a_allocated_0, rcx", "mov     rcx, 7FFFFFFFFFFFFFFh", "cmp     a_allocated_0, rcx", "ja      out_of_memory"], ["add~a_allocated_0,a_allocated_0", "lea~rcx,[rbx+0]", "cmp~a_allocated_0,rbx", "cmovbe~a_allocated_0,rcx", "mov~rcx,0", "cmp~a_allocated_0,rcx", "ja~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 16, 28, 0.45193889541715626, ["cmp     bl, 4Ch ; 'L'", "jz      short loc_12260"], ["cmp~bl,0", "jz~FOO"]], [2, 0, 184, 1, 0, 3, 0, 1, 15, 29, 0.461192714453584, ["add     rbp, 1", "cmp     bl, 68h ; 'h'", "jnz     short loc_12220"], ["add~rbp,0", "cmp~bl,0", "jnz~FOO"]], [0, 0, 184, 0, 1, 7, 0, 1, 29, 27, 0.010443595769682726, ["mov     rdi, rax; ptr", "call    _realloc", "mov     ecx, dword ptr [rsp+78h+cp]", "mov     rdx, [rsp+78h+max_width_length]", "mov     r10, [rsp+78h+a_allocated]", "mov     r9, [rsp+78h+d_allocated]", "mov     r8, [rsp+78h+var_40]"], ["mov~rdi,rax", "call~FOO", "mov~ecx,[word ptr [rsp+0]", "mov~rdx,[rsp+0]", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]"]], [1, 0, 184, 1, 0, 9, 1, 1, 28, 28, 0.0254406580493537, ["mov     rsi, a_allocated_0", "mov     [rsp+78h+var_40], a_allocated_0", "mov     [rsp+78h+d_allocated], r9", "shl     rsi, 5; size", "test    rax, rax", "mov     [rsp+78h+a_allocated], r10", "mov     [rsp+78h+max_width_length], rdx", "mov     dword ptr [rsp+78h+cp], ecx", "jz      loc_12945"], ["mov~rsi,a_allocated_0", "mov~[rsp+0],a_allocated_0", "mov~[rsp+0],r9", "shl~rsi,0", "test~rax,rax", "mov~[rsp+0],r10", "mov~[rsp+0],rdx", "mov~[word ptr [rsp+0],ecx", "jz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 17, 27, 0.4472972972972973, ["cmp     bl, 6Ch ; 'l'", "jz      short loc_12240"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 18, 26, 0.4427144535840188, ["cmp     bl, 6Ah ; 'j'", "jz      short loc_12240"], ["cmp~bl,0", "jz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 1, 14, 9, 0.010076380728554641, ["jmp     short loc_12626"], ["jmp~FOO"]], [0, 0, 184, 1, 0, 6, 0, 0, 15, 9, 0.01063454759106933, ["mov     rsi, cp_0", "lea     rcx, [rbp+2]", "mov     rbp, cp_0", "sub     rsi, rdi", "cmp     max_width_length_0, rsi", "cmovb   max_width_length_0, rsi"], ["mov~rsi,cp_0", "lea~rcx,[rbp+0]", "mov~rbp,cp_0", "sub~rsi,rdi", "cmp~max_width_length_0,rsi", "cmovb~max_width_length_0,rsi"]], [1, 0, 184, 1, 0, 7, 0, 1, 27, 29, 0.02925969447708578, ["add     a_allocated_0, a_allocated_0", "lea     rsi, [r13+1]", "cmp     a_allocated_0, r13", "cmovbe  a_allocated_0, rsi", "mov     rsi, 7FFFFFFFFFFFFFFh", "cmp     a_allocated_0, rsi", "ja      out_of_memory"], ["add~a_allocated_0,a_allocated_0", "lea~rsi,[r13+0]", "cmp~a_allocated_0,r13", "cmovbe~a_allocated_0,rsi", "mov~rsi,0", "cmp~a_allocated_0,rsi", "ja~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 15, -1, 0.024118683901292598, ["test    rax, rax", "jz      short loc_1283E"], ["test~rax,rax", "jz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 1, 30, -1, 0.002408930669800235, ["jmp     short error"], ["jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 18, 9, 0.007990599294947122, ["cmp     esi, 5", "jnz     error"], ["cmp~esi,0", "jnz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 1, 21, -1, 0.002408930669800235, ["jmp     error"], ["jmp~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 14, -1, 0.02144535840188014, ["mov     rax, [a+8]; jumptable 0000000000012285 default case"], ["mov~rax,[a+0]"]], [2, 0, 184, 0, 0, 4, 1, 1, 19, 25, 0.4429200940070505, ["mov     ecx, ebx", "and     ecx, 0FFFFFFDFh", "cmp     cl, 5Ah ; 'Z'", "jz      short loc_12240"], ["mov~ecx,ebx", "and~ecx,0", "cmp~cl,0", "jz~FOO"]], [0, 0, 4, 0, 1, 2, 0, 1, 16, -1, 0.0, ["mov     rdi, rax; ptr", "call    free"], ["mov~rdi,rax", "call~FOO"]], [1, 0, 184, 1, 0, 6, 0, 1, 14, 20, 0.0051410105757931845, ["movsx   eax, bl", "mov     rdi, rdx", "mov     rsi, rbp", "sub     eax, 30h ; '0'", "cdqe", "jmp     loc_1259A"], ["movsx~eax,bl", "mov~rdi,rdx", "mov~rsi,rbp", "sub~eax,0", "cdqe~", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 13, 21, 0.008372502937720329, ["cmp     dil, 9", "ja      loc_1282D; jumptable 0000000000012285 default case"], ["cmp~dil,0", "ja~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 20, 24, 0.443096357226792, ["cmp     bl, 74h ; 't'", "jnz     short loc_12268"], ["cmp~bl,0", "jnz~FOO"]], [2, 0, 184, 1, 0, 4, 0, 1, 15, 33, 0.022591069330199765, ["movzx   eax, byte ptr [rbp+1]", "sub     eax, 30h ; '0'", "cmp     al, 9", "ja      short loc_1264E"], ["movzx~eax,[yte ptr [rbp+0]", "sub~eax,0", "cmp~al,0", "ja~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 14, 6, 0.17273795534665098, ["cmp     byte ptr [rbp+1], 2Ah ; '*'", "mov     [dp+30h], rbp", "jnz     loc_12634"], ["cmp~[yte ptr [rbp+0],0", "mov~[dp+0],rbp", "jnz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 21, 32, 0.0002643948296122209, ["xchg    ax, ax"], ["xchg~ax,ax"]], [0, 0, 184, 0, 1, 6, 0, 1, 18, 12, 0.010825499412455935, ["mov     rdi, rax; ptr", "call    _realloc", "mov     rdx, [rsp+78h+cp]", "mov     r10, [rsp+78h+max_width_length]", "mov     r9, [rsp+78h+a_allocated]", "mov     r8, [rsp+78h+d_allocated]"], ["mov~rdi,rax", "call~FOO", "mov~rdx,[rsp+0]", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]"]], [1, 0, 184, 1, 0, 1, 0, 0, 18, 31, 0.006110458284371329, ["add     eax, 8"], ["add~eax,0"]], [0, 0, 184, 0, 0, 1, 0, 0, 17, 30, 0.022062279670975328, ["movzx   ebx, byte ptr [rbp+0]"], ["movzx~ebx,[yte ptr [rbp+0]"]], [1, 0, 184, 1, 0, 6, 2, 1, 16, 31, 0.004700352526439483, ["mov     ecx, eax", "mov     edi, esi", "and     ecx, 1", "shl     edi, cl", "or      eax, edi", "jmp     short loc_12243"], ["mov~ecx,eax", "mov~edi,esi", "and~ecx,0", "shl~edi,cl", "or~eax,edi", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 17, 31, 8.813160987074031e-05, ["or      eax, 4", "jmp     short loc_12243"], ["or~eax,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 16, -1, 0.014130434782608696, ["mov     rdi, [d+8]; ptr", "test    rdi, rdi", "jz      short loc_1284C"], ["mov~rdi,[d+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 184, 0, 0, 2, 1, 1, 19, 11, 0.02743830787309048, ["test    memory, memory", "jz      loc_1296A"], ["test~memory,memory", "jz~FOO"]], [0, 0, 184, 0, 1, 7, 0, 2, 18, 12, 0.010825499412455935, ["mov     rdi, memory_size; size", "call    malloc", "mov     r8, [rsp+78h+d_allocated]", "mov     r9, [rsp+78h+a_allocated]", "mov     r10, [rsp+78h+max_width_length]", "mov     rdx, [rsp+78h+cp]", "jmp     loc_12444"], ["mov~rdi,memory_size", "call~FOO", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]", "mov~r10,[rsp+0]", "mov~rdx,[rsp+0]", "jmp~FOO"]], [3, 0, 184, 2, 0, 5, 0, 0, 17, 33, 0.005346650998824913, ["add     cp_0, 1", "movzx   eax, byte ptr [cp_0]", "sub     eax, 30h ; '0'", "cmp     al, 9", "jbe     short loc_12640"], ["add~cp_0,0", "movzx~eax,<TAG>", "sub~eax,0", "cmp~al,0", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 16, 34, 0.004935370152761457, ["nop"], ["nop"]], [0, 0, 184, 0, 0, 1, 0, 0, 20, 10, 0.0254406580493537, ["mov     [a+8], memory"], ["mov~[a+0],memory"]], [2, 0, 1, 0, 1, 4, 0, 2, 17, -1, 0.00390716803760282, ["call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     eax, 0FFFFFFFFh", "jmp     loc_120FE"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 2, 0, 1, 1, 0, 1, 17, -1, 0.0, ["call    free"], ["call~FOO"]], [1, 0, 184, 2, 0, 6, 0, 1, 16, 9, 0.1378084606345476, ["mov     rcx, [a]", "mov     rsi, rcx", "shl     rsi, 5", "add     rsi, rax", "cmp     rcx, rbx", "ja      short loc_1247E"], ["mov~rcx,<TAG>", "mov~rsi,rcx", "shl~rsi,0", "add~rsi,rax", "cmp~rcx,rbx", "ja~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 15, 10, 0.145358401880141, ["cmp     a_allocated_0, rbx", "mov     rax, [a+8]", "ja      short loc_12451"], ["cmp~a_allocated_0,rbx", "mov~rax,[a+0]", "ja~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 17, 11, 0.009841363102232667, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 184, 1, 0, 7, 0, 0, 16, 32, 0.023824911868390128, ["mov     rdi, [rsp+78h+max_precision_length]", "mov     rax, rcx", "mov     [dp+38h], rcx", "sub     rax, rbp", "cmp     rdi, rax", "cmovnb  rax, rdi", "mov     [rsp+78h+max_precision_length], rax"], ["mov~rdi,[rsp+0]", "mov~rax,rcx", "mov~[dp+0],rcx", "sub~rax,rbp", "cmp~rdi,rax", "cmovnb~rax,rdi", "mov~[rsp+0],rax"]], [0, 0, 184, 0, 0, 2, 0, 1, 29, 22, 0.09380141010575793, ["cmp     edi, ecx", "jz      loc_122FB; jumptable 0000000000012285 case 0"], ["cmp~edi,ecx", "jz~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 21, 23, 0.43827849588719153, ["lea     ecx, [c-25h]", "cmp     cl, 53h ; 'S'; switch 84 cases", "ja      loc_1282D; jumptable 0000000000012285 default case"], ["lea~ecx,[c-25h]+0]", "cmp~cl,0", "ja~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 20, 32, 0.008049353701527614, ["cmp     edi, 5", "jz      loc_1266A"], ["cmp~edi,0", "jz~FOO"]], [0, 0, 184, 0, 0, 2, 0, 1, 22, 34, 0.0254406580493537, ["mov     [a+8], memory", "jmp     loc_12503"], ["mov~[a+0],memory", "jmp~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 13, 15, 0.05666862514688602, ["mov     rdi, rax"], ["mov~rdi,rax"]], [2, 0, 184, 0, 0, 9, 1, 0, 12, 13, 0.14612220916568744, ["test    max_width_length_0, max_width_length_0", "mov     esi, 1", "mov     [dp+18h], rbp", "cmovz   max_width_length_0, rsi", "mov     [dp+20h], rax", "movzx   esi, byte ptr [rbp+1]", "lea     edi, [rsi-30h]", "cmp     dil, 9", "jbe     loc_12675"], ["test~max_width_length_0,max_width_length_0", "mov~esi,0", "mov~[dp+0],rbp", "cmovz~max_width_length_0,rsi", "mov~[dp+0],rax", "movzx~esi,[yte ptr [rbp+0]", "lea~edi,[rsi-30h]+0]", "cmp~dil,0", "jbe~FOO"]], [2, 1, 184, 2, 0, 5, 0, 0, 18, 10, 0.010252643948296123, ["add     rcx, 1", "mov     dword ptr [rsi], 0", "add     rsi, 20h", "cmp     rcx, rbx", "jbe     short loc_12468"], ["add~rcx,0", "mov~<TAG>,0", "add~rsi,<STR>", "cmp~rcx,rbx", "jbe~FOO"]], [1, 0, 184, 0, 0, 5, 0, 1, 17, 5, 0.008431257344300823, ["mov     rdi, [rsp+78h+arg_posn]", "cmp     rdi, 0FFFFFFFFFFFFFFFFh", "lea     rax, [rdi+1]", "mov     [dp+40h], rdi", "jz      loc_1282D; jumptable 0000000000012285 default case"], ["mov~rdi,[rsp+0]", "cmp~rdi,0", "lea~rax,[rdi+0]", "mov~[dp+0],rdi", "jz~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 16, 4, 0.09952996474735605, ["mov     rbx, [dp+40h]", "cmp     rbx, 0FFFFFFFFFFFFFFFFh", "jz      loc_12A68"], ["mov~rbx,[dp+0]", "cmp~rbx,0", "jz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 19, 9, 0.010663924794359576, ["mov     [a], rcx"], ["mov~<TAG>,rcx"]], [1, 0, 184, 0, 0, 2, 0, 1, 20, 16, 0.006169212690951821, ["cmp     r11b, 9", "ja      loc_1282D; jumptable 0000000000012285 default case"], ["cmp~r11b,0", "ja~FOO"]], [1, 0, 184, 2, 0, 9, 2, 1, 19, 14, 0.05543478260869565, ["xor     ebx, ebx", "add     rax, rsi", "movzx   esi, byte ptr [np+1]", "setb    bl", "add     np, 1", "mov     rdi, rax", "test    rbx, rbx", "lea     r11d, [rsi-30h]", "jnz     loc_12A4A"], ["xor~ebx,ebx", "add~rax,rsi", "movzx~esi,[yte ptr [np+0]", "setb~bl", "add~np,0", "mov~rdi,rax", "test~rbx,rbx", "lea~r11d,[rsi-30h]+0]", "jnz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 20, -1, 0.007917156286721504, ["mov     rax, [a+8]"], ["mov~rax,[a+0]"]], [0, 0, 184, 0, 0, 2, 1, 1, 24, 23, 0.021063454759106932, ["test    r9, r9", "js      loc_1296A"], ["test~r9,r9", "js~FOO"]], [1, 0, 184, 1, 0, 7, 0, 1, 25, 22, 0.014923619271445358, ["add     r9, r9", "mov     rax, 2E8BA2E8BA2E8BAh", "mov     [rsp+78h+a_allocated], a_allocated_0", "cmp     d_allocated_0, rax", "mov     [rsp+78h+max_width_length], r10", "mov     [rsp+78h+cp], rdx", "ja      loc_1296A"], ["add~r9,r9", "mov~rax,0", "mov~[rsp+0],a_allocated_0", "cmp~d_allocated_0,rax", "mov~[rsp+0],r10", "mov~[rsp+0],rdx", "ja~FOO"]], [1, 0, 184, 1, 1, 12, 1, 2, 26, 21, 0.015129259694477086, ["lea     rax, [d_allocated_0+d_allocated_0*4]", "mov     rdi, [d+8]; ptr", "mov     [rsp+78h+d_allocated], d_allocated_0", "lea     rsi, [d_allocated_0+rax*2]", "shl     rsi, 3; size", "call    _realloc", "test    memory, memory", "mov     r9, [rsp+78h+d_allocated]", "mov     rdx, [rsp+78h+cp]", "mov     r10, [rsp+78h+max_width_length]", "mov     r8, [rsp+78h+a_allocated]", "jz      loc_1296A"], ["lea~rax,<TAG>", "mov~rdi,[d+0]", "mov~[rsp+0],d_allocated_0", "lea~rsi,<TAG>", "shl~rsi,0", "call~FOO", "test~memory,memory", "mov~r9,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r10,[rsp+0]", "mov~r8,[rsp+0]", "jz~FOO"]], [0, 0, 184, 0, 0, 2, 1, 1, 30, 26, 0.026674500587544066, ["test    memory, memory", "jz      loc_1296A"], ["test~memory,memory", "jz~FOO"]], [2, 0, 184, 1, 0, 5, 0, 0, 14, 14, 0.05707990599294947, ["add     np, 1", "movzx   r11d, byte ptr [np]", "lea     ebx, [r11-30h]", "cmp     bl, 9", "jbe     short loc_12678"], ["add~np,0", "movzx~r11d,<TAG>", "lea~ebx,[r11-30h]+0]", "cmp~bl,0", "jbe~FOO"]], [1, 0, 184, 1, 0, 5, 1, 1, 17, 8, 0.1394535840188014, ["shl     rbx, 5", "lea     rcx, [rax+rbx]", "mov     esi, [rcx]", "test    esi, esi", "jnz     loc_1292F"], ["shl~rbx,0", "lea~rcx,<TAG>", "mov~esi,<TAG>", "test~esi,esi", "jnz~FOO"]], [0, 0, 184, 0, 0, 3, 0, 0, 26, 25, 0.186310223266745, ["cmp     a_allocated_0, r13", "mov     rax, [a+8]", "jbe     loc_12870"], ["cmp~a_allocated_0,r13", "mov~rax,[a+0]", "jbe~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 15, 13, 0.05749118683901293, ["cmp     r11b, 24h ; '$'", "jnz     loc_123B5"], ["cmp~r11b,0", "jnz~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 18, -1, 0.011236780258519388, ["mov     rdi, [d+8]; ptr", "test    rdi, rdi", "jz      short out_of_memory_1"], ["mov~rdi,[d+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 17, -1, 0.021107520564042304, ["test    rax, rax", "jz      short loc_1297B"], ["test~rax,rax", "jz~FOO"]], [0, 0, 4, 0, 1, 2, 0, 1, 18, -1, 0.0, ["mov     rdi, rax; ptr", "call    free"], ["mov~rdi,rax", "call~FOO"]], [1, 2, 185, 1, 1, 16, 1, 2, 0, 20, 0.0, ["push    r15", "push    r14", "mov     r15, a", "push    r13", "push    r12", "mov     r14, d", "push    rbp", "push    rbx", "mov     rbx, format", "mov     edi, 58h ; 'X'; size", "sub     rsp, 48h", "mov     qword ptr [d], 0", "call    malloc", "test    rax, rax", "mov     [d+8], rax", "jz      out_of_memory_1"], ["push~r15", "push~r14", "mov~r15,a", "push~r13", "push~r12", "mov~r14,d", "push~rbp", "push~rbx", "mov~rbx,format", "mov~edi,<STR>", "sub~rsp,<STR>", "mov~<TAG>,0", "call~FOO", "test~rax,rax", "mov~[d+0],rax", "jz~FOO"]], [2, 0, 184, 0, 0, 3, 0, 0, 23, 28, 0.008578143360752053, ["mov     ecx, 10h; jumptable 0000000000012285 case 46", "mov     ebx, 73h ; 's'", "nop     dword ptr [rax+00000000h]"], ["mov~ecx,0", "mov~ebx,0", "nop~[word ptr [rax+0]"]], [1, 0, 184, 0, 0, 2, 0, 1, 24, 27, 0.18960047003525266, ["cmp     arg_index, 0FFFFFFFFFFFFFFFFh", "jz      loc_128EB"], ["cmp~arg_index,0", "jz~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.028143360752056337, ["cmp     eax, 0Fh; jumptable 0000000000012285 cases 51,74,80,83", "mov     ecx, 0Ah", "jg      loc_12298"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 24, 28, 0.01471797884841363, ["test    al, 4", "jnz     loc_12298"], ["test~al,0", "jnz~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 25, 28, 0.009841363102232667, ["cmp     eax, 7", "mov     ecx, 8", "jg      loc_12298"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [2, 0, 184, 0, 0, 3, 1, 1, 26, 28, 0.004935370152761457, ["test    al, 2", "mov     ecx, 2", "jnz     loc_12298"], ["test~al,0", "mov~ecx,0", "jnz~FOO"]], [4, 0, 184, 1, 0, 6, 2, 1, 27, 28, 0.0, ["and     eax, 1", "cmp     eax, 1", "sbb     ecx, ecx", "and     ecx, 2", "add     ecx, 4", "jmp     loc_12298"], ["and~eax,0", "cmp~eax,0", "sbb~ecx,ecx", "and~ecx,0", "add~ecx,0", "jmp~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.028143360752056337, ["cmp     eax, 0Fh; jumptable 0000000000012285 case 73", "mov     ecx, 16h", "jg      loc_12298"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 24, 28, 0.01471797884841363, ["test    al, 4", "jnz     loc_12298"], ["test~al,0", "jnz~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 25, 28, 0.009841363102232667, ["cmp     eax, 7", "mov     ecx, 15h", "jg      loc_12298"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [1, 1, 184, 0, 0, 3, 1, 1, 26, 28, 0.004935370152761457, ["test    al, 2", "mov     ecx, 12h", "jnz     loc_12298"], ["test~al,0", "mov~ecx,<STR>", "jnz~FOO"]], [2, 0, 184, 1, 0, 5, 2, 1, 27, 28, 0.0, ["xor     ecx, ecx", "test    al, 1", "setz    cl", "add     ecx, 13h", "jmp     loc_12298"], ["xor~ecx,ecx", "test~al,0", "setz~cl", "add~ecx,0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 23, 28, 0.008578143360752053, ["mov     ecx, 11h; jumptable 0000000000012285 case 75", "jmp     loc_12298"], ["mov~ecx,0", "jmp~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.008578143360752053, ["mov     ecx, 0Eh; jumptable 0000000000012285 case 30", "mov     ebx, 63h ; 'c'", "jmp     loc_12298"], ["mov~ecx,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 184, 1, 0, 5, 1, 1, 23, 28, 0.008578143360752053, ["xor     ecx, ecx; jumptable 0000000000012285 case 78", "cmp     eax, 7", "setnle  cl", "add     ecx, 0Fh", "jmp     loc_12298"], ["xor~ecx,ecx", "cmp~eax,0", "setnle~cl", "add~ecx,0", "jmp~FOO"]], [2, 0, 184, 1, 0, 5, 1, 1, 23, 28, 0.008578143360752053, ["xor     ecx, ecx; jumptable 0000000000012285 case 62", "cmp     eax, 7", "setnle  cl", "add     ecx, 0Dh", "jmp     loc_12298"], ["xor~ecx,ecx", "cmp~eax,0", "setnle~cl", "add~ecx,0", "jmp~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.028143360752056337, ["cmp     eax, 0Fh; jumptable 0000000000012285 cases 63,68", "mov     ecx, 9", "jg      loc_12298"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 24, 28, 0.01471797884841363, ["test    al, 4", "jnz     loc_12298"], ["test~al,0", "jnz~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 25, 28, 0.009841363102232667, ["cmp     eax, 7", "mov     ecx, 7", "jg      loc_12298"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [2, 0, 184, 1, 0, 5, 2, 1, 24, 28, 0.0, ["xor     ecx, ecx", "test    al, 4", "setnz   cl", "add     ecx, 0Bh", "jmp     loc_12298"], ["xor~ecx,ecx", "test~al,0", "setnz~cl", "add~ecx,0", "jmp~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 25, 26, 0.1753819036427732, ["mov     [dp+50h], arg_index"], ["mov~[dp+0],arg_index"]], [1, 0, 184, 0, 0, 2, 0, 1, 18, 5, 0.05749118683901293, ["cmp     dil, 24h ; '$'", "jnz     loc_124E7"], ["cmp~dil,0", "jnz~FOO"]], [2, 0, 184, 1, 0, 5, 0, 0, 17, 6, 0.05707990599294947, ["add     np, 1", "movzx   edi, byte ptr [np]", "lea     r11d, [rdi-30h]", "cmp     r11b, 9", "jbe     short loc_12A92"], ["add~np,0", "movzx~edi,<TAG>", "lea~r11d,[rdi-30h]+0]", "cmp~r11b,0", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 1, 0, 19, 10, 0.04274383078730905, ["xor     r11d, r11d"], ["xor~r11d,r11d"]], [0, 0, 184, 0, 0, 3, 0, 1, 26, 26, 0.0051410105757931845, ["mov     arg_index, [rsp+78h+arg_posn]", "mov     [rsp+78h+arg_posn], arg_posn_0", "jmp     loc_122A7"], ["mov~arg_index,[rsp+0]", "mov~[rsp+0],arg_posn_0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 6, 14, 0.46630434782608693, ["cmp     bl, 2Dh ; '-'", "jz      short loc_121B0"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 184, 0, 0, 4, 0, 1, 5, 15, 0.4754994124559342, ["lea     rax, [rbp+1]", "cmp     bl, 27h ; '''", "mov     rcx, rax", "jnz     short loc_12170"], ["lea~rax,[rbp+0]", "cmp~bl,0", "mov~rcx,rax", "jnz~FOO"]], [0, 0, 184, 1, 0, 2, 0, 0, 18, 16, 0.0, ["lea     rsi, [n+n*4]", "add     rsi, rsi"], ["lea~rsi,<TAG>", "add~rsi,rsi"]], [0, 0, 184, 0, 0, 1, 0, 0, 18, 15, 0.044506462984723855, ["mov     rbp, np"], ["mov~rbp,np"]], [0, 0, 184, 1, 0, 2, 0, 0, 21, 9, 0.0, ["lea     rsi, [n+n*4]", "add     rsi, rsi"], ["lea~rsi,<TAG>", "add~rsi,rsi"]], [2, 0, 184, 1, 0, 6, 0, 1, 20, 9, 0.043683901292596944, ["mov     rdi, 1999999999999999h", "sub     eax, 30h ; '0'", "mov     rsi, rdx", "cmp     n, rdi", "cdqe", "ja      short loc_12ACE"], ["mov~rdi,0", "sub~eax,0", "mov~rsi,rdx", "cmp~n,rdi", "cdqe~", "ja~FOO"]], [1, 0, 184, 2, 0, 6, 0, 1, 27, 24, 0.18331374853113983, ["mov     rsi, [a]", "mov     r11, rsi", "shl     r11, 5", "add     r11, rax", "cmp     rsi, r13", "ja      short loc_122E7"], ["mov~rsi,<TAG>", "mov~r11,rsi", "shl~r11,0", "add~r11,rax", "cmp~rsi,r13", "ja~FOO"]], [0, 0, 184, 0, 0, 2, 0, 1, 31, 25, 0.0254406580493537, ["mov     [a+8], memory", "jmp     loc_122B4"], ["mov~[a+0],memory", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 0, 23, 6, 0.04471210340775558, ["cmp     bl, 9", "jbe     short loc_12AB0"], ["cmp~bl,0", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 28, 26, 0.009841363102232667, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [6, 0, 184, 0, 0, 10, 3, 1, 1, 19, 0.005346650998824912, ["mov     qword ptr [a], 0", "mov     qword ptr [a+8], 0", "xor     esi, esi", "mov     [rsp+78h+max_precision_length], 0", "xor     r10d, r10d", "xor     r8d, r8d", "mov     r9d, 1", "mov     [rsp+78h+arg_posn], 0", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "jmp     short loc_120DC"], ["mov~<TAG>,0", "mov~[word ptr [a+0],0", "xor~esi,esi", "mov~[rsp+0],0", "xor~r10d,r10d", "xor~r8d,r8d", "mov~r9d,0", "mov~[rsp+0],0", "mov~rdx,0", "jmp~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 21, 8, 0.044506462984723855, ["mov     rdi, np"], ["mov~rdi,np"]], [1, 0, 184, 1, 0, 6, 0, 1, 21, 15, 0.0051410105757931845, ["movsx   eax, sil", "mov     rbp, np", "mov     rsi, rdx", "sub     eax, 30h ; '0'", "cdqe", "jmp     loc_126BA"], ["movsx~eax,sil", "mov~rbp,np", "mov~rsi,rdx", "sub~eax,0", "cdqe~", "jmp~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 3, 17, 0.43484136310223265, ["cmp     cl, 25h ; '%'", "lea     rbp, [cp_0+1]", "jz      short loc_12110"], ["cmp~cl,0", "lea~rbp,[cp_0+0]", "jz~FOO"]], [0, 0, 184, 0, 0, 3, 1, 1, 2, 18, 0.43967391304347825, ["movzx   ecx, byte ptr [cp_0]", "test    cl, cl", "jnz     short loc_120D0"], ["movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 4, 19, 0.42851057579318447, ["mov     rbx, rbp"], ["mov~rbx,rbp"]], [0, 0, 184, 0, 0, 3, 0, 1, 27, 20, 0.015349588719153937, ["mov     [d+8], memory", "mov     rsi, [d]", "jmp     loc_120D9"], ["mov~[d+0],memory", "mov~rsi,<TAG>", "jmp~FOO"]], [0, 0, 184, 0, 0, 2, 0, 1, 24, 20, 0.4071680376028202, ["mov     rax, [d+8]", "jmp     loc_120D9"], ["mov~rax,[d+0]", "jmp~FOO"]], [0, 0, 184, 0, 1, 8, 0, 2, 29, 27, 0.010443595769682726, ["mov     rdi, memory_size; size", "call    malloc", "mov     r8, [rsp+78h+var_40]", "mov     r9, [rsp+78h+d_allocated]", "mov     r10, [rsp+78h+a_allocated]", "mov     rdx, [rsp+78h+max_width_length]", "mov     ecx, dword ptr [rsp+78h+cp]", "jmp     loc_128D9"], ["mov~rdi,memory_size", "call~FOO", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]", "mov~r10,[rsp+0]", "mov~rdx,[rsp+0]", "mov~ecx,[word ptr [rsp+0]", "jmp~FOO"]], [3, 0, 184, 0, 0, 11, 0, 0, 15, 5, 0.14559341950646298, ["mov     rdi, [rsp+78h+max_precision_length]", "lea     rcx, [rbp+2]", "mov     eax, 2", "mov     [dp+38h], cp_0", "cmp     rdi, 2", "cmovnb  rax, rdi", "mov     [rsp+78h+max_precision_length], rax", "movsx   eax, byte ptr [rbp+2]", "lea     esi, [rax-30h]", "cmp     sil, 9", "jbe     loc_12A8F"], ["mov~rdi,[rsp+0]", "lea~rcx,[rbp+0]", "mov~eax,0", "mov~[dp+0],cp_0", "cmp~rdi,0", "cmovnb~rax,rdi", "mov~[rsp+0],rax", "movsx~eax,[yte ptr [rbp+0]", "lea~esi,[rax-30h]+0]", "cmp~sil,0", "jbe~FOO"]], [2, 1, 184, 2, 0, 5, 0, 0, 29, 25, 0.010252643948296123, ["add     rsi, 1", "mov     dword ptr [r11], 0", "add     r11, 20h", "cmp     rsi, r13", "jbe     short loc_122D0"], ["add~rsi,0", "mov~<TAG>,0", "add~r11,<STR>", "cmp~rsi,r13", "jbe~FOO"]], [1, 0, 184, 1, 0, 5, 1, 1, 28, 23, 0.18495887191539365, ["shl     r13, 5", "lea     rsi, [rax+r13]", "mov     edi, [rsi]", "test    edi, edi", "jnz     loc_12861"], ["shl~r13,0", "lea~rsi,<TAG>", "mov~edi,<TAG>", "test~edi,edi", "jnz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 30, 24, 0.010663924794359576, ["mov     [a], rsi"], ["mov~<TAG>,rsi"]], [1, 0, 184, 2, 0, 9, 2, 1, 22, 7, 0.05543478260869565, ["xor     ebp, ebp", "add     rsi, rax", "setb    bpl", "add     np, 1", "movsx   eax, byte ptr [rcx]", "test    rbp, rbp", "mov     r11, rsi", "lea     ebx, [rax-30h]", "jnz     short loc_12B0D"], ["xor~ebp,ebp", "add~rsi,rax", "setb~bpl", "add~np,0", "movsx~eax,<TAG>", "test~rbp,rbp", "mov~r11,rsi", "lea~ebx,[rax-30h]+0]", "jnz~FOO"]], [1, 0, 184, 1, 0, 5, 0, 1, 24, 8, 0.0051410105757931845, ["sub     eax, 30h ; '0'", "mov     rsi, rdx", "mov     rdi, np", "cdqe", "jmp     short loc_12AD1"], ["sub~eax,0", "mov~rsi,rdx", "mov~rdi,np", "cdqe~", "jmp~FOO"]], [2, 0, 184, 1, 0, 4, 0, 1, 21, 12, 0.0445945945945946, ["mov     rbx, n", "sub     rbx, 1", "cmp     rbx, 0FFFFFFFFFFFFFFFDh", "ja      loc_1282D; jumptable 0000000000012285 default case"], ["mov~rbx,n", "sub~rbx,0", "cmp~rbx,0", "ja~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 29, 22, 0.08660399529964748, ["mov     [rsi], ecx"], ["mov~<TAG>,ecx"]], [1, 0, 184, 1, 0, 3, 0, 1, 22, 11, 0.0445945945945946, ["mov     [dp+28h], rbx", "add     rbp, 2", "jmp     loc_123DA"], ["mov~[dp+0],rbx", "add~rbp,0", "jmp~FOO"]], [0, 0, 1, 0, 0, 7, 1, 0, 3, -1, 0.00024970622796709755, ["lea     rdx, [rsi+rsi*4]", "lea     rdx, [rsi+rdx*2]", "mov     [rax+rdx*8], cp_0", "mov     rax, [rsp+78h+max_precision_length]", "mov     [d+10h], max_width_length_0", "mov     [d+18h], rax", "xor     eax, eax"], ["lea~rdx,<TAG>", "lea~rdx,<TAG>", "mov~<TAG>,cp_0", "mov~rax,[rsp+0]", "mov~[d+0],max_width_length_0", "mov~[d+0],rax", "xor~eax,eax"]], [0, 0, 184, 0, 0, 3, 0, 0, 17, 3, 0.14703290246768508, ["cmp     a_allocated_0, rbx", "mov     rax, [a+8]", "jbe     loc_129B0"], ["cmp~a_allocated_0,rbx", "mov~rax,[a+0]", "jbe~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 18, 4, 0.0051410105757931845, ["mov     rbx, [rsp+78h+arg_posn]", "mov     [rsp+78h+arg_posn], arg_posn_0", "jmp     loc_124F6"], ["mov~rbx,[rsp+0]", "mov~[rsp+0],arg_posn_0", "jmp~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 25, 4, 0.0445945945945946, ["mov     [dp+40h], rbx", "lea     rcx, [rdi+2]", "jmp     loc_124F6"], ["mov~[dp+0],rbx", "lea~rcx,[rdi+0]", "jmp~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 24, 5, 0.0445945945945946, ["lea     rbx, [n-1]", "cmp     rbx, 0FFFFFFFFFFFFFFFDh", "ja      loc_1282D; jumptable 0000000000012285 default case"], ["lea~rbx,[n-1]+0]", "cmp~rbx,0", "ja~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 16, 7, 0.05666862514688602, ["mov     rsi, cp_0"], ["mov~rsi,cp_0"]], [0, 1, 0, 1, 0, 8, 0, 0, 2, -1, 0.0, ["add     rsp, 48h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     d", "pop     a", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~d", "pop~a", "retn"]], [2, 0, 1, 0, 1, 4, 0, 2, 1, -1, 0.001189776733254994, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch", "mov     eax, 0FFFFFFFFh", "jmp     loc_120FE"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 184, 0, 0, 5, 0, 1, 25, 27, 0.009665099882491186, ["mov     rsi, [rsp+78h+arg_posn]", "cmp     rsi, 0FFFFFFFFFFFFFFFFh", "lea     rax, [rsi+1]", "mov     [dp+50h], rsi", "jz      loc_1282D; jumptable 0000000000012285 default case"], ["mov~rsi,[rsp+0]", "cmp~rsi,0", "lea~rax,[rsi+0]", "mov~[dp+0],rsi", "jz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 23, 9, 0.006169212690951821, ["cmp     bl, 9", "ja      loc_1282D; jumptable 0000000000012285 default case"], ["cmp~bl,0", "ja~FOO"]], [0, 0, 184, 0, 0, 7, 0, 0, 23, 21, 0.43278495887191537, ["mov     [dp+48h], bl; jumptable 0000000000012285 case 0", "mov     rax, [d]", "mov     [dp+8], rbp", "lea     rsi, [rax+1]", "cmp     rsi, r9", "mov     [d], rsi", "jb      short loc_12385"], ["mov~[dp+0],bl", "mov~rax,<TAG>", "mov~[dp+0],rbp", "lea~rsi,[rax+0]", "cmp~rsi,r9", "mov~<TAG>,rsi", "jb~FOO"]], [1, 0, 184, 2, 0, 6, 0, 1, 18, 33, 0.1422150411280846, ["mov     rsi, [a]", "mov     rdi, rsi", "shl     rdi, 5", "add     rdi, rax", "cmp     rsi, rbx", "ja      short loc_1252E"], ["mov~rsi,<TAG>", "mov~rdi,rsi", "shl~rdi,0", "add~rdi,rax", "cmp~rsi,rbx", "ja~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 19, 35, 0.009841363102232667, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [1, 0, 184, 2, 0, 9, 2, 1, 12, 19, 0.057638072855464156, ["movzx   ebx, byte ptr [rbp+1]", "xor     r11d, r11d", "add     rax, rdi", "setb    r11b", "add     rbp, 1", "mov     rcx, rax", "test    r11, r11", "lea     edi, [rbx-30h]", "jnz     loc_12912"], ["movzx~ebx,[yte ptr [rbp+0]", "xor~r11d,r11d", "add~rax,rdi", "setb~r11b", "add~rbp,0", "mov~rcx,rax", "test~r11,r11", "lea~edi,[rbx-30h]+0]", "jnz~FOO"]], [2, 1, 184, 2, 0, 5, 0, 0, 20, 34, 0.010252643948296123, ["add     rsi, 1", "mov     dword ptr [rdi], 0", "add     rdi, 20h", "cmp     rsi, rbx", "jbe     short loc_12518"], ["add~rsi,0", "mov~<TAG>,0", "add~rdi,<STR>", "cmp~rsi,rbx", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 21, 33, 0.010663924794359576, ["mov     [a], rsi"], ["mov~<TAG>,rsi"]], [1, 0, 184, 1, 0, 5, 1, 1, 19, 32, 0.14386016451233843, ["shl     rbx, 5", "lea     rsi, [rax+rbx]", "mov     edi, [rsi]", "test    edi, edi", "jnz     loc_1299E"], ["shl~rbx,0", "lea~rsi,<TAG>", "mov~edi,<TAG>", "test~edi,edi", "jnz~FOO"]], [1, 0, 184, 0, 0, 5, 0, 1, 13, 12, 0.10005875440658049, ["mov     rdi, [rsp+78h+arg_posn]", "cmp     rdi, 0FFFFFFFFFFFFFFFFh", "lea     rcx, [rdi+1]", "mov     [dp+28h], rdi", "jz      loc_1282D; jumptable 0000000000012285 default case"], ["mov~rdi,[rsp+0]", "cmp~rdi,0", "lea~rcx,[rdi+0]", "mov~[dp+0],rdi", "jz~FOO"]], [2, 0, 184, 1, 0, 4, 0, 1, 14, 17, 0.0445945945945946, ["mov     r13, n", "sub     r13, 1", "cmp     r13, 0FFFFFFFFFFFFFFFDh", "ja      loc_1282D; jumptable 0000000000012285 default case"], ["mov~r13,n", "sub~r13,0", "cmp~r13,0", "ja~FOO"]], [0, 0, 184, 0, 0, 2, 0, 0, 6, 18, 0.06304347826086956, ["mov     rax, cp_0", "nop     dword ptr [rax+00h]"], ["mov~rax,cp_0", "nop~[word ptr [rax+0]"]], [0, 0, 184, 0, 0, 1, 0, 1, 5, 19, 0.0626321974148061, ["jmp     loc_12551"], ["jmp~FOO"]], [2, 0, 184, 1, 0, 5, 0, 0, 7, 17, 0.06345475910693302, ["add     np, 1", "movzx   ecx, byte ptr [np]", "lea     esi, [rcx-30h]", "cmp     sil, 9", "jbe     short loc_12558"], ["add~np,0", "movzx~ecx,<TAG>", "lea~esi,[rcx-30h]+0]", "cmp~sil,0", "jbe~FOO"]], [6, 0, 184, 0, 0, 17, 0, 1, 4, 16, 0.4350470035252644, ["lea     c, [rsi+rsi*4]", "mov     r13, rdx", "lea     rcx, [rsi+rcx*2]", "lea     r12, [rax+rcx*8]", "mov     [dp], rbx", "mov     dword ptr [dp+10h], 0", "mov     qword ptr [dp+18h], 0", "mov     qword ptr [dp+20h], 0", "mov     [dp+28h], rdx", "mov     qword ptr [dp+30h], 0", "mov     qword ptr [dp+38h], 0", "mov     [dp+40h], rdx", "mov     [dp+50h], rdx", "movzx   ebx, byte ptr [rbx+1]", "lea     eax, [rbx-30h]", "cmp     al, 9", "ja      short loc_12196"], ["lea~c,<TAG>", "mov~r13,rdx", "lea~rcx,<TAG>", "lea~r12,<TAG>", "mov~<TAG>,rbx", "mov~[word ptr [dp+0],0", "mov~[word ptr [dp+0],0", "mov~[word ptr [dp+0],0", "mov~[dp+0],rdx", "mov~[word ptr [dp+0],0", "mov~[word ptr [dp+0],0", "mov~[dp+0],rdx", "mov~[dp+0],rdx", "movzx~ebx,[yte ptr [rbx+0]", "lea~eax,[rbx-30h]+0]", "cmp~al,0", "ja~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 8, 16, 0.06386603995299647, ["cmp     cl, 24h ; '$'", "mov     r13, rdx", "jnz     loc_12196"], ["cmp~cl,0", "mov~r13,rdx", "jnz~FOO"]], [1, 0, 184, 1, 0, 7, 0, 1, 18, 2, 0.03108108108108108, ["add     a_allocated_0, a_allocated_0", "lea     rsi, [rbx+1]", "cmp     a_allocated_0, rbx", "cmovbe  a_allocated_0, rsi", "mov     rsi, 7FFFFFFFFFFFFFFh", "cmp     a_allocated_0, rsi", "ja      short out_of_memory"], ["add~a_allocated_0,a_allocated_0", "lea~rsi,[rbx+0]", "cmp~a_allocated_0,rbx", "cmovbe~a_allocated_0,rsi", "mov~rsi,0", "cmp~a_allocated_0,rsi", "ja~FOO"]], [0, 0, 184, 0, 0, 1, 1, 0, 9, 22, 0.04494712103407755, ["xor     ecx, ecx"], ["xor~ecx,ecx"]], [1, 0, 184, 0, 0, 2, 0, 1, 7, 13, 0.46166274970622795, ["cmp     bl, 2Bh ; '+'", "jz      short loc_121C0"], ["cmp~bl,0", "jz~FOO"]], [0, 1, 184, 0, 0, 2, 0, 1, 8, 12, 0.4569623971797885, ["cmp     bl, 20h ; ' '", "jz      short loc_121D0"], ["cmp~bl,<STR>", "jz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 9, 11, 0.45220329024676853, ["cmp     bl, 23h ; '#'", "jz      short loc_121E0"], ["cmp~bl,0", "jz~FOO"]], [0, 0, 2, 0, 1, 1, 0, 1, 19, -1, 0.0, ["call    free"], ["call~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 10, 10, 0.44738542890716804, ["cmp     bl, 30h ; '0'", "jnz     short loc_121F0"], ["cmp~bl,0", "jnz~FOO"]], [2, 0, 184, 1, 0, 7, 0, 1, 10, 21, 0.04588719153936545, ["movsx   eax, bl", "mov     rsi, 1999999999999999h", "mov     rdi, rdx", "sub     eax, 30h ; '0'", "cmp     n, rsi", "cdqe", "ja      short loc_12597"], ["movsx~eax,bl", "mov~rsi,0", "mov~rdi,rdx", "sub~eax,0", "cmp~n,rsi", "cdqe~", "ja~FOO"]], [1, 0, 184, 0, 0, 2, 0, 0, 13, 18, 0.04471210340775558, ["cmp     dil, 9", "jbe     short loc_12576"], ["cmp~dil,0", "jbe~FOO"]], [0, 1, 184, 0, 0, 2, 1, 0, 11, 17, 0.0003231492361927144, ["or      dword ptr [dp+10h], 20h", "nop"], ["or~[word ptr [dp+0],<STR>", "nop"]], [0, 0, 184, 0, 0, 2, 0, 0, 7, 16, 0.032961222091656875, ["movzx   ebx, byte ptr [rax]", "mov     rbp, rax"], ["movzx~ebx,<TAG>", "mov~rbp,rax"]], [1, 0, 184, 0, 0, 2, 1, 1, 6, 17, 0.004641598119858989, ["or      dword ptr [dp+10h], 1", "jmp     short loc_12190"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 7, 17, 8.813160987074031e-05, ["or      dword ptr [dp+10h], 2", "jmp     short loc_12190"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 8, 17, 0.00014688601645123384, ["or      dword ptr [dp+10h], 4", "jmp     short loc_12190"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 9, 17, 0.00020564042303172737, ["or      dword ptr [dp+10h], 8", "jmp     short loc_12190"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 10, 17, 0.0002643948296122209, ["or      dword ptr [dp+10h], 10h", "jmp     short loc_12190"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [0, 0, 184, 1, 0, 2, 0, 0, 11, 21, 0.0, ["lea     rdi, [n+n*4]", "add     rdi, rdi"], ["lea~rdi,<TAG>", "add~rdi,rdi"]], [0, 0, 184, 0, 0, 1, 0, 0, 11, 20, 0.04670975323149236, ["mov     rsi, rbp"], ["mov~rsi,rbp"]], [0, 0, 184, 0, 0, 3, 0, 1, 15, 16, 0.0445945945945946, ["lea     rbp, [rsi+2]", "movzx   ebx, byte ptr [rsi+2]", "jmp     loc_12196"], ["lea~rbp,[rsi+0]", "movzx~ebx,[yte ptr [rsi+0]", "jmp~FOO"]], [0, 0, 184, 0, 0, 3, 0, 0, 14, 11, 0.0949764982373678, ["mov     rbx, [rsp+78h+arg_posn]", "mov     rbp, cp_0", "mov     [rsp+78h+arg_posn], arg_posn_0"], ["mov~rbx,[rsp+0]", "mov~rbp,cp_0", "mov~[rsp+0],arg_posn_0"]]], "func_feature": [14, 58, 138, 1, 186, 294, 1, 687, 0.08677, 1, 63], "succs": [[9, 6], [0, 69], [3], [32, 2], [90], [90, 4], [45, 15], [6], [6], [3, 31], [21], [10, 22], [116, 117], [139, 12], [12], [26], [45, 15], [15], [15], [90, 108], [96, 101, 38, 103, 104, 105, 19, 152, 89, 91, 102], [67, 76], [21], [54, 47], [86, 23], [51, 29], [25, 50], [80], [27, 132], [48, 30], [48, 39], [7], [7], [28, 86], [40, 52], [34], [8, 34], [34], [34], [48, 43], [52], [155], [41, 38], [65, 46], [56, 63], [44, 133], [48], [53], [49], [26], [49], [49], [58, 59], [57, 76], [53], [63, 55], [55], [60], [148], [58], [82, 62], [24, 60], [70], [18], [152, 35], [20, 38], [18, 37], [153], [81], [68, 159], [73, 70], [144, 38], [143, 71], [82], [38, 126], [74, 13], [86], [76, 78], [76, 79], [130, 76], [121, 76], [81, 84], [16, 36], [120, 33], [14, 159], [171, 149], [85, 87], [85], [124, 149], [90], [109, 150], [90, 92], [90, 93], [90, 94], [90, 95], [90], [97, 90], [90, 98], [90, 99], [90, 100], [90], [90], [90], [90], [90], [90, 106], [90, 107], [90, 5], [90], [83], [112, 72], [110, 111], [119], [83], [168, 178], [177, 114], [117], [75], [125], [125, 118], [123, 135], [120], [146, 119], [134], [128], [137], [75], [129, 164], [142, 127], [128], [129], [129], [80], [72, 147], [136, 134], [64, 140], [135], [122, 151], [137], [141, 38], [152], [61], [148], [153, 166], [143], [143], [145, 38], [111], [], [148], [113, 38], [138, 38], [131, 77], [154, 158], [156], [42, 174], [156, 157], [158], [17, 66], [185, 38], [184, 38], [163], [161], [163, 165], [162, 115], [115, 167], [11, 86], [173], [169, 179], [170, 180], [172, 181], [149], [1, 175], [182, 183], [160, 173], [176], [115], [176], [176], [176], [176], [176], [183], [155], [115], [61]], "fname": "printf_parse", "n_num": 186}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 0, 0, 0, 0.16666666666666666, ["xor     ebx, ebx", "nop     dword ptr [rax+rax+00000000h]"], ["xor~ebx,ebx", "nop~[word ptr [rax+0]"]], [2, 0, 3, 2, 1, 17, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15, rdx", "push    r13", "push    r12", "lea     r12, __frame_dummy_init_array_entry", "push    rbp", "lea     rbp, __do_global_dtors_aux_fini_array_entry", "push    rbx", "mov     r13d, edi", "mov     r14, rsi", "sub     rbp, r12", "sub     rsp, 8", "sar     rbp, 3", "call    _init_proc", "test    rbp, rbp", "jz      short loc_12BA6"], ["push~r15", "push~r14", "mov~r15,rdx", "push~r13", "push~r12", "lea~r12,<TAG>", "push~rbp", "lea~rbp,<TAG>", "push~rbx", "mov~r13d,edi", "mov~r14,rsi", "sub~rbp,r12", "sub~rsp,0", "sar~rbp,0", "call~FOO", "test~rbp,rbp", "jz~FOO"]], [1, 0, 2, 1, 1, 7, 0, 2, 2, 1, 0.16666666666666666, ["mov     rdx, r15", "mov     rsi, r14", "mov     edi, r13d", "call    qword ptr [r12+rbx*8]", "add     rbx, 1", "cmp     rbp, rbx", "jnz     short loc_12B90"], ["mov~rdx,r15", "mov~rsi,r14", "mov~edi,r13d", "call~<TAG>", "add~rbx,0", "cmp~rbp,rbx", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 5, 0, 34, 0.08333, 2, 4], "succs": [[2], [0, 3], [2, 3], []], "fname": "__libc_csu_init", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_csu_fini", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rdx, cs:__dso_handle", "xor     esi, esi", "jmp     ___cxa_atexit"], ["mov~rdx,<TAG>", "xor~esi,esi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 1, 3, 0.0, 1, 0], "succs": [[1], []], "fname": "atexit", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[2, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0.0, ["sub     rsp, 8; _fini", "add     rsp, 8", "retn"], ["sub~rsp,0", "add~rsp,0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 2], "succs": [[]], "fname": "term_proc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_toupper_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_toupper_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getenv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigprocmask:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigprocmask", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __snprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__snprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn raise:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "raise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp_free:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp_free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn localtime:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "localtime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strverscmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strverscmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn abort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __errno_location:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strncpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strncpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strncmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fpending:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn isatty:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "isatty", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigaction_0:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigaction_0", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswcntrl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswcntrl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn localeconv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "localeconv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn readlink:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "readlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn clock_gettime:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "clock_gettime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn textdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fclose:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn opendir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "opendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getpwuid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getpwuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn bindtextdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dcgettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_get_mb_cur_max:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strlen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __lxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__lxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __stack_chk_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getopt_long:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbrtowc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getgrgid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getgrgid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _obstack_begin:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_obstack_begin", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __overflow:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__overflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strrchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn gettimeofday:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "gettimeofday", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __assert_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __strtoul_internal:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__strtoul_internal", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fnmatch:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fnmatch", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ioctl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn closedir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "closedir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strndup:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strndup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __libc_start_main:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_start_main", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _setjmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_setjmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fputs_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn calloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn signal:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "signal", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dirfd:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dirfd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getpwnam:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getpwnam", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __memcpy_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__memcpy_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigemptyset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigemptyset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getgrnam:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getgrnam", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn tcgetpgrp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "tcgetpgrp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __xstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__xstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn readdir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "readdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn wcwidth:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "wcwidth", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp_malloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp_malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strcoll:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strcoll", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mktime:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mktime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fwrite_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fwrite_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn realloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn setlocale:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _obstack_newchunk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_obstack_newchunk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __printf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strftime:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strftime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mempcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mempcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memmove:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn error:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strtoul:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strtoul", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __cxa_atexit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigismember:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigismember", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fwrite:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fflush_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fflush_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbsinit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswprint:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp___cxa_finalize:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp___cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigaddset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigaddset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_tolower_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_tolower_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_b_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __sprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__sprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_ls.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __gmon_start__:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__gmon_start__", "n_num": 1}
