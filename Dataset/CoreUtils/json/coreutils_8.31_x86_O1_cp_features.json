{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    rax ; __gmon_start__"], ["call~rax"]], [1, 0, 2, 1, 0, 4, 1, 1, 0, 1, 0.0, ["sub     rsp, 8; _init", "mov     rax, cs:__gmon_start___ptr", "test    rax, rax", "jz      short loc_26EA"], ["sub~rsp,0", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 3, 1, 7, 0.0, 1, 2], "succs": [[2], [0, 2], []], "fname": "init_proc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0.0, ["push    cs:qword_219C50", "jmp     cs:qword_219C58"], ["push~<TAG>", "jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 108, 2, 0.0, 2, 0], "succs": [[]], "fname": "sub_26F0", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getenv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "getenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:utimensat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "utimensat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:abort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 15, 1, 0.0, 1, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__errno_location_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 127, 1, 0.0, 1, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:unlink_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "unlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strncmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fpending_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__read_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__read_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mkdir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "mkdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:unlinkat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "unlinkat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:qsort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "qsort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:readlink_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "readlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fcntl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:clock_gettime_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "clock_gettime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:write_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "write", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fread_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fread_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:textdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:pathconf_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "pathconf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fclose_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:opendir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "opendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:bindtextdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:stpcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "stpcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:rmdir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "rmdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dcgettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 161, 1, 0.0, 1, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_get_mb_cur_max_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__lxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 13, 1, 0.0, 1, 0], "succs": [[]], "fname": "__lxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:openat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "openat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__stack_chk_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 42, 1, 0.0, 1, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getuid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getopt_long_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbrtowc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstatat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 7, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstatat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__overflow_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__overflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strrchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ftruncate_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "ftruncate", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:lseek_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:gettimeofday_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "gettimeofday", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__assert_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:geteuid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "geteuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ioctl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:canonicalize_file_name_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "canonicalize_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:close_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:rewinddir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "rewinddir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strspn_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strspn", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:closedir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "closedir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:posix_fadvise_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "posix_fadvise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:read_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "read", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fallocate_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fallocate", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fputs_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 24, 1, 0.0, 1, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:utimes_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "utimes", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:calloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__getdelim_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__getdelim", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dirfd_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "dirfd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fpathconf_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fpathconf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:rpmatch_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "rpmatch", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:syscall_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "syscall", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mkfifo_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mkfifo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:umask_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "umask", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 20, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__xmknod_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__xmknod", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fileno_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getgid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getgid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__xstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 13, 1, 0.0, 1, 0], "succs": [[]], "fname": "__xstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:readdir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "readdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:malloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 10, 1, 0.0, 1, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fflush_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:nl_langinfo_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:lchown_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "lchown", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__freading_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:realloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fdopen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fdopen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:linkat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "linkat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:setlocale_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__printf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 19, 1, 0.0, 1, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fchmod_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fchmod", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:setvbuf_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "setvbuf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:chmod_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "chmod", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mempcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "mempcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:error_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 104, 1, 0.0, 1, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__explicit_bzero_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__explicit_bzero_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:open_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fseeko_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fchown_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fchown", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fopen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fopen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:rename_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "rename", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fdopendir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fdopendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:futimens_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "futimens", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:euidaccess_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "euidaccess", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_atexit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:renameat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "renameat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpagesize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpagesize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getppid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getppid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fwrite_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 22, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbsinit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:symlinkat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "symlinkat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswprint_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:futimesat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "futimesat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_b_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:data_freer"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 56, 1, 0.0, 1, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_finalize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 0, 0, 1, 12, 2, 1, 0, 0, 0.0, ["xor     ebp, ebp", "mov     r9, rdx; rtld_fini", "pop     rsi; argc", "mov     rdx, rsp; ubp_av", "and     rsp, 0FFFFFFFFFFFFFFF0h", "push    rax", "push    rsp; stack_end", "lea     r8, __libc_csu_fini; fini", "lea     rcx, __libc_csu_init; init", "lea     rdi, main; main", "call    cs:__libc_start_main_ptr", "hlt"], ["xor~ebp,ebp", "mov~r9,rdx", "pop~rsi", "mov~rdx,rsp", "and~rsp,0", "push~rax", "push~rsp", "lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "call~<TAG>", "hlt"]]], "func_feature": [1, 2, 1, 0, 1, 0, 0, 12, 0.0, 4, 0], "succs": [[]], "fname": "_start", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_deregisterTMCloneTable_ptr", "test    rax, rax", "jz      short loc_2E30"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 6, 0, 1, 0, 1, 0.0, ["lea     rdi, __bss_start", "push    rbp", "lea     rax, __bss_start", "cmp     rax, rdi", "mov     rbp, rsp", "jz      short loc_2E30"], ["lea~rdi,<TAG>", "push~rbp", "lea~rax,<TAG>", "cmp~rax,rdi", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, -1, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 13, 0.04167, 2, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "deregister_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [3, 0, 3, 2, 0, 11, 0, 1, 0, 0, 0.0, ["lea     rdi, __bss_start", "lea     rsi, __bss_start", "push    rbp", "sub     rsi, rdi", "mov     rbp, rsp", "sar     rsi, 3", "mov     rax, rsi", "shr     rax, 3Fh", "add     rsi, rax", "sar     rsi, 1", "jz      short loc_2E80"], ["lea~rdi,<TAG>", "lea~rsi,<TAG>", "push~rbp", "sub~rsi,rdi", "mov~rbp,rsp", "sar~rsi,0", "mov~rax,rsi", "shr~rax,0", "add~rsi,rax", "sar~rsi,0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_registerTMCloneTable_ptr", "test    rax, rax", "jz      short loc_2E80"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, 0, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 18, 0.04167, 2, 2], "succs": [[], [0, 2], [0, 3], []], "fname": "register_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 0, 0, 1, 4, 0, 1, 0, 0, 0.0, ["call    deregister_tm_clones", "mov     cs:completed_7698, 1", "pop     rbp", "retn"], ["call~FOO", "mov~<TAG>,0", "pop~rbp", "retn"]], [1, 0, 2, 0, 0, 4, 0, 1, 1, -1, 0.16666666666666666, ["cmp     cs:__cxa_finalize_ptr, 0", "push    rbp", "mov     rbp, rsp", "jz      short loc_2EB3"], ["cmp~<TAG>,0", "push~rbp", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     rdi, cs:__dso_handle", "call    __cxa_finalize"], ["mov~rdi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:completed_7698, 0", "jnz     short locret_2EC8"], ["cmp~<TAG>,0", "jnz~FOO"]]], "func_feature": [2, 0, 4, 0, 5, 5, 0, 13, 0.03333, 3, 0], "succs": [[], [0, 2], [0], [], [1, 3]], "fname": "__do_global_dtors_aux", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "pop     rbp", "jmp     register_tm_clones"], ["push~rbp", "mov~rbp,rsp", "pop~rbp", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "frame_dummy", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 16, 0, 0, 2, 0, 1, 0, 0, 0.011805555555555554, ["mov     [x+1Fh], r15b; jumptable 0000000000002F9A case 1", "jmp     short loc_2F3C"], ["mov~[x+0],r15b", "jmp~FOO"]], [0, 0, 16, 1, 0, 4, 0, 1, 3, 3, 0.5208333333333334, ["mov     eax, [r12+rax*4]", "movsxd  rax, dword ptr [r14+rax*4]", "add     rax, r14", "jmp     rax; switch jump"], ["mov~eax,<TAG>", "movsxd~rax,<TAG>", "add~rax,r14", "jmp~rax"]], [1, 0, 16, 0, 0, 2, 0, 0, 2, 5, 0.0, ["lea     rbx, [comma+1]", "mov     byte ptr [rax], 0"], ["lea~rbx,[comma+0]", "mov~<TAG>,0"]], [1, 0, 16, 0, 1, 6, 1, 2, 1, 5, 0.5708333333333333, ["mov     esi, 2Ch ; ','; c", "mov     rdi, s; s", "call    _strchr", "mov     rbx, comma", "test    comma, comma", "jz      short loc_2F64"], ["mov~esi,0", "mov~rdi,s", "call~FOO", "mov~rbx,comma", "test~comma,comma", "jz~FOO"]], [0, 0, 16, 0, 0, 3, 1, 1, 5, 1, 0.5625, ["mov     rbp, comma", "test    comma, comma", "jz      loc_2FF9"], ["mov~rbp,comma", "test~comma,comma", "jz~FOO"]], [0, 0, 16, 0, 0, 2, 0, 1, 4, 2, 0.011805555555555554, ["mov     [x+1Dh], r15b; jumptable 0000000000002F9A case 2", "jmp     short loc_2F3C"], ["mov~[x+0],r15b", "jmp~FOO"]], [0, 0, 16, 0, 0, 2, 0, 1, 4, 2, 0.011805555555555554, ["mov     [x+22h], r15b; jumptable 0000000000002F9A case 3", "jmp     short loc_2F3C"], ["mov~[x+0],r15b", "jmp~FOO"]], [0, 0, 16, 0, 0, 3, 0, 1, 4, 2, 0.011805555555555554, ["mov     [x+26h], r15b; jumptable 0000000000002F9A case 4", "mov     [x+25h], r15b", "jmp     short loc_2F3C"], ["mov~[x+0],r15b", "mov~[x+0],r15b", "jmp~FOO"]], [0, 0, 16, 0, 0, 3, 0, 1, 4, 2, 0.011805555555555554, ["mov     [x+27h], r15b; jumptable 0000000000002F9A case 5", "mov     [x+28h], r15b", "jmp     loc_2F3C"], ["mov~[x+0],r15b", "mov~[x+0],r15b", "jmp~FOO"]], [0, 0, 16, 0, 0, 2, 0, 1, 5, 2, 0.1125, ["mov     [x+27h], r15b", "jmp     loc_2F3C"], ["mov~[x+0],r15b", "jmp~FOO"]], [0, 0, 16, 0, 0, 3, 0, 0, 4, 2, 0.011805555555555554, ["mov     [x+1Eh], r15b; jumptable 0000000000002F9A case 0", "movzx   eax, [rsp+58h+var_41]", "mov     [x+20h], al"], ["mov~[x+0],r15b", "movzx~eax,[rsp+0]", "mov~[x+0],al"]], [1, 0, 16, 0, 0, 8, 0, 1, 4, 3, 0.10416666666666667, ["mov     [x+1Eh], r15b; jumptable 0000000000002F9A case 6", "mov     [x+1Fh], r15b", "mov     [x+1Dh], r15b", "mov     [x+22h], r15b", "movzx   eax, [rsp+58h+var_41]", "mov     [x+20h], al", "cmp     cs:selinux_enabled, 0", "jz      short loc_2FEB"], ["mov~[x+0],r15b", "mov~[x+0],r15b", "mov~[x+0],r15b", "mov~[x+0],r15b", "movzx~eax,[rsp+0]", "mov~[x+0],al", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 16, 0, 0, 1, 0, 0, 5, 3, 0.0, ["mov     [x+25h], r15b"], ["mov~[x+0],r15b"]], [2, 0, 16, 1, 1, 24, 2, 2, 0, 6, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 28h", "mov     r13, x", "mov     ebx, edx", "mov     r15d, edx", "call    xstrdup", "mov     rbp, rax", "mov     [rsp+58h+arg_writable], rax", "test    bl, bl", "lea     rdx, aPreserve; \"--preserve\"", "lea     s, aNoPreserve; \"--no-preserve\"", "cmovnz  rax, rdx", "mov     [rsp+58h+context], rax", "lea     r12, preserve_vals_7370", "lea     r14, off_12BE0", "mov     eax, ebx", "xor     eax, 1", "mov     [rsp+58h+var_41], al", "jmp     short loc_2F48"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r13,x", "mov~ebx,edx", "mov~r15d,edx", "call~FOO", "mov~rbp,rax", "mov~[rsp+0],rax", "test~bl,bl", "lea~rdx,<TAG>", "lea~s,<TAG>", "cmovnz~rax,rdx", "mov~[rsp+0],rax", "lea~r12,<TAG>", "lea~r14,<TAG>", "mov~eax,ebx", "xor~eax,0", "mov~[rsp+0],al", "jmp~FOO"]], [2, 0, 16, 0, 1, 9, 0, 2, 2, 4, 0.5791666666666666, ["mov     r9, cs:argmatch_die; exit_fn", "mov     r8d, 4; valsize", "mov     rcx, r12; vallist", "lea     rdx, preserve_args_7371; arglist", "mov     rsi, s; arg", "mov     rdi, [rsp+58h+context]; context", "call    __xargmatch_internal", "cmp     dword ptr [r12+rax*4], 6; switch 7 cases", "ja      short loc_2FF4; jumptable 0000000000002F9A default case"], ["mov~r9,<TAG>", "mov~r8d,0", "mov~rcx,r12", "lea~rdx,<TAG>", "mov~rsi,s", "mov~rdi,[rsp+0]", "call~FOO", "cmp~<TAG>,0", "ja~FOO"]], [1, 0, 0, 1, 1, 10, 0, 1, 6, 0, 0.0, ["mov     rdi, [rsp+58h+arg_writable]; ptr", "call    free", "add     rsp, 28h", "pop     comma", "pop     comma", "pop     r12", "pop     x", "pop     r14", "pop     on_off", "retn"], ["mov~rdi,[rsp+0]", "call~FOO", "add~rsp,0", "pop~comma", "pop~comma", "pop~r12", "pop~x", "pop~r14", "pop~on_off", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    _abort; jumptable 0000000000002F9A default case"], ["call~FOO"]]], "func_feature": [5, 4, 17, 0, 17, 25, 2, 85, 0.14828, 7, 3], "succs": [[4], [0, 5, 6, 7, 8, 10, 11], [14], [2, 14], [3, 15], [4], [4], [4], [4], [4], [4], [9, 12], [9], [3], [16, 1], [], []], "fname": "decode_preserve_arg", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.017857142857142856, ["mov     dword ptr [st+18h], 0", "mov     eax, 0", "jmp     short loc_3057"], ["mov~[word ptr [st+0],0", "mov~eax,0", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 3, 0, 0.125, ["test    r13b, r13b", "jz      short loc_306B"], ["test~r13b,r13b", "jz~FOO"]], [5, 0, 6, 0, 3, 14, 0, 3, 4, 0, 0.03571428571428571, ["mov     rsi, file; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     st, rax", "mov     edx, 5; category", "lea     rsi, msgid; \"failed to access %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, r12d; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["mov~rsi,file", "mov~edi,0", "call~FOO", "mov~st,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,r12d", "mov~edi,0", "mov~eax,0", "call~FOO"]], [0, 0, 7, 0, 1, 4, 1, 2, 1, 0, 0.08928571428571427, ["call    ___errno_location", "mov     r12d, [rax]", "test    r12d, r12d", "jnz     short loc_30A9"], ["call~FOO", "mov~r12d,<TAG>", "test~r12d,r12d", "jnz~FOO"]], [1, 0, 8, 0, 1, 15, 1, 2, 0, 0, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbp, file", "mov     rbx, st", "mov     r14, new_dst", "mov     r13d, ecx", "mov     new_dst, st; stat_buf", "mov     st, file; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jz      short loc_3047"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbp,file", "mov~rbx,st", "mov~r14,new_dst", "mov~r13d,ecx", "mov~new_dst,st", "mov~st,file", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 1, 0, 0, 3, 0, 1, 3, 0, 0.03571428571428571, ["mov     byte ptr [new_dst], 1", "mov     eax, 0", "jmp     short loc_3057"], ["mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 2, 0, 0.23214285714285712, ["cmp     r12d, 2", "jz      short loc_3060"], ["cmp~r12d,0", "jz~FOO"]], [1, 1, 1, 0, 0, 4, 1, 0, 1, 0, 0.03571428571428571, ["mov     eax, [st+18h]", "and     eax, 0F000h", "cmp     eax, 4000h", "setz    al"], ["mov~eax,[st+0]", "and~eax,<STR>", "cmp~eax,0", "setz~al"]], [0, 0, 0, 0, 0, 6, 0, 0, 2, 0, 0.0, ["pop     st", "pop     file", "pop     r12", "pop     r13", "pop     new_dst", "retn"], ["pop~st", "pop~file", "pop~r12", "pop~r13", "pop~new_dst", "retn"]]], "func_feature": [5, 4, 11, 0, 9, 12, 2, 53, 0.06349, 1, 0], "succs": [[8], [0, 2], [6], [6, 7], [3, 7], [8], [1, 5], [8], []], "fname": "target_directory_operand", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 44, 0, 1, 8, 2, 2, 0, 0, 0.00784313725490196, ["call    cached_umask", "not     eax", "and     r13d, eax", "mov     eax, [rbp+stats.st_mode]", "mov     edx, eax", "not     edx", "test    edx, r13d", "jz      loc_35A6"], ["call~FOO", "not~eax", "and~r13d,eax", "mov~eax,[rbp+0]", "mov~edx,eax", "not~edx", "test~edx,r13d", "jz~FOO"]], [0, 0, 44, 0, 0, 5, 1, 1, 15, 7, 0.052941176470588235, ["mov     eax, [rbp+stats.st_mode]", "mov     edx, eax", "not     edx", "test    edx, r13d", "jnz     loc_32EB"], ["mov~eax,[rbp+0]", "mov~edx,eax", "not~edx", "test~edx,r13d", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 13, 2, 0.003529411764705882, ["jmp     loc_3682"], ["jmp~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 12, 3, 0.016470588235294115, ["cmp     byte ptr [x+26h], 0", "jz      loc_3350"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [3, 0, 44, 0, 0, 6, 0, 1, 10, 4, 0.2011764705882353, ["mov     rax, [rbp+new_dst]", "mov     byte ptr [rax], 1", "mov     esi, [new+18h]", "mov     r13d, 3Fh ; '?'", "cmp     byte ptr [x+1Dh], 0", "jnz     short loc_351A"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~esi,[new+0]", "mov~r13d,0", "cmp~[yte ptr [x+0],0", "jnz~FOO"]], [1, 0, 44, 0, 1, 8, 1, 2, 9, 2, 0.20137254901960783, ["mov     edx, [new+18h]; mode", "mov     r8, x; x", "mov     ecx, 1; new_dst", "mov     rsi, dir_0; dst_name", "mov     rdi, [rbp+arg]; src_name", "call    set_process_security_ctx", "test    al, al", "jz      loc_3682"], ["mov~edx,[new+0]", "mov~r8,x", "mov~ecx,0", "mov~rsi,dir_0", "mov~rdi,[rbp+0]", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 44, 0, 1, 6, 1, 2, 13, 3, 0.19686274509803922, ["mov     rdx, [rbp+stat_buf]; stat_buf", "mov     rsi, dir_0; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jnz     loc_3298"], ["mov~rdx,[rbp+0]", "mov~rsi,dir_0", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 44, 0, 0, 3, 1, 1, 12, 4, 0.19137254901960785, ["mov     rax, [rbp+verbose_fmt_string]", "test    rax, rax", "jz      short loc_356C"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [2, 0, 44, 0, 1, 6, 0, 1, 13, 4, 0.0, ["mov     rcx, dir_0", "mov     rdx, [rbp+arg]", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk"], ["mov~rcx,dir_0", "mov~rdx,[rbp+0]", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO"]], [8, 1, 51, 3, 4, 51, 6, 5, 0, 4, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "push    rbx", "sub     rsp, 178h", "mov     r10, const_dir", "mov     r13, src_offset", "mov     [rbp+verbose_fmt_string], verbose_fmt_string_0", "mov     [rbp+attr_list], attr_list_0", "mov     [rbp+new_dst], new_dst_0", "mov     r15, x", "mov     rax, fs:28h", "mov     [rbp+var_38], rax", "xor     eax, eax", "mov     attr_list_0, 0FFFFFFFFFFFFFFFFh", "repne scasb", "mov     verbose_fmt_string_0, rcx", "not     rdx; n", "lea     rax, [__len+1Eh]", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rdi, [rsp+1A0h+dir+7]", "and     rdi, 0FFFFFFFFFFFFFFF0h; dest", "mov     src_offset, __old; src", "call    _memcpy", "mov     r14, rax", "mov     [rbp+dir], dir_0", "mov     rdi, dir_0; file", "call    dir_len", "mov     r12, rax", "lea     dirlen, [dirlen+1Fh]", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rbx, [rsp+1A0h+dir+7]", "and     rbx, 0FFFFFFFFFFFFFFF0h", "mov     rdx, dirlen; n", "mov     rsi, dir_0; src", "mov     rdi, dst_dir; dest", "call    _memcpy", "mov     byte ptr [dst_dir+dirlen], 0", "mov     rcx, [rbp+attr_list]", "mov     qword ptr [rcx], 0", "lea     rdx, [rbp+stats]; stat_buf", "mov     rsi, dst_dir; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jz      loc_3661"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "push~rbx", "sub~rsp,<STR>", "mov~r10,const_dir", "mov~r13,src_offset", "mov~[rbp+0],verbose_fmt_string_0", "mov~[rbp+0],attr_list_0", "mov~[rbp+0],new_dst_0", "mov~r15,x", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~attr_list_0,0", "scasb~<TAG>,", "mov~verbose_fmt_string_0,rcx", "not~rdx", "lea~rax,[__len+0]", "and~rax,0", "sub~rsp,rax", "lea~rdi,[rsp+0]", "and~rdi,0", "mov~src_offset,__old", "call~FOO", "mov~r14,rax", "mov~[rbp+0],dir_0", "mov~rdi,dir_0", "call~FOO", "mov~r12,rax", "lea~dirlen,[dirlen+0]", "and~rax,0", "sub~rsp,rax", "lea~rbx,[rsp+0]", "and~rbx,0", "mov~rdx,dirlen", "mov~rsi,dir_0", "mov~rdi,dst_dir", "call~FOO", "mov~<TAG>,0", "mov~rcx,[rbp+0]", "mov~<TAG>,0", "lea~rdx,[rbp+0]", "mov~rsi,dst_dir", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 44, 0, 0, 3, 1, 0, 17, 5, 0.013725490196078431, ["or      r13d, eax", "mov     [new+18h], r13d", "mov     byte ptr [new+90h], 1"], ["or~r13d,eax", "mov~[new+0],r13d", "mov~[yte ptr [new+0],0"]], [2, 0, 44, 0, 0, 4, 1, 1, 16, 6, 0.041176470588235294, ["mov     edx, eax", "and     edx, 1C0h", "cmp     edx, 1C0h", "jnz     loc_3308"], ["mov~edx,eax", "and~edx,0", "cmp~edx,0", "jnz~FOO"]], [7, 0, 3, 0, 3, 16, 0, 4, 9, 2, 0.001176470588235294, ["mov     rsi, [rbp+dir]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aSExistsButIsNo; \"%s exists but is not a directory\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     eax, 0", "jmp     short loc_3682"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~eax,0", "jmp~FOO"]], [1, 1, 44, 0, 0, 4, 1, 1, 8, 3, 0.10313725490196078, ["mov     eax, [rbp+stats.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     loc_360F"], ["mov~eax,[rbp+0]", "and~eax,<STR>", "cmp~eax,0", "jnz~FOO"]], [6, 0, 3, 0, 4, 18, 0, 5, 12, 2, 0.003529411764705882, ["mov     rsi, [rbp+dir]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     slash, rax", "mov     edx, 5; category", "lea     rsi, aCannotMakeDire; \"cannot make directory %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     new, rax", "call    ___errno_location", "mov     rcx, r12", "mov     rdx, rbx; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     eax, 0", "jmp     loc_3682"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~slash,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~new,rax", "call~FOO", "mov~rcx,r12", "mov~rdx,rbx", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~eax,0", "jmp~FOO"]], [2, 1, 44, 0, 1, 11, 4, 2, 11, 3, 0.20666666666666667, ["and     r13d, esi", "cmp     byte ptr [x+20h], 0", "mov     eax, 1FFh", "cmovnz  esi, eax", "mov     eax, r13d", "xor     eax, 0FFFh", "and     esi, eax; mode", "mov     rdi, dir_0; path", "call    _mkdir", "test    eax, eax", "jnz     loc_3245"], ["and~r13d,esi", "cmp~[yte ptr [x+0],0", "mov~eax,0", "cmovnz~esi,eax", "mov~eax,r13d", "xor~eax,<STR>", "and~esi,eax", "mov~rdi,dir_0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 10, 2, 0.001176470588235294, ["jmp     loc_3682"], ["jmp~FOO"]], [2, 0, 44, 0, 1, 8, 1, 2, 9, 3, 0.04, ["mov     r8, x; x", "mov     ecx, 0; new_dst", "mov     edx, 0; mode", "mov     rsi, dir_0; dst_name", "mov     rdi, [rbp+arg]; src_name", "call    set_process_security_ctx", "test    al, al", "jnz     loc_370F"], ["mov~r8,x", "mov~ecx,0", "mov~edx,0", "mov~rsi,dir_0", "mov~rdi,[rbp+0]", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 1, 44, 0, 0, 4, 1, 0, 11, 4, 0.0, ["cmp     byte ptr [x+1Eh], 1", "sbb     r13d, r13d", "not     r13d", "and     r13d, 12h"], ["cmp~[yte ptr [x+0],0", "sbb~r13d,r13d", "not~r13d", "and~r13d,<STR>"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 3, 1, 0.038431372549019606, ["mov     rcx, [rbp+var_38]", "xor     rcx, fs:28h", "jnz     loc_3799"], ["mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [2, 0, 44, 0, 1, 8, 1, 2, 5, 4, 0.34784313725490196, ["mov     byte ptr [r12], 0", "mov     rdx, [rbp+stat_buf]; stat_buf", "mov     rsi, dir_0; filename", "mov     edi, 1; ver", "call    ___xstat", "mov     r13d, eax", "test    eax, eax", "jnz     short loc_33AF"], ["mov~<TAG>,0", "mov~rdx,[rbp+0]", "mov~rsi,dir_0", "mov~edi,0", "call~FOO", "mov~r13d,eax", "test~eax,eax", "jnz~FOO"]], [1, 0, 44, 0, 1, 5, 1, 2, 4, 3, 0.3713725490196078, ["mov     esi, 2Fh ; '/'; c", "call    _strchr", "mov     r12, rax", "test    slash, slash", "jz      loc_365A"], ["mov~esi,0", "call~FOO", "mov~r12,rax", "test~slash,slash", "jz~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 14, 5, 0.18156862745098037, ["cmp     byte ptr [x+1Eh], 0", "jnz     loc_3316"], ["cmp~[yte ptr [x+0],0", "jnz~FOO"]], [0, 0, 0, 0, 0, 8, 0, 0, 4, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     dir_0", "pop     x", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~dir_0", "pop~x", "pop~rbp", "retn"]], [2, 0, 44, 0, 0, 5, 1, 1, 15, 4, 0.14784313725490195, ["mov     esi, [rbp+stats.st_mode]", "mov     eax, esi", "and     eax, 1C0h", "cmp     eax, 1C0h", "jz      short loc_3340"], ["mov~esi,[rbp+0]", "mov~eax,esi", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 44, 0, 0, 2, 1, 1, 6, 3, 0.07058823529411765, ["test    dword ptr [x+1Ch], 0FFFFFF00h", "jz      loc_36EB"], ["test~[word ptr [x+0],0", "jz~FOO"]], [1, 0, 47, 1, 0, 5, 0, 1, 1, 6, 0.017254901960784313, ["add     src_offset, [rbp+dir]", "mov     rdi, r13", "mov     [rbp+arg], r13", "cmp     byte ptr [r13+0], 2Fh ; '/'", "jnz     short loc_31D6"], ["add~src_offset,[rbp+0]", "mov~rdi,r13", "mov~[rbp+0],r13", "cmp~[yte ptr [r13+0],0", "jnz~FOO"]], [1, 0, 44, 0, 0, 2, 0, 0, 9, 6, 0.09019607843137255, ["mov     rax, [rbp+new_dst]", "mov     byte ptr [rax], 0"], ["mov~rax,[rbp+0]", "mov~<TAG>,0"]], [2, 0, 46, 1, 0, 3, 0, 1, 2, 5, 0.017058823529411765, ["add     slash, 1", "cmp     byte ptr [slash], 2Fh ; '/'", "jz      short loc_31AC"], ["add~slash,0", "cmp~<TAG>,0", "jz~FOO"]], [2, 0, 44, 1, 1, 49, 1, 2, 8, 3, 0.2527450980392157, ["mov     edi, 0A8h; n", "call    xmalloc", "mov     rbx, rax", "mov     new, [rbp+src_st.st_dev]", "mov     rdx, [rbp+src_st.st_ino]", "mov     [new], rax", "mov     [new+8], rdx", "mov     rax, [rbp+src_st.st_nlink]", "mov     rdx, qword ptr [rbp+src_st.st_mode]", "mov     [new+10h], rax", "mov     [new+18h], rdx", "mov     rax, qword ptr [rbp+src_st.st_gid]", "mov     rdx, [rbp+src_st.st_rdev]", "mov     [new+20h], rax", "mov     [new+28h], rdx", "mov     rax, [rbp+src_st.st_size]", "mov     rdx, [rbp+src_st.st_blksize]", "mov     [new+30h], rax", "mov     [new+38h], rdx", "mov     rax, [rbp+src_st.st_blocks]", "mov     rdx, [rbp+src_st.st_atim.tv_sec]", "mov     [new+40h], rax", "mov     [new+48h], rdx", "mov     rax, [rbp+src_st.st_atim.tv_nsec]", "mov     rdx, [rbp+src_st.st_mtim.tv_sec]", "mov     [new+50h], rax", "mov     [new+58h], rdx", "mov     rax, [rbp+src_st.st_mtim.tv_nsec]", "mov     rdx, [rbp+src_st.st_ctim.tv_sec]", "mov     [new+60h], rax", "mov     [new+68h], rdx", "mov     rax, [rbp+src_st.st_ctim.tv_nsec]", "mov     rdx, [rbp+src_st.__glibc_reserved]", "mov     [new+70h], rax", "mov     [new+78h], rdx", "mov     rax, [rbp+src_st.__glibc_reserved+8]", "mov     rdx, [rbp+src_st.__glibc_reserved+10h]", "mov     [new+80h], rax", "mov     [new+88h], rdx", "mov     rax, slash", "sub     rax, dir_0", "mov     [new+98h], rax", "mov     byte ptr [new+90h], 0", "mov     rcx, [rbp+attr_list]", "mov     rax, [rcx]", "mov     [new+0A0h], rax", "mov     [rcx], new", "test    r13d, r13d", "jz      loc_3770"], ["mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~new,[rbp+0]", "mov~rdx,[rbp+0]", "mov~<TAG>,rax", "mov~[new+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[word ptr [rbp+0]", "mov~[new+0],rax", "mov~[new+0],rdx", "mov~rax,[word ptr [rbp+0]", "mov~rdx,[rbp+0]", "mov~[new+0],rax", "mov~[new+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[new+0],rax", "mov~[new+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[new+0],rax", "mov~[new+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[new+0],rax", "mov~[new+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[new+0],rax", "mov~[new+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[new+0],rax", "mov~[new+0],rdx", "mov~rax,[rbp+0]", "mov~rdx,[rbp+0]", "mov~[new+0],rax", "mov~[new+0],rdx", "mov~rax,slash", "sub~rax,dir_0", "mov~[new+0],rax", "mov~[yte ptr [new+0],0", "mov~rcx,[rbp+0]", "mov~rax,<TAG>", "mov~[new+0],rax", "mov~<TAG>,new", "test~r13d,r13d", "jz~FOO"]], [1, 1, 44, 0, 0, 4, 1, 1, 7, 4, 0.13215686274509802, ["mov     eax, [rbp+src_st.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_33DE"], ["mov~eax,[rbp+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [0, 0, 44, 0, 1, 4, 1, 2, 7, 3, 0.13294117647058823, ["call    ___errno_location", "mov     ebx, [rax]", "test    ebx, ebx", "jnz     loc_31FA"], ["call~FOO", "mov~ebx,<TAG>", "test~ebx,ebx", "jnz~FOO"]], [1, 0, 44, 0, 1, 5, 2, 2, 16, 3, 0.021176470588235293, ["or      esi, 1C0h; mode", "mov     rdi, dir_0; file", "call    _chmod", "test    eax, eax", "jnz     loc_35BF"], ["or~esi,0", "mov~rdi,dir_0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 44, 0, 1, 8, 1, 2, 7, 2, 0.06274509803921569, ["mov     r8, x; x", "mov     ecx, 0; new_dst", "mov     edx, 0; mode", "mov     rsi, dir_0; dst_name", "mov     rdi, [rbp+arg]; src_name", "call    set_process_security_ctx", "test    al, al", "jz      loc_3682"], ["mov~r8,x", "mov~ecx,0", "mov~edx,0", "mov~rsi,dir_0", "mov~rdi,[rbp+0]", "call~FOO", "test~al,al", "jz~FOO"]], [6, 0, 3, 0, 4, 18, 0, 5, 17, 2, 0.008235294117647058, ["mov     rsi, [rbp+dir]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     slash, rax", "mov     edx, 5; category", "lea     rsi, aSettingPermiss; \"setting permissions for %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     new, rax", "call    ___errno_location", "mov     rcx, r12", "mov     rdx, rbx; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     eax, 0", "jmp     short loc_3682"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~slash,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~new,rax", "call~FOO", "mov~rcx,r12", "mov~rdx,rbx", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~eax,0", "jmp~FOO"]], [1, 0, 44, 0, 0, 3, 1, 1, 10, 5, 0.1180392156862745, ["mov     rax, 0FF000000FF00h", "test    [x+20h], rax", "jz      loc_3350"], ["mov~rax,0", "test~[x+0],rax", "jz~FOO"]], [1, 0, 44, 0, 0, 3, 0, 1, 16, 5, 0.1807843137254902, ["mov     rax, [rbp+new_dst]", "cmp     byte ptr [rax], 0", "jz      loc_372F"], ["mov~rax,[rbp+0]", "cmp~<TAG>,0", "jz~FOO"]], [6, 0, 3, 0, 3, 16, 0, 4, 8, 2, 0.004117647058823529, ["mov     rsi, [rbp+arg]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     slash, rax", "mov     edx, 5; category", "lea     rsi, aFailedToGetAtt; \"failed to get attributes of %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "mov     esi, ebx; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     eax, 0", "jmp     loc_3682"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~slash,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "mov~esi,ebx", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~eax,0", "jmp~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 8, 3, 0.000980392156862745, ["mov     ebx, 14h"], ["mov~ebx,0"]], [1, 0, 44, 0, 1, 6, 1, 2, 6, 4, 0.2764705882352941, ["mov     rdx, [rbp+var_188]; stat_buf", "mov     rsi, [rbp+arg]; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jz      loc_31DF"], ["mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 44, 0, 0, 1, 0, 1, 17, 6, 0.03333333333333333, ["jmp     loc_3340"], ["jmp~FOO"]], [0, 0, 44, 0, 0, 5, 0, 1, 3, 4, 0.06784313725490196, ["lea     rax, [rbp+stats]", "mov     [rbp+stat_buf], rax", "lea     rax, [rbp+src_st]", "mov     [rbp+var_188], rax", "jmp     loc_336B"], ["lea~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 45, 0, 0, 2, 0, 1, 2, 5, 0.017058823529411765, ["mov     rdi, [rbp+arg]", "jmp     short loc_31B5"], ["mov~rdi,[rbp+0]", "jmp~FOO"]], [1, 0, 44, 0, 1, 7, 1, 2, 11, 4, 0.028627450980392155, ["movzx   esi, byte ptr [x+25h]; process_local", "mov     rcx, x; x", "mov     edx, 0; recurse", "mov     rdi, dir_0; dst_name", "call    set_file_security_ctx", "test    al, al", "jnz     loc_3350"], ["movzx~esi,[yte ptr [x+0]", "mov~rcx,x", "mov~edx,0", "mov~rdi,dir_0", "call~FOO", "test~al,al", "jnz~FOO"]], [6, 0, 3, 0, 4, 18, 0, 5, 14, 2, 0.003529411764705882, ["mov     rsi, [rbp+dir]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     slash, rax", "mov     edx, 5; category", "lea     rsi, aFailedToGetAtt; \"failed to get attributes of %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     new, rax", "call    ___errno_location", "mov     rcx, r12", "mov     rdx, rbx; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     eax, 0", "jmp     loc_3682"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~slash,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~new,rax", "call~FOO", "mov~rcx,r12", "mov~rdx,rbx", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 5, 2, 0.011764705882352941, ["mov     eax, 1", "jmp     short loc_3682"], ["mov~eax,0", "jmp~FOO"]], [7, 0, 3, 0, 3, 16, 0, 4, 2, 2, 0.001176470588235294, ["mov     rsi, dst_dir; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     dst_dir, rax", "mov     edx, 5; category", "lea     rsi, aSExistsButIsNo; \"%s exists but is not a directory\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     eax, 0", "jmp     short loc_3682"], ["mov~rsi,dst_dir", "mov~edi,0", "call~FOO", "mov~dst_dir,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~eax,0", "jmp~FOO"]], [2, 0, 3, 0, 0, 3, 0, 0, 2, 2, 0.001176470588235294, ["mov     rax, [rbp+new_dst]", "mov     byte ptr [rax], 0", "mov     eax, 1"], ["mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~eax,0"]], [2, 0, 44, 0, 0, 4, 0, 1, 11, 4, 0.2807843137254902, ["lea     rdi, [slash+1]", "mov     byte ptr [r12], 2Fh ; '/'", "cmp     byte ptr [r12+1], 2Fh ; '/'", "jnz     short loc_336B"], ["lea~rdi,[slash+0]", "mov~<TAG>,0", "cmp~[yte ptr [r12+0],0", "jnz~FOO"]], [2, 0, 44, 1, 0, 3, 0, 1, 12, 4, 0.0, ["add     slash, 1; s", "cmp     byte ptr [slash], 2Fh ; '/'", "jz      short loc_3362"], ["add~slash,0", "cmp~<TAG>,0", "jz~FOO"]], [1, 1, 5, 0, 0, 4, 1, 1, 1, 3, 0.00196078431372549, ["mov     eax, [rbp+stats.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     short loc_36A4"], ["mov~eax,[rbp+0]", "and~eax,<STR>", "cmp~eax,0", "jnz~FOO"]]], "func_feature": [40, 36, 84, 2, 52, 82, 1, 391, 0.08081, 5, 7], "succs": [[10, 11], [0, 11], [20], [49, 2], [18, 15], [20, 4], [45, 23], [8, 6], [6], [51, 27], [25], [41, 10], [20], [28, 12], [20], [14, 7], [20], [16, 13], [15], [], [24, 19], [40, 26], [21, 46], [1, 25], [], [33, 37], [40, 34], [43, 29], [36], [42, 29], [17, 5], [30, 39], [38, 30], [35, 37], [20, 13], [20], [49, 44], [49, 36], [20], [38], [32, 31], [37], [22], [42], [49, 3], [20], [20], [20], [20], [50, 22], [50, 22], [48, 47]], "fname": "make_dir_parents_private", "n_num": 52}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[3, 1, 21, 3, 1, 31, 4, 2, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "push    rbx", "sub     rsp, 48h", "mov     r8, const_dst_name", "mov     r14, src_offset", "mov     rbx, attr_list", "mov     r13, x", "mov     rax, fs:28h", "mov     [rbp+var_38], rax", "xor     eax, eax", "mov     x, 0FFFFFFFFFFFFFFFFh", "repne scasb", "not     rcx", "mov     attr_list, rcx; n", "lea     rax, [rcx+1Eh]", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rdi, [rsp+70h+src_name+7]", "and     rdi, 0FFFFFFFFFFFFFFF0h; dest", "mov     src_offset, __old; src", "call    _memcpy", "mov     [rbp+dst_name], rax", "add     src_offset, dst_name_0", "mov     [rbp+src_name], r14", "test    p, p", "jz      loc_3A0C"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "push~rbx", "sub~rsp,<STR>", "mov~r8,const_dst_name", "mov~r14,src_offset", "mov~rbx,attr_list", "mov~r13,x", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~x,0", "scasb~<TAG>,", "not~rcx", "mov~attr_list,rcx", "lea~rax,[rcx+0]", "and~rax,0", "sub~rsp,rax", "lea~rdi,[rsp+0]", "and~rdi,0", "mov~src_offset,__old", "call~FOO", "mov~[rbp+0],rax", "add~src_offset,dst_name_0", "mov~[rbp+0],r14", "test~p,p", "jz~FOO"]], [0, 0, 0, 0, 0, 8, 0, 0, 0, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     x", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~x", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 0, 1, 0.09047619047619049, ["mov     eax, r14d", "mov     rcx, [rbp+var_38]", "xor     rcx, fs:28h", "jnz     short loc_3A1C"], ["mov~eax,r14d", "mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 19, 0, 0, 2, 0, 1, 0, 4, 0.10714285714285715, ["cmp     byte ptr [p+90h], 0", "jz      short loc_393D"], ["cmp~[yte ptr [p+0],0", "jz~FOO"]], [0, 0, 19, 0, 0, 3, 1, 1, 0, 4, 0.22261904761904763, ["movzx   r14d, byte ptr [x+1Eh]", "test    r14b, r14b", "jnz     short loc_391E"], ["movzx~r14d,[yte ptr [x+0]", "test~r14b,r14b", "jnz~FOO"]], [0, 0, 19, 0, 0, 3, 0, 1, 0, 5, 0.0380952380952381, ["mov     r12, dst_name_0", "lea     r15, [rbp+timespec]", "jmp     loc_3959"], ["mov~r12,dst_name_0", "lea~r15,[rbp+0]", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 0, 2, 0.0071428571428571435, ["mov     r14d, 1", "jmp     short loc_39EB"], ["mov~r14d,0", "jmp~FOO"]], [0, 0, 19, 0, 1, 6, 1, 2, 0, 4, 0.07976190476190477, ["mov     edx, [p+20h]; group", "mov     esi, [p+1Ch]; owner", "mov     rdi, dst_name_0; file", "call    _lchown", "test    eax, eax", "jz      loc_397B"], ["mov~edx,[p+0]", "mov~esi,[p+0]", "mov~rdi,dst_name_0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 19, 0, 1, 5, 0, 2, 0, 5, 0.030952380952380953, ["mov     edx, [p+20h]; group", "mov     esi, 0FFFFFFFFh; owner", "mov     rdi, dst_name_0; file", "call    _lchown", "jmp     loc_397B"], ["mov~edx,[p+0]", "mov~esi,0", "mov~rdi,dst_name_0", "call~FOO", "jmp~FOO"]], [1, 0, 19, 0, 0, 2, 0, 1, 0, 5, 0.2142857142857143, ["cmp     byte ptr [x+1Dh], 0", "jnz     loc_3899"], ["cmp~[yte ptr [x+0],0", "jnz~FOO"]], [6, 0, 3, 0, 4, 18, 0, 5, 0, 2, 0.02142857142857143, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     dst_name_0, rax", "mov     edx, 5; category", "lea     rsi, aFailedToPreser_0; \"failed to preserve times for %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     p, rax", "call    ___errno_location", "mov     rcx, r12", "mov     rdx, rbx; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     r14d, 0", "jmp     loc_39EB"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~dst_name_0,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~p,rax", "call~FOO", "mov~rcx,r12", "mov~rdx,rbx", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~r14d,0", "jmp~FOO"]], [0, 0, 19, 0, 1, 13, 1, 2, 0, 3, 0.04285714285714286, ["mov     rax, [p+50h]", "mov     rdx, [p+48h]", "mov     [rbp+timespec.tv_sec], rdx", "mov     [rbp+timespec.tv_nsec], rax", "mov     rax, [p+60h]", "mov     rdx, [p+58h]", "mov     [rbp+timespec.tv_sec+10h], rdx", "mov     [rbp+timespec.tv_nsec+10h], rax", "mov     rsi, r15; timespec", "mov     rdi, dst_name_0; file", "call    utimens", "test    eax, eax", "jz      loc_3970"], ["mov~rax,[p+0]", "mov~rdx,[p+0]", "mov~[rbp+0],rdx", "mov~[rbp+0],rax", "mov~rax,[p+0]", "mov~rdx,[p+0]", "mov~[rbp+0],rdx", "mov~[rbp+0],rax", "mov~rsi,r15", "mov~rdi,dst_name_0", "call~FOO", "test~eax,eax", "jz~FOO"]], [5, 0, 3, 0, 4, 17, 0, 5, 0, 2, 0.01785714285714286, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     dst_name_0, rax", "mov     edx, 5; category", "lea     rsi, aFailedToPreser_1; \"failed to preserve ownership for %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     p, rax", "call    ___errno_location", "mov     rcx, r12", "mov     rdx, rbx; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     loc_39EB"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~dst_name_0,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~p,rax", "call~FOO", "mov~rcx,r12", "mov~rdx,rbx", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [0, 0, 19, 0, 1, 5, 1, 2, 0, 3, 0.06547619047619048, ["mov     rdi, x; x", "call    chown_failure_ok", "mov     r14d, eax", "test    al, al", "jz      short loc_38D3"], ["mov~rdi,x", "call~FOO", "mov~r14d,eax", "test~al,al", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 0, 2, 0.025, ["mov     r14d, 0", "jmp     short loc_39EB"], ["mov~r14d,0", "jmp~FOO"]], [1, 0, 19, 0, 1, 8, 1, 2, 0, 3, 0.1011904761904762, ["mov     r8d, [p+18h]; mode", "mov     ecx, 0FFFFFFFFh; dest_desc", "mov     rdx, dst_name_0; dst_name", "mov     esi, ecx; source_desc", "mov     rdi, [rbp+src_name]; src_name", "call    copy_acl", "test    eax, eax", "jnz     loc_3A14"], ["mov~r8d,[p+0]", "mov~ecx,0", "mov~rdx,dst_name_0", "mov~esi,ecx", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 19, 0, 1, 5, 1, 2, 0, 3, 0.03214285714285715, ["mov     esi, [p+18h]; mode", "mov     rdi, dst_name_0; file", "call    _chmod", "test    eax, eax", "jz      short loc_393D"], ["mov~esi,[p+0]", "mov~rdi,dst_name_0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 0, 19, 0, 0, 4, 0, 1, 0, 4, 0.2380952380952381, ["mov     rax, [p+98h]", "mov     byte ptr [dst_name_0+rax], 0", "cmp     byte ptr [x+1Fh], 0", "jnz     loc_3815"], ["mov~rax,[p+0]", "mov~<TAG>,0", "cmp~[yte ptr [x+0],0", "jnz~FOO"]], [1, 0, 19, 0, 0, 5, 1, 1, 0, 3, 0.18214285714285716, ["mov     rax, [p+98h]", "mov     byte ptr [dst_name_0+rax], 2Fh ; '/'", "mov     p, [p+0A0h]", "test    p, p", "jz      loc_39E5"], ["mov~rax,[p+0]", "mov~<TAG>,0", "mov~p,[p+0]", "test~p,p", "jz~FOO"]], [5, 0, 3, 0, 4, 17, 0, 5, 0, 2, 0.010714285714285714, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     dst_name_0, rax", "mov     edx, 5; category", "lea     rsi, aFailedToPreser; \"failed to preserve permissions for %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     p, rax", "call    ___errno_location", "mov     rcx, r12", "mov     rdx, rbx; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     short loc_39EB"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~dst_name_0,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~p,rax", "call~FOO", "mov~rcx,r12", "mov~rdx,rbx", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 0, 2, 0.010714285714285714, ["mov     r14d, 1"], ["mov~r14d,0"]]], "func_feature": [20, 12, 39, 1, 22, 32, 1, 162, 0.06991, 4, 3], "succs": [[5, 6], [], [1, 17], [16, 19], [3, 15], [18], [2], [4, 13], [4], [4, 7], [2], [9, 10], [2], [8, 12], [2], [19, 14], [19, 20], [], [9, 11], [18, 21], [2], [2]], "fname": "re_protect", "n_num": 22}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[6, 0, 5, 0, 3, 15, 1, 4, 0, 0, 0.08125, ["mov     edx, 5; category", "lea     rsi, aSOnlineHelpS; \"\\n%s online help: <%s>\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, package; \"GNU \"", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     esi, 0; locale", "mov     edi, 5; category", "call    _setlocale", "test    rax, rax", "jz      short loc_3EFF"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~esi,0", "mov~edi,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 11, 0, 0, 3, 1, 1, 3, 3, 0.17916666666666667, ["mov     rbp, [rdx+8]", "test    rbp, rbp", "jz      loc_4001"], ["mov~rbp,[rdx+0]", "test~rbp,rbp", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 6, -1, 0.016666666666666666, ["lea     rbp, command_name; \"cp\""], ["lea~rbp,<TAG>"]], [1, 0, 6, 0, 1, 6, 1, 2, 5, 1, 0.058333333333333334, ["mov     edx, 3; n", "lea     rsi, s2; \"en_\"", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     loc_3F84"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [6, 0, 8, 0, 3, 15, 1, 4, 4, 2, 0.10208333333333333, ["mov     edx, 5; category", "lea     rsi, aSOnlineHelpS; \"\\n%s online help: <%s>\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, package; \"GNU \"", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     esi, 0; locale", "mov     edi, 5; category", "call    _setlocale", "test    rax, rax", "jz      loc_3FB8"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~esi,0", "mov~edi,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [46, 0, 14, 0, 42, 197, 0, 42, 1, 5, 0.05416666666666667, ["mov     rbp, cs:program_name", "mov     edx, 5; category", "lea     rsi, aUsageSOptionTS; \"Usage: %s [OPTION]... [-T] SOURCE DEST\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8, rbp", "mov     rcx, rbp", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aCopySourceToDe; \"Copy SOURCE to DEST, or multiple SOURCE\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aMandatoryArgum; \"\\nMandatory arguments to long options a\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aAArchiveSameAs; \"  -a, --archive                same as \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aFForceIfAnExis; \"  -f, --force                  if an ex\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aLLinkHardLinkF; \"  -l, --link                   hard lin\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aNNoClobberDoNo; \"  -n, --no-clobber             do not o\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aPSameAsPreserv; \"  -p                           same as \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aNoPreserveAttr; \"      --no-preserve=ATTR_LIST  don't pr\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aRRRecursiveCop; \"  -R, -r, --recursive          copy dir\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aSparseWhenCont; \"      --sparse=WHEN            control \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aSSymbolicLinkM; \"  -s, --symbolic-link          make sym\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aUUpdateCopyOnl; \"  -u, --update                 copy onl\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aZSetSelinuxSec; \"  -Z                           set SELi\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aHelpDisplayThi; \"      --help     display this help and \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aVersionOutputV; \"      --version  output version informa\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aByDefaultSpars; \"\\nBy default, sparse SOURCE files are d\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aWhenReflinkAlw; \"\\nWhen --reflink[=always] is specified,\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aTheBackupSuffi; \"\\nThe backup suffix is '~', unless set \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aNoneOffNeverMa; \"  none, off       never make backups (e\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aAsASpecialCase; \"\\nAs a special case, cp makes a backup \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "lea     rax, asc_12928; \"[\"", "mov     [rsp+98h+var_98], rax", "lea     rax, aTestInvocation; \"test invocation\"", "mov     [rsp+98h+var_90], rax", "lea     rax, domainname; \"coreutils\"", "mov     [rsp+98h+var_88], rax", "lea     rax, aMultiCallInvoc; \"Multi-call invocation\"", "mov     [rsp+98h+var_80], rax", "lea     rax, aSha224sum; \"sha224sum\"", "mov     [rsp+98h+var_78], rax", "lea     rax, aSha2Utilities; \"sha2 utilities\"", "mov     [rsp+98h+var_70], rax", "lea     rcx, aSha256sum; \"sha256sum\"", "mov     [rsp+98h+var_68], rcx", "mov     [rsp+98h+var_60], rax", "lea     rcx, aSha384sum; \"sha384sum\"", "mov     [rsp+98h+var_58], rcx", "mov     [rsp+98h+var_50], rax", "lea     rcx, aSha512sum; \"sha512sum\"", "mov     [rsp+98h+var_48], rcx", "mov     [rsp+98h+var_40], rax", "mov     [rsp+98h+var_38], 0", "mov     [rsp+98h+var_30], 0", "mov     rdx, rsp", "lea     r8, command_name; \"cp\""], ["mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8,rbp", "mov~rcx,rbp", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "lea~rax,<TAG>", "mov~<TAG>,rax", "lea~rax,<TAG>", "mov~[rsp+0],rax", "lea~rax,<TAG>", "mov~[rsp+0],rax", "lea~rax,<TAG>", "mov~[rsp+0],rax", "lea~rax,<TAG>", "mov~[rsp+0],rax", "lea~rax,<TAG>", "mov~[rsp+0],rax", "lea~rcx,<TAG>", "mov~[rsp+0],rcx", "mov~[rsp+0],rax", "lea~rcx,<TAG>", "mov~[rsp+0],rcx", "mov~[rsp+0],rax", "lea~rcx,<TAG>", "mov~[rsp+0],rcx", "mov~[rsp+0],rax", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~rdx,rsp", "lea~r8,<TAG>"]], [1, 0, 16, 1, 0, 10, 2, 1, 0, 6, 0.0, ["push    r12", "push    rbp", "push    rbx", "add     rsp, 0FFFFFFFFFFFFFF80h", "mov     ebx, edi", "mov     rax, fs:28h", "mov     [rsp+98h+var_20], rax", "xor     eax, eax", "test    edi, edi", "jz      short loc_3A7F"], ["push~r12", "push~rbp", "push~rbx", "add~rsp,0", "mov~ebx,edi", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~edi,edi", "jz~FOO"]], [4, 0, 2, 0, 2, 13, 0, 3, 5, -1, 0.027083333333333334, ["mov     edx, 5; category", "lea     rsi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "lea     rcx, command_name; \"cp\"", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "lea     rbp, command_name; \"cp\"", "lea     r12, aMultiCallInvoc+0Ah; \" invocation\"", "jmp     loc_3F51"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "lea~rbp,<TAG>", "lea~r12,<TAG>", "jmp~FOO"]], [2, 0, 14, 0, 0, 7, 1, 1, 3, 4, 0.0, ["mov     ecx, 3", "mov     rsi, r8", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     short loc_3E6D"], ["mov~ecx,0", "mov~rsi,r8", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [1, 0, 14, 1, 0, 4, 1, 1, 2, 4, 0.10416666666666667, ["add     rdx, 10h", "mov     rdi, [rdx]", "test    rdi, rdi", "jz      short loc_3E8C"], ["add~rdx,0", "mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [4, 0, 2, 0, 2, 15, 0, 2, 5, -1, 0.052083333333333336, ["mov     edx, 5; category", "lea     rsi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "lea     rcx, command_name; \"cp\"", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "lea     rax, command_name; \"cp\"", "cmp     rbp, rax", "lea     r12, aMultiCallInvoc+0Ah; \" invocation\"", "lea     rax, aSSUnbackup+14h; \"\"", "cmovnz  r12, rax"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "lea~rax,<TAG>", "cmp~rbp,rax", "lea~r12,<TAG>", "lea~rax,<TAG>", "cmovnz~r12,rax"]], [2, 0, 3, 0, 2, 9, 0, 3, 6, -1, 0.020833333333333332, ["mov     r12, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aReportAnyTrans; \"Report any translation bugs to <https:/\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, r12; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "jmp     loc_3EFF"], ["mov~r12,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,r12", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 4, 0, 1, 6, 1, 2, 5, -1, 0.025, ["mov     edx, 3; n", "lea     rsi, s2; \"en_\"", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     loc_3F8B"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [4, 0, 2, 0, 2, 13, 0, 3, 6, 0, 0.008333333333333333, ["mov     edx, 5; category", "lea     rsi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "lea     rcx, command_name; \"cp\"", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "lea     rbp, command_name; \"cp\"", "lea     r12, aMultiCallInvoc+0Ah; \" invocation\"", "jmp     loc_3F51"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "lea~rbp,<TAG>", "lea~r12,<TAG>", "jmp~FOO"]], [4, 0, 1, 0, 2, 11, 0, 2, 1, -1, 0.004166666666666667, ["mov     rbp, cs:program_name", "mov     edx, 5; category", "lea     rsi, aTrySHelpForMor; \"Try '%s --help' for more information.\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     eax, 0", "call    ___fprintf_chk"], ["mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "mov~esi,0", "mov~rdi,<TAG>", "mov~eax,0", "call~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     edi, ebx; status", "call    _exit"], ["mov~edi,ebx", "call~FOO"]], [4, 0, 1, 0, 2, 11, 0, 3, 6, -1, 0.05416666666666667, ["mov     edx, 5; category", "lea     rsi, aOrAvailableLoc; \"or available locally via: info '(coreut\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "jmp     loc_3A78"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,r12", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]]], "func_feature": [63, 9, 75, 15, 17, 24, 9, 338, 0.04632, 45, 2], "succs": [[10, 12], [0, 4], [11], [2, 13], [3, 7], [9], [5, 14], [16], [1, 9], [8, 1], [16], [10], [10, 11], [16], [15], [], [15]], "fname": "usage", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[5, 0, 1, 0, 2, 9, 0, 2, 0, 0, 0.0006377551020408163, ["mov     edx, 5; category", "lea     file, aCannotCombineT; \"cannot combine --target-directory (-t) \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["mov~edx,0", "lea~file,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 2, 7, 0.003401360544217687, ["test    target_directory, target_directory", "jnz     loc_425C"], ["test~target_directory,target_directory", "jnz~FOO"]], [0, 0, 44, 0, 0, 3, 1, 1, 1, 7, 0.01870748299319728, ["mov     r14, x", "test    cl, cl", "jz      loc_42D4"], ["mov~r14,x", "test~cl,cl", "jz~FOO"]], [3, 0, 49, 1, 0, 22, 3, 1, 0, 8, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "push    rbx", "sub     rsp, 0E8h", "mov     r12d, edi", "mov     r13, file", "mov     r15, target_directory", "mov     rax, fs:28h", "mov     [rbp+var_38], rax", "xor     eax, eax", "mov     [rbp+new_dst], 0", "test    dword ptr [x+14h], 0FFFF00h", "setnz   al", "test    target_directory, target_directory", "setz    dl", "movzx   edx, dl", "cmp     edx, edi", "jge     loc_41DF"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "push~rbx", "sub~rsp,0", "mov~r12d,edi", "mov~r13,file", "mov~r15,target_directory", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],0", "test~[word ptr [x+0],0", "setnz~al", "test~target_directory,target_directory", "setz~dl", "movzx~edx,dl", "cmp~edx,edi", "jge~FOO"]], [1, 1, 5, 0, 0, 4, 1, 1, 9, 3, 0.007227891156462584, ["mov     eax, [rbp+sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 8000h", "jz      loc_4602"], ["mov~eax,[rbp+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 8, 3, 0.013605442176870748, ["cmp     [rbp+new_dst], 0", "jnz     short loc_4190"], ["cmp~[rbp+0],0", "jnz~FOO"]], [5, 0, 1, 0, 2, 9, 0, 2, 2, -1, 0.00042517006802721087, ["mov     edx, 5; category", "lea     file, aMissingFileOpe; \"missing file operand\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error"], ["mov~edx,0", "lea~file,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, -1, 0.0012755102040816326, ["test    edi, edi", "jg      short loc_421A"], ["test~edi,edi", "jg~FOO"]], [1, 0, 18, 1, 1, 5, 0, 2, 12, 2, 0.06164965986394558, ["mov     rdi, dst_name; ptr", "call    free", "add     rbx, 8", "cmp     rbx, [rbp+var_100]", "jz      loc_41B6"], ["mov~rdi,dst_name", "call~FOO", "add~rbx,0", "cmp~rbx,[rbp+0]", "jz~FOO"]], [0, 0, 18, 0, 0, 3, 1, 1, 12, 3, 0.021683673469387755, ["mov     rdi, [rbp+attr_list]; ptr", "test    rdi, rdi", "jz      loc_4479"], ["mov~rdi,[rbp+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 18, 0, 0, 1, 0, 1, 14, 3, 0.006802721088435374, ["jmp     loc_4479"], ["jmp~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 11, 3, 0.078656462585034, ["cmp     cs:parents_option, 0", "jnz     loc_4597"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 18, 1, 1, 8, 1, 2, 11, 4, 0.0, ["mov     rsi, [rbp+unused]", "sub     rsi, dst_name; src_offset", "mov     rcx, x; x", "mov     rdx, [rbp+attr_list]; attr_list", "mov     rdi, dst_name; const_dst_name", "call    re_protect", "and     [rbp+ok], al", "jmp     loc_446C"], ["mov~rsi,[rbp+0]", "sub~rsi,dst_name", "mov~rcx,x", "mov~rdx,[rbp+0]", "mov~rdi,dst_name", "call~FOO", "and~[rbp+0],al", "jmp~FOO"]], [2, 0, 18, 0, 1, 10, 1, 2, 10, 4, 0.0546343537414966, ["movzx   edx, [rbp+new_dst]; nonexistent_dst", "mov     r9d, 0; rename_succeeded", "mov     r8, [rbp+var_108]; copy_into_self", "mov     rcx, x; options", "mov     rsi, dst_name; dst_name", "mov     rdi, r13; src_name", "call    copy", "and     [rbp+ok], al", "cmp     cs:parents_option, 0", "jnz     loc_4570"], ["movzx~edx,[rbp+0]", "mov~r9d,0", "mov~r8,[rbp+0]", "mov~rcx,x", "mov~rsi,dst_name", "mov~rdi,r13", "call~FOO", "and~[rbp+0],al", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 37, 0, 1, 8, 1, 2, 4, 7, 0.017006802721088433, ["movzx   ecx, al; forcing", "lea     rdx, [rbp+new_dst]; new_dst", "lea     file, [rbp+sb]; st", "movsxd  forcing, edi", "mov     n_files, [file+rax*8-8]; file", "call    target_directory_operand", "test    al, al", "jz      short loc_4328"], ["movzx~ecx,al", "lea~rdx,[rbp+0]", "lea~file,[rbp+0]", "movsxd~forcing,edi", "mov~n_files,[file+0]", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 37, 0, 0, 2, 0, 1, 3, 7, 0.00510204081632653, ["cmp     edi, 1", "jg      short loc_4373"], ["cmp~edi,0", "jg~FOO"]], [6, 0, 37, 0, 3, 15, 0, 3, 5, 8, 0.0008503401360544217, ["movsxd  n_files, r12d", "mov     rsi, [file+n_files*8-8]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aTargetSIsNotAD; \"target %s is not a directory\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["movsxd~n_files,r12d", "mov~rsi,[file+0]", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 3, -1, 0.0, ["mov     edi, 1; status", "call    usage"], ["mov~edi,0", "call~FOO"]], [6, 0, 1, 0, 3, 15, 0, 4, 2, -1, 0.00042517006802721087, ["mov     file, [file]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aMissingDestina; \"missing destination file operand after \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     short loc_4210"], ["mov~file,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 3, 6, 0.00701530612244898, ["cmp     edi, 2", "jg      loc_4289"], ["cmp~edi,0", "jg~FOO"]], [0, 0, 20, 0, 0, 2, 1, 1, 5, 3, 0.08779761904761904, ["test    r12d, r12d", "jle     loc_463C"], ["test~r12d,r12d", "jle~FOO"]], [0, 0, 21, 0, 2, 5, 0, 3, 5, 4, 0.0, ["mov     rdi, x; x", "call    dest_info_init", "mov     rdi, x; x", "call    src_info_init", "jmp     loc_42EC"], ["mov~rdi,x", "call~FOO", "mov~rdi,x", "call~FOO", "jmp~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 4, 4, 0.0784438775510204, ["cmp     r12d, 1", "jg      loc_43A6"], ["cmp~r12d,0", "jg~FOO"]], [6, 0, 18, 2, 4, 34, 3, 5, 9, 5, 0.07482993197278912, ["mov     eax, 0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     rdi, __old", "repne scasb", "mov     rdx, rcx", "not     rdx; n", "lea     rax, [__len+1Eh]", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rdi, [rsp+110h+var_108+7]", "and     rdi, 0FFFFFFFFFFFFFFF0h; dest", "mov     rsi, __old; src", "call    _memcpy", "mov     r12, rax", "mov     rdi, arg_no_trailing_slash; file", "call    strip_trailing_slashes", "lea     rdx, [rbp+unused]; base_in_result", "mov     rsi, arg_no_trailing_slash; base", "mov     rdi, target_directory; dir", "call    file_name_concat", "mov     arg_no_trailing_slash, rax", "cmp     byte ptr [x+2Eh], 0", "mov     edx, 0", "lea     dst_name, verbose_fmt_string; \"%s -> %s\\n\"", "cmovnz  rdx, rax; verbose_fmt_string", "lea     rcx, [rbp+attr_list]; attr_list", "mov     rsi, [rbp+unused]", "sub     rsi, dst_name; src_offset", "mov     r9, x; x", "lea     r8, [rbp+new_dst]; new_dst", "mov     rdi, dst_name; const_dir", "call    make_dir_parents_private", "test    al, al", "jnz     loc_4437"], ["mov~eax,0", "mov~rcx,0", "mov~rdi,__old", "scasb~<TAG>,", "mov~rdx,rcx", "not~rdx", "lea~rax,[__len+0]", "and~rax,0", "sub~rsp,rax", "lea~rdi,[rsp+0]", "and~rdi,0", "mov~rsi,__old", "call~FOO", "mov~r12,rax", "mov~rdi,arg_no_trailing_slash", "call~FOO", "lea~rdx,[rbp+0]", "mov~rsi,arg_no_trailing_slash", "mov~rdi,target_directory", "call~FOO", "mov~arg_no_trailing_slash,rax", "cmp~[yte ptr [x+0],0", "mov~edx,0", "lea~dst_name,<TAG>", "cmovnz~rdx,rax", "lea~rcx,[rbp+0]", "mov~rsi,[rbp+0]", "sub~rsi,dst_name", "mov~r9,x", "lea~r8,[rbp+0]", "mov~rdi,dst_name", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 18, 0, 1, 6, 0, 2, 10, 5, 0.0031887755102040817, ["mov     edx, 0; base_in_result", "mov     rsi, arg_base; base", "mov     rdi, target_directory; dir", "call    file_name_concat", "mov     arg_base, rax", "jmp     loc_4437"], ["mov~edx,0", "mov~rsi,arg_base", "mov~rdi,target_directory", "call~FOO", "mov~arg_base,rax", "jmp~FOO"]], [0, 0, 18, 0, 1, 3, 0, 1, 10, 5, 0.0031887755102040817, ["mov     rdi, target_directory; string", "call    xstrdup", "mov     arg_base, rax"], ["mov~rdi,target_directory", "call~FOO", "mov~arg_base,rax"]], [1, 0, 18, 0, 0, 8, 0, 1, 6, 8, 0.07653061224489796, ["mov     rbx, file", "lea     eax, [n_files-1]", "lea     rax, [file+rax*8+8]", "mov     [rbp+var_100], rax", "mov     [rbp+ok], 1", "lea     rax, [rbp+copy_into_self]", "mov     [rbp+var_108], rax", "jmp     loc_4492"], ["mov~rbx,file", "lea~eax,[n_files-1]+0]", "lea~rax,[file+0]", "mov~[rbp+0],rax", "mov~[rbp+0],0", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 33, 1, 0, 4, 0, 1, 5, 6, 0.01403061224489796, ["sub     r12d, 1", "movsxd  rax, r12d", "mov     target_directory, [file+rax*8+0]", "jmp     loc_42D9"], ["sub~r12d,0", "movsxd~rax,r12d", "mov~target_directory,[file+0]", "jmp~FOO"]], [0, 0, 38, 0, 0, 2, 1, 1, 2, 6, 0.03231292517006803, ["test    target_directory, target_directory", "jz      short loc_4323"], ["test~target_directory,target_directory", "jz~FOO"]], [2, 0, 18, 0, 0, 4, 0, 1, 7, 7, 0.1211734693877551, ["mov     [rbp+unused], 0", "mov     r13, [rbx]", "cmp     cs:remove_trailing_slashes, 0", "jnz     loc_43BB"], ["mov~[rbp+0],0", "mov~r13,<TAG>", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 37, 0, 0, 2, 0, 1, 4, 6, 0.03018707482993197, ["cmp     r12d, 2", "jle     short loc_42D9"], ["cmp~r12d,0", "jle~FOO"]], [2, 0, 3, 0, 1, 8, 0, 1, 6, 2, 0.018494897959183673, ["mov     r9d, 0; rename_succeeded", "lea     r8, [rbp+unused]; copy_into_self", "mov     rcx, x; options", "mov     edx, 0; nonexistent_dst", "mov     rsi, new_dest; dst_name", "mov     rdi, source; src_name", "call    copy", "mov     [rbp+ok], al"], ["mov~r9d,0", "lea~r8,[rbp+0]", "mov~rcx,x", "mov~edx,0", "mov~rsi,new_dest", "mov~rdi,source", "call~FOO", "mov~[rbp+0],al"]], [1, 0, 9, 0, 0, 2, 0, 1, 5, 3, 0.04400510204081633, ["cmp     byte ptr [x+16h], 0", "jz      short loc_4190"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [0, 0, 8, 0, 0, 3, 1, 1, 6, 3, 0.023809523809523808, ["mov     r13d, [x]", "test    r13d, r13d", "jz      short loc_4190"], ["mov~r13d,<TAG>", "test~r13d,r13d", "jz~FOO"]], [0, 0, 7, 0, 1, 5, 1, 2, 7, 3, 0.01913265306122449, ["mov     rsi, dest; s2", "mov     rdi, source; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_4190"], ["mov~rsi,dest", "mov~rdi,source", "call~FOO", "test~eax,eax", "jnz~FOO"]], [3, 0, 4, 0, 1, 12, 0, 2, 10, 3, 0.0, ["mov     edx, r13d; backup_type", "mov     rsi, dest; file", "mov     edi, 0FFFFFF9Ch; dir_fd", "call    find_backup_file_name", "mov     dest, rax", "lea     rdi, x_tmp_7353", "mov     ecx, 14h", "mov     rsi, x", "rep movsd", "mov     cs:x_tmp_7353.backup_type, 0", "lea     r14, x_tmp_7353", "jmp     loc_4190"], ["mov~edx,r13d", "mov~rsi,dest", "mov~edi,0", "call~FOO", "mov~dest,rax", "lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,x", "movsd~<TAG>,<TAG>", "mov~<TAG>,0", "lea~r14,<TAG>", "jmp~FOO"]], [6, 0, 18, 1, 3, 26, 3, 4, 9, 6, 0.022108843537414966, ["mov     rdi, arg; name", "call    last_component", "mov     rsi, rax; src", "mov     eax, 0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     rdi, __old", "repne scasb", "mov     rdx, rcx", "not     rdx; n", "lea     rax, [__len+1Eh]", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rdi, [rsp+110h+var_108+7]", "and     rdi, 0FFFFFFFFFFFFFFF0h; dest", "call    _memcpy", "mov     r12, rax", "mov     rdi, arg_base; file", "call    strip_trailing_slashes", "mov     ecx, 3", "mov     rsi, arg_base", "lea     rdi, asc_12A18; \"..\"", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_4558"], ["mov~rdi,arg", "call~FOO", "mov~rsi,rax", "mov~eax,0", "mov~rcx,0", "mov~rdi,__old", "scasb~<TAG>,", "mov~rdx,rcx", "not~rdx", "lea~rax,[__len+0]", "and~rax,0", "sub~rsp,rax", "lea~rdi,[rsp+0]", "and~rdi,0", "call~FOO", "mov~r12,rax", "mov~rdi,arg_base", "call~FOO", "mov~ecx,0", "mov~rsi,arg_base", "lea~rdi,<TAG>", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [0, 0, 12, 0, 1, 6, 0, 1, 4, 5, 0.01020408163265306, ["movzx   ecx, al; forcing", "lea     rdx, [rbp+new_dst]; new_dst", "lea     file, [rbp+sb]; st", "movsxd  r12, edi", "mov     n_files, [file+r12*8-8]; file", "call    target_directory_operand"], ["movzx~ecx,al", "lea~rdx,[rbp+0]", "lea~file,[rbp+0]", "movsxd~r12,edi", "mov~n_files,[file+0]", "call~FOO"]], [0, 0, 18, 0, 1, 3, 0, 2, 8, 7, 0.0, ["mov     rdi, arg; file", "call    strip_trailing_slashes", "jmp     loc_44AD"], ["mov~rdi,arg", "call~FOO", "jmp~FOO"]], [0, 0, 18, 0, 1, 6, 1, 2, 13, 4, 0.011054421768707483, ["mov     rax, [p+0A0h]", "mov     [rbp+attr_list], rax", "call    free", "mov     rdi, [rbp+attr_list]", "test    rdi, rdi", "jnz     short loc_45A7"], ["mov~rax,[p+0]", "mov~[rbp+0],rax", "call~FOO", "mov~rdi,[rbp+0]", "test~rdi,rdi", "jnz~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 8, 6, 0.11267006802721088, ["cmp     cs:parents_option, 0", "jz      loc_43C8"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 7, 1, 0.03401360544217687, ["movzx   eax, [rbp+ok]", "mov     rbx, [rbp+var_38]", "xor     rbx, fs:28h", "jnz     loc_4648"], ["movzx~eax,[rbp+0]", "mov~rbx,[rbp+0]", "xor~rbx,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, 2, 0.009566326530612245, ["mov     [rbp+ok], 1", "jmp     loc_41B6"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 11, 0, 0, 4, 0, 1, 4, 4, 0.05038265306122449, ["mov     r12, [file+0]", "mov     rbx, [file+8]", "cmp     cs:parents_option, 0", "jnz     loc_45CB"], ["mov~r12,[file+0]", "mov~rbx,[file+0]", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 32, 0, 0, 2, 1, 1, 3, 5, 0.10884353741496598, ["test    target_directory, target_directory", "jz      loc_413E"], ["test~target_directory,target_directory", "jz~FOO"]], [7, 0, 0, 0, 4, 16, 0, 4, 4, -1, 0.0, ["mov     file, [file+10h]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aExtraOperandS; \"extra operand %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     edi, 1; status", "call    usage"], ["mov~file,[file+0]", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~edi,0", "call~FOO"]], [0, 0, 18, 0, 0, 2, 0, 1, 10, 4, 0.025297619047619048, ["mov     [rbp+ok], al", "jmp     loc_446C"], ["mov~[rbp+0],al", "jmp~FOO"]], [6, 0, 0, 0, 3, 11, 0, 3, 5, -1, 0.0, ["mov     edx, 5; category", "lea     rsi, aWithParentsThe; \"with --parents, the destination must be\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     edi, 1; status", "call    usage"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~edi,0", "call~FOO"]], [0, 0, 0, 0, 0, 8, 0, 0, 8, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     x", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~x", "pop~r15", "pop~rbp", "retn"]]], "func_feature": [40, 24, 79, 3, 50, 73, 1, 321, 0.02621, 12, 7], "succs": [[46], [0, 19], [1, 28], [2, 7], [35, 31], [4, 31], [17], [18, 6], [42, 29], [8, 39], [8], [8, 9], [11], [11, 12], [27, 30], [30, 14], [14], [], [17], [37, 46], [26, 43], [20], [20, 21], [13, 47], [13], [13], [29], [45], [45, 15], [40, 38], [16, 45], [42], [33, 31], [34, 31], [5, 31], [31], [24, 25], [44], [40], [10, 39], [36, 23], [], [41, 49], [42], [32, 48], [44, 22], [], [11], [], []], "fname": "do_copy", "n_num": 50}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 88, 0, 0, 2, 0, 1, 0, 0, 0.00041906130268199235, ["mov     [rsp+158h+x.recursive], r13b; jumptable 000000000000482C cases 213,245", "jmp     loc_47EB"], ["mov~[rsp+0],r13b", "jmp~FOO"]], [0, 0, 88, 1, 0, 4, 0, 1, 3, 15, 0.2890543364681296, ["mov     eax, eax", "movsxd  rax, dword ptr [rbx+rax*4]", "add     rax, rbx", "jmp     rax; switch jump"], ["mov~eax,eax", "movsxd~rax,<TAG>", "add~rax,rbx", "jmp~rax"]], [5, 0, 11, 0, 2, 9, 0, 2, 12, 9, 0.0007174578295267951, ["mov     edx, 5; category", "lea     rsi, aCannotPreserve; \"cannot preserve security context withou\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 11, 4, 0.01535552570035329, ["cmp     cs:selinux_enabled, 0", "jz      loc_4DDC"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 88, 0, 0, 2, 0, 1, 4, 14, 0.00041906130268199235, ["mov     [rsp+158h+x.unlink_dest_before_opening], r13b; jumptable 000000000000482C case 267", "jmp     loc_47EB"], ["mov~[rsp+0],r13b", "jmp~FOO"]], [2, 0, 88, 0, 1, 8, 0, 2, 1, 13, 0.5219435736677116, ["mov     r8d, 0; longind", "lea     rcx, long_opts; longopts", "lea     rdx, shortopts; \"abdfHilLnprst:uvxPRS:TZ\"", "mov     rsi, argv; argv", "mov     edi, r12d; argc", "call    _getopt_long", "cmp     eax, 0FFFFFFFFh", "jz      loc_4C26"], ["mov~r8d,0", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,argv", "mov~edi,r12d", "call~FOO", "cmp~eax,0", "jz~FOO"]], [0, 0, 88, 0, 0, 2, 0, 1, 4, 14, 0.00041906130268199235, ["mov     [rsp+158h+no_target_directory], r13b; jumptable 000000000000482C case 215", "jmp     short loc_47EB"], ["mov~[rsp+0],r13b", "jmp~FOO"]], [1, 0, 88, 0, 1, 11, 0, 2, 4, 14, 0.00041906130268199235, ["mov     r9, cs:argmatch_die; jumptable 000000000000482C case 265", "mov     r8d, 4; valsize", "lea     rcx, sparse_type; vallist", "lea     rdx, sparse_type_string; arglist", "mov     rsi, cs:optarg@@GLIBC_2_2_5; arg", "lea     rdi, context; \"--sparse\"", "call    __xargmatch_internal", "lea     rdx, sparse_type", "mov     eax, [rdx+rax*4]", "mov     [rsp+158h+x.sparse_mode], eax", "jmp     loc_47EB"], ["mov~r9,<TAG>", "mov~r8d,0", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>", "mov~[rsp+0],eax", "jmp~FOO"]], [1, 0, 88, 0, 1, 10, 0, 2, 5, 14, 0.005551201671891328, ["mov     r9, cs:argmatch_die; exit_fn", "mov     r8d, 4; valsize", "lea     rcx, reflink_type; vallist", "lea     rdx, reflink_type_string; arglist", "lea     rdi, aReflink; \"--reflink\"", "call    __xargmatch_internal", "lea     rdx, reflink_type", "mov     eax, [rdx+rax*4]", "mov     [rsp+158h+x.reflink_mode], eax", "jmp     loc_47EB"], ["mov~r9,<TAG>", "mov~r8d,0", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>", "mov~[rsp+0],eax", "jmp~FOO"]], [1, 0, 88, 0, 0, 2, 0, 1, 5, 14, 0.005551201671891328, ["mov     [rsp+158h+x.reflink_mode], 2", "jmp     loc_47EB"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 88, 0, 0, 4, 0, 1, 5, 14, 0.022335423197492165, ["mov     [rsp+158h+x.preserve_xattr], r13b", "mov     [rsp+158h+x.reduce_diagnostics], r13b", "mov     [rsp+158h+x.recursive], r13b", "jmp     loc_47EB"], ["mov~[rsp+0],r13b", "mov~[rsp+0],r13b", "mov~[rsp+0],r13b", "jmp~FOO"]], [0, 0, 88, 0, 0, 6, 1, 1, 4, 14, 0.00041906130268199235, ["mov     rax, cs:optarg@@GLIBC_2_2_5; jumptable 000000000000482C case 229", "test    rax, rax", "cmovz   rax, [rsp+158h+version_control_string]", "mov     [rsp+158h+version_control_string], rax", "mov     [rsp+158h+make_backups], r13b", "jmp     loc_47EB"], ["mov~rax,<TAG>", "test~rax,rax", "cmovz~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~[rsp+0],r13b", "jmp~FOO"]], [1, 0, 88, 0, 0, 2, 0, 1, 4, 14, 0.00041906130268199235, ["mov     [rsp+158h+x.data_copy_required], 0; jumptable 000000000000482C case 259", "jmp     loc_47EB"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 88, 0, 0, 3, 0, 1, 4, 14, 0.00041906130268199235, ["mov     [rsp+158h+x.preserve_links], r13b; jumptable 000000000000482C case 231", "mov     [rsp+158h+x.dereference], 2", "jmp     loc_47EB"], ["mov~[rsp+0],r13b", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 88, 0, 0, 2, 0, 1, 4, 14, 0.00041906130268199235, ["mov     [rsp+158h+x.unlink_dest_after_failed_open], r13b; jumptable 000000000000482C case 233", "jmp     loc_47EB"], ["mov~[rsp+0],r13b", "jmp~FOO"]], [1, 0, 88, 0, 0, 2, 0, 1, 4, 14, 0.00041906130268199235, ["mov     [rsp+158h+x.dereference], 3; jumptable 000000000000482C case 203", "jmp     loc_47EB"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 88, 0, 0, 2, 0, 1, 4, 14, 0.00041906130268199235, ["mov     [rsp+158h+x.interactive], 3; jumptable 000000000000482C case 236", "jmp     loc_47EB"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 88, 0, 0, 2, 0, 1, 4, 14, 0.00041906130268199235, ["mov     [rsp+158h+x.hard_link], r13b; jumptable 000000000000482C case 239", "jmp     loc_47EB"], ["mov~[rsp+0],r13b", "jmp~FOO"]], [1, 0, 88, 0, 0, 2, 0, 1, 4, 14, 0.00041906130268199235, ["mov     [rsp+158h+x.dereference], 4; jumptable 000000000000482C case 207", "jmp     loc_47EB"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 88, 0, 0, 2, 0, 1, 4, 14, 0.00041906130268199235, ["mov     [rsp+158h+x.interactive], 2; jumptable 000000000000482C case 241", "jmp     loc_47EB"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 88, 0, 0, 2, 0, 1, 4, 14, 0.00041906130268199235, ["mov     [rsp+158h+x.dereference], 2; jumptable 000000000000482C case 211", "jmp     loc_47EB"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 88, 0, 1, 5, 0, 2, 4, 14, 0.00041906130268199235, ["mov     edx, 0; jumptable 000000000000482C case 261", "mov     rsi, r15; x", "mov     rdi, cs:optarg@@GLIBC_2_2_5; arg", "call    decode_preserve_arg", "jmp     loc_47EB"], ["mov~edx,0", "mov~rsi,r15", "mov~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 88, 0, 1, 5, 0, 2, 5, 14, 0.005551201671891328, ["mov     edx, 1; on_off", "mov     rsi, r15; x", "call    decode_preserve_arg", "mov     [rsp+158h+x.require_preserve], r13b", "jmp     loc_47EB"], ["mov~edx,0", "mov~rsi,r15", "call~FOO", "mov~[rsp+0],r13b", "jmp~FOO"]], [0, 0, 88, 0, 0, 5, 0, 1, 4, 14, 0.00597026297457332, ["mov     [rsp+158h+x.preserve_ownership], r13b; jumptable 000000000000482C case 243", "mov     [rsp+158h+x.preserve_mode], r13b", "mov     [rsp+158h+x.preserve_timestamps], r13b", "mov     [rsp+158h+x.require_preserve], r13b", "jmp     loc_47EB"], ["mov~[rsp+0],r13b", "mov~[rsp+0],r13b", "mov~[rsp+0],r13b", "mov~[rsp+0],r13b", "jmp~FOO"]], [0, 0, 88, 0, 0, 2, 0, 1, 4, 14, 0.00041906130268199235, ["mov     cs:parents_option, r13b; jumptable 000000000000482C case 262", "jmp     loc_47EB"], ["mov~<TAG>,r13b", "jmp~FOO"]], [0, 0, 88, 0, 0, 2, 0, 1, 4, 14, 0.00041906130268199235, ["mov     cs:remove_trailing_slashes, r13b; jumptable 000000000000482C case 266", "jmp     loc_47EB"], ["mov~<TAG>,r13b", "jmp~FOO"]], [0, 0, 88, 0, 0, 2, 0, 1, 4, 14, 0.00041906130268199235, ["mov     [rsp+158h+x.symbolic_link], r13b; jumptable 000000000000482C case 246", "jmp     loc_47EB"], ["mov~[rsp+0],r13b", "jmp~FOO"]], [0, 0, 88, 0, 0, 2, 0, 1, 7, 14, 0.03213166144200627, ["mov     target_directory, cs:optarg@@GLIBC_2_2_5", "jmp     loc_47EB"], ["mov~target_directory,<TAG>", "jmp~FOO"]], [0, 0, 88, 0, 0, 2, 0, 1, 4, 14, 0.03372627133402996, ["mov     [rsp+158h+x.update], r13b; jumptable 000000000000482C case 248", "jmp     loc_47EB"], ["mov~[rsp+0],r13b", "jmp~FOO"]], [0, 0, 88, 0, 0, 2, 0, 1, 4, 14, 0.00041906130268199235, ["mov     [rsp+158h+x.verbose], r13b; jumptable 000000000000482C case 249", "jmp     loc_47EB"], ["mov~[rsp+0],r13b", "jmp~FOO"]], [0, 0, 88, 0, 0, 2, 0, 1, 4, 14, 0.00041906130268199235, ["mov     [rsp+158h+x.one_file_system], r13b; jumptable 000000000000482C case 251", "jmp     loc_47EB"], ["mov~[rsp+0],r13b", "jmp~FOO"]], [0, 0, 88, 0, 0, 2, 0, 1, 6, 14, 0.005551201671891328, ["mov     [rsp+158h+scontext], rax", "jmp     loc_47EB"], ["mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 88, 0, 0, 2, 0, 1, 6, 14, 0.005551201671891328, ["mov     [rsp+158h+x.set_security_context], r13b", "jmp     loc_47EB"], ["mov~[rsp+0],r13b", "jmp~FOO"]], [1, 0, 88, 0, 0, 2, 0, 1, 5, 14, 0.016849529780564265, ["cmp     cs:optarg@@GLIBC_2_2_5, 0", "jz      loc_47EB"], ["cmp~<TAG>,0", "jz~FOO"]], [5, 0, 88, 0, 2, 10, 0, 3, 6, 14, 0.0, ["mov     edx, 5; category", "lea     rsi, aWarningIgnorin; \"warning: ignoring --context; it require\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     loc_47EB"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [0, 0, 88, 0, 0, 4, 0, 1, 4, 14, 0.00041906130268199235, ["mov     rax, cs:optarg@@GLIBC_2_2_5; jumptable 000000000000482C case 214", "mov     [rsp+158h+backup_suffix], rax", "mov     [rsp+158h+make_backups], r13b", "jmp     loc_47EB"], ["mov~rax,<TAG>", "mov~[rsp+0],rax", "mov~[rsp+0],r13b", "jmp~FOO"]], [0, 0, 88, 0, 0, 2, 0, 1, 4, 14, 0.00041906130268199235, ["mov     [rsp+158h+copy_contents], r13b; jumptable 000000000000482C case 260", "jmp     loc_47EB"], ["mov~[rsp+0],r13b", "jmp~FOO"]], [43, 1, 88, 1, 7, 76, 2, 7, 0, 14, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 128h", "mov     r12d, edi", "mov     rbp, argv", "mov     rax, fs:28h", "mov     [rsp+158h+var_40], rax", "xor     eax, eax", "mov     argc, [argv]; argv0", "call    set_program_name", "lea     rsi, aSSUnbackup+14h; locale", "mov     edi, 6; category", "call    _setlocale", "lea     rsi, dirname; \"/usr/local/share/locale\"", "lea     rdi, domainname; \"coreutils\"", "call    _bindtextdomain", "lea     rdi, domainname; \"coreutils\"", "call    _textdomain", "lea     rdi, close_stdin", "call    atexit", "mov     cs:selinux_enabled, 0", "lea     rdi, [rsp+158h+x]; x", "call    cp_options_default", "mov     [rsp+158h+x.copy_as_regular], 1", "mov     [rsp+158h+x.dereference], 1", "mov     [rsp+158h+x.unlink_dest_before_opening], 0", "mov     [rsp+158h+x.unlink_dest_after_failed_open], 0", "mov     [rsp+158h+x.hard_link], 0", "mov     [rsp+158h+x.interactive], 4", "mov     [rsp+158h+x.move_mode], 0", "mov     [rsp+158h+x.install_mode], 0", "mov     [rsp+158h+x.one_file_system], 0", "mov     [rsp+158h+x.reflink_mode], 0", "mov     [rsp+158h+x.preserve_ownership], 0", "mov     [rsp+158h+x.preserve_links], 0", "mov     [rsp+158h+x.preserve_mode], 0", "mov     [rsp+158h+x.preserve_timestamps], 0", "mov     [rsp+158h+x.explicit_no_preserve_mode], 0", "mov     [rsp+158h+x.preserve_security_context], 0", "mov     [rsp+158h+x.require_preserve_context], 0", "mov     [rsp+158h+x.set_security_context], 0", "mov     [rsp+158h+x.preserve_xattr], 0", "mov     [rsp+158h+x.reduce_diagnostics], 0", "mov     [rsp+158h+x.require_preserve_xattr], 0", "mov     [rsp+158h+x.data_copy_required], 1", "mov     [rsp+158h+x.require_preserve], 0", "mov     [rsp+158h+x.recursive], 0", "mov     [rsp+158h+x.sparse_mode], 2", "mov     [rsp+158h+x.symbolic_link], 0", "mov     [rsp+158h+x.set_mode], 0", "mov     [rsp+158h+x.mode], 0", "mov     [rsp+158h+x.stdin_tty], 0", "mov     [rsp+158h+x.update], 0", "mov     [rsp+158h+x.verbose], 0", "lea     rdi, name; \"POSIXLY_CORRECT\"", "call    _getenv", "test    rax, rax", "setnz   [rsp+158h+x.open_dangling_dest_symlink]", "mov     [rsp+158h+x.dest_info], 0", "mov     [rsp+158h+x.src_info], 0", "mov     [rsp+158h+scontext], 0", "mov     [rsp+158h+no_target_directory], 0", "mov     r14d, 0", "mov     [rsp+158h+copy_contents], 0", "mov     [rsp+158h+version_control_string], 0", "mov     [rsp+158h+backup_suffix], 0", "mov     [rsp+158h+make_backups], 0", "lea     rbx, off_12BFC", "mov     r13d, 1", "lea     rax, [rsp+158h+st]", "mov     [rsp+158h+stat_buf], rax", "lea     r15, [rsp+158h+x]"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~r12d,edi", "mov~rbp,argv", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~argc,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "mov~<TAG>,0", "lea~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "setnz~[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r14d,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rbx,<TAG>", "mov~r13d,0", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~r15,[rsp+0]"]], [1, 0, 0, 0, 1, 2, 0, 1, 3, -1, 0.0, ["mov     edi, 1; jumptable 000000000000482C default case", "call    usage"], ["mov~edi,0", "call~FOO"]], [2, 0, 88, 1, 0, 3, 0, 1, 2, 16, 0.29022988505747127, ["add     eax, 83h", "cmp     eax, 10Bh; switch 268 cases", "ja      loc_4C12; jumptable 000000000000482C default case"], ["add~eax,0", "cmp~eax,0", "ja~FOO"]], [0, 0, 88, 0, 0, 2, 1, 1, 4, 17, 0.03565830721003135, ["test    target_directory, target_directory; jumptable 000000000000482C case 247", "jnz     short loc_4A69"], ["test~target_directory,target_directory", "jnz~FOO"]], [1, 0, 36, 0, 0, 2, 0, 1, 2, 12, 0.23040752351097182, ["cmp     [rsp+158h+x.hard_link], 0", "jz      short loc_4C34"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 35, 0, 0, 2, 0, 1, 3, 12, 0.006530825496342738, ["cmp     [rsp+158h+x.symbolic_link], 0", "jnz     short loc_4CA6"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 33, 0, 0, 2, 0, 1, 3, 11, 0.21982758620689657, ["cmp     [rsp+158h+x.interactive], 2", "jz      loc_4CDD"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 88, 0, 1, 6, 1, 2, 5, 16, 0.029519331243469178, ["mov     rdx, [rsp+158h+stat_buf]; stat_buf", "mov     rsi, cs:optarg@@GLIBC_2_2_5; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jnz     short loc_4A96"], ["mov~rdx,[rsp+0]", "mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [5, 0, 11, 0, 4, 16, 0, 4, 12, 8, 0.00734126984126984, ["call    ___errno_location", "mov     rbx, rax", "mov     dword ptr [rax], 5Fh ; '_'", "mov     rdi, [rsp+158h+scontext]; arg", "call    quote", "mov     argv, rax", "mov     edx, 5; category", "lea     rsi, aFailedToSetDef; \"failed to set default file creation con\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax; format", "mov     esi, [rbx]; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["call~FOO", "mov~rbx,rax", "mov~<TAG>,0", "mov~rdi,[rsp+0]", "call~FOO", "mov~argv,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 11, 3, 0.061456000895656074, ["cmp     [rsp+158h+scontext], 0", "jnz     loc_4E09"], ["cmp~[rsp+0],0", "jnz~FOO"]], [3, 0, 0, 0, 2, 13, 0, 2, 4, -1, 0.0, ["push    0; jumptable 000000000000482C case 0", "lea     rax, aJimMeyering; \"Jim Meyering\"", "push    rax", "lea     r9, aDavidMackenzie; \"David MacKenzie\"", "lea     r8, aTorbjornGranlu; \"Torbjorn Granlund\"", "mov     rcx, cs:Version; version", "lea     rdx, package; \"GNU \"", "lea     rsi, command_name; \"cp\"", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "mov     eax, 0", "call    version_etc", "mov     edi, 0; status", "call    _exit"], ["push~0", "lea~rax,<TAG>", "push~rax", "lea~r9,<TAG>", "lea~r8,<TAG>", "mov~rcx,<TAG>", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rdi,<TAG>", "mov~eax,0", "call~FOO", "mov~edi,0", "call~FOO"]], [2, 0, 25, 0, 0, 3, 0, 1, 5, 9, 0.17659352142110765, ["mov     eax, 0", "cmp     [rsp+158h+make_backups], 0", "jnz     loc_4D73"], ["mov~eax,0", "cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 27, 0, 0, 2, 0, 1, 5, 10, 0.007706374085684431, ["cmp     [rsp+158h+x.sparse_mode], 2", "jz      loc_4C4A"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 28, 0, 0, 2, 0, 1, 4, 10, 0.19017763845350055, ["cmp     [rsp+158h+x.reflink_mode], 2", "jz      loc_4D31"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 1, 88, 0, 0, 4, 1, 1, 6, 15, 0.029388714733542334, ["mov     eax, [rsp+158h+st.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     loc_4ADF"], ["mov~eax,[rsp+0]", "and~eax,<STR>", "cmp~eax,0", "jnz~FOO"]], [1, 0, 23, 0, 1, 5, 0, 2, 6, 8, 0.1772466039707419, ["mov     [rsp+158h+x.backup_type], eax", "mov     rdi, [rsp+158h+backup_suffix]; s", "call    set_simple_backup_suffix", "cmp     [rsp+158h+x.dereference], 1", "jz      loc_4D9B"], ["mov~[rsp+0],eax", "mov~rdi,[rsp+0]", "call~FOO", "cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 24, 0, 0, 2, 0, 1, 6, 9, 0.006269592476489029, ["mov     eax, 0", "jmp     loc_4C5A"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 24, 0, 2, 8, 0, 3, 6, 9, 0.0, ["mov     edx, 5; category", "lea     rsi, aBackupType; \"backup type\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, [rsp+158h+version_control_string]; version", "mov     rdi, rax; context", "call    xget_version", "jmp     loc_4C5A"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,[rsp+0]", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 7, 7, 0.14681295715778475, ["cmp     [rsp+158h+x.recursive], 0", "jnz     loc_4DB1"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 19, 0, 0, 2, 0, 1, 8, 8, 0.0036572622779519337, ["mov     [rsp+158h+x.dereference], 4", "jmp     loc_4C73"], ["mov~[rsp+0],0", "jmp~FOO"]], [5, 0, 11, 0, 2, 9, 0, 2, 13, 7, 0.005094043887147336, ["mov     edx, 5; category", "lea     rsi, aCannotPreserve_0; \"cannot preserve extended attributes, cp\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 12, 2, 0.03680711051400707, ["cmp     [rsp+158h+x.require_preserve_xattr], 0", "jnz     loc_4E51"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 88, 0, 0, 3, 1, 1, 4, 15, 0.012277951933124347, ["mov     rsi, cs:optarg@@GLIBC_2_2_5; jumptable 000000000000482C case 264", "test    rsi, rsi", "jz      short loc_48BC"], ["mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 8, 6, 0.13793103448275865, ["cmp     [rsp+158h+x.set_security_context], 0", "jnz     short loc_4C91"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 17, 0, 0, 3, 0, 1, 8, 7, 0.0033307210031347967, ["movzx   eax, [rsp+158h+copy_contents]", "mov     [rsp+158h+x.copy_as_regular], al", "jmp     loc_4C7E"], ["movzx~eax,[rsp+0]", "mov~[rsp+0],al", "jmp~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 9, 6, 0.026253918495297807, ["cmp     [rsp+158h+scontext], 0", "jz      loc_4DCC"], ["cmp~[rsp+0],0", "jz~FOO"]], [5, 0, 88, 0, 2, 9, 0, 2, 5, 17, 0.004963427377220481, ["mov     edx, 5; category", "lea     rsi, aMultipleTarget; \"multiple target directories specified\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 9, 5, 0.09694388465940192, ["cmp     [rsp+158h+x.require_preserve_context], 0", "jnz     loc_4EAB"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 10, 4, 0.062461126038712254, ["mov     [rsp+158h+x.preserve_security_context], 0", "jmp     loc_4EBF"], ["mov~[rsp+0],0", "jmp~FOO"]], [5, 0, 11, 0, 2, 9, 0, 2, 11, 6, 0.00522466039707419, ["mov     edx, 5; category", "lea     rsi, aCannotSetTarge; \"cannot set target context and preserve \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 10, 5, 0.02324973876698015, ["cmp     [rsp+158h+x.preserve_security_context], 0", "jnz     short loc_4E7E"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 10, 5, 0.018521110115937704, ["cmp     [rsp+158h+x.require_preserve_context], 0", "jnz     loc_4EB2"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 11, 4, 0.0008144872369010301, ["jmp     loc_4EBF"], ["jmp~FOO"]], [6, 0, 0, 0, 3, 11, 0, 3, 4, -1, 0.0, ["mov     edx, 5; category", "lea     rsi, aCannotMakeBoth; \"cannot make both hard and symbolic link\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     edi, 1; status", "call    usage"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~edi,0", "call~FOO"]], [5, 0, 88, 0, 4, 16, 0, 4, 6, 16, 0.015282131661442011, ["mov     rsi, cs:optarg@@GLIBC_2_2_5; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     argv, rax", "mov     edx, 5; category", "lea     rsi, msgid; \"failed to access %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     rcx, rbp", "mov     rdx, rbx; format", "mov     esi, [rax]; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~argv,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~rcx,rbp", "mov~rdx,rbx", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO"]], [2, 0, 31, 0, 0, 3, 0, 1, 4, 11, 0.020376175548589344, ["mov     [rsp+158h+x.update], 0", "cmp     [rsp+158h+make_backups], 0", "jnz     short loc_4CFA"], ["mov~[rsp+0],0", "cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 29, 0, 0, 2, 0, 1, 5, 10, 0.010579937304075237, ["cmp     [rsp+158h+x.reflink_mode], 2", "jz      short loc_4D31"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 88, 0, 0, 8, 0, 1, 4, 15, 0.012147335423197493, ["mov     [rsp+158h+x.dereference], 2; jumptable 000000000000482C case 228", "mov     [rsp+158h+x.preserve_links], r13b", "mov     [rsp+158h+x.preserve_ownership], r13b", "mov     [rsp+158h+x.preserve_mode], r13b", "mov     [rsp+158h+x.preserve_timestamps], r13b", "mov     [rsp+158h+x.require_preserve], r13b", "cmp     cs:selinux_enabled, 0", "jz      short loc_48F8"], ["mov~[rsp+0],0", "mov~[rsp+0],r13b", "mov~[rsp+0],r13b", "mov~[rsp+0],r13b", "mov~[rsp+0],r13b", "mov~[rsp+0],r13b", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 88, 0, 0, 1, 0, 0, 5, 15, 0.0, ["mov     [rsp+158h+x.preserve_security_context], r13b"], ["mov~[rsp+0],r13b"]], [1, 0, 2, 1, 2, 15, 2, 3, 13, 1, 0.02089864158829676, ["call    hash_init", "mov     eax, cs:optind@@GLIBC_2_2_5", "movzx   ecx, [rsp+158h+no_target_directory]; no_target_directory", "movsxd  rdx, eax", "lea     rsi, [argv+rdx*8+0]; file", "mov     edi, r12d", "sub     edi, eax; n_files", "lea     r8, [rsp+158h+x]; x", "mov     rdx, target_directory; target_directory", "call    do_copy", "xor     eax, 1", "movzx   eax, al", "mov     rcx, [rsp+158h+var_40]", "xor     rcx, fs:28h", "jnz     short loc_4F2B"], ["call~FOO", "mov~eax,<TAG>", "movzx~ecx,[rsp+0]", "movsxd~rdx,eax", "lea~rsi,[argv+0]", "mov~edi,r12d", "sub~edi,eax", "lea~r8,[rsp+0]", "mov~rdx,target_directory", "call~FOO", "xor~eax,0", "movzx~eax,al", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [6, 0, 88, 0, 3, 14, 0, 3, 7, 15, 0.022727272727272728, ["mov     rsi, cs:optarg@@GLIBC_2_2_5; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aTargetSIsNotAD; \"target %s is not a directory\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 14, -1, 0.0, ["add     rsp, 128h", "pop     rbx", "pop     argv", "pop     argc", "pop     r13", "pop     target_directory", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~argv", "pop~argc", "pop~r13", "pop~target_directory", "pop~r15", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 14, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [6, 0, 0, 0, 3, 11, 0, 3, 5, -1, 0.0, ["mov     edx, 5; category", "lea     rsi, aOptionsBackupA; \"options --backup and --no-clobber are m\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     edi, 1; status", "call    usage"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~edi,0", "call~FOO"]], [1, 0, 88, 0, 0, 2, 0, 1, 4, 15, 0.030303030303030307, ["cmp     cs:selinux_enabled, 0; jumptable 000000000000482C case 221", "jz      short loc_4B6A"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 88, 0, 0, 3, 1, 1, 5, 15, 0.012277951933124347, ["mov     rax, cs:optarg@@GLIBC_2_2_5", "test    rax, rax", "jz      short loc_4B60"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [6, 0, 0, 0, 3, 11, 0, 3, 6, -1, 0.0, ["mov     edx, 5; category", "lea     rsi, aReflinkCanBeUs; \"--reflink can be used only with --spars\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     edi, 1; status", "call    usage"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~edi,0", "call~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 7, 9, 0.023510971786833857, ["cmp     [rsp+158h+x.recursive], 0", "jz      short loc_4DBF"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 8, 9, 0.008032915360501568, ["cmp     [rsp+158h+x.hard_link], 0", "jnz     short loc_4DBF"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 18, 0, 0, 1, 0, 0, 9, 8, 0.0013061650992685476, ["mov     [rsp+158h+x.dereference], 2"], ["mov~[rsp+0],0"]], [0, 0, 88, 0, 0, 3, 1, 1, 4, 15, 0.006138975966562174, ["mov     rdi, cs:optarg@@GLIBC_2_2_5; jumptable 000000000000482C case 263", "test    rdi, rdi", "jz      short loc_49D8; jumptable 000000000000482C case 243"], ["mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 4, -1, 0.0, ["mov     edi, 0; jumptable 000000000000482C case 1", "call    usage"], ["mov~edi,0", "call~FOO"]]], "func_feature": [53, 11, 124, 1, 89, 144, 0, 452, 0.03608, 40, 5], "succs": [[5], [0, 4, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 35, 36, 38, 40, 47, 59, 74, 81, 87, 88], [45], [2, 46], [5], [41, 39], [5], [5], [5], [5], [5], [5], [5], [5], [5], [5], [5], [5], [5], [5], [5], [5], [5], [5], [5], [5], [5], [5], [5], [5], [5], [5], [5], [34, 5], [5], [5], [5], [5], [], [1, 38], [44, 63], [42, 43], [43, 70], [72, 50], [51, 71], [57], [58, 45], [], [52, 54], [48, 83], [48, 49], [27, 77], [84, 55], [52], [52], [60, 61], [55], [66], [57, 76], [8, 9], [64, 62], [60], [64, 68], [71], [65, 67], [46], [67], [66, 3], [3, 69], [46], [], [77], [80, 73], [49, 53], [10, 75], [10], [78, 79], [28], [], [], [], [33, 82], [32, 31], [], [56, 85], [56, 86], [61], [22, 23], []], "fname": "main", "n_num": 89}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0.0, ["mov     eax, edx", "and     eax, 1", "retn"], ["mov~eax,edx", "and~eax,0", "retn"]], [2, 1, 4, 0, 0, 4, 1, 1, 0, 0, 0.0, ["and     esi, 0F000h", "mov     edx, 1", "cmp     esi, 0A000h", "jz      short loc_4F73"], ["and~esi,<STR>", "mov~edx,0", "cmp~esi,0", "jz~FOO"]], [1, 0, 0, 0, 0, 4, 1, 0, 2, 0, 0.0, ["mov     eax, edx", "and     eax, 1", "pop     file", "retn"], ["mov~eax,edx", "and~eax,0", "pop~file", "retn"]], [1, 0, 1, 0, 1, 7, 1, 2, 2, 0, 0.0, ["mov     esi, 2; type", "mov     rdi, file; name", "call    _euidaccess", "test    eax, eax", "setz    dl", "movzx   edx, dl", "jmp     short loc_4F55"], ["mov~esi,0", "mov~rdi,file", "call~FOO", "test~eax,eax", "setz~dl", "movzx~edx,dl", "jmp~FOO"]], [1, 0, 2, 0, 1, 6, 1, 2, 1, 0, 0.16666666666666666, ["push    rbx", "mov     rbx, file", "call    can_write_any_file", "mov     edx, 1", "test    al, al", "jz      short loc_4F5C"], ["push~rbx", "mov~rbx,file", "call~FOO", "mov~edx,0", "test~al,al", "jz~FOO"]]], "func_feature": [2, 5, 5, 0, 5, 5, 2, 24, 0.03333, 0, 0], "succs": [[], [0, 4], [], [2], [2, 3]], "fname": "writable_destination", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[5, 0, 3, 0, 3, 17, 0, 4, 0, 0, 0.041666666666666664, ["mov     rsi, dst_name; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     dst_sb, rax", "mov     dst_name, cs:program_name", "mov     edx, 5; category", "lea     rsi, aSOverwriteS; \"%s: overwrite %s? \"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8, rbp", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     eax, 0", "call    ___fprintf_chk", "jmp     loc_503A"], ["mov~rsi,dst_name", "mov~edi,0", "call~FOO", "mov~dst_sb,rax", "mov~dst_name,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8,rbp", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,<TAG>", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 0, 9, 1, 1, 16, 2, 2, 0, 3, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 28h", "mov     r12, x", "mov     rbx, dst_name", "mov     rbp, dst_sb", "mov     rax, fs:28h", "mov     [rsp+48h+var_30], rax", "xor     eax, eax", "mov     esi, [dst_sb+18h]; mode", "mov     x, dst_name; file", "call    writable_destination", "test    al, al", "jnz     loc_5075"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r12,x", "mov~rbx,dst_name", "mov~rbp,dst_sb", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~esi,[dst_sb+0]", "mov~x,dst_name", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 1, 4, 1, 2, 2, 1, 0.19444444444444442, ["call    yesno", "mov     rcx, [rsp+48h+var_30]", "xor     rcx, fs:28h", "jnz     short loc_50C6"], ["call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [3, 1, 7, 0, 2, 13, 1, 3, 1, 4, 0.05555555555555555, ["lea     rsi, [rsp+48h+perms]; str", "mov     edi, [dst_sb+18h]; mode", "call    strmode", "mov     [rsp+48h+perms+0Ah], 0", "mov     ebp, [dst_sb+18h]", "and     ebp, 0FFFh", "mov     rsi, dst_name; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     r13, rax", "mov     dst_name, cs:program_name", "cmp     byte ptr [x+18h], 0", "jnz     short loc_4FF4"], ["lea~rsi,[rsp+0]", "mov~edi,[dst_sb+0]", "call~FOO", "mov~[rsp+0],0", "mov~ebp,[dst_sb+0]", "and~ebp,<STR>", "mov~rsi,dst_name", "mov~edi,0", "call~FOO", "mov~r13,rax", "mov~dst_name,<TAG>", "cmp~[yte ptr [x+0],0", "jnz~FOO"]], [2, 0, 4, 0, 1, 5, 0, 1, 2, 3, 0.09722222222222221, ["mov     edx, 5; category", "lea     rsi, aSReplaceSOverr; \"%s: replace %s, overriding mode %04lo (\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rax"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rax"]], [1, 0, 6, 0, 0, 2, 1, 1, 2, 4, 0.027777777777777776, ["test    dword ptr [x+14h], 0FFFF00h", "jz      short loc_505A"], ["test~[word ptr [x+0],0", "jz~FOO"]], [4, 0, 3, 2, 1, 11, 0, 1, 3, 2, 0.16666666666666666, ["sub     rsp, 8", "lea     rcx, [rsp+50h+perms+1]", "push    rcx", "mov     r9, rbp", "mov     r8, r13", "mov     rcx, rbx", "mov     esi, 1", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 10h"], ["sub~rsp,0", "lea~rcx,[rsp+0]", "push~rcx", "mov~r9,rbp", "mov~r8,r13", "mov~rcx,rbx", "mov~esi,0", "mov~rdi,<TAG>", "mov~eax,0", "call~FOO", "add~rsp,0"]], [2, 0, 4, 0, 1, 6, 0, 2, 3, 3, 0.027777777777777776, ["mov     edx, 5; category", "lea     rsi, aSUnwritableSMo; \"%s: unwritable %s (mode %04lo, %s); try\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rax", "jmp     short loc_500D"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rax", "jmp~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     x", "pop     r13", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~x", "pop~r13", "retn"]]], "func_feature": [11, 5, 17, 1, 10, 12, 2, 81, 0.06111, 6, 4], "succs": [[3], [0, 4], [], [9, 2], [5, 6], [7], [8, 5], [3], [7], []], "fname": "overwrite_ok", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 6, 0, 0, 2, 1, 1, 0, 0, 0.26666666666666666, ["test    n_bytes, n_bytes", "jz      short loc_5153"], ["test~n_bytes,n_bytes", "jz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 2, 3, 0.03888888888888889, ["mov     cs:zeros_7570, rax", "jmp     short loc_50DF"], ["mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 7, 0, 0, 4, 0, 1, 2, 3, 0.03888888888888889, ["lea     rax, fallback_7572", "mov     cs:zeros_7570, rax", "mov     cs:nz_7571, 400h", "jmp     short loc_50DF"], ["lea~rax,<TAG>", "mov~<TAG>,rax", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 10, 0, 0, 7, 0, 1, 0, 3, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     r12d, edi", "mov     rbx, n_bytes", "cmp     cs:zeros_7570, 0", "jz      short loc_5119"], ["push~r12", "push~rbp", "push~rbx", "mov~r12d,edi", "mov~rbx,n_bytes", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 3, 0, 0.0, ["pop     rbx", "pop     rbp", "pop     fd", "retn"], ["pop~rbx", "pop~rbp", "pop~fd", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.011111111111111112, ["mov     eax, 1", "jmp     short loc_515F"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 1, 0.05555555555555556, ["mov     eax, 1", "jmp     short loc_515F"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, 1, 0.011111111111111112, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 5, 0, 1, 9, 0, 2, 2, 2, 0.17777777777777778, ["cmp     cs:nz_7571, n_bytes", "mov     rbp, n_bytes", "cmovbe  rbp, cs:nz_7571", "mov     rdx, n; count", "mov     rsi, cs:zeros_7570; buf", "mov     edi, r12d; fd", "call    full_write", "cmp     rax, n", "jnz     short loc_515A"], ["cmp~<TAG>,n_bytes", "mov~rbp,n_bytes", "cmovbe~rbp,<TAG>", "mov~rdx,n", "mov~rsi,<TAG>", "mov~edi,r12d", "call~FOO", "cmp~rax,n", "jnz~FOO"]], [0, 0, 5, 1, 0, 2, 0, 1, 3, 2, 0.06666666666666667, ["sub     rbx, n", "jnz     short loc_50E4"], ["sub~rbx,n", "jnz~FOO"]], [1, 0, 9, 0, 1, 5, 1, 2, 1, 4, 0.022222222222222223, ["mov     esi, 1; size", "mov     fd, cs:nz_7571; nmemb", "call    _calloc", "test    rax, rax", "jz      short loc_5138"], ["mov~esi,0", "mov~fd,<TAG>", "call~FOO", "test~rax,rax", "jz~FOO"]]], "func_feature": [2, 2, 11, 0, 11, 15, 2, 40, 0.06263, 3, 1], "succs": [[8, 6], [0], [0], [0, 10], [], [4], [4], [4], [9, 7], [8, 5], [1, 2]], "fname": "write_zeros", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.041666666666666664, ["mov     ebx, 0", "jmp     short loc_517B"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 3, 0, 1, 4, 0, 2, 1, 0, 0.16666666666666666, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 26h ; '&'", "jz      short loc_5190"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 2, 0, 0.041666666666666664, ["cmp     eax, 5Fh ; '_'", "jnz     short loc_517B"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 4, 0, 1, 8, 1, 2, 0, 0, 0.0, ["push    rbx", "mov     rcx, length; len", "mov     length, offset; offset", "mov     esi, 3; mode", "call    _fallocate", "mov     ebx, eax", "test    eax, eax", "js      short loc_517F"], ["push~rbx", "mov~rcx,length", "mov~length,offset", "mov~esi,0", "call~FOO", "mov~ebx,eax", "test~eax,eax", "js~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0.0, ["mov     eax, ebx", "pop     rbx", "retn"], ["mov~eax,ebx", "pop~rbx", "retn"]]], "func_feature": [2, 1, 6, 0, 5, 7, 2, 19, 0.05, 0, 0], "succs": [[4], [0, 2], [0, 4], [1, 4], []], "fname": "punch_hole", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[6, 0, 1, 0, 4, 18, 0, 5, 0, 0, 0.025, ["mov     rsi, name; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     fd, rax", "mov     edx, 5; category", "lea     rsi, aCannotLseekS; \"cannot lseek %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     size, rax", "call    ___errno_location", "mov     rcx, rbp", "mov     rdx, rbx; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     eax, 0", "jmp     short loc_51CB"], ["mov~rsi,name", "mov~edi,0", "call~FOO", "mov~fd,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~size,rax", "call~FOO", "mov~rcx,rbp", "mov~rdx,rbx", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~eax,0", "jmp~FOO"]], [2, 0, 5, 1, 1, 14, 1, 2, 0, 3, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     ebp, edi", "mov     r13, name", "mov     r12d, edx", "mov     rbx, size", "mov     edx, 1; whence", "mov     name, size; offset", "call    _lseek", "test    file_end, file_end", "js      short loc_51D6"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~ebp,edi", "mov~r13,name", "mov~r12d,edx", "mov~rbx,size", "mov~edx,0", "mov~name,size", "call~FOO", "test~file_end,file_end", "js~FOO"]], [6, 0, 1, 0, 4, 18, 0, 5, 3, 0, 0.0, ["mov     rsi, name; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     fd, rax", "mov     edx, 5; category", "lea     rsi, aErrorDeallocat; \"error deallocating %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     size, rax", "call    ___errno_location", "mov     rcx, rbp", "mov     rdx, rbx; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     eax, 0", "jmp     loc_51CB"], ["mov~rsi,name", "mov~edi,0", "call~FOO", "mov~fd,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~size,rax", "call~FOO", "mov~rcx,rbp", "mov~rdx,rbx", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~eax,0", "jmp~FOO"]], [0, 0, 2, 1, 1, 8, 1, 1, 2, 1, 0.1, ["sub     file_end, size; offset", "mov     rdx, size; length", "mov     edi, ebp; fd", "call    punch_hole", "mov     edx, eax", "mov     eax, r12d", "test    edx, edx", "jns     short loc_51CB"], ["sub~file_end,size", "mov~rdx,size", "mov~edi,ebp", "call~FOO", "mov~edx,eax", "mov~eax,r12d", "test~edx,edx", "jns~FOO"]], [1, 0, 3, 0, 0, 4, 1, 1, 1, 2, 0.125, ["mov     rsi, file_end", "mov     eax, 1", "test    r12b, r12b", "jnz     short loc_5222"], ["mov~rsi,file_end", "mov~eax,0", "test~r12b,r12b", "jnz~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     name", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~name", "retn"]]], "func_feature": [10, 3, 14, 0, 6, 8, 3, 68, 0.04167, 2, 3], "succs": [[5], [0, 4], [5], [2, 5], [3, 5], []], "fname": "create_hole", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 46, 0, 0, 3, 1, 1, 0, 0, 0.23138297872340424, ["mov     psize, csize", "test    bpl, bpl", "jz      loc_54B3"], ["mov~psize,csize", "test~bpl,bpl", "jz~FOO"]], [0, 0, 46, 0, 1, 8, 1, 2, 10, 4, 0.12411347517730496, ["movzx   edx, [rsp+88h+punch_holes]; punch_holes", "mov     rcx, psize; size", "mov     rsi, [rsp+88h+dst_name]; name", "mov     edi, [rsp+88h+dest_fd]; fd", "call    create_hole", "mov     [rsp+88h+prev_hole], al", "test    al, al", "jnz     loc_557A"], ["movzx~edx,[rsp+0]", "mov~rcx,psize", "mov~rsi,[rsp+0]", "mov~edi,[rsp+0]", "call~FOO", "mov~[rsp+0],al", "test~al,al", "jnz~FOO"]], [0, 0, 46, 0, 1, 6, 0, 2, 10, 4, 0.12411347517730496, ["mov     rdx, psize; count", "mov     rsi, [rsp+88h+pbuf]; buf", "mov     edi, [rsp+88h+dest_fd]; fd", "call    full_write", "cmp     psize, rax", "jnz     loc_53EB"], ["mov~rdx,psize", "mov~rsi,[rsp+0]", "mov~edi,[rsp+0]", "call~FOO", "cmp~psize,rax", "jnz~FOO"]], [0, 0, 46, 2, 0, 6, 1, 1, 9, 10, 0.3596335697399527, ["mov     rax, n_read", "sub     rax, csize", "mov     n_read, rax", "add     [rsp+88h+pbuf_0], csize", "test    n_read, n_read", "jz      loc_54C9"], ["mov~rax,n_read", "sub~rax,csize", "mov~n_read,rax", "add~[rsp+0],csize", "test~n_read,n_read", "jz~FOO"]], [0, 0, 46, 0, 0, 5, 0, 1, 12, 11, 0.09013002364066193, ["mov     [rsp+88h+prev_hole], bl", "mov     rax, [rsp+88h+pbuf_0]", "mov     [rsp+88h+pbuf], rax", "mov     last_chunk, csize", "jmp     loc_55EF"], ["mov~[rsp+0],bl", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~last_chunk,csize", "jmp~FOO"]], [1, 0, 46, 0, 0, 5, 0, 1, 14, 11, 0.015957446808510637, ["mov     [rsp+88h+prev_hole], bl", "mov     rax, [rsp+88h+pbuf_0]", "mov     [rsp+88h+pbuf], rax", "mov     ebp, 0", "jmp     short loc_55EF"], ["mov~[rsp+0],bl", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~ebp,0", "jmp~FOO"]], [1, 0, 46, 0, 0, 6, 0, 1, 14, 0, 0.04964539007092199, ["mov     [rsp+88h+prev_hole], bl", "mov     rax, [rsp+88h+pbuf_0]", "mov     [rsp+88h+pbuf], rax", "mov     last_chunk, csize", "mov     r15d, 0", "jmp     loc_55EF"], ["mov~[rsp+0],bl", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~last_chunk,csize", "mov~r15d,0", "jmp~FOO"]], [0, 0, 46, 1, 0, 2, 0, 0, 8, 11, 0.14140070921985815, ["add     psize, csize", "mov     rbp, csize"], ["add~psize,csize", "mov~rbp,csize"]], [0, 0, 46, 0, 0, 2, 1, 1, 11, 8, 0.09175531914893617, ["test    bpl, bpl", "jnz     loc_53CF"], ["test~bpl,bpl", "jnz~FOO"]], [1, 0, 46, 0, 0, 11, 4, 1, 10, 8, 0.1524822695035461, ["cmp     bl, [rsp+88h+prev_hole]", "setnz   r14b", "test    psize, psize", "setnz   al", "cmp     [rsp+88h+var_88], rbp", "setbe   bpl", "mov     edx, ebx", "xor     edx, 1", "and     ebp, edx", "and     r14b, al", "jnz     loc_53CF"], ["cmp~bl,[rsp+0]", "setnz~r14b", "test~psize,psize", "setnz~al", "cmp~<TAG>,rbp", "setbe~bpl", "mov~edx,ebx", "xor~edx,0", "and~ebp,edx", "and~r14b,al", "jnz~FOO"]], [1, 0, 46, 0, 0, 2, 0, 1, 12, 2, 0.1266252955082742, ["cmp     byte ptr [rsp+88h+var_88], 0", "jnz     loc_5697"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 46, 0, 0, 10, 2, 1, 5, 9, 0.4004137115839243, ["mov     [rsp+88h+var_88], n_read", "cmp     n_read, csize", "mov     r12, csize", "cmovbe  r12, n_read", "cmp     [rsp+88h+hole_size], 0", "setnz   bl", "test    csize, csize", "setnz   al", "and     bl, al", "jz      short loc_55AE"], ["mov~<TAG>,n_read", "cmp~n_read,csize", "mov~r12,csize", "cmovbe~r12,n_read", "cmp~[rsp+0],0", "setnz~bl", "test~csize,csize", "setnz~al", "and~bl,al", "jz~FOO"]], [0, 0, 46, 1, 0, 7, 0, 1, 4, 10, 0.1281028368794326, ["mov     rax, [rsp+88h+total_n_read]", "add     [rax], r13", "mov     rax, [rsp+88h+buf]", "mov     [rsp+88h+pbuf], rax", "mov     [rsp+88h+pbuf_0], rax", "mov     rbp, [rsp+88h+var_48]", "jmp     loc_5606"], ["mov~rax,[rsp+0]", "add~<TAG>,r13", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~[rsp+0],rax", "mov~rbp,[rsp+0]", "jmp~FOO"]], [0, 1, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["movzx   eax, [rsp+88h+prev_hole]", "add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["movzx~eax,[rsp+0]", "add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [5, 0, 1, 0, 4, 17, 0, 5, 11, -1, 0.0019946808510638296, ["mov     rsi, [rsp+88h+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     last_chunk, rax", "mov     edx, 5; category", "lea     rsi, aErrorWritingS; \"error writing %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     make_hole_0, rax", "call    ___errno_location", "mov     rcx, rbp", "mov     rdx, rbx; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     loc_537F"], ["mov~rsi,[rsp+0]", "mov~edi,0", "call~FOO", "mov~last_chunk,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~make_hole_0,rax", "call~FOO", "mov~rcx,rbp", "mov~rdx,rbx", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 11, -1, 0.0019946808510638296, ["jmp     loc_537F"], ["jmp~FOO"]], [7, 0, 1, 0, 3, 16, 0, 4, 8, -1, 0.009013002364066193, ["mov     rsi, [rsp+88h+src_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aOverflowReadin; \"overflow reading %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     [rsp+88h+prev_hole], 0", "jmp     loc_537F"], ["mov~rsi,[rsp+0]", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 1, 0, 1, 7, 0, 2, 5, -1, 0.0016991725768321512, ["movzx   edx, byte ptr [rsp+88h+var_3C]; punch_holes", "mov     rcx, psize; size", "mov     rsi, [rsp+88h+dst_name]; name", "mov     edi, [rsp+88h+dest_fd]; fd", "call    create_hole", "mov     [rsp+88h+prev_hole], al", "jmp     loc_537F"], ["movzx~edx,[yte ptr [rsp+0]", "mov~rcx,psize", "mov~rsi,[rsp+0]", "mov~edi,[rsp+0]", "call~FOO", "mov~[rsp+0],al", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, -1, 0.0004432624113475177, ["mov     [rsp+88h+prev_hole], 1", "jmp     loc_537F"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 5, -1, 0.0016991725768321512, ["mov     [rsp+88h+prev_hole], 1", "jmp     loc_537F"], ["mov~[rsp+0],0", "jmp~FOO"]], [6, 0, 1, 0, 3, 16, 0, 3, 4, -1, 0.0013297872340425532, ["mov     rbx, rax", "mov     rsi, [rsp+88h+src_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbp, rax", "mov     edx, 5; category", "lea     rsi, aErrorReadingS; \"error reading %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax; format", "mov     esi, [rbx]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     [rsp+88h+prev_hole], 0"], ["mov~rbx,rax", "mov~rsi,[rsp+0]", "mov~edi,0", "call~FOO", "mov~rbp,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~[rsp+0],0"]], [0, 0, 46, 0, 0, 2, 1, 1, 13, 1, 0.04565602836879432, ["test    r14b, r14b", "jz      loc_56A6"], ["test~r14b,r14b", "jz~FOO"]], [0, 0, 46, 0, 0, 2, 1, 1, 13, 2, 0.06634160756501181, ["test    r14b, r14b", "jnz     loc_54CE"], ["test~r14b,r14b", "jnz~FOO"]], [0, 0, 46, 0, 0, 3, 1, 1, 3, 11, 0.13120567375886524, ["mov     r13, [rsp+88h+var_58]", "test    r13, r13", "jz      loc_54F8"], ["mov~r13,[rsp+0]", "test~r13,r13", "jz~FOO"]], [0, 0, 46, 0, 1, 10, 1, 1, 2, 12, 0.16533687943262412, ["mov     rax, [rsp+88h+buf_size]", "cmp     rax, [rsp+88h+max_n_read]", "mov     rdx, rax", "cmova   rdx, [rsp+88h+max_n_read]; nbytes", "mov     rsi, [rsp+88h+buf]; buf", "mov     edi, [rsp+88h+src_fd]; fd", "call    _read", "mov     [rsp+88h+var_58], rax", "test    rax, rax", "jns     short loc_5393"], ["mov~rax,[rsp+0]", "cmp~rax,[rsp+0]", "mov~rdx,rax", "cmova~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~edi,[rsp+0]", "call~FOO", "mov~[rsp+0],rax", "test~rax,rax", "jns~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, -1, 0.038416075650118196, ["cmp     [rsp+88h+prev_hole], 0", "jz      short loc_552B"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 46, 0, 0, 1, 0, 0, 14, 1, 0.014627659574468085, ["mov     r13d, 0"], ["mov~r13d,0"]], [1, 0, 46, 0, 0, 2, 0, 1, 4, 13, 0.17272458628841605, ["cmp     [rsp+88h+max_n_read], 0", "jnz     loc_52F6"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 46, 0, 0, 11, 1, 0, 1, 13, 0.0199468085106383, ["mov     [rsp+88h+var_3C], r9d", "mov     [rsp+88h+hole_size], hole_size_0", "mov     [rsp+88h+buf_size], buf_size_0", "mov     [rsp+88h+buf], buf_0", "mov     [rsp+88h+dest_fd], esi", "mov     [rsp+88h+src_fd], edi", "test    hole_size_0, hole_size_0", "cmovz   hole_size_0, buf_size_0", "mov     [rsp+88h+var_48], r8", "mov     r15d, 0", "mov     [rsp+88h+prev_hole], 0"], ["mov~[rsp+0],r9d", "mov~[rsp+0],hole_size_0", "mov~[rsp+0],buf_size_0", "mov~[rsp+0],buf_0", "mov~[rsp+0],esi", "mov~[rsp+0],edi", "test~hole_size_0,hole_size_0", "cmovz~hole_size_0,buf_size_0", "mov~[rsp+0],r8", "mov~r15d,0", "mov~[rsp+0],0"]], [3, 1, 48, 1, 0, 14, 0, 1, 0, 14, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     [rsp+88h+punch_holes], r9b", "mov     rax, [rsp+88h+last_write_made_hole]", "mov     byte ptr [rax], 0", "mov     rax, [rsp+88h+total_n_read]", "mov     qword ptr [rax], 0", "cmp     [rsp+88h+max_n_read], 0", "jz      loc_5521"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~[rsp+0],r9b", "mov~rax,[rsp+0]", "mov~<TAG>,0", "mov~rax,[rsp+0]", "mov~<TAG>,0", "cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 46, 0, 1, 4, 1, 1, 11, 9, 0.018173758865248225, ["mov     rdi, [rsp+88h+pbuf_0]; s1", "call    _memcmp", "test    eax, eax", "setz    bl"], ["mov~rdi,[rsp+0]", "call~FOO", "test~eax,eax", "setz~bl"]], [1, 0, 46, 0, 0, 2, 1, 1, 10, 10, 0.017730496453900707, ["test    dl, 0Fh", "jnz     short loc_5638"], ["test~dl,0", "jnz~FOO"]], [0, 0, 46, 0, 0, 2, 1, 1, 6, 8, 0.2364804964539007, ["test    csize, csize", "jz      loc_5535"], ["test~csize,csize", "jz~FOO"]], [1, 0, 46, 1, 0, 4, 0, 0, 7, 12, 0.16548463356973994, ["mov     rax, 7FFFFFFFFFFFFFFFh", "sub     rax, csize", "cmp     rax, psize", "jb      loc_5464"], ["mov~rax,0", "sub~rax,csize", "cmp~rax,psize", "jb~FOO"]], [1, 0, 46, 0, 1, 3, 0, 2, 3, 14, 0.01950354609929078, ["call    ___errno_location", "cmp     dword ptr [rax], 4", "jz      loc_54E9"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [2, 0, 46, 2, 0, 3, 0, 1, 9, 9, 0.08000886524822695, ["add     rsi, 1; s2", "sub     rdx, 1; n", "jz      short loc_565F"], ["add~rsi,0", "sub~rdx,0", "jz~FOO"]], [1, 0, 46, 0, 0, 2, 0, 1, 8, 10, 0.14140070921985815, ["cmp     byte ptr [rsi], 0", "jnz     loc_53C5"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 46, 0, 0, 2, 0, 0, 7, 11, 0.13652482269503546, ["mov     rsi, [rsp+88h+pbuf_0]", "mov     rdx, csize"], ["mov~rsi,[rsp+0]", "mov~rdx,csize"]], [0, 0, 46, 0, 0, 1, 0, 0, 10, 15, 0.09264184397163121, ["movzx   ebx, [rsp+88h+prev_hole]"], ["movzx~ebx,[rsp+0]"]], [1, 0, 46, 0, 0, 2, 0, 1, 9, 9, 0.04676418439716312, ["mov     ebx, 0", "jmp     loc_565F"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 46, 0, 0, 10, 4, 1, 6, 8, 0.14930555555555555, ["test    csize, csize", "setz    byte ptr [rsp+88h+var_88]", "movzx   edi, byte ptr [rsp+88h+var_88]", "cmp     n_read, rbp", "setbe   bpl", "movzx   eax, [rsp+88h+prev_hole]", "xor     eax, 1", "and     ebp, eax", "or      bpl, dil", "jnz     loc_53D8"], ["test~csize,csize", "setz~<TAG>", "movzx~edi,<TAG>", "cmp~n_read,rbp", "setbe~bpl", "movzx~eax,[rsp+0]", "xor~eax,0", "and~ebp,eax", "or~bpl,dil", "jnz~FOO"]], [0, 0, 46, 0, 0, 2, 1, 1, 8, 6, 0.16112588652482268, ["test    r14b, r14b", "jz      loc_53DD"], ["test~r14b,r14b", "jz~FOO"]], [1, 0, 46, 0, 0, 2, 0, 1, 11, 7, 0.05319148936170213, ["mov     byte ptr [rsp+88h+var_88], 0", "jmp     loc_554C"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 46, 0, 0, 7, 3, 0, 7, 7, 0.08532801418439716, ["test    psize, psize", "setnz   r14b", "movzx   eax, [rsp+88h+prev_hole]", "xor     eax, 1", "and     r14d, eax", "mov     byte ptr [rsp+88h+var_88], bl", "mov     ebp, ebx"], ["test~psize,psize", "setnz~r14b", "movzx~eax,[rsp+0]", "xor~eax,0", "and~r14d,eax", "mov~<TAG>,bl", "mov~ebp,ebx"]], [0, 0, 46, 0, 0, 1, 0, 0, 7, 7, 0.0764627659574468, ["movzx   ebx, [rsp+88h+prev_hole]"], ["movzx~ebx,[rsp+0]"]], [1, 0, 46, 0, 0, 2, 0, 1, 9, 5, 0.262854609929078, ["cmp     [rsp+88h+prev_hole], 0", "jnz     loc_543A"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 46, 1, 0, 3, 0, 1, 8, 6, 0.08444148936170212, ["add     psize, csize", "mov     r14d, 0", "jmp     loc_5555"], ["add~psize,csize", "mov~r14d,0", "jmp~FOO"]], [0, 0, 46, 0, 0, 2, 0, 1, 12, 13, 0.08732269503546099, ["mov     [rsp+88h+prev_hole], bl", "jmp     loc_55D3"], ["mov~[rsp+0],bl", "jmp~FOO"]], [0, 0, 46, 1, 0, 5, 0, 0, 11, 14, 0.14967494089834513, ["mov     rax, [rsp+88h+var_58]", "sub     [rsp+88h+max_n_read], rax", "mov     rax, [rsp+88h+last_write_made_hole]", "mov     [rax], bl", "mov     [rsp+88h+prev_hole], bl"], ["mov~rax,[rsp+0]", "sub~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~<TAG>,bl", "mov~[rsp+0],bl"]]], "func_feature": [16, 26, 52, 4, 49, 72, 2, 249, 0.0974, 3, 11], "succs": [[10, 4], [0, 15], [0, 14], [11, 38], [3], [3], [3], [3], [42, 47], [8, 42], [21, 22], [32, 40], [11], [], [13], [13], [13], [13], [13], [13], [13], [5, 6], [48, 26], [25, 12], [34, 23], [17, 19], [6], [24, 25], [24], [18, 28], [9], [36, 30], [43, 37], [16, 7], [27, 20], [9, 31], [35, 39], [36], [48], [9], [33, 44], [45, 46], [41], [41], [46], [1, 2], [45], [33], [27]], "fname": "sparse_copy", "n_num": 49}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 3, 1, 0, 3, 1, 1, 0, 0, 0.0, ["sub     rsp, 8", "test    edi, edi", "js      short loc_56D6"], ["sub~rsp,0", "test~edi,edi", "js~FOO"]], [0, 0, 1, 0, 1, 5, 0, 2, 0, 0, 0.08333333333333333, ["mov     rax, name", "mov     esi, edx; mode", "mov     desc, name; file", "call    _chmod", "jmp     short loc_56D1"], ["mov~rax,name", "mov~esi,edx", "mov~desc,name", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 0, -1, 0.08333333333333333, ["mov     esi, edx; mode", "call    _fchmod"], ["mov~esi,edx", "call~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [2, 1, 4, 0, 4, 4, 3, 12, 0.04167, 0, 2], "succs": [[1, 2], [3], [3], []], "fname": "fchmod_or_lchmod", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [3, 0, 3, 0, 2, 1, 2, 13, 0.0, 1, 0], "succs": [[0]], "fname": "restore_default_fscreatecon_or_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 0, 0, 0, 0.07500000000000001, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 0.30000000000000004, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_57C9"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [5, 0, 4, 0, 3, 13, 0, 3, 1, 2, 0.0, ["mov     rsi, backup_dst_name; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     backup_dst_name, rax", "mov     edx, 5; category", "lea     rsi, aBackupS; \" (backup: %s)\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rbx", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk"], ["mov~rsi,backup_dst_name", "mov~edi,0", "call~FOO", "mov~backup_dst_name,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rbx", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO"]], [6, 0, 5, 0, 3, 22, 1, 4, 0, 2, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     r12, src", "mov     rbx, backup_dst_name", "mov     backup_dst_name, dst; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     rbp, rax", "mov     rdx, src; arg", "mov     esi, 4; s", "mov     edi, 0; n", "call    quotearg_n_style", "mov     rcx, rbp", "mov     rdx, rax", "lea     rsi, aSS_0; \"%s -> %s\"", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "test    backup_dst_name, backup_dst_name", "jz      short loc_57A8"], ["push~r12", "push~rbp", "push~rbx", "mov~r12,src", "mov~rbx,backup_dst_name", "mov~backup_dst_name,dst", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbp,rax", "mov~rdx,src", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "lea~rsi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "test~backup_dst_name,backup_dst_name", "jz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 3, -1, 0.0, ["pop     rbx", "pop     rbp", "pop     src", "retn"], ["pop~rbx", "pop~rbp", "pop~src", "retn"]], [1, 0, 1, 0, 1, 3, 0, 2, 2, 0, 0.07500000000000001, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     short loc_57C4"], ["mov~esi,0", "call~FOO", "jmp~FOO"]]], "func_feature": [7, 1, 9, 0, 6, 7, 4, 49, 0.075, 3, 0], "succs": [[4], [0, 5], [1], [1, 2], [], [4]], "fname": "emit_verbose", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[9, 0, 1, 0, 4, 22, 0, 4, 0, 0, 0.05, ["mov     rdx, src_name; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     src_name, rax", "mov     rdx, dst_name; arg", "mov     esi, 4; s", "mov     edi, 0; n", "call    quotearg_n_style", "mov     rbp, rax", "mov     edx, 5; category", "lea     rsi, aCannotCreateHa; \"cannot create hard link %s to %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8, r13", "mov     rcx, rbp", "mov     rdx, rax; format", "mov     esi, ebx; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     ebx, 0"], ["mov~rdx,src_name", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~src_name,rax", "mov~rdx,dst_name", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbp,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8,r13", "mov~rcx,rbp", "mov~rdx,rax", "mov~esi,ebx", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~ebx,0"]], [5, 0, 5, 3, 1, 23, 2, 2, 0, 2, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 10h", "mov     r13, src_name", "mov     r12, dst_name", "mov     ebp, ecx", "test    r8b, r8b", "setnz   r8b", "movzx   r8d, r8b", "push    0FFFFFFFFFFFFFFFFh; linkat_errno", "movzx   r9d, dl; force", "shl     r8d, 0Ah; flags", "mov     verbose, dst_name; dstname", "mov     edx, 0FFFFFF9Ch; dstdir", "mov     dst_name, src_name; srcname", "mov     edi, edx; srcdir", "call    force_linkat", "mov     ebx, eax", "add     rsp, 10h", "test    eax, eax", "jg      short loc_5827"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r13,src_name", "mov~r12,dst_name", "mov~ebp,ecx", "test~r8b,r8b", "setnz~r8b", "movzx~r8d,r8b", "push~0", "movzx~r9d,dl", "shl~r8d,0", "mov~verbose,dst_name", "mov~edx,0", "mov~dst_name,src_name", "mov~edi,edx", "call~FOO", "mov~ebx,eax", "add~rsp,0", "test~eax,eax", "jg~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, -1, 0.025, ["mov     ebx, 1", "jmp     short loc_5886"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 1, 1, 0.1, ["shr     ebx, 1Fh", "and     bl, bpl", "jnz     short loc_5893"], ["shr~ebx,0", "and~bl,bpl", "jnz~FOO"]], [5, 0, 1, 0, 3, 14, 0, 4, 2, 0, 0.025, ["mov     rsi, dst_name; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbp, rax", "mov     edx, 5; category", "lea     rsi, aRemovedS; \"removed %s\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "jmp     short loc_5886"], ["mov~rsi,dst_name", "mov~edi,0", "call~FOO", "mov~rbp,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 2, -1, 0.0, ["mov     eax, ebx", "add     rsp, 8", "pop     rbx", "pop     rbp", "pop     dst_name", "pop     r13", "retn"], ["mov~eax,ebx", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~dst_name", "pop~r13", "retn"]]], "func_feature": [8, 3, 12, 0, 6, 7, 3, 71, 0.03333, 2, 4], "succs": [[5], [0, 3], [5], [2, 4], [5], []], "fname": "create_hard_link", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 1, 0, 0, 2, 1, 0, 0, 0, 0.05454545454545454, ["movzx   ebx, byte ptr [x+26h]", "xor     ebx, 1"], ["movzx~ebx,[yte ptr [x+0]", "xor~ebx,0"]], [5, 0, 2, 0, 3, 15, 0, 4, 3, -1, 0.049999999999999996, ["mov     rsi, src_name; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     src_name, rax", "mov     edx, 5; category", "lea     rsi, aFailedToGetSec; \"failed to get security context of %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax; format", "mov     esi, [r12]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     short loc_58FE"], ["mov~rsi,src_name", "mov~edi,0", "call~FOO", "mov~src_name,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 0, 2, 0, 1, 2, 0, 1, 3, -1, 0.031818181818181815, ["call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'"], ["call~FOO", "mov~<TAG>,0"]], [1, 0, 7, 0, 0, 3, 0, 1, 1, 2, 0.05454545454545454, ["mov     rbp, src_name", "cmp     byte ptr [x+23h], 0", "jz      short loc_592A"], ["mov~rbp,src_name", "cmp~[yte ptr [x+0],0", "jz~FOO"]], [1, 0, 11, 0, 0, 6, 0, 1, 0, 3, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, x", "cmp     byte ptr [x+25h], 0", "jz      short loc_590C"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,x", "cmp~[yte ptr [x+0],0", "jz~FOO"]], [1, 0, 3, 0, 1, 4, 0, 2, 3, 0, 0.00909090909090909, ["call    ___errno_location", "mov     r12, rax", "mov     dword ptr [rax], 5Fh ; '_'", "jmp     short loc_5938"], ["call~FOO", "mov~r12,rax", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 1, 0.049999999999999996, ["cmp     byte ptr [x+26h], 0", "jnz     loc_5979"], ["cmp~[yte ptr [x+0],0", "jnz~FOO"]], [1, 0, 1, 0, 1, 3, 0, 2, 2, -1, 0.00909090909090909, ["call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'", "jmp     short loc_5905"], ["call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 4, 1, 1, 1, -1, 0.02727272727272727, ["mov     eax, ecx", "and     al, [r8+21h]", "mov     ebx, eax", "jnz     short loc_591D"], ["mov~eax,ecx", "and~al,[r8+0]", "mov~ebx,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 3, -1, 0.0, ["mov     eax, ebx", "pop     rbx", "pop     rbp", "pop     r12", "retn"], ["mov~eax,ebx", "pop~rbx", "pop~rbp", "pop~r12", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, -1, 0.00909090909090909, ["mov     ebx, 1", "jmp     short loc_5905"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 3, 0, 1, 3, 0, 1, 2, -1, 0.031818181818181815, ["call    ___errno_location", "mov     r12, rax", "mov     dword ptr [rax], 5Fh ; '_'"], ["call~FOO", "mov~r12,rax", "mov~<TAG>,0"]]], "func_feature": [7, 2, 15, 0, 12, 15, 7, 51, 0.02727, 1, 0], "succs": [[9], [0], [0], [11, 6], [8, 3], [1], [2, 5], [9], [10, 7], [], [9], [1]], "fname": "set_process_security_ctx", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 0, 6, 1, 0, 6, 0, 1, 0, 0, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbp, dst_name", "cmp     byte ptr [x+23h], 0", "jz      short loc_59AB"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,dst_name", "cmp~[yte ptr [x+0],0", "jz~FOO"]], [2, 0, 0, 1, 0, 5, 0, 0, 0, -1, 0.0, ["mov     eax, 0", "add     rsp, 8", "pop     rbx", "pop     rbp", "retn"], ["mov~eax,0", "add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [1, 0, 1, 0, 1, 3, 0, 2, 0, -1, 0.05, ["call    ___errno_location", "mov     dword ptr [rax], 5Fh ; '_'", "jmp     short loc_59FB"], ["call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [6, 0, 1, 0, 3, 15, 0, 3, 0, -1, 0.08333333333333333, ["mov     rdx, dst_name; arg", "mov     esi, 4; s", "mov     edi, 0; n", "call    quotearg_n_style", "mov     dst_name, rax", "mov     edx, 5; category", "lea     rsi, aFailedToSetThe; \"failed to set the security context of %\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax; format", "mov     esi, [rbx]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error"], ["mov~rdx,dst_name", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~dst_name,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.08333333333333333, ["cmp     byte ptr [x+26h], 0", "jnz     short loc_5A07"], ["cmp~[yte ptr [x+0],0", "jnz~FOO"]], [1, 0, 2, 0, 1, 3, 0, 1, 0, -1, 0.05, ["call    ___errno_location", "mov     rbx, rax", "mov     dword ptr [rax], 5Fh ; '_'"], ["call~FOO", "mov~rbx,rax", "mov~<TAG>,0"]], [1, 0, 2, 0, 1, 4, 0, 2, 0, 0, 0.03333333333333333, ["call    ___errno_location", "mov     rbx, rax", "mov     dword ptr [rax], 5Fh ; '_'", "jmp     short loc_59B9"], ["call~FOO", "mov~rbx,rax", "mov~<TAG>,0", "jmp~FOO"]]], "func_feature": [6, 0, 10, 0, 7, 8, 5, 38, 0.04286, 1, 2], "succs": [[4, 5], [], [1], [1], [2, 6], [3], [3]], "fname": "set_file_security_ctx", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 0, 0, 0, 1, 11, 0, 1, 0, 0, 0.0, ["push    rbx", "mov     rbx, x", "lea     r8, triple_free; data_freer", "lea     rcx, triple_compare; comparator", "lea     rdx, triple_hash; hasher", "mov     esi, 0; tuning", "mov     edi, 3Dh ; '='; candidate", "call    hash_initialize", "mov     [x+40h], rax", "pop     x", "retn"], ["push~rbx", "mov~rbx,x", "lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~[x+0],rax", "pop~x", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 11, 0.0, 3, 0], "succs": [[]], "fname": "dest_info_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 0, 0, 0, 1, 11, 0, 1, 0, 0, 0.0, ["push    rbx", "mov     rbx, x", "lea     r8, triple_free; data_freer", "lea     rcx, triple_compare; comparator", "lea     rdx, triple_hash_no_name; hasher", "mov     esi, 0; tuning", "mov     edi, 3Dh ; '='; candidate", "call    hash_initialize", "mov     [x+48h], rax", "pop     x", "retn"], ["push~rbx", "mov~rbx,x", "lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~[x+0],rax", "pop~x", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 11, 0.0, 3, 0], "succs": [[]], "fname": "src_info_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[11, 0, 0, 0, 1, 20, 1, 1, 0, 0, 0.0, ["push    rbx", "mov     rbx, x", "mov     qword ptr [x], 0", "mov     qword ptr [x+8], 0", "mov     qword ptr [x+10h], 0", "mov     qword ptr [x+18h], 0", "mov     qword ptr [x+20h], 0", "mov     qword ptr [x+28h], 0", "mov     qword ptr [x+30h], 0", "mov     qword ptr [x+38h], 0", "mov     qword ptr [x+40h], 0", "mov     qword ptr [x+48h], 0", "call    _geteuid", "test    eax, eax", "setz    al", "mov     [x+1Bh], al", "mov     [x+1Ah], al", "mov     dword ptr [x+34h], 0FFFFFFFFh", "pop     x", "retn"], ["push~rbx", "mov~rbx,x", "mov~<TAG>,0", "mov~[word ptr [x+0],0", "mov~[word ptr [x+0],0", "mov~[word ptr [x+0],0", "mov~[word ptr [x+0],0", "mov~[word ptr [x+0],0", "mov~[word ptr [x+0],0", "mov~[word ptr [x+0],0", "mov~[word ptr [x+0],0", "mov~[word ptr [x+0],0", "call~FOO", "test~eax,eax", "setz~al", "mov~[x+0],al", "mov~[x+0],al", "mov~[word ptr [x+0],0", "pop~x", "retn"]]], "func_feature": [1, 1, 1, 0, 1, 0, 1, 20, 0.0, 0, 0], "succs": [[]], "fname": "cp_options_default", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 1, 0, 0, 4, 1, 1, 0, 0, 0.08333333333333333, ["movzx   eax, byte ptr [x+1Ah]", "xor     eax, 1", "movzx   eax, al", "jmp     short loc_5AF9"], ["movzx~eax,[yte ptr [x+0]", "xor~eax,0", "movzx~eax,al", "jmp~FOO"]], [1, 0, 3, 0, 1, 6, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, x", "call    ___errno_location", "mov     edx, [rax]", "cmp     edx, 1", "jz      short loc_5AFE"], ["push~rbx", "mov~rbx,x", "call~FOO", "mov~edx,<TAG>", "cmp~edx,0", "jz~FOO"]], [2, 0, 2, 0, 0, 3, 0, 1, 1, 0, 0.08333333333333333, ["mov     eax, 0", "cmp     edx, 16h", "jz      short loc_5AFE"], ["mov~eax,0", "cmp~edx,0", "jz~FOO"]], [1, 0, 0, 0, 0, 3, 1, 0, 2, 0, 0.0, ["and     eax, 1", "pop     x", "retn"], ["and~eax,0", "pop~x", "retn"]]], "func_feature": [1, 2, 4, 0, 4, 5, 3, 16, 0.04167, 0, 0], "succs": [[3], [0, 2], [0, 3], []], "fname": "chown_failure_ok", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 6, 0, 1, 5, 0, 2, 0, 0, 0.06340579710144928, ["call    ___errno_location", "mov     dest_desc, rax", "mov     eax, [rax]", "cmp     eax, 1", "jz      short loc_5BD1"], ["call~FOO", "mov~dest_desc,rax", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 18, 0, 1, 7, 3, 2, 4, 3, 0.06521739130434782, ["and     edx, esi", "and     edx, 1C0h; mode", "mov     esi, ebx; desc", "mov     x, dst_name; name", "call    qset_acl", "test    eax, eax", "jz      loc_5CA6"], ["and~edx,esi", "and~edx,0", "mov~esi,ebx", "mov~x,dst_name", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 6, 0, 1, 7, 1, 2, 2, 1, 0.06521739130434782, ["mov     edx, r12d; group", "mov     esi, r14d; owner", "mov     rdi, dst_name; file", "call    _lchown", "mov     edx, 1", "test    eax, eax", "jz      loc_5CF9"], ["mov~edx,r12d", "mov~esi,r14d", "mov~rdi,dst_name", "call~FOO", "mov~edx,0", "test~eax,eax", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 1, 2, 0.13949275362318841, ["cmp     ebx, 0FFFFFFFFh", "jz      loc_5BF0"], ["cmp~ebx,0", "jz~FOO"]], [5, 0, 1, 0, 4, 19, 0, 5, 6, 1, 0.0, ["mov     rsi, dst_name; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     gid, rax", "mov     edx, 5; category", "lea     rsi, aFailedToPreser_1; \"failed to preserve ownership for %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     rcx, r12", "mov     rdx, rbx; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "movzx   edx, byte ptr [x+24h]", "neg     edx", "jmp     short loc_5CF9"], ["mov~rsi,dst_name", "mov~edi,0", "call~FOO", "mov~gid,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~rcx,r12", "mov~rdx,rbx", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "movzx~edx,[yte ptr [x+0]", "neg~edx", "jmp~FOO"]], [1, 0, 2, 0, 1, 5, 1, 2, 5, 1, 0.03985507246376812, ["mov     rdi, x; x", "call    chown_failure_ok", "mov     edx, 0", "test    al, al", "jz      loc_5C3B"], ["mov~rdi,x", "call~FOO", "mov~edx,0", "test~al,al", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 6, 3, 0.012681159420289852, ["cmp     eax, 16h", "jz      short loc_5BD1"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 3, 0, 0.0, ["mov     eax, edx", "add     rsp, 8", "pop     rbx", "pop     x", "pop     r12", "pop     dst_name", "pop     r14", "pop     r15", "retn"], ["mov~eax,edx", "add~rsp,0", "pop~rbx", "pop~x", "pop~r12", "pop~dst_name", "pop~r14", "pop~r15", "retn"]], [0, 0, 1, 0, 0, 3, 0, 1, 8, 1, 0.009057971014492754, ["movzx   edx, byte ptr [x+24h]", "neg     edx", "jmp     loc_5CF9"], ["movzx~edx,[yte ptr [x+0]", "neg~edx", "jmp~FOO"]], [1, 0, 6, 0, 1, 7, 1, 2, 2, 1, 0.06521739130434782, ["mov     edx, r12d; group", "mov     esi, r14d; owner", "mov     edi, ebx; fd", "call    _fchown", "mov     edx, 1", "test    eax, eax", "jz      short loc_5CF9"], ["mov~edx,r12d", "mov~esi,r14d", "mov~edi,ebx", "call~FOO", "mov~edx,0", "test~eax,eax", "jz~FOO"]], [0, 0, 20, 0, 0, 2, 0, 0, 2, 4, 0.028985507246376812, ["mov     esi, [dst_sb+18h]", "mov     edx, [src_sb+18h]"], ["mov~esi,[dst_sb+0]", "mov~edx,[src_sb+0]"]], [1, 0, 23, 0, 0, 3, 1, 1, 1, 4, 0.01992753623188406, ["mov     rax, 0FF0000000000FFh", "test    [x+18h], rax", "jnz     loc_5C88"], ["mov~rax,0", "test~[x+0],rax", "jnz~FOO"]], [1, 0, 5, 0, 1, 5, 0, 2, 3, 3, 0.050724637681159424, ["call    ___errno_location", "mov     uid, rax", "mov     ebx, [rax]", "cmp     ebx, 1", "jz      short loc_5C23"], ["call~FOO", "mov~uid,rax", "mov~ebx,<TAG>", "cmp~ebx,0", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 4, 2, 0.01177536231884058, ["cmp     ebx, 16h", "jnz     loc_5CE4"], ["cmp~ebx,0", "jnz~FOO"]], [1, 1, 19, 0, 0, 7, 3, 1, 3, 3, 0.1068840579710145, ["mov     eax, edx", "not     eax", "or      ah, 0Eh", "mov     ecx, esi", "and     ecx, 0FFFh", "test    eax, ecx", "jnz     loc_5B5B"], ["mov~eax,edx", "not~eax", "or~ah,0", "mov~ecx,esi", "and~ecx,<STR>", "test~eax,ecx", "jnz~FOO"]], [0, 0, 20, 0, 0, 3, 0, 1, 3, 4, 0.014492753623188406, ["mov     esi, [dst_sb+18h]", "mov     edx, [x+10h]", "jmp     loc_5C8F"], ["mov~esi,[dst_sb+0]", "mov~edx,[x+0]", "jmp~FOO"]], [1, 0, 24, 1, 0, 14, 1, 1, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbp, x", "mov     r13, dst_name", "mov     ebx, edx", "mov     r14d, [src_sb+1Ch]", "mov     r12d, [src_sb+20h]", "test    r8b, r8b", "jnz     loc_5CA6"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,x", "mov~r13,dst_name", "mov~ebx,edx", "mov~r14d,[src_sb+0]", "mov~r12d,[src_sb+0]", "test~r8b,r8b", "jnz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 2, 3, 0.025362318840579712, ["cmp     byte ptr [x+2Bh], 0", "jz      loc_5CA6"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [1, 0, 3, 0, 1, 6, 0, 2, 4, 2, 0.01177536231884058, ["mov     edx, r12d; group", "mov     esi, 0FFFFFFFFh; owner", "mov     rdi, dst_name; file", "call    _lchown", "mov     [r14], ebx", "jmp     loc_5CE4"], ["mov~edx,r12d", "mov~esi,0", "mov~rdi,dst_name", "call~FOO", "mov~<TAG>,ebx", "jmp~FOO"]], [5, 0, 2, 0, 3, 14, 0, 3, 7, 2, 0.01630434782608696, ["mov     rsi, dst_name; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     gid, rax", "mov     edx, 5; category", "lea     rsi, aClearingPermis; \"clearing permissions for %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "mov     esi, [rbx]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error"], ["mov~rsi,dst_name", "mov~edi,0", "call~FOO", "mov~gid,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 6, 3, 0.034420289855072464, ["cmp     byte ptr [x+1Bh], 0", "jnz     short loc_5B89"], ["cmp~[yte ptr [x+0],0", "jnz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 1, 7, 2, 0.007246376811594203, ["jmp     short loc_5BC6"], ["jmp~FOO"]], [1, 0, 5, 0, 1, 5, 0, 2, 3, 3, 0.050724637681159424, ["call    ___errno_location", "mov     r15, rax", "mov     r14d, [rax]", "cmp     r14d, 1", "jz      loc_5BD9"], ["call~FOO", "mov~r15,rax", "mov~r14d,<TAG>", "cmp~r14d,0", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 4, 2, 0.01177536231884058, ["cmp     r14d, 16h", "jz      loc_5BD9"], ["cmp~r14d,0", "jz~FOO"]], [1, 0, 3, 0, 1, 6, 0, 2, 4, 2, 0.01177536231884058, ["mov     edx, r12d; group", "mov     esi, 0FFFFFFFFh; owner", "mov     edi, ebx; fd", "call    _fchown", "mov     [r15], r14d", "jmp     loc_5CE4"], ["mov~edx,r12d", "mov~esi,0", "mov~edi,ebx", "call~FOO", "mov~<TAG>,r14d", "jmp~FOO"]]], "func_feature": [16, 11, 38, 0, 25, 40, 2, 140, 0.03449, 2, 2], "succs": [[20, 6], [0, 3], [12, 7], [9, 2], [7], [4, 7], [19, 20], [], [7], [22, 7], [14], [17, 10], [18, 13], [18, 5], [1, 3], [14], [11, 3], [3, 15], [5], [8], [19, 21], [8], [24, 23], [24, 5], [5]], "fname": "set_owner", "n_num": 25}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 2, 0, 0, 2, 0, 1, 0, 0, 0.0, ["cmp     cs:mask_7898, 0FFFFFFFFh", "jz      short loc_5D1A"], ["cmp~<TAG>,0", "jz~FOO"]], [3, 0, 0, 2, 2, 9, 0, 2, 0, 0, 0.0, ["sub     rsp, 8", "mov     edi, 0; mask", "call    _umask", "mov     cs:mask_7898, eax", "mov     edi, eax; mask", "call    _umask", "mov     eax, cs:mask_7898", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~edi,0", "call~FOO", "mov~<TAG>,eax", "mov~edi,eax", "call~FOO", "mov~eax,<TAG>", "add~rsp,0", "retn"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, -1, 0.0, ["mov     eax, cs:mask_7898", "retn"], ["mov~eax,<TAG>", "retn"]]], "func_feature": [2, 0, 3, 0, 3, 2, 5, 13, 0.0, 1, 2], "succs": [[1, 2], [], []], "fname": "cached_umask", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 378, 0, 1, 7, 1, 2, 0, 0, 0.005276646907856091, ["mov     r8d, dword ptr [rbp+symlink_err]; dereference", "mov     ecx, 0; verbose", "mov     rsi, [rbp+dst_name]; dst_name", "mov     rdi, [rbp+src_name]; src_name", "call    create_hard_link", "test    al, al", "jz      un_backup"], ["mov~r8d,[word ptr [rbp+0]", "mov~ecx,0", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~al,al", "jz~FOO"]], [2, 0, 378, 0, 0, 3, 0, 1, 19, 6, 0.005992864524924688, ["mov     edx, 1", "cmp     byte ptr [x_0+16h], 0", "jnz     short loc_7FDF"], ["mov~edx,0", "cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 378, 0, 0, 3, 0, 0, 20, 6, 0.0, ["cmp     dword ptr [x_0+8], 3", "setz    dl", "movzx   edx, dl; replace"], ["cmp~[word ptr [x_0+0],0", "setz~dl", "movzx~edx,dl"]], [1, 0, 427, 0, 0, 2, 0, 1, 20, 6, 0.0023114117340319595, ["cmp     byte ptr [x_0+22h], 0", "jz      loc_6D77"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 428, 0, 0, 2, 0, 1, 19, 5, 0.006707472223007549, ["cmp     byte ptr [x_0+15h], 0", "jnz     short loc_6816"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 32, 3, 0.00693835816535203, ["cmp     byte ptr [rbp+restore_dst_mode], 1", "jz      loc_77DB"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [0, 0, 12, 0, 1, 4, 1, 2, 31, 3, 0.008311893924401346, ["call    cached_umask", "not     eax", "and     dword ptr [rbp+srcbase], eax", "jz      loc_77DB"], ["call~FOO", "not~eax", "and~[word ptr [rbp+0],eax", "jz~FOO"]], [0, 0, 618, 0, 0, 2, 1, 1, 6, 9, 0.040591162251562014, ["test    r15b, r15b", "jnz     loc_6E65"], ["test~r15b,r15b", "jnz~FOO"]], [2, 0, 620, 0, 0, 4, 0, 1, 5, 10, 0.037801683111400114, ["mov     eax, [x_0+4]", "mov     dword ptr [rbp+symlink_err], 1", "cmp     eax, 4", "jz      short loc_6001"], ["mov~eax,[x_0+0]", "mov~[word ptr [rbp+0],0", "cmp~eax,0", "jz~FOO"]], [1, 0, 619, 0, 0, 5, 1, 0, 6, 10, 0.0, ["cmp     eax, 3", "setz    al", "movzx   eax, al", "and     eax, r14d", "mov     dword ptr [rbp+symlink_err], eax"], ["cmp~eax,0", "setz~al", "movzx~eax,al", "and~eax,r14d", "mov~[word ptr [rbp+0],eax"]], [9, 0, 3, 0, 4, 22, 0, 5, 15, 2, 9.506375279183513e-05, ["mov     rdx, [rbp+dst_name]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     r13, rax", "mov     rdx, [rbp+src_name]; arg", "mov     esi, 4; s", "mov     edi, 0; n", "call    quotearg_n_style", "mov     x_0, rax", "mov     edx, 5; category", "lea     rsi, aWillNotCopySTh; \"will not copy %s through just-created s\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8, r13", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     loc_5F54"], ["mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~r13,rax", "mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~x_0,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8,r13", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [0, 0, 401, 0, 1, 5, 1, 2, 14, 3, 0.0006015992385475861, ["mov     rdi, [x_0+40h]; ht", "mov     rsi, [rbp+dst_name]; file", "call    seen_file", "test    al, al", "jz      loc_6EBD"], ["mov~rdi,[x_0+0]", "mov~rsi,[rbp+0]", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 378, 0, 1, 5, 1, 1, 40, 10, 0.0020614816280757307, ["mov     rsi, qword ptr [rbp+scan.fd]; length", "mov     edi, [rbp+fildes]; fd", "call    _ftruncate", "test    eax, eax", "jns     loc_8F1F"], ["mov~rsi,[word ptr [rbp+0]", "mov~edi,[rbp+0]", "call~FOO", "test~eax,eax", "jns~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 39, 11, 0.004596515035858, ["cmp     byte ptr [rbp+dev], 0", "jz      loc_8F1F"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 33, 4, 0.0055601104482956845, ["test    r15b, r15b", "jnz     short loc_982D"], ["test~r15b,r15b", "jnz~FOO"]], [0, 0, 4, 0, 1, 6, 2, 2, 32, 2, 0.001412409412607315, ["mov     esi, [rbp+dst_mode]", "or      esi, dword ptr [rbp+srcbase]; mode", "mov     rdi, [rbp+dst_name]; file", "call    _chmod", "test    eax, eax", "jz      loc_5F54"], ["mov~esi,[rbp+0]", "or~esi,[word ptr [rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 7, 0, 0, 5, 1, 1, 34, 3, 0.001412409412607315, ["mov     eax, [rbp+dst_sb.st_mode]", "mov     [rbp+dst_mode], eax", "not     eax", "test    dword ptr [rbp+srcbase], eax", "jnz     loc_77E8"], ["mov~eax,[rbp+0]", "mov~[rbp+0],eax", "not~eax", "test~[word ptr [rbp+0],eax", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 31, 2, 0.0028130389301970543, ["cmp     byte ptr [rbp+restore_dst_mode], 0", "jz      loc_5F54"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 0, 616, 0, 0, 2, 0, 1, 7, 8, 0.01398332438061312, ["cmp     r13d, 11h", "jz      loc_612F"], ["cmp~r13d,0", "jz~FOO"]], [1, 0, 426, 0, 0, 2, 0, 0, 21, 5, 9.895111814763508e-05, ["cmp     [rbp+dst_sb.st_nlink], 1", "jbe     loc_6D77"], ["cmp~[rbp+0],0", "jbe~FOO"]], [0, 1, 378, 1, 0, 6, 0, 1, 33, 15, 0.03710431332635936, ["mov     rax, [rbp+dot_sb.st_size]", "mov     ecx, 200h", "cqo", "idiv    rcx", "cmp     [rbp+dot_sb.st_blocks], rax", "jge     loc_8784"], ["mov~rax,[rbp+0]", "mov~ecx,<STR>", "cqo~,", "idiv~,rcx", "cmp~[rbp+0],rax", "jge~FOO"]], [4, 1, 378, 0, 1, 10, 1, 2, 32, 15, 0.08628773100374129, ["mov     ecx, 2; advice", "mov     edx, 0; len", "mov     esi, 0; offset", "mov     edi, dword ptr [rbp+dest_is_symlink]; fd", "call    fdadvise", "mov     eax, [rbp+dot_sb.st_mode]", "and     eax, 0F000h", "mov     dword ptr [rbp+var_388], eax", "cmp     eax, 8000h", "jz      short loc_87F9"], ["mov~ecx,0", "mov~edx,0", "mov~esi,0", "mov~edi,[word ptr [rbp+0]", "call~FOO", "mov~eax,[rbp+0]", "and~eax,<STR>", "mov~[word ptr [rbp+0],eax", "cmp~eax,0", "jz~FOO"]], [0, 0, 378, 0, 0, 3, 0, 1, 21, 6, 0.0004994675487452056, ["movzx   eax, byte ptr [rbp+dest_is_symlink]", "mov     byte ptr [rbp+symlink_err], al", "jmp     loc_7613"], ["movzx~eax,[yte ptr [rbp+0]", "mov~[yte ptr [rbp+0],al", "jmp~FOO"]], [1, 0, 9, 0, 1, 6, 1, 2, 34, 3, 0.001395917559582709, ["lea     rdx, [rbp+dst_sb]; stat_buf", "mov     rsi, [rbp+dst_name]; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jz      short loc_980E"], ["lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 378, 0, 0, 3, 0, 1, 19, 7, 0.21610453007642796, ["mov     eax, dword ptr [rbp+ancestors]", "cmp     eax, 8000h", "jz      loc_80CB"], ["mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 378, 0, 0, 3, 1, 1, 18, 7, 0.2237018163027464, ["movzx   r12d, byte ptr [x_0+17h]", "test    r12b, r12b", "jz      short loc_8018"], ["movzx~r12d,[yte ptr [x_0+0]", "test~r12b,r12b", "jz~FOO"]], [1, 1, 613, 0, 0, 4, 1, 1, 8, 7, 0.009216337435429347, ["mov     eax, [rbp+mode]", "and     eax, 0F000h", "cmp     eax, 8000h", "jz      loc_614C"], ["mov~eax,[rbp+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [1, 0, 615, 0, 0, 2, 0, 1, 8, 7, 0.00725229236757042, ["cmp     dword ptr [x_0+8], 2", "jnz     loc_6014"], ["cmp~[word ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 421, 0, 1, 5, 1, 2, 20, 4, 0.004952071533805157, ["mov     r15, [rbp+dst_name]", "mov     rdi, r15; name", "call    _unlink", "test    eax, eax", "jz      short loc_683A"], ["mov~r15,[rbp+0]", "mov~rdi,r15", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 1, 423, 0, 0, 4, 1, 1, 22, 5, 0.0004570599266819334, ["mov     eax, [rbp+var_268]", "and     eax, 0F000h", "cmp     eax, 8000h", "jnz     loc_6816"], ["mov~eax,[rbp+0]", "and~eax,<STR>", "cmp~eax,0", "jnz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 1, 35, 3, 7.067937010545362e-06, ["jmp     loc_77DB"], ["jmp~FOO"]], [3, 0, 378, 0, 0, 6, 0, 0, 42, 10, 0.00029214139643587495, ["cmp     dword ptr [rbx+0Ch], 3", "setz    r9b", "movzx   r9d, r9b; punch_holes", "cmp     [rbp+var_3AD], 0", "mov     eax, 0", "cmovz   r13, rax"], ["cmp~[word ptr [rbx+0],0", "setz~r9b", "movzx~r9d,r9b", "cmp~[rbp+0],0", "mov~eax,0", "cmovz~r13,rax"]], [1, 0, 378, 0, 0, 2, 0, 1, 41, 10, 0.01031918803539623, ["cmp     [rbp+scan.initial_scan_failed], 0", "jnz     loc_A015"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 379, 0, 1, 5, 0, 1, 14, 6, 0.003069756499472929, ["mov     rdx, [rbp+src_mode]; dev", "mov     rsi, [rbp+ino]; ino", "mov     rdi, [rbp+dst_name]; name", "call    remember_copied", "mov     [rbp+have_dst_lstat], rax"], ["mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],rax"]], [0, 0, 381, 0, 0, 2, 1, 1, 13, 7, 0.006330347298230585, ["test    r14b, r14b", "jz      loc_70D2"], ["test~r14b,r14b", "jz~FOO"]], [1, 0, 420, 0, 1, 4, 0, 2, 21, 3, 0.000508891464759266, ["call    ___errno_location", "mov     r13, rax", "cmp     dword ptr [rax], 2", "jnz     loc_6DCF"], ["call~FOO", "mov~r13,rax", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 378, 0, 0, 5, 0, 1, 35, 14, 0.027437731474937097, ["mov     edx, [x_0+0Ch]", "cmp     edx, 3", "setz    al", "cmp     edx, 2", "jz      loc_A3F3"], ["mov~edx,[x_0+0]", "cmp~edx,0", "setz~al", "cmp~edx,0", "jz~FOO"]], [1, 1, 378, 0, 0, 4, 1, 1, 34, 15, 0.03599189857353298, ["mov     eax, dword ptr [rbp+timespec.tv_nsec+10h]", "and     eax, 0F000h", "cmp     eax, 8000h", "jnz     loc_A331"], ["mov~eax,[word ptr [rbp+0]", "and~eax,<STR>", "cmp~eax,0", "jnz~FOO"]], [1, 0, 378, 0, 0, 5, 1, 1, 20, 7, 0.04047807525939329, ["cmp     eax, 0A000h", "setnz   al", "and     al, [x_0+14h]", "mov     byte ptr [rbp+symlink_err], al", "jnz     loc_80CB"], ["cmp~eax,0", "setnz~al", "and~al,[x_0+0]", "mov~[yte ptr [rbp+0],al", "jnz~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 15, 5, 0.007376401975791318, ["cmp     [rbp+have_dst_lstat], 0", "jz      loc_7227"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 379, 0, 1, 5, 0, 2, 14, 6, 0.003069756499472929, ["mov     rsi, [rbp+src_mode]; dev", "mov     rdi, [rbp+ino]; ino", "call    src_to_dest_lookup", "mov     [rbp+have_dst_lstat], rax", "jmp     loc_7035"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 418, 0, 0, 3, 1, 1, 21, 11, 0.005550490200697999, ["movzx   r15d, byte ptr [x_0+2Eh]", "test    r15b, r15b", "jnz     loc_6E13"], ["movzx~r15d,[yte ptr [x_0+0]", "test~r15b,r15b", "jnz~FOO"]], [0, 0, 378, 0, 0, 2, 0, 0, 36, 13, 0.0015384542892953738, ["movzx   esi, byte ptr [rbp+parent]", "mov     byte ptr [rbp+x], sil"], ["movzx~esi,[yte ptr [rbp+0]", "mov~[yte ptr [rbp+0],sil"]], [1, 0, 378, 0, 0, 4, 1, 1, 35, 8, 0.0, ["movzx   eax, byte ptr [rbx+24h]", "xor     eax, 1", "mov     byte ptr [rbp+symlink_err], al", "jmp     loc_8625"], ["movzx~eax,[yte ptr [rbx+0]", "xor~eax,0", "mov~[yte ptr [rbp+0],al", "jmp~FOO"]], [1, 0, 378, 0, 1, 9, 1, 2, 34, 8, 0.00849330430767201, ["mov     r8d, dword ptr [rbp+s2]; mode", "mov     ecx, [rbp+fildes]; dest_desc", "mov     rdx, [rbp+dst_name]; dst_name", "mov     esi, dword ptr [rbp+dest_is_symlink]; source_desc", "mov     rdi, [rbp+src_name]; src_name", "call    copy_acl", "mov     byte ptr [rbp+symlink_err], 1", "test    eax, eax", "jz      loc_8625"], ["mov~r8d,[word ptr [rbp+0]", "mov~ecx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~esi,[word ptr [rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "mov~[yte ptr [rbp+0],0", "test~eax,eax", "jz~FOO"]], [0, 1, 378, 0, 0, 2, 0, 1, 21, 7, 0.03943437656083609, ["cmp     dword ptr [rbp+ancestors], 1000h", "jz      loc_92AA"], ["cmp~[word ptr [rbp+0],<STR>", "jz~FOO"]], [0, 0, 414, 0, 0, 2, 1, 1, 22, 10, 0.004565200148269612, ["test    r14b, r14b", "jz      loc_9CD2"], ["test~r14b,r14b", "jz~FOO"]], [0, 0, 378, 0, 0, 2, 1, 1, 35, 12, 0.039870232676486386, ["test    al, al", "jz      loc_87A1"], ["test~al,al", "jz~FOO"]], [1, 0, 378, 0, 0, 4, 0, 1, 34, 13, 0.037801683111400114, ["cmp     dword ptr [x_0+0Ch], 3", "setz    al", "mov     byte ptr [rbp+x], r12b", "jmp     loc_884D"], ["cmp~[word ptr [x_0+0],0", "setz~al", "mov~[yte ptr [rbp+0],r12b", "jmp~FOO"]], [3, 1, 612, 0, 0, 11, 3, 1, 9, 6, 0.005066406633898364, ["cmp     eax, 0A000h", "setz    dl", "cmp     eax, 4000h", "setz    al", "or      edx, eax", "movzx   eax, byte ptr [x_0+14h]", "xor     eax, 1", "mov     r8d, 100h; flag", "or      dl, al", "mov     byte ptr [rbp+have_dst_lstat], dl", "jz      loc_614C"], ["cmp~eax,0", "setz~dl", "cmp~eax,0", "setz~al", "or~edx,eax", "movzx~eax,[yte ptr [x_0+0]", "xor~eax,0", "mov~r8d,<STR>", "or~dl,al", "mov~[yte ptr [rbp+0],dl", "jz~FOO"]], [1, 1, 391, 0, 0, 4, 1, 1, 12, 8, 0.006779946624734723, ["mov     eax, [rbp+mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_700B"], ["mov~eax,[rbp+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [1, 0, 412, 0, 0, 2, 0, 1, 23, 9, 0.0023713125001963314, ["cmp     qword ptr [x_0+40h], 0", "jz      loc_A1F6"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 31, 12, 0.00013193482419684676, ["mov     [rbp+ptr], 0", "jmp     loc_8F1F"], ["mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 378, 0, 1, 7, 1, 2, 30, 10, 0.0050582869205469646, ["mov     edx, dword ptr [rbp+dest_is_symlink]", "mov     esi, 40049409h; request", "mov     edi, [rbp+fildes]; fd", "mov     eax, 0", "call    _ioctl", "test    eax, eax", "jz      loc_904C"], ["mov~edx,[word ptr [rbp+0]", "mov~esi,0", "mov~edi,[rbp+0]", "mov~eax,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 378, 0, 1, 5, 1, 2, 16, 4, 0.01243822286484355, ["mov     rsi, [rbp+have_dst_lstat]; dest", "mov     rdi, [rbp+src_name]; source", "call    same_name", "test    al, al", "jz      loc_7110"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~al,al", "jz~FOO"]], [1, 1, 378, 0, 0, 4, 1, 1, 16, 3, 0.012492688050878362, ["mov     eax, [rbp+mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_7043"], ["mov~eax,[rbp+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [6, 0, 3, 0, 4, 19, 0, 5, 33, 2, 0.0, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     r15, rax", "mov     edx, 5; category", "lea     rsi, aPreservingPerm; \"preserving permissions for %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r13, rax", "call    ___errno_location", "mov     rcx, r15", "mov     rdx, r13; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "cmp     byte ptr [rbx+24h], 0", "cmovnz  r12d, r14d", "jmp     loc_5F54"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~r15,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r13,rax", "call~FOO", "mov~rcx,r15", "mov~rdx,r13", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "cmp~[yte ptr [rbx+0],0", "cmovnz~r12d,r14d", "jmp~FOO"]], [1, 1, 378, 0, 0, 5, 1, 1, 22, 7, 0.03462228944615646, ["mov     esi, dword ptr [rbp+ancestors]", "mov     eax, esi", "and     ah, 0BFh", "cmp     eax, 2000h", "jz      loc_9370"], ["mov~esi,[word ptr [rbp+0]", "mov~eax,esi", "and~ah,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 1, 378, 0, 0, 4, 1, 1, 33, 14, 0.04833330192027986, ["mov     eax, dword ptr [rbp+timespec.tv_nsec+10h]", "and     eax, 0F000h", "cmp     eax, 8000h", "jz      loc_A002"], ["mov~eax,[word ptr [rbp+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [0, 0, 378, 0, 0, 3, 1, 1, 20, 8, 0.0005819268138682348, ["mov     rax, [rax]", "test    rax, rax", "jz      loc_9E3C"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 378, 0, 0, 2, 0, 1, 19, 7, 0.0049499118863852686, ["cmp     [rax+8], rdx", "jnz     short loc_785E"], ["cmp~[rax+0],rdx", "jnz~FOO"]], [0, 0, 378, 0, 0, 2, 0, 1, 20, 6, 0.002961465607418507, ["cmp     [rax+10h], rcx", "jnz     short loc_785E"], ["cmp~[rax+0],rcx", "jnz~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 23, 7, 0.030615947150678995, ["cmp     esi, 0C000h", "jz      loc_9370"], ["cmp~esi,0", "jz~FOO"]], [0, 0, 378, 0, 0, 3, 0, 1, 18, 8, 0.004954623844392299, ["mov     rdx, [rbp+ino]", "mov     rcx, [rbp+src_mode]", "jmp     loc_786A"], ["mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "jmp~FOO"]], [2, 0, 410, 0, 0, 4, 0, 1, 24, 8, 0.00011381341902814297, ["mov     r15d, r14d", "mov     r13d, 11h", "mov     [rbp+tmp_backup], 0", "jmp     loc_6E83"], ["mov~r15d,r14d", "mov~r13d,0", "mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 605, 0, 1, 7, 1, 2, 10, 5, 0.02003499301957078, ["lea     rcx, [rbp+dst_sb]; stat_buf", "mov     rdx, [rbp+dst_name]; filename", "mov     esi, 0FFFFFF9Ch; fildes", "mov     edi, 1; ver", "call    ___fxstatat", "test    eax, eax", "jz      loc_6223"], ["lea~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 1, 611, 0, 0, 5, 1, 1, 9, 6, 0.005455143169478359, ["movzx   eax, byte ptr [x_0+18h]", "mov     byte ptr [rbp+have_dst_lstat], al", "mov     r8d, 100h", "test    al, al", "jnz     loc_6057"], ["movzx~eax,[yte ptr [x_0+0]", "mov~[yte ptr [rbp+0],al", "mov~r8d,<STR>", "test~al,al", "jnz~FOO"]], [0, 0, 610, 0, 0, 4, 1, 1, 10, 6, 0.00032041314447805644, ["movzx   eax, byte ptr [x_0+2Ch]", "mov     byte ptr [rbp+have_dst_lstat], al", "test    al, al", "jnz     loc_6057"], ["movzx~eax,[yte ptr [x_0+0]", "mov~[yte ptr [rbp+0],al", "test~al,al", "jnz~FOO"]], [0, 0, 609, 0, 0, 4, 1, 1, 11, 6, 0.00024737779536908766, ["movzx   eax, byte ptr [x_0+17h]", "mov     byte ptr [rbp+have_dst_lstat], al", "test    al, al", "jnz     loc_6057"], ["movzx~eax,[yte ptr [x_0+0]", "mov~[yte ptr [rbp+0],al", "test~al,al", "jnz~FOO"]], [1, 1, 606, 0, 0, 7, 1, 1, 13, 6, 0.0007138616380650816, ["movzx   eax, byte ptr [x_0+15h]", "mov     byte ptr [rbp+have_dst_lstat], al", "cmp     al, 1", "sbb     r8d, r8d", "not     r8d", "and     r8d, 100h", "jmp     loc_6057"], ["movzx~eax,[yte ptr [x_0+0]", "mov~[yte ptr [rbp+0],al", "cmp~al,0", "sbb~r8d,r8d", "not~r8d", "and~r8d,<STR>", "jmp~FOO"]], [1, 1, 606, 0, 0, 3, 0, 1, 13, 6, 0.0007138616380650816, ["mov     byte ptr [rbp+have_dst_lstat], 1", "mov     r8d, 100h", "jmp     loc_6057"], ["mov~[yte ptr [rbp+0],0", "mov~r8d,<STR>", "jmp~FOO"]], [3, 0, 378, 2, 1, 17, 1, 2, 38, 9, 0.027129098225476614, ["sub     rsp, 8", "lea     rax, [rbp+dev]", "push    rax; last_write_made_hole", "lea     rax, [rbp+scan]", "push    rax; total_n_read", "push    0FFFFFFFFFFFFFFFFh; max_n_read", "push    [rbp+dst_name]; dst_name", "push    [rbp+src_name]; src_name", "mov     r8, r13; hole_size", "mov     rcx, [rbp+symlink_err]; buf_size", "mov     rdx, [rbp+buf]; buf", "mov     esi, [rbp+fildes]; dest_fd", "mov     edi, dword ptr [rbp+dest_is_symlink]; src_fd", "call    sparse_copy", "add     rsp, 30h", "test    al, al", "jz      loc_8BAC"], ["sub~rsp,0", "lea~rax,[rbp+0]", "push~rax", "lea~rax,[rbp+0]", "push~rax", "push~0", "push~[rbp+0]", "push~[rbp+0]", "mov~r8,r13", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~esi,[rbp+0]", "mov~edi,[word ptr [rbp+0]", "call~FOO", "add~rsp,0", "test~al,al", "jz~FOO"]], [1, 0, 378, 0, 0, 4, 0, 1, 37, 10, 0.0145528823047129, ["cmp     dword ptr [x_0+0Ch], 3", "setz    r9b", "movzx   r9d, r9b", "jmp     loc_A031"], ["cmp~[word ptr [x_0+0],0", "setz~r9b", "movzx~r9d,r9b", "jmp~FOO"]], [2, 0, 378, 0, 0, 5, 0, 1, 41, 10, 0.010865775164211737, ["cmp     dword ptr [x_0+0Ch], 3", "setz    r9b", "movzx   r9d, r9b", "mov     r13d, 0", "jmp     loc_A031"], ["cmp~[word ptr [x_0+0],0", "setz~r9b", "movzx~r9d,r9b", "mov~r13d,0", "jmp~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 24, 6, 0.029776629630676732, ["cmp     dword ptr [rbp+ancestors], 0A000h", "jz      loc_9408"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [1, 0, 603, 0, 1, 5, 0, 2, 11, 4, 0.011287242979519137, ["call    ___errno_location", "mov     r12, rax", "mov     eax, [rax]", "cmp     eax, 28h ; '('", "jz      loc_61BD"], ["call~FOO", "mov~r12,rax", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 484, 0, 1, 6, 1, 2, 15, 3, 0.0003357270080009047, ["lea     rdx, [rbp+dst_sb]; dst_sb", "mov     rsi, [rbp+dst_name]; dst_name", "mov     rdi, x_0; x", "call    overwrite_ok", "test    al, al", "jnz     loc_677A"], ["lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rdi,x_0", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 485, 0, 0, 2, 0, 1, 14, 4, 0.0039109251458351, ["cmp     eax, 3", "jz      loc_6875"], ["cmp~eax,0", "jz~FOO"]], [5, 0, 3, 0, 4, 18, 0, 5, 35, 2, 1.0601905515818043e-05, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     r12, rax", "mov     edx, 5; category", "lea     rsi, aCannotStatS; \"cannot stat %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     rcx, r12", "mov     rdx, rbx; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     r12d, r14d", "jmp     loc_5F54"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~r12,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~rcx,r12", "mov~rdx,rbx", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~r12d,r14d", "jmp~FOO"]], [2, 0, 378, 3, 1, 13, 0, 2, 36, 11, 0.03940374883379039, ["mov     rdi, [rbp+restore_dst_mode_0]", "add     rdi, [rbp+symlink_err]; n", "call    xmalloc", "mov     [rbp+ptr], rax", "mov     rsi, [rbp+restore_dst_mode_0]", "lea     rcx, [rax+rsi-1]", "mov     rax, rcx", "mov     edx, 0", "div     rsi", "sub     rcx, rdx", "mov     [rbp+buf], rcx", "cmp     byte ptr [rbp+x], 0", "jnz     loc_A42E"], ["mov~rdi,[rbp+0]", "add~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],rax", "mov~rsi,[rbp+0]", "lea~rcx,[rax+0]", "mov~rax,rcx", "mov~edx,0", "div~,rsi", "sub~rcx,rdx", "mov~[rbp+0],rcx", "cmp~[yte ptr [rbp+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 16, 2, 1.0601905515818043e-05, ["mov     r12d, 1", "jmp     loc_5F54"], ["mov~r12d,0", "jmp~FOO"]], [1, 0, 476, 0, 0, 2, 0, 1, 16, 3, 0.0010919962681292584, ["cmp     byte ptr [x_0+18h], 0", "jz      short loc_68AD"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 1, 478, 0, 0, 4, 1, 1, 15, 4, 0.0039427308623825544, ["mov     r12d, [rbp+mode]", "and     r12d, 0F000h", "cmp     r12d, 4000h", "jz      loc_689E"], ["mov~r12d,[rbp+0]", "and~r12d,<STR>", "cmp~r12d,0", "jz~FOO"]], [1, 0, 598, 0, 0, 2, 0, 1, 13, 8, 0.016338461963055557, ["cmp     r13d, 11h", "jz      loc_621A"], ["cmp~r13d,0", "jz~FOO"]], [0, 0, 599, 0, 0, 2, 0, 1, 13, 9, 0.0014041634860950118, ["mov     byte ptr [rbp+tmp_backup], r15b", "jmp     loc_609F"], ["mov~[yte ptr [rbp+0],r15b", "jmp~FOO"]], [2, 0, 600, 0, 0, 3, 0, 1, 12, 3, 0.012320339772560519, ["mov     byte ptr [rbp+tmp_backup], 1", "cmp     eax, 2", "jnz     loc_61C3"], ["mov~[yte ptr [rbp+0],0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 475, 0, 0, 2, 0, 1, 17, 3, 0.0014701308981934353, ["cmp     dword ptr [x_0], 0", "jnz     loc_A15D"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 8, 0, 1, 4, 0, 2, 23, 3, 0.0, ["mov     rsi, [rbp+src_mode]; dev", "mov     rdi, [rbp+ino]; ino", "call    forget_created", "jmp     loc_7F1A"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "jmp~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 22, 3, 0.005896073054196942, ["cmp     [rbp+have_dst_lstat], 0", "jz      loc_989A"], ["cmp~[rbp+0],0", "jz~FOO"]], [6, 0, 378, 0, 4, 18, 0, 5, 32, 9, 0.004946377917879996, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     [rbp+symlink_err], rax", "mov     edx, 5; category", "lea     rsi, aPreservingTime; \"preserving times for %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r13, rax", "call    ___errno_location", "mov     rcx, [rbp+symlink_err]", "mov     rdx, r13; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "cmp     byte ptr [rbx+24h], 0", "jz      loc_8F7E"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~[rbp+0],rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r13,rax", "call~FOO", "mov~rcx,[rbp+0]", "mov~rdx,r13", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "cmp~[yte ptr [rbx+0],0", "jz~FOO"]], [0, 0, 378, 0, 1, 14, 1, 2, 31, 10, 0.005361030222498657, ["mov     rax, [rbp+var_238]", "mov     [rbp+var_2A0.tv_sec], rax", "mov     rax, [rbp+var_230]", "mov     [rbp+var_2A0.tv_nsec], rax", "mov     rax, [rbp+var_228]", "mov     [rbp+var_290], rax", "mov     rax, [rbp+var_220]", "mov     [rbp+var_288], rax", "lea     rdx, [rbp+var_2A0]; timespec", "mov     rsi, [rbp+dst_name]; file", "mov     edi, [rbp+fildes]; fd", "call    fdutimens", "test    eax, eax", "jnz     loc_905C"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,[rbp+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [6, 0, 378, 0, 3, 15, 0, 4, 21, 5, 0.002405454562588938, ["mov     rsi, [rbp+src_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     r12, rax", "mov     edx, 5; category", "lea     rsi, aCannotCopyCycl; \"cannot copy cyclic symbolic link %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     un_backup"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~r12,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [0, 0, 378, 0, 0, 3, 0, 1, 36, 16, 1.1387231850323082e-05, ["movzx   eax, byte ptr [rbp+parent]", "mov     byte ptr [rbp+x], al", "jmp     loc_87DA"], ["movzx~eax,[yte ptr [rbp+0]", "mov~[yte ptr [rbp+0],al", "jmp~FOO"]], [2, 0, 378, 1, 0, 8, 0, 0, 35, 16, 0.0069497453972023225, ["mov     rax, 7FFFFFFFFFFFFFFFh", "sub     rax, [rbp+restore_dst_mode_0]", "mov     [rbp+ptr], rax", "mov     rdi, [rbp+dot_sb.st_blksize]", "lea     rdx, [rdi-20000h]", "mov     rax, 1FFFFFFFFFFE0000h", "cmp     rdx, rax", "jbe     loc_88AE"], ["mov~rax,0", "sub~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rdi,[rbp+0]", "lea~rdx,[rdi-20000h]+0]", "mov~rax,0", "cmp~rdx,rax", "jbe~FOO"]], [0, 0, 378, 0, 0, 2, 0, 1, 33, 8, 0.004531725613261334, ["mov     byte ptr [rbp+symlink_err], r12b", "jmp     loc_8625"], ["mov~[yte ptr [rbp+0],r12b", "jmp~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 14, 3, 0.3407126326023516, ["cmp     byte ptr [x_0+1Dh], 0", "jnz     loc_752E"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 1, 378, 0, 0, 4, 1, 1, 13, 4, 0.34142885021942015, ["mov     r13d, [rbp+mode]", "and     r13d, 0FFFh", "cmp     byte ptr [x_0+2Bh], 0", "jz      short loc_9D71"], ["mov~r13d,[rbp+0]", "and~r13d,<STR>", "cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 1, 378, 0, 0, 2, 1, 0, 14, 4, 0.0, ["mov     r13d, [x_0+10h]", "and     r13d, 0FFFh"], ["mov~r13d,[x_0+0]", "and~r13d,<STR>"]], [1, 0, 378, 0, 0, 2, 0, 1, 29, 11, 0.09360068983065223, ["cmp     dword ptr [x_0+38h], 0", "jnz     loc_8670"], ["cmp~[word ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 412, 0, 0, 4, 0, 1, 14, 10, 0.015341882844568661, ["mov     byte ptr [rbp+have_dst_lstat], r15b", "movzx   r15d, byte ptr [rbp+tmp_backup]", "mov     [rbp+tmp_backup], 0", "jmp     loc_6E77"], ["mov~[yte ptr [rbp+0],r15b", "movzx~r15d,[yte ptr [rbp+0]", "mov~[rbp+0],0", "jmp~FOO"]], [6, 0, 378, 0, 3, 15, 0, 4, 25, 5, 0.0010548895988238952, ["mov     rsi, [rbp+src_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     r12, rax", "mov     edx, 5; category", "lea     rsi, aSHasUnknownFil; \"%s has unknown file type\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     un_backup"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~r12,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [0, 0, 43, 0, 1, 5, 0, 2, 25, 5, 0.0, ["lea     rdx, [rbp+timespec]; stats", "mov     rdi, [rbx+40h]; ht", "mov     rsi, [rbp+dst_name]; file", "call    record_file", "jmp     loc_7674"], ["lea~rdx,[rbp+0]", "mov~rdi,[rbx+0]", "mov~rsi,[rbp+0]", "call~FOO", "jmp~FOO"]], [1, 0, 44, 0, 1, 6, 1, 2, 24, 5, 0.002638696483936935, ["lea     rdx, [rbp+timespec]; stat_buf", "mov     rsi, [rbp+dst_name]; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jz      loc_9672"], ["lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 378, 0, 1, 3, 1, 2, 34, 10, 0.0024855578487084523, ["call    _geteuid", "test    eax, eax", "jz      loc_8FF1"], ["call~FOO", "test~eax,eax", "jz~FOO"]], [0, 1, 378, 0, 0, 2, 1, 1, 33, 10, 0.0037248028045574057, ["test    byte ptr [rbp+timespec.tv_nsec+10h], 80h", "jz      loc_90C3"], ["test~[yte ptr [rbp+0],<STR>", "jz~FOO"]], [10, 0, 378, 0, 4, 24, 0, 5, 17, 4, 0.0016961365983163496, ["mov     rdx, cs:top_level_dst_name; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     r13, rax", "mov     rdx, cs:top_level_src_name; arg", "mov     esi, 4; s", "mov     edi, 0; n", "call    quotearg_n_style", "mov     r12, rax", "mov     edx, 5; category", "lea     rsi, aCannotCopyADir; \"cannot copy a directory, %s, into itsel\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8, r13", "mov     rcx, r12", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     rax, [rbp+ptr]", "mov     byte ptr [rax], 1", "jmp     loc_A308"], ["mov~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~r13,rax", "mov~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~r12,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8,r13", "mov~rcx,r12", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rax,[rbp+0]", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 378, 0, 1, 6, 1, 2, 20, 6, 0.012564436025746138, ["lea     rdx, [rbp+dst_sb]; stat_buf", "mov     rsi, [rbp+dst_name]; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jnz     loc_7968"], ["lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 378, 0, 1, 8, 2, 2, 19, 6, 0.01957802845394375, ["mov     esi, dword ptr [rbp+srcbase]", "not     esi", "and     esi, r13d; mode", "mov     dst_mode_bits, [rbp+dst_name]", "mov     rdi, r13; path", "call    _mkdir", "test    eax, eax", "jz      loc_78BF"], ["mov~esi,[word ptr [rbp+0]", "not~esi", "and~esi,r13d", "mov~dst_mode_bits,[rbp+0]", "mov~rdi,r13", "call~FOO", "test~eax,eax", "jz~FOO"]], [6, 0, 31, 0, 4, 18, 0, 5, 28, 3, 0.0013546879270211944, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     r14, rax", "mov     edx, 5; category", "lea     rsi, aPreservingTime; \"preserving times for %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r13, rax", "call    ___errno_location", "mov     rcx, r14", "mov     rdx, r13; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "cmp     byte ptr [rbx+24h], 0", "jz      loc_7730"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~r14,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r13,rax", "call~FOO", "mov~rcx,r14", "mov~rdx,r13", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "cmp~[yte ptr [rbx+0],0", "jz~FOO"]], [0, 0, 32, 0, 0, 2, 1, 1, 27, 3, 0.003058060746562627, ["test    al, al", "jnz     loc_96C5"], ["test~al,al", "jnz~FOO"]], [0, 0, 623, 0, 1, 6, 1, 2, 8, 3, 9.18831811370897e-05, ["lea     rdx, [rbp+src_mode]; stats", "mov     rsi, [rbp+src_name]; file", "call    seen_file", "mov     r12d, eax", "test    al, al", "jz      loc_5FC6"], ["lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "call~FOO", "mov~r12d,eax", "test~al,al", "jz~FOO"]], [1, 0, 624, 0, 0, 2, 0, 1, 7, 4, 0.000136646782203877, ["cmp     dword ptr [x_0], 0", "jz      loc_60C8"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 378, 0, 1, 1, 0, 1, 29, 7, 0.004704890070019697, ["call    restore_default_fscreatecon_or_die"], ["call~FOO"]], [0, 0, 378, 0, 0, 4, 1, 1, 28, 8, 0.012764694241044924, ["movzx   eax, byte ptr [x_0+25h]", "mov     byte ptr [rbp+symlink_err], al", "test    al, al", "jnz     loc_957B"], ["movzx~eax,[yte ptr [x_0+0]", "mov~[yte ptr [rbp+0],al", "test~al,al", "jnz~FOO"]], [1, 0, 378, 0, 1, 6, 0, 2, 37, 14, 0.008502728223686128, ["mov     rdx, [rbp+ptr]; lcm_max", "mov     rsi, [rbp+symlink_err]; b", "call    buffer_lcm", "mov     rcx, rax", "cmp     dword ptr [rbp+var_388], 8000h", "jz      loc_A392"], ["mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "call~FOO", "mov~rcx,rax", "cmp~[word ptr [rbp+0],0", "jz~FOO"]], [1, 1, 378, 0, 0, 6, 0, 1, 36, 15, 0.0044319891687792145, ["lea     rdx, [rdi-1]", "mov     rax, 1FFFFFFFFFFFFFFFh", "cmp     rdx, rax", "mov     eax, 200h", "cmova   rdi, rax", "jmp     loc_88C5"], ["lea~rdx,[rdi-1]+0]", "mov~rax,0", "cmp~rdx,rax", "mov~eax,<STR>", "cmova~rdi,rax", "jmp~FOO"]], [1, 0, 378, 0, 0, 1, 0, 0, 36, 15, 0.0035406437791159883, ["mov     edi, 20000h; a"], ["mov~edi,0"]], [0, 1, 378, 0, 1, 7, 1, 2, 35, 10, 0.0012439569138559838, ["mov     edx, 180h; mode", "mov     rsi, [rbp+dst_name]; name", "mov     r13d, [rbp+fildes]", "mov     edi, r13d; desc", "call    fchmod_or_lchmod", "test    eax, eax", "jnz     loc_8FF1"], ["mov~edx,<STR>", "mov~rsi,[rbp+0]", "mov~r13d,[rbp+0]", "mov~edi,r13d", "call~FOO", "test~eax,eax", "jnz~FOO"]], [5, 0, 378, 0, 4, 17, 0, 5, 41, 9, 0.0016374054074430088, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     [rbp+symlink_err], rax", "mov     edx, 5; category", "lea     rsi, aFailedToExtend; \"failed to extend %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r13, rax", "call    ___errno_location", "mov     rcx, [rbp+symlink_err]", "mov     rdx, r13; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     loc_8BAC"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~[rbp+0],rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r13,rax", "call~FOO", "mov~rcx,[rbp+0]", "mov~rdx,r13", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [3, 0, 378, 0, 0, 6, 1, 1, 21, 7, 0.01024144072828023, ["mov     r12d, [rbp+dst_sb.st_mode]", "mov     eax, r12d", "and     eax, 1C0h", "mov     byte ptr [rbp+restore_dst_mode_0], 0", "cmp     eax, 1C0h", "jnz     loc_79B6"], ["mov~r12d,[rbp+0]", "mov~eax,r12d", "and~eax,0", "mov~[yte ptr [rbp+0],0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 65, 0, 0, 3, 0, 1, 22, 8, 0.00014607069821793748, ["mov     byte ptr [rbp+restore_dst_mode_0], r15b", "mov     dword ptr [rbp+srcbase], 0", "jmp     loc_7A97"], ["mov~[yte ptr [rbp+0],r15b", "mov~[word ptr [rbp+0],0", "jmp~FOO"]], [1, 0, 378, 0, 1, 7, 1, 2, 21, 6, 0.004466936190664668, ["movzx   esi, byte ptr [x_0+25h]; process_local", "mov     rcx, x_0; x", "mov     edx, 0; recurse", "mov     rdi, [rbp+dst_name]; dst_name", "call    set_file_security_ctx", "test    al, al", "jnz     short loc_7CE7"], ["movzx~esi,[yte ptr [x_0+0]", "mov~rcx,x_0", "mov~edx,0", "mov~rdi,[rbp+0]", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 32, 10, 0.021799873719525412, ["cmp     byte ptr [rbx+27h], 0", "jz      short loc_8FF1"], ["cmp~[yte ptr [rbx+0],0", "jz~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 31, 11, 0.028128033322967025, ["cmp     byte ptr [rbx+1Dh], 0", "jz      short loc_8FDE"], ["cmp~[yte ptr [rbx+0],0", "jz~FOO"]], [0, 0, 378, 0, 0, 3, 0, 1, 33, 10, 4.0051643059757055e-05, ["mov     eax, dword ptr [rbp+var_B0]", "cmp     [rbp+group], eax", "jz      short loc_8FDE"], ["mov~eax,[word ptr [rbp+0]", "cmp~[rbp+0],eax", "jz~FOO"]], [0, 0, 378, 0, 0, 2, 1, 1, 34, 11, 0.0012840085569157408, ["test    eax, eax", "jnz     short loc_8FDE"], ["test~eax,eax", "jnz~FOO"]], [1, 0, 378, 0, 0, 1, 1, 0, 35, 11, 0.0, ["and     dword ptr [rbp+s2], 0FFFFF1FFh"], ["and~[word ptr [rbp+0],0"]], [3, 0, 378, 1, 1, 14, 1, 2, 20, 6, 0.17470762300566378, ["mov     eax, [rbp+var_268]", "mov     dword ptr [rbp+s2], eax", "movzx   eax, byte ptr [x_0+23h]", "mov     byte ptr [rbp+parent], al", "cmp     dword ptr [x_0+4], 2", "setz    sil", "movzx   esi, sil", "shl     esi, 11h; flags", "mov     rdi, [rbp+src_name]; file", "mov     eax, 0", "call    open_safer", "mov     dword ptr [rbp+dest_is_symlink], eax", "test    eax, eax", "js      loc_820E"], ["mov~eax,[rbp+0]", "mov~[word ptr [rbp+0],eax", "movzx~eax,[yte ptr [x_0+0]", "mov~[yte ptr [rbp+0],al", "cmp~[word ptr [x_0+0],0", "setz~sil", "movzx~esi,sil", "shl~esi,0", "mov~rdi,[rbp+0]", "mov~eax,0", "call~FOO", "mov~[word ptr [rbp+0],eax", "test~eax,eax", "js~FOO"]], [1, 0, 70, 0, 0, 3, 0, 1, 22, 9, 0.00682762715218682, ["mov     rax, qword ptr [rbp+fildes]", "cmp     byte ptr [rax], 0", "jz      loc_7A2F"], ["mov~rax,[word ptr [rbp+0]", "cmp~<TAG>,0", "jz~FOO"]], [2, 0, 378, 0, 1, 8, 2, 2, 22, 6, 0.0019672424679351257, ["mov     esi, r12d", "or      esi, 1C0h; mode", "mov     rdi, [rbp+dst_name]; file", "call    _chmod", "mov     [rbp+dst_mode], r12d", "mov     byte ptr [rbp+restore_dst_mode_0], 1", "test    eax, eax", "jz      loc_7900"], ["mov~esi,r12d", "or~esi,0", "mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],r12d", "mov~[yte ptr [rbp+0],0", "test~eax,eax", "jz~FOO"]], [0, 0, 378, 0, 1, 5, 0, 2, 14, 5, 0.002709625475627283, ["mov     rsi, [rbp+src_mode]; dev", "mov     rdi, [rbp+ino]; ino", "call    src_to_dest_lookup", "mov     [rbp+have_dst_lstat], rax", "jmp     loc_A2B6"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 383, 0, 0, 2, 0, 1, 13, 6, 0.009955046237770777, ["cmp     [rbp+var_270], 1", "jz      loc_70F1"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 14, 2, 1.7669842526363403e-05, ["mov     r12d, 1", "jmp     loc_5F54"], ["mov~r12d,0", "jmp~FOO"]], [1, 0, 487, 0, 0, 3, 0, 1, 13, 3, 0.0034409073346338337, ["mov     eax, [x_0+8]", "cmp     eax, 2", "jz      loc_9906"], ["mov~eax,[x_0+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 456, 0, 0, 3, 1, 1, 18, 7, 0.028601585102673566, ["mov     r13d, [x_0]", "test    r13d, r13d", "jnz     loc_69EC"], ["mov~r13d,<TAG>", "test~r13d,r13d", "jnz~FOO"]], [1, 1, 459, 0, 0, 4, 1, 1, 18, 4, 0.000801032861195141, ["mov     eax, [rbp+dst_sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_A17C"], ["mov~eax,[rbp+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [1, 1, 460, 0, 0, 4, 1, 1, 17, 5, 0.028089159669409027, ["mov     eax, [rbp+var_268]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_69CA"], ["mov~eax,[rbp+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [1, 0, 378, 2, 0, 9, 0, 1, 38, 13, 0.013650542346366609, ["mov     rax, [rbp+symlink_err]", "lea     rsi, [rax+rcx-1]", "mov     rax, rsi", "mov     edx, 0", "div     rcx", "mov     rax, rsi", "sub     rax, rdx", "mov     [rbp+symlink_err], rax", "jz      loc_8A37"], ["mov~rax,[rbp+0]", "lea~rsi,[rax+0]", "mov~rax,rsi", "mov~edx,0", "div~,rcx", "mov~rax,rsi", "sub~rax,rdx", "mov~[rbp+0],rax", "jz~FOO"]], [0, 0, 378, 0, 0, 3, 0, 0, 37, 14, 0.0050276591935013, ["mov     rax, [rbp+dot_sb.st_size]", "cmp     rax, [rbp+symlink_err]", "jnb     loc_88EB"], ["mov~rax,[rbp+0]", "cmp~rax,[rbp+0]", "jnb~FOO"]], [1, 0, 378, 1, 0, 3, 0, 1, 38, 14, 0.0, ["add     rax, 1", "mov     [rbp+symlink_err], rax", "jmp     loc_88EB"], ["add~rax,0", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 378, 0, 1, 7, 1, 2, 36, 10, 0.0, ["mov     edx, [rbp+var_318]", "not     edx", "and     edx, [rbp+var_398]; mode", "mov     rsi, [rbp+dst_name]; name", "mov     edi, r13d; desc", "call    fchmod_or_lchmod", "jmp     loc_8FF1"], ["mov~edx,[rbp+0]", "not~edx", "and~edx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,r13d", "call~FOO", "jmp~FOO"]], [0, 0, 378, 0, 2, 5, 0, 3, 33, 9, 0.0008764241893076249, ["mov     rdi, dest_link_val; ptr", "call    free", "mov     rdi, r13; ptr", "call    free", "jmp     loc_A106"], ["mov~rdi,dest_link_val", "call~FOO", "mov~rdi,r13", "call~FOO", "jmp~FOO"]], [0, 0, 378, 0, 1, 2, 0, 1, 27, 9, 0.011358174775946396, ["mov     rdi, src_link_val; ptr", "call    free"], ["mov~rdi,src_link_val", "call~FOO"]], [1, 0, 378, 0, 0, 1, 0, 0, 48, 14, 0.0015773279428533734, ["mov     [rbp+scan.hit_final_extent], 1"], ["mov~[rbp+0],0"]], [0, 0, 378, 0, 0, 3, 0, 1, 47, 15, 0.005741520831566349, ["mov     rsi, [rbp+offset]", "cmp     [rbp+restore_dst_mode_0], rsi", "jz      loc_8D83"], ["mov~rsi,[rbp+0]", "cmp~[rbp+0],rsi", "jz~FOO"]], [1, 0, 68, 0, 0, 2, 0, 1, 23, 8, 0.004650702552938848, ["cmp     byte ptr [x_0+2Eh], 0", "jz      loc_7A97"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 69, 0, 1, 7, 0, 2, 23, 9, 0.0, ["mov     rdx, [rbp+dst_sb.st_dev]; dev", "mov     rsi, [rbp+dst_sb.st_ino]; ino", "mov     rdi, [rbp+dst_name]; name", "call    remember_copied", "mov     rax, qword ptr [rbp+fildes]", "mov     byte ptr [rax], 1", "jmp     loc_7910"], ["mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "mov~rax,[word ptr [rbp+0]", "mov~<TAG>,0", "jmp~FOO"]], [9, 0, 3, 0, 4, 23, 0, 5, 17, 2, 2.473777953690877e-05, ["mov     rdx, [rbp+src_name]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     r12, rax", "mov     rdx, [rbp+dst_name]; arg", "mov     esi, 4; s", "mov     edi, 0; n", "call    quotearg_n_style", "mov     x_0, rax", "mov     edx, 5; category", "lea     rsi, aCannotOverwrit; \"cannot overwrite non-directory %s with \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8, r12", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     r12d, r15d", "jmp     loc_5F54"], ["mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~r12,rax", "mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~x_0,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8,r12", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~r12d,r15d", "jmp~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 34, 9, 0.009911603667788113, ["cmp     byte ptr [rbx+2Bh], 0", "jnz     loc_91E6"], ["cmp~[yte ptr [rbx+0],0", "jnz~FOO"]], [1, 0, 378, 0, 0, 3, 1, 1, 33, 9, 0.02000932967685392, ["mov     rax, 0FF0000000000FFh", "test    [rbx+18h], rax", "jz      loc_9115"], ["mov~rax,0", "test~[rbx+0],rax", "jz~FOO"]], [1, 0, 67, 0, 0, 2, 0, 1, 24, 9, 0.002511473617747119, ["cmp     byte ptr [x_0+18h], 0", "jz      loc_7A58"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 378, 0, 0, 3, 0, 1, 39, 12, 0.006024238311988164, ["mov     rsi, [rbp+ptr]", "cmp     rax, rsi", "ja      loc_8A37"], ["mov~rsi,[rbp+0]", "cmp~rax,rsi", "ja~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 29, 2, 2.8271748042181448e-05, ["movzx   r12d, byte ptr [rbp+dest_is_symlink]", "jmp     loc_5F54"], ["movzx~r12d,[yte ptr [rbp+0]", "jmp~FOO"]], [2, 0, 23, 0, 1, 9, 0, 2, 28, 3, 0.0028224628462111146, ["lea     rcx, [rbp+src_mode]; src_sb", "lea     r9, [rbp+dst_sb]; dst_sb", "movzx   r8d, r15b; new_dst", "mov     edx, 0FFFFFFFFh; dest_desc", "mov     rsi, [rbp+dst_name]; dst_name", "mov     rdi, rbx; x", "call    set_owner", "cmp     eax, 0FFFFFFFFh", "jz      loc_9919"], ["lea~rcx,[rbp+0]", "lea~r9,[rbp+0]", "movzx~r8d,r15b", "mov~edx,0", "mov~rsi,[rbp+0]", "mov~rdi,rbx", "call~FOO", "cmp~eax,0", "jz~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 35, 9, 0.007437825714097236, ["cmp     byte ptr [rbx+20h], 0", "jz      short loc_912E"], ["cmp~[yte ptr [rbx+0],0", "jz~FOO"]], [0, 0, 378, 0, 0, 4, 1, 1, 29, 7, 0.006455382469631432, ["movzx   eax, byte ptr [x_0+1Dh]", "mov     byte ptr [rbp+dest_is_symlink], al", "test    al, al", "jnz     loc_9580"], ["movzx~eax,[yte ptr [x_0+0]", "mov~[yte ptr [rbp+0],al", "test~al,al", "jnz~FOO"]], [0, 0, 378, 0, 1, 6, 1, 2, 17, 3, 0.009137664565133395, ["mov     rsi, [rbp+have_dst_lstat]; dest", "mov     rdi, [rbp+dst_name]; source", "call    same_name", "mov     r12d, eax", "test    al, al", "jnz     loc_71B2"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "mov~r12d,eax", "test~al,al", "jnz~FOO"]], [6, 0, 3, 0, 3, 15, 0, 4, 9, 2, 4.240762206327217e-05, ["mov     rsi, [rbp+src_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     x_0, rax", "mov     edx, 5; category", "lea     rsi, aWarningSourceF; \"warning: source file %s specified more \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     loc_5F54"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~x_0,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 0, 647, 0, 0, 3, 0, 1, 3, 8, 0.0020139693848381757, ["mov     r15d, r12d", "cmp     [rbp+ancestors], 0", "jnz     loc_5DDC"], ["mov~r15d,r12d", "cmp~[rbp+0],0", "jnz~FOO"]], [2, 0, 650, 0, 1, 9, 1, 2, 2, 9, 0.0005037868435849833, ["mov     r8d, 1; flags", "mov     rcx, [rbp+dst_name]; dst", "mov     edx, 0FFFFFF9Ch; fd2", "mov     rsi, src_name_0; src", "mov     edi, edx; fd1", "call    renameatu", "mov     r13d, eax", "test    eax, eax", "jz      loc_9926"], ["mov~r8d,0", "mov~rcx,[rbp+0]", "mov~edx,0", "mov~rsi,src_name_0", "mov~edi,edx", "call~FOO", "mov~r13d,eax", "test~eax,eax", "jz~FOO"]], [1, 0, 378, 0, 0, 3, 0, 1, 18, 6, 0.0062362764223045245, ["mov     eax, [x_0+4]", "cmp     eax, 4", "jz      loc_7227"], ["mov~eax,[x_0+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 378, 0, 1, 1, 0, 1, 19, 7, 0.24026613251013182, ["call    restore_default_fscreatecon_or_die"], ["call~FOO"]], [0, 0, 378, 0, 0, 1, 0, 1, 18, 8, 0.08306323716900178, ["jmp     loc_A312"], ["jmp~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 21, 4, 0.1596456921709247, ["cmp     byte ptr [rbx+25h], 0", "jnz     loc_A312"], ["cmp~[yte ptr [rbx+0],0", "jnz~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 18, 3, 0.006428877705841885, ["cmp     byte ptr [x_0+25h], 0", "jz      loc_7F1A"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 641, 0, 0, 2, 0, 1, 2, 7, 0.007711511941672242, ["cmp     byte ptr [x_0+31h], 0", "jnz     loc_5F97"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 645, 0, 0, 2, 1, 1, 1, 7, 0.007117805232786433, ["test    r13d, r13d", "jz      loc_9937"], ["test~r13d,r13d", "jz~FOO"]], [1, 0, 469, 0, 0, 2, 0, 1, 19, 6, 0.0018847832028120967, ["cmp     r12d, 4000h", "jz      loc_67C2"], ["cmp~r12d,0", "jz~FOO"]], [0, 0, 471, 0, 1, 6, 1, 2, 18, 3, 0.0015525901633164645, ["lea     rdx, [rbp+dst_sb]; stats", "mov     rdi, [x_0+40h]; ht", "mov     rsi, [rbp+dst_name]; file", "call    seen_file", "test    al, al", "jnz     short loc_695D"], ["lea~rdx,[rbp+0]", "mov~rdi,[x_0+0]", "mov~rsi,[rbp+0]", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 19, 5, 0.0025845089668560875, ["cmp     eax, 3", "jnz     short loc_7148"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 378, 0, 0, 4, 0, 1, 30, 6, 0.0005725028978541742, ["movzx   eax, byte ptr [rbp+dest_is_symlink]", "mov     byte ptr [rbp+symlink_err], al", "mov     byte ptr [rbp+dest_is_symlink], 1", "jmp     loc_7613"], ["movzx~eax,[yte ptr [rbp+0]", "mov~[yte ptr [rbp+0],al", "mov~[yte ptr [rbp+0],0", "jmp~FOO"]], [0, 0, 378, 0, 0, 2, 1, 1, 20, 5, 0.0008222366722267771, ["test    r14b, r14b", "jnz     loc_7227"], ["test~r14b,r14b", "jnz~FOO"]], [0, 0, 513, 0, 0, 3, 0, 1, 9, 6, 0.0074504470301874955, ["mov     byte ptr [rbp+tmp_backup], r15b", "mov     byte ptr [rbp+have_dst_lstat], r15b", "jmp     loc_624E"], ["mov~[yte ptr [rbp+0],r15b", "mov~[yte ptr [rbp+0],r15b", "jmp~FOO"]], [1, 0, 566, 0, 0, 2, 0, 1, 22, 7, 0.005083024700083873, ["cmp     byte ptr [x_0+15h], 0", "jnz     loc_9BAD"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 1, 568, 0, 0, 4, 1, 1, 21, 8, 0.004141811088179582, ["mov     eax, [rbp+dot_sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      short loc_64F4"], ["mov~eax,[rbp+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [0, 0, 378, 0, 0, 3, 0, 1, 23, 8, 0.1653653809303918, ["mov     rax, [rbp+dot_sb.st_dev]", "cmp     [rbp+src_mode], rax", "jz      loc_82B5"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 0, 378, 0, 0, 3, 0, 1, 22, 8, 0.16737031906238317, ["mov     rax, [rbp+dot_sb.st_ino]", "cmp     [rbp+ino], rax", "jnz     short loc_8152"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [1, 0, 639, 0, 0, 3, 0, 1, 3, 6, 9.895111814763508e-05, ["mov     r12, [rbp+dst_name]", "mov     r13d, 0", "jmp     loc_5E00"], ["mov~r12,[rbp+0]", "mov~r13d,0", "jmp~FOO"]], [1, 1, 468, 0, 0, 4, 1, 1, 20, 5, 0.0004405680736573276, ["mov     eax, [rbp+dst_sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     loc_67C2"], ["mov~eax,[rbp+0]", "and~eax,<STR>", "cmp~eax,0", "jnz~FOO"]], [1, 0, 378, 0, 1, 5, 1, 2, 37, 8, 0.0024855578487084523, ["call    cached_umask", "not     eax", "mov     byte ptr [rbp+symlink_err], 1", "test    [rbp+var_318], eax", "jz      loc_8625"], ["call~FOO", "not~eax", "mov~[yte ptr [rbp+0],0", "test~[rbp+0],eax", "jz~FOO"]], [2, 0, 378, 0, 0, 3, 0, 1, 36, 8, 0.005037083109515328, ["mov     byte ptr [rbp+symlink_err], 1", "cmp     [rbp+var_318], 0", "jz      loc_8625"], ["mov~[yte ptr [rbp+0],0", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 464, 0, 0, 1, 0, 1, 21, 4, 7.774730711599899e-05, ["jmp     loc_9C77"], ["jmp~FOO"]], [0, 0, 473, 0, 0, 2, 1, 1, 18, 5, 0.0022146202633042135, ["test    r14b, r14b", "jnz     loc_67B9"], ["test~r14b,r14b", "jnz~FOO"]], [1, 1, 542, 0, 0, 4, 1, 1, 21, 5, 0.0029037441218323864, ["mov     eax, [r13+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_A143"], ["mov~eax,[r13+0]", "and~eax,<STR>", "cmp~eax,0", "jnz~FOO"]], [1, 0, 551, 0, 0, 2, 0, 1, 20, 6, 0.003016831114001112, ["cmp     byte ptr [x_0+15h], 0", "jz      loc_9953"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [5, 0, 65, 0, 3, 14, 0, 4, 25, 8, 7.656931761424142e-05, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     r12, rax", "mov     edx, 5; category", "lea     rsi, aCreatedDirecto; \"created directory %s\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, r12", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "jmp     loc_7A97"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~r12,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,r12", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 0, 528, 0, 0, 2, 0, 1, 22, 4, 0.00966186989341551, ["cmp     byte ptr [x_0+2Ch], 0", "jz      short loc_9982"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 535, 0, 0, 2, 0, 1, 23, 5, 0.0012828305674139832, ["cmp     byte ptr [x_0+18h], 0", "jz      loc_9967"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 1, 534, 0, 0, 4, 1, 1, 24, 5, 0.0006549621629772036, ["mov     eax, [rbp+var_268]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_9967"], ["mov~eax,[rbp+0]", "and~eax,<STR>", "cmp~eax,0", "jnz~FOO"]], [1, 0, 533, 0, 0, 2, 0, 0, 25, 5, 0.00046177188468896367, ["cmp     qword ptr [r12+10h], 1", "jbe     loc_9967"], ["cmp~[word ptr [r12+0],0", "jbe~FOO"]], [0, 0, 532, 0, 1, 4, 1, 2, 26, 5, 0.0002638696483936935, ["mov     rdi, [rbp+src_name]; name", "call    _canonicalize_file_name", "test    rax, rax", "jz      loc_9967"], ["mov~rdi,[rbp+0]", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 1, 541, 0, 0, 4, 1, 1, 22, 5, 0.00020261419430230037, ["mov     eax, [r12+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_9967"], ["mov~eax,[r12+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [0, 0, 463, 0, 0, 3, 1, 1, 16, 6, 0.05057815724746261, ["movzx   r12d, byte ptr [x_0+18h]", "test    r12b, r12b", "jnz     loc_A166"], ["movzx~r12d,[yte ptr [x_0+0]", "test~r12b,r12b", "jnz~FOO"]], [1, 0, 462, 0, 0, 2, 0, 1, 17, 3, 0.0021580767672198507, ["cmp     dword ptr [x_0], 0", "jnz     loc_A166"], ["cmp~<TAG>,0", "jnz~FOO"]], [3, 0, 378, 3, 1, 15, 0, 2, 40, 11, 0.012576215920763714, ["mov     rdi, [rbp+restore_dst_mode_0]", "add     rdi, [rbp+symlink_err]; n", "call    xmalloc", "mov     [rbp+ptr], rax", "mov     rsi, [rbp+restore_dst_mode_0]", "lea     rcx, [rax+rsi-1]", "mov     rax, rcx", "mov     edx, 0", "div     rsi", "sub     rcx, rdx", "mov     [rbp+buf], rcx", "mov     [rbp+var_3AD], r12b", "mov     [rbp+var_394], 1", "cmp     byte ptr [rbp+x], 0", "jz      loc_A3B6"], ["mov~rdi,[rbp+0]", "add~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],rax", "mov~rsi,[rbp+0]", "lea~rcx,[rax+0]", "mov~rax,rcx", "mov~edx,0", "div~,rsi", "sub~rcx,rdx", "mov~[rbp+0],rcx", "mov~[rbp+0],r12b", "mov~[rbp+0],0", "cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [0, 0, 378, 0, 0, 2, 0, 1, 39, 12, 0.006024238311988164, ["mov     [rbp+symlink_err], rcx", "jmp     loc_8925"], ["mov~[rbp+0],rcx", "jmp~FOO"]], [1, 1, 527, 0, 0, 4, 1, 1, 23, 4, 0.007810070396652625, ["mov     eax, [r12+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_624E"], ["mov~eax,[r12+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [1, 0, 378, 0, 1, 7, 1, 2, 38, 8, 0.0012439569138559838, ["mov     edx, [rbp+var_398]; mode", "mov     rsi, [rbp+dst_name]; name", "mov     edi, [rbp+fildes]; desc", "call    fchmod_or_lchmod", "mov     byte ptr [rbp+symlink_err], 1", "test    eax, eax", "jz      loc_8625"], ["mov~edx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,[rbp+0]", "call~FOO", "mov~[yte ptr [rbp+0],0", "test~eax,eax", "jz~FOO"]], [1, 0, 526, 0, 0, 2, 0, 1, 23, 3, 0.002709375854042389, ["cmp     dword ptr [x_0+4], 2", "jnz     loc_6555"], ["cmp~[word ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 608, 0, 0, 2, 0, 1, 12, 7, 0.0001696304882530887, ["cmp     dword ptr [x_0], 0", "jnz     short loc_61AB"], ["cmp~<TAG>,0", "jnz~FOO"]], [7, 0, 378, 0, 3, 15, 0, 3, 23, 7, 0.0008081007982056864, ["mov     rsi, [rbp+src_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     r12, rax", "mov     edx, 5; category", "lea     rsi, aSkippingFileSA; \"skipping file %s, as it was replaced wh\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     [rbp+ptr], 0"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~r12,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~[rbp+0],0"]], [0, 0, 378, 0, 0, 2, 1, 1, 36, 9, 0.0012439569138559838, ["test    r15b, r15b", "jnz     loc_9209"], ["test~r15b,r15b", "jnz~FOO"]], [0, 0, 378, 0, 0, 5, 0, 1, 37, 14, 0.048429504396256824, ["mov     eax, [x_0+0Ch]", "mov     [rbp+var_394], eax", "movzx   eax, byte ptr [rbp+parent]", "mov     [rbp+var_3AD], al", "jmp     loc_897E"], ["mov~eax,[x_0+0]", "mov~[rbp+0],eax", "movzx~eax,[yte ptr [rbp+0]", "mov~[rbp+0],al", "jmp~FOO"]], [1, 0, 378, 3, 1, 11, 0, 1, 36, 15, 0.024294855484247924, ["mov     rdi, [rbp+restore_dst_mode_0]", "add     rdi, [rbp+symlink_err]; n", "call    xmalloc", "mov     [rbp+ptr], rax", "mov     rsi, [rbp+restore_dst_mode_0]", "lea     rcx, [rax+rsi-1]", "mov     rax, rcx", "mov     edx, 0", "div     rsi", "sub     rcx, rdx", "mov     [rbp+buf], rcx"], ["mov~rdi,[rbp+0]", "add~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],rax", "mov~rsi,[rbp+0]", "lea~rcx,[rax+0]", "mov~rax,rcx", "mov~edx,0", "div~,rsi", "sub~rcx,rdx", "mov~[rbp+0],rcx"]], [1, 1, 525, 0, 0, 4, 1, 1, 24, 8, 0.0035858000433500138, ["mov     eax, [r13+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_66F2"], ["mov~eax,[r13+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [2, 0, 412, 0, 0, 4, 0, 1, 19, 10, 0.024802568959505434, ["movzx   r15d, byte ptr [rbp+tmp_backup]", "mov     r13d, 11h", "mov     [rbp+tmp_backup], 0", "jmp     loc_6E77"], ["movzx~r15d,[yte ptr [rbp+0]", "mov~r13d,0", "mov~[rbp+0],0", "jmp~FOO"]], [9, 0, 378, 0, 4, 22, 0, 5, 20, 4, 0.00022381800533393648, ["mov     rdx, [rbp+have_dst_lstat]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     r13, rax", "mov     rdx, [rbp+dst_name]; arg", "mov     esi, 4; s", "mov     edi, 0; n", "call    quotearg_n_style", "mov     r12, rax", "mov     edx, 5; category", "lea     rsi, aWillNotCreateH; \"will not create hard link %s to directo\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8, r13", "mov     rcx, r12", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     loc_A308"], ["mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~r13,rax", "mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~r12,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8,r13", "mov~rcx,r12", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [0, 0, 378, 0, 1, 4, 1, 1, 23, 6, 0.02052528907862373, ["mov     edi, dword ptr [rbp+dest_is_symlink]; fd", "call    _close", "test    eax, eax", "jns     loc_A3CD"], ["mov~edi,[word ptr [rbp+0]", "call~FOO", "test~eax,eax", "jns~FOO"]], [6, 0, 378, 0, 4, 18, 0, 5, 22, 7, 0.003048636830548566, ["mov     rsi, [rbp+src_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     dst_mode_bits, rax", "mov     edx, 5; category", "lea     rsi, aCannotFstatS; \"cannot fstat %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r12, rax", "call    ___errno_location", "mov     rcx, r13", "mov     rdx, r12; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     [rbp+ptr], 0", "jmp     loc_81A1"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~dst_mode_bits,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r12,rax", "call~FOO", "mov~rcx,r13", "mov~rdx,r12", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~[rbp+0],0", "jmp~FOO"]], [6, 0, 378, 0, 3, 17, 0, 4, 29, 7, 0.0011387231850323084, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     r12, rax", "mov     edx, 5; category", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "mov     rax, [rbp+ptr]", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     [rbp+ptr], 0", "jmp     loc_81A1"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~r12,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "mov~rax,[rbp+0]", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 32, 7, 0.001776408168650401, ["mov     [rbp+ptr], 0", "jmp     loc_81A1"], ["mov~[rbp+0],0", "jmp~FOO"]], [7, 0, 378, 0, 3, 16, 0, 4, 32, 7, 0.0011614976487329546, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     r12, rax", "mov     edx, 5; category", "lea     rsi, aNotWritingThro; \"not writing through dangling symlink %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     [rbp+ptr], 0", "jmp     loc_81A1"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~r12,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~[rbp+0],0", "jmp~FOO"]], [5, 0, 378, 0, 4, 17, 0, 5, 30, 7, 0.000548157781484518, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     r13, rax", "mov     edx, 5; category", "lea     rsi, aFailedToCloseS; \"failed to close %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r12, rax", "call    ___errno_location", "mov     rcx, r13", "mov     rdx, r12; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     loc_81A1"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~r13,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r12,rax", "call~FOO", "mov~rcx,r13", "mov~rdx,r12", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [6, 0, 378, 0, 3, 16, 0, 4, 29, 7, 0.007072648968552392, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     r12, rax", "mov     edx, 5; category", "lea     rsi, aCannotCreateRe; \"cannot create regular file %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "mov     esi, r13d; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     [rbp+ptr], 0", "jmp     loc_81A1"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~r12,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "mov~esi,r13d", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~[rbp+0],0", "jmp~FOO"]], [5, 0, 378, 0, 4, 17, 0, 5, 21, 5, 0.0007185735960721118, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     r13, rax", "mov     edx, 5; category", "lea     rsi, aCannotStatS; \"cannot stat %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r12, rax", "call    ___errno_location", "mov     rcx, r13", "mov     rdx, r12; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     un_backup"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~r13,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r12,rax", "call~FOO", "mov~rcx,r13", "mov~rdx,r12", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 0, 453, 0, 1, 5, 0, 2, 18, 7, 0.005357496253993384, ["mov     rdi, [rbp+src_name]; name", "call    last_component", "mov     [rbp+srcbase], rax", "cmp     byte ptr [srcbase_0], 2Eh ; '.'", "jz      loc_6B6A"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],rax", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 454, 0, 0, 3, 1, 1, 17, 7, 0.02911636651494162, ["mov     r13d, [x_0]", "test    r13d, r13d", "jnz     loc_A1A6"], ["mov~r13d,<TAG>", "test~r13d,r13d", "jnz~FOO"]], [1, 0, 601, 0, 0, 2, 0, 1, 12, 3, 0.00019436826778999745, ["cmp     byte ptr [x_0+16h], 0", "jnz     short loc_620E"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [9, 0, 3, 0, 4, 23, 0, 5, 19, 2, 2.8271748042181448e-05, ["mov     rdx, [rbp+src_name]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     r12, rax", "mov     rdx, [rbp+dst_name]; arg", "mov     esi, 4; s", "mov     edi, 0; n", "call    quotearg_n_style", "mov     x_0, rax", "mov     edx, 5; category", "lea     rsi, aWillNotOverwri; \"will not overwrite just-created %s with\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8, r12", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     r12d, r15d", "jmp     loc_5F54"], ["mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~r12,rax", "mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~x_0,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8,r12", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~r12d,r15d", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 14, 2, 0.0, ["mov     byte ptr [rax], 1", "jmp     loc_5F54"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 4, 0, 0, 4, 1, 1, 13, 2, 0.0006584961314824762, ["mov     r12d, 1", "mov     rax, [rbp+ancestors]", "test    rax, rax", "jz      loc_5F54"], ["mov~r12d,0", "mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [1, 1, 429, 0, 0, 4, 1, 1, 19, 6, 0.005521236794737685, ["mov     eax, [rbp+dst_sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     loc_6A08"], ["mov~eax,[rbp+0]", "and~eax,<STR>", "cmp~eax,0", "jnz~FOO"]], [0, 0, 431, 0, 0, 2, 1, 1, 21, 7, 0.0005795708348647197, ["test    r12b, r12b", "jz      loc_A1C2"], ["test~r12b,r12b", "jz~FOO"]], [6, 0, 378, 0, 4, 20, 1, 5, 39, 8, 0.0, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     [rbp+symlink_err], rax", "mov     edx, 5; category", "lea     rsi, aPreservingPerm; \"preserving permissions for %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r13, rax", "call    ___errno_location", "mov     rcx, [rbp+symlink_err]", "mov     rdx, r13; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "movzx   eax, byte ptr [rbx+24h]", "xor     eax, 1", "mov     byte ptr [rbp+symlink_err], al", "jmp     loc_8625"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~[rbp+0],rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r13,rax", "call~FOO", "mov~rcx,[rbp+0]", "mov~rdx,r13", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "movzx~eax,[yte ptr [rbx+0]", "xor~eax,0", "mov~[yte ptr [rbp+0],al", "jmp~FOO"]], [1, 0, 378, 0, 1, 7, 0, 1, 36, 15, 0.005333936463958253, ["mov     rdx, [rbp+ptr]; lcm_max", "mov     rsi, [rbp+symlink_err]; b", "mov     edi, 20000h; a", "call    buffer_lcm", "mov     rcx, rax", "movzx   eax, byte ptr [rbp+parent]", "mov     byte ptr [rbp+x], al"], ["mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~rcx,rax", "movzx~eax,[yte ptr [rbp+0]", "mov~[yte ptr [rbp+0],al"]], [0, 0, 456, 0, 0, 3, 1, 1, 19, 3, 0.00046766183219775143, ["mov     r13d, [x_0]", "test    r13d, r13d", "jz      loc_6AF7"], ["mov~r13d,<TAG>", "test~r13d,r13d", "jz~FOO"]], [0, 0, 378, 0, 0, 2, 0, 0, 25, 11, 0.01844653027118889, ["mov     eax, dword ptr [rbp+srcbase]", "mov     [rbp+var_318], eax"], ["mov~eax,[word ptr [rbp+0]", "mov~[rbp+0],eax"]], [1, 0, 378, 0, 0, 4, 2, 1, 24, 12, 0.16459968775424938, ["and     r13d, 1FFh", "mov     [rbp+var_398], r13d", "test    r15b, r15b", "jnz     loc_9EF7"], ["and~r13d,0", "mov~[rbp+0],r13d", "test~r15b,r15b", "jnz~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 30, 9, 0.0046978221330091505, ["cmp     byte ptr [x_0+21h], 0", "jz      loc_9EF7"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 378, 0, 1, 8, 1, 2, 31, 8, 0.002572729071838512, ["mov     r8, x_0; x", "mov     ecx, 1; new_dst", "mov     edx, [rbp+var_398]; mode", "mov     rsi, [rbp+dst_name]; dst_name", "mov     rdi, [rbp+src_name]; src_name", "call    set_process_security_ctx", "test    al, al", "jnz     loc_9EF7"], ["mov~r8,x_0", "mov~ecx,0", "mov~edx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~al,al", "jnz~FOO"]], [2, 0, 412, 0, 0, 4, 0, 1, 20, 10, 0.002890786237313053, ["movzx   r15d, byte ptr [rbp+tmp_backup]", "mov     r13d, 11h", "mov     [rbp+tmp_backup], 0", "jmp     loc_6E77"], ["movzx~r15d,[yte ptr [rbp+0]", "mov~r13d,0", "mov~[rbp+0],0", "jmp~FOO"]], [3, 0, 378, 0, 1, 19, 0, 1, 38, 13, 0.0494237275357402, ["mov     rax, [rbp+dot_sb.st_size]", "mov     [rbp+restore_dst_mode_0], rax", "lea     rsi, [rbp+scan]; scan", "mov     edi, dword ptr [rbp+dest_is_symlink]; src_fd", "call    extent_scan_init", "mov     [rbp+offset], 0", "mov     edi, 0", "mov     esi, 0", "lea     rax, [rbp+scan]", "mov     [rbp+var_3B8], rax", "lea     rax, [rbp+var_2F9]", "mov     [rbp+last_write_made_hole], rax", "lea     rax, [rbp+dev]", "mov     [rbp-3C8h], rax", "mov     byte ptr [rbp+x], r15b", "mov     [rbp+var_388], x_0", "mov     x_0, rsi", "mov     [rbp+var_38C], r14d", "mov     r14, rdi"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rsi,[rbp+0]", "mov~edi,[word ptr [rbp+0]", "call~FOO", "mov~[rbp+0],0", "mov~edi,0", "mov~esi,0", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[rbp-3C8h]+0],rax", "mov~[yte ptr [rbp+0],r15b", "mov~[rbp+0],x_0", "mov~x_0,rsi", "mov~[rbp+0],r14d", "mov~r14,rdi"]], [1, 0, 454, 0, 1, 5, 0, 2, 19, 6, 0.005190221744743811, ["mov     rdi, [rbp+src_name]; name", "call    last_component", "mov     [rbp+srcbase], rax", "cmp     byte ptr [srcbase_0], 2Eh ; '.'", "jz      loc_6B64"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],rax", "cmp~<TAG>,0", "jz~FOO"]], [7, 0, 4, 0, 3, 18, 1, 4, 18, 2, 0.0012946104624315588, ["mov     rsi, cs:top_level_src_name; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     r13, rax", "mov     edx, 5; category", "lea     rsi, aWarningSourceD; \"warning: source directory %s specified \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, r13", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "cmp     [rbp+ancestors], 0", "setnz   al", "and     al, [x_0+18h]", "jz      loc_5F54"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r13,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,r13", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "cmp~[rbp+0],0", "setnz~al", "and~al,[x_0+0]", "jz~FOO"]], [1, 0, 497, 0, 0, 2, 0, 1, 14, 4, 0.001444215129154769, ["cmp     byte ptr [x_0+18h], 0", "jz      loc_6765"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 504, 0, 1, 6, 1, 2, 13, 4, 0.08117374200818266, ["lea     rdx, [rbp+src_mode]; src_stat", "lea     rsi, [rbp+dst_sb]; dst_stat", "mov     rdi, [rbp+dst_name]; dst_name", "call    utimecmp", "test    eax, eax", "js      loc_9C52"], ["lea~rdx,[rbp+0]", "lea~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 378, 0, 1, 4, 1, 2, 39, 12, 0.05358203047694439, ["mov     rdi, [rbp+var_3B8]; scan", "call    extent_scan_read", "test    al, al", "jz      short loc_8A43"], ["mov~rdi,[rbp+0]", "call~FOO", "test~al,al", "jz~FOO"]], [3, 0, 378, 0, 1, 6, 0, 2, 41, 13, 0.006528417818740399, ["mov     rdi, [rbp+scan.ext_info]; ptr", "call    free", "mov     [rbp+scan.ext_info], 0", "mov     [rbp+scan.ei_count], 0", "cmp     [rbp+scan.hit_final_extent], 0", "jz      loc_89F8"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],0", "mov~[rbp+0],0", "cmp~[rbp+0],0", "jz~FOO"]], [5, 0, 3, 0, 3, 16, 0, 4, 13, 2, 0.00011308699216872579, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     x_0, rax", "mov     edx, 5; category", "lea     rsi, aCannotStatS; \"cannot stat %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, [r12]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     r12d, r15d", "jmp     loc_5F54"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~x_0,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~r12d,r15d", "jmp~FOO"]], [2, 0, 396, 0, 0, 4, 0, 1, 24, 8, 0.0023470262833017634, ["mov     r15d, r14d", "mov     r13d, 11h", "mov     [rbp+tmp_backup], 0", "jmp     loc_6ECD"], ["mov~r15d,r14d", "mov~r13d,0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 27, 7, 0.011838794492663481, ["cmp     byte ptr [x_0+2Dh], 1", "jnz     short loc_949B"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [2, 0, 378, 0, 1, 9, 1, 2, 26, 8, 0.024801390970003674, ["movzx   ecx, byte ptr [x_0+16h]; force", "mov     r8d, 0FFFFFFFFh; symlinkat_errno", "mov     rdx, [rbp+dst_name]; dstname", "mov     esi, 0FFFFFF9Ch; dstdir", "mov     rdi, src_link_val; srcname", "call    force_symlinkat", "mov     dword ptr [rbp+symlink_err], eax", "test    eax, eax", "jle     loc_A0FE"], ["movzx~ecx,[yte ptr [x_0+0]", "mov~r8d,0", "mov~rdx,[rbp+0]", "mov~esi,0", "mov~rdi,src_link_val", "call~FOO", "mov~[word ptr [rbp+0],eax", "test~eax,eax", "jle~FOO"]], [1, 0, 427, 0, 0, 2, 0, 1, 20, 5, 0.009258997483814424, ["cmp     r13d, 3", "jz      short loc_6A85"], ["cmp~r13d,0", "jz~FOO"]], [0, 0, 428, 0, 0, 1, 0, 1, 22, 6, 7.892529661775654e-05, ["jmp     loc_6A08"], ["jmp~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 40, 14, 0.027850027800552242, ["cmp     [rbp+scan.ei_count], 0", "jz      loc_8D8A"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 3, 0, 0, 4, 0, 1, 19, 2, 0.0, ["mov     rsi, [rbp+ancestors]", "mov     byte ptr [rsi], 1", "mov     r12d, eax", "jmp     loc_5F54"], ["mov~rsi,[rbp+0]", "mov~<TAG>,0", "mov~r12d,eax", "jmp~FOO"]], [1, 0, 378, 0, 0, 1, 0, 0, 16, 6, 0.0015902858273727065, ["mov     [rbp+have_dst_lstat], 0"], ["mov~[rbp+0],0"]], [1, 0, 379, 0, 0, 2, 0, 1, 15, 7, 0.001385315654066891, ["cmp     byte ptr [x_0+17h], 0", "jnz     loc_721C"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 393, 0, 0, 3, 1, 1, 13, 5, 0.0037047769830275273, ["mov     [rbp+have_dst_lstat], 0", "test    r13d, r13d", "jz      loc_9D52"], ["mov~[rbp+0],0", "test~r13d,r13d", "jz~FOO"]], [1, 0, 399, 0, 0, 2, 0, 1, 12, 6, 0.003346668174493229, ["cmp     byte ptr [x_0+2Eh], 0", "jz      loc_A20F"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 596, 0, 0, 2, 0, 1, 14, 7, 0.0021934164522725776, ["mov     byte ptr [rbp+have_dst_lstat], r15b", "jmp     short loc_622A"], ["mov~[yte ptr [rbp+0],r15b", "jmp~FOO"]], [0, 0, 596, 0, 0, 1, 0, 0, 11, 7, 0.009984639016897081, ["mov     byte ptr [rbp+tmp_backup], r15b"], ["mov~[yte ptr [rbp+0],r15b"]], [1, 0, 392, 0, 0, 2, 0, 1, 11, 8, 0.023453400754721045, ["cmp     byte ptr [x_0+2Ah], 0", "jz      short loc_A23F"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 395, 0, 0, 2, 1, 1, 10, 7, 0.12326386224388824, ["test    r13d, r13d", "jnz     loc_A223"], ["test~r13d,r13d", "jnz~FOO"]], [3, 0, 393, 0, 0, 4, 0, 1, 23, 9, 0.0022928387662209154, ["mov     r15d, 1", "mov     r13d, 11h", "mov     [rbp+tmp_backup], 0", "jmp     loc_A223"], ["mov~r15d,0", "mov~r13d,0", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 491, 0, 0, 1, 0, 1, 15, 4, 9.423916014060483e-05, ["jmp     loc_9BDC"], ["jmp~FOO"]], [5, 0, 378, 0, 4, 17, 0, 5, 23, 5, 0.0014489270871617993, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     r13, rax", "mov     edx, 5; category", "lea     rsi, aSettingPermiss; \"setting permissions for %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     dst_mode_0, rax", "call    ___errno_location", "mov     rcx, r13", "mov     rdx, r12; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     un_backup"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~r13,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~dst_mode_0,rax", "call~FOO", "mov~rcx,r13", "mov~rdx,r12", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 16, 5, 0.03667827378989066, ["cmp     byte ptr [x_0+18h], 0", "jz      loc_9D52"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [2, 0, 378, 0, 0, 3, 0, 1, 17, 6, 0.012248440341899673, ["mov     [rbp+have_dst_lstat], 0", "cmp     dword ptr [x_0+4], 4", "jnz     loc_7227"], ["mov~[rbp+0],0", "cmp~[word ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 15, 4, 0.02676295104096127, ["cmp     [rbp+have_dst_lstat], 0", "jz      loc_7227"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 595, 0, 0, 2, 0, 1, 12, 6, 0.014875651428194471, ["cmp     dword ptr [x_0+8], 2", "jz      short loc_624E"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [2, 0, 378, 0, 0, 6, 0, 1, 41, 14, 0.024243023946170592, ["mov     rdx, r14", "mov     rcx, rbx", "mov     [rbp+var_3AC], 0", "mov     eax, 0", "mov     [rbp+var_3AE], r12b", "jmp     loc_8CA5"], ["mov~rdx,r14", "mov~rcx,rbx", "mov~[rbp+0],0", "mov~eax,0", "mov~[rbp+0],r12b", "jmp~FOO"]], [1, 0, 378, 0, 2, 10, 2, 3, 37, 8, 0.00043821209465381246, ["call    cached_umask", "not     eax", "mov     edx, eax", "and     edx, 1B6h; mode", "mov     esi, [rbp+fildes]; desc", "mov     rdi, [rbp+dst_name]; name", "call    set_acl", "test    eax, eax", "setz    byte ptr [rbp+symlink_err]", "jmp     loc_8625"], ["call~FOO", "not~eax", "mov~edx,eax", "and~edx,0", "mov~esi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "setz~[yte ptr [rbp+0]", "jmp~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 16, 4, 0.025799737072743207, ["cmp     r13d, 11h", "jnz     short loc_7263"], ["cmp~r13d,0", "jnz~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 15, 5, 0.0054690125934931, ["mov     [rbp+have_dst_lstat], 0", "jmp     loc_7231"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 422, 0, 0, 3, 0, 1, 25, 5, 0.002167500683233911, ["mov     rax, [rbp+timespec.tv_nsec]", "cmp     [rbp+ino], rax", "jnz     loc_6A85"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [2, 0, 423, 0, 5, 27, 1, 6, 24, 5, 0.0025868649458596024, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     rdi, [rbp+dst_name]", "repne scasb", "mov     rax, rcx", "not     rax", "lea     r12, [rax-1]", "lea     rdi, [r13+r12+1]; n", "call    xmalloc", "mov     r13, rax", "mov     rax, cs:simple_backup_suffix", "mov     [rbp+tmp_backup], rax", "mov     rdx, r12; n", "mov     rsi, [rbp+dst_name]; src", "mov     rdi, r13; dest", "call    _mempcpy", "mov     rsi, [rbp+tmp_backup]; src", "mov     rdi, rax; dest", "call    _strcpy", "lea     rdx, [rbp+timespec]; stat_buf", "mov     rsi, r13; filename", "mov     edi, 1; ver", "call    ___xstat", "mov     r12d, eax", "mov     rdi, r13; ptr", "call    free", "test    r12d, r12d", "jnz     loc_6A85"], ["mov~rcx,0", "mov~rdi,[rbp+0]", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "lea~r12,[rax-1]+0]", "lea~rdi,[r13+0]", "call~FOO", "mov~r13,rax", "mov~rax,<TAG>", "mov~[rbp+0],rax", "mov~rdx,r12", "mov~rsi,[rbp+0]", "mov~rdi,r13", "call~FOO", "mov~rsi,[rbp+0]", "mov~rdi,rax", "call~FOO", "lea~rdx,[rbp+0]", "mov~rsi,r13", "mov~edi,0", "call~FOO", "mov~r12d,eax", "mov~rdi,r13", "call~FOO", "test~r12d,r12d", "jnz~FOO"]], [0, 0, 594, 0, 0, 3, 0, 1, 13, 7, 0.00916004636566679, ["mov     rax, [rbp+dst_sb.st_ino]", "cmp     [rbp+ino], rax", "jz      loc_632C"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [1, 0, 386, 0, 0, 2, 0, 1, 12, 7, 0.01734451548282089, ["cmp     byte ptr [x_0+18h], 0", "jz      loc_9D3D"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 575, 0, 0, 2, 0, 1, 14, 6, 0.009720769368503388, ["cmp     dword ptr [x_0+4], 2", "jz      loc_6380"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [0, 0, 593, 0, 0, 3, 0, 1, 14, 7, 0.0019625305099280955, ["mov     rax, [rbp+dst_sb.st_dev]", "cmp     [rbp+src_mode], rax", "jnz     loc_6244"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [1, 0, 5, 0, 0, 3, 1, 1, 15, 2, 0.002624207213065317, ["mov     r12d, 1", "test    r14b, r14b", "jz      loc_5F54"], ["mov~r12d,0", "test~r14b,r14b", "jz~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 14, 3, 0.005116832998784315, ["mov     rax, [rbp+ancestors]", "test    rax, rax", "jz      short loc_6F03"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 6, 0, 0, 1, 0, 0, 15, 3, 0.0, ["mov     byte ptr [rax], 1"], ["mov~<TAG>,0"]], [1, 0, 378, 0, 0, 3, 0, 1, 29, 8, 0.001277333283072448, ["movzx   r15d, byte ptr [rbp+symlink_err]", "mov     [rbp+ptr], 0", "jmp     loc_8625"], ["movzx~r15d,[yte ptr [rbp+0]", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 28, 9, 0.001965279152098863, ["cmp     byte ptr [x_0+26h], 0", "jnz     loc_9238"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [0, 0, 378, 0, 1, 5, 1, 2, 17, 5, 0.00771111927850499, ["mov     rsi, [rbp+dst_name]; new", "mov     rdi, [rbp+src_name]; old", "call    _rename", "test    eax, eax", "jz      loc_6EE0"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 522, 0, 0, 36, 0, 0, 25, 8, 0.0008776021788093825, ["mov     rax, [r13+0]", "mov     rdx, [r13+8]", "mov     [rbp+timespec.tv_sec], rax", "mov     [rbp+timespec.tv_nsec], rdx", "mov     rax, [r13+10h]", "mov     rdx, [r13+18h]", "mov     [rbp+timespec.tv_sec+10h], rax", "mov     [rbp+timespec.tv_nsec+10h], rdx", "mov     rax, [r13+20h]", "mov     rdx, [r13+28h]", "mov     [rbp+var_B0], rax", "mov     [rbp+var_A8], rdx", "mov     rax, [r13+30h]", "mov     rdx, [r13+38h]", "mov     [rbp+var_A0], rax", "mov     [rbp+var_98], rdx", "mov     rax, [r13+40h]", "mov     rdx, [r13+48h]", "mov     [rbp+var_90], rax", "mov     [rbp+var_88], rdx", "mov     rax, [r13+50h]", "mov     rdx, [r13+58h]", "mov     [rbp+var_80], rax", "mov     [rbp+var_78], rdx", "mov     rax, [r13+60h]", "mov     rdx, [r13+68h]", "mov     [rbp+var_70], rax", "mov     [rbp+var_68], rdx", "mov     rax, [r13+70h]", "mov     rdx, [r13+78h]", "mov     [rbp+var_60], rax", "mov     [rbp+var_58], rdx", "mov     rax, [r13+80h]", "mov     rdx, [r13+88h]", "mov     [rbp+var_50], rax", "mov     [rbp+var_48], rdx"], ["mov~rax,[r13+0]", "mov~rdx,[r13+0]", "mov~[rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,[r13+0]", "mov~rdx,[r13+0]", "mov~[rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,[r13+0]", "mov~rdx,[r13+0]", "mov~[rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,[r13+0]", "mov~rdx,[r13+0]", "mov~[rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,[r13+0]", "mov~rdx,[r13+0]", "mov~[rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,[r13+0]", "mov~rdx,[r13+0]", "mov~[rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,[r13+0]", "mov~rdx,[r13+0]", "mov~[rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,[r13+0]", "mov~rdx,[r13+0]", "mov~[rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,[r13+0]", "mov~rdx,[r13+0]", "mov~[rbp+0],rax", "mov~[rbp+0],rdx"]], [0, 0, 512, 0, 0, 3, 1, 1, 10, 5, 0.11288757537449969, ["movzx   r12d, byte ptr [x_0+2Dh]", "test    r12b, r12b", "jz      loc_6749"], ["movzx~r12d,[yte ptr [x_0+0]", "test~r12b,r12b", "jz~FOO"]], [0, 0, 513, 0, 0, 2, 0, 1, 18, 6, 0.0024101665205959683, ["mov     r15d, r12d", "jmp     loc_624E"], ["mov~r15d,r12d", "jmp~FOO"]], [0, 0, 513, 0, 0, 2, 0, 1, 23, 6, 0.0012015492917927116, ["mov     r15d, eax", "jmp     loc_624E"], ["mov~r15d,eax", "jmp~FOO"]], [0, 0, 513, 0, 0, 2, 0, 1, 24, 6, 0.0012015492917927116, ["mov     r15d, eax", "jmp     loc_624E"], ["mov~r15d,eax", "jmp~FOO"]], [1, 1, 547, 0, 0, 4, 1, 1, 20, 6, 0.014137052010592482, ["mov     eax, [r12+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_624E"], ["mov~eax,[r12+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [0, 0, 539, 0, 0, 3, 0, 1, 23, 6, 0.009084655037554306, ["mov     rax, [r12+8]", "cmp     [r13+8], rax", "jnz     loc_624E"], ["mov~rax,[r12+0]", "cmp~[r13+0],rax", "jnz~FOO"]], [0, 0, 538, 0, 0, 3, 0, 1, 24, 6, 0.0005324512547944173, ["mov     rax, [r12]", "cmp     [r13+0], rax", "jnz     loc_624E"], ["mov~rax,<TAG>", "cmp~[r13+0],rax", "jnz~FOO"]], [0, 0, 513, 0, 0, 2, 0, 1, 26, 6, 0.0012015492917927116, ["mov     r15d, eax", "jmp     loc_624E"], ["mov~r15d,eax", "jmp~FOO"]], [0, 0, 513, 0, 0, 1, 0, 1, 26, 6, 0.0036187837493992254, ["jmp     loc_624E"], ["jmp~FOO"]], [0, 0, 513, 0, 0, 1, 0, 1, 28, 6, 0.0014018075070914968, ["jmp     loc_624E"], ["jmp~FOO"]], [0, 0, 513, 0, 0, 2, 0, 1, 22, 6, 0.006608521104859913, ["movzx   r15d, byte ptr [rbp+srcbase]", "jmp     loc_624E"], ["movzx~r15d,[yte ptr [rbp+0]", "jmp~FOO"]], [0, 0, 517, 0, 0, 3, 0, 1, 28, 5, 0.004139455109176067, ["mov     rax, [rbp+dot_sb.st_ino]", "cmp     [rbp+timespec.tv_nsec], rax", "jnz     loc_624E"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [0, 0, 516, 0, 0, 3, 0, 1, 29, 4, 0.0005183153807733266, ["mov     rax, [rbp+dot_sb.st_dev]", "cmp     [rbp+timespec.tv_sec], rax", "jnz     loc_624E"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [1, 1, 513, 0, 0, 5, 1, 1, 31, 6, 0.0012015492917927116, ["mov     eax, [r12+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "setnz   r15b", "jmp     loc_624E"], ["mov~eax,[r12+0]", "and~eax,<STR>", "cmp~eax,0", "setnz~r15b", "jmp~FOO"]], [0, 0, 513, 0, 0, 2, 0, 1, 20, 6, 0.005406971813067202, ["mov     r15d, eax", "jmp     loc_624E"], ["mov~r15d,eax", "jmp~FOO"]], [0, 0, 513, 0, 0, 2, 0, 1, 21, 6, 0.0012015492917927116, ["movzx   r15d, byte ptr [rbp+srcbase]", "jmp     loc_624E"], ["movzx~r15d,[yte ptr [rbp+0]", "jmp~FOO"]], [0, 0, 513, 0, 0, 2, 0, 1, 19, 6, 0.0012086172288032569, ["mov     r15d, r12d", "jmp     loc_624E"], ["mov~r15d,r12d", "jmp~FOO"]], [0, 0, 513, 0, 0, 2, 0, 1, 23, 6, 0.006018348364479376, ["mov     r15d, r12d", "jmp     loc_624E"], ["mov~r15d,r12d", "jmp~FOO"]], [0, 0, 513, 0, 0, 2, 0, 1, 21, 6, 0.0024030985835854233, ["movzx   r15d, byte ptr [rbp+srcbase]", "jmp     loc_624E"], ["movzx~r15d,[yte ptr [rbp+0]", "jmp~FOO"]], [0, 0, 513, 0, 0, 2, 0, 1, 22, 6, 0.0012015492917927116, ["mov     r15d, eax", "jmp     loc_624E"], ["mov~r15d,eax", "jmp~FOO"]], [0, 0, 513, 0, 0, 2, 0, 1, 16, 6, 0.0012086172288032569, ["mov     r15d, r12d", "jmp     loc_624E"], ["mov~r15d,r12d", "jmp~FOO"]], [5, 0, 378, 0, 4, 17, 0, 5, 21, 5, 0.0010798237099444304, ["mov     rsi, [rbp+src_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     dst_mode_bits, rax", "mov     edx, 5; category", "lea     rsi, aCannotOpenSFor; \"cannot open %s for reading\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r12, rax", "call    ___errno_location", "mov     rcx, r13", "mov     rdx, r12; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     un_backup"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~dst_mode_bits,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r12,rax", "call~FOO", "mov~rcx,r13", "mov~rdx,r12", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [5, 0, 378, 0, 4, 17, 0, 5, 46, 9, 0.002046167764552882, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     [rbp+symlink_err], rax", "mov     edx, 5; category", "lea     rsi, aErrorDeallocat; \"error deallocating %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r13, rax", "call    ___errno_location", "mov     rcx, [rbp+symlink_err]", "mov     rdx, r13; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     loc_8BAC"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~[rbp+0],rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r13,rax", "call~FOO", "mov~rcx,[rbp+0]", "mov~rdx,r13", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [0, 0, 378, 1, 1, 7, 1, 1, 45, 10, 0.002470243985185604, ["mov     rdx, [rbp+restore_dst_mode_0]", "mov     rsi, [rbp+offset]; offset", "sub     rdx, rsi; length", "mov     edi, [rbp+fildes]; fd", "call    punch_hole", "test    eax, eax", "jns     short loc_8F1F"], ["mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "sub~rdx,rsi", "mov~edi,[rbp+0]", "call~FOO", "test~eax,eax", "jns~FOO"]], [0, 0, 378, 0, 1, 4, 1, 2, 18, 4, 0.0008646442942900493, ["call    ___errno_location", "mov     r13d, [rax]", "test    r13d, r13d", "jz      loc_6EE0"], ["call~FOO", "mov~r13d,<TAG>", "test~r13d,r13d", "jz~FOO"]], [1, 0, 378, 0, 0, 5, 0, 1, 40, 11, 0.024127580974998352, ["movzx   r15d, byte ptr [rbp+x]", "mov     rbx, [rbp+var_388]", "mov     r14d, [rbp+var_38C]", "cmp     [rbp+scan.hit_final_extent], 0", "jnz     loc_8DCF"], ["movzx~r15d,[yte ptr [rbp+0]", "mov~rbx,[rbp+0]", "mov~r14d,[rbp+0]", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 1, 521, 0, 0, 4, 1, 1, 26, 7, 0.0027824112031513575, ["mov     eax, [r12+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_6717"], ["mov~eax,[r12+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [1, 0, 523, 0, 1, 6, 1, 2, 25, 7, 0.0035068747467322573, ["lea     rdx, [rbp+timespec]; stat_buf", "mov     rsi, [rbp+src_name]; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jz      loc_9A54"], ["lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 381, 0, 0, 2, 0, 1, 14, 6, 0.0070545864628587755, ["cmp     byte ptr [x_0+22h], 0", "jz      loc_9D2D"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 17, 3, 0.018215840660428036, ["cmp     r13d, 16h", "jz      loc_7339"], ["cmp~r13d,0", "jz~FOO"]], [1, 1, 509, 0, 0, 4, 1, 1, 11, 5, 0.09357443749318449, ["mov     eax, [rbp+mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_9BD2"], ["mov~eax,[rbp+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 31, 8, 0.0031829276337489282, ["cmp     byte ptr [x_0+30h], 0", "jz      short loc_856E"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 65, 0, 1, 5, 0, 2, 25, 8, 7.656931761424142e-05, ["mov     edx, 0; backup_dst_name", "mov     rsi, [rbp+dst_name]; dst", "mov     rdi, [rbp+src_name]; src", "call    emit_verbose", "jmp     short loc_7A97"], ["mov~edx,0", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "jmp~FOO"]], [0, 1, 378, 0, 0, 2, 0, 1, 18, 3, 0.016550752499693722, ["cmp     r13d, 12h", "jnz     loc_73B3"], ["cmp~r13d,<STR>", "jnz~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 15, 6, 0.037999837774017185, ["cmp     [rbp+var_270], 1", "ja      short loc_A295"], ["cmp~[rbp+0],0", "ja~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 14, 6, 0.24230641032717593, ["cmp     byte ptr [x_0+17h], 0", "jz      loc_A26B"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 378, 0, 0, 2, 1, 1, 16, 7, 0.013057130134856237, ["test    r14b, r14b", "jz      short loc_A280"], ["test~r14b,r14b", "jz~FOO"]], [1, 0, 378, 0, 0, 1, 0, 0, 29, 12, 0.029558112578100704, ["mov     [rbp+ptr], 0"], ["mov~[rbp+0],0"]], [1, 0, 378, 0, 0, 2, 0, 1, 28, 12, 0.12476322411014673, ["cmp     byte ptr [rbp+parent], 0", "jz      loc_8F14"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [2, 0, 507, 0, 0, 3, 0, 1, 12, 5, 0.07854446944025978, ["mov     ecx, 0", "cmp     byte ptr [x_0+1Fh], 0", "jz      short loc_629C"], ["mov~ecx,0", "cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 17, 6, 2.886074279306023e-05, ["cmp     dword ptr [x_0+4], 3", "jz      short loc_A295"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [4, 0, 426, 1, 1, 27, 0, 2, 21, 5, 0.0038166859856944954, ["mov     r13, 0FFFFFFFFFFFFFFFFh", "mov     rcx, r13", "mov     rdi, [rbp+srcbase]", "mov     eax, 0", "repne scasb", "not     rcx", "lea     rsi, [rcx+r13]", "mov     [rbp+tmp_backup], rsi", "mov     rdi, [rbp+dst_name]; name", "call    last_component", "mov     rsi, rax; s2", "mov     rcx, r13", "mov     rdi, rax", "mov     eax, 0", "repne scasb", "not     rcx", "lea     r12, [rcx+r13]", "mov     rdi, cs:simple_backup_suffix", "mov     [rbp+s2], rdi", "mov     rcx, r13", "repne scasb", "mov     r13, rcx", "not     r13", "sub     r13, 1", "lea     rax, [r12+r13]", "cmp     [rbp+tmp_backup], rax", "jz      loc_6B9E"], ["mov~r13,0", "mov~rcx,r13", "mov~rdi,[rbp+0]", "mov~eax,0", "scasb~<TAG>,", "not~rcx", "lea~rsi,<TAG>", "mov~[rbp+0],rsi", "mov~rdi,[rbp+0]", "call~FOO", "mov~rsi,rax", "mov~rcx,r13", "mov~rdi,rax", "mov~eax,0", "scasb~<TAG>,", "not~rcx", "lea~r12,<TAG>", "mov~rdi,<TAG>", "mov~[rbp+0],rdi", "mov~rcx,r13", "scasb~<TAG>,", "mov~r13,rcx", "not~r13", "sub~r13,0", "lea~rax,<TAG>", "cmp~[rbp+0],rax", "jz~FOO"]], [2, 0, 506, 0, 0, 3, 0, 1, 13, 5, 0.00031334520746751103, ["mov     ecx, 1", "cmp     byte ptr [x_0+18h], 0", "jz      short loc_629C"], ["mov~ecx,0", "cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 1, 378, 0, 0, 4, 1, 1, 19, 5, 0.014936906882285866, ["mov     r12d, [rbp+mode]", "and     r12d, 0F000h", "cmp     r12d, 4000h", "jz      loc_7434"], ["mov~r12d,[rbp+0]", "and~r12d,<STR>", "cmp~r12d,0", "jz~FOO"]], [2, 0, 378, 0, 0, 5, 1, 1, 20, 7, 0.027979606645745572, ["mov     byte ptr [rbp+restore_dst_mode_0], r15b", "mov     dword ptr [rbp+srcbase], 0", "mov     rax, 0FF000000FF00h", "test    [x_0+20h], rax", "jnz     loc_7CAA"], ["mov~[yte ptr [rbp+0],r15b", "mov~[word ptr [rbp+0],0", "mov~rax,0", "test~[x_0+0],rax", "jnz~FOO"]], [1, 1, 378, 0, 0, 4, 1, 1, 19, 7, 0.02906806894536956, ["mov     eax, [rbp+dst_sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_7A72"], ["mov~eax,[rbp+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [0, 0, 505, 0, 0, 4, 0, 0, 14, 5, 0.0, ["mov     rax, [rbp+src_mode]", "cmp     [rbp+dst_sb.st_dev], rax", "setnz   cl", "movzx   ecx, cl; options"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "setnz~cl", "movzx~ecx,cl"]], [1, 0, 416, 0, 1, 7, 1, 2, 21, 4, 0.011475973726122152, ["mov     edx, [x_0]; backup_type", "mov     rsi, [rbp+dst_name]; file", "mov     edi, 0FFFFFF9Ch; dir_fd", "call    backup_file_rename", "mov     r13, rax", "test    tmp_backup_0, tmp_backup_0", "jz      loc_6D07"], ["mov~edx,<TAG>", "mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~r13,rax", "test~tmp_backup_0,tmp_backup_0", "jz~FOO"]], [0, 0, 425, 0, 1, 5, 1, 2, 22, 5, 0.0034114575970898946, ["mov     rdx, r12; n", "mov     rdi, [rbp+srcbase]; s1", "call    _memcmp", "test    eax, eax", "jnz     loc_6A85"], ["mov~rdx,r12", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 424, 1, 1, 6, 1, 2, 23, 5, 0.0030015172504782636, ["mov     rdi, [rbp+srcbase]", "add     rdi, r12; s1", "mov     rsi, [rbp+s2]; s2", "call    _strcmp", "test    eax, eax", "jnz     loc_6A85"], ["mov~rdi,[rbp+0]", "add~rdi,r12", "mov~rsi,[rbp+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 421, 0, 0, 3, 0, 1, 26, 5, 0.0017434244626011893, ["mov     rax, [rbp+timespec.tv_sec]", "cmp     [rbp+src_mode], rax", "jnz     loc_6A85"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jnz~FOO"]], [0, 0, 378, 0, 1, 4, 1, 2, 20, 4, 0.005587204206836109, ["mov     rdi, [rbp+dst_name]; name", "call    _unlink", "test    eax, eax", "jz      short loc_72B3"], ["mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 378, 0, 1, 8, 1, 2, 46, 11, 0.0017587383261240376, ["movzx   edx, dl; punch_holes", "mov     rcx, r15; size", "mov     rsi, [rbp+dst_name]; name", "mov     edi, [rbp+fildes]; fd", "call    create_hole", "mov     byte ptr [rbp+parent], al", "test    al, al", "jnz     loc_8CF4"], ["movzx~edx,dl", "mov~rcx,r15", "mov~rsi,[rbp+0]", "mov~edi,[rbp+0]", "call~FOO", "mov~[yte ptr [rbp+0],al", "test~al,al", "jnz~FOO"]], [2, 0, 378, 0, 0, 5, 0, 1, 45, 12, 0.006361143309490826, ["mov     eax, [rbp+var_394]", "cmp     eax, 3", "setz    dl", "cmp     eax, 1", "jz      loc_8BD0"], ["mov~eax,[rbp+0]", "cmp~eax,0", "setz~dl", "cmp~eax,0", "jz~FOO"]], [0, 0, 378, 0, 1, 4, 1, 2, 29, 7, 0.09761370739997298, ["mov     edi, [rbp+fildes]; fd", "call    _close", "test    eax, eax", "js      loc_925C"], ["mov~edi,[rbp+0]", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 64, 0, 0, 5, 2, 1, 21, 7, 0.02398857821379096, ["mov     rax, [rbp+parent]", "test    rax, rax", "setnz   r12b", "and     r12b, [x_0+1Ch]", "jnz     loc_7CFD"], ["mov~rax,[rbp+0]", "test~rax,rax", "setnz~r12b", "and~r12b,[x_0+0]", "jnz~FOO"]], [1, 0, 65, 0, 0, 2, 0, 1, 23, 8, 0.00014607069821793748, ["mov     dword ptr [rbp+srcbase], 0", "jmp     loc_7A97"], ["mov~[word ptr [rbp+0],0", "jmp~FOO"]], [1, 0, 378, 0, 1, 4, 0, 2, 21, 3, 0.0006325803624438099, ["call    ___errno_location", "mov     rename_errno, rax", "cmp     dword ptr [rax], 2", "jnz     loc_7465"], ["call~FOO", "mov~rename_errno,rax", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 378, 0, 1, 5, 0, 1, 16, 5, 0.023520874310539574, ["mov     rdx, [rbp+src_mode]; dev", "mov     rsi, [rbp+ino]; ino", "mov     rdi, [rbp+dst_name]; name", "call    remember_copied", "mov     [rbp+have_dst_lstat], rax"], ["mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],rax"]], [1, 0, 378, 0, 1, 6, 1, 2, 21, 8, 0.17202337759432554, ["lea     rdx, [rbp+dot_sb]; stat_buf", "mov     esi, dword ptr [rbp+dest_is_symlink]; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "jnz     loc_825C"], ["lea~rdx,[rbp+0]", "mov~esi,[word ptr [rbp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 17, 2, 7.067937010545362e-06, ["jmp     loc_5F54"], ["jmp~FOO"]], [1, 0, 378, 0, 1, 10, 1, 2, 16, 3, 0.14150441824595794, ["movzx   ecx, r15b; new_dst", "mov     r8, x_0; x", "mov     edx, [rbp+mode]; mode", "mov     rsi, [rbp+dst_name]; dst_name", "mov     rdi, [rbp+src_name]; src_name", "call    set_process_security_ctx", "mov     r12d, eax", "mov     dword ptr [rbp+srcbase], 0", "test    al, al", "jnz     loc_7589"], ["movzx~ecx,r15b", "mov~r8,x_0", "mov~edx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "mov~r12d,eax", "mov~[word ptr [rbp+0],0", "test~al,al", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 29, 2, 3.533968505272681e-06, ["mov     r12d, 0", "jmp     loc_5F54"], ["mov~r12d,0", "jmp~FOO"]], [1, 0, 378, 0, 0, 5, 1, 1, 21, 6, 0.004228982311309641, ["cmp     r12d, 4000h", "setnz   dl", "and     dl, [x_0+2Eh]", "mov     r15d, edx", "jnz     loc_74E7"], ["cmp~r12d,0", "setnz~dl", "and~dl,[x_0+0]", "mov~r15d,edx", "jnz~FOO"]], [0, 0, 383, 0, 0, 3, 1, 1, 14, 3, 0.0802761140078434, ["mov     rax, [rbp+ancestors]", "test    rax, rax", "jz      short loc_62CD"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [6, 0, 378, 0, 4, 18, 0, 5, 42, 9, 0.008422624937566556, ["mov     rdx, [rbp+src_name]; arg", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     [rbp+symlink_err], rax", "mov     edx, 5; category", "lea     rsi, aSFailedToGetEx; \"%s: failed to get extents info\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r13, rax", "call    ___errno_location", "mov     rcx, [rbp+symlink_err]", "mov     rdx, r13; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     loc_8BAC"], ["mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~[rbp+0],rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r13,rax", "call~FOO", "mov~rcx,[rbp+0]", "mov~rdx,r13", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 0, 382, 0, 0, 1, 0, 0, 15, 3, 0.0, ["mov     byte ptr [rax], 1"], ["mov~<TAG>,0"]], [1, 0, 378, 0, 0, 2, 0, 1, 22, 5, 0.0013122803049579223, ["mov     r15d, 1", "jmp     loc_9D52"], ["mov~r15d,0", "jmp~FOO"]], [1, 0, 463, 0, 0, 2, 0, 1, 16, 3, 0.0018788932553033088, ["cmp     byte ptr [x_0+18h], 0", "jz      short loc_9C86"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 1, 467, 0, 0, 4, 1, 1, 15, 4, 0.04425117563352275, ["mov     eax, [rbp+mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_67C2"], ["mov~eax,[rbp+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [1, 0, 378, 0, 1, 6, 1, 2, 44, 11, 0.013874360351700546, ["mov     edx, 0; whence", "mov     rsi, rbx; offset", "mov     edi, dword ptr [rbp+dest_is_symlink]; fd", "call    _lseek", "test    rax, rax", "js      short loc_8B39"], ["mov~edx,0", "mov~rsi,rbx", "mov~edi,[word ptr [rbp+0]", "call~FOO", "test~rax,rax", "js~FOO"]], [0, 0, 378, 2, 0, 6, 0, 1, 43, 12, 0.024556369153638104, ["mov     r15, rbx", "sub     r15, rcx", "movzx   eax, [rbp+var_3AE]", "mov     byte ptr [rbp+parent], al", "sub     r15, rdx", "jnz     loc_8ACE"], ["mov~r15,rbx", "sub~r15,rcx", "movzx~eax,[rbp+0]", "mov~[yte ptr [rbp+0],al", "sub~r15,rdx", "jnz~FOO"]], [0, 0, 381, 0, 1, 7, 1, 2, 15, 2, 0.0814305437195658, ["mov     rdx, [rbp+src_mode]; dev", "mov     rsi, [rbp+ino]; ino", "mov     r15, [rbp+dst_name]", "mov     rdi, r15; name", "call    remember_copied", "test    earlier_file_0, earlier_file_0", "jz      loc_5F54"], ["mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~r15,[rbp+0]", "mov~rdi,r15", "call~FOO", "test~earlier_file_0,earlier_file_0", "jz~FOO"]], [0, 0, 378, 0, 0, 5, 1, 1, 46, 16, 0.006457738448634946, ["mov     rax, [rbp+dev]", "lea     rsi, [rbx+rax]", "mov     [rbp+offset], rsi", "test    rax, rax", "jz      loc_8C6F"], ["mov~rax,[rbp+0]", "lea~rsi,<TAG>", "mov~[rbp+0],rsi", "test~rax,rax", "jz~FOO"]], [0, 0, 378, 0, 0, 3, 0, 1, 47, 16, 0.0, ["movzx   eax, [rbp+var_2F9]", "mov     byte ptr [rbp+parent], al", "jmp     loc_8C6F"], ["movzx~eax,[rbp+0]", "mov~[yte ptr [rbp+0],al", "jmp~FOO"]], [2, 0, 378, 0, 1, 13, 2, 2, 22, 6, 0.0032076654132858367, ["mov     r12d, dword ptr [rbp+srcbase]", "not     r12d", "and     r12d, [rbp+mode]", "mov     [rbp+dev], 0", "lea     rcx, [rbp+dev]; dev", "mov     edx, r12d; mode", "mov     rsi, [rbp+dst_name]; path", "mov     edi, 0; ver", "call    ___xmknod", "movzx   esi, byte ptr [rbp+symlink_err]", "mov     byte ptr [rbp+dest_is_symlink], sil", "test    eax, eax", "jz      loc_7613"], ["mov~r12d,[word ptr [rbp+0]", "not~r12d", "and~r12d,[rbp+0]", "mov~[rbp+0],0", "lea~rcx,[rbp+0]", "mov~edx,r12d", "mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "movzx~esi,[yte ptr [rbp+0]", "mov~[yte ptr [rbp+0],sil", "test~eax,eax", "jz~FOO"]], [6, 0, 412, 1, 2, 19, 2, 3, 22, 10, 0.010599549536814528, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, __old", "repne scasb", "not     rcx", "mov     rdx, rcx; n", "lea     rax, [rcx+1Eh]", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rdi, [rsp+3D0h+var_3C1]", "and     rdi, 0FFFFFFFFFFFFFFF0h; dest", "mov     rsi, __old; src", "call    _memcpy", "mov     [rbp+tmp_backup], rax", "mov     rdi, __old; ptr", "call    free", "mov     r15d, 1", "mov     r13d, 11h", "jmp     loc_6E77"], ["mov~rcx,0", "mov~eax,0", "mov~rdi,__old", "scasb~<TAG>,", "not~rcx", "mov~rdx,rcx", "lea~rax,[rcx+0]", "and~rax,0", "sub~rsp,rax", "lea~rdi,[rsp+0]", "and~rdi,0", "mov~rsi,__old", "call~FOO", "mov~[rbp+0],rax", "mov~rdi,__old", "call~FOO", "mov~r15d,0", "mov~r13d,0", "jmp~FOO"]], [1, 0, 7, 0, 0, 4, 1, 1, 19, 2, 0.006579306965216327, ["mov     r12d, 0", "mov     rax, [rbp+tmp_backup]", "test    rax, rax", "jz      loc_5F54"], ["mov~r12d,0", "mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 378, 0, 1, 9, 1, 2, 17, 2, 0.003170079133969039, ["movzx   ecx, byte ptr [x_0+2Eh]; verbose", "mov     r8d, dword ptr [rbp+symlink_err]; dereference", "mov     edx, 1; replace", "mov     rsi, [rbp+dst_name]; dst_name", "mov     rdi, [rbp+have_dst_lstat]; src_name", "call    create_hard_link", "mov     r12d, eax", "test    al, al", "jnz     loc_5F54"], ["movzx~ecx,[yte ptr [x_0+0]", "mov~r8d,[word ptr [rbp+0]", "mov~edx,0", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "mov~r12d,eax", "test~al,al", "jnz~FOO"]], [0, 0, 540, 0, 0, 1, 0, 1, 23, 7, 0.0006573181419807187, ["jmp     loc_6608"], ["jmp~FOO"]], [5, 0, 378, 1, 2, 14, 2, 3, 25, 11, 0.14675393212895688, ["cmp     byte ptr [x_0+23h], 1", "sbb     esi, esi", "and     esi, 0FFFFFE00h", "add     esi, 201h; flags", "mov     rdi, [rbp+dst_name]; file", "mov     eax, 0", "call    open_safer", "mov     [rbp+fildes], eax", "call    ___errno_location", "mov     [rbp+ptr], rax", "mov     r13d, [rax]", "mov     rax, 0FF000000FF00h", "test    [x_0+20h], rax", "jz      short loc_8349"], ["cmp~[yte ptr [x_0+0],0", "sbb~esi,esi", "and~esi,0", "add~esi,0", "mov~rdi,[rbp+0]", "mov~eax,0", "call~FOO", "mov~[rbp+0],eax", "call~FOO", "mov~[rbp+0],rax", "mov~r13d,<TAG>", "mov~rax,0", "test~[x_0+0],rax", "jz~FOO"]], [1, 0, 380, 0, 1, 9, 1, 2, 16, 2, 0.08195121507934265, ["movzx   ecx, byte ptr [x_0+2Eh]; verbose", "mov     r8d, dword ptr [rbp+symlink_err]; dereference", "mov     edx, 1; replace", "mov     rsi, r15; dst_name", "mov     rdi, earlier_file_0; src_name", "call    create_hard_link", "mov     r12d, eax", "test    al, al", "jnz     loc_5F54"], ["movzx~ecx,[yte ptr [x_0+0]", "mov~r8d,[word ptr [rbp+0]", "mov~edx,0", "mov~rsi,r15", "mov~rdi,earlier_file_0", "call~FOO", "mov~r12d,eax", "test~al,al", "jnz~FOO"]], [4, 0, 10, 0, 3, 13, 0, 4, 13, 5, 0.0, ["mov     edx, 5; category", "lea     rsi, aRenamed; \"renamed \"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     rdx, [rbp+tmp_backup]; backup_dst_name", "mov     rsi, [rbp+dst_name]; dst", "mov     rdi, [rbp+src_name]; src", "call    emit_verbose", "jmp     loc_6EEA"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "jmp~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 12, 5, 0.010045541074137947, ["cmp     byte ptr [x_0+2Eh], 0", "jnz     loc_72D4"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 26, 11, 0.0037248028045574057, ["cmp     [rbp+fildes], 0", "js      short loc_8349"], ["cmp~[rbp+0],0", "js~FOO"]], [1, 0, 378, 0, 1, 8, 2, 2, 23, 6, 0.002335953181985242, ["mov     esi, r12d", "and     esi, 0FFFFEFFFh; mode", "mov     rdi, [rbp+dst_name]; path", "call    _mkfifo", "movzx   esi, byte ptr [rbp+symlink_err]", "mov     byte ptr [rbp+dest_is_symlink], sil", "test    eax, eax", "jz      loc_7613"], ["mov~esi,r12d", "and~esi,0", "mov~rdi,[rbp+0]", "call~FOO", "movzx~esi,[yte ptr [rbp+0]", "mov~[yte ptr [rbp+0],sil", "test~eax,eax", "jz~FOO"]], [0, 0, 379, 0, 0, 3, 1, 1, 17, 2, 0.08250958210317573, ["movzx   r12d, byte ptr [x_0+25h]", "test    r12b, r12b", "jz      loc_5F54"], ["movzx~r12d,[yte ptr [x_0+0]", "test~r12b,r12b", "jz~FOO"]], [2, 0, 8, 0, 1, 6, 0, 2, 14, 4, 0.0, ["mov     rcx, x_0; x", "mov     edx, 1; recurse", "mov     esi, 0; process_local", "mov     rdi, [rbp+dst_name]; dst_name", "call    set_file_security_ctx", "jmp     loc_6EF4"], ["mov~rcx,x_0", "mov~edx,0", "mov~esi,0", "mov~rdi,[rbp+0]", "call~FOO", "jmp~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 13, 4, 0.007590610952475191, ["cmp     byte ptr [x_0+21h], 0", "jnz     loc_731B"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [3, 0, 55, 1, 0, 11, 1, 1, 27, 8, 0.001288720514922771, ["movzx   eax, byte ptr [rbp+dev]", "or      byte ptr [rbp+symlink_err], al", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, r13", "repne scasb", "mov     rsi, rcx", "not     rsi", "add     r13, rsi", "cmp     byte ptr [r13+0], 0", "jnz     loc_7BBB"], ["movzx~eax,[yte ptr [rbp+0]", "or~[yte ptr [rbp+0],al", "mov~rcx,0", "mov~eax,0", "mov~rdi,r13", "scasb~<TAG>,", "mov~rsi,rcx", "not~rsi", "add~r13,rsi", "cmp~[yte ptr [r13+0],0", "jnz~FOO"]], [5, 1, 55, 1, 5, 34, 2, 6, 26, 8, 0.003981604515940554, ["mov     edx, 0; base_in_result", "mov     rsi, r13; base", "mov     rdi, [rbp+src_name]; dir", "call    file_name_concat", "mov     rbx, rax", "mov     edx, 0; base_in_result", "mov     rsi, r13; base", "mov     rdi, [rbp+dst_name]; dir", "call    file_name_concat", "mov     r14, rax", "mov     rax, qword ptr [rbp+fildes]", "movzx   eax, byte ptr [rax]", "mov     byte ptr [rbp+dev], al", "push    0; rename_succeeded", "push    [rbp+restore_dst_mode]; copy_into_self", "push    [rbp+parent]; first_dir_created_per_command_line_arg", "push    0; command_line_arg", "mov     r9, [rbp+have_dst_lstat]; x", "mov     r8, [rbp+ancestors]; ancestors", "mov     rcx, [rbp+dest_is_symlink]; parent", "mov     edx, dword ptr [rbp+s2]; new_dst", "mov     rsi, r14; dst_name", "mov     rdi, rbx; src_name", "call    copy_internal", "and     r12d, eax", "movzx   eax, [rbp+var_2F9]", "or      [r15], al", "add     rsp, 20h", "mov     rdi, r14; ptr", "call    free", "mov     rdi, rbx; ptr", "call    free", "cmp     [rbp+var_2F9], 0", "jnz     loc_7D81"], ["mov~edx,0", "mov~rsi,r13", "mov~rdi,[rbp+0]", "call~FOO", "mov~rbx,rax", "mov~edx,0", "mov~rsi,r13", "mov~rdi,[rbp+0]", "call~FOO", "mov~r14,rax", "mov~rax,[word ptr [rbp+0]", "movzx~eax,<TAG>", "mov~[yte ptr [rbp+0],al", "push~0", "push~[rbp+0]", "push~[rbp+0]", "push~0", "mov~r9,[rbp+0]", "mov~r8,[rbp+0]", "mov~rcx,[rbp+0]", "mov~edx,[word ptr [rbp+0]", "mov~rsi,r14", "mov~rdi,rbx", "call~FOO", "and~r12d,eax", "movzx~eax,[rbp+0]", "or~<TAG>,al", "add~rsp,<STR>", "mov~rdi,r14", "call~FOO", "mov~rdi,rbx", "call~FOO", "cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 378, 0, 1, 8, 1, 2, 27, 10, 0.0026563663264632985, ["movzx   esi, byte ptr [x_0+25h]; process_local", "mov     rcx, x_0; x", "mov     edx, 0; recurse", "mov     rdi, [rbp+dst_name]; dst_name", "call    set_file_security_ctx", "mov     byte ptr [rbp+symlink_err], al", "test    al, al", "jnz     short loc_8349"], ["movzx~esi,[yte ptr [x_0+0]", "mov~rcx,x_0", "mov~edx,0", "mov~rdi,[rbp+0]", "call~FOO", "mov~[yte ptr [rbp+0],al", "test~al,al", "jnz~FOO"]], [0, 0, 518, 0, 0, 36, 0, 0, 27, 6, 0.0012651607248876197, ["mov     rax, [r12]", "mov     rdx, [r12+8]", "mov     [rbp+dot_sb.st_dev], rax", "mov     [rbp+dot_sb.st_ino], rdx", "mov     rax, [r12+10h]", "mov     rdx, [r12+18h]", "mov     [rbp+dot_sb.st_nlink], rax", "mov     qword ptr [rbp+dot_sb.st_mode], rdx", "mov     rax, [r12+20h]", "mov     rdx, [r12+28h]", "mov     qword ptr [rbp+dot_sb.st_gid], rax", "mov     [rbp+dot_sb.st_rdev], rdx", "mov     rax, [r12+30h]", "mov     rdx, [r12+38h]", "mov     [rbp+dot_sb.st_size], rax", "mov     [rbp+dot_sb.st_blksize], rdx", "mov     rax, [r12+40h]", "mov     rdx, [r12+48h]", "mov     [rbp+dot_sb.st_blocks], rax", "mov     [rbp+dot_sb.st_atim.tv_sec], rdx", "mov     rax, [r12+50h]", "mov     rdx, [r12+58h]", "mov     [rbp+dot_sb.st_atim.tv_nsec], rax", "mov     [rbp+dot_sb.st_mtim.tv_sec], rdx", "mov     rax, [r12+60h]", "mov     rdx, [r12+68h]", "mov     [rbp+dot_sb.st_mtim.tv_nsec], rax", "mov     [rbp+dot_sb.st_ctim.tv_sec], rdx", "mov     rax, [r12+70h]", "mov     rdx, [r12+78h]", "mov     [rbp+dot_sb.st_ctim.tv_nsec], rax", "mov     [rbp+dot_sb.__glibc_reserved], rdx", "mov     rax, [r12+80h]", "mov     rdx, [r12+88h]", "mov     [rbp+dot_sb.__glibc_reserved+8], rax", "mov     [rbp+dot_sb.__glibc_reserved+10h], rdx"], ["mov~rax,<TAG>", "mov~rdx,[r12+0]", "mov~[rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,[r12+0]", "mov~rdx,[r12+0]", "mov~[rbp+0],rax", "mov~[word ptr [rbp+0],rdx", "mov~rax,[r12+0]", "mov~rdx,[r12+0]", "mov~[word ptr [rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,[r12+0]", "mov~rdx,[r12+0]", "mov~[rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,[r12+0]", "mov~rdx,[r12+0]", "mov~[rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,[r12+0]", "mov~rdx,[r12+0]", "mov~[rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,[r12+0]", "mov~rdx,[r12+0]", "mov~[rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,[r12+0]", "mov~rdx,[r12+0]", "mov~[rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,[r12+0]", "mov~rdx,[r12+0]", "mov~[rbp+0],rax", "mov~[rbp+0],rdx"]], [1, 0, 59, 0, 0, 2, 0, 1, 23, 9, 0.011492465579146759, ["cmp     dword ptr [x_0+4], 3", "jz      loc_7D63"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [1, 0, 61, 0, 1, 26, 1, 2, 22, 7, 0.014138230000094239, ["mov     rax, [x_0]", "mov     rdx, [x_0+8]", "mov     qword ptr [rbp+scan.fd], rax", "mov     [rbp+scan.scan_start], rdx", "mov     rax, [x_0+10h]", "mov     rdx, [x_0+18h]", "mov     qword ptr [rbp+scan.fm_flags], rax", "mov     [rbp+scan.ei_count], rdx", "mov     rax, [x_0+20h]", "mov     rdx, [x_0+28h]", "mov     qword ptr [rbp+scan.initial_scan_failed], rax", "mov     [rbp+scan.ext_info], rdx", "mov     rax, [x_0+30h]", "mov     rdx, [x_0+38h]", "mov     [rbp+var_2C0], rax", "mov     [rbp+var_2B8], rdx", "mov     rax, [x_0+40h]", "mov     rdx, [x_0+48h]", "mov     [rbp+var_2B0], rax", "mov     [rbp+var_2A8], rdx", "mov     esi, 2; option", "mov     rdi, [rbp+src_name]; dir", "call    savedir", "mov     [rbp+tmp_backup], rax", "test    rax, rax", "jz      loc_7D12"], ["mov~rax,<TAG>", "mov~rdx,[x_0+0]", "mov~[word ptr [rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,[x_0+0]", "mov~rdx,[x_0+0]", "mov~[word ptr [rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,[x_0+0]", "mov~rdx,[x_0+0]", "mov~[word ptr [rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,[x_0+0]", "mov~rdx,[x_0+0]", "mov~[rbp+0],rax", "mov~[rbp+0],rdx", "mov~rax,[x_0+0]", "mov~rdx,[x_0+0]", "mov~[rbp+0],rax", "mov~[rbp+0],rdx", "mov~esi,0", "mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],rax", "test~rax,rax", "jz~FOO"]], [0, 0, 378, 0, 0, 4, 0, 1, 41, 12, 0.014746072583001141, ["mov     rsi, [rbp+offset]", "cmp     [rbp+restore_dst_mode_0], rsi", "setnle  r13b", "jg      short loc_8DF0"], ["mov~rsi,[rbp+0]", "cmp~[rbp+0],rsi", "setnle~r13b", "jg~FOO"]], [0, 0, 378, 0, 0, 3, 0, 0, 42, 13, 0.0016538972604676148, ["movzx   r15d, byte ptr [rbp+x]", "mov     rbx, [rbp+var_388]", "mov     r14d, [rbp+var_38C]"], ["movzx~r15d,[yte ptr [rbp+0]", "mov~rbx,[rbp+0]", "mov~r14d,[rbp+0]"]], [0, 0, 590, 0, 0, 3, 1, 1, 15, 7, 0.0018847832028120967, ["movzx   r12d, byte ptr [x_0+17h]", "test    r12b, r12b", "jnz     loc_9BCA"], ["movzx~r12d,[yte ptr [x_0+0]", "test~r12b,r12b", "jnz~FOO"]], [1, 0, 29, 0, 0, 2, 0, 1, 25, 2, 0.03551284950948517, ["cmp     byte ptr [rbp+dest_is_symlink], 0", "jnz     loc_5F54"], ["cmp~[yte ptr [rbp+0],0", "jnz~FOO"]], [1, 0, 38, 0, 0, 2, 0, 1, 24, 3, 0.047013561015144235, ["cmp     byte ptr [rbx+1Fh], 0", "jz      short loc_7730"], ["cmp~[yte ptr [rbx+0],0", "jz~FOO"]], [1, 0, 588, 0, 0, 2, 0, 1, 16, 7, 0.0018258837277242185, ["cmp     dword ptr [x_0+4], 2", "jz      loc_63F1"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [1, 0, 519, 0, 1, 6, 1, 2, 27, 6, 0.0022923675704202124, ["lea     rdx, [rbp+dot_sb]; stat_buf", "mov     rsi, [rbp+dst_name]; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jz      loc_9B46"], ["lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 378, 0, 0, 3, 0, 1, 26, 10, 0.14279785071888773, ["mov     [rbp+var_318], 0", "cmp     [rbp+fildes], 0", "js      loc_83EF"], ["mov~[rbp+0],0", "cmp~[rbp+0],0", "js~FOO"]], [9, 0, 3, 0, 4, 23, 0, 5, 20, 2, 2.8271748042181448e-05, ["mov     rdx, [rbp+dst_name]; arg", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     r12, rax", "mov     rdx, [rbp+src_name]; arg", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     x_0, rax", "mov     edx, 5; category", "lea     rsi, aCannotMoveDire; \"cannot move directory onto non-director\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8, r12", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     r12d, r15d", "jmp     loc_5F54"], ["mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~r12,rax", "mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~x_0,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8,r12", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~r12d,r15d", "jmp~FOO"]], [3, 0, 57, 0, 0, 6, 0, 1, 24, 8, 0.00920716594573709, ["mov     rax, [rbp+tmp_backup]", "mov     r13, rax", "mov     byte ptr [rbp+symlink_err], 0", "mov     r12d, 1", "cmp     byte ptr [rax], 0", "jz      loc_7D72"], ["mov~rax,[rbp+0]", "mov~r13,rax", "mov~[yte ptr [rbp+0],0", "mov~r12d,0", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 58, 0, 0, 2, 0, 1, 24, 9, 0.0, ["mov     dword ptr [rbp+scan+4], 2", "jmp     loc_7B47"], ["mov~[word ptr [rbp+0],0", "jmp~FOO"]], [1, 0, 453, 0, 0, 1, 0, 0, 20, 8, 0.0004853316747241149, ["mov     r12d, 1"], ["mov~r12d,0"]], [5, 0, 378, 0, 4, 17, 0, 5, 24, 5, 0.0018482655282576121, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     dst_mode_bits, rax", "mov     edx, 5; category", "lea     rsi, aCannotCreateFi; \"cannot create fifo %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r12, rax", "call    ___errno_location", "mov     rcx, r13", "mov     rdx, r12; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     un_backup"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~dst_mode_bits,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r12,rax", "call~FOO", "mov~rcx,r13", "mov~rdx,r12", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 0, 576, 0, 1, 6, 1, 2, 17, 7, 0.0026716801899861467, ["lea     rdx, [rbp+dot_sb]; stat_buf", "mov     rsi, [rbp+dst_name]; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jz      loc_645B"], ["lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 378, 0, 1, 6, 1, 2, 27, 9, 0.13591446539695104, ["lea     rdx, [rbp+timespec]; stat_buf", "mov     esi, [rbp+fildes]; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "jnz     loc_85C2"], ["lea~rdx,[rbp+0]", "mov~esi,[rbp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 378, 0, 0, 3, 0, 0, 28, 8, 0.014083257156678887, ["mov     r15d, 1", "cmp     [rbp+fildes], 0", "jns     loc_8360"], ["mov~r15d,0", "cmp~[rbp+0],0", "jns~FOO"]], [0, 0, 574, 0, 0, 1, 0, 0, 15, 6, 0.0073294506799355405, ["mov     byte ptr [rbp+srcbase], r15b"], ["mov~[yte ptr [rbp+0],r15b"]], [1, 0, 452, 0, 0, 7, 1, 1, 19, 7, 0.00272822368607051, ["mov     rsi, [rbp+srcbase]", "cmp     byte ptr [rsi+1], 2Eh ; '.'", "setz    al", "movzx   eax, al", "movzx   eax, byte ptr [rsi+rax+1]", "test    al, al", "jz      loc_67DC"], ["mov~rsi,[rbp+0]", "cmp~[yte ptr [rsi+0],0", "setz~al", "movzx~eax,al", "movzx~eax,[yte ptr [rsi+0]", "test~al,al", "jz~FOO"]], [0, 0, 6, 0, 1, 5, 1, 2, 20, 3, 0.003767210426620678, ["mov     rsi, [rbp+dst_name]; new", "mov     rdi, rax; old", "call    _rename", "test    eax, eax", "jnz     loc_98B2"], ["mov~rsi,[rbp+0]", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 451, 0, 0, 2, 0, 1, 20, 7, 0.0009471035594130785, ["cmp     al, 2Fh ; '/'", "jz      loc_67DC"], ["cmp~al,0", "jz~FOO"]], [1, 0, 515, 0, 0, 2, 0, 1, 30, 3, 0.00029685335444290523, ["cmp     byte ptr [x_0+17h], 0", "jz      loc_6555"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 379, 0, 0, 2, 0, 1, 13, 6, 0.007210414840782939, ["cmp     byte ptr [x_0+22h], 0", "jnz     loc_A317"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 1, 573, 0, 0, 4, 1, 1, 16, 5, 0.010199033106216957, ["mov     eax, [rbp+var_268]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      short loc_63FA"], ["mov~eax,[rbp+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [1, 0, 574, 0, 0, 2, 0, 1, 17, 6, 0.0002944973754393901, ["mov     byte ptr [rbp+srcbase], 1", "jmp     short loc_6387"], ["mov~[yte ptr [rbp+0],0", "jmp~FOO"]], [5, 0, 378, 0, 4, 19, 0, 4, 45, 10, 0.005908795340815923, ["movzx   r15d, byte ptr [rbp+x]", "mov     rbx, [rbp+var_388]", "mov     r14d, [rbp+var_38C]", "mov     rsi, [rbp+src_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     [rbp+symlink_err], rax", "mov     edx, 5; category", "lea     rsi, aCannotLseekS; \"cannot lseek %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r13, rax", "call    ___errno_location", "mov     rcx, [rbp+symlink_err]", "mov     rdx, r13; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error"], ["movzx~r15d,[yte ptr [rbp+0]", "mov~rbx,[rbp+0]", "mov~r14d,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~[rbp+0],rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r13,rax", "call~FOO", "mov~rcx,[rbp+0]", "mov~rdx,r13", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO"]], [0, 0, 564, 0, 0, 2, 0, 0, 17, 7, 0.008399065147531404, ["lea     r12, [rbp+dst_sb]", "lea     r13, [rbp+src_mode]"], ["lea~r12,[rbp+0]", "lea~r13,[rbp+0]"]], [3, 0, 47, 0, 0, 5, 0, 1, 24, 6, 0.0007350654490967176, ["mov     byte ptr [rbp+restore_dst_mode], r12b", "mov     byte ptr [rbp+dest_is_symlink], 0", "mov     byte ptr [rbp+symlink_err], 0", "mov     dword ptr [rbp+ancestors], 4000h", "jmp     loc_7649"], ["mov~[yte ptr [rbp+0],r12b", "mov~[yte ptr [rbp+0],0", "mov~[yte ptr [rbp+0],0", "mov~[word ptr [rbp+0],0", "jmp~FOO"]], [0, 0, 49, 0, 0, 2, 1, 1, 23, 5, 0.006707472223007549, ["test    r14b, r14b", "jnz     loc_964E"], ["test~r14b,r14b", "jnz~FOO"]], [0, 0, 378, 0, 1, 2, 0, 1, 46, 9, 0.012555012109732078, ["mov     rdi, [rbp+scan.ext_info]; ptr", "call    free"], ["mov~rdi,[rbp+0]", "call~FOO"]], [0, 0, 378, 0, 0, 4, 0, 1, 47, 10, 0.0010849283311187132, ["movzx   r15d, byte ptr [rbp+x]", "mov     rbx, [rbp+var_388]", "mov     r14d, [rbp+var_38C]", "jmp     short loc_8BA0"], ["movzx~r15d,[yte ptr [rbp+0]", "mov~rbx,[rbp+0]", "mov~r14d,[rbp+0]", "jmp~FOO"]], [0, 0, 378, 0, 0, 4, 0, 1, 46, 10, 0.0021698566622374263, ["movzx   r15d, byte ptr [rbp+x]", "mov     rbx, [rbp+var_388]", "mov     r14d, [rbp+var_38C]", "jmp     short loc_8BA0"], ["movzx~r15d,[yte ptr [rbp+0]", "mov~rbx,[rbp+0]", "mov~r14d,[rbp+0]", "jmp~FOO"]], [6, 0, 378, 0, 4, 21, 0, 5, 47, 10, 0.0010849283311187132, ["movzx   r15d, byte ptr [rbp+x]", "mov     rbx, [rbp+var_388]", "mov     r14d, [rbp+var_38C]", "mov     rdx, [rbp+dst_name]; arg", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     [rbp+symlink_err], rax", "mov     edx, 5; category", "lea     rsi, aSWriteFailed; \"%s: write failed\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r13, rax", "call    ___errno_location", "mov     rcx, [rbp+symlink_err]", "mov     rdx, r13; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     loc_8BA0"], ["movzx~r15d,[yte ptr [rbp+0]", "mov~rbx,[rbp+0]", "mov~r14d,[rbp+0]", "mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~[rbp+0],rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r13,rax", "call~FOO", "mov~rcx,[rbp+0]", "mov~rdx,r13", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 0, 574, 0, 1, 6, 1, 2, 18, 7, 0.0013688238010422852, ["lea     rdx, [rbp+timespec]; stat_buf", "mov     rsi, [rbp+src_name]; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jnz     loc_9BA5"], ["lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 563, 0, 0, 2, 0, 1, 18, 6, 0.01586162864116555, ["cmp     dword ptr [x_0], 0", "jz      loc_65C2"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 564, 0, 0, 3, 0, 1, 18, 7, 0.00011544297117224092, ["lea     r12, [rbp+dst_sb]", "lea     r13, [rbp+src_mode]", "jmp     short loc_63A7"], ["lea~r12,[rbp+0]", "lea~r13,[rbp+0]", "jmp~FOO"]], [0, 0, 564, 0, 0, 3, 0, 1, 21, 7, 0.0006219784569279919, ["lea     r12, [rbp+dot_sb]", "lea     r13, [rbp+timespec]", "jmp     loc_63A7"], ["lea~r12,[rbp+0]", "lea~r13,[rbp+0]", "jmp~FOO"]], [0, 0, 564, 0, 0, 3, 0, 1, 22, 7, 0.00012368889768454383, ["lea     r12, [rbp+dot_sb]", "lea     r13, [rbp+timespec]", "jmp     loc_63A7"], ["lea~r12,[rbp+0]", "lea~r13,[rbp+0]", "jmp~FOO"]], [0, 0, 564, 0, 0, 3, 0, 1, 23, 7, 0.00012015492917927115, ["lea     r12, [rbp+dot_sb]", "lea     r13, [rbp+timespec]", "jmp     loc_63A7"], ["lea~r12,[rbp+0]", "lea~r13,[rbp+0]", "jmp~FOO"]], [11, 0, 3, 0, 4, 25, 0, 5, 18, 2, 5.8310480336999236e-05, ["mov     rdx, cs:top_level_dst_name; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     r12, rax", "mov     rdx, cs:top_level_src_name; arg", "mov     esi, 4; s", "mov     edi, 0; n", "call    quotearg_n_style", "mov     x_0, rax", "mov     edx, 5; category", "lea     rsi, aCannotMoveSToA; \"cannot move %s to a subdirectory of its\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8, r12", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     rax, [rbp+ptr]", "mov     byte ptr [rax], 1", "mov     r12d, 1", "jmp     loc_5F54"], ["mov~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~r12,rax", "mov~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~x_0,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8,r12", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rax,[rbp+0]", "mov~<TAG>,0", "mov~r12d,0", "jmp~FOO"]], [0, 0, 378, 0, 0, 2, 0, 1, 39, 8, 0.05574364121266951, ["mov     byte ptr [rbp+symlink_err], r12b", "jmp     loc_8625"], ["mov~[yte ptr [rbp+0],r12b", "jmp~FOO"]], [5, 0, 378, 0, 4, 17, 0, 5, 44, 9, 0.005713249083524168, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     [rbp+symlink_err], rax", "mov     edx, 5; category", "lea     rsi, aFailedToExtend; \"failed to extend %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r13, rax", "call    ___errno_location", "mov     rcx, [rbp+symlink_err]", "mov     rdx, r13; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     loc_8BAC"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~[rbp+0],rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r13,rax", "call~FOO", "mov~rcx,[rbp+0]", "mov~rdx,r13", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [0, 0, 55, 0, 0, 12, 0, 0, 25, 9, 0.005136034227662963, ["lea     rax, [rbp+scan]", "mov     [rbp+have_dst_lstat], rax", "lea     rax, [rbp+src_mode]", "mov     [rbp+dest_is_symlink], rax", "lea     rax, [rbp+var_2F9]", "mov     [rbp+restore_dst_mode], rax", "lea     rax, [rbp+dev]", "mov     [rbp+parent], rax", "mov     byte ptr [rbp+var_318], r15b", "mov     [rbp+x], x_0", "mov     dword ptr [rbp+var_388], r14d", "mov     r15, [rbp+ptr]"], ["lea~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "lea~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~[yte ptr [rbp+0],r15b", "mov~[rbp+0],x_0", "mov~[word ptr [rbp+0],r14d", "mov~r15,[rbp+0]"]], [1, 0, 525, 0, 0, 2, 0, 1, 19, 5, 0.0019095209823490054, ["cmp     byte ptr [rbp+srcbase], 0", "jnz     loc_652C"], ["cmp~[yte ptr [rbp+0],0", "jnz~FOO"]], [0, 0, 521, 0, 0, 3, 1, 1, 20, 6, 0.0023724708565397265, ["movzx   eax, byte ptr [x_0+18h]", "test    al, al", "jnz     loc_9BB5"], ["movzx~eax,[yte ptr [x_0+0]", "test~al,al", "jnz~FOO"]], [1, 0, 378, 0, 1, 8, 0, 1, 30, 17, 0.08736205742934419, ["call    _getpagesize", "cdqe", "mov     [rbp+restore_dst_mode_0], rax", "mov     r13, [rbp+var_98]", "lea     rdx, [r13-20000h]", "mov     rax, 1FFFFFFFFFFE0000h", "cmp     rdx, rax", "jbe     loc_872E"], ["call~FOO", "cdqe~", "mov~[rbp+0],rax", "mov~r13,[rbp+0]", "lea~rdx,[r13-20000h]+0]", "mov~rax,0", "cmp~rdx,rax", "jbe~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 31, 9, 0.00332193039495632, ["cmp     dword ptr [x_0+38h], 2", "jnz     loc_8396"], ["cmp~[word ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 519, 0, 0, 2, 0, 1, 21, 5, 0.0008575763572795039, ["cmp     dword ptr [x_0+4], 2", "jz      loc_9BC2"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [3, 0, 378, 2, 1, 15, 1, 2, 45, 11, 0.01023201681226617, ["sub     rsp, 8", "push    [rbp+last_write_made_hole]; last_write_made_hole", "push    qword ptr [rbp-3C8h]; total_n_read", "push    rax; max_n_read", "push    [rbp+dst_name]; dst_name", "push    [rbp+src_name]; src_name", "mov     r9d, 1; punch_holes", "mov     rcx, [rbp+symlink_err]; buf_size", "mov     rdx, [rbp+buf]; buf", "mov     esi, [rbp+fildes]; dest_fd", "mov     edi, dword ptr [rbp+dest_is_symlink]; src_fd", "call    sparse_copy", "add     rsp, 30h", "test    al, al", "jz      loc_8BB8"], ["sub~rsp,0", "push~[rbp+0]", "push~[word ptr [rbp-3C8h]+0]", "push~rax", "push~[rbp+0]", "push~[rbp+0]", "mov~r9d,0", "mov~rcx,[rbp+0]", "mov~rdx,[rbp+0]", "mov~esi,[rbp+0]", "mov~edi,[word ptr [rbp+0]", "call~FOO", "add~rsp,0", "test~al,al", "jz~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 27, 10, 0.007430757777086691, ["cmp     r13d, 11h", "jnz     short loc_9F59"], ["cmp~r13d,0", "jnz~FOO"]], [3, 0, 378, 0, 2, 15, 1, 2, 26, 10, 0.020430264592148622, ["mov     eax, [rbp+var_318]", "not     eax", "and     eax, [rbp+var_398]", "mov     dword ptr [rbp+symlink_err], eax", "mov     edx, eax", "mov     esi, 0C1h; flags", "mov     rdi, [rbp+dst_name]; file", "mov     eax, 0", "call    open_safer", "mov     [rbp+fildes], eax", "call    ___errno_location", "mov     r15, rax", "mov     r13d, [rax]", "cmp     [rbp+fildes], 0", "jns     short loc_9F59"], ["mov~eax,[rbp+0]", "not~eax", "and~eax,[rbp+0]", "mov~[word ptr [rbp+0],eax", "mov~edx,eax", "mov~esi,0", "mov~rdi,[rbp+0]", "mov~eax,0", "call~FOO", "mov~[rbp+0],eax", "call~FOO", "mov~r15,rax", "mov~r13d,<TAG>", "cmp~[rbp+0],0", "jns~FOO"]], [0, 0, 42, 0, 0, 4, 0, 1, 24, 4, 0.0005725028978541744, ["movzx   r12d, byte ptr [rbp+restore_dst_mode]", "movzx   eax, byte ptr [rbp+restore_dst_mode_0]", "mov     byte ptr [rbp+restore_dst_mode], al", "jmp     loc_7689"], ["movzx~r12d,[yte ptr [rbp+0]", "movzx~eax,[yte ptr [rbp+0]", "mov~[yte ptr [rbp+0],al", "jmp~FOO"]], [1, 0, 46, 0, 0, 2, 0, 1, 23, 5, 0.005741520831566349, ["cmp     qword ptr [rbx+40h], 0", "jz      loc_968E"], ["cmp~[word ptr [rbx+0],0", "jz~FOO"]], [1, 0, 491, 0, 0, 2, 0, 1, 12, 4, 0.015607182908785917, ["cmp     byte ptr [x_0+18h], 0", "jz      loc_677A"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 378, 0, 1, 3, 0, 2, 24, 5, 0.009601105268283183, ["mov     rdi, [rbp+ptr]; ptr", "call    free", "jmp     un_backup"], ["mov~rdi,[rbp+0]", "call~FOO", "jmp~FOO"]], [1, 1, 378, 0, 0, 7, 0, 0, 31, 16, 0.0428788178639752, ["lea     rdx, [r13-1]", "mov     rax, 1FFFFFFFFFFFFFFFh", "cmp     rdx, rax", "mov     ecx, 200h", "cmovbe  rcx, r13", "mov     [rbp+symlink_err], rcx", "mov     r13, rcx"], ["lea~rdx,[r13-1]+0]", "mov~rax,0", "cmp~rdx,rax", "mov~ecx,<STR>", "cmovbe~rcx,r13", "mov~[rbp+0],rcx", "mov~r13,rcx"]], [0, 0, 378, 0, 1, 5, 1, 2, 46, 11, 0.002997983281972991, ["mov     rsi, r15; n_bytes", "mov     edi, [rbp+fildes]; fd", "call    write_zeros", "test    al, al", "jz      short loc_8BFE"], ["mov~rsi,r15", "mov~edi,[rbp+0]", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 490, 0, 0, 3, 0, 1, 12, 3, 0.0037295147625644363, ["mov     eax, [x_0+8]", "cmp     eax, 2", "jz      short loc_9C34"], ["mov~eax,[x_0+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 497, 0, 0, 2, 0, 1, 11, 4, 0.01990213263219398, ["cmp     byte ptr [x_0+18h], 0", "jnz     loc_9BDC"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 1, 517, 0, 0, 4, 1, 1, 22, 4, 0.0005348072337979324, ["mov     edx, [r13+18h]", "and     edx, 0F000h", "cmp     edx, 0A000h", "jz      loc_6511"], ["mov~edx,[r13+0]", "and~edx,<STR>", "cmp~edx,0", "jz~FOO"]], [1, 0, 489, 0, 0, 2, 0, 1, 13, 4, 0.003590512001357044, ["cmp     eax, 3", "jz      short loc_9C16"], ["cmp~eax,0", "jz~FOO"]], [2, 1, 378, 0, 0, 7, 0, 1, 31, 16, 0.0428788178639752, ["lea     rdx, [r13-1]", "mov     [rbp+symlink_err], 20000h", "mov     rax, 1FFFFFFFFFFFFFFFh", "cmp     rdx, rax", "mov     eax, 200h", "cmova   r13, rax", "jmp     loc_8752"], ["lea~rdx,[r13-1]+0]", "mov~[rbp+0],0", "mov~rax,0", "cmp~rdx,rax", "mov~eax,<STR>", "cmova~r13,rax", "jmp~FOO"]], [9, 0, 3, 0, 4, 22, 0, 5, 22, 2, 0.0, ["mov     rdx, [rbp+dst_name]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     r12, rax", "mov     rdx, [rbp+tmp_backup]; arg", "mov     esi, 4; s", "mov     edi, 0; n", "call    quotearg_n_style", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aSSUnbackup; \"%s -> %s (unbackup)\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rbx", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     r12d, 0", "jmp     loc_5F54"], ["mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~r12,rax", "mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,r12", "mov~rdx,rbx", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~r12d,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 21, 2, 0.0012616267563823472, ["movzx   r12d, byte ptr [rbx+2Eh]", "test    r12b, r12b", "jz      loc_5F54"], ["movzx~r12d,[yte ptr [rbx+0]", "test~r12b,r12b", "jz~FOO"]], [0, 0, 378, 0, 1, 5, 1, 2, 32, 7, 0.0032182673188016547, ["mov     rsi, r13; s2", "mov     rdi, dest_link_val; s1", "call    _strcmp", "test    eax, eax", "jz      loc_A3DE"], ["mov~rsi,r13", "mov~rdi,dest_link_val", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 27, 9, 0.014142156631766765, ["cmp     byte ptr [x_0+16h], 0", "jnz     short loc_8418"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 0, 487, 0, 0, 2, 0, 1, 15, 4, 0.0003439729345132076, ["cmp     byte ptr [x_0+2Fh], 0", "jz      loc_677A"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 488, 0, 0, 2, 0, 1, 14, 4, 0.002365402919529181, ["cmp     eax, 4", "jnz     loc_677A"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 28, 8, 0.004380550293869114, ["cmp     r13d, 2", "jnz     loc_9FB0"], ["cmp~r13d,0", "jnz~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 29, 8, 0.002264095822378031, ["cmp     byte ptr [x_0+18h], 0", "jnz     loc_9FB0"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [1, 1, 571, 0, 0, 4, 1, 1, 17, 4, 0.002886074279306023, ["mov     eax, [rbp+dst_sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      short loc_641C"], ["mov~eax,[rbp+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [0, 0, 486, 0, 1, 5, 1, 2, 16, 4, 1.4135874021090724e-05, ["mov     esi, [rbp+dst_sb.st_mode]; mode", "mov     rdi, [rbp+dst_name]; file", "call    writable_destination", "test    al, al", "jnz     loc_677A"], ["mov~esi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 30, 11, 0.0014536390451688295, ["mov     [rbp+var_318], 0", "jmp     loc_9F03"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 378, 0, 1, 7, 1, 2, 35, 8, 0.0008693562522970796, ["mov     edx, [rbx+10h]; mode", "mov     esi, [rbp+fildes]; desc", "mov     rdi, [rbp+dst_name]; name", "call    set_acl", "test    eax, eax", "setz    byte ptr [rbp+symlink_err]", "jmp     loc_8625"], ["mov~edx,[rbx+0]", "mov~esi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "setz~[yte ptr [rbp+0]", "jmp~FOO"]], [0, 0, 378, 0, 1, 6, 1, 2, 25, 6, 0.02711731833045904, ["mov     rsi, [rbp+size]; size", "mov     rdi, [rbp+src_name]; file", "call    areadlink_with_size", "mov     dst_mode_bits, rax", "test    src_link_val, src_link_val", "jz      loc_94ED"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "mov~dst_mode_bits,rax", "test~src_link_val,src_link_val", "jz~FOO"]], [0, 0, 378, 0, 1, 4, 1, 2, 28, 8, 0.008157184636503853, ["mov     rdi, [rbp+dst_name]; name", "call    _unlink", "test    eax, eax", "jz      short loc_8480"], ["mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 485, 0, 1, 6, 1, 2, 14, 3, 0.0017257546200748258, ["lea     rdx, [rbp+dst_sb]; dst_sb", "mov     rsi, [rbp+dst_name]; dst_name", "mov     rdi, x_0; x", "call    overwrite_ok", "test    al, al", "jnz     loc_677A"], ["lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rdi,x_0", "call~FOO", "test~al,al", "jnz~FOO"]], [9, 0, 3, 0, 5, 26, 0, 6, 19, 2, 7.067937010545362e-06, ["mov     rdx, [rbp+dst_name]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     r12, rax", "mov     rdx, [rbp+src_name]; arg", "mov     esi, 4; s", "mov     edi, 0; n", "call    quotearg_n_style", "mov     x_0, rax", "mov     edx, 5; category", "lea     rsi, aCannotMoveSToS; \"cannot move %s to %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8, r12", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, r13d; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     rsi, [rbp+src_mode]; dev", "mov     rdi, [rbp+ino]; ino", "call    forget_created", "mov     r12d, 0", "jmp     loc_5F54"], ["mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~r12,rax", "mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~x_0,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8,r12", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,r13d", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "mov~r12d,0", "jmp~FOO"]], [0, 0, 521, 0, 1, 5, 1, 2, 18, 3, 0.003847313712740192, ["mov     rsi, [rbp+dst_name]; dest", "mov     rdi, [rbp+src_name]; source", "call    same_name", "test    al, al", "jnz     loc_6555"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~al,al", "jnz~FOO"]], [5, 0, 378, 0, 5, 19, 0, 6, 24, 5, 0.047191437429909625, ["mov     rsi, [rbp+src_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     r13, rax", "mov     edx, 5; category", "lea     rsi, aFailedToCloseS; \"failed to close %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r12, rax", "call    ___errno_location", "mov     rcx, r13", "mov     rdx, r12; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     rdi, [rbp+ptr]; ptr", "call    free", "jmp     un_backup"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~r13,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r12,rax", "call~FOO", "mov~rcx,r13", "mov~rdx,r12", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rdi,[rbp+0]", "call~FOO", "jmp~FOO"]], [0, 0, 378, 0, 1, 4, 1, 2, 30, 6, 0.09546112791709467, ["mov     edi, dword ptr [rbp+dest_is_symlink]; fd", "call    _close", "test    eax, eax", "js      loc_81B4"], ["mov~edi,[word ptr [rbp+0]", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 520, 0, 0, 2, 0, 1, 19, 6, 0.004759077587100544, ["cmp     dword ptr [x_0], 0", "jnz     loc_9B90"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 518, 0, 0, 2, 0, 1, 20, 5, 0.0002992093334464203, ["cmp     byte ptr [rbp+srcbase], 0", "jz      loc_9B98"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 0, 378, 0, 1, 5, 1, 2, 20, 4, 0.007745280974055959, ["mov     rdi, [rbp+dst_name]; path", "call    _rmdir", "mov     r15d, 1", "test    eax, eax", "jz      loc_9D52"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~r15d,0", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 7, 1, 0.003062772704569657, ["mov     eax, r12d", "mov     rcx, [rbp+var_38]", "xor     rcx, fs:28h", "jnz     loc_A449"], ["mov~eax,r12d", "mov~rcx,[rbp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 378, 0, 1, 5, 1, 2, 43, 10, 0.004448088358636548, ["mov     rsi, [rbp+restore_dst_mode_0]; length", "mov     edi, [rbp+fildes]; fd", "call    _ftruncate", "test    eax, eax", "jz      short loc_8E88"], ["mov~rsi,[rbp+0]", "mov~edi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 42, 11, 0.008187027037215045, ["cmp     [rbp+var_394], 1", "jz      short loc_8E65"], ["cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 62, 0, 0, 1, 0, 1, 23, 8, 2.8271748042181448e-05, ["jmp     loc_7AAF"], ["jmp~FOO"]], [1, 0, 516, 0, 0, 3, 1, 1, 21, 4, 3.533968505272681e-05, ["movzx   r12d, byte ptr [x_0+18h]", "xor     r12d, 1", "jmp     loc_654C"], ["movzx~r12d,[yte ptr [x_0+0]", "xor~r12d,0", "jmp~FOO"]], [0, 0, 378, 0, 0, 2, 1, 1, 28, 7, 0.007576828475304628, ["test    r15b, r15b", "jnz     short loc_949B"], ["test~r15b,r15b", "jnz~FOO"]], [2, 0, 378, 0, 1, 5, 0, 2, 21, 3, 0.0006325803624438099, ["call    ___errno_location", "mov     rename_errno, rax", "mov     r15d, 1", "cmp     dword ptr [rax], 2", "jz      loc_9D52"], ["call~FOO", "mov~rename_errno,rax", "mov~r15d,0", "cmp~<TAG>,0", "jz~FOO"]], [1, 1, 378, 0, 0, 4, 1, 1, 29, 7, 0.006490722154684158, ["mov     eax, [rbp+dst_sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     short loc_949B"], ["mov~eax,[rbp+0]", "and~eax,<STR>", "cmp~eax,0", "jnz~FOO"]], [1, 1, 480, 0, 0, 4, 1, 1, 14, 5, 0.047779254191286646, ["mov     eax, [rbp+dst_sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_9C61"], ["mov~eax,[rbp+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 27, 4, 0.0013193482419684675, ["cmp     byte ptr [x_0+18h], 0", "jnz     short loc_6C9A"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [2, 0, 378, 1, 0, 8, 0, 1, 35, 16, 0.00867746333311349, ["mov     rax, 7FFFFFFFFFFFFFFFh", "sub     rax, [rbp+restore_dst_mode_0]", "mov     [rbp+ptr], rax", "mov     rdi, [rbp+dot_sb.st_blksize]", "lea     rdx, [rdi-20000h]", "mov     rax, 1FFFFFFFFFFE0000h", "cmp     rdx, rax", "ja      loc_88C0"], ["mov~rax,0", "sub~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rdi,[rbp+0]", "lea~rdx,[rdi-20000h]+0]", "mov~rax,0", "cmp~rdx,rax", "ja~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 29, 10, 0.005414039750077747, ["cmp     byte ptr [x_0+2Eh], 0", "jz      short loc_84C5"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [0, 0, 572, 0, 0, 3, 0, 1, 19, 9, 0.0012580927878770745, ["mov     rsi, [rbp+dot_sb.st_ino]", "cmp     [rbp+timespec.tv_nsec], rsi", "jz      short loc_64B9"], ["mov~rsi,[rbp+0]", "cmp~[rbp+0],rsi", "jz~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 30, 11, 0.03498039825469076, ["cmp     byte ptr [rbx+1Fh], 0", "jz      short loc_8F7E"], ["cmp~[yte ptr [rbx+0],0", "jz~FOO"]], [3, 0, 378, 1, 0, 10, 0, 1, 30, 7, 0.0054022598550601715, ["mov     rsi, [rbp+dst_sb.st_size]; size", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, src_link_val", "repne scasb", "mov     rax, rcx", "not     rax", "sub     rax, 1", "cmp     rsi, rax", "jz      loc_953B"], ["mov~rsi,[rbp+0]", "mov~rcx,0", "mov~eax,0", "mov~rdi,src_link_val", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "sub~rax,0", "cmp~rsi,rax", "jz~FOO"]], [2, 0, 4, 0, 1, 6, 0, 2, 28, 3, 0.00022617398433745159, ["mov     edx, 5; category", "lea     rsi, aBackingUpSMigh; \"backing up %s might destroy source;  %s\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     x_0, rax", "jmp     short loc_6CB3"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~x_0,rax", "jmp~FOO"]], [0, 0, 378, 0, 1, 2, 0, 1, 28, 6, 0.005583670238330836, ["mov     rdi, r13; ptr", "call    free"], ["mov~rdi,r13", "call~FOO"]], [0, 0, 378, 0, 1, 5, 1, 2, 31, 7, 0.004311441576432671, ["mov     rdi, [rbp+dst_name]; file", "call    areadlink_with_size", "mov     r12, rax", "test    dest_link_val, dest_link_val", "jz      loc_949B"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~r12,rax", "test~dest_link_val,dest_link_val", "jz~FOO"]], [1, 0, 378, 1, 0, 7, 0, 0, 48, 14, 0.0025597711873191786, ["add     [rbp+var_3AC], 1", "mov     eax, [rbp+var_3AC]", "mov     eax, eax", "mov     rcx, rbx", "mov     rdx, r14", "cmp     rax, [rbp+scan.ei_count]", "jnb     loc_8D8A"], ["add~[rbp+0],0", "mov~eax,[rbp+0]", "mov~eax,eax", "mov~rcx,rbx", "mov~rdx,r14", "cmp~rax,[rbp+0]", "jnb~FOO"]], [2, 1, 570, 0, 0, 6, 2, 1, 20, 8, 0.003689463119504679, ["and     eax, 1", "mov     byte ptr [rbp+srcbase], al", "mov     eax, dword ptr [rbp+timespec.tv_nsec+10h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      short loc_64CF"], ["and~eax,0", "mov~[yte ptr [rbp+0],al", "mov~eax,[word ptr [rbp+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [0, 0, 571, 0, 0, 5, 0, 1, 20, 9, 0.0, ["mov     rax, [rbp+dot_sb.st_dev]", "cmp     [rbp+timespec.tv_sec], rax", "setz    al", "movzx   eax, al", "jmp     short loc_648B"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "setz~al", "movzx~eax,al", "jmp~FOO"]], [0, 0, 51, 0, 0, 4, 0, 1, 28, 7, 0.00012015492917927115, ["movzx   r15d, byte ptr [rbp+var_318]", "mov     rbx, [rbp+x]", "mov     r14d, dword ptr [rbp+var_388]", "jmp     loc_7D97"], ["movzx~r15d,[yte ptr [rbp+0]", "mov~rbx,[rbp+0]", "mov~r14d,[word ptr [rbp+0]", "jmp~FOO"]], [2, 0, 4, 0, 1, 5, 0, 1, 28, 3, 0.00022617398433745159, ["mov     edx, 5; category", "lea     rsi, aBackingUpSMigh_0; \"backing up %s might destroy source;  %s\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     x_0, rax"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~x_0,rax"]], [0, 0, 378, 0, 0, 9, 0, 1, 42, 13, 0.0252725867707067, ["lea     rsi, [rax+rax*2]", "mov     rax, [rbp+scan.ext_info]", "lea     rax, [rax+rsi*8]", "mov     rbx, [rax]", "mov     r14, [rax+8]", "lea     rax, [rbx+r14]", "mov     rsi, [rbp+restore_dst_mode_0]", "cmp     rsi, rax", "jge     short loc_8CD8"], ["lea~rsi,<TAG>", "mov~rax,[rbp+0]", "lea~rax,<TAG>", "mov~rbx,<TAG>", "mov~r14,[rax+0]", "lea~rax,<TAG>", "mov~rsi,[rbp+0]", "cmp~rsi,rax", "jge~FOO"]], [1, 0, 378, 0, 0, 4, 0, 1, 29, 9, 0.0012439569138559838, ["mov     rsi, [rbp+dst_name]", "mov     rdi, rsi", "cmp     byte ptr [rsi], 0", "jz      short loc_9F9D"], ["mov~rsi,[rbp+0]", "mov~rdi,rsi", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 28, 9, 0.0024855578487084523, ["cmp     r13d, 15h", "jnz     short loc_9F9D"], ["cmp~r13d,0", "jnz~FOO"]], [5, 0, 378, 0, 3, 13, 0, 3, 30, 10, 0.0, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     r13, rax", "mov     edx, 5; category", "lea     rsi, aRemovedS; \"removed %s\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, r13", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~r13,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,r13", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO"]], [0, 0, 378, 0, 0, 3, 0, 1, 22, 7, 0.005463201178617763, ["mov     rax, [rbp+timespec.tv_nsec]", "cmp     [rbp+dot_sb.st_ino], rax", "jz      short loc_7E78"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [1, 0, 378, 0, 1, 6, 1, 2, 21, 8, 0.006203292716255313, ["lea     rdx, [rbp+timespec]; stat_buf", "mov     rsi, r12; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jnz     loc_75D4"], ["lea~rdx,[rbp+0]", "mov~rsi,r12", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [6, 0, 3, 0, 3, 16, 0, 4, 17, 2, 4.594159056854485e-05, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     x_0, rax", "mov     edx, 5; category", "lea     rsi, aCannotOverwrit_0; \"cannot overwrite directory %s with non-\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     r12d, r15d", "jmp     loc_5F54"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~x_0,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~r12d,r15d", "jmp~FOO"]], [0, 0, 378, 0, 0, 4, 1, 1, 22, 5, 0.002714087812049419, ["movzx   eax, byte ptr [x_0+26h]", "mov     byte ptr [rbp+restore_dst_mode_0], al", "test    al, al", "jnz     un_backup"], ["movzx~eax,[yte ptr [x_0+0]", "mov~[yte ptr [rbp+0],al", "test~al,al", "jnz~FOO"]], [0, 0, 378, 1, 0, 4, 0, 0, 43, 13, 0.0, ["cmp     rbx, rsi", "cmovg   rbx, rsi", "sub     rsi, rbx", "mov     r14, rsi"], ["cmp~rbx,rsi", "cmovg~rbx,rsi", "sub~rsi,rbx", "mov~r14,rsi"]], [0, 0, 378, 0, 1, 2, 0, 1, 23, 6, 0.0012426218590873253, ["mov     rdi, r12; ptr", "call    free"], ["mov~rdi,r12", "call~FOO"]], [5, 0, 378, 0, 3, 15, 0, 4, 29, 5, 0.006851186942221971, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     r12, rax", "mov     edx, 5; category", "lea     rsi, aCannotCreateSy_0; \"cannot create symbolic link %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "mov     esi, dword ptr [rbp+symlink_err]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     un_backup"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~r12,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "mov~esi,[word ptr [rbp+0]", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [0, 0, 378, 0, 2, 5, 0, 3, 33, 6, 0.0007374214281002328, ["mov     rdi, dest_link_val; ptr", "call    free", "mov     rdi, r13; ptr", "call    free", "jmp     loc_94A3"], ["mov~rdi,dest_link_val", "call~FOO", "mov~rdi,r13", "call~FOO", "jmp~FOO"]], [5, 0, 378, 0, 4, 17, 0, 5, 24, 5, 0.0021374619509390933, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     dst_mode_bits, rax", "mov     edx, 5; category", "lea     rsi, aCannotCreateSp; \"cannot create special file %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r12, rax", "call    ___errno_location", "mov     rcx, r13", "mov     rdx, r12; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     un_backup"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~dst_mode_bits,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r12,rax", "call~FOO", "mov~rcx,r13", "mov~rdx,r12", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 0, 378, 0, 1, 13, 2, 2, 23, 6, 0.002883129305551629, ["mov     rax, [rbp+var_258]", "mov     qword ptr [rbp+scan.fd], rax", "lea     rcx, [rbp+scan]; dev", "mov     edx, dword ptr [rbp+srcbase]", "not     edx", "and     edx, [rbp+mode]; mode", "mov     rsi, [rbp+dst_name]; path", "mov     edi, 0; ver", "call    ___xmknod", "movzx   esi, byte ptr [rbp+symlink_err]", "mov     byte ptr [rbp+dest_is_symlink], sil", "test    eax, eax", "jz      loc_7613"], ["mov~rax,[rbp+0]", "mov~[word ptr [rbp+0],rax", "lea~rcx,[rbp+0]", "mov~edx,[word ptr [rbp+0]", "not~edx", "and~edx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "movzx~esi,[yte ptr [rbp+0]", "mov~[yte ptr [rbp+0],sil", "test~eax,eax", "jz~FOO"]], [7, 0, 3, 0, 3, 18, 0, 4, 29, 2, 2.5915769038666328e-05, ["mov     rdx, [rbp+src_name]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     r12, rax", "mov     rdx, [rbp+dst_name]; arg", "mov     esi, 4; s", "mov     edi, 0; n", "call    quotearg_n_style", "mov     r8, r12", "mov     rcx, rax", "mov     rdx, fmt; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     r12d, r15d", "jmp     loc_5F54"], ["mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~r12,rax", "mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~r8,r12", "mov~rcx,rax", "mov~rdx,fmt", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~r12d,r15d", "jmp~FOO"]], [2, 0, 378, 0, 0, 4, 0, 0, 44, 12, 0.009393288287014787, ["mov     rax, r14", "cmp     [rbp+var_394], 3", "mov     r8d, 0", "cmovz   r8, r13; hole_size"], ["mov~rax,r14", "cmp~[rbp+0],0", "mov~r8d,0", "cmovz~r8,r13"]], [0, 0, 63, 0, 0, 3, 0, 1, 22, 6, 0.0076310159923854756, ["mov     rsi, [rbp+src_mode]", "cmp     [rax], rsi", "jnz     loc_7DB4"], ["mov~rsi,[rbp+0]", "cmp~<TAG>,rsi", "jnz~FOO"]], [1, 1, 397, 0, 0, 4, 1, 1, 11, 8, 0.0005795708348647197, ["mov     eax, [rbp+mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_6ECD"], ["mov~eax,[rbp+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [1, 0, 398, 0, 0, 2, 0, 1, 10, 8, 0.0010224948875255625, ["cmp     byte ptr [x_0+18h], 0", "jz      loc_9CF8"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 414, 0, 1, 4, 0, 2, 22, 3, 0.0009753753074552599, ["call    ___errno_location", "mov     r12, rax", "cmp     dword ptr [rax], 2", "jnz     short loc_6D2C"], ["call~FOO", "mov~r12,rax", "cmp~<TAG>,0", "jnz~FOO"]], [1, 1, 515, 0, 0, 4, 1, 1, 23, 3, 0.00020261419430230037, ["mov     edx, [r12+18h]", "and     edx, 0F000h", "cmp     edx, 0A000h", "jnz     short loc_6555"], ["mov~edx,[r12+0]", "and~edx,<STR>", "cmp~edx,0", "jnz~FOO"]], [2, 0, 412, 0, 0, 4, 0, 1, 23, 10, 0.0009635954124376844, ["mov     [rbp+tmp_backup], tmp_backup_0", "mov     r15d, 1", "mov     r13d, 11h", "jmp     loc_6E77"], ["mov~[rbp+0],tmp_backup_0", "mov~r15d,0", "mov~r13d,0", "jmp~FOO"]], [0, 0, 396, 0, 1, 5, 0, 2, 12, 8, 0.0, ["mov     rdx, [rbp+tmp_backup]; backup_dst_name", "mov     rsi, [rbp+dst_name]; dst", "mov     rdi, [rbp+src_name]; src", "call    emit_verbose", "jmp     loc_6ECD"], ["mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "jmp~FOO"]], [4, 0, 378, 0, 3, 13, 0, 4, 22, 5, 0.0013122803049579223, ["mov     edx, 5; category", "lea     rsi, aCopied; \"copied \"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     rdx, [rbp+tmp_backup]; backup_dst_name", "mov     rsi, [rbp+dst_name]; dst", "mov     rdi, [rbp+src_name]; src", "call    emit_verbose", "jmp     loc_9D52"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "jmp~FOO"]], [5, 0, 378, 0, 4, 17, 0, 5, 26, 5, 0.0007115056590615665, ["mov     rsi, [rbp+src_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     src_link_val, rax", "mov     edx, 5; category", "lea     rsi, aCannotReadSymb; \"cannot read symbolic link %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r12, rax", "call    ___errno_location", "mov     rcx, r13", "mov     rdx, r12; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     un_backup"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~src_link_val,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r12,rax", "call~FOO", "mov~rcx,r13", "mov~rdx,r12", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 1, 378, 0, 0, 4, 1, 1, 30, 9, 0.003958044725905403, ["mov     eax, dword ptr [rbp+timespec.tv_nsec+10h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     loc_9F59"], ["mov~eax,[word ptr [rbp+0]", "and~eax,<STR>", "cmp~eax,0", "jnz~FOO"]], [1, 0, 378, 0, 1, 6, 1, 2, 29, 10, 0.0049640477604063595, ["lea     rdx, [rbp+timespec]; stat_buf", "mov     rsi, [rbp+dst_name]; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jnz     loc_9F59"], ["lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 516, 0, 1, 6, 1, 1, 20, 4, 0.00043939008415557, ["mov     rsi, [rbp+dst_name]; dest", "mov     rdi, [rbp+src_name]; source", "call    same_name", "xor     eax, 1", "mov     r12d, eax", "mov     byte ptr [rbp+srcbase], r15b"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "xor~eax,0", "mov~r12d,eax", "mov~[yte ptr [rbp+0],r15b"]], [1, 0, 378, 0, 0, 1, 0, 0, 14, 5, 0.005158357128721269, ["mov     [rbp+have_dst_lstat], 0"], ["mov~[rbp+0],0"]], [9, 0, 3, 0, 5, 26, 0, 6, 22, 2, 3.533968505272681e-05, ["mov     rdx, [rbp+dst_name]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     r12, rax", "mov     rdx, [rbp+src_name]; arg", "mov     esi, 4; s", "mov     edi, 0; n", "call    quotearg_n_style", "mov     x_0, rax", "mov     edx, 5; category", "lea     rsi, aInterDeviceMov; \"inter-device move failed: %s to %s; una\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8, r12", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, [r13+0]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     rsi, [rbp+src_mode]; dev", "mov     rdi, [rbp+ino]; ino", "call    forget_created", "mov     r12d, 0", "jmp     loc_5F54"], ["mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~r12,rax", "mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~x_0,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8,r12", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,[r13+0]", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "mov~r12d,0", "jmp~FOO"]], [0, 0, 515, 0, 0, 2, 1, 1, 21, 3, 0.005828692054696409, ["test    r12b, r12b", "jnz     loc_673C"], ["test~r12b,r12b", "jnz~FOO"]], [1, 0, 516, 0, 2, 10, 1, 3, 27, 4, 6.596741209842338e-05, ["mov     rsi, [rbp+dst_name]; dest", "mov     r13, rax", "mov     rdi, rax; source", "call    same_name", "xor     eax, 1", "mov     r12d, eax", "mov     rdi, r13; ptr", "call    free", "mov     byte ptr [rbp+srcbase], r15b", "jmp     loc_654C"], ["mov~rsi,[rbp+0]", "mov~r13,rax", "mov~rdi,rax", "call~FOO", "xor~eax,0", "mov~r12d,eax", "mov~rdi,r13", "call~FOO", "mov~[yte ptr [rbp+0],r15b", "jmp~FOO"]], [1, 0, 516, 0, 0, 3, 1, 1, 24, 4, 0.000653784173475446, ["movzx   r12d, byte ptr [x_0+18h]", "xor     r12d, 1", "jmp     loc_654C"], ["movzx~r12d,[yte ptr [x_0+0]", "xor~r12d,0", "jmp~FOO"]], [1, 0, 378, 0, 0, 5, 0, 1, 47, 12, 0.0003086332494604808, ["mov     rax, r14", "movzx   esi, [rbp+var_3AE]", "mov     byte ptr [rbp+parent], sil", "mov     r8d, 0", "jmp     loc_8D08"], ["mov~rax,r14", "movzx~esi,[rbp+0]", "mov~[yte ptr [rbp+0],sil", "mov~r8d,0", "jmp~FOO"]], [0, 0, 378, 0, 1, 11, 1, 2, 15, 2, 0.16840653752760423, ["movzx   eax, r15b", "mov     dword ptr [rbp+s2], eax", "mov     r8, x_0; x", "mov     ecx, eax; new_dst", "mov     edx, [rbp+mode]; mode", "mov     rsi, [rbp+dst_name]; dst_name", "mov     rdi, [rbp+src_name]; src_name", "call    set_process_security_ctx", "mov     r12d, eax", "test    al, al", "jz      loc_5F54"], ["movzx~eax,r15b", "mov~[word ptr [rbp+0],eax", "mov~r8,x_0", "mov~ecx,eax", "mov~edx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "mov~r12d,eax", "test~al,al", "jz~FOO"]], [6, 0, 50, 0, 4, 18, 0, 5, 23, 6, 0.00023559790035151208, ["mov     rsi, [rbp+src_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     r13, rax", "mov     edx, 5; category", "lea     rsi, aCannotAccessS; \"cannot access %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r12, rax", "call    ___errno_location", "mov     rcx, r13", "mov     rdx, r12; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     r12d, 0", "jmp     short loc_7DB4"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~r13,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r12,rax", "call~FOO", "mov~rcx,r13", "mov~rdx,r12", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~r12d,0", "jmp~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 12, 5, 0.09889481024945106, ["mov     [rbp+have_dst_lstat], 0", "jmp     loc_9D52"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 15, 5, 0.20283879763396884, ["mov     [rbp+have_dst_lstat], 0", "jmp     loc_9D52"], ["mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 378, 0, 1, 8, 0, 2, 32, 10, 0.0004170082836221764, ["mov     edx, dword ptr [rbp+symlink_err]", "mov     esi, 41h ; 'A'; flags", "mov     rdi, [rbp+dst_name]; file", "mov     eax, 0", "call    open_safer", "mov     [rbp+fildes], eax", "mov     r13d, [r15]", "jmp     loc_9F59"], ["mov~edx,[word ptr [rbp+0]", "mov~esi,0", "mov~rdi,[rbp+0]", "mov~eax,0", "call~FOO", "mov~[rbp+0],eax", "mov~r13d,<TAG>", "jmp~FOO"]], [5, 0, 3, 0, 3, 16, 0, 4, 23, 2, 0.00010130709715115019, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     x_0, rax", "mov     edx, 5; category", "lea     rsi, aCannotBackupS; \"cannot backup %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, [r12]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     r12d, r15d", "jmp     loc_5F54"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~x_0,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~r12d,r15d", "jmp~FOO"]], [1, 0, 425, 0, 0, 2, 0, 1, 21, 6, 0.0032090397343712204, ["cmp     dword ptr [x_0+4], 2", "jz      short loc_6D9B"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [2, 0, 51, 0, 0, 3, 0, 1, 25, 7, 0.0016374054074430088, ["mov     byte ptr [rbp+symlink_err], 0", "mov     r12d, 1", "jmp     short loc_7D97"], ["mov~[yte ptr [rbp+0],0", "mov~r12d,0", "jmp~FOO"]], [2, 1, 378, 0, 0, 8, 2, 1, 16, 9, 0.16784858280009674, ["mov     esi, r13d", "and     esi, 3Fh", "mov     dword ptr [rbp+srcbase], esi", "mov     eax, [rbp+mode]", "and     eax, 0F000h", "mov     dword ptr [rbp+ancestors], eax", "cmp     eax, 4000h", "jz      loc_9E1D"], ["mov~esi,r13d", "and~esi,0", "mov~[word ptr [rbp+0],esi", "mov~eax,[rbp+0]", "and~eax,<STR>", "mov~[word ptr [rbp+0],eax", "cmp~eax,0", "jz~FOO"]], [0, 0, 51, 0, 0, 3, 0, 0, 27, 7, 0.0002403098583585423, ["movzx   r15d, byte ptr [rbp+var_318]", "mov     rbx, [rbp+x]", "mov     r14d, dword ptr [rbp+var_388]"], ["movzx~r15d,[yte ptr [rbp+0]", "mov~rbx,[rbp+0]", "mov~r14d,[word ptr [rbp+0]"]], [1, 1, 378, 0, 0, 5, 1, 1, 15, 3, 0.17070167337335354, ["mov     eax, [rbp+mode]", "and     eax, 0F000h", "mov     dword ptr [rbp+ancestors], eax", "cmp     eax, 4000h", "jz      short loc_9DDD"], ["mov~eax,[rbp+0]", "and~eax,<STR>", "mov~[word ptr [rbp+0],eax", "cmp~eax,0", "jz~FOO"]], [0, 0, 378, 0, 0, 4, 1, 1, 17, 8, 0.2808854711486811, ["movzx   eax, byte ptr [x_0+2Ch]", "mov     byte ptr [rbp+dest_is_symlink], al", "test    al, al", "jz      loc_7FC0"], ["movzx~eax,[yte ptr [x_0+0]", "mov~[yte ptr [rbp+0],al", "test~al,al", "jz~FOO"]], [2, 0, 412, 0, 0, 4, 0, 1, 22, 10, 0.0029004064849107395, ["movzx   r15d, byte ptr [rbp+tmp_backup]", "mov     r13d, 11h", "mov     [rbp+tmp_backup], 0", "jmp     loc_6E77"], ["movzx~r15d,[yte ptr [rbp+0]", "mov~r13d,0", "mov~[rbp+0],0", "jmp~FOO"]], [5, 0, 378, 1, 0, 9, 0, 0, 30, 9, 0.0, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "repne scasb", "mov     rax, rcx", "not     rax", "sub     rax, 1", "cmp     byte ptr [rsi+rax-1], 2Fh ; '/'", "mov     eax, 14h", "cmovz   r13d, eax"], ["mov~rcx,0", "mov~eax,0", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "sub~rax,0", "cmp~[yte ptr [rsi+0],0", "mov~eax,0", "cmovz~r13d,eax"]], [0, 0, 378, 0, 1, 6, 1, 2, 30, 6, 0.009871552024728359, ["mov     edx, [rbp+group]; group", "mov     esi, [rbp+owner]; owner", "mov     rdi, [rbp+dst_name]; file", "call    _lchown", "test    eax, eax", "jz      loc_7613"], ["mov~edx,[rbp+0]", "mov~esi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 378, 0, 0, 3, 0, 1, 18, 7, 0.05557923314454088, ["mov     rax, [rbp+src_name]", "cmp     byte ptr [rax], 2Fh ; '/'", "jz      short loc_75DC"], ["mov~rax,[rbp+0]", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 378, 0, 1, 4, 1, 2, 31, 6, 0.008170535184190439, ["mov     rdi, x_0; x", "call    chown_failure_ok", "test    al, al", "jz      short loc_95B7"], ["mov~rdi,x_0", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 408, 0, 0, 2, 0, 1, 11, 6, 0.005979121314070849, ["cmp     dword ptr [x_0], 0", "jnz     loc_9CEE"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 50, 0, 1, 5, 0, 1, 26, 6, 0.0010601905515818042, ["mov     rdi, [rbp+tmp_backup]; ptr", "call    free", "mov     rax, qword ptr [rbp+fildes]", "movzx   esi, byte ptr [rbp+symlink_err]", "mov     [rax], sil"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~rax,[word ptr [rbp+0]", "movzx~esi,[yte ptr [rbp+0]", "mov~<TAG>,sil"]], [0, 0, 378, 0, 0, 2, 0, 1, 32, 6, 0.0001248668871863014, ["mov     byte ptr [rbp+dest_is_symlink], al", "jmp     loc_7613"], ["mov~[yte ptr [rbp+0],al", "jmp~FOO"]], [1, 0, 3, 0, 1, 9, 1, 2, 29, 2, 7.067937010545362e-06, ["mov     edx, [rbx+10h]; mode", "mov     esi, 0FFFFFFFFh; desc", "mov     rdi, [rbp+dst_name]; name", "call    set_acl", "test    eax, eax", "movzx   eax, byte ptr [rbp+dest_is_symlink]", "cmovz   eax, r12d", "mov     r12d, eax", "jmp     loc_5F54"], ["mov~edx,[rbx+0]", "mov~esi,0", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "movzx~eax,[yte ptr [rbp+0]", "cmovz~eax,r12d", "mov~r12d,eax", "jmp~FOO"]], [0, 0, 17, 0, 0, 3, 1, 1, 28, 3, 0.01929546803878884, ["movzx   r13d, byte ptr [rbx+2Bh]", "test    r13b, r13b", "jnz     loc_977A"], ["movzx~r13d,[yte ptr [rbx+0]", "test~r13b,r13b", "jnz~FOO"]], [9, 0, 3, 0, 4, 23, 0, 5, 19, 2, 0.0003675327245483588, ["mov     rdx, [rbp+dst_name]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     r12, rax", "mov     rdx, [rbp+src_name]; arg", "mov     esi, 4; s", "mov     edi, 0; n", "call    quotearg_n_style", "mov     x_0, rax", "mov     edx, 5; category", "lea     rsi, aSAndSAreTheSam; \"%s and %s are the same file\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8, r12", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     r12d, r15d", "jmp     loc_5F54"], ["mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~r12,rax", "mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~x_0,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8,r12", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~r12d,r15d", "jmp~FOO"]], [2, 0, 652, 1, 0, 30, 2, 1, 0, 8, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "push    rbx", "sub     rsp, 3A8h", "mov     [rbp+src_name], src_name_0", "mov     [rbp+dst_name], dst_name_0", "mov     [rbp+parent], parent_0", "mov     [rbp+dest_is_symlink], ancestors_0", "mov     rbx, x_0", "mov     r14d, [rbp+command_line_arg]", "mov     rax, [rbp+first_dir_created_per_command_line_arg]", "mov     qword ptr [rbp+fildes], rax", "mov     rax, [rbp+copy_into_self]", "mov     [rbp+ptr], rax", "mov     parent_0, [rbp+rename_succeeded]", "mov     [rbp+ancestors], rcx", "mov     r15d, edx", "mov     byte ptr [rbp+restore_dst_mode], r14b", "mov     dst_name_0, fs:28h", "mov     [rbp+var_38], dst_name_0", "xor     esi, esi", "mov     byte ptr [rax], 0", "mov     r13d, [x_0+34h]", "movzx   r12d, byte ptr [x_0+18h]", "test    r12b, r12b", "jz      short loc_5DE6"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "push~rbx", "sub~rsp,0", "mov~[rbp+0],src_name_0", "mov~[rbp+0],dst_name_0", "mov~[rbp+0],parent_0", "mov~[rbp+0],ancestors_0", "mov~rbx,x_0", "mov~r14d,[rbp+0]", "mov~rax,[rbp+0]", "mov~[word ptr [rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~parent_0,[rbp+0]", "mov~[rbp+0],rcx", "mov~r15d,edx", "mov~[yte ptr [rbp+0],r14b", "mov~dst_name_0,<TAG>", "mov~[rbp+0],dst_name_0", "xor~esi,esi", "mov~<TAG>,0", "mov~r13d,[x_0+0]", "movzx~r12d,[yte ptr [x_0+0]", "test~r12b,r12b", "jz~FOO"]], [0, 0, 651, 0, 0, 2, 1, 1, 1, 9, 1.1779895017575603e-05, ["test    r13d, r13d", "js      loc_5EA8"], ["test~r13d,r13d", "js~FOO"]], [1, 0, 552, 0, 0, 2, 0, 1, 19, 7, 0.014948686777303441, ["cmp     byte ptr [x_0+18h], 0", "jnz     short loc_65D2"], ["cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [2, 0, 412, 0, 0, 4, 0, 1, 23, 10, 0.0008952720213357459, ["movzx   r15d, byte ptr [rbp+tmp_backup]", "mov     r13d, 11h", "mov     [rbp+tmp_backup], 0", "jmp     loc_6E77"], ["movzx~r15d,[yte ptr [rbp+0]", "mov~r13d,0", "mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 378, 0, 1, 11, 1, 2, 19, 8, 0.009904535730777568, ["mov     rdi, [rbp+dst_name]; file", "call    dir_name", "mov     r12, rax", "mov     ecx, 2", "lea     rsi, asc_12A18+1; \".\"", "mov     rdi, dst_parent", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_7DD6"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~r12,rax", "mov~ecx,0", "lea~rsi,<TAG>", "mov~rdi,dst_parent", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [0, 0, 39, 0, 0, 4, 0, 1, 24, 4, 0.003477425009188318, ["mov     byte ptr [rbp+dest_is_symlink], r14b", "movzx   eax, byte ptr [rbp+restore_dst_mode_0]", "mov     byte ptr [rbp+restore_dst_mode], al", "jmp     loc_76AC"], ["mov~[yte ptr [rbp+0],r14b", "movzx~eax,[yte ptr [rbp+0]", "mov~[yte ptr [rbp+0],al", "jmp~FOO"]], [0, 0, 378, 0, 1, 2, 0, 1, 20, 7, 0.0021206952336974105, ["mov     rdi, r12; ptr", "call    free"], ["mov~rdi,r12", "call~FOO"]], [1, 0, 378, 0, 1, 6, 1, 2, 20, 8, 0.007435469735093721, ["lea     rdx, [rbp+dot_sb]; stat_buf", "lea     rsi, asc_12A18+1; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jnz     loc_75D4"], ["lea~rdx,[rbp+0]", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 379, 0, 0, 2, 0, 1, 11, 6, 0.10332134140020544, ["cmp     byte ptr [x_0+18h], 0", "jz      loc_9DCD"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 647, 0, 0, 4, 1, 1, 2, 8, 0.0025613418399881888, ["test    r13d, r13d", "setz    r15b", "cmp     [rbp+ancestors], 0", "jz      short loc_5DE6"], ["test~r13d,r13d", "setz~r15b", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 648, 0, 1, 3, 0, 2, 3, 9, 7.067937010545362e-06, ["call    ___errno_location", "mov     r13d, [rax]", "jmp     loc_5DCB"], ["call~FOO", "mov~r13d,<TAG>", "jmp~FOO"]], [0, 0, 646, 0, 0, 2, 0, 0, 3, 8, 1.4135874021090724e-05, ["mov     rax, [rbp+ancestors]", "mov     [rax], r15b"], ["mov~rax,[rbp+0]", "mov~<TAG>,r15b"]], [1, 0, 378, 0, 0, 2, 0, 1, 42, 12, 0.005767436600605015, ["cmp     byte ptr [rbp+parent], 0", "jz      loc_8E88"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 0, 546, 0, 0, 2, 0, 1, 21, 7, 0.0026269165889193594, ["cmp     byte ptr [rbp+srcbase], 0", "jz      short loc_65F8"], ["cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 0, 545, 0, 0, 2, 0, 1, 22, 6, 0.0007221075645773845, ["cmp     qword ptr [r12+10h], 1", "ja      short loc_6635"], ["cmp~[word ptr [r12+0],0", "ja~FOO"]], [1, 0, 641, 0, 0, 3, 0, 1, 2, 6, 0.004407644052409539, ["mov     r12, [rbp+src_name]", "cmp     r13d, 11h", "jz      loc_5EDC"], ["mov~r12,[rbp+0]", "cmp~r13d,0", "jz~FOO"]], [4, 0, 378, 0, 3, 16, 1, 4, 32, 5, 0.00644124659561034, ["mov     edx, 5; category", "lea     rsi, aFailedToPreser_1; \"failed to preserve ownership for %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r12, rax", "call    ___errno_location", "mov     rcx, [rbp+dst_name]", "mov     rdx, r12; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "movzx   eax, byte ptr [x_0+24h]", "mov     byte ptr [rbp+symlink_err], al", "test    al, al", "jnz     un_backup"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r12,rax", "call~FOO", "mov~rcx,[rbp+0]", "mov~rdx,r12", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "movzx~eax,[yte ptr [x_0+0]", "mov~[yte ptr [rbp+0],al", "test~al,al", "jnz~FOO"]], [0, 0, 378, 0, 0, 1, 0, 1, 33, 6, 0.0001248668871863014, ["jmp     loc_7613"], ["jmp~FOO"]], [1, 0, 638, 0, 0, 2, 0, 1, 3, 5, 0.003343134205987956, ["cmp     dword ptr [x_0+4], 2", "jz      loc_5EEB"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [0, 0, 639, 0, 0, 1, 0, 1, 4, 6, 3.298370604921169e-05, ["jmp     loc_5E00"], ["jmp~FOO"]], [1, 1, 540, 0, 0, 4, 1, 1, 22, 6, 0.004100581455618067, ["mov     eax, [r13+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      short loc_6677"], ["mov~eax,[r13+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [6, 0, 3, 0, 4, 18, 0, 5, 21, 2, 3.533968505272681e-06, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     r12, rax", "mov     edx, 5; category", "lea     rsi, aCannotUnBackup; \"cannot un-backup %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     rcx, r12", "mov     rdx, rbx; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     r12d, 0", "jmp     loc_5F54"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~r12,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~rcx,r12", "mov~rdx,rbx", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~r12d,0", "jmp~FOO"]], [0, 0, 378, 0, 0, 2, 0, 1, 34, 8, 0.002933193859376325, ["mov     byte ptr [rbp+symlink_err], r12b", "jmp     loc_8625"], ["mov~[yte ptr [rbp+0],r12b", "jmp~FOO"]], [1, 0, 378, 0, 1, 9, 0, 2, 33, 9, 0.005821624117685863, ["lea     rcx, [rbp+src_mode]; src_sb", "lea     r9, [rbp+timespec]; dst_sb", "movzx   r8d, r15b; new_dst", "mov     edx, [rbp+fildes]; dest_desc", "mov     rsi, [rbp+dst_name]; dst_name", "mov     rdi, rbx; x", "call    set_owner", "cmp     eax, 0FFFFFFFFh", "jz      loc_9250"], ["lea~rcx,[rbp+0]", "lea~r9,[rbp+0]", "movzx~r8d,r15b", "mov~edx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rdi,rbx", "call~FOO", "cmp~eax,0", "jz~FOO"]], [3, 0, 378, 0, 1, 11, 1, 2, 19, 6, 0.04822653680510399, ["movzx   ecx, byte ptr [x_0+16h]; force", "mov     r8d, 0FFFFFFFFh; symlinkat_errno", "mov     rdx, [rbp+dst_name]; dstname", "mov     esi, 0FFFFFF9Ch; dstdir", "mov     r13, [rbp+src_name]", "mov     rdi, r13; srcname", "call    force_symlinkat", "mov     r12d, eax", "mov     byte ptr [rbp+symlink_err], 0", "test    eax, eax", "jg      loc_7EA3"], ["movzx~ecx,[yte ptr [x_0+0]", "mov~r8d,0", "mov~rdx,[rbp+0]", "mov~esi,0", "mov~r13,[rbp+0]", "mov~rdi,r13", "call~FOO", "mov~r12d,eax", "mov~[yte ptr [rbp+0],0", "test~eax,eax", "jg~FOO"]], [0, 0, 378, 0, 0, 1, 0, 1, 24, 7, 0.0002591576903866633, ["jmp     loc_75DC"], ["jmp~FOO"]], [5, 0, 3, 0, 3, 15, 0, 4, 22, 2, 8.481524412654434e-05, ["mov     rsi, r15; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     x_0, rax", "mov     edx, 5; category", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, [r13+0]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     loc_5F54"], ["mov~rsi,r15", "mov~edi,0", "call~FOO", "mov~x_0,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,[r13+0]", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 1, 540, 0, 0, 4, 1, 1, 25, 6, 0.0018211717697171883, ["mov     eax, [r12+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jnz     short loc_6608"], ["mov~eax,[r12+0]", "and~eax,<STR>", "cmp~eax,0", "jnz~FOO"]], [1, 0, 378, 0, 0, 3, 1, 1, 22, 5, 0.009085833027056064, ["mov     rax, 0FF000000FF00h", "test    [rbx+20h], rax", "jz      loc_7637"], ["mov~rax,0", "test~[rbx+0],rax", "jz~FOO"]], [2, 0, 378, 0, 0, 6, 2, 1, 21, 6, 0.010750332193039495, ["movzx   eax, byte ptr [rbx+14h]", "xor     eax, 1", "cmp     dword ptr [rbp+ancestors], 4000h", "setnz   dl", "and     al, dl", "jnz     loc_9607"], ["movzx~eax,[yte ptr [rbx+0]", "xor~eax,0", "cmp~[word ptr [rbp+0],0", "setnz~dl", "and~al,dl", "jnz~FOO"]], [0, 0, 378, 0, 0, 2, 1, 1, 20, 5, 0.06671284385513557, ["test    r15b, r15b", "jnz     short loc_7637"], ["test~r15b,r15b", "jnz~FOO"]], [0, 0, 378, 0, 0, 2, 0, 1, 32, 6, 0.018521921599301376, ["mov     byte ptr [rbp+dest_is_symlink], r12b", "jmp     loc_7613"], ["mov~[yte ptr [rbp+0],r12b", "jmp~FOO"]], [0, 1, 378, 0, 1, 14, 2, 2, 16, 2, 0.027592833426001835, ["movzx   eax, r15b", "mov     dword ptr [rbp+s2], eax", "mov     r8, x_0; x", "mov     ecx, eax; new_dst", "mov     edx, [rbp+mode]; mode", "mov     rsi, [rbp+dst_name]; dst_name", "mov     rdi, [rbp+src_name]; src_name", "call    set_process_security_ctx", "mov     r12d, eax", "mov     eax, r13d", "and     eax, 12h", "mov     dword ptr [rbp+srcbase], eax", "test    r12b, r12b", "jz      loc_5F54"], ["movzx~eax,r15b", "mov~[word ptr [rbp+0],eax", "mov~r8,x_0", "mov~ecx,eax", "mov~edx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "mov~r12d,eax", "mov~eax,r13d", "and~eax,<STR>", "mov~[word ptr [rbp+0],eax", "test~r12b,r12b", "jz~FOO"]], [6, 0, 378, 0, 4, 18, 0, 4, 28, 8, 0.009546819585410522, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     [rbp+symlink_err], rax", "mov     edx, 5; category", "lea     rsi, aCannotFstatS; \"cannot fstat %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r13, rax", "call    ___errno_location", "mov     rcx, [rbp+symlink_err]", "mov     rdx, r13; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     byte ptr [rbp+symlink_err], r12b", "mov     [rbp+ptr], 0"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~[rbp+0],rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r13,rax", "call~FOO", "mov~rcx,[rbp+0]", "mov~rdx,r13", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~[yte ptr [rbp+0],r12b", "mov~[rbp+0],0"]], [1, 0, 636, 0, 1, 6, 1, 1, 4, 4, 0.00239014069906609, ["lea     rdx, [rbp+src_mode]; stat_buf", "mov     rsi, name; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "setnz   al"], ["lea~rdx,[rbp+0]", "mov~rsi,name", "mov~edi,0", "call~FOO", "test~eax,eax", "setnz~al"]], [0, 0, 635, 0, 0, 2, 1, 1, 5, 3, 0.0077393910265471716, ["test    al, al", "jnz     loc_5F09"], ["test~al,al", "jnz~FOO"]], [1, 0, 636, 0, 1, 7, 1, 2, 4, 4, 0.00239014069906609, ["lea     rdx, [rbp+src_mode]; stat_buf", "mov     rsi, name; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "setnz   al", "jmp     loc_5E23"], ["lea~rdx,[rbp+0]", "mov~rsi,name", "mov~edi,0", "call~FOO", "test~eax,eax", "setnz~al", "jmp~FOO"]], [0, 0, 378, 0, 0, 3, 1, 1, 17, 8, 0.054962477107737336, ["mov     rax, [rbp+dest_is_symlink]", "test    rax, rax", "jz      short loc_9E3C"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 537, 0, 0, 3, 1, 1, 25, 6, 0.00039344849358702517, ["movzx   eax, byte ptr [x_0+17h]", "test    al, al", "jz      short loc_6677"], ["movzx~eax,[yte ptr [x_0+0]", "test~al,al", "jz~FOO"]], [9, 0, 378, 0, 5, 26, 0, 6, 32, 8, 0.0025397453657893003, ["mov     rdx, [rbp+src_name]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     [rbp+symlink_err], rax", "mov     rdx, [rbp+dst_name]; arg", "mov     esi, 4; s", "mov     edi, 0; n", "call    quotearg_n_style", "mov     r13, rax", "mov     edx, 5; category", "lea     rsi, aFailedToCloneS; \"failed to clone %s from %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     [rbp+ptr], rax", "call    ___errno_location", "mov     r8, [rbp+symlink_err]", "mov     rcx, r13", "mov     rdx, [rbp+ptr]; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     byte ptr [rbp+symlink_err], r12b", "mov     [rbp+ptr], 0", "jmp     loc_8625"], ["mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~[rbp+0],rax", "mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~r13,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~[rbp+0],rax", "call~FOO", "mov~r8,[rbp+0]", "mov~rcx,r13", "mov~rdx,[rbp+0]", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~[yte ptr [rbp+0],r12b", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 49, 0, 0, 1, 0, 0, 22, 5, 5.772148558612046e-05, ["mov     r15d, eax"], ["mov~r15d,eax"]], [1, 0, 378, 0, 1, 7, 1, 2, 23, 5, 0.008554559761763404, ["movzx   esi, byte ptr [rbx+25h]; process_local", "mov     rcx, rbx; x", "mov     edx, 0; recurse", "mov     rdi, [rbp+dst_name]; dst_name", "call    set_file_security_ctx", "test    al, al", "jnz     loc_7637"], ["movzx~esi,[yte ptr [rbx+0]", "mov~rcx,rbx", "mov~edx,0", "mov~rdi,[rbp+0]", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 48, 0, 0, 3, 1, 1, 21, 4, 0.05503661191371463, ["mov     r12d, 1", "test    r14b, r14b", "jz      short loc_7689"], ["mov~r12d,0", "test~r14b,r14b", "jz~FOO"]], [0, 0, 49, 0, 0, 1, 0, 1, 25, 5, 0.00010837503416169555, ["jmp     loc_7637"], ["jmp~FOO"]], [1, 1, 633, 0, 0, 5, 1, 1, 6, 6, 0.009035179478480489, ["mov     eax, [rbp+var_268]", "mov     [rbp+mode], eax", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     loc_5F9D"], ["mov~eax,[rbp+0]", "mov~[rbp+0],eax", "and~eax,<STR>", "cmp~eax,0", "jnz~FOO"]], [1, 0, 47, 0, 0, 1, 0, 0, 22, 6, 0.006101985619104163, ["mov     byte ptr [rbp+restore_dst_mode_0], 0"], ["mov~[yte ptr [rbp+0],0"]], [0, 0, 378, 0, 0, 3, 1, 1, 24, 5, 0.008081007982056864, ["movzx   r15d, byte ptr [rbx+26h]", "test    r15b, r15b", "jnz     un_backup"], ["movzx~r15d,[yte ptr [rbx+0]", "test~r15b,r15b", "jnz~FOO"]], [0, 0, 632, 0, 0, 3, 1, 1, 7, 5, 0.00017669842526363405, ["movzx   r12d, byte ptr [x_0+2Ah]", "test    r12b, r12b", "jnz     loc_5F9D"], ["movzx~r12d,[yte ptr [x_0+0]", "test~r12b,r12b", "jnz~FOO"]], [0, 0, 543, 0, 1, 6, 1, 2, 23, 5, 0.0005689689293489016, ["mov     rsi, [rbp+dst_name]; dest", "mov     rdi, [rbp+src_name]; source", "call    same_name", "mov     byte ptr [rbp+srcbase], al", "test    al, al", "jz      loc_66E4"], ["mov~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "mov~[yte ptr [rbp+0],al", "test~al,al", "jz~FOO"]], [1, 0, 378, 0, 1, 4, 0, 2, 31, 5, 0.057231343787597505, ["mov     rdi, [rbp+ptr]; ptr", "call    free", "cmp     byte ptr [rbp+symlink_err], 0", "jz      un_backup"], ["mov~rdi,[rbp+0]", "call~FOO", "cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [0, 0, 378, 0, 0, 1, 0, 1, 44, 10, 0.000819880693223262, ["jmp     short loc_8E0F"], ["jmp~FOO"]], [7, 0, 412, 0, 3, 16, 0, 4, 22, 10, 0.001098377044597112, ["mov     rsi, [rbp+dst_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     r12, rax", "mov     edx, 5; category", "lea     rsi, aRemovedS; \"removed %s\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, r12", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     r13d, 11h", "mov     [rbp+tmp_backup], 0", "jmp     short loc_6E77"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~r12,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,r12", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~r13d,0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 1, 541, 0, 0, 4, 1, 1, 24, 6, 0.0008363725462478678, ["mov     eax, [r13+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      short loc_6677"], ["mov~eax,[r13+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [2, 0, 412, 0, 0, 2, 0, 0, 7, 10, 0.027927186112917363, ["mov     byte ptr [rbp+have_dst_lstat], 0", "mov     [rbp+tmp_backup], 0"], ["mov~[yte ptr [rbp+0],0", "mov~[rbp+0],0"]], [2, 0, 6, 0, 1, 6, 0, 2, 8, 4, 0.00014842667722145261, ["mov     rsi, [rbp+src_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     r13, rax", "cmp     byte ptr [x_0+19h], 0", "jnz     loc_5F79"], ["mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "mov~r13,rax", "cmp~[yte ptr [x_0+0],0", "jnz~FOO"]], [7, 0, 378, 0, 3, 16, 0, 4, 24, 5, 0.002883404169768706, ["mov     rdx, [rbp+dst_name]; arg", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     r12, rax", "mov     edx, 5; category", "lea     rsi, aSCanMakeRelati; \"%s: can make relative symbolic links on\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     un_backup"], ["mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~r12,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [0, 0, 378, 0, 1, 7, 0, 2, 23, 6, 0.002616157618136641, ["mov     dst_mode_bits, [rbp+dot_sb.st_dev]", "mov     rax, [rbp+timespec.tv_sec]", "mov     [rbp+symlink_err], rax", "mov     rdi, r12; ptr", "call    free", "cmp     r13, [rbp+symlink_err]", "jnz     short loc_7E2A"], ["mov~dst_mode_bits,[rbp+0]", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rdi,r12", "call~FOO", "cmp~r13,[rbp+0]", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 14, 2, 3.887365355799949e-05, ["mov     r12d, r15d", "jmp     loc_5F54"], ["mov~r12d,r15d", "jmp~FOO"]], [0, 0, 482, 0, 0, 2, 1, 1, 13, 3, 0.047394051624211925, ["test    r15b, r15b", "jnz     loc_9911"], ["test~r15b,r15b", "jnz~FOO"]], [0, 0, 411, 0, 0, 2, 1, 1, 8, 9, 0.1175867578049097, ["test    r14b, r14b", "jz      short loc_6EBD"], ["test~r14b,r14b", "jz~FOO"]], [2, 0, 412, 0, 0, 4, 0, 1, 19, 10, 0.020948187309754694, ["movzx   r15d, byte ptr [rbp+tmp_backup]", "mov     r13d, 11h", "mov     [rbp+tmp_backup], 0", "jmp     loc_6E77"], ["movzx~r15d,[yte ptr [rbp+0]", "mov~r13d,0", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 378, 1, 1, 6, 1, 2, 43, 11, 0.0021345169771846994, ["mov     rsi, [rbp+restore_dst_mode_0]", "sub     rsi, [rbp+offset]; n_bytes", "mov     edi, [rbp+fildes]; fd", "call    write_zeros", "test    al, al", "jnz     loc_8F1F"], ["mov~rsi,[rbp+0]", "sub~rsi,[rbp+0]", "mov~edi,[rbp+0]", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 410, 0, 0, 2, 0, 1, 9, 8, 0.004884042640078659, ["cmp     qword ptr [x_0+40h], 0", "jz      short loc_6EBD"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [0, 0, 42, 0, 0, 3, 0, 0, 25, 4, 0.00019790223629527015, ["movzx   r12d, byte ptr [rbp+restore_dst_mode]", "movzx   eax, byte ptr [rbp+restore_dst_mode_0]", "mov     byte ptr [rbp+restore_dst_mode], al"], ["movzx~r12d,[yte ptr [rbp+0]", "movzx~eax,[yte ptr [rbp+0]", "mov~[yte ptr [rbp+0],al"]], [2, 0, 378, 1, 0, 12, 2, 1, 18, 7, 0.0495201656096174, ["sub     rsp, 30h", "lea     rax, [rsp+400h+var_3F1]", "and     rax, 0FFFFFFFFFFFFFFF0h", "mov     [rbp+ancestors], rax", "mov     rsi, [rbp+dest_is_symlink]", "mov     [rax], rsi", "mov     rdx, [rbp+ino]", "mov     [rax+8], rdx", "mov     rdx, [rbp+src_mode]", "mov     [rax+10h], rdx", "test    r15b, r15b", "jnz     short loc_9E8B"], ["sub~rsp,0", "lea~rax,[rsp+0]", "and~rax,0", "mov~[rbp+0],rax", "mov~rsi,[rbp+0]", "mov~<TAG>,rsi", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "mov~rdx,[rbp+0]", "mov~[rax+0],rdx", "test~r15b,r15b", "jnz~FOO"]], [2, 0, 4, 0, 1, 5, 0, 1, 9, 3, 3.416169555096925e-05, ["mov     edx, 5; category", "lea     rsi, aRNotSpecifiedO; \"-r not specified; omitting directory %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rax; format"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rax"]], [0, 0, 409, 0, 0, 3, 1, 1, 10, 7, 0.005875458237916183, ["movzx   r12d, byte ptr [x_0+18h]", "test    r12b, r12b", "jnz     short loc_6EBD"], ["movzx~r12d,[yte ptr [x_0+0]", "test~r12b,r12b", "jnz~FOO"]], [1, 0, 41, 0, 0, 2, 0, 1, 22, 3, 0.04743151169036782, ["cmp     byte ptr [rbx+17h], 0", "jz      short loc_769F"], ["cmp~[yte ptr [rbx+0],0", "jz~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 43, 12, 0.004681330279984545, ["cmp     [rbp+var_394], 3", "jnz     loc_8F1F"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 378, 0, 0, 2, 1, 1, 44, 11, 0.0028943202058183256, ["test    r13b, r13b", "jz      loc_8F1F"], ["test~r13b,r13b", "jz~FOO"]], [1, 0, 40, 0, 0, 2, 0, 1, 23, 2, 0.00012651607248876197, ["cmp     dword ptr [rbp+ancestors], 4000h", "jnz     loc_5F54"], ["cmp~[word ptr [rbp+0],0", "jnz~FOO"]], [3, 0, 3, 0, 1, 6, 0, 2, 10, 2, 3.533968505272681e-05, ["mov     rcx, r13", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     loc_5F54"], ["mov~rcx,r13", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [2, 0, 4, 0, 1, 6, 0, 2, 9, 3, 3.416169555096925e-05, ["mov     edx, 5; category", "lea     rsi, aOmittingDirect; \"omitting directory %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rax", "jmp     loc_5E8C"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rax", "jmp~FOO"]], [1, 0, 405, 0, 0, 3, 0, 1, 12, 5, 0.0025853335595073176, ["lea     rdx, [rbp+dst_sb]; stats", "cmp     byte ptr [rbp+have_dst_lstat], 0", "jz      loc_6F5D"], ["lea~rdx,[rbp+0]", "cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 0, 39, 0, 0, 2, 0, 1, 23, 2, 0.04482414972717763, ["cmp     byte ptr [rbp+symlink_err], 0", "jnz     loc_5F54"], ["cmp~[yte ptr [rbp+0],0", "jnz~FOO"]], [0, 0, 15, 0, 0, 3, 1, 1, 29, 3, 0.01656724435271833, ["mov     r14d, r15d", "and     r14b, [rbx+20h]", "jnz     loc_97A3"], ["mov~r14d,r15d", "and~r14b,[rbx+0]", "jnz~FOO"]], [1, 1, 402, 0, 0, 4, 1, 1, 13, 4, 0.002508764241893076, ["mov     eax, [rdx+18h]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_6F89"], ["mov~eax,[rdx+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [0, 0, 403, 0, 0, 2, 0, 1, 14, 5, 1.4135874021090724e-05, ["lea     rdx, [rbp+timespec]", "jmp     loc_6EAA"], ["lea~rdx,[rbp+0]", "jmp~FOO"]], [1, 1, 625, 0, 0, 4, 1, 1, 6, 5, 0.0002285299633409667, ["mov     eax, [rbp+mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_5FC6"], ["mov~eax,[rbp+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [0, 0, 626, 0, 0, 3, 1, 1, 5, 6, 0.0002615136693901784, ["mov     rdi, [x_0+48h]; ht", "test    rdi, rdi", "jz      short loc_5FDD"], ["mov~rdi,[x_0+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 378, 0, 0, 3, 0, 1, 32, 10, 0.006617945020873974, ["mov     eax, dword ptr [rbp+timespec.tv_nsec+14h]", "cmp     [rbp+owner], eax", "jnz     short loc_8FA0"], ["mov~eax,[word ptr [rbp+0]", "cmp~[rbp+0],eax", "jnz~FOO"]], [0, 0, 33, 0, 1, 6, 1, 2, 26, 4, 0.00409940346611631, ["lea     rsi, [rbp+timespec]; timespec", "mov     rdi, [rbp+dst_name]; file", "call    utimens", "test    eax, eax", "setnz   al", "jmp     loc_7728"], ["lea~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "setnz~al", "jmp~FOO"]], [1, 0, 37, 0, 0, 10, 0, 1, 25, 5, 0.009383864371000725, ["mov     rax, [rbp+var_238]", "mov     [rbp+timespec.tv_sec], rax", "mov     rax, [rbp+var_230]", "mov     [rbp+timespec.tv_nsec], rax", "mov     rax, [rbp+var_228]", "mov     [rbp+timespec.tv_sec+10h], rax", "mov     rax, [rbp+var_220]", "mov     [rbp+timespec.tv_nsec+10h], rax", "cmp     byte ptr [rbp+dest_is_symlink], 0", "jz      loc_96A8"], ["mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "mov~rax,[rbp+0]", "mov~[rbp+0],rax", "cmp~[yte ptr [rbp+0],0", "jz~FOO"]], [1, 0, 399, 0, 0, 2, 0, 1, 9, 8, 0.11825929164462143, ["cmp     byte ptr [x_0+2Eh], 0", "jz      short loc_6ECD"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 404, 0, 1, 6, 1, 2, 13, 6, 0.0009765532969570175, ["lea     rdx, [rbp+timespec]; stat_buf", "mov     rsi, [rbp+dst_name]; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jnz     loc_6EBD"], ["lea~rdx,[rbp+0]", "mov~rsi,[rbp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 378, 0, 0, 2, 0, 1, 28, 10, 0.006198580758248282, ["cmp     byte ptr [x_0+18h], 0", "jz      loc_8508"], ["cmp~[yte ptr [x_0+0],0", "jz~FOO"]], [1, 0, 640, 0, 0, 2, 0, 1, 3, 7, 0.005665736840286613, ["cmp     dword ptr [x_0+8], 2", "jz      loc_5F9D"], ["cmp~[word ptr [x_0+0],0", "jz~FOO"]], [5, 0, 378, 0, 4, 17, 0, 5, 20, 5, 0.0054091707268038155, ["mov     rsi, r13; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     r13, rax", "mov     edx, 5; category", "lea     rsi, aCannotCreateDi; \"cannot create directory %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r12, rax", "call    ___errno_location", "mov     rcx, r13", "mov     rdx, r12; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     un_backup"], ["mov~rsi,r13", "mov~edi,0", "call~FOO", "mov~r13,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r12,rax", "call~FOO", "mov~rcx,r13", "mov~rdx,r12", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [8, 0, 378, 0, 4, 21, 0, 4, 20, 5, 0.006567566336515476, ["mov     rdx, r13; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     r14, rax", "mov     rdx, [rbp+dst_name]; arg", "mov     esi, 4; s", "mov     edi, 0; n", "call    quotearg_n_style", "mov     r13, rax", "mov     edx, 5; category", "lea     rsi, aCannotCreateSy; \"cannot create symbolic link %s to %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8, r14", "mov     rcx, r13", "mov     rdx, rax; format", "mov     esi, r12d; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error"], ["mov~rdx,r13", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~r14,rax", "mov~rdx,[rbp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~r13,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8,r14", "mov~rcx,r13", "mov~rdx,rax", "mov~esi,r12d", "mov~edi,0", "mov~eax,0", "call~FOO"]], [0, 0, 35, 0, 1, 6, 1, 2, 26, 5, 0.0026858160640072376, ["lea     rsi, [rbp+timespec]; timespec", "mov     rdi, [rbp+dst_name]; file", "call    lutimens", "mov     r13d, eax", "test    eax, eax", "jz      short loc_7722"], ["lea~rsi,[rbp+0]", "mov~rdi,[rbp+0]", "call~FOO", "mov~r13d,eax", "test~eax,eax", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 16, 2, 0.0012651607248876197, ["movzx   r12d, byte ptr [x_0+31h]", "test    r12b, r12b", "jnz     loc_5F54"], ["movzx~r12d,[yte ptr [x_0+0]", "test~r12b,r12b", "jnz~FOO"]], [2, 0, 34, 0, 1, 4, 0, 1, 27, 5, 0.0, ["call    ___errno_location", "cmp     dword ptr [rax], 26h ; '&'", "mov     eax, 0", "cmovz   r13d, eax"], ["call~FOO", "cmp~<TAG>,0", "mov~eax,0", "cmovz~r13d,eax"]], [0, 0, 33, 0, 0, 2, 1, 0, 27, 4, 0.00015549461423199797, ["test    r13d, r13d", "setnz   al"], ["test~r13d,r13d", "setnz~al"]], [0, 0, 25, 0, 0, 3, 0, 1, 29, 4, 0.001387671633070406, ["mov     eax, [rbp+dst_sb.st_gid]", "cmp     [rbp+group], eax", "jnz     loc_775A"], ["mov~eax,[rbp+0]", "cmp~[rbp+0],eax", "jnz~FOO"]], [0, 0, 26, 0, 0, 3, 0, 1, 28, 4, 0.00272822368607051, ["mov     eax, [rbp+dst_sb.st_uid]", "cmp     [rbp+owner], eax", "jz      loc_9723"], ["mov~eax,[rbp+0]", "cmp~[rbp+0],eax", "jz~FOO"]], [1, 0, 472, 0, 0, 2, 0, 1, 17, 4, 0.0020826854391073667, ["cmp     dword ptr [x_0], 3", "jnz     loc_691A"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 21, 0, 0, 1, 0, 1, 30, 4, 6.361143309490826e-05, ["jmp     loc_779F"], ["jmp~FOO"]], [0, 0, 3, 0, 1, 6, 0, 2, 17, 2, 0.0, ["lea     rdx, [rbp+src_mode]; stats", "mov     rdi, [x_0+40h]; ht", "mov     rsi, [rbp+dst_name]; file", "call    record_file", "mov     r12d, r14d", "jmp     loc_5F54"], ["lea~rdx,[rbp+0]", "mov~rdi,[x_0+0]", "mov~rsi,[rbp+0]", "call~FOO", "mov~r12d,r14d", "jmp~FOO"]], [1, 0, 28, 0, 0, 2, 0, 1, 26, 4, 0.033984997125705615, ["cmp     byte ptr [rbx+1Dh], 0", "jz      short loc_779F"], ["cmp~[yte ptr [rbx+0],0", "jz~FOO"]], [0, 0, 27, 0, 0, 2, 1, 1, 27, 4, 0.008170535184190439, ["test    r15b, r15b", "jnz     short loc_775A"], ["test~r15b,r15b", "jnz~FOO"]], [6, 0, 3, 0, 4, 17, 0, 4, 6, 2, 0.00012015492917927115, ["mov     rsi, name; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     name, rax", "mov     edx, 5; category", "lea     rsi, aCannotStatS; \"cannot stat %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     x_0, rax", "call    ___errno_location", "mov     rcx, r12", "mov     rdx, rbx; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     r12d, 0"], ["mov~rsi,name", "mov~edi,0", "call~FOO", "mov~name,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~x_0,rax", "call~FOO", "mov~rcx,r12", "mov~rdx,rbx", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~r12d,0"]], [1, 1, 430, 0, 0, 6, 2, 1, 18, 6, 0.027476605128495094, ["mov     eax, [rbp+dst_sb.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "setz    al", "or      r12b, al", "jnz     loc_6F3F"], ["mov~eax,[rbp+0]", "and~eax,<STR>", "cmp~eax,0", "setz~al", "or~r12b,al", "jnz~FOO"]], [1, 0, 4, 0, 1, 8, 1, 2, 28, 2, 0.0014065194650985271, ["mov     r8d, [rbp+mode]; mode", "mov     ecx, 0FFFFFFFFh; dest_desc", "mov     rdx, [rbp+dst_name]; dst_name", "mov     esi, ecx; source_desc", "mov     rdi, [rbp+src_name]; src_name", "call    copy_acl", "test    eax, eax", "jz      loc_5F54"], ["mov~r8d,[rbp+0]", "mov~ecx,0", "mov~rdx,[rbp+0]", "mov~esi,ecx", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 20, 0, 0, 3, 1, 1, 27, 3, 0.023411363357929753, ["mov     rax, 0FF0000000000FFh", "test    [rbx+18h], rax", "jnz     loc_973A"], ["mov~rax,0", "test~[rbx+0],rax", "jnz~FOO"]], [1, 0, 378, 0, 0, 2, 0, 0, 27, 9, 0.01551569239081608, ["cmp     [rbp+fildes], 0", "jns     short loc_9F9D"], ["cmp~[rbp+0],0", "jns~FOO"]], [1, 1, 488, 0, 0, 4, 1, 1, 12, 4, 0.017998501597353764, ["mov     eax, [rbp+mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_677A"], ["mov~eax,[rbp+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [1, 0, 3, 0, 0, 5, 0, 1, 29, 2, 0.0, ["cmp     byte ptr [rbx+24h], 0", "movzx   eax, byte ptr [rbp+dest_is_symlink]", "cmovz   eax, r12d", "mov     r12d, eax", "jmp     loc_5F54"], ["cmp~[yte ptr [rbx+0],0", "movzx~eax,[yte ptr [rbp+0]", "cmovz~eax,r12d", "mov~r12d,eax", "jmp~FOO"]], [5, 0, 3, 0, 2, 17, 3, 3, 30, 2, 7.067937010545362e-06, ["mov     eax, [rbp+mode]", "and     eax, 7000h", "cmp     eax, 4000h", "mov     edx, 1FFh", "mov     eax, 1B6h", "cmovz   eax, edx", "mov     ebx, eax", "call    cached_umask", "not     eax", "mov     edx, eax", "and     edx, ebx; mode", "mov     esi, 0FFFFFFFFh; desc", "mov     rdi, [rbp+dst_name]; name", "call    set_acl", "test    eax, eax", "cmovnz  r12d, r13d", "jmp     loc_5F54"], ["mov~eax,[rbp+0]", "and~eax,0", "cmp~eax,0", "mov~edx,0", "mov~eax,0", "cmovz~eax,edx", "mov~ebx,eax", "call~FOO", "not~eax", "mov~edx,eax", "and~edx,ebx", "mov~esi,0", "mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "cmovnz~r12d,r13d", "jmp~FOO"]], [0, 0, 0, 0, 0, 8, 0, 0, 8, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [1, 0, 628, 0, 0, 1, 0, 0, 3, 8, 0.009080335742714527, ["mov     r13d, 0"], ["mov~r13d,0"]], [1, 0, 21, 0, 0, 6, 2, 0, 29, 4, 0.00010601905515818043, ["mov     esi, [rbp+mode]", "mov     edx, esi", "and     dh, 0F1h", "test    eax, eax", "cmovnz  edx, esi", "mov     [rbp+mode], edx"], ["mov~esi,[rbp+0]", "mov~edx,esi", "and~dh,0", "test~eax,eax", "cmovnz~edx,esi", "mov~[rbp+0],edx"]], [0, 0, 378, 0, 0, 1, 0, 0, 34, 17, 0.00892719710748611, ["mov     byte ptr [rbp+x], r12b"], ["mov~[yte ptr [rbp+0],r12b"]], [0, 0, 627, 0, 0, 2, 1, 1, 4, 7, 0.02940968590087925, ["test    r14b, r14b", "jz      short loc_5FDD"], ["test~r14b,r14b", "jz~FOO"]], [0, 0, 473, 0, 0, 2, 1, 1, 16, 5, 0.003255962982857897, ["test    r14b, r14b", "jz      short loc_67C2"], ["test~r14b,r14b", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 30, 3, 0.013829596750633758, ["cmp     dword ptr [rbp+srcbase], 0", "jnz     loc_97E9"], ["cmp~[word ptr [rbp+0],0", "jnz~FOO"]], [0, 0, 621, 0, 1, 4, 0, 1, 7, 11, 0.004367985072517034, ["lea     rdx, [rbp+src_mode]; stats", "mov     rdi, [x_0+48h]; ht", "mov     rsi, [rbp+src_name]; file", "call    record_file"], ["lea~rdx,[rbp+0]", "mov~rdi,[x_0+0]", "mov~rsi,[rbp+0]", "call~FOO"]]], "func_feature": [391, 265, 968, 37, 653, 1064, 2, 3624, 0.01645, 57, 36], "succs": [[163, 22], [0, 2], [0], [520, 19], [3, 28], [17, 14], [17, 5], [18, 590], [9, 7], [7], [457], [10, 620], [470, 118], [12, 470], [16, 23], [56, 457], [30, 15], [457, 15], [26, 27], [520, 28], [58, 37], [58, 20], [567], [16, 78], [38, 127], [24, 1], [49, 66], [26, 172], [41, 35], [540, 28], [17], [71], [343, 31], [39], [40, 33], [41, 563], [42, 203], [36, 93], [45, 127], [257, 54], [39], [588, 46], [47], [332], [43, 332], [57, 353], [51, 254], [467, 79], [47], [65, 66], [34, 268], [64, 239], [470], [418, 52], [105, 156], [356, 54], [457], [493, 62], [48, 648], [601, 60], [59, 61], [91, 59], [74, 493], [60], [603], [75, 251], [65, 67], [65, 68], [65, 199], [65], [65], [412, 13], [71], [71], [100, 446], [217, 85], [80, 595], [595, 76], [457], [72, 202], [457], [147, 86], [81, 650], [250, 99], [83], [83, 238], [147, 182], [355], [355, 87], [123, 94], [89, 123], [163], [115], [224, 92], [332], [514, 524], [97, 95], [95], [417, 53], [596], [163], [600], [600, 101], [117, 149], [149, 103], [164], [214, 119], [624, 106], [376, 340], [376, 108], [652, 157], [652, 110], [528], [112, 155], [137, 138], [114], [114], [140, 149], [412], [128, 129], [333], [120, 487], [104, 149], [617, 122], [560, 122], [122, 126], [122], [337, 299], [145, 146], [128, 256], [259], [130, 306], [457], [132, 77], [232, 205], [225, 134], [134, 135], [195, 151], [137, 139], [137], [149], [113], [113], [237], [475, 143], [333, 150], [145], [457], [154, 445], [44, 148], [185, 310], [194, 195], [457], [152, 647], [201, 180], [528, 170], [160, 233], [457], [548, 165], [547, 158], [169, 257], [313], [161], [88, 161], [161, 355], [177, 646], [552, 165], [192, 178], [218, 167], [171, 206], [567], [257, 206], [278], [410, 295], [409, 173], [200, 227], [200, 175], [555], [192, 181], [332, 197], [179, 332], [346], [136, 632], [186, 191], [282, 183], [333], [196, 198], [186, 188], [186, 189], [186, 190], [186, 511], [186, 357], [136, 216], [136, 486], [73, 231], [194], [278, 198], [332, 223], [536, 204], [69, 70], [207], [180, 262], [231], [202], [305, 277], [596], [164], [426, 451], [207], [207], [207], [207], [207], [207], [163], [221, 390], [638, 215], [84, 238], [457], [457], [457, 219], [242, 230], [243, 221], [332], [138], [232, 381], [422], [226, 358], [226, 229], [226, 210], [596], [236], [384, 242], [457, 245], [133, 255], [234, 342], [244, 303], [236, 374], [457], [253], [473, 462], [240, 142], [325, 319], [242], [261, 237], [457], [257], [312, 246], [96, 252], [248, 497], [260], [260], [50, 268], [545, 252], [252], [429], [163], [96, 263], [336, 257], [257, 55], [267, 278], [480], [332], [307, 276], [263], [328, 325], [265, 325], [269, 270], [394, 131], [389, 278], [269, 375], [457, 627], [273, 271], [271], [332], [274, 380], [361, 302], [304], [308, 430], [278], [278], [278], [550, 278], [284, 278], [278, 575], [278], [278], [278], [278], [290, 278], [393, 278], [278], [278], [278], [278], [278], [278], [278], [278], [163], [412], [300, 470], [361, 307], [32, 373], [370, 379], [304, 286], [264, 247], [411, 311], [425, 317], [211, 518], [333], [321, 449], [336, 314], [312, 517], [258, 318], [470], [98, 315], [320, 235], [336, 258], [325, 326], [235, 324], [329, 455], [121, 333], [322, 107], [235], [354, 499], [325, 327], [266, 325], [466, 325], [341, 335], [402, 495], [330, 428], [452, 212], [496, 372], [333], [341, 509], [259], [208, 176], [457], [338, 525], [457], [345, 503], [344, 350], [412], [350], [96], [193, 486], [192, 346], [331, 397], [348, 495], [457, 359], [144, 352], [144], [363, 567], [596], [457, 391], [457, 164], [283], [362, 380], [457, 364], [366], [360, 366], [369, 380], [385, 567], [457, 162], [272], [272, 365], [368, 478], [523, 367], [275, 380], [289], [382, 383], [515, 371], [459, 549], [373], [378, 298], [457, 635], [376, 619], [386, 396], [289, 287], [387, 437], [457], [521, 414], [382], [390], [163], [405, 279], [570, 316], [387, 213], [395], [392, 638], [435, 558], [638, 222], [536, 291], [313, 508], [442, 398], [395], [401], [406], [424], [542, 399], [412], [401], [401], [401], [469, 294], [539, 415], [406], [406], [406], [406], [457], [332], [412], [368], [416, 507], [296, 419], [433, 427], [576, 417], [297, 431], [403, 351], [641, 622], [641, 421], [604], [102, 423], [595, 429], [163], [21], [513, 404], [432, 220], [642, 429], [280, 500], [448, 439], [21], [457], [457, 434], [491, 141], [440, 447], [595, 443], [595, 438], [441, 213], [444, 213], [450, 407], [448, 595], [422], [332], [504, 241], [209, 468], [595, 220], [457], [536, 453], [163], [586, 451], [292, 454], [461, 293], [96, 463], [], [456, 645], [413, 605], [458, 598], [372], [510], [464, 473], [96, 509], [473, 471], [82, 347], [472, 479], [115, 116], [483, 228], [476, 477], [90, 123], [473, 474], [494], [490], [473, 436], [480, 237], [408, 174], [476], [532], [494], [488, 349], [388, 527], [481, 388], [228], [489, 593], [484, 543], [457], [163, 334], [349], [592], [163], [490], [163], [492, 567], [457], [420], [400, 460], [253, 502], [497, 253], [501, 519], [536, 281], [596], [253], [96], [163], [641, 309], [505, 641], [510], [96], [457], [536, 288], [510], [510], [420], [457, 522], [400], [96], [96], [641], [457], [29, 526], [532], [525, 574], [532], [569, 339], [529, 25], [596], [388], [530, 567], [561, 541], [553, 533], [249, 610], [400], [567], [457], [612, 534], [457], [538, 166], [546, 159], [184, 282], [596], [544, 543], [377], [561], [485, 543], [361, 516], [548, 166], [546], [166], [459, 605], [557, 551], [585, 557], [555, 623], [554, 163], [567], [571, 573], [555], [283, 187], [457], [332], [125, 559], [625, 567], [561], [457], [283, 187], [578, 579], [577, 565], [579, 566], [567], [457, 574], [332], [572], [581, 637], [572], [601, 63], [187, 285], [332], [579], [579, 583], [604, 582], [579], [584, 649], [424], [163, 580], [649, 591], [512, 589], [568, 163], [413], [596], [187, 564], [596], [609, 602], [163], [592, 562], [457], [465, 594], [620, 599], [596], [587, 470], [603, 620], [604], [107, 323], [608], [531, 620], [611, 607], [470, 606], [301, 470], [457, 611], [457], [608], [613, 621], [377, 457], [651, 644], [11, 620], [613], [652, 111], [8, 615], [560, 124], [109], [618, 626], [498, 253], [620, 614], [641, 506], [649, 556], [163], [163], [628, 629], [457, 634], [629], [109], [633, 153], [153, 630], [168, 192], [640], [457], [640, 636], [153, 631], [457], [4, 597], [457, 643], [535, 639], [482, 388], [595, 133], [457], [457], [], [649], [640], [467], [616, 8], [632, 192], [17, 6], [8]], "fname": "copy_internal", "n_num": 653}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 0, 0, 1, 5, 0, 1, 0, 0, 0.0, ["lea     options, __PRETTY_FUNCTION___7875; \"valid_options\"", "mov     edx, 0B8Dh; line", "lea     dst_name, file; \"src/copy.c\"", "lea     src_name, aCoReflinkModeR; \"! (co->reflink_mode == REFLINK_ALWAYS &\"...", "call    ___assert_fail"], ["lea~options,<TAG>", "mov~edx,0", "lea~dst_name,<TAG>", "lea~src_name,<TAG>", "call~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 6, 2, 0.029166666666666667, ["cmp     r10d, 2", "jz      loc_A59F"], ["cmp~r10d,0", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 7, -1, 0.0, ["add     rsp, 18h", "retn"], ["add~rsp,0", "retn"]], [4, 1, 2, 1, 1, 17, 1, 2, 6, 1, 0.06666666666666667, ["mov     cs:top_level_src_name, src_name", "mov     cs:top_level_dst_name, dst_name", "mov     [rsp+18h+first_dir_created_per_command_line_arg], 0", "movzx   edx, dl; new_dst", "push    rename_succeeded_0; rename_succeeded", "push    copy_into_self_0; copy_into_self", "lea     rax, [rsp+28h+first_dir_created_per_command_line_arg]", "push    rax; first_dir_created_per_command_line_arg", "push    1; command_line_arg", "mov     rename_succeeded_0, options; x", "mov     r8d, 0; ancestors", "mov     ecx, 0; parent", "call    copy_internal", "add     rsp, 20h", "mov     rsi, [rsp+18h+var_10]", "xor     rsi, fs:28h", "jnz     loc_A5BE"], ["mov~<TAG>,src_name", "mov~<TAG>,dst_name", "mov~[rsp+0],0", "movzx~edx,dl", "push~rename_succeeded_0", "push~copy_into_self_0", "lea~rax,[rsp+0]", "push~rax", "push~0", "mov~rename_succeeded_0,options", "mov~r8d,0", "mov~ecx,0", "call~FOO", "add~rsp,<STR>", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [1, 0, 16, 1, 0, 6, 2, 1, 0, 7, 0.0, ["sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+18h+var_10], rax", "xor     eax, eax", "test    options, options", "jz      loc_A504"], ["sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~options,options", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 5, 2, 0.125, ["cmp     eax, 2", "jz      short loc_A4B2"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 4, 3, 0.13333333333333333, ["cmp     byte ptr [options+17h], 0", "jz      short loc_A4A3"], ["cmp~[yte ptr [options+0],0", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 5, 3, 0.020833333333333332, ["cmp     byte ptr [options+2Ch], 0", "jnz     loc_A580"], ["cmp~[yte ptr [options+0],0", "jnz~FOO"]], [1, 0, 10, 0, 0, 3, 0, 1, 3, 4, 0.125, ["mov     r10d, [options+38h]", "cmp     r10d, 2", "ja      loc_A561"], ["mov~r10d,[options+0]", "cmp~r10d,0", "ja~FOO"]], [1, 0, 12, 0, 0, 4, 0, 1, 2, 5, 0.1, ["mov     eax, [options+0Ch]", "lea     r10d, [rax-1]", "cmp     r10d, 2", "ja      loc_A542"], ["mov~eax,[options+0]", "lea~r10d,[rax-1]+0]", "cmp~r10d,0", "ja~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 1, 6, 0.058333333333333334, ["cmp     dword ptr [options], 3", "ja      loc_A523"], ["cmp~<TAG>,0", "ja~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 2, -1, 0.0, ["lea     options, __PRETTY_FUNCTION___7875; \"valid_options\"", "mov     edx, 0B87h; line", "lea     dst_name, file; \"src/copy.c\"", "lea     src_name, aValidBackupTyp; \"VALID_BACKUP_TYPE (co->backup_type)\"", "call    ___assert_fail"], ["lea~options,<TAG>", "mov~edx,0", "lea~dst_name,<TAG>", "lea~src_name,<TAG>", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 6, -1, 0.0, ["lea     options, __PRETTY_FUNCTION___7875; \"valid_options\"", "mov     edx, 0B8Ah; line", "lea     dst_name, file; \"src/copy.c\"", "lea     src_name, aCoHardLinkCoSy; \"!(co->hard_link && co->symbolic_link)\"", "call    ___assert_fail"], ["lea~options,<TAG>", "mov~edx,0", "lea~dst_name,<TAG>", "lea~src_name,<TAG>", "call~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 4, -1, 0.0, ["lea     options, __PRETTY_FUNCTION___7875; \"valid_options\"", "mov     edx, 0B89h; line", "lea     dst_name, file; \"src/copy.c\"", "lea     src_name, aValidReflinkMo; \"VALID_REFLINK_MODE (co->reflink_mode)\"", "call    ___assert_fail"], ["lea~options,<TAG>", "mov~edx,0", "lea~dst_name,<TAG>", "lea~src_name,<TAG>", "call~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 3, -1, 0.0, ["lea     options, __PRETTY_FUNCTION___7875; \"valid_options\"", "mov     edx, 0B88h; line", "lea     dst_name, file; \"src/copy.c\"", "lea     src_name, aValidSparseMod; \"VALID_SPARSE_MODE (co->sparse_mode)\"", "call    ___assert_fail"], ["lea~options,<TAG>", "mov~edx,0", "lea~dst_name,<TAG>", "lea~src_name,<TAG>", "call~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 1, -1, 0.0, ["lea     options, __PRETTY_FUNCTION___7875; \"valid_options\"", "mov     edx, 0B86h; line", "lea     dst_name, file; \"src/copy.c\"", "lea     src_name, assertion; \"co != NULL\"", "call    ___assert_fail"], ["lea~options,<TAG>", "mov~edx,0", "lea~dst_name,<TAG>", "lea~src_name,<TAG>", "call~FOO"]]], "func_feature": [8, 3, 17, 1, 17, 18, 2, 73, 0.03873, 11, 3], "succs": [[], [0, 3], [], [2, 12], [16, 10], [1, 3], [5, 7], [5, 13], [14, 6], [8, 15], [9, 11], [], [], [], [], [], []], "fname": "copy", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 0, 1, 0, 5, 0, 0, 0, 0, 0.0, ["mov     rax, [p]", "mov     edx, 0", "div     table_size", "mov     rax, rdx", "retn"], ["mov~rax,<TAG>", "mov~edx,0", "div~,table_size", "mov~rax,rdx", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 5, 0.0, 0, 1], "succs": [[]], "fname": "src_to_dest_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 1, 0, 0, 5, 0, 1, 0, 0, 0.0, ["mov     rax, [b+8]", "cmp     [a+8], rax", "setz    al", "movzx   eax, al", "jmp     short loc_A5DF"], ["mov~rax,[b+0]", "cmp~[a+0],rax", "setz~al", "movzx~eax,al", "jmp~FOO"]], [1, 0, 2, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     eax, 0", "mov     rdx, [b]", "cmp     [a], rdx", "jz      short loc_A5E3"], ["mov~eax,0", "mov~rdx,<TAG>", "cmp~<TAG>,rdx", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 1, 0, 1, 0, 0.0, ["and     eax, 1", "retn"], ["and~eax,0", "retn"]]], "func_feature": [0, 1, 2, 0, 3, 3, 0, 11, 0.0, 0, 0], "succs": [[2], [0, 2], []], "fname": "src_to_dest_compare", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 2, 8, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, x", "mov     a, [a+10h]; ptr", "call    free", "mov     rdi, a; ptr", "call    free", "pop     a", "retn"], ["push~rbx", "mov~rbx,x", "mov~a,[a+0]", "call~FOO", "mov~rdi,a", "call~FOO", "pop~a", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 2, 8, 0.0, 0, 0], "succs": [[]], "fname": "src_to_dest_free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 28h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.3333333333333333, ["mov     rax, [rsp+28h+var_10]", "xor     rax, fs:28h", "jnz     short loc_A661"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 0, 4, 1, 1, 12, 2, 2, 0, 2, 0.0, ["sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "mov     [rsp+28h+var_28], ino", "mov     [rsp+28h+dev], dev_0", "mov     [rsp+28h+var_18], 0", "mov     dev_0, rsp; entry", "mov     ino, cs:src_to_dest; table", "call    hash_delete", "test    ent, ent", "jz      short loc_A64C"], ["sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~<TAG>,ino", "mov~[rsp+0],dev_0", "mov~[rsp+0],0", "mov~dev_0,rsp", "mov~ino,<TAG>", "call~FOO", "test~ent,ent", "jz~FOO"]], [0, 0, 3, 0, 1, 2, 0, 1, 1, 2, 0.0, ["mov     rdi, ent; x", "call    src_to_dest_free"], ["mov~rdi,ent", "call~FOO"]]], "func_feature": [3, 3, 5, 3, 5, 5, 3, 20, 0.06667, 2, 2], "succs": [[], [0, 2], [], [1, 4], [1]], "fname": "forget_created", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.30000000000000004, ["mov     rdx, [rsp+28h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_A6B7"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 2, 0.07500000000000001, ["mov     eax, 0", "jmp     short loc_A69B"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 1, 2, 0.07500000000000001, ["mov     e, [e+10h]"], ["mov~e,[e+0]"]], [1, 0, 5, 1, 1, 11, 2, 2, 0, 3, 0.0, ["sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "mov     [rsp+28h+var_28], ino", "mov     [rsp+28h+dev], dev_0", "mov     dev_0, rsp; entry", "mov     ino, cs:src_to_dest; table", "call    hash_lookup", "test    e, e", "jz      short loc_A6B0"], ["sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~<TAG>,ino", "mov~[rsp+0],dev_0", "mov~dev_0,rsp", "mov~ino,<TAG>", "call~FOO", "test~e,e", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 3, -1, 0.0, ["add     rsp, 28h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 3, 5, 2, 6, 6, 2, 20, 0.075, 2, 2], "succs": [[4, 5], [0], [0], [1, 2], [], []], "fname": "src_to_dest_lookup", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 0, 5, 1, 3, 21, 1, 4, 0, 0, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r13, name", "mov     r12, ino", "mov     rbp, dev", "mov     edi, 18h; n", "call    xmalloc", "mov     rbx, rax", "mov     rdi, name; string", "call    xstrdup", "mov     [ent+10h], rax", "mov     [ent], ino", "mov     [ent+8], dev", "mov     rsi, ent; entry", "mov     rdi, cs:src_to_dest; table", "call    hash_insert", "test    ent_from_table, ent_from_table", "jz      short loc_A722"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r13,name", "mov~r12,ino", "mov~rbp,dev", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~rdi,name", "call~FOO", "mov~[ent+0],rax", "mov~<TAG>,ino", "mov~[ent+0],dev", "mov~rsi,ent", "mov~rdi,<TAG>", "call~FOO", "test~ent_from_table,ent_from_table", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 0, -1, 0.0, ["add     rsp, 8", "pop     ent", "pop     ent_from_table", "pop     ino", "pop     name", "retn"], ["add~rsp,0", "pop~ent", "pop~ent_from_table", "pop~ino", "pop~name", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.05, ["mov     eax, 0", "jmp     short loc_A717"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 1, 0, 1, 3, 0, 1, 0, -1, 0.05, ["mov     rdi, ent; x", "call    src_to_dest_free", "mov     rax, [ent_from_table+10h]"], ["mov~rdi,ent", "call~FOO", "mov~rax,[ent_from_table+0]"]], [0, 0, 3, 0, 0, 3, 0, 1, 0, 1, 0.15000000000000002, ["mov     dev, ent_from_table", "cmp     ent, ent_from_table", "jz      short loc_A727"], ["mov~dev,ent_from_table", "cmp~ent,ent_from_table", "jz~FOO"]]], "func_feature": [5, 1, 8, 0, 6, 6, 4, 36, 0.04167, 1, 2], "succs": [[1, 5], [], [], [2], [2], [3, 4]], "fname": "remember_copied", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[3, 0, 2, 1, 1, 10, 1, 2, 0, 0, 0.0, ["sub     rsp, 8", "lea     r8, src_to_dest_free; data_freer", "lea     rcx, src_to_dest_compare; comparator", "lea     rdx, src_to_dest_hash; hasher", "mov     esi, 0; tuning", "mov     edi, 67h ; 'g'; candidate", "call    hash_initialize", "mov     cs:src_to_dest, rax", "test    rax, rax", "jz      short loc_A767"], ["sub~rsp,0", "lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~<TAG>,rax", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 1, 3, 0, 3, 2, 1, 13, 0.0, 4, 2], "succs": [[1, 2], [], []], "fname": "hash_init", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 0, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rdi, cs:src_to_dest; table", "call    hash_free", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rdi,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 5, 0.0, 1, 2], "succs": [[]], "fname": "forget_all", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[6, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0.0, ["mov     [scan], edi", "mov     qword ptr [scan+18h], 0", "mov     qword ptr [scan+28h], 0", "mov     qword ptr [scan+8], 0", "mov     byte ptr [scan+20h], 0", "mov     byte ptr [scan+21h], 0", "mov     dword ptr [scan+10h], 1", "retn"], ["mov~<TAG>,edi", "mov~[word ptr [scan+0],0", "mov~[word ptr [scan+0],0", "mov~[word ptr [scan+0],0", "mov~[yte ptr [scan+0],0", "mov~[yte ptr [scan+0],0", "mov~[word ptr [scan+0],0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 8, 0.0, 0, 0], "succs": [[]], "fname": "extent_scan_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 4, 0, 0, 1, 0, 1, 0, 0, 0.003048780487804878, ["jmp     short loc_AAB0"], ["jmp~FOO"]], [1, 0, 41, 1, 0, 5, 0, 0, 10, 4, 0.2701219512195122, ["mov     rax, [last_ei+8]", "add     rax, [last_ei]", "mov     [scan+8], rax", "cmp     r12d, 47h ; 'G'", "jbe     loc_A7EF"], ["mov~rax,[last_ei+0]", "add~rax,<TAG>", "mov~[scan+0],rax", "cmp~r12d,0", "jbe~FOO"]], [0, 0, 41, 1, 0, 4, 0, 0, 11, 3, 0.06341463414634146, ["mov     r9, new_logical", "sub     r9, rdx", "cmp     length_adjust, rdi", "jnb     short loc_AA3D"], ["mov~r9,new_logical", "sub~r9,rdx", "cmp~length_adjust,rdi", "jnb~FOO"]], [0, 0, 41, 0, 0, 3, 0, 1, 10, 4, 0.1573170731707317, ["mov     rsi, [scan+8]", "cmp     rsi, rdx", "ja      short loc_A9F9"], ["mov~rsi,[scan+0]", "cmp~rsi,rdx", "ja~FOO"]], [0, 0, 41, 1, 0, 4, 0, 0, 11, 4, 0.018597560975609755, ["mov     rsi, [last_ei+8]", "add     rsi, [last_ei]", "cmp     rsi, rdx", "jbe     short loc_A981"], ["mov~rsi,[last_ei+0]", "add~rsi,<TAG>", "cmp~rsi,rdx", "jbe~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 9, 3, 0.014227642276422757, ["mov     eax, r12d", "mov     [scan+18h], rax"], ["mov~eax,r12d", "mov~[scan+0],rax"]], [1, 1, 41, 0, 0, 3, 0, 1, 8, 4, 0.1336382113821138, ["mov     byte ptr [scan+21h], 1", "cmp     r12d, 48h ; 'H'", "ja      short loc_AAA9"], ["mov~[yte ptr [scan+0],0", "cmp~r12d,<STR>", "ja~FOO"]], [1, 0, 41, 0, 0, 2, 0, 1, 9, 4, 0.016463414634146342, ["cmp     byte ptr [scan+21h], 0", "jnz     short loc_AAA9"], ["cmp~[yte ptr [scan+0],0", "jnz~FOO"]], [2, 0, 3, 0, 0, 4, 0, 1, 3, 2, 0.0018292682926829267, ["mov     byte ptr [scan+21h], 1", "cmp     qword ptr [scan+8], 0", "setnz   [rsp+1058h+var_1049]", "jmp     loc_AA0F"], ["mov~[yte ptr [scan+0],0", "cmp~[word ptr [scan+0],0", "setnz~[rsp+0]", "jmp~FOO"]], [0, 0, 41, 0, 0, 3, 1, 1, 2, 3, 0.25121951219512195, ["mov     eax, [rsp+1058h+var_1034]", "test    eax, eax", "jz      loc_A8F6"], ["mov~eax,[rsp+0]", "test~eax,eax", "jz~FOO"]], [0, 1, 41, 0, 0, 2, 0, 0, 8, 4, 0.13892276422764233, ["cmp     r12d, 48h ; 'H'", "jbe     short loc_AA5F"], ["cmp~r12d,<STR>", "jbe~FOO"]], [1, 0, 41, 0, 0, 2, 1, 1, 7, 5, 0.28109756097560973, ["test    byte ptr [last_ei+10h], 1", "jz      short loc_AA83"], ["test~[yte ptr [last_ei+0],0", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 12, 2, 0.03353658536585366, ["cmp     qword ptr [scan+8], 0", "jnz     short loc_AA0F"], ["cmp~[word ptr [scan+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 13, 2, 0.0, ["mov     byte ptr [scan+20h], 1"], ["mov~[yte ptr [scan+0],0"]], [2, 0, 41, 0, 0, 7, 2, 1, 5, 7, 0.24695121951219512, ["test    rax, rax", "mov     eax, 1", "cmovs   rsi, rax", "mov     eax, esi", "and     eax, 1", "mov     [rsp+1058h+var_1049], al", "jnz     loc_A932"], ["test~rax,rax", "mov~eax,0", "cmovs~rsi,rax", "mov~eax,esi", "and~eax,0", "mov~[rsp+0],al", "jnz~FOO"]], [1, 0, 41, 0, 0, 2, 0, 1, 5, 8, 0.0, ["mov     esi, 1", "jmp     loc_A881"], ["mov~esi,0", "jmp~FOO"]], [2, 0, 41, 3, 0, 9, 0, 0, 4, 8, 0.23109756097560977, ["add     rcx, rax", "mov     [scan+18h], rcx", "mov     rdi, [scan+28h]; p", "sub     last_ei, rdi", "mov     esi, 0", "mov     edx, 18h", "mov     rax, rdx", "mul     rcx", "jo      loc_A928"], ["add~rcx,rax", "mov~[scan+0],rcx", "mov~rdi,[scan+0]", "sub~last_ei,rdi", "mov~esi,0", "mov~edx,0", "mov~rax,rdx", "mul~,rcx", "jo~FOO"]], [1, 0, 41, 1, 0, 10, 0, 0, 11, 7, 0.12835365853658537, ["mov     esi, r12d", "lea     rdi, [rsi+rsi*2]", "mov     rsi, [scan+28h]", "lea     rbx, [rsi+rdi*8]", "mov     [last_ei], rdx", "mov     rdx, [rax+10h]", "mov     [last_ei+8], rdx", "mov     eax, [rax+28h]", "mov     [last_ei+10h], eax", "add     r12d, 1"], ["mov~esi,r12d", "lea~rdi,<TAG>", "mov~rsi,[scan+0]", "lea~rbx,<TAG>", "mov~<TAG>,rdx", "mov~rdx,[rax+0]", "mov~[last_ei+0],rdx", "mov~eax,[rax+0]", "mov~[last_ei+0],eax", "add~r12d,0"]], [1, 0, 0, 0, 1, 5, 0, 1, 4, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6956; \"extent_scan_read\"", "mov     edx, 7Eh ; '~'; line", "lea     rsi, aSrcExtentScanC; \"src/extent-scan.c\"", "lea     rdi, aScanEiCountSiz; \"scan->ei_count <= SIZE_MAX - fiemap->fm\"...", "call    ___assert_fail"], ["lea~rcx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO"]], [0, 0, 41, 0, 0, 6, 0, 1, 3, 9, 0.24024390243902438, ["mov     rcx, [scan+18h]", "mov     eax, eax", "mov     rdx, rax", "not     rdx", "cmp     rcx, rdx", "ja      loc_A909"], ["mov~rcx,[scan+0]", "mov~eax,eax", "mov~rdx,rax", "not~rdx", "cmp~rcx,rdx", "ja~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, 1, 0.04390243902439024, ["movzx   eax, [rsp+1058h+var_1049]", "mov     last_ei, [rsp+1058h+var_40]", "xor     last_ei, fs:28h", "jnz     loc_AABA"], ["movzx~eax,[rsp+0]", "mov~last_ei,[rsp+0]", "xor~last_ei,<TAG>", "jnz~FOO"]], [2, 0, 4, 0, 0, 3, 0, 1, 2, 2, 0.022560975609756097, ["mov     [rsp+1058h+var_1049], 0", "cmp     qword ptr [scan+8], 0", "jnz     loc_AA0F"], ["mov~[rsp+0],0", "cmp~[word ptr [scan+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 2, 0.0, ["mov     byte ptr [scan+20h], 1", "jmp     loc_AA0F"], ["mov~[yte ptr [scan+0],0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 10, 2, 0.031097560975609756, ["mov     [rsp+1058h+var_1049], 1", "jmp     loc_AA0F"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 41, 1, 0, 7, 0, 1, 10, 5, 0.020731707317073172, ["sub     r12d, 1", "mov     eax, r12d", "lea     rcx, [rax+rax*2]", "mov     rdx, [scan+28h]", "lea     rbx, [rdx+rcx*8-18h]", "mov     [scan+18h], rax", "jmp     short loc_AA6C"], ["sub~r12d,0", "mov~eax,r12d", "lea~rcx,<TAG>", "mov~rdx,[scan+0]", "lea~rbx,[rdx+0]", "mov~[scan+0],rax", "jmp~FOO"]], [1, 0, 41, 1, 0, 3, 0, 0, 12, 6, 0.2329268292682927, ["add     ecx, 1", "cmp     [rsp+1058h+var_1034], ecx", "jbe     loc_AA4F"], ["add~ecx,0", "cmp~[rsp+0],ecx", "jbe~FOO"]], [0, 0, 41, 1, 0, 5, 0, 1, 12, 7, 0.027134146341463414, ["add     rdi, rsi", "mov     [last_ei+8], rdi", "mov     eax, [rax+28h]", "mov     [last_ei+10h], eax", "jmp     short loc_A9A5"], ["add~rdi,rsi", "mov~[last_ei+0],rdi", "mov~eax,[rax+0]", "mov~[last_ei+0],eax", "jmp~FOO"]], [1, 0, 41, 2, 0, 5, 0, 1, 12, 7, 0.020731707317073172, ["mov     [rax], new_logical", "sub     rdi, length_adjust", "mov     [rax+10h], rdi", "sub     ecx, 1", "jmp     loc_A9A5"], ["mov~<TAG>,new_logical", "sub~rdi,length_adjust", "mov~[rax+0],rdi", "sub~ecx,0", "jmp~FOO"]], [1, 0, 41, 0, 0, 4, 1, 1, 10, 5, 0.046341463414634146, ["mov     esi, [rax+28h]", "and     esi, 0FFFFFFFEh", "cmp     [last_ei+10h], esi", "jz      loc_A956"], ["mov~esi,[rax+0]", "and~esi,0", "cmp~[last_ei+0],esi", "jz~FOO"]], [0, 0, 41, 0, 0, 2, 1, 1, 9, 5, 0.2121951219512195, ["test    r12d, r12d", "jz      short loc_A978"], ["test~r12d,r12d", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [2, 0, 41, 2, 1, 7, 0, 2, 6, 6, 0.23780487804878048, ["lea     rsi, [rcx+rcx*2]", "shl     rsi, 3; n", "call    xrealloc", "mov     [scan+28h], rax", "add     rbx, rax", "cmp     [rsp+1058h+var_1034], 0", "jz      loc_AA4F"], ["lea~rsi,<TAG>", "shl~rsi,0", "call~FOO", "mov~[scan+0],rax", "add~rbx,rax", "cmp~[rsp+0],0", "jz~FOO"]], [3, 2, 41, 0, 1, 18, 1, 2, 1, 3, 0.28292682926829266, ["mov     ecx, 200h", "mov     eax, 0", "mov     rdi, fiemap", "rep stosq", "mov     rax, [scan+8]", "mov     [rsp+1058h+var_1048], rax", "mov     edx, [scan+10h]", "mov     [rsp+1058h+var_1038], edx", "mov     [rsp+1058h+var_1030], 48h ; 'H'", "not     rax", "mov     [rsp+1058h+var_1040], rax", "mov     rdx, fiemap", "mov     esi, 0C020660Bh; request", "mov     edi, [scan+0]; fd", "mov     eax, 0", "call    _ioctl", "test    eax, eax", "js      loc_A8DD"], ["mov~ecx,<STR>", "mov~eax,0", "mov~rdi,fiemap", "stosq~<TAG>,", "mov~rax,[scan+0]", "mov~[rsp+0],rax", "mov~edx,[scan+0]", "mov~[rsp+0],edx", "mov~[rsp+0],<STR>", "not~rax", "mov~[rsp+0],rax", "mov~rdx,fiemap", "mov~esi,0", "mov~edi,[scan+0]", "mov~eax,0", "call~FOO", "test~eax,eax", "js~FOO"]], [2, 1, 41, 1, 0, 16, 1, 0, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 1028h", "mov     rbp, scan", "mov     rax, fs:28h", "mov     [rsp+1058h+var_40], rax", "xor     eax, eax", "mov     rbx, [scan+28h]", "mov     r12d, 0", "lea     r13, [rsp+1058h+var_1048]", "mov     r15, 7FFFFFFFFFFFFFFFh", "lea     r14, [r13+20h]"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rbp,scan", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rbx,[scan+0]", "mov~r12d,0", "lea~r13,[rsp+0]", "mov~r15,0", "lea~r14,[r13+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 1028h", "pop     rbx", "pop     scan", "pop     si_0", "pop     fiemap", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~scan", "pop~si_0", "pop~fiemap", "pop~r14", "pop~r15", "retn"]], [1, 0, 41, 0, 0, 4, 0, 1, 9, 3, 0.24430894308943096, ["mov     eax, r12d", "mov     [scan+18h], rax", "cmp     byte ptr [scan+21h], 0", "jnz     short loc_AAB0"], ["mov~eax,r12d", "mov~[scan+0],rax", "cmp~[yte ptr [scan+0],0", "jnz~FOO"]], [0, 0, 41, 1, 0, 6, 0, 1, 7, 7, 0.14390243902439023, ["mov     rdx, [rsp+1058h+var_1028]", "mov     rdi, [rsp+1058h+var_1018]", "mov     rax, r15", "sub     rax, rdi", "cmp     rdx, rax", "ja      short loc_A937"], ["mov~rdx,[rsp+0]", "mov~rdi,[rsp+0]", "mov~rax,r15", "sub~rax,rdi", "cmp~rdx,rax", "ja~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 8, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6956; \"extent_scan_read\"", "mov     edx, 8Dh; line", "lea     rsi, aSrcExtentScanC; \"src/extent-scan.c\"", "lea     rdi, aFmExtentsIFeLo; \"fm_extents[i].fe_logical <= OFF_T_MAX -\"...", "call    ___assert_fail"], ["lea~rcx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO"]], [0, 0, 41, 2, 0, 10, 0, 1, 13, 6, 0.045121951219512194, ["mov     edx, ecx", "lea     rax, ds:0[rdx*8]", "sub     rax, rdx", "lea     rax, [r14+rax*8]", "mov     rdx, [rax]", "mov     rdi, [rax+10h]", "mov     rsi, r15", "sub     rsi, rdi", "cmp     rdx, rsi", "ja      loc_A937"], ["mov~edx,ecx", "lea~rax,<TAG>", "sub~rax,rdx", "lea~rax,<TAG>", "mov~rdx,<TAG>", "mov~rdi,[rax+0]", "mov~rsi,r15", "sub~rsi,rdi", "cmp~rdx,rsi", "ja~FOO"]], [1, 0, 41, 0, 0, 3, 0, 1, 8, 6, 0.1420731707317073, ["mov     ecx, 0", "mov     rax, r14", "jmp     loc_A9D9"], ["mov~ecx,0", "mov~rax,r14", "jmp~FOO"]], [0, 0, 41, 1, 0, 5, 0, 1, 11, 5, 0.024695121951219513, ["mov     rsi, [last_ei+8]", "mov     r8, rsi", "add     r8, [last_ei]", "cmp     r8, rdx", "jnz     loc_A9ED"], ["mov~rsi,[last_ei+0]", "mov~r8,rsi", "add~r8,<TAG>", "cmp~r8,rdx", "jnz~FOO"]]], "func_feature": [6, 9, 33, 9, 42, 61, 1, 198, 0.09544, 5, 20], "succs": [[23], [0, 32], [27, 12], [17, 2], [17, 2], [23], [36, 5], [24, 5], [20], [8, 19], [36, 7], [10, 6], [20, 13], [20], [30, 31], [14], [14, 15], [25], [], [16, 18], [34, 35], [20, 22], [20], [20], [1], [11, 39], [25], [25], [41, 4], [3, 28], [], [11, 37], [9, 21], [32], [], [], [1, 23], [40, 38], [], [29, 38], [29], [26, 4]], "fname": "extent_scan_read", "n_num": 42}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 0, 0, 2, 1, 10, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rcx, dest; to", "mov     rax, arg", "mov     edx, [a+10h]; tofd", "mov     a, [a+8]; from", "mov     r8d, [a+14h]; flags", "mov     edi, [a]; fromfd", "call    _linkat", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rcx,dest", "mov~rax,arg", "mov~edx,[a+0]", "mov~a,[a+0]", "mov~r8d,[a+0]", "mov~edi,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 10, 0.0, 0, 2], "succs": [[]], "fname": "try_link", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 1, 3, 1, 1, 11, 0, 1, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     r12, dstname", "mov     rbp, buf", "call    last_component", "sub     rax, dstname", "mov     rbx, dstdirlen", "lea     rdi, [dstdirlen+9]; size", "cmp     dsttmpsize, 100h", "jbe     short loc_AB0F"], ["push~r12", "push~rbp", "push~rbx", "mov~r12,dstname", "mov~rbp,buf", "call~FOO", "sub~rax,dstname", "mov~rbx,dstdirlen", "lea~rdi,[dstdirlen+0]", "cmp~dsttmpsize,<STR>", "jbe~FOO"]], [0, 0, 2, 0, 1, 4, 1, 2, 0, 1, 0.08333333333333333, ["call    _malloc", "mov     buf, rax", "test    dsttmp, dsttmp", "jz      short loc_AB31"], ["call~FOO", "mov~buf,rax", "test~dsttmp,dsttmp", "jz~FOO"]], [2, 0, 1, 0, 1, 8, 0, 1, 0, 1, 0.08333333333333333, ["mov     rdx, dstdirlen; n", "mov     rsi, dstname; src", "mov     rdi, dsttmp; dest", "call    _mempcpy", "mov     rcx, 5858585858587543h", "mov     [rax], rcx", "mov     byte ptr [rax+8], 0", "mov     rax, dsttmp"], ["mov~rdx,dstdirlen", "mov~rsi,dstname", "mov~rdi,dsttmp", "call~FOO", "mov~rcx,0", "mov~<TAG>,rcx", "mov~[yte ptr [rax+0],0", "mov~rax,dsttmp"]], [0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["pop     dstdirlen", "pop     rbp", "pop     dstname", "retn"], ["pop~dstdirlen", "pop~rbp", "pop~dstname", "retn"]]], "func_feature": [3, 1, 4, 0, 4, 5, 2, 27, 0.04167, 0, 1], "succs": [[1, 2], [2, 3], [3], []], "fname": "samedir_template", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 0, 0, 2, 1, 8, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rdx, dest; to", "mov     rax, arg", "mov     esi, [a+8]; tofd", "mov     dest, [a]; from", "call    _symlinkat", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rdx,dest", "mov~rax,arg", "mov~esi,[a+0]", "mov~dest,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 8, 0.0, 0, 2], "succs": [[]], "fname": "try_symlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 12, 0, 0, 2, 0, 1, 0, 0, 0.15, ["cmp     ebx, 11h", "jnz     loc_AC30"], ["cmp~ebx,0", "jnz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 1, 2, 0.14375, ["cmp     bpl, 1", "jnz     loc_AC30"], ["cmp~bpl,0", "jnz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.11666666666666667, ["mov     eax, ebx", "mov     rcx, [rsp+178h+var_40]", "xor     rcx, fs:28h", "jnz     short loc_AC8D"], ["mov~eax,ebx", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 4, 0, 0, 3, 0, 1, 6, 2, 0.10833333333333334, ["lea     rax, [rsp+178h+buf]", "cmp     dsttmp, rax", "jz      short loc_AC30"], ["lea~rax,[rsp+0]", "cmp~dsttmp,rax", "jz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 7, 2, 0.0, ["mov     rdi, dsttmp; ptr", "call    free", "jmp     short loc_AC30"], ["mov~rdi,dsttmp", "call~FOO", "jmp~FOO"]], [0, 0, 15, 0, 1, 4, 1, 2, 1, 2, 0.010416666666666666, ["call    _linkat", "mov     ebx, eax", "test    eax, eax", "jz      short loc_AC30"], ["call~FOO", "mov~ebx,eax", "test~eax,eax", "jz~FOO"]], [0, 0, 3, 0, 1, 2, 0, 1, 4, 2, 0.0125, ["call    ___errno_location", "mov     ebx, [rax]"], ["call~FOO", "mov~ebx,<TAG>"]], [0, 0, 14, 0, 1, 3, 0, 2, 2, 3, 0.04583333333333333, ["call    ___errno_location", "mov     ebx, [rax]", "jmp     loc_AB93"], ["call~FOO", "mov~ebx,<TAG>", "jmp~FOO"]], [0, 0, 6, 0, 1, 2, 0, 1, 6, 4, 0.0, ["call    ___errno_location", "mov     ebx, [rax]"], ["call~FOO", "mov~ebx,<TAG>"]], [1, 0, 7, 0, 1, 8, 1, 2, 5, 4, 0.058333333333333334, ["mov     rcx, dstname; new", "mov     edx, r13d; newfd", "mov     rsi, dsttmp; old", "mov     edi, r13d; oldfd", "call    _renameat", "mov     ebx, 0FFFFFFFFh", "test    eax, eax", "jz      short loc_AC78"], ["mov~rcx,dstname", "mov~edx,r13d", "mov~rsi,dsttmp", "mov~edi,r13d", "call~FOO", "mov~ebx,0", "test~eax,eax", "jz~FOO"]], [1, 0, 5, 0, 1, 5, 0, 2, 6, 3, 0.041666666666666664, ["mov     edx, 0; flag", "mov     rsi, dsttmp; name", "mov     edi, r13d; fd", "call    _unlinkat", "jmp     loc_ABFE"], ["mov~edx,0", "mov~rsi,dsttmp", "mov~edi,r13d", "call~FOO", "jmp~FOO"]], [0, 0, 5, 0, 1, 2, 0, 1, 5, 3, 0.07083333333333333, ["call    ___errno_location", "mov     ebx, [rax]"], ["call~FOO", "mov~ebx,<TAG>"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 11, 0, 1, 6, 1, 2, 3, 3, 0.16666666666666666, ["lea     rsi, [rsp+178h+buf]; buf", "mov     rdi, dstname; dstname", "call    samedir_template", "mov     rbp, rax", "test    dsttmp, dsttmp", "jz      short loc_AC29"], ["lea~rsi,[rsp+0]", "mov~rdi,dstname", "call~FOO", "mov~rbp,rax", "test~dsttmp,dsttmp", "jz~FOO"]], [2, 0, 9, 0, 1, 13, 1, 2, 4, 4, 0.15, ["mov     [rsp+178h+arg.srcdir], r15d", "mov     dsttmp, [rsp+178h+srcname]", "mov     [rsp+178h+arg.srcname], rax", "mov     [rsp+178h+arg.dstdir], r13d", "mov     [rsp+178h+arg.flags], r14d", "lea     rdx, [rsp+178h+arg]; args", "mov     r8d, 6; x_suffix_len", "lea     rcx, try_link; tryfunc", "mov     esi, 0; suffixlen", "mov     rdi, dsttmp; tmpl", "call    try_tempname_len", "test    eax, eax", "jz      short loc_AC57"], ["mov~[rsp+0],r15d", "mov~dsttmp,[rsp+0]", "mov~[rsp+0],rax", "mov~[rsp+0],r13d", "mov~[rsp+0],r14d", "lea~rdx,[rsp+0]", "mov~r8d,0", "lea~rcx,<TAG>", "mov~esi,0", "mov~rdi,dsttmp", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 16, 1, 0, 19, 2, 1, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 148h", "mov     r15d, edi", "mov     [rsp+178h+srcname], srcname_0", "mov     r13d, edx", "mov     r12, dstname", "mov     r14d, r8d", "mov     ebp, r9d", "mov     ebx, [rsp+178h+linkat_errno]", "mov     rax, fs:28h", "mov     [rsp+178h+var_40], rax", "xor     eax, eax", "test    ebx, ebx", "js      short loc_AC12"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r15d,edi", "mov~[rsp+0],srcname_0", "mov~r13d,edx", "mov~r12,dstname", "mov~r14d,r8d", "mov~ebp,r9d", "mov~ebx,[rsp+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~ebx,ebx", "js~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 148h", "pop     rbx", "pop     rbp", "pop     dstname", "pop     dstdir", "pop     flags", "pop     srcdir", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~dstname", "pop~dstdir", "pop~flags", "pop~srcdir", "retn"]]], "func_feature": [11, 7, 23, 1, 17, 24, 1, 87, 0.06324, 2, 2], "succs": [[2, 13], [0, 2], [16, 12], [2, 4], [2], [2, 7], [2], [1], [10], [8, 10], [3], [3], [], [14, 6], [9, 11], [1, 5], []], "fname": "force_linkat", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 4, 0, 0, 3, 0, 1, 0, 0, 0.10476190476190478, ["lea     rax, [rsp+148h+buf]", "cmp     dsttmp, rax", "jz      short loc_AD47"], ["lea~rax,[rsp+0]", "cmp~dsttmp,rax", "jz~FOO"]], [1, 0, 6, 0, 1, 8, 1, 2, 5, 3, 0.07380952380952381, ["mov     rcx, dstname; new", "mov     edx, r13d; newfd", "mov     rsi, dsttmp; old", "mov     edi, r13d; oldfd", "call    _renameat", "mov     ebx, 0FFFFFFFFh", "test    eax, eax", "jz      short loc_AD18"], ["mov~rcx,dstname", "mov~edx,r13d", "mov~rsi,dsttmp", "mov~edi,r13d", "call~FOO", "mov~ebx,0", "test~eax,eax", "jz~FOO"]], [1, 0, 5, 0, 2, 7, 0, 3, 6, 3, 0.0, ["call    ___errno_location", "mov     ebx, [rax]", "mov     edx, 0; flag", "mov     rsi, dsttmp; name", "mov     edi, r13d; fd", "call    _unlinkat", "jmp     loc_AD18"], ["call~FOO", "mov~ebx,<TAG>", "mov~edx,0", "mov~rsi,dsttmp", "mov~edi,r13d", "call~FOO", "jmp~FOO"]], [0, 0, 5, 0, 1, 2, 0, 1, 5, 3, 0.04047619047619048, ["call    ___errno_location", "mov     ebx, [rax]"], ["call~FOO", "mov~ebx,<TAG>"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.12380952380952381, ["mov     eax, ebx", "mov     rcx, [rsp+148h+var_30]", "xor     rcx, fs:28h", "jnz     short loc_ADA2"], ["mov~eax,ebx", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 3, -1, 0.0, ["add     rsp, 120h", "pop     rbx", "pop     rbp", "pop     dstname", "pop     dstdir", "pop     srcname", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~dstname", "pop~dstdir", "pop~srcname", "retn"]], [2, 0, 8, 0, 1, 10, 1, 2, 4, 4, 0.14285714285714288, ["mov     [rsp+148h+arg.srcname], srcname", "mov     [rsp+148h+arg.dstdir], r13d", "mov     rdx, rsp; args", "mov     r8d, 6; x_suffix_len", "lea     rcx, try_symlink; tryfunc", "mov     esi, 0; suffixlen", "mov     rdi, dsttmp; tmpl", "call    try_tempname_len", "test    eax, eax", "jz      short loc_AD6C"], ["mov~<TAG>,srcname", "mov~[rsp+0],r13d", "mov~rdx,rsp", "mov~r8d,0", "lea~rcx,<TAG>", "mov~esi,0", "mov~rdi,dsttmp", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 15, 1, 0, 16, 2, 1, 0, 3, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 120h", "mov     r14, srcname", "mov     r13d, esi", "mov     r12, dstname", "mov     ebp, ecx", "mov     ebx, r8d", "mov     rax, fs:28h", "mov     [rsp+148h+var_30], rax", "xor     eax, eax", "test    r8d, r8d", "js      short loc_AD2C"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r14,srcname", "mov~r13d,esi", "mov~r12,dstname", "mov~ebp,ecx", "mov~ebx,r8d", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~r8d,r8d", "js~FOO"]], [0, 0, 3, 0, 1, 2, 0, 1, 4, 2, 0.014285714285714287, ["call    ___errno_location", "mov     ebx, [rax]"], ["call~FOO", "mov~ebx,<TAG>"]], [0, 0, 10, 0, 1, 6, 1, 2, 3, 3, 0.16666666666666669, ["lea     rsi, [rsp+148h+buf]; buf", "mov     rdi, dstname; dstname", "call    samedir_template", "mov     rbp, rax", "test    dsttmp, dsttmp", "jz      short loc_AD40"], ["lea~rsi,[rsp+0]", "mov~rdi,dstname", "call~FOO", "mov~rbp,rax", "test~dsttmp,dsttmp", "jz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 7, 2, 0.0, ["mov     rdi, dsttmp; ptr", "call    free", "jmp     short loc_AD47"], ["mov~rdi,dsttmp", "call~FOO", "jmp~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 1, 2, 0.15000000000000002, ["cmp     bpl, 1", "jnz     short loc_AD47"], ["cmp~bpl,0", "jnz~FOO"]], [0, 0, 13, 0, 1, 3, 0, 2, 2, 3, 0.04761904761904762, ["call    ___errno_location", "mov     ebx, [rax]", "jmp     short loc_ACC7"], ["call~FOO", "mov~ebx,<TAG>", "jmp~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 2, 2, 0.1523809523809524, ["cmp     ebx, 11h", "jnz     short loc_AD47"], ["cmp~ebx,0", "jnz~FOO"]], [0, 0, 14, 0, 1, 4, 1, 2, 1, 2, 0.011904761904761906, ["call    _symlinkat", "mov     ebx, eax", "test    eax, eax", "jz      short loc_AD47"], ["call~FOO", "mov~ebx,eax", "test~eax,eax", "jz~FOO"]]], "func_feature": [11, 7, 23, 1, 16, 23, 2, 80, 0.06429, 2, 2], "succs": [[11, 5], [0, 2], [0], [0], [], [4, 6], [], [1, 3], [12, 15], [5], [9, 7], [5], [5, 14], [12], [10, 5], [5, 13]], "fname": "force_symlinkat", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 2, 0, 0, 2, 0, 1, 0, 0, 0.125, ["cmp     eax, 0FFFFFFFFh", "jz      short loc_ADF6"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 4, 0, 1, 9, 0, 2, 0, 2, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     r12, src_name", "mov     rbp, dst_name", "call    qcopy_acl", "mov     ebx, eax", "cmp     eax, 0FFFFFFFEh", "jz      short loc_ADC9"], ["push~r12", "push~rbp", "push~rbx", "mov~r12,src_name", "mov~rbp,dst_name", "call~FOO", "mov~ebx,eax", "cmp~eax,0", "jz~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 2, -1, 0.0, ["mov     eax, ebx", "pop     ret", "pop     rbp", "pop     r12", "retn"], ["mov~eax,ebx", "pop~ret", "pop~rbp", "pop~r12", "retn"]], [2, 0, 1, 0, 3, 11, 0, 4, 1, -1, 0.041666666666666664, ["mov     rdi, src_name; arg", "call    quote", "mov     dst_name, rax", "call    ___errno_location", "mov     rcx, rbp", "lea     rdx, aS+2; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     short loc_ADC2"], ["mov~rdi,src_name", "call~FOO", "mov~dst_name,rax", "call~FOO", "mov~rcx,rbp", "lea~rdx,<TAG>", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [4, 0, 1, 0, 4, 16, 0, 5, 2, 0, 0.0, ["mov     rdi, dst_name; arg", "call    quote", "mov     src_name, rax", "mov     edx, 5; category", "lea     rsi, aPreservingPerm; \"preserving permissions for %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     dst_name, rax", "call    ___errno_location", "mov     rcx, r12", "mov     rdx, rbp; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     short loc_ADC2"], ["mov~rdi,dst_name", "call~FOO", "mov~src_name,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~dst_name,rax", "call~FOO", "mov~rcx,r12", "mov~rdx,rbp", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]]], "func_feature": [8, 0, 12, 0, 5, 6, 3, 43, 0.03333, 2, 0], "succs": [[2, 4], [0, 3], [], [2], [2]], "fname": "copy_acl", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 2, 0, 1, 8, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbp, name", "call    qset_acl", "mov     ebx, eax", "test    eax, eax", "jnz     short loc_AE51"], ["push~r12", "push~rbp", "push~rbx", "mov~rbp,name", "call~FOO", "mov~ebx,eax", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 0, -1, 0.0, ["mov     eax, ebx", "pop     ret", "pop     rbp", "pop     r12", "retn"], ["mov~eax,ebx", "pop~ret", "pop~rbp", "pop~r12", "retn"]], [4, 0, 1, 0, 4, 16, 0, 5, 0, 0, 0.0, ["mov     rdi, name; arg", "call    quote", "mov     r12, rax", "mov     edx, 5; category", "lea     rsi, aSettingPermiss; \"setting permissions for %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     name, rax", "call    ___errno_location", "mov     rcx, r12", "mov     rdx, rbp; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     short loc_AE4A"], ["mov~rdi,name", "call~FOO", "mov~r12,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~name,rax", "call~FOO", "mov~rcx,r12", "mov~rdx,rbp", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]]], "func_feature": [5, 1, 7, 0, 3, 3, 4, 29, 0.0, 1, 0], "succs": [[1, 2], [], [1]], "fname": "set_acl", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 12, 0, 0, 2, 0, 1, 0, 0, 0.11742424242424243, ["cmp     buf_size, r15", "ja      short loc_AF4B"], ["cmp~buf_size,r15", "ja~FOO"]], [0, 0, 12, 0, 1, 4, 0, 2, 4, 2, 0.25757575757575757, ["mov     rdi, buffer; ptr", "call    free", "cmp     buf_size, r14", "ja      short loc_AEFF"], ["mov~rdi,buffer", "call~FOO", "cmp~buf_size,r14", "ja~FOO"]], [1, 0, 12, 0, 0, 1, 0, 0, 6, 6, 0.06060606060606061, ["mov     buf_size, 7FFFFFFFFFFFFFFFh"], ["mov~buf_size,0"]], [1, 0, 1, 0, 1, 4, 0, 2, 4, -1, 0.011363636363636364, ["mov     rdi, buffer; ptr", "call    free", "mov     ebp, 0", "jmp     short loc_AEED"], ["mov~rdi,buffer", "call~FOO", "mov~ebp,0", "jmp~FOO"]], [1, 0, 12, 0, 1, 3, 0, 2, 3, 4, 0.06439393939393939, ["call    ___errno_location", "cmp     dword ptr [rax], 22h ; '\"'", "jz      short loc_AF34"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 4, -1, 0.011363636363636364, ["mov     byte ptr [buffer+link_length+0], 0"], ["mov~[yte ptr [buffer+0],0"]], [0, 0, 12, 0, 0, 2, 0, 1, 3, 3, 0.3143939393939394, ["cmp     buf_size, link_length", "ja      short loc_AEE7"], ["cmp~buf_size,link_length", "ja~FOO"]], [0, 0, 12, 1, 0, 2, 0, 1, 5, 6, 0.10227272727272728, ["add     buf_size, buf_size", "jmp     short loc_AF0E"], ["add~buf_size,buf_size", "jmp~FOO"]], [5, 0, 12, 1, 0, 15, 0, 1, 0, 6, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r13, file", "lea     rbx, [size+1]", "cmp     size, 401h", "mov     eax, 401h", "cmovnb  rbx, rax", "mov     r14, 3FFFFFFFFFFFFFFFh", "mov     r15, 7FFFFFFFFFFFFFFEh", "jmp     short loc_AF0E"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r13,file", "lea~rbx,[size+0]", "cmp~size,0", "mov~eax,0", "cmovnb~rbx,rax", "mov~r14,0", "mov~r15,0", "jmp~FOO"]], [0, 0, 12, 0, 1, 7, 1, 2, 2, 4, 0.3484848484848485, ["mov     rdx, buf_size; len", "mov     rsi, buffer; buf", "mov     rdi, file; path", "call    _readlink", "mov     r12, rax", "test    link_length, link_length", "js      short loc_AECE"], ["mov~rdx,buf_size", "mov~rsi,buffer", "mov~rdi,file", "call~FOO", "mov~r12,rax", "test~link_length,link_length", "js~FOO"]], [0, 0, 12, 0, 1, 5, 1, 2, 1, 5, 0.35984848484848486, ["mov     rdi, buf_size; size", "call    _malloc", "mov     rbp, rax", "test    buffer, buffer", "jz      short loc_AEED"], ["mov~rdi,buf_size", "call~FOO", "mov~rbp,rax", "test~buffer,buffer", "jz~FOO"]], [2, 0, 1, 0, 1, 4, 0, 2, 6, 0, 0.011363636363636364, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch", "mov     ebp, 0", "jmp     short loc_AEED"], ["call~FOO", "mov~<TAG>,0", "mov~ebp,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["mov     rax, rbp", "add     rsp, 8", "pop     buf_size", "pop     rbp", "pop     r12", "pop     file", "pop     r14", "pop     r15", "retn"], ["mov~rax,rbp", "add~rsp,0", "pop~buf_size", "pop~rbp", "pop~r12", "pop~file", "pop~r14", "pop~r15", "retn"]]], "func_feature": [6, 2, 16, 0, 13, 18, 2, 59, 0.12762, 0, 3], "succs": [[2, 11], [0, 7], [10], [12], [3, 6], [12], [1, 5], [10], [10], [4, 6], [9, 12], [12], []], "fname": "areadlink_with_size", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 0, 0, 1, 1, 3, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     edi, 1; status", "call    usage"], ["sub~rsp,0", "mov~edi,0", "call~FOO"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 3, 0.0, 0, 1], "succs": [[]], "fname": "__argmatch_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[4, 0, 12, 1, 0, 16, 1, 1, 0, 0, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 28h", "mov     r8, arg", "mov     r14, valsize", "mov     valsize, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "repne scasb", "mov     rbx, [arglist]", "mov     [rsp+58h+var_58], 0FFFFFFFFFFFFFFFFh", "test    rbx, rbx", "jz      loc_B070"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r8,arg", "mov~r14,valsize", "mov~valsize,0", "mov~eax,0", "scasb~<TAG>,", "mov~rbx,<TAG>", "mov~<TAG>,0", "test~rbx,rbx", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 0, 0, 0.0, ["mov     rax, [rsp+58h+var_58]", "add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     valsize", "pop     r15", "retn"], ["mov~rax,<TAG>", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~valsize", "pop~r15", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 0, 1, 0.015151515151515152, ["mov     [rsp+58h+var_58], i", "jmp     loc_B070"], ["mov~<TAG>,i", "jmp~FOO"]], [2, 0, 1, 0, 0, 4, 0, 0, 0, 1, 0.05303030303030303, ["cmp     [rsp+58h+ambiguous], 0", "mov     rax, 0FFFFFFFFFFFFFFFEh", "cmovz   rax, [rsp+58h+var_58]", "mov     [rsp+58h+var_58], rax"], ["cmp~[rsp+0],0", "mov~rax,0", "cmovz~rax,<TAG>", "mov~<TAG>,rax"]], [1, 0, 11, 2, 0, 5, 1, 1, 0, 2, 0.34090909090909094, ["add     i, 1", "mov     rbx, [arglist+i*8]", "add     r13, valsize", "test    rbx, rbx", "jz      short loc_B05B"], ["add~i,0", "mov~rbx,<TAG>", "add~r13,valsize", "test~rbx,rbx", "jz~FOO"]], [0, 0, 11, 0, 1, 6, 1, 2, 0, 3, 0.3787878787878788, ["mov     rdx, arglen; n", "mov     rsi, [rsp+58h+s2]; s2", "mov     rdi, rbx; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_AFD6"], ["mov~rdx,arglen", "mov~rsi,[rsp+0]", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 11, 2, 1, 12, 1, 2, 0, 3, 0.030303030303030304, ["mov     rdi, [rsp+58h+var_58]", "imul    rdi, valsize", "add     rdi, rax; s1", "mov     rdx, valsize; n", "mov     rsi, r13; s2", "call    _memcmp", "test    eax, eax", "movzx   eax, [rsp+58h+ambiguous]", "mov     edx, 1", "cmovnz  eax, edx", "mov     [rsp+58h+ambiguous], al", "jmp     short loc_AFD6"], ["mov~rdi,<TAG>", "imul~rdi,valsize", "add~rdi,rax", "mov~rdx,valsize", "mov~rsi,r13", "call~FOO", "test~eax,eax", "movzx~eax,[rsp+0]", "mov~edx,0", "cmovnz~eax,edx", "mov~[rsp+0],al", "jmp~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 0, 3, 0.030303030303030304, ["mov     [rsp+58h+ambiguous], 1", "jmp     loc_AFD6"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 11, 0, 0, 1, 0, 0, 0, 3, 0.06818181818181818, ["mov     [rsp+58h+var_58], i"], ["mov~<TAG>,i"]], [2, 0, 11, 0, 0, 9, 0, 1, 0, 4, 0.07575757575757576, ["not     rcx", "lea     r12, [rcx-1]", "mov     [rsp+58h+vallist], vallist_0", "mov     r15, arglist", "mov     [rsp+58h+s2], r8", "mov     r13, vallist_0", "mov     [rsp+58h+ambiguous], 0", "mov     ebp, 0", "jmp     short loc_AFE6"], ["not~rcx", "lea~r12,[rcx-1]+0]", "mov~[rsp+0],vallist_0", "mov~r15,arglist", "mov~[rsp+0],r8", "mov~r13,vallist_0", "mov~[rsp+0],0", "mov~ebp,0", "jmp~FOO"]], [2, 0, 11, 1, 0, 8, 0, 1, 0, 2, 0.33333333333333337, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     rdi, rbx", "repne scasb", "mov     rbx, rcx", "not     rbx", "sub     rbx, 1", "cmp     rbx, arglen", "jz      short loc_AFC9"], ["mov~rcx,0", "mov~rdi,rbx", "scasb~<TAG>,", "mov~rbx,rcx", "not~rbx", "sub~rbx,0", "cmp~rbx,arglen", "jz~FOO"]], [0, 0, 11, 0, 0, 3, 1, 1, 0, 4, 0.12121212121212122, ["mov     rax, [rsp+58h+vallist]", "test    rax, rax", "jz      short loc_B051"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 0, 4, 0.25, ["cmp     [rsp+58h+var_58], 0FFFFFFFFFFFFFFFFh", "jz      short loc_AFD2"], ["cmp~<TAG>,0", "jz~FOO"]]], "func_feature": [2, 5, 12, 1, 13, 18, 1, 79, 0.13054, 0, 7], "succs": [[1, 9], [], [1], [1], [3, 5], [10, 4], [4], [4], [4], [5], [2, 12], [6, 7], [8, 11]], "fname": "argmatch", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 3, 0, 0, 7, 0, 1, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbp, context", "mov     r12, value", "cmp     problem, 0FFFFFFFFFFFFFFFFh", "jz      short loc_B0F0"], ["push~r12", "push~rbp", "push~rbx", "mov~rbp,context", "mov~r12,value", "cmp~problem,0", "jz~FOO"]], [6, 0, 0, 0, 3, 19, 0, 3, 0, -1, 0.0, ["mov     rsi, context; arg", "mov     edi, 1; n", "call    quote_n", "mov     context, rax", "mov     rdx, value; arg", "mov     esi, 8; s", "mov     edi, 0; n", "call    quotearg_n_style", "mov     r8, rbp", "mov     rcx, rax", "mov     rdx, format; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "pop     format", "pop     rbp", "pop     value", "retn"], ["mov~rsi,context", "mov~edi,0", "call~FOO", "mov~context,rax", "mov~rdx,value", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~r8,rbp", "mov~rcx,rax", "mov~rdx,format", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "pop~format", "pop~rbp", "pop~value", "retn"]], [2, 0, 1, 0, 1, 6, 0, 2, 0, 0, 0.08333333333333333, ["mov     edx, 5; category", "lea     value, aInvalidArgumen; \"invalid argument %s for %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rbx, rax", "jmp     short loc_B0AC"], ["mov~edx,0", "lea~value,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "jmp~FOO"]], [2, 0, 1, 0, 1, 5, 0, 1, 0, -1, 0.08333333333333333, ["mov     edx, 5; category", "lea     value, aAmbiguousArgum; \"ambiguous argument %s for %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rbx, rax"], ["mov~edx,0", "lea~value,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax"]]], "func_feature": [5, 0, 7, 0, 4, 4, 1, 37, 0.04167, 2, 0], "succs": [[2, 3], [], [1], [1]], "fname": "argmatch_invalid", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 0, 9, 0, 0, 3, 0, 1, 0, 0, 0.05555555555555556, ["mov     r14d, 0", "mov     ebx, 0", "jmp     short loc_B19E"], ["mov~r14d,0", "mov~ebx,0", "jmp~FOO"]], [3, 0, 10, 1, 2, 21, 1, 3, 0, 2, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r15, arglist", "mov     rbp, vallist", "mov     r13, valsize", "mov     rbx, cs:stderr@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     vallist, aValidArguments; \"Valid arguments are:\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     r12, [arglist]", "test    r12, r12", "jz      loc_B1DF"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r15,arglist", "mov~rbp,vallist", "mov~r13,valsize", "mov~rbx,<TAG>", "mov~edx,0", "lea~vallist,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~r12,<TAG>", "test~r12,r12", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 2, 4, 0.2111111111111111, ["test    i, i", "jz      short loc_B163"], ["test~i,i", "jz~FOO"]], [1, 0, 9, 2, 0, 5, 1, 1, 4, 2, 0.3, ["add     i, 1", "mov     r12, [arglist+i*8]", "add     rbp, valsize", "test    r12, r12", "jz      short loc_B1DF"], ["add~i,0", "mov~r12,<TAG>", "add~rbp,valsize", "test~r12,r12", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     valsize", "pop     r14", "pop     arglist", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~valsize", "pop~r14", "pop~arglist", "retn"]], [1, 0, 1, 0, 1, 3, 0, 2, 2, 0, 0.044444444444444446, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     short loc_B1FB"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 0, 3, 0, 0, 2, -1, 0.044444444444444446, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [2, 0, 9, 0, 2, 9, 0, 2, 3, 3, 0.15555555555555556, ["mov     rdi, r12; arg", "call    quote", "mov     rcx, rax", "lea     rdx, aS_0; \"\\n  - %s\"", "mov     esi, 1", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     eax, 0", "call    ___fprintf_chk", "mov     last_val, rbp"], ["mov~rdi,r12", "call~FOO", "mov~rcx,rax", "lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,<TAG>", "mov~eax,0", "call~FOO", "mov~last_val,rbp"]], [0, 0, 9, 0, 1, 6, 1, 2, 3, 4, 0.05555555555555556, ["mov     rdx, valsize; n", "mov     rsi, rbp; s2", "mov     rdi, last_val; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_B163"], ["mov~rdx,valsize", "mov~rsi,rbp", "mov~rdi,last_val", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 0.23333333333333334, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_B20A"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [2, 0, 9, 0, 2, 9, 0, 3, 4, 3, 0.03333333333333333, ["mov     rdi, r12; arg", "call    quote", "mov     rcx, rax", "lea     rdx, aS; \", %s\"", "mov     esi, 1", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     eax, 0", "call    ___fprintf_chk", "jmp     short loc_B18E"], ["mov~rdi,r12", "call~FOO", "mov~rcx,rax", "lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,<TAG>", "mov~eax,0", "call~FOO", "jmp~FOO"]]], "func_feature": [8, 4, 15, 0, 11, 15, 1, 73, 0.10303, 4, 4], "succs": [[2], [0, 9], [8, 7], [9, 2], [], [4], [4], [3], [10, 7], [5, 6], [3]], "fname": "argmatch_valid", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 1, 0, 3, 11, 0, 4, 0, 0, 0.0, ["mov     rdx, res; problem", "mov     rsi, arg; value", "mov     rdi, context; context", "call    argmatch_invalid", "mov     rdx, valsize; valsize", "mov     rsi, vallist; vallist", "mov     rdi, arglist; arglist", "call    argmatch_valid", "call    exit_fn", "mov     rax, 0FFFFFFFFFFFFFFFFh", "jmp     short loc_B24C"], ["mov~rdx,res", "mov~rsi,arg", "mov~rdi,context", "call~FOO", "mov~rdx,valsize", "mov~rsi,vallist", "mov~rdi,arglist", "call~FOO", "call~exit_fn", "mov~rax,0", "jmp~FOO"]], [1, 0, 2, 1, 1, 20, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r15, context", "mov     r13, arg", "mov     rbx, arglist", "mov     rbp, vallist", "mov     r12, valsize", "mov     r14, exit_fn", "mov     vallist, valsize; valsize", "mov     arglist, vallist; vallist", "mov     arg, arglist; arglist", "mov     context, arg; arg", "call    argmatch", "test    res, res", "js      short loc_B25B"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r15,context", "mov~r13,arg", "mov~rbx,arglist", "mov~rbp,vallist", "mov~r12,valsize", "mov~r14,exit_fn", "mov~vallist,valsize", "mov~arglist,vallist", "mov~arg,arglist", "mov~context,arg", "call~FOO", "test~res,res", "js~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "pop     arglist", "pop     vallist", "pop     valsize", "pop     arg", "pop     exit_fn", "pop     context", "retn"], ["add~rsp,0", "pop~arglist", "pop~vallist", "pop~valsize", "pop~arg", "pop~exit_fn", "pop~context", "retn"]]], "func_feature": [4, 1, 6, 0, 3, 3, 4, 39, 0.0, 0, 2], "succs": [[2], [0, 2], []], "fname": "__xargmatch_internal", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0.0, ["mov     rax, r12", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "retn"], ["mov~rax,r12", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "retn"]], [0, 0, 3, 0, 1, 6, 1, 2, 2, -1, 0.15000000000000002, ["mov     rdx, valsize; n", "mov     rsi, rbp; s2", "mov     rdi, value; s1", "call    _memcmp", "test    eax, eax", "jz      short loc_B2C1"], ["mov~rdx,valsize", "mov~rsi,rbp", "mov~rdi,value", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.05, ["mov     r12d, 0", "jmp     short loc_B2C1"], ["mov~r12d,0", "jmp~FOO"]], [1, 0, 3, 2, 0, 5, 1, 1, 3, -1, 0.0, ["mov     r12, [rbx]", "add     rbp, valsize", "add     rbx, 8", "test    r12, r12", "jnz     short loc_B2A0"], ["mov~r12,<TAG>", "add~rbp,valsize", "add~rbx,0", "test~r12,r12", "jnz~FOO"]], [0, 0, 3, 0, 0, 4, 0, 0, 1, -1, 0.1, ["mov     r13, valsize", "mov     r14, value", "mov     rbp, vallist", "lea     rbx, [arglist+8]"], ["mov~r13,valsize", "mov~r14,value", "mov~rbp,vallist", "lea~rbx,[arglist+0]"]], [0, 0, 5, 0, 0, 8, 1, 1, 0, 1, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     r12, [arglist]", "test    r12, r12", "jz      short loc_B2CD"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~r12,<TAG>", "test~r12,r12", "jz~FOO"]]], "func_feature": [1, 3, 5, 0, 6, 8, 0, 32, 0.05, 0, 2], "succs": [[], [0, 3], [0], [0, 1], [1], [2, 4]], "fname": "argmatch_to_argument", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.20555555555555552, ["cmp     byte ptr [s], 0", "jz      short loc_B2F0"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 2, 0, 0.06666666666666667, ["jmp     short loc_B2DE"], ["jmp~FOO"]], [0, 0, 6, 0, 0, 4, 1, 1, 0, 2, 0.0, ["push    rbx", "mov     rbx, s", "test    s, s", "jz      short loc_B300"], ["push~rbx", "mov~rbx,s", "test~s,s", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 0, 2, 2, -1, 0.04444444444444444, ["mov     rdi, s; name", "call    last_component", "cmp     rax, s", "jz      short loc_B2F7"], ["mov~rdi,s", "call~FOO", "cmp~rax,s", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 2, -1, 0.08888888888888888, ["lea     s, asc_15150; \"~\""], ["lea~s,<TAG>"]], [0, 0, 5, 0, 1, 5, 1, 2, 1, 1, 0.06111111111111111, ["lea     rdi, aSimpleBackupSu; \"SIMPLE_BACKUP_SUFFIX\"", "call    _getenv", "mov     s, rax", "test    s, s", "jz      short loc_B2F0"], ["lea~rdi,<TAG>", "call~FOO", "mov~s,rax", "test~s,s", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 3, -1, 0.0, ["mov     cs:simple_backup_suffix, rbx", "pop     rbx", "retn"], ["mov~<TAG>,rbx", "pop~rbx", "retn"]]], "func_feature": [2, 2, 7, 0, 7, 10, 2, 20, 0.06667, 3, 0], "succs": [[3, 4], [0], [0, 5], [4, 6], [6], [1, 4], []], "fname": "set_simple_backup_suffix", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 0, 3, 0, 2, 5, 0, 2, 0, 0, 0.02091346153846154, ["mov     rdi, s; ptr", "call    free", "call    ___errno_location", "mov     dword ptr [rax], 0Ch", "mov     r15d, 0"], ["mov~rdi,s", "call~FOO", "call~FOO", "mov~<TAG>,0", "mov~r15d,0"]], [2, 0, 62, 0, 1, 14, 4, 2, 18, 3, 0.031009615384615385, ["test    rax, rax", "mov     eax, 1", "cmovs   rsi, rax", "and     esi, 1", "lea     rax, [rcx+rcx]", "test    sil, sil", "cmovz   rcx, rax", "mov     rsi, rcx; size", "mov     [rsp+0B8h+var_80], rcx", "mov     rdi, r15; ptr", "call    _realloc", "mov     r12, rax", "test    rax, rax", "jz      loc_B86D"], ["test~rax,rax", "mov~eax,0", "cmovs~rsi,rax", "and~esi,0", "lea~rax,<TAG>", "test~sil,sil", "cmovz~rcx,rax", "mov~rsi,rcx", "mov~[rsp+0],rcx", "mov~rdi,r15", "call~FOO", "mov~r12,rax", "test~rax,rax", "jz~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 8, 3, 0.18197115384615387, ["cmp     eax, 3", "jz      loc_B86D"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 62, 0, 0, 3, 0, 1, 7, 4, 0.35336538461538464, ["mov     eax, [rsp+0B8h+var_94]", "cmp     eax, 2", "jz      short loc_B733"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 62, 0, 1, 4, 1, 2, 7, 5, 0.4401442307692308, ["mov     rdi, dirp; dirp", "call    _readdir", "test    rax, rax", "jz      loc_B6FA"], ["mov~rdi,dirp", "call~FOO", "test~rax,rax", "jz~FOO"]], [4, 0, 62, 2, 1, 10, 0, 1, 6, 5, 0.12211538461538463, ["call    ___errno_location", "cmp     dword ptr [rax], 0Ch", "setz    al", "movzx   eax, al", "add     eax, 2", "mov     [rsp+0B8h+var_94], eax", "mov     [rbx], bp", "add     rbx, r13", "mov     dword ptr [rbx], 7E317E2Eh", "mov     byte ptr [rbx+4], 0"], ["call~FOO", "cmp~<TAG>,0", "setz~al", "movzx~eax,al", "add~eax,0", "mov~[rsp+0],eax", "mov~<TAG>,bp", "add~rbx,r13", "mov~<TAG>,0", "mov~[yte ptr [rbx+0],0"]], [1, 0, 62, 0, 1, 4, 0, 2, 8, 4, 0.33798076923076925, ["call    ___errno_location", "mov     ebp, [rax]", "cmp     ebp, 11h", "jnz     loc_B8C1"], ["call~FOO", "mov~ebp,<TAG>", "cmp~ebp,0", "jnz~FOO"]], [2, 0, 62, 0, 1, 11, 1, 2, 7, 3, 0.3403846153846154, ["cmp     [rsp+0B8h+backup_type], 1", "setnz   r8b", "movzx   r8d, r8b; flags", "mov     rax, [rsp+0B8h+base_offset]", "lea     rcx, [s+rax]; dst", "mov     edx, [rsp+0B8h+sdir]; fd2", "mov     rsi, [rsp+0B8h+file]; src", "mov     edi, 0FFFFFF9Ch; fd1", "call    renameatu", "test    eax, eax", "jz      loc_B8E3"], ["cmp~[rsp+0],0", "setnz~r8b", "movzx~r8d,r8b", "mov~rax,[rsp+0]", "lea~rcx,<TAG>", "mov~edx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [3, 0, 62, 0, 0, 6, 0, 1, 2, 6, 0.042548076923076925, ["mov     [rsp+0B8h+sdir], 0FFFFFFFFh", "mov     [rsp+0B8h+base_max], 0", "mov     r14d, 0", "lea     s, [rsp+0B8h+sdir]", "mov     [rsp+0B8h+pnew_fd], rax", "jmp     loc_B48A"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r14d,0", "lea~s,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [4, 0, 63, 1, 1, 21, 1, 2, 1, 2, 0.030288461538461542, ["mov     rdi, cs:simple_backup_suffix", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "repne scasb", "mov     rsi, rcx", "not     rsi", "mov     rcx, rsi", "mov     [rsp+0B8h+simple_backup_suffix_size], rsi", "mov     rax, [rsp+0B8h+filelen]", "lea     rsi, [rax+1]", "mov     [rsp+0B8h+n], rsi", "cmp     simple_backup_suffix_size_0, 9", "mov     eax, 9", "cmovb   simple_backup_suffix_size_0, rax", "add     rcx, rsi", "mov     [rsp+0B8h+ssize], rcx", "mov     rdi, ssize_0; size", "call    _malloc", "mov     r15, rax", "test    s, s", "jz      loc_B886"], ["mov~rdi,<TAG>", "mov~rcx,0", "mov~eax,0", "scasb~<TAG>,", "mov~rsi,rcx", "not~rsi", "mov~rcx,rsi", "mov~[rsp+0],rsi", "mov~rax,[rsp+0]", "lea~rsi,[rax+0]", "mov~[rsp+0],rsi", "cmp~simple_backup_suffix_size_0,0", "mov~eax,0", "cmovb~simple_backup_suffix_size_0,rax", "add~rcx,rsi", "mov~[rsp+0],rcx", "mov~rdi,ssize_0", "call~FOO", "mov~r15,rax", "test~s,s", "jz~FOO"]], [2, 0, 62, 1, 0, 5, 0, 0, 17, 4, 0.028605769230769233, ["mov     esi, 0", "mov     edx, 2", "mov     rax, rdx", "mul     rcx", "jo      loc_B721"], ["mov~esi,0", "mov~edx,0", "mov~rax,rdx", "mul~,rcx", "jo~FOO"]], [0, 0, 62, 1, 0, 10, 0, 0, 16, 5, 0.08966346153846154, ["movzx   eax, r12b", "mov     [rsp+0B8h+var_68], rax", "add     rax, rbp", "mov     [rsp+0B8h+var_90], rax", "movzx   esi, r12b", "mov     [rsp+0B8h+var_94], esi", "mov     rsi, [rsp+0B8h+filelen]", "lea     rcx, [rsi+rax+4]", "cmp     rcx, [rsp+0B8h+var_80]", "jbe     loc_B72B"], ["movzx~eax,r12b", "mov~[rsp+0],rax", "add~rax,rbp", "mov~[rsp+0],rax", "movzx~esi,r12b", "mov~[rsp+0],esi", "mov~rsi,[rsp+0]", "lea~rcx,[rsi+0]", "cmp~rcx,[rsp+0]", "jbe~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 13, 6, 0.1887019230769231, ["cmp     dl, 7Eh ; '~'", "jnz     loc_B4EB"], ["cmp~dl,0", "jnz~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 12, 7, 0.15841346153846156, ["mov     ebp, 1", "jmp     loc_B587"], ["mov~ebp,0", "jmp~FOO"]], [4, 0, 62, 2, 0, 9, 1, 0, 13, 7, 0.014423076923076924, ["cmp     dl, 39h ; '9'", "setz    al", "and     r12d, eax", "add     rbp, 1", "movzx   edx, byte ptr [rbx+rbp]", "movsx   eax, dl", "sub     eax, 30h ; '0'", "cmp     eax, 9", "jbe     short loc_B56B"], ["cmp~dl,0", "setz~al", "and~r12d,eax", "add~rbp,0", "movzx~edx,<TAG>", "movsx~eax,dl", "sub~eax,0", "cmp~eax,0", "jbe~FOO"]], [3, 0, 62, 1, 0, 5, 0, 1, 19, 7, 0.0, ["mov     byte ptr [rax], 30h ; '0'", "sub     rax, 1", "movzx   edx, byte ptr [rax]", "cmp     dl, 39h ; '9'", "jz      short loc_B67E"], ["mov~<TAG>,0", "sub~rax,0", "movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [4, 0, 62, 2, 1, 16, 0, 2, 18, 7, 0.0903846153846154, ["mov     rax, [rsp+0B8h+filelen]", "add     rax, r12", "mov     byte ptr [rax], 2Eh ; '.'", "mov     byte ptr [rax+1], 7Eh ; '~'", "mov     byte ptr [rax+2], 30h ; '0'", "mov     rsi, [rsp+0B8h+var_68]", "lea     r15, [rax+rsi+2]", "lea     rdx, [rbp+2]; n", "mov     rsi, rbx; src", "mov     rdi, r15; dest", "call    _memcpy", "add     rbp, r15", "lea     rax, [rbp-1]", "movzx   edx, byte ptr [rbp-1]", "cmp     dl, 39h ; '9'", "jnz     short loc_B68D"], ["mov~rax,[rsp+0]", "add~rax,r12", "mov~<TAG>,0", "mov~[yte ptr [rax+0],0", "mov~[yte ptr [rax+0],0", "mov~rsi,[rsp+0]", "lea~r15,[rax+0]", "lea~rdx,[rbp+0]", "mov~rsi,rbx", "mov~rdi,r15", "call~FOO", "add~rbp,r15", "lea~rax,[rbp-1]+0]", "movzx~edx,[yte ptr [rbp-1]+0]", "cmp~dl,0", "jnz~FOO"]], [0, 0, 62, 0, 1, 6, 1, 2, 17, 6, 0.0019230769230769232, ["mov     rax, [rsp+0B8h+filelen]", "lea     rdi, [r15+rax+2]; s1", "mov     rsi, rbx; s2", "call    _memcmp", "test    eax, eax", "jg      loc_B4EB"], ["mov~rax,[rsp+0]", "lea~rdi,[r15+0]", "mov~rsi,rbx", "call~FOO", "test~eax,eax", "jg~FOO"]], [0, 0, 62, 0, 0, 2, 0, 1, 16, 6, 0.024519230769230772, ["cmp     rbp, rdx", "jnz     loc_B4EB"], ["cmp~rbp,rdx", "jnz~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 9, 4, 0.15384615384615385, ["cmp     eax, 1", "jnz     loc_B433"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 64, 0, 1, 3, 0, 2, 1, 3, 0.0, ["mov     edi, 0; s", "call    set_simple_backup_suffix", "jmp     loc_B38A"], ["mov~edi,0", "call~FOO", "jmp~FOO"]], [3, 1, 65, 2, 1, 29, 1, 2, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 88h", "mov     [rsp+0B8h+dir_fd], edi", "mov     rbx, file_0", "mov     [rsp+0B8h+file], file_0", "mov     [rsp+0B8h+backup_type], edx", "mov     [rsp+0B8h+rename], cl", "mov     rax, fs:28h", "mov     [rsp+0B8h+var_40], rax", "xor     eax, eax", "mov     dir_fd_0, file_0; name", "call    last_component", "mov     rdi, rax", "mov     rsi, rax", "sub     rsi, file_0", "mov     [rsp+0B8h+base_offset], rsi", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "repne scasb", "not     rcx", "lea     rax, [base_offset_0+rcx-1]", "mov     [rsp+0B8h+filelen], rax", "cmp     cs:simple_backup_suffix, 0", "jz      loc_B40A"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~[rsp+0],edi", "mov~rbx,file_0", "mov~[rsp+0],file_0", "mov~[rsp+0],edx", "mov~[rsp+0],cl", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~dir_fd_0,file_0", "call~FOO", "mov~rdi,rax", "mov~rsi,rax", "sub~rsi,file_0", "mov~[rsp+0],rsi", "mov~rcx,0", "mov~eax,0", "scasb~<TAG>,", "not~rcx", "lea~rax,[base_offset_0+0]", "mov~[rsp+0],rax", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 14, 6, 0.1329326923076923, ["cmp     byte ptr [rbx+rbp+1], 0", "jnz     loc_B4EB"], ["cmp~[yte ptr [rbx+0],0", "jnz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.030288461538461542, ["mov     rax, r15", "mov     rsi, [rsp+0B8h+var_40]", "xor     rsi, fs:28h", "jnz     short loc_B8F2"], ["mov~rax,r15", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 1, 5, 0, 2, 10, 2, 0.0021634615384615386, ["mov     rdi, s; ptr", "call    free", "mov     [rbx], ebp", "mov     r15d, 0", "jmp     short loc_B886"], ["mov~rdi,s", "call~FOO", "mov~<TAG>,ebp", "mov~r15d,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 6, 2, 0.031009615384615385, ["test    dirp, dirp", "jz      short loc_B886"], ["test~dirp,dirp", "jz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 7, 2, 0.0, ["mov     rdi, dirp; dirp", "call    _closedir", "jmp     short loc_B886"], ["mov~rdi,dirp", "call~FOO", "jmp~FOO"]], [3, 0, 62, 1, 2, 10, 0, 2, 12, 6, 0.03197115384615385, ["call    ___errno_location", "mov     r13, rax", "mov     dword ptr [rax], 0", "mov     esi, 3; name", "mov     edi, r12d; fd", "call    _fpathconf", "cmp     dword ptr [r13+0], 0", "setz    dl", "movzx   edx, dl", "sub     rax, rdx"], ["call~FOO", "mov~r13,rax", "mov~<TAG>,0", "mov~esi,0", "mov~edi,r12d", "call~FOO", "cmp~[word ptr [r13+0],0", "setz~dl", "movzx~edx,dl", "sub~rax,rdx"]], [0, 0, 62, 0, 0, 3, 1, 1, 11, 7, 0.07620192307692308, ["mov     r12d, [rsp+0B8h+sdir]", "test    r12d, r12d", "js      short loc_B7E9"], ["mov~r12d,[rsp+0]", "test~r12d,r12d", "js~FOO"]], [3, 0, 62, 1, 0, 7, 0, 1, 11, 8, 0.18389423076923078, ["cmp     al, 39h ; '9'", "setz    r12b", "movzx   edx, byte ptr [rbx+1]", "movsx   eax, dl", "sub     eax, 30h ; '0'", "cmp     eax, 9", "ja      loc_B717"], ["cmp~al,0", "setz~r12b", "movzx~edx,[yte ptr [rbx+0]", "movsx~eax,dl", "sub~eax,0", "cmp~eax,0", "ja~FOO"]], [1, 0, 62, 0, 0, 1, 0, 0, 12, 8, 0.013221153846153848, ["mov     ebp, 1"], ["mov~ebp,0"]], [1, 0, 62, 0, 1, 6, 0, 2, 3, 5, 0.3548076923076923, ["mov     rdx, [rsp+0B8h+n]; n", "mov     rsi, [rsp+0B8h+file]; src", "mov     rdi, s; dest", "call    _memcpy", "cmp     [rsp+0B8h+backup_type], 1", "jz      loc_B419"], ["mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,s", "call~FOO", "cmp~[rsp+0],0", "jz~FOO"]], [3, 0, 62, 1, 0, 11, 0, 0, 8, 6, 0.21129807692307692, ["lea     rbx, [rax+13h]", "mov     eax, 0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     rdi, rbx", "repne scasb", "mov     rax, rcx", "not     rax", "sub     rax, 1", "lea     rdx, [r13+4]", "cmp     rax, rdx", "jb      short loc_B4EB"], ["lea~rbx,[rax+0]", "mov~eax,0", "mov~rcx,0", "mov~rdi,rbx", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "sub~rax,0", "lea~rdx,[r13+0]", "cmp~rax,rdx", "jb~FOO"]], [0, 0, 62, 0, 0, 3, 0, 1, 15, 6, 0.12211538461538463, ["mov     rdx, [rsp+0B8h+var_90]; n", "cmp     rbp, rdx", "ja      short loc_B5C8"], ["mov~rdx,[rsp+0]", "cmp~rbp,rdx", "ja~FOO"]], [1, 0, 62, 0, 0, 1, 0, 0, 10, 5, 0.06899038461538462, ["mov     edx, 0FFh"], ["mov~edx,0"]], [1, 0, 62, 0, 2, 8, 0, 2, 9, 6, 0.1824519230769231, ["mov     rdi, s; name", "call    last_component", "mov     rbx, rax", "mov     rdi, rax; name", "call    base_len", "mov     rbp, rax", "cmp     rax, 0Eh", "jbe     loc_B824"], ["mov~rdi,s", "call~FOO", "mov~rbx,rax", "mov~rdi,rax", "call~FOO", "mov~rbp,rax", "cmp~rax,0", "jbe~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 18, 4, 0.0, ["mov     esi, 1", "jmp     loc_B60C"], ["mov~esi,0", "jmp~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 14, 5, 0.026442307692307696, ["cmp     rax, 0FFFFFFFFFFFFFFFFh", "jl      loc_B85D"], ["cmp~rax,0", "jl~FOO"]], [0, 0, 62, 0, 0, 4, 1, 0, 13, 5, 0.07980769230769232, ["mov     rdx, rax", "mov     [rsp+0B8h+base_max], rax", "test    rax, rax", "jns     short loc_B829"], ["mov~rdx,rax", "mov~[rsp+0],rax", "test~rax,rax", "jns~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 88h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 62, 0, 0, 2, 0, 0, 11, 4, 0.15216346153846155, ["cmp     rbp, rdx", "jbe     loc_B433"], ["cmp~rbp,rdx", "jbe~FOO"]], [0, 0, 62, 0, 0, 2, 0, 1, 11, 5, 0.012740384615384615, ["mov     rdx, [rsp+0B8h+base_max]", "jmp     short loc_B829"], ["mov~rdx,[rsp+0]", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 62, 0, 1, 5, 0, 1, 4, 4, 0.016346153846153847, ["mov     rax, [rsp+0B8h+filelen]", "lea     rdi, [s+rax]; dest", "mov     rdx, [rsp+0B8h+simple_backup_suffix_size]; n", "mov     rsi, cs:simple_backup_suffix; src", "call    _memcpy"], ["mov~rax,[rsp+0]", "lea~rdi,<TAG>", "mov~rdx,[rsp+0]", "mov~rsi,<TAG>", "call~FOO"]], [0, 0, 62, 0, 0, 1, 0, 1, 10, 7, 0.00625, ["jmp     short loc_B73E"], ["jmp~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 5, 3, 0.37788461538461543, ["cmp     [rsp+0B8h+rename], 0", "jz      loc_B8E3"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 15, 4, 0.013942307692307693, ["mov     [rsp+0B8h+base_max], 0FFFFFFFFFFFFFFFFh", "jmp     loc_B433"], ["mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 62, 2, 0, 9, 0, 1, 12, 4, 0.014423076923076924, ["mov     rax, [rsp+0B8h+filelen]", "add     rax, s", "sub     rax, rbx", "lea     rcx, [rdx-1]", "cmp     rdx, rax", "cmovbe  rax, rcx", "mov     byte ptr [rbx+rax], 7Eh ; '~'", "mov     byte ptr [rbx+rax+1], 0", "jmp     loc_B433"], ["mov~rax,[rsp+0]", "add~rax,s", "sub~rax,rbx", "lea~rcx,[rdx-1]+0]", "cmp~rdx,rax", "cmovbe~rax,rcx", "mov~<TAG>,0", "mov~[yte ptr [rbx+0],0", "jmp~FOO"]], [4, 0, 62, 1, 2, 14, 0, 3, 12, 6, 0.03197115384615385, ["movzx   r13d, word ptr [rbx]", "mov     word ptr [rbx], 2Eh ; '.'", "call    ___errno_location", "mov     r12, rax", "mov     dword ptr [rax], 0", "mov     esi, 3; name", "mov     rdi, s; path", "call    _pathconf", "cmp     dword ptr [r12], 0", "setz    dl", "movzx   edx, dl", "sub     rax, rdx", "mov     [rbx], r13w", "jmp     loc_B79D"], ["movzx~r13d,<TAG>", "mov~<TAG>,0", "call~FOO", "mov~r12,rax", "mov~<TAG>,0", "mov~esi,0", "mov~rdi,s", "call~FOO", "cmp~<TAG>,0", "setz~dl", "movzx~edx,dl", "sub~rax,rdx", "mov~<TAG>,r13w", "jmp~FOO"]], [0, 0, 62, 0, 1, 8, 1, 2, 9, 6, 0.20240384615384616, ["lea     rbp, [r13+2]", "mov     rax, [rsp+0B8h+var_B8]", "lea     rdi, [r15+rax]; s1", "mov     rdx, rbp; n", "mov     rsi, rbx; s2", "call    _memcmp", "test    eax, eax", "jnz     short loc_B4EB"], ["lea~rbp,[r13+0]", "mov~rax,<TAG>", "lea~rdi,<TAG>", "mov~rdx,rbp", "mov~rsi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 62, 0, 1, 10, 1, 2, 5, 6, 0.13966346153846154, ["movzx   ebp, word ptr [rbx]", "mov     word ptr [rbx], 2Eh ; '.'", "mov     rcx, [rsp+0B8h+pnew_fd]; pnew_fd", "mov     edx, 0; extra_flags", "mov     rsi, s; dir", "mov     edi, [rsp+0B8h+dir_fd]; dir_fd", "call    opendirat", "mov     dirp, rax", "test    rax, rax", "jz      short loc_B6D5"], ["movzx~ebp,<TAG>", "mov~<TAG>,0", "mov~rcx,[rsp+0]", "mov~edx,0", "mov~rsi,s", "mov~edi,[rsp+0]", "call~FOO", "mov~dirp,rax", "test~rax,rax", "jz~FOO"]], [0, 0, 62, 0, 1, 8, 1, 2, 4, 7, 0.3262019230769231, ["mov     rax, [rsp+0B8h+base_offset]", "mov     [rsp+0B8h+var_B8], rax", "lea     rbx, [s+rax]", "mov     rdi, rbx; name", "call    base_len", "mov     r13, rax", "test    dirp, dirp", "jz      loc_B69A"], ["mov~rax,[rsp+0]", "mov~<TAG>,rax", "lea~rbx,<TAG>", "mov~rdi,rbx", "call~FOO", "mov~r13,rax", "test~dirp,dirp", "jz~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 6, 4, 0.33798076923076925, ["cmp     [rsp+0B8h+sdir], 0", "js      loc_B8AB"], ["cmp~[rsp+0],0", "js~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 9, 3, 0.028125, ["mov     rbx, rax", "test    dirp, dirp", "jz      short loc_B8D1"], ["mov~rbx,rax", "test~dirp,dirp", "jz~FOO"]], [0, 0, 62, 0, 1, 2, 0, 1, 5, 7, 0.17427884615384617, ["mov     rdi, dirp; dirp", "call    _rewinddir"], ["mov~rdi,dirp", "call~FOO"]], [0, 0, 4, 0, 1, 2, 0, 1, 10, 3, 0.0, ["mov     rdi, dirp; dirp", "call    _closedir"], ["mov~rdi,dirp", "call~FOO"]], [2, 0, 62, 1, 0, 5, 0, 1, 6, 7, 0.005288461538461539, ["mov     [rbx], bp", "add     rbx, r13", "mov     dword ptr [rbx], 7E317E2Eh", "mov     byte ptr [rbx+4], 0", "jmp     loc_B4D0"], ["mov~<TAG>,bp", "add~rbx,r13", "mov~<TAG>,0", "mov~[yte ptr [rbx+0],0", "jmp~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 8, 7, 0.1591346153846154, ["cmp     [rsp+0B8h+backup_type], 2", "jz      loc_B7C2"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 62, 0, 1, 7, 0, 2, 9, 7, 0.0, ["mov     rax, [rsp+0B8h+filelen]", "lea     rdi, [s+rax]; dest", "mov     rdx, [rsp+0B8h+simple_backup_suffix_size]; n", "mov     rsi, cs:simple_backup_suffix; src", "call    _memcpy", "mov     [rsp+0B8h+backup_type], 1", "jmp     loc_B73E"], ["mov~rax,[rsp+0]", "lea~rdi,<TAG>", "mov~rdx,[rsp+0]", "mov~rsi,<TAG>", "call~FOO", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 62, 0, 0, 2, 0, 1, 10, 6, 0.10120192307692308, ["cmp     [rsp+0B8h+base_max], 0", "jnz     loc_B856"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 62, 0, 0, 2, 0, 1, 17, 8, 0.04879807692307692, ["mov     r12, r15", "jmp     loc_B642"], ["mov~r12,r15", "jmp~FOO"]], [1, 0, 62, 1, 0, 5, 0, 1, 10, 6, 0.19326923076923078, ["add     rbx, rbp", "movzx   eax, byte ptr [rbx]", "lea     edx, [rax-31h]", "cmp     dl, 8", "ja      short loc_B4EB"], ["add~rbx,rbp", "movzx~eax,<TAG>", "lea~edx,[rax-31h]+0]", "cmp~dl,0", "ja~FOO"]], [2, 0, 62, 0, 0, 4, 0, 0, 6, 6, 0.1954326923076923, ["mov     rax, [rsp+0B8h+ssize]", "mov     [rsp+0B8h+var_80], rax", "mov     [rsp+0B8h+var_90], 1", "mov     [rsp+0B8h+var_94], 2"], ["mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [2, 0, 62, 0, 0, 3, 0, 1, 15, 5, 0.0002403846153846154, ["mov     [rsp+0B8h+base_max], 0Eh", "mov     edx, 0Eh", "jmp     short loc_B832"], ["mov~[rsp+0],0", "mov~edx,0", "jmp~FOO"]], [2, 0, 62, 0, 0, 3, 0, 1, 7, 4, 0.0, ["mov     [rsp+0B8h+sdir], 0FFFFFF9Ch", "mov     [rsp+0B8h+base_offset], 0", "jmp     loc_B449"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 62, 1, 0, 4, 0, 1, 19, 6, 0.09278846153846154, ["add     edx, 1", "mov     [rax], dl", "mov     r15, r12", "jmp     loc_B4EB"], ["add~edx,0", "mov~<TAG>,dl", "mov~r15,r12", "jmp~FOO"]]], "func_feature": [29, 18, 77, 6, 66, 102, 2, 363, 0.10347, 2, 22], "succs": [[23], [0, 16], [0, 19], [57, 2], [32, 3], [3], [53, 31], [25, 6], [31], [8, 23], [1, 36], [10, 60], [4, 22], [12], [12, 14], [65, 15], [65, 15], [11, 4], [17, 4], [44, 45], [9], [9, 20], [33, 4], [42, 39], [23], [26, 23], [23], [38], [48, 27], [13, 30], [14], [51, 43], [49, 4], [18, 11], [40], [34, 59], [1], [46, 63], [40, 37], [], [45, 47], [40], [], [45], [35], [25, 52], [45], [45], [38], [4, 61], [56, 5], [50, 54], [64, 7], [24, 55], [62], [24], [62], [58, 35], [35], [41, 28], [16], [4, 29], [4], [47], [7], [4]], "fname": "backupfile_internal", "n_num": 66}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[3, 0, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     ecx, 1; rename", "call    backupfile_internal", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~ecx,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 5, 0.0, 0, 2], "succs": [[]], "fname": "backup_file_rename", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [2, 0, 2, 1, 1, 5, 1, 2, 0, 1, 0.0, ["sub     rsp, 8", "mov     ecx, 0; rename", "call    backupfile_internal", "test    result, result", "jz      short loc_B922"], ["sub~rsp,0", "mov~ecx,0", "call~FOO", "test~result,result", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 1, 3, 0, 3, 2, 1, 8, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "find_backup_file_name", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[3, 0, 0, 2, 1, 10, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     r9, cs:argmatch_die; exit_fn", "mov     r8d, 4; valsize", "lea     rcx, backup_types; vallist", "lea     rdx, backup_args; arglist", "call    __xargmatch_internal", "lea     rdx, backup_types", "mov     eax, [rdx+rax*4]", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~r9,<TAG>", "mov~r8d,0", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>", "add~rsp,0", "retn"]], [2, 0, 2, 0, 0, 3, 0, 1, 1, 1, 0.16666666666666666, ["mov     eax, 2", "cmp     byte ptr [version], 0", "jz      short locret_B96F"], ["mov~eax,0", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 0, 2, 0.0, ["test    version, version", "jz      short loc_B969"], ["test~version,version", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["mov     eax, 2", "retn"], ["mov~eax,0", "retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [1, 1, 3, 0, 5, 4, 2, 18, 0.03333, 3, 2], "succs": [[], [0, 4], [1, 3], [], []], "fname": "get_version", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 4, 1, 0, 3, 1, 1, 0, 0, 0.0, ["sub     rsp, 8", "test    version, version", "jz      short loc_B97F"], ["sub~rsp,0", "test~version,version", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 2, 0, 0, 0.041666666666666664, ["call    get_version", "jmp     short loc_B99A"], ["call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 0, 1, 0.08333333333333333, ["cmp     byte ptr [version], 0", "jnz     short loc_B99F"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [0, 0, 1, 0, 2, 5, 0, 2, 0, -1, 0.125, ["lea     context, aVersionControl; \"VERSION_CONTROL\"", "call    _getenv", "mov     rsi, rax; version", "lea     rdi, asc_15167; \"$\"", "call    get_version"], ["lea~context,<TAG>", "call~FOO", "mov~rsi,rax", "lea~rdi,<TAG>", "call~FOO"]]], "func_feature": [3, 1, 6, 0, 5, 6, 1, 14, 0.05, 2, 2], "succs": [[2, 4], [3], [1, 4], [], [3]], "fname": "xget_version", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 1, 0, 0, 3, 0, 0, 0, 0, 0.08333333333333334, ["cmp     size, lcm_max", "cmovbe  lcm_max, size", "mov     r8, rcx"], ["cmp~size,lcm_max", "cmovbe~lcm_max,size", "mov~r8,rcx"]], [0, 0, 8, 0, 0, 2, 1, 1, 1, 3, 0.07777777777777778, ["test    b, b", "jz      short loc_B9BA"], ["test~b,b", "jz~FOO"]], [1, 0, 4, 2, 0, 8, 0, 1, 4, -1, 0.17777777777777778, ["mov     rax, a", "mov     edx, 0", "div     n", "mov     r9, rax", "mov     n, b", "imul    r8, q", "cmp     lcm, lcm_max", "ja      short loc_B9BA"], ["mov~rax,a", "mov~edx,0", "div~,n", "mov~r9,rax", "mov~n,b", "imul~r8,q", "cmp~lcm,lcm_max", "ja~FOO"]], [1, 0, 3, 1, 0, 5, 0, 1, 5, -1, 0.06666666666666667, ["mov     q, lcm", "mov     edx, 0", "div     b", "cmp     rax, q", "jnz     short loc_B9BA"], ["mov~q,lcm", "mov~edx,0", "div~,b", "cmp~rax,q", "jnz~FOO"]], [0, 1, 2, 0, 0, 3, 1, 0, 1, -1, 0.011111111111111112, ["test    b, b", "mov     edi, 2000h", "cmovnz  rdi, b"], ["test~b,b", "mov~edi,<STR>", "cmovnz~rdi,b"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, -1, 0.0, ["mov     rax, r8", "retn"], ["mov~rax,r8", "retn"]], [0, 0, 1, 0, 0, 1, 0, 1, 6, -1, 0.005555555555555556, ["jmp     short loc_B9C4"], ["jmp~FOO"]], [0, 0, 10, 0, 0, 3, 1, 1, 0, 4, 0.0, ["mov     rcx, lcm_max", "test    a, a", "jnz     short loc_B9C8"], ["mov~rcx,lcm_max", "test~a,a", "jnz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 0, 2, 2, 0.11111111111111112, ["mov     r8, b", "mov     rax, a"], ["mov~r8,b", "mov~rax,a"]], [0, 0, 7, 0, 0, 3, 0, 1, 4, 0, 0.0, ["mov     rax, n", "mov     n, r", "jmp     short loc_B9D3"], ["mov~rax,n", "mov~n,r", "jmp~FOO"]], [1, 0, 7, 1, 0, 4, 1, 1, 3, 1, 0.2111111111111111, ["mov     edx, 0", "div     n", "test    r, r", "jnz     short loc_BA0C"], ["mov~edx,0", "div~,n", "test~r,r", "jnz~FOO"]]], "func_feature": [0, 4, 7, 0, 11, 15, 2, 36, 0.06768, 0, 4], "succs": [[5], [0, 8], [0, 3], [0, 6], [0], [], [5], [1, 4], [10], [10], [9, 2]], "fname": "buffer_lcm", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:file_name, file", "retn"], ["mov~<TAG>,file", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdin_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 0, 8, 0, 1, 6, 1, 2, 0, 0, 0.027777777777777776, ["mov     edx, 1; whence", "mov     esi, 0; offset", "mov     rdi, rbx; fp", "call    rpl_fseeko", "test    eax, eax", "jnz     loc_BA36"], ["mov~edx,0", "mov~esi,0", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 9, 1, 1, 8, 1, 2, 0, 3, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbx, cs:stdin@@GLIBC_2_2_5", "mov     rdi, rbx; fp", "call    freadahead", "test    rax, rax", "jnz     short loc_BAAE"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,<TAG>", "mov~rdi,rbx", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 5, 0, 1, 4, 1, 2, 1, 2, 0.1111111111111111, ["mov     rdi, cs:stdin@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jz      loc_BAF2"], ["mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 2, 3, 0, 2, 4, -1, 0.0, ["call    close_stdout", "mov     edi, cs:exit_failure; status", "call    __exit"], ["call~FOO", "mov~edi,<TAG>", "call~FOO"]], [2, 0, 1, 0, 2, 8, 0, 3, 3, 0, 0.041666666666666664, ["call    ___errno_location", "mov     rcx, close_error", "lea     rdx, aS+2; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     loc_BA9E"], ["call~FOO", "mov~rcx,close_error", "lea~rdx,<TAG>", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [2, 0, 1, 0, 3, 10, 0, 3, 3, -1, 0.041666666666666664, ["call    quotearg_colon", "mov     rbp, rax", "call    ___errno_location", "mov     r8, close_error", "mov     rcx, rbp", "lea     rdx, format; \"%s: %s\"", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error"], ["call~FOO", "mov~rbp,rax", "call~FOO", "mov~r8,close_error", "mov~rcx,rbp", "lea~rdx,<TAG>", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 3, 2, 0.013888888888888888, ["test    ebx, ebx", "jnz     loc_BA4A"], ["test~ebx,ebx", "jnz~FOO"]], [0, 0, 6, 0, 2, 7, 1, 3, 2, 2, 0.05555555555555555, ["mov     rdi, cs:stdin@@GLIBC_2_2_5; stream", "call    rpl_fflush", "mov     ebx, eax", "mov     rdi, cs:stdin@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jnz     loc_BA4A"], ["mov~rdi,<TAG>", "call~FOO", "mov~ebx,eax", "mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 3, 0, 1, 8, 1, 2, 2, 1, 0.20833333333333331, ["mov     edx, 5; category", "lea     rsi, aErrorClosingFi; \"error closing file\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rbx, rax", "mov     rdi, cs:file_name; arg", "test    rdi, rdi", "jz      loc_BAFE"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [1, 0, 0, 1, 1, 5, 0, 1, 2, -1, 0.0, ["call    close_stdout", "add     rsp, 8", "pop     rbx", "pop     rbp", "retn"], ["call~FOO", "add~rsp,0", "pop~rbx", "pop~rbp", "retn"]]], "func_feature": [14, 6, 21, 0, 10, 14, 0, 61, 0.05, 6, 2], "succs": [[2, 7], [0, 2], [8, 9], [], [3], [3], [8, 9], [8, 6], [4, 5], []], "fname": "close_stdin", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:file_name_0, file", "retn"], ["mov~<TAG>,file", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:ignore_EPIPE, dil", "retn"], ["mov~<TAG>,dil", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_ignore_EPIPE", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 0, 1, 0, 3, 10, 0, 3, 0, 0, 0.027777777777777776, ["call    quotearg_colon", "mov     rbp, rax", "call    ___errno_location", "mov     r8, write_error", "mov     rcx, rbp", "lea     rdx, format; \"%s: %s\"", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error"], ["call~FOO", "mov~rbp,rax", "call~FOO", "mov~r8,write_error", "mov~rcx,rbp", "lea~rdx,<TAG>", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO"]], [2, 0, 3, 0, 1, 8, 1, 2, 2, -1, 0.125, ["mov     edx, 5; category", "lea     rsi, aWriteError; \"write error\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rbx, rax", "mov     rdi, cs:file_name_0; arg", "test    rdi, rdi", "jz      short loc_BBD2"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [1, 0, 9, 1, 1, 7, 1, 2, 0, 2, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jz      short loc_BB5C"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 1, 2, 1, 1, 0.08333333333333333, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jnz     loc_BBF4"], ["mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 1, 7, 0, 1, 3, 0, 2, 2, 2, 0.041666666666666664, ["call    ___errno_location", "cmp     dword ptr [rax], 20h ; ' '", "jnz     short loc_BB77"], ["call~FOO", "cmp~<TAG>,<STR>", "jnz~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 4, -1, 0.0, ["mov     edi, cs:exit_failure; status", "call    __exit"], ["mov~edi,<TAG>", "call~FOO"]], [2, 0, 1, 0, 2, 8, 0, 3, 3, -1, 0.027777777777777776, ["call    ___errno_location", "mov     rcx, write_error", "lea     rdx, aS+2; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     short loc_BBC7"], ["call~FOO", "mov~rcx,write_error", "lea~rdx,<TAG>", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 1, 3, 0.06944444444444445, ["cmp     cs:ignore_EPIPE, 0", "jz      short loc_BB77"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 2, 0, 0.0, ["mov     edi, cs:exit_failure; status", "call    __exit"], ["mov~edi,<TAG>", "call~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]]], "func_feature": [11, 3, 17, 0, 10, 12, 2, 50, 0.0375, 8, 2], "succs": [[5], [0, 6], [3, 7], [8, 9], [1, 3], [], [5], [1, 4], [], []], "fname": "close_stdout", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 4, 1, 2, 0, 1, 0.0, ["sub     rsp, 8", "call    mdir_name", "test    result, result", "jz      short loc_BC12"], ["sub~rsp,0", "call~FOO", "test~result,result", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 1, 3, 0, 3, 2, 3, 7, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "dir_name", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 5, 0, 0, 3, 0, 1, 0, 0, 0.09523809523809523, ["lea     rdx, [length-1]", "cmp     byte ptr [rax-1], 2Fh ; '/'", "jnz     short loc_BC67"], ["lea~rdx,[length-1]+0]", "cmp~[yte ptr [rax-1]+0],0", "jnz~FOO"]], [2, 0, 7, 2, 1, 12, 0, 1, 0, 2, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbx, file", "cmp     byte ptr [file], 2Fh ; '/'", "setz    bpl", "movzx   ebp, bpl", "call    last_component", "mov     rcx, rax", "sub     rcx, file", "cmp     length, prefix_length", "jbe     short loc_BC5A"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,file", "cmp~<TAG>,0", "setz~bpl", "movzx~ebp,bpl", "call~FOO", "mov~rcx,rax", "sub~rcx,file", "cmp~length,prefix_length", "jbe~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 2, -1, 0.0, ["mov     rax, length", "add     rsp, 8", "pop     file", "pop     prefix_length", "retn"], ["mov~rax,length", "add~rsp,0", "pop~file", "pop~prefix_length", "retn"]], [0, 0, 4, 0, 0, 2, 0, 1, 2, -1, 0.15476190476190477, ["cmp     prefix_length, length", "jz      short loc_BC5D"], ["cmp~prefix_length,length", "jz~FOO"]], [1, 0, 4, 0, 0, 3, 0, 1, 3, -1, 0.07142857142857142, ["lea     rax, [length-1]", "cmp     byte ptr [file+length-1], 2Fh ; '/'", "jnz     short loc_BC5D"], ["lea~rax,[length-1]+0]", "cmp~[yte ptr [file+0],0", "jnz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 2, 0, 0.011904761904761904, ["mov     rdx, length", "jmp     short loc_BC5D"], ["mov~rdx,length", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 1, -1, 0.023809523809523808, ["mov     rdx, length"], ["mov~rdx,length"]], [0, 0, 4, 0, 0, 2, 0, 1, 4, -1, 0.023809523809523808, ["mov     length, rax", "jmp     short loc_BC45"], ["mov~length,rax", "jmp~FOO"]]], "func_feature": [1, 0, 6, 0, 8, 11, 2, 30, 0.04762, 0, 3], "succs": [[3, 5], [0, 6], [], [2, 4], [2, 7], [2], [2], [3]], "fname": "dir_len", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 2, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     byte ptr [dir+rbx+0], 2Eh ; '.'", "mov     rbx, length"], ["mov~[yte ptr [dir+0],0", "mov~rbx,length"]], [0, 0, 3, 0, 1, 6, 1, 2, 1, 2, 0.16666666666666666, ["mov     rdx, length; n", "mov     rsi, file; src", "mov     rdi, dir; dest", "call    _memcpy", "test    length, length", "jnz     short loc_BCBB"], ["mov~rdx,length", "mov~rsi,file", "mov~rdi,dir", "call~FOO", "test~length,length", "jnz~FOO"]], [1, 0, 4, 2, 2, 17, 2, 3, 0, 1, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r12, file", "call    dir_len", "mov     rbx, rax", "lea     r13, [length+1]", "test    length, length", "setz    dil", "movzx   edi, dil", "add     rdi, r13; size", "call    _malloc", "mov     rbp, rax", "test    dir, dir", "jz      short loc_BCC0"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r12,file", "call~FOO", "mov~rbx,rax", "lea~r13,[length+0]", "test~length,length", "setz~dil", "movzx~edi,dil", "add~rdi,r13", "call~FOO", "mov~rbp,rax", "test~dir,dir", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.16666666666666666, ["mov     byte ptr [dir+length+0], 0"], ["mov~[yte ptr [dir+0],0"]], [1, 0, 0, 1, 0, 7, 0, 0, 1, 0, 0.0, ["mov     rax, dir", "add     rsp, 8", "pop     length", "pop     dir", "pop     file", "pop     r13", "retn"], ["mov~rax,dir", "add~rsp,0", "pop~length", "pop~dir", "pop~file", "pop~r13", "retn"]]], "func_feature": [3, 3, 5, 0, 5, 6, 1, 33, 0.06667, 0, 3], "succs": [[3], [0, 3], [1, 4], [4], []], "fname": "mdir_name", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 7, 0, 0, 3, 1, 1, 0, 0, 0.19444444444444442, ["movzx   ecx, byte ptr [p]", "test    cl, cl", "jz      short locret_BD1A"], ["movzx~ecx,<TAG>", "test~cl,cl", "jz~FOO"]], [1, 0, 9, 0, 0, 3, 0, 1, 0, 2, 0.0, ["mov     rax, name", "cmp     byte ptr [base], 2Fh ; '/'", "jnz     short loc_BCDF"], ["mov~rax,name", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 9, 1, 0, 3, 0, 1, 1, 2, 0.0, ["add     base, 1", "cmp     byte ptr [base], 2Fh ; '/'", "jz      short loc_BCD6"], ["add~base,0", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 6, 1, 0, 4, 1, 1, 5, 1, 0.18055555555555555, ["add     p, 1", "movzx   ecx, byte ptr [p]", "test    cl, cl", "jz      short locret_BD1A"], ["add~p,0", "movzx~ecx,<TAG>", "test~cl,cl", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 4, 2, 0.14583333333333331, ["test    sil, sil", "jz      short loc_BCFD"], ["test~sil,sil", "jz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 5, 2, 0.0, ["mov     base, p", "mov     esi, r8d", "jmp     short loc_BCFD"], ["mov~base,p", "mov~esi,r8d", "jmp~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 4, 2, 0.048611111111111105, ["mov     esi, edi"], ["mov~esi,edi"]], [1, 0, 6, 0, 0, 2, 0, 1, 3, 3, 0.3472222222222222, ["cmp     cl, 2Fh ; '/'", "jz      short loc_BCFB"], ["cmp~cl,0", "jz~FOO"]], [3, 0, 6, 0, 0, 5, 0, 1, 2, 4, 0.20833333333333331, ["mov     rdx, p", "mov     esi, 0", "mov     edi, 1", "mov     r8d, 0", "jmp     short loc_BD08"], ["mov~rdx,p", "mov~esi,0", "mov~edi,0", "mov~r8d,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 3, 8, 0, 10, 15, 13, 27, 0.1125, 0, 2], "succs": [[8, 9], [0, 2], [0, 2], [9, 7], [3, 5], [3], [3], [4, 6], [7], []], "fname": "last_component", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.07142857142857142, ["mov     rax, len", "jmp     short locret_BD48"], ["mov~rax,len", "jmp~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 3, 3, 0.21428571428571427, ["lea     rax, [len-1]", "cmp     byte ptr [rdx+len-1], 2Fh ; '/'", "jz      short loc_BD4A"], ["lea~rax,[len-1]+0]", "cmp~[yte ptr [rdx+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, 0, 0.0, ["mov     rax, len", "retn"], ["mov~rax,len", "retn"]], [1, 0, 6, 0, 0, 2, 0, 1, 2, 1, 0.30952380952380953, ["cmp     len, 1", "jz      short loc_BD63"], ["cmp~len,0", "jz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 1, 2, 0.11904761904761904, ["lea     rcx, [len-1]", "cmp     byte ptr [rdx+len-1], 2Fh ; '/'", "jz      short loc_BD4D"], ["lea~rcx,[len-1]+0]", "cmp~[yte ptr [rdx+0],0", "jz~FOO"]], [4, 0, 7, 1, 0, 9, 0, 0, 0, 3, 0.0, ["mov     rdx, name", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "repne scasb", "mov     rax, rcx", "not     rax", "sub     rax, 1", "cmp     len, 1", "jbe     short locret_BD48"], ["mov~rdx,name", "mov~rcx,0", "mov~eax,0", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "sub~rax,0", "cmp~len,0", "jbe~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 6, 0, 0, 1, 0, 0, 4, 2, 0.047619047619047616, ["mov     len, rax"], ["mov~len,rax"]]], "func_feature": [0, 0, 4, 0, 8, 10, 6, 23, 0.09524, 0, 1], "succs": [[6], [0, 7], [], [1, 2], [3, 6], [4, 6], [], [3]], "fname": "base_len", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[5, 0, 0, 3, 2, 18, 0, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbp, file", "call    last_component", "mov     rbx, had_slash", "cmp     byte ptr [had_slash], 0", "cmovz   rbx, file", "mov     rdi, base; name", "call    base_len", "add     base, had_slash", "cmp     byte ptr [base_lim], 0", "setnz   al", "mov     byte ptr [base_lim], 0", "add     rsp, 8", "pop     base_lim", "pop     file", "retn"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,file", "call~FOO", "mov~rbx,had_slash", "cmp~<TAG>,0", "cmovz~rbx,file", "mov~rdi,base", "call~FOO", "add~base,had_slash", "cmp~<TAG>,0", "setnz~al", "mov~<TAG>,0", "add~rsp,0", "pop~base_lim", "pop~file", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 3, 18, 0.0, 0, 3], "succs": [[]], "fname": "strip_trailing_slashes", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 0, 0, 2, 1, 4, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    _posix_fadvise", "add     rsp, 8", "retn"], ["sub~rsp,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 4, 0.0, 0, 2], "succs": [[]], "fname": "fdadvise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 0, 0, 0, 2, 10, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     ebx, esi", "call    _fileno", "mov     ecx, ebx; advise", "mov     edx, 0; len", "mov     esi, 0; offset", "mov     edi, eax; fd", "call    _posix_fadvise", "pop     advice", "retn"], ["push~rbx", "mov~ebx,esi", "call~FOO", "mov~ecx,ebx", "mov~edx,0", "mov~esi,0", "mov~edi,eax", "call~FOO", "pop~advice", "retn"]], [0, 0, 2, 0, 0, 2, 1, 1, 0, 1, 0.0, ["test    fp, fp", "jz      short locret_BDCA"], ["test~fp,fp", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [2, 1, 3, 0, 3, 2, 0, 13, 0.0, 0, 0], "succs": [[], [0, 2], []], "fname": "fadvise", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 3, 0, 0, 7, 0, 1, 0, 0, 0.0, ["lea     rax, [rsp+58h+arg_0]", "mov     [rsp+58h+ap.overflow_arg_area], rax", "lea     rax, [rsp+58h+var_38]", "mov     [rsp+58h+ap.reg_save_area], rax", "mov     [rsp+58h+ap.gp_offset], 18h", "mov     edx, dword ptr [rsp+58h+var_28]", "jmp     short loc_BDF0"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~<TAG>,0", "mov~edx,[word ptr [rsp+0]", "jmp~FOO"]], [2, 1, 4, 1, 0, 8, 2, 1, 0, 2, 0.0, ["sub     rsp, 58h", "mov     [rsp+58h+var_28], rdx", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "mov     edx, 0", "test    sil, 40h", "jnz     short loc_BE16"], ["sub~rsp,<STR>", "mov~[rsp+0],rdx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~edx,0", "test~sil,0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 2, 0, 2, 7, 1, 3, 1, 1, 0.3333333333333333, ["mov     eax, 0", "call    _open", "mov     edi, eax; fd", "call    fd_safer", "mov     rcx, [rsp+58h+var_40]", "xor     rcx, fs:28h", "jnz     short loc_BE37"], ["mov~eax,0", "call~FOO", "mov~edi,eax", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 2, -1, 0.0, ["add     rsp, 58h", "retn"], ["add~rsp,<STR>", "retn"]]], "func_feature": [3, 3, 6, 3, 5, 5, 4, 25, 0.06667, 1, 2], "succs": [[3], [0, 3], [], [2, 4], []], "fname": "open_safer", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 0, 1, 0, 6, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "pop     ent", "pop     file", "pop     ht", "pop     stats", "retn"], ["add~rsp,0", "pop~ent", "pop~file", "pop~ht", "pop~stats", "retn"]], [0, 0, 2, 0, 0, 2, 0, 1, 2, -1, 0.13333333333333333, ["cmp     ent, ent_from_table", "jz      short loc_BE99"], ["cmp~ent,ent_from_table", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 3, -1, 0.0, ["mov     rdi, ent; x", "call    triple_free"], ["mov~rdi,ent", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [2, 0, 4, 1, 3, 23, 1, 4, 1, -1, 0.13333333333333333, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r13, stats", "mov     rbp, file", "mov     r12, ht", "mov     edi, 18h; n", "call    xmalloc", "mov     rbx, rax", "mov     rdi, file; string", "call    xstrdup", "mov     [ent], rax", "mov     rax, [stats+8]", "mov     [ent+8], rax", "mov     rax, [stats+0]", "mov     [ent+10h], rax", "mov     rsi, ent; entry", "mov     rdi, ht; table", "call    hash_insert", "test    ent_from_table, ent_from_table", "jz      short loc_BEA4"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r13,stats", "mov~rbp,file", "mov~r12,ht", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~rdi,file", "call~FOO", "mov~<TAG>,rax", "mov~rax,[stats+0]", "mov~[ent+0],rax", "mov~rax,[stats+0]", "mov~[ent+0],rax", "mov~rsi,ent", "mov~rdi,ht", "call~FOO", "test~ent_from_table,ent_from_table", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 6, 0, 0, 2, 1, 1, 0, 1, 0.0, ["test    ht, ht", "jz      short locret_BEA9"], ["test~ht,ht", "jz~FOO"]]], "func_feature": [5, 2, 8, 0, 7, 7, 3, 37, 0.0381, 0, 2], "succs": [[], [0, 2], [0], [], [1, 3], [], [4, 5]], "fname": "record_file", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 0, 0.3333333333333333, ["mov     rcx, [rsp+28h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_BEFC"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 4, 1, 0, 6, 2, 1, 0, 0, 0.0, ["sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "test    ht, ht", "jz      short loc_BEE7"], ["sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~ht,ht", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 2, 0, 0.0, ["add     rsp, 28h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 3, 0, 1, 9, 1, 1, 1, 0, 0.0, ["mov     [rsp+28h+new_ent.name], file", "mov     rax, [stats+8]", "mov     [rsp+28h+new_ent.st_ino], rax", "mov     rax, [stats]", "mov     [rsp+28h+new_ent.st_dev], rax", "mov     file, rsp; entry", "call    hash_lookup", "test    rax, rax", "setnz   al"], ["mov~<TAG>,file", "mov~rax,[stats+0]", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "mov~file,rsp", "call~FOO", "test~rax,rax", "setnz~al"]]], "func_feature": [2, 4, 4, 1, 5, 5, 3, 21, 0.06667, 1, 2], "succs": [[], [0, 3], [1, 4], [], [1]], "fname": "seen_file", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[4, 0, 1, 1, 0, 6, 2, 1, 0, 0, 0.029166666666666667, ["and     edi, 1", "cmp     edi, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB5h", "add     eax, 78h ; 'x'", "jmp     short loc_C032"], ["and~edi,0", "cmp~edi,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "jmp~FOO"]], [8, 1, 3, 2, 0, 17, 5, 1, 5, 0, 0.1625, ["mov     [str+6], al", "mov     eax, edi", "and     eax, 4", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFBBh", "add     eax, 72h ; 'r'", "mov     [str+7], al", "mov     eax, edi", "and     eax, 2", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB6h", "add     eax, 77h ; 'w'", "mov     [str+8], al", "test    edi, 200h", "jz      short loc_C065"], ["mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "test~edi,<STR>", "jz~FOO"]], [2, 0, 15, 0, 0, 3, 0, 1, 1, 0, 0.020833333333333332, ["mov     eax, 64h ; 'd'", "cmp     edx, 4000h", "jz      short loc_BF6A"], ["mov~eax,0", "cmp~edx,0", "jz~FOO"]], [2, 1, 16, 0, 0, 5, 1, 1, 0, 0, 0.0, ["mov     edx, edi", "and     edx, 0F000h", "mov     eax, 2Dh ; '-'", "cmp     edx, 8000h", "jz      short loc_BF6A"], ["mov~edx,edi", "and~edx,<STR>", "mov~eax,0", "cmp~edx,0", "jz~FOO"]], [4, 0, 4, 1, 0, 7, 2, 1, 4, 0, 0.09166666666666666, ["mov     eax, edi", "and     eax, 8", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB5h", "add     eax, 78h ; 'x'", "jmp     short loc_BFF3"], ["mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "jmp~FOO"]], [4, 0, 4, 1, 0, 6, 2, 0, 4, 0, 0.09166666666666666, ["mov     eax, edi", "and     eax, 8", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFE0h", "add     eax, 73h ; 's'"], ["mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0"]], [8, 1, 6, 2, 0, 17, 5, 1, 3, 0, 0.25, ["mov     [str+3], al", "mov     eax, edi", "and     eax, 20h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFBBh", "add     eax, 72h ; 'r'", "mov     [str+4], al", "mov     eax, edi", "and     eax, 10h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB6h", "add     eax, 77h ; 'w'", "mov     [str+5], al", "test    edi, 400h", "jz      short loc_C053"], ["mov~[str+0],al", "mov~eax,edi", "and~eax,<STR>", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "test~edi,0", "jz~FOO"]], [4, 0, 7, 1, 0, 7, 2, 1, 2, 0, 0.11666666666666667, ["mov     eax, edi", "and     eax, 40h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB5h", "add     eax, 78h ; 'x'", "jmp     loc_BFB2"], ["mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "jmp~FOO"]], [4, 0, 7, 1, 0, 6, 2, 0, 2, 0, 0.11666666666666667, ["mov     eax, edi", "and     eax, 40h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFE0h", "add     eax, 73h ; 's'"], ["mov~eax,edi", "and~eax,0", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0"]], [3, 0, 10, 0, 0, 4, 0, 0, 6, 0, 0.0, ["cmp     edx, 0C000h", "mov     eax, 73h ; 's'", "mov     edx, 3Fh ; '?'", "cmovnz  eax, edx"], ["cmp~edx,0", "mov~eax,0", "mov~edx,0", "cmovnz~eax,edx"]], [1, 1, 11, 0, 0, 3, 0, 1, 5, 0, 0.020833333333333332, ["mov     eax, 70h ; 'p'", "cmp     edx, 1000h", "jz      short loc_BF6A"], ["mov~eax,0", "cmp~edx,<STR>", "jz~FOO"]], [2, 0, 12, 0, 0, 3, 0, 1, 4, 0, 0.03333333333333333, ["mov     eax, 6Ch ; 'l'", "cmp     edx, 0A000h", "jz      short loc_BF6A"], ["mov~eax,0", "cmp~edx,0", "jz~FOO"]], [1, 1, 13, 0, 0, 3, 0, 1, 3, 0, 0.0375, ["mov     eax, 63h ; 'c'", "cmp     edx, 2000h", "jz      short loc_BF6A"], ["mov~eax,0", "cmp~edx,<STR>", "jz~FOO"]], [4, 0, 1, 1, 0, 5, 2, 0, 6, 0, 0.029166666666666667, ["and     edi, 1", "cmp     edi, 1", "sbb     eax, eax", "and     eax, 0FFFFFFE0h", "add     eax, 74h ; 't'"], ["and~edi,0", "cmp~edi,0", "sbb~eax,eax", "and~eax,0", "add~eax,0"]], [7, 2, 9, 2, 0, 17, 5, 1, 1, 0, 0.2625, ["mov     [str], al", "mov     eax, edi", "and     eax, 100h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFBBh", "add     eax, 72h ; 'r'", "mov     [str+1], al", "mov     eax, edi", "and     eax, 80h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 0FFFFFFB6h", "add     eax, 77h ; 'w'", "mov     [str+2], al", "test    edi, 800h", "jz      loc_C03E"], ["mov~<TAG>,al", "mov~eax,edi", "and~eax,<STR>", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "mov~eax,edi", "and~eax,<STR>", "cmp~eax,0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[str+0],al", "test~edi,0", "jz~FOO"]], [2, 0, 14, 0, 0, 3, 0, 1, 2, 0, 0.03333333333333333, ["mov     eax, 62h ; 'b'", "cmp     edx, 6000h", "jz      short loc_BF6A"], ["mov~eax,0", "cmp~edx,0", "jz~FOO"]], [1, 1, 0, 0, 0, 4, 0, 0, 7, 0, 0.0, ["mov     [str+9], al", "mov     byte ptr [str+0Ah], 20h ; ' '", "mov     byte ptr [str+0Bh], 0", "retn"], ["mov~[str+0],al", "mov~[yte ptr [str+0],<STR>", "mov~[yte ptr [str+0],0", "retn"]]], "func_feature": [0, 28, 12, 0, 17, 25, 2, 116, 0.07623, 0, 12], "succs": [[16], [0, 13], [14, 15], [2, 14], [1], [1], [4, 5], [6], [6], [14], [9, 14], [10, 14], [11, 14], [16], [8, 7], [12, 14], []], "fname": "strmode", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 1, 3, 0, 1, 0, 0, 0.0, ["mov     edi, [statp+18h]; mode", "call    strmode", "rep retn"], ["mov~edi,[statp+0]", "call~FOO", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 3, 0.0, 0, 0], "succs": [[]], "fname": "filemodestring", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 4, 1, 2, 0, 1, 0.0, ["sub     rsp, 8", "call    mfile_name_concat", "test    p, p", "jz      short loc_C092"], ["sub~rsp,0", "call~FOO", "test~p,p", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 1, 3, 0, 3, 2, 4, 7, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "file_name_concat", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 3, 0, 1, 9, 1, 2, 0, 0, 0.17857142857142855, ["mov     rdx, dirlen; n", "mov     rsi, dir; src", "mov     rdi, p_concat; dest", "call    _mempcpy", "mov     [rax], r12b", "lea     rdi, [rax+r15]; dest", "mov     rax, [rsp+48h+base_in_result]", "test    rax, rax", "jz      short loc_C165"], ["mov~rdx,dirlen", "mov~rsi,dir", "mov~rdi,p_concat", "call~FOO", "mov~<TAG>,r12b", "lea~rdi,<TAG>", "mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 4, 1, 1, 9, 2, 2, 2, 1, 0.2857142857142857, ["test    r12b, r12b", "setnz   r15b", "movzx   r15d, r15b", "lea     rdi, [dirlen+baselen+1]", "add     rdi, r15; size", "call    _malloc", "mov     r14, rax", "test    p_concat, p_concat", "jz      short loc_C174"], ["test~r12b,r12b", "setnz~r15b", "movzx~r15d,r15b", "lea~rdi,[dirlen+0]", "add~rdi,r15", "call~FOO", "mov~r14,rax", "test~p_concat,p_concat", "jz~FOO"]], [2, 0, 6, 0, 0, 3, 0, 1, 1, 2, 0.0625, ["mov     r12d, 0", "cmp     byte ptr [dir+dirlen-1], 2Fh ; '/'", "jz      short loc_C123"], ["mov~r12d,0", "cmp~[yte ptr [dir+0],0", "jz~FOO"]], [2, 0, 5, 0, 0, 4, 0, 1, 2, 2, 0.0, ["cmp     byte ptr [r8], 2Fh ; '/'", "mov     eax, 2Fh ; '/'", "cmovnz  r12d, eax", "jmp     short loc_C123"], ["cmp~<TAG>,0", "mov~eax,0", "cmovnz~r12d,eax", "jmp~FOO"]], [3, 0, 5, 0, 0, 5, 0, 0, 1, 2, 0.04464285714285714, ["mov     rax, [rsp+48h+src]", "cmp     byte ptr [rax], 2Fh ; '/'", "mov     r12d, 0", "mov     eax, 2Eh ; '.'", "cmovz   r12d, eax"], ["mov~rax,<TAG>", "cmp~<TAG>,0", "mov~r12d,0", "mov~eax,0", "cmovz~r12d,eax"]], [0, 0, 2, 0, 0, 1, 0, 0, 4, 2, 0.0, ["mov     [rax], p"], ["mov~<TAG>,p"]], [1, 0, 0, 1, 0, 9, 0, 0, 3, 0, 0.0, ["mov     rax, p_concat", "add     rsp, 18h", "pop     baselen", "pop     dirlen", "pop     sep", "pop     dir", "pop     p_concat", "pop     r15", "retn"], ["mov~rax,p_concat", "add~rsp,0", "pop~baselen", "pop~dirlen", "pop~sep", "pop~dir", "pop~p_concat", "pop~r15", "retn"]], [1, 0, 1, 0, 1, 4, 0, 1, 4, 1, 0.03571428571428571, ["mov     rdx, baselen; n", "mov     rsi, [rsp+48h+src]; src", "call    _mempcpy", "mov     byte ptr [rax], 0"], ["mov~rdx,baselen", "mov~rsi,<TAG>", "call~FOO", "mov~<TAG>,0"]], [3, 0, 8, 3, 2, 28, 1, 3, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     r13, dir", "mov     rbx, base", "mov     [rsp+48h+base_in_result], base_in_result_0", "call    last_component", "mov     rbp, rax", "mov     rdi, dirbase; name", "call    base_len", "mov     rdx, rax", "sub     dirbase, dir", "add     rbp, dirbaselen", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     r8, base", "mov     [rsp+48h+src], base", "mov     rdi, base", "repne scasb", "mov     rsi, rcx", "not     rsi", "lea     rbx, [rsi-1]", "test    dirbaselen, dirbaselen", "jz      short loc_C10D"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r13,dir", "mov~rbx,base", "mov~[rsp+0],base_in_result_0", "call~FOO", "mov~rbp,rax", "mov~rdi,dirbase", "call~FOO", "mov~rdx,rax", "sub~dirbase,dir", "add~rbp,dirbaselen", "mov~rcx,0", "mov~eax,0", "mov~r8,base", "mov~<TAG>,base", "mov~rdi,base", "scasb~<TAG>,", "mov~rsi,rcx", "not~rsi", "lea~rbx,[rsi-1]+0]", "test~dirbaselen,dirbaselen", "jz~FOO"]]], "func_feature": [5, 4, 10, 0, 9, 12, 1, 72, 0.06746, 0, 5], "succs": [[5, 7], [0, 6], [1, 3], [1], [1], [7], [], [6], [2, 4]], "fname": "mfile_name_concat", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 0, 1, 0, 7, 0, 0, 0, 0, 0.0, ["mov     rax, r12", "add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["mov~rax,r12", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [1, 0, 6, 0, 1, 6, 0, 2, 2, -1, 0.20535714285714285, ["mov     rdx, count; count", "mov     rsi, ptr; buf", "mov     edi, r13d; fd", "call    safe_write", "cmp     n_rw, 0FFFFFFFFFFFFFFFFh", "jz      short loc_C1D5"], ["mov~rdx,count", "mov~rsi,ptr", "mov~edi,r13d", "call~FOO", "cmp~n_rw,0", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 5, -1, 0.008928571428571428, ["jmp     short loc_C1D5"], ["jmp~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.017857142857142856, ["mov     r12, count", "jmp     short loc_C1D5"], ["mov~r12,count", "jmp~FOO"]], [1, 0, 1, 0, 1, 2, 0, 1, 4, -1, 0.017857142857142856, ["call    ___errno_location", "mov     dword ptr [rax], 1Ch"], ["call~FOO", "mov~<TAG>,0"]], [0, 0, 6, 3, 0, 4, 0, 1, 4, -1, 0.08928571428571427, ["add     total, n_rw", "add     ptr, n_rw", "sub     rbx, n_rw", "jnz     short loc_C1A4"], ["add~total,n_rw", "add~ptr,n_rw", "sub~rbx,n_rw", "jnz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 0, 1, -1, 0.08928571428571427, ["mov     r13d, edi", "mov     rbp, ptr", "mov     r12d, 0"], ["mov~r13d,edi", "mov~rbp,ptr", "mov~r12d,0"]], [0, 0, 6, 0, 0, 2, 1, 1, 3, -1, 0.17857142857142855, ["test    n_rw, n_rw", "jz      short loc_C1CA"], ["test~n_rw,n_rw", "jz~FOO"]], [1, 0, 8, 1, 0, 8, 1, 1, 0, 1, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbx, count", "test    count, count", "jz      short loc_C1E3"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,count", "test~count,count", "jz~FOO"]]], "func_feature": [2, 2, 8, 0, 9, 12, 2, 35, 0.06746, 0, 5], "succs": [[], [0, 7], [0], [0], [0], [1, 2], [1], [4, 5], [3, 6]], "fname": "full_write", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 0, 0, 1, 0, 6, 0, 0, 0, 0, 0.0, ["mov     rax, data", "ror     rax, 3", "mov     edx, 0", "div     n", "mov     rax, rdx", "retn"], ["mov~rax,data", "ror~rax,0", "mov~edx,0", "div~,n", "mov~rax,rdx", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 6, 0.0, 0, 1], "succs": [[]], "fname": "raw_hasher", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["cmp     a, b", "setz    al", "retn"], ["cmp~a,b", "setz~al", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 0], "succs": [[]], "fname": "raw_comparator", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 3, 0, 0, 2, 0, 0, 0, 0, 0.07777777777777778, ["ucomiss xmm0, xmm1", "jbe     short loc_C26C"], ["ucomiss~xmm0,xmm1", "jbe~FOO"]], [0, 0, 4, 0, 0, 3, 0, 0, 6, 2, 0.13333333333333333, ["movss   xmm3, cs:dword_15284", "ucomiss xmm3, xmm2", "jnb     short loc_C27E"], ["movss~xmm3,<TAG>", "ucomiss~xmm3,xmm2", "jnb~FOO"]], [0, 0, 9, 0, 0, 3, 0, 0, 1, 7, 0.08888888888888889, ["movss   xmm0, dword ptr [tuning+8]", "ucomiss xmm0, cs:dword_15274", "jbe     short loc_C26C"], ["movss~xmm0,[word ptr [tuning+0]", "ucomiss~xmm0,<TAG>", "jbe~FOO"]], [1, 0, 10, 0, 0, 5, 0, 1, 0, 8, 0.0, ["mov     tuning, [table+28h]", "mov     eax, 1", "lea     rcx, default_tuning", "cmp     tuning, rcx", "jz      short locret_C27C"], ["mov~tuning,[table+0]", "mov~eax,0", "lea~rcx,<TAG>", "cmp~tuning,rcx", "jz~FOO"]], [0, 0, 5, 0, 0, 4, 0, 0, 5, 3, 0.16666666666666669, ["addss   xmm1, cs:dword_15274", "movss   xmm2, dword ptr [tuning+4]", "ucomiss xmm2, xmm1", "jbe     short loc_C26C"], ["addss~xmm1,<TAG>", "movss~xmm2,[word ptr [tuning+0]", "ucomiss~xmm2,xmm1", "jbe~FOO"]], [0, 0, 6, 0, 0, 3, 0, 0, 4, 4, 0.17777777777777778, ["movss   xmm1, dword ptr [tuning]", "ucomiss xmm1, cs:dword_15280", "jb      short loc_C26C"], ["movss~xmm1,<TAG>", "ucomiss~xmm1,<TAG>", "jb~FOO"]], [0, 0, 7, 0, 0, 3, 0, 0, 3, 5, 0.16666666666666669, ["movss   xmm1, dword ptr [tuning+0Ch]", "ucomiss xmm1, cs:dword_1527C", "jbe     short loc_C26C"], ["movss~xmm1,[word ptr [tuning+0]", "ucomiss~xmm1,<TAG>", "jbe~FOO"]], [0, 0, 8, 0, 0, 3, 0, 0, 2, 6, 0.13333333333333333, ["movss   xmm1, cs:dword_15278", "ucomiss xmm1, xmm0", "jbe     short loc_C26C"], ["movss~xmm1,<TAG>", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 8, 0, 0.005555555555555556, ["jmp     short locret_C27C"], ["jmp~FOO"]], [1, 0, 1, 0, 0, 3, 0, 0, 2, -1, 0.07222222222222223, ["lea     rax, default_tuning", "mov     [table+28h], rax", "mov     eax, 0"], ["lea~rax,<TAG>", "mov~[table+0],rax", "mov~eax,0"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 2, 0, 11, 18, 3, 31, 0.09293, 6, 0], "succs": [[8, 9], [0, 9], [9, 7], [2, 10], [1, 9], [9, 4], [9, 5], [9, 6], [10], [10], []], "fname": "check_tuning", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 21, 0, 0, 2, 0, 1, 0, 0, 0.0, ["cmp     byte ptr [tuning+10h], 0", "jnz     short loc_C2BE"], ["cmp~[yte ptr [tuning+0],0", "jnz~FOO"]], [3, 0, 1, 0, 0, 6, 2, 0, 0, -1, 0.03650793650793651, ["test    rax, rax", "mov     eax, 1", "cmovs   rcx, rax", "and     ecx, 1", "mov     eax, 0", "cmovnz  rdi, rax"], ["test~rax,rax", "mov~eax,0", "cmovs~rcx,rax", "and~ecx,0", "mov~eax,0", "cmovnz~rdi,rax"]], [1, 0, 2, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     ecx, 1", "jmp     loc_C2F9"], ["mov~ecx,0", "jmp~FOO"]], [2, 0, 3, 1, 0, 5, 0, 0, 0, 1, 0.11746031746031746, ["mov     ecx, 0", "mov     edx, 8", "mov     rax, rdx", "mul     rdi", "jo      loc_C3C3"], ["mov~ecx,0", "mov~edx,0", "mov~rax,rdx", "mul~,rdi", "jo~FOO"]], [0, 0, 20, 0, 0, 2, 1, 1, 0, 7, 0.015873015873015872, ["test    candidate, candidate", "js      loc_C315"], ["test~candidate,candidate", "js~FOO"]], [1, 0, 13, 1, 0, 6, 0, 1, 0, 3, 0.1642857142857143, ["mov     rax, rdi", "mul     r9", "shr     rdx, 1", "lea     rax, [rdx+rdx*2]", "cmp     rdi, rax", "jz      short loc_C36B"], ["mov~rax,rdi", "mul~,r9", "shr~rdx,0", "lea~rax,<TAG>", "cmp~rdi,rax", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 0, 0, 4, 0.25, ["cmp     rdi, 9", "jbe     short loc_C352"], ["cmp~rdi,0", "jbe~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, -1, 0.0, ["mov     rax, rdi", "retn"], ["mov~rax,rdi", "retn"]], [1, 0, 17, 0, 0, 4, 0, 0, 0, 5, 0.13015873015873017, ["divss   xmm0, dword ptr [tuning+8]", "mov     edi, 0", "ucomiss xmm0, cs:dword_15288", "jnb     short loc_C311"], ["divss~xmm0,[word ptr [tuning+0]", "mov~edi,0", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [2, 0, 18, 0, 0, 8, 2, 1, 0, 6, 0.026984126984126985, ["mov     rax, candidate", "shr     rax, 1", "and     edi, 1", "or      rax, rdi", "pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax", "addss   xmm0, xmm0", "jmp     loc_C29D"], ["mov~rax,candidate", "shr~rax,0", "and~edi,0", "or~rax,rdi", "pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 18, 0, 0, 2, 0, 0, 0, 6, 0.026984126984126985, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, candidate"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,candidate"]], [3, 0, 13, 0, 0, 3, 0, 0, 0, 4, 0.10714285714285715, ["mov     r8d, 10h", "mov     esi, 9", "mov     ecx, 3"], ["mov~r8d,0", "mov~esi,0", "mov~ecx,0"]], [1, 0, 13, 2, 0, 4, 0, 0, 0, 3, 0.10476190476190478, ["add     rsi, r8", "add     rcx, 2", "cmp     rsi, rdi", "jnb     short loc_C357"], ["add~rsi,r8", "add~rcx,0", "cmp~rsi,rdi", "jnb~FOO"]], [2, 0, 13, 2, 0, 6, 1, 1, 0, 4, 0.0380952380952381, ["add     r8, 8", "mov     rax, rdi", "mov     edx, 0", "div     rcx", "test    rdx, rdx", "jnz     short loc_C3A1"], ["add~r8,0", "mov~rax,rdi", "mov~edx,0", "div~,rcx", "test~rdx,rdx", "jnz~FOO"]], [2, 0, 13, 1, 0, 3, 0, 1, 0, 2, 0.10714285714285715, ["add     rdi, 2", "cmp     rdi, 0FFFFFFFFFFFFFFFFh", "jz      loc_C2E3"], ["add~rdi,0", "cmp~rdi,0", "jz~FOO"]], [0, 0, 13, 0, 0, 1, 0, 1, 0, 3, 0.01666666666666667, ["jmp     short loc_C36B"], ["jmp~FOO"]], [1, 0, 13, 1, 0, 5, 1, 1, 0, 2, 0.0761904761904762, ["mov     rax, rdi", "mov     edx, 0", "div     rcx", "test    rdx, rdx", "jnz     loc_C2E3"], ["mov~rax,rdi", "mov~edx,0", "div~,rcx", "test~rdx,rdx", "jnz~FOO"]], [0, 0, 16, 0, 0, 2, 0, 0, 0, 4, 0.14761904761904762, ["ucomiss xmm0, cs:dword_1528C", "jnb     short loc_C333"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 14, 0, 0, 1, 0, 0, 0, 3, 0.07857142857142858, ["cvttss2si rdi, xmm0"], ["cvttss2si~rdi,xmm0"]], [1, 0, 14, 0, 0, 5, 1, 1, 0, 3, 0.07857142857142858, ["subss   xmm0, cs:dword_1528C", "cvttss2si rdi, xmm0", "mov     rax, 8000000000000000h", "xor     rdi, rax", "jmp     loc_C2BE"], ["subss~xmm0,<TAG>", "cvttss2si~rdi,xmm0", "mov~rax,0", "xor~rdi,rax", "jmp~FOO"]], [1, 0, 13, 0, 0, 1, 0, 0, 0, 3, 0.03333333333333334, ["mov     ecx, 3"], ["mov~ecx,0"]], [5, 0, 13, 0, 0, 7, 1, 1, 0, 2, 0.23650793650793653, ["cmp     candidate, 0Ah", "mov     eax, 0Ah", "cmovb   candidate, rax", "or      rdi, 1", "mov     r9, 0AAAAAAAAAAAAAAABh", "cmp     rdi, 0FFFFFFFFFFFFFFFFh", "jnz     loc_C379"], ["cmp~candidate,0", "mov~eax,0", "cmovb~candidate,rax", "or~rdi,0", "mov~r9,0", "cmp~rdi,0", "jnz~FOO"]]], "func_feature": [0, 9, 11, 0, 22, 33, 2, 79, 0.08149, 2, 8], "succs": [[4, 21], [7], [1], [1, 2], [9, 10], [11, 14], [20, 5], [], [17, 7], [8], [8], [12], [16, 13], [12, 15], [3, 6], [14], [3, 14], [18, 19], [21], [21], [16], [3, 6]], "fname": "compute_bucket_size", "n_num": 22}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 0, 2, 0, 4, 0, 0, 0, 0, 0.0, ["shl     n, 4", "add     rax, [table]", "pop     table", "retn"], ["shl~n,0", "add~rax,<TAG>", "pop~table", "retn"]], [0, 0, 2, 0, 1, 7, 0, 1, 0, 1, 0.0, ["push    rbx", "mov     rbx, table", "mov     table, key", "mov     key, [table+10h]", "call    qword ptr [table+30h]", "cmp     [table+10h], n", "jbe     short loc_C3EA"], ["push~rbx", "mov~rbx,table", "mov~table,key", "mov~key,[table+0]", "call~[word ptr [table+0]", "cmp~[table+0],n", "jbe~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [2, 0, 2, 0, 3, 2, 5, 12, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "safe_hasher", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 19, 0, 0, 2, 0, 0, 0, 0, 0.035526315789473684, ["mov     rdx, [rax+8]", "mov     [dst+48h], rdx"], ["mov~rdx,[rax+0]", "mov~[dst+0],rdx"]], [0, 0, 19, 0, 0, 3, 1, 1, 6, 3, 0.15526315789473683, ["mov     new_bucket, [dst+48h]", "test    rax, rax", "jz      short loc_C4E1"], ["mov~new_bucket,[dst+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 19, 0, 0, 4, 0, 0, 8, 4, 0.11842105263157894, ["mov     [rax], data", "mov     rdx, [new_bucket+8]", "mov     [rax+8], rdx", "mov     [new_bucket+8], rax"], ["mov~<TAG>,data", "mov~rdx,[new_bucket+0]", "mov~[rax+0],rdx", "mov~[new_bucket+0],rax"]], [1, 0, 19, 0, 1, 4, 1, 2, 7, 2, 0.08289473684210526, ["mov     edi, 10h; size", "call    _malloc", "test    rax, rax", "jnz     short loc_C4A5"], ["mov~edi,0", "call~FOO", "test~rax,rax", "jnz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, 1, 0.034210526315789476, ["mov     eax, 1"], ["mov~eax,0"]], [1, 0, 19, 1, 0, 3, 0, 0, 2, 2, 0.3684210526315789, ["add     bucket, 10h", "cmp     [src+8], bucket", "jbe     short loc_C502"], ["add~bucket,0", "cmp~[src+0],bucket", "jbe~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 2, 0, 0.0, ["add     rsp, 18h", "pop     rbx", "pop     rbp", "pop     dst", "pop     bucket", "pop     src", "pop     safe", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~dst", "pop~bucket", "pop~src", "pop~safe", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.002631578947368421, ["mov     eax, 1", "jmp     loc_C507"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 8, 1, 0.007894736842105263, ["movzx   eax, byte ptr [rsp+48h+var_3C]", "jmp     short loc_C507"], ["movzx~eax,[yte ptr [rsp+0]", "jmp~FOO"]], [0, 0, 19, 0, 0, 3, 1, 1, 5, 4, 0.12894736842105262, ["mov     rbx, next", "test    next, next", "jz      short loc_C46D"], ["mov~rbx,next", "test~next,next", "jz~FOO"]], [0, 0, 19, 0, 0, 4, 0, 1, 4, 5, 0.038157894736842106, ["mov     rcx, [new_bucket+8]", "mov     [cursor+8], rcx", "mov     [new_bucket+8], cursor", "jmp     short loc_C43F"], ["mov~rcx,[new_bucket+0]", "mov~[cursor+0],rcx", "mov~[new_bucket+0],cursor", "jmp~FOO"]], [2, 0, 19, 1, 0, 6, 0, 0, 4, 5, 0.038157894736842106, ["mov     [new_bucket], data", "add     qword ptr [dst+18h], 1", "mov     qword ptr [cursor], 0", "mov     new_bucket, [dst+48h]", "mov     [cursor+8], rax", "mov     [dst+48h], cursor"], ["mov~<TAG>,data", "add~[word ptr [dst+0],0", "mov~<TAG>,0", "mov~new_bucket,[dst+0]", "mov~[cursor+0],rax", "mov~[dst+0],cursor"]], [1, 0, 19, 0, 0, 4, 1, 1, 4, 3, 0.3657894736842105, ["mov     cursor, [bucket+0]", "mov     qword ptr [bucket+8], 0", "test    r15b, r15b", "jnz     short loc_C4C1"], ["mov~cursor,[bucket+0]", "mov~[word ptr [bucket+0],0", "test~r15b,r15b", "jnz~FOO"]], [0, 0, 19, 0, 0, 1, 0, 1, 3, 4, 0.2026315789473684, ["jmp     short loc_C46D"], ["jmp~FOO"]], [1, 0, 19, 0, 1, 7, 0, 2, 3, 6, 0.1131578947368421, ["mov     rbp, [cursor]", "mov     rsi, data; key", "mov     rdi, dst; table", "call    safe_hasher", "mov     rdx, [cursor+8]", "cmp     qword ptr [new_bucket], 0", "jz      short loc_C421"], ["mov~rbp,<TAG>", "mov~rsi,data", "mov~rdi,dst", "call~FOO", "mov~rdx,[cursor+0]", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 19, 0, 0, 2, 0, 1, 1, 3, 0.34210526315789475, ["cmp     qword ptr [bucket+0], 0", "jz      short loc_C4C1"], ["cmp~[word ptr [bucket+0],0", "jz~FOO"]], [1, 0, 20, 1, 0, 14, 0, 0, 0, 2, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     r12, dst", "mov     r14, src", "mov     [rsp+48h+var_3C], edx", "mov     r15d, edx", "mov     r13, [src]", "cmp     bucket, [src+8]", "jb      loc_C4CB"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r12,dst", "mov~r14,src", "mov~[rsp+0],edx", "mov~r15d,edx", "mov~r13,<TAG>", "cmp~bucket,[src+0]", "jb~FOO"]], [1, 0, 19, 0, 1, 6, 0, 2, 5, 4, 0.24736842105263157, ["mov     rsi, data; key", "mov     rdi, dst; table", "call    safe_hasher", "mov     rbp, rax", "cmp     qword ptr [new_bucket], 0", "jz      short loc_C4F7"], ["mov~rsi,data", "mov~rdi,dst", "call~FOO", "mov~rbp,rax", "cmp~<TAG>,0", "jz~FOO"]], [2, 0, 19, 1, 0, 2, 0, 0, 7, 3, 0.2263157894736842, ["mov     qword ptr [bucket+0], 0", "sub     qword ptr [src+18h], 1"], ["mov~[word ptr [bucket+0],0", "sub~[word ptr [src+0],0"]], [1, 0, 19, 1, 0, 3, 0, 1, 6, 4, 0.05526315789473684, ["mov     [new_bucket], data", "add     qword ptr [dst+18h], 1", "jmp     short loc_C4B4"], ["mov~<TAG>,data", "add~[word ptr [dst+0],0", "jmp~FOO"]], [0, 0, 19, 0, 0, 3, 1, 1, 2, 5, 0.33421052631578946, ["mov     rbx, [bucket+8]", "test    cursor, cursor", "jnz     loc_C447"], ["mov~rbx,[bucket+0]", "test~cursor,cursor", "jnz~FOO"]]], "func_feature": [3, 5, 16, 1, 21, 30, 3, 84, 0.13797, 0, 6], "succs": [[2], [0, 3], [18], [8, 2], [6], [4, 15], [], [6], [6], [12, 14], [9], [9], [17, 5], [12], [10, 11], [20, 5], [7, 15], [1, 19], [5], [18], [13, 14]], "fname": "transfer_entries", "n_num": 21}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 14, 0, 0, 2, 0, 1, 0, 0, 0.06190476190476191, ["cmp     rax, entry", "jz      short loc_C59C"], ["cmp~rax,entry", "jz~FOO"]], [0, 0, 15, 0, 1, 15, 1, 2, 0, 4, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     r12, table", "mov     rbp, entry", "mov     r14, bucket_head", "mov     r13d, ecx", "call    safe_hasher", "mov     rbx, rax", "mov     [bucket_head], bucket", "mov     bucket, [bucket]", "test    rax, rax", "jz      short loc_C593"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~r12,table", "mov~rbp,entry", "mov~r14,bucket_head", "mov~r13d,ecx", "call~FOO", "mov~rbx,rax", "mov~<TAG>,bucket", "mov~bucket,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 1, 0, 0, 9, 0, 1, 4, -1, 0.002380952380952381, ["mov     rsi, [next]", "mov     rdi, [next+8]", "mov     [bucket], rsi", "mov     [bucket+8], rdi", "mov     qword ptr [next], 0", "mov     rcx, [table+48h]", "mov     [next+8], rcx", "mov     [table+48h], next", "jmp     short loc_C593"], ["mov~rsi,<TAG>", "mov~rdi,[next+0]", "mov~<TAG>,rsi", "mov~[bucket+0],rdi", "mov~<TAG>,0", "mov~rcx,[table+0]", "mov~[next+0],rcx", "mov~[table+0],next", "jmp~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 3, -1, 0.0380952380952381, ["mov     rdx, [bucket+8]", "test    rdx, rdx", "jz      short loc_C5D2"], ["mov~rdx,[bucket+0]", "test~rdx,rdx", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 2, -1, 0.05238095238095239, ["mov     rax, [bucket]", "test    r13b, r13b", "jz      short loc_C593"], ["mov~rax,<TAG>", "test~r13b,r13b", "jz~FOO"]], [0, 0, 13, 0, 1, 5, 1, 2, 2, 2, 0.0761904761904762, ["mov     rsi, rax", "mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_C59C"], ["mov~rsi,rax", "mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 0, 6, 0, 0, 1, -1, 0.0, ["pop     rbx", "pop     entry", "pop     table", "pop     r13", "pop     bucket_head", "retn"], ["pop~rbx", "pop~entry", "pop~table", "pop~r13", "pop~bucket_head", "retn"]], [0, 0, 6, 0, 0, 4, 1, 1, 6, -1, 0.030952380952380953, ["mov     cursor, [cursor+8]", "mov     rax, [cursor+8]", "test    rax, rax", "jz      short loc_C593"], ["mov~cursor,[cursor+0]", "mov~rax,[cursor+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, -1, 0.002380952380952381, ["mov     qword ptr [bucket], 0", "jmp     short loc_C593"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 7, 0, 1, 6, -1, 0.0, ["mov     rcx, [next+8]", "mov     [cursor+8], rcx", "mov     qword ptr [next], 0", "mov     rcx, [table+48h]", "mov     [next+8], rcx", "mov     [table+48h], next", "jmp     short loc_C593"], ["mov~rcx,[next+0]", "mov~[cursor+0],rcx", "mov~<TAG>,0", "mov~rcx,[table+0]", "mov~[next+0],rcx", "mov~[table+0],next", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, 0, 0.004761904761904762, ["mov     eax, 0", "jmp     short loc_C593"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, -1, 0.05, ["mov     rdx, [cursor+8]", "mov     rax, [rdx]", "test    r13b, r13b", "jnz     short loc_C5DB"], ["mov~rdx,[cursor+0]", "mov~rax,<TAG>", "test~r13b,r13b", "jnz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 4, -1, 0.09523809523809525, ["mov     rsi, [rax]", "cmp     entry, rsi", "jz      short loc_C587"], ["mov~rsi,<TAG>", "cmp~entry,rsi", "jz~FOO"]], [0, 0, 8, 0, 0, 3, 1, 1, 3, 1, 0.1, ["mov     rax, [cursor+8]", "test    rax, rax", "jz      loc_C5FA"], ["mov~rax,[cursor+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 7, -1, 0.014285714285714287, ["mov     rsi, [rax]", "cmp     rsi, entry", "jnz     short loc_C566"], ["mov~rsi,<TAG>", "cmp~rsi,entry", "jnz~FOO"]], [0, 0, 6, 0, 1, 4, 1, 2, 5, -1, 0.05238095238095239, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_C587"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]]], "func_feature": [3, 8, 18, 0, 16, 26, 3, 75, 0.03631, 0, 0], "succs": [[4, 5], [0, 6], [6], [8, 2], [3, 6], [4, 13], [], [14, 6], [6], [6], [6], [9, 6], [11, 15], [10, 12], [11, 15], [11, 7]], "fname": "hash_find_entry", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+10h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_buckets", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+18h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_buckets_used", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+20h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_entries", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 9, 0, 0, 2, 0, 1, 0, 0, 0.08181818181818182, ["mov     eax, 0", "jmp     short loc_C638"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 11, 0, 0, 4, 0, 0, 0, 1, 0.0, ["mov     bucket, [table]", "mov     table, [table+8]", "cmp     bucket, rdi", "jnb     short loc_C65D"], ["mov~bucket,<TAG>", "mov~table,[table+0]", "cmp~bucket,rdi", "jnb~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0", "retn"], ["mov~eax,0", "retn"]], [1, 0, 9, 0, 0, 1, 0, 0, 4, -1, 0.07272727272727272, ["mov     ecx, 1"], ["mov~ecx,0"]], [0, 0, 9, 0, 0, 3, 1, 1, 3, -1, 0.3, ["mov     rdx, [cursor+8]", "test    cursor, cursor", "jz      short loc_C623"], ["mov~rdx,[cursor+0]", "test~cursor,cursor", "jz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 2, -1, 0.36363636363636365, ["cmp     qword ptr [bucket], 0", "jz      short loc_C62F"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 9, 0, 0, 1, 0, 0, 4, -1, 0.13636363636363635, ["mov     ecx, 1"], ["mov~ecx,0"]], [0, 0, 9, 0, 0, 2, 0, 0, 5, -1, 0.2545454545454545, ["cmp     max_bucket_length, rcx", "cmovb   max_bucket_length, rcx"], ["cmp~max_bucket_length,rcx", "cmovb~max_bucket_length,rcx"]], [0, 0, 9, 0, 0, 1, 0, 1, 6, -1, 0.11818181818181818, ["jmp     short loc_C628"], ["jmp~FOO"]], [1, 0, 9, 1, 0, 3, 0, 0, 3, -1, 0.3, ["add     bucket, 10h", "cmp     bucket, rdi", "jnb     short locret_C65B"], ["add~bucket,0", "cmp~bucket,rdi", "jnb~FOO"]], [1, 0, 9, 1, 0, 4, 1, 1, 5, -1, 0.12727272727272726, ["add     bucket_length, 1", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_C64C"], ["add~bucket_length,0", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 2, 5, 0, 12, 15, 1, 26, 0.14621, 0, 2], "succs": [[5], [0, 2], [], [7], [3, 6], [9, 4], [10], [9], [7], [11, 5], [8, 10], []], "fname": "hash_get_max_bucket_length", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 8, 1, 0, 3, 0, 0, 0, 0, 0.23333333333333334, ["add     bucket, 10h", "cmp     bucket, r8", "jnb     short loc_C6B4"], ["add~bucket,0", "cmp~bucket,r8", "jnb~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 2, 3, 0.18888888888888888, ["cmp     qword ptr [bucket], 0", "jz      short loc_C67B"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 8, 2, 0, 5, 1, 1, 3, 3, 0.1, ["add     n_buckets_used, 1", "add     n_entries, 1", "mov     rax, [cursor+8]", "test    cursor, cursor", "jz      short loc_C67B"], ["add~n_buckets_used,0", "add~n_entries,0", "mov~rax,[cursor+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 1, 5, 3, 0.06666666666666667, ["jmp     short loc_C67B"], ["jmp~FOO"]], [1, 0, 8, 1, 0, 4, 1, 1, 4, 4, 0.05555555555555556, ["add     n_entries, 1", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_C69B"], ["add~n_entries,0", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [2, 0, 8, 0, 0, 3, 0, 1, 1, 4, 0.05555555555555556, ["mov     edx, 0", "mov     esi, 0", "jmp     short loc_C684"], ["mov~edx,0", "mov~esi,0", "jmp~FOO"]], [0, 0, 1, 0, 0, 3, 0, 1, 3, 0, 0.0, ["cmp     [table+20h], rdx", "setz    al", "jmp     short locret_C6BF"], ["cmp~[table+0],rdx", "setz~al", "jmp~FOO"]], [1, 0, 2, 0, 0, 3, 0, 1, 2, 1, 0.17777777777777778, ["mov     eax, 0", "cmp     [table+18h], rsi", "jz      short loc_C6C1"], ["mov~eax,0", "cmp~[table+0],rsi", "jz~FOO"]], [0, 0, 10, 0, 0, 4, 0, 0, 0, 3, 0.0, ["mov     bucket, [table]", "mov     r8, [table+8]", "cmp     bucket, r8", "jnb     short loc_C6AA"], ["mov~bucket,<TAG>", "mov~r8,[table+0]", "cmp~bucket,r8", "jnb~FOO"]], [2, 0, 3, 0, 0, 2, 0, 0, 1, 2, 0.03333333333333333, ["mov     edx, 0", "mov     esi, 0"], ["mov~edx,0", "mov~esi,0"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 2, 7, 0, 11, 16, 0, 31, 0.08283, 0, 4], "succs": [[1, 7], [0, 2], [0, 4], [0], [3, 4], [1], [10], [10, 6], [9, 5], [7], []], "fname": "hash_table_ok", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0.06666666666666667, ["pxor    xmm1, xmm1", "cvtsi2sd xmm1, rbx"], ["pxor~xmm1,xmm1", "cvtsi2sd~xmm1,rbx"]], [0, 0, 3, 0, 0, 3, 1, 1, 2, 1, 0.3, ["mulsd   xmm0, cs:qword_15290", "test    rbx, rbx", "js      short loc_C7A8"], ["mulsd~xmm0,<TAG>", "test~rbx,rbx", "js~FOO"]], [2, 0, 1, 0, 0, 8, 2, 1, 3, 0, 0.06666666666666667, ["mov     rax, rbx", "shr     rax, 1", "and     ebx, 1", "or      rax, rbx", "pxor    xmm1, xmm1", "cvtsi2sd xmm1, rax", "addsd   xmm1, xmm1", "jmp     short loc_C745"], ["mov~rax,rbx", "shr~rax,0", "and~ebx,0", "or~rax,rbx", "pxor~xmm1,xmm1", "cvtsi2sd~xmm1,rax", "addsd~xmm1,xmm1", "jmp~FOO"]], [4, 0, 6, 0, 3, 25, 1, 4, 0, 3, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     r14, table", "mov     rbp, stream", "mov     rbx, [table+10h]", "mov     r12, [table+18h]", "call    hash_get_max_bucket_length", "mov     r13, rax", "mov     rcx, [table+20h]", "lea     rdx, aEntriesLu; \"# entries:         %lu\\n\"", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "mov     rcx, rbx", "lea     rdx, aBucketsLu; \"# buckets:         %lu\\n\"", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "test    r12, r12", "js      short loc_C78A"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~r14,table", "mov~rbp,stream", "mov~rbx,[table+0]", "mov~r12,[table+0]", "call~FOO", "mov~r13,rax", "mov~rcx,[table+0]", "lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "mov~rcx,rbx", "lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "test~r12,r12", "js~FOO"]], [2, 0, 4, 0, 0, 9, 2, 1, 1, 2, 0.06666666666666667, ["mov     rax, r12", "shr     rax, 1", "mov     rdx, r12", "and     edx, 1", "or      rax, rdx", "pxor    xmm0, xmm0", "cvtsi2sd xmm0, rax", "addsd   xmm0, xmm0", "jmp     short loc_C72F"], ["mov~rax,r12", "shr~rax,0", "mov~rdx,r12", "and~edx,0", "or~rax,rdx", "pxor~xmm0,xmm0", "cvtsi2sd~xmm0,rax", "addsd~xmm0,xmm0", "jmp~FOO"]], [4, 0, 0, 0, 2, 19, 0, 2, 4, -1, 0.0, ["divsd   xmm0, xmm1", "mov     rcx, r12", "lea     rdx, aBucketsUsedLu2; \"# buckets used:    %lu (%.2f%%)\\n\"", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 1", "call    ___fprintf_chk", "mov     rcx, max_bucket_length", "lea     rdx, aMaxBucketLengt; \"max bucket length: %lu\\n\"", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "pop     rbx", "pop     stream", "pop     r12", "pop     max_bucket_length", "pop     table", "retn"], ["divsd~xmm0,xmm1", "mov~rcx,r12", "lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "mov~rcx,max_bucket_length", "lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "pop~rbx", "pop~stream", "pop~r12", "pop~max_bucket_length", "pop~table", "retn"]], [0, 0, 4, 0, 0, 2, 0, 0, 1, 2, 0.06666666666666667, ["pxor    xmm0, xmm0", "cvtsi2sd xmm0, r12"], ["pxor~xmm0,xmm0", "cvtsi2sd~xmm0,r12"]]], "func_feature": [5, 6, 9, 0, 7, 8, 0, 68, 0.08095, 5, 0], "succs": [[5], [0, 2], [5], [4, 6], [1], [], [1]], "fname": "hash_print_statistics", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 8, 0, 0, 3, 1, 1, 0, 0, 0.07777777777777778, ["mov     rbx, bucket", "test    cursor, cursor", "jz      short loc_C81A"], ["mov~rbx,bucket", "test~cursor,cursor", "jz~FOO"]], [0, 0, 10, 0, 1, 9, 1, 2, 0, 2, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     r12, table", "mov     rbp, entry", "call    safe_hasher", "mov     rsi, [bucket]", "test    rsi, rsi", "jz      short loc_C813"], ["push~r12", "push~rbp", "push~rbx", "mov~r12,table", "mov~rbp,entry", "call~FOO", "mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 5, -1, 0.022222222222222223, ["mov     rsi, [cursor]", "cmp     rsi, entry", "jnz     short loc_C7E7"], ["mov~rsi,<TAG>", "cmp~rsi,entry", "jnz~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 4, -1, 0.1, ["mov     cursor, [cursor+8]", "test    cursor, cursor", "jz      short loc_C80C"], ["mov~cursor,[cursor+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 3, -1, 0.03333333333333333, ["mov     rax, [cursor]"], ["mov~rax,<TAG>"]], [0, 0, 6, 0, 0, 2, 0, 1, 2, -1, 0.11111111111111112, ["cmp     rsi, entry", "jz      short loc_C804"], ["cmp~rsi,entry", "jz~FOO"]], [0, 0, 6, 0, 1, 4, 1, 2, 3, -1, 0.12222222222222223, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_C804"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 5, -1, 0.011111111111111112, ["mov     eax, 0", "jmp     short loc_C807"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["pop     rbx", "pop     entry", "pop     table", "retn"], ["pop~rbx", "pop~entry", "pop~table", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, -1, 0.011111111111111112, ["mov     eax, 0", "jmp     short loc_C807"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 0, 0.011111111111111112, ["mov     eax, 0", "jmp     short loc_C807"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [2, 4, 11, 0, 11, 16, 3, 35, 0.04545, 0, 0], "succs": [[10, 5], [0, 9], [4, 6], [2, 7], [8], [4, 6], [3, 4], [8], [], [8], [8]], "fname": "hash_lookup", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 4, 1, 0, 3, 0, 0, 0, 0, 0.125, ["add     bucket, 10h", "cmp     bucket, rcx", "jnb     short loc_C851"], ["add~bucket,0", "cmp~bucket,rcx", "jnb~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 4, -1, 0.05357142857142857, ["mov     rax, [bucket]", "test    rax, rax", "jz      short loc_C83C"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 2, -1, 0.125, ["mov     rax, [bucket]", "test    rax, rax", "jnz     short locret_C84F"], ["mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     qword ptr [table+20h], 0", "jz      short loc_C85A"], ["cmp~[word ptr [table+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.017857142857142856, ["mov     eax, 0", "jmp     short locret_C84D"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 6, 0, 0, 4, 0, 0, 1, -1, 0.08928571428571427, ["mov     rdx, [table]", "mov     rcx, [table+8]", "cmp     bucket, rcx", "jnb     short loc_C851"], ["mov~rdx,<TAG>", "mov~rcx,[table+0]", "cmp~bucket,rcx", "jnb~FOO"]], [1, 0, 0, 1, 1, 2, 0, 1, 2, -1, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]]], "func_feature": [1, 2, 5, 0, 9, 11, 0, 21, 0.04563, 0, 2], "succs": [[8, 1], [0, 4], [0, 6], [5, 7], [], [4], [], [8, 2], []], "fname": "hash_get_first", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 11, 0, 0, 3, 1, 1, 0, 0, 0.01818181818181818, ["mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_C878"], ["mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 1, 3, 0.11818181818181818, ["cmp     [cursor], entry", "jz      short loc_C888"], ["cmp~<TAG>,entry", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 6, 1, 0.00909090909090909, ["jmp     short loc_C8B2"], ["jmp~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 5, 2, 0.06363636363636363, ["mov     rax, [bucket]", "test    rax, rax", "jz      short loc_C895"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 1, 3, 4, 0.045454545454545456, ["jmp     short loc_C891"], ["jmp~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.03636363636363636, ["mov     rax, [rax]", "jmp     short loc_C8B2"], ["mov~rax,<TAG>", "jmp~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 2, 2, 0.14545454545454545, ["mov     bucket, [cursor+8]", "test    rax, rax", "jnz     short loc_C8A8"], ["mov~bucket,[cursor+0]", "test~rax,rax", "jnz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 5, 1, 0.02727272727272727, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 5, 1, 0, 3, 0, 0, 4, 2, 0.1909090909090909, ["add     bucket, 10h", "cmp     rdx, bucket", "jbe     short loc_C8AD"], ["add~bucket,0", "cmp~rdx,bucket", "jbe~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 3, 3, 0.1909090909090909, ["mov     rdx, [table+8]"], ["mov~rdx,[table+0]"]], [1, 0, 11, 1, 1, 8, 0, 1, 0, 4, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbp, table", "mov     rbx, entry", "call    safe_hasher", "mov     rcx, rax", "mov     rdx, cursor"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,table", "mov~rbx,entry", "call~FOO", "mov~rcx,rax", "mov~rdx,cursor"]], [1, 0, 0, 1, 0, 4, 0, 0, 4, 0, 0.0, ["add     rsp, 8", "pop     entry", "pop     table", "retn"], ["add~rsp,0", "pop~entry", "pop~table", "retn"]]], "func_feature": [1, 3, 8, 0, 12, 16, 0, 32, 0.07045, 0, 3], "succs": [[1, 4], [0, 6], [11], [8, 2], [9], [11], [9, 5], [11], [3, 7], [8], [1], []], "fname": "hash_get_next", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 11, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     bucket, [table]", "cmp     bucket, [table+8]", "jnb     short loc_C904"], ["mov~bucket,<TAG>", "cmp~bucket,[table+0]", "jnb~FOO"]], [0, 0, 9, 0, 0, 2, 0, 0, 0, -1, 0.1909090909090909, ["cmp     buffer_size, counter", "jbe     short locret_C900"], ["cmp~buffer_size,counter", "jbe~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 0, -1, 0.21818181818181817, ["test    cursor, cursor", "jz      short loc_C8C9"], ["test~cursor,cursor", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 9, 1, 0, 3, 0, 0, 0, -1, 0.19999999999999998, ["add     bucket, 10h", "cmp     [table+8], bucket", "jbe     short locret_C902"], ["add~bucket,0", "cmp~[table+0],bucket", "jbe~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 0, -1, 0.14545454545454545, ["mov     rcx, cursor"], ["mov~rcx,cursor"]], [1, 0, 9, 0, 0, 2, 0, 1, 0, -1, 0.07272727272727272, ["mov     eax, 0", "jmp     short loc_C8D3"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.00909090909090909, ["mov     eax, 0", "jmp     short locret_C900"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 9, 0, 0, 2, 0, 1, 0, -1, 0.01818181818181818, ["cmp     buffer_size, counter", "jnz     short loc_C8E6"], ["cmp~buffer_size,counter", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 0, -1, 0.2727272727272727, ["cmp     qword ptr [bucket], 0", "jz      short loc_C8C9"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 9, 1, 0, 6, 1, 1, 0, -1, 0.20909090909090908, ["add     counter, 1", "mov     r8, [cursor]", "mov     [buffer+counter*8-8], r8", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jz      short loc_C8C9"], ["add~counter,0", "mov~r8,<TAG>", "mov~[buffer+0],r8", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jz~FOO"]]], "func_feature": [0, 2, 6, 0, 12, 17, 0, 27, 0.11136, 0, 2], "succs": [[6, 7], [8, 5], [1, 4], [], [10, 3], [11], [10], [8], [], [8, 11], [2, 4], [9, 4]], "fname": "hash_get_entries", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 10, 1, 0, 10, 0, 0, 0, 0, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r12, [table]", "cmp     bucket, [table+8]", "jnb     short loc_C967"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r12,<TAG>", "cmp~bucket,[table+0]", "jnb~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 0, 2, 0.3, ["cmp     qword ptr [bucket], 0", "jz      short loc_C932"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 8, 0, 0, 5, 0, 1, 0, 3, 0.07777777777777778, ["mov     r14, processor_data", "mov     r13, processor", "mov     r15, table", "mov     ebp, 0", "jmp     short loc_C93C"], ["mov~r14,processor_data", "mov~r13,processor", "mov~r15,table", "mov~ebp,0", "jmp~FOO"]], [1, 0, 8, 1, 0, 3, 0, 0, 0, 1, 0.2, ["add     bucket, 10h", "cmp     [table+8], bucket", "jbe     short loc_C96C"], ["add~bucket,0", "cmp~[table+0],bucket", "jbe~FOO"]], [1, 0, 8, 1, 0, 4, 1, 1, 0, 2, 0.15555555555555556, ["add     counter, 1", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_C94B"], ["add~counter,0", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 8, 0, 1, 5, 1, 2, 0, 1, 0.2, ["mov     rsi, processor_data", "mov     rdi, [cursor]", "call    processor", "test    al, al", "jz      short loc_C96C"], ["mov~rsi,processor_data", "mov~rdi,<TAG>", "call~processor", "test~al,al", "jz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 1, 0, 2, 0.12222222222222223, ["jmp     short loc_C932"], ["jmp~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 0, 2, 0.23333333333333334, ["test    cursor, cursor", "jz      short loc_C932"], ["test~cursor,cursor", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0.011111111111111112, ["mov     ebp, 0"], ["mov~ebp,0"]], [0, 0, 8, 0, 0, 1, 0, 0, 0, 2, 0.18888888888888888, ["mov     rbx, cursor"], ["mov~rbx,cursor"]], [1, 0, 0, 1, 0, 9, 0, 0, 0, 0, 0.0, ["mov     rax, rbp", "add     rsp, 8", "pop     rbx", "pop     rbp", "pop     bucket", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~rax,rbp", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~bucket", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [1, 3, 7, 0, 11, 16, 0, 43, 0.13535, 0, 4], "succs": [[8, 2], [3, 7], [1], [1, 10], [5, 6], [10, 4], [3], [9, 3], [10], [5], []], "fname": "hash_do_for_each", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, rdx", "retn"], ["mov~rax,rdx", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.08333333333333333, ["mov     edx, 0", "jmp     short loc_C9AD"], ["mov~edx,0", "jmp~FOO"]], [3, 0, 2, 5, 0, 11, 1, 1, 2, -1, 0.08333333333333333, ["mov     rax, value", "shl     rax, 5", "sub     rax, value", "movzx   ecx, cl", "add     rax, ch_0", "mov     edx, 0", "div     n_buckets", "add     string, 1", "movzx   ecx, byte ptr [string]", "test    cl, cl", "jnz     short loc_C98A"], ["mov~rax,value", "shl~rax,0", "sub~rax,value", "movzx~ecx,cl", "add~rax,ch_0", "mov~edx,0", "div~,n_buckets", "add~string,0", "movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 0, 1, 0.0, ["movzx   ecx, byte ptr [string]", "test    cl, cl", "jz      short loc_C9B1"], ["movzx~ecx,<TAG>", "test~cl,cl", "jz~FOO"]], [1, 0, 2, 0, 0, 1, 0, 0, 1, -1, 0.08333333333333333, ["mov     edx, 0"], ["mov~edx,0"]]], "func_feature": [0, 2, 3, 0, 5, 6, 0, 19, 0.05, 0, 5], "succs": [[], [0], [0, 2], [1, 4], [2]], "fname": "hash_string", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[5, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0.0, ["mov     dword ptr [tuning], 0", "mov     dword ptr [tuning+4], 3F800000h", "mov     dword ptr [tuning+8], 3F4CCCCDh", "mov     dword ptr [tuning+0Ch], 3FB4FDF4h", "mov     byte ptr [tuning+10h], 0", "retn"], ["mov~<TAG>,0", "mov~[word ptr [tuning+0],0", "mov~[word ptr [tuning+0],0", "mov~[word ptr [tuning+0],0", "mov~[yte ptr [tuning+0],0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 6, 0.0, 0, 0], "succs": [[]], "fname": "hash_reset_tuning", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 1, 6, 1, 1, 23, 3, 2, 0, 0, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r15, candidate", "mov     rbp, tuning", "mov     r13, hasher", "mov     r12, comparator", "mov     r14, data_freer", "test    hasher, hasher", "lea     rax, raw_hasher", "cmovz   r13, rax", "test    comparator, comparator", "lea     rax, raw_comparator", "cmovz   r12, rax", "mov     edi, 50h ; 'P'; size", "call    _malloc", "mov     rbx, rax", "test    table, table", "jz      short loc_CA9C"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r15,candidate", "mov~rbp,tuning", "mov~r13,hasher", "mov~r12,comparator", "mov~r14,data_freer", "test~hasher,hasher", "lea~rax,<TAG>", "cmovz~r13,rax", "test~comparator,comparator", "lea~rax,<TAG>", "cmovz~r12,rax", "mov~edi,<STR>", "call~FOO", "mov~rbx,rax", "test~table,table", "jz~FOO"]], [1, 0, 3, 0, 1, 6, 1, 2, 0, 1, 0.1, ["mov     esi, 10h; size", "mov     rdi, rax; nmemb", "call    _calloc", "mov     [table], rax", "test    rax, rax", "jz      short fail"], ["mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~<TAG>,rax", "test~rax,rax", "jz~FOO"]], [0, 0, 4, 0, 1, 7, 1, 2, 0, 1, 0.13333333333333333, ["mov     rsi, tuning; tuning", "mov     rdi, candidate; candidate", "call    compute_bucket_size", "mov     tuning, rax", "mov     [table+10h], rax", "test    rax, rax", "jz      short fail"], ["mov~rsi,tuning", "mov~rdi,candidate", "call~FOO", "mov~tuning,rax", "mov~[table+0],rax", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 0, -1, 0.0, ["mov     rax, rbx", "add     rsp, 8", "pop     rbx", "pop     rbp", "pop     comparator", "pop     hasher", "pop     data_freer", "pop     candidate", "retn"], ["mov~rax,rbx", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~comparator", "pop~hasher", "pop~data_freer", "pop~candidate", "retn"]], [1, 0, 1, 0, 1, 4, 0, 2, 0, 0, 0.08333333333333333, ["mov     rdi, table; ptr", "call    free", "mov     ebx, 0", "jmp     short loc_CA9C"], ["mov~rdi,table", "call~FOO", "mov~ebx,0", "jmp~FOO"]], [4, 0, 1, 2, 0, 9, 0, 0, 0, -1, 0.016666666666666666, ["shl     rbp, 4", "add     rbp, rax", "mov     [table+8], rbp", "mov     qword ptr [table+18h], 0", "mov     qword ptr [table+20h], 0", "mov     [table+30h], hasher", "mov     [table+38h], comparator", "mov     [table+40h], data_freer", "mov     qword ptr [table+48h], 0"], ["shl~rbp,0", "add~rbp,rax", "mov~[table+0],rbp", "mov~[word ptr [table+0],0", "mov~[word ptr [table+0],0", "mov~[table+0],hasher", "mov~[table+0],comparator", "mov~[table+0],data_freer", "mov~[word ptr [table+0],0"]], [0, 0, 5, 0, 1, 8, 2, 2, 0, 1, 0.13333333333333333, ["test    tuning, tuning", "lea     table, default_tuning", "cmovz   tuning, rax", "mov     [table+28h], tuning", "mov     rdi, table; table", "call    check_tuning", "test    al, al", "jz      short fail"], ["test~tuning,tuning", "lea~table,<TAG>", "cmovz~tuning,rax", "mov~[table+0],tuning", "mov~rdi,table", "call~FOO", "test~al,al", "jz~FOO"]]], "func_feature": [5, 7, 10, 0, 7, 10, 4, 66, 0.06667, 3, 4], "succs": [[3, 6], [4, 5], [1, 4], [], [3], [3], [2, 4]], "fname": "hash_initialize", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0.0, ["mov     qword ptr [table+18h], 0", "mov     qword ptr [table+20h], 0", "pop     rbx", "pop     table", "pop     bucket", "retn"], ["mov~[word ptr [table+0],0", "mov~[word ptr [table+0],0", "pop~rbx", "pop~table", "pop~bucket", "retn"]], [1, 0, 11, 1, 0, 3, 0, 0, 2, 5, 0.3818181818181818, ["add     bucket, 10h", "cmp     [table+8], bucket", "jbe     short loc_CACD"], ["add~bucket,0", "cmp~[table+0],bucket", "jbe~FOO"]], [0, 0, 11, 0, 0, 7, 0, 0, 0, 5, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbp, table", "mov     r12, [table]", "cmp     bucket, [table+8]", "jb      short loc_CB0C"], ["push~r12", "push~rbp", "push~rbx", "mov~rbp,table", "mov~r12,<TAG>", "cmp~bucket,[table+0]", "jb~FOO"]], [0, 0, 11, 0, 0, 3, 1, 1, 3, 2, 0.21818181818181817, ["mov     rax, [table+40h]", "test    rax, rax", "jz      short loc_CB2B"], ["mov~rax,[table+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 11, 0, 0, 8, 1, 1, 4, 1, 0.21818181818181817, ["mov     qword ptr [cursor], 0", "mov     rax, [cursor+8]", "mov     rdx, [table+48h]", "mov     [cursor+8], rdx", "mov     [table+48h], cursor", "mov     rbx, cursor", "test    cursor, cursor", "jnz     short loc_CB1D"], ["mov~<TAG>,0", "mov~rax,[cursor+0]", "mov~rdx,[table+0]", "mov~[cursor+0],rdx", "mov~[table+0],cursor", "mov~rbx,cursor", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 11, 0, 0, 3, 1, 1, 2, 3, 0.35454545454545455, ["mov     rbx, [bucket+8]", "test    cursor, cursor", "jz      short loc_CAE2"], ["mov~rbx,[bucket+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 11, 0, 1, 2, 0, 1, 4, 2, 0.0, ["mov     rdi, [cursor]", "call    rax"], ["mov~rdi,<TAG>", "call~rax"]], [0, 0, 11, 0, 0, 3, 1, 1, 3, 7, 0.35454545454545455, ["mov     rax, [table+40h]", "test    rax, rax", "jz      short loc_CAF1"], ["mov~rax,[table+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 5, 0, 0.1909090909090909, ["jmp     short loc_CAE2"], ["jmp~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 1, 4, 0.3818181818181818, ["cmp     qword ptr [bucket], 0", "jz      short loc_CB02"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 11, 0, 0, 2, 0, 0, 4, 6, 0.35454545454545455, ["mov     qword ptr [bucket], 0", "mov     qword ptr [bucket+8], 0"], ["mov~<TAG>,0", "mov~[word ptr [bucket+0],0"]], [0, 0, 11, 0, 1, 2, 0, 1, 4, 7, 0.0, ["mov     rdi, [bucket]", "call    rax"], ["mov~rdi,<TAG>", "call~rax"]]], "func_feature": [2, 4, 8, 0, 12, 18, 0, 42, 0.20455, 0, 1], "succs": [[], [0, 9], [0, 9], [4, 6], [8, 3], [3, 7], [4], [10, 11], [7], [1, 5], [1], [10]], "fname": "hash_clear", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 13, 0, 0, 2, 1, 1, 0, 0, 0.075, ["test    cursor, cursor", "jz      short loc_CB6C"], ["test~cursor,cursor", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 3, 4, 0.12083333333333333, ["cmp     qword ptr [bucket+0], 0", "jz      short loc_CB6C"], ["cmp~[word ptr [bucket+0],0", "jz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 0, 1, 2, 0.2125, ["mov     rbp, [table]", "cmp     bucket, [table+8]", "jnb     short loc_CBC9"], ["mov~rbp,<TAG>", "cmp~bucket,[table+0]", "jnb~FOO"]], [1, 0, 16, 0, 0, 6, 0, 1, 0, 3, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     r12, table", "cmp     qword ptr [table+40h], 0", "jz      short loc_CB99"], ["push~r12", "push~rbp", "push~rbx", "mov~r12,table", "cmp~[word ptr [table+0],0", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 1, 3, 0.03333333333333333, ["cmp     qword ptr [table+20h], 0", "jz      short loc_CB99"], ["cmp~[word ptr [table+0],0", "jz~FOO"]], [1, 0, 13, 1, 0, 3, 0, 0, 4, 3, 0.20416666666666666, ["add     bucket, 10h", "cmp     [table+8], bucket", "jbe     short loc_CB99"], ["add~bucket,0", "cmp~[table+0],bucket", "jbe~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 5, 6, 0.05416666666666667, ["mov     rbx, cursor"], ["mov~rbx,cursor"]], [1, 0, 6, 1, 0, 3, 0, 1, 3, 2, 0.029166666666666667, ["add     bucket, 10h", "cmp     [table+8], bucket", "ja      short loc_CBA4"], ["add~bucket,0", "cmp~[table+0],bucket", "ja~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 2, 3, 0.0875, ["mov     rdi, [bucket+8]; ptr", "test    cursor, cursor", "jz      short loc_CBBE"], ["mov~rdi,[bucket+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 6, 0, 1, 5, 1, 2, 3, 3, 0.0, ["mov     rbx, [cursor+8]", "call    free", "mov     rdi, next", "test    next, next", "jnz     short loc_CBAD"], ["mov~rbx,[cursor+0]", "call~FOO", "mov~rdi,next", "test~next,next", "jnz~FOO"]], [0, 0, 14, 0, 0, 3, 0, 0, 2, 3, 0.058333333333333334, ["mov     rbp, [table]", "cmp     bucket, [table+8]", "jb      short loc_CB77"], ["mov~rbp,<TAG>", "cmp~bucket,[table+0]", "jb~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 3, 2, 0.0125, ["jmp     short loc_CBC9"], ["jmp~FOO"]], [0, 0, 13, 0, 1, 5, 1, 2, 6, 5, 0.07083333333333333, ["mov     rdi, [cursor]", "call    qword ptr [table+40h]", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_CB86"], ["mov~rdi,<TAG>", "call~[word ptr [table+0]", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.11666666666666667, ["mov     rdi, [table+48h]; ptr", "test    cursor, cursor", "jz      short loc_CBE4"], ["mov~rdi,[table+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 13, 0, 0, 1, 0, 1, 7, 4, 0.0875, ["jmp     short loc_CB6C"], ["jmp~FOO"]], [0, 0, 0, 0, 2, 8, 0, 2, 3, 0, 0.0, ["mov     cursor, [table]; ptr", "call    free", "mov     rdi, table; ptr", "call    free", "pop     rbx", "pop     bucket", "pop     table", "retn"], ["mov~cursor,<TAG>", "call~FOO", "mov~rdi,table", "call~FOO", "pop~rbx", "pop~bucket", "pop~table", "retn"]], [0, 0, 2, 0, 1, 5, 1, 2, 3, 1, 0.0, ["mov     rbx, [cursor+8]", "call    free", "mov     rdi, next", "test    next, next", "jnz     short loc_CBD3"], ["mov~rbx,[cursor+0]", "call~FOO", "mov~rdi,next", "test~next,next", "jnz~FOO"]]], "func_feature": [5, 6, 17, 0, 17, 29, 1, 56, 0.06838, 0, 2], "succs": [[5, 6], [0, 5], [8, 13], [2, 4], [2, 10], [1, 2], [12], [8, 13], [9, 7], [9, 7], [1, 11], [13], [12, 14], [16, 15], [5], [], [16, 15]], "fname": "hash_free", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.1208791208791209, ["mov     eax, ebp", "mov     rcx, [rsp+78h+var_20]", "xor     rcx, fs:28h", "jnz     short loc_CD5A"], ["mov~eax,ebp", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 6, 2, 0.03296703296703297, ["mov     rdi, [new_table+78h+new_size]; ptr", "call    free", "jmp     short loc_CD31"], ["mov~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 1, 13, 0, 2, 4, 2, 0.016483516483516484, ["mov     rdi, [table]; ptr", "call    free", "mov     rax, [new_table+78h+new_size]", "mov     [table], rax", "mov     rax, [new_table+78h+var_70]", "mov     [table+8], rax", "mov     rax, [new_table+78h+var_68]", "mov     [table+10h], rax", "mov     rax, [new_table+78h+var_60]", "mov     [table+18h], rax", "mov     rax, [new_table+78h+var_30]", "mov     [table+48h], rax", "jmp     short loc_CD31"], ["mov~rdi,<TAG>", "call~FOO", "mov~rax,<TAG>", "mov~<TAG>,rax", "mov~rax,[new_table+0]", "mov~[table+0],rax", "mov~rax,[new_table+0]", "mov~[table+0],rax", "mov~rax,[new_table+0]", "mov~[table+0],rax", "mov~rax,[new_table+0]", "mov~[table+0],rax", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.016483516483516484, ["mov     ebp, 1", "jmp     short loc_CD31"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 2, 0.016483516483516484, ["mov     ebp, 0", "jmp     short loc_CD31"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 1, 2, 0.016483516483516484, ["mov     ebp, 0"], ["mov~ebp,0"]], [1, 0, 0, 1, 0, 5, 0, 0, 3, -1, 0.0, ["add     rsp, 60h", "pop     table", "pop     rbp", "pop     r12", "retn"], ["add~rsp,0", "pop~table", "pop~rbp", "pop~r12", "retn"]], [1, 0, 5, 0, 1, 6, 1, 2, 5, 3, 0.04395604395604396, ["mov     rsi, new_table; src", "mov     edx, 0; safe", "mov     rdi, table; dst", "call    transfer_entries", "test    al, al", "jz      short loc_CD27"], ["mov~rsi,new_table", "mov~edx,0", "mov~rdi,table", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 6, 0, 1, 8, 1, 2, 4, 4, 0.06593406593406594, ["mov     rax, [new_table+78h+var_30]", "mov     [table+48h], rax", "mov     rsi, new_table; src", "mov     edx, 1; safe", "mov     rdi, table; dst", "call    transfer_entries", "test    al, al", "jz      short loc_CD27"], ["mov~rax,[new_table+0]", "mov~[table+0],rax", "mov~rsi,new_table", "mov~edx,0", "mov~rdi,table", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 14, 1, 1, 14, 2, 2, 0, 3, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 60h", "mov     rbx, table", "mov     table, candidate; candidate", "mov     rax, fs:28h", "mov     [rsp+78h+var_20], rax", "xor     eax, eax", "mov     r12, [table+28h]", "mov     candidate, r12; tuning", "call    compute_bucket_size", "test    new_size_0, new_size_0", "jz      loc_CD2C"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,table", "mov~table,candidate", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~r12,[table+0]", "mov~candidate,r12", "call~FOO", "test~new_size_0,new_size_0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 10, 0, 1, 6, 1, 2, 2, 3, 0.07692307692307693, ["mov     esi, 10h; size", "mov     rdi, new_size_0; nmemb", "call    _calloc", "mov     [new_table+78h+new_size], rax", "test    rax, rax", "jz      loc_CD53"], ["mov~esi,0", "mov~rdi,new_size_0", "call~FOO", "mov~<TAG>,rax", "test~rax,rax", "jz~FOO"]], [0, 0, 12, 0, 0, 3, 0, 1, 1, 3, 0.049450549450549455, ["mov     rbp, new_size_0", "cmp     [table+10h], new_size_0", "jz      loc_CD4C"], ["mov~rbp,new_size_0", "cmp~[table+0],new_size_0", "jz~FOO"]], [4, 0, 8, 2, 1, 22, 1, 2, 3, 3, 0.08241758241758243, ["mov     [new_table+78h+var_68], new_size_0", "shl     new_size_0, 4", "add     rbp, rax", "mov     [new_table+78h+var_70], rbp", "mov     [new_table+78h+var_60], 0", "mov     [new_table+78h+var_58], 0", "mov     [new_table+78h+var_50], r12", "mov     rax, [table+30h]", "mov     [new_table+78h+var_48], rax", "mov     rax, [table+38h]", "mov     [new_table+78h+var_40], rax", "mov     rax, [table+40h]", "mov     [new_table+78h+var_38], rax", "mov     rax, [table+48h]", "mov     [new_table+78h+var_30], rax", "mov     rdi, new_table; dst", "mov     edx, 0; safe", "mov     rsi, table; src", "call    transfer_entries", "mov     ebp, eax", "test    al, al", "jnz     short loc_CCF2"], ["mov~[new_table+0],new_size_0", "shl~new_size_0,0", "add~rbp,rax", "mov~[new_table+0],rbp", "mov~[new_table+0],0", "mov~[new_table+0],0", "mov~[new_table+0],r12", "mov~rax,[table+0]", "mov~[new_table+0],rax", "mov~rax,[table+0]", "mov~[new_table+0],rax", "mov~rax,[table+0]", "mov~[new_table+0],rax", "mov~rax,[table+0]", "mov~[new_table+0],rax", "mov~rdi,new_table", "mov~edx,0", "mov~rsi,table", "call~FOO", "mov~ebp,eax", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [9, 7, 20, 10, 15, 19, 2, 91, 0.0359, 1, 4], "succs": [[14, 6], [0], [0], [0], [0], [0], [], [1, 10], [10, 7], [12, 5], [], [4, 13], [3, 11], [8, 2], []], "fname": "hash_rehash", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 9, 0, 0, 3, 0, 1, 0, 0, 0.125, ["mov     rax, [rsp+28h+bucket]", "cmp     qword ptr [rax], 0", "jz      loc_CFAB"], ["mov~rax,<TAG>", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 22, 0, 0, 4, 0, 0, 11, 4, 0.15384615384615385, ["movaps  xmm3, xmm2", "mulss   xmm3, xmm0", "ucomiss xmm1, xmm3", "jbe     loc_CDFB"], ["movaps~xmm3,xmm2", "mulss~xmm3,xmm0", "ucomiss~xmm1,xmm3", "jbe~FOO"]], [1, 0, 11, 0, 1, 7, 1, 2, 18, 4, 0.05128205128205128, ["mov     rdx, rsp; bucket_head", "mov     ecx, 0; delete", "mov     rsi, entry; entry", "mov     rdi, table; table", "call    hash_find_entry", "test    rax, rax", "jz      loc_CDFB"], ["mov~rdx,rsp", "mov~ecx,0", "mov~rsi,entry", "mov~rdi,table", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 29, 0, 0, 3, 0, 1, 6, 4, 0.14487179487179488, ["mulss   xmm0, dword ptr [rdx+8]", "ucomiss xmm1, xmm0", "ja      short loc_CE79"], ["mulss~xmm0,[word ptr [rdx+0]", "ucomiss~xmm1,xmm0", "ja~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, 1, 0.046153846153846156, ["mov     eax, edx", "mov     rcx, [rsp+28h+var_20]", "xor     rcx, fs:28h", "jnz     loc_CFD6"], ["mov~eax,edx", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 14, 0, 0, 5, 1, 1, 16, 4, 0.0391025641025641, ["subss   xmm0, cs:dword_1528C", "cvttss2si rsi, xmm0", "mov     rax, 8000000000000000h", "xor     rsi, rax", "jmp     loc_CEF4"], ["subss~xmm0,<TAG>", "cvttss2si~rsi,xmm0", "mov~rax,0", "xor~rsi,rax", "jmp~FOO"]], [0, 0, 16, 0, 0, 2, 0, 0, 15, 5, 0.09487179487179487, ["ucomiss xmm0, cs:dword_1528C", "jnb     loc_CF6F"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 8, 4, 0.06666666666666667, ["mov     rax, [table+48h]", "test    rax, rax", "jz      loc_CF8E"], ["mov~rax,[table+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 28, 0, 1, 7, 1, 2, 7, 8, 0.10384615384615385, ["mov     rdi, table; table", "call    check_tuning", "mov     rdx, [table+28h]", "movss   xmm2, dword ptr [rdx+8]", "mov     rax, [table+10h]", "test    rax, rax", "js      loc_CF25"], ["mov~rdi,table", "call~FOO", "mov~rdx,[table+0]", "movss~xmm2,[word ptr [rdx+0]", "mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [1, 0, 38, 0, 1, 8, 1, 2, 1, 3, 0.02435897435897436, ["mov     rbx, table", "mov     rbp, entry", "mov     r12, matched_ent", "mov     matched_ent, rsp; bucket_head", "mov     ecx, 0; delete", "call    hash_find_entry", "test    data, data", "jz      short loc_CDC9"], ["mov~rbx,table", "mov~rbp,entry", "mov~r12,matched_ent", "mov~matched_ent,rsp", "mov~ecx,0", "call~FOO", "test~data,data", "jz~FOO"]], [1, 0, 40, 1, 0, 9, 2, 1, 0, 4, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 10h", "mov     rax, fs:28h", "mov     [rsp+28h+var_20], rax", "xor     eax, eax", "test    entry, entry", "jz      short loc_CDC4"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~entry,entry", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 9, 3, 0.009294871794871795, ["mov     rdx, [rax+8]", "mov     [table+48h], rdx"], ["mov~rdx,[rax+0]", "mov~[table+0],rdx"]], [0, 0, 26, 0, 0, 2, 0, 0, 8, 7, 0.05448717948717949, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [0, 0, 13, 0, 1, 4, 1, 2, 17, 3, 0.08141025641025641, ["mov     rdi, table; table", "call    hash_rehash", "test    al, al", "jz      loc_CFCC"], ["mov~rdi,table", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 4, 0, 0, 3, 1, 1, 2, 2, 0.005128205128205128, ["mov     edx, 0", "test    matched_ent, matched_ent", "jz      short loc_CDA5"], ["mov~edx,0", "test~matched_ent,matched_ent", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 19, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 3, 2, 0.0, ["mov     [matched_ent], data"], ["mov~<TAG>,data"]], [0, 0, 3, 0, 0, 1, 0, 1, 10, 2, 0.0016025641025641025, ["jmp     loc_CDA5"], ["jmp~FOO"]], [2, 0, 5, 0, 1, 5, 1, 2, 9, 3, 0.027243589743589744, ["mov     edi, 10h; size", "call    _malloc", "mov     edx, 0FFFFFFFFh", "test    rax, rax", "jnz     loc_CE1E"], ["mov~edi,0", "call~FOO", "mov~edx,0", "test~rax,rax", "jnz~FOO"]], [0, 0, 25, 0, 0, 3, 1, 1, 9, 6, 0.1346153846153846, ["mov     rax, [table+18h]", "test    rax, rax", "js      loc_CF43"], ["mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [2, 0, 26, 0, 0, 8, 2, 1, 8, 7, 0.05448717948717949, ["mov     rcx, rax", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "pxor    xmm0, xmm0", "cvtsi2ss xmm0, rcx", "addss   xmm0, xmm0", "jmp     loc_CEA0"], ["mov~rcx,rax", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rcx", "addss~xmm0,xmm0", "jmp~FOO"]], [2, 0, 23, 0, 0, 8, 2, 1, 10, 5, 0.06698717948717949, ["mov     rcx, rax", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "pxor    xmm1, xmm1", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_CEB6"], ["mov~rcx,rax", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 23, 0, 0, 2, 0, 0, 10, 5, 0.06698717948717949, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [2, 0, 3, 1, 0, 8, 0, 1, 10, 2, 0.004166666666666667, ["mov     [rax], entry", "mov     rdx, [rsp+28h+bucket]", "mov     rcx, [rdx+8]", "mov     [rax+8], rcx", "mov     [rdx+8], rax", "add     qword ptr [table+20h], 1", "mov     edx, 1", "jmp     loc_CDA5"], ["mov~<TAG>,entry", "mov~rdx,<TAG>", "mov~rcx,[rdx+0]", "mov~[rax+0],rcx", "mov~[rdx+0],rax", "add~[word ptr [table+0],0", "mov~edx,0", "jmp~FOO"]], [3, 0, 3, 2, 0, 5, 0, 1, 8, 2, 0.03076923076923077, ["mov     [rax], entry", "add     qword ptr [table+20h], 1", "add     qword ptr [table+18h], 1", "mov     edx, 1", "jmp     loc_CDA5"], ["mov~<TAG>,entry", "add~[word ptr [table+0],0", "add~[word ptr [table+0],0", "mov~edx,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 15, 2, 0.007692307692307693, ["mov     edx, 0FFFFFFFFh", "jmp     loc_CDA5"], ["mov~edx,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 18, 2, 0.007692307692307693, ["mov     edx, 0FFFFFFFFh", "jmp     loc_CDA5"], ["mov~edx,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 4, -1, 0.0, ["add     rsp, 10h", "pop     table", "pop     entry", "pop     matched_ent", "retn"], ["add~rsp,0", "pop~table", "pop~entry", "pop~matched_ent", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 18, 0, 0, 2, 0, 0, 14, 3, 0.11666666666666667, ["ucomiss xmm0, cs:dword_15288", "jnb     loc_CFC2"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 12, 5, 0.11282051282051282, ["cmp     byte ptr [tuning+10h], 0", "jz      loc_CF61"], ["cmp~[yte ptr [tuning+0],0", "jz~FOO"]], [0, 0, 35, 0, 0, 3, 1, 1, 2, 8, 0.041025641025641026, ["mov     data, [table+18h]", "test    rax, rax", "js      short loc_CE40"], ["mov~data,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 33, 0, 0, 2, 0, 0, 3, 7, 0.02980769230769231, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [2, 0, 33, 0, 0, 8, 2, 1, 3, 7, 0.02980769230769231, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "pxor    xmm1, xmm1", "cvtsi2ss xmm1, rdx", "addss   xmm1, xmm1", "jmp     short loc_CDDB"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rdx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 19, 0, 0, 3, 0, 1, 13, 4, 0.052243589743589745, ["mulss   xmm0, dword ptr [tuning+0Ch]", "mulss   xmm0, xmm2", "jmp     loc_CED5"], ["mulss~xmm0,[word ptr [tuning+0]", "mulss~xmm0,xmm2", "jmp~FOO"]], [0, 0, 19, 0, 0, 1, 0, 0, 13, 4, 0.052243589743589745, ["mulss   xmm0, dword ptr [tuning+0Ch]"], ["mulss~xmm0,[word ptr [tuning+0]"]], [0, 0, 32, 0, 0, 4, 1, 1, 4, 6, 0.09871794871794871, ["mov     rdx, [table+28h]", "mov     rax, [table+10h]", "test    rax, rax", "js      short loc_CE5B"], ["mov~rdx,[table+0]", "mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 30, 0, 0, 2, 0, 0, 5, 5, 0.05576923076923077, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [0, 0, 14, 0, 0, 1, 0, 0, 16, 4, 0.0391025641025641, ["cvttss2si rsi, xmm0; candidate"], ["cvttss2si~rsi,xmm0"]], [2, 0, 30, 0, 0, 8, 2, 1, 5, 5, 0.05576923076923077, ["mov     rcx, rax", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "pxor    xmm0, xmm0", "cvtsi2ss xmm0, rcx", "addss   xmm0, xmm0", "jmp     loc_CDF1"], ["mov~rcx,rax", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rcx", "addss~xmm0,xmm0", "jmp~FOO"]]], "func_feature": [8, 22, 34, 1, 41, 55, 1, 155, 0.05089, 3, 5], "succs": [[8, 25], [0, 31], [0, 16], [0, 9], [], [28, 4], [14], [6, 39], [19, 12], [13, 21], [32, 15], [10, 29], [24], [20], [2, 27], [17, 5], [], [5], [5], [24, 18], [22, 23], [20], [1], [1], [5], [5], [5], [5], [], [], [26, 7], [35, 36], [33, 34], [37], [37], [30], [30], [40, 38], [3], [14], [3]], "fname": "hash_insert_if_absent", "n_num": 41}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0.0, ["add     rsp, 10h", "pop     rbx", "retn"], ["add~rsp,0", "pop~rbx", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.26666666666666666, ["mov     err, rbx", "mov     rcx, [rsp+18h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_D028"], ["mov~err,rbx", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 1, 2, 0.08333333333333333, ["test    eax, eax", "jnz     short loc_D008"], ["test~eax,eax", "jnz~FOO"]], [2, 0, 6, 1, 1, 10, 1, 2, 0, 3, 0.0, ["push    rbx", "sub     rsp, 10h", "mov     rbx, entry", "mov     rax, fs:28h", "mov     [rsp+18h+var_10], rax", "xor     eax, eax", "mov     rdx, rsp; matched_ent", "call    hash_insert_if_absent", "cmp     eax, 0FFFFFFFFh", "jz      short loc_D021"], ["push~rbx", "sub~rsp,0", "mov~rbx,entry", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rdx,rsp", "call~FOO", "cmp~eax,0", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 2, 2, 0.0, ["mov     entry, [rsp+18h+matched_ent]"], ["mov~entry,<TAG>"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 2, 0.05, ["mov     ebx, 0", "jmp     short loc_D008"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 3, 6, 1, 7, 8, 3, 23, 0.05714, 1, 2], "succs": [[], [0, 6], [1, 4], [2, 5], [1], [1], []], "fname": "hash_insert", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 15, 0, 0, 2, 0, 0, 0, 0, 0.10344827586206896, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [0, 0, 17, 0, 0, 3, 1, 1, 9, 4, 0.21798029556650247, ["mov     rax, [table+18h]", "test    rax, rax", "js      loc_D1C7"], ["mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 1, 1, 0.0665024630541872, ["mov     rax, data", "mov     rcx, [rsp+28h+var_20]", "xor     rcx, fs:28h", "jnz     loc_D240"], ["mov~rax,data", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [2, 0, 25, 0, 0, 8, 2, 1, 3, 5, 0.04248768472906404, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "pxor    xmm0, xmm0", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0", "jmp     loc_D0AA"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0", "jmp~FOO"]], [1, 0, 27, 1, 0, 5, 1, 1, 2, 6, 0.059113300492610835, ["mov     rax, [table+18h]", "sub     rax, 1", "mov     [table+18h], rax", "test    rax, rax", "js      loc_D16D"], ["mov~rax,[table+0]", "sub~rax,0", "mov~[table+0],rax", "test~rax,rax", "js~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 2, -1, 0.0, ["add     rsp, 10h", "pop     table", "pop     rbp", "pop     r12", "retn"], ["add~rsp,0", "pop~table", "pop~rbp", "pop~r12", "retn"]], [0, 0, 14, 0, 0, 4, 0, 0, 11, 2, 0.22536945812807882, ["movaps  xmm2, xmm0", "mulss   xmm2, dword ptr [rdx]", "ucomiss xmm2, xmm1", "jbe     loc_D06C"], ["movaps~xmm2,xmm0", "mulss~xmm2,<TAG>", "ucomiss~xmm2,xmm1", "jbe~FOO"]], [2, 0, 15, 0, 0, 8, 2, 1, 10, 3, 0.10344827586206896, ["mov     rcx, rax", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "pxor    xmm1, xmm1", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_D105"], ["mov~rcx,rax", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 9, 0, 0, 4, 0, 0, 13, 4, 0.08559113300492611, ["mulss   xmm0, dword ptr [tuning+4]", "mulss   xmm0, dword ptr [tuning+8]", "ucomiss xmm0, cs:dword_1528C", "jnb     short loc_D221"], ["mulss~xmm0,[word ptr [tuning+0]", "mulss~xmm0,[word ptr [tuning+0]", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 12, 5, 0.19704433497536947, ["cmp     byte ptr [tuning+10h], 0", "jz      loc_D204"], ["cmp~[yte ptr [tuning+0],0", "jz~FOO"]], [2, 0, 28, 1, 0, 4, 0, 1, 1, 2, 0.03078817733990148, ["sub     qword ptr [table+20h], 1", "mov     data, [rsp+28h+bucket]", "cmp     qword ptr [rax], 0", "jz      short loc_D08C"], ["sub~[word ptr [table+0],0", "mov~data,<TAG>", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 14, 3, 0.026169950738916255, ["cvttss2si rsi, xmm0", "jmp     loc_D136"], ["cvttss2si~rsi,xmm0", "jmp~FOO"]], [2, 0, 22, 0, 0, 8, 2, 1, 5, 3, 0.07758620689655173, ["mov     rcx, rax", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "pxor    xmm1, xmm1", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_D0C4"], ["mov~rcx,rax", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 24, 0, 0, 4, 1, 1, 4, 4, 0.14039408866995073, ["mov     rdx, [table+28h]", "mov     rax, [table+10h]", "test    rax, rax", "js      loc_D18B"], ["mov~rdx,[table+0]", "mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 25, 0, 0, 2, 0, 0, 3, 5, 0.04248768472906404, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [0, 0, 9, 0, 0, 3, 0, 0, 13, 4, 0.08559113300492611, ["mulss   xmm0, dword ptr [tuning+4]", "ucomiss xmm0, cs:dword_1528C", "jnb     loc_D1E5"], ["mulss~xmm0,[word ptr [tuning+0]", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 14, 3, 0.026169950738916255, ["cvttss2si rsi, xmm0; candidate"], ["cvttss2si~rsi,xmm0"]], [1, 0, 7, 0, 0, 5, 1, 1, 14, 3, 0.026169950738916255, ["subss   xmm0, cs:dword_1528C", "cvttss2si rsi, xmm0", "mov     rax, 8000000000000000h", "xor     rsi, rax", "jmp     loc_D136"], ["subss~xmm0,<TAG>", "cvttss2si~rsi,xmm0", "mov~rax,0", "xor~rsi,rax", "jmp~FOO"]], [0, 0, 22, 0, 0, 2, 0, 0, 5, 3, 0.07758620689655173, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [0, 0, 6, 0, 1, 4, 1, 2, 15, 2, 0.11083743842364532, ["mov     rdi, table; table", "call    hash_rehash", "test    al, al", "jnz     loc_D06C"], ["mov~rdi,table", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 7, 0, 0, 5, 1, 1, 14, 3, 0.026169950738916255, ["subss   xmm0, cs:dword_1528C", "cvttss2si rsi, xmm0", "mov     rax, 8000000000000000h", "xor     rsi, rax", "jmp     loc_D136"], ["subss~xmm0,<TAG>", "cvttss2si~rsi,xmm0", "mov~rax,0", "xor~rsi,rax", "jmp~FOO"]], [2, 0, 18, 0, 0, 8, 2, 1, 8, 5, 0.09421182266009852, ["mov     rcx, rax", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "pxor    xmm0, xmm0", "cvtsi2ss xmm0, rcx", "addss   xmm0, xmm0", "jmp     loc_D0EF"], ["mov~rcx,rax", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rcx", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 20, 0, 1, 6, 1, 2, 7, 6, 0.18842364532019704, ["mov     rdi, table; table", "call    check_tuning", "mov     rdx, [table+28h]", "mov     rax, [table+10h]", "test    rax, rax", "js      loc_D1A9"], ["mov~rdi,table", "call~FOO", "mov~rdx,[table+0]", "mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 21, 0, 0, 3, 0, 0, 6, 2, 0.19950738916256158, ["mulss   xmm1, dword ptr [rdx]", "ucomiss xmm1, xmm0", "jbe     short loc_D06C"], ["mulss~xmm1,<TAG>", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 16, 3, 0.059113300492610835, ["mov     rdi, [table+48h]; ptr", "test    cursor, cursor", "jz      short loc_D160"], ["mov~rdi,[table+0]", "test~cursor,cursor", "jz~FOO"]], [2, 0, 29, 1, 1, 14, 2, 2, 0, 2, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 10h", "mov     rbx, table", "mov     rax, fs:28h", "mov     [rsp+28h+var_20], rax", "xor     eax, eax", "mov     rdx, rsp; bucket_head", "mov     ecx, 1; delete", "call    hash_find_entry", "mov     rbp, rax", "test    data, data", "jz      short loc_D06C"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,table", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rdx,rsp", "mov~ecx,0", "call~FOO", "mov~rbp,rax", "test~data,data", "jz~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 17, 3, 0.0, ["mov     r12, [cursor+8]", "call    free", "mov     rdi, next", "test    next, next", "jnz     short loc_D14F"], ["mov~r12,[cursor+0]", "call~FOO", "mov~rdi,next", "test~next,next", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 17, 2, 0.007389162561576354, ["mov     qword ptr [table+48h], 0", "jmp     loc_D06C"], ["mov~[word ptr [table+0],0", "jmp~FOO"]], [0, 0, 18, 0, 0, 2, 0, 0, 8, 5, 0.09421182266009852, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]]], "func_feature": [5, 20, 24, 1, 30, 43, 1, 129, 0.08046, 2, 4], "succs": [[7], [0, 8], [], [2, 6], [14], [4, 15], [], [10, 3], [7], [18, 12], [16, 9], [3, 5], [20], [24], [19, 13], [14], [17, 21], [20], [20], [24], [25, 3], [20], [1], [29, 22], [3, 23], [27, 28], [3, 11], [27, 28], [3], [1]], "fname": "hash_delete", "n_num": 30}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[3, 0, 0, 3, 1, 15, 1, 1, 0, 0, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbp, x", "mov     rbx, table_size", "mov     p, [p]; x", "call    hash_pjw", "xor     tmp, [p+8]", "mov     edx, 0", "div     table_size", "mov     rax, rdx", "add     rsp, 8", "pop     table_size", "pop     p", "retn"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,x", "mov~rbx,table_size", "mov~p,<TAG>", "call~FOO", "xor~tmp,[p+0]", "mov~edx,0", "div~,table_size", "mov~rax,rdx", "add~rsp,0", "pop~table_size", "pop~p", "retn"]]], "func_feature": [1, 1, 1, 0, 1, 0, 0, 15, 0.0, 0, 3], "succs": [[]], "fname": "triple_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 0, 1, 0, 5, 0, 0, 0, 0, 0.0, ["mov     rax, [p+8]", "mov     edx, 0", "div     table_size", "mov     rax, rdx", "retn"], ["mov~rax,[p+0]", "mov~edx,0", "div~,table_size", "mov~rax,rdx", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 5, 0.0, 0, 1], "succs": [[]], "fname": "triple_hash_no_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0.0, ["and     eax, 1", "retn"], ["and~eax,0", "retn"]], [0, 0, 2, 0, 0, 3, 0, 1, 1, 1, 0.16666666666666666, ["mov     rcx, [b+10h]", "cmp     [a+10h], rcx", "jnz     short loc_D28E"], ["mov~rcx,[b+0]", "cmp~[a+0],rcx", "jnz~FOO"]], [1, 0, 3, 0, 0, 4, 0, 1, 0, 2, 0.0, ["mov     eax, 0", "mov     rdx, [b+8]", "cmp     [a+8], rdx", "jz      short loc_D292"], ["mov~eax,0", "mov~rdx,[b+0]", "cmp~[a+0],rdx", "jz~FOO"]], [3, 0, 0, 2, 1, 8, 1, 1, 2, 0, 0.0, ["sub     rsp, 8", "mov     b, [b]; dest", "mov     a, [a]; source", "call    same_name", "movzx   eax, al", "and     eax, 1", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "movzx~eax,al", "and~eax,0", "add~rsp,0", "retn"]]], "func_feature": [1, 2, 3, 0, 4, 4, 0, 17, 0.04167, 0, 2], "succs": [[], [0, 3], [0, 1], []], "fname": "triple_compare", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0.0, ["and     eax, 1", "retn"], ["and~eax,0", "retn"]], [0, 0, 2, 0, 0, 3, 0, 1, 1, 1, 0.16666666666666666, ["mov     rcx, [b+10h]", "cmp     [a+10h], rcx", "jnz     short loc_D2C5"], ["mov~rcx,[b+0]", "cmp~[a+0],rcx", "jnz~FOO"]], [1, 0, 3, 0, 0, 4, 0, 1, 0, 2, 0.0, ["mov     eax, 0", "mov     rdx, [b+8]", "cmp     [a+8], rdx", "jz      short loc_D2C9"], ["mov~eax,0", "mov~rdx,[b+0]", "cmp~[a+0],rdx", "jz~FOO"]], [3, 0, 0, 2, 1, 10, 2, 1, 2, 0, 0.0, ["sub     rsp, 8", "mov     b, [b]; s2", "mov     a, [a]; s1", "call    _strcmp", "test    eax, eax", "setz    al", "movzx   eax, al", "and     eax, 1", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~b,<TAG>", "mov~a,<TAG>", "call~FOO", "test~eax,eax", "setz~al", "movzx~eax,al", "and~eax,0", "add~rsp,0", "retn"]]], "func_feature": [1, 3, 3, 0, 4, 4, 0, 19, 0.04167, 0, 2], "succs": [[], [0, 3], [0, 1], []], "fname": "triple_compare_ino_str", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 2, 8, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, x", "mov     a, [a]; ptr", "call    free", "mov     rdi, a; ptr", "call    free", "pop     a", "retn"], ["push~rbx", "mov~rbx,x", "mov~a,<TAG>", "call~FOO", "mov~rdi,a", "call~FOO", "pop~a", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 1, 8, 0.0, 0, 0], "succs": [[]], "fname": "triple_free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 1, 0, 2, 7, 0, 3, 0, 0, 0.025, ["call    ___errno_location", "mov     pnew_fd, rax", "mov     r13d, [rax]", "mov     edi, ebx; fd", "call    _close", "mov     [r12], r13d", "jmp     short loc_D33E"], ["call~FOO", "mov~pnew_fd,rax", "mov~r13d,<TAG>", "mov~edi,ebx", "call~FOO", "mov~<TAG>,r13d", "jmp~FOO"]], [0, 0, 3, 0, 1, 6, 1, 2, 1, -1, 0.1, ["mov     ebx, eax", "mov     edi, eax; fd", "call    _fdopendir", "mov     rbp, rax", "test    dirp, dirp", "jz      short loc_D34C"], ["mov~ebx,eax", "mov~edi,eax", "call~FOO", "mov~rbp,rax", "test~dirp,dirp", "jz~FOO"]], [3, 0, 5, 1, 1, 11, 2, 2, 0, 1, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r12, pnew_fd", "or      edx, 90900h; flags", "mov     eax, 0", "call    openat_safer", "test    eax, eax", "js      short loc_D364"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r12,pnew_fd", "or~edx,0", "mov~eax,0", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.05, ["mov     ebp, 0", "jmp     short loc_D33E"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 2, -1, 0.0, ["mov     rax, rbp", "add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["mov~rax,rbp", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 1, 0, 0, 1, 0, 0, 2, -1, 0.025, ["mov     [pnew_fd], ebx"], ["mov~<TAG>,ebx"]]], "func_feature": [4, 3, 8, 0, 6, 7, 1, 34, 0.03333, 0, 2], "succs": [[4], [0, 5], [1, 3], [4], [], [4]], "fname": "opendirat", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 0, 4, 1, 1, 11, 1, 2, 0, 0, 0.13333333333333333, ["mov     rbx, argv0", "mov     esi, 2Fh ; '/'; c", "call    _strrchr", "lea     rdx, [slash+1]", "test    slash, slash", "mov     slash, rdx", "cmovz   rax, argv0", "mov     rdx, base", "sub     rdx, argv0", "cmp     rdx, 6", "jle     short loc_D3DD"], ["mov~rbx,argv0", "mov~esi,0", "call~FOO", "lea~rdx,[slash+0]", "test~slash,slash", "mov~slash,rdx", "cmovz~rax,argv0", "mov~rdx,base", "sub~rdx,argv0", "cmp~rdx,0", "jle~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 0, 1, 0.0, ["push    rbx", "test    argv0, argv0", "jz      short loc_D3ED"], ["push~rbx", "test~argv0,argv0", "jz~FOO"]], [2, 0, 0, 0, 2, 6, 0, 2, 1, 0, 0.0, ["mov     rcx, cs:stderr@@GLIBC_2_2_5; s", "mov     edx, 37h ; '7'; n", "mov     esi, 1; size", "lea     argv0, aANullArgv0WasP; \"A NULL argv[0] was passed through an ex\"...", "call    _fwrite", "call    _abort"], ["mov~rcx,<TAG>", "mov~edx,0", "mov~esi,0", "lea~argv0,<TAG>", "call~FOO", "call~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["mov     cs:program_name, argv0", "mov     cs:program_invocation_name@@GLIBC_2_2_5, argv0", "pop     argv0", "retn"], ["mov~<TAG>,argv0", "mov~<TAG>,argv0", "pop~argv0", "retn"]], [2, 0, 3, 0, 0, 8, 1, 1, 2, -1, 0.13333333333333333, ["lea     rsi, [base-7]", "mov     ecx, 7", "lea     rdi, aLibs; \"/.libs/\"", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     short loc_D3DD"], ["lea~rsi,[base-7]+0]", "mov~ecx,0", "lea~rdi,<TAG>", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "test~dl,dl", "jnz~FOO"]], [2, 0, 2, 0, 0, 9, 1, 1, 3, -1, 0.1, ["mov     ecx, 3", "lea     rdi, aLt; \"lt-\"", "mov     rsi, base", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "mov     rbx, base", "test    dl, dl", "jnz     short loc_D3DD"], ["mov~ecx,0", "lea~rdi,<TAG>", "mov~rsi,base", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "mov~rbx,base", "test~dl,dl", "jnz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 4, -1, 0.0, ["lea     rbx, [base+3]", "mov     cs:__bss_start, argv0"], ["lea~rbx,[base+0]", "mov~<TAG>,argv0"]]], "func_feature": [3, 4, 7, 0, 7, 9, 1, 43, 0.05238, 7, 1], "succs": [[3, 4], [0, 2], [], [], [3, 5], [3, 6], [3]], "fname": "set_program_name", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.30000000000000004, ["mov     eax, ebp", "mov     rbx, [rsp+28h+var_20]", "xor     rbx, fs:28h", "jnz     short loc_D47D"], ["mov~eax,ebp", "mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 2, 0.07500000000000001, ["mov     ebp, 0FFFFFFFEh", "jmp     short loc_D45B"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 3, 0, 2, 8, 0, 2, 1, 2, 0.07500000000000001, ["lea     rbx, [rsp+28h+ctx]", "mov     edx, r12d; desc", "mov     rsi, dst_name; name", "mov     rdi, rbx; ctx", "call    set_permissions", "mov     ebp, eax", "mov     rdi, rbx; ctx", "call    free_permission_context"], ["lea~rbx,[rsp+0]", "mov~edx,r12d", "mov~rsi,dst_name", "mov~rdi,rbx", "call~FOO", "mov~ebp,eax", "mov~rdi,rbx", "call~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 3, -1, 0.0, ["add     rsp, 10h", "pop     rbx", "pop     rbp", "pop     dest_desc", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~dest_desc", "retn"]], [1, 0, 5, 1, 1, 14, 2, 2, 0, 3, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 10h", "mov     rbp, dst_name", "mov     r12d, ecx", "mov     rax, fs:28h", "mov     [rsp+28h+var_20], rax", "xor     eax, eax", "lea     dest_desc, [rsp+28h+ctx]; ctx", "mov     edx, r8d; mode", "call    get_permissions", "test    eax, eax", "jnz     short loc_D476"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,dst_name", "mov~r12d,ecx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~dest_desc,[rsp+0]", "mov~edx,r8d", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [4, 3, 7, 1, 6, 6, 1, 34, 0.075, 1, 2], "succs": [[3, 5], [0], [0], [], [1, 2], []], "fname": "qcopy_acl", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 0, 1, 0, 5, 0, 0, 0, 0, 0.0, ["mov     eax, ebp", "add     rsp, 18h", "pop     rbx", "pop     ret", "retn"], ["mov~eax,ebp", "add~rsp,0", "pop~rbx", "pop~ret", "retn"]], [1, 0, 2, 1, 2, 18, 2, 3, 0, 1, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+28h+var_20], rax", "xor     eax, eax", "mov     [rsp+28h+ctx.mode], edx", "lea     rbx, [rsp+28h+ctx]", "mov     edx, esi; desc", "mov     desc, name; name", "mov     name, rbx; ctx", "call    set_permissions", "mov     ebp, eax", "mov     rdi, rbx; ctx", "call    free_permission_context", "mov     rcx, [rsp+28h+var_20]", "xor     rcx, fs:28h", "jnz     short loc_D4D1"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~[rsp+0],edx", "lea~rbx,[rsp+0]", "mov~edx,esi", "mov~desc,name", "mov~name,rbx", "call~FOO", "mov~ebp,eax", "mov~rdi,rbx", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 2, 4, 1, 3, 2, 2, 24, 0.0, 1, 2], "succs": [[], [0, 2], []], "fname": "qset_acl", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 9, 0, 0, 4, 1, 0, 0, 0, 0.09923076923076923, ["movzx   eax, byte ptr [s1+7]", "and     eax, 0FFFFFFDFh", "cmp     al, r9b", "setz    dl"], ["movzx~eax,[yte ptr [s1+0]", "and~eax,0", "cmp~al,r9b", "setz~dl"]], [0, 1, 11, 0, 0, 3, 0, 1, 12, 5, 0.23076923076923078, ["lea     eax, [s27-41h]", "cmp     al, 19h", "ja      loc_D600"], ["lea~eax,[s27-41h]+0]", "cmp~al,<STR>", "ja~FOO"]], [0, 0, 9, 0, 0, 3, 0, 1, 13, 4, 0.09923076923076923, ["cmp     [s1+7], r9b", "setz    dl", "jmp     loc_D588"], ["cmp~[s1+0],r9b", "setz~dl", "jmp~FOO"]], [1, 0, 22, 0, 0, 3, 1, 1, 3, 14, 0.12923076923076923, ["mov     eax, 1", "test    dl, dl", "jz      loc_D5D8"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]], [1, 0, 23, 0, 0, 3, 1, 1, 2, 15, 0.10615384615384615, ["mov     eax, 0", "test    r10b, r10b", "jz      loc_D5D8"], ["mov~eax,0", "test~r10b,r10b", "jz~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 14, 3, 0.19846153846153847, ["mov     eax, 0", "test    dl, dl", "jz      short loc_D5D8"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 0, 1, 17, 0, 0.04923076923076923, ["cmp     [s1+8], r11b", "setz    dl", "jmp     short loc_D5B0"], ["cmp~[s1+0],r11b", "setz~dl", "jmp~FOO"]], [0, 1, 6, 0, 0, 3, 0, 1, 16, 1, 0.15384615384615385, ["lea     eax, [r11-41h]", "cmp     al, 19h", "ja      short loc_D60C"], ["lea~eax,[r11-41h]+0]", "cmp~al,<STR>", "ja~FOO"]], [0, 1, 21, 0, 0, 3, 0, 1, 4, 13, 0.15384615384615385, ["lea     eax, [s25-41h]", "cmp     al, 19h", "ja      loc_D5E9"], ["lea~eax,[s25-41h]+0]", "cmp~al,<STR>", "ja~FOO"]], [1, 0, 7, 0, 0, 3, 1, 1, 15, 2, 0.1753846153846154, ["mov     eax, 1", "test    r9b, r9b", "jz      short loc_D5D8"], ["mov~eax,0", "test~r9b,r9b", "jz~FOO"]], [1, 0, 19, 0, 0, 4, 1, 0, 5, 12, 0.08384615384615385, ["movzx   eax, byte ptr [s1+5]", "and     eax, 0FFFFFFDFh", "cmp     al, cl", "setz    dl"], ["movzx~eax,[yte ptr [s1+0]", "and~eax,0", "cmp~al,cl", "setz~dl"]], [1, 0, 4, 0, 0, 4, 1, 0, 17, -1, 0.04923076923076923, ["movzx   eax, byte ptr [s1+8]", "and     eax, 0FFFFFFDFh", "cmp     al, r11b", "setz    dl"], ["movzx~eax,[yte ptr [s1+0]", "and~eax,0", "cmp~al,r11b", "setz~dl"]], [1, 0, 18, 0, 0, 3, 1, 1, 6, 11, 0.21384615384615385, ["mov     eax, 0", "test    dl, dl", "jz      loc_D5D8"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]], [0, 0, 19, 0, 0, 3, 0, 1, 5, 12, 0.08384615384615385, ["cmp     [s1+5], cl", "setz    dl", "jmp     loc_D529"], ["cmp~[s1+0],cl", "setz~dl", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 18, -1, 0.07538461538461538, ["mov     eax, 0", "test    dl, dl", "jz      short loc_D5D8"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]], [1, 0, 17, 0, 0, 3, 1, 1, 7, 10, 0.22153846153846155, ["mov     eax, 1", "test    cl, cl", "jz      loc_D5D8"], ["mov~eax,0", "test~cl,cl", "jz~FOO"]], [1, 0, 2, 0, 0, 3, 1, 1, 19, -1, 0.03692307692307692, ["mov     eax, 1", "test    r11b, r11b", "jz      short loc_D5D8"], ["mov~eax,0", "test~r11b,r11b", "jz~FOO"]], [0, 1, 16, 0, 0, 3, 0, 1, 8, 9, 0.23076923076923078, ["lea     eax, [s26-41h]", "cmp     al, 19h", "ja      loc_D5F4"], ["lea~eax,[s26-41h]+0]", "cmp~al,<STR>", "ja~FOO"]], [2, 0, 1, 2, 1, 6, 1, 1, 20, -1, 0.0, ["add     s2, 9; s2", "add     s1, 9; s1", "call    c_strcasecmp", "test    eax, eax", "setz    al", "movzx   eax, al"], ["add~s2,0", "add~s1,0", "call~FOO", "test~eax,eax", "setz~al", "movzx~eax,al"]], [0, 0, 24, 0, 0, 3, 0, 1, 1, 16, 0.01846153846153846, ["cmp     [s1+4], dl", "setz    r10b", "jmp     loc_D4F7"], ["cmp~[s1+0],dl", "setz~r10b", "jmp~FOO"]], [1, 1, 26, 1, 0, 5, 0, 1, 0, 17, 0.0, ["sub     rsp, 8", "mov     r11d, [rsp+8+s28]", "lea     eax, [s24-41h]", "cmp     al, 19h", "ja      loc_D5DD"], ["sub~rsp,0", "mov~r11d,[rsp+0]", "lea~eax,[s24-41h]+0]", "cmp~al,<STR>", "ja~FOO"]], [1, 0, 14, 0, 0, 4, 1, 0, 9, 8, 0.11076923076923077, ["movzx   eax, byte ptr [s1+6]", "and     eax, 0FFFFFFDFh", "cmp     al, r8b", "setz    dl"], ["movzx~eax,[yte ptr [s1+0]", "and~eax,0", "cmp~al,r8b", "setz~dl"]], [1, 0, 0, 1, 0, 2, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 13, 0, 0, 3, 1, 1, 10, 7, 0.24461538461538462, ["mov     eax, 0", "test    dl, dl", "jz      short loc_D5D8"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]], [1, 0, 12, 0, 0, 3, 1, 1, 11, 6, 0.23692307692307693, ["mov     eax, 1", "test    r8b, r8b", "jz      short loc_D5D8"], ["mov~eax,0", "test~r8b,r8b", "jz~FOO"]], [0, 0, 14, 0, 0, 3, 0, 1, 9, 8, 0.11076923076923077, ["cmp     [s1+6], r8b", "setz    dl", "jmp     loc_D55C"], ["cmp~[s1+0],r8b", "setz~dl", "jmp~FOO"]], [1, 0, 24, 0, 0, 4, 1, 0, 1, 16, 0.01846153846153846, ["movzx   eax, byte ptr [s1+4]", "and     eax, 0FFFFFFDFh", "cmp     al, dl", "setz    r10b"], ["movzx~eax,[yte ptr [s1+0]", "and~eax,0", "cmp~al,dl", "setz~r10b"]]], "func_feature": [1, 16, 21, 0, 27, 41, 2, 90, 0.11595, 0, 4], "succs": [[5], [0, 2], [5], [8, 22], [3, 22], [9, 22], [14], [11, 6], [10, 13], [22, 7], [12], [14], [22, 15], [12], [16, 22], [17, 22], [18, 22], [25, 21], [22], [4], [26, 19], [23], [], [24, 22], [1, 22], [23], [4]], "fname": "strcaseeq4", "n_num": 27}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 0, 6, 0, 0, 4, 1, 1, 0, 0, 0.06593406593406594, ["movzx   edx, byte ptr [locale_code+1]", "and     edx, 0FFFFFFDFh", "cmp     dl, 42h ; 'B'", "jnz     loc_D737"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 2, 1, 0.0631868131868132, ["cmp     dl, 47h ; 'G'", "jnz     loc_D737"], ["cmp~dl,0", "jnz~FOO"]], [2, 0, 5, 0, 0, 4, 1, 1, 3, 1, 0.049450549450549455, ["movzx   edx, byte ptr [locale_code+2]", "and     edx, 0FFFFFFDFh", "cmp     dl, 46h ; 'F'", "jnz     short loc_D737"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [2, 0, 6, 0, 0, 4, 1, 1, 2, 1, 0.0521978021978022, ["movzx   edx, byte ptr [locale_code+1]", "and     edx, 0FFFFFFDFh", "cmp     dl, 54h ; 'T'", "jnz     short loc_D737"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [1, 0, 1, 0, 0, 5, 0, 1, 7, -1, 0.0027472527472527475, ["cmp     byte ptr [msgid], 60h ; '`'", "lea     rax, unk_152E7", "lea     rdx, unk_152E0", "cmovnz  rax, rdx", "jmp     loc_D637"], ["cmp~<TAG>,0", "lea~rax,<TAG>", "lea~rdx,<TAG>", "cmovnz~rax,rdx", "jmp~FOO"]], [7, 0, 3, 2, 1, 12, 1, 2, 6, 1, 0.03296703296703297, ["sub     rsp, 8", "push    0; s28", "mov     r9d, 0; s27", "mov     r8d, 30h ; '0'; s26", "mov     ecx, 33h ; '3'; s25", "mov     edx, 30h ; '0'; s24", "lea     rsi, aGb18030; \"GB18030\"", "mov     rdi, locale_code; s1", "call    strcaseeq4", "add     rsp, 10h", "test    eax, eax", "jz      loc_D737"], ["sub~rsp,0", "push~0", "mov~r9d,0", "mov~r8d,0", "mov~ecx,0", "mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,locale_code", "call~FOO", "add~rsp,0", "test~eax,eax", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 4, 1, 0.04395604395604396, ["cmp     byte ptr [locale_code+3], 2Dh ; '-'", "jnz     short loc_D737"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 5, 1, 0.05494505494505495, ["cmp     byte ptr [locale_code+3], 38h ; '8'", "jnz     loc_D737"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 4, 1, 0.06593406593406594, ["cmp     byte ptr [locale_code+2], 31h ; '1'", "jnz     loc_D737"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [2, 0, 13, 0, 1, 5, 1, 2, 1, 2, 0.06593406593406594, ["call    locale_charset", "movzx   edx, byte ptr [locale_code]", "and     edx, 0FFFFFFDFh", "cmp     dl, 55h ; 'U'", "jz      short loc_D6CC"], ["call~FOO", "movzx~edx,<TAG>", "and~edx,0", "cmp~dl,0", "jz~FOO"]], [3, 0, 14, 1, 1, 11, 0, 2, 0, 3, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbx, msgid", "mov     ebp, esi", "mov     edx, 5; category", "mov     s, msgid; msgid", "mov     edi, 0; domainname", "call    _dcgettext", "cmp     msgid, translation", "jz      short loc_D63E"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,msgid", "mov~ebp,esi", "mov~edx,0", "mov~s,msgid", "mov~edi,0", "call~FOO", "cmp~msgid,translation", "jz~FOO"]], [1, 0, 1, 0, 0, 5, 0, 1, 6, -1, 0.0027472527472527475, ["cmp     byte ptr [msgid], 60h ; '`'", "lea     rax, unk_152EB", "lea     rdx, unk_152DC", "cmovnz  rax, rdx", "jmp     loc_D637"], ["cmp~<TAG>,0", "lea~rax,<TAG>", "lea~rdx,<TAG>", "cmovnz~rax,rdx", "jmp~FOO"]], [7, 0, 3, 2, 1, 12, 1, 2, 5, 1, 0.027472527472527476, ["sub     rsp, 8", "push    0; s28", "mov     r9d, 0; s27", "mov     r8d, 0; s26", "mov     ecx, 0; s25", "mov     edx, 38h ; '8'; s24", "lea     rsi, aUtf8; \"UTF-8\"", "mov     rdi, locale_code; s1", "call    strcaseeq4", "add     rsp, 10h", "test    eax, eax", "jz      short loc_D737"], ["sub~rsp,0", "push~0", "mov~r9d,0", "mov~r8d,0", "mov~ecx,0", "mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,locale_code", "call~FOO", "add~rsp,0", "test~eax,eax", "jz~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 1, -1, 0.0, ["add     rsp, 8", "pop     msgid", "pop     s", "retn"], ["add~rsp,0", "pop~msgid", "pop~s", "retn"]], [1, 0, 1, 0, 0, 5, 0, 1, 3, 0, 0.049450549450549455, ["cmp     ebp, 9", "lea     rax, asc_152E5; \"\\\"\"", "lea     rdx, asc_152E3; \"'\"", "cmovnz  rax, rdx", "jmp     loc_D637"], ["cmp~ebp,0", "lea~rax,<TAG>", "lea~rdx,<TAG>", "cmovnz~rax,rdx", "jmp~FOO"]]], "func_feature": [4, 6, 18, 0, 15, 25, 2, 79, 0.03846, 8, 6], "succs": [[8, 14], [0, 14], [14, 6], [2, 14], [13], [4, 14], [12, 14], [5, 14], [14, 7], [1, 3], [9, 13], [13], [11, 14], [], [13]], "fname": "gettext_quote", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 0, 266, 0, 0, 7, 0, 1, 0, 0, 0.003702652858561498, ["movzx   eax, [rsp+0E8h+elide_outer_quotes]", "mov     [rsp+0E8h+backslash_escapes], al", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_152E5; \"\\\"\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 0", "jmp     loc_D84E"], ["movzx~eax,[rsp+0]", "mov~[rsp+0],al", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 3, 10, 0.013306852035749751, ["cmp     [rsp+0E8h+elide_outer_quotes], 0; jumptable 000000000000D81F case 5", "jnz     loc_D9DD"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 12, 7, 0.16817397266751793, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jz      short loc_DE27"], ["cmp~[rsp+0],0", "jz~FOO"]], [3, 0, 266, 0, 0, 7, 2, 1, 11, 8, 0.35048824892419733, ["movzx   eax, [rsp+0E8h+backslash_escapes]", "xor     eax, 1", "cmp     [rsp+0E8h+quoting_style], 2", "setz    dl", "or      eax, edx", "cmp     al, 1", "jnz     short loc_DE06"], ["movzx~eax,[rsp+0]", "xor~eax,0", "cmp~[rsp+0],0", "setz~dl", "or~eax,edx", "cmp~al,0", "jnz~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 15, 9, 0.04254504184990779, ["mov     ebp, ebx", "movzx   ebx, [rsp+0E8h+backslash_escapes]", "mov     [rsp+0E8h+c], 30h ; '0'", "jmp     loc_DDE9"], ["mov~ebp,ebx", "movzx~ebx,[rsp+0]", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 1, 1, 14, 10, 0.06860547595403603, ["lea     r14, [len_0+1]", "test    bl, bl", "jz      loc_E3F9"], ["lea~r14,[len_0+0]", "test~bl,bl", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 1, 1, 11, 9, 0.016782522343594834, ["test    byte ptr [rsp+0E8h+flags], 1", "jnz     loc_DEC9"], ["test~[yte ptr [rsp+0],0", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 6, 0.08733153638814016, ["cmp     [rsp+0E8h+backslash_escapes], 0; jumptable 000000000000DF46 case 0", "jz      loc_DC03"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 1, 11, 0.1265002127961413, ["mov     eax, [rsp+0E8h+quoting_style]", "cmp     eax, 0Ah; switch 11 cases", "ja      loc_D9C3; jumptable 000000000000D81F default case"], ["mov~eax,[rsp+0]", "cmp~eax,0", "ja~FOO"]], [0, 0, 266, 0, 0, 2, 0, 1, 12, 12, 0.1223152220173074, ["mov     buffersize_0, [rsp+0E8h+orig_buffersize]", "jmp     process_input"], ["mov~buffersize_0,[rsp+0]", "jmp~FOO"]], [10, 0, 266, 1, 1, 37, 2, 1, 0, 12, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 0B8h", "mov     [rsp+0E8h+buffer], buffer_0", "mov     r14, buffersize_0", "mov     [rsp+0E8h+arg], arg_0", "mov     [rsp+0E8h+argsize], argsize_0", "mov     [rsp+0E8h+quoting_style], r8d", "mov     ebx, r9d", "mov     [rsp+0E8h+flags], r9d", "mov     rax, [rsp+0E8h+quote_these_too]", "mov     [rsp+0E8h+var_A8], rax", "mov     rax, [rsp+0E8h+left_quote]", "mov     [rsp+0E8h+quote_string_1], rax", "mov     rax, [rsp+0E8h+right_quote]", "mov     [rsp+0E8h+quote_string_0], rax", "mov     rax, fs:28h", "mov     [rsp+0E8h+var_40], rax", "xor     eax, eax", "call    ___ctype_get_mb_cur_max", "mov     [rsp+0E8h+var_80], rax", "mov     eax, ebx", "shr     eax, 1", "and     eax, 1", "mov     [rsp+0E8h+elide_outer_quotes], al", "mov     [rsp+0E8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0E8h+encountered_single_quote], 0", "mov     [rsp+0E8h+pending_shell_escape_end], 0", "mov     [rsp+0E8h+backslash_escapes], 0", "mov     [rsp+0E8h+quote_string_len], 0", "mov     [rsp+0E8h+quote_string], 0", "mov     [rsp+0E8h+orig_buffersize], 0", "mov     r15, buffersize_0"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~[rsp+0],buffer_0", "mov~r14,buffersize_0", "mov~[rsp+0],arg_0", "mov~[rsp+0],argsize_0", "mov~[rsp+0],r8d", "mov~ebx,r9d", "mov~[rsp+0],r9d", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~[rsp+0],rax", "mov~eax,ebx", "shr~eax,0", "and~eax,0", "mov~[rsp+0],al", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r15,buffersize_0"]], [0, 0, 266, 0, 0, 3, 1, 1, 12, 7, 0.17940606232562525, ["mov     rcx, [rsp+0E8h+var_A8]", "test    rcx, rcx", "jz      short loc_DE27"], ["mov~rcx,[rsp+0]", "test~rcx,rcx", "jz~FOO"]], [0, 0, 266, 1, 1, 12, 1, 2, 12, 10, 0.09128954461625761, ["lea     rbx, [i+m+0]", "mov     rax, [rsp+0E8h+arg]", "lea     r14, [rax+rbx]", "mov     rdx, [rsp+0E8h+argsize]", "sub     rdx, rbx; n", "mov     rcx, [rsp+0E8h+ps]; ps", "mov     rsi, r14; s", "mov     rdi, [rsp+0E8h+pwc]; pwc", "call    rpl_mbrtowc", "mov     r12, rax", "test    bytes, bytes", "jz      loc_E296"], ["lea~rbx,[i+0]", "mov~rax,[rsp+0]", "lea~r14,<TAG>", "mov~rdx,[rsp+0]", "sub~rdx,rbx", "mov~rcx,[rsp+0]", "mov~rsi,r14", "mov~rdi,[rsp+0]", "call~FOO", "mov~r12,rax", "test~bytes,bytes", "jz~FOO"]], [1, 0, 266, 0, 0, 9, 0, 1, 11, 11, 0.0888352957866364, ["mov     esi, 0", "lea     rax, [rsp+0E8h+mbstate]", "mov     [rsp+0E8h+ps], rax", "lea     rax, [rsp+0E8h+w]", "mov     [rsp+0E8h+pwc], rax", "mov     [rsp+0E8h+len], len_0", "mov     [rsp+0E8h+buffersize], buffersize_0", "mov     buffersize_0, rsi", "jmp     loc_E1E2"], ["mov~esi,0", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~[rsp+0],len_0", "mov~[rsp+0],buffersize_0", "mov~buffersize_0,rsi", "jmp~FOO"]], [1, 0, 266, 1, 2, 10, 2, 3, 16, 10, 0.02850049652432969, ["mov     edi, [rsp+0E8h+w]; wc", "call    _iswprint", "test    eax, eax", "mov     eax, 0", "cmovz   ebp, eax", "add     m, bytes", "mov     rdi, [rsp+0E8h+ps]; ps", "call    _mbsinit", "test    eax, eax", "jnz     short loc_E24F"], ["mov~edi,[rsp+0]", "call~FOO", "test~eax,eax", "mov~eax,0", "cmovz~ebp,eax", "add~m,bytes", "mov~rdi,[rsp+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 11, 1, 0.007462051354802099, ["mov     rax, r15", "mov     rcx, [rsp+0E8h+var_40]", "xor     rcx, fs:28h", "jnz     short loc_E679"], ["mov~rax,r15", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [2, 1, 3, 2, 1, 14, 0, 2, 11, 2, 6.383884238899135e-05, ["sub     rsp, 8", "push    [rsp+0F0h+quote_string_0]; right_quote", "push    [rsp+0F8h+quote_string_1]; left_quote", "push    [rsp+100h+var_A8]; quote_these_too", "mov     r9d, [rsp+108h+flags]; flags", "mov     r8d, 5; quoting_style", "mov     rcx, [rsp+108h+argsize]; argsize", "mov     rdx, [rsp+108h+arg]; arg", "mov     rsi, [rsp+108h+orig_buffersize]; buffersize", "mov     rdi, [rsp+108h+buffer]; buffer", "call    quotearg_buffer_restyled", "mov     buffersize_0, rax", "add     rsp, 20h", "jmp     loc_E5FF"], ["sub~rsp,0", "push~[rsp+0]", "push~[rsp+0]", "push~[rsp+0]", "mov~r9d,[rsp+0]", "mov~r8d,0", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,[rsp+0]", "call~FOO", "mov~buffersize_0,rax", "add~rsp,<STR>", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 10, 2, 0.006667612427294652, ["cmp     buffersize_0, len_0", "jbe     loc_E5FF"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 11, 2, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax+len_0], 0", "jmp     short loc_E5FF"], ["mov~rax,[rsp+0]", "mov~<TAG>,0", "jmp~FOO"]], [3, 1, 3, 2, 1, 14, 1, 1, 11, 2, 0.00776705915732728, ["sub     rsp, 8", "push    [rsp+0F0h+quote_string_0]; right_quote", "push    [rsp+0F8h+quote_string_1]; left_quote", "push    0; quote_these_too", "mov     r9d, [rsp+108h+flags]", "and     r9d, 0FFFFFFFDh; flags", "mov     r8d, [rsp+108h+quoting_style]; quoting_style", "mov     rcx, [rsp+108h+argsize]; argsize", "mov     rdx, [rsp+108h+arg]; arg", "mov     rsi, buffersize_0; buffersize", "mov     rdi, [rsp+108h+buffer]; buffer", "call    quotearg_buffer_restyled", "mov     r15, rax", "add     rsp, 20h"], ["sub~rsp,0", "push~[rsp+0]", "push~[rsp+0]", "push~0", "mov~r9d,[rsp+0]", "and~r9d,0", "mov~r8d,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,buffersize_0", "mov~rdi,[rsp+0]", "call~FOO", "mov~r15,rax", "add~rsp,<STR>"]], [1, 0, 266, 0, 0, 3, 0, 1, 16, 9, 0.0018300468151510852, ["movzx   ebp, [rsp+0E8h+elide_outer_quotes]", "mov     [rsp+0E8h+c], 30h ; '0'", "jmp     loc_DDE9"], ["movzx~ebp,[rsp+0]", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 15, 10, 0.02312384735423464, ["lea     rax, [i+1]", "cmp     rax, [rsp+0E8h+argsize]", "jnb     loc_E40A"], ["lea~rax,[i+0]", "cmp~rax,[rsp+0]", "jnb~FOO"]], [0, 0, 12, 0, 0, 6, 1, 1, 9, 3, 0.03311107958575684, ["mov     rax, buffersize_0", "mov     buffersize_0, len_0", "mov     len_0, buffersize_0", "mov     buffersize_0, [rsp+0E8h+quote_string]", "test    rax, rax", "jz      short loc_E56E"], ["mov~rax,buffersize_0", "mov~buffersize_0,len_0", "mov~len_0,buffersize_0", "mov~buffersize_0,[rsp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 266, 0, 0, 4, 2, 1, 8, 4, 0.160568875017733, ["movzx   edx, [rsp+0E8h+elide_outer_quotes]", "xor     edx, 1", "test    al, dl", "jz      short loc_E52A"], ["movzx~edx,[rsp+0]", "xor~edx,0", "test~al,dl", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 9, 4, 0.12499645339764505, ["cmp     [rsp+0E8h+encountered_single_quote], 0", "jz      short loc_E52A"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 266, 0, 0, 6, 2, 1, 11, 4, 0.12223010356078876, ["test    buffersize_0, buffersize_0", "setz    cl", "cmp     [rsp+0E8h+orig_buffersize], 0", "setnz   al", "test    cl, al", "jz      short loc_E52A"], ["test~buffersize_0,buffersize_0", "setz~cl", "cmp~[rsp+0],0", "setnz~al", "test~cl,al", "jz~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 12, 9, 0.0008263583487019434, ["movzx   ebx, [rsp+0E8h+backslash_escapes]", "mov     ebp, ebx", "mov     [rsp+0E8h+c], 0", "jmp     loc_DDE9"], ["movzx~ebx,[rsp+0]", "mov~ebp,ebx", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 266, 1, 0, 5, 0, 1, 2, 10, 0.1235494396368279, ["mov     edx, eax", "lea     rcx, off_15360", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["mov~edx,eax", "lea~rcx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [1, 0, 266, 0, 0, 2, 0, 1, 14, 11, 0.062391828628174203, ["cmp     bytes, 0FFFFFFFFFFFFFFFEh", "jz      loc_E13B"], ["cmp~bytes,0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 13, 10, 0.06876152645765357, ["cmp     bytes, 0FFFFFFFFFFFFFFFFh", "jz      short loc_E264"], ["cmp~bytes,0", "jz~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 3, 10, 0.0, ["mov     [rsp+0E8h+backslash_escapes], 1; jumptable 000000000000D81F case 3"], ["mov~[rsp+0],0"]], [2, 0, 266, 1, 0, 9, 0, 1, 15, 9, 0.03672861398779969, ["add     r14, 3", "movzx   esi, [rsp+0E8h+elide_outer_quotes]", "mov     ebx, esi", "mov     [rsp+0E8h+encountered_single_quote], bpl", "mov     [rsp+0E8h+pending_shell_escape_end], sil", "mov     [rsp+0E8h+orig_buffersize], r15", "mov     r15, rax", "mov     [rsp+0E8h+c], 27h ; '''", "jmp     loc_DDE9"], ["add~r14,0", "movzx~esi,[rsp+0]", "mov~ebx,esi", "mov~[rsp+0],bpl", "mov~[rsp+0],sil", "mov~[rsp+0],r15", "mov~r15,rax", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 14, 10, 0.035905802241452685, ["lea     rdx, [r14+2]", "cmp     len_0, rax", "jnb     short loc_E001"], ["lea~rdx,[r14+0]", "cmp~len_0,rax", "jnb~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 15, 10, 0.0, ["mov     rdi, [rsp+0E8h+buffer]", "mov     byte ptr [rdi+r14+2], 27h ; '''"], ["mov~rdi,[rsp+0]", "mov~[yte ptr [rdi+0],0"]], [1, 0, 266, 0, 0, 8, 0, 0, 13, 6, 0.00803305433394807, ["movzx   edi, [rsp+0E8h+c]", "mov     eax, edi", "shr     al, 5", "movzx   eax, al", "mov     eax, [rcx+rax*4]", "mov     ecx, edi", "bt      eax, ecx", "jb      short store_escape"], ["movzx~edi,[rsp+0]", "mov~eax,edi", "shr~al,0", "movzx~eax,al", "mov~eax,<TAG>", "mov~ecx,edi", "bt~eax,ecx", "jb~FOO"]], [3, 0, 266, 0, 0, 6, 0, 1, 5, 9, 0.0018655128387005248, ["mov     [rsp+0E8h+backslash_escapes], 1", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_152E5; \"\\\"\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 1", "jmp     loc_D84E"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 4, 10, 0.006667612427294652, ["test    buffersize_0, buffersize_0", "jz      loc_DA06"], ["test~buffersize_0,buffersize_0", "jz~FOO"]], [3, 0, 266, 0, 0, 4, 0, 1, 13, 9, 0.003433111079585757, ["mov     ebp, 0", "mov     ebx, 0", "mov     [rsp+0E8h+c], 3Fh ; '?'", "jmp     loc_DDE9"], ["mov~ebp,0", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 1, 1, 12, 9, 0.061909490707901825, ["test    byte ptr [rsp+0E8h+flags], 4", "jz      loc_E419"], ["test~[yte ptr [rsp+0],0", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 15, 4, 0.00489431124982267, ["mov     len_0, r15", "jmp     force_outer_quoting_style"], ["mov~len_0,r15", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 14, 5, 0.06291672577670591, ["test    r12b, r12b", "jnz     loc_E627"], ["test~r12b,r12b", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 11, 10, 0.06995318484891473, ["cmp     eax, 5", "jz      short loc_DC5C"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 10, 6, 0.0813164987941552, ["mov     eax, [rsp+0E8h+quoting_style]; jumptable 000000000000DF46 case 63", "cmp     eax, 2", "jz      short loc_DC41"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 13, 6, 0.34383127630396765, ["cmp     [rsp+0E8h+is_right_quote], 0", "jz      store_c"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 15, 10, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "movzx   ecx, [rsp+0E8h+c]", "mov     [rax+len_0], cl"], ["mov~rax,[rsp+0]", "movzx~ecx,[rsp+0]", "mov~<TAG>,cl"]], [0, 0, 266, 0, 0, 2, 0, 0, 14, 10, 0.5604482905376649, ["cmp     len_0, buffersize_0", "jnb     short loc_DEB6"], ["cmp~len_0,buffersize_0", "jnb~FOO"]], [3, 0, 266, 0, 0, 4, 0, 1, 14, 9, 0.0034614838984253085, ["mov     ebp, 0", "mov     ebx, 0", "mov     [rsp+0E8h+c], 3Fh ; '?'", "jmp     loc_DDE9"], ["mov~ebp,0", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 13, 8, 0.05553979287842247, ["lea     rax, [i+2]", "cmp     rax, [rsp+0E8h+argsize]", "jnb     loc_E42D"], ["lea~rax,[i+0]", "cmp~rax,[rsp+0]", "jnb~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 14, 13, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax+len_0], 27h ; '''"], ["mov~rax,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 266, 0, 0, 2, 0, 0, 13, 13, 0.013264292807490424, ["cmp     buffersize_0, len_0", "jbe     short loc_E037"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 13, 5, 0.06049912517141911, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jnz     loc_E62F"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 12, 6, 0.03531470184896203, ["mov     [rsp+0E8h+c], al", "mov     ebp, 0", "jmp     store_escape"], ["mov~[rsp+0],al", "mov~ebp,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 17, 8, 0.016711590296495955, ["cmp     bytes, 1", "jbe     short loc_E1BB"], ["cmp~bytes,0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 16, 9, 0.019889346006525747, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jz      short loc_E1BB"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 9, 4, 0.00292594694282877, ["mov     len_0, buffersize_0", "jmp     force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 8, 5, 0.00621010072350688, ["test    [rsp+0E8h+elide_outer_quotes], al", "jnz     loc_E637"], ["test~[rsp+0],al", "jnz~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 19, 15, 0.0, ["mov     byte ptr [r10+r14+2], 27h ; '''"], ["mov~[yte ptr [r10+0],0"]], [0, 0, 266, 0, 0, 3, 0, 0, 18, 15, 0.021435664633281316, ["lea     len_0, [r14+2]", "cmp     r15, len_0", "jbe     short loc_E365"], ["lea~len_0,[r14+0]", "cmp~r15,len_0", "jbe~FOO"]], [3, 0, 266, 0, 0, 4, 0, 1, 12, 9, 0.005107107391119308, ["mov     ebp, 0", "mov     ebx, 0", "mov     [rsp+0E8h+c], 3Fh ; '?'", "jmp     loc_DDE9"], ["mov~ebp,0", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 14, 12, 0.014087104553837423, ["lea     rax, [len_0+1]", "cmp     buffersize_0, len_0", "jbe     short loc_E055"], ["lea~rax,[len_0+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 18, 3, 0.00035466023549439636, ["mov     len_0, buffersize_0", "jmp     loc_E5C2"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 17, 4, 0.0331394524045964, ["cmp     [rsp+0E8h+elide_outer_quotes], 0; jumptable 000000000000DCB8 cases 0,6-8,12,14,27-29", "jnz     loc_E63F"], ["cmp~[rsp+0],0", "jnz~FOO"]], [4, 0, 266, 0, 0, 6, 0, 0, 3, 9, 0.012367002411689601, ["mov     [rsp+0E8h+elide_outer_quotes], 1; jumptable 000000000000D81F case 1", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_152E3; \"'\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 0", "mov     [rsp+0E8h+quoting_style], 2"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "mov~[rsp+0],0"]], [0, 0, 266, 0, 0, 3, 1, 1, 11, 5, 0.008426727195346857, ["movzx   eax, [rsp+0E8h+elide_outer_quotes]", "test    al, al", "jnz     loc_E591"], ["movzx~eax,[rsp+0]", "test~al,al", "jnz~FOO"]], [0, 0, 266, 2, 0, 5, 0, 1, 18, 7, 0.013519648177046388, ["mov     bytes, [rsp+0E8h+arg]", "lea     rdx, [rax+rbx+1]", "add     rax, bytes", "add     rbx, rax", "jmp     loc_E19E"], ["mov~bytes,[rsp+0]", "lea~rdx,[rax+0]", "add~rax,bytes", "add~rbx,rax", "jmp~FOO"]], [3, 0, 266, 0, 0, 6, 0, 1, 4, 9, 0.003688466449141722, ["mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_152E3; \"'\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 0", "mov     [rsp+0E8h+quoting_style], 2", "jmp     loc_D84E"], ["mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 3, 10, 0.006667612427294652, ["cmp     [rsp+0E8h+elide_outer_quotes], 0; jumptable 000000000000D81F case 4", "jnz     loc_DA2B"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 266, 0, 0, 6, 2, 1, 14, 13, 0.051657445500543804, ["cmp     [rsp+0E8h+quoting_style], 2", "setz    al", "movzx   edx, [rsp+0E8h+pending_shell_escape_end]", "xor     edx, 1", "and     al, dl", "jz      short loc_DE90"], ["cmp~[rsp+0],0", "setz~al", "movzx~edx,[rsp+0]", "xor~edx,0", "and~al,dl", "jz~FOO"]], [3, 0, 266, 0, 0, 4, 0, 1, 16, 9, 0.007050645481628599, ["mov     ebp, 0; jumptable 000000000000DCB8 default case", "mov     ebx, 0", "mov     [rsp+0E8h+c], 3Fh ; '?'", "jmp     loc_DDE9"], ["mov~ebp,0", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 15, 6, 0.0427152787629451, ["movzx   ecx, byte ptr [rsi+rax]", "lea     edx, [rcx-21h]", "cmp     dl, 1Dh; switch 30 cases", "ja      loc_E441; jumptable 000000000000DCB8 default case"], ["movzx~ecx,<TAG>", "lea~edx,[rcx-21h]+0]", "cmp~dl,0", "ja~FOO"]], [0, 0, 266, 1, 0, 5, 0, 1, 16, 5, 0.03627464888636686, ["movzx   edx, dl", "lea     rsi, off_1538C", "movsxd  rdx, dword ptr [rsi+rdx*4]", "add     rdx, rsi", "jmp     rdx; switch jump"], ["movzx~edx,dl", "lea~rsi,<TAG>", "movsxd~rdx,<TAG>", "add~rdx,rsi", "jmp~rdx"]], [0, 0, 9, 0, 0, 2, 0, 0, 13, 5, 0.010341892467016597, ["cmp     buffersize_0, len_0", "jbe     short loc_E550"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 9, 1, 0, 3, 0, 1, 12, 6, 0.01361895304298482, ["mov     rdx, len_0", "sub     rax, len_0", "jmp     short loc_E55C"], ["mov~rdx,len_0", "sub~rax,len_0", "jmp~FOO"]], [1, 0, 9, 1, 0, 4, 1, 1, 14, 4, 0.003674280039721946, ["add     len_0, 1", "movzx   ecx, byte ptr [rax+len_0]", "test    cl, cl", "jz      short loc_E56B"], ["add~len_0,0", "movzx~ecx,<TAG>", "test~cl,cl", "jz~FOO"]], [1, 0, 266, 0, 0, 5, 0, 1, 15, 11, 0.005575258901971911, ["mov     len_0, [rsp+0E8h+buffer]", "mov     byte ptr [rax+r14+1], 5Ch ; '\\'", "mov     rax, buffersize_0", "mov     buffersize_0, [rsp+0E8h+orig_buffersize]", "jmp     short loc_DFED"], ["mov~len_0,[rsp+0]", "mov~[yte ptr [rax+0],0", "mov~rax,buffersize_0", "mov~buffersize_0,[rsp+0]", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 4, 8, 0.1354802099588594, ["mov     r13d, 0", "jmp     loc_DECD"], ["mov~r13d,0", "jmp~FOO"]], [2, 0, 266, 0, 0, 3, 0, 1, 3, 9, 0.008621790324868775, ["mov     [rsp+0E8h+elide_outer_quotes], 0; jumptable 000000000000D81F case 0", "mov     r14d, 0", "jmp     short loc_D84E"], ["mov~[rsp+0],0", "mov~r14d,0", "jmp~FOO"]], [4, 0, 266, 0, 0, 8, 0, 1, 5, 9, 0.0018655128387005248, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax], 22h ; '\"'", "mov     [rsp+0E8h+backslash_escapes], 1", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_152E5; \"\\\"\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 1", "jmp     short loc_D84E"], ["mov~rax,[rsp+0]", "mov~<TAG>,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "jmp~FOO"]], [4, 0, 266, 1, 0, 12, 0, 1, 5, 9, 0.033210384451695274, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, [rsp+0E8h+quote_string_0]", "repne scasb", "mov     rax, rcx", "not     rax", "sub     rax, 1", "mov     [rsp+0E8h+quote_string_len], rax", "mov     rdi, [rsp+0E8h+quote_string_0]", "mov     [rsp+0E8h+quote_string], rdi", "mov     [rsp+0E8h+backslash_escapes], 1", "jmp     loc_D84E"], ["mov~rcx,0", "mov~eax,0", "mov~rdi,[rsp+0]", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "sub~rax,0", "mov~[rsp+0],rax", "mov~rdi,[rsp+0]", "mov~[rsp+0],rdi", "mov~[rsp+0],0", "jmp~FOO"]], [5, 0, 266, 0, 0, 9, 0, 1, 5, 9, 0.0037239324726911615, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax], 27h ; '''", "mov     [rsp+0E8h+elide_outer_quotes], 0", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_152E3; \"'\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 1", "mov     [rsp+0E8h+quoting_style], 2", "jmp     loc_D84E"], ["mov~rax,[rsp+0]", "mov~<TAG>,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 266, 0, 0, 5, 0, 1, 4, 9, 0.003702652858561498, ["mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_152E3; \"'\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 0", "jmp     loc_D84E"], ["mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "jmp~FOO"]], [3, 0, 266, 0, 0, 4, 0, 1, 3, 9, 0.008621790324868775, ["mov     [rsp+0E8h+elide_outer_quotes], 0; jumptable 000000000000D81F case 7", "mov     [rsp+0E8h+backslash_escapes], 1", "mov     r14d, 0", "jmp     loc_D84E"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r14d,0", "jmp~FOO"]], [4, 0, 266, 0, 0, 7, 0, 1, 5, 9, 0.0037239324726911615, ["mov     [rsp+0E8h+elide_outer_quotes], 0", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_152E3; \"'\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 1", "mov     [rsp+0E8h+quoting_style], 2", "jmp     loc_D84E"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "mov~[rsp+0],0", "jmp~FOO"]], [5, 0, 266, 0, 0, 8, 0, 1, 3, 9, 0.008621790324868775, ["mov     [rsp+0E8h+elide_outer_quotes], 1; jumptable 000000000000D81F case 6", "mov     [rsp+0E8h+backslash_escapes], 1", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_152E5; \"\\\"\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 0", "mov     [rsp+0E8h+quoting_style], 5", "jmp     loc_D84E"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 266, 0, 0, 9, 2, 1, 7, 8, 0.549553128103277, ["cmp     [rsp+0E8h+quoting_style], 2", "setnz   bl", "and     bl, [rsp+0E8h+backslash_escapes]", "cmp     [rsp+0E8h+quote_string_len], 0", "setnz   byte ptr [rsp+0E8h+ps]", "movzx   eax, byte ptr [rsp+0E8h+ps]", "and     al, bl", "mov     [rsp+0E8h+is_right_quote], al", "jnz     loc_DA80"], ["cmp~[rsp+0],0", "setnz~bl", "and~bl,[rsp+0]", "cmp~[rsp+0],0", "setnz~[yte ptr [rsp+0]", "movzx~eax,[yte ptr [rsp+0]", "and~al,bl", "mov~[rsp+0],al", "jnz~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 6, 6, 0.7185239040998723, ["test    bpl, bpl", "jz      loc_E499"], ["test~bpl,bpl", "jz~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 12, 9, 0.005305717122996169, ["mov     ebp, eax", "mov     ebx, eax", "mov     [rsp+0E8h+c], 3Fh ; '?'", "jmp     loc_DDE9"], ["mov~ebp,eax", "mov~ebx,eax", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 15, 10, 0.029621222868491982, ["cmp     [rsp+0E8h+quoting_style], 2", "jnz     short loc_E1BB"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 16, 16, 0.0, ["mov     rcx, [rsp+0E8h+buffer]", "mov     byte ptr [rcx+len_0], 27h ; '''"], ["mov~rcx,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 266, 0, 0, 2, 0, 0, 15, 16, 0.019790041140587317, ["cmp     buffersize_0, len_0", "jbe     short loc_DE60"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 266, 0, 0, 3, 0, 1, 15, 11, 0.005575258901971911, ["mov     len_0, buffersize_0", "mov     buffersize_0, [rsp+0E8h+orig_buffersize]", "jmp     short loc_DFED"], ["mov~len_0,buffersize_0", "mov~buffersize_0,[rsp+0]", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 16, 10, 0.019860973187686197, ["cmp     byte ptr [rsi], 0", "jz      loc_E285"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 266, 0, 0, 8, 0, 0, 15, 10, 0.02983401900978862, ["mov     rsi, r14", "mov     bytes, m", "mov     rdi, m", "mov     r14, [rsp+0E8h+len]", "mov     m, [rsp+0E8h+buffersize]", "mov     rcx, [rsp+0E8h+argsize]", "cmp     rbx, rcx", "jnb     loc_E27E"], ["mov~rsi,r14", "mov~bytes,m", "mov~rdi,m", "mov~r14,[rsp+0]", "mov~m,[rsp+0]", "mov~rcx,[rsp+0]", "cmp~rbx,rcx", "jnb~FOO"]], [0, 0, 266, 0, 0, 4, 0, 1, 17, 9, 0.02686905944105547, ["mov     rdi, m", "mov     r14, [rsp+0E8h+len]", "mov     m, [rsp+0E8h+buffersize]", "jmp     short loc_E2A9"], ["mov~rdi,m", "mov~r14,[rsp+0]", "mov~m,[rsp+0]", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 16, 15, 0.020612852886934315, ["lea     rdx, [len_0+1]", "cmp     buffersize_0, len_0", "jbe     short loc_DE74"], ["lea~rdx,[len_0+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 9, 10, 0.18792736558377074, ["mov     rbx, [rsp+0E8h+var_80]; jumptable 000000000000DF46 default case", "cmp     rbx, 1", "jnz     short loc_E0CC"], ["mov~rbx,[rsp+0]", "cmp~rbx,0", "jnz~FOO"]], [1, 0, 266, 1, 0, 7, 0, 1, 8, 7, 0.5493828911902398, ["mov     rax, [rsp+0E8h+arg]", "add     rax, i", "mov     [rsp+0E8h+var_B0], rax", "movzx   r12d, byte ptr [rax]", "mov     [rsp+0E8h+c], r12b", "cmp     r12b, 7Eh ; '~'; switch 127 cases", "ja      loc_E05F; jumptable 000000000000DF46 default case"], ["mov~rax,[rsp+0]", "add~rax,i", "mov~[rsp+0],rax", "movzx~r12d,<TAG>", "mov~[rsp+0],r12b", "cmp~r12b,0", "ja~FOO"]], [0, 0, 266, 1, 0, 5, 0, 1, 9, 6, 0.3594978011065399, ["movzx   eax, r12b", "lea     rsi, off_15404", "movsxd  rax, dword ptr [rsi+rax*4]", "add     rax, rsi", "jmp     rax; switch jump"], ["movzx~eax,r12b", "lea~rsi,<TAG>", "movsxd~rax,<TAG>", "add~rax,rsi", "jmp~rax"]], [0, 0, 266, 0, 0, 3, 1, 1, 11, 7, 0.06426443467158462, ["movzx   edi, [rsp+0E8h+backslash_escapes]", "test    dil, dil", "jnz     loc_E464"], ["movzx~edi,[rsp+0]", "test~dil,dil", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 17, 15, 0.0, ["mov     rdi, [rsp+0E8h+buffer]", "mov     byte ptr [rdi+r14+1], 24h ; '$'"], ["mov~rdi,[rsp+0]", "mov~[yte ptr [rdi+0],0"]], [0, 0, 11, 0, 0, 2, 1, 1, 10, 3, 0.02025819265143992, ["test    dl, dl", "jz      short loc_E56E"], ["test~dl,dl", "jz~FOO"]], [0, 0, 10, 0, 0, 3, 1, 1, 11, 3, 0.016952759256632144, ["movzx   ecx, byte ptr [rax]", "test    cl, cl", "jz      short loc_E56E"], ["movzx~ecx,<TAG>", "test~cl,cl", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 15, 3, 0.0002837281883955171, ["mov     r15, len_0"], ["mov~r15,len_0"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 7, 0.0032959757885279235, ["mov     eax, 6Eh ; 'n'; jumptable 000000000000DF46 case 10", "jmp     short c_and_shell_escape"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 9, 0, 0, 3, 0, 1, 14, 5, 0.0, ["mov     rsi, [rsp+0E8h+buffer]", "mov     [rsi+len_0], cl", "jmp     short loc_E550"], ["mov~rsi,[rsp+0]", "mov~<TAG>,cl", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 12, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 9, 0.004184990778833877, ["mov     ebx, 0; jumptable 000000000000DF46 cases 37,43-58,65-90,93,95,97-122", "jmp     loc_DDE9"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 4, 10, 0.010384451695275925, ["test    buffersize_0, buffersize_0", "jz      loc_DA53"], ["test~buffersize_0,buffersize_0", "jz~FOO"]], [1, 0, 266, 0, 0, 5, 0, 1, 14, 9, 0.0034331110795857572, ["mov     rdi, m", "mov     r14, [rsp+0E8h+len]", "mov     m, [rsp+0E8h+buffersize]", "mov     ebp, 0", "jmp     short loc_E2A9"], ["mov~rdi,m", "mov~r14,[rsp+0]", "mov~m,[rsp+0]", "mov~ebp,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 14, 7, 0.04914172223010356, ["mov     rsi, [rsp+0E8h+arg]", "cmp     byte ptr [rsi+i+1], 3Fh ; '?'", "jz      short loc_DC97"], ["mov~rsi,[rsp+0]", "cmp~[yte ptr [rsi+0],0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 18, 14, 0.0, ["mov     rcx, [rsp+0E8h+buffer]", "mov     byte ptr [rcx+r14+2], 27h ; '''"], ["mov~rcx,[rsp+0]", "mov~[yte ptr [rcx+0],0"]], [0, 0, 266, 0, 0, 3, 0, 0, 17, 14, 0.021435664633281316, ["lea     len_0, [r14+2]", "cmp     buffersize_0, len_0", "jbe     short loc_DE88"], ["lea~len_0,[r14+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 16, 9, 0.007036459072208823, ["mov     ebp, 0", "jmp     short loc_E2A9"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 17, 9, 0.003674280039721946, ["mov     ebp, 0", "jmp     short loc_E2A9"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 266, 1, 0, 2, 0, 0, 18, 13, 0.022258476379628314, ["add     r14, 3", "mov     [rsp+0E8h+pending_shell_escape_end], al"], ["add~r14,0", "mov~[rsp+0],al"]], [1, 0, 266, 0, 0, 4, 2, 1, 11, 8, 0.15643353667186835, ["mov     ebx, ebp", "xor     ebx, 1", "and     bl, [rsp+0E8h+backslash_escapes]", "jz      loc_DDE9"], ["mov~ebx,ebp", "xor~ebx,0", "and~bl,[rsp+0]", "jz~FOO"]], [0, 0, 266, 0, 0, 1, 0, 1, 15, 9, 0.0552844375088665, ["jmp     loc_E085"], ["jmp~FOO"]], [2, 0, 266, 0, 1, 7, 1, 1, 10, 9, 0.09697829479358774, ["call    ___ctype_b_loc", "movzx   r12d, r12b", "mov     rax, [rax]", "movzx   ebp, word ptr [rax+r12*2]", "shr     bp, 0Eh", "and     ebp, 1", "mov     rdi, rbx"], ["call~FOO", "movzx~r12d,r12b", "mov~rax,<TAG>", "movzx~ebp,<TAG>", "shr~bp,0", "and~ebp,0", "mov~rdi,rbx"]], [2, 0, 266, 0, 0, 3, 0, 1, 13, 11, 0.016896013618953043, ["mov     eax, 0", "cmp     [rsp+0E8h+orig_buffersize], 0", "jnz     short loc_E028"], ["mov~eax,0", "cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 12, 12, 0.03302596112923819, ["test    buffersize_0, buffersize_0", "jz      short loc_E028"], ["test~buffersize_0,buffersize_0", "jz~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 8, 8, 0.026372535111363313, ["mov     rax, [rsp+0E8h+quote_string_len]", "lea     rdx, [i+rax+0]", "cmp     [rsp+0E8h+argsize], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_DAB7"], ["mov~rax,[rsp+0]", "lea~rdx,[i+0]", "cmp~[rsp+0],0", "jnz~FOO"]], [3, 0, 266, 0, 0, 4, 0, 1, 15, 9, 0.0034898567172648603, ["mov     ebp, 0", "mov     ebx, 0", "mov     [rsp+0E8h+c], 3Fh ; '?'", "jmp     loc_DDE9"], ["mov~ebp,0", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 15, 12, 0.0549486924859318, ["cmp     buffersize_0, len_0", "jbe     short loc_DE9F"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 19, 9, 0.007419492126542772, ["mov     rdi, m", "mov     ebp, 0", "jmp     short loc_E2A9"], ["mov~rdi,m", "mov~ebp,0", "jmp~FOO"]], [1, 0, 266, 1, 0, 4, 0, 0, 18, 10, 0.0136898850900837, ["add     m, 1", "lea     rdx, [i+m+0]", "cmp     rcx, rdx", "jbe     loc_E28C"], ["add~m,0", "lea~rdx,[i+0]", "cmp~rcx,rdx", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 9, 8, 0.003333806213647326, ["cmp     rax, 1", "jbe     short loc_DAB7"], ["cmp~rax,0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 16, 12, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax+len_0], 5Ch ; '\\'"], ["mov~rax,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 266, 0, 0, 2, 0, 0, 16, 13, 0.058362888352957866, ["cmp     r15, len_0", "jbe     short loc_E376"], ["cmp~r15,len_0", "jbe~FOO"]], [2, 0, 266, 0, 0, 6, 2, 1, 15, 14, 0.05507164136756987, ["cmp     [rsp+0E8h+quoting_style], 2", "setz    bl", "mov     r8d, r9d", "xor     r8d, 1", "and     r8b, bl", "jz      short loc_E36C"], ["cmp~[rsp+0],0", "setz~bl", "mov~r8d,r9d", "xor~r8d,0", "and~r8b,bl", "jz~FOO"]], [1, 0, 266, 1, 0, 2, 0, 0, 19, 14, 0.022258476379628314, ["add     r14, 3", "mov     r9d, r8d"], ["add~r14,0", "mov~r9d,r8d"]], [1, 0, 266, 1, 0, 1, 0, 0, 16, 11, 0.0557715042322788, ["add     len_0, 1"], ["add~len_0,0"]], [0, 0, 266, 0, 0, 2, 0, 0, 16, 17, 0.019790041140587317, ["cmp     r15, len_0", "jbe     short loc_E347"], ["cmp~r15,len_0", "jbe~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 18, 8, 0.04451695275925663, ["cmp     r15, len_0", "jbe     short loc_E313"], ["cmp~r15,len_0", "jbe~FOO"]], [0, 0, 266, 0, 0, 3, 0, 1, 20, 9, 0.007050645481628599, ["mov     ebx, esi", "mov     i, r8", "jmp     loc_E30A"], ["mov~ebx,esi", "mov~i,r8", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 0, 1, 17, 9, 0.014640374521208682, ["mov     i, r8", "jmp     loc_E30A"], ["mov~i,r8", "jmp~FOO"]], [1, 0, 266, 1, 0, 4, 0, 0, 19, 9, 0.014895729890764646, ["add     r14, 2", "mov     edx, esi", "mov     i, r8", "mov     r9d, esi"], ["add~r14,0", "mov~edx,esi", "mov~i,r8", "mov~r9d,esi"]], [1, 0, 266, 0, 0, 2, 0, 1, 13, 11, 0.49803754669693096, ["cmp     bl, 1", "jz      loc_DEA3"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 14, 11, 0.01652716697403887, ["cmp     [rsp+0E8h+pending_shell_escape_end], 0", "jz      loc_DEA3"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 266, 1, 0, 3, 0, 1, 17, 11, 0.014895729890764646, ["add     r14, 2", "mov     [rsp+0E8h+pending_shell_escape_end], 0", "jmp     loc_DEA3"], ["add~r14,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 17, 13, 0.0, ["mov     byte ptr [r10+len_0], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [1, 0, 266, 0, 0, 4, 1, 1, 7, 5, 0.16603418924670166, ["cmp     [rsp+0E8h+quoting_style], 2", "setz    al", "test    len_0, len_0", "jnz     short loc_E4B0"], ["cmp~[rsp+0],0", "setz~al", "test~len_0,len_0", "jnz~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 3, 11, 0.029507731593133777, ["mov     ebx, [rsp+0E8h+quoting_style]; jumptable 000000000000D81F cases 8-10", "cmp     ebx, 0Ah", "jnz     short loc_D8F0"], ["mov~ebx,[rsp+0]", "cmp~ebx,0", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 14, 8, 0.0947084692864236, ["cmp     m, 1", "ja      loc_E094"], ["cmp~m,0", "ja~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 20, 9, 0.003716839267981274, ["mov     rdi, m", "mov     ebp, 0", "jmp     loc_E2A9"], ["mov~rdi,m", "mov~ebp,0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 13, 9, 0.019591431408710454, ["mov     rdi, m", "mov     r14, [rsp+0E8h+len]", "mov     m, [rsp+0E8h+buffersize]"], ["mov~rdi,m", "mov~r14,[rsp+0]", "mov~m,[rsp+0]"]], [2, 0, 266, 0, 0, 7, 0, 0, 10, 8, 0.0, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, [rsp+0E8h+arg]", "repne scasb", "not     rcx", "lea     rax, [rcx-1]", "mov     [rsp+0E8h+argsize], rax"], ["mov~rcx,0", "mov~eax,0", "mov~rdi,[rsp+0]", "scasb~<TAG>,", "not~rcx", "lea~rax,[rcx-1]+0]", "mov~[rsp+0],rax"]], [3, 0, 266, 1, 0, 5, 1, 0, 19, 11, 0.0, ["mov     r8d, eax", "shr     r8b, 3", "and     r8d, 7", "add     r8d, 30h ; '0'", "mov     [r10+r14+2], r8b"], ["mov~r8d,eax", "shr~r8b,0", "and~r8d,0", "add~r8d,0", "mov~[r10+0],r8b"]], [0, 0, 266, 0, 0, 3, 0, 0, 18, 11, 0.06000851184565186, ["lea     r8, [r14+2]", "cmp     r15, len_0", "jbe     short loc_E3AC"], ["lea~r8,[r14+0]", "cmp~r15,len_0", "jbe~FOO"]], [2, 0, 266, 0, 0, 3, 0, 1, 4, 10, 0.030330543339480775, ["mov     r14d, 0", "cmp     [rsp+0E8h+elide_outer_quotes], 0", "jz      short loc_D918"], ["mov~r14d,0", "cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 266, 0, 2, 9, 0, 3, 4, 11, 0.0, ["mov     esi, ebx; s", "lea     rdi, asc_152FD; \"`\"", "call    gettext_quote", "mov     [rsp+0E8h+quote_string_1], rax", "mov     esi, ebx; s", "lea     rdi, asc_152E3; \"'\"", "call    gettext_quote", "mov     [rsp+0E8h+quote_string_0], rax", "jmp     short loc_D8AD"], ["mov~esi,ebx", "lea~rdi,<TAG>", "call~FOO", "mov~[rsp+0],rax", "mov~esi,ebx", "lea~rdi,<TAG>", "call~FOO", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 14, 12, 0.11330685203574975, ["test    dl, dl", "jz      short loc_E2CA"], ["test~dl,dl", "jz~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 13, 6, 0.17916016456234926, ["test    cl, cl", "jz      short loc_E2B8"], ["test~cl,cl", "jz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 1, 9, 7, 0.027606752730883814, ["cmp     rdx, [rsp+0E8h+argsize]", "ja      short loc_DAED"], ["cmp~rdx,[rsp+0]", "ja~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 16, 13, 0.0, ["mov     byte ptr [r10+len_0], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 0, 266, 0, 0, 2, 0, 0, 15, 13, 0.006653426017874876, ["cmp     r15, len_0", "jbe     short loc_E2C6"], ["cmp~r15,len_0", "jbe~FOO"]], [1, 0, 266, 1, 0, 5, 1, 0, 15, 9, 0.5612711022840119, ["add     len_0, 1", "test    bpl, bpl", "movzx   eax, [rsp+0E8h+all_c_and_shell_quote_compat]", "cmovz   eax, ebp", "mov     [rsp+0E8h+all_c_and_shell_quote_compat], al"], ["add~len_0,0", "test~bpl,bpl", "movzx~eax,[rsp+0]", "cmovz~eax,ebp", "mov~[rsp+0],al"]], [1, 0, 266, 1, 0, 1, 0, 0, 16, 12, 0.007476237764221875, ["add     len_0, 1"], ["add~len_0,0"]], [2, 0, 266, 1, 0, 13, 2, 1, 12, 7, 0.12964959568733156, ["add     m, i", "mov     ebx, 0", "mov     ecx, ebp", "xor     ecx, 1", "and     cl, [rsp+0E8h+backslash_escapes]", "mov     esi, ecx", "movzx   r12d, [rsp+0E8h+elide_outer_quotes]", "movzx   r9d, [rsp+0E8h+pending_shell_escape_end]", "movzx   eax, [rsp+0E8h+c]", "movzx   edx, [rsp+0E8h+is_right_quote]", "mov     r10, [rsp+0E8h+buffer]", "mov     r11, [rsp+0E8h+arg]", "jmp     loc_E31C"], ["add~m,i", "mov~ebx,0", "mov~ecx,ebp", "xor~ecx,0", "and~cl,[rsp+0]", "mov~esi,ecx", "movzx~r12d,[rsp+0]", "movzx~r9d,[rsp+0]", "movzx~eax,[rsp+0]", "movzx~edx,[rsp+0]", "mov~r10,[rsp+0]", "mov~r11,[rsp+0]", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 3, 0.12524471556249112, ["cmp     [rsp+0E8h+all_c_and_shell_quote_compat], 0", "jnz     short loc_E4E7"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 266, 1, 0, 1, 0, 0, 12, 8, 0.5780500780252518, ["add     i, 1"], ["add~i,0"]], [0, 0, 266, 0, 0, 2, 1, 1, 10, 6, 0.003674280039721946, ["test    i, i; jumptable 000000000000DF46 cases 35,126", "jz      short loc_DF9B; jumptable 000000000000DF46 case 32"], ["test~i,i", "jz~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 11, 7, 0.010781671159029648, ["test    al, al", "jnz     loc_E455"], ["test~al,al", "jnz~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 18, 13, 0.02983401900978862, ["mov     [rsp+0E8h+c], cl", "cmp     buffersize_0, len_0", "jbe     short loc_DCD8"], ["mov~[rsp+0],cl", "cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 1, 0, 5, 0, 1, 22, 9, 0.033125265995176616, ["add     r14, 4", "movzx   ebx, [rsp+0E8h+elide_outer_quotes]", "mov     ebp, ebx", "mov     r13, i", "jmp     loc_DDE9"], ["add~r14,0", "movzx~ebx,[rsp+0]", "mov~ebp,ebx", "mov~r13,i", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 21, 10, 0.03230245424882962, ["lea     len_0, [r14+3]", "cmp     buffersize_0, len_0", "jbe     short loc_DD14"], ["lea~len_0,[r14+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 22, 10, 0.0, ["mov     rdi, [rsp+0E8h+buffer]", "mov     byte ptr [rdi+r14+3], 3Fh ; '?'"], ["mov~rdi,[rsp+0]", "mov~[yte ptr [rdi+0],0"]], [0, 0, 266, 0, 0, 3, 0, 0, 15, 11, 0.11495247552844375, ["lea     r8, [i+1]", "cmp     r8, ilim", "jnb     loc_E3C9"], ["lea~r8,[i+0]", "cmp~r8,ilim", "jnb~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 19, 13, 0.0, ["mov     rsi, [rsp+0E8h+buffer]", "mov     byte ptr [rsi+len_0], 3Fh ; '?'"], ["mov~rsi,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 266, 0, 1, 7, 1, 2, 10, 6, 0.010341892467016597, ["mov     rax, [rsp+0E8h+arg]", "lea     rdi, [rax+i]; s1", "mov     rdx, [rsp+0E8h+quote_string_len]; n", "mov     rsi, [rsp+0E8h+quote_string]; s2", "call    _memcmp", "test    eax, eax", "jnz     short loc_DAF7"], ["mov~rax,[rsp+0]", "lea~rdi,<TAG>", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 266, 0, 0, 5, 0, 1, 5, 7, 0.7177010923535253, ["mov     rax, [rsp+0E8h+argsize]", "cmp     rax, i", "setnz   bpl", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      loc_E486"], ["mov~rax,[rsp+0]", "cmp~rax,i", "setnz~bpl", "cmp~rax,0", "jz~FOO"]], [2, 0, 266, 0, 0, 3, 0, 1, 10, 12, 0.0880124840402894, ["mov     qword ptr [rsp+0E8h+mbstate.__count], 0", "cmp     [rsp+0E8h+argsize], 0FFFFFFFFFFFFFFFFh", "jz      short loc_E117"], ["mov~[word ptr [rsp+0],0", "cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 19, 12, 0.03065683075613562, ["lea     rdx, [len_0+1]", "cmp     buffersize_0, len_0", "jbe     short loc_DCEC"], ["lea~rdx,[len_0+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 20, 12, 0.0, ["mov     rdi, [rsp+0E8h+buffer]", "mov     byte ptr [rdi+r14+1], 22h ; '\"'"], ["mov~rdi,[rsp+0]", "mov~[yte ptr [rdi+0],0"]], [1, 0, 266, 0, 0, 2, 0, 1, 12, 5, 0.003688466449141722, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jnz     loc_DF48"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 11, 6, 0.017818130231238474, ["cmp     [rsp+0E8h+quoting_style], 2", "jnz     short c_escape"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 12, 4, 0.0005107107391119308, ["mov     len_0, buffersize_0", "jmp     force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 11, 5, 0.005589445311391686, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jz      loc_DF14"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 18, 11, 0.0, ["mov     byte ptr [r10+len_0], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 266, 0, 0, 2, 0, 0, 17, 11, 0.013250106398070647, ["cmp     r15, len_0", "jbe     short loc_E2EF"], ["cmp~r15,len_0", "jbe~FOO"]], [1, 0, 266, 1, 0, 4, 1, 1, 8, 10, 0.011193077032203149, ["add     len_0, 1", "movzx   eax, byte ptr [rdx+len_0]", "test    al, al", "jz      short loc_D8BA"], ["add~len_0,0", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 6, 10, 0.003688466449141722, ["mov     r14d, 0", "jmp     loc_D8BA"], ["mov~r14d,0", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 12, 4, 0.00017023691303731024, ["mov     len_0, buffersize_0", "jmp     short force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 17, 12, 0.059185700099304864, ["lea     r8, [len_0+1]", "cmp     r15, len_0", "jbe     short loc_E38F"], ["lea~r8,[len_0+0]", "cmp~r15,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 8, 0.014328273513973613, ["mov     [rsp+0E8h+is_right_quote], 0", "jmp     loc_DF14"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 20, 11, 0.03147964250248262, ["lea     len_0, [r14+2]", "cmp     buffersize_0, len_0", "jbe     short loc_DD00"], ["lea~len_0,[r14+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 18, 10, 0.014072918144417646, ["lea     rdx, [len_0+1]", "cmp     r15, len_0", "jbe     short loc_E2FE"], ["lea~rdx,[len_0+0]", "cmp~r15,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 19, 10, 0.0, ["mov     byte ptr [r10+r14+1], 27h ; '''"], ["mov~[yte ptr [r10+0],0"]], [1, 0, 266, 0, 0, 2, 0, 0, 21, 11, 0.0, ["mov     rsi, [rsp+0E8h+buffer]", "mov     byte ptr [rsi+r14+2], 22h ; '\"'"], ["mov~rsi,[rsp+0]", "mov~[yte ptr [rsi+0],0"]], [1, 0, 266, 0, 0, 2, 0, 1, 11, 8, 0.0018158604057313093, ["mov     [rsp+0E8h+is_right_quote], 0", "jmp     loc_DF14"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 7, 0.0032959757885279235, ["mov     eax, 72h ; 'r'; jumptable 000000000000DF46 case 13", "jmp     c_and_shell_escape"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 266, 0, 0, 1, 0, 0, 19, 8, 0.0, ["mov     [r10+len_0], al"], ["mov~<TAG>,al"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 8, 0.007387572705348276, ["mov     eax, 62h ; 'b'; jumptable 000000000000DF46 case 8", "jmp     c_escape"], ["mov~eax,0", "jmp~FOO"]], [3, 0, 266, 1, 0, 9, 0, 1, 11, 12, 0.0, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, [rsp+0E8h+arg]", "repne scasb", "mov     rax, rcx", "not     rax", "sub     rax, 1", "mov     [rsp+0E8h+argsize], rax", "jmp     short loc_E0E0"], ["mov~rcx,0", "mov~eax,0", "mov~rdi,[rsp+0]", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "sub~rax,0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 14, 4, 0.0058909065115619235, ["mov     len_0, buffersize_0", "jmp     force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [1, 0, 266, 1, 0, 2, 0, 0, 19, 7, 0.045339764505603626, ["add     len_0, 1", "movzx   eax, byte ptr [r11+i]"], ["add~len_0,0", "movzx~eax,<TAG>"]], [0, 0, 266, 0, 0, 4, 1, 1, 5, 11, 0.016541353383458645, ["mov     rdx, [rsp+0E8h+quote_string_1]", "movzx   eax, byte ptr [rdx]", "test    al, al", "jz      short loc_D943"], ["mov~rdx,[rsp+0]", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 11, 5, 0.06761242729465172, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jnz     loc_E583"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 1, 6, 12, 0.009916300184423322, ["mov     rcx, [rsp+0E8h+buffer]", "jmp     short loc_D938"], ["mov~rcx,[rsp+0]", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 8, 0.007387572705348276, ["mov     eax, 66h ; 'f'; jumptable 000000000000DF46 case 12", "jmp     c_escape"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 7, 11, 0.01037026528585615, ["cmp     buffersize_0, len_0", "jbe     short loc_D92B"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 266, 0, 0, 2, 0, 1, 8, 11, 0.0, ["mov     [rcx+len_0], al", "jmp     short loc_D92B"], ["mov~<TAG>,al", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 15, 13, 0.013250106398070647, ["cmp     buffersize_0, len_0", "jbe     short loc_DD97"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 4, 2, 1, 16, 10, 0.030827067669172932, ["mov     edx, ebx", "xor     edx, 1", "and     dl, r9b", "jz      loc_E3E7"], ["mov~edx,ebx", "xor~edx,0", "and~dl,r9b", "jz~FOO"]], [2, 0, 266, 0, 0, 7, 2, 1, 12, 12, 0.06449141722230103, ["cmp     [rsp+0E8h+quoting_style], 2", "setz    al", "movzx   ecx, [rsp+0E8h+pending_shell_escape_end]", "xor     ecx, 1", "mov     rdx, len_0", "and     al, cl", "jz      short loc_DB81"], ["cmp~[rsp+0],0", "setz~al", "movzx~ecx,[rsp+0]", "xor~ecx,0", "mov~rdx,len_0", "and~al,cl", "jz~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 17, 17, 0.0, ["mov     byte ptr [r10+len_0], 27h ; '''"], ["mov~<TAG>,0"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 8, 0.007387572705348276, ["mov     eax, 76h ; 'v'; jumptable 000000000000DF46 case 11", "jmp     c_escape"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 13, 15, 0.019790041140587317, ["cmp     buffersize_0, r14", "jbe     short loc_DB51"], ["cmp~buffersize_0,r14", "jbe~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 13, 4, 0.00042559228259327563, ["mov     len_0, buffersize_0", "jmp     force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 14, 15, 0.0, ["mov     rcx, [rsp+0E8h+buffer]", "mov     byte ptr [rcx+r14], 27h ; '''"], ["mov~rcx,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 266, 0, 0, 3, 0, 0, 17, 16, 0.020612852886934315, ["lea     pending_shell_escape_end_0, [len_0+1]", "cmp     r15, len_0", "jbe     short loc_E356"], ["lea~pending_shell_escape_end_0,[len_0+0]", "cmp~r15,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 18, 16, 0.0, ["mov     byte ptr [r10+r14+1], 24h ; '$'"], ["mov~[yte ptr [r10+0],0"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 8, 0.007387572705348276, ["mov     eax, 61h ; 'a'; jumptable 000000000000DF46 case 7", "jmp     c_escape"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 14, 14, 0.020612852886934315, ["lea     len_0, [r14+1]", "cmp     buffersize_0, len_0", "jbe     short loc_DB65"], ["lea~len_0,[r14+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 4, 11, 4.255922825932756e-05, ["mov     [rsp+0E8h+backslash_escapes], 1"], ["mov~[rsp+0],0"]], [1, 0, 266, 0, 0, 2, 0, 1, 12, 8, 0.001063980706483189, ["mov     eax, 5Ch ; '\\'", "jmp     short c_escape"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 1, 1, 11, 9, 0.010270960419917718, ["movzx   esi, [rsp+0E8h+elide_outer_quotes]", "test    [rsp+0E8h+backslash_escapes], sil", "jz      short loc_DD59"], ["movzx~esi,[rsp+0]", "test~[rsp+0],sil", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 12, 9, 0.006667612427294652, ["cmp     byte ptr [rsp+0E8h+ps], 0", "jnz     loc_E472"], ["cmp~[yte ptr [rsp+0],0", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 15, 14, 0.0, ["mov     rsi, [rsp+0E8h+buffer]", "mov     byte ptr [rsi+r14+1], 24h ; '$'"], ["mov~rsi,[rsp+0]", "mov~[yte ptr [rsi+0],0"]], [1, 0, 266, 0, 0, 2, 0, 1, 3, 10, 0.013221733579231097, ["cmp     [rsp+0E8h+elide_outer_quotes], 0; jumptable 000000000000D81F case 2", "jz      short loc_D95E"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 6, 7, 0.0, ["mov     argsize_0, [rsp+0E8h+arg]", "cmp     byte ptr [rax+i], 0", "setnz   bpl", "jmp     loc_DEE3"], ["mov~argsize_0,[rsp+0]", "cmp~<TAG>,0", "setnz~bpl", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 1, 1, 11, 5, 0.019633990636969783, ["movzx   ebx, [rsp+0E8h+elide_outer_quotes]", "test    bl, bl", "jnz     loc_E596"], ["movzx~ebx,[rsp+0]", "test~bl,bl", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 6, 0.032841537806781104, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 000000000000DF46 case 92", "jz      short loc_DD60"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 266, 0, 0, 5, 0, 1, 10, 8, 0.009958859412682649, ["mov     rcx, [rsp+0E8h+argsize]; jumptable 000000000000DF46 cases 123,125", "cmp     rcx, 1", "setnz   al", "cmp     rcx, 0FFFFFFFFFFFFFFFFh", "jz      short loc_DF88"], ["mov~rcx,[rsp+0]", "cmp~rcx,0", "setnz~al", "cmp~rcx,0", "jz~FOO"]], [0, 0, 266, 0, 0, 1, 0, 0, 17, 11, 0.013250106398070647, ["mov     rsi, [rsp+0E8h+var_B0]"], ["mov~rsi,[rsp+0]"]], [0, 0, 266, 0, 0, 3, 0, 0, 15, 13, 0.021435664633281316, ["lea     len_0, [r14+2]", "cmp     buffersize_0, len_0", "jbe     short loc_DB79"], ["lea~len_0,[r14+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 11, 8, 0.0, ["mov     rax, [rsp+0E8h+arg]", "cmp     byte ptr [rax+1], 0", "setnz   al", "jmp     short loc_DF6C"], ["mov~rax,[rsp+0]", "cmp~[yte ptr [rax+0],0", "setnz~al", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 12, 12, 0.016512980564619095, ["mov     ebp, ebx", "mov     [rsp+0E8h+c], 5Ch ; '\\'"], ["mov~ebp,ebx", "mov~[rsp+0],0"]], [1, 0, 266, 0, 0, 2, 0, 0, 16, 13, 0.0, ["mov     rcx, [rsp+0E8h+buffer]", "mov     byte ptr [rcx+r14+2], 27h ; '''"], ["mov~rcx,[rsp+0]", "mov~[yte ptr [rcx+0],0"]], [0, 0, 266, 0, 0, 3, 0, 1, 16, 12, 0.0811888211093772, ["mov     [rsp+0E8h+pending_shell_escape_end], r9b", "mov     [rsp+0E8h+c], al", "jmp     store_c"], ["mov~[rsp+0],r9b", "mov~[rsp+0],al", "jmp~FOO"]], [0, 0, 266, 0, 0, 4, 0, 1, 20, 12, 0.05084409136047666, ["mov     [rsp+0E8h+pending_shell_escape_end], r9b", "mov     [rsp+0E8h+c], al", "mov     ebx, ecx", "jmp     store_c"], ["mov~[rsp+0],r9b", "mov~[rsp+0],al", "mov~ebx,ecx", "jmp~FOO"]], [3, 0, 266, 0, 0, 4, 0, 1, 13, 12, 0.006681798836714427, ["mov     ebp, 0", "mov     ebx, 0", "mov     [rsp+0E8h+c], 5Ch ; '\\'", "jmp     store_c"], ["mov~ebp,0", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 19, 10, 0.003333806213647326, ["cmp     byte ptr [rsi+m], 0", "jnz     short loc_E170"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 16, 12, 0.022258476379628314, ["lea     len_0, [r14+3]", "mov     [rsp+0E8h+pending_shell_escape_end], al"], ["lea~len_0,[r14+0]", "mov~[rsp+0],al"]], [2, 0, 266, 0, 0, 3, 0, 1, 11, 9, 0.0018158604057313093, ["mov     ebp, 0", "mov     ebx, 0", "jmp     loc_DDE9"], ["mov~ebp,0", "mov~ebx,0", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 13, 11, 0.06778266420768903, ["cmp     buffersize_0, len_0", "jbe     short loc_DB8F"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [2, 0, 266, 1, 0, 4, 0, 0, 18, 12, 0.0, ["mov     r8d, eax", "shr     r8b, 6", "add     r8d, 30h ; '0'", "mov     [r10+r14+1], r8b"], ["mov~r8d,eax", "shr~r8b,0", "add~r8d,0", "mov~[r10+0],r8b"]], [1, 0, 266, 0, 0, 2, 0, 0, 14, 11, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax+len_0], 5Ch ; '\\'"], ["mov~rax,[rsp+0]", "mov~<TAG>,0"]], [2, 0, 4, 0, 0, 4, 0, 0, 11, 3, 0.0, ["cmp     [rsp+0E8h+backslash_escapes], 0", "mov     eax, 4", "cmovz   eax, edi", "mov     [rsp+0E8h+quoting_style], eax"], ["cmp~[rsp+0],0", "mov~eax,0", "cmovz~eax,edi", "mov~[rsp+0],eax"]], [1, 0, 5, 0, 0, 3, 0, 1, 10, 3, 0.014321180309263725, ["mov     edi, [rsp+0E8h+quoting_style]", "cmp     edi, 2", "jnz     short loc_E5C2"], ["mov~edi,[rsp+0]", "cmp~edi,0", "jnz~FOO"]], [0, 0, 6, 0, 0, 4, 0, 1, 12, 4, 0.00017023691303731024, ["mov     len_0, buffersize_0", "movzx   eax, [rsp+0E8h+elide_outer_quotes]", "mov     [rsp+0E8h+backslash_escapes], al", "jmp     short force_outer_quoting_style"], ["mov~len_0,buffersize_0", "movzx~eax,[rsp+0]", "mov~[rsp+0],al", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 16, 13, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax+len_0], 27h ; '''"], ["mov~rax,[rsp+0]", "mov~<TAG>,0"]], [1, 0, 266, 0, 0, 1, 0, 0, 10, 6, 0.0, ["mov     ebp, 0; jumptable 000000000000DF46 cases 33,34,36,38,40-42,59-62,91,94,96,124"], ["mov~ebp,0"]], [0, 0, 6, 0, 0, 2, 0, 1, 12, 4, 0.00017023691303731024, ["mov     len_0, buffersize_0", "jmp     short force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [1, 0, 266, 1, 0, 3, 0, 1, 20, 7, 0.010895162434387855, ["add     rdx, 1; jumptable 000000000000E1B9 default case", "cmp     rdx, rbx", "jz      short loc_E1BB"], ["add~rdx,0", "cmp~rdx,rbx", "jz~FOO"]], [2, 0, 266, 1, 0, 4, 0, 1, 19, 6, 0.014072918144417646, ["movzx   eax, byte ptr [rdx]", "sub     eax, 5Bh ; '['", "cmp     al, 21h ; '!'; switch 34 cases", "ja      short loc_E195; jumptable 000000000000E1B9 default case"], ["movzx~eax,<TAG>", "sub~eax,0", "cmp~al,0", "ja~FOO"]], [0, 0, 266, 1, 0, 5, 0, 1, 20, 5, 0.00390126259043836, ["movzx   eax, al", "lea     rdi, off_15600", "movsxd  rax, dword ptr [rdi+rax*4]", "add     rax, rdi", "jmp     rax; switch jump"], ["movzx~eax,al", "lea~rdi,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdi", "jmp~rax"]], [0, 0, 266, 0, 0, 3, 0, 0, 16, 12, 0.014072918144417646, ["lea     rax, [len_0+1]", "cmp     buffersize_0, len_0", "jbe     short loc_DDAB"], ["lea~rax,[len_0+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 21, 4, 0.0006383884238899134, ["mov     r14, [rsp+0E8h+buffersize]; jumptable 000000000000E1B9 cases 0,1,3,5,33"], ["mov~r14,[rsp+0]"]], [1, 0, 266, 0, 0, 2, 0, 0, 17, 12, 0.0, ["mov     len_0, [rsp+0E8h+buffer]", "mov     byte ptr [rax+r14+1], 27h ; '''"], ["mov~len_0,[rsp+0]", "mov~[yte ptr [rax+0],0"]], [1, 0, 266, 0, 0, 4, 1, 1, 10, 5, 0.013845935593701234, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 000000000000DF46 case 32", "setz    bl", "and     bl, [rsp+0E8h+elide_outer_quotes]", "jz      loc_DDE9"], ["cmp~[rsp+0],0", "setz~bl", "and~bl,[rsp+0]", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 12, -1, 0.0, ["add     rsp, 0B8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     i", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~i", "pop~r14", "pop~r15", "retn"]], [2, 0, 266, 0, 0, 3, 0, 1, 12, 9, 0.010767484749609873, ["mov     ebp, 0", "mov     ebx, 0", "jmp     loc_DDE9"], ["mov~ebp,0", "mov~ebx,0", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 11, 4, 0.0009363030217052064, ["mov     len_0, buffersize_0", "jmp     force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 12, 4, 0.00017023691303731024, ["mov     len_0, buffersize_0", "jmp     short force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 11, 5, 0.03614697120158888, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jnz     loc_E59B"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 6, 0.04257341466874734, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 000000000000DF46 case 39", "jz      short loc_DFD0"], ["cmp~[rsp+0],0", "jz~FOO"]], [3, 0, 266, 2, 0, 6, 1, 0, 19, 10, 0.06083132359199886, ["add     r14, 3", "and     eax, 7", "add     eax, 30h ; '0'", "lea     r8, [i+1]", "cmp     ilim, r8", "jbe     short loc_E3D7"], ["add~r14,0", "and~eax,0", "add~eax,0", "lea~r8,[i+0]", "cmp~ilim,r8", "jbe~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 10, 7, 0.0032959757885279235, ["mov     eax, 74h ; 't'; jumptable 000000000000DF46 case 9"], ["mov~eax,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    _abort; jumptable 000000000000D81F default case"], ["call~FOO"]], [3, 0, 266, 1, 0, 8, 0, 1, 16, 9, 0.018357213789189954, ["mov     rax, [rsp+0E8h+arg]", "movzx   eax, byte ptr [rax+i+1]", "mov     byte ptr [rsp+0E8h+ps], al", "sub     eax, 30h ; '0'", "movzx   ebp, [rsp+0E8h+elide_outer_quotes]", "mov     [rsp+0E8h+c], 30h ; '0'", "cmp     al, 9", "ja      loc_DDE9"], ["mov~rax,[rsp+0]", "movzx~eax,[yte ptr [rax+0]", "mov~[yte ptr [rsp+0],al", "sub~eax,0", "movzx~ebp,[rsp+0]", "mov~[rsp+0],0", "cmp~al,0", "ja~FOO"]], [2, 0, 266, 0, 0, 4, 0, 1, 11, 9, 0.0034898567172648603, ["mov     [rsp+0E8h+encountered_single_quote], bpl", "mov     ebx, 0", "mov     [rsp+0E8h+c], 27h ; '''", "jmp     loc_DDE9"], ["mov~[rsp+0],bpl", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 17, 11, 0.013250106398070647, ["cmp     buffersize_0, len_0", "jbe     short loc_DBDD"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 18, 11, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax+len_0], 30h ; '0'"], ["mov~rax,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 266, 0, 0, 3, 0, 0, 18, 10, 0.014072918144417646, ["lea     rax, [rdx+2]", "cmp     buffersize_0, len_0", "jbe     short loc_DBF0"], ["lea~rax,[rdx+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 12, 9, 0.02601314607272899, ["mov     ebp, edi", "mov     ebx, edi"], ["mov~ebp,edi", "mov~ebx,edi"]], [1, 0, 266, 0, 0, 2, 0, 0, 19, 10, 0.0, ["mov     len_0, [rsp+0E8h+buffer]", "mov     byte ptr [rax+rdx+2], 30h ; '0'"], ["mov~len_0,[rsp+0]", "mov~[yte ptr [rax+0],0"]], [1, 0, 266, 0, 0, 4, 0, 1, 19, 9, 0.014895729890764646, ["lea     r14, [rdx+3]", "movzx   ebp, [rsp+0E8h+elide_outer_quotes]", "mov     [rsp+0E8h+c], 30h ; '0'", "jmp     loc_DDE9"], ["lea~r14,[rdx+0]", "movzx~ebp,[rsp+0]", "mov~[rsp+0],0", "jmp~FOO"]]], "func_feature": [12, 58, 180, 4, 267, 417, 7, 919, 0.04717, 8, 40], "succs": [[75], [0, 36], [43, 11], [2, 11], [3], [4, 21], [26, 159], [196, 6], [258, 27], [8], [8], [34, 43], [144, 29], [12], [12, 93], [105, 250], [15], [18, 15], [15], [15], [3], [259, 20], [17, 100], [24, 22], [158, 22], [9, 22], [3], [1, 66, 76, 141, 81, 83, 30, 218, 62], [92, 87], [108, 28], [62], [3], [33, 31], [31], [50, 43], [75], [35, 77], [3], [37, 47], [238], [128, 39], [58, 38], [41, 63], [136, 50], [155], [155, 44], [3], [109, 46], [59], [48, 59], [193, 67], [50], [64, 14], [52, 14], [238], [54, 23], [129], [56, 129], [3], [74, 90], [19], [162, 60], [75], [181, 86], [244], [75], [65, 213], [89, 122], [3], [68, 70], [68, 61], [104, 73], [71], [102, 71], [32], [169], [75], [75], [75], [75], [75], [75], [75], [75], [120, 96], [140, 84], [3], [53, 14], [94], [88, 94], [32], [113, 223], [112, 91], [142], [99, 111], [170, 117], [97, 95], [160, 257, 198, 7, 106, 103, 255, 205, 221, 241, 42, 249, 191, 211, 189, 222, 95], [264, 51], [111], [17, 101], [72, 17], [17], [174], [73], [], [3], [82, 79], [142], [121, 69], [114], [114, 110], [142], [142], [122], [3, 157], [115], [115], [32, 49], [49, 118], [152, 125], [3], [130, 126], [142], [123, 231], [152, 145], [130], [139, 182], [131, 127], [127], [45], [209, 204], [194, 190], [132], [132], [132], [137, 45], [201, 45], [45], [182], [23, 55], [148, 149], [116, 157], [142], [142], [152], [256], [256, 146], [195, 78], [148], [154, 166], [40, 150], [168, 183], [156], [153, 156], [159], [166], [151], [16, 25], [169], [233, 249], [160, 251], [171, 167], [3], [163, 165], [163], [202, 228], [171], [176, 188], [219, 85], [192, 13], [184, 172], [184], [98, 207], [98, 173], [238], [96, 175], [185], [177, 185], [78, 199], [78], [238], [147, 235], [96], [187, 164], [186, 135], [135], [164], [96], [174], [194], [98], [13], [238], [151], [180, 197], [203, 239], [199], [98], [200, 179], [179], [240, 246], [178, 134], [234, 206], [209], [98], [208, 212], [238], [212], [57, 210], [57], [98], [224, 217], [107], [98], [216, 214], [230, 214], [224], [80, 107], [85], [226, 242], [220, 215], [161, 225], [124], [232, 227], [161], [136], [232], [136], [136], [136], [124, 143], [234], [3], [236, 5], [147], [5], [19], [19, 237], [238], [246], [249], [238], [244, 14], [243, 245], [243, 247], [248, 138], [238], [138], [3, 252], [], [3], [238], [238], [253, 119], [260, 254], [133, 229], [174], [], [3, 261], [3], [262, 263], [263], [265, 266], [3], [266], [3]], "fname": "quotearg_buffer_restyled", "n_num": 267}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 8, 1, 0, 6, 0, 1, 0, 0, 0.08974358974358974, ["lea     r13d, [n+1]", "movsxd  rsi, r13d", "shl     rsi, 4; n", "lea     e_0, slotvec0", "cmp     sv, rax", "jz      loc_E7F1"], ["lea~r13d,[n+0]", "movsxd~rsi,r13d", "shl~rsi,0", "lea~e_0,<TAG>", "cmp~sv,rax", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 2, 2, 0.0641025641025641, ["cmp     ebx, 7FFFFFFFh", "jz      loc_E7EC"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 0, 1, 0, 11, 0, 0, 3, -1, 0.0, ["mov     eax, [rsp+58h+e]", "mov     [r14], eax", "mov     rax, val", "add     rsp, 28h", "pop     rbx", "pop     options", "pop     val", "pop     size", "pop     r14", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~<TAG>,eax", "mov~rax,val", "add~rsp,0", "pop~rbx", "pop~options", "pop~val", "pop~size", "pop~r14", "pop~r15", "retn"]], [3, 1, 4, 4, 1, 23, 1, 2, 2, -1, 0.1794871794871795, ["movsxd  n, ebx", "shl     n, 4", "add     rbx, sv", "mov     r13, [rbx]", "mov     sv, [rbx+8]", "mov     eax, [options+4]", "or      eax, 1", "mov     [rsp+58h+flags], eax", "lea     r15, [options+8]", "sub     rsp, 8", "push    qword ptr [options+30h]; right_quote", "push    qword ptr [options+28h]; left_quote", "push    r15; quote_these_too", "mov     r9d, eax; flags", "mov     r8d, [options+0]; quoting_style", "mov     rcx, [rsp+78h+argsize]; argsize", "mov     rdx, [rsp+78h+arg]; arg", "mov     rsi, size; buffersize", "mov     rdi, val; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h", "cmp     size, qsize", "ja      short loc_E7CE"], ["movsxd~n,ebx", "shl~n,0", "add~rbx,sv", "mov~r13,<TAG>", "mov~sv,[rbx+0]", "mov~eax,[options+0]", "or~eax,0", "mov~[rsp+0],eax", "lea~r15,[options+0]", "sub~rsp,0", "push~[word ptr [options+0]", "push~[word ptr [options+0]", "push~r15", "mov~r9d,eax", "mov~r8d,[options+0]", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,size", "mov~rdi,val", "call~FOO", "add~rsp,<STR>", "cmp~size,qsize", "ja~FOO"]], [1, 1, 1, 2, 2, 16, 0, 2, 4, -1, 0.01282051282051282, ["mov     rdi, size; n", "call    xmalloc", "mov     val, rax", "mov     [rbx+8], rax", "sub     rsp, 8", "push    qword ptr [options+30h]; right_quote", "push    qword ptr [options+28h]; left_quote", "push    r15; quote_these_too", "mov     r9d, [rsp+78h+flags]; flags", "mov     r8d, [options+0]; quoting_style", "mov     rcx, [rsp+78h+argsize]; argsize", "mov     rdx, [rsp+78h+arg]; arg", "mov     rsi, size; buffersize", "mov     rdi, rax; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,size", "call~FOO", "mov~val,rax", "mov~[rbx+0],rax", "sub~rsp,0", "push~[word ptr [options+0]", "push~[word ptr [options+0]", "push~r15", "mov~r9d,[rsp+0]", "mov~r8d,[options+0]", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,size", "mov~rdi,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 11, 0, 0, 2, 0, 1, 1, 3, 0.07051282051282051, ["cmp     cs:nslots, ebx", "jg      short loc_E726"], ["cmp~<TAG>,ebx", "jg~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.10256410256410256, ["lea     size, [qsize+1]", "mov     [rbx], size", "lea     qsize, slot0", "cmp     val, rax", "jz      short loc_E791"], ["lea~size,[qsize+0]", "mov~<TAG>,size", "lea~qsize,<TAG>", "cmp~val,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 2, 0, 1, 2, 0, 1, 4, -1, 0.0, ["mov     rdi, val; ptr", "call    free"], ["mov~rdi,val", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 13, 1, 1, 18, 1, 2, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 28h", "mov     ebx, edi", "mov     [rsp+58h+arg], arg_0", "mov     [rsp+58h+argsize], argsize_0", "mov     rbp, options", "call    ___errno_location", "mov     r14, rax", "mov     eax, [rax]", "mov     [rsp+58h+e], eax", "mov     r12, cs:slotvec_0", "test    ebx, ebx", "js      loc_E7E7"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~ebx,edi", "mov~[rsp+0],arg_0", "mov~[rsp+0],argsize_0", "mov~rbp,options", "call~FOO", "mov~r14,rax", "mov~eax,<TAG>", "mov~[rsp+0],eax", "mov~r12,<TAG>", "test~ebx,ebx", "js~FOO"]], [0, 0, 6, 0, 1, 4, 0, 1, 4, -1, 0.04487179487179487, ["mov     rdi, sv; p", "call    xrealloc", "mov     sv, rax", "mov     cs:slotvec_0, sv"], ["mov~rdi,sv", "call~FOO", "mov~sv,rax", "mov~<TAG>,sv"]], [3, 0, 5, 4, 1, 11, 0, 1, 5, -1, 0.1282051282051282, ["mov     edi, cs:nslots", "mov     edx, r13d", "sub     edx, edi", "movsxd  rdx, edx", "shl     rdx, 4; n", "movsxd  rdi, edi", "shl     rdi, 4", "add     rdi, sv; s", "mov     esi, 0; c", "call    _memset", "mov     cs:nslots, r13d"], ["mov~edi,<TAG>", "mov~edx,r13d", "sub~edx,edi", "movsxd~rdx,edx", "shl~rdx,0", "movsxd~rdi,edi", "shl~rdi,0", "add~rdi,sv", "mov~esi,0", "call~FOO", "mov~<TAG>,r13d"]], [1, 0, 6, 0, 1, 9, 0, 2, 4, 0, 0.04487179487179487, ["mov     edi, 0; p", "call    xrealloc", "mov     sv, rax", "mov     cs:slotvec_0, sv", "mov     sv, cs:slotvec0.size", "mov     rdx, cs:slotvec0.val", "mov     [sv], rax", "mov     [sv+8], rdx", "jmp     loc_E6F9"], ["mov~edi,0", "call~FOO", "mov~sv,rax", "mov~<TAG>,sv", "mov~sv,<TAG>", "mov~rdx,<TAG>", "mov~<TAG>,rax", "mov~[sv+0],rdx", "jmp~FOO"]]], "func_feature": [10, 2, 17, 0, 14, 17, 8, 111, 0.05266, 5, 13], "succs": [[11, 13], [0, 7], [], [2, 6], [2], [1, 3], [8, 4], [], [4], [], [9, 5], [12], [3], [12]], "fname": "quotearg_n_options", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 0, 0, 2, 18, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, o", "call    ___errno_location", "mov     rbp, p", "mov     r12d, [p]", "test    o, o", "lea     p, default_quoting_options", "cmovz   o, p", "mov     esi, 38h ; '8'; s", "mov     rdi, rbx; p", "call    xmemdup", "mov     [rbp+0], r12d", "pop     rbx", "pop     rbp", "pop     e", "retn"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,o", "call~FOO", "mov~rbp,p", "mov~r12d,<TAG>", "test~o,o", "lea~p,<TAG>", "cmovz~o,p", "mov~esi,0", "mov~rdi,rbx", "call~FOO", "mov~[rbp+0],r12d", "pop~rbx", "pop~rbp", "pop~e", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 18, 0.0, 1, 0], "succs": [[]], "fname": "clone_quoting_options", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["test    o, o", "lea     rax, default_quoting_options", "cmovz   o, rax", "mov     eax, [rdi]", "retn"], ["test~o,o", "lea~rax,<TAG>", "cmovz~o,rax", "mov~eax,<TAG>", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "get_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["test    o, o", "lea     rax, default_quoting_options", "cmovz   o, rax", "mov     [rdi], esi", "retn"], ["test~o,o", "lea~rax,<TAG>", "cmovz~o,rax", "mov~<TAG>,esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[4, 0, 0, 1, 0, 19, 6, 0, 0, 0, 0.0, ["test    p, p", "lea     rax, default_quoting_options", "cmovz   p, rax", "mov     eax, esi", "shr     al, 5", "movzx   eax, al", "lea     p, [p+rax*4+8]", "mov     ecx, esi", "and     ecx, 1Fh", "mov     esi, [p]", "mov     eax, esi", "shr     eax, cl", "xor     edx, eax", "and     edx, 1", "shl     edx, cl", "xor     edx, esi", "mov     [p], edx", "and     eax, 1", "retn"], ["test~p,p", "lea~rax,<TAG>", "cmovz~p,rax", "mov~eax,esi", "shr~al,0", "movzx~eax,al", "lea~p,[p+0]", "mov~ecx,esi", "and~ecx,0", "mov~esi,<TAG>", "mov~eax,esi", "shr~eax,cl", "xor~edx,eax", "and~edx,0", "shl~edx,cl", "xor~edx,esi", "mov~<TAG>,edx", "and~eax,0", "retn"]]], "func_feature": [0, 6, 0, 0, 1, 0, 2, 19, 0.0, 1, 1], "succs": [[]], "fname": "set_char_quoting", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0.0, ["test    o, o", "lea     r, default_quoting_options", "cmovz   o, r", "mov     eax, [o+4]", "mov     [o+4], esi", "retn"], ["test~o,o", "lea~r,<TAG>", "cmovz~o,r", "mov~eax,[o+0]", "mov~[o+0],esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 6, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_flags", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     [o+28h], left_quote", "mov     [o+30h], right_quote", "retn"], ["mov~[o+0],left_quote", "mov~[o+0],right_quote", "retn"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, 1, 0.16666666666666666, ["test    right_quote, right_quote", "jz      short loc_E8EA"], ["test~right_quote,right_quote", "jz~FOO"]], [1, 0, 3, 0, 0, 6, 2, 1, 0, 1, 0.0, ["test    o, o", "lea     rax, default_quoting_options", "cmovz   o, rax", "mov     dword ptr [o], 0Ah", "test    left_quote, left_quote", "jz      short loc_E8EA"], ["test~o,o", "lea~rax,<TAG>", "cmovz~o,rax", "mov~<TAG>,0", "test~left_quote,left_quote", "jz~FOO"]], [1, 0, 0, 1, 1, 2, 0, 1, 1, 0, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]]], "func_feature": [1, 3, 3, 0, 4, 4, 1, 13, 0.04167, 1, 1], "succs": [[], [0, 3], [1, 3], []], "fname": "set_custom_quoting", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[3, 0, 0, 3, 2, 39, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     [rsp+48h+buffer], buffer_0", "mov     r13, buffersize", "mov     r14, arg", "mov     r15, argsize", "mov     rbx, o", "test    o, o", "lea     r, default_quoting_options", "cmovz   rbx, r", "call    ___errno_location", "mov     rbp, r", "mov     r12d, [r]", "sub     rsp, 8", "push    qword ptr [p+30h]; right_quote", "push    qword ptr [p+28h]; left_quote", "lea     r, [p+8]", "push    r; quote_these_too", "mov     r9d, [p+4]; flags", "mov     r8d, [p]; quoting_style", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "mov     rsi, buffersize; buffersize", "mov     rdi, [rsp+68h+buffer]; buffer", "call    quotearg_buffer_restyled", "mov     [rbp+0], r12d", "add     rsp, 38h", "pop     p", "pop     rbp", "pop     e", "pop     buffersize", "pop     arg", "pop     argsize", "retn"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~[rsp+0],buffer_0", "mov~r13,buffersize", "mov~r14,arg", "mov~r15,argsize", "mov~rbx,o", "test~o,o", "lea~r,<TAG>", "cmovz~rbx,r", "call~FOO", "mov~rbp,r", "mov~r12d,<TAG>", "sub~rsp,0", "push~[word ptr [p+0]", "push~[word ptr [p+0]", "lea~r,[p+0]", "push~r", "mov~r9d,[p+0]", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~rdx,arg", "mov~rsi,buffersize", "mov~rdi,[rsp+0]", "call~FOO", "mov~[rbp+0],r12d", "add~rsp,0", "pop~p", "pop~rbp", "pop~e", "pop~buffersize", "pop~arg", "pop~argsize", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 39, 0.0, 1, 3], "succs": [[]], "fname": "quotearg_buffer", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 0, 1, 0, 9, 0, 0, 0, 0, 0.0, ["mov     rax, [rsp+68h+var_50]", "add     rsp, 38h", "pop     p", "pop     flags", "pop     size", "pop     r13", "pop     bufsize", "pop     r15", "retn"], ["mov~rax,[rsp+0]", "add~rsp,0", "pop~p", "pop~flags", "pop~size", "pop~r13", "pop~bufsize", "pop~r15", "retn"]], [5, 2, 2, 5, 4, 57, 4, 5, 0, 0, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 38h", "mov     r14, arg_0", "mov     [rsp+68h+argsize], argsize_0", "mov     r12, size", "mov     rbx, o", "test    o, o", "lea     rax, default_quoting_options", "cmovz   rbx, rax", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "mov     [rsp+68h+e], eax", "test    size, size", "setz    bpl", "movzx   ebp, bpl", "or      ebp, [p+4]", "lea     r15, [p+8]", "sub     rsp, 8", "push    qword ptr [p+30h]; right_quote", "push    qword ptr [p+28h]; left_quote", "push    r15; quote_these_too", "mov     r9d, ebp; flags", "mov     r8d, [p]; quoting_style", "mov     rcx, [rsp+88h+argsize]; argsize", "mov     [rsp+88h+arg], arg_0", "mov     rdx, arg_0; arg", "mov     esi, 0; buffersize", "mov     edi, 0; buffer", "call    quotearg_buffer_restyled", "mov     [rsp+88h+var_40], rax", "lea     arg_0, [rax+1]", "add     rsp, 20h", "mov     rdi, bufsize; n", "call    xmalloc", "mov     [rsp+68h+var_50], rax", "sub     rsp, 8", "push    qword ptr [p+30h]; right_quote", "push    qword ptr [p+28h]; left_quote", "push    r15; quote_these_too", "mov     r9d, ebp; flags", "mov     r8d, [p]; quoting_style", "mov     rcx, [rsp+88h+argsize]; argsize", "mov     rdx, [rsp+88h+arg]; arg", "mov     rsi, bufsize; buffersize", "mov     rdi, rax; buffer", "call    quotearg_buffer_restyled", "mov     edx, [rsp+88h+e]", "mov     [r13+0], edx", "add     rsp, 20h", "test    size, size", "jz      short loc_EA3A"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r14,arg_0", "mov~[rsp+0],argsize_0", "mov~r12,size", "mov~rbx,o", "test~o,o", "lea~rax,<TAG>", "cmovz~rbx,rax", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "mov~[rsp+0],eax", "test~size,size", "setz~bpl", "movzx~ebp,bpl", "or~ebp,[p+0]", "lea~r15,[p+0]", "sub~rsp,0", "push~[word ptr [p+0]", "push~[word ptr [p+0]", "push~r15", "mov~r9d,ebp", "mov~r8d,<TAG>", "mov~rcx,[rsp+0]", "mov~[rsp+0],arg_0", "mov~rdx,arg_0", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~[rsp+0],rax", "lea~arg_0,[rax+0]", "add~rsp,<STR>", "mov~rdi,bufsize", "call~FOO", "mov~[rsp+0],rax", "sub~rsp,0", "push~[word ptr [p+0]", "push~[word ptr [p+0]", "push~r15", "mov~r9d,ebp", "mov~r8d,<TAG>", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,bufsize", "mov~rdi,rax", "call~FOO", "mov~edx,[rsp+0]", "mov~[r13+0],edx", "add~rsp,<STR>", "test~size,size", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     rax, [rsp+68h+var_40]", "mov     [size], rax"], ["mov~rax,[rsp+0]", "mov~<TAG>,rax"]]], "func_feature": [4, 4, 5, 2, 3, 3, 1, 68, 0.0, 1, 6], "succs": [[], [0, 2], [0]], "fname": "quotearg_alloc_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[3, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rcx, o; o", "mov     edx, 0; size", "call    quotearg_alloc_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rcx,o", "mov~edx,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 6, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_alloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 1, 3, 0, 1, 4, 0, 1, 0, 0, 0.0, ["call    free", "mov     cs:slotvec0.size, 100h", "lea     rax, slot0", "mov     cs:slotvec0.val, rax"], ["call~FOO", "mov~<TAG>,<STR>", "lea~rax,<TAG>", "mov~<TAG>,rax"]], [0, 0, 4, 0, 0, 4, 0, 1, 1, 2, 0.2857142857142857, ["mov     rdi, [sv+8]; ptr", "lea     rax, slot0", "cmp     rdi, rax", "jz      short loc_EACB"], ["mov~rdi,[sv+0]", "lea~rax,<TAG>", "cmp~rdi,rax", "jz~FOO"]], [0, 0, 1, 0, 1, 4, 0, 1, 3, 1, 0.0, ["mov     rdi, sv; ptr", "call    free", "lea     rax, slotvec0", "mov     cs:slotvec_0, rax"], ["mov~rdi,sv", "call~FOO", "lea~rax,<TAG>", "mov~<TAG>,rax"]], [0, 0, 2, 0, 0, 3, 0, 1, 2, 1, 0.23809523809523808, ["lea     rax, slotvec0", "cmp     sv, rax", "jz      short loc_EAED"], ["lea~rax,<TAG>", "cmp~sv,rax", "jz~FOO"]], [1, 0, 6, 1, 0, 4, 0, 0, 1, 4, 0.023809523809523808, ["lea     rbx, [sv+18h]", "lea     eax, [rax-2]", "shl     rax, 4", "lea     rbp, [sv+rax+28h]"], ["lea~rbx,[sv+0]", "lea~eax,[rax-2]+0]", "shl~rax,0", "lea~rbp,[sv+0]"]], [1, 0, 7, 0, 0, 7, 0, 1, 0, 3, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     r12, cs:slotvec_0", "mov     eax, cs:nslots", "cmp     eax, 1", "jle     short loc_EA9C"], ["push~r12", "push~rbp", "push~rbx", "mov~r12,<TAG>", "mov~eax,<TAG>", "cmp~eax,0", "jle~FOO"]], [1, 0, 6, 1, 1, 5, 0, 2, 2, 3, 0.11904761904761904, ["mov     rdi, [rbx]; ptr", "call    free", "add     rbx, 10h", "cmp     rbx, rbp", "jnz     short loc_EA8B"], ["mov~rdi,<TAG>", "call~FOO", "add~rbx,0", "cmp~rbx,rbp", "jnz~FOO"]], [1, 0, 0, 0, 0, 5, 0, 0, 3, 0, 0.0, ["mov     cs:nslots, 1", "pop     rbx", "pop     rbp", "pop     sv", "retn"], ["mov~<TAG>,0", "pop~rbx", "pop~rbp", "pop~sv", "retn"]]], "func_feature": [3, 0, 7, 0, 8, 11, 0, 36, 0.08333, 5, 2], "succs": [[3], [0, 3], [7], [2, 7], [6], [1, 4], [1, 6], []], "fname": "quotearg_free", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[3, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "lea     rcx, default_quoting_options; options", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "call    quotearg_n_options", "add     rsp, 8", "retn"], ["sub~rsp,0", "lea~rcx,<TAG>", "mov~rdx,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 6, 0.0, 1, 2], "succs": [[]], "fname": "quotearg_n", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 0, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "lea     rcx, default_quoting_options; options", "call    quotearg_n_options", "add     rsp, 8", "retn"], ["sub~rsp,0", "lea~rcx,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 5, 0.0, 1, 2], "succs": [[]], "fname": "quotearg_n_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[3, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rsi, arg; arg", "mov     edi, 0; n", "call    quotearg_n", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rsi,arg", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 6, 0.0, 0, 2], "succs": [[]], "fname": "quotearg", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[3, 0, 0, 2, 1, 7, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "mov     edi, 0; n", "call    quotearg_n_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rdx,argsize", "mov~argsize,arg", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 7, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 1, 4, 1, 0, 7, 1, 1, 0, 2, 0.0, ["sub     rsp, 48h", "mov     rax, arg", "mov     arg, fs:28h", "mov     [rsp+48h+var_10], arg", "xor     edx, edx", "cmp     esi, 0Ah", "jz      loc_EC00"], ["sub~rsp,<STR>", "mov~rax,arg", "mov~arg,<TAG>", "mov~[rsp+0],arg", "xor~edx,edx", "cmp~esi,0", "jz~FOO"]], [12, 0, 2, 0, 1, 19, 1, 2, 1, 1, 0.16666666666666666, ["mov     [rsp+48h+o.style], esi", "mov     [rsp+48h+o.flags], 0", "mov     [rsp+48h+o.quote_these_too], 0", "mov     [rsp+48h+o.quote_these_too+4], 0", "mov     [rsp+48h+o.quote_these_too+8], 0", "mov     [rsp+48h+o.quote_these_too+0Ch], 0", "mov     [rsp+48h+o.quote_these_too+10h], 0", "mov     [rsp+48h+o.quote_these_too+14h], 0", "mov     [rsp+48h+o.quote_these_too+18h], 0", "mov     [rsp+48h+o.quote_these_too+1Ch], 0", "mov     [rsp+48h+o.left_quote], 0", "mov     [rsp+48h+o.right_quote], 0", "mov     rcx, rsp; options", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     s, arg; arg", "call    quotearg_n_options", "mov     rcx, [rsp+48h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_EC05"], ["mov~<TAG>,esi", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~rcx,rsp", "mov~rdx,0", "mov~s,arg", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 2, -1, 0.0, ["add     rsp, 48h", "retn"], ["add~rsp,<STR>", "retn"]]], "func_feature": [3, 2, 5, 1, 5, 4, 33, 30, 0.03333, 1, 2], "succs": [[], [0, 2], [3, 4], [], []], "fname": "quotearg_n_style", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [11, 0, 2, 0, 1, 18, 1, 2, 1, 0, 0.16666666666666666, ["mov     [rsp+48h+o.style], esi", "mov     [rsp+48h+o.flags], 0", "mov     [rsp+48h+o.quote_these_too], 0", "mov     [rsp+48h+o.quote_these_too+4], 0", "mov     [rsp+48h+o.quote_these_too+8], 0", "mov     [rsp+48h+o.quote_these_too+0Ch], 0", "mov     [rsp+48h+o.quote_these_too+10h], 0", "mov     [rsp+48h+o.quote_these_too+14h], 0", "mov     [rsp+48h+o.quote_these_too+18h], 0", "mov     [rsp+48h+o.quote_these_too+1Ch], 0", "mov     [rsp+48h+o.left_quote], 0", "mov     [rsp+48h+o.right_quote], 0", "mov     rcx, rsp; options", "mov     s, arg; arg", "call    quotearg_n_options", "mov     rdx, [rsp+48h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_ECAB"], ["mov~<TAG>,esi", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~rcx,rsp", "mov~s,arg", "call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [1, 1, 4, 1, 0, 8, 1, 1, 0, 0, 0.0, ["sub     rsp, 48h", "mov     rax, arg", "mov     arg, argsize; argsize", "mov     argsize, fs:28h", "mov     [rsp+48h+var_10], argsize", "xor     ecx, ecx", "cmp     esi, 0Ah", "jz      short loc_ECA6"], ["sub~rsp,<STR>", "mov~rax,arg", "mov~arg,argsize", "mov~argsize,<TAG>", "mov~[rsp+0],argsize", "xor~ecx,ecx", "cmp~esi,0", "jz~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 2, 0, 0.0, ["add     rsp, 48h", "retn"], ["add~rsp,<STR>", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [3, 2, 5, 1, 5, 4, 1, 30, 0.03333, 1, 2], "succs": [[], [0, 3], [1, 4], [], []], "fname": "quotearg_n_style_mem", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[3, 0, 0, 2, 1, 7, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rdx, arg; arg", "mov     esi, edi; s", "mov     edi, 0; n", "call    quotearg_n_style", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rdx,arg", "mov~esi,edi", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 67, 7, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[3, 0, 0, 2, 1, 8, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rcx, argsize; argsize", "mov     argsize, arg; arg", "mov     esi, edi; s", "mov     edi, 0; n", "call    quotearg_n_style_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rcx,argsize", "mov~argsize,arg", "mov~esi,edi", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 8, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_style_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[3, 0, 2, 1, 2, 36, 2, 3, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 40h", "mov     rbp, arg", "mov     r12, argsize", "mov     rax, fs:28h", "mov     [rsp+58h+var_20], rax", "xor     eax, eax", "mov     rcx, qword ptr cs:default_quoting_options.style", "mov     rbx, qword ptr cs:default_quoting_options.quote_these_too", "mov     qword ptr [rsp+58h+options.style], rcx", "mov     qword ptr [rsp+58h+options.quote_these_too], rbx", "mov     rcx, qword ptr cs:default_quoting_options.quote_these_too+8", "mov     rbx, qword ptr cs:default_quoting_options.quote_these_too+10h", "mov     qword ptr [rsp+58h+options.quote_these_too+8], rcx", "mov     qword ptr [rsp+58h+options.quote_these_too+10h], rbx", "mov     rcx, qword ptr cs:default_quoting_options.quote_these_too+18h", "mov     rbx, cs:default_quoting_options.left_quote", "mov     qword ptr [rsp+58h+options.quote_these_too+18h], rcx", "mov     [rsp+58h+options.left_quote], rbx", "mov     rax, cs:default_quoting_options.right_quote", "mov     [rsp+58h+options.right_quote], rax", "movsx   esi, dl; c", "mov     rbx, rsp", "mov     edx, 1; i", "mov     arg, rbx; o", "call    set_char_quoting", "mov     rcx, rbx; options", "mov     rdx, argsize; argsize", "mov     rsi, arg; arg", "mov     edi, 0; n", "call    quotearg_n_options", "mov     rdi, [rsp+58h+var_20]", "xor     rdi, fs:28h", "jnz     short loc_ED93"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,arg", "mov~r12,argsize", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rcx,<TAG>", "mov~rbx,<TAG>", "mov~<TAG>,rcx", "mov~[word ptr [rsp+0],rbx", "mov~rcx,<TAG>", "mov~rbx,<TAG>", "mov~[word ptr [rsp+0],rcx", "mov~[word ptr [rsp+0],rbx", "mov~rcx,<TAG>", "mov~rbx,<TAG>", "mov~[word ptr [rsp+0],rcx", "mov~[rsp+0],rbx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "movsx~esi,dl", "mov~rbx,rsp", "mov~edx,0", "mov~arg,rbx", "call~FOO", "mov~rcx,rbx", "mov~rdx,argsize", "mov~rsi,arg", "mov~edi,0", "call~FOO", "mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "jnz~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 0, -1, 0.0, ["add     rsp, 40h", "pop     rbx", "pop     arg", "pop     argsize", "retn"], ["add~rsp,0", "pop~rbx", "pop~arg", "pop~argsize", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 2, 4, 1, 3, 2, 2, 42, 0.0, 8, 2], "succs": [[1, 2], [], []], "fname": "quotearg_char_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[3, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "movsx   edx, sil; ch_0", "mov     ch_0, 0FFFFFFFFFFFFFFFFh; argsize", "call    quotearg_char_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "movsx~edx,sil", "mov~ch_0,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 6, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_char", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 1, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     esi, 3Ah ; ':'; ch_0", "call    quotearg_char", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~esi,<STR>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 5, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_colon", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 1, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     edx, 3Ah ; ':'; ch_0", "call    quotearg_char_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~edx,<STR>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 5, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_colon_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[13, 1, 2, 0, 2, 27, 1, 3, 0, 0, 0.16666666666666666, ["mov     ebp, edi", "mov     r12, arg", "mov     [rsp+58h+options.style], esi", "mov     [rsp+58h+options.flags], 0", "mov     [rsp+58h+options.quote_these_too], 0", "mov     [rsp+58h+options.quote_these_too+4], 0", "mov     [rsp+58h+options.quote_these_too+8], 0", "mov     [rsp+58h+options.quote_these_too+0Ch], 0", "mov     [rsp+58h+options.quote_these_too+10h], 0", "mov     [rsp+58h+options.quote_these_too+14h], 0", "mov     [rsp+58h+options.quote_these_too+18h], 0", "mov     [rsp+58h+options.quote_these_too+1Ch], 0", "mov     [rsp+58h+options.left_quote], 0", "mov     [rsp+58h+options.right_quote], 0", "mov     rbx, rsp", "mov     edx, 1; i", "mov     esi, 3Ah ; ':'; c", "mov     n, rbx; o", "call    set_char_quoting", "mov     rcx, rbx; options", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rsi, arg; arg", "mov     edi, ebp; n", "call    quotearg_n_options", "mov     rcx, [rsp+58h+var_20]", "xor     rcx, fs:28h", "jnz     short loc_EEA1"], ["mov~ebp,edi", "mov~r12,arg", "mov~<TAG>,esi", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~rbx,rsp", "mov~edx,0", "mov~esi,<STR>", "mov~n,rbx", "call~FOO", "mov~rcx,rbx", "mov~rdx,0", "mov~rsi,arg", "mov~edi,ebp", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [2, 0, 4, 1, 0, 9, 1, 1, 0, 2, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 40h", "mov     rax, fs:28h", "mov     [rsp+58h+var_20], rax", "xor     eax, eax", "cmp     esi, 0Ah", "jz      loc_EE9C"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~esi,0", "jz~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 2, -1, 0.0, ["add     rsp, 40h", "pop     rbx", "pop     n", "pop     arg", "retn"], ["add~rsp,0", "pop~rbx", "pop~n", "pop~arg", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [4, 2, 6, 1, 5, 4, 5, 43, 0.03333, 1, 2], "succs": [[2, 4], [0, 3], [], [], []], "fname": "quotearg_n_style_colon", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 1, 0, 1, 0, 6, 0, 0, 0, 0, 0.0, ["add     rsp, 48h", "pop     rbx", "pop     n", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~n", "pop~arg", "pop~argsize", "retn"]], [0, 1, 2, 1, 2, 36, 2, 3, 0, 1, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 48h", "mov     ebp, edi", "mov     r12, arg", "mov     r13, argsize", "mov     rax, fs:28h", "mov     [rsp+68h+var_30], rax", "xor     eax, eax", "mov     arg, qword ptr cs:default_quoting_options.style", "mov     rbx, qword ptr cs:default_quoting_options.quote_these_too", "mov     qword ptr [rsp+68h+o.style], rcx", "mov     qword ptr [rsp+68h+o.quote_these_too], rbx", "mov     rcx, qword ptr cs:default_quoting_options.quote_these_too+8", "mov     rbx, qword ptr cs:default_quoting_options.quote_these_too+10h", "mov     qword ptr [rsp+68h+o.quote_these_too+8], rcx", "mov     qword ptr [rsp+68h+o.quote_these_too+10h], rbx", "mov     rcx, qword ptr cs:default_quoting_options.quote_these_too+18h", "mov     rbx, cs:default_quoting_options.left_quote", "mov     qword ptr [rsp+68h+o.quote_these_too+18h], rcx", "mov     [rsp+68h+o.left_quote], rbx", "mov     rax, cs:default_quoting_options.right_quote", "mov     [rsp+68h+o.right_quote], rax", "mov     rbx, rsp", "mov     n, rbx; o", "call    set_custom_quoting", "mov     rcx, rbx; options", "mov     rdx, argsize; argsize", "mov     rsi, arg; arg", "mov     edi, ebp; n", "call    quotearg_n_options", "mov     rdi, [rsp+68h+var_30]", "xor     rdi, fs:28h", "jnz     short loc_EF51"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~ebp,edi", "mov~r12,arg", "mov~r13,argsize", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~arg,<TAG>", "mov~rbx,<TAG>", "mov~<TAG>,rcx", "mov~[word ptr [rsp+0],rbx", "mov~rcx,<TAG>", "mov~rbx,<TAG>", "mov~[word ptr [rsp+0],rcx", "mov~[word ptr [rsp+0],rbx", "mov~rcx,<TAG>", "mov~rbx,<TAG>", "mov~[word ptr [rsp+0],rcx", "mov~[rsp+0],rbx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "mov~rbx,rsp", "mov~n,rbx", "call~FOO", "mov~rcx,rbx", "mov~rdx,argsize", "mov~rsi,arg", "mov~edi,ebp", "call~FOO", "mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 2, 4, 1, 3, 2, 2, 43, 0.0, 8, 2], "succs": [[], [0, 2], []], "fname": "quotearg_n_custom_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[3, 0, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     r8, 0FFFFFFFFFFFFFFFFh; argsize", "call    quotearg_n_custom_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~r8,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 5, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_n_custom", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[3, 0, 0, 2, 1, 8, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rcx, arg; arg", "mov     arg, right_quote; right_quote", "mov     right_quote, left_quote; left_quote", "mov     edi, 0; n", "call    quotearg_n_custom", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rcx,arg", "mov~arg,right_quote", "mov~right_quote,left_quote", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 8, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_custom", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[3, 0, 0, 2, 1, 9, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     r8, argsize; argsize", "mov     argsize, arg; arg", "mov     arg, right_quote; right_quote", "mov     right_quote, left_quote; left_quote", "mov     edi, 0; n", "call    quotearg_n_custom_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~r8,argsize", "mov~argsize,arg", "mov~arg,right_quote", "mov~right_quote,left_quote", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 9, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_custom_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 0, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "lea     rcx, quote_quoting_options; options", "call    quotearg_n_options", "add     rsp, 8", "retn"], ["sub~rsp,0", "lea~rcx,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 5, 0.0, 1, 2], "succs": [[]], "fname": "quote_n_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[3, 0, 0, 2, 1, 7, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "mov     edi, 0; n", "call    quote_n_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rdx,argsize", "mov~argsize,arg", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 7, 0.0, 0, 2], "succs": [[]], "fname": "quote_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[3, 0, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "call    quote_n_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rdx,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 5, 0.0, 0, 2], "succs": [[]], "fname": "quote_n", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[3, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rsi, arg; arg", "mov     edi, 0; n", "call    quote_n", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rsi,arg", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 7, 6, 0.0, 0, 2], "succs": [[]], "fname": "quote", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 0, 6, 0, 0, 3, 0, 1, 0, 0, 0.03655913978494624, ["mov     [rsp+178h+var_170], 0FFFFFFFFh", "cmp     dword ptr [r15], 2", "jnz     loc_F05A"], ["mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 1, 11, 0, 1, 8, 1, 2, 8, 3, 0.1064516129032258, ["lea     rcx, [rsp+178h+dst_st]; stat_buf", "mov     r8d, 100h; flag", "mov     rdx, dst_temp; filename", "mov     esi, r14d; fildes", "mov     edi, 1; ver", "call    ___fxstatat", "test    eax, eax", "jz      short loc_F247"], ["lea~rcx,[rsp+0]", "mov~r8d,<STR>", "mov~rdx,dst_temp", "mov~esi,r14d", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 2, -1, 0.0, ["add     rsp, 148h", "pop     rbx", "pop     flags", "pop     r12", "pop     r13", "pop     fd2", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~flags", "pop~r12", "pop~r13", "pop~fd2", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 1, 1, 0.06236559139784946, ["mov     eax, [rsp+178h+var_170]", "mov     rsi, [rsp+178h+var_40]", "xor     rsi, fs:28h", "jnz     loc_F296"], ["mov~eax,[rsp+0]", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [0, 0, 3, 0, 1, 7, 0, 2, 4, 2, 0.01129032258064516, ["mov     src_len, dst_temp; new", "mov     edx, r14d; newfd", "mov     rsi, src_temp; old", "mov     edi, [rsp+178h+fd1]; oldfd", "call    _renameat", "mov     [rsp+178h+var_170], eax", "jmp     loc_F05A"], ["mov~src_len,dst_temp", "mov~edx,r14d", "mov~rsi,src_temp", "mov~edi,[rsp+0]", "call~FOO", "mov~[rsp+0],eax", "jmp~FOO"]], [3, 0, 21, 1, 0, 16, 0, 1, 3, 3, 0.1596774193548387, ["mov     rsi, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rcx, rsi", "mov     rdi, src_temp", "repne scasb", "mov     rdx, rcx", "not     rdx", "mov     rcx, rsi", "mov     rdi, dst_temp", "repne scasb", "mov     rax, rcx", "not     rax", "add     rax, rsi", "lea     rcx, [rdx-1]", "cmp     rdx, 1", "jz      short loc_F17B"], ["mov~rsi,0", "mov~eax,0", "mov~rcx,rsi", "mov~rdi,src_temp", "scasb~<TAG>,", "mov~rdx,rcx", "not~rdx", "mov~rcx,rsi", "mov~rdi,dst_temp", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "add~rax,rsi", "lea~rcx,[rdx-1]+0]", "cmp~rdx,0", "jz~FOO"]], [0, 0, 20, 0, 0, 2, 1, 1, 4, 3, 0.15483870967741936, ["test    dst_len, dst_len", "jz      short loc_F17B"], ["test~dst_len,dst_len", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 14, 0, 0, 2, 1, 1, 7, 4, 0.15376344086021507, ["test    bl, bl", "jz      short loc_F1FD"], ["test~bl,bl", "jz~FOO"]], [2, 0, 30, 0, 0, 9, 2, 1, 1, 2, 0.02903225806451613, ["mov     r15, rax", "mov     edx, [rax]", "lea     eax, [rdx-16h]", "test    eax, 0FFFFFFEFh", "setnz   al", "cmp     edx, 5Fh ; '_'", "setnz   bl", "and     bl, al", "jnz     short loc_F05A"], ["mov~r15,rax", "mov~edx,<TAG>", "lea~eax,[rdx-16h]+0]", "test~eax,0", "setnz~al", "cmp~edx,0", "setnz~bl", "and~bl,al", "jnz~FOO"]], [2, 0, 31, 1, 2, 27, 2, 3, 0, 2, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 148h", "mov     [rsp+178h+fd1], edi", "mov     r13, src", "mov     r14d, edx", "mov     r12, dst", "mov     ebp, r8d", "mov     rax, fs:28h", "mov     [rsp+178h+var_40], rax", "xor     eax, eax", "mov     r9d, r8d", "mov     flags, dst", "mov     ecx, edx", "mov     fd2, src", "mov     esi, edi", "mov     edi, 13Ch; sysno", "call    _syscall", "mov     rbx, rax", "mov     [rsp+178h+var_170], eax", "call    ___errno_location", "test    ebx, ebx", "js      short loc_F087"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~[rsp+0],edi", "mov~r13,src", "mov~r14d,edx", "mov~r12,dst", "mov~ebp,r8d", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~r9d,r8d", "mov~flags,dst", "mov~ecx,edx", "mov~fd2,src", "mov~esi,edi", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~[rsp+0],eax", "call~FOO", "test~ebx,ebx", "js~FOO"]], [0, 0, 29, 0, 0, 2, 1, 1, 2, 4, 0.05591397849462366, ["test    ebp, ebp", "jz      short loc_F102"], ["test~ebp,ebp", "jz~FOO"]], [1, 0, 28, 0, 0, 2, 1, 1, 3, 3, 0.020967741935483872, ["test    ebp, 0FFFFFFFEh", "jz      short loc_F0BE"], ["test~ebp,0", "jz~FOO"]], [1, 0, 22, 0, 0, 1, 0, 0, 7, 4, 0.08172043010752689, ["mov     ebx, 1"], ["mov~ebx,0"]], [2, 1, 15, 0, 1, 9, 1, 2, 6, 2, 0.1596774193548387, ["lea     src_len, [rsp+178h+src_st]; stat_buf", "mov     r8d, 100h; flag", "mov     rdx, src_temp; filename", "mov     esi, [rsp+178h+fd1]; fildes", "mov     edi, 1; ver", "call    ___fxstatat", "mov     [rsp+178h+var_170], 0FFFFFFFFh", "test    eax, eax", "jnz     loc_F05A"], ["lea~src_len,[rsp+0]", "mov~r8d,<STR>", "mov~rdx,src_temp", "mov~esi,[rsp+0]", "mov~edi,0", "call~FOO", "mov~[rsp+0],0", "test~eax,eax", "jnz~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 5, 3, 0.16129032258064516, ["cmp     byte ptr [src_temp+src_len-1], 2Fh ; '/'", "jz      short loc_F196"], ["cmp~[yte ptr [src_temp+0],0", "jz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 6, 3, 0.011827956989247311, ["cmp     byte ptr [dst_temp+dst_len-1], 2Fh ; '/'", "jz      short loc_F196"], ["cmp~[yte ptr [dst_temp+0],0", "jz~FOO"]], [1, 1, 5, 0, 0, 4, 1, 1, 10, 2, 0.01827956989247312, ["mov     eax, [rsp+178h+src_st.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     loc_F05A"], ["mov~eax,[rsp+0]", "and~eax,<STR>", "cmp~eax,0", "jnz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 11, 3, 0.002150537634408602, ["jmp     short loc_F1D6"], ["jmp~FOO"]], [1, 1, 5, 0, 0, 4, 1, 1, 8, 3, 0.03225806451612903, ["mov     eax, [rsp+178h+src_st.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     short loc_F1F1"], ["mov~eax,[rsp+0]", "and~eax,<STR>", "cmp~eax,0", "jnz~FOO"]], [2, 0, 3, 0, 0, 3, 0, 1, 11, 2, 0.0016129032258064516, ["mov     dword ptr [r15], 15h", "mov     [rsp+178h+var_170], 0FFFFFFFFh", "jmp     loc_F05A"], ["mov~<TAG>,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 1, 5, 0, 0, 4, 1, 1, 10, 3, 0.01935483870967742, ["mov     eax, [rsp+178h+src_st.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      loc_F1D6"], ["mov~eax,[rsp+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [1, 1, 26, 0, 1, 8, 1, 2, 4, 3, 0.03763440860215054, ["lea     rcx, [rsp+178h+dst_st]; stat_buf", "mov     r8d, 100h; flag", "mov     rdx, dst_temp; filename", "mov     esi, r14d; fildes", "mov     edi, 1; ver", "call    ___fxstatat", "test    eax, eax", "jz      loc_F167"], ["lea~rcx,[rsp+0]", "mov~r8d,<STR>", "mov~rdx,dst_temp", "mov~esi,r14d", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 3, 0, 1, 7, 0, 2, 7, 2, 0.0016129032258064516, ["mov     src_len, dst_temp; new", "mov     edx, r14d; newfd", "mov     rsi, src_temp; old", "mov     edi, [rsp+178h+fd1]; oldfd", "call    _renameat", "mov     [rsp+178h+var_170], eax", "jmp     loc_F05A"], ["mov~src_len,dst_temp", "mov~edx,r14d", "mov~rsi,src_temp", "mov~edi,[rsp+0]", "call~FOO", "mov~[rsp+0],eax", "jmp~FOO"]], [2, 0, 3, 0, 0, 3, 0, 1, 10, 2, 0.0032258064516129032, ["mov     dword ptr [r15], 14h", "mov     [rsp+178h+var_170], 0FFFFFFFFh", "jmp     loc_F05A"], ["mov~<TAG>,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 1, 7, 0, 0, 4, 1, 1, 9, 3, 0.04946236559139785, ["mov     eax, [rsp+178h+dst_st.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jnz     short loc_F282"], ["mov~eax,[rsp+0]", "and~eax,<STR>", "cmp~eax,0", "jnz~FOO"]], [2, 0, 3, 0, 0, 3, 0, 1, 4, 2, 0.004838709677419355, ["mov     dword ptr [r15], 5Fh ; '_'", "mov     [rsp+178h+var_170], 0FFFFFFFFh", "jmp     short loc_F05A"], ["mov~<TAG>,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 25, 0, 0, 3, 0, 1, 5, 3, 0.05161290322580645, ["mov     eax, [r15]", "cmp     eax, 4Bh ; 'K'", "jz      short loc_F167"], ["mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 3, 0, 1, 7, 0, 2, 9, 2, 0.007526881720430107, ["mov     rcx, dst_temp; new", "mov     edx, r14d; newfd", "mov     rsi, src_temp; old", "mov     edi, [rsp+178h+fd1]; oldfd", "call    _renameat", "mov     [rsp+178h+var_170], eax", "jmp     loc_F05A"], ["mov~rcx,dst_temp", "mov~edx,r14d", "mov~rsi,src_temp", "mov~edi,[rsp+0]", "call~FOO", "mov~[rsp+0],eax", "jmp~FOO"]], [2, 0, 23, 0, 0, 3, 0, 1, 6, 2, 0.06935483870967742, ["mov     [rsp+178h+var_170], 0FFFFFFFFh", "cmp     eax, 2", "jnz     loc_F05A"], ["mov~[rsp+0],0", "cmp~eax,0", "jnz~FOO"]], [2, 0, 3, 0, 0, 3, 0, 1, 5, 2, 0.004838709677419355, ["mov     dword ptr [r15], 11h", "mov     [rsp+178h+var_170], 0FFFFFFFFh", "jmp     loc_F05A"], ["mov~<TAG>,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 9, 2, 0.002688172043010753, ["mov     dword ptr [r15], 2", "jmp     loc_F05A"], ["mov~<TAG>,0", "jmp~FOO"]]], "func_feature": [9, 16, 38, 2, 32, 50, 2, 164, 0.04724, 1, 3], "succs": [[17, 3], [0, 25], [], [2, 7], [3], [4, 6], [4, 15], [], [1, 19], [3, 11], [9, 3], [12, 5], [26, 22], [5], [8, 3], [16, 14], [14, 23], [18, 3], [28], [28, 31], [3], [28, 20], [27, 30], [3], [3], [24, 21], [3], [29, 30], [3], [3, 13], [3], [3]], "fname": "renameatu", "n_num": 32}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 7, 0, 0, 2, 0, 1, 0, 0, 0.14285714285714285, ["cmp     edx, 16h", "jnz     short loc_F2E7"], ["cmp~edx,0", "jnz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 0, 3, 2, 0.26190476190476186, ["cmp     count, 7FF00000h", "jbe     short loc_F2E7"], ["cmp~count,0", "jbe~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 5, 2, 0.11904761904761904, ["mov     count, r14", "jmp     short loc_F2B2"], ["mov~count,r14", "jmp~FOO"]], [0, 0, 7, 0, 1, 7, 1, 1, 1, 1, 0.3571428571428571, ["mov     rdx, count; n", "mov     rsi, buf; buf", "mov     edi, r13d; fd", "call    _write", "mov     rbp, rax", "test    result, result", "jns     short loc_F2EA"], ["mov~rdx,count", "mov~rsi,buf", "mov~edi,r13d", "call~FOO", "mov~rbp,rax", "test~result,result", "jns~FOO"]], [1, 0, 7, 0, 1, 4, 0, 2, 2, 2, 0.2857142857142857, ["call    ___errno_location", "mov     edx, [rax]", "cmp     edx, 4", "jz      short loc_F2B2"], ["call~FOO", "mov~edx,<TAG>", "cmp~edx,0", "jz~FOO"]], [1, 0, 7, 0, 0, 9, 0, 0, 0, 2, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     r13d, edi", "mov     r12, buf", "mov     rbx, count", "mov     r14d, 7FF00000h"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~r13d,edi", "mov~r12,buf", "mov~rbx,count", "mov~r14d,0"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, 1, 0.047619047619047616, ["mov     rax, result"], ["mov~rax,result"]], [0, 0, 0, 0, 0, 6, 0, 0, 2, 0, 0.0, ["pop     count", "pop     rbp", "pop     buf", "pop     fd", "pop     r14", "retn"], ["pop~count", "pop~rbp", "pop~buf", "pop~fd", "pop~r14", "retn"]]], "func_feature": [2, 1, 5, 0, 8, 11, 1, 33, 0.15179, 0, 0], "succs": [[2, 6], [0, 6], [3], [4, 7], [1, 3], [3], [7], []], "fname": "safe_write", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 0, 6, 0, 2, 8, 0, 3, 0, 0, 0.0, ["call    ___errno_location", "mov     rcx, dest_dirname", "lea     rdx, aS+2; format", "mov     esi, [rax]; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error", "jmp     short loc_F460"], ["call~FOO", "mov~rcx,dest_dirname", "lea~rdx,<TAG>", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 1, 7, 0, 3, 13, 1, 4, 3, 4, 0.16666666666666669, ["mov     rdi, source_dirname; ptr", "call    free", "mov     rdi, dest; file", "call    dir_name", "mov     dest, rax", "lea     rcx, [rsp+178h+dest_dir_stats]; stat_buf", "mov     r8d, 100h; flag", "mov     rdx, dest_dirname; filename", "mov     esi, [rsp+178h+dest_dfd]; fildes", "mov     edi, 1; ver", "call    ___fxstatat", "test    eax, eax", "jnz     loc_F3C0"], ["mov~rdi,source_dirname", "call~FOO", "mov~rdi,dest", "call~FOO", "mov~dest,rax", "lea~rcx,[rsp+0]", "mov~r8d,<STR>", "mov~rdx,dest_dirname", "mov~esi,[rsp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 1, 9, 0, 2, 11, 1, 3, 2, 5, 0.09090909090909091, ["mov     rdi, source; file", "call    dir_name", "mov     source, rax", "lea     rcx, [rsp+178h+source_dir_stats]; stat_buf", "mov     r8d, 100h; flag", "mov     rdx, source_dirname; filename", "mov     esi, [rsp+178h+source_dfd]; fildes", "mov     edi, 1; ver", "call    ___fxstatat", "test    eax, eax", "jnz     loc_F39E"], ["mov~rdi,source", "call~FOO", "mov~source,rax", "lea~rcx,[rsp+0]", "mov~r8d,<STR>", "mov~rdx,source_dirname", "mov~esi,[rsp+0]", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 11, 0, 1, 7, 1, 2, 1, 3, 0.06060606060606061, ["mov     rdx, source_baselen; n", "mov     rsi, dest_basename; s2", "mov     rdi, source_basename; s1", "call    _memcmp", "mov     ebx, eax", "test    eax, eax", "jz      short loc_F3F7"], ["mov~rdx,source_baselen", "mov~rsi,dest_basename", "mov~rdi,source_basename", "call~FOO", "mov~ebx,eax", "test~eax,eax", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 2, -1, 0.0, ["add     rsp, 148h", "pop     rbx", "pop     rbp", "pop     r12", "pop     source_basename", "pop     dest_basename", "pop     source_baselen", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~source_basename", "pop~dest_basename", "pop~source_baselen", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 1, 1, 0.15151515151515152, ["mov     eax, ebx", "mov     rdx, [rsp+178h+var_40]", "xor     rdx, fs:28h", "jnz     loc_F483"], ["mov~eax,ebx", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.022727272727272728, ["mov     ebx, 0", "jmp     short loc_F358"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 3, 0, 1, 4, 1, 2, 5, 2, 0.13636363636363635, ["and     ebx, 1", "mov     rdi, dest_dirname; ptr", "call    free", "jmp     loc_F358"], ["and~ebx,0", "mov~rdi,dest_dirname", "call~FOO", "jmp~FOO"]], [2, 0, 12, 1, 4, 28, 1, 5, 0, 2, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 148h", "mov     [rsp+178h+source_dfd], edi", "mov     r12, source", "mov     [rsp+178h+dest_dfd], edx", "mov     rbp, dest", "mov     rax, fs:28h", "mov     [rsp+178h+var_40], rax", "xor     eax, eax", "mov     source_dfd_0, source; name", "call    last_component", "mov     r13, rax", "mov     rdi, dest; name", "call    last_component", "mov     r14, rax", "mov     rdi, source_basename; name", "call    base_len", "mov     r15, rax", "mov     rdi, dest_basename; name", "call    base_len", "mov     ebx, 0", "cmp     source_baselen, dest_baselen", "jz      short loc_F383"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~[rsp+0],edi", "mov~r12,source", "mov~[rsp+0],edx", "mov~rbp,dest", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~source_dfd_0,source", "call~FOO", "mov~r13,rax", "mov~rdi,dest", "call~FOO", "mov~r14,rax", "mov~rdi,source_basename", "call~FOO", "mov~r15,rax", "mov~rdi,dest_basename", "call~FOO", "mov~ebx,0", "cmp~source_baselen,dest_baselen", "jz~FOO"]], [0, 0, 5, 0, 0, 3, 0, 1, 4, 3, 0.18181818181818182, ["mov     rax, [rsp+178h+dest_dir_stats.st_ino]", "cmp     [rsp+178h+source_dir_stats.st_ino], rax", "jz      loc_F3E2"], ["mov~rax,[rsp+0]", "cmp~[rsp+0],rax", "jz~FOO"]], [2, 0, 8, 0, 2, 8, 0, 3, 3, 5, 0.0, ["call    ___errno_location", "mov     rcx, source_dirname", "lea     rdx, aS+2; format", "mov     esi, [rax]; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error", "jmp     short loc_F426"], ["call~FOO", "mov~rcx,source_dirname", "lea~rdx,<TAG>", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [0, 0, 4, 0, 0, 5, 0, 1, 5, 3, 0.0, ["mov     rax, [rsp+178h+dest_dir_stats.st_dev]", "cmp     [rsp+178h+source_dir_stats.st_dev], rax", "setz    bl", "movzx   ebx, bl", "jmp     short loc_F473"], ["mov~rax,[rsp+0]", "cmp~[rsp+0],rax", "setz~bl", "movzx~ebx,bl", "jmp~FOO"]]], "func_feature": [16, 6, 27, 1, 13, 17, 1, 102, 0.06235, 2, 2], "succs": [[10], [0, 10], [1, 11], [2, 7], [], [4, 6], [], [5], [5], [3, 5], [8, 12], [1], [8]], "fname": "same_nameat", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[3, 0, 0, 2, 1, 8, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rcx, dest; dest", "mov     edx, 0FFFFFF9Ch; dest_dfd", "mov     dest, source; source", "mov     edi, edx; source_dfd", "call    same_nameat", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rcx,dest", "mov~edx,0", "mov~dest,source", "mov~edi,edx", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 7, 8, 0.0, 0, 2], "succs": [[]], "fname": "same_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 2, 0, 0, 4, 0, 0, 0, 0, 0.0, ["mov     rdx, [dea+8]", "mov     rax, [deb+8]", "cmp     rdx, rax", "jb      short loc_F4B7"], ["mov~rdx,[dea+0]", "mov~rax,[deb+0]", "cmp~rdx,rax", "jb~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0.0, ["setnbe  al", "movzx   eax, al", "retn"], ["setnbe~al", "movzx~eax,al", "retn"]]], "func_feature": [0, 0, 0, 0, 3, 2, 0, 9, 0.0, 0, 0], "succs": [[], [0, 2], []], "fname": "direntry_cmp_inode", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     deb, [deb]; s2", "mov     dea, [dea]; s1", "call    _strcmp", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~deb,<TAG>", "mov~dea,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 6, 0.0, 0, 2], "succs": [[]], "fname": "direntry_cmp_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 40, 1, 0, 3, 0, 0, 7, -1, 0.1016260162601626, ["add     rdx, used", "mov     [rsp+78h+allocated], n_0", "jb      short loc_F6EB"], ["add~rdx,used", "mov~[rsp+0],n_0", "jb~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.0005807200929152149, ["mov     r14d, 0", "jmp     short loc_F7D6"], ["mov~r14d,0", "jmp~FOO"]], [0, 1, 42, 1, 0, 13, 1, 1, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 48h", "mov     esi, esi", "lea     rax, comparison_function_table", "mov     rax, [rax+option*8]", "mov     [rsp+78h+cmp], rax", "test    dirp, dirp", "jz      loc_F800"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~esi,esi", "lea~rax,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "test~dirp,dirp", "jz~FOO"]], [0, 1, 40, 0, 0, 7, 2, 0, 9, -1, 0.06329849012775841, ["mov     n_0, [rsp+78h+allocated]", "test    rdx, rdx", "mov     eax, 80h", "cmovnz  rax, rdx", "mov     [rsp+78h+allocated], rax", "test    rax, rax", "jns     short loc_F6C5"], ["mov~n_0,[rsp+0]", "test~rdx,rdx", "mov~eax,<STR>", "cmovnz~rax,rdx", "mov~[rsp+0],rax", "test~rax,rax", "jns~FOO"]], [0, 0, 40, 0, 0, 2, 1, 1, 8, -1, 0.09581881533101046, ["test    name_space, name_space", "jz      short loc_F6F0"], ["test~name_space,name_space", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 10, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 40, 1, 0, 5, 0, 1, 6, -1, 0.12688734030197446, ["mov     rax, [rsp+78h+allocated]", "sub     rax, used", "mov     rdx, [rsp+78h+entry_size]", "cmp     rax, rdx", "ja      short loc_F6D5"], ["mov~rax,[rsp+0]", "sub~rax,used", "mov~rdx,[rsp+0]", "cmp~rax,rdx", "ja~FOO"]], [3, 0, 40, 0, 0, 8, 0, 1, 5, -1, 0.2572590011614402, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     rdi, entry", "mov     eax, 0", "repne scasb", "not     rcx", "mov     [rsp+78h+entry_size], rcx", "cmp     [rsp+78h+cmp], 0", "jz      loc_F67E"], ["mov~rcx,0", "mov~rdi,entry", "mov~eax,0", "scasb~<TAG>,", "not~rcx", "mov~[rsp+0],rcx", "cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 40, 0, 0, 5, 0, 0, 9, -1, 0.036004645760743324, ["mov     entry_size_0, [rsp+78h+n]", "mov     rax, rcx", "shr     rax, 1", "lea     rax, [rcx+rax+1]", "mov     [rsp+78h+n], rax"], ["mov~entry_size_0,[rsp+0]", "mov~rax,rcx", "shr~rax,0", "lea~rax,[rcx+0]", "mov~[rsp+0],rax"]], [1, 0, 40, 0, 0, 3, 0, 1, 8, -1, 0.041811846689895474, ["mov     rdx, 555555555555554h", "cmp     [rsp+78h+n], rdx", "ja      short loc_F679"], ["mov~rdx,0", "cmp~[rsp+0],rdx", "ja~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 10, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 40, 0, 0, 3, 0, 1, 9, -1, 0.0272938443670151, ["mov     entry_size_0, 5555555555555553h", "cmp     [rsp+78h+allocated], rcx", "ja      short loc_F710"], ["mov~entry_size_0,0", "cmp~[rsp+0],rcx", "ja~FOO"]], [1, 0, 40, 0, 0, 2, 0, 1, 4, -1, 0.27293844367015097, ["cmp     byte ptr [dp+rax+13h], 0", "jnz     short loc_F578"], ["cmp~[yte ptr [dp+0],0", "jnz~FOO"]], [3, 0, 4, 2, 2, 14, 0, 2, 6, -1, 0.016260162601626015, ["mov     rcx, [rsp+78h+cmp]; compar", "mov     edx, 10h; size", "mov     dirp, [rsp+78h+entries_used]", "mov     rsi, r15; nmemb", "mov     readdir_errno, [rsp+78h+entries]", "mov     rdi, rbx; base", "call    _qsort", "lea     rdi, [used+1]; n", "call    xmalloc", "mov     name_space, rax", "shl     r15, 4", "mov     r12, r15", "add     r12, rbx", "mov     ebp, 0"], ["mov~rcx,[rsp+0]", "mov~edx,0", "mov~dirp,[rsp+0]", "mov~rsi,r15", "mov~readdir_errno,[rsp+0]", "mov~rdi,rbx", "call~FOO", "lea~rdi,[used+0]", "call~FOO", "mov~name_space,rax", "shl~r15,0", "mov~r12,r15", "add~r12,rbx", "mov~ebp,0"]], [1, 0, 6, 0, 0, 2, 0, 1, 5, -1, 0.0627177700348432, ["cmp     [rsp+78h+entries_used], 0", "jnz     short loc_F765"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 11, 0, 0, 3, 1, 1, 3, -1, 0.15911730545876887, ["mov     ebx, [r12]", "test    ebx, ebx", "jnz     short loc_F747"], ["mov~ebx,<TAG>", "test~ebx,ebx", "jnz~FOO"]], [1, 0, 40, 0, 1, 6, 1, 2, 2, -1, 0.42044134727061555, ["mov     dword ptr [r12], 0", "mov     rdi, dirp; dirp", "call    _readdir", "mov     rbx, rax", "test    dp, dp", "jz      loc_F715"], ["mov~<TAG>,0", "mov~rdi,dirp", "call~FOO", "mov~rbx,rax", "test~dp,dp", "jz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 4, -1, 0.1207897793263647, ["cmp     [rsp+78h+cmp], 0", "jz      loc_F7E8"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 40, 0, 0, 3, 0, 1, 6, -1, 0.1251451800232288, ["mov     rdx, [rsp+78h+entries_used]", "cmp     [rsp+78h+n], rdx", "jz      short loc_F5E6"], ["mov~rdx,[rsp+0]", "cmp~[rsp+0],rdx", "jz~FOO"]], [1, 0, 40, 1, 1, 6, 0, 2, 10, -1, 0.12369337979094076, ["mov     rsi, [rsp+78h+n]", "shl     rsi, 4; n", "mov     rdi, [rsp+78h+entries]; p", "call    xrealloc", "mov     [rsp+78h+entries], rax", "jmp     loc_F5A9"], ["mov~rsi,[rsp+0]", "shl~rsi,0", "mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],rax", "jmp~FOO"]], [2, 0, 40, 0, 0, 5, 2, 1, 9, -1, 0.07084785133565621, ["test    rax, rax", "mov     eax, 1", "cmovs   rcx, rax", "test    cl, 1", "jz      short loc_F614"], ["test~rax,rax", "mov~eax,0", "cmovs~rcx,rax", "test~cl,0", "jz~FOO"]], [6, 0, 40, 0, 1, 10, 0, 2, 1, -1, 0.02264808362369338, ["mov     r15, dirp", "call    ___errno_location", "mov     r12, rax", "mov     ebp, 0", "mov     [rsp+78h+entries_used], 0", "mov     [rsp+78h+n], 0", "mov     [rsp+78h+entries], 0", "mov     [rsp+78h+allocated], 0", "mov     r14d, 0", "jmp     short loc_F53D"], ["mov~r15,dirp", "call~FOO", "mov~r12,rax", "mov~ebp,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r14d,0", "jmp~FOO"]], [2, 0, 40, 0, 0, 4, 0, 1, 3, -1, 0.25551684088269455, ["lea     r13, [dp+13h]", "mov     eax, 0", "cmp     byte ptr [dp+13h], 2Eh ; '.'", "jnz     short loc_F536"], ["lea~r13,[dp+0]", "mov~eax,0", "cmp~[yte ptr [dp+0],0", "jnz~FOO"]], [2, 0, 40, 1, 0, 5, 0, 1, 4, -1, 0.0, ["cmp     byte ptr [dp+14h], 2Eh ; '.'", "setz    al", "movzx   eax, al", "add     rax, 1", "jmp     short loc_F536"], ["cmp~[yte ptr [dp+0],0", "setz~al", "movzx~eax,al", "add~rax,0", "jmp~FOO"]], [1, 0, 40, 0, 0, 5, 0, 0, 10, -1, 0.02148664343786295, ["mov     rcx, [rsp+78h+allocated]", "mov     rax, rcx", "shr     rax, 1", "lea     rax, [rcx+rax+1]", "mov     [rsp+78h+allocated], rax"], ["mov~rcx,[rsp+0]", "mov~rax,rcx", "shr~rax,0", "lea~rax,[rcx+0]", "mov~[rsp+0],rax"]], [0, 0, 3, 0, 1, 5, 0, 2, 6, -1, 0.017421602787456445, ["lea     rdi, [used+1]; n", "call    xmalloc", "mov     name_space, rax", "mov     rbp, [rsp+78h+entries_used]", "jmp     loc_F7C7"], ["lea~rdi,[used+0]", "call~FOO", "mov~name_space,rax", "mov~rbp,[rsp+0]", "jmp~FOO"]], [1, 0, 4, 2, 2, 11, 0, 3, 7, -1, 0.0017421602787456446, ["lea     r13, [name_space+used]", "mov     rsi, [rbx]; src", "mov     rdi, dest; dest", "call    _stpcpy", "sub     rax, dest", "lea     used, [used+rax+1]", "mov     rdi, [rbx]; ptr", "call    free", "add     rbx, 10h", "cmp     rbx, r12", "jnz     short loc_F79F"], ["lea~r13,<TAG>", "mov~rsi,<TAG>", "mov~rdi,dest", "call~FOO", "sub~rax,dest", "lea~used,[used+0]", "mov~rdi,<TAG>", "call~FOO", "add~rbx,0", "cmp~rbx,r12", "jnz~FOO"]], [0, 0, 2, 0, 1, 2, 0, 1, 7, -1, 0.004645760743321719, ["mov     rdi, [rsp+78h+entries]; ptr", "call    free"], ["mov~rdi,[rsp+0]", "call~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 6, -1, 0.004645760743321719, ["mov     byte ptr [name_space+used], 0"], ["mov~<TAG>,0"]], [0, 0, 3, 0, 0, 2, 0, 1, 5, -1, 0.03193960511033682, ["cmp     [rsp+78h+allocated], used", "jnz     short loc_F7D1"], ["cmp~[rsp+0],used", "jnz~FOO"]], [0, 0, 2, 0, 1, 5, 0, 2, 6, -1, 0.0, ["lea     rsi, [used+1]; n", "mov     rdi, name_space; p", "call    xrealloc", "mov     name_space, rax", "jmp     short loc_F7D1"], ["lea~rsi,[used+0]", "mov~rdi,name_space", "call~FOO", "mov~name_space,rax", "jmp~FOO"]], [0, 0, 40, 0, 1, 4, 0, 1, 10, -1, 0.1016260162601626, ["mov     rsi, [rsp+78h+allocated]; n", "mov     rdi, name_space; p", "call    xrealloc", "mov     name_space, rax"], ["mov~rsi,[rsp+0]", "mov~rdi,name_space", "call~FOO", "mov~name_space,rax"]], [0, 0, 40, 1, 0, 2, 0, 1, 8, -1, 0.34146341463414637, ["add     used, [rsp+78h+entry_size]", "jmp     loc_F53D"], ["add~used,[rsp+0]", "jmp~FOO"]], [2, 0, 40, 3, 1, 12, 0, 1, 7, -1, 0.16579558652729384, ["mov     rax, [rsp+78h+entries_used]", "shl     rax, 4", "mov     rdx, rax", "add     rdx, [rsp+78h+entries]", "mov     [rsp+78h+var_40], rdx", "mov     rdi, r13; string", "call    xstrdup", "mov     rdx, [rsp+78h+var_40]", "mov     [rdx], rax", "mov     rax, [dp]", "mov     [rdx+8], rax", "add     [rsp+78h+entries_used], 1"], ["mov~rax,[rsp+0]", "shl~rax,0", "mov~rdx,rax", "add~rdx,[rsp+0]", "mov~[rsp+0],rdx", "mov~rdi,r13", "call~FOO", "mov~rdx,[rsp+0]", "mov~<TAG>,rax", "mov~rax,<TAG>", "mov~[rdx+0],rax", "add~[rsp+0],0"]], [3, 0, 40, 1, 0, 11, 1, 0, 8, -1, 0.053426248548199766, ["mov     entry_size_0, [rsp+78h+n]", "test    rcx, rcx", "mov     eax, 8", "cmovnz  rax, rcx", "mov     rsi, rax", "mov     [rsp+78h+n], rax", "mov     ecx, 0", "mov     edx, 10h", "mov     rax, rdx", "mul     rsi", "jo      short loc_F672"], ["mov~entry_size_0,[rsp+0]", "test~rcx,rcx", "mov~eax,0", "cmovnz~rax,rcx", "mov~rsi,rax", "mov~[rsp+0],rax", "mov~ecx,0", "mov~edx,0", "mov~rax,rdx", "mul~,rsi", "jo~FOO"]], [1, 0, 40, 0, 0, 2, 0, 1, 7, -1, 0.10046457607433217, ["cmp     [rsp+78h+entries], 0", "jz      short loc_F631"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 40, 0, 1, 5, 0, 2, 7, -1, 0.1443089430894309, ["lea     rdi, [name_space+used]; dest", "mov     rdx, [rsp+78h+entry_size]; n", "mov     rsi, r13; src", "call    _memcpy", "jmp     loc_F5DC"], ["lea~rdi,<TAG>", "mov~rdx,[rsp+0]", "mov~rsi,r13", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 2, 7, 0, 3, 4, -1, 0.014518002322880372, ["mov     rdi, [rsp+78h+entries]; ptr", "call    free", "mov     rdi, name_space; ptr", "call    free", "mov     [r12], ebx", "mov     r14d, 0", "jmp     short loc_F7D6"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~rdi,name_space", "call~FOO", "mov~<TAG>,ebx", "mov~r14d,0", "jmp~FOO"]], [0, 1, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["mov     rax, r14", "add     rsp, 48h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~rax,r14", "add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 40, 0, 0, 2, 0, 1, 9, -1, 0.0, ["mov     ecx, 1", "jmp     short loc_F65C"], ["mov~ecx,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 10, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [20, 9, 47, 1, 43, 57, 1, 203, 0.07917, 1, 15], "succs": [[], [0, 5], [39], [2, 22], [32, 6], [12, 4], [], [1, 37], [19, 7], [20], [9, 42], [], [25, 11], [8, 17], [27], [26, 14], [18, 38], [16, 23], [30, 15], [34, 36], [34], [41, 20], [17], [24, 13], [13], [32], [28], [27, 28], [29], [39], [29, 31], [29], [37], [17], [33], [40, 21], [10, 35], [33], [39], [], [21], [], []], "fname": "streamsavedir", "n_num": 43}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 2, 0, 2, 9, 1, 3, 0, 0, 0.125, ["mov     rbx, dirp", "mov     esi, ebp; option", "mov     rdi, dirp; dirp", "call    streamsavedir", "mov     option, rax", "mov     rdi, dirp; dirp", "call    _closedir", "test    eax, eax", "jnz     short loc_F83C"], ["mov~rbx,dirp", "mov~esi,ebp", "mov~rdi,dirp", "call~FOO", "mov~option,rax", "mov~rdi,dirp", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 1, 7, 1, 2, 0, 1, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     ebp, esi", "call    opendir_safer", "test    dirp, dirp", "jz      short loc_F859"], ["push~r12", "push~rbp", "push~rbx", "mov~ebp,esi", "call~FOO", "test~dirp,dirp", "jz~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 2, -1, 0.0, ["mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "retn"], ["mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "retn"]], [1, 0, 1, 0, 2, 8, 0, 3, 2, -1, 0.0, ["call    ___errno_location", "mov     dirp, rax", "mov     r12d, [rax]", "mov     rdi, name_space; ptr", "call    free", "mov     [rbx], r12d", "mov     ebp, 0", "jmp     short loc_F834"], ["call~FOO", "mov~dirp,rax", "mov~r12d,<TAG>", "mov~rdi,name_space", "call~FOO", "mov~<TAG>,r12d", "mov~ebp,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.041666666666666664, ["mov     ebp, 0", "jmp     short loc_F834"], ["mov~ebp,0", "jmp~FOO"]]], "func_feature": [5, 2, 9, 0, 5, 6, 1, 31, 0.03333, 0, 0], "succs": [[2, 3], [0, 4], [], [2], [2]], "fname": "savedir", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 2, 0, 1, 8, 1, 2, 0, 0, 0.30000000000000004, ["call    ___errno_location", "cmp     dword ptr [rax], 2", "setnz   al", "movzx   eax, al", "neg     eax", "mov     rcx, [rsp+0A8h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_F8CE"], ["call~FOO", "cmp~<TAG>,0", "setnz~al", "movzx~eax,al", "neg~eax", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 4, 0, 1, 3, 0, 2, 1, 2, 0.07500000000000001, ["call    ___errno_location", "cmp     dword ptr [rax], 4Bh ; 'K'", "jnz     short loc_F8A3"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 3, 0, 1, 2, 0, 1, 1, 2, 0.07500000000000001, ["call    ___errno_location", "mov     dword ptr [rax], 11h"], ["call~FOO", "mov~<TAG>,0"]], [2, 0, 5, 1, 1, 10, 2, 2, 0, 3, 0.0, ["sub     rsp, 0A8h", "mov     flags, tmpl; filename", "mov     rax, fs:28h", "mov     [rsp+0A8h+var_10], rax", "xor     eax, eax", "mov     rdx, rsp; stat_buf", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jz      short loc_F898"], ["sub~rsp,0", "mov~flags,tmpl", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rdx,rsp", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 3, -1, 0.0, ["add     rsp, 0A8h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [5, 3, 8, 1, 6, 7, 0, 26, 0.075, 1, 2], "succs": [[4, 5], [0, 2], [0], [1, 2], [], []], "fname": "try_nocreate", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[3, 0, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     esi, 1C0h; mode", "call    _mkdir", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~esi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 5, 0.0, 0, 2], "succs": [[]], "fname": "try_dir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[5, 1, 0, 2, 1, 9, 2, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     esi, [openflags]", "and     sil, 3Ch", "or      sil, 0C2h; oflag", "mov     edx, 180h", "mov     eax, 0", "call    _open", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~esi,<TAG>", "and~sil,0", "or~sil,0", "mov~edx,<STR>", "mov~eax,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 2, 1, 0, 1, 0, 0, 9, 0.0, 0, 2], "succs": [[]], "fname": "try_file", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 13, 0, 1, 6, 1, 2, 0, 0, 0.1, ["mov     rsi, x_suffix_len; bytes_bound", "mov     edi, 0; name", "call    randint_all_new", "mov     suffixlen, rax", "test    rand_src, rand_src", "jz      loc_FA72"], ["mov~rsi,x_suffix_len", "mov~edi,0", "call~FOO", "mov~suffixlen,rax", "test~rand_src,rand_src", "jz~FOO"]], [0, 0, 15, 2, 1, 11, 0, 2, 1, 2, 0.05416666666666667, ["mov     rsi, rbx", "sub     len, x_suffix_len", "mov     rbx, rbp", "sub     rbx, suffixlen", "lea     rax, [rsi+rbx]", "mov     [rsp+68h+XXXXXX], rax", "lea     rsi, aSimpleBackupSu+13h; accept", "mov     rdi, rax; s", "call    _strspn", "cmp     x_suffix_len, rax", "ja      short loc_F9C0"], ["mov~rsi,rbx", "sub~len,x_suffix_len", "mov~rbx,rbp", "sub~rbx,suffixlen", "lea~rax,<TAG>", "mov~[rsp+0],rax", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "cmp~x_suffix_len,rax", "ja~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 5, -1, 0.09166666666666666, ["jmp     short loc_F9F0"], ["jmp~FOO"]], [0, 0, 11, 0, 0, 3, 1, 1, 4, -1, 0.21666666666666667, ["mov     rbx, [rsp+68h+XXXXXX]", "test    x_suffix_len, x_suffix_len", "jnz     short loc_F9D2"], ["mov~rbx,[rsp+0]", "test~x_suffix_len,x_suffix_len", "jnz~FOO"]], [3, 0, 16, 1, 1, 28, 0, 2, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 38h", "mov     rbx, tmpl", "mov     r12d, esi", "mov     [rsp+68h+args], args_0", "mov     [rsp+68h+tryfunc], tryfunc_0", "mov     r15, x_suffix_len", "call    ___errno_location", "mov     [rsp+68h+save_errno], rax", "mov     eax, [rax]", "mov     [rsp+68h+var_3C], eax", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     [rsp+68h+var_68], tmpl", "mov     rdi, tmpl", "repne scasb", "mov     rdx, rcx", "not     rdx", "lea     rbp, [rdx-1]", "movsxd  suffixlen, r12d", "lea     rax, [suffixlen+x_suffix_len]", "cmp     rax, len", "ja      short loc_F9C0"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,tmpl", "mov~r12d,esi", "mov~[rsp+0],args_0", "mov~[rsp+0],tryfunc_0", "mov~r15,x_suffix_len", "call~FOO", "mov~[rsp+0],rax", "mov~eax,<TAG>", "mov~[rsp+0],eax", "mov~rcx,0", "mov~eax,0", "mov~<TAG>,tmpl", "mov~rdi,tmpl", "scasb~<TAG>,", "mov~rdx,rcx", "not~rdx", "lea~rbp,[rdx-1]+0]", "movsxd~suffixlen,r12d", "lea~rax,<TAG>", "cmp~rax,len", "ja~FOO"]], [0, 0, 2, 0, 0, 3, 0, 0, 7, -1, 0.058333333333333334, ["mov     fd, [rsp+68h+save_errno]", "mov     edx, [rsp+68h+var_3C]", "mov     [rax], edx"], ["mov~fd,[rsp+0]", "mov~edx,[rsp+0]", "mov~<TAG>,edx"]], [0, 0, 11, 0, 1, 7, 1, 1, 6, -1, 0.22916666666666666, ["mov     rsi, [rsp+68h+args]", "mov     rdi, [rsp+68h+var_68]", "mov     rax, [rsp+68h+tryfunc]", "call    rax", "mov     ebx, eax", "test    eax, eax", "jns     short loc_FA22"], ["mov~rsi,[rsp+0]", "mov~rdi,<TAG>", "mov~rax,[rsp+0]", "call~rax", "mov~ebx,eax", "test~eax,eax", "jns~FOO"]], [2, 0, 11, 1, 1, 8, 0, 2, 5, -1, 0.09166666666666666, ["mov     esi, 3Dh ; '='; genmax", "mov     rdi, rand_src; s", "call    randint_genmax", "movzx   eax, byte ptr [r13+rax+0]", "mov     [rbx], al", "add     rbx, 1", "cmp     rbx, rbp", "jnz     short loc_F9D2"], ["mov~esi,0", "mov~rdi,rand_src", "call~FOO", "movzx~eax,[yte ptr [r13+0]", "mov~<TAG>,al", "add~rbx,0", "cmp~rbx,rbp", "jnz~FOO"]], [2, 0, 1, 0, 1, 6, 0, 2, 9, -1, 0.00625, ["mov     rdi, rand_src; s", "call    randint_all_free", "mov     rax, [rsp+68h+save_errno]", "mov     dword ptr [rax], 11h", "mov     ebx, 0FFFFFFFFh", "jmp     short loc_FA40"], ["mov~rdi,rand_src", "call~FOO", "mov~rax,[rsp+0]", "mov~<TAG>,0", "mov~ebx,0", "jmp~FOO"]], [1, 0, 11, 1, 0, 2, 0, 1, 8, -1, 0.08958333333333333, ["sub     r14d, 1", "jz      short loc_FA51"], ["sub~r14d,0", "jz~FOO"]], [2, 0, 1, 0, 0, 4, 0, 1, 1, -1, 0.008333333333333333, ["mov     rax, [rsp+68h+save_errno]", "mov     dword ptr [rax], 16h", "mov     ebx, 0FFFFFFFFh", "jmp     short loc_FA40"], ["mov~rax,[rsp+0]", "mov~<TAG>,0", "mov~ebx,0", "jmp~FOO"]], [1, 0, 11, 0, 0, 3, 0, 1, 7, -1, 0.13333333333333333, ["mov     fd, [rsp+68h+save_errno]", "cmp     dword ptr [rax], 11h", "jnz     short loc_FA6B"], ["mov~fd,[rsp+0]", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 3, 0, 0.004166666666666667, ["mov     ebx, 0FFFFFFFFh", "jmp     short loc_FA40"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["mov     eax, ebx", "add     rsp, 38h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     x_suffix_len", "retn"], ["mov~eax,ebx", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~x_suffix_len", "retn"]], [0, 0, 1, 0, 1, 5, 0, 1, 8, -1, 0.03125, ["mov     r14, [rsp+68h+save_errno]", "mov     ebp, [r14]", "mov     rdi, rand_src; s", "call    randint_all_free", "mov     [r14], ebp"], ["mov~r14,[rsp+0]", "mov~ebp,<TAG>", "mov~rdi,rand_src", "call~FOO", "mov~<TAG>,ebp"]], [1, 0, 2, 0, 0, 2, 0, 1, 8, -1, 0.00625, ["mov     ebx, 0FFFFFFFFh", "jmp     short done"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 11, 1, 0, 6, 0, 1, 3, -1, 0.125, ["mov     r14d, 3A2F8h", "mov     rand_src, [rsp+68h+var_68]", "lea     rbp, [rax+x_suffix_len]", "add     rbp, rbx", "lea     r13, letters; \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLM\"...", "jmp     short loc_FA16"], ["mov~r14d,0", "mov~rand_src,<TAG>", "lea~rbp,<TAG>", "add~rbp,rbx", "lea~r13,<TAG>", "jmp~FOO"]]], "func_feature": [7, 3, 20, 2, 17, 24, 4, 106, 0.07328, 2, 7], "succs": [[16, 12], [0, 10], [6], [2, 7], [1, 10], [14], [11, 5], [6, 7], [13], [8, 3], [13], [9, 15], [13], [], [13], [14], [3]], "fname": "try_tempname_len", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 0, 1, 1, 4, 0, 1, 0, 0, 0.0, ["lea     flags_0, [rsp+18h+flags]; args", "call    try_tempname_len", "add     rsp, 18h", "retn"], ["lea~flags_0,[rsp+0]", "call~FOO", "add~rsp,0", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 3, -1, 0.023809523809523808, ["lea     kind, try_file", "jmp     short loc_FAB5"], ["lea~kind,<TAG>", "jmp~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 2, 0, 0.023809523809523808, ["lea     kind, try_nocreate", "jmp     short loc_FAB5"], ["lea~kind,<TAG>", "jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 1, -1, 0.023809523809523808, ["lea     kind, try_dir; tryfunc"], ["lea~kind,<TAG>"]], [2, 0, 7, 1, 0, 4, 0, 1, 0, 2, 0.0, ["sub     rsp, 18h", "mov     [rsp+18h+flags], edx", "cmp     ecx, 1", "jz      short loc_FAAE"], ["sub~rsp,0", "mov~[rsp+0],edx", "cmp~ecx,0", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 1, 1, 0.09523809523809523, ["cmp     ecx, 2", "jz      short loc_FACD"], ["cmp~ecx,0", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 2, -1, 0.09523809523809523, ["test    ecx, ecx", "jz      short loc_FAC4"], ["test~ecx,ecx", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 3, -1, 0.0, ["lea     kind, __PRETTY_FUNCTION___5642; \"gen_tempname_len\"", "mov     edx, 147h; line", "lea     suffixlen, aLibTempnameC; \"lib/tempname.c\"", "lea     tmpl, aInvalidKindInG; \"! \\\"invalid KIND in __gen_tempname\\\"\"", "call    ___assert_fail"], ["lea~kind,<TAG>", "mov~edx,0", "lea~suffixlen,<TAG>", "lea~tmpl,<TAG>", "call~FOO"]]], "func_feature": [2, 1, 7, 0, 8, 9, 1, 22, 0.03274, 6, 2], "succs": [[], [0], [0], [0], [3, 5], [2, 6], [1, 7], []], "fname": "gen_tempname_len", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[3, 0, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     r8d, 6; x_suffix_len", "call    gen_tempname_len", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~r8d,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 5, 0.0, 0, 2], "succs": [[]], "fname": "gen_tempname", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[3, 0, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     r8d, 6; x_suffix_len", "call    try_tempname_len", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~r8d,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 5, 0.0, 0, 2], "succs": [[]], "fname": "try_tempname", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 0, 1, 0, 7, 0, 0, 0, 0, 0.0, ["mov     eax, ebx", "add     rsp, 8", "pop     fd", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["mov~eax,ebx", "add~rsp,0", "pop~fd", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 1, 0, 3, 10, 0, 4, 1, 0, 0.0, ["call    dup_safer", "mov     r12d, eax", "call    ___errno_location", "mov     rbp, rax", "mov     r13d, [rax]", "mov     edi, ebx; fd", "call    _close", "mov     [rbp+0], r13d", "mov     ebx, r12d", "jmp     short loc_FB0F"], ["call~FOO", "mov~r12d,eax", "call~FOO", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~edi,ebx", "call~FOO", "mov~[rbp+0],r13d", "mov~ebx,r12d", "jmp~FOO"]], [2, 0, 2, 1, 0, 8, 0, 0, 0, 1, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     ebx, edi", "cmp     edi, 2", "jbe     short loc_FB1C"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~ebx,edi", "cmp~edi,0", "jbe~FOO"]]], "func_feature": [3, 0, 4, 0, 3, 3, 2, 25, 0.0, 0, 2], "succs": [[], [0], [0, 1]], "fname": "fd_safer", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 0, 1, 0, 5, 0, 0, 0, 0, 0.0, ["mov     rax, [p]", "mov     edx, 0", "div     table_size", "mov     rax, rdx", "retn"], ["mov~rax,<TAG>", "mov~edx,0", "div~,table_size", "mov~rax,rdx", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 5, 0.0, 0, 1], "succs": [[]], "fname": "dev_info_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["mov     rax, [b]", "cmp     [a], rax", "setz    al", "retn"], ["mov~rax,<TAG>", "cmp~<TAG>,rax", "setz~al", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 4, 0.0, 0, 0], "succs": [[]], "fname": "dev_info_compare", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 11, 0, 0, 1, 0, 1, 0, 0, 0.0012437810945273632, ["jmp     loc_10079"], ["jmp~FOO"]], [1, 0, 16, 1, 0, 3, 0, 1, 23, 7, 0.010628674807779286, ["imul    ebx, 0Ah", "cmp     ebx, ebp", "jnz     short loc_10116"], ["imul~ebx,,0", "cmp~ebx,ebp", "jnz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 2, 2, 0.045952057892356395, ["mov     ebx, 1", "jl      short loc_FC97"], ["mov~ebx,0", "jl~FOO"]], [0, 0, 8, 0, 0, 2, 0, 1, 1, 3, 0.07788331071913161, ["cmp     src_s_0, r13", "jg      loc_1019C"], ["cmp~src_s_0,r13", "jg~FOO"]], [1, 0, 58, 0, 0, 2, 0, 1, 5, 8, 0.020171867933061964, ["cmp     cs:new_dst_res_5308, 0", "jz      loc_FFE2"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 59, 0, 1, 10, 1, 2, 5, 8, 0.05603799185888739, ["mov     options, cs:data_freer; data_freer", "lea     src_stat, dev_info_compare; comparator", "lea     dst_stat, dev_info_hash; hasher", "mov     esi, 0; tuning", "mov     edi, 10h; candidate", "call    hash_initialize", "mov     [rsp+158h+dst_res], rax", "mov     cs:ht_5307, rax", "test    rax, rax", "jnz     loc_FBFB"], ["mov~options,<TAG>", "lea~src_stat,<TAG>", "lea~dst_stat,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~[rsp+0],rax", "mov~<TAG>,rax", "test~rax,rax", "jnz~FOO"]], [0, 0, 60, 0, 0, 4, 1, 1, 4, 9, 0.06309362279511534, ["mov     rax, cs:ht_5307", "mov     [rsp+158h+dst_res], rax", "test    rax, rax", "jz      loc_FCC2"], ["mov~rax,<TAG>", "mov~[rsp+0],rax", "test~rax,rax", "jz~FOO"]], [0, 0, 51, 0, 0, 2, 0, 1, 7, 7, 0.013229308005427409, ["mov     rdi, cs:ht_5307", "jmp     loc_1002C"], ["mov~rdi,<TAG>", "jmp~FOO"]], [1, 0, 57, 0, 1, 5, 1, 2, 6, 8, 0.005427408412483039, ["mov     edi, 10h; size", "call    _malloc", "mov     cs:new_dst_res_5308, rax", "test    rax, rax", "jz      loc_101B0"], ["mov~edi,0", "call~FOO", "mov~<TAG>,rax", "test~rax,rax", "jz~FOO"]], [3, 0, 19, 3, 0, 10, 2, 1, 18, 6, 0.09950248756218906, ["mov     ecx, dword ptr [rsp+158h+dst_status.st_mtim.tv_sec]", "and     ecx, 1", "imul    ecx, 3B9ACA00h", "add     ecx, dword ptr [rsp+158h+dst_status.st_mtim.tv_nsec]", "mov     esi, 0Ah", "mov     eax, ecx", "cdq", "idiv    esi", "test    edx, edx", "jnz     loc_10079"], ["mov~ecx,[word ptr [rsp+0]", "and~ecx,0", "imul~ecx,,0", "add~ecx,[word ptr [rsp+0]", "mov~esi,0", "mov~eax,ecx", "cdq~,", "idiv~,esi", "test~edx,edx", "jnz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 17, 3, 0.11533242876526459, ["cmp     [rsp+158h+var_150], 0", "jnz     loc_10188"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 55, 0, 0, 3, 0, 1, 7, 8, 0.0010176390773405698, ["mov     dword ptr [rax+8], 77359400h", "mov     byte ptr [rax+0Ch], 0", "jmp     loc_FC09"], ["mov~[word ptr [rax+0],0", "mov~[yte ptr [rax+0],0", "jmp~FOO"]], [1, 0, 10, 0, 0, 5, 0, 1, 8, 5, 0.06834011759384893, ["mov     rax, [rsp+158h+dst_res]", "mov     [rax+8], ebx", "mov     byte ptr [rax+0Ch], 1", "mov     r11d, ebx", "jmp     loc_FC4F"], ["mov~rax,[rsp+0]", "mov~[rax+0],ebx", "mov~[yte ptr [rax+0],0", "mov~r11d,ebx", "jmp~FOO"]], [7, 0, 46, 12, 0, 37, 2, 1, 7, 6, 0.1659430122116689, ["mov     r10, [dst_stat+50h]", "mov     [rsp+158h+var_138], r10", "mov     rsi, [dst_stat+70h]", "mov     ecx, 66666667h", "mov     eax, r10d", "imul    ecx", "sar     edx, 2", "mov     eax, r10d", "sar     eax, 1Fh", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "mov     edi, r10d", "sub     edi, eax", "mov     eax, esi", "imul    ecx", "sar     edx, 2", "mov     eax, esi", "sar     eax, 1Fh", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "mov     edx, esi", "sub     edx, eax", "or      edi, edx", "mov     eax, r15d", "imul    ecx", "sar     edx, 2", "mov     eax, r15d", "sar     eax, 1Fh", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "mov     ecx, r15d", "sub     ecx, eax", "or      edi, ecx", "jnz     loc_10079"], ["mov~r10,[dst_stat+0]", "mov~[rsp+0],r10", "mov~rsi,[dst_stat+0]", "mov~ecx,0", "mov~eax,r10d", "imul~,ecx", "sar~edx,0", "mov~eax,r10d", "sar~eax,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "mov~edi,r10d", "sub~edi,eax", "mov~eax,esi", "imul~,ecx", "sar~edx,0", "mov~eax,esi", "sar~eax,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "mov~edx,esi", "sub~edx,eax", "or~edi,edx", "mov~eax,r15d", "imul~,ecx", "sar~edx,0", "mov~eax,r15d", "sar~eax,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "mov~ecx,r15d", "sub~ecx,eax", "or~edi,ecx", "jnz~FOO"]], [0, 0, 16, 2, 0, 8, 1, 1, 21, 6, 0.0439846223428313, ["mov     eax, ecx", "cdq", "idiv    esi", "mov     ecx, eax", "cdq", "idiv    esi", "test    edx, edx", "jnz     loc_10079"], ["mov~eax,ecx", "cdq~,", "idiv~,esi", "mov~ecx,eax", "cdq~,", "idiv~,esi", "test~edx,edx", "jnz~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 20, 6, 0.0024875621890547263, ["mov     ebx, ebp", "jmp     loc_10079"], ["mov~ebx,ebp", "jmp~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 23, 6, 0.0024875621890547263, ["mov     ebx, 77359400h", "jmp     loc_10079"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 11, 0, 0, 1, 0, 0, 13, 6, 0.012663952962460425, ["mov     ebx, ebp"], ["mov~ebx,ebp"]], [0, 0, 5, 0, 0, 3, 0, 1, 3, 3, 0.024875621890547265, ["mov     eax, [rsp+158h+src_ns]", "cmp     eax, r15d", "jg      loc_101A6"], ["mov~eax,[rsp+0]", "cmp~eax,r15d", "jg~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 18, 2, 0.0020352781546811396, ["mov     ebx, 0FFFFFFFEh", "jmp     loc_FC97"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 19, 7, 0.06648575305291723, ["cmp     ebp, 0Ah", "jz      short loc_10163"], ["cmp~ebp,0", "jz~FOO"]], [1, 0, 16, 0, 0, 1, 0, 0, 20, 7, 0.04862053369516056, ["mov     ebx, 0Ah"], ["mov~ebx,0"]], [3, 0, 47, 0, 0, 5, 0, 0, 6, 7, 0.09685662596110357, ["mov     [rsp+158h+tmp_dst_res.resolution], 77359400h", "mov     [rsp+158h+tmp_dst_res.exact], 0", "mov     r11d, 77359400h", "lea     rax, [rsp+158h+tmp_dst_res]", "mov     [rsp+158h+dst_res], dst_res_0"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r11d,0", "lea~rax,[rsp+0]", "mov~[rsp+0],dst_res_0"]], [0, 0, 51, 0, 0, 3, 1, 1, 7, 7, 0.016056083220262325, ["mov     rdi, cs:ht_5307; table", "test    rdi, rdi", "jz      loc_FCFB"], ["mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [0, 0, 48, 0, 0, 1, 0, 1, 9, 8, 0.0005653550429669833, ["jmp     loc_FCFB"], ["jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 0, 4, 2, 0.00033921302578018993, ["setl    bl", "movzx   ebx, bl"], ["setl~bl", "movzx~ebx,bl"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.009317051108095884, ["mov     ebx, 0FFFFFFFFh", "jmp     loc_FC97"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 48, 0, 0, 2, 0, 1, 8, 6, 0.0, ["mov     cs:new_dst_res_5308, 0", "jmp     loc_FC3C"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 49, 0, 0, 2, 0, 1, 7, 6, 0.02842605156037992, ["cmp     cs:new_dst_res_5308, dst_res_0", "jz      loc_1000C"], ["cmp~<TAG>,dst_res_0", "jz~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 22, 7, 0.03075531433740389, ["cmp     ebx, 3B9ACA00h", "jz      short loc_1016A"], ["cmp~ebx,0", "jz~FOO"]], [2, 0, 35, 0, 0, 8, 3, 0, 14, 4, 0.003844414292175486, ["mov     a, [rsp+158h+src_s]", "mov     c_0, [rsp+158h+dst_m_s]", "mov     rax, [rsp+158h+dst_a_s_0]", "or      rax, r13", "or      rax, [rsp+158h+var_110]", "and     eax, 1", "mov     eax, 77359400h", "cmovz   ebp, eax"], ["mov~a,[rsp+0]", "mov~c_0,[rsp+0]", "mov~rax,[rsp+0]", "or~rax,r13", "or~rax,[rsp+0]", "and~eax,0", "mov~eax,0", "cmovz~ebp,eax"]], [1, 0, 41, 0, 0, 2, 0, 1, 13, 5, 0.0065581184984170055, ["cmp     r10d, 3B9ACA00h", "jnz     loc_FE56"], ["cmp~r10d,0", "jnz~FOO"]], [1, 1, 67, 1, 0, 21, 3, 1, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 128h", "mov     [rsp+158h+dfd], edi", "mov     [rsp+158h+dst_name], dst_name_0", "mov     rax, fs:28h", "mov     [rsp+158h+var_40], rax", "xor     eax, eax", "mov     r13, [dst_stat+58h]", "mov     r12, [src_stat+58h]", "mov     r15, [dst_stat+60h]", "mov     r14, [src_stat+60h]", "mov     [rsp+158h+src_ns], r14d", "mov     ebx, r8d", "and     ebx, 1", "test    ebx, ebx", "jz      loc_FC74"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~[rsp+0],edi", "mov~[rsp+0],dst_name_0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~r13,[dst_stat+0]", "mov~r12,[src_stat+0]", "mov~r15,[dst_stat+0]", "mov~r14,[src_stat+0]", "mov~[rsp+0],r14d", "mov~ebx,r8d", "and~ebx,0", "test~ebx,ebx", "jz~FOO"]], [6, 0, 41, 7, 0, 26, 0, 1, 11, 4, 0.04296698326549073, ["lea     r10d, [res+res*4+0]", "add     r10d, r10d", "mov     ebp, r10d", "mov     eax, r12d", "imul    r9d", "sar     edx, 2", "sar     r12d, 1Fh", "mov     edi, edx", "sub     edi, r12d", "mov     r12d, edi", "mov     eax, r13d", "imul    r9d", "sar     edx, 2", "sar     r13d, 1Fh", "sub     edx, r13d", "mov     ecx, edx", "mov     r13d, edx", "mov     eax, r8d", "imul    r9d", "sar     edx, 2", "sar     r8d, 1Fh", "mov     esi, edx", "sub     esi, r8d", "mov     r8d, esi", "cmp     r10d, r11d", "jge     loc_1005C"], ["lea~r10d,[res+0]", "add~r10d,r10d", "mov~ebp,r10d", "mov~eax,r12d", "imul~,r9d", "sar~edx,0", "sar~r12d,0", "mov~edi,edx", "sub~edi,r12d", "mov~r12d,edi", "mov~eax,r13d", "imul~,r9d", "sar~edx,0", "sar~r13d,0", "sub~edx,r13d", "mov~ecx,edx", "mov~r13d,edx", "mov~eax,r8d", "imul~,r9d", "sar~edx,0", "sar~r8d,0", "mov~esi,edx", "sub~esi,r8d", "mov~r8d,esi", "cmp~r10d,r11d", "jge~FOO"]], [2, 0, 41, 0, 0, 8, 0, 0, 10, 5, 0.03346901854364541, ["mov     rax, [dst_stat+68h]", "mov     [rsp+158h+var_110], rax", "mov     ebp, 0Ah", "mov     r9d, 66666667h", "mov     [rsp+158h+src_s], src_s_0", "mov     [rsp+158h+dst_m_s], dst_m_s_0", "mov     r12d, r10d", "mov     r13d, [rsp+158h+var_12C]"], ["mov~rax,[dst_stat+0]", "mov~[rsp+0],rax", "mov~ebp,0", "mov~r9d,0", "mov~[rsp+0],src_s_0", "mov~[rsp+0],dst_m_s_0", "mov~r12d,r10d", "mov~r13d,[rsp+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, 1, 0.02939846223428313, ["mov     eax, ebx", "mov     rdi, [rsp+158h+var_40]", "xor     rdi, fs:28h", "jnz     loc_101C6"], ["mov~eax,ebx", "mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "jnz~FOO"]], [0, 0, 54, 0, 1, 8, 1, 2, 6, 7, 0.03724559023066486, ["mov     rsi, cs:new_dst_res_5308; entry", "mov     rax, [dst_stat+0]", "mov     [rsi], rax", "mov     rdi, [rsp+158h+dst_res]; table", "call    hash_insert", "mov     [rsp+158h+dst_res], rax", "test    dst_res_0, dst_res_0", "jz      low_memory"], ["mov~rsi,<TAG>", "mov~rax,[dst_stat+0]", "mov~<TAG>,rax", "mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],rax", "test~dst_res_0,dst_res_0", "jz~FOO"]], [1, 0, 35, 0, 0, 6, 0, 1, 12, 3, 0.03731343283582089, ["mov     a, [rsp+158h+src_s]", "mov     c_0, [rsp+158h+dst_m_s]", "mov     rax, [rsp+158h+dst_res]", "mov     [rax+8], ebp", "cmp     ebp, 1", "jg      loc_FF2C"], ["mov~a,[rsp+0]", "mov~c_0,[rsp+0]", "mov~rax,[rsp+0]", "mov~[rax+0],ebp", "cmp~ebp,0", "jg~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 2, 0.0009045680687471732, ["mov     ebx, 0", "jmp     loc_FC97"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 61, 0, 0, 3, 0, 1, 3, 2, 0.05167345092718227, ["lea     rax, [dst_s_0-2]", "cmp     rax, src_s_0", "jge     loc_FC97"], ["lea~rax,[dst_s_0-2]+0]", "cmp~rax,src_s_0", "jge~FOO"]], [0, 0, 33, 0, 0, 2, 0, 1, 11, 2, 0.16996834011759385, ["cmp     r13, r12", "jg      loc_FC97"], ["cmp~r13,r12", "jg~FOO"]], [1, 0, 31, 0, 0, 2, 0, 1, 13, 2, 0.0006784260515603799, ["cmp     byte ptr [rsp+158h+var_150], 0", "jnz     loc_FC97"], ["cmp~[yte ptr [rsp+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 16, 2, 0.0010176390773405698, ["mov     ebx, 0FFFFFFFEh", "jmp     loc_FC97"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 14, 2, 0.0006784260515603799, ["mov     ebx, 0FFFFFFFFh", "jmp     loc_FC97"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 16, 2, 0.0010176390773405698, ["mov     ebx, 0FFFFFFFFh", "jmp     loc_FC97"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 2, 0.0005653550429669833, ["mov     ebx, 0FFFFFFFFh", "jmp     loc_FC97"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, 2, 0.00033921302578018993, ["mov     ebx, 0FFFFFFFFh", "jmp     loc_FC97"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 30, 0, 0, 8, 1, 1, 13, 3, 0.1587516960651289, ["cmp     ebp, 77359400h", "setz    cl", "movzx   eax, cl", "not     eax", "cdqe", "and     rax, r12", "cmp     r13, rax", "jl      loc_10174"], ["cmp~ebp,0", "setz~cl", "movzx~eax,cl", "not~eax", "cdqe~", "and~rax,r12", "cmp~r13,rax", "jl~FOO"]], [0, 0, 34, 0, 0, 2, 0, 0, 10, 3, 0.14283129805517866, ["mov     rax, [rsp+158h+dst_res]", "mov     [rax+8], ebp"], ["mov~rax,[rsp+0]", "mov~[rax+0],ebp"]], [1, 0, 35, 0, 0, 2, 0, 1, 9, 4, 0.11569425599276346, ["mov     ebp, 0Ah", "jmp     loc_FF24"], ["mov~ebp,0", "jmp~FOO"]], [8, 0, 45, 6, 0, 25, 0, 1, 8, 5, 0.1548168249660787, ["mov     rax, [dst_stat+48h]", "mov     [rsp+158h+dst_a_s_0], rax", "mov     r8d, 66666667h", "mov     eax, r10d", "imul    r8d", "sar     edx, 2", "mov     eax, r10d", "sar     eax, 1Fh", "sub     edx, eax", "mov     r9d, edx", "mov     eax, esi", "imul    r8d", "sar     edx, 2", "sar     esi, 1Fh", "mov     edi, edx", "sub     edi, esi", "mov     eax, r15d", "imul    r8d", "mov     r8d, edx", "sar     r8d, 2", "mov     eax, r15d", "sar     eax, 1Fh", "sub     r8d, eax", "cmp     r11d, 0Ah", "jle     loc_101BC"], ["mov~rax,[dst_stat+0]", "mov~[rsp+0],rax", "mov~r8d,0", "mov~eax,r10d", "imul~,r8d", "sar~edx,0", "mov~eax,r10d", "sar~eax,0", "sub~edx,eax", "mov~r9d,edx", "mov~eax,esi", "imul~,r8d", "sar~edx,0", "sar~esi,0", "mov~edi,edx", "sub~edi,esi", "mov~eax,r15d", "imul~,r8d", "mov~r8d,edx", "sar~r8d,0", "mov~eax,r15d", "sar~eax,0", "sub~r8d,eax", "cmp~r11d,0", "jle~FOO"]], [0, 0, 27, 2, 0, 7, 0, 1, 15, 3, 0.008480325644504749, ["mov     eax, [rsp+158h+src_ns]", "cdq", "idiv    ebp", "mov     eax, r14d", "sub     eax, edx", "cmp     eax, r15d", "jg      loc_1017E"], ["mov~eax,[rsp+0]", "cdq~,", "idiv~,ebp", "mov~eax,r14d", "sub~eax,edx", "cmp~eax,r15d", "jg~FOO"]], [0, 0, 28, 0, 0, 2, 0, 1, 14, 4, 0.14902758932609678, ["cmp     r13, rax", "jnz     short loc_FF7B"], ["cmp~r13,rax", "jnz~FOO"]], [0, 0, 32, 0, 0, 2, 0, 1, 12, 3, 0.16101311623699682, ["cmp     r15d, r14d", "jl      short loc_FF45"], ["cmp~r15d,r14d", "jl~FOO"]], [0, 0, 66, 0, 0, 6, 0, 1, 1, 4, 0.012890094979647219, ["mov     rbp, dst_stat", "cmp     dst_s_0, src_s_0", "setz    byte ptr [rsp+158h+var_150]", "movzx   eax, byte ptr [rsp+158h+var_150]", "cmp     r15d, r14d", "jnz     short loc_FBCB"], ["mov~rbp,dst_stat", "cmp~dst_s_0,src_s_0", "setz~[yte ptr [rsp+0]", "movzx~eax,[yte ptr [rsp+0]", "cmp~r15d,r14d", "jnz~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 128h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     dst_ns", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~dst_ns", "retn"]], [0, 0, 63, 0, 0, 3, 0, 1, 2, 3, 0.03980099502487562, ["lea     rax, [src_s_0-2]", "cmp     rax, dst_s_0", "jge     loc_10192"], ["lea~rax,[src_s_0-2]+0]", "cmp~rax,dst_s_0", "jge~FOO"]], [0, 0, 65, 0, 0, 2, 1, 1, 2, 3, 0.0006784260515603799, ["test    al, al", "jz      short loc_FBCB"], ["test~al,al", "jz~FOO"]], [0, 0, 50, 0, 1, 7, 1, 2, 8, 6, 0.027476255088195387, ["mov     rax, [dst_stat+0]", "mov     [rsp+158h+tmp_dst_res.dev], rax", "lea     rsi, [rsp+158h+tmp_dst_res]; entry", "call    hash_lookup", "mov     [rsp+158h+dst_res], rax", "test    dst_res_0, dst_res_0", "jnz     loc_FC3C"], ["mov~rax,[dst_stat+0]", "mov~[rsp+0],rax", "lea~rsi,[rsp+0]", "call~FOO", "mov~[rsp+0],rax", "test~dst_res_0,dst_res_0", "jnz~FOO"]], [1, 0, 47, 0, 0, 4, 0, 1, 8, 5, 0.07908186341022162, ["mov     rax, [rsp+158h+dst_res]", "mov     r11d, [rax+8]", "cmp     byte ptr [rax+0Ch], 0", "jz      loc_FD18"], ["mov~rax,[rsp+0]", "mov~r11d,[rax+0]", "cmp~[yte ptr [rax+0],0", "jz~FOO"]], [1, 0, 35, 0, 0, 2, 0, 1, 10, 4, 0.006105834464043419, ["mov     ebp, 0Ah", "jmp     loc_FF24"], ["mov~ebp,0", "jmp~FOO"]], [7, 0, 43, 12, 0, 35, 2, 1, 9, 5, 0.03980099502487562, ["mov     ecx, 66666667h", "mov     esi, r9d", "mov     r10d, r9d", "mov     eax, r9d", "imul    ecx", "sar     edx, 2", "mov     eax, r9d", "sar     eax, 1Fh", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     esi, eax", "mov     [rsp+158h+var_12C], edi", "mov     eax, edi", "imul    ecx", "sar     edx, 2", "mov     eax, edi", "sar     eax, 1Fh", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     edi, eax", "or      esi, edi", "mov     eax, r8d", "imul    ecx", "sar     edx, 2", "mov     eax, r8d", "sar     eax, 1Fh", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "mov     edi, r8d", "sub     edi, eax", "or      esi, edi", "jnz     loc_10052"], ["mov~ecx,0", "mov~esi,r9d", "mov~r10d,r9d", "mov~eax,r9d", "imul~,ecx", "sar~edx,0", "mov~eax,r9d", "sar~eax,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~esi,eax", "mov~[rsp+0],edi", "mov~eax,edi", "imul~,ecx", "sar~edx,0", "mov~eax,edi", "sar~eax,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~edi,eax", "or~esi,edi", "mov~eax,r8d", "imul~,ecx", "sar~edx,0", "mov~eax,r8d", "sar~eax,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "mov~edi,r8d", "sub~edi,eax", "or~esi,edi", "jnz~FOO"]], [3, 1, 25, 3, 1, 25, 2, 2, 15, 3, 0.13557213930348258, ["mov     rax, [rsp+158h+dst_a_s_0]", "mov     [rsp+158h+timespec.tv_sec], rax", "movsxd  rax, dword ptr [rsp+158h+var_138]", "mov     [rsp+158h+timespec.tv_nsec], rax", "movzx   eax, cl", "or      rax, r13", "mov     [rsp+158h+timespec.tv_sec+10h], rax", "mov     edx, 38E38E39h", "mov     eax, ebp", "imul    edx", "mov     eax, edx", "sar     eax, 1", "mov     edx, ebp", "sar     edx, 1Fh", "sub     eax, edx", "add     eax, r15d", "cdqe", "mov     [rsp+158h+timespec.tv_nsec+10h], rax", "lea     rdx, [rsp+158h+timespec]; times", "mov     ecx, 100h; flags", "mov     rsi, [rsp+158h+dst_name]; path", "mov     edi, [rsp+158h+dfd]; fd", "call    _utimensat", "test    eax, eax", "jz      loc_1008D"], ["mov~rax,[rsp+0]", "mov~[rsp+0],rax", "movsxd~rax,[word ptr [rsp+0]", "mov~[rsp+0],rax", "movzx~eax,cl", "or~rax,r13", "mov~[rsp+0],rax", "mov~edx,0", "mov~eax,ebp", "imul~,edx", "mov~eax,edx", "sar~eax,0", "mov~edx,ebp", "sar~edx,0", "sub~eax,edx", "add~eax,r15d", "cdqe~", "mov~[rsp+0],rax", "lea~rdx,[rsp+0]", "mov~ecx,<STR>", "mov~rsi,[rsp+0]", "mov~edi,[rsp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 1, 23, 0, 1, 17, 4, 2, 16, 4, 0.12302125734961555, ["lea     rcx, [rsp+158h+dst_status]; stat_buf", "mov     r8d, 100h; flag", "mov     rdx, [rsp+158h+dst_name]; filename", "mov     esi, [rsp+158h+dfd]; fildes", "mov     edi, 1; ver", "call    ___fxstatat", "mov     esi, eax", "mov     [rsp+158h+var_150], eax", "movsxd  rdx, r15d", "mov     rax, r13", "xor     rax, [rsp+158h+dst_status.st_mtim.tv_sec]", "mov     rcx, rdx", "xor     rcx, [rsp+158h+dst_status.st_mtim.tv_nsec]", "or      rax, rcx", "movsxd  rcx, esi", "or      rax, rcx", "jnz     short loc_1013C"], ["lea~rcx,[rsp+0]", "mov~r8d,<STR>", "mov~rdx,[rsp+0]", "mov~esi,[rsp+0]", "mov~edi,0", "call~FOO", "mov~esi,eax", "mov~[rsp+0],eax", "movsxd~rdx,r15d", "mov~rax,r13", "xor~rax,[rsp+0]", "mov~rcx,rdx", "xor~rcx,[rsp+0]", "or~rax,rcx", "movsxd~rcx,esi", "or~rax,rcx", "jnz~FOO"]], [0, 1, 22, 0, 1, 8, 0, 2, 17, 4, 0.0, ["mov     [rsp+158h+timespec.tv_sec+10h], r13", "mov     [rsp+158h+timespec.tv_nsec+10h], rdx", "lea     rdx, [rsp+158h+timespec]; times", "mov     ecx, 100h; flags", "mov     rsi, [rsp+158h+dst_name]; path", "mov     edi, [rsp+158h+dfd]; fd", "call    _utimensat", "jmp     loc_100D8"], ["mov~[rsp+0],r13", "mov~[rsp+0],rdx", "lea~rdx,[rsp+0]", "mov~ecx,<STR>", "mov~rsi,[rsp+0]", "mov~edi,[rsp+0]", "call~FOO", "jmp~FOO"]], [6, 0, 41, 12, 0, 30, 2, 1, 12, 4, 0.011307100859339666, ["mov     eax, edi", "imul    r9d", "sar     edx, 2", "mov     eax, edi", "sar     eax, 1Fh", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     edi, eax", "mov     eax, ecx", "imul    r9d", "sar     edx, 2", "mov     eax, ecx", "sar     eax, 1Fh", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     ecx, eax", "or      edi, ecx", "mov     eax, esi", "imul    r9d", "sar     edx, 2", "mov     eax, esi", "sar     eax, 1Fh", "sub     edx, eax", "lea     eax, [rdx+rdx*4]", "add     eax, eax", "sub     esi, eax", "or      edi, esi", "jnz     loc_1005C"], ["mov~eax,edi", "imul~,r9d", "sar~edx,0", "mov~eax,edi", "sar~eax,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~edi,eax", "mov~eax,ecx", "imul~,r9d", "sar~edx,0", "mov~eax,ecx", "sar~eax,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~ecx,eax", "or~edi,ecx", "mov~eax,esi", "imul~,r9d", "sar~edx,0", "mov~eax,esi", "sar~eax,0", "sub~edx,eax", "lea~eax,<TAG>", "add~eax,eax", "sub~esi,eax", "or~edi,esi", "jnz~FOO"]], [1, 0, 9, 2, 0, 12, 1, 0, 9, 4, 0.08579828132066937, ["cmp     r11d, 77359400h", "setz    al", "movzx   eax, al", "not     eax", "cdqe", "and     r12, rax", "mov     eax, [rsp+158h+src_ns]", "cdq", "idiv    r11d", "mov     eax, r14d", "sub     eax, edx", "mov     [rsp+158h+src_ns], eax"], ["cmp~r11d,0", "setz~al", "movzx~eax,al", "not~eax", "cdqe~", "and~r12,rax", "mov~eax,[rsp+0]", "cdq~,", "idiv~,r11d", "mov~eax,r14d", "sub~eax,edx", "mov~[rsp+0],eax"]]], "func_feature": [8, 31, 66, 5, 68, 105, 1, 438, 0.04411, 6, 64], "succs": [[12], [0, 14], [18, 36], [2, 26], [8, 37], [4, 22], [4, 5], [59], [11, 7], [20, 12], [9, 19], [37], [67], [51, 12], [12, 29], [12], [12], [12], [25, 47], [36], [21, 15], [14], [13], [59, 22], [22], [36], [36], [60], [27, 60], [16, 1], [49], [33, 30], [3, 55], [66, 38], [33], [], [56, 35], [28, 23], [17, 41], [36], [36, 6], [36, 54], [48, 36], [36], [36], [36], [36], [36], [44, 53], [41], [49], [50, 62], [45, 63], [52, 63], [48, 42], [57, 58], [], [40, 46], [57, 39], [24, 60], [67, 13], [49], [34, 61], [64, 43], [65, 10], [10], [38, 31], [3]], "fname": "utimecmpat", "n_num": 68}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[3, 0, 0, 2, 1, 9, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     r8d, ecx; options", "mov     options, src_stat; src_stat", "mov     src_stat, dst_stat; dst_stat", "mov     dst_stat, dst_name; dst_name", "mov     edi, 0FFFFFF9Ch; dfd", "call    utimecmpat", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~r8d,ecx", "mov~options,src_stat", "mov~src_stat,dst_stat", "mov~dst_stat,dst_name", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 9, 0.0, 0, 2], "succs": [[]], "fname": "utimecmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 0, 1, 0, 5, 0, 0, 0, 0, 0.0, ["cmp     eax, 1", "setz    al", "movzx   eax, al", "add     eax, r9d", "retn"], ["cmp~eax,0", "setz~al", "movzx~eax,al", "add~eax,r9d", "retn"]], [3, 0, 2, 0, 0, 4, 0, 1, 4, 1, 0.07777777777777778, ["mov     qword ptr [timespec+10h], 0", "mov     r9d, 1", "cmp     r8, 3FFFFFFEh", "jnz     short loc_10235"], ["mov~[word ptr [timespec+0],0", "mov~r9d,0", "cmp~r8,0", "jnz~FOO"]], [1, 0, 1, 1, 0, 2, 0, 1, 5, 0, 0.0, ["add     eax, 1", "jmp     short loc_10235"], ["add~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 0, 3, 2, 0.2, ["cmp     rcx, 1", "jbe     short loc_10277"], ["cmp~rcx,0", "jbe~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 1, 5, 0.011111111111111112, ["cmp     rsi, 3B9AC9FFh", "ja      short loc_10242"], ["cmp~rsi,0", "ja~FOO"]], [1, 0, 10, 0, 0, 4, 0, 0, 0, 5, 0.0, ["mov     rsi, [timespec+8]", "lea     rdx, [rsi-3FFFFFFEh]", "cmp     rdx, 1", "jbe     short loc_10204"], ["mov~rsi,[timespec+0]", "lea~rdx,[rsi-3FFFFFFEh]+0]", "cmp~rdx,0", "jbe~FOO"]], [3, 0, 5, 0, 0, 4, 0, 0, 2, 3, 0.22222222222222224, ["mov     eax, 0", "mov     r9d, 0", "cmp     rdx, 1", "jbe     short loc_1025B"], ["mov~eax,0", "mov~r9d,0", "cmp~rdx,0", "jbe~FOO"]], [1, 0, 8, 0, 0, 4, 0, 0, 1, 4, 0.15555555555555556, ["mov     r8, [timespec+18h]", "lea     rcx, [r8-3FFFFFFEh]", "cmp     rcx, 1", "jbe     short loc_1021E"], ["mov~r8,[timespec+0]", "lea~rcx,[r8-3FFFFFFEh]+0]", "cmp~rcx,0", "jbe~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 2, 4, 0.011111111111111112, ["cmp     r8, 3B9AC9FFh", "ja      short loc_10242"], ["cmp~r8,0", "ja~FOO"]], [3, 0, 4, 0, 0, 6, 0, 1, 3, 3, 0.0, ["mov     qword ptr [timespec], 0", "cmp     rsi, 3FFFFFFEh", "setz    al", "movzx   eax, al", "mov     r9d, 1", "jmp     short loc_1022F"], ["mov~<TAG>,0", "cmp~rsi,0", "setz~al", "movzx~eax,al", "mov~r9d,0", "jmp~FOO"]], [4, 0, 0, 2, 1, 6, 0, 1, 2, -1, 0.0, ["sub     rsp, 8", "call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     eax, 0FFFFFFFFh", "add     rsp, 8", "retn"], ["sub~rsp,0", "call~FOO", "mov~<TAG>,0", "mov~eax,0", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 6, 0, 11, 16, 2, 41, 0.06162, 0, 4], "succs": [[], [0, 2], [0], [0, 1], [10, 7], [4, 7], [9, 3], [8, 6], [10, 6], [3], []], "fname": "validate_timespec", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 0, 6, 0, 0, 3, 0, 1, 0, 0, 0.01818181818181818, ["mov     eax, 1", "cmp     qword ptr [timespec+18h], 3FFFFFFEh", "jz      short loc_102CE"], ["mov~eax,0", "cmp~[word ptr [timespec+0],0", "jz~FOO"]], [2, 0, 11, 1, 0, 8, 0, 1, 0, 4, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbp, statbuf", "mov     rbx, [ts]", "mov     rax, [timespec+8]", "cmp     rax, 3FFFFFFEh", "jz      short loc_102D5"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,statbuf", "mov~rbx,<TAG>", "mov~rax,[timespec+0]", "cmp~rax,0", "jz~FOO"]], [1, 0, 1, 0, 0, 6, 0, 1, 3, -1, 0.016666666666666666, ["mov     rdx, [statbuf+58h]", "mov     rax, [statbuf+60h]", "mov     [timespec+10h], rdx", "mov     [timespec+18h], rax", "mov     eax, 0", "jmp     short loc_102CE"], ["mov~rdx,[statbuf+0]", "mov~rax,[statbuf+0]", "mov~[timespec+0],rdx", "mov~[timespec+0],rax", "mov~eax,0", "jmp~FOO"]], [1, 0, 4, 0, 0, 3, 0, 1, 2, 2, 0.18787878787878784, ["mov     rdx, [timespec+18h]", "cmp     rdx, 3FFFFFFEh", "jz      short loc_10317"], ["mov~rdx,[timespec+0]", "cmp~rdx,0", "jz~FOO"]], [0, 0, 5, 0, 1, 3, 0, 2, 3, 3, 0.03636363636363636, ["mov     statbuf, timespec; ts", "call    gettime", "jmp     short loc_102B3"], ["mov~statbuf,timespec", "call~FOO", "jmp~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 2, 4, 0.03939393939393939, ["cmp     qword ptr [timespec+18h], 3FFFFFFFh", "jz      short loc_10309"], ["cmp~[word ptr [timespec+0],0", "jz~FOO"]], [2, 0, 2, 0, 0, 3, 0, 1, 3, 1, 0.08030303030303029, ["mov     eax, 0", "cmp     rdx, 3FFFFFFFh", "jz      short loc_1032E"], ["mov~eax,0", "cmp~rdx,0", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 1, 3, 0.06363636363636363, ["cmp     rax, 3FFFFFFFh", "jz      short loc_102F5"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 5, 0, 0, 5, 0, 1, 2, 3, 0.03636363636363636, ["mov     rdx, [statbuf+48h]", "mov     rax, [statbuf+50h]", "mov     [timespec], rdx", "mov     [timespec+8], rax", "jmp     short loc_102B3"], ["mov~rdx,[statbuf+0]", "mov~rax,[statbuf+0]", "mov~<TAG>,rdx", "mov~[timespec+0],rax", "jmp~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "pop     timespec", "pop     statbuf", "retn"], ["add~rsp,0", "pop~timespec", "pop~statbuf", "retn"]], [2, 0, 1, 0, 0, 3, 0, 1, 3, -1, 0.01212121212121212, ["mov     qword ptr [ts], 0", "mov     eax, 0", "jmp     short loc_102CE"], ["mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 1, 4, 0, 2, 4, 0, 0.0, ["lea     rdi, [timespec+10h]; ts", "call    gettime", "mov     eax, 0", "jmp     short loc_102CE"], ["lea~rdi,[timespec+0]", "call~FOO", "mov~eax,0", "jmp~FOO"]]], "func_feature": [2, 0, 13, 0, 12, 17, 2, 46, 0.04091, 0, 2], "succs": [[8, 9], [0, 7], [9], [2, 6], [3], [10, 4], [9, 11], [3, 5], [3], [], [9], [9]], "fname": "update_timespec", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 1, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     ecx, 100h; flags", "call    _utimensat", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~ecx,<STR>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 5, 0.0, 0, 2], "succs": [[]], "fname": "lutimensat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, 0, 0.027766599597585512, ["mov     eax, r13d", "mov     rcx, [rsp+148h+var_40]", "xor     rcx, fs:28h", "jnz     loc_107F9"], ["mov~eax,r13d", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 25, 0, 0, 2, 0, 1, 7, 0, 0.026559356136820925, ["mov     r12d, 0", "jmp     loc_104C3"], ["mov~r12d,0", "jmp~FOO"]], [1, 0, 30, 0, 0, 2, 0, 1, 6, 0, 0.04164989939637827, ["cmp     [rsp+148h+ts], 0", "jz      loc_10725"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 13, 0, 0.042052313883299795, ["cmp     mdiff, 1", "jnz     short loc_107F1"], ["cmp~mdiff,0", "jnz~FOO"]], [1, 0, 15, 2, 0, 14, 0, 1, 12, 0, 0.11348088531187123, ["mov     rdx, [rsp+148h+st.st_atim.tv_sec]", "sub     rdx, [t]", "mov     rax, [rsp+148h+st.st_mtim.tv_sec]", "sub     rax, [t+10h]", "mov     rsi, [t]", "mov     rdi, [t+8]", "mov     [rsp+148h+truncated_timeval.tv_sec], rsi", "mov     [rsp+148h+truncated_timeval.tv_usec], rdi", "mov     rsi, [t+10h]", "mov     rdi, [t+18h]", "mov     [rsp+148h+truncated_timeval.tv_sec+10h], rsi", "mov     [rsp+148h+truncated_timeval.tv_usec+10h], rdi", "cmp     adiff, 1", "jnz     loc_107C1"], ["mov~rdx,[rsp+0]", "sub~rdx,<TAG>", "mov~rax,[rsp+0]", "sub~rax,[t+0]", "mov~rsi,<TAG>", "mov~rdi,[t+0]", "mov~[rsp+0],rsi", "mov~[rsp+0],rdi", "mov~rsi,[t+0]", "mov~rdi,[t+0]", "mov~[rsp+0],rsi", "mov~[rsp+0],rdi", "cmp~adiff,0", "jnz~FOO"]], [0, 0, 14, 0, 0, 2, 1, 1, 13, 0, 0.0579476861167002, ["test    bpl, bpl", "jz      loc_107C1"], ["test~bpl,bpl", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 14, 0, 0.04929577464788732, ["cmp     [rsp+148h+st.st_atim.tv_nsec], 0", "jnz     loc_107C1"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 37, 0, 0, 4, 1, 1, 4, 0, 0.19959758551307846, ["mov     cs:utimensat_works_really, 0FFFFFFFFh", "mov     cs:lutimensat_works_really, 0FFFFFFFFh", "test    r12d, r12d", "jz      short loc_1045E"], ["mov~<TAG>,0", "mov~<TAG>,0", "test~r12d,r12d", "jz~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 3, 0, 0.0613682092555332, ["cmp     cs:utimensat_works_really, 0", "js      short loc_103F0"], ["cmp~<TAG>,0", "js~FOO"]], [0, 0, 38, 0, 0, 1, 0, 1, 10, 0, 0.09154929577464789, ["jmp     loc_103F0"], ["jmp~FOO"]], [0, 0, 44, 0, 0, 2, 1, 0, 6, 0, 0.0738430583501006, ["test    ebx, ebx", "jns     loc_10623"], ["test~ebx,ebx", "jns~FOO"]], [0, 0, 53, 0, 0, 5, 0, 1, 9, 0, 0.026861167002012073, ["mov     rdx, [rsp+148h+st.st_atim.tv_nsec]", "mov     rcx, [rsp+148h+st.st_atim.tv_sec]", "mov     [rax], rcx", "mov     [rax+8], rdx", "jmp     short loc_10615"], ["mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "mov~<TAG>,rcx", "mov~[rax+0],rdx", "jmp~FOO"]], [1, 0, 56, 0, 0, 3, 0, 1, 8, 0, 0.049698189134808855, ["mov     rax, [rsp+148h+ts]", "cmp     qword ptr [rax+8], 3FFFFFFEh", "jz      short loc_10671"], ["mov~rax,[rsp+0]", "cmp~[word ptr [rax+0],0", "jz~FOO"]], [0, 0, 58, 0, 0, 2, 1, 1, 7, 0, 0.04527162977867203, ["test    al, al", "jnz     loc_10795"], ["test~al,al", "jnz~FOO"]], [1, 0, 59, 0, 1, 7, 1, 2, 6, 0, 0.011770623742454729, ["lea     rdx, [rsp+148h+st]; stat_buf", "mov     rsi, file; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "setnz   al", "jmp     short loc_105F4"], ["lea~rdx,[rsp+0]", "mov~rsi,file", "mov~edi,0", "call~FOO", "test~eax,eax", "setnz~al", "jmp~FOO"]], [1, 0, 59, 0, 1, 6, 1, 1, 6, 0, 0.011770623742454729, ["lea     rdx, [rsp+148h+st]; stat_buf", "mov     esi, ebx; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "setnz   al"], ["lea~rdx,[rsp+0]", "mov~esi,ebx", "mov~edi,0", "call~FOO", "test~eax,eax", "setnz~al"]], [2, 0, 18, 0, 0, 6, 1, 1, 10, 0, 0.13279678068410464, ["cmp     qword ptr [t+8], 7A11Fh", "setnle  bpl", "cmp     qword ptr [t+18h], 7A11Fh", "setnle  r14b", "test    bpl, bpl", "jnz     short loc_10516"], ["cmp~[word ptr [t+0],0", "setnle~bpl", "cmp~[word ptr [t+0],0", "setnle~r14b", "test~bpl,bpl", "jnz~FOO"]], [0, 0, 19, 0, 0, 2, 1, 1, 9, 0, 0.1387323943661972, ["test    t, t", "jz      loc_1074E"], ["test~t,t", "jz~FOO"]], [1, 0, 36, 0, 0, 2, 0, 1, 5, 0, 0.05010060362173038, ["cmp     r12d, 3", "jz      short loc_10435"], ["cmp~r12d,0", "jz~FOO"]], [0, 0, 17, 0, 0, 2, 1, 1, 11, 0, 0.0003018108651911469, ["test    r14b, r14b", "jz      loc_1074E"], ["test~r14b,r14b", "jz~FOO"]], [0, 0, 35, 0, 0, 2, 1, 1, 6, 0, 0.024949698189134808, ["test    ebx, ebx", "js      loc_10709"], ["test~ebx,ebx", "js~FOO"]], [1, 0, 54, 0, 0, 2, 0, 1, 9, 0, 0.029275653923541246, ["cmp     qword ptr [rax+18h], 3FFFFFFEh", "jz      short loc_1068A"], ["cmp~[word ptr [rax+0],0", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 8, 0, 0.002816901408450704, ["mov     r13d, 0FFFFFFFFh", "jmp     short loc_1074E"], ["mov~r13d,0", "jmp~FOO"]], [1, 0, 4, 0, 0, 3, 1, 1, 9, 0, 0.008953722334004023, ["mov     r13d, 0FFFFFFFFh", "test    file, file", "jz      short loc_1074E"], ["mov~r13d,0", "test~file,file", "jz~FOO"]], [1, 0, 22, 0, 1, 7, 1, 2, 8, 0, 0.16056338028169015, ["mov     rdx, t; tvp", "mov     esi, 0; file", "mov     edi, ebx; fd", "call    _futimesat", "mov     r13d, eax", "test    eax, eax", "jnz     loc_1077A"], ["mov~rdx,t", "mov~esi,0", "mov~edi,ebx", "call~FOO", "mov~r13d,eax", "test~eax,eax", "jnz~FOO"]], [1, 0, 52, 0, 0, 3, 1, 1, 10, 0, 0.08269617706237424, ["mov     r12d, 3", "test    ebx, ebx", "js      loc_106A7"], ["mov~r12d,0", "test~ebx,ebx", "js~FOO"]], [0, 0, 53, 0, 0, 5, 0, 1, 10, 0, 0.0, ["mov     rdx, [rsp+148h+st.st_mtim.tv_nsec]", "mov     rcx, [rsp+148h+st.st_mtim.tv_sec]", "mov     [rax+10h], rcx", "mov     [rax+18h], rdx", "jmp     loc_10615"], ["mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "mov~[rax+0],rcx", "mov~[rax+0],rdx", "jmp~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 16, 0, 0.020724346076458754, ["test    r14b, r14b", "jz      loc_107E0"], ["test~r14b,r14b", "jz~FOO"]], [2, 0, 9, 0, 0, 3, 0, 1, 15, 0, 0.04024144869215292, ["mov     [rsp+148h+truncated_timeval.tv_usec], 0", "cmp     mdiff, 1", "jnz     loc_107E0"], ["mov~[rsp+0],0", "cmp~mdiff,0", "jnz~FOO"]], [1, 0, 33, 0, 1, 7, 1, 2, 7, 0, 0.009557344064386318, ["lea     rdx, [rsp+148h+st]; stat_buf", "mov     rsi, file; filename", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "setnz   al", "jmp     loc_1042D"], ["lea~rdx,[rsp+0]", "mov~rsi,file", "mov~edi,0", "call~FOO", "test~eax,eax", "setnz~al", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 9, 0, 0.002414486921529175, ["mov     r13d, 0FFFFFFFFh", "jmp     short loc_1074E"], ["mov~r13d,0", "jmp~FOO"]], [0, 0, 32, 0, 0, 2, 1, 1, 8, 0, 0.025553319919517103, ["test    al, al", "jnz     loc_1079D"], ["test~al,al", "jnz~FOO"]], [1, 0, 51, 0, 0, 1, 0, 0, 11, 0, 0.01267605633802817, ["mov     r12d, 3"], ["mov~r12d,0"]], [1, 0, 33, 0, 1, 6, 1, 1, 7, 0, 0.009557344064386318, ["lea     rdx, [rsp+148h+st]; stat_buf", "mov     esi, ebx; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "setnz   al"], ["lea~rdx,[rsp+0]", "mov~esi,ebx", "mov~edi,0", "call~FOO", "test~eax,eax", "setnz~al"]], [1, 0, 3, 0, 0, 2, 0, 1, 9, 0, 0.006639839034205231, ["mov     cs:utimensat_works_really, 1", "jmp     short loc_1074E"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 40, 0, 1, 3, 0, 2, 9, 0, 0.09074446680080482, ["call    ___errno_location", "cmp     dword ptr [rax], 26h ; '&'", "jnz     loc_106FD"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 41, 0, 0, 2, 1, 1, 8, 0, 0.05010060362173038, ["test    eax, eax", "jnz     loc_10645"], ["test~eax,eax", "jnz~FOO"]], [1, 0, 16, 0, 1, 7, 1, 2, 11, 0, 0.12062374245472837, ["lea     rdx, [rsp+148h+st]; stat_buf", "mov     esi, ebx; fildes", "mov     edi, 1; ver", "call    ___fxstat", "mov     r15d, eax", "test    eax, eax", "jnz     loc_1074E"], ["lea~rdx,[rsp+0]", "mov~esi,ebx", "mov~edi,0", "call~FOO", "mov~r15d,eax", "test~eax,eax", "jnz~FOO"]], [0, 0, 43, 0, 1, 6, 1, 2, 7, 0, 0.09175050301810865, ["mov     rsi, [rsp+148h+ts]; times", "mov     edi, ebx; fd", "call    _futimens", "mov     r13d, eax", "test    eax, eax", "jle     loc_106F5"], ["mov~rsi,[rsp+0]", "mov~edi,ebx", "call~FOO", "mov~r13d,eax", "test~eax,eax", "jle~FOO"]], [1, 0, 25, 0, 0, 2, 0, 1, 6, 0, 0.07112676056338028, ["mov     r12d, 0", "jmp     loc_104C3"], ["mov~r12d,0", "jmp~FOO"]], [0, 0, 27, 0, 0, 3, 1, 1, 5, 0, 0.15211267605633802, ["mov     rsi, [rsp+148h+ts]", "test    rsi, rsi", "jz      loc_10730"], ["mov~rsi,[rsp+0]", "test~rsi,rsi", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 17, 0, 0.010865191146881288, ["cmp     [rsp+148h+st.st_mtim.tv_nsec], 0", "jnz     loc_107E0"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 69, 0, 1, 14, 1, 2, 1, 0, 0.007344064386317907, ["lea     fd, [rsp+148h+adjusted_timespec]; timespec", "mov     [rsp+148h+ts], rdi", "mov     r9, [timespec]", "mov     r10, [timespec+8]", "mov     [rsp+148h+adjusted_timespec.tv_sec], r9", "mov     [rsp+148h+adjusted_timespec.tv_nsec], r10", "mov     rax, [timespec+10h]", "mov     timespec, [timespec+18h]", "mov     [rsp+148h+adjusted_timespec.tv_sec+10h], rax", "mov     [rsp+148h+adjusted_timespec.tv_nsec+10h], rdx", "call    validate_timespec", "mov     r12d, eax", "test    eax, eax", "js      loc_107A5"], ["lea~fd,[rsp+0]", "mov~[rsp+0],rdi", "mov~r9,<TAG>", "mov~r10,[timespec+0]", "mov~[rsp+0],r9", "mov~[rsp+0],r10", "mov~rax,[timespec+0]", "mov~timespec,[timespec+0]", "mov~[rsp+0],rax", "mov~[rsp+0],rdx", "call~FOO", "mov~r12d,eax", "test~eax,eax", "js~FOO"]], [1, 0, 71, 1, 0, 14, 2, 1, 0, 0, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 118h", "mov     ebx, edi", "mov     rbp, file", "mov     rax, fs:28h", "mov     [rsp+148h+var_40], rax", "xor     eax, eax", "test    timespec, timespec", "jz      loc_107AD"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~ebx,edi", "mov~rbp,file", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~timespec,timespec", "jz~FOO"]], [2, 0, 68, 0, 0, 3, 0, 1, 1, 0, 0.0065392354124748486, ["mov     [rsp+148h+ts], 0", "mov     r12d, 0", "jmp     loc_103C0"], ["mov~[rsp+0],0", "mov~r12d,0", "jmp~FOO"]], [1, 0, 28, 0, 1, 6, 1, 2, 7, 0, 0.006639839034205231, ["lea     rsi, [rsp+148h+ts]; ts", "lea     rdi, [rsp+148h+st]; statbuf", "call    update_timespec", "mov     r13d, 0", "test    al, al", "jnz     loc_1074E"], ["lea~rsi,[rsp+0]", "lea~rdi,[rsp+0]", "call~FOO", "mov~r13d,0", "test~al,al", "jnz~FOO"]], [2, 0, 3, 0, 1, 4, 0, 2, 4, 0, 0.0018108651911468814, ["call    ___errno_location", "mov     dword ptr [rax], 9", "mov     r13d, 0FFFFFFFFh", "jmp     loc_1074E"], ["call~FOO", "mov~<TAG>,0", "mov~r13d,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 8, 0, 0.003822937625754527, ["mov     cs:utimensat_works_really, 1", "jmp     short loc_1074E"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 3, 0, 1, 5, 0, 2, 10, 0, 0.0, ["mov     rsi, t; tvp", "mov     rdi, file; file", "call    _utimes", "mov     r13d, eax", "jmp     short loc_1074E"], ["mov~rsi,t", "mov~rdi,file", "call~FOO", "mov~r13d,eax", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 0, 0.0012072434607645875, ["mov     r13d, 0FFFFFFFFh", "jmp     short loc_1074E"], ["mov~r13d,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 14, 0, 0.007243460764587525, ["mov     r13d, r15d", "jmp     loc_1074E"], ["mov~r13d,r15d", "jmp~FOO"]], [1, 0, 3, 0, 1, 5, 0, 1, 8, 0, 0.0030181086519114686, ["mov     rdx, t; tvp", "mov     rsi, file; file", "mov     edi, 0FFFFFF9Ch; fd", "call    _futimesat", "mov     r13d, eax"], ["mov~rdx,t", "mov~rsi,file", "mov~edi,0", "call~FOO", "mov~r13d,eax"]], [5, 0, 25, 4, 0, 21, 0, 0, 6, 0, 0.07112676056338028, ["mov     rax, [rsi]", "mov     [rsp+148h+timeval.tv_sec], rax", "mov     rdi, [rsi+8]", "mov     rcx, 20C49BA5E353F7CFh", "mov     rax, rdi", "imul    rcx", "sar     rdx, 7", "sar     rdi, 3Fh", "sub     rdx, rdi", "mov     [rsp+148h+timeval.tv_usec], rdx", "mov     rax, [rsi+10h]", "mov     [rsp+148h+timeval.tv_sec+10h], rax", "mov     rsi, [rsi+18h]", "mov     rax, rsi", "imul    rcx", "mov     rcx, rdx", "sar     rcx, 7", "sar     rsi, 3Fh", "sub     rcx, rsi", "mov     [rsp+148h+timeval.tv_usec+10h], rcx", "lea     adjustment_needed, [rsp+148h+timeval]"], ["mov~rax,<TAG>", "mov~[rsp+0],rax", "mov~rdi,[rsi+0]", "mov~rcx,0", "mov~rax,rdi", "imul~,rcx", "sar~rdx,0", "sar~rdi,0", "sub~rdx,rdi", "mov~[rsp+0],rdx", "mov~rax,[rsi+0]", "mov~[rsp+0],rax", "mov~rsi,[rsi+0]", "mov~rax,rsi", "imul~,rcx", "mov~rcx,rdx", "sar~rcx,0", "sar~rsi,0", "sub~rcx,rsi", "mov~[rsp+0],rcx", "lea~adjustment_needed,[rsp+0]"]], [0, 0, 6, 0, 0, 1, 0, 1, 18, 0, 0.0006036217303822937, ["jmp     loc_107D7"], ["jmp~FOO"]], [0, 0, 67, 0, 0, 2, 1, 0, 2, 0, 0.039235412474849095, ["test    ebx, ebx", "jns     short loc_103CD"], ["test~ebx,ebx", "jns~FOO"]], [0, 0, 24, 0, 0, 2, 1, 1, 7, 0, 0.17565392354124748, ["test    ebx, ebx", "js      loc_1073B"], ["test~ebx,ebx", "js~FOO"]], [0, 0, 66, 0, 0, 2, 1, 1, 3, 0, 0.002012072434607646, ["test    file, file", "jz      loc_105C4"], ["test~file,file", "jz~FOO"]], [2, 0, 50, 0, 1, 8, 1, 2, 6, 0, 0.029778672032193157, ["mov     ecx, 0; flags", "mov     rdx, [rsp+148h+ts]; times", "mov     rsi, file; path", "mov     edi, 0FFFFFF9Ch; fd", "call    _utimensat", "mov     r13d, eax", "test    eax, eax", "jle     short loc_106E5"], ["mov~ecx,0", "mov~rdx,[rsp+0]", "mov~rsi,file", "mov~edi,0", "call~FOO", "mov~r13d,eax", "test~eax,eax", "jle~FOO"]], [0, 0, 51, 0, 0, 2, 1, 1, 5, 0, 0.025553319919517103, ["test    ebx, ebx", "js      loc_106AD"], ["test~ebx,ebx", "js~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 14, 0, 0.020724346076458754, ["test    r14b, r14b", "jz      short loc_107F1"], ["test~r14b,r14b", "jz~FOO"]], [1, 0, 41, 0, 1, 2, 0, 1, 8, 0, 0.04024144869215292, ["call    ___errno_location", "mov     dword ptr [rax], 26h ; '&'"], ["call~FOO", "mov~<TAG>,0"]], [1, 0, 48, 0, 1, 2, 0, 1, 7, 0, 0.01317907444668008, ["call    ___errno_location", "mov     dword ptr [rax], 26h ; '&'"], ["call~FOO", "mov~<TAG>,0"]], [1, 0, 5, 0, 0, 1, 0, 0, 16, 0, 0.0016096579476861167, ["mov     [rsp+148h+truncated_timeval.tv_usec+10h], 0"], ["mov~[rsp+0],0"]], [1, 0, 6, 0, 0, 2, 0, 1, 15, 0, 0.010865191146881288, ["cmp     [rsp+148h+st.st_mtim.tv_nsec], 0", "jnz     short loc_107F1"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 63, 0, 0, 2, 0, 1, 4, 0, 0.030181086519114688, ["cmp     r12d, 2", "jz      loc_105DA"], ["cmp~r12d,0", "jz~FOO"]], [0, 0, 61, 0, 0, 2, 1, 1, 5, 0, 0.01448692152917505, ["test    ebx, ebx", "js      short loc_10658"], ["test~ebx,ebx", "js~FOO"]], [1, 0, 47, 0, 1, 3, 0, 2, 8, 0, 0.040643863179074445, ["call    ___errno_location", "cmp     dword ptr [rax], 26h ; '&'", "jnz     short loc_106E9"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 48, 0, 0, 2, 1, 1, 7, 0, 0.019014084507042252, ["test    eax, eax", "jnz     short loc_106D6"], ["test~eax,eax", "jnz~FOO"]], [0, 0, 45, 0, 0, 1, 0, 1, 9, 0, 0.04406438631790744, ["jmp     loc_103E8"], ["jmp~FOO"]], [1, 0, 4, 0, 1, 4, 0, 1, 16, 0, 0.004024144869215292, ["lea     adiff, [rsp+148h+truncated_timeval]; tvp", "mov     esi, 0; file", "mov     edi, ebx; fd", "call    _futimesat"], ["lea~adiff,[rsp+0]", "mov~esi,0", "mov~edi,ebx", "call~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, 0, 0.0, ["add     rsp, 118h", "pop     fd", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~fd", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [19, 34, 78, 1, 72, 113, 3, 273, 0.04024, 3, 8], "succs": [[], [0, 71], [56], [2, 46], [51, 60], [4, 6], [4, 7], [4, 29], [41, 19], [8, 65], [8], [8, 39], [26], [12, 22], [13, 23], [14], [14], [20, 38], [17, 1], [3, 21], [1, 38], [34, 30], [26, 27], [1], [1, 49], [24, 18], [33, 39], [26], [42, 70], [28, 70], [32], [1], [3, 31], [58], [32], [1], [10, 35], [35, 36], [1, 5], [37, 61], [56], [40, 53], [70, 54], [50, 55], [43, 45], [55], [1, 41], [1], [1], [1], [1], [1], [1], [56], [63], [57, 9], [25, 52], [9, 47], [68, 62], [58, 11], [64, 51], [36], [67], [70], [51, 63], [66, 59], [16, 15], [48, 69], [48, 67], [11], [51], []], "fname": "fdutimens", "n_num": 72}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[3, 0, 0, 2, 1, 7, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rdx, timespec; timespec", "mov     timespec, file; file", "mov     edi, 0FFFFFFFFh; fd", "call    fdutimens", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rdx,timespec", "mov~timespec,file", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 7, 0.0, 0, 2], "succs": [[]], "fname": "utimens", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 17, 0, 0, 2, 1, 1, 0, 0, 0.08238636363636363, ["test    eax, eax", "jnz     loc_108BB"], ["test~eax,eax", "jnz~FOO"]], [1, 1, 19, 0, 1, 8, 1, 2, 2, 4, 0.13825757575757577, ["mov     ecx, 100h; flags", "mov     rdx, [rsp+0E8h+ts]; times", "mov     rsi, file; path", "mov     edi, 0FFFFFF9Ch; fd", "call    _utimensat", "mov     ebp, eax", "test    eax, eax", "jle     loc_1097E"], ["mov~ecx,<STR>", "mov~rdx,[rsp+0]", "mov~rsi,file", "mov~edi,0", "call~FOO", "mov~ebp,eax", "test~eax,eax", "jle~FOO"]], [1, 0, 28, 0, 0, 2, 0, 1, 2, 5, 0.036931818181818184, ["cmp     cs:lutimensat_works_really, 0", "js      short loc_108C9"], ["cmp~<TAG>,0", "js~FOO"]], [0, 0, 30, 0, 1, 14, 1, 2, 1, 3, 0.017992424242424244, ["lea     file, [rsp+0E8h+adjusted_timespec]; timespec", "mov     [rsp+0E8h+ts], rdi", "mov     rax, [timespec]", "mov     rdx, [timespec+8]", "mov     [rsp+0E8h+adjusted_timespec.tv_sec], rax", "mov     [rsp+0E8h+adjusted_timespec.tv_nsec], rdx", "mov     rax, [timespec+10h]", "mov     rdx, [timespec+18h]", "mov     [rsp+0E8h+adjusted_timespec.tv_sec+10h], rax", "mov     [rsp+0E8h+adjusted_timespec.tv_nsec+10h], rdx", "call    validate_timespec", "mov     ebx, eax", "test    eax, eax", "js      loc_109F9"], ["lea~file,[rsp+0]", "mov~[rsp+0],rdi", "mov~rax,<TAG>", "mov~rdx,[timespec+0]", "mov~[rsp+0],rax", "mov~[rsp+0],rdx", "mov~rax,[timespec+0]", "mov~rdx,[timespec+0]", "mov~[rsp+0],rax", "mov~[rsp+0],rdx", "call~FOO", "mov~ebx,eax", "test~eax,eax", "js~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 5, 2, 0.009943181818181818, ["mov     ebp, 0FFFFFFFFh", "jmp     short loc_1099A"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 7, 0, 1, 6, 1, 2, 4, 3, 0.07149621212121213, ["lea     rdx, [rsp+0E8h+st]; stat_buf", "mov     rsi, file; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jnz     short loc_10A00"], ["lea~rdx,[rsp+0]", "mov~rsi,file", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 7, 0, 1, 6, 1, 2, 6, 3, 0.019886363636363636, ["lea     rsi, [rsp+0E8h+ts]; ts", "lea     rdi, [rsp+0E8h+st]; statbuf", "call    update_timespec", "mov     ebp, 0", "test    al, al", "jz      loc_10A3D"], ["lea~rsi,[rsp+0]", "lea~rdi,[rsp+0]", "call~FOO", "mov~ebp,0", "test~al,al", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 5, 4, 0.04166666666666667, ["cmp     [rsp+0E8h+ts], 0", "jz      loc_10A3D"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 27, 0, 0, 2, 0, 1, 3, 4, 0.030776515151515152, ["cmp     ebx, 2", "jz      loc_10911"], ["cmp~ebx,0", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 7, 2, 0.003787878787878788, ["jmp     loc_1099A"], ["jmp~FOO"]], [2, 0, 3, 0, 0, 2, 0, 0, 4, 2, 0.02840909090909091, ["mov     cs:utimensat_works_really, 1", "mov     cs:lutimensat_works_really, 1"], ["mov~<TAG>,0", "mov~<TAG>,0"]], [1, 0, 16, 0, 1, 3, 0, 2, 4, 3, 0.11742424242424243, ["call    ___errno_location", "cmp     dword ptr [rax], 26h ; '&'", "jnz     loc_10986"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [3, 0, 21, 0, 0, 4, 0, 0, 1, 5, 0.011363636363636364, ["mov     [rsp+0E8h+ts], 0", "mov     ebx, 0", "cmp     cs:lutimensat_works_really, 0", "jns     loc_1088F"], ["mov~[rsp+0],0", "mov~ebx,0", "cmp~<TAG>,0", "jns~FOO"]], [1, 0, 33, 1, 0, 10, 2, 1, 0, 4, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 0D0h", "mov     r12, file", "mov     rax, fs:28h", "mov     [rsp+0E8h+var_20], rax", "xor     eax, eax", "test    timespec, timespec", "jz      loc_10A07"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r12,file", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~timespec,timespec", "jz~FOO"]], [0, 0, 15, 0, 0, 1, 0, 1, 2, 5, 0.017045454545454544, ["jmp     loc_108C9"], ["jmp~FOO"]], [1, 0, 26, 0, 1, 6, 1, 2, 4, 3, 0.026988636363636364, ["lea     rdx, [rsp+0E8h+st]; stat_buf", "mov     rsi, file; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jnz     loc_109F2"], ["lea~rdx,[rsp+0]", "mov~rsi,file", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 7, 5, 0.09185606060606061, ["mov     ebx, 3", "jmp     loc_1088F"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, 1, 0.058712121212121215, ["mov     eax, ebp", "mov     rcx, [rsp+0E8h+var_20]", "xor     rcx, fs:28h", "jnz     loc_10A66"], ["mov~eax,ebp", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, 2, 0.005681818181818182, ["mov     ebp, 0FFFFFFFFh", "jmp     short loc_1099A"], ["mov~ebp,0", "jmp~FOO"]], [2, 0, 3, 0, 1, 4, 0, 2, 6, 2, 0.0023674242424242425, ["call    ___errno_location", "mov     dword ptr [rax], 26h ; '&'", "mov     ebp, 0FFFFFFFFh", "jmp     short loc_1099A"], ["call~FOO", "mov~<TAG>,0", "mov~ebp,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 5, 2, 0.007102272727272728, ["mov     ebp, 0FFFFFFFFh", "jmp     short loc_1099A"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.005681818181818182, ["mov     ebp, 0FFFFFFFFh", "jmp     short loc_1099A"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 3, 0, 1, 6, 0, 2, 6, 2, 0.0023674242424242425, ["mov     rdx, [rsp+0E8h+ts]; timespec", "mov     rsi, file; file", "mov     edi, 0FFFFFFFFh; fd", "call    fdutimens", "mov     ebp, eax", "jmp     loc_1099A"], ["mov~rdx,[rsp+0]", "mov~rsi,file", "mov~edi,0", "call~FOO", "mov~ebp,eax", "jmp~FOO"]], [1, 0, 17, 0, 1, 2, 0, 1, 3, 4, 0.05113636363636364, ["call    ___errno_location", "mov     dword ptr [rax], 26h ; '&'"], ["call~FOO", "mov~<TAG>,0"]], [1, 0, 24, 0, 0, 3, 0, 1, 5, 7, 0.03503787878787879, ["mov     rax, [rsp+0E8h+ts]", "cmp     qword ptr [rax+8], 3FFFFFFEh", "jz      short loc_1094E"], ["mov~rax,[rsp+0]", "cmp~[word ptr [rax+0],0", "jz~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 4, -1, 0.0, ["add     rsp, 0D0h", "pop     rbx", "pop     rbp", "pop     file", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~file", "retn"]], [1, 0, 22, 0, 0, 2, 0, 1, 6, 6, 0.026041666666666668, ["cmp     qword ptr [rax+18h], 3FFFFFFEh", "jz      short loc_10964"], ["cmp~[word ptr [rax+0],0", "jz~FOO"]], [0, 0, 21, 0, 0, 5, 0, 1, 6, 6, 0.020359848484848484, ["mov     rdx, [rsp+0E8h+st.st_atim.tv_nsec]", "mov     rcx, [rsp+0E8h+st.st_atim.tv_sec]", "mov     [rax], rcx", "mov     [rax+8], rdx", "jmp     short loc_10944"], ["mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "mov~<TAG>,rcx", "mov~[rax+0],rdx", "jmp~FOO"]], [0, 0, 21, 0, 0, 5, 0, 1, 7, 6, 0.0, ["mov     rdx, [rsp+0E8h+st.st_mtim.tv_nsec]", "mov     rcx, [rsp+0E8h+st.st_mtim.tv_sec]", "mov     [rax+10h], rcx", "mov     [rax+18h], rdx", "jmp     short loc_10944"], ["mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "mov~[rax+0],rcx", "mov~[rax+0],rdx", "jmp~FOO"]], [1, 0, 10, 0, 1, 6, 1, 2, 5, 3, 0.019886363636363636, ["lea     rdx, [rsp+0E8h+st]; stat_buf", "mov     rsi, file; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jz      loc_108E4"], ["lea~rdx,[rsp+0]", "mov~rsi,file", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 4, 4, 0.08049242424242424, ["cmp     ebx, 3", "jnz     loc_109BF"], ["cmp~ebx,0", "jnz~FOO"]], [1, 0, 14, 0, 0, 3, 1, 1, 3, 4, 0.1709280303030303, ["mov     cs:lutimensat_works_really, 0FFFFFFFFh", "test    ebx, ebx", "jz      loc_10A27"], ["mov~<TAG>,0", "test~ebx,ebx", "jz~FOO"]], [1, 1, 5, 0, 0, 4, 1, 1, 5, 3, 0.043560606060606064, ["mov     eax, [rsp+0E8h+st.st_mode]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      short loc_109E0"], ["mov~eax,[rsp+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [11, 12, 40, 1, 34, 51, 1, 131, 0.03752, 3, 2], "succs": [[10, 11], [0, 23], [8, 31], [2, 21], [17], [32, 4], [32, 9], [32, 6], [1, 15], [17], [17], [10, 31], [1, 14], [3, 12], [31], [24, 20], [1], [25, 33], [17], [17], [17], [17], [17], [11], [26, 27], [], [16, 28], [16], [16], [18, 7], [29, 7], [5, 30], [19, 22], []], "fname": "lutimens", "n_num": 34}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[5, 1, 1, 2, 2, 25, 0, 3, 0, 0, 0.0, ["mov     r15, [authors+28h]; jumptable 0000000000010B1B case 6", "mov     r14, [authors+20h]", "mov     r13, [authors+18h]", "mov     n_authors, [authors+10h]", "mov     rax, [authors+8]", "mov     [rsp+58h+var_58], rax", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "mov     edi, 0; domainname", "call    _dcgettext", "sub     rsp, 8", "push    r15", "push    r14", "push    r13", "mov     r9, r12", "mov     r8, [rsp+78h+var_58]", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 20h", "jmp     loc_10B6F; jumptable 0000000000010B1B case 0"], ["mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~rax,[authors+0]", "mov~<TAG>,rax", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "sub~rsp,0", "push~r15", "push~r14", "push~r13", "mov~r9,r12", "mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [0, 0, 10, 1, 0, 4, 0, 1, 3, -1, 0.18095238095238098, ["lea     rdx, off_15A58", "movsxd  rax, dword ptr [rdx+n_authors*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 15, 1, 0, 12, 1, 1, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 28h", "mov     rbp, stream", "mov     rbx, authors", "mov     r12, n_authors", "test    command_name, command_name", "jz      loc_10B1D"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,stream", "mov~rbx,authors", "mov~r12,n_authors", "test~command_name,command_name", "jz~FOO"]], [8, 0, 12, 0, 4, 20, 0, 5, 2, 1, 0.17142857142857143, ["mov     edx, 5; category", "lea     rsi, aC_0; \"(C)\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8d, 7E3h", "mov     rcx, rax", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "mov     edx, 5; category", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     n_authors, 9; switch 10 cases", "ja      loc_10E78; jumptable 0000000000010B1B default case"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8d,0", "mov~rcx,rax", "lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~n_authors,0", "ja~FOO"]], [2, 0, 13, 0, 1, 7, 0, 2, 1, 2, 0.030952380952380953, ["mov     r8, version", "mov     version, package", "lea     package, aSS_2; \"%s %s\\n\"", "mov     esi, 1", "mov     eax, 0", "call    ___fprintf_chk", "jmp     loc_10AAA"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [2, 0, 13, 0, 1, 7, 0, 1, 1, 2, 0.030952380952380953, ["mov     n_authors, version", "mov     authors, package", "mov     version, command_name", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     esi, 1", "mov     eax, 0", "call    ___fprintf_chk"], ["mov~n_authors,version", "mov~authors,package", "mov~version,command_name", "lea~package,<TAG>", "mov~esi,0", "mov~eax,0", "call~FOO"]], [6, 0, 1, 2, 2, 20, 0, 3, 4, -1, 0.0, ["mov     r14, [authors+18h]; jumptable 0000000000010B1B case 4", "mov     r13, [authors+10h]", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSAn; \"Written by %s, %s, %s,\\nand %s.\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "sub     rsp, 8", "push    r14", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 10h", "jmp     loc_10B6F; jumptable 0000000000010B1B case 0"], ["mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "sub~rsp,0", "push~r14", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [4, 0, 1, 0, 2, 11, 0, 2, 4, -1, 0.0, ["mov     authors, [authors]; jumptable 0000000000010B1B case 1", "mov     edx, 5; category", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk"], ["mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO"]], [6, 0, 1, 2, 2, 31, 0, 3, 4, -1, 0.0, ["mov     r15, [authors+38h]; jumptable 0000000000010B1B case 8", "mov     r14, [authors+30h]", "mov     r13, [authors+28h]", "mov     n_authors, [authors+20h]", "mov     rax, [authors+18h]", "mov     [rsp+58h+var_58], rax", "mov     rcx, [authors+10h]", "mov     [rsp+58h+var_50], rcx", "mov     rdi, [authors+8]", "mov     [rsp+58h+var_48], rdi", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     edi, 0; domainname", "call    _dcgettext", "sub     rsp, 8", "push    r15", "push    r14", "push    r13", "push    r12", "push    [rsp+80h+var_58]", "mov     r9, [rsp+88h+var_50]", "mov     r8, [rsp+88h+var_48]", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 30h", "jmp     loc_10B6F; jumptable 0000000000010B1B case 0"], ["mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~rax,[authors+0]", "mov~<TAG>,rax", "mov~rcx,[authors+0]", "mov~[rsp+0],rcx", "mov~rdi,[authors+0]", "mov~[rsp+0],rdi", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "sub~rsp,0", "push~r15", "push~r14", "push~r13", "push~r12", "push~[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [4, 1, 1, 1, 2, 27, 0, 3, 4, -1, 0.0, ["mov     r15, [authors+30h]; jumptable 0000000000010B1B case 7", "mov     r14, [authors+28h]", "mov     r13, [authors+20h]", "mov     n_authors, [authors+18h]", "mov     rax, [authors+10h]", "mov     [rsp+58h+var_58], rax", "mov     rcx, [authors+8]", "mov     [rsp+58h+var_50], rcx", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "mov     edi, 0; domainname", "call    _dcgettext", "push    r15", "push    r14", "push    r13", "push    r12", "mov     r9, [rsp+78h+var_58]", "mov     r8, [rsp+78h+var_50]", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 20h", "jmp     loc_10B6F; jumptable 0000000000010B1B case 0"], ["mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~rax,[authors+0]", "mov~<TAG>,rax", "mov~rcx,[authors+0]", "mov~[rsp+0],rcx", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "push~r15", "push~r14", "push~r13", "push~r12", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [5, 0, 1, 1, 2, 21, 0, 3, 4, -1, 0.0, ["mov     r15, [authors+20h]; jumptable 0000000000010B1B case 5", "mov     r14, [authors+18h]", "mov     r13, [authors+10h]", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "push    r15", "push    r14", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 10h", "jmp     loc_10B6F; jumptable 0000000000010B1B case 0"], ["mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "push~r15", "push~r14", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [5, 0, 1, 1, 2, 33, 0, 3, 4, -1, 0.0, ["mov     r15, [authors+40h]; jumptable 0000000000010B1B case 9", "mov     r14, [authors+38h]", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     rax, [authors+20h]", "mov     [rsp+58h+var_58], rax", "mov     rcx, [authors+18h]", "mov     [rsp+58h+var_50], rcx", "mov     rdi, [authors+10h]", "mov     [rsp+58h+var_48], rdi", "mov     rsi, [authors+8]", "mov     [rsp+58h+var_40], rsi", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     edi, 0; domainname", "call    _dcgettext", "push    r15", "push    r14", "push    r13", "push    r12", "push    [rsp+78h+var_58]", "push    [rsp+80h+var_50]", "mov     r9, [rsp+88h+var_48]", "mov     r8, [rsp+88h+var_40]", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 30h", "jmp     loc_10B6F; jumptable 0000000000010B1B case 0"], ["mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~rax,[authors+0]", "mov~<TAG>,rax", "mov~rcx,[authors+0]", "mov~[rsp+0],rcx", "mov~rdi,[authors+0]", "mov~[rsp+0],rdi", "mov~rsi,[authors+0]", "mov~[rsp+0],rsi", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "push~r15", "push~r14", "push~r13", "push~r12", "push~[rsp+0]", "push~[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [4, 0, 1, 0, 2, 14, 0, 3, 4, -1, 0.0, ["mov     n_authors, [authors+8]; jumptable 0000000000010B1B case 2", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8, r12", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "jmp     short loc_10B6F; jumptable 0000000000010B1B case 0"], ["mov~n_authors,[authors+0]", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8,r12", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "jmp~FOO"]], [4, 0, 1, 0, 2, 16, 0, 3, 4, -1, 0.0, ["mov     r13, [authors+10h]; jumptable 0000000000010B1B case 3", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "jmp     loc_10B6F; jumptable 0000000000010B1B case 0"], ["mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "jmp~FOO"]], [5, 0, 1, 1, 2, 33, 0, 3, 3, 0, 0.009523809523809525, ["mov     r15, [authors+40h]; jumptable 0000000000010B1B default case", "mov     r14, [authors+38h]", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     rax, [authors+20h]", "mov     [rsp+58h+var_58], rax", "mov     rcx, [authors+18h]", "mov     [rsp+58h+var_50], rcx", "mov     rdi, [authors+10h]", "mov     [rsp+58h+var_48], rdi", "mov     rsi, [authors+8]", "mov     [rsp+58h+var_40], rsi", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     edi, 0; domainname", "call    _dcgettext", "push    r15", "push    r14", "push    r13", "push    r12", "push    [rsp+78h+var_58]", "push    [rsp+80h+var_50]", "mov     r9, [rsp+88h+var_48]", "mov     r8, [rsp+88h+var_40]", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 30h", "jmp     loc_10B6F; jumptable 0000000000010B1B case 0"], ["mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~rax,[authors+0]", "mov~<TAG>,rax", "mov~rcx,[authors+0]", "mov~[rsp+0],rcx", "mov~rdi,[authors+0]", "mov~[rsp+0],rdi", "mov~rsi,[authors+0]", "mov~[rsp+0],rsi", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "push~r15", "push~r14", "push~r13", "push~r12", "push~[rsp+0]", "push~[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 28h; jumptable 0000000000010B1B case 0", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [26, 1, 39, 4, 16, 26, 2, 289, 0.02649, 16, 13], "succs": [[15], [0, 6, 7, 8, 9, 10, 11, 12, 13, 15], [4, 5], [1, 14], [3], [3], [15], [15], [15], [15], [15], [15], [15], [15], [15], []], "fname": "version_etc_arn", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 0, 2, 1, 0, 3, 0, 1, 0, 0, 0.08333333333333333, ["add     n_authors, 1; n_authors", "cmp     qword ptr [authors+n_authors*8], 0", "jnz     short loc_10F0F"], ["add~n_authors,0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 2, 0, 0, 1, 0, 0, 1, -1, 0.08333333333333333, ["mov     r9d, 0"], ["mov~r9d,0"]], [2, 0, 4, 1, 0, 3, 0, 1, 0, 1, 0.0, ["sub     rsp, 8", "cmp     qword ptr [authors], 0", "jz      short loc_10F24"], ["sub~rsp,0", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.08333333333333333, ["mov     r9d, 0", "jmp     short loc_10F1A"], ["mov~r9d,0", "jmp~FOO"]], [1, 0, 0, 1, 1, 3, 0, 1, 2, -1, 0.0, ["call    version_etc_arn", "add     rsp, 8", "retn"], ["call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 4, 0, 5, 6, 0, 12, 0.05, 0, 3], "succs": [[0, 4], [0], [1, 3], [4], []], "fname": "version_etc_ar", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 4, 0, 0.21428571428571427, ["mov     authors, rsp; authors", "call    version_etc_arn", "mov     rax, [rsp+68h+var_10]", "xor     rax, fs:28h", "jnz     short loc_10FA0"], ["mov~authors,rsp", "call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 8, 2, 0, 5, 0, 1, 2, 0, 0.09821428571428571, ["mov     eax, r10d", "add     rax, [authors+10h]", "add     r10d, 8", "mov     [authors], r10d", "jmp     short loc_10F54"], ["mov~eax,r10d", "add~rax,[authors+0]", "add~r10d,0", "mov~<TAG>,r10d", "jmp~FOO"]], [1, 0, 8, 0, 0, 3, 0, 1, 1, 0, 0.25, ["mov     r10d, [authors]", "cmp     r10d, 2Fh ; '/'", "ja      short loc_10F48"], ["mov~r10d,<TAG>", "cmp~r10d,0", "ja~FOO"]], [2, 0, 8, 1, 0, 6, 1, 1, 0, 0, 0.0, ["sub     rsp, 68h", "mov     rax, fs:28h", "mov     [rsp+68h+var_10], rax", "xor     eax, eax", "mov     r9d, 0", "jmp     short loc_10F6A"], ["sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~r9d,0", "jmp~FOO"]], [2, 0, 8, 1, 0, 3, 0, 1, 4, 0, 0.125, ["add     n_authors, 1; n_authors", "cmp     n_authors, 0Ah", "jz      short loc_10F83"], ["add~n_authors,0", "cmp~n_authors,0", "jz~FOO"]], [0, 0, 8, 0, 0, 4, 1, 1, 3, 0, 0.3571428571428571, ["mov     rax, [rax]", "mov     [rsp+n_authors*8+68h+authtab], rax", "test    rax, rax", "jz      short loc_10F83"], ["mov~rax,<TAG>", "mov~<TAG>,rax", "test~rax,rax", "jz~FOO"]], [0, 0, 8, 0, 0, 3, 0, 0, 2, 0, 0.09821428571428571, ["mov     rax, [authors+8]", "lea     r10, [rax+8]", "mov     [authors+8], r10"], ["mov~rax,[authors+0]", "lea~r10,[rax+0]", "mov~[authors+0],r10"]], [1, 0, 0, 1, 0, 2, 0, 0, 5, 0, 0.0, ["add     rsp, 68h", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [2, 3, 8, 1, 9, 11, 1, 32, 0.12698, 1, 5], "succs": [[], [0, 8], [6], [2, 7], [3], [1, 3], [1, 5], [6], []], "fname": "version_etc_va", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 4, 1, 0, 5, 1, 1, 0, 0, 0.0, ["sub     rsp, 0D8h", "mov     [rsp+0D8h+var_98], r8", "mov     [rsp+0D8h+var_90], r9", "test    al, al", "jz      short loc_10FF1"], ["sub~rsp,0", "mov~[rsp+0],r8", "mov~[rsp+0],r9", "test~al,al", "jz~FOO"]], [0, 0, 3, 0, 0, 8, 0, 0, 0, 2, 0.0, ["movaps  [rsp+0D8h+var_88], xmm0", "movaps  [rsp+0D8h+var_78], xmm1", "movaps  [rsp+0D8h+var_68], xmm2", "movaps  [rsp+0D8h+var_58], xmm3", "movaps  [rsp+0D8h+var_48], xmm4", "movaps  [rsp+0D8h+var_38], xmm5", "movaps  [rsp+0D8h+var_28], xmm6", "movaps  [rsp+0D8h+var_18], xmm7"], ["movaps~[rsp+0],xmm0", "movaps~[rsp+0],xmm1", "movaps~[rsp+0],xmm2", "movaps~[rsp+0],xmm3", "movaps~[rsp+0],xmm4", "movaps~[rsp+0],xmm5", "movaps~[rsp+0],xmm6", "movaps~[rsp+0],xmm7"]], [1, 1, 2, 0, 1, 14, 2, 2, 0, 1, 0.3333333333333333, ["mov     rax, fs:28h", "mov     [rsp+0D8h+var_C0], rax", "xor     eax, eax", "mov     [rsp+0D8h+authors.gp_offset], 20h ; ' '", "mov     [rsp+0D8h+authors.fp_offset], 30h ; '0'", "lea     rax, [rsp+0D8h+arg_0]", "mov     [rsp+0D8h+authors.overflow_arg_area], rax", "lea     rax, [rsp+0D8h+var_B8]", "mov     [rsp+0D8h+authors.reg_save_area], rax", "mov     r8, rsp; authors", "call    version_etc_va", "mov     rax, [rsp+0D8h+var_C0]", "xor     rax, fs:28h", "jnz     short loc_11047"], ["mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~<TAG>,<STR>", "mov~[rsp+0],0", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~r8,rsp", "call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 0D8h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 3, 4, 12, 5, 5, 1, 30, 0.06667, 1, 2], "succs": [[1, 2], [2], [3, 4], [], []], "fname": "version_etc", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[10, 0, 0, 0, 6, 30, 0, 6, 0, 0, 0.0, ["push    rbx", "mov     edx, 5; category", "lea     rsi, aReportBugsToS; \"\\nReport bugs to: %s\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "lea     rdx, aBugCoreutilsGn; \"bug-coreutils@gnu.org\"", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     edx, 5; category", "lea     rsi, aSHomePageS; \"%s home page: <%s>\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, package; \"GNU \"", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aGeneralHelpUsi; \"General help using GNU software: <https\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "pop     rbx", "retn"], ["push~rbx", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "pop~rbx", "retn"]]], "func_feature": [6, 0, 6, 0, 1, 0, 0, 30, 0.0, 7, 0], "succs": [[]], "fname": "emit_bug_reporting_address", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[3, 0, 0, 2, 1, 8, 1, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    _geteuid", "test    eax, eax", "setz    cs:can_write_3065", "mov     cs:initialized_3064, 1", "movzx   eax, cs:can_write_3065", "add     rsp, 8", "retn"], ["sub~rsp,0", "call~FOO", "test~eax,eax", "setz~<TAG>", "mov~<TAG>,0", "movzx~eax,<TAG>", "add~rsp,0", "retn"]], [1, 0, 2, 0, 0, 2, 0, 1, 0, 0, 0.0, ["cmp     cs:initialized_3064, 0", "jz      short loc_110ED"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["movzx   eax, cs:can_write_3065", "retn"], ["movzx~eax,<TAG>", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 2, 1, 12, 0.0, 2, 2], "succs": [[], [0, 2], []], "fname": "can_write_any_file", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_11127"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    _malloc", "test    p, p", "jnz     short loc_11125"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 4, 0, 4, 4, 19, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 2], [], []], "fname": "xmalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 0, 2, 1, 4, 0, 1, 0, 0, 0.0, ["imul    n, s; n", "call    xmalloc", "add     rsp, 8", "retn"], ["imul~n,s", "call~FOO", "add~rsp,0", "retn"]], [2, 0, 2, 2, 0, 10, 2, 1, 0, 1, 0.0, ["sub     rsp, 8", "mov     rax, n", "mul     s", "seto    dl", "movzx   edx, dl", "test    rax, rax", "mov     eax, 1", "cmovns  rax, rdx", "test    al, al", "jnz     short loc_1115A"], ["sub~rsp,0", "mov~rax,n", "mul~,s", "seto~dl", "movzx~edx,dl", "test~rax,rax", "mov~eax,0", "cmovns~rax,rdx", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 3, 0, 3, 2, 0, 15, 0.0, 0, 4], "succs": [[], [0, 2], []], "fname": "xnmalloc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 0, 0, 2, 1, 4, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    xmalloc", "add     rsp, 8", "retn"], ["sub~rsp,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 4, 0.0, 0, 2], "succs": [[]], "fname": "xcharalloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 3, 0, 1, 4, 1, 2, 0, 0, 0.18333333333333332, ["mov     n, rbx; size", "call    _realloc", "test    p, p", "jnz     short loc_1118D"], ["mov~n,rbx", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 6, 0, 0, 4, 1, 1, 0, 3, 0.0, ["push    rbx", "mov     rbx, n", "test    n, n", "jnz     short loc_1117B"], ["push~rbx", "mov~rbx,n", "test~n,n", "jnz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 1, 3, 0.03333333333333333, ["test    p, p", "jnz     short loc_1118F"], ["test~p,p", "jnz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 2, 1, 0.1, ["test    n, n", "jnz     short loc_1119B"], ["test~n,n", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]], [1, 0, 1, 0, 1, 3, 0, 2, 2, -1, 0.016666666666666666, ["call    free", "mov     eax, 0", "jmp     short loc_1118D"], ["call~FOO", "mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [3, 4, 8, 0, 7, 9, 9, 18, 0.04762, 0, 0], "succs": [[3, 4], [0, 2], [0, 5], [4, 6], [], [4], []], "fname": "xrealloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 0, 2, 1, 4, 0, 1, 0, 0, 0.0, ["imul    n, s; n", "call    xrealloc", "add     rsp, 8", "retn"], ["imul~n,s", "call~FOO", "add~rsp,0", "retn"]], [2, 0, 2, 2, 0, 11, 2, 1, 0, 1, 0.0, ["sub     rsp, 8", "mov     rcx, s", "mov     rax, n", "mul     rcx", "seto    dl", "movzx   edx, dl", "test    rax, rax", "mov     eax, 1", "cmovns  rax, rdx", "test    al, al", "jnz     short loc_111D1"], ["sub~rsp,0", "mov~rcx,s", "mov~rax,n", "mul~,rcx", "seto~dl", "movzx~edx,dl", "test~rax,rax", "mov~eax,0", "cmovns~rax,rdx", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 3, 0, 3, 2, 0, 16, 0.0, 0, 4], "succs": [[], [0, 2], []], "fname": "xnrealloc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 0, 0, 0, 0.026785714285714284, ["mov     rax, n", "shr     rax, 1", "lea     n, [rax+n+1]"], ["mov~rax,n", "shr~rax,0", "lea~n,[rax+0]"]], [2, 0, 3, 1, 0, 5, 0, 0, 1, 1, 0.04464285714285714, ["mov     rax, 5555555555555554h", "mov     edx, 0", "div     s", "cmp     rax, n", "jbe     short loc_1125D"], ["mov~rax,0", "mov~edx,0", "div~,s", "cmp~rax,n", "jbe~FOO"]], [1, 0, 8, 1, 0, 5, 1, 1, 0, 2, 0.0, ["sub     rsp, 8", "mov     r9, s", "mov     rcx, [pn]", "test    p, p", "jz      short loc_1121B"], ["sub~rsp,0", "mov~r9,s", "mov~rcx,<TAG>", "test~p,p", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 2, 1, 0, 9, 2, 1, 2, -1, 0.09821428571428571, ["mov     rax, n", "mul     s", "seto    dl", "movzx   edx, dl", "test    rax, rax", "mov     eax, 1", "cmovns  rax, rdx", "test    al, al", "jz      short loc_11207"], ["mov~rax,n", "mul~,s", "seto~dl", "movzx~edx,dl", "test~rax,rax", "mov~eax,0", "cmovns~rax,rdx", "test~al,al", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 1, -1, 0.0625, ["test    n, n", "jnz     short loc_1123C"], ["test~n,n", "jnz~FOO"]], [1, 1, 3, 1, 0, 7, 1, 0, 2, -1, 0.0, ["mov     eax, 80h", "mov     edx, 0", "div     s", "test    n, n", "setz    r8b", "movzx   r8d, r8b", "lea     rcx, [r8+n]"], ["mov~eax,<STR>", "mov~edx,0", "div~,s", "test~n,n", "setz~r8b", "movzx~r8d,r8b", "lea~rcx,<TAG>"]], [1, 0, 0, 2, 1, 6, 0, 1, 3, -1, 0.0, ["mov     [pn], n", "imul    n, s", "mov     pn, rcx; n", "call    xrealloc", "add     rsp, 8", "retn"], ["mov~<TAG>,n", "imul~n,s", "mov~pn,rcx", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [3, 5, 6, 0, 9, 10, 0, 39, 0.02579, 0, 6], "succs": [[8], [0, 3], [1, 6], [], [], [8, 4], [5, 7], [5], []], "fname": "x2nrealloc", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 0, 0, 0, 0.03333333333333333, ["mov     rdx, rax", "shr     rdx, 1", "lea     rax, [rdx+rax+1]"], ["mov~rdx,rax", "shr~rdx,0", "lea~rax,[rdx+0]"]], [1, 0, 3, 0, 0, 3, 0, 1, 1, 1, 0.06666666666666667, ["mov     rdx, 5555555555555553h", "cmp     rax, rdx", "ja      short loc_112AE"], ["mov~rdx,0", "cmp~rax,rdx", "ja~FOO"]], [0, 1, 2, 0, 0, 5, 2, 0, 1, -1, 0.06666666666666667, ["test    rax, rax", "mov     edx, 80h", "cmovz   rax, rdx", "test    rax, rax", "jns     short loc_11288"], ["test~rax,rax", "mov~edx,<STR>", "cmovz~rax,rdx", "test~rax,rax", "jns~FOO"]], [1, 0, 6, 1, 0, 4, 1, 1, 0, 2, 0.0, ["sub     rsp, 8", "mov     rax, [pn]", "test    p, p", "jz      short loc_11298"], ["sub~rsp,0", "mov~rax,<TAG>", "test~p,p", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 0, 1, 1, 5, 0, 1, 2, -1, 0.0, ["mov     [pn], rax", "mov     pn, rax; n", "call    xrealloc", "add     rsp, 8", "retn"], ["mov~<TAG>,rax", "mov~pn,rax", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [3, 3, 5, 0, 7, 7, 0, 22, 0.02381, 0, 2], "succs": [[6], [0, 5], [4, 6], [1, 2], [], [], []], "fname": "x2realloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 0, 0, 2, 9, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, s", "call    xmalloc", "mov     rdx, s; n", "mov     esi, 0; c", "mov     rdi, rax; s", "call    _memset", "pop     s", "retn"], ["push~rbx", "mov~rbx,s", "call~FOO", "mov~rdx,s", "mov~esi,0", "mov~rdi,rax", "call~FOO", "pop~s", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 0, 9, 0.0, 0, 0], "succs": [[]], "fname": "xzalloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [0, 0, 2, 0, 1, 3, 1, 2, 1, 1, 0.16666666666666666, ["call    _calloc", "test    p, p", "jz      short loc_112FD"], ["call~FOO", "test~p,p", "jz~FOO"]], [2, 0, 3, 2, 0, 10, 2, 1, 0, 1, 0.0, ["sub     rsp, 8", "mov     rax, n", "mul     s", "seto    dl", "movzx   edx, dl", "test    rax, rax", "mov     eax, 1", "cmovns  rax, rdx", "test    al, al", "jnz     short loc_112FD"], ["sub~rsp,0", "mov~rax,n", "mul~,s", "seto~dl", "movzx~edx,dl", "test~rax,rax", "mov~eax,0", "cmovns~rax,rdx", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 3, 4, 0, 4, 4, 0, 16, 0.04167, 0, 3], "succs": [[], [0, 3], [1, 3], []], "fname": "xcalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 0, 0, 2, 2, 15, 0, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbp, p", "mov     rbx, s", "mov     p, s; n", "call    xmalloc", "mov     rdx, s; n", "mov     rsi, p; src", "mov     rdi, rax; dest", "call    _memcpy", "add     rsp, 8", "pop     s", "pop     p", "retn"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,p", "mov~rbx,s", "mov~p,s", "call~FOO", "mov~rdx,s", "mov~rsi,p", "mov~rdi,rax", "call~FOO", "add~rsp,0", "pop~s", "pop~p", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 2, 15, 0.0, 0, 2], "succs": [[]], "fname": "xmemdup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[4, 0, 0, 2, 1, 11, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rdx, string", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "repne scasb", "not     rcx", "mov     rsi, rcx; s", "mov     rdi, rdx; p", "call    xmemdup", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rdx,string", "mov~rcx,0", "mov~eax,0", "scasb~<TAG>,", "not~rcx", "mov~rsi,rcx", "mov~rdi,rdx", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 5, 11, 0.0, 0, 2], "succs": [[]], "fname": "xstrdup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[5, 0, 0, 1, 3, 12, 0, 3, 0, 0, 0.0, ["sub     rsp, 8", "mov     edx, 5; category", "lea     rsi, aMemoryExhauste; \"memory exhausted\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     edi, cs:exit_failure; status", "mov     rcx, rax", "lea     rdx, aS+2; format", "mov     esi, 0; errnum", "mov     eax, 0", "call    _error", "call    _abort"], ["sub~rsp,0", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~edi,<TAG>", "mov~rcx,rax", "lea~rdx,<TAG>", "mov~esi,0", "mov~eax,0", "call~FOO", "call~FOO"]]], "func_feature": [3, 0, 3, 0, 1, 0, 22, 12, 0.0, 3, 1], "succs": [[]], "fname": "xalloc_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 4, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     byte ptr [rax], 0", "jmp     short loc_113EC"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 5, 0, 0, 4, 0, 1, 1, 3, 0.06666666666666667, ["mov     rdx, [rsp+28h+response]", "lea     rax, [rdx+rax-1]", "cmp     byte ptr [rax], 0Ah", "jz      short loc_1141D"], ["mov~rdx,[rsp+0]", "lea~rax,[rdx+0]", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 1, 6, 1, 2, 1, 1, 0.26666666666666666, ["mov     rdi, [rsp+28h+response]; ptr", "call    free", "mov     eax, ebx", "mov     rcx, [rsp+28h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_11422"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~eax,ebx", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [4, 1, 6, 1, 1, 15, 2, 2, 0, 2, 0.0, ["push    rbx", "sub     rsp, 20h", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "mov     [rsp+28h+response], 0", "mov     [rsp+28h+response_size], 0", "lea     rsi, [rsp+28h+response_size]; n", "lea     rdi, [rsp+28h+response]; lineptr", "mov     rcx, cs:stdin@@GLIBC_2_2_5; stream", "mov     edx, 0Ah; delimiter", "call    ___getdelim", "mov     ebx, 0", "test    rax, rax", "jle     short loc_113FB"], ["push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rsi,[rsp+0]", "lea~rdi,[rsp+0]", "mov~rcx,<TAG>", "mov~edx,0", "call~FOO", "mov~ebx,0", "test~rax,rax", "jle~FOO"]], [0, 0, 3, 0, 1, 4, 1, 1, 2, 2, 0.2, ["mov     rdi, [rsp+28h+response]; response", "call    _rpmatch", "test    eax, eax", "setnle  bl"], ["mov~rdi,[rsp+0]", "call~FOO", "test~eax,eax", "setnle~bl"]], [0, 1, 0, 1, 0, 3, 0, 0, 2, -1, 0.0, ["add     rsp, 20h", "pop     yes", "retn"], ["add~rsp,<STR>", "pop~yes", "retn"]]], "func_feature": [4, 4, 8, 1, 7, 8, 1, 35, 0.07619, 2, 2], "succs": [[5], [0, 5], [], [2, 6], [1, 3], [3], []], "fname": "yesno", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     stream", "retn"], ["pop~stream", "retn"]], [0, 0, 1, 0, 1, 3, 0, 2, 3, -1, 0.06666666666666667, ["mov     rdi, stream; stream", "call    _fflush", "jmp     short loc_11441"], ["mov~rdi,stream", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 1, -1, 0.06666666666666667, ["mov     rdi, stream; stream", "call    _fflush"], ["mov~rdi,stream", "call~FOO"]], [2, 0, 2, 0, 1, 5, 0, 2, 3, 0, 0.0, ["mov     edx, 1; whence", "mov     esi, 0; offset", "mov     rdi, stream; fp", "call    rpl_fseeko", "jmp     short loc_1144B"], ["mov~edx,0", "mov~esi,0", "mov~rdi,stream", "call~FOO", "jmp~FOO"]], [0, 1, 3, 0, 0, 2, 1, 1, 2, 1, 0.13333333333333333, ["test    dword ptr [stream], 100h", "jnz     short loc_11455"], ["test~<TAG>,<STR>", "jnz~FOO"]], [0, 0, 5, 0, 1, 3, 1, 2, 1, 2, 0.1, ["call    ___freading", "test    eax, eax", "jnz     short loc_11443"], ["call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 6, 0, 0, 4, 1, 1, 0, 3, 0.0, ["push    rbx", "mov     rbx, stream", "test    stream, stream", "jz      short loc_11439"], ["push~rbx", "mov~rbx,stream", "test~stream,stream", "jz~FOO"]]], "func_feature": [4, 3, 9, 0, 7, 9, 2, 21, 0.05238, 0, 0], "succs": [[], [0], [0], [1], [1, 3], [2, 4], [2, 5]], "fname": "rpl_fflush", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0.16666666666666666, ["add     rax, rdx"], ["add~rax,rdx"]], [1, 1, 3, 1, 0, 6, 1, 1, 1, 2, 0.16666666666666666, ["mov     rax, [fp+10h]", "sub     rax, [fp+8]", "mov     rdx, rax", "mov     eax, 0", "test    dword ptr [fp], 100h", "jz      short loc_11498"], ["mov~rax,[fp+0]", "sub~rax,[fp+0]", "mov~rdx,rax", "mov~eax,0", "test~<TAG>,<STR>", "jz~FOO"]], [0, 0, 2, 1, 0, 2, 0, 0, 2, 2, 0.0, ["mov     rax, [fp+58h]", "sub     rax, [fp+48h]"], ["mov~rax,[fp+0]", "sub~rax,[fp+0]"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 4, 0, 0, 4, 0, 1, 0, 1, 0.0, ["mov     eax, 0", "mov     rcx, [fp+20h]", "cmp     [fp+28h], rcx", "ja      short locret_1149B"], ["mov~eax,0", "mov~rcx,[fp+0]", "cmp~[fp+0],rcx", "ja~FOO"]]], "func_feature": [0, 1, 2, 0, 5, 6, 1, 14, 0.06667, 0, 3], "succs": [[3], [0, 2], [0], [], [1, 3]], "fname": "freadahead", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.011904761904761904, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_114C2"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 2, 7, 0, 3, 3, 0, 0.14285714285714285, ["call    _fileno", "mov     edx, r12d; whence", "mov     rsi, offset; offset", "mov     edi, eax; fd", "call    _lseek", "cmp     pos, 0FFFFFFFFFFFFFFFFh", "jz      short loc_11501"], ["call~FOO", "mov~edx,r12d", "mov~rsi,offset", "mov~edi,eax", "call~FOO", "cmp~pos,0", "jz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, 0, 0.0, ["pop     fp", "pop     offset", "pop     whence", "retn"], ["pop~fp", "pop~offset", "pop~whence", "retn"]], [2, 0, 1, 0, 0, 4, 1, 1, 4, 0, 0.011904761904761904, ["and     dword ptr [fp], 0FFFFFFEFh", "mov     [fp+90h], pos", "mov     eax, 0", "jmp     short loc_114C2"], ["and~<TAG>,0", "mov~[fp+0],pos", "mov~eax,0", "jmp~FOO"]], [0, 0, 1, 0, 1, 4, 0, 1, 1, 0, 0.07142857142857142, ["mov     edx, r12d; whence", "mov     offset, rbp; off", "mov     fp, rbx; stream", "call    _fseeko"], ["mov~edx,r12d", "mov~offset,rbp", "mov~fp,rbx", "call~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 0, 0.14285714285714285, ["cmp     qword ptr [rdi+48h], 0", "jnz     short loc_114B4"], ["cmp~[word ptr [rdi+0],0", "jnz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 1, 0, 0.09523809523809523, ["mov     rax, [rdi+20h]", "cmp     [rdi+28h], rax", "jnz     short loc_114B4"], ["mov~rax,[rdi+0]", "cmp~[rdi+0],rax", "jnz~FOO"]], [0, 0, 7, 0, 0, 9, 0, 1, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, fp", "mov     rbp, offset", "mov     r12d, edx", "mov     rax, [fp+8]", "cmp     [fp+10h], rax", "jz      short loc_114C7"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,fp", "mov~rbp,offset", "mov~r12d,edx", "mov~rax,[fp+0]", "cmp~[fp+0],rax", "jz~FOO"]]], "func_feature": [3, 1, 9, 0, 8, 11, 2, 35, 0.05952, 0, 0], "succs": [[2], [0, 3], [], [2], [2], [1, 4], [4, 5], [4, 6]], "fname": "rpl_fseeko", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 3, 0, 0, 3, 0, 0, 0, 0, 0.0, ["movzx   eax, byte ptr [s+0]", "mov     [pwc], eax", "mov     ebp, 1"], ["movzx~eax,[yte ptr [s+0]", "mov~<TAG>,eax", "mov~ebp,0"]], [1, 0, 4, 0, 1, 4, 1, 2, 2, 2, 0.06666666666666667, ["mov     edi, 0; category", "call    hard_locale", "test    al, al", "jnz     short loc_11567"], ["mov~edi,0", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 2, -1, 0.0, ["add     rsp, 18h", "pop     pwc", "pop     rbp", "pop     n", "pop     s", "retn"], ["add~rsp,0", "pop~pwc", "pop~rbp", "pop~n", "pop~s", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 1, 1, 0.26666666666666666, ["mov     rax, rbp", "mov     rdx, [rsp+38h+var_30]", "xor     rdx, fs:28h", "jnz     short loc_11585"], ["mov~rax,rbp", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 0, 6, 1, 1, 19, 2, 1, 0, 2, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     rbx, pwc", "mov     r13, s", "mov     r12, n", "mov     rax, fs:28h", "mov     [rsp+38h+var_30], rax", "xor     eax, eax", "lea     rax, [rsp+38h+wc]", "test    pwc, pwc", "cmovz   rbx, rax", "mov     rdi, pwc; pwc", "call    _mbrtowc", "mov     rbp, rax", "cmp     ret, 0FFFFFFFFFFFFFFFDh", "jbe     short loc_11567"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,pwc", "mov~r13,s", "mov~r12,n", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "test~pwc,pwc", "cmovz~rbx,rax", "mov~rdi,pwc", "call~FOO", "mov~rbp,rax", "cmp~ret,0", "jbe~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 1, 2, 0.06666666666666667, ["test    n, n", "jz      short loc_11567"], ["test~n,n", "jz~FOO"]]], "func_feature": [3, 5, 6, 1, 7, 9, 1, 39, 0.05714, 1, 2], "succs": [[3], [0, 3], [], [2, 4], [], [3, 6], [1, 3]], "fname": "rpl_mbrtowc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 2, 1, 0.0, 0, 0], "succs": [[]], "fname": "free_permission_context", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     [ctx], edx", "mov     eax, 0", "retn"], ["mov~<TAG>,edx", "mov~eax,0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 3, 0.0, 0, 0], "succs": [[]], "fname": "get_permissions", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 1, 0, 1, 3, 0, 2, 0, 0, 0.08333333333333333, ["mov     esi, edx; mode", "call    _chmod", "jmp     short loc_115A8"], ["mov~esi,edx", "call~FOO", "jmp~FOO"]], [2, 0, 3, 1, 0, 3, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "cmp     esi, 0FFFFFFFFh", "jz      short loc_115AD"], ["sub~rsp,0", "cmp~esi,0", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 2, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [0, 0, 1, 0, 1, 4, 0, 1, 1, 0, 0.08333333333333333, ["mov     eax, esi", "mov     esi, edx; mode", "mov     edi, eax; file", "call    _fchmod"], ["mov~eax,esi", "mov~esi,edx", "mov~edi,eax", "call~FOO"]]], "func_feature": [2, 0, 4, 0, 4, 4, 1, 12, 0.04167, 0, 2], "succs": [[2], [0, 3], [], [2]], "fname": "chmod_or_fchmod", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 0, 0, 2, 1, 12, 1, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rax, name", "mov     esi, edx; desc", "mov     edx, [ctx]; mode", "mov     ctx, name; name", "call    chmod_or_fchmod", "test    eax, eax", "setnz   al", "movzx   eax, al", "neg     eax", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rax,name", "mov~esi,edx", "mov~edx,<TAG>", "mov~ctx,name", "call~FOO", "test~eax,eax", "setnz~al", "movzx~eax,al", "neg~eax", "add~rsp,0", "retn"]]], "func_feature": [1, 1, 1, 0, 1, 0, 2, 12, 0.0, 0, 2], "succs": [[]], "fname": "set_permissions", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 4, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     eax, 0", "cmp     p1, p2", "jz      short locret_11620"], ["mov~eax,0", "cmp~p1,p2", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 1, 1, 0, 3, 0, 0, 0, 1, 0.16666666666666666, ["movzx   eax, al", "movzx   edx, dl", "sub     eax, edx"], ["movzx~eax,al", "movzx~edx,dl", "sub~eax,edx"]], [4, 0, 4, 2, 0, 14, 1, 1, 0, 2, 0.16666666666666666, ["movzx   edx, byte ptr [p1]", "movzx   eax, dl", "sub     edx, 41h ; 'A'", "lea     ecx, [rax+20h]", "cmp     dl, 1Ah", "cmovb   eax, ecx", "movzx   ecx, byte ptr [p2]", "movzx   edx, cl", "sub     ecx, 41h ; 'A'", "lea     r9d, [rdx+20h]", "cmp     cl, 1Ah", "cmovb   edx, r9d", "test    al, al", "jz      short loc_11618"], ["movzx~edx,<TAG>", "movzx~eax,dl", "sub~edx,0", "lea~ecx,[rax+0]", "cmp~dl,0", "cmovb~eax,ecx", "movzx~ecx,<TAG>", "movzx~edx,cl", "sub~ecx,0", "lea~r9d,[rdx+0]", "cmp~cl,0", "cmovb~edx,r9d", "test~al,al", "jz~FOO"]], [2, 0, 4, 2, 0, 4, 0, 1, 0, 2, 0.0, ["add     p1, 1", "add     p2, 1", "cmp     al, dl", "jz      short loc_115E2"], ["add~p1,0", "add~p2,0", "cmp~al,dl", "jz~FOO"]]], "func_feature": [0, 1, 3, 0, 5, 7, 1, 25, 0.06667, 0, 5], "succs": [[1, 3], [], [1], [2, 4], [2, 3]], "fname": "c_strcasecmp", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 1, 0, 1, 6, 0, 2, 0, 0, 0.0, ["call    ___errno_location", "cmp     dword ptr [rax], 9", "setnz   al", "movzx   eax, al", "neg     eax", "jmp     short loc_11677"], ["call~FOO", "cmp~<TAG>,0", "setnz~al", "movzx~eax,al", "neg~eax", "jmp~FOO"]], [1, 0, 2, 0, 0, 3, 1, 1, 2, -1, 0.047619047619047616, ["mov     eax, 0FFFFFFFFh", "test    r12, r12", "jnz     short loc_11677"], ["mov~eax,0", "test~r12,r12", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, -1, 0.07142857142857142, ["test    eax, eax", "jz      short loc_11677"], ["test~eax,eax", "jz~FOO"]], [0, 1, 7, 0, 2, 12, 2, 3, 0, 2, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbp, stream", "call    ___fpending", "mov     r12, rax", "mov     ebx, [stream+0]", "and     ebx, 20h", "mov     rdi, stream; fp", "call    rpl_fclose", "test    ebx, ebx", "jnz     short loc_11663"], ["push~r12", "push~rbp", "push~rbx", "mov~rbp,stream", "call~FOO", "mov~r12,rax", "mov~ebx,[stream+0]", "and~ebx,<STR>", "mov~rdi,stream", "call~FOO", "test~ebx,ebx", "jnz~FOO"]], [2, 0, 1, 0, 1, 3, 0, 1, 2, -1, 0.011904761904761904, ["call    ___errno_location", "mov     dword ptr [rax], 0", "mov     eax, 0FFFFFFFFh"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 1, 0.047619047619047616, ["test    eax, eax", "jnz     short loc_1167C"], ["test~eax,eax", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 0, 0.011904761904761904, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_11677"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["pop     rbx", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "pop~stream", "pop~r12", "retn"]]], "func_feature": [4, 5, 10, 0, 8, 11, 4, 34, 0.02381, 0, 0], "succs": [[7], [0, 7], [1, 7], [2, 5], [7], [4, 6], [7], []], "fname": "close_stream", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 6, 0, 1, 4, 0, 1, 0, 0, 0.11904761904761904, ["mov     rdi, dp; dirp", "call    _dirfd", "cmp     eax, 2", "jbe     short loc_116B5"], ["mov~rdi,dp", "call~FOO", "cmp~eax,0", "jbe~FOO"]], [1, 0, 7, 1, 1, 9, 1, 2, 0, 4, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "call    _opendir", "mov     rbx, rax", "test    dp, dp", "jz      short loc_116A7"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "call~FOO", "mov~rbx,rax", "test~dp,dp", "jz~FOO"]], [0, 0, 3, 0, 2, 7, 1, 3, 3, 1, 0.11904761904761904, ["mov     edi, eax; fd", "call    _fdopendir", "mov     r12, rax", "call    ___errno_location", "mov     r13d, [rax]", "test    newdp, newdp", "jnz     short loc_116DF"], ["mov~edi,eax", "call~FOO", "mov~r12,rax", "call~FOO", "mov~r13d,<TAG>", "test~newdp,newdp", "jnz~FOO"]], [3, 0, 5, 0, 1, 8, 1, 1, 2, 2, 0.19047619047619047, ["mov     edx, 3", "mov     esi, 406h; action", "mov     edi, eax; fd", "mov     eax, 0", "call    rpl_fcntl", "mov     ebp, eax", "test    eax, eax", "jns     short loc_116F4"], ["mov~edx,0", "mov~esi,0", "mov~edi,eax", "mov~eax,0", "call~FOO", "mov~ebp,eax", "test~eax,eax", "jns~FOO"]], [0, 0, 2, 0, 1, 3, 0, 2, 4, 0, 0.0, ["mov     edi, ebp; fd", "call    _close", "jmp     short loc_116DF"], ["mov~edi,ebp", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 2, 6, 0, 3, 4, -1, 0.09523809523809523, ["mov     rdi, dp; dirp", "call    _closedir", "call    ___errno_location", "mov     [rax], r13d", "mov     rbx, newdp", "jmp     short loc_116A7"], ["mov~rdi,dp", "call~FOO", "call~FOO", "mov~<TAG>,r13d", "mov~rbx,newdp", "jmp~FOO"]], [1, 0, 2, 0, 1, 3, 0, 1, 3, -1, 0.047619047619047616, ["call    ___errno_location", "mov     r13d, [rax]", "mov     r12d, 0"], ["call~FOO", "mov~r13d,<TAG>", "mov~r12d,0"]], [1, 0, 0, 1, 0, 7, 0, 0, 1, -1, 0.0, ["mov     rax, rbx", "add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["mov~rax,rbx", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]]], "func_feature": [9, 3, 13, 0, 8, 11, 1, 47, 0.07143, 0, 2], "succs": [[3, 7], [0, 7], [4, 5], [2, 6], [5], [7], [5], []], "fname": "opendir_safer", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[3, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rsi, ts; tp", "mov     edi, 0; clock_id", "call    _clock_gettime", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rsi,ts", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 3, 6, 0.0, 0, 2], "succs": [[]], "fname": "gettime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 28h", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 11, 2, 2, 0, 1, 0.0, ["sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "mov     rdi, rsp; ts", "call    gettime", "mov     rax, [rsp+28h+ts.tv_sec]", "mov     rdx, [rsp+28h+ts.tv_nsec]", "mov     rcx, [rsp+28h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_11764"], ["sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rdi,rsp", "call~FOO", "mov~rax,<TAG>", "mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 2, 3, 1, 3, 2, 0, 14, 0.0, 1, 2], "succs": [[], [0, 2], []], "fname": "current_timespec", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[3, 0, 3, 1, 1, 7, 1, 2, 0, 0, 0.0, ["sub     rsp, 8", "mov     esi, 0; locale", "call    _setlocale", "mov     rdx, rax", "mov     eax, 1", "test    p, p", "jz      short loc_117BF"], ["sub~rsp,0", "mov~esi,0", "call~FOO", "mov~rdx,rax", "mov~eax,0", "test~p,p", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [3, 0, 2, 0, 0, 9, 1, 1, 0, 1, 0.16666666666666666, ["mov     ecx, 2", "lea     rdi, aC; \"C\"", "mov     rsi, p", "repe cmpsb", "setnbe  cl", "sbb     cl, 0", "mov     eax, 0", "test    cl, cl", "jz      short loc_117BF"], ["mov~ecx,0", "lea~rdi,<TAG>", "mov~rsi,p", "cmpsb~<TAG>,<TAG>", "setnbe~cl", "sbb~cl,0", "mov~eax,0", "test~cl,cl", "jz~FOO"]], [2, 0, 1, 0, 0, 8, 1, 0, 0, 1, 0.0, ["mov     ecx, 6", "lea     rdi, aPosix; \"POSIX\"", "mov     rsi, rdx", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "setnz   al"], ["mov~ecx,0", "lea~rdi,<TAG>", "mov~rsi,rdx", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "setnz~al"]]], "func_feature": [1, 3, 3, 0, 4, 5, 1, 26, 0.04167, 2, 2], "succs": [[1, 2], [], [1, 3], [1]], "fname": "hard_locale", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.08333333333333333, ["mov     eax, 0", "jmp     short loc_117E6"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 0, 0, 0.0, ["movzx   ecx, byte ptr [s]", "test    cl, cl", "jz      short loc_117F2"], ["movzx~ecx,<TAG>", "test~cl,cl", "jz~FOO"]], [1, 0, 2, 0, 0, 1, 0, 0, 1, 0, 0.08333333333333333, ["mov     eax, 0"], ["mov~eax,0"]], [2, 0, 2, 2, 0, 7, 1, 1, 2, 0, 0.08333333333333333, ["rol     h, 9", "movsx   rcx, cl", "add     rax, rcx", "add     s, 1", "movzx   ecx, byte ptr [s]", "test    cl, cl", "jnz     short loc_117D0"], ["rol~h,0", "movsx~rcx,cl", "add~rax,rcx", "add~s,0", "movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 2, 0, 0.0, ["mov     edx, 0", "div     tablesize", "mov     rax, rdx", "retn"], ["mov~edx,0", "div~,tablesize", "mov~rax,rdx", "retn"]]], "func_feature": [0, 2, 3, 0, 5, 6, 1, 17, 0.05, 0, 3], "succs": [[4], [0, 2], [3], [3, 4], []], "fname": "hash_pjw", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 0, 3, 1, 1, 5, 1, 2, 0, 0, 0.0, ["sub     rsp, 8", "mov     edi, 0Eh; item", "call    _nl_langinfo", "test    codeset, codeset", "jz      short loc_1181F"], ["sub~rsp,0", "mov~edi,0", "call~FOO", "test~codeset,codeset", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.08333333333333333, ["lea     codeset, aAscii; \"ASCII\"", "jmp     short loc_1181A"], ["lea~codeset,<TAG>", "jmp~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 1, 0, 0, 3, 0, 0, 0, -1, 0.08333333333333333, ["cmp     byte ptr [codeset], 0", "lea     rdx, aAscii; \"ASCII\"", "cmovz   codeset, rdx"], ["cmp~<TAG>,0", "lea~rdx,<TAG>", "cmovz~codeset,rdx"]]], "func_feature": [1, 1, 3, 0, 4, 4, 1, 12, 0.04167, 1, 2], "succs": [[1, 3], [2], [], [2]], "fname": "locale_charset", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 1, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 58h", "retn"], ["add~rsp,<STR>", "retn"]], [1, 0, 2, 0, 2, 7, 1, 3, 1, 1, 0.3333333333333333, ["mov     eax, 0", "call    _openat", "mov     edi, eax; fd", "call    fd_safer", "mov     rsi, [rsp+58h+var_40]", "xor     rsi, fs:28h", "jnz     short loc_11892"], ["mov~eax,0", "call~FOO", "mov~edi,eax", "call~FOO", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [2, 1, 4, 1, 0, 8, 2, 1, 0, 2, 0.0, ["sub     rsp, 58h", "mov     [rsp+58h+var_20], rcx", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "mov     ecx, 0", "test    dl, 40h", "jnz     short loc_11871"], ["sub~rsp,<STR>", "mov~[rsp+0],rcx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~ecx,0", "test~dl,0", "jnz~FOO"]], [0, 1, 3, 0, 0, 7, 0, 1, 1, 2, 0.0, ["lea     rax, [rsp+58h+arg_0]", "mov     [rsp+58h+ap.overflow_arg_area], rax", "lea     rax, [rsp+58h+var_38]", "mov     [rsp+58h+ap.reg_save_area], rax", "mov     [rsp+58h+ap.gp_offset], 20h ; ' '", "mov     ecx, dword ptr [rsp+58h+var_20]", "jmp     short loc_1184B"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~<TAG>,<STR>", "mov~ecx,[word ptr [rsp+0]", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 3, 6, 3, 5, 5, 1, 25, 0.06667, 1, 2], "succs": [[], [0, 4], [1, 3], [1], []], "fname": "openat_safer", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[3, 0, 0, 0, 1, 9, 0, 1, 0, 0, 0.0, ["push    rbx", "mov     rbx, source", "mov     edi, 18h; n", "call    xmalloc", "mov     [s], source", "mov     qword ptr [s+10h], 0", "mov     qword ptr [s+8], 0", "pop     source", "retn"], ["push~rbx", "mov~rbx,source", "mov~edi,0", "call~FOO", "mov~<TAG>,source", "mov~[word ptr [s+0],0", "mov~[word ptr [s+0],0", "pop~source", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 9, 0.0, 0, 0], "succs": [[]], "fname": "randint_new", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.08333333333333333, ["mov     eax, 0", "jmp     short loc_118D0"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 1, 1, 4, 1, 2, 0, 0, 0.0, ["sub     rsp, 8", "call    randread_new", "test    source, source", "jz      short loc_118D5"], ["sub~rsp,0", "call~FOO", "test~source,source", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 1, 0, 0.08333333333333333, ["mov     rdi, source; source", "call    randint_new"], ["mov~rdi,source", "call~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 2, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [2, 1, 4, 0, 4, 4, 1, 10, 0.04167, 0, 2], "succs": [[3], [0, 2], [3], []], "fname": "randint_all_new", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [s]", "retn"], ["mov~rax,<TAG>", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "randint_get_source", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 14, 0, 0, 2, 0, 0, 0, 0, 0.25824175824175827, ["cmp     randmax, genmax", "jnb     short loc_1191F"], ["cmp~randmax,genmax", "jnb~FOO"]], [1, 0, 14, 1, 0, 19, 1, 1, 0, 5, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 28h", "mov     r14, s", "mov     r12, genmax", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "mov     rax, [s]", "mov     [rsp+58h+source], rax", "mov     rbp, [s+8]", "mov     rbx, [s+10h]", "lea     r13, [genmax+1]", "lea     r15, [rsp+58h+buf]", "jmp     short loc_1195D"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r14,s", "mov~r12,genmax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "mov~rbp,[s+0]", "mov~rbx,[s+0]", "lea~r13,[genmax+0]", "lea~r15,[rsp+0]", "jmp~FOO"]], [0, 0, 14, 0, 0, 2, 0, 0, 4, 5, 0.15934065934065936, ["lea     last_usable_choice, [unusable_choices-1]", "mov     rbp, reduced_randnum"], ["lea~last_usable_choice,[unusable_choices-1]+0]", "mov~rbp,reduced_randnum"]], [1, 0, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     genmax", "pop     choices", "pop     s", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~genmax", "pop~choices", "pop~s", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 4, 1, 0.13186813186813187, ["mov     rax, rbp", "mov     rdi, [rsp+58h+var_40]", "xor     rdi, fs:28h", "jnz     short loc_11A05"], ["mov~rax,rbp", "mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "jnz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 2, 3, 0.39010989010989017, ["cmp     randmax, genmax", "jz      loc_119B0"], ["cmp~randmax,genmax", "jz~FOO"]], [0, 0, 14, 0, 0, 1, 0, 1, 6, 4, 0.23076923076923078, ["jmp     loc_1191F"], ["jmp~FOO"]], [2, 0, 3, 2, 0, 10, 0, 1, 4, 2, 0.016483516483516484, ["mov     rax, randnum", "mov     edx, 0", "div     choices", "mov     [s+8], rax", "mov     rax, excess_choices", "mov     edx, 0", "div     choices", "mov     [s+10h], rax", "mov     randnum, reduced_randnum", "jmp     short loc_119C0"], ["mov~rax,randnum", "mov~edx,0", "div~,choices", "mov~[s+0],rax", "mov~rax,excess_choices", "mov~edx,0", "div~,choices", "mov~[s+0],rax", "mov~randnum,reduced_randnum", "jmp~FOO"]], [2, 0, 14, 4, 0, 13, 0, 0, 3, 3, 0.2087912087912088, ["mov     rcx, randmax", "sub     rcx, genmax", "mov     rax, excess_choices", "mov     edx, 0", "div     choices", "mov     rsi, rdx", "mov     rax, randnum", "mov     edx, 0", "div     choices", "mov     rdi, rdx", "sub     randmax, unusable_choices", "cmp     randnum, last_usable_choice", "jbe     loc_119E2"], ["mov~rcx,randmax", "sub~rcx,genmax", "mov~rax,excess_choices", "mov~edx,0", "div~,choices", "mov~rsi,rdx", "mov~rax,randnum", "mov~edx,0", "div~,choices", "mov~rdi,rdx", "sub~randmax,unusable_choices", "cmp~randnum,last_usable_choice", "jbe~FOO"]], [1, 0, 14, 0, 0, 2, 0, 0, 2, 8, 0.14285714285714288, ["mov     rax, randmax", "mov     edx, 0"], ["mov~rax,randmax", "mov~edx,0"]], [4, 0, 14, 5, 0, 8, 0, 1, 5, 5, 0.2087912087912088, ["shl     randnum, 8", "movzx   eax, byte ptr [rcx]", "add     rbp, rax", "shl     randmax, 8", "add     rbx, 0FFh", "add     rcx, 1", "cmp     genmax, randmax", "ja      short loc_1198D"], ["shl~randnum,0", "movzx~eax,<TAG>", "add~rbp,rax", "shl~randmax,0", "add~rbx,0", "add~rcx,0", "cmp~genmax,randmax", "ja~FOO"]], [0, 0, 14, 0, 1, 4, 0, 1, 4, 6, 0.18681318681318682, ["mov     rsi, r15; buf", "mov     rdi, [rsp+58h+source]; s", "call    randread", "mov     rcx, r15"], ["mov~rsi,r15", "mov~rdi,[rsp+0]", "call~FOO", "mov~rcx,r15"]], [3, 0, 14, 3, 0, 5, 0, 1, 3, 7, 0.16483516483516486, ["shl     rmax, 8", "add     rax, 0FFh", "add     i, 1; size", "cmp     genmax, rmax", "ja      short loc_1196A"], ["shl~rmax,0", "add~rax,0", "add~i,0", "cmp~genmax,rmax", "ja~FOO"]], [2, 0, 3, 0, 0, 2, 0, 0, 3, 2, 0.14835164835164835, ["mov     qword ptr [s+10h], 0", "mov     qword ptr [s+8], 0"], ["mov~[word ptr [s+0],0", "mov~[word ptr [s+0],0"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 2, 9, 1, 15, 19, 1, 83, 0.14982, 1, 16], "succs": [[9, 5], [0], [0], [], [3, 14], [8, 13], [5], [4], [2, 7], [12], [10, 6], [10], [11, 12], [4], []], "fname": "randint_genmax", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 0, 0, 0, 2, 9, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, s", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 18h", "call    ___explicit_bzero_chk", "mov     rdi, s; ptr", "call    free", "pop     s", "retn"], ["push~rbx", "mov~rbx,s", "mov~rdx,0", "mov~esi,0", "call~FOO", "mov~rdi,s", "call~FOO", "pop~s", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 1, 9, 0.0, 0, 0], "succs": [[]], "fname": "randint_free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 0, 0, 2, 3, 22, 0, 3, 0, 0, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbp, s", "mov     s, [s]; s", "call    randread_free", "mov     r12d, eax", "call    ___errno_location", "mov     rbx, rax", "mov     r13d, [rax]", "mov     rdi, s; s", "call    randint_free", "mov     [rbx], r13d", "mov     eax, r12d", "add     rsp, 8", "pop     rbx", "pop     s", "pop     r", "pop     e", "retn"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,s", "mov~s,<TAG>", "call~FOO", "mov~r12d,eax", "call~FOO", "mov~rbx,rax", "mov~r13d,<TAG>", "mov~rdi,s", "call~FOO", "mov~<TAG>,r13d", "mov~eax,r12d", "add~rsp,0", "pop~rbx", "pop~s", "pop~r", "pop~e", "retn"]]], "func_feature": [3, 0, 3, 0, 1, 0, 2, 22, 0.0, 0, 2], "succs": [[]], "fname": "randint_all_free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 4, 0, 2, 6, 0, 3, 0, 0, 0.15000000000000002, ["call    quote", "mov     rbp, rax", "call    ___errno_location", "mov     rbx, rax", "cmp     dword ptr [rax], 0", "jnz     short loc_11AB8"], ["call~FOO", "mov~rbp,rax", "call~FOO", "mov~rbx,rax", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 5, 1, 0, 5, 1, 1, 0, 2, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "test    file_name, file_name", "jz      short loc_11AB3"], ["push~rbp", "push~rbx", "sub~rsp,0", "test~file_name,file_name", "jz~FOO"]], [2, 0, 2, 0, 1, 5, 0, 2, 2, 0, 0.07500000000000001, ["mov     edx, 5; category", "lea     rsi, aSReadError; \"%s: read error\"", "mov     edi, 0; domainname", "call    _dcgettext", "jmp     short loc_11A9B"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 1, 0, 1, 6, 0, 1, 3, -1, 0.15000000000000002, ["mov     edi, cs:exit_failure; status", "mov     rcx, rbp", "mov     rdx, rax; format", "mov     esi, [rbx]; errnum", "mov     eax, 0", "call    _error"], ["mov~edi,<TAG>", "mov~rcx,rbp", "mov~rdx,rax", "mov~esi,<TAG>", "mov~eax,0", "call~FOO"]], [2, 0, 2, 0, 1, 4, 0, 1, 2, -1, 0.07500000000000001, ["mov     edx, 5; category", "lea     rsi, aSEndOfFile; \"%s: end of file\"", "mov     edi, 0; domainname", "call    _dcgettext"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO"]]], "func_feature": [6, 1, 9, 0, 6, 7, 0, 27, 0.075, 3, 1], "succs": [[2, 5], [0, 3], [4], [], [3], [4]], "fname": "randread_error", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[3, 0, 8, 2, 2, 12, 0, 2, 0, 0, 0.02894736842105263, ["mov     ebp, 800h", "sub     rbp, r13", "cmp     rbp, 4", "mov     eax, 4", "cmova   rbp, rax", "call    _getppid", "mov     dword ptr [rsp+48h+var_48], eax", "lea     rdi, [r12+r13]; dest", "mov     rsi, rsp; src", "mov     rdx, rbp; n", "call    _memcpy", "add     rbp, r13"], ["mov~ebp,0", "sub~rbp,r13", "cmp~rbp,0", "mov~eax,0", "cmova~rbp,rax", "call~FOO", "mov~<TAG>,eax", "lea~rdi,<TAG>", "mov~rsi,rsp", "mov~rdx,rbp", "call~FOO", "add~rbp,r13"]], [4, 0, 9, 2, 2, 14, 0, 3, 4, 3, 0.06315789473684211, ["mov     ebp, 800h", "sub     rbp, r13", "cmp     rbp, 4", "mov     eax, 4", "cmova   rbp, rax", "call    _getpid", "mov     dword ptr [rsp+48h+var_48], eax", "lea     rdi, [r12+r13]; dest", "mov     rsi, rsp; src", "mov     rdx, rbp; n", "call    _memcpy", "add     r13, rbp", "cmp     r13, 7FFh", "ja      short loc_11CCC"], ["mov~ebp,0", "sub~rbp,r13", "cmp~rbp,0", "mov~eax,0", "cmova~rbp,rax", "call~FOO", "mov~<TAG>,eax", "lea~rdi,<TAG>", "mov~rsi,rsp", "mov~rdx,rbp", "call~FOO", "add~r13,rbp", "cmp~r13,0", "ja~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 6, 3, 0.07105263157894737, ["cmp     rbp, 7FFh", "ja      loc_11CCC"], ["cmp~rbp,0", "ja~FOO"]], [0, 0, 8, 0, 0, 2, 0, 1, 5, 4, 0.02368421052631579, ["mov     rbp, r13", "jmp     loc_11D64"], ["mov~rbp,r13", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.09473684210526316, ["mov     rax, rbx", "mov     rdx, [rsp+48h+var_30]", "xor     rdx, fs:28h", "jnz     loc_11DA6"], ["mov~rax,rbx", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 0, 4, 3, 0.05789473684210526, ["cmp     rbp, 7FFh", "jbe     loc_11BF6"], ["cmp~rbp,0", "jbe~FOO"]], [3, 0, 6, 2, 2, 13, 0, 3, 7, 4, 0.031578947368421054, ["mov     r13d, 800h", "sub     r13, rbp", "cmp     r13, 4", "mov     eax, 4", "cmova   r13, rax", "call    _getuid", "mov     dword ptr [rsp+48h+var_48], eax", "lea     rdi, [r12+rbp]; dest", "mov     rsi, rsp; src", "mov     rdx, r13; n", "call    _memcpy", "add     rbp, r13", "jmp     loc_11CBF"], ["mov~r13d,0", "sub~r13,rbp", "cmp~r13,0", "mov~eax,0", "cmova~r13,rax", "call~FOO", "mov~<TAG>,eax", "lea~rdi,<TAG>", "mov~rsi,rsp", "mov~rdx,r13", "call~FOO", "add~rbp,r13", "jmp~FOO"]], [4, 1, 12, 0, 2, 14, 1, 2, 3, 4, 0.04736842105263158, ["cmp     bytes_bound, 800h", "mov     edx, 800h", "cmovbe  rdx, bytes_bound", "mov     ecx, 1018h", "mov     rsi, r12", "mov     edi, r13d", "call    ___read_chk", "test    rax, rax", "mov     ebp, 0", "cmovns  rbp, rax", "mov     edi, r13d; fd", "call    _close", "cmp     rbp, 7FFh", "jbe     loc_11BA9"], ["cmp~bytes_bound,0", "mov~edx,0", "cmovbe~rdx,bytes_bound", "mov~ecx,<STR>", "mov~rsi,r12", "mov~edi,r13d", "call~FOO", "test~rax,rax", "mov~ebp,0", "cmovns~rbp,rax", "mov~edi,r13d", "call~FOO", "cmp~rbp,0", "jbe~FOO"]], [3, 0, 3, 0, 1, 8, 0, 2, 1, 2, 0.007894736842105263, ["mov     edi, 1038h; n", "call    xmalloc", "mov     rbx, rax", "mov     qword ptr [rax], 0", "lea     rax, randread_error", "mov     [rbx+8], rax", "mov     qword ptr [rbx+10h], 0", "jmp     short loc_11B5C"], ["mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,0", "lea~rax,<TAG>", "mov~[rbx+0],rax", "mov~[word ptr [rbx+0],0", "jmp~FOO"]], [0, 1, 20, 1, 0, 11, 2, 1, 0, 3, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 20h", "mov     rax, fs:28h", "mov     [rsp+48h+var_30], rax", "xor     eax, eax", "test    bytes_bound, bytes_bound", "jz      loc_11B80"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~bytes_bound,bytes_bound", "jz~FOO"]], [5, 0, 11, 2, 2, 16, 0, 2, 4, 4, 0.02894736842105263, ["mov     r13d, 800h", "sub     r13, rbp", "cmp     r13, 10h", "mov     eax, 10h", "cmova   r13, rax", "mov     r14, rsp", "mov     esi, 0; tz", "mov     rdi, r14; tv", "call    _gettimeofday", "lea     rdi, [r12+rbp]; dest", "mov     rdx, r13; n", "mov     rsi, r14; src", "call    _memcpy", "add     r13, rbp", "cmp     r13, 7FFh", "jbe     loc_11CFD"], ["mov~r13d,0", "sub~r13,rbp", "cmp~r13,0", "mov~eax,0", "cmova~r13,rax", "mov~r14,rsp", "mov~esi,0", "mov~rdi,r14", "call~FOO", "lea~rdi,<TAG>", "mov~rdx,r13", "mov~rsi,r14", "call~FOO", "add~r13,rbp", "cmp~r13,0", "jbe~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, 2, 0.007894736842105263, ["mov     ebx, 0", "jmp     loc_11B5C"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 2, 3, 0.018421052631578946, ["lea     bytes_bound, mode; \"rb\"", "call    fopen_safer", "mov     r13, rax", "test    source, source", "jz      loc_11C24"], ["lea~bytes_bound,<TAG>", "call~FOO", "mov~r13,rax", "test~source,source", "jz~FOO"]], [2, 0, 10, 0, 1, 8, 0, 1, 3, 4, 0.031578947368421054, ["mov     rdi, rsp; tv", "mov     esi, 0; tz", "call    _gettimeofday", "mov     rax, [rsp+48h+var_48]", "mov     rdx, [rsp+48h+var_40]", "mov     [rbx+20h], rax", "mov     [rbx+28h], rdx", "mov     r13d, 10h"], ["mov~rdi,rsp", "mov~esi,0", "call~FOO", "mov~rax,<TAG>", "mov~rdx,[rsp+0]", "mov~[rbx+0],rax", "mov~[rbx+0],rdx", "mov~r13d,0"]], [6, 0, 14, 0, 2, 16, 1, 3, 2, 5, 0.05789473684210526, ["mov     edi, 1038h; n", "call    xmalloc", "mov     rbx, rax", "mov     qword ptr [rax], 0", "lea     rax, randread_error", "mov     [rbx+8], rax", "mov     qword ptr [rbx+10h], 0", "mov     qword ptr [rbx+18h], 0", "lea     name, [rbx+20h]", "mov     esi, 0; oflag", "lea     rdi, aDevUrandom; \"/dev/urandom\"", "mov     eax, 0", "call    _open", "mov     r13d, eax", "test    eax, eax", "js      short loc_11CD9"], ["mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,0", "lea~rax,<TAG>", "mov~[rbx+0],rax", "mov~[word ptr [rbx+0],0", "mov~[word ptr [rbx+0],0", "lea~name,[rbx+0]", "mov~esi,0", "lea~rdi,<TAG>", "mov~eax,0", "call~FOO", "mov~r13d,eax", "test~eax,eax", "js~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 5, 2, 0.08684210526315789, ["mov     rdi, r12; s", "call    isaac_seed", "jmp     loc_11B5C"], ["mov~rdi,r12", "call~FOO", "jmp~FOO"]], [2, 2, 3, 0, 2, 14, 0, 2, 3, 2, 0.007894736842105263, ["mov     edi, 1038h; n", "call    xmalloc", "mov     rbx, rax", "mov     [rax], source", "lea     rax, randread_error", "mov     [rbx+8], rax", "mov     [rbx+10h], name", "cmp     bytes_bound, 1000h", "mov     ecx, 1000h", "cmovbe  rcx, bytes_bound; n", "lea     rsi, [rbx+18h]; buf", "mov     edx, 0; modes", "mov     rdi, source; stream", "call    _setvbuf"], ["mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,source", "lea~rax,<TAG>", "mov~[rbx+0],rax", "mov~[rbx+0],name", "cmp~bytes_bound,<STR>", "mov~ecx,<STR>", "cmovbe~rcx,bytes_bound", "lea~rsi,[rbx+0]", "mov~edx,0", "mov~rdi,source", "call~FOO"]], [3, 0, 4, 1, 2, 11, 0, 3, 5, 3, 0.0, ["call    _getgid", "mov     dword ptr [rsp+48h+var_48], eax", "lea     rdi, [r12+rbp]; dest", "mov     edx, 800h", "sub     rdx, rbp", "cmp     rdx, 4", "mov     eax, 4", "cmova   rdx, rax; n", "mov     rsi, rsp; src", "call    _memcpy", "jmp     loc_11CCC"], ["call~FOO", "mov~<TAG>,eax", "lea~rdi,<TAG>", "mov~edx,0", "sub~rdx,rbp", "cmp~rdx,0", "mov~eax,0", "cmova~rdx,rax", "mov~rsi,rsp", "call~FOO", "jmp~FOO"]], [0, 0, 18, 0, 0, 4, 1, 1, 1, 4, 0.039473684210526314, ["mov     r12, name", "mov     rbp, bytes_bound", "test    name, name", "jz      loc_11C2E"], ["mov~r12,name", "mov~rbp,bytes_bound", "test~name,name", "jz~FOO"]], [0, 1, 0, 1, 0, 7, 0, 0, 3, -1, 0.0, ["add     rsp, 20h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "retn"]]], "func_feature": [21, 7, 34, 3, 21, 29, 1, 169, 0.03358, 4, 11], "succs": [[2], [0, 16], [16, 7], [2], [], [20, 4], [16, 18], [6], [11, 6], [5], [9, 19], [1, 3], [5], [17, 12], [1], [8, 14], [5], [5], [16], [13, 15], []], "fname": "randread_new", "n_num": 21}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     [s+8], handler", "retn"], ["mov~[s+0],handler", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "randread_set_handler", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     [s+10h], handler_arg", "retn"], ["mov~[s+0],handler_arg", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "randread_set_handler_arg", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 11, 0, 0, 4, 0, 1, 0, 0, 0.05494505494505495, ["mov     r13, [s+18h]", "lea     r14, [s+838h]", "cmp     size, r13", "ja      short loc_11E80"], ["mov~r13,[s+0]", "lea~r14,[s+0]", "cmp~size,r13", "ja~FOO"]], [2, 0, 14, 1, 0, 12, 0, 1, 0, 6, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r12, s", "mov     rbp, buf", "mov     rbx, size", "cmp     qword ptr [s], 0", "jz      short loc_11E12"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r12,s", "mov~rbp,buf", "mov~rbx,size", "cmp~<TAG>,0", "jz~FOO"]], [0, 1, 3, 0, 1, 8, 1, 2, 2, -1, 0.0, ["mov     rdx, [s]", "mov     edx, [rdx]", "and     edx, 20h", "cmovz   ecx, edx", "mov     [rax], ecx", "mov     rdi, [s+10h]", "call    qword ptr [s+8]", "jmp     short loc_11DD2"], ["mov~rdx,<TAG>", "mov~edx,<TAG>", "and~edx,<STR>", "cmovz~ecx,edx", "mov~<TAG>,ecx", "mov~rdi,[s+0]", "call~[word ptr [s+0]", "jmp~FOO"]], [1, 0, 3, 2, 2, 11, 0, 3, 1, -1, 0.016483516483516484, ["mov     rcx, [s]; stream", "mov     rdx, rbx; n", "mov     esi, 1; size", "mov     rdi, rbp; ptr", "call    _fread_unlocked", "mov     r13, rax", "call    ___errno_location", "mov     ecx, [rax]", "add     rbp, r13", "sub     rbx, r13", "jz      short loc_11E55"], ["mov~rcx,<TAG>", "mov~rdx,rbx", "mov~esi,0", "mov~rdi,rbp", "call~FOO", "mov~r13,rax", "call~FOO", "mov~ecx,<TAG>", "add~rbp,r13", "sub~rbx,r13", "jz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 1, 2, -1, 0.016483516483516484, ["jmp     short loc_11E2A"], ["jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     s", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~s", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 1, 2, 1, 9, 0, 2, 3, -1, 0.030219780219780223, ["mov     rax, s", "sub     rax, r13", "lea     rsi, [rax+1038h]; src", "mov     rdx, rbx; n", "mov     rdi, rbp; dest", "call    _memcpy", "sub     r13, rbx", "mov     [s+18h], r13", "jmp     short loc_11E55"], ["mov~rax,s", "sub~rax,r13", "lea~rsi,[rax+0]", "mov~rdx,rbx", "mov~rdi,rbp", "call~FOO", "sub~r13,rbx", "mov~[s+0],r13", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 5, -1, 0.019230769230769232, ["mov     qword ptr [s+18h], 0"], ["mov~[word ptr [s+0],0"]], [1, 0, 2, 0, 0, 1, 0, 0, 4, -1, 0.046703296703296704, ["mov     r13d, 800h"], ["mov~r13d,0"]], [2, 0, 10, 0, 1, 6, 0, 1, 3, 5, 0.12912087912087913, ["lea     rdi, [s+20h]; s", "mov     rsi, r14; result", "call    isaac_refill", "mov     r13d, 800h", "cmp     rbx, 800h", "jbe     short loc_11E24"], ["lea~rdi,[s+0]", "mov~rsi,r14", "call~FOO", "mov~r13d,0", "cmp~rbx,0", "jbe~FOO"]], [0, 0, 10, 0, 0, 2, 0, 1, 5, 1, 0.06043956043956045, ["cmp     r15, rbx", "jnz     short loc_11EBC"], ["cmp~r15,rbx", "jnz~FOO"]], [2, 0, 10, 2, 1, 6, 0, 2, 4, 2, 0.11263736263736264, ["mov     rsi, rbp; result", "mov     rdi, r13; s", "call    isaac_refill", "add     rbp, 800h", "sub     rbx, 800h", "jz      loc_11E4C"], ["mov~rsi,rbp", "mov~rdi,r13", "call~FOO", "add~rbp,0", "sub~rbx,0", "jz~FOO"]], [1, 0, 10, 3, 1, 10, 1, 2, 2, 4, 0.13736263736263737, ["mov     rax, r14", "sub     rax, r13", "lea     rsi, [rax+800h]; src", "mov     rdx, r13; n", "mov     rdi, rbp; dest", "call    _memcpy", "add     rbp, r13", "sub     rbx, r13", "test    bpl, 7", "jnz     short loc_11E64"], ["mov~rax,r14", "sub~rax,r13", "lea~rsi,[rax+0]", "mov~rdx,r13", "mov~rdi,rbp", "call~FOO", "add~rbp,r13", "sub~rbx,r13", "test~bpl,0", "jnz~FOO"]], [2, 0, 10, 0, 0, 5, 1, 0, 3, 3, 0.10714285714285715, ["mov     r15, rbx", "and     r15d, 7FFh", "lea     r13, [s+20h]", "cmp     rbx, 7FFh", "jbe     short loc_11E64"], ["mov~r15,rbx", "and~r15d,0", "lea~r13,[s+0]", "cmp~rbx,0", "jbe~FOO"]], [0, 0, 10, 0, 0, 1, 0, 1, 6, 0, 0.05494505494505495, ["jmp     short loc_11E64"], ["jmp~FOO"]]], "func_feature": [7, 3, 17, 0, 15, 22, 1, 85, 0.05238, 0, 11], "succs": [[12, 4], [0, 3], [3], [2, 5], [6], [], [5], [5], [6], [8, 12], [11, 14], [10, 7], [9, 13], [9, 11], [9]], "fname": "randread", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 0, 1, 0, 4, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "pop     s", "pop     source", "retn"], ["add~rsp,0", "pop~s", "pop~source", "retn"]], [4, 0, 2, 1, 2, 13, 1, 3, 0, 0, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbx, s", "mov     rbp, [s]", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1038h", "call    ___explicit_bzero_chk", "mov     rdi, s; ptr", "call    free", "mov     eax, 0", "test    source, source", "jz      short loc_11F19"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,s", "mov~rbp,<TAG>", "mov~rdx,0", "mov~esi,0", "call~FOO", "mov~rdi,s", "call~FOO", "mov~eax,0", "test~source,source", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 1, 0, 0.0, ["mov     rdi, source; fp", "call    rpl_fclose"], ["mov~rdi,source", "call~FOO"]]], "func_feature": [3, 1, 4, 0, 3, 3, 1, 19, 0.0, 0, 2], "succs": [[], [0, 2], [0]], "fname": "randread_free", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0.3333333333333333, ["lea     r10, [rdi+800h]"], ["lea~r10,[rdi+0]"]], [16, 2, 4, 20, 0, 71, 12, 0, 1, 3, 0.25, ["mov     r9, a", "shl     r9, 15h", "xor     a, r9", "not     rdx", "add     rdx, [m+400h]", "mov     r9, [m]", "mov     r11, x", "and     r11d, 7F8h", "mov     rbx, a", "add     rbx, [s+r11]", "add     b, rbx", "mov     [m], y", "shr     y, 8", "and     r8d, 7F8h", "mov     rbx, x", "add     rbx, [s+r8]", "mov     [r], rbx", "mov     r11, a", "shr     r11, 5", "xor     a, r11", "add     rdx, [m+408h]", "mov     r11, rdx", "mov     r8, [m+8]", "mov     a, r8", "and     edx, 7F8h", "mov     x, a", "add     r9, [s+rdx]", "add     r9, rbx", "mov     [m+8], y", "shr     y, 8", "and     r9d, 7F8h", "mov     rbx, r8", "add     rbx, [s+r9]", "mov     [r+8], rbx", "mov     rdx, a", "shl     rdx, 0Ch", "xor     rdx, a", "add     rdx, [m+410h]", "mov     r9, [m+10h]", "mov     r8, x", "and     r8d, 7F8h", "mov     r11, a", "add     r11, [s+r8]", "mov     r8, r11", "add     r8, rbx", "mov     [m+10h], y", "shr     y, 8", "and     r8d, 7F8h", "mov     r11, x", "add     r11, [s+r8]", "mov     [r+10h], r11", "mov     r8, a", "shr     r8, 21h", "xor     a, r8", "add     rdx, [m+418h]", "mov     r8, [m+18h]", "mov     x, r8", "and     r9d, 7F8h", "mov     rbx, a", "add     rbx, [s+r9]", "mov     r9, rbx", "add     r9, r11", "mov     [m+18h], y", "shr     y, 8", "and     r9d, 7F8h", "add     r8, [s+r9]", "mov     [r+18h], r8", "add     r, 20h", "add     m, 20h", "cmp     m, r10", "jb      loc_11F4E"], ["mov~r9,a", "shl~r9,0", "xor~a,r9", "not~rdx", "add~rdx,[m+0]", "mov~r9,<TAG>", "mov~r11,x", "and~r11d,0", "mov~rbx,a", "add~rbx,<TAG>", "add~b,rbx", "mov~<TAG>,y", "shr~y,0", "and~r8d,0", "mov~rbx,x", "add~rbx,<TAG>", "mov~<TAG>,rbx", "mov~r11,a", "shr~r11,0", "xor~a,r11", "add~rdx,[m+0]", "mov~r11,rdx", "mov~r8,[m+0]", "mov~a,r8", "and~edx,0", "mov~x,a", "add~r9,<TAG>", "add~r9,rbx", "mov~[m+0],y", "shr~y,0", "and~r9d,0", "mov~rbx,r8", "add~rbx,<TAG>", "mov~[r+0],rbx", "mov~rdx,a", "shl~rdx,0", "xor~rdx,a", "add~rdx,[m+0]", "mov~r9,[m+0]", "mov~r8,x", "and~r8d,0", "mov~r11,a", "add~r11,<TAG>", "mov~r8,r11", "add~r8,rbx", "mov~[m+0],y", "shr~y,0", "and~r8d,0", "mov~r11,x", "add~r11,<TAG>", "mov~[r+0],r11", "mov~r8,a", "shr~r8,0", "xor~a,r8", "add~rdx,[m+0]", "mov~r8,[m+0]", "mov~x,r8", "and~r9d,0", "mov~rbx,a", "add~rbx,<TAG>", "mov~r9,rbx", "add~r9,r11", "mov~[m+0],y", "shr~y,0", "and~r9d,0", "add~r8,<TAG>", "mov~[r+0],r8", "add~r,<STR>", "add~m,<STR>", "cmp~m,r10", "jb~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 4, 0, 0.0, ["mov     [rdi+800h], a", "mov     [rdi+808h], r8", "pop     rbx", "retn"], ["mov~[rdi+0],a", "mov~[rdi+0],r8", "pop~rbx", "retn"]], [16, 2, 2, 20, 0, 71, 12, 0, 3, 1, 0.25, ["mov     r9, a", "shl     r9, 15h", "xor     a, r9", "not     rdx", "add     rdx, [m-400h]", "mov     r9, [m]", "mov     r11, x", "and     r11d, 7F8h", "mov     rbx, a", "add     rbx, [s+r11]", "add     b, rbx", "mov     [m], y", "shr     y, 8", "and     r8d, 7F8h", "mov     rbx, x", "add     rbx, [s+r8]", "mov     [r], rbx", "mov     r11, a", "shr     r11, 5", "xor     a, r11", "add     rdx, [m-3F8h]", "mov     r11, rdx", "mov     r8, [m+8]", "mov     a, r8", "and     edx, 7F8h", "mov     x, a", "add     r9, [s+rdx]", "add     r9, rbx", "mov     [m+8], y", "shr     y, 8", "and     r9d, 7F8h", "mov     rbx, r8", "add     rbx, [s+r9]", "mov     [r+8], rbx", "mov     rdx, a", "shl     rdx, 0Ch", "xor     rdx, a", "add     rdx, [m-3F0h]", "mov     r9, [m+10h]", "mov     r8, x", "and     r8d, 7F8h", "mov     r11, a", "add     r11, [s+r8]", "mov     r8, r11", "add     r8, rbx", "mov     [m+10h], y", "shr     y, 8", "and     r8d, 7F8h", "mov     r11, x", "add     r11, [s+r8]", "mov     [r+10h], r11", "mov     r8, a", "shr     r8, 21h", "xor     a, r8", "add     rdx, [m-3E8h]", "mov     r8, [m+18h]", "mov     x, r8", "and     r9d, 7F8h", "mov     rbx, a", "add     rbx, [s+r9]", "mov     r9, rbx", "add     r9, r11", "mov     [m+18h], y", "shr     y, 8", "and     r9d, 7F8h", "add     r8, [s+r9]", "mov     [r+18h], r8", "add     r, 20h", "add     m, 20h", "cmp     m, r10", "jb      loc_12077"], ["mov~r9,a", "shl~r9,0", "xor~a,r9", "not~rdx", "add~rdx,[m-400h]+0]", "mov~r9,<TAG>", "mov~r11,x", "and~r11d,0", "mov~rbx,a", "add~rbx,<TAG>", "add~b,rbx", "mov~<TAG>,y", "shr~y,0", "and~r8d,0", "mov~rbx,x", "add~rbx,<TAG>", "mov~<TAG>,rbx", "mov~r11,a", "shr~r11,0", "xor~a,r11", "add~rdx,[m-3F8h]+0]", "mov~r11,rdx", "mov~r8,[m+0]", "mov~a,r8", "and~edx,0", "mov~x,a", "add~r9,<TAG>", "add~r9,rbx", "mov~[m+0],y", "shr~y,0", "and~r9d,0", "mov~rbx,r8", "add~rbx,<TAG>", "mov~[r+0],rbx", "mov~rdx,a", "shl~rdx,0", "xor~rdx,a", "add~rdx,[m-3F0h]+0]", "mov~r9,[m+0]", "mov~r8,x", "and~r8d,0", "mov~r11,a", "add~r11,<TAG>", "mov~r8,r11", "add~r8,rbx", "mov~[m+0],y", "shr~y,0", "and~r8d,0", "mov~r11,x", "add~r11,<TAG>", "mov~[r+0],r11", "mov~r8,a", "shr~r8,0", "xor~a,r8", "add~rdx,[m-3E8h]+0]", "mov~r8,[m+0]", "mov~x,r8", "and~r9d,0", "mov~rbx,a", "add~rbx,<TAG>", "mov~r9,rbx", "add~r9,r11", "mov~[m+0],y", "shr~y,0", "and~r9d,0", "add~r8,<TAG>", "mov~[r+0],r8", "add~r,<STR>", "add~m,<STR>", "cmp~m,r10", "jb~FOO"]], [0, 0, 4, 1, 0, 9, 0, 0, 0, 4, 0.0, ["push    rbx", "mov     rdx, [s+800h]", "mov     rax, [s+810h]", "lea     r8, [rax+1]", "mov     [s+810h], r8", "add     r8, [s+808h]", "mov     rcx, s", "mov     rax, m", "lea     r10, [m+400h]"], ["push~rbx", "mov~rdx,[s+0]", "mov~rax,[s+0]", "lea~r8,[rax+0]", "mov~[s+0],r8", "add~r8,[s+0]", "mov~rcx,s", "mov~rax,m", "lea~r10,[m+0]"]]], "func_feature": [0, 24, 0, 0, 5, 6, 2, 156, 0.16667, 0, 41], "succs": [[3], [0, 1], [], [2, 3], [1]], "fname": "isaac_refill", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[8, 0, 3, 0, 0, 15, 0, 0, 0, 0, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rdx, s", "lea     r12, [s+800h]", "mov     rax, s", "mov     rcx, 98F5704F6C44C0ABh", "mov     r10, 0AE985BF2CBFC89EDh", "mov     rbp, 48FE4A0FA5A09315h", "mov     rsi, 82F053DB8355E0CEh", "mov     r8, 0B29B2E824A595524h", "mov     rbx, 8C0EA5053D4712A0h", "mov     r11, 0B9F8B322C73AC862h", "mov     r9, 647C4677A2884B7Ch"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rdx,s", "lea~r12,[s+0]", "mov~rax,s", "mov~rcx,0", "mov~r10,0", "mov~rbp,0", "mov~rsi,0", "mov~r8,0", "mov~rbx,0", "mov~r11,0", "mov~r9,0"]], [3, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0.0, ["mov     qword ptr [s+810h], 0", "mov     qword ptr [s+808h], 0", "mov     qword ptr [s+800h], 0", "pop     c", "pop     f", "pop     r12", "pop     r13", "retn"], ["mov~[word ptr [s+0],0", "mov~[word ptr [s+0],0", "mov~[word ptr [s+0],0", "pop~c", "pop~f", "pop~r12", "pop~r13", "retn"]], [9, 0, 2, 28, 0, 63, 8, 1, 0, 1, 0.3333333333333333, ["add     e, [rdx+20h]", "add     f, [rdx+28h]", "add     g, [rdx+30h]", "add     h, [rdx+38h]", "mov     r12, [rdx]", "sub     r12, e", "add     r9, r12", "mov     r12, h", "shr     r12, 9", "xor     f, r12", "add     h, a", "mov     r12, [rdx+8]", "sub     r12, f", "add     r11, r12", "mov     r12, a", "shl     r12, 9", "xor     g, r12", "add     a, b", "mov     r12, [rdx+10h]", "sub     r12, g", "add     rbx, r12", "mov     r12, b", "shr     r12, 17h", "xor     h, r12", "add     b, c", "mov     r12, [rdx+18h]", "sub     r12, h", "add     r8, r12", "mov     r12, c", "shl     r12, 0Fh", "xor     a, r12", "add     c, d", "sub     e, a", "mov     r12, d", "shr     r12, 0Eh", "xor     b, r12", "add     d, e", "sub     f, b", "mov     r12, e", "shl     r12, 14h", "xor     c, r12", "lea     r12, [e+f]", "sub     g, c", "mov     rsi, f", "shr     rsi, 11h", "xor     d, rsi", "add     f, g", "sub     h, d", "mov     rsi, g", "shl     rsi, 0Eh", "xor     rsi, e", "add     g, h", "mov     [rdx], a", "mov     [rdx+8], b", "mov     [rdx+10h], c", "mov     [rdx+18h], d", "mov     [rdx+20h], e", "mov     [rdx+28h], f", "mov     [rdx+30h], g", "mov     [rdx+38h], h", "add     rdx, 40h", "cmp     rax, rdx", "jnz     loc_122E4"], ["add~e,[rdx+0]", "add~f,[rdx+0]", "add~g,[rdx+0]", "add~h,[rdx+0]", "mov~r12,<TAG>", "sub~r12,e", "add~r9,r12", "mov~r12,h", "shr~r12,0", "xor~f,r12", "add~h,a", "mov~r12,[rdx+0]", "sub~r12,f", "add~r11,r12", "mov~r12,a", "shl~r12,0", "xor~g,r12", "add~a,b", "mov~r12,[rdx+0]", "sub~r12,g", "add~rbx,r12", "mov~r12,b", "shr~r12,0", "xor~h,r12", "add~b,c", "mov~r12,[rdx+0]", "sub~r12,h", "add~r8,r12", "mov~r12,c", "shl~r12,0", "xor~a,r12", "add~c,d", "sub~e,a", "mov~r12,d", "shr~r12,0", "xor~b,r12", "add~d,e", "sub~f,b", "mov~r12,e", "shl~r12,0", "xor~c,r12", "lea~r12,<TAG>", "sub~g,c", "mov~rsi,f", "shr~rsi,0", "xor~d,rsi", "add~f,g", "sub~h,d", "mov~rsi,g", "shl~rsi,0", "xor~rsi,e", "add~g,h", "mov~<TAG>,a", "mov~[rdx+0],b", "mov~[rdx+0],c", "mov~[rdx+0],d", "mov~[rdx+0],e", "mov~[rdx+0],f", "mov~[rdx+0],g", "mov~[rdx+0],h", "add~rdx,0", "cmp~rax,rdx", "jnz~FOO"]], [9, 0, 3, 28, 0, 63, 8, 1, 0, 2, 0.3333333333333333, ["add     e, [rax+20h]", "add     f, [rax+28h]", "add     g, [rax+30h]", "add     h, [rax+38h]", "mov     r13, [rax]", "sub     r13, e", "add     r9, r13", "mov     r13, h", "shr     r13, 9", "xor     f, r13", "add     h, a", "mov     r13, [rax+8]", "sub     r13, f", "add     r11, r13", "mov     r13, a", "shl     r13, 9", "xor     g, r13", "add     a, b", "mov     r13, [rax+10h]", "sub     r13, g", "add     rbx, r13", "mov     r13, b", "shr     r13, 17h", "xor     h, r13", "add     b, c", "mov     r13, [rax+18h]", "sub     r13, h", "add     r8, r13", "mov     r13, c", "shl     r13, 0Fh", "xor     a, r13", "add     c, d", "sub     e, a", "mov     r13, d", "shr     r13, 0Eh", "xor     b, r13", "add     d, e", "sub     f, b", "mov     r13, e", "shl     r13, 14h", "xor     c, r13", "lea     r13, [e+f]", "sub     g, c", "mov     rsi, f", "shr     rsi, 11h", "xor     d, rsi", "add     f, g", "sub     h, d", "mov     rsi, g", "shl     rsi, 0Eh", "xor     rsi, e", "add     g, h", "mov     [rax], a", "mov     [rax+8], b", "mov     [rax+10h], c", "mov     [rax+18h], d", "mov     [rax+20h], e", "mov     [rax+28h], f", "mov     [rax+30h], g", "mov     [rax+38h], h", "add     rax, 40h", "cmp     rax, r12", "jnz     loc_1220C"], ["add~e,[rax+0]", "add~f,[rax+0]", "add~g,[rax+0]", "add~h,[rax+0]", "mov~r13,<TAG>", "sub~r13,e", "add~r9,r13", "mov~r13,h", "shr~r13,0", "xor~f,r13", "add~h,a", "mov~r13,[rax+0]", "sub~r13,f", "add~r11,r13", "mov~r13,a", "shl~r13,0", "xor~g,r13", "add~a,b", "mov~r13,[rax+0]", "sub~r13,g", "add~rbx,r13", "mov~r13,b", "shr~r13,0", "xor~h,r13", "add~b,c", "mov~r13,[rax+0]", "sub~r13,h", "add~r8,r13", "mov~r13,c", "shl~r13,0", "xor~a,r13", "add~c,d", "sub~e,a", "mov~r13,d", "shr~r13,0", "xor~b,r13", "add~d,e", "sub~f,b", "mov~r13,e", "shl~r13,0", "xor~c,r13", "lea~r13,<TAG>", "sub~g,c", "mov~rsi,f", "shr~rsi,0", "xor~d,rsi", "add~f,g", "sub~h,d", "mov~rsi,g", "shl~rsi,0", "xor~rsi,e", "add~g,h", "mov~<TAG>,a", "mov~[rax+0],b", "mov~[rax+0],c", "mov~[rax+0],d", "mov~[rax+0],e", "mov~[rax+0],f", "mov~[rax+0],g", "mov~[rax+0],h", "add~rax,0", "cmp~rax,r12", "jnz~FOO"]]], "func_feature": [0, 16, 2, 0, 4, 5, 1, 149, 0.16667, 0, 56], "succs": [[3], [], [1, 2], [2, 3]], "fname": "isaac_seed", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[5, 0, 0, 2, 1, 7, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     edx, 3", "mov     esi, 0; action", "mov     eax, 0", "call    rpl_fcntl", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~edx,0", "mov~esi,0", "mov~eax,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 7, 0.0, 0, 2], "succs": [[]], "fname": "dup_safer", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["pop     fp", "pop     rbp", "pop     r12", "retn"], ["pop~fp", "pop~rbp", "pop~r12", "retn"]], [0, 0, 2, 0, 2, 7, 1, 3, 3, 0, 0.0863095238095238, ["call    ___errno_location", "mov     rbp, rax", "mov     r12d, [rax]", "mov     rdi, fp; stream", "call    _fclose", "test    r12d, r12d", "jz      short loc_1247D"], ["call~FOO", "mov~rbp,rax", "mov~r12d,<TAG>", "mov~rdi,fp", "call~FOO", "test~r12d,r12d", "jz~FOO"]], [1, 0, 1, 0, 0, 3, 0, 1, 4, 0, 0.0, ["mov     [rbp+0], r12d", "mov     eax, 0FFFFFFFFh", "jmp     short loc_1247D"], ["mov~[rbp+0],r12d", "mov~eax,0", "jmp~FOO"]], [0, 0, 1, 0, 1, 3, 0, 2, 1, 0, 0.017857142857142856, ["mov     rdi, fp; stream", "call    _fclose", "jmp     short loc_1247D"], ["mov~rdi,fp", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 3, 0, 0.038690476190476185, ["mov     rdi, fp; stream", "call    _fclose"], ["mov~rdi,fp", "call~FOO"]], [0, 0, 4, 0, 1, 4, 1, 2, 2, 0, 0.1369047619047619, ["mov     rdi, fp; stream", "call    rpl_fflush", "test    eax, eax", "jz      short loc_12475"], ["mov~rdi,fp", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 6, 0, 1, 4, 1, 2, 1, 0, 0.08928571428571427, ["mov     rdi, fp; fp", "call    ___freading", "test    eax, eax", "jz      short loc_1243C"], ["mov~rdi,fp", "call~FOO", "test~eax,eax", "jz~FOO"]], [3, 0, 5, 0, 2, 8, 0, 3, 2, 0, 0.023809523809523808, ["mov     rdi, fp; stream", "call    _fileno", "mov     edx, 1; whence", "mov     esi, 0; offset", "mov     edi, eax; fd", "call    _lseek", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      short loc_12475"], ["mov~rdi,fp", "call~FOO", "mov~edx,0", "mov~esi,0", "mov~edi,eax", "call~FOO", "cmp~rax,0", "jz~FOO"]], [0, 0, 8, 0, 1, 7, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, fp", "call    _fileno", "test    eax, eax", "js      short loc_1246B"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,fp", "call~FOO", "test~eax,eax", "js~FOO"]]], "func_feature": [9, 4, 16, 0, 9, 13, 4, 42, 0.04365, 0, 0], "succs": [[], [0, 2], [0], [0], [0], [1, 4], [5, 7], [4, 5], [3, 6]], "fname": "rpl_fclose", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[1, 0, 6, 0, 0, 3, 0, 1, 0, 0, 0.027213352685050797, ["mov     edx, [rsp+68h+arg.gp_offset]", "cmp     edx, 2Fh ; '/'", "ja      short loc_12767"], ["mov~edx,<TAG>", "cmp~edx,0", "ja~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 9, 5, 0.006168359941944848, ["cmp     esi, 0Ah", "jnz     loc_126FA"], ["cmp~esi,0", "jnz~FOO"]], [0, 0, 12, 0, 0, 2, 1, 1, 8, 5, 0.00725689404934688, ["test    esi, esi", "jnz     short loc_126FA"], ["test~esi,esi", "jnz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 8, 5, 0.005805515239477504, ["cmp     esi, 4", "jnz     short loc_126FA"], ["cmp~esi,0", "jnz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 7, 3, 0.010159651669085631, ["cmp     esi, 40Ah", "jnz     short loc_126FA"], ["cmp~esi,0", "jnz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 8, 5, 0.0043541364296081275, ["cmp     esi, 400h", "jz      short loc_126A4"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 6, 5, 0.015239477503628448, ["cmp     esi, 8", "jz      loc_126A4"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 5, 4, 0.02104499274310595, ["cmp     esi, 3", "jle     loc_1268B"], ["cmp~esi,0", "jle~FOO"]], [1, 0, 3, 0, 2, 8, 0, 3, 8, 2, 0.0010885341074020319, ["call    ___errno_location", "mov     fd, rax", "mov     r12d, [rax]", "mov     edi, ebx; fd", "call    _close", "mov     [rbp+0], r12d", "mov     ebx, 0FFFFFFFFh", "jmp     loc_12552"], ["call~FOO", "mov~fd,rax", "mov~r12d,<TAG>", "mov~edi,ebx", "call~FOO", "mov~[rbp+0],r12d", "mov~ebx,0", "jmp~FOO"]], [2, 0, 5, 0, 1, 6, 1, 2, 7, 3, 0.009796806966618287, ["mov     esi, 1; cmd", "mov     edi, ebx; fd", "mov     eax, 0", "call    _fcntl", "test    eax, eax", "js      short loc_1266B"], ["mov~esi,0", "mov~edi,ebx", "mov~eax,0", "call~FOO", "test~eax,eax", "js~FOO"]], [4, 0, 4, 0, 1, 8, 1, 2, 8, 2, 0.0010885341074020319, ["or      eax, 1", "mov     edx, eax", "mov     esi, 2; cmd", "mov     edi, ebx; fd", "mov     eax, 0", "call    _fcntl", "cmp     eax, 0FFFFFFFFh", "jnz     loc_12552"], ["or~eax,0", "mov~edx,eax", "mov~esi,0", "mov~edi,ebx", "mov~eax,0", "call~FOO", "cmp~eax,0", "jnz~FOO"]], [1, 0, 16, 0, 0, 3, 0, 1, 2, 5, 0.009433962264150943, ["mov     edx, [rsp+68h+arg.gp_offset]", "cmp     edx, 2Fh ; '/'", "ja      short loc_125C8"], ["mov~edx,<TAG>", "cmp~edx,0", "ja~FOO"]], [1, 0, 48, 0, 0, 2, 0, 1, 1, 4, 0.016690856313497822, ["cmp     esi, 406h", "jz      loc_12581"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 8, 4, 0.003265602322206096, ["mov     cs:have_dupfd_cloexec_3326, 0FFFFFFFFh", "jmp     short loc_12637"], ["mov~<TAG>,0", "jmp~FOO"]], [2, 0, 7, 0, 1, 8, 1, 2, 7, 2, 0.005624092888243832, ["mov     edx, r12d", "mov     esi, 0; cmd", "mov     edi, ebp; fd", "mov     eax, 0", "call    _fcntl", "mov     ebx, eax", "test    eax, eax", "js      loc_12552"], ["mov~edx,r12d", "mov~esi,0", "mov~edi,ebp", "mov~eax,0", "call~FOO", "mov~ebx,eax", "test~eax,eax", "js~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 7, 4, 0.013788098693759071, ["cmp     esi, 8", "jle     loc_1269F"], ["cmp~esi,0", "jle~FOO"]], [1, 0, 4, 2, 0, 4, 0, 0, 9, 3, 0.00634978229317852, ["mov     eax, edx", "add     rax, [rsp+68h+arg.reg_save_area]", "add     edx, 8", "mov     [rsp+68h+arg.gp_offset], edx"], ["mov~eax,edx", "add~rax,[rsp+0]", "add~edx,0", "mov~<TAG>,edx"]], [1, 0, 15, 0, 0, 2, 0, 1, 6, 3, 0.009433962264150943, ["cmp     esi, 1", "jz      loc_12741"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 14, 2, 0, 4, 0, 0, 3, 4, 0.006531204644412192, ["mov     eax, edx", "add     rax, [rsp+68h+arg.reg_save_area]", "add     edx, 8", "mov     [rsp+68h+arg.gp_offset], edx"], ["mov~eax,edx", "add~rax,[rsp+0]", "add~edx,0", "mov~<TAG>,edx"]], [1, 0, 14, 0, 0, 2, 0, 1, 8, 3, 0.007982583454281567, ["cmp     esi, 9", "jz      loc_12741"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 7, 5, 0.009433962264150943, ["cmp     esi, 1", "jg      short loc_126A4"], ["cmp~esi,0", "jg~FOO"]], [1, 0, 13, 0, 0, 3, 0, 1, 4, 3, 0.021407837445573296, ["mov     r12d, [rax]", "cmp     cs:have_dupfd_cloexec_3326, 0", "js      short loc_1260C"], ["mov~r12d,<TAG>", "cmp~<TAG>,0", "js~FOO"]], [0, 0, 14, 0, 0, 4, 0, 1, 3, 4, 0.006531204644412192, ["mov     rax, [rsp+68h+arg.overflow_arg_area]", "lea     rdx, [rax+8]", "mov     [rsp+68h+arg.overflow_arg_area], rdx", "jmp     short loc_12596"], ["mov~rax,[rsp+0]", "lea~rdx,[rax+0]", "mov~[rsp+0],rdx", "jmp~FOO"]], [0, 1, 0, 1, 0, 5, 0, 0, 5, -1, 0.0, ["add     rsp, 50h", "pop     rbx", "pop     rbp", "pop     r12", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 4, 1, 0.03701015965166909, ["mov     eax, ebx", "mov     rcx, [rsp+68h+var_50]", "xor     rcx, fs:28h", "jnz     loc_12777"], ["mov~eax,ebx", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 10, 5, 0.002902757619738752, ["jmp     loc_126A4"], ["jmp~FOO"]], [2, 0, 7, 0, 1, 8, 1, 2, 5, 2, 0.013062409288824383, ["mov     edx, r12d", "mov     esi, 0; cmd", "mov     edi, ebp; fd", "mov     eax, 0", "call    _fcntl", "mov     ebx, eax", "test    eax, eax", "js      loc_12552"], ["mov~edx,r12d", "mov~esi,0", "mov~edi,ebp", "mov~eax,0", "call~FOO", "mov~ebx,eax", "test~eax,eax", "js~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 6, 4, 0.03011611030478955, ["mov     edx, [rsp+68h+arg.gp_offset]", "cmp     edx, 2Fh ; '/'", "ja      loc_12754"], ["mov~edx,<TAG>", "cmp~edx,0", "ja~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 9, 5, 0.001451378809869376, ["jmp     short loc_126A4"], ["jmp~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 5, 4, 0.009796806966618287, ["cmp     esi, 406h", "jge     short loc_126A4"], ["cmp~esi,0", "jge~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 7, 5, 0.006894049346879536, ["cmp     esi, 402h", "jz      short loc_126A4"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 5, 4, 0.015239477503628448, ["cmp     esi, 409h", "jz      loc_126A4"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 19, 0, 0, 2, 0, 1, 4, 5, 0.02177068214804064, ["cmp     esi, 407h", "jg      short loc_12725"], ["cmp~esi,0", "jg~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 1, 4, 0.00181422351233672, ["mov     edx, [rsp+68h+arg.gp_offset]", "cmp     edx, 2Fh ; '/'", "ja      short loc_12571"], ["mov~edx,<TAG>", "cmp~edx,0", "ja~FOO"]], [1, 1, 53, 1, 0, 19, 2, 1, 0, 5, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 50h", "mov     ebp, edi", "mov     [rsp+68h+var_38], rdx", "mov     [rsp+68h+var_30], rcx", "mov     [rsp+68h+var_28], r8", "mov     [rsp+68h+var_20], r9", "mov     rax, fs:28h", "mov     [rsp+68h+var_50], rax", "xor     eax, eax", "mov     [rsp+68h+arg.gp_offset], 10h", "lea     rax, [rsp+68h+arg_0]", "mov     [rsp+68h+arg.overflow_arg_area], rax", "lea     rax, [rsp+68h+var_48]", "mov     [rsp+68h+arg.reg_save_area], rax", "test    esi, esi", "jz      short loc_12528"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~ebp,edi", "mov~[rsp+0],rdx", "mov~[rsp+0],rcx", "mov~[rsp+0],r8", "mov~[rsp+0],r9", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~<TAG>,0", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "test~esi,esi", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 6, 2, 0.007619738751814224, ["cmp     cs:have_dupfd_cloexec_3326, 0FFFFFFFFh", "jnz     loc_12552"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 6, 3, 0.007982583454281567, ["cmp     esi, 401h", "jz      short loc_12741"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 6, 3, 0.013062409288824383, ["cmp     esi, 409h", "jl      short loc_12741"], ["cmp~esi,0", "jl~FOO"]], [2, 0, 10, 0, 1, 8, 1, 2, 5, 3, 0.008708272859216255, ["mov     edx, r12d", "mov     esi, 406h; cmd", "mov     edi, ebp; fd", "mov     eax, 0", "call    _fcntl", "mov     ebx, eax", "test    eax, eax", "js      short loc_125D8"], ["mov~edx,r12d", "mov~esi,0", "mov~edi,ebp", "mov~eax,0", "call~FOO", "mov~ebx,eax", "test~eax,eax", "js~FOO"]], [0, 0, 4, 0, 0, 4, 0, 1, 7, 3, 0.007801161103047896, ["mov     rax, [rsp+68h+arg.overflow_arg_area]", "lea     rdx, [rax+8]", "mov     [rsp+68h+arg.overflow_arg_area], rdx", "jmp     loc_126BD"], ["mov~rax,[rsp+0]", "lea~rdx,[rax+0]", "mov~[rsp+0],rdx", "jmp~FOO"]], [1, 0, 3, 0, 1, 6, 0, 2, 10, 2, 0.006531204644412192, ["mov     rdx, [rax]", "mov     edi, ebp; fd", "mov     eax, 0", "call    _fcntl", "mov     ebx, eax", "jmp     loc_12552"], ["mov~rdx,<TAG>", "mov~edi,ebp", "mov~eax,0", "call~FOO", "mov~ebx,eax", "jmp~FOO"]], [0, 0, 4, 0, 0, 4, 0, 1, 9, 3, 0.00634978229317852, ["mov     rax, [rsp+68h+arg.overflow_arg_area]", "lea     rdx, [rax+8]", "mov     [rsp+68h+arg.overflow_arg_area], rdx", "jmp     short loc_1270F"], ["mov~rax,[rsp+0]", "lea~rdx,[rax+0]", "mov~[rsp+0],rdx", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, 2, 0.001632801161103048, ["mov     cs:have_dupfd_cloexec_3326, 1", "jmp     short loc_12552"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 9, 0, 1, 3, 0, 2, 6, 3, 0.006168359941944848, ["call    ___errno_location", "cmp     dword ptr [rax], 16h", "jnz     short loc_125BC"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 3, 0, 1, 6, 0, 2, 8, 2, 0.009433962264150943, ["mov     edx, [rax]", "mov     edi, ebp; fd", "mov     eax, 0", "call    _fcntl", "mov     ebx, eax", "jmp     loc_12552"], ["mov~edx,<TAG>", "mov~edi,ebp", "mov~eax,0", "call~FOO", "mov~ebx,eax", "jmp~FOO"]], [1, 0, 4, 2, 0, 4, 0, 0, 7, 3, 0.007801161103047896, ["mov     eax, edx", "add     rax, [rsp+68h+arg.reg_save_area]", "add     edx, 8", "mov     [rsp+68h+arg.gp_offset], edx"], ["mov~eax,edx", "add~rax,[rsp+0]", "add~edx,0", "mov~<TAG>,edx"]], [2, 0, 3, 0, 1, 6, 0, 1, 3, 2, 0.0039912917271407835, ["mov     edx, [rax]", "mov     esi, 0; cmd", "mov     edi, ebp; fd", "mov     eax, 0", "call    _fcntl", "mov     ebx, eax"], ["mov~edx,<TAG>", "mov~esi,0", "mov~edi,ebp", "mov~eax,0", "call~FOO", "mov~ebx,eax"]], [0, 0, 4, 0, 0, 4, 0, 1, 2, 3, 0.0012699564586357039, ["mov     rax, [rsp+68h+arg.overflow_arg_area]", "lea     rdx, [rax+8]", "mov     [rsp+68h+arg.overflow_arg_area], rdx", "jmp     short loc_1253D"], ["mov~rax,[rsp+0]", "lea~rdx,[rax+0]", "mov~[rsp+0],rdx", "jmp~FOO"]], [1, 0, 4, 2, 0, 4, 0, 0, 2, 3, 0.0012699564586357039, ["mov     eax, edx", "add     rax, [rsp+68h+arg.reg_save_area]", "add     edx, 8", "mov     [rsp+68h+arg.gp_offset], edx"], ["mov~eax,edx", "add~rax,[rsp+0]", "add~edx,0", "mov~<TAG>,edx"]], [1, 0, 32, 0, 0, 2, 0, 1, 3, 4, 0.030478955007256895, ["cmp     esi, 0Bh", "jg      loc_126D2"], ["cmp~esi,0", "jg~FOO"]], [1, 0, 3, 0, 1, 5, 0, 2, 3, 2, 0.015965166908563134, ["mov     edi, ebp; fd", "mov     eax, 0", "call    _fcntl", "mov     ebx, eax", "jmp     loc_12552"], ["mov~edi,ebp", "mov~eax,0", "call~FOO", "mov~ebx,eax", "jmp~FOO"]], [1, 0, 33, 0, 0, 2, 0, 1, 2, 3, 0.023222060957910014, ["cmp     esi, 0Bh", "jz      loc_12741"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 4, 3, 0.01741654571843251, ["cmp     esi, 3", "jz      loc_12741"], ["cmp~esi,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [13, 9, 60, 6, 54, 87, 2, 198, 0.01005, 2, 10], "succs": [[16, 41], [0, 25], [0, 28], [0, 27], [0, 50], [0, 27], [27, 15], [17, 6], [24], [8, 10], [8, 24], [18, 22], [51, 11], [9], [24, 13], [3, 19], [40], [50, 20], [21], [1, 50], [2, 27], [26, 38], [21], [], [53, 23], [27], [24, 35], [45, 39], [27], [27, 36], [27, 5], [27, 37], [29, 31], [48, 47], [33, 12], [24, 9], [50, 30], [50, 4], [42, 43], [44], [24], [40], [24], [42, 14], [24], [44], [24], [46], [46], [32, 52], [24], [49, 50], [50, 7], []], "fname": "rpl_fcntl", "n_num": 54}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["mov     rax, rbx", "pop     rbx", "pop     rbp", "pop     r12", "retn"], ["mov~rax,rbx", "pop~rbx", "pop~rbp", "pop~r12", "retn"]], [0, 0, 7, 0, 1, 8, 1, 2, 0, 3, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbp, mode", "call    _fopen", "mov     rbx, rax", "test    fp, fp", "jz      short loc_1279D"], ["push~r12", "push~rbp", "push~rbx", "mov~rbp,mode", "call~FOO", "mov~rbx,rax", "test~fp,fp", "jz~FOO"]], [0, 0, 2, 0, 1, 6, 1, 2, 4, -1, 0.011904761904761904, ["mov     rsi, mode; modes", "mov     edi, r12d; fd", "call    _fdopen", "mov     fp, rax", "test    fp, fp", "jnz     short loc_1279D"], ["mov~rsi,mode", "mov~edi,r12d", "call~FOO", "mov~fp,rax", "test~fp,fp", "jnz~FOO"]], [1, 0, 1, 0, 2, 8, 0, 3, 4, -1, 0.011904761904761904, ["call    ___errno_location", "mov     fp, rax", "mov     ebp, [rax]", "mov     edi, r12d; fd", "call    _close", "mov     [rbx], ebp", "mov     ebx, 0", "jmp     short loc_1279D"], ["call~FOO", "mov~fp,rax", "mov~ebp,<TAG>", "mov~edi,r12d", "call~FOO", "mov~<TAG>,ebp", "mov~ebx,0", "jmp~FOO"]], [1, 0, 1, 0, 2, 8, 0, 3, 3, 0, 0.023809523809523808, ["call    ___errno_location", "mov     mode, rax", "mov     r12d, [rax]", "mov     rdi, fp; fp", "call    rpl_fclose", "mov     [rbp+0], r12d", "mov     ebx, 0", "jmp     short loc_1279D"], ["call~FOO", "mov~mode,rax", "mov~r12d,<TAG>", "mov~rdi,fp", "call~FOO", "mov~[rbp+0],r12d", "mov~ebx,0", "jmp~FOO"]], [1, 0, 6, 0, 1, 4, 0, 1, 1, 2, 0.11904761904761904, ["mov     rdi, fp; stream", "call    _fileno", "cmp     eax, 2", "jbe     short loc_127A5"], ["mov~rdi,fp", "call~FOO", "cmp~eax,0", "jbe~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 2, 1, 0.19047619047619047, ["mov     edi, eax; fd", "call    dup_safer", "mov     r12d, eax", "test    eax, eax", "js      short loc_127ED"], ["mov~edi,eax", "call~FOO", "mov~r12d,eax", "test~eax,eax", "js~FOO"]], [0, 0, 3, 0, 1, 4, 1, 2, 3, -1, 0.14285714285714285, ["mov     rdi, fp; fp", "call    rpl_fclose", "test    eax, eax", "jnz     short loc_127D2"], ["mov~rdi,fp", "call~FOO", "test~eax,eax", "jnz~FOO"]]], "func_feature": [9, 4, 15, 0, 8, 12, 1, 48, 0.0625, 0, 0], "succs": [[], [0, 5], [0, 3], [0], [0], [0, 6], [4, 7], [2, 3]], "fname": "fopen_safer", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 0, 0, 0, 0.16666666666666666, ["xor     ebx, ebx", "nop     dword ptr [rax+rax+00000000h]"], ["xor~ebx,ebx", "nop~[word ptr [rax+0]"]], [2, 0, 3, 2, 1, 17, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15, rdx", "push    r13", "push    r12", "lea     r12, __frame_dummy_init_array_entry", "push    rbp", "lea     rbp, __do_global_dtors_aux_fini_array_entry", "push    rbx", "mov     r13d, edi", "mov     r14, rsi", "sub     rbp, r12", "sub     rsp, 8", "sar     rbp, 3", "call    _init_proc", "test    rbp, rbp", "jz      short loc_12866"], ["push~r15", "push~r14", "mov~r15,rdx", "push~r13", "push~r12", "lea~r12,<TAG>", "push~rbp", "lea~rbp,<TAG>", "push~rbx", "mov~r13d,edi", "mov~r14,rsi", "sub~rbp,r12", "sub~rsp,0", "sar~rbp,0", "call~FOO", "test~rbp,rbp", "jz~FOO"]], [1, 0, 2, 1, 1, 7, 0, 2, 2, 1, 0.16666666666666666, ["mov     rdx, r15", "mov     rsi, r14", "mov     edi, r13d", "call    qword ptr [r12+rbx*8]", "add     rbx, 1", "cmp     rbp, rbx", "jnz     short loc_12850"], ["mov~rdx,r15", "mov~rsi,r14", "mov~edi,r13d", "call~<TAG>", "add~rbx,0", "cmp~rbp,rbx", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 5, 0, 34, 0.08333, 2, 4], "succs": [[2], [0, 3], [2, 3], []], "fname": "__libc_csu_init", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_csu_fini", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rdx, cs:__dso_handle", "xor     esi, esi", "jmp     ___cxa_atexit"], ["mov~rdx,<TAG>", "xor~esi,esi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 1, 3, 0.0, 1, 0], "succs": [[1], []], "fname": "atexit", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[2, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0.0, ["sub     rsp, 8; _fini", "add     rsp, 8", "retn"], ["sub~rsp,0", "add~rsp,0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 2], "succs": [[]], "fname": "term_proc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getenv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp_free:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp_free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn utimensat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "utimensat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn abort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __errno_location:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn unlink:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "unlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strncmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fpending:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __read_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__read_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mkdir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mkdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn unlinkat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "unlinkat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn qsort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "qsort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn readlink:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "readlink", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fcntl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn clock_gettime:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "clock_gettime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn write:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "write", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getpid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getpid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fread_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fread_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn textdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn pathconf:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "pathconf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fclose:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn opendir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "opendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn bindtextdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn stpcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "stpcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn rmdir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "rmdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dcgettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_get_mb_cur_max:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __lxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__lxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn openat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "openat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __stack_chk_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getuid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getopt_long:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbrtowc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstatat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstatat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __overflow:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__overflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strrchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ftruncate:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ftruncate", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn lseek:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn gettimeofday:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "gettimeofday", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __assert_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn geteuid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "geteuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ioctl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn canonicalize_file_name:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "canonicalize_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn close:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn rewinddir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "rewinddir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strspn:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strspn", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn closedir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "closedir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn posix_fadvise:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "posix_fadvise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn read:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "read", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __libc_start_main:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_start_main", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fallocate:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fallocate", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fputs_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn utimes:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "utimes", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn calloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __getdelim:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__getdelim", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dirfd:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dirfd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fpathconf:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fpathconf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn rpmatch:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "rpmatch", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn syscall:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "syscall", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mkfifo:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mkfifo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn umask:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "umask", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __xmknod:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__xmknod", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fileno:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getgid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getgid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __xstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__xstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn readdir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "readdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn malloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fflush:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn nl_langinfo:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn lchown:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "lchown", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __freading:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn realloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fdopen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fdopen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn linkat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "linkat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn setlocale:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __printf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fchmod:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fchmod", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn setvbuf:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "setvbuf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn chmod:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "chmod", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mempcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mempcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn error:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __explicit_bzero_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__explicit_bzero_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn open:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fseeko:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fchown:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fchown", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fopen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fopen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn rename:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "rename", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fdopendir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fdopendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn futimens:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "futimens", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn euidaccess:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "euidaccess", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __cxa_atexit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn renameat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "renameat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getpagesize:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getpagesize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getppid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getppid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fwrite:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbsinit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn symlinkat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "symlinkat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswprint:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp___cxa_finalize:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp___cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn futimesat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "futimesat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_b_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cp.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __gmon_start__:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__gmon_start__", "n_num": 1}
