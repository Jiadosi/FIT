{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    rax ; __gmon_start__"], ["call~rax"]], [1, 0, 2, 1, 0, 4, 1, 1, 0, 1, 0.0, ["sub     rsp, 8; _init", "mov     rax, cs:__gmon_start___ptr", "test    rax, rax", "jz      short loc_16B2"], ["sub~rsp,0", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 3, 1, 7, 0.0, 1, 2], "succs": [[2], [0, 2], []], "fname": "init_proc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0.0, ["push    cs:qword_20ADE0", "jmp     cs:qword_20ADE8"], ["push~<TAG>", "jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 60, 2, 0.0, 2, 0], "succs": [[]], "fname": "sub_16C0", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__uflow_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__uflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getenv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:free_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 19, 1, 0.0, 1, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:abort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 11, 1, 0.0, 1, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__errno_location_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 34, 1, 0.0, 1, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strncmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fpending_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iconv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "iconv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:write_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "write", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:textdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fclose_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:bindtextdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:stpcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "stpcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dcgettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 42, 1, 0.0, 1, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_get_mb_cur_max_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 22, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strlen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 37, 1, 0.0, 1, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__stack_chk_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 16, 1, 0.0, 1, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getopt_long_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbrtowc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 20, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strrchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__assert_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 14, 1, 0.0, 1, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fscanf_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fscanf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ioctl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strnlen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strnlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:close_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "memchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:read_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "read", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fputs_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 8, 1, 0.0, 1, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:calloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 7, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswalnum_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswalnum", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:malloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 7, 1, 0.0, 1, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:nl_langinfo_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ungetc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "ungetc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:realloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fdopen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fdopen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:setlocale_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__printf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 8, 1, 0.0, 1, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iconv_close_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "iconv_close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswspace_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswspace", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memmove_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:error_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 16, 1, 0.0, 1, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:open_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_atexit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpagesize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpagesize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fwrite_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 10, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strdup_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "strdup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbsinit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 39, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswprint_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_b_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iconv_open_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "iconv_open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__sprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__sprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_finalize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[2, 0, 0, 1, 1, 6, 0, 1, 0, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5839; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, assertion; \"iter->cur.wc == 0\"", "sub     rsp, 8", "mov     edx, 0ABh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "sub~rsp,0", "mov~edx,0", "call~FOO"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 6, 0.0, 3, 1], "succs": [[]], "fname": "mbuiter_multi_next", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[2, 0, 0, 1, 1, 6, 0, 1, 0, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5820; \"mbiter_multi_next\"", "lea     rsi, aMbiterH; \"mbiter.h\"", "lea     rdi, assertion; \"iter->cur.wc == 0\"", "sub     rsp, 8", "mov     edx, 0A2h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "sub~rsp,0", "mov~edx,0", "call~FOO"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 6, 0.0, 3, 1], "succs": [[]], "fname": "mbiter_multi_next", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[2, 0, 0, 1, 1, 6, 0, 1, 0, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5718; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, assertion; \"iter->cur.wc == 0\"", "sub     rsp, 8", "mov     edx, 0ABh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "sub~rsp,0", "mov~edx,0", "call~FOO"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 6, 0.0, 3, 1], "succs": [[]], "fname": "mbuiter_multi_next_0", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 104, 0, 2, 5, 0, 2, 0, 0, 0.0, ["call    next_line_num", "mov     rsi, cs:line_num_print; src", "mov     rdi, r15; dest", "call    _stpcpy", "mov     r15, rax"], ["call~FOO", "mov~rsi,<TAG>", "mov~rdi,r15", "call~FOO", "mov~r15,rax"]], [1, 0, 104, 0, 0, 2, 0, 1, 19, 10, 0.006816230141691713, ["cmp     [rsp+188h+number], 0", "jz      short loc_2005"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 137, 0, 0, 2, 0, 1, 9, 17, 0.007191927866036926, ["mov     [rsp+188h+show_nonprinting], 1", "jmp     short loc_1BAD"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 137, 0, 0, 2, 0, 1, 8, 18, 0.0012881064834693002, ["cmp     eax, 76h ; 'v'", "jnz     loc_1CDC"], ["cmp~eax,0", "jnz~FOO"]], [2, 0, 104, 0, 0, 8, 1, 1, 5, 12, 0.3595427221983684, ["lea     rdi, aLt+2; \"-\"", "mov     ecx, 2", "mov     rsi, rdx", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_23EA"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,rdx", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [2, 0, 104, 0, 0, 14, 1, 1, 4, 13, 0.15629025332760843, ["movsxd  rax, ebp", "movsxd  rcx, cs:optind@@GLIBC_2_2_5", "mov     [rsp+188h+have_read_stdin], 0", "mov     [rsp+188h+var_120], rax", "movzx   eax, [rsp+188h+number]", "lea     rdx, aLt+2; \"-\"", "or      al, [rsp+188h+show_ends]", "cmp     [rsp+188h+argc], ecx", "mov     [rsp+188h+ok], 1", "mov     [rsp+188h+var_130], rcx", "mov     [rsp+188h+var_F9], al", "lea     rax, aLt+2; \"-\"", "mov     cs:infile, rax", "jle     short loc_1DED"], ["movsxd~rax,ebp", "movsxd~rcx,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],rax", "movzx~eax,[rsp+0]", "lea~rdx,<TAG>", "or~al,[rsp+0]", "cmp~[rsp+0],ecx", "mov~[rsp+0],0", "mov~[rsp+0],rcx", "mov~[rsp+0],al", "lea~rax,<TAG>", "mov~<TAG>,rax", "jle~FOO"]], [0, 0, 104, 0, 0, 4, 0, 0, 5, 13, 0.2005689136968656, ["mov     rax, [rsp+188h+argv]", "mov     rcx, [rsp+188h+var_130]", "mov     rdx, [rax+rcx*8]", "mov     cs:infile, rdx"], ["mov~rax,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rdx,<TAG>", "mov~<TAG>,rdx"]], [0, 0, 104, 0, 2, 8, 0, 2, 17, 11, 0.0, ["mov     [rsp+188h+var_160], rdx", "call    next_line_num", "mov     rsi, cs:line_num_print; src", "mov     rdi, r15; dest", "call    _stpcpy", "mov     rdx, [rsp+188h+var_160]", "mov     r15, rax", "nop     dword ptr [rax+00000000h]"], ["mov~[rsp+0],rdx", "call~FOO", "mov~rsi,<TAG>", "mov~rdi,r15", "call~FOO", "mov~rdx,[rsp+0]", "mov~r15,rax", "nop~[word ptr [rax+0]"]], [1, 0, 104, 0, 0, 2, 0, 1, 16, 11, 0.006816230141691713, ["cmp     [rsp+188h+number], 0", "jz      short loc_2210"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 104, 0, 0, 2, 0, 1, 19, 9, 0.1594031773293259, ["cmp     [rsp+188h+show_nonprinting], 0", "jz      short loc_206C"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 104, 0, 0, 2, 1, 1, 18, 10, 0.16342851009016746, ["test    r13d, r13d", "js      short loc_2005"], ["test~r13d,r13d", "js~FOO"]], [0, 0, 104, 0, 0, 2, 1, 1, 14, 17, 0.04164877629884071, ["and     [rsp+188h+ok], r15b", "jmp     loc_2387"], ["and~[rsp+0],r15b", "jmp~FOO"]], [1, 0, 104, 0, 0, 2, 0, 1, 14, 18, 0.005259768140832976, ["mov     r15d, 1", "jmp     short loc_25FA"], ["mov~r15d,0", "jmp~FOO"]], [0, 0, 104, 0, 2, 7, 2, 2, 13, 18, 0.0322026620867325, ["call    ___errno_location", "mov     rcx, cs:infile", "mov     esi, [rax]; errnum", "lea     rdx, format+4; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["call~FOO", "mov~rcx,<TAG>", "mov~esi,<TAG>", "lea~rdx,<TAG>", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [2, 0, 104, 0, 0, 8, 1, 1, 9, 15, 0.22284242164018894, ["mov     rsi, cs:infile", "lea     rdi, aLt+2; \"-\"", "mov     ecx, 2", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_2449"], ["mov~rsi,<TAG>", "lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [1, 0, 104, 0, 2, 9, 2, 3, 8, 16, 0.006977243452125376, ["call    ___errno_location", "mov     rcx, cs:infile", "mov     esi, [rax]; errnum", "lea     rdx, format+4; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     [rsp+188h+ok], 0", "jmp     contin"], ["call~FOO", "mov~rcx,<TAG>", "mov~esi,<TAG>", "lea~rdx,<TAG>", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 104, 0, 2, 13, 4, 3, 12, 16, 0.0035422928295405754, ["mov     rbp, cs:infile", "lea     rsi, aSInputFileIsOu; \"%s: input file is output file\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     [rsp+188h+ok], 0", "jmp     contin"], ["mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 104, 0, 1, 2, 0, 1, 15, 16, 0.20260841562902535, ["mov     rdi, [rsp+188h+inbuf]; ptr", "call    _free"], ["mov~rdi,[rsp+0]", "call~FOO"]], [0, 0, 2, 0, 1, 4, 2, 1, 10, -1, 0.006977243452125376, ["xor     edi, edi; fd", "call    _close", "test    eax, eax", "jns     loc_23D6"], ["xor~edi,edi", "call~FOO", "test~eax,eax", "jns~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 9, -1, 0.020770717045942466, ["cmp     [rsp+188h+have_read_stdin], 0", "jnz     loc_2607"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 104, 0, 0, 3, 1, 1, 20, 10, 0.09617861743237441, ["mov     eax, r12d", "xor     eax, 1", "jmp     short loc_202E"], ["mov~eax,r12d", "xor~eax,0", "jmp~FOO"]], [1, 0, 137, 0, 0, 2, 0, 1, 4, 20, 0.012541147845999712, ["cmp     eax, 41h ; 'A'", "jz      short loc_1C48"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 137, 0, 0, 1, 0, 1, 3, 19, 0.023776298840704167, ["jle     short loc_1C10"], ["jle~FOO"]], [0, 0, 137, 0, 0, 1, 0, 1, 5, 19, 0.012594818949477598, ["jg      short loc_1C5D"], ["jg~FOO"]], [1, 0, 104, 0, 0, 3, 0, 1, 14, 10, 0.10672498926577931, ["cmp     [rsp+188h+show_ends], 0", "lea     rax, [r15+1]", "jz      short loc_2229"], ["cmp~[rsp+0],0", "lea~rax,[r15+0]", "jz~FOO"]], [1, 0, 104, 1, 0, 4, 1, 1, 13, 11, 0.20325246887075998, ["add     r13d, 1", "lea     rdx, [rbp+1]", "test    r13d, r13d", "jle     short loc_2210"], ["add~r13d,0", "lea~rdx,[rbp+0]", "test~r13d,r13d", "jle~FOO"]], [1, 0, 104, 0, 0, 2, 0, 1, 15, 11, 0.01400815800772864, ["cmp     [rsp+188h+var_FE], 0", "jz      short loc_2210"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 6, -1, 0.0041505653356233, ["cmp     eax, 0FFFFFF7Dh", "jz      short loc_1C72"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 104, 1, 0, 2, 0, 0, 23, 11, 0.01121726062687849, ["mov     [r15], r14b", "add     r15, 1"], ["mov~<TAG>,r14b", "add~r15,0"]], [1, 0, 104, 0, 0, 2, 0, 1, 22, 12, 0.06000429368827823, ["cmp     r14b, 7Eh ; '~'", "ja      short loc_2088"], ["cmp~r14b,0", "ja~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 7, -1, 0.0016816945756404748, ["cmp     eax, 0FFFFFF7Eh", "jnz     loc_1CDC"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 104, 0, 0, 4, 0, 0, 15, 10, 0.0, ["lea     rsi, [r15+2]", "mov     byte ptr [r15], 24h ; '$'", "mov     r15, rax", "mov     rax, rsi"], ["lea~rsi,[r15+0]", "mov~<TAG>,0", "mov~r15,rax", "mov~rax,rsi"]], [1, 0, 104, 1, 0, 2, 0, 0, 24, 10, 0.06097037355088021, ["add     rbp, 1", "movzx   r14d, byte ptr [rbp-1]"], ["add~rbp,0", "movzx~r14d,[yte ptr [rbp-1]+0]"]], [2, 0, 104, 1, 0, 3, 0, 1, 24, 11, 0.0009392443108630314, ["mov     byte ptr [r15], 9", "add     r15, 1", "jmp     short loc_2025"], ["mov~<TAG>,0", "add~r15,0", "jmp~FOO"]], [2, 0, 104, 2, 0, 4, 0, 1, 26, 11, 0.002710390725633319, ["add     r14d, 0FFFFFF80h", "add     r15, 3", "mov     [r15-1], r14b", "jmp     loc_2025"], ["add~r14d,0", "add~r15,0", "mov~[r15-1]+0],r14b", "jmp~FOO"]], [3, 0, 104, 2, 0, 5, 0, 1, 24, 11, 0.0010465865178188065, ["add     r14d, 40h ; '@'", "mov     byte ptr [r15], 5Eh ; '^'", "add     r15, 2", "mov     [r15-1], r14b", "jmp     loc_2025"], ["add~r14d,0", "mov~<TAG>,0", "add~r15,0", "mov~[r15-1]+0],r14b", "jmp~FOO"]], [2, 0, 104, 1, 0, 4, 0, 1, 24, 11, 0.0052060970373550884, ["mov     esi, 3F5Eh", "add     r15, 2", "mov     [r15-2], si", "jmp     loc_2025"], ["mov~esi,0", "add~r15,0", "mov~[r15-2]+0],si", "jmp~FOO"]], [3, 0, 104, 2, 0, 5, 0, 1, 25, 11, 0.005313439244310864, ["sub     r14d, 40h ; '@'", "mov     byte ptr [r15+2], 5Eh ; '^'", "add     r15, 4", "mov     [r15-1], r14b", "jmp     loc_2025"], ["sub~r14d,0", "mov~[yte ptr [r15+0],0", "add~r15,0", "mov~[r15-1]+0],r14b", "jmp~FOO"]], [2, 0, 104, 1, 0, 4, 0, 1, 26, 11, 0.002710390725633319, ["mov     edx, 3F5Eh", "add     r15, 4", "mov     [r15-2], dx", "jmp     loc_2025"], ["mov~edx,0", "add~r15,0", "mov~[r15-2]+0],dx", "jmp~FOO"]], [1, 0, 104, 0, 2, 9, 2, 3, 7, 15, 0.014276513525118077, ["call    ___errno_location", "mov     rcx, cs:infile", "mov     esi, [rax]; errnum", "lea     rdx, format+4; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "mov     [rsp+188h+ok], 0", "jmp     short loc_23B3"], ["call~FOO", "mov~rcx,<TAG>", "mov~esi,<TAG>", "lea~rdx,<TAG>", "xor~edi,edi", "xor~eax,eax", "call~FOO", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 104, 0, 0, 1, 0, 1, 11, 16, 0.0050450837269214255, ["jmp     short loc_2404"], ["jmp~FOO"]], [0, 0, 104, 0, 1, 7, 3, 1, 6, 11, 0.18071060541004724, ["xor     esi, esi; oflag", "xor     eax, eax", "mov     rdi, rdx; file", "call    _open", "test    eax, eax", "mov     cs:input_desc, eax", "jns     loc_1E1D"], ["xor~esi,esi", "xor~eax,eax", "mov~rdi,rdx", "call~FOO", "test~eax,eax", "mov~<TAG>,eax", "jns~FOO"]], [0, 0, 0, 0, 1, 2, 1, 1, 8, -1, 0.0, ["xor     edi, edi; status", "call    usage"], ["xor~edi,edi", "call~FOO"]], [0, 0, 104, 1, 0, 2, 0, 1, 18, 19, 0.022058823529411766, ["sub     r15, [rsp+188h+dest]", "jnz     loc_2524"], ["sub~r15,[rsp+0]", "jnz~FOO"]], [0, 0, 104, 0, 0, 2, 1, 1, 17, 10, 0.07122155431515673, ["test    rax, rax", "jz      loc_242C"], ["test~rax,rax", "jz~FOO"]], [1, 0, 104, 0, 0, 2, 0, 1, 21, 9, 0.16133533705452985, ["cmp     r14b, 1Fh", "ja      short loc_2018"], ["cmp~r14b,0", "ja~FOO"]], [1, 0, 137, 0, 0, 2, 0, 1, 6, 19, 0.001896378989552025, ["cmp     eax, 65h ; 'e'", "jz      short loc_1C4E"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 137, 0, 0, 1, 0, 1, 5, 18, 0.00828324030342064, ["jle     short loc_1C30"], ["jle~FOO"]], [1, 0, 104, 0, 0, 5, 0, 1, 15, 9, 0.10404143409188493, ["mov     byte ptr [r15], 0Ah", "mov     r15, rax", "mov     rax, rbp", "mov     rbp, rdx", "jmp     loc_1FD4"], ["mov~<TAG>,0", "mov~r15,rax", "mov~rax,rbp", "mov~rbp,rdx", "jmp~FOO"]], [1, 0, 104, 0, 0, 2, 0, 1, 22, 8, 0.09311936453413483, ["cmp     r14b, 9", "jnz     loc_20C0"], ["cmp~r14b,0", "jnz~FOO"]], [1, 0, 104, 0, 1, 7, 1, 2, 7, 10, 0.34494418205238303, ["mov     ebp, cs:input_desc", "mov     rdx, [rsp+188h+out_dev]; stat_buf", "mov     edi, 1; ver", "mov     esi, ebp; fildes", "call    ___fxstat", "test    eax, eax", "js      loc_245E"], ["mov~ebp,<TAG>", "mov~rdx,[rsp+0]", "mov~edi,0", "mov~esi,ebp", "call~FOO", "test~eax,eax", "js~FOO"]], [2, 0, 104, 0, 0, 2, 0, 0, 6, 11, 0.17062043795620438, ["mov     cs:input_desc, 0", "mov     [rsp+188h+have_read_stdin], 1"], ["mov~<TAG>,0", "mov~[rsp+0],0"]], [0, 0, 104, 0, 0, 2, 1, 1, 23, 8, 0.007111421210820095, ["test    al, al", "jz      short loc_20C0"], ["test~al,al", "jz~FOO"]], [2, 0, 1, 0, 3, 12, 2, 4, 11, -1, 0.0, ["lea     rsi, aClosingStandar; \"closing standard input\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rdx, rbx; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_23D6"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rbx", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 137, 0, 0, 2, 0, 1, 4, 17, 0.023856805495920997, ["mov     [rsp+188h+number], 1", "jmp     loc_1BAD"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 137, 0, 0, 2, 0, 1, 3, 18, 0.006816230141691713, ["mov     [rsp+188h+number_nonblank], 1", "jmp     loc_1C3E"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 137, 0, 0, 2, 0, 1, 7, 18, 0.004123729783884355, ["cmp     eax, 6Eh ; 'n'", "jnz     loc_1CDC"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 104, 0, 0, 3, 0, 1, 19, 18, 0.018033490768570203, ["mov     cs:newlines2, r13d", "mov     r10d, 1", "jmp     loc_2375"], ["mov~<TAG>,r13d", "mov~r10d,0", "jmp~FOO"]], [1, 0, 104, 0, 1, 6, 0, 2, 19, 19, 0.006816230141691713, ["mov     rsi, [rsp+188h+dest]; buf", "mov     rdx, r15; count", "mov     edi, 1; fd", "call    full_write", "cmp     r15, rax", "jz      loc_2437"], ["mov~rsi,[rsp+0]", "mov~rdx,r15", "mov~edi,0", "call~FOO", "cmp~r15,rax", "jz~FOO"]], [2, 0, 104, 0, 3, 12, 2, 4, 20, 19, 0.0, ["lea     rsi, msgid; \"write error\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rbp, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rdx, rbp; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_2437"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rbp,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rbp", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 137, 0, 0, 1, 0, 0, 5, 19, 0.004776728209531988, ["mov     r12d, 1"], ["mov~r12d,0"]], [0, 0, 104, 0, 0, 2, 1, 1, 13, 19, 0.020395019321597253, ["test    rax, rax", "jz      loc_2647"], ["test~rax,rax", "jz~FOO"]], [1, 0, 137, 0, 0, 1, 0, 0, 6, 18, 0.014679046801202234, ["mov     [rsp+188h+show_nonprinting], 1"], ["mov~[rsp+0],0"]], [0, 0, 104, 0, 0, 2, 1, 1, 21, 8, 0.010143838557320739, ["test    r12b, r12b", "jz      short loc_2072"], ["test~r12b,r12b", "jz~FOO"]], [1, 0, 104, 0, 0, 2, 0, 1, 20, 8, 0.07170459424645771, ["cmp     r14b, 9", "jz      short loc_2050"], ["cmp~r14b,0", "jz~FOO"]], [0, 0, 104, 0, 1, 4, 1, 1, 10, 15, 0.011807642765135252, ["mov     edi, cs:input_desc; fd", "call    _close", "test    eax, eax", "jns     loc_23B3"], ["mov~edi,<TAG>", "call~FOO", "test~eax,eax", "jns~FOO"]], [1, 0, 137, 0, 0, 2, 0, 1, 7, 17, 0.03850901674538429, ["mov     [rsp+188h+show_ends], 1", "jmp     loc_1BAD"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 137, 0, 0, 2, 0, 1, 6, 18, 0.013220981823386295, ["cmp     eax, 45h ; 'E'", "jz      short loc_1C53"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 104, 1, 0, 3, 0, 0, 22, 10, 0.0034349506225848005, ["mov     eax, 495Eh", "add     r15, 2", "mov     [r15-2], ax"], ["mov~eax,0", "add~r15,0", "mov~[r15-2]+0],ax"]], [0, 0, 104, 1, 2, 10, 2, 3, 17, 19, 0.03445684843280378, ["call    ___errno_location", "mov     rcx, cs:infile", "mov     esi, [rax]; errnum", "lea     rdx, format+4; format", "xor     edi, edi; status", "mov     rbp, rax", "xor     eax, eax", "call    _error", "sub     r15, [rsp+188h+dest]", "jnz     loc_24DF"], ["call~FOO", "mov~rcx,<TAG>", "mov~esi,<TAG>", "lea~rdx,<TAG>", "xor~edi,edi", "mov~rbp,rax", "xor~eax,eax", "call~FOO", "sub~r15,[rsp+0]", "jnz~FOO"]], [1, 0, 104, 0, 1, 6, 0, 2, 16, 11, 0.1138900815800773, ["mov     rdx, [rsp+188h+count]; count", "mov     rsi, [rsp+188h+buf]; buf", "mov     edi, ebp; fd", "call    safe_read", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      loc_233F"], ["mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~edi,ebp", "call~FOO", "cmp~rax,0", "jz~FOO"]], [1, 0, 137, 0, 0, 2, 0, 1, 7, 18, 0.0015206812652068125, ["cmp     eax, 54h ; 'T'", "jnz     short loc_1CDC"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 104, 1, 0, 2, 0, 0, 23, 9, 0.011163589523400602, ["add     rbp, 1", "movzx   r14d, byte ptr [rbp-1]"], ["add~rbp,0", "movzx~r14d,[yte ptr [rbp-1]+0]"]], [1, 0, 104, 1, 0, 3, 0, 1, 22, 10, 0.0035422928295405754, ["mov     [r15], r14b", "add     r15, 1", "jmp     short loc_2063"], ["mov~<TAG>,r14b", "add~r15,0", "jmp~FOO"]], [1, 0, 137, 0, 0, 2, 0, 1, 8, 17, 0.007191927866036926, ["mov     r12d, 1", "jmp     loc_1BAD"], ["mov~r12d,0", "jmp~FOO"]], [3, 0, 104, 0, 0, 9, 0, 1, 8, 9, 0.32975525976814085, ["mov     rcx, [rsp+188h+stat_buf.st_blksize]", "mov     rax, 1FFFFFFFFFFF8000h", "lea     rdx, [rcx-8000h]", "cmp     rdx, rax", "mov     eax, 8000h", "cmovbe  rax, rcx", "cmp     [rsp+188h+check_redirection], 0", "mov     [rsp+188h+count], rax", "jz      short loc_1E89"], ["mov~rcx,[rsp+0]", "mov~rax,0", "lea~rdx,[rcx-8000h]+0]", "cmp~rdx,rax", "mov~eax,0", "cmovbe~rax,rcx", "cmp~[rsp+0],0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 104, 0, 1, 8, 2, 2, 14, 3, 0.17333082868183772, ["mov     ebp, cs:input_desc", "mov     rdx, [rsp+188h+var_128]", "xor     eax, eax", "mov     esi, 541Bh; request", "mov     edi, ebp; fd", "call    _ioctl", "test    eax, eax", "js      loc_22F7"], ["mov~ebp,<TAG>", "mov~rdx,[rsp+0]", "xor~eax,eax", "mov~esi,0", "mov~edi,ebp", "call~FOO", "test~eax,eax", "js~FOO"]], [2, 0, 104, 0, 0, 3, 0, 1, 13, 4, 0.2354551309574925, ["cmp     [rsp+188h+var_156], 0", "mov     [rsp+188h+var_DC], 0", "jnz     loc_2258"], ["cmp~[rsp+0],0", "mov~[rsp+0],0", "jnz~FOO"]], [1, 0, 104, 0, 0, 2, 0, 1, 21, 7, 0.05871618720480894, ["cmp     r14b, 0Ah", "jz      loc_2110"], ["cmp~r14b,0", "jz~FOO"]], [2, 0, 104, 0, 3, 12, 2, 4, 15, 20, 0.0, ["lea     rsi, msgid; \"write error\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r14, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rdx, r14; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_25C2"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r14,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,r14", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 104, 0, 1, 6, 0, 2, 14, 20, 0.006923572348647489, ["mov     rdx, rax; count", "mov     rsi, rbp; buf", "mov     edi, 1; fd", "call    full_write", "cmp     r14, rax", "jnz     loc_264F"], ["mov~rdx,rax", "mov~rsi,rbp", "mov~edi,0", "call~FOO", "cmp~r14,rax", "jnz~FOO"]], [0, 0, 104, 0, 0, 3, 1, 1, 15, 12, 0.06115822241305281, ["mov     edi, [rsp+188h+var_DC]", "test    edi, edi", "jnz     loc_1F98"], ["mov~edi,[rsp+0]", "test~edi,edi", "jnz~FOO"]], [1, 0, 104, 0, 0, 2, 0, 1, 17, 13, 0.010787891799055389, ["mov     [rsp+188h+var_156], 0", "jmp     loc_2279"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 104, 0, 0, 3, 0, 1, 9, 9, 0.021092743666809792, ["mov     rax, [rsp+188h+var_F8]", "cmp     [rsp+188h+stat_buf.st_dev], rax", "jz      loc_2489"], ["mov~rax,[rsp+0]", "cmp~[rsp+0],rax", "jz~FOO"]], [0, 0, 104, 0, 0, 1, 0, 1, 16, 14, 0.0012881064834693002, ["jmp     loc_1F84"], ["jmp~FOO"]], [1, 0, 104, 0, 0, 2, 0, 1, 23, 12, 0.040575354229282955, ["cmp     r14b, 7Fh", "jz      short loc_20E0"], ["cmp~r14b,0", "jz~FOO"]], [0, 0, 104, 0, 0, 3, 0, 1, 16, 8, 0.08160691283812796, ["movzx   r14d, byte ptr [rbp+0]", "mov     rbp, rdx", "jmp     loc_1FD8"], ["movzx~r14d,[yte ptr [rbp+0]", "mov~rbp,rdx", "jmp~FOO"]], [2, 0, 104, 0, 0, 3, 0, 1, 15, 9, 0.08332438814942035, ["cmp     [rsp+188h+squeeze_blank], 0", "mov     r13d, 2", "jnz     loc_2290"], ["cmp~[rsp+0],0", "mov~r13d,0", "jnz~FOO"]], [0, 0, 104, 0, 0, 3, 0, 1, 10, 9, 0.015242593387720053, ["mov     rax, [rsp+188h+out_ino]", "cmp     [rsp+188h+stat_buf.st_ino], rax", "jnz     loc_1E89"], ["mov~rax,[rsp+0]", "cmp~[rsp+0],rax", "jnz~FOO"]], [1, 0, 104, 0, 0, 4, 0, 1, 9, 8, 0.31397595534564193, ["cmp     [rsp+188h+var_F9], 0", "mov     rax, [rsp+188h+var_120]", "lea     rbp, [rax-1]", "jnz     short loc_1EB3"], ["cmp~[rsp+0],0", "mov~rax,[rsp+0]", "lea~rbp,[rax-1]+0]", "jnz~FOO"]], [0, 0, 104, 0, 0, 2, 1, 1, 11, 9, 0.009392443108630313, ["test    ebp, ebp", "jz      loc_1E89"], ["test~ebp,ebp", "jz~FOO"]], [2, 0, 104, 0, 0, 4, 0, 0, 24, 12, 0.02715757835981108, ["mov     ecx, 2D4Dh", "cmp     r14b, 9Fh", "mov     [r15], cx", "jbe     short loc_20F8"], ["mov~ecx,0", "cmp~r14b,0", "mov~<TAG>,cx", "jbe~FOO"]], [1, 0, 104, 0, 0, 2, 0, 1, 25, 12, 0.013632460283383427, ["cmp     r14b, 0FFh", "jz      loc_2240"], ["cmp~r14b,0", "jz~FOO"]], [2, 0, 107, 0, 3, 12, 2, 4, 3, 15, 0.0, ["lea     rsi, aStandardOutput; \"standard output\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     argv_0, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rdx, rbx; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_1D21"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~argv_0,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rbx", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 108, 0, 1, 9, 1, 2, 2, 15, 0.1391155002146844, ["mov     [rsp+188h+c], eax", "lea     c_0, [rsp+188h+stat_buf]", "mov     esi, 1; fildes", "mov     edi, 1; ver", "mov     rdx, rax; stat_buf", "mov     [rsp+188h+out_dev], rax", "call    ___fxstat", "test    eax, eax", "js      loc_2680"], ["mov~[rsp+0],eax", "lea~c_0,[rsp+0]", "mov~esi,0", "mov~edi,0", "mov~rdx,rax", "mov~[rsp+0],rax", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 104, 0, 0, 4, 2, 1, 10, 8, 0.056300987548303996, ["movzx   r15d, [rsp+188h+show_nonprinting]", "or      r15d, r12d", "or      r15b, [rsp+188h+squeeze_blank]", "jz      loc_2570"], ["movzx~r15d,[rsp+0]", "or~r15d,r12d", "or~r15b,[rsp+0]", "jz~FOO"]], [1, 0, 104, 0, 1, 7, 0, 2, 15, 13, 0.006816230141691713, ["mov     r15, [rsp+188h+dest]", "mov     rdx, rbp; count", "mov     edi, 1; fd", "mov     rsi, r15; buf", "call    full_write", "cmp     rbp, rax", "jz      loc_1F92"], ["mov~r15,[rsp+0]", "mov~rdx,rbp", "mov~edi,0", "mov~rsi,r15", "call~FOO", "cmp~rbp,rax", "jz~FOO"]], [0, 0, 104, 1, 0, 3, 0, 1, 14, 13, 0.06072885358522972, ["mov     rbp, r15", "sub     rbp, [rsp+188h+dest]", "jnz     loc_229D"], ["mov~rbp,r15", "sub~rbp,[rsp+0]", "jnz~FOO"]], [2, 0, 0, 1, 3, 15, 2, 3, 7, -1, 0.0, ["lea     rsi, name_utf8; \"Torbj\"", "lea     rdi, name_ascii; \"Torbjorn Granlund\"", "call    proper_name_utf8", "sub     rsp, 8", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "mov     rcx, cs:Version; version", "push    0", "lea     r9, aRichardMStallm; \"Richard M. Stallman\"", "lea     rdx, package; \"GNU \"", "lea     rsi, command_name; \"cat\"", "mov     r8, rax", "xor     eax, eax", "call    version_etc", "xor     edi, edi; status", "call    _exit"], ["lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "sub~rsp,0", "mov~rdi,<TAG>", "mov~rcx,<TAG>", "push~0", "lea~r9,<TAG>", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~r8,rax", "xor~eax,eax", "call~FOO", "xor~edi,edi", "call~FOO"]], [1, 0, 104, 0, 0, 2, 0, 1, 23, 7, 0.08262666380420781, ["cmp     r14b, 0Ah", "jz      short loc_2110"], ["cmp~r14b,0", "jz~FOO"]], [2, 0, 137, 0, 0, 3, 0, 1, 8, 17, 0.007084585659081151, ["mov     r12d, 1", "mov     [rsp+188h+show_nonprinting], 1", "jmp     loc_1BAD"], ["mov~r12d,0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 137, 0, 0, 1, 0, 1, 7, 18, 0.0035422928295405754, ["jl      loc_1CBF"], ["jl~FOO"]], [1, 0, 137, 0, 0, 2, 0, 1, 5, 17, 0.012612709317303565, ["mov     [rsp+188h+squeeze_blank], 1", "jmp     loc_1BAD"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 137, 0, 0, 2, 0, 1, 4, 18, 0.016065550307714328, ["cmp     eax, 73h ; 's'", "jz      loc_1CCF"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 8, -1, 0.0, ["mov     edi, 1; status", "call    usage"], ["mov~edi,0", "call~FOO"]], [1, 0, 104, 0, 0, 2, 0, 1, 14, 10, 0.10516852726492057, ["cmp     r13d, 1", "jz      short loc_21D7"], ["cmp~r13d,0", "jz~FOO"]], [2, 0, 104, 0, 3, 14, 2, 4, 16, 12, 0.002710390725633319, ["lea     rsi, msgid; \"write error\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbp, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rdx, rbp; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "mov     ebp, cs:input_desc", "mov     r15, [rsp+188h+dest]", "jmp     loc_1F98"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rbp,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rbp", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~ebp,<TAG>", "mov~r15,[rsp+0]", "jmp~FOO"]], [1, 0, 104, 0, 1, 6, 0, 2, 18, 19, 0.006816230141691713, ["mov     rsi, [rsp+188h+dest]; buf", "mov     rdx, r15; count", "mov     edi, 1; fd", "call    full_write", "cmp     r15, rax", "jz      loc_236B"], ["mov~rsi,[rsp+0]", "mov~rdx,r15", "mov~edi,0", "call~FOO", "cmp~r15,rax", "jz~FOO"]], [1, 0, 104, 0, 3, 19, 3, 4, 17, 0, 0.09859381708887935, ["mov     rdi, cs:infile; name", "mov     byte ptr [rsp+188h+var_180], dl", "mov     [rsp+188h+var_178], rax", "call    quote", "lea     rsi, aCannotDoIoctlO; \"cannot do ioctl on %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbp, rax", "call    _dcgettext", "mov     r9, [rsp+188h+var_178]", "mov     rdx, rax; format", "mov     rcx, rbp", "xor     edi, edi; status", "xor     eax, eax", "mov     esi, [r9]; errnum", "call    _error", "mov     cs:newlines2, r13d", "movzx   r10d, byte ptr [rsp+188h+var_180]", "jmp     loc_2375"], ["mov~rdi,<TAG>", "mov~[yte ptr [rsp+0],dl", "mov~[rsp+0],rax", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbp,rax", "call~FOO", "mov~r9,[rsp+0]", "mov~rdx,rax", "mov~rcx,rbp", "xor~edi,edi", "xor~eax,eax", "mov~esi,<TAG>", "call~FOO", "mov~<TAG>,r13d", "movzx~r10d,[yte ptr [rsp+0]", "jmp~FOO"]], [1, 0, 104, 0, 0, 4, 2, 1, 16, 1, 0.11759338772005153, ["movzx   edx, [rsp+188h+var_156]", "xor     edx, 1", "or      dl, sil", "jz      loc_26B1"], ["movzx~edx,[rsp+0]", "xor~edx,0", "or~dl,sil", "jz~FOO"]], [2, 0, 104, 0, 1, 6, 0, 2, 15, 2, 0.1202769428939459, ["call    ___errno_location", "mov     ecx, [rax]", "cmp     ecx, 5Fh ; '_'", "setz    sil", "cmp     ecx, 26h ; '&'", "ja      short loc_2324"], ["call~FOO", "mov~ecx,<TAG>", "cmp~ecx,0", "setz~sil", "cmp~ecx,0", "ja~FOO"]], [0, 0, 104, 0, 0, 3, 0, 1, 22, 6, 0.1272005152425934, ["cmp     [rsp+188h+var_178], r15", "mov     r13d, [rsp+188h+c]", "ja      loc_1F63"], ["cmp~[rsp+0],r15", "mov~r13d,[rsp+0]", "ja~FOO"]], [1, 0, 137, 0, 1, 8, 1, 2, 1, 16, 0.16010090167453844, ["mov     rsi, [rsp+188h+argv]; argv", "mov     edi, [rsp+188h+argc]; argc", "lea     rcx, long_options_6500; longopts", "lea     rdx, shortopts; \"benstuvAET\"", "xor     r8d, r8d; longind", "call    _getopt_long", "cmp     eax, 0FFFFFFFFh", "jz      loc_1CF3"], ["mov~rsi,[rsp+0]", "mov~edi,[rsp+0]", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "xor~r8d,r8d", "call~FOO", "cmp~eax,0", "jz~FOO"]], [2, 0, 104, 0, 2, 10, 2, 3, 19, 19, 0.0, ["lea     rsi, msgid; \"write error\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     esi, [rbp+0]; errnum", "mov     rdx, rax; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_236B"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~esi,[rbp+0]", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 104, 0, 0, 6, 1, 0, 16, 2, 0.0, ["mov     rdi, 4002480000h", "shr     rdi, cl", "mov     rcx, rdi", "not     rcx", "and     ecx, 1", "mov     [rsp+188h+var_156], cl"], ["mov~rdi,0", "shr~rdi,cl", "mov~rcx,rdi", "not~rcx", "and~ecx,0", "mov~[rsp+0],cl"]], [0, 0, 104, 0, 0, 3, 0, 0, 12, 8, 0.02678188063546587, ["mov     r14, [rsp+188h+dest]", "mov     [rsp+188h+var_160], rbp", "nop     word ptr [rax+rax+00h]"], ["mov~r14,[rsp+0]", "mov~[rsp+0],rbp", "nop~[ord ptr [rax+0]"]], [0, 0, 104, 0, 0, 2, 0, 0, 11, 6, 0.3222413052812366, ["cmp     [rsp+188h+var_178], r15", "jbe     loc_2120"], ["cmp~[rsp+0],r15", "jbe~FOO"]], [1, 0, 104, 0, 1, 6, 0, 2, 13, 7, 0.02560111635895234, ["mov     rdx, rbx; count", "mov     rsi, r14; buf", "mov     edi, 1; fd", "call    full_write", "cmp     rbx, rax", "jz      short loc_2171"], ["mov~rdx,rbx", "mov~rsi,r14", "mov~edi,0", "call~FOO", "cmp~rbx,rax", "jz~FOO"]], [0, 0, 104, 2, 0, 5, 0, 0, 14, 6, 0.022917561185057965, ["add     r14, rbx", "mov     r8, r15", "sub     r8, r14", "cmp     rbx, r8", "jbe     short loc_2130"], ["add~r14,rbx", "mov~r8,r15", "sub~r8,r14", "cmp~rbx,r8", "jbe~FOO"]], [0, 0, 104, 0, 1, 3, 1, 1, 18, 17, 0.1567732932589094, ["mov     rdi, [rsp+188h+outbuf]; ptr", "and     [rsp+188h+ok], r10b", "call    _free"], ["mov~rdi,[rsp+0]", "and~[rsp+0],r10b", "call~FOO"]], [2, 0, 104, 7, 2, 39, 3, 2, 10, 7, 0.25338127951910694, ["mov     r15, [rsp+188h+var_120]", "mov     r14, [rsp+188h+count]", "mov     rdi, r15", "add     rdi, r14; n", "call    xmalloc", "mov     r13, rax", "mov     [rsp+188h+inbuf], rax", "lea     inbuf_0, [r15+rbx+12h]", "lea     rdi, [rax+r14*4]; n", "call    xmalloc", "mov     rcx, rax", "mov     [rsp+188h+outbuf], rax", "xor     edx, edx", "add     rcx, rbp", "add     rbp, inbuf_0", "mov     r13d, cs:newlines2", "mov     outbuf_0, rcx", "mov     [rsp+188h+var_156], 1", "div     r15", "mov     rax, rbp", "sub     rcx, rdx", "xor     edx, edx", "div     r15", "lea     rdi, [rcx+rbx]", "mov     [rsp+188h+dest], rcx", "mov     r15, rcx", "mov     [rsp+188h+var_178], rdi", "sub     rbp, rdx", "mov     rax, rbp", "mov     [rsp+188h+buf], rbp", "lea     rbp, [rbp+1]", "mov     [rsp+188h+var_180], rax", "movzx   eax, [rsp+188h+number_nonblank]", "mov     [rsp+188h+var_148], rbp", "xor     eax, 1", "mov     [rsp+188h+var_FE], al", "lea     rax, [rsp+188h+var_DC]", "mov     [rsp+188h+var_128], rax", "nop     dword ptr [rax+00h]"], ["mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~rdi,r15", "add~rdi,r14", "call~FOO", "mov~r13,rax", "mov~[rsp+0],rax", "lea~inbuf_0,[r15+0]", "lea~rdi,<TAG>", "call~FOO", "mov~rcx,rax", "mov~[rsp+0],rax", "xor~edx,edx", "add~rcx,rbp", "add~rbp,inbuf_0", "mov~r13d,<TAG>", "mov~outbuf_0,rcx", "mov~[rsp+0],0", "div~,r15", "mov~rax,rbp", "sub~rcx,rdx", "xor~edx,edx", "div~,r15", "lea~rdi,<TAG>", "mov~[rsp+0],rcx", "mov~r15,rcx", "mov~[rsp+0],rdi", "sub~rbp,rdx", "mov~rax,rbp", "mov~[rsp+0],rbp", "lea~rbp,[rbp+0]", "mov~[rsp+0],rax", "movzx~eax,[rsp+0]", "mov~[rsp+0],rbp", "xor~eax,0", "mov~[rsp+0],al", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "nop~[word ptr [rax+0]"]], [1, 0, 104, 0, 0, 2, 0, 1, 17, 7, 0.23497209102619152, ["cmp     r14b, 0Ah", "jz      loc_1F58"], ["cmp~r14b,0", "jz~FOO"]], [5, 0, 106, 0, 0, 11, 1, 1, 3, 14, 0.14791756118505797, ["mov     rbx, [rsp+188h+stat_buf.st_blksize]", "mov     rax, 1FFFFFFFFFFF8000h", "mov     [rsp+188h+check_redirection], 0", "lea     rdx, [rbx-8000h]", "cmp     rdx, rax", "mov     eax, 8000h", "cmova   rbx, rax", "mov     eax, [rsp+188h+stat_buf.st_mode]", "and     eax, 0F000h", "cmp     eax, 8000h", "jnz     short loc_1D89"], ["mov~rbx,[rsp+0]", "mov~rax,0", "mov~[rsp+0],0", "lea~rdx,[rbx-8000h]+0]", "cmp~rdx,rax", "mov~eax,0", "cmova~rbx,rax", "mov~eax,[rsp+0]", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [0, 0, 104, 0, 0, 2, 0, 0, 12, 5, 0.41997638471446974, ["cmp     rbp, [rsp+188h+var_180]", "jbe     loc_21B0"], ["cmp~rbp,[rsp+0]", "jbe~FOO"]], [2, 0, 104, 0, 3, 11, 2, 3, 14, 7, 0.0, ["lea     rsi, msgid; \"write error\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbp, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rdx, rbp; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rbp,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rbp", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [0, 0, 104, 0, 0, 2, 1, 0, 18, 18, 0.030431515671962218, ["mov     cs:newlines2, r13d", "xor     r10d, r10d"], ["mov~<TAG>,r13d", "xor~r10d,r10d"]], [0, 0, 104, 0, 1, 11, 0, 2, 15, 5, 0.021414770287677114, ["mov     r15, [rsp+188h+dest]", "mov     rdx, r8; n", "mov     rsi, r14; src", "mov     rbp, [rsp+188h+var_160]", "mov     [rsp+188h+var_160], r8", "mov     rdi, r15; dest", "call    _memmove", "cmp     rbp, [rsp+188h+var_180]", "mov     r8, [rsp+188h+var_160]", "lea     r15, [r15+r8]", "ja      loc_1F6E"], ["mov~r15,[rsp+0]", "mov~rdx,r8", "mov~rsi,r14", "mov~rbp,[rsp+0]", "mov~[rsp+0],r8", "mov~rdi,r15", "call~FOO", "cmp~rbp,[rsp+0]", "mov~r8,[rsp+0]", "lea~r15,<TAG>", "ja~FOO"]], [1, 0, 105, 0, 0, 5, 0, 0, 4, 14, 0.0, ["mov     rax, [rsp+188h+stat_buf.st_dev]", "mov     [rsp+188h+check_redirection], 1", "mov     [rsp+188h+var_F8], rax", "mov     out_dev_0, [rsp+188h+stat_buf.st_ino]", "mov     [rsp+188h+out_ino], rax"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~out_dev_0,[rsp+0]", "mov~[rsp+0],rax"]], [0, 0, 104, 0, 0, 1, 0, 0, 15, 12, 0.04846500644053242, ["mov     ebp, cs:input_desc"], ["mov~ebp,<TAG>"]], [1, 0, 137, 0, 0, 2, 0, 1, 2, 19, 0.025762129669386003, ["cmp     eax, 62h ; 'b'", "jz      loc_1CE6"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 104, 3, 1, 13, 1, 2, 11, 20, 0.05104121940747102, ["mov     rax, [rsp+188h+count]", "cmp     rbx, rax", "cmovnb  rax, rbx", "lea     rdi, [rax+rbp]; n", "mov     r13, rax", "call    xmalloc", "add     rbp, rax", "mov     [rsp+188h+inbuf], rax", "xor     edx, edx", "mov     inbuf_0, rbp", "div     [rsp+188h+var_120]", "sub     rbp, rdx", "jmp     short loc_25C2"], ["mov~rax,[rsp+0]", "cmp~rbx,rax", "cmovnb~rax,rbx", "lea~rdi,<TAG>", "mov~r13,rax", "call~FOO", "add~rbp,rax", "mov~[rsp+0],rax", "xor~edx,edx", "mov~inbuf_0,rbp", "div~,[rsp+0]", "sub~rbp,rdx", "jmp~FOO"]], [1, 0, 104, 0, 1, 7, 0, 2, 12, 19, 0.060809360240446544, ["mov     edi, cs:input_desc; fd", "mov     rdx, insize; count", "mov     rsi, rbp; buf", "call    safe_read", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     r14, rax", "jnz     short loc_25A0"], ["mov~edi,<TAG>", "mov~rdx,insize", "mov~rsi,rbp", "call~FOO", "cmp~rax,0", "mov~r14,rax", "jnz~FOO"]], [7, 0, 137, 1, 6, 33, 2, 6, 0, 17, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "xor     r12d, r12d", "push    rbp", "push    rbx", "mov     rbx, argv_0", "sub     rsp, 158h", "mov     [rsp+188h+argv], argv_0", "mov     [rsp+188h+argc], edi", "mov     rax, fs:28h", "mov     [rsp+188h+var_40], rax", "xor     eax, eax", "call    _getpagesize", "mov     rdi, [argv_0]; argv0", "mov     ebp, eax", "call    set_program_name", "lea     rsi, aWrittenBySSAnd+1Bh; locale", "mov     edi, 6; category", "call    _setlocale", "lea     rsi, dirname; \"/usr/local/share/locale\"", "lea     rdi, domainname; \"coreutils\"", "call    _bindtextdomain", "lea     rdi, domainname; \"coreutils\"", "call    _textdomain", "lea     rdi, close_stdout", "call    atexit", "mov     [rsp+188h+show_nonprinting], 0", "mov     [rsp+188h+show_ends], 0", "mov     [rsp+188h+squeeze_blank], 0", "mov     [rsp+188h+number_nonblank], 0", "mov     [rsp+188h+number], 0"], ["push~r15", "push~r14", "push~r13", "push~r12", "xor~r12d,r12d", "push~rbp", "push~rbx", "mov~rbx,argv_0", "sub~rsp,0", "mov~[rsp+0],argv_0", "mov~[rsp+0],edi", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~rdi,<TAG>", "mov~ebp,eax", "call~FOO", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [1, 0, 104, 1, 0, 4, 0, 1, 8, 14, 0.22804851867754403, ["add     [rsp+188h+var_130], 1", "mov     rax, [rsp+188h+var_130]", "cmp     [rsp+188h+argc], eax", "jg      loc_1DD8"], ["add~[rsp+0],0", "mov~rax,[rsp+0]", "cmp~[rsp+0],eax", "jg~FOO"]], [1, 0, 137, 0, 0, 2, 0, 1, 6, 17, 0.01121726062687849, ["cmp     eax, 75h ; 'u'", "jz      short loc_1BAD"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 104, 1, 0, 6, 0, 0, 18, 9, 0.04095105195362817, ["mov     rsi, [rsp+188h+buf]", "mov     rbp, [rsp+188h+var_148]", "add     rax, rsi", "mov     [rsp+188h+var_180], rax", "mov     byte ptr [rax], 0Ah", "mov     rax, rsi"], ["mov~rsi,[rsp+0]", "mov~rbp,[rsp+0]", "add~rax,rsi", "mov~[rsp+0],rax", "mov~<TAG>,0", "mov~rax,rsi"]], [0, 0, 104, 0, 0, 1, 0, 0, 16, 8, 0.14917883211678834, ["movzx   r14d, byte ptr [rax]"], ["movzx~r14d,<TAG>"]], [1, 0, 0, 0, 1, 4, 1, 1, 10, -1, 0.0, ["movzx   edi, [rsp+188h+ok]", "xor     edi, 1", "movzx   edi, dil; status", "call    _exit"], ["movzx~edi,[rsp+0]", "xor~edi,0", "movzx~edi,dil", "call~FOO"]]], "func_feature": [70, 71, 173, 11, 138, 210, 0, 671, 0.06318, 26, 34], "succs": [[9], [0, 9], [112], [104, 2], [41, 51], [4, 6], [4], [24], [24, 7], [64, 20], [9, 1], [17], [11], [11], [65, 133], [14], [14], [14], [137, 53], [137, 18], [45], [60, 23], [21, 103], [67, 27], [48, 31], [24, 105], [24, 8], [98, 30], [32], [28, 85], [104, 42], [48], [45], [32], [32], [32], [32], [32], [32], [133], [39], [50, 39], [], [57, 58], [43, 135], [49, 29], [56, 62], [134, 46], [136], [99, 52], [75, 15], [50], [33, 99], [137], [112], [54], [104, 54], [119], [57, 59], [57], [62], [80, 12], [66], [68, 78], [78, 63], [40, 133], [112], [66, 71], [72], [107, 125], [44, 69], [104, 74], [64], [72], [112], [89, 83], [81, 110], [97, 76], [73, 111], [131], [131, 79], [84, 70], [81], [88, 89], [97], [91, 36], [121], [26, 86], [89, 90], [120, 95], [16, 89], [92, 37], [34, 38], [122], [122, 93], [120, 130], [128, 106], [96, 128], [], [35, 111], [112], [3, 100], [112], [102, 47], [], [26, 87], [70], [113, 125], [119], [82, 108], [114, 109], [123, 115], [129, 94], [125], [109], [117], [123, 115], [124, 118], [117, 126], [17], [116], [10, 116], [5, 127], [25, 77], [118], [119], [25, 77], [5], [70], [22, 55], [131], [61, 13], [112], [19, 6], [112, 101], [136], [121], []], "fname": "main", "n_num": 138}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[1, 0, 0, 0, 1, 12, 2, 1, 0, 0, 0.0, ["xor     ebp, ebp", "mov     r9, rdx; rtld_fini", "pop     rsi; argc", "mov     rdx, rsp; ubp_av", "and     rsp, 0FFFFFFFFFFFFFFF0h", "push    rax", "push    rsp; stack_end", "lea     r8, __libc_csu_fini; fini", "lea     rcx, __libc_csu_init; init", "lea     rdi, main; main", "call    cs:__libc_start_main_ptr", "hlt"], ["xor~ebp,ebp", "mov~r9,rdx", "pop~rsi", "mov~rdx,rsp", "and~rsp,0", "push~rax", "push~rsp", "lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "call~<TAG>", "hlt"]]], "func_feature": [1, 2, 1, 0, 1, 0, 0, 12, 0.0, 4, 0], "succs": [[]], "fname": "_start", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_deregisterTMCloneTable_ptr", "test    rax, rax", "jz      short loc_2770"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 6, 0, 1, 0, 1, 0.0, ["lea     rdi, __bss_start", "push    rbp", "lea     rax, __bss_start", "cmp     rax, rdi", "mov     rbp, rsp", "jz      short loc_2770"], ["lea~rdi,<TAG>", "push~rbp", "lea~rax,<TAG>", "cmp~rax,rdi", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, -1, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 13, 0.04167, 2, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "deregister_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [3, 0, 3, 2, 0, 11, 0, 1, 0, 0, 0.0, ["lea     rdi, __bss_start", "lea     rsi, __bss_start", "push    rbp", "sub     rsi, rdi", "mov     rbp, rsp", "sar     rsi, 3", "mov     rax, rsi", "shr     rax, 3Fh", "add     rsi, rax", "sar     rsi, 1", "jz      short loc_27C0"], ["lea~rdi,<TAG>", "lea~rsi,<TAG>", "push~rbp", "sub~rsi,rdi", "mov~rbp,rsp", "sar~rsi,0", "mov~rax,rsi", "shr~rax,0", "add~rsi,rax", "sar~rsi,0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_registerTMCloneTable_ptr", "test    rax, rax", "jz      short loc_27C0"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, 0, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 18, 0.04167, 2, 2], "succs": [[], [0, 2], [0, 3], []], "fname": "register_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[1, 0, 0, 0, 1, 4, 0, 1, 0, 0, 0.0, ["call    deregister_tm_clones", "mov     cs:completed_7698, 1", "pop     rbp", "retn"], ["call~FOO", "mov~<TAG>,0", "pop~rbp", "retn"]], [1, 0, 2, 0, 0, 4, 0, 1, 1, -1, 0.16666666666666666, ["cmp     cs:__cxa_finalize_ptr, 0", "push    rbp", "mov     rbp, rsp", "jz      short loc_27F3"], ["cmp~<TAG>,0", "push~rbp", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     rdi, cs:__dso_handle", "call    __cxa_finalize"], ["mov~rdi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:completed_7698, 0", "jnz     short locret_2808"], ["cmp~<TAG>,0", "jnz~FOO"]]], "func_feature": [2, 0, 4, 0, 5, 5, 0, 13, 0.03333, 3, 0], "succs": [[], [0, 2], [0], [], [1, 3]], "fname": "__do_global_dtors_aux", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "pop     rbp", "jmp     register_tm_clones"], ["push~rbp", "mov~rbp,rsp", "pop~rbp", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "frame_dummy", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 2, 0, 0, 3, 0, 0, 5, -1, 0.16666666666666666, ["mov     rax, cs:line_num_print", "cmp     rax, rdx", "jbe     short locret_2882"], ["mov~rax,<TAG>", "cmp~rax,rdx", "jbe~FOO"]], [1, 0, 1, 1, 0, 2, 0, 0, 6, -1, 0.0, ["sub     rax, 1", "mov     cs:line_num_print, rax"], ["sub~rax,0", "mov~<TAG>,rax"]], [1, 0, 9, 0, 0, 3, 0, 1, 1, 3, 0.125, ["movzx   edx, byte ptr [endp]", "cmp     dl, 38h ; '8'", "jg      short loc_2830"], ["movzx~edx,<TAG>", "cmp~dl,0", "jg~FOO"]], [0, 0, 9, 0, 0, 3, 0, 1, 0, 4, 0.0, ["mov     rcx, cs:line_num_start", "lea     rax, line_buf+11h; \"0\\t\"", "jmp     short loc_283D"], ["mov~rcx,<TAG>", "lea~rax,<TAG>", "jmp~FOO"]], [2, 0, 9, 1, 0, 4, 0, 1, 2, 2, 0.16666666666666666, ["sub     endp, 1", "mov     byte ptr [endp+1], 30h ; '0'", "cmp     rcx, endp", "ja      short loc_2850"], ["sub~endp,0", "mov~[yte ptr [endp+0],0", "cmp~rcx,endp", "ja~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 4, -1, 0.08333333333333333, ["lea     rdx, [rcx-1]", "mov     byte ptr [rcx-1], 31h ; '1'", "mov     cs:line_num_start, rdx"], ["lea~rdx,[rcx-1]+0]", "mov~[yte ptr [rcx-1]+0],0", "mov~<TAG>,rdx"]], [0, 0, 5, 0, 0, 3, 0, 0, 3, 1, 0.20833333333333331, ["lea     endp, line_buf; \"                 0\\t\"", "cmp     rcx, rax", "jbe     short loc_2888"], ["lea~endp,<TAG>", "cmp~rcx,rax", "jbe~FOO"]], [1, 0, 0, 1, 0, 3, 0, 0, 2, -1, 0.0, ["add     edx, 1", "mov     [endp], dl", "retn"], ["add~edx,0", "mov~<TAG>,dl", "retn"]], [1, 0, 3, 0, 0, 3, 0, 1, 4, 0, 0.08333333333333333, ["mov     byte ptr cs:line_buf, 3Eh ; '>'; \"                 0\\t\"", "mov     rdx, rcx", "jmp     short loc_286B"], ["mov~<TAG>,0", "mov~rdx,rcx", "jmp~FOO"]]], "func_feature": [0, 0, 4, 0, 10, 12, 2, 28, 0.08333, 4, 3], "succs": [[], [0, 2], [0], [8, 5], [3], [3, 7], [1], [9, 6], [], [1]], "fname": "next_line_num", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 1, 2, 0, 1, 0, 0, 0.0, ["mov     edi, ebx; status", "call    _exit"], ["mov~edi,ebx", "call~FOO"]], [2, 0, 1, 0, 3, 13, 2, 4, 2, -1, 0.1, ["mov     rdi, cs:program_name; name", "call    last_component", "lea     rsi, aForCompleteDoc; \"For complete documentation, run: info c\"...", "mov     rbp, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_28DF"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 2, 9, 2, 2, 1, -1, 0.03333333333333333, ["lea     rsi, aTrySHelpForMor; \"Try `%s --help' for more information.\\n\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     rcx, rbp", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~rcx,rbp", "mov~esi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 3, 0, 1, 6, 1, 2, 2, 1, 0.06666666666666667, ["lea     rsi, s2; \"en_\"", "mov     edx, 3; n", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_2AE0"], ["lea~rsi,<TAG>", "mov~edx,0", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [14, 0, 4, 0, 22, 95, 16, 23, 1, 2, 0.1, ["lea     rsi, aUsageSOptionFi; \"Usage: %s [OPTION]... [FILE]...\\n\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aConcatenateFil; \"Concatenate FILE(s), or standard input,\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aTEquivalentToV; \"  -t                       equivalent t\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aHelpDisplayThi; \"      --help     display this help and \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aVersionOutputV; \"      --version  output version informa\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aWithNoFileOrWh; \"\\nWith no FILE, or when FILE is -, read\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:program_name", "lea     rsi, aExamplesSFGOut; \"\\nExamples:\\n  %s f - g  Output f's con\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rdi, cs:program_name; name", "call    last_component", "lea     rsi, aReportSBugsToS; \"\\nReport %s bugs to %s\\n\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     rbp, rax", "call    _dcgettext", "lea     rcx, aBugCoreutilsGn; \"bug-coreutils@gnu.org\"", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "lea     rsi, aSHomePageHttpW; \"%s home page: <http://www.gnu.org/softw\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rcx, domainname; \"coreutils\"", "lea     rdx, package; \"GNU \"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aGeneralHelpUsi; \"General help using GNU software: <http:\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "xor     esi, esi; locale", "mov     edi, 5; category", "call    _setlocale", "test    rax, rax", "jz      short loc_2AA7"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rbp", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~rbp,rax", "call~FOO", "lea~rcx,<TAG>", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [2, 0, 6, 1, 0, 8, 1, 1, 0, 3, 0.0, ["push    rbp", "push    rbx", "mov     edx, 5; category", "mov     ebx, edi", "sub     rsp, 8", "test    edi, edi", "mov     rbp, cs:program_name", "jz      short loc_28E6"], ["push~rbp", "push~rbx", "mov~edx,0", "mov~ebx,edi", "sub~rsp,0", "test~edi,edi", "mov~rbp,<TAG>", "jz~FOO"]], [2, 0, 2, 0, 3, 13, 2, 4, 3, 0, 0.0, ["mov     rdi, cs:program_name; name", "call    last_component", "lea     rsi, aReportSTransla; \"Report %s translation bugs to <http://t\"...", "mov     rbp, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     short loc_2AA7"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]]], "func_feature": [32, 24, 37, 0, 7, 9, 2, 146, 0.04286, 20, 1], "succs": [[], [0], [0], [1, 6], [1, 3], [2, 4], [1]], "fname": "usage", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[1, 0, 5, 0, 1, 6, 0, 2, 0, 0, 0.21428571428571427, ["mov     rdx, count; count", "mov     rsi, ptr; buf", "mov     edi, r13d; fd", "call    safe_write", "cmp     n_rw, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_2B40"], ["mov~rdx,count", "mov~rsi,ptr", "mov~edi,r13d", "call~FOO", "cmp~n_rw,0", "jnz~FOO"]], [0, 0, 5, 0, 0, 5, 1, 1, 1, -1, 0.09523809523809523, ["mov     r13d, edi", "mov     rbp, ptr", "mov     rbx, count", "xor     r12d, r12d", "jmp     short loc_2B50"], ["mov~r13d,edi", "mov~rbp,ptr", "mov~rbx,count", "xor~r12d,r12d", "jmp~FOO"]], [0, 0, 5, 3, 0, 4, 0, 1, 4, -1, 0.047619047619047616, ["add     total, n_rw", "add     ptr, n_rw", "sub     rbx, n_rw", "jz      short loc_2B64"], ["add~total,n_rw", "add~ptr,n_rw", "sub~rbx,n_rw", "jz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 3, -1, 0.16666666666666666, ["test    n_rw, n_rw", "jz      short loc_2B78"], ["test~n_rw,n_rw", "jz~FOO"]], [1, 0, 7, 1, 0, 7, 1, 1, 0, 1, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "test    count, count", "jz      short loc_2B91"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "test~count,count", "jz~FOO"]], [2, 0, 0, 1, 1, 9, 0, 1, 4, -1, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 1Ch", "add     rsp, 8", "mov     rax, total", "pop     count", "pop     ptr", "pop     total", "pop     fd", "retn"], ["call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rax,total", "pop~count", "pop~ptr", "pop~total", "pop~fd", "retn"]], [1, 0, 0, 1, 0, 7, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "mov     rax, r12", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "mov~rax,r12", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 1, 0, 0, 2, 1, 1, 1, 0, 0.023809523809523808, ["xor     r12d, r12d", "jmp     short loc_2B64"], ["xor~r12d,r12d", "jmp~FOO"]]], "func_feature": [2, 4, 8, 0, 8, 10, 5, 42, 0.06845, 0, 6], "succs": [[3, 6], [0], [0, 6], [2, 5], [1, 7], [], [], [6]], "fname": "full_write", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[2, 0, 2, 0, 0, 9, 1, 1, 0, 0, 0.09523809523809523, ["lea     rdi, aLt; \"lt-\"", "mov     ecx, 3", "mov     rsi, base", "mov     rbx, base", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     short loc_2C0D"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,base", "mov~rbx,base", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "test~dl,dl", "jnz~FOO"]], [2, 0, 3, 0, 0, 8, 1, 1, 3, -1, 0.14285714285714285, ["lea     rsi, [slash-6]", "lea     rdi, aLibs; \"/.libs/\"", "mov     ecx, 7", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     short loc_2C0D"], ["lea~rsi,[slash-6]+0]", "lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "test~dl,dl", "jnz~FOO"]], [1, 0, 4, 1, 0, 5, 0, 1, 2, -1, 0.14285714285714285, ["lea     r8, [slash+1]", "mov     rdx, base", "sub     rdx, argv0", "cmp     rdx, 6", "jle     short loc_2C0D"], ["lea~r8,[slash+0]", "mov~rdx,base", "sub~rdx,argv0", "cmp~rdx,0", "jle~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 0, 1, 0.0, ["test    argv0, argv0", "push    rbx", "jz      short loc_2C1D"], ["test~argv0,argv0", "push~rbx", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 5, -1, 0.0, ["lea     rbx, [slash+4]", "mov     cs:program_invocation_short_name@@GLIBC_2_2_5, argv0"], ["lea~rbx,[slash+0]", "mov~<TAG>,argv0"]], [1, 0, 5, 0, 1, 5, 1, 2, 1, -1, 0.11904761904761904, ["mov     esi, 2Fh ; '/'; c", "mov     rbx, argv0", "call    _strrchr", "test    slash, slash", "jz      short loc_2C0D"], ["mov~esi,0", "mov~rbx,argv0", "call~FOO", "test~slash,slash", "jz~FOO"]], [2, 0, 0, 0, 2, 6, 0, 2, 1, 0, 0.0, ["mov     rcx, cs:stderr@@GLIBC_2_2_5; s", "lea     argv0, aANullArgv0WasP; \"A NULL argv[0] was passed through an ex\"...", "mov     edx, 37h ; '7'; n", "mov     esi, 1; size", "call    _fwrite", "call    _abort"], ["mov~rcx,<TAG>", "lea~argv0,<TAG>", "mov~edx,0", "mov~esi,0", "call~FOO", "call~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["mov     cs:program_name, argv0", "mov     cs:program_invocation_name@@GLIBC_2_2_5, argv0", "pop     argv0", "retn"], ["mov~<TAG>,argv0", "mov~<TAG>,argv0", "pop~argv0", "retn"]]], "func_feature": [3, 4, 8, 0, 8, 11, 1, 42, 0.0625, 7, 1], "succs": [[4, 7], [0, 7], [1, 7], [5, 6], [7], [2, 7], [], []], "fname": "set_program_name", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 119, 0, 0, 2, 1, 1, 0, 0, 0.04094858282295969, ["test    rax, rax", "jnz     short loc_322B"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 14, 3, 0.05597493234581968, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_32C0"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 11, 6, 0.16639367611451358, ["cmp     [rsp+0D8h+string_iter.next_done], 0", "jz      loc_2F50"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 119, 0, 0, 5, 1, 1, 13, 7, 0.03952428428998718, ["mov     ecx, [rsp+0D8h+tsub_iter.cur.wc]", "mov     [rsp+0D8h+tsub_iter.in_shift], 0", "mov     [rsp+0D8h+tsub_iter.next_done], 1", "test    ecx, ecx", "jnz     loc_3004"], ["mov~ecx,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "test~ecx,ecx", "jnz~FOO"]], [3, 0, 119, 0, 0, 4, 0, 1, 10, 7, 0.1335279874661729, ["mov     [rsp+0D8h+tsub_iter.cur.bytes], 1", "mov     [rsp+0D8h+tsub_iter.cur.wc_valid], 0", "mov     [rsp+0D8h+tsub_iter.next_done], 1", "jmp     loc_3004"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 119, 0, 1, 6, 0, 2, 11, 7, 0.0020652328728101407, ["mov     rdi, [rsp+0D8h+tsub_iter.cur.ptr]; s", "call    _strlen", "mov     [rsp+0D8h+tsub_iter.cur.wc_valid], 0", "mov     [rsp+0D8h+tsub_iter.cur.bytes], rax", "mov     [rsp+0D8h+tsub_iter.next_done], 1", "jmp     loc_3004"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 11, 7, 0.3688221051132317, ["mov     ecx, [rsp+0D8h+tsub_iter.cur.wc]", "test    ecx, ecx", "jz      loc_30D0"], ["mov~ecx,[rsp+0]", "test~ecx,ecx", "jz~FOO"]], [1, 0, 119, 0, 3, 12, 0, 4, 6, 4, 0.12298817832217632, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+0D8h+string_iter.cur.ptr]; s", "lea     rcx, [rbx+4]; p", "mov     rdx, rax; n", "mov     rdi, r14; pwc", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "jz      loc_2E98"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[rbx+0]", "mov~rdx,rax", "mov~rdi,r14", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 8, 5, 0.009186725537672696, ["mov     [rsp+0D8h+string_iter.in_shift], 1", "jmp     loc_2DDE"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 5, 5, 0.15745620282011108, ["cmp     [rsp+0D8h+string_iter.in_shift], 0", "jz      short loc_2D70"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 119, 0, 0, 1, 0, 1, 7, 12, 0.0002492522432701894, ["jmp     loc_2CF6"], ["jmp~FOO"]], [1, 0, 119, 0, 1, 6, 1, 2, 6, 11, 0.035108958837772354, ["mov     byte ptr [rsp+0D8h+var_CC], dl", "call    ___ctype_b_loc", "movzx   edx, byte ptr [rsp+0D8h+var_CC]", "mov     rax, [rax]", "test    byte ptr [rax+rdx*2], 8", "jnz     loc_2CFB"], ["mov~[yte ptr [rsp+0],dl", "call~FOO", "movzx~edx,[yte ptr [rsp+0]", "mov~rax,<TAG>", "test~<TAG>,0", "jnz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 12, 7, 0.05198689645349665, ["cmp     [rsp+0D8h+string_iter.cur.wc_valid], 0", "jz      short loc_2F9F"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 119, 0, 0, 1, 0, 1, 13, 8, 0.008759435977780942, ["jmp     loc_2F93"], ["jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 7, 3, 0.06708446090300527, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_2EB8"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 8, 2, 0.052200541233442525, ["test    rax, rax", "jnz     loc_2EF0"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 17, 10, 0.009222333000997009, ["mov     r8d, [rsp+0D8h+string_iter.cur.wc]", "test    r8d, r8d", "jnz     loc_34C9"], ["mov~r8d,[rsp+0]", "test~r8d,r8d", "jnz~FOO"]], [2, 0, 119, 0, 0, 4, 0, 1, 16, 1, 0.009827659877510326, ["mov     rax, [rsp+0D8h+string_iter.cur.ptr]", "mov     [rsp+0D8h+string_iter.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_3543"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 119, 0, 3, 13, 0, 4, 18, 4, 0.07869249394673124, ["mov     [rsp+0D8h+string_iter.in_shift], 1", "call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+0D8h+string_iter.cur.ptr]; s", "mov     rcx, r15; p", "mov     rdx, rax; n", "mov     rdi, r14; pwc", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "jz      short loc_3498"], ["mov~[rsp+0],0", "call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "mov~rcx,r15", "mov~rdx,rax", "mov~rdi,r14", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 119, 0, 1, 4, 1, 2, 17, 5, 0.07968950291981199, ["mov     rdi, r15; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_351F"], ["mov~rdi,r15", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 119, 0, 1, 4, 1, 2, 10, 6, 0.01039737929069933, ["lea     rdi, [r12+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_351F"], ["lea~rdi,[r12+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 119, 0, 0, 8, 1, 0, 9, 7, 0.35493519441674976, ["mov     rcx, [rsp+0D8h+tsub_iter.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     short loc_3020"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [0, 0, 119, 0, 0, 1, 0, 0, 17, 11, 0.031049708018800738, ["mov     edx, [rsp+0D8h+string_iter.cur.wc]"], ["mov~edx,[rsp+0]"]], [0, 0, 119, 0, 0, 2, 1, 1, 16, 2, 0.04778521578122774, ["test    rax, rax", "jz      loc_34A6"], ["test~rax,rax", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 19, 3, 0.056331006979062806, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_34E4"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 119, 0, 0, 1, 0, 0, 11, 5, 0.009186725537672696, ["mov     [rsp+0D8h+tsub_iter.in_shift], 1"], ["mov~[rsp+0],0"]], [2, 0, 119, 0, 0, 4, 0, 1, 9, 1, 0.013388406209941603, ["mov     r15, [rsp+0D8h+string_iter.cur.ptr]", "mov     [rsp+0D8h+string_iter.cur.bytes], 1", "cmp     byte ptr [r15], 0", "jnz     loc_3543"], ["mov~r15,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 20, 2, 0.041233442529554194, ["test    rax, rax", "jnz     short loc_345B"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 119, 0, 1, 5, 1, 2, 16, 9, 0.04023643355647343, ["lea     rdi, [rbx+4]; ps", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_32E0"], ["lea~rdi,[rbx+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 10, 11, 0.010967098703888335, ["mov     edx, [rsp+0D8h+string_iter.cur.wc]", "test    edx, edx", "jnz     loc_34C9"], ["mov~edx,[rsp+0]", "test~edx,edx", "jnz~FOO"]], [2, 0, 119, 0, 0, 3, 0, 1, 17, 8, 0.016415040592508187, ["mov     [rsp+0D8h+string_iter.in_shift], 0", "mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_2F93"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 119, 0, 0, 4, 0, 1, 21, 1, 0.010468594217347955, ["mov     rax, [rsp+0D8h+string_iter.cur.ptr]", "mov     [rsp+0D8h+string_iter.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_3543"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 22, 14, 0.009542800170915824, ["mov     edx, [rsp+0D8h+string_iter.cur.wc]", "test    edx, edx", "jnz     short loc_34C9"], ["mov~edx,[rsp+0]", "test~edx,edx", "jnz~FOO"]], [1, 0, 119, 0, 1, 7, 1, 2, 10, 10, 0.048426150121065374, ["lea     rdi, [rbx+4]; ps", "mov     [rsp+0D8h+var_CC], edx", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "mov     edx, [rsp+0D8h+var_CC]", "jz      short loc_2EE0"], ["lea~rdi,[rbx+0]", "mov~[rsp+0],edx", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "mov~edx,[rsp+0]", "jz~FOO"]], [0, 0, 119, 0, 0, 2, 0, 1, 9, 11, 0.031405782652043863, ["mov     edx, [rsp+0D8h+string_iter.cur.wc]", "jmp     loc_2E4A"], ["mov~edx,[rsp+0]", "jmp~FOO"]], [1, 0, 119, 0, 3, 12, 0, 4, 9, 4, 0.22204814129041445, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+0D8h+tsub_iter.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+0D8h+tsub_iter.cur.ptr]; s", "lea     rcx, [r12+4]; p", "lea     rdi, [r12+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0D8h+tsub_iter.cur.bytes], rax", "jz      loc_3250"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[r12+0]", "lea~rdi,[r12+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 8, 5, 0.5667996011964107, ["cmp     [rsp+0D8h+tsub_iter.in_shift], 0", "jnz     short loc_3037"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 119, 0, 1, 5, 1, 2, 21, 13, 0.03988035892323031, ["lea     rdi, [rbx+4]; ps", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      short loc_34D0"], ["lea~rdi,[rbx+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 119, 0, 0, 3, 0, 1, 11, 9, 0.02050989887480416, ["mov     [rsp+0D8h+string_iter.in_shift], 0", "mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_2DAA"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 10, 3, 0.0811138014527845, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_3288"], ["cmp~rax,0", "jz~FOO"]], [2, 0, 119, 0, 0, 3, 0, 1, 22, 12, 0.016237003275886626, ["mov     [rsp+0D8h+string_iter.in_shift], 0", "mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_318D"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 11, 2, 0.0716422162085173, ["test    rax, rax", "jnz     short loc_30A1"], ["test~rax,rax", "jnz~FOO"]], [2, 0, 119, 0, 0, 3, 0, 1, 14, 7, 0.029198119925936475, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 0", "jmp     loc_2F9F"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 3, 12, 0, 4, 13, 4, 0.09257940464321321, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+0D8h+string_iter.cur.ptr]; s", "lea     rcx, [rbx+4]; p", "mov     rdx, rax; n", "mov     rdi, r14; pwc", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "jz      short loc_3270"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[rbx+0]", "mov~rdx,rax", "mov~rdi,r14", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 119, 0, 1, 4, 1, 2, 7, 6, 0.011892892750320466, ["lea     rdi, [rbx+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_351F"], ["lea~rdi,[rbx+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 119, 0, 0, 8, 1, 0, 6, 7, 0.044651759008688216, ["mov     r15, [rsp+0D8h+string_iter.cur.ptr]", "movzx   edx, byte ptr [r15]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_2E78"], ["mov~r15,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [2, 0, 119, 1, 1, 20, 1, 1, 0, 10, 0.0, ["push    r15", "push    r14", "mov     r15, string", "push    r13", "push    r12", "mov     string, sub; s", "push    rbp", "push    rbx", "mov     esi, 2; how", "lea     r13, is_basic_table", "sub     rsp, 0A8h", "lea     rbx, [rsp+0D8h+string_iter]", "lea     r12, [rsp+0D8h+tsub_iter]", "mov     rax, fs:28h", "mov     [rsp+0D8h+var_40], rax", "xor     eax, eax", "lea     r14, [rbx+24h]", "call    trim2", "mov     [rsp+0D8h+tsub], rax", "nop     dword ptr [rax]"], ["push~r15", "push~r14", "mov~r15,string", "push~r13", "push~r12", "mov~string,sub", "push~rbp", "push~rbx", "mov~esi,0", "lea~r13,<TAG>", "sub~rsp,0", "lea~rbx,[rsp+0]", "lea~r12,[rsp+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~r14,[rbx+0]", "call~FOO", "mov~<TAG>,rax", "nop~<TAG>"]], [2, 0, 119, 0, 0, 4, 0, 1, 12, 1, 0.01103831363053696, ["mov     rax, [rsp+0D8h+tsub_iter.cur.ptr]", "mov     [rsp+0D8h+tsub_iter.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_3543"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [3, 0, 119, 0, 0, 5, 0, 1, 15, 9, 0.02684802734653183, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 0", "mov     edx, [rsp+0D8h+string_iter.cur.wc]", "mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_3122"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~edx,[rsp+0]", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 3, 12, 0, 4, 14, 4, 0.09706594502207662, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+0D8h+string_iter.cur.ptr]; s", "lea     rcx, [rbx+4]; p", "mov     rdx, rax; n", "mov     rdi, r14; iter", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "jz      loc_347C"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[rbx+0]", "mov~rdx,rax", "mov~rdi,r14", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 1, 9, 0.3899729383278735, ["cmp     byte ptr [string], 0", "jz      short loc_2D0B"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 119, 1, 0, 3, 0, 1, 19, 10, 0.3809998575701467, ["mov     r15, [rsp+0D8h+string_iter.cur.bytes]", "add     r15, tsub_in_string", "jmp     loc_2C90"], ["mov~r15,[rsp+0]", "add~r15,tsub_in_string", "jmp~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 13, 9, 0.009827659877510326, ["mov     esi, [rsp+0D8h+tsub_iter.cur.wc]", "test    esi, esi", "jnz     loc_34C9"], ["mov~esi,[rsp+0]", "test~esi,esi", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 8, 8, 0.08367753881213502, ["test    edx, edx", "jz      loc_351A"], ["test~edx,edx", "jz~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 14, 7, 0.0747044580544082, ["mov     edi, [rsp+0D8h+string_iter.cur.wc]", "test    edi, edi", "jz      loc_351A"], ["mov~edi,[rsp+0]", "test~edi,edi", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 22, 12, 0.016237003275886626, ["mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_318D"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 119, 0, 1, 6, 1, 2, 2, 8, 0.4512889901723401, ["mov     rsi, [rsp+0D8h+tsub]; needle", "mov     rdi, string; haystack", "call    mbsstr", "test    rax, rax", "mov     rbp, rax", "jz      short loc_2D0B"], ["mov~rsi,<TAG>", "mov~rdi,string", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [1, 0, 119, 0, 0, 3, 0, 1, 8, 9, 0.05497792337273892, ["lea     r15, [tsub_in_string+1]", "cmp     byte ptr [string], 0", "jnz     short loc_2C96"], ["lea~r15,[tsub_in_string+0]", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 119, 0, 0, 5, 0, 1, 7, 7, 0.048497365047714, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 0", "mov     edx, [rsp+0D8h+string_iter.cur.wc]", "mov     r15, [rsp+0D8h+string_iter.cur.ptr]", "jmp     loc_2DB7"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~edx,[rsp+0]", "mov~r15,[rsp+0]", "jmp~FOO"]], [1, 0, 119, 0, 1, 5, 1, 2, 12, 8, 0.06971941318900442, ["lea     rdi, [r12+4]; ps", "mov     [rsp+0D8h+tsub_iter.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_32B0"], ["lea~rdi,[r12+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 119, 0, 1, 3, 0, 2, 3, 7, 0.451502634952286, ["call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "ja      loc_2D48"], ["call~FOO", "cmp~rax,0", "ja~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 13, 8, 0.022788776527560176, ["mov     [rsp+0D8h+tsub_iter.next_done], 1", "jmp     loc_2FF8"], ["mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 119, 0, 0, 4, 0, 1, 17, 1, 0.009329155390969946, ["mov     rax, [rsp+0D8h+string_iter.cur.ptr]", "mov     [rsp+0D8h+string_iter.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_3543"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 119, 0, 0, 2, 0, 0, 4, 13, 0.05376726961971229, ["cmp     string, tsub_in_string", "jnb     loc_3300"], ["cmp~string,tsub_in_string", "jnb~FOO"]], [0, 0, 119, 0, 1, 4, 1, 2, 15, 6, 0.009151118074348383, ["lea     rdi, [rbx+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_351F"], ["lea~rdi,[rbx+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 119, 0, 0, 8, 1, 0, 14, 7, 0.02617148554336989, ["mov     rcx, [rsp+0D8h+string_iter.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_3354"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [0, 0, 119, 0, 0, 3, 1, 1, 18, 11, 0.009008688221051131, ["mov     edx, [rsp+0D8h+string_iter.cur.wc]", "test    edx, edx", "jz      loc_33B6"], ["mov~edx,[rsp+0]", "test~edx,edx", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 11, -1, 0.0, ["call    mbuiter_multi_next"], ["call~FOO"]], [0, 0, 119, 0, 0, 1, 0, 0, 14, 7, 0.027773821392963964, ["xchg    ax, ax"], ["xchg~ax,ax"]], [1, 0, 119, 0, 1, 7, 0, 2, 8, 7, 0.007477567298105683, ["mov     r15, [rsp+0D8h+string_iter.cur.ptr]", "mov     rdi, r15; s", "call    _strlen", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 0", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "mov     edx, [rsp+0D8h+string_iter.cur.wc]", "jmp     loc_2DB7"], ["mov~r15,[rsp+0]", "mov~rdi,r15", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~edx,[rsp+0]", "jmp~FOO"]], [1, 0, 119, 0, 1, 5, 0, 2, 15, 7, 0.0076199971514029335, ["mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; s", "call    _strlen", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 0", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "jmp     loc_2F9F"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 12, 6, 0.3958481697763851, ["cmp     [rsp+0D8h+string_iter.next_done], 0", "jnz     loc_3340"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 19, 9, 0.020331861558182594, ["mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_311E"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 1, 7, 1, 2, 18, 10, 0.048070075487822245, ["lea     rdi, [rbx+4]; ps", "mov     [rsp+0D8h+var_CC], edx", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "mov     edx, [rsp+0D8h+var_CC]", "jz      loc_34DA"], ["lea~rdi,[rbx+0]", "mov~[rsp+0],edx", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "mov~edx,[rsp+0]", "jz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 13, 5, 0.11305369605469305, ["cmp     [rsp+0D8h+string_iter.in_shift], 0", "jnz     loc_336A"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 17, 8, 0.016415040592508187, ["mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_2F93"], ["mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 119, 0, 2, 12, 3, 3, 5, 12, 0.03058681099558462, ["call    ___ctype_b_loc", "movzx   edx, byte ptr [tsub_in_string-1]", "mov     rax, [rax]", "mov     rdi, [rsp+0D8h+tsub]; s", "movzx   r15d, word ptr [rax+rdx*2]", "call    _strlen", "movzx   edx, byte ptr [tsub_in_string+rax+0]", "shr     r15w, 3", "xor     r15d, 1", "and     r15d, 1", "test    dl, dl", "jnz     loc_331C"], ["call~FOO", "movzx~edx,[yte ptr [tsub_in_string-1]+0]", "mov~rax,<TAG>", "mov~rdi,<TAG>", "movzx~r15d,<TAG>", "call~FOO", "movzx~edx,[yte ptr [tsub_in_string+0]", "shr~r15w,0", "xor~r15d,0", "and~r15d,0", "test~dl,dl", "jnz~FOO"]], [0, 0, 119, 0, 1, 4, 0, 2, 20, 11, 0.007691212078051559, ["mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; s", "call    _strlen", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "jmp     loc_3199"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 6, 7, 0.31231306081754734, ["mov     r15d, 1", "jmp     loc_2F15"], ["mov~r15d,0", "jmp~FOO"]], [0, 0, 119, 0, 0, 1, 0, 1, 5, 8, 0.2433414043583535, ["jmp     loc_32F0"], ["jmp~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 9, 8, 0.13502350092579404, ["test    cl, cl", "jz      loc_32F0"], ["test~cl,cl", "jz~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 6, 11, 0.02026064663153398, ["test    r15b, r15b", "jnz     short loc_2D0E"], ["test~r15b,r15b", "jnz~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 7, 10, 0.05536960546930637, ["cmp     byte ptr [tsub_in_string+0], 0", "jz      short loc_2D0B"], ["cmp~[yte ptr [tsub_in_string+0],0", "jz~FOO"]], [1, 0, 119, 1, 0, 7, 0, 0, 8, 6, 0.15239994302805868, ["mov     rax, [rsp+0D8h+string_iter.cur.bytes]", "movzx   ecx, [rsp+0D8h+string_iter.cur.wc_valid]", "mov     [rsp+0D8h+string_iter.next_done], 0", "add     rax, r15", "cmp     rax, tsub_in_string", "mov     [rsp+0D8h+string_iter.cur.ptr], rax", "jnb     loc_2F00"], ["mov~rax,[rsp+0]", "movzx~ecx,[rsp+0]", "mov~[rsp+0],0", "add~rax,r15", "cmp~rax,tsub_in_string", "mov~[rsp+0],rax", "jnb~FOO"]], [0, 0, 3, 0, 0, 1, 1, 0, 2, -1, 0.004379717988890471, ["xor     r15d, r15d"], ["xor~r15d,r15d"]], [0, 0, 119, 0, 0, 3, 1, 1, 18, 11, 0.3496652898447514, ["mov     eax, [rsp+0D8h+string_iter.cur.wc]", "test    eax, eax", "jz      loc_2D0B"], ["mov~eax,[rsp+0]", "test~eax,eax", "jz~FOO"]], [0, 0, 119, 0, 1, 4, 1, 1, 10, 7, 0.06704885343968095, ["mov     edi, edx; wc", "call    _iswalnum", "test    eax, eax", "setz    r15b"], ["mov~edi,edx", "call~FOO", "test~eax,eax", "setz~r15b"]], [2, 0, 119, 0, 1, 7, 0, 2, 16, 9, 0.0076199971514029335, ["mov     rdi, [rsp+0D8h+string_iter.cur.ptr]; s", "call    _strlen", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 0", "mov     [rsp+0D8h+string_iter.cur.bytes], rax", "mov     edx, [rsp+0D8h+string_iter.cur.wc]", "mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_3122"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~edx,[rsp+0]", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 15, 3, 0.06281156530408773, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_34F8"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 119, 0, 1, 6, 1, 2, 5, 12, 0.015774106252670533, ["mov     rdi, [rsp+0D8h+tsub]; s", "mov     r15d, 1", "call    _strlen", "movzx   edx, byte ptr [tsub_in_string+rax+0]", "test    dl, dl", "jz      loc_2D0E"], ["mov~rdi,<TAG>", "mov~r15d,0", "call~FOO", "movzx~edx,[yte ptr [tsub_in_string+0]", "test~dl,dl", "jz~FOO"]], [3, 0, 119, 0, 0, 5, 0, 0, 15, 9, 0.00961401509756445, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "movsx   edx, byte ptr [rcx]", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "mov     [rsp+0D8h+string_iter.next_done], 1", "mov     [rsp+0D8h+string_iter.cur.wc], edx"], ["mov~[rsp+0],0", "movsx~edx,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],edx"]], [0, 0, 119, 0, 0, 2, 1, 1, 15, 8, 0.08282295969235151, ["test    edx, edx", "jz      short loc_3134"], ["test~edx,edx", "jz~FOO"]], [0, 0, 119, 0, 0, 1, 0, 1, 14, 9, 0.006836632958268052, ["jmp     loc_311E"], ["jmp~FOO"]], [2, 0, 119, 0, 0, 3, 0, 1, 19, 9, 0.020331861558182594, ["mov     [rsp+0D8h+string_iter.in_shift], 0", "mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_311E"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 14, 8, 0.31398661159379004, ["cmp     [rsp+0D8h+string_iter.cur.wc_valid], 0", "jz      short loc_3134"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 119, 0, 0, 3, 0, 1, 13, 9, 0.275388121350235, ["cmp     [rsp+0D8h+string_iter.cur.wc_valid], 0", "mov     edx, [rsp+0D8h+string_iter.cur.wc]", "jz      loc_3122"], ["cmp~[rsp+0],0", "mov~edx,[rsp+0]", "jz~FOO"]], [3, 0, 119, 0, 0, 6, 0, 0, 4, 6, 0.3903290129611166, ["cmp     string, tsub_in_string", "mov     [rsp+0D8h+string_iter.cur.ptr], string", "mov     [rsp+0D8h+string_iter.in_shift], 0", "mov     qword ptr [rbx+4], 0", "mov     [rsp+0D8h+string_iter.next_done], 0", "jb      short loc_2DD7"], ["cmp~string,tsub_in_string", "mov~[rsp+0],string", "mov~[rsp+0],0", "mov~[word ptr [rbx+0],0", "mov~[rsp+0],0", "jb~FOO"]], [0, 0, 2, 0, 1, 6, 1, 2, 3, -1, 0.016094573422589374, ["mov     rdi, [rsp+0D8h+tsub]; ptr", "call    _free", "mov     rbx, [rsp+0D8h+var_40]", "xor     rbx, fs:28h", "mov     eax, r15d", "jnz     loc_353E"], ["mov~rdi,<TAG>", "call~FOO", "mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "mov~eax,r15d", "jnz~FOO"]], [0, 0, 119, 0, 0, 2, 1, 1, 15, 7, 0.25042728955989174, ["test    r15b, r15b", "jnz     loc_2D0E"], ["test~r15b,r15b", "jnz~FOO"]], [0, 0, 119, 0, 1, 4, 1, 2, 15, 7, 0.1460974220196553, ["mov     edi, edx; wc", "call    _iswalnum", "test    eax, eax", "jnz     short loc_313D"], ["mov~edi,edx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 8, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5839; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aMbsinitIterSta; \"mbsinit (&iter->state)\"", "mov     edx, 8Eh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 119, 0, 1, 4, 1, 2, 14, 6, 0.009720837487537387, ["lea     rdi, [rbx+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_351F"], ["lea~rdi,[rbx+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 0A8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     found", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~found", "retn"]], [6, 0, 119, 0, 0, 10, 0, 1, 7, 6, 0.3882637800883065, ["mov     rax, [rsp+0D8h+tsub]", "mov     [rsp+0D8h+string_iter.cur.ptr], tsub_in_string", "mov     [rsp+0D8h+string_iter.in_shift], 0", "mov     qword ptr [rbx+4], 0", "mov     [rsp+0D8h+string_iter.next_done], 0", "mov     [rsp+0D8h+tsub_iter.in_shift], 0", "mov     [rsp+0D8h+tsub_iter.cur.ptr], rax", "mov     qword ptr [r12+4], 0", "mov     [rsp+0D8h+tsub_iter.next_done], 0", "jmp     short loc_2FBD"], ["mov~rax,<TAG>", "mov~[rsp+0],tsub_in_string", "mov~[rsp+0],0", "mov~[word ptr [rbx+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[word ptr [r12+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 12, 5, 0.10700042728955989, ["cmp     [rsp+0D8h+string_iter.in_shift], 0", "jnz     loc_31C6"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 10, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5839; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aIterCurPtr0; \"*iter->cur.ptr == '\\\\0'\"", "mov     edx, 0AAh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 119, 0, 0, 2, 0, 1, 11, 9, 0.02050989887480416, ["mov     [rsp+0D8h+string_iter.next_done], 1", "jmp     loc_2DAA"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 119, 0, 0, 1, 0, 0, 16, 5, 0.009186725537672696, ["mov     [rsp+0D8h+string_iter.in_shift], 1"], ["mov~[rsp+0],0"]], [5, 0, 119, 0, 0, 12, 1, 0, 16, 6, 0.38698191140863125, ["mov     [rsp+0D8h+string_iter.cur.ptr], tsub_in_string", "mov     [rsp+0D8h+string_iter.in_shift], 0", "lea     r15, [rbx+4]", "mov     qword ptr [rbx+4], 0", "mov     [rsp+0D8h+string_iter.next_done], 0", "movzx   edx, byte ptr [tsub_in_string+0]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_33E8"], ["mov~[rsp+0],tsub_in_string", "mov~[rsp+0],0", "lea~r15,[rbx+0]", "mov~[word ptr [rbx+0],0", "mov~[rsp+0],0", "movzx~edx,[yte ptr [tsub_in_string+0]", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [2, 0, 119, 0, 0, 8, 1, 0, 13, 7, 0.0245335422304515, ["mov     rcx, [rsp+0D8h+string_iter.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_31B0"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [3, 0, 119, 0, 0, 5, 0, 0, 17, 12, 0.2998860561173622, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "movsx   eax, byte ptr [tsub_in_string+0]", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "mov     [rsp+0D8h+string_iter.next_done], 1", "mov     [rsp+0D8h+string_iter.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,[yte ptr [tsub_in_string+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [3, 0, 119, 0, 0, 5, 0, 0, 14, 8, 0.007406352371457057, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "mov     [rsp+0D8h+string_iter.next_done], 1", "mov     [rsp+0D8h+string_iter.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [1, 0, 119, 0, 0, 2, 0, 1, 19, 11, 0.014955134596211365, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "jmp     loc_3199"], ["mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 119, 0, 0, 5, 0, 0, 7, 9, 0.025352513886910694, ["mov     [rsp+0D8h+string_iter.cur.bytes], 1", "movsx   edx, byte ptr [r15]", "mov     [rsp+0D8h+string_iter.cur.wc_valid], 1", "mov     [rsp+0D8h+string_iter.next_done], 1", "mov     [rsp+0D8h+string_iter.cur.wc], edx"], ["mov~[rsp+0],0", "movsx~edx,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],edx"]], [0, 0, 119, 0, 0, 1, 0, 0, 9, 7, 0.07911978350662298, ["mov     r15, [rsp+0D8h+string_iter.cur.ptr]"], ["mov~r15,[rsp+0]"]], [2, 0, 119, 2, 0, 6, 0, 0, 13, 6, 0.16963395527702604, ["mov     rax, [rsp+0D8h+string_iter.cur.bytes]", "add     [rsp+0D8h+string_iter.cur.ptr], rax", "mov     rax, [rsp+0D8h+tsub_iter.cur.bytes]", "add     [rsp+0D8h+tsub_iter.cur.ptr], rax", "mov     [rsp+0D8h+string_iter.next_done], 0", "mov     [rsp+0D8h+tsub_iter.next_done], 0"], ["mov~rax,[rsp+0]", "add~[rsp+0],rax", "mov~rax,[rsp+0]", "add~[rsp+0],rax", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [1, 0, 119, 0, 0, 1, 0, 0, 15, 5, 0.00911551061102407, ["mov     [rsp+0D8h+string_iter.in_shift], 1"], ["mov~[rsp+0],0"]], [3, 0, 119, 0, 0, 5, 0, 0, 10, 8, 0.3371314627545933, ["mov     [rsp+0D8h+tsub_iter.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+0D8h+tsub_iter.cur.wc_valid], 1", "mov     [rsp+0D8h+tsub_iter.next_done], 1", "mov     [rsp+0D8h+tsub_iter.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]]], "func_feature": [45, 45, 136, 2, 120, 185, 5, 493, 0.09347, 6, 6], "succs": [[17, 28], [0, 71], [106, 12], [2, 69], [2], [2], [72, 2], [59, 14], [7], [45, 7], [82], [10, 83], [13, 117], [55], [70, 15], [26, 34], [68, 28], [16, 107], [24, 114], [18, 101], [25, 101], [20, 119], [74], [22, 63], [27, 78], [35], [107, 29], [37, 31], [76, 30], [33, 68], [55], [32, 107], [68, 37], [108, 38], [33], [4, 39], [35, 21], [40, 56], [54], [41, 5], [86], [60, 47], [117], [1, 42], [8, 101], [115, 44], [50], [107, 52], [95], [48, 89], [57, 85], [50], [68, 60], [], [116, 53], [53, 117], [86], [61, 85], [57, 85], [84], [3, 62], [64, 97], [6], [107, 67], [90, 77], [101, 109], [65, 91], [74, 68], [], [72], [84], [117], [96, 75], [92], [73, 94], [49, 66], [55], [82, 11], [51], [105], [79], [87, 79], [98, 83], [58, 85], [81, 9], [98], [51, 85], [105], [95], [88, 23], [98, 11], [92], [99, 95], [92], [92], [99, 100], [93, 95], [80, 9], [104, 103], [98, 110], [99, 110], [], [101, 118], [], [], [36], [43, 111], [], [54], [49], [112, 19], [113, 102], [86], [55], [51], [54], [84], [36], [43], [6]], "fname": "mbsstr_trimmed_wordbounded", "n_num": 120}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["mov     rax, translation", "pop     translation", "pop     name", "pop     r12", "retn"], ["mov~rax,translation", "pop~translation", "pop~name", "pop~r12", "retn"]], [1, 0, 3, 0, 1, 11, 1, 2, 0, 2, 0.0, ["push    r12", "push    rbp", "mov     rsi, name; msgid", "push    rbx", "mov     rbp, name", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "cmp     name, rax", "mov     rbx, rax", "jz      short loc_359D"], ["push~r12", "push~rbp", "mov~rsi,name", "push~rbx", "mov~rbp,name", "mov~edx,0", "xor~edi,edi", "call~FOO", "cmp~name,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 1, 1, 0.16666666666666666, ["mov     rsi, name; sub", "mov     rdi, translation; string", "call    mbsstr_trimmed_wordbounded", "test    al, al", "jz      short loc_35A8"], ["mov~rsi,name", "mov~rdi,translation", "call~FOO", "test~al,al", "jz~FOO"]], [2, 0, 0, 0, 4, 22, 1, 4, 2, 0, 0.0, ["mov     rdi, translation; s", "call    _strlen", "mov     rdi, name; s", "mov     r12, rax", "call    _strlen", "lea     rdi, [r12+rax+4]; n", "call    xmalloc", "lea     rcx, aSS; \"%s (%s)\"", "mov     r12, rax", "mov     r9, name", "mov     r8, translation", "mov     rdi, result", "mov     translation, r12", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "xor     eax, eax", "call    ___sprintf_chk", "mov     rax, result", "pop     result", "pop     name", "pop     r12", "retn"], ["mov~rdi,translation", "call~FOO", "mov~rdi,name", "mov~r12,rax", "call~FOO", "lea~rdi,[r12+0]", "call~FOO", "lea~rcx,<TAG>", "mov~r12,rax", "mov~r9,name", "mov~r8,translation", "mov~rdi,result", "mov~translation,r12", "mov~rdx,0", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~rax,result", "pop~result", "pop~name", "pop~r12", "retn"]]], "func_feature": [6, 3, 8, 0, 4, 4, 0, 43, 0.04167, 1, 0], "succs": [[], [0, 2], [0, 3], []], "fname": "proper_name", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 2, 0, 0, 2, 0, 1, 0, 0, 0.005181873602926235, ["cmp     name, r12", "jz      short loc_368B"], ["cmp~name,r12", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 4, -1, 0.02367404998983946, ["test    r12, r12", "jz      short loc_368B"], ["test~r12,r12", "jz~FOO"]], [0, 0, 4, 0, 1, 2, 0, 1, 7, -1, 0.0, ["mov     rdi, r15; ptr", "call    _free"], ["mov~rdi,r15", "call~FOO"]], [2, 0, 5, 0, 4, 18, 2, 5, 6, -1, 0.048601232811759126, ["mov     rdi, translation; s", "call    _strlen", "mov     rdi, name; s", "mov     rbp, rax", "call    _strlen", "lea     rdi, [rbp+rax+4]; n", "call    xmalloc", "lea     rcx, aSS; \"%s (%s)\"", "mov     rdi, rax", "mov     rbp, rax", "mov     r9, name", "xor     eax, eax", "mov     r8, translation", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "call    ___sprintf_chk", "test    r15, r15", "jz      short loc_38B0"], ["mov~rdi,translation", "call~FOO", "mov~rdi,name", "mov~rbp,rax", "call~FOO", "lea~rdi,[rbp+0]", "call~FOO", "lea~rcx,<TAG>", "mov~rdi,rax", "mov~rbp,rax", "mov~r9,name", "xor~eax,eax", "mov~r8,translation", "mov~rdx,0", "mov~esi,0", "call~FOO", "test~r15,r15", "jz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 7, -1, 0.007112375533428165, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [0, 0, 12, 0, 1, 5, 1, 2, 6, -1, 0.017780938833570414, ["mov     rsi, [rsp+48h+sub]; sub", "mov     rdi, translation; string", "call    mbsstr_trimmed_wordbounded", "test    al, al", "jz      loc_3860"], ["mov~rsi,[rsp+0]", "mov~rdi,translation", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 6, -1, 0.005334281650071124, ["mov     rdi, r12; ptr", "call    _free"], ["mov~rdi,r12", "call~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 5, -1, 0.022488654067601435, ["test    r12, r12", "mov     name, translation", "jnz     loc_3683"], ["test~r12,r12", "mov~name,translation", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 5, -1, 0.028991397412450045, ["mov     rdi, r15; ptr", "mov     name, translation", "call    _free", "test    r12, r12", "jnz     loc_3683"], ["mov~rdi,r15", "mov~name,translation", "call~FOO", "test~r12,r12", "jnz~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 7, -1, 0.022996680891417737, ["test    r12, r12", "mov     name, result", "jnz     loc_3683"], ["test~r12,r12", "mov~name,result", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 4, -1, 0.06584027636659216, ["test    r15, r15", "jnz     loc_3800"], ["test~r15,r15", "jnz~FOO"]], [0, 0, 16, 0, 1, 5, 1, 2, 3, -1, 0.11977579082842241, ["mov     rsi, name_ascii; sub", "mov     rdi, translation; string", "call    mbsstr_trimmed_wordbounded", "test    al, al", "jnz     short loc_3708"], ["mov~rsi,name_ascii", "mov~rdi,translation", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 14, 0, 1, 5, 1, 2, 5, -1, 0.01327643432906591, ["mov     rsi, rbp; sub", "mov     rdi, translation; string", "call    mbsstr_trimmed_wordbounded", "test    al, al", "jnz     short loc_3708"], ["mov~rsi,rbp", "mov~rdi,translation", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 4, 0, 0, 3, 1, 0, 5, -1, 0.011955564587143535, ["mov     r15, name", "xor     r12d, r12d", "nop     dword ptr [rax+rax+00000000h]"], ["mov~r15,name", "xor~r12d,r12d", "nop~[word ptr [rax+0]"]], [0, 0, 1, 0, 0, 1, 0, 1, 6, -1, 0.0020151730678046468, ["jmp     loc_368B"], ["jmp~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 4, -1, 0.0, ["add     rsp, 18h", "mov     rax, rbx", "pop     rbx", "pop     rbp", "pop     r12", "pop     name_ascii", "pop     translation", "pop     r15", "retn"], ["add~rsp,0", "mov~rax,rbx", "pop~rbx", "pop~rbp", "pop~r12", "pop~name_ascii", "pop~translation", "pop~r15", "retn"]], [0, 0, 1, 0, 0, 1, 0, 1, 6, -1, 0.0013039355144618303, ["jmp     loc_368B"], ["jmp~FOO"]], [0, 0, 19, 0, 1, 5, 1, 2, 3, -1, 0.030803359750728173, ["mov     rsi, name_ascii; s2", "mov     rdi, translation; s1", "call    _strcmp", "test    eax, eax", "jz      loc_368B"], ["mov~rsi,name_ascii", "mov~rdi,translation", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 8, -1, 0.0020151730678046468, ["jmp     loc_368B"], ["jmp~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 5, -1, 0.08202939781887152, ["cmp     [rsp+48h+sub], 0", "jz      loc_3860"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 25, 0, 0, 3, 1, 1, 3, 1, 0.01933888775994039, ["test    name_converted, name_converted", "mov     [rsp+48h+sub], converted_translit", "jz      loc_38E0"], ["test~name_converted,name_converted", "mov~[rsp+0],converted_translit", "jz~FOO"]], [1, 0, 33, 0, 1, 5, 1, 2, 2, 2, 0.005689900426742532, ["mov     esi, 3Fh ; '?'; c", "mov     rdi, converted_translit; s", "call    _strchr", "test    rax, rax", "jz      short loc_3820"], ["mov~esi,0", "mov~rdi,converted_translit", "call~FOO", "test~rax,rax", "jz~FOO"]], [3, 0, 34, 1, 6, 32, 1, 7, 1, 3, 0.008534850640113799, ["lea     rsi, from_codeset; \"UTF-8\"", "mov     rdx, locale_code; to_codeset", "mov     rdi, name_utf8; src", "call    xstr_iconv", "mov     rdi, locale_code; s", "mov     rbx, rax", "call    _strlen", "lea     rdi, [rax+0Bh]; n", "mov     r15, rax", "call    xmalloc", "mov     rdx, len; n", "mov     rsi, locale_code; src", "mov     rdi, locale_code_translit; dest", "call    _memcpy", "mov     rcx, rax", "add     len, rax", "mov     rax, 4C534E4152542F2Fh", "mov     [r15], rax", "lea     rsi, from_codeset; \"UTF-8\"", "mov     eax, 5449h", "mov     rdx, rcx; to_codeset", "mov     rdi, name_utf8; src", "mov     [r15+8], ax", "mov     byte ptr [r15+0Ah], 0", "mov     [rsp+48h+sub], rcx", "call    xstr_iconv", "mov     rcx, [rsp+48h+sub]", "mov     locale_code, rax", "mov     rdi, rcx; ptr", "call    _free", "test    converted_translit, converted_translit", "jz      short loc_37C7"], ["lea~rsi,<TAG>", "mov~rdx,locale_code", "mov~rdi,name_utf8", "call~FOO", "mov~rdi,locale_code", "mov~rbx,rax", "call~FOO", "lea~rdi,[rax+0]", "mov~r15,rax", "call~FOO", "mov~rdx,len", "mov~rsi,locale_code", "mov~rdi,locale_code_translit", "call~FOO", "mov~rcx,rax", "add~len,rax", "mov~rax,0", "mov~<TAG>,rax", "lea~rsi,<TAG>", "mov~eax,0", "mov~rdx,rcx", "mov~rdi,name_utf8", "mov~[r15+0],ax", "mov~[yte ptr [r15+0],0", "mov~[rsp+0],rcx", "call~FOO", "mov~rcx,[rsp+0]", "mov~locale_code,rax", "mov~rdi,rcx", "call~FOO", "test~converted_translit,converted_translit", "jz~FOO"]], [2, 0, 38, 1, 3, 21, 2, 4, 0, 4, 0.0, ["push    r15", "push    r14", "mov     edx, 5; category", "push    r13", "push    r12", "mov     r13, name_ascii", "push    rbp", "push    rbx", "mov     rbp, name_utf8", "mov     name_utf8, name_ascii; msgid", "xor     edi, edi; domainname", "sub     rsp, 18h", "call    _dcgettext", "mov     r14, rax", "call    locale_charset", "lea     rsi, from_codeset; \"UTF-8\"", "mov     rdi, rax; s1", "mov     r12, rax", "call    c_strcasecmp", "test    eax, eax", "jnz     loc_3728"], ["push~r15", "push~r14", "mov~edx,0", "push~r13", "push~r12", "mov~r13,name_ascii", "push~rbp", "push~rbx", "mov~rbp,name_utf8", "mov~name_utf8,name_ascii", "xor~edi,edi", "sub~rsp,0", "call~FOO", "mov~r14,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rdi,rax", "mov~r12,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 23, 0, 0, 3, 0, 1, 4, -1, 0.015714963083384135, ["mov     name_utf8, name_converted", "mov     r15, name_converted", "jmp     loc_3658"], ["mov~name_utf8,name_converted", "mov~r15,name_converted", "jmp~FOO"]], [1, 0, 22, 0, 1, 9, 3, 2, 2, -1, 0.030583214793741112, ["mov     rsi, name_ascii; s2", "mov     rdi, translation; s1", "mov     [rsp+48h+sub], 0", "xor     r12d, r12d", "xor     r15d, r15d", "mov     rbx, name_ascii", "call    _strcmp", "test    eax, eax", "jz      short loc_3667"], ["mov~rsi,name_ascii", "mov~rdi,translation", "mov~[rsp+0],0", "xor~r12d,r12d", "xor~r15d,r15d", "mov~rbx,name_ascii", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 25, 0, 0, 2, 1, 1, 1, -1, 0.017069701280227598, ["test    name_converted_translit, name_converted_translit", "jz      short loc_36A0"], ["test~name_converted_translit,name_converted_translit", "jz~FOO"]], [0, 0, 29, 0, 1, 2, 0, 1, 3, -1, 0.005554426607058187, ["mov     rdi, converted_translit; ptr", "call    _free"], ["mov~rdi,converted_translit", "call~FOO"]], [0, 0, 28, 0, 0, 2, 1, 1, 2, -1, 0.048939917360969996, ["test    name_converted, name_converted", "jz      short loc_3840"], ["test~name_converted,name_converted", "jz~FOO"]], [0, 0, 22, 0, 1, 5, 1, 2, 3, -1, 0.12140147666463458, ["mov     rsi, name_ascii; s2", "mov     rdi, translation; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_36C1"], ["mov~rsi,name_ascii", "mov~rdi,translation", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 15, 0, 0, 2, 1, 1, 4, -1, 0.10597439544807967, ["test    rbp, rbp", "jz      short loc_36E4"], ["test~rbp,rbp", "jz~FOO"]], [1, 0, 16, 0, 0, 5, 1, 1, 5, -1, 0.02667140825035562, ["mov     name_utf8, name", "mov     r15, name", "mov     [rsp+48h+sub], 0", "xor     r12d, r12d", "jmp     loc_36D0"], ["mov~name_utf8,name", "mov~r15,name", "mov~[rsp+0],0", "xor~r12d,r12d", "jmp~FOO"]], [1, 0, 23, 0, 0, 6, 3, 1, 3, -1, 0.030938833570412518, ["mov     name_converted, name_ascii", "mov     [rsp+48h+sub], 0", "xor     ebp, ebp", "xor     r12d, r12d", "xor     r15d, r15d", "jmp     loc_3658"], ["mov~name_converted,name_ascii", "mov~[rsp+0],0", "xor~ebp,ebp", "xor~r12d,r12d", "xor~r15d,r15d", "jmp~FOO"]], [0, 0, 23, 0, 0, 4, 2, 0, 2, -1, 0.001422475106685633, ["mov     [rsp+48h+sub], name_converted_translit", "mov     rbx, name_converted_translit", "xor     r12d, r12d", "xor     r15d, r15d"], ["mov~[rsp+0],name_converted_translit", "mov~rbx,name_converted_translit", "xor~r12d,r12d", "xor~r15d,r15d"]], [0, 0, 18, 0, 1, 5, 1, 2, 4, -1, 0.03578202262412789, ["mov     rsi, name_ascii; sub", "mov     rdi, translation; string", "call    mbsstr_trimmed_wordbounded", "test    al, al", "jz      loc_38C8"], ["mov~rsi,name_ascii", "mov~rdi,translation", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 23, 0, 0, 4, 2, 1, 4, 0, 0.015714963083384135, ["xor     ebp, ebp", "xor     r15d, r15d", "mov     name_converted, converted_translit", "jmp     loc_3658"], ["xor~ebp,ebp", "xor~r15d,r15d", "mov~name_converted,converted_translit", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 3, -1, 0.045011176590123964, ["test    r15, r15", "jz      short loc_3679"], ["test~r15,r15", "jz~FOO"]], [0, 0, 5, 0, 0, 2, 0, 1, 4, -1, 0.00995732574679943, ["cmp     name, r15", "jz      short loc_3679"], ["cmp~name,r15", "jz~FOO"]], [0, 0, 4, 0, 1, 2, 0, 1, 5, -1, 0.0, ["mov     rdi, r15; ptr", "call    _free"], ["mov~rdi,r15", "call~FOO"]]], "func_feature": [26, 34, 57, 0, 39, 62, 1, 193, 0.02706, 2, 3], "succs": [[6, 15], [0, 15], [9], [9, 2], [10], [3, 4], [15], [16, 6], [14, 6], [18, 6], [8, 7], [10, 30], [10, 19], [8], [15], [], [15], [34, 15], [15], [3, 5], [24, 35], [27, 20], [28, 21], [26, 22], [29], [11, 36], [25, 33], [28], [32, 17], [11, 36], [19, 12], [30], [29], [29], [13, 31], [29], [1, 37], [1, 38], [1]], "fname": "proper_name_utf8", "n_num": 39}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[3, 0, 0, 4, 1, 18, 2, 1, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rdx, maxlen; n", "mov     rbx, maxlen", "xor     esi, esi; c", "mov     rbp, string", "sub     rsp, 8", "call    _memchr", "mov     rdx, end", "sub     rdx, string", "add     rdx, 1", "test    end, end", "mov     end, maxlen", "cmovnz  rax, rdx", "add     rsp, 8", "pop     maxlen", "pop     string", "retn"], ["push~rbp", "push~rbx", "mov~rdx,maxlen", "mov~rbx,maxlen", "xor~esi,esi", "mov~rbp,string", "sub~rsp,0", "call~FOO", "mov~rdx,end", "sub~rdx,string", "add~rdx,0", "test~end,end", "mov~end,maxlen", "cmovnz~rax,rdx", "add~rsp,0", "pop~maxlen", "pop~string", "retn"]]], "func_feature": [1, 2, 1, 0, 1, 0, 17, 18, 0.0, 0, 4], "succs": [[]], "fname": "strnlen1", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[2, 0, 57, 0, 0, 3, 0, 1, 0, 0, 0.019563769563769564, ["mov     [rsp+0A8h+i.in_shift], 0", "mov     [rsp+0A8h+i.next_done], 1", "jmp     loc_3B79"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 57, 0, 1, 5, 1, 2, 11, 9, 0.0367965367965368, ["lea     rdi, [rbp+0Ch]; ps", "mov     [rsp+0A8h+i.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_3F00"], ["lea~rdi,[rbp+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 34, 0, 0, 3, 0, 1, 11, 7, 0.06943056943056942, ["cmp     [rsp+0A8h+i.cur.wc_valid], 0", "mov     r15d, 1", "jz      short loc_3A17"], ["cmp~[rsp+0],0", "mov~r15d,0", "jz~FOO"]], [1, 0, 34, 0, 0, 3, 1, 1, 10, 8, 0.1351981351981352, ["test    r15d, r15d", "mov     [rsp+0A8h+i.next_done], 1", "jz      loc_39F8"], ["test~r15d,r15d", "mov~[rsp+0],0", "jz~FOO"]], [0, 0, 34, 0, 0, 2, 0, 1, 12, 9, 0.024142524142524144, ["mov     r13, [rsp+0A8h+i.cur.bytes]", "jmp     loc_3A7C"], ["mov~r13,[rsp+0]", "jmp~FOO"]], [3, 0, 34, 0, 0, 6, 0, 1, 9, 9, 0.050865800865800864, ["mov     [rsp+0A8h+i.cur.bytes], 1", "mov     [rsp+0A8h+i.cur.wc_valid], 0", "mov     r13d, 1", "mov     r12, [rsp+0A8h+i.cur.ptr]", "mov     r14, [rsp+0A8h+i.limit]", "jmp     loc_3A7C"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r13d,0", "mov~r12,[rsp+0]", "mov~r14,[rsp+0]", "jmp~FOO"]], [1, 0, 34, 1, 0, 6, 0, 1, 10, 9, 0.003996003996003996, ["mov     r14, [rsp+0A8h+i.limit]", "mov     [rsp+0A8h+i.cur.wc_valid], 0", "mov     r13, r14", "sub     r13, r12", "mov     [rsp+0A8h+i.cur.bytes], r13", "jmp     loc_3A7C"], ["mov~r14,[rsp+0]", "mov~[rsp+0],0", "mov~r13,r14", "sub~r13,r12", "mov~[rsp+0],r13", "jmp~FOO"]], [3, 0, 34, 0, 0, 7, 0, 0, 9, 9, 0.043373293373293376, ["mov     [rsp+0A8h+i.cur.bytes], 1", "movsx   eax, byte ptr [rsi]", "mov     r13d, 1", "mov     r12, [rsp+0A8h+i.cur.ptr]", "mov     r14, [rsp+0A8h+i.limit]", "mov     [rsp+0A8h+i.cur.wc_valid], 1", "mov     [rsp+0A8h+i.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~r13d,0", "mov~r12,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [0, 1, 13, 0, 0, 2, 1, 1, 5, -1, 0.002664002664002664, ["test    byte ptr [rax+rbp*2+1], 20h", "jnz     short loc_3C90"], ["test~[yte ptr [rax+0],<STR>", "jnz~FOO"]], [0, 0, 13, 0, 1, 4, 0, 2, 4, -1, 0.001332001332001332, ["call    ___ctype_b_loc", "mov     r13, p", "mov     rax, [rax]", "jmp     short loc_3C9E"], ["call~FOO", "mov~r13,p", "mov~rax,<TAG>", "jmp~FOO"]], [1, 0, 13, 1, 0, 4, 1, 1, 6, -1, 0.0, ["add     p, 1", "movzx   ebp, byte ptr [p+0]", "test    bpl, bpl", "jz      short loc_3CA5"], ["add~p,0", "movzx~ebp,[yte ptr [p+0]", "test~bpl,bpl", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 8, -1, 0.0004995004995004995, ["jmp     loc_3C40"], ["jmp~FOO"]], [0, 1, 6, 0, 0, 3, 1, 1, 7, -1, 0.004995004995004995, ["movzx   eax, byte ptr [p+0]", "test    byte ptr [rdx+rax*2+1], 20h", "jnz     short loc_3D18"], ["movzx~eax,[yte ptr [p+0]", "test~[yte ptr [rdx+0],<STR>", "jnz~FOO"]], [2, 0, 6, 1, 0, 4, 0, 1, 8, -1, 0.0004995004995004995, ["mov     byte ptr [p+0], 0", "sub     p, 1", "cmp     d, p", "ja      loc_3C40"], ["mov~[yte ptr [p+0],0", "sub~p,0", "cmp~d,p", "ja~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 78, 1, 1, 14, 2, 2, 0, 12, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12d, esi", "push    rbp", "push    rbx", "sub     rsp, 78h", "mov     rax, fs:28h", "mov     [rsp+0A8h+var_40], rax", "xor     eax, eax", "call    _strdup", "test    d, d", "jz      loc_3F17"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12d,esi", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~d,d", "jz~FOO"]], [0, 0, 15, 0, 0, 3, 1, 1, 3, -1, 0.00308025308025308, ["movzx   ebp, byte ptr [p]", "test    bpl, bpl", "jz      loc_3F0A"], ["movzx~ebp,<TAG>", "test~bpl,bpl", "jz~FOO"]], [1, 0, 34, 0, 1, 9, 1, 2, 13, 7, 0.0, ["mov     edi, [rsp+0A8h+i.cur.wc]; wc", "call    _iswspace", "mov     rsi, [rsp+0A8h+r]", "test    eax, eax", "mov     eax, 2", "cmovnz  r15d, eax", "cmovnz  rsi, r12", "mov     [rsp+0A8h+r], rsi", "jmp     loc_3A17"], ["mov~edi,[rsp+0]", "call~FOO", "mov~rsi,[rsp+0]", "test~eax,eax", "mov~eax,0", "cmovnz~r15d,eax", "cmovnz~rsi,r12", "mov~[rsp+0],rsi", "jmp~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 12, 7, 0.013486513486513486, ["cmp     [rsp+0A8h+i.cur.wc_valid], 0", "jz      loc_3A17"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 11, 8, 0.052947052947052944, ["cmp     r15d, 1", "jz      loc_3DE0"], ["cmp~r15d,0", "jz~FOO"]], [1, 0, 34, 1, 1, 8, 0, 2, 8, 4, 0.13478188478188477, ["lea     rcx, [rbp+0Ch]; p", "mov     rdx, r14", "lea     rdi, [rbp+2Ch]; pwc", "sub     rdx, rsi; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0A8h+i.cur.bytes], rax", "jz      loc_3E40"], ["lea~rcx,[rbp+0]", "mov~rdx,r14", "lea~rdi,[rbp+0]", "sub~rdx,rsi", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 7, 5, 0.2078754578754579, ["cmp     [rsp+0A8h+i.in_shift], 0", "jnz     loc_3D61"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 34, 0, 0, 2, 0, 0, 10, 5, 0.00715950715950716, ["mov     rsi, [rsp+0A8h+var_98]; s", "mov     [rsp+0A8h+i.in_shift], 1"], ["mov~rsi,[rsp+0]", "mov~[rsp+0],0"]], [1, 0, 34, 0, 1, 6, 1, 2, 11, 10, 0.03146853146853147, ["lea     rdi, [rbp+0Ch]; ps", "mov     [rsp+0A8h+i.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "mov     r14, [rsp+0A8h+i.limit]", "jz      short loc_3DD3"], ["lea~rdi,[rbp+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "mov~r14,[rsp+0]", "jz~FOO"]], [1, 0, 34, 0, 0, 1, 0, 0, 12, 10, 0.0, ["mov     [rsp+0A8h+i.in_shift], 0"], ["mov~[rsp+0],0"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 6, -1, 0.023976023976023976, ["mov     rax, d", "mov     d, [rsp+0A8h+var_40]", "xor     d, fs:28h", "jnz     loc_3F12"], ["mov~rax,d", "mov~d,[rsp+0]", "xor~d,<TAG>", "jnz~FOO"]], [0, 0, 34, 0, 1, 5, 2, 1, 12, 7, 0.0, ["mov     edi, [rsp+0A8h+i.cur.wc]; wc", "xor     r15d, r15d", "call    _iswspace", "test    eax, eax", "setz    r15b"], ["mov~edi,[rsp+0]", "xor~r15d,r15d", "call~FOO", "test~eax,eax", "setz~r15b"]], [1, 0, 57, 0, 0, 2, 0, 1, 12, 8, 0.019563769563769564, ["mov     [rsp+0A8h+i.next_done], 1", "jmp     loc_3B79"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 34, 0, 0, 2, 1, 1, 10, 2, 0.05427905427905428, ["test    rax, rax", "jnz     short loc_3DB7"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 9, 3, 0.07109557109557109, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "mov     r12, [rsp+0A8h+i.cur.ptr]", "jz      loc_3EC0"], ["cmp~rax,0", "mov~r12,[rsp+0]", "jz~FOO"]], [2, 0, 37, 1, 0, 7, 2, 1, 4, 8, 0.13994338994338995, ["mov     ecx, [rdx]", "add     rdx, 4", "lea     eax, [rcx-1010101h]", "not     ecx", "and     eax, ecx", "and     eax, 80808080h", "jz      short loc_3982"], ["mov~ecx,<TAG>", "add~rdx,0", "lea~eax,[rcx-1010101h]+0]", "not~ecx", "and~eax,ecx", "and~eax,0", "jz~FOO"]], [0, 0, 37, 0, 0, 2, 0, 0, 3, 9, 0.1382783882783883, ["mov     [rsp+0A8h+i.cur.ptr], d", "mov     rdx, d"], ["mov~[rsp+0],d", "mov~rdx,d"]], [1, 0, 34, 0, 0, 2, 0, 1, 12, 8, 0.02664002664002664, ["cmp     r15d, 2", "jnz     loc_3EB0"], ["cmp~r15d,0", "jnz~FOO"]], [0, 0, 57, 0, 1, 4, 1, 2, 10, 7, 0.07309357309357309, ["mov     edi, [rsp+0A8h+i.cur.wc]; wc", "call    _iswspace", "test    eax, eax", "jz      loc_3E80"], ["mov~edi,[rsp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [3, 0, 57, 0, 0, 6, 0, 0, 9, 8, 0.00949050949050949, ["mov     [rsp+0A8h+i.cur.bytes], 1", "movsx   eax, byte ptr [r15]", "mov     r15, [rsp+0A8h+i.cur.ptr]", "mov     [rsp+0A8h+i.cur.wc_valid], 1", "mov     [rsp+0A8h+i.next_done], 1", "mov     [rsp+0A8h+i.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~r15,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [1, 0, 39, 0, 2, 8, 0, 3, 6, 11, 0.12737262737262736, ["mov     rdi, r15; s", "call    _strlen", "lea     rdx, [rax+1]; n", "mov     rsi, r15; src", "mov     rdi, d; dest", "call    _memmove", "cmp     r12d, 1", "jz      loc_3C40"], ["mov~rdi,r15", "call~FOO", "lea~rdx,[rax+0]", "mov~rsi,r15", "mov~rdi,d", "call~FOO", "cmp~r12d,0", "jz~FOO"]], [6, 0, 58, 1, 0, 16, 1, 0, 5, 7, 0.030053280053280052, ["mov     ecx, eax", "mov     [rsp+0A8h+i.in_shift], 0", "mov     qword ptr [rsp+0A8h+i.state.__count], 0", "shr     ecx, 10h", "test    eax, 8080h", "mov     [rsp+0A8h+i.next_done], 0", "cmovz   eax, ecx", "lea     rcx, [rdx+2]", "mov     r15, d", "mov     esi, eax", "cmovz   rdx, rcx", "add     sil, al", "sbb     rdx, 3", "cmp     rdx, d", "mov     [rsp+0A8h+i.limit], rdx", "jbe     loc_3E80"], ["mov~ecx,eax", "mov~[rsp+0],0", "mov~[word ptr [rsp+0],0", "shr~ecx,0", "test~eax,0", "mov~[rsp+0],0", "cmovz~eax,ecx", "lea~rcx,[rdx+0]", "mov~r15,d", "mov~esi,eax", "cmovz~rdx,rcx", "add~sil,al", "sbb~rdx,0", "cmp~rdx,d", "mov~[rsp+0],rdx", "jbe~FOO"]], [1, 0, 57, 1, 0, 6, 0, 0, 11, 6, 0.023476523476523476, ["add     r15, [rsp+0A8h+i.cur.bytes]", "mov     rdx, [rsp+0A8h+i.limit]", "mov     [rsp+0A8h+i.next_done], 0", "cmp     r15, rdx", "mov     [rsp+0A8h+i.cur.ptr], r15", "jnb     loc_3E80"], ["add~r15,[rsp+0]", "mov~rdx,[rsp+0]", "mov~[rsp+0],0", "cmp~r15,rdx", "mov~[rsp+0],r15", "jnb~FOO"]], [2, 0, 40, 1, 0, 6, 0, 1, 10, 12, 0.00616050616050616, ["mov     rax, [rsp+0A8h+i.limit]", "mov     [rsp+0A8h+i.cur.wc_valid], 0", "mov     [rsp+0A8h+i.next_done], 1", "sub     rax, r15", "mov     [rsp+0A8h+i.cur.bytes], rax", "jmp     short loc_3E80"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "sub~rax,r15", "mov~[rsp+0],rax", "jmp~FOO"]], [3, 0, 40, 0, 0, 4, 0, 0, 9, 12, 0.030802530802530804, ["mov     r15, [rsp+0A8h+i.cur.ptr]", "mov     [rsp+0A8h+i.cur.bytes], 1", "mov     [rsp+0A8h+i.cur.wc_valid], 0", "mov     [rsp+0A8h+i.next_done], 1"], ["mov~r15,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [3, 0, 7, 1, 0, 12, 1, 1, 5, -1, 0.008907758907758908, ["mov     ecx, eax", "shr     ecx, 10h", "test    eax, 8080h", "cmovz   eax, ecx", "lea     rcx, [rdx+2]", "mov     esi, eax", "cmovz   rdx, rcx", "add     sil, al", "sbb     rdx, 3", "lea     rbp, [rdx-1]", "cmp     d, p", "ja      loc_3C40"], ["mov~ecx,eax", "shr~ecx,0", "test~eax,0", "cmovz~eax,ecx", "lea~rcx,[rdx+0]", "mov~esi,eax", "cmovz~rdx,rcx", "add~sil,al", "sbb~rdx,0", "lea~rbp,[rdx-1]+0]", "cmp~d,p", "ja~FOO"]], [2, 0, 9, 1, 0, 7, 2, 1, 4, -1, 0.009407259407259408, ["mov     ecx, [rdx]", "add     rdx, 4", "lea     eax, [rcx-1010101h]", "not     ecx", "and     eax, ecx", "and     eax, 80808080h", "jz      short loc_3CC9"], ["mov~ecx,<TAG>", "add~rdx,0", "lea~eax,[rcx-1010101h]+0]", "not~ecx", "and~eax,ecx", "and~eax,0", "jz~FOO"]], [0, 0, 57, 0, 0, 2, 1, 1, 10, 2, 0.02614052614052614, ["test    rax, rax", "jnz     short loc_3C03"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 57, 0, 0, 3, 1, 1, 12, 10, 0.012071262071262072, ["mov     edx, [rsp+0A8h+i.cur.wc]", "test    edx, edx", "jnz     loc_3F3B"], ["mov~edx,[rsp+0]", "test~edx,edx", "jnz~FOO"]], [2, 0, 60, 1, 0, 7, 2, 1, 4, 8, 0.021062271062271064, ["mov     ecx, [rdx]", "add     rdx, 4", "lea     eax, [rcx-1010101h]", "not     ecx", "and     eax, ecx", "and     eax, 80808080h", "jz      short loc_3AD0"], ["mov~ecx,<TAG>", "add~rdx,0", "lea~eax,[rcx-1010101h]+0]", "not~ecx", "and~eax,ecx", "and~eax,0", "jz~FOO"]], [2, 0, 34, 0, 0, 3, 0, 1, 11, 1, 0.020313020313020312, ["mov     [rsp+0A8h+i.cur.bytes], 1", "cmp     byte ptr [r12], 0", "jnz     loc_3F40"], ["mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 34, 0, 0, 5, 0, 0, 12, 6, 0.09856809856809856, ["lea     rsi, [r12+r13]", "mov     [rsp+0A8h+i.next_done], 0", "cmp     rsi, r14", "mov     [rsp+0A8h+i.cur.ptr], rsi", "jnb     loc_3C30"], ["lea~rsi,<TAG>", "mov~[rsp+0],0", "cmp~rsi,r14", "mov~[rsp+0],rsi", "jnb~FOO"]], [1, 0, 34, 0, 1, 6, 1, 2, 14, 7, 0.002580752580752581, ["mov     edi, [rsp+0A8h+i.cur.wc]; wc", "call    _iswspace", "test    eax, eax", "mov     eax, 1", "cmovz   r15d, eax", "jmp     loc_3A17"], ["mov~edi,[rsp+0]", "call~FOO", "test~eax,eax", "mov~eax,0", "cmovz~r15d,eax", "jmp~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 13, 7, 0.007575757575757576, ["mov     r15d, 1", "jmp     loc_3A17"], ["mov~r15d,0", "jmp~FOO"]], [0, 0, 57, 0, 1, 6, 1, 2, 9, 6, 0.008574758574758574, ["mov     rdi, r13; ps", "mov     [rsp+0A8h+var_98], rdx", "call    _mbsinit", "test    eax, eax", "mov     rdx, [rsp+0A8h+var_98]", "jz      loc_3F1C"], ["mov~rdi,r13", "mov~[rsp+0],rdx", "call~FOO", "test~eax,eax", "mov~rdx,[rsp+0]", "jz~FOO"]], [2, 0, 57, 0, 0, 7, 1, 0, 8, 7, 0.015734265734265736, ["movzx   ecx, byte ptr [r15]", "mov     eax, ecx", "shr     al, 5", "and     eax, 7", "mov     eax, [r14+rax*4]", "bt      eax, ecx", "jnb     loc_3E18"], ["movzx~ecx,<TAG>", "mov~eax,ecx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,ecx", "jnb~FOO"]], [1, 0, 57, 0, 0, 2, 0, 1, 7, 5, 0.051864801864801864, ["cmp     [rsp+0A8h+i.in_shift], 0", "jz      short loc_3B40"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 57, 0, 0, 4, 0, 1, 6, 6, 0.019230769230769232, ["lea     rbp, [rsp+0A8h+i]", "lea     r14, is_basic_table", "lea     r13, [rbp+0Ch]", "jmp     short loc_3BA7"], ["lea~rbp,[rsp+0]", "lea~r14,<TAG>", "lea~r13,[rbp+0]", "jmp~FOO"]], [0, 0, 34, 0, 0, 3, 1, 1, 12, 11, 0.01073926073926074, ["mov     eax, [rsp+0A8h+i.cur.wc]", "test    eax, eax", "jnz     loc_3F3B"], ["mov~eax,[rsp+0]", "test~eax,eax", "jnz~FOO"]], [0, 0, 6, 0, 1, 3, 0, 2, 6, -1, 0.005994005994005994, ["call    ___ctype_b_loc", "mov     rdx, [rax]", "jmp     short loc_3D29"], ["call~FOO", "mov~rdx,<TAG>", "jmp~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 6, 6, 0.13944388944388944, ["lea     rbp, [rsp+0A8h+i]", "lea     rax, [rbp+0Ch]", "mov     [rsp+0A8h+ps], rax", "jmp     short loc_3A2E"], ["lea~rbp,[rsp+0]", "lea~rax,[rbp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 13, -1, 0.022810522810522812, ["cmp     r15d, 2", "jnz     short loc_3C40"], ["cmp~r15d,0", "jnz~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 13, 8, 0.008991008991008992, ["cmp     [rsp+0A8h+i.cur.wc_valid], 0", "jz      loc_3EB0"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 57, 0, 0, 2, 0, 1, 10, 5, 0.010989010989010988, ["mov     [rsp+0A8h+i.in_shift], 1", "jmp     loc_3BAE"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 13, -1, 0.0, ["call    mbiter_multi_next"], ["call~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 14, -1, 0.0, ["mov     rax, [rsp+0A8h+r]", "mov     byte ptr [rax], 0", "xchg    ax, ax"], ["mov~rax,[rsp+0]", "mov~<TAG>,0", "xchg~ax,ax"]], [1, 0, 10, 0, 2, 8, 0, 3, 5, -1, 0.008907758907758908, ["mov     rdi, p; s", "call    _strlen", "lea     rdx, [rax+1]; n", "mov     rsi, p; src", "mov     rdi, d; dest", "call    _memmove", "cmp     r12d, 1", "jz      loc_3C40"], ["mov~rdi,p", "call~FOO", "lea~rdx,[rax+0]", "mov~rsi,p", "mov~rdi,d", "call~FOO", "cmp~r12d,0", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 4, -1, 0.002913752913752914, ["mov     r13, p", "jmp     loc_3CA5"], ["mov~r13,p", "jmp~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 10, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5820; \"mbiter_multi_next\"", "lea     rsi, aMbiterH; \"mbiter.h\"", "lea     rdi, aMbsinitIterSta; \"mbsinit (&iter->state)\"", "mov     edx, 86h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 34, 0, 1, 5, 1, 2, 9, 6, 0.016733266733266732, ["mov     rdi, [rsp+0A8h+ps]; ps", "mov     [rsp+0A8h+var_98], rsi", "call    _mbsinit", "test    eax, eax", "jz      loc_3F1C"], ["mov~rdi,[rsp+0]", "mov~[rsp+0],rsi", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 3, -1, 0.009573759573759574, ["mov     rdx, d"], ["mov~rdx,d"]], [0, 0, 16, 0, 0, 2, 1, 1, 2, -1, 0.004995004995004995, ["test    r12d, r12d", "jz      short loc_3CC6"], ["test~r12d,r12d", "jz~FOO"]], [0, 0, 38, 0, 0, 1, 0, 1, 7, 10, 0.11871461871461872, ["jmp     loc_397A"], ["jmp~FOO"]], [1, 0, 57, 1, 1, 8, 0, 2, 8, 4, 0.058774558774558776, ["lea     rcx, [rbp+0Ch]; p", "lea     rdi, [rbp+2Ch]; iter", "sub     rdx, r15; n", "mov     rsi, r15; s", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+0A8h+i.cur.bytes], rax", "jz      loc_3E68"], ["lea~rcx,[rbp+0]", "lea~rdi,[rbp+0]", "sub~rdx,r15", "mov~rsi,r15", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 60, 0, 0, 2, 0, 0, 3, 9, 0.011738261738261738, ["mov     [rsp+0A8h+i.cur.ptr], d", "mov     rdx, d"], ["mov~[rsp+0],d", "mov~rdx,d"]], [0, 0, 61, 0, 0, 2, 1, 1, 2, 10, 0.019647019647019648, ["test    r12d, r12d", "jnz     loc_3AC8"], ["test~r12d,r12d", "jnz~FOO"]], [2, 0, 34, 0, 0, 8, 1, 0, 8, 7, 0.07292707292707293, ["movzx   ecx, byte ptr [rsi]", "lea     rdi, is_basic_table", "mov     eax, ecx", "shr     al, 5", "and     eax, 7", "mov     eax, [rdi+rax*4]", "bt      eax, ecx", "jnb     loc_3D40"], ["movzx~ecx,<TAG>", "lea~rdi,<TAG>", "mov~eax,ecx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,ecx", "jnb~FOO"]], [1, 0, 57, 0, 0, 3, 0, 1, 9, 3, 0.030136530136530136, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "mov     r15, [rsp+0A8h+i.cur.ptr]", "jz      loc_3EE0"], ["cmp~rax,0", "mov~r15,[rsp+0]", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 12, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5820; \"mbiter_multi_next\"", "lea     rsi, aMbiterH; \"mbiter.h\"", "lea     rdi, aIterCurPtr0; \"*iter->cur.ptr == '\\\\0'\"", "mov     edx, 0A1h; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [2, 0, 57, 0, 0, 3, 0, 1, 11, 1, 0.009657009657009656, ["mov     [rsp+0A8h+i.cur.bytes], 1", "cmp     byte ptr [r15], 0", "jnz     loc_3F40"], ["mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [6, 0, 35, 1, 0, 18, 2, 0, 5, 7, 0.14127539127539127, ["mov     ecx, eax", "mov     [rsp+0A8h+i.in_shift], 0", "mov     qword ptr [rsp+0A8h+i.state.__count], 0", "shr     ecx, 10h", "test    eax, 8080h", "mov     [rsp+0A8h+i.next_done], 0", "cmovz   eax, ecx", "lea     rcx, [rdx+2]", "mov     esi, eax", "cmovz   rdx, rcx", "add     sil, al", "mov     rsi, d", "sbb     rdx, 3", "xor     r15d, r15d", "cmp     rdx, d", "mov     r14, rdx", "mov     [rsp+0A8h+i.limit], rdx", "jbe     loc_3C40"], ["mov~ecx,eax", "mov~[rsp+0],0", "mov~[word ptr [rsp+0],0", "shr~ecx,0", "test~eax,0", "mov~[rsp+0],0", "cmovz~eax,ecx", "lea~rcx,[rdx+0]", "mov~esi,eax", "cmovz~rdx,rcx", "add~sil,al", "mov~rsi,d", "sbb~rdx,0", "xor~r15d,r15d", "cmp~rdx,d", "mov~r14,rdx", "mov~[rsp+0],rdx", "jbe~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 7, -1, 0.0, ["add     rsp, 78h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 76, 0, 1, 4, 0, 1, 1, 11, 0.012654012654012654, ["mov     rbx, d", "call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "jbe     loc_3C70"], ["mov~rbx,d", "call~FOO", "cmp~rax,0", "jbe~FOO"]]], "func_feature": [23, 35, 79, 2, 79, 119, 1, 352, 0.03339, 6, 15], "succs": [[34], [0, 28], [27, 47], [2, 19], [3], [3], [3], [3], [10, 62], [8], [8, 62], [26], [11, 13], [26, 12], [], [78, 14], [9, 63], [47], [17, 47], [33, 18], [5, 30], [72, 20], [20], [24, 4], [4], [], [25, 77], [47], [34], [46, 23], [29, 6], [76, 31], [31], [49, 58], [36, 38], [34], [26, 68], [36, 53], [52, 36], [36], [36], [26, 55], [41, 42], [1, 75], [1, 60], [37, 45], [74, 54], [57, 21], [47], [47], [64, 59], [50, 35], [51, 69], [52], [60, 23], [12], [21], [26, 61], [48, 49], [69], [], [26], [66, 26], [62], [], [64, 22], [42], [16, 66], [32], [40, 73], [45], [32, 70], [65, 7], [43, 39], [], [74, 44], [56, 26], [], [67, 71]], "fname": "trim2", "n_num": 79}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[1, 0, 1, 0, 1, 11, 1, 2, 0, 0, 0.006578947368421052, ["mov     r15, [authors+20h]; jumptable 0000000000004004 case 5", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [authors+18h]", "mov     r13, [authors+10h]", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "call    _dcgettext", "push    r15", "jmp     short loc_4206"], ["mov~r15,[authors+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "call~FOO", "push~r15", "jmp~FOO"]], [0, 0, 15, 1, 0, 4, 0, 1, 3, 1, 0.1368421052631579, ["lea     rdx, off_9408", "movsxd  rax, dword ptr [rdx+n_authors*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [2, 0, 1, 1, 1, 16, 1, 1, 4, -1, 0.007894736842105263, ["mov     r9, [authors+38h]; jumptable 0000000000004004 case 8", "mov     rax, [authors+10h]", "lea     rsi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r8, [authors+8]", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     [rsp+58h+var_48], r9", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     [rsp+58h+var_58], rax", "mov     [rsp+58h+var_50], r8", "mov     authors, [authors]", "call    _dcgettext", "sub     rsp, 8"], ["mov~r9,[authors+0]", "mov~rax,[authors+0]", "lea~rsi,<TAG>", "mov~r8,[authors+0]", "mov~edx,0", "xor~edi,edi", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~[rsp+0],r9", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~<TAG>,rax", "mov~[rsp+0],r8", "mov~authors,<TAG>", "call~FOO", "sub~rsp,0"]], [2, 0, 1, 1, 1, 9, 1, 1, 4, -1, 0.006578947368421052, ["lea     rsi, aWrittenBySSSAn; jumptable 0000000000004004 case 4", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [authors+18h]", "mov     r13, [authors+10h]", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "call    _dcgettext", "sub     rsp, 8"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "call~FOO", "sub~rsp,0"]], [5, 0, 17, 0, 4, 20, 3, 5, 2, 2, 0.12894736842105262, ["lea     rsi, aC; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7D9h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     n_authors, 9; switch 10 cases", "ja      loc_4320; jumptable 0000000000004004 default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~n_authors,0", "ja~FOO"]], [2, 0, 1, 1, 1, 16, 1, 1, 4, -1, 0.006578947368421052, ["mov     r8, [authors+8]; jumptable 0000000000004004 case 6", "mov     n_authors, [authors+28h]", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     edx, 5; category", "mov     r13, [authors+10h]", "xor     edi, edi; domainname", "mov     authors, [authors]", "mov     [rsp+58h+var_58], r8", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r13", "push    r12", "push    r15", "push    r14"], ["mov~r8,[authors+0]", "mov~n_authors,[authors+0]", "lea~rsi,<TAG>", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~edx,0", "mov~r13,[authors+0]", "xor~edi,edi", "mov~authors,<TAG>", "mov~<TAG>,r8", "call~FOO", "sub~rsp,0", "mov~r9,r13", "push~r12", "push~r15", "push~r14"]], [0, 0, 1, 0, 1, 5, 1, 2, 4, -1, 0.010526315789473684, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r10, [rsp+58h+var_40]", "push    r10", "jmp     loc_4074"], ["xor~edi,edi", "call~FOO", "mov~r10,[rsp+0]", "push~r10", "jmp~FOO"]], [1, 0, 2, 0, 0, 16, 0, 1, 3, -1, 0.015789473684210527, ["mov     r10, [authors+40h]; jumptable 0000000000004004 default case", "mov     r9, [authors+38h]", "mov     edx, 5", "mov     rax, [authors+10h]", "mov     r8, [authors+8]", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     [rsp+58h+var_40], r10", "mov     [rsp+58h+var_48], r9", "mov     [rsp+58h+var_58], rax", "mov     [rsp+58h+var_50], r8", "mov     authors, [authors]", "jmp     loc_40FA"], ["mov~r10,[authors+0]", "mov~r9,[authors+0]", "mov~edx,0", "mov~rax,[authors+0]", "mov~r8,[authors+0]", "lea~rsi,<TAG>", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~<TAG>,rax", "mov~[rsp+0],r8", "mov~authors,<TAG>", "jmp~FOO"]], [1, 0, 2, 0, 0, 15, 0, 0, 4, -1, 0.002631578947368421, ["mov     r10, [authors+40h]; jumptable 0000000000004004 case 9", "mov     r9, [authors+38h]", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     rax, [authors+10h]", "mov     r8, [authors+8]", "mov     edx, 5; category", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     authors, [authors]", "mov     [rsp+58h+var_40], r10", "mov     [rsp+58h+var_48], r9", "mov     [rsp+58h+var_58], rax", "mov     [rsp+58h+var_50], r8"], ["mov~r10,[authors+0]", "mov~r9,[authors+0]", "lea~rsi,<TAG>", "mov~rax,[authors+0]", "mov~r8,[authors+0]", "mov~edx,0", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~authors,<TAG>", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~<TAG>,rax", "mov~[rsp+0],r8"]], [1, 0, 18, 0, 1, 7, 1, 2, 1, 3, 0.02236842105263158, ["mov     r8, version", "mov     version, package", "lea     package, aSS_0; \"%s %s\\n\"", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_3F9C"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 1, 20, 1, 0, 12, 1, 1, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, n_authors", "push    rbp", "push    rbx", "mov     rbp, stream", "mov     rbx, authors", "sub     rsp, 28h", "test    command_name, command_name", "jz      loc_4010"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,n_authors", "push~rbp", "push~rbx", "mov~rbp,stream", "mov~rbx,authors", "sub~rsp,<STR>", "test~command_name,command_name", "jz~FOO"]], [2, 1, 1, 1, 1, 20, 2, 2, 4, -1, 0.002631578947368421, ["mov     n_authors, [authors+8]; jumptable 0000000000004004 case 2", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "mov     authors, [authors]", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     r8, r12", "mov     rcx, rbx", "mov     rdi, stream", "mov     rdx, rax", "mov     esi, 1", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~n_authors,[authors+0]", "lea~rsi,<TAG>", "mov~authors,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,<STR>", "mov~r8,r12", "mov~rcx,rbx", "mov~rdi,stream", "mov~rdx,rax", "mov~esi,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "xor~eax,eax", "jmp~FOO"]], [1, 2, 0, 2, 1, 16, 1, 1, 5, -1, 0.0, ["mov     r8, [rsp+78h+var_58]", "mov     rcx, rbx", "mov     rdx, rax", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 20h", "add     rsp, 28h", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "call~FOO", "add~rsp,<STR>", "add~rsp,<STR>", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 1, 0, 1, 19, 1, 2, 4, -1, 0.006578947368421052, ["mov     r9, [authors+10h]; jumptable 0000000000004004 case 7", "mov     r13, [authors+30h]", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "mov     n_authors, [authors+28h]", "mov     r15, [authors+20h]", "mov     edx, 5; category", "mov     r14, [authors+18h]", "mov     r8, [authors+8]", "xor     edi, edi; domainname", "mov     [rsp+58h+var_50], r9", "mov     authors, [authors]", "mov     [rsp+58h+var_58], r8", "call    _dcgettext", "push    r13", "push    r12", "push    r15", "push    r14", "mov     r9, [rsp+78h+var_50]", "jmp     short loc_42A3"], ["mov~r9,[authors+0]", "mov~r13,[authors+0]", "lea~rsi,<TAG>", "mov~n_authors,[authors+0]", "mov~r15,[authors+0]", "mov~edx,0", "mov~r14,[authors+0]", "mov~r8,[authors+0]", "xor~edi,edi", "mov~[rsp+0],r9", "mov~authors,<TAG>", "mov~<TAG>,r8", "call~FOO", "push~r13", "push~r12", "push~r15", "push~r14", "mov~r9,[rsp+0]", "jmp~FOO"]], [1, 0, 18, 0, 1, 7, 1, 1, 1, 3, 0.024999999999999998, ["mov     authors, package", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     n_authors, version", "xor     eax, eax", "mov     version, command_name", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~authors,package", "lea~package,<TAG>", "mov~n_authors,version", "xor~eax,eax", "mov~version,command_name", "mov~esi,0", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    _abort; jumptable 0000000000004004 case 0"], ["call~FOO"]], [2, 1, 1, 1, 1, 22, 2, 2, 4, -1, 0.002631578947368421, ["mov     r13, [authors+10h]; jumptable 0000000000004004 case 3", "mov     n_authors, [authors+8]", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "mov     authors, [authors]", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdi, stream", "mov     rdx, rax", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "lea~rsi,<TAG>", "mov~authors,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,<STR>", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdi,stream", "mov~rdx,rax", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [1, 1, 0, 1, 1, 19, 1, 1, 5, -1, 0.0, ["push    r14", "mov     rdx, rax", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "pop     rax", "pop     rdx", "add     rsp, 28h", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["push~r14", "mov~rdx,rax", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "call~FOO", "pop~rax", "pop~rdx", "add~rsp,<STR>", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [2, 1, 0, 2, 1, 23, 1, 1, 5, -1, 0.0, ["mov     r9, [rsp+60h+var_48]", "mov     rcx, rbx", "mov     rdx, rax", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "push    r9", "push    r13", "push    r12", "push    r15", "push    r14", "mov     r9, [rsp+88h+var_58]", "mov     r8, [rsp+88h+var_50]", "call    ___fprintf_chk", "add     rsp, 30h", "add     rsp, 28h", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~r9,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "push~r9", "push~r13", "push~r12", "push~r15", "push~r14", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "call~FOO", "add~rsp,0", "add~rsp,<STR>", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [2, 1, 1, 1, 1, 18, 2, 2, 4, -1, 0.002631578947368421, ["mov     authors, [authors]; jumptable 0000000000004004 case 1", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     rcx, rbx", "mov     rdi, stream", "pop     rbx", "pop     stream", "pop     n_authors", "pop     r13", "pop     r14", "pop     r15", "mov     rdx, rax", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~authors,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,<STR>", "mov~rcx,rbx", "mov~rdi,stream", "pop~rbx", "pop~stream", "pop~n_authors", "pop~r13", "pop~r14", "pop~r15", "mov~rdx,rax", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []]], "func_feature": [19, 21, 30, 4, 21, 28, 3, 276, 0.0183, 16, 13], "succs": [[17], [0, 2, 3, 5, 8, 11, 13, 15, 16, 19], [18], [17], [1, 7], [12], [18], [6], [6], [4], [9, 14], [20], [], [12], [20, 4], [], [20], [], [], [20], []], "fname": "version_etc_arn", "n_num": 21}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[2, 0, 3, 1, 0, 3, 0, 1, 0, 0, 0.16666666666666666, ["add     n_authors, 1; n_authors", "cmp     qword ptr [authors+n_authors*8], 0", "jnz     short loc_4380"], ["add~n_authors,0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 1, 2, 0.08333333333333333, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 4, 0, 0, 3, 1, 1, 0, 1, 0.0, ["xor     r9d, r9d", "cmp     qword ptr [authors], 0", "jz      short loc_438B"], ["xor~r9d,r9d", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0.25, ["jmp     version_etc_arn"], ["jmp~FOO"]]], "func_feature": [0, 1, 3, 0, 5, 6, 0, 8, 0.1, 0, 1], "succs": [[0, 4], [0], [1, 4], [], [3]], "fname": "version_etc_ar", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[1, 0, 8, 2, 0, 4, 0, 0, 0, 0, 0.09821428571428571, ["mov     r11d, eax", "add     r11, [authors+10h]", "add     eax, 8", "mov     [authors], eax"], ["mov~r11d,eax", "add~r11,[authors+0]", "add~eax,0", "mov~<TAG>,eax"]], [1, 0, 8, 0, 0, 3, 0, 1, 1, 1, 0.25, ["mov     eax, [authors]", "cmp     eax, 2Fh ; '/'", "ja      short loc_43FA"], ["mov~eax,<TAG>", "cmp~eax,0", "ja~FOO"]], [0, 0, 8, 0, 0, 4, 0, 1, 2, 0, 0.09821428571428571, ["mov     r11, [authors+8]", "lea     rax, [r11+8]", "mov     [authors+8], rax", "jmp     short loc_43C5"], ["mov~r11,[authors+0]", "lea~rax,[r11+0]", "mov~[authors+0],rax", "jmp~FOO"]], [1, 0, 8, 1, 0, 8, 2, 0, 0, 2, 0.0, ["sub     rsp, 68h", "mov     r10, authors", "xor     r9d, r9d", "mov     rax, fs:28h", "mov     [rsp+68h+var_10], rax", "xor     eax, eax", "mov     authors, rsp; authors", "nop     dword ptr [rax]"], ["sub~rsp,0", "mov~r10,authors", "xor~r9d,r9d", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~authors,rsp", "nop~<TAG>"]], [0, 0, 2, 0, 1, 4, 1, 2, 4, -1, 0.21428571428571427, ["call    version_etc_arn", "mov     rax, [rsp+68h+var_10]", "xor     rax, fs:28h", "jnz     short loc_43F5"], ["call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 8, 0, 0, 4, 1, 1, 3, 3, 0.3571428571428571, ["mov     rax, [r11]", "test    rax, rax", "mov     [r8+n_authors*8], rax", "jz      short loc_43DB"], ["mov~rax,<TAG>", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [2, 0, 8, 1, 0, 3, 0, 1, 4, 2, 0.125, ["add     n_authors, 1; n_authors", "cmp     n_authors, 0Ah", "jnz     short loc_43B0"], ["add~n_authors,0", "cmp~n_authors,0", "jnz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 5, -1, 0.0, ["add     rsp, 68h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 4, 7, 1, 9, 11, 0, 33, 0.12698, 1, 5], "succs": [[5], [0, 2], [5], [1], [8, 7], [4, 6], [1, 4], [], []], "fname": "version_etc_va", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 10, 0, 0, 4, 1, 1, 0, 0, 0.3111111111111111, ["mov     rax, [rax]", "test    rax, rax", "mov     [r8+r9*8], rax", "jz      short loc_44AC"], ["mov~rax,<TAG>", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [1, 0, 10, 1, 0, 3, 0, 1, 2, 0, 0.08333333333333334, ["mov     rax, rbx", "add     rbx, 8", "jmp     short loc_4496"], ["mov~rax,rbx", "add~rbx,0", "jmp~FOO"]], [2, 0, 10, 2, 0, 4, 0, 0, 2, 4, 0.08333333333333334, ["mov     eax, r10d", "mov     r11d, 1", "add     r10d, 8", "add     rax, rbp"], ["mov~eax,r10d", "mov~r11d,0", "add~r10d,0", "add~rax,rbp"]], [1, 0, 10, 0, 0, 2, 0, 1, 1, 1, 0.17777777777777778, ["cmp     r10d, 2Fh ; '/'", "ja      short loc_44DC"], ["cmp~r10d,0", "ja~FOO"]], [2, 0, 10, 1, 0, 3, 0, 1, 4, 2, 0.07777777777777778, ["add     r9, 1; n_authors", "cmp     r9, 0Ah", "jnz     short loc_4480"], ["add~r9,0", "cmp~r9,0", "jnz~FOO"]], [1, 2, 10, 1, 0, 20, 3, 0, 0, 2, 0.0, ["push    rbp", "push    rbx", "mov     r10d, 20h ; ' '", "xor     r11d, r11d", "sub     rsp, 0B8h", "mov     rax, fs:28h", "mov     [rsp+0C8h+var_50], rax", "xor     eax, eax", "lea     rax, [rsp+0C8h+arg_0]", "mov     [rsp+0C8h+var_28], r8", "lea     rbx, [rsp+0C8h+arg_0]", "lea     r8, [rsp+0C8h+var_A8]; authors", "mov     [rsp+0C8h+var_20], r9", "mov     [rsp+0C8h+authors.gp_offset], 20h ; ' '", "mov     [rsp+0C8h+authors.overflow_arg_area], rax", "lea     rax, [rsp+0C8h+var_48]", "xor     r9d, r9d", "mov     [rsp+0C8h+authors.reg_save_area], rax", "mov     rbp, rax", "nop     word ptr [rax+rax+00000000h]"], ["push~rbp", "push~rbx", "mov~r10d,<STR>", "xor~r11d,r11d", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "mov~[rsp+0],r8", "lea~rbx,[rsp+0]", "lea~r8,[rsp+0]", "mov~[rsp+0],r9", "mov~[rsp+0],<STR>", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "xor~r9d,r9d", "mov~[rsp+0],rax", "mov~rbp,rax", "nop~[ord ptr [rax+0]"]], [0, 0, 4, 0, 0, 2, 1, 1, 4, -1, 0.26666666666666666, ["test    r11b, r11b", "jnz     short loc_44D5"], ["test~r11b,r11b", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 1, 4, 1, 2, 5, -1, 0.17777777777777778, ["call    version_etc_arn", "mov     rax, [rsp+0C8h+var_50]", "xor     rax, fs:28h", "jnz     short loc_44D0"], ["call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 5, -1, 0.0, ["mov     [rsp+0C8h+authors.gp_offset], r10d", "jmp     short loc_44B1"], ["mov~[rsp+0],r10d", "jmp~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 6, -1, 0.0, ["add     rsp, 0B8h", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]]], "func_feature": [2, 6, 9, 5, 11, 14, 1, 49, 0.10707, 1, 6], "succs": [[4, 6], [0], [0], [1, 2], [3, 6], [3], [8, 9], [], [10, 7], [8], []], "fname": "version_etc", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[5, 0, 1, 0, 5, 29, 5, 6, 0, 0, 0.0, ["push    rbx", "lea     rsi, aReportBugsToS; \"\\nReport bugs to: %s\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "lea     rdx, aBugCoreutilsGn; \"bug-coreutils@gnu.org\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "lea     rsi, aSHomePageS; \"%s home page: <%s>\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "lea     rcx, aHttpWwwGnuOrgS; \"http://www.gnu.org/software/coreutils/\"", "lea     rdx, package; \"GNU \"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aGeneralHelpUsi; \"General help using GNU software: <http:\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "pop     rbx", "jmp     _fputs_unlocked"], ["push~rbx", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "pop~rbx", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [5, 5, 6, 0, 2, 1, 0, 29, 0.0, 7, 0], "succs": [[1], []], "fname": "emit_bug_reporting_address", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[2, 0, 0, 1, 3, 12, 3, 3, 0, 0, 0.0, ["lea     rsi, aMemoryExhauste; \"memory exhausted\"", "sub     rsp, 8", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     edi, cs:exit_failure; status", "lea     rdx, format+4; format", "mov     rcx, rax", "xor     esi, esi; errnum", "xor     eax, eax", "call    _error", "call    _abort"], ["lea~rsi,<TAG>", "sub~rsp,0", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~edi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "xor~esi,esi", "xor~eax,eax", "call~FOO", "call~FOO"]]], "func_feature": [3, 3, 3, 0, 1, 0, 8, 12, 0.0, 3, 1], "succs": [[]], "fname": "xalloc_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[1, 0, 2, 0, 1, 3, 0, 2, 0, 0, 0.16666666666666666, ["call    ___errno_location", "cmp     dword ptr [rax], 0Ch", "jnz     short loc_45BC"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "call    mem_cd_iconv", "test    eax, eax", "mov     ebx, eax", "js      short loc_45C0"], ["push~rbx", "call~FOO", "test~eax,eax", "mov~ebx,eax", "js~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, -1, 0.0, ["mov     eax, ebx", "pop     retval", "retn"], ["mov~eax,ebx", "pop~retval", "retn"]]], "func_feature": [3, 1, 5, 0, 4, 4, 0, 12, 0.04167, 0, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "xmem_cd_iconv", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[1, 0, 2, 0, 1, 3, 0, 2, 0, 0, 0.16666666666666666, ["call    ___errno_location", "cmp     dword ptr [rax], 0Ch", "jnz     short loc_45DE"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "call    str_cd_iconv", "test    rax, rax", "mov     rbx, rax", "jz      short loc_45E8"], ["push~rbx", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, -1, 0.0, ["mov     rax, result", "pop     result", "retn"], ["mov~rax,result", "pop~result", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [3, 1, 5, 0, 4, 4, 0, 12, 0.04167, 0, 0], "succs": [[2, 3], [0, 2], [], []], "fname": "xstr_cd_iconv", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[1, 0, 2, 0, 1, 3, 0, 2, 0, 0, 0.16666666666666666, ["call    ___errno_location", "cmp     dword ptr [rax], 0Ch", "jnz     short loc_460E"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "call    str_iconv", "test    rax, rax", "mov     rbx, rax", "jz      short loc_4618"], ["push~rbx", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, -1, 0.0, ["mov     rax, result", "pop     result", "retn"], ["mov~rax,result", "pop~result", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [3, 1, 5, 0, 4, 4, 2, 12, 0.04167, 0, 0], "succs": [[2, 3], [0, 2], [], []], "fname": "xstr_iconv", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 6, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666669, ["test    sil, sil", "jz      short loc_466A"], ["test~sil,sil", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 3, 2, 0.33333333333333337, ["cmp     dl, 2Fh ; '/'", "jnz     short loc_4660"], ["cmp~dl,0", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 0, 5, 2, 0.0, ["mov     base, p", "xor     esi, esi"], ["mov~base,p", "xor~esi,esi"]], [2, 0, 9, 1, 0, 4, 0, 1, 2, 2, 0.08888888888888889, ["add     base, 1", "movzx   edx, byte ptr [base]", "cmp     dl, 2Fh ; '/'", "jz      short loc_4640"], ["add~base,0", "movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 1, 3, 0.011111111111111112, ["nop     dword ptr [base+base+00h]"], ["nop~[word ptr [base+0]"]], [0, 0, 7, 0, 0, 2, 1, 1, 1, 1, 0.23333333333333334, ["test    dl, dl", "jz      short locret_468A"], ["test~dl,dl", "jz~FOO"]], [1, 0, 10, 0, 0, 4, 0, 1, 0, 2, 0.0, ["movzx   edx, byte ptr [base]", "mov     rax, base", "cmp     dl, 2Fh ; '/'", "jnz     short loc_464C"], ["movzx~edx,<TAG>", "mov~rax,base", "cmp~dl,0", "jnz~FOO"]], [2, 0, 6, 1, 0, 5, 1, 1, 4, 1, 0.022222222222222223, ["add     p, 1", "movzx   edx, byte ptr [rcx]", "mov     esi, 1", "test    dl, dl", "jnz     short loc_4675"], ["add~p,0", "movzx~edx,<TAG>", "mov~esi,0", "test~dl,dl", "jnz~FOO"]], [1, 0, 6, 1, 0, 4, 1, 1, 5, 1, 0.07777777777777778, ["add     p, 1", "movzx   edx, byte ptr [p]", "test    dl, dl", "jz      short locret_468A"], ["add~p,0", "movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 2, 3, 0.22222222222222224, ["mov     rcx, p", "xor     esi, esi", "jmp     short loc_4675"], ["mov~rcx,p", "xor~esi,esi", "jmp~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 6, 8, 0, 11, 17, 3, 30, 0.10505, 0, 3], "succs": [[8, 2], [0, 7], [8], [3, 5], [3], [9, 10], [4, 5], [1, 10], [1, 10], [1], []], "fname": "last_component", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[1, 0, 5, 0, 0, 3, 0, 1, 0, 0, 0.16666666666666666, ["cmp     byte ptr [name+len-1], 2Fh ; '/'", "lea     rax, [len-1]", "jz      short loc_46B0"], ["cmp~[yte ptr [name+0],0", "lea~rax,[len-1]+0]", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 1, 0.2857142857142857, ["cmp     len, 1", "jz      short loc_46D0"], ["cmp~len,0", "jz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 1, 2, 0.11904761904761904, ["cmp     byte ptr [name+len-1], 2Fh ; '/'", "lea     rdx, [len-1]", "jz      short loc_46B8"], ["cmp~[yte ptr [name+0],0", "lea~rdx,[len-1]+0]", "jz~FOO"]], [1, 0, 7, 0, 1, 5, 0, 1, 0, 3, 0.0, ["push    rbx", "mov     rbx, name", "call    _strlen", "cmp     len, 1", "jbe     short loc_46AA"], ["push~rbx", "mov~rbx,name", "call~FOO", "cmp~len,0", "jbe~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     name", "retn"], ["pop~name", "retn"]], [0, 0, 0, 0, 0, 3, 0, 0, 4, -1, 0.0, ["mov     rax, len", "pop     name", "retn"], ["mov~rax,len", "pop~name", "retn"]], [0, 0, 5, 0, 0, 2, 0, 0, 4, 2, 0.047619047619047616, ["mov     len, rax", "nop     dword ptr [rax+rax+00h]"], ["mov~len,rax", "nop~[word ptr [rax+0]"]], [1, 0, 0, 0, 0, 3, 0, 0, 3, 0, 0.0, ["mov     eax, 1", "pop     name", "retn"], ["mov~eax,0", "pop~name", "retn"]]], "func_feature": [1, 0, 4, 0, 8, 9, 0, 23, 0.07738, 0, 0], "succs": [[5, 6], [0, 7], [1, 4], [2, 4], [], [], [1], []], "fname": "base_len", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:file_name, file", "retn"], ["mov~<TAG>,file", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:ignore_EPIPE, dil", "retn"], ["mov~<TAG>,dil", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_ignore_EPIPE", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[1, 0, 0, 1, 0, 4, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [0, 0, 2, 0, 1, 4, 1, 2, 1, -1, 0.09523809523809523, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jnz     short loc_4782"], ["mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 3, 0, 1, 8, 2, 2, 2, 1, 0.11904761904761903, ["lea     rsi, msgid; \"write error\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdi, cs:file_name; arg", "mov     rbp, rax", "test    rdi, rdi", "jz      short loc_478D"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdi,<TAG>", "mov~rbp,rax", "test~rdi,rdi", "jz~FOO"]], [1, 0, 7, 0, 1, 4, 0, 2, 1, 2, 0.07142857142857142, ["call    ___errno_location", "cmp     cs:ignore_EPIPE, 0", "mov     rbx, rax", "jz      short loc_4743"], ["call~FOO", "cmp~<TAG>,0", "mov~rbx,rax", "jz~FOO"]], [0, 1, 6, 0, 0, 2, 0, 1, 2, 2, 0.04166666666666666, ["cmp     dword ptr [rax], 20h ; ' '", "jnz     short loc_4743"], ["cmp~<TAG>,<STR>", "jnz~FOO"]], [1, 0, 8, 1, 1, 7, 1, 2, 0, 3, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jz      short loc_472C"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     edi, cs:exit_failure; status", "call    __exit"], ["mov~edi,<TAG>", "call~FOO"]], [0, 0, 1, 0, 1, 7, 2, 2, 3, 0, 0.014880952380952378, ["mov     esi, [rbx]; errnum", "lea     rdx, format+4; format", "mov     rcx, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_4782"], ["mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 2, 8, 2, 2, 3, -1, 0.014880952380952378, ["call    quotearg_colon", "mov     esi, [rbx]; errnum", "lea     rdx, format; \"%s: %s\"", "mov     rcx, rax", "mov     r8, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO"]]], "func_feature": [8, 8, 14, 0, 9, 12, 0, 46, 0.03968, 8, 2], "succs": [[], [0, 6], [8, 7], [2, 4], [1, 2], [1, 3], [], [6], [6]], "fname": "close_stdout", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     rdx, name; arg", "mov     esi, 6; s", "jmp     quotearg_n_style"], ["mov~rdx,name", "mov~esi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quote_n", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[1, 0, 1, 0, 0, 4, 1, 1, 0, 0, 0.0, ["mov     rdx, name; arg", "mov     esi, 6; s", "xor     edi, edi; n", "jmp     quotearg_n_style"], ["mov~rdx,name", "mov~esi,0", "xor~edi,edi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 1, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "quote", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[2, 0, 179, 1, 0, 5, 1, 1, 0, 0, 0.004970271274619101, ["mov     edx, 1", "mov     rdi, 20000002Bh", "shl     rdx, cl", "test    rdx, rdi", "jnz     loc_52EE"], ["mov~edx,0", "mov~rdi,0", "shl~rdx,cl", "test~rdx,rdi", "jnz~FOO"]], [1, 0, 179, 0, 0, 4, 0, 1, 18, 5, 0.017465626161278336, ["movzx   esi, byte ptr [rax]", "lea     ecx, [rsi-5Bh]", "cmp     cl, 21h ; '!'", "ja      short loc_5206"], ["movzx~esi,<TAG>", "lea~ecx,[rsi-5Bh]+0]", "cmp~cl,0", "ja~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 9, 7, 0.19900826830174662, ["cmp     [rsp+0D8h+backslash_escapes], 0; jumptable 000000000000493E cases 37,43-58,65-90,93,95,97-122", "jz      loc_4B43"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 179, 1, 0, 5, 0, 1, 8, 6, 0.30703037904124864, ["lea     rcx, off_94E4", "movzx   edx, bl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [1, 0, 179, 0, 0, 4, 0, 0, 12, 8, 0.056554254923820144, ["lea     rax, [i_0+2]", "mov     ebx, 3Fh ; '?'", "cmp     rax, argsize_0", "jnb     loc_4A00; jumptable 000000000000493E cases 37,43-58,65-90,93,95,97-122"], ["lea~rax,[i_0+0]", "mov~ebx,0", "cmp~rax,argsize_0", "jnb~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 13, 7, 0.05067044469218382, ["cmp     byte ptr [arg_0+i_0+1], 3Fh ; '?'", "jnz     loc_4A00; jumptable 000000000000493E cases 37,43-58,65-90,93,95,97-122"], ["cmp~[yte ptr [arg_0+0],0", "jnz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 9, 6, 0.021059782608695652, ["cmp     [rsp+0D8h+quoting_style], 2; jumptable 000000000000493E cases 32-34,36,38,40-42,59-62,91,94,96,124", "jnz     short loc_4A00; jumptable 000000000000493E cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 5, 0.004947045707915273, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "jz      short loc_4A00; jumptable 000000000000493E cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 179, 0, 0, 2, 1, 1, 9, 8, 0.008494751021924936, ["test    i_0, i_0; jumptable 000000000000493E cases 35,126", "jnz     loc_4A00; jumptable 000000000000493E cases 37,43-58,65-90,93,95,97-122"], ["test~i_0,i_0", "jnz~FOO"]], [0, 0, 179, 0, 0, 2, 1, 1, 10, 8, 0.02078688219992568, ["test    al, al", "jnz     loc_4A00; jumptable 000000000000493E cases 37,43-58,65-90,93,95,97-122"], ["test~al,al", "jnz~FOO"]], [0, 0, 179, 0, 0, 2, 1, 1, 11, 8, 0.004621887774061687, ["test    i_0, i_0", "jnz     loc_4A00; jumptable 000000000000493E cases 37,43-58,65-90,93,95,97-122"], ["test~i_0,i_0", "jnz~FOO"]], [2, 0, 179, 0, 0, 3, 0, 1, 9, 5, 0.038238960113960115, ["cmp     [rsp+0D8h+quoting_style], 2; jumptable 000000000000493E case 39", "mov     ebx, 27h ; '''", "jnz     loc_4A00; jumptable 000000000000493E cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "mov~ebx,0", "jnz~FOO"]], [2, 0, 179, 1, 0, 3, 0, 1, 14, 8, 0.028172612411742848, ["add     r15, 3", "mov     ebx, 27h ; '''", "jmp     loc_4A00; jumptable 000000000000493E cases 37,43-58,65-90,93,95,97-122"], ["add~r15,0", "mov~ebx,0", "jmp~FOO"]], [0, 0, 179, 0, 0, 2, 1, 1, 10, 8, 0.08544685990338165, ["test    bpl, bpl", "jz      loc_4A00; jumptable 000000000000493E cases 37,43-58,65-90,93,95,97-122"], ["test~bpl,bpl", "jz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 11, 8, 0.02431716833890747, ["mov     ebx, 3Fh ; '?'", "jmp     loc_4A00; jumptable 000000000000493E cases 37,43-58,65-90,93,95,97-122"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 179, 1, 0, 3, 0, 0, 21, 8, 0.03604607952434039, ["add     r15, 4", "mov     r14, i_0", "nop     dword ptr [rax]"], ["add~r15,0", "mov~r14,i_0", "nop~<TAG>"]], [1, 0, 179, 0, 0, 3, 0, 1, 13, 7, 0.023388145670754368, ["mov     r15, len", "mov     ebx, 30h ; '0'", "jmp     loc_4A0B"], ["mov~r15,len", "mov~ebx,0", "jmp~FOO"]], [0, 0, 179, 0, 0, 4, 0, 0, 12, 8, 0.04545243403939056, ["lea     rax, [i_0+1]", "lea     rdx, [r15+1]", "cmp     rax, argsize_0", "jnb     short loc_5002"], ["lea~rax,[i_0+0]", "lea~rdx,[r15+0]", "cmp~rax,argsize_0", "jnb~FOO"]], [2, 0, 179, 1, 0, 4, 0, 0, 13, 8, 0.021483649201040508, ["movzx   eax, byte ptr [arg_0+i_0+1]", "sub     eax, 30h ; '0'", "cmp     al, 9", "jbe     loc_5300"], ["movzx~eax,[yte ptr [arg_0+0]", "sub~eax,0", "cmp~al,0", "jbe~FOO"]], [1, 0, 179, 1, 0, 3, 0, 1, 19, 6, 0.011914715719063546, ["add     rax, 1", "cmp     r8, rax", "jnz     short loc_51E0"], ["add~rax,0", "cmp~r8,rax", "jnz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 6, 0.06507029604855692, ["cmp     [rsp+0D8h+var_C8], 0", "jz      short loc_4A35"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 7, 0.24106202774681035, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "jnz     loc_4A0B"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 179, 1, 0, 3, 0, 1, 16, 7, 0.016304347826086956, ["add     r15, 3", "mov     ebx, 30h ; '0'", "jmp     loc_4A0B"], ["add~r15,0", "mov~ebx,0", "jmp~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 9, 1, 0.009522482348569306, ["mov     rsi, [rsp+0D8h+var_40]", "xor     rsi, fs:28h", "mov     rax, r15", "jnz     loc_541E"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~rax,r15", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 8, 2, 0.006764446302489781, ["cmp     r15, r13", "jnb     loc_4BFE"], ["cmp~r15,r13", "jnb~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 9, 2, 0.0, ["mov     rax, [rsp+0D8h+buffer]", "mov     byte ptr [rax+r15], 0", "jmp     loc_4BFE"], ["mov~rax,<TAG>", "mov~<TAG>,0", "jmp~FOO"]], [3, 1, 3, 2, 1, 14, 1, 1, 8, 2, 0.011932134894091416, ["sub     rsp, 8", "mov     rcx, argsize_0; argsize", "mov     rdx, arg_0; arg", "push    [rsp+0E0h+quote_string_0]; right_quote", "push    [rsp+0E8h+quote_string]; left_quote", "mov     rsi, r13; buffersize", "push    0; quote_these_too", "mov     r9d, [rsp+0F8h+flags]", "mov     r8d, [rsp+0F8h+quoting_style]; quoting_style", "mov     rdi, [rsp+0F8h+buffer]; buffer", "and     r9d, 0FFFFFFFDh; flags", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r15, len"], ["sub~rsp,0", "mov~rcx,argsize_0", "mov~rdx,arg_0", "push~[rsp+0]", "push~[rsp+0]", "mov~rsi,r13", "push~0", "mov~r9d,[rsp+0]", "mov~r8d,[rsp+0]", "mov~rdi,[rsp+0]", "and~r9d,0", "call~FOO", "add~rsp,<STR>", "mov~r15,len"]], [0, 0, 179, 0, 0, 2, 0, 0, 14, 9, 0.01723337049424006, ["cmp     r13, len", "jbe     short loc_530D"], ["cmp~r13,len", "jbe~FOO"]], [3, 0, 180, 0, 0, 7, 1, 1, 3, 8, 0.004180602006688963, ["lea     rax, aIterCurPtr0+15h; \"'\"", "mov     [rsp+0D8h+elide_outer_quotes], 1", "mov     [rsp+0D8h+backslash_escapes], 0", "mov     r11d, 1", "xor     r15d, r15d", "mov     [rsp+0D8h+s2], rax", "jmp     loc_4880"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r11d,0", "xor~r15d,r15d", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 184, 0, 0, 2, 1, 1, 2, 9, 0.0001858045336306206, ["test    ebx, ebx; jumptable 0000000000004860 case 2", "jnz     loc_53F5"], ["test~ebx,ebx", "jnz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 5, 0.0008825715347454479, ["mov     ebx, 62h ; 'b'; jumptable 0000000000004F9E case 8", "jmp     store_escape"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 179, 1, 0, 5, 0, 1, 9, 6, 0.08357720178372352, ["lea     rcx, off_96E0", "movzx   edx, bl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort; jumptable 0000000000004860 default case"], ["call~FOO"]], [3, 0, 208, 1, 1, 29, 2, 2, 0, 10, 0.0, ["push    r15", "push    r14", "mov     r14d, r8d", "push    r13", "push    r12", "mov     r13, buffersize", "push    rbp", "push    rbx", "mov     ebx, r9d", "mov     r12, arg_0", "mov     rbp, argsize_0", "and     ebx, 2", "sub     rsp, 0A8h", "mov     rax, [rsp+0D8h+quote_these_too]", "mov     [rsp+0D8h+buffer], buffer_0", "mov     [rsp+0D8h+quoting_style], r8d", "mov     [rsp+0D8h+flags], r9d", "mov     [rsp+0D8h+var_C8], rax", "mov     rax, [rsp+0D8h+left_quote]", "mov     [rsp+0D8h+quote_string], rax", "mov     rax, [rsp+0D8h+right_quote]", "mov     [rsp+0D8h+quote_string_0], rax", "mov     rax, fs:28h", "mov     [rsp+0D8h+var_40], rax", "xor     eax, eax", "call    ___ctype_get_mb_cur_max", "cmp     r14d, 8; switch 9 cases", "mov     [rsp+0D8h+var_90], rax", "ja      loc_5419; jumptable 0000000000004860 default case"], ["push~r15", "push~r14", "mov~r14d,r8d", "push~r13", "push~r12", "mov~r13,buffersize", "push~rbp", "push~rbx", "mov~ebx,r9d", "mov~r12,arg_0", "mov~rbp,argsize_0", "and~ebx,0", "sub~rsp,0", "mov~rax,[rsp+0]", "mov~<TAG>,buffer_0", "mov~[rsp+0],r8d", "mov~[rsp+0],r9d", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "cmp~r14d,0", "mov~[rsp+0],rax", "ja~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 10, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 191, 0, 0, 3, 0, 1, 2, 10, 0.0005109624674842066, ["mov     r14d, [rsp+0D8h+quoting_style]; jumptable 0000000000004860 cases 6-8", "cmp     r14d, 8", "jz      short loc_4E37"], ["mov~r14d,[rsp+0]", "cmp~r14d,0", "jz~FOO"]], [0, 0, 206, 1, 0, 5, 0, 1, 1, 9, 0.00478446674098848, ["lea     rcx, off_94C0", "mov     edx, r14d", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "mov~edx,r14d", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [1, 0, 188, 0, 1, 9, 1, 2, 4, 10, 0.00880248978075065, ["lea     rsi, aIterCurPtr0+15h; msgid", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdi, rax", "mov     [rsp+0D8h+quote_string_0], rax", "lea     rax, aIterCurPtr0+15h; \"'\"", "cmp     rdi, rax", "jnz     short loc_4E37"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdi,rax", "mov~[rsp+0],rax", "lea~rax,<TAG>", "cmp~rdi,rax", "jnz~FOO"]], [2, 0, 190, 0, 1, 11, 1, 2, 3, 11, 0.00020903010033444816, ["lea     rsi, asc_9489; \"`\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, rax", "mov     [rsp+0D8h+quote_string], rax", "lea     rax, asc_9489; \"`\"", "cmp     r14d, 7", "setz    r14b", "cmp     rsi, rax", "jnz     short loc_4DFD"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,rax", "mov~[rsp+0],rax", "lea~rax,<TAG>", "cmp~r14d,0", "setz~r14b", "cmp~rsi,rax", "jnz~FOO"]], [0, 0, 189, 0, 0, 4, 1, 0, 4, 11, 0.0, ["lea     rax, asc_9487; \"\\\"\"", "test    r14b, r14b", "cmovz   rax, rsi", "mov     [rsp+0D8h+quote_string], rax"], ["lea~rax,<TAG>", "test~r14b,r14b", "cmovz~rax,rsi", "mov~[rsp+0],rax"]], [0, 0, 179, 0, 0, 1, 0, 1, 14, 9, 0.007803790412486065, ["jmp     loc_4D03"], ["jmp~FOO"]], [3, 0, 179, 0, 1, 14, 2, 1, 9, 9, 0.07374117428465254, ["mov     [rsp+0D8h+i], arg_0", "mov     [rsp+0D8h+argsize], r11", "mov     byte ptr [rsp+0D8h+p], r10b", "call    ___ctype_b_loc", "mov     rcx, [rax]", "movzx   edx, bl", "movzx   r10d, byte ptr [rsp+0D8h+p]", "mov     r11, [rsp+0D8h+argsize]", "mov     r9, [rsp+0D8h+i]", "movzx   ebp, word ptr [rcx+rdx*2]", "mov     ecx, 1", "shr     bp, 0Eh", "xor     ebp, 1", "and     bpl, [rsp+0D8h+backslash_escapes]"], ["mov~[rsp+0],arg_0", "mov~[rsp+0],r11", "mov~[yte ptr [rsp+0],r10b", "call~FOO", "mov~rcx,<TAG>", "movzx~edx,bl", "movzx~r10d,[yte ptr [rsp+0]", "mov~r11,[rsp+0]", "mov~r9,[rsp+0]", "movzx~ebp,<TAG>", "mov~ecx,0", "shr~bp,0", "xor~ebp,0", "and~bpl,[rsp+0]"]], [1, 0, 0, 1, 0, 8, 0, 0, 10, -1, 0.0, ["add     rsp, 0A8h", "pop     rbx", "pop     argsize_0", "pop     arg_0", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~argsize_0", "pop~arg_0", "pop~r13", "pop~r14", "pop~r15", "retn"]], [3, 0, 179, 1, 0, 10, 2, 1, 11, 5, 0.005332203022420415, ["mov     eax, ebx", "mov     rsi, [rsp+0D8h+var_C8]", "mov     ecx, ebx", "shr     al, 5", "and     ecx, 1Fh", "mov     edx, 1", "movzx   eax, al", "shl     edx, cl", "test    [rsi+rax*4], edx", "jnz     store_escape"], ["mov~eax,ebx", "mov~rsi,[rsp+0]", "mov~ecx,ebx", "shr~al,0", "and~ecx,0", "mov~edx,0", "movzx~eax,al", "shl~edx,cl", "test~<TAG>,edx", "jnz~FOO"]], [1, 0, 179, 0, 0, 3, 1, 1, 10, 6, 0.006212839093273876, ["xor     r10d, r10d; jumptable 0000000000004F9E cases 37,43-58,65-90,93,95,97-122", "cmp     [rsp+0D8h+var_C8], 0", "jnz     loc_4A13"], ["xor~r10d,r10d", "cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 187, 0, 0, 4, 1, 0, 5, 10, 0.0, ["lea     rax, asc_9487; \"\\\"\"", "test    r14b, r14b", "cmovz   rax, rdi", "mov     [rsp+0D8h+quote_string_0], rax"], ["lea~rax,<TAG>", "test~r14b,r14b", "cmovz~rax,rdi", "mov~[rsp+0],rax"]], [0, 0, 179, 0, 0, 2, 1, 0, 9, 11, 0.0033444816053511705, ["xor     r10d, r10d; jumptable 0000000000004F9E default case", "nop     dword ptr [rax+rax+00h]"], ["xor~r10d,r10d", "nop~[word ptr [rax+0]"]], [1, 0, 179, 0, 0, 3, 0, 1, 8, 7, 0.09038229282794501, ["movzx   ebx, byte ptr [r8]", "cmp     bl, 7Eh ; '~'; switch 127 cases", "ja      loc_4CB0; jumptable 0000000000004F9E default case"], ["movzx~ebx,<TAG>", "cmp~bl,0", "ja~FOO"]], [1, 0, 179, 1, 2, 10, 2, 3, 15, 9, 0.027545522110739504, ["mov     edi, [rsp+0D8h+w]; wc", "call    _iswprint", "mov     rdi, [rsp+0D8h+p]; ps", "test    eax, eax", "mov     eax, 0", "cmovz   ebp, eax", "add     m, bytes", "call    _mbsinit", "test    eax, eax", "jz      loc_516F"], ["mov~edi,[rsp+0]", "call~FOO", "mov~rdi,[rsp+0]", "test~eax,eax", "mov~eax,0", "cmovz~ebp,eax", "add~m,bytes", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 14, 9, 0.03425771088814567, ["cmp     [rsp+0D8h+quoting_style], 2", "jnz     short loc_520F"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 15, 8, 0.025803604607952436, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "jz      short loc_520F"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 16, 7, 0.021669453734671128, ["cmp     bytes, 1", "jz      short loc_520F"], ["cmp~bytes,0", "jz~FOO"]], [0, 0, 179, 0, 0, 2, 0, 0, 12, 10, 0.040040876997398736, ["cmp     r13, r15", "jbe     short loc_4B69"], ["cmp~r13,r15", "jbe~FOO"]], [1, 0, 179, 1, 0, 2, 0, 1, 12, 11, 0.02912486064659978, ["add     i_0, 1", "jmp     short loc_4B5B"], ["add~i_0,0", "jmp~FOO"]], [1, 0, 179, 1, 0, 3, 1, 1, 11, 9, 0.23864269788182832, ["add     i_0, 1", "test    r10b, r10b", "jz      store_c"], ["add~i_0,0", "test~r10b,r10b", "jz~FOO"]], [0, 0, 179, 0, 0, 2, 1, 1, 11, 5, 0.060400021677195596, ["test    r10b, r10b", "jnz     store_escape"], ["test~r10b,r10b", "jnz~FOO"]], [2, 0, 179, 0, 0, 3, 0, 1, 9, 7, 0.002332233989842681, ["mov     ebx, 7; jumptable 000000000000493E case 7", "mov     eax, 61h ; 'a'", "jmp     c_escape"], ["mov~ebx,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 186, 0, 0, 3, 2, 1, 3, 9, 0.021878483835005576, ["xor     r15d, r15d", "test    ebx, ebx", "jnz     short loc_4E66"], ["xor~r15d,r15d", "test~ebx,ebx", "jnz~FOO"]], [2, 0, 179, 0, 0, 4, 1, 1, 10, 6, 0.00011419236962715224, ["mov     ebx, 0Ah; jumptable 0000000000004F9E case 10", "xor     r10d, r10d", "mov     eax, 6Eh ; 'n'", "jmp     c_and_shell_escape"], ["mov~ebx,0", "xor~r10d,r10d", "mov~eax,0", "jmp~FOO"]], [2, 0, 179, 1, 0, 3, 0, 1, 11, 9, 0.017930137495354888, ["add     i_0, 1", "mov     ebx, 5Ch ; '\\'", "jmp     store_c"], ["add~i_0,0", "mov~ebx,0", "jmp~FOO"]], [0, 0, 179, 0, 0, 2, 1, 1, 11, 4, 0.007594760312151617, ["test    r11, r11", "jnz     loc_507D"], ["test~r11,r11", "jnz~FOO"]], [0, 0, 179, 0, 0, 3, 1, 1, 10, 7, 0.007339279078409513, ["movzx   r10d, [rsp+0D8h+backslash_escapes]; jumptable 0000000000004F9E case 92", "and     r10b, [rsp+0D8h+elide_outer_quotes]", "jz      short loc_50C8"], ["movzx~r10d,[rsp+0]", "and~r10b,[rsp+0]", "jz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 17, 10, 0.0, ["cmp     byte ptr [r8+m], 0", "jz      short loc_53C4"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 179, 1, 0, 4, 0, 1, 16, 10, 0.008663136380527686, ["add     m, 1", "lea     rdx, [r14+m]", "cmp     r12, rdx", "ja      short loc_53B0"], ["add~m,0", "lea~rdx,<TAG>", "cmp~r12,rdx", "ja~FOO"]], [1, 0, 179, 1, 0, 2, 0, 0, 12, 9, 0.06377740616871051, ["add     i_0, 1", "nop     word ptr [rax+rax+00h]"], ["add~i_0,0", "nop~[ord ptr [rax+0]"]], [0, 0, 179, 0, 0, 1, 0, 1, 11, 10, 0.004714790040876998, ["jmp     loc_4A3E"], ["jmp~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 9, 5, 0.06023937817416079, ["cmp     [rsp+0D8h+backslash_escapes], 0; jumptable 000000000000493E case 0", "jnz     loc_4FCB"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 185, 0, 0, 4, 1, 1, 4, 9, 0.0007432181345224824, ["mov     rdx, [rsp+0D8h+quote_string]", "movzx   eax, byte ptr [rdx]", "test    al, al", "jz      short loc_4E66"], ["mov~rdx,[rsp+0]", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 179, 0, 0, 2, 0, 0, 12, 8, 0.5005806391675957, ["cmp     r15, r13", "jnb     short loc_4A55"], ["cmp~r15,r13", "jnb~FOO"]], [1, 0, 179, 1, 0, 2, 0, 1, 13, 9, 0.039576365663322184, ["add     r15, 1", "jmp     store_c"], ["add~r15,0", "jmp~FOO"]], [1, 0, 179, 1, 0, 3, 0, 0, 15, 8, 0.1527777777777778, ["add     i_0, 1", "cmp     r14, ilim", "jnb     store_c"], ["add~i_0,0", "cmp~r14,ilim", "jnb~FOO"]], [0, 0, 184, 0, 0, 2, 0, 0, 5, 11, 0.0006270903010033445, ["mov     rcx, [rsp+0D8h+buffer]", "xchg    ax, ax"], ["mov~rcx,<TAG>", "xchg~ax,ax"]], [0, 0, 179, 0, 0, 2, 0, 0, 13, 8, 0.0, ["mov     rax, [rsp+0D8h+buffer]", "mov     [rax+r15], bl"], ["mov~rax,<TAG>", "mov~<TAG>,bl"]], [1, 0, 179, 0, 0, 3, 2, 1, 10, 8, 0.01388888888888889, ["xor     ebx, ebx", "test    byte ptr [rsp+0D8h+flags], 1", "jz      loc_4B43"], ["xor~ebx,ebx", "test~[yte ptr [rsp+0],0", "jz~FOO"]], [0, 0, 184, 0, 0, 2, 0, 0, 6, 10, 0.00469156447417317, ["cmp     buffersize, r15", "jbe     short loc_4E59"], ["cmp~buffersize,r15", "jbe~FOO"]], [1, 0, 184, 1, 0, 4, 1, 1, 7, 9, 0.0126347082868822, ["add     r15, 1", "movzx   eax, byte ptr [rdx+len]", "test    al, al", "jnz     short loc_4E50"], ["add~r15,0", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 179, 0, 0, 4, 0, 1, 7, 6, 0.10963628762541806, ["mov     byte ptr [rsp+0D8h+p], al", "lea     rax, [i_0+r11]", "cmp     rax, argsize_0", "ja      loc_4F80"], ["mov~[yte ptr [rsp+0],al", "lea~rax,<TAG>", "cmp~rax,argsize_0", "ja~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 7, 10, 0.0, ["mov     [rcx+r15], al"], ["mov~<TAG>,al"]], [2, 0, 179, 0, 0, 3, 0, 1, 9, 7, 0.002332233989842681, ["mov     ebx, 0Ch; jumptable 000000000000493E case 12", "mov     eax, 66h ; 'f'", "jmp     c_escape"], ["mov~ebx,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 179, 1, 0, 2, 0, 1, 13, 7, 0.5001161278335191, ["add     r15, 1", "jmp     loc_4890"], ["add~r15,0", "jmp~FOO"]], [1, 0, 179, 1, 0, 2, 0, 1, 11, 7, 0.012932769726247989, ["add     i_0, 1", "jmp     loc_4890"], ["add~i_0,0", "jmp~FOO"]], [0, 0, 179, 0, 0, 2, 1, 0, 10, 7, 0.000272900408769974, ["xor     r10d, r10d; jumptable 0000000000004F9E cases 32-34,36,38,40-42,59-62,91,94,96,124", "nop     dword ptr [rax+rax+00h]"], ["xor~r10d,r10d", "nop~[word ptr [rax+0]"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 5, 0.0008825715347454479, ["mov     ebx, 76h ; 'v'; jumptable 0000000000004F9E case 11", "jmp     store_escape"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 179, 0, 0, 11, 2, 0, 12, 8, 0.050887216648086216, ["mov     rcx, m", "xor     ebp, 1", "movzx   ebx, [rsp+0D8h+c]", "movzx   r10d, [rsp+0D8h+var_69]", "and     bpl, [rsp+0D8h+backslash_escapes]", "mov     r9, arg_0", "mov     bytes, [rsp+0D8h+i]", "mov     r11, [rsp+0D8h+var_78]", "mov     r13, [rsp+0D8h+var_80]", "mov     arg_0, [rsp+0D8h+var_68]", "mov     r12, [rsp+0D8h+argsize]"], ["mov~rcx,m", "xor~ebp,0", "movzx~ebx,[rsp+0]", "movzx~r10d,[rsp+0]", "and~bpl,[rsp+0]", "mov~r9,arg_0", "mov~bytes,[rsp+0]", "mov~r11,[rsp+0]", "mov~r13,[rsp+0]", "mov~arg_0,[rsp+0]", "mov~r12,[rsp+0]"]], [0, 0, 179, 1, 1, 12, 1, 2, 11, 9, 0.10305183946488294, ["mov     rax, [rsp+0D8h+i]", "mov     rdx, [rsp+0D8h+argsize]", "mov     rcx, [rsp+0D8h+p]; p", "mov     rdi, [rsp+0D8h+arg]; pwc", "lea     r12, [rax+m]", "lea     r13, [arg_0+r12]", "sub     rdx, r12; n", "mov     rsi, r13; s", "call    _mbrtowc", "test    rax, rax", "mov     r14, rax", "jz      loc_523A"], ["mov~rax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rdi,[rsp+0]", "lea~r12,<TAG>", "lea~r13,<TAG>", "sub~rdx,r12", "mov~rsi,r13", "call~FOO", "test~rax,rax", "mov~r14,rax", "jz~FOO"]], [0, 0, 179, 0, 0, 1, 0, 1, 10, 7, 0.0002167719559023907, ["jmp     short loc_4A68; jumptable 000000000000493E cases 32-34,36,38,40-42,59-62,91,94,96,124"], ["jmp~FOO"]], [0, 0, 179, 0, 0, 1, 0, 1, 12, 7, 0.0003870927783971263, ["jmp     short loc_4A68; jumptable 000000000000493E cases 32-34,36,38,40-42,59-62,91,94,96,124"], ["jmp~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 13, 7, 0.09057971014492754, ["cmp     m, 1", "ja      loc_4D11"], ["cmp~m,0", "ja~FOO"]], [0, 0, 179, 0, 0, 11, 0, 1, 13, 8, 0.0036696395392047565, ["mov     rcx, m", "mov     r9, arg_0", "mov     r14, [rsp+0D8h+i]", "mov     r11, [rsp+0D8h+var_78]", "movzx   ebx, [rsp+0D8h+c]", "movzx   r10d, [rsp+0D8h+var_69]", "mov     r13, [rsp+0D8h+var_80]", "mov     arg_0, [rsp+0D8h+var_68]", "mov     r12, [rsp+0D8h+argsize]", "movzx   ebp, [rsp+0D8h+backslash_escapes]", "jmp     loc_526C"], ["mov~rcx,m", "mov~r9,arg_0", "mov~r14,[rsp+0]", "mov~r11,[rsp+0]", "movzx~ebx,[rsp+0]", "movzx~r10d,[rsp+0]", "mov~r13,[rsp+0]", "mov~arg_0,[rsp+0]", "mov~r12,[rsp+0]", "movzx~ebp,[rsp+0]", "jmp~FOO"]], [0, 0, 179, 0, 0, 2, 0, 1, 15, 8, 0.027986807878112228, ["movzx   ebp, [rsp+0D8h+backslash_escapes]", "jmp     loc_526C"], ["movzx~ebp,[rsp+0]", "jmp~FOO"]], [2, 0, 179, 0, 0, 3, 0, 1, 9, 6, 0.0027019075932119474, ["mov     ebx, 0Dh; jumptable 000000000000493E case 13", "mov     eax, 72h ; 'r'", "jmp     c_and_shell_escape"], ["mov~ebx,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 11, 4, 0.0006967670011148272, ["jmp     loc_4BBF"], ["jmp~FOO"]], [0, 0, 179, 0, 0, 3, 0, 0, 15, 8, 0.016768859160163508, ["lea     rax, [r15+2]", "cmp     r13, len", "jbe     short loc_5320"], ["lea~rax,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [1, 0, 179, 0, 0, 2, 0, 0, 15, 9, 0.0, ["mov     rax, [rsp+0D8h+buffer]", "mov     byte ptr [rax+len], 30h ; '0'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [3, 0, 180, 0, 0, 6, 2, 0, 2, 8, 0.0020903010033444815, ["mov     [rsp+0D8h+elide_outer_quotes], 0; jumptable 0000000000004860 case 5", "mov     [rsp+0D8h+backslash_escapes], 1", "xor     r11d, r11d", "mov     [rsp+0D8h+s2], 0", "xor     r15d, r15d", "nop     dword ptr [rax+rax+00h]"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "xor~r15d,r15d", "nop~[word ptr [rax+0]"]], [0, 0, 179, 0, 0, 1, 1, 0, 10, 9, 0.00020322370865849128, ["xor     r10d, r10d; jumptable 0000000000004F9E cases 35,126"], ["xor~r10d,r10d"]], [0, 0, 179, 0, 0, 1, 1, 0, 10, 6, 0.0006909606094388704, ["xor     r10d, r10d; jumptable 0000000000004F9E case 39"], ["xor~r10d,r10d"]], [1, 0, 180, 0, 1, 9, 1, 2, 4, 8, 0.0459866220735786, ["test    ebx, ebx", "mov     rbx, [rsp+0D8h+quote_string_0]", "setnz   [rsp+0D8h+elide_outer_quotes]", "mov     rdi, rbx; s", "call    _strlen", "mov     [rsp+0D8h+s2], rbx", "mov     r11, rax", "mov     [rsp+0D8h+backslash_escapes], 1", "jmp     loc_4880"], ["test~ebx,ebx", "mov~rbx,[rsp+0]", "setnz~[rsp+0]", "mov~rdi,rbx", "call~FOO", "mov~[rsp+0],rbx", "mov~r11,rax", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 179, 0, 0, 4, 1, 0, 3, 7, 0.1164065403195838, ["mov     r9, arg_0", "xor     r14d, r14d", "mov     arg_0, argsize_0", "nop     dword ptr [rax+00000000h]"], ["mov~r9,arg_0", "xor~r14d,r14d", "mov~arg_0,argsize_0", "nop~[word ptr [rax+0]"]], [3, 0, 180, 0, 0, 6, 2, 1, 2, 8, 0.0020903010033444815, ["mov     [rsp+0D8h+elide_outer_quotes], 0; jumptable 0000000000004860 case 0", "mov     [rsp+0D8h+backslash_escapes], 0", "xor     r11d, r11d", "mov     [rsp+0D8h+s2], 0", "xor     r15d, r15d", "jmp     loc_4880"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "xor~r15d,r15d", "jmp~FOO"]], [4, 0, 180, 0, 0, 8, 1, 1, 2, 8, 0.0020903010033444815, ["lea     rax, aIterCurPtr0+15h; jumptable 0000000000004860 case 1", "mov     [rsp+0D8h+elide_outer_quotes], 1", "mov     [rsp+0D8h+backslash_escapes], 0", "mov     r11d, 1", "xor     r15d, r15d", "mov     [rsp+0D8h+quoting_style], 2", "mov     [rsp+0D8h+s2], rax", "jmp     loc_4880"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r11d,0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [4, 0, 180, 0, 0, 8, 1, 1, 2, 8, 0.0020903010033444815, ["lea     rax, asc_9487; jumptable 0000000000004860 case 4", "mov     [rsp+0D8h+elide_outer_quotes], 1", "mov     [rsp+0D8h+backslash_escapes], 1", "mov     r11d, 1", "xor     r15d, r15d", "mov     [rsp+0D8h+quoting_style], 3", "mov     [rsp+0D8h+s2], rax", "jmp     loc_4880"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r11d,0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [4, 0, 180, 0, 0, 7, 0, 1, 4, 8, 0.008361204013377926, ["lea     rax, aIterCurPtr0+15h; \"'\"", "mov     [rsp+0D8h+elide_outer_quotes], 0", "mov     [rsp+0D8h+backslash_escapes], 0", "mov     r11d, 1", "mov     r15d, 1", "mov     [rsp+0D8h+s2], rax", "jmp     loc_4880"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r11d,0", "mov~r15d,0", "mov~[rsp+0],rax", "jmp~FOO"]], [4, 0, 180, 0, 0, 7, 0, 1, 4, 8, 0.008361204013377926, ["lea     rax, asc_9487; \"\\\"\"", "mov     [rsp+0D8h+elide_outer_quotes], 0", "mov     [rsp+0D8h+backslash_escapes], 1", "mov     r11d, 1", "mov     r15d, 1", "mov     [rsp+0D8h+s2], rax", "jmp     loc_4880"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r11d,0", "mov~r15d,0", "mov~[rsp+0],rax", "jmp~FOO"]], [3, 0, 180, 0, 0, 7, 1, 1, 3, 8, 0.004180602006688963, ["lea     rax, asc_9487; \"\\\"\"", "mov     [rsp+0D8h+elide_outer_quotes], 1", "mov     [rsp+0D8h+backslash_escapes], 1", "mov     r11d, 1", "xor     r15d, r15d", "mov     [rsp+0D8h+s2], rax", "jmp     loc_4880"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r11d,0", "xor~r15d,r15d", "mov~[rsp+0],rax", "jmp~FOO"]], [2, 0, 179, 0, 0, 3, 0, 1, 9, 7, 0.002332233989842681, ["mov     ebx, 0Bh; jumptable 000000000000493E case 11", "mov     eax, 76h ; 'v'", "jmp     c_escape"], ["mov~ebx,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 12, 5, 0.0, ["mov     [rsi+len], cl"], ["mov~<TAG>,cl"]], [0, 0, 9, 0, 0, 2, 0, 0, 11, 5, 0.013726309921962096, ["cmp     r13, len", "jbe     short loc_52C8"], ["cmp~r13,len", "jbe~FOO"]], [0, 0, 179, 0, 0, 1, 1, 0, 10, 10, 0.0003483835005574136, ["xor     r10d, r10d; jumptable 0000000000004F9E cases 123,125"], ["xor~r10d,r10d"]], [1, 0, 15, 0, 0, 6, 1, 1, 6, 4, 0.05241623312275487, ["cmp     [rsp+0D8h+quoting_style], 2", "mov     rbp, argsize_0", "mov     argsize_0, arg_0", "setz    al", "test    [rsp+0D8h+elide_outer_quotes], al", "jz      short loc_529D"], ["cmp~[rsp+0],0", "mov~rbp,argsize_0", "mov~argsize_0,arg_0", "setz~al", "test~[rsp+0],al", "jz~FOO"]], [0, 0, 179, 0, 0, 2, 1, 1, 5, 5, 0.6370501981915027, ["test    bpl, bpl", "jz      loc_5280"], ["test~bpl,bpl", "jz~FOO"]], [0, 0, 14, 0, 0, 2, 1, 1, 7, 3, 0.0026380372847764153, ["test    r15, r15", "jz      force_outer_quoting_style"], ["test~r15,r15", "jz~FOO"]], [2, 0, 179, 0, 0, 3, 0, 1, 9, 6, 0.0027019075932119474, ["mov     ebx, 0Ah; jumptable 000000000000493E case 10", "mov     eax, 6Eh ; 'n'", "jmp     c_and_shell_escape"], ["mov~ebx,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 179, 0, 0, 4, 0, 1, 4, 6, 0.6375147095255792, ["cmp     argsize_0, i_0", "setnz   bpl", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_48A6"], ["cmp~argsize_0,i_0", "setnz~bpl", "cmp~argsize_0,0", "jnz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 0, 16, 8, 0.0, ["mov     len, [rsp+0D8h+buffer]", "mov     byte ptr [rax+r15+2], 30h ; '0'"], ["mov~len,<TAG>", "mov~[yte ptr [rax+0],0"]], [2, 0, 179, 0, 0, 4, 0, 1, 9, 9, 0.02125139353400223, ["cmp     argsize_0, 1; jumptable 000000000000493E cases 123,125", "setnz   al", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_4AA8"], ["cmp~argsize_0,0", "setnz~al", "cmp~argsize_0,0", "jnz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 0, 5, 6, 0.0, ["cmp     byte ptr [arg_0+i_0], 0", "setnz   bpl"], ["cmp~<TAG>,0", "setnz~bpl"]], [1, 0, 179, 0, 0, 2, 0, 0, 10, 9, 0.0, ["cmp     byte ptr [arg_0+1], 0", "setnz   al"], ["cmp~[yte ptr [arg_0+0],0", "setnz~al"]], [0, 0, 179, 0, 0, 1, 0, 0, 17, 9, 0.008175399479747306, ["mov     rcx, m"], ["mov~rcx,m"]], [0, 0, 179, 0, 0, 2, 1, 1, 9, 8, 0.004343180973615756, ["xor     r10d, r10d", "jmp     loc_4920"], ["xor~r10d,r10d", "jmp~FOO"]], [0, 0, 179, 0, 1, 12, 1, 2, 8, 5, 0.0146553325901152, ["mov     rsi, [rsp+0D8h+s2]; s2", "mov     rdx, r11; n", "mov     rdi, r8; s1", "mov     [rsp+0D8h+arg], arg_0", "mov     [rsp+0D8h+i], r11", "mov     [rsp+0D8h+argsize], r8", "call    _memcmp", "test    eax, eax", "mov     r8, [rsp+0D8h+argsize]", "mov     r11, [rsp+0D8h+i]", "mov     r9, [rsp+0D8h+arg]", "jnz     loc_50A8"], ["mov~rsi,[rsp+0]", "mov~rdx,r11", "mov~rdi,r8", "mov~[rsp+0],arg_0", "mov~[rsp+0],r11", "mov~[rsp+0],r8", "call~FOO", "test~eax,eax", "mov~r8,[rsp+0]", "mov~r11,[rsp+0]", "mov~r9,[rsp+0]", "jnz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 8, 3, 0.026755852842809364, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "jnz     short loc_52D7"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 12, 0, 0, 3, 1, 1, 7, 3, 0.04150989409141583, ["mov     rax, [rsp+0D8h+s2]", "test    rax, rax", "jz      short loc_52D7"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 4, 0.006077356620834881, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "jnz     loc_4BBF"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 179, 0, 0, 3, 0, 1, 9, 5, 0.07907531277096494, ["mov     eax, [rsp+0D8h+quoting_style]; jumptable 000000000000493E case 63", "cmp     eax, 2", "jz      loc_50B0"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 8, 10, 0.17934782608695654, ["cmp     [rsp+0D8h+var_90], 1; jumptable 000000000000493E default case", "jnz     loc_50E0"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 179, 0, 0, 3, 0, 1, 7, 7, 0.4823834076551468, ["movzx   ebx, byte ptr [r8]", "cmp     bl, 7Eh ; '~'; switch 127 cases", "ja      loc_4CB8; jumptable 000000000000493E default case"], ["movzx~ebx,<TAG>", "cmp~bl,0", "ja~FOO"]], [0, 0, 9, 1, 0, 4, 0, 0, 10, 6, 0.018023039762170196, ["mov     rsi, [rsp+0D8h+buffer]", "mov     rdx, r15", "sub     rax, r15", "nop"], ["mov~rsi,<TAG>", "mov~rdx,r15", "sub~rax,r15", "nop"]], [0, 0, 10, 0, 0, 3, 1, 1, 9, 3, 0.022412671869193608, ["movzx   ecx, byte ptr [rax]", "test    cl, cl", "jz      short loc_52D7"], ["movzx~ecx,<TAG>", "test~cl,cl", "jz~FOO"]], [0, 0, 179, 0, 0, 6, 2, 1, 6, 7, 0.580012077294686, ["test    r11, r11", "lea     r8, [arg_0+i_0]", "setnz   al", "and     al, [rsp+0D8h+backslash_escapes]", "mov     r10d, eax", "jz      short loc_4920"], ["test~r11,r11", "lea~r8,<TAG>", "setnz~al", "and~al,[rsp+0]", "mov~r10d,eax", "jz~FOO"]], [1, 0, 9, 1, 0, 4, 1, 1, 12, 4, 0.004947045707915273, ["add     len, 1", "movzx   ecx, byte ptr [rax+len]", "test    cl, cl", "jnz     short loc_52C0"], ["add~len,0", "movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [2, 0, 179, 0, 0, 3, 0, 1, 10, 6, 0.0011612783351913787, ["mov     ebx, 5Ch ; '\\'", "mov     eax, 5Ch ; '\\'", "jmp     c_and_shell_escape"], ["mov~ebx,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 9, 6, 0.01302954292084727, ["cmp     [rsp+0D8h+backslash_escapes], 0; jumptable 000000000000493E case 92", "jz      loc_50C8"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 5, 0.008198625046451134, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "jz      loc_50C8"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 13, 3, 0.0004645113340765515, ["mov     r15, len"], ["mov~r15,len"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 4, 0.03030162269292704, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "jnz     loc_4BBF"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 5, 0.0008825715347454479, ["mov     ebx, 61h ; 'a'; jumptable 0000000000004F9E case 7", "jmp     store_escape"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 179, 0, 0, 2, 0, 0, 11, 11, 0.0295661464139725, ["cmp     r15, r13", "jnb     short loc_4AEC"], ["cmp~r15,r13", "jnb~FOO"]], [1, 0, 179, 0, 0, 2, 0, 0, 12, 11, 0.0, ["mov     rax, [rsp+0D8h+buffer]", "mov     byte ptr [rax+r15], 27h ; '''"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [0, 0, 179, 0, 0, 3, 0, 0, 12, 10, 0.02910163507989595, ["lea     rax, [r15+1]", "cmp     r13, len", "jbe     short loc_4AFF"], ["lea~rax,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [1, 0, 179, 0, 0, 2, 0, 0, 13, 10, 0.0, ["mov     len, [rsp+0D8h+buffer]", "mov     byte ptr [rax+r15+1], 5Ch ; '\\'"], ["mov~len,<TAG>", "mov~[yte ptr [rax+0],0"]], [2, 0, 179, 0, 0, 5, 0, 1, 9, 11, 0.10100798959494613, ["lea     rax, [rsp+0D8h+mbstate]", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "mov     qword ptr [rsp+0D8h+mbstate.__count], 0", "mov     [rsp+0D8h+p], rax", "jnz     short loc_5133"], ["lea~rax,[rsp+0]", "cmp~argsize_0,0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],rax", "jnz~FOO"]], [0, 0, 4, 0, 0, 4, 0, 1, 20, 3, 0.0006967670011148272, ["mov     r13, [rsp+0D8h+var_80]", "mov     r12, arg_0", "mov     printable, [rsp+0D8h+argsize]", "jmp     force_outer_quoting_style"], ["mov~r13,[rsp+0]", "mov~r12,arg_0", "mov~printable,[rsp+0]", "jmp~FOO"]], [0, 0, 179, 0, 0, 3, 0, 0, 13, 9, 0.0286371237458194, ["lea     rax, [r15+2]", "cmp     r13, len", "jbe     short loc_4B12"], ["lea~rax,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [0, 0, 179, 0, 0, 4, 0, 0, 17, 6, 0.017512077294685992, ["lea     rcx, [arg_0+r14]", "lea     bytes, [arg_0+r12+1]", "lea     r8, [rcx+r12]", "nop     word ptr [rax+rax+00000000h]"], ["lea~rcx,<TAG>", "lea~bytes,[arg_0+0]", "lea~r8,<TAG>", "nop~[ord ptr [rax+0]"]], [1, 0, 179, 0, 0, 2, 0, 0, 14, 9, 0.0, ["mov     len, [rsp+0D8h+buffer]", "mov     byte ptr [rax+r15+2], 27h ; '''"], ["mov~len,<TAG>", "mov~[yte ptr [rax+0],0"]], [0, 0, 182, 0, 0, 2, 1, 1, 3, 9, 0.00013935340022296544, ["test    buffersize, buffersize", "jz      short loc_4F16"], ["test~buffersize,buffersize", "jz~FOO"]], [1, 0, 181, 0, 0, 2, 0, 0, 4, 9, 0.0, ["mov     rax, [rsp+0D8h+buffer]", "mov     byte ptr [rax], 27h ; '''"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [1, 0, 179, 0, 0, 3, 0, 1, 9, 4, 0.005713489409141583, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "movzx   r10d, byte ptr [rsp+0D8h+p]", "jnz     loc_4BBF"], ["cmp~[rsp+0],0", "movzx~r10d,[yte ptr [rsp+0]", "jnz~FOO"]], [0, 0, 179, 0, 0, 2, 0, 0, 11, 9, 0.04591694537346711, ["cmp     r15, r13", "jnb     short loc_4FE4"], ["cmp~r15,r13", "jnb~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 4, 0.046698872785829314, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "jnz     loc_4BBF"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 179, 0, 0, 1, 0, 0, 10, 8, 0.003994797473058343, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 179, 1, 0, 5, 0, 1, 12, 6, 0.14393657871918744, ["mov     rdx, rcx", "movzx   esi, [rsp+0D8h+elide_outer_quotes]", "mov     rcx, [rsp+0D8h+buffer]", "add     rdx, r14", "jmp     short loc_4D93"], ["mov~rdx,rcx", "movzx~esi,[rsp+0]", "mov~rcx,<TAG>", "add~rdx,r14", "jmp~FOO"]], [0, 0, 179, 0, 0, 1, 0, 0, 11, 7, 0.06162517032082249, ["movzx   ebp, [rsp+0D8h+backslash_escapes]"], ["movzx~ebp,[rsp+0]"]], [2, 0, 179, 0, 0, 2, 0, 0, 9, 6, 0.0027019075932119474, ["mov     ebx, 9; jumptable 000000000000493E case 9", "mov     eax, 74h ; 't'"], ["mov~ebx,0", "mov~eax,0"]], [0, 0, 179, 0, 0, 2, 1, 1, 14, 4, 0.034288678310417445, ["test    sil, sil", "jnz     loc_4BBF"], ["test~sil,sil", "jnz~FOO"]], [0, 0, 179, 0, 0, 2, 1, 1, 13, 5, 0.16028737767868204, ["test    bpl, bpl", "jnz     short loc_4D28"], ["test~bpl,bpl", "jnz~FOO"]], [0, 0, 179, 0, 1, 11, 0, 1, 10, 11, 0.0, ["mov     rdi, arg_0; s", "mov     [rsp+0D8h+var_80], r11", "mov     byte ptr [rsp+0D8h+arg], r10b", "mov     [rsp+0D8h+i], r8", "mov     [rsp+0D8h+argsize], arg_0", "call    _strlen", "movzx   r10d, byte ptr [rsp+0D8h+arg]", "mov     r11, [rsp+0D8h+var_80]", "mov     argsize_0, rax", "mov     r8, [rsp+0D8h+i]", "mov     r9, [rsp+0D8h+argsize]"], ["mov~rdi,arg_0", "mov~[rsp+0],r11", "mov~[yte ptr [rsp+0],r10b", "mov~[rsp+0],r8", "mov~[rsp+0],arg_0", "call~FOO", "movzx~r10d,[yte ptr [rsp+0]", "mov~r11,[rsp+0]", "mov~argsize_0,rax", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 5, 0.03418222779635823, ["cmp     [rsp+0D8h+quoting_style], 2", "jnz     short c_escape"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 179, 0, 0, 4, 1, 1, 10, 6, 0.00011419236962715224, ["mov     ebx, 9; jumptable 0000000000004F9E case 9", "xor     r10d, r10d", "mov     eax, 74h ; 't'", "jmp     c_and_shell_escape"], ["mov~ebx,0", "xor~r10d,r10d", "mov~eax,0", "jmp~FOO"]], [2, 0, 179, 0, 0, 4, 1, 1, 10, 6, 0.00011419236962715224, ["mov     ebx, 0Dh; jumptable 0000000000004F9E case 13", "xor     r10d, r10d", "mov     eax, 72h ; 'r'", "jmp     c_and_shell_escape"], ["mov~ebx,0", "xor~r10d,r10d", "mov~eax,0", "jmp~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 13, 10, 0.06823671497584541, ["cmp     bytes, 0FFFFFFFFFFFFFFFEh", "jz      loc_5362"], ["cmp~bytes,0", "jz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 12, 9, 0.07650501672240803, ["cmp     bytes, 0FFFFFFFFFFFFFFFFh", "jz      loc_532E"], ["cmp~bytes,0", "jz~FOO"]], [0, 0, 179, 0, 0, 2, 0, 0, 15, 12, 0.0295661464139725, ["cmp     r15, r13", "jnb     short loc_4D3B"], ["cmp~r15,r13", "jnb~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 11, 4, 0.0010451505016722408, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "jnz     loc_4BBF"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 0, 12, 9, 0.0, ["mov     rax, [rsp+0D8h+buffer]", "mov     byte ptr [rax+r15], 5Ch ; '\\'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [0, 0, 184, 0, 0, 2, 1, 1, 2, 9, 0.0001858045336306206, ["test    ebx, ebx; jumptable 0000000000004860 case 3", "jnz     loc_53D1"], ["test~ebx,ebx", "jnz~FOO"]], [0, 0, 179, 0, 0, 1, 1, 0, 10, 6, 0.0013238573021181717, ["xor     r10d, r10d; jumptable 0000000000004F9E case 63"], ["xor~r10d,r10d"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 6, 0.05195559271646228, ["cmp     [rsp+0D8h+backslash_escapes], 0", "jnz     short loc_4B90"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 179, 0, 0, 3, 0, 0, 16, 11, 0.02910163507989595, ["lea     rax, [r15+1]", "cmp     r13, len", "jbe     short loc_4D51"], ["lea~rax,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [1, 0, 179, 0, 0, 1, 0, 0, 16, 12, 0.0, ["mov     byte ptr [rcx+r15], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [3, 0, 179, 0, 0, 4, 0, 1, 9, 7, 0.01089279078409513, ["cmp     [rsp+0D8h+backslash_escapes], 0; jumptable 000000000000493E case 8", "mov     ebx, 8", "mov     eax, 62h ; 'b'", "jz      short loc_4B43"], ["cmp~[rsp+0],0", "mov~ebx,0", "mov~eax,0", "jz~FOO"]], [2, 0, 179, 1, 0, 4, 0, 0, 17, 11, 0.0, ["mov     eax, ebx", "shr     al, 6", "add     eax, 30h ; '0'", "mov     [rcx+r15+1], al"], ["mov~eax,ebx", "shr~al,0", "add~eax,0", "mov~[rcx+0],al"]], [1, 0, 181, 0, 0, 2, 0, 0, 4, 9, 0.0, ["mov     rax, [rsp+0D8h+buffer]", "mov     byte ptr [rax], 22h ; '\"'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [0, 0, 182, 0, 0, 2, 1, 1, 3, 9, 0.00013935340022296544, ["test    buffersize, buffersize", "jz      short loc_4F51"], ["test~buffersize,buffersize", "jz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 9, 0.06839929394277221, ["cmp     eax, 3", "jnz     loc_50BB"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 179, 0, 0, 2, 1, 1, 11, 9, 0.05869100706057228, ["test    byte ptr [rsp+0D8h+flags], 4", "jz      loc_50BB"], ["test~[yte ptr [rsp+0],0", "jz~FOO"]], [1, 0, 179, 0, 0, 3, 0, 1, 14, 6, 0.04672209835253313, ["movzx   ebx, byte ptr [arg_0+rax]", "cmp     bl, 3Eh ; '>'", "ja      loc_50BB"], ["movzx~ebx,<TAG>", "cmp~bl,0", "ja~FOO"]], [1, 0, 179, 0, 0, 3, 0, 0, 15, 5, 0.04268084974606714, ["mov     rsi, 7000A38200000000h", "bt      rsi, rbx", "jnb     loc_50BB"], ["mov~rsi,0", "bt~rsi,rbx", "jnb~FOO"]], [0, 0, 179, 0, 0, 3, 0, 0, 17, 10, 0.0286371237458194, ["lea     rax, [r15+2]", "cmp     r13, len", "jbe     short loc_4D6A"], ["lea~rax,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 15, 10, 0.017279821627647716, ["cmp     byte ptr [rdi], 0", "jnz     short loc_53B7"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 0, 13, 10, 0.0, ["mov     rax, [rsp+0D8h+buffer]", "mov     byte ptr [rax+r15], 5Ch ; '\\'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [3, 0, 179, 1, 0, 5, 1, 0, 18, 10, 0.0, ["mov     eax, ebx", "shr     al, 3", "and     eax, 7", "add     eax, 30h ; '0'", "mov     [rcx+r15+2], al"], ["mov~eax,ebx", "shr~al,0", "and~eax,0", "add~eax,0", "mov~[rcx+0],al"]], [0, 0, 179, 0, 0, 13, 1, 0, 10, 10, 0.10054347826086957, ["lea     rax, [rsp+0D8h+w]", "xor     esi, esi", "mov     [rsp+0D8h+c], bl", "mov     [rsp+0D8h+var_68], r15", "mov     [rsp+0D8h+i], i_0", "mov     c_0, rsi", "mov     [rsp+0D8h+arg], rax", "mov     [rsp+0D8h+var_78], r11", "mov     r15, arg_0", "mov     [rsp+0D8h+var_60], r8", "mov     [rsp+0D8h+var_69], r10b", "mov     [rsp+0D8h+var_80], r13", "mov     [rsp+0D8h+argsize], r12"], ["lea~rax,[rsp+0]", "xor~esi,esi", "mov~[rsp+0],bl", "mov~[rsp+0],r15", "mov~[rsp+0],i_0", "mov~c_0,rsi", "mov~[rsp+0],rax", "mov~[rsp+0],r11", "mov~r15,arg_0", "mov~[rsp+0],r8", "mov~[rsp+0],r10b", "mov~[rsp+0],r13", "mov~[rsp+0],r12"]], [3, 0, 179, 2, 0, 3, 1, 0, 18, 9, 0.028172612411742848, ["and     ebx, 7", "add     r15, 3", "add     ebx, 30h ; '0'"], ["and~ebx,0", "add~r15,0", "add~ebx,0"]], [0, 0, 179, 0, 0, 2, 1, 1, 14, 9, 0.12140003716090673, ["test    r10b, r10b", "jz      short loc_4D74"], ["test~r10b,r10b", "jz~FOO"]], [1, 0, 179, 1, 0, 3, 1, 1, 16, 9, 0.008198625046451134, ["add     r15, 1", "xor     r10d, r10d", "jmp     short loc_4D74"], ["add~r15,0", "xor~r10d,r10d", "jmp~FOO"]], [0, 0, 179, 0, 0, 2, 0, 0, 16, 7, 0.012913415087328132, ["cmp     r15, r13", "jnb     short loc_4D8A"], ["cmp~r15,r13", "jnb~FOO"]], [0, 0, 179, 0, 0, 1, 0, 0, 17, 7, 0.0, ["mov     [rcx+r15], bl"], ["mov~<TAG>,bl"]], [0, 0, 179, 0, 0, 1, 0, 0, 10, 6, 0.0012019230769230768, ["nop     dword ptr [esc+00000000h]"], ["nop~[word ptr [esc+0]"]], [1, 0, 179, 1, 0, 2, 0, 0, 17, 6, 0.01244890375325158, ["movzx   ebx, byte ptr [arg_0+r14]", "add     r15, 1"], ["movzx~ebx,<TAG>", "add~r15,0"]], [0, 0, 179, 0, 0, 1, 0, 0, 11, 5, 0.005667038275733928, ["mov     ebx, eax"], ["mov~ebx,eax"]], [1, 0, 179, 0, 0, 2, 0, 1, 11, 4, 0.03621252941905116, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "jnz     short loc_4BBF"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 10, 5, 0.0008825715347454479, ["mov     ebx, 66h ; 'f'; jumptable 0000000000004F9E case 12", "jmp     store_escape"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 179, 0, 0, 2, 0, 0, 15, 10, 0.008663136380527686, ["cmp     r15, r13", "jnb     short loc_4DA7"], ["cmp~r15,r13", "jnb~FOO"]], [1, 0, 179, 0, 0, 1, 0, 0, 16, 10, 0.0, ["mov     byte ptr [rcx+r15], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 0, 179, 0, 0, 1, 0, 1, 16, 9, 0.004041248606465998, ["jmp     short loc_53C7"], ["jmp~FOO"]], [1, 0, 179, 0, 0, 2, 0, 1, 16, 4, 0.03866282670630496, ["cmp     [rsp+0D8h+elide_outer_quotes], 0", "jnz     loc_4BBF"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 179, 0, 0, 15, 0, 0, 14, 9, 0.02938034188034188, ["mov     rsi, r12", "mov     r12, [rsp+0D8h+argsize]", "mov     rdi, r13", "mov     bytes, m", "mov     rcx, rbx", "mov     r9, arg_0", "mov     bytes, [rsp+0D8h+i]", "mov     r11, [rsp+0D8h+var_78]", "cmp     rsi, r12", "movzx   ebx, [rsp+0D8h+c]", "mov     r8, [rsp+0D8h+var_60]", "movzx   r10d, [rsp+0D8h+var_69]", "mov     r13, [rsp+0D8h+var_80]", "mov     arg_0, [rsp+0D8h+var_68]", "jnb     short loc_53C7"], ["mov~rsi,r12", "mov~r12,[rsp+0]", "mov~rdi,r13", "mov~bytes,m", "mov~rcx,rbx", "mov~r9,arg_0", "mov~bytes,[rsp+0]", "mov~r11,[rsp+0]", "cmp~rsi,r12", "movzx~ebx,[rsp+0]", "mov~r8,[rsp+0]", "movzx~r10d,[rsp+0]", "mov~r13,[rsp+0]", "mov~arg_0,[rsp+0]", "jnb~FOO"]], [0, 0, 179, 0, 0, 2, 0, 0, 17, 12, 0.0379041248606466, ["cmp     r15, r13", "jnb     short loc_49BD"], ["cmp~r15,r13", "jnb~FOO"]], [1, 0, 179, 0, 0, 2, 0, 0, 18, 12, 0.0, ["mov     rsi, [rsp+0D8h+buffer]", "mov     byte ptr [rsi+r15], 3Fh ; '?'"], ["mov~rsi,<TAG>", "mov~<TAG>,0"]], [0, 0, 4, 0, 0, 2, 0, 0, 10, 3, 0.01282438374829679, ["mov     rbp, argsize_0", "mov     argsize_0, arg_0"], ["mov~rbp,argsize_0", "mov~argsize_0,arg_0"]], [0, 0, 179, 0, 0, 3, 0, 0, 18, 11, 0.03743961352657005, ["lea     rdx, [r15+1]", "cmp     r13, len", "jbe     short loc_49D0"], ["lea~rdx,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [0, 0, 179, 0, 0, 1, 1, 0, 10, 5, 0.0008128948346339651, ["xor     r10d, r10d; jumptable 0000000000004F9E case 0"], ["xor~r10d,r10d"]], [1, 0, 179, 0, 0, 2, 0, 0, 19, 11, 0.0, ["mov     rsi, [rsp+0D8h+buffer]", "mov     byte ptr [rsi+r15+1], 22h ; '\"'"], ["mov~rsi,<TAG>", "mov~[yte ptr [rsi+0],0"]], [0, 0, 179, 0, 0, 3, 0, 0, 19, 10, 0.036975102192493496, ["lea     len, [r15+2]", "cmp     r13, len", "jbe     short loc_49E3"], ["lea~len,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [1, 0, 179, 0, 0, 2, 0, 0, 20, 10, 0.0, ["mov     rsi, [rsp+0D8h+buffer]", "mov     byte ptr [rsi+r15+2], 22h ; '\"'"], ["mov~rsi,<TAG>", "mov~[yte ptr [rsi+0],0"]], [0, 0, 179, 0, 0, 3, 0, 0, 20, 9, 0.036510590858416944, ["lea     len, [r15+3]", "cmp     r13, len", "jbe     short loc_49F6"], ["lea~len,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [1, 0, 179, 0, 0, 2, 0, 0, 21, 9, 0.0, ["mov     rsi, [rsp+0D8h+buffer]", "mov     byte ptr [rsi+r15+3], 3Fh ; '?'"], ["mov~rsi,<TAG>", "mov~[yte ptr [rsi+0],0"]]], "func_feature": [13, 75, 139, 7, 209, 348, 6, 715, 0.04269, 7, 35], "succs": [[19, 142], [0, 19], [20, 21], [2, 171, 132, 6, 8, 105, 11, 66, 78, 112, 115, 90, 56, 154, 124, 125], [2, 5], [177, 2], [2, 7], [2, 91], [2, 85], [2, 10], [2, 86], [2, 135], [2], [153, 2], [2], [2], [20], [16, 18], [16, 27], [48, 1], [43, 55], [20, 54], [20], [34, 42], [25, 23], [23], [23], [92, 93], [98], [146, 28], [192], [96, 193, 167, 136, 44, 203, 108, 46, 81, 82, 160, 58, 159, 61, 30, 95], [], [32, 36], [], [57, 38], [35, 100, 101, 166, 99, 29, 94], [57, 45], [37, 39], [37], [13], [13], [], [192, 55], [65, 43], [57], [125], [46, 31], [83, 84], [48, 50], [48, 51], [48, 144], [181, 69], [52], [68, 52], [64, 192], [168], [97, 67], [158], [68], [201, 59], [59, 131], [118, 63], [118, 62], [68], [64], [73, 150], [97, 71], [72, 79], [68], [187, 68], [74], [79], [80, 21], [75, 77], [97, 74], [120, 47], [75], [168], [113], [113], [6], [192], [87], [162, 83], [6], [6], [40, 152], [87], [87], [158], [201], [114, 22], [92], [98], [8], [11], [98], [113], [98], [98], [98], [98], [98], [98], [168], [130], [106, 130], [115], [122, 111], [129, 109], [122, 26], [158], [116, 110], [22], [9, 117], [110], [9], [89], [126], [148, 119], [24, 128], [24, 121], [201, 14], [123, 175], [41, 141], [3, 125], [107], [24, 127], [76, 126], [107, 134], [158], [131, 133], [131, 60], [24], [137, 201], [192], [138, 139], [139], [140, 143], [143], [157, 183], [26], [145, 12], [1], [12], [147, 102], [102], [201, 151], [17, 165], [201, 149], [126], [156], [152], [158], [201, 163], [185, 155], [183], [168, 164], [158], [158], [49, 198], [88, 161], [169, 170], [168, 201], [17], [104, 174], [124], [21, 191], [179, 172], [169], [21, 189], [179], [103], [173, 103], [176, 14], [4, 14], [178, 14], [197, 14], [184, 182], [196, 63], [69], [184], [84], [70], [194, 70], [70], [188, 190], [190], [191], [156], [192], [201, 53], [192], [186, 195], [186], [89], [201, 199], [89, 180], [200, 202], [202], [26], [204, 205], [150], [205], [206, 207], [207], [208, 15], [15]], "fname": "quotearg_buffer_restyled", "n_num": 209}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[3, 1, 4, 4, 1, 24, 1, 2, 0, 0, 0.21818181818181817, ["mov     eax, [options+4]", "shl     n0, 4", "sub     rsp, 8", "add     sv, r15", "lea     r15, [options+8]", "mov     r8d, [options+0]; quoting_style", "mov     r11, [rbx]", "mov     r12, [rbx+8]", "mov     rcx, argsize; argsize", "or      eax, 1", "mov     [rsp+60h+flags], eax", "push    qword ptr [options+30h]; right_quote", "mov     r9d, eax; flags", "push    qword ptr [options+28h]; left_quote", "push    r15; quote_these_too", "mov     rsi, size_0; buffersize", "mov     rdx, [rsp+78h+arg]; arg", "mov     rdi, val; buffer", "mov     [rsp+78h+size], size_0", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+58h+size]", "cmp     r11, qsize", "ja      short loc_558B"], ["mov~eax,[options+0]", "shl~n0,0", "sub~rsp,0", "add~sv,r15", "lea~r15,[options+0]", "mov~r8d,[options+0]", "mov~r11,<TAG>", "mov~r12,[rbx+0]", "mov~rcx,argsize", "or~eax,0", "mov~[rsp+0],eax", "push~[word ptr [options+0]", "mov~r9d,eax", "push~[word ptr [options+0]", "push~r15", "mov~rsi,size_0", "mov~rdx,[rsp+0]", "mov~rdi,val", "mov~[rsp+0],size_0", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,qsize", "ja~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 1, -1, 0.08181818181818182, ["cmp     cs:nslots, r15d", "ja      short loc_54CF"], ["cmp~<TAG>,r15d", "ja~FOO"]], [2, 0, 5, 4, 1, 8, 1, 1, 4, -1, 0.13636363636363635, ["mov     edi, cs:nslots", "xor     esi, esi; c", "sub     rdx, rdi", "shl     rdi, 4", "shl     rdx, 4; n", "add     rdi, rbx; s", "call    _memset", "mov     cs:nslots, r12d"], ["mov~edi,<TAG>", "xor~esi,esi", "sub~rdx,rdi", "shl~rdi,0", "shl~rdx,0", "add~rdi,rbx", "call~FOO", "mov~<TAG>,r12d"]], [0, 1, 11, 1, 1, 18, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "movsxd  r15, edi", "push    r13", "push    r12", "mov     r14, argsize", "push    rbp", "push    rbx", "mov     rbp, options", "sub     rsp, 28h", "mov     [rsp+58h+arg], arg_0", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "test    r15d, r15d", "mov     rbx, cs:slotvec_0", "mov     [rsp+58h+e], eax", "js      loc_55D3"], ["push~r15", "push~r14", "movsxd~r15,edi", "push~r13", "push~r12", "mov~r14,argsize", "push~rbp", "push~rbx", "mov~rbp,options", "sub~rsp,<STR>", "mov~[rsp+0],arg_0", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "test~r15d,r15d", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [0, 0, 6, 0, 1, 6, 0, 1, 3, -1, 0.03636363636363636, ["mov     rdi, sv; p", "mov     [rsp+58h+size], n1", "call    xrealloc", "mov     rdx, [rsp+58h+size]", "mov     sv, rax", "mov     cs:slotvec_0, sv"], ["mov~rdi,sv", "mov~[rsp+0],n1", "call~FOO", "mov~rdx,[rsp+0]", "mov~sv,rax", "mov~<TAG>,sv"]], [1, 0, 8, 1, 0, 7, 0, 1, 2, -1, 0.05454545454545454, ["lea     edx, [n0+1]", "lea     e_0, slotvec0", "mov     rsi, rdx", "mov     r12, rdx", "shl     rsi, 4; n", "cmp     sv, rax", "jz      loc_55A8"], ["lea~edx,[n0+0]", "lea~e_0,<TAG>", "mov~rsi,rdx", "mov~r12,rdx", "shl~rsi,0", "cmp~sv,rax", "jz~FOO"]], [1, 1, 1, 2, 2, 17, 0, 2, 4, -1, 0.01818181818181818, ["mov     rdi, rsi; n", "mov     [rsp+58h+size], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, [options+0]; quoting_style", "push    qword ptr [options+30h]; right_quote", "push    qword ptr [options+28h]; left_quote", "mov     rcx, argsize; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+78h+flags]; flags", "mov     rdi, rax; buffer", "mov     rdx, [rsp+78h+arg]; arg", "mov     rsi, [rsp+78h+size]; buffersize", "mov     val, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,[options+0]", "push~[word ptr [options+0]", "push~[word ptr [options+0]", "mov~rcx,argsize", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~val,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.12727272727272726, ["lea     rsi, [qsize+1]", "lea     qsize, slot0", "cmp     val, rax", "mov     [rbx], size_0", "jz      short loc_5549"], ["lea~rsi,[qsize+0]", "lea~qsize,<TAG>", "cmp~val,rax", "mov~<TAG>,size_0", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, -1, 0.0, ["mov     rdi, val; ptr", "mov     [rsp+58h+size], size_0", "call    _free", "mov     rsi, [rsp+58h+size]"], ["mov~rdi,val", "mov~[rsp+0],size_0", "call~FOO", "mov~rsi,[rsp+0]"]], [0, 0, 6, 0, 1, 9, 1, 2, 3, -1, 0.03636363636363636, ["xor     edi, edi; p", "mov     [rsp+58h+size], n1", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     sv, rax", "mov     cs:slotvec_0, sv", "mov     rdx, [rsp+58h+size]", "movups  xmmword ptr [sv], xmm0", "jmp     loc_54AD"], ["xor~edi,edi", "mov~[rsp+0],n1", "call~FOO", "movdqa~xmm0,<TAG>", "mov~sv,rax", "mov~<TAG>,sv", "mov~rdx,[rsp+0]", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 1, 0, 1, 0, 11, 0, 0, 3, -1, 0.0, ["mov     eax, [rsp+58h+e]", "mov     [r13+0], eax", "add     rsp, 28h", "mov     rax, val", "pop     rbx", "pop     options", "pop     val", "pop     r13", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~[r13+0],eax", "add~rsp,<STR>", "mov~rax,val", "pop~rbx", "pop~options", "pop~val", "pop~r13", "pop~argsize", "pop~r15", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [9, 4, 15, 0, 12, 15, 8, 112, 0.05909, 4, 13], "succs": [[10, 7], [0, 5], [0], [1, 11], [2], [9, 4], [10], [8, 6], [6], [2], [], []], "fname": "quotearg_n_options", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[1, 0, 0, 0, 2, 18, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, o", "call    ___errno_location", "mov     r12d, [p]", "mov     rbp, p", "lea     p, default_quoting_options", "test    o, o", "mov     esi, 38h ; '8'; s", "cmovz   o, p", "mov     rdi, rbx; p", "call    xmemdup", "mov     [rbp+0], r12d", "pop     rbx", "pop     rbp", "pop     e", "retn"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,o", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,p", "lea~p,<TAG>", "test~o,o", "mov~esi,0", "cmovz~o,p", "mov~rdi,rbx", "call~FOO", "mov~[rbp+0],r12d", "pop~rbx", "pop~rbp", "pop~e", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 18, 0.0, 1, 0], "succs": [[]], "fname": "clone_quoting_options", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     eax, [rdi]", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~eax,<TAG>", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "get_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     [rdi], esi", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~<TAG>,esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[4, 0, 0, 1, 0, 19, 6, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    p, p", "mov     ecx, esi", "cmovz   p, rax", "mov     eax, esi", "and     ecx, 1Fh", "shr     al, 5", "movzx   eax, al", "lea     p, [p+rax*4+8]", "mov     esi, [p]", "mov     eax, esi", "shr     eax, cl", "xor     edx, eax", "and     eax, 1", "and     edx, 1", "shl     edx, cl", "xor     edx, esi", "mov     [p], edx", "retn"], ["lea~rax,<TAG>", "test~p,p", "mov~ecx,esi", "cmovz~p,rax", "mov~eax,esi", "and~ecx,0", "shr~al,0", "movzx~eax,al", "lea~p,[p+0]", "mov~esi,<TAG>", "mov~eax,esi", "shr~eax,cl", "xor~edx,eax", "and~eax,0", "and~edx,0", "shl~edx,cl", "xor~edx,esi", "mov~<TAG>,edx", "retn"]]], "func_feature": [0, 6, 0, 0, 1, 0, 0, 19, 0.0, 1, 1], "succs": [[]], "fname": "set_char_quoting", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0.0, ["lea     r, default_quoting_options", "test    o, o", "cmovz   o, r", "mov     eax, [o+4]", "mov     [o+4], esi", "retn"], ["lea~r,<TAG>", "test~o,o", "cmovz~o,r", "mov~eax,[o+0]", "mov~[o+0],esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 6, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_flags", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[1, 0, 0, 1, 1, 2, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]], [1, 0, 3, 0, 0, 6, 2, 1, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "test    left_quote, left_quote", "mov     dword ptr [o], 8", "jz      short loc_56E7"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "test~left_quote,left_quote", "mov~<TAG>,0", "jz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, 0, 0.16666666666666666, ["test    right_quote, right_quote", "jz      short loc_56E7"], ["test~right_quote,right_quote", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["mov     [o+28h], left_quote", "mov     [o+30h], right_quote", "retn"], ["mov~[o+0],left_quote", "mov~[o+0],right_quote", "retn"]]], "func_feature": [1, 3, 3, 0, 4, 4, 0, 13, 0.04167, 1, 1], "succs": [[], [0, 2], [0, 3], []], "fname": "set_custom_quoting", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[3, 0, 0, 3, 2, 39, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "lea     r, default_quoting_options", "push    r13", "push    r12", "mov     r13, buffer", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, buffersize", "mov     r15, arg", "sub     rsp, 18h", "test    o, o", "cmovz   rbx, r", "mov     [rsp+48h+argsize], argsize_0", "call    ___errno_location", "mov     r12d, [r]", "mov     rbp, r", "lea     r, [p+8]", "sub     rsp, 8", "mov     r9d, [p+4]; flags", "push    qword ptr [p+30h]; right_quote", "mov     r8d, [p]; quoting_style", "push    qword ptr [p+28h]; left_quote", "mov     rdx, arg; arg", "push    r; quote_these_too", "mov     rcx, [rsp+68h+argsize]; argsize", "mov     rsi, buffersize; buffersize", "mov     rdi, buffer; buffer", "call    quotearg_buffer_restyled", "mov     [rbp+0], r12d", "add     rsp, 38h", "pop     p", "pop     rbp", "pop     e", "pop     buffer", "pop     buffersize", "pop     arg", "retn"], ["push~r15", "push~r14", "lea~r,<TAG>", "push~r13", "push~r12", "mov~r13,buffer", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,buffersize", "mov~r15,arg", "sub~rsp,0", "test~o,o", "cmovz~rbx,r", "mov~[rsp+0],argsize_0", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,r", "lea~r,[p+0]", "sub~rsp,0", "mov~r9d,[p+0]", "push~[word ptr [p+0]", "mov~r8d,<TAG>", "push~[word ptr [p+0]", "mov~rdx,arg", "push~r", "mov~rcx,[rsp+0]", "mov~rsi,buffersize", "mov~rdi,buffer", "call~FOO", "mov~[rbp+0],r12d", "add~rsp,0", "pop~p", "pop~rbp", "pop~e", "pop~buffer", "pop~buffersize", "pop~arg", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 39, 0.0, 1, 3], "succs": [[]], "fname": "quotearg_buffer", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[1, 0, 0, 1, 0, 9, 0, 0, 0, 0, 0.0, ["mov     rax, [rsp+68h+var_58]", "add     rsp, 38h", "pop     p", "pop     flags", "pop     size", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["mov~rax,[rsp+0]", "add~rsp,0", "pop~p", "pop~flags", "pop~size", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [3, 2, 2, 5, 4, 59, 7, 5, 0, 0, 0.0, ["push    r15", "push    r14", "lea     rax, default_quoting_options", "push    r13", "push    r12", "mov     r12, size", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, arg", "mov     r15, argsize", "sub     rsp, 38h", "test    o, o", "cmovz   rbx, rax", "xor     ebp, ebp", "call    ___errno_location", "test    size, size", "mov     r13, rax", "mov     eax, [rax]", "setz    bpl", "or      ebp, [p+4]", "lea     r10, [p+8]", "sub     rsp, 8", "mov     r8d, [p]; quoting_style", "mov     rcx, argsize; argsize", "mov     [rsp+70h+e], eax", "push    qword ptr [p+30h]; right_quote", "mov     rdx, arg; arg", "push    qword ptr [p+28h]; left_quote", "push    r10; quote_these_too", "xor     esi, esi; buffersize", "mov     r9d, ebp; flags", "xor     edi, edi; buffer", "mov     [rsp+88h+quote_these_too], r10", "call    quotearg_buffer_restyled", "lea     rsi, [rax+1]", "mov     [rsp+88h+var_40], rax", "add     rsp, 20h", "mov     rdi, bufsize_0; n", "mov     [rsp+68h+bufsize], bufsize_0", "call    xmalloc", "mov     [rsp+68h+var_58], rax", "sub     rsp, 8", "push    qword ptr [p+30h]; right_quote", "push    qword ptr [p+28h]; left_quote", "mov     r10, [rsp+80h+quote_these_too]", "mov     r9d, ebp; flags", "mov     r8d, [p]; quoting_style", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "mov     rdi, rax; buffer", "push    r10; quote_these_too", "mov     rsi, [rsp+88h+bufsize]; buffersize", "call    quotearg_buffer_restyled", "mov     eax, [rsp+88h+e]", "add     rsp, 20h", "test    size, size", "mov     [r13+0], eax", "jz      short loc_583F"], ["push~r15", "push~r14", "lea~rax,<TAG>", "push~r13", "push~r12", "mov~r12,size", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,arg", "mov~r15,argsize", "sub~rsp,0", "test~o,o", "cmovz~rbx,rax", "xor~ebp,ebp", "call~FOO", "test~size,size", "mov~r13,rax", "mov~eax,<TAG>", "setz~bpl", "or~ebp,[p+0]", "lea~r10,[p+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~[rsp+0],eax", "push~[word ptr [p+0]", "mov~rdx,arg", "push~[word ptr [p+0]", "push~r10", "xor~esi,esi", "mov~r9d,ebp", "xor~edi,edi", "mov~[rsp+0],r10", "call~FOO", "lea~rsi,[rax+0]", "mov~[rsp+0],rax", "add~rsp,<STR>", "mov~rdi,bufsize_0", "mov~[rsp+0],bufsize_0", "call~FOO", "mov~[rsp+0],rax", "sub~rsp,0", "push~[word ptr [p+0]", "push~[word ptr [p+0]", "mov~r10,[rsp+0]", "mov~r9d,ebp", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~rdx,arg", "mov~rdi,rax", "push~r10", "mov~rsi,[rsp+0]", "call~FOO", "mov~eax,[rsp+0]", "add~rsp,<STR>", "test~size,size", "mov~[r13+0],eax", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     r11, [rsp+68h+var_40]", "mov     [size], r11"], ["mov~r11,[rsp+0]", "mov~<TAG>,r11"]]], "func_feature": [4, 7, 5, 2, 3, 3, 1, 70, 0.0, 1, 6], "succs": [[], [0, 2], [0]], "fname": "quotearg_alloc_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rcx, o", "xor     edx, edx", "jmp     quotearg_alloc_mem"], ["mov~rcx,o", "xor~edx,edx", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[], [0]], "fname": "quotearg_alloc", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 4, 0, 0, 4, 0, 1, 0, 0, 0.2857142857142857, ["mov     rdi, [sv+8]; ptr", "lea     rbx, slot0", "cmp     rdi, rbx", "jz      short loc_58D9"], ["mov~rdi,[sv+0]", "lea~rbx,<TAG>", "cmp~rdi,rbx", "jz~FOO"]], [1, 0, 7, 0, 0, 7, 0, 0, 0, 3, 0.0, ["mov     eax, cs:nslots", "push    r12", "mov     r12, cs:slotvec_0", "push    rbp", "push    rbx", "cmp     eax, 1", "jbe     short loc_58B1"], ["mov~eax,<TAG>", "push~r12", "mov~r12,<TAG>", "push~rbp", "push~rbx", "cmp~eax,0", "jbe~FOO"]], [1, 0, 6, 1, 1, 5, 0, 2, 2, 3, 0.11904761904761904, ["mov     rdi, [rbx]; ptr", "add     rbx, 10h", "call    _free", "cmp     rbx, rbp", "jnz     short loc_58A0"], ["mov~rdi,<TAG>", "add~rbx,0", "call~FOO", "cmp~rbx,rbp", "jnz~FOO"]], [1, 0, 0, 0, 0, 5, 0, 0, 3, 0, 0.0, ["pop     rbx", "mov     cs:nslots, 1", "pop     rbp", "pop     sv", "retn"], ["pop~rbx", "mov~<TAG>,0", "pop~rbp", "pop~sv", "retn"]], [0, 0, 2, 0, 0, 3, 0, 1, 2, 1, 0.23809523809523808, ["lea     rbx, slotvec0", "cmp     sv, rbx", "jz      short loc_58F4"], ["lea~rbx,<TAG>", "cmp~sv,rbx", "jz~FOO"]], [0, 0, 1, 0, 1, 3, 0, 1, 3, 1, 0.0, ["mov     rdi, sv; ptr", "call    _free", "mov     cs:slotvec_0, rbx"], ["mov~rdi,sv", "call~FOO", "mov~<TAG>,rbx"]], [0, 1, 3, 0, 1, 3, 0, 1, 2, 2, 0.0, ["call    _free", "mov     cs:slotvec0.size, 100h", "mov     cs:slotvec0.val, rbx"], ["call~FOO", "mov~<TAG>,<STR>", "mov~<TAG>,rbx"]], [2, 0, 6, 2, 0, 5, 0, 0, 1, 4, 0.023809523809523808, ["sub     eax, 2", "lea     rbx, [sv+18h]", "shl     rax, 4", "lea     rbp, [sv+rax+28h]", "nop     word ptr [rax+rax+00000000h]"], ["sub~eax,0", "lea~rbx,[sv+0]", "shl~rax,0", "lea~rbp,[sv+0]", "nop~[ord ptr [rax+0]"]]], "func_feature": [3, 0, 6, 0, 8, 11, 0, 35, 0.08333, 5, 3], "succs": [[4, 6], [0, 7], [0, 2], [], [3, 5], [3], [4], [2]], "fname": "quotearg_free", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rdx,0", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_n", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_n_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options; options", "mov     rsi, arg; arg", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "xor     edi, edi; n", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rsi,arg", "mov~rdx,0", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options; options", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "xor     edi, edi; n", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rdx,argsize", "mov~argsize,arg", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 1, 2, 1, 1, 25, 2, 2, 0, 0, 0.0, ["pxor    xmm0, xmm0", "sub     rsp, 88h", "mov     dword ptr [rsp+88h+s], esi", "mov     dword ptr [rsp+88h+s+4], 0", "mov     rax, arg", "mov     arg, [rsp+88h+var_18]", "mov     s_0, arg; arg", "movups  [rsp+88h+s+8], xmm0", "mov     rcx, fs:28h", "mov     [rsp+88h+var_10], rcx", "xor     ecx, ecx", "movups  [rsp+88h+var_30], xmm0", "mov     rcx, rsp; options", "movdqa  xmm0, [rsp+88h+s]", "mov     [rsp+88h+o.right_quote], rdx", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "movaps  xmmword ptr [rsp+88h+o.style], xmm0", "movdqa  xmm0, xmmword ptr [rsp+50h]", "movaps  xmmword ptr [rsp+88h+o.quote_these_too+8], xmm0", "movdqa  xmm0, [rsp+88h+var_30+8]", "movaps  xmmword ptr [rsp+88h+o.quote_these_too+18h], xmm0", "call    quotearg_n_options", "mov     rdx, [rsp+88h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_5A08"], ["pxor~xmm0,xmm0", "sub~rsp,<STR>", "mov~[word ptr [rsp+0],esi", "mov~[word ptr [rsp+0],0", "mov~rax,arg", "mov~arg,[rsp+0]", "mov~s_0,arg", "movups~[rsp+0],xmm0", "mov~rcx,<TAG>", "mov~[rsp+0],rcx", "xor~ecx,ecx", "movups~[rsp+0],xmm0", "mov~rcx,rsp", "movdqa~xmm0,[rsp+0]", "mov~[rsp+0],rdx", "mov~rdx,0", "movaps~<TAG>,xmm0", "movdqa~xmm0,[mmword ptr [rsp+0]", "movaps~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,[rsp+0]", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 1, 0, 0.0, ["add     rsp, 88h", "retn"], ["add~rsp,<STR>", "retn"]]], "func_feature": [2, 2, 3, 3, 3, 2, 3, 28, 0.0, 1, 2], "succs": [[], [0, 2], []], "fname": "quotearg_n_style", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[1, 1, 2, 1, 1, 25, 2, 2, 0, 0, 0.0, ["pxor    xmm0, xmm0", "sub     rsp, 88h", "mov     dword ptr [rsp+88h+s], esi", "mov     dword ptr [rsp+88h+s+4], 0", "mov     rax, arg", "mov     arg, argsize; argsize", "mov     s_0, arg; arg", "movups  [rsp+88h+s+8], xmm0", "mov     argsize, fs:28h", "mov     [rsp+88h+var_10], argsize", "xor     ecx, ecx", "movups  [rsp+88h+var_30], xmm0", "movdqa  xmm0, [rsp+88h+s]", "mov     rcx, [rsp+88h+var_18]", "movaps  xmmword ptr [rsp+88h+o.style], xmm0", "movdqa  xmm0, xmmword ptr [rsp+50h]", "mov     [rsp+88h+o.right_quote], rcx", "mov     rcx, rsp; options", "movaps  xmmword ptr [rsp+88h+o.quote_these_too+8], xmm0", "movdqa  xmm0, [rsp+88h+var_30+8]", "movaps  xmmword ptr [rsp+88h+o.quote_these_too+18h], xmm0", "call    quotearg_n_options", "mov     rdx, [rsp+88h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_5A94"], ["pxor~xmm0,xmm0", "sub~rsp,<STR>", "mov~[word ptr [rsp+0],esi", "mov~[word ptr [rsp+0],0", "mov~rax,arg", "mov~arg,argsize", "mov~s_0,arg", "movups~[rsp+0],xmm0", "mov~argsize,<TAG>", "mov~[rsp+0],argsize", "xor~ecx,ecx", "movups~[rsp+0],xmm0", "movdqa~xmm0,[rsp+0]", "mov~rcx,[rsp+0]", "movaps~<TAG>,xmm0", "movdqa~xmm0,[mmword ptr [rsp+0]", "mov~[rsp+0],rcx", "mov~rcx,rsp", "movaps~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,[rsp+0]", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 88h", "retn"], ["add~rsp,<STR>", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 2, 3, 3, 3, 2, 1, 28, 0.0, 1, 2], "succs": [[1, 2], [], []], "fname": "quotearg_n_style_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 1, 1, 0, 0, 0.0, ["mov     rdx, arg; arg", "mov     esi, edi; s", "xor     edi, edi; n", "jmp     quotearg_n_style"], ["mov~rdx,arg", "mov~esi,edi", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "quotearg_style", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["mov     rcx, argsize; argsize", "mov     argsize, arg; arg", "mov     esi, edi; s", "xor     edi, edi; n", "jmp     quotearg_n_style_mem"], ["mov~rcx,argsize", "mov~argsize,arg", "mov~esi,edi", "xor~edi,edi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_style_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 1, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 48h", "retn"], ["add~rsp,<STR>", "retn"]], [3, 1, 2, 2, 1, 35, 6, 2, 0, 1, 0.0, ["sub     rsp, 48h", "mov     ecx, edx", "mov     rax, fs:28h", "mov     [rsp+48h+var_10], rax", "xor     eax, eax", "mov     rax, cs:default_quoting_options.right_quote", "mov     r8, rsp", "and     ecx, 1Fh", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     [rsp+48h+options.right_quote], rax", "mov     eax, edx", "movaps  xmmword ptr [rsp+48h+options.style], xmm0", "shr     al, 5", "movzx   eax, al", "lea     r9, [r8+rax*4+8]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "movaps  xmmword ptr [rsp+48h+options.quote_these_too+8], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+48h+options.quote_these_too+18h], xmm0", "mov     edx, [r9]", "mov     eax, edx", "shr     eax, cl", "not     eax", "and     eax, 1", "shl     eax, cl", "mov     rcx, r8; options", "xor     eax, edx", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "mov     [r9], eax", "xor     edi, edi; n", "call    quotearg_n_options", "mov     rsi, [rsp+48h+var_10]", "xor     rsi, fs:28h", "jnz     short loc_5B53"], ["sub~rsp,<STR>", "mov~ecx,edx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "mov~r8,rsp", "and~ecx,0", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "mov~eax,edx", "movaps~<TAG>,xmm0", "shr~al,0", "movzx~eax,al", "lea~r9,[r8+0]", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "mov~edx,<TAG>", "mov~eax,edx", "shr~eax,cl", "not~eax", "and~eax,0", "shl~eax,cl", "mov~rcx,r8", "xor~eax,edx", "mov~rdx,argsize", "mov~argsize,arg", "mov~<TAG>,eax", "xor~edi,edi", "call~FOO", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 6, 3, 1, 3, 2, 3, 38, 0.0, 5, 3], "succs": [[], [0, 2], []], "fname": "quotearg_char_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["movsx   edx, sil", "mov     ch_0, 0FFFFFFFFFFFFFFFFh", "jmp     quotearg_char_mem"], ["movsx~edx,sil", "mov~ch_0,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_char", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[1, 1, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     edx, 3Ah ; ':'; ch_0", "mov     rsi, 0FFFFFFFFFFFFFFFFh; argsize", "jmp     quotearg_char_mem"], ["mov~edx,<STR>", "mov~rsi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 1, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_colon", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     edx, 3Ah ; ':'; ch_0", "jmp     quotearg_char_mem"], ["mov~edx,<STR>", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_colon_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 2, 0, 1, 9, 1, 2, 0, 0, 0.2, ["mov     [rsp+48h+left_quote], left_quote_0", "mov     [rsp+48h+right_quote], right_quote_0", "mov     rcx, rsp; options", "mov     right_quote_0, argsize; argsize", "mov     left_quote_0, arg; arg", "call    quotearg_n_options", "mov     rdi, [rsp+48h+var_10]", "xor     rdi, fs:28h", "jnz     short loc_5C2C"], ["mov~[rsp+0],left_quote_0", "mov~[rsp+0],right_quote_0", "mov~rcx,rsp", "mov~right_quote_0,argsize", "mov~left_quote_0,arg", "call~FOO", "mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 1, 2, 0.15000000000000002, ["test    right_quote_0, right_quote_0", "jz      short loc_5C27"], ["test~right_quote_0,right_quote_0", "jz~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 3, -1, 0.0, ["add     rsp, 48h", "retn"], ["add~rsp,<STR>", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 1, 5, 1, 0, 16, 2, 1, 0, 3, 0.0, ["sub     rsp, 48h", "mov     r9, arg", "mov     arg, cs:default_quoting_options.right_quote", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+48h+var_10], rax", "xor     eax, eax", "movaps  [rsp+48h+var_48], xmm0", "test    left_quote_0, left_quote_0", "mov     [rsp+48h+right_quote], rcx", "mov     dword ptr [rsp+48h+var_48], 8", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "movaps  [rsp+48h+var_38], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+20h], xmm0", "jz      short loc_5C27"], ["sub~rsp,<STR>", "mov~r9,arg", "mov~arg,<TAG>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~<TAG>,xmm0", "test~left_quote_0,left_quote_0", "mov~[rsp+0],rcx", "mov~<TAG>,0", "movdqa~xmm0,<TAG>", "movaps~[rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 4, 6, 3, 6, 6, 3, 31, 0.05833, 5, 2], "succs": [[2, 5], [0, 3], [], [], [1, 3], []], "fname": "quotearg_n_custom_mem", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     r8, 0FFFFFFFFFFFFFFFFh", "jmp     quotearg_n_custom_mem"], ["mov~r8,0", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[], [0]], "fname": "quotearg_n_custom", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[1, 0, 1, 0, 0, 6, 1, 1, 0, 0, 0.0, ["mov     rcx, arg; arg", "mov     r8, 0FFFFFFFFFFFFFFFFh; argsize", "mov     arg, right_quote; right_quote", "mov     right_quote, left_quote; left_quote", "xor     edi, edi; n", "jmp     quotearg_n_custom_mem"], ["mov~rcx,arg", "mov~r8,0", "mov~arg,right_quote", "mov~right_quote,left_quote", "xor~edi,edi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 6, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_custom", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 6, 1, 1, 0, 0, 0.0, ["mov     r8, argsize; argsize", "mov     argsize, arg; arg", "mov     arg, right_quote; right_quote", "mov     right_quote, left_quote; left_quote", "xor     edi, edi; n", "jmp     quotearg_n_custom_mem"], ["mov~r8,argsize", "mov~argsize,arg", "mov~arg,right_quote", "mov~right_quote,left_quote", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 6, 0.0, 0, 0], "succs": [[], [0]], "fname": "quotearg_custom_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[1, 0, 6, 1, 0, 9, 0, 0, 0, 0, 0.0, ["push    r13", "push    r12", "mov     r13d, edi", "push    rbp", "push    rbx", "mov     r12, buf", "mov     rbx, count", "sub     rsp, 8", "nop     dword ptr [rax+rax+00h]"], ["push~r13", "push~r12", "mov~r13d,edi", "push~rbp", "push~rbx", "mov~r12,buf", "mov~rbx,count", "sub~rsp,0", "nop~[word ptr [rax+0]"]], [1, 0, 6, 0, 1, 4, 0, 2, 0, 2, 0.3, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 4", "jz      short loc_5CA8"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 6, 0, 1, 7, 1, 1, 0, 1, 0.4166666666666667, ["mov     rdx, count; nbytes", "mov     rsi, buf; buf", "mov     edi, r13d; fd", "call    _read", "test    rax, rax", "mov     rbp, rax", "jns     short loc_5CE0"], ["mov~rdx,count", "mov~rsi,buf", "mov~edi,r13d", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jns~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "mov     rax, rbp", "pop     count", "pop     rbp", "pop     buf", "pop     fd", "retn"], ["add~rsp,0", "mov~rax,rbp", "pop~count", "pop~rbp", "pop~buf", "pop~fd", "retn"]], [1, 0, 6, 0, 0, 2, 0, 0, 0, 1, 0.25, ["cmp     count, 7FFFE000h", "jbe     short loc_5CE0"], ["cmp~count,0", "jbe~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 0, 1, 0.2, ["cmp     eax, 16h", "jnz     short loc_5CE0"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 0, 2, 0.16666666666666666, ["mov     ebx, 7FFFE000h", "jmp     short loc_5CA8"], ["mov~ebx,0", "jmp~FOO"]]], "func_feature": [2, 1, 5, 0, 7, 10, 2, 33, 0.19048, 0, 2], "succs": [[2], [2, 4], [1, 3], [], [3, 5], [3, 6], [2]], "fname": "safe_read", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[1, 0, 6, 1, 0, 9, 0, 0, 0, 0, 0.0, ["push    r13", "push    r12", "mov     r13d, edi", "push    rbp", "push    rbx", "mov     r12, buf", "mov     rbx, count", "sub     rsp, 8", "nop     dword ptr [rax+rax+00h]"], ["push~r13", "push~r12", "mov~r13d,edi", "push~rbp", "push~rbx", "mov~r12,buf", "mov~rbx,count", "sub~rsp,0", "nop~[word ptr [rax+0]"]], [1, 0, 6, 0, 1, 4, 0, 2, 0, 2, 0.3, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 4", "jz      short loc_5D08"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 6, 0, 1, 7, 1, 1, 0, 1, 0.4166666666666667, ["mov     rdx, count; n", "mov     rsi, buf; buf", "mov     edi, r13d; fd", "call    _write", "test    rax, rax", "mov     rbp, rax", "jns     short loc_5D40"], ["mov~rdx,count", "mov~rsi,buf", "mov~edi,r13d", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jns~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 0, 1, 0.25, ["cmp     eax, 16h", "jnz     short loc_5D40"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "mov     rax, result", "pop     count", "pop     result", "pop     buf", "pop     fd", "retn"], ["add~rsp,0", "mov~rax,result", "pop~count", "pop~result", "pop~buf", "pop~fd", "retn"]], [1, 0, 6, 0, 0, 2, 0, 0, 0, 1, 0.2, ["cmp     count, 7FFFE000h", "jbe     short loc_5D40"], ["cmp~count,0", "jbe~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 0, 2, 0.16666666666666666, ["mov     ebx, 7FFFE000h", "jmp     short loc_5D08"], ["mov~ebx,0", "jmp~FOO"]]], "func_feature": [2, 1, 5, 0, 7, 10, 1, 33, 0.19048, 0, 2], "succs": [[2], [2, 3], [1, 4], [4, 5], [], [4, 6], [2]], "fname": "safe_write", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_5D65"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    _malloc", "test    p, p", "jnz     short loc_5D63"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 4, 0, 4, 4, 10, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 2], [], []], "fname": "xmalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_5D85"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    _realloc", "test    p, p", "jnz     short loc_5D83"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 4, 0, 4, 4, 4, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 2], [], []], "fname": "xrealloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[1, 0, 3, 0, 0, 3, 0, 1, 0, 0, 0.1, ["mov     rdx, 0AAAAAAAAAAAAAAA9h", "cmp     rax, rdx", "ja      short loc_5DD4"], ["mov~rdx,0", "cmp~rax,rdx", "ja~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 0, 2, 0.0, ["test    p, p", "mov     rax, [pn]", "jz      short loc_5DC0"], ["test~p,p", "mov~rax,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [1, 0, 1, 1, 0, 6, 0, 1, 2, -1, 0.05, ["lea     rdx, [rax+1]", "shr     rdx, 1", "add     rax, rdx", "mov     [pn], rax", "mov     pn, rax; n", "jmp     short xrealloc"], ["lea~rdx,[rax+0]", "shr~rdx,0", "add~rax,rdx", "mov~<TAG>,rax", "mov~pn,rax", "jmp~FOO"]], [1, 0, 1, 0, 0, 6, 1, 1, 1, -1, 0.05, ["test    rax, rax", "mov     edx, 40h ; '@'", "cmovz   rax, rdx", "mov     [pn], rax", "mov     pn, rax; n", "jmp     short xrealloc"], ["test~rax,rax", "mov~edx,0", "cmovz~rax,rdx", "mov~<TAG>,rax", "mov~pn,rax", "jmp~FOO"]], [1, 0, 0, 1, 1, 2, 0, 1, 2, 0, 0.0, ["sub     rsp, 8", "call    xalloc_die"], ["sub~rsp,0", "call~FOO"]]], "func_feature": [1, 2, 5, 0, 6, 6, 0, 20, 0.03333, 0, 2], "succs": [[3, 5], [0, 4], [], [2], [2], []], "fname": "x2realloc", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 1, 0, 1, 8, 1, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, s", "call    xmalloc", "mov     rdx, s; n", "xor     esi, esi; c", "mov     rdi, rax; s", "pop     s", "jmp     _memset"], ["push~rbx", "mov~rbx,s", "call~FOO", "mov~rdx,s", "xor~esi,esi", "mov~rdi,rax", "pop~s", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 1, 2, 0, 2, 1, 0, 8, 0.0, 0, 0], "succs": [[1], []], "fname": "xzalloc", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 4, 1, 2, 0, 1, 0.0, ["sub     rsp, 8", "call    _calloc", "test    p, p", "jz      short loc_5E13"], ["sub~rsp,0", "call~FOO", "test~p,p", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 1, 3, 0, 3, 2, 0, 7, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "xcalloc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[2, 0, 1, 2, 1, 14, 0, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, p", "mov     p, s; n", "mov     rbx, s", "sub     rsp, 8", "call    xmalloc", "add     rsp, 8", "mov     rdx, s; n", "mov     rsi, p; src", "pop     s", "pop     p", "mov     rdi, rax; dest", "jmp     _memcpy"], ["push~rbp", "push~rbx", "mov~rbp,p", "mov~p,s", "mov~rbx,s", "sub~rsp,0", "call~FOO", "add~rsp,0", "mov~rdx,s", "mov~rsi,p", "pop~s", "pop~p", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 0, 2, 0, 2, 1, 2, 14, 0.0, 0, 2], "succs": [[1], []], "fname": "xmemdup", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 1, 7, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, string", "call    _strlen", "mov     rdi, string; p", "lea     rsi, [rax+1]; s", "pop     string", "jmp     short xmemdup"], ["push~rbx", "mov~rbx,string", "call~FOO", "mov~rdi,string", "lea~rsi,[rax+0]", "pop~string", "jmp~FOO"]]], "func_feature": [1, 0, 2, 0, 2, 1, 0, 7, 0.0, 0, 0], "succs": [[], [0]], "fname": "xstrdup", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[2, 0, 4, 2, 0, 4, 0, 1, 0, 0, 0.0, ["add     p1, 1", "add     p2, 1", "cmp     al, dl", "jnz     short loc_5EB2"], ["add~p1,0", "add~p2,0", "cmp~al,dl", "jnz~FOO"]], [2, 0, 4, 0, 0, 12, 1, 1, 1, 2, 0.1, ["movzx   eax, byte ptr [p1]", "lea     ecx, [__c-41h]", "lea     edx, [__c+20h]", "cmp     ecx, 1Ah", "cmovb   eax, edx", "movzx   edx, byte ptr [p2]", "lea     r9d, [__c-41h]", "lea     r8d, [__c+20h]", "cmp     r9d, 1Ah", "cmovb   edx, r8d", "test    al, al", "jnz     short loc_5E80"], ["movzx~eax,<TAG>", "lea~ecx,[__c-41h]+0]", "lea~edx,[__c+0]", "cmp~ecx,0", "cmovb~eax,edx", "movzx~edx,<TAG>", "lea~r9d,[__c-41h]+0]", "lea~r8d,[__c+0]", "cmp~r9d,0", "cmovb~edx,r8d", "test~al,al", "jnz~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 0, 2, 0.0, ["xor     eax, eax", "cmp     p1, p2", "jnz     short loc_5E8C"], ["xor~eax,eax", "cmp~p1,p2", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 0.05, ["jmp     short locret_5EBA"], ["jmp~FOO"]], [0, 0, 1, 1, 0, 3, 0, 0, 2, 1, 0.1, ["movzx   eax, al", "movzx   edx, dl", "sub     eax, edx"], ["movzx~eax,al", "movzx~edx,dl", "sub~eax,edx"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 2, 4, 0, 6, 8, 2, 24, 0.04167, 0, 3], "succs": [[1, 4], [0, 4], [1, 3], [5], [5], []], "fname": "c_strcasecmp", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 40, 0, 0, 3, 0, 0, 0, 0, 0.0662431941923775, ["mov     rax, [r14+8]", "cmp     rax, [r14+10h]", "jb      short loc_6260"], ["mov~rax,[r14+0]", "cmp~rax,[r14+0]", "jb~FOO"]], [1, 0, 40, 0, 0, 2, 0, 1, 13, -1, 0.20205686630369027, ["cmp     edi, 23h ; '#'", "jz      loc_6279"], ["cmp~edi,0", "jz~FOO"]], [0, 0, 40, 0, 0, 2, 1, 1, 17, -1, 0.002117362371445856, ["test    dl, dl", "jz      short loc_62A7"], ["test~dl,dl", "jz~FOO"]], [0, 0, 10, 0, 1, 3, 0, 2, 8, -1, 0.10586811857229281, ["mov     rdi, rbp; ptr", "call    _free", "jmp     loc_5FED"], ["mov~rdi,rbp", "call~FOO", "jmp~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 12, -1, 0.028281911675741078, ["mov     byte ptr [r15+rax], 0", "jmp     loc_607B"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 11, 0, 1, 4, 0, 2, 8, -1, 0.003327283726557774, ["mov     edi, r12d; fd", "lea     r15, aWrittenBySSAnd+1Bh; \"\"", "call    _close", "jmp     loc_607B"], ["mov~edi,r12d", "lea~r15,<TAG>", "call~FOO", "jmp~FOO"]], [0, 0, 11, 0, 0, 1, 0, 0, 7, -1, 0.07849364791288567, ["lea     r15, aWrittenBySSAnd+1Bh; \"\""], ["lea~r15,<TAG>"]], [2, 0, 40, 1, 0, 7, 2, 1, 18, -1, 0.11675741076830007, ["mov     esi, [r13+0]", "add     r13, 4", "lea     eax, [rsi-1010101h]", "not     esi", "and     eax, esi", "and     eax, 80808080h", "jz      short loc_6170"], ["mov~esi,[r13+0]", "add~r13,0", "lea~eax,[rsi-1010101h]+0]", "not~esi", "and~eax,esi", "and~eax,0", "jz~FOO"]], [3, 0, 40, 2, 0, 11, 1, 0, 17, -1, 0.11675741076830007, ["mov     ecx, eax", "mov     r13, [rsp+0D8h+var_D0]", "shr     ecx, 10h", "test    eax, 8080h", "cmovz   eax, ecx", "lea     rcx, [rdx+2]", "cmovz   rdx, rcx", "mov     ecx, eax", "add     cl, al", "sbb     rdx, 3", "sub     rdx, [rsp+0D8h+src]"], ["mov~ecx,eax", "mov~r13,[rsp+0]", "shr~ecx,0", "test~eax,0", "cmovz~eax,ecx", "lea~rcx,[rdx+0]", "cmovz~rdx,rcx", "mov~ecx,eax", "add~cl,al", "sbb~rdx,0", "sub~rdx,[rsp+0]"]], [2, 0, 58, 1, 1, 19, 3, 2, 0, 6, 0.0, ["push    r15", "push    r14", "mov     edi, 0Eh; item", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 0A8h", "mov     rax, fs:28h", "mov     [rsp+0D8h+var_40], rax", "xor     eax, eax", "call    _nl_langinfo", "mov     r15, cs:charset_aliases", "test    rax, rax", "mov     rbx, rax", "lea     codeset, aWrittenBySSAnd+1Bh; \"\"", "cmovz   codeset, rax", "test    r15, r15", "jnz     short loc_5F2A"], ["push~r15", "push~r14", "mov~edi,0", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~r15,<TAG>", "test~rax,rax", "mov~rbx,rax", "lea~codeset,<TAG>", "cmovz~codeset,rax", "test~r15,r15", "jnz~FOO"]], [0, 0, 57, 0, 0, 1, 0, 1, 1, 5, 0.014519056261343014, ["jmp     loc_5FA0"], ["jmp~FOO"]], [1, 0, 47, 1, 0, 3, 0, 1, 6, 0, 0.008015728977616456, ["lea     rdi, [rax+0Fh]", "add     r12, 1", "jmp     loc_6018"], ["lea~rdi,[rax+0]", "add~r12,0", "jmp~FOO"]], [1, 0, 51, 0, 0, 2, 0, 1, 5, 1, 0.0036297640653357535, ["cmp     byte ptr [r13+rax-1], 2Fh ; '/'", "jnz     short loc_6306"], ["cmp~[yte ptr [r13+0],0", "jnz~FOO"]], [1, 0, 40, 0, 1, 5, 0, 2, 15, -1, 0.027223230490018152, ["mov     rdi, r14; _IO_FILE *", "call    ___uflow", "cmp     eax, 0FFFFFFFFh", "setnz   dl", "jmp     short loc_6270"], ["mov~rdi,r14", "call~FOO", "cmp~eax,0", "setnz~dl", "jmp~FOO"]], [3, 0, 47, 0, 0, 4, 0, 0, 3, -1, 0.054143980641258325, ["lea     r13, aUsrLocalLib; \"/usr/local/lib\"", "mov     edi, 1Dh; size", "mov     r12d, 0Fh", "mov     r14d, 0Eh"], ["lea~r13,<TAG>", "mov~edi,0", "mov~r12d,0", "mov~r14d,0"]], [0, 0, 56, 0, 1, 5, 1, 2, 2, 4, 0.031155474894131886, ["lea     rdi, name; \"CHARSETALIASDIR\"", "call    _getenv", "test    rax, rax", "mov     r13, rax", "jz      short loc_6000"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~r13,rax", "jz~FOO"]], [1, 0, 55, 0, 0, 2, 0, 1, 3, 3, 0.006352087114337568, ["cmp     byte ptr [rax], 0", "jz      short loc_6000"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 0A8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     aliases", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~aliases", "retn"]], [1, 0, 2, 0, 0, 7, 1, 1, 2, -1, 0.0338777979431337, ["cmp     byte ptr [codeset], 0", "lea     rax, aAscii; \"ASCII\"", "cmovz   codeset, rax", "mov     rcx, [rsp+0D8h+var_40]", "xor     rcx, fs:28h", "mov     rax, rbx", "jnz     loc_6301"], ["cmp~<TAG>,0", "lea~rax,<TAG>", "cmovz~codeset,rax", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,rbx", "jnz~FOO"]], [0, 0, 44, 0, 1, 5, 0, 2, 7, -1, 0.04627949183303086, ["mov     rdx, r14; n", "mov     rsi, r13; src", "mov     rdi, rbp; dest", "call    _memcpy", "jmp     short loc_6039"], ["mov~rdx,r14", "mov~rsi,r13", "mov~rdi,rbp", "call~FOO", "jmp~FOO"]], [0, 0, 46, 0, 1, 4, 1, 2, 6, -1, 0.0500604960677556, ["call    _malloc", "test    rax, rax", "mov     rbp, rax", "jnz     loc_6088"], ["call~FOO", "test~rax,rax", "mov~rbp,rax", "jnz~FOO"]], [0, 0, 14, 0, 0, 2, 1, 1, 22, -1, 0.05323653962492438, ["test    r15, r15", "jz      short loc_62E3"], ["test~r15,r15", "jz~FOO"]], [0, 0, 40, 0, 0, 2, 1, 1, 21, -1, 0.11675741076830007, ["test    r12, r12", "jz      loc_62D6"], ["test~r12,r12", "jz~FOO"]], [1, 0, 42, 0, 1, 8, 2, 2, 7, -1, 0.13611615245009076, ["lea     rsi, modes; \"r\"", "mov     edi, eax; fd", "xor     r15d, r15d", "call    _fdopen", "test    rax, rax", "mov     r14, rax", "mov     [rsp+0D8h+var_D8], 0", "jz      loc_6293"], ["lea~rsi,<TAG>", "mov~edi,eax", "xor~r15d,r15d", "call~FOO", "test~rax,rax", "mov~r14,rax", "mov~<TAG>,0", "jz~FOO"]], [0, 0, 46, 0, 1, 4, 1, 2, 4, -1, 0.08817301875378102, ["call    _malloc", "test    rax, rax", "mov     rbp, rax", "jz      short loc_5FE6"], ["call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [2, 0, 40, 5, 2, 17, 0, 2, 22, -1, 0.05142165759225651, ["mov     r15, [rsp+0D8h+var_D8]", "mov     rdi, 0FFFFFFFFFFFFFFFEh", "mov     rsi, [rsp+0D8h+src]; src", "sub     rdi, rdx", "add     rdx, 1; n", "sub     r15, r13", "add     rdi, r15", "add     rdi, r12; dest", "call    _memcpy", "mov     rsi, [rsp+0D8h+var_D0]; src", "lea     rdi, [r12+r15-1]; dest", "lea     rdx, [r13+1]; n", "mov     r15, r12", "call    _memcpy", "mov     rax, [r14+8]", "cmp     rax, [r14+10h]", "jb      loc_60DF"], ["mov~r15,<TAG>", "mov~rdi,0", "mov~rsi,[rsp+0]", "sub~rdi,rdx", "add~rdx,0", "sub~r15,r13", "add~rdi,r15", "add~rdi,r12", "call~FOO", "mov~rsi,[rsp+0]", "lea~rdi,[r12+0]", "lea~rdx,[r13+0]", "mov~r15,r12", "call~FOO", "mov~rax,[r14+0]", "cmp~rax,[r14+0]", "jb~FOO"]], [0, 0, 9, 0, 2, 6, 0, 2, 4, -1, 0.002268602540834846, ["mov     rdi, aliases; s", "call    _strlen", "lea     rbp, [aliases+rax+1]", "mov     rdi, aliases; s", "call    _strlen", "lea     r15, [aliases+rax+1]"], ["mov~rdi,aliases", "call~FOO", "lea~rbp,[aliases+0]", "mov~rdi,aliases", "call~FOO", "lea~r15,[aliases+0]"]], [1, 0, 9, 0, 0, 2, 0, 1, 3, -1, 0.032062915910465825, ["cmp     bpl, 2Ah ; '*'", "jnz     short loc_5F10"], ["cmp~bpl,0", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 4, -1, 0.0007562008469449487, ["cmp     byte ptr [aliases+1], 0", "jnz     short loc_5F10"], ["cmp~[yte ptr [aliases+0],0", "jnz~FOO"]], [0, 0, 12, 0, 1, 3, 0, 2, 23, -1, 0.036297640653357534, ["mov     rdi, r14; stream", "call    _fclose", "jmp     loc_6074"], ["mov~rdi,r14", "call~FOO", "jmp~FOO"]], [0, 0, 13, 0, 1, 2, 0, 1, 23, -1, 0.0, ["mov     rdi, r15; ptr", "call    _free"], ["mov~rdi,r15", "call~FOO"]], [1, 0, 40, 0, 2, 11, 1, 3, 14, -1, 0.12734422262552936, ["mov     rsi, r14; stream", "call    _ungetc", "mov     r13, [rsp+0D8h+src]", "mov     rcx, [rsp+0D8h+var_D0]", "lea     rsi, a50s50s; \"%50s %50s\"", "xor     eax, eax", "mov     rdi, r14; stream", "mov     rdx, r13", "call    _fscanf", "cmp     eax, 1", "jle     loc_623D"], ["mov~rsi,r14", "call~FOO", "mov~r13,[rsp+0]", "mov~rcx,[rsp+0]", "lea~rsi,<TAG>", "xor~eax,eax", "mov~rdi,r14", "mov~rdx,r13", "call~FOO", "cmp~eax,0", "jle~FOO"]], [1, 0, 40, 0, 0, 2, 0, 1, 17, -1, 0.06291591046581972, ["cmp     eax, 0FFFFFFFFh", "jz      short loc_623D"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 40, 0, 0, 2, 0, 1, 16, -1, 0.0662431941923775, ["cmp     eax, 0Ah", "jz      short loc_62A7"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 40, 0, 0, 1, 0, 1, 18, -1, 0.037507562008469456, ["jmp     loc_60D1"], ["jmp~FOO"]], [0, 0, 40, 0, 0, 1, 0, 0, 15, -1, 0.11675741076830007, ["mov     rdx, r13"], ["mov~rdx,r13"]], [0, 0, 9, 0, 0, 3, 1, 1, 1, -1, 0.12447065940713854, ["movzx   ebp, byte ptr [aliases]", "test    bpl, bpl", "jz      short loc_5F5C"], ["movzx~ebp,<TAG>", "test~bpl,bpl", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 6, -1, 0.13067150635208713, ["mov     cs:charset_aliases, r15", "jmp     loc_5F2A"], ["mov~<TAG>,r15", "jmp~FOO"]], [1, 0, 44, 0, 1, 5, 0, 1, 5, -1, 0.07713248638838476, ["mov     rdx, r14; n", "mov     rsi, r13; src", "mov     rdi, rbp; dest", "call    _memcpy", "mov     byte ptr [rbp+r14+0], 2Fh ; '/'"], ["mov~rdx,r14", "mov~rsi,r13", "mov~rdi,rbp", "call~FOO", "mov~[yte ptr [rbp+0],0"]], [0, 0, 13, 0, 1, 5, 1, 2, 11, -1, 0.07047791893526921, ["mov     rdi, r14; stream", "call    _fclose", "mov     rax, [rsp+0D8h+var_D8]", "test    rax, rax", "jz      loc_6074"], ["mov~rdi,r14", "call~FOO", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [4, 0, 43, 1, 1, 13, 2, 1, 6, -1, 0.1457955232909861, ["add     r12, rbp", "mov     rax, 2E74657372616863h", "mov     esi, 20000h; oflag", "mov     [r12], rax", "mov     eax, 73h ; 's'", "mov     dword ptr [r12+8], 61696C61h", "mov     [r12+0Ch], ax", "mov     rdi, rbp; file", "xor     eax, eax", "call    _open", "test    eax, eax", "mov     r12d, eax", "jns     short loc_6098"], ["add~r12,rbp", "mov~rax,0", "mov~esi,0", "mov~<TAG>,rax", "mov~eax,0", "mov~[word ptr [r12+0],0", "mov~[r12+0],ax", "mov~rdi,rbp", "xor~eax,eax", "call~FOO", "test~eax,eax", "mov~r12d,eax", "jns~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 9, 0, 1, 5, 1, 2, 2, -1, 0.06291591046581972, ["mov     rsi, aliases; s2", "mov     rdi, codeset; s1", "call    _strcmp", "test    eax, eax", "jz      short loc_5F4F"], ["mov~rsi,aliases", "mov~rdi,codeset", "call~FOO", "test~eax,eax", "jz~FOO"]], [4, 0, 40, 2, 0, 14, 1, 1, 19, -1, 0.11675741076830007, ["mov     esi, eax", "mov     [rsp+0D8h+var_C0], rdx", "shr     esi, 10h", "test    eax, 8080h", "cmovz   eax, esi", "lea     rsi, [r13+2]", "mov     ecx, eax", "cmovz   r13, rsi", "add     cl, al", "sbb     r13, 3", "sub     r13, [rsp+0D8h+var_D0]", "cmp     [rsp+0D8h+var_D8], 0", "lea     rax, [rdx+r13]", "jnz     loc_62B1"], ["mov~esi,eax", "mov~[rsp+0],rdx", "shr~esi,0", "test~eax,0", "cmovz~eax,esi", "lea~rsi,[r13+0]", "mov~ecx,eax", "cmovz~r13,rsi", "add~cl,al", "sbb~r13,0", "sub~r13,[rsp+0]", "cmp~<TAG>,0", "lea~rax,<TAG>", "jnz~FOO"]], [2, 0, 40, 1, 0, 7, 2, 1, 16, -1, 0.11675741076830007, ["mov     ecx, [rdx]", "add     rdx, 4", "lea     eax, [rcx-1010101h]", "not     ecx", "and     eax, ecx", "and     eax, 80808080h", "jz      short loc_6132"], ["mov~ecx,<TAG>", "add~rdx,0", "lea~eax,[rcx-1010101h]+0]", "not~ecx", "and~eax,ecx", "and~eax,0", "jz~FOO"]], [1, 0, 40, 0, 0, 4, 0, 0, 15, -1, 0.027223230490018152, ["lea     rdx, [rax+1]", "mov     [r14+8], rdx", "movzx   eax, byte ptr [rax]", "mov     edx, 1"], ["lea~rdx,[rax+0]", "mov~[r14+0],rdx", "movzx~eax,<TAG>", "mov~edx,0"]], [1, 0, 40, 0, 1, 5, 0, 2, 10, -1, 0.14806412583182094, ["mov     rdi, r14; _IO_FILE *", "call    ___uflow", "cmp     eax, 0FFFFFFFFh", "mov     edi, eax", "jnz     loc_60EA"], ["mov~rdi,r14", "call~FOO", "cmp~eax,0", "mov~edi,eax", "jnz~FOO"]], [0, 0, 53, 0, 1, 6, 1, 2, 4, 2, 0.007259528130671507, ["mov     rdi, rax; s", "call    _strlen", "test    rax, rax", "mov     r12, rax", "mov     r14, rax", "jnz     loc_62F0"], ["mov~rdi,rax", "call~FOO", "test~rax,rax", "mov~r12,rax", "mov~r14,rax", "jnz~FOO"]], [0, 0, 40, 0, 0, 4, 0, 0, 8, -1, 0.1358136721113128, ["lea     rax, [rsp+0D8h+var_78]", "mov     [rsp+0D8h+var_D0], rax", "lea     rax, [rsp+0D8h+var_B8]", "mov     [rsp+0D8h+src], rax"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax"]], [1, 0, 47, 0, 0, 1, 0, 0, 5, -1, 0.01663641863278887, ["mov     edi, 0Eh; size"], ["mov~edi,0"]], [0, 0, 40, 1, 1, 9, 0, 2, 20, -1, 0.05248033877797943, ["add     rax, [rsp+0D8h+var_D8]", "mov     rdi, r15; ptr", "lea     rcx, [rax+2]", "lea     rsi, [rax+3]; size", "mov     [rsp+0D8h+var_D8], rcx", "call    _realloc", "mov     rdx, [rsp+0D8h+var_C0]", "mov     r12, rax", "jmp     loc_61D8"], ["add~rax,<TAG>", "mov~rdi,r15", "lea~rcx,[rax+0]", "lea~rsi,[rax+0]", "mov~<TAG>,rcx", "call~FOO", "mov~rdx,[rsp+0]", "mov~r12,rax", "jmp~FOO"]], [0, 0, 40, 0, 1, 6, 0, 1, 20, -1, 0.05248033877797943, ["lea     rcx, [rax+2]", "lea     rdi, [rax+3]; size", "mov     [rsp+0D8h+var_D8], rcx", "call    _malloc", "mov     rdx, [rsp+0D8h+var_C0]", "mov     r12, rax"], ["lea~rcx,[rax+0]", "lea~rdi,[rax+0]", "mov~<TAG>,rcx", "call~FOO", "mov~rdx,[rsp+0]", "mov~r12,rax"]], [0, 0, 3, 0, 1, 3, 0, 1, 3, -1, 0.002268602540834846, ["mov     rdi, aliases; s", "call    _strlen", "lea     codeset, [aliases+rax+1]"], ["mov~rdi,aliases", "call~FOO", "lea~codeset,[aliases+0]"]], [0, 0, 40, 0, 0, 3, 0, 0, 9, -1, 0.20235934664246827, ["mov     rax, [r14+8]", "cmp     rax, [r14+10h]", "jnb     loc_622A"], ["mov~rax,[r14+0]", "cmp~rax,[r14+0]", "jnb~FOO"]], [1, 0, 40, 0, 0, 3, 0, 0, 11, -1, 0.21899576527525713, ["lea     eax, [rdi-9]", "cmp     eax, 1", "jbe     short loc_60D1"], ["lea~eax,[rdi-9]+0]", "cmp~eax,0", "jbe~FOO"]], [0, 1, 40, 0, 0, 2, 0, 1, 12, -1, 0.20538415003024804, ["cmp     edi, 20h ; ' '", "jz      short loc_60D1"], ["cmp~edi,<STR>", "jz~FOO"]], [0, 0, 47, 0, 0, 2, 0, 1, 6, -1, 0.007410768300060496, ["lea     rdi, [rax+0Eh]", "jmp     loc_5FD5"], ["lea~rdi,[rax+0]", "jmp~FOO"]], [0, 0, 10, 0, 0, 1, 0, 0, 5, -1, 0.03357531760435572, ["lea     r15, aWrittenBySSAnd+1Bh; \"\""], ["lea~r15,<TAG>"]], [0, 0, 40, 0, 0, 3, 0, 0, 10, -1, 0.10571687840290382, ["lea     rdx, [rax+1]", "mov     [r14+8], rdx", "movzx   edi, byte ptr [rax]; c"], ["lea~rdx,[rax+0]", "mov~[r14+0],rdx", "movzx~edi,<TAG>"]]], "func_feature": [27, 25, 65, 5, 59, 88, 1, 272, 0.06752, 8, 16], "succs": [[13, 45], [0, 31], [0, 32], [37], [3], [3], [3], [43, 7], [7], [10, 36], [15], [24], [56, 11], [33], [24], [16, 14], [14, 47], [], [17, 41], [40], [57, 19], [29, 30], [25, 21], [48, 5], [57, 38], [58, 46], [36], [26, 28], [26, 52], [6], [29], [35, 39], [34, 39], [32, 2], [53], [44], [42, 18], [36], [40], [4, 6], [6, 23], [], [27, 52], [50, 51], [8, 44], [33], [54, 39], [49, 12], [53], [20], [22], [22], [18], [58, 46], [53, 55], [1, 53], [20], [37], [54]], "fname": "locale_charset", "n_num": 59}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 12, 0, 0, 2, 1, 1, 0, 0, 0.06125356125356125, ["test    j, j", "jz      short loc_6460"], ["test~j,j", "jz~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 7, 5, 0.16809116809116809, ["cmp     [needle+j], dl", "jz      short loc_6440"], ["cmp~<TAG>,dl", "jz~FOO"]], [4, 0, 24, 3, 0, 6, 2, 0, 2, 4, 0.03133903133903134, ["add     rdi, 2Eh", "and     rdi, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rdi", "lea     rdi, [rsp+30h+var_28+7]", "and     rdi, 0FFFFFFFFFFFFFFF0h", "add     rdi, 10h; p"], ["add~rdi,0", "and~rdi,0", "sub~rsp,rdi", "lea~rdi,[rsp+0]", "and~rdi,0", "add~rdi,0"]], [1, 0, 26, 0, 0, 3, 0, 1, 1, 5, 0.03133903133903134, ["lea     rdi, ds:0[m*8]; n", "cmp     rdi, 0FAFh", "ja      loc_6488"], ["lea~rdi,<TAG>", "cmp~rdi,0", "ja~FOO"]], [0, 0, 24, 0, 1, 3, 0, 2, 2, 4, 0.03133903133903134, ["call    mmalloca", "mov     rdi, rax", "jmp     loc_6392"], ["call~FOO", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 12, 2, 0, 5, 1, 1, 9, 3, 0.014245014245014245, ["mov     rsi, [table+j*8]", "add     rhaystack, rsi", "sub     j, rsi", "test    dl, dl", "jnz     short loc_63FC"], ["mov~rsi,<TAG>", "add~rhaystack,rsi", "sub~j,rsi", "test~dl,dl", "jnz~FOO"]], [0, 0, 23, 0, 0, 2, 1, 1, 3, 3, 0.12535612535612536, ["test    table, table", "jz      loc_6420"], ["test~table,table", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 9, 3, 0.008547008547008548, ["mov     [resultp], rhaystack", "jmp     loc_6414"], ["mov~<TAG>,rhaystack", "jmp~FOO"]], [1, 0, 12, 1, 0, 4, 0, 1, 8, 4, 0.06267806267806268, ["add     j, 1", "lea     rsi, [phaystack+1]", "cmp     m, j", "jz      short loc_6495"], ["add~j,0", "lea~rsi,[phaystack+0]", "cmp~m,j", "jz~FOO"]], [1, 0, 3, 0, 1, 3, 0, 2, 7, 2, 0.07692307692307693, ["call    freea", "mov     eax, 1", "jmp     short loc_6422"], ["call~FOO", "mov~eax,0", "jmp~FOO"]], [0, 0, 12, 0, 0, 2, 1, 1, 6, 3, 0.24786324786324787, ["test    dl, dl", "jz      short loc_6414"], ["test~dl,dl", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 1, 0, 1, 2, 0.021367521367521368, ["xor     eax, eax"], ["xor~eax,eax"]], [2, 0, 27, 1, 1, 19, 1, 2, 0, 3, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r14", "push    r13", "push    r12", "push    rbx", "mov     r13, haystack", "mov     haystack, needle; s", "mov     rbx, needle", "mov     r12, resultp", "sub     rsp, 10h", "mov     rax, fs:28h", "mov     [rbp+var_28], rax", "xor     eax, eax", "call    _strlen", "mov     r14, rax", "mov     m, 1FFFFFFFFFFFFFFFh", "cmp     m, rax", "ja      loc_6420"], ["push~rbp", "mov~rbp,rsp", "push~r14", "push~r13", "push~r12", "push~rbx", "mov~r13,haystack", "mov~haystack,needle", "mov~rbx,needle", "mov~r12,resultp", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "call~FOO", "mov~r14,rax", "mov~m,0", "cmp~m,rax", "ja~FOO"]], [2, 0, 21, 0, 0, 3, 0, 0, 4, 5, 0.12820512820512822, ["cmp     m, 2", "mov     qword ptr [table+8], 1", "jbe     short loc_63E1"], ["cmp~m,0", "mov~[word ptr [table+0],0", "jbe~FOO"]], [1, 0, 20, 0, 0, 2, 1, 0, 5, 9, 0.05982905982905983, ["xor     edx, edx", "mov     ecx, 2"], ["xor~edx,edx", "mov~ecx,0"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.07122507122507123, ["mov     rsi, [rbp+var_28]", "xor     rsi, fs:28h", "jnz     short loc_649E"], ["mov~rsi,[rbp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 20, 0, 0, 3, 0, 1, 6, 8, 0.10398860398860399, ["movzx   eax, byte ptr [needle+i-1]", "cmp     al, [needle+j]", "jnz     short loc_63CD"], ["movzx~eax,[yte ptr [needle+0]", "cmp~al,<TAG>", "jnz~FOO"]], [1, 0, 20, 1, 0, 3, 0, 1, 9, 5, 0.15527065527065528, ["add     i, 1", "cmp     m, i", "jnz     short loc_63B0"], ["add~i,0", "cmp~m,i", "jnz~FOO"]], [0, 0, 20, 0, 0, 1, 0, 1, 7, 7, 0.038461538461538464, ["jmp     loc_6470"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 3, -1, 0.0, ["lea     rsp, [rbp-20h]", "pop     needle", "pop     resultp", "pop     r13", "pop     m", "pop     rbp", "retn"], ["lea~rsp,[rbp-20h]+0]", "pop~needle", "pop~resultp", "pop~r13", "pop~m", "pop~rbp", "retn"]], [0, 0, 20, 1, 0, 3, 0, 1, 8, 7, 0.0014245014245014246, ["sub     j, [table+j*8]", "cmp     al, [needle+j]", "jz      loc_6470"], ["sub~j,<TAG>", "cmp~al,<TAG>", "jz~FOO"]], [0, 0, 20, 0, 0, 2, 1, 1, 7, 7, 0.05840455840455841, ["test    j, j", "jnz     short loc_63C0"], ["test~j,j", "jnz~FOO"]], [0, 0, 12, 0, 0, 3, 0, 1, 9, 4, 0.008547008547008548, ["movzx   edx, byte ptr [rcx+1]", "mov     rcx, phaystack", "jmp     short loc_63F8"], ["movzx~edx,[yte ptr [rcx+0]", "mov~rcx,phaystack", "jmp~FOO"]], [0, 0, 20, 0, 0, 2, 1, 0, 8, 6, 0.04700854700854701, ["mov     [table+i*8], i", "xor     edx, edx"], ["mov~<TAG>,i", "xor~edx,edx"]], [1, 0, 20, 2, 0, 5, 0, 1, 8, 6, 0.07264957264957266, ["add     j, 1", "mov     b, i", "sub     rax, j", "mov     [table+i*8], rax", "jmp     loc_63D8"], ["add~j,0", "mov~b,i", "sub~rax,j", "mov~<TAG>,rax", "jmp~FOO"]], [2, 0, 12, 2, 0, 4, 0, 1, 9, 4, 0.002849002849002849, ["movzx   edx, byte ptr [phaystack+1]", "add     rhaystack, 1", "add     rcx, 1", "jmp     short loc_63F8"], ["movzx~edx,[yte ptr [phaystack+0]", "add~rhaystack,0", "add~rcx,0", "jmp~FOO"]], [1, 0, 12, 0, 0, 5, 1, 0, 5, 4, 0.21794871794871795, ["mov     qword ptr [resultp], 0", "movzx   edx, byte ptr [phaystack+0]", "mov     rcx, phaystack", "xor     eax, eax", "nop     dword ptr [j+j+00h]"], ["mov~<TAG>,0", "movzx~edx,[yte ptr [phaystack+0]", "mov~rcx,phaystack", "xor~eax,eax", "nop~[word ptr [j+0]"]]], "func_feature": [4, 13, 24, 1, 28, 40, 1, 101, 0.06593, 1, 13], "succs": [[26, 5], [0, 8], [6], [2, 4], [6], [9, 1], [11, 13], [9], [23, 7], [15], [9, 1], [15], [3, 11], [27, 14], [17], [16, 20], [], [19, 22], [17, 27], [25], [], [25, 22], [24, 21], [10], [18], [18], [10], [10]], "fname": "knuth_morris_pratt_unibyte", "n_num": 28}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[2, 0, 76, 2, 0, 6, 0, 1, 0, 0, 0.030753968253968245, ["add     j_0, 1", "mov     rax, [rbp+phaystack.cur.bytes]", "add     [rbp+phaystack.cur.ptr], rax", "cmp     [rbp+m], j_0", "mov     [rbp+phaystack.next_done], 0", "jz      loc_6E6C"], ["add~j_0,0", "mov~rax,[rbp+0]", "add~[rbp+0],rax", "cmp~[rbp+0],j_0", "mov~[rbp+0],0", "jz~FOO"]], [0, 0, 76, 0, 0, 1, 0, 1, 16, 8, 0.006010737628384687, ["jmp     loc_69EF"], ["jmp~FOO"]], [0, 0, 76, 0, 0, 2, 0, 1, 15, 8, 0.04137488328664799, ["cmp     [rax+14h], edx", "jnz     loc_6853"], ["cmp~[rax+0],edx", "jnz~FOO"]], [1, 0, 76, 0, 1, 5, 0, 2, 21, 8, 0.004481792717086834, ["mov     rdi, [rbp+rhaystack.cur.ptr]; s", "call    _strlen", "mov     [rbp+rhaystack.cur.wc_valid], 0", "mov     [rbp+rhaystack.cur.bytes], rax", "jmp     loc_6889"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],0", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 20, 4, 0.05511204481792717, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_6BF0"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 114, 0, 1, 7, 1, 2, 8, 11, 0.000980392156862745, ["mov     rdi, [rbp+needle]; s", "call    _strlen", "mov     [rbp+var_E0], 0", "mov     [rbp+n], rax", "xor     eax, eax", "mov     [rbp+var_F4], r14b", "jmp     loc_65FC"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],0", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],r14b", "jmp~FOO"]], [1, 0, 114, 0, 0, 2, 0, 1, 7, 4, 0.035364145658263305, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_6DE9"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 12, 6, 0.18970588235294117, ["cmp     [rbp+phaystack.in_shift], 0", "jnz     short loc_6A48"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 76, 0, 0, 2, 1, 1, 11, 7, 0.3144491129785247, ["test    al, al", "jz      loc_6A0C"], ["test~al,al", "jz~FOO"]], [2, 0, 76, 2, 0, 7, 0, 1, 18, 7, 0.08781512605042016, ["mov     rax, [rbp+rhaystack.cur.bytes]", "mov     [rbp+rhaystack.next_done], 0", "add     [rbp+rhaystack.cur.ptr], rax", "mov     [rbp+phaystack.next_done], 0", "mov     rax, [rbp+phaystack.cur.bytes]", "add     [rbp+phaystack.cur.ptr], rax", "jmp     loc_6A0C"], ["mov~rax,[rbp+0]", "mov~[rbp+0],0", "add~[rbp+0],rax", "mov~[rbp+0],0", "mov~rax,[rbp+0]", "add~[rbp+0],rax", "jmp~FOO"]], [0, 0, 114, 0, 0, 5, 0, 1, 8, 10, 0.04012605042016806, ["mov     rsi, [rbp+needle]; src", "lea     rcx, [rbx+28h]", "mov     rdx, [rbp+n]; n", "cmp     rsi, rcx", "jz      loc_6960"], ["mov~rsi,[rbp+0]", "lea~rcx,[rbx+0]", "mov~rdx,[rbp+0]", "cmp~rsi,rcx", "jz~FOO"]], [2, 0, 114, 0, 0, 5, 1, 1, 7, 11, 0.006302521008403361, ["mov     [rbp+n], 1", "mov     [rbp+var_E0], 0", "xor     eax, eax", "mov     [rbp+var_F4], r14b", "jmp     loc_65FC"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "xor~eax,eax", "mov~[rbp+0],r14b", "jmp~FOO"]], [1, 0, 114, 0, 0, 1, 0, 0, 9, 11, 0.011064425770308122, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 76, 0, 1, 4, 1, 2, 20, 7, 0.00976890756302521, ["lea     rdi, [rbx+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_6E8F"], ["lea~rdi,[rbx+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 76, 0, 0, 9, 1, 0, 19, 8, 0.02461484593837535, ["mov     rcx, [rbp+rhaystack.cur.ptr]", "lea     rsi, is_basic_table", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [rsi+rax*4]", "bt      eax, edx", "jnb     loc_6AF8"], ["mov~rcx,[rbp+0]", "lea~rsi,<TAG>", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,edx", "jnb~FOO"]], [0, 0, 114, 0, 0, 1, 0, 0, 9, 9, 0.022058823529411763, ["mov     [r15], rsi"], ["mov~<TAG>,rsi"]], [0, 0, 114, 0, 0, 2, 0, 1, 10, 11, 0.025175070028011202, ["mov     [rbp+var_F4], r14b", "jmp     loc_65E7"], ["mov~[rbp+0],r14b", "jmp~FOO"]], [0, 0, 114, 0, 1, 5, 1, 2, 9, 12, 0.052941176470588235, ["lea     rdi, [rbx+4]; ps", "mov     [rbp+var_E0], r14b", "call    _mbsinit", "test    eax, eax", "jz      loc_6E11"], ["lea~rdi,[rbx+0]", "mov~[rbp+0],r14b", "call~FOO", "test~eax,eax", "jz~FOO"]], [8, 0, 76, 1, 0, 19, 2, 0, 10, 8, 0.2230392156862745, ["mov     rax, [rbp+resultp]", "lea     rbx, [rbp+phaystack]", "mov     [rbp+rhaystack.in_shift], 0", "mov     qword ptr [rbp+rhaystack.state.__count], 0", "mov     [rbp+rhaystack.next_done], 0", "xor     r15d, r15d", "mov     [rbp+ps], rbx", "add     rbx, 4", "mov     [rbp+phaystack.in_shift], 0", "mov     qword ptr [rax], 0", "mov     rax, [rbp+haystack]", "mov     [rbp+var_120], rbx", "lea     rbx, [rbp+rhaystack]", "mov     qword ptr [rbp+phaystack.state.__count], 0", "mov     [rbp+phaystack.next_done], 0", "mov     [rbp+rhaystack.cur.ptr], rax", "mov     [rbp+phaystack.cur.ptr], rax", "xor     eax, eax", "nop     dword ptr [rax+00000000h]"], ["mov~rax,[rbp+0]", "lea~rbx,[rbp+0]", "mov~[rbp+0],0", "mov~[word ptr [rbp+0],0", "mov~[rbp+0],0", "xor~r15d,r15d", "mov~[rbp+0],rbx", "add~rbx,0", "mov~[rbp+0],0", "mov~<TAG>,0", "mov~rax,[rbp+0]", "mov~[rbp+0],rbx", "lea~rbx,[rbp+0]", "mov~[word ptr [rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],rax", "mov~[rbp+0],rax", "xor~eax,eax", "nop~[word ptr [rax+0]"]], [2, 0, 89, 0, 0, 3, 0, 0, 9, 9, 0.1811624649859944, ["cmp     [rbp+m], 2", "mov     qword ptr [table+8], 1", "jbe     loc_67B6"], ["cmp~[rbp+0],0", "mov~[word ptr [table+0],0", "jbe~FOO"]], [2, 0, 88, 2, 0, 4, 0, 1, 16, 9, 0.06106442577030812, ["add     i, 1", "add     b, 30h", "cmp     [rbp+m], i", "jnz     loc_6730"], ["add~i,0", "add~b,0", "cmp~[rbp+0],i", "jnz~FOO"]], [0, 0, 114, 0, 0, 4, 1, 1, 10, 8, 0.05798319327731092, ["test    al, al", "mov     [r15+8], rdx", "mov     [r15+10h], al", "jz      short loc_6630"], ["test~al,al", "mov~[r15+0],rdx", "mov~[r15+0],al", "jz~FOO"]], [0, 0, 114, 0, 1, 7, 0, 2, 9, 9, 0.022058823529411763, ["lea     rcx, [r15+18h]", "mov     rdi, rcx; dest", "call    _memcpy", "mov     rdx, [rbp+n]", "mov     [r15], rax", "movzx   eax, [rbp+var_E0]", "jmp     loc_661A"], ["lea~rcx,[r15+0]", "mov~rdi,rcx", "call~FOO", "mov~rdx,[rbp+0]", "mov~<TAG>,rax", "movzx~eax,[rbp+0]", "jmp~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 16, 7, 0.14124649859943977, ["cmp     [rbp+rhaystack.next_done], 0", "jnz     loc_6CE8"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 76, 0, 0, 2, 1, 1, 15, 8, 0.29704715219421096, ["test    j_0, j_0", "jz      loc_6C20"], ["test~j_0,j_0", "jz~FOO"]], [0, 0, 76, 1, 0, 7, 1, 1, 16, 8, 0.1456465919701214, ["mov     r14, [table+j_0*8+0]", "mov     rax, j_0", "sub     rax, count", "test    count, count", "mov     [rbp+haystack], rax", "movzx   eax, [rbp+phaystack.next_done]", "jz      short loc_6828"], ["mov~r14,[table+0]", "mov~rax,j_0", "sub~rax,count", "test~count,count", "mov~[rbp+0],rax", "movzx~eax,[rbp+0]", "jz~FOO"]], [0, 0, 76, 0, 0, 3, 0, 1, 20, 8, 0.07163865546218487, ["movzx   eax, [rbp+phaystack.next_done]", "mov     r15, [rbp+haystack]", "jmp     loc_6828"], ["movzx~eax,[rbp+0]", "mov~r15,[rbp+0]", "jmp~FOO"]], [0, 0, 114, 0, 0, 2, 0, 0, 11, 8, 0.0, ["mov     eax, [rbp+var_DC]", "mov     [r15+14h], eax"], ["mov~eax,[rbp+0]", "mov~[r15+0],eax"]], [2, 0, 76, 0, 0, 9, 1, 0, 13, 8, 0.040686274509803916, ["mov     rcx, [rbp+phaystack.cur.ptr]", "lea     rsi, is_basic_table", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [rsi+rax*4]", "bt      eax, edx", "jb      short loc_69B0"], ["mov~rcx,[rbp+0]", "lea~rsi,<TAG>", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,edx", "jb~FOO"]], [2, 0, 76, 0, 0, 3, 0, 1, 19, 8, 0.016666666666666666, ["mov     [rbp+rhaystack.cur.bytes], 1", "mov     [rbp+rhaystack.cur.wc_valid], 0", "jmp     loc_6C8F"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 76, 0, 3, 12, 0, 4, 18, 5, 0.08137254901960783, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rbp+rhaystack.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rbp+rhaystack.cur.ptr]; s", "lea     rcx, [rbx+4]; p", "lea     rdi, [rbx+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rbp+rhaystack.cur.bytes], rax", "jz      loc_6E1D"], ["call~FOO", "mov~rdi,[rbp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rbp+0]", "lea~rcx,[rbx+0]", "lea~rdi,[rbx+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rbp+0],rax", "jz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 12, 11, 0.23399859943977588, ["cmp     [rbp+phaystack.cur.wc_valid], 0", "jnz     loc_69C6"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 117, 0, 1, 3, 0, 2, 2, 9, 0.008053221288515405, ["call    mmalloca", "mov     r12, rax", "jmp     loc_6544"], ["call~FOO", "mov~r12,rax", "jmp~FOO"]], [2, 0, 119, 2, 0, 6, 0, 1, 1, 10, 0.008053221288515405, ["mov     rax, [rbp+m]", "lea     rdi, ds:0[rax*8]", "sub     rdi, rax", "shl     rdi, 3; n", "cmp     rdi, 0FAFh", "ja      loc_6E34"], ["mov~rax,[rbp+0]", "lea~rdi,<TAG>", "sub~rdi,rax", "shl~rdi,0", "cmp~rdi,0", "ja~FOO"]], [0, 0, 76, 0, 1, 4, 1, 2, 14, 7, 0.012499999999999999, ["mov     rdi, [rbp+var_120]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_6E8F"], ["mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 76, 2, 0, 3, 0, 0, 13, 10, 0.28054388422035476, ["lea     rax, [j_0+j_0*2]", "shl     rax, 4", "add     rax, memory"], ["lea~rax,<TAG>", "shl~rax,0", "add~rax,memory"]], [3, 0, 76, 0, 0, 4, 0, 1, 14, 11, 0.07920168067226889, ["mov     [rbp+phaystack.cur.bytes], 1", "mov     [rbp+phaystack.cur.wc_valid], 0", "mov     [rbp+phaystack.next_done], 1", "jmp     loc_683A"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [2, 0, 76, 0, 1, 6, 0, 2, 15, 11, 0.0038982259570494865, ["mov     rdi, [rbp+phaystack.cur.ptr]; s", "call    _strlen", "mov     [rbp+phaystack.cur.wc_valid], 0", "mov     [rbp+phaystack.cur.bytes], rax", "mov     [rbp+phaystack.next_done], 1", "jmp     loc_683A"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],0", "mov~[rbp+0],rax", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 76, 0, 0, 1, 0, 0, 15, 6, 0.006022408963585434, ["mov     [rbp+phaystack.in_shift], 1"], ["mov~[rbp+0],0"]], [1, 0, 76, 0, 0, 2, 0, 1, 22, 9, 0.010119047619047618, ["mov     [rbp+rhaystack.next_done], 1", "jmp     loc_6C81"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 76, 0, 1, 5, 1, 2, 21, 10, 0.030392156862745098, ["lea     rdi, [rbx+4]; ps", "mov     [rbp+rhaystack.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_6E41"], ["lea~rdi,[rbx+0]", "mov~[rbp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 76, 0, 0, 3, 0, 1, 14, 9, 0.29623015873015873, ["mov     rdx, [rax+8]; n", "cmp     rdx, [rbp+phaystack.cur.bytes]", "jz      loc_6BD0"], ["mov~rdx,[rax+0]", "cmp~rdx,[rbp+0]", "jz~FOO"]], [2, 0, 76, 2, 0, 5, 0, 1, 14, 9, 0.061963118580765635, ["lea     rax, [j_0+j_0*2]", "shl     rax, 4", "add     rax, memory", "cmp     byte ptr [rax+10h], 0", "jz      loc_6845"], ["lea~rax,<TAG>", "shl~rax,0", "add~rax,memory", "cmp~[yte ptr [rax+0],0", "jz~FOO"]], [1, 0, 114, 0, 0, 2, 0, 1, 5, 6, 0.1226890756302521, ["cmp     [rbp+var_100], 0", "jz      loc_65A0"], ["cmp~[rbp+0],0", "jz~FOO"]], [5, 0, 114, 2, 0, 14, 0, 1, 4, 7, 0.038865546218487396, ["mov     rax, [rbp+m]", "mov     [rbp+needle], needle_0", "lea     needle_0, [rbp+var_100]", "mov     [rbp+var_100], 0", "mov     [rbp+var_FC], 0", "mov     r15, memory", "mov     [rbp+var_F4], 0", "mov     r14d, 1", "lea     r13, [rax+rax*2]", "lea     rax, [rbx+4]", "shl     r13, 4", "mov     [rbp+ps], rax", "add     r13, memory", "jmp     loc_6649"], ["mov~rax,[rbp+0]", "mov~[rbp+0],needle_0", "lea~needle_0,[rbp+0]", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~r15,memory", "mov~[rbp+0],0", "mov~r14d,0", "lea~r13,<TAG>", "lea~rax,[rbx+0]", "shl~r13,0", "mov~[rbp+0],rax", "add~r13,memory", "jmp~FOO"]], [2, 0, 114, 2, 0, 4, 0, 0, 11, 7, 0.06988795518207283, ["mov     rax, [rbp+n]", "add     [rbp+needle], rax", "add     r15, 30h", "mov     [rbp+var_F4], 0"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax", "add~r15,0", "mov~[rbp+0],0"]], [0, 0, 76, 0, 1, 5, 1, 2, 15, 9, 0.012138188608776843, ["mov     rsi, [rbp+phaystack.cur.ptr]; s2", "mov     rdi, [rax]; s1", "call    _memcmp", "test    eax, eax", "jnz     loc_6853"], ["mov~rsi,[rbp+0]", "mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 76, 0, 0, 9, 1, 0, 18, 8, 0.023739495798319327, ["mov     rcx, [rbp+rhaystack.cur.ptr]", "lea     rsi, is_basic_table", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [rsi+rax*4]", "bt      eax, edx", "jnb     loc_6D08"], ["mov~rcx,[rbp+0]", "lea~rsi,<TAG>", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,edx", "jnb~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 17, 6, 0.10406162464985994, ["cmp     [rbp+rhaystack.in_shift], 0", "jnz     loc_6D20"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 76, 0, 1, 5, 0, 2, 20, 8, 0.004481792717086834, ["mov     rdi, [rbp+rhaystack.cur.ptr]; s", "call    _strlen", "mov     [rbp+rhaystack.cur.wc_valid], 0", "mov     [rbp+rhaystack.cur.bytes], rax", "jmp     loc_6C8F"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~[rbp+0],0", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 19, 4, 0.05455182072829131, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_6E4D"], ["cmp~rax,0", "jz~FOO"]], [3, 0, 76, 0, 0, 5, 0, 0, 19, 9, 0.004271708683473389, ["mov     [rbp+rhaystack.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rbp+rhaystack.cur.wc_valid], 1", "mov     [rbp+rhaystack.next_done], 1", "mov     [rbp+rhaystack.cur.wc], eax"], ["mov~[rbp+0],0", "movsx~eax,<TAG>", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],eax"]], [1, 0, 76, 0, 3, 13, 0, 4, 13, 5, 0.15014005602240896, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rbp+phaystack.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rbp+ps]", "mov     rdx, rax; n", "lea     rcx, [rsi+4]; p", "lea     rdi, [rsi+24h]; pwc", "mov     rsi, [rbp+phaystack.cur.ptr]; s", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rbp+phaystack.cur.bytes], rax", "jz      loc_6CD0"], ["call~FOO", "mov~rdi,[rbp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rbp+0]", "mov~rdx,rax", "lea~rcx,[rsi+0]", "lea~rdi,[rsi+0]", "mov~rsi,[rbp+0]", "call~FOO", "cmp~rax,0", "mov~[rbp+0],rax", "jz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 17, 7, 0.1262955182072829, ["cmp     [rbp+rhaystack.next_done], 0", "jz      short loc_68A8"], ["cmp~[rbp+0],0", "jz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 14, 4, 0.060784313725490195, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_6DC0"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 18, 8, 0.02584033613445378, ["cmp     [rbp+rhaystack.cur.wc_valid], 0", "jnz     short loc_68FC"], ["cmp~[rbp+0],0", "jnz~FOO"]], [0, 0, 76, 0, 0, 3, 1, 1, 19, 8, 0.04726890756302521, ["mov     edx, [rbp+rhaystack.cur.wc]", "test    edx, edx", "jz      loc_6906"], ["mov~edx,[rbp+0]", "test~edx,edx", "jz~FOO"]], [0, 0, 76, 0, 0, 1, 0, 1, 18, 9, 0.009453781512605041, ["jmp     short loc_6C81"], ["jmp~FOO"]], [2, 0, 76, 0, 0, 3, 0, 1, 22, 9, 0.010119047619047618, ["mov     [rbp+rhaystack.in_shift], 0", "mov     [rbp+rhaystack.next_done], 1", "jmp     loc_6C81"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 3, 0, 1, 7, 0, 2, 17, -1, 0.0018907563025210082, ["mov     rax, [rbp+rhaystack.cur.ptr]", "mov     rbx, [rbp+resultp]", "mov     rdi, memory; p", "mov     [rbx], rax", "call    freea", "mov     eax, 1", "jmp     loc_6912"], ["mov~rax,[rbp+0]", "mov~rbx,[rbp+0]", "mov~rdi,memory", "mov~<TAG>,rax", "call~FOO", "mov~eax,0", "jmp~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 23, 9, 0.010119047619047618, ["mov     [rbp+rhaystack.next_done], 1", "jmp     loc_68FC"], ["mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 76, 0, 1, 5, 1, 2, 22, 10, 0.030392156862745098, ["lea     rdi, [rbx+4]; ps", "mov     [rbp+rhaystack.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      short loc_6C10"], ["lea~rdi,[rbx+0]", "mov~[rbp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 114, 0, 3, 12, 0, 4, 6, 5, 0.0376750700280112, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rbp+needle]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rbp+needle]; s", "lea     rcx, [rbx+4]; p", "lea     rdi, [rbx+24h]; iter", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rbp+n], rax", "jz      loc_6988"], ["call~FOO", "mov~rdi,[rbp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rbp+0]", "lea~rcx,[rbx+0]", "lea~rdi,[rbx+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rbp+0],rax", "jz~FOO"]], [0, 0, 114, 0, 0, 2, 0, 1, 8, 6, 0.008683473389355741, ["mov     [rbp+var_100], r14b", "jmp     loc_6656"], ["mov~[rbp+0],r14b", "jmp~FOO"]], [0, 0, 76, 0, 0, 2, 1, 1, 15, 3, 0.04673202614379084, ["test    rax, rax", "jnz     short loc_6AB1"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 114, 0, 0, 2, 1, 1, 8, 3, 0.03837535014005602, ["test    rax, rax", "jnz     short loc_66CC"], ["test~rax,rax", "jnz~FOO"]], [2, 0, 76, 0, 0, 4, 0, 1, 16, 2, 0.014775910364145658, ["mov     rax, [rbp+phaystack.cur.ptr]", "mov     [rbp+phaystack.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_6EB3"], ["mov~rax,[rbp+0]", "mov~[rbp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 76, 2, 0, 5, 0, 1, 19, 7, 0.08928571428571427, ["mov     rax, [rbp+rhaystack.cur.bytes]", "add     [rbp+rhaystack.cur.ptr], rax", "sub     r14, 1", "mov     [rbp+rhaystack.next_done], 0", "jz      loc_6CB8"], ["mov~rax,[rbp+0]", "add~[rbp+0],rax", "sub~r14,0", "mov~[rbp+0],0", "jz~FOO"]], [0, 0, 76, 0, 0, 3, 1, 1, 19, 8, 0.04236694677871148, ["mov     esi, [rbp+rhaystack.cur.wc]", "test    esi, esi", "jnz     short loc_6889"], ["mov~esi,[rbp+0]", "test~esi,esi", "jnz~FOO"]], [2, 0, 76, 0, 0, 3, 0, 1, 20, 8, 0.016666666666666666, ["mov     [rbp+rhaystack.cur.bytes], 1", "mov     [rbp+rhaystack.cur.wc_valid], 0", "jmp     loc_6889"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 8, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5718; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aMbsinitIterSta; \"mbsinit (&iter->state)\"", "mov     edx, 8Eh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 114, 0, 1, 4, 1, 2, 7, 7, 0.004201680672268907, ["mov     rdi, [rbp+ps]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_6E8F"], ["mov~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 76, 0, 1, 4, 1, 2, 19, 7, 0.009313725490196078, ["lea     rdi, [rbx+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_6E8F"], ["lea~rdi,[rbx+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 76, 0, 0, 3, 1, 1, 17, 1, 0.008578431372549019, ["mov     eax, [rbp+phaystack.cur.wc]", "test    eax, eax", "jnz     loc_6ED2"], ["mov~eax,[rbp+0]", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, -1, 0.015966386554621848, ["mov     rbx, [rbp+var_38]", "xor     rbx, fs:28h", "jnz     loc_6EAE"], ["mov~rbx,[rbp+0]", "xor~rbx,<TAG>", "jnz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 18, 6, 0.1054971988795518, ["cmp     [rbp+rhaystack.in_shift], 0", "jnz     loc_6B10"], ["cmp~[rbp+0],0", "jnz~FOO"]], [1, 0, 76, 0, 0, 2, 0, 1, 17, 8, 0.02703081232492997, ["cmp     [rbp+rhaystack.cur.wc_valid], 0", "jz      short loc_6C8F"], ["cmp~[rbp+0],0", "jz~FOO"]], [2, 0, 114, 0, 0, 4, 0, 1, 9, 2, 0.004971988795518207, ["mov     rax, [rbp+needle]", "mov     [rbp+n], 1", "cmp     byte ptr [rax], 0", "jnz     loc_6EB3"], ["mov~rax,[rbp+0]", "mov~[rbp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 114, 0, 0, 3, 1, 1, 10, 1, 0.009313725490196078, ["mov     r9d, [rbp+var_DC]", "test    r9d, r9d", "jnz     loc_6ED2"], ["mov~r9d,[rbp+0]", "test~r9d,r9d", "jnz~FOO"]], [1, 0, 76, 0, 1, 6, 1, 2, 16, 11, 0.03202614379084967, ["mov     rax, [rbp+ps]", "mov     [rbp+phaystack.cur.wc_valid], 1", "lea     rdi, [rax+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_6DE0"], ["mov~rax,[rbp+0]", "mov~[rbp+0],0", "lea~rdi,[rax+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 10, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5718; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aIterCurPtr0; \"*iter->cur.ptr == '\\\\0'\"", "mov     edx, 0AAh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [2, 0, 76, 0, 0, 4, 0, 1, 22, 2, 0.010154061624649859, ["mov     rax, [rbp+rhaystack.cur.ptr]", "mov     [rbp+rhaystack.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_6EB3"], ["mov~rax,[rbp+0]", "mov~[rbp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 76, 0, 0, 4, 0, 1, 21, 2, 0.009593837535014004, ["mov     rax, [rbp+rhaystack.cur.ptr]", "mov     [rbp+rhaystack.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_6EB3"], ["mov~rax,[rbp+0]", "mov~[rbp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 11, 0, 0.0, ["call    mbuiter_multi_next_0"], ["call~FOO"]], [0, 0, 76, 0, 0, 3, 1, 1, 23, 1, 0.006337535014005601, ["mov     edi, [rbp+rhaystack.cur.wc]", "test    edi, edi", "jnz     loc_6ED2"], ["mov~edi,[rbp+0]", "test~edi,edi", "jnz~FOO"]], [0, 0, 76, 0, 0, 3, 1, 1, 22, 1, 0.006092436974789915, ["mov     ecx, [rbp+rhaystack.cur.wc]", "test    ecx, ecx", "jnz     loc_6ED2"], ["mov~ecx,[rbp+0]", "test~ecx,ecx", "jnz~FOO"]], [2, 0, 76, 0, 0, 5, 1, 1, 17, 10, 0.02131185807656396, ["mov     edx, [rbp+phaystack.cur.wc]", "mov     [rbp+phaystack.in_shift], 0", "mov     [rbp+phaystack.next_done], 1", "test    edx, edx", "jnz     loc_69D1"], ["mov~edx,[rbp+0]", "mov~[rbp+0],0", "mov~[rbp+0],0", "test~edx,edx", "jnz~FOO"]], [1, 0, 3, 0, 1, 4, 0, 2, 14, -1, 0.0203781512605042, ["mov     rdi, memory; p", "call    freea", "mov     eax, 1", "jmp     loc_6912"], ["mov~rdi,memory", "call~FOO", "mov~eax,0", "jmp~FOO"]], [0, 0, 76, 0, 0, 3, 1, 1, 13, 10, 0.06600140056022409, ["mov     edx, [rbp+phaystack.cur.wc]", "test    edx, edx", "jz      loc_6AE0"], ["mov~edx,[rbp+0]", "test~edx,edx", "jz~FOO"]], [3, 0, 76, 0, 0, 5, 0, 0, 20, 9, 0.00469187675070028, ["mov     [rbp+rhaystack.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rbp+rhaystack.cur.wc_valid], 1", "mov     [rbp+rhaystack.next_done], 1", "mov     [rbp+rhaystack.cur.wc], eax"], ["mov~[rbp+0],0", "movsx~eax,<TAG>", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],eax"]], [1, 0, 114, 0, 0, 5, 1, 1, 10, 11, 0.03175770308123249, ["mov     r8d, [rbp+var_DC]", "mov     [rbp+var_100], 0", "mov     [rbp+var_F4], r14b", "test    r8d, r8d", "jnz     loc_65F7"], ["mov~r8d,[rbp+0]", "mov~[rbp+0],0", "mov~[rbp+0],r14b", "test~r8d,r8d", "jnz~FOO"]], [0, 0, 88, 0, 0, 2, 0, 1, 15, 10, 0.0163515406162465, ["mov     [table+i*8+0], i", "jmp     loc_67A1"], ["mov~[table+0],i", "jmp~FOO"]], [0, 0, 88, 0, 0, 2, 1, 1, 14, 11, 0.01740196078431373, ["test    j, j", "jz      loc_6CF8"], ["test~j,j", "jz~FOO"]], [0, 0, 90, 0, 0, 1, 0, 0, 11, 10, 0.03091736694677871, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [2, 0, 120, 1, 1, 21, 1, 2, 0, 11, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "push    rbx", "mov     rbx, needle_0", "sub     rsp, 108h", "mov     [rbp+haystack], haystack_0", "mov     haystack_0, needle_0; string", "mov     rax, fs:28h", "mov     [rbp+var_38], rax", "xor     eax, eax", "mov     [rbp+resultp], resultp_0", "call    mbslen", "mov     rsi, rax", "mov     [rbp+m], rax", "mov     m_0, 492492492492492h", "cmp     m_0, rax", "ja      loc_6910"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "push~rbx", "mov~rbx,needle_0", "sub~rsp,0", "mov~[rbp+0],haystack_0", "mov~haystack_0,needle_0", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],resultp_0", "call~FOO", "mov~rsi,rax", "mov~[rbp+0],rax", "mov~m_0,0", "cmp~m_0,rax", "ja~FOO"]], [2, 0, 76, 0, 0, 3, 0, 1, 23, 9, 0.010119047619047618, ["mov     [rbp+rhaystack.in_shift], 0", "mov     [rbp+rhaystack.next_done], 1", "jmp     loc_68FC"], ["mov~[rbp+0],0", "mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 20, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 76, 0, 0, 1, 0, 0, 21, 6, 0.005952380952380952, ["mov     [rbp+rhaystack.in_shift], 1"], ["mov~[rbp+0],0"]], [0, 0, 3, 0, 0, 1, 1, 0, 1, -1, 0.0010504201680672268, ["xor     eax, eax"], ["xor~eax,eax"]], [0, 0, 116, 0, 0, 2, 1, 1, 3, 8, 0.03221288515406162, ["test    memory, memory", "jz      loc_6910"], ["test~memory,memory", "jz~FOO"]], [0, 0, 114, 0, 0, 3, 1, 1, 8, 10, 0.14443277310924368, ["mov     r8d, [rbp+var_DC]", "test    r8d, r8d", "jz      loc_6708"], ["mov~r8d,[rbp+0]", "test~r8d,r8d", "jz~FOO"]], [1, 0, 76, 0, 0, 1, 0, 0, 20, 6, 0.005952380952380952, ["mov     [rbp+rhaystack.in_shift], 1"], ["mov~[rbp+0],0"]], [1, 0, 88, 0, 0, 4, 1, 0, 10, 15, 0.02387955182072829, ["lea     r14, [memory+30h]", "xor     ebx, ebx", "mov     r15d, 2", "nop     dword ptr [rax+rax+00h]"], ["lea~r14,[memory+0]", "xor~ebx,ebx", "mov~r15d,0", "nop~[word ptr [rax+0]"]], [0, 0, 0, 0, 0, 8, 0, 0, 3, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [0, 0, 88, 0, 0, 2, 0, 1, 11, 14, 0.029551820728291316, ["movzx   ecx, byte ptr [b+10h]", "jmp     short loc_675D"], ["movzx~ecx,[yte ptr [b+0]", "jmp~FOO"]], [4, 0, 117, 3, 0, 6, 2, 0, 2, 9, 0.008053221288515405, ["add     rdi, 2Eh", "and     rdi, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rdi", "lea     r12, [rsp+130h+resultp+7]", "and     r12, 0FFFFFFFFFFFFFFF0h", "add     r12, 10h"], ["add~rdi,0", "and~rdi,0", "sub~rsp,rdi", "lea~r12,[rsp+0]", "and~r12,0", "add~r12,0"]], [1, 0, 88, 0, 0, 2, 0, 1, 13, 12, 0.012254901960784315, ["cmp     byte ptr [rax+10h], 0", "jz      short loc_676C"], ["cmp~[yte ptr [rax+0],0", "jz~FOO"]], [1, 0, 88, 2, 0, 5, 1, 1, 12, 13, 0.04005602240896358, ["lea     rax, [j+j*2]", "shl     rax, 4", "add     rax, memory", "test    cl, cl", "jnz     short loc_6740"], ["lea~rax,<TAG>", "shl~rax,0", "add~rax,memory", "test~cl,cl", "jnz~FOO"]], [1, 0, 76, 0, 3, 12, 0, 4, 19, 5, 0.0819327731092437, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rbp+rhaystack.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rbp+rhaystack.cur.ptr]; s", "lea     rcx, [rbx+4]; p", "lea     rdi, [rbx+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rbp+rhaystack.cur.bytes], rax", "jz      short loc_6BB0"], ["call~FOO", "mov~rdi,[rbp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rbp+0]", "lea~rcx,[rbx+0]", "lea~rdi,[rbx+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rbp+0],rax", "jz~FOO"]], [0, 0, 88, 0, 0, 3, 0, 1, 14, 11, 0.015126050420168069, ["mov     eax, [rax+14h]", "cmp     [b+14h], eax", "jz      short loc_6792"], ["mov~eax,[rax+0]", "cmp~[b+0],eax", "jz~FOO"]], [0, 0, 88, 0, 0, 3, 0, 1, 13, 12, 0.028291316526610648, ["mov     rdx, [b+8]; n", "cmp     rdx, [rax+8]", "jnz     short loc_674F"], ["mov~rdx,[b+0]", "cmp~rdx,[rax+0]", "jnz~FOO"]], [0, 0, 88, 0, 1, 7, 1, 2, 14, 11, 0.012219887955182075, ["mov     rsi, [rax]; s2", "mov     rdi, [b]; s1", "mov     byte ptr [rbp+ps], cl", "call    _memcmp", "test    eax, eax", "movzx   ecx, byte ptr [rbp+ps]", "jnz     short loc_674F"], ["mov~rsi,<TAG>", "mov~rdi,<TAG>", "mov~[yte ptr [rbp+0],cl", "call~FOO", "test~eax,eax", "movzx~ecx,[yte ptr [rbp+0]", "jnz~FOO"]], [0, 0, 76, 0, 0, 2, 1, 1, 21, 3, 0.04047619047619047, ["test    rax, rax", "jnz     short loc_6B80"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 88, 1, 0, 1, 0, 0, 15, 14, 0.0012605042016806721, ["sub     j, [table+j*8+0]"], ["sub~j,[table+0]"]], [1, 0, 76, 0, 0, 2, 0, 1, 17, 11, 0.0005602240896358543, ["mov     [rbp+phaystack.next_done], 1", "jmp     loc_69C6"], ["mov~[rbp+0],0", "jmp~FOO"]], [0, 0, 76, 0, 0, 2, 1, 1, 20, 3, 0.03991596638655462, ["test    rax, rax", "jnz     short loc_6D94"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 88, 2, 0, 4, 0, 0, 15, 10, 0.03546918767507003, ["add     j, 1", "mov     rax, i", "sub     rax, j", "mov     [table+i*8+0], rax"], ["add~j,0", "mov~rax,i", "sub~rax,j", "mov~[table+0],rax"]], [2, 0, 114, 0, 0, 9, 1, 0, 6, 8, 0.10560224089635854, ["mov     rcx, [rbp+needle]", "lea     rsi, is_basic_table", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [rsi+rax*4]", "bt      eax, edx", "jnb     loc_6938"], ["mov~rcx,[rbp+0]", "lea~rsi,<TAG>", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,edx", "jnb~FOO"]], [3, 0, 76, 0, 0, 5, 0, 0, 14, 11, 0.01803221288515406, ["mov     [rbp+phaystack.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rbp+phaystack.cur.wc_valid], 1", "mov     [rbp+phaystack.next_done], 1", "mov     [rbp+phaystack.cur.wc], eax"], ["mov~[rbp+0],0", "movsx~eax,<TAG>", "mov~[rbp+0],0", "mov~[rbp+0],0", "mov~[rbp+0],eax"]], [1, 0, 114, 0, 0, 5, 0, 0, 7, 11, 0.10539215686274508, ["mov     [rbp+n], 1", "movsx   eax, byte ptr [rcx]", "mov     [rbp+var_E0], r14b", "mov     [rbp+var_F4], r14b", "mov     [rbp+var_DC], eax"], ["mov~[rbp+0],0", "movsx~eax,<TAG>", "mov~[rbp+0],r14b", "mov~[rbp+0],r14b", "mov~[rbp+0],eax"]]], "func_feature": [36, 45, 127, 5, 121, 185, 1, 509, 0.04782, 6, 29], "succs": [[59, 7], [0], [0, 24], [67], [113, 3], [10], [65, 5], [52, 28], [31, 7], [7], [22, 15], [10], [10], [98, 70], [90, 13], [21], [101], [16, 91], [8], [18, 103], [105, 18], [27, 45], [21], [48, 77], [25, 23], [8, 53], [8], [45], [34, 119], [9], [50, 29], [89, 35], [100], [32, 106], [70, 38], [41], [35], [35], [52], [56], [58, 39], [24, 46], [41, 2], [118, 62], [43], [43], [24, 1], [72, 51], [30, 47], [9], [49, 116], [56], [36, 54], [76, 55], [64, 37], [67, 68], [9, 97], [56], [56], [75], [68], [96, 60], [11, 6], [62], [80, 66], [17, 78], [73, 81], [26, 76], [97, 67], [67], [], [70, 63], [102, 70], [80, 84], [], [104, 74], [109, 14], [9, 57], [81, 79], [17, 84], [115, 87], [], [81, 85], [81, 86], [], [84, 61], [40, 84], [88, 42], [75], [88, 42], [68], [12, 94], [20], [114, 92], [19], [33, 99], [68], [], [109], [75], [99, 44], [19, 12], [30], [105], [], [108], [100], [110, 111], [107, 111], [4, 69], [93, 117], [112, 93], [93, 117], [82, 61], [108], [89], [40, 83], [20], [120, 71], [89], [101]], "fname": "knuth_morris_pratt_multibyte", "n_num": 121}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 145, 0, 0, 3, 1, 1, 0, 0, 0.004808943333533496, ["mov     r9d, [rsp+1C8h+iter_needle_last_ccount.cur.wc]", "test    r9d, r9d", "jnz     loc_7C74"], ["mov~r9d,[rsp+0]", "test~r9d,r9d", "jnz~FOO"]], [2, 0, 145, 0, 0, 4, 0, 1, 17, 12, 0.0055620608899297425, ["mov     rax, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_7F8D"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 145, 0, 1, 4, 1, 2, 23, 17, 0.005314357773374167, ["lea     rdi, [r15+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_7F60"], ["lea~rdi,[r15+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 145, 0, 0, 8, 1, 0, 22, 17, 0.013961448387677896, ["mov     rcx, [rsp+1C8h+rhaystack.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_75F8"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [1, 0, 145, 0, 0, 1, 0, 0, 24, 16, 0.004653816129225965, ["mov     [rsp+1C8h+rhaystack.in_shift], 1"], ["mov~[rsp+0],0"]], [1, 0, 145, 0, 0, 2, 0, 1, 21, 14, 0.12778478352248845, ["cmp     [rsp+1C8h+rhaystack.cur.wc_valid], 0", "jnz     loc_732D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 20, 15, 0.1978021978021978, ["cmp     [rsp+1C8h+rhaystack.next_done], 0", "jz      loc_72D8"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 152, 0, 0, 3, 1, 1, 7, 16, 0.004713865369603075, ["mov     eax, [rsp+1C8h+iter_needle.cur.wc]", "test    eax, eax", "jnz     loc_7C74"], ["mov~eax,[rsp+0]", "test~eax,eax", "jnz~FOO"]], [2, 0, 153, 0, 0, 4, 0, 1, 6, 17, 0.0005404431633939831, ["mov     rax, [rsp+1C8h+iter_needle.cur.ptr]", "mov     [rsp+1C8h+iter_needle.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_7F8D"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 145, 0, 1, 6, 0, 2, 24, 14, 0.003813126763946436, ["mov     rdi, [rsp+1C8h+rhaystack.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+rhaystack.cur.wc_valid], 0", "mov     [rsp+1C8h+rhaystack.cur.bytes], rax", "mov     [rsp+1C8h+rhaystack.next_done], 1", "jmp     loc_7413"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 23, 15, 0.036449888908905305, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_77F0"], ["cmp~rax,0", "jz~FOO"]], [2, 0, 145, 1, 1, 6, 1, 2, 17, 10, 0.022398366660661743, ["mov     rdi, [rsp+1C8h+resultp]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 1", "add     rdi, 4; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_7F14"], ["mov~rdi,[rsp+0]", "mov~[rsp+0],0", "add~rdi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 16, 11, 0.024057226926079384, ["test    rax, rax", "jnz     short loc_7E06"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 145, 0, 0, 3, 0, 1, 22, 13, 0.1706149042214616, ["mov     rdx, [rsp+1C8h+rhaystack.cur.bytes]; n", "cmp     rdx, [rsp+1C8h+rneedle.cur.bytes]", "jz      loc_76D0"], ["mov~rdx,[rsp+0]", "cmp~rdx,[rsp+0]", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 23, 14, 0.040293040293040296, ["cmp     [rsp+1C8h+rneedle.cur.wc_valid], 0", "jz      loc_7413"], ["cmp~[rsp+0],0", "jz~FOO"]], [3, 0, 145, 0, 0, 4, 0, 1, 23, 14, 0.014712063892391762, ["mov     [rsp+1C8h+rhaystack.cur.bytes], 1", "mov     [rsp+1C8h+rhaystack.cur.wc_valid], 0", "mov     [rsp+1C8h+rhaystack.next_done], 1", "jmp     loc_7413"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 26, 16, 0.0007205908845253108, ["mov     [rsp+1C8h+rhaystack.next_done], 1", "jmp     loc_732D"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 1, 5, 1, 2, 25, 16, 0.02654176424668228, ["lea     rdi, [r15+4]; ps", "mov     [rsp+1C8h+rhaystack.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_7820"], ["lea~rdi,[r15+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 145, 0, 0, 1, 0, 0, 13, 12, 0.1585149822854741, ["mov     rcx, [rsp+1C8h+iter_haystack.cur.bytes]"], ["mov~rcx,[rsp+0]"]], [0, 0, 145, 0, 0, 3, 0, 1, 12, 4, 0.15326317580415943, ["mov     eax, [rsp+1C8h+iter_needle.cur.wc]", "cmp     [rsp+1C8h+iter_haystack.cur.wc], eax", "jnz     loc_7429"], ["mov~eax,[rsp+0]", "cmp~[rsp+0],eax", "jnz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 24, 13, 0.03613463039692548, ["test    al, al", "lea     rdx, [rbx+1]", "jnz     loc_7429"], ["test~al,al", "lea~rdx,[rbx+0]", "jnz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 15, 14, 0.03223393182409576, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_7AF8"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 145, 0, 3, 13, 0, 4, 14, 14, 0.05215526731920175, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+1C8h+resultp]", "mov     rdx, rax; n", "lea     rcx, [rsi+4]; p", "lea     rdi, [rsi+24h]; pwc", "mov     rsi, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]; s", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], rax", "jz      loc_7AB8"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "mov~rdx,rax", "lea~rcx,[rsi+0]", "lea~rdi,[rsi+0]", "mov~rsi,[rsp+0]", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [2, 0, 145, 0, 0, 3, 0, 1, 18, 9, 0.008887287575812166, ["mov     [rsp+1C8h+iter_needle_last_ccount.in_shift], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "jmp     loc_7B75"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 145, 0, 3, 13, 0, 4, 15, 6, 0.04399357473127967, ["mov     [rsp+1C8h+rneedle.in_shift], 1", "call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+rneedle.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rcx, [rsp+1C8h+resultp]; p", "mov     rsi, [rsp+1C8h+rneedle.cur.ptr]; s", "lea     rdi, [rbp+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+rneedle.cur.bytes], rax", "jz      loc_7D58"], ["mov~[rsp+0],0", "call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rcx,[rsp+0]", "mov~rsi,[rsp+0]", "lea~rdi,[rbp+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 145, 0, 1, 5, 1, 2, 14, 7, 0.0452496046758342, ["mov     rdi, rcx; ps", "mov     [rsp+1C8h+resultp], rcx", "call    _mbsinit", "test    eax, eax", "jz      loc_7F60"], ["mov~rdi,rcx", "mov~[rsp+0],rcx", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 16, 13, 0.02528323225044536, ["test    rax, rax", "jnz     short loc_7A6B"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 24, 0, 0, 4, 1, 1, 5, -1, 0.003948237554794932, ["mov     r8, [rsp+1C8h+needle_last_ccount]", "movzx   esi, byte ptr [r8+1]", "test    sil, sil", "jz      loc_7063"], ["mov~r8,[rsp+0]", "movzx~esi,[yte ptr [r8+0]", "test~sil,sil", "jz~FOO"]], [1, 0, 24, 1, 0, 5, 0, 1, 4, -1, 0.007356031946195881, ["add     r13, 1", "cmp     sil, r15b", "lea     rbx, [rdx+1]", "lea     r14, [r12+1]", "jz      loc_7830"], ["add~r13,0", "cmp~sil,r15b", "lea~rbx,[rdx+0]", "lea~r14,[r12+0]", "jz~FOO"]], [5, 0, 161, 0, 0, 15, 1, 0, 1, 15, 0.00468384074941452, ["mov     rax, needle_0", "lea     r13, is_basic_table", "mov     [rsp+1C8h+iter_needle.cur.ptr], needle_0", "movsx   edx, byte ptr [rax]", "lea     needle_0, [rsp+1C8h+iter_needle]", "mov     [rsp+1C8h+iter_needle.in_shift], 0", "mov     qword ptr [rsp+1C8h+iter_needle.state.__count], 0", "mov     [rsp+1C8h+iter_needle.next_done], 0", "lea     rbp, [rbx+4]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_7CB0"], ["mov~rax,needle_0", "lea~r13,<TAG>", "mov~[rsp+0],needle_0", "movsx~edx,<TAG>", "lea~needle_0,[rsp+0]", "mov~[rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],0", "lea~rbp,[rbx+0]", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [2, 0, 183, 1, 1, 16, 1, 2, 0, 16, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, haystack", "push    rbp", "push    rbx", "mov     rbx, needle_0", "sub     rsp, 198h", "mov     rax, fs:28h", "mov     [rsp+1C8h+var_40], rax", "xor     eax, eax", "mov     [rsp+1C8h+needle_last_ccount], needle_0", "call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "ja      loc_7000"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,haystack", "push~rbp", "push~rbx", "mov~rbx,needle_0", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~[rsp+0],needle_0", "call~FOO", "cmp~rax,0", "ja~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 16, 5, 0.03156338197321803, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_7EB3"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 145, 0, 3, 12, 0, 4, 22, 15, 0.05578574431033447, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+rhaystack.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+1C8h+rhaystack.cur.ptr]; s", "lea     rcx, [r15+4]; p", "lea     rdi, [r15+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+rhaystack.cur.bytes], rax", "jz      loc_7788"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[r15+0]", "lea~rdi,[r15+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 21, 16, 0.06539362277067196, ["cmp     [rsp+1C8h+rhaystack.in_shift], 0", "jnz     loc_7611"], ["cmp~[rsp+0],0", "jnz~FOO"]], [3, 0, 145, 2, 0, 5, 0, 1, 11, 11, 0.2557572209211552, ["add     [rsp+1C8h+iter_haystack.cur.ptr], rcx", "add     r14, 1", "cmp     [rsp+1C8h+iter_haystack.in_shift], 0", "mov     [rsp+1C8h+iter_haystack.next_done], 0", "jz      loc_7148"], ["add~[rsp+0],rcx", "add~r14,0", "cmp~[rsp+0],0", "mov~[rsp+0],0", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 0, 1, 10, 6, 0.13667957725334776, ["mov     rcx, [rsp+1C8h+iter_haystack.cur.bytes]", "cmp     rcx, [rsp+1C8h+iter_needle.cur.bytes]", "jnz     loc_7431"], ["mov~rcx,[rsp+0]", "cmp~rcx,[rsp+0]", "jnz~FOO"]], [0, 0, 145, 0, 1, 8, 1, 2, 11, 5, 0.041644148201525254, ["mov     rsi, [rsp+1C8h+iter_needle.cur.ptr]; s2", "mov     rdi, [rsp+1C8h+iter_haystack.cur.ptr]; s1", "mov     rdx, rcx; n", "mov     [rsp+1C8h+resultp], rcx", "call    _memcmp", "test    eax, eax", "mov     rcx, [rsp+1C8h+resultp]", "jnz     loc_7431"], ["mov~rsi,[rsp+0]", "mov~rdi,[rsp+0]", "mov~rdx,rcx", "mov~[rsp+0],rcx", "call~FOO", "test~eax,eax", "mov~rcx,[rsp+0]", "jnz~FOO"]], [2, 0, 145, 0, 0, 4, 0, 1, 18, 5, 0.005321863928421304, ["mov     rax, [rsp+1C8h+rneedle.cur.ptr]", "mov     [rsp+1C8h+rneedle.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_7F8D"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 17, 4, 0.022946315979102853, ["test    rax, rax", "jnz     short loc_7C80"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 145, 0, 1, 6, 1, 2, 14, 11, 0.0052392962229027805, ["lea     rax, [rsp+1C8h+iter_needle_last_ccount]", "lea     rdi, [rsp+1C8h+iter_needle_last_ccount.state]; ps", "mov     [rsp+1C8h+resultp], rax", "call    _mbsinit", "test    eax, eax", "jz      loc_7F60"], ["lea~rax,[rsp+0]", "lea~rdi,[rsp+0]", "mov~[rsp+0],rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 145, 0, 0, 8, 1, 0, 13, 10, 0.028575932264456854, ["mov     rcx, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_7E39"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [3, 0, 149, 0, 0, 4, 0, 0, 2, 14, 0.008617065994115174, ["mov     [rsp+1C8h+iter_needle.cur.bytes], 1", "mov     [rsp+1C8h+iter_needle.cur.wc], edx", "mov     [rsp+1C8h+iter_needle.cur.wc_valid], 1", "mov     [rsp+1C8h+iter_needle.next_done], 1"], ["mov~[rsp+0],0", "mov~[rsp+0],edx", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [0, 0, 24, 0, 0, 3, 0, 1, 7, -1, 0.0032126343601753438, ["cmp     sil, dil", "lea     rbx, [rdx+2]", "jnz     loc_6F82"], ["cmp~sil,dil", "lea~rbx,[rdx+0]", "jnz~FOO"]], [0, 0, 24, 0, 0, 3, 1, 1, 6, -1, 0.003272683600552453, ["movzx   edi, byte ptr [r14]", "test    dil, dil", "jz      loc_76C8"], ["movzx~edi,<TAG>", "test~dil,dil", "jz~FOO"]], [0, 0, 145, 0, 0, 2, 0, 0, 5, 11, 0.16935136812185986, ["lea     rax, [rsp+1C8h+iter_haystack]", "mov     [rsp+1C8h+resultp], rax"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax"]], [9, 0, 146, 0, 0, 19, 2, 1, 4, 12, 0.06398246562180988, ["mov     rax, [rsp+1C8h+needle_last_ccount]", "mov     [rsp+1C8h+iter_haystack.in_shift], 0", "xor     r14d, r14d", "xor     ebx, ebx", "cmp     [rsp+1C8h+iter_haystack.in_shift], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.in_shift], 0", "mov     qword ptr [rsp+1C8h+iter_needle_last_ccount.state.__count], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 0", "lea     rbp, [rsp+1C8h+rneedle]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.ptr], rax", "lea     rax, [rsp+1C8h+result]", "mov     [rsp+1C8h+iter_haystack.cur.ptr], haystack", "mov     qword ptr [rsp+1C8h+iter_haystack.state.__count], 0", "mov     [rsp+1C8h+iter_haystack.next_done], 0", "lea     r15, [rsp+1C8h+rhaystack]", "mov     [rsp+1C8h+last_ccount], 0", "mov     byte ptr [rsp+1C8h+count], 1", "mov     [rsp+1C8h+var_1A0], rax", "jnz     loc_7453"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "xor~r14d,r14d", "xor~ebx,ebx", "cmp~[rsp+0],0", "mov~[rsp+0],0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],0", "lea~rbp,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],haystack", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],0", "lea~r15,[rsp+0]", "mov~[rsp+0],0", "mov~[yte ptr [rsp+0],0", "mov~[rsp+0],rax", "jnz~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 24, 17, 0.028012970635921456, ["test    rax, rax", "jnz     short loc_768B"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 148, 0, 0, 3, 1, 1, 3, 13, 0.03987269561040053, ["mov     eax, [rsp+1C8h+iter_needle.cur.wc]", "test    eax, eax", "jnz     short loc_70BB"], ["mov~eax,[rsp+0]", "test~eax,eax", "jnz~FOO"]], [2, 0, 149, 0, 0, 3, 0, 1, 7, 14, 0.009097459917132048, ["mov     [rsp+1C8h+iter_needle.in_shift], 0", "mov     [rsp+1C8h+iter_needle.next_done], 1", "jmp     loc_705B"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 149, 0, 0, 2, 0, 1, 7, 14, 0.009097459917132048, ["mov     [rsp+1C8h+iter_needle.next_done], 1", "jmp     loc_705B"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 4, -1, 0.0016963910406533357, ["mov     rax, r12"], ["mov~rax,r12"]], [0, 0, 4, 0, 0, 1, 0, 1, 10, -1, 0.0003602954422626554, ["jmp     loc_7063"], ["jmp~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 18, 13, 0.004728877679697353, ["mov     r11d, [rsp+1C8h+iter_needle_last_ccount.cur.wc]", "test    r11d, r11d", "jnz     loc_7C74"], ["mov~r11d,[rsp+0]", "test~r11d,r11d", "jnz~FOO"]], [2, 0, 145, 0, 0, 4, 0, 1, 17, 14, 0.005391921375527933, ["mov     rax, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_7F8D"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 24, 1, 0, 4, 0, 1, 8, -1, 0.0022218218939530415, ["neg     rdx", "lea     r9, [r8+rdx]", "add     rdx, r12", "jmp     short loc_788A"], ["neg~rdx", "lea~r9,<TAG>", "add~rdx,r12", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 19, 2, 0.008451930583078124, ["mov     [rsp+1C8h+rneedle.next_done], 1", "jmp     loc_72A1"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 1, 5, 1, 2, 18, 3, 0.02152765267519366, ["lea     rdi, [rbp+4]; ps", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_7E68"], ["lea~rdi,[rbp+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 19, 4, 0.004693848956144041, ["mov     edi, [rsp+1C8h+rneedle.cur.wc]; iter", "test    edi, edi", "jz      short loc_7C80"], ["mov~edi,[rsp+0]", "test~edi,edi", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, -1, 0.0, ["call    mbuiter_multi_next_0"], ["call~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 10, 11, 0.005614603975259711, ["mov     eax, [rsp+1C8h+iter_haystack.cur.wc]", "test    eax, eax", "jnz     loc_7C74"], ["mov~eax,[rsp+0]", "test~eax,eax", "jnz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 22, 18, 0.004924037710922957, ["mov     ecx, [rsp+1C8h+rneedle.cur.wc]", "test    ecx, ecx", "jnz     loc_7C74"], ["mov~ecx,[rsp+0]", "test~ecx,ecx", "jnz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 26, 17, 0.004713865369603075, ["mov     eax, [rsp+1C8h+rhaystack.cur.wc]", "test    eax, eax", "jnz     loc_7C74"], ["mov~eax,[rsp+0]", "test~eax,eax", "jnz~FOO"]], [2, 0, 145, 0, 0, 4, 0, 1, 25, 18, 0.005374407013751276, ["mov     rax, [rsp+1C8h+rhaystack.cur.ptr]", "mov     [rsp+1C8h+rhaystack.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_7F8D"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, -1, 0.010628715546748334, ["mov     rbx, [rsp+1C8h+var_40]", "xor     rbx, fs:28h", "jnz     loc_7F88"], ["mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "jnz~FOO"]], [0, 0, 26, 0, 0, 5, 1, 1, 1, -1, 0.0007506155047138654, ["mov     rax, [rsp+1C8h+needle_last_ccount]", "movzx   r15d, byte ptr [rax]", "mov     rax, haystack", "test    r15b, r15b", "jz      loc_7066"], ["mov~rax,[rsp+0]", "movzx~r15d,<TAG>", "mov~rax,haystack", "test~r15b,r15b", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 21, -1, 0.002717228127064193, ["mov     rax, [rsp+1C8h+iter_haystack.cur.ptr]", "jmp     loc_7066"], ["mov~rax,[rsp+0]", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 3, -1, 0.006695490302047679, ["xor     eax, eax", "jmp     loc_7066"], ["xor~eax,eax", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 10, -1, 0.0042935206869633095, ["mov     rax, [rsp+1C8h+result]", "jmp     loc_7066"], ["mov~rax,[rsp+0]", "jmp~FOO"]], [6, 0, 145, 1, 0, 24, 1, 0, 13, 3, 0.19119928341239825, ["movdqa  xmm0, xmmword ptr [rsp+1C8h+iter_haystack.in_shift]", "lea     rcx, [rbp+4]", "mov     [rsp+1C8h+rneedle.in_shift], 0", "mov     qword ptr [rbp+4], 0", "movaps  xmmword ptr [rsp+1C8h+rhaystack.in_shift], xmm0", "mov     [rsp+1C8h+rneedle.next_done], 0", "mov     [rsp+1C8h+rhaystack.next_done], 0", "movdqa  xmm0, xmmword ptr [rsp+1C8h+iter_haystack.cur.ptr]", "movaps  xmmword ptr [rsp+1C8h+rhaystack.cur.ptr], xmm0", "mov     rax, [rsp+1C8h+rhaystack.cur.bytes]", "add     [rsp+1C8h+rhaystack.cur.ptr], rax", "mov     rax, [rsp+1C8h+needle_last_ccount]", "movdqa  xmm0, xmmword ptr [rsp+1C8h+iter_haystack.cur.wc_valid]", "movsx   edx, byte ptr [rax]", "mov     [rsp+1C8h+rneedle.cur.ptr], rax", "movaps  xmmword ptr [rsp+1C8h+rhaystack.cur.wc_valid], xmm0", "mov     eax, edx", "shr     al, 5", "movdqa  xmm0, xmmword ptr [rsp+1C8h+iter_haystack.cur.buf+8]", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "movaps  xmmword ptr [rsp+1C8h+rhaystack.cur.buf+8], xmm0", "bt      eax, edx", "jnb     loc_7BE0"], ["movdqa~xmm0,[mmword ptr [rsp+0]", "lea~rcx,[rbp+0]", "mov~[rsp+0],0", "mov~[word ptr [rbp+0],0", "movaps~[mmword ptr [rsp+0],xmm0", "mov~[rsp+0],0", "mov~[rsp+0],0", "movdqa~xmm0,[mmword ptr [rsp+0]", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,[rsp+0]", "add~[rsp+0],rax", "mov~rax,[rsp+0]", "movdqa~xmm0,[mmword ptr [rsp+0]", "movsx~edx,<TAG>", "mov~[rsp+0],rax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~eax,edx", "shr~al,0", "movdqa~xmm0,[mmword ptr [rsp+0]", "and~eax,0", "mov~eax,[r13+0]", "movaps~[mmword ptr [rsp+0],xmm0", "bt~eax,edx", "jnb~FOO"]], [0, 0, 145, 0, 0, 1, 0, 1, 12, 4, 0.038986969314838166, ["jmp     loc_71E0"], ["jmp~FOO"]], [1, 0, 151, 0, 1, 5, 1, 2, 6, 15, 0.014201645349186333, ["lea     rdi, [rbx+4]; ps", "mov     [rsp+1C8h+iter_needle.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_7E75"], ["lea~rdi,[rbx+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 145, 1, 1, 6, 1, 2, 17, 12, 0.023794511499429533, ["mov     rdi, [rsp+1C8h+resultp]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 1", "add     rdi, 4; ps", "call    _mbsinit", "test    eax, eax", "jz      short loc_7AD8"], ["mov~rdi,[rsp+0]", "mov~[rsp+0],0", "add~rdi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 24, 1, 0, 3, 0, 1, 11, -1, 0.001411157148862067, ["add     rbx, 1", "cmp     sil, dil", "jnz     loc_6F82"], ["add~rbx,0", "cmp~sil,dil", "jnz~FOO"]], [0, 0, 24, 0, 0, 3, 1, 1, 10, -1, 0.0017414279709361677, ["movzx   edi, byte ptr [rdx+rbx]", "test    dil, dil", "jz      loc_76C8"], ["movzx~edi,<TAG>", "test~dil,dil", "jz~FOO"]], [2, 0, 145, 2, 0, 5, 0, 1, 13, 12, 0.03396284953662003, ["mov     rax, [rsp+1C8h+iter_needle_last_ccount.cur.bytes]", "add     [rsp+1C8h+iter_needle_last_ccount.cur.ptr], rax", "sub     [rsp+1C8h+count], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 0", "jz      loc_7B20"], ["mov~rax,[rsp+0]", "add~[rsp+0],rax", "sub~[rsp+0],0", "mov~[rsp+0],0", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 13, 10, 0.05446466102203807, ["mov     r10d, [rsp+1C8h+iter_needle_last_ccount.cur.wc]", "test    r10d, r10d", "jnz     loc_78F9"], ["mov~r10d,[rsp+0]", "test~r10d,r10d", "jnz~FOO"]], [2, 0, 145, 0, 0, 3, 0, 1, 15, 13, 0.015297543986068576, ["mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 0", "jmp     loc_78F9"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 1, 5, 0, 2, 16, 13, 0.0023269080646129824, ["mov     rdi, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], rax", "jmp     loc_78F9"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 12, 11, 0.020476790968594248, ["cmp     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 0", "jnz     short loc_796E"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 198h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 24, 0, 0, 1, 0, 0, 8, -1, 0.001125923257070798, ["mov     eax, edx"], ["mov~eax,edx"]], [0, 0, 24, 0, 0, 3, 0, 1, 7, -1, 0.0031525851197982345, ["lea     try_kmp, [outer_loop_count+outer_loop_count*4+0]", "cmp     rax, rbx", "ja      loc_7090"], ["lea~try_kmp,[outer_loop_count+0]", "cmp~rax,rbx", "ja~FOO"]], [1, 0, 24, 2, 1, 9, 0, 2, 9, -1, 0.0002552092716027142, ["mov     rsi, rbx", "mov     rdi, needle_last_ccount_0; string", "sub     rsi, rcx; maxlen", "call    _strnlen", "add     needle_last_ccount_0, rax", "mov     rcx, rbx", "movzx   edx, byte ptr [rsp+1C8h+count]", "cmp     byte ptr [needle_last_ccount_0+0], 0", "jnz     loc_7090"], ["mov~rsi,rbx", "mov~rdi,needle_last_ccount_0", "sub~rsi,rcx", "call~FOO", "add~needle_last_ccount_0,rax", "mov~rcx,rbx", "movzx~edx,[yte ptr [rsp+0]", "cmp~[yte ptr [needle_last_ccount_0+0],0", "jnz~FOO"]], [0, 0, 24, 0, 0, 3, 1, 1, 9, -1, 0.002642166576592806, ["movzx   esi, byte ptr [r9+rbx]", "test    sil, sil", "jnz     short loc_7870"], ["movzx~esi,<TAG>", "test~sil,sil", "jnz~FOO"]], [2, 0, 145, 0, 0, 3, 0, 1, 18, 11, 0.009585359995196061, ["mov     [rsp+1C8h+iter_needle_last_ccount.in_shift], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "jmp     loc_796E"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 145, 0, 0, 4, 0, 0, 14, 2, 0.14132588722752656, ["mov     [rsp+1C8h+rneedle.cur.bytes], 1", "mov     [rsp+1C8h+rneedle.cur.wc], edx", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 1", "mov     [rsp+1C8h+rneedle.next_done], 1"], ["mov~[rsp+0],0", "mov~[rsp+0],edx", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [0, 0, 24, 0, 0, 4, 0, 1, 7, -1, 0.004773914609980183, ["movzx   esi, byte ptr [haystack]", "mov     r12, haystack", "mov     rdx, rbx", "jmp     loc_6F60"], ["movzx~esi,<TAG>", "mov~r12,haystack", "mov~rdx,rbx", "jmp~FOO"]], [1, 0, 24, 0, 0, 4, 1, 1, 6, -1, 0.005164234672431394, ["cmp     outer_loop_count, 9", "setnbe  dl", "and     dl, al", "jz      loc_7092"], ["cmp~outer_loop_count,0", "setnbe~dl", "and~dl,al", "jz~FOO"]], [0, 0, 24, 0, 0, 2, 1, 1, 10, -1, 0.0007656278148081427, ["xor     ebp, ebp", "jmp     loc_7092"], ["xor~ebp,ebp", "jmp~FOO"]], [1, 0, 145, 0, 3, 13, 0, 4, 6, 10, 0.17874907424087744, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+iter_haystack.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+1C8h+resultp]", "mov     rdx, rax; n", "lea     rcx, [rsi+4]; p", "lea     rdi, [rsi+24h]; pwc", "mov     rsi, [rsp+1C8h+iter_haystack.cur.ptr]; s", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+iter_haystack.cur.bytes], rax", "jz      loc_76F0"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "mov~rdx,rax", "lea~rcx,[rsi+0]", "lea~rdi,[rsi+0]", "mov~rsi,[rsp+0]", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 8, 11, 0.005224283912808503, ["mov     [rsp+1C8h+iter_haystack.in_shift], 1", "jmp     loc_7460"], ["mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 145, 0, 1, 6, 0, 2, 16, 8, 0.0038431513841349907, ["mov     rdi, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], rax", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "jmp     loc_7B86"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 15, 9, 0.03252416981925178, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_7E7F"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 7, 10, 0.03478102043675814, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_7BB0"], ["cmp~rax,0", "jz~FOO"]], [2, 0, 145, 0, 0, 3, 0, 1, 19, 2, 0.008451930583078124, ["mov     [rsp+1C8h+rneedle.in_shift], 0", "mov     [rsp+1C8h+rneedle.next_done], 1", "jmp     loc_72A1"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 15, 1, 0.16672671590704377, ["mov     esi, [rsp+1C8h+rneedle.cur.wc]", "test    esi, esi", "jz      loc_7FAC"], ["mov~esi,[rsp+0]", "test~esi,esi", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 0, 1, 13, 15, 0.04335805360395524, ["lea     rax, [rsp+1C8h+iter_needle_last_ccount]", "mov     [rsp+1C8h+resultp], rax", "jmp     loc_79EA"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 12, 13, 0.06534608378870674, ["cmp     [rsp+1C8h+iter_needle_last_ccount.in_shift], 0", "jnz     loc_7AA0"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 24, 0, 1, 8, 1, 2, 9, -1, 0.0016963910406533357, ["mov     rdx, [rsp+1C8h+resultp]; resultp", "mov     rsi, [rsp+1C8h+needle_last_ccount]; needle", "mov     rdi, haystack; haystack", "mov     [rsp+1C8h+count], rcx", "call    knuth_morris_pratt_unibyte", "test    al, al", "mov     rcx, [rsp+1C8h+count]", "jnz     loc_7EA9"], ["mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,haystack", "mov~[rsp+0],rcx", "call~FOO", "test~al,al", "mov~rcx,[rsp+0]", "jnz~FOO"]], [0, 0, 145, 0, 1, 7, 1, 2, 15, 8, 0.05327868852459016, ["mov     rdx, [rsp+1C8h+var_1A0]; resultp", "mov     rsi, [rsp+1C8h+needle_last_ccount]; needle", "mov     rdi, haystack; haystack", "call    knuth_morris_pratt_multibyte", "test    al, al", "mov     byte ptr [rsp+1C8h+count], al", "jnz     loc_7EA9"], ["mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,haystack", "call~FOO", "test~al,al", "mov~[yte ptr [rsp+0],al", "jnz~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 8, 11, 0.02646420064452852, ["test    rax, rax", "jnz     short loc_74DF"], ["test~rax,rax", "jnz~FOO"]], [3, 0, 147, 0, 0, 3, 0, 0, 4, 13, 0.008496967513360956, ["mov     [rsp+1C8h+iter_needle.cur.bytes], 1", "mov     [rsp+1C8h+iter_needle.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_needle.next_done], 1"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [2, 0, 158, 0, 3, 13, 0, 4, 3, 14, 0.005374407013751276, ["mov     [rsp+1C8h+iter_needle.in_shift], 1", "call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+iter_needle.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+1C8h+iter_needle.cur.ptr]; s", "lea     rdi, [rbx+24h]; pwc", "mov     rcx, rbp; p", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+iter_needle.cur.bytes], rax", "jz      loc_70A8"], ["mov~[rsp+0],0", "call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rdi,[rbx+0]", "mov~rcx,rbp", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 159, 0, 1, 4, 1, 2, 2, 15, 0.00078064012490242, ["mov     rdi, rbp; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_7F60"], ["mov~rdi,rbp", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 145, 0, 1, 6, 1, 2, 7, 12, 0.006795572369342862, ["lea     rax, [rsp+1C8h+iter_haystack]", "lea     rdi, [rsp+1C8h+iter_haystack.state]; ps", "mov     [rsp+1C8h+resultp], rax", "call    _mbsinit", "test    eax, eax", "jz      loc_7F60"], ["lea~rax,[rsp+0]", "lea~rdi,[rsp+0]", "mov~[rsp+0],rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 145, 0, 0, 8, 1, 0, 6, 10, 0.15402129746392043, ["mov     rcx, [rsp+1C8h+iter_haystack.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_78A0"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [2, 0, 145, 0, 0, 5, 1, 1, 26, 15, 0.02119738185311956, ["mov     eax, [rsp+1C8h+rhaystack.cur.wc]", "mov     [rsp+1C8h+rhaystack.in_shift], 0", "mov     [rsp+1C8h+rhaystack.next_done], 1", "test    eax, eax", "jnz     loc_733C"], ["mov~eax,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 27, -1, 0.0006004924037710923, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [2, 0, 145, 0, 0, 4, 0, 1, 9, 12, 0.007218419103665007, ["mov     rax, [rsp+1C8h+iter_haystack.cur.ptr]", "mov     [rsp+1C8h+iter_haystack.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_7F8D"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 145, 2, 0, 5, 0, 1, 16, 19, 0.1825196661262235, ["mov     rax, [rsp+1C8h+rneedle.cur.bytes]", "mov     [rsp+1C8h+rneedle.next_done], 0", "add     comparison_count, 1", "add     [rsp+1C8h+rneedle.cur.ptr], rax", "jmp     loc_7393"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "add~comparison_count,0", "add~[rsp+0],rax", "jmp~FOO"]], [2, 0, 145, 0, 0, 3, 0, 1, 16, 20, 0.0078064012490242, ["mov     [rsp+1C8h+rneedle.cur.bytes], 1", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 0", "jmp     loc_72B0"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 1, 5, 0, 2, 17, 20, 0.003993274485077764, ["mov     rdi, [rsp+1C8h+rneedle.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 0", "mov     [rsp+1C8h+rneedle.cur.bytes], rax", "jmp     loc_72B0"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 11, 9, 0.08842500850697571, ["test    al, al", "jz      loc_7B20"], ["test~al,al", "jz~FOO"]], [0, 0, 145, 1, 0, 5, 0, 1, 10, 10, 0.17691006625432854, ["mov     rsi, comparison_count", "sub     rsi, [rsp+1C8h+last_ccount]", "movzx   eax, [rsp+1C8h+iter_needle_last_ccount.next_done]", "mov     [rsp+1C8h+count], count_0", "jz      loc_7F21"], ["mov~rsi,comparison_count", "sub~rsi,[rsp+0]", "movzx~eax,[rsp+0]", "mov~[rsp+0],count_0", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 0, 0, 10, 7, 0.0841439980784243, ["lea     rdx, [outer_loop_count+outer_loop_count*4]", "cmp     comparison_count, rdx", "jnb     loc_78D0"], ["lea~rdx,<TAG>", "cmp~comparison_count,rdx", "jnb~FOO"]], [0, 0, 145, 0, 0, 3, 0, 0, 9, 8, 0.10286434876598811, ["lea     rdx, [outer_loop_count+outer_loop_count*4]", "cmp     comparison_count, rdx", "jnb     loc_78D0"], ["lea~rdx,<TAG>", "cmp~comparison_count,rdx", "jnb~FOO"]], [3, 0, 145, 0, 0, 4, 0, 1, 19, 16, 0.15333573530294842, ["mov     [rsp+1C8h+rneedle.cur.bytes], 1", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 0", "mov     [rsp+1C8h+rneedle.next_done], 1", "jmp     loc_73F7"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 3, 12, 0, 4, 18, 17, 0.19439440341079686, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+rneedle.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+1C8h+rneedle.cur.ptr]; s", "lea     rcx, [rbp+4]; p", "lea     rdi, [rbp+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+rneedle.cur.bytes], rax", "jz      loc_7760"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[rbp+0]", "lea~rdi,[rbp+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 145, 0, 1, 6, 1, 2, 23, 14, 0.02152765267519366, ["mov     rsi, [rsp+1C8h+rneedle.cur.ptr]; s2", "mov     rdi, [rsp+1C8h+rhaystack.cur.ptr]; s1", "call    _memcmp", "test    eax, eax", "setnz   al", "jmp     loc_7354"], ["mov~rsi,[rsp+0]", "mov~rdi,[rsp+0]", "call~FOO", "test~eax,eax", "setnz~al", "jmp~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 11, 12, 0.08386126623831541, ["test    al, al", "jz      short loc_791D"], ["test~al,al", "jz~FOO"]], [2, 0, 147, 0, 1, 6, 0, 2, 5, 13, 0.004263496066774755, ["mov     rdi, [rsp+1C8h+iter_needle.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+iter_needle.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_needle.cur.bytes], rax", "mov     [rsp+1C8h+iter_needle.next_done], 1", "jmp     loc_70BB"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 156, 0, 0, 2, 0, 1, 4, 14, 0.0013811325286735123, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_7ED5"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 10, 9, 0.009262595328169098, ["mov     [rsp+1C8h+iter_haystack.next_done], 1", "jmp     loc_718F"], ["mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 145, 1, 1, 6, 1, 2, 9, 10, 0.023148982165375608, ["mov     rdi, [rsp+1C8h+resultp]", "mov     [rsp+1C8h+iter_haystack.cur.wc_valid], 1", "add     rdi, 4; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_7AE8"], ["mov~rdi,[rsp+0]", "mov~[rsp+0],0", "add~rdi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 145, 0, 0, 1, 0, 0, 15, 15, 0.004623791509037411, ["mov     [rsp+1C8h+iter_needle_last_ccount.in_shift], 1"], ["mov~[rsp+0],0"]], [0, 0, 145, 0, 0, 2, 0, 0, 13, 10, 0.05658139674533118, ["lea     rax, [rsp+1C8h+iter_needle_last_ccount]", "mov     [rsp+1C8h+resultp], rax"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax"]], [1, 0, 145, 0, 0, 2, 0, 1, 12, 11, 0.08978112051882543, ["cmp     [rsp+1C8h+iter_needle_last_ccount.in_shift], 0", "jnz     loc_7D78"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 145, 0, 1, 6, 0, 2, 8, 9, 0.0036930282831922176, ["mov     rdi, [rsp+1C8h+iter_haystack.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+iter_haystack.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_haystack.cur.bytes], rax", "mov     [rsp+1C8h+iter_haystack.next_done], 1", "jmp     loc_770C"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 145, 0, 0, 3, 0, 0, 7, 9, 0.13934426229508196, ["mov     [rsp+1C8h+iter_haystack.cur.bytes], 1", "mov     [rsp+1C8h+iter_haystack.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_haystack.next_done], 1"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [0, 0, 154, 0, 0, 2, 1, 1, 5, 16, 0.0015012310094277307, ["test    rax, rax", "jnz     short loc_7D2C"], ["test~rax,rax", "jnz~FOO"]], [2, 0, 145, 0, 0, 3, 0, 1, 10, 9, 0.009262595328169098, ["mov     [rsp+1C8h+iter_haystack.in_shift], 0", "mov     [rsp+1C8h+iter_haystack.next_done], 1", "jmp     loc_718F"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 145, 0, 0, 4, 0, 1, 15, 8, 0.028230649132288475, ["mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 0", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "jmp     loc_7B86"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 3, 13, 0, 4, 14, 9, 0.06537861046057768, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+1C8h+resultp]", "mov     rdx, rax; n", "lea     rcx, [rsi+4]; p", "lea     rdi, [rsi+24h]; pwc", "mov     rsi, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]; s", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], rax", "jz      loc_7EF3"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "mov~rdx,rax", "lea~rcx,[rsi+0]", "lea~rdi,[rsi+0]", "mov~rsi,[rsp+0]", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 145, 0, 0, 4, 1, 1, 8, 8, 0.14721071278448328, ["cmp     outer_loop_count, 9", "setnbe  al", "and     al, byte ptr [rsp+1C8h+count]", "jnz     loc_7F40"], ["cmp~outer_loop_count,0", "setnbe~al", "and~al,[yte ptr [rsp+0]", "jnz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 18, 9, 0.008887287575812166, ["mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "jmp     loc_7B75"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 1, 0, 1, 0, 0, 9, 7, 0.03972257250945776, ["add     comparison_count, 1"], ["add~comparison_count,0"]], [0, 0, 145, 0, 1, 4, 1, 2, 19, 19, 0.005359394703656999, ["lea     rdi, [rbp+4]; ps", "call    _mbsinit", "test    eax, eax", "jz      loc_7F60"], ["lea~rdi,[rbp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 145, 0, 0, 8, 1, 0, 18, 18, 0.023809523809523808, ["mov     rcx, [rsp+1C8h+rneedle.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     loc_7518"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [3, 0, 145, 0, 0, 5, 0, 0, 23, 16, 0.004023299105266318, ["mov     [rsp+1C8h+rhaystack.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+1C8h+rhaystack.cur.wc_valid], 1", "mov     [rsp+1C8h+rhaystack.next_done], 1", "mov     [rsp+1C8h+rhaystack.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [1, 0, 145, 0, 0, 2, 0, 1, 14, 9, 0.04776416661662563, ["cmp     [rsp+1C8h+iter_needle_last_ccount.next_done], 0", "jz      loc_7B20"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 145, 0, 0, 1, 0, 0, 20, 18, 0.004653816129225965, ["mov     [rsp+1C8h+rneedle.in_shift], 1"], ["mov~[rsp+0],0"]], [1, 0, 145, 0, 0, 2, 0, 1, 11, 5, 0.20338177305390415, ["cmp     [rsp+1C8h+iter_needle.cur.wc_valid], 0", "jz      loc_7721"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 145, 0, 0, 1, 0, 1, 15, 7, 0.03584939650513421, ["jmp     loc_7721"], ["jmp~FOO"]], [1, 0, 145, 1, 0, 3, 0, 1, 10, 7, 0.002642166576592806, ["add     comparison_count, 1", "mov     byte ptr [rsp+1C8h+count], al", "jmp     loc_7721"], ["add~comparison_count,0", "mov~[yte ptr [rsp+0],al", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 12, 8, 0.02915390620308653, ["cmp     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 0", "jz      loc_7B86"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 22, 15, 0.022818711343301507, ["mov     eax, [rsp+1C8h+rhaystack.cur.wc]", "test    eax, eax", "jz      loc_76C8"], ["mov~eax,[rsp+0]", "test~eax,eax", "jz~FOO"]], [0, 0, 145, 0, 0, 1, 0, 1, 13, 9, 0.008827238335435056, ["jmp     loc_7B75"], ["jmp~FOO"]], [0, 0, 25, 0, 0, 3, 1, 1, 2, -1, 0.0012910586681078484, ["movzx   esi, byte ptr [haystack]", "test    sil, sil", "jz      loc_76C8"], ["movzx~esi,<TAG>", "test~sil,sil", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 18, 11, 0.009585359995196061, ["mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "jmp     loc_796E"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 145, 0, 0, 1, 0, 0, 5, 11, 0.021047258752176785, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [2, 0, 145, 0, 0, 8, 1, 0, 13, 12, 0.017364238675714082, ["mov     rcx, [rsp+1C8h+iter_needle_last_ccount.cur.ptr]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r13+rax*4+0]", "bt      eax, edx", "jnb     short loc_79C0"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,[r13+0]", "bt~eax,edx", "jnb~FOO"]], [0, 0, 145, 0, 0, 2, 0, 0, 24, 14, 0.01043355551552273, ["cmp     [rsp+1C8h+rneedle.cur.wc], eax", "setnz   al"], ["cmp~[rsp+0],eax", "setnz~al"]], [1, 0, 24, 0, 0, 8, 3, 0, 3, -1, 0.0017714525911247223, ["lea     rbx, [rsp+1C8h+result]", "mov     rbp, [rsp+1C8h+needle_last_ccount]", "xor     r13d, r13d", "xor     edx, edx", "xor     ecx, ecx", "mov     eax, 1", "mov     [rsp+1C8h+resultp], rbx", "nop     dword ptr [try_kmp+00h]"], ["lea~rbx,[rsp+0]", "mov~rbp,[rsp+0]", "xor~r13d,r13d", "xor~edx,edx", "xor~ecx,ecx", "mov~eax,0", "mov~[rsp+0],rbx", "nop~[word ptr [try_kmp+0]"]], [3, 0, 145, 0, 0, 5, 0, 0, 14, 11, 0.007611241217798595, ["mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [1, 0, 24, 0, 0, 2, 0, 1, 5, -1, 0.0028973758481955205, ["cmp     byte ptr [r12+1], 0", "jz      loc_76C8"], ["cmp~[yte ptr [r12+0],0", "jz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 8, 8, 0.1696240917552393, ["mov     eax, [rsp+1C8h+iter_haystack.cur.wc]", "test    eax, eax", "jz      loc_76C8"], ["mov~eax,[rsp+0]", "test~eax,eax", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 17, 18, 0.21385035729298024, ["cmp     [rsp+1C8h+rneedle.in_shift], 0", "jnz     loc_7531"], ["cmp~[rsp+0],0", "jnz~FOO"]], [3, 0, 145, 0, 0, 5, 0, 0, 14, 9, 0.018712844532516662, ["mov     [rsp+1C8h+iter_needle_last_ccount.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc_valid], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.next_done], 1", "mov     [rsp+1C8h+iter_needle_last_ccount.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [1, 0, 145, 0, 0, 2, 0, 1, 19, 17, 0.036434876598811027, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      loc_77B0"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 3, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5718; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aMbsinitIterSta; \"mbsinit (&iter->state)\"", "mov     edx, 8Eh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 145, 0, 1, 6, 1, 2, 14, 16, 0.005129205948878081, ["lea     rax, [rsp+1C8h+iter_needle_last_ccount]", "lea     rdi, [rsp+1C8h+iter_needle_last_ccount.state]; ps", "mov     [rsp+1C8h+resultp], rax", "call    _mbsinit", "test    eax, eax", "jz      loc_7F60"], ["lea~rax,[rsp+0]", "lea~rdi,[rsp+0]", "mov~[rsp+0],rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 145, 0, 0, 2, 1, 1, 20, 18, 0.027907884465261514, ["test    rax, rax", "jnz     short loc_75AB"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 14, 8, 0.05813517084008887, ["mov     r8d, [rsp+1C8h+iter_needle_last_ccount.cur.wc]", "test    r8d, r8d", "jz      loc_798D"], ["mov~r8d,[rsp+0]", "test~r8d,r8d", "jz~FOO"]], [1, 0, 145, 1, 0, 2, 0, 1, 10, 6, 0.07381552873356152, ["add     comparison_count, 1", "jmp     loc_71C4"], ["add~comparison_count,0", "jmp~FOO"]], [1, 0, 145, 0, 0, 4, 1, 1, 9, 7, 0.16258331832102324, ["cmp     outer_loop_count, 9", "setnbe  al", "and     al, byte ptr [rsp+1C8h+count]", "jz      loc_7F7F"], ["cmp~outer_loop_count,0", "setnbe~al", "and~al,[yte ptr [rsp+0]", "jz~FOO"]], [3, 0, 145, 0, 0, 5, 0, 0, 7, 9, 0.14260193358554013, ["mov     [rsp+1C8h+iter_haystack.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+1C8h+iter_haystack.cur.wc_valid], 1", "mov     [rsp+1C8h+iter_haystack.next_done], 1", "mov     [rsp+1C8h+iter_haystack.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [1, 0, 145, 0, 0, 2, 0, 0, 13, 7, 0.10978502371944995, ["movzx   edx, [rsp+1C8h+iter_haystack.cur.wc_valid]", "mov     byte ptr [rsp+1C8h+count], 1"], ["movzx~edx,[rsp+0]", "mov~[yte ptr [rsp+0],0"]], [1, 0, 145, 0, 0, 2, 0, 1, 15, 10, 0.004623791509037411, ["mov     [rsp+1C8h+iter_needle_last_ccount.in_shift], 1", "jmp     loc_7D85"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 7, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5718; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aIterCurPtr0; \"*iter->cur.ptr == '\\\\0'\"", "mov     edx, 0AAh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [2, 0, 145, 0, 0, 4, 0, 1, 21, 19, 0.005809764006485318, ["mov     rax, [rsp+1C8h+rneedle.cur.ptr]", "mov     [rsp+1C8h+rneedle.cur.bytes], 1", "cmp     byte ptr [rax], 0", "jnz     loc_7F8D"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 145, 2, 0, 7, 0, 0, 25, 19, 0.02715726896054765, ["mov     rax, [rsp+1C8h+rhaystack.cur.bytes]", "add     [rsp+1C8h+rhaystack.cur.ptr], rax", "mov     rbx, rdx", "mov     rax, [rsp+1C8h+rneedle.cur.bytes]", "add     [rsp+1C8h+rneedle.cur.ptr], rax", "mov     [rsp+1C8h+rhaystack.next_done], 0", "mov     [rsp+1C8h+rneedle.next_done], 0"], ["mov~rax,[rsp+0]", "add~[rsp+0],rax", "mov~rbx,rdx", "mov~rax,[rsp+0]", "add~[rsp+0],rax", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [0, 0, 145, 0, 0, 5, 1, 1, 14, 6, 0.1587101423166997, ["lea     rax, [last_ccount_0+1]", "test    dl, dl", "mov     [rsp+1C8h+last_ccount], last_ccount_0", "mov     last_ccount_0, comparison_count", "jnz     loc_71C4"], ["lea~rax,[last_ccount_0+0]", "test~dl,dl", "mov~[rsp+0],last_ccount_0", "mov~last_ccount_0,comparison_count", "jnz~FOO"]], [0, 0, 145, 0, 0, 2, 0, 1, 16, 7, 0.04475169639104065, ["movzx   edx, [rsp+1C8h+iter_haystack.cur.wc_valid]", "jmp     loc_7B93"], ["movzx~edx,[rsp+0]", "jmp~FOO"]], [0, 0, 24, 0, 0, 3, 1, 1, 8, -1, 0.0022818711343301507, ["test    needle_last_ccount_0, needle_last_ccount_0", "mov     byte ptr [rsp+1C8h+count], dl", "jz      short loc_6FCB"], ["test~needle_last_ccount_0,needle_last_ccount_0", "mov~[yte ptr [rsp+0],dl", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 16, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 145, 0, 1, 5, 1, 2, 21, 17, 0.026001321083288297, ["lea     rdi, [rbp+4]; ps", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 1", "call    _mbsinit", "test    eax, eax", "jz      loc_77E0"], ["lea~rdi,[rbp+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 145, 1, 0, 2, 0, 0, 11, 6, 0.0026821994035108794, ["add     comparison_count, 1", "mov     byte ptr [rsp+1C8h+count], al"], ["add~comparison_count,0", "mov~[yte ptr [rsp+0],al"]], [2, 0, 145, 0, 1, 6, 0, 2, 20, 16, 0.0039032006245121, ["mov     rdi, [rsp+1C8h+rneedle.cur.ptr]; s", "call    _strlen", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 0", "mov     [rsp+1C8h+rneedle.cur.bytes], rax", "mov     [rsp+1C8h+rneedle.next_done], 1", "jmp     loc_73F7"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 145, 0, 0, 5, 1, 1, 22, 16, 0.02080706179066835, ["mov     edx, [rsp+1C8h+rneedle.cur.wc]", "mov     [rsp+1C8h+rneedle.in_shift], 0", "mov     [rsp+1C8h+rneedle.next_done], 1", "test    edx, edx", "jnz     loc_73F7"], ["mov~edx,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "test~edx,edx", "jnz~FOO"]], [3, 0, 145, 0, 0, 5, 0, 0, 19, 17, 0.0138263375968294, ["mov     [rsp+1C8h+rneedle.cur.bytes], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+1C8h+rneedle.cur.wc_valid], 1", "mov     [rsp+1C8h+rneedle.next_done], 1", "mov     [rsp+1C8h+rneedle.cur.wc], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [0, 0, 4, 0, 0, 1, 0, 0, 23, -1, 0.0004503693028283192, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 145, 0, 0, 2, 0, 1, 22, 17, 0.0005704677835825377, ["mov     [rsp+1C8h+rneedle.next_done], 1", "jmp     loc_73E8"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 145, 0, 0, 3, 1, 1, 20, 16, 0.018570227586621028, ["mov     edx, [rsp+1C8h+rneedle.cur.wc]", "test    edx, edx", "jz      loc_75E8"], ["mov~edx,[rsp+0]", "test~edx,edx", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [53, 71, 196, 2, 184, 288, 1, 762, 0.0396, 6, 24], "succs": [[58, 11], [0, 168], [4, 159], [2, 138], [32], [145, 13], [33, 5], [58, 70], [168, 7], [13], [9, 46], [134, 23], [1, 11], [18, 118], [13, 151], [13], [145], [16, 106], [34], [18, 68], [18, 170], [26, 77], [76, 21], [162], [110, 31], [24, 159], [53, 71], [50, 43], [154, 27], [41, 103], [64, 29], [38, 111], [10, 15], [32, 3], [105, 44], [34, 36], [34, 69], [168, 57], [56, 37], [167, 159], [157, 39], [47], [54, 87], [42, 66], [89], [44, 149], [17, 62], [50, 45], [47], [47], [63], [50], [58, 71], [168, 52], [83], [95], [94, 55], [56, 58], [], [58, 123], [58, 175], [17, 58], [168, 61], [183, 79], [147, 63], [63], [63], [63], [25, 85], [68], [48, 49], [148, 84], [83, 87], [72, 66], [97, 126], [74, 139], [74], [74], [74, 75], [], [86], [80, 173], [80, 98], [73, 51], [75], [95], [28], [81, 86], [86], [128, 93], [89], [166], [91, 12], [100, 127], [95], [109, 174], [22], [96, 150], [88, 67], [67, 172], [123, 108], [45], [121, 101], [102, 159], [90, 159], [104, 165], [107, 14], [66], [168, 59], [156], [109], [109], [144, 126], [112, 119], [176, 113], [113, 143], [6], [116, 158], [20], [97, 78], [45], [120, 129], [155], [122, 130], [22], [132], [40, 125], [133], [133], [8, 70], [155], [166], [131, 92], [115, 135], [162], [35], [140, 159], [136, 179], [145], [99, 126], [117], [19, 35], [35], [35], [146, 166], [66, 14], [162], [152, 66], [75], [105], [160, 153], [20], [28], [75], [66, 87], [66, 164], [137, 117], [162], [161, 177], [], [124, 159], [169, 175], [99, 166], [141], [114, 163], [155], [171], [132], [], [168, 60], [156], [141, 142], [171], [82, 98], [], [178, 181], [141], [6], [180, 6], [182], [65], [182], [65, 6], []], "fname": "mbsstr", "n_num": 184}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[1, 0, 13, 0, 1, 8, 0, 2, 0, 0, 0.03835978835978836, ["mov     r8, r12; outbytesleft", "mov     rcx, rbp; outbuf", "mov     rdx, r15; inbytesleft", "mov     rsi, r14; inbuf", "mov     rdi, cd; cd", "call    _iconv", "cmp     res, 0FFFFFFFFFFFFFFFFh", "jz      loc_8220"], ["mov~r8,r12", "mov~rcx,rbp", "mov~rdx,r15", "mov~rsi,r14", "mov~rdi,cd", "call~FOO", "cmp~res,0", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 6, 4, 0.17328042328042326, ["test    r13, r13", "jnz     short loc_8168"], ["test~r13,r13", "jnz~FOO"]], [0, 0, 22, 0, 0, 2, 0, 1, 4, 4, 0.05291005291005291, ["mov     r13, [rsp+1098h+result]", "jmp     loc_80AB"], ["mov~r13,[rsp+0]", "jmp~FOO"]], [1, 0, 27, 2, 0, 5, 0, 1, 3, 5, 0.03042328042328042, ["mov     rax, [rsp+1098h+outptr]", "sub     rax, r14", "add     count_0, rax", "cmp     [rsp+1098h+insize], 0", "jz      loc_8200"], ["mov~rax,[rsp+0]", "sub~rax,r14", "add~count_0,rax", "cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 8, 5, 0.0013227513227513227, ["mov     r13, [rsp+1098h+insize]"], ["mov~r13,[rsp+0]"]], [0, 0, 17, 0, 0, 4, 0, 0, 4, 5, 0.07275132275132275, ["mov     rax, [rsp+1098h+lengthp]", "mov     rcx, [rsp+1098h+count]", "cmp     [rax], rcx", "jnb     short loc_8124"], ["mov~rax,[rsp+0]", "mov~rcx,[rsp+0]", "cmp~<TAG>,rcx", "jnb~FOO"]], [0, 0, 18, 0, 0, 5, 1, 1, 3, 5, 0.16798941798941797, ["mov     count_0, [rsp+1098h+resultp]", "mov     rax, [rax]", "test    rax, rax", "mov     [rsp+1098h+result], rax", "jz      short loc_810C"], ["mov~count_0,[rsp+0]", "mov~rax,<TAG>", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 13, 0, 1, 16, 4, 2, 5, 5, 0.15873015873015872, ["xor     r8d, r8d; outbytesleft", "xor     ecx, ecx; outbuf", "xor     edx, edx; inbytesleft", "xor     esi, esi; inbuf", "mov     rdi, cd; cd", "lea     r15, [rsp+1098h+insize]", "call    _iconv", "mov     rax, [rsp+1098h+src]", "mov     [rsp+1098h+insize], r13", "lea     r14, [rsp+1098h+inptr]", "mov     [rsp+1098h+inptr], rax", "mov     rax, [rsp+1098h+result]", "mov     [rsp+1098h+outptr], rax", "mov     rax, [rsp+1098h+count]", "mov     [rsp+1098h+outsize], rax", "jmp     short loc_818B"], ["xor~r8d,r8d", "xor~ecx,ecx", "xor~edx,edx", "xor~esi,esi", "mov~rdi,cd", "lea~r15,[rsp+0]", "call~FOO", "mov~rax,[rsp+0]", "mov~[rsp+0],r13", "lea~r14,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [2, 0, 27, 0, 1, 10, 0, 2, 2, 5, 0.042328042328042326, ["mov     rsi, [rsp+1098h+count]; inbuf", "mov     r8, r12; outbytesleft", "mov     rcx, rbp; outbuf", "mov     rdx, r13; inbytesleft", "mov     rdi, cd; cd", "mov     [rsp+1098h+outptr], r14", "mov     [rsp+1098h+outsize], 1000h", "call    _iconv", "cmp     res, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_8050"], ["mov~rsi,[rsp+0]", "mov~r8,r12", "mov~rcx,rbp", "mov~rdx,r13", "mov~rdi,cd", "mov~[rsp+0],r14", "mov~[rsp+0],0", "call~FOO", "cmp~res,0", "jnz~FOO"]], [0, 0, 27, 0, 0, 6, 0, 1, 1, 6, 0.006613756613756613, ["lea     rax, [rsp+1098h+insize]", "lea     rsi, [rsp+1098h+inptr]", "mov     [rsp+1098h+result], srclen_0", "mov     [rsp+1098h+count], rsi", "mov     srclen_0, rax", "jmp     short loc_8067"], ["lea~rax,[rsp+0]", "lea~rsi,[rsp+0]", "mov~[rsp+0],srclen_0", "mov~[rsp+0],rsi", "mov~srclen_0,rax", "jmp~FOO"]], [1, 0, 27, 0, 1, 4, 0, 2, 3, 4, 0.03968253968253968, ["call    ___errno_location", "mov     eax, [rax]", "cmp     eax, 7", "jz      short loc_8050"], ["call~FOO", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 3, 0, 0, 4, 1, 1, 3, 2, 0.003968253968253968, ["mov     count_0, [rsp+1098h+lengthp]", "xor     ebx, ebx", "mov     qword ptr [rax], 0", "jmp     short loc_81D4"], ["mov~count_0,[rsp+0]", "xor~ebx,ebx", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 20, 2, 0, 5, 0, 1, 2, 3, 0.1693121693121693, ["mov     res, [rsp+1098h+outptr]", "sub     rax, r14", "add     rax, r15", "mov     [rsp+1098h+count], count_0", "jz      loc_8210"], ["mov~res,[rsp+0]", "sub~rax,r14", "add~rax,r15", "mov~[rsp+0],count_0", "jz~FOO"]], [1, 0, 22, 0, 0, 3, 0, 1, 4, 3, 0.06349206349206349, ["cmp     eax, 16h", "mov     r13, [rsp+1098h+result]", "jnz     loc_8269"], ["cmp~eax,0", "mov~r13,[rsp+0]", "jnz~FOO"]], [1, 0, 8, 0, 1, 8, 2, 2, 7, 3, 0.11904761904761904, ["xor     edx, edx; inbytesleft", "xor     esi, esi; inbuf", "mov     r8, r12; outbytesleft", "mov     rcx, rbp; outbuf", "mov     rdi, cd; cd", "call    _iconv", "cmp     res, 0FFFFFFFFFFFFFFFFh", "jz      fail"], ["xor~edx,edx", "xor~esi,esi", "mov~r8,r12", "mov~rcx,rbp", "mov~rdi,cd", "call~FOO", "cmp~res,0", "jz~FOO"]], [1, 0, 9, 0, 1, 3, 0, 2, 8, 3, 0.011904761904761904, ["call    ___errno_location", "cmp     dword ptr [rax], 16h", "jz      loc_8190"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 28, 1, 1, 30, 7, 2, 0, 4, 0.0, ["push    r15", "push    r14", "mov     r15, src_0", "push    r13", "push    r12", "mov     r13, srclen_0", "push    rbp", "push    rbx", "mov     rbx, cd", "xor     esi, esi; inbuf", "xor     edx, edx; inbytesleft", "sub     rsp, 1068h", "mov     [rsp+1098h+src], src_0", "mov     [rsp+1098h+resultp], resultp_0", "mov     src_0, cd; cd", "mov     [rsp+1098h+lengthp], lengthp_0", "xor     ecx, ecx; outbuf", "xor     r8d, r8d; outbytesleft", "mov     rax, fs:28h", "mov     [rsp+1098h+var_40], rax", "xor     eax, eax", "call    _iconv", "mov     [rsp+1098h+inptr], src_0", "xor     r15d, r15d", "test    srclen_0, srclen_0", "mov     [rsp+1098h+insize], srclen_0", "lea     r14, [rsp+1098h+tmp]", "lea     r12, [rsp+1098h+outsize]", "lea     rbp, [rsp+1098h+outptr]", "jz      short loc_80AB"], ["push~r15", "push~r14", "mov~r15,src_0", "push~r13", "push~r12", "mov~r13,srclen_0", "push~rbp", "push~rbx", "mov~rbx,cd", "xor~esi,esi", "xor~edx,edx", "sub~rsp,0", "mov~[rsp+0],src_0", "mov~[rsp+0],resultp_0", "mov~src_0,cd", "mov~[rsp+0],lengthp_0", "xor~ecx,ecx", "xor~r8d,r8d", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~[rsp+0],src_0", "xor~r15d,r15d", "test~srclen_0,srclen_0", "mov~[rsp+0],srclen_0", "lea~r14,[rsp+0]", "lea~r12,[rsp+0]", "lea~rbp,[rsp+0]", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 8, 3, 0.047619047619047616, ["cmp     [rsp+1098h+outsize], 0", "jnz     loc_8273"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 16, 0, 1, 5, 1, 2, 4, 4, 0.0992063492063492, ["mov     rdi, [rsp+1098h+count]; size", "call    _malloc", "test    rax, rax", "mov     [rsp+1098h+result], rax", "jz      loc_825E"], ["mov~rdi,[rsp+0]", "call~FOO", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 4, 0, 0, 5, 0, 1, 8, 2, 0.047619047619047616, ["mov     rax, [rsp+1098h+resultp]", "mov     r15, [rsp+1098h+result]", "mov     ebx, 0FFFFFFFFh", "cmp     [rax], r15", "jz      short loc_81D4"], ["mov~rax,[rsp+0]", "mov~r15,[rsp+0]", "mov~ebx,0", "cmp~<TAG>,r15", "jz~FOO"]], [2, 0, 21, 0, 1, 10, 2, 2, 1, 3, 0.17328042328042326, ["xor     edx, edx; inbytesleft", "xor     esi, esi; inbuf", "mov     r8, r12; outbytesleft", "mov     rcx, rbp; outbuf", "mov     rdi, cd; cd", "mov     [rsp+1098h+outptr], r14", "mov     [rsp+1098h+outsize], 1000h", "call    _iconv", "cmp     res, 0FFFFFFFFFFFFFFFFh", "jz      loc_8269"], ["xor~edx,edx", "xor~esi,esi", "mov~r8,r12", "mov~rcx,rbp", "mov~rdi,cd", "mov~[rsp+0],r14", "mov~[rsp+0],0", "call~FOO", "cmp~res,0", "jz~FOO"]], [0, 0, 3, 0, 0, 7, 1, 0, 9, 2, 0.003968253968253968, ["mov     res, [rsp+1098h+resultp]", "mov     rsi, [rsp+1098h+result]", "xor     ebx, ebx", "mov     rdi, [rsp+1098h+count]", "mov     [rax], rsi", "mov     rax, [rsp+1098h+lengthp]", "mov     [rax], rdi"], ["mov~res,[rsp+0]", "mov~rsi,[rsp+0]", "xor~ebx,ebx", "mov~rdi,[rsp+0]", "mov~<TAG>,rsi", "mov~rax,[rsp+0]", "mov~<TAG>,rdi"]], [0, 0, 3, 0, 2, 7, 0, 3, 9, 2, 0.0, ["call    ___errno_location", "mov     r12d, [rax]", "mov     rbp, rax", "mov     rdi, r15; ptr", "call    _free", "mov     [rbp+0], r12d", "jmp     loc_81D4"], ["call~FOO", "mov~r12d,<TAG>", "mov~rbp,rax", "mov~rdi,r15", "call~FOO", "mov~[rbp+0],r12d", "jmp~FOO"]], [1, 0, 4, 0, 1, 2, 0, 1, 5, 3, 0.017195767195767195, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch"], ["call~FOO", "mov~<TAG>,0"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, 1, 0.06613756613756613, ["mov     rdx, [rsp+1098h+var_40]", "xor     rdx, fs:28h", "mov     eax, ebx", "jnz     loc_8278"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.047619047619047616, ["mov     ebx, 0FFFFFFFFh", "jmp     loc_81D4"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 1068h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [14, 21, 36, 1, 29, 43, 1, 170, 0.05706, 1, 6], "succs": [[4, 15], [0, 14], [20], [8, 2], [1], [18, 7], [18, 5], [1], [10, 3], [8], [3, 13], [24], [11, 6], [25, 20], [17, 19], [19, 14], [9, 20], [26, 21], [23, 7], [24, 22], [25, 12], [24], [24], [25], [27, 28], [24], [], [], []], "fname": "mem_cd_iconv", "n_num": 29}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.08658008658008658, ["mov     rdi, [rsp+88h+var_40]", "xor     rdi, fs:28h", "mov     rax, rbx", "jnz     short loc_84BD"], ["mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "mov~rax,rbx", "jnz~FOO"]], [1, 0, 4, 1, 0, 8, 0, 0, 5, 2, 0.06601731601731602, ["mov     res, [rsp+88h+outptr]", "lea     rdx, [rax+1]", "mov     [rsp+88h+outptr], rdx", "mov     byte ptr [rax], 0", "mov     rsi, [rsp+88h+outptr]", "sub     rsi, result; size", "cmp     result_size, length", "jbe     short loc_8478"], ["mov~res,[rsp+0]", "lea~rdx,[rax+0]", "mov~[rsp+0],rdx", "mov~<TAG>,0", "mov~rsi,[rsp+0]", "sub~rsi,result", "cmp~result_size,length", "jbe~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 6, 2, 0.0, ["mov     rdi, result; ptr", "call    _realloc", "test    smaller_result, smaller_result", "cmovnz  result, smaller_result", "jmp     short loc_8478"], ["mov~rdi,result", "call~FOO", "test~smaller_result,smaller_result", "cmovnz~result,smaller_result", "jmp~FOO"]], [1, 0, 3, 0, 1, 3, 0, 2, 1, 2, 0.006493506493506494, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch", "jmp     short loc_8478"], ["call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 3, 0, 1, 3, 1, 1, 5, 2, 0.06168831168831169, ["mov     rdi, result; ptr", "xor     ebx, ebx", "call    _free"], ["mov~rdi,result", "xor~ebx,ebx", "call~FOO"]], [0, 0, 12, 1, 0, 7, 0, 0, 8, 4, 0.025974025974025976, ["lea     rcx, [newresult+used]", "mov     rbp, result_size", "mov     rbx, newresult", "mov     [rsp+88h+outptr], rcx", "lea     rcx, [result_size-1]", "sub     rcx, used", "mov     [rsp+88h+outbytes_remaining], rcx"], ["lea~rcx,<TAG>", "mov~rbp,result_size", "mov~rbx,newresult", "mov~[rsp+0],rcx", "lea~rcx,[result_size-1]+0]", "sub~rcx,used", "mov~[rsp+0],rcx"]], [0, 0, 12, 0, 1, 9, 1, 2, 7, 4, 0.04112554112554113, ["mov     rsi, newsize_0; size", "mov     rdi, result; ptr", "mov     [rsp+88h+inbuf], newsize_0", "mov     [rsp+88h+inbytesleft], rax", "call    _realloc", "test    newresult, newresult", "mov     rdx, [rsp+88h+inbuf]", "mov     rcx, [rsp+88h+inbytesleft]", "jz      short loc_8468"], ["mov~rsi,newsize_0", "mov~rdi,result", "mov~[rsp+0],newsize_0", "mov~[rsp+0],rax", "call~FOO", "test~newresult,newresult", "mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "jz~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     result_size", "pop     cd", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~result_size", "pop~cd", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 20, 0, 1, 17, 4, 2, 1, 6, 0.0367965367965368, ["xor     r8d, r8d; outbytesleft", "xor     ecx, ecx; outbuf", "xor     edx, edx; inbytesleft", "xor     esi, esi; inbuf", "mov     rdi, cd; cd", "call    _iconv", "lea     rax, [rsp+88h+outbytes_remaining]", "mov     [rsp+88h+outptr], result", "mov     [rsp+88h+outbytes_remaining], r13", "mov     [rsp+88h+outbytesleft], rax", "lea     rax, [rsp+88h+outptr]", "mov     [rsp+88h+outbuf], rax", "lea     rax, [rsp+88h+inbytes_remaining]", "mov     [rsp+88h+inbytesleft], rax", "lea     rax, [rsp+88h+inptr]", "mov     [rsp+88h+inbuf], rax", "jmp     short loc_8384"], ["xor~r8d,r8d", "xor~ecx,ecx", "xor~edx,edx", "xor~esi,esi", "mov~rdi,cd", "call~FOO", "lea~rax,[rsp+0]", "mov~[rsp+0],result", "mov~[rsp+0],r13", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~<TAG>,rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [2, 1, 22, 2, 2, 24, 2, 3, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, cd", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "mov     [rsp+88h+inptr], src", "call    _strlen", "mov     r13, rax", "mov     [rsp+88h+inbytes_remaining], rax", "shl     r13, 4", "cmp     result_size, 10000000h", "cmovnb  r13, result_size", "lea     rbp, [result_size+1]", "mov     rdi, result_size; size", "call    _malloc", "test    rax, rax", "mov     rbx, rax", "jz      loc_84B0"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,cd", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~[rsp+0],src", "call~FOO", "mov~r13,rax", "mov~[rsp+0],rax", "shl~r13,0", "cmp~result_size,0", "cmovnb~r13,result_size", "lea~rbp,[result_size+0]", "mov~rdi,result_size", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [1, 0, 20, 0, 1, 8, 0, 2, 2, 5, 0.18831168831168832, ["mov     r8, [rsp+88h+outbytesleft]; outbytesleft", "mov     rcx, [rsp+88h+outbuf]; outbuf", "mov     rdi, cd; cd", "mov     rdx, [rsp+88h+inbytesleft]; inbytesleft", "mov     rsi, [rsp+88h+inbuf]; inbuf", "call    _iconv", "cmp     res, 0FFFFFFFFFFFFFFFFh", "jz      loc_8320"], ["mov~r8,[rsp+0]", "mov~rcx,<TAG>", "mov~rdi,cd", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "call~FOO", "cmp~res,0", "jz~FOO"]], [0, 0, 20, 1, 0, 8, 0, 0, 7, 6, 0.08225108225108226, ["lea     rsi, [newresult+used]", "mov     rbx, newresult", "mov     rbp, newsize", "mov     [rsp+88h+outptr], rsi", "lea     rsi, [newsize-1]", "mov     rdx, rsi", "sub     rdx, used", "mov     [rsp+88h+outbytes_remaining], rdx"], ["lea~rsi,<TAG>", "mov~rbx,newresult", "mov~rbp,newsize", "mov~[rsp+0],rsi", "lea~rsi,[newsize-1]+0]", "mov~rdx,rsi", "sub~rdx,used", "mov~[rsp+0],rdx"]], [1, 0, 4, 0, 0, 2, 0, 1, 6, 3, 0.017316017316017316, ["mov     dword ptr [r15], 0Ch", "jmp     short failed"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 20, 1, 0, 5, 0, 0, 5, 4, 0.06493506493506493, ["mov     r14, [rsp+88h+outptr]", "lea     r13, [result_size+result_size+0]", "sub     r14, result", "cmp     result_size, newsize", "jnb     loc_84A0"], ["mov~r14,[rsp+0]", "lea~r13,[result_size+0]", "sub~r14,result", "cmp~result_size,newsize", "jnb~FOO"]], [0, 0, 20, 0, 1, 5, 1, 2, 6, 4, 0.0670995670995671, ["mov     rsi, newsize; size", "mov     rdi, result; ptr", "call    _realloc", "test    newresult, newresult", "jz      loc_84A0"], ["mov~rsi,newsize", "mov~rdi,result", "call~FOO", "test~newresult,newresult", "jz~FOO"]], [0, 0, 12, 0, 0, 1, 0, 1, 3, 4, 0.0670995670995671, ["jmp     short loc_8416"], ["jmp~FOO"]], [1, 0, 20, 0, 1, 5, 0, 2, 3, 4, 0.12987012987012986, ["call    ___errno_location", "mov     r15, rax", "mov     eax, [rax]", "cmp     eax, 16h", "jz      loc_8416"], ["call~FOO", "mov~r15,rax", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 12, 0, 1, 8, 2, 2, 4, 3, 0.20238095238095238, ["mov     r8, [rsp+88h+outbytesleft]; outbytesleft", "mov     rcx, [rsp+88h+outbuf]; outbuf", "xor     edx, edx; inbytesleft", "xor     esi, esi; inbuf", "mov     rdi, cd; cd", "call    _iconv", "cmp     res, 0FFFFFFFFFFFFFFFFh", "jz      loc_83B0"], ["mov~r8,[rsp+0]", "mov~rcx,<TAG>", "xor~edx,edx", "xor~esi,esi", "mov~rdi,cd", "call~FOO", "cmp~res,0", "jz~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 4, 3, 0.06818181818181818, ["cmp     eax, 7", "jnz     failed"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 12, 0, 1, 4, 0, 2, 5, 3, 0.10173160173160173, ["call    ___errno_location", "cmp     dword ptr [rax], 7", "mov     rcx, rax", "jnz     failed"], ["call~FOO", "cmp~<TAG>,0", "mov~rcx,rax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 12, 1, 0, 5, 0, 0, 6, 4, 0.08225108225108226, ["mov     r15, [rsp+88h+outptr]", "lea     rdx, [result_size+result_size+0]", "sub     r15, result", "cmp     result_size, newsize_0", "jnb     loc_8468"], ["mov~r15,[rsp+0]", "lea~rdx,[result_size+0]", "sub~r15,result", "cmp~result_size,newsize_0", "jnb~FOO"]], [1, 0, 4, 0, 0, 1, 0, 0, 7, 3, 0.017316017316017316, ["mov     dword ptr [rcx], 0Ch"], ["mov~<TAG>,0"]]], "func_feature": [13, 13, 27, 1, 23, 33, 2, 143, 0.06145, 1, 8], "succs": [[20, 7], [0, 2], [0], [0], [0], [17], [5, 22], [], [10], [8, 3], [16, 15], [10], [4], [12, 14], [11, 12], [17], [17, 18], [1, 19], [4, 13], [4, 21], [], [6, 22], [4]], "fname": "str_cd_iconv", "n_num": 23}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[2, 0, 10, 1, 0, 8, 0, 1, 0, 0, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, src", "sub     rsp, 8", "cmp     byte ptr [src], 0", "jz      short loc_84F7"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,src", "sub~rsp,0", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 1, 0, 2, 8, 1, 3, 0, -1, 0.0, ["call    ___errno_location", "mov     r12d, [rax]", "mov     cd, rax", "mov     rdi, result; ptr", "call    _free", "xor     ebx, ebx", "mov     [rbp+0], r12d", "jmp     short loc_8507"], ["call~FOO", "mov~r12d,<TAG>", "mov~cd,rax", "mov~rdi,result", "call~FOO", "xor~ebx,ebx", "mov~[rbp+0],r12d", "jmp~FOO"]], [0, 0, 2, 0, 1, 4, 1, 1, 0, -1, 0.05, ["mov     rdi, cd; cd", "call    _iconv_close", "test    eax, eax", "jns     short loc_8507"], ["mov~rdi,cd", "call~FOO", "test~eax,eax", "jns~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 0, -1, 0.044444444444444446, ["mov     rdi, src; s", "call    _strdup", "test    rax, rax", "mov     src, rax", "jz      short loc_8518"], ["mov~rdi,src", "call~FOO", "test~rax,rax", "mov~src,rax", "jz~FOO"]], [0, 0, 9, 0, 1, 7, 1, 2, 0, 2, 0.06666666666666667, ["mov     r12, from_codeset", "mov     from_codeset, to_codeset; s2", "mov     rbp, to_codeset", "mov     src, from_codeset; s1", "call    c_strcasecmp", "test    eax, eax", "jnz     short loc_8538"], ["mov~r12,from_codeset", "mov~from_codeset,to_codeset", "mov~rbp,to_codeset", "mov~src,from_codeset", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 1, 0, 2, 7, 0, 3, 0, -1, 0.005555555555555556, ["call    ___errno_location", "mov     r13d, [rax]", "mov     from_codeset, rax", "mov     rdi, cd; cd", "call    _iconv_close", "mov     [r12], r13d", "jmp     loc_8507"], ["call~FOO", "mov~r13d,<TAG>", "mov~from_codeset,rax", "mov~rdi,cd", "call~FOO", "mov~<TAG>,r13d", "jmp~FOO"]], [0, 0, 4, 0, 1, 6, 1, 2, 0, -1, 0.1, ["mov     rdi, src; src", "mov     rsi, cd; cd", "call    str_cd_iconv", "test    rax, rax", "mov     src, rax", "jz      short loc_8590"], ["mov~rdi,src", "mov~rsi,cd", "call~FOO", "test~rax,rax", "mov~src,rax", "jz~FOO"]], [1, 0, 6, 0, 1, 6, 0, 2, 0, 1, 0.11111111111111112, ["mov     rdi, to_codeset; tocode", "mov     rsi, from_codeset; fromcode", "call    _iconv_open", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     to_codeset, rax", "jz      short loc_85B0"], ["mov~rdi,to_codeset", "mov~rsi,from_codeset", "call~FOO", "cmp~rax,0", "mov~to_codeset,rax", "jz~FOO"]], [2, 0, 0, 1, 1, 9, 0, 1, 0, -1, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch", "add     rsp, 8", "mov     rax, result", "pop     result", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["call~FOO", "mov~<TAG>,0", "add~rsp,0", "mov~rax,result", "pop~result", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 1, 0, 0, 2, 1, 1, 0, 0, 0.011111111111111112, ["xor     ebx, ebx", "jmp     loc_8507"], ["xor~ebx,ebx", "jmp~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 0, -1, 0.0, ["add     rsp, 8", "mov     rax, rbx", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "mov~rax,rbx", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]]], "func_feature": [10, 6, 18, 0, 11, 15, 1, 69, 0.03535, 0, 3], "succs": [[3, 4], [10], [1, 10], [8, 10], [3, 7], [10], [2, 5], [9, 6], [], [10], []], "fname": "str_iconv", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[1, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["pop     rbx", "mov     eax, 0FFFFFFFFh", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "mov~eax,0", "pop~stream", "pop~r12", "retn"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, -1, 0.047619047619047616, ["test    eax, eax", "jnz     short loc_8618"], ["test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 2, 0.07142857142857142, ["test    eax, eax", "jz      short loc_85EF"], ["test~eax,eax", "jz~FOO"]], [0, 1, 7, 0, 2, 12, 2, 3, 0, 3, 0.0, ["push    r12", "push    rbp", "mov     rbp, stream", "push    rbx", "call    ___fpending", "mov     ebx, [stream+0]", "mov     rdi, stream; stream", "mov     r12, rax", "call    _fclose", "and     ebx, 20h", "test    ebx, ebx", "jnz     short loc_85F8"], ["push~r12", "push~rbp", "mov~rbp,stream", "push~rbx", "call~FOO", "mov~ebx,[stream+0]", "mov~rdi,stream", "mov~r12,rax", "call~FOO", "and~ebx,<STR>", "test~ebx,ebx", "jnz~FOO"]], [1, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.047619047619047616, ["test    r12, r12", "mov     eax, 0FFFFFFFFh", "jz      short loc_8628"], ["test~r12,r12", "mov~eax,0", "jz~FOO"]], [2, 0, 0, 0, 1, 7, 0, 1, 2, -1, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 0", "mov     eax, 0FFFFFFFFh", "pop     rbx", "pop     stream", "pop     r12", "retn"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "pop~rbx", "pop~stream", "pop~r12", "retn"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["pop     rbx", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "pop~stream", "pop~r12", "retn"]], [1, 0, 0, 0, 1, 9, 0, 1, 3, 0, 0.0, ["call    ___errno_location", "cmp     dword ptr [rax], 9", "pop     rbx", "pop     stream", "pop     r12", "setnz   al", "movzx   eax, al", "neg     eax", "retn"], ["call~FOO", "cmp~<TAG>,0", "pop~rbx", "pop~stream", "pop~r12", "setnz~al", "movzx~eax,al", "neg~eax", "retn"]]], "func_feature": [4, 5, 8, 0, 8, 8, 2, 44, 0.02083, 0, 0], "succs": [[], [0, 5], [4, 6], [1, 2], [6, 7], [], [], []], "fname": "close_stream", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[1, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0.0, ["mov     rax, rcx", "add     rsp, 8", "retn"], ["mov~rax,rcx", "add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 6, 2, 2, 1, -1, 0.16666666666666666, ["sub     rsp, 8", "call    _malloc", "xor     ecx, ecx", "test    rax, rax", "mov     rsi, rax", "jz      short loc_869D"], ["sub~rsp,0", "call~FOO", "xor~ecx,ecx", "test~rax,rax", "mov~rsi,rax", "jz~FOO"]], [4, 0, 1, 4, 0, 16, 0, 0, 2, -1, 0.0, ["lea     rcx, [p+10h]", "mov     dword ptr [rax+0Ch], 1415FB4Ah", "mov     rdx, 0FF00FF00FF00FF01h", "mov     rax, p", "mul     rdx", "shr     rdx, 8", "mov     rax, rdx", "shl     rax, 8", "add     rdx, rax", "mov     rax, p", "sub     rax, rdx", "mov     rdx, rax", "lea     slot, mmalloca_results", "mov     rdi, [rax+slot*8]", "mov     [rax+slot*8], p", "mov     [rsi], rdi"], ["lea~rcx,[p+0]", "mov~[word ptr [rax+0],0", "mov~rdx,0", "mov~rax,p", "mul~,rdx", "shr~rdx,0", "mov~rax,rdx", "shl~rax,0", "add~rdx,rax", "mov~rax,p", "sub~rax,rdx", "mov~rdx,rax", "lea~slot,<TAG>", "mov~rdi,<TAG>", "mov~<TAG>,p", "mov~<TAG>,rdi"]], [1, 0, 4, 1, 0, 2, 0, 0, 0, 1, 0.0, ["add     n, 10h; size", "jb      short loc_86A5"], ["add~n,0", "jb~FOO"]], [0, 0, 0, 0, 0, 3, 1, 0, 1, 0, 0.0, ["xor     ecx, ecx", "mov     rax, rcx", "retn"], ["xor~ecx,ecx", "mov~rax,rcx", "retn"]]], "func_feature": [1, 3, 2, 0, 5, 5, 2, 30, 0.03333, 1, 7], "succs": [[], [0, 2], [0], [1, 4], []], "fname": "mmalloca", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 8, 0, 0, 2, 0, 1, 0, 0, 0.09615384615384615, ["cmp     p, rax", "jz      short loc_8718"], ["cmp~p,rax", "jz~FOO"]], [0, 0, 8, 0, 0, 3, 1, 1, 4, -1, 0.16025641025641024, ["mov     rax, [rcx-10h]", "test    rax, rax", "jnz     short loc_8700"], ["mov~rax,[rcx-10h]+0]", "test~rax,rax", "jnz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 6, -1, 0.019230769230769232, ["mov     rcx, rax"], ["mov~rcx,rax"]], [1, 0, 1, 1, 0, 4, 0, 1, 6, -1, 0.0641025641025641, ["mov     rax, [p-10h]", "sub     p, 10h; ptr", "mov     [rcx], rax", "jmp     _free"], ["mov~rax,[p-10h]+0]", "sub~p,0", "mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 2, 0, 0, 2, 0, 1, 5, 0, 0.0641025641025641, ["lea     rcx, [rax+slot*8]", "jmp     short loc_871C"], ["lea~rcx,<TAG>", "jmp~FOO"]], [1, 0, 2, 1, 0, 1, 0, 0, 6, -1, 0.038461538461538464, ["sub     rcx, 10h"], ["sub~rcx,0"]], [1, 0, 12, 0, 0, 2, 0, 1, 1, 4, 0.07051282051282051, ["cmp     dword ptr [p-4], 1415FB4Ah", "jz      short loc_86C0"], ["cmp~[word ptr [p-4]+0],0", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 0, 5, 0.0, ["test    p, p", "jz      short locret_86BE"], ["test~p,p", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 7, -1, 0.0, [], []], [0, 0, 10, 0, 0, 2, 0, 1, 3, 2, 0.17307692307692307, ["cmp     rcx, p", "jnz     short loc_8708"], ["cmp~rcx,p", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 5, -1, 0.02564102564102564, ["jmp     short locret_86BE"], ["jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 4, 1, 0.07692307692307693, ["jmp     short loc_8730"], ["jmp~FOO"]], [3, 0, 11, 4, 0, 14, 1, 1, 2, 3, 0.1282051282051282, ["mov     rax, p", "mov     rdx, 0FF00FF00FF00FF01h", "mul     rdx", "shr     rdx, 8", "mov     rax, rdx", "shl     rax, 8", "add     rdx, rax", "mov     rax, p", "sub     rax, rdx", "mov     rdx, rax", "lea     slot, mmalloca_results", "mov     rcx, [rax+slot*8]", "test    rcx, rcx", "jz      short locret_86BE"], ["mov~rax,p", "mov~rdx,0", "mul~,rdx", "shr~rdx,0", "mov~rax,rdx", "shl~rax,0", "add~rdx,rax", "mov~rax,p", "sub~rax,rdx", "mov~rdx,rax", "lea~slot,<TAG>", "mov~rcx,<TAG>", "test~rcx,rcx", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 3, 10, 0, 14, 18, 3, 36, 0.06548, 1, 6], "succs": [[2, 5], [0, 10], [1], [8], [3], [3], [12, 13], [13, 6], [], [1, 11], [13], [4], [9, 13], []], "fname": "freea", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.06666666666666667, ["mov     rsi, [rsp+78h+var_30]", "xor     rsi, fs:28h", "mov     rax, rbx", "jnz     loc_8921"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~rax,rbx", "jnz~FOO"]], [0, 0, 23, 0, 0, 3, 1, 1, 5, 8, 0.26666666666666666, ["mov     eax, [rsp+78h+var_54]", "test    eax, eax", "jz      loc_8773"], ["mov~eax,[rsp+0]", "test~eax,eax", "jz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 1, 1, -1, 0.005, ["mov     rdi, string_0; s", "call    _strlen", "mov     string_0, rax"], ["mov~rdi,string_0", "call~FOO", "mov~string_0,rax"]], [2, 0, 23, 0, 0, 3, 0, 1, 7, 9, 0.07083333333333333, ["mov     [rsp+78h+var_78], 0", "mov     [rsp+78h+var_6C], 1", "jmp     loc_87FF"], ["mov~<TAG>,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 7, 9, 0.07083333333333333, ["mov     [rsp+78h+var_6C], 1", "jmp     loc_87FF"], ["mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 23, 0, 0, 5, 0, 0, 4, 9, 0.045000000000000005, ["mov     [rsp+78h+var_60], 1", "movsx   eax, byte ptr [rcx]", "mov     [rsp+78h+var_58], 1", "mov     [rsp+78h+var_6C], 1", "mov     [rsp+78h+var_54], eax"], ["mov~[rsp+0],0", "movsx~eax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],eax"]], [1, 0, 23, 0, 1, 5, 1, 2, 6, 10, 0.165, ["lea     rdi, [rbp+4]; ps", "mov     [rsp+78h+var_58], 1", "call    _mbsinit", "test    eax, eax", "jz      short loc_88F8"], ["lea~rdi,[rbp+0]", "mov~[rsp+0],0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 23, 0, 0, 2, 1, 1, 5, 3, 0.20833333333333334, ["test    rax, rax", "jnz     short loc_8884"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 23, 0, 0, 3, 1, 1, 7, 1, 0.06166666666666667, ["mov     edx, [rsp+78h+var_54]", "test    edx, edx", "jnz     loc_8945"], ["mov~edx,[rsp+0]", "test~edx,edx", "jnz~FOO"]], [2, 0, 23, 2, 0, 4, 0, 0, 5, 7, 0.305, ["mov     rax, [rsp+78h+var_60]", "add     [rsp+78h+string], rax", "add     count, 1", "mov     [rsp+78h+var_6C], 0"], ["mov~rax,[rsp+0]", "add~[rsp+0],rax", "add~count,0", "mov~[rsp+0],0"]], [2, 0, 23, 0, 0, 3, 0, 1, 4, 8, 0.03333333333333333, ["mov     [rsp+78h+var_60], 1", "mov     [rsp+78h+var_58], 0", "jmp     loc_880B"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 23, 0, 1, 5, 0, 2, 5, 8, 0.015000000000000001, ["mov     rdi, [rsp+78h+string]; s", "call    _strlen", "mov     [rsp+78h+var_58], 0", "mov     [rsp+78h+var_60], rax", "jmp     loc_880B"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 5, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5707; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aMbsinitIterSta; \"mbsinit (&iter->state)\"", "mov     edx, 8Eh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 23, 0, 1, 4, 1, 2, 4, 7, 0.07833333333333334, ["mov     rdi, r13; ps", "call    _mbsinit", "test    eax, eax", "jz      short loc_8902"], ["mov~rdi,r13", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 2, 6, 0.38333333333333336, ["cmp     [rsp+78h+var_78], 0", "jz      short loc_87C8"], ["cmp~<TAG>,0", "jz~FOO"]], [3, 0, 23, 0, 0, 9, 1, 1, 1, 7, 0.03333333333333333, ["mov     rbp, rsp", "mov     [rsp+78h+string], string_0", "mov     [rsp+78h+var_78], 0", "mov     [rsp+78h+var_74], 0", "mov     [rsp+78h+var_6C], 0", "xor     ebx, ebx", "lea     r12, is_basic_table", "lea     r13, [rbp+4]", "jmp     short loc_881E"], ["mov~rbp,rsp", "mov~[rsp+0],string_0", "mov~<TAG>,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~ebx,ebx", "lea~r12,<TAG>", "lea~r13,[rbp+0]", "jmp~FOO"]], [2, 0, 23, 0, 0, 8, 1, 0, 3, 8, 0.14666666666666667, ["mov     rcx, [rsp+78h+string]", "movzx   edx, byte ptr [rcx]", "mov     eax, edx", "shr     al, 5", "and     eax, 7", "mov     eax, [r12+rax*4]", "bt      eax, edx", "jnb     loc_88A8"], ["mov~rcx,[rsp+0]", "movzx~edx,<TAG>", "mov~eax,edx", "shr~al,0", "and~eax,0", "mov~eax,<TAG>", "bt~eax,edx", "jnb~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 5, 6, 0.05333333333333334, ["mov     [rsp+78h+var_78], 1", "jmp     loc_8824"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 1, 25, 1, 1, 12, 1, 2, 0, 8, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, string_0", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+78h+var_30], rax", "xor     eax, eax", "call    ___ctype_get_mb_cur_max", "cmp     rax, 1", "ja      short loc_8798"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,string_0", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "cmp~rax,0", "ja~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 7, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5707; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, aIterCurPtr0; \"*iter->cur.ptr == '\\\\0'\"", "mov     edx, 0AAh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [2, 0, 23, 0, 0, 4, 0, 1, 6, 2, 0.08666666666666667, ["mov     rax, [rsp+78h+string]", "mov     [rsp+78h+var_60], 1", "cmp     byte ptr [rax], 0", "jnz     loc_8926"], ["mov~rax,[rsp+0]", "mov~[rsp+0],0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 23, 0, 3, 12, 0, 4, 3, 5, 0.30333333333333334, ["call    ___ctype_get_mb_cur_max", "mov     rdi, [rsp+78h+string]; string", "mov     rsi, rax; maxlen", "call    strnlen1", "mov     rsi, [rsp+78h+string]; s", "lea     rcx, [rbp+4]; p", "lea     rdi, [rbp+24h]; pwc", "mov     rdx, rax; n", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+78h+var_60], rax", "jz      short loc_88C0"], ["call~FOO", "mov~rdi,[rsp+0]", "mov~rsi,rax", "call~FOO", "mov~rsi,[rsp+0]", "lea~rcx,[rbp+0]", "lea~rdi,[rbp+0]", "mov~rdx,rax", "call~FOO", "cmp~rax,0", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 4, 4, 0.24666666666666667, ["cmp     rax, 0FFFFFFFFFFFFFFFEh", "jz      short loc_88D8"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 8, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___5707; \"mbuiter_multi_next\"", "lea     rsi, file; \"mbuiter.h\"", "lea     rdi, assertion; \"iter->cur.wc == 0\"", "mov     edx, 0ABh; line", "call    ___assert_fail"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "mov~edx,0", "call~FOO"]], [0, 1, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]]], "func_feature": [12, 9, 29, 5, 26, 33, 1, 119, 0.10173, 7, 4], "succs": [[25, 14], [0, 9], [0], [1], [1], [1], [3, 4], [21, 6], [24, 6], [15], [9], [9], [], [18, 12], [], [17, 22], [15], [13, 5], [22], [16, 2], [], [8, 20], [10, 23], [11, 7], [], []], "fname": "mbslen", "n_num": 26}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 0, 0, 0, 0.16666666666666666, ["xor     ebx, ebx", "nop     dword ptr [rax+rax+00000000h]"], ["xor~ebx,ebx", "nop~[word ptr [rax+0]"]], [2, 0, 3, 2, 1, 17, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15, rdx", "push    r13", "push    r12", "lea     r12, __frame_dummy_init_array_entry", "push    rbp", "lea     rbp, __do_global_dtors_aux_fini_array_entry", "push    rbx", "mov     r13d, edi", "mov     r14, rsi", "sub     rbp, r12", "sub     rsp, 8", "sar     rbp, 3", "call    _init_proc", "test    rbp, rbp", "jz      short loc_89C6"], ["push~r15", "push~r14", "mov~r15,rdx", "push~r13", "push~r12", "lea~r12,<TAG>", "push~rbp", "lea~rbp,<TAG>", "push~rbx", "mov~r13d,edi", "mov~r14,rsi", "sub~rbp,r12", "sub~rsp,0", "sar~rbp,0", "call~FOO", "test~rbp,rbp", "jz~FOO"]], [1, 0, 2, 1, 1, 7, 0, 2, 2, 1, 0.16666666666666666, ["mov     rdx, r15", "mov     rsi, r14", "mov     edi, r13d", "call    qword ptr [r12+rbx*8]", "add     rbx, 1", "cmp     rbp, rbx", "jnz     short loc_89B0"], ["mov~rdx,r15", "mov~rsi,r14", "mov~edi,r13d", "call~<TAG>", "add~rbx,0", "cmp~rbp,rbx", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 5, 0, 34, 0.08333, 2, 4], "succs": [[2], [0, 3], [2, 3], []], "fname": "__libc_csu_init", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_csu_fini", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rdx, cs:__dso_handle", "xor     esi, esi", "jmp     ___cxa_atexit"], ["mov~rdx,<TAG>", "xor~esi,esi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 1, 3, 0.0, 1, 0], "succs": [[1], []], "fname": "atexit", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[2, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0.0, ["sub     rsp, 8; _fini", "add     rsp, 8", "retn"], ["sub~rsp,0", "add~rsp,0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 2], "succs": [[]], "fname": "term_proc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __uflow:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__uflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getenv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn free:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn abort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __errno_location:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strncmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fpending:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iconv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iconv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn write:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "write", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn textdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fclose:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn bindtextdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn stpcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "stpcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dcgettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_get_mb_cur_max:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strlen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __stack_chk_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getopt_long:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbrtowc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strrchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __assert_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fscanf:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fscanf", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ioctl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strnlen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strnlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn close:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn read:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "read", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __libc_start_main:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_start_main", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fputs_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn calloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswalnum:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswalnum", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn malloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn nl_langinfo:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ungetc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ungetc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn realloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fdopen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fdopen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn setlocale:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __printf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iconv_close:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iconv_close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswspace:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswspace", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memmove:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn error:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn open:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __cxa_atexit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getpagesize:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getpagesize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fwrite:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strdup:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strdup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbsinit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswprint:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp___cxa_finalize:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp___cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_b_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iconv_open:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iconv_open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __sprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__sprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.2_x86_O0_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __gmon_start__:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__gmon_start__", "n_num": 1}
