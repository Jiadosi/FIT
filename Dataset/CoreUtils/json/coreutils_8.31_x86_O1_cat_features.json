{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    rax ; __gmon_start__"], ["call~rax"]], [1, 0, 2, 1, 0, 4, 1, 1, 0, 1, 0.0, ["sub     rsp, 8; _init", "mov     rax, cs:__gmon_start___ptr", "test    rax, rax", "jz      short loc_142A"], ["sub~rsp,0", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 3, 1, 7, 0.0, 1, 2], "succs": [[2], [0, 2], []], "fname": "init_proc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0.0, ["push    cs:qword_207E30", "jmp     cs:qword_207E38"], ["push~<TAG>", "jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 48, 2, 0.0, 2, 0], "succs": [[]], "fname": "sub_1430", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:free_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 7, 1, 0.0, 1, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:abort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 8, 1, 0.0, 1, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__errno_location_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 25, 1, 0.0, 1, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strncmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fpending_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:write_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "write", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:textdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fclose_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:bindtextdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:stpcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "stpcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dcgettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 43, 1, 0.0, 1, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_get_mb_cur_max_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__stack_chk_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 10, 1, 0.0, 1, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getopt_long_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbrtowc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strrchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:lseek_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ioctl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:close_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:posix_fadvise_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "posix_fadvise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:read_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "read", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fputs_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:calloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fileno_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:malloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fflush_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:nl_langinfo_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__freading_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:realloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:setlocale_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__printf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 10, 1, 0.0, 1, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memmove_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:error_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 17, 1, 0.0, 1, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:open_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fseeko_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_atexit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpagesize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpagesize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fwrite_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 14, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbsinit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswprint_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_b_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_finalize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[1, 0, 0, 0, 1, 12, 2, 1, 0, 0, 0.0, ["xor     ebp, ebp", "mov     r9, rdx; rtld_fini", "pop     rsi; argc", "mov     rdx, rsp; ubp_av", "and     rsp, 0FFFFFFFFFFFFFFF0h", "push    rax", "push    rsp; stack_end", "lea     r8, __libc_csu_fini; fini", "lea     rcx, __libc_csu_init; init", "lea     rdi, main; main", "call    cs:__libc_start_main_ptr", "hlt"], ["xor~ebp,ebp", "mov~r9,rdx", "pop~rsi", "mov~rdx,rsp", "and~rsp,0", "push~rax", "push~rsp", "lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "call~<TAG>", "hlt"]]], "func_feature": [1, 2, 1, 0, 1, 0, 0, 12, 0.0, 4, 0], "succs": [[]], "fname": "_start", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_deregisterTMCloneTable_ptr", "test    rax, rax", "jz      short loc_17B0"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 6, 0, 1, 0, 1, 0.0, ["lea     rdi, __bss_start", "push    rbp", "lea     rax, __bss_start", "cmp     rax, rdi", "mov     rbp, rsp", "jz      short loc_17B0"], ["lea~rdi,<TAG>", "push~rbp", "lea~rax,<TAG>", "cmp~rax,rdi", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, -1, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 13, 0.04167, 2, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "deregister_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [3, 0, 3, 2, 0, 11, 0, 1, 0, 0, 0.0, ["lea     rdi, __bss_start", "lea     rsi, __bss_start", "push    rbp", "sub     rsi, rdi", "mov     rbp, rsp", "sar     rsi, 3", "mov     rax, rsi", "shr     rax, 3Fh", "add     rsi, rax", "sar     rsi, 1", "jz      short loc_1800"], ["lea~rdi,<TAG>", "lea~rsi,<TAG>", "push~rbp", "sub~rsi,rdi", "mov~rbp,rsp", "sar~rsi,0", "mov~rax,rsi", "shr~rax,0", "add~rsi,rax", "sar~rsi,0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_registerTMCloneTable_ptr", "test    rax, rax", "jz      short loc_1800"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, 0, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 18, 0.04167, 2, 2], "succs": [[], [0, 2], [0, 3], []], "fname": "register_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[1, 0, 0, 0, 1, 4, 0, 1, 0, 0, 0.0, ["call    deregister_tm_clones", "mov     cs:completed_7698, 1", "pop     rbp", "retn"], ["call~FOO", "mov~<TAG>,0", "pop~rbp", "retn"]], [1, 0, 2, 0, 0, 4, 0, 1, 1, -1, 0.16666666666666666, ["cmp     cs:__cxa_finalize_ptr, 0", "push    rbp", "mov     rbp, rsp", "jz      short loc_1833"], ["cmp~<TAG>,0", "push~rbp", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     rdi, cs:__dso_handle", "call    __cxa_finalize"], ["mov~rdi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:completed_7698, 0", "jnz     short locret_1848"], ["cmp~<TAG>,0", "jnz~FOO"]]], "func_feature": [2, 0, 4, 0, 5, 5, 0, 13, 0.03333, 3, 0], "succs": [[], [0, 2], [0], [], [1, 3]], "fname": "__do_global_dtors_aux", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "pop     rbp", "jmp     register_tm_clones"], ["push~rbp", "mov~rbp,rsp", "pop~rbp", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "frame_dummy", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 9, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rcx, cs:line_num_start", "lea     rax, line_buf+11h; \"0\\t\""], ["mov~rcx,<TAG>", "lea~rax,<TAG>"]], [1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.08333333333333333, ["mov     byte ptr cs:line_buf, 3Eh ; '>'; \"                 0\\t\"", "jmp     short loc_1898"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 5, 0, 0, 3, 0, 0, 0, 1, 0.20833333333333331, ["lea     endp, line_buf; \"                 0\\t\"", "cmp     rcx, rax", "jbe     short loc_18BB"], ["lea~endp,<TAG>", "cmp~rcx,rax", "jbe~FOO"]], [0, 0, 2, 0, 0, 3, 0, 0, 0, -1, 0.16666666666666666, ["mov     rax, cs:line_num_print", "cmp     cs:line_num_start, rax", "jnb     short locret_18B3"], ["mov~rax,<TAG>", "cmp~<TAG>,rax", "jnb~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 0, -1, 0.08333333333333333, ["lea     rax, [rcx-1]", "mov     cs:line_num_start, rax", "mov     byte ptr [rcx-1], 31h ; '1'"], ["lea~rax,[rcx-1]+0]", "mov~<TAG>,rax", "mov~[yte ptr [rcx-1]+0],0"]], [2, 0, 9, 1, 0, 4, 0, 0, 0, 2, 0.16666666666666666, ["sub     endp, 1", "mov     byte ptr [endp+1], 30h ; '0'", "cmp     rcx, endp", "jbe     short loc_1868"], ["sub~endp,0", "mov~[yte ptr [endp+0],0", "cmp~rcx,endp", "jbe~FOO"]], [1, 0, 1, 1, 0, 2, 0, 0, 0, -1, 0.0, ["sub     rax, 1", "mov     cs:line_num_print, rax"], ["sub~rax,0", "mov~<TAG>,rax"]], [1, 0, 9, 0, 0, 3, 0, 1, 0, 3, 0.125, ["movzx   edx, byte ptr [endp]", "cmp     dl, 38h ; '8'", "jle     short loc_18B5"], ["movzx~edx,<TAG>", "cmp~dl,0", "jle~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 0, 1, 0, 3, 0, 0, 0, -1, 0.0, ["add     edx, 1", "mov     [endp], dl", "retn"], ["add~edx,0", "mov~<TAG>,dl", "retn"]]], "func_feature": [0, 0, 2, 0, 10, 12, 2, 26, 0.08333, 4, 3], "succs": [[7], [3], [1, 4], [8, 6], [3], [2, 7], [8], [9, 5], [], []], "fname": "next_line_num", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[1, 0, 16, 1, 0, 10, 2, 1, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "add     rsp, 0FFFFFFFFFFFFFF80h", "mov     ebx, edi", "mov     rax, fs:28h", "mov     [rsp+98h+var_20], rax", "xor     eax, eax", "test    edi, edi", "jz      short loc_1922"], ["push~r12", "push~rbp", "push~rbx", "add~rsp,0", "mov~ebx,edi", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~edi,edi", "jz~FOO"]], [4, 0, 1, 0, 2, 11, 0, 3, 0, -1, 0.05416666666666667, ["mov     edx, 5; category", "lea     rsi, aOrAvailableLoc; \"or available locally via: info '(coreut\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "jmp     loc_191B"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,r12", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [4, 0, 2, 0, 2, 13, 0, 3, 0, -1, 0.027083333333333334, ["mov     edx, 5; category", "lea     rsi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "lea     rcx, command_name; \"cat\"", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "lea     rbp, command_name; \"cat\"", "lea     r12, aMultiCallInvoc+0Ah; \" invocation\"", "jmp     loc_1BF3"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "lea~rbp,<TAG>", "lea~r12,<TAG>", "jmp~FOO"]], [4, 0, 2, 0, 2, 13, 0, 3, 0, 0, 0.008333333333333333, ["mov     edx, 5; category", "lea     rsi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "lea     rcx, command_name; \"cat\"", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "lea     rbp, command_name; \"cat\"", "lea     r12, aMultiCallInvoc+0Ah; \" invocation\"", "jmp     loc_1BF3"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "lea~rbp,<TAG>", "lea~r12,<TAG>", "jmp~FOO"]], [4, 0, 2, 0, 2, 15, 0, 2, 0, -1, 0.052083333333333336, ["mov     edx, 5; category", "lea     rsi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "lea     rcx, command_name; \"cat\"", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "lea     rax, command_name; \"cat\"", "cmp     rbp, rax", "lea     r12, aMultiCallInvoc+0Ah; \" invocation\"", "lea     rax, aWrittenBySSAnd+1Bh; \"\"", "cmovnz  r12, rax"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "lea~rax,<TAG>", "cmp~rbp,rax", "lea~r12,<TAG>", "lea~rax,<TAG>", "cmovnz~r12,rax"]], [6, 0, 5, 0, 3, 15, 1, 4, 0, -1, 0.08125, ["mov     edx, 5; category", "lea     rsi, aSOnlineHelpS; \"\\n%s online help: <%s>\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, package; \"GNU \"", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     esi, 0; locale", "mov     edi, 5; category", "call    _setlocale", "test    rax, rax", "jz      short loc_1BA1"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~esi,0", "mov~edi,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 11, 0, 0, 3, 1, 1, 0, 3, 0.17916666666666667, ["mov     rbp, [rdx+8]", "test    rbp, rbp", "jz      loc_1CA3"], ["mov~rbp,[rdx+0]", "test~rbp,rbp", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 0, -1, 0.016666666666666666, ["lea     rbp, command_name; \"cat\""], ["lea~rbp,<TAG>"]], [1, 0, 6, 0, 1, 6, 1, 2, 0, 1, 0.058333333333333334, ["mov     edx, 3; n", "lea     rsi, s2; \"en_\"", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     loc_1C26"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [6, 0, 8, 0, 3, 15, 1, 4, 0, 2, 0.10208333333333333, ["mov     edx, 5; category", "lea     rsi, aSOnlineHelpS; \"\\n%s online help: <%s>\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, package; \"GNU \"", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     esi, 0; locale", "mov     edi, 5; category", "call    _setlocale", "test    rax, rax", "jz      loc_1C5A"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~esi,0", "mov~edi,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [22, 0, 14, 0, 16, 94, 0, 16, 0, 5, 0.05416666666666667, ["mov     rbp, cs:program_name", "mov     edx, 5; category", "lea     rsi, aUsageSOptionFi; \"Usage: %s [OPTION]... [FILE]...\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aConcatenateFil; \"Concatenate FILE(s) to standard output.\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aWithNoFileOrWh; \"\\nWith no FILE, or when FILE is -, read\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aAShowAllEquiva; \"\\n  -A, --show-all           equivalent\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aTEquivalentToV; \"  -t                       equivalent t\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aHelpDisplayThi; \"      --help     display this help and \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aVersionOutputV; \"      --version  output version informa\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:program_name", "mov     edx, 5; category", "lea     rsi, aExamplesSFGOut; \"\\nExamples:\\n  %s f - g  Output f's con\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "lea     rax, asc_5488; \"[\"", "mov     [rsp+98h+var_98], rax", "lea     rax, aTestInvocation; \"test invocation\"", "mov     [rsp+98h+var_90], rax", "lea     rax, domainname; \"coreutils\"", "mov     [rsp+98h+var_88], rax", "lea     rax, aMultiCallInvoc; \"Multi-call invocation\"", "mov     [rsp+98h+var_80], rax", "lea     rax, aSha224sum; \"sha224sum\"", "mov     [rsp+98h+var_78], rax", "lea     rax, aSha2Utilities; \"sha2 utilities\"", "mov     [rsp+98h+var_70], rax", "lea     rcx, aSha256sum; \"sha256sum\"", "mov     [rsp+98h+var_68], rcx", "mov     [rsp+98h+var_60], rax", "lea     rcx, aSha384sum; \"sha384sum\"", "mov     [rsp+98h+var_58], rcx", "mov     [rsp+98h+var_50], rax", "lea     rcx, aSha512sum; \"sha512sum\"", "mov     [rsp+98h+var_48], rcx", "mov     [rsp+98h+var_40], rax", "mov     [rsp+98h+var_38], 0", "mov     [rsp+98h+var_30], 0", "mov     rdx, rsp", "lea     r8, command_name; \"cat\""], ["mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbp", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "lea~rax,<TAG>", "mov~<TAG>,rax", "lea~rax,<TAG>", "mov~[rsp+0],rax", "lea~rax,<TAG>", "mov~[rsp+0],rax", "lea~rax,<TAG>", "mov~[rsp+0],rax", "lea~rax,<TAG>", "mov~[rsp+0],rax", "lea~rax,<TAG>", "mov~[rsp+0],rax", "lea~rcx,<TAG>", "mov~[rsp+0],rcx", "mov~[rsp+0],rax", "lea~rcx,<TAG>", "mov~[rsp+0],rcx", "mov~[rsp+0],rax", "lea~rcx,<TAG>", "mov~[rsp+0],rcx", "mov~[rsp+0],rax", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~rdx,rsp", "lea~r8,<TAG>"]], [2, 0, 14, 0, 0, 7, 1, 1, 0, 4, 0.0, ["mov     ecx, 4", "mov     rsi, r8", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     short loc_1B0F"], ["mov~ecx,0", "mov~rsi,r8", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [1, 0, 14, 1, 0, 4, 1, 1, 0, 4, 0.10416666666666667, ["add     rdx, 10h", "mov     rdi, [rdx]", "test    rdi, rdi", "jz      short loc_1B2E"], ["add~rdx,0", "mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [2, 0, 3, 0, 2, 9, 0, 3, 0, -1, 0.020833333333333332, ["mov     r12, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aReportAnyTrans; \"Report any translation bugs to <https:/\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, r12; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "jmp     loc_1BA1"], ["mov~r12,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,r12", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 4, 0, 1, 6, 1, 2, 0, -1, 0.025, ["mov     edx, 3; n", "lea     rsi, s2; \"en_\"", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     loc_1C2D"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [4, 0, 1, 0, 2, 11, 0, 2, 0, -1, 0.004166666666666667, ["mov     rbp, cs:program_name", "mov     edx, 5; category", "lea     rsi, msgid; \"Try '%s --help' for more information.\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     eax, 0", "call    ___fprintf_chk"], ["mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "mov~esi,0", "mov~rdi,<TAG>", "mov~eax,0", "call~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 0, -1, 0.0, ["mov     edi, ebx; status", "call    _exit"], ["mov~edi,ebx", "call~FOO"]]], "func_feature": [37, 9, 49, 15, 17, 24, 2, 235, 0.04632, 32, 2], "succs": [[10, 15], [16], [1], [1], [1], [4, 14], [9, 5], [13], [3, 7], [8, 2], [12], [12, 6], [11, 6], [4], [4, 13], [16], []], "fname": "usage", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[1, 0, 111, 0, 1, 7, 1, 2, 0, 0, 0.3201149425287356, ["mov     ebx, cs:input_desc", "lea     rdx, [rsp+168h+stat_buf]; stat_buf", "mov     esi, ebx; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "js      loc_20B8"], ["mov~ebx,<TAG>", "lea~rdx,[rsp+0]", "mov~esi,ebx", "mov~edi,0", "call~FOO", "test~eax,eax", "js~FOO"]], [2, 0, 111, 0, 1, 7, 1, 1, 8, 5, 0.17586206896551726, ["mov     esi, 0; oflag", "mov     rdi, rdx; file", "mov     eax, 0", "call    _open", "mov     cs:input_desc, eax", "test    eax, eax", "jns     loc_25E4"], ["mov~esi,0", "mov~rdi,rdx", "mov~eax,0", "call~FOO", "mov~<TAG>,eax", "test~eax,eax", "jns~FOO"]], [2, 0, 111, 0, 0, 2, 0, 0, 8, 7, 0.15828544061302682, ["mov     cs:input_desc, 0", "mov     [rsp+168h+have_read_stdin], 1"], ["mov~<TAG>,0", "mov~[rsp+0],0"]], [1, 0, 111, 0, 0, 2, 0, 1, 18, 17, 0.10834131545338443, ["cmp     [rsp+168h+show_ends], 0", "jz      short loc_2809"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 111, 1, 0, 4, 1, 1, 17, 18, 0.20640964240102175, ["add     [rsp+168h+var_148], 1", "mov     eax, [rsp+168h+var_148]", "test    eax, eax", "jle     short loc_27FB"], ["add~[rsp+0],0", "mov~eax,[rsp+0]", "test~eax,eax", "jle~FOO"]], [1, 0, 111, 0, 0, 2, 0, 1, 19, 18, 0.013074712643678162, ["cmp     [rsp+168h+number_nonblank], 0", "jnz     short loc_27FB"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 111, 0, 2, 6, 0, 3, 21, 18, 0.0, ["call    next_line_num", "mov     rsi, cs:line_num_print; src", "mov     rdi, rbx; dest", "call    _stpcpy", "mov     rbx, rax", "jmp     short loc_27FB"], ["call~FOO", "mov~rsi,<TAG>", "mov~rdi,rbx", "call~FOO", "mov~rbx,rax", "jmp~FOO"]], [1, 0, 111, 0, 0, 2, 0, 1, 20, 18, 0.006369731800766284, ["cmp     [rsp+168h+number], 0", "jnz     short loc_2826"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 111, 0, 0, 2, 0, 1, 22, 18, 0.15981800766283524, ["cmp     [rsp+168h+var_148], 0", "js      short loc_240F"], ["cmp~[rsp+0],0", "js~FOO"]], [1, 0, 111, 0, 0, 2, 0, 1, 21, 14, 0.22873563218390805, ["cmp     r15b, 0Ah", "jz      loc_229C"], ["cmp~r15b,0", "jz~FOO"]], [4, 0, 1, 0, 3, 11, 0, 3, 13, 1, 2.3946360153256706e-05, ["mov     edx, 5; category", "lea     rsi, aClosingStandar; \"closing standard input\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     rdx, rbx; format", "mov     esi, [rax]; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~rdx,rbx", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 4, 0, 1, 4, 1, 1, 12, 2, 0.006513409961685824, ["mov     edi, 0; fd", "call    _close", "test    eax, eax", "jns     short loc_298D"], ["mov~edi,0", "call~FOO", "test~eax,eax", "jns~FOO"]], [1, 0, 111, 0, 0, 2, 0, 0, 19, 17, 0.0, ["mov     byte ptr [rbx], 24h ; '$'", "lea     rbx, [rbx+1]"], ["mov~<TAG>,0", "lea~rbx,[rbx+0]"]], [1, 0, 111, 0, 0, 2, 0, 1, 23, 18, 0.006369731800766284, ["cmp     [rsp+168h+number], 0", "jnz     loc_283F"], ["cmp~[rsp+0],0", "jnz~FOO"]], [3, 0, 111, 0, 0, 20, 2, 1, 5, 8, 0.15416666666666667, ["movsxd  rax, ebx", "mov     [rsp+168h+var_108], rax", "mov     rax, [rsp+168h+stat_buf]", "mov     [rsp+168h+var_F8], rax", "mov     out_dev_0, [rsp+168h+out_ino]", "mov     [rsp+168h+var_F0], rax", "mov     eax, [rsp+168h+var_C0]", "and     eax, 0F000h", "mov     [rsp+168h+var_100], eax", "movzx   eax, [rsp+168h+number]", "or      al, [rsp+168h+show_ends]", "mov     [rsp+168h+var_F9], al", "lea     rax, aLt+2; \"-\"", "mov     cs:infile, rax", "mov     eax, cs:optind@@GLIBC_2_2_5", "mov     [rsp+168h+argind], eax", "mov     [rsp+168h+have_read_stdin], 0", "mov     [rsp+168h+ok], 1", "mov     r13d, r14d", "jmp     loc_2592"], ["movsxd~rax,ebx", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~out_dev_0,[rsp+0]", "mov~[rsp+0],rax", "mov~eax,[rsp+0]", "and~eax,0", "mov~[rsp+0],eax", "movzx~eax,[rsp+0]", "or~al,[rsp+0]", "mov~[rsp+0],al", "lea~rax,<TAG>", "mov~<TAG>,rax", "mov~eax,<TAG>", "mov~[rsp+0],eax", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r13d,r14d", "jmp~FOO"]], [1, 0, 112, 0, 0, 2, 0, 1, 4, 9, 0.09744572158365265, ["mov     r12d, 20000h", "jmp     loc_1FAF"], ["mov~r12d,0", "jmp~FOO"]], [0, 1, 112, 0, 0, 5, 0, 0, 4, 9, 0.04738186462324395, ["lea     rdx, [r12-1]", "lea     rax, [rax+1FFFFh]", "cmp     rdx, rax", "mov     eax, 200h", "cmova   r12, rax"], ["lea~rdx,[r12-1]+0]", "lea~rax,[rax+0]", "cmp~rdx,rax", "mov~eax,<STR>", "cmova~r12,rax"]], [1, 0, 111, 0, 0, 2, 0, 1, 23, 17, 0.1563697318007663, ["cmp     [rsp+168h+show_nonprinting], 0", "jz      loc_2914"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 111, 0, 2, 6, 0, 3, 24, 18, 0.0, ["call    next_line_num", "mov     rsi, cs:line_num_print; src", "mov     rdi, rbx; dest", "call    _stpcpy", "mov     rbx, rax", "jmp     loc_240F"], ["call~FOO", "mov~rsi,<TAG>", "mov~rdi,rbx", "call~FOO", "mov~rbx,rax", "jmp~FOO"]], [1, 0, 111, 0, 1, 6, 0, 2, 18, 9, 0.00646551724137931, ["mov     rdx, rax; count", "mov     rsi, rbp; buf", "mov     edi, 1; fd", "call    full_write", "cmp     rbx, rax", "jz      short loc_21DF"], ["mov~rdx,rax", "mov~rsi,rbp", "mov~edi,0", "call~FOO", "cmp~rbx,rax", "jz~FOO"]], [0, 0, 111, 0, 0, 2, 1, 1, 17, 8, 0.019061302681992336, ["test    rax, rax", "jz      loc_228C"], ["test~rax,rax", "jz~FOO"]], [2, 0, 145, 0, 1, 8, 0, 2, 1, 12, 0.15205938697318008, ["mov     r8d, 0; longind", "lea     rcx, long_options_7050; longopts", "lea     rdx, shortopts; \"benstuvAET\"", "mov     rsi, [rsp+168h+argv]; argv", "mov     edi, [rsp+168h+argc]; argc", "call    _getopt_long", "cmp     eax, 0FFFFFFFFh", "jz      loc_1F51"], ["mov~r8d,0", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,[rsp+0]", "mov~edi,[rsp+0]", "call~FOO", "cmp~eax,0", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 6, 13, 0.010440613026819924, ["cmp     eax, 75h ; 'u'", "jz      short loc_1DF5"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 145, 0, 0, 2, 0, 1, 9, 13, 0.006800766283524905, ["mov     [rsp+168h+show_nonprinting], bpl", "jmp     short loc_1DF5"], ["mov~[rsp+0],bpl", "jmp~FOO"]], [0, 0, 145, 0, 0, 2, 0, 1, 8, 13, 0.006800766283524905, ["mov     r14d, ebp", "jmp     loc_1DF5"], ["mov~r14d,ebp", "jmp~FOO"]], [0, 0, 145, 0, 0, 2, 0, 1, 8, 13, 0.006800766283524905, ["mov     [rsp+168h+number], bpl", "jmp     loc_1DF5"], ["mov~[rsp+0],bpl", "jmp~FOO"]], [0, 0, 145, 0, 0, 3, 0, 1, 3, 13, 0.005651340996168583, ["mov     [rsp+168h+number_nonblank], bpl", "mov     [rsp+168h+number], bpl", "jmp     loc_1DF5"], ["mov~[rsp+0],bpl", "mov~[rsp+0],bpl", "jmp~FOO"]], [0, 0, 145, 0, 0, 2, 0, 1, 5, 13, 0.009195402298850575, ["mov     [rsp+168h+squeeze_blank], bpl", "jmp     loc_1DF5"], ["mov~[rsp+0],bpl", "jmp~FOO"]], [0, 0, 145, 0, 0, 3, 0, 1, 8, 13, 0.006704980842911878, ["mov     r14d, ebp", "mov     [rsp+168h+show_nonprinting], bpl", "jmp     loc_1DF5"], ["mov~r14d,ebp", "mov~[rsp+0],bpl", "jmp~FOO"]], [0, 0, 145, 0, 0, 4, 0, 1, 5, 13, 0.009243295019157088, ["mov     r14d, ebp", "mov     [rsp+168h+show_nonprinting], bpl", "mov     [rsp+168h+show_ends], bpl", "jmp     loc_1DF5"], ["mov~r14d,ebp", "mov~[rsp+0],bpl", "mov~[rsp+0],bpl", "jmp~FOO"]], [0, 0, 145, 0, 0, 2, 0, 1, 7, 13, 0.013170498084291188, ["mov     [rsp+168h+show_ends], bpl", "jmp     loc_1DF5"], ["mov~[rsp+0],bpl", "jmp~FOO"]], [0, 0, 145, 0, 0, 3, 0, 1, 7, 13, 0.006704980842911878, ["mov     [rsp+168h+show_nonprinting], bpl", "mov     [rsp+168h+show_ends], bpl", "jmp     loc_1DF5"], ["mov~[rsp+0],bpl", "mov~[rsp+0],bpl", "jmp~FOO"]], [9, 0, 145, 1, 6, 34, 1, 6, 0, 13, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 138h", "mov     [rsp+168h+argc], edi", "mov     r14, argv_0", "mov     [rsp+168h+argv], argv_0", "mov     rax, fs:28h", "mov     [rsp+168h+var_40], rax", "xor     eax, eax", "call    _getpagesize", "mov     ebx, eax", "mov     rdi, [argv_0]; argv0", "call    set_program_name", "lea     rsi, aWrittenBySSAnd+1Bh; locale", "mov     edi, 6; category", "call    _setlocale", "lea     rsi, dirname; \"/usr/local/share/locale\"", "lea     rdi, domainname; \"coreutils\"", "call    _bindtextdomain", "lea     rdi, domainname; \"coreutils\"", "call    _textdomain", "lea     rdi, close_stdout", "call    atexit", "mov     r14d, 0", "mov     [rsp+168h+show_nonprinting], 0", "mov     [rsp+168h+show_ends], 0", "mov     [rsp+168h+squeeze_blank], 0", "mov     [rsp+168h+number_nonblank], 0", "mov     [rsp+168h+number], 0", "mov     ebp, 1"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~[rsp+0],edi", "mov~r14,argv_0", "mov~[rsp+0],argv_0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~ebx,eax", "mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "mov~r14d,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~ebp,0"]], [0, 0, 111, 0, 0, 3, 0, 1, 20, 15, 0.08475415070242658, ["movzx   r15d, byte ptr [rbp+0]", "lea     rbp, [rbp+1]", "jmp     loc_23F3"], ["movzx~r15d,[yte ptr [rbp+0]", "lea~rbp,[rbp+0]", "jmp~FOO"]], [2, 0, 111, 0, 0, 3, 0, 1, 19, 16, 0.08623882503192849, ["mov     [rsp+168h+var_148], 2", "cmp     [rsp+168h+squeeze_blank], 0", "jnz     short loc_2818"], ["mov~[rsp+0],0", "cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 111, 0, 0, 5, 0, 1, 10, 11, 0.30574712643678165, ["mov     rcx, [rsp+168h+var_A0]", "lea     rax, [rcx-20000h]", "mov     rsi, 1FFFFFFFFFFE0000h", "cmp     rax, rsi", "ja      loc_20FB"], ["mov~rcx,[rsp+0]", "lea~rax,[rcx-20000h]+0]", "mov~rsi,0", "cmp~rax,rsi", "ja~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 2, 14, 0.023371647509578545, ["cmp     eax, 62h ; 'b'", "jz      loc_1EF6"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 3, 15, 0.022413793103448276, ["cmp     eax, 62h ; 'b'", "jle     short loc_1E5E"], ["cmp~eax,0", "jle~FOO"]], [2, 0, 111, 0, 1, 6, 0, 2, 19, 9, 0.08208812260536398, ["call    ___errno_location", "mov     ecx, [rax]", "cmp     ecx, 5Fh ; '_'", "setz    sil", "cmp     ecx, 26h ; '&'", "ja      short loc_244D"], ["call~FOO", "mov~ecx,<TAG>", "cmp~ecx,0", "setz~sil", "cmp~ecx,0", "ja~FOO"]], [2, 0, 111, 0, 1, 7, 1, 2, 18, 10, 0.09938537675606643, ["mov     rdx, [rsp+168h+var_120]", "mov     esi, 541Bh; request", "mov     edi, cs:input_desc; fd", "mov     eax, 0", "call    _ioctl", "test    eax, eax", "js      short loc_241F"], ["mov~rdx,[rsp+0]", "mov~esi,0", "mov~edi,<TAG>", "mov~eax,0", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 4, 14, 0.013665389527458492, ["cmp     eax, 73h ; 's'", "jz      loc_1F05"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 111, 0, 0, 2, 0, 1, 26, 16, 0.09454022988505748, ["cmp     r15b, 9", "jnz     short loc_28DF"], ["cmp~r15b,0", "jnz~FOO"]], [1, 0, 111, 0, 0, 2, 0, 0, 25, 17, 0.15823754789272032, ["cmp     r15b, 1Fh", "jbe     short loc_28AF"], ["cmp~r15b,0", "jbe~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 5, 14, 0.00916347381864623, ["cmp     eax, 73h ; 's'", "jle     loc_1EE2"], ["cmp~eax,0", "jle~FOO"]], [1, 0, 111, 0, 0, 2, 0, 1, 27, 20, 0.03793103448275862, ["cmp     r15b, 7Fh", "jz      short loc_2882"], ["cmp~r15b,0", "jz~FOO"]], [1, 0, 111, 0, 0, 2, 0, 1, 26, 20, 0.05613026819923372, ["cmp     r15b, 7Eh ; '~'", "ja      short loc_285B"], ["cmp~r15b,0", "ja~FOO"]], [1, 1, 111, 0, 0, 6, 0, 0, 11, 10, 0.14909003831417625, ["lea     rdx, [rcx-1]", "mov     rax, 1FFFFFFFFFFFFFFFh", "cmp     rdx, rax", "mov     eax, 200h", "cmovbe  rax, rcx", "mov     [rsp+168h+count], rax"], ["lea~rdx,[rcx-1]+0]", "mov~rax,0", "cmp~rdx,rax", "mov~eax,<STR>", "cmovbe~rax,rcx", "mov~[rsp+0],rax"]], [4, 0, 111, 0, 3, 11, 0, 3, 19, 8, 0.0025622605363984675, ["mov     edx, 5; category", "lea     rsi, aWriteError; \"write error\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     rdx, rbx; format", "mov     esi, [rax]; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~rdx,rbx", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO"]], [4, 0, 113, 0, 3, 11, 0, 3, 3, 10, 0.04529853128991062, ["mov     edx, 5; category", "lea     rsi, aStandardOutput; \"standard output\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     rdx, rbx; format", "mov     esi, [rax]; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~rdx,rbx", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO"]], [2, 0, 116, 0, 1, 7, 1, 2, 2, 11, 0.13333333333333333, ["mov     [rsp+168h+c], eax", "lea     rdx, [rsp+168h+stat_buf]; stat_buf", "mov     esi, 1; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "js      loc_2018"], ["mov~[rsp+0],eax", "lea~rdx,[rsp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 7, 14, 0.003160919540229885, ["cmp     eax, 75h ; 'u'", "jl      loc_1F0F"], ["cmp~eax,0", "jl~FOO"]], [3, 0, 111, 0, 0, 6, 2, 0, 20, 9, 0.0, ["mov     rdi, 4002480000h", "shr     rdi, cl", "mov     rcx, rdi", "xor     rcx, 1", "and     ecx, 1", "mov     [rsp+168h+var_136], cl"], ["mov~rdi,0", "shr~rdi,cl", "mov~rcx,rdi", "xor~rcx,0", "and~ecx,0", "mov~[rsp+0],cl"]], [1, 0, 114, 0, 0, 5, 0, 1, 3, 10, 0.09119572158365266, ["mov     r12, [rsp+168h+var_A0]", "lea     rdx, [r12-20000h]", "mov     rax, 1FFFFFFFFFFE0000h", "cmp     rdx, rax", "ja      loc_204A"], ["mov~r12,[rsp+0]", "lea~rdx,[r12-20000h]+0]", "mov~rax,0", "cmp~rdx,rax", "ja~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 8, 14, 0.0011494252873563218, ["cmp     eax, 76h ; 'v'", "jnz     loc_1ED8"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 111, 0, 0, 4, 2, 1, 20, 8, 0.07978927203065134, ["movzx   edx, [rsp+168h+var_136]", "xor     edx, 1", "or      dl, sil", "jz      short loc_2464"], ["movzx~edx,[rsp+0]", "xor~edx,0", "or~dl,sil", "jz~FOO"]], [1, 0, 111, 1, 0, 2, 0, 0, 27, 17, 0.010632183908045977, ["add     rbp, 1", "movzx   r15d, byte ptr [rbp-1]"], ["add~rbp,0", "movzx~r15d,[yte ptr [rbp-1]+0]"]], [2, 0, 111, 1, 0, 5, 0, 1, 26, 18, 0.0032088122605363986, ["mov     byte ptr [rbx], 5Eh ; '^'", "add     r15d, 40h ; '@'", "mov     [rbx+1], r15b", "lea     rbx, [rbx+2]", "jmp     short loc_290B"], ["mov~<TAG>,0", "add~r15d,0", "mov~[rbx+0],r15b", "lea~rbx,[rbx+0]", "jmp~FOO"]], [0, 0, 111, 0, 0, 2, 0, 0, 26, 18, 0.0033045977011494252, ["mov     [rbx], r15b", "lea     rbx, [rbx+1]"], ["mov~<TAG>,r15b", "lea~rbx,[rbx+0]"]], [1, 0, 111, 0, 0, 2, 0, 1, 21, 11, 0.009770114942528735, ["mov     [rsp+168h+var_136], 0", "jmp     loc_23A2"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 4, 14, 0.013441890166028099, ["cmp     eax, 41h ; 'A'", "jz      loc_1F1C"], ["cmp~eax,0", "jz~FOO"]], [4, 0, 111, 0, 1, 7, 0, 2, 12, 9, 0.3022988505747127, ["mov     ecx, 2; advice", "mov     edx, 0; len", "mov     esi, 0; offset", "mov     edi, ebx; fd", "call    fdadvise", "cmp     [rsp+168h+var_100], 8000h", "jz      loc_2109"], ["mov~ecx,0", "mov~edx,0", "mov~esi,0", "mov~edi,ebx", "call~FOO", "cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 111, 0, 0, 2, 0, 1, 11, 10, 0.14909003831417625, ["mov     [rsp+168h+count], 20000h", "jmp     loc_2647"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 5, 15, 0.008892081736909325, ["cmp     eax, 41h ; 'A'", "jle     short loc_1E82"], ["cmp~eax,0", "jle~FOO"]], [3, 0, 111, 0, 0, 4, 0, 0, 28, 20, 0.02538314176245211, ["mov     byte ptr [rbx], 4Dh ; 'M'", "mov     byte ptr [rbx+1], 2Dh ; '-'", "cmp     r15b, 9Fh", "jbe     short loc_289D"], ["mov~<TAG>,0", "mov~[yte ptr [rbx+0],0", "cmp~r15b,0", "jbe~FOO"]], [2, 0, 111, 0, 0, 9, 1, 1, 7, 6, 0.3417145593869732, ["mov     rdx, cs:infile", "mov     ecx, 2", "mov     rsi, rdx", "lea     rdi, aLt+2; \"-\"", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_2055"], ["mov~rdx,<TAG>", "mov~ecx,0", "mov~rsi,rdx", "lea~rdi,<TAG>", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [1, 0, 111, 0, 0, 2, 0, 1, 13, 11, 0.2841954022988506, ["cmp     [rsp+168h+var_F9], 0", "jnz     short loc_2686"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 111, 0, 0, 3, 0, 1, 13, 8, 0.02274904214559387, ["mov     rax, [rsp+168h+var_F8]", "cmp     [rsp+168h+stat_buf], rax", "jnz     loc_266B"], ["mov~rax,[rsp+0]", "cmp~[rsp+0],rax", "jnz~FOO"]], [0, 0, 111, 0, 0, 3, 0, 1, 14, 7, 0.01752873563218391, ["mov     rax, [rsp+168h+var_F0]", "cmp     [rsp+168h+out_ino], rax", "jnz     loc_266B"], ["mov~rax,[rsp+0]", "cmp~[rsp+0],rax", "jnz~FOO"]], [2, 0, 111, 0, 1, 6, 0, 2, 15, 6, 0.012308429118773946, ["mov     edx, 1; whence", "mov     esi, 0; offset", "mov     edi, cs:input_desc; fd", "call    _lseek", "cmp     rax, [rsp+168h+var_A8]", "jge     loc_266B"], ["mov~edx,0", "mov~esi,0", "mov~edi,<TAG>", "call~FOO", "cmp~rax,[rsp+0]", "jge~FOO"]], [1, 0, 111, 0, 0, 2, 0, 1, 29, 20, 0.012739463601532568, ["cmp     r15b, 0FFh", "jz      short loc_288F"], ["cmp~r15b,0", "jz~FOO"]], [1, 0, 111, 0, 0, 4, 0, 1, 19, 16, 0.10604246487867179, ["mov     byte ptr [rbx], 0Ah", "lea     rbx, [rbx+1]", "mov     rax, rbp", "jmp     loc_23EB"], ["mov~<TAG>,0", "lea~rbx,[rbx+0]", "mov~rax,rbp", "jmp~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 7, 14, 0.0013569604086845466, ["cmp     eax, 54h ; 'T'", "jnz     short loc_1ED8"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 6, 14, 0.009833971902937421, ["cmp     eax, 45h ; 'E'", "jz      loc_1F2E"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 111, 0, 0, 4, 2, 1, 14, 10, 0.053256704980842916, ["movzx   r14d, [rsp+168h+show_nonprinting]", "or      r14d, r13d", "or      r14b, [rsp+168h+squeeze_blank]", "jz      loc_21A5"], ["movzx~r14d,[rsp+0]", "or~r14d,r13d", "or~r14b,[rsp+0]", "jz~FOO"]], [0, 0, 111, 0, 0, 2, 1, 1, 18, 6, 0.04051724137931035, ["and     [rsp+168h+ok], r14b", "jmp     loc_2553"], ["and~[rsp+0],r14b", "jmp~FOO"]], [1, 0, 111, 0, 0, 2, 0, 1, 18, 7, 0.005028735632183908, ["mov     r14d, 1", "jmp     short loc_2282"], ["mov~r14d,0", "jmp~FOO"]], [4, 0, 111, 0, 3, 12, 0, 3, 17, 7, 0.031369731800766285, ["mov     rdx, cs:infile; arg", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     rbx, rax", "call    ___errno_location", "mov     rcx, rbx", "lea     rdx, format+4; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error"], ["mov~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~rcx,rbx", "lea~rdx,<TAG>", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 4, 0, 0, 3, 0, 1, 6, -1, 0.0037037037037037043, ["mov     [rsp+168h+c], eax", "cmp     eax, 0FFFFFF7Dh", "jnz     short loc_1ED1"], ["mov~[rsp+0],eax", "cmp~eax,0", "jnz~FOO"]], [2, 0, 111, 0, 0, 4, 0, 1, 28, 19, 0.004980842911877395, ["mov     byte ptr [rbx], 5Eh ; '^'", "mov     byte ptr [rbx+1], 3Fh ; '?'", "lea     rbx, [rbx+2]", "jmp     short loc_28C1"], ["mov~<TAG>,0", "mov~[yte ptr [rbx+0],0", "lea~rbx,[rbx+0]", "jmp~FOO"]], [0, 0, 111, 0, 0, 2, 0, 0, 28, 14, 0.07648467432950191, ["mov     eax, [rsp+168h+c]", "mov     [rsp+168h+var_148], eax"], ["mov~eax,[rsp+0]", "mov~[rsp+0],eax"]], [1, 0, 111, 0, 0, 2, 0, 1, 27, 15, 0.08498563218390805, ["cmp     r15b, 0Ah", "jz      loc_2294"], ["cmp~r15b,0", "jz~FOO"]], [0, 0, 111, 0, 0, 1, 0, 1, 24, 18, 0.09602490421455939, ["jmp     loc_28CA"], ["jmp~FOO"]], [0, 0, 111, 1, 0, 4, 0, 0, 15, 13, 0.4264367816091954, ["mov     rax, [rsp+168h+buf]", "add     rax, r12", "cmp     rax, rbx", "jbe     short loc_2307"], ["mov~rax,[rsp+0]", "add~rax,r12", "cmp~rax,rbx", "jbe~FOO"]], [0, 0, 111, 0, 0, 3, 0, 1, 26, 14, 0.04588122605363985, ["mov     eax, [rsp+168h+c]", "mov     [rsp+168h+var_148], eax", "jmp     short loc_229C"], ["mov~eax,[rsp+0]", "mov~[rsp+0],eax", "jmp~FOO"]], [4, 0, 111, 6, 2, 37, 1, 3, 14, 14, 0.22691570881226053, ["mov     rbx, [rsp+168h+var_108]", "mov     rdi, rbx", "mov     r14, [rsp+168h+count]", "add     rdi, r14; n", "call    xmalloc", "mov     r15, rax", "mov     [rsp+168h+inbuf], rax", "lea     inbuf_0, [rbx+r12+12h]", "lea     rdi, [rax+r14*4]; n", "call    xmalloc", "mov     [rsp+168h+outbuf], rax", "mov     rdi, rbx", "lea     rcx, [rbx-1]", "lea     rsi, [outbuf_0+rcx]", "mov     outbuf_0, rsi", "mov     edx, 0", "div     rbx", "sub     rsi, rdx", "mov     rbx, rsi", "mov     [rsp+168h+buf], rsi", "add     rcx, inbuf_0", "mov     rax, rcx", "mov     edx, 0", "div     rdi", "mov     rax, rcx", "sub     rax, rdx", "mov     [rsp+168h+var_150], rax", "mov     ecx, cs:newlines2", "mov     [rsp+168h+var_148], ecx", "lea     rbp, [rax+1]", "mov     [rsp+168h+var_158], rax", "mov     [rsp+168h+var_136], 1", "lea     rax, [rsp+168h+var_DC]", "mov     [rsp+168h+var_120], rax", "mov     r14d, r13d", "xor     r14d, 1", "jmp     loc_229C"], ["mov~rbx,[rsp+0]", "mov~rdi,rbx", "mov~r14,[rsp+0]", "add~rdi,r14", "call~FOO", "mov~r15,rax", "mov~[rsp+0],rax", "lea~inbuf_0,[rbx+0]", "lea~rdi,<TAG>", "call~FOO", "mov~[rsp+0],rax", "mov~rdi,rbx", "lea~rcx,[rbx-1]+0]", "lea~rsi,<TAG>", "mov~outbuf_0,rsi", "mov~edx,0", "div~,rbx", "sub~rsi,rdx", "mov~rbx,rsi", "mov~[rsp+0],rsi", "add~rcx,inbuf_0", "mov~rax,rcx", "mov~edx,0", "div~,rdi", "mov~rax,rcx", "sub~rax,rdx", "mov~[rsp+0],rax", "mov~ecx,<TAG>", "mov~[rsp+0],ecx", "lea~rbp,[rax+0]", "mov~[rsp+0],rax", "mov~[rsp+0],0", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~r14d,r13d", "xor~r14d,0", "jmp~FOO"]], [2, 0, 111, 1, 0, 5, 0, 1, 29, 19, 0.005076628352490422, ["mov     byte ptr [rbx+2], 5Eh ; '^'", "sub     r15d, 40h ; '@'", "mov     [rbx+3], r15b", "lea     rbx, [rbx+4]", "jmp     short loc_28C1"], ["mov~[yte ptr [rbx+0],0", "sub~r15d,0", "mov~[rbx+0],r15b", "lea~rbx,[rbx+0]", "jmp~FOO"]], [0, 0, 111, 0, 0, 2, 0, 0, 16, 12, 0.4019795657726692, ["cmp     rbp, [rsp+168h+var_158]", "jbe     loc_27CC"], ["cmp~rbp,[rsp+0]", "jbe~FOO"]], [0, 0, 111, 1, 1, 7, 0, 2, 19, 13, 0.009115581098339718, ["mov     rdx, rbx; n", "mov     rsi, r15; src", "mov     r15, [rsp+168h+buf]", "mov     rdi, r15; dest", "call    _memmove", "add     rbx, r15", "jmp     loc_22A9"], ["mov~rdx,rbx", "mov~rsi,r15", "mov~r15,[rsp+0]", "mov~rdi,r15", "call~FOO", "add~rbx,r15", "jmp~FOO"]], [5, 0, 111, 0, 3, 14, 0, 4, 9, 4, 0.011733716475095786, ["mov     rdx, cs:infile; arg", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     rbx, rax", "call    ___errno_location", "mov     rcx, rbx", "lea     rdx, format+4; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     [rsp+168h+ok], 0", "jmp     loc_257F"], ["mov~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~rcx,rbx", "lea~rdx,<TAG>", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~[rsp+0],0", "jmp~FOO"]], [5, 0, 111, 0, 3, 19, 0, 4, 21, 7, 0.06245210727969349, ["mov     r15d, edx", "mov     rbp, rax", "mov     rsi, cs:infile; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aCannotDoIoctlO; \"cannot do ioctl on %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, [rbp+0]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     eax, [rsp+168h+var_148]", "mov     cs:newlines2, eax", "jmp     loc_2544"], ["mov~r15d,edx", "mov~rbp,rax", "mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,[rbp+0]", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~eax,[rsp+0]", "mov~<TAG>,eax", "jmp~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 11, 2, 0.032327586206896554, ["cmp     [rsp+168h+have_read_stdin], 0", "jnz     short loc_29BD"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 111, 0, 0, 2, 1, 1, 27, 16, 0.006633141762452108, ["test    r14b, r14b", "jz      short loc_28DF"], ["test~r14b,r14b", "jz~FOO"]], [1, 0, 111, 0, 0, 2, 0, 0, 28, 19, 0.0008381226053639847, ["mov     byte ptr [rbx], 9", "lea     rbx, [rbx+1]"], ["mov~<TAG>,0", "lea~rbx,[rbx+0]"]], [2, 0, 111, 0, 0, 3, 0, 1, 17, 11, 0.21846264367816093, ["mov     [rsp+168h+var_DC], 0", "cmp     [rsp+168h+var_136], 0", "jnz     loc_2384"], ["mov~[rsp+0],0", "cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 111, 1, 0, 2, 0, 0, 28, 18, 0.058093869731800765, ["add     rbp, 1", "movzx   r15d, byte ptr [rbp-1]"], ["add~rbp,0", "movzx~r15d,[yte ptr [rbp-1]+0]"]], [1, 0, 111, 1, 0, 4, 0, 1, 30, 19, 0.002586206896551724, ["add     r15d, 0FFFFFF80h", "mov     [rbx+2], r15b", "lea     rbx, [rbx+3]", "jmp     short loc_28C1"], ["add~r15d,0", "mov~[rbx+0],r15b", "lea~rbx,[rbx+0]", "jmp~FOO"]], [2, 0, 111, 0, 0, 4, 0, 1, 30, 19, 0.002586206896551724, ["mov     byte ptr [rbx+2], 5Eh ; '^'", "mov     byte ptr [rbx+3], 3Fh ; '?'", "lea     rbx, [rbx+4]", "jmp     short loc_28C1"], ["mov~[yte ptr [rbx+0],0", "mov~[yte ptr [rbx+0],0", "lea~rbx,[rbx+0]", "jmp~FOO"]], [0, 0, 111, 0, 0, 3, 0, 1, 27, 19, 0.010632183908045977, ["mov     [rbx], r15b", "lea     rbx, [rbx+1]", "jmp     short loc_28C1"], ["mov~<TAG>,r15b", "lea~rbx,[rbx+0]", "jmp~FOO"]], [2, 0, 111, 1, 0, 5, 0, 1, 28, 19, 0.0009339080459770115, ["mov     byte ptr [rbx], 5Eh ; '^'", "add     r15d, 40h ; '@'", "mov     [rbx+1], r15b", "lea     rbx, [rbx+2]", "jmp     short loc_28C1"], ["mov~<TAG>,0", "add~r15d,0", "mov~[rbx+0],r15b", "lea~rbx,[rbx+0]", "jmp~FOO"]], [4, 0, 0, 1, 2, 12, 0, 2, 7, -1, 0.0, ["sub     rsp, 8", "push    0", "lea     r9, aRichardMStallm; \"Richard M. Stallman\"", "lea     r8, aTorbjornGranlu; \"Torbjorn Granlund\"", "mov     rcx, cs:Version; version", "lea     rdx, package; \"GNU \"", "lea     rsi, command_name; \"cat\"", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "mov     eax, 0", "call    version_etc", "mov     edi, 0; status", "call    _exit"], ["sub~rsp,0", "push~0", "lea~r9,<TAG>", "lea~r8,<TAG>", "mov~rcx,<TAG>", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rdi,<TAG>", "mov~eax,0", "call~FOO", "mov~edi,0", "call~FOO"]], [0, 0, 111, 1, 0, 3, 0, 1, 18, 10, 0.12983716475095786, ["mov     rbp, rbx", "sub     rbp, [rsp+168h+buf]", "jz      loc_23B0"], ["mov~rbp,rbx", "sub~rbp,[rsp+0]", "jz~FOO"]], [1, 0, 111, 0, 0, 2, 0, 1, 19, 10, 0.024768518518518523, ["cmp     [rsp+168h+var_DC], 0", "jz      loc_22CA"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 7, -1, 0.0015006385696040869, ["cmp     eax, 0FFFFFF7Eh", "jz      short loc_1F38"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 8, -1, 0.0, ["mov     edi, 1; status", "call    usage"], ["mov~edi,0", "call~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 7, 14, 0.00140485312899106, ["cmp     eax, 6Eh ; 'n'", "jnz     short loc_1ED8"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 145, 0, 0, 2, 0, 1, 6, 14, 0.003416347381864624, ["cmp     eax, 65h ; 'e'", "jz      short loc_1F42"], ["cmp~eax,0", "jz~FOO"]], [4, 0, 111, 0, 3, 11, 0, 3, 20, 9, 0.0020593869731800767, ["mov     edx, 5; category", "lea     rsi, aWriteError; \"write error\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     rdx, rbx; format", "mov     esi, [rax]; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~rdx,rbx", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 111, 0, 1, 6, 0, 2, 19, 10, 0.012739463601532568, ["mov     rdx, rbp; count", "mov     rsi, [rsp+168h+buf]; buf", "mov     edi, 1; fd", "call    full_write", "cmp     rbp, rax", "jnz     loc_24BB"], ["mov~rdx,rbp", "mov~rsi,[rsp+0]", "mov~edi,0", "call~FOO", "cmp~rbp,rax", "jnz~FOO"]], [1, 0, 111, 0, 1, 7, 0, 2, 16, 8, 0.0501676245210728, ["mov     rdx, insize; count", "mov     rsi, rbp; buf", "mov     edi, cs:input_desc; fd", "call    safe_read", "mov     rbx, rax", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      short loc_2249"], ["mov~rdx,insize", "mov~rsi,rbp", "mov~edi,<TAG>", "call~FOO", "mov~rbx,rax", "cmp~rax,0", "jz~FOO"]], [5, 0, 111, 0, 3, 14, 0, 4, 10, 5, 0.006800766283524905, ["mov     rdx, cs:infile; arg", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     rbx, rax", "call    ___errno_location", "mov     rcx, rbx", "lea     rdx, format+4; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     [rsp+168h+ok], 0", "jmp     contin"], ["mov~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~rcx,rbx", "lea~rdx,<TAG>", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 111, 0, 0, 2, 0, 1, 20, 10, 0.003113026819923372, ["mov     rbx, [rsp+168h+buf]", "jmp     loc_23B0"], ["mov~rbx,[rsp+0]", "jmp~FOO"]], [1, 0, 111, 0, 0, 2, 0, 1, 25, 15, 0.05675287356321839, ["cmp     r15b, 0Ah", "jz      loc_22FD"], ["cmp~r15b,0", "jz~FOO"]], [1, 0, 111, 0, 0, 2, 0, 1, 24, 16, 0.06867816091954024, ["cmp     r15b, 9", "jnz     short loc_28FA"], ["cmp~r15b,0", "jnz~FOO"]], [0, 0, 111, 0, 0, 2, 1, 1, 25, 16, 0.009482758620689655, ["test    r13b, r13b", "jz      short loc_28FA"], ["test~r13b,r13b", "jz~FOO"]], [1, 0, 111, 0, 0, 2, 0, 1, 18, 17, 0.10654533844189018, ["cmp     eax, 1", "jle     short loc_27ED"], ["cmp~eax,0", "jle~FOO"]], [0, 0, 111, 1, 0, 3, 0, 1, 16, 13, 0.03127394636015326, ["sub     rbx, rax", "mov     r15, [rsp+168h+buf]", "jmp     short loc_2314"], ["sub~rbx,rax", "mov~r15,[rsp+0]", "jmp~FOO"]], [0, 0, 111, 0, 0, 1, 0, 0, 19, 13, 0.0008860153256704981, ["mov     rbx, rax"], ["mov~rbx,rax"]], [0, 0, 111, 2, 0, 5, 0, 0, 18, 14, 0.017568646232439335, ["add     r15, r12", "mov     rax, rbx", "sub     rax, r12", "cmp     rbx, r12", "jnb     short loc_2311"], ["add~r15,r12", "mov~rax,rbx", "sub~rax,r12", "cmp~rbx,r12", "jnb~FOO"]], [1, 0, 2, 0, 0, 6, 2, 1, 12, 1, 0.013098659003831418, ["movzx   eax, [rsp+168h+ok]", "xor     eax, 1", "movzx   eax, al", "mov     rcx, [rsp+168h+var_40]", "xor     rcx, fs:28h", "jnz     short loc_29FD"], ["movzx~eax,[rsp+0]", "xor~eax,0", "movzx~eax,al", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 111, 0, 1, 6, 0, 2, 17, 12, 0.03627873563218391, ["mov     rdx, r12; count", "mov     rsi, r15; buf", "mov     edi, 1; fd", "call    full_write", "cmp     r12, rax", "jnz     short loc_2352"], ["mov~rdx,r12", "mov~rsi,r15", "mov~edi,0", "call~FOO", "cmp~r12,rax", "jnz~FOO"]], [4, 0, 111, 1, 3, 15, 0, 4, 20, 8, 0.08218390804597701, ["mov     rdx, cs:infile; arg", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     rbp, rax", "call    ___errno_location", "mov     r14, rax", "mov     rcx, rbp", "lea     rdx, format+4; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "sub     rbx, [rsp+168h+buf]", "jnz     loc_2721"], ["mov~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbp,rax", "call~FOO", "mov~r14,rax", "mov~rcx,rbp", "lea~rdx,<TAG>", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "sub~rbx,[rsp+0]", "jnz~FOO"]], [1, 0, 111, 0, 1, 6, 0, 2, 19, 9, 0.14603288633461048, ["mov     rdx, [rsp+168h+count]; count", "mov     rsi, [rsp+168h+var_150]; buf", "mov     edi, cs:input_desc; fd", "call    safe_read", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      loc_24ED"], ["mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~edi,<TAG>", "call~FOO", "cmp~rax,0", "jz~FOO"]], [1, 0, 111, 0, 1, 6, 0, 2, 21, 8, 0.012835249042145594, ["mov     rdx, rbx; count", "mov     rsi, [rsp+168h+buf]; buf", "mov     edi, 1; fd", "call    full_write", "cmp     rbx, rax", "jz      loc_2534"], ["mov~rdx,rbx", "mov~rsi,[rsp+0]", "mov~edi,0", "call~FOO", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 8, -1, 0.0, ["mov     edi, 0; status", "call    usage"], ["mov~edi,0", "call~FOO"]], [1, 0, 111, 0, 0, 3, 0, 0, 21, 7, 0.06369731800766283, ["mov     eax, [rsp+168h+var_148]", "mov     cs:newlines2, eax", "mov     r15d, 0"], ["mov~eax,[rsp+0]", "mov~<TAG>,eax", "mov~r15d,0"]], [0, 0, 111, 0, 1, 3, 1, 1, 22, 6, 0.14300766283524904, ["and     [rsp+168h+ok], r15b", "mov     rdi, [rsp+168h+outbuf]; ptr", "call    _free"], ["and~[rsp+0],r15b", "mov~rdi,[rsp+0]", "call~FOO"]], [1, 0, 111, 0, 0, 4, 0, 1, 22, 7, 0.007471264367816092, ["mov     eax, [rsp+168h+var_148]", "mov     cs:newlines2, eax", "mov     r15d, 1", "jmp     loc_2544"], ["mov~eax,[rsp+0]", "mov~<TAG>,eax", "mov~r15d,0", "jmp~FOO"]], [0, 0, 111, 0, 1, 2, 0, 1, 19, 5, 0.18764367816091954, ["mov     rdi, [rsp+168h+inbuf]; ptr", "call    _free"], ["mov~rdi,[rsp+0]", "call~FOO"]], [4, 0, 111, 0, 2, 9, 0, 2, 22, 9, 0.009770114942528735, ["mov     edx, 5; category", "lea     rsi, aWriteError; \"write error\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rax; format", "mov     esi, [r14]; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rax", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO"]], [0, 0, 111, 1, 0, 2, 0, 1, 21, 8, 0.041379310344827586, ["sub     rbx, [rsp+168h+buf]", "jnz     short loc_2783"], ["sub~rbx,[rsp+0]", "jnz~FOO"]], [0, 0, 111, 0, 0, 2, 1, 1, 20, 9, 0.0636095146871009, ["test    rax, rax", "jz      loc_2767"], ["test~rax,rax", "jz~FOO"]], [0, 0, 111, 0, 1, 4, 1, 1, 12, 4, 0.006369731800766284, ["mov     edi, cs:input_desc; fd", "call    _close", "test    eax, eax", "jns     loc_257F"], ["mov~edi,<TAG>", "call~FOO", "test~eax,eax", "jns~FOO"]], [2, 0, 111, 0, 0, 8, 1, 1, 11, 4, 0.21091954022988507, ["mov     ecx, 2", "mov     rsi, cs:infile", "lea     rdi, aLt+2; \"-\"", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_2930"], ["mov~ecx,0", "mov~rsi,<TAG>", "lea~rdi,<TAG>", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [8, 0, 111, 0, 3, 17, 0, 4, 16, 5, 0.007088122605363985, ["mov     rdx, cs:infile; arg", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     rbx, rax", "mov     edx, 5; category", "lea     rsi, aSInputFileIsOu; \"%s: input file is output file\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     [rsp+168h+ok], 0", "jmp     contin"], ["mov~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 111, 0, 1, 6, 0, 2, 22, 8, 0.028256704980842914, ["mov     rdx, rbx; count", "mov     rsi, [rsp+168h+buf]; buf", "mov     edi, 1; fd", "call    full_write", "cmp     rbx, rax", "jz      short loc_276E"], ["mov~rdx,rbx", "mov~rsi,[rsp+0]", "mov~edi,0", "call~FOO", "cmp~rbx,rax", "jz~FOO"]], [4, 0, 111, 0, 3, 11, 0, 3, 18, 11, 0.011143039591315454, ["mov     edx, 5; category", "lea     rsi, aWriteError; \"write error\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     rdx, rbx; format", "mov     esi, [rax]; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~rdx,rbx", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO"]], [5, 0, 111, 0, 3, 14, 0, 4, 13, 4, 0.0, ["mov     rdx, cs:infile; arg", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     rbx, rax", "call    ___errno_location", "mov     rcx, rbx", "lea     rdx, format+4; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     [rsp+168h+ok], 0", "jmp     loc_257F"], ["mov~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~rcx,rbx", "lea~rdx,<TAG>", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 111, 1, 0, 4, 0, 1, 10, 3, 0.22447318007662836, ["add     [rsp+168h+argind], 1", "mov     eax, [rsp+168h+argind]", "cmp     [rsp+168h+argc], eax", "jle     loc_2986"], ["add~[rsp+0],0", "mov~eax,[rsp+0]", "cmp~[rsp+0],eax", "jle~FOO"]], [0, 0, 111, 0, 0, 4, 0, 1, 6, 7, 0.34401340996168583, ["mov     eax, [rsp+168h+argind]", "mov     ecx, [rsp+168h+argc]", "cmp     eax, ecx", "jge     short loc_25B0"], ["mov~eax,[rsp+0]", "mov~ecx,[rsp+0]", "cmp~eax,ecx", "jge~FOO"]], [0, 0, 111, 0, 0, 4, 0, 0, 7, 7, 0.0, ["cdqe", "mov     rcx, [rsp+168h+argv]", "mov     rax, [rcx+rax*8]", "mov     cs:infile, rax"], ["cdqe~", "mov~rcx,[rsp+0]", "mov~rax,<TAG>", "mov~<TAG>,rax"]], [1, 0, 0, 1, 0, 8, 0, 0, 13, -1, 0.0, ["add     rsp, 138h", "pop     rbx", "pop     rbp", "pop     r12", "pop     show_tabs", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~show_tabs", "pop~r14", "pop~r15", "retn"]], [4, 0, 111, 0, 3, 11, 0, 3, 23, 19, 0.025191570881226054, ["mov     edx, 5; category", "lea     rsi, aWriteError; \"write error\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     rdx, rbx; format", "mov     esi, [rax]; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~rdx,rbx", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 111, 3, 1, 15, 0, 1, 15, 9, 0.0485632183908046, ["mov     rax, [rsp+168h+count]", "cmp     r12, rax", "cmovnb  rax, r12", "mov     r15, rax", "mov     rbp, [rsp+168h+var_108]", "lea     rbx, [rbp-1]", "lea     rdi, [insize+rbx]; n", "call    xmalloc", "mov     [rsp+168h+inbuf], rax", "add     rbx, inbuf_0", "mov     inbuf_0, rbx", "mov     edx, 0", "div     rbp", "sub     rbx, rdx", "mov     rbp, rbx"], ["mov~rax,[rsp+0]", "cmp~r12,rax", "cmovnb~rax,r12", "mov~r15,rax", "mov~rbp,[rsp+0]", "lea~rbx,[rbp-1]+0]", "lea~rdi,<TAG>", "call~FOO", "mov~[rsp+0],rax", "add~rbx,inbuf_0", "mov~inbuf_0,rbx", "mov~edx,0", "div~,rbp", "sub~rbx,rdx", "mov~rbp,rbx"]], [1, 0, 111, 1, 0, 5, 0, 0, 21, 16, 0.029701468710089406, ["mov     rdx, [rsp+168h+var_150]", "add     rax, rdx", "mov     [rsp+168h+var_158], rax", "mov     byte ptr [rax], 0Ah", "mov     rax, rdx"], ["mov~rdx,[rsp+0]", "add~rax,rdx", "mov~[rsp+0],rax", "mov~<TAG>,0", "mov~rax,rdx"]], [0, 0, 111, 0, 0, 2, 0, 0, 20, 15, 0.13986270753512134, ["lea     rbp, [rax+1]", "movzx   r15d, byte ptr [rax]"], ["lea~rbp,[rax+0]", "movzx~r15d,<TAG>"]], [0, 0, 0, 0, 1, 1, 0, 1, 13, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [79, 27, 185, 14, 146, 217, 0, 732, 0.06402, 25, 29], "succs": [[35, 109], [0, 88], [0], [12, 70], [114, 3], [3, 7], [3], [3, 6], [17, 13], [8, 82], [145], [10, 118], [70], [17, 18], [138], [14], [14], [112, 81], [17], [108, 47], [75, 19], [49, 36], [50, 21], [21], [21], [21], [21], [21], [21], [21], [21], [21], [21], [9], [33, 5], [61, 46], [26, 37], [40, 59], [51, 54], [101, 38], [27, 43], [80, 91], [41, 45], [105, 22], [78, 63], [97, 44], [60], [76], [15], [48, 52], [28, 53], [54], [16, 15], [103, 23], [89, 58], [112], [55], [55], [101], [29, 62], [65, 66], [60], [72, 77], [69, 85], [1, 2], [73, 84], [65, 67], [65, 68], [65, 133], [96, 95], [144], [24, 103], [30, 71], [84, 142], [127], [74], [74], [99, 102], [94], [82], [98, 79], [42], [115, 86], [82], [82], [94], [4, 93], [86], [137], [125], [11, 118], [80, 92], [94], [100, 39], [42], [94], [94], [94], [94], [], [121, 107], [121, 100], [123, 103], [], [25, 103], [104, 31], [120], [106, 110], [20, 76], [132], [121], [57, 83], [113, 111], [56, 111], [34, 5], [119], [119], [116, 87], [145, 140], [117, 135], [122, 124], [120, 130], [128, 124], [], [125], [127], [125], [132], [129], [134, 126], [129, 143], [136, 137], [137, 131], [132], [141, 126], [39], [137], [90, 138], [64, 139], [64], [], [4], [108], [144], [9], []], "fname": "main", "n_num": 146}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:file_name, file", "retn"], ["mov~<TAG>,file", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:ignore_EPIPE, dil", "retn"], ["mov~<TAG>,dil", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_ignore_EPIPE", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[2, 0, 1, 0, 3, 10, 0, 3, 0, 0, 0.027777777777777776, ["call    quotearg_colon", "mov     rbp, rax", "call    ___errno_location", "mov     r8, write_error", "mov     rcx, rbp", "lea     rdx, format; \"%s: %s\"", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error"], ["call~FOO", "mov~rbp,rax", "call~FOO", "mov~r8,write_error", "mov~rcx,rbp", "lea~rdx,<TAG>", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO"]], [2, 0, 3, 0, 1, 8, 1, 2, 2, -1, 0.125, ["mov     edx, 5; category", "lea     rsi, aWriteError; \"write error\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rbx, rax", "mov     rdi, cs:file_name; arg", "test    rdi, rdi", "jz      short loc_2AB1"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [1, 0, 9, 1, 1, 7, 1, 2, 0, 2, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jz      short loc_2A3B"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 1, 2, 1, 1, 0.08333333333333333, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jnz     loc_2AD3"], ["mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 1, 7, 0, 1, 3, 0, 2, 2, 2, 0.041666666666666664, ["call    ___errno_location", "cmp     dword ptr [rax], 20h ; ' '", "jnz     short loc_2A56"], ["call~FOO", "cmp~<TAG>,<STR>", "jnz~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 2, 0, 0.0, ["mov     edi, cs:exit_failure; status", "call    __exit"], ["mov~edi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 4, -1, 0.0, ["mov     edi, cs:exit_failure; status", "call    __exit"], ["mov~edi,<TAG>", "call~FOO"]], [2, 0, 1, 0, 2, 8, 0, 3, 3, -1, 0.027777777777777776, ["call    ___errno_location", "mov     rcx, write_error", "lea     rdx, format+4; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     short loc_2AA6"], ["call~FOO", "mov~rcx,write_error", "lea~rdx,<TAG>", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 1, 3, 0.06944444444444445, ["cmp     cs:ignore_EPIPE, 0", "jz      short loc_2A56"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]]], "func_feature": [11, 3, 17, 0, 10, 12, 0, 50, 0.0375, 8, 2], "succs": [[6], [0, 7], [8, 3], [9, 5], [1, 3], [], [], [6], [1, 4], []], "fname": "close_stdout", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[2, 0, 0, 2, 1, 4, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    _posix_fadvise", "add     rsp, 8", "retn"], ["sub~rsp,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 4, 0.0, 0, 2], "succs": [[]], "fname": "fdadvise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[2, 0, 0, 0, 2, 10, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     ebx, esi", "call    _fileno", "mov     ecx, ebx; advise", "mov     edx, 0; len", "mov     esi, 0; offset", "mov     edi, eax; fd", "call    _posix_fadvise", "pop     advice", "retn"], ["push~rbx", "mov~ebx,esi", "call~FOO", "mov~ecx,ebx", "mov~edx,0", "mov~esi,0", "mov~edi,eax", "call~FOO", "pop~advice", "retn"]], [0, 0, 2, 0, 0, 2, 1, 1, 0, 1, 0.0, ["test    fp, fp", "jz      short locret_2B0E"], ["test~fp,fp", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [2, 1, 3, 0, 3, 2, 0, 13, 0.0, 0, 0], "succs": [[], [0, 2], []], "fname": "fadvise", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[1, 0, 8, 1, 0, 8, 1, 1, 0, 0, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbx, count", "test    count, count", "jz      short loc_2B6D"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,count", "test~count,count", "jz~FOO"]], [1, 0, 6, 0, 1, 6, 0, 2, 0, -1, 0.20535714285714285, ["mov     rdx, count; count", "mov     rsi, ptr; buf", "mov     edi, r13d; fd", "call    safe_write", "cmp     n_rw, 0FFFFFFFFFFFFFFFFh", "jz      short loc_2B5F"], ["mov~rdx,count", "mov~rsi,ptr", "mov~edi,r13d", "call~FOO", "cmp~n_rw,0", "jz~FOO"]], [0, 0, 6, 3, 0, 4, 0, 1, 0, -1, 0.08928571428571427, ["add     total, n_rw", "add     ptr, n_rw", "sub     rbx, n_rw", "jnz     short loc_2B2E"], ["add~total,n_rw", "add~ptr,n_rw", "sub~rbx,n_rw", "jnz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 0, 0, -1, 0.08928571428571427, ["mov     r13d, edi", "mov     rbp, ptr", "mov     r12d, 0"], ["mov~r13d,edi", "mov~rbp,ptr", "mov~r12d,0"]], [0, 0, 6, 0, 0, 2, 1, 1, 0, -1, 0.17857142857142855, ["test    n_rw, n_rw", "jz      short loc_2B54"], ["test~n_rw,n_rw", "jz~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 0, -1, 0.0, ["mov     rax, r12", "add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["mov~rax,r12", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 1, 0, 0, 1, 0, 1, 0, -1, 0.008928571428571428, ["jmp     short loc_2B5F"], ["jmp~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.017857142857142856, ["mov     r12, count", "jmp     short loc_2B5F"], ["mov~r12,count", "jmp~FOO"]], [1, 0, 1, 0, 1, 2, 0, 1, 0, -1, 0.017857142857142856, ["call    ___errno_location", "mov     dword ptr [rax], 1Ch"], ["call~FOO", "mov~<TAG>,0"]]], "func_feature": [2, 2, 8, 0, 9, 12, 5, 35, 0.06746, 0, 5], "succs": [[3, 7], [4, 5], [1, 6], [1], [8, 2], [], [5], [5], [5]], "fname": "full_write", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[2, 0, 4, 1, 1, 11, 1, 2, 0, 0, 0.13333333333333333, ["mov     rbx, argv0", "mov     esi, 2Fh ; '/'; c", "call    _strrchr", "lea     rdx, [slash+1]", "test    slash, slash", "mov     slash, rdx", "cmovz   rax, argv0", "mov     rdx, base", "sub     rdx, argv0", "cmp     rdx, 6", "jle     short loc_2BE4"], ["mov~rbx,argv0", "mov~esi,0", "call~FOO", "lea~rdx,[slash+0]", "test~slash,slash", "mov~slash,rdx", "cmovz~rax,argv0", "mov~rdx,base", "sub~rdx,argv0", "cmp~rdx,0", "jle~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 0, 1, 0.0, ["push    rbx", "test    argv0, argv0", "jz      short loc_2BF4"], ["push~rbx", "test~argv0,argv0", "jz~FOO"]], [2, 0, 0, 0, 2, 6, 0, 2, 1, 0, 0.0, ["mov     rcx, cs:stderr@@GLIBC_2_2_5; s", "mov     edx, 37h ; '7'; n", "mov     esi, 1; size", "lea     argv0, aANullArgv0WasP; \"A NULL argv[0] was passed through an ex\"...", "call    _fwrite", "call    _abort"], ["mov~rcx,<TAG>", "mov~edx,0", "mov~esi,0", "lea~argv0,<TAG>", "call~FOO", "call~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["mov     cs:program_name, argv0", "mov     cs:program_invocation_name@@GLIBC_2_2_5, argv0", "pop     argv0", "retn"], ["mov~<TAG>,argv0", "mov~<TAG>,argv0", "pop~argv0", "retn"]], [2, 0, 3, 0, 0, 8, 1, 1, 2, -1, 0.13333333333333333, ["lea     rsi, [base-7]", "mov     ecx, 7", "lea     rdi, aLibs; \"/.libs/\"", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     short loc_2BE4"], ["lea~rsi,[base-7]+0]", "mov~ecx,0", "lea~rdi,<TAG>", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "test~dl,dl", "jnz~FOO"]], [2, 0, 2, 0, 0, 9, 1, 1, 3, -1, 0.1, ["mov     ecx, 3", "lea     rdi, aLt; \"lt-\"", "mov     rsi, base", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "mov     rbx, base", "test    dl, dl", "jnz     short loc_2BE4"], ["mov~ecx,0", "lea~rdi,<TAG>", "mov~rsi,base", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "mov~rbx,base", "test~dl,dl", "jnz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 4, -1, 0.0, ["lea     rbx, [base+3]", "mov     cs:__bss_start, argv0"], ["lea~rbx,[base+0]", "mov~<TAG>,argv0"]]], "func_feature": [3, 4, 7, 0, 7, 9, 1, 43, 0.05238, 7, 1], "succs": [[3, 4], [0, 2], [], [], [3, 5], [3, 6], [3]], "fname": "set_program_name", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[1, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.03692307692307692, ["mov     eax, 1", "test    r11b, r11b", "jz      short loc_2D18"], ["mov~eax,0", "test~r11b,r11b", "jz~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 18, -1, 0.07538461538461538, ["mov     eax, 0", "test    dl, dl", "jz      short loc_2D18"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]], [1, 0, 16, 0, 0, 3, 0, 1, 8, 9, 0.23076923076923078, ["lea     eax, [s26-41h]", "cmp     al, 19h", "ja      loc_2D34"], ["lea~eax,[s26-41h]+0]", "cmp~al,0", "ja~FOO"]], [1, 0, 17, 0, 0, 3, 1, 1, 7, 10, 0.22153846153846155, ["mov     eax, 1", "test    cl, cl", "jz      loc_2D18"], ["mov~eax,0", "test~cl,cl", "jz~FOO"]], [2, 0, 1, 2, 1, 6, 1, 1, 20, -1, 0.0, ["add     s2, 9; s2", "add     s1, 9; s1", "call    c_strcasecmp", "test    eax, eax", "setz    al", "movzx   eax, al"], ["add~s2,0", "add~s1,0", "call~FOO", "test~eax,eax", "setz~al", "movzx~eax,al"]], [1, 0, 14, 0, 0, 4, 1, 0, 9, 8, 0.11076923076923077, ["movzx   eax, byte ptr [s1+6]", "and     eax, 0FFFFFFDFh", "cmp     al, r8b", "setz    dl"], ["movzx~eax,[yte ptr [s1+0]", "and~eax,0", "cmp~al,r8b", "setz~dl"]], [1, 0, 0, 1, 0, 2, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 23, 0, 0, 3, 1, 1, 2, 15, 0.10615384615384615, ["mov     eax, 0", "test    r10b, r10b", "jz      loc_2D18"], ["mov~eax,0", "test~r10b,r10b", "jz~FOO"]], [1, 0, 22, 0, 0, 3, 1, 1, 3, 14, 0.12923076923076923, ["mov     eax, 1", "test    dl, dl", "jz      loc_2D18"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]], [1, 0, 18, 0, 0, 3, 1, 1, 6, 11, 0.21384615384615385, ["mov     eax, 0", "test    dl, dl", "jz      loc_2D18"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]], [1, 0, 13, 0, 0, 3, 1, 1, 10, 7, 0.24461538461538462, ["mov     eax, 0", "test    dl, dl", "jz      short loc_2D18"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]], [1, 0, 12, 0, 0, 3, 1, 1, 11, 6, 0.23692307692307693, ["mov     eax, 1", "test    r8b, r8b", "jz      short loc_2D18"], ["mov~eax,0", "test~r8b,r8b", "jz~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 14, 3, 0.19846153846153847, ["mov     eax, 0", "test    dl, dl", "jz      short loc_2D18"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]], [1, 0, 7, 0, 0, 3, 1, 1, 15, 2, 0.1753846153846154, ["mov     eax, 1", "test    r9b, r9b", "jz      short loc_2D18"], ["mov~eax,0", "test~r9b,r9b", "jz~FOO"]], [0, 0, 14, 0, 0, 3, 0, 1, 9, 8, 0.11076923076923077, ["cmp     [s1+6], r8b", "setz    dl", "jmp     loc_2C9C"], ["cmp~[s1+0],r8b", "setz~dl", "jmp~FOO"]], [2, 0, 26, 1, 0, 5, 0, 1, 0, 17, 0.0, ["sub     rsp, 8", "mov     r11d, [rsp+8+s28]", "lea     eax, [s24-41h]", "cmp     al, 19h", "ja      loc_2D1D"], ["sub~rsp,0", "mov~r11d,[rsp+0]", "lea~eax,[s24-41h]+0]", "cmp~al,0", "ja~FOO"]], [0, 0, 24, 0, 0, 3, 0, 1, 1, 16, 0.01846153846153846, ["cmp     [s1+4], dl", "setz    r10b", "jmp     loc_2C37"], ["cmp~[s1+0],dl", "setz~r10b", "jmp~FOO"]], [0, 0, 19, 0, 0, 3, 0, 1, 5, 12, 0.08384615384615385, ["cmp     [s1+5], cl", "setz    dl", "jmp     loc_2C69"], ["cmp~[s1+0],cl", "setz~dl", "jmp~FOO"]], [1, 0, 21, 0, 0, 3, 0, 1, 4, 13, 0.15384615384615385, ["lea     eax, [s25-41h]", "cmp     al, 19h", "ja      loc_2D29"], ["lea~eax,[s25-41h]+0]", "cmp~al,0", "ja~FOO"]], [1, 0, 24, 0, 0, 4, 1, 0, 1, 16, 0.01846153846153846, ["movzx   eax, byte ptr [s1+4]", "and     eax, 0FFFFFFDFh", "cmp     al, dl", "setz    r10b"], ["movzx~eax,[yte ptr [s1+0]", "and~eax,0", "cmp~al,dl", "setz~r10b"]], [1, 0, 11, 0, 0, 3, 0, 1, 12, 5, 0.23076923076923078, ["lea     eax, [s27-41h]", "cmp     al, 19h", "ja      loc_2D40"], ["lea~eax,[s27-41h]+0]", "cmp~al,0", "ja~FOO"]], [1, 0, 9, 0, 0, 4, 1, 0, 13, 4, 0.09923076923076923, ["movzx   eax, byte ptr [s1+7]", "and     eax, 0FFFFFFDFh", "cmp     al, r9b", "setz    dl"], ["movzx~eax,[yte ptr [s1+0]", "and~eax,0", "cmp~al,r9b", "setz~dl"]], [0, 0, 9, 0, 0, 3, 0, 1, 13, 4, 0.09923076923076923, ["cmp     [s1+7], r9b", "setz    dl", "jmp     loc_2CC8"], ["cmp~[s1+0],r9b", "setz~dl", "jmp~FOO"]], [0, 0, 4, 0, 0, 3, 0, 1, 17, 0, 0.04923076923076923, ["cmp     [s1+8], r11b", "setz    dl", "jmp     short loc_2CF0"], ["cmp~[s1+0],r11b", "setz~dl", "jmp~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 16, 1, 0.15384615384615385, ["lea     eax, [r11-41h]", "cmp     al, 19h", "ja      short loc_2D4C"], ["lea~eax,[r11-41h]+0]", "cmp~al,0", "ja~FOO"]], [1, 0, 19, 0, 0, 4, 1, 0, 5, 12, 0.08384615384615385, ["movzx   eax, byte ptr [s1+5]", "and     eax, 0FFFFFFDFh", "cmp     al, cl", "setz    dl"], ["movzx~eax,[yte ptr [s1+0]", "and~eax,0", "cmp~al,cl", "setz~dl"]], [1, 0, 4, 0, 0, 4, 1, 0, 17, -1, 0.04923076923076923, ["movzx   eax, byte ptr [s1+8]", "and     eax, 0FFFFFFDFh", "cmp     al, r11b", "setz    dl"], ["movzx~eax,[yte ptr [s1+0]", "and~eax,0", "cmp~al,r11b", "setz~dl"]]], "func_feature": [1, 16, 21, 0, 27, 41, 2, 90, 0.11595, 0, 4], "succs": [[4, 6], [0, 6], [5, 14], [2, 6], [6], [10], [], [8, 6], [18, 6], [3, 6], [11, 6], [20, 6], [13, 6], [24, 6], [10], [16, 19], [7], [9], [17, 25], [7], [21, 22], [12], [12], [1], [26, 23], [9], [1]], "fname": "strcaseeq4", "n_num": 27}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[2, 0, 6, 0, 0, 4, 1, 1, 0, 0, 0.06593406593406594, ["movzx   edx, byte ptr [locale_code+1]", "and     edx, 0FFFFFFDFh", "cmp     dl, 42h ; 'B'", "jnz     loc_2E77"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 2, 1, 0.0631868131868132, ["cmp     dl, 47h ; 'G'", "jnz     loc_2E77"], ["cmp~dl,0", "jnz~FOO"]], [2, 0, 5, 0, 0, 4, 1, 1, 3, 1, 0.049450549450549455, ["movzx   edx, byte ptr [locale_code+2]", "and     edx, 0FFFFFFDFh", "cmp     dl, 46h ; 'F'", "jnz     short loc_2E77"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [2, 0, 6, 0, 0, 4, 1, 1, 2, 1, 0.0521978021978022, ["movzx   edx, byte ptr [locale_code+1]", "and     edx, 0FFFFFFDFh", "cmp     dl, 54h ; 'T'", "jnz     short loc_2E77"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [1, 0, 1, 0, 0, 5, 0, 1, 7, -1, 0.0027472527472527475, ["cmp     byte ptr [msgid], 60h ; '`'", "lea     rax, unk_5B17", "lea     rdx, unk_5B10", "cmovnz  rax, rdx", "jmp     loc_2D77"], ["cmp~<TAG>,0", "lea~rax,<TAG>", "lea~rdx,<TAG>", "cmovnz~rax,rdx", "jmp~FOO"]], [7, 0, 3, 2, 1, 12, 1, 2, 6, 1, 0.03296703296703297, ["sub     rsp, 8", "push    0; s28", "mov     r9d, 0; s27", "mov     r8d, 30h ; '0'; s26", "mov     ecx, 33h ; '3'; s25", "mov     edx, 30h ; '0'; s24", "lea     rsi, aGb18030; \"GB18030\"", "mov     rdi, locale_code; s1", "call    strcaseeq4", "add     rsp, 10h", "test    eax, eax", "jz      loc_2E77"], ["sub~rsp,0", "push~0", "mov~r9d,0", "mov~r8d,0", "mov~ecx,0", "mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,locale_code", "call~FOO", "add~rsp,0", "test~eax,eax", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 4, 1, 0.04395604395604396, ["cmp     byte ptr [locale_code+3], 2Dh ; '-'", "jnz     short loc_2E77"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 5, 1, 0.05494505494505495, ["cmp     byte ptr [locale_code+3], 38h ; '8'", "jnz     loc_2E77"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 4, 1, 0.06593406593406594, ["cmp     byte ptr [locale_code+2], 31h ; '1'", "jnz     loc_2E77"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [2, 0, 13, 0, 1, 5, 1, 2, 1, 2, 0.06593406593406594, ["call    locale_charset", "movzx   edx, byte ptr [locale_code]", "and     edx, 0FFFFFFDFh", "cmp     dl, 55h ; 'U'", "jz      short loc_2E0C"], ["call~FOO", "movzx~edx,<TAG>", "and~edx,0", "cmp~dl,0", "jz~FOO"]], [3, 0, 14, 1, 1, 11, 0, 2, 0, 3, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbx, msgid", "mov     ebp, esi", "mov     edx, 5; category", "mov     s, msgid; msgid", "mov     edi, 0; domainname", "call    _dcgettext", "cmp     msgid, translation", "jz      short loc_2D7E"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,msgid", "mov~ebp,esi", "mov~edx,0", "mov~s,msgid", "mov~edi,0", "call~FOO", "cmp~msgid,translation", "jz~FOO"]], [1, 0, 1, 0, 0, 5, 0, 1, 3, 0, 0.049450549450549455, ["cmp     ebp, 9", "lea     rax, asc_5B15; \"\\\"\"", "lea     rdx, asc_5B13; \"'\"", "cmovnz  rax, rdx", "jmp     loc_2D77"], ["cmp~ebp,0", "lea~rax,<TAG>", "lea~rdx,<TAG>", "cmovnz~rax,rdx", "jmp~FOO"]], [7, 0, 3, 2, 1, 12, 1, 2, 5, 1, 0.027472527472527476, ["sub     rsp, 8", "push    0; s28", "mov     r9d, 0; s27", "mov     r8d, 0; s26", "mov     ecx, 0; s25", "mov     edx, 38h ; '8'; s24", "lea     rsi, aUtf8; \"UTF-8\"", "mov     rdi, locale_code; s1", "call    strcaseeq4", "add     rsp, 10h", "test    eax, eax", "jz      short loc_2E77"], ["sub~rsp,0", "push~0", "mov~r9d,0", "mov~r8d,0", "mov~ecx,0", "mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,locale_code", "call~FOO", "add~rsp,0", "test~eax,eax", "jz~FOO"]], [1, 0, 1, 0, 0, 5, 0, 1, 6, -1, 0.0027472527472527475, ["cmp     byte ptr [msgid], 60h ; '`'", "lea     rax, unk_5B1B", "lea     rdx, unk_5B0C", "cmovnz  rax, rdx", "jmp     loc_2D77"], ["cmp~<TAG>,0", "lea~rax,<TAG>", "lea~rdx,<TAG>", "cmovnz~rax,rdx", "jmp~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 1, -1, 0.0, ["add     rsp, 8", "pop     msgid", "pop     s", "retn"], ["add~rsp,0", "pop~msgid", "pop~s", "retn"]]], "func_feature": [4, 6, 18, 0, 15, 25, 2, 79, 0.03846, 8, 6], "succs": [[8, 11], [0, 11], [11, 6], [2, 11], [14], [11, 4], [11, 12], [11, 5], [11, 7], [1, 3], [9, 14], [14], [11, 13], [14], []], "fname": "gettext_quote", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[1, 0, 266, 0, 0, 1, 0, 0, 0, 0, 0.0, ["mov     byte ptr [r10+len_0], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 0, 266, 0, 0, 2, 0, 0, 15, 13, 0.006653426017874876, ["cmp     r15, len_0", "jbe     short loc_3A06"], ["cmp~r15,len_0", "jbe~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 15, 3, 0.0002837281883955171, ["mov     r15, len_0"], ["mov~r15,len_0"]], [1, 0, 9, 1, 0, 4, 1, 1, 14, 4, 0.003674280039721946, ["add     len_0, 1", "movzx   ecx, byte ptr [rax+len_0]", "test    cl, cl", "jz      short loc_3CAB"], ["add~len_0,0", "movzx~ecx,<TAG>", "test~cl,cl", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 9, 4, 0.12499645339764505, ["cmp     [rsp+0E8h+encountered_single_quote], 0", "jz      short loc_3C6A"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 266, 0, 0, 4, 2, 1, 8, 4, 0.160568875017733, ["movzx   edx, [rsp+0E8h+elide_outer_quotes]", "xor     edx, 1", "test    al, dl", "jz      short loc_3C6A"], ["movzx~edx,[rsp+0]", "xor~edx,0", "test~al,dl", "jz~FOO"]], [1, 0, 266, 1, 0, 5, 1, 0, 15, 9, 0.5612711022840119, ["add     len_0, 1", "test    bpl, bpl", "movzx   eax, [rsp+0E8h+all_c_and_shell_quote_compat]", "cmovz   eax, ebp", "mov     [rsp+0E8h+all_c_and_shell_quote_compat], al"], ["add~len_0,0", "test~bpl,bpl", "movzx~eax,[rsp+0]", "cmovz~eax,ebp", "mov~[rsp+0],al"]], [0, 0, 266, 0, 0, 2, 0, 0, 14, 10, 0.5604482905376649, ["cmp     len_0, buffersize_0", "jnb     short loc_35F6"], ["cmp~len_0,buffersize_0", "jnb~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 15, 10, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "movzx   ecx, [rsp+0E8h+c]", "mov     [rax+len_0], cl"], ["mov~rax,[rsp+0]", "movzx~ecx,[rsp+0]", "mov~<TAG>,cl"]], [1, 0, 266, 1, 0, 1, 0, 0, 16, 12, 0.007476237764221875, ["add     len_0, 1"], ["add~len_0,0"]], [2, 0, 266, 1, 0, 13, 2, 1, 12, 7, 0.1296495956873315, ["add     m, i", "mov     ebx, 0", "mov     ecx, ebp", "xor     ecx, 1", "and     cl, [rsp+0E8h+backslash_escapes]", "mov     esi, ecx", "movzx   r12d, [rsp+0E8h+elide_outer_quotes]", "movzx   r9d, [rsp+0E8h+pending_shell_escape_end]", "movzx   eax, [rsp+0E8h+c]", "movzx   edx, [rsp+0E8h+is_right_quote]", "mov     r10, [rsp+0E8h+buffer]", "mov     r11, [rsp+0E8h+arg]", "jmp     loc_3A5C"], ["add~m,i", "mov~ebx,0", "mov~ecx,ebp", "xor~ecx,0", "and~cl,[rsp+0]", "mov~esi,ecx", "movzx~r12d,[rsp+0]", "movzx~r9d,[rsp+0]", "movzx~eax,[rsp+0]", "movzx~edx,[rsp+0]", "mov~r10,[rsp+0]", "mov~r11,[rsp+0]", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 14, 8, 0.0947084692864236, ["cmp     m, 1", "ja      loc_37D4"], ["cmp~m,0", "ja~FOO"]], [1, 0, 266, 0, 0, 4, 2, 1, 11, 8, 0.15643353667186835, ["mov     ebx, ebp", "xor     ebx, 1", "and     bl, [rsp+0E8h+backslash_escapes]", "jz      loc_3529"], ["mov~ebx,ebp", "xor~ebx,0", "and~bl,[rsp+0]", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 3, 0.12524471556249112, ["cmp     [rsp+0E8h+all_c_and_shell_quote_compat], 0", "jnz     short loc_3C27"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 266, 1, 0, 1, 0, 0, 12, 8, 0.5780500780252518, ["add     i, 1"], ["add~i,0"]], [1, 0, 266, 0, 0, 2, 1, 1, 11, 9, 0.016782522343594834, ["test    byte ptr [rsp+0E8h+flags], 1", "jnz     loc_3609"], ["test~[yte ptr [rsp+0],0", "jnz~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 18, 13, 0.02983401900978862, ["mov     [rsp+0E8h+c], cl", "cmp     buffersize_0, len_0", "jbe     short loc_3418"], ["mov~[rsp+0],cl", "cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 17, 4, 0.0331394524045964, ["cmp     [rsp+0E8h+elide_outer_quotes], 0; jumptable 00000000000033F8 cases 0,6-8,12,14,27-29", "jnz     loc_3D7F"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 12, 6, 0.03531470184896202, ["mov     [rsp+0E8h+c], al", "mov     ebp, 0", "jmp     store_escape"], ["mov~[rsp+0],al", "mov~ebp,0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 1, 1, 11, 7, 0.06426443467158462, ["movzx   edi, [rsp+0E8h+backslash_escapes]", "test    dil, dil", "jnz     loc_3BA4"], ["movzx~edi,[rsp+0]", "test~dil,dil", "jnz~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 15, 11, 0.1149524755284437, ["lea     r8, [i+1]", "cmp     r8, ilim", "jnb     loc_3B09"], ["lea~r8,[i+0]", "cmp~r8,ilim", "jnb~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 14, 12, 0.11330685203574972, ["test    dl, dl", "jz      short loc_3A0A"], ["test~dl,dl", "jz~FOO"]], [0, 0, 266, 0, 0, 3, 1, 1, 11, 9, 0.010270960419917718, ["movzx   esi, [rsp+0E8h+elide_outer_quotes]", "test    [rsp+0E8h+backslash_escapes], sil", "jz      short loc_3499"], ["movzx~esi,[rsp+0]", "test~[rsp+0],sil", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 6, 0.032841537806781104, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 0000000000003686 case 92", "jz      short loc_34A0"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 19, 13, 0.0, ["mov     rsi, [rsp+0E8h+buffer]", "mov     byte ptr [rsi+len_0], 3Fh ; '?'"], ["mov~rsi,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 266, 0, 1, 7, 1, 2, 10, 6, 0.010341892467016597, ["mov     rax, [rsp+0E8h+arg]", "lea     rdi, [rax+i]; s1", "mov     rdx, [rsp+0E8h+quote_string_len]; n", "mov     rsi, [rsp+0E8h+quote_string]; s2", "call    _memcmp", "test    eax, eax", "jnz     short loc_3237"], ["mov~rax,[rsp+0]", "lea~rdi,<TAG>", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 1, 9, 7, 0.027606752730883814, ["cmp     rdx, [rsp+0E8h+argsize]", "ja      short loc_322D"], ["cmp~rdx,[rsp+0]", "ja~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 16, 13, 0.058362888352957866, ["cmp     r15, len_0", "jbe     short loc_3AB6"], ["cmp~r15,len_0", "jbe~FOO"]], [2, 0, 266, 0, 0, 6, 2, 1, 15, 14, 0.05507164136756987, ["cmp     [rsp+0E8h+quoting_style], 2", "setz    bl", "mov     r8d, r9d", "xor     r8d, 1", "and     r8b, bl", "jz      short loc_3AAC"], ["cmp~[rsp+0],0", "setz~bl", "mov~r8d,r9d", "xor~r8d,0", "and~r8b,bl", "jz~FOO"]], [1, 0, 266, 1, 0, 2, 0, 0, 19, 14, 0.022258476379628314, ["add     r14, 3", "mov     r9d, r8d"], ["add~r14,0", "mov~r9d,r8d"]], [1, 0, 266, 0, 0, 5, 0, 1, 5, 7, 0.7177010923535253, ["mov     rax, [rsp+0E8h+argsize]", "cmp     rax, i", "setnz   bpl", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      loc_3BC6"], ["mov~rax,[rsp+0]", "cmp~rax,i", "setnz~bpl", "cmp~rax,0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 4, 8, 0.1354802099588594, ["mov     r13d, 0", "jmp     loc_360D"], ["mov~r13d,0", "jmp~FOO"]], [2, 0, 266, 0, 0, 3, 0, 1, 10, 12, 0.0880124840402894, ["mov     qword ptr [rsp+0E8h+mbstate.__count], 0", "cmp     [rsp+0E8h+argsize], 0FFFFFFFFFFFFFFFFh", "jz      short loc_3857"], ["mov~[word ptr [rsp+0],0", "cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 9, 10, 0.18792736558377074, ["mov     rbx, [rsp+0E8h+var_80]; jumptable 0000000000003686 default case", "cmp     rbx, 1", "jnz     short loc_380C"], ["mov~rbx,[rsp+0]", "cmp~rbx,0", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 11, 5, 0.005589445311391686, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jz      loc_3654"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 1, 12, 12, 0.1223152220173074, ["mov     buffersize_0, [rsp+0E8h+orig_buffersize]", "jmp     process_input"], ["mov~buffersize_0,[rsp+0]", "jmp~FOO"]], [1, 0, 266, 0, 0, 6, 2, 1, 11, 4, 0.12223010356078876, ["test    buffersize_0, buffersize_0", "setz    cl", "cmp     [rsp+0E8h+orig_buffersize], 0", "setnz   al", "test    cl, al", "jz      short loc_3C6A"], ["test~buffersize_0,buffersize_0", "setz~cl", "cmp~[rsp+0],0", "setnz~al", "test~cl,al", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 20, 12, 0.0, ["mov     rdi, [rsp+0E8h+buffer]", "mov     byte ptr [rdi+r14+1], 22h ; '\"'"], ["mov~rdi,[rsp+0]", "mov~[yte ptr [rdi+0],0"]], [0, 0, 266, 0, 0, 3, 0, 0, 19, 12, 0.03065683075613562, ["lea     rdx, [len_0+1]", "cmp     buffersize_0, len_0", "jbe     short loc_342C"], ["lea~rdx,[len_0+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 10, 2, 0.006667612427294652, ["cmp     buffersize_0, len_0", "jbe     loc_3D3F"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 12, 0, 0, 6, 1, 1, 9, 3, 0.03311107958575684, ["mov     rax, buffersize_0", "mov     buffersize_0, len_0", "mov     len_0, buffersize_0", "mov     buffersize_0, [rsp+0E8h+quote_string]", "test    rax, rax", "jz      short loc_3CAE"], ["mov~rax,buffersize_0", "mov~buffersize_0,len_0", "mov~len_0,buffersize_0", "mov~buffersize_0,[rsp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 10, 3, 0.02025819265143992, ["test    dl, dl", "jz      short loc_3CAE"], ["test~dl,dl", "jz~FOO"]], [0, 0, 10, 0, 0, 3, 1, 1, 11, 3, 0.016952759256632144, ["movzx   ecx, byte ptr [rax]", "test    cl, cl", "jz      short loc_3CAE"], ["movzx~ecx,<TAG>", "test~cl,cl", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 12, 4, 0.0005107107391119308, ["mov     len_0, buffersize_0", "jmp     force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 18, 11, 0.0, ["mov     byte ptr [r10+len_0], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 266, 0, 0, 2, 0, 0, 17, 11, 0.013250106398070647, ["cmp     r15, len_0", "jbe     short loc_3A2F"], ["cmp~r15,len_0", "jbe~FOO"]], [4, 0, 266, 1, 0, 12, 0, 1, 5, 9, 0.033210384451695274, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, [rsp+0E8h+quote_string_0]", "repne scasb", "mov     rax, rcx", "not     rax", "sub     rax, 1", "mov     [rsp+0E8h+quote_string_len], rax", "mov     rdi, [rsp+0E8h+quote_string_0]", "mov     [rsp+0E8h+quote_string], rdi", "mov     [rsp+0E8h+backslash_escapes], 1", "jmp     loc_2F8E"], ["mov~rcx,0", "mov~eax,0", "mov~rdi,[rsp+0]", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "sub~rax,0", "mov~[rsp+0],rax", "mov~rdi,[rsp+0]", "mov~[rsp+0],rdi", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 1, 0, 4, 1, 1, 8, 10, 0.011193077032203149, ["add     len_0, 1", "movzx   eax, byte ptr [rdx+len_0]", "test    al, al", "jz      short loc_2FFA"], ["add~len_0,0", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 6, 10, 0.003688466449141722, ["mov     r14d, 0", "jmp     loc_2FFA"], ["mov~r14d,0", "jmp~FOO"]], [2, 0, 266, 0, 0, 3, 0, 1, 4, 10, 0.030330543339480775, ["mov     r14d, 0", "cmp     [rsp+0E8h+elide_outer_quotes], 0", "jz      short loc_3058"], ["mov~r14d,0", "cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 8, 0.014328273513973613, ["mov     [rsp+0E8h+is_right_quote], 0", "jmp     loc_3654"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 20, 11, 0.03147964250248262, ["lea     len_0, [r14+2]", "cmp     buffersize_0, len_0", "jbe     short loc_3440"], ["lea~len_0,[r14+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 18, 10, 0.014072918144417646, ["lea     rdx, [len_0+1]", "cmp     r15, len_0", "jbe     short loc_3A3E"], ["lea~rdx,[len_0+0]", "cmp~r15,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 19, 10, 0.0, ["mov     byte ptr [r10+r14+1], 27h ; '''"], ["mov~[yte ptr [r10+0],0"]], [5, 0, 266, 0, 0, 8, 0, 1, 3, 9, 0.008621790324868775, ["mov     [rsp+0E8h+elide_outer_quotes], 1; jumptable 0000000000002F5F case 6", "mov     [rsp+0E8h+backslash_escapes], 1", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_5B15; \"\\\"\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 0", "mov     [rsp+0E8h+quoting_style], 5", "jmp     loc_2F8E"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 266, 1, 0, 5, 0, 1, 2, 10, 0.1235494396368279, ["mov     edx, eax", "lea     rcx, off_5B80", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["mov~edx,eax", "lea~rcx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [1, 0, 266, 0, 0, 2, 0, 0, 21, 11, 0.0, ["mov     rsi, [rsp+0E8h+buffer]", "mov     byte ptr [rsi+r14+2], 22h ; '\"'"], ["mov~rsi,[rsp+0]", "mov~[yte ptr [rsi+0],0"]], [1, 0, 266, 0, 0, 2, 0, 1, 11, 8, 0.0018158604057313093, ["mov     [rsp+0E8h+is_right_quote], 0", "jmp     loc_3654"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 7, 0.003295975788527923, ["mov     eax, 72h ; 'r'; jumptable 0000000000003686 case 13", "jmp     c_and_shell_escape"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 266, 1, 0, 5, 0, 1, 9, 6, 0.3594978011065399, ["movzx   eax, r12b", "lea     rsi, off_5C24", "movsxd  rax, dword ptr [rsi+rax*4]", "add     rax, rsi", "jmp     rax; switch jump"], ["movzx~eax,r12b", "lea~rsi,<TAG>", "movsxd~rax,<TAG>", "add~rax,rsi", "jmp~rax"]], [0, 0, 266, 0, 0, 3, 0, 0, 21, 10, 0.03230245424882962, ["lea     len_0, [r14+3]", "cmp     buffersize_0, len_0", "jbe     short loc_3454"], ["lea~len_0,[r14+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 10, 6, 0.003674280039721946, ["test    i, i; jumptable 0000000000003686 cases 35,126", "jz      short loc_36DB; jumptable 0000000000003686 case 32"], ["test~i,i", "jz~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 11, 7, 0.010781671159029648, ["test    al, al", "jnz     loc_3B95"], ["test~al,al", "jnz~FOO"]], [0, 0, 266, 0, 0, 4, 1, 1, 5, 11, 0.016541353383458645, ["mov     rdx, [rsp+0E8h+quote_string_1]", "movzx   eax, byte ptr [rdx]", "test    al, al", "jz      short loc_3083"], ["mov~rdx,[rsp+0]", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 22, 10, 0.0, ["mov     rdi, [rsp+0E8h+buffer]", "mov     byte ptr [rdi+r14+3], 3Fh ; '?'"], ["mov~rdi,[rsp+0]", "mov~[yte ptr [rdi+0],0"]], [0, 0, 266, 0, 0, 1, 0, 0, 19, 8, 0.0, ["mov     [r10+len_0], al"], ["mov~<TAG>,al"]], [0, 0, 266, 0, 0, 2, 0, 0, 18, 8, 0.04451695275925663, ["cmp     r15, len_0", "jbe     short loc_3A53"], ["cmp~r15,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 8, 0.007387572705348276, ["mov     eax, 62h ; 'b'; jumptable 0000000000003686 case 8", "jmp     c_escape"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 9, 0, 1, 11, 11, 0.0888352957866364, ["mov     esi, 0", "lea     rax, [rsp+0E8h+mbstate]", "mov     [rsp+0E8h+ps], rax", "lea     rax, [rsp+0E8h+w]", "mov     [rsp+0E8h+pwc], rax", "mov     [rsp+0E8h+len], len_0", "mov     [rsp+0E8h+buffersize], buffersize_0", "mov     buffersize_0, rsi", "jmp     loc_3922"], ["mov~esi,0", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~[rsp+0],len_0", "mov~[rsp+0],buffersize_0", "mov~buffersize_0,rsi", "jmp~FOO"]], [3, 0, 266, 1, 0, 9, 0, 1, 11, 12, 0.0, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, [rsp+0E8h+arg]", "repne scasb", "mov     rax, rcx", "not     rax", "sub     rax, 1", "mov     [rsp+0E8h+argsize], rax", "jmp     short loc_3820"], ["mov~rcx,0", "mov~eax,0", "mov~rdi,[rsp+0]", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "sub~rax,0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 14, 5, 0.06291672577670591, ["test    r12b, r12b", "jnz     loc_3D67"], ["test~r12b,r12b", "jnz~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 13, 6, 0.1791601645623493, ["test    cl, cl", "jz      short loc_39F8"], ["test~cl,cl", "jz~FOO"]], [0, 0, 266, 0, 2, 9, 0, 3, 4, 11, 0.0, ["mov     esi, ebx; s", "lea     rdi, asc_5B2D; \"`\"", "call    gettext_quote", "mov     [rsp+0E8h+quote_string_1], rax", "mov     esi, ebx; s", "lea     rdi, asc_5B13; \"'\"", "call    gettext_quote", "mov     [rsp+0E8h+quote_string_0], rax", "jmp     short loc_2FED"], ["mov~esi,ebx", "lea~rdi,<TAG>", "call~FOO", "mov~[rsp+0],rax", "mov~esi,ebx", "lea~rdi,<TAG>", "call~FOO", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 3, 11, 0.029507731593133777, ["mov     ebx, [rsp+0E8h+quoting_style]; jumptable 0000000000002F5F cases 8-10", "cmp     ebx, 0Ah", "jnz     short loc_3030"], ["mov~ebx,[rsp+0]", "cmp~ebx,0", "jnz~FOO"]], [1, 0, 266, 1, 0, 2, 0, 0, 19, 7, 0.045339764505603626, ["add     len_0, 1", "movzx   eax, byte ptr [r11+i]"], ["add~len_0,0", "movzx~eax,<TAG>"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 6, 0.08733153638814016, ["cmp     [rsp+0E8h+backslash_escapes], 0; jumptable 0000000000003686 case 0", "jz      loc_3343"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 15, 10, 0.029621222868491982, ["cmp     [rsp+0E8h+quoting_style], 2", "jnz     short loc_38FB"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 14, 11, 0.062391828628174203, ["cmp     bytes, 0FFFFFFFFFFFFFFFEh", "jz      loc_387B"], ["cmp~bytes,0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 13, 10, 0.06876152645765357, ["cmp     bytes, 0FFFFFFFFFFFFFFFFh", "jz      short loc_39A4"], ["cmp~bytes,0", "jz~FOO"]], [0, 0, 266, 1, 1, 12, 1, 2, 12, 10, 0.09128954461625761, ["lea     rbx, [i+m+0]", "mov     rax, [rsp+0E8h+arg]", "lea     r14, [rax+rbx]", "mov     rdx, [rsp+0E8h+argsize]", "sub     rdx, rbx; n", "mov     rcx, [rsp+0E8h+ps]; ps", "mov     rsi, r14; s", "mov     rdi, [rsp+0E8h+pwc]; pwc", "call    rpl_mbrtowc", "mov     r12, rax", "test    bytes, bytes", "jz      loc_39D6"], ["lea~rbx,[i+0]", "mov~rax,[rsp+0]", "lea~r14,<TAG>", "mov~rdx,[rsp+0]", "sub~rdx,rbx", "mov~rcx,[rsp+0]", "mov~rsi,r14", "mov~rdi,[rsp+0]", "call~FOO", "mov~r12,rax", "test~bytes,bytes", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 11, 5, 0.06761242729465172, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jnz     loc_3CC3"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 266, 1, 0, 5, 0, 1, 22, 9, 0.033125265995176616, ["add     r14, 4", "movzx   ebx, [rsp+0E8h+elide_outer_quotes]", "mov     ebp, ebx", "mov     r13, i", "jmp     loc_3529"], ["add~r14,0", "movzx~ebx,[rsp+0]", "mov~ebp,ebx", "mov~r13,i", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 17, 14, 0.021435664633281316, ["lea     len_0, [r14+2]", "cmp     buffersize_0, len_0", "jbe     short loc_35C8"], ["lea~len_0,[r14+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 16, 15, 0.020612852886934315, ["lea     rdx, [len_0+1]", "cmp     buffersize_0, len_0", "jbe     short loc_35B4"], ["lea~rdx,[len_0+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 17, 15, 0.0, ["mov     rdi, [rsp+0E8h+buffer]", "mov     byte ptr [rdi+r14+1], 24h ; '$'"], ["mov~rdi,[rsp+0]", "mov~[yte ptr [rdi+0],0"]], [3, 0, 266, 0, 0, 6, 0, 1, 5, 9, 0.0018655128387005248, ["mov     [rsp+0E8h+backslash_escapes], 1", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_5B15; \"\\\"\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 1", "jmp     loc_2F8E"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 4, 10, 0.006667612427294652, ["test    buffersize_0, buffersize_0", "jz      loc_3146"], ["test~buffersize_0,buffersize_0", "jz~FOO"]], [1, 0, 266, 1, 0, 4, 0, 0, 19, 9, 0.014895729890764646, ["add     r14, 2", "mov     edx, esi", "mov     i, r8", "mov     r9d, esi"], ["add~r14,0", "mov~edx,esi", "mov~i,r8", "mov~r9d,esi"]], [1, 0, 266, 0, 0, 2, 0, 1, 12, 5, 0.003688466449141722, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jnz     loc_3688"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 11, 6, 0.017818130231238474, ["cmp     [rsp+0E8h+quoting_style], 2", "jnz     short c_escape"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 1, 6, 12, 0.009916300184423322, ["mov     rcx, [rsp+0E8h+buffer]", "jmp     short loc_3078"], ["mov~rcx,[rsp+0]", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 8, 0.007387572705348276, ["mov     eax, 66h ; 'f'; jumptable 0000000000003686 case 12", "jmp     c_escape"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 266, 1, 0, 7, 0, 1, 8, 7, 0.5493828911902398, ["mov     rax, [rsp+0E8h+arg]", "add     rax, i", "mov     [rsp+0E8h+var_B0], rax", "movzx   r12d, byte ptr [rax]", "mov     [rsp+0E8h+c], r12b", "cmp     r12b, 7Eh ; '~'; switch 127 cases", "ja      loc_379F; jumptable 0000000000003686 default case"], ["mov~rax,[rsp+0]", "add~rax,i", "mov~[rsp+0],rax", "movzx~r12d,<TAG>", "mov~[rsp+0],r12b", "cmp~r12b,0", "ja~FOO"]], [2, 0, 266, 0, 0, 9, 2, 1, 7, 8, 0.549553128103277, ["cmp     [rsp+0E8h+quoting_style], 2", "setnz   bl", "and     bl, [rsp+0E8h+backslash_escapes]", "cmp     [rsp+0E8h+quote_string_len], 0", "setnz   byte ptr [rsp+0E8h+ps]", "movzx   eax, byte ptr [rsp+0E8h+ps]", "and     al, bl", "mov     [rsp+0E8h+is_right_quote], al", "jnz     loc_31C0"], ["cmp~[rsp+0],0", "setnz~bl", "and~bl,[rsp+0]", "cmp~[rsp+0],0", "setnz~[yte ptr [rsp+0]", "movzx~eax,[yte ptr [rsp+0]", "and~al,bl", "mov~[rsp+0],al", "jnz~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 17, 12, 0.059185700099304864, ["lea     r8, [len_0+1]", "cmp     r15, len_0", "jbe     short loc_3ACF"], ["lea~r8,[len_0+0]", "cmp~r15,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 17, 13, 0.0, ["mov     byte ptr [r10+len_0], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 0, 266, 0, 0, 2, 0, 0, 7, 11, 0.01037026528585615, ["cmp     buffersize_0, len_0", "jbe     short loc_306B"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 266, 0, 0, 2, 0, 1, 8, 11, 0.0, ["mov     [rcx+len_0], al", "jmp     short loc_306B"], ["mov~<TAG>,al", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 6, 6, 0.7185239040998723, ["test    bpl, bpl", "jz      loc_3BD9"], ["test~bpl,bpl", "jz~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 6, 7, 0.0, ["mov     argsize_0, [rsp+0E8h+arg]", "cmp     byte ptr [rax+i], 0", "setnz   bpl", "jmp     loc_3623"], ["mov~argsize_0,[rsp+0]", "cmp~<TAG>,0", "setnz~bpl", "jmp~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 19, 15, 0.0, ["mov     byte ptr [r10+r14+2], 27h ; '''"], ["mov~[yte ptr [r10+0],0"]], [0, 0, 266, 0, 0, 3, 0, 0, 18, 15, 0.021435664633281316, ["lea     len_0, [r14+2]", "cmp     r15, len_0", "jbe     short loc_3AA5"], ["lea~len_0,[r14+0]", "cmp~r15,len_0", "jbe~FOO"]], [2, 0, 266, 0, 0, 7, 2, 1, 12, 12, 0.06449141722230103, ["cmp     [rsp+0E8h+quoting_style], 2", "setz    al", "movzx   ecx, [rsp+0E8h+pending_shell_escape_end]", "xor     ecx, 1", "mov     rdx, len_0", "and     al, cl", "jz      short loc_32C1"], ["cmp~[rsp+0],0", "setz~al", "movzx~ecx,[rsp+0]", "xor~ecx,0", "mov~rdx,len_0", "and~al,cl", "jz~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 17, 17, 0.0, ["mov     byte ptr [r10+len_0], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 266, 0, 0, 2, 0, 0, 16, 17, 0.019790041140587317, ["cmp     r15, len_0", "jbe     short loc_3A87"], ["cmp~r15,len_0", "jbe~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 13, 13, 0.013264292807490424, ["cmp     buffersize_0, len_0", "jbe     short loc_3777"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 12, 12, 0.03302596112923819, ["test    buffersize_0, buffersize_0", "jz      short loc_3768"], ["test~buffersize_0,buffersize_0", "jz~FOO"]], [2, 0, 266, 0, 0, 3, 0, 1, 13, 11, 0.016896013618953043, ["mov     eax, 0", "cmp     [rsp+0E8h+orig_buffersize], 0", "jnz     short loc_3768"], ["mov~eax,0", "cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 13, 15, 0.019790041140587317, ["cmp     buffersize_0, r14", "jbe     short loc_3291"], ["cmp~buffersize_0,r14", "jbe~FOO"]], [3, 0, 266, 0, 0, 4, 0, 1, 13, 12, 0.006681798836714427, ["mov     ebp, 0", "mov     ebx, 0", "mov     [rsp+0E8h+c], 5Ch ; '\\'", "jmp     store_c"], ["mov~ebp,0", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 12, 9, 0.006667612427294652, ["cmp     byte ptr [rsp+0E8h+ps], 0", "jnz     loc_3BB2"], ["cmp~[yte ptr [rsp+0],0", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 13, 4, 0.00042559228259327563, ["mov     len_0, buffersize_0", "jmp     force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 14, 15, 0.0, ["mov     rcx, [rsp+0E8h+buffer]", "mov     byte ptr [rcx+r14], 27h ; '''"], ["mov~rcx,[rsp+0]", "mov~<TAG>,0"]], [2, 0, 266, 0, 1, 7, 1, 1, 10, 9, 0.09697829479358774, ["call    ___ctype_b_loc", "movzx   r12d, r12b", "mov     rax, [rax]", "movzx   ebp, word ptr [rax+r12*2]", "shr     bp, 0Eh", "and     ebp, 1", "mov     rdi, rbx"], ["call~FOO", "movzx~r12d,r12b", "mov~rax,<TAG>", "movzx~ebp,<TAG>", "shr~bp,0", "and~ebp,0", "mov~rdi,rbx"]], [0, 0, 266, 0, 0, 3, 0, 0, 17, 16, 0.020612852886934315, ["lea     pending_shell_escape_end_0, [len_0+1]", "cmp     r15, len_0", "jbe     short loc_3A96"], ["lea~pending_shell_escape_end_0,[len_0+0]", "cmp~r15,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 18, 16, 0.0, ["mov     byte ptr [r10+r14+1], 24h ; '$'"], ["mov~[yte ptr [r10+0],0"]], [1, 0, 266, 0, 0, 2, 0, 0, 18, 11, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax+len_0], 30h ; '0'"], ["mov~rax,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 266, 0, 0, 2, 0, 0, 17, 11, 0.013250106398070647, ["cmp     buffersize_0, len_0", "jbe     short loc_331D"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 3, 10, 0.006667612427294652, ["cmp     [rsp+0E8h+elide_outer_quotes], 0; jumptable 0000000000002F5F case 4", "jnz     loc_316B"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 8, 0.007387572705348276, ["mov     eax, 61h ; 'a'; jumptable 0000000000003686 case 7", "jmp     c_escape"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 266, 0, 0, 3, 0, 1, 11, 9, 0.0018158604057313093, ["mov     ebp, 0", "mov     ebx, 0", "jmp     loc_3529"], ["mov~ebp,0", "mov~ebx,0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 14, 14, 0.020612852886934315, ["lea     len_0, [r14+1]", "cmp     buffersize_0, len_0", "jbe     short loc_32A5"], ["lea~len_0,[r14+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 4, 11, 4.255922825932756e-05, ["mov     [rsp+0E8h+backslash_escapes], 1"], ["mov~[rsp+0],0"]], [0, 0, 9, 0, 0, 2, 0, 0, 13, 5, 0.010341892467016597, ["cmp     buffersize_0, len_0", "jbe     short loc_3C90"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 9, 0, 0, 3, 0, 1, 14, 5, 0.0, ["mov     rsi, [rsp+0E8h+buffer]", "mov     [rsi+len_0], cl", "jmp     short loc_3C90"], ["mov~rsi,[rsp+0]", "mov~<TAG>,cl", "jmp~FOO"]], [0, 0, 266, 0, 0, 8, 0, 0, 15, 10, 0.02983401900978862, ["mov     rsi, r14", "mov     bytes, m", "mov     rdi, m", "mov     r14, [rsp+0E8h+len]", "mov     m, [rsp+0E8h+buffersize]", "mov     rcx, [rsp+0E8h+argsize]", "cmp     rbx, rcx", "jnb     loc_39BE"], ["mov~rsi,r14", "mov~bytes,m", "mov~rdi,m", "mov~r14,[rsp+0]", "mov~m,[rsp+0]", "mov~rcx,[rsp+0]", "cmp~rbx,rcx", "jnb~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 12, 8, 0.001063980706483189, ["mov     eax, 5Ch ; '\\'", "jmp     short c_escape"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 15, 14, 0.0, ["mov     rsi, [rsp+0E8h+buffer]", "mov     byte ptr [rsi+r14+1], 24h ; '$'"], ["mov~rsi,[rsp+0]", "mov~[yte ptr [rsi+0],0"]], [0, 0, 266, 0, 0, 2, 1, 1, 4, 10, 0.010384451695275925, ["test    buffersize_0, buffersize_0", "jz      loc_3193"], ["test~buffersize_0,buffersize_0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 3, 10, 0.013221733579231097, ["cmp     [rsp+0E8h+elide_outer_quotes], 0; jumptable 0000000000002F5F case 2", "jz      short loc_309E"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 16, 10, 0.019860973187686197, ["cmp     byte ptr [rsi], 0", "jz      loc_39C5"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 266, 0, 0, 3, 1, 1, 11, 5, 0.019633990636969783, ["movzx   ebx, [rsp+0E8h+elide_outer_quotes]", "test    bl, bl", "jnz     loc_3CD6"], ["movzx~ebx,[rsp+0]", "test~bl,bl", "jnz~FOO"]], [2, 0, 266, 0, 0, 5, 0, 1, 10, 8, 0.009958859412682649, ["mov     rcx, [rsp+0E8h+argsize]; jumptable 0000000000003686 cases 123,125", "cmp     rcx, 1", "setnz   al", "cmp     rcx, 0FFFFFFFFFFFFFFFFh", "jz      short loc_36C8"], ["mov~rcx,[rsp+0]", "cmp~rcx,0", "setnz~al", "cmp~rcx,0", "jz~FOO"]], [0, 0, 266, 0, 0, 1, 0, 0, 17, 11, 0.013250106398070647, ["mov     rsi, [rsp+0E8h+var_B0]"], ["mov~rsi,[rsp+0]"]], [0, 0, 266, 0, 0, 3, 0, 0, 15, 13, 0.021435664633281316, ["lea     len_0, [r14+2]", "cmp     buffersize_0, len_0", "jbe     short loc_32B9"], ["lea~len_0,[r14+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 16, 9, 0.019889346006525747, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jz      short loc_38FB"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 11, 8, 0.0, ["mov     rax, [rsp+0E8h+arg]", "cmp     byte ptr [rax+1], 0", "setnz   al", "jmp     short loc_36AC"], ["mov~rax,[rsp+0]", "cmp~[yte ptr [rax+0],0", "setnz~al", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 12, 12, 0.016512980564619095, ["mov     ebp, ebx", "mov     [rsp+0E8h+c], 5Ch ; '\\'"], ["mov~ebp,ebx", "mov~[rsp+0],0"]], [1, 0, 266, 0, 0, 2, 0, 0, 16, 13, 0.0, ["mov     rcx, [rsp+0E8h+buffer]", "mov     byte ptr [rcx+r14+2], 27h ; '''"], ["mov~rcx,[rsp+0]", "mov~[yte ptr [rcx+0],0"]], [1, 0, 266, 0, 0, 2, 0, 1, 13, 11, 0.49803754669693107, ["cmp     bl, 1", "jz      loc_35E3"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 13, 6, 0.34383127630396776, ["cmp     [rsp+0E8h+is_right_quote], 0", "jz      store_c"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 266, 0, 0, 3, 0, 1, 16, 12, 0.0811888211093772, ["mov     [rsp+0E8h+pending_shell_escape_end], r9b", "mov     [rsp+0E8h+c], al", "jmp     store_c"], ["mov~[rsp+0],r9b", "mov~[rsp+0],al", "jmp~FOO"]], [0, 0, 266, 0, 0, 4, 0, 1, 20, 12, 0.05084409136047666, ["mov     [rsp+0E8h+pending_shell_escape_end], r9b", "mov     [rsp+0E8h+c], al", "mov     ebx, ecx", "jmp     store_c"], ["mov~[rsp+0],r9b", "mov~[rsp+0],al", "mov~ebx,ecx", "jmp~FOO"]], [1, 0, 266, 1, 0, 4, 0, 0, 18, 10, 0.0136898850900837, ["add     m, 1", "lea     rdx, [i+m+0]", "cmp     rcx, rdx", "jbe     loc_39CC"], ["add~m,0", "lea~rdx,[i+0]", "cmp~rcx,rdx", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 19, 10, 0.003333806213647326, ["cmp     byte ptr [rsi+m], 0", "jnz     short loc_38B0"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 16, 12, 0.022258476379628314, ["lea     len_0, [r14+3]", "mov     [rsp+0E8h+pending_shell_escape_end], al"], ["lea~len_0,[r14+0]", "mov~[rsp+0],al"]], [1, 0, 3, 0, 0, 3, 0, 1, 11, 2, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax+len_0], 0", "jmp     short loc_3D3F"], ["mov~rax,[rsp+0]", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 14, 11, 0.01652716697403887, ["cmp     [rsp+0E8h+pending_shell_escape_end], 0", "jz      loc_35E3"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 15, 13, 0.013250106398070647, ["cmp     buffersize_0, len_0", "jbe     short loc_34D7"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 13, 11, 0.06778266420768903, ["cmp     buffersize_0, len_0", "jbe     short loc_32CF"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 8, 0.007387572705348276, ["mov     eax, 76h ; 'v'; jumptable 0000000000003686 case 11", "jmp     c_escape"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 266, 1, 0, 4, 0, 0, 18, 12, 0.0, ["mov     r8d, eax", "shr     r8b, 6", "add     r8d, 30h ; '0'", "mov     [r10+r14+1], r8b"], ["mov~r8d,eax", "shr~r8b,0", "add~r8d,0", "mov~[r10+0],r8b"]], [1, 0, 266, 0, 0, 2, 0, 0, 14, 11, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax+len_0], 5Ch ; '\\'"], ["mov~rax,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 9, 1, 0, 3, 0, 1, 12, 6, 0.01361895304298482, ["mov     rdx, len_0", "sub     rax, len_0", "jmp     short loc_3C9C"], ["mov~rdx,len_0", "sub~rax,len_0", "jmp~FOO"]], [0, 0, 6, 0, 0, 4, 0, 1, 12, 4, 0.00017023691303731024, ["mov     len_0, buffersize_0", "movzx   eax, [rsp+0E8h+elide_outer_quotes]", "mov     [rsp+0E8h+backslash_escapes], al", "jmp     short force_outer_quoting_style"], ["mov~len_0,buffersize_0", "movzx~eax,[rsp+0]", "mov~[rsp+0],al", "jmp~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 20, 9, 0.003716839267981274, ["mov     rdi, m", "mov     ebp, 0", "jmp     loc_39E9"], ["mov~rdi,m", "mov~ebp,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 16, 13, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax+len_0], 27h ; '''"], ["mov~rax,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 266, 0, 0, 3, 1, 1, 14, 10, 0.06860547595403603, ["lea     r14, [len_0+1]", "test    bl, bl", "jz      loc_3B39"], ["lea~r14,[len_0+0]", "test~bl,bl", "jz~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 10, 6, 0.0, ["mov     ebp, 0; jumptable 0000000000003686 cases 33,34,36,38,40-42,59-62,91,94,96,124"], ["mov~ebp,0"]], [5, 0, 266, 0, 0, 9, 0, 1, 5, 9, 0.0037239324726911615, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax], 27h ; '''", "mov     [rsp+0E8h+elide_outer_quotes], 0", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_5B13; \"'\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 1", "mov     [rsp+0E8h+quoting_style], 2", "jmp     loc_2F8E"], ["mov~rax,[rsp+0]", "mov~<TAG>,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 12, 4, 0.00017023691303731024, ["mov     len_0, buffersize_0", "jmp     short force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [1, 0, 266, 1, 0, 3, 0, 1, 20, 7, 0.010895162434387855, ["add     rdx, 1; jumptable 00000000000038F9 default case", "cmp     rdx, rbx", "jz      short loc_38FB"], ["add~rdx,0", "cmp~rdx,rbx", "jz~FOO"]], [2, 0, 266, 1, 0, 4, 0, 1, 19, 6, 0.014072918144417646, ["movzx   eax, byte ptr [rdx]", "sub     eax, 5Bh ; '['", "cmp     al, 21h ; '!'; switch 34 cases", "ja      short loc_38D5; jumptable 00000000000038F9 default case"], ["movzx~eax,<TAG>", "sub~eax,0", "cmp~al,0", "ja~FOO"]], [0, 0, 266, 1, 0, 5, 0, 1, 20, 5, 0.00390126259043836, ["movzx   eax, al", "lea     rdi, off_5E20", "movsxd  rax, dword ptr [rdi+rax*4]", "add     rax, rdi", "jmp     rax; switch jump"], ["movzx~eax,al", "lea~rdi,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdi", "jmp~rax"]], [0, 0, 266, 0, 0, 3, 0, 0, 16, 12, 0.014072918144417646, ["lea     rax, [len_0+1]", "cmp     buffersize_0, len_0", "jbe     short loc_34EB"], ["lea~rax,[len_0+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 21, 4, 0.0006383884238899134, ["mov     r14, [rsp+0E8h+buffersize]; jumptable 00000000000038F9 cases 0,1,3,5,33"], ["mov~r14,[rsp+0]"]], [0, 0, 266, 0, 0, 3, 0, 0, 15, 10, 0.02312384735423464, ["lea     rax, [i+1]", "cmp     rax, [rsp+0E8h+argsize]", "jnb     loc_3B4A"], ["lea~rax,[i+0]", "cmp~rax,[rsp+0]", "jnb~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 17, 12, 0.0, ["mov     len_0, [rsp+0E8h+buffer]", "mov     byte ptr [rax+r14+1], 27h ; '''"], ["mov~len_0,[rsp+0]", "mov~[yte ptr [rax+0],0"]], [0, 0, 266, 2, 0, 5, 0, 1, 18, 7, 0.013519648177046388, ["mov     bytes, [rsp+0E8h+arg]", "lea     rdx, [rax+rbx+1]", "add     rax, bytes", "add     rbx, rax", "jmp     loc_38DE"], ["mov~bytes,[rsp+0]", "lea~rdx,[rax+0]", "add~rax,bytes", "add~rbx,rax", "jmp~FOO"]], [1, 0, 266, 0, 0, 4, 1, 1, 10, 5, 0.013845935593701234, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 0000000000003686 case 32", "setz    bl", "and     bl, [rsp+0E8h+elide_outer_quotes]", "jz      loc_3529"], ["cmp~[rsp+0],0", "setz~bl", "and~bl,[rsp+0]", "jz~FOO"]], [3, 0, 266, 0, 0, 4, 0, 1, 14, 9, 0.0034614838984253085, ["mov     ebp, 0", "mov     ebx, 0", "mov     [rsp+0E8h+c], 3Fh ; '?'", "jmp     loc_3529"], ["mov~ebp,0", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 13, 8, 0.05553979287842247, ["lea     rax, [i+2]", "cmp     rax, [rsp+0E8h+argsize]", "jnb     loc_3B6D"], ["lea~rax,[i+0]", "cmp~rax,[rsp+0]", "jnb~FOO"]], [3, 0, 266, 1, 0, 5, 1, 0, 19, 11, 0.0, ["mov     r8d, eax", "shr     r8b, 3", "and     r8d, 7", "add     r8d, 30h ; '0'", "mov     [r10+r14+2], r8b"], ["mov~r8d,eax", "shr~r8b,0", "and~r8d,0", "add~r8d,0", "mov~[r10+0],r8b"]], [0, 0, 266, 0, 0, 3, 0, 0, 18, 11, 0.06000851184565186, ["lea     r8, [r14+2]", "cmp     r15, len_0", "jbe     short loc_3AEC"], ["lea~r8,[r14+0]", "cmp~r15,len_0", "jbe~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 11, 4, 0.0009363030217052064, ["mov     len_0, buffersize_0", "jmp     force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [1, 0, 266, 0, 0, 4, 2, 1, 16, 10, 0.030827067669172932, ["mov     edx, ebx", "xor     edx, 1", "and     dl, r9b", "jz      loc_3B27"], ["mov~edx,ebx", "xor~edx,0", "and~dl,r9b", "jz~FOO"]], [2, 0, 266, 1, 0, 3, 0, 1, 17, 11, 0.014895729890764646, ["add     r14, 2", "mov     [rsp+0E8h+pending_shell_escape_end], 0", "jmp     loc_35E3"], ["add~r14,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 6, 0.04257341466874734, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 0000000000003686 case 39", "jz      short loc_3710"], ["cmp~[rsp+0],0", "jz~FOO"]], [3, 0, 266, 2, 0, 6, 1, 0, 19, 10, 0.06083132359199886, ["add     r14, 3", "and     eax, 7", "add     eax, 30h ; '0'", "lea     r8, [i+1]", "cmp     ilim, r8", "jbe     short loc_3B17"], ["add~r14,0", "and~eax,0", "add~eax,0", "lea~r8,[i+0]", "cmp~ilim,r8", "jbe~FOO"]], [2, 0, 266, 0, 0, 5, 0, 1, 4, 9, 0.003702652858561498, ["mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_5B13; \"'\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 0", "jmp     loc_2F8E"], ["mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 10, 7, 0.003295975788527923, ["mov     eax, 74h ; 't'; jumptable 0000000000003686 case 9"], ["mov~eax,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    _abort; jumptable 0000000000002F5F default case"], ["call~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 1, 11, 0.1265002127961413, ["mov     eax, [rsp+0E8h+quoting_style]", "cmp     eax, 0Ah; switch 11 cases", "ja      loc_3103; jumptable 0000000000002F5F default case"], ["mov~eax,[rsp+0]", "cmp~eax,0", "ja~FOO"]], [0, 0, 266, 0, 0, 3, 0, 1, 20, 9, 0.007050645481628599, ["mov     ebx, esi", "mov     i, r8", "jmp     loc_3A4A"], ["mov~ebx,esi", "mov~i,r8", "jmp~FOO"]], [3, 0, 266, 1, 0, 8, 0, 1, 16, 9, 0.018357213789189954, ["mov     rax, [rsp+0E8h+arg]", "movzx   eax, byte ptr [rax+i+1]", "mov     byte ptr [rsp+0E8h+ps], al", "sub     eax, 30h ; '0'", "movzx   ebp, [rsp+0E8h+elide_outer_quotes]", "mov     [rsp+0E8h+c], 30h ; '0'", "cmp     al, 9", "ja      loc_3529"], ["mov~rax,[rsp+0]", "movzx~eax,[yte ptr [rax+0]", "mov~[yte ptr [rsp+0],al", "sub~eax,0", "movzx~ebp,[rsp+0]", "mov~[rsp+0],0", "cmp~al,0", "ja~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 7, 0.003295975788527923, ["mov     eax, 6Eh ; 'n'; jumptable 0000000000003686 case 10", "jmp     short c_and_shell_escape"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 266, 0, 0, 4, 0, 1, 11, 9, 0.0034898567172648603, ["mov     [rsp+0E8h+encountered_single_quote], bpl", "mov     ebx, 0", "mov     [rsp+0E8h+c], 27h ; '''", "jmp     loc_3529"], ["mov~[rsp+0],bpl", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 18, 3, 0.00035466023549439636, ["mov     len_0, buffersize_0", "jmp     loc_3D02"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 11, 5, 0.03614697120158888, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jnz     loc_3CDB"], ["cmp~[rsp+0],0", "jnz~FOO"]], [3, 0, 266, 0, 0, 4, 0, 1, 3, 9, 0.008621790324868775, ["mov     [rsp+0E8h+elide_outer_quotes], 0; jumptable 0000000000002F5F case 7", "mov     [rsp+0E8h+backslash_escapes], 1", "mov     r14d, 0", "jmp     loc_2F8E"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r14d,0", "jmp~FOO"]], [1, 0, 266, 1, 2, 10, 2, 3, 16, 10, 0.02850049652432969, ["mov     edi, [rsp+0E8h+w]; wc", "call    _iswprint", "test    eax, eax", "mov     eax, 0", "cmovz   ebp, eax", "add     m, bytes", "mov     rdi, [rsp+0E8h+ps]; ps", "call    _mbsinit", "test    eax, eax", "jnz     short loc_398F"], ["mov~edi,[rsp+0]", "call~FOO", "test~eax,eax", "mov~eax,0", "cmovz~ebp,eax", "add~m,bytes", "mov~rdi,[rsp+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 17, 8, 0.016711590296495955, ["cmp     bytes, 1", "jbe     short loc_38FB"], ["cmp~bytes,0", "jbe~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 18, 10, 0.014072918144417646, ["lea     rax, [rdx+2]", "cmp     buffersize_0, len_0", "jbe     short loc_3330"], ["lea~rax,[rdx+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 12, 9, 0.02601314607272899, ["mov     ebp, edi", "mov     ebx, edi"], ["mov~ebp,edi", "mov~ebx,edi"]], [0, 0, 266, 0, 0, 2, 0, 1, 17, 9, 0.014640374521208682, ["mov     i, r8", "jmp     loc_3A4A"], ["mov~i,r8", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 19, 10, 0.0, ["mov     len_0, [rsp+0E8h+buffer]", "mov     byte ptr [rax+rdx+2], 30h ; '0'"], ["mov~len_0,[rsp+0]", "mov~[yte ptr [rax+0],0"]], [0, 0, 266, 0, 0, 3, 0, 0, 14, 10, 0.035905802241452685, ["lea     rdx, [r14+2]", "cmp     len_0, rax", "jnb     short loc_3741"], ["lea~rdx,[r14+0]", "cmp~len_0,rax", "jnb~FOO"]], [1, 0, 266, 0, 0, 5, 0, 1, 15, 11, 0.005575258901971911, ["mov     len_0, [rsp+0E8h+buffer]", "mov     byte ptr [rax+r14+1], 5Ch ; '\\'", "mov     rax, buffersize_0", "mov     buffersize_0, [rsp+0E8h+orig_buffersize]", "jmp     short loc_372D"], ["mov~len_0,[rsp+0]", "mov~[yte ptr [rax+0],0", "mov~rax,buffersize_0", "mov~buffersize_0,[rsp+0]", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 1, 15, 11, 0.005575258901971911, ["mov     len_0, buffersize_0", "mov     buffersize_0, [rsp+0E8h+orig_buffersize]", "jmp     short loc_372D"], ["mov~len_0,buffersize_0", "mov~buffersize_0,[rsp+0]", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 12, 4, 0.00017023691303731024, ["mov     len_0, buffersize_0", "jmp     short force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 9, 0.004184990778833877, ["mov     ebx, 0; jumptable 0000000000003686 cases 37,43-58,65-90,93,95,97-122", "jmp     loc_3529"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 15, 10, 0.0, ["mov     rdi, [rsp+0E8h+buffer]", "mov     byte ptr [rdi+r14+2], 27h ; '''"], ["mov~rdi,[rsp+0]", "mov~[yte ptr [rdi+0],0"]], [3, 0, 266, 0, 0, 7, 2, 1, 11, 8, 0.3504882489241972, ["movzx   eax, [rsp+0E8h+backslash_escapes]", "xor     eax, 1", "cmp     [rsp+0E8h+quoting_style], 2", "setz    dl", "or      eax, edx", "cmp     al, 1", "jnz     short loc_3546"], ["movzx~eax,[rsp+0]", "xor~eax,0", "cmp~[rsp+0],0", "setz~dl", "or~eax,edx", "cmp~al,0", "jnz~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 19, 9, 0.014895729890764646, ["lea     r14, [rdx+3]", "movzx   ebp, [rsp+0E8h+elide_outer_quotes]", "mov     [rsp+0E8h+c], 30h ; '0'", "jmp     loc_3529"], ["lea~r14,[rdx+0]", "movzx~ebp,[rsp+0]", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 12, 9, 0.0008263583487019434, ["movzx   ebx, [rsp+0E8h+backslash_escapes]", "mov     ebp, ebx", "mov     [rsp+0E8h+c], 0", "jmp     loc_3529"], ["movzx~ebx,[rsp+0]", "mov~ebp,ebx", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 266, 0, 0, 4, 0, 1, 12, 9, 0.005107107391119308, ["mov     ebp, 0", "mov     ebx, 0", "mov     [rsp+0E8h+c], 3Fh ; '?'", "jmp     loc_3529"], ["mov~ebp,0", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 12, 9, 0.005305717122996169, ["mov     ebp, eax", "mov     ebx, eax", "mov     [rsp+0E8h+c], 3Fh ; '?'", "jmp     loc_3529"], ["mov~ebp,eax", "mov~ebx,eax", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 266, 0, 0, 4, 0, 1, 15, 9, 0.0034898567172648603, ["mov     ebp, 0", "mov     ebx, 0", "mov     [rsp+0E8h+c], 3Fh ; '?'", "jmp     loc_3529"], ["mov~ebp,0", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 266, 1, 0, 9, 0, 1, 15, 9, 0.03672861398779969, ["add     r14, 3", "movzx   esi, [rsp+0E8h+elide_outer_quotes]", "mov     ebx, esi", "mov     [rsp+0E8h+encountered_single_quote], bpl", "mov     [rsp+0E8h+pending_shell_escape_end], sil", "mov     [rsp+0E8h+orig_buffersize], r15", "mov     r15, rax", "mov     [rsp+0E8h+c], 27h ; '''", "jmp     loc_3529"], ["add~r14,0", "movzx~esi,[rsp+0]", "mov~ebx,esi", "mov~[rsp+0],bpl", "mov~[rsp+0],sil", "mov~[rsp+0],r15", "mov~r15,rax", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 15, 9, 0.04254504184990779, ["mov     ebp, ebx", "movzx   ebx, [rsp+0E8h+backslash_escapes]", "mov     [rsp+0E8h+c], 30h ; '0'", "jmp     loc_3529"], ["mov~ebp,ebx", "movzx~ebx,[rsp+0]", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 16, 9, 0.0018300468151510852, ["movzx   ebp, [rsp+0E8h+elide_outer_quotes]", "mov     [rsp+0E8h+c], 30h ; '0'", "jmp     loc_3529"], ["movzx~ebp,[rsp+0]", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 266, 0, 0, 4, 0, 1, 13, 9, 0.003433111079585757, ["mov     ebp, 0", "mov     ebx, 0", "mov     [rsp+0E8h+c], 3Fh ; '?'", "jmp     loc_3529"], ["mov~ebp,0", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 266, 0, 0, 4, 0, 1, 16, 9, 0.007050645481628599, ["mov     ebp, 0; jumptable 00000000000033F8 default case", "mov     ebx, 0", "mov     [rsp+0E8h+c], 3Fh ; '?'", "jmp     loc_3529"], ["mov~ebp,0", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 266, 0, 0, 3, 0, 1, 12, 9, 0.010767484749609873, ["mov     ebp, 0", "mov     ebx, 0", "jmp     loc_3529"], ["mov~ebp,0", "mov~ebx,0", "jmp~FOO"]], [10, 0, 266, 1, 1, 37, 2, 1, 0, 12, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 0B8h", "mov     [rsp+0E8h+buffer], buffer_0", "mov     r14, buffersize_0", "mov     [rsp+0E8h+arg], arg_0", "mov     [rsp+0E8h+argsize], argsize_0", "mov     [rsp+0E8h+quoting_style], r8d", "mov     ebx, r9d", "mov     [rsp+0E8h+flags], r9d", "mov     rax, [rsp+0E8h+quote_these_too]", "mov     [rsp+0E8h+var_A8], rax", "mov     rax, [rsp+0E8h+left_quote]", "mov     [rsp+0E8h+quote_string_1], rax", "mov     rax, [rsp+0E8h+right_quote]", "mov     [rsp+0E8h+quote_string_0], rax", "mov     rax, fs:28h", "mov     [rsp+0E8h+var_40], rax", "xor     eax, eax", "call    ___ctype_get_mb_cur_max", "mov     [rsp+0E8h+var_80], rax", "mov     eax, ebx", "shr     eax, 1", "and     eax, 1", "mov     [rsp+0E8h+elide_outer_quotes], al", "mov     [rsp+0E8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0E8h+encountered_single_quote], 0", "mov     [rsp+0E8h+pending_shell_escape_end], 0", "mov     [rsp+0E8h+backslash_escapes], 0", "mov     [rsp+0E8h+quote_string_len], 0", "mov     [rsp+0E8h+quote_string], 0", "mov     [rsp+0E8h+orig_buffersize], 0", "mov     r15, buffersize_0"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~[rsp+0],buffer_0", "mov~r14,buffersize_0", "mov~[rsp+0],arg_0", "mov~[rsp+0],argsize_0", "mov~[rsp+0],r8d", "mov~ebx,r9d", "mov~[rsp+0],r9d", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~[rsp+0],rax", "mov~eax,ebx", "shr~eax,0", "and~eax,0", "mov~[rsp+0],al", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r15,buffersize_0"]], [2, 0, 266, 0, 0, 7, 0, 1, 4, 9, 0.003702652858561498, ["movzx   eax, [rsp+0E8h+elide_outer_quotes]", "mov     [rsp+0E8h+backslash_escapes], al", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_5B15; \"\\\"\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 0", "jmp     loc_2F8E"], ["movzx~eax,[rsp+0]", "mov~[rsp+0],al", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 3, 10, 0.013306852035749751, ["cmp     [rsp+0E8h+elide_outer_quotes], 0; jumptable 0000000000002F5F case 5", "jnz     loc_311D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 12, 7, 0.16817397266751802, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jz      short loc_3567"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 13, 9, 0.019591431408710454, ["mov     rdi, m", "mov     r14, [rsp+0E8h+len]", "mov     m, [rsp+0E8h+buffersize]"], ["mov~rdi,m", "mov~r14,[rsp+0]", "mov~m,[rsp+0]"]], [0, 0, 6, 0, 0, 2, 0, 1, 14, 4, 0.0058909065115619235, ["mov     len_0, buffersize_0", "jmp     force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 13, 5, 0.06049912517141912, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jnz     loc_3D6F"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 266, 0, 0, 3, 1, 1, 12, 7, 0.17940606232562517, ["mov     rcx, [rsp+0E8h+var_A8]", "test    rcx, rcx", "jz      short loc_3567"], ["mov~rcx,[rsp+0]", "test~rcx,rcx", "jz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 11, 1, 0.007462051354802099, ["mov     rax, r15", "mov     rcx, [rsp+0E8h+var_40]", "xor     rcx, fs:28h", "jnz     short loc_3DB9"], ["mov~rax,r15", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [2, 1, 3, 2, 1, 14, 0, 2, 11, 2, 6.383884238899135e-05, ["sub     rsp, 8", "push    [rsp+0F0h+quote_string_0]; right_quote", "push    [rsp+0F8h+quote_string_1]; left_quote", "push    [rsp+100h+var_A8]; quote_these_too", "mov     r9d, [rsp+108h+flags]; flags", "mov     r8d, 5; quoting_style", "mov     rcx, [rsp+108h+argsize]; argsize", "mov     rdx, [rsp+108h+arg]; arg", "mov     rsi, [rsp+108h+orig_buffersize]; buffersize", "mov     rdi, [rsp+108h+buffer]; buffer", "call    quotearg_buffer_restyled", "mov     buffersize_0, rax", "add     rsp, 20h", "jmp     loc_3D3F"], ["sub~rsp,0", "push~[rsp+0]", "push~[rsp+0]", "push~[rsp+0]", "mov~r9d,[rsp+0]", "mov~r8d,0", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,[rsp+0]", "call~FOO", "mov~buffersize_0,rax", "add~rsp,<STR>", "jmp~FOO"]], [3, 1, 3, 2, 1, 14, 1, 1, 11, 2, 0.00776705915732728, ["sub     rsp, 8", "push    [rsp+0F0h+quote_string_0]; right_quote", "push    [rsp+0F8h+quote_string_1]; left_quote", "push    0; quote_these_too", "mov     r9d, [rsp+108h+flags]", "and     r9d, 0FFFFFFFDh; flags", "mov     r8d, [rsp+108h+quoting_style]; quoting_style", "mov     rcx, [rsp+108h+argsize]; argsize", "mov     rdx, [rsp+108h+arg]; arg", "mov     rsi, buffersize_0; buffersize", "mov     rdi, [rsp+108h+buffer]; buffer", "call    quotearg_buffer_restyled", "mov     r15, rax", "add     rsp, 20h"], ["sub~rsp,0", "push~[rsp+0]", "push~[rsp+0]", "push~0", "mov~r9d,[rsp+0]", "and~r9d,0", "mov~r8d,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,buffersize_0", "mov~rdi,[rsp+0]", "call~FOO", "mov~r15,rax", "add~rsp,<STR>"]], [1, 0, 266, 0, 0, 1, 0, 0, 3, 10, 0.0, ["mov     [rsp+0E8h+backslash_escapes], 1; jumptable 0000000000002F5F case 3"], ["mov~[rsp+0],0"]], [1, 0, 266, 0, 0, 8, 0, 0, 13, 6, 0.008033054333948074, ["movzx   edi, [rsp+0E8h+c]", "mov     eax, edi", "shr     al, 5", "movzx   eax, al", "mov     eax, [rcx+rax*4]", "mov     ecx, edi", "bt      eax, ecx", "jb      short store_escape"], ["movzx~edi,[rsp+0]", "mov~eax,edi", "shr~al,0", "movzx~eax,al", "mov~eax,<TAG>", "mov~ecx,edi", "bt~eax,ecx", "jb~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 10, 6, 0.0813164987941552, ["mov     eax, [rsp+0E8h+quoting_style]; jumptable 0000000000003686 case 63", "cmp     eax, 2", "jz      short loc_3381"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 1, 1, 12, 9, 0.061909490707901825, ["test    byte ptr [rsp+0E8h+flags], 4", "jz      loc_3B59"], ["test~[yte ptr [rsp+0],0", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 15, 4, 0.00489431124982267, ["mov     len_0, r15", "jmp     force_outer_quoting_style"], ["mov~len_0,r15", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 11, 10, 0.06995318484891473, ["cmp     eax, 5", "jz      short loc_339C"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 14, 13, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax+len_0], 27h ; '''"], ["mov~rax,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 6, 0, 0, 2, 0, 1, 12, 4, 0.00017023691303731024, ["mov     len_0, buffersize_0", "jmp     short force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 1, 1, 11, 5, 0.008426727195346857, ["movzx   eax, [rsp+0E8h+elide_outer_quotes]", "test    al, al", "jnz     loc_3CD1"], ["movzx~eax,[rsp+0]", "test~al,al", "jnz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 15, 16, 0.019790041140587317, ["cmp     buffersize_0, len_0", "jbe     short loc_35A0"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [2, 0, 266, 0, 0, 6, 2, 1, 14, 13, 0.051657445500543804, ["cmp     [rsp+0E8h+quoting_style], 2", "setz    al", "movzx   edx, [rsp+0E8h+pending_shell_escape_end]", "xor     edx, 1", "and     al, dl", "jz      short loc_35D0"], ["cmp~[rsp+0],0", "setz~al", "movzx~edx,[rsp+0]", "xor~edx,0", "and~al,dl", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 9, 4, 0.00292594694282877, ["mov     len_0, buffersize_0", "jmp     force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 8, 5, 0.00621010072350688, ["test    [rsp+0E8h+elide_outer_quotes], al", "jnz     loc_3D77"], ["test~[rsp+0],al", "jnz~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 14, 12, 0.014087104553837423, ["lea     rax, [len_0+1]", "cmp     buffersize_0, len_0", "jbe     short loc_3795"], ["lea~rax,[len_0+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 10, 3, 0.014321180309263725, ["mov     edi, [rsp+0E8h+quoting_style]", "cmp     edi, 2", "jnz     short loc_3D02"], ["mov~edi,[rsp+0]", "cmp~edi,0", "jnz~FOO"]], [2, 0, 4, 0, 0, 4, 0, 0, 11, 3, 0.0, ["cmp     [rsp+0E8h+backslash_escapes], 0", "mov     eax, 4", "cmovz   eax, edi", "mov     [rsp+0E8h+quoting_style], eax"], ["cmp~[rsp+0],0", "mov~eax,0", "cmovz~eax,edi", "mov~[rsp+0],eax"]], [4, 0, 266, 0, 0, 6, 0, 0, 3, 9, 0.012367002411689601, ["mov     [rsp+0E8h+elide_outer_quotes], 1; jumptable 0000000000002F5F case 1", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_5B13; \"'\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 0", "mov     [rsp+0E8h+quoting_style], 2"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "mov~[rsp+0],0"]], [3, 0, 266, 0, 0, 6, 0, 1, 4, 9, 0.003688466449141722, ["mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_5B13; \"'\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 0", "mov     [rsp+0E8h+quoting_style], 2", "jmp     loc_2F8E"], ["mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 15, 6, 0.0427152787629451, ["movzx   ecx, byte ptr [rsi+rax]", "lea     edx, [rcx-21h]", "cmp     dl, 1Dh; switch 30 cases", "ja      loc_3B81; jumptable 00000000000033F8 default case"], ["movzx~ecx,<TAG>", "lea~edx,[rcx-21h]+0]", "cmp~dl,0", "ja~FOO"]], [0, 0, 266, 1, 0, 5, 0, 1, 16, 5, 0.03627464888636686, ["movzx   edx, dl", "lea     rsi, off_5BAC", "movsxd  rdx, dword ptr [rsi+rdx*4]", "add     rdx, rsi", "jmp     rdx; switch jump"], ["movzx~edx,dl", "lea~rsi,<TAG>", "movsxd~rdx,<TAG>", "add~rdx,rsi", "jmp~rdx"]], [2, 0, 266, 0, 0, 3, 0, 1, 3, 9, 0.008621790324868775, ["mov     [rsp+0E8h+elide_outer_quotes], 0; jumptable 0000000000002F5F case 0", "mov     r14d, 0", "jmp     short loc_2F8E"], ["mov~[rsp+0],0", "mov~r14d,0", "jmp~FOO"]], [4, 0, 266, 0, 0, 8, 0, 1, 5, 9, 0.0018655128387005248, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax], 22h ; '\"'", "mov     [rsp+0E8h+backslash_escapes], 1", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_5B15; \"\\\"\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 1", "jmp     short loc_2F8E"], ["mov~rax,[rsp+0]", "mov~<TAG>,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "jmp~FOO"]], [4, 0, 266, 0, 0, 7, 0, 1, 5, 9, 0.0037239324726911615, ["mov     [rsp+0E8h+elide_outer_quotes], 0", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_5B13; \"'\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 1", "mov     [rsp+0E8h+quoting_style], 2", "jmp     loc_2F8E"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 16, 16, 0.0, ["mov     rcx, [rsp+0E8h+buffer]", "mov     byte ptr [rcx+len_0], 27h ; '''"], ["mov~rcx,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 266, 0, 0, 4, 0, 1, 17, 9, 0.02686905944105547, ["mov     rdi, m", "mov     r14, [rsp+0E8h+len]", "mov     m, [rsp+0E8h+buffersize]", "jmp     short loc_39E9"], ["mov~rdi,m", "mov~r14,[rsp+0]", "mov~m,[rsp+0]", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 12, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 266, 0, 0, 5, 0, 1, 14, 9, 0.0034331110795857572, ["mov     rdi, m", "mov     r14, [rsp+0E8h+len]", "mov     m, [rsp+0E8h+buffersize]", "mov     ebp, 0", "jmp     short loc_39E9"], ["mov~rdi,m", "mov~r14,[rsp+0]", "mov~m,[rsp+0]", "mov~ebp,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 14, 7, 0.04914172223010356, ["mov     rsi, [rsp+0E8h+arg]", "cmp     byte ptr [rsi+i+1], 3Fh ; '?'", "jz      short loc_33D7"], ["mov~rsi,[rsp+0]", "cmp~[yte ptr [rsi+0],0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 18, 14, 0.0, ["mov     rcx, [rsp+0E8h+buffer]", "mov     byte ptr [rcx+r14+2], 27h ; '''"], ["mov~rcx,[rsp+0]", "mov~[yte ptr [rcx+0],0"]], [1, 0, 266, 0, 0, 2, 0, 1, 16, 9, 0.007036459072208823, ["mov     ebp, 0", "jmp     short loc_39E9"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 17, 9, 0.003674280039721946, ["mov     ebp, 0", "jmp     short loc_39E9"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 266, 1, 0, 2, 0, 0, 18, 13, 0.022258476379628314, ["add     r14, 3", "mov     [rsp+0E8h+pending_shell_escape_end], al"], ["add~r14,0", "mov~[rsp+0],al"]], [0, 0, 266, 0, 0, 1, 0, 1, 15, 9, 0.05528443750886649, ["jmp     loc_37C5"], ["jmp~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 8, 8, 0.026372535111363313, ["mov     rax, [rsp+0E8h+quote_string_len]", "lea     rdx, [i+rax+0]", "cmp     [rsp+0E8h+argsize], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_31F7"], ["mov~rax,[rsp+0]", "lea~rdx,[i+0]", "cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 15, 12, 0.0549486924859318, ["cmp     buffersize_0, len_0", "jbe     short loc_35DF"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 19, 9, 0.007419492126542772, ["mov     rdi, m", "mov     ebp, 0", "jmp     short loc_39E9"], ["mov~rdi,m", "mov~ebp,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 9, 8, 0.003333806213647326, ["cmp     rax, 1", "jbe     short loc_31F7"], ["cmp~rax,0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 16, 12, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax+len_0], 5Ch ; '\\'"], ["mov~rax,[rsp+0]", "mov~<TAG>,0"]], [1, 0, 266, 0, 0, 4, 1, 1, 7, 5, 0.16603418924670166, ["cmp     [rsp+0E8h+quoting_style], 2", "setz    al", "test    len_0, len_0", "jnz     short loc_3BF0"], ["cmp~[rsp+0],0", "setz~al", "test~len_0,len_0", "jnz~FOO"]], [1, 0, 266, 1, 0, 1, 0, 0, 16, 11, 0.0557715042322788, ["add     len_0, 1"], ["add~len_0,0"]], [1, 0, 0, 1, 0, 8, 0, 0, 12, -1, 0.0, ["add     rsp, 0B8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     i", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~i", "pop~r14", "pop~r15", "retn"]], [2, 0, 266, 0, 0, 7, 0, 0, 10, 8, 0.0, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, [rsp+0E8h+arg]", "repne scasb", "not     rcx", "lea     rax, [rcx-1]", "mov     [rsp+0E8h+argsize], rax"], ["mov~rcx,0", "mov~eax,0", "mov~rdi,[rsp+0]", "scasb~<TAG>,", "not~rcx", "lea~rax,[rcx-1]+0]", "mov~[rsp+0],rax"]]], "func_feature": [12, 58, 180, 4, 267, 417, 7, 919, 0.04717, 8, 40], "succs": [[9], [0, 9], [39], [2, 123], [40, 13], [40, 4], [14], [8, 6], [6], [20], [71], [257, 10], [10, 202], [36, 223], [30], [204, 14], [24, 38], [16, 187], [220], [193, 18], [141, 175], [1, 20], [110, 126], [131, 22], [38], [57, 34], [25, 50], [94, 95], [104, 27], [27], [98, 99], [30], [68, 69], [32, 113], [43, 92], [182], [40, 35], [51], [51, 37], [146, 222], [41, 39], [42, 39], [153, 39], [239], [52], [52, 44], [31], [96, 46], [46], [46, 63], [92], [56, 60], [53, 87], [87], [31], [129, 54, 225, 73, 241, 245, 118, 216, 189], [60], [92], [89], [33, 67, 132, 200, 169, 75, 177, 227, 180, 150, 119, 23, 185, 58, 91, 61, 158], [64, 81], [120, 169], [61, 213], [48, 90], [81], [74], [65, 74], [19], [79], [68], [28, 229], [21, 70], [49], [72, 49], [71], [80, 15], [190, 135], [76, 125], [251, 77], [218, 78], [154, 102], [202], [256, 253], [82, 84], [82], [31], [85, 246], [66], [19, 111], [88, 19], [96], [19], [33, 59], [258, 92], [173, 151], [94], [97, 47], [47], [93, 263], [98], [29], [100, 29], [108, 149], [114], [114, 103], [238, 231], [105, 107], [105, 196], [112, 121], [139], [109, 126], [239], [121], [12], [115, 101], [101], [192], [192, 116], [122, 242], [19], [202], [134, 127], [128], [3, 124], [3], [130, 254], [19], [134], [247, 159], [128, 179], [133, 255], [160, 137], [136, 62], [143], [145, 138], [190, 191], [62], [139], [145], [147, 7], [139, 220], [139], [139], [144, 260], [155, 143], [149], [222], [148, 7], [164, 156], [152, 157], [19], [173], [157], [123], [239], [11], [164], [209, 166], [169], [31], [239], [162, 190], [161, 163], [161, 165], [176, 167], [239], [184, 210], [176], [162], [202, 174], [202], [170, 252], [178], [178, 172], [239], [194, 45], [7], [186, 188], [142, 183], [31], [89], [], [181, 55], [66], [202, 117], [89], [202], [224], [106, 199], [31], [249, 79], [168, 190], [195, 203], [202], [66], [203], [208, 201], [196], [196], [239], [202], [208], [217, 221], [202], [202], [202], [202], [202], [202], [202], [202], [202], [202], [202], [182], [31], [86, 215], [140, 221], [11], [239], [219, 235], [226, 140], [265, 250], [222], [222], [241], [220, 140], [233, 230], [211, 171], [239], [228, 205], [238], [239], [232, 206], [248, 83], [234, 259], [239], [236, 5], [197, 198], [224, 240], [224], [31], [31], [244, 212], [17, 212], [31], [31], [31], [83], [11], [], [11], [243, 207], [256], [11], [11], [259], [12], [26, 261], [264, 262], [11], [266, 26], [264], [5, 237], [7], [], [26]], "fname": "quotearg_buffer_restyled", "n_num": 267}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[1, 0, 8, 1, 0, 6, 0, 1, 0, 0, 0.08974358974358974, ["lea     r13d, [n+1]", "movsxd  rsi, r13d", "shl     rsi, 4; n", "lea     e_0, slotvec0", "cmp     sv, rax", "jz      loc_3F31"], ["lea~r13d,[n+0]", "movsxd~rsi,r13d", "shl~rsi,0", "lea~e_0,<TAG>", "cmp~sv,rax", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 2, 2, 0.0641025641025641, ["cmp     ebx, 7FFFFFFFh", "jz      loc_3F2C"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 0, 1, 0, 11, 0, 0, 3, -1, 0.0, ["mov     eax, [rsp+58h+e]", "mov     [r14], eax", "mov     rax, val", "add     rsp, 28h", "pop     rbx", "pop     options", "pop     val", "pop     size", "pop     r14", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~<TAG>,eax", "mov~rax,val", "add~rsp,0", "pop~rbx", "pop~options", "pop~val", "pop~size", "pop~r14", "pop~r15", "retn"]], [3, 1, 4, 4, 1, 23, 1, 2, 2, -1, 0.1794871794871795, ["movsxd  n, ebx", "shl     n, 4", "add     rbx, sv", "mov     r13, [rbx]", "mov     sv, [rbx+8]", "mov     eax, [options+4]", "or      eax, 1", "mov     [rsp+58h+flags], eax", "lea     r15, [options+8]", "sub     rsp, 8", "push    qword ptr [options+30h]; right_quote", "push    qword ptr [options+28h]; left_quote", "push    r15; quote_these_too", "mov     r9d, eax; flags", "mov     r8d, [options+0]; quoting_style", "mov     rcx, [rsp+78h+argsize]; argsize", "mov     rdx, [rsp+78h+arg]; arg", "mov     rsi, size; buffersize", "mov     rdi, val; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h", "cmp     size, qsize", "ja      short loc_3F0E"], ["movsxd~n,ebx", "shl~n,0", "add~rbx,sv", "mov~r13,<TAG>", "mov~sv,[rbx+0]", "mov~eax,[options+0]", "or~eax,0", "mov~[rsp+0],eax", "lea~r15,[options+0]", "sub~rsp,0", "push~[word ptr [options+0]", "push~[word ptr [options+0]", "push~r15", "mov~r9d,eax", "mov~r8d,[options+0]", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,size", "mov~rdi,val", "call~FOO", "add~rsp,<STR>", "cmp~size,qsize", "ja~FOO"]], [1, 1, 1, 2, 2, 16, 0, 2, 4, -1, 0.01282051282051282, ["mov     rdi, size; n", "call    xmalloc", "mov     val, rax", "mov     [rbx+8], rax", "sub     rsp, 8", "push    qword ptr [options+30h]; right_quote", "push    qword ptr [options+28h]; left_quote", "push    r15; quote_these_too", "mov     r9d, [rsp+78h+flags]; flags", "mov     r8d, [options+0]; quoting_style", "mov     rcx, [rsp+78h+argsize]; argsize", "mov     rdx, [rsp+78h+arg]; arg", "mov     rsi, size; buffersize", "mov     rdi, rax; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,size", "call~FOO", "mov~val,rax", "mov~[rbx+0],rax", "sub~rsp,0", "push~[word ptr [options+0]", "push~[word ptr [options+0]", "push~r15", "mov~r9d,[rsp+0]", "mov~r8d,[options+0]", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,size", "mov~rdi,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 11, 0, 0, 2, 0, 1, 1, 3, 0.07051282051282051, ["cmp     cs:nslots, ebx", "jg      short loc_3E66"], ["cmp~<TAG>,ebx", "jg~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.10256410256410256, ["lea     size, [qsize+1]", "mov     [rbx], size", "lea     qsize, slot0", "cmp     val, rax", "jz      short loc_3ED1"], ["lea~size,[qsize+0]", "mov~<TAG>,size", "lea~qsize,<TAG>", "cmp~val,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 2, 0, 1, 2, 0, 1, 4, -1, 0.0, ["mov     rdi, val; ptr", "call    _free"], ["mov~rdi,val", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 13, 1, 1, 18, 1, 2, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 28h", "mov     ebx, edi", "mov     [rsp+58h+arg], arg_0", "mov     [rsp+58h+argsize], argsize_0", "mov     rbp, options", "call    ___errno_location", "mov     r14, rax", "mov     eax, [rax]", "mov     [rsp+58h+e], eax", "mov     r12, cs:slotvec_0", "test    ebx, ebx", "js      loc_3F27"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~ebx,edi", "mov~[rsp+0],arg_0", "mov~[rsp+0],argsize_0", "mov~rbp,options", "call~FOO", "mov~r14,rax", "mov~eax,<TAG>", "mov~[rsp+0],eax", "mov~r12,<TAG>", "test~ebx,ebx", "js~FOO"]], [0, 0, 6, 0, 1, 4, 0, 1, 4, -1, 0.04487179487179487, ["mov     rdi, sv; p", "call    xrealloc", "mov     sv, rax", "mov     cs:slotvec_0, sv"], ["mov~rdi,sv", "call~FOO", "mov~sv,rax", "mov~<TAG>,sv"]], [3, 0, 5, 4, 1, 11, 0, 1, 5, -1, 0.1282051282051282, ["mov     edi, cs:nslots", "mov     edx, r13d", "sub     edx, edi", "movsxd  rdx, edx", "shl     rdx, 4; n", "movsxd  rdi, edi", "shl     rdi, 4", "add     rdi, sv; s", "mov     esi, 0; c", "call    _memset", "mov     cs:nslots, r13d"], ["mov~edi,<TAG>", "mov~edx,r13d", "sub~edx,edi", "movsxd~rdx,edx", "shl~rdx,0", "movsxd~rdi,edi", "shl~rdi,0", "add~rdi,sv", "mov~esi,0", "call~FOO", "mov~<TAG>,r13d"]], [1, 0, 6, 0, 1, 9, 0, 2, 4, 0, 0.04487179487179487, ["mov     edi, 0; p", "call    xrealloc", "mov     sv, rax", "mov     cs:slotvec_0, sv", "mov     sv, cs:slotvec0.size", "mov     rdx, cs:slotvec0.val", "mov     [sv], rax", "mov     [sv+8], rdx", "jmp     loc_3E39"], ["mov~edi,0", "call~FOO", "mov~sv,rax", "mov~<TAG>,sv", "mov~sv,<TAG>", "mov~rdx,<TAG>", "mov~<TAG>,rax", "mov~[sv+0],rdx", "jmp~FOO"]]], "func_feature": [10, 2, 17, 0, 14, 17, 8, 111, 0.05266, 5, 13], "succs": [[11, 13], [0, 7], [], [2, 6], [2], [1, 3], [8, 4], [], [4], [], [9, 5], [12], [3], [12]], "fname": "quotearg_n_options", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[1, 0, 0, 0, 2, 18, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, o", "call    ___errno_location", "mov     rbp, p", "mov     r12d, [p]", "test    o, o", "lea     p, default_quoting_options", "cmovz   o, p", "mov     esi, 38h ; '8'; s", "mov     rdi, rbx; p", "call    xmemdup", "mov     [rbp+0], r12d", "pop     rbx", "pop     rbp", "pop     e", "retn"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,o", "call~FOO", "mov~rbp,p", "mov~r12d,<TAG>", "test~o,o", "lea~p,<TAG>", "cmovz~o,p", "mov~esi,0", "mov~rdi,rbx", "call~FOO", "mov~[rbp+0],r12d", "pop~rbx", "pop~rbp", "pop~e", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 18, 0.0, 1, 0], "succs": [[]], "fname": "clone_quoting_options", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["test    o, o", "lea     rax, default_quoting_options", "cmovz   o, rax", "mov     eax, [rdi]", "retn"], ["test~o,o", "lea~rax,<TAG>", "cmovz~o,rax", "mov~eax,<TAG>", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "get_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["test    o, o", "lea     rax, default_quoting_options", "cmovz   o, rax", "mov     [rdi], esi", "retn"], ["test~o,o", "lea~rax,<TAG>", "cmovz~o,rax", "mov~<TAG>,esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[4, 0, 0, 1, 0, 19, 6, 0, 0, 0, 0.0, ["test    p, p", "lea     rax, default_quoting_options", "cmovz   p, rax", "mov     eax, esi", "shr     al, 5", "movzx   eax, al", "lea     p, [p+rax*4+8]", "mov     ecx, esi", "and     ecx, 1Fh", "mov     esi, [p]", "mov     eax, esi", "shr     eax, cl", "xor     edx, eax", "and     edx, 1", "shl     edx, cl", "xor     edx, esi", "mov     [p], edx", "and     eax, 1", "retn"], ["test~p,p", "lea~rax,<TAG>", "cmovz~p,rax", "mov~eax,esi", "shr~al,0", "movzx~eax,al", "lea~p,[p+0]", "mov~ecx,esi", "and~ecx,0", "mov~esi,<TAG>", "mov~eax,esi", "shr~eax,cl", "xor~edx,eax", "and~edx,0", "shl~edx,cl", "xor~edx,esi", "mov~<TAG>,edx", "and~eax,0", "retn"]]], "func_feature": [0, 6, 0, 0, 1, 0, 2, 19, 0.0, 1, 1], "succs": [[]], "fname": "set_char_quoting", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0.0, ["test    o, o", "lea     r, default_quoting_options", "cmovz   o, r", "mov     eax, [o+4]", "mov     [o+4], esi", "retn"], ["test~o,o", "lea~r,<TAG>", "cmovz~o,r", "mov~eax,[o+0]", "mov~[o+0],esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 6, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_flags", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     [o+28h], left_quote", "mov     [o+30h], right_quote", "retn"], ["mov~[o+0],left_quote", "mov~[o+0],right_quote", "retn"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, 1, 0.16666666666666666, ["test    right_quote, right_quote", "jz      short loc_402A"], ["test~right_quote,right_quote", "jz~FOO"]], [1, 0, 3, 0, 0, 6, 2, 1, 0, 1, 0.0, ["test    o, o", "lea     rax, default_quoting_options", "cmovz   o, rax", "mov     dword ptr [o], 0Ah", "test    left_quote, left_quote", "jz      short loc_402A"], ["test~o,o", "lea~rax,<TAG>", "cmovz~o,rax", "mov~<TAG>,0", "test~left_quote,left_quote", "jz~FOO"]], [1, 0, 0, 1, 1, 2, 0, 1, 1, 0, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]]], "func_feature": [1, 3, 3, 0, 4, 4, 1, 13, 0.04167, 1, 1], "succs": [[], [0, 3], [1, 3], []], "fname": "set_custom_quoting", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[2, 1, 0, 3, 2, 39, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     [rsp+48h+buffer], buffer_0", "mov     r13, buffersize", "mov     r14, arg", "mov     r15, argsize", "mov     rbx, o", "test    o, o", "lea     r, default_quoting_options", "cmovz   rbx, r", "call    ___errno_location", "mov     rbp, r", "mov     r12d, [r]", "sub     rsp, 8", "push    qword ptr [p+30h]; right_quote", "push    qword ptr [p+28h]; left_quote", "lea     r, [p+8]", "push    r; quote_these_too", "mov     r9d, [p+4]; flags", "mov     r8d, [p]; quoting_style", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "mov     rsi, buffersize; buffersize", "mov     rdi, [rsp+68h+buffer]; buffer", "call    quotearg_buffer_restyled", "mov     [rbp+0], r12d", "add     rsp, 38h", "pop     p", "pop     rbp", "pop     e", "pop     buffersize", "pop     arg", "pop     argsize", "retn"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~[rsp+0],buffer_0", "mov~r13,buffersize", "mov~r14,arg", "mov~r15,argsize", "mov~rbx,o", "test~o,o", "lea~r,<TAG>", "cmovz~rbx,r", "call~FOO", "mov~rbp,r", "mov~r12d,<TAG>", "sub~rsp,0", "push~[word ptr [p+0]", "push~[word ptr [p+0]", "lea~r,[p+0]", "push~r", "mov~r9d,[p+0]", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~rdx,arg", "mov~rsi,buffersize", "mov~rdi,[rsp+0]", "call~FOO", "mov~[rbp+0],r12d", "add~rsp,0", "pop~p", "pop~rbp", "pop~e", "pop~buffersize", "pop~arg", "pop~argsize", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 39, 0.0, 1, 3], "succs": [[]], "fname": "quotearg_buffer", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[1, 0, 0, 1, 0, 9, 0, 0, 0, 0, 0.0, ["mov     rax, [rsp+68h+var_50]", "add     rsp, 38h", "pop     p", "pop     flags", "pop     size", "pop     r13", "pop     bufsize", "pop     r15", "retn"], ["mov~rax,[rsp+0]", "add~rsp,0", "pop~p", "pop~flags", "pop~size", "pop~r13", "pop~bufsize", "pop~r15", "retn"]], [5, 2, 2, 5, 4, 57, 4, 5, 0, 0, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 38h", "mov     r14, arg_0", "mov     [rsp+68h+argsize], argsize_0", "mov     r12, size", "mov     rbx, o", "test    o, o", "lea     rax, default_quoting_options", "cmovz   rbx, rax", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "mov     [rsp+68h+e], eax", "test    size, size", "setz    bpl", "movzx   ebp, bpl", "or      ebp, [p+4]", "lea     r15, [p+8]", "sub     rsp, 8", "push    qword ptr [p+30h]; right_quote", "push    qword ptr [p+28h]; left_quote", "push    r15; quote_these_too", "mov     r9d, ebp; flags", "mov     r8d, [p]; quoting_style", "mov     rcx, [rsp+88h+argsize]; argsize", "mov     [rsp+88h+arg], arg_0", "mov     rdx, arg_0; arg", "mov     esi, 0; buffersize", "mov     edi, 0; buffer", "call    quotearg_buffer_restyled", "mov     [rsp+88h+var_40], rax", "lea     arg_0, [rax+1]", "add     rsp, 20h", "mov     rdi, bufsize; n", "call    xmalloc", "mov     [rsp+68h+var_50], rax", "sub     rsp, 8", "push    qword ptr [p+30h]; right_quote", "push    qword ptr [p+28h]; left_quote", "push    r15; quote_these_too", "mov     r9d, ebp; flags", "mov     r8d, [p]; quoting_style", "mov     rcx, [rsp+88h+argsize]; argsize", "mov     rdx, [rsp+88h+arg]; arg", "mov     rsi, bufsize; buffersize", "mov     rdi, rax; buffer", "call    quotearg_buffer_restyled", "mov     edx, [rsp+88h+e]", "mov     [r13+0], edx", "add     rsp, 20h", "test    size, size", "jz      short loc_417A"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r14,arg_0", "mov~[rsp+0],argsize_0", "mov~r12,size", "mov~rbx,o", "test~o,o", "lea~rax,<TAG>", "cmovz~rbx,rax", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "mov~[rsp+0],eax", "test~size,size", "setz~bpl", "movzx~ebp,bpl", "or~ebp,[p+0]", "lea~r15,[p+0]", "sub~rsp,0", "push~[word ptr [p+0]", "push~[word ptr [p+0]", "push~r15", "mov~r9d,ebp", "mov~r8d,<TAG>", "mov~rcx,[rsp+0]", "mov~[rsp+0],arg_0", "mov~rdx,arg_0", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~[rsp+0],rax", "lea~arg_0,[rax+0]", "add~rsp,<STR>", "mov~rdi,bufsize", "call~FOO", "mov~[rsp+0],rax", "sub~rsp,0", "push~[word ptr [p+0]", "push~[word ptr [p+0]", "push~r15", "mov~r9d,ebp", "mov~r8d,<TAG>", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,bufsize", "mov~rdi,rax", "call~FOO", "mov~edx,[rsp+0]", "mov~[r13+0],edx", "add~rsp,<STR>", "test~size,size", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     rax, [rsp+68h+var_40]", "mov     [size], rax"], ["mov~rax,[rsp+0]", "mov~<TAG>,rax"]]], "func_feature": [4, 4, 5, 2, 3, 3, 1, 68, 0.0, 1, 6], "succs": [[], [0, 2], [0]], "fname": "quotearg_alloc_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[3, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rcx, o; o", "mov     edx, 0; size", "call    quotearg_alloc_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rcx,o", "mov~edx,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 6, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_alloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[1, 0, 3, 0, 1, 4, 0, 1, 0, 0, 0.0, ["call    _free", "mov     cs:slotvec0.size, 100h", "lea     rax, slot0", "mov     cs:slotvec0.val, rax"], ["call~FOO", "mov~<TAG>,0", "lea~rax,<TAG>", "mov~<TAG>,rax"]], [0, 0, 4, 0, 0, 4, 0, 1, 1, 2, 0.2857142857142857, ["mov     rdi, [sv+8]; ptr", "lea     rax, slot0", "cmp     rdi, rax", "jz      short loc_420B"], ["mov~rdi,[sv+0]", "lea~rax,<TAG>", "cmp~rdi,rax", "jz~FOO"]], [0, 0, 1, 0, 1, 4, 0, 1, 3, 1, 0.0, ["mov     rdi, sv; ptr", "call    _free", "lea     rax, slotvec0", "mov     cs:slotvec_0, rax"], ["mov~rdi,sv", "call~FOO", "lea~rax,<TAG>", "mov~<TAG>,rax"]], [0, 0, 2, 0, 0, 3, 0, 1, 2, 1, 0.23809523809523808, ["lea     rax, slotvec0", "cmp     sv, rax", "jz      short loc_422D"], ["lea~rax,<TAG>", "cmp~sv,rax", "jz~FOO"]], [1, 0, 6, 1, 0, 4, 0, 0, 1, 4, 0.023809523809523808, ["lea     rbx, [sv+18h]", "lea     eax, [rax-2]", "shl     rax, 4", "lea     rbp, [sv+rax+28h]"], ["lea~rbx,[sv+0]", "lea~eax,[rax-2]+0]", "shl~rax,0", "lea~rbp,[sv+0]"]], [1, 0, 7, 0, 0, 7, 0, 1, 0, 3, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     r12, cs:slotvec_0", "mov     eax, cs:nslots", "cmp     eax, 1", "jle     short loc_41DC"], ["push~r12", "push~rbp", "push~rbx", "mov~r12,<TAG>", "mov~eax,<TAG>", "cmp~eax,0", "jle~FOO"]], [1, 0, 6, 1, 1, 5, 0, 2, 2, 3, 0.11904761904761904, ["mov     rdi, [rbx]; ptr", "call    _free", "add     rbx, 10h", "cmp     rbx, rbp", "jnz     short loc_41CB"], ["mov~rdi,<TAG>", "call~FOO", "add~rbx,0", "cmp~rbx,rbp", "jnz~FOO"]], [1, 0, 0, 0, 0, 5, 0, 0, 3, 0, 0.0, ["mov     cs:nslots, 1", "pop     rbx", "pop     rbp", "pop     sv", "retn"], ["mov~<TAG>,0", "pop~rbx", "pop~rbp", "pop~sv", "retn"]]], "func_feature": [3, 0, 7, 0, 8, 11, 0, 36, 0.08333, 5, 2], "succs": [[3], [0, 3], [7], [2, 7], [6], [1, 4], [1, 6], []], "fname": "quotearg_free", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[3, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "lea     rcx, default_quoting_options; options", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "call    quotearg_n_options", "add     rsp, 8", "retn"], ["sub~rsp,0", "lea~rcx,<TAG>", "mov~rdx,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 6, 0.0, 1, 2], "succs": [[]], "fname": "quotearg_n", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[2, 0, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "lea     rcx, default_quoting_options; options", "call    quotearg_n_options", "add     rsp, 8", "retn"], ["sub~rsp,0", "lea~rcx,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 5, 0.0, 1, 2], "succs": [[]], "fname": "quotearg_n_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[3, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rsi, arg; arg", "mov     edi, 0; n", "call    quotearg_n", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rsi,arg", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 6, 0.0, 0, 2], "succs": [[]], "fname": "quotearg", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[3, 0, 0, 2, 1, 7, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "mov     edi, 0; n", "call    quotearg_n_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rdx,argsize", "mov~argsize,arg", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 7, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 1, 4, 1, 0, 7, 1, 1, 0, 2, 0.0, ["sub     rsp, 48h", "mov     rax, arg", "mov     arg, fs:28h", "mov     [rsp+48h+var_10], arg", "xor     edx, edx", "cmp     esi, 0Ah", "jz      loc_4340"], ["sub~rsp,<STR>", "mov~rax,arg", "mov~arg,<TAG>", "mov~[rsp+0],arg", "xor~edx,edx", "cmp~esi,0", "jz~FOO"]], [12, 0, 2, 0, 1, 19, 1, 2, 1, 1, 0.16666666666666666, ["mov     [rsp+48h+o.style], esi", "mov     [rsp+48h+o.flags], 0", "mov     [rsp+48h+o.quote_these_too], 0", "mov     [rsp+48h+o.quote_these_too+4], 0", "mov     [rsp+48h+o.quote_these_too+8], 0", "mov     [rsp+48h+o.quote_these_too+0Ch], 0", "mov     [rsp+48h+o.quote_these_too+10h], 0", "mov     [rsp+48h+o.quote_these_too+14h], 0", "mov     [rsp+48h+o.quote_these_too+18h], 0", "mov     [rsp+48h+o.quote_these_too+1Ch], 0", "mov     [rsp+48h+o.left_quote], 0", "mov     [rsp+48h+o.right_quote], 0", "mov     rcx, rsp; options", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     s, arg; arg", "call    quotearg_n_options", "mov     rcx, [rsp+48h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_4345"], ["mov~<TAG>,esi", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~rcx,rsp", "mov~rdx,0", "mov~s,arg", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 2, -1, 0.0, ["add     rsp, 48h", "retn"], ["add~rsp,<STR>", "retn"]]], "func_feature": [3, 2, 5, 1, 5, 4, 1, 30, 0.03333, 1, 2], "succs": [[], [0, 2], [3, 4], [], []], "fname": "quotearg_n_style", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[11, 0, 2, 0, 1, 18, 1, 2, 0, 0, 0.16666666666666666, ["mov     [rsp+48h+o.style], esi", "mov     [rsp+48h+o.flags], 0", "mov     [rsp+48h+o.quote_these_too], 0", "mov     [rsp+48h+o.quote_these_too+4], 0", "mov     [rsp+48h+o.quote_these_too+8], 0", "mov     [rsp+48h+o.quote_these_too+0Ch], 0", "mov     [rsp+48h+o.quote_these_too+10h], 0", "mov     [rsp+48h+o.quote_these_too+14h], 0", "mov     [rsp+48h+o.quote_these_too+18h], 0", "mov     [rsp+48h+o.quote_these_too+1Ch], 0", "mov     [rsp+48h+o.left_quote], 0", "mov     [rsp+48h+o.right_quote], 0", "mov     rcx, rsp; options", "mov     s, arg; arg", "call    quotearg_n_options", "mov     rdx, [rsp+48h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_43EB"], ["mov~<TAG>,esi", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~rcx,rsp", "mov~s,arg", "call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [1, 1, 4, 1, 0, 8, 1, 1, 0, 2, 0.0, ["sub     rsp, 48h", "mov     rax, arg", "mov     arg, argsize; argsize", "mov     argsize, fs:28h", "mov     [rsp+48h+var_10], argsize", "xor     ecx, ecx", "cmp     esi, 0Ah", "jz      short loc_43E6"], ["sub~rsp,<STR>", "mov~rax,arg", "mov~arg,argsize", "mov~argsize,<TAG>", "mov~[rsp+0],argsize", "xor~ecx,ecx", "cmp~esi,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 2, -1, 0.0, ["add     rsp, 48h", "retn"], ["add~rsp,<STR>", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [3, 2, 5, 1, 5, 4, 1, 30, 0.03333, 1, 2], "succs": [[2, 3], [0, 4], [], [], []], "fname": "quotearg_n_style_mem", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[3, 0, 0, 2, 1, 7, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rdx, arg; arg", "mov     esi, edi; s", "mov     edi, 0; n", "call    quotearg_n_style", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rdx,arg", "mov~esi,edi", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 7, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[3, 0, 0, 2, 1, 8, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rcx, argsize; argsize", "mov     argsize, arg; arg", "mov     esi, edi; s", "mov     edi, 0; n", "call    quotearg_n_style_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rcx,argsize", "mov~argsize,arg", "mov~esi,edi", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 8, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_style_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[3, 0, 2, 1, 2, 36, 2, 3, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 40h", "mov     rbp, arg", "mov     r12, argsize", "mov     rax, fs:28h", "mov     [rsp+58h+var_20], rax", "xor     eax, eax", "mov     rcx, qword ptr cs:default_quoting_options.style", "mov     rbx, qword ptr cs:default_quoting_options.quote_these_too", "mov     qword ptr [rsp+58h+options.style], rcx", "mov     qword ptr [rsp+58h+options.quote_these_too], rbx", "mov     rcx, qword ptr cs:default_quoting_options.quote_these_too+8", "mov     rbx, qword ptr cs:default_quoting_options.quote_these_too+10h", "mov     qword ptr [rsp+58h+options.quote_these_too+8], rcx", "mov     qword ptr [rsp+58h+options.quote_these_too+10h], rbx", "mov     rcx, qword ptr cs:default_quoting_options.quote_these_too+18h", "mov     rbx, cs:default_quoting_options.left_quote", "mov     qword ptr [rsp+58h+options.quote_these_too+18h], rcx", "mov     [rsp+58h+options.left_quote], rbx", "mov     rax, cs:default_quoting_options.right_quote", "mov     [rsp+58h+options.right_quote], rax", "movsx   esi, dl; c", "mov     rbx, rsp", "mov     edx, 1; i", "mov     arg, rbx; o", "call    set_char_quoting", "mov     rcx, rbx; options", "mov     rdx, argsize; argsize", "mov     rsi, arg; arg", "mov     edi, 0; n", "call    quotearg_n_options", "mov     rdi, [rsp+58h+var_20]", "xor     rdi, fs:28h", "jnz     short loc_44D3"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,arg", "mov~r12,argsize", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rcx,<TAG>", "mov~rbx,<TAG>", "mov~<TAG>,rcx", "mov~[word ptr [rsp+0],rbx", "mov~rcx,<TAG>", "mov~rbx,<TAG>", "mov~[word ptr [rsp+0],rcx", "mov~[word ptr [rsp+0],rbx", "mov~rcx,<TAG>", "mov~rbx,<TAG>", "mov~[word ptr [rsp+0],rcx", "mov~[rsp+0],rbx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "movsx~esi,dl", "mov~rbx,rsp", "mov~edx,0", "mov~arg,rbx", "call~FOO", "mov~rcx,rbx", "mov~rdx,argsize", "mov~rsi,arg", "mov~edi,0", "call~FOO", "mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "jnz~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 0, -1, 0.0, ["add     rsp, 40h", "pop     rbx", "pop     arg", "pop     argsize", "retn"], ["add~rsp,0", "pop~rbx", "pop~arg", "pop~argsize", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 2, 4, 1, 3, 2, 2, 42, 0.0, 8, 2], "succs": [[1, 2], [], []], "fname": "quotearg_char_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[3, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "movsx   edx, sil; ch_0", "mov     ch_0, 0FFFFFFFFFFFFFFFFh; argsize", "call    quotearg_char_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "movsx~edx,sil", "mov~ch_0,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 6, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_char", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[2, 1, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     esi, 3Ah ; ':'; ch_0", "call    quotearg_char", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~esi,<STR>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 5, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_colon", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[2, 1, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     edx, 3Ah ; ':'; ch_0", "call    quotearg_char_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~edx,<STR>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 5, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_colon_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[13, 1, 2, 0, 2, 27, 1, 3, 0, 0, 0.16666666666666666, ["mov     ebp, edi", "mov     r12, arg", "mov     [rsp+58h+options.style], esi", "mov     [rsp+58h+options.flags], 0", "mov     [rsp+58h+options.quote_these_too], 0", "mov     [rsp+58h+options.quote_these_too+4], 0", "mov     [rsp+58h+options.quote_these_too+8], 0", "mov     [rsp+58h+options.quote_these_too+0Ch], 0", "mov     [rsp+58h+options.quote_these_too+10h], 0", "mov     [rsp+58h+options.quote_these_too+14h], 0", "mov     [rsp+58h+options.quote_these_too+18h], 0", "mov     [rsp+58h+options.quote_these_too+1Ch], 0", "mov     [rsp+58h+options.left_quote], 0", "mov     [rsp+58h+options.right_quote], 0", "mov     rbx, rsp", "mov     edx, 1; i", "mov     esi, 3Ah ; ':'; c", "mov     n, rbx; o", "call    set_char_quoting", "mov     rcx, rbx; options", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rsi, arg; arg", "mov     edi, ebp; n", "call    quotearg_n_options", "mov     rcx, [rsp+58h+var_20]", "xor     rcx, fs:28h", "jnz     short loc_45E1"], ["mov~ebp,edi", "mov~r12,arg", "mov~<TAG>,esi", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~rbx,rsp", "mov~edx,0", "mov~esi,<STR>", "mov~n,rbx", "call~FOO", "mov~rcx,rbx", "mov~rdx,0", "mov~rsi,arg", "mov~edi,ebp", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [2, 0, 4, 1, 0, 9, 1, 1, 0, 2, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 40h", "mov     rax, fs:28h", "mov     [rsp+58h+var_20], rax", "xor     eax, eax", "cmp     esi, 0Ah", "jz      loc_45DC"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~esi,0", "jz~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 2, -1, 0.0, ["add     rsp, 40h", "pop     rbx", "pop     n", "pop     arg", "retn"], ["add~rsp,0", "pop~rbx", "pop~n", "pop~arg", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [4, 2, 6, 1, 5, 4, 6, 43, 0.03333, 1, 2], "succs": [[2, 4], [0, 3], [], [], []], "fname": "quotearg_n_style_colon", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 1, 0, 1, 0, 6, 0, 0, 0, 0, 0.0, ["add     rsp, 48h", "pop     rbx", "pop     n", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~n", "pop~arg", "pop~argsize", "retn"]], [0, 1, 2, 1, 2, 36, 2, 3, 0, 1, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 48h", "mov     ebp, edi", "mov     r12, arg", "mov     r13, argsize", "mov     rax, fs:28h", "mov     [rsp+68h+var_30], rax", "xor     eax, eax", "mov     arg, qword ptr cs:default_quoting_options.style", "mov     rbx, qword ptr cs:default_quoting_options.quote_these_too", "mov     qword ptr [rsp+68h+o.style], rcx", "mov     qword ptr [rsp+68h+o.quote_these_too], rbx", "mov     rcx, qword ptr cs:default_quoting_options.quote_these_too+8", "mov     rbx, qword ptr cs:default_quoting_options.quote_these_too+10h", "mov     qword ptr [rsp+68h+o.quote_these_too+8], rcx", "mov     qword ptr [rsp+68h+o.quote_these_too+10h], rbx", "mov     rcx, qword ptr cs:default_quoting_options.quote_these_too+18h", "mov     rbx, cs:default_quoting_options.left_quote", "mov     qword ptr [rsp+68h+o.quote_these_too+18h], rcx", "mov     [rsp+68h+o.left_quote], rbx", "mov     rax, cs:default_quoting_options.right_quote", "mov     [rsp+68h+o.right_quote], rax", "mov     rbx, rsp", "mov     n, rbx; o", "call    set_custom_quoting", "mov     rcx, rbx; options", "mov     rdx, argsize; argsize", "mov     rsi, arg; arg", "mov     edi, ebp; n", "call    quotearg_n_options", "mov     rdi, [rsp+68h+var_30]", "xor     rdi, fs:28h", "jnz     short loc_4691"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~ebp,edi", "mov~r12,arg", "mov~r13,argsize", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~arg,<TAG>", "mov~rbx,<TAG>", "mov~<TAG>,rcx", "mov~[word ptr [rsp+0],rbx", "mov~rcx,<TAG>", "mov~rbx,<TAG>", "mov~[word ptr [rsp+0],rcx", "mov~[word ptr [rsp+0],rbx", "mov~rcx,<TAG>", "mov~rbx,<TAG>", "mov~[word ptr [rsp+0],rcx", "mov~[rsp+0],rbx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "mov~rbx,rsp", "mov~n,rbx", "call~FOO", "mov~rcx,rbx", "mov~rdx,argsize", "mov~rsi,arg", "mov~edi,ebp", "call~FOO", "mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 2, 4, 1, 3, 2, 2, 43, 0.0, 8, 2], "succs": [[], [0, 2], []], "fname": "quotearg_n_custom_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[3, 0, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     r8, 0FFFFFFFFFFFFFFFFh; argsize", "call    quotearg_n_custom_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~r8,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 5, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_n_custom", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[3, 0, 0, 2, 1, 8, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rcx, arg; arg", "mov     arg, right_quote; right_quote", "mov     right_quote, left_quote; left_quote", "mov     edi, 0; n", "call    quotearg_n_custom", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rcx,arg", "mov~arg,right_quote", "mov~right_quote,left_quote", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 8, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_custom", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[3, 0, 0, 2, 1, 9, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     r8, argsize; argsize", "mov     argsize, arg; arg", "mov     arg, right_quote; right_quote", "mov     right_quote, left_quote; left_quote", "mov     edi, 0; n", "call    quotearg_n_custom_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~r8,argsize", "mov~argsize,arg", "mov~arg,right_quote", "mov~right_quote,left_quote", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 9, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_custom_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[2, 0, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "lea     rcx, quote_quoting_options; options", "call    quotearg_n_options", "add     rsp, 8", "retn"], ["sub~rsp,0", "lea~rcx,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 5, 0.0, 1, 2], "succs": [[]], "fname": "quote_n_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[3, 0, 0, 2, 1, 7, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "mov     edi, 0; n", "call    quote_n_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rdx,argsize", "mov~argsize,arg", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 7, 0.0, 0, 2], "succs": [[]], "fname": "quote_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[3, 0, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "call    quote_n_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rdx,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 5, 0.0, 0, 2], "succs": [[]], "fname": "quote_n", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[3, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rsi, arg; arg", "mov     edi, 0; n", "call    quote_n", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rsi,arg", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 6, 0.0, 0, 2], "succs": [[]], "fname": "quote", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[1, 0, 7, 0, 0, 2, 0, 1, 0, 0, 0.14285714285714285, ["cmp     edx, 16h", "jnz     short loc_478B"], ["cmp~edx,0", "jnz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 0, 3, 2, 0.26190476190476186, ["cmp     count, 7FF00000h", "jbe     short loc_478B"], ["cmp~count,0", "jbe~FOO"]], [0, 0, 0, 0, 0, 6, 0, 0, 2, 0, 0.0, ["pop     count", "pop     rbp", "pop     buf", "pop     fd", "pop     r14", "retn"], ["pop~count", "pop~rbp", "pop~buf", "pop~fd", "pop~r14", "retn"]], [0, 0, 7, 0, 1, 7, 1, 1, 1, 1, 0.3571428571428571, ["mov     rdx, count; nbytes", "mov     rsi, buf; buf", "mov     edi, r13d; fd", "call    _read", "mov     rbp, rax", "test    rax, rax", "jns     short loc_478E"], ["mov~rdx,count", "mov~rsi,buf", "mov~edi,r13d", "call~FOO", "mov~rbp,rax", "test~rax,rax", "jns~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, 1, 0.047619047619047616, ["mov     rax, rbp"], ["mov~rax,rbp"]], [0, 0, 7, 0, 0, 2, 0, 1, 5, 2, 0.11904761904761904, ["mov     count, r14", "jmp     short loc_4756"], ["mov~count,r14", "jmp~FOO"]], [1, 0, 7, 0, 1, 4, 0, 2, 2, 2, 0.2857142857142857, ["call    ___errno_location", "mov     edx, [rax]", "cmp     edx, 4", "jz      short loc_4756"], ["call~FOO", "mov~edx,<TAG>", "cmp~edx,0", "jz~FOO"]], [1, 0, 7, 0, 0, 9, 0, 0, 0, 2, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     r13d, edi", "mov     r12, buf", "mov     rbx, count", "mov     r14d, 7FF00000h"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~r13d,edi", "mov~r12,buf", "mov~rbx,count", "mov~r14d,0"]]], "func_feature": [2, 1, 5, 0, 8, 11, 2, 33, 0.15179, 0, 0], "succs": [[4, 5], [0, 4], [], [2, 6], [2], [3], [1, 3], [3]], "fname": "safe_read", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 7, 0, 0, 2, 0, 1, 0, 0, 0.11904761904761904, ["mov     count, r14", "jmp     short loc_47AE"], ["mov~count,r14", "jmp~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 4, 2, 0.14285714285714285, ["cmp     edx, 16h", "jnz     short loc_47E3"], ["cmp~edx,0", "jnz~FOO"]], [0, 0, 7, 0, 1, 7, 1, 1, 1, 1, 0.3571428571428571, ["mov     rdx, count; n", "mov     rsi, buf; buf", "mov     edi, r13d; fd", "call    _write", "mov     rbp, rax", "test    result, result", "jns     short loc_47E6"], ["mov~rdx,count", "mov~rsi,buf", "mov~edi,r13d", "call~FOO", "mov~rbp,rax", "test~result,result", "jns~FOO"]], [1, 0, 7, 0, 1, 4, 0, 2, 2, 2, 0.2857142857142857, ["call    ___errno_location", "mov     edx, [rax]", "cmp     edx, 4", "jz      short loc_47AE"], ["call~FOO", "mov~edx,<TAG>", "cmp~edx,0", "jz~FOO"]], [1, 0, 7, 0, 0, 9, 0, 0, 0, 2, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     r13d, edi", "mov     r12, buf", "mov     rbx, count", "mov     r14d, 7FF00000h"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~r13d,edi", "mov~r12,buf", "mov~rbx,count", "mov~r14d,0"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, 1, 0.047619047619047616, ["mov     rax, result"], ["mov~rax,result"]], [1, 0, 7, 0, 0, 2, 0, 0, 3, 2, 0.26190476190476186, ["cmp     count, 7FF00000h", "jbe     short loc_47E3"], ["cmp~count,0", "jbe~FOO"]], [0, 0, 0, 0, 0, 6, 0, 0, 2, 0, 0.0, ["pop     count", "pop     rbp", "pop     buf", "pop     fd", "pop     r14", "retn"], ["pop~count", "pop~rbp", "pop~buf", "pop~fd", "pop~r14", "retn"]]], "func_feature": [2, 1, 5, 0, 8, 11, 1, 33, 0.15179, 0, 0], "succs": [[2], [0, 5], [3, 7], [2, 6], [2], [7], [1, 5], []], "fname": "safe_write", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[1, 0, 0, 1, 0, 8, 0, 0, 0, 0, 0.0, ["add     rsp, 28h; jumptable 000000000000489F case 0", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 10, 1, 0, 4, 0, 1, 3, -1, 0.18095238095238098, ["lea     rdx, off_61E8", "movsxd  rax, dword ptr [rdx+n_authors*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [4, 0, 1, 0, 2, 14, 0, 3, 4, -1, 0.0, ["mov     n_authors, [authors+8]; jumptable 000000000000489F case 2", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8, r12", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "jmp     short loc_48F3; jumptable 000000000000489F case 0"], ["mov~n_authors,[authors+0]", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8,r12", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "jmp~FOO"]], [4, 0, 1, 0, 2, 16, 0, 3, 4, -1, 0.0, ["mov     r13, [authors+10h]; jumptable 000000000000489F case 3", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "jmp     loc_48F3; jumptable 000000000000489F case 0"], ["mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "jmp~FOO"]], [6, 0, 1, 2, 2, 20, 0, 3, 4, -1, 0.0, ["mov     r14, [authors+18h]; jumptable 000000000000489F case 4", "mov     r13, [authors+10h]", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSAn; \"Written by %s, %s, %s,\\nand %s.\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "sub     rsp, 8", "push    r14", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 10h", "jmp     loc_48F3; jumptable 000000000000489F case 0"], ["mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "sub~rsp,0", "push~r14", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [5, 0, 1, 1, 2, 21, 0, 3, 4, -1, 0.0, ["mov     r15, [authors+20h]; jumptable 000000000000489F case 5", "mov     r14, [authors+18h]", "mov     r13, [authors+10h]", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "push    r15", "push    r14", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 10h", "jmp     loc_48F3; jumptable 000000000000489F case 0"], ["mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "push~r15", "push~r14", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [5, 1, 1, 2, 2, 25, 0, 3, 4, -1, 0.0, ["mov     r15, [authors+28h]; jumptable 000000000000489F case 6", "mov     r14, [authors+20h]", "mov     r13, [authors+18h]", "mov     n_authors, [authors+10h]", "mov     rax, [authors+8]", "mov     [rsp+58h+var_58], rax", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "mov     edi, 0; domainname", "call    _dcgettext", "sub     rsp, 8", "push    r15", "push    r14", "push    r13", "mov     r9, r12", "mov     r8, [rsp+78h+var_58]", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 20h", "jmp     loc_48F3; jumptable 000000000000489F case 0"], ["mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~rax,[authors+0]", "mov~<TAG>,rax", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "sub~rsp,0", "push~r15", "push~r14", "push~r13", "mov~r9,r12", "mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [4, 1, 1, 1, 2, 27, 0, 3, 4, -1, 0.0, ["mov     r15, [authors+30h]; jumptable 000000000000489F case 7", "mov     r14, [authors+28h]", "mov     r13, [authors+20h]", "mov     n_authors, [authors+18h]", "mov     rax, [authors+10h]", "mov     [rsp+58h+var_58], rax", "mov     rcx, [authors+8]", "mov     [rsp+58h+var_50], rcx", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "mov     edi, 0; domainname", "call    _dcgettext", "push    r15", "push    r14", "push    r13", "push    r12", "mov     r9, [rsp+78h+var_58]", "mov     r8, [rsp+78h+var_50]", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 20h", "jmp     loc_48F3; jumptable 000000000000489F case 0"], ["mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~rax,[authors+0]", "mov~<TAG>,rax", "mov~rcx,[authors+0]", "mov~[rsp+0],rcx", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "push~r15", "push~r14", "push~r13", "push~r12", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [6, 0, 1, 2, 2, 31, 0, 3, 4, -1, 0.0, ["mov     r15, [authors+38h]; jumptable 000000000000489F case 8", "mov     r14, [authors+30h]", "mov     r13, [authors+28h]", "mov     n_authors, [authors+20h]", "mov     rax, [authors+18h]", "mov     [rsp+58h+var_58], rax", "mov     rcx, [authors+10h]", "mov     [rsp+58h+var_50], rcx", "mov     rdi, [authors+8]", "mov     [rsp+58h+var_48], rdi", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     edi, 0; domainname", "call    _dcgettext", "sub     rsp, 8", "push    r15", "push    r14", "push    r13", "push    r12", "push    [rsp+80h+var_58]", "mov     r9, [rsp+88h+var_50]", "mov     r8, [rsp+88h+var_48]", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 30h", "jmp     loc_48F3; jumptable 000000000000489F case 0"], ["mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~rax,[authors+0]", "mov~<TAG>,rax", "mov~rcx,[authors+0]", "mov~[rsp+0],rcx", "mov~rdi,[authors+0]", "mov~[rsp+0],rdi", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "sub~rsp,0", "push~r15", "push~r14", "push~r13", "push~r12", "push~[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [5, 0, 1, 1, 2, 33, 0, 3, 4, -1, 0.0, ["mov     r15, [authors+40h]; jumptable 000000000000489F case 9", "mov     r14, [authors+38h]", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     rax, [authors+20h]", "mov     [rsp+58h+var_58], rax", "mov     rcx, [authors+18h]", "mov     [rsp+58h+var_50], rcx", "mov     rdi, [authors+10h]", "mov     [rsp+58h+var_48], rdi", "mov     rsi, [authors+8]", "mov     [rsp+58h+var_40], rsi", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     edi, 0; domainname", "call    _dcgettext", "push    r15", "push    r14", "push    r13", "push    r12", "push    [rsp+78h+var_58]", "push    [rsp+80h+var_50]", "mov     r9, [rsp+88h+var_48]", "mov     r8, [rsp+88h+var_40]", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 30h", "jmp     loc_48F3; jumptable 000000000000489F case 0"], ["mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~rax,[authors+0]", "mov~<TAG>,rax", "mov~rcx,[authors+0]", "mov~[rsp+0],rcx", "mov~rdi,[authors+0]", "mov~[rsp+0],rdi", "mov~rsi,[authors+0]", "mov~[rsp+0],rsi", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "push~r15", "push~r14", "push~r13", "push~r12", "push~[rsp+0]", "push~[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [5, 0, 1, 1, 2, 33, 0, 3, 3, 0, 0.009523809523809525, ["mov     r15, [authors+40h]; jumptable 000000000000489F default case", "mov     r14, [authors+38h]", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     rax, [authors+20h]", "mov     [rsp+58h+var_58], rax", "mov     rcx, [authors+18h]", "mov     [rsp+58h+var_50], rcx", "mov     rdi, [authors+10h]", "mov     [rsp+58h+var_48], rdi", "mov     rsi, [authors+8]", "mov     [rsp+58h+var_40], rsi", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     edi, 0; domainname", "call    _dcgettext", "push    r15", "push    r14", "push    r13", "push    r12", "push    [rsp+78h+var_58]", "push    [rsp+80h+var_50]", "mov     r9, [rsp+88h+var_48]", "mov     r8, [rsp+88h+var_40]", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 30h", "jmp     loc_48F3; jumptable 000000000000489F case 0"], ["mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~rax,[authors+0]", "mov~<TAG>,rax", "mov~rcx,[authors+0]", "mov~[rsp+0],rcx", "mov~rdi,[authors+0]", "mov~[rsp+0],rdi", "mov~rsi,[authors+0]", "mov~[rsp+0],rsi", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "push~r15", "push~r14", "push~r13", "push~r12", "push~[rsp+0]", "push~[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [4, 0, 1, 0, 2, 11, 0, 2, 4, -1, 0.0, ["mov     authors, [authors]; jumptable 000000000000489F case 1", "mov     edx, 5; category", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk"], ["mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO"]], [1, 0, 15, 1, 0, 12, 1, 1, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 28h", "mov     rbp, stream", "mov     rbx, authors", "mov     r12, n_authors", "test    command_name, command_name", "jz      loc_48A1"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,stream", "mov~rbx,authors", "mov~r12,n_authors", "test~command_name,command_name", "jz~FOO"]], [8, 0, 12, 0, 4, 20, 0, 5, 2, 1, 0.17142857142857143, ["mov     edx, 5; category", "lea     rsi, aC_0; \"(C)\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8d, 7E3h", "mov     rcx, rax", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "mov     edx, 5; category", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     n_authors, 9; switch 10 cases", "ja      loc_4BFC; jumptable 000000000000489F default case"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8d,0", "mov~rcx,rax", "lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~n_authors,0", "ja~FOO"]], [2, 0, 13, 0, 1, 7, 0, 2, 1, 2, 0.030952380952380953, ["mov     r8, version", "mov     version, package", "lea     package, aSS_0; \"%s %s\\n\"", "mov     esi, 1", "mov     eax, 0", "call    ___fprintf_chk", "jmp     loc_482E"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [2, 0, 13, 0, 1, 7, 0, 1, 1, 2, 0.030952380952380953, ["mov     n_authors, version", "mov     authors, package", "mov     version, command_name", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     esi, 1", "mov     eax, 0", "call    ___fprintf_chk"], ["mov~n_authors,version", "mov~authors,package", "mov~version,command_name", "lea~package,<TAG>", "mov~esi,0", "mov~eax,0", "call~FOO"]]], "func_feature": [26, 1, 39, 4, 16, 26, 2, 289, 0.02649, 16, 13], "succs": [[], [0, 2, 3, 4, 5, 6, 7, 8, 9, 11], [0], [0], [0], [0], [0], [0], [0], [0], [0], [0], [14, 15], [1, 10], [13], [13]], "fname": "version_etc_arn", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[2, 0, 4, 1, 0, 3, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "cmp     qword ptr [authors], 0", "jz      short loc_4CA8"], ["sub~rsp,0", "cmp~<TAG>,0", "jz~FOO"]], [2, 0, 2, 1, 0, 3, 0, 1, 0, -1, 0.08333333333333333, ["add     n_authors, 1; n_authors", "cmp     qword ptr [authors+n_authors*8], 0", "jnz     short loc_4C93"], ["add~n_authors,0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 2, 0, 0, 1, 0, 0, 0, -1, 0.08333333333333333, ["mov     r9d, 0"], ["mov~r9d,0"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.08333333333333333, ["mov     r9d, 0", "jmp     short loc_4C9E"], ["mov~r9d,0", "jmp~FOO"]], [1, 0, 0, 1, 1, 3, 0, 1, 0, -1, 0.0, ["call    version_etc_arn", "add     rsp, 8", "retn"], ["call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 4, 0, 5, 6, 0, 12, 0.05, 0, 3], "succs": [[2, 3], [1, 4], [1], [4], []], "fname": "version_etc_ar", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 8, 0, 0, 4, 1, 1, 0, 0, 0.3571428571428571, ["mov     rax, [rax]", "mov     [rsp+n_authors*8+68h+authtab], rax", "test    rax, rax", "jz      short loc_4D07"], ["mov~rax,<TAG>", "mov~<TAG>,rax", "test~rax,rax", "jz~FOO"]], [1, 0, 8, 2, 0, 5, 0, 1, 2, 3, 0.09821428571428571, ["mov     eax, r10d", "add     rax, [authors+10h]", "add     r10d, 8", "mov     [authors], r10d", "jmp     short loc_4CD8"], ["mov~eax,r10d", "add~rax,[authors+0]", "add~r10d,0", "mov~<TAG>,r10d", "jmp~FOO"]], [0, 0, 8, 0, 0, 3, 0, 0, 2, 3, 0.09821428571428571, ["mov     rax, [authors+8]", "lea     r10, [rax+8]", "mov     [authors+8], r10"], ["mov~rax,[authors+0]", "lea~r10,[rax+0]", "mov~[authors+0],r10"]], [1, 0, 0, 1, 0, 2, 0, 0, 5, -1, 0.0, ["add     rsp, 68h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 2, 0, 1, 5, 1, 2, 4, 1, 0.21428571428571427, ["mov     authors, rsp; authors", "call    version_etc_arn", "mov     rax, [rsp+68h+var_10]", "xor     rax, fs:28h", "jnz     short loc_4D24"], ["mov~authors,rsp", "call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 8, 0, 0, 3, 0, 1, 1, 4, 0.25, ["mov     r10d, [authors]", "cmp     r10d, 2Fh ; '/'", "ja      short loc_4CCC"], ["mov~r10d,<TAG>", "cmp~r10d,0", "ja~FOO"]], [2, 0, 8, 1, 0, 6, 1, 1, 0, 5, 0.0, ["sub     rsp, 68h", "mov     rax, fs:28h", "mov     [rsp+68h+var_10], rax", "xor     eax, eax", "mov     r9d, 0", "jmp     short loc_4CEE"], ["sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~r9d,0", "jmp~FOO"]], [2, 0, 8, 1, 0, 3, 0, 1, 4, 2, 0.125, ["add     n_authors, 1; n_authors", "cmp     n_authors, 0Ah", "jz      short loc_4D07"], ["add~n_authors,0", "cmp~n_authors,0", "jz~FOO"]]], "func_feature": [2, 3, 8, 1, 9, 11, 1, 32, 0.12698, 1, 5], "succs": [[8, 4], [0], [0], [], [3, 5], [], [1, 2], [6], [4, 6]], "fname": "version_etc_va", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[1, 1, 2, 0, 1, 14, 2, 2, 0, 0, 0.3333333333333333, ["mov     rax, fs:28h", "mov     [rsp+0D8h+var_C0], rax", "xor     eax, eax", "mov     [rsp+0D8h+authors.gp_offset], 20h ; ' '", "mov     [rsp+0D8h+authors.fp_offset], 30h ; '0'", "lea     rax, [rsp+0D8h+arg_0]", "mov     [rsp+0D8h+authors.overflow_arg_area], rax", "lea     rax, [rsp+0D8h+var_B8]", "mov     [rsp+0D8h+authors.reg_save_area], rax", "mov     r8, rsp; authors", "call    version_etc_va", "mov     rax, [rsp+0D8h+var_C0]", "xor     rax, fs:28h", "jnz     short loc_4DCB"], ["mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~<TAG>,<STR>", "mov~[rsp+0],0", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~r8,rsp", "call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 4, 1, 0, 5, 1, 1, 0, 2, 0.0, ["sub     rsp, 0D8h", "mov     [rsp+0D8h+var_98], r8", "mov     [rsp+0D8h+var_90], r9", "test    al, al", "jz      short loc_4D75"], ["sub~rsp,0", "mov~[rsp+0],r8", "mov~[rsp+0],r9", "test~al,al", "jz~FOO"]], [0, 0, 3, 0, 0, 8, 0, 0, 1, 2, 0.0, ["movaps  [rsp+0D8h+var_88], xmm0", "movaps  [rsp+0D8h+var_78], xmm1", "movaps  [rsp+0D8h+var_68], xmm2", "movaps  [rsp+0D8h+var_58], xmm3", "movaps  [rsp+0D8h+var_48], xmm4", "movaps  [rsp+0D8h+var_38], xmm5", "movaps  [rsp+0D8h+var_28], xmm6", "movaps  [rsp+0D8h+var_18], xmm7"], ["movaps~[rsp+0],xmm0", "movaps~[rsp+0],xmm1", "movaps~[rsp+0],xmm2", "movaps~[rsp+0],xmm3", "movaps~[rsp+0],xmm4", "movaps~[rsp+0],xmm5", "movaps~[rsp+0],xmm6", "movaps~[rsp+0],xmm7"]], [1, 0, 0, 1, 0, 2, 0, 0, 2, -1, 0.0, ["add     rsp, 0D8h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 3, 4, 12, 5, 5, 1, 30, 0.06667, 1, 2], "succs": [[3, 4], [0, 2], [0], [], []], "fname": "version_etc", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[10, 0, 0, 0, 6, 30, 0, 6, 0, 0, 0.0, ["push    rbx", "mov     edx, 5; category", "lea     rsi, aReportBugsToS; \"\\nReport bugs to: %s\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "lea     rdx, aBugCoreutilsGn; \"bug-coreutils@gnu.org\"", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     edx, 5; category", "lea     rsi, aSHomePageS; \"%s home page: <%s>\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, package; \"GNU \"", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aGeneralHelpUsi; \"General help using GNU software: <https\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "pop     rbx", "retn"], ["push~rbx", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "pop~rbx", "retn"]]], "func_feature": [6, 0, 6, 0, 1, 0, 0, 30, 0.0, 7, 0], "succs": [[]], "fname": "emit_bug_reporting_address", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_4E75"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    _malloc", "test    p, p", "jnz     short loc_4E73"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 4, 9, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "xmalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[2, 0, 2, 2, 0, 10, 2, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rax, n", "mul     s", "seto    dl", "movzx   edx, dl", "test    rax, rax", "mov     eax, 1", "cmovns  rax, rdx", "test    al, al", "jnz     short loc_4EA8"], ["sub~rsp,0", "mov~rax,n", "mul~,s", "seto~dl", "movzx~edx,dl", "test~rax,rax", "mov~eax,0", "cmovns~rax,rdx", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 0, 2, 1, 4, 0, 1, 0, -1, 0.0, ["imul    n, s; n", "call    xmalloc", "add     rsp, 8", "retn"], ["imul~n,s", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [2, 2, 3, 0, 3, 2, 0, 15, 0.0, 0, 4], "succs": [[1, 2], [], []], "fname": "xnmalloc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[2, 0, 0, 2, 1, 4, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    xmalloc", "add     rsp, 8", "retn"], ["sub~rsp,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 4, 0.0, 0, 2], "succs": [[]], "fname": "xcharalloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 6, 0, 0, 4, 1, 1, 0, 0, 0.0, ["push    rbx", "mov     rbx, n", "test    n, n", "jnz     short loc_4EC9"], ["push~rbx", "mov~rbx,n", "test~n,n", "jnz~FOO"]], [1, 0, 1, 0, 1, 3, 0, 2, 0, -1, 0.016666666666666666, ["call    _free", "mov     eax, 0", "jmp     short loc_4EDB"], ["call~FOO", "mov~eax,0", "jmp~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 0, 3, 0.03333333333333333, ["test    p, p", "jnz     short loc_4EDD"], ["test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 0, 1, 0.1, ["test    n, n", "jnz     short loc_4EE9"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 4, 1, 2, 0, 2, 0.18333333333333332, ["mov     n, rbx; size", "call    _realloc", "test    p, p", "jnz     short loc_4EDB"], ["mov~n,rbx", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]]], "func_feature": [3, 4, 8, 0, 7, 9, 5, 18, 0.04762, 0, 0], "succs": [[2, 5], [6], [1, 5], [], [3, 6], [4, 6], []], "fname": "xrealloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [2, 0, 2, 2, 0, 11, 2, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rcx, s", "mov     rax, n", "mul     rcx", "seto    dl", "movzx   edx, dl", "test    rax, rax", "mov     eax, 1", "cmovns  rax, rdx", "test    al, al", "jnz     short loc_4F1F"], ["sub~rsp,0", "mov~rcx,s", "mov~rax,n", "mul~,rcx", "seto~dl", "movzx~edx,dl", "test~rax,rax", "mov~eax,0", "cmovns~rax,rdx", "test~al,al", "jnz~FOO"]], [1, 0, 0, 2, 1, 4, 0, 1, 1, 0, 0.0, ["imul    n, s; n", "call    xrealloc", "add     rsp, 8", "retn"], ["imul~n,s", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [2, 2, 3, 0, 3, 2, 0, 16, 0.0, 0, 4], "succs": [[], [0, 2], []], "fname": "xnrealloc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[1, 0, 2, 1, 0, 9, 2, 1, 0, 0, 0.09821428571428571, ["mov     rax, n", "mul     s", "seto    dl", "movzx   edx, dl", "test    rax, rax", "mov     eax, 1", "cmovns  rax, rdx", "test    al, al", "jz      short loc_4F55"], ["mov~rax,n", "mul~,s", "seto~dl", "movzx~edx,dl", "test~rax,rax", "mov~eax,0", "cmovns~rax,rdx", "test~al,al", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 1, -1, 0.0625, ["test    n, n", "jnz     short loc_4F8A"], ["test~n,n", "jnz~FOO"]], [1, 1, 3, 1, 0, 7, 1, 0, 2, -1, 0.0, ["mov     eax, 80h", "mov     edx, 0", "div     s", "test    n, n", "setz    r8b", "movzx   r8d, r8b", "lea     rcx, [r8+n]"], ["mov~eax,<STR>", "mov~edx,0", "div~,s", "test~n,n", "setz~r8b", "movzx~r8d,r8b", "lea~rcx,<TAG>"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [2, 0, 3, 1, 0, 5, 0, 0, 1, 1, 0.04464285714285714, ["mov     rax, 5555555555555554h", "mov     edx, 0", "div     s", "cmp     rax, n", "jbe     short loc_4FAB"], ["mov~rax,0", "mov~edx,0", "div~,s", "cmp~rax,n", "jbe~FOO"]], [1, 0, 8, 1, 0, 5, 1, 1, 0, 2, 0.0, ["sub     rsp, 8", "mov     r9, s", "mov     rcx, [pn]", "test    p, p", "jz      short loc_4F69"], ["sub~rsp,0", "mov~r9,s", "mov~rcx,<TAG>", "test~p,p", "jz~FOO"]], [1, 0, 0, 2, 1, 6, 0, 1, 3, -1, 0.0, ["mov     [pn], n", "imul    n, s", "mov     pn, rcx; n", "call    xrealloc", "add     rsp, 8", "retn"], ["mov~<TAG>,n", "imul~n,s", "mov~pn,rcx", "call~FOO", "add~rsp,0", "retn"]], [1, 0, 1, 0, 0, 3, 0, 0, 2, -1, 0.026785714285714284, ["mov     rax, n", "shr     rax, 1", "lea     n, [rax+n+1]"], ["mov~rax,n", "shr~rax,0", "lea~n,[rax+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [3, 5, 6, 0, 9, 10, 0, 39, 0.02579, 0, 6], "succs": [[3, 6], [0, 2], [0], [], [8, 7], [1, 4], [], [6], []], "fname": "x2nrealloc", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[1, 0, 0, 1, 1, 5, 0, 1, 0, 0, 0.0, ["mov     [pn], rax", "mov     pn, rax; n", "call    xrealloc", "add     rsp, 8", "retn"], ["mov~<TAG>,rax", "mov~pn,rax", "call~FOO", "add~rsp,0", "retn"]], [0, 1, 2, 0, 0, 5, 2, 0, 1, -1, 0.06666666666666667, ["test    rax, rax", "mov     edx, 80h", "cmovz   rax, rdx", "test    rax, rax", "jns     short loc_4FD6"], ["test~rax,rax", "mov~edx,<STR>", "cmovz~rax,rdx", "test~rax,rax", "jns~FOO"]], [1, 0, 1, 0, 0, 3, 0, 0, 2, -1, 0.03333333333333333, ["mov     rdx, rax", "shr     rdx, 1", "lea     rax, [rdx+rax+1]"], ["mov~rdx,rax", "shr~rdx,0", "lea~rax,[rdx+0]"]], [1, 0, 3, 0, 0, 3, 0, 1, 1, 1, 0.06666666666666667, ["mov     rdx, 5555555555555553h", "cmp     rax, rdx", "ja      short loc_4FFC"], ["mov~rdx,0", "cmp~rax,rdx", "ja~FOO"]], [1, 0, 6, 1, 0, 4, 1, 1, 0, 2, 0.0, ["sub     rsp, 8", "mov     rax, [pn]", "test    p, p", "jz      short loc_4FE6"], ["sub~rsp,0", "mov~rax,<TAG>", "test~p,p", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [3, 3, 5, 0, 7, 7, 0, 22, 0.02381, 0, 2], "succs": [[], [0, 5], [0], [2, 6], [1, 3], [], []], "fname": "x2realloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[1, 0, 0, 0, 2, 9, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, s", "call    xmalloc", "mov     rdx, s; n", "mov     esi, 0; c", "mov     rdi, rax; s", "call    _memset", "pop     s", "retn"], ["push~rbx", "mov~rbx,s", "call~FOO", "mov~rdx,s", "mov~esi,0", "mov~rdi,rax", "call~FOO", "pop~s", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 0, 9, 0.0, 0, 0], "succs": [[]], "fname": "xzalloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[2, 0, 3, 2, 0, 10, 2, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rax, n", "mul     s", "seto    dl", "movzx   edx, dl", "test    rax, rax", "mov     eax, 1", "cmovns  rax, rdx", "test    al, al", "jnz     short loc_504B"], ["sub~rsp,0", "mov~rax,n", "mul~,s", "seto~dl", "movzx~edx,dl", "test~rax,rax", "mov~eax,0", "cmovns~rax,rdx", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 2, 0, 1, 3, 1, 2, 0, 1, 0.16666666666666666, ["call    _calloc", "test    p, p", "jz      short loc_504B"], ["call~FOO", "test~p,p", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [2, 3, 4, 0, 4, 4, 0, 16, 0.04167, 0, 3], "succs": [[1, 2], [], [1, 3], []], "fname": "xcalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[2, 0, 0, 2, 2, 15, 0, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbp, p", "mov     rbx, s", "mov     p, s; n", "call    xmalloc", "mov     rdx, s; n", "mov     rsi, p; src", "mov     rdi, rax; dest", "call    _memcpy", "add     rsp, 8", "pop     s", "pop     p", "retn"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,p", "mov~rbx,s", "mov~p,s", "call~FOO", "mov~rdx,s", "mov~rsi,p", "mov~rdi,rax", "call~FOO", "add~rsp,0", "pop~s", "pop~p", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 2, 15, 0.0, 0, 2], "succs": [[]], "fname": "xmemdup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[4, 0, 0, 2, 1, 11, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rdx, string", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "repne scasb", "not     rcx", "mov     rsi, rcx; s", "mov     rdi, rdx; p", "call    xmemdup", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rdx,string", "mov~rcx,0", "mov~eax,0", "scasb~<TAG>,", "not~rcx", "mov~rsi,rcx", "mov~rdi,rdx", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 11, 0.0, 0, 2], "succs": [[]], "fname": "xstrdup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[5, 0, 0, 1, 3, 12, 0, 3, 0, 0, 0.0, ["sub     rsp, 8", "mov     edx, 5; category", "lea     rsi, aMemoryExhauste; \"memory exhausted\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     edi, cs:exit_failure; status", "mov     rcx, rax", "lea     rdx, format+4; format", "mov     esi, 0; errnum", "mov     eax, 0", "call    _error", "call    _abort"], ["sub~rsp,0", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~edi,<TAG>", "mov~rcx,rax", "lea~rdx,<TAG>", "mov~esi,0", "mov~eax,0", "call~FOO", "call~FOO"]]], "func_feature": [3, 0, 3, 0, 1, 0, 10, 12, 0.0, 3, 1], "succs": [[]], "fname": "xalloc_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 5, 0, 0, 2, 1, 1, 0, 0, 0.06666666666666667, ["test    n, n", "jz      short loc_513E"], ["test~n,n", "jz~FOO"]], [1, 1, 6, 1, 1, 19, 2, 1, 0, 2, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     rbx, pwc", "mov     r13, s", "mov     r12, n", "mov     rax, fs:28h", "mov     [rsp+38h+var_30], rax", "xor     eax, eax", "lea     rax, [rsp+38h+wc]", "test    pwc, pwc", "cmovz   rbx, rax", "mov     rdi, pwc; pwc", "call    _mbrtowc", "mov     rbp, rax", "cmp     ret, 0FFFFFFFFFFFFFFFDh", "jbe     short loc_513E"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rbx,pwc", "mov~r13,s", "mov~r12,n", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "test~pwc,pwc", "cmovz~rbx,rax", "mov~rdi,pwc", "call~FOO", "mov~rbp,rax", "cmp~ret,0", "jbe~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 1, 1, 0.26666666666666666, ["mov     rax, rbp", "mov     rdx, [rsp+38h+var_30]", "xor     rdx, fs:28h", "jnz     short loc_515C"], ["mov~rax,rbp", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [1, 0, 4, 0, 1, 4, 1, 2, 2, 2, 0.06666666666666667, ["mov     edi, 0; category", "call    hard_locale", "test    al, al", "jnz     short loc_513E"], ["mov~edi,0", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 3, 2, 0.0, ["movzx   eax, byte ptr [s+0]", "mov     [pwc], eax", "mov     ebp, 1"], ["movzx~eax,[yte ptr [s+0]", "mov~<TAG>,eax", "mov~ebp,0"]], [0, 1, 0, 1, 0, 6, 0, 0, 2, -1, 0.0, ["add     rsp, 18h", "pop     pwc", "pop     rbp", "pop     n", "pop     s", "retn"], ["add~rsp,<STR>", "pop~pwc", "pop~rbp", "pop~n", "pop~s", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 5, 6, 1, 7, 9, 1, 39, 0.05714, 1, 2], "succs": [[2, 3], [0, 2], [5, 6], [2, 4], [2], [], []], "fname": "rpl_mbrtowc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[1, 0, 4, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     eax, 0", "cmp     p1, p2", "jz      short locret_51A9"], ["mov~eax,0", "cmp~p1,p2", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 1, 1, 0, 3, 0, 0, 0, 1, 0.16666666666666666, ["movzx   eax, al", "movzx   edx, dl", "sub     eax, edx"], ["movzx~eax,al", "movzx~edx,dl", "sub~eax,edx"]], [4, 0, 4, 2, 0, 14, 1, 1, 0, 2, 0.16666666666666666, ["movzx   edx, byte ptr [p1]", "movzx   eax, dl", "sub     edx, 41h ; 'A'", "lea     ecx, [rax+20h]", "cmp     dl, 1Ah", "cmovb   eax, ecx", "movzx   ecx, byte ptr [p2]", "movzx   edx, cl", "sub     ecx, 41h ; 'A'", "lea     r9d, [rdx+20h]", "cmp     cl, 1Ah", "cmovb   edx, r9d", "test    al, al", "jz      short loc_51A1"], ["movzx~edx,<TAG>", "movzx~eax,dl", "sub~edx,0", "lea~ecx,[rax+0]", "cmp~dl,0", "cmovb~eax,ecx", "movzx~ecx,<TAG>", "movzx~edx,cl", "sub~ecx,0", "lea~r9d,[rdx+0]", "cmp~cl,0", "cmovb~edx,r9d", "test~al,al", "jz~FOO"]], [2, 0, 4, 2, 0, 4, 0, 1, 0, 2, 0.0, ["add     p1, 1", "add     p2, 1", "cmp     al, dl", "jz      short loc_516B"], ["add~p1,0", "add~p2,0", "cmp~al,dl", "jz~FOO"]]], "func_feature": [0, 1, 3, 0, 5, 7, 1, 25, 0.06667, 0, 5], "succs": [[1, 3], [], [1], [2, 4], [2, 3]], "fname": "c_strcasecmp", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.011904761904761904, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_5200"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 0, 0.047619047619047616, ["test    eax, eax", "jnz     short loc_5205"], ["test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, 0, 0.0, ["pop     rbx", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "pop~stream", "pop~r12", "retn"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 0, 0.07142857142857142, ["test    eax, eax", "jz      short loc_5200"], ["test~eax,eax", "jz~FOO"]], [1, 0, 2, 0, 0, 3, 1, 1, 2, 0, 0.047619047619047616, ["mov     eax, 0FFFFFFFFh", "test    r12, r12", "jnz     short loc_5200"], ["mov~eax,0", "test~r12,r12", "jnz~FOO"]], [1, 0, 1, 0, 1, 6, 0, 2, 3, 0, 0.0, ["call    ___errno_location", "cmp     dword ptr [rax], 9", "setnz   al", "movzx   eax, al", "neg     eax", "jmp     short loc_5200"], ["call~FOO", "cmp~<TAG>,0", "setnz~al", "movzx~eax,al", "neg~eax", "jmp~FOO"]], [2, 0, 1, 0, 1, 3, 0, 1, 2, 0, 0.011904761904761904, ["call    ___errno_location", "mov     dword ptr [rax], 0", "mov     eax, 0FFFFFFFFh"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0"]], [0, 1, 7, 0, 2, 12, 2, 3, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbp, stream", "call    ___fpending", "mov     r12, rax", "mov     ebx, [stream+0]", "and     ebx, 20h", "mov     rdi, stream; fp", "call    rpl_fclose", "test    ebx, ebx", "jnz     short loc_51EC"], ["push~r12", "push~rbp", "push~rbx", "mov~rbp,stream", "call~FOO", "mov~r12,rax", "mov~ebx,[stream+0]", "and~ebx,<STR>", "mov~rdi,stream", "call~FOO", "test~ebx,ebx", "jnz~FOO"]]], "func_feature": [4, 5, 10, 0, 8, 11, 2, 34, 0.02381, 0, 0], "succs": [[2], [0, 6], [], [2, 4], [2, 5], [2], [2], [1, 3]], "fname": "close_stream", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[2, 0, 1, 0, 0, 8, 1, 0, 0, 0, 0.0, ["mov     ecx, 6", "lea     rdi, aPosix; \"POSIX\"", "mov     rsi, rdx", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "setnz   al"], ["mov~ecx,0", "lea~rdi,<TAG>", "mov~rsi,rdx", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "setnz~al"]], [3, 0, 2, 0, 0, 9, 1, 1, 1, 1, 0.16666666666666666, ["mov     ecx, 2", "lea     rdi, aC; \"C\"", "mov     rsi, p", "repe cmpsb", "setnbe  cl", "sbb     cl, 0", "mov     eax, 0", "test    cl, cl", "jz      short loc_5262"], ["mov~ecx,0", "lea~rdi,<TAG>", "mov~rsi,p", "cmpsb~<TAG>,<TAG>", "setnbe~cl", "sbb~cl,0", "mov~eax,0", "test~cl,cl", "jz~FOO"]], [3, 0, 3, 1, 1, 7, 1, 2, 0, 1, 0.0, ["sub     rsp, 8", "mov     esi, 0; locale", "call    _setlocale", "mov     rdx, rax", "mov     eax, 1", "test    p, p", "jz      short loc_5262"], ["sub~rsp,0", "mov~esi,0", "call~FOO", "mov~rdx,rax", "mov~eax,0", "test~p,p", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [1, 3, 3, 0, 4, 5, 1, 26, 0.04167, 2, 2], "succs": [[3], [0, 3], [1, 3], []], "fname": "hard_locale", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[2, 0, 3, 1, 1, 5, 1, 2, 0, 0, 0.0, ["sub     rsp, 8", "mov     edi, 0Eh; item", "call    _nl_langinfo", "test    codeset, codeset", "jz      short loc_528D"], ["sub~rsp,0", "mov~edi,0", "call~FOO", "test~codeset,codeset", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.08333333333333333, ["lea     codeset, aAscii; \"ASCII\"", "jmp     short loc_5288"], ["lea~codeset,<TAG>", "jmp~FOO"]], [1, 0, 1, 0, 0, 3, 0, 0, 0, -1, 0.08333333333333333, ["cmp     byte ptr [codeset], 0", "lea     rdx, aAscii; \"ASCII\"", "cmovz   codeset, rdx"], ["cmp~<TAG>,0", "lea~rdx,<TAG>", "cmovz~codeset,rdx"]]], "func_feature": [1, 1, 3, 0, 4, 4, 1, 12, 0.04167, 1, 2], "succs": [[2, 3], [], [1], [1]], "fname": "locale_charset", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 8, 0, 1, 7, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, fp", "call    _fileno", "test    eax, eax", "js      short loc_5300"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,fp", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 1, 0, 1, 3, 0, 2, 0, 1, 0.017857142857142856, ["mov     rdi, fp; stream", "call    _fclose", "jmp     short loc_5312"], ["mov~rdi,fp", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 0, 1, 0.038690476190476185, ["mov     rdi, fp; stream", "call    _fclose"], ["mov~rdi,fp", "call~FOO"]], [3, 0, 5, 0, 2, 8, 0, 3, 0, 2, 0.023809523809523808, ["mov     rdi, fp; stream", "call    _fileno", "mov     edx, 1; whence", "mov     esi, 0; offset", "mov     edi, eax; fd", "call    _lseek", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      short loc_530A"], ["mov~rdi,fp", "call~FOO", "mov~edx,0", "mov~esi,0", "mov~edi,eax", "call~FOO", "cmp~rax,0", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 1, 2, 0, 2, 0.1369047619047619, ["mov     rdi, fp; stream", "call    rpl_fflush", "test    eax, eax", "jz      short loc_530A"], ["mov~rdi,fp", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 6, 0, 1, 4, 1, 2, 0, 3, 0.08928571428571427, ["mov     rdi, fp; fp", "call    ___freading", "test    eax, eax", "jz      short loc_52D1"], ["mov~rdi,fp", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 2, 0, 2, 7, 1, 3, 0, 1, 0.0863095238095238, ["call    ___errno_location", "mov     rbp, rax", "mov     r12d, [rax]", "mov     rdi, fp; stream", "call    _fclose", "test    r12d, r12d", "jz      short loc_5312"], ["call~FOO", "mov~rbp,rax", "mov~r12d,<TAG>", "mov~rdi,fp", "call~FOO", "test~r12d,r12d", "jz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["pop     fp", "pop     rbp", "pop     r12", "retn"], ["pop~fp", "pop~rbp", "pop~r12", "retn"]], [1, 0, 1, 0, 0, 3, 0, 1, 0, 1, 0.0, ["mov     [rbp+0], r12d", "mov     eax, 0FFFFFFFFh", "jmp     short loc_5312"], ["mov~[rbp+0],r12d", "mov~eax,0", "jmp~FOO"]]], "func_feature": [9, 4, 16, 0, 9, 13, 1, 42, 0.04365, 0, 0], "succs": [[1, 5], [7], [7], [2, 4], [2, 6], [3, 4], [8, 7], [], [7]], "fname": "rpl_fclose", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 1, 0, 1, 3, 0, 2, 0, 0, 0.06666666666666667, ["mov     rdi, stream; stream", "call    _fflush", "jmp     short loc_5331"], ["mov~rdi,stream", "call~FOO", "jmp~FOO"]], [2, 0, 2, 0, 1, 5, 0, 2, 3, 0, 0.0, ["mov     edx, 1; whence", "mov     esi, 0; offset", "mov     rdi, stream; fp", "call    rpl_fseeko", "jmp     short loc_533B"], ["mov~edx,0", "mov~esi,0", "mov~rdi,stream", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 1, 1, 2, 1, 0.13333333333333333, ["test    dword ptr [stream], 100h", "jnz     short loc_5345"], ["test~<TAG>,0", "jnz~FOO"]], [0, 0, 5, 0, 1, 3, 1, 2, 1, 2, 0.1, ["call    ___freading", "test    eax, eax", "jnz     short loc_5333"], ["call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 6, 0, 0, 4, 1, 1, 0, 3, 0.0, ["push    rbx", "mov     rbx, stream", "test    stream, stream", "jz      short loc_5329"], ["push~rbx", "mov~rbx,stream", "test~stream,stream", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 1, -1, 0.06666666666666667, ["mov     rdi, stream; stream", "call    _fflush"], ["mov~rdi,stream", "call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, -1, 0.0, ["pop     stream", "retn"], ["pop~stream", "retn"]]], "func_feature": [4, 3, 9, 0, 7, 9, 1, 21, 0.05238, 0, 0], "succs": [[6], [0], [0, 1], [2, 5], [3, 5], [6], []], "fname": "rpl_fflush", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["pop     fp", "pop     offset", "pop     whence", "retn"], ["pop~fp", "pop~offset", "pop~whence", "retn"]], [2, 0, 1, 0, 0, 4, 1, 1, 4, -1, 0.011904761904761904, ["and     dword ptr [fp], 0FFFFFFEFh", "mov     [fp+90h], pos", "mov     eax, 0", "jmp     short loc_537E"], ["and~<TAG>,0", "mov~[fp+0],pos", "mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, 0, 0.011904761904761904, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_537E"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 1, 0, 1, 4, 0, 1, 1, -1, 0.07142857142857142, ["mov     edx, r12d; whence", "mov     offset, rbp; off", "mov     fp, rbx; stream", "call    _fseeko"], ["mov~edx,r12d", "mov~offset,rbp", "mov~fp,rbx", "call~FOO"]], [1, 0, 3, 0, 2, 7, 0, 3, 3, 1, 0.14285714285714285, ["call    _fileno", "mov     edx, r12d; whence", "mov     rsi, offset; offset", "mov     edi, eax; fd", "call    _lseek", "cmp     pos, 0FFFFFFFFFFFFFFFFh", "jz      short loc_53BD"], ["call~FOO", "mov~edx,r12d", "mov~rsi,offset", "mov~edi,eax", "call~FOO", "cmp~pos,0", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 2, 0.14285714285714285, ["cmp     qword ptr [rdi+48h], 0", "jnz     short loc_5370"], ["cmp~[word ptr [rdi+0],0", "jnz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 1, 3, 0.09523809523809523, ["mov     rax, [rdi+20h]", "cmp     [rdi+28h], rax", "jnz     short loc_5370"], ["mov~rax,[rdi+0]", "cmp~[rdi+0],rax", "jnz~FOO"]], [0, 0, 7, 0, 0, 9, 0, 1, 0, 4, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, fp", "mov     rbp, offset", "mov     r12d, edx", "mov     rax, [fp+8]", "cmp     [fp+10h], rax", "jz      short loc_5383"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,fp", "mov~rbp,offset", "mov~r12d,edx", "mov~rax,[fp+0]", "cmp~[fp+0],rax", "jz~FOO"]]], "func_feature": [3, 1, 9, 0, 8, 11, 1, 35, 0.05952, 0, 0], "succs": [[], [0], [0], [0], [1, 2], [3, 4], [3, 5], [3, 6]], "fname": "rpl_fseeko", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 0, 0, 0, 0.16666666666666666, ["xor     ebx, ebx", "nop     dword ptr [rax+rax+00000000h]"], ["xor~ebx,ebx", "nop~[word ptr [rax+0]"]], [2, 0, 3, 2, 1, 17, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15, rdx", "push    r13", "push    r12", "lea     r12, __frame_dummy_init_array_entry", "push    rbp", "lea     rbp, __do_global_dtors_aux_fini_array_entry", "push    rbx", "mov     r13d, edi", "mov     r14, rsi", "sub     rbp, r12", "sub     rsp, 8", "sar     rbp, 3", "call    _init_proc", "test    rbp, rbp", "jz      short loc_5426"], ["push~r15", "push~r14", "mov~r15,rdx", "push~r13", "push~r12", "lea~r12,<TAG>", "push~rbp", "lea~rbp,<TAG>", "push~rbx", "mov~r13d,edi", "mov~r14,rsi", "sub~rbp,r12", "sub~rsp,0", "sar~rbp,0", "call~FOO", "test~rbp,rbp", "jz~FOO"]], [1, 0, 2, 1, 1, 7, 0, 2, 2, 1, 0.16666666666666666, ["mov     rdx, r15", "mov     rsi, r14", "mov     edi, r13d", "call    qword ptr [r12+rbx*8]", "add     rbx, 1", "cmp     rbp, rbx", "jnz     short loc_5410"], ["mov~rdx,r15", "mov~rsi,r14", "mov~edi,r13d", "call~<TAG>", "add~rbx,0", "cmp~rbp,rbx", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 5, 0, 34, 0.08333, 2, 4], "succs": [[2], [0, 3], [2, 3], []], "fname": "__libc_csu_init", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_csu_fini", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rdx, cs:__dso_handle", "xor     esi, esi", "jmp     ___cxa_atexit"], ["mov~rdx,<TAG>", "xor~esi,esi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 1, 3, 0.0, 1, 0], "succs": [[1], []], "fname": "atexit", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[2, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0.0, ["sub     rsp, 8; _fini", "add     rsp, 8", "retn"], ["sub~rsp,0", "add~rsp,0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 2], "succs": [[]], "fname": "term_proc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn free:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn abort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __errno_location:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strncmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fpending:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn write:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "write", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn textdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fclose:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn bindtextdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn stpcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "stpcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dcgettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_get_mb_cur_max:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __stack_chk_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getopt_long:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbrtowc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strrchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn lseek:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ioctl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn close:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn posix_fadvise:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "posix_fadvise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn read:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "read", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __libc_start_main:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_start_main", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fputs_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn calloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fileno:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn malloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fflush:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn nl_langinfo:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __freading:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn realloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn setlocale:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __printf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memmove:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn error:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn open:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fseeko:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __cxa_atexit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getpagesize:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getpagesize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fwrite:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbsinit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswprint:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp___cxa_finalize:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp___cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_b_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_cat.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __gmon_start__:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__gmon_start__", "n_num": 1}
