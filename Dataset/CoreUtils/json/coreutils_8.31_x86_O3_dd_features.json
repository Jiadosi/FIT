{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    rax ; __gmon_start__"], ["call~rax"]], [1, 0, 2, 1, 0, 4, 1, 1, 0, 1, 0.0, ["sub     rsp, 8; _init", "mov     rax, cs:__gmon_start___ptr", "test    rax, rax", "jz      short loc_1A12"], ["sub~rsp,0", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 3, 1, 7, 0.0, 1, 2], "succs": [[2], [0, 2], []], "fname": "init_proc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0.0, ["push    cs:qword_215D70", "jmp     cs:qword_215D78"], ["push~<TAG>", "jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 73, 2, 0.0, 2, 0], "succs": [[]], "fname": "sub_1A20", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_toupper_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_toupper_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getenv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "getenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigprocmask_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigprocmask", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__snprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 8, 1, 0.0, 1, 0], "succs": [[]], "fname": "__snprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:raise_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "raise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:free_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 52, 1, 0.0, 1, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:abort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 20, 1, 0.0, 1, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__errno_location_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 64, 1, 0.0, 1, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fdatasync_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fdatasync", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:error_at_line_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "error_at_line", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strncmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fpending_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigaction_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigaction", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:localeconv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "localeconv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fcntl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:clock_gettime_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "clock_gettime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:write_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "write", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:textdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fclose_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:bindtextdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dcgettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 134, 1, 0.0, 1, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_get_mb_cur_max_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strlen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 22, 1, 0.0, 1, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__stack_chk_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 39, 1, 0.0, 1, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getopt_long_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbrtowc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dup2_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "dup2", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__overflow_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "__overflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strrchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ftruncate_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "ftruncate", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:lseek_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 8, 1, 0.0, 1, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__assert_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__strtoul_internal_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__strtoul_internal", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 25, 1, 0.0, 1, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ioctl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:close_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:posix_fadvise_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "posix_fadvise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:read_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "read", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fputs_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 28, 1, 0.0, 1, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:calloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__memcpy_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__memcpy_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigemptyset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigemptyset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 19, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fileno_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:malloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 17, 1, 0.0, 1, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fflush_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:nl_langinfo_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__freading_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:realloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 14, 1, 0.0, 1, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:setlocale_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__printf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memmove_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:error_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fsync_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fsync", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:open_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fseeko_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dcngettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "dcngettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_atexit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpagesize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpagesize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigismember_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigismember", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 7, 1, 0.0, 1, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fwrite_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 44, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbsinit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswprint_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigaddset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigaddset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_tolower_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_tolower_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_b_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__sprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "__sprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_finalize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [4, 2, 4, 0, 2, 1, 2, 20, 0.0, 2, 1], "succs": [[0]], "fname": "cleanup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[2, 0, 35, 0, 1, 6, 1, 2, 0, 0, 0.017733003416990693, ["mov     rdx, [rsp+118h+act]; stat_buf", "mov     esi, 1; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "jnz     loc_39EE"], ["mov~rdx,[rsp+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 36, 0, 0, 2, 0, 1, 36, -1, 0.07277306468716861, ["cmp     cs:final_op_was_seek, 0", "jnz     loc_37F7"], ["cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 19, 0, 1, 6, 0, 1, 39, -1, 0.007032814893366325, ["mov     rsi, cs:output_file; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aErrorWritingS; \"error writing %s\"", "mov     rbx, rax", "mov     edx, 5; category"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0"]], [0, 0, 20, 0, 0, 1, 0, 1, 38, -1, 0.0016974490397077882, ["jmp     loc_2FFB"], ["jmp~FOO"]], [0, 0, 144, 1, 1, 6, 0, 2, 39, -1, 0.02372378343348651, ["mov     rsi, rbx; buf", "mov     rdi, r14; fd", "call    iwrite", "add     cs:w_bytes, rax", "cmp     rax, rbx", "jz      loc_3428"], ["mov~rsi,rbx", "mov~rdi,r14", "call~FOO", "add~<TAG>,rax", "cmp~rax,rbx", "jz~FOO"]], [2, 0, 144, 0, 1, 5, 0, 1, 28, -1, 0.19942632850241546, ["lea     r13, trans_table", "call    alloc_obuf", "mov     dword ptr [rsp+118h+exit_status], 0", "mov     [rsp+118h+var_118], 0", "nop     dword ptr [rax+00h]"], ["lea~r13,<TAG>", "call~FOO", "mov~[word ptr [rsp+0],0", "mov~<TAG>,0", "nop~[word ptr [rax+0]"]], [0, 0, 145, 0, 1, 2, 0, 2, 27, -1, 0.15162896194179332, ["call    alloc_ibuf", "jmp     loc_2800"], ["call~FOO", "jmp~FOO"]], [1, 0, 146, 0, 0, 2, 0, 1, 43, -1, 0.0476942677035466, ["cmp     cs:ibuf, 0", "jz      loc_3782"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 1, 33, 0, 0, 4, 1, 1, 38, -1, 0.009532962177447861, ["mov     eax, [rsp+118h+stdout_stat.st_mode]", "and     eax, 0F000h", "cmp     eax, 8000h", "jnz     loc_32E5"], ["mov~eax,[rsp+0]", "and~eax,<STR>", "cmp~eax,0", "jnz~FOO"]], [1, 0, 365, 0, 1, 21, 1, 2, 2, 10, 0.01075173795216213, ["movdqa  xmm0, xmmword ptr cs:caught_signals.__val", "lea     rdi, caught_signals; set", "mov     esi, 0Ah; signo", "movups  xmmword ptr [rsp+118h+stdout_stat.st_ino], xmm0", "movdqa  xmm0, xmmword ptr cs:caught_signals.__val+10h", "movups  xmmword ptr [rsp+118h+stdout_stat.st_mode], xmm0", "movdqa  xmm0, xmmword ptr cs:caught_signals.__val+20h", "movups  xmmword ptr [rsp+118h+stdout_stat.st_rdev], xmm0", "movdqa  xmm0, xmmword ptr cs:caught_signals.__val+30h", "movups  xmmword ptr [rsp+118h+stdout_stat.st_blksize], xmm0", "movdqa  xmm0, xmmword ptr cs:caught_signals.__val+40h", "movups  xmmword ptr [rsp+118h+stdout_stat.st_atim.tv_sec], xmm0", "movdqa  xmm0, xmmword ptr cs:caught_signals.__val+50h", "movups  xmmword ptr [rsp+118h+stdout_stat.st_mtim.tv_sec], xmm0", "movdqa  xmm0, xmmword ptr cs:caught_signals.__val+60h", "movups  xmmword ptr [rsp+118h+stdout_stat.st_ctim.tv_sec], xmm0", "movdqa  xmm0, xmmword ptr cs:caught_signals.__val+70h", "movups  xmmword ptr [rsp+118h+stdout_stat.__glibc_reserved], xmm0", "call    _sigismember", "test    eax, eax", "jz      short loc_2050"], ["movdqa~xmm0,<TAG>", "lea~rdi,<TAG>", "mov~esi,0", "movups~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 367, 0, 1, 8, 1, 2, 1, 11, 0.005405325792388359, ["lea     rax, [rsp+118h+stdout_stat]", "xor     esi, esi; act", "mov     edi, 2; sig", "mov     rdx, rax; oact", "mov     [rsp+118h+act], rax", "call    _sigaction", "cmp     [rsp+118h+stdout_stat.st_dev], 1", "jz      short loc_1F9F"], ["lea~rax,[rsp+0]", "xor~esi,esi", "mov~edi,0", "mov~rdx,rax", "mov~[rsp+0],rax", "call~FOO", "cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 366, 0, 1, 3, 0, 1, 2, 11, 0.0, ["lea     rdi, caught_signals; set", "mov     esi, 2; signo", "call    _sigaddset"], ["lea~rdi,<TAG>", "mov~esi,0", "call~FOO"]], [1, 0, 144, 0, 0, 2, 0, 1, 29, -1, 0.24200615647460821, ["cmp     cs:status_level, 4", "jz      loc_29B7"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 144, 0, 0, 2, 1, 1, 44, -1, 0.0062374808530694, ["test    rbx, rbx", "jz      loc_2820"], ["test~rbx,rbx", "jz~FOO"]], [1, 0, 144, 0, 0, 2, 1, 1, 39, -1, 0.04375441852244609, ["test    byte ptr cs:conversions_mask+1, 4", "jz      loc_2820"], ["test~<TAG>,0", "jz~FOO"]], [1, 0, 144, 0, 0, 2, 0, 1, 40, -1, 0.027067132084364322, ["cmp     [rsp+118h+var_118], 0", "jnz     loc_2820"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 144, 0, 1, 4, 0, 2, 42, -1, 0.007165370566749146, ["mov     rsi, rbx; nread", "mov     rdi, r14; buf", "call    copy_with_block", "jmp     loc_2820"], ["mov~rsi,rbx", "mov~rdi,r14", "call~FOO", "jmp~FOO"]], [1, 0, 144, 1, 0, 2, 0, 1, 41, -1, 0.005968687404265347, ["add     cs:w_partial, 1", "jmp     loc_2820"], ["add~<TAG>,0", "jmp~FOO"]], [1, 0, 144, 1, 0, 2, 0, 1, 41, -1, 0.005968687404265347, ["add     cs:w_full, 1", "jmp     loc_2820"], ["add~<TAG>,0", "jmp~FOO"]], [0, 0, 18, 0, 2, 9, 3, 2, 39, -1, 0.00889964062684105, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+invalid]", "mov     rcx, rbx", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    nl_error"], ["xor~edi,edi", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~rcx,rbx", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO"]], [2, 0, 19, 0, 1, 7, 0, 2, 41, -1, 0.00016201248969011428, ["mov     rsi, cs:output_file; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     edx, 5", "mov     rbx, rax", "lea     rsi, aFsyncFailedFor; \"fsync failed for %s\"", "jmp     loc_301B"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~edx,0", "mov~rbx,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [2, 0, 19, 0, 1, 7, 0, 2, 38, -1, 0.003759426181218334, ["mov     rsi, cs:output_file; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     edx, 5", "mov     rbx, rax", "lea     rsi, aCannotFstatS; \"cannot fstat %s\"", "jmp     loc_301B"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~edx,0", "mov~rbx,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 17, 0, 0, 1, 0, 0, 40, -1, 0.006767703546600683, ["mov     dword ptr [rsp+118h+exit_status], 1"], ["mov~[word ptr [rsp+0],0"]], [2, 0, 18, 0, 3, 17, 3, 4, 42, -1, 9.20525509602922e-05, ["mov     rsi, cs:output_file; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aFailedToTrunca_0; \"failed to truncate to %ld bytes in outp\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     rbp, rax", "call    _dcgettext", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+invalid]", "mov     r8, rbp", "mov     rcx, rbx", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    nl_error", "jmp     loc_3038"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~rbp,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~r8,rbp", "mov~rcx,rbx", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 32, 0, 1, 7, 2, 2, 39, -1, 0.007077000117827265, ["xor     esi, esi; length", "mov     edx, 1; whence", "mov     edi, 1; fd", "call    _lseek", "test    rax, rax", "mov     rbx, rax", "js      loc_32E5"], ["xor~esi,esi", "mov~edx,0", "mov~edi,0", "call~FOO", "test~rax,rax", "mov~rbx,rax", "js~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 39, -1, 0.03556910569105691, ["cmp     cs:max_records, 0", "jz      loc_33A0"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 22, 0, 0, 2, 1, 1, 38, -1, 0.03818339813832921, ["and     esi, 8000h", "jz      loc_3040"], ["and~esi,0", "jz~FOO"]], [1, 0, 22, 0, 1, 4, 1, 2, 39, -1, 0.0051181218333922465, ["mov     edi, 1; fd", "call    _fsync", "test    eax, eax", "jz      loc_3040"], ["mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 31, 0, 0, 2, 0, 1, 40, -1, 0.0047425474254742545, ["cmp     rax, [rsp+118h+stdout_stat.st_size]", "jle     loc_32E5"], ["cmp~rax,[rsp+0]", "jle~FOO"]], [2, 0, 364, 0, 1, 7, 1, 1, 3, 10, 0.0, ["mov     rsi, [rsp+118h+act]; act", "lea     rax, siginfo_handler", "xor     edx, edx; oact", "mov     edi, 0Ah; sig", "mov     dword ptr [rsp+118h+stdout_stat.__glibc_reserved+10h], 0", "mov     [rsp+118h+stdout_stat.st_dev], rax", "call    _sigaction"], ["mov~rsi,[rsp+0]", "lea~rax,<TAG>", "xor~edx,edx", "mov~edi,0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],rax", "call~FOO"]], [1, 0, 144, 0, 1, 6, 1, 2, 33, -1, 0.06137327677624602, ["xor     edi, edi; int", "mov     rdx, cs:input_blocksize; size_t", "mov     rsi, r9; char *", "call    rax ; iread_fnc", "cmp     rax, 0", "jg      loc_28C3"], ["xor~edi,edi", "mov~rdx,<TAG>", "mov~rsi,r9", "call~rax", "cmp~rax,0", "jg~FOO"]], [0, 0, 144, 0, 0, 3, 0, 0, 32, -1, 0.12593525391775656, ["cmp     rbx, rcx", "mov     rax, cs:iread_fnc", "jb      loc_2D50"], ["cmp~rbx,rcx", "mov~rax,<TAG>", "jb~FOO"]], [1, 0, 359, 0, 0, 3, 0, 1, 24, 14, 0.001310828325674561, ["mov     cs:warn_partial_read, 0", "lea     rax, iread", "jmp     loc_23AD"], ["mov~<TAG>,0", "lea~rax,<TAG>", "jmp~FOO"]], [1, 0, 359, 0, 0, 4, 2, 1, 23, 15, 0.0010015317544479793, ["mov     eax, esi", "or      eax, ecx", "test    ah, 40h", "jnz     short loc_2C31"], ["mov~eax,esi", "or~eax,ecx", "test~ah,0", "jnz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 40, -1, 0.012555967950983857, ["cmp     cs:i_nocache, 0", "jnz     short loc_3060"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 40, -1, 0.018160127253446446, ["cmp     cs:max_bytes, 0", "jnz     loc_304E"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 30, 0, 1, 4, 1, 2, 41, -1, 0.0023933663249675976, ["mov     rdi, rax; fd", "call    iftruncate", "test    eax, eax", "jz      loc_32E5"], ["mov~rdi,rax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 144, 2, 0, 11, 2, 0, 30, -1, 0.24791224814422055, ["mov     r14, cs:max_bytes", "mov     rbx, cs:r_full", "xor     eax, eax", "add     rbx, cs:r_partial", "mov     rcx, cs:max_records", "mov     esi, cs:conversions_mask", "test    r14, r14", "setnz   al", "add     rax, rcx", "cmp     rbx, rax", "jnb     loc_3282"], ["mov~r14,<TAG>", "mov~rbx,<TAG>", "xor~eax,eax", "add~rbx,<TAG>", "mov~rcx,<TAG>", "mov~esi,<TAG>", "test~r14,r14", "setnz~al", "add~rax,rcx", "cmp~rbx,rax", "jnb~FOO"]], [1, 0, 144, 0, 1, 5, 0, 2, 43, -1, 0.008056439260044774, ["mov     rsi, rbx; nread", "mov     rdi, r14; buf", "call    copy_with_unblock", "cmp     cs:status_level, 4", "jnz     loc_282D"], ["mov~rsi,rbx", "mov~rdi,r14", "call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 144, 0, 1, 3, 0, 2, 30, -1, 0.002113526570048309, ["call    gethrxtime", "cmp     rax, cs:next_time", "jl      loc_282D"], ["call~FOO", "cmp~rax,<TAG>", "jl~FOO"]], [1, 0, 144, 1, 1, 4, 0, 2, 31, -1, 0.0, ["mov     rdi, rax; progress_time", "call    print_xfer_stats", "add     cs:next_time, 3B9ACA00h", "jmp     loc_282D"], ["mov~rdi,rax", "call~FOO", "add~<TAG>,0", "jmp~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 41, -1, 0.003788882997525627, ["cmp     cs:i_nocache_eof, 0", "jz      short loc_3069"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 363, 0, 1, 5, 1, 2, 3, 9, 0.016039236479321314, ["lea     rdi, caught_signals; set", "mov     esi, 2; signo", "call    _sigismember", "test    eax, eax", "jz      short loc_208D"], ["lea~rdi,<TAG>", "mov~esi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 6, 0, 1, 3, 2, 1, 41, -1, 0.003788882997525627, ["xor     esi, esi; len", "xor     edi, edi; fd", "call    invalidate_cache"], ["xor~esi,esi", "xor~edi,edi", "call~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 42, -1, 0.005132850241545894, ["cmp     cs:o_nocache, 0", "jnz     short loc_307B"], ["cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 144, 0, 0, 5, 1, 1, 31, -1, 0.12807087310003534, ["mov     eax, esi", "mov     r9, cs:ibuf", "and     eax, 500h", "cmp     eax, 500h", "jnz     short loc_289F"], ["mov~eax,esi", "mov~r9,<TAG>", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 43, -1, 4.418522446094026e-05, ["cmp     cs:o_nocache_eof, 0", "jz      short loc_3087"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 3, 0, 1, 3, 1, 1, 43, -1, 4.418522446094026e-05, ["xor     esi, esi; len", "mov     edi, 1; fd", "call    invalidate_cache"], ["xor~esi,esi", "mov~edi,0", "call~FOO"]], [2, 0, 362, 0, 1, 7, 1, 1, 4, 9, 0.0, ["mov     rsi, [rsp+118h+act]; act", "lea     rax, interrupt_handler", "xor     edx, edx; oact", "mov     edi, 2; sig", "mov     dword ptr [rsp+118h+stdout_stat.__glibc_reserved+10h], 0C0000000h", "mov     [rsp+118h+stdout_stat.st_dev], rax", "call    _sigaction"], ["mov~rsi,[rsp+0]", "lea~rax,<TAG>", "xor~edx,edx", "mov~edi,0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],rax", "call~FOO"]], [1, 1, 144, 0, 1, 9, 1, 1, 32, -1, 0.0, ["mov     rdx, cs:input_blocksize; n", "and     esi, 18h", "mov     eax, 20h ; ' '", "mov     rdi, r9; s", "cmovnz  esi, eax; c", "mov     [rsp+118h+var_100], rcx", "call    _memset", "mov     rcx, [rsp+118h+var_100]", "mov     r9, rax"], ["mov~rdx,<TAG>", "and~esi,0", "mov~eax,<STR>", "mov~rdi,r9", "cmovnz~esi,eax", "mov~[rsp+0],rcx", "call~FOO", "mov~rcx,[rsp+0]", "mov~r9,rax"]], [0, 0, 2, 0, 1, 5, 1, 2, 43, -1, 0.00521385648639095, ["call    finish_up", "mov     rdi, [rsp+118h+var_40]", "xor     rdi, fs:28h", "mov     eax, dword ptr [rsp+118h+exit_status]", "jnz     loc_3D01"], ["call~FOO", "mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "mov~eax,[word ptr [rsp+0]", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 42, -1, 0.012703252032520325, ["cmp     cs:o_nocache, 0", "jz      loc_3087"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 4, 0, 1, 5, 2, 2, 43, -1, 0.0025480146105808883, ["xor     esi, esi; len", "mov     edi, 1; fd", "call    invalidate_cache", "test    al, al", "jnz     loc_3087"], ["xor~esi,esi", "mov~edi,0", "call~FOO", "test~al,al", "jnz~FOO"]], [3, 0, 3, 0, 3, 18, 4, 4, 44, -1, 0.0, ["mov     rdx, cs:output_file; arg", "mov     esi, 3; s", "xor     edi, edi; n", "call    quotearg_n_style_colon", "lea     rsi, aFailedToDiscar; \"failed to discard cache for: %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbx, rax", "call    _dcgettext", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+invalid]", "mov     rcx, rbx", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    nl_error", "mov     dword ptr [rsp+118h+exit_status], 1", "jmp     loc_3087"], ["mov~rdx,<TAG>", "mov~esi,0", "xor~edi,edi", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbx,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~rcx,rbx", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 359, 0, 0, 3, 1, 1, 22, 12, 0.06485567892763325, ["movzx   edx, byte ptr [rdx]", "test    dl, dl", "jz      short loc_38B4"], ["movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [0, 0, 359, 0, 0, 3, 1, 1, 21, 13, 0.0635153937856514, ["movzx   esi, byte ptr [rcx]", "test    sil, sil", "jz      loc_38A4"], ["movzx~esi,<TAG>", "test~sil,sil", "jz~FOO"]], [1, 0, 359, 0, 0, 2, 0, 1, 23, 12, 0.0002798397549192883, ["cmp     dl, 3Dh ; '='", "jnz     loc_3539"], ["cmp~dl,0", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 44, -1, 0.0, ["add     rsp, 0E8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 197, 0, 0, 2, 1, 1, 33, -1, 0.07824466831624838, ["and     bl, 4", "jz      loc_2568"], ["and~bl,0", "jz~FOO"]], [1, 0, 200, 0, 0, 2, 1, 1, 32, -1, 0.08154383174266525, ["test    bl, 2", "jz      loc_30B9"], ["test~bl,0", "jz~FOO"]], [1, 0, 144, 0, 1, 6, 1, 2, 33, -1, 0.06137327677624602, ["xor     edi, edi; int", "mov     rdx, r14; size_t", "mov     rsi, r9; char *", "call    rax ; iread_fnc", "cmp     rax, 0", "jle     loc_2D68"], ["xor~edi,edi", "mov~rdx,r14", "mov~rsi,r9", "call~rax", "cmp~rax,0", "jle~FOO"]], [1, 0, 359, 1, 0, 3, 0, 1, 12, 7, 0.1493103206287817, ["add     r14, 8", "cmp     r14, rbx", "jnz     short loc_2268"], ["add~r14,0", "cmp~r14,rbx", "jnz~FOO"]], [0, 0, 359, 0, 0, 2, 0, 1, 13, 8, 0.004947878762675095, ["mov     cs:output_file, r8", "jmp     loc_22C6"], ["mov~<TAG>,r8", "jmp~FOO"]], [0, 0, 359, 0, 1, 7, 2, 2, 15, 8, 0.005147578649699541, ["lea     rcx, error_msgid; \"invalid conversion\"", "lea     rsi, conversions; table", "xor     edx, edx; exclusive", "mov     rdi, r8; str", "call    parse_symbols", "or      cs:conversions_mask, eax", "jmp     loc_22C6"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "xor~edx,edx", "mov~rdi,r8", "call~FOO", "or~<TAG>,eax", "jmp~FOO"]], [0, 0, 359, 0, 1, 7, 2, 2, 17, 8, 0.005368504772004241, ["lea     rcx, aInvalidInputFl; \"invalid input flag\"", "lea     rsi, flags; table", "xor     edx, edx; exclusive", "mov     rdi, r8; str", "call    parse_symbols", "or      cs:input_flags, eax", "jmp     loc_22C6"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "xor~edx,edx", "mov~rdi,r8", "call~FOO", "or~<TAG>,eax", "jmp~FOO"]], [0, 0, 359, 0, 1, 7, 2, 2, 19, 8, 0.005589430894308943, ["lea     rcx, aInvalidOutputF; \"invalid output flag\"", "lea     rsi, flags; table", "xor     edx, edx; exclusive", "mov     rdi, r8; str", "call    parse_symbols", "or      cs:output_flags, eax", "jmp     loc_22C6"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "xor~edx,edx", "mov~rdi,r8", "call~FOO", "or~<TAG>,eax", "jmp~FOO"]], [1, 0, 359, 0, 1, 7, 0, 2, 21, 8, 0.005810357016613644, ["lea     rcx, aInvalidStatusL; \"invalid status level\"", "lea     rsi, statuses; table", "mov     edx, 1; exclusive", "mov     rdi, r8; str", "call    parse_symbols", "mov     cs:status_level, eax", "jmp     loc_22C6"], ["lea~rcx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "mov~rdi,r8", "call~FOO", "mov~<TAG>,eax", "jmp~FOO"]], [1, 0, 359, 0, 0, 2, 0, 1, 26, 8, 0.1674362259926947, ["cmp     dword ptr [rsp+118h+bytes], 0", "jz      loc_22C6"], ["cmp~[word ptr [rsp+0],0", "jz~FOO"]], [0, 0, 359, 0, 0, 1, 0, 0, 11, 8, 0.006780699200853901, ["mov     cs:input_file, r8"], ["mov~<TAG>,r8"]], [1, 0, 222, 0, 0, 6, 2, 1, 26, -1, 0.0723017556262519, ["mov     eax, esi", "and     eax, 4002h", "lea     edx, [rax-1]", "and     edx, eax", "mov     [rsp+118h+var_EC], edx", "jnz     loc_3BEF"], ["mov~eax,esi", "and~eax,0", "lea~edx,[rax-1]+0]", "and~edx,eax", "mov~[rsp+0],edx", "jnz~FOO"]], [1, 0, 223, 0, 0, 5, 2, 1, 25, -1, 0.07390347001296099, ["mov     eax, ecx", "and     eax, 4002h", "lea     edx, [rax-1]", "test    edx, eax", "jnz     loc_3BEF"], ["mov~eax,ecx", "and~eax,0", "lea~edx,[rax-1]+0]", "test~edx,eax", "jnz~FOO"]], [0, 0, 196, 0, 0, 4, 0, 0, 34, -1, 0.002408094733121244, ["lea     rax, trans_table", "lea     rcx, ascii_to_ibm", "lea     rsi, [rax+100h]", "nop     word ptr [rax+rax+00000000h]"], ["lea~rax,<TAG>", "lea~rcx,<TAG>", "lea~rsi,[rax+0]", "nop~[ord ptr [rax+0]"]], [1, 0, 359, 1, 0, 9, 0, 1, 23, 11, 0.06755097761975061, ["mov     rdi, cs:page_size", "mov     cs:input_blocksize, rax", "lea     rdx, [rdi+2]", "mov     rdi, 7FFFFFFFFFFFFFFFh", "add     rdx, rdx", "neg     rdx", "cmp     rdx, rdi", "cmova   rdx, rdi", "jmp     loc_371F"], ["mov~rdi,<TAG>", "mov~<TAG>,rax", "lea~rdx,[rdi+0]", "mov~rdi,0", "add~rdx,rdx", "neg~rdx", "cmp~rdx,rdi", "cmova~rdx,rdi", "jmp~FOO"]], [0, 0, 144, 1, 0, 8, 2, 1, 34, -1, 0.05926711441027453, ["xor     edx, edx", "mov     rcx, rax", "add     rcx, cs:input_offset", "mov     rbx, rax", "setb    dl", "mov     cs:input_offset, rcx", "test    rdx, rdx", "jz      short loc_28E8"], ["xor~edx,edx", "mov~rcx,rax", "add~rcx,<TAG>", "mov~rbx,rax", "setb~dl", "mov~<TAG>,rcx", "test~rdx,rdx", "jz~FOO"]], [1, 0, 144, 0, 0, 1, 0, 0, 35, -1, 0.0, ["mov     cs:input_offset_overflow, 1"], ["mov~<TAG>,0"]], [1, 0, 63, 0, 0, 2, 0, 1, 37, -1, 0.0013568546011547072, ["mov     dword ptr [rsp+118h+exit_status], 1", "jmp     loc_3282"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [3, 0, 144, 0, 3, 18, 4, 4, 36, -1, 0.007235330505478968, ["mov     rsi, cs:input_file; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aErrorReadingS; \"error reading %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     rbx, rax", "call    _dcgettext", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+invalid]", "xor     edi, edi; status", "mov     rcx, rbx", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    nl_error", "mov     esi, cs:conversions_mask", "test    esi, 100h", "jz      loc_38E2"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~rbx,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "xor~edi,edi", "mov~rcx,rbx", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "mov~esi,<TAG>", "test~esi,0", "jz~FOO"]], [0, 0, 42, 0, 0, 2, 1, 1, 35, -1, 0.08490559090373512, ["test    rsi, rsi", "jnz     loc_378C"], ["test~rsi,rsi", "jnz~FOO"]], [0, 0, 43, 0, 0, 2, 0, 1, 34, -1, 0.028331320450885752, ["mov     rsi, cs:oc", "jmp     loc_32CF"], ["mov~rsi,<TAG>", "jmp~FOO"]], [1, 0, 47, 0, 0, 2, 0, 1, 34, -1, 0.03644667334354507, ["cmp     cs:col, 0", "jz      loc_32CF"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 46, 0, 0, 2, 1, 1, 35, -1, 0.00460262754801461, ["test    byte ptr cs:conversions_mask, 10h", "jz      loc_32CF"], ["test~<TAG>,0", "jz~FOO"]], [0, 0, 45, 0, 0, 8, 0, 0, 36, -1, 0.0023418168964298336, ["lea     rax, [rsi+1]", "movzx   ecx, byte ptr cs:newline_character; \"\\n\"", "cmp     rax, cs:output_blocksize", "mov     rdx, cs:obuf", "mov     cs:oc, rax", "mov     [rdx+rsi], cl", "mov     rsi, rax", "jb      loc_32CF"], ["lea~rax,[rsi+0]", "movzx~ecx,<TAG>", "cmp~rax,<TAG>", "mov~rdx,<TAG>", "mov~<TAG>,rax", "mov~<TAG>,cl", "mov~rsi,rax", "jb~FOO"]], [0, 0, 57, 0, 0, 8, 0, 0, 34, -1, 0.02987780330701868, ["mov     rax, cs:oc", "movzx   ecx, cs:saved_char", "mov     rdx, cs:obuf; size", "lea     rsi, [rax+1]; buf", "cmp     rsi, cs:output_blocksize", "mov     [rdx+rax], cl", "mov     cs:oc, rsi", "jnb     short loc_3344"], ["mov~rax,<TAG>", "movzx~ecx,<TAG>", "mov~rdx,<TAG>", "lea~rsi,[rax+0]", "cmp~rsi,<TAG>", "mov~<TAG>,cl", "mov~<TAG>,rsi", "jnb~FOO"]], [1, 0, 144, 0, 0, 2, 0, 1, 35, -1, 0.05713149522799576, ["cmp     cs:i_nocache, 0", "jnz     loc_2F6E"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 196, 1, 0, 6, 0, 1, 35, -1, 0.002643749263579592, ["movzx   edx, byte ptr [rax]", "add     rax, 1", "movzx   edx, byte ptr [rcx+rdx]", "mov     [rax-1], dl", "cmp     rax, rsi", "jnz     short loc_30E0"], ["movzx~edx,<TAG>", "add~rax,0", "movzx~edx,<TAG>", "mov~[rax-1]+0],dl", "cmp~rax,rsi", "jnz~FOO"]], [0, 0, 194, 0, 0, 1, 0, 1, 36, -1, 0.0028646753858842934, ["jmp     loc_2553"], ["jmp~FOO"]], [0, 0, 359, 0, 0, 3, 1, 1, 29, 10, 0.01184164015553199, ["movzx   edx, byte ptr [rdx]", "test    dl, dl", "jz      short loc_38FF"], ["movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [0, 0, 359, 0, 0, 3, 1, 1, 28, 11, 0.010361435136090492, ["movzx   esi, byte ptr [rcx]", "test    sil, sil", "jz      loc_38EF"], ["movzx~esi,<TAG>", "test~sil,sil", "jz~FOO"]], [1, 0, 359, 0, 0, 2, 0, 1, 30, 10, 0.00013991987745964416, ["cmp     dl, 3Dh ; '='", "jnz     loc_3B19"], ["cmp~dl,0", "jnz~FOO"]], [0, 1, 205, 0, 0, 2, 1, 1, 31, -1, 0.07577029574643572, ["test    bl, 20h", "jz      loc_2519"], ["test~bl,<STR>", "jz~FOO"]], [1, 0, 208, 0, 0, 2, 1, 1, 30, -1, 0.07877489100977966, ["test    bl, 40h", "jz      loc_30F8"], ["test~bl,0", "jz~FOO"]], [0, 0, 144, 0, 0, 3, 0, 0, 36, -1, 0.05499587604571698, ["mov     r14, cs:input_blocksize", "cmp     r14, rbx", "jbe     loc_2EA0"], ["mov~r14,<TAG>", "cmp~r14,rbx", "jbe~FOO"]], [0, 0, 144, 0, 1, 4, 1, 2, 36, -1, 0.0, ["mov     rsi, rax; len", "xor     edi, edi; fd", "call    invalidate_cache", "jmp     loc_28F5"], ["mov~rsi,rax", "xor~edi,edi", "call~FOO", "jmp~FOO"]], [0, 0, 359, 1, 0, 6, 1, 1, 19, 16, 0.0, ["mov     rax, rbp", "xor     edx, edx", "div     cs:output_blocksize", "mov     cs:seek_records, rax", "mov     cs:seek_bytes, rdx", "jmp     loc_2383"], ["mov~rax,rbp", "xor~edx,edx", "div~,<TAG>", "mov~<TAG>,rax", "mov~<TAG>,rdx", "jmp~FOO"]], [0, 0, 359, 0, 0, 2, 1, 1, 18, 16, 0.06540799423339501, ["test    rbp, rbp", "jnz     loc_2C12"], ["test~rbp,rbp", "jnz~FOO"]], [1, 0, 147, 0, 0, 2, 0, 1, 25, -1, 0.0801078119476847, ["mov     dword ptr [rsp+118h+bytes], 4", "jmp     loc_3739"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 359, 0, 0, 2, 1, 1, 24, 10, 0.09845854213017832, ["test    rax, rax", "jz      loc_390F"], ["test~rax,rax", "jz~FOO"]], [0, 0, 359, 0, 0, 3, 1, 1, 30, 9, 0.014816778602568633, ["test    rax, rax", "mov     cs:conversion_blocksize, rax", "jnz     loc_39DE"], ["test~rax,rax", "mov~<TAG>,rax", "jnz~FOO"]], [2, 0, 144, 1, 0, 5, 1, 1, 37, -1, 0.05355617414869801, ["mov     esi, cs:conversions_mask", "add     cs:r_partial, 1", "mov     [rsp+118h+var_118], rbx", "test    esi, 400h", "jz      short loc_2958"], ["mov~esi,<TAG>", "add~<TAG>,0", "mov~<TAG>,rbx", "test~esi,0", "jz~FOO"]], [0, 0, 144, 0, 0, 4, 1, 1, 41, -1, 0.025366000942618122, ["mov     r14, cs:input_blocksize", "xor     ebx, ebx", "cmp     r14, rbx", "ja      loc_2905"], ["mov~r14,<TAG>", "xor~ebx,ebx", "cmp~r14,rbx", "ja~FOO"]], [1, 0, 144, 0, 0, 2, 1, 1, 38, -1, 0.008432013667962767, ["test    esi, 100h", "jnz     loc_3137"], ["test~esi,0", "jnz~FOO"]], [1, 0, 204, 1, 0, 6, 0, 1, 33, -1, 0.002643749263579592, ["movzx   edx, byte ptr [rax]", "add     rax, 1", "mov     edx, [rsi+rdx*4]", "mov     [rax-1], dl", "cmp     rax, rcx", "jnz     short loc_3120"], ["movzx~edx,<TAG>", "add~rax,0", "mov~edx,<TAG>", "mov~[rax-1]+0],dl", "cmp~rax,rcx", "jnz~FOO"]], [0, 0, 204, 0, 1, 5, 0, 1, 32, -1, 0.00229026746789207, ["call    ___ctype_tolower_loc", "mov     rsi, [rax]", "lea     rax, trans_table", "lea     rcx, [rax+100h]", "nop     word ptr [rax+rax+00000000h]"], ["call~FOO", "mov~rsi,<TAG>", "lea~rax,<TAG>", "lea~rcx,[rax+0]", "nop~[ord ptr [rax+0]"]], [0, 0, 202, 0, 0, 1, 0, 1, 34, -1, 0.0029825026511134676, ["jmp     loc_2512"], ["jmp~FOO"]], [1, 0, 56, 0, 1, 5, 0, 2, 33, -1, 9.57346529987039e-05, ["lea     rdi, saved_char; buf", "mov     esi, 1; nread", "call    copy_with_block", "mov     esi, cs:conversions_mask", "jmp     loc_334F"], ["lea~rdi,<TAG>", "mov~esi,0", "call~FOO", "mov~esi,<TAG>", "jmp~FOO"]], [1, 0, 61, 0, 0, 2, 1, 1, 32, -1, 0.037890057342602444, ["test    sil, 8", "jnz     loc_391C"], ["test~sil,0", "jnz~FOO"]], [1, 0, 144, 1, 0, 4, 1, 1, 39, -1, 0.004219688936019795, ["mov     rdx, r14", "sub     rdx, rbx; n", "and     esi, 18h", "jz      short loc_293B"], ["mov~rdx,r14", "sub~rdx,rbx", "and~esi,0", "jz~FOO"]], [0, 1, 144, 0, 0, 1, 0, 0, 40, -1, 0.0, ["mov     esi, 20h ; ' '; c"], ["mov~esi,<STR>"]], [0, 0, 39, 0, 0, 2, 0, 1, 37, -1, 0.004517939201131142, ["cmp     rax, cs:oc", "jz      loc_32D8"], ["cmp~rax,<TAG>", "jz~FOO"]], [0, 0, 144, 0, 0, 3, 0, 1, 39, -1, 0.0010236243666784494, ["mov     [rsp+118h+var_118], rbx", "mov     rbx, r14", "jmp     loc_2958"], ["mov~<TAG>,rbx", "mov~rbx,r14", "jmp~FOO"]], [1, 0, 56, 0, 1, 5, 0, 2, 34, -1, 9.57346529987039e-05, ["lea     rdi, saved_char; buf", "mov     esi, 1; nread", "call    copy_with_unblock", "mov     esi, cs:conversions_mask", "jmp     loc_334F"], ["lea~rdi,<TAG>", "mov~esi,0", "call~FOO", "mov~esi,<TAG>", "jmp~FOO"]], [1, 0, 59, 0, 0, 2, 1, 1, 33, -1, 0.03389865873296424, ["and     sil, 10h", "jnz     loc_3938"], ["and~sil,0", "jnz~FOO"]], [0, 0, 144, 1, 1, 6, 0, 1, 40, -1, 0.002084069753741016, ["mov     rdi, cs:ibuf", "add     rdi, rbx; s", "call    _memset", "mov     [rsp+118h+var_118], rbx", "mov     rbx, r14", "nop     dword ptr [rax+00000000h]"], ["mov~rdi,<TAG>", "add~rdi,rbx", "call~FOO", "mov~<TAG>,rbx", "mov~rbx,r14", "nop~[word ptr [rax+0]"]], [1, 0, 359, 0, 0, 3, 0, 1, 31, 10, 0.008898557655653283, ["movzx   edx, byte ptr [rdx]", "cmp     dl, 3Dh ; '='", "jz      loc_3BBB"], ["movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [0, 0, 359, 0, 0, 3, 1, 1, 30, 11, 0.007329982187289904, ["movzx   esi, byte ptr [rcx]", "test    sil, sil", "jz      loc_3954"], ["movzx~esi,<TAG>", "test~sil,sil", "jz~FOO"]], [1, 0, 359, 0, 0, 6, 1, 1, 20, 14, 0.13301052128168336, ["test    eax, eax", "lea     rdx, iread_fullblock", "lea     rax, iread", "mov     cs:warn_partial_read, 0", "cmovnz  rax, rdx", "jmp     loc_23AD"], ["test~eax,eax", "lea~rdx,<TAG>", "lea~rax,<TAG>", "mov~<TAG>,0", "cmovnz~rax,rdx", "jmp~FOO"]], [2, 0, 359, 0, 0, 5, 2, 1, 19, 15, 0.13833484082922667, ["mov     ebx, cs:conversions_mask", "mov     eax, ecx", "and     eax, 1", "test    bh, 8", "jnz     loc_3143"], ["mov~ebx,<TAG>", "mov~eax,ecx", "and~eax,0", "test~bh,0", "jnz~FOO"]], [1, 0, 144, 0, 0, 2, 1, 1, 41, -1, 0.02172440202662896, ["test    sil, 8", "jnz     loc_2F5E"], ["test~sil,0", "jnz~FOO"]], [0, 1, 144, 0, 0, 3, 1, 1, 43, -1, 0.002084069753741016, ["mov     esi, cs:conversions_mask", "test    sil, 80h", "jz      loc_298C"], ["mov~esi,<TAG>", "test~sil,<STR>", "jz~FOO"]], [0, 1, 144, 0, 0, 3, 1, 1, 40, -1, 0.036415989159891596, ["mov     esi, cs:conversions_mask", "test    sil, 80h", "jnz     loc_2EED"], ["mov~esi,<TAG>", "test~sil,<STR>", "jnz~FOO"]], [0, 0, 359, 0, 0, 2, 1, 1, 32, 10, 0.00013255567338282077, ["test    dl, dl", "jz      loc_3BBB"], ["test~dl,dl", "jz~FOO"]], [0, 0, 144, 0, 0, 4, 0, 1, 38, -1, 0.07180467185106633, ["mov     r14, cs:ibuf", "mov     rdi, cs:obuf", "cmp     r14, rdi", "jz      loc_2FE0"], ["mov~r14,<TAG>", "mov~rdi,<TAG>", "cmp~r14,rdi", "jz~FOO"]], [2, 0, 144, 1, 0, 3, 0, 1, 37, -1, 0.023602274066218922, ["add     cs:r_full, 1", "mov     [rsp+118h+var_118], 0", "jmp     loc_2958"], ["add~<TAG>,0", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 144, 0, 0, 4, 1, 1, 39, -1, 0.019275804171085195, ["mov     rax, r14", "shr     rax, 3Fh", "or      cs:input_offset_overflow, al", "jnz     loc_2FA3"], ["mov~rax,r14", "shr~rax,0", "or~<TAG>,al", "jnz~FOO"]], [0, 0, 144, 1, 0, 7, 2, 1, 38, -1, 0.02439024390243897, ["xor     eax, eax", "mov     r14, rbx", "add     r14, cs:input_offset", "setb    al", "mov     cs:input_offset, r14", "test    rax, rax", "jz      loc_3163"], ["xor~eax,eax", "mov~r14,rbx", "add~r14,<TAG>", "setb~al", "mov~<TAG>,r14", "test~rax,rax", "jz~FOO"]], [1, 0, 359, 0, 0, 3, 0, 0, 31, 13, 0.013207700011782727, ["lea     rcx, aSCannotSeek+0Bh; \"seek\"", "mov     rdx, r12", "mov     esi, 73h ; 's'"], ["lea~rcx,<TAG>", "mov~rdx,r12", "mov~esi,0"]], [0, 0, 359, 0, 0, 1, 0, 1, 30, 14, 0.011355602686461647, ["jmp     loc_3968"], ["jmp~FOO"]], [1, 0, 144, 0, 0, 2, 0, 1, 39, -1, 0.044892188052315304, ["cmp     cs:translation_needed, 0", "jnz     loc_2EB5"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 359, 0, 0, 3, 0, 1, 22, 14, 0.006532049016142335, ["mov     cs:warn_partial_read, 1", "lea     rax, iread", "jmp     loc_23AD"], ["mov~<TAG>,0", "lea~rax,<TAG>", "jmp~FOO"]], [1, 0, 359, 0, 0, 2, 0, 1, 21, 15, 0.0039693059974078, ["cmp     cs:skip_records, 0", "jnz     short loc_2C31"], ["cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 359, 1, 0, 4, 0, 0, 22, 15, 0.0019956993048191353, ["mov     rax, cs:max_records", "sub     rax, 1", "cmp     rax, 0FFFFFFFFFFFFFFFDh", "jbe     short loc_2C31"], ["mov~rax,<TAG>", "sub~rax,0", "cmp~rax,0", "jbe~FOO"]], [2, 0, 359, 2, 0, 4, 0, 1, 32, 12, 0.01489410274537528, ["add     rdx, 1", "add     rcx, 1", "cmp     [rdx-1], sil", "jnz     short loc_39A1"], ["add~rdx,0", "add~rcx,0", "cmp~[rdx-1]+0],sil", "jnz~FOO"]], [0, 0, 359, 0, 0, 3, 1, 1, 33, 11, 0.010626546482856132, ["movzx   esi, byte ptr [rcx]", "test    sil, sil", "jnz     short loc_3977"], ["movzx~esi,<TAG>", "test~sil,sil", "jnz~FOO"]], [0, 0, 144, 0, 0, 2, 1, 1, 40, -1, 0.006318487097914457, ["test    rbx, rbx", "jz      loc_297C"], ["test~rbx,rbx", "jz~FOO"]], [1, 0, 144, 0, 1, 6, 3, 2, 40, -1, 0.01578517143867091, ["xor     esi, esi; offset", "xor     edi, edi; fd", "mov     edx, 1; whence", "call    _lseek", "test    rax, rax", "js      loc_2E16"], ["xor~esi,esi", "xor~edi,edi", "mov~edx,0", "call~FOO", "test~rax,rax", "js~FOO"]], [0, 0, 144, 0, 0, 2, 0, 1, 41, -1, 0.014687905031224226, ["cmp     r14, rax", "jz      loc_2E6E"], ["cmp~r14,rax", "jz~FOO"]], [1, 0, 359, 0, 0, 3, 0, 1, 34, 10, 0.012195121951219513, ["movzx   edx, byte ptr [rdx]", "cmp     dl, 3Dh ; '='", "jz      loc_3BC3"], ["movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [1, 0, 144, 0, 0, 2, 1, 1, 42, -1, 0.019588782844350183, ["and     esi, 10h", "jz      loc_2D05"], ["and~esi,0", "jz~FOO"]], [2, 0, 144, 1, 0, 3, 1, 1, 44, -1, 0.007165370566749146, ["add     r14, 1", "test    sil, 8", "jz      loc_2996"], ["add~r14,0", "test~sil,0", "jz~FOO"]], [0, 0, 144, 1, 0, 2, 0, 1, 42, -1, 0.010854836809237657, ["sub     r14, rax", "js      loc_3686"], ["sub~r14,rax", "js~FOO"]], [0, 0, 359, 0, 0, 2, 1, 1, 35, 10, 5.1549428537763635e-05, ["test    dl, dl", "jz      loc_3BC3"], ["test~dl,dl", "jz~FOO"]], [0, 0, 144, 0, 0, 2, 0, 0, 43, -1, 0.003129786732649935, ["cmp     rbx, r14", "jb      loc_3686"], ["cmp~rbx,r14", "jb~FOO"]], [1, 0, 359, 0, 0, 3, 0, 0, 33, 13, 0.004989248262047837, ["lea     rcx, aCount; \"count\"", "mov     rdx, r12", "mov     esi, 63h ; 'c'"], ["lea~rcx,<TAG>", "mov~rdx,r12", "mov~esi,0"]], [2, 0, 359, 2, 0, 4, 0, 1, 34, 12, 0.006631465771179451, ["add     rdx, 1", "add     rcx, 1", "cmp     [rdx-1], sil", "jnz     loc_3A5D"], ["add~rdx,0", "add~rcx,0", "cmp~[rdx-1]+0],sil", "jnz~FOO"]], [0, 0, 359, 0, 0, 3, 1, 1, 35, 11, 0.008174266525273949, ["movzx   esi, byte ptr [rcx]", "test    sil, sil", "jnz     short loc_39B0"], ["movzx~esi,<TAG>", "test~sil,sil", "jnz~FOO"]], [1, 0, 144, 0, 1, 7, 2, 1, 44, -1, 0.026536909390833037, ["mov     rdi, cs:input_file; filename", "xor     esi, esi; fdesc", "mov     ecx, 1; whence", "mov     rdx, r14; offset", "call    skip_via_lseek", "test    rax, rax", "jns     loc_2E6E"], ["mov~rdi,<TAG>", "xor~esi,esi", "mov~ecx,0", "mov~rdx,r14", "call~FOO", "test~rax,rax", "jns~FOO"]], [1, 0, 144, 0, 0, 2, 0, 1, 43, -1, 0.024504389065629784, ["cmp     cs:status_level, 1", "jz      loc_31A8"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 144, 0, 2, 10, 4, 3, 44, -1, 0.0, ["lea     rsi, aWarningInvalid; \"warning: invalid file offset after fail\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; fmt", "xor     edi, edi; status", "xor     eax, eax", "call    nl_error", "jmp     loc_31A8"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 144, 0, 0, 3, 0, 1, 45, -1, 0.002894132202191587, ["mov     rax, [rsp+118h+invalid]", "cmp     dword ptr [rax], 0", "jnz     loc_2E16"], ["mov~rax,[rsp+0]", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 359, 0, 0, 3, 0, 1, 36, 10, 0.009787027218098267, ["movzx   edx, byte ptr [rdx]", "cmp     dl, 3Dh ; '='", "jz      short loc_39DA"], ["movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [0, 0, 359, 0, 0, 2, 1, 1, 37, 10, 7.364204076823377e-06, ["test    dl, dl", "jnz     loc_3A5D"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 359, 0, 0, 1, 0, 0, 37, 9, 0.013027277011900554, ["mov     [rsp+118h+var_118], rax"], ["mov~<TAG>,rax"]], [0, 0, 359, 0, 0, 2, 0, 0, 25, 9, 0.026591274544458997, ["cmp     rax, rdx", "jbe     loc_39DE"], ["cmp~rax,rdx", "jbe~FOO"]], [0, 0, 359, 0, 0, 2, 0, 1, 25, 9, 0.09520897878416124, ["mov     r13, rax", "jmp     loc_39DE"], ["mov~r13,rax", "jmp~FOO"]], [0, 0, 359, 0, 0, 2, 0, 1, 35, 9, 0.015347001296099918, ["mov     rbp, rax", "jmp     loc_39DE"], ["mov~rbp,rax", "jmp~FOO"]], [0, 0, 147, 0, 0, 1, 0, 1, 27, -1, 0.06819989395546129, ["jmp     loc_3739"], ["jmp~FOO"]], [1, 0, 359, 0, 0, 4, 0, 1, 26, 13, 0.024068818053909435, ["mov     rdx, r12", "mov     esi, 63h ; 'c'", "lea     rcx, aCbs; \"cbs\"", "jmp     short loc_3B0B"], ["mov~rdx,r12", "mov~esi,0", "lea~rcx,<TAG>", "jmp~FOO"]], [0, 0, 359, 0, 0, 1, 0, 1, 25, 14, 0.02198106619813001, ["jmp     loc_3AEE"], ["jmp~FOO"]], [1, 0, 359, 0, 0, 2, 0, 1, 27, 12, 0.0002761576528808766, ["cmp     dl, 3Dh ; '='", "jz      short loc_3B49"], ["cmp~dl,0", "jz~FOO"]], [1, 0, 359, 0, 0, 3, 0, 0, 9, 12, 0.08383496558750753, ["lea     rdx, aOf; \"of\"", "mov     rax, r12", "mov     ecx, 6Fh ; 'o'"], ["lea~rdx,<TAG>", "mov~rax,r12", "mov~ecx,0"]], [2, 0, 359, 2, 0, 4, 0, 1, 8, 11, 0.08678627866841326, ["add     rdx, 1", "add     rcx, 1", "cmp     [rdx-1], al", "jnz     loc_29E8"], ["add~rdx,0", "add~rcx,0", "cmp~[rdx-1]+0],al", "jnz~FOO"]], [0, 0, 359, 0, 0, 2, 1, 1, 11, 9, 0.0016643101213620832, ["test    al, al", "jnz     loc_29E8"], ["test~al,al", "jnz~FOO"]], [1, 0, 144, 0, 2, 10, 4, 3, 46, -1, 0.0, ["lea     rsi, aCannotWorkArou; \"cannot work around kernel bug after all\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; fmt", "xor     edi, edi; status", "xor     eax, eax", "call    nl_error", "jmp     loc_2E16"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 359, 2, 0, 4, 0, 1, 10, 11, 0.08709037697793856, ["add     rax, 1", "add     rdx, 1", "cmp     [rax-1], cl", "jnz     short loc_2A28"], ["add~rax,0", "add~rdx,0", "cmp~[rax-1]+0],cl", "jnz~FOO"]], [0, 0, 359, 0, 0, 3, 1, 1, 11, 10, 0.004934016731471662, ["movzx   ecx, byte ptr [rdx]", "test    cl, cl", "jnz     short loc_29F7"], ["movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [1, 0, 359, 0, 0, 3, 0, 1, 12, 9, 0.004933583542996556, ["movzx   eax, byte ptr [rax]", "cmp     al, 3Dh ; '='", "jz      short loc_2A16"], ["movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [3, 0, 182, 0, 1, 7, 2, 1, 38, -1, 0.023731147637563333, ["mov     edx, ebx", "mov     ecx, 1B6h; mode", "mov     edi, 1; desired_fd", "or      edx, 2; flag", "call    ifd_reopen", "test    eax, eax", "jns     loc_264D"], ["mov~edx,ebx", "mov~ecx,0", "mov~edi,0", "or~edx,0", "call~FOO", "test~eax,eax", "jns~FOO"]], [4, 1, 184, 1, 0, 12, 5, 1, 37, -1, 0.027214416165900788, ["mov     eax, cs:conversions_mask", "xor     edx, edx", "mov     ebx, eax", "test    ah, 10h", "setz    dl", "sar     ebx, 6", "and     ebx, 80h", "shl     edx, 6", "or      ebx, ebp", "or      ebx, edx", "cmp     cs:seek_records, 0", "jnz     loc_31FB"], ["mov~eax,<TAG>", "xor~edx,edx", "mov~ebx,eax", "test~ah,0", "setz~dl", "sar~ebx,0", "and~ebx,<STR>", "shl~edx,0", "or~ebx,ebp", "or~ebx,edx", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 359, 0, 0, 2, 1, 1, 13, 9, 0.001620124896901143, ["test    al, al", "jnz     short loc_2A28"], ["test~al,al", "jnz~FOO"]], [0, 0, 181, 0, 0, 2, 0, 1, 39, -1, 2.9456816307293507e-05, ["mov     rsi, cs:output_file", "jmp     loc_2631"], ["mov~rsi,<TAG>", "jmp~FOO"]], [2, 0, 359, 2, 0, 4, 0, 1, 27, 12, 0.02584359123642387, ["add     rdx, 1", "add     rcx, 1", "cmp     [rdx-1], sil", "jz      short loc_3AFF"], ["add~rdx,0", "add~rcx,0", "cmp~[rdx-1]+0],sil", "jz~FOO"]], [0, 0, 153, 0, 0, 3, 1, 1, 42, -1, 0.003976670201484623, ["mov     rdx, [rsp+118h+bytes]; n", "test    rdx, rdx", "jz      loc_27DA"], ["mov~rdx,[rsp+0]", "test~rdx,rdx", "jz~FOO"]], [1, 0, 158, 0, 1, 9, 1, 2, 41, -1, 0.01142924472722988, ["mov     rcx, cs:output_blocksize; blocksize", "mov     rsi, cs:output_file; file", "lea     r8, [rsp+118h+bytes]; bytes", "mov     edi, 1; fdesc", "mov     [rsp+118h+bytes], rax", "call    skip", "test    rax, rax", "mov     rbx, rax", "jz      loc_3223"], ["mov~rcx,<TAG>", "mov~rsi,<TAG>", "lea~r8,[rsp+0]", "mov~edi,0", "mov~[rsp+0],rax", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [6, 0, 361, 2, 7, 70, 1, 8, 4, 8, 0.021267821373865913, ["mov     rdi, [argv]; argv0", "call    set_program_name", "lea     rsi, aWrittenBySSAnd+1Bh; locale", "mov     edi, 6; category", "call    _setlocale", "lea     rsi, dirname; \"/usr/local/share/locale\"", "lea     rdi, package; \"coreutils\"", "call    _bindtextdomain", "lea     rdi, package; \"coreutils\"", "call    _textdomain", "lea     rdi, maybe_close_stdout", "call    atexit", "call    _getpagesize", "cdqe", "sub     rsp, 8", "mov     r8, cs:Version; version", "mov     cs:page_size, rax", "lea     rax, aStuartKemp; \"Stuart Kemp\"", "push    0", "lea     rcx, package; \"coreutils\"", "lea     rdx, command_name; \"dd\"", "mov     r9d, 1; scan_all", "push    rax", "lea     rax, aDavidMackenzie; \"David MacKenzie\"", "mov     rsi, argv; argv", "mov     edi, ebp; argc", "push    rax", "lea     rax, aPaulRubin; \"Paul Rubin\"", "push    rax", "lea     rax, usage", "push    rax; usage_func", "xor     eax, eax", "call    parse_gnu_standard_options_only", "movdqa  xmm0, cs:xmmword_120E0", "add     rsp, 30h", "mov     cs:close_stdout_required, 0", "movaps  xmmword ptr cs:trans_table, xmm0", "movdqa  xmm0, cs:xmmword_120F0", "movaps  xmmword ptr cs:trans_table+10h, xmm0", "movdqa  xmm0, cs:xmmword_12100", "movaps  xmmword ptr cs:trans_table+20h, xmm0", "movdqa  xmm0, cs:xmmword_12110", "movaps  xmmword ptr cs:trans_table+30h, xmm0", "movdqa  xmm0, cs:xmmword_12120", "movaps  xmmword ptr cs:trans_table+40h, xmm0", "movdqa  xmm0, cs:xmmword_12130", "movaps  xmmword ptr cs:trans_table+50h, xmm0", "movdqa  xmm0, cs:xmmword_12140", "movaps  xmmword ptr cs:trans_table+60h, xmm0", "movdqa  xmm0, cs:xmmword_12150", "movaps  xmmword ptr cs:trans_table+70h, xmm0", "movdqa  xmm0, cs:xmmword_12160", "movaps  xmmword ptr cs:trans_table+80h, xmm0", "movdqa  xmm0, cs:xmmword_12170", "movaps  xmmword ptr cs:trans_table+90h, xmm0", "movdqa  xmm0, cs:xmmword_12180", "movaps  xmmword ptr cs:trans_table+0A0h, xmm0", "movdqa  xmm0, cs:xmmword_12190", "movaps  xmmword ptr cs:trans_table+0B0h, xmm0", "movdqa  xmm0, cs:xmmword_121A0", "movaps  xmmword ptr cs:trans_table+0C0h, xmm0", "movdqa  xmm0, cs:xmmword_121B0", "movaps  xmmword ptr cs:trans_table+0D0h, xmm0", "movdqa  xmm0, cs:xmmword_121C0", "movaps  xmmword ptr cs:trans_table+0E0h, xmm0", "movdqa  xmm0, cs:xmmword_121D0", "movaps  xmmword ptr cs:trans_table+0F0h, xmm0", "mov     eax, cs:optind@@GLIBC_2_2_5", "cmp     ebp, eax", "jle     loc_2B72"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "call~FOO", "cdqe~", "sub~rsp,0", "mov~r8,<TAG>", "mov~<TAG>,rax", "lea~rax,<TAG>", "push~0", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~r9d,0", "push~rax", "lea~rax,<TAG>", "mov~rsi,argv", "mov~edi,ebp", "push~rax", "lea~rax,<TAG>", "push~rax", "lea~rax,<TAG>", "push~rax", "xor~eax,eax", "call~FOO", "movdqa~xmm0,<TAG>", "add~rsp,0", "mov~<TAG>,0", "movaps~<TAG>,xmm0", "movdqa~xmm0,<TAG>", "movaps~<TAG>,xmm0", "movdqa~xmm0,<TAG>", "movaps~<TAG>,xmm0", "movdqa~xmm0,<TAG>", "movaps~<TAG>,xmm0", "movdqa~xmm0,<TAG>", "movaps~<TAG>,xmm0", "movdqa~xmm0,<TAG>", "movaps~<TAG>,xmm0", "movdqa~xmm0,<TAG>", "movaps~<TAG>,xmm0", "movdqa~xmm0,<TAG>", "movaps~<TAG>,xmm0", "movdqa~xmm0,<TAG>", "movaps~<TAG>,xmm0", "movdqa~xmm0,<TAG>", "movaps~<TAG>,xmm0", "movdqa~xmm0,<TAG>", "movaps~<TAG>,xmm0", "movdqa~xmm0,<TAG>", "movaps~<TAG>,xmm0", "movdqa~xmm0,<TAG>", "movaps~<TAG>,xmm0", "movdqa~xmm0,<TAG>", "movaps~<TAG>,xmm0", "movdqa~xmm0,<TAG>", "movaps~<TAG>,xmm0", "movdqa~xmm0,<TAG>", "movaps~<TAG>,xmm0", "mov~eax,<TAG>", "cmp~ebp,eax", "jle~FOO"]], [1, 0, 359, 0, 0, 3, 0, 0, 11, 12, 0.08601563637119745, ["lea     rdx, aConv; \"conv\"", "mov     rax, r12", "mov     ecx, 63h ; 'c'"], ["lea~rdx,<TAG>", "mov~rax,r12", "mov~ecx,0"]], [0, 0, 152, 0, 1, 4, 1, 2, 43, -1, 0.0014507482031342052, ["mov     rdi, cs:obuf; s", "xor     esi, esi; c", "call    _memset", "jmp     loc_27BD"], ["mov~rdi,<TAG>", "xor~esi,esi", "call~FOO", "jmp~FOO"]], [2, 0, 359, 2, 0, 4, 0, 1, 12, 11, 0.08923379355276927, ["add     rax, 1", "add     rdx, 1", "cmp     [rax-1], cl", "jnz     short loc_2A79"], ["add~rax,0", "add~rdx,0", "cmp~[rax-1]+0],cl", "jnz~FOO"]], [0, 0, 359, 0, 0, 3, 1, 1, 13, 10, 0.005022387180393543, ["movzx   ecx, byte ptr [rdx]", "test    cl, cl", "jnz     short loc_2A37"], ["movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [0, 0, 359, 0, 0, 3, 1, 1, 14, 9, 0.00505920820077766, ["movzx   eax, byte ptr [rax]", "test    al, al", "jz      short loc_2A56"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 359, 0, 0, 2, 0, 1, 15, 9, 0.001583303876517026, ["cmp     al, 3Dh ; '='", "jnz     short loc_2A79"], ["cmp~al,0", "jnz~FOO"]], [3, 0, 25, 0, 3, 17, 3, 4, 40, -1, 0.0, ["mov     rsi, cs:output_file; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aFdatasyncFaile; \"fdatasync failed for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbx, rax", "call    _dcgettext", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+invalid]", "mov     rcx, rbx", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    nl_error", "mov     dword ptr [rsp+118h+exit_status], 1", "jmp     loc_37E2"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbx,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~rcx,rbx", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [2, 0, 26, 1, 0, 6, 1, 1, 39, -1, 0.004786732649935195, ["mov     rax, [rsp+118h+invalid]", "mov     eax, [rax]", "mov     dword ptr [rsp+118h+var_118], eax", "sub     eax, 16h", "and     eax, 0FFFFFFEFh", "jnz     loc_3A13"], ["mov~rax,[rsp+0]", "mov~eax,<TAG>", "mov~<TAG>,eax", "sub~eax,0", "and~eax,0", "jnz~FOO"]], [1, 0, 65, 0, 0, 5, 1, 1, 35, -1, 0.0063019176387416045, ["movzx   eax, cs:i_nocache", "or      cs:i_nocache_eof, al", "cmp     cs:o_nocache, 0", "movzx   eax, cs:o_nocache_eof", "jz      short loc_3271"], ["movzx~eax,<TAG>", "or~<TAG>,al", "cmp~<TAG>,0", "movzx~eax,<TAG>", "jz~FOO"]], [0, 0, 144, 0, 0, 2, 0, 1, 34, -1, 0.06134381995993873, ["mov     esi, cs:conversions_mask", "jz      loc_3244"], ["mov~esi,<TAG>", "jz~FOO"]], [1, 0, 359, 2, 0, 13, 3, 0, 5, 14, 0.015583089015033368, ["movsxd  rdx, eax", "not     eax", "xor     r13d, r13d", "add     eax, ebp", "lea     r14, [argv+rdx*8]", "xor     ebp, ebp", "add     rax, rdx", "mov     [rsp+118h+var_118], 0FFFFFFFFFFFFFFFFh", "xor     r15d, r15d", "lea     argv, [argv+rax*8+8]", "lea     rax, [rsp+118h+bytes]", "mov     [rsp+118h+invalid], rax", "nop     word ptr [rax+rax+00h]"], ["movsxd~rdx,eax", "not~eax", "xor~r13d,r13d", "add~eax,ebp", "lea~r14,<TAG>", "xor~ebp,ebp", "add~rax,rdx", "mov~<TAG>,0", "xor~r15d,r15d", "lea~argv,[argv+0]", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "nop~[ord ptr [rax+0]"]], [0, 1, 64, 0, 0, 4, 2, 0, 36, -1, 0.0, ["xor     edi, edi", "test    esi, 200h", "setz    dil", "mov     [rsp+118h+var_EC], edi"], ["xor~edi,edi", "test~esi,<STR>", "setz~dil", "mov~[rsp+0],edi"]], [1, 0, 63, 0, 0, 3, 2, 0, 36, -1, 0.002973297396017438, ["or      eax, [rsp+118h+var_EC]", "mov     cs:o_nocache_eof, al", "and     cs:o_nocache_eof, 1"], ["or~eax,[rsp+0]", "mov~<TAG>,al", "and~<TAG>,0"]], [1, 0, 359, 0, 0, 4, 0, 0, 13, 12, 0.08799660726786294, ["lea     rdx, aIflag; \"iflag\"", "mov     rax, r12", "mov     ecx, 69h ; 'i'", "nop     dword ptr [rax+rax+00000000h]"], ["lea~rdx,<TAG>", "mov~rax,r12", "mov~ecx,0", "nop~[word ptr [rax+0]"]], [1, 0, 62, 0, 0, 2, 0, 1, 31, -1, 0.12187389536938847, ["cmp     cs:char_is_saved, 0", "jz      loc_334F"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 0, 0, 4, 15, 4, 4, 7, -1, 0.0, ["mov     rdi, r12; arg", "call    quote", "lea     rsi, aUnrecognizedOp; \"unrecognized operand %s\"", "mov     rbx, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     edi, edi; status", "mov     rdx, rax; fmt", "mov     rcx, rbx", "xor     esi, esi; errnum", "xor     eax, eax", "call    nl_error", "mov     edi, 1; status", "call    usage"], ["mov~rdi,r12", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~edi,edi", "mov~rdx,rax", "mov~rcx,rbx", "xor~esi,esi", "xor~eax,eax", "call~FOO", "mov~edi,0", "call~FOO"]], [1, 0, 359, 0, 1, 6, 1, 2, 6, 13, 0.08277646954858293, ["mov     r12, [r14]", "mov     esi, 3Dh ; '='; c", "mov     rdi, r12; s", "call    _strchr", "test    rax, rax", "jz      loc_3A5D"], ["mov~r12,<TAG>", "mov~esi,0", "mov~rdi,r12", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 359, 0, 0, 5, 0, 0, 7, 12, 0.0834871152419964, ["lea     rcx, aIf; \"if\"", "lea     r8, [rax+1]", "mov     rdx, r12", "mov     eax, 69h ; 'i'", "nop     dword ptr [rax+00h]"], ["lea~rcx,<TAG>", "lea~r8,[rax+0]", "mov~rdx,r12", "mov~eax,0", "nop~[word ptr [rax+0]"]], [2, 0, 359, 2, 0, 4, 0, 1, 14, 11, 0.09117057922497383, ["add     rax, 1", "add     rdx, 1", "cmp     [rax-1], cl", "jnz     short loc_2AD2"], ["add~rax,0", "add~rdx,0", "cmp~[rax-1]+0],cl", "jnz~FOO"]], [0, 0, 359, 0, 0, 3, 1, 1, 15, 10, 0.005110757629315423, ["movzx   ecx, byte ptr [rdx]", "test    cl, cl", "jnz     short loc_2A90"], ["movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [0, 0, 359, 0, 0, 3, 1, 1, 9, 10, 0.006898526466083075, ["movzx   eax, byte ptr [rcx]", "test    al, al", "jnz     short loc_2298"], ["movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [1, 0, 359, 0, 0, 3, 0, 1, 16, 9, 0.00519176387416048, ["movzx   eax, byte ptr [rax]", "cmp     al, 3Dh ; '='", "jz      short loc_2AAF"], ["movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [0, 0, 359, 0, 0, 2, 1, 1, 17, 9, 0.0015391186520560857, ["test    al, al", "jnz     short loc_2AD2"], ["test~al,al", "jnz~FOO"]], [1, 0, 359, 0, 0, 3, 0, 1, 10, 9, 0.0068543412416221345, ["movzx   eax, byte ptr [rdx]", "cmp     al, 3Dh ; '='", "jz      short loc_22BF"], ["movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [0, 0, 359, 0, 0, 2, 1, 1, 13, 6, 0.08537928250126492, ["test    r15, r15", "jz      loc_2B7F"], ["test~r15,r15", "jz~FOO"]], [2, 0, 144, 1, 0, 4, 0, 0, 43, -1, 0.0, ["sub     rbx, 1", "mov     cs:char_is_saved, 1", "movzx   eax, byte ptr [r14+rbx]", "mov     cs:saved_char, al"], ["sub~rbx,0", "mov~<TAG>,0", "movzx~eax,<TAG>", "mov~<TAG>,al"]], [1, 0, 144, 0, 0, 2, 1, 1, 42, -1, 0.012504418522446093, ["test    bl, 1", "jz      short loc_2F2A"], ["test~bl,0", "jz~FOO"]], [3, 0, 0, 0, 5, 18, 3, 5, 44, -1, 0.0, ["mov     rsi, cs:output_file; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aWritingToS; \"writing to %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbx, rax", "call    _dcgettext", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+invalid]", "xor     edi, edi; status", "mov     rcx, rbx", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    nl_error", "call    finish_up", "mov     edi, 1; status", "call    _exit"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbx,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "xor~edi,edi", "mov~rcx,rbx", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "call~FOO", "mov~edi,0", "call~FOO"]], [0, 0, 155, 0, 1, 6, 0, 2, 43, -1, 0.005449511016849299, ["mov     rbp, cs:output_blocksize", "mov     rdi, cs:obuf; fd", "mov     rsi, rbp; buf", "call    iwrite", "cmp     rbp, rax", "jnz     loc_3A96"], ["mov~rbp,<TAG>", "mov~rdi,<TAG>", "mov~rsi,rbp", "call~FOO", "cmp~rbp,rax", "jnz~FOO"]], [0, 0, 151, 0, 1, 6, 0, 2, 44, -1, 0.0011267232237539765, ["mov     rbx, [rsp+118h+bytes]", "mov     rdi, cs:obuf; fd", "mov     rsi, rbx; buf", "call    iwrite", "cmp     rbx, rax", "jnz     loc_3A96"], ["mov~rbx,[rsp+0]", "mov~rdi,<TAG>", "mov~rsi,rbx", "call~FOO", "cmp~rbx,rax", "jnz~FOO"]], [0, 0, 359, 0, 0, 2, 0, 0, 14, 5, 0.08330994115567755, ["mov     cs:output_blocksize, r15", "mov     cs:input_blocksize, r15"], ["mov~<TAG>,r15", "mov~<TAG>,r15"]], [1, 0, 359, 0, 0, 4, 0, 0, 15, 12, 0.08975665204222373, ["lea     rdx, aOflag; \"oflag\"", "mov     rax, r12", "mov     ecx, 6Fh ; 'o'", "nop     dword ptr [rax+00000000h]"], ["lea~rdx,<TAG>", "mov~rax,r12", "mov~ecx,0", "nop~[word ptr [rax+0]"]], [0, 0, 359, 0, 0, 3, 1, 1, 26, 12, 0.009326764463296807, ["movzx   edx, byte ptr [rdx]", "test    dl, dl", "jz      short loc_3B49"], ["movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [0, 0, 359, 0, 0, 3, 1, 1, 25, 13, 0.007806056321432779, ["movzx   esi, byte ptr [rcx]", "test    sil, sil", "jz      loc_3AE2"], ["movzx~esi,<TAG>", "test~sil,sil", "jz~FOO"]], [1, 0, 359, 0, 0, 2, 0, 1, 8, 4, 0.10599862072789526, ["cmp     cs:conversion_blocksize, 0", "jnz     short loc_22F7"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 359, 0, 0, 2, 0, 1, 7, 5, 0.016797316310759015, ["cmp     cs:output_blocksize, 0", "jnz     loc_22E6"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 1, 359, 0, 0, 2, 0, 1, 8, 5, 0.0, ["mov     cs:output_blocksize, 200h", "jmp     loc_22E6"], ["mov~<TAG>,<STR>", "jmp~FOO"]], [1, 0, 359, 0, 0, 1, 1, 0, 9, 4, 0.0, ["and     cs:conversions_mask, 0FFFFFFE7h"], ["and~<TAG>,0"]], [1, 0, 28, 0, 0, 3, 1, 1, 37, -1, 0.051483150701072226, ["mov     esi, cs:conversions_mask", "test    esi, 4000h", "jnz     loc_37BE"], ["mov~esi,<TAG>", "test~esi,0", "jnz~FOO"]], [2, 0, 359, 2, 0, 4, 0, 1, 16, 11, 0.09288643877487367, ["add     rax, 1", "add     rdx, 1", "cmp     [rax-1], cl", "jnz     loc_2C90"], ["add~rax,0", "add~rdx,0", "cmp~[rax-1]+0],cl", "jnz~FOO"]], [0, 0, 359, 0, 0, 3, 1, 1, 17, 10, 0.005199128078237304, ["movzx   ecx, byte ptr [rdx]", "test    cl, cl", "jnz     short loc_2AE8"], ["movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [0, 0, 23, 0, 0, 2, 0, 1, 39, -1, 0.0006775067750677507, ["mov     esi, cs:conversions_mask", "jmp     loc_32F7"], ["mov~esi,<TAG>", "jmp~FOO"]], [1, 0, 359, 0, 0, 3, 1, 1, 9, 3, 0.10925359892985119, ["mov     ecx, cs:input_flags", "test    ecx, 101000h", "jz      short loc_2311"], ["mov~ecx,<TAG>", "test~ecx,0", "jz~FOO"]], [1, 0, 359, 0, 0, 3, 0, 1, 18, 9, 0.005324319547543302, ["movzx   eax, byte ptr [rax]", "cmp     al, 3Dh ; '='", "jz      short loc_2B0F"], ["movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [1, 0, 162, 0, 0, 2, 0, 1, 40, -1, 0.001992017202780723, ["cmp     cs:status_level, 1", "jz      loc_272A"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 165, 0, 1, 11, 2, 2, 39, -1, 0.005508424649463886, ["mov     r15, cs:input_blocksize", "mov     rsi, cs:input_file; file", "lea     r8, skip_bytes; bytes", "xor     edi, edi; fdesc", "mov     rdx, rbx; records", "mov     rbp, cs:input_offset", "mov     r13, cs:skip_bytes", "mov     rcx, r15; blocksize", "call    skip", "test    rax, rax", "jnz     loc_2C44"], ["mov~r15,<TAG>", "mov~rsi,<TAG>", "lea~r8,<TAG>", "xor~edi,edi", "mov~rdx,rbx", "mov~rbp,<TAG>", "mov~r13,<TAG>", "mov~rcx,r15", "call~FOO", "test~rax,rax", "jnz~FOO"]], [1, 0, 163, 0, 0, 2, 0, 1, 41, -1, 1.4728408153646753e-05, ["cmp     cs:input_offset_overflow, 1", "jnz     loc_2C44"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 359, 0, 0, 2, 1, 1, 19, 9, 0.0014949334275951454, ["test    al, al", "jnz     loc_2C90"], ["test~al,al", "jnz~FOO"]], [1, 0, 359, 0, 0, 2, 1, 0, 10, 3, 0.0, ["or      ecx, 101000h", "mov     cs:input_flags, ecx"], ["or~ecx,0", "mov~<TAG>,ecx"]], [1, 0, 22, 0, 0, 3, 0, 1, 40, -1, 0.0025848356309650052, ["mov     rax, [rsp+118h+invalid]", "cmp     dword ptr [rax], 4", "jz      short loc_3303"], ["mov~rax,[rsp+0]", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 359, 0, 0, 3, 1, 1, 10, 2, 0.11250857713180712, ["mov     esi, cs:output_flags", "test    sil, 1", "jnz     loc_3CBD"], ["mov~esi,<TAG>", "test~sil,0", "jnz~FOO"]], [1, 0, 359, 0, 0, 2, 1, 1, 11, 1, 0.1125306697440376, ["test    cl, 10h", "jnz     loc_3D99"], ["test~cl,0", "jnz~FOO"]], [1, 0, 359, 0, 0, 4, 0, 1, 28, 13, 0.016380588997705833, ["mov     rdx, r12", "mov     esi, 73h ; 's'", "lea     rcx, aSkip; \"skip\"", "jmp     short loc_3B36"], ["mov~rdx,r12", "mov~esi,0", "lea~rcx,<TAG>", "jmp~FOO"]], [1, 0, 359, 0, 0, 2, 1, 1, 12, 22, 0.11313453447833711, ["test    sil, 0Ch", "jnz     loc_3D6A"], ["test~sil,0", "jnz~FOO"]], [2, 0, 359, 2, 0, 4, 0, 1, 29, 12, 0.018066991731298384, ["add     rdx, 1", "add     rcx, 1", "cmp     [rdx-1], sil", "jz      short loc_3B2A"], ["add~rdx,0", "add~rcx,0", "cmp~[rdx-1]+0],sil", "jz~FOO"]], [0, 0, 359, 0, 0, 2, 1, 1, 18, 16, 0.06540799423339501, ["test    rbp, rbp", "jz      loc_2383"], ["test~rbp,rbp", "jz~FOO"]], [1, 0, 359, 0, 0, 2, 1, 1, 17, 17, 0.13019739532433686, ["test    sil, 10h", "jz      loc_2B32"], ["test~sil,0", "jz~FOO"]], [1, 0, 359, 0, 0, 2, 1, 1, 13, 21, 0.11392250431455721, ["test    cl, 8", "jz      loc_2B5D"], ["test~cl,0", "jz~FOO"]], [0, 0, 359, 0, 0, 2, 1, 1, 14, 20, 0.057270548728505184, ["test    r13, r13", "jnz     loc_2BBC"], ["test~r13,r13", "jnz~FOO"]], [0, 0, 359, 0, 0, 2, 0, 1, 19, 16, 0.0, ["mov     cs:seek_records, rbp", "jmp     loc_2383"], ["mov~<TAG>,rbp", "jmp~FOO"]], [0, 0, 53, 0, 0, 3, 0, 0, 34, -1, 0.010030045952633439, ["cmp     rbx, cs:conversion_blocksize", "mov     rsi, cs:oc", "jb      short loc_344F"], ["cmp~rbx,<TAG>", "mov~rsi,<TAG>", "jb~FOO"]], [0, 0, 53, 0, 0, 3, 1, 1, 33, -1, 0.04099775146302187, ["mov     rbx, cs:col", "test    rbx, rbx", "jnz     loc_347D"], ["mov~rbx,<TAG>", "test~rbx,rbx", "jnz~FOO"]], [1, 0, 53, 1, 0, 1, 0, 0, 36, -1, 0.0007437846117591611, ["add     rbx, 1"], ["add~rbx,0"]], [0, 0, 56, 0, 1, 2, 0, 1, 35, -1, 9.57346529987039e-05, ["call    write_output", "mov     esi, cs:conversions_mask"], ["call~FOO", "mov~esi,<TAG>"]], [1, 0, 359, 0, 0, 2, 0, 1, 16, 18, 0.061339271480950086, ["cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      loc_2370"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 359, 0, 0, 3, 1, 1, 15, 19, 0.12205994981944704, ["test    cl, 4", "mov     rax, [rsp+118h+var_118]", "jz      loc_2B47"], ["test~cl,0", "mov~rax,<TAG>", "jz~FOO"]], [0, 0, 359, 0, 0, 2, 1, 1, 14, 20, 0.057270548728505184, ["test    r13, r13", "jz      loc_2346"], ["test~r13,r13", "jz~FOO"]], [0, 0, 359, 0, 0, 2, 0, 1, 15, 20, 0.0, ["mov     cs:skip_records, r13", "jmp     loc_2346"], ["mov~<TAG>,r13", "jmp~FOO"]], [0, 0, 359, 1, 0, 6, 1, 1, 15, 20, 0.0, ["mov     rax, r13", "xor     edx, edx", "div     cs:input_blocksize", "mov     cs:skip_records, rax", "mov     cs:skip_bytes, rdx", "jmp     loc_2346"], ["mov~rax,r13", "xor~edx,edx", "div~,<TAG>", "mov~<TAG>,rax", "mov~<TAG>,rdx", "jmp~FOO"]], [1, 0, 55, 0, 0, 2, 1, 1, 32, -1, 0.08159047170181848, ["and     sil, 8", "jz      loc_348F"], ["and~sil,0", "jz~FOO"]], [1, 0, 359, 0, 0, 2, 0, 1, 16, 18, 0.061339271480950086, ["cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      short loc_2370"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 359, 0, 0, 2, 0, 1, 17, 18, 0.0, ["mov     cs:max_records, rax", "jmp     loc_2370"], ["mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 359, 1, 0, 4, 1, 0, 17, 18, 0.0, ["xor     edx, edx", "div     cs:input_blocksize", "mov     cs:max_records, rax", "mov     cs:max_bytes, rdx"], ["xor~edx,edx", "div~,<TAG>", "mov~<TAG>,rax", "mov~<TAG>,rdx"]], [1, 0, 359, 1, 0, 9, 0, 1, 27, 11, 0.012121479910451278, ["mov     rdi, cs:page_size", "mov     r15, rax", "lea     rdx, [rdi+2]", "mov     rdi, 7FFFFFFFFFFFFFFFh", "add     rdx, rdx", "neg     rdx", "cmp     rdx, rdi", "cmova   rdx, rdi", "jmp     loc_371F"], ["mov~rdi,<TAG>", "mov~r15,rax", "lea~rdx,[rdi+0]", "mov~rdi,0", "add~rdx,rdx", "neg~rdx", "cmp~rdx,rdi", "cmova~rdx,rdi", "jmp~FOO"]], [0, 0, 44, 0, 1, 2, 0, 2, 37, -1, 6.627783669141039e-05, ["call    write_output", "jmp     loc_3369"], ["call~FOO", "jmp~FOO"]], [1, 0, 359, 0, 0, 3, 2, 0, 5, 7, 0.008210654357182958, ["mov     [rsp+118h+var_118], 0FFFFFFFFFFFFFFFFh", "xor     r13d, r13d", "xor     ebp, ebp"], ["mov~<TAG>,0", "xor~r13d,r13d", "xor~ebp,ebp"]], [2, 0, 359, 0, 2, 9, 3, 2, 23, 11, 0.03848078202649034, ["lea     rsi, aCannotCombineB; \"cannot combine block and unblock\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; fmt", "mov     edi, 1; status", "xor     eax, eax", "call    nl_error"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 359, 0, 0, 5, 2, 1, 22, 12, 0.1532399898807172, ["mov     eax, ebx", "and     eax, 18h", "lea     edx, [rax-1]", "test    edx, eax", "jnz     loc_3B73"], ["mov~eax,ebx", "and~eax,0", "lea~edx,[rax-1]+0]", "test~edx,eax", "jnz~FOO"]], [0, 1, 359, 0, 0, 1, 0, 0, 7, 6, 0.0, ["mov     cs:input_blocksize, 200h"], ["mov~<TAG>,<STR>"]], [2, 0, 359, 0, 0, 3, 1, 1, 6, 6, 0.013542338108803082, ["or      cs:conversions_mask, 800h", "cmp     cs:input_blocksize, 0", "jnz     short loc_2B9E"], ["or~<TAG>,0", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 359, 0, 0, 2, 1, 1, 20, 15, 0.005942912689996465, ["test    eax, eax", "jz      loc_2BDB"], ["test~eax,eax", "jz~FOO"]], [1, 0, 187, 0, 2, 10, 2, 3, 35, -1, 0.0401643690349947, ["lea     rsi, aStandardInput; \"standard input\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     esi, ebp; add_flags", "mov     rdx, rax; name", "xor     edi, edi; fd", "mov     cs:input_file, rax", "call    set_fd_flags", "jmp     loc_259E"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~esi,ebp", "mov~rdx,rax", "xor~edi,edi", "mov~<TAG>,rax", "call~FOO", "jmp~FOO"]], [0, 0, 192, 0, 1, 6, 1, 2, 34, -1, 0.08337015435371745, ["mov     rbx, cs:input_file", "mov     ebp, cs:input_flags", "call    ___errno_location", "mov     [rsp+118h+invalid], rax", "test    rbx, rbx", "jz      loc_3375"], ["mov~rbx,<TAG>", "mov~ebp,<TAG>", "call~FOO", "mov~[rsp+0],rax", "test~rbx,rbx", "jz~FOO"]], [1, 0, 359, 0, 0, 2, 0, 0, 21, 14, 0.0025921998350418285, ["lea     rax, iread_fullblock", "mov     cs:warn_partial_read, 0"], ["lea~rax,<TAG>", "mov~<TAG>,0"]], [1, 0, 8, 0, 0, 2, 0, 1, 41, -1, 0.020148462354188757, ["cmp     cs:i_nocache, 0", "jnz     loc_35A2"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 44, -1, 0.004374337221633086, ["mov     dword ptr [rsp+118h+exit_status], 0", "jmp     loc_33AE"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [2, 0, 359, 0, 2, 9, 3, 2, 24, 10, 0.08064366609139237, ["lea     rsi, aCannotCombineL; \"cannot combine lcase and ucase\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; fmt", "mov     edi, 1; status", "xor     eax, eax", "call    nl_error"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 359, 0, 0, 5, 2, 1, 23, 11, 0.11537780099668002, ["mov     eax, ebx", "and     eax, 60h", "lea     edx, [rax-1]", "test    edx, eax", "jnz     loc_3B97"], ["mov~eax,ebx", "and~eax,0", "lea~edx,[rax-1]+0]", "test~edx,eax", "jnz~FOO"]], [0, 0, 7, 0, 1, 5, 3, 2, 42, -1, 0.0025259219983504184, ["xor     esi, esi; len", "xor     edi, edi; fd", "call    invalidate_cache", "test    al, al", "jnz     loc_33BB"], ["xor~esi,esi", "xor~edi,edi", "call~FOO", "test~al,al", "jnz~FOO"]], [3, 0, 6, 0, 3, 18, 4, 4, 43, -1, 0.0, ["mov     rdx, cs:input_file; arg", "mov     esi, 3; s", "xor     edi, edi; n", "call    quotearg_n_style_colon", "lea     rsi, aFailedToDiscar; \"failed to discard cache for: %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbx, rax", "call    _dcgettext", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+invalid]", "mov     rcx, rbx", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    nl_error", "mov     dword ptr [rsp+118h+exit_status], 1", "jmp     loc_33BB"], ["mov~rdx,<TAG>", "mov~esi,0", "xor~edi,edi", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbx,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~rcx,rbx", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [2, 0, 359, 0, 0, 9, 3, 1, 21, 13, 0.15298224273802838, ["mov     cs:iread_fnc, rax", "mov     eax, ecx", "and     eax, 0FFFFFFFEh", "mov     cs:input_flags, eax", "mov     eax, ebx", "and     eax, 7", "lea     edx, [rax-1]", "test    edx, eax", "jnz     loc_3D46"], ["mov~<TAG>,rax", "mov~eax,ecx", "and~eax,0", "mov~<TAG>,eax", "mov~eax,ebx", "and~eax,0", "lea~edx,[rax-1]+0]", "test~edx,eax", "jnz~FOO"]], [2, 0, 6, 0, 2, 9, 3, 2, 25, -1, 0.0021687581006244842, ["lea     rsi, aCannotCombineE; \"cannot combine excl and nocreat\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; fmt", "mov     edi, 1; status", "xor     eax, eax", "call    nl_error"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 225, 0, 0, 5, 2, 1, 24, -1, 0.07646253092965712, ["mov     eax, ebx", "and     eax, 3000h", "lea     edx, [rax-1]", "test    edx, eax", "jnz     loc_3BCB"], ["mov~eax,ebx", "and~eax,0", "lea~edx,[rax-1]+0]", "test~edx,eax", "jnz~FOO"]], [2, 0, 359, 2, 0, 4, 0, 1, 18, 11, 0.09438137220246881, ["add     rax, 1", "add     rdx, 1", "cmp     [rax-1], cl", "jnz     loc_34EF"], ["add~rax,0", "add~rdx,0", "cmp~[rax-1]+0],cl", "jnz~FOO"]], [0, 0, 359, 0, 0, 3, 1, 1, 19, 10, 0.005287498527159184, ["movzx   ecx, byte ptr [rdx]", "test    cl, cl", "jnz     short loc_2CA0"], ["movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [1, 0, 359, 0, 0, 4, 0, 0, 17, 12, 0.09129577069427981, ["lea     rdx, aStatus; \"status\"", "mov     rax, r12", "mov     ecx, 73h ; 's'", "nop"], ["lea~rdx,<TAG>", "mov~rax,r12", "mov~ecx,0", "nop"]], [2, 0, 5, 0, 2, 9, 3, 2, 26, -1, 0.00342435489572287, ["lea     rsi, aCannotCombineD; \"cannot combine direct and nocache\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; fmt", "mov     edi, 1; status", "xor     eax, eax", "call    nl_error"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 220, 0, 0, 2, 1, 1, 27, -1, 0.07285407093201367, ["test    cl, 2", "jz      short loc_2464"], ["test~cl,0", "jz~FOO"]], [0, 0, 144, 0, 0, 2, 0, 1, 40, -1, 0.015126075173795215, ["cmp     cs:input_blocksize, rbx", "jz      loc_35FF"], ["cmp~<TAG>,rbx", "jz~FOO"]], [2, 0, 219, 0, 0, 4, 1, 1, 28, -1, 0.002091433957817839, ["xor     eax, eax", "cmp     cs:max_records, 0", "mov     cs:i_nocache, 1", "jnz     short loc_244E"], ["xor~eax,eax", "cmp~<TAG>,0", "mov~<TAG>,0", "jnz~FOO"]], [1, 0, 148, 0, 0, 2, 0, 1, 43, -1, 0.005802992812536821, ["cmp     cs:max_bytes, 0", "jz      loc_3442"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 218, 0, 0, 3, 1, 0, 29, -1, 0.0, ["xor     eax, eax", "cmp     cs:max_bytes, 0", "setz    al"], ["xor~eax,eax", "cmp~<TAG>,0", "setz~al"]], [3, 0, 4, 0, 3, 15, 2, 3, 27, -1, 0.0032623424060327557, ["mov     rsi, cs:output_file; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aFailedToOpenS; \"failed to open %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbx, rax", "call    _dcgettext", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+invalid]", "mov     rcx, rbx", "mov     edi, 1; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    nl_error"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbx,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~rcx,rbx", "mov~edi,0", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO"]], [3, 0, 180, 0, 1, 7, 2, 2, 39, -1, 0.0036673736302580418, ["or      ebx, 1", "mov     ecx, 1B6h; mode", "mov     edi, 1; desired_fd", "mov     edx, ebx; flag", "call    ifd_reopen", "test    eax, eax", "js      loc_3C13"], ["or~ebx,0", "mov~ecx,0", "mov~edi,0", "mov~edx,ebx", "call~FOO", "test~eax,eax", "js~FOO"]], [2, 0, 217, 0, 0, 4, 2, 0, 29, -1, 0.0031960645693413455, ["mov     cs:i_nocache_eof, al", "and     cs:i_nocache_eof, 1", "and     ecx, 0FFFFFFFCh", "mov     cs:input_flags, ecx"], ["mov~<TAG>,al", "and~<TAG>,0", "and~ecx,0", "mov~<TAG>,ecx"]], [1, 0, 216, 0, 0, 2, 1, 1, 28, -1, 0.07506333215506068, ["test    sil, 2", "jz      short loc_24A0"], ["test~sil,0", "jz~FOO"]], [0, 0, 53, 0, 0, 7, 0, 0, 35, -1, 0.00447007187463179, ["lea     rax, [rsi+1]", "movzx   ecx, byte ptr cs:space_character; \" \"", "cmp     rax, cs:output_blocksize", "mov     rdx, cs:obuf", "mov     cs:oc, rax", "mov     [rdx+rsi], cl", "jb      short loc_3479"], ["lea~rax,[rsi+0]", "movzx~ecx,<TAG>", "cmp~rax,<TAG>", "mov~rdx,<TAG>", "mov~<TAG>,rax", "mov~<TAG>,cl", "jb~FOO"]], [0, 0, 53, 0, 1, 1, 0, 1, 36, -1, 0.0, ["call    write_output"], ["call~FOO"]], [2, 0, 3, 0, 2, 11, 3, 2, 28, -1, 0.0020398845292800756, ["lea     rsi, aOffsetTooLarge; \"offset too large: cannot truncate to a \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, obs", "mov     rdx, rax; fmt", "mov     rcx, rbx", "xor     esi, esi; errnum", "mov     edi, 1; status", "xor     eax, eax", "call    nl_error"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r8,obs", "mov~rdx,rax", "mov~rcx,rbx", "xor~esi,esi", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 176, 3, 0, 9, 1, 1, 41, -1, 0.020292064333686813, ["mov     r13, cs:output_blocksize", "xor     edx, edx", "mov     rax, 7FFFFFFFFFFFFFFFh", "mov     rbp, rbx", "div     r13", "imul    rbp, r13", "add     rbp, cs:seek_bytes", "cmp     rbx, rax", "ja      loc_3C53"], ["mov~r13,<TAG>", "xor~edx,edx", "mov~rax,0", "mov~rbp,rbx", "div~,r13", "imul~rbp,r13", "add~rbp,<TAG>", "cmp~rbx,rax", "ja~FOO"]], [2, 0, 215, 0, 0, 4, 1, 1, 29, -1, 0.002150347590432426, ["xor     eax, eax", "cmp     cs:max_records, 0", "mov     cs:o_nocache, 1", "jnz     short loc_248A"], ["xor~eax,eax", "cmp~<TAG>,0", "mov~<TAG>,0", "jnz~FOO"]], [1, 0, 214, 0, 0, 3, 1, 0, 30, -1, 0.0, ["xor     eax, eax", "cmp     cs:max_bytes, 0", "setz    al"], ["xor~eax,eax", "cmp~<TAG>,0", "setz~al"]], [2, 0, 161, 0, 3, 16, 5, 4, 41, -1, 0.0, ["mov     rdx, cs:input_file; arg", "xor     edi, edi; n", "mov     esi, 3; s", "call    quotearg_n_style_colon", "lea     rsi, aSCannotSkipToS; \"%s: cannot skip to specified offset\"", "mov     rbx, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; fmt", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    nl_error", "jmp     loc_272A"], ["mov~rdx,<TAG>", "xor~edi,edi", "mov~esi,0", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 48, 0, 0, 1, 0, 1, 35, -1, 0.0014433839990573819, ["jmp     short loc_3496"], ["jmp~FOO"]], [0, 0, 48, 0, 0, 1, 0, 0, 33, -1, 0.03656450060877425, ["mov     rsi, cs:oc"], ["mov~rsi,<TAG>"]], [2, 0, 213, 0, 0, 4, 2, 0, 30, -1, 0.0031371509367267587, ["mov     cs:o_nocache_eof, al", "and     cs:o_nocache_eof, 1", "and     esi, 0FFFFFFFDh", "mov     cs:output_flags, esi"], ["mov~<TAG>,al", "and~<TAG>,0", "and~esi,0", "mov~<TAG>,esi"]], [1, 0, 212, 0, 0, 2, 1, 1, 29, -1, 0.07703693884764934, ["test    bl, 1", "jz      short loc_24DA"], ["test~bl,0", "jz~FOO"]], [3, 0, 2, 0, 3, 15, 2, 3, 29, -1, 0.0007290562036055143, ["mov     rsi, cs:output_file; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aCannotFstatS; \"cannot fstat %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     ftruncate_errno, rax", "call    _dcgettext", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+invalid]", "mov     rcx, rbx", "mov     edi, 1; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    nl_error"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~ftruncate_errno,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~rcx,rbx", "mov~edi,0", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO"]], [2, 0, 173, 0, 1, 8, 1, 2, 43, -1, 0.01960719335454224, ["mov     rax, [rsp+118h+invalid]", "mov     rdx, [rsp+118h+act]; stat_buf", "mov     esi, 1; fildes", "mov     edi, 1; ver", "mov     ebx, [rax]", "call    ___fxstat", "test    eax, eax", "jnz     loc_3C7D"], ["mov~rax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~esi,0", "mov~edi,0", "mov~ebx,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 211, 0, 0, 4, 0, 0, 30, -1, 0.002209261223047013, ["lea     rax, trans_table", "lea     rcx, ebcdic_to_ascii", "lea     rsi, [rax+100h]", "nop     word ptr [rax+rax+00h]"], ["lea~rax,<TAG>", "lea~rcx,<TAG>", "lea~rsi,[rax+0]", "nop~[ord ptr [rax+0]"]], [0, 0, 359, 0, 0, 3, 1, 1, 20, 9, 0.005456875220926122, ["movzx   eax, byte ptr [rax]", "test    al, al", "jnz     loc_34E7"], ["movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [1, 0, 211, 1, 0, 6, 0, 1, 31, -1, 0.0026511134676564154, ["movzx   edx, byte ptr [rax]", "add     rax, 1", "movzx   edx, byte ptr [rcx+rdx]", "mov     [rax-1], dl", "cmp     rax, rsi", "jnz     short loc_24C0"], ["movzx~edx,<TAG>", "add~rax,0", "movzx~edx,<TAG>", "mov~[rax-1]+0],dl", "cmp~rax,rsi", "jnz~FOO"]], [1, 0, 209, 0, 0, 1, 0, 0, 32, -1, 0.0030782373041121714, ["mov     cs:translation_needed, 1"], ["mov~<TAG>,0"]], [1, 0, 359, 0, 0, 2, 0, 1, 21, 9, 0.0014507482031342052, ["cmp     al, 3Dh ; '='", "jz      loc_2CC3"], ["cmp~al,0", "jz~FOO"]], [0, 0, 144, 0, 1, 1, 0, 1, 45, -1, 0.0010457169789089196, ["call    write_output"], ["call~FOO"]], [0, 0, 144, 0, 0, 1, 0, 1, 44, -1, 0.002113526570048309, ["jmp     short loc_2CF0"], ["jmp~FOO"]], [1, 0, 1, 0, 1, 5, 0, 1, 11, -1, 0.0009647107340638623, ["lea     rdi, arg; \"fullblock\"", "call    quote", "lea     rsi, aInvalidOutputF; \"invalid output flag\"", "mov     rbx, rax", "mov     edx, 5; category"], ["lea~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0"]], [0, 0, 144, 4, 1, 17, 0, 2, 43, -1, 0.00944090962648757, ["mov     r15, cs:output_blocksize", "mov     r12, cs:oc", "mov     rsi, r14; src", "mov     rcx, r15", "sub     rcx, r12", "cmp     rcx, rbx", "cmova   rcx, rbx", "add     rdi, r12; dest", "mov     rbp, rcx", "mov     rdx, rcx; n", "call    _memcpy", "lea     rcx, [r12+rbp]", "sub     rbx, rbp", "add     r14, rbp", "cmp     r15, rcx", "mov     cs:oc, rcx", "ja      short loc_2CF5"], ["mov~r15,<TAG>", "mov~r12,<TAG>", "mov~rsi,r14", "mov~rcx,r15", "sub~rcx,r12", "cmp~rcx,rbx", "cmova~rcx,rbx", "add~rdi,r12", "mov~rbp,rcx", "mov~rdx,rcx", "call~FOO", "lea~rcx,<TAG>", "sub~rbx,rbp", "add~r14,rbp", "cmp~r15,rcx", "mov~<TAG>,rcx", "ja~FOO"]], [0, 0, 203, 0, 1, 5, 0, 1, 31, -1, 0.0022681748556616, ["call    ___ctype_toupper_loc", "mov     rsi, [rax]", "lea     rax, trans_table", "lea     rcx, [rax+100h]", "nop     dword ptr [rax+00000000h]"], ["call~FOO", "mov~rsi,<TAG>", "lea~rax,<TAG>", "lea~rcx,[rax+0]", "nop~[word ptr [rax+0]"]], [1, 0, 0, 0, 3, 11, 4, 3, 12, -1, 0.0, ["xor     edi, edi; domainname", "call    _dcgettext", "lea     rdx, format; \"%s: %s\"", "mov     rcx, rax", "xor     edi, edi; status", "mov     r8, rbx", "xor     esi, esi; errnum", "xor     eax, eax", "call    nl_error", "mov     edi, 1; status", "call    usage"], ["xor~edi,edi", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "xor~edi,edi", "mov~r8,rbx", "xor~esi,esi", "xor~eax,eax", "call~FOO", "mov~edi,0", "call~FOO"]], [2, 0, 1, 0, 1, 9, 1, 2, 13, -1, 0.00042712383645575585, ["lea     rax, aCountBytes; \"count_bytes\"", "lea     rdi, aSkipBytes; \"skip_bytes\"", "and     sil, 4", "cmovnz  rdi, rax; arg", "call    quote", "mov     edx, 5", "mov     rbx, rax", "lea     rsi, aInvalidOutputF; \"invalid output flag\"", "jmp     loc_3CD8"], ["lea~rax,<TAG>", "lea~rdi,<TAG>", "and~sil,0", "cmovnz~rdi,rax", "call~FOO", "mov~edx,0", "mov~rbx,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 1, 0, 1, 6, 0, 2, 12, 0, 7.364204076823377e-06, ["lea     rdi, aSeekBytes; \"seek_bytes\"", "call    quote", "mov     edx, 5", "mov     rbx, rax", "lea     rsi, aInvalidInputFl; \"invalid input flag\"", "jmp     loc_3CD8"], ["lea~rdi,<TAG>", "call~FOO", "mov~edx,0", "mov~rbx,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 144, 0, 0, 1, 0, 0, 45, -1, 4.418522446094026e-05, ["mov     rdi, cs:obuf"], ["mov~rdi,<TAG>"]], [0, 0, 0, 0, 1, 1, 0, 1, 44, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 203, 1, 0, 6, 0, 1, 32, -1, 0.002621656651349122, ["movzx   edx, byte ptr [rax]", "add     rax, 1", "mov     edx, [rsi+rdx*4]", "mov     [rax-1], dl", "cmp     rax, rcx", "jnz     short loc_2500"], ["movzx~edx,<TAG>", "add~rax,0", "mov~edx,<TAG>", "mov~[rax-1]+0],dl", "cmp~rax,rcx", "jnz~FOO"]], [1, 0, 201, 0, 0, 1, 0, 0, 33, -1, 0.007401025097207493, ["mov     cs:translation_needed, 1"], ["mov~<TAG>,0"]], [2, 0, 359, 0, 1, 10, 0, 2, 19, 15, 0.0926139632240312, ["mov     rsi, [rsp+118h+invalid]; invalid", "mov     rdi, r8; str", "mov     [rsp+118h+exit_status], r8", "mov     dword ptr [rsp+118h+bytes], 0", "call    parse_integer", "mov     rdx, r12", "mov     esi, 69h ; 'i'", "lea     rcx, aIbs; \"ibs\"", "mov     r8, [rsp+118h+exit_status]", "jmp     short loc_352B"], ["mov~rsi,[rsp+0]", "mov~rdi,r8", "mov~[rsp+0],r8", "mov~[word ptr [rsp+0],0", "call~FOO", "mov~rdx,r12", "mov~esi,0", "lea~rcx,<TAG>", "mov~r8,[rsp+0]", "jmp~FOO"]], [2, 0, 359, 2, 0, 4, 0, 1, 20, 14, 0.09452865628400528, ["add     rdx, 1", "add     rcx, 1", "cmp     [rdx-1], sil", "jz      short loc_351F"], ["add~rdx,0", "add~rcx,0", "cmp~[rdx-1]+0],sil", "jz~FOO"]], [3, 0, 3, 0, 3, 15, 2, 3, 36, -1, 0.0007216919995286909, ["mov     rsi, cs:input_file; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aFailedToOpenS; \"failed to open %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbx, rax", "call    _dcgettext", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+invalid]", "mov     rcx, rbx", "mov     edi, 1; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    nl_error"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbx,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~rcx,rbx", "mov~edi,0", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO"]], [0, 0, 190, 0, 1, 7, 3, 2, 35, -1, 0.042115883115352894, ["xor     ecx, ecx; mode", "xor     edi, edi; desired_fd", "mov     edx, ebp; flag", "mov     rsi, rbx; file", "call    ifd_reopen", "test    eax, eax", "js      loc_3D06"], ["xor~ecx,ecx", "xor~edi,edi", "mov~edx,ebp", "mov~rsi,rbx", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 359, 0, 0, 3, 0, 0, 21, 15, 0.03219153515064562, ["lea     rcx, aObs; \"obs\"", "mov     rdx, r12", "mov     esi, 6Fh ; 'o'"], ["lea~rcx,<TAG>", "mov~rdx,r12", "mov~esi,0"]], [1, 0, 195, 1, 0, 6, 0, 1, 34, -1, 0.002621656651349122, ["movzx   edx, byte ptr [rax]", "add     rax, 1", "movzx   edx, byte ptr [rcx+rdx]", "mov     [rax-1], dl", "cmp     rax, rsi", "jnz     short loc_2540"], ["movzx~edx,<TAG>", "add~rax,0", "movzx~edx,<TAG>", "mov~[rax-1]+0],dl", "cmp~rax,rsi", "jnz~FOO"]], [0, 0, 195, 0, 0, 4, 0, 0, 33, -1, 0.002386002120890774, ["lea     rax, trans_table", "lea     rcx, ascii_to_ebcdic", "lea     rsi, [rax+100h]", "nop     word ptr [rax+rax+00000000h]"], ["lea~rax,<TAG>", "lea~rcx,<TAG>", "lea~rsi,[rax+0]", "nop~[ord ptr [rax+0]"]], [2, 0, 359, 2, 0, 4, 0, 1, 22, 14, 0.03406204298615876, ["add     rdx, 1", "add     rcx, 1", "cmp     [rdx-1], sil", "jnz     short loc_3572"], ["add~rdx,0", "add~rcx,0", "cmp~[rdx-1]+0],sil", "jnz~FOO"]], [0, 0, 359, 0, 0, 3, 1, 1, 23, 13, 0.007717685872510899, ["movzx   esi, byte ptr [rcx]", "test    sil, sil", "jnz     short loc_3548"], ["movzx~esi,<TAG>", "test~sil,sil", "jnz~FOO"]], [3, 0, 193, 0, 0, 3, 0, 0, 35, -1, 0.0071064569341345585, ["mov     cs:translation_needed, 1", "mov     byte ptr cs:newline_character, 25h ; '%'; \"\\n\"", "mov     byte ptr cs:space_character, 40h ; '@'; \" \""], ["mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0"]], [0, 0, 359, 0, 0, 3, 1, 1, 24, 12, 0.009102156238953694, ["movzx   edx, byte ptr [rdx]", "test    dl, dl", "jz      loc_36FD"], ["movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [2, 0, 2, 0, 2, 9, 3, 2, 22, -1, 0.0008468834688346883, ["lea     rsi, aCannotCombineA; \"cannot combine any two of {ascii,ebcdic\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; fmt", "mov     edi, 1; status", "xor     eax, eax", "call    nl_error"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 359, 0, 0, 2, 0, 1, 25, 12, 0.00023565453045834805, ["cmp     dl, 3Dh ; '='", "jz      loc_36FD"], ["cmp~dl,0", "jz~FOO"]], [1, 0, 144, 0, 0, 2, 1, 1, 35, -1, 0.05184583775185578, ["and     esi, 100h", "jz      short loc_2D85"], ["and~esi,0", "jz~FOO"]], [1, 0, 359, 0, 0, 4, 0, 1, 23, 15, 0.02743425931701772, ["mov     rdx, r12", "mov     esi, 62h ; 'b'", "lea     rcx, aCbs+1; \"bs\"", "jmp     short loc_358F"], ["mov~rdx,r12", "mov~esi,0", "lea~rcx,<TAG>", "jmp~FOO"]], [1, 0, 144, 0, 0, 2, 0, 1, 36, -1, 0.041893115942028984, ["cmp     cs:status_level, 1", "jz      short loc_2DE2"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 359, 2, 0, 4, 0, 1, 24, 14, 0.029168529377109623, ["add     rdx, 1", "add     rcx, 1", "cmp     [rdx-1], sil", "jz      short loc_3583"], ["add~rdx,0", "add~rcx,0", "cmp~[rdx-1]+0],sil", "jz~FOO"]], [1, 0, 144, 0, 0, 2, 0, 1, 37, -1, 0.002682411334982915, ["cmp     cs:status_level, 1", "jz      short loc_2DE2"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 144, 0, 1, 1, 0, 1, 38, -1, 0.0, ["call    print_stats"], ["call~FOO"]], [3, 0, 186, 0, 1, 19, 4, 2, 36, -1, 0.08180894308943089, ["xor     esi, esi; offset", "mov     edx, 1; whence", "xor     edi, edi; fd", "call    _lseek", "mov     rdx, offset", "mov     rsi, cs:output_file; file", "mov     ebp, cs:output_flags", "not     rdx", "shr     rdx, 3Fh", "test    offset, offset", "mov     cs:input_seekable, dl", "mov     edx, 0", "cmovs   offset, rdx", "test    rsi, rsi", "mov     cs:input_offset, rax", "mov     rax, [rsp+118h+invalid]", "mov     eax, [rax]", "mov     cs:input_seek_errno, eax", "jz      loc_36CF"], ["xor~esi,esi", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rdx,offset", "mov~rsi,<TAG>", "mov~ebp,<TAG>", "not~rdx", "shr~rdx,0", "test~offset,offset", "mov~<TAG>,dl", "mov~edx,0", "cmovs~offset,rdx", "test~rsi,rsi", "mov~<TAG>,rax", "mov~rax,[rsp+0]", "mov~eax,<TAG>", "mov~<TAG>,eax", "jz~FOO"]], [1, 0, 144, 1, 1, 7, 1, 2, 37, -1, 0.043021680216802166, ["mov     rbx, cs:input_blocksize", "sub     rbx, [rsp+118h+var_118]", "xor     edi, edi; fd", "mov     rsi, rbx; len", "call    invalidate_cache", "cmp     cs:input_seekable, 0", "jnz     loc_2F7D"], ["mov~rbx,<TAG>", "sub~rbx,<TAG>", "xor~edi,edi", "mov~rsi,rbx", "call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 144, 0, 0, 3, 0, 1, 38, -1, 0.015442735949098601, ["mov     eax, cs:input_seek_errno", "cmp     eax, 1Dh", "jz      short loc_2E6E"], ["mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [0, 0, 144, 0, 0, 2, 0, 0, 39, -1, 0.0022460822434311302, ["mov     rdi, [rsp+118h+invalid]", "mov     [rdi], eax"], ["mov~rdi,[rsp+0]", "mov~<TAG>,eax"]], [0, 0, 174, 0, 1, 4, 1, 2, 42, -1, 0.02015214445622717, ["mov     rdi, size; fd", "call    iftruncate", "test    eax, eax", "jnz     loc_360C"], ["mov~rdi,size", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 2, 181, 0, 0, 5, 3, 0, 38, -1, 0.0022755390597384234, ["and     eax, 200h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 200h", "or      ebx, eax"], ["and~eax,<STR>", "cmp~eax,0", "sbb~eax,eax", "and~eax,<STR>", "or~ebx,eax"]], [0, 0, 41, 1, 1, 5, 1, 2, 36, -1, 0.008568251443383999, ["mov     rdi, cs:obuf; fd", "call    iwrite", "add     cs:w_bytes, rax", "test    rax, rax", "jz      short loc_37AC"], ["mov~rdi,<TAG>", "call~FOO", "add~<TAG>,rax", "test~rax,rax", "jz~FOO"]], [1, 0, 40, 1, 0, 1, 0, 0, 37, -1, 0.0, ["add     cs:w_partial, 1"], ["add~<TAG>,0"]], [2, 1, 169, 1, 0, 5, 2, 1, 44, -1, 0.019489366089313065, ["mov     eax, [rsp+118h+stdout_stat.st_mode]", "and     eax, 0F000h", "sub     eax, 4000h", "test    eax, 0FFFFB000h", "jnz     loc_269F"], ["mov~eax,[rsp+0]", "and~eax,<STR>", "sub~eax,0", "test~eax,0", "jnz~FOO"]], [2, 0, 144, 0, 3, 16, 4, 3, 40, -1, 0.0040871332626369675, ["mov     rdx, cs:input_file; arg", "mov     esi, 3; s", "xor     edi, edi; n", "call    quotearg_n_style_colon", "lea     rsi, aSCannotSeek; \"%s: cannot seek\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbx, rax", "call    _dcgettext", "mov     rdx, rax; fmt", "mov     rax, [rsp+118h+invalid]", "mov     rcx, rbx", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    nl_error"], ["mov~rdx,<TAG>", "mov~esi,0", "xor~edi,edi", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbx,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~rcx,rbx", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO"]], [0, 0, 178, 0, 0, 3, 1, 1, 39, -1, 0.026308619064451512, ["mov     rbx, cs:seek_records", "test    rbx, rbx", "jz      short loc_269F"], ["mov~rbx,<TAG>", "test~rbx,rbx", "jz~FOO"]], [1, 0, 177, 0, 0, 2, 1, 1, 40, -1, 0.021131583598444678, ["test    byte ptr cs:conversions_mask+1, 2", "jnz     short loc_269F"], ["test~<TAG>,0", "jnz~FOO"]], [3, 0, 144, 0, 0, 3, 0, 0, 41, -1, 0.007353157770708141, ["mov     cs:input_seekable, 0", "mov     cs:input_seek_errno, 1Dh", "mov     dword ptr [rsp+118h+exit_status], 1"], ["mov~<TAG>,0", "mov~<TAG>,0", "mov~[word ptr [rsp+0],0"]], [2, 0, 144, 0, 3, 15, 4, 4, 40, -1, 0.0032807529162248183, ["mov     rsi, cs:input_file; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aOffsetOverflow; \"offset overflow while reading file %s\"", "mov     rbx, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; fmt", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    nl_error", "jmp     loc_2E55"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [3, 0, 144, 0, 3, 15, 2, 3, 45, -1, 0.018892865559090373, ["mov     rsi, cs:output_file; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aFailedToTrunca; \"failed to truncate to %lu bytes in outp\"...", "mov     r12, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, r12", "mov     rdx, rax; fmt", "mov     rcx, size", "mov     esi, ebx; errnum", "mov     edi, 1; status", "xor     eax, eax", "call    nl_error"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~r12,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r8,r12", "mov~rdx,rax", "mov~rcx,size", "mov~esi,ebx", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [0, 0, 144, 0, 0, 1, 0, 0, 42, -1, 0.0005449511016849299, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 167, 1, 1, 7, 1, 2, 38, -1, 0.06025023565453046, ["call    gethrxtime", "mov     rbx, cs:skip_records", "mov     cs:start_time, rax", "add     rax, 3B9ACA00h", "mov     cs:next_time, rax", "test    rbx, rbx", "jnz     short loc_26CE"], ["call~FOO", "mov~rbx,<TAG>", "mov~<TAG>,rax", "add~rax,0", "mov~<TAG>,rax", "test~rbx,rbx", "jnz~FOO"]], [2, 0, 168, 0, 2, 10, 1, 3, 37, -1, 0.05341625427123836, ["lea     rsi, aStandardOutput; \"standard output\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     esi, ebp; add_flags", "mov     rdx, rax; name", "mov     edi, 1; fd", "mov     cs:output_file, rax", "call    set_fd_flags", "jmp     loc_269F"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~esi,ebp", "mov~rdx,rax", "mov~edi,0", "mov~<TAG>,rax", "call~FOO", "jmp~FOO"]], [0, 0, 144, 0, 0, 3, 0, 0, 41, -1, 0.004219688936019795, ["lea     rcx, [r14+rbx]", "mov     rax, r14", "nop     dword ptr [rax]"], ["lea~rcx,<TAG>", "mov~rax,r14", "nop~<TAG>"]], [1, 0, 368, 0, 1, 4, 0, 2, 1, 12, 0.0, ["lea     rdi, caught_signals; set", "mov     esi, 0Ah; signo", "call    _sigaddset", "jmp     loc_1F6D"], ["lea~rdi,<TAG>", "mov~esi,0", "call~FOO", "jmp~FOO"]], [1, 0, 369, 1, 2, 19, 2, 3, 0, 12, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     ebp, edi", "lea     argc, name; \"POSIXLY_CORRECT\"", "mov     rbx, argv", "sub     rsp, 0E8h", "mov     rax, fs:28h", "mov     [rsp+118h+var_40], rax", "xor     eax, eax", "call    _getenv", "lea     rdi, caught_signals; set", "mov     r12, rax", "call    _sigemptyset", "test    r12, r12", "jz      loc_36B9"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~ebp,edi", "lea~argc,<TAG>", "mov~rbx,argv", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "lea~rdi,<TAG>", "mov~r12,rax", "call~FOO", "test~r12,r12", "jz~FOO"]], [1, 0, 166, 0, 0, 2, 0, 1, 39, -1, 0.05326160598562507, ["cmp     cs:skip_bytes, 0", "jz      short loc_272A"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 144, 1, 0, 6, 0, 1, 42, -1, 0.0031518793448804053, ["movzx   edx, byte ptr [rax]", "add     rax, 1", "movzx   edx, byte ptr [r13+rdx+0]", "mov     [rax-1], dl", "cmp     rax, rcx", "jnz     short loc_2EC8"], ["movzx~edx,<TAG>", "add~rax,0", "movzx~edx,[yte ptr [r13+0]", "mov~[rax-1]+0],dl", "cmp~rax,rcx", "jnz~FOO"]], [1, 0, 359, 0, 0, 6, 0, 0, 25, 11, 0.01188582537999293, ["mov     rdx, cs:page_size", "mov     rdi, 7FFFFFFFFFFFFFFFh", "mov     cs:output_blocksize, rax", "neg     rdx", "cmp     rdx, rdi", "cmova   rdx, rdi"], ["mov~rdx,<TAG>", "mov~rdi,0", "mov~<TAG>,rax", "neg~rdx", "cmp~rdx,rdi", "cmova~rdx,rdi"]], [1, 0, 144, 0, 0, 2, 0, 1, 41, -1, 0.014640037704724872, ["cmp     cs:char_is_saved, 0", "jz      short loc_2F0F"], ["cmp~<TAG>,0", "jz~FOO"]], [3, 0, 144, 2, 0, 5, 0, 0, 42, -1, 0.0, ["movzx   eax, cs:saved_char", "add     rbx, 1", "mov     cs:char_is_saved, 0", "sub     r14, 1", "mov     [r14], al"], ["movzx~eax,<TAG>", "add~rbx,0", "mov~<TAG>,0", "sub~r14,0", "mov~<TAG>,al"]], [0, 0, 164, 3, 0, 6, 0, 1, 40, -1, 0.0019772887946270766, ["mov     rax, rbx", "add     rbp, r13", "imul    rax, r15", "add     rax, rbp", "cmp     rax, cs:input_offset", "jz      short loc_272A"], ["mov~rax,rbx", "add~rbp,r13", "imul~rax,r15", "add~rax,rbp", "cmp~rax,<TAG>", "jz~FOO"]], [1, 0, 147, 0, 0, 1, 0, 0, 26, -1, 0.0010825379992930363, ["mov     dword ptr [rsp+118h+bytes], 1"], ["mov~[word ptr [rsp+0],0"]], [1, 0, 144, 0, 0, 4, 0, 1, 43, -1, 0.010368799340167314, ["mov     rdx, rbx", "lea     rax, [r14+rbx]", "shr     rdx, 1", "jz      short loc_2F50"], ["mov~rdx,rbx", "lea~rax,<TAG>", "shr~rdx,0", "jz~FOO"]], [0, 0, 160, 0, 0, 4, 1, 1, 40, -1, 0.05896149994108636, ["mov     rdx, cs:seek_records; records", "mov     rax, cs:seek_bytes", "test    rdx, rdx", "jnz     short loc_2746"], ["mov~rdx,<TAG>", "mov~rax,<TAG>", "test~rdx,rdx", "jnz~FOO"]], [0, 0, 144, 0, 0, 3, 0, 0, 44, -1, 0.002113526570048309, ["neg     rdx", "lea     rcx, [rax+rdx*2]", "nop     dword ptr [rax]"], ["neg~rdx", "lea~rcx,<TAG>", "nop~<TAG>"]], [0, 0, 159, 0, 0, 2, 1, 1, 41, -1, 0.04592685872510899, ["test    rax, rax", "jz      loc_27DA"], ["test~rax,rax", "jz~FOO"]], [1, 0, 149, 0, 0, 2, 0, 1, 42, -1, 0.05438096500530223, ["cmp     cs:max_records, 0", "jnz     short loc_27F2"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 152, 0, 0, 2, 0, 1, 45, -1, 0.0033359844468009896, ["cmp     [rsp+118h+bytes], 0", "jz      short loc_27DA"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 144, 1, 0, 5, 0, 1, 45, -1, 0.0010457169789089196, ["movzx   edx, byte ptr [rax-2]", "sub     rax, 2", "mov     [rax+2], dl", "cmp     rax, rcx", "jnz     short loc_2F40"], ["movzx~edx,[yte ptr [rax-2]+0]", "sub~rax,0", "mov~[rax+0],dl", "cmp~rax,rcx", "jnz~FOO"]], [5, 0, 146, 0, 3, 17, 2, 3, 26, -1, 0.15159950512548603, ["mov     rdi, r8; arg", "call    quote", "lea     rsi, aInvalidNumber; \"invalid number\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     rbx, rax", "call    _dcgettext", "cmp     dword ptr [rsp+118h+bytes], 1", "mov     edx, 0", "mov     esi, 4Bh ; 'K'", "mov     rcx, rax", "mov     r8, rbx", "mov     edi, 1; status", "cmovnz  esi, edx; errnum", "lea     rdx, format; \"%s: %s\"", "xor     eax, eax", "call    nl_error"], ["mov~rdi,r8", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~rbx,rax", "call~FOO", "cmp~[word ptr [rsp+0],0", "mov~edx,0", "mov~esi,0", "mov~rcx,rax", "mov~r8,rbx", "mov~edi,0", "cmovnz~esi,edx", "lea~rdx,<TAG>", "xor~eax,eax", "call~FOO"]], [0, 0, 155, 0, 1, 5, 1, 1, 42, -1, 0.005744079179922234, ["mov     rdx, cs:output_blocksize; n", "mov     rdi, cs:obuf; s", "xor     esi, esi; c", "call    _memset", "nop     dword ptr [rax+00000000h]"], ["mov~rdx,<TAG>", "mov~rdi,<TAG>", "xor~esi,esi", "call~FOO", "nop~[word ptr [rax+0]"]], [1, 0, 144, 0, 0, 1, 0, 0, 39, -1, 0.001925739366089321, ["mov     cs:input_offset_overflow, 1"], ["mov~<TAG>,0"]], [1, 0, 155, 1, 0, 2, 0, 1, 44, -1, 0.003674737834334865, ["sub     rbx, 1", "jnz     short loc_2790"], ["sub~rbx,0", "jnz~FOO"]], [1, 0, 27, 0, 1, 4, 1, 2, 38, -1, 0.009544008483563095, ["mov     edi, 1; fildes", "call    _fdatasync", "test    eax, eax", "jz      short loc_37EC"], ["mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 24, 0, 0, 1, 1, 0, 40, -1, 0.00035348179568752205, ["or      cs:conversions_mask, 8000h"], ["or~<TAG>,0"]]], "func_feature": [152, 285, 425, 4, 370, 587, 0, 1709, 0.02789, 155, 82], "succs": [[8, 21], [0, 212], [19], [2], [272, 2], [12], [5], [5, 6], [24, 212], [42, 29], [9, 11], [9], [37, 39], [306, 12], [12, 15], [99, 12], [12], [12], [12], [22], [19], [19], [25], [22], [212, 28], [34, 35], [25, 27], [25, 223], [212, 36], [42], [73, 183], [60, 30], [264], [32, 128], [41, 43], [34, 258], [212, 23], [188, 45], [37, 39], [40, 37], [37], [43, 44], [48, 173], [44], [46, 47], [49, 31], [50, 47], [50], [173], [31], [57, 307], [50, 52], [50, 53], [50], [56, 72], [54, 311], [72, 314], [], [256, 71], [58, 316], [73, 183], [190, 198], [61], [61], [61], [61], [61], [155, 61], [61], [270, 271], [69, 270], [84], [96], [74, 83], [83], [188], [75, 327], [1, 335], [77], [80, 77], [81, 77], [248, 77], [77, 237], [91, 92], [84, 85], [319], [88, 97], [170, 86], [97, 226], [59, 102], [89, 302], [98, 122], [91], [116], [116, 93], [364], [152, 95], [67, 95], [121, 100], [344, 98], [106, 109], [101, 103], [101], [309], [243], [104, 111], [112, 107], [112], [1, 3], [121], [243], [82, 110], [121], [120, 153], [113, 228], [264], [115, 254], [16, 137], [353, 117], [353, 117], [153, 125], [4, 127], [121], [342, 134], [123, 366], [131], [125], [133, 119], [264], [128, 130], [128, 33], [132, 142], [136, 131], [347, 119], [338, 135], [139, 14], [154, 140], [301, 38], [16, 137], [146, 141], [154, 142], [145, 146], [143], [144, 189], [149, 143], [148, 14], [145, 147], [145], [162, 338], [150, 151], [189, 151], [67], [67, 356], [67], [67], [364], [170], [156], [156, 247], [163], [194, 159], [68, 159], [338], [164, 174], [163, 165], [168, 62], [169, 339], [334, 166], [174, 62], [277], [226, 87], [361, 175], [171, 365], [184, 249], [176], [203], [177, 187], [176, 178], [179, 63], [187, 63], [369], [369, 180], [185, 186], [323, 182], [190], [186], [188], [192], [105, 243], [], [189, 191], [160], [193, 205], [192, 195], [160, 197], [64, 196], [64, 205], [161, 68], [204, 253], [357], [357, 199], [], [201, 367], [201, 361], [208], [213], [158, 247], [326, 206], [216, 211], [208, 210], [208], [216], [368, 26], [269, 214], [217, 213], [26], [224, 222], [65, 221], [358, 286], [218, 355], [218, 358], [65, 269], [224], [27, 20], [225, 300], [305, 227], [228], [304, 231], [114, 126], [233, 116], [229, 94], [232, 240], [242, 239], [116], [280, 287], [234, 78], [234], [243], [245, 230], [244, 238], [241, 239], [239], [239], [288, 235], [230, 246], [230], [230], [96], [78], [253], [260], [250, 261], [209], [209, 252], [257, 129], [329], [313, 255], [264], [51, 262], [258], [153], [266, 260], [51, 263], [51], [321, 251], [270], [265, 70], [268, 310], [267, 294], [267], [276], [273, 279], [17, 18], [275, 278], [259, 7], [278], [282], [339, 276], [279], [290, 284], [281, 236], [236], [291], [282, 333], [289, 285], [289], [358], [79], [79], [290], [90, 293], [300], [337, 291], [295], [297, 66], [296, 295], [90], [66, 310], [13], [298], [303], [299, 13], [308], [], [303], [303], [301], [], [308, 309], [59], [311], [314, 55], [321], [312, 329], [317], [315, 319], [315], [324, 318], [320, 317], [256], [352, 322], [304], [352, 324], [76, 325], [326], [330, 76], [157, 207], [328, 330], [330], [346, 167], [331, 124], [332, 14], [338], [345, 292], [277], [336, 108], [108], [345, 343], [341], [345, 340], [345, 283], [14], [341], [146], [122], [219, 350], [345], [351], [10], [10, 348], [219, 358], [118, 351], [96], [200, 354], [200], [220, 358], [364], [138, 359], [360, 172], [363], [361, 172], [274, 7], [361, 203], [138, 363], [6], [202], [342], [202, 362], [181, 215], [215]], "fname": "main", "n_num": 370}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 0, 0, 1, 12, 2, 1, 0, 0, 0.0, ["xor     ebp, ebp", "mov     r9, rdx; rtld_fini", "pop     rsi; argc", "mov     rdx, rsp; ubp_av", "and     rsp, 0FFFFFFFFFFFFFFF0h", "push    rax", "push    rsp; stack_end", "lea     r8, __libc_csu_fini; fini", "lea     rcx, __libc_csu_init; init", "lea     rdi, main; main", "call    cs:__libc_start_main_ptr", "hlt"], ["xor~ebp,ebp", "mov~r9,rdx", "pop~rsi", "mov~rdx,rsp", "and~rsp,0", "push~rax", "push~rsp", "lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "call~<TAG>", "hlt"]]], "func_feature": [1, 2, 1, 0, 1, 0, 0, 12, 0.0, 4, 0], "succs": [[]], "fname": "_start", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_deregisterTMCloneTable_ptr", "test    rax, rax", "jz      short loc_3E20"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 6, 0, 1, 0, 1, 0.0, ["lea     rdi, __bss_start", "push    rbp", "lea     rax, __bss_start", "cmp     rax, rdi", "mov     rbp, rsp", "jz      short loc_3E20"], ["lea~rdi,<TAG>", "push~rbp", "lea~rax,<TAG>", "cmp~rax,rdi", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, -1, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 13, 0.04167, 2, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "deregister_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [3, 0, 3, 2, 0, 11, 0, 1, 0, 0, 0.0, ["lea     rdi, __bss_start", "lea     rsi, __bss_start", "push    rbp", "sub     rsi, rdi", "mov     rbp, rsp", "sar     rsi, 3", "mov     rax, rsi", "shr     rax, 3Fh", "add     rsi, rax", "sar     rsi, 1", "jz      short loc_3E70"], ["lea~rdi,<TAG>", "lea~rsi,<TAG>", "push~rbp", "sub~rsi,rdi", "mov~rbp,rsp", "sar~rsi,0", "mov~rax,rsi", "shr~rax,0", "add~rsi,rax", "sar~rsi,0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_registerTMCloneTable_ptr", "test    rax, rax", "jz      short loc_3E70"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, 0, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 18, 0.04167, 2, 2], "succs": [[], [0, 2], [0, 3], []], "fname": "register_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 0, 0, 1, 4, 0, 1, 0, 0, 0.0, ["call    deregister_tm_clones", "mov     cs:completed_7698, 1", "pop     rbp", "retn"], ["call~FOO", "mov~<TAG>,0", "pop~rbp", "retn"]], [1, 0, 2, 0, 0, 4, 0, 1, 1, -1, 0.16666666666666666, ["cmp     cs:__cxa_finalize_ptr, 0", "push    rbp", "mov     rbp, rsp", "jz      short loc_3EA3"], ["cmp~<TAG>,0", "push~rbp", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     rdi, cs:__dso_handle", "call    __cxa_finalize"], ["mov~rdi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:completed_7698, 0", "jnz     short locret_3EB8"], ["cmp~<TAG>,0", "jnz~FOO"]]], "func_feature": [2, 0, 4, 0, 5, 5, 0, 13, 0.03333, 3, 0], "succs": [[], [0, 2], [0], [], [1, 3]], "fname": "__do_global_dtors_aux", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "pop     rbp", "jmp     register_tm_clones"], ["push~rbp", "mov~rbp,rsp", "pop~rbp", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "frame_dummy", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:interrupt_signal, edi", "retn"], ["mov~<TAG>,edi", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "interrupt_handler", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 0, 1, 0, 4, 0, 0, 0, 0, 0.0, ["mov     eax, cs:info_signal_count", "add     eax, 1", "mov     cs:info_signal_count, eax", "retn"], ["mov~eax,<TAG>", "add~eax,0", "mov~<TAG>,eax", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 4, 0.0, 1, 1], "succs": [[]], "fname": "siginfo_handler", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0.038461538461538464, ["mov     cs:progress_len, ebx"], ["mov~<TAG>,ebx"]], [0, 0, 6, 0, 0, 2, 1, 1, 6, 3, 0.10256410256410257, ["test    ebx, ebx", "js      short loc_4096"], ["test~ebx,ebx", "js~FOO"]], [1, 0, 4, 1, 1, 8, 1, 2, 8, 3, 0.0, ["mov     rdi, cs:stderr@@GLIBC_2_2_5", "lea     r8, aWrittenBySSAnd+1Bh; \"\"", "lea     rdx, aS; \"%*s\"", "sub     ecx, ebx", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_4096"], ["mov~rdi,<TAG>", "lea~r8,<TAG>", "lea~rdx,<TAG>", "sub~ecx,ebx", "mov~esi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 5, 0, 0, 3, 0, 1, 7, 3, 0.027065527065527065, ["mov     ecx, cs:progress_len", "cmp     ecx, ebx", "jg      loc_4218"], ["mov~ecx,<TAG>", "cmp~ecx,ebx", "jg~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 5, 4, 0.24216524216524218, ["test    progress_time, progress_time", "jz      loc_4148"], ["test~progress_time,progress_time", "jz~FOO"]], [2, 0, 21, 0, 0, 9, 2, 1, 3, 8, 0.017094017094017096, ["mov     rax, r14", "mov     rdx, r14", "pxor    xmm0, xmm0", "shr     rax, 1", "and     edx, 1", "or      rax, rdx", "cvtsi2sd xmm0, rax", "addsd   xmm0, xmm0", "jmp     loc_3F95"], ["mov~rax,r14", "mov~rdx,r14", "pxor~xmm0,xmm0", "shr~rax,0", "and~edx,0", "or~rax,rdx", "cvtsi2sd~xmm0,rax", "addsd~xmm0,xmm0", "jmp~FOO"]], [0, 0, 23, 1, 0, 3, 0, 1, 2, 9, 0.012820512820512822, ["sub     now, rax", "mov     r8, delta_xtime; to_block_size", "js      loc_41F0"], ["sub~now,rax", "mov~r8,delta_xtime", "js~FOO"]], [5, 0, 20, 1, 2, 17, 3, 3, 2, 7, 0.08547008547008547, ["lea     rsi, aInfinity; \"Infinity\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "add     rbx, 51Ch", "call    _dcgettext", "lea     r8, aSBS; \"%s B/s\"", "mov     r9, rax", "mov     ecx, 28Eh", "xor     eax, eax", "mov     edx, 1", "mov     esi, 28Eh", "mov     rdi, rbx", "call    ___snprintf_chk", "test    progress_time, progress_time", "pxor    xmm0, xmm0", "lea     r8, aGS; \"%g s\"", "jz      loc_3FEF"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "add~rbx,0", "call~FOO", "lea~r8,<TAG>", "mov~r9,rax", "mov~ecx,0", "xor~eax,eax", "mov~edx,0", "mov~esi,0", "mov~rdi,rbx", "call~FOO", "test~progress_time,progress_time", "pxor~xmm0,xmm0", "lea~r8,<TAG>", "jz~FOO"]], [6, 0, 25, 0, 2, 18, 0, 3, 1, 8, 0.07122507122507123, ["lea     rbx, [rsp+818h+hbuf]", "mov     rdi, cs:w_bytes; n", "mov     r8d, 1; to_block_size", "mov     ecx, 1; from_block_size", "mov     edx, 1D1h; opts", "mov     rsi, rbx; buf", "call    human_readable", "mov     rdi, cs:w_bytes; n", "lea     rsi, [rbx+28Eh]; buf", "mov     r8d, 1; to_block_size", "mov     ecx, 1; from_block_size", "mov     edx, 1F1h; opts", "mov     r12, rax", "call    human_readable", "mov     r13, rax", "mov     iec, cs:start_time", "cmp     rax, now", "jge     loc_40C8"], ["lea~rbx,[rsp+0]", "mov~rdi,<TAG>", "mov~r8d,0", "mov~ecx,0", "mov~edx,0", "mov~rsi,rbx", "call~FOO", "mov~rdi,<TAG>", "lea~rsi,[rbx+0]", "mov~r8d,0", "mov~ecx,0", "mov~edx,0", "mov~r12,rax", "call~FOO", "mov~r13,rax", "mov~iec,<TAG>", "cmp~rax,now", "jge~FOO"]], [1, 0, 12, 1, 1, 7, 1, 2, 5, 6, 0.017094017094017096, ["lea     rsi, aLuBytesSCopied; \"%lu bytes (%s) copied, %s, %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r14", "push    bytes_per_second", "jmp     loc_405B"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "sub~rsp,0", "mov~r9,r14", "push~bytes_per_second", "jmp~FOO"]], [1, 1, 14, 0, 1, 6, 0, 2, 4, 7, 0.05128205128205129, ["mov     rdi, iec; s", "call    _strlen", "cmp     byte ptr [iec+rax-2], 20h ; ' '", "mov     r15, cs:w_bytes", "mov     edx, 5; category", "jz      loc_4180"], ["mov~rdi,iec", "call~FOO", "cmp~[yte ptr [iec+0],<STR>", "mov~r15,<TAG>", "mov~edx,0", "jz~FOO"]], [1, 0, 27, 1, 0, 14, 2, 1, 0, 9, 0.0, ["push    r15", "push    r14", "mov     r14, progress_time", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbp, progress_time", "sub     rsp, 7E8h", "mov     rax, fs:28h", "mov     [rsp+818h+var_40], rax", "xor     eax, eax", "test    progress_time, progress_time", "jz      loc_4170"], ["push~r15", "push~r14", "mov~r14,progress_time", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbp,progress_time", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~progress_time,progress_time", "jz~FOO"]], [4, 1, 16, 0, 2, 11, 0, 3, 3, 6, 0.25071225071225073, ["lea     r14, [rsp+818h+delta_s_buf]", "mov     ecx, 18h", "mov     edx, 1", "mov     esi, 18h", "mov     eax, 1", "mov     rdi, r14", "call    ___snprintf_chk", "mov     rdi, si_0; s", "call    _strlen", "cmp     byte ptr [si_0+rax-2], 20h ; ' '", "jz      loc_41A0"], ["lea~r14,[rsp+0]", "mov~ecx,0", "mov~edx,0", "mov~esi,0", "mov~eax,0", "mov~rdi,r14", "call~FOO", "mov~rdi,si_0", "call~FOO", "cmp~[yte ptr [si_0+0],<STR>", "jz~FOO"]], [1, 0, 17, 0, 0, 5, 0, 1, 4, 7, 0.01210826210826211, ["lea     rdx, [rax+1]", "lea     r8, a0fS; \"%.0f s\"", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Dh", "jmp     loc_3FEF"], ["lea~rdx,[rax+0]", "lea~r8,<TAG>", "mov~[rdi+0],rdx", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 17, 0, 1, 6, 0, 2, 4, 7, 0.01210826210826211, ["mov     esi, 0Dh; int", "movsd   [rsp+818h+delta_s], xmm0", "call    ___overflow", "lea     r8, a0fS; \"%.0f s\"", "movsd   xmm0, [rsp+818h+delta_s]", "jmp     loc_3FEF"], ["mov~esi,0", "movsd~[rsp+0],xmm0", "call~FOO", "lea~r8,<TAG>", "movsd~xmm0,[rsp+0]", "jmp~FOO"]], [3, 1, 20, 0, 2, 17, 1, 3, 4, 7, 0.08547008547008547, ["divsd   xmm0, cs:qword_120D0", "mov     rdi, cs:w_bytes; n", "lea     rsi, [rbx+51Ch]; buf", "mov     ecx, 3B9ACA00h; from_block_size", "mov     edx, 1D1h; opts", "movsd   [rsp+818h+delta_s], xmm0", "call    human_readable", "mov     rdi, rax; s", "mov     rbx, rax", "call    _strlen", "mov     ecx, 732Fh", "test    progress_time, progress_time", "mov     byte ptr [bytes_per_second+rax+2], 0", "mov     [bytes_per_second+rax], cx", "movsd   xmm0, [rsp+818h+delta_s]", "lea     r8, aGS; \"%g s\"", "jnz     loc_4119"], ["divsd~xmm0,<TAG>", "mov~rdi,<TAG>", "lea~rsi,[rbx+0]", "mov~ecx,0", "mov~edx,0", "movsd~[rsp+0],xmm0", "call~FOO", "mov~rdi,rax", "mov~rbx,rax", "call~FOO", "mov~ecx,<STR>", "test~progress_time,progress_time", "mov~[yte ptr [bytes_per_second+0],0", "mov~<TAG>,cx", "movsd~xmm0,[rsp+0]", "lea~r8,<TAG>", "jnz~FOO"]], [0, 0, 19, 0, 0, 4, 0, 0, 3, 8, 0.022792022792022793, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_4250"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 8, 1, 0.07122507122507123, ["mov     rax, [rsp+818h+var_40]", "xor     rax, fs:28h", "jnz     loc_4272"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 0, 4, 0, 1, 7, 2, 0.02777777777777778, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah", "jmp     loc_409C"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 3, 0, 1, 3, 0, 2, 7, 2, 0.02777777777777778, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     loc_409C"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 9, -1, 0.0, ["add     rsp, 7E8h", "pop     stats_len", "pop     progress_time", "pop     r12", "pop     iec", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~stats_len", "pop~progress_time", "pop~r12", "pop~iec", "pop~r14", "pop~r15", "retn"]], [0, 0, 5, 0, 0, 4, 0, 0, 6, 3, 0.10256410256410257, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_4240"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [0, 0, 12, 0, 1, 6, 1, 1, 5, 6, 0.017094017094017096, ["lea     rsi, aLuBytesSSCopie; \"%lu bytes (%s, %s) copied, %s, %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "push    bytes_per_second", "push    r14", "mov     r9, iec"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "push~bytes_per_second", "push~r14", "mov~r9,iec"]], [0, 0, 26, 0, 1, 3, 0, 2, 1, 9, 0.0, ["call    gethrxtime", "mov     r14, rax", "jmp     loc_3F23"], ["call~FOO", "mov~r14,rax", "jmp~FOO"]], [0, 0, 21, 0, 0, 2, 0, 0, 3, 8, 0.017094017094017096, ["pxor    xmm0, xmm0", "cvtsi2sd xmm0, delta_xtime"], ["pxor~xmm0,xmm0", "cvtsi2sd~xmm0,delta_xtime"]], [2, 0, 11, 0, 2, 17, 2, 3, 4, 5, 0.18803418803418803, ["mov     si_0, cs:w_bytes", "lea     rdx, msgid2; \"%lu bytes copied, %s, %s\"", "lea     rsi, msgid1; \"%lu byte copied, %s, %s\"", "mov     r8d, 5; category", "xor     edi, edi; domainname", "mov     rcx, r12; n", "call    _dcngettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     r9, bytes_per_second", "mov     rdx, rax", "mov     r8, r14", "mov     rcx, r12", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "mov     ebx, eax", "jmp     loc_407B"], ["mov~si_0,<TAG>", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~r8d,0", "xor~edi,edi", "mov~rcx,r12", "call~FOO", "mov~rdi,<TAG>", "mov~r9,bytes_per_second", "mov~rdx,rax", "mov~r8,r14", "mov~rcx,r12", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~ebx,eax", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 11, 0, 1, 10, 1, 1, 6, 5, 0.04700854700854701, ["mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     r8, si_0", "mov     rcx, r15", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "mov     ebx, eax", "pop     rax", "pop     rdx"], ["mov~rdi,<TAG>", "mov~rdx,rax", "mov~r8,si_0", "mov~rcx,r15", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~ebx,eax", "pop~rax", "pop~rdx"]]], "func_feature": [19, 17, 39, 1, 28, 39, 2, 194, 0.05525, 16, 6], "succs": [[17], [0, 3], [0], [0, 2], [1, 21], [15], [24, 5], [16, 12], [6, 7], [27], [9, 22], [8, 23], [25, 10], [12], [12], [16, 12], [13, 14], [26, 20], [17], [17], [], [18, 19], [27], [8], [15], [4], [], [4]], "fname": "print_xfer_stats", "n_num": 28}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 6, 0, 0, 4, 0, 0, 0, 0, 0.125, ["mov     status, cs:stderr@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_4370"], ["mov~status,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [0, 0, 7, 0, 0, 6, 2, 1, 1, 2, 0.19444444444444442, ["mov     rax, fs:28h", "mov     [rsp+0F8h+var_D0], rax", "xor     eax, eax", "mov     eax, cs:progress_len", "test    eax, eax", "jle     short loc_431A"], ["mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~eax,<TAG>", "test~eax,eax", "jle~FOO"]], [1, 0, 4, 0, 1, 5, 0, 2, 3, 3, 0.048611111111111105, ["mov     esi, 0Ah; int", "mov     [rsp+0F8h+fmt], fmt_0", "call    ___overflow", "mov     rdx, [rsp+0F8h+fmt]", "jmp     short loc_4310"], ["mov~esi,0", "mov~[rsp+0],fmt_0", "call~FOO", "mov~rdx,[rsp+0]", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 0, 2, 0, 1, 13, 1, 2, 2, 1, 0.19444444444444442, ["lea     rax, [rsp+0F8h+arg_0]", "lea     rcx, [rsp+0F8h+ap]; args", "mov     esi, ebp; errnum", "mov     edi, ebx; status", "mov     [rsp+0F8h+ap.gp_offset], 18h", "mov     [rsp+0F8h+ap.fp_offset], 30h ; '0'", "mov     [rsp+0F8h+ap.overflow_arg_area], rax", "lea     rax, [rsp+0F8h+var_C8]", "mov     [rsp+0F8h+ap.reg_save_area], rax", "call    verror", "mov     rax, [rsp+0F8h+var_D0]", "xor     rax, fs:28h", "jnz     short loc_4386"], ["lea~rax,[rsp+0]", "lea~rcx,[rsp+0]", "mov~esi,ebp", "mov~edi,ebx", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 3, -1, 0.0, ["add     rsp, 0E8h", "pop     status", "pop     errnum", "retn"], ["add~rsp,0", "pop~status", "pop~errnum", "retn"]], [1, 0, 9, 1, 0, 10, 1, 1, 0, 3, 0.0, ["push    rbp", "push    rbx", "mov     ebp, esi", "mov     ebx, edi", "sub     rsp, 0E8h", "test    al, al", "mov     [rsp+0F8h+var_B0], rcx", "mov     [rsp+0F8h+var_A8], r8", "mov     [rsp+0F8h+var_A0], r9", "jz      short loc_42DA"], ["push~rbp", "push~rbx", "mov~ebp,esi", "mov~ebx,edi", "sub~rsp,0", "test~al,al", "mov~[rsp+0],rcx", "mov~[rsp+0],r8", "mov~[rsp+0],r9", "jz~FOO"]], [0, 0, 8, 0, 0, 8, 0, 0, 1, 3, 0.0, ["movaps  [rsp+0F8h+var_98], xmm0", "movaps  [rsp+0F8h+var_88], xmm1", "movaps  [rsp+0F8h+var_78], xmm2", "movaps  [rsp+0F8h+var_68], xmm3", "movaps  [rsp+0F8h+var_58], xmm4", "movaps  [rsp+0F8h+var_48], xmm5", "movaps  [rsp+0F8h+var_38], xmm6", "movaps  [rsp+0F8h+var_28], xmm7"], ["movaps~[rsp+0],xmm0", "movaps~[rsp+0],xmm1", "movaps~[rsp+0],xmm2", "movaps~[rsp+0],xmm3", "movaps~[rsp+0],xmm4", "movaps~[rsp+0],xmm5", "movaps~[rsp+0],xmm6", "movaps~[rsp+0],xmm7"]], [1, 0, 4, 0, 0, 3, 0, 0, 3, 3, 0.048611111111111105, ["lea     rcx, [rax+1]", "mov     [rdi+28h], rcx", "mov     byte ptr [rax], 0Ah"], ["lea~rcx,[rax+0]", "mov~[rdi+0],rcx", "mov~<TAG>,0"]], [1, 0, 3, 0, 0, 1, 0, 0, 4, 2, 0.125, ["mov     cs:progress_len, 0"], ["mov~<TAG>,0"]]], "func_feature": [3, 4, 7, 13, 10, 12, 41, 55, 0.07361, 3, 2], "succs": [[8, 2], [0, 4], [9], [], [3, 5], [], [1, 7], [1], [9], [4]], "fname": "nl_error", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 8, 2, 0, 7, 1, 1, 0, 0, 0.06593406593406594, ["mov     rcx, [rsp+48h+val]", "xor     edx, edx", "mov     multiplier, rcx", "imul    rax, multiplier", "div     multiplier", "cmp     rcx, rax", "jz      short loc_4455"], ["mov~rcx,[rsp+0]", "xor~edx,edx", "mov~multiplier,rcx", "imul~rax,multiplier", "div~,multiplier", "cmp~rcx,rax", "jz~FOO"]], [1, 0, 10, 1, 1, 6, 1, 2, 2, 4, 0.07692307692307693, ["add     rdi, 1; str", "mov     rsi, invalid; invalid", "call    parse_integer", "test    rax, rax", "mov     rbx, rax", "jz      short loc_4450"], ["add~rdi,0", "mov~rsi,invalid", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 2, 2, 0.016483516483516484, ["mov     [invalid], edx", "xor     eax, eax", "jmp     short loc_43DB"], ["mov~<TAG>,edx", "xor~eax,eax", "jmp~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 1, 2, 0.019230769230769232, ["test    edx, edx", "mov     e, [rsp+48h+val]", "jnz     short loc_440A"], ["test~edx,edx", "mov~e,[rsp+0]", "jnz~FOO"]], [1, 0, 12, 0, 0, 3, 0, 1, 1, 3, 0.046703296703296704, ["mov     rdi, [rsp+48h+suffix]", "cmp     byte ptr [rdi], 78h ; 'x'", "jz      short loc_4418"], ["mov~rdi,[rsp+0]", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.13186813186813187, ["mov     rbx, [rsp+48h+var_30]", "xor     rbx, fs:28h", "jnz     loc_44D0"], ["mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "jnz~FOO"]], [2, 1, 14, 1, 1, 18, 1, 2, 0, 3, 0.0, ["push    r13", "push    r12", "lea     r8, valid_suffixes; \"bcEGkKMPTwYZ0\"", "push    rbp", "push    rbx", "mov     r12, invalid", "mov     edx, 0Ah; strtol_base", "mov     rbp, str", "sub     rsp, 28h", "lea     rcx, [rsp+48h+val]; val", "lea     invalid, [rsp+48h+suffix]; ptr", "mov     rax, fs:28h", "mov     [rsp+48h+var_30], rax", "xor     eax, eax", "call    xstrtoumax", "cmp     eax, 2", "mov     edx, eax", "jz      short loc_4400"], ["push~r13", "push~r12", "lea~r8,<TAG>", "push~rbp", "push~rbx", "mov~r12,invalid", "mov~edx,0", "mov~rbp,str", "sub~rsp,<STR>", "lea~rcx,[rsp+0]", "lea~invalid,[rsp+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "cmp~eax,0", "mov~edx,eax", "jz~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 4, 2, 0.03296703296703297, ["mov     dword ptr [invalid], 1", "xor     eax, eax", "jmp     short loc_43DB"], ["mov~<TAG>,0", "xor~eax,eax", "jmp~FOO"]], [0, 0, 3, 1, 0, 2, 0, 1, 5, 2, 0.06593406593406594, ["imul    rax, multiplier", "jmp     loc_43DB"], ["imul~rax,multiplier", "jmp~FOO"]], [2, 0, 4, 0, 4, 21, 5, 5, 6, 3, 0.0, ["lea     rsi, a00x; \"00x\"", "mov     edi, 1; n", "call    quote_n", "mov     rsi, r12; arg", "xor     edi, edi; n", "mov     r13, rax", "call    quote_n", "lea     rsi, aWarningSIsAZer; \"warning: %s is a zero multiplier; use %\"...", "mov     rbp, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, r13", "mov     rdx, rax; fmt", "mov     rcx, rbp", "xor     eax, eax", "xor     esi, esi; errnum", "xor     edi, edi; status", "call    nl_error", "mov     rax, [rsp+48h+val]", "jmp     short loc_4478"], ["lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,r12", "xor~edi,edi", "mov~r13,rax", "call~FOO", "lea~rsi,<TAG>", "mov~rbp,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r8,r13", "mov~rdx,rax", "mov~rcx,rbp", "xor~eax,eax", "xor~esi,esi", "xor~edi,edi", "call~FOO", "mov~rax,[rsp+0]", "jmp~FOO"]], [2, 0, 5, 0, 0, 9, 1, 1, 5, 3, 0.03296703296703297, ["lea     invalid, a00x+1; \"0x\"", "mov     ecx, 2", "mov     rsi, str", "mov     rdi, r12", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jz      short loc_4481"], ["lea~invalid,<TAG>", "mov~ecx,0", "mov~rsi,str", "mov~rdi,r12", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "test~dl,dl", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 4, 3, 0.09890109890109891, ["test    rax, rax", "jnz     short loc_4478"], ["test~rax,rax", "jnz~FOO"]], [0, 1, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 7, 0, 0, 1, 0, 0, 3, 4, 0.03296703296703297, ["mov     multiplier, [rsp+48h+val]"], ["mov~multiplier,[rsp+0]"]]], "func_feature": [7, 14, 19, 1, 15, 21, 2, 88, 0.04139, 5, 6], "succs": [[8, 12], [0, 14], [6], [2, 6], [1, 2], [], [5, 13], [3, 4], [6], [6], [9], [9, 10], [9, 11], [], [12]], "fname": "parse_integer", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 8, 0, 0, 3, 1, 1, 0, 0, 0.19780219780219782, ["and     ebx, 0FFFEFFFFh", "cmp     ebx, r12d", "jnz     loc_4553"], ["and~ebx,0", "cmp~ebx,r12d", "jnz~FOO"]], [1, 1, 9, 0, 0, 4, 1, 1, 5, 4, 0.057692307692307696, ["mov     eax, [rsp+0C8h+st.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_45D7"], ["mov~eax,[rsp+0]", "and~eax,<STR>", "cmp~eax,0", "jz~FOO"]], [3, 0, 8, 0, 4, 16, 2, 4, 2, 4, 0.14560439560439561, ["mov     rsi, name; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aSettingFlagsFo; \"setting flags for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     fd, rax", "call    _dcgettext", "mov     new_flags, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, rbp", "mov     rdx, rbx; fmt", "mov     edi, 1; status", "xor     eax, eax", "call    nl_error"], ["mov~rsi,name", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~fd,rax", "call~FOO", "mov~new_flags,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,rbp", "mov~rdx,rbx", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [0, 0, 8, 0, 0, 1, 0, 1, 5, 5, 0.02197802197802198, ["jmp     short loc_4598"], ["jmp~FOO"]], [2, 0, 8, 1, 1, 7, 1, 2, 4, 2, 0.1208791208791209, ["xor     eax, eax", "mov     edx, ebx", "mov     esi, 4; action", "mov     edi, ebp; fd", "call    rpl_fcntl", "add     eax, 1", "jnz     short loc_450A"], ["xor~eax,eax", "mov~edx,ebx", "mov~esi,0", "mov~edi,ebp", "call~FOO", "add~eax,0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.13186813186813187, ["mov     rax, [rsp+0C8h+var_30]", "xor     rax, fs:28h", "jnz     loc_45EB"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 10, 0, 1, 6, 1, 2, 4, 5, 0.07692307692307693, ["mov     rdx, rsp; stat_buf", "mov     esi, ebp; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "jnz     short loc_4598"], ["mov~rdx,rsp", "mov~esi,ebp", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 11, 0, 0, 2, 1, 1, 3, 3, 0.08791208791208792, ["test    ebx, 10000h", "jnz     short loc_456A"], ["test~ebx,0", "jnz~FOO"]], [1, 0, 13, 0, 1, 8, 2, 2, 1, 3, 0.05494505494505495, ["mov     esi, 3; action", "mov     ebp, edi", "mov     r13, name", "call    rpl_fcntl", "or      ebx, eax", "test    eax, eax", "mov     r12d, eax", "js      short loc_4598"], ["mov~esi,0", "mov~ebp,edi", "mov~r13,name", "call~FOO", "or~ebx,eax", "test~eax,eax", "mov~r12d,eax", "js~FOO"]], [2, 0, 14, 1, 0, 11, 2, 1, 0, 2, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     ebx, esi", "sub     rsp, 0A8h", "mov     rax, fs:28h", "mov     [rsp+0C8h+var_30], rax", "xor     eax, eax", "and     ebx, 0FFFDFEFFh", "jnz     short loc_452F"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~ebx,esi", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "and~ebx,0", "jnz~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 2, 2, 0.07142857142857144, ["cmp     eax, ebx", "jz      short loc_450A"], ["cmp~eax,ebx", "jz~FOO"]], [1, 0, 8, 0, 1, 2, 0, 1, 6, 5, 0.005494505494505495, ["call    ___errno_location", "mov     dword ptr [rax], 14h"], ["call~FOO", "mov~<TAG>,0"]], [1, 0, 0, 1, 0, 6, 0, 0, 2, -1, 0.0, ["add     rsp, 0A8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 3, 0, 0, 1, 0, 1, 4, 2, 0.049450549450549455, ["jmp     loc_450A"], ["jmp~FOO"]]], "func_feature": [9, 12, 20, 1, 15, 22, 2, 73, 0.06813, 2, 3], "succs": [[4, 14], [0, 12], [0], [2], [3, 6], [], [5, 13], [1, 2], [4, 7], [2, 11], [9, 6], [8, 6], [2], [], [6]], "fname": "set_fd_flags", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 10, 0, 0, 2, 1, 1, 0, 0, 0.06363636363636363, ["test    r14d, r14d", "jnz     short loc_4678"], ["test~r14d,r14d", "jnz~FOO"]], [2, 0, 11, 1, 2, 25, 2, 3, 0, 2, 0.0, ["push    r14", "push    r13", "mov     r13, filename", "push    r12", "push    rbp", "mov     r12d, ecx", "push    rbx", "mov     ebx, esi", "mov     rbp, offset", "mov     esi, 80306D02h; request", "mov     edi, ebx; fd", "sub     rsp, 70h", "mov     rax, fs:28h", "mov     [rsp+98h+var_30], rax", "xor     eax, eax", "mov     offset, rsp", "call    _ioctl", "mov     rsi, offset; offset", "mov     edx, r12d; whence", "mov     edi, ebx; fd", "mov     r14d, eax", "call    _lseek", "test    rax, rax", "mov     offset, rax", "js      short loc_4678"], ["push~r14", "push~r13", "mov~r13,filename", "push~r12", "push~rbp", "mov~r12d,ecx", "push~rbx", "mov~ebx,esi", "mov~rbp,offset", "mov~esi,0", "mov~edi,ebx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~offset,rsp", "call~FOO", "mov~rsi,offset", "mov~edx,r12d", "mov~edi,ebx", "mov~r14d,eax", "call~FOO", "test~rax,rax", "mov~offset,rax", "js~FOO"]], [0, 0, 8, 0, 0, 3, 0, 1, 3, 2, 0.13636363636363635, ["mov     rax, [rsp+98h+s2.mt_resid]", "cmp     [rsp+98h+s1.mt_resid], rax", "jnz     short loc_4678"], ["mov~rax,[rsp+0]", "cmp~[rsp+0],rax", "jnz~FOO"]], [1, 0, 9, 0, 1, 7, 2, 2, 2, 2, 0.10909090909090909, ["lea     rdx, [rsp+98h+s2]", "xor     eax, eax", "mov     esi, 80306D02h; request", "mov     edi, ebx; fd", "call    _ioctl", "test    eax, eax", "jnz     short loc_4678"], ["lea~rdx,[rsp+0]", "xor~eax,eax", "mov~esi,0", "mov~edi,ebx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 3, 0, 1, 4, 1, 2, 6, 2, 0.05454545454545454, ["call    ___errno_location", "or      new_position, 0FFFFFFFFFFFFFFFFh", "mov     dword ptr [rax], 0", "jmp     short loc_4678"], ["call~FOO", "or~new_position,0", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 5, 3, 0.09090909090909091, ["cmp     cs:status_level, 1", "jz      short loc_46CD"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 4, 0, 2, 12, 4, 2, 6, 3, 0.0, ["mov     fdesc, [rsp+98h+s2.mt_type]", "lea     rsi, aWarningWorking; \"warning: working around lseek kernel bu\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, rbx", "mov     rdx, rax; fmt", "mov     rcx, filename", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    nl_error"], ["mov~fdesc,[rsp+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r8,rbx", "mov~rdx,rax", "mov~rcx,filename", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 1, 1, 0.16363636363636364, ["mov     rcx, [rsp+98h+var_30]", "xor     rcx, fs:28h", "mov     rax, rbp", "jnz     short loc_46DE"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,rbp", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 5, 2, 0.02727272727272727, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 7, 0, 0, 3, 0, 1, 4, 3, 0.14545454545454545, ["mov     rax, qword ptr [rsp+98h+s2.mt_fileno]", "cmp     qword ptr [rsp+98h+s1.mt_fileno], rax", "jz      short loc_4698"], ["mov~rax,[word ptr [rsp+0]", "cmp~[word ptr [rsp+0],rax", "jz~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 2, -1, 0.0, ["add     rsp, 70h", "pop     rbx", "pop     rbp", "pop     whence", "pop     filename", "pop     r14", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~whence", "pop~filename", "pop~r14", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [7, 11, 15, 1, 12, 17, 4, 71, 0.06591, 3, 2], "succs": [[3, 7], [0, 7], [9, 7], [2, 7], [7], [4, 6], [4], [10, 11], [7], [8, 5], [], []], "fname": "skip_via_lseek", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 28, 1, 0, 9, 1, 1, 0, 0, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "test    edi, edi", "jnz     loc_4790"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "test~edi,edi", "jnz~FOO"]], [1, 0, 1, 0, 1, 3, 0, 2, 0, -1, 0.0006613756613756613, ["call    ___errno_location", "mov     dword ptr [rax], 1Dh", "jmp     short loc_4738"], ["call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 11, 0, 0, 4, 1, 1, 0, -1, 0.1455026455026455, ["movzx   r12d, cs:input_seekable", "mov     len, cs:input_offset", "test    r12b, r12b", "jnz     short loc_47DC"], ["movzx~r12d,<TAG>", "mov~len,<TAG>", "test~r12b,r12b", "jnz~FOO"]], [0, 0, 2, 2, 0, 5, 2, 0, 0, -1, 0.003968253968253968, ["mov     rax, rsi", "xor     edx, edx", "xor     ebx, ebx", "div     cs:page_size", "sub     rsi, rdx; offset"], ["mov~rax,rsi", "xor~edx,edx", "xor~ebx,ebx", "div~,<TAG>", "sub~rsi,rdx"]], [0, 0, 3, 0, 0, 1, 0, 1, 0, -1, 0.013888888888888888, ["jmp     short loc_47FA"], ["jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 0, -1, 0.04034391534391534, ["test    r15b, r15b", "jz      short loc_4840"], ["test~r15b,r15b", "jz~FOO"]], [0, 0, 26, 0, 0, 2, 0, 0, 0, 7, 0.017195767195767195, ["movzx   r15d, cs:i_nocache_eof", "lea     rax, i_pending_7166"], ["movzx~r15d,<TAG>", "lea~rax,<TAG>"]], [0, 0, 25, 0, 0, 3, 1, 1, 0, 6, 0.0992063492063492, ["test    len, len", "mov     rbx, [rax]", "jz      short loc_4750"], ["test~len,len", "mov~rbx,<TAG>", "jz~FOO"]], [0, 0, 26, 0, 0, 3, 0, 1, 0, 7, 0.017195767195767195, ["movzx   r15d, cs:o_nocache_eof", "lea     rax, o_pending_7167", "jmp     loc_4715"], ["movzx~r15d,<TAG>", "lea~rax,<TAG>", "jmp~FOO"]], [2, 0, 1, 0, 1, 7, 0, 2, 0, -1, 0.009259259259259259, ["mov     ecx, 4; advise", "mov     rdx, rbx; len", "mov     edi, r13d; fd", "call    _posix_fadvise", "cmp     eax, 0FFFFFFFFh", "setnz   r12b", "jmp     loc_4738"], ["mov~ecx,0", "mov~rdx,rbx", "mov~edi,r13d", "call~FOO", "cmp~eax,0", "setnz~r12b", "jmp~FOO"]], [0, 0, 4, 1, 0, 3, 1, 1, 0, -1, 0.06812169312169311, ["sub     rsi, pending", "test    clen, clen", "jnz     short loc_480B"], ["sub~rsi,pending", "test~clen,clen", "jnz~FOO"]], [0, 0, 2, 1, 0, 2, 0, 1, 0, -1, 0.0013227513227513227, ["sub     rsi, pending", "jmp     short loc_480B"], ["sub~rsi,pending", "jmp~FOO"]], [0, 0, 20, 1, 0, 2, 0, 1, 0, 5, 0.0291005291005291, ["sub     rbx, r14", "jz      short loc_4732"], ["sub~rbx,r14", "jz~FOO"]], [1, 0, 21, 1, 0, 6, 1, 1, 0, 6, 0.021164021164021163, ["add     rbx, len", "mov     r14, rbx", "and     r14d, 1FFFFh", "cmp     rbx, r14", "mov     [rax], r14", "ja      short loc_47A8"], ["add~rbx,len", "mov~r14,rbx", "and~r14d,0", "cmp~rbx,r14", "mov~<TAG>,r14", "ja~FOO"]], [0, 0, 18, 0, 0, 1, 0, 1, 0, 4, 0.04497354497354497, ["jmp     short loc_475D"], ["jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 0, -1, 0.010582010582010581, ["mov     r12d, 1"], ["mov~r12d,0"]], [0, 0, 20, 0, 0, 2, 1, 1, 0, 5, 0.0026455026455026454, ["test    r15b, r15b", "jz      short loc_4732"], ["test~r15b,r15b", "jz~FOO"]], [0, 0, 8, 1, 0, 3, 1, 1, 0, -1, 0.16666666666666666, ["sub     offset, rbx", "test    len, len", "jnz     short loc_4830"], ["sub~offset,rbx", "test~len,len", "jnz~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 0, -1, 0.06283068783068782, ["test    rbx, rbx", "jz      short loc_4830"], ["test~rbx,rbx", "jz~FOO"]], [1, 0, 14, 0, 0, 4, 1, 1, 0, 2, 0.062169312169312166, ["mov     len, cs:output_offset_7179", "xor     r12d, r12d", "cmp     rsi, 0FFFFFFFFFFFFFFFFh", "jz      loc_4738"], ["mov~len,<TAG>", "xor~r12d,r12d", "cmp~rsi,0", "jz~FOO"]], [0, 0, 17, 0, 0, 4, 1, 1, 0, 3, 0.21428571428571427, ["test    edi, edi", "mov     rbp, len", "mov     r13d, edi", "jnz     short loc_47B0"], ["test~edi,edi", "mov~rbp,len", "mov~r13d,edi", "jnz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 0, 1, 0.05952380952380952, ["test    rsi, rsi", "js      short loc_4848"], ["test~rsi,rsi", "js~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 0, -1, 0.0, ["add     rsp, 8", "mov     eax, r12d", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     nocache_eof", "retn"], ["add~rsp,0", "mov~eax,r12d", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~nocache_eof", "retn"]], [0, 0, 9, 0, 0, 3, 2, 1, 0, -1, 0.1541005291005291, ["xor     r12d, r12d", "test    offset, offset", "js      loc_4738"], ["xor~r12d,r12d", "test~offset,offset", "js~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 0, -1, 0.03835978835978836, ["test    len, len", "jz      short loc_47E8"], ["test~len,len", "jz~FOO"]], [0, 0, 21, 0, 0, 2, 1, 1, 0, 5, 0.10052910052910052, ["test    rbx, rbx", "jnz     short loc_475A"], ["test~rbx,rbx", "jnz~FOO"]], [0, 0, 10, 1, 0, 3, 0, 0, 0, -1, 0.0026455026455026454, ["lea     rax, [pending+rbx]", "add     rsi, rax", "mov     cs:output_offset_7179, rsi"], ["lea~rax,<TAG>", "add~rsi,rax", "mov~<TAG>,rsi"]], [0, 0, 18, 0, 0, 1, 1, 0, 0, 4, 0.1349206349206349, ["xor     r14d, r14d"], ["xor~r14d,r14d"]], [2, 0, 10, 0, 1, 7, 1, 2, 0, 0, 0.003968253968253968, ["xor     esi, esi; offset", "mov     edx, 1; whence", "mov     edi, 1; fd", "call    _lseek", "mov     rsi, rax", "mov     cs:output_offset_7179, rax", "jmp     loc_47DC"], ["xor~esi,esi", "mov~edx,0", "mov~edi,0", "call~FOO", "mov~rsi,rax", "mov~<TAG>,rax", "jmp~FOO"]]], "func_feature": [3, 20, 26, 0, 29, 44, 8, 98, 0.05259, 8, 10], "succs": [[8, 6], [22], [1, 23], [9], [3], [11, 3], [7], [25, 13], [7], [22], [9, 4], [9], [14, 15], [12, 15], [20], [22], [27, 15], [10, 18], [10, 5], [21, 22], [2, 19], [24, 28], [], [17, 22], [17, 26], [16, 27], [23], [20], [23]], "fname": "invalidate_cache", "n_num": 29}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 0, 0, 1, 2, 0, 1, 0, 0, 0.0, ["mov     edi, 1; status", "call    __exit"], ["mov~edi,0", "call~FOO"]], [1, 0, 2, 1, 1, 5, 1, 2, 1, 0, 0.1, ["sub     rsp, 8", "mov     rdi, cs:stderr@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jnz     short loc_489D"], ["sub~rsp,0", "mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 0, 0, 0.0, ["cmp     cs:close_stdout_required, 0", "jnz     short loc_4898"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 2, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0.05, ["jmp     close_stdout"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0.0, [], []]], "func_feature": [2, 1, 5, 0, 6, 5, 0, 12, 0.025, 2, 2], "succs": [[], [0, 3], [1, 4], [], [5], []], "fname": "maybe_close_stdout", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 7, 0, 0, 3, 0, 0, 0, 0, 0.044444444444444446, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [0, 0, 9, 0, 0, 4, 0, 0, 1, 1, 0.03333333333333333, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     loc_49C0"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [1, 0, 10, 1, 0, 8, 1, 1, 0, 2, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     ecx, cs:progress_len", "test    ecx, ecx", "jle     short loc_48EE"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~ecx,<TAG>", "test~ecx,ecx", "jle~FOO"]], [1, 0, 6, 0, 0, 1, 0, 0, 3, -1, 0.2, ["mov     cs:progress_len, 0"], ["mov~<TAG>,0"]], [1, 0, 7, 0, 1, 3, 0, 2, 2, 0, 0.044444444444444446, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     loc_48E4"], ["mov~esi,0", "call~FOO", "jmp~FOO"]], [1, 0, 1, 1, 0, 7, 1, 1, 3, -1, 0.08888888888888889, ["add     rsp, 8", "xor     edi, edi", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "jmp     print_xfer_stats"], ["add~rsp,0", "xor~edi,edi", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, -1, 0.23333333333333334, ["cmp     cs:status_level, 2", "jz      short loc_4970"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 4, 0, 2, 13, 2, 3, 2, -1, 0.0, ["lea     rdx, aLuTruncatedRec; \"%lu truncated records\\n\"", "lea     rsi, aLuTruncatedRec_0; \"%lu truncated record\\n\"", "mov     rcx, rbx; n", "xor     edi, edi; domainname", "mov     r8d, 5; category", "call    _dcngettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     rcx, rbx", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "jmp     short loc_4950"], ["lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rcx,rbx", "xor~edi,edi", "mov~r8d,0", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~rcx,rbx", "mov~esi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [3, 0, 5, 1, 2, 23, 3, 3, 1, -1, 0.2777777777777778, ["mov     r13, cs:w_partial", "lea     rsi, aLuLuRecordsInL; \"%lu+%lu records in\\n%lu+%lu records out\"...", "mov     rbx, cs:r_full", "xor     edi, edi; domainname", "mov     r12, cs:w_full", "mov     rbp, cs:r_partial", "mov     edx, 5; category", "call    _dcgettext", "sub     rsp, 8", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "push    r13", "mov     rcx, rbx", "xor     eax, eax", "mov     r9, r12", "mov     r8, rbp", "mov     esi, 1", "call    ___fprintf_chk", "mov     rbx, cs:r_truncate", "pop     rax", "pop     rdx", "test    rbx, rbx", "jnz     short loc_4980"], ["mov~r13,<TAG>", "lea~rsi,<TAG>", "mov~rbx,<TAG>", "xor~edi,edi", "mov~r12,<TAG>", "mov~rbp,<TAG>", "mov~edx,0", "call~FOO", "sub~rsp,0", "mov~rdi,<TAG>", "mov~rdx,rax", "push~r13", "mov~rcx,rbx", "xor~eax,eax", "mov~r9,r12", "mov~r8,rbp", "mov~esi,0", "call~FOO", "mov~rbx,<TAG>", "pop~rax", "pop~rdx", "test~rbx,rbx", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [1, 0, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]]], "func_feature": [5, 7, 11, 0, 11, 13, 5, 70, 0.08384, 11, 4], "succs": [[3], [0, 4], [8, 1], [8], [3], [9], [10, 5], [6], [6, 7], [], []], "fname": "print_stats", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[5, 0, 1, 0, 3, 18, 3, 3, 0, 0, 0.041666666666666664, ["mov     r8d, 1; to_block_size", "mov     ecx, 1; from_block_size", "mov     rsi, rsp; buf", "mov     edx, 1F1h; opts", "mov     rdi, ibs; n", "call    human_readable", "lea     rsi, aMemoryExhauste; \"memory exhausted by input buffer of siz\"...", "mov     rbx, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, rbx", "mov     rdx, rax; fmt", "mov     rcx, ibs", "xor     esi, esi; errnum", "mov     edi, 1; status", "xor     eax, eax", "call    nl_error"], ["mov~r8d,0", "mov~ecx,0", "mov~rsi,rsp", "mov~edx,0", "mov~rdi,ibs", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r8,rbx", "mov~rdx,rax", "mov~rcx,ibs", "xor~esi,esi", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 4, 1, 1, 12, 2, 2, 0, 2, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 2A8h", "mov     rbx, cs:page_size", "mov     rbp, cs:input_blocksize", "mov     rax, fs:28h", "mov     [rsp+2B8h+var_20], rax", "xor     eax, eax", "lea     rdi, [rbp+rbx*2+3]; size", "call    _malloc", "test    real_buf, real_buf", "jz      short loc_4A3D"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,<TAG>", "mov~rbp,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rdi,[rbp+0]", "call~FOO", "test~real_buf,real_buf", "jz~FOO"]], [0, 0, 2, 2, 0, 9, 2, 1, 1, 1, 0.125, ["lea     rcx, [rax+rbx+1]", "xor     edx, edx", "mov     rax, rcx", "div     rbx", "sub     rcx, rdx", "mov     rax, [rsp+2B8h+var_20]", "xor     rax, fs:28h", "mov     cs:ibuf, rcx", "jnz     short loc_4A85"], ["lea~rcx,[rax+0]", "xor~edx,edx", "mov~rax,rcx", "div~,rbx", "sub~rcx,rdx", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "mov~<TAG>,rcx", "jnz~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 2, -1, 0.0, ["add     rsp, 2A8h", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [5, 7, 7, 1, 5, 5, 3, 44, 0.03333, 5, 4], "succs": [[4], [0, 2], [3, 4], [], []], "fname": "alloc_ibuf", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[5, 0, 1, 0, 3, 18, 3, 3, 0, 0, 0.041666666666666664, ["mov     r8d, 1; to_block_size", "mov     ecx, 1; from_block_size", "mov     rsi, rsp; buf", "mov     edx, 1F1h; opts", "mov     rdi, obs; n", "call    human_readable", "lea     rsi, aMemoryExhauste_0; \"memory exhausted by output buffer of si\"...", "mov     rbx, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     r8, rbx", "mov     rdx, rax; fmt", "mov     rcx, obs", "xor     esi, esi; errnum", "mov     edi, 1; status", "xor     eax, eax", "call    nl_error"], ["mov~r8d,0", "mov~ecx,0", "mov~rsi,rsp", "mov~edx,0", "mov~rdi,obs", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~r8,rbx", "mov~rdx,rax", "mov~rcx,obs", "xor~esi,esi", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [1, 0, 4, 1, 1, 12, 2, 2, 0, 2, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 2A8h", "mov     rbx, cs:page_size", "mov     rbp, cs:output_blocksize", "mov     rax, fs:28h", "mov     [rsp+2B8h+var_20], rax", "xor     eax, eax", "lea     rdi, [rbx+rbp-1]; size", "call    _malloc", "test    real_obuf, real_obuf", "jz      short loc_4AFD"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,<TAG>", "mov~rbp,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rdi,[rbx+0]", "call~FOO", "test~real_obuf,real_obuf", "jz~FOO"]], [0, 0, 2, 2, 0, 9, 2, 1, 1, 1, 0.125, ["lea     rcx, [real_obuf+rbx-1]", "xor     edx, edx", "mov     real_obuf, rcx", "div     rbx", "sub     rcx, rdx", "mov     rax, [rsp+2B8h+var_20]", "xor     rax, fs:28h", "mov     cs:obuf, rcx", "jnz     short loc_4B45"], ["lea~rcx,[real_obuf+0]", "xor~edx,edx", "mov~real_obuf,rcx", "div~,rbx", "sub~rcx,rdx", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "mov~<TAG>,rcx", "jnz~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 2, -1, 0.0, ["add     rsp, 2A8h", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [5, 7, 7, 1, 5, 5, 1, 44, 0.03333, 5, 4], "succs": [[4], [0, 2], [3, 4], [], []], "fname": "alloc_obuf_0", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 5, 0, 0, 2, 1, 1, 0, 0, 0.11904761904761904, ["test    byte ptr cs:conversions_mask+1, 8", "jnz     short loc_4B7E"], ["test~<TAG>,0", "jnz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 0, 3, 0.0, ["cmp     cs:obuf, 0", "jz      short loc_4B5C"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [0, 0, 1, 0, 0, 1, 0, 1, 2, -1, 0.047619047619047616, ["jmp     alloc_obuf_0"], ["jmp~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 2, 1, 0.09523809523809523, ["cmp     cs:ibuf, 0", "jz      short loc_4B83"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 0, 1, 1, 6, 0, 1, 3, 0, 0.0, ["sub     rsp, 8", "call    alloc_ibuf", "mov     rax, cs:ibuf", "mov     cs:obuf, rax", "pop     rax", "retn"], ["sub~rsp,0", "call~FOO", "mov~rax,<TAG>", "mov~<TAG>,rax", "pop~rax", "retn"]], [0, 0, 0, 0, 0, 3, 0, 0, 3, -1, 0.0, ["mov     rax, cs:ibuf", "mov     cs:obuf, rax", "retn"], ["mov~rax,<TAG>", "mov~<TAG>,rax", "retn"]]], "func_feature": [1, 1, 5, 0, 8, 7, 2, 17, 0.03274, 3, 1], "succs": [[3, 4], [0, 5], [], [2], [6, 7], [], [], []], "fname": "alloc_obuf", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 4, 0, 0, 1, 0, 0, 0, 0, 0.01904761904761905, ["lea     r12, command_name; \"dd\""], ["lea~r12,<TAG>"]], [1, 0, 6, 0, 1, 6, 1, 2, 5, 2, 0.0380952380952381, ["lea     rsi, s2; \"en_\"", "mov     edx, 3; n", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_51C1"], ["lea~rsi,<TAG>", "mov~edx,0", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 13, 1, 0, 4, 1, 1, 2, 4, 0.10952380952380954, ["add     rdx, 10h", "mov     rdi, [rdx]", "test    rdi, rdi", "jz      short loc_5057"], ["add~rdx,0", "mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [2, 0, 13, 0, 0, 7, 1, 1, 3, 4, 0.0, ["mov     ecx, 3", "mov     rsi, rbx", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     short loc_5038"], ["mov~ecx,0", "mov~rsi,rbx", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [24, 0, 13, 0, 46, 225, 25, 46, 1, 5, 0.05714285714285715, ["lea     rsi, aUsageSOperandO; \"Usage: %s [OPERAND]...\\n  or:  %s OPTIO\"...", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rbx", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aCopyAFileConve; \"Copy a file, converting and formatting \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aIfFileReadFrom; \"  if=FILE         read from FILE instea\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNAndBytesMayBe; \"\\nN and BYTES may be followed by the fo\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aAsciiFromEbcdi; \"  ascii     from EBCDIC to ASCII\\n  ebc\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aExclFailIfTheO; \"  excl      fail if the output file alr\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aEachFlagSymbol; \"\\nEach FLAG symbol may be:\\n\\n  append \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aDirectUseDirec; \"  direct    use direct I/O for data\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aDirectoryFailU; \"  directory  fail unless a directory\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aDsyncUseSynchr; \"  dsync     use synchronized I/O for da\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aSyncLikewiseBu; \"  sync      likewise, but also for meta\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aFullblockAccum; \"  fullblock  accumulate full blocks of \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNonblockUseNon; \"  nonblock  use non-blocking I/O\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNoatimeDoNotUp; \"  noatime   do not update access time\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNocacheRequest; \"  nocache   Request to drop cache.  See\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNocttyDoNotAss; \"  noctty    do not assign controlling t\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNofollowDoNotF; \"  nofollow  do not follow symlinks\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aCountBytesTrea; \"  count_bytes  treat 'count=N' as a byt\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aSkipBytesTreat; \"  skip_bytes  treat 'skip=N' as a byte \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aSeekBytesTreat; \"  seek_bytes  treat 'seek=N' as a byte \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "lea     rsi, aSendingASSigna; \"\\nSending a %s signal to a running 'dd'\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, aUsr1; \"USR1\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aHelpDisplayThi; \"      --help     display this help and \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aVersionOutputV; \"      --version  output version informa\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "lea     rbx, command_name; \"dd\"", "call    _fputs_unlocked", "lea     rcx, asc_10654; \"[\"", "lea     rax, aTestInvocation; \"test invocation\"", "lea     rdx, [rsp+0B8h+var_A8]", "mov     [rsp+0B8h+var_B0], rcx", "lea     rcx, package; \"coreutils\"", "movq    xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "lea     rax, aMultiCallInvoc; \"Multi-call invocation\"", "movhps  xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rcx", "movaps  [rsp+0B8h+var_A8], xmm0", "movq    xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "lea     rax, aSha224sum; \"sha224sum\"", "movhps  xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "lea     rax, aSha256sum; \"sha256sum\"", "movaps  [rsp+0B8h+var_98], xmm0", "movq    xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "movhps  xmm0, cs:off_215A80", "lea     rax, aSha384sum; \"sha384sum\"", "movaps  [rsp+0B8h+var_88], xmm0", "movq    xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "movhps  xmm0, cs:off_215A80", "lea     rax, aSha512sum; \"sha512sum\"", "movaps  [rsp+0B8h+var_78], xmm0", "movq    xmm0, [rsp+0B8h+var_B0]", "mov     [rsp+0B8h+var_B0], rax", "movhps  xmm0, cs:off_215A80", "movaps  [rsp+0B8h+var_68], xmm0", "movq    xmm0, [rsp+0B8h+var_B0]", "movhps  xmm0, cs:off_215A80", "movaps  [rsp+0B8h+var_58], xmm0", "pxor    xmm0, xmm0", "movaps  [rsp+0B8h+var_48], xmm0", "nop     word ptr [rax+rax+00h]"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rbx", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "lea~rbx,<TAG>", "call~FOO", "lea~rcx,<TAG>", "lea~rax,<TAG>", "lea~rdx,[rsp+0]", "mov~[rsp+0],rcx", "lea~rcx,<TAG>", "movq~xmm0,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,<TAG>", "movhps~xmm0,[rsp+0]", "mov~[rsp+0],rcx", "movaps~[rsp+0],xmm0", "movq~xmm0,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,<TAG>", "movhps~xmm0,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,<TAG>", "movaps~[rsp+0],xmm0", "movq~xmm0,[rsp+0]", "mov~[rsp+0],rax", "movhps~xmm0,<TAG>", "lea~rax,<TAG>", "movaps~[rsp+0],xmm0", "movq~xmm0,[rsp+0]", "mov~[rsp+0],rax", "movhps~xmm0,<TAG>", "lea~rax,<TAG>", "movaps~[rsp+0],xmm0", "movq~xmm0,[rsp+0]", "mov~[rsp+0],rax", "movhps~xmm0,<TAG>", "movaps~[rsp+0],xmm0", "movq~xmm0,[rsp+0]", "movhps~xmm0,<TAG>", "movaps~[rsp+0],xmm0", "pxor~xmm0,xmm0", "movaps~[rsp+0],xmm0", "nop~[ord ptr [rax+0]"]], [2, 0, 5, 0, 3, 12, 3, 4, 4, 2, 0.09285714285714286, ["call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, unk_106BB", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "xor     esi, esi; locale", "mov     edi, 5; category", "call    _setlocale", "test    rax, rax", "jz      short loc_50C1"], ["call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 10, 0, 0, 6, 2, 1, 3, 3, 0.18571428571428572, ["mov     r12, [rdx+8]", "xor     edi, edi; domainname", "mov     edx, 5; category", "lea     rsi, aSOnlineHelpS; \"\\n%s online help: <%s>\\n\"", "test    r12, r12", "jz      loc_5133"], ["mov~r12,[rdx+0]", "xor~edi,edi", "mov~edx,0", "lea~rsi,<TAG>", "test~r12,r12", "jz~FOO"]], [2, 0, 7, 0, 3, 12, 3, 4, 4, 3, 0.09285714285714286, ["call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, unk_106BB", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "xor     esi, esi; locale", "mov     edi, 5; category", "call    _setlocale", "test    rax, rax", "jz      short loc_517E"], ["call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [2, 0, 2, 0, 2, 13, 2, 3, 5, -1, 0.04047619047619048, ["lea     rsi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "lea     r12, command_name; \"dd\"", "lea     rbx, aMultiCallInvoc+0Ah; \" invocation\"", "call    _dcgettext", "lea     rcx, command_name; \"dd\"", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_5106"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "lea~r12,<TAG>", "lea~rbx,<TAG>", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 2, 0, 2, 14, 2, 2, 5, -1, 0.05952380952380953, ["lea     rsi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rcx, command_name; \"dd\"", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "cmp     r12, rbx", "lea     rcx, aMultiCallInvoc+0Ah; \" invocation\"", "lea     rbx, aWrittenBySSAnd+1Bh; \"\"", "cmovz   rbx, rcx"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "cmp~r12,rbx", "lea~rcx,<TAG>", "lea~rbx,<TAG>", "cmovz~rbx,rcx"]], [1, 0, 3, 0, 2, 9, 1, 3, 6, 0, 0.02380952380952381, ["mov     r13, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aReportAnyTrans; \"Report any translation bugs to <https:/\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, r13; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "jmp     loc_50C1"], ["mov~r13,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,r13", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 4, 0, 1, 6, 1, 2, 5, 1, 0.028571428571428574, ["lea     rsi, s2; \"en_\"", "mov     edx, 3; n", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     loc_51C8"], ["lea~rsi,<TAG>", "mov~edx,0", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 1, 0, 2, 11, 2, 3, 6, -1, 0.05714285714285715, ["lea     rsi, aOrAvailableLoc; \"or available locally via: info '(coreut\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rbx", "mov     rsi, rax", "mov     rdx, r12", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_4BF9"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rbx", "mov~rsi,rax", "mov~rdx,r12", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 15, 1, 0, 13, 2, 1, 0, 6, 0.0, ["push    r13", "push    r12", "mov     edx, 5; category", "push    rbp", "push    rbx", "mov     ebp, edi", "sub     rsp, 98h", "mov     rbx, cs:program_name", "mov     rax, fs:28h", "mov     [rsp+0B8h+var_30], rax", "xor     eax, eax", "test    edi, edi", "jz      short loc_4C00"], ["push~r13", "push~r12", "mov~edx,0", "push~rbp", "push~rbx", "mov~ebp,edi", "sub~rsp,0", "mov~rbx,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~edi,edi", "jz~FOO"]], [1, 0, 1, 0, 2, 9, 2, 2, 1, -1, 0.004761904761904762, ["lea     rsi, aTrySHelpForMor; \"Try '%s --help' for more information.\\n\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     rcx, rbx", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~rcx,rbx", "mov~esi,0", "xor~eax,eax", "call~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     edi, ebp; status", "call    _exit"], ["mov~edi,ebp", "call~FOO"]]], "func_feature": [65, 48, 76, 9, 16, 23, 4, 350, 0.0506, 48, 2], "succs": [[10], [0, 8], [3, 6], [2, 6], [2], [9, 11], [5, 7], [8, 1], [12], [12], [9], [9, 10], [15], [4, 14], [15], []], "fname": "usage", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 16, 0, 1, 5, 0, 1, 0, 0, 0.17083333333333334, ["mov     esi, 2Ch ; ','; c", "mov     rdi, str; s", "call    _strchr", "mov     r8, entry", "nop     dword ptr [strcomma]"], ["mov~esi,0", "mov~rdi,str", "call~FOO", "mov~r8,entry", "nop~<TAG>"]], [0, 0, 16, 0, 0, 3, 0, 1, 7, 7, 0.0875, ["lea     str, [strcomma+1]", "mov     ebx, edx", "jmp     short loc_5215"], ["lea~str,[strcomma+0]", "mov~ebx,edx", "jmp~FOO"]], [0, 0, 16, 0, 0, 10, 1, 0, 0, 7, 0.0, ["push    r14", "mov     r14, str", "push    r13", "mov     r13, error_msgid", "push    r12", "mov     r12, table", "push    rbp", "mov     ebp, edx", "push    rbx", "xor     ebx, ebx"], ["push~r14", "mov~r14,str", "push~r13", "mov~r13,error_msgid", "push~r12", "mov~r12,table", "push~rbp", "mov~ebp,edx", "push~rbx", "xor~ebx,ebx"]], [0, 0, 16, 0, 0, 4, 1, 1, 3, 4, 0.4, ["movzx   esi, byte ptr [rcx]", "movzx   edi, byte ptr [rdx]", "test    sil, sil", "jnz     short loc_5230"], ["movzx~esi,<TAG>", "movzx~edi,<TAG>", "test~sil,sil", "jnz~FOO"]], [0, 0, 16, 0, 0, 3, 0, 1, 2, 5, 0.35, ["mov     rcx, entry", "mov     rdx, str", "jmp     short loc_523D"], ["mov~rcx,entry", "mov~rdx,str", "jmp~FOO"]], [2, 0, 16, 2, 0, 4, 0, 1, 4, 3, 0.175, ["add     rdx, 1", "add     rcx, 1", "cmp     sil, dil", "jnz     short loc_525B"], ["add~rdx,0", "add~rcx,0", "cmp~sil,dil", "jnz~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 7, -1, 0.0, ["pop     rbx", "mov     eax, edx", "pop     exclusive", "pop     table", "pop     error_msgid", "pop     str", "retn"], ["pop~rbx", "mov~eax,edx", "pop~exclusive", "pop~table", "pop~error_msgid", "pop~str", "retn"]], [0, 0, 16, 0, 0, 5, 3, 1, 6, 8, 0.12083333333333333, ["or      ebx, edx", "test    bpl, bpl", "cmovz   edx, ebx", "test    strcomma, strcomma", "jz      short loc_527C"], ["or~ebx,edx", "test~bpl,bpl", "cmovz~edx,ebx", "test~strcomma,strcomma", "jz~FOO"]], [0, 0, 1, 1, 0, 1, 0, 0, 7, -1, 0.027083333333333334, ["sub     strcomma, str"], ["sub~strcomma,str"]], [0, 0, 3, 0, 0, 2, 1, 1, 6, 1, 0.15, ["test    strcomma, strcomma", "jz      short loc_52D5"], ["test~strcomma,strcomma", "jz~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 5, 2, 0.2833333333333333, ["cmp     byte ptr [entry], 0", "jz      short loc_5287"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 4, 4, 0.19583333333333333, ["cmp     dil, 2Ch ; ','", "jz      short loc_5253"], ["cmp~dil,0", "jz~FOO"]], [1, 0, 16, 1, 0, 2, 0, 1, 6, 6, 0.1, ["add     entry, 10h", "jmp     short loc_5228"], ["add~entry,0", "jmp~FOO"]], [3, 0, 0, 0, 4, 19, 5, 4, 8, -1, 0.0, ["mov     rcx, slen; argsize", "mov     rdx, r14; arg", "mov     esi, 8; s", "xor     edi, edi; n", "call    quotearg_n_style_mem", "mov     edx, 5; category", "mov     rsi, error_msgid; msgid", "xor     edi, edi; domainname", "mov     value, rax", "call    _dcgettext", "lea     rdx, format; \"%s: %s\"", "mov     rcx, rax", "xor     edi, edi; status", "mov     r8, rbx", "xor     esi, esi; errnum", "xor     eax, eax", "call    nl_error", "mov     edi, 1; status", "call    usage"], ["mov~rcx,slen", "mov~rdx,r14", "mov~esi,0", "xor~edi,edi", "call~FOO", "mov~edx,0", "mov~rsi,error_msgid", "xor~edi,edi", "mov~value,rax", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "xor~edi,edi", "mov~r8,rbx", "xor~esi,esi", "xor~eax,eax", "call~FOO", "mov~edi,0", "call~FOO"]], [2, 0, 1, 1, 0, 8, 2, 1, 7, 0, 0.027083333333333334, ["xor     eax, eax", "or      rcx, 0FFFFFFFFFFFFFFFFh", "mov     rdi, str", "repne scasb", "mov     rax, rcx", "not     rax", "sub     rax, 1", "jmp     short loc_528F"], ["xor~eax,eax", "or~rcx,0", "mov~rdi,str", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "sub~rax,0", "jmp~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 5, 3, 0.01875, ["test    dil, dil", "jnz     short loc_525B"], ["test~dil,dil", "jnz~FOO"]], [0, 0, 16, 0, 0, 3, 1, 1, 5, 3, 0.16875, ["mov     edx, [entry+0Ch]", "test    edx, edx", "jnz     short loc_5267"], ["mov~edx,[entry+0]", "test~edx,edx", "jnz~FOO"]]], "func_feature": [5, 15, 17, 0, 17, 23, 4, 82, 0.13382, 1, 5], "succs": [[4], [0], [0], [11, 5], [3], [10, 3], [], [1, 6], [13], [8, 14], [9, 12], [16, 15], [4], [], [13], [16, 10], [10, 7]], "fname": "parse_symbols", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 18, 0, 0, 3, 1, 1, 0, 0, 0.024509803921568627, ["mov     eax, cs:info_signal_count", "test    eax, eax", "jnz     short loc_5324"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [0, 0, 18, 0, 1, 4, 1, 2, 5, 3, 0.07516339869281045, ["call    print_stats", "mov     eax, cs:interrupt_signal", "test    eax, eax", "jnz     short loc_5324"], ["call~FOO", "mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [0, 0, 18, 0, 0, 3, 1, 1, 2, 2, 0.07679738562091504, ["mov     eax, cs:info_signal_count", "test    eax, eax", "jz      short loc_5383"], ["mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 0, 18, 0, 0, 3, 1, 1, 1, 3, 0.3235294117647059, ["mov     eax, cs:interrupt_signal", "test    eax, eax", "jnz     short loc_5324"], ["mov~eax,<TAG>", "test~eax,eax", "jnz~FOO"]], [0, 0, 18, 0, 1, 8, 2, 2, 2, 5, 0.37254901960784315, ["lea     rsi, caught_signals; set", "xor     edi, edi; how", "mov     rdx, rbp; oset", "call    _sigprocmask", "mov     ebx, cs:interrupt_signal", "mov     eax, cs:info_signal_count", "test    eax, eax", "jz      short loc_534E"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~rdx,rbp", "call~FOO", "mov~ebx,<TAG>", "mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 0, 18, 0, 1, 4, 2, 2, 4, 3, 0.22875816993464054, ["xor     edi, edi; fd", "call    _close", "test    eax, eax", "js      short loc_53DB"], ["xor~edi,edi", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 18, 0, 1, 6, 2, 2, 3, 4, 0.39869281045751637, ["xor     edx, edx; oset", "mov     rsi, rbp; set", "mov     edi, 2; how", "call    _sigprocmask", "test    ebx, ebx", "jnz     short loc_53A8"], ["xor~edx,edx", "mov~rsi,rbp", "mov~edi,0", "call~FOO", "test~ebx,ebx", "jnz~FOO"]], [1, 0, 18, 1, 0, 2, 0, 0, 3, 5, 0.0, ["sub     eax, 1", "mov     cs:info_signal_count, eax"], ["sub~eax,0", "mov~<TAG>,eax"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 3, 1, 0.07516339869281045, ["mov     rax, [rsp+var_s88]", "xor     rax, fs:28h", "jnz     loc_5423"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [3, 0, 1, 0, 4, 16, 2, 4, 6, 1, 0.0196078431372549, ["mov     rsi, cs:output_file; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aClosingOutputF; \"closing output file %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbp, rax", "call    _dcgettext", "mov     interrupt, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, rbp", "mov     rdx, rbx; fmt", "mov     edi, 1; status", "xor     eax, eax", "call    nl_error"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbp,rax", "call~FOO", "mov~interrupt,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,rbp", "mov~rdx,rbx", "mov~edi,0", "xor~eax,eax", "call~FOO"]], [0, 0, 18, 0, 1, 1, 0, 1, 7, 5, 0.0, ["call    print_stats"], ["call~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 6, 5, 0.14705882352941177, ["cmp     cs:status_level, 1", "jz      short loc_53CF"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 2, 0, 1, 1, 0, 1, 5, 2, 0.02777777777777778, ["call    cleanup"], ["call~FOO"]], [1, 0, 18, 1, 0, 8, 1, 0, 0, 4, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 98h", "mov     rax, fs:28h", "mov     [rsp+var_s88], rax", "xor     eax, eax", "mov     rbp, rsp", "nop"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rbp,rsp", "nop"]], [1, 0, 18, 0, 0, 2, 0, 1, 4, 4, 0.14052287581699346, ["cmp     cs:status_level, 1", "jz      short loc_5310"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 4, -1, 0.0, ["add     rsp, 98h", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [0, 0, 18, 0, 1, 3, 0, 2, 7, 4, 0.17320261437908496, ["mov     edi, ebx; sig", "call    _raise", "jmp     loc_5310"], ["mov~edi,ebx", "call~FOO", "jmp~FOO"]], [1, 0, 18, 0, 1, 4, 1, 2, 5, 2, 0.16830065359477125, ["mov     edi, 1; fd", "call    _close", "test    eax, eax", "js      short loc_53E0"], ["mov~edi,0", "call~FOO", "test~eax,eax", "js~FOO"]]], "func_feature": [13, 15, 25, 1, 19, 28, 6, 78, 0.11851, 7, 3], "succs": [[9, 4], [0, 4], [9, 4], [2, 4], [6, 7], [18, 13], [5, 15], [6], [], [8, 16], [8], [17], [17, 11], [10], [3], [1, 3], [], [3], [10, 12]], "fname": "process_signals", "n_num": 19}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 3, 0, 1, 3, 0, 2, 0, 0, 0.0, ["call    ___errno_location", "cmp     dword ptr [rax], 4", "jnz     short loc_546D"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 3, 0, 2, 9, 1, 3, 1, 1, 0.3333333333333333, ["call    process_signals", "mov     ecx, ebp; mode", "mov     edx, r12d; flags", "mov     rsi, file; file", "mov     edi, r14d; desired_fd", "call    fd_reopen", "test    eax, eax", "mov     ebx, eax", "js      short loc_5448"], ["call~FOO", "mov~ecx,ebp", "mov~edx,r12d", "mov~rsi,file", "mov~edi,r14d", "call~FOO", "test~eax,eax", "mov~ebx,eax", "js~FOO"]], [0, 0, 3, 0, 0, 10, 0, 1, 0, 2, 0.0, ["push    r14", "mov     r14d, edi", "push    r13", "mov     r13, file", "push    r12", "mov     r12d, edx", "push    rbp", "mov     ebp, ecx", "push    rbx", "jmp     short loc_5452"], ["push~r14", "mov~r14d,edi", "push~r13", "mov~r13,file", "push~r12", "mov~r12d,edx", "push~rbp", "mov~ebp,ecx", "push~rbx", "jmp~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 2, 0, 0.0, ["mov     eax, ebx", "pop     ret", "pop     mode", "pop     flag", "pop     file", "pop     desired_fd", "retn"], ["mov~eax,ebx", "pop~ret", "pop~mode", "pop~flag", "pop~file", "pop~desired_fd", "retn"]]], "func_feature": [3, 1, 6, 0, 4, 5, 3, 29, 0.08333, 0, 0], "succs": [[1, 3], [0, 3], [1], []], "fname": "ifd_reopen", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.14285714285714285, ["cmp     cs:status_level, 1", "jz      short loc_54AD"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 4, 0, 1, 4, 1, 2, 1, -1, 0.09523809523809523, ["mov     edi, 1; fd", "call    _close", "test    eax, eax", "js      short loc_54BD"], ["mov~edi,0", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 2, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    print_stats"], ["call~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 4, -1, 0.0, [], []], [1, 0, 1, 1, 0, 4, 0, 1, 3, -1, 0.09523809523809523, ["add     rsp, 8", "pop     rbx", "pop     rbp", "jmp     process_signals"], ["add~rsp,0", "pop~rbx", "pop~rbp", "jmp~FOO"]], [1, 0, 6, 1, 1, 7, 2, 2, 0, -1, 0.0, ["push    rbp", "push    rbx", "xor     edi, edi; fd", "sub     rsp, 8", "call    _close", "test    eax, eax", "js      short loc_54B8"], ["push~rbp", "push~rbx", "xor~edi,edi", "sub~rsp,0", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    cleanup"], ["call~FOO"]], [0, 0, 1, 0, 0, 0, 0, 0, -1, 0, 0.0, [], []]], "func_feature": [8, 5, 12, 0, 9, 8, 5, 35, 0.04167, 3, 2], "succs": [[2, 4], [0], [4], [], [3], [1, 6], [], [7]], "fname": "finish_up", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 1, 0, 2, 8, 3, 2, 0, 0, 0.007541478129713424, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     esi, dword ptr [rsp+0E8h+lseek_errno]; errnum", "mov     rdx, rax; fmt", "mov     rcx, rbx", "xor     edi, edi; status", "xor     eax, eax", "call    nl_error"], ["xor~edi,edi", "call~FOO", "mov~esi,[word ptr [rsp+0]", "mov~rdx,rax", "mov~rcx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 2, 0, 1, 5, 0, 2, 4, -1, 0.0026395173453996985, ["call    quotearg_n_style_colon", "mov     edx, 5", "mov     records, rax", "lea     rsi, unk_10716", "jmp     loc_57FD"], ["call~FOO", "mov~edx,0", "mov~records,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 2, 0, 1, 4, 0, 1, 4, -1, 0.011689291101055807, ["call    quotearg_n_style_colon", "lea     rsi, aSCannotSeek; \"%s: cannot seek\"", "mov     rbx, rax", "mov     edx, 5; category"], ["call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0"]], [0, 0, 4, 1, 0, 4, 0, 0, 5, -1, 0.007164404223227753, ["mov     rax, [rsp+0E8h+lseek_errno]", "add     rax, rcx", "mov     cs:input_offset, rax", "jnb     loc_55AA"], ["mov~rax,[rsp+0]", "add~rax,rcx", "mov~<TAG>,rax", "jnb~FOO"]], [2, 0, 7, 0, 0, 6, 2, 1, 4, -1, 0.007164404223227753, ["mov     eax, [rsp+0E8h+st.st_mode]", "xor     ebx, ebx", "mov     rcx, cs:input_offset", "and     eax, 0D000h", "cmp     eax, 8000h", "jnz     short loc_579C"], ["mov~eax,[rsp+0]", "xor~ebx,ebx", "mov~rcx,<TAG>", "and~eax,0", "cmp~eax,0", "jnz~FOO"]], [0, 0, 5, 3, 0, 8, 1, 1, 6, -1, 0.0, ["sub     rdi, rsi", "xor     edx, edx", "sub     rsi, rcx", "mov     rax, rdi", "mov     [rsp+0E8h+lseek_errno], rsi", "div     blocksize", "mov     rbx, rax", "jmp     short loc_579C"], ["sub~rdi,rsi", "xor~edx,edx", "sub~rsi,rcx", "mov~rax,rdi", "mov~[rsp+0],rsi", "div~,blocksize", "mov~rbx,rax", "jmp~FOO"]], [0, 0, 6, 0, 0, 5, 0, 0, 5, -1, 0.001885369532428356, ["mov     rdi, [rsp+0E8h+lseek_errno]", "mov     rsi, [rsp+0E8h+st.st_size]", "lea     rax, [rdi+rcx]", "cmp     rsi, rax", "jb      short loc_57C7"], ["mov~rdi,[rsp+0]", "mov~rsi,[rsp+0]", "lea~rax,<TAG>", "cmp~rsi,rax", "jb~FOO"]], [0, 0, 18, 0, 0, 3, 1, 1, 13, -1, 0.004901960784313725, ["mov     rax, cs:iread_fnc", "xor     ebx, ebx", "jmp     short loc_562A"], ["mov~rax,<TAG>", "xor~ebx,ebx", "jmp~FOO"]], [0, 0, 18, 0, 0, 3, 1, 1, 12, -1, 0.007541478129713424, ["mov     rdx, [bytes]", "test    rdx, rdx", "jz      loc_55AA"], ["mov~rdx,<TAG>", "test~rdx,rdx", "jz~FOO"]], [0, 0, 17, 0, 0, 3, 1, 1, 11, -1, 0.008798391151332328, ["mov     rdx, [bytes]", "test    rdx, rdx", "jz      loc_55AA"], ["mov~rdx,<TAG>", "test~rdx,rdx", "jz~FOO"]], [1, 0, 17, 1, 0, 2, 0, 1, 10, -1, 0.021493212669683258, ["sub     rbx, 1", "jnz     short loc_5698"], ["sub~rbx,0", "jnz~FOO"]], [1, 0, 48, 2, 1, 12, 1, 2, 1, -1, 0.010558069381598794, ["mov     rdi, records", "mov     rax, [rsp+0E8h+lseek_errno]", "mov     ecx, 1; whence", "imul    rdi, blocksize", "mov     esi, r13d; fdesc", "add     rax, rdi", "mov     rdi, file; filename", "mov     rdx, rax; offset", "mov     [rsp+0E8h+lseek_errno], rax", "call    skip_via_lseek", "test    rax, rax", "js      loc_56FA"], ["mov~rdi,records", "mov~rax,[rsp+0]", "mov~ecx,0", "imul~rdi,blocksize", "mov~esi,r13d", "add~rax,rdi", "mov~rdi,file", "mov~rdx,rax", "mov~[rsp+0],rax", "call~FOO", "test~rax,rax", "js~FOO"]], [3, 0, 51, 2, 1, 25, 2, 1, 0, -1, 0.0, ["push    r15", "push    r14", "mov     r14, file", "push    r13", "push    r12", "mov     r13d, edi", "push    rbp", "push    rbx", "mov     rbp, blocksize", "mov     rbx, records", "mov     r12, bytes", "sub     rsp, 0B8h", "mov     rax, fs:28h", "mov     [rsp+0E8h+var_40], rax", "xor     eax, eax", "mov     rax, [bytes]", "mov     [rsp+0E8h+lseek_errno], rax", "call    ___errno_location", "xor     edx, edx", "mov     r15, rax", "mov     dword ptr [rax], 0", "mov     rax, 7FFFFFFFFFFFFFFFh", "div     blocksize", "cmp     rax, records", "jb      short loc_55D6"], ["push~r15", "push~r14", "mov~r14,file", "push~r13", "push~r12", "mov~r13d,edi", "push~rbp", "push~rbx", "mov~rbp,blocksize", "mov~rbx,records", "mov~r12,bytes", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "call~FOO", "xor~edx,edx", "mov~r15,rax", "mov~<TAG>,0", "mov~rax,0", "div~,blocksize", "cmp~rax,records", "jb~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 4, -1, 0.03619909502262444, ["cmp     cs:ibuf, 0", "jz      loc_57BD"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 34, 0, 0, 2, 1, 1, 3, -1, 0.05656108597285068, ["test    r13d, r13d", "jnz     loc_5686"], ["test~r13d,r13d", "jnz~FOO"]], [0, 0, 18, 0, 0, 1, 0, 0, 5, -1, 0.04524886877828054, ["mov     fdesc, cs:ibuf"], ["mov~fdesc,<TAG>"]], [0, 0, 19, 0, 1, 2, 0, 2, 5, -1, 0.0, ["call    alloc_ibuf", "jmp     loc_5610"], ["call~FOO", "jmp~FOO"]], [0, 0, 17, 0, 1, 3, 0, 1, 4, -1, 0.028657616892911013, ["call    alloc_obuf", "mov     fdesc, cs:obuf", "nop     word ptr [rax+rax+00h]"], ["call~FOO", "mov~fdesc,<TAG>", "nop~[ord ptr [rax+0]"]], [0, 0, 4, 0, 0, 1, 0, 0, 3, -1, 0.004524886877828055, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 11, 0, 0, 2, 1, 1, 2, -1, 0.008295625942684766, ["test    r13d, r13d", "jz      loc_5757"], ["test~r13d,r13d", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 3, -1, 0.004524886877828055, ["cmp     dword ptr [rsp+0E8h+lseek_errno], 0", "jnz     short loc_572B"], ["cmp~[word ptr [rsp+0],0", "jnz~FOO"]], [1, 0, 39, 0, 1, 9, 2, 2, 2, -1, 0.018853695324283562, ["mov     eax, [r15]", "xor     edx, edx; offset", "mov     ecx, 2; whence", "mov     esi, r13d; fdesc", "mov     rdi, file; filename", "mov     dword ptr [rsp+0E8h+lseek_errno], eax", "call    skip_via_lseek", "test    rax, rax", "js      loc_55F9"], ["mov~eax,<TAG>", "xor~edx,edx", "mov~ecx,0", "mov~esi,r13d", "mov~rdi,file", "mov~[word ptr [rsp+0],eax", "call~FOO", "test~rax,rax", "js~FOO"]], [0, 0, 17, 0, 0, 3, 1, 1, 5, -1, 0.04248366013071895, ["test    records, records", "mov     rax, cs:iread_fnc", "jz      short loc_56E7"], ["test~records,records", "mov~rax,<TAG>", "jz~FOO"]], [1, 0, 5, 0, 0, 1, 0, 0, 2, -1, 0.003770739064856712, ["mov     dword ptr [rsp+0E8h+lseek_errno], 4Bh ; 'K'"], ["mov~[word ptr [rsp+0],0"]], [1, 0, 39, 0, 1, 7, 2, 1, 1, -1, 0.007918552036199095, ["xor     edx, edx; offset", "mov     ecx, 2; whence", "mov     esi, r13d; fdesc", "mov     rdi, file; filename", "call    skip_via_lseek", "test    rax, rax", "jns     loc_5723"], ["xor~edx,edx", "mov~ecx,0", "mov~esi,r13d", "mov~rdi,file", "call~FOO", "test~rax,rax", "jns~FOO"]], [0, 0, 18, 0, 0, 4, 1, 1, 6, -1, 0.06523378582202112, ["test    records, records", "mov     rax, cs:iread_fnc", "mov     rdx, blocksize; size_t", "jz      loc_56EF"], ["test~records,records", "mov~rax,<TAG>", "mov~rdx,blocksize", "jz~FOO"]], [1, 0, 18, 1, 0, 2, 0, 1, 11, -1, 0.02790346907993967, ["sub     rbx, 1", "jnz     short loc_5617"], ["sub~rbx,0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 1, 0, 4, -1, 0.00904977375565611, ["mov     qword ptr [bytes], 0", "xor     ebx, ebx"], ["mov~<TAG>,0", "xor~ebx,ebx"]], [0, 0, 18, 0, 0, 2, 1, 1, 10, -1, 0.03657616892911011, ["test    rbx, rbx", "jz      loc_55A0"], ["test~rbx,rbx", "jz~FOO"]], [0, 0, 17, 0, 0, 2, 1, 1, 9, -1, 0.027526395173454, ["test    rbx, rbx", "jz      loc_55A0"], ["test~rbx,rbx", "jz~FOO"]], [1, 0, 8, 0, 1, 6, 2, 2, 3, -1, 0.005656108597285068, ["lea     rdx, [rsp+0E8h+st]; stat_buf", "xor     esi, esi; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "jnz     loc_5879"], ["lea~rdx,[rsp+0]", "xor~esi,esi", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 18, 0, 1, 5, 2, 2, 7, -1, 0.07579185520361992, ["xor     edi, edi; int", "mov     rsi, buf; char *", "call    rax ; iread_fnc", "test    nread, nread", "js      loc_5826"], ["xor~edi,edi", "mov~rsi,buf", "call~rax", "test~nread,nread", "js~FOO"]], [0, 0, 18, 0, 0, 3, 1, 1, 7, -1, 0.0, ["mov     blocksize, [bytes]", "xor     ebx, ebx", "jmp     loc_562A"], ["mov~blocksize,<TAG>", "xor~ebx,ebx", "jmp~FOO"]], [0, 0, 1, 0, 0, 0, 0, 0, -1, 0, 0.0, [], []], [1, 0, 4, 0, 0, 5, 2, 1, 3, -1, 0.00904977375565611, ["xor     edi, edi; n", "test    r13d, r13d", "mov     rdx, file; arg", "mov     esi, 3; s", "jnz     loc_57E9"], ["xor~edi,edi", "test~r13d,r13d", "mov~rdx,file", "mov~esi,0", "jnz~FOO"]], [1, 0, 17, 0, 1, 5, 1, 2, 7, -1, 0.05656108597285068, ["mov     rsi, buf; char *", "mov     edi, 1; int", "call    rax ; iread_fnc", "test    nread, nread", "js      loc_57DF"], ["mov~rsi,buf", "mov~edi,0", "call~rax", "test~nread,nread", "js~FOO"]], [0, 0, 17, 0, 0, 3, 1, 1, 12, -1, 0.006913021618903972, ["mov     nread, cs:iread_fnc", "xor     ebx, ebx", "jmp     short loc_56A7"], ["mov~nread,<TAG>", "xor~ebx,ebx", "jmp~FOO"]], [0, 0, 17, 0, 0, 3, 1, 1, 6, -1, 0.01860231271995978, ["mov     rdx, [bytes]", "xor     ebx, ebx", "jmp     short loc_56A7"], ["mov~rdx,<TAG>", "xor~ebx,ebx", "jmp~FOO"]], [0, 0, 17, 0, 0, 1, 0, 0, 6, -1, 0.01860231271995978, ["mov     rdx, blocksize; size_t"], ["mov~rdx,blocksize"]], [0, 0, 18, 0, 0, 1, 0, 1, 8, -1, 0.048265460030165915, ["jz      loc_55AA"], ["jz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, -1, 0.028657616892911013, ["mov     rcx, [rsp+0E8h+var_40]", "xor     rcx, fs:28h", "mov     rax, rbx", "jnz     loc_5874"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,rbx", "jnz~FOO"]], [0, 0, 17, 0, 0, 1, 0, 1, 8, -1, 0.038084464555052794, ["jz      loc_55AA"], ["jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, -1, 0.0, ["mov     cs:input_offset_overflow, 1", "jmp     loc_55AA"], ["mov~<TAG>,0", "jmp~FOO"]], [3, 0, 3, 0, 3, 16, 4, 4, 8, -1, 0.019984917043740575, ["mov     rsi, file; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aErrorReadingS; \"error reading %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     rbx, rax", "call    _dcgettext", "mov     esi, [r15]; errnum", "mov     rdx, rax; fmt", "xor     edi, edi; status", "xor     eax, eax", "mov     rcx, rbx", "call    nl_error", "test    byte ptr cs:conversions_mask+1, 1", "jz      short loc_5817"], ["mov~rsi,file", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "mov~rcx,rbx", "call~FOO", "test~<TAG>,0", "jz~FOO"]], [1, 0, 0, 0, 2, 3, 0, 2, 6, -1, 0.0, ["call    finish_up", "mov     edi, 1; status", "call    _exit"], ["call~FOO", "mov~edi,0", "call~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 9, -1, 0.007541478129713424, ["cmp     cs:status_level, 1", "jz      short loc_5817"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 2, 10, -1, 0.0, ["call    print_stats", "jmp     short loc_5817"], ["call~FOO", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 0B8h", "pop     rbx", "pop     blocksize", "pop     bytes", "pop     r13", "pop     file", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~blocksize", "pop~bytes", "pop~r13", "pop~file", "pop~r15", "retn"]], [0, 0, 18, 1, 0, 6, 2, 1, 9, -1, 0.03733031674208145, ["xor     edx, edx", "add     nread, cs:input_offset", "setb    dl", "mov     cs:input_offset, rax", "test    rdx, rdx", "jz      short loc_565F"], ["xor~edx,edx", "add~nread,<TAG>", "setb~dl", "mov~<TAG>,rax", "test~rdx,rdx", "jz~FOO"]], [1, 0, 18, 0, 0, 1, 0, 0, 10, -1, 0.0, ["mov     cs:input_offset_overflow, 1"], ["mov~<TAG>,0"]], [1, 0, 3, 0, 0, 3, 1, 0, 8, -1, 0.012820512820512822, ["mov     rdx, file; arg", "mov     esi, 3; s", "xor     edi, edi; n"], ["mov~rdx,file", "mov~esi,0", "xor~edi,edi"]], [1, 0, 35, 0, 0, 1, 0, 0, 2, -1, 0.017345399698340876, ["mov     dword ptr [rsp+0E8h+lseek_errno], 0"], ["mov~[word ptr [rsp+0],0"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [23, 43, 57, 1, 54, 78, 2, 233, 0.01728, 12, 12], "succs": [[44], [0], [0], [40, 42], [3, 6], [3], [3, 5], [31], [40, 7], [40, 36], [9, 22], [19, 21], [24, 11], [16, 15], [17, 13], [25], [15], [22], [27], [18, 30], [34, 23], [20, 14], [37, 38], [34], [51, 23], [32, 31], [8, 25], [40], [26, 27], [10, 27], [4], [43, 39], [31], [33], [1, 2], [41, 50], [35], [35], [35], [40, 48], [52, 47], [40, 29], [40], [44, 45], [], [44, 46], [44], [], [49, 28], [28], [2], [14], []], "fname": "skip", "n_num": 53}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 21, 0, 2, 8, 0, 3, 0, 0, 0.11666666666666668, ["call    process_signals", "mov     rdx, size; nbytes", "mov     rsi, buf; buf", "mov     edi, r13d; fd", "call    _read", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "mov     rbx, rax", "jnz     short loc_58D8"], ["call~FOO", "mov~rdx,size", "mov~rsi,buf", "mov~edi,r13d", "call~FOO", "cmp~rax,0", "mov~rbx,rax", "jnz~FOO"]], [1, 0, 21, 1, 0, 9, 0, 1, 0, 6, 0.0, ["push    r13", "push    r12", "mov     r13d, edi", "push    rbp", "push    rbx", "mov     r12, buf", "mov     rbp, size", "sub     rsp, 8", "jmp     short loc_58EE"], ["push~r13", "push~r12", "mov~r13d,edi", "push~rbp", "push~rbx", "mov~r12,buf", "mov~rbp,size", "sub~rsp,0", "jmp~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 3, 6, 0.11190476190476191, ["cmp     edx, 4", "jnz     loc_59BA"], ["cmp~edx,0", "jnz~FOO"]], [1, 0, 21, 0, 1, 4, 0, 2, 2, 4, 0.0761904761904762, ["call    ___errno_location", "mov     edx, [rax]", "cmp     edx, 16h", "jnz     short loc_58E5"], ["call~FOO", "mov~edx,<TAG>", "cmp~edx,0", "jnz~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 3, 3, 0.05, ["mov     rdx, cs:prev_nread_7186", "test    rdx, rdx", "jle     short loc_5934"], ["mov~rdx,<TAG>", "test~rdx,rdx", "jle~FOO"]], [0, 0, 3, 0, 0, 2, 0, 0, 4, 2, 0.03333333333333334, ["cmp     rdx, size", "jnb     short loc_5934"], ["cmp~rdx,size", "jnb~FOO"]], [1, 0, 2, 0, 2, 12, 4, 2, 9, -1, 0.0, ["lea     rdx, aWarningPartial; \"warning: partial read (%lu bytes); sugg\"...", "lea     rsi, aWarningPartial_0; \"warning: partial read (%lu byte); sugge\"...", "mov     rcx, prev; n", "xor     edi, edi; domainname", "mov     r8d, 5; category", "call    _dcngettext", "mov     rcx, prev", "mov     rdx, rax; fmt", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    nl_error"], ["lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rcx,prev", "xor~edi,edi", "mov~r8d,0", "call~FOO", "mov~rcx,prev", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 8, -1, 0.06190476190476191, ["cmp     cs:status_level, 1", "jz      short loc_59AE"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 2, 0, 0, 2, 1, 1, 5, 1, 0.01904761904761905, ["test    byte ptr cs:input_flags+1, 40h", "jnz     loc_59C8"], ["test~<TAG>,0", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 9, -1, 0.004761904761904762, ["mov     cs:warn_partial_read, 0", "jmp     loc_5934"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 4, -1, 0.1373015873015873, ["test    nread, nread", "jg      short loc_595C"], ["test~nread,nread", "jg~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 3, -1, 0.06904761904761905, ["jle     short loc_59BA"], ["jle~FOO"]], [0, 0, 10, 0, 0, 2, 0, 0, 4, -1, 0.01666666666666667, ["cmp     nread, size", "jnb     short loc_59BA"], ["cmp~nread,size", "jnb~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 5, -1, 0.006746031746031746, ["jmp     loc_5934"], ["jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["mov     cs:prev_nread_7186, rbx", "add     rsp, 8", "mov     rax, rbx", "pop     rbx", "pop     size", "pop     r12", "pop     fd", "retn"], ["mov~<TAG>,rbx", "add~rsp,0", "mov~rax,rbx", "pop~rbx", "pop~size", "pop~r12", "pop~fd", "retn"]], [1, 0, 6, 0, 0, 2, 0, 1, 5, -1, 0.12896825396825398, ["cmp     cs:warn_partial_read, 0", "jz      short loc_5934"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 6, -1, 0.10476190476190478, ["mov     buf, cs:prev_nread_7186", "test    r12, r12", "jle     short loc_5934"], ["mov~buf,<TAG>", "test~r12,r12", "jle~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 7, -1, 0.08571428571428572, ["cmp     r12, size", "jnb     short loc_5934"], ["cmp~r12,size", "jnb~FOO"]], [1, 0, 1, 0, 0, 3, 1, 1, 6, 0, 0.0, ["mov     dword ptr [rax], 0", "xor     ebx, ebx", "jmp     loc_5934"], ["mov~<TAG>,0", "xor~ebx,ebx", "jmp~FOO"]], [0, 0, 7, 0, 1, 1, 0, 1, 5, -1, 0.007936507936507938, ["call    process_signals"], ["call~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 2, 8, 0.0642857142857143, ["cmp     nread, 0", "jge     short loc_5950"], ["cmp~nread,0", "jge~FOO"]], [0, 0, 21, 0, 1, 2, 0, 1, 3, 7, 0.01666666666666667, ["call    ___errno_location", "mov     edx, [rax]"], ["call~FOO", "mov~edx,<TAG>"]]], "func_feature": [7, 9, 22, 0, 22, 35, 1, 75, 0.05054, 6, 2], "succs": [[3, 20], [0], [0, 10], [2, 4], [5, 14], [8, 14], [9], [9, 6], [18, 14], [14], [13, 15], [10, 12], [10, 19], [14], [], [16, 14], [17, 14], [14, 7], [14], [15], [11, 21], [2]], "fname": "iread", "n_num": 22}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 5, 0, 0, 1, 0, 1, 0, 0, 0.14285714285714285, ["jz      short loc_5A30"], ["jz~FOO"]], [0, 0, 5, 0, 1, 6, 1, 1, 2, -1, 0.26190476190476186, ["mov     rdx, size; size", "mov     rsi, buf; buf", "mov     edi, r13d; fd", "call    iread", "test    ncurr, ncurr", "jns     short loc_5A00"], ["mov~rdx,size", "mov~rsi,buf", "mov~edi,r13d", "call~FOO", "test~ncurr,ncurr", "jns~FOO"]], [0, 0, 0, 0, 0, 2, 1, 0, 1, 0, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [0, 0, 7, 0, 0, 2, 1, 1, 0, 1, 0.0, ["test    size, size", "jz      short loc_5A3E"], ["test~size,size", "jz~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "pop     size", "pop     buf", "pop     nread", "pop     fd", "retn"], ["add~rsp,0", "pop~size", "pop~buf", "pop~nread", "pop~fd", "retn"]], [0, 0, 5, 3, 0, 4, 0, 1, 4, -1, 0.047619047619047616, ["add     nread, ncurr", "add     buf, ncurr", "sub     rbx, ncurr", "jz      short loc_5A30"], ["add~nread,ncurr", "add~buf,ncurr", "sub~rbx,ncurr", "jz~FOO"]], [1, 0, 5, 1, 0, 10, 1, 1, 1, -1, 0.11904761904761904, ["push    r13", "push    r12", "mov     r13d, edi", "push    rbp", "push    rbx", "mov     rbp, buf", "mov     rbx, size", "xor     r12d, r12d", "sub     rsp, 8", "jmp     short loc_5A0D"], ["push~r13", "push~r12", "mov~r13d,edi", "push~rbp", "push~rbx", "mov~rbp,buf", "mov~rbx,size", "xor~r12d,r12d", "sub~rsp,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 4, -1, 0.0, ["add     rsp, 8", "mov     ncurr, nread", "pop     rbx", "pop     buf", "pop     nread", "pop     fd", "retn"], ["add~rsp,0", "mov~ncurr,nread", "pop~rbx", "pop~buf", "pop~nread", "pop~fd", "retn"]]], "func_feature": [1, 4, 5, 0, 8, 9, 0, 38, 0.07143, 0, 6], "succs": [[5, 7], [0, 4], [], [2, 6], [], [1, 7], [1], []], "fname": "iread_fullblock", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 3, 0, 1, 3, 0, 2, 0, 0, 0.0, ["call    ___errno_location", "cmp     dword ptr [rax], 4", "jnz     short loc_5A82"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 3, 0, 2, 7, 1, 3, 1, 1, 0.3333333333333333, ["call    process_signals", "mov     rsi, length; length", "mov     edi, 1; fd", "call    _ftruncate", "test    eax, eax", "mov     ebx, eax", "js      short loc_5A60"], ["call~FOO", "mov~rsi,length", "mov~edi,0", "call~FOO", "test~eax,eax", "mov~ebx,eax", "js~FOO"]], [1, 0, 3, 1, 0, 5, 0, 1, 0, 2, 0.0, ["push    rbp", "push    rbx", "mov     rbp, length", "sub     rsp, 8", "jmp     short loc_5A6A"], ["push~rbp", "push~rbx", "mov~rbp,length", "sub~rsp,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 2, 0, 0.0, ["add     rsp, 8", "mov     eax, ebx", "pop     ret", "pop     length", "retn"], ["add~rsp,0", "mov~eax,ebx", "pop~ret", "pop~length", "retn"]]], "func_feature": [3, 1, 6, 0, 4, 5, 2, 20, 0.08333, 0, 2], "succs": [[1, 3], [0, 3], [1], []], "fname": "iftruncate", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 22, 0, 0, 4, 1, 0, 0, 0, 0.07491789819376027, ["test    size, size", "mov     cs:final_op_was_seek, 1", "mov     rax, nwritten", "jns     loc_5ACE"], ["test~size,size", "mov~<TAG>,0", "mov~rax,nwritten", "jns~FOO"]], [2, 0, 22, 0, 1, 6, 1, 2, 6, -1, 0.10899014778325124, ["mov     edx, 1; whence", "mov     rsi, size; offset", "mov     edi, 1; fd", "call    _lseek", "test    rax, rax", "js      short loc_5BA0"], ["mov~edx,0", "mov~rsi,size", "mov~edi,0", "call~FOO", "test~rax,rax", "js~FOO"]], [2, 0, 22, 2, 0, 3, 0, 1, 5, -1, 0.15147783251231528, ["add     rsi, 1; s2", "sub     rdx, 1; n", "jz      short loc_5B60"], ["add~rsi,0", "sub~rdx,0", "jz~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 4, -1, 0.19211822660098524, ["cmp     byte ptr [rsi], 0", "jnz     short loc_5B18"], ["cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 25, 0, 4, 18, 4, 5, 4, 0, 0.0, ["mov     rdx, cs:output_file; arg", "xor     edi, edi; n", "mov     esi, 3; s", "call    quotearg_n_style_colon", "lea     rsi, aFailedToTurnOf; \"failed to turn off O_DIRECT: %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r13, rax", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, r13", "mov     rdx, rbx; fmt", "xor     edi, edi; status", "xor     eax, eax", "call    nl_error", "jmp     short loc_5C24"], ["mov~rdx,<TAG>", "xor~edi,edi", "mov~esi,0", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r13,rax", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,r13", "mov~rdx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 3, 1, 0.003694581280788177, ["cmp     cs:status_level, 1", "jnz     short loc_5C46"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 22, 0, 0, 2, 1, 1, 6, -1, 0.029967159277504107, ["test    dl, 0Fh", "jnz     short loc_5AF8"], ["test~dl,0", "jnz~FOO"]], [1, 0, 22, 0, 1, 3, 0, 2, 8, -1, 0.05049261083743842, ["call    ___errno_location", "cmp     dword ptr [rax], 4", "jz      loc_5AD1"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 22, 0, 1, 4, 1, 2, 7, -1, 0.016420361247947456, ["mov     rdi, buf; s1", "call    _memcmp", "test    eax, eax", "jz      short loc_5B60"], ["mov~rdi,buf", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 9, -1, 0.007389162561576354, ["jmp     short loc_5B40"], ["jmp~FOO"]], [5, 0, 27, 0, 2, 12, 4, 3, 2, 2, 0.007389162561576354, ["mov     esi, 3; action", "mov     edi, 1; fd", "xor     eax, eax", "call    rpl_fcntl", "and     ah, 0BFh", "mov     esi, 4; action", "mov     edi, 1; fd", "mov     edx, eax", "xor     eax, eax", "call    rpl_fcntl", "test    eax, eax", "jz      short loc_5C24"], ["mov~esi,0", "mov~edi,0", "xor~eax,eax", "call~FOO", "and~ah,0", "mov~esi,0", "mov~edi,0", "mov~edx,eax", "xor~eax,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 28, 0, 0, 2, 0, 1, 1, 3, 0.0049261083743842365, ["cmp     cs:output_blocksize, size", "ja      loc_5BF0"], ["cmp~<TAG>,size", "ja~FOO"]], [2, 0, 29, 1, 0, 9, 1, 1, 0, 4, 0.0, ["push    r13", "push    r12", "mov     r12, buf", "push    rbp", "push    rbx", "mov     rbp, size", "sub     rsp, 8", "test    byte ptr cs:output_flags+1, 40h", "jz      short loc_5AB6"], ["push~r13", "push~r12", "mov~r12,buf", "push~rbp", "push~rbx", "mov~rbp,size", "sub~rsp,0", "test~<TAG>,0", "jz~FOO"]], [1, 0, 22, 0, 0, 3, 1, 1, 7, -1, 0.008210180623973728, ["and     r13d, 0FFFEFFFFh", "mov     cs:conversions_mask, r13d", "jmp     loc_5B18"], ["and~r13d,0", "mov~<TAG>,r13d", "jmp~FOO"]], [1, 0, 22, 1, 1, 7, 1, 1, 3, -1, 0.21325944170771757, ["mov     rdx, size", "lea     rsi, [buf+total_written]; buf", "mov     edi, 1; fd", "sub     rdx, total_written; n", "call    _write", "test    nwritten, nwritten", "jns     short loc_5AC8"], ["mov~rdx,size", "lea~rsi,<TAG>", "mov~edi,0", "sub~rdx,total_written", "call~FOO", "test~nwritten,nwritten", "jns~FOO"]], [2, 0, 22, 0, 1, 5, 1, 2, 2, -1, 0.31403940886699505, ["call    process_signals", "mov     r13d, cs:conversions_mask", "mov     cs:final_op_was_seek, 0", "test    r13d, 10000h", "jz      short loc_5B18"], ["call~FOO", "mov~r13d,<TAG>", "mov~<TAG>,0", "test~r13d,0", "jz~FOO"]], [1, 0, 22, 0, 1, 3, 0, 2, 4, -1, 0.12151067323481117, ["call    ___errno_location", "cmp     dword ptr [rax], 4", "jz      short loc_5AD1"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 5, -1, 0.02257799671592775, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 1, 0, 0, 1, 0, 1, 2, -1, 0.008620689655172414, ["jmp     loc_5B52"], ["jmp~FOO"]], [0, 0, 23, 0, 0, 3, 2, 1, 1, -1, 0.16995073891625617, ["xor     ebx, ebx", "test    size, size", "jnz     short loc_5AD6"], ["xor~ebx,ebx", "test~size,size", "jnz~FOO"]], [3, 0, 24, 0, 1, 6, 2, 2, 3, -1, 0.08866995073891626, ["xor     esi, esi; len", "mov     edi, 1; fd", "mov     cs:o_nocache_eof, 1", "call    invalidate_cache", "or      cs:conversions_mask, 8000h", "jmp     loc_5AB6"], ["xor~esi,esi", "mov~edi,0", "mov~<TAG>,0", "call~FOO", "or~<TAG>,0", "jmp~FOO"]], [1, 0, 4, 0, 1, 3, 0, 2, 5, -1, 0.025041050903119866, ["call    ___errno_location", "mov     dword ptr [rax], 1Ch", "jmp     loc_5B40"], ["call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 22, 0, 0, 1, 0, 1, 4, -1, 0.06588669950738917, ["jz      loc_5BB8"], ["jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, -1, 0.08374384236453201, ["cmp     cs:o_nocache, 0", "jz      short loc_5B52"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 22, 0, 0, 2, 0, 0, 5, -1, 0.1777504105090312, ["cmp     size, total_written", "jbe     short loc_5B40"], ["cmp~size,total_written", "jbe~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 7, -1, 0.03201970443349754, ["test    total_written, total_written", "jnz     loc_5BD0"], ["test~total_written,total_written", "jnz~FOO"]], [0, 0, 22, 1, 0, 1, 0, 0, 5, -1, 0.03817733990147783, ["add     total_written, rax"], ["add~total_written,rax"]], [1, 0, 0, 1, 0, 7, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "mov     rax, rbx", "pop     rbx", "pop     size", "pop     buf", "pop     r13", "retn"], ["add~rsp,0", "mov~rax,rbx", "pop~rbx", "pop~size", "pop~buf", "pop~r13", "retn"]], [2, 0, 0, 1, 1, 10, 0, 1, 8, -1, 0.0, ["mov     rsi, total_written; len", "mov     edi, 1; fd", "call    invalidate_cache", "add     rsp, 8", "mov     rax, total_written", "pop     total_written", "pop     size", "pop     buf", "pop     r13", "retn"], ["mov~rsi,total_written", "mov~edi,0", "call~FOO", "add~rsp,0", "mov~rax,total_written", "pop~total_written", "pop~size", "pop~buf", "pop~r13", "retn"]], [0, 0, 22, 0, 0, 2, 0, 0, 3, -1, 0.17857142857142858, ["mov     rsi, buf", "mov     rdx, size"], ["mov~rsi,buf", "mov~rdx,size"]]], "func_feature": [15, 21, 37, 0, 30, 47, 6, 127, 0.07319, 9, 7], "succs": [[26, 7], [0, 13], [1, 6], [2, 14], [20], [20, 4], [8, 3], [24, 9], [1, 14], [23], [20, 5], [10, 19], [19, 11], [14], [16, 22], [29, 14], [24, 17], [23], [27], [18, 15], [19], [23], [26, 21], [25, 27], [15, 23], [27, 28], [24], [], [], [3]], "fname": "iwrite", "n_num": 30}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 0, 0, 2, 3, 0, 2, 0, 0, 0.0, ["call    finish_up", "mov     edi, 1; status", "call    _exit"], ["call~FOO", "mov~edi,0", "call~FOO"]], [2, 0, 2, 0, 4, 19, 4, 5, 1, 0, 0.16666666666666666, ["mov     rsi, cs:output_file; arg", "mov     edi, 4; s", "mov     rbx, nwritten", "call    quotearg_style", "lea     rsi, aWritingToS; \"writing to %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r12, rax", "call    _dcgettext", "mov     rbp, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "xor     edi, edi; status", "xor     eax, eax", "mov     rcx, r12", "mov     rdx, rbp; fmt", "call    nl_error", "test    nwritten, nwritten", "jz      short loc_5D1F"], ["mov~rsi,<TAG>", "mov~edi,0", "mov~rbx,nwritten", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r12,rax", "call~FOO", "mov~rbp,rax", "call~FOO", "mov~esi,<TAG>", "xor~edi,edi", "xor~eax,eax", "mov~rcx,r12", "mov~rdx,rbp", "call~FOO", "test~nwritten,nwritten", "jz~FOO"]], [1, 0, 1, 1, 0, 1, 0, 0, 2, 0, 0.0, ["add     cs:w_partial, 1"], ["add~<TAG>,0"]], [0, 0, 4, 1, 1, 9, 0, 2, 0, 0, 0.0, ["mov     rsi, cs:output_blocksize; buf", "mov     rdi, cs:obuf; fd", "push    r12", "push    rbp", "push    rbx", "call    iwrite", "add     cs:w_bytes, nwritten", "cmp     cs:output_blocksize, nwritten", "jnz     short loc_5CCF"], ["mov~rsi,<TAG>", "mov~rdi,<TAG>", "push~r12", "push~rbp", "push~rbx", "call~FOO", "add~<TAG>,nwritten", "cmp~<TAG>,nwritten", "jnz~FOO"]], [2, 0, 0, 1, 0, 6, 0, 0, 1, 0, 0.0, ["pop     rbx", "add     cs:w_full, 1", "mov     cs:oc, 0", "pop     rbp", "pop     r12", "retn"], ["pop~rbx", "add~<TAG>,0", "mov~<TAG>,0", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [7, 4, 9, 0, 5, 5, 7, 38, 0.03333, 8, 3], "succs": [[], [0, 2], [0], [1, 4], []], "fname": "write_output", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 15, 1, 1, 5, 0, 1, 0, 0, 0.08088235294117647, ["call    write_output", "mov     rdx, cs:conversion_blocksize", "add     j, 1", "cmp     j, rdx", "jnb     short loc_5DB0"], ["call~FOO", "mov~rdx,<TAG>", "add~j,0", "cmp~j,rdx", "jnb~FOO"]], [1, 0, 15, 1, 0, 6, 0, 0, 5, -1, 0.19117647058823528, ["mov     rcx, rax", "add     rax, 1", "cmp     rax, cs:output_blocksize", "mov     cs:oc, rax", "mov     [rsi+rcx], dil", "jnb     short loc_5DD0"], ["mov~rcx,rax", "add~rax,0", "cmp~rax,<TAG>", "mov~<TAG>,rax", "mov~<TAG>,dil", "jnb~FOO"]], [2, 0, 15, 1, 0, 5, 1, 1, 4, -1, 0.22058823529411764, ["add     buf, 1", "xor     ebx, ebx", "mov     cs:col, 0", "cmp     r12, buf", "jnz     short loc_5D98"], ["add~buf,0", "xor~ebx,ebx", "mov~<TAG>,0", "cmp~r12,buf", "jnz~FOO"]], [0, 0, 15, 0, 0, 1, 0, 1, 7, -1, 0.03676470588235294, ["jmp     short loc_5DB0"], ["jmp~FOO"]], [0, 0, 15, 0, 0, 2, 0, 1, 3, -1, 0.2426470588235294, ["cmp     rdx, rbx", "ja      short loc_5DE5"], ["cmp~rdx,rbx", "ja~FOO"]], [1, 0, 15, 1, 0, 2, 0, 1, 4, -1, 0.03676470588235294, ["add     cs:r_truncate, 1", "jmp     loc_5D84"], ["add~<TAG>,0", "jmp~FOO"]], [0, 0, 15, 0, 0, 2, 0, 1, 3, -1, 0.23161764705882354, ["cmp     rdx, rbx", "jz      loc_5E20"], ["cmp~rdx,rbx", "jz~FOO"]], [0, 0, 17, 0, 0, 2, 1, 1, 0, 1, 0.0, ["test    i, i", "jz      locret_5E48"], ["test~i,i", "jz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 5, -1, 0.0, ["pop     rbx", "pop     buf", "pop     r12", "retn"], ["pop~rbx", "pop~buf", "pop~r12", "retn"]], [2, 0, 15, 2, 0, 5, 0, 1, 5, -1, 0.21323529411764705, ["add     buf, 1", "add     rbx, 1", "cmp     r12, rbp", "mov     cs:col, rbx", "jz      short loc_5DC6"], ["add~buf,0", "add~rbx,0", "cmp~r12,rbp", "mov~<TAG>,rbx", "jz~FOO"]], [0, 0, 15, 0, 0, 7, 0, 1, 1, -1, 0.05514705882352941, ["push    r12", "lea     r12, [buf+i]", "push    rbp", "mov     rbp, buf", "push    rbx", "mov     rbx, cs:col", "jmp     short loc_5D98"], ["push~r12", "lea~r12,<TAG>", "push~rbp", "mov~rbp,buf", "push~rbx", "mov~rbx,<TAG>", "jmp~FOO"]], [0, 0, 15, 0, 0, 4, 0, 1, 2, -1, 0.5330882352941176, ["movzx   ecx, byte ptr [buf+0]", "mov     rdx, cs:conversion_blocksize", "cmp     cl, byte ptr cs:newline_character; \"\\n\"", "jnz     short loc_5D50"], ["movzx~ecx,[yte ptr [buf+0]", "mov~rdx,<TAG>", "cmp~cl,<TAG>", "jnz~FOO"]], [0, 0, 15, 0, 0, 3, 0, 0, 4, -1, 0.1838235294117647, ["movzx   edi, byte ptr cs:space_character; \" \"", "mov     rsi, cs:obuf", "mov     rax, cs:oc"], ["movzx~edi,<TAG>", "mov~rsi,<TAG>", "mov~rax,<TAG>"]], [1, 0, 15, 1, 0, 3, 0, 0, 6, -1, 0.051470588235294115, ["add     j, 1", "cmp     j, rdx", "jb      short loc_5DFA"], ["add~j,0", "cmp~j,rdx", "jb~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 15, 0, 0, 1, 0, 0, 4, -1, 0.13602941176470587, ["jbe     short loc_5D84"], ["jbe~FOO"]], [0, 0, 15, 0, 1, 3, 0, 2, 6, -1, 0.0, ["call    write_output", "mov     rbx, cs:col", "jmp     loc_5D84"], ["call~FOO", "mov~rbx,<TAG>", "jmp~FOO"]], [0, 0, 15, 0, 0, 7, 0, 0, 5, -1, 0.051470588235294115, ["mov     rax, cs:oc", "mov     rsi, cs:obuf", "lea     rdx, [rax+1]", "cmp     rdx, cs:output_blocksize", "mov     [rsi+rax], cl", "mov     cs:oc, rdx", "jnb     loc_5E30"], ["mov~rax,<TAG>", "mov~rsi,<TAG>", "lea~rdx,[rax+0]", "cmp~rdx,<TAG>", "mov~<TAG>,cl", "mov~<TAG>,rdx", "jnb~FOO"]]], "func_feature": [2, 2, 12, 0, 18, 27, 2, 63, 0.12582, 8, 7], "succs": [[2, 12], [0, 13], [8, 11], [2], [2, 12], [9], [5, 15], [10, 14], [], [8, 11], [11], [4, 6], [1], [1, 3], [], [9, 17], [9], [16, 9]], "fname": "copy_with_block", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 22, 0, 0, 2, 1, 1, 0, 8, 0.0, ["test    nread, nread", "jz      locret_6000"], ["test~nread,nread", "jz~FOO"]], [0, 0, 20, 0, 0, 5, 1, 1, 4, 4, 0.33044733044733043, ["test    rax, rax", "mov     rdi, cs:obuf; fd", "mov     rdx, cs:oc", "mov     r13, cs:output_blocksize", "jnz     short loc_5F3E"], ["test~rax,rax", "mov~rdi,<TAG>", "mov~rdx,<TAG>", "mov~r13,<TAG>", "jnz~FOO"]], [0, 0, 20, 0, 0, 4, 0, 1, 3, 5, 0.3722943722943723, ["movzx   esi, byte ptr cs:space_character; \" \"", "mov     rax, cs:pending_spaces_7443", "cmp     sil, r14b", "jz      loc_5FD0"], ["movzx~esi,<TAG>", "mov~rax,<TAG>", "cmp~sil,r14b", "jz~FOO"]], [0, 0, 20, 0, 0, 1, 0, 1, 5, 9, 0.08189033189033187, ["jmp     loc_5FE0"], ["jmp~FOO"]], [3, 0, 20, 2, 0, 9, 2, 1, 7, 5, 0.032467532467532464, ["mov     rax, cs:pending_spaces_7443", "add     cs:w_full, 1", "xor     edx, edx", "mov     rdi, cs:obuf", "mov     esi, 1", "sub     rax, 1", "test    rax, rax", "mov     cs:pending_spaces_7443, rax", "jnz     short loc_5F37"], ["mov~rax,<TAG>", "add~<TAG>,0", "xor~edx,edx", "mov~rdi,<TAG>", "mov~esi,0", "sub~rax,0", "test~rax,rax", "mov~<TAG>,rax", "jnz~FOO"]], [0, 0, 20, 1, 1, 6, 0, 2, 6, 2, 0.14502164502164502, ["mov     rsi, r13; buf", "call    iwrite", "add     cs:w_bytes, rax", "cmp     rax, cs:output_blocksize", "mov     r13, rax", "jnz     loc_6002"], ["mov~rsi,r13", "call~FOO", "add~<TAG>,rax", "cmp~rax,<TAG>", "mov~r13,rax", "jnz~FOO"]], [0, 0, 20, 0, 0, 4, 0, 0, 7, 8, 0.12085137085137086, ["cmp     rsi, r13", "mov     cs:oc, rsi", "mov     [rdi+rdx], r14b", "jb      loc_5EBB"], ["cmp~rsi,r13", "mov~<TAG>,rsi", "mov~<TAG>,r14b", "jb~FOO"]], [1, 0, 20, 1, 0, 6, 1, 1, 6, 5, 0.11002886002886002, ["sub     rax, 1", "lea     rsi, [rdx+2]", "mov     rdx, rcx; size", "test    rax, rax", "mov     cs:pending_spaces_7443, rax", "jz      short loc_5F9E"], ["sub~rax,0", "lea~rsi,[rdx+0]", "mov~rdx,rcx", "test~rax,rax", "mov~<TAG>,rax", "jz~FOO"]], [3, 0, 20, 1, 0, 11, 0, 0, 3, 8, 0.02886002886002886, ["mov     rdx, cs:oc", "sub     i, 1", "movzx   esi, byte ptr cs:newline_character; \"\\n\"", "mov     rcx, cs:obuf", "mov     cs:pending_spaces_7443, 0", "mov     cs:col, 0", "lea     rax, [rdx+1]", "cmp     rax, cs:output_blocksize", "mov     [rcx+rdx], sil", "mov     cs:oc, rax", "jnb     loc_5FB2"], ["mov~rdx,<TAG>", "sub~i,0", "movzx~esi,<TAG>", "mov~rcx,<TAG>", "mov~<TAG>,0", "mov~<TAG>,0", "lea~rax,[rdx+0]", "cmp~rax,<TAG>", "mov~<TAG>,sil", "mov~<TAG>,rax", "jnb~FOO"]], [0, 0, 20, 0, 0, 6, 0, 0, 2, 6, 0.4336219336219336, ["mov     rax, cs:col", "cmp     rax, cs:conversion_blocksize", "movzx   r14d, byte ptr [buf+i+0]", "lea     rdx, [rax+1]", "mov     cs:col, rdx", "jnb     short loc_5E70"], ["mov~rax,<TAG>", "cmp~rax,<TAG>", "movzx~r14d,[yte ptr [buf+0]", "lea~rdx,[rax+0]", "mov~<TAG>,rdx", "jnb~FOO"]], [0, 0, 20, 0, 0, 1, 0, 0, 7, 4, 0.030303030303030304, ["movzx   esi, byte ptr cs:space_character; \" \""], ["movzx~esi,<TAG>"]], [1, 0, 20, 1, 1, 4, 0, 2, 4, 7, 0.1277056277056277, ["add     i, 1", "call    write_output", "cmp     nread, i", "ja      loc_5EC8"], ["add~i,0", "call~FOO", "cmp~nread,i", "ja~FOO"]], [0, 0, 20, 0, 0, 1, 0, 1, 7, 8, 0.006132756132756132, ["jmp     short loc_5FB2"], ["jmp~FOO"]], [0, 0, 20, 0, 0, 5, 0, 0, 5, 3, 0.28751803751803745, ["lea     rcx, [rdx+1]", "mov     [rdi+rdx], sil", "cmp     rcx, r13", "mov     cs:oc, rcx", "jb      short loc_5F20"], ["lea~rcx,[rdx+0]", "mov~<TAG>,sil", "cmp~rcx,r13", "mov~<TAG>,rcx", "jb~FOO"]], [1, 0, 20, 1, 0, 3, 0, 0, 4, 7, 0.21284271284271283, ["add     i, 1", "cmp     nread, i", "jbe     loc_5FC4"], ["add~i,0", "cmp~nread,i", "jbe~FOO"]], [1, 0, 20, 1, 0, 3, 0, 1, 4, 8, 0.009379509379509378, ["add     rax, 1", "mov     cs:pending_spaces_7443, rax", "jmp     loc_5EBB"], ["add~rax,0", "mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 20, 0, 0, 5, 0, 0, 6, 8, 0.08621933621933622, ["lea     rsi, [rdx+1]", "mov     [rdi+rdx], r14b", "cmp     rsi, r13", "mov     cs:oc, rsi", "jb      loc_5EBB"], ["lea~rsi,[rdx+0]", "mov~<TAG>,r14b", "cmp~rsi,r13", "mov~<TAG>,rsi", "jb~FOO"]], [2, 0, 2, 0, 4, 18, 4, 5, 7, 1, 0.07792207792207792, ["mov     rsi, cs:output_file; arg", "mov     edi, 4; s", "call    quotearg_style", "lea     rsi, aWritingToS; \"writing to %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     buf, rax", "call    _dcgettext", "mov     nread, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "xor     edi, edi; status", "xor     eax, eax", "mov     rcx, rbp", "mov     rdx, rbx; fmt", "call    nl_error", "test    r13, r13", "jz      short loc_604F"], ["mov~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~buf,rax", "call~FOO", "mov~nread,rax", "call~FOO", "mov~esi,<TAG>", "xor~edi,edi", "xor~eax,eax", "mov~rcx,rbp", "mov~rdx,rbx", "call~FOO", "test~r13,r13", "jz~FOO"]], [1, 0, 1, 1, 0, 1, 0, 0, 8, 1, 0.0, ["add     cs:w_partial, 1"], ["add~<TAG>,0"]], [0, 0, 0, 0, 0, 6, 0, 0, 5, -1, 0.0, ["pop     nread", "pop     buf", "pop     i", "pop     r13", "pop     c", "retn"], ["pop~nread", "pop~buf", "pop~i", "pop~r13", "pop~c", "retn"]], [1, 0, 0, 0, 2, 3, 0, 2, 8, 0, 0.0, ["call    finish_up", "mov     edi, 1; status", "call    _exit"], ["call~FOO", "mov~edi,0", "call~FOO"]], [0, 0, 20, 0, 0, 9, 1, 1, 1, 7, 0.04329004329004329, ["push    r14", "push    r13", "push    r12", "xor     r12d, r12d", "push    rbp", "mov     rbp, buf", "push    rbx", "mov     rbx, nread", "jmp     short loc_5EC8"], ["push~r14", "push~r13", "push~r12", "xor~r12d,r12d", "push~rbp", "mov~rbp,buf", "push~rbx", "mov~rbx,nread", "jmp~FOO"]]], "func_feature": [8, 10, 20, 0, 23, 34, 2, 114, 0.1103, 13, 9], "succs": [[], [0, 22], [4, 14], [16, 2], [17], [11, 7], [18, 5], [12, 15], [11, 7], [12, 15], [9, 3], [14], [10, 20], [12], [8, 6], [10, 20], [15], [13, 15], [19, 21], [21], [], [], [10]], "fname": "copy_with_unblock", "n_num": 23}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0.0, ["pop     rbx", "mov     eax, 0FFFFFFFFh", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "mov~eax,0", "pop~stream", "pop~r12", "retn"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, -1, 0.047619047619047616, ["test    eax, eax", "jnz     short loc_60B8"], ["test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 2, 0.07142857142857142, ["test    eax, eax", "jz      short loc_608F"], ["test~eax,eax", "jz~FOO"]], [0, 1, 7, 0, 2, 12, 2, 3, 0, 3, 0.0, ["push    r12", "push    rbp", "mov     rbp, stream", "push    rbx", "call    ___fpending", "mov     ebx, [stream+0]", "mov     rdi, stream; fp", "mov     r12, rax", "call    rpl_fclose", "and     ebx, 20h", "test    ebx, ebx", "jnz     short loc_6098"], ["push~r12", "push~rbp", "mov~rbp,stream", "push~rbx", "call~FOO", "mov~ebx,[stream+0]", "mov~rdi,stream", "mov~r12,rax", "call~FOO", "and~ebx,<STR>", "test~ebx,ebx", "jnz~FOO"]], [1, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.047619047619047616, ["test    r12, r12", "mov     eax, 0FFFFFFFFh", "jz      short loc_60C8"], ["test~r12,r12", "mov~eax,0", "jz~FOO"]], [2, 0, 0, 0, 1, 7, 0, 1, 2, -1, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 0", "mov     eax, 0FFFFFFFFh", "pop     rbx", "pop     stream", "pop     r12", "retn"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "pop~rbx", "pop~stream", "pop~r12", "retn"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["pop     rbx", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "pop~stream", "pop~r12", "retn"]], [1, 0, 0, 0, 1, 9, 0, 1, 3, 0, 0.0, ["call    ___errno_location", "cmp     dword ptr [rax], 9", "pop     rbx", "pop     stream", "pop     r12", "setnz   al", "movzx   eax, al", "neg     eax", "retn"], ["call~FOO", "cmp~<TAG>,0", "pop~rbx", "pop~stream", "pop~r12", "setnz~al", "movzx~eax,al", "neg~eax", "retn"]]], "func_feature": [4, 5, 8, 0, 8, 8, 3, 44, 0.02083, 0, 0], "succs": [[], [0, 5], [4, 6], [1, 2], [6, 7], [], [], []], "fname": "close_stream", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:file_name, file", "retn"], ["mov~<TAG>,file", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:ignore_EPIPE, dil", "retn"], ["mov~<TAG>,dil", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_ignore_EPIPE", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 0, 1, 0, 4, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [0, 0, 2, 0, 1, 4, 1, 2, 1, -1, 0.09523809523809523, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jnz     short loc_6182"], ["mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 3, 0, 1, 8, 2, 2, 2, 1, 0.11904761904761903, ["lea     rsi, aWriteError; \"write error\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdi, cs:file_name; arg", "mov     rbp, rax", "test    rdi, rdi", "jz      short loc_618D"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdi,<TAG>", "mov~rbp,rax", "test~rdi,rdi", "jz~FOO"]], [1, 0, 7, 0, 1, 4, 0, 2, 1, 2, 0.07142857142857142, ["call    ___errno_location", "cmp     cs:ignore_EPIPE, 0", "mov     rbx, rax", "jz      short loc_6143"], ["call~FOO", "cmp~<TAG>,0", "mov~rbx,rax", "jz~FOO"]], [0, 1, 6, 0, 0, 2, 0, 1, 2, 2, 0.04166666666666666, ["cmp     dword ptr [rax], 20h ; ' '", "jnz     short loc_6143"], ["cmp~<TAG>,<STR>", "jnz~FOO"]], [1, 0, 8, 1, 1, 7, 1, 2, 0, 3, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jz      short loc_612C"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     edi, cs:exit_failure; status", "call    __exit"], ["mov~edi,<TAG>", "call~FOO"]], [0, 0, 1, 0, 1, 7, 2, 2, 3, 0, 0.014880952380952378, ["mov     esi, [rbx]; errnum", "lea     rdx, aLuBytesSCopied+1Bh; format", "mov     rcx, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_6182"], ["mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 2, 8, 2, 2, 3, -1, 0.014880952380952378, ["call    quotearg_colon", "mov     esi, [rbx]; errnum", "lea     rdx, format; \"%s: %s\"", "mov     rcx, rax", "mov     r8, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO"]]], "func_feature": [8, 8, 14, 0, 9, 12, 1, 46, 0.03968, 8, 2], "succs": [[], [0, 6], [8, 7], [2, 4], [1, 2], [1, 3], [], [6], [6]], "fname": "close_stdout", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    eax, eax", "js      short loc_61F9"], ["test~eax,eax", "js~FOO"]], [1, 0, 3, 1, 1, 14, 1, 2, 0, 1, 0.0, ["push    r13", "push    r12", "xor     eax, eax", "push    rbp", "push    rbx", "mov     ebp, edi", "mov     desired_fd, file; file", "mov     esi, edx; oflag", "mov     edx, ecx", "sub     rsp, 8", "call    _open", "cmp     ebp, eax", "mov     ebx, eax", "jz      short loc_61F9"], ["push~r13", "push~r12", "xor~eax,eax", "push~rbp", "push~rbx", "mov~ebp,edi", "mov~desired_fd,file", "mov~esi,edx", "mov~edx,ecx", "sub~rsp,0", "call~FOO", "cmp~ebp,eax", "mov~ebx,eax", "jz~FOO"]], [0, 0, 1, 0, 3, 11, 0, 3, 2, 1, 0.0, ["mov     esi, ebp; fd2", "mov     edi, eax; fd", "call    _dup2", "mov     r12d, eax", "call    ___errno_location", "mov     r13d, [rax]", "mov     desired_fd, rax", "mov     edi, ebx; fd", "call    _close", "mov     ebx, r12d", "mov     [rbp+0], r13d"], ["mov~esi,ebp", "mov~edi,eax", "call~FOO", "mov~r12d,eax", "call~FOO", "mov~r13d,<TAG>", "mov~desired_fd,rax", "mov~edi,ebx", "call~FOO", "mov~ebx,r12d", "mov~[rbp+0],r13d"]], [1, 0, 0, 1, 0, 7, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "mov     eax, ebx", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "mov~eax,ebx", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]]], "func_feature": [4, 2, 6, 0, 4, 5, 1, 34, 0.04167, 0, 2], "succs": [[2, 3], [0, 3], [3], []], "fname": "fd_reopen", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [5, 0, 2, 7, 0, 17, 1, 1, 1, 0, 0.3333333333333333, ["mov     rcx, [rsp+28h+ts.tv_nsec]", "mov     rdx, 112E0BE826D694B3h", "mov     rax, rcx", "imul    rdx", "mov     rax, rcx", "sar     rax, 3Fh", "sar     rdx, 1Ah", "sub     rdx, rax", "mov     rax, [rsp+28h+ts.tv_sec]", "add     rax, rdx", "imul    rdx, 3B9ACA00h", "imul    rax, 3B9ACA00h", "sub     rcx, rdx", "add     rax, rcx", "mov     rsi, [rsp+28h+var_10]", "xor     rsi, fs:28h", "jnz     short loc_6295"], ["mov~rcx,[rsp+0]", "mov~rdx,0", "mov~rax,rcx", "imul~,rdx", "mov~rax,rcx", "sar~rax,0", "sar~rdx,0", "sub~rdx,rax", "mov~rax,<TAG>", "add~rax,rdx", "imul~rdx,,0", "imul~rax,,0", "sub~rcx,rdx", "add~rax,rcx", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [0, 1, 0, 1, 0, 3, 0, 0, 2, 0, 0.0, ["add     rsp, 20h", "pop     rbx", "retn"], ["add~rsp,<STR>", "pop~rbx", "retn"]], [0, 0, 3, 0, 1, 2, 0, 1, 1, 0, 0.0, ["mov     rdi, rbx; ts", "call    gettime"], ["mov~rdi,rbx", "call~FOO"]], [1, 1, 4, 1, 1, 11, 2, 2, 0, 0, 0.0, ["push    rbx", "mov     edi, 1; clock_id", "sub     rsp, 20h", "mov     rbx, rsp", "mov     rsi, rbx; tp", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "call    _clock_gettime", "test    eax, eax", "jz      short loc_6241"], ["push~rbx", "mov~edi,0", "sub~rsp,<STR>", "mov~rbx,rsp", "mov~rsi,rbx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~eax,eax", "jz~FOO"]]], "func_feature": [3, 3, 5, 1, 5, 5, 3, 34, 0.06667, 1, 9], "succs": [[], [0, 2], [], [1], [1, 3]], "fname": "gethrxtime", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rsi, ts; tp", "xor     edi, edi; clock_id", "jmp     _clock_gettime"], ["mov~rsi,ts", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 1, 3, 0.0, 0, 0], "succs": [[], [0]], "fname": "gettime", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 1, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 28h", "retn"], ["add~rsp,<STR>", "retn"]], [0, 1, 2, 1, 1, 12, 3, 2, 0, 1, 0.0, ["sub     rsp, 28h", "xor     edi, edi; clock_id", "mov     rsi, rsp; tp", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "call    _clock_gettime", "mov     rcx, [rsp+28h+var_10]", "xor     rcx, fs:28h", "mov     rax, [rsp+28h+ts.tv_sec]", "mov     rdx, [rsp+28h+ts.tv_nsec]", "jnz     short loc_62EC"], ["sub~rsp,<STR>", "xor~edi,edi", "mov~rsi,rsp", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,<TAG>", "mov~rdx,[rsp+0]", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 3, 3, 1, 3, 2, 0, 15, 0.0, 1, 2], "succs": [[], [0, 2], []], "fname": "current_timespec", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 45, 0, 0, 3, 0, 1, 0, 0, 0.0085978835978836, ["fld     cs:flt_12254", "fmul    st(1), st", "jmp     loc_6622"], ["fld~<TAG>,<TAG>", "fmul~<TAG>,<TAG>", "jmp~FOO"]], [3, 0, 69, 1, 2, 19, 1, 3, 9, 9, 0.019798600443761735, ["sub     rsp, 10h", "lea     rcx, a1lf; \"%.1Lf\"", "mov     esi, 1", "fld     st", "fstp    [rsp+0E8h+var_E8]", "mov     base, [rsp+0E8h+buf]", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "xor     eax, eax", "mov     rdi, r14", "fstp    [rsp+0E8h+damt.value]", "call    ___sprintf_chk", "mov     rdi, r14; s", "call    _strlen", "pop     rcx", "pop     rsi", "cmp     rax, r13", "mov     decimal_point, rax", "fld     [rsp+0D8h+damt.value]", "ja      loc_6EF8"], ["sub~rsp,0", "lea~rcx,<TAG>", "mov~esi,0", "fld~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "mov~base,[rsp+0]", "mov~rdx,0", "xor~eax,eax", "mov~rdi,r14", "fstp~<TAG>,[rsp+0]", "call~FOO", "mov~rdi,r14", "call~FOO", "pop~rcx", "pop~rsi", "cmp~rax,r13", "mov~decimal_point,rax", "fld~<TAG>,[rsp+0]", "ja~FOO"]], [2, 0, 41, 1, 0, 4, 0, 0, 12, 3, 0.0, ["cmp     al, 7Fh", "movzx   ebx, al", "cmovnb  rbx, r12", "add     r13, 1"], ["cmp~al,0", "movzx~ebx,al", "cmovnb~rbx,r12", "add~r13,0"]], [0, 0, 41, 0, 0, 3, 1, 1, 11, 3, 0.024300221880867043, ["movzx   eax, byte ptr [r13+0]", "test    al, al", "jz      short loc_6A0A"], ["movzx~eax,[yte ptr [r13+0]", "test~al,al", "jz~FOO"]], [0, 0, 67, 0, 0, 5, 0, 1, 18, 11, 0.0007147124082607954, ["mov     edx, [decimal_point]", "mov     [p_0], edx", "mov     edx, [decimal_point+rax-4]", "mov     [p_0+rax-4], edx", "jmp     loc_68EB"], ["mov~edx,<TAG>", "mov~<TAG>,edx", "mov~edx,[decimal_point+0]", "mov~[p_0+0],edx", "jmp~FOO"]], [1, 0, 71, 0, 0, 2, 1, 1, 17, 12, 0.004522956135859362, ["test    r13b, 4", "jnz     loc_7238"], ["test~r13b,0", "jnz~FOO"]], [1, 0, 89, 0, 0, 5, 0, 1, 11, 11, 0.0018987881891107698, ["fstp    st(3)", "fstp    st", "fxch    st(1)", "mov     dword ptr [rsp+0D8h+exponent], 5", "jmp     loc_64EE"], ["fstp~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 95, 0, 0, 7, 0, 0, 10, 12, 0.002048131080389145, ["fstp    st(2)", "fxch    st(1)", "fld     st(2)", "fmul    st, st(2)", "fxch    st(1)", "fucomi  st, st(1)", "jb      loc_6FFD"], ["fstp~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fld~<TAG>,<TAG>", "fmul~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "jb~FOO"]], [1, 0, 48, 1, 0, 5, 1, 1, 20, 9, 0.005088325652841782, ["add     rax, 1", "mov     [rsp+0D8h+inexact_style], rax", "test    rax, rax", "fild    [rsp+0D8h+inexact_style]", "js      loc_6F6A"], ["add~rax,0", "mov~[rsp+0],rax", "test~rax,rax", "fild~<TAG>,[rsp+0]", "js~FOO"]], [0, 0, 49, 0, 0, 2, 0, 1, 20, 10, 6.400409626216078e-05, ["fstp    st(1)", "jmp     short loc_65FC"], ["fstp~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 49, 0, 0, 1, 0, 0, 19, 10, 0.004256272401433692, ["fstp    st(1)"], ["fstp~<TAG>,<TAG>"]], [0, 0, 41, 0, 0, 2, 0, 0, 12, 2, 0.01828383683222393, ["cmp     rbx, r12", "jbe     short loc_69B8"], ["cmp~rbx,r12", "jbe~FOO"]], [0, 0, 211, 1, 0, 6, 2, 1, 1, 13, 0.0032855436081242534, ["xor     edx, edx", "mov     psuffix_0, rcx", "div     rsi", "test    rdx, rdx", "mov     rdi, rax", "jz      loc_6BA0"], ["xor~edx,edx", "mov~psuffix_0,rcx", "div~,rsi", "test~rdx,rdx", "mov~rdi,rax", "jz~FOO"]], [13, 1, 217, 5, 3, 61, 5, 4, 0, 14, 0.0, ["push    r15", "push    r14", "mov     eax, edx", "push    r13", "push    r12", "and     eax, 3", "push    rbp", "push    rbx", "mov     ebp, edx", "sub     rsp, 0A8h", "mov     dword ptr [rsp+0D8h+inexact_style], eax", "mov     eax, edx", "mov     [rsp+0D8h+buf], buf_0", "and     eax, 20h", "mov     qword ptr [rsp+0D8h+damt.value], from_block_size_0", "mov     [rsp+0D8h+to_block_size], to_block_size_0", "mov     rbx, fs:28h", "mov     [rsp+0D8h+var_40], rbx", "xor     ebx, ebx", "cmp     eax, 1", "mov     [rsp+0D8h+exponent], n_0", "mov     [rsp+0D8h+var_80], eax", "sbb     r14d, r14d", "and     r14d, 0FFFFFFE8h", "add     r14d, 400h", "cmp     eax, 1", "sbb     r12, r12", "mov     ebx, r14d", "call    _localeconv", "mov     r15, [l_0]", "and     r12, 0FFFFFFFFFFFFFFE8h", "mov     [rsp+0D8h+l], l_0", "add     r12, 400h", "mov     rdi, r15; s", "call    _strlen", "mov     rdx, [rsp+0D8h+l]", "mov     r13, rax", "sub     pointlen, 1", "cmp     rax, 10h", "lea     rax, asc_121F1; \".\"", "mov     esi, 1", "cmovnb  pointlen, rsi", "cmovnb  r15, rax", "mov     rax, [rdx+8]", "mov     rcx, [rdx+10h]", "mov     rdi, rax; s", "mov     [rsp+0D8h+grouping], rcx", "mov     [rsp+0D8h+l], rax", "call    _strlen", "cmp     rax, 11h", "lea     rax, aWrittenBySSAnd+1Bh; \"\"", "mov     rsi, [rsp+0D8h+to_block_size]", "mov     rcx, rax", "cmovb   rcx, [rsp+0D8h+l]", "mov     rax, [rsp+0D8h+buf]", "add     rax, 287h", "mov     [rsp+0D8h+l], rcx", "mov     thousands_sep_0, qword ptr [rsp+0D8h+damt.value]", "mov     [rsp+0D8h+psuffix], rax", "cmp     rsi, rcx", "ja      loc_6668"], ["push~r15", "push~r14", "mov~eax,edx", "push~r13", "push~r12", "and~eax,0", "push~rbp", "push~rbx", "mov~ebp,edx", "sub~rsp,0", "mov~[word ptr [rsp+0],eax", "mov~eax,edx", "mov~[rsp+0],buf_0", "and~eax,<STR>", "mov~[word ptr [rsp+0],from_block_size_0", "mov~[rsp+0],to_block_size_0", "mov~rbx,<TAG>", "mov~[rsp+0],rbx", "xor~ebx,ebx", "cmp~eax,0", "mov~[rsp+0],n_0", "mov~[rsp+0],eax", "sbb~r14d,r14d", "and~r14d,0", "add~r14d,0", "cmp~eax,0", "sbb~r12,r12", "mov~ebx,r14d", "call~FOO", "mov~r15,<TAG>", "and~r12,0", "mov~[rsp+0],l_0", "add~r12,0", "mov~rdi,r15", "call~FOO", "mov~rdx,[rsp+0]", "mov~r13,rax", "sub~pointlen,0", "cmp~rax,0", "lea~rax,<TAG>", "mov~esi,0", "cmovnb~pointlen,rsi", "cmovnb~r15,rax", "mov~rax,[rdx+0]", "mov~rcx,[rdx+0]", "mov~rdi,rax", "mov~[rsp+0],rcx", "mov~[rsp+0],rax", "call~FOO", "cmp~rax,0", "lea~rax,<TAG>", "mov~rsi,[rsp+0]", "mov~rcx,rax", "cmovb~rcx,[rsp+0]", "mov~rax,[rsp+0]", "add~rax,0", "mov~[rsp+0],rcx", "mov~thousands_sep_0,[word ptr [rsp+0]", "mov~[rsp+0],rax", "cmp~rsi,rcx", "ja~FOO"]], [0, 0, 46, 0, 0, 1, 0, 1, 21, 9, 6.400409626216078e-05, ["jmp     short loc_6620"], ["jmp~FOO"]], [0, 0, 62, 0, 0, 3, 1, 1, 6, 8, 0.06449479433350401, ["mov     r10d, dword ptr [rsp+0D8h+inexact_style]", "test    r10d, r10d", "jnz     short loc_6920"], ["mov~r10d,[word ptr [rsp+0]", "test~r10d,r10d", "jnz~FOO"]], [1, 0, 65, 0, 0, 2, 0, 1, 5, 9, 0.0905657962109575, ["cmp     dword ptr [rsp+0D8h+inexact_style], 1", "jz      loc_6E20"], ["cmp~[word ptr [rsp+0],0", "jz~FOO"]], [3, 0, 47, 3, 0, 14, 2, 0, 11, 7, 0.005739033964840417, ["mov     rax, [decimal_point]", "lea     rcx, [p_0+8]", "and     rcx, 0FFFFFFFFFFFFFFF8h", "mov     [p_0], rax", "mov     eax, r13d", "mov     rdx, [decimal_point+rax-8]", "mov     [p_0+rax-8], rdx", "mov     rax, p_0", "sub     rax, rcx", "sub     decimal_point, rax", "add     eax, r13d", "and     eax, 0FFFFFFF8h", "cmp     eax, 8", "jb      loc_6F5C"], ["mov~rax,<TAG>", "lea~rcx,[p_0+0]", "and~rcx,0", "mov~<TAG>,rax", "mov~eax,r13d", "mov~rdx,[decimal_point+0]", "mov~[p_0+0],rdx", "mov~rax,p_0", "sub~rax,rcx", "sub~decimal_point,rax", "add~eax,r13d", "and~eax,0", "cmp~eax,0", "jb~FOO"]], [2, 0, 53, 1, 0, 7, 0, 0, 10, 8, 0.014208909370199694, ["mov     rax, r13", "mov     byte ptr [r14-1], 30h ; '0'", "not     rax", "add     r14, rax", "cmp     r13d, 8", "mov     eax, r13d", "jnb     short loc_71EA"], ["mov~rax,r13", "mov~[yte ptr [r14-1]+0],0", "not~rax", "add~r14,rax", "cmp~r13d,0", "mov~eax,r13d", "jnb~FOO"]], [1, 0, 17, 2, 0, 7, 0, 1, 19, -1, 0.00018134493940945556, ["imul    rax, r12", "cmp     rdi, power", "setnbe  al", "movzx   eax, al", "add     eax, 7", "mov     dword ptr [rsp+0D8h+exponent], eax", "jmp     loc_6AEF"], ["imul~rax,r12", "cmp~rdi,power", "setnbe~al", "movzx~eax,al", "add~eax,0", "mov~[word ptr [rsp+0],eax", "jmp~FOO"]], [0, 0, 19, 1, 0, 3, 0, 0, 18, -1, 0.00819252432155658, ["imul    power, r12", "cmp     rdi, power", "jbe     loc_70C5"], ["imul~power,r12", "cmp~rdi,power", "jbe~FOO"]], [0, 0, 46, 0, 0, 3, 0, 1, 18, 9, 0.006997781191329579, ["fstp    st(2)", "fxch    st(1)", "jmp     short loc_6620"], ["fstp~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 55, 0, 0, 3, 1, 1, 17, 10, 0.016961085509472607, ["mov     r15d, dword ptr [rsp+0D8h+inexact_style]", "test    r15d, r15d", "jnz     short loc_6618"], ["mov~r15d,[word ptr [rsp+0]", "test~r15d,r15d", "jnz~FOO"]], [0, 0, 46, 0, 0, 1, 0, 0, 20, 9, 0.0014827615634067247, ["fxch    st(1)"], ["fxch~<TAG>,<TAG>"]], [0, 0, 51, 0, 0, 1, 0, 1, 19, 10, 0.0030188598736985836, ["jz      short loc_661E"], ["jz~FOO"]], [0, 0, 127, 0, 0, 4, 1, 0, 2, 12, 0.011307390339648405, ["mov     qword ptr [rsp+0D8h+damt.value], rcx", "test    rcx, rcx", "fild    qword ptr [rsp+0D8h+damt.value]", "jns     short loc_6428"], ["mov~[word ptr [rsp+0],rcx", "test~rcx,rcx", "fild~<TAG>,[word ptr [rsp+0]", "jns~FOO"]], [0, 0, 213, 0, 0, 2, 1, 1, 1, 13, 0.0013014166239972691, ["test    rcx, rcx", "jz      loc_6414"], ["test~rcx,rcx", "jz~FOO"]], [0, 0, 212, 1, 0, 6, 2, 1, 2, 13, 0.0018561187916026627, ["xor     edx, edx", "mov     psuffix_0, rsi", "div     rcx", "test    rdx, rdx", "mov     r8, rax", "jnz     loc_6414"], ["xor~edx,edx", "mov~psuffix_0,rsi", "div~,rcx", "test~rdx,rdx", "mov~r8,rax", "jnz~FOO"]], [0, 0, 210, 2, 0, 8, 1, 1, 2, 12, 0.004245605052056665, ["mov     r9, [rsp+0D8h+exponent]", "xor     edx, edx", "mov     rsi, r9", "imul    rsi, multiplier", "mov     multiplier, amt", "div     multiplier", "cmp     rax, r9", "jnz     loc_6414"], ["mov~r9,[rsp+0]", "xor~edx,edx", "mov~rsi,r9", "imul~rsi,multiplier", "mov~multiplier,amt", "div~,multiplier", "cmp~rax,r9", "jnz~FOO"]], [1, 0, 98, 1, 0, 4, 0, 0, 19, 14, 0.002773510838026967, ["cmp     ebx, ecx", "setb    cl", "movzx   ecx, cl", "add     ecx, 2"], ["cmp~ebx,ecx", "setb~cl", "movzx~ecx,cl", "add~ecx,0"]], [1, 0, 100, 3, 0, 17, 2, 1, 18, 15, 0.004608294930875576, ["mov     r2, r8", "xor     edx, edx", "div     r12", "mov     r8, rax", "lea     eax, [rdx+rdx*4]", "xor     edx, edx", "mov     rsi, r8", "lea     eax, [r10+rax*2]", "div     ebx", "mov     r10d, eax", "mov     eax, ecx", "sar     eax, 1", "mov     edi, r10d", "lea     eax, [rax+rdx*2]", "add     ecx, eax", "cmp     ebx, eax", "ja      loc_7030"], ["mov~r2,r8", "xor~edx,edx", "div~,r12", "mov~r8,rax", "lea~eax,<TAG>", "xor~edx,edx", "mov~rsi,r8", "lea~eax,<TAG>", "div~,ebx", "mov~r10d,eax", "mov~eax,ecx", "sar~eax,0", "mov~edi,r10d", "lea~eax,<TAG>", "add~ecx,eax", "cmp~ebx,eax", "ja~FOO"]], [0, 0, 126, 0, 0, 1, 0, 0, 3, 12, 0.0, ["fadd    cs:flt_1224C"], ["fadd~<TAG>,<TAG>"]], [0, 0, 112, 0, 0, 2, 0, 1, 11, 13, 0.013568868407578085, ["cmp     r12, r8", "ja      loc_7161"], ["cmp~r12,r8", "ja~FOO"]], [0, 0, 113, 0, 0, 4, 1, 1, 10, 14, 0.004565625533367469, ["test    ecx, ecx", "setnz   cl", "movzx   ecx, cl", "jmp     loc_6758"], ["test~ecx,ecx", "setnz~cl", "movzx~ecx,cl", "jmp~FOO"]], [1, 0, 113, 1, 0, 4, 0, 0, 10, 14, 0.004565625533367469, ["cmp     ebx, ecx", "setb    cl", "movzx   ecx, cl", "add     ecx, 2"], ["cmp~ebx,ecx", "setb~cl", "movzx~ecx,cl", "add~ecx,0"]], [0, 0, 97, 0, 0, 2, 0, 0, 20, 13, 0.00908858166922683, ["cmp     r8, r12", "jb      loc_7188"], ["cmp~r8,r12", "jb~FOO"]], [0, 0, 98, 0, 0, 4, 1, 1, 19, 14, 0.002773510838026967, ["test    ecx, ecx", "setnz   cl", "movzx   ecx, cl", "jmp     loc_6824"], ["test~ecx,ecx", "setnz~cl", "movzx~ecx,cl", "jmp~FOO"]], [1, 0, 81, 0, 0, 10, 1, 0, 11, 13, 0.004266939750810719, ["fstp    st(1)", "fnstcw  [rsp+0D8h+var_7A]", "movzx   eax, [rsp+0D8h+var_7A]", "or      ah, 0Ch", "mov     [rsp+0D8h+var_7C], ax", "fld     st", "fldcw   [rsp+0D8h+var_7C]", "fistp   [rsp+0D8h+var_88]", "fldcw   [rsp+0D8h+var_7A]", "mov     rax, [rsp+0D8h+var_88]"], ["fstp~<TAG>,<TAG>", "fnstcw~[rsp+0]", "movzx~eax,[rsp+0]", "or~ah,0", "mov~[rsp+0],ax", "fld~<TAG>,<TAG>", "fldcw~[rsp+0]", "fistp~<TAG>,[rsp+0]", "fldcw~[rsp+0]", "mov~rax,[rsp+0]"]], [0, 0, 83, 0, 0, 4, 0, 0, 10, 14, 0.008043181430278205, ["fld     cs:flt_12250", "fxch    st(1)", "fucomi  st, st(1)", "jnb     loc_6E80"], ["fld~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "jnb~FOO"]], [1, 0, 89, 0, 0, 5, 0, 1, 12, 11, 0.0018987881891107698, ["fstp    st(3)", "fstp    st", "fxch    st(1)", "mov     dword ptr [rsp+0D8h+exponent], 6", "jmp     loc_64EE"], ["fstp~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 93, 0, 0, 7, 0, 0, 11, 12, 0.0014507595152756445, ["fstp    st(2)", "fxch    st(1)", "fld     st(2)", "fmul    st, st(2)", "fxch    st(1)", "fucomi  st, st(1)", "jb      loc_701D"], ["fstp~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fld~<TAG>,<TAG>", "fmul~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "jb~FOO"]], [1, 0, 46, 1, 0, 6, 0, 0, 13, 8, 0.002581498549240485, ["mov     esi, edx", "add     edx, 8", "mov     rdi, [r15+rsi]", "cmp     edx, eax", "mov     [rcx+rsi], rdi", "jb      short loc_7222"], ["mov~esi,edx", "add~edx,0", "mov~rdi,<TAG>", "cmp~edx,eax", "mov~<TAG>,rdi", "jb~FOO"]], [1, 0, 46, 0, 0, 2, 2, 0, 12, 9, 0.0032428742106161462, ["and     eax, 0FFFFFFF8h", "xor     edx, edx"], ["and~eax,0", "xor~edx,edx"]], [0, 0, 55, 0, 0, 4, 1, 0, 10, 11, 0.006507083119986346, ["mov     [rsp+0D8h+exponent], rax", "test    rax, rax", "fild    [rsp+0D8h+exponent]", "jns     short loc_6C3A"], ["mov~[rsp+0],rax", "test~rax,rax", "fild~<TAG>,[rsp+0]", "jns~FOO"]], [2, 0, 56, 0, 0, 13, 2, 1, 9, 12, 0.0022401433691756276, ["fnstcw  [rsp+0D8h+var_7A]", "movzx   eax, [rsp+0D8h+var_7A]", "fsubr   st(1), st", "fxch    st(1)", "mov     rdx, 8000000000000000h", "or      ah, 0Ch", "mov     [rsp+0D8h+var_7C], ax", "fldcw   [rsp+0D8h+var_7C]", "fistp   [rsp+0D8h+var_88]", "fldcw   [rsp+0D8h+var_7A]", "mov     rax, [rsp+0D8h+var_88]", "xor     rax, rdx", "jmp     loc_6C26"], ["fnstcw~[rsp+0]", "movzx~eax,[rsp+0]", "fsubr~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "mov~rdx,0", "or~ah,0", "mov~[rsp+0],ax", "fldcw~[rsp+0]", "fistp~<TAG>,[rsp+0]", "fldcw~[rsp+0]", "mov~rax,[rsp+0]", "xor~rax,rdx", "jmp~FOO"]], [1, 0, 56, 0, 0, 10, 1, 0, 9, 12, 0.0022401433691756276, ["fstp    st(1)", "fnstcw  [rsp+0D8h+var_7A]", "movzx   eax, [rsp+0D8h+var_7A]", "or      ah, 0Ch", "mov     [rsp+0D8h+var_7C], ax", "fld     st", "fldcw   [rsp+0D8h+var_7C]", "fistp   [rsp+0D8h+var_88]", "fldcw   [rsp+0D8h+var_7A]", "mov     rax, [rsp+0D8h+var_88]"], ["fstp~<TAG>,<TAG>", "fnstcw~[rsp+0]", "movzx~eax,[rsp+0]", "or~ah,0", "mov~[rsp+0],ax", "fld~<TAG>,<TAG>", "fldcw~[rsp+0]", "fistp~<TAG>,[rsp+0]", "fldcw~[rsp+0]", "mov~rax,[rsp+0]"]], [1, 0, 17, 0, 0, 2, 0, 1, 17, -1, 0.0003626898788189111, ["mov     dword ptr [rsp+0D8h+exponent], 4", "jmp     loc_6AEF"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 23, 1, 0, 3, 0, 0, 16, -1, 0.024321556579621095, ["imul    power, r12", "cmp     rdi, power", "jbe     loc_70AB"], ["imul~power,r12", "cmp~rdi,power", "jbe~FOO"]], [0, 0, 34, 1, 1, 12, 0, 2, 13, -1, 0.003626898788189111, ["mov     rax, r15", "mov     ebp, r14d", "mov     r15, r12", "mov     opts, rcx", "mov     rsi, [rsp+0D8h+inexact_style]; src", "mov     rdx, r15; n", "sub     r14, r15", "mov     r12, rax", "mov     rdi, r14; dest", "mov     r13, r14", "call    _memcpy", "jmp     loc_6ADA"], ["mov~rax,r15", "mov~ebp,r14d", "mov~r15,r12", "mov~opts,rcx", "mov~rsi,[rsp+0]", "mov~rdx,r15", "sub~r14,r15", "mov~r12,rax", "mov~rdi,r14", "mov~r13,r14", "call~FOO", "jmp~FOO"]], [0, 0, 61, 1, 0, 3, 1, 1, 7, 8, 0.0003413551800648575, ["add     ecx, edi", "test    ecx, ecx", "jle     short loc_6920"], ["add~ecx,edi", "test~ecx,ecx", "jle~FOO"]], [0, 0, 125, 0, 0, 5, 1, 0, 3, 11, 0.016427718040621268, ["mov     rax, [rsp+0D8h+to_block_size]", "mov     qword ptr [rsp+0D8h+damt.value], rax", "test    rax, rax", "fild    qword ptr [rsp+0D8h+damt.value]", "jns     short loc_6441"], ["mov~rax,[rsp+0]", "mov~[word ptr [rsp+0],rax", "test~rax,rax", "fild~<TAG>,[word ptr [rsp+0]", "jns~FOO"]], [0, 0, 124, 0, 0, 1, 0, 0, 4, 11, 0.0, ["fadd    cs:flt_1224C"], ["fadd~<TAG>,<TAG>"]], [0, 0, 45, 0, 0, 1, 0, 1, 7, 8, 0.00048003072196620584, ["jmp     loc_6920"], ["jmp~FOO"]], [2, 0, 62, 2, 0, 9, 1, 1, 6, 9, 0.024556238265915686, ["mov     rax, amt", "movsxd  rounding, ecx", "and     eax, 1", "add     rax, rounding", "setnz   al", "movzx   eax, al", "add     edi, eax", "cmp     edi, 5", "jg      loc_690B"], ["mov~rax,amt", "movsxd~rounding,ecx", "and~eax,0", "add~rax,rounding", "setnz~al", "movzx~eax,al", "add~edi,eax", "cmp~edi,0", "jg~FOO"]], [0, 0, 53, 0, 0, 3, 1, 1, 11, 10, 0.008043181430278205, ["mov     r8d, dword ptr [rsp+0D8h+inexact_style]", "test    r8d, r8d", "jnz     short loc_6C78"], ["mov~r8d,[word ptr [rsp+0]", "test~r8d,r8d", "jnz~FOO"]], [0, 0, 54, 0, 0, 1, 0, 0, 11, 11, 0.0, ["fadd    cs:flt_1224C"], ["fadd~<TAG>,<TAG>"]], [1, 0, 60, 0, 0, 2, 0, 1, 6, 8, 0.013120839733742961, ["cmp     dword ptr [rsp+0D8h+inexact_style], 1", "jz      short loc_6A55"], ["cmp~[word ptr [rsp+0],0", "jz~FOO"]], [1, 0, 121, 0, 0, 3, 1, 1, 5, 9, 0.026156340672469705, ["test    bpl, 10h", "fmulp   st(1), st", "jz      loc_6A40"], ["test~bpl,0", "fmulp~<TAG>,<TAG>", "jz~FOO"]], [0, 0, 51, 0, 0, 3, 0, 0, 12, 10, 0.0021334698754053596, ["fxch    st(1)", "fucomip st, st(1)", "jp      short loc_6C50"], ["fxch~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "jp~FOO"]], [1, 0, 89, 0, 0, 4, 0, 1, 13, 11, 0.0009493940945553849, ["fstp    st(2)", "fxch    st(1)", "mov     dword ptr [rsp+0D8h+exponent], 7", "jmp     loc_64EE"], ["fstp~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 91, 0, 0, 8, 0, 0, 12, 12, 0.0007680491551459293, ["fstp    st(2)", "fxch    st(1)", "fxch    st(2)", "fmul    st, st(1)", "fxch    st(2)", "mov     dword ptr [rsp+0D8h+exponent], 8", "fucomi  st, st(2)", "jb      loc_703D"], ["fstp~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fmul~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "mov~[word ptr [rsp+0],0", "fucomi~<TAG>,<TAG>", "jb~FOO"]], [0, 0, 49, 0, 0, 1, 0, 1, 13, 9, 0.001429424816521591, ["jz      short loc_6C7A"], ["jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 12, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 2, 0, 0, 6, 1, 1, 11, -1, 0.009173920464243045, ["mov     rax, [rsp+0D8h+psuffix]", "mov     rdi, [rsp+0D8h+var_40]", "xor     rdi, fs:28h", "mov     byte ptr [rax], 0", "mov     rax, p_0", "jnz     loc_724D"], ["mov~rax,[rsp+0]", "mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "mov~<TAG>,0", "mov~rax,p_0", "jnz~FOO"]], [0, 0, 48, 0, 0, 2, 0, 1, 14, 10, 4.266939750810719e-05, ["fstp    st", "jmp     short loc_6C58"], ["fstp~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 123, 0, 0, 5, 1, 0, 4, 10, 0.0213773681515617, ["fdivp   st(1), st", "mov     rax, [rsp+0D8h+exponent]", "test    rax, rax", "fild    [rsp+0D8h+exponent]", "jns     short loc_6457"], ["fdivp~<TAG>,<TAG>", "mov~rax,[rsp+0]", "test~rax,rax", "fild~<TAG>,[rsp+0]", "jns~FOO"]], [0, 0, 122, 0, 0, 1, 0, 0, 5, 10, 0.0, ["fadd    cs:flt_1224C"], ["fadd~<TAG>,<TAG>"]], [0, 0, 48, 0, 0, 2, 0, 0, 13, 10, 0.0008960573476702509, ["fstp    st", "nop     word ptr [rax+rax+00h]"], ["fstp~<TAG>,<TAG>", "nop~[ord ptr [rax+0]"]], [1, 0, 95, 3, 0, 16, 2, 1, 21, 14, 0.001984126984126984, ["mov     r2, r8", "xor     edx, edx", "mov     esi, ecx", "div     r12", "sar     esi, 1", "mov     r8, rax", "lea     eax, [rdx+rdx*4]", "xor     edx, edx", "lea     eax, [r10+rax*2]", "div     ebx", "lea     edx, [rsi+rdx*2]", "mov     edi, eax", "mov     rsi, r8", "add     ecx, edx", "cmp     ebx, edx", "ja      loc_704E"], ["mov~r2,r8", "xor~edx,edx", "mov~esi,ecx", "div~,r12", "sar~esi,0", "mov~r8,rax", "lea~eax,<TAG>", "xor~edx,edx", "lea~eax,<TAG>", "div~,ebx", "lea~edx,<TAG>", "mov~edi,eax", "mov~rsi,r8", "add~ecx,edx", "cmp~ebx,edx", "ja~FOO"]], [0, 0, 93, 0, 0, 4, 1, 1, 22, 13, 0.001322751322751323, ["test    ecx, ecx", "setnz   cl", "movzx   ecx, cl", "jmp     loc_6864"], ["test~ecx,ecx", "setnz~cl", "movzx~ecx,cl", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 16, -1, 0.00012800819252432156, ["jmp     loc_6B64"], ["jmp~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 15, -1, 0.008939238777948456, ["test    eax, eax", "mov     rdx, [rsp+0D8h+psuffix]", "jnz     loc_6B58"], ["test~eax,eax", "mov~rdx,[rsp+0]", "jnz~FOO"]], [3, 0, 44, 1, 2, 17, 2, 3, 11, 7, 0.027692438982761566, ["fdivp   st(1), st", "sub     rsp, 10h", "lea     rcx, a0lf; \"%.0Lf\"", "mov     rbx, [rsp+0E8h+buf]", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "xor     eax, eax", "mov     rdi, rbx", "fstp    [rsp+0E8h+var_E8]", "call    ___sprintf_chk", "mov     rdi, rbx; s", "xor     ebx, ebx", "call    _strlen", "pop     r13", "mov     r15, rax", "pop     r14", "jmp     loc_6AB0"], ["fdivp~<TAG>,<TAG>", "sub~rsp,0", "lea~rcx,<TAG>", "mov~rbx,[rsp+0]", "mov~rdx,0", "mov~esi,0", "xor~eax,eax", "mov~rdi,rbx", "fstp~<TAG>,<TAG>", "call~FOO", "mov~rdi,rbx", "xor~ebx,ebx", "call~FOO", "pop~r13", "mov~r15,rax", "pop~r14", "jmp~FOO"]], [0, 0, 61, 0, 0, 3, 0, 0, 13, 8, 0.019691926949991466, ["fld     cs:tbyte_12260", "fucomip st, st(2)", "jbe     loc_6622"], ["fld~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "jbe~FOO"]], [1, 0, 63, 0, 0, 4, 0, 1, 12, 8, 0.002154804574159413, ["cmp     dword ptr [rsp+0D8h+inexact_style], 1", "fld     cs:flt_12254", "fmul    st(1), st", "jz      loc_6622"], ["cmp~[word ptr [rsp+0],0", "fld~<TAG>,<TAG>", "fmul~<TAG>,<TAG>", "jz~FOO"]], [0, 0, 45, 0, 0, 3, 0, 1, 21, 8, 0.003360215053763441, ["fadd    cs:flt_1224C", "fxch    st(1)", "jmp     loc_6622"], ["fadd~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 45, 0, 0, 1, 0, 0, 19, 8, 0.010080645161290322, ["fxch    st(1)"], ["fxch~<TAG>,<TAG>"]], [1, 0, 93, 1, 0, 4, 0, 0, 22, 13, 0.001322751322751323, ["cmp     ecx, ebx", "setnbe  cl", "movzx   ecx, cl", "add     ecx, 2"], ["cmp~ecx,ebx", "setnbe~cl", "movzx~ecx,cl", "add~ecx,0"]], [0, 0, 44, 0, 0, 5, 0, 1, 12, 7, 0.00046936337258917906, ["mov     edx, [decimal_point]", "mov     [p_0], edx", "mov     edx, [decimal_point+rax-4]", "mov     [p_0+rax-4], edx", "jmp     loc_6F5C"], ["mov~edx,<TAG>", "mov~<TAG>,edx", "mov~edx,[decimal_point+0]", "mov~[p_0+0],edx", "jmp~FOO"]], [1, 0, 48, 0, 0, 2, 1, 1, 11, 8, 0.006400409626216078, ["and     r13d, 4", "jnz     loc_7252"], ["and~r13d,0", "jnz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 13, -1, 0.0003626898788189111, ["mov     dword ptr [rsp+0D8h+exponent], 0", "jmp     loc_6AEF"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 31, 0, 0, 3, 0, 0, 12, -1, 0.05555555555555556, ["mov     rdi, [rsp+0D8h+to_block_size]", "cmp     rdi, 1", "jbe     loc_705B"], ["mov~rdi,[rsp+0]", "cmp~rdi,0", "jbe~FOO"]], [1, 0, 92, 0, 0, 1, 0, 0, 23, 12, 0.005888376856118792, ["mov     dword ptr [rsp+0D8h+exponent], 6"], ["mov~[word ptr [rsp+0],0"]], [1, 0, 47, 1, 0, 5, 1, 0, 14, 9, 0.002474825055470217, ["add     rax, 1", "mov     [rsp+0D8h+exponent], rax", "test    rax, rax", "fild    [rsp+0D8h+exponent]", "jns     short loc_6C7A"], ["add~rax,0", "mov~[rsp+0],rax", "test~rax,rax", "fild~<TAG>,[rsp+0]", "jns~FOO"]], [1, 0, 91, 0, 0, 2, 0, 1, 10, 11, 0.06216931216931217, ["cmp     rsi, 9", "ja      loc_7278"], ["cmp~rsi,0", "ja~FOO"]], [1, 0, 92, 0, 0, 2, 0, 1, 9, 12, 0.01395289298515105, ["mov     dword ptr [rsp+0D8h+exponent], 1", "jmp     loc_686C"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 92, 0, 0, 2, 0, 1, 12, 12, 0.007851169141491723, ["mov     dword ptr [rsp+0D8h+exponent], 2", "jmp     loc_686C"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 92, 0, 0, 2, 0, 1, 15, 12, 0.007851169141491723, ["mov     dword ptr [rsp+0D8h+exponent], 3", "jmp     loc_686C"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 92, 0, 0, 2, 0, 1, 18, 12, 0.007851169141491723, ["mov     dword ptr [rsp+0D8h+exponent], 4", "jmp     loc_686C"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 92, 0, 0, 2, 0, 1, 21, 12, 0.007851169141491723, ["mov     dword ptr [rsp+0D8h+exponent], 5", "jmp     loc_686C"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 102, 0, 0, 2, 0, 0, 17, 13, 0.011435398532172727, ["cmp     r8, r12", "jb      loc_717B"], ["cmp~r8,r12", "jb~FOO"]], [0, 0, 103, 0, 0, 7, 0, 0, 6, 12, 0.015104966717869945, ["mov     dword ptr [rsp+0D8h+exponent], r14d", "fild    dword ptr [rsp+0D8h+exponent]", "fld     st", "fmul    st, st(1)", "fxch    st(2)", "fucomi  st, st(2)", "jb      loc_6F80"], ["mov~[word ptr [rsp+0],r14d", "fild~<TAG>,[word ptr [rsp+0]", "fld~<TAG>,<TAG>", "fmul~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "jb~FOO"]], [0, 0, 81, 0, 0, 2, 1, 1, 14, 12, 0.013792882744495649, ["test    edi, edi", "jnz     loc_68A5"], ["test~edi,edi", "jnz~FOO"]], [0, 0, 86, 0, 0, 2, 1, 1, 13, 13, 0.022998805256869773, ["test    al, al", "jz      loc_7075"], ["test~al,al", "jz~FOO"]], [0, 0, 46, 0, 0, 1, 0, 0, 12, 9, 0.006187062638675542, ["fstp    st(1)"], ["fstp~<TAG>,<TAG>"]], [0, 0, 45, 0, 0, 1, 0, 1, 13, 8, 0.012480798771121352, ["jmp     loc_6A55"], ["jmp~FOO"]], [0, 0, 46, 0, 0, 2, 0, 1, 15, 9, 0.0, ["fadd    cs:flt_1224C", "jmp     short loc_6C7A"], ["fadd~<TAG>,<TAG>", "jmp~FOO"]], [1, 0, 89, 0, 0, 2, 0, 1, 11, 15, 0.02011862092507254, ["cmp     dword ptr [rsp+0D8h+inexact_style], 1", "jz      loc_70D2"], ["cmp~[word ptr [rsp+0],0", "jz~FOO"]], [0, 0, 66, 0, 0, 2, 0, 1, 11, 10, 0.042242703533026116, ["mov     r14, [rsp+0D8h+psuffix]", "jmp     loc_68F0"], ["mov~r14,[rsp+0]", "jmp~FOO"]], [1, 0, 79, 0, 0, 2, 1, 1, 15, 11, 0.010987369858337601, ["test    bpl, 8", "jnz     loc_7148"], ["test~bpl,0", "jnz~FOO"]], [0, 0, 80, 0, 0, 2, 1, 1, 16, 12, 0.0003413551800648575, ["xor     ecx, ecx", "jmp     short loc_707D"], ["xor~ecx,ecx", "jmp~FOO"]], [0, 0, 101, 0, 0, 5, 0, 0, 7, 12, 0.0033282130056323605, ["fld     st(1)", "fmul    st, st(3)", "fxch    st(1)", "fucomi  st, st(1)", "jb      loc_6F98"], ["fld~<TAG>,<TAG>", "fmul~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "jb~FOO"]], [0, 0, 13, 0, 0, 3, 1, 1, 14, -1, 0.043650793650793655, ["mov     ebx, dword ptr [rsp+0D8h+exponent]", "test    ebx, ebx", "jz      loc_7282"], ["mov~ebx,[word ptr [rsp+0]", "test~ebx,ebx", "jz~FOO"]], [0, 0, 85, 0, 0, 3, 0, 1, 9, 11, 0.020310633213859022, ["fld     cs:tbyte_12260", "fucomip st, st(1)", "ja      loc_6C80"], ["fld~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "ja~FOO"]], [1, 0, 88, 0, 0, 9, 2, 1, 8, 10, 0.039426523297491044, ["mov     ecx, [rsp+0D8h+var_80]", "xor     eax, eax", "lea     base, [r13+1]", "fdivrp  st(1), st", "test    ecx, ecx", "setz    al", "cmp     dword ptr [rsp+0D8h+inexact_style], 1", "lea     r13, [rbx+rax+1]", "jz      loc_6D28"], ["mov~ecx,[rsp+0]", "xor~eax,eax", "lea~base,[r13+0]", "fdivrp~<TAG>,<TAG>", "test~ecx,ecx", "setz~al", "cmp~[word ptr [rsp+0],0", "lea~r13,[rbx+0]", "jz~FOO"]], [1, 0, 77, 0, 0, 2, 0, 1, 16, 13, 0.000682710360129715, ["mov     edi, 30h ; '0'", "jmp     loc_68A8"], ["mov~edi,0", "jmp~FOO"]], [0, 0, 87, 0, 0, 6, 3, 0, 12, 14, 0.010112647209421403, ["mov     ebx, dword ptr [rsp+0D8h+inexact_style]", "test    ebx, ebx", "setz    al", "test    ecx, ecx", "setnle  dl", "and     eax, edx"], ["mov~ebx,[word ptr [rsp+0]", "test~ebx,ebx", "setz~al", "test~ecx,ecx", "setnle~dl", "and~eax,edx"]], [0, 0, 103, 0, 0, 4, 1, 1, 16, 14, 0.0037975763782215396, ["test    ecx, ecx", "setnz   cl", "movzx   ecx, cl", "jmp     loc_67E0"], ["test~ecx,ecx", "setnz~cl", "movzx~ecx,cl", "jmp~FOO"]], [1, 0, 105, 3, 0, 17, 2, 0, 15, 15, 0.006379074927462025, ["mov     r2, r8", "xor     edx, edx", "div     r12", "mov     r8, rax", "lea     eax, [rdx+rdx*4]", "xor     edx, edx", "mov     rsi, r8", "lea     eax, [r10+rax*2]", "div     ebx", "mov     r10d, eax", "mov     eax, ecx", "sar     eax, 1", "mov     edi, r10d", "lea     eax, [rax+rdx*2]", "add     ecx, eax", "cmp     eax, ebx", "jb      loc_7010"], ["mov~r2,r8", "xor~edx,edx", "div~,r12", "mov~r8,rax", "lea~eax,<TAG>", "xor~edx,edx", "mov~rsi,r8", "lea~eax,<TAG>", "div~,ebx", "mov~r10d,eax", "mov~eax,ecx", "sar~eax,0", "mov~edi,r10d", "lea~eax,<TAG>", "add~ecx,eax", "cmp~eax,ebx", "jb~FOO"]], [2, 0, 87, 1, 0, 6, 1, 1, 12, 14, 0.010112647209421403, ["mov     eax, edi", "and     eax, 1", "add     eax, ecx", "cmp     eax, 2", "setnle  al", "jmp     loc_6891"], ["mov~eax,edi", "and~eax,0", "add~eax,ecx", "cmp~eax,0", "setnle~al", "jmp~FOO"]], [4, 0, 44, 1, 2, 17, 2, 3, 7, 7, 0.0240442054958184, ["sub     rsp, 10h", "lea     rcx, a0lf; \"%.0Lf\"", "mov     esi, 1", "mov     base, [rsp+0E8h+buf]", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "xor     eax, eax", "fstp    [rsp+0E8h+var_E8]", "mov     rdi, rbx", "call    ___sprintf_chk", "mov     rdi, rbx; s", "xor     ebx, ebx", "call    _strlen", "pop     rsi", "pop     rdi", "mov     decimal_point, rax", "mov     dword ptr [rsp+0D8h+exponent], 0FFFFFFFFh", "jmp     short loc_6AB0"], ["sub~rsp,0", "lea~rcx,<TAG>", "mov~esi,0", "mov~base,[rsp+0]", "mov~rdx,0", "xor~eax,eax", "fstp~<TAG>,<TAG>", "mov~rdi,rbx", "call~FOO", "mov~rdi,rbx", "xor~ebx,ebx", "call~FOO", "pop~rsi", "pop~rdi", "mov~decimal_point,rax", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 59, 0, 0, 3, 0, 1, 7, 8, 0.0038829151732377542, ["fld     cs:tbyte_12260", "fucomip st, st(1)", "ja      loc_6BF0"], ["fld~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "ja~FOO"]], [0, 0, 99, 0, 0, 8, 0, 0, 8, 12, 0.002986857825567503, ["fstp    st(3)", "fxch    st(1)", "fxch    st(2)", "fld     st(2)", "fmul    st, st(2)", "fxch    st(1)", "fucomi  st, st(1)", "jb      loc_6FB0"], ["fstp~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fld~<TAG>,<TAG>", "fmul~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "jb~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 15, -1, 0.0003626898788189111, ["mov     dword ptr [rsp+0D8h+exponent], 2", "jmp     loc_6AEF"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 27, 1, 0, 4, 0, 0, 14, -1, 0.04010923365762076, ["mov     rax, power", "imul    rax, power", "cmp     power, rdi", "jnb     loc_7091"], ["mov~rax,power", "imul~rax,power", "cmp~power,rdi", "jnb~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 14, 0, 0.0007253797576378222, ["mov     r12, r15", "mov     r13, rax", "mov     ebp, r14d", "jmp     loc_6ADA"], ["mov~r12,r15", "mov~r13,rax", "mov~ebp,r14d", "jmp~FOO"]], [0, 0, 41, 2, 1, 10, 1, 2, 13, 1, 0.0077658303464755085, ["mov     rax, [rsp+0D8h+inexact_style]", "sub     r12, rbx", "sub     rcx, rbx", "mov     rdi, rcx; dest", "mov     rdx, rbx; n", "lea     rsi, [rax+r12]; src", "call    _memcpy", "test    r12, r12", "mov     rcx, rax", "jz      loc_7294"], ["mov~rax,[rsp+0]", "sub~r12,rbx", "sub~rcx,rbx", "mov~rdi,rcx", "mov~rdx,rbx", "lea~rsi,<TAG>", "call~FOO", "test~r12,r12", "mov~rcx,rax", "jz~FOO"]], [2, 0, 84, 1, 0, 3, 0, 1, 14, 13, 0.00912058371735791, ["add     edi, 1", "cmp     edi, 0Ah", "jz      loc_70E4"], ["add~edi,0", "cmp~edi,0", "jz~FOO"]], [0, 0, 44, 0, 0, 2, 0, 1, 11, 7, 0.02487625874722649, ["fstp    st", "jmp     short loc_6AB0"], ["fstp~<TAG>,<TAG>", "jmp~FOO"]], [1, 0, 67, 0, 0, 2, 1, 1, 10, 8, 0.02920720259429937, ["test    bpl, 8", "jz      loc_6AA0"], ["test~bpl,0", "jz~FOO"]], [1, 0, 77, 1, 0, 1, 0, 0, 15, 13, 0.010048643113159242, ["add     edi, 30h ; '0'"], ["add~edi,0"]], [1, 0, 17, 0, 0, 2, 0, 1, 16, -1, 0.0003626898788189111, ["mov     dword ptr [rsp+0D8h+exponent], 3", "jmp     loc_6AEF"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 25, 1, 0, 3, 0, 0, 15, -1, 0.03225806451612903, ["imul    power, r12", "cmp     rdi, power", "jbe     loc_709E"], ["imul~power,r12", "cmp~rdi,power", "jbe~FOO"]], [0, 0, 97, 0, 0, 7, 0, 0, 9, 12, 0.002560163850486431, ["fstp    st(2)", "fxch    st(1)", "fld     st(2)", "fmul    st, st(2)", "fxch    st(1)", "fucomi  st, st(1)", "jb      loc_6FD8"], ["fstp~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fld~<TAG>,<TAG>", "fmul~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "jb~FOO"]], [0, 0, 126, 4, 0, 13, 2, 0, 3, 12, 0.004181600955794504, ["mov     divisor, [rsp+0D8h+exponent]", "xor     edx, edx", "div     divisor", "mov     rcx, rax", "lea     rax, [rdx+rdx*4]", "xor     edx, edx", "mov     rsi, rcx", "add     rax, rax", "div     divisor", "add     rdx, rdx", "mov     edi, eax", "cmp     divisor, r2", "jbe     loc_6EC0"], ["mov~divisor,[rsp+0]", "xor~edx,edx", "div~,divisor", "mov~rcx,rax", "lea~rax,<TAG>", "xor~edx,edx", "mov~rsi,rcx", "add~rax,rax", "div~,divisor", "add~rdx,rdx", "mov~edi,eax", "cmp~divisor,r2", "jbe~FOO"]], [0, 0, 44, 0, 0, 2, 0, 0, 12, 7, 0.0009387267451783581, ["fstp    st", "nop     word ptr [rax+rax+00h]"], ["fstp~<TAG>,<TAG>", "nop~[ord ptr [rax+0]"]], [1, 0, 65, 0, 0, 3, 0, 1, 11, 8, 0.0037549069807134325, ["mov     rax, [rsp+0D8h+buf]", "cmp     byte ptr [rax+r15-1], 30h ; '0'", "jnz     loc_6AA8"], ["mov~rax,[rsp+0]", "cmp~[yte ptr [rax+0],0", "jnz~FOO"]], [0, 0, 58, 0, 0, 4, 0, 0, 8, 13, 0.0038829151732377542, ["fld     cs:flt_12250", "fxch    st(1)", "fucomi  st, st(1)", "jnb     loc_6E48"], ["fld~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "jnb~FOO"]], [2, 0, 81, 0, 0, 13, 2, 1, 11, 13, 0.004266939750810719, ["fnstcw  [rsp+0D8h+var_7A]", "movzx   eax, [rsp+0D8h+var_7A]", "fsubr   st(1), st", "fxch    st(1)", "mov     rdx, 8000000000000000h", "or      ah, 0Ch", "mov     [rsp+0D8h+var_7C], ax", "fldcw   [rsp+0D8h+var_7C]", "fistp   [rsp+0D8h+var_88]", "fldcw   [rsp+0D8h+var_7A]", "mov     rax, [rsp+0D8h+var_88]", "xor     rax, rdx", "jmp     loc_6CB6"], ["fnstcw~[rsp+0]", "movzx~eax,[rsp+0]", "fsubr~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "mov~rdx,0", "or~ah,0", "mov~[rsp+0],ax", "fldcw~[rsp+0]", "fistp~<TAG>,[rsp+0]", "fldcw~[rsp+0]", "mov~rax,[rsp+0]", "xor~rax,rdx", "jmp~FOO"]], [0, 0, 124, 0, 0, 3, 2, 0, 4, 11, 0.0033495477043864142, ["xor     ecx, ecx", "test    r2, r2", "setnz   cl"], ["xor~ecx,ecx", "test~r2,r2", "setnz~cl"]], [1, 0, 10, 0, 0, 4, 0, 1, 15, -1, 0.026241679467485922, ["mov     rdi, [rsp+0D8h+psuffix]", "cmp     ebx, 1", "lea     rdx, [rdi+1]", "jnz     short loc_6B2F"], ["mov~rdi,[rsp+0]", "cmp~ebx,0", "lea~rdx,[rdi+0]", "jnz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 18, -1, 0.0003626898788189111, ["mov     dword ptr [rsp+0D8h+exponent], 5", "jmp     loc_6AEF"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 21, 1, 0, 3, 0, 0, 17, -1, 0.016299709848096946, ["imul    power, r12", "cmp     rdi, power", "jbe     loc_70B8"], ["imul~power,r12", "cmp~rdi,power", "jbe~FOO"]], [0, 0, 80, 0, 0, 4, 1, 0, 12, 12, 0.011307390339648405, ["mov     qword ptr [rsp+0D8h+damt.value], rax", "test    rax, rax", "fild    qword ptr [rsp+0D8h+damt.value]", "jns     short loc_6CCA"], ["mov~[word ptr [rsp+0],rax", "test~rax,rax", "fild~<TAG>,[word ptr [rsp+0]", "jns~FOO"]], [0, 0, 43, 2, 1, 8, 0, 1, 8, 6, 0.07940774876258748, ["mov     r13, [rsp+0D8h+psuffix]", "mov     rdx, buflen; n", "mov     rsi, [rsp+0D8h+buf]; src", "sub     r13, buflen", "sub     buflen, nonintegerlen", "lea     r14, [p_0+r15+0]", "mov     rdi, p_0; dest", "call    _memmove"], ["mov~r13,[rsp+0]", "mov~rdx,buflen", "mov~rsi,[rsp+0]", "sub~r13,buflen", "sub~buflen,nonintegerlen", "lea~r14,[p_0+0]", "mov~rdi,p_0", "call~FOO"]], [0, 0, 79, 0, 0, 1, 0, 0, 13, 12, 0.0, ["fadd    cs:flt_1224C"], ["fadd~<TAG>,<TAG>"]], [1, 0, 76, 1, 0, 8, 0, 0, 16, 12, 0.012907492746202424, ["mov     rax, [rsp+0D8h+buf]", "lea     r8, [rax+286h]", "mov     [rax+286h], dil", "mov     eax, r13d", "sub     p_0, r13", "cmp     r13d, 8", "mov     r14, r8", "jnb     loc_70F6"], ["mov~rax,[rsp+0]", "lea~r8,[rax+0]", "mov~[rax+0],dil", "mov~eax,r13d", "sub~p_0,r13", "cmp~r13d,0", "mov~r14,r8", "jnb~FOO"]], [1, 0, 124, 1, 0, 4, 0, 1, 4, 11, 0.0033495477043864142, ["setb    cl", "movzx   ecx, cl", "add     ecx, 2", "jmp     use_integer_arithmetic"], ["setb~cl", "movzx~ecx,cl", "add~ecx,0", "jmp~FOO"]], [2, 0, 123, 0, 0, 5, 1, 1, 4, 10, 0.021270694657791432, ["mov     r11d, ebp", "mov     r14, [rsp+0D8h+psuffix]", "mov     dword ptr [rsp+0D8h+exponent], 0FFFFFFFFh", "and     r11d, 10h", "jz      loc_68F0"], ["mov~r11d,ebp", "mov~r14,[rsp+0]", "mov~[word ptr [rsp+0],0", "and~r11d,0", "jz~FOO"]], [0, 0, 124, 0, 0, 3, 2, 1, 3, 11, 0.00682710360129715, ["xor     ecx, ecx", "xor     edi, edi", "jmp     use_integer_arithmetic"], ["xor~ecx,ecx", "xor~edi,edi", "jmp~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 19, -1, 0.00018134493940945556, ["mov     dword ptr [rsp+0D8h+exponent], 6", "jmp     loc_6AEF"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 78, 0, 0, 3, 1, 1, 13, 11, 0.013270182625021335, ["mov     edx, dword ptr [rsp+0D8h+inexact_style]", "test    edx, edx", "jnz     loc_6528"], ["mov~edx,[word ptr [rsp+0]", "test~edx,edx", "jnz~FOO"]], [0, 0, 122, 0, 0, 2, 0, 0, 5, 11, 0.011947431302270013, ["cmp     amt, r12", "jb      loc_6ED0"], ["cmp~amt,r12", "jb~FOO"]], [1, 0, 66, 0, 0, 2, 0, 1, 6, 10, 0.0014080901177675371, ["mov     dword ptr [rsp+0D8h+exponent], 0", "jmp     loc_68F0"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [0, 0, 69, 0, 0, 2, 1, 1, 18, 11, 0.0030188598736985836, ["test    eax, eax", "jz      short loc_68EB"], ["test~eax,eax", "jz~FOO"]], [0, 0, 74, 0, 0, 1, 0, 1, 15, 10, 0.002261478067929681, ["jz      loc_6530"], ["jz~FOO"]], [0, 0, 76, 0, 0, 3, 0, 0, 14, 11, 0.004480286738351255, ["fxch    st(1)", "fucomi  st, st(1)", "jp      short loc_6CE6"], ["fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "jp~FOO"]], [0, 1, 33, 0, 0, 2, 1, 1, 10, -1, 0.1295442908346134, ["test    bpl, 80h", "jz      loc_6B64"], ["test~bpl,<STR>", "jz~FOO"]], [1, 0, 42, 0, 0, 2, 1, 1, 9, 5, 0.06586021505376344, ["test    bpl, 4", "jz      loc_6ADA"], ["test~bpl,0", "jz~FOO"]], [1, 0, 42, 0, 0, 2, 1, 1, 9, 5, 0.09005376344086022, ["test    bpl, 4", "jnz     loc_6961"], ["test~bpl,0", "jnz~FOO"]], [0, 0, 73, 0, 0, 2, 0, 1, 16, 12, 6.400409626216078e-05, ["fstp    st(1)", "jmp     short loc_6CF0"], ["fstp~<TAG>,<TAG>", "jmp~FOO"]], [1, 0, 68, 0, 0, 4, 1, 1, 19, 11, 0.0011734084314729476, ["movzx   edx, byte ptr [decimal_point]", "test    al, 2", "mov     [p_0], dl", "jnz     loc_7267"], ["movzx~edx,<TAG>", "test~al,0", "mov~<TAG>,dl", "jnz~FOO"]], [0, 0, 73, 0, 0, 2, 0, 0, 15, 12, 0.002304147465437788, ["fstp    st(1)", "nop     dword ptr [rax+rax+00000000h]"], ["fstp~<TAG>,<TAG>", "nop~[word ptr [rax+0]"]], [1, 0, 32, 0, 0, 2, 0, 1, 11, -1, 0.11446065881549754, ["cmp     dword ptr [rsp+0D8h+exponent], 0FFFFFFFFh", "jz      loc_6DA8"], ["cmp~[word ptr [rsp+0],0", "jz~FOO"]], [0, 0, 89, 0, 0, 1, 0, 0, 13, 11, 0.0009493940945553849, ["fstp    st(1)"], ["fstp~<TAG>,<TAG>"]], [0, 0, 66, 0, 0, 3, 2, 0, 17, 10, 0.021121351766513058, ["xor     ecx, ecx", "xor     edi, edi", "nop"], ["xor~ecx,ecx", "xor~edi,edi", "nop"]], [3, 0, 70, 3, 0, 15, 2, 0, 17, 11, 0.007744495647721454, ["mov     rax, [decimal_point]", "mov     rdi, decimal_point", "mov     [p_0], rax", "mov     eax, r13d", "mov     rdx, [decimal_point+rax-8]", "mov     [p_0+rax-8], rdx", "lea     rdx, [p_0+8]", "mov     rax, p_0", "and     rdx, 0FFFFFFFFFFFFFFF8h", "sub     rax, rdx", "sub     rdi, rax", "add     eax, r13d", "and     eax, 0FFFFFFF8h", "cmp     eax, 8", "jb      loc_68EB"], ["mov~rax,<TAG>", "mov~rdi,decimal_point", "mov~<TAG>,rax", "mov~eax,r13d", "mov~rdx,[decimal_point+0]", "mov~[p_0+0],rdx", "lea~rdx,[p_0+0]", "mov~rax,p_0", "and~rdx,0", "sub~rax,rdx", "sub~rdi,rax", "add~eax,r13d", "and~eax,0", "cmp~eax,0", "jb~FOO"]], [0, 0, 67, 0, 0, 1, 0, 1, 20, 11, 0.002858849633043182, ["jmp     loc_68EB"], ["jmp~FOO"]], [0, 0, 67, 0, 0, 2, 0, 1, 16, 11, 0.0038189110769755934, ["mov     r14, [rsp+0D8h+psuffix]", "jmp     loc_68EB"], ["mov~r14,[rsp+0]", "jmp~FOO"]], [0, 0, 67, 0, 0, 3, 0, 1, 20, 11, 0.0, ["movzx   edx, word ptr [decimal_point+rax-2]", "mov     [p_0+rax-2], dx", "jmp     loc_68EB"], ["movzx~edx,[ord ptr [decimal_point+0]", "mov~[p_0+0],dx", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 17, -1, 0.00020267963816350914, ["mov     [rsp+0D8h+psuffix], psuffix_0", "jmp     loc_6B64"], ["mov~[rsp+0],psuffix_0", "jmp~FOO"]], [0, 0, 7, 0, 0, 6, 1, 1, 16, -1, 0.013334186721283496, ["movsxd  r14, dword ptr [rsp+0D8h+exponent]", "lea     rcx, power_letter", "test    eax, eax", "movzx   ecx, byte ptr [rcx+r14]", "mov     [rdi], cl", "jz      loc_6EEB"], ["movsxd~r14,[word ptr [rsp+0]", "lea~rcx,<TAG>", "test~eax,eax", "movzx~ecx,<TAG>", "mov~<TAG>,cl", "jz~FOO"]], [1, 0, 5, 0, 0, 3, 1, 1, 17, -1, 8.533879501621438e-05, ["test    eax, eax", "mov     byte ptr [rdi], 6Bh ; 'k'", "jnz     loc_6B58"], ["test~eax,eax", "mov~<TAG>,0", "jnz~FOO"]], [2, 0, 82, 1, 0, 3, 0, 1, 15, 12, 0.004416282642089094, ["add     rsi, 1", "cmp     amt, 0Ah", "jz      loc_71E0"], ["add~rsi,0", "cmp~amt,0", "jz~FOO"]], [0, 0, 66, 0, 0, 3, 1, 1, 16, 10, 0.009856630824372761, ["mov     r14, [rsp+0D8h+psuffix]", "xor     edi, edi", "jmp     loc_68F0"], ["mov~r14,[rsp+0]", "xor~edi,edi", "jmp~FOO"]], [1, 0, 43, 0, 0, 3, 0, 1, 10, 6, 0.012438129373613245, ["lea     r13, [integerlim-1]", "mov     byte ptr [integerlim-1], 31h ; '1'", "jmp     do_grouping"], ["lea~r13,[integerlim-1]+0]", "mov~[yte ptr [integerlim-1]+0],0", "jmp~FOO"]], [1, 0, 16, 0, 0, 5, 2, 1, 12, -1, 0.05677163338453661, ["mov     ebx, dword ptr [rsp+0D8h+exponent]", "mov     eax, ebp", "and     eax, 100h", "or      ebx, eax", "jz      short loc_6B64"], ["mov~ebx,[word ptr [rsp+0]", "mov~eax,ebp", "and~eax,0", "or~ebx,eax", "jz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 14, -1, 0.0003626898788189111, ["mov     dword ptr [rsp+0D8h+exponent], 1", "jmp     loc_6AEF"], ["mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 72, 1, 0, 5, 1, 0, 16, 11, 0.004650964328383684, ["add     rax, 1", "mov     qword ptr [rsp+0D8h+damt.value], rax", "test    rax, rax", "fild    qword ptr [rsp+0D8h+damt.value]", "jns     loc_652C"], ["add~rax,0", "mov~[word ptr [rsp+0],rax", "test~rax,rax", "fild~<TAG>,[word ptr [rsp+0]", "jns~FOO"]], [1, 0, 15, 0, 0, 2, 1, 1, 13, -1, 0.05171530977982591, ["and     ebp, 40h", "jnz     loc_6BD0"], ["and~ebp,0", "jnz~FOO"]], [1, 0, 120, 3, 0, 17, 2, 1, 6, 15, 0.012672811059907835, ["mov     rax, amt", "xor     edx, edx", "div     r12", "mov     r8, rax", "lea     eax, [rdx+rdx*4]", "xor     edx, edx", "mov     amt, r8", "lea     eax, [rdi+rax*2]", "div     ebx", "mov     r10d, eax", "mov     eax, ecx", "sar     eax, 1", "mov     edi, r10d", "lea     eax, [rax+rdx*2]", "add     ecx, eax", "cmp     ebx, eax", "ja      loc_6F40"], ["mov~rax,amt", "xor~edx,edx", "div~,r12", "mov~r8,rax", "lea~eax,<TAG>", "xor~edx,edx", "mov~amt,r8", "lea~eax,<TAG>", "div~,ebx", "mov~r10d,eax", "mov~eax,ecx", "sar~eax,0", "mov~edi,r10d", "lea~eax,<TAG>", "add~ecx,eax", "cmp~ebx,eax", "ja~FOO"]], [1, 0, 89, 0, 0, 4, 0, 1, 7, 11, 0.013419525516299711, ["fstp    st(2)", "fxch    st(1)", "mov     dword ptr [rsp+0D8h+exponent], 1", "jmp     loc_64EE"], ["fstp~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 89, 0, 0, 4, 0, 1, 8, 11, 0.0018987881891107698, ["fstp    st(2)", "fstp    st", "mov     dword ptr [rsp+0D8h+exponent], 2", "jmp     loc_64EE"], ["fstp~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 89, 0, 0, 5, 0, 1, 9, 11, 0.0018987881891107698, ["fstp    st(3)", "fstp    st", "fxch    st(1)", "mov     dword ptr [rsp+0D8h+exponent], 3", "jmp     loc_64EE"], ["fstp~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [1, 0, 89, 0, 0, 5, 0, 1, 10, 11, 0.0018987881891107698, ["fstp    st(3)", "fstp    st", "fxch    st(1)", "mov     dword ptr [rsp+0D8h+exponent], 4", "jmp     loc_64EE"], ["fstp~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "mov~[word ptr [rsp+0],0", "jmp~FOO"]], [0, 1, 14, 0, 0, 5, 0, 1, 14, -1, 0.0, ["mov     rdi, [rsp+0D8h+buf]", "lea     rbx, [rdi+288h]", "mov     byte ptr [rdi+287h], 20h ; ' '", "mov     [rsp+0D8h+psuffix], rbx", "jmp     loc_6B07"], ["mov~rdi,[rsp+0]", "lea~rbx,[rdi+0]", "mov~[yte ptr [rdi+0],<STR>", "mov~[rsp+0],rbx", "jmp~FOO"]], [0, 0, 70, 0, 0, 3, 0, 1, 17, 10, 0.0022401433691756276, ["fadd    cs:flt_1224C", "fxch    st(1)", "jmp     loc_6530"], ["fadd~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "jmp~FOO"]], [1, 0, 118, 1, 0, 4, 0, 0, 7, 14, 0.00736047107014849, ["cmp     ebx, ecx", "setb    cl", "movzx   ecx, cl", "add     ecx, 2"], ["cmp~ebx,ecx", "setb~cl", "movzx~ecx,cl", "add~ecx,0"]], [1, 0, 60, 1, 0, 3, 1, 1, 7, 8, 0.023094811401263016, ["add     amt, 1", "test    r11d, r11d", "jz      short loc_6920"], ["add~amt,0", "test~r11d,r11d", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 12, -1, 0.0, ["add     rsp, 0A8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 59, 0, 0, 2, 0, 1, 8, 8, 0.021398702850315754, ["cmp     amt, r12", "jz      loc_6F4D"], ["cmp~amt,r12", "jz~FOO"]], [0, 0, 45, 0, 0, 1, 0, 0, 9, 8, 6.400409626216078e-05, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [0, 0, 70, 0, 0, 2, 0, 1, 10, 10, 0.012843488649940263, ["fld     st", "jmp     short loc_6530"], ["fld~<TAG>,<TAG>", "jmp~FOO"]], [1, 0, 4, 0, 0, 3, 0, 1, 18, -1, 0.0, ["lea     psuffix_0, [rdi+2]", "mov     byte ptr [rdi+1], 69h ; 'i'", "jmp     loc_6B58"], ["lea~psuffix_0,[rdi+0]", "mov~[yte ptr [rdi+0],0", "jmp~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 17, -1, 0.004469619388974228, ["mov     r8d, [rsp+0D8h+var_80]", "test    r8d, r8d", "jnz     loc_6D18"], ["mov~r8d,[rsp+0]", "test~r8d,r8d", "jnz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 16, -1, 0.004405615292712067, ["mov     r9d, [rsp+0D8h+var_80]", "test    r9d, r9d", "jz      loc_6EE0"], ["mov~r9d,[rsp+0]", "test~r9d,r9d", "jz~FOO"]], [0, 0, 70, 0, 0, 2, 0, 1, 14, 10, 0.00896057347670251, ["fxch    st(1)", "jmp     short loc_6530"], ["fxch~<TAG>,<TAG>", "jmp~FOO"]], [1, 0, 44, 0, 0, 3, 0, 0, 7, 7, 0.06726830517153098, ["mov     r13, integerlim", "mov     rcx, 0CCCCCCCCCCCCCCCDh", "nop     dword ptr [rax]"], ["mov~r13,integerlim", "mov~rcx,0", "nop~<TAG>"]], [0, 0, 70, 0, 0, 2, 0, 0, 17, 10, 0.0022401433691756276, ["fxch    st(1)", "xchg    ax, ax"], ["fxch~<TAG>,<TAG>", "xchg~ax,ax"]], [1, 0, 69, 0, 0, 2, 2, 0, 18, 13, 0.002304147465437788, ["and     eax, 0FFFFFFF8h", "xor     ecx, ecx"], ["and~eax,0", "xor~ecx,ecx"]], [1, 0, 58, 0, 0, 13, 1, 1, 15, 12, 0.007829834442737669, ["fstp    st(2)", "fxch    st(1)", "fnstcw  [rsp+0D8h+var_7A]", "movzx   eax, [rsp+0D8h+var_7A]", "or      ah, 0Ch", "mov     [rsp+0D8h+var_7C], ax", "fld     st", "fldcw   [rsp+0D8h+var_7C]", "fistp   [rsp+0D8h+var_88]", "fldcw   [rsp+0D8h+var_7A]", "fxch    st(1)", "mov     rax, [rsp+0D8h+var_88]", "jmp     loc_65D0"], ["fstp~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fnstcw~[rsp+0]", "movzx~eax,[rsp+0]", "or~ah,0", "mov~[rsp+0],ax", "fld~<TAG>,<TAG>", "fldcw~[rsp+0]", "fistp~<TAG>,[rsp+0]", "fldcw~[rsp+0]", "fxch~<TAG>,<TAG>", "mov~rax,[rsp+0]", "jmp~FOO"]], [0, 0, 60, 0, 0, 4, 0, 0, 14, 13, 0.016641065028161803, ["fld     cs:flt_12250", "fxch    st(2)", "fucomi  st, st(2)", "jb      loc_6F08"], ["fld~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "jb~FOO"]], [0, 0, 44, 0, 0, 1, 0, 1, 14, 7, 0.0018774534903567162, ["jmp     loc_6F5C"], ["jmp~FOO"]], [1, 0, 69, 1, 0, 6, 0, 0, 19, 12, 0.0026028332479945382, ["mov     r8d, ecx", "add     ecx, 8", "mov     r9, [rdi+r8]", "cmp     ecx, eax", "mov     [rdx+r8], r9", "jb      short loc_7131"], ["mov~r8d,ecx", "add~ecx,0", "mov~r9,<TAG>", "cmp~ecx,eax", "mov~<TAG>,r9", "jb~FOO"]], [1, 0, 115, 3, 0, 17, 2, 1, 9, 15, 0.00736047107014849, ["mov     r2, r8", "xor     edx, edx", "div     r12", "mov     r8, rax", "lea     eax, [rdx+rdx*4]", "xor     edx, edx", "mov     rsi, r8", "lea     eax, [r10+rax*2]", "div     ebx", "mov     r10d, eax", "mov     eax, ecx", "sar     eax, 1", "mov     edi, r10d", "lea     eax, [rax+rdx*2]", "add     ecx, eax", "cmp     ebx, eax", "ja      loc_6FC8"], ["mov~r2,r8", "xor~edx,edx", "div~,r12", "mov~r8,rax", "lea~eax,<TAG>", "xor~edx,edx", "mov~rsi,r8", "lea~eax,<TAG>", "div~,ebx", "mov~r10d,eax", "mov~eax,ecx", "sar~eax,0", "mov~edi,r10d", "lea~eax,<TAG>", "add~ecx,eax", "cmp~ebx,eax", "ja~FOO"]], [0, 0, 117, 0, 0, 2, 0, 1, 8, 13, 0.01945724526369688, ["cmp     r12, r8", "ja      loc_7154"], ["cmp~r12,r8", "ja~FOO"]], [0, 0, 118, 0, 0, 4, 1, 1, 7, 14, 0.00736047107014849, ["test    ecx, ecx", "setnz   cl", "movzx   ecx, cl", "jmp     loc_6714"], ["test~ecx,ecx", "setnz~cl", "movzx~ecx,cl", "jmp~FOO"]], [3, 0, 44, 5, 0, 12, 1, 1, 8, 6, 0.06658559481140126, ["mov     rax, amt", "sub     p_0, 1", "mul     rcx", "shr     rdx, 3", "lea     rax, [rdx+rdx*4]", "add     rax, rax", "sub     amt, rax", "add     esi, 30h ; '0'", "test    rdx, rdx", "mov     [p_0+0], sil", "mov     rsi, rdx", "jnz     short loc_6930"], ["mov~rax,amt", "sub~p_0,0", "mul~,rcx", "shr~rdx,0", "lea~rax,<TAG>", "add~rax,rax", "sub~amt,rax", "add~esi,0", "test~rdx,rdx", "mov~[p_0+0],sil", "mov~rsi,rdx", "jnz~FOO"]], [2, 0, 54, 1, 0, 3, 1, 1, 9, 7, 0.01947857996245093, ["add     dword ptr [rsp+0D8h+exponent], 1", "test    bpl, 8", "jz      loc_7195"], ["add~[word ptr [rsp+0],0", "test~bpl,0", "jz~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 16, -1, 0.0003093531319337771, ["lea     rax, [psuffix_0+1]", "mov     byte ptr [psuffix_0], 42h ; 'B'", "mov     [rsp+0D8h+psuffix], rax"], ["lea~rax,[psuffix_0+0]", "mov~<TAG>,0", "mov~[rsp+0],rax"]], [0, 0, 46, 0, 0, 2, 1, 1, 12, 7, 0.0037122375832053254, ["test    eax, eax", "jz      loc_6F5C"], ["test~eax,eax", "jz~FOO"]], [1, 0, 45, 0, 0, 4, 1, 1, 13, 7, 0.0016427718040621267, ["movzx   edx, byte ptr [decimal_point]", "test    al, 2", "mov     [p_0], dl", "jz      loc_6F5C"], ["movzx~edx,<TAG>", "test~al,0", "mov~<TAG>,dl", "jz~FOO"]], [0, 0, 44, 0, 0, 3, 0, 1, 14, 7, 0.0, ["movzx   edx, word ptr [decimal_point+rax-2]", "mov     [p_0+rax-2], dx", "jmp     loc_6F5C"], ["movzx~edx,[ord ptr [decimal_point+0]", "mov~[p_0+0],dx", "jmp~FOO"]], [0, 0, 29, 0, 0, 2, 0, 0, 13, -1, 0.04787506400409627, ["cmp     rdi, power", "jbe     loc_7068"], ["cmp~rdi,power", "jbe~FOO"]], [3, 0, 69, 1, 2, 18, 1, 2, 11, 9, 0.03430619559651818, ["fstp    [rsp+0D8h+damt.value]", "sub     rsp, 10h", "lea     rcx, a1lf; \"%.1Lf\"", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "xor     eax, eax", "mov     base, [rsp+0E8h+buf]", "mov     rdi, r14", "fstp    [rsp+0E8h+var_E8]", "call    ___sprintf_chk", "mov     rdi, r14; s", "call    _strlen", "mov     decimal_point, rax", "pop     buflen", "pop     rdx", "cmp     buflen, r13", "fld     [rsp+0D8h+damt.value]", "jbe     loc_6D71"], ["fstp~<TAG>,[rsp+0]", "sub~rsp,0", "lea~rcx,<TAG>", "mov~rdx,0", "mov~esi,0", "xor~eax,eax", "mov~base,[rsp+0]", "mov~rdi,r14", "fstp~<TAG>,<TAG>", "call~FOO", "mov~rdi,r14", "call~FOO", "mov~decimal_point,rax", "pop~buflen", "pop~rdx", "cmp~buflen,r13", "fld~<TAG>,[rsp+0]", "jbe~FOO"]], [0, 0, 107, 0, 0, 2, 0, 0, 14, 13, 0.012928827444956478, ["cmp     r8, r12", "jb      loc_716E"], ["cmp~r8,r12", "jb~FOO"]], [0, 0, 62, 0, 0, 2, 0, 0, 12, 9, 0.01668373442566991, ["fld     cs:flt_12254", "fmul    st(1), st"], ["fld~<TAG>,<TAG>", "fmul~<TAG>,<TAG>"]], [0, 0, 62, 0, 0, 1, 0, 1, 13, 9, 0.0014507595152756445, ["jmp     loc_657F"], ["jmp~FOO"]], [1, 0, 110, 3, 0, 17, 2, 1, 12, 15, 0.007296466973886329, ["mov     r2, r8", "xor     edx, edx", "div     r12", "mov     r8, rax", "lea     eax, [rdx+rdx*4]", "xor     edx, edx", "mov     rsi, r8", "lea     eax, [r10+rax*2]", "div     ebx", "mov     r10d, eax", "mov     eax, ecx", "sar     eax, 1", "mov     edi, r10d", "lea     eax, [rax+rdx*2]", "add     ecx, eax", "cmp     ebx, eax", "ja      loc_6FF0"], ["mov~r2,r8", "xor~edx,edx", "div~,r12", "mov~r8,rax", "lea~eax,<TAG>", "xor~edx,edx", "mov~rsi,r8", "lea~eax,<TAG>", "div~,ebx", "mov~r10d,eax", "mov~eax,ecx", "sar~eax,0", "mov~edi,r10d", "lea~eax,<TAG>", "add~ecx,eax", "cmp~ebx,eax", "ja~FOO"]], [1, 0, 108, 1, 0, 4, 0, 0, 13, 14, 0.00439494794333504, ["cmp     ebx, ecx", "setb    cl", "movzx   ecx, cl", "add     ecx, 2"], ["cmp~ebx,ecx", "setb~cl", "movzx~ecx,cl", "add~ecx,0"]], [0, 0, 108, 0, 0, 4, 1, 1, 13, 14, 0.00439494794333504, ["test    ecx, ecx", "setnz   cl", "movzx   ecx, cl", "jmp     loc_679C"], ["test~ecx,ecx", "setnz~cl", "movzx~ecx,cl", "jmp~FOO"]], [2, 0, 41, 1, 2, 21, 0, 3, 10, 4, 0.026284348864994027, ["mov     rdi, [rsp+0D8h+l]; s", "lea     rbx, [rsp+0D8h+var_78]", "mov     r15, integerlim", "sub     r15, p_0", "call    _strlen", "mov     rdi, rbx", "mov     ecx, 29h ; ')'", "mov     rdx, r15", "mov     rsi, p_0", "mov     [rsp+0D8h+inexact_style], rbx", "mov     qword ptr [rsp+0D8h+damt.value], rax", "call    ___memcpy_chk", "mov     rdi, r12", "mov     rcx, integerlim", "mov     r12, r15", "mov     r14d, ebp", "mov     rbx, 0FFFFFFFFFFFFFFFFh", "mov     p_0, [rsp+0D8h+grouping]", "mov     opts, qword ptr [rsp+0D8h+damt.value]", "mov     r15, rdi", "jmp     short loc_69F4"], ["mov~rdi,[rsp+0]", "lea~rbx,[rsp+0]", "mov~r15,integerlim", "sub~r15,p_0", "call~FOO", "mov~rdi,rbx", "mov~ecx,0", "mov~rdx,r15", "mov~rsi,p_0", "mov~[rsp+0],rbx", "mov~[word ptr [rsp+0],rax", "call~FOO", "mov~rdi,r12", "mov~rcx,integerlim", "mov~r12,r15", "mov~r14d,ebp", "mov~rbx,0", "mov~p_0,[rsp+0]", "mov~opts,[word ptr [rsp+0]", "mov~r15,rdi", "jmp~FOO"]], [2, 0, 58, 0, 0, 12, 2, 0, 15, 12, 0.007829834442737669, ["fnstcw  [rsp+0D8h+var_7A]", "movzx   eax, [rsp+0D8h+var_7A]", "fsubr   st(2), st", "fxch    st(2)", "mov     rdx, 8000000000000000h", "or      ah, 0Ch", "mov     [rsp+0D8h+var_7C], ax", "fldcw   [rsp+0D8h+var_7C]", "fistp   [rsp+0D8h+var_88]", "fldcw   [rsp+0D8h+var_7A]", "mov     rax, [rsp+0D8h+var_88]", "xor     rax, rdx"], ["fnstcw~[rsp+0]", "movzx~eax,[rsp+0]", "fsubr~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "mov~rdx,0", "or~ah,0", "mov~[rsp+0],ax", "fldcw~[rsp+0]", "fistp~<TAG>,[rsp+0]", "fldcw~[rsp+0]", "mov~rax,[rsp+0]", "xor~rax,rdx"]], [0, 0, 57, 0, 0, 4, 1, 0, 16, 11, 0.016961085509472607, ["mov     qword ptr [rsp+0D8h+damt.value], rax", "test    rax, rax", "fild    qword ptr [rsp+0D8h+damt.value]", "jns     short loc_65E4"], ["mov~[word ptr [rsp+0],rax", "test~rax,rax", "fild~<TAG>,[word ptr [rsp+0]", "jns~FOO"]], [1, 0, 103, 1, 0, 4, 0, 0, 16, 14, 0.0037975763782215396, ["cmp     ecx, ebx", "setnbe  cl", "movzx   ecx, cl", "add     ecx, 2"], ["cmp~ecx,ebx", "setnbe~cl", "movzx~ecx,cl", "add~ecx,0"]], [0, 0, 56, 0, 0, 1, 0, 0, 17, 11, 0.0, ["fadd    cs:flt_1224C"], ["fadd~<TAG>,<TAG>"]], [0, 0, 41, 1, 1, 6, 0, 1, 14, 4, 0.00014934289127837517, ["mov     rsi, [rsp+0D8h+l]; src", "sub     rcx, rbp", "mov     rdx, rbp; n", "mov     rdi, rcx; dest", "call    _memcpy", "mov     rcx, rax"], ["mov~rsi,[rsp+0]", "sub~rcx,rbp", "mov~rdx,rbp", "mov~rdi,rcx", "call~FOO", "mov~rcx,rax"]], [0, 0, 53, 0, 0, 3, 0, 0, 18, 11, 0.008661887694145758, ["fxch    st(2)", "fucomip st, st(2)", "jp      short loc_65FA"], ["fxch~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "jp~FOO"]]], "func_feature": [18, 113, 153, 6, 218, 325, 5, 1027, 0.01218, 10, 85], "succs": [[72], [0, 119], [11], [2, 11], [155], [144, 4], [104], [40, 6], [75, 14], [8], [8], [48, 116], [25, 28], [26, 12], [76], [49, 187], [53, 15], [42, 165], [17, 79], [166], [19, 140], [76], [217, 21], [76], [9, 23], [50, 31], [25, 27], [25, 124], [25, 139], [35], [36, 29], [50], [208, 86], [32], [32], [89, 68], [35], [133], [128, 37], [104], [60, 39], [192, 41], [41], [54, 55], [43], [43], [166], [132, 46], [147], [178, 187], [65, 51], [65], [187], [178, 52], [58, 94], [54], [110, 111], [56, 91], [67, 61], [104], [154, 59], [64, 95], [], [179, 62], [83], [57, 66], [57], [83], [69, 77], [82], [63], [70, 199], [134], [72, 191], [72, 207], [72], [72], [82], [165], [200, 78], [166], [80, 203], [84], [96, 95], [97, 98], [84], [84], [84], [84], [84], [88, 30], [171, 101], [120, 99], [92, 117], [95], [110], [95], [106, 109], [16], [105, 164], [99], [112, 172], [130, 71], [182, 38], [1, 103], [136], [93], [90], [107, 214], [93], [134], [110, 127], [123, 173], [166], [113, 122], [147], [216, 115], [120, 163], [134], [126, 118], [136], [166], [121, 47], [174, 7], [129, 137], [134], [74, 125], [44, 45], [133], [138], [185, 161], [166], [131, 20], [141, 135], [149], [141], [156, 5], [138], [16, 142], [138], [166], [146, 186], [170, 143], [16], [155, 151], [204, 150], [152, 145], [153, 63], [147, 211], [147, 211], [168], [155, 159], [168], [81, 166], [104], [16], [155, 189], [155], [155], [155], [63], [160, 184], [160, 199], [100, 158], [16], [149], [169, 63], [166], [176, 188], [102, 175], [177, 196], [104], [104], [104], [104], [102], [204], [195], [187, 180], [], [181, 198], [187], [204], [199], [199, 183], [161, 162], [204], [197], [204], [193], [213], [212, 190], [165], [193, 157], [33, 34], [194, 85], [195], [148, 197], [18, 165], [63], [201, 165], [202, 165], [165], [114, 167], [206, 119], [108, 87], [73], [73], [209, 210], [205], [205], [3], [213], [22, 215], [90], [22], [3], [24, 10]], "fname": "human_readable", "n_num": 218}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 1, 3, 0, 0, 4, 1, 1, 0, 0, 0.007478632478632479, ["mov     qword ptr [block_size+0], 200h", "xor     eax, eax", "mov     dword ptr [opts], 0", "jmp     loc_7335"], ["mov~[word ptr [block_size+0],<STR>", "xor~eax,eax", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 5, 0, 1, 4, 1, 2, 3, 3, 0.019230769230769232, ["lea     rdi, name; \"POSIXLY_CORRECT\"", "call    _getenv", "test    rax, rax", "jz      short loc_74B4"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 28h", "pop     rbx", "pop     block_size", "pop     opts", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~block_size", "pop~opts", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 5, 1, 0.07122507122507123, ["mov     rcx, [rsp+58h+var_40]", "xor     rcx, fs:28h", "jnz     loc_74CB"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 8, 5, 0.005698005698005698, ["cmp     r15, rcx", "jz      loc_7490"], ["cmp~r15,rcx", "jz~FOO"]], [2, 0, 12, 1, 0, 5, 0, 1, 7, 4, 0.03133903133903134, ["add     r15, 1", "movzx   edi, byte ptr [r15]", "lea     edx, [rdi-30h]", "cmp     dl, 9", "ja      short loc_73C0"], ["add~r15,0", "movzx~edi,<TAG>", "lea~edx,[rdi-30h]+0]", "cmp~dl,0", "ja~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 8, 5, 0.06410256410256411, ["cmp     byte ptr [rcx-1], 42h ; 'B'", "jz      short loc_74A0"], ["cmp~[yte ptr [rcx-1]+0],0", "jz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 1, 7, 6, 0.05698005698005698, ["jmp     loc_7490"], ["jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 9, 4, 0.017094017094017096, ["mov     ebx, r13d", "jmp     loc_73D9"], ["mov~ebx,r13d", "jmp~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 10, 5, 0.0014245014245014246, ["mov     r13d, [rsp+58h+var_4C]", "jmp     short loc_7496"], ["mov~r13d,[rsp+0]", "jmp~FOO"]], [1, 0, 18, 0, 1, 7, 1, 2, 3, 3, 0.14316239316239318, ["lea     rdx, block_size_opts; vallist", "lea     rsi, block_size_args; arglist", "mov     ecx, 4; valsize", "mov     rdi, r15; arg", "call    argmatch", "test    eax, eax", "js      short loc_7388"], ["lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~ecx,0", "mov~rdi,r15", "call~FOO", "test~eax,eax", "js~FOO"]], [5, 0, 19, 1, 0, 6, 0, 1, 2, 4, 0.048789173789173794, ["add     r15, 1", "mov     r13d, 0A4h", "mov     [rsp+58h+var_4C], 1A4h", "mov     r14d, 184h", "mov     ebx, 4", "jmp     loc_72FC"], ["add~r15,0", "mov~r13d,0", "mov~[rsp+0],0", "mov~r14d,0", "mov~ebx,0", "jmp~FOO"]], [1, 2, 19, 0, 0, 4, 1, 0, 2, 4, 0.048789173789173794, ["mov     r13d, 0A0h", "mov     [rsp+58h+var_4C], 1A0h", "mov     r14d, 180h", "xor     ebx, ebx"], ["mov~r13d,0", "mov~[rsp+0],<STR>", "mov~r14d,<STR>", "xor~ebx,ebx"]], [0, 1, 27, 1, 0, 15, 2, 1, 0, 6, 0.0, ["push    r15", "push    r14", "mov     r15, spec", "push    r13", "push    r12", "mov     r12, opts", "push    rbp", "push    rbx", "mov     rbp, block_size", "sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "test    spec, spec", "jz      loc_7430"], ["push~r15", "push~r14", "mov~r15,spec", "push~r13", "push~r12", "mov~r12,opts", "push~rbp", "push~rbx", "mov~rbp,block_size", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~spec,spec", "jz~FOO"]], [0, 0, 16, 0, 1, 8, 2, 2, 4, 4, 0.12962962962962962, ["lea     rsi, [rsp+58h+ptr]; ptr", "lea     r8, aEeggkkmmppttyy; \"eEgGkKmMpPtTyYzZ0\"", "xor     edx, edx; strtol_base", "mov     rcx, block_size; val", "mov     rdi, r15; s", "call    xstrtoumax", "test    eax, eax", "jnz     short loc_73E8"], ["lea~rsi,[rsp+0]", "lea~r8,<TAG>", "xor~edx,edx", "mov~rcx,block_size", "mov~rdi,r15", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 2, 3, 1, 1, 9, 1, 2, 7, 2, 0.0, ["lea     rdi, name; \"POSIXLY_CORRECT\"", "call    _getenv", "cmp     rax, 1", "sbb     rax, rax", "and     eax, 200h", "add     rax, 200h", "mov     [block_size+0], rax", "mov     eax, 4", "jmp     loc_7335"], ["lea~rdi,<TAG>", "call~FOO", "cmp~rax,0", "sbb~rax,rax", "and~eax,<STR>", "add~rax,<STR>", "mov~[block_size+0],rax", "mov~eax,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 6, 2, 0.07834757834757836, ["test    rdx, rdx", "jnz     loc_7335"], ["test~rdx,rdx", "jnz~FOO"]], [1, 0, 8, 0, 0, 3, 0, 1, 9, 4, 0.02849002849002849, ["cmp     byte ptr [rcx-2], 69h ; 'i'", "mov     ebx, r14d", "jnz     loc_73D9"], ["cmp~[yte ptr [rcx-2]+0],0", "mov~ebx,r14d", "jnz~FOO"]], [1, 0, 14, 0, 0, 4, 0, 0, 5, 4, 0.10256410256410257, ["movzx   esi, byte ptr [r15]", "lea     edx, [rsi-30h]", "cmp     dl, 9", "jbe     short loc_73D9"], ["movzx~esi,<TAG>", "lea~edx,[rsi-30h]+0]", "cmp~dl,0", "jbe~FOO"]], [1, 0, 3, 0, 0, 6, 2, 0, 4, 2, 0.019230769230769232, ["lea     rdx, block_size_opts", "cdqe", "mov     qword ptr [block_size+0], 1", "or      ebx, [rdx+rax*4]", "xor     eax, eax", "mov     [opts], ebx"], ["lea~rdx,<TAG>", "cdqe~", "mov~[word ptr [block_size+0],0", "or~ebx,<TAG>", "xor~eax,eax", "mov~<TAG>,ebx"]], [0, 0, 13, 0, 0, 3, 0, 1, 6, 5, 0.08974358974358974, ["mov     rcx, [rsp+58h+ptr]", "cmp     r15, rcx", "jnz     short loc_73C9"], ["mov~rcx,[rsp+0]", "cmp~r15,rcx", "jnz~FOO"]], [0, 0, 26, 0, 1, 5, 1, 2, 1, 5, 0.007834757834757835, ["lea     spec, aBlockSize; \"BLOCK_SIZE\"", "call    _getenv", "test    rax, rax", "mov     spec, rax", "jnz     loc_72E0"], ["lea~spec,<TAG>", "call~FOO", "test~rax,rax", "mov~spec,rax", "jnz~FOO"]], [2, 0, 3, 0, 0, 4, 1, 1, 4, 2, 0.007478632478632479, ["mov     qword ptr [block_size+0], 400h", "xor     eax, eax", "mov     dword ptr [opts], 0", "jmp     loc_7335"], ["mov~[word ptr [block_size+0],0", "xor~eax,eax", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 25, 0, 1, 5, 1, 2, 2, 4, 0.014957264957264958, ["lea     rdi, aBlocksize; \"BLOCKSIZE\"", "call    _getenv", "test    rax, rax", "mov     r15, rax", "jnz     loc_72E0"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~r15,rax", "jnz~FOO"]], [0, 0, 5, 0, 0, 3, 0, 1, 6, 3, 0.06410256410256411, ["mov     rdx, [block_size+0]", "mov     [opts], ebx", "jmp     short loc_73F4"], ["mov~rdx,[block_size+0]", "mov~<TAG>,ebx", "jmp~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 1, 5, 0.07905982905982907, ["cmp     byte ptr [r15], 27h ; '''", "jz      short loc_7360"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 0, 5, 3, 0.027065527065527065, ["mov     rdx, [block_size+0]", "mov     dword ptr [opts], 0"], ["mov~rdx,[block_size+0]", "mov~<TAG>,0"]]], "func_feature": [7, 16, 29, 2, 28, 41, 0, 122, 0.04156, 7, 5], "succs": [[3], [0, 22], [], [2, 23], [5, 6], [25, 4], [8, 17], [6], [25], [8], [19, 14], [10], [10], [26, 21], [18, 27], [3], [3, 15], [9, 25], [25, 20], [3], [5, 7], [24, 26], [3], [], [1, 26], [16], [11, 12], [16]], "fname": "human_options", "n_num": 28}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 3, 0, 1, 3, 1, 2, 0, 0, 0.016666666666666666, ["xor     edi, edi", "call    r9", "jmp     loc_7549"], ["xor~edi,edi", "call~r9", "jmp~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 3, 3, 0.13333333333333333, ["cmp     eax, 68h ; 'h'", "mov     r9, [rsp+108h+usage_func]", "jz      short loc_7600"], ["cmp~eax,0", "mov~r9,[rsp+0]", "jz~FOO"]], [1, 0, 2, 0, 0, 5, 1, 1, 2, 1, 0.15555555555555556, ["mov     rax, [rsp+108h+var_E0]", "xor     rax, fs:28h", "mov     cs:opterr@@GLIBC_2_2_5, ebx", "mov     cs:optind@@GLIBC_2_2_5, 0", "jnz     loc_760A"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "mov~<TAG>,ebx", "mov~<TAG>,0", "jnz~FOO"]], [1, 0, 7, 0, 1, 7, 1, 2, 2, 2, 0.13333333333333333, ["lea     package, long_options; longopts", "lea     command_name, shortopts; \"+\"", "xor     r8d, r8d; longind", "mov     [rsp+108h+usage_func], usage_func_0", "call    _getopt_long", "cmp     eax, 0FFFFFFFFh", "jz      short loc_7549"], ["lea~package,<TAG>", "lea~command_name,<TAG>", "xor~r8d,r8d", "mov~[rsp+0],usage_func_0", "call~FOO", "cmp~eax,0", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 4, 2, 0.07222222222222223, ["cmp     eax, 76h ; 'v'", "jnz     short loc_7549"], ["cmp~eax,0", "jnz~FOO"]], [2, 0, 8, 0, 0, 7, 1, 1, 1, 2, 0.17777777777777778, ["mov     rax, fs:28h", "mov     [rsp+108h+var_E0], rax", "xor     eax, eax", "cmp     edi, 2", "mov     ebx, cs:opterr@@GLIBC_2_2_5", "mov     cs:opterr@@GLIBC_2_2_5, 0", "jz      short loc_7580"], ["mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edi,0", "mov~ebx,<TAG>", "mov~<TAG>,0", "jz~FOO"]], [1, 0, 10, 1, 0, 10, 1, 1, 0, 3, 0.0, ["push    r13", "push    r12", "mov     r13, version", "push    rbp", "push    rbx", "mov     rbp, command_name", "mov     r12, package", "sub     rsp, 0E8h", "test    al, al", "jz      short loc_7524"], ["push~r13", "push~r12", "mov~r13,version", "push~rbp", "push~rbx", "mov~rbp,command_name", "mov~r12,package", "sub~rsp,0", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 9, 0, 0, 8, 0, 0, 1, 3, 0.0, ["movaps  [rsp+108h+var_A8], xmm0", "movaps  [rsp+108h+var_98], xmm1", "movaps  [rsp+108h+var_88], xmm2", "movaps  [rsp+108h+var_78], xmm3", "movaps  [rsp+108h+var_68], xmm4", "movaps  [rsp+108h+var_58], xmm5", "movaps  [rsp+108h+var_48], xmm6", "movaps  [rsp+108h+var_38], xmm7"], ["movaps~[rsp+0],xmm0", "movaps~[rsp+0],xmm1", "movaps~[rsp+0],xmm2", "movaps~[rsp+0],xmm3", "movaps~[rsp+0],xmm4", "movaps~[rsp+0],xmm5", "movaps~[rsp+0],xmm6", "movaps~[rsp+0],xmm7"]], [2, 0, 0, 0, 2, 14, 1, 2, 5, -1, 0.0, ["lea     c, [rsp+108h+arg_0]", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "lea     r8, [rsp+108h+authors]; authors", "mov     rcx, version; version", "mov     rdx, package; package", "mov     rsi, command_name; command_name", "mov     [rsp+108h+authors.overflow_arg_area], rax", "lea     rax, [rsp+108h+var_D8]", "mov     [rsp+108h+authors.gp_offset], 30h ; '0'", "mov     [rsp+108h+authors.fp_offset], 30h ; '0'", "mov     [rsp+108h+authors.reg_save_area], rax", "call    version_etc_va", "xor     edi, edi; status", "call    _exit"], ["lea~c,[rsp+0]", "mov~rdi,<TAG>", "lea~r8,[rsp+0]", "mov~rcx,version", "mov~rdx,package", "mov~rsi,command_name", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "call~FOO", "xor~edi,edi", "call~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 0E8h", "pop     saved_opterr", "pop     command_name", "pop     package", "pop     version", "retn"], ["add~rsp,0", "pop~saved_opterr", "pop~command_name", "pop~package", "pop~version", "retn"]]], "func_feature": [5, 6, 12, 10, 11, 14, 0, 66, 0.06263, 6, 2], "succs": [[2], [0, 4], [10, 7], [1, 2], [9, 2], [2, 3], [8, 5], [], [5], [], []], "fname": "parse_long_options", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 5, 0, 0, 2, 0, 1, 0, 0, 0.08888888888888889, ["cmp     eax, 76h ; 'v'", "jnz     short loc_7710"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 2, 3, 0.13333333333333333, ["cmp     eax, 68h ; 'h'", "jz      loc_7740"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 0, 0, 2, 14, 1, 2, 4, -1, 0.0, ["lea     c, [rsp+0F8h+arg_8]", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "mov     r8, rsp; authors", "mov     rcx, version; version", "mov     rdx, package; package", "mov     rsi, command_name; command_name", "mov     [rsp+0F8h+authors.overflow_arg_area], rax", "lea     rax, [rsp+0F8h+var_D8]", "mov     [rsp+0F8h+authors.gp_offset], 30h ; '0'", "mov     [rsp+0F8h+authors.fp_offset], 30h ; '0'", "mov     [rsp+0F8h+authors.reg_save_area], rax", "call    version_etc_va", "xor     edi, edi; status", "call    _exit"], ["lea~c,[rsp+0]", "mov~rdi,<TAG>", "mov~r8,rsp", "mov~rcx,version", "mov~rdx,package", "mov~rsi,command_name", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~<TAG>,0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "call~FOO", "xor~edi,edi", "call~FOO"]], [0, 0, 9, 0, 0, 8, 0, 0, 1, 3, 0.0, ["movaps  [rsp+0F8h+var_A8], xmm0", "movaps  [rsp+0F8h+var_98], xmm1", "movaps  [rsp+0F8h+var_88], xmm2", "movaps  [rsp+0F8h+var_78], xmm3", "movaps  [rsp+0F8h+var_68], xmm4", "movaps  [rsp+0F8h+var_58], xmm5", "movaps  [rsp+0F8h+var_48], xmm6", "movaps  [rsp+0F8h+var_38], xmm7"], ["movaps~[rsp+0],xmm0", "movaps~[rsp+0],xmm1", "movaps~[rsp+0],xmm2", "movaps~[rsp+0],xmm3", "movaps~[rsp+0],xmm4", "movaps~[rsp+0],xmm5", "movaps~[rsp+0],xmm6", "movaps~[rsp+0],xmm7"]], [0, 1, 10, 1, 0, 12, 1, 1, 0, 3, 0.0, ["push    r14", "push    r13", "mov     r14, version", "push    r12", "push    rbp", "mov     r12, command_name", "push    rbx", "mov     r13, package", "sub     rsp, 0D0h", "test    al, al", "mov     rbp, [rsp+0F8h+usage_func]", "jz      short loc_766B"], ["push~r14", "push~r13", "mov~r14,version", "push~r12", "push~rbp", "mov~r12,command_name", "push~rbx", "mov~r13,package", "sub~rsp,<STR>", "test~al,al", "mov~rbp,[rsp+0]", "jz~FOO"]], [0, 0, 3, 0, 1, 3, 1, 2, 3, 2, 0.03333333333333333, ["xor     edi, edi", "call    rbp", "jmp     short loc_7718"], ["xor~edi,edi", "call~rbp", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.15555555555555556, ["mov     rax, [rsp+0F8h+var_E0]", "xor     rax, fs:28h", "mov     cs:opterr@@GLIBC_2_2_5, ebx", "jnz     short loc_7746"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "mov~<TAG>,ebx", "jnz~FOO"]], [2, 0, 8, 0, 1, 14, 3, 2, 1, 2, 0.17777777777777778, ["mov     rax, fs:28h", "mov     [rsp+0F8h+var_E0], rax", "xor     eax, eax", "lea     command_name, aWrittenBySSAnd+1Bh; \"\"", "lea     rax, shortopts; \"+\"", "test    r9b, r9b", "lea     package, long_options; longopts", "cmovz   rdx, rax; shortopts", "xor     r8d, r8d; longind", "mov     ebx, cs:opterr@@GLIBC_2_2_5", "mov     cs:opterr@@GLIBC_2_2_5, 1", "call    _getopt_long", "cmp     eax, 0FFFFFFFFh", "jz      short loc_7718"], ["mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~command_name,<TAG>", "lea~rax,<TAG>", "test~r9b,r9b", "lea~package,<TAG>", "cmovz~rdx,rax", "xor~r8d,r8d", "mov~ebx,<TAG>", "mov~<TAG>,0", "call~FOO", "cmp~eax,0", "jz~FOO"]], [0, 0, 3, 0, 1, 2, 0, 1, 4, 2, 0.03333333333333333, ["mov     edi, cs:exit_failure", "call    rbp"], ["mov~edi,<TAG>", "call~rbp"]], [0, 1, 0, 1, 0, 7, 0, 0, 3, -1, 0.0, ["add     rsp, 0D0h", "pop     saved_opterr", "pop     rbp", "pop     command_name", "pop     package", "pop     version", "retn"], ["add~rsp,<STR>", "pop~saved_opterr", "pop~rbp", "pop~command_name", "pop~package", "pop~version", "retn"]]], "func_feature": [6, 7, 12, 10, 11, 13, 1, 69, 0.05657, 7, 2], "succs": [[9, 2], [0, 5], [], [8], [8, 3], [7], [], [10, 6], [1, 7], [7], []], "fname": "parse_gnu_standard_options_only", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0.0, ["lea     rbx, [slash+4]", "mov     cs:program_invocation_short_name@@GLIBC_2_2_5, argv0"], ["lea~rbx,[slash+0]", "mov~<TAG>,argv0"]], [2, 0, 2, 0, 0, 9, 1, 1, 4, -1, 0.09523809523809523, ["lea     rdi, aLt; \"lt-\"", "mov     ecx, 3", "mov     rsi, base", "mov     rbx, base", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     short loc_77BD"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,base", "mov~rbx,base", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "test~dl,dl", "jnz~FOO"]], [1, 0, 5, 0, 1, 5, 1, 2, 1, -1, 0.11904761904761904, ["mov     esi, 2Fh ; '/'; c", "mov     rbx, argv0", "call    _strrchr", "test    slash, slash", "jz      short loc_77BD"], ["mov~esi,0", "mov~rbx,argv0", "call~FOO", "test~slash,slash", "jz~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 0, 1, 0.0, ["test    argv0, argv0", "push    rbx", "jz      short loc_77CD"], ["test~argv0,argv0", "push~rbx", "jz~FOO"]], [2, 0, 0, 0, 2, 6, 0, 2, 1, 0, 0.0, ["mov     rcx, cs:stderr@@GLIBC_2_2_5; s", "lea     argv0, aANullArgv0WasP; \"A NULL argv[0] was passed through an ex\"...", "mov     edx, 37h ; '7'; n", "mov     esi, 1; size", "call    _fwrite", "call    _abort"], ["mov~rcx,<TAG>", "lea~argv0,<TAG>", "mov~edx,0", "mov~esi,0", "call~FOO", "call~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["mov     cs:program_name, argv0", "mov     cs:program_invocation_name@@GLIBC_2_2_5, argv0", "pop     argv0", "retn"], ["mov~<TAG>,argv0", "mov~<TAG>,argv0", "pop~argv0", "retn"]], [1, 0, 4, 1, 0, 5, 0, 1, 2, -1, 0.14285714285714285, ["lea     r8, [slash+1]", "mov     rdx, base", "sub     rdx, argv0", "cmp     rdx, 6", "jle     short loc_77BD"], ["lea~r8,[slash+0]", "mov~rdx,base", "sub~rdx,argv0", "cmp~rdx,0", "jle~FOO"]], [2, 0, 3, 0, 0, 8, 1, 1, 3, -1, 0.14285714285714285, ["lea     rsi, [slash-6]", "lea     rdi, aLibs; \"/.libs/\"", "mov     ecx, 7", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     short loc_77BD"], ["lea~rsi,[slash-6]+0]", "lea~rdi,<TAG>", "mov~ecx,0", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "test~dl,dl", "jnz~FOO"]]], "func_feature": [3, 4, 8, 0, 8, 11, 1, 42, 0.0625, 7, 1], "succs": [[5], [0, 5], [5, 6], [2, 4], [], [], [5, 7], [1, 5]], "fname": "set_program_name", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 7, 0, 0, 2, 0, 1, 0, 0, 0.075, ["cmp     byte ptr [locale_code+2], 31h ; '1'", "jnz     short loc_7810"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [2, 0, 8, 0, 0, 4, 1, 1, 2, -1, 0.058333333333333334, ["movzx   edx, byte ptr [locale_code+1]", "and     edx, 0FFFFFFDFh", "cmp     dl, 42h ; 'B'", "jnz     short loc_7810"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 3, 3, 0.0375, ["cmp     byte ptr [locale_code+3], 2Dh ; '-'", "jnz     loc_7810"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [2, 0, 5, 0, 0, 4, 1, 1, 2, 4, 0.03333333333333333, ["movzx   edx, byte ptr [locale_code+2]", "and     edx, 0FFFFFFDFh", "cmp     dl, 46h ; 'F'", "jnz     loc_7810"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [2, 0, 0, 1, 0, 8, 0, 0, 6, 0, 0.0, ["cmp     byte ptr [msgid+0], 60h ; '`'", "lea     locale_code, unk_122BC", "lea     rdx, unk_122C0", "cmovnz  rax, rdx", "add     rsp, 8", "pop     s", "pop     msgid", "retn"], ["cmp~[yte ptr [msgid+0],0", "lea~locale_code,<TAG>", "lea~rdx,<TAG>", "cmovnz~rax,rdx", "add~rsp,0", "pop~s", "pop~msgid", "retn"]], [1, 0, 2, 0, 0, 2, 0, 1, 5, 1, 0.020833333333333332, ["cmp     byte ptr [locale_code+5], 0", "jnz     loc_7810"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 4, -1, 0.08333333333333333, ["cmp     byte ptr [locale_code+3], 38h ; '8'", "jnz     short loc_7810"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [3, 0, 16, 1, 1, 10, 1, 2, 0, 6, 0.0, ["push    rbp", "push    rbx", "mov     rbp, msgid", "mov     ebx, esi", "sub     rsp, 8", "call    locale_charset", "movzx   edx, byte ptr [locale_code]", "and     edx, 0FFFFFFDFh", "cmp     dl, 55h ; 'U'", "jz      short loc_7880"], ["push~rbp", "push~rbx", "mov~rbp,msgid", "mov~ebx,esi", "sub~rsp,0", "call~FOO", "movzx~edx,<TAG>", "and~edx,0", "cmp~dl,0", "jz~FOO"]], [2, 0, 6, 0, 0, 4, 1, 1, 1, 5, 0.022916666666666665, ["movzx   edx, byte ptr [locale_code+1]", "and     edx, 0FFFFFFDFh", "cmp     dl, 54h ; 'T'", "jnz     short loc_7810"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [2, 0, 0, 1, 0, 8, 0, 0, 2, -1, 0.0, ["lea     locale_code, unk_122CB", "lea     rdx, asc_122CD; \"'\"", "cmp     ebx, 9", "cmovnz  rax, rdx", "add     rsp, 8", "pop     s", "pop     msgid", "retn"], ["lea~locale_code,<TAG>", "lea~rdx,<TAG>", "cmp~ebx,0", "cmovnz~rax,rdx", "add~rsp,0", "pop~s", "pop~msgid", "retn"]], [1, 0, 5, 0, 0, 2, 0, 1, 5, -1, 0.08333333333333333, ["cmp     byte ptr [locale_code+4], 30h ; '0'", "jnz     short loc_7810"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 6, -1, 0.075, ["cmp     byte ptr [locale_code+5], 33h ; '3'", "jnz     short loc_7810"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 7, -1, 0.058333333333333334, ["cmp     byte ptr [locale_code+6], 30h ; '0'", "jnz     short loc_7810"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 8, -1, 0.03333333333333333, ["cmp     byte ptr [locale_code+7], 0", "jnz     short loc_7810"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, 2, 0.03333333333333333, ["cmp     byte ptr [locale_code+4], 38h ; '8'", "jnz     loc_7810"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 1, -1, 0.035416666666666666, ["cmp     dl, 47h ; 'G'", "jz      short loc_7830"], ["cmp~dl,0", "jz~FOO"]], [2, 0, 0, 1, 0, 8, 0, 0, 9, -1, 0.0, ["cmp     byte ptr [msgid+0], 60h ; '`'", "lea     locale_code, unk_122C4", "lea     rdx, unk_122C8", "cmovnz  rax, rdx", "add     rsp, 8", "pop     s", "pop     msgid", "retn"], ["cmp~[yte ptr [msgid+0],0", "lea~locale_code,<TAG>", "lea~rdx,<TAG>", "cmovnz~rax,rdx", "add~rsp,0", "pop~s", "pop~msgid", "retn"]]], "func_feature": [1, 4, 15, 0, 17, 28, 2, 66, 0.03824, 6, 4], "succs": [[9, 6], [0, 9], [9, 14], [9, 2], [], [9, 4], [9, 10], [8, 15], [9, 3], [], [9, 11], [9, 12], [9, 13], [16, 9], [9, 5], [9, 1], []], "fname": "gettext_quote", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 244, 1, 0, 2, 1, 0, 0, 0, 0.012314388120839733, ["add     r15, 2", "xor     r11d, r11d"], ["add~r15,0", "xor~r11d,r11d"]], [0, 0, 244, 0, 0, 3, 0, 0, 15, -1, 0.012570404505888377, ["lea     rax, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_7BFD"], ["lea~rax,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [r8+r15+1], 27h ; '''"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 1, 1, 0, 12, -1, 0.068868407578085, ["xor     ebp, ebp"], ["xor~ebp,ebp"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.07517665130568356, ["cmp     [rsp+0F8h+backslash_escapes], 0", "jz      loc_7EB0"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0033371735791090634, ["mov     eax, 0Bh; jumptable 00000000000083DE case 11", "xor     r10d, r10d", "mov     ebx, 76h ; 'v'", "jmp     c_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [0, 0, 244, 1, 0, 5, 0, 1, 9, -1, 0.10265307646356034, ["lea     rcx, off_12548", "movzx   edx, bl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [0, 0, 244, 0, 0, 2, 0, 0, 14, -1, 0.483115719406042, ["cmp     r15, r13", "jnb     short loc_7C0D"], ["cmp~r15,r13", "jnb~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 13, -1, 0.3581669226830517, ["test    dl, dl", "jz      short loc_7C04"], ["test~dl,dl", "jz~FOO"]], [2, 0, 244, 2, 0, 3, 0, 1, 16, -1, 0.08147721454173067, ["add     r15, 1", "add     i, 1", "jmp     loc_7C04"], ["add~r15,0", "add~i,0", "jmp~FOO"]], [4, 0, 244, 3, 0, 6, 1, 0, 20, -1, 0.048067076292882746, ["and     ebx, 7", "add     i, 1", "add     r15, 3", "add     ebx, 30h ; '0'", "cmp     ilim, r12", "jbe     loc_7C04"], ["and~ebx,0", "add~i,0", "add~r15,0", "add~ebx,0", "cmp~ilim,r12", "jbe~FOO"]], [0, 0, 244, 0, 0, 1, 0, 0, 15, -1, 0.0, ["mov     [r8+r15], bl"], ["mov~<TAG>,bl"]], [1, 0, 244, 0, 0, 2, 0, 1, 13, -1, 0.09182881037719746, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     loc_8870"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 6, 0, 0, 13, -1, 0.007692225635774024, ["mov     edx, ebx", "shr     dl, 5", "movzx   edx, dl", "mov     edx, [rsi+rdx*4]", "bt      edx, ebx", "jb      store_escape"], ["mov~edx,ebx", "shr~dl,0", "movzx~edx,dl", "mov~edx,<TAG>", "bt~edx,ebx", "jb~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 13, -1, 0.24687339989759344, ["test    r10b, r10b", "jnz     store_escape"], ["test~r10b,r10b", "jnz~FOO"]], [0, 0, 244, 0, 0, 1, 0, 1, 15, -1, 0.006477214541730671, ["jmp     loc_7F7A"], ["jmp~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 14, -1, 0.0670762928827445, ["cmp     m, 1", "ja      loc_7F8C"], ["cmp~m,0", "ja~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.01966771206690559, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jz      loc_7D15"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 10, -1, 0.03003637566137566, ["cmp     [rsp+0F8h+quoting_style], 2; jumptable 0000000000007B8E case 92", "jz      loc_8608"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 247, 0, 0, 2, 0, 1, 3, 0, 0.00010240655401945725, ["mov     [rsp+0F8h+backslash_escapes], 0", "jmp     loc_799A"], ["mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 249, 0, 0, 8, 3, 1, 2, 1, 0.00010240655401945725, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000007971 case 2", "mov     ecx, eax", "and     eax, 4", "and     ecx, 1", "test    ebx, ebx", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+var_84], ecx", "jz      loc_8CA5"], ["mov~eax,[rsp+0]", "mov~ecx,eax", "and~eax,0", "and~ecx,0", "test~ebx,ebx", "mov~[rsp+0],eax", "mov~[rsp+0],ecx", "jz~FOO"]], [0, 0, 254, 0, 1, 5, 0, 2, 4, -1, 0.0, ["mov     esi, [rsp+0F8h+quoting_style]; s", "mov     rdi, rcx; msgid", "call    gettext_quote", "mov     [rsp+0F8h+quote_string_0], rax", "jmp     loc_81C4"], ["mov~esi,[rsp+0]", "mov~rdi,rcx", "call~FOO", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 255, 0, 1, 9, 1, 2, 3, -1, 0.0001152073732718894, ["lea     rsi, asc_122CF; \"`\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rax", "mov     [rsp+0F8h+quote_string_0], rax", "lea     rax, asc_122CF; \"`\"", "cmp     rcx, rax", "jz      loc_8C00"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rax", "mov~[rsp+0],rax", "lea~rax,<TAG>", "cmp~rcx,rax", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 19, -1, 0.04832309267793139, ["lea     rdx, [r15+2]", "cmp     r13, len", "jbe     short loc_8025"], ["lea~rdx,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 18, -1, 0.04857910906298003, ["lea     rdx, [r15+1]", "cmp     r13, len", "jbe     short loc_800C"], ["lea~rdx,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [2, 0, 244, 1, 0, 4, 0, 0, 19, -1, 0.0, ["mov     edx, ebx", "shr     dl, 6", "add     edx, 30h ; '0'", "mov     [r8+r15+1], dl"], ["mov~edx,ebx", "shr~dl,0", "add~edx,0", "mov~[r8+0],dl"]], [2, 0, 249, 0, 0, 8, 3, 1, 2, -1, 0.00012800819252432156, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000007971 case 5", "mov     esi, eax", "and     eax, 4", "and     esi, 1", "test    ebx, ebx", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+var_84], esi", "jnz     loc_8B3B"], ["mov~eax,[rsp+0]", "mov~esi,eax", "and~eax,0", "and~esi,0", "test~ebx,ebx", "mov~[rsp+0],eax", "mov~[rsp+0],esi", "jnz~FOO"]], [0, 0, 278, 1, 0, 5, 0, 1, 1, 2, 0.003558627752176139, ["lea     rcx, off_12320", "mov     edx, r15d", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "mov~edx,r15d", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [1, 0, 244, 0, 0, 4, 2, 1, 14, -1, 0.08275729646697388, ["mov     eax, r11d", "xor     eax, 1", "and     al, [rsp+0F8h+var_E1]", "jz      short loc_7E4B"], ["mov~eax,r11d", "xor~eax,0", "and~al,[rsp+0]", "jz~FOO"]], [0, 0, 245, 0, 0, 1, 0, 1, 8, -1, 0.012544802867383513, ["jmp     loc_81FA"], ["jmp~FOO"]], [1, 0, 249, 1, 0, 5, 1, 1, 7, -1, 0.009575012800819252, ["mov     rax, [rsp+0F8h+quote_string_0]", "add     r15, 1", "movzx   eax, byte ptr [rax+len]", "test    al, al", "jnz     short loc_8A00"], ["mov~rax,[rsp+0]", "add~r15,0", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0008541346646185337, ["mov     eax, 0Ah; jumptable 00000000000083DE case 10", "xor     r10d, r10d", "mov     ebx, 6Eh ; 'n'", "jmp     c_and_shell_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 15, -1, 0.019162826420890938, ["cmp     buffersize_0, r15", "jbe     short loc_7E26"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [3, 0, 244, 1, 0, 5, 1, 0, 20, -1, 0.0, ["mov     edx, ebx", "shr     dl, 3", "and     edx, 7", "add     edx, 30h ; '0'", "mov     [r8+r15+2], dl"], ["mov~edx,ebx", "shr~dl,0", "and~edx,0", "add~edx,0", "mov~[r8+0],dl"]], [1, 0, 244, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 247, 0, 0, 2, 1, 1, 3, -1, 0.0001152073732718894, ["test    buffersize_0, buffersize_0", "jz      loc_88EF"], ["test~buffersize_0,buffersize_0", "jz~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 17, -1, 0.01282642089093702, ["cmp     buffersize_0, len", "jbe     short loc_8A2A"], ["cmp~buffersize_0,len", "jbe~FOO"]], [2, 0, 244, 1, 0, 6, 0, 0, 16, -1, 0.016001024065540194, ["mov     rax, [rsp+0F8h+arg]", "movzx   eax, byte ptr [rax+i+1]", "mov     byte ptr [rsp+0F8h+ps], al", "sub     eax, 30h ; '0'", "cmp     al, 9", "jbe     loc_8A20"], ["mov~rax,[rsp+0]", "movzx~eax,[yte ptr [rax+0]", "mov~[yte ptr [rsp+0],al", "sub~eax,0", "cmp~al,0", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 18, -1, 0.0, ["mov     byte ptr [r8+len], 30h ; '0'"], ["mov~<TAG>,0"]], [2, 0, 244, 1, 0, 7, 1, 1, 15, -1, 0.48285970302099335, ["movzx   edi, [rsp+0F8h+all_c_and_shell_quote_compat]", "add     r15, 1", "mov     eax, 0", "test    bpl, bpl", "cmovz   edi, eax", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], dil", "jmp     loc_7A98"], ["movzx~edi,[rsp+0]", "add~r15,0", "mov~eax,0", "test~bpl,bpl", "cmovz~edi,eax", "mov~[rsp+0],dil", "jmp~FOO"]], [1, 0, 244, 0, 0, 3, 0, 1, 8, -1, 0.10761979433350403, ["movzx   ebx, byte ptr [r9]", "cmp     bl, 7Eh ; '~'; switch 127 cases", "ja      loc_7F20; jumptable 00000000000083DE default case"], ["movzx~ebx,<TAG>", "cmp~bl,0", "ja~FOO"]], [0, 0, 244, 1, 1, 12, 1, 2, 12, -1, 0.07457757296466974, ["mov     rax, [rsp+0F8h+arg]", "lea     r15, [i+m]", "mov     rdx, [rsp+0F8h+pending_shell_escape_end]", "mov     rcx, [rsp+0F8h+ps]; ps", "mov     rdi, [rsp+0F8h+pwc]; pwc", "lea     r13, [rax+r15]", "sub     rdx, r15; n", "mov     rsi, r13; s", "call    rpl_mbrtowc", "test    rax, rax", "mov     r14, rax", "jz      short loc_87A0"], ["mov~rax,[rsp+0]", "lea~r15,<TAG>", "mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rdi,[rsp+0]", "lea~r13,<TAG>", "sub~rdx,r15", "mov~rsi,r13", "call~FOO", "test~rax,rax", "mov~r14,rax", "jz~FOO"]], [1, 0, 244, 1, 2, 10, 2, 3, 16, -1, 0.017895545314900153, ["mov     edi, [rsp+0F8h+w]; wc", "call    _iswprint", "mov     rdi, [rsp+0F8h+ps]; ps", "test    eax, eax", "mov     eax, 0", "cmovz   ebp, eax", "add     m, bytes", "call    _mbsinit", "test    eax, eax", "jz      short loc_872F"], ["mov~edi,[rsp+0]", "call~FOO", "mov~rdi,[rsp+0]", "test~eax,eax", "mov~eax,0", "cmovz~ebp,eax", "add~m,bytes", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 244, 0, 0, 12, 1, 0, 11, -1, 0.07342549923195084, ["lea     rax, [rsp+0F8h+w]", "xor     esi, esi", "mov     [rsp+0F8h+c], bl", "mov     [rsp+0F8h+var_6B], r11b", "mov     c_0, rsi", "mov     [rsp+0F8h+var_60], r9", "mov     [rsp+0F8h+pwc], rax", "mov     [rsp+0F8h+var_69], r10b", "mov     [rsp+0F8h+var_68], r15", "mov     [rsp+0F8h+var_80], r8", "mov     [rsp+0F8h+buffersize], buffersize_0", "mov     [rsp+0F8h+pending_shell_escape_end], r14"], ["lea~rax,[rsp+0]", "xor~esi,esi", "mov~[rsp+0],bl", "mov~[rsp+0],r11b", "mov~c_0,rsi", "mov~[rsp+0],r9", "mov~[rsp+0],rax", "mov~[rsp+0],r10b", "mov~[rsp+0],r15", "mov~[rsp+0],r8", "mov~[rsp+0],buffersize_0", "mov~[rsp+0],r14"]], [0, 0, 244, 0, 0, 3, 0, 0, 16, -1, 0.018906810035842294, ["lea     rdx, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_7E35"], ["lea~rdx,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 4, 0, 1, 18, -1, 0.013031233998975935, ["movzx   esi, byte ptr [rax]", "lea     ecx, [rsi-5Bh]", "cmp     cl, 21h ; '!'", "ja      short loc_8818"], ["movzx~esi,<TAG>", "lea~ecx,[rsi-5Bh]+0]", "cmp~cl,0", "ja~FOO"]], [0, 0, 244, 1, 0, 5, 0, 1, 17, -1, 0.013031233998975935, ["mov     rcx, [rsp+0F8h+arg]", "lea     bytes, [rcx+r15+1]", "add     rcx, bytes", "lea     r8, [rcx+r15]", "jmp     short loc_8825"], ["mov~rcx,[rsp+0]", "lea~bytes,[rcx+0]", "add~rcx,bytes", "lea~r8,<TAG>", "jmp~FOO"]], [1, 0, 244, 1, 0, 3, 0, 1, 19, -1, 0.008986175115207374, ["add     rax, 1", "cmp     r8, rax", "jz      loc_8779"], ["add~rax,0", "cmp~r8,rax", "jz~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 17, -1, 0.0, ["mov     byte ptr [r8+r15+1], 24h ; '$'"], ["mov~[yte ptr [r8+0],0"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.06694359105649428, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     loc_8880"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 10, -1, 0.05108305598224963, ["cmp     [rsp+0F8h+backslash_escapes], 0; jumptable 0000000000007B8E case 0", "jnz     loc_842B"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.0323618578255675, ["xor     r10d, r10d; jumptable 00000000000083DE case 0"], ["xor~r10d,r10d"]], [0, 0, 244, 0, 0, 3, 0, 0, 18, -1, 0.012570404505888377, ["lea     rax, [rdx+2]", "cmp     buffersize_0, len", "jbe     short loc_8A39"], ["lea~rax,[rdx+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 244, 0, 0, 2, 1, 0, 10, -1, 7.680491551459293e-05, ["xor     r10d, r10d; jumptable 00000000000083DE cases 35,126", "nop     dword ptr [rax+rax+00h]"], ["xor~r10d,r10d", "nop~[word ptr [rax+0]"]], [0, 0, 244, 0, 0, 3, 0, 0, 15, -1, 0.02322068612391193, ["lea     rax, [i+1]", "cmp     rax, argsize_0", "jnb     short loc_84B1"], ["lea~rax,[i+0]", "cmp~rax,argsize_0", "jnb~FOO"]], [0, 0, 10, 0, 0, 2, 0, 0, 12, -1, 0.01330005120327701, ["cmp     buffersize_0, len", "jbe     short loc_8BDC"], ["cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 10, 1, 0, 5, 1, 1, 13, -1, 0.0033922171018945214, ["mov     [r14+len], cl", "add     len, 1", "movzx   ecx, byte ptr [rax+len]", "test    cl, cl", "jnz     short loc_8BB1"], ["mov~<TAG>,cl", "add~len,0", "movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [1, 0, 10, 1, 0, 4, 1, 1, 13, -1, 0.0033410138248847927, ["add     len, 1", "movzx   ecx, byte ptr [rax+len]", "test    cl, cl", "jnz     short loc_8BB1"], ["add~len,0", "movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [0, 0, 10, 1, 0, 5, 1, 1, 11, -1, 0.01651305683563748, ["movzx   ecx, byte ptr [rax]", "sub     rax, r15", "mov     rdx, r15", "test    cl, cl", "jz      short loc_8BC9"], ["movzx~ecx,<TAG>", "sub~rax,r15", "mov~rdx,r15", "test~cl,cl", "jz~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 12, -1, 0.03147721454173067, ["test    buffersize_0, buffersize_0", "jz      loc_8897"], ["test~buffersize_0,buffersize_0", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.03295496245093021, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     short loc_8613"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 10, -1, 0.010921979006656478, ["test    i, i; jumptable 0000000000007B8E cases 35,126", "jz      loc_7D35"], ["test~i,i", "jz~FOO"]], [0, 0, 244, 1, 0, 5, 0, 1, 9, -1, 0.27496842464584326, ["lea     rcx, off_1234C", "movzx   edx, bl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [0, 0, 244, 0, 0, 1, 0, 1, 12, -1, 0.0005120327700972862, ["jmp     short loc_7C38; jumptable 0000000000007B8E cases 35,126"], ["jmp~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 17, -1, 0.01865079365079365, ["lea     len, [r15+2]", "cmp     buffersize_0, len", "jbe     short loc_7E44"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 18, -1, 0.0, ["mov     byte ptr [r8+r15+2], 27h ; '''"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 2, 0, 0, 19, -1, 0.03854326676907322, ["cmp     r13, r15", "jbe     short loc_8047"], ["cmp~r13,r15", "jbe~FOO"]], [1, 0, 244, 1, 0, 4, 2, 1, 20, -1, 0.012314388120839733, ["add     r15, 2", "xor     r10d, r10d", "xor     r11d, r11d", "jmp     short loc_803E"], ["add~r15,0", "xor~r10d,r10d", "xor~r11d,r11d", "jmp~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 18, -1, 0.013325652841781874, ["xor     r10d, r10d", "jmp     loc_803E"], ["xor~r10d,r10d", "jmp~FOO"]], [0, 0, 244, 0, 0, 1, 0, 0, 21, -1, 0.006810035842293907, ["mov     esi, eax"], ["mov~esi,eax"]], [0, 0, 244, 0, 0, 1, 0, 0, 20, -1, 0.0, ["mov     [r8+r15], bl"], ["mov~<TAG>,bl"]], [1, 0, 244, 0, 0, 2, 0, 1, 15, -1, 0.022452636968766, ["cmp     [rsp+0F8h+var_88], 0", "jnz     short loc_87F8"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 14, -1, 0.04779825908858167, ["cmp     bytes, 0FFFFFFFFFFFFFFFEh", "jz      loc_8923"], ["cmp~bytes,0", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 2, 1, 11, -1, 0.02067332309267793, ["xor     ebp, ebp", "xor     eax, eax", "jmp     loc_7BA2"], ["xor~ebp,ebp", "xor~eax,eax", "jmp~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 11, -1, 0.012442396313364055, ["test    al, al", "jnz     short loc_7C41"], ["test~al,al", "jnz~FOO"]], [1, 0, 244, 0, 0, 5, 1, 1, 19, -1, 0.012314388120839733, ["mov     eax, ebp", "lea     r15, [rdx+3]", "xor     ebp, ebp", "mov     ebx, 30h ; '0'", "jmp     loc_7BA2"], ["mov~eax,ebp", "lea~r15,[rdx+0]", "xor~ebp,ebp", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 19, -1, 0.0, ["mov     byte ptr [r8+rdx+2], 30h ; '0'"], ["mov~[yte ptr [r8+0],0"]], [1, 0, 244, 1, 0, 2, 0, 0, 18, -1, 0.018394777265745007, ["add     r15, 3", "mov     r11d, eax"], ["add~r15,0", "mov~r11d,eax"]], [1, 0, 244, 0, 0, 1, 0, 0, 14, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 244, 0, 0, 2, 0, 0, 13, -1, 0.019162826420890938, ["cmp     buffersize_0, r15", "jbe     short loc_844F"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 244, 1, 0, 2, 0, 0, 20, -1, 0.03828725038402458, ["movzx   ebx, byte ptr [rdi+r12]", "add     r15, 1"], ["movzx~ebx,<TAG>", "add~r15,0"]], [2, 1, 3, 2, 1, 14, 0, 2, 10, -1, 7.040450588837686e-05, ["sub     rsp, 8", "mov     r8d, 5; quoting_style", "mov     rcx, argsize_0; argsize", "push    [rsp+100h+quote_string]; right_quote", "push    [rsp+108h+quote_string_0]; left_quote", "mov     rdi, r14; buffer", "push    [rsp+110h+var_D8]; quote_these_too", "mov     r9d, [rsp+118h+flags]; flags", "mov     rdx, [rsp+118h+arg]; arg", "mov     rsi, [rsp+118h+orig_buffersize]; buffersize", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r15, len", "jmp     loc_7DB3"], ["sub~rsp,0", "mov~r8d,0", "mov~rcx,argsize_0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdi,r14", "push~[rsp+0]", "mov~r9d,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "call~FOO", "add~rsp,<STR>", "mov~r15,len", "jmp~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 9, -1, 0.027208141321044547, ["cmp     [rsp+0F8h+all_c_and_shell_quote_compat], 0", "jnz     loc_8C16"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 15, -1, 0.08173323092677931, ["cmp     buffersize_0, r15", "jbe     short loc_7E55"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.00015360983102918587, ["xor     r10d, r10d; jumptable 00000000000083DE cases 123,125"], ["xor~r10d,r10d"]], [9, 0, 245, 0, 0, 10, 1, 0, 4, -1, 0.0015873015873015873, ["mov     byte ptr [buffer], 22h ; '\"'", "mov     [rsp+0F8h+var_87], 0", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 1", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0"], ["mov~<TAG>,0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [0, 0, 244, 0, 0, 3, 0, 0, 14, -1, 0.018906810035842294, ["lea     rdx, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_845E"], ["lea~rdx,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 13, 0, 0, 2, 0, 1, 11, -1, 0.0002944188428059396, ["movzx   edx, [rsp+0F8h+encountered_single_quote]", "jmp     loc_8B96"], ["movzx~edx,[rsp+0]", "jmp~FOO"]], [1, 0, 244, 0, 0, 6, 2, 1, 10, -1, 0.02375832053251408, ["test    buffersize_0, buffersize_0", "setz    al", "cmp     [rsp+0F8h+orig_buffersize], 0", "setnz   dl", "and     al, dl", "jz      loc_8C52"], ["test~buffersize_0,buffersize_0", "setz~al", "cmp~[rsp+0],0", "setnz~dl", "and~al,dl", "jz~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 15, -1, 0.0, ["mov     byte ptr [r8+r15+1], 24h ; '$'"], ["mov~[yte ptr [r8+0],0"]], [1, 0, 244, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [r8+r15], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [2, 0, 244, 0, 0, 4, 0, 1, 10, -1, 0.012698412698412698, ["cmp     argsize_0, 1; jumptable 0000000000007B8E cases 123,125", "setnz   al", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_7C6C"], ["cmp~argsize_0,0", "setnz~al", "cmp~argsize_0,0", "jnz~FOO"]], [1, 0, 244, 0, 0, 5, 3, 1, 15, -1, 0.130094726062468, ["mov     edx, esi", "xor     edx, 1", "and     edx, r11d", "test    r10b, r10b", "jz      short loc_8073"], ["mov~edx,esi", "xor~edx,0", "and~edx,r11d", "test~r10b,r10b", "jz~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 14, -1, 0.18753200204813109, ["test    al, al", "jnz     loc_7FA8"], ["test~al,al", "jnz~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 15, -1, 0.01865079365079365, ["lea     len, [r15+2]", "cmp     buffersize_0, len", "jbe     short loc_846D"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [r8+r15+2], 27h ; '''"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 2, 0, 0, 16, -1, 0.006438812083973375, ["cmp     r13, r15", "jbe     short loc_806F"], ["cmp~r13,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 3, 0, 0, 11, -1, 0.0, ["mov     rax, [rsp+0F8h+arg]", "cmp     byte ptr [rax+1], 0", "setnz   al"], ["mov~rax,[rsp+0]", "cmp~[yte ptr [rax+0],0", "setnz~al"]], [1, 0, 244, 0, 0, 1, 0, 0, 17, -1, 0.0, ["mov     byte ptr [r8+r15], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 1, 244, 0, 0, 2, 0, 1, 10, -1, 0.001116551459293393, ["mov     ebx, 20h ; ' '; jumptable 0000000000007B8E case 32", "jmp     loc_7D35"], ["mov~ebx,<STR>", "jmp~FOO"]], [1, 0, 244, 1, 0, 1, 0, 0, 17, -1, 0.006182795698924731, ["add     r15, 1"], ["add~r15,0"]], [0, 0, 244, 0, 0, 2, 0, 0, 12, -1, 0.003008192524321557, ["movzx   r10d, [rsp+0F8h+var_E2]", "nop     dword ptr [rax+rax+00000000h]"], ["movzx~r10d,[rsp+0]", "nop~[word ptr [rax+0]"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.004444551117938213, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     loc_8880"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 16, -1, 0.016129032258064516, ["cmp     bytes, 1", "jz      loc_8779"], ["cmp~bytes,0", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.011404783239460729, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     short loc_8613"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.07144062553336734, ["mov     eax, [rsp+0F8h+quoting_style]; jumptable 0000000000007B8E case 63", "cmp     eax, 2", "jz      loc_8670"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 14, -1, 0.005692097627581498, ["mov     c_and_shell_quote_compat_0, argsize_0", "mov     argsize_0, r8", "jmp     force_outer_quoting_style"], ["mov~c_and_shell_quote_compat_0,argsize_0", "mov~argsize_0,r8", "jmp~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 17, -1, 0.04883512544802868, ["cmp     r13, r15", "jbe     short loc_7FF6"], ["cmp~r13,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 18, -1, 0.0, ["mov     byte ptr [r8+r15], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.0008960573476702509, ["xor     r10d, r10d; jumptable 00000000000083DE case 63"], ["xor~r10d,r10d"]], [1, 0, 244, 0, 0, 1, 0, 0, 14, -1, 0.0, ["mov     byte ptr [r8+len], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 0, 244, 0, 0, 2, 0, 0, 13, -1, 0.06386222051544631, ["cmp     buffersize_0, len", "jbe     short loc_847E"], ["cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 1, 0, 3, 0, 0, 16, -1, 0.1295826932923707, ["add     i, 1", "cmp     r12, ilim", "jnb     store_c"], ["add~i,0", "cmp~r12,ilim", "jnb~FOO"]], [10, 0, 244, 0, 1, 25, 4, 2, 4, -1, 0.03748079877112135, ["mov     r12, [rsp+0F8h+quote_string]", "test    ebx, ebx", "setnz   [rsp+0F8h+var_85]", "movzx   ebx, [rsp+0F8h+var_85]", "mov     rdi, r12; s", "call    _strlen", "mov     [rsp+0F8h+quote_string_len], rax", "mov     eax, [rsp+0F8h+flags]", "xor     r11d, r11d", "mov     [rsp+0F8h+c_and_shell_quote_compat], bl", "mov     [rsp+0F8h+s2], r12", "mov     [rsp+0F8h+var_87], 0", "mov     [rsp+0F8h+var_88], 0", "mov     ecx, eax", "and     eax, 4", "mov     [rsp+0F8h+var_E1], 0", "and     ecx, 1", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+var_E2], 1", "mov     [rsp+0F8h+var_84], ecx", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+backslash_escapes], 1", "jmp     loc_7A88"], ["mov~r12,[rsp+0]", "test~ebx,ebx", "setnz~[rsp+0]", "movzx~ebx,[rsp+0]", "mov~rdi,r12", "call~FOO", "mov~[rsp+0],rax", "mov~eax,[rsp+0]", "xor~r11d,r11d", "mov~[rsp+0],bl", "mov~[rsp+0],r12", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~ecx,eax", "and~eax,0", "mov~[rsp+0],0", "and~ecx,0", "mov~[rsp+0],eax", "mov~[rsp+0],0", "mov~[rsp+0],ecx", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 250, 0, 0, 4, 1, 1, 4, -1, 0.0005120327700972862, ["mov     rax, [rsp+0F8h+quote_string_0]", "movzx   eax, byte ptr [rax]", "test    al, al", "jz      loc_81FA"], ["mov~rax,[rsp+0]", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 251, 0, 0, 3, 2, 1, 3, -1, 0.016244239631336404, ["xor     r15d, r15d", "test    ebx, ebx", "jz      loc_89EC"], ["xor~r15d,r15d", "test~ebx,ebx", "jz~FOO"]], [1, 0, 244, 0, 0, 4, 2, 1, 12, -1, 0.009927035330261137, ["xor     ebp, ebp", "xor     eax, eax", "mov     ebx, 3Fh ; '?'", "jmp     loc_7BCB"], ["xor~ebp,ebp", "xor~eax,eax", "mov~ebx,0", "jmp~FOO"]], [4, 0, 244, 0, 0, 7, 0, 0, 5, -1, 0.009370199692780337, ["lea     rax, unk_122CB", "mov     [rsp+0F8h+c_and_shell_quote_compat], 0", "mov     [rsp+0F8h+backslash_escapes], 1", "mov     [rsp+0F8h+quote_string_len], 1", "mov     r15d, 1", "mov     [rsp+0F8h+s2], rax", "nop     dword ptr [rax+rax+00h]"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r15d,0", "mov~[rsp+0],rax", "nop~[word ptr [rax+0]"]], [8, 0, 245, 0, 0, 10, 1, 1, 4, -1, 0.0015873015873015873, ["mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+var_87], 0", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 1", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+encountered_single_quote], 0", "jmp     loc_7A5B"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 244, 0, 0, 3, 0, 1, 16, -1, 0.007648489503328213, ["mov     rdx, buffersize_0", "mov     buffersize_0, [rsp+0F8h+orig_buffersize]", "jmp     loc_864E"], ["mov~rdx,buffersize_0", "mov~buffersize_0,[rsp+0]", "jmp~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 15, -1, 0.018663594470046084, ["lea     len, [r15+2]", "cmp     buffersize_0, len", "jbe     loc_8C7D"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 244, 0, 0, 1, 0, 1, 13, -1, 0.005603558627752176, ["jmp     loc_7BCB"], ["jmp~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 12, -1, 0.0123410564942823, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     loc_7BAD"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.05666922683051715, ["cmp     eax, 5", "jnz     short loc_7CB8"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 19, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 244, 0, 0, 2, 0, 0, 18, -1, 0.01282642089093702, ["cmp     r13, r15", "jbe     short loc_8092"], ["cmp~r13,r15", "jbe~FOO"]], [0, 0, 244, 0, 0, 4, 1, 0, 3, -1, 0.13227086533538146, ["mov     r8, r14", "xor     r12d, r12d", "mov     r14, argsize_0", "nop     dword ptr [rax+00000000h]"], ["mov~r8,r14", "xor~r12d,r12d", "mov~r14,argsize_0", "nop~[word ptr [rax+0]"]], [12, 0, 244, 0, 0, 16, 1, 1, 5, -1, 0.009331797235023042, ["lea     rax, asc_122CD; \"'\"", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+var_87], 1", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 1", "xor     r11d, r11d", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 0", "mov     r15d, 1", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 0", "mov     [rsp+0F8h+quote_string_len], 1", "mov     [rsp+0F8h+s2], rax", "mov     [rsp+0F8h+quoting_style], 2", "jmp     loc_7A88"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r15d,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [14, 0, 244, 0, 0, 23, 4, 1, 2, -1, 0.0020737327188940094, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000007971 case 6", "mov     [rsp+0F8h+var_87], 0", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "xor     r15d, r15d", "mov     [rsp+0F8h+var_85], 1", "mov     [rsp+0F8h+var_E2], 1", "mov     ecx, eax", "and     eax, 4", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+var_70], eax", "lea     rax, unk_122CB", "and     ecx, 1", "mov     [rsp+0F8h+var_84], ecx", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+backslash_escapes], 1", "mov     [rsp+0F8h+quote_string_len], 1", "mov     [rsp+0F8h+s2], rax", "mov     [rsp+0F8h+quoting_style], 5", "jmp     loc_7A88"], ["mov~eax,[rsp+0]", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~ecx,eax", "and~eax,0", "mov~[rsp+0],0", "mov~[rsp+0],eax", "lea~rax,<TAG>", "and~ecx,0", "mov~[rsp+0],ecx", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "jmp~FOO"]], [14, 0, 244, 0, 0, 21, 4, 1, 2, -1, 0.0020737327188940094, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000007971 case 7", "mov     [rsp+0F8h+var_87], 0", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "xor     r15d, r15d", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 1", "mov     ecx, eax", "and     eax, 4", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "and     ecx, 1", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+var_84], ecx", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 0", "mov     [rsp+0F8h+backslash_escapes], 1", "mov     [rsp+0F8h+quote_string_len], 0", "mov     [rsp+0F8h+s2], 0", "jmp     loc_7A88"], ["mov~eax,[rsp+0]", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~ecx,eax", "and~eax,0", "mov~[rsp+0],0", "and~ecx,0", "mov~[rsp+0],eax", "mov~[rsp+0],0", "mov~[rsp+0],ecx", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 244, 0, 0, 6, 1, 1, 3, -1, 0.012480798771121352, ["lea     rax, asc_122CD; \"'\"", "mov     [rsp+0F8h+quote_string_len], 1", "xor     r15d, r15d", "mov     [rsp+0F8h+quoting_style], 2", "mov     [rsp+0F8h+s2], rax", "jmp     loc_7A88"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [14, 0, 244, 0, 0, 21, 4, 1, 2, -1, 0.0020737327188940094, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000007971 case 0", "mov     [rsp+0F8h+var_87], 1", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "xor     r15d, r15d", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 0", "mov     esi, eax", "and     eax, 4", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "and     esi, 1", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+var_84], esi", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 0", "mov     [rsp+0F8h+backslash_escapes], 0", "mov     [rsp+0F8h+quote_string_len], 0", "mov     [rsp+0F8h+s2], 0", "jmp     loc_7A88"], ["mov~eax,[rsp+0]", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~esi,eax", "and~eax,0", "mov~[rsp+0],0", "and~esi,0", "mov~[rsp+0],eax", "mov~[rsp+0],0", "mov~[rsp+0],esi", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [10, 0, 244, 0, 0, 15, 0, 1, 6, -1, 0.023169482846902203, ["lea     rsi, asc_122CD; \"'\"", "mov     byte ptr [r14], 27h ; '''", "mov     [rsp+0F8h+quoting_style], 2", "mov     r15d, 1", "mov     [rsp+0F8h+quote_string_len], 1", "mov     [rsp+0F8h+c_and_shell_quote_compat], 0", "mov     [rsp+0F8h+s2], rsi", "mov     [rsp+0F8h+var_E2], 0", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E1], 1", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_87], 1", "mov     [rsp+0F8h+encountered_single_quote], al", "mov     [rsp+0F8h+orig_buffersize], rdx", "jmp     loc_7A88"], ["lea~rsi,<TAG>", "mov~<TAG>,0", "mov~[rsp+0],0", "mov~r15d,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rsi", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],al", "mov~[rsp+0],rdx", "jmp~FOO"]], [11, 0, 244, 0, 0, 16, 2, 1, 3, -1, 0.0031105990783410137, ["lea     rax, asc_122CD; \"'\"", "mov     [rsp+0F8h+var_87], 1", "mov     [rsp+0F8h+var_88], 1", "mov     [rsp+0F8h+var_E1], 1", "mov     [rsp+0F8h+var_85], 0", "xor     r11d, r11d", "mov     [rsp+0F8h+var_E2], 0", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "xor     r15d, r15d", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+backslash_escapes], 0", "mov     [rsp+0F8h+quote_string_len], 1", "mov     [rsp+0F8h+s2], rax", "jmp     loc_7A88"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [11, 0, 244, 0, 0, 16, 2, 1, 3, -1, 0.003123399897593446, ["lea     rax, unk_122CB", "mov     [rsp+0F8h+var_87], 0", "mov     [rsp+0F8h+var_88], 0", "mov     [rsp+0F8h+var_E1], 0", "mov     [rsp+0F8h+var_85], 1", "xor     r11d, r11d", "mov     [rsp+0F8h+var_E2], 1", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "xor     r15d, r15d", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+backslash_escapes], 1", "mov     [rsp+0F8h+quote_string_len], 1", "mov     [rsp+0F8h+s2], rax", "jmp     loc_7A88"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r15d,r15d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 6, 0, 0, 5, 0, 1, 12, -1, 0.004069700460829493, ["movzx   eax, [rsp+0F8h+c_and_shell_quote_compat]", "mov     rbp, argsize_0", "mov     argsize_0, r8", "mov     [rsp+0F8h+backslash_escapes], al", "jmp     force_outer_quoting_style"], ["movzx~eax,[rsp+0]", "mov~rbp,argsize_0", "mov~argsize_0,r8", "mov~[rsp+0],al", "jmp~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 15, -1, 0.054070660522273425, ["test    r9b, r9b", "jnz     loc_8880"], ["test~r9b,r9b", "jnz~FOO"]], [1, 0, 244, 0, 0, 3, 0, 1, 14, -1, 0.06360620413039766, ["cmp     [rsp+0F8h+quoting_style], 2", "lea     r15, [len+1]", "jz      loc_88D0"], ["cmp~[rsp+0],0", "lea~r15,[len+0]", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 1, 1, 12, -1, 0.05038829151732377, ["mov     eax, [rsp+0F8h+var_70]", "test    eax, eax", "jz      short loc_7CB8"], ["mov~eax,[rsp+0]", "test~eax,eax", "jz~FOO"]], [0, 0, 249, 0, 0, 2, 0, 0, 6, -1, 0.003533026113671275, ["cmp     buffersize_0, r15", "jbe     short loc_8A09"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [0, 0, 249, 0, 0, 1, 0, 0, 7, -1, 0.0, ["mov     [buffer+r15], al"], ["mov~<TAG>,al"]], [0, 0, 244, 0, 0, 3, 0, 0, 19, -1, 0.012570404505888377, ["lea     rdx, [r15+1]", "cmp     r13, len", "jbe     short loc_80A1"], ["lea~rdx,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 13, -1, 0.019175627240143368, ["cmp     buffersize_0, r15", "jbe     short loc_88A1"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 3, 1, 1, 13, -1, 0.00902457757296467, ["xor     edx, edx", "cmp     [rsp+0F8h+orig_buffersize], 0", "jnz     loc_8897"], ["xor~edx,edx", "cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 20, -1, 0.0, ["mov     byte ptr [r8+r15+1], 27h ; '''"], ["mov~[yte ptr [r8+0],0"]], [1, 0, 244, 0, 0, 1, 0, 0, 14, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 244, 0, 0, 3, 0, 0, 13, -1, 0.04740570063150708, ["lea     rdx, [i+2]", "cmp     rdx, argsize_0", "jnb     short loc_7CB8"], ["lea~rdx,[i+0]", "cmp~rdx,argsize_0", "jnb~FOO"]], [0, 0, 12, 0, 0, 3, 1, 1, 9, -1, 0.029653097798259087, ["mov     rax, [rsp+0F8h+s2]", "test    rax, rax", "jz      short loc_8BC9"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 8, -1, 0.043561187916026624, ["cmp     [rsp+0F8h+encountered_single_quote], 0", "jz      loc_8B96"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 8, -1, 0.01607782898105479, ["mov     edx, eax"], ["mov~edx,eax"]], [1, 0, 244, 0, 0, 4, 0, 1, 4, -1, 0.6334485407066052, ["cmp     argsize_0, i", "setnz   bpl", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_7AB3"], ["cmp~argsize_0,i", "setnz~bpl", "cmp~argsize_0,0", "jnz~FOO"]], [1, 0, 244, 1, 0, 2, 0, 1, 12, -1, 0.012224782386072709, ["add     i, 1", "jmp     loc_7A98"], ["add~i,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 5, 0, 1, 10, -1, 0.07368151561699948, ["lea     rax, [rsp+0F8h+mbstate]", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "mov     qword ptr [rsp+0F8h+mbstate.__count], 0", "mov     [rsp+0F8h+ps], rax", "jnz     short loc_86E4"], ["lea~rax,[rsp+0]", "cmp~argsize_0,0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],rax", "jnz~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 9, -1, 0.17191500256016384, ["cmp     [rsp+0F8h+var_98], 1; jumptable 0000000000007B8E default case", "jnz     loc_8688"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 244, 0, 0, 4, 2, 1, 11, -1, 0.01624530636627411, ["mov     edx, [rsp+0F8h+var_84]", "xor     eax, eax", "test    edx, edx", "jnz     loc_88DE"], ["mov~edx,[rsp+0]", "xor~eax,eax", "test~edx,edx", "jnz~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 16, -1, 0.018394777265745007, ["lea     len, [r15+3]", "mov     r11d, eax"], ["lea~len,[r15+0]", "mov~r11d,eax"]], [1, 0, 244, 0, 0, 1, 0, 0, 15, -1, 0.0, ["mov     byte ptr [r8+r15+1], 5Ch ; '\\'"], ["mov~[yte ptr [r8+0],0"]], [0, 0, 244, 0, 0, 3, 0, 0, 14, -1, 0.018919610855094728, ["lea     rax, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_88B0"], ["lea~rax,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 244, 0, 0, 1, 0, 0, 12, -1, 0.0006539085168117425, ["nop     dword ptr [c_0+00h]"], ["nop~[word ptr [c_0+0]"]], [1, 0, 244, 0, 0, 3, 0, 1, 14, -1, 0.04441030892643796, ["mov     rax, [rsp+0F8h+arg]", "cmp     byte ptr [rax+i+1], 3Fh ; '?'", "jz      loc_8AC8"], ["mov~rax,[rsp+0]", "cmp~[yte ptr [rax+0],0", "jz~FOO"]], [1, 0, 244, 0, 0, 3, 0, 0, 5, -1, 0.0, ["mov     rax, [rsp+0F8h+arg]", "cmp     byte ptr [rax+i], 0", "setnz   bpl"], ["mov~rax,[rsp+0]", "cmp~<TAG>,0", "setnz~bpl"]], [0, 0, 249, 0, 0, 1, 0, 0, 5, -1, 0.0004608294930875576, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 244, 0, 0, 1, 0, 0, 15, -1, 0.0014400921658986176, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 244, 0, 0, 3, 2, 0, 12, -1, 0.006706135859361665, ["mov     ebx, eax", "xor     ebp, ebp", "xor     eax, eax"], ["mov~ebx,eax", "xor~ebp,ebp", "xor~eax,eax"]], [1, 0, 6, 0, 0, 7, 0, 1, 20, -1, 0.0005376344086021505, ["movzx   eax, [rsp+0F8h+var_88]", "mov     bytes, [rsp+0F8h+var_80]", "mov     r13, [rsp+0F8h+buffersize]", "mov     printable, [rsp+0F8h+pending_shell_escape_end]", "mov     [rsp+0F8h+quoting_style], 2", "mov     [rsp+0F8h+var_E1], al", "jmp     force_outer_quoting_style"], ["movzx~eax,[rsp+0]", "mov~bytes,[rsp+0]", "mov~r13,[rsp+0]", "mov~printable,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],al", "jmp~FOO"]], [2, 0, 244, 1, 0, 5, 1, 1, 19, -1, 0.003699436763952893, ["mov     edx, 1", "shl     rdx, cl", "mov     rcx, 20000002Bh", "test    rdx, rcx", "jz      short loc_8818"], ["mov~edx,0", "shl~rdx,cl", "mov~rcx,0", "test~rdx,rcx", "jz~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 5, -1, 0.6331925243215566, ["test    bpl, bpl", "jz      loc_8550"], ["test~bpl,bpl", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 21, -1, 0.02761136712749616, ["lea     len, [r15+3]", "cmp     buffersize_0, len", "jbe     short loc_8B2B"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 20, -1, 0.027867383512544804, ["lea     len, [r15+2]", "cmp     buffersize_0, len", "jbe     short loc_8B1C"], ["lea~len,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 21, -1, 0.0, ["mov     byte ptr [r8+r15+2], 22h ; '\"'"], ["mov~[yte ptr [r8+0],0"]], [10, 0, 245, 0, 0, 11, 1, 0, 3, -1, 0.006259600614439324, ["mov     [rsp+0F8h+var_87], 1", "mov     [rsp+0F8h+var_88], 1", "xor     r11d, r11d", "mov     [rsp+0F8h+var_E1], 1", "mov     [rsp+0F8h+var_85], 0", "mov     [rsp+0F8h+var_E2], 0", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+backslash_escapes], 0"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0"]], [2, 0, 250, 0, 0, 8, 3, 1, 2, -1, 8.960573476702509e-05, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000007971 case 4", "mov     esi, eax", "and     eax, 4", "and     esi, 1", "test    ebx, ebx", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+var_84], esi", "jnz     loc_8286"], ["mov~eax,[rsp+0]", "mov~esi,eax", "and~eax,0", "and~esi,0", "test~ebx,ebx", "mov~[rsp+0],eax", "mov~[rsp+0],esi", "jnz~FOO"]], [2, 0, 246, 0, 0, 6, 2, 0, 2, -1, 1.2800819252432156e-05, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000007971 case 1", "mov     esi, eax", "and     eax, 4", "and     esi, 1", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+var_84], esi"], ["mov~eax,[rsp+0]", "mov~esi,eax", "and~eax,0", "and~esi,0", "mov~[rsp+0],eax", "mov~[rsp+0],esi"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.15902927120669055, ["cmp     [rsp+0F8h+var_87], 0", "jnz     loc_7EB6"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 244, 0, 0, 1, 0, 1, 17, -1, 0.003059395801331285, ["jmp     short loc_8997"], ["jmp~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 16, -1, 0.012852022529441884, ["cmp     byte ptr [rsi], 0", "jnz     short loc_8987"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 244, 0, 0, 4, 2, 1, 12, -1, 0.020451442225635774, ["xor     ebp, ebp", "xor     eax, eax", "mov     ebx, 3Fh ; '?'", "jmp     loc_7BA2"], ["xor~ebp,ebp", "xor~eax,eax", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 3, 0, 1, 15, -1, 0.03960360129714968, ["movzx   ebx, byte ptr [rax+rdx]", "cmp     bl, 3Eh ; '>'", "ja      loc_7CB8"], ["movzx~ebx,<TAG>", "cmp~bl,0", "ja~FOO"]], [1, 0, 244, 0, 0, 3, 0, 0, 16, -1, 0.03512971496842464, ["mov     rax, 7000A38200000000h", "bt      rax, rbx", "jnb     loc_7CB8"], ["mov~rax,0", "bt~rax,rbx", "jnb~FOO"]], [1, 0, 244, 0, 0, 4, 0, 1, 16, -1, 0.007648489503328213, ["mov     rdx, buffersize_0", "mov     byte ptr [r8+r15+2], 27h ; '''", "mov     buffersize_0, [rsp+0F8h+orig_buffersize]", "jmp     loc_864E"], ["mov~rdx,buffersize_0", "mov~[yte ptr [r8+0],0", "mov~buffersize_0,[rsp+0]", "jmp~FOO"]], [2, 0, 244, 1, 0, 8, 2, 1, 14, -1, 0.030325140809011778, ["mov     [rsp+0F8h+orig_buffersize], r13", "add     r15, 3", "xor     eax, eax", "mov     [rsp+0F8h+encountered_single_quote], bpl", "xor     r11d, r11d", "mov     r13, rdx", "mov     ebx, 27h ; '''", "jmp     loc_7BCB"], ["mov~[rsp+0],r13", "add~r15,0", "xor~eax,eax", "mov~[rsp+0],bpl", "xor~r11d,r11d", "mov~r13,rdx", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 4, 0, 1, 6, -1, 0.5573604710701485, ["cmp     [rsp+0F8h+var_E2], 0", "mov     rdi, [rsp+0F8h+arg]; s", "lea     r9, [rdi+i]", "jz      loc_83B0"], ["cmp~[rsp+0],0", "mov~rdi,[rsp+0]", "lea~r9,<TAG>", "jz~FOO"]], [1, 0, 244, 0, 0, 5, 2, 1, 12, -1, 0.0648862860556409, ["mov     eax, r11d", "mov     rdx, r15", "xor     eax, 1", "and     al, [rsp+0F8h+var_E1]", "jz      short loc_8474"], ["mov~eax,r11d", "mov~rdx,r15", "xor~eax,0", "and~al,[rsp+0]", "jz~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0008541346646185337, ["mov     eax, 0Dh; jumptable 00000000000083DE case 13", "xor     r10d, r10d", "mov     ebx, 72h ; 'r'", "jmp     c_and_shell_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.0005120327700972862, ["xor     r10d, r10d; jumptable 00000000000083DE case 39"], ["xor~r10d,r10d"]], [0, 0, 0, 0, 1, 1, 0, 1, 11, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 10, -1, 0.0070916538658474144, ["mov     rsi, [rsp+0F8h+var_40]", "xor     rsi, fs:28h", "mov     rax, r15", "jnz     loc_8C78"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~rax,r15", "jnz~FOO"]], [0, 0, 244, 0, 0, 2, 1, 0, 9, -1, 0.0024193548387096775, ["xor     r10d, r10d; jumptable 00000000000083DE default case", "nop     dword ptr [rax+rax+00h]"], ["xor~r10d,r10d", "nop~[word ptr [rax+0]"]], [0, 0, 244, 0, 0, 3, 0, 0, 18, -1, 0.018906810035842294, ["lea     rsi, [r15+1]", "cmp     r13, len", "jbe     short loc_7FD6"], ["lea~rsi,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 17, -1, 0.019162826420890938, ["cmp     r13, r15", "jbe     short loc_7FC7"], ["cmp~r13,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 18, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]], [1, 0, 244, 0, 0, 2, 0, 1, 10, -1, 0.04204354412015711, ["cmp     [rsp+0F8h+quoting_style], 2; jumptable 0000000000007B8E case 39", "jz      loc_8630"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 244, 0, 0, 4, 1, 1, 15, -1, 0.03701890254309609, ["mov     eax, ebp", "mov     ebx, 30h ; '0'", "xor     ebp, ebp", "jmp     loc_7BCB"], ["mov~eax,ebp", "mov~ebx,0", "xor~ebp,ebp", "jmp~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.003680235535074245, ["mov     eax, 7; jumptable 0000000000007B8E case 7", "mov     ebx, 61h ; 'a'", "jmp     c_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [0, 0, 244, 0, 1, 11, 0, 1, 11, -1, 0.0, ["mov     rdi, [rsp+0F8h+arg]; s", "mov     [rsp+0F8h+buffersize], r8", "mov     byte ptr [rsp+0F8h+var_80], r11b", "mov     byte ptr [rsp+0F8h+pwc], r10b", "mov     [rsp+0F8h+pending_shell_escape_end], r9", "call    _strlen", "movzx   r11d, byte ptr [rsp+0F8h+var_80]", "movzx   r10d, byte ptr [rsp+0F8h+pwc]", "mov     argsize_0, rax", "mov     r8, [rsp+0F8h+buffersize]", "mov     r9, [rsp+0F8h+pending_shell_escape_end]"], ["mov~rdi,[rsp+0]", "mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[yte ptr [rsp+0],r10b", "mov~[rsp+0],r9", "call~FOO", "movzx~r11d,[yte ptr [rsp+0]", "movzx~r10d,[yte ptr [rsp+0]", "mov~argsize_0,rax", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]"]], [12, 0, 245, 0, 0, 18, 3, 1, 2, -1, 2.560163850486431e-05, ["mov     eax, [rsp+0F8h+flags]; jumptable 0000000000007971 case 3", "mov     [rsp+0F8h+var_87], 1", "xor     r11d, r11d", "mov     [rsp+0F8h+var_88], 1", "mov     [rsp+0F8h+var_E1], 1", "mov     [rsp+0F8h+var_85], 1", "mov     [rsp+0F8h+var_E2], 0", "mov     esi, eax", "and     eax, 4", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "and     esi, 1", "mov     [rsp+0F8h+var_70], eax", "mov     [rsp+0F8h+encountered_single_quote], 0", "mov     [rsp+0F8h+var_84], esi", "mov     [rsp+0F8h+orig_buffersize], 0", "mov     [rsp+0F8h+c_and_shell_quote_compat], 1", "mov     [rsp+0F8h+backslash_escapes], 1", "jmp     loc_82C2"], ["mov~eax,[rsp+0]", "mov~[rsp+0],0", "xor~r11d,r11d", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~esi,eax", "and~eax,0", "mov~[rsp+0],0", "and~esi,0", "mov~[rsp+0],eax", "mov~[rsp+0],0", "mov~[rsp+0],esi", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0033371735791090634, ["mov     eax, 0Ch; jumptable 00000000000083DE case 12", "xor     r10d, r10d", "mov     ebx, 66h ; 'f'", "jmp     c_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 3, 0, 1, 8, -1, 0.02045837600273081, ["cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "lea     rbx, [i+rax]", "jnz     short loc_7B15"], ["cmp~argsize_0,0", "lea~rbx,<TAG>", "jnz~FOO"]], [0, 0, 244, 0, 0, 3, 1, 1, 7, -1, 0.1314447857996245, ["mov     rax, [rsp+0F8h+quote_string_len]", "test    rax, rax", "jz      loc_83C0"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 244, 0, 0, 4, 1, 1, 11, -1, 0.005721966205837174, ["mov     [rsp+0F8h+encountered_single_quote], bpl", "xor     eax, eax", "mov     ebx, 27h ; '''", "jmp     loc_7BA2"], ["mov~[rsp+0],bpl", "xor~eax,eax", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 2, 0, 0, 9, -1, 0.0032258064516129032, ["cmp     rax, 1", "jbe     short loc_7B15"], ["cmp~rax,0", "jbe~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 17, -1, 0.03208311998634579, ["cmp     [rsp+0F8h+c_and_shell_quote_compat], 0", "jnz     loc_8C6D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.001856118791602663, ["xor     r10d, r10d; jumptable 00000000000083DE case 92"], ["xor~r10d,r10d"]], [0, 0, 244, 0, 0, 2, 0, 0, 18, -1, 0.028379416282642088, ["cmp     buffersize_0, r15", "jbe     short loc_8AFE"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 19, -1, 0.0, ["mov     byte ptr [r8+r15], 3Fh ; '?'"], ["mov~<TAG>,0"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.0008829365079365061, ["mov     eax, 0Dh; jumptable 0000000000007B8E case 13", "mov     ebx, 72h ; 'r'", "jmp     c_and_shell_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0008541346646185337, ["mov     eax, 9; jumptable 00000000000083DE case 9", "xor     r10d, r10d", "mov     ebx, 74h ; 't'", "jmp     c_and_shell_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.007002048131080389, ["cmp     [rsp+0F8h+var_85], 0", "jz      loc_8538"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 0, 0, 19, -1, 0.028123399897593444, ["lea     rax, [r15+1]", "cmp     buffersize_0, len", "jbe     short loc_8B0D"], ["lea~rax,[r15+0]", "cmp~buffersize_0,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 20, -1, 0.0, ["mov     byte ptr [r8+r15+1], 22h ; '\"'"], ["mov~[yte ptr [r8+0],0"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.003680235535074245, ["mov     eax, 0Ch; jumptable 0000000000007B8E case 12", "mov     ebx, 66h ; 'f'", "jmp     c_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.003680235535074245, ["mov     eax, 8; jumptable 0000000000007B8E case 8", "mov     ebx, 62h ; 'b'", "jmp     c_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 12, -1, 0.0027265745007680493, ["cmp     [rsp+0F8h+quote_string_len], 0", "jz      loc_8538"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 244, 0, 1, 8, 0, 1, 10, -1, 0.0, ["mov     [rsp+0F8h+pwc], r8", "mov     byte ptr [rsp+0F8h+pending_shell_escape_end], r11b", "mov     [rsp+0F8h+ps], r9", "call    _strlen", "movzx   r11d, byte ptr [rsp+0F8h+pending_shell_escape_end]", "mov     r8, [rsp+0F8h+pwc]", "mov     argsize_0, rax", "mov     r9, [rsp+0F8h+ps]"], ["mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[rsp+0],r9", "call~FOO", "movzx~r11d,[yte ptr [rsp+0]", "mov~r8,[rsp+0]", "mov~argsize_0,rax", "mov~r9,[rsp+0]"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0033371735791090634, ["mov     eax, 8; jumptable 00000000000083DE case 8", "xor     r10d, r10d", "mov     ebx, 62h ; 'b'", "jmp     c_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [0, 0, 244, 0, 0, 2, 0, 1, 9, -1, 0.020074351425157833, ["cmp     rbx, argsize_0", "ja      loc_83B0"], ["cmp~rbx,argsize_0", "ja~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.003680235535074245, ["mov     eax, 0Bh; jumptable 0000000000007B8E case 11", "mov     ebx, 76h ; 'v'", "jmp     c_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [0, 0, 6, 0, 0, 5, 0, 1, 12, -1, 0.0007978110599078341, ["movzx   eax, [rsp+0F8h+c_and_shell_quote_compat]", "mov     rbp, argsize_0", "mov     argsize_0, r8", "mov     [rsp+0F8h+var_E1], al", "jmp     force_outer_quoting_style"], ["movzx~eax,[rsp+0]", "mov~rbp,argsize_0", "mov~argsize_0,r8", "mov~[rsp+0],al", "jmp~FOO"]], [2, 0, 244, 1, 0, 5, 1, 1, 12, -1, 0.023655913978494623, ["add     i, 1", "mov     edx, r11d", "xor     ebp, ebp", "mov     ebx, 5Ch ; '\\'", "jmp     store_c"], ["add~i,0", "mov~edx,r11d", "xor~ebp,ebp", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 22, -1, 0.0, ["mov     byte ptr [r8+r15+3], 3Fh ; '?'"], ["mov~[yte ptr [r8+0],0"]], [2, 0, 244, 0, 0, 4, 1, 1, 10, -1, 0.0033371735791090634, ["mov     eax, 7; jumptable 00000000000083DE case 7", "xor     r10d, r10d", "mov     ebx, 61h ; 'a'", "jmp     c_escape"], ["mov~eax,0", "xor~r10d,r10d", "mov~ebx,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 3, 0, 1, 8, -1, 0.44391363713944365, ["movzx   ebx, byte ptr [r9]", "cmp     bl, 7Eh ; '~'; switch 127 cases", "ja      loc_7F28; jumptable 0000000000007B8E default case"], ["movzx~ebx,<TAG>", "cmp~bl,0", "ja~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 3.840245775729647e-05, ["xor     r10d, r10d; jumptable 00000000000083DE cases 33,34,36,38,40-42,59-62,91,94,96,124"], ["xor~r10d,r10d"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.0042143497183819885, ["xor     ebp, ebp; jumptable 0000000000007B8E cases 33,34,36,38,40-42,59-62,91,94,96,124"], ["xor~ebp,ebp"]], [2, 0, 244, 1, 0, 4, 2, 0, 14, -1, 0.23159242191500257, ["xor     eax, 1", "add     i, 1", "and     eax, r11d", "mov     edx, eax"], ["xor~eax,0", "add~i,0", "and~eax,r11d", "mov~edx,eax"]], [1, 0, 244, 1, 0, 5, 2, 1, 22, -1, 0.027355350742447517, ["add     r15, 4", "xor     ebp, ebp", "xor     eax, eax", "mov     r12, i", "jmp     loc_7BA2"], ["add~r15,0", "xor~ebp,ebp", "xor~eax,eax", "mov~r12,i", "jmp~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.014460445468509995, ["cmp     [rsp+0F8h+var_88], 0", "jz      loc_7BA0; jumptable 0000000000007B8E cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 1, 244, 0, 0, 4, 1, 1, 10, -1, 0.0011133512544802848, ["movzx   ebp, [rsp+0F8h+var_E2]; jumptable 00000000000083DE case 32", "mov     ebx, 20h ; ' '", "xor     r10d, r10d", "jmp     loc_7D35"], ["movzx~ebp,[rsp+0]", "mov~ebx,<STR>", "xor~r10d,r10d", "jmp~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 12, -1, 0.0012800819252432156, ["mov     eax, 5Ch ; '\\'", "mov     ebx, 5Ch ; '\\'", "jmp     c_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 17, -1, 0.02951868919610855, ["test    dl, dl", "jz      loc_88E7"], ["test~dl,dl", "jz~FOO"]], [0, 0, 244, 0, 1, 12, 1, 2, 10, -1, 0.007567951015531656, ["mov     rdx, [rsp+0F8h+quote_string_len]; n", "mov     rsi, [rsp+0F8h+s2]; s2", "mov     rdi, r9; s1", "mov     [rsp+0F8h+pwc], r8", "mov     byte ptr [rsp+0F8h+pending_shell_escape_end], r11b", "mov     [rsp+0F8h+ps], r9", "call    _memcmp", "test    eax, eax", "mov     r9, [rsp+0F8h+ps]", "movzx   r11d, byte ptr [rsp+0F8h+pending_shell_escape_end]", "mov     r8, [rsp+0F8h+pwc]", "jnz     loc_83B0"], ["mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,r9", "mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[rsp+0],r9", "call~FOO", "test~eax,eax", "mov~r9,[rsp+0]", "movzx~r11d,[yte ptr [rsp+0]", "mov~r8,[rsp+0]", "jnz~FOO"]], [1, 0, 244, 1, 0, 2, 0, 0, 20, -1, 0.018394777265745007, ["add     r15, 3", "mov     r11d, edx"], ["add~r15,0", "mov~r11d,edx"]], [0, 0, 244, 0, 0, 3, 0, 0, 19, -1, 0.01865079365079365, ["lea     len, [r15+2]", "cmp     r13, len", "jbe     short loc_7FE5"], ["lea~len,[r15+0]", "cmp~r13,len", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 20, -1, 0.0, ["mov     byte ptr [r8+r15+2], 27h ; '''"], ["mov~[yte ptr [r8+0],0"]], [1, 0, 6, 0, 0, 3, 0, 1, 7, -1, 0.006067588325652842, ["mov     [rsp+0F8h+var_E1], al", "mov     [rsp+0F8h+quoting_style], 2", "jmp     force_outer_quoting_style"], ["mov~[rsp+0],al", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 244, 0, 0, 6, 2, 1, 6, -1, 0.07246543778801844, ["test    r15, r15", "mov     rbp, argsize_0", "mov     argsize_0, r8", "setz    al", "and     al, [rsp+0F8h+var_88]", "jnz     loc_8C5C"], ["test~r15,r15", "mov~rbp,argsize_0", "mov~argsize_0,r8", "setz~al", "and~al,[rsp+0]", "jnz~FOO"]], [1, 0, 6, 0, 0, 6, 0, 0, 12, -1, 0.0018657194060419863, ["movzx   eax, [rsp+0F8h+var_88]", "mov     rbp, argsize_0", "mov     [rsp+0F8h+quoting_style], 2", "mov     argsize_0, r8", "mov     [rsp+0F8h+var_E1], al", "nop     word ptr [rax+rax+00000000h]"], ["movzx~eax,[rsp+0]", "mov~rbp,argsize_0", "mov~[rsp+0],0", "mov~argsize_0,r8", "mov~[rsp+0],al", "nop~[ord ptr [rax+0]"]], [1, 0, 244, 0, 0, 2, 0, 1, 11, -1, 0.020636200716845864, ["cmp     [rsp+0F8h+var_88], 0", "jnz     loc_7D40"], ["cmp~[rsp+0],0", "jnz~FOO"]], [3, 0, 280, 1, 1, 29, 2, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r15d, r8d", "push    r13", "push    r12", "mov     r14, buffer", "push    rbp", "push    rbx", "mov     ebx, r9d", "mov     r13, buffersize_0", "mov     rbp, argsize_0", "and     ebx, 2", "sub     rsp, 0C8h", "mov     rax, [rsp+0F8h+quote_these_too]", "mov     [rsp+0F8h+arg], arg_0", "mov     [rsp+0F8h+quoting_style], r8d", "mov     [rsp+0F8h+flags], r9d", "mov     [rsp+0F8h+var_D8], rax", "mov     rax, [rsp+0F8h+left_quote]", "mov     [rsp+0F8h+quote_string_0], rax", "mov     rax, [rsp+0F8h+right_quote]", "mov     [rsp+0F8h+quote_string], rax", "mov     rax, fs:28h", "mov     [rsp+0F8h+var_40], rax", "xor     eax, eax", "call    ___ctype_get_mb_cur_max", "cmp     r15d, 0Ah; switch 11 cases", "mov     [rsp+0F8h+var_98], rax", "ja      loc_8CA0; jumptable 0000000000007971 default case"], ["push~r15", "push~r14", "mov~r15d,r8d", "push~r13", "push~r12", "mov~r14,buffer", "push~rbp", "push~rbx", "mov~ebx,r9d", "mov~r13,buffersize_0", "mov~rbp,argsize_0", "and~ebx,0", "sub~rsp,0", "mov~rax,[rsp+0]", "mov~[rsp+0],arg_0", "mov~[rsp+0],r8d", "mov~[rsp+0],r9d", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "cmp~r15d,0", "mov~[rsp+0],rax", "ja~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 13, -1, 0.05403225806451613, ["cmp     bytes, 0FFFFFFFFFFFFFFFFh", "jz      loc_89A6"], ["cmp~bytes,0", "jz~FOO"]], [1, 0, 253, 0, 1, 9, 1, 2, 4, -1, 0.006515616999487967, ["lea     rsi, asc_122CD; \"'\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, rax", "mov     [rsp+0F8h+quote_string], rax", "lea     rax, asc_122CD; \"'\"", "cmp     rsi, rax", "jz      loc_8BEA"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,rax", "mov~[rsp+0],rax", "lea~rax,<TAG>", "cmp~rsi,rax", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 0, 1, 18, -1, 0.0003242874210616146, ["mov     rbp, argsize_0", "mov     argsize_0, r8", "jmp     loc_7D7D"], ["mov~rbp,argsize_0", "mov~argsize_0,r8", "jmp~FOO"]], [0, 0, 244, 0, 0, 11, 1, 1, 14, -1, 0.002867383512544803, ["mov     rdi, m", "movzx   r11d, [rsp+0F8h+var_6B]", "movzx   ebx, [rsp+0F8h+c]", "movzx   r10d, [rsp+0F8h+var_69]", "mov     r15, [rsp+0F8h+var_68]", "xor     ebp, ebp", "mov     r8, [rsp+0F8h+var_80]", "mov     r13, [rsp+0F8h+buffersize]", "mov     r14, [rsp+0F8h+pending_shell_escape_end]", "movzx   eax, [rsp+0F8h+backslash_escapes]", "jmp     loc_87E3"], ["mov~rdi,m", "movzx~r11d,[rsp+0]", "movzx~ebx,[rsp+0]", "movzx~r10d,[rsp+0]", "mov~r15,[rsp+0]", "xor~ebp,ebp", "mov~r8,[rsp+0]", "mov~r13,[rsp+0]", "mov~r14,[rsp+0]", "movzx~eax,[rsp+0]", "jmp~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 8, -1, 0.016163167776070998, ["cmp     [rsp+0F8h+backslash_escapes], 0", "jz      short loc_7D7D"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 1, 1, 16, -1, 0.021210957501280082, ["movzx   eax, [rsp+0F8h+backslash_escapes]", "xor     ebp, ebp", "jmp     loc_87E3"], ["movzx~eax,[rsp+0]", "xor~ebp,ebp", "jmp~FOO"]], [1, 0, 244, 0, 0, 11, 2, 0, 13, -1, 0.036904761904761905, ["mov     eax, ebp", "mov     rdi, m", "movzx   r11d, [rsp+0F8h+var_6B]", "xor     eax, 1", "movzx   ebx, [rsp+0F8h+c]", "movzx   r10d, [rsp+0F8h+var_69]", "and     al, [rsp+0F8h+backslash_escapes]", "mov     r15, [rsp+0F8h+var_68]", "mov     r8, [rsp+0F8h+var_80]", "mov     r13, [rsp+0F8h+buffersize]", "mov     bytes, [rsp+0F8h+pending_shell_escape_end]"], ["mov~eax,ebp", "mov~rdi,m", "movzx~r11d,[rsp+0]", "xor~eax,0", "movzx~ebx,[rsp+0]", "movzx~r10d,[rsp+0]", "and~al,[rsp+0]", "mov~r15,[rsp+0]", "mov~r8,[rsp+0]", "mov~r13,[rsp+0]", "mov~bytes,[rsp+0]"]], [1, 0, 244, 1, 0, 4, 0, 1, 17, -1, 0.006438812083973375, ["add     m, 1", "lea     rdx, [i+m]", "cmp     r14, rdx", "ja      short loc_8980"], ["add~m,0", "lea~rdx,<TAG>", "cmp~r14,rdx", "ja~FOO"]], [1, 0, 244, 0, 0, 2, 0, 1, 18, -1, 0.0, ["cmp     byte ptr [r9+m], 0", "jz      short loc_8994"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 244, 0, 0, 14, 0, 0, 15, -1, 0.02197900665642601, ["mov     r14, [rsp+0F8h+pending_shell_escape_end]", "mov     rcx, r15", "mov     rsi, r13", "mov     bytes, m", "mov     rdi, rbx", "movzx   r11d, [rsp+0F8h+var_6B]", "movzx   ebx, [rsp+0F8h+c]", "mov     r9, [rsp+0F8h+var_60]", "cmp     rcx, r14", "movzx   r10d, [rsp+0F8h+var_69]", "mov     r15, [rsp+0F8h+var_68]", "mov     r8, [rsp+0F8h+var_80]", "mov     r13, [rsp+0F8h+buffersize]", "jnb     short loc_8997"], ["mov~r14,[rsp+0]", "mov~rcx,r15", "mov~rsi,r13", "mov~bytes,m", "mov~rdi,rbx", "movzx~r11d,[rsp+0]", "movzx~ebx,[rsp+0]", "mov~r9,[rsp+0]", "cmp~rcx,r14", "movzx~r10d,[rsp+0]", "mov~r15,[rsp+0]", "mov~r8,[rsp+0]", "mov~r13,[rsp+0]", "jnb~FOO"]], [2, 0, 244, 0, 1, 15, 2, 1, 10, -1, 0.09486687147977471, ["mov     [rsp+0F8h+pwc], r8", "mov     byte ptr [rsp+0F8h+pending_shell_escape_end], r11b", "mov     byte ptr [rsp+0F8h+ps], r10b", "call    ___ctype_b_loc", "mov     rcx, [rax]", "movzx   edx, bl", "movzx   r10d, byte ptr [rsp+0F8h+ps]", "movzx   r11d, byte ptr [rsp+0F8h+pending_shell_escape_end]", "mov     r8, [rsp+0F8h+pwc]", "mov     edi, 1", "movzx   eax, word ptr [rcx+rdx*2]", "and     ax, 4000h", "setnz   bpl", "setz    al", "and     al, [rsp+0F8h+backslash_escapes]"], ["mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[yte ptr [rsp+0],r10b", "call~FOO", "mov~rcx,<TAG>", "movzx~edx,bl", "movzx~r10d,[yte ptr [rsp+0]", "movzx~r11d,[yte ptr [rsp+0]", "mov~r8,[rsp+0]", "mov~edi,0", "movzx~eax,<TAG>", "and~ax,0", "setnz~bpl", "setz~al", "and~al,[rsp+0]"]], [1, 0, 244, 0, 0, 5, 2, 1, 7, -1, 0.0630184331797235, ["movzx   eax, [rsp+0F8h+c_and_shell_quote_compat]", "movzx   edx, [rsp+0F8h+var_E1]", "xor     eax, 1", "and     dl, al", "jz      loc_8B94"], ["movzx~eax,[rsp+0]", "movzx~edx,[rsp+0]", "xor~eax,0", "and~dl,al", "jz~FOO"]], [0, 0, 244, 0, 0, 2, 1, 1, 7, -1, 0.43792285372930545, ["xor     r10d, r10d", "jmp     loc_7B70"], ["xor~r10d,r10d", "jmp~FOO"]], [2, 0, 4, 0, 0, 4, 0, 0, 9, -1, 0.0, ["cmp     [rsp+0F8h+var_E1], 0", "mov     eax, 4", "cmovz   eax, [rsp+0F8h+quoting_style]", "mov     [rsp+0F8h+quoting_style], eax"], ["cmp~[rsp+0],0", "mov~eax,0", "cmovz~eax,[rsp+0]", "mov~[rsp+0],eax"]], [0, 0, 244, 0, 0, 2, 1, 1, 11, -1, 0.10432667690732207, ["test    al, al", "jz      loc_7BA2"], ["test~al,al", "jz~FOO"]], [2, 0, 244, 0, 0, 3, 0, 1, 10, -1, 0.0008829365079365061, ["mov     eax, 0Ah; jumptable 0000000000007B8E case 10", "mov     ebx, 6Eh ; 'n'", "jmp     c_and_shell_escape"], ["mov~eax,0", "mov~ebx,0", "jmp~FOO"]], [0, 0, 244, 0, 0, 2, 1, 0, 12, -1, 0.08591909882232462, ["movzx   eax, [rsp+0F8h+backslash_escapes]", "xor     ebp, ebp"], ["movzx~eax,[rsp+0]", "xor~ebp,ebp"]], [1, 0, 247, 0, 0, 1, 0, 0, 3, -1, 0.00010240655401945725, ["mov     [rsp+0F8h+backslash_escapes], 1"], ["mov~[rsp+0],0"]], [0, 0, 244, 0, 0, 1, 0, 0, 18, -1, 0.006169994879672299, ["mov     rdi, m"], ["mov~rdi,m"]], [0, 0, 6, 0, 0, 1, 0, 1, 14, -1, 7.680491551459293e-05, ["jmp     short loc_8BC6"], ["jmp~FOO"]], [1, 0, 256, 0, 0, 2, 0, 1, 2, -1, 0.00030721966205837174, ["cmp     [rsp+0F8h+quoting_style], 0Ah; jumptable 0000000000007971 cases 8-10", "jz      short loc_81EF"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 244, 0, 0, 3, 1, 0, 10, -1, 0.00020737327188940095, ["movzx   ebp, [rsp+0F8h+var_E2]; jumptable 00000000000083DE cases 37,43-58,65-90,93,95,97-122", "xor     r10d, r10d", "nop     dword ptr [rax+rax+00000000h]"], ["movzx~ebp,[rsp+0]", "xor~r10d,r10d", "nop~[word ptr [rax+0]"]], [1, 0, 244, 0, 0, 4, 2, 1, 16, -1, 0.049859190988223244, ["mov     edx, r11d", "xor     edx, 1", "and     dl, [rsp+0F8h+var_E1]", "jz      short loc_7FEC"], ["mov~edx,r11d", "xor~edx,0", "and~dl,[rsp+0]", "jz~FOO"]], [0, 0, 246, 0, 0, 2, 1, 1, 4, -1, 0.0064516129032258064, ["test    buffersize_0, buffersize_0", "jnz     loc_8C8A"], ["test~buffersize_0,buffersize_0", "jnz~FOO"]], [0, 0, 244, 1, 0, 6, 1, 1, 13, -1, 0.14626216077828982, ["mov     rcx, rdi", "xor     esi, esi", "movzx   r9d, [rsp+0F8h+c_and_shell_quote_compat]", "add     rcx, i", "mov     rdi, [rsp+0F8h+arg]", "jmp     loc_8050"], ["mov~rcx,rdi", "xor~esi,esi", "movzx~r9d,[rsp+0]", "add~rcx,i", "mov~rdi,[rsp+0]", "jmp~FOO"]], [0, 0, 244, 0, 0, 1, 1, 0, 10, -1, 0.02879800307219662, ["xor     eax, eax; jumptable 0000000000007B8E cases 37,43-58,65-90,93,95,97-122"], ["xor~eax,eax"]], [1, 0, 244, 0, 0, 6, 3, 1, 5, -1, 8.960573476702509e-05, ["mov     [rsp+0F8h+orig_buffersize], buffersize_0", "mov     [rsp+0F8h+all_c_and_shell_quote_compat], 1", "xor     eax, eax", "xor     r11d, r11d", "xor     edx, edx", "jmp     loc_85B0"], ["mov~[rsp+0],buffersize_0", "mov~[rsp+0],0", "xor~eax,eax", "xor~r11d,r11d", "xor~edx,edx", "jmp~FOO"]], [1, 0, 244, 0, 0, 4, 1, 1, 16, -1, 0.006899641577060932, ["mov     eax, ebp", "mov     ebx, 30h ; '0'", "xor     ebp, ebp", "jmp     loc_7BA2"], ["mov~eax,ebp", "mov~ebx,0", "xor~ebp,ebp", "jmp~FOO"]], [0, 0, 244, 0, 0, 2, 0, 0, 11, -1, 0.020084485407066054, ["mov     rdx, [rsp+0F8h+orig_buffersize]", "mov     buffersize_0, rdx"], ["mov~rdx,[rsp+0]", "mov~buffersize_0,rdx"]], [0, 0, 11, 0, 0, 2, 1, 1, 10, -1, 0.019738863287250386, ["test    dl, dl", "jz      short loc_8BC9"], ["test~dl,dl", "jz~FOO"]], [3, 1, 3, 2, 1, 14, 1, 1, 9, -1, 0.009946236559139785, ["sub     rsp, 8", "mov     rcx, argsize_0; argsize", "mov     rsi, buffersize_0; buffersize", "push    [rsp+100h+quote_string]; right_quote", "push    [rsp+108h+quote_string_0]; left_quote", "mov     rdi, r14; buffer", "push    0; quote_these_too", "mov     r9d, [rsp+118h+flags]", "mov     r8d, [rsp+118h+quoting_style]; quoting_style", "mov     rdx, [rsp+118h+arg]; arg", "and     r9d, 0FFFFFFFDh; flags", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r15, len"], ["sub~rsp,0", "mov~rcx,argsize_0", "mov~rsi,buffersize_0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdi,r14", "push~0", "mov~r9d,[rsp+0]", "mov~r8d,[rsp+0]", "mov~rdx,[rsp+0]", "and~r9d,0", "call~FOO", "add~rsp,<STR>", "mov~r15,len"]], [0, 0, 244, 0, 0, 3, 1, 1, 12, -1, 0.1597478238607271, ["mov     rsi, [rsp+0F8h+var_D8]", "test    rsi, rsi", "jz      short loc_7BCB"], ["mov~rsi,[rsp+0]", "test~rsi,rsi", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort; jumptable 0000000000007971 default case"], ["call~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 14, -1, 0.0002560163850486431, ["mov     r15, len"], ["mov~r15,len"]], [0, 0, 4, 0, 0, 2, 0, 0, 10, -1, 0.0038466461853558626, ["cmp     buffersize_0, r15", "jbe     loc_7DB3"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 11, -1, 0.0, ["mov     byte ptr [r14+r15], 0", "jmp     loc_7DB3"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 19, -1, 0.0, ["mov     byte ptr [r8+r15+1], 24h ; '$'"], ["mov~[yte ptr [r8+0],0"]], [1, 0, 0, 1, 0, 8, 0, 0, 11, -1, 0.0, ["add     rsp, 0C8h", "pop     rbx", "pop     argsize_0", "pop     i", "pop     buffersize_0", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~argsize_0", "pop~i", "pop~buffersize_0", "pop~r14", "pop~r15", "retn"]], [0, 0, 252, 0, 1, 5, 0, 2, 5, -1, 0.0, ["mov     rdi, rsi; msgid", "mov     esi, [rsp+0F8h+quoting_style]; s", "call    gettext_quote", "mov     [rsp+0F8h+quote_string], rax", "jmp     loc_81EF"], ["mov~rdi,rsi", "mov~esi,[rsp+0]", "call~FOO", "mov~[rsp+0],rax", "jmp~FOO"]], [2, 0, 244, 0, 0, 2, 0, 0, 10, -1, 0.0008829365079365061, ["mov     eax, 9; jumptable 0000000000007B8E case 9", "mov     ebx, 74h ; 't'"], ["mov~eax,0", "mov~ebx,0"]], [0, 0, 244, 0, 0, 2, 0, 0, 14, -1, 0.01282642089093702, ["cmp     buffersize_0, r15", "jbe     short loc_7BEE"], ["cmp~buffersize_0,r15", "jbe~FOO"]], [1, 0, 244, 0, 0, 1, 0, 0, 15, -1, 0.0, ["mov     byte ptr [r8+r15], 27h ; '''"], ["mov~<TAG>,0"]]], "func_feature": [17, 152, 176, 15, 281, 448, 49, 1104, 0.03791, 7, 41], "succs": [[7], [0, 2], [0], [12], [3, 163], [4], [227, 196, 5, 202, 109, 206, 51, 84, 53, 214, 183, 184, 260, 187, 220, 222, 31], [11, 39], [279, 7], [7], [69, 7], [39], [106, 28], [12, 14], [224, 12], [253], [263, 15], [217, 218], [17, 207], [262], [19, 133], [240], [240, 21], [33, 10], [25, 23], [23], [35, 134], [128, 129, 131, 195, 171, 172, 259, 20, 26], [32, 83], [113], [139, 29], [237], [34, 44], [10], [44], [85, 118], [52, 38], [266, 36], [52], [150], [187, 6], [245, 239], [41, 245], [41], [48, 64], [165, 47], [45], [42, 45], [64], [182, 135], [49, 154], [49], [75, 76], [61], [266, 37], [56, 57], [272, 55], [258, 55], [273, 55], [142, 143], [217, 59], [73, 226], [193, 99, 223, 264, 105, 205, 210, 50, 18, 211, 278, 216, 153, 91, 61, 254, 191], [61], [65, 77], [77], [80, 70], [66], [66], [66], [80], [42, 103], [248, 71], [173], [73, 63], [173], [75], [83], [86], [86, 78], [93], [186], [88, 81], [9, 90], [91], [117], [89, 94], [147], [267, 87], [94], [9], [97, 74], [96, 112], [136, 92], [155, 95], [155], [98, 100], [74], [100], [226], [112], [221], [101, 135], [42, 46], [217, 116], [104, 123], [243], [24, 108], [24], [105], [137], [137, 110], [8, 229], [126], [113, 161], [113, 114], [14], [126], [117], [180], [179, 119], [14], [121, 270], [176, 138], [141], [124, 141], [150], [126], [126], [126], [126], [126], [126], [126], [126], [243], [261, 135], [192, 54], [176, 146], [140, 30], [30], [144, 67], [145, 157], [180, 142], [67], [157], [176, 159], [273, 268], [82, 147], [147], [160, 166], [150], [194, 43], [152, 249], [158, 151], [111], [120], [120, 156], [163], [177, 162], [166], [139], [176], [122], [243], [164, 47], [235, 181], [225, 219], [169, 167], [167], [130], [256, 170], [170], [122, 270], [244], [246, 174], [173], [176, 178], [176, 201], [180], [14], [251, 198], [79, 111], [237], [191], [], [185, 276], [153], [232, 275], [188, 190], [188], [60, 199], [14], [4], [43], [130], [4], [200, 215], [40, 197], [173], [213, 215], [241, 203], [18], [208, 204], [208], [237], [237], [228, 212], [168, 209], [168], [4], [4], [218, 228], [215], [4], [251, 230], [4], [243], [8], [225], [4], [153, 62], [223], [226], [8], [173], [264, 236], [226], [4], [68, 125], [251, 102], [107], [233, 231], [231], [243], [234, 250], [243], [4, 236], [27, 271], [72, 242], [115, 277], [269], [16], [252, 269], [16], [16], [257, 247], [257, 246], [244, 175], [253], [148, 149], [221], [269], [173, 255], [237], [263], [262], [244], [272], [115, 22], [264], [107, 189], [265, 127], [93], [173], [132], [173], [132], [273, 58], [186], [13, 14], [], [273], [186, 274], [186], [232], [], [115], [237], [280, 1], [1]], "fname": "quotearg_buffer_restyled", "n_num": 281}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 0, 0, 2, 18, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, o", "call    ___errno_location", "mov     r12d, [p]", "mov     rbp, p", "lea     p, default_quoting_options", "test    o, o", "mov     esi, 38h ; '8'; s", "cmovz   o, p", "mov     rdi, rbx; p", "call    xmemdup", "mov     [rbp+0], r12d", "pop     rbx", "pop     rbp", "pop     e", "retn"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,o", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,p", "lea~p,<TAG>", "test~o,o", "mov~esi,0", "cmovz~o,p", "mov~rdi,rbx", "call~FOO", "mov~[rbp+0],r12d", "pop~rbx", "pop~rbp", "pop~e", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 18, 0.0, 1, 0], "succs": [[]], "fname": "clone_quoting_options", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     eax, [rdi]", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~eax,<TAG>", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "get_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     [rdi], esi", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~<TAG>,esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[4, 0, 0, 1, 0, 19, 6, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    p, p", "mov     ecx, esi", "cmovz   p, rax", "mov     eax, esi", "and     ecx, 1Fh", "shr     al, 5", "movzx   eax, al", "lea     p, [p+rax*4+8]", "mov     esi, [p]", "mov     eax, esi", "shr     eax, cl", "xor     edx, eax", "and     eax, 1", "and     edx, 1", "shl     edx, cl", "xor     edx, esi", "mov     [p], edx", "retn"], ["lea~rax,<TAG>", "test~p,p", "mov~ecx,esi", "cmovz~p,rax", "mov~eax,esi", "and~ecx,0", "shr~al,0", "movzx~eax,al", "lea~p,[p+0]", "mov~esi,<TAG>", "mov~eax,esi", "shr~eax,cl", "xor~edx,eax", "and~eax,0", "and~edx,0", "shl~edx,cl", "xor~edx,esi", "mov~<TAG>,edx", "retn"]]], "func_feature": [0, 6, 0, 0, 1, 0, 0, 19, 0.0, 1, 1], "succs": [[]], "fname": "set_char_quoting", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0.0, ["lea     r, default_quoting_options", "test    o, o", "cmovz   o, r", "mov     eax, [o+4]", "mov     [o+4], esi", "retn"], ["lea~r,<TAG>", "test~o,o", "cmovz~o,r", "mov~eax,[o+0]", "mov~[o+0],esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 6, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_flags", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 0, 1, 1, 2, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]], [1, 0, 3, 0, 0, 6, 2, 1, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "test    left_quote, left_quote", "mov     dword ptr [o], 0Ah", "jz      short loc_8DC7"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "test~left_quote,left_quote", "mov~<TAG>,0", "jz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, 0, 0.16666666666666666, ["test    right_quote, right_quote", "jz      short loc_8DC7"], ["test~right_quote,right_quote", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["mov     [o+28h], left_quote", "mov     [o+30h], right_quote", "retn"], ["mov~[o+0],left_quote", "mov~[o+0],right_quote", "retn"]]], "func_feature": [1, 3, 3, 0, 4, 4, 0, 13, 0.04167, 1, 1], "succs": [[], [0, 2], [0, 3], []], "fname": "set_custom_quoting", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[3, 0, 0, 3, 2, 39, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "lea     r, default_quoting_options", "push    r13", "push    r12", "mov     r13, buffer", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, buffersize", "mov     r15, arg", "sub     rsp, 18h", "test    o, o", "cmovz   rbx, r", "mov     [rsp+48h+argsize], argsize_0", "call    ___errno_location", "mov     r12d, [r]", "mov     rbp, r", "lea     r, [p+8]", "sub     rsp, 8", "mov     r9d, [p+4]; flags", "push    qword ptr [p+30h]; right_quote", "mov     r8d, [p]; quoting_style", "push    qword ptr [p+28h]; left_quote", "mov     rdx, arg; arg", "push    r; quote_these_too", "mov     rcx, [rsp+68h+argsize]; argsize", "mov     rsi, buffersize; buffersize", "mov     rdi, buffer; buffer", "call    quotearg_buffer_restyled", "mov     [rbp+0], r12d", "add     rsp, 38h", "pop     p", "pop     rbp", "pop     e", "pop     buffer", "pop     buffersize", "pop     arg", "retn"], ["push~r15", "push~r14", "lea~r,<TAG>", "push~r13", "push~r12", "mov~r13,buffer", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,buffersize", "mov~r15,arg", "sub~rsp,0", "test~o,o", "cmovz~rbx,r", "mov~[rsp+0],argsize_0", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,r", "lea~r,[p+0]", "sub~rsp,0", "mov~r9d,[p+0]", "push~[word ptr [p+0]", "mov~r8d,<TAG>", "push~[word ptr [p+0]", "mov~rdx,arg", "push~r", "mov~rcx,[rsp+0]", "mov~rsi,buffersize", "mov~rdi,buffer", "call~FOO", "mov~[rbp+0],r12d", "add~rsp,0", "pop~p", "pop~rbp", "pop~e", "pop~buffer", "pop~buffersize", "pop~arg", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 39, 0.0, 1, 3], "succs": [[]], "fname": "quotearg_buffer", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[3, 3, 0, 5, 4, 61, 4, 4, 0, 0, 0.0, ["push    r15", "push    r14", "lea     rax, default_quoting_options", "push    r13", "push    r12", "mov     r14, arg", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r15, argsize", "sub     rsp, 28h", "test    o, o", "cmovz   rbx, rax", "call    ___errno_location", "mov     r11d, [rax]", "mov     ebp, [rbx+4]", "lea     r10, [rbx+8]", "sub     rsp, 8", "mov     r8d, [rbx]; quoting_style", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "xor     esi, esi; buffersize", "xor     edi, edi; buffer", "mov     [rsp+60h+var_3C], r11d", "or      ebp, 1", "push    qword ptr [rbx+30h]; right_quote", "push    qword ptr [rbx+28h]; left_quote", "push    r10; quote_these_too", "mov     r9d, ebp; flags", "mov     r13, rax", "mov     [rsp+78h+quote_these_too], r10", "call    quotearg_buffer_restyled", "lea     rsi, [rax+1]", "add     rsp, 20h", "mov     rdi, rsi; n", "mov     [rsp+58h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "push    qword ptr [rbx+30h]; right_quote", "push    qword ptr [rbx+28h]; left_quote", "mov     r10, [rsp+70h+quote_these_too]", "mov     r8d, [rbx]; quoting_style", "mov     r9d, ebp; flags", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "mov     rdi, rax; buffer", "mov     r12, rax", "push    r10; quote_these_too", "mov     rsi, [rsp+78h+buffersize]; buffersize", "call    quotearg_buffer_restyled", "mov     r11d, [rsp+78h+var_3C]", "mov     rax, r12", "mov     [r13+0], r11d", "add     rsp, 48h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["push~r15", "push~r14", "lea~rax,<TAG>", "push~r13", "push~r12", "mov~r14,arg", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r15,argsize", "sub~rsp,<STR>", "test~o,o", "cmovz~rbx,rax", "call~FOO", "mov~r11d,<TAG>", "mov~ebp,[rbx+0]", "lea~r10,[rbx+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~rdx,arg", "xor~esi,esi", "xor~edi,edi", "mov~[rsp+0],r11d", "or~ebp,0", "push~[word ptr [rbx+0]", "push~[word ptr [rbx+0]", "push~r10", "mov~r9d,ebp", "mov~r13,rax", "mov~[rsp+0],r10", "call~FOO", "lea~rsi,[rax+0]", "add~rsp,<STR>", "mov~rdi,rsi", "mov~[rsp+0],rsi", "call~FOO", "sub~rsp,0", "push~[word ptr [rbx+0]", "push~[word ptr [rbx+0]", "mov~r10,[rsp+0]", "mov~r8d,<TAG>", "mov~r9d,ebp", "mov~rcx,argsize", "mov~rdx,arg", "mov~rdi,rax", "mov~r12,rax", "push~r10", "mov~rsi,[rsp+0]", "call~FOO", "mov~r11d,[rsp+0]", "mov~rax,r12", "mov~[r13+0],r11d", "add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]]], "func_feature": [4, 4, 4, 1, 1, 0, 0, 61, 0.0, 1, 5], "succs": [[]], "fname": "quotearg_alloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 0, 1, 0, 9, 0, 0, 0, 0, 0.0, ["mov     rax, [rsp+68h+var_58]", "add     rsp, 38h", "pop     p", "pop     flags", "pop     size", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["mov~rax,[rsp+0]", "add~rsp,0", "pop~p", "pop~flags", "pop~size", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [3, 2, 2, 5, 4, 59, 7, 5, 0, 0, 0.0, ["push    r15", "push    r14", "lea     rax, default_quoting_options", "push    r13", "push    r12", "mov     r12, size", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, arg", "mov     r15, argsize", "sub     rsp, 38h", "test    o, o", "cmovz   rbx, rax", "xor     ebp, ebp", "call    ___errno_location", "test    size, size", "mov     r13, rax", "mov     eax, [rax]", "setz    bpl", "or      ebp, [p+4]", "lea     r10, [p+8]", "sub     rsp, 8", "mov     r8d, [p]; quoting_style", "mov     rcx, argsize; argsize", "mov     [rsp+70h+e], eax", "push    qword ptr [p+30h]; right_quote", "mov     rdx, arg; arg", "push    qword ptr [p+28h]; left_quote", "push    r10; quote_these_too", "xor     esi, esi; buffersize", "mov     r9d, ebp; flags", "xor     edi, edi; buffer", "mov     [rsp+88h+quote_these_too], r10", "call    quotearg_buffer_restyled", "lea     rsi, [rax+1]", "mov     [rsp+88h+var_40], rax", "add     rsp, 20h", "mov     rdi, bufsize_0; n", "mov     [rsp+68h+bufsize], bufsize_0", "call    xmalloc", "mov     [rsp+68h+var_58], rax", "sub     rsp, 8", "push    qword ptr [p+30h]; right_quote", "push    qword ptr [p+28h]; left_quote", "mov     r10, [rsp+80h+quote_these_too]", "mov     r9d, ebp; flags", "mov     r8d, [p]; quoting_style", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "mov     rdi, rax; buffer", "push    r10; quote_these_too", "mov     rsi, [rsp+88h+bufsize]; buffersize", "call    quotearg_buffer_restyled", "mov     eax, [rsp+88h+e]", "add     rsp, 20h", "test    size, size", "mov     [r13+0], eax", "jz      short loc_8FEF"], ["push~r15", "push~r14", "lea~rax,<TAG>", "push~r13", "push~r12", "mov~r12,size", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,arg", "mov~r15,argsize", "sub~rsp,0", "test~o,o", "cmovz~rbx,rax", "xor~ebp,ebp", "call~FOO", "test~size,size", "mov~r13,rax", "mov~eax,<TAG>", "setz~bpl", "or~ebp,[p+0]", "lea~r10,[p+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~[rsp+0],eax", "push~[word ptr [p+0]", "mov~rdx,arg", "push~[word ptr [p+0]", "push~r10", "xor~esi,esi", "mov~r9d,ebp", "xor~edi,edi", "mov~[rsp+0],r10", "call~FOO", "lea~rsi,[rax+0]", "mov~[rsp+0],rax", "add~rsp,<STR>", "mov~rdi,bufsize_0", "mov~[rsp+0],bufsize_0", "call~FOO", "mov~[rsp+0],rax", "sub~rsp,0", "push~[word ptr [p+0]", "push~[word ptr [p+0]", "mov~r10,[rsp+0]", "mov~r9d,ebp", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~rdx,arg", "mov~rdi,rax", "push~r10", "mov~rsi,[rsp+0]", "call~FOO", "mov~eax,[rsp+0]", "add~rsp,<STR>", "test~size,size", "mov~[r13+0],eax", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     r11, [rsp+68h+var_40]", "mov     [size], r11"], ["mov~r11,[rsp+0]", "mov~<TAG>,r11"]]], "func_feature": [4, 7, 5, 2, 3, 3, 0, 70, 0.0, 1, 6], "succs": [[], [0, 2], [0]], "fname": "quotearg_alloc_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 4, 0, 0, 4, 0, 1, 0, 0, 0.2857142857142857, ["mov     rdi, [sv+8]; ptr", "lea     rbx, slot0", "cmp     rdi, rbx", "jz      short loc_9079"], ["mov~rdi,[sv+0]", "lea~rbx,<TAG>", "cmp~rdi,rbx", "jz~FOO"]], [1, 0, 7, 0, 0, 7, 0, 1, 0, 3, 0.0, ["mov     eax, cs:nslots", "push    r12", "mov     r12, cs:slotvec_0", "push    rbp", "push    rbx", "cmp     eax, 1", "jle     short loc_9051"], ["mov~eax,<TAG>", "push~r12", "mov~r12,<TAG>", "push~rbp", "push~rbx", "cmp~eax,0", "jle~FOO"]], [1, 0, 6, 1, 1, 5, 0, 2, 2, 3, 0.11904761904761904, ["mov     rdi, [rbx]; ptr", "add     rbx, 10h", "call    _free", "cmp     rbx, rbp", "jnz     short loc_9040"], ["mov~rdi,<TAG>", "add~rbx,0", "call~FOO", "cmp~rbx,rbp", "jnz~FOO"]], [1, 0, 0, 0, 0, 5, 0, 0, 3, 0, 0.0, ["pop     rbx", "mov     cs:nslots, 1", "pop     rbp", "pop     sv", "retn"], ["pop~rbx", "mov~<TAG>,0", "pop~rbp", "pop~sv", "retn"]], [0, 0, 2, 0, 0, 3, 0, 1, 2, 1, 0.23809523809523808, ["lea     rbx, slotvec0", "cmp     sv, rbx", "jz      short loc_9094"], ["lea~rbx,<TAG>", "cmp~sv,rbx", "jz~FOO"]], [0, 0, 1, 0, 1, 3, 0, 1, 3, 1, 0.0, ["mov     rdi, sv; ptr", "call    _free", "mov     cs:slotvec_0, rbx"], ["mov~rdi,sv", "call~FOO", "mov~<TAG>,rbx"]], [1, 0, 3, 0, 1, 3, 0, 1, 2, 2, 0.0, ["call    _free", "mov     cs:slotvec0.size, 100h", "mov     cs:slotvec0.val, rbx"], ["call~FOO", "mov~<TAG>,0", "mov~<TAG>,rbx"]], [2, 0, 6, 2, 0, 5, 0, 0, 1, 4, 0.023809523809523808, ["sub     eax, 2", "lea     rbx, [sv+18h]", "shl     rax, 4", "lea     rbp, [sv+rax+28h]", "nop     word ptr [rax+rax+00000000h]"], ["sub~eax,0", "lea~rbx,[sv+0]", "shl~rax,0", "lea~rbp,[sv+0]", "nop~[ord ptr [rax+0]"]]], "func_feature": [3, 0, 7, 0, 8, 11, 0, 35, 0.08333, 5, 3], "succs": [[4, 6], [0, 7], [0, 2], [], [3, 5], [3], [4], [2]], "fname": "quotearg_free", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[2, 0, 5, 4, 1, 10, 1, 1, 0, 0, 0.1282051282051282, ["movsxd  rdi, cs:nslots", "mov     edx, r12d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r15; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, r12d"], ["movsxd~rdi,<TAG>", "mov~edx,r12d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r15", "shl~rdx,0", "call~FOO", "mov~<TAG>,r12d"]], [0, 0, 6, 0, 1, 7, 1, 2, 4, -1, 0.04487179487179487, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r15, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_911F"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r15,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 6, 0, 1, 4, 0, 1, 4, -1, 0.04487179487179487, ["mov     rdi, r15; p", "call    xrealloc", "mov     r15, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r15", "call~FOO", "mov~r15,rax", "mov~<TAG>,rax"]], [0, 0, 11, 0, 0, 3, 0, 1, 1, 2, 0.07051282051282051, ["cmp     ebx, cs:nslots", "mov     rbp, rax", "jl      short loc_9147"], ["cmp~ebx,<TAG>", "mov~rbp,rax", "jl~FOO"]], [1, 0, 13, 1, 1, 14, 1, 2, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "movsxd  rbx, edi", "sub     rsp, 18h", "call    ___errno_location", "test    ebx, ebx", "mov     r14d, [rax]", "mov     r15, cs:slotvec_0", "js      loc_9259"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "movsxd~rbx,edi", "sub~rsp,0", "call~FOO", "test~ebx,ebx", "mov~r14d,<TAG>", "mov~r15,<TAG>", "js~FOO"]], [1, 0, 8, 1, 0, 6, 0, 1, 3, -1, 0.08974358974358974, ["lea     r12d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r12d", "shl     rsi, 4; n", "cmp     r15, rax", "jz      loc_9238"], ["lea~r12d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r12d", "shl~rsi,0", "cmp~r15,rax", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 2, 1, 0.0641025641025641, ["cmp     ebx, 7FFFFFFFh", "jz      loc_925E"], ["cmp~ebx,0", "jz~FOO"]], [4, 1, 4, 4, 1, 24, 1, 2, 2, -1, 0.1794871794871795, ["mov     eax, cs:default_quoting_options.flags", "shl     n, 4", "sub     rsp, 8", "add     rbx, r15", "lea     r15, default_quoting_options.quote_these_too", "mov     r8d, cs:default_quoting_options.style; quoting_style", "mov     r11, [rbx]", "mov     r12, [rbx+8]", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "or      eax, 1", "mov     rdx, arg; arg", "mov     [rsp+50h+flags], eax", "push    cs:default_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:default_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rsi, r11; buffersize", "mov     rdi, r12; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_921B"], ["mov~eax,<TAG>", "shl~n,0", "sub~rsp,0", "add~rbx,r15", "lea~r15,<TAG>", "mov~r8d,<TAG>", "mov~r11,<TAG>", "mov~r12,[rbx+0]", "mov~rcx,0", "or~eax,0", "mov~rdx,arg", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rsi,r11", "mov~rdi,r12", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, -1, 0.0, ["mov     rdi, r12; ptr", "mov     [rsp+48h+buffersize], rsi", "call    _free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,r12", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.10256410256410256, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r12, rax", "mov     [rbx], rsi", "jz      short loc_91CF"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r12,rax", "mov~<TAG>,rsi", "jz~FOO"]], [1, 0, 0, 1, 0, 10, 0, 0, 3, -1, 0.0, ["mov     [rbp+0], r14d", "add     rsp, 18h", "mov     rax, r12", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     r14", "pop     r15", "retn"], ["mov~[rbp+0],r14d", "add~rsp,0", "mov~rax,r12", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~r14", "pop~r15", "retn"]], [2, 1, 1, 2, 2, 17, 0, 2, 4, -1, 0.01282051282051282, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:default_quoting_options.style; quoting_style", "push    cs:default_quoting_options.right_quote; right_quote", "push    cs:default_quoting_options.left_quote; left_quote", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     r12, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,0", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~r12,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [10, 4, 17, 0, 14, 17, 0, 108, 0.05266, 9, 13], "succs": [[7], [0], [0], [6, 7], [3, 12], [1, 2], [5, 13], [9, 10], [11], [8, 11], [], [10], [], []], "fname": "quotearg_n", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 0, 1, 0, 11, 0, 0, 0, 0, 0.0, ["mov     eax, [rsp+48h+var_40]", "mov     [r12], eax", "add     rsp, 18h", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~<TAG>,eax", "add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~argsize", "pop~r15", "retn"]], [3, 1, 4, 4, 1, 24, 1, 2, 2, -1, 0.1794871794871795, ["mov     eax, cs:default_quoting_options.flags", "shl     n, 4", "lea     r15, default_quoting_options.quote_these_too", "add     rbx, rbp", "sub     rsp, 8", "mov     r8d, cs:default_quoting_options.style; quoting_style", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "mov     rcx, argsize; argsize", "or      eax, 1", "mov     rdx, arg; arg", "mov     [rsp+50h+flags], eax", "push    cs:default_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:default_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rsi, r11; buffersize", "mov     rdi, rbp; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_93D9"], ["mov~eax,<TAG>", "shl~n,0", "lea~r15,<TAG>", "add~rbx,rbp", "sub~rsp,0", "mov~r8d,<TAG>", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "mov~rcx,argsize", "or~eax,0", "mov~rdx,arg", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rsi,r11", "mov~rdi,rbp", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [1, 1, 1, 2, 2, 17, 0, 2, 4, -1, 0.01282051282051282, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:default_quoting_options.style; quoting_style", "push    cs:default_quoting_options.right_quote; right_quote", "push    cs:default_quoting_options.left_quote; left_quote", "mov     rcx, argsize; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,argsize", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [2, 0, 5, 4, 1, 10, 1, 1, 5, -1, 0.1282051282051282, ["movsxd  rdi, cs:nslots", "mov     edx, r15d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, r15d"], ["movsxd~rdi,<TAG>", "mov~edx,r15d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,r15d"]], [0, 0, 6, 0, 1, 7, 1, 2, 4, -1, 0.04487179487179487, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_92E5"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 6, 0, 1, 4, 0, 1, 4, -1, 0.04487179487179487, ["mov     rdi, rbx; p", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 11, 0, 0, 2, 0, 1, 1, 2, 0.07051282051282051, ["cmp     ebp, cs:nslots", "jl      short loc_930D"], ["cmp~ebp,<TAG>", "jl~FOO"]], [1, 0, 13, 1, 1, 17, 1, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r14, argsize", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "movsxd  rbp, edi", "sub     rsp, 18h", "call    ___errno_location", "mov     r12, rax", "mov     eax, [rax]", "test    ebp, ebp", "mov     rbx, cs:slotvec_0", "mov     [rsp+48h+var_40], eax", "js      loc_9419"], ["push~r15", "push~r14", "mov~r14,argsize", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "movsxd~rbp,edi", "sub~rsp,0", "call~FOO", "mov~r12,rax", "mov~eax,<TAG>", "test~ebp,ebp", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [1, 0, 8, 1, 0, 6, 0, 1, 3, -1, 0.08974358974358974, ["lea     r15d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r15d", "shl     rsi, 4; n", "cmp     rbx, rax", "jz      loc_93F8"], ["lea~r15d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r15d", "shl~rsi,0", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 2, 1, 0.0641025641025641, ["cmp     ebp, 7FFFFFFFh", "jz      loc_941E"], ["cmp~ebp,0", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+48h+buffersize], rsi", "call    _free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.10256410256410256, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_9391"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [10, 4, 17, 1, 14, 17, 0, 111, 0.05266, 9, 13], "succs": [[], [0, 11], [0], [1], [3], [3], [1, 9], [13, 6], [4, 5], [8, 12], [2], [10, 2], [], []], "fname": "quotearg_n_mem", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 3, 0, 0, 5, 0, 1, 0, 0, 0.16666666666666666, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_9532"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [3, 1, 4, 2, 1, 22, 1, 2, 1, -1, 0.2777777777777778, ["mov     eax, cs:default_quoting_options.flags", "mov     r11, [rbx]", "lea     r15, default_quoting_options.quote_these_too", "mov     r14, [rbx+8]", "sub     rsp, 8", "mov     r8d, cs:default_quoting_options.style; quoting_style", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+50h+flags], eax", "push    cs:default_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:default_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rdi, r14; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_957E"], ["mov~eax,<TAG>", "mov~r11,<TAG>", "lea~r15,<TAG>", "mov~r14,[rbx+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,0", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rdi,r14", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [4, 0, 5, 4, 1, 10, 1, 1, 3, -1, 0.20833333333333331, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [1, 0, 6, 0, 1, 8, 1, 2, 2, 0, 0.048611111111111105, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_9484"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 6, 0, 1, 5, 0, 1, 2, -1, 0.048611111111111105, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 8, 0, 0, 3, 0, 1, 1, 1, 0.041666666666666664, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_9598"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 9, 1, 1, 15, 1, 2, 0, 2, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, arg", "push    rbp", "push    rbx", "sub     rsp, 18h", "call    ___errno_location", "mov     rbp, rax", "mov     r13d, [rax]", "mov     eax, cs:nslots", "mov     rbx, cs:slotvec_0", "test    eax, eax", "jg      short loc_94B1"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,arg", "push~rbp", "push~rbx", "sub~rsp,0", "call~FOO", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~eax,<TAG>", "mov~rbx,<TAG>", "test~eax,eax", "jg~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 3, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+48h+buffersize], rsi", "call    _free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,r14", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [1, 0, 0, 1, 0, 10, 0, 0, 2, -1, 0.0, ["mov     [rbp+0], r13d", "add     rsp, 18h", "mov     rax, r14", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~[rbp+0],r13d", "add~rsp,0", "mov~rax,r14", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [2, 1, 1, 2, 2, 17, 0, 2, 3, -1, 0.027777777777777776, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:default_quoting_options.style; quoting_style", "push    cs:default_quoting_options.right_quote; right_quote", "push    cs:default_quoting_options.left_quote; left_quote", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,0", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]]], "func_feature": [8, 4, 13, 0, 10, 13, 0, 99, 0.08194, 9, 10], "succs": [[9, 7], [0, 8], [1], [2], [2], [3, 4], [1, 5], [9], [], [8]], "fname": "quotearg", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 2, 0, 1, 4, 0, 1, 0, 0, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+48h+buffersize], rsi", "call    _free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 3, 0, 0, 5, 0, 1, 2, -1, 0.16666666666666666, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_96C4"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [1, 0, 0, 1, 0, 11, 0, 0, 2, -1, 0.0, ["mov     eax, [rsp+48h+var_40]", "mov     [r12], eax", "add     rsp, 18h", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~<TAG>,eax", "add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~argsize", "pop~r15", "retn"]], [2, 1, 4, 2, 1, 22, 1, 2, 1, -1, 0.2777777777777778, ["mov     eax, cs:default_quoting_options.flags", "mov     r11, [rbx]", "lea     r15, default_quoting_options.quote_these_too", "mov     rbp, [rbx+8]", "sub     rsp, 8", "mov     r8d, cs:default_quoting_options.style; quoting_style", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+50h+flags], eax", "push    cs:default_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:default_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rdi, rbp; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_970C"], ["mov~eax,<TAG>", "mov~r11,<TAG>", "lea~r15,<TAG>", "mov~rbp,[rbx+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rdi,rbp", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [1, 1, 1, 2, 2, 17, 0, 2, 3, -1, 0.027777777777777776, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:default_quoting_options.style; quoting_style", "push    cs:default_quoting_options.right_quote; right_quote", "push    cs:default_quoting_options.left_quote; left_quote", "mov     rcx, argsize; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,argsize", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [1, 0, 6, 0, 1, 8, 1, 2, 2, 0, 0.048611111111111105, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_961A"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 8, 0, 0, 3, 0, 1, 1, 1, 0.041666666666666664, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_9730"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [4, 0, 5, 4, 1, 10, 1, 1, 3, -1, 0.20833333333333331, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [1, 0, 6, 0, 1, 5, 0, 1, 2, -1, 0.048611111111111105, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [1, 0, 9, 1, 1, 17, 1, 2, 0, 2, 0.0, ["push    r15", "push    r14", "mov     r14, argsize", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "sub     rsp, 18h", "call    ___errno_location", "mov     r12, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     [rsp+48h+var_40], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      short loc_9647"], ["push~r15", "push~r14", "mov~r14,argsize", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "sub~rsp,0", "call~FOO", "mov~r12,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]]], "func_feature": [8, 4, 13, 1, 10, 13, 0, 102, 0.08194, 9, 10], "succs": [[4], [0, 4], [], [1, 2], [2], [7], [8, 5], [3], [7], [3, 6]], "fname": "quotearg_mem", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 10, 1, 0, 6, 0, 1, 0, 0, 0.06985294117647059, ["lea     r14d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r14d", "shl     rsi, 4; n", "cmp     r15, rax", "jz      loc_9940"], ["lea~r14d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r14d", "shl~rsi,0", "cmp~r15,rax", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 3, 1, 0.05514705882352941, ["cmp     ebx, 7FFFFFFFh", "jz      loc_9983"], ["cmp~ebx,0", "jz~FOO"]], [1, 1, 17, 1, 0, 12, 1, 1, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "cmp     esi, 0Ah", "jz      loc_9979"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~esi,0", "jz~FOO"]], [3, 1, 6, 4, 1, 21, 0, 2, 4, -1, 0.19852941176470587, ["shl     n, 4", "sub     rsp, 8", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "add     rbx, r15", "mov     r11, [rbx]", "mov     r14, [rbx+8]", "push    rdx; right_quote", "push    rax; left_quote", "mov     rdx, arg; arg", "lea     r15, [rsp+0A0h+o]", "mov     rsi, r11; buffersize", "mov     rdi, r14; buffer", "lea     rax, [r15+8]", "push    rax; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_9915"], ["shl~n,0", "sub~rsp,0", "mov~rcx,0", "add~rbx,r15", "mov~r11,<TAG>", "mov~r14,[rbx+0]", "push~rdx", "push~rax", "mov~rdx,arg", "lea~r15,[rsp+0]", "mov~rsi,r11", "mov~rdi,r14", "lea~rax,[r15+0]", "push~rax", "mov~r9d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,rax", "ja~FOO"]], [1, 0, 7, 0, 0, 4, 2, 1, 3, -1, 0.07720588235294118, ["xor     eax, eax", "xor     edx, edx", "mov     [rsp+88h+s], 1", "jmp     loc_985A"], ["xor~eax,eax", "xor~edx,edx", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 7, 4, 1, 16, 2, 1, 6, -1, 0.10294117647058823, ["movsxd  rdi, cs:nslots", "mov     edx, r14d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r15; s", "shl     rdx, 4; n", "call    _memset", "mov     eax, [rsp+88h+o.flags]", "mov     rdx, [rsp+88h+o.right_quote]", "mov     r8d, [rsp+88h+o.style]; quoting_style", "mov     cs:nslots, r14d", "or      eax, 1", "mov     [rsp+88h+s], eax", "mov     rax, [rsp+88h+o.left_quote]"], ["movsxd~rdi,<TAG>", "mov~edx,r14d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r15", "shl~rdx,0", "call~FOO", "mov~eax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,r14d", "or~eax,0", "mov~[rsp+0],eax", "mov~rax,[rsp+0]"]], [0, 0, 14, 0, 0, 3, 0, 1, 2, 2, 0.10294117647058823, ["cmp     ebx, cs:nslots", "mov     r8d, [rsp+88h+s]", "jl      loc_9968"], ["cmp~ebx,<TAG>", "mov~r8d,[rsp+0]", "jl~FOO"]], [3, 1, 3, 3, 2, 18, 0, 2, 6, -1, 0.022058823529411763, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r15, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+o.right_quote]; right_quote", "push    [rsp+98h+o.left_quote]; left_quote", "mov     rdx, arg; arg", "push    r15; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+o.style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "add~r15,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 5, 0, 0, 5, 0, 1, 5, -1, 0.07352941176470588, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_98CA"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 6, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+88h+buffersize], rsi", "call    _free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r14", "mov~[rsp+0],rsi", "call~FOO", "mov~rsi,[rsp+0]"]], [1, 0, 16, 0, 1, 16, 1, 2, 1, 3, 0.05514705882352941, ["pxor    xmm0, xmm0", "movsxd  rbx, edi", "mov     r12, arg", "mov     [rsp+88h+o.style], esi", "mov     [rsp+88h+s], esi", "mov     [rsp+88h+o.flags], 0", "movups  xmmword ptr [rsp+88h+o.quote_these_too], xmm0", "movups  xmmword ptr [rsp+88h+o.quote_these_too+10h], xmm0", "pxor    xmm0, xmm0", "movups  xmmword ptr [rsp+88h+o.left_quote], xmm0", "call    ___errno_location", "test    ebx, ebx", "mov     rbp, rax", "mov     r13d, [rax]", "mov     r15, cs:slotvec_0", "js      loc_9979"], ["pxor~xmm0,xmm0", "movsxd~rbx,edi", "mov~r12,arg", "mov~[rsp+0],esi", "mov~[rsp+0],esi", "mov~[rsp+0],0", "movups~[mmword ptr [rsp+0],xmm0", "movups~[mmword ptr [rsp+0],xmm0", "pxor~xmm0,xmm0", "movups~[mmword ptr [rsp+0],xmm0", "call~FOO", "test~ebx,ebx", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~r15,<TAG>", "js~FOO"]], [0, 0, 2, 0, 0, 5, 1, 1, 5, -1, 0.09558823529411764, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbp+0], r13d", "mov     rax, r14", "jnz     short loc_997E"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[rbp+0],r13d", "mov~rax,r14", "jnz~FOO"]], [0, 0, 8, 0, 1, 4, 0, 1, 5, -1, 0.034926470588235295, ["mov     rdi, r15; p", "call    xrealloc", "mov     r15, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r15", "call~FOO", "mov~r15,rax", "mov~<TAG>,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 8, 0, 1, 7, 1, 2, 5, -1, 0.034926470588235295, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r15, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_9818"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r15,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [11, 8, 21, 1, 18, 22, 2, 134, 0.05127, 5, 14], "succs": [[12, 14], [0, 13], [10, 15], [8, 11], [3], [3], [1, 4], [11], [9, 7], [7], [6, 15], [16, 17], [5], [], [5], [], [], []], "fname": "quotearg_n_style", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 7, 0, 0, 4, 2, 1, 0, 0, 0.07720588235294118, ["xor     eax, eax", "xor     edx, edx", "mov     [rsp+88h+flags], 1", "jmp     loc_9A8F"], ["xor~eax,eax", "xor~edx,edx", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 14, 0, 0, 3, 0, 1, 2, 2, 0.10294117647058823, ["cmp     r12d, cs:nslots", "mov     r8d, [rsp+88h+flags]", "jl      loc_9B98"], ["cmp~r12d,<TAG>", "mov~r8d,<TAG>", "jl~FOO"]], [0, 0, 5, 0, 0, 5, 0, 1, 5, -1, 0.07352941176470588, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_9AFC"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [2, 1, 6, 4, 1, 21, 0, 2, 4, -1, 0.19852941176470587, ["shl     n, 4", "sub     rsp, 8", "mov     rcx, argsize; argsize", "add     rbx, r12", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "push    rdx; right_quote", "push    rax; left_quote", "mov     rdx, arg; arg", "lea     r12, [rsp+0A0h+o]", "mov     rsi, r11; buffersize", "mov     rdi, rbp; buffer", "lea     rax, [r12+8]", "push    rax; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_9B43"], ["shl~n,0", "sub~rsp,0", "mov~rcx,argsize", "add~rbx,r12", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "push~rdx", "push~rax", "mov~rdx,arg", "lea~r12,[rsp+0]", "mov~rsi,r11", "mov~rdi,rbp", "lea~rax,[r12+0]", "push~rax", "mov~r9d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,rax", "ja~FOO"]], [0, 0, 8, 0, 1, 4, 0, 1, 5, -1, 0.034926470588235295, ["mov     rdi, rbx; p", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [1, 0, 10, 1, 0, 6, 0, 1, 4, -1, 0.06985294117647059, ["lea     ebp, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, ebp", "shl     rsi, 4; n", "cmp     rbx, rax", "jz      loc_9B70"], ["lea~ebp,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,ebp", "shl~rsi,0", "cmp~rbx,rax", "jz~FOO"]], [3, 0, 7, 4, 1, 16, 2, 1, 6, -1, 0.10294117647058823, ["movsxd  rdi, cs:nslots", "mov     edx, ebp", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     eax, [rsp+88h+o.flags]", "mov     rdx, [rsp+88h+o.right_quote]", "mov     r8d, [rsp+88h+o.style]; quoting_style", "mov     cs:nslots, ebp", "or      eax, 1", "mov     [rsp+88h+flags], eax", "mov     rax, [rsp+88h+o.left_quote]"], ["movsxd~rdi,<TAG>", "mov~edx,ebp", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~eax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,ebp", "or~eax,0", "mov~<TAG>,eax", "mov~rax,[rsp+0]"]], [0, 0, 8, 0, 1, 7, 1, 2, 5, -1, 0.034926470588235295, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_9A50"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [0, 0, 2, 0, 0, 6, 1, 1, 5, -1, 0.09558823529411764, ["mov     eax, [rsp+88h+var_84]", "mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [r13+0], eax", "mov     rax, rbp", "jnz     short loc_9BAD"], ["mov~eax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[r13+0],eax", "mov~rax,rbp", "jnz~FOO"]], [2, 1, 3, 3, 2, 18, 0, 2, 6, -1, 0.022058823529411763, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r12, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+o.right_quote]; right_quote", "push    [rsp+98h+o.left_quote]; left_quote", "mov     rdx, arg; arg", "push    r12; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+o.style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "add~r12,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r12", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [1, 0, 16, 0, 1, 18, 1, 2, 1, 3, 0.05514705882352941, ["pxor    xmm0, xmm0", "movsxd  r12, edi", "mov     r14, arg", "mov     r15, argsize", "mov     [rsp+88h+o.style], esi", "mov     [rsp+88h+flags], esi", "mov     [rsp+88h+o.flags], 0", "movups  xmmword ptr [rsp+88h+o.quote_these_too], xmm0", "movups  xmmword ptr [rsp+88h+o.quote_these_too+10h], xmm0", "pxor    xmm0, xmm0", "movups  xmmword ptr [rsp+88h+o.left_quote], xmm0", "call    ___errno_location", "mov     r13, rax", "test    r12d, r12d", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     [rsp+88h+var_84], eax", "js      loc_9BA8"], ["pxor~xmm0,xmm0", "movsxd~r12,edi", "mov~r14,arg", "mov~r15,argsize", "mov~[rsp+0],esi", "mov~<TAG>,esi", "mov~[rsp+0],0", "movups~[mmword ptr [rsp+0],xmm0", "movups~[mmword ptr [rsp+0],xmm0", "pxor~xmm0,xmm0", "movups~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~r13,rax", "test~r12d,r12d", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [1, 1, 17, 1, 0, 12, 1, 1, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "cmp     esi, 0Ah", "jz      loc_9BA8"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~esi,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 3, 1, 0.05514705882352941, ["cmp     r12d, 7FFFFFFFh", "jz      loc_9BB2"], ["cmp~r12d,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 6, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+buffersize], rsi", "call    _free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,rbp", "mov~[rsp+0],rsi", "call~FOO", "mov~rsi,[rsp+0]"]]], "func_feature": [11, 8, 21, 2, 18, 22, 1, 137, 0.05127, 5, 14], "succs": [[3], [0, 14], [17, 10], [9, 2], [6], [4, 7], [3], [6], [], [8, 16], [9], [1, 15], [11, 15], [], [13, 5], [], [], [10]], "fname": "quotearg_n_style_mem", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 10, 0, 0, 3, 0, 1, 0, 0, 0.03296703296703297, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_9D80"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 12, 0, 1, 17, 1, 2, 1, -1, 0.06593406593406594, ["pxor    xmm0, xmm0", "mov     r12, arg", "mov     [rsp+88h+quoting_style], edi", "mov     [rsp+88h+s], edi", "mov     [rsp+88h+var_74], 0", "movups  [rsp+88h+var_70], xmm0", "movups  [rsp+88h+var_60], xmm0", "pxor    xmm0, xmm0", "movups  xmmword ptr [rsp+88h+left_quote], xmm0", "call    ___errno_location", "mov     rbp, rax", "mov     r13d, [rax]", "mov     eax, cs:nslots", "mov     rbx, cs:slotvec_0", "mov     r8d, [rsp+88h+s]", "test    eax, eax", "jg      loc_9DB0"], ["pxor~xmm0,xmm0", "mov~r12,arg", "mov~[rsp+0],edi", "mov~[rsp+0],edi", "mov~[rsp+0],0", "movups~[rsp+0],xmm0", "movups~[rsp+0],xmm0", "pxor~xmm0,xmm0", "movups~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~r8d,[rsp+0]", "test~eax,eax", "jg~FOO"]], [1, 1, 14, 1, 0, 12, 1, 1, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "cmp     edi, 0Ah", "jz      loc_9DC6"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edi,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [2, 1, 6, 2, 1, 19, 0, 2, 3, -1, 0.23076923076923078, ["sub     rsp, 8", "mov     r11, [rbx]", "mov     r14, [rbx+8]", "push    rdx; right_quote", "push    rax; left_quote", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "lea     r15, [rsp+0A0h+quoting_style]", "mov     rsi, r11; buffersize", "mov     rdi, r14; buffer", "lea     rax, [r15+8]", "push    rax; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_9D58"], ["sub~rsp,0", "mov~r11,<TAG>", "mov~r14,[rbx+0]", "push~rdx", "push~rax", "mov~rcx,0", "mov~rdx,arg", "lea~r15,[rsp+0]", "mov~rsi,r11", "mov~rdi,r14", "lea~rax,[r15+0]", "push~rax", "mov~r9d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,rax", "ja~FOO"]], [1, 0, 7, 0, 0, 4, 2, 1, 2, -1, 0.07692307692307693, ["xor     eax, eax", "xor     edx, edx", "mov     [rsp+88h+s], 1", "jmp     loc_9CA4"], ["xor~eax,eax", "xor~edx,edx", "mov~[rsp+0],0", "jmp~FOO"]], [5, 0, 7, 4, 1, 16, 2, 1, 4, -1, 0.11538461538461539, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     eax, [rsp+88h+var_74]", "mov     rdx, [rsp+88h+left_quote+8]", "mov     r8d, [rsp+88h+quoting_style]; quoting_style", "mov     cs:nslots, 1", "or      eax, 1", "mov     [rsp+88h+s], eax", "mov     rax, [rsp+88h+left_quote]"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~eax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,0", "or~eax,0", "mov~[rsp+0],eax", "mov~rax,[rsp+0]"]], [1, 0, 8, 0, 1, 8, 1, 2, 3, -1, 0.027472527472527476, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_9C5D"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 5, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+88h+buffersize], rsi", "call    _free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r14", "mov~[rsp+0],rsi", "call~FOO", "mov~rsi,[rsp+0]"]], [0, 0, 5, 0, 0, 5, 0, 1, 4, -1, 0.08791208791208792, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_9D0D"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 2, 0, 0, 5, 1, 1, 4, -1, 0.1208791208791209, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbp+0], r13d", "mov     rax, r14", "jnz     short loc_9DC1"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[rbp+0],r13d", "mov~rax,r14", "jnz~FOO"]], [3, 1, 3, 3, 2, 18, 0, 2, 5, -1, 0.03296703296703297, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r15, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+left_quote+8]; right_quote", "push    [rsp+98h+left_quote]; left_quote", "mov     rdx, arg; arg", "push    r15; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "add~r15,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 3, -1, 0.027472527472527476, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 1, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [10, 8, 18, 4, 15, 18, 20, 126, 0.05458, 5, 11], "succs": [[13, 7], [0, 5], [1, 3], [], [9, 10], [4], [4], [6], [11], [8, 11], [12, 14], [10], [], [6], []], "fname": "quotearg_style", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[2, 1, 3, 3, 2, 18, 0, 2, 0, 0, 0.03296703296703297, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r12, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+left_quote+8]; right_quote", "push    [rsp+98h+left_quote]; left_quote", "mov     rdx, arg; arg", "push    r12; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "add~r12,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r12", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 5, 0, 0, 5, 0, 1, 4, -1, 0.08791208791208792, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_9F1D"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 5, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+buffersize], rsi", "call    _free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,rbp", "mov~[rsp+0],rsi", "call~FOO", "mov~rsi,[rsp+0]"]], [1, 0, 12, 0, 1, 19, 1, 2, 1, -1, 0.06593406593406594, ["pxor    xmm0, xmm0", "mov     r14, arg", "mov     r15, argsize", "mov     [rsp+88h+quoting_style], edi", "mov     [rsp+88h+flags], edi", "mov     [rsp+88h+var_74], 0", "movups  [rsp+88h+var_70], xmm0", "movups  [rsp+88h+var_60], xmm0", "pxor    xmm0, xmm0", "movups  xmmword ptr [rsp+88h+left_quote], xmm0", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     r8d, [rsp+88h+flags]", "mov     [rsp+88h+var_84], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      loc_9FC0"], ["pxor~xmm0,xmm0", "mov~r14,arg", "mov~r15,argsize", "mov~[rsp+0],edi", "mov~<TAG>,edi", "mov~[rsp+0],0", "movups~[rsp+0],xmm0", "movups~[rsp+0],xmm0", "pxor~xmm0,xmm0", "movups~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~r8d,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]], [1, 1, 14, 1, 0, 12, 1, 1, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "cmp     edi, 0Ah", "jz      loc_9FD5"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edi,0", "jz~FOO"]], [1, 0, 8, 0, 1, 8, 1, 2, 3, -1, 0.027472527472527476, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_9E71"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 10, 0, 0, 3, 0, 1, 2, -1, 0.03296703296703297, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_9F90"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 1, 6, 2, 1, 19, 0, 2, 3, -1, 0.23076923076923078, ["sub     rsp, 8", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "push    rdx; right_quote", "push    rax; left_quote", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "lea     r12, [rsp+0A0h+quoting_style]", "mov     rsi, r11; buffersize", "mov     rdi, rbp; buffer", "lea     rax, [r12+8]", "push    rax; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_9F64"], ["sub~rsp,0", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "push~rdx", "push~rax", "mov~rcx,argsize", "mov~rdx,arg", "lea~r12,[rsp+0]", "mov~rsi,r11", "mov~rdi,rbp", "lea~rax,[r12+0]", "push~rax", "mov~r9d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,rax", "ja~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 3, -1, 0.027472527472527476, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [1, 0, 7, 0, 0, 4, 2, 1, 2, -1, 0.07692307692307693, ["xor     eax, eax", "xor     edx, edx", "mov     [rsp+88h+flags], 1", "jmp     loc_9EB7"], ["xor~eax,eax", "xor~edx,edx", "mov~<TAG>,0", "jmp~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [0, 0, 2, 0, 0, 6, 1, 1, 4, -1, 0.1208791208791209, ["mov     eax, [rsp+88h+var_84]", "mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [r13+0], eax", "mov     rax, rbp", "jnz     short loc_9FD0"], ["mov~eax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[r13+0],eax", "mov~rax,rbp", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [5, 0, 7, 4, 1, 16, 2, 1, 4, -1, 0.11538461538461539, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     eax, [rsp+88h+var_74]", "mov     rdx, [rsp+88h+left_quote+8]", "mov     r8d, [rsp+88h+quoting_style]; quoting_style", "mov     cs:nslots, 1", "or      eax, 1", "mov     [rsp+88h+flags], eax", "mov     rax, [rsp+88h+left_quote]"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~eax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,0", "or~eax,0", "mov~<TAG>,eax", "mov~rax,[rsp+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [10, 8, 18, 5, 15, 18, 0, 129, 0.05458, 5, 11], "succs": [[11], [0, 2], [0], [9, 6], [3, 14], [13], [8, 5], [1, 11], [13], [7], [], [10, 12], [], [7], []], "fname": "quotearg_style_mem", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 2, 0, 0, 6, 1, 1, 0, 0, 0.16363636363636364, ["mov     eax, [rsp+88h+var_80]", "mov     rbx, [rsp+88h+var_40]", "xor     rbx, fs:28h", "mov     [r13+0], eax", "mov     rax, r12", "jnz     short loc_A1DE"], ["mov~eax,[rsp+0]", "mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "mov~[r13+0],eax", "mov~rax,r12", "jnz~FOO"]], [2, 1, 6, 2, 1, 22, 1, 2, 1, 2, 0.2727272727272727, ["mov     eax, [rsp+88h+options.flags]", "mov     r11, [rbx]", "sub     rsp, 8", "mov     r12, [rbx+8]", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+90h+flags], eax", "mov     r9d, eax; flags", "lea     rax, [rbp+8]", "push    [rsp+90h+options.right_quote]; right_quote", "push    [rsp+98h+options.left_quote]; left_quote", "mov     rdi, r12; buffer", "push    rax; quote_these_too", "mov     r8d, [rsp+0A8h+options.style]; quoting_style", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_A188"], ["mov~eax,[rsp+0]", "mov~r11,<TAG>", "sub~rsp,0", "mov~r12,[rbx+0]", "mov~rcx,argsize", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "mov~r9d,eax", "lea~rax,[rbp+0]", "push~[rsp+0]", "push~[rsp+0]", "mov~rdi,r12", "push~rax", "mov~r8d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [2, 1, 3, 3, 2, 18, 0, 2, 3, 2, 0.05454545454545454, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     rbp, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+options.right_quote]; right_quote", "push    [rsp+98h+options.left_quote]; left_quote", "mov     rdx, arg; arg", "push    rbp; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+options.style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r12, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~rbp,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~rbp", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r12,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 5, 0, 0, 5, 0, 1, 2, 3, 0.10909090909090909, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r12, rax", "mov     [rbx], rsi", "jz      short loc_A143"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r12,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 3, 3, 0.0, ["mov     rdi, r12; ptr", "mov     [rsp+88h+buffersize], rsi", "call    _free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r12", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 10, 0, 0, 3, 0, 1, 1, 5, 0.02727272727272727, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_A1B8"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [3, 1, 11, 2, 1, 43, 5, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r15, argsize", "push    r13", "push    r12", "mov     ecx, edx", "push    rbp", "push    rbx", "and     ecx, 1Fh", "mov     r14, arg", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "mov     rax, cs:default_quoting_options.right_quote", "lea     rbp, [rsp+88h+options]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     [rsp+88h+options.right_quote], rax", "mov     eax, edx", "movaps  xmmword ptr [rsp+88h+options.style], xmm0", "shr     al, 5", "movzx   eax, al", "lea     argsize, [rbp+rax*4+8]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "movaps  xmmword ptr [rsp+88h+options.quote_these_too+8], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+options.quote_these_too+18h], xmm0", "mov     edx, [rsi]", "mov     eax, edx", "shr     eax, cl", "not     eax", "and     eax, 1", "shl     eax, cl", "xor     eax, edx", "mov     [rsi], eax", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     [rsp+88h+var_80], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      short loc_A0D2"], ["push~r15", "push~r14", "mov~r15,argsize", "push~r13", "push~r12", "mov~ecx,edx", "push~rbp", "push~rbx", "and~ecx,0", "mov~r14,arg", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "lea~rbp,[rsp+0]", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "mov~eax,edx", "movaps~[mmword ptr [rsp+0],xmm0", "shr~al,0", "movzx~eax,al", "lea~argsize,[rbp+0]", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "mov~edx,<TAG>", "mov~eax,edx", "shr~eax,cl", "not~eax", "and~eax,0", "shl~eax,cl", "xor~eax,edx", "mov~<TAG>,eax", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [4, 0, 7, 4, 1, 10, 1, 1, 3, 3, 0.1909090909090909, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [1, 0, 8, 0, 1, 8, 1, 2, 2, 4, 0.04090909090909091, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_A0A5"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 2, 4, 0.04090909090909091, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 1, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]]], "func_feature": [9, 9, 15, 2, 12, 15, 0, 133, 0.075, 9, 12], "succs": [[11, 7], [0, 3], [0], [2, 4], [2], [9, 10], [1, 5], [], [1], [8], [8], []], "fname": "quotearg_char_mem", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 5, 0, 0, 5, 0, 1, 0, 0, 0.10909090909090909, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r15, rax", "mov     [r12], rsi", "jz      short loc_A354"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r15,rax", "mov~<TAG>,rsi", "jz~FOO"]], [3, 1, 6, 2, 1, 22, 1, 2, 1, 2, 0.2727272727272727, ["mov     eax, [rsp+88h+quoting_style+4]", "mov     r11, [r12]", "sub     rsp, 8", "mov     r15, [r12+8]", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+90h+flags], eax", "mov     r9d, eax; flags", "lea     rax, [rbx+8]", "push    [rsp+90h+right_quote]; right_quote", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdi, r15; buffer", "push    rax; quote_these_too", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_A39E"], ["mov~eax,[rsp+0]", "mov~r11,<TAG>", "sub~rsp,0", "mov~r15,[r12+0]", "mov~rcx,0", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "mov~r9d,eax", "lea~rax,[rbx+0]", "push~[rsp+0]", "push~[rsp+0]", "mov~rdi,r15", "push~rax", "mov~r8d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     arg", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~arg", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 5, 1, 1, 2, 1, 0.16363636363636364, ["mov     rbx, [rsp+88h+var_40]", "xor     rbx, fs:28h", "mov     [r13+0], r14d", "mov     rax, r15", "jnz     short loc_A3EE"], ["mov~rbx,[rsp+0]", "xor~rbx,<TAG>", "mov~[r13+0],r14d", "mov~rax,r15", "jnz~FOO"]], [3, 1, 11, 2, 1, 41, 5, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     ecx, esi", "push    r13", "push    r12", "and     ecx, 1Fh", "push    rbp", "push    rbx", "mov     rbp, arg", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "mov     rax, cs:default_quoting_options.right_quote", "lea     rbx, [rsp+88h+quoting_style]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     [rsp+88h+right_quote], rax", "mov     eax, esi", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "shr     al, 5", "movzx   eax, al", "lea     rdx, [rbx+rax*4+8]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "movaps  [rsp+88h+var_68], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+left_quote], xmm0", "mov     esi, [rdx]", "mov     eax, esi", "shr     eax, cl", "not     eax", "and     eax, 1", "shl     eax, cl", "xor     eax, esi", "mov     [rdx], eax", "call    ___errno_location", "mov     r13, rax", "mov     r14d, [rax]", "mov     eax, cs:nslots", "mov     r12, cs:slotvec_0", "test    eax, eax", "jg      short loc_A2DC"], ["push~r15", "push~r14", "mov~ecx,esi", "push~r13", "push~r12", "and~ecx,0", "push~rbp", "push~rbx", "mov~rbp,arg", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "lea~rbx,[rsp+0]", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "mov~eax,esi", "movaps~[mmword ptr [rsp+0],xmm0", "shr~al,0", "movzx~eax,al", "lea~rdx,[rbx+0]", "movdqa~xmm0,<TAG>", "movaps~[rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "mov~esi,<TAG>", "mov~eax,esi", "shr~eax,cl", "not~eax", "and~eax,0", "shl~eax,cl", "xor~eax,esi", "mov~<TAG>,eax", "call~FOO", "mov~r13,rax", "mov~r14d,<TAG>", "mov~eax,<TAG>", "mov~r12,<TAG>", "test~eax,eax", "jg~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 2, 4, 0.04090909090909091, ["mov     rdi, r12; p", "mov     esi, 10h; n", "call    xrealloc", "mov     r12, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r12", "mov~esi,0", "call~FOO", "mov~r12,rax", "mov~<TAG>,rax"]], [0, 0, 10, 0, 0, 3, 0, 1, 1, 5, 0.02727272727272727, ["lea     rax, slotvec0", "cmp     r12, rax", "jz      loc_A3C8"], ["lea~rax,<TAG>", "cmp~r12,rax", "jz~FOO"]], [1, 0, 8, 0, 1, 8, 1, 2, 2, 4, 0.04090909090909091, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r12, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_A2AF"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r12,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [4, 0, 7, 4, 1, 10, 1, 1, 3, 3, 0.1909090909090909, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r12; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r12", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [0, 0, 4, 0, 1, 4, 0, 1, 3, 3, 0.0, ["mov     rdi, r15; ptr", "mov     [rsp+88h+buffersize], rsi", "call    _free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r15", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [3, 1, 3, 3, 2, 18, 0, 2, 3, 2, 0.05454545454545454, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     rbx, 8", "call    xmalloc", "sub     rsp, 8", "mov     [r12+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+right_quote]; right_quote", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdx, arg; arg", "push    rbx; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r15, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~rbx,0", "call~FOO", "sub~rsp,0", "mov~[r12+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~rbx", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r15,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [9, 9, 15, 2, 12, 15, 0, 130, 0.075, 9, 12], "succs": [[9, 10], [0, 3], [], [2, 11], [1, 6], [8], [5, 7], [8], [1], [10], [3], []], "fname": "quotearg_char", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 1, 0, 1, 0, 8, 0, 0, 0, 0, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 5, 1, 1, 2, 1, 0.16363636363636364, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbp+0], r13d", "mov     rax, r14", "jnz     short loc_A5EE"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[rbp+0],r13d", "mov~rax,r14", "jnz~FOO"]], [1, 1, 11, 1, 1, 32, 4, 2, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, arg", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "mov     edx, [rsp+88h+quoting_style+0Ch]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+right_quote], rax", "mov     eax, edx", "not     eax", "movaps  [rsp+88h+var_68], xmm0", "and     eax, 4000000h", "xor     eax, edx", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "mov     [rsp+88h+quoting_style+0Ch], eax", "movaps  xmmword ptr [rsp+88h+left_quote], xmm0", "call    ___errno_location", "mov     rbp, rax", "mov     r13d, [rax]", "mov     eax, cs:nslots", "mov     rbx, cs:slotvec_0", "test    eax, eax", "jg      short loc_A4D7"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,arg", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "mov~edx,[rsp+0]", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "mov~eax,edx", "not~eax", "movaps~[rsp+0],xmm0", "and~eax,0", "xor~eax,edx", "movdqa~xmm0,<TAG>", "mov~[rsp+0],eax", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~eax,<TAG>", "mov~rbx,<TAG>", "test~eax,eax", "jg~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 2, 4, 0.04090909090909091, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 10, 0, 0, 3, 0, 1, 1, 5, 0.02727272727272727, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_A5C8"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 8, 0, 1, 8, 1, 2, 2, 4, 0.04090909090909091, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_A4AA"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [3, 1, 6, 2, 1, 23, 1, 2, 1, 2, 0.2727272727272727, ["mov     eax, [rsp+88h+quoting_style+4]", "sub     rsp, 8", "mov     r11, [rbx]", "mov     r14, [rbx+8]", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+90h+flags], eax", "push    [rsp+90h+right_quote]; right_quote", "mov     r9d, eax; flags", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdi, r14; buffer", "lea     r15, [rsp+0A0h+quoting_style]", "lea     rax, [r15+8]", "push    rax; quote_these_too", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_A59B"], ["mov~eax,[rsp+0]", "sub~rsp,0", "mov~r11,<TAG>", "mov~r14,[rbx+0]", "mov~rcx,0", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~[rsp+0]", "mov~r9d,eax", "push~[rsp+0]", "mov~rdi,r14", "lea~r15,[rsp+0]", "lea~rax,[r15+0]", "push~rax", "mov~r8d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [4, 0, 7, 4, 1, 10, 1, 1, 3, 3, 0.1909090909090909, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [3, 1, 3, 3, 2, 18, 0, 2, 3, 2, 0.05454545454545454, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r15, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+right_quote]; right_quote", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdx, arg; arg", "push    r15; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r15,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 4, 0, 1, 4, 0, 1, 3, 3, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+88h+buffersize], rsi", "call    _free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r14", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 5, 0, 0, 5, 0, 1, 2, 3, 0.10909090909090909, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_A551"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]]], "func_feature": [9, 8, 15, 2, 12, 15, 1, 122, 0.075, 9, 11], "succs": [[], [0, 8], [4, 6], [7], [3, 5], [7], [1, 11], [6], [], [1], [9], [9, 10]], "fname": "quotearg_colon", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 5, 0, 0, 5, 0, 1, 0, 0, 0.10909090909090909, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_A754"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [2, 1, 6, 2, 1, 23, 1, 2, 1, 2, 0.2727272727272727, ["mov     eax, [rsp+88h+quoting_style+4]", "sub     rsp, 8", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+90h+flags], eax", "push    [rsp+90h+right_quote]; right_quote", "mov     r9d, eax; flags", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdi, rbp; buffer", "lea     r12, [rsp+0A0h+quoting_style]", "lea     rax, [r12+8]", "push    rax; quote_these_too", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_A79A"], ["mov~eax,[rsp+0]", "sub~rsp,0", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "mov~rcx,argsize", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~[rsp+0]", "mov~r9d,eax", "push~[rsp+0]", "mov~rdi,rbp", "lea~r12,[rsp+0]", "lea~rax,[r12+0]", "push~rax", "mov~r8d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [0, 0, 2, 0, 0, 6, 1, 1, 2, 1, 0.16363636363636364, ["mov     eax, [rsp+88h+var_80]", "mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [r13+0], eax", "mov     rax, rbp", "jnz     short loc_A7EE"], ["mov~eax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[r13+0],eax", "mov~rax,rbp", "jnz~FOO"]], [2, 1, 3, 3, 2, 18, 0, 2, 3, 2, 0.05454545454545454, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r12, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+right_quote]; right_quote", "push    [rsp+98h+left_quote+8]; left_quote", "mov     rdx, arg; arg", "push    r12; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r12,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r12", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 4, 0, 1, 4, 0, 1, 3, 3, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+buffersize], rsi", "call    _free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [1, 1, 11, 1, 1, 34, 4, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r15, argsize", "push    r13", "push    r12", "mov     r14, arg", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "mov     edx, [rsp+88h+quoting_style+0Ch]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+right_quote], rax", "mov     eax, edx", "not     eax", "movaps  [rsp+88h+var_68], xmm0", "and     eax, 4000000h", "xor     eax, edx", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "mov     [rsp+88h+quoting_style+0Ch], eax", "movaps  xmmword ptr [rsp+88h+left_quote], xmm0", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     [rsp+88h+var_80], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      short loc_A6DD"], ["push~r15", "push~r14", "mov~r15,argsize", "push~r13", "push~r12", "mov~r14,arg", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "mov~edx,[rsp+0]", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "mov~eax,edx", "not~eax", "movaps~[rsp+0],xmm0", "and~eax,0", "xor~eax,edx", "movdqa~xmm0,<TAG>", "mov~[rsp+0],eax", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 2, 4, 0.04090909090909091, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 10, 0, 0, 3, 0, 1, 1, 5, 0.02727272727272727, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_A7C8"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [4, 0, 7, 4, 1, 10, 1, 1, 3, 3, 0.1909090909090909, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [1, 0, 8, 0, 1, 8, 1, 2, 2, 4, 0.04090909090909091, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_A6B0"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]]], "func_feature": [9, 8, 15, 3, 12, 15, 0, 125, 0.075, 9, 11], "succs": [[4, 5], [0, 3], [], [9, 2], [3], [4], [8, 1], [10], [11, 7], [], [1], [10]], "fname": "quotearg_colon_mem", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 1, 17, 1, 0, 12, 1, 1, 0, 0, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "cmp     esi, 0Ah", "jz      loc_AA21"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~esi,0", "jz~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 0, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 5, 1, 1, 0, -1, 0.09558823529411764, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbp+0], r13d", "mov     rax, r14", "jnz     short loc_AA26"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[rbp+0],r13d", "mov~rax,r14", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 0, 1, 0.05514705882352941, ["cmp     ebx, 7FFFFFFFh", "jz      loc_AA2B"], ["cmp~ebx,0", "jz~FOO"]], [0, 0, 8, 0, 1, 7, 1, 2, 0, -1, 0.034926470588235295, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r15, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_A8C0"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r15,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 10, 1, 0, 6, 0, 1, 0, -1, 0.06985294117647059, ["lea     r14d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r14d", "shl     rsi, 4; n", "cmp     r15, rax", "jz      loc_A9E8"], ["lea~r14d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r14d", "shl~rsi,0", "cmp~r15,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 14, 0, 0, 3, 0, 1, 0, 2, 0.10294117647058823, ["cmp     ebx, cs:nslots", "mov     r8d, [rsp+88h+s]", "jl      loc_AA10"], ["cmp~ebx,<TAG>", "mov~r8d,[rsp+0]", "jl~FOO"]], [1, 0, 16, 0, 1, 17, 1, 2, 0, 3, 0.05514705882352941, ["pxor    xmm0, xmm0", "movsxd  rbx, edi", "mov     r12, arg", "mov     [rsp+88h+options.style], esi", "mov     [rsp+88h+s], esi", "mov     [rsp+88h+options.flags], 0", "movups  xmmword ptr [rsp+88h+options.left_quote], xmm0", "movdqa  xmm0, cs:xmmword_12790", "movups  xmmword ptr [rsp+88h+options.quote_these_too], xmm0", "pxor    xmm0, xmm0", "movups  xmmword ptr [rsp+88h+options.quote_these_too+10h], xmm0", "call    ___errno_location", "test    ebx, ebx", "mov     rbp, rax", "mov     r13d, [rax]", "mov     r15, cs:slotvec_0", "js      loc_AA21"], ["pxor~xmm0,xmm0", "movsxd~rbx,edi", "mov~r12,arg", "mov~[rsp+0],esi", "mov~[rsp+0],esi", "mov~[rsp+0],0", "movups~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "pxor~xmm0,xmm0", "movups~[mmword ptr [rsp+0],xmm0", "call~FOO", "test~ebx,ebx", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~r15,<TAG>", "js~FOO"]], [3, 1, 6, 4, 1, 21, 0, 2, 0, -1, 0.19852941176470587, ["shl     n, 4", "sub     rsp, 8", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "add     rbx, r15", "mov     r11, [rbx]", "mov     r14, [rbx+8]", "push    rdx; right_quote", "push    rax; left_quote", "mov     rdx, arg; arg", "lea     r15, [rsp+0A0h+options]", "mov     rsi, r11; buffersize", "mov     rdi, r14; buffer", "lea     rax, [r15+8]", "push    rax; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     [rsp+0A8h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+buffersize]", "cmp     r11, rax", "ja      short loc_A9BD"], ["shl~n,0", "sub~rsp,0", "mov~rcx,0", "add~rbx,r15", "mov~r11,<TAG>", "mov~r14,[rbx+0]", "push~rdx", "push~rax", "mov~rdx,arg", "lea~r15,[rsp+0]", "mov~rsi,r11", "mov~rdi,r14", "lea~rax,[r15+0]", "push~rax", "mov~r9d,[rsp+0]", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,[rsp+0]", "cmp~r11,rax", "ja~FOO"]], [1, 0, 7, 0, 0, 4, 2, 1, 0, -1, 0.07720588235294118, ["xor     eax, eax", "xor     edx, edx", "mov     [rsp+88h+s], 1", "jmp     loc_A902"], ["xor~eax,eax", "xor~edx,edx", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 7, 4, 1, 16, 2, 1, 0, -1, 0.10294117647058823, ["movsxd  rdi, cs:nslots", "mov     edx, r14d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r15; s", "shl     rdx, 4; n", "call    _memset", "mov     eax, [rsp+88h+options.flags]", "mov     rdx, [rsp+88h+options.right_quote]", "mov     r8d, [rsp+88h+options.style]; quoting_style", "mov     cs:nslots, r14d", "or      eax, 1", "mov     [rsp+88h+s], eax", "mov     rax, [rsp+88h+options.left_quote]"], ["movsxd~rdi,<TAG>", "mov~edx,r14d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r15", "shl~rdx,0", "call~FOO", "mov~eax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,r14d", "or~eax,0", "mov~[rsp+0],eax", "mov~rax,[rsp+0]"]], [0, 0, 4, 0, 1, 4, 0, 1, 0, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+88h+buffersize], rsi", "call    _free", "mov     rsi, [rsp+88h+buffersize]"], ["mov~rdi,r14", "mov~[rsp+0],rsi", "call~FOO", "mov~rsi,[rsp+0]"]], [0, 0, 5, 0, 0, 5, 0, 1, 0, -1, 0.07352941176470588, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_A972"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [3, 1, 3, 3, 2, 18, 0, 2, 0, -1, 0.022058823529411763, ["mov     rdi, rsi; n", "mov     [rsp+88h+buffersize], rsi", "add     r15, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+options.right_quote]; right_quote", "push    [rsp+98h+options.left_quote]; left_quote", "mov     rdx, arg; arg", "push    r15; quote_these_too", "mov     r9d, [rsp+0A8h+s]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+options.style]; quoting_style", "mov     rsi, [rsp+0A8h+buffersize]; buffersize", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "add~r15,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 8, 0, 1, 4, 0, 1, 0, -1, 0.034926470588235295, ["mov     rdi, r15; p", "call    xrealloc", "mov     r15, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r15", "call~FOO", "mov~r15,rax", "mov~<TAG>,rax"]]], "func_feature": [11, 8, 21, 1, 18, 22, 7, 135, 0.05127, 6, 14], "succs": [[16, 9], [], [1, 7], [], [3, 6], [12], [17, 5], [], [11, 4], [8, 16], [2, 14], [10], [10], [15], [13, 15], [2], [], [12]], "fname": "quotearg_n_style_colon", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 12, 0, 0, 2, 0, 1, 0, 0, 0.06535947712418301, ["cmp     r15d, 7FFFFFFFh", "jz      loc_AC7D"], ["cmp~r15d,0", "jz~FOO"]], [0, 0, 14, 0, 0, 4, 0, 1, 3, 2, 0.13725490196078433, ["cmp     r15d, cs:nslots", "mov     rdx, [rsp+88h+right_quote]", "mov     rsi, [rsp+88h+left_quote]", "jl      loc_AC68"], ["cmp~r15d,<TAG>", "mov~rdx,<TAG>", "mov~rsi,[rsp+0]", "jl~FOO"]], [0, 0, 4, 0, 1, 4, 0, 1, 7, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+right_quote], rsi", "call    _free", "mov     rsi, [rsp+88h+right_quote]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 5, 0, 0, 5, 0, 1, 6, -1, 0.07189542483660132, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [r15], rsi", "jz      short loc_ABCA"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [1, 0, 10, 1, 0, 6, 0, 1, 5, -1, 0.07189542483660132, ["lea     ebp, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, ebp", "shl     rsi, 4; n", "cmp     r14, rax", "jz      loc_AC40"], ["lea~ebp,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,ebp", "shl~rsi,0", "cmp~r14,rax", "jz~FOO"]], [0, 0, 2, 0, 0, 5, 1, 1, 6, -1, 0.09150326797385622, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbx], r13d", "mov     rax, rbp", "jnz     short loc_AC78"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~<TAG>,r13d", "mov~rax,rbp", "jnz~FOO"]], [4, 1, 6, 4, 1, 23, 1, 2, 5, -1, 0.19607843137254902, ["mov     r9d, [rsp+88h+quoting_style+4]", "shl     n, 4", "sub     rsp, 8", "add     r15, r14", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     r11, [r15]", "mov     rbp, [r15+8]", "or      r9d, 1; flags", "mov     dword ptr [rsp+90h+left_quote], r9d", "push    rdx; right_quote", "mov     rdx, arg; arg", "push    rsi; left_quote", "mov     rdi, rbp; buffer", "mov     rsi, r11; buffersize", "lea     r14, [rsp+0A0h+quoting_style]", "lea     rax, [r14+8]", "push    rax; quote_these_too", "mov     [rsp+0A8h+right_quote], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+right_quote]", "cmp     r11, rax", "ja      short loc_AC14"], ["mov~r9d,[rsp+0]", "shl~n,0", "sub~rsp,0", "add~r15,r14", "mov~rcx,0", "mov~r11,<TAG>", "mov~rbp,[r15+0]", "or~r9d,0", "mov~[word ptr [rsp+0],r9d", "push~rdx", "mov~rdx,arg", "push~rsi", "mov~rdi,rbp", "mov~rsi,r11", "lea~r14,[rsp+0]", "lea~rax,[r14+0]", "push~rax", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [3, 1, 3, 3, 2, 18, 0, 2, 7, -1, 0.0196078431372549, ["mov     rdi, rsi; n", "mov     [rsp+88h+right_quote], rsi", "add     r14, 8", "call    xmalloc", "sub     rsp, 8", "mov     [r15+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+var_48]; right_quote", "push    [rsp+98h+var_58+8]; left_quote", "mov     rdx, arg; arg", "push    r14; quote_these_too", "mov     r9d, dword ptr [rsp+0A8h+left_quote]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+right_quote]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r14,0", "call~FOO", "sub~rsp,0", "mov~[r15+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r14", "mov~r9d,[word ptr [rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 16, 0, 1, 12, 1, 2, 2, 3, 0.09803921568627451, ["movsxd  r15, edi", "mov     r12, arg", "mov     [rsp+88h+var_58+8], left_quote_0", "mov     [rsp+88h+left_quote], left_quote_0", "mov     [rsp+88h+var_48], right_quote_0", "mov     [rsp+88h+right_quote], right_quote_0", "call    ___errno_location", "test    r15d, r15d", "mov     rbx, rax", "mov     r13d, [rax]", "mov     r14, cs:slotvec_0", "js      loc_AC73"], ["movsxd~r15,edi", "mov~r12,arg", "mov~[rsp+0],left_quote_0", "mov~[rsp+0],left_quote_0", "mov~[rsp+0],right_quote_0", "mov~<TAG>,right_quote_0", "call~FOO", "test~r15d,r15d", "mov~rbx,rax", "mov~r13d,<TAG>", "mov~r14,<TAG>", "js~FOO"]], [0, 0, 17, 0, 0, 2, 1, 1, 1, 4, 0.05228758169934641, ["test    right_quote_0, right_quote_0", "jz      loc_AC73"], ["test~right_quote_0,right_quote_0", "jz~FOO"]], [1, 1, 18, 1, 0, 21, 2, 1, 0, 5, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "test    left_quote_0, left_quote_0", "mov     [rsp+88h+quoting_style], 0Ah", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+var_48], rax", "movaps  [rsp+88h+var_68], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+var_58], xmm0", "jz      loc_AC73"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "test~left_quote_0,left_quote_0", "mov~[rsp+0],0", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "movaps~[rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 4, -1, 0.09150326797385622, ["mov     r8d, 0Ah", "jmp     loc_AB54"], ["mov~r8d,0", "jmp~FOO"]], [2, 0, 7, 4, 1, 13, 1, 1, 7, -1, 0.09150326797385622, ["movsxd  rdi, cs:nslots", "mov     edx, ebp", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r14; s", "shl     rdx, 4; n", "call    _memset", "mov     rdx, [rsp+88h+var_48]", "mov     rsi, [rsp+88h+var_58+8]", "mov     r8d, [rsp+88h+quoting_style]; quoting_style", "mov     cs:nslots, ebp"], ["movsxd~rdi,<TAG>", "mov~edx,ebp", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r14", "shl~rdx,0", "call~FOO", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,ebp"]], [0, 0, 8, 0, 1, 7, 1, 2, 6, -1, 0.032679738562091505, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r14, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_AB1F"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r14,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 8, 0, 1, 4, 0, 1, 6, -1, 0.032679738562091505, ["mov     rdi, r14; p", "call    xrealloc", "mov     r14, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r14", "call~FOO", "mov~r14,rax", "mov~<TAG>,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 7, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [11, 8, 22, 4, 19, 24, 0, 139, 0.05538, 9, 14], "succs": [[18, 4], [0, 11], [7], [2, 7], [13, 14], [17, 15], [3, 5], [5], [16, 1], [8, 16], [16, 9], [6], [6], [12], [12], [], [], [], []], "fname": "quotearg_n_custom", "n_num": 19}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[3, 1, 6, 4, 1, 23, 1, 2, 0, 0, 0.19607843137254902, ["mov     r9d, [rsp+88h+o.flags]", "shl     n, 4", "sub     rsp, 8", "add     rbx, rbp", "mov     rcx, argsize; argsize", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "or      r9d, 1; flags", "mov     [rsp+90h+flags], r9d", "push    rdx; right_quote", "mov     rdx, arg; arg", "push    r12; left_quote", "mov     rsi, r11; buffersize", "mov     rdi, rbp; buffer", "lea     r12, [rsp+0A0h+o]", "lea     rax, [r12+8]", "push    rax; quote_these_too", "mov     [rsp+0A8h+right_quote], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+right_quote]", "cmp     r11, rax", "ja      short loc_AE6C"], ["mov~r9d,[rsp+0]", "shl~n,0", "sub~rsp,0", "add~rbx,rbp", "mov~rcx,argsize", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "or~r9d,0", "mov~[rsp+0],r9d", "push~rdx", "mov~rdx,arg", "push~r12", "mov~rsi,r11", "mov~rdi,rbp", "lea~r12,[rsp+0]", "lea~rax,[r12+0]", "push~rax", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 4, -1, 0.09150326797385622, ["mov     r8d, 0Ah", "jmp     loc_ADB2"], ["mov~r8d,0", "jmp~FOO"]], [2, 0, 7, 4, 1, 13, 1, 1, 7, -1, 0.09150326797385622, ["movsxd  rdi, cs:nslots", "mov     edx, r12d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, r12d", "mov     rdx, [rsp+88h+o.right_quote]", "mov     r12, [rsp+88h+o.left_quote]", "mov     r8d, [rsp+88h+o.style]; quoting_style"], ["movsxd~rdi,<TAG>", "mov~edx,r12d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,r12d", "mov~rdx,[rsp+0]", "mov~r12,[rsp+0]", "mov~r8d,[rsp+0]"]], [0, 0, 4, 0, 1, 4, 0, 1, 7, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+right_quote], rsi", "call    _free", "mov     rsi, [rsp+88h+right_quote]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 5, 0, 0, 5, 0, 1, 6, -1, 0.07189542483660132, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_AE26"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [1, 0, 10, 1, 0, 6, 0, 1, 5, -1, 0.07189542483660132, ["lea     r12d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r12d", "shl     rsi, 4; n", "cmp     rbx, rax", "jz      loc_AEA0"], ["lea~r12d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r12d", "shl~rsi,0", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 4, 1, 0.06535947712418301, ["cmp     ebp, 7FFFFFFFh", "jz      loc_AEDD"], ["cmp~ebp,0", "jz~FOO"]], [0, 0, 2, 0, 0, 6, 1, 1, 6, -1, 0.09150326797385622, ["mov     eax, [rsp+88h+var_80]", "mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [r13+0], eax", "mov     rax, rbp", "jnz     short loc_AED8"], ["mov~eax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[r13+0],eax", "mov~rax,rbp", "jnz~FOO"]], [2, 1, 3, 3, 2, 18, 0, 2, 7, -1, 0.0196078431372549, ["mov     rdi, rsi; n", "mov     [rsp+88h+right_quote], rsi", "add     r12, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+o.right_quote]; right_quote", "push    [rsp+98h+o.left_quote]; left_quote", "mov     rdx, arg; arg", "push    r12; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+o.style]; quoting_style", "mov     rsi, [rsp+0A8h+right_quote]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r12,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r12", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 14, 0, 0, 3, 0, 1, 3, 2, 0.13725490196078433, ["cmp     ebp, cs:nslots", "mov     rdx, [rsp+88h+right_quote]", "jl      loc_AEC8"], ["cmp~ebp,<TAG>", "mov~rdx,<TAG>", "jl~FOO"]], [1, 1, 18, 1, 0, 21, 2, 1, 0, 5, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+o.style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "test    left_quote, left_quote", "mov     [rsp+88h+o.style], 0Ah", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+o.right_quote], rax", "movaps  xmmword ptr [rsp+88h+o.quote_these_too+8], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+o.quote_these_too+18h], xmm0", "jz      loc_AED3"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "test~left_quote,left_quote", "mov~[rsp+0],0", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "movaps~[mmword ptr [rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "jz~FOO"]], [0, 0, 16, 0, 1, 14, 1, 2, 2, 3, 0.09803921568627451, ["movsxd  rbp, edi", "mov     r12, left_quote", "mov     r14, arg", "mov     r15, argsize", "mov     [rsp+88h+o.left_quote], left_quote", "mov     [rsp+88h+o.right_quote], right_quote_0", "mov     [rsp+88h+right_quote], right_quote_0", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "test    ebp, ebp", "mov     rbx, cs:slotvec_0", "mov     [rsp+88h+var_80], eax", "js      loc_AED3"], ["movsxd~rbp,edi", "mov~r12,left_quote", "mov~r14,arg", "mov~r15,argsize", "mov~[rsp+0],left_quote", "mov~[rsp+0],right_quote_0", "mov~<TAG>,right_quote_0", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "test~ebp,ebp", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [0, 0, 17, 0, 0, 2, 1, 1, 1, 4, 0.05228758169934641, ["test    right_quote_0, right_quote_0", "jz      loc_AED3"], ["test~right_quote_0,right_quote_0", "jz~FOO"]], [0, 0, 8, 0, 1, 7, 1, 2, 6, -1, 0.032679738562091505, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_AD7B"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 8, 0, 1, 4, 0, 1, 6, -1, 0.032679738562091505, ["mov     rdi, rbx; p", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 7, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]]], "func_feature": [11, 8, 22, 2, 19, 24, 0, 141, 0.05538, 9, 14], "succs": [[4, 7], [0], [0], [8], [8, 3], [13, 14], [17, 5], [16, 18], [7], [1, 6], [12, 15], [9, 15], [11, 15], [2], [2], [], [], [], []], "fname": "quotearg_n_custom_mem", "n_num": 19}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 8, 0, 1, 8, 1, 2, 0, 0, 0.030219780219780223, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_AFBC"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 10, 0, 0, 3, 0, 1, 3, -1, 0.049450549450549455, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_B0E0"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [3, 1, 6, 2, 1, 21, 1, 2, 3, -1, 0.23076923076923078, ["mov     r9d, [rsp+88h+quoting_style+4]", "sub     rsp, 8", "mov     r11, [rbx]", "mov     r14, [rbx+8]", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "or      r9d, 1; flags", "mov     [rsp+90h+flags], r9d", "push    rsi; right_quote", "mov     rdi, r14; buffer", "push    r15; left_quote", "mov     rsi, r11; buffersize", "lea     r15, [rsp+0A0h+quoting_style]", "lea     rax, [r15+8]", "push    rax; quote_these_too", "mov     [rsp+0A8h+right_quote], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+right_quote]", "cmp     r11, rax", "ja      short loc_B0B2"], ["mov~r9d,[rsp+0]", "sub~rsp,0", "mov~r11,<TAG>", "mov~r14,[rbx+0]", "mov~rcx,0", "mov~rdx,arg", "or~r9d,0", "mov~[rsp+0],r9d", "push~rsi", "mov~rdi,r14", "push~r15", "mov~rsi,r11", "lea~r15,[rsp+0]", "lea~rax,[r15+0]", "push~rax", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [1, 0, 11, 0, 1, 14, 1, 2, 2, -1, 0.1208791208791209, ["mov     [rsp+88h+var_48], right_quote_0", "mov     [rsp+88h+right_quote], right_quote_0", "mov     r15, left_quote", "mov     r12, arg", "mov     [rsp+88h+var_58+8], left_quote", "call    ___errno_location", "mov     rbp, rax", "mov     r13d, [rax]", "mov     eax, cs:nslots", "mov     rbx, cs:slotvec_0", "mov     r8d, 0Ah", "mov     rsi, [rsp+88h+right_quote]", "test    eax, eax", "jg      short loc_AFF8"], ["mov~[rsp+0],right_quote_0", "mov~<TAG>,right_quote_0", "mov~r15,left_quote", "mov~r12,arg", "mov~[rsp+0],left_quote", "call~FOO", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~r8d,0", "mov~rsi,<TAG>", "test~eax,eax", "jg~FOO"]], [4, 0, 7, 4, 1, 13, 1, 1, 5, -1, 0.11538461538461539, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     rsi, [rsp+88h+var_48]", "mov     left_quote, [rsp+88h+var_58+8]", "mov     r8d, [rsp+88h+quoting_style]; quoting_style", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~rsi,[rsp+0]", "mov~left_quote,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 4, 0, 1, 4, 0, 1, 5, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+88h+right_quote], rsi", "call    _free", "mov     rsi, [rsp+88h+right_quote]"], ["mov~rdi,r14", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 5, 0, 0, 5, 0, 1, 4, -1, 0.08791208791208792, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_B068"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 5, 1, 1, 4, -1, 0.1208791208791209, ["mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [rbp+0], r13d", "mov     rax, r14", "jnz     short loc_B106"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[rbp+0],r13d", "mov~rax,r14", "jnz~FOO"]], [3, 1, 3, 3, 2, 18, 0, 2, 5, -1, 0.03296703296703297, ["mov     rdi, rsi; n", "mov     [rsp+88h+right_quote], rsi", "add     r15, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    [rsp+90h+var_48]; right_quote", "push    [rsp+98h+var_58+8]; left_quote", "mov     rdx, arg; arg", "push    r15; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+right_quote]; buffersize", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r15,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,0", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r15", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 1, 14, 1, 0, 21, 2, 1, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "test    left_quote, left_quote", "mov     [rsp+88h+quoting_style], 0Ah", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+var_48], rax", "movaps  [rsp+88h+var_68], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+var_58], xmm0", "jz      loc_B10B"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "test~left_quote,left_quote", "mov~[rsp+0],0", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "movaps~[rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 1, 1, 0.06593406593406594, ["test    right_quote_0, right_quote_0", "jz      loc_B10B"], ["test~right_quote_0,right_quote_0", "jz~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 4, -1, 0.030219780219780223, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 1, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [10, 8, 18, 4, 15, 19, 0, 129, 0.05897, 9, 11], "succs": [[4], [0, 13], [8, 6], [1, 2], [2], [9], [9, 5], [], [14, 7], [8], [], [10, 12], [10, 3], [4], []], "fname": "quotearg_custom", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 8, 0, 1, 8, 1, 2, 0, 0, 0.030219780219780223, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_B1E2"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 10, 0, 0, 3, 0, 1, 3, -1, 0.049450549450549455, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_B300"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 11, 0, 1, 16, 1, 2, 2, -1, 0.1208791208791209, ["mov     [rsp+88h+var_48], right_quote_0", "mov     [rsp+88h+right_quote], right_quote_0", "mov     r12, left_quote", "mov     r14, arg", "mov     r15, argsize", "mov     [rsp+88h+var_58+8], left_quote", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     r8d, 0Ah", "mov     rsi, [rsp+88h+right_quote]", "mov     [rsp+88h+var_80], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      short loc_B21E"], ["mov~[rsp+0],right_quote_0", "mov~<TAG>,right_quote_0", "mov~r12,left_quote", "mov~r14,arg", "mov~r15,argsize", "mov~[rsp+0],left_quote", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~r8d,0", "mov~rsi,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]], [2, 1, 6, 2, 1, 21, 1, 2, 3, -1, 0.23076923076923078, ["mov     r9d, [rsp+88h+quoting_style+4]", "sub     rsp, 8", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "or      r9d, 1; flags", "mov     [rsp+90h+flags], r9d", "push    rsi; right_quote", "mov     rdi, rbp; buffer", "push    r12; left_quote", "mov     rsi, r11; buffersize", "lea     r12, [rsp+0A0h+quoting_style]", "lea     rax, [r12+8]", "push    rax; quote_these_too", "mov     [rsp+0A8h+right_quote], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+88h+right_quote]", "cmp     r11, rax", "ja      short loc_B2D1"], ["mov~r9d,[rsp+0]", "sub~rsp,0", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "mov~rcx,argsize", "mov~rdx,arg", "or~r9d,0", "mov~[rsp+0],r9d", "push~rsi", "mov~rdi,rbp", "push~r12", "mov~rsi,r11", "lea~r12,[rsp+0]", "lea~rax,[r12+0]", "push~rax", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [4, 0, 7, 4, 1, 13, 1, 1, 5, -1, 0.11538461538461539, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     rsi, [rsp+88h+var_48]", "mov     left_quote, [rsp+88h+var_58+8]", "mov     r8d, [rsp+88h+quoting_style]; quoting_style", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~rsi,[rsp+0]", "mov~left_quote,[rsp+0]", "mov~r8d,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 4, 0, 1, 4, 0, 1, 5, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+88h+right_quote], rsi", "call    _free", "mov     rsi, [rsp+88h+right_quote]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 5, 0, 0, 5, 0, 1, 4, -1, 0.08791208791208792, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_B28B"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 2, 0, 0, 6, 1, 1, 4, -1, 0.1208791208791209, ["mov     eax, [rsp+88h+var_80]", "mov     rcx, [rsp+88h+var_40]", "xor     rcx, fs:28h", "mov     [r13+0], eax", "mov     rax, rbp", "jnz     short loc_B326"], ["mov~eax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~[r13+0],eax", "mov~rax,rbp", "jnz~FOO"]], [2, 1, 3, 3, 2, 18, 0, 2, 5, -1, 0.03296703296703297, ["mov     rdi, rsi; n", "mov     [rsp+88h+right_quote], rsi", "add     r12, 8", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     rcx, argsize; argsize", "push    [rsp+90h+var_48]; right_quote", "push    [rsp+98h+var_58+8]; left_quote", "mov     rdx, arg; arg", "push    r12; quote_these_too", "mov     r9d, [rsp+0A8h+flags]; flags", "mov     rdi, rax; buffer", "mov     r8d, [rsp+0A8h+quoting_style]; quoting_style", "mov     rsi, [rsp+0A8h+right_quote]; buffersize", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "add~r12,0", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~rcx,argsize", "push~[rsp+0]", "push~[rsp+0]", "mov~rdx,arg", "push~r12", "mov~r9d,[rsp+0]", "mov~rdi,rax", "mov~r8d,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 1, 14, 1, 0, 21, 2, 1, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 58h", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     rax, fs:28h", "mov     [rsp+88h+var_40], rax", "xor     eax, eax", "movaps  xmmword ptr [rsp+88h+quoting_style], xmm0", "mov     rax, cs:default_quoting_options.right_quote", "test    left_quote, left_quote", "mov     [rsp+88h+quoting_style], 0Ah", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "mov     [rsp+88h+var_48], rax", "movaps  [rsp+88h+var_68], xmm0", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+18h", "movaps  xmmword ptr [rsp+88h+var_58], xmm0", "jz      loc_B32B"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "movdqa~xmm0,<TAG>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movaps~[mmword ptr [rsp+0],xmm0", "mov~rax,<TAG>", "test~left_quote,left_quote", "mov~[rsp+0],0", "movdqa~xmm0,<TAG>", "mov~[rsp+0],rax", "movaps~[rsp+0],xmm0", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 1, 1, 0.06593406593406594, ["test    right_quote_0, right_quote_0", "jz      loc_B32B"], ["test~right_quote_0,right_quote_0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 8, 0, 1, 5, 0, 1, 4, -1, 0.030219780219780223, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 1, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arg", "pop~argsize", "retn"]]], "func_feature": [10, 8, 18, 5, 15, 19, 0, 132, 0.05897, 9, 11], "succs": [[4], [0, 13], [1, 3], [6, 7], [3], [8], [8, 5], [12, 14], [7], [], [9, 11], [9, 2], [], [4], []], "fname": "quotearg_custom_mem", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 1, 1, 2, 2, 17, 0, 2, 0, 0, 0.01282051282051282, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "push    cs:quote_quoting_options.right_quote; right_quote", "push    cs:quote_quoting_options.left_quote; left_quote", "mov     rcx, argsize; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,argsize", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.10256410256410256, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_B451"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+48h+buffersize], rsi", "call    _free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [2, 0, 5, 4, 1, 10, 1, 1, 5, -1, 0.1282051282051282, ["movsxd  rdi, cs:nslots", "mov     edx, r15d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, r15d"], ["movsxd~rdi,<TAG>", "mov~edx,r15d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,r15d"]], [0, 0, 6, 0, 1, 7, 1, 2, 4, -1, 0.04487179487179487, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_B3A5"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 6, 0, 1, 4, 0, 1, 4, -1, 0.04487179487179487, ["mov     rdi, rbx; p", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [1, 0, 0, 1, 0, 11, 0, 0, 3, -1, 0.0, ["mov     eax, [rsp+48h+var_40]", "mov     [r12], eax", "add     rsp, 18h", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~<TAG>,eax", "add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~argsize", "pop~r15", "retn"]], [3, 1, 4, 4, 1, 24, 1, 2, 2, -1, 0.1794871794871795, ["mov     eax, cs:quote_quoting_options.flags", "shl     n, 4", "lea     r15, quote_quoting_options.quote_these_too", "add     rbx, rbp", "sub     rsp, 8", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "mov     r11, [rbx]", "mov     rbp, [rbx+8]", "mov     rcx, argsize; argsize", "or      eax, 1", "mov     rdx, arg; arg", "mov     [rsp+50h+flags], eax", "push    cs:quote_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:quote_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rsi, r11; buffersize", "mov     rdi, rbp; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_B499"], ["mov~eax,<TAG>", "shl~n,0", "lea~r15,<TAG>", "add~rbx,rbp", "sub~rsp,0", "mov~r8d,<TAG>", "mov~r11,<TAG>", "mov~rbp,[rbx+0]", "mov~rcx,argsize", "or~eax,0", "mov~rdx,arg", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rsi,r11", "mov~rdi,rbp", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 1, 2, 0.07051282051282051, ["cmp     ebp, cs:nslots", "jl      short loc_B3CD"], ["cmp~ebp,<TAG>", "jl~FOO"]], [1, 0, 13, 1, 1, 17, 1, 2, 0, 3, 0.0, ["push    r15", "push    r14", "mov     r14, argsize", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "movsxd  rbp, edi", "sub     rsp, 18h", "call    ___errno_location", "mov     r12, rax", "mov     eax, [rax]", "test    ebp, ebp", "mov     rbx, cs:slotvec_0", "mov     [rsp+48h+var_40], eax", "js      loc_B4D9"], ["push~r15", "push~r14", "mov~r14,argsize", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "movsxd~rbp,edi", "sub~rsp,0", "call~FOO", "mov~r12,rax", "mov~eax,<TAG>", "test~ebp,ebp", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [1, 0, 8, 1, 0, 6, 0, 1, 3, -1, 0.08974358974358974, ["lea     r15d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r15d", "shl     rsi, 4; n", "cmp     rbx, rax", "jz      loc_B4B8"], ["lea~r15d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r15d", "shl~rsi,0", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 2, 1, 0.0641025641025641, ["cmp     ebp, 7FFFFFFFh", "jz      loc_B4DE"], ["cmp~ebp,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [10, 4, 17, 1, 14, 17, 0, 111, 0.05266, 9, 13], "succs": [[6], [0, 2], [0], [7], [3], [3], [], [1, 6], [11, 7], [8, 13], [4, 5], [10, 12], [], []], "fname": "quote_n_mem", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 9, 1, 1, 17, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "mov     r14, argsize", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "sub     rsp, 18h", "call    ___errno_location", "mov     r12, rax", "mov     eax, [rax]", "mov     rbx, cs:slotvec_0", "mov     [rsp+48h+var_40], eax", "mov     eax, cs:nslots", "test    eax, eax", "jg      short loc_B577"], ["push~r15", "push~r14", "mov~r14,argsize", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "sub~rsp,0", "call~FOO", "mov~r12,rax", "mov~eax,<TAG>", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "mov~eax,<TAG>", "test~eax,eax", "jg~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 0, -1, 0.16666666666666666, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     rbp, rax", "mov     [rbx], rsi", "jz      short loc_B5F4"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~rbp,rax", "mov~<TAG>,rsi", "jz~FOO"]], [2, 1, 4, 2, 1, 22, 1, 2, 0, -1, 0.2777777777777778, ["mov     eax, cs:quote_quoting_options.flags", "mov     r11, [rbx]", "lea     r15, quote_quoting_options.quote_these_too", "mov     rbp, [rbx+8]", "sub     rsp, 8", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+50h+flags], eax", "push    cs:quote_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:quote_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rdi, rbp; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_B63C"], ["mov~eax,<TAG>", "mov~r11,<TAG>", "lea~r15,<TAG>", "mov~rbp,[rbx+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rdi,rbp", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [1, 0, 6, 0, 1, 5, 0, 1, 0, -1, 0.048611111111111105, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 8, 0, 0, 3, 0, 1, 0, 1, 0.041666666666666664, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_B660"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 6, 0, 1, 8, 1, 2, 0, 0, 0.048611111111111105, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_B54A"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [4, 0, 5, 4, 1, 10, 1, 1, 0, -1, 0.20833333333333331, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [0, 0, 2, 0, 1, 4, 0, 1, 0, -1, 0.0, ["mov     rdi, rbp; ptr", "mov     [rsp+48h+buffersize], rsi", "call    _free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,rbp", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [1, 0, 0, 1, 0, 11, 0, 0, 0, -1, 0.0, ["mov     eax, [rsp+48h+var_40]", "mov     [r12], eax", "add     rsp, 18h", "mov     rax, rbp", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~<TAG>,eax", "add~rsp,0", "mov~rax,rbp", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~argsize", "pop~r15", "retn"]], [1, 1, 1, 2, 2, 17, 0, 2, 0, -1, 0.027777777777777776, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "push    cs:quote_quoting_options.right_quote; right_quote", "push    cs:quote_quoting_options.left_quote; left_quote", "mov     rcx, argsize; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     rbp, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,argsize", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~rbp,rax", "call~FOO", "add~rsp,<STR>"]]], "func_feature": [8, 4, 13, 1, 10, 13, 0, 102, 0.08194, 9, 10], "succs": [[2, 4], [9, 7], [8, 1], [6], [3, 5], [6], [2], [9], [], [8]], "fname": "quote_mem", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[2, 0, 5, 4, 1, 10, 1, 1, 0, 0, 0.1282051282051282, ["movsxd  rdi, cs:nslots", "mov     edx, r12d", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, r15; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, r12d"], ["movsxd~rdi,<TAG>", "mov~edx,r12d", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,r15", "shl~rdx,0", "call~FOO", "mov~<TAG>,r12d"]], [0, 0, 6, 0, 1, 7, 1, 2, 4, -1, 0.04487179487179487, ["xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     r15, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_B6FF"], ["xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~r15,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [0, 0, 6, 0, 1, 4, 0, 1, 4, -1, 0.04487179487179487, ["mov     rdi, r15; p", "call    xrealloc", "mov     r15, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,r15", "call~FOO", "mov~r15,rax", "mov~<TAG>,rax"]], [0, 0, 11, 0, 0, 3, 0, 1, 1, 2, 0.07051282051282051, ["cmp     ebx, cs:nslots", "mov     rbp, rax", "jl      short loc_B727"], ["cmp~ebx,<TAG>", "mov~rbp,rax", "jl~FOO"]], [1, 0, 13, 1, 1, 14, 1, 2, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r13, arg", "push    rbp", "push    rbx", "movsxd  rbx, edi", "sub     rsp, 18h", "call    ___errno_location", "test    ebx, ebx", "mov     r14d, [rax]", "mov     r15, cs:slotvec_0", "js      loc_B839"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r13,arg", "push~rbp", "push~rbx", "movsxd~rbx,edi", "sub~rsp,0", "call~FOO", "test~ebx,ebx", "mov~r14d,<TAG>", "mov~r15,<TAG>", "js~FOO"]], [1, 0, 8, 1, 0, 6, 0, 1, 3, -1, 0.08974358974358974, ["lea     r12d, [n+1]", "lea     rax, slotvec0", "movsxd  rsi, r12d", "shl     rsi, 4; n", "cmp     r15, rax", "jz      loc_B818"], ["lea~r12d,[n+0]", "lea~rax,<TAG>", "movsxd~rsi,r12d", "shl~rsi,0", "cmp~r15,rax", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 2, 1, 0.0641025641025641, ["cmp     ebx, 7FFFFFFFh", "jz      loc_B83E"], ["cmp~ebx,0", "jz~FOO"]], [4, 1, 4, 4, 1, 24, 1, 2, 2, -1, 0.1794871794871795, ["mov     eax, cs:quote_quoting_options.flags", "shl     n, 4", "sub     rsp, 8", "add     rbx, r15", "lea     r15, quote_quoting_options.quote_these_too", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "mov     r11, [rbx]", "mov     r12, [rbx+8]", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "or      eax, 1", "mov     rdx, arg; arg", "mov     [rsp+50h+flags], eax", "push    cs:quote_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:quote_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rsi, r11; buffersize", "mov     rdi, r12; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_B7FB"], ["mov~eax,<TAG>", "shl~n,0", "sub~rsp,0", "add~rbx,r15", "lea~r15,<TAG>", "mov~r8d,<TAG>", "mov~r11,<TAG>", "mov~r12,[rbx+0]", "mov~rcx,0", "or~eax,0", "mov~rdx,arg", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rsi,r11", "mov~rdi,r12", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, -1, 0.0, ["mov     rdi, r12; ptr", "mov     [rsp+48h+buffersize], rsi", "call    _free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,r12", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.10256410256410256, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r12, rax", "mov     [rbx], rsi", "jz      short loc_B7AF"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r12,rax", "mov~<TAG>,rsi", "jz~FOO"]], [1, 0, 0, 1, 0, 10, 0, 0, 3, -1, 0.0, ["mov     [rbp+0], r14d", "add     rsp, 18h", "mov     rax, r12", "pop     rbx", "pop     rbp", "pop     r12", "pop     arg", "pop     r14", "pop     r15", "retn"], ["mov~[rbp+0],r14d", "add~rsp,0", "mov~rax,r12", "pop~rbx", "pop~rbp", "pop~r12", "pop~arg", "pop~r14", "pop~r15", "retn"]], [2, 1, 1, 2, 2, 17, 0, 2, 4, -1, 0.01282051282051282, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "push    cs:quote_quoting_options.right_quote; right_quote", "push    cs:quote_quoting_options.left_quote; left_quote", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     r12, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,0", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~r12,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [10, 4, 17, 0, 14, 17, 4, 108, 0.05266, 9, 13], "succs": [[7], [0], [0], [6, 7], [3, 12], [1, 2], [5, 13], [9, 10], [11], [8, 11], [], [10], [], []], "fname": "quote_n", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 3, 0, 0, 5, 0, 1, 0, 0, 0.16666666666666666, ["lea     rsi, [rax+1]", "lea     rax, slot0", "cmp     r14, rax", "mov     [rbx], rsi", "jz      short loc_B952"], ["lea~rsi,[rax+0]", "lea~rax,<TAG>", "cmp~r14,rax", "mov~<TAG>,rsi", "jz~FOO"]], [3, 1, 4, 2, 1, 22, 1, 2, 1, -1, 0.2777777777777778, ["mov     eax, cs:quote_quoting_options.flags", "mov     r11, [rbx]", "lea     r15, quote_quoting_options.quote_these_too", "mov     r14, [rbx+8]", "sub     rsp, 8", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rdx, arg; arg", "or      eax, 1", "mov     rsi, r11; buffersize", "mov     [rsp+50h+flags], eax", "push    cs:quote_quoting_options.right_quote; right_quote", "mov     r9d, eax; flags", "push    cs:quote_quoting_options.left_quote; left_quote", "push    r15; quote_these_too", "mov     rdi, r14; buffer", "mov     [rsp+68h+buffersize], r11", "call    quotearg_buffer_restyled", "add     rsp, 20h", "mov     r11, [rsp+48h+buffersize]", "cmp     r11, rax", "ja      short loc_B99E"], ["mov~eax,<TAG>", "mov~r11,<TAG>", "lea~r15,<TAG>", "mov~r14,[rbx+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,0", "mov~rdx,arg", "or~eax,0", "mov~rsi,r11", "mov~[rsp+0],eax", "push~<TAG>", "mov~r9d,eax", "push~<TAG>", "push~r15", "mov~rdi,r14", "mov~[rsp+0],r11", "call~FOO", "add~rsp,<STR>", "mov~r11,<TAG>", "cmp~r11,rax", "ja~FOO"]], [4, 0, 5, 4, 1, 10, 1, 1, 3, -1, 0.20833333333333331, ["movsxd  rdi, cs:nslots", "mov     edx, 1", "xor     esi, esi; c", "sub     edx, edi", "shl     rdi, 4", "movsxd  rdx, edx", "add     rdi, rbx; s", "shl     rdx, 4; n", "call    _memset", "mov     cs:nslots, 1"], ["movsxd~rdi,<TAG>", "mov~edx,0", "xor~esi,esi", "sub~edx,edi", "shl~rdi,0", "movsxd~rdx,edx", "add~rdi,rbx", "shl~rdx,0", "call~FOO", "mov~<TAG>,0"]], [1, 0, 6, 0, 1, 8, 1, 2, 2, 0, 0.048611111111111105, ["mov     esi, 10h; n", "xor     edi, edi; p", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     rbx, rax", "mov     cs:slotvec_0, rax", "movups  xmmword ptr [rax], xmm0", "jmp     loc_B8A4"], ["mov~esi,0", "xor~edi,edi", "call~FOO", "movdqa~xmm0,<TAG>", "mov~rbx,rax", "mov~<TAG>,rax", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 6, 0, 1, 5, 0, 1, 2, -1, 0.048611111111111105, ["mov     rdi, rbx; p", "mov     esi, 10h; n", "call    xrealloc", "mov     rbx, rax", "mov     cs:slotvec_0, rax"], ["mov~rdi,rbx", "mov~esi,0", "call~FOO", "mov~rbx,rax", "mov~<TAG>,rax"]], [0, 0, 8, 0, 0, 3, 0, 1, 1, 1, 0.041666666666666664, ["lea     rax, slotvec0", "cmp     rbx, rax", "jz      loc_B9B8"], ["lea~rax,<TAG>", "cmp~rbx,rax", "jz~FOO"]], [1, 0, 9, 1, 1, 15, 1, 2, 0, 2, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, arg", "push    rbp", "push    rbx", "sub     rsp, 18h", "call    ___errno_location", "mov     rbp, rax", "mov     r13d, [rax]", "mov     eax, cs:nslots", "mov     rbx, cs:slotvec_0", "test    eax, eax", "jg      short loc_B8D1"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,arg", "push~rbp", "push~rbx", "sub~rsp,0", "call~FOO", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~eax,<TAG>", "mov~rbx,<TAG>", "test~eax,eax", "jg~FOO"]], [0, 0, 2, 0, 1, 4, 0, 1, 3, -1, 0.0, ["mov     rdi, r14; ptr", "mov     [rsp+48h+buffersize], rsi", "call    _free", "mov     rsi, [rsp+48h+buffersize]"], ["mov~rdi,r14", "mov~<TAG>,rsi", "call~FOO", "mov~rsi,<TAG>"]], [1, 0, 0, 1, 0, 10, 0, 0, 2, -1, 0.0, ["mov     [rbp+0], r13d", "add     rsp, 18h", "mov     rax, r14", "pop     rbx", "pop     rbp", "pop     arg", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~[rbp+0],r13d", "add~rsp,0", "mov~rax,r14", "pop~rbx", "pop~rbp", "pop~arg", "pop~r13", "pop~r14", "pop~r15", "retn"]], [2, 1, 1, 2, 2, 17, 0, 2, 3, -1, 0.027777777777777776, ["mov     rdi, rsi; n", "mov     [rsp+48h+buffersize], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, cs:quote_quoting_options.style; quoting_style", "push    cs:quote_quoting_options.right_quote; right_quote", "push    cs:quote_quoting_options.left_quote; left_quote", "mov     rcx, 0FFFFFFFFFFFFFFFFh; argsize", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rdx, arg; arg", "mov     rsi, [rsp+68h+buffersize]; buffersize", "mov     rdi, rax; buffer", "mov     r14, rax", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,rsi", "mov~<TAG>,rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,<TAG>", "push~<TAG>", "push~<TAG>", "mov~rcx,0", "push~r15", "mov~r9d,[rsp+0]", "mov~rdx,arg", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~r14,rax", "call~FOO", "add~rsp,<STR>"]]], "func_feature": [8, 4, 13, 0, 10, 13, 7, 99, 0.08194, 9, 10], "succs": [[9, 7], [0, 8], [1], [2], [2], [3, 4], [1, 5], [9], [], [8]], "fname": "quote", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 1, 0, 1, 12, 1, 2, 0, 0, 0.16666666666666666, ["lea     rdx, aLuBytesSCopied+1Bh; format", "mov     rbx, rax", "mov     edi, ebp; status", "mov     rcx, rax", "mov     esi, r12d; errnum", "xor     eax, eax", "call    _error", "mov     rdi, rbx; ptr", "pop     rbx", "pop     status", "pop     errnum", "jmp     _free"], ["lea~rdx,<TAG>", "mov~rbx,rax", "mov~edi,ebp", "mov~rcx,rax", "mov~esi,r12d", "xor~eax,eax", "call~FOO", "mov~rdi,rbx", "pop~rbx", "pop~status", "pop~errnum", "jmp~FOO"]], [0, 0, 3, 0, 1, 10, 1, 2, 0, 1, 0.0, ["push    r12", "push    rbp", "mov     r12d, esi", "push    rbx", "mov     ebp, edi", "mov     errnum, args; args", "mov     status, format; format", "call    xvasprintf", "test    rax, rax", "jz      short loc_BA1E"], ["push~r12", "push~rbp", "mov~r12d,esi", "push~rbx", "mov~ebp,edi", "mov~errnum,args", "mov~status,format", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 0, 4, 12, 3, 4, 1, 0, 0.0, ["lea     rsi, aUnableToDispla; \"unable to display error message\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rdx, rbx; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "call    _abort"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO", "call~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []]], "func_feature": [6, 5, 8, 0, 4, 3, 1, 34, 0.04167, 2, 0], "succs": [[3], [0, 2], [], []], "fname": "verror", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 0, 0, 4, 12, 3, 4, 0, 0, 0.0, ["lea     rsi, aUnableToDispla; \"unable to display error message\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rdx, rbx; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "call    _abort"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO", "call~FOO"]], [0, 0, 5, 0, 1, 14, 1, 2, 0, 0, 0.0, ["push    r14", "push    r13", "mov     r13d, esi", "push    r12", "push    rbp", "mov     r12d, edi", "push    rbx", "mov     errnum, args; args", "mov     status, format; format", "mov     rbp, file", "mov     r14d, ecx", "call    xvasprintf", "test    message, message", "jz      short loc_BAD7"], ["push~r14", "push~r13", "mov~r13d,esi", "push~r12", "push~rbp", "mov~r12d,edi", "push~rbx", "mov~errnum,args", "mov~status,format", "mov~rbp,file", "mov~r14d,ecx", "call~FOO", "test~message,message", "jz~FOO"]], [0, 0, 1, 0, 1, 15, 1, 2, 2, 0, 0.05, ["lea     r8, aLuBytesSCopied+1Bh; format", "mov     edi, r12d; status", "mov     r9, message", "mov     ecx, r14d; lineno", "mov     rdx, file; fname", "mov     esi, r13d; errnum", "xor     eax, eax", "call    _error_at_line", "mov     rdi, message; ptr", "pop     message", "pop     file", "pop     status", "pop     errnum", "pop     line_number", "jmp     _free"], ["lea~r8,<TAG>", "mov~edi,r12d", "mov~r9,message", "mov~ecx,r14d", "mov~rdx,file", "mov~esi,r13d", "xor~eax,eax", "call~FOO", "mov~rdi,message", "pop~message", "pop~file", "pop~status", "pop~errnum", "pop~line_number", "jmp~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 1, 0, 0.15000000000000002, ["test    file, file", "mov     rbx, message", "jz      short loc_BAB0"], ["test~file,file", "mov~rbx,message", "jz~FOO"]], [0, 0, 1, 0, 1, 13, 1, 2, 2, 0, 0.05, ["lea     rdx, aLuBytesSCopied+1Bh; format", "mov     edi, r12d; status", "mov     rcx, message", "mov     esi, r13d; errnum", "xor     eax, eax", "call    _error", "mov     rdi, message; ptr", "pop     message", "pop     file", "pop     status", "pop     errnum", "pop     line_number", "jmp     _free"], ["lea~rdx,<TAG>", "mov~edi,r12d", "mov~rcx,message", "mov~esi,r13d", "xor~eax,eax", "call~FOO", "mov~rdi,message", "pop~message", "pop~file", "pop~status", "pop~errnum", "pop~line_number", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0.0, [], []]], "func_feature": [7, 7, 11, 0, 6, 6, 0, 57, 0.04167, 2, 0], "succs": [[], [0, 3], [5], [2, 4], [5], []], "fname": "verror_at_line", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[5, 0, 17, 0, 4, 20, 3, 5, 0, 0, 0.12894736842105262, ["lea     rsi, aC; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7E3h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     n_authors, 9; switch 10 cases", "ja      loc_BEE0; jumptable 000000000000BBB4 default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~n_authors,0", "ja~FOO"]], [1, 0, 18, 0, 1, 7, 1, 2, 1, 2, 0.02236842105263158, ["mov     r8, version", "mov     version, package", "lea     package, aSS_0; \"%s %s\\n\"", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_BB4C"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 18, 0, 1, 7, 1, 1, 1, 2, 0.024999999999999998, ["mov     authors, package", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     n_authors, version", "xor     eax, eax", "mov     version, command_name", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~authors,package", "lea~package,<TAG>", "mov~n_authors,version", "xor~eax,eax", "mov~version,command_name", "mov~esi,0", "call~FOO"]], [2, 0, 2, 1, 1, 16, 1, 1, 4, -1, 0.007894736842105263, ["mov     r9, [authors+38h]; jumptable 000000000000BBB4 case 8", "mov     rax, [authors+10h]", "lea     rsi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r8, [authors+8]", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     [rsp+58h+var_48], r9", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     [rsp+58h+var_58], rax", "mov     [rsp+58h+var_50], r8", "mov     authors, [authors]", "call    _dcgettext", "sub     rsp, 8"], ["mov~r9,[authors+0]", "mov~rax,[authors+0]", "lea~rsi,<TAG>", "mov~r8,[authors+0]", "mov~edx,0", "xor~edi,edi", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~[rsp+0],r9", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~<TAG>,rax", "mov~[rsp+0],r8", "mov~authors,<TAG>", "call~FOO", "sub~rsp,0"]], [0, 0, 15, 1, 0, 4, 0, 1, 3, -1, 0.1368421052631579, ["lea     rdx, off_12ABC", "movsxd  rax, dword ptr [rdx+n_authors*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [2, 0, 1, 1, 1, 9, 1, 1, 4, -1, 0.006578947368421052, ["lea     rsi, aWrittenBySSSAn; jumptable 000000000000BBB4 case 4", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [authors+18h]", "mov     r13, [authors+10h]", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "call    _dcgettext", "sub     rsp, 8"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "call~FOO", "sub~rsp,0"]], [2, 1, 1, 1, 1, 20, 2, 2, 4, -1, 0.002631578947368421, ["mov     n_authors, [authors+8]; jumptable 000000000000BBB4 case 2", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "mov     authors, [authors]", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     r8, r12", "mov     rcx, rbx", "mov     rdi, stream", "mov     rdx, rax", "mov     esi, 1", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~n_authors,[authors+0]", "lea~rsi,<TAG>", "mov~authors,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,<STR>", "mov~r8,r12", "mov~rcx,rbx", "mov~rdi,stream", "mov~rdx,rax", "mov~esi,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "xor~eax,eax", "jmp~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 28h; jumptable 000000000000BBB4 case 0", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [2, 0, 1, 1, 1, 15, 1, 1, 5, -1, 0.010526315789473684, ["mov     r9, [rsp+60h+var_48]", "mov     rdx, rax", "mov     rcx, rbx", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "push    r9", "push    r13", "push    r12", "push    r15", "push    r14", "mov     r9, [rsp+88h+var_58]", "mov     r8, [rsp+88h+var_50]", "call    ___fprintf_chk", "add     rsp, 30h"], ["mov~r9,[rsp+0]", "mov~rdx,rax", "mov~rcx,rbx", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "push~r9", "push~r13", "push~r12", "push~r15", "push~r14", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "call~FOO", "add~rsp,0"]], [0, 1, 20, 1, 0, 12, 1, 1, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, n_authors", "push    rbp", "push    rbx", "mov     rbp, stream", "mov     rbx, authors", "sub     rsp, 28h", "test    command_name, command_name", "jz      loc_BC48"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,n_authors", "push~rbp", "push~rbx", "mov~rbp,stream", "mov~rbx,authors", "sub~rsp,<STR>", "test~command_name,command_name", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [2, 1, 1, 1, 1, 18, 2, 2, 4, -1, 0.002631578947368421, ["mov     authors, [authors]; jumptable 000000000000BBB4 case 1", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     rcx, rbx", "mov     rdi, stream", "pop     rbx", "pop     stream", "pop     n_authors", "pop     r13", "pop     r14", "pop     r15", "mov     rdx, rax", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~authors,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,<STR>", "mov~rcx,rbx", "mov~rdi,stream", "pop~rbx", "pop~stream", "pop~n_authors", "pop~r13", "pop~r14", "pop~r15", "mov~rdx,rax", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [2, 1, 1, 1, 1, 22, 2, 2, 4, -1, 0.002631578947368421, ["mov     r13, [authors+10h]; jumptable 000000000000BBB4 case 3", "mov     n_authors, [authors+8]", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "mov     authors, [authors]", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdi, stream", "mov     rdx, rax", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "lea~rsi,<TAG>", "mov~authors,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,<STR>", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdi,stream", "mov~rdx,rax", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 4, -1, 0.015789473684210527, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r10, [rsp+58h+var_40]", "push    r10", "jmp     loc_BC04"], ["xor~edi,edi", "call~FOO", "mov~r10,[rsp+0]", "push~r10", "jmp~FOO"]], [1, 0, 3, 0, 0, 16, 0, 1, 3, 0, 0.015789473684210527, ["mov     r10, [authors+40h]; jumptable 000000000000BBB4 default case", "mov     r9, [authors+38h]", "mov     edx, 5", "mov     rax, [authors+10h]", "mov     r8, [authors+8]", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     [rsp+58h+var_40], r10", "mov     [rsp+58h+var_48], r9", "mov     [rsp+58h+var_58], rax", "mov     [rsp+58h+var_50], r8", "mov     authors, [authors]", "jmp     loc_BCB2"], ["mov~r10,[authors+0]", "mov~r9,[authors+0]", "mov~edx,0", "mov~rax,[authors+0]", "mov~r8,[authors+0]", "lea~rsi,<TAG>", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~<TAG>,rax", "mov~[rsp+0],r8", "mov~authors,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 15, 0, 0, 4, -1, 0.002631578947368421, ["mov     r10, [authors+40h]; jumptable 000000000000BBB4 case 9", "mov     r9, [authors+38h]", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     rax, [authors+10h]", "mov     r8, [authors+8]", "mov     edx, 5; category", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     authors, [authors]", "mov     [rsp+58h+var_40], r10", "mov     [rsp+58h+var_48], r9", "mov     [rsp+58h+var_58], rax", "mov     [rsp+58h+var_50], r8"], ["mov~r10,[authors+0]", "mov~r9,[authors+0]", "lea~rsi,<TAG>", "mov~rax,[authors+0]", "mov~r8,[authors+0]", "mov~edx,0", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~authors,<TAG>", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~<TAG>,rax", "mov~[rsp+0],r8"]], [1, 1, 0, 1, 1, 19, 1, 1, 5, -1, 0.0, ["push    r14", "mov     rdx, rax", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "pop     rax", "pop     rdx", "add     rsp, 28h", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["push~r14", "mov~rdx,rax", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "call~FOO", "pop~rax", "pop~rdx", "add~rsp,<STR>", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 1, 0, 1, 11, 1, 2, 4, -1, 0.006578947368421052, ["mov     r15, [authors+20h]; jumptable 000000000000BBB4 case 5", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [authors+18h]", "mov     r13, [authors+10h]", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "call    _dcgettext", "push    r15", "jmp     short loc_BDC6"], ["mov~r15,[authors+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "call~FOO", "push~r15", "jmp~FOO"]], [2, 0, 1, 1, 1, 16, 1, 1, 4, -1, 0.006578947368421052, ["mov     r8, [authors+8]; jumptable 000000000000BBB4 case 6", "mov     n_authors, [authors+28h]", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "mov     r15, [authors+20h]", "mov     r14, [authors+18h]", "mov     edx, 5; category", "mov     r13, [authors+10h]", "xor     edi, edi; domainname", "mov     authors, [authors]", "mov     [rsp+58h+var_58], r8", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r13", "push    r12", "push    r15", "push    r14"], ["mov~r8,[authors+0]", "mov~n_authors,[authors+0]", "lea~rsi,<TAG>", "mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~edx,0", "mov~r13,[authors+0]", "xor~edi,edi", "mov~authors,<TAG>", "mov~<TAG>,r8", "call~FOO", "sub~rsp,0", "mov~r9,r13", "push~r12", "push~r15", "push~r14"]], [1, 0, 1, 0, 1, 19, 1, 2, 4, -1, 0.006578947368421052, ["mov     r9, [authors+10h]; jumptable 000000000000BBB4 case 7", "mov     r13, [authors+30h]", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "mov     n_authors, [authors+28h]", "mov     r15, [authors+20h]", "mov     edx, 5; category", "mov     r14, [authors+18h]", "mov     r8, [authors+8]", "xor     edi, edi; domainname", "mov     [rsp+58h+var_50], r9", "mov     authors, [authors]", "mov     [rsp+58h+var_58], r8", "call    _dcgettext", "push    r13", "push    r12", "push    r15", "push    r14", "mov     r9, [rsp+78h+var_50]", "jmp     short loc_BE63"], ["mov~r9,[authors+0]", "mov~r13,[authors+0]", "lea~rsi,<TAG>", "mov~n_authors,[authors+0]", "mov~r15,[authors+0]", "mov~edx,0", "mov~r14,[authors+0]", "mov~r8,[authors+0]", "xor~edi,edi", "mov~[rsp+0],r9", "mov~authors,<TAG>", "mov~<TAG>,r8", "call~FOO", "push~r13", "push~r12", "push~r15", "push~r14", "mov~r9,[rsp+0]", "jmp~FOO"]], [1, 2, 0, 2, 1, 16, 1, 1, 5, -1, 0.0, ["mov     r8, [rsp+78h+var_58]", "mov     rcx, rbx", "mov     rdx, rax", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 20h", "add     rsp, 28h", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "call~FOO", "add~rsp,<STR>", "add~rsp,<STR>", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [18, 21, 29, 4, 21, 29, 0, 275, 0.01905, 16, 13], "succs": [[4, 14], [0], [0, 10], [8], [3, 5, 6, 7, 11, 12, 15, 17, 18, 19], [16], [10], [], [7], [1, 2], [], [10], [10], [8], [13], [13], [], [16], [20], [20], []], "fname": "version_etc_arn", "n_num": 21}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 1, 0, 1, 19, 1, 2, 0, 0, 0.007905138339920948, ["mov     r9, [authors+10h]; jumptable 000000000000BFEC case 7", "mov     r14, [authors+30h]", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "mov     r13, [authors+28h]", "mov     rbx, [authors+20h]", "mov     edx, 5; category", "mov     r15, [authors+18h]", "mov     r8, [authors+8]", "xor     edi, edi; domainname", "mov     [rsp+58h+var_50], r9", "mov     authors, [authors+0]", "mov     [rsp+58h+var_58], r8", "call    _dcgettext", "push    r14", "push    r13", "push    rbx", "push    r15", "mov     r9, [rsp+78h+var_50]", "jmp     short loc_C29B"], ["mov~r9,[authors+0]", "mov~r14,[authors+0]", "lea~rsi,<TAG>", "mov~r13,[authors+0]", "mov~rbx,[authors+0]", "mov~edx,0", "mov~r15,[authors+0]", "mov~r8,[authors+0]", "xor~edi,edi", "mov~[rsp+0],r9", "mov~authors,[authors+0]", "mov~<TAG>,r8", "call~FOO", "push~r14", "push~r13", "push~rbx", "push~r15", "mov~r9,[rsp+0]", "jmp~FOO"]], [0, 0, 15, 1, 0, 4, 0, 1, 4, -1, 0.1768774703557312, ["lea     rdx, off_12AE4", "movsxd  rax, dword ptr [rdx+rbx*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [2, 0, 1, 1, 1, 16, 1, 1, 5, -1, 0.007905138339920948, ["mov     r8, [authors+8]; jumptable 000000000000BFEC case 6", "mov     r13, [authors+28h]", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "mov     rbx, [authors+20h]", "mov     r15, [authors+18h]", "mov     edx, 5; category", "mov     r14, [authors+10h]", "xor     edi, edi; domainname", "mov     authors, [authors+0]", "mov     [rsp+58h+var_58], r8", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r14", "push    r13", "push    rbx", "push    r15"], ["mov~r8,[authors+0]", "mov~r13,[authors+0]", "lea~rsi,<TAG>", "mov~rbx,[authors+0]", "mov~r15,[authors+0]", "mov~edx,0", "mov~r14,[authors+0]", "xor~edi,edi", "mov~authors,[authors+0]", "mov~<TAG>,r8", "call~FOO", "sub~rsp,0", "mov~r9,r14", "push~r13", "push~rbx", "push~r15"]], [1, 1, 0, 1, 1, 15, 1, 1, 6, -1, 0.0, ["mov     rdx, rax", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "pop     rax", "pop     rdx", "add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~rdx,rax", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "call~FOO", "pop~rax", "pop~rdx", "add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 1, 0, 1, 15, 1, 2, 5, -1, 0.007905138339920948, ["mov     rbx, [authors+20h]; jumptable 000000000000BFEC case 5", "mov     r15, [authors+18h]", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "mov     r14, [authors+10h]", "mov     r13, [authors+8]", "mov     edx, 5; category", "mov     authors, [authors+0]", "xor     edi, edi; domainname", "call    _dcgettext", "push    rbx", "mov     r9, r14", "push    r15", "mov     r8, r13", "mov     rcx, rbp", "jmp     short loc_C202"], ["mov~rbx,[authors+0]", "mov~r15,[authors+0]", "lea~rsi,<TAG>", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~edx,0", "mov~authors,[authors+0]", "xor~edi,edi", "call~FOO", "push~rbx", "mov~r9,r14", "push~r15", "mov~r8,r13", "mov~rcx,rbp", "jmp~FOO"]], [2, 0, 1, 1, 1, 13, 1, 1, 5, -1, 0.007905138339920948, ["mov     r15, [authors+18h]; jumptable 000000000000BFEC case 4", "lea     rsi, aWrittenBySSSAn; \"Written by %s, %s, %s,\\nand %s.\\n\"", "mov     r14, [authors+10h]", "mov     r13, [authors+8]", "mov     rbx, [authors+0]", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r14", "mov     r8, r13", "push    r15", "mov     rcx, rbx"], ["mov~r15,[authors+0]", "lea~rsi,<TAG>", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~rbx,[authors+0]", "mov~edx,0", "xor~edi,edi", "call~FOO", "sub~rsp,0", "mov~r9,r14", "mov~r8,r13", "push~r15", "mov~rcx,rbx"]], [2, 0, 2, 1, 1, 16, 1, 1, 5, -1, 0.008893280632411066, ["mov     r10, [authors+38h]; jumptable 000000000000BFEC case 8", "mov     r9, [authors+10h]", "lea     rsi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r8, [authors+8]", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [authors+30h]", "mov     r13, [authors+28h]", "mov     [rsp+58h+var_48], r10", "mov     rbx, [authors+20h]", "mov     r15, [authors+18h]", "mov     [rsp+58h+var_50], r9", "mov     [rsp+58h+var_58], r8", "mov     authors, [authors+0]", "call    _dcgettext", "sub     rsp, 8"], ["mov~r10,[authors+0]", "mov~r9,[authors+0]", "lea~rsi,<TAG>", "mov~r8,[authors+0]", "mov~edx,0", "xor~edi,edi", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~[rsp+0],r10", "mov~rbx,[authors+0]", "mov~r15,[authors+0]", "mov~[rsp+0],r9", "mov~<TAG>,r8", "mov~authors,[authors+0]", "call~FOO", "sub~rsp,0"]], [2, 1, 1, 1, 1, 18, 2, 2, 5, -1, 0.001976284584980237, ["mov     rbx, [authors+0]; jumptable 000000000000BFEC case 1", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     rcx, rbx", "mov     rdi, stream", "pop     rbx", "pop     authors", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "mov     rdx, rax", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~rbx,[authors+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,<STR>", "mov~rcx,rbx", "mov~rdi,stream", "pop~rbx", "pop~authors", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "mov~rdx,rax", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [0, 0, 20, 0, 0, 2, 1, 1, 1, 3, 0.11857707509881422, ["test    command_name, command_name", "jz      loc_C078"], ["test~command_name,command_name", "jz~FOO"]], [1, 1, 23, 1, 0, 12, 1, 1, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, stream", "push    rbp", "push    rbx", "xor     ebx, ebx", "mov     rbp, authors", "sub     rsp, 28h", "cmp     qword ptr [authors], 0", "jz      short loc_BF5C"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,stream", "push~rbp", "push~rbx", "xor~ebx,ebx", "mov~rbp,authors", "sub~rsp,<STR>", "cmp~<TAG>,0", "jz~FOO"]], [2, 0, 22, 1, 0, 3, 0, 1, 2, 4, 0.04150197628458498, ["add     n_authors, 1", "cmp     qword ptr [rbp+n_authors*8+0], 0", "jnz     short loc_BF50"], ["add~n_authors,0", "cmp~[word ptr [rbp+0],0", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [1, 0, 18, 0, 1, 8, 1, 1, 2, 2, 0.07509881422924901, ["mov     r8, package", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     r9, version", "mov     stream, r12", "mov     version, command_name", "xor     eax, eax", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~r8,package", "lea~package,<TAG>", "mov~r9,version", "mov~stream,r12", "mov~version,command_name", "xor~eax,eax", "mov~esi,0", "call~FOO"]], [2, 1, 1, 1, 1, 20, 2, 2, 5, -1, 0.001976284584980237, ["mov     r13, [authors+8]; jumptable 000000000000BFEC case 2", "mov     rbx, [authors+0]", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     r8, r13", "mov     rcx, rbx", "mov     rdi, stream", "mov     rdx, rax", "mov     esi, 1", "pop     rbx", "pop     authors", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~r13,[authors+0]", "mov~rbx,[authors+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,<STR>", "mov~r8,r13", "mov~rcx,rbx", "mov~rdi,stream", "mov~rdx,rax", "mov~esi,0", "pop~rbx", "pop~authors", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "xor~eax,eax", "jmp~FOO"]], [2, 1, 1, 1, 1, 22, 2, 2, 5, -1, 0.001976284584980237, ["mov     r14, [authors+10h]; jumptable 000000000000BFEC case 3", "mov     r13, [authors+8]", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "mov     rbx, [authors+0]", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "add     rsp, 28h", "mov     r9, r14", "mov     r8, r13", "mov     rcx, rbx", "mov     rdi, stream", "mov     rdx, rax", "pop     rbx", "pop     authors", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["mov~r14,[authors+0]", "mov~r13,[authors+0]", "lea~rsi,<TAG>", "mov~rbx,[authors+0]", "mov~edx,0", "xor~edi,edi", "call~FOO", "add~rsp,<STR>", "mov~r9,r14", "mov~r8,r13", "mov~rcx,rbx", "mov~rdi,stream", "mov~rdx,rax", "pop~rbx", "pop~authors", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [1, 2, 0, 2, 1, 16, 1, 1, 6, -1, 0.0, ["mov     r8, [rsp+78h+var_58]", "mov     rcx, rbp", "mov     rdx, rax", "mov     rdi, stream", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 20h", "add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~r8,[rsp+0]", "mov~rcx,rbp", "mov~rdx,rax", "mov~rdi,stream", "mov~esi,0", "xor~eax,eax", "call~FOO", "add~rsp,<STR>", "add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 22, 0, 0, 1, 0, 0, 1, 5, 0.001976284584980237, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [5, 0, 17, 0, 4, 20, 3, 5, 3, 1, 0.19169960474308298, ["lea     rsi, aC; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7E3h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     rbx, 9; switch 10 cases", "ja      loc_C320; jumptable 000000000000BFEC default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~rbx,0", "ja~FOO"]], [1, 0, 18, 0, 1, 8, 1, 2, 2, 2, 0.06719367588932806, ["mov     r8, version", "mov     version, package", "lea     package, aSS_0; \"%s %s\\n\"", "mov     esi, 1", "mov     stream, r12", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_BF84"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "mov~stream,r12", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 0, 15, 0, 0, 5, -1, 0.001976284584980237, ["mov     r11, [authors+40h]; jumptable 000000000000BFEC case 9", "mov     r10, [authors+38h]", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r9, [authors+10h]", "mov     r8, [authors+8]", "mov     edx, 5; category", "mov     r14, [authors+30h]", "mov     r13, [authors+28h]", "mov     rbx, [authors+20h]", "mov     r15, [authors+18h]", "mov     authors, [authors+0]", "mov     [rsp+58h+var_40], r11", "mov     [rsp+58h+var_48], r10", "mov     [rsp+58h+var_50], r9", "mov     [rsp+58h+var_58], r8"], ["mov~r11,[authors+0]", "mov~r10,[authors+0]", "lea~rsi,<TAG>", "mov~r9,[authors+0]", "mov~r8,[authors+0]", "mov~edx,0", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~rbx,[authors+0]", "mov~r15,[authors+0]", "mov~authors,[authors+0]", "mov~[rsp+0],r11", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~<TAG>,r8"]], [2, 0, 1, 1, 1, 15, 1, 1, 6, -1, 0.007905138339920948, ["mov     r10, [rsp+60h+var_48]", "mov     rdx, rax", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "push    r10", "push    r14", "push    r13", "push    rbx", "push    r15", "mov     r9, [rsp+88h+var_50]", "mov     r8, [rsp+88h+var_58]", "call    ___fprintf_chk", "add     rsp, 30h"], ["mov~r10,[rsp+0]", "mov~rdx,rax", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "push~r10", "push~r14", "push~r13", "push~rbx", "push~r15", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "call~FOO", "add~rsp,0"]], [0, 0, 2, 0, 1, 5, 1, 2, 5, -1, 0.014822134387351778, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r11, [rsp+58h+var_40]", "push    r11", "jmp     loc_C035"], ["xor~edi,edi", "call~FOO", "mov~r11,[rsp+0]", "push~r11", "jmp~FOO"]], [1, 0, 3, 0, 0, 16, 0, 1, 4, 0, 0.02075098814229249, ["mov     r11, [authors+40h]; jumptable 000000000000BFEC default case", "mov     r10, [authors+38h]", "mov     edx, 5", "mov     r9, [authors+10h]", "mov     r8, [authors+8]", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r14, [authors+30h]", "mov     r13, [authors+28h]", "mov     rbx, [authors+20h]", "mov     r15, [authors+18h]", "mov     [rsp+58h+var_40], r11", "mov     [rsp+58h+var_48], r10", "mov     [rsp+58h+var_50], r9", "mov     [rsp+58h+var_58], r8", "mov     authors, [authors+0]", "jmp     loc_C0E3"], ["mov~r11,[authors+0]", "mov~r10,[authors+0]", "mov~edx,0", "mov~r9,[authors+0]", "mov~r8,[authors+0]", "lea~rsi,<TAG>", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~rbx,[authors+0]", "mov~r15,[authors+0]", "mov~[rsp+0],r11", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~<TAG>,r8", "mov~authors,[authors+0]", "jmp~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 28h; jumptable 000000000000BFEC case 0", "pop     rbx", "pop     rbp", "pop     stream", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~stream", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [18, 22, 31, 4, 24, 34, 0, 287, 0.03187, 16, 14], "succs": [[15], [0, 2, 4, 5, 6, 7, 13, 14, 19, 23], [15], [], [3], [3], [20], [11], [18, 12], [8, 16], [8, 10], [], [17, 11], [11], [11], [], [10], [1, 22], [17], [21], [23], [20], [21], []], "fname": "version_etc_ar", "n_num": 24}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 35, 1, 0, 6, 1, 1, 0, 0, 0.011080958842152872, ["add     eax, 30h ; '0'", "mov     [authors], eax", "mov     rax, [rdi+r10]", "test    rax, rax", "mov     [rsp+0B8h+authtab+28h], rax", "jz      short loc_C5E0"], ["add~eax,0", "mov~<TAG>,eax", "mov~rax,<TAG>", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 39, 0, 0, 2, 0, 0, 10, 6, 0.009724106739032113, ["cmp     r10d, 2Fh ; '/'", "jbe     short loc_C5F0"], ["cmp~r10d,0", "jbe~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 8, -1, 0.017639077340569877, ["mov     ebp, 6", "jmp     loc_C3C2"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 32, 0, 0, 6, 1, 1, 7, 3, 0.04432383536861149, ["lea     rdi, [rax+8]", "mov     [authors+8], rdi", "mov     rdi, [rax]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+30h], rdi", "jz      loc_CA66"], ["lea~rdi,[rax+0]", "mov~[authors+0],rdi", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jz~FOO"]], [0, 0, 33, 0, 0, 1, 0, 0, 12, 4, 0.003165988240615106, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [1, 0, 38, 1, 0, 7, 1, 1, 5, 5, 0.050203527815468114, ["mov     rdi, rax", "add     rax, 8", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+20h], rdi", "jnz     short loc_C5BF"], ["mov~rdi,rax", "add~rax,0", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [1, 0, 41, 1, 0, 7, 1, 1, 4, 6, 0.04794210764360018, ["mov     rdi, rax", "add     rax, 8", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+18h], rdi", "jnz     short loc_C56F"], ["mov~rdi,rax", "add~rax,0", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [0, 0, 39, 0, 0, 1, 0, 0, 9, 6, 0.004975124378109453, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [0, 0, 27, 0, 0, 1, 0, 0, 6, -1, 0.014699231117141566, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 1, 1, 1, 0, 14, 1, 1, 8, -1, 0.00045228403437358656, ["add     rsp, 88h", "mov     r8, r12", "mov     rcx, rbp", "mov     rdi, stream", "mov     rdx, rax", "mov     esi, 1", "pop     stream", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "xor     eax, eax", "jmp     ___fprintf_chk"], ["add~rsp,<STR>", "mov~r8,r12", "mov~rcx,rbp", "mov~rdi,stream", "mov~rdx,rax", "mov~esi,0", "pop~stream", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "xor~eax,eax", "jmp~FOO"]], [1, 0, 3, 0, 1, 9, 2, 2, 7, -1, 0.0135119855269109, ["lea     rsi, aWrittenBySAndS; jumptable 000000000000C452 case 2", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r12, [rsp+0B8h+authtab+8]", "mov     rbp, [rsp+0B8h+authtab]", "call    _dcgettext", "mov     rcx, [rsp+0B8h+var_40]", "xor     rcx, fs:28h", "jnz     loc_CA61"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 8, -1, 0.023518769787426504, ["mov     ebp, 5", "jmp     loc_C3C2"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 27, 0, 0, 1, 0, 0, 7, -1, 0.009724106739032113, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 26, 0, 0, 2, 0, 1, 9, -1, 0.0030529172320217096, ["mov     ebp, 7", "jmp     loc_C3C2"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 30, 0, 0, 6, 1, 1, 8, 2, 0.022614201718679332, ["lea     rdi, [rax+10h]", "mov     [authors+8], rdi", "mov     rdi, [rax+8]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+38h], rdi", "jz      loc_CA70"], ["lea~rdi,[rax+0]", "mov~[authors+0],rdi", "mov~rdi,[rax+0]", "test~rdi,rdi", "mov~[rsp+0],rdi", "jz~FOO"]], [1, 0, 23, 0, 1, 8, 1, 2, 4, -1, 0.10696517412935323, ["mov     authors, version", "mov     version, package", "lea     package, aSS_0; \"%s %s\\n\"", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_C3EA"], ["mov~authors,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 25, 0, 0, 2, 1, 1, 3, -1, 0.2233152419719584, ["test    command_name, command_name", "jz      loc_C675"], ["test~command_name,command_name", "jz~FOO"]], [2, 0, 25, 1, 0, 8, 2, 1, 10, -1, 0.008480325644504749, ["lea     rdi, [rax+20h]", "xor     ebp, ebp", "mov     [authors+8], rdi", "cmp     qword ptr [rax+18h], 0", "setnz   bpl", "add     rbp, 9", "test    command_name, command_name", "jnz     loc_C3CB"], ["lea~rdi,[rax+0]", "xor~ebp,ebp", "mov~[authors+0],rdi", "cmp~[word ptr [rax+0],0", "setnz~bpl", "add~rbp,0", "test~command_name,command_name", "jnz~FOO"]], [0, 0, 53, 0, 0, 6, 1, 1, 5, 9, 0.018995929443690638, ["lea     r10d, [rax+18h]", "mov     [authors], r10d", "mov     r9, [rdi+r11]", "test    r9, r9", "mov     [rsp+0B8h+authtab+10h], r9", "jz      short loc_C4F0"], ["lea~r10d,[rax+0]", "mov~<TAG>,r10d", "mov~r9,<TAG>", "test~r9,r9", "mov~[rsp+0],r9", "jz~FOO"]], [1, 0, 57, 0, 0, 2, 0, 0, 4, 9, 0.015829941203075532, ["cmp     r11d, 2Fh ; '/'", "jbe     short loc_C500"], ["cmp~r11d,0", "jbe~FOO"]], [1, 0, 47, 1, 0, 7, 1, 1, 2, 8, 0.02838082315694256, ["mov     rdi, rax", "add     rax, 8", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+8], rdi", "jnz     short loc_C4CF"], ["mov~rdi,rax", "add~rax,0", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [0, 0, 49, 0, 0, 8, 1, 1, 1, 9, 0.007914970601537766, ["mov     rax, [authors+8]", "mov     stream, rax", "lea     rax, [rax+8]", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab], rdi", "jnz     loc_C47E"], ["mov~rax,[authors+0]", "mov~stream,rax", "lea~rax,[rax+0]", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [0, 0, 48, 0, 0, 1, 0, 0, 3, 9, 0.008819538670284939, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [1, 0, 26, 0, 0, 2, 0, 1, 7, -1, 0.02939846223428313, ["mov     ebp, 4", "jmp     loc_C3C2"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 41, 0, 0, 6, 1, 1, 9, 7, 0.015829941203075532, ["lea     r10d, [rax+28h]", "mov     [authors], r10d", "mov     r9, [rdi+r9]", "test    r9, r9", "mov     [rsp+0B8h+authtab+20h], r9", "jz      short loc_C590"], ["lea~r10d,[rax+0]", "mov~<TAG>,r10d", "mov~r9,<TAG>", "test~r9,r9", "mov~[rsp+0],r9", "jz~FOO"]], [0, 0, 27, 0, 0, 1, 0, 0, 3, -1, 0.012550881953867029, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 51, 0, 0, 2, 0, 0, 6, 8, 0.016734509271822705, ["cmp     r10d, 2Fh ; '/'", "jbe     short loc_C550"], ["cmp~r10d,0", "jbe~FOO"]], [1, 1, 67, 1, 0, 14, 1, 0, 0, 10, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, stream", "sub     rsp, 88h", "mov     rax, fs:28h", "mov     [rsp+0B8h+var_40], rax", "xor     eax, eax", "mov     eax, [authors]", "cmp     eax, 2Fh ; '/'", "jbe     loc_C454"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,stream", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~eax,<TAG>", "cmp~eax,0", "jbe~FOO"]], [0, 0, 42, 0, 0, 1, 0, 0, 7, 7, 0.006105834464043419, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [1, 0, 4, 0, 1, 10, 1, 1, 7, -1, 0.005314337403889643, ["mov     r15, [rsp+0B8h+authtab+20h]; jumptable 000000000000C452 case 5", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [rsp+0B8h+authtab+18h]", "mov     r13, [rsp+0B8h+authtab+10h]", "mov     r12, [rsp+0B8h+authtab+8]", "mov     rbp, [rsp+0B8h+authtab]", "call    _dcgettext", "push    r15"], ["mov~r15,[rsp+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[rsp+0]", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "push~r15"]], [0, 0, 20, 1, 0, 4, 0, 1, 6, -1, 0.1824966078697422, ["lea     rdx, off_12B0C", "movsxd  rax, dword ptr [rdx+rbp*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [2, 0, 4, 1, 1, 17, 1, 2, 7, -1, 0.005427408412483039, ["mov     r9, [rsp+0B8h+authtab+10h]; jumptable 000000000000C452 case 8", "mov     r8, [rsp+0B8h+authtab+8]", "lea     rsi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     rcx, [rsp+0B8h+authtab]", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r13, [rsp+0B8h+authtab+38h]", "mov     r12, [rsp+0B8h+authtab+30h]", "mov     rbp, [rsp+0B8h+authtab+28h]", "mov     r15, [rsp+0B8h+authtab+20h]", "mov     r14, [rsp+0B8h+authtab+18h]", "mov     [rsp+0B8h+var_A8], r9", "mov     [rsp+0B8h+var_B0], r8", "mov     [rsp+0B8h+var_B8], rcx", "call    _dcgettext", "sub     rsp, 8", "jmp     loc_C6FA"], ["mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "lea~rsi,<TAG>", "mov~rcx,[rsp+0]", "mov~edx,0", "xor~edi,edi", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "call~FOO", "sub~rsp,0", "jmp~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 6, -1, 0.02939846223428313, ["mov     ebp, 3", "jmp     loc_C3C2"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 47, 0, 0, 6, 1, 1, 7, 8, 0.018995929443690638, ["lea     r9d, [rax+20h]", "mov     [authors], r9d", "mov     r10, [rdi+r10]", "test    r10, r10", "mov     [rsp+0B8h+authtab+18h], r10", "jz      short loc_C540"], ["lea~r9d,[rax+0]", "mov~<TAG>,r9d", "mov~r10,<TAG>", "test~r10,r10", "mov~[rsp+0],r10", "jz~FOO"]], [0, 0, 27, 0, 0, 1, 0, 0, 5, -1, 0.013794663048394391, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 35, 1, 0, 7, 1, 1, 6, 4, 0.04590682948891904, ["mov     rdi, rax", "add     rax, 8", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+28h], rdi", "jnz     short loc_C608"], ["mov~rdi,rax", "add~rax,0", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [2, 0, 3, 1, 1, 14, 1, 1, 8, -1, 0.0027137042062415195, ["push    r13", "push    r12", "mov     rdx, rax", "push    rbp", "push    r15", "mov     esi, 1", "push    r14", "mov     r9, [rsp+0E8h+var_A8]", "mov     rdi, stream", "mov     r8, [rsp+0E8h+var_B0]", "mov     rcx, [rsp+0E8h+var_B8]", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 30h"], ["push~r13", "push~r12", "mov~rdx,rax", "push~rbp", "push~r15", "mov~esi,0", "push~r14", "mov~r9,[rsp+0]", "mov~rdi,stream", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "xor~eax,eax", "call~FOO", "add~rsp,0"]], [0, 0, 4, 0, 1, 4, 1, 1, 7, -1, 0.007010402532790593, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r10, [rsp+0B8h+var_A0]", "push    r10"], ["xor~edi,edi", "call~FOO", "mov~r10,[rsp+0]", "push~r10"]], [1, 0, 26, 0, 0, 2, 0, 1, 4, -1, 0.02939846223428313, ["mov     ebp, 1", "jmp     loc_C3C2"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 59, 0, 0, 6, 1, 1, 3, 10, 0.01594301221166893, ["lea     r11d, [rax+10h]", "mov     [authors], r11d", "mov     r9, [rdi+r10]", "test    r9, r9", "mov     [rsp+0B8h+authtab+8], r9", "jz      short loc_C4A0"], ["lea~r11d,[rax+0]", "mov~<TAG>,r11d", "mov~r9,<TAG>", "test~r9,r9", "mov~[rsp+0],r9", "jz~FOO"]], [1, 1, 1, 1, 0, 13, 1, 1, 8, -1, 0.00045228403437358656, ["add     rsp, 88h", "mov     rcx, rbp", "mov     rdi, stream", "pop     stream", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "mov     rdx, rax", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["add~rsp,<STR>", "mov~rcx,rbp", "mov~rdi,stream", "pop~stream", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "mov~rdx,rax", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [1, 0, 3, 0, 1, 8, 2, 2, 7, -1, 0.0135119855269109, ["lea     rsi, aWrittenByS; jumptable 000000000000C452 case 1", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     rbp, [rsp+0B8h+authtab]", "call    _dcgettext", "mov     rcx, [rsp+0B8h+var_40]", "xor     rcx, fs:28h", "jnz     short loc_CA61"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~rbp,[rsp+0]", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 1, 10, 2, 2, 7, -1, 0.0135119855269109, ["lea     rsi, aWrittenBySSAnd; jumptable 000000000000C452 case 3", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r13, [rsp+0B8h+authtab+10h]", "mov     r12, [rsp+0B8h+authtab+8]", "mov     rbp, [rsp+0B8h+authtab]", "call    _dcgettext", "mov     rcx, [rsp+0B8h+var_40]", "xor     rcx, fs:28h", "jnz     loc_CA61"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 45, 0, 0, 2, 0, 0, 8, 7, 0.014699231117141566, ["cmp     r9d, 2Fh ; '/'", "jbe     short loc_C5A0"], ["cmp~r9d,0", "jbe~FOO"]], [1, 0, 44, 1, 0, 7, 1, 1, 3, 7, 0.0407055630936228, ["mov     rdi, rax", "add     rax, 8", "mov     [authors+8], rax", "mov     rdi, [rdi]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+10h], rdi", "jnz     short loc_C51F"], ["mov~rdi,rax", "add~rax,0", "mov~[authors+0],rax", "mov~rdi,<TAG>", "test~rdi,rdi", "mov~[rsp+0],rdi", "jnz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 7, -1, 0.01826096788783356, ["mov     rax, [rsp+0B8h+var_40]; jumptable 000000000000C452 case 0", "xor     rax, fs:28h", "jnz     loc_CA61"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 1, 3, 1, 1, 8, 1, 2, 8, -1, 0.0013568521031207597, ["mov     rcx, [rsp+0D8h+var_B8]", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 20h", "jmp     loc_C728; jumptable 000000000000C452 case 0"], ["mov~rcx,[rsp+0]", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [1, 0, 3, 0, 1, 12, 1, 2, 8, -1, 0.0013568521031207597, ["push    r14", "mov     rdx, rax", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "pop     rax", "pop     rdx", "jmp     loc_C728; jumptable 000000000000C452 case 0"], ["push~r14", "mov~rdx,rax", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "pop~rax", "pop~rdx", "jmp~FOO"]], [0, 0, 36, 0, 0, 1, 0, 0, 11, 5, 0.0024875621890547263, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [2, 0, 4, 1, 1, 10, 1, 2, 7, -1, 0.005314337403889643, ["lea     rsi, aWrittenBySSSAn; jumptable 000000000000C452 case 4", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [rsp+0B8h+authtab+18h]", "mov     r13, [rsp+0B8h+authtab+10h]", "mov     r12, [rsp+0B8h+authtab+8]", "mov     rbp, [rsp+0B8h+authtab]", "call    _dcgettext", "sub     rsp, 8", "jmp     short loc_C89E"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[rsp+0]", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "sub~rsp,0", "jmp~FOO"]], [5, 0, 22, 0, 4, 20, 3, 5, 5, -1, 0.21393034825870647, ["lea     rsi, aC; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7E3h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     rbp, 9; switch 10 cases", "ja      loc_CA10; jumptable 000000000000C452 default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~rbp,0", "ja~FOO"]], [1, 0, 23, 0, 1, 8, 1, 1, 4, -1, 0.11668928086838534, ["mov     authors, package", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     r9, version", "mov     rdi, stream", "mov     version, command_name", "xor     eax, eax", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~authors,package", "lea~package,<TAG>", "mov~r9,version", "mov~rdi,stream", "mov~version,command_name", "xor~eax,eax", "mov~esi,0", "call~FOO"]], [0, 0, 26, 0, 0, 1, 1, 0, 2, -1, 0.017639077340569877, ["xor     ebp, ebp"], ["xor~ebp,ebp"]], [0, 0, 65, 0, 0, 8, 1, 1, 1, 11, 0.0067842605156037995, ["mov     rdi, [authors+10h]", "lea     r10d, [rax+8]", "mov     r9d, eax", "mov     [authors], r10d", "mov     r9, [rdi+r9]", "test    r9, r9", "mov     [rsp+0B8h+authtab], r9", "jz      loc_C3C0"], ["mov~rdi,[authors+0]", "lea~r10d,[rax+0]", "mov~r9d,eax", "mov~<TAG>,r10d", "mov~r9,<TAG>", "test~r9,r9", "mov~[rsp+0],r9", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 5, -1, 0.0, [], []], [1, 1, 1, 1, 0, 15, 1, 1, 8, -1, 0.00045228403437358656, ["add     rsp, 88h", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbp", "mov     rdi, stream", "mov     rdx, rax", "pop     stream", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "mov     esi, 1", "xor     eax, eax", "jmp     ___fprintf_chk"], ["add~rsp,<STR>", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbp", "mov~rdi,stream", "mov~rdx,rax", "pop~stream", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "mov~esi,0", "xor~eax,eax", "jmp~FOO"]], [1, 0, 63, 0, 0, 2, 0, 0, 2, 10, 0.011872455902306648, ["cmp     r10d, 2Fh ; '/'", "jbe     short loc_C4B0"], ["cmp~r10d,0", "jbe~FOO"]], [2, 0, 4, 1, 1, 18, 1, 2, 7, -1, 0.005314337403889643, ["mov     rcx, [rsp+0B8h+authtab]; jumptable 000000000000C452 case 6", "mov     r13, [rsp+0B8h+authtab+10h]", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "mov     r12, [rsp+0B8h+authtab+8]", "mov     rbp, [rsp+0B8h+authtab+28h]", "mov     edx, 5; category", "mov     r15, [rsp+0B8h+authtab+20h]", "mov     r14, [rsp+0B8h+authtab+18h]", "xor     edi, edi; domainname", "mov     [rsp+0B8h+var_B8], rcx", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r13", "mov     r8, r12", "push    rbp", "push    r15", "push    r14", "jmp     short loc_C7F6"], ["mov~rcx,[rsp+0]", "mov~r13,[rsp+0]", "lea~rsi,<TAG>", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~edx,0", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "xor~edi,edi", "mov~<TAG>,rcx", "call~FOO", "sub~rsp,0", "mov~r9,r13", "mov~r8,r12", "push~rbp", "push~r15", "push~r14", "jmp~FOO"]], [1, 0, 4, 0, 1, 19, 1, 1, 7, -1, 0.005314337403889643, ["mov     r8, [rsp+0B8h+authtab+8]; jumptable 000000000000C452 case 7", "mov     rcx, [rsp+0B8h+authtab]", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "mov     r12, [rsp+0B8h+authtab+30h]", "mov     rbp, [rsp+0B8h+authtab+28h]", "mov     edx, 5; category", "mov     r15, [rsp+0B8h+authtab+20h]", "mov     r14, [rsp+0B8h+authtab+18h]", "xor     edi, edi; domainname", "mov     r13, [rsp+0B8h+authtab+10h]", "mov     [rsp+0B8h+var_B0], r8", "mov     [rsp+0B8h+var_B8], rcx", "call    _dcgettext", "push    r12", "push    rbp", "mov     r9, r13", "push    r15", "push    r14", "mov     r8, [rsp+0D8h+var_B0]"], ["mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "lea~rsi,<TAG>", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~edx,0", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "xor~edi,edi", "mov~r13,[rsp+0]", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "call~FOO", "push~r12", "push~rbp", "mov~r9,r13", "push~r15", "push~r14", "mov~r8,[rsp+0]"]], [1, 0, 26, 0, 0, 2, 0, 1, 5, -1, 0.02939846223428313, ["mov     ebp, 2", "jmp     loc_C3C2"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 26, 0, 0, 2, 0, 1, 10, 0, 0.0002261420171867933, ["mov     ebp, 8", "jmp     loc_C3C2"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 45, 0, 0, 1, 0, 0, 5, 8, 0.007462686567164179, ["mov     rax, [authors+8]"], ["mov~rax,[authors+0]"]], [0, 1, 0, 1, 0, 8, 0, 0, 8, -1, 0.0, ["add     rsp, 88h", "pop     stream", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~stream", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 28, 0, 0, 6, 1, 1, 9, 1, 0.014586160108548168, ["lea     rdi, [rax+18h]", "mov     [authors+8], rdi", "mov     rdi, [rax+10h]", "test    rdi, rdi", "mov     [rsp+0B8h+authtab+40h], rdi", "jz      loc_CA7A"], ["lea~rdi,[rax+0]", "mov~[authors+0],rdi", "mov~rdi,[rax+0]", "test~rdi,rdi", "mov~[rsp+0],rdi", "jz~FOO"]], [1, 0, 5, 0, 0, 16, 0, 1, 6, -1, 0.015603799185888738, ["mov     r10, [rsp+0B8h+authtab+40h]; jumptable 000000000000C452 default case", "mov     r9, [rsp+0B8h+authtab+10h]", "mov     edx, 5", "mov     r8, [rsp+0B8h+authtab+8]", "mov     rcx, [rsp+0B8h+authtab]", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r13, [rsp+0B8h+authtab+38h]", "mov     r12, [rsp+0B8h+authtab+30h]", "mov     [rsp+0B8h+var_A0], r10", "mov     rbp, [rsp+0B8h+authtab+28h]", "mov     r15, [rsp+0B8h+authtab+20h]", "mov     r14, [rsp+0B8h+authtab+18h]", "mov     [rsp+0B8h+var_A8], r9", "mov     [rsp+0B8h+var_B0], r8", "mov     [rsp+0B8h+var_B8], rcx", "jmp     loc_C6EC"], ["mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "mov~edx,0", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "lea~rsi,<TAG>", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~[rsp+0],r10", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "jmp~FOO"]], [1, 0, 5, 0, 0, 15, 0, 0, 7, -1, 0.0002261420171867933, ["mov     r10, [rsp+0B8h+authtab+40h]; jumptable 000000000000C452 case 9", "mov     r9, [rsp+0B8h+authtab+10h]", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r8, [rsp+0B8h+authtab+8]", "mov     rcx, [rsp+0B8h+authtab]", "mov     edx, 5; category", "mov     r13, [rsp+0B8h+authtab+38h]", "mov     r12, [rsp+0B8h+authtab+30h]", "mov     rbp, [rsp+0B8h+authtab+28h]", "mov     r15, [rsp+0B8h+authtab+20h]", "mov     r14, [rsp+0B8h+authtab+18h]", "mov     [rsp+0B8h+var_A0], r10", "mov     [rsp+0B8h+var_A8], r9", "mov     [rsp+0B8h+var_B0], r8", "mov     [rsp+0B8h+var_B8], rcx"], ["mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "lea~rsi,<TAG>", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "mov~edx,0", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 27, 0, 0, 1, 0, 0, 4, -1, 0.013116236996834011, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]]], "func_feature": [19, 44, 60, 5, 68, 103, 2, 425, 0.02504, 17, 18], "succs": [[11, 4], [0, 48], [16], [2, 14], [3], [8, 35], [34, 5], [5], [23], [54], [9, 66], [16], [11], [16], [13, 63], [50], [51, 15], [51, 15], [26, 59], [18, 61], [25, 44], [52, 20], [20], [16], [1, 23], [38], [33, 28], [21, 53], [6], [47], [65, 41, 10, 45, 29, 49, 57, 58, 42, 31], [36], [16], [32, 43], [32], [3, 12], [45], [36], [16], [19, 38], [54], [40, 66], [66, 55], [24, 7], [67, 6], [66, 62], [45], [45], [35], [47], [64, 30], [50, 54], [16], [56, 52], [], [54], [22, 39], [46], [46], [16], [16], [44], [], [17, 60], [37], [37], [], [59]], "fname": "version_etc_va", "n_num": 68}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 30, 0, 0, 7, 1, 1, 0, 0, 0.025396825396825397, ["mov     rdi, [r8]", "lea     rax, [rsp+108h+arg_18]", "mov     ebp, 4", "mov     [rsp+108h+authors.overflow_arg_area], rax", "test    rdi, rdi", "mov     [rsp+108h+var_A8], rdi", "jz      loc_CC20"], ["mov~rdi,<TAG>", "lea~rax,[rsp+0]", "mov~ebp,0", "mov~[rsp+0],rax", "test~rdi,rdi", "mov~[rsp+0],rdi", "jz~FOO"]], [1, 0, 31, 0, 0, 7, 1, 1, 3, 5, 0.02142857142857143, ["mov     rax, [rdi]", "lea     r8, [rsp+108h+arg_10]", "mov     ebp, 3", "mov     [rsp+108h+authors.overflow_arg_area], r8", "test    rax, rax", "mov     [rsp+108h+var_B0], rax", "jz      loc_CC20"], ["mov~rax,<TAG>", "lea~r8,[rsp+0]", "mov~ebp,0", "mov~[rsp+0],r8", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [2, 0, 4, 1, 1, 16, 1, 1, 6, -1, 0.008333333333333333, ["mov     r9, [rsp+108h+var_B8]; jumptable 000000000000CCB0 case 8", "mov     r8, [rsp+108h+var_C0]", "lea     rsi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     rcx, [rsp+108h+var_C8]", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r13, [rsp+108h+var_90]", "mov     r12, [rsp+108h+var_98]", "mov     rbp, [rsp+108h+var_A0]", "mov     r15, [rsp+108h+var_A8]", "mov     r14, [rsp+108h+var_B0]", "mov     [rsp+108h+var_F8], r9", "mov     [rsp+108h+var_100], r8", "mov     [rsp+108h+var_108], rcx", "call    _dcgettext", "sub     rsp, 8"], ["mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "lea~rsi,<TAG>", "mov~rcx,[rsp+0]", "mov~edx,0", "xor~edi,edi", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "call~FOO", "sub~rsp,0"]], [0, 0, 16, 1, 0, 4, 0, 1, 5, -1, 0.21865079365079365, ["lea     rdx, off_12B34", "movsxd  rax, dword ptr [rdx+rbp*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 1, 3, 1, 1, 8, 1, 2, 7, -1, 0.004761904761904762, ["mov     rcx, [rsp+128h+var_108]", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 20h", "jmp     loc_CD33; jumptable 000000000000CCB0 case 0"], ["mov~rcx,[rsp+0]", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [1, 0, 4, 0, 1, 20, 1, 2, 6, -1, 0.007936507936507936, ["mov     r8, [rsp+108h+var_C0]; jumptable 000000000000CCB0 case 7", "mov     r13, [rsp+108h+var_B8]", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "mov     rcx, [rsp+108h+var_C8]", "mov     r12, [rsp+108h+var_98]", "mov     edx, 5; category", "mov     rbp, [rsp+108h+var_A0]", "mov     r15, [rsp+108h+var_A8]", "xor     edi, edi; domainname", "mov     r14, [rsp+108h+var_B0]", "mov     [rsp+108h+var_100], r8", "mov     [rsp+108h+var_108], rcx", "call    _dcgettext", "push    r12", "mov     r9, r13", "push    rbp", "push    r15", "push    r14", "mov     r8, [rsp+128h+var_100]", "jmp     short loc_CF74"], ["mov~r8,[rsp+0]", "mov~r13,[rsp+0]", "lea~rsi,<TAG>", "mov~rcx,[rsp+0]", "mov~r12,[rsp+0]", "mov~edx,0", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "xor~edi,edi", "mov~r14,[rsp+0]", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "call~FOO", "push~r12", "mov~r9,r13", "push~rbp", "push~r15", "push~r14", "mov~r8,[rsp+0]", "jmp~FOO"]], [2, 0, 4, 1, 1, 17, 1, 1, 6, -1, 0.007936507936507936, ["mov     rcx, [rsp+108h+var_C8]; jumptable 000000000000CCB0 case 6", "mov     rbp, [rsp+108h+var_A0]", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "mov     r15, [rsp+108h+var_A8]", "mov     r14, [rsp+108h+var_B0]", "mov     edx, 5; category", "mov     r13, [rsp+108h+var_B8]", "mov     r12, [rsp+108h+var_C0]", "xor     edi, edi; domainname", "mov     [rsp+108h+var_108], rcx", "call    _dcgettext", "sub     rsp, 8", "mov     r9, r13", "mov     r8, r12", "push    rbp", "push    r15", "push    r14"], ["mov~rcx,[rsp+0]", "mov~rbp,[rsp+0]", "lea~rsi,<TAG>", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~edx,0", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "xor~edi,edi", "mov~<TAG>,rcx", "call~FOO", "sub~rsp,0", "mov~r9,r13", "mov~r8,r12", "push~rbp", "push~r15", "push~r14"]], [1, 0, 34, 0, 0, 5, 1, 1, 1, 7, 0.009523809523809525, ["mov     rax, [rdi+28h]", "mov     [rsp+108h+authors.gp_offset], 30h ; '0'", "test    rax, rax", "mov     [rsp+108h+var_C0], rax", "jz      loc_D050"], ["mov~rax,[rdi+0]", "mov~[rsp+0],0", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [0, 2, 36, 1, 0, 23, 2, 1, 0, 8, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, stream", "sub     rsp, 0D8h", "mov     rax, fs:28h", "mov     [rsp+108h+var_70], rax", "xor     eax, eax", "lea     rax, [rsp+108h+arg_0]", "mov     [rsp+108h+var_48], r8", "mov     [rsp+108h+var_40], r9", "mov     [rsp+108h+authors.gp_offset], 28h ; '('", "mov     [rsp+108h+authors.overflow_arg_area], rax", "lea     rax, [rsp+108h+var_68]", "mov     [rsp+108h+authors.reg_save_area], rax", "mov     stream, rax", "mov     rax, [rax+20h]", "test    rax, rax", "mov     [rsp+108h+var_C8], rax", "jz      loc_D048"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,stream", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "mov~[rsp+0],r8", "mov~[rsp+0],r9", "mov~[rsp+0],<STR>", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~stream,rax", "mov~rax,[rax+0]", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [2, 0, 22, 1, 0, 6, 1, 0, 9, -1, 0.00873015873015873, ["xor     ebp, ebp", "cmp     qword ptr [rdi+18h], 0", "lea     rax, [rsp+108h+arg_40]", "mov     [rsp+108h+authors.overflow_arg_area], rax", "setnz   bpl", "add     rbp, 9"], ["xor~ebp,ebp", "cmp~[word ptr [rdi+0],0", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "setnz~bpl", "add~rbp,0"]], [0, 0, 24, 0, 0, 6, 1, 1, 8, -1, 0.012698412698412698, ["lea     rax, [rsp+108h+arg_38]", "mov     [rsp+108h+authors.overflow_arg_area], rax", "mov     rax, [rdi+10h]", "test    rax, rax", "mov     [rsp+108h+var_88], rax", "jz      loc_D069"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rdi+0]", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [2, 0, 3, 0, 2, 12, 2, 3, 6, -1, 0.0, ["mov     rbp, [rsp+108h+var_C8]; jumptable 000000000000CCB0 case 1", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_CD33; jumptable 000000000000CCB0 case 0"], ["mov~rbp,[rsp+0]", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 29, 0, 0, 7, 1, 1, 5, 3, 0.027777777777777776, ["mov     rax, [rax]", "lea     rdi, [rsp+108h+arg_20]", "mov     ebp, 5", "mov     [rsp+108h+authors.overflow_arg_area], rdi", "test    rax, rax", "mov     [rsp+108h+var_A0], rax", "jz      short loc_CC20"], ["mov~rax,<TAG>", "lea~rdi,[rsp+0]", "mov~ebp,0", "mov~[rsp+0],rdi", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [2, 0, 3, 0, 2, 16, 2, 3, 6, -1, 0.0, ["mov     r13, [rsp+108h+var_B8]; jumptable 000000000000CCB0 case 3", "mov     r12, [rsp+108h+var_C0]", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "mov     rbp, [rsp+108h+var_C8]", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r9, r13", "mov     rdx, rax", "mov     r8, r12", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_CD33; jumptable 000000000000CCB0 case 0"], ["mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "lea~rsi,<TAG>", "mov~rbp,[rsp+0]", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r9,r13", "mov~rdx,rax", "mov~r8,r12", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [5, 0, 18, 0, 4, 20, 3, 5, 4, -1, 0.2571428571428571, ["lea     rsi, aC; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7E3h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     rbp, 9; switch 10 cases", "ja      loc_CFF0; jumptable 000000000000CCB0 default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~rbp,0", "ja~FOO"]], [1, 0, 19, 0, 1, 8, 1, 2, 3, -1, 0.12063492063492064, ["mov     r8, version", "mov     version, package", "lea     package, aSS_0; \"%s %s\\n\"", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_CC48"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 19, 0, 1, 8, 1, 1, 3, -1, 0.12063492063492064, ["mov     r8, package", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     r9, version", "mov     rdi, stream", "mov     version, command_name", "xor     eax, eax", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~r8,package", "lea~package,<TAG>", "mov~r9,version", "mov~rdi,stream", "mov~version,command_name", "xor~eax,eax", "mov~esi,0", "call~FOO"]], [1, 0, 4, 0, 1, 11, 1, 2, 6, -1, 0.007936507936507936, ["mov     r15, [rsp+108h+var_A8]; jumptable 000000000000CCB0 case 5", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [rsp+108h+var_B0]", "mov     r13, [rsp+108h+var_B8]", "mov     r12, [rsp+108h+var_C0]", "mov     rbp, [rsp+108h+var_C8]", "call    _dcgettext", "push    r15", "jmp     short loc_CEDB"], ["mov~r15,[rsp+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[rsp+0]", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "push~r15", "jmp~FOO"]], [2, 0, 3, 1, 1, 14, 1, 1, 7, -1, 0.009523809523809525, ["push    r13", "push    r12", "mov     rdx, rax", "push    rbp", "push    r15", "mov     esi, 1", "push    r14", "mov     r9, [rsp+138h+var_F8]", "mov     rdi, stream", "mov     r8, [rsp+138h+var_100]", "mov     rcx, [rsp+138h+var_108]", "xor     eax, eax", "call    ___fprintf_chk", "add     rsp, 30h"], ["push~r13", "push~r12", "mov~rdx,rax", "push~rbp", "push~r15", "mov~esi,0", "push~r14", "mov~r9,[rsp+0]", "mov~rdi,stream", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "xor~eax,eax", "call~FOO", "add~rsp,0"]], [0, 0, 4, 0, 1, 5, 1, 2, 6, -1, 0.013888888888888888, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     r10, [rsp+108h+var_F0]", "push    r10", "jmp     loc_CD05"], ["xor~edi,edi", "call~FOO", "mov~r10,[rsp+0]", "push~r10", "jmp~FOO"]], [1, 0, 32, 0, 0, 7, 1, 1, 2, 6, 0.024603174603174603, ["mov     rax, [rsp+108h+arg_0]", "lea     rdi, [rsp+108h+arg_8]", "mov     ebp, 2", "mov     [rsp+108h+authors.overflow_arg_area], rdi", "test    rax, rax", "mov     [rsp+108h+var_B8], rax", "jz      loc_CC20"], ["mov~rax,[rsp+0]", "lea~rdi,[rsp+0]", "mov~ebp,0", "mov~[rsp+0],rdi", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 28, 0, 0, 6, 1, 1, 6, 2, 0.02857142857142857, ["lea     rax, [rsp+108h+arg_28]", "mov     [rsp+108h+authors.overflow_arg_area], rax", "mov     rax, [rdi]", "test    rax, rax", "mov     [rsp+108h+var_98], rax", "jz      loc_D05F"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,<TAG>", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 5, 0, 0, 16, 0, 1, 5, -1, 0.02261904761904762, ["mov     r10, [rsp+108h+var_88]; jumptable 000000000000CCB0 default case", "mov     r9, [rsp+108h+var_B8]", "mov     edx, 5", "mov     r8, [rsp+108h+var_C0]", "mov     rcx, [rsp+108h+var_C8]", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r13, [rsp+108h+var_90]", "mov     r12, [rsp+108h+var_98]", "mov     [rsp+108h+var_F0], r10", "mov     rbp, [rsp+108h+var_A0]", "mov     r15, [rsp+108h+var_A8]", "mov     r14, [rsp+108h+var_B0]", "mov     [rsp+108h+var_F8], r9", "mov     [rsp+108h+var_100], r8", "mov     [rsp+108h+var_108], rcx", "jmp     loc_CDD7"], ["mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "mov~edx,0", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "lea~rsi,<TAG>", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~[rsp+0],r10", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx", "jmp~FOO"]], [0, 0, 21, 0, 0, 2, 1, 1, 2, -1, 0.25, ["test    command_name, command_name", "jz      loc_CD60"], ["test~command_name,command_name", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 6, -1, 0.05396825396825397, ["mov     rax, [rsp+108h+var_70]; jumptable 000000000000CCB0 case 0", "xor     rax, fs:28h", "jnz     loc_D05A"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [2, 0, 3, 0, 2, 14, 2, 3, 6, -1, 0.0, ["mov     r12, [rsp+108h+var_C0]; jumptable 000000000000CCB0 case 2", "mov     rbp, [rsp+108h+var_C8]", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r8, r12", "mov     rdx, rax", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_CD33; jumptable 000000000000CCB0 case 0"], ["mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r8,r12", "mov~rdx,rax", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 1, 12, 1, 2, 7, -1, 0.004761904761904762, ["push    r14", "mov     rdx, rax", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbp", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "pop     rax", "pop     rdx", "jmp     loc_CD33; jumptable 000000000000CCB0 case 0"], ["push~r14", "mov~rdx,rax", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbp", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "pop~rax", "pop~rdx", "jmp~FOO"]], [0, 0, 22, 0, 0, 2, 1, 1, 1, -1, 0.01746031746031746, ["xor     ebp, ebp", "jmp     loc_CC20"], ["xor~ebp,ebp", "jmp~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 8, 0, 0.01746031746031746, ["mov     ebp, 7", "jmp     loc_CC20"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 26, 0, 0, 6, 1, 1, 7, 1, 0.022222222222222223, ["lea     rax, [rsp+108h+arg_30]", "mov     [rsp+108h+authors.overflow_arg_area], rax", "mov     rax, [rdi+8]", "test    rax, rax", "mov     [rsp+108h+var_90], rax", "jz      loc_D073"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rdi+0]", "test~rax,rax", "mov~[rsp+0],rax", "jz~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 2, -1, 0.00873015873015873, ["mov     ebp, 1", "jmp     loc_CC20"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 7, -1, 0.01746031746031746, ["mov     ebp, 6", "jmp     loc_CC20"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 9, -1, 0.00873015873015873, ["mov     ebp, 8", "jmp     loc_CC20"], ["mov~ebp,0", "jmp~FOO"]], [2, 0, 4, 1, 1, 9, 1, 1, 6, -1, 0.007936507936507936, ["lea     rsi, aWrittenBySSSAn; jumptable 000000000000CCB0 case 4", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, [rsp+108h+var_B0]", "mov     r13, [rsp+108h+var_B8]", "mov     r12, [rsp+108h+var_C0]", "mov     rbp, [rsp+108h+var_C8]", "call    _dcgettext", "sub     rsp, 8"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,[rsp+0]", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "call~FOO", "sub~rsp,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 7, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 7, -1, 0.0, ["add     rsp, 0D8h", "pop     stream", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~stream", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 5, 0, 0, 15, 0, 0, 6, -1, 0.0007936507936507937, ["mov     r10, [rsp+108h+var_88]; jumptable 000000000000CCB0 case 9", "mov     r9, [rsp+108h+var_B8]", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     r8, [rsp+108h+var_C0]", "mov     rcx, [rsp+108h+var_C8]", "mov     edx, 5; category", "mov     r13, [rsp+108h+var_90]", "mov     r12, [rsp+108h+var_98]", "mov     rbp, [rsp+108h+var_A0]", "mov     r15, [rsp+108h+var_A8]", "mov     r14, [rsp+108h+var_B0]", "mov     [rsp+108h+var_F0], r10", "mov     [rsp+108h+var_F8], r9", "mov     [rsp+108h+var_100], r8", "mov     [rsp+108h+var_108], rcx"], ["mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "lea~rsi,<TAG>", "mov~r8,[rsp+0]", "mov~rcx,[rsp+0]", "mov~edx,0", "mov~r13,[rsp+0]", "mov~r12,[rsp+0]", "mov~rbp,[rsp+0]", "mov~r15,[rsp+0]", "mov~r14,[rsp+0]", "mov~[rsp+0],r10", "mov~[rsp+0],r9", "mov~[rsp+0],r8", "mov~<TAG>,rcx"]]], "func_feature": [22, 34, 50, 17, 37, 56, 0, 329, 0.03698, 17, 9], "succs": [[12, 23], [0, 23], [18], [33, 2, 36, 5, 6, 11, 13, 17, 24, 25], [24], [4], [4], [20, 30], [27, 7], [23], [32, 9], [24], [21, 23], [24], [3, 22], [14], [14], [26], [24], [18], [1, 23], [29, 31], [19], [16, 15], [34, 35], [24], [24], [23], [23], [10, 28], [23], [23], [23], [26], [], [], [19]], "fname": "version_etc", "n_num": 37}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[5, 0, 1, 0, 5, 29, 5, 6, 0, 0, 0.0, ["push    rbx", "lea     rsi, aReportBugsToS; \"\\nReport bugs to: %s\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "lea     rdx, aBugCoreutilsGn; \"bug-coreutils@gnu.org\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "lea     rsi, aSHomePageS; \"%s home page: <%s>\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, unk_106BB", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aGeneralHelpUsi; \"General help using GNU software: <https\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "pop     rbx", "jmp     _fputs_unlocked"], ["push~rbx", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbx,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "pop~rbx", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [5, 5, 6, 0, 2, 1, 0, 29, 0.0, 7, 0], "succs": [[1], []], "fname": "emit_bug_reporting_address", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 3, 0, 1, 4, 1, 2, 0, 0, 0.2, ["mov     n, rbx; size", "call    _malloc", "test    rax, rax", "jnz     short loc_D12C"], ["mov~n,rbx", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 1, 1, 0.15000000000000002, ["movzx   eax, al", "test    rax, rax", "jnz     short loc_D12E"], ["movzx~eax,al", "test~rax,rax", "jnz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 3, 1, 0.05, ["test    rbx, rbx", "jnz     short loc_D12E"], ["test~rbx,rbx", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, -1, 0.0, ["pop     rbx", "retn"], ["pop~rbx", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 5, 1, 0, 7, 1, 1, 0, 1, 0.0, ["mov     rax, n", "push    rbx", "mul     s", "mov     rbx, rax", "seto    al", "test    rbx, rbx", "js      short loc_D12E"], ["mov~rax,n", "push~rbx", "mul~,s", "mov~rbx,rax", "seto~al", "test~rbx,rbx", "js~FOO"]]], "func_feature": [2, 4, 6, 0, 6, 8, 0, 19, 0.06667, 0, 1], "succs": [[2, 3], [0, 4], [3, 4], [], [], [1, 4]], "fname": "xnmalloc", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 6, 0, 0, 3, 1, 1, 0, 0, 0.17857142857142855, ["test    rsi, rsi", "mov     rbx, rsi", "jnz     short loc_D167"], ["test~rsi,rsi", "mov~rbx,rsi", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 1, 1, 0.10714285714285714, ["movzx   eax, al", "test    rax, rax", "jnz     short loc_D189"], ["movzx~eax,al", "test~rax,rax", "jnz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 3, 3, 0.05357142857142857, ["test    p, p", "jnz     short loc_D180"], ["test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 1, 4, 1, 1, 4, -1, 0.0, ["call    _free", "xor     eax, eax", "pop     rbx", "retn"], ["call~FOO", "xor~eax,eax", "pop~rbx", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 8, 1, 0, 7, 1, 1, 0, 1, 0.0, ["mov     rax, n", "push    rbx", "mul     s", "mov     n, rax", "seto    al", "test    rsi, rsi", "js      short loc_D189"], ["mov~rax,n", "push~rbx", "mul~,s", "mov~n,rax", "seto~al", "test~rsi,rsi", "js~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 4, 1, 0.05357142857142857, ["test    rbx, rbx", "jnz     short loc_D189"], ["test~rbx,rbx", "jnz~FOO"]], [0, 0, 3, 0, 1, 4, 1, 2, 3, 2, 0.17857142857142855, ["mov     rsi, rbx; size", "call    _realloc", "test    rax, rax", "jnz     short loc_D179"], ["mov~rsi,rbx", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["pop     rbx", "retn"], ["pop~rbx", "retn"]]], "func_feature": [3, 7, 9, 0, 9, 12, 0, 28, 0.06349, 0, 1], "succs": [[2, 7], [0, 4], [3, 7], [], [], [1, 4], [8, 4], [8, 6], []], "fname": "xnrealloc", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 8, 0, 0, 2, 1, 1, 0, 0, 0.030303030303030304, ["test    n, n", "jz      short loc_D210"], ["test~n,n", "jz~FOO"]], [0, 0, 12, 0, 0, 5, 1, 1, 0, 2, 0.0, ["test    p, p", "push    rbx", "mov     rcx, s", "mov     r8, [pn]", "jz      short loc_D1E0"], ["test~p,p", "push~rbx", "mov~rcx,s", "mov~r8,<TAG>", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 0, 1, 4, 3, 0.09090909090909091, ["mov     [pn], n", "mov     rbx, rcx", "jmp     short loc_D1CB"], ["mov~<TAG>,n", "mov~rbx,rcx", "jmp~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 3, 1, 0.09848484848484848, ["test    rax, rax", "jnz     short loc_D239"], ["test~rax,rax", "jnz~FOO"]], [0, 1, 7, 2, 0, 8, 3, 1, 2, 2, 0.0, ["xor     edx, edx", "mov     eax, 80h", "xor     r8d, r8d", "div     s", "test    n, n", "setz    r8b", "add     r8, n", "jmp     short loc_D1E5"], ["xor~edx,edx", "mov~eax,<STR>", "xor~r8d,r8d", "div~,s", "test~n,n", "setz~r8b", "add~r8,n", "jmp~FOO"]], [1, 0, 5, 1, 0, 7, 1, 1, 2, 3, 0.06060606060606061, ["mov     rax, n", "shr     rax, 1", "lea     rbx, [rax+n+1]", "mov     [pn], n", "imul    n, s", "test    rbx, rbx", "jz      short loc_D230"], ["mov~rax,n", "shr~rax,0", "lea~rbx,[rax+0]", "mov~<TAG>,n", "imul~n,s", "test~rbx,rbx", "jz~FOO"]], [1, 0, 6, 1, 0, 5, 1, 0, 1, 1, 0.045454545454545456, ["xor     edx, edx", "mov     rax, 5555555555555554h", "div     s", "cmp     rax, n", "jbe     loc_D239"], ["xor~edx,edx", "mov~rax,0", "div~,s", "cmp~rax,n", "jbe~FOO"]], [0, 0, 3, 0, 1, 4, 1, 2, 3, 2, 0.13636363636363635, ["mov     pn, rbx; size", "call    _realloc", "test    rax, rax", "jnz     short loc_D1DD"], ["mov~pn,rbx", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 6, 1, 0, 7, 1, 1, 2, 1, 0.10606060606060606, ["mov     rax, s", "mul     n", "mov     s, rax", "seto    al", "test    rcx, rcx", "movzx   eax, al", "js      short loc_D239"], ["mov~rax,s", "mul~,n", "mov~s,rax", "seto~al", "test~rcx,rcx", "movzx~eax,al", "js~FOO"]], [0, 0, 0, 0, 1, 4, 1, 1, 3, -1, 0.0, ["call    _free", "xor     eax, eax", "pop     rbx", "retn"], ["call~FOO", "xor~eax,eax", "pop~rbx", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 4, 1, 0.022727272727272728, ["test    rbx, rbx", "jnz     short loc_D239"], ["test~rbx,rbx", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["pop     rbx", "retn"], ["pop~rbx", "retn"]]], "func_feature": [3, 12, 12, 0, 13, 18, 0, 52, 0.04545, 0, 5], "succs": [[8, 4], [0, 6], [7], [2, 10], [8], [9, 7], [10, 5], [11, 12], [10, 3], [], [], [10, 12], []], "fname": "x2nrealloc", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    _malloc", "test    rax, rax", "jnz     short loc_D253"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, 1, 0.16666666666666666, ["test    n, n", "jnz     short loc_D255"], ["test~n,n", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 4, 0, 4, 4, 0, 10, 0.04167, 0, 0], "succs": [[], [0, 2], [0, 3], []], "fname": "xcharalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_D275"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    _malloc", "test    p, p", "jnz     short loc_D273"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 4, 0, 4, 4, 25, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 2], [], []], "fname": "xmalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]], [0, 0, 3, 0, 1, 4, 1, 2, 1, 2, 0.2, ["mov     n, rbx; size", "call    _realloc", "test    p, p", "jnz     short loc_D2A0"], ["mov~n,rbx", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 2, 1, 0.1, ["test    n, n", "jnz     short loc_D2B1"], ["test~n,n", "jnz~FOO"]], [0, 0, 6, 0, 0, 4, 1, 1, 0, 3, 0.0, ["test    n, n", "push    rbx", "mov     rbx, n", "jnz     short loc_D28E"], ["test~n,n", "push~rbx", "mov~rbx,n", "jnz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 1, 3, 0.03333333333333333, ["test    p, p", "jnz     short loc_D2A8"], ["test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 1, 4, 1, 1, 2, -1, 0.0, ["call    _free", "xor     eax, eax", "pop     n", "retn"], ["call~FOO", "xor~eax,eax", "pop~n", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [3, 5, 7, 0, 7, 8, 42, 19, 0.04762, 0, 0], "succs": [[], [0, 2], [0, 6], [1, 4], [1, 5], [], []], "fname": "xrealloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 3, 0, 0, 3, 0, 0, 0, 0, 0.06666666666666667, ["mov     rdx, rax", "shr     rdx, 1", "lea     rax, [rax+rdx+1]"], ["mov~rdx,rax", "shr~rdx,0", "lea~rax,[rax+0]"]], [1, 0, 4, 0, 0, 3, 0, 1, 1, 1, 0.05, ["mov     rdx, 5555555555555553h", "cmp     rax, rdx", "ja      short loc_D311"], ["mov~rdx,0", "cmp~rax,rdx", "ja~FOO"]], [1, 0, 6, 1, 0, 4, 1, 1, 0, 2, 0.0, ["sub     rsp, 8", "test    p, p", "mov     rax, [pn]", "jz      short loc_D300"], ["sub~rsp,0", "test~p,p", "mov~rax,<TAG>", "jz~FOO"]], [0, 1, 3, 0, 0, 5, 2, 0, 1, 1, 0.08333333333333333, ["test    rax, rax", "mov     edx, 80h", "cmovz   rax, rdx", "test    rax, rax", "jns     short loc_D2E6"], ["test~rax,rax", "mov~edx,<STR>", "cmovz~rax,rdx", "test~rax,rax", "jns~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 2, 1, 0.16666666666666666, ["mov     [pn], rax", "mov     pn, rax; size", "call    _realloc", "test    rax, rax", "jz      short loc_D311"], ["mov~<TAG>,rax", "mov~pn,rax", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [2, 4, 5, 0, 7, 9, 0, 23, 0.05238, 0, 2], "succs": [[5], [0, 4], [1, 3], [4, 5], [], [4, 6], []], "fname": "x2realloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 3, 0, 1, 6, 1, 2, 0, 0, 0.0, ["push    rbx", "mov     esi, 1; size", "mov     rbx, s", "call    _calloc", "test    rax, rax", "jnz     short loc_D338"], ["push~rbx", "mov~esi,0", "mov~rbx,s", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 0, 1, 0.16666666666666666, ["test    s, s", "jnz     short loc_D33A"], ["test~s,s", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, -1, 0.0, ["pop     s", "retn"], ["pop~s", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 4, 0, 11, 0.04167, 0, 0], "succs": [[2, 3], [], [1, 3], []], "fname": "xzalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 4, 2, 0, 6, 1, 1, 0, 0, 0.0, ["mov     rax, n", "sub     rsp, 8", "mul     s", "seto    dl", "test    rax, rax", "js      short loc_D369"], ["mov~rax,n", "sub~rsp,0", "mul~,s", "seto~dl", "test~rax,rax", "js~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 0, 1, 0.16666666666666666, ["movzx   edx, dl", "test    rdx, rdx", "jnz     short loc_D369"], ["movzx~edx,dl", "test~rdx,rdx", "jnz~FOO"]], [0, 0, 2, 0, 1, 3, 1, 2, 0, 1, 0.16666666666666666, ["call    _calloc", "test    p, p", "jz      short loc_D369"], ["call~FOO", "test~p,p", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 3, 5, 0, 5, 6, 0, 15, 0.06667, 0, 3], "succs": [[1, 4], [2, 4], [3, 4], [], []], "fname": "xcalloc", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 0, 0.08333333333333333, ["test    s, s", "jnz     short loc_D3A2"], ["test~s,s", "jnz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0.0, [], []], [1, 0, 1, 1, 0, 7, 0, 1, 1, 0, 0.16666666666666666, ["add     rsp, 8", "mov     rdx, s; n", "mov     rsi, p; src", "pop     s", "pop     p", "mov     rdi, rax; dest", "jmp     _memcpy"], ["add~rsp,0", "mov~rdx,s", "mov~rsi,p", "pop~s", "pop~p", "mov~rdi,rax", "jmp~FOO"]], [1, 0, 4, 1, 1, 9, 1, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, p", "mov     p, s; size", "mov     rbx, s", "sub     rsp, 8", "call    _malloc", "test    rax, rax", "jnz     short loc_D38E"], ["push~rbp", "push~rbx", "mov~rbp,p", "mov~p,s", "mov~rbx,s", "sub~rsp,0", "call~FOO", "test~rax,rax", "jnz~FOO"]]], "func_feature": [2, 2, 5, 0, 5, 5, 1, 19, 0.05, 0, 2], "succs": [[], [0, 3], [], [2], [1, 3]], "fname": "xmemdup", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 3, 1, 2, 10, 1, 3, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, string", "sub     rsp, 8", "call    _strlen", "lea     rbx, [rax+1]", "mov     rdi, rbx; size", "call    _malloc", "test    rax, rax", "jz      short loc_D3E3"], ["push~rbp", "push~rbx", "mov~rbp,string", "sub~rsp,0", "call~FOO", "lea~rbx,[rax+0]", "mov~rdi,rbx", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 1, 1, 0, 7, 0, 1, 1, 0, 0.16666666666666666, ["add     rsp, 8", "mov     rdx, rbx; n", "mov     rsi, string; src", "pop     rbx", "pop     string", "mov     rdi, rax; dest", "jmp     _memcpy"], ["add~rsp,0", "mov~rdx,rbx", "mov~rsi,string", "pop~rbx", "pop~string", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0.0, [], []]], "func_feature": [3, 1, 5, 0, 4, 3, 0, 18, 0.04167, 0, 2], "succs": [[], [0, 2], [3], []], "fname": "xstrdup", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[2, 0, 0, 1, 3, 12, 3, 3, 0, 0, 0.0, ["lea     rsi, aMemoryExhauste_1; \"memory exhausted\"", "sub     rsp, 8", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     edi, cs:exit_failure; status", "lea     rdx, aLuBytesSCopied+1Bh; format", "mov     rcx, rax", "xor     esi, esi; errnum", "xor     eax, eax", "call    _error", "call    _abort"], ["lea~rsi,<TAG>", "sub~rsp,0", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~edi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "xor~esi,esi", "xor~eax,eax", "call~FOO", "call~FOO"]]], "func_feature": [3, 3, 3, 0, 1, 0, 21, 12, 0.0, 3, 1], "succs": [[]], "fname": "xalloc_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 61, 0, 0, 3, 1, 1, 0, 0, 0.06380352955695422, ["test    valid_suffixes, valid_suffixes", "mov     [rsp+58h+strtol_base], rcx", "jnz     short loc_D540"], ["test~valid_suffixes,valid_suffixes", "mov~[rsp+0],rcx", "jnz~FOO"]], [0, 0, 68, 0, 1, 8, 1, 2, 4, 10, 0.059237319511292116, ["xor     ecx, ecx; group", "mov     rsi, p; endptr", "mov     rdi, s; nptr", "call    ___strtoul_internal", "mov     rcx, [p]", "mov     ch_0, rax", "cmp     rcx, s", "jz      short loc_D4F8"], ["xor~ecx,ecx", "mov~rsi,p", "mov~rdi,s", "call~FOO", "mov~rcx,<TAG>", "mov~ch_0,rax", "cmp~rcx,s", "jz~FOO"]], [0, 0, 56, 0, 1, 7, 1, 2, 8, 6, 0.1373565346168086, ["movsx   esi, r12b; c", "mov     rdi, valid_suffixes; s", "mov     [rsp+58h+strtol_base], rcx", "call    _strchr", "test    rax, rax", "mov     rcx, [rsp+58h+strtol_base]", "jz      loc_D66C; jumptable 000000000000D606 default case"], ["movsx~esi,r12b", "mov~rdi,valid_suffixes", "mov~[rsp+0],rcx", "call~FOO", "test~rax,rax", "mov~rcx,[rsp+0]", "jz~FOO"]], [0, 0, 58, 0, 0, 3, 1, 1, 8, 7, 0.03998519067012218, ["movzx   r12d, byte ptr [rcx]", "test    r12b, r12b", "jnz     short loc_D567"], ["movzx~r12d,<TAG>", "test~r12b,r12b", "jnz~FOO"]], [1, 0, 58, 0, 1, 8, 2, 2, 7, 7, 0.07997038134024435, ["movsx   esi, r12b; c", "mov     rdi, valid_suffixes; s", "xor     ebp, ebp", "call    _strchr", "test    rax, rax", "mov     ebx, 1", "mov     rcx, [rsp+58h+strtol_base]", "jz      short loc_D508"], ["movsx~esi,r12b", "mov~rdi,valid_suffixes", "xor~ebp,ebp", "call~FOO", "test~rax,rax", "mov~ebx,0", "mov~rcx,[rsp+0]", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 6, -1, 0.0006170554115759594, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 5, 1, 0, 4, 0, 0, 13, -1, 0.0012032580525731212, ["mov     rax, tmp; jumptable 000000000000D606 cases 9,41", "mul     rsi", "mov     tmp, rax", "jno     loc_D653; jumptable 000000000000D606 case 33"], ["mov~rax,tmp", "mul~,rsi", "mov~tmp,rax", "jno~FOO"]], [0, 0, 45, 1, 0, 5, 0, 1, 12, 2, 0.18974453905960756, ["lea     rdx, off_12BD8", "movzx   r12d, r12b", "movsxd  rax, dword ptr [rdx+r12*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movzx~r12d,r12b", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [2, 0, 46, 1, 0, 3, 0, 1, 11, 3, 0.19326175490559053, ["sub     r12d, 42h ; 'B'", "cmp     r12b, 35h ; '5'; switch 54 cases", "ja      short loc_D66C; jumptable 000000000000D606 default case"], ["sub~r12d,0", "cmp~r12b,0", "ja~FOO"]], [0, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.00037023324694557573, ["add     tmp, tmp", "jmp     short loc_D653; jumptable 000000000000D606 case 33"], ["add~tmp,tmp", "jmp~FOO"]], [1, 0, 6, 1, 0, 4, 0, 0, 13, -1, 0.006016290262865606, ["mov     edx, 2; jumptable 000000000000D606 case 53", "mov     rax, rdx", "mul     tmp", "jo      short loc_D6FF"], ["mov~edx,0", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 4, -1, 0.006664198445020363, ["mov     ebp, 4"], ["mov~ebp,0"]], [1, 0, 69, 0, 0, 2, 0, 1, 3, 11, 0.05109218807848945, ["cmp     bl, 2Dh ; '-'", "jz      short loc_D508"], ["cmp~bl,0", "jz~FOO"]], [2, 0, 61, 0, 0, 3, 0, 1, 6, 9, 0.007929162038751079, ["cmp     eax, 22h ; '\"'", "mov     ebp, 1", "jnz     short loc_D508"], ["cmp~eax,0", "mov~ebp,0", "jnz~FOO"]], [0, 0, 59, 0, 0, 3, 1, 1, 6, 8, 0.0718869554485993, ["movzx   r12d, byte ptr [s+0]", "test    r12b, r12b", "jz      short loc_D508"], ["movzx~r12d,[yte ptr [s+0]", "test~r12b,r12b", "jz~FOO"]], [1, 0, 55, 0, 0, 3, 0, 1, 9, 5, 0.14161421695668272, ["lea     eax, [r12-45h]", "cmp     al, 2Fh ; '/'", "ja      short loc_D5E0"], ["lea~eax,[r12-45h]+0]", "cmp~al,0", "ja~FOO"]], [0, 0, 20, 1, 0, 3, 0, 0, 13, 4, 0.014439096630877453, ["mov     rax, tmp; jumptable 000000000000D606 case 24", "mul     rsi", "jo      loc_D6B4"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [0, 1, 6, 1, 0, 4, 0, 0, 13, -1, 0.006016290262865606, ["mov     edx, 200h; jumptable 000000000000D606 case 32", "mov     rax, rdx", "mul     tmp", "jo      short loc_D6FF"], ["mov~edx,<STR>", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]], [2, 0, 16, 0, 0, 3, 1, 1, 14, 2, 0.0038874490929285454, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_D620"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [0, 0, 17, 1, 0, 2, 0, 0, 15, 2, 0.022028878193261756, ["mul     rsi", "jo      loc_D7F9"], ["mul~,rsi", "jo~FOO"]], [0, 0, 18, 1, 0, 3, 0, 0, 13, 3, 0.014439096630877453, ["mov     rax, tmp; jumptable 000000000000D606 case 3", "mul     rsi", "jo      loc_D7F9"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [1, 0, 72, 0, 2, 17, 1, 3, 1, 13, 0.013328396890040726, ["lea     rax, [rsp+58h+t_ptr]", "mov     r15, ptr", "test    ptr, ptr", "mov     rbp, s", "mov     dword ptr [rsp+58h+strtol_base], edx", "mov     r14, val", "mov     r13, valid_suffixes", "cmovz   r15, rax", "call    ___errno_location", "mov     dword ptr [rax], 0", "mov     r12, rax", "movzx   ebx, byte ptr [q+0]", "call    ___ctype_b_loc", "mov     edx, dword ptr [rsp+58h+strtol_base]; base", "mov     rsi, [rax]", "mov     rax, q", "jmp     short loc_D4A7"], ["lea~rax,[rsp+0]", "mov~r15,ptr", "test~ptr,ptr", "mov~rbp,s", "mov~[word ptr [rsp+0],edx", "mov~r14,val", "mov~r13,valid_suffixes", "cmovz~r15,rax", "call~FOO", "mov~<TAG>,0", "mov~r12,rax", "movzx~ebx,[yte ptr [q+0]", "call~FOO", "mov~edx,[word ptr [rsp+0]", "mov~rsi,<TAG>", "mov~rax,q", "jmp~FOO"]], [1, 1, 74, 1, 0, 12, 1, 1, 0, 14, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "cmp     edx, 24h ; '$'", "ja      loc_D780"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edx,0", "ja~FOO"]], [2, 0, 47, 0, 0, 6, 1, 1, 14, 4, 0.00870048130322103, ["xor     edi, edi", "cmp     byte ptr [rcx+2], 42h ; 'B'", "mov     esi, 400h", "setz    dil", "lea     rdi, [rdi+rdi+1]", "jmp     loc_D5EA"], ["xor~edi,edi", "cmp~[yte ptr [rcx+0],0", "mov~esi,0", "setz~dil", "lea~rdi,[rdi+0]", "jmp~FOO"]], [1, 0, 51, 0, 0, 2, 0, 1, 13, 5, 0.0072195483154387265, ["cmp     al, 69h ; 'i'", "jz      loc_D762"], ["cmp~al,0", "jz~FOO"]], [0, 0, 14, 1, 0, 3, 0, 0, 13, -1, 0.014439096630877453, ["mov     rax, tmp; jumptable 000000000000D606 cases 18,50", "mul     rsi", "jo      loc_D7EA"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [0, 0, 12, 1, 0, 3, 0, 0, 13, -1, 0.01925212884116994, ["mov     rax, tmp; jumptable 000000000000D606 cases 5,37", "mul     rsi", "jo      loc_D7DB"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, -1, 0.026286560533135876, ["mov     rdi, [rsp+58h+var_40]", "xor     rdi, fs:28h", "mov     eax, ebp", "jnz     loc_D77B"], ["mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "mov~eax,ebp", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 8, -1, 0.0016660496112550908, ["mov     [val], tmp", "jmp     short loc_D50D"], ["mov~<TAG>,tmp", "jmp~FOO"]], [2, 0, 3, 1, 0, 8, 1, 1, 13, -1, 0.022491669751943725, ["add     rcx, rdi; jumptable 000000000000D606 case 33", "mov     eax, ebp", "mov     [p], rcx", "or      eax, 2", "cmp     byte ptr [rcx], 0", "mov     [val], tmp", "cmovnz  ebp, eax", "jmp     loc_D50D"], ["add~rcx,rdi", "mov~eax,ebp", "mov~<TAG>,rcx", "or~eax,0", "cmp~<TAG>,0", "mov~<TAG>,tmp", "cmovnz~ebp,eax", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 9, -1, 0.006386523509811181, ["mov     [val], tmp; jumptable 000000000000D606 default case", "or      ebp, 2", "jmp     loc_D50D"], ["mov~<TAG>,tmp", "or~ebp,0", "jmp~FOO"]], [2, 0, 10, 0, 0, 3, 1, 1, 14, -1, 0.0057386153276564236, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_D63B"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [0, 0, 11, 1, 0, 2, 0, 0, 15, -1, 0.038689374305812665, ["mul     rsi", "jo      loc_D7DB"], ["mul~,rsi", "jo~FOO"]], [2, 0, 4, 0, 0, 3, 1, 1, 14, -1, 0.0011106997408367272, ["mov     ebp, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_D653; jumptable 000000000000D606 case 33"], ["mov~ebp,0", "or~rbx,0", "jmp~FOO"]], [1, 0, 6, 1, 0, 4, 0, 0, 13, -1, 0.006016290262865606, ["mov     edx, 400h; jumptable 000000000000D606 case 0", "mov     rax, rdx", "mul     tmp", "jo      short loc_D6FF"], ["mov~edx,0", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]], [1, 0, 54, 0, 0, 3, 0, 0, 10, 5, 0.017771195853387635, ["mov     rdx, 814400308945h", "bt      rdx, rax", "jnb     short loc_D5E0"], ["mov~rdx,0", "bt~rdx,rax", "jnb~FOO"]], [0, 0, 12, 0, 0, 2, 1, 1, 14, -1, 0.003517215845982969, ["xor     r8d, r8d", "jmp     loc_D632"], ["xor~r8d,r8d", "jmp~FOO"]], [0, 0, 22, 1, 0, 3, 0, 0, 13, 5, 0.014439096630877453, ["mov     rax, tmp; jumptable 000000000000D606 case 23", "mul     rsi", "jo      loc_D7AE"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [0, 0, 15, 1, 0, 2, 0, 0, 15, 1, 0.030544242873009997, ["mul     rsi", "jo      loc_D808"], ["mul~,rsi", "jo~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 14, 2, 0.0038874490929285454, ["xor     r8d, r8d", "jmp     loc_D620"], ["xor~r8d,r8d", "jmp~FOO"]], [1, 0, 72, 1, 0, 2, 0, 0, 3, 13, 0.0, ["add     q, 1", "movzx   ebx, byte ptr [q]"], ["add~q,0", "movzx~ebx,<TAG>"]], [0, 1, 72, 0, 0, 3, 1, 1, 2, 12, 0.039244724176231024, ["movzx   ecx, bl", "test    byte ptr [rsi+rcx*2+1], 20h", "jnz     short loc_D4A0"], ["movzx~ecx,bl", "test~[yte ptr [rsi+0],<STR>", "jnz~FOO"]], [0, 0, 20, 0, 0, 1, 1, 0, 14, 4, 0.004257682339874121, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [2, 0, 8, 0, 0, 3, 1, 1, 14, -1, 0.01036653091447612, ["or      rax, 0FFFFFFFFFFFFFFFFh", "mov     r8d, 1", "jmp     loc_D644"], ["or~rax,0", "mov~r8d,0", "jmp~FOO"]], [0, 0, 10, 1, 0, 3, 0, 0, 13, -1, 0.028878193261754906, ["mov     rax, tmp; jumptable 000000000000D606 cases 11,43", "mul     rsi", "jo      loc_D79F"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [2, 0, 5, 0, 0, 3, 1, 1, 16, -1, 0.01582747130692336, ["mov     r8d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_D650"], ["mov~r8d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 7, 1, 0, 2, 0, 0, 15, -1, 0.050721954831543875, ["mul     rsi", "jo      loc_D7BD"], ["mul~,rsi", "jo~FOO"]], [0, 0, 13, 1, 0, 2, 0, 0, 15, -1, 0.036097741577193636, ["mul     rsi", "jo      loc_D7EA"], ["mul~,rsi", "jo~FOO"]], [0, 0, 14, 0, 0, 2, 1, 1, 14, -1, 0.0037023324694557573, ["xor     r8d, r8d", "jmp     loc_D629"], ["xor~r8d,r8d", "jmp~FOO"]], [2, 0, 14, 0, 0, 3, 1, 1, 14, 0, 0.0037023324694557573, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_D629"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [0, 0, 19, 1, 0, 2, 0, 0, 15, 3, 0.010551647537948908, ["mul     rsi", "jno     loc_D617"], ["mul~,rsi", "jno~FOO"]], [2, 0, 20, 0, 0, 3, 1, 1, 14, 4, 0.004257682339874121, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_D6AB"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     r12", "pop     valid_suffixes", "pop     val", "pop     p", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~valid_suffixes", "pop~val", "pop~p", "retn"]], [2, 0, 12, 0, 0, 3, 1, 1, 14, -1, 0.003517215845982969, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_D632"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [1, 0, 53, 0, 1, 7, 1, 2, 11, 5, 0.015734912995186968, ["mov     esi, 30h ; '0'; c", "mov     rdi, valid_suffixes; s", "mov     [rsp+58h+strtol_base], rcx", "call    _strchr", "test    rax, rax", "mov     rcx, [rsp+58h+strtol_base]", "jz      short loc_D5E0"], ["mov~esi,0", "mov~rdi,valid_suffixes", "mov~[rsp+0],rcx", "call~FOO", "test~rax,rax", "mov~rcx,[rsp+0]", "jz~FOO"]], [0, 0, 60, 0, 0, 2, 1, 1, 6, 9, 0.006941873380229545, ["xor     ebp, ebp", "jmp     short loc_D4E0"], ["xor~ebp,ebp", "jmp~FOO"]], [0, 0, 63, 0, 0, 3, 1, 1, 5, 10, 0.005800320868814019, ["mov     eax, [r12]", "test    eax, eax", "jz      short loc_D538"], ["mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [1, 0, 0, 0, 1, 5, 0, 1, 1, -1, 0.0, ["lea     val, __PRETTY_FUNCTION___4162; \"xstrtoumax\"", "lea     ptr, file; \"lib/xstrtol.c\"", "lea     s, assertion; \"0 <= strtol_base && strtol_base <= 36\"", "mov     edx, 54h ; 'T'; line", "call    ___assert_fail"], ["lea~val,<TAG>", "lea~ptr,<TAG>", "lea~s,<TAG>", "mov~edx,0", "call~FOO"]], [0, 0, 9, 1, 0, 2, 0, 0, 15, -1, 0.04313217326915957, ["mul     rsi", "jo      loc_D7CC"], ["mul~,rsi", "jo~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 14, -1, 0.0057386153276564236, ["xor     r8d, r8d", "jmp     loc_D63B"], ["xor~r8d,r8d", "jmp~FOO"]], [1, 0, 52, 0, 0, 3, 0, 1, 12, 5, 0.013328396890040726, ["movzx   eax, byte ptr [rcx+1]", "cmp     al, 44h ; 'D'", "jz      short loc_D5CF"], ["movzx~eax,[yte ptr [rcx+0]", "cmp~al,0", "jz~FOO"]], [2, 0, 18, 0, 0, 3, 1, 1, 14, 3, 0.004072565716401333, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_D617"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [0, 0, 18, 0, 0, 1, 1, 0, 14, 3, 0.004072565716401333, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [1, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.00037023324694557573, ["shl     tmp, 9", "jmp     short loc_D653; jumptable 000000000000D606 case 33"], ["shl~tmp,0", "jmp~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 14, -1, 0.01036653091447612, ["xor     r8d, r8d", "jmp     loc_D644"], ["xor~r8d,r8d", "jmp~FOO"]], [2, 0, 8, 0, 0, 3, 1, 1, 16, -1, 0.0, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_D644"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [1, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.00037023324694557573, ["shl     tmp, 0Ah", "jmp     loc_D653; jumptable 000000000000D606 case 33"], ["shl~tmp,0", "jmp~FOO"]], [1, 0, 49, 0, 0, 2, 0, 1, 14, 5, 0.0005553498704183636, ["cmp     al, 42h ; 'B'", "jnz     short loc_D5E0"], ["cmp~al,0", "jnz~FOO"]], [0, 0, 16, 1, 0, 3, 0, 0, 13, 1, 0.014439096630877453, ["mov     rax, tmp; jumptable 000000000000D606 case 14", "mul     rsi", "jo      loc_D808"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 16, -1, 0.01582747130692336, ["mov     rbx, rax"], ["mov~rbx,rax"]], [0, 0, 4, 0, 0, 1, 1, 0, 17, -1, 0.022954461310625694, ["or      ebp, r8d"], ["or~ebp,r8d"]], [1, 1, 47, 0, 0, 3, 0, 1, 13, 4, 0.013050721954831545, ["mov     esi, 3E8h", "mov     edi, 2", "jmp     short loc_D5EA"], ["mov~esi,<STR>", "mov~edi,0", "jmp~FOO"]], [2, 0, 47, 0, 0, 2, 0, 0, 10, 4, 0.14985190670122178, ["mov     esi, 400h", "mov     edi, 1"], ["mov~esi,0", "mov~edi,0"]], [0, 0, 59, 0, 0, 2, 1, 1, 7, 8, 0.03387634209552018, ["test    valid_suffixes, valid_suffixes", "jz      short loc_D4EE"], ["test~valid_suffixes,valid_suffixes", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [8, 36, 53, 1, 75, 122, 2, 251, 0.02566, 5, 27], "succs": [[5, 14], [0, 56], [30, 15], [2, 28], [2, 11], [11], [33, 29], [34, 68, 37, 6, 10, 44, 16, 17, 20, 25, 26, 29, 30], [30, 7], [29], [9, 33], [27], [1, 11], [73, 11], [11, 4], [72, 35], [61, 62], [33, 63], [38], [18, 38], [18, 39], [41], [57, 21], [8], [67, 23], [36, 53], [59, 31], [74, 52], [27], [27], [27], [58], [58, 31], [29], [33, 66], [72, 54], [32], [42, 51], [49, 47], [38], [41], [40, 12], [50], [46], [64, 43], [70], [45, 69], [32, 53], [47], [47], [19, 61], [50], [], [32], [72, 60], [73], [13, 55], [], [65, 46], [58], [24, 71], [19], [19], [29], [46], [46], [29], [72, 71], [48, 49], [70], [29], [8], [8], [3, 28], []], "fname": "xstrtoumax", "n_num": 75}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 8, 0, 1, 7, 0, 2, 0, 0, 0.125, ["lea     rdi, [totalsize+1]; n", "call    xmalloc", "mov     r14, rax", "mov     eax, [args+0]", "mov     rbx, p", "mov     [rsp+68h+var_5C], eax", "jmp     short loc_D908"], ["lea~rdi,[totalsize+0]", "call~FOO", "mov~r14,rax", "mov~eax,[args+0]", "mov~rbx,p", "mov~[rsp+0],eax", "jmp~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 5, -1, 0.20588235294117646, ["cmp     totalsize, 7FFFFFFFh", "ja      loc_D960"], ["cmp~totalsize,0", "ja~FOO"]], [1, 0, 17, 1, 0, 16, 2, 1, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 38h", "mov     rax, fs:28h", "mov     [rsp+68h+var_40], rax", "xor     eax, eax", "test    argcount, argcount", "movdqu  xmm0, xmmword ptr [args]", "movups  xmmword ptr [rsp+68h+ap.gp_offset], xmm0", "mov     r14, [args+10h]", "mov     [rsp+68h+ap.reg_save_area], r14", "jz      loc_D920"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~argcount,argcount", "movdqu~xmm0,<TAG>", "movups~[mmword ptr [rsp+0],xmm0", "mov~r14,[args+0]", "mov~[rsp+0],r14", "jz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, -1, 0.11029411764705882, ["mov     rcx, [rsp+68h+var_40]", "xor     rcx, fs:28h", "mov     rax, r14", "jnz     short loc_D955"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,r14", "jnz~FOO"]], [1, 0, 3, 0, 1, 4, 1, 2, 6, -1, 0.0661764705882353, ["call    ___errno_location", "xor     r14d, r14d", "mov     dword ptr [rax], 4Bh ; 'K'", "jmp     short loc_D933"], ["call~FOO", "xor~r14d,r14d", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 2, -1, 0.07720588235294118, ["mov     byte ptr [p], 0"], ["mov~<TAG>,0"]], [1, 0, 8, 2, 2, 11, 0, 3, 9, -1, 0.09558823529411764, ["mov     r15, [rax]", "mov     rdi, r15; s", "call    _strlen", "mov     rdi, p; dest", "mov     r12, rax", "mov     rdx, len; n", "mov     rsi, r15; src", "add     p, r12", "call    _memcpy", "sub     rbp, 1", "jz      short loc_D930"], ["mov~r15,<TAG>", "mov~rdi,r15", "call~FOO", "mov~rdi,p", "mov~r12,rax", "mov~rdx,len", "mov~rsi,r15", "add~p,r12", "call~FOO", "sub~rbp,0", "jz~FOO"]], [0, 0, 8, 0, 0, 4, 0, 1, 8, -1, 0.042279411764705885, ["mov     rax, [args+8]", "lea     rdx, [rax+8]", "mov     [args+8], rdx", "jmp     short loc_D8E3"], ["mov~rax,[args+0]", "lea~rdx,[rax+0]", "mov~[args+0],rdx", "jmp~FOO"]], [1, 0, 8, 2, 0, 5, 0, 0, 8, -1, 0.042279411764705885, ["mov     eax, ecx", "add     rax, [args+10h]", "add     ecx, 8", "mov     [rsp+68h+var_5C], ecx", "mov     [args+0], ecx"], ["mov~eax,ecx", "add~rax,[args+0]", "add~ecx,0", "mov~[rsp+0],ecx", "mov~[args+0],ecx"]], [1, 0, 15, 2, 1, 8, 0, 2, 4, 2, 0.20220588235294118, ["mov     rdi, [rax]; s", "call    _strlen", "add     rax, totalsize", "mov     rdx, rax", "cmovb   rdx, r12", "sub     i, 1", "mov     totalsize, rdx", "jnz     short loc_D874"], ["mov~rdi,<TAG>", "call~FOO", "add~rax,totalsize", "mov~rdx,rax", "cmovb~rdx,r12", "sub~i,0", "mov~totalsize,rdx", "jnz~FOO"]], [0, 0, 15, 0, 0, 4, 0, 1, 3, 0, 0.058823529411764705, ["mov     rax, [rsp+68h+ap.overflow_arg_area]", "lea     rcx, [rax+8]", "mov     [rsp+68h+ap.overflow_arg_area], rcx", "jmp     loc_D891"], ["mov~rax,[rsp+0]", "lea~rcx,[rax+0]", "mov~[rsp+0],rcx", "jmp~FOO"]], [1, 0, 15, 2, 0, 5, 0, 0, 3, 3, 0.058823529411764705, ["mov     eax, ecx", "add     ecx, 8", "add     rax, r14", "mov     [rsp+68h+var_5C], ecx", "mov     [rsp+68h+ap.gp_offset], ecx"], ["mov~eax,ecx", "add~ecx,0", "add~rax,r14", "mov~[rsp+0],ecx", "mov~[rsp+0],ecx"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 4, 0, 1, 4, 0, 1, 1, -1, 0.014705882352941176, ["mov     edi, 1; n", "call    xmalloc", "mov     rbx, rax", "mov     r14, p"], ["mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~r14,p"]], [1, 0, 15, 0, 0, 3, 0, 1, 2, 1, 0.10294117647058823, ["mov     ecx, [rsp+68h+var_5C]", "cmp     ecx, 2Fh ; '/'", "ja      loc_D970"], ["mov~ecx,[rsp+0]", "cmp~ecx,0", "ja~FOO"]], [1, 0, 8, 0, 0, 3, 0, 0, 7, -1, 0.13970588235294118, ["mov     ecx, [rsp+68h+var_5C]", "cmp     ecx, 2Fh ; '/'", "jbe     short loc_D8D2"], ["mov~ecx,[rsp+0]", "cmp~ecx,0", "jbe~FOO"]], [1, 0, 15, 0, 0, 7, 1, 0, 1, 2, 0.04044117647058824, ["mov     eax, [rsp+68h+ap.gp_offset]", "mov     rbp, i", "mov     r13, args", "mov     rbx, i", "xor     r15d, r15d", "mov     r12, 0FFFFFFFFFFFFFFFFh", "mov     [rsp+68h+var_5C], eax"], ["mov~eax,[rsp+0]", "mov~rbp,i", "mov~r13,args", "mov~rbx,i", "xor~r15d,r15d", "mov~r12,0", "mov~[rsp+0],eax"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 38h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [7, 5, 17, 2, 18, 23, 1, 97, 0.0768, 1, 10], "succs": [[15], [0, 4], [16, 13], [17, 12], [3], [3], [5, 15], [6], [6], [1, 14], [9], [9], [], [5], [10, 11], [8, 7], [14], []], "fname": "xstrcat", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 5, 0, 1, 3, 0, 2, 0, 0, 0.06666666666666667, ["call    ___errno_location", "cmp     dword ptr [rax], 0Ch", "jz      short loc_DA2F"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 7, 0, 1, 6, 1, 2, 2, 2, 0.16041666666666665, ["mov     rdx, args; args", "mov     rdi, rsp; resultp", "mov     args, format; format", "call    rpl_vasprintf", "test    eax, eax", "js      short loc_DA18"], ["mov~rdx,args", "mov~rdi,rsp", "mov~args,format", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 5, 3, 0.0625, ["cmp     cl, 25h ; '%'", "jnz     short loc_D9E8"], ["cmp~cl,0", "jnz~FOO"]], [1, 0, 12, 1, 0, 4, 1, 1, 4, 4, 0.09791666666666667, ["add     argcount, 1; argcount", "movzx   ecx, byte ptr [format+argcount*2]", "test    cl, cl", "jnz     short loc_D9C0"], ["add~argcount,0", "movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 4, -1, 0.0125, ["xor     eax, eax", "jmp     short loc_D9FE"], ["xor~eax,eax", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 1, -1, 0.016666666666666666, ["xor     edi, edi", "jmp     short loc_D9DA"], ["xor~edi,edi", "jmp~FOO"]], [1, 0, 16, 1, 0, 7, 2, 1, 0, 4, 0.0, ["sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+18h+var_10], rax", "xor     eax, eax", "movzx   eax, byte ptr [f]", "test    al, al", "jz      short loc_DA26"], ["sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 3, -1, 0.10833333333333334, ["mov     rdx, [rsp+18h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_DA2A"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 6, 3, 0.008333333333333333, ["cmp     byte ptr [format+argcount*2+1], 73h ; 's'", "jnz     short loc_D9E8"], ["cmp~[yte ptr [format+0],0", "jnz~FOO"]], [0, 0, 3, 0, 1, 2, 0, 2, 2, -1, 0.05625, ["call    xstrcat", "jmp     short loc_D9FE"], ["call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 3, -1, 0.05625, ["mov     rax, [rsp+18h+result]"], ["mov~rax,<TAG>"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 14, 0, 0, 3, 0, 1, 1, 3, 0.041666666666666664, ["cmp     al, 25h ; '%'", "mov     r8, f", "jnz     short loc_D9E8"], ["cmp~al,0", "mov~r8,f", "jnz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 2, 3, 0.0375, ["cmp     byte ptr [format+1], 73h ; 's'", "jnz     short loc_D9E8"], ["cmp~[yte ptr [format+0],0", "jnz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 4, -1, 0.0, ["add     rsp, 18h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 12, 0, 0, 2, 1, 1, 3, 5, 0.04583333333333333, ["xor     edi, edi", "jmp     short loc_D9CD"], ["xor~edi,edi", "jmp~FOO"]]], "func_feature": [5, 8, 18, 1, 17, 23, 2, 45, 0.04534, 1, 3], "succs": [[12, 4], [0, 11], [9, 1], [2, 10], [8], [10], [5, 13], [], [15, 7], [1, 3], [8], [8], [], [1, 14], [16, 1], [], [3]], "fname": "xvasprintf", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[2, 0, 7, 0, 2, 8, 1, 3, 0, 0, 0.027777777777777776, ["mov     rdi, fp; stream", "call    _fileno", "xor     esi, esi; offset", "mov     edx, 1; whence", "mov     edi, eax; fd", "call    _lseek", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_DA5C"], ["mov~rdi,fp", "call~FOO", "xor~esi,esi", "mov~edx,0", "mov~edi,eax", "call~FOO", "cmp~rax,0", "jnz~FOO"]], [0, 0, 8, 0, 1, 3, 1, 2, 1, 3, 0.08333333333333333, ["call    ___freading", "test    eax, eax", "jnz     short loc_DA88"], ["call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 4, -1, 0.0, ["pop     fp", "pop     rbp", "pop     saved_errno", "retn"], ["pop~fp", "pop~rbp", "pop~saved_errno", "retn"]], [1, 0, 1, 0, 0, 3, 0, 1, 4, 0, 0.0, ["mov     [rbp+0], r12d", "mov     eax, 0FFFFFFFFh", "jmp     short loc_DA80"], ["mov~[rbp+0],r12d", "mov~eax,0", "jmp~FOO"]], [0, 0, 2, 0, 2, 7, 1, 3, 3, 1, 0.1111111111111111, ["call    ___errno_location", "mov     r12d, [rax]", "mov     rdi, fp; stream", "mov     rbp, rax", "call    _fclose", "test    r12d, r12d", "jnz     short loc_DAB0"], ["call~FOO", "mov~r12d,<TAG>", "mov~rdi,fp", "mov~rbp,rax", "call~FOO", "test~r12d,r12d", "jnz~FOO"]], [0, 0, 6, 0, 1, 4, 1, 2, 2, 2, 0.15277777777777776, ["mov     rdi, fp; stream", "call    rpl_fflush", "test    eax, eax", "jz      short loc_DAA4"], ["mov~rdi,fp", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 1, 0, 0, 4, 0, 1, 1, -1, 0.06944444444444445, ["pop     fp", "pop     rbp", "pop     r12", "jmp     _fclose"], ["pop~fp", "pop~rbp", "pop~r12", "jmp~FOO"]], [0, 0, 9, 0, 1, 8, 1, 2, 0, 4, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, fp", "call    _fileno", "test    eax, eax", "mov     rdi, fp; fp", "js      short loc_DAA7"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,fp", "call~FOO", "test~eax,eax", "mov~rdi,fp", "js~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 3, -1, 0.08333333333333333, ["mov     rdi, fp; stream"], ["mov~rdi,fp"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []]], "func_feature": [7, 5, 14, 0, 10, 13, 1, 42, 0.05278, 0, 0], "succs": [[8, 5], [0, 5], [], [2], [2, 3], [8, 4], [9], [1, 6], [6], []], "fname": "rpl_fclose", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 9, 0, 0, 2, 0, 1, 0, 0, 0.0101010101010101, ["cmp     esi, 1", "jnz     short loc_DBE8"], ["cmp~esi,0", "jnz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 1, 7, -1, 0.013131313131313131, ["jg      short loc_DB90"], ["jg~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 9, -1, 0.00202020202020202, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 3, 0, 1, 6, 1, 2, 10, -1, 0.006060606060606061, ["mov     rdx, [rax]", "mov     edi, ebp; fd", "xor     eax, eax", "call    _fcntl", "mov     ebx, eax", "jmp     short loc_DBA0"], ["mov~rdx,<TAG>", "mov~edi,ebp", "xor~eax,eax", "call~FOO", "mov~ebx,eax", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 9, -1, 0.006818181818181818, ["mov     rax, [rsp+68h+arg.overflow_arg_area]", "jmp     loc_DBF9"], ["mov~rax,[rsp+0]", "jmp~FOO"]], [0, 0, 4, 1, 0, 1, 0, 0, 9, -1, 0.006818181818181818, ["add     rax, [rsp+68h+arg.reg_save_area]"], ["add~rax,[rsp+0]"]], [1, 0, 6, 0, 0, 2, 0, 1, 6, -1, 0.004545454545454545, ["mov     cs:have_dupfd_cloexec_3326, 0FFFFFFFFh", "jmp     loc_DC83"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 7, 0, 1, 8, 3, 2, 5, -1, 0.006313131313131313, ["xor     esi, esi; cmd", "xor     eax, eax", "mov     edx, r12d", "mov     edi, ebp; fd", "call    _fcntl", "test    eax, eax", "mov     ebx, eax", "js      loc_DBA0"], ["xor~esi,esi", "xor~eax,eax", "mov~edx,r12d", "mov~edi,ebp", "call~FOO", "test~eax,eax", "mov~ebx,eax", "js~FOO"]], [1, 1, 45, 1, 0, 19, 2, 1, 0, 6, 0.0, ["push    r12", "push    rbp", "mov     ebp, edi", "push    rbx", "sub     rsp, 50h", "mov     rax, fs:28h", "mov     [rsp+68h+var_50], rax", "xor     eax, eax", "lea     rax, [rsp+68h+arg_0]", "test    esi, esi", "mov     [rsp+68h+var_38], rdx", "mov     [rsp+68h+var_30], rcx", "mov     [rsp+68h+var_28], r8", "mov     [rsp+68h+arg.overflow_arg_area], rax", "lea     rax, [rsp+68h+var_48]", "mov     [rsp+68h+var_20], r9", "mov     [rsp+68h+arg.gp_offset], 10h", "mov     [rsp+68h+arg.reg_save_area], rax", "jz      loc_DD12"], ["push~r12", "push~rbp", "mov~ebp,edi", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "test~esi,esi", "mov~[rsp+0],rdx", "mov~[rsp+0],rcx", "mov~[rsp+0],r8", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],r9", "mov~<TAG>,0", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, -1, 0.043434343434343436, ["mov     rcx, [rsp+68h+var_50]", "xor     rcx, fs:28h", "mov     eax, ebx", "jnz     loc_DD0D"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [1, 0, 5, 0, 1, 6, 2, 2, 5, -1, 0.010606060606060607, ["xor     eax, eax", "mov     esi, 1; cmd", "mov     edi, ebx; fd", "call    _fcntl", "test    eax, eax", "js      short loc_DCB1"], ["xor~eax,eax", "mov~esi,0", "mov~edi,ebx", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 4, -1, 0.006060606060606061, ["cmp     cs:have_dupfd_cloexec_3326, 0FFFFFFFFh", "jnz     loc_DBA0"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 5, 2, 0.02016835016835017, ["cmp     esi, 409h", "jz      short loc_DC40"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 4, 3, 0.025185185185185185, ["cmp     esi, 407h", "jg      short loc_DC10"], ["cmp~esi,0", "jg~FOO"]], [1, 0, 43, 0, 0, 2, 0, 1, 1, 5, 0.0202020202020202, ["cmp     esi, 406h", "jnz     short loc_DB60"], ["cmp~esi,0", "jnz~FOO"]], [0, 0, 10, 0, 0, 1, 0, 1, 6, -1, 0.021683501683501687, ["jl      loc_DB90"], ["jl~FOO"]], [0, 0, 3, 0, 1, 5, 1, 1, 3, -1, 0.023383838383838382, ["mov     edi, ebp; fd", "xor     eax, eax", "call    _fcntl", "mov     ebx, eax", "nop     dword ptr [rax+rax+00h]"], ["mov~edi,ebp", "xor~eax,eax", "call~FOO", "mov~ebx,eax", "nop~[word ptr [rax+0]"]], [1, 0, 31, 0, 0, 2, 0, 1, 2, 4, 0.02904040404040404, ["cmp     esi, 0Bh", "jz      short loc_DB90"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 6, 3, 0.011582491582491583, ["cmp     esi, 401h", "jz      short loc_DB90"], ["cmp~esi,0", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 8, -1, 0.00202020202020202, ["jmp     loc_DB90"], ["jmp~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 6, 3, 0.011582491582491583, ["cmp     esi, 9", "jz      loc_DB90"], ["cmp~esi,0", "jz~FOO"]], [0, 0, 7, 0, 1, 6, 3, 2, 3, -1, 0.008333333333333333, ["xor     esi, esi; cmd", "xor     eax, eax", "call    _fcntl", "test    eax, eax", "mov     ebx, eax", "js      loc_DBA0"], ["xor~esi,esi", "xor~eax,eax", "call~FOO", "test~eax,eax", "mov~ebx,eax", "js~FOO"]], [2, 0, 13, 0, 0, 6, 0, 1, 2, -1, 0.010858585858585859, ["mov     rax, [rsp+68h+arg.reg_save_area]", "cmp     cs:have_dupfd_cloexec_3326, 0", "mov     [rsp+68h+arg.gp_offset], 18h", "mov     r12d, [rax+10h]", "mov     edx, r12d", "js      loc_DC63"], ["mov~rax,[rsp+0]", "cmp~<TAG>,0", "mov~<TAG>,0", "mov~r12d,[rax+0]", "mov~edx,r12d", "js~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 7, -1, 0.017676767676767676, ["cmp     esi, 40Ah", "jnz     short loc_DBE8"], ["cmp~esi,0", "jnz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 5, 1, 0.030404040404040406, ["mov     eax, [rsp+68h+arg.gp_offset]", "cmp     eax, 2Fh ; '/'", "ja      loc_DD34"], ["mov~eax,<TAG>", "cmp~eax,0", "ja~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 4, 2, 0.02531986531986532, ["cmp     esi, 4", "jz      loc_DC40"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 6, 2, 0.013131313131313131, ["cmp     esi, 2", "jz      loc_DC40"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 5, 2, 0.010067340067340067, ["cmp     esi, 406h", "jge     short loc_DC40"], ["cmp~esi,0", "jge~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 7, 2, 0.009595959595959595, ["cmp     esi, 402h", "jz      short loc_DC40"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 8, 2, 0.006060606060606061, ["cmp     esi, 400h", "jz      short loc_DC40"], ["cmp~esi,0", "jz~FOO"]], [0, 0, 12, 0, 0, 1, 0, 1, 7, 2, 0.009595959595959595, ["jg      short loc_DC40"], ["jg~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 8, 2, 0.006060606060606061, ["cmp     esi, 8", "jnz     short loc_DBE8"], ["cmp~esi,0", "jnz~FOO"]], [3, 0, 4, 0, 1, 8, 2, 2, 6, -1, 0.0015151515151515152, ["or      eax, 1", "mov     esi, 2; cmd", "mov     edi, ebx; fd", "mov     edx, eax", "xor     eax, eax", "call    _fcntl", "cmp     eax, 0FFFFFFFFh", "jnz     loc_DBA0"], ["or~eax,0", "mov~esi,0", "mov~edi,ebx", "mov~edx,eax", "xor~eax,eax", "call~FOO", "cmp~eax,0", "jnz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 8, -1, 0.031818181818181815, ["mov     eax, [rsp+68h+arg.gp_offset]", "cmp     eax, 2Fh ; '/'", "ja      loc_DD2A"], ["mov~eax,<TAG>", "cmp~eax,0", "ja~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, -1, 0.0022727272727272726, ["mov     cs:have_dupfd_cloexec_3326, 1", "jmp     short loc_DBA0"], ["mov~<TAG>,0", "jmp~FOO"]], [0, 0, 3, 0, 1, 6, 1, 2, 7, -1, 0.010707070707070707, ["mov     edx, [rax]", "mov     edi, ebp; fd", "xor     eax, eax", "call    _fcntl", "mov     ebx, eax", "jmp     loc_DBA0"], ["mov~edx,<TAG>", "mov~edi,ebp", "xor~eax,eax", "call~FOO", "mov~ebx,eax", "jmp~FOO"]], [1, 0, 3, 0, 2, 8, 0, 3, 6, -1, 0.0015151515151515152, ["call    ___errno_location", "mov     r12d, [rax]", "mov     fd, rax", "mov     edi, ebx; fd", "call    _close", "mov     ebx, 0FFFFFFFFh", "mov     [rbp+0], r12d", "jmp     loc_DBA0"], ["call~FOO", "mov~r12d,<TAG>", "mov~fd,rax", "mov~edi,ebx", "call~FOO", "mov~ebx,0", "mov~[rbp+0],r12d", "jmp~FOO"]], [0, 0, 3, 0, 1, 7, 2, 2, 1, -1, 0.0015151515151515152, ["mov     rax, [rsp+68h+arg.reg_save_area]", "xor     esi, esi; cmd", "mov     edx, [rax+10h]", "xor     eax, eax", "call    _fcntl", "mov     ebx, eax", "jmp     loc_DBA0"], ["mov~rax,[rsp+0]", "xor~esi,esi", "mov~edx,[rax+0]", "xor~eax,eax", "call~FOO", "mov~ebx,eax", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 6, 0, 0.008131313131313132, ["mov     rax, [rsp+68h+arg.overflow_arg_area]", "jmp     loc_DC51"], ["mov~rax,[rsp+0]", "jmp~FOO"]], [0, 0, 4, 1, 0, 1, 0, 0, 6, -1, 0.008131313131313132, ["add     rax, [rsp+68h+arg.reg_save_area]"], ["add~rax,[rsp+0]"]], [0, 1, 0, 1, 0, 5, 0, 0, 3, -1, 0.0, ["add     rsp, 50h", "pop     rbx", "pop     rbp", "pop     r12", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "retn"]], [0, 0, 30, 0, 0, 1, 0, 1, 3, 3, 0.03939393939393939, ["jg      short loc_DBC0"], ["jg~FOO"]], [1, 0, 10, 0, 1, 6, 2, 2, 3, -1, 0.006060606060606061, ["xor     eax, eax", "mov     esi, 406h; cmd", "call    _fcntl", "test    eax, eax", "mov     ebx, eax", "js      loc_DCD8"], ["xor~eax,eax", "mov~esi,0", "call~FOO", "test~eax,eax", "mov~ebx,eax", "js~FOO"]], [1, 0, 9, 0, 1, 3, 0, 2, 4, -1, 0.005555555555555556, ["call    ___errno_location", "cmp     dword ptr [rax], 16h", "jnz     loc_DB4F"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 19, 0, 0, 1, 0, 1, 5, 3, 0.021178451178451182, ["jg      loc_DC30"], ["jg~FOO"]]], "func_feature": [13, 20, 53, 6, 46, 75, 4, 157, 0.0123, 2, 4], "succs": [[2, 34], [0, 17], [17], [10], [3], [3], [11], [10, 6], [38, 15], [], [9, 41], [33, 37], [10, 11], [16, 25], [28, 13], [18, 23], [24, 17], [10], [17, 42], [17, 29], [17], [17, 31], [10, 12], [43, 22], [34, 20], [40, 39], [25, 45], [25, 1], [25, 19], [25, 30], [25, 34], [32, 25], [25, 34], [10, 37], [4, 5], [10], [10], [10], [10], [36], [36], [], [26, 14], [35, 44], [35, 7], [27, 21]], "fname": "rpl_fcntl", "n_num": 46}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 5, 0, 0, 4, 1, 1, 0, 0, 0.0, ["test    stream, stream", "push    rbx", "mov     rbx, stream", "jz      short loc_DD5A"], ["test~stream,stream", "push~rbx", "mov~rbx,stream", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0.0, [], []], [0, 0, 1, 0, 0, 3, 0, 1, 0, -1, 0.125, ["mov     rdi, stream; stream", "pop     stream", "jmp     _fflush"], ["mov~rdi,stream", "pop~stream", "jmp~FOO"]], [1, 0, 1, 0, 1, 7, 1, 2, 0, 0, 0.025, ["mov     rdi, stream; fp", "mov     edx, 1; whence", "xor     esi, esi; offset", "call    rpl_fseeko", "mov     rdi, stream; stream", "pop     stream", "jmp     _fflush"], ["mov~rdi,stream", "mov~edx,0", "xor~esi,esi", "call~FOO", "mov~rdi,stream", "pop~stream", "jmp~FOO"]], [0, 0, 4, 0, 1, 3, 1, 2, 0, 2, 0.1, ["call    ___freading", "test    eax, eax", "jz      short loc_DD5A"], ["call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 1, 1, 0, 1, 0.1, ["test    dword ptr [stream], 100h", "jnz     short loc_DD68"], ["test~<TAG>,0", "jnz~FOO"]]], "func_feature": [2, 4, 7, 0, 6, 8, 1, 19, 0.05833, 0, 0], "succs": [[2, 4], [], [1], [1], [2, 5], [2, 3]], "fname": "rpl_fflush", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 2, 0, 2, 13, 0, 3, 0, 0, 0.14285714285714285, ["push    r12", "push    rbp", "mov     r12d, edx", "push    rbx", "mov     rbp, offset", "mov     rbx, fp", "call    _fileno", "mov     edx, r12d; whence", "mov     rsi, offset; offset", "mov     edi, eax; fd", "call    _lseek", "cmp     pos, 0FFFFFFFFFFFFFFFFh", "jz      short loc_DDD2"], ["push~r12", "push~rbp", "mov~r12d,edx", "push~rbx", "mov~rbp,offset", "mov~rbx,fp", "call~FOO", "mov~edx,r12d", "mov~rsi,offset", "mov~edi,eax", "call~FOO", "cmp~pos,0", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 2, 0.14285714285714285, ["cmp     qword ptr [fp+48h], 0", "jnz     short loc_DD8A"], ["cmp~[word ptr [fp+0],0", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 0, 4, 0.0, ["mov     rax, [fp+8]", "cmp     [fp+10h], rax", "jz      short loc_DD90"], ["mov~rax,[fp+0]", "cmp~[fp+0],rax", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 1, -1, 0.07142857142857142, ["jmp     _fseeko"], ["jmp~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 1, 3, 0.09523809523809523, ["mov     rax, [fp+20h]", "cmp     [fp+28h], rax", "jnz     short loc_DD8A"], ["mov~rax,[fp+0]", "cmp~[fp+0],rax", "jnz~FOO"]], [1, 0, 1, 0, 0, 3, 2, 0, 4, 1, 0.0, ["and     dword ptr [fp], 0FFFFFFEFh", "mov     [fp+90h], pos", "xor     eax, eax"], ["and~<TAG>,0", "mov~[fp+0],pos", "xor~eax,eax"]], [0, 0, 0, 0, 0, 4, 0, 0, 4, 0, 0.0, ["pop     fp", "pop     offset", "pop     whence", "retn"], ["pop~fp", "pop~offset", "pop~whence", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []]], "func_feature": [2, 2, 7, 0, 8, 10, 1, 29, 0.05655, 0, 0], "succs": [[5, 6], [0, 3], [3, 4], [7], [1, 3], [6], [], []], "fname": "rpl_fseeko", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 5, 0, 0, 2, 1, 1, 0, 0, 0.06666666666666667, ["test    n, n", "jz      short loc_DE40"], ["test~n,n", "jz~FOO"]], [2, 0, 6, 1, 1, 19, 2, 1, 0, 2, 0.0, ["push    r13", "push    r12", "mov     r13, s", "push    rbp", "push    rbx", "mov     rbx, pwc", "mov     r12, n", "sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+38h+var_30], rax", "xor     eax, eax", "lea     rax, [rsp+38h+wc]", "test    pwc, pwc", "cmovz   rbx, rax", "mov     rdi, pwc; pwc", "call    _mbrtowc", "cmp     rax, 0FFFFFFFFFFFFFFFDh", "mov     rbp, rax", "jbe     short loc_DE40"], ["push~r13", "push~r12", "mov~r13,s", "push~rbp", "push~rbx", "mov~rbx,pwc", "mov~r12,n", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "test~pwc,pwc", "cmovz~rbx,rax", "mov~rdi,pwc", "call~FOO", "cmp~rax,0", "mov~rbp,rax", "jbe~FOO"]], [0, 0, 4, 0, 1, 4, 2, 2, 2, 2, 0.06666666666666667, ["xor     edi, edi; category", "call    hard_locale", "test    al, al", "jnz     short loc_DE40"], ["xor~edi,edi", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 1, 1, 0.26666666666666666, ["mov     rdx, [rsp+38h+var_30]", "xor     rdx, fs:28h", "mov     rax, rbp", "jnz     short loc_DE5E"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "mov~rax,rbp", "jnz~FOO"]], [1, 0, 3, 0, 0, 4, 0, 0, 3, 2, 0.0, ["movzx   eax, byte ptr [s+0]", "mov     ebp, 1", "mov     [pwc], eax", "nop     dword ptr [rax+00h]"], ["movzx~eax,[yte ptr [s+0]", "mov~ebp,0", "mov~<TAG>,eax", "nop~[word ptr [rax+0]"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 2, -1, 0.0, ["add     rsp, 18h", "pop     pwc", "pop     rbp", "pop     n", "pop     s", "retn"], ["add~rsp,0", "pop~pwc", "pop~rbp", "pop~n", "pop~s", "retn"]]], "func_feature": [3, 6, 6, 1, 7, 9, 1, 40, 0.05714, 1, 2], "succs": [[2, 3], [0, 3], [3, 4], [5, 6], [3], [], []], "fname": "rpl_mbrtowc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.23809523809523808, ["mov     resultp, [rsp+18h+var_10]", "xor     resultp, fs:28h", "jnz     short loc_DEE9"], ["mov~resultp,[rsp+0]", "xor~resultp,<TAG>", "jnz~FOO"]], [2, 0, 3, 0, 2, 6, 0, 3, 2, 2, 0.03571428571428571, ["mov     rdi, result; ptr", "call    _free", "call    ___errno_location", "mov     dword ptr [rax], 4Bh ; 'K'", "mov     eax, 0FFFFFFFFh", "jmp     short loc_DEB2"], ["mov~rdi,result", "call~FOO", "call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 2, 0.07142857142857142, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_DEB2"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 0, 2, 2, 0.03571428571428571, ["mov     [resultp], result", "mov     eax, edx"], ["mov~<TAG>,result", "mov~eax,edx"]], [1, 0, 5, 0, 0, 3, 0, 1, 1, 3, 0.047619047619047616, ["mov     rdx, [rsp+18h+length]", "cmp     rdx, 7FFFFFFFh", "ja      short loc_DEC8"], ["mov~rdx,<TAG>", "cmp~rdx,0", "ja~FOO"]], [1, 0, 0, 1, 0, 3, 0, 0, 3, -1, 0.0, ["add     rsp, 10h", "pop     rbx", "retn"], ["add~rsp,0", "pop~rbx", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 7, 1, 1, 14, 3, 2, 0, 3, 0.0, ["push    rbx", "mov     rax, format", "mov     rbx, resultp", "xor     edi, edi; resultbuf", "sub     rsp, 10h", "mov     rcx, fs:28h", "mov     [rsp+18h+var_10], rcx", "xor     ecx, ecx", "mov     format, rsp; lengthp", "mov     rcx, args; args", "mov     args, format; format", "call    vasnprintf", "test    result, result", "jz      short loc_DEE2"], ["push~rbx", "mov~rax,format", "mov~rbx,resultp", "xor~edi,edi", "sub~rsp,0", "mov~rcx,<TAG>", "mov~[rsp+0],rcx", "xor~ecx,ecx", "mov~format,rsp", "mov~rcx,args", "mov~args,format", "call~FOO", "test~result,result", "jz~FOO"]]], "func_feature": [4, 4, 9, 1, 8, 9, 1, 34, 0.05357, 1, 2], "succs": [[5, 6], [0], [0], [0], [1, 3], [], [], [2, 4]], "fname": "rpl_vasprintf", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     edi, 1; status", "jmp     usage"], ["mov~edi,0", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[], [0]], "fname": "__argmatch_die", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 9, 0, 1, 6, 1, 2, 0, 0, 0.11029411764705882, ["mov     rsi, [rsp+58h+arg]; s2", "mov     rdx, arglen; n", "mov     rdi, r13; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_DF7C"], ["mov~rsi,<TAG>", "mov~rdx,arglen", "mov~rdi,r13", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 16, 0, 0, 5, 2, 1, 1, 3, 0.05514705882352941, ["xor     ebx, ebx", "test    vallist_0, vallist_0", "mov     rbp, arglen", "mov     [rsp+58h+ambiguous], 0", "jnz     short loc_DF92"], ["xor~ebx,ebx", "test~vallist_0,vallist_0", "mov~rbp,arglen", "mov~[rsp+0],0", "jnz~FOO"]], [1, 0, 9, 2, 0, 5, 1, 1, 3, 3, 0.09191176470588235, ["add     i, 1", "add     r12, [rsp+58h+valsize]", "mov     r13, [arglist+i*8]", "test    r13, r13", "jz      loc_E010"], ["add~i,0", "add~r12,[rsp+0]", "mov~r13,<TAG>", "test~r13,r13", "jz~FOO"]], [0, 1, 0, 1, 0, 9, 0, 0, 1, -1, 0.0, ["add     rsp, 28h", "mov     rax, r15", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     arglist", "pop     r15", "retn"], ["add~rsp,<STR>", "mov~rax,r15", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~arglist", "pop~r15", "retn"]], [1, 1, 17, 1, 1, 17, 1, 2, 0, 4, 0.0, ["push    r15", "push    r14", "mov     r14, arglist", "push    r13", "push    r12", "mov     r12, vallist_0", "push    rbp", "push    rbx", "mov     r15, 0FFFFFFFFFFFFFFFFh", "sub     rsp, 28h", "mov     [rsp+58h+arg], arg_0", "mov     [rsp+58h+vallist], vallist_0", "mov     [rsp+58h+valsize], valsize_0", "call    _strlen", "mov     r13, [arglist]", "test    r13, r13", "jz      loc_E020"], ["push~r15", "push~r14", "mov~r14,arglist", "push~r13", "push~r12", "mov~r12,vallist_0", "push~rbp", "push~rbx", "mov~r15,0", "sub~rsp,<STR>", "mov~<TAG>,arg_0", "mov~[rsp+0],vallist_0", "mov~[rsp+0],valsize_0", "call~FOO", "mov~r13,<TAG>", "test~r13,r13", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, 0, 0.014705882352941176, ["mov     matchind, i", "jmp     short loc_E020"], ["mov~matchind,i", "jmp~FOO"]], [2, 0, 1, 0, 0, 3, 0, 0, 4, -1, 0.03676470588235294, ["cmp     [rsp+58h+ambiguous], 0", "mov     rax, 0FFFFFFFFFFFFFFFEh", "cmovnz  matchind, rax"], ["cmp~[rsp+0],0", "mov~rax,0", "cmovnz~matchind,rax"]], [1, 0, 9, 0, 0, 1, 0, 0, 6, 4, 0.007352941176470588, ["mov     [rsp+58h+ambiguous], 1"], ["mov~[rsp+0],0"]], [1, 0, 9, 0, 0, 2, 0, 1, 5, 4, 0.0625, ["cmp     matchind, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_DFC8"], ["cmp~matchind,0", "jnz~FOO"]], [0, 0, 9, 0, 0, 1, 0, 1, 2, 3, 0.044117647058823525, ["jmp     loc_DFDA"], ["jmp~FOO"]], [0, 0, 9, 0, 1, 6, 1, 2, 3, 2, 0.125, ["mov     rsi, [rsp+58h+arg]; s2", "mov     rdx, arglen; n", "mov     rdi, r13; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_DFCD"], ["mov~rsi,<TAG>", "mov~rdx,arglen", "mov~rdi,r13", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 9, 1, 0, 5, 1, 1, 6, 3, 0.025735294117647058, ["mov     matchind, i", "add     matchind, 1", "mov     r13, [arglist+i*8]", "test    r13, r13", "jnz     short loc_DFDA"], ["mov~matchind,i", "add~matchind,0", "mov~r13,<TAG>", "test~r13,r13", "jnz~FOO"]], [1, 0, 9, 1, 0, 4, 1, 1, 4, 3, 0.03676470588235294, ["add     i, 1", "mov     r13, [arglist+i*8]", "test    r13, r13", "jz      short loc_E010"], ["add~i,0", "mov~r13,<TAG>", "test~r13,r13", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 5, 4, 0.016544117647058824, ["mov     matchind, i", "jmp     short loc_DF7C"], ["mov~matchind,i", "jmp~FOO"]], [1, 0, 9, 2, 1, 11, 1, 1, 5, 4, 0.016544117647058824, ["mov     rdx, [rsp+58h+valsize]; n", "mov     rsi, r12; s2", "mov     rdi, rdx", "imul    rdi, matchind", "add     rdi, [rsp+58h+vallist]; s1", "call    _memcmp", "test    eax, eax", "movzx   eax, [rsp+58h+ambiguous]", "mov     ecx, 1", "cmovnz  eax, ecx", "mov     [rsp+58h+ambiguous], al"], ["mov~rdx,[rsp+0]", "mov~rsi,r12", "mov~rdi,rdx", "imul~rdi,matchind", "add~rdi,[rsp+0]", "call~FOO", "test~eax,eax", "movzx~eax,[rsp+0]", "mov~ecx,0", "cmovnz~eax,ecx", "mov~[rsp+0],al"]], [0, 0, 9, 0, 1, 4, 0, 2, 3, 1, 0.08823529411764705, ["mov     rdi, r13; s", "call    _strlen", "cmp     rax, arglen", "jz      loc_E038"], ["mov~rdi,r13", "call~FOO", "cmp~rax,arglen", "jz~FOO"]], [0, 0, 9, 0, 1, 4, 0, 2, 4, 1, 0.09558823529411764, ["mov     rdi, r13; s", "call    _strlen", "cmp     rax, arglen", "jz      short loc_E038"], ["mov~rdi,r13", "call~FOO", "cmp~rax,arglen", "jz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 4, 5, 0.05514705882352941, ["cmp     matchind, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_DF50"], ["cmp~matchind,0", "jnz~FOO"]]], "func_feature": [6, 9, 20, 0, 18, 28, 1, 89, 0.04902, 0, 8], "succs": [[2, 15], [0, 9], [0, 6], [], [1, 3], [3], [3], [12], [11, 7], [10], [16, 12], [10, 6], [10, 6], [2], [2], [17, 5], [8, 5], [13, 14]], "fname": "argmatch", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 2, 0, 1, 4, 1, 1, 0, 0, 0.08333333333333333, ["lea     value, aAmbiguousArgum; \"ambiguous argument %s for %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax"], ["lea~value,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbx,rax"]], [2, 0, 4, 0, 0, 8, 0, 1, 0, 1, 0.0, ["cmp     problem, 0FFFFFFFFFFFFFFFFh", "push    r12", "mov     edx, 5; category", "push    rbp", "mov     r12, value", "push    rbx", "mov     rbp, context", "jz      short loc_E0A0"], ["cmp~problem,0", "push~r12", "mov~edx,0", "push~rbp", "mov~r12,value", "push~rbx", "mov~rbp,context", "jz~FOO"]], [2, 0, 1, 0, 2, 18, 4, 3, 2, -1, 0.25, ["mov     rsi, context; arg", "mov     edi, 1; n", "call    quote_n", "mov     rdx, value; arg", "mov     context, rax", "mov     esi, 8; s", "xor     edi, edi; n", "call    quotearg_n_style", "mov     r8, rbp", "mov     rdx, format; format", "mov     rcx, rax", "pop     format", "pop     rbp", "pop     value", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "jmp     _error"], ["mov~rsi,context", "mov~edi,0", "call~FOO", "mov~rdx,value", "mov~context,rax", "mov~esi,0", "xor~edi,edi", "call~FOO", "mov~r8,rbp", "mov~rdx,format", "mov~rcx,rax", "pop~format", "pop~rbp", "pop~value", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "jmp~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 1, 0, 0.08333333333333333, ["lea     value, aInvalidArgumen; \"invalid argument %s for %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax", "jmp     short loc_E066"], ["lea~value,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbx,rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []]], "func_feature": [4, 6, 7, 0, 5, 5, 0, 35, 0.08333, 2, 0], "succs": [[2], [0, 3], [4], [2], []], "fname": "argmatch_invalid", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[2, 0, 10, 1, 2, 21, 2, 3, 0, 0, 0.0, ["push    r15", "push    r14", "mov     r14, arglist", "push    r13", "push    r12", "xor     edi, edi; domainname", "push    rbp", "push    rbx", "mov     rbp, vallist", "lea     vallist, aValidArguments; \"Valid arguments are:\"", "mov     r12, valsize", "mov     edx, 5; category", "sub     rsp, 8", "mov     rbx, cs:stderr@@GLIBC_2_2_5", "call    _dcgettext", "mov     rdi, rax; s", "mov     rsi, rbx; stream", "call    _fputs_unlocked", "mov     r15, [arglist]", "test    r15, r15", "jz      loc_E198"], ["push~r15", "push~r14", "mov~r14,arglist", "push~r13", "push~r12", "xor~edi,edi", "push~rbp", "push~rbx", "mov~rbp,vallist", "lea~vallist,<TAG>", "mov~r12,valsize", "mov~edx,0", "sub~rsp,0", "mov~rbx,<TAG>", "call~FOO", "mov~rdi,rax", "mov~rsi,rbx", "call~FOO", "mov~r15,<TAG>", "test~r15,r15", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0.0, [], []], [2, 0, 1, 1, 0, 9, 0, 1, 0, 0, 0.08888888888888889, ["add     rsp, 8", "mov     esi, 0Ah; int", "pop     rbx", "pop     rbp", "pop     valsize", "pop     r13", "pop     arglist", "pop     r15", "jmp     ___overflow"], ["add~rsp,0", "mov~esi,0", "pop~rbx", "pop~rbp", "pop~valsize", "pop~r13", "pop~arglist", "pop~r15", "jmp~FOO"]], [2, 0, 9, 2, 2, 14, 2, 3, 0, 2, 0.1388888888888889, ["mov     rdi, r15; arg", "add     i, 1", "mov     last_val, rbp", "call    quote", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "lea     rdx, aS_0; \"\\n  - %s\"", "mov     rcx, rax", "mov     esi, 1", "xor     eax, eax", "add     rbp, valsize", "call    ___fprintf_chk", "mov     r15, [arglist+i*8]", "test    r15, r15", "jz      short loc_E198"], ["mov~rdi,r15", "add~i,0", "mov~last_val,rbp", "call~FOO", "mov~rdi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~esi,0", "xor~eax,eax", "add~rbp,valsize", "call~FOO", "mov~r15,<TAG>", "test~r15,r15", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 0, 3, 0.18888888888888888, ["test    i, i", "jz      short loc_E110"], ["test~i,i", "jz~FOO"]], [0, 0, 9, 0, 1, 6, 1, 2, 0, 3, 0.08888888888888889, ["mov     rdx, valsize; n", "mov     rsi, rbp; s2", "mov     rdi, last_val; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_E110"], ["mov~rdx,valsize", "mov~rsi,rbp", "mov~rdi,last_val", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 4, 0, 0, 0, 1, 0.23333333333333334, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_E1C8"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 0, 2, 0.044444444444444446, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 9, 0, 0, 3, 2, 1, 0, 4, 0.05555555555555556, ["xor     r13d, r13d", "xor     ebx, ebx", "jmp     short loc_E148"], ["xor~r13d,r13d", "xor~ebx,ebx", "jmp~FOO"]], [2, 0, 9, 2, 2, 13, 2, 3, 0, 3, 0.061111111111111116, ["mov     rdi, r15; arg", "add     i, 1", "add     rbp, valsize", "call    quote", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "lea     rdx, aLuBytesSCopied+19h; \", %s\"", "mov     rcx, rax", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "mov     r15, [arglist+i*8]", "test    r15, r15", "jnz     short loc_E148"], ["mov~rdi,r15", "add~i,0", "add~rbp,valsize", "call~FOO", "mov~rdi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~r15,<TAG>", "test~r15,r15", "jnz~FOO"]], [2, 0, 0, 1, 0, 11, 0, 0, 0, -1, 0.0, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah", "add     rsp, 8", "pop     rbx", "pop     rbp", "pop     valsize", "pop     r13", "pop     arglist", "pop     r15", "retn"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~valsize", "pop~r13", "pop~arglist", "pop~r15", "retn"]]], "func_feature": [7, 10, 14, 0, 11, 15, 1, 84, 0.08182, 4, 7], "succs": [[8, 6], [], [1], [4, 6], [3, 5], [9, 3], [10, 2], [6], [4], [4, 7], []], "fname": "argmatch_valid", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 13, 0, 1, 4, 0, 2, 0, 0, 0.05632411067193675, ["mov     rdi, r15; s", "call    _strlen", "cmp     rbp, rax", "jz      short loc_E2F0"], ["mov~rdi,r15", "call~FOO", "cmp~rbp,rax", "jz~FOO"]], [0, 0, 13, 0, 1, 6, 1, 2, 3, 4, 0.09189723320158102, ["mov     rdx, rbp; n", "mov     rsi, r12; s2", "mov     rdi, r15; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_E315"], ["mov~rdx,rbp", "mov~rsi,r12", "mov~rdi,r15", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 14, 2, 0, 5, 1, 1, 4, 4, 0.10869565217391304, ["add     rbx, 1", "add     r12, valsize_0", "mov     r14, [arglist+rbx*8+0]", "test    r14, r14", "jz      short loc_E2C0"], ["add~rbx,0", "add~r12,valsize_0", "mov~r14,[arglist+0]", "test~r14,r14", "jz~FOO"]], [0, 0, 14, 0, 1, 6, 1, 2, 3, 5, 0.0859683794466403, ["mov     rsi, [rsp+78h+arg]; s2", "mov     rdx, rbp; n", "mov     rdi, r14; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_E27A"], ["mov~rsi,[rsp+0]", "mov~rdx,rbp", "mov~rdi,r14", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 6, 5, 0.018774703557312252, ["mov     [rsp+78h+var_60], rbx", "jmp     short loc_E27A"], ["mov~[rsp+0],rbx", "jmp~FOO"]], [1, 0, 14, 2, 1, 11, 1, 1, 6, 5, 0.018774703557312252, ["imul    rax, r15", "mov     rdi, [rsp+78h+vallist]", "mov     rdx, r15; n", "mov     rsi, r12; s2", "add     rdi, rax; s1", "call    _memcmp", "test    eax, eax", "movzx   eax, [rsp+78h+var_61]", "mov     ecx, 1", "cmovnz  eax, ecx", "mov     [rsp+78h+var_61], al"], ["imul~rax,r15", "mov~rdi,[rsp+0]", "mov~rdx,r15", "mov~rsi,r12", "add~rdi,rax", "call~FOO", "test~eax,eax", "movzx~eax,[rsp+0]", "mov~ecx,0", "cmovnz~eax,ecx", "mov~[rsp+0],al"]], [2, 0, 13, 0, 0, 5, 1, 1, 2, 5, 0.042490118577075096, ["mov     [rsp+78h+var_61], 0", "xor     ebx, ebx", "mov     r14, 0FFFFFFFFFFFFFFFFh", "mov     r12, [rsp+78h+arg]", "jmp     short loc_E323"], ["mov~[rsp+0],0", "xor~ebx,ebx", "mov~r14,0", "mov~r12,[rsp+0]", "jmp~FOO"]], [0, 0, 22, 0, 0, 3, 1, 1, 1, 6, 0.037549407114624504, ["test    vallist_0, vallist_0", "mov     rbp, rax", "jz      loc_E2F8"], ["test~vallist_0,vallist_0", "mov~rbp,rax", "jz~FOO"]], [1, 0, 13, 0, 0, 1, 0, 0, 6, 4, 0.016798418972332016, ["mov     [rsp+78h+var_61], 1"], ["mov~[rsp+0],0"]], [1, 0, 13, 0, 0, 2, 0, 1, 5, 5, 0.04150197628458498, ["cmp     r14, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_E310"], ["cmp~r14,0", "jnz~FOO"]], [0, 1, 23, 1, 1, 19, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r13, arglist", "push    rbp", "push    rbx", "mov     rbx, vallist_0", "sub     rsp, 48h", "mov     [rsp+78h+context], context_0", "mov     context_0, arg_0; s", "mov     [rsp+78h+arg], arg_0", "mov     [rsp+78h+vallist], vallist_0", "mov     [rsp+78h+valsize], valsize_0", "mov     [rsp+78h+exit_fn], exit_fn_0", "call    _strlen", "mov     r15, [arglist+0]", "test    r15, r15", "jz      loc_E3C0"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r13,arglist", "push~rbp", "push~rbx", "mov~rbx,vallist_0", "sub~rsp,<STR>", "mov~[rsp+0],context_0", "mov~context_0,arg_0", "mov~[rsp+0],arg_0", "mov~[rsp+0],vallist_0", "mov~[rsp+0],valsize_0", "mov~[rsp+0],exit_fn_0", "call~FOO", "mov~r15,[arglist+0]", "test~r15,r15", "jz~FOO"]], [2, 0, 14, 0, 0, 8, 1, 1, 2, 6, 0.030632411067193673, ["mov     r14, 0FFFFFFFFFFFFFFFFh", "mov     r12, vallist_0", "mov     [rsp+78h+var_61], 0", "mov     [rsp+78h+var_60], r14", "xor     ebx, ebx", "mov     r14, r15", "mov     r15, [rsp+78h+valsize]", "jmp     short loc_E28B"], ["mov~r14,0", "mov~r12,vallist_0", "mov~[rsp+0],0", "mov~[rsp+0],r14", "xor~ebx,ebx", "mov~r14,r15", "mov~r15,[rsp+0]", "jmp~FOO"]], [1, 0, 13, 1, 0, 4, 1, 1, 4, 3, 0.10869565217391304, ["add     rbx, 1", "mov     r15, [arglist+rbx*8+0]", "test    r15, r15", "jz      short loc_E2C5"], ["add~rbx,0", "mov~r15,[arglist+0]", "test~r15,r15", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 0, 1, 6, 4, 0.016798418972332016, ["mov     r14, rbx", "jmp     short loc_E315"], ["mov~r14,rbx", "jmp~FOO"]], [0, 0, 14, 0, 1, 4, 0, 2, 4, 7, 0.06027667984189723, ["mov     rdi, r14; s", "call    _strlen", "cmp     rbp, rax", "jz      short loc_E2F0"], ["mov~rdi,r14", "call~FOO", "cmp~rbp,rax", "jz~FOO"]], [1, 0, 14, 0, 0, 3, 0, 1, 5, 6, 0.043478260869565216, ["mov     rax, [rsp+78h+var_60]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_E250"], ["mov~rax,[rsp+0]", "cmp~rax,0", "jnz~FOO"]], [3, 0, 1, 0, 5, 23, 4, 6, 2, -1, 0.005928853754940711, ["mov     rsi, [rsp+78h+context]; arg", "mov     edi, 1; n", "mov     r14, 0FFFFFFFFFFFFFFFFh", "call    quote_n", "mov     rdx, [rsp+78h+arg]; arg", "mov     rbp, rax", "mov     esi, 8; s", "xor     edi, edi; n", "call    quotearg_n_style", "mov     r8, rbp", "mov     rcx, rax", "mov     rdx, rbx; format", "xor     eax, eax", "xor     esi, esi; errnum", "xor     edi, edi; status", "call    _error", "mov     rdx, [rsp+78h+valsize]; valsize", "mov     rsi, [rsp+78h+vallist]; vallist", "mov     rdi, arglist; arglist", "call    argmatch_valid", "mov     rax, [rsp+78h+exit_fn]", "call    rax", "jmp     loc_E2DA"], ["mov~rsi,[rsp+0]", "mov~edi,0", "mov~r14,0", "call~FOO", "mov~rdx,[rsp+0]", "mov~rbp,rax", "mov~esi,0", "xor~edi,edi", "call~FOO", "mov~r8,rbp", "mov~rcx,rax", "mov~rdx,rbx", "xor~eax,eax", "xor~esi,esi", "xor~edi,edi", "call~FOO", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,arglist", "call~FOO", "mov~rax,[rsp+0]", "call~rax", "jmp~FOO"]], [1, 0, 2, 0, 1, 6, 1, 2, 1, 0, 0.005928853754940711, ["lea     rsi, aInvalidArgumen; \"invalid argument %s for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax", "jmp     short loc_E363"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rbx,rax", "jmp~FOO"]], [1, 0, 2, 0, 1, 5, 1, 1, 6, -1, 0.03359683794466403, ["lea     rsi, aAmbiguousArgum; \"ambiguous argument %s for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rbx,rax"]], [0, 0, 6, 0, 0, 1, 0, 0, 5, 3, 0.07312252964426877, ["mov     r14, [rsp+78h+var_60]"], ["mov~r14,[rsp+0]"]], [1, 0, 5, 0, 0, 2, 0, 1, 5, 2, 0.1442687747035573, ["cmp     [rsp+78h+var_61], 0", "jnz     loc_E34D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, 1, 0.04940711462450593, ["cmp     r14, 0FFFFFFFFFFFFFFFFh", "jz      loc_E3C0"], ["cmp~r14,0", "jz~FOO"]], [0, 1, 0, 1, 0, 9, 0, 0, 3, -1, 0.0, ["add     rsp, 48h", "mov     rax, r14", "pop     rbx", "pop     rbp", "pop     r12", "pop     arglist", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "mov~rax,r14", "pop~rbx", "pop~rbp", "pop~r12", "pop~arglist", "pop~r14", "pop~r15", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 5, -1, 0.017786561264822132, ["mov     r14, rbx", "jmp     short loc_E2DA"], ["mov~r14,rbx", "jmp~FOO"]]], "func_feature": [13, 15, 32, 1, 24, 35, 0, 135, 0.0462, 2, 7], "succs": [[9, 23], [0, 12], [19, 3], [2, 14], [2], [2], [1], [11, 6], [12], [8, 13], [17, 7], [3], [1, 20], [12], [23, 15], [4, 5], [22], [16], [16], [20], [18, 21], [17, 22], [], [22]], "fname": "__xargmatch_internal", "n_num": 24}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 3, 0, 1, 6, 1, 2, 0, 0, 0.25, ["mov     rdx, valsize; n", "mov     rsi, rbp; s2", "mov     rdi, value; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_E400"], ["mov~rdx,valsize", "mov~rsi,rbp", "mov~rdi,value", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 1, 2, 0.16666666666666666, ["mov     r12, valsize", "mov     r13, value", "mov     rbp, vallist", "lea     rbx, [arglist+8]", "jmp     short loc_E40F"], ["mov~r12,valsize", "mov~r13,value", "mov~rbp,vallist", "lea~rbx,[arglist+0]", "jmp~FOO"]], [1, 0, 3, 2, 0, 5, 1, 1, 3, 1, 0.0, ["mov     r14, [rbx]", "add     rbp, valsize", "add     rbx, 8", "test    r14, r14", "jz      short loc_E421"], ["mov~r14,<TAG>", "add~rbp,valsize", "add~rbx,0", "test~r14,r14", "jz~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 1, 0, 0.0, ["pop     rbx", "mov     rax, r14", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "retn"], ["pop~rbx", "mov~rax,r14", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "retn"]], [0, 0, 4, 0, 0, 8, 1, 1, 0, 1, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     r14, [arglist]", "test    r14, r14", "jz      short loc_E421"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~r14,<TAG>", "test~r14,r14", "jz~FOO"]]], "func_feature": [1, 3, 5, 0, 5, 7, 0, 31, 0.08333, 0, 2], "succs": [[2, 3], [0], [0, 3], [], [1, 3]], "fname": "argmatch_to_argument", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [2, 0, 3, 1, 1, 7, 2, 2, 0, 2, 0.0, ["sub     rsp, 8", "xor     esi, esi; locale", "call    _setlocale", "mov     rdx, rax", "mov     eax, 1", "test    p, p", "jz      short loc_E465"], ["sub~rsp,0", "xor~esi,esi", "call~FOO", "mov~rdx,rax", "mov~eax,0", "test~p,p", "jz~FOO"]], [2, 0, 2, 0, 0, 9, 2, 1, 1, 1, 0.16666666666666666, ["lea     rdi, aC_0; \"C\"", "mov     ecx, 2", "mov     rsi, p", "repe cmpsb", "setnbe  cl", "sbb     cl, 0", "xor     eax, eax", "test    cl, cl", "jnz     short loc_E470"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,p", "cmpsb~<TAG>,<TAG>", "setnbe~cl", "sbb~cl,0", "xor~eax,eax", "test~cl,cl", "jnz~FOO"]], [3, 0, 0, 1, 0, 10, 1, 0, 2, 0, 0.0, ["lea     rdi, aPosix; \"POSIX\"", "mov     ecx, 6", "mov     rsi, rdx", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "setnz   al", "add     rsp, 8", "retn"], ["lea~rdi,<TAG>", "mov~ecx,0", "mov~rsi,rdx", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "setnz~al", "add~rsp,0", "retn"]]], "func_feature": [1, 5, 3, 0, 4, 4, 1, 28, 0.04167, 2, 3], "succs": [[], [0, 2], [0, 3], []], "fname": "hard_locale", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[2, 0, 2, 1, 1, 5, 1, 2, 0, 0, 0.0, ["sub     rsp, 8", "mov     edi, 0Eh; item", "call    _nl_langinfo", "test    codeset, codeset", "jz      short loc_E4C0"], ["sub~rsp,0", "mov~edi,0", "call~FOO", "test~codeset,codeset", "jz~FOO"]], [1, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0.0, ["lea     codeset, aAscii; \"ASCII\"", "add     rsp, 8", "retn"], ["lea~codeset,<TAG>", "add~rsp,0", "retn"]], [2, 0, 0, 1, 0, 5, 0, 0, 0, -1, 0.0, ["cmp     byte ptr [codeset], 0", "lea     rdx, aAscii; \"ASCII\"", "cmovz   codeset, rdx", "add     rsp, 8", "retn"], ["cmp~<TAG>,0", "lea~rdx,<TAG>", "cmovz~codeset,rdx", "add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 2, 1, 13, 0.0, 1, 3], "succs": [[1, 2], [], []], "fname": "locale_charset", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 14, 0, 0, 4, 1, 1, 0, 0, 0.031234278047962433, ["mov     retcount, [rbp+saved_errno]", "mov     ebx, [rax]", "test    ebx, ebx", "jnz     short loc_EC20"], ["mov~retcount,[rbp+0]", "mov~ebx,<TAG>", "test~ebx,ebx", "jnz~FOO"]], [0, 0, 250, 0, 0, 2, 1, 0, 36, 27, 0.03759992173961652, ["test    eax, eax", "jns     loc_EABE"], ["test~eax,eax", "jns~FOO"]], [2, 0, 250, 1, 0, 2, 0, 0, 16, 15, 0.0, ["mov     byte ptr [rbx], 2Bh ; '+'", "add     rbx, 1"], ["mov~<TAG>,0", "add~rbx,0"]], [1, 0, 250, 0, 0, 2, 1, 1, 15, 15, 0.21506232880541115, ["test    al, 4", "jz      short loc_E806"], ["test~al,0", "jz~FOO"]], [0, 0, 250, 0, 0, 4, 1, 1, 17, 28, 0.04318994913075074, ["cmp     result_0, [rbp+result]", "setz    dl", "test    result_0, result_0", "jz      loc_F270"], ["cmp~result_0,[rbp+0]", "setz~dl", "test~result_0,result_0", "jz~FOO"]], [0, 0, 250, 1, 0, 3, 0, 0, 16, 29, 0.016190116831572475, ["add     allocated, allocated", "cmp     allocated, rax", "jnb     loc_EFF6"], ["add~allocated,allocated", "cmp~allocated,rax", "jnb~FOO"]], [0, 0, 250, 0, 0, 2, 0, 1, 17, 29, 0.003270166023813517, ["mov     r12, memory_size", "jmp     loc_EFF6"], ["mov~r12,memory_size", "jmp~FOO"]], [1, 0, 250, 0, 0, 1, 0, 0, 16, 29, 0.016162166694616804, ["mov     r12d, 0Ch"], ["mov~r12d,0"]], [0, 0, 250, 0, 0, 1, 0, 0, 33, 32, 0.00011180054782268433, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 250, 0, 0, 2, 0, 1, 32, 30, 0.02505718132185513, ["cmp     eax, 2", "jnz     loc_EB97"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 250, 0, 0, 2, 1, 1, 16, 14, 0.21676728715970708, ["test    al, 8", "jz      short loc_E811"], ["test~al,0", "jz~FOO"]], [1, 0, 3, 0, 0, 4, 1, 1, 43, -1, 0.0006288780815025994, ["mov     rax, [rbp+saved_errno]", "xor     r15d, r15d", "mov     dword ptr [rax], 4Bh ; 'K'", "jmp     loc_E6AF"], ["mov~rax,[rbp+0]", "xor~r15d,r15d", "mov~<TAG>,0", "jmp~FOO"]], [1, 0, 5, 1, 0, 5, 0, 1, 42, -1, 0.006023254513947118, ["mov     rax, [rbp+var_410]", "mov     rdi, [rbp+a.arg]; ptr", "add     rax, 10h", "cmp     rdi, rax", "jz      short loc_F37E"], ["mov~rax,[rbp+0]", "mov~rdi,[rbp+0]", "add~rax,0", "cmp~rdi,rax", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 43, -1, 0.0, ["call    _free"], ["call~FOO"]], [0, 0, 250, 0, 0, 2, 1, 1, 18, 27, 0.018076751076080273, ["test    dl, dl", "jnz     loc_F270"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 250, 0, 0, 2, 1, 1, 34, 36, 0.0026133378053552463, ["test    dl, dl", "jz      loc_F3A0"], ["test~dl,dl", "jz~FOO"]], [0, 0, 250, 0, 0, 2, 1, 1, 33, 36, 0.023561965453630724, ["test    length, length", "jz      loc_F3A0"], ["test~length,length", "jz~FOO"]], [1, 1, 250, 1, 0, 2, 0, 0, 17, 14, 0.0, ["mov     byte ptr [rbx], 20h ; ' '", "add     rbx, 1"], ["mov~<TAG>,<STR>", "add~rbx,0"]], [0, 0, 250, 0, 1, 7, 1, 2, 32, 37, 0.02381817504239104, ["mov     rdi, r12; size", "mov     byte ptr [rbp+saved_errno], dl", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "movzx   edx, byte ptr [rbp+saved_errno]", "jz      loc_E635"], ["mov~rdi,r12", "mov~[yte ptr [rbp+0],dl", "call~FOO", "test~rax,rax", "mov~rcx,rax", "movzx~edx,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 250, 0, 1, 5, 1, 2, 33, 36, 0.034010658318892426, ["mov     rsi, r12; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      loc_E635"], ["mov~rsi,r12", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [0, 0, 250, 0, 0, 2, 1, 1, 32, 37, 0.03363566064807051, ["test    dl, dl", "jnz     loc_F1E0"], ["test~dl,dl", "jnz~FOO"]], [1, 0, 250, 1, 0, 3, 0, 0, 33, 31, 0.005726983062217032, ["sub     rsp, 8", "push    [rbp+var_3F0]", "push    r9"], ["sub~rsp,0", "push~[rbp+0]", "push~r9"]], [1, 0, 250, 0, 0, 2, 0, 1, 32, 30, 0.09929658821994916, ["cmp     eax, 2", "jz      loc_EE08"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 250, 0, 0, 11, 0, 1, 7, 23, 0.03764883447928895, ["mov     r13, [rbp+d.dir]", "lea     rax, [rbp+count]", "mov     r15, [rbp+result]", "mov     [rbp+i], 0", "mov     [rbp+var_3F0], rax", "mov     rax, cp_0", "mov     cp_0, r8", "mov     rcx, [dp+0]", "mov     r8, cp_0", "cmp     rcx, r8", "jz      loc_EF81"], ["mov~r13,[rbp+0]", "lea~rax,[rbp+0]", "mov~r15,[rbp+0]", "mov~[rbp+0],0", "mov~[rbp+0],rax", "mov~rax,cp_0", "mov~cp_0,r8", "mov~rcx,[dp+0]", "mov~r8,cp_0", "cmp~rcx,r8", "jz~FOO"]], [1, 0, 252, 0, 0, 3, 1, 1, 6, 24, 0.03091285147297222, ["xor     r12d, r12d", "cmp     [rbp+result], 0", "jz      short loc_E5DC"], ["xor~r12d,r12d", "cmp~[rbp+0],0", "jz~FOO"]], [0, 0, 251, 0, 0, 2, 0, 0, 7, 24, 0.0, ["mov     rax, [rbp+lengthp]", "mov     r12, [rax]"], ["mov~rax,[rbp+0]", "mov~r12,<TAG>"]], [0, 1, 7, 1, 0, 5, 0, 1, 2, -1, 0.00015372575325619097, ["mov     rax, [rbp+var_408]", "mov     rdi, [rbp+d.dir]; ptr", "add     rax, 20h", "cmp     rdi, rax", "jz      short loc_F41C"], ["mov~rax,[rbp+0]", "mov~rdi,[rbp+0]", "add~rax,<STR>", "cmp~rdi,rax", "jz~FOO"]], [0, 0, 266, 0, 1, 5, 1, 2, 1, 29, 0.0036754430096707473, ["mov     rsi, r14; a", "mov     rdi, args; args", "call    printf_fetchargs", "test    eax, eax", "js      loc_F400"], ["mov~rsi,r14", "mov~rdi,args", "call~FOO", "test~eax,eax", "js~FOO"]], [5, 0, 250, 1, 0, 11, 0, 1, 29, 33, 0.3276594555313321, ["mov     rax, [rbp+saved_errno]", "mov     rbx, allocated", "mov     r10d, 7FFFFFFFh", "sub     rbx, length", "mov     [rbp+count], 0FFFFFFFFh", "cmp     maxlen_0, 7FFFFFFFh", "mov     dword ptr [rax], 0", "mov     eax, dword ptr [rbp+cp]", "cmovbe  r10, maxlen_0", "cmp     eax, 11h; switch 18 cases", "ja      loc_F3F6; jumptable 000000000000EA2B default case"], ["mov~rax,[rbp+0]", "mov~rbx,allocated", "mov~r10d,0", "sub~rbx,length", "mov~[rbp+0],0", "cmp~maxlen_0,0", "mov~<TAG>,0", "mov~eax,[word ptr [rbp+0]", "cmovbe~r10,maxlen_0", "cmp~eax,0", "ja~FOO"]], [0, 0, 250, 0, 0, 4, 0, 0, 40, 34, 0.0424283078987087, ["cmp     rax, rdx", "cmovb   rax, rdx", "cmp     allocated, rax", "jnb     loc_E9E0"], ["cmp~rax,rdx", "cmovb~rax,rdx", "cmp~allocated,rax", "jnb~FOO"]], [0, 0, 250, 0, 0, 2, 0, 1, 46, 34, 0.01438034546369277, ["mov     result_0, memory", "jmp     loc_E9E0"], ["mov~result_0,memory", "jmp~FOO"]], [0, 0, 250, 0, 1, 6, 0, 2, 47, 34, 0.001725920957012689, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_E9E0"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [1, 0, 250, 0, 0, 2, 0, 1, 36, 34, 0.017245234501649057, ["mov     byte ptr [rdi+1], 0", "jmp     loc_E9E0"], ["mov~[yte ptr [rdi+0],0", "jmp~FOO"]], [0, 0, 250, 0, 0, 2, 0, 1, 46, 34, 0.01630191737939516, ["mov     result_0, rcx", "jmp     loc_E9E0"], ["mov~result_0,rcx", "jmp~FOO"]], [1, 0, 250, 0, 0, 2, 0, 1, 40, 34, 0.012018558890938566, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "jz      loc_E9E0"], ["cmp~allocated,0", "jz~FOO"]], [1, 0, 250, 0, 1, 7, 0, 1, 28, 34, 0.2463385320588071, ["mov     byte ptr [result_0+length], 0", "call    ___errno_location", "mov     [rbp+saved_errno], rax", "mov     eax, [rax]", "mov     [rbp+fbp], fbp_0", "mov     [rbp+orig_errno], eax", "nop     word ptr [rax+rax+00000000h]"], ["mov~<TAG>,0", "call~FOO", "mov~[rbp+0],rax", "mov~eax,<TAG>", "mov~[rbp+0],fbp_0", "mov~[rbp+0],eax", "nop~[ord ptr [rax+0]"]], [2, 0, 250, 1, 0, 2, 0, 0, 18, 13, 0.0, ["mov     byte ptr [rbx], 23h ; '#'", "add     rbx, 1"], ["mov~<TAG>,0", "add~rbx,0"]], [1, 0, 250, 0, 0, 2, 1, 1, 17, 13, 0.21847224551400302, ["test    al, 10h", "jz      short loc_E81C"], ["test~al,0", "jz~FOO"]], [4, 0, 13, 0, 0, 7, 1, 0, 38, -1, 0.0, ["movzx   eax, byte ptr [dp+48h]", "mov     ebx, 16h", "and     eax, 0FFFFFFEFh", "cmp     al, 63h ; 'c'", "mov     eax, 54h ; 'T'", "cmovz   ebx, eax", "nop     dword ptr [rax+00000000h]"], ["movzx~eax,[yte ptr [dp+0]", "mov~ebx,0", "and~eax,0", "cmp~al,0", "mov~eax,0", "cmovz~ebx,eax", "nop~[word ptr [rax+0]"]], [0, 0, 250, 0, 0, 2, 0, 0, 34, 30, 0.010607076974677176, ["mov     eax, [rbp+prefixes+4]", "push    rax"], ["mov~eax,[rbp+0]", "push~rax"]], [1, 0, 250, 1, 0, 4, 0, 1, 33, 31, 0.0005478226843311537, ["sub     rsp, 8", "push    [rbp+var_3F0]", "push    arg", "jmp     loc_EE14"], ["sub~rsp,0", "push~[rbp+0]", "push~arg", "jmp~FOO"]], [1, 0, 250, 0, 0, 2, 1, 1, 18, 12, 0.22017720386829895, ["test    al, 40h", "jz      short loc_E827"], ["test~al,0", "jz~FOO"]], [0, 0, 250, 0, 1, 5, 1, 2, 19, 26, 0.01874755436301638, ["mov     rsi, r12; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      loc_F11B"], ["mov~rsi,r12", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [2, 0, 250, 1, 0, 2, 0, 0, 19, 12, 0.0, ["mov     byte ptr [rbx], 49h ; 'I'", "add     rbx, 1"], ["mov~<TAG>,0", "add~rbx,0"]], [0, 0, 250, 2, 0, 5, 0, 0, 8, 24, 0.0607915478785846, ["sub     rcx, cp_0", "mov     rax, length", "add     rax, n_0", "mov     r14, rax", "jnb     loc_E708"], ["sub~rcx,cp_0", "mov~rax,length", "add~rax,n_0", "mov~r14,rax", "jnb~FOO"]], [1, 1, 250, 2, 0, 6, 0, 1, 15, 23, 0.327924981832411, ["mov     r8, [dp+8]", "add     dp, 58h", "mov     rcx, [dp+0]", "add     [rbp+i], 1", "cmp     rcx, cp_0", "jnz     loc_E619"], ["mov~r8,[dp+0]", "add~dp,<STR>", "mov~rcx,[dp+0]", "add~[rbp+0],0", "cmp~rcx,cp_0", "jnz~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 38, -1, 0.026287103806808654, ["cmp     result_0, [rbp+result]", "jz      short loc_EC32"], ["cmp~result_0,[rbp+0]", "jz~FOO"]], [0, 0, 250, 0, 0, 2, 0, 1, 20, 25, 0.018950192855944993, ["mov     result_0, memory", "jmp     loc_EF5F"], ["mov~result_0,memory", "jmp~FOO"]], [0, 1, 250, 0, 0, 2, 1, 1, 19, 11, 0.22188216222259488, ["test    al, 20h", "jz      short loc_E832"], ["test~al,<STR>", "jz~FOO"]], [0, 0, 250, 1, 0, 4, 0, 1, 30, 32, 0.3278131812845883, ["lea     rsi, off_12D20", "movsxd  rax, dword ptr [rsi+rax*4]", "add     rax, rsi", "jmp     rax; switch jump"], ["lea~rsi,<TAG>", "movsxd~rax,<TAG>", "add~rax,rsi", "jmp~rax"]], [0, 0, 11, 0, 0, 2, 1, 1, 39, -1, 0.0026832131477444237, ["test    result_0, result_0", "jnz     loc_F3DC"], ["test~result_0,result_0", "jnz~FOO"]], [2, 0, 250, 1, 0, 2, 0, 0, 20, 11, 0.0, ["mov     byte ptr [rbx], 30h ; '0'", "add     rbx, 1"], ["mov~<TAG>,0", "add~rbx,0"]], [1, 0, 250, 0, 0, 2, 0, 1, 9, 24, 0.008706467661691543, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "jz      loc_F100"], ["cmp~allocated,0", "jz~FOO"]], [1, 0, 250, 1, 0, 7, 1, 0, 39, 35, 0.056221700486332384, ["lea     rsi, [allocated+allocated]", "lea     edx, [rcx+2]", "test    allocated, allocated", "mov     rax, 0FFFFFFFFFFFFFFFFh", "cmovns  rax, rsi", "add     rdx, length", "jb      loc_F5B8"], ["lea~rsi,<TAG>", "lea~edx,[rcx+0]", "test~allocated,allocated", "mov~rax,0", "cmovns~rax,rsi", "add~rdx,length", "jb~FOO"]], [1, 0, 5, 1, 0, 5, 0, 1, 3, -1, 0.0002375761641232042, ["mov     rax, [rbp+var_410]", "mov     rdi, [rbp+a.arg]; ptr", "add     rax, 10h", "cmp     rdi, rax", "jz      short loc_F438"], ["mov~rax,[rbp+0]", "mov~rdi,[rbp+0]", "add~rax,0", "cmp~rdi,rax", "jz~FOO"]], [0, 0, 6, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    _free"], ["call~FOO"]], [0, 0, 250, 0, 0, 2, 1, 1, 30, 40, 0.018139638884230532, ["test    rdx, rdx", "jnz     loc_E635"], ["test~rdx,rdx", "jnz~FOO"]], [1, 0, 250, 0, 0, 2, 0, 1, 29, 40, 0.020173011347755603, ["cmp     rax, 0Ch", "ja      loc_F1B0"], ["cmp~rax,0", "ja~FOO"]], [0, 0, 250, 0, 0, 1, 0, 0, 29, 1, 0.011012353960534406, ["jns     loc_F1B0"], ["jns~FOO"]], [0, 0, 250, 0, 0, 1, 0, 0, 31, 41, 0.00020962602716753312, ["nop     word ptr [memory_size+memory_size+00h]"], ["nop~[ord ptr [memory_size+0]"]], [0, 0, 250, 1, 0, 3, 0, 0, 30, 39, 0.018356252445636982, ["add     allocated, allocated", "cmp     allocated, rax", "jnb     loc_E984"], ["add~allocated,allocated", "cmp~allocated,rax", "jnb~FOO"]], [0, 0, 250, 0, 0, 1, 0, 1, 29, 40, 0.01809072614455811, ["js      loc_E635"], ["js~FOO"]], [2, 0, 250, 1, 0, 3, 0, 1, 25, 8, 0.0017119458885348539, ["mov     byte ptr [rbx], 4Ch ; 'L'", "add     rbx, 1", "jmp     loc_E8E4"], ["mov~<TAG>,0", "add~rbx,0", "jmp~FOO"]], [1, 0, 250, 0, 0, 2, 1, 1, 24, 9, 0.007826038347587903, ["test    ah, 10h", "jnz     loc_F230"], ["test~ah,0", "jnz~FOO"]], [0, 0, 13, 0, 1, 6, 0, 2, 19, -1, 9.083794510593101e-05, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_F4AC"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [0, 0, 15, 0, 0, 2, 1, 1, 18, -1, 0.0028928391749119572, ["test    r13b, r13b", "jz      short loc_F5B0"], ["test~r13b,r13b", "jz~FOO"]], [0, 0, 13, 0, 1, 2, 0, 1, 10, -1, 0.02331274339910932, ["call    ___errno_location", "mov     [rbp+saved_errno], rax"], ["call~FOO", "mov~[rbp+0],rax"]], [1, 0, 250, 0, 0, 2, 0, 1, 13, 26, 0.003200290681424339, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "jnz     loc_E635"], ["cmp~allocated,0", "jnz~FOO"]], [0, 0, 250, 0, 0, 1, 0, 1, 11, 28, 0.014932826504183216, ["js      loc_E635"], ["js~FOO"]], [1, 0, 250, 0, 0, 2, 0, 1, 12, 27, 0.010496673933702292, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      loc_E635"], ["cmp~memory_size,0", "jz~FOO"]], [0, 0, 250, 0, 1, 11, 1, 2, 14, 25, 0.022898615536549462, ["mov     rdi, r12; size", "mov     [rbp+prefix_count], cp_0", "mov     byte ptr [rbp+cp], dl", "mov     [rbp+saved_errno], n_0", "call    _malloc", "test    rax, rax", "mov     r9, rax", "mov     rcx, [rbp+saved_errno]", "movzx   edx, byte ptr [rbp+cp]", "mov     r8, [rbp+prefix_count]", "jz      loc_E635"], ["mov~rdi,r12", "mov~[rbp+0],cp_0", "mov~[yte ptr [rbp+0],dl", "mov~[rbp+0],n_0", "call~FOO", "test~rax,rax", "mov~r9,rax", "mov~rcx,[rbp+0]", "movzx~edx,[yte ptr [rbp+0]", "mov~r8,[rbp+0]", "jz~FOO"]], [1, 0, 250, 0, 0, 2, 0, 1, 31, 39, 0.018209514226619712, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      loc_E635"], ["cmp~memory_size,0", "jz~FOO"]], [0, 0, 250, 0, 1, 7, 1, 2, 18, 27, 0.023520040248197215, ["mov     rdi, r12; size", "mov     byte ptr [rbp+saved_errno], dl", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "movzx   edx, byte ptr [rbp+saved_errno]", "jz      loc_E635"], ["mov~rdi,r12", "mov~[yte ptr [rbp+0],dl", "call~FOO", "test~rax,rax", "mov~rcx,rax", "movzx~edx,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 250, 0, 0, 1, 0, 1, 15, 30, 0.0159245905304936, ["js      loc_E635"], ["js~FOO"]], [1, 0, 250, 0, 0, 2, 0, 1, 16, 30, 0.0029976521884957238, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      loc_E635"], ["cmp~memory_size,0", "jz~FOO"]], [0, 0, 25, 0, 1, 5, 1, 2, 17, -1, 0.003947956844988541, ["mov     rsi, r12; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      loc_E635"], ["mov~rsi,r12", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [0, 0, 28, 0, 1, 5, 1, 2, 16, -1, 0.013073676561015149, ["mov     rdi, r12; size", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "jz      loc_E635"], ["mov~rdi,r12", "call~FOO", "test~rax,rax", "mov~rcx,rax", "jz~FOO"]], [0, 0, 37, 0, 0, 2, 1, 1, 12, -1, 0.008552741908435352, ["test    allocated, allocated", "jz      loc_E635"], ["test~allocated,allocated", "jz~FOO"]], [0, 0, 36, 0, 0, 1, 0, 1, 13, -1, 0.004458046844429538, ["js      loc_E635"], ["js~FOO"]], [0, 0, 35, 0, 0, 2, 1, 1, 14, -1, 0.0069735591704399354, ["test    rax, rax", "jnz     loc_E635"], ["test~rax,rax", "jnz~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 15, -1, 0.003982894516183129, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      loc_E635"], ["cmp~memory_size,0", "jz~FOO"]], [0, 0, 38, 0, 0, 1, 0, 1, 13, -1, 0.017860137514673823, ["js      loc_E635"], ["js~FOO"]], [0, 0, 250, 0, 0, 2, 1, 1, 28, 2, 0.017007658337525853, ["test    allocated, allocated", "jz      loc_E635"], ["test~allocated,allocated", "jz~FOO"]], [0, 0, 14, 0, 0, 1, 0, 1, 30, 0, 9.782547934484879e-05, ["jmp     loc_E635"], ["jmp~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 39, -1, 0.018656716417910446, ["mov     rax, [rbp+buf_malloced]", "test    rax, rax", "jz      short loc_EC46"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 10, 0, 1, 3, 0, 2, 40, -1, 0.0, ["mov     rdi, result_0; ptr", "call    _free", "jmp     loc_EC32"], ["mov~rdi,result_0", "call~FOO", "jmp~FOO"]], [0, 0, 250, 0, 0, 4, 0, 1, 20, 10, 0.2235871205768908, ["mov     rsi, [dp+18h]; src", "mov     rdx, [dp+20h]", "cmp     rsi, rdx", "jz      short loc_E86F"], ["mov~rsi,[dp+0]", "mov~rdx,[dp+0]", "cmp~rsi,rdx", "jz~FOO"]], [2, 0, 250, 0, 0, 3, 0, 1, 24, 6, 0.2282128682430544, ["mov     edx, 1", "mov     dword ptr [rbp+prefix_count], 0", "jmp     loc_E925"], ["mov~edx,0", "mov~[word ptr [rbp+0],0", "jmp~FOO"]], [2, 0, 250, 0, 0, 6, 0, 1, 23, 7, 0.23296439152551848, ["movzx   eax, byte ptr [dp+48h]", "mov     byte ptr [fbp_0+1], 0", "mov     [fbp_0], al", "mov     rax, [dp+28h]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      loc_F030"], ["movzx~eax,[yte ptr [dp+0]", "mov~[yte ptr [fbp_0+0],0", "mov~<TAG>,al", "mov~rax,[dp+0]", "cmp~rax,0", "jz~FOO"]], [0, 0, 8, 0, 1, 2, 0, 1, 40, -1, 0.0, ["mov     rdi, rax; ptr", "call    _free"], ["mov~rdi,rax", "call~FOO"]], [0, 0, 250, 0, 0, 3, 0, 1, 15, 24, 0.002379255408351501, ["mov     [rax], r14b; jumptable 000000000000EFD0 case 0", "mov     rbx, length", "jmp     loc_EF64"], ["mov~<TAG>,r14b", "mov~rbx,length", "jmp~FOO"]], [0, 0, 250, 1, 0, 5, 0, 1, 14, 25, 0.01654648107775728, ["lea     rdi, off_12D68", "mov     rax, [rax+10h]", "movsxd  rdx, dword ptr [rdi+rdx*4]", "add     rdx, rdi", "jmp     rdx; switch jump"], ["lea~rdi,<TAG>", "mov~rax,[rax+0]", "movsxd~rdx,<TAG>", "add~rdx,rdi", "jmp~rdx"]], [0, 0, 12, 0, 0, 2, 0, 1, 11, -1, 0.030845305308662682, ["cmp     result_0, [rbp+result]", "jz      short loc_E653"], ["cmp~result_0,[rbp+0]", "jz~FOO"]], [0, 0, 250, 0, 0, 2, 1, 1, 41, 39, 0.0349167085918721, ["test    allocated, allocated", "js      out_of_memory"], ["test~allocated,allocated", "js~FOO"]], [1, 0, 250, 0, 0, 2, 0, 1, 43, 39, 0.002795013695567108, ["cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 250, 0, 1, 5, 1, 2, 45, 35, 0.013800380121862596, ["mov     rsi, r12; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      out_of_memory"], ["mov~rsi,r12", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [0, 0, 250, 0, 1, 5, 1, 2, 44, 36, 0.018733579294538543, ["mov     rdi, r12; size", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "jz      out_of_memory"], ["mov~rdi,r12", "call~FOO", "test~rax,rax", "mov~rcx,rax", "jz~FOO"]], [0, 0, 13, 0, 0, 1, 0, 1, 41, -1, 0.0043252836938901, ["jmp     out_of_memory"], ["jmp~FOO"]], [0, 0, 250, 0, 0, 4, 1, 1, 13, 26, 0.03335709094974565, ["cmp     result_0, [rbp+result]", "setz    dl", "test    result_0, result_0", "jz      loc_F080"], ["cmp~result_0,[rbp+0]", "setz~dl", "test~result_0,result_0", "jz~FOO"]], [0, 0, 250, 0, 0, 2, 1, 1, 14, 25, 0.02410419811057074, ["test    dl, dl", "jnz     loc_F080"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 250, 0, 0, 1, 0, 0, 14, 26, 0.00013742150669871617, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 11, 0, 0, 2, 1, 1, 12, -1, 0.002795013695567108, ["test    result_0, result_0", "jnz     loc_F130"], ["test~result_0,result_0", "jnz~FOO"]], [0, 0, 6, 0, 1, 1, 0, 1, 41, -1, 0.0, ["call    _free"], ["call~FOO"]], [0, 1, 7, 1, 0, 5, 0, 1, 40, -1, 0.013430040807199955, ["mov     rax, [rbp+var_408]", "mov     rdi, [rbp+d.dir]; ptr", "add     rax, 20h", "cmp     rdi, rax", "jz      short loc_EC62"], ["mov~rax,[rbp+0]", "mov~rdi,[rbp+0]", "add~rax,<STR>", "cmp~rdi,rax", "jz~FOO"]], [1, 0, 250, 0, 0, 2, 0, 1, 38, 36, 0.08203365196489462, ["cmp     rbx, 7FFFFFFEh", "ja      overflow"], ["cmp~rbx,0", "ja~FOO"]], [2, 0, 250, 2, 0, 8, 0, 1, 31, 31, 0.03320464624443321, ["mov     rax, [dp+50h]; jumptable 000000000000EA2B cases 7-10,15-17", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "mov     r9, [rax+10h]", "mov     eax, dword ptr [rbp+prefix_count]", "cmp     eax, 1", "jz      loc_EF18"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "mov~r9,[rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [2, 1, 250, 1, 1, 11, 1, 2, 33, 29, 0.039520329066279156, ["mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "add     rsp, 20h", "mov     r10, [rbp+maxlen]", "jmp     loc_EA96"], ["mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "add~rsp,<STR>", "mov~r10,[rbp+0]", "jmp~FOO"]], [2, 0, 250, 2, 0, 5, 0, 1, 32, 30, 0.024580980863472872, ["sub     rsp, 8", "push    [rbp+var_3F0]", "sub     rsp, 10h", "fstp    [rsp+450h+var_450]", "jmp     loc_EE1B"], ["sub~rsp,0", "push~[rbp+0]", "sub~rsp,0", "fstp~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 250, 1, 0, 3, 0, 0, 12, 27, 0.01519835280526211, ["add     allocated, allocated", "cmp     allocated, rax", "jnb     loc_E726"], ["add~allocated,allocated", "cmp~allocated,rax", "jnb~FOO"]], [0, 0, 250, 0, 0, 3, 0, 1, 15, 24, 0.002379255408351501, ["mov     [rax], r14d; jumptable 000000000000EFD0 case 2", "mov     rbx, length", "jmp     loc_EF64"], ["mov~<TAG>,r14d", "mov~rbx,length", "jmp~FOO"]], [1, 0, 250, 0, 0, 2, 0, 1, 32, 31, 0.00704622952652466, ["cmp     eax, 2", "jz      loc_EF00"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 31, 0, 0, 2, 1, 1, 16, -1, 0.006540332047627034, ["test    r13b, r13b", "jnz     loc_F52C"], ["test~r13b,r13b", "jnz~FOO"]], [0, 0, 32, 0, 0, 4, 1, 1, 15, -1, 0.02472189613729107, ["cmp     result_0, [rbp+result]", "setz    r13b", "test    result_0, result_0", "jz      loc_F52C"], ["cmp~result_0,[rbp+0]", "setz~r13b", "test~result_0,result_0", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 12, -1, 0.02316367600201241, ["mov     rax, [rbp+buf_malloced]", "test    rax, rax", "jz      short out_of_memory_1"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 10, 0, 1, 3, 0, 2, 13, -1, 0.0006055863007062068, ["mov     rdi, result_0; ptr", "call    _free", "jmp     loc_E653"], ["mov~rdi,result_0", "call~FOO", "jmp~FOO"]], [1, 0, 250, 0, 0, 2, 0, 1, 11, 28, 0.02609797454674199, ["cmp     rax, 0Ch", "ja      loc_F05A"], ["cmp~rax,0", "ja~FOO"]], [2, 0, 250, 2, 0, 8, 0, 1, 31, 31, 0.025073951404028582, ["mov     rax, [dp+50h]; jumptable 000000000000EA2B case 4", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movzx   r9d, word ptr [rax+10h]", "mov     eax, dword ptr [rbp+prefix_count]", "cmp     eax, 1", "jnz     loc_EB8E"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movzx~r9d,[ord ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jnz~FOO"]], [2, 0, 250, 2, 0, 8, 0, 1, 31, 31, 0.025073951404028582, ["mov     rax, [dp+50h]; jumptable 000000000000EA2B case 2", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movzx   r9d, byte ptr [rax+10h]", "mov     eax, dword ptr [rbp+prefix_count]", "cmp     eax, 1", "jnz     loc_EB8E"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movzx~r9d,[yte ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jnz~FOO"]], [2, 0, 250, 2, 0, 8, 0, 1, 31, 31, 0.025073951404028582, ["mov     rax, [dp+50h]; jumptable 000000000000EA2B case 1", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movsx   r9d, byte ptr [rax+10h]", "mov     eax, dword ptr [rbp+prefix_count]", "cmp     eax, 1", "jnz     loc_EB8E"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movsx~r9d,[yte ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jnz~FOO"]], [2, 0, 250, 2, 0, 8, 0, 1, 31, 31, 0.04473396127974364, ["mov     rax, [dp+50h]; jumptable 000000000000EA2B cases 5,6,13,14", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "mov     r9d, [rax+10h]", "mov     eax, dword ptr [rbp+prefix_count]", "cmp     eax, 1", "jz      loc_EDC0"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "mov~r9d,[rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 8, 0, 1, 2, 0, 1, 13, -1, 0.0, ["mov     rdi, rax; ptr", "call    _free"], ["mov~rdi,rax", "call~FOO"]], [1, 0, 250, 1, 0, 2, 0, 0, 33, 30, 0.004723573145508413, ["sub     rsp, 8", "push    [rbp+var_3F0]"], ["sub~rsp,0", "push~[rbp+0]"]], [1, 0, 12, 0, 0, 3, 0, 1, 12, -1, 0.027412096819274416, ["cmp     result_0, [rbp+result]", "mov     byte ptr [result_0+length], 0", "jz      short loc_F4D1"], ["cmp~result_0,[rbp+0]", "mov~<TAG>,0", "jz~FOO"]], [0, 0, 42, 0, 0, 2, 0, 0, 11, -1, 0.05729778075912572, ["cmp     allocated, rbx", "jnb     short loc_F4AC"], ["cmp~allocated,rbx", "jnb~FOO"]], [2, 0, 38, 0, 0, 3, 0, 1, 11, -1, 0.024358544356867348, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "mov     eax, 1", "jz      loc_F4AC"], ["cmp~allocated,0", "mov~eax,0", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 0, 1, 18, -1, 0.001250768628766281, ["mov     result_0, rcx", "jmp     loc_F4AC"], ["mov~result_0,rcx", "jmp~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 18, -1, 0.001152943149421432, ["mov     result_0, memory"], ["mov~result_0,memory"]], [0, 0, 250, 0, 0, 3, 0, 1, 15, 24, 0.002379255408351501, ["mov     [rax], r14w; jumptable 000000000000EFD0 case 1", "mov     rbx, length", "jmp     loc_EF64"], ["mov~<TAG>,r14w", "mov~rbx,length", "jmp~FOO"]], [0, 0, 250, 2, 1, 10, 0, 1, 21, 10, 0.0, ["mov     rcx, rdx", "mov     rdi, fbp_0; dest", "mov     [rbp+prefix_count], r8", "sub     rcx, rsi", "mov     rdx, n_1; n", "mov     [rbp+saved_errno], n_1", "call    _memcpy", "mov     rcx, [rbp+saved_errno]", "mov     r8, [rbp+prefix_count]", "add     fbp_0, rcx"], ["mov~rcx,rdx", "mov~rdi,fbp_0", "mov~[rbp+0],r8", "sub~rcx,rsi", "mov~rdx,n_1", "mov~[rbp+0],n_1", "call~FOO", "mov~rcx,[rbp+0]", "mov~r8,[rbp+0]", "add~fbp_0,rcx"]], [0, 0, 11, 0, 0, 2, 0, 0, 13, -1, 0.0029766895857789703, ["cmp     allocated, rbx", "jbe     short loc_F4D1"], ["cmp~allocated,rbx", "jbe~FOO"]], [1, 0, 33, 0, 0, 1, 0, 0, 14, -1, 0.012409860808317961, ["mov     r12d, 0Ch"], ["mov~r12d,0"]], [1, 0, 37, 0, 0, 2, 0, 1, 13, -1, 0.01889429258203365, ["cmp     rbx, 0Ch", "ja      loc_F57E"], ["cmp~rbx,0", "ja~FOO"]], [0, 0, 250, 0, 0, 5, 1, 1, 13, 26, 0.010769187769020102, ["cmp     result_0, [rbp+result]", "mov     r12, memory_size", "setz    dl", "test    result_0, result_0", "jnz     loc_E739"], ["cmp~result_0,[rbp+0]", "mov~r12,memory_size", "setz~dl", "test~result_0,result_0", "jnz~FOO"]], [1, 0, 5, 1, 0, 5, 0, 1, 41, -1, 0.008091564648666779, ["mov     rax, [rbp+var_410]", "mov     rdi, [rbp+a.arg]; ptr", "add     rax, 10h", "cmp     rdi, rax", "jz      short loc_EC7E"], ["mov~rax,[rbp+0]", "mov~rdi,[rbp+0]", "add~rax,0", "cmp~rdi,rax", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 42, -1, 0.0, ["call    _free"], ["call~FOO"]], [0, 0, 250, 0, 0, 4, 0, 1, 21, 9, 0.22529207893118677, ["mov     rsi, [dp+30h]; src", "mov     rdx, [dp+38h]", "cmp     rsi, rdx", "jz      short loc_E8AC"], ["mov~rsi,[dp+0]", "mov~rdx,[dp+0]", "cmp~rsi,rdx", "jz~FOO"]], [0, 1, 7, 1, 0, 5, 0, 1, 4, -1, 0.01817457655542512, ["mov     rax, [rbp+var_408]", "mov     rdi, [rbp+d.dir]; ptr", "add     rax, 20h", "cmp     rdi, rax", "jz      short loc_E683"], ["mov~rax,[rbp+0]", "mov~rdi,[rbp+0]", "add~rax,<STR>", "cmp~rdi,rax", "jz~FOO"]], [0, 0, 8, 0, 1, 3, 0, 2, 3, -1, 0.000698753423891777, ["call    ___errno_location", "mov     [rbp+saved_errno], rax", "jmp     out_of_memory_1"], ["call~FOO", "mov~[rbp+0],rax", "jmp~FOO"]], [0, 0, 6, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    _free"], ["call~FOO"]], [1, 0, 5, 1, 0, 5, 0, 1, 15, -1, 0.007162222594890715, ["mov     rax, [rbp+var_410]", "mov     rdi, [rbp+a.arg]; ptr", "add     rax, 10h", "cmp     rdi, rax", "jz      short loc_F51D"], ["mov~rax,[rbp+0]", "mov~rdi,[rbp+0]", "add~rax,0", "cmp~rdi,rax", "jz~FOO"]], [0, 1, 7, 1, 0, 5, 0, 1, 14, -1, 0.013087651629492984, ["mov     rax, [rbp+var_408]", "mov     rdi, [rbp+d.dir]; ptr", "add     rax, 20h", "cmp     rdi, rax", "jz      short loc_F501"], ["mov~rax,[rbp+0]", "mov~rdi,[rbp+0]", "add~rax,<STR>", "cmp~rdi,rax", "jz~FOO"]], [0, 0, 6, 0, 1, 1, 0, 1, 15, -1, 0.0, ["call    _free"], ["call~FOO"]], [0, 0, 6, 0, 1, 1, 0, 1, 42, -1, 0.0, ["call    _free"], ["call~FOO"]], [0, 1, 7, 1, 0, 5, 0, 1, 41, -1, 0.011305830398568953, ["mov     rax, [rbp+var_408]", "mov     rdi, [rbp+d.dir]; ptr", "add     rax, 20h", "cmp     rdi, rax", "jz      short loc_F362"], ["mov~rax,[rbp+0]", "mov~rdi,[rbp+0]", "add~rax,<STR>", "cmp~rdi,rax", "jz~FOO"]], [0, 0, 250, 0, 0, 1, 0, 1, 32, 31, 2.7950136955671083e-05, ["jmp     loc_EDC0"], ["jmp~FOO"]], [0, 0, 41, 0, 0, 2, 1, 1, 12, -1, 0.04154787858460506, ["test    allocated, allocated", "jnz     loc_F599"], ["test~allocated,allocated", "jnz~FOO"]], [0, 0, 3, 0, 0, 4, 1, 1, 42, -1, 0.002641287942310917, ["mov     rax, [rbp+saved_errno]", "xor     r15d, r15d", "mov     [rax], ebx", "jmp     loc_E6AF"], ["mov~rax,[rbp+0]", "xor~r15d,r15d", "mov~<TAG>,ebx", "jmp~FOO"]], [1, 0, 46, 1, 0, 4, 1, 0, 10, -1, 0.08632399798759013, ["mov     rbx, length", "xor     eax, eax", "add     rbx, 1", "jb      loc_F560"], ["mov~rbx,length", "xor~eax,eax", "add~rbx,0", "jb~FOO"]], [2, 0, 250, 0, 1, 10, 1, 1, 34, 29, 0.010355525742076136, ["mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "pop     rsi", "pop     rdi", "mov     r10, [rbp+maxlen]"], ["mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "pop~rsi", "pop~rdi", "mov~r10,[rbp+0]"]], [1, 0, 250, 1, 0, 4, 0, 1, 33, 30, 0.0012996813684387053, ["sub     rsp, 10h", "mov     r9, [rbp+var_3F0]", "fstp    [rsp+440h+var_440]", "jmp     loc_EA69"], ["sub~rsp,0", "mov~r9,[rbp+0]", "fstp~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 250, 0, 0, 2, 1, 1, 19, 26, 0.023520040248197215, ["test    length, length", "jz      loc_F3D4"], ["test~length,length", "jz~FOO"]], [1, 0, 5, 1, 0, 5, 0, 1, 5, -1, 0.012249147520822852, ["mov     rax, [rbp+var_410]", "mov     rdi, [rbp+a.arg]; ptr", "add     rax, 10h", "cmp     rdi, rax", "jz      short loc_E69F"], ["mov~rax,[rbp+0]", "mov~rdi,[rbp+0]", "add~rax,0", "cmp~rdi,rax", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    _free"], ["call~FOO"]], [0, 0, 250, 0, 0, 2, 1, 1, 20, 26, 0.0026133378053552463, ["test    dl, dl", "jz      loc_F3D4"], ["test~dl,dl", "jz~FOO"]], [0, 0, 250, 0, 0, 3, 1, 1, 34, 28, 0.14491680175899552, ["mov     ecx, [rbp+count]", "test    ecx, ecx", "js      loc_EBDC"], ["mov~ecx,[rbp+0]", "test~ecx,ecx", "js~FOO"]], [5, 0, 250, 3, 1, 17, 1, 2, 33, 29, 0.025587185793877032, ["mov     eax, [rbp+prefixes+4]", "sub     rsp, 8", "push    [rbp+var_3F0]", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "sub     rsp, 18h", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "fstp    [rsp+458h+var_450]", "push    rax", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "add     rsp, 30h", "mov     r10, [rbp+maxlen]", "jmp     loc_EA96"], ["mov~eax,[rbp+0]", "sub~rsp,0", "push~[rbp+0]", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "sub~rsp,0", "mov~rcx,0", "mov~edx,0", "fstp~<TAG>,[rsp+0]", "push~rax", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "add~rsp,0", "mov~r10,[rbp+0]", "jmp~FOO"]], [3, 0, 250, 0, 1, 12, 0, 2, 33, 29, 0.029087940447574838, ["mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     eax, 1", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "pop     r8", "mov     r10, [rbp+maxlen]", "pop     r9", "jmp     loc_EA96"], ["mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "mov~eax,0", "mov~[rbp+0],maxlen_0", "call~FOO", "pop~r8", "mov~r10,[rbp+0]", "pop~r9", "jmp~FOO"]], [3, 0, 250, 0, 1, 10, 0, 2, 33, 29, 0.025594173328115952, ["mov     r9, [rbp+var_3F0]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     eax, 1", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "mov     r10, [rbp+maxlen]", "jmp     loc_EA96"], ["mov~r9,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "mov~eax,0", "mov~[rbp+0],maxlen_0", "call~FOO", "mov~r10,[rbp+0]", "jmp~FOO"]], [1, 0, 250, 0, 0, 2, 0, 1, 15, 30, 0.02069008888143552, ["cmp     rax, 0Ch", "ja      loc_F3C2"], ["cmp~rax,0", "ja~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 40, -1, 0.016476605735368105, ["mov     rax, [rbp+buf_malloced]", "test    rax, rax", "jz      short loc_F346"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 12, 0, 0, 2, 0, 1, 39, -1, 0.024023142713399295, ["cmp     result_0, [rbp+result]", "jz      short loc_F332"], ["cmp~result_0,[rbp+0]", "jz~FOO"]], [0, 0, 10, 0, 1, 3, 0, 2, 41, -1, 0.0, ["mov     rdi, result_0; ptr", "call    _free", "jmp     loc_F332"], ["mov~rdi,result_0", "call~FOO", "jmp~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 40, -1, 0.002655263010788753, ["test    result_0, result_0", "jnz     loc_F3E9"], ["test~result_0,result_0", "jnz~FOO"]], [0, 0, 250, 2, 1, 10, 0, 1, 22, 9, 0.0, ["mov     rcx, rdx", "mov     rdi, fbp_0; dest", "mov     [rbp+prefix_count], r8", "sub     rcx, rsi", "mov     rdx, n_2; n", "mov     [rbp+saved_errno], n_2", "call    _memcpy", "mov     rcx, [rbp+saved_errno]", "mov     r8, [rbp+prefix_count]", "add     fbp_0, rcx"], ["mov~rcx,rdx", "mov~rdi,fbp_0", "mov~[rbp+0],r8", "sub~rcx,rsi", "mov~rdx,n_2", "mov~[rbp+0],n_2", "call~FOO", "mov~rcx,[rbp+0]", "mov~r8,[rbp+0]", "add~fbp_0,rcx"]], [0, 0, 250, 0, 0, 3, 0, 0, 35, 27, 0.3000936329588015, ["movsxd  rdx, ecx", "cmp     rdx, r10", "jnb     short loc_EABA"], ["movsxd~rdx,ecx", "cmp~rdx,r10", "jnb~FOO"]], [2, 0, 250, 0, 1, 13, 2, 1, 34, 28, 0.2100918627834607, ["mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen_0", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "pop     rdx", "pop     rcx", "mov     ecx, [rbp+count]", "mov     r10, [rbp+maxlen]", "test    ecx, ecx", "jns     loc_EAA4"], ["mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen_0", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "pop~rdx", "pop~rcx", "mov~ecx,[rbp+0]", "mov~r10,[rbp+0]", "test~ecx,ecx", "jns~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 17, -1, 0.009614847112750853, ["test    length, length", "jz      short loc_F5B0"], ["test~length,length", "jz~FOO"]], [2, 0, 250, 2, 0, 8, 0, 1, 31, 31, 0.05501751541915883, ["mov     rax, [dp+50h]; jumptable 000000000000EA2B case 12", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "fld     tbyte ptr [rax+10h]", "mov     eax, dword ptr [rbp+prefix_count]", "cmp     eax, 1", "jz      loc_F2E0"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "fld~<TAG>,[byte ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 250, 0, 1, 6, 0, 2, 35, 35, 0.0017259209570126893, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_E9B6"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [0, 0, 250, 0, 1, 6, 0, 2, 21, 25, 0.0017259209570126893, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_EF5F"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [1, 0, 250, 1, 0, 3, 0, 1, 36, 27, 0.000517077533679915, ["add     rdx, result_0", "cmp     byte ptr [rdx+length], 0", "jnz     loc_F3F6; jumptable 000000000000EA2B default case"], ["add~rdx,result_0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 250, 0, 0, 3, 0, 1, 22, 8, 0.2269970372854827, ["mov     edi, dword ptr [rbp+cp]", "cmp     edi, 10h", "ja      short loc_E8E4"], ["mov~edi,[word ptr [rbp+0]", "cmp~edi,0", "ja~FOO"]], [0, 0, 250, 0, 0, 1, 0, 1, 32, 31, 2.7950136955671083e-05, ["jmp     loc_EDC0"], ["jmp~FOO"]], [1, 0, 250, 0, 0, 2, 0, 1, 32, 30, 0.02866170085900084, ["cmp     eax, 2", "jnz     loc_F180"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 250, 0, 0, 2, 0, 1, 36, 26, 0.3012675387109397, ["cmp     ecx, eax", "jge     short loc_EAC6"], ["cmp~ecx,eax", "jge~FOO"]], [0, 0, 250, 0, 0, 2, 0, 1, 34, 35, 0.020913689977080888, ["mov     result_0, rcx", "jmp     loc_E9B6"], ["mov~result_0,rcx", "jmp~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, -1, 0.007406786293252837, ["mov     rdi, [rbp+var_38]", "xor     rdi, fs:28h", "mov     rax, r15", "jnz     loc_F5C7"], ["mov~rdi,[rbp+0]", "xor~rdi,<TAG>", "mov~rax,r15", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, -1, 4.192520543350662e-05, ["xor     r15d, r15d", "jmp     loc_E6AF"], ["xor~r15d,r15d", "jmp~FOO"]], [1, 0, 3, 0, 1, 4, 1, 2, 4, -1, 0.00020962602716753312, ["call    ___errno_location", "xor     r15d, r15d", "mov     dword ptr [rax], 16h", "jmp     loc_E6AF"], ["call~FOO", "xor~r15d,r15d", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 3, 0, 1, 16, -1, 0.001124993012465761, ["mov     rax, [rbp+lengthp]", "mov     [rax], length", "jmp     loc_E6AF"], ["mov~rax,[rbp+0]", "mov~<TAG>,length", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 1, 0, 6, -1, 0.006211917938397898, ["mov     rax, [rbp+saved_errno]", "xor     r15d, r15d", "mov     dword ptr [rax], 0Ch"], ["mov~rax,[rbp+0]", "xor~r15d,r15d", "mov~<TAG>,0"]], [0, 0, 250, 0, 0, 2, 1, 1, 15, 24, 0.02274954813945255, ["test    length, length", "jz      loc_F2C0"], ["test~length,length", "jz~FOO"]], [0, 0, 250, 0, 0, 3, 0, 1, 32, 30, 0.02438358302122349, ["push    [rbp+var_3F0]", "push    arg", "jmp     loc_EDC8"], ["push~[rbp+0]", "push~arg", "jmp~FOO"]], [0, 0, 250, 0, 0, 2, 0, 1, 16, 23, 0.020101272662902712, ["mov     result_0, r9", "jmp     loc_E774"], ["mov~result_0,r9", "jmp~FOO"]], [0, 0, 250, 0, 0, 2, 1, 1, 16, 24, 0.0026133378053552463, ["test    dl, dl", "jz      loc_F2C0"], ["test~dl,dl", "jz~FOO"]], [0, 0, 250, 0, 0, 2, 0, 0, 37, 26, 0.005897478897646599, ["mov     [rbp+count], eax", "mov     ecx, eax"], ["mov~[rbp+0],eax", "mov~ecx,eax"]], [2, 0, 250, 1, 0, 5, 1, 1, 23, 9, 0.012968863547431382, ["mov     eax, 1", "mov     ecx, edi", "shl     rax, cl", "test    eax, 14180h", "jnz     short loc_E8DD"], ["mov~eax,0", "mov~ecx,edi", "shl~rax,cl", "test~eax,0", "jnz~FOO"]], [0, 0, 250, 0, 0, 3, 0, 0, 37, 25, 0.31017664486555985, ["lea     eax, [rcx+1]", "cmp     rax, r10", "jb      loc_F300"], ["lea~eax,[rcx+0]", "cmp~rax,r10", "jb~FOO"]], [0, 0, 10, 0, 1, 5, 1, 1, 14, -1, 0.0, ["mov     rdi, result_0; ptr", "mov     rsi, rbx; size", "call    _realloc", "test    memory, memory", "cmovnz  result_0, memory"], ["mov~rdi,result_0", "mov~rsi,rbx", "call~FOO", "test~memory,memory", "cmovnz~result_0,memory"]], [0, 0, 250, 0, 0, 4, 1, 1, 43, 37, 0.03345631393593829, ["cmp     result_0, [rbp+result]", "setz    bl", "test    result_0, result_0", "jz      loc_EEC0"], ["cmp~result_0,[rbp+0]", "setz~bl", "test~result_0,result_0", "jz~FOO"]], [0, 0, 250, 0, 0, 2, 1, 1, 44, 36, 0.013108614232209739, ["test    bl, bl", "jnz     loc_EEC0"], ["test~bl,bl", "jnz~FOO"]], [0, 0, 0, 0, 0, 8, 0, 0, 3, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [1, 0, 250, 0, 0, 2, 1, 1, 25, 8, 0.004339258762367936, ["test    ah, 6", "jz      short loc_E8E4"], ["test~ah,0", "jz~FOO"]], [0, 0, 250, 0, 0, 2, 0, 1, 20, 25, 0.020871764771647382, ["mov     result_0, rcx", "jmp     loc_EF5F"], ["mov~result_0,rcx", "jmp~FOO"]], [0, 0, 250, 0, 0, 2, 1, 1, 45, 35, 0.018950192855944993, ["test    length, length", "jz      loc_EF90"], ["test~length,length", "jz~FOO"]], [2, 0, 250, 1, 0, 2, 0, 0, 26, 9, 2.7950136955671083e-05, ["mov     byte ptr [rbx], 6Ch ; 'l'", "add     rbx, 1"], ["mov~<TAG>,0", "add~rbx,0"]], [1, 0, 250, 1, 0, 3, 0, 1, 32, 30, 0.024741694150967983, ["sub     rsp, 8", "push    [rbp+var_3F0]", "jmp     loc_ED55"], ["sub~rsp,0", "push~[rbp+0]", "jmp~FOO"]], [2, 0, 250, 2, 0, 8, 0, 1, 31, 31, 0.05389950994093198, ["mov     rax, [dp+50h]; jumptable 000000000000EA2B case 11", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movsd   xmm0, qword ptr [rax+10h]", "mov     eax, dword ptr [rbp+prefix_count]", "cmp     eax, 1", "jz      loc_F2D0"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movsd~xmm0,[word ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 250, 0, 0, 2, 1, 1, 46, 35, 0.0026133378053552463, ["test    bl, bl", "jz      loc_EF90"], ["test~bl,bl", "jz~FOO"]], [2, 0, 250, 1, 0, 2, 0, 0, 24, 8, 0.006875733691095087, ["mov     byte ptr [rbx], 6Ch ; 'l'", "add     rbx, 1"], ["mov~<TAG>,0", "add~rbx,0"]], [1, 1, 250, 1, 0, 4, 0, 1, 13, 26, 0.015721952037564983, ["mov     edx, edi", "sub     edx, 12h", "cmp     edx, 4; switch 5 cases", "ja      loc_F3F6; jumptable 000000000000EA2B default case"], ["mov~edx,edi", "sub~edx,<STR>", "cmp~edx,0", "ja~FOO"]], [1, 0, 250, 0, 0, 1, 0, 0, 30, 39, 0.015700989434848232, ["mov     r12d, 0Ch"], ["mov~r12d,0"]], [0, 0, 9, 0, 0, 3, 1, 1, 13, -1, 0.01890128011627257, ["mov     rax, [rbp+buf_malloced]", "test    rax, rax", "jz      short loc_F4E5"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 8, 0, 1, 2, 0, 1, 14, -1, 0.0, ["mov     rdi, rax; ptr", "call    _free"], ["mov~rdi,rax", "call~FOO"]], [0, 0, 250, 0, 1, 10, 0, 2, 17, 23, 0.0017259209570126893, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "mov     [rbp+cp], r8", "mov     [rbp+saved_errno], rcx", "call    _memcpy", "mov     rcx, [rbp+saved_errno]", "mov     result_0, rax", "mov     r8, [rbp+cp]", "jmp     loc_E774"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "mov~[rbp+0],r8", "mov~[rbp+0],rcx", "call~FOO", "mov~rcx,[rbp+0]", "mov~result_0,rax", "mov~r8,[rbp+0]", "jmp~FOO"]], [4, 0, 253, 2, 0, 8, 2, 1, 5, 25, 0.017119458885348538, ["add     rax, 24h", "mov     [rbp+buf_malloced], 0", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rax, [rsp+430h+orig_errno+3]", "and     rax, 0FFFFFFFFFFFFFFF0h", "mov     [rbp+buf], rax", "jmp     loc_E5C5"], ["add~rax,0", "mov~[rbp+0],0", "and~rax,0", "sub~rsp,rax", "lea~rax,[rsp+0]", "and~rax,0", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 258, 0, 0, 2, 0, 0, 4, 26, 0.0139191682039242, ["cmp     rdi, 0F9Fh", "jbe     loc_E6D8"], ["cmp~rdi,0", "jbe~FOO"]], [0, 0, 250, 0, 0, 1, 0, 0, 33, 38, 0.0003097806845920212, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 250, 0, 0, 5, 1, 1, 32, 38, 0.01886634244507798, ["cmp     result_0, [rbp+result]", "mov     r12, memory_size", "setz    dl", "test    result_0, result_0", "jnz     loc_E997"], ["cmp~result_0,[rbp+0]", "mov~r12,memory_size", "setz~dl", "test~result_0,result_0", "jnz~FOO"]], [0, 0, 250, 0, 0, 2, 0, 1, 10, 23, 0.003270166023813517, ["mov     r14, allocated", "jmp     loc_E774"], ["mov~r14,allocated", "jmp~FOO"]], [0, 0, 250, 0, 0, 2, 0, 1, 33, 29, 0.08457536754430096, ["mov     r9d, [rbp+prefixes]", "jmp     loc_EBA1"], ["mov~r9d,[rbp+0]", "jmp~FOO"]], [1, 0, 250, 1, 0, 2, 0, 0, 33, 29, 0.12118422401103113, ["sub     rsp, 8", "push    [rbp+var_3F0]"], ["sub~rsp,0", "push~[rbp+0]"]], [2, 0, 250, 2, 0, 4, 0, 1, 24, 7, 0.0029766895857789703, ["shl     rax, 5", "add     rax, r8", "cmp     dword ptr [rax], 5", "jnz     loc_F3F6; jumptable 000000000000EA2B default case"], ["shl~rax,0", "add~rax,r8", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 250, 0, 0, 2, 0, 0, 9, 23, 0.05031024652020795, ["cmp     allocated, rax", "jnb     short loc_E774"], ["cmp~allocated,rax", "jnb~FOO"]], [0, 0, 250, 0, 0, 2, 1, 1, 10, 29, 0.04280563474761026, ["test    allocated, allocated", "jnz     loc_F048"], ["test~allocated,allocated", "jnz~FOO"]], [0, 0, 250, 1, 0, 6, 0, 1, 38, 24, 0.2263681592039801, ["mov     rax, [rbp+saved_errno]", "mov     edi, [rbp+orig_errno]", "movsxd  rbx, ecx", "add     rbx, length", "mov     [rax], edi", "jmp     loc_EF64"], ["mov~rax,[rbp+0]", "mov~edi,[rbp+0]", "movsxd~rbx,ecx", "add~rbx,length", "mov~<TAG>,edi", "jmp~FOO"]], [0, 0, 250, 0, 0, 3, 0, 1, 15, 24, 0.002379255408351501, ["mov     [rax], length; jumptable 000000000000EFD0 cases 3,4", "mov     rbx, length", "jmp     loc_EF64"], ["mov~<TAG>,length", "mov~rbx,length", "jmp~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 16, -1, 0.0, ["call    _free"], ["call~FOO"]], [0, 0, 250, 0, 0, 3, 0, 0, 42, 38, 0.031262228184918105, ["cmp     rsi, rax", "mov     allocated, rsi", "jnb     short loc_EB2B"], ["cmp~rsi,rax", "mov~allocated,rsi", "jnb~FOO"]], [2, 0, 250, 0, 0, 4, 0, 0, 25, 6, 0.003451841914025378, ["mov     eax, [rax+10h]", "mov     edx, 2", "mov     dword ptr [rbp+prefix_count], 1", "mov     [rbp+prefixes], eax"], ["mov~eax,[rax+0]", "mov~edx,0", "mov~[word ptr [rbp+0],0", "mov~[rbp+0],eax"]], [1, 0, 250, 0, 0, 1, 0, 0, 12, 27, 0.01409898075167239, ["mov     r12d, 0Ch"], ["mov~r12d,0"]], [0, 0, 11, 0, 1, 3, 0, 1, 16, -1, 0.0006195613691840424, ["call    ___errno_location", "mov     [rbp+saved_errno], rax", "nop     word ptr [rax+rax+00000000h]"], ["call~FOO", "mov~[rbp+0],rax", "nop~[ord ptr [rax+0]"]], [0, 0, 250, 0, 1, 9, 1, 2, 15, 24, 0.02463757989080813, ["mov     rsi, r12; size", "mov     rdi, result_0; ptr", "mov     [rbp+cp], cp_0", "mov     [rbp+saved_errno], n_0", "call    _realloc", "test    memory, memory", "mov     rcx, [rbp+saved_errno]", "mov     r8, [rbp+cp]", "jz      loc_F11B"], ["mov~rsi,r12", "mov~rdi,result_0", "mov~[rbp+0],cp_0", "mov~[rbp+0],n_0", "call~FOO", "test~memory,memory", "mov~rcx,[rbp+0]", "mov~r8,[rbp+0]", "jz~FOO"]], [0, 0, 250, 0, 0, 1, 0, 0, 44, 38, 0.0032841410922913516, ["mov     r12, rax"], ["mov~r12,rax"]], [1, 0, 250, 0, 0, 3, 0, 1, 35, 28, 0.0566199899379507, ["mov     rdi, [rbp+fbp]", "cmp     byte ptr [rdi+1], 0", "jnz     loc_EF28"], ["mov~rdi,[rbp+0]", "cmp~[yte ptr [rdi+0],0", "jnz~FOO"]], [1, 0, 250, 0, 0, 3, 0, 1, 25, 5, 0.23599698138520878, ["mov     rax, [dp+40h]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      short loc_E957"], ["mov~rax,[dp+0]", "cmp~rax,0", "jz~FOO"]], [1, 0, 268, 1, 1, 24, 2, 2, 0, 30, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "lea     r14, [rbp+a]", "push    rbx", "mov     rbx, format", "mov     r12, args", "mov     format, r14; a", "sub     rsp, 408h", "mov     [rbp+lengthp], lengthp_0", "lea     lengthp_0, [rbp+d]; d", "mov     [rbp+result], resultbuf_0", "mov     resultbuf_0, format; format", "mov     [rbp+var_410], r14", "mov     rax, fs:28h", "mov     [rbp+var_38], rax", "xor     eax, eax", "mov     [rbp+var_408], rsi", "call    printf_parse", "test    eax, eax", "js      loc_F398"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "lea~r14,[rbp+0]", "push~rbx", "mov~rbx,format", "mov~r12,args", "mov~format,r14", "sub~rsp,0", "mov~[rbp+0],lengthp_0", "lea~lengthp_0,[rbp+0]", "mov~[rbp+0],resultbuf_0", "mov~resultbuf_0,format", "mov~[rbp+0],r14", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "mov~[rbp+0],rsi", "call~FOO", "test~eax,eax", "js~FOO"]], [2, 0, 250, 2, 0, 4, 0, 1, 26, 6, 0.002655263010788753, ["shl     rax, 5", "add     r8, rax", "cmp     dword ptr [r8], 5", "jnz     loc_F3F6; jumptable 000000000000EA2B default case"], ["shl~rax,0", "add~r8,rax", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 250, 0, 0, 2, 0, 1, 11, 27, 0.0598063055508972, ["cmp     rax, 0FFFFFFFFFFFFFFFFh", "jnz     loc_F3F6; jumptable 000000000000EA2B default case"], ["cmp~rax,0", "jnz~FOO"]], [1, 0, 250, 0, 0, 4, 0, 1, 10, 20, 0.2903460226955112, ["movzx   edx, byte ptr [dp+48h]", "mov     rax, [dp+50h]", "cmp     dl, 25h ; '%'", "jz      loc_EF38"], ["movzx~edx,[yte ptr [dp+0]", "mov~rax,[dp+0]", "cmp~dl,0", "jz~FOO"]], [0, 0, 8, 0, 1, 2, 0, 1, 41, -1, 0.0, ["mov     rdi, rax; ptr", "call    _free"], ["mov~rdi,rax", "call~FOO"]], [1, 0, 250, 0, 0, 2, 0, 1, 32, 30, 0.0273829820932789, ["cmp     eax, 2", "jnz     loc_F140"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 250, 1, 0, 4, 0, 0, 12, 26, 0.060190619934037674, ["mov     rax, length", "add     rax, 1", "mov     rbx, rax", "jnb     loc_EFD8"], ["mov~rax,length", "add~rax,0", "mov~rbx,rax", "jnb~FOO"]], [0, 0, 250, 0, 0, 4, 0, 0, 27, 5, 0.003451841914025378, ["mov     eax, dword ptr [rbp+prefix_count]", "mov     ecx, [r8+10h]", "mov     dword ptr [rbp+prefix_count], edx", "mov     [rbp+rax*4+prefixes], ecx"], ["mov~eax,[word ptr [rbp+0]", "mov~ecx,[r8+0]", "mov~[word ptr [rbp+0],edx", "mov~[rbp+0],ecx"]], [0, 0, 250, 0, 0, 1, 0, 0, 14, 25, 0.003270166023813517, ["mov     rbx, allocated"], ["mov~rbx,allocated"]], [0, 0, 33, 0, 0, 2, 0, 1, 16, -1, 0.0014534071216948962, ["mov     r12, memory_size", "jmp     loc_F478"], ["mov~r12,memory_size", "jmp~FOO"]], [0, 0, 37, 1, 0, 3, 0, 0, 14, -1, 0.015148974229973727, ["add     allocated, allocated", "cmp     allocated, rbx", "jnb     loc_F478"], ["add~allocated,allocated", "cmp~allocated,rbx", "jnb~FOO"]], [1, 0, 250, 0, 0, 1, 0, 0, 14, 24, 0.07378836156297165, ["mov     byte ptr [result_0+length], 25h ; '%'"], ["mov~<TAG>,0"]], [0, 0, 250, 0, 0, 2, 0, 0, 13, 25, 0.05521549555592822, ["cmp     allocated, rax", "jnb     short loc_EF5F"], ["cmp~allocated,rax", "jnb~FOO"]], [1, 0, 250, 1, 0, 4, 1, 0, 26, 4, 0.23849851864274135, ["mov     rax, length", "xor     edx, edx", "add     rax, 2", "jb      loc_F5CC"], ["mov~rax,length", "xor~edx,edx", "add~rax,0", "jb~FOO"]], [0, 0, 250, 0, 0, 4, 1, 1, 31, 38, 0.03555257420761362, ["cmp     result_0, [rbp+result]", "setz    dl", "test    result_0, result_0", "jz      loc_F1E0"], ["cmp~result_0,[rbp+0]", "setz~dl", "test~result_0,result_0", "jz~FOO"]], [0, 0, 250, 0, 0, 2, 0, 0, 27, 35, 0.12984934876180892, ["cmp     allocated, rax", "jnb     short loc_E9B6"], ["cmp~allocated,rax", "jnb~FOO"]], [3, 0, 260, 2, 0, 7, 0, 0, 2, 28, 0.0071831851976074685, ["mov     rax, [rbp+d.max_width_length]", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "add     rax, 7", "cmp     rax, 6", "cmovbe  rax, rdx", "add     rax, [rbp+d.max_precision_length]", "jb      loc_EF98"], ["mov~rax,[rbp+0]", "mov~rdx,0", "add~rax,0", "cmp~rax,0", "cmovbe~rax,rdx", "add~rax,[rbp+0]", "jb~FOO"]], [0, 0, 250, 0, 0, 2, 1, 1, 28, 41, 0.040038571188998826, ["test    allocated, allocated", "jnz     loc_F198"], ["test~allocated,allocated", "jnz~FOO"]], [0, 0, 250, 0, 0, 1, 0, 0, 16, 23, 0.022879050440680494, ["mov     result_0, memory"], ["mov~result_0,memory"]], [0, 0, 250, 0, 1, 4, 0, 1, 10, 22, 0.06762535636424619, ["lea     rdi, [result_0+length]; dest", "mov     rdx, rcx; n", "mov     rsi, r8; src", "call    _memcpy"], ["lea~rdi,<TAG>", "mov~rdx,rcx", "mov~rsi,r8", "call~FOO"]], [0, 0, 250, 0, 0, 3, 0, 1, 9, 21, 0.3784588294482643, ["mov     rax, [rbp+i]", "cmp     [rbp+d.count], rax", "jz      loc_F44B"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 0, 36, 0, 0, 1, 0, 1, 15, -1, 0.00018167589021186203, ["jmp     short loc_F57E"], ["jmp~FOO"]], [0, 0, 250, 0, 0, 2, 0, 1, 8, 22, 0.3065012018558891, ["mov     r14, length", "jmp     loc_E783"], ["mov~r14,length", "jmp~FOO"]], [1, 0, 259, 1, 0, 5, 1, 0, 3, 27, 0.010481301358376657, ["mov     rdi, rax", "xor     r8d, r8d", "add     rdi, 6; size", "setb    r8b", "jb      loc_EF98"], ["mov~rdi,rax", "xor~r8d,r8d", "add~rdi,0", "setb~r8b", "jb~FOO"]], [0, 0, 250, 0, 0, 3, 0, 0, 33, 30, 1.3975068477835541e-05, ["mov     eax, [rbp+prefixes+4]", "push    [rbp+var_3F0]", "push    rax"], ["mov~eax,[rbp+0]", "push~[rbp+0]", "push~rax"]], [1, 0, 256, 0, 0, 3, 0, 1, 5, 27, 0.0002655263010788753, ["cmp     rdi, 0FFFFFFFFFFFFFFFFh", "mov     [rbp+saved_errno], r8", "jz      loc_EF98"], ["cmp~rdi,0", "mov~[rbp+0],r8", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    _free"], ["call~FOO"]], [0, 0, 255, 0, 1, 4, 1, 2, 6, 26, 0.0035077421879367208, ["call    _malloc", "test    rax, rax", "mov     [rbp+buf], rax", "jz      loc_EF98"], ["call~FOO", "test~rax,rax", "mov~[rbp+0],rax", "jz~FOO"]], [1, 0, 250, 0, 0, 2, 0, 1, 11, 19, 0.2287648834479289, ["cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      loc_F3F6; jumptable 000000000000EA2B default case"], ["cmp~rax,0", "jz~FOO"]], [0, 0, 250, 0, 0, 2, 1, 1, 14, 31, 0.03838951310861423, ["test    allocated, allocated", "jnz     loc_F3B0"], ["test~allocated,allocated", "jnz~FOO"]], [0, 0, 250, 0, 0, 1, 0, 0, 34, 35, 0.03450444407177595, ["mov     result_0, memory"], ["mov~result_0,memory"]], [2, 0, 250, 2, 0, 7, 0, 1, 12, 18, 0.22914919783106938, ["mov     r8, [rbp+a.arg]", "shl     rax, 5", "add     rax, r8", "cmp     dl, 6Eh ; 'n'", "mov     edi, [rax]", "mov     dword ptr [rbp+cp], edi", "jz      loc_EFB0"], ["mov~r8,[rbp+0]", "shl~rax,0", "add~rax,r8", "cmp~dl,0", "mov~edi,<TAG>", "mov~[word ptr [rbp+0],edi", "jz~FOO"]], [0, 0, 253, 0, 0, 2, 0, 0, 7, 25, 0.006847783554139415, ["mov     r8, [rbp+saved_errno]", "mov     [rbp+buf_malloced], buf_0"], ["mov~r8,[rbp+0]", "mov~[rbp+0],buf_0"]], [0, 0, 250, 0, 0, 1, 0, 0, 32, 31, 2.7950136955671083e-05, ["nop"], ["nop"]], [0, 0, 250, 0, 0, 2, 0, 0, 32, 30, 0.05585951329494851, ["push    [rbp+var_3F0]", "push    r9"], ["push~[rbp+0]", "push~r9"]], [2, 0, 250, 2, 0, 8, 0, 1, 31, 31, 0.04818300818007331, ["mov     rax, [dp+50h]; jumptable 000000000000EA2B case 3", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movsx   r9d, word ptr [rax+10h]", "mov     eax, dword ptr [rbp+prefix_count]", "cmp     eax, 1", "jz      short loc_EDC0"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movsx~r9d,[ord ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [2, 0, 250, 1, 0, 2, 0, 0, 15, 16, 0.0, ["mov     byte ptr [rbx], 2Dh ; '-'", "add     rbx, 1"], ["mov~<TAG>,0", "add~rbx,0"]], [1, 0, 250, 0, 0, 2, 1, 1, 14, 16, 0.21335737045111522, ["test    al, 2", "jz      short loc_E7FB"], ["test~al,0", "jz~FOO"]], [2, 0, 250, 0, 0, 3, 0, 1, 27, 3, 0.1068743361842473, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "jz      loc_E9B6"], ["cmp~allocated,0", "mov~edx,0", "jz~FOO"]], [2, 0, 250, 0, 0, 6, 1, 1, 13, 17, 0.2116524120968193, ["mov     eax, [dp+10h]", "mov     rdi, [rbp+buf]", "test    al, 1", "mov     byte ptr [rdi], 25h ; '%'", "lea     rbx, [rdi+1]", "jz      short loc_E7F0"], ["mov~eax,[dp+0]", "mov~rdi,[rbp+0]", "test~al,0", "mov~<TAG>,0", "lea~rbx,[rdi+0]", "jz~FOO"]], [1, 0, 250, 0, 0, 2, 0, 0, 14, 17, 0.0, ["lea     fbp_0, [rdi+2]", "mov     byte ptr [rdi+1], 27h ; '''"], ["lea~fbp_0,[rdi+0]", "mov~[yte ptr [rdi+0],0"]], [0, 0, 0, 0, 1, 1, 0, 1, 12, -1, 0.0, ["call    _abort; jumptable 000000000000EA2B default case"], ["call~FOO"]]], "func_feature": [52, 85, 235, 6, 269, 433, 1, 936, 0.04245, 3, 82], "succs": [[46, 38], [0, 185], [10], [2, 10], [72, 14], [74, 4], [4], [4], [21], [8, 211], [17, 37], [176], [11, 13], [11], [72, 42], [168, 175], [175, 15], [37], [16, 66], [256, 66], [18, 19], [39], [211, 21], [248, 44], [25, 23], [23], [54, 55], [26, 242], [49, 268], [28, 93], [28], [28], [28], [28], [97, 28], [28], [41], [41, 36], [46], [106], [39], [48, 43], [221, 47], [48], [52, 213], [248, 44], [50, 84], [237], [51, 86], [197, 167, 105, 268, 116, 117, 118, 119, 261], [84, 85], [86], [209, 66], [34, 29], [178, 252], [54], [66, 71], [56, 201], [56, 83], [56], [240, 59], [66, 60], [88], [192, 62], [122], [64, 125], [92], [66, 234], [66, 108], [66, 132], [66, 181], [208, 66], [66, 150], [66, 5], [66, 6], [66, 126], [66, 166], [66, 78], [66, 79], [80, 66], [66, 235], [66, 236], [66, 58], [66], [89, 103], [84], [128, 135], [225], [212, 87], [103], [45], [216, 90, 109, 127], [113, 101], [218, 92], [92, 223], [92, 30], [194, 92], [92], [99, 70], [222, 70], [70], [113, 114], [133], [133, 102], [160, 53], [182, 110], [154], [106], [98, 69], [45], [40, 121], [75, 76], [76, 111], [120, 136], [113], [220, 69], [259, 22], [144, 22], [172, 22], [260, 22], [136], [148], [129, 202], [145, 122], [122, 77], [122], [122], [45], [135], [202, 188], [112], [130, 79], [99, 100], [146, 134], [146], [163, 171], [138, 151], [136], [151], [217, 179], [139, 141], [139], [12], [12, 142], [260], [81, 131], [176], [123, 124], [154], [148], [153, 193], [152, 180], [180], [169, 193], [224, 164], [154], [154], [154], [74, 7], [230, 143], [162, 159], [159], [161, 159], [171], [170, 174], [224, 164], [65, 125], [107, 173], [35], [237], [268, 174], [88, 186], [260], [155, 149], [185, 187], [35], [262, 191], [176], [176], [176], [176], [184, 183], [210], [245], [204, 183], [187], [199, 63], [104, 215], [202], [96, 190], [96, 95], [], [88, 195], [237], [33, 198], [199], [156], [196, 231], [33, 31], [88], [91, 268], [240], [203, 140], [140], [245], [24], [251, 205], [18], [20, 207], [245], [165], [165], [219, 268], [245, 214], [115, 68], [45], [45], [179], [189, 94], [225], [98], [114], [244, 221], [189], [32, 1], [227, 239], [177, 27], [233, 268], [232, 268], [228, 254], [143], [250, 157], [67, 238], [239], [237], [112], [112, 247], [45], [237, 255], [241, 265], [18, 20], [35, 243], [137, 249], [57, 61], [245], [246], [147, 229], [79], [246], [137, 206], [156], [137, 253], [178], [137, 258], [257, 268], [73, 158], [35], [200, 266], [24], [260], [210], [9, 260], [], [3], [3, 263], [82, 35], [264, 267], [264], []], "fname": "vasnprintf", "n_num": 269}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 34, 0, 0, 4, 0, 1, 0, 0, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_F6E9"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 000000000000F626 cases 3,4", "cmp     r11d, 2Fh ; '/'", "ja      loc_F77A"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     rdx, [rdx]", "mov     [ap+10h], rdx", "jmp     short loc_F650"], ["mov~rdx,<TAG>", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_F681"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 000000000000F626 case 15", "cmp     r11d, 2Fh ; '/'", "ja      loc_F78B"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 000000000000F626 cases 5,6,13,14", "cmp     r11d, 2Fh ; '/'", "ja      loc_F7CC"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [0, 0, 34, 1, 0, 4, 0, 1, 3, 2, 0.7546218487394959, ["mov     edx, [ap]", "movsxd  rdx, dword ptr [r8+rdx*4]", "add     rdx, r8", "jmp     rdx; switch jump"], ["mov~edx,<TAG>", "movsxd~rdx,<TAG>", "add~rdx,r8", "jmp~rdx"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_F70F"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 2, 3, 0.7823529411764706, ["cmp     dword ptr [ap], 16h; switch 23 cases", "ja      short loc_F660; jumptable 000000000000F626 default case"], ["cmp~<TAG>,0", "ja~FOO"]], [1, 1, 34, 2, 0, 4, 0, 1, 5, 4, 0.7537815126050421, ["add     i, 1", "add     ap, 20h", "cmp     [a], i", "ja      short loc_F618"], ["add~i,0", "add~ap,<STR>", "cmp~<TAG>,i", "ja~FOO"]], [0, 0, 34, 0, 0, 5, 1, 0, 1, 4, 0.027731092436974792, ["lea     r8, off_12D90", "lea     r10, wide_null_string_2696", "lea     r9, aNull; \"(NULL)\"", "xor     ecx, ecx", "nop     dword ptr [ap+00000000h]"], ["lea~r8,<TAG>", "lea~r10,<TAG>", "lea~r9,<TAG>", "xor~ecx,ecx", "nop~[word ptr [ap+0]"]], [0, 0, 34, 0, 0, 5, 1, 1, 6, 5, 0.07899159663865547, ["mov     rdx, [rdx]", "test    rdx, rdx", "cmovz   rdx, r9", "mov     [ap+10h], rdx", "jmp     loc_F650"], ["mov~rdx,<TAG>", "test~rdx,rdx", "cmovz~rdx,r9", "mov~[ap+0],rdx", "jmp~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     short loc_F767"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 000000000000F626 case 16", "cmp     r11d, 2Fh ; '/'", "ja      short loc_F79C"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     edx, [rdx]", "mov     [ap+10h], edx", "jmp     short loc_F650"], ["mov~edx,<TAG>", "mov~[ap+0],edx", "jmp~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_F6A5"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 1, 0.07899159663865547, ["mov     r11d, [args+4]; jumptable 000000000000F626 case 11", "cmp     r11d, 0AFh", "ja      loc_F7DD"], ["mov~r11d,[args+0]", "cmp~r11d,0", "ja~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 000000000000F626 cases 1,2", "cmp     r11d, 2Fh ; '/'", "ja      loc_F7BB"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 000000000000F626 cases 7-10,17-22", "cmp     r11d, 2Fh ; '/'", "ja      loc_F7AA"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 10h", "mov     [args+4], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~[args+0],r11d"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_F6C7"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [2, 0, 34, 1, 0, 8, 1, 0, 4, 5, 0.0067226890756302525, ["mov     rdx, [args+8]; jumptable 000000000000F626 case 12", "add     rdx, 0Fh", "and     rdx, 0FFFFFFFFFFFFFFF0h", "lea     r11, [rdx+10h]", "mov     [args+8], r11", "fld     tbyte ptr [rdx]", "fstp    tbyte ptr [ap+10h]", "nop     dword ptr [ap+00000000h]"], ["mov~rdx,[args+0]", "add~rdx,0", "and~rdx,0", "lea~r11,[rdx+0]", "mov~[args+0],r11", "fld~<TAG>,<TAG>", "fstp~<TAG>,[byte ptr [ap+0]", "nop~[word ptr [ap+0]"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["movsd   xmm0, qword ptr [rdx]", "movsd   qword ptr [ap+10h], xmm0", "jmp     loc_F650"], ["movsd~xmm0,<TAG>", "movsd~[word ptr [ap+0],xmm0", "jmp~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 0, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_F742"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     edx, [rdx]", "mov     [ap+10h], dl", "jmp     short loc_F650"], ["mov~edx,<TAG>", "mov~[ap+0],dl", "jmp~FOO"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     edx, [rdx]", "mov     [ap+10h], dx", "jmp     loc_F650"], ["mov~edx,<TAG>", "mov~[ap+0],dx", "jmp~FOO"]], [0, 0, 34, 0, 0, 5, 1, 1, 6, 5, 0.07899159663865547, ["mov     rdx, [rdx]", "test    rdx, rdx", "cmovz   rdx, r10", "mov     [ap+10h], rdx", "jmp     loc_F650"], ["mov~rdx,<TAG>", "test~rdx,rdx", "cmovz~rdx,r10", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 1, 0, 1, -1, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [1, 0, 35, 0, 0, 3, 0, 1, 0, 5, 0.0, ["cmp     qword ptr [a], 0", "mov     rax, [a+8]", "jz      short loc_F65D"], ["cmp~<TAG>,0", "mov~rax,[a+0]", "jz~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [1, 0, 0, 0, 0, 2, 0, 0, 3, -1, 0.0, ["mov     eax, 0FFFFFFFFh; jumptable 000000000000F626 default case", "retn"], ["mov~eax,0", "retn"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]]], "func_feature": [0, 5, 25, 0, 36, 52, 1, 132, 0.10528, 3, 18], "succs": [[29], [0, 35], [11], [2], [2], [13], [9, 5], [18, 14], [1, 34, 6, 7, 16, 19, 20, 21, 25], [13], [8, 34], [10, 31], [10], [11], [17], [30], [33, 15], [11], [17], [27, 22], [24, 23], [3, 4], [26], [28], [28], [11], [11], [26], [11], [11], [11], [], [12, 31], [30], [], [29]], "fname": "printf_fetchargs", "n_num": 36}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[2, 0, 198, 0, 0, 3, 1, 1, 0, 0, 0.004589037583961442, ["test    al, 2", "mov     r11d, 2", "jnz     loc_FA58"], ["test~al,0", "mov~r11d,0", "jnz~FOO"]], [2, 0, 198, 0, 0, 3, 0, 1, 25, 29, 0.00915243808644824, ["cmp     eax, 7", "mov     r11d, 8", "jg      loc_FA58"], ["cmp~eax,0", "mov~r11d,0", "jg~FOO"]], [1, 0, 198, 0, 0, 2, 1, 1, 6, 18, 7.691124442393478e-05, ["or      dword ptr [r12+10h], 2", "jmp     short loc_F930"], ["or~[word ptr [r12+0],0", "jmp~FOO"]], [1, 0, 198, 0, 0, 2, 0, 1, 5, 15, 0.46567194790545047, ["cmp     al, 2Dh ; '-'", "jz      short loc_F950"], ["cmp~al,0", "jz~FOO"]], [1, 0, 198, 1, 0, 7, 0, 1, 17, 3, 0.03525098702763677, ["mov     rsi, a_allocated_0", "mov     [rsp+88h+a_allocated], a_allocated_0", "mov     [rsp+88h+d_allocated], d_allocated_0", "shl     rsi, 5; size", "cmp     [rsp+88h+src], rcx", "mov     [rsp+88h+var_58], r8", "jz      loc_102EF"], ["mov~rsi,a_allocated_0", "mov~[rsp+0],a_allocated_0", "mov~[rsp+0],d_allocated_0", "shl~rsi,0", "cmp~[rsp+0],rcx", "mov~[rsp+0],r8", "jz~FOO"]], [1, 0, 198, 1, 0, 7, 0, 1, 16, 4, 0.043736860995744246, ["add     a_allocated_0, a_allocated_0", "lea     rax, [rbp+1]", "cmp     a_allocated_0, rbp", "cmovbe  a_allocated_0, rax", "mov     rax, 7FFFFFFFFFFFFFFh", "cmp     a_allocated_0, rax", "ja      out_of_memory"], ["add~a_allocated_0,a_allocated_0", "lea~rax,[rbp+0]", "cmp~a_allocated_0,rbp", "cmovbe~a_allocated_0,rax", "mov~rax,0", "cmp~a_allocated_0,rax", "ja~FOO"]], [1, 0, 198, 0, 0, 2, 0, 0, 12, 19, 0.04209608778136697, ["cmp     r11b, 9", "jbe     short loc_FD66"], ["cmp~r11b,0", "jbe~FOO"]], [1, 0, 198, 2, 0, 9, 2, 1, 11, 20, 0.05555555555555556, ["xor     edi, edi", "add     rcx, rax", "movsx   eax, byte ptr [rbx+1]", "setb    dil", "add     rbx, 1", "mov     rdx, rcx", "test    rdi, rdi", "lea     r11d, [rax-30h]", "jnz     loc_1011C"], ["xor~edi,edi", "add~rcx,rax", "movsx~eax,[yte ptr [rbx+0]", "setb~dil", "add~rbx,0", "mov~rdx,rcx", "test~rdi,rdi", "lea~r11d,[rax-30h]+0]", "jnz~FOO"]], [0, 0, 198, 1, 0, 8, 0, 0, 15, 11, 0.009998461775111522, ["mov     rax, cp", "lea     rcx, [rbx+2]", "mov     rbx, cp", "sub     rax, rsi", "mov     rsi, [rsp+88h+max_width_length]", "cmp     rsi, rax", "cmovnb  rax, rsi", "mov     [rsp+88h+max_width_length], rax"], ["mov~rax,cp", "lea~rcx,[rbx+0]", "mov~rbx,cp", "sub~rax,rsi", "mov~rsi,[rsp+0]", "cmp~rsi,rax", "cmovnb~rax,rsi", "mov~[rsp+0],rax"]], [2, 0, 198, 1, 0, 4, 0, 0, 14, 12, 0.014177306055478645, ["movzx   eax, byte ptr [cp]", "sub     eax, 30h ; '0'", "cmp     al, 9", "jbe     short loc_FDE0"], ["movzx~eax,<TAG>", "sub~eax,0", "cmp~al,0", "jbe~FOO"]], [3, 0, 198, 2, 0, 5, 0, 1, 18, 30, 0.005601702302209917, ["movzx   ebp, byte ptr [cp]", "add     eax, 8", "add     rbx, 1", "cmp     bpl, 68h ; 'h'", "jnz     short loc_F9D5"], ["movzx~ebp,<TAG>", "add~eax,0", "add~rbx,0", "cmp~bpl,0", "jnz~FOO"]], [1, 0, 198, 0, 0, 2, 0, 1, 17, 28, 0.45130236373891197, ["cmp     bpl, 6Ch ; 'l'", "jz      short loc_FA00"], ["cmp~bpl,0", "jz~FOO"]], [1, 0, 198, 0, 0, 2, 0, 1, 18, 27, 0.4471107009178075, ["cmp     bpl, 6Ah ; 'j'", "jz      short loc_FA00"], ["cmp~bpl,0", "jz~FOO"]], [2, 0, 198, 0, 0, 4, 1, 1, 19, 26, 0.44739270881402865, ["mov     edx, ebp", "and     edx, 0FFFFFFDFh", "cmp     dl, 5Ah ; 'Z'", "jz      short loc_FA00"], ["mov~edx,ebp", "and~edx,0", "cmp~dl,0", "jz~FOO"]], [0, 0, 198, 0, 0, 1, 0, 0, 21, 31, 0.00020509665179715942, ["nop     word ptr [flags+flags+00000000h]"], ["nop~[ord ptr [flags+0]"]], [1, 0, 198, 0, 0, 3, 0, 1, 24, 7, 0.04207045069989233, ["lea     rbx, [n-1]", "cmp     rbx, 0FFFFFFFFFFFFFFFDh", "ja      loc_1002B; jumptable 000000000000FA45 default case"], ["lea~rbx,[n-1]+0]", "cmp~rbx,0", "ja~FOO"]], [1, 0, 198, 0, 0, 2, 0, 0, 23, 8, 0.04209608778136697, ["cmp     dil, 9", "jbe     loc_10356"], ["cmp~dil,0", "jbe~FOO"]], [0, 0, 198, 0, 0, 3, 0, 1, 15, 10, 0.02491924319335487, ["mov     [r12+20h], rbx", "movzx   eax, byte ptr [rbx]", "jmp     loc_F9B5"], ["mov~[r12+0],rbx", "movzx~eax,<TAG>", "jmp~FOO"]], [0, 0, 198, 0, 0, 1, 0, 1, 14, 11, 0.009434445982669333, ["jmp     short loc_FE0F"], ["jmp~FOO"]], [4, 0, 198, 1, 0, 6, 2, 1, 27, 29, 0.0, ["and     eax, 1", "cmp     eax, 1", "sbb     r11d, r11d", "and     r11d, 2", "add     r11d, 4", "jmp     loc_FA58"], ["and~eax,0", "cmp~eax,0", "sbb~r11d,r11d", "and~r11d,0", "add~r11d,0", "jmp~FOO"]], [1, 0, 198, 1, 0, 6, 2, 1, 16, 31, 0.00015382248884786957, ["mov     ecx, eax", "mov     edx, esi", "and     ecx, 1", "shl     edx, cl", "or      eax, edx", "jmp     short loc_F9C8"], ["mov~ecx,eax", "mov~edx,esi", "and~ecx,0", "shl~edx,cl", "or~eax,edx", "jmp~FOO"]], [2, 0, 198, 1, 0, 4, 0, 1, 15, 30, 0.4492001230579911, ["movzx   ebp, byte ptr [rbx]", "add     rbx, 1", "cmp     bpl, 68h ; 'h'", "jz      short loc_FA10"], ["movzx~ebp,<TAG>", "add~rbx,0", "cmp~bpl,0", "jz~FOO"]], [0, 0, 198, 0, 0, 2, 0, 1, 16, 12, 0.10370199456493873, ["mov     rax, [a]", "jmp     loc_FC45"], ["mov~rax,<TAG>", "jmp~FOO"]], [0, 0, 198, 0, 0, 3, 0, 1, 15, 5, 0.1516176998410501, ["cmp     a_allocated_0, rbp", "mov     rcx, [a+8]", "ja      loc_1021E"], ["cmp~a_allocated_0,rbp", "mov~rcx,[a+0]", "ja~FOO"]], [1, 0, 198, 0, 0, 2, 1, 1, 17, 31, 3.845562221196739e-05, ["or      eax, 4", "jmp     short loc_F9C8"], ["or~eax,0", "jmp~FOO"]], [1, 0, 198, 0, 0, 2, 0, 1, 16, 29, 0.45551966364149105, ["cmp     bpl, 4Ch ; 'L'", "jz      short loc_FA20"], ["cmp~bpl,0", "jz~FOO"]], [0, 0, 198, 0, 1, 7, 0, 1, 18, 2, 0.015536071373634826, ["mov     rdi, rcx; ptr", "call    _realloc", "mov     rdx, [a+8]", "mov     r8, [rsp+88h+var_58]", "mov     rcx, rax", "mov     r10, [rsp+88h+d_allocated]", "mov     r9, [rsp+88h+a_allocated]"], ["mov~rdi,rcx", "call~FOO", "mov~rdx,[a+0]", "mov~r8,[rsp+0]", "mov~rcx,rax", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]"]], [1, 0, 198, 0, 0, 2, 0, 1, 23, 29, 0.0084801768388909, ["mov     r11d, 11h; jumptable 000000000000FA45 case 75", "jmp     loc_FA58"], ["mov~r11d,0", "jmp~FOO"]], [0, 0, 198, 1, 0, 5, 0, 1, 22, 23, 0.4400092293493309, ["lea     rcx, off_12E0C", "movzx   edx, dl", "movsxd  rdx, dword ptr [rcx+rdx*4]", "add     rdx, rcx", "jmp     rdx; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,dl", "movsxd~rdx,<TAG>", "add~rdx,rcx", "jmp~rdx"]], [0, 0, 198, 0, 0, 1, 0, 0, 16, 34, 0.004589037583961442, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [2, 0, 198, 1, 0, 4, 0, 1, 15, 33, 0.01738194123980926, ["movzx   eax, byte ptr [rbx+1]", "sub     eax, 30h ; '0'", "cmp     al, 9", "ja      short loc_FE3E"], ["movzx~eax,[yte ptr [rbx+0]", "sub~eax,0", "cmp~al,0", "ja~FOO"]], [8, 1, 198, 1, 0, 25, 1, 1, 0, 20, 0.0, ["push    r15", "push    r14", "lea     rcx, [d+20h]", "push    r13", "push    r12", "lea     rax, [a+10h]", "push    rbp", "push    rbx", "mov     r14, d", "mov     r15, a", "xor     ebp, ebp", "mov     r9d, 7", "sub     rsp, 58h", "mov     r10d, 7", "mov     qword ptr [d], 0", "mov     [d+8], rcx", "mov     [rsp+88h+var_60], rcx", "mov     r8, 0FFFFFFFFFFFFFFFFh", "mov     qword ptr [a], 0", "mov     [rsp+88h+src], rax", "mov     [a+8], rax", "mov     [rsp+88h+max_precision_length], 0", "mov     [rsp+88h+max_width_length], 0", "mov     [rsp+88h+arg_posn], 0", "jmp     short loc_F86B"], ["push~r15", "push~r14", "lea~rcx,[d+0]", "push~r13", "push~r12", "lea~rax,[a+0]", "push~rbp", "push~rbx", "mov~r14,d", "mov~r15,a", "xor~ebp,ebp", "mov~r9d,0", "sub~rsp,<STR>", "mov~r10d,0", "mov~<TAG>,0", "mov~[d+0],rcx", "mov~[rsp+0],rcx", "mov~r8,0", "mov~<TAG>,0", "mov~[rsp+0],rax", "mov~[a+0],rax", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 198, 0, 0, 3, 0, 1, 23, 29, 0.013069214422852344, ["cmp     eax, 0Fh; jumptable 000000000000FA45 cases 28,32-34,60,64-66", "mov     r11d, 0Ch", "jg      loc_FA58"], ["cmp~eax,0", "mov~r11d,0", "jg~FOO"]], [0, 0, 198, 0, 0, 2, 1, 1, 19, 1, 0.03655847818284367, ["test    memory, memory", "jz      loc_1049D"], ["test~memory,memory", "jz~FOO"]], [0, 0, 198, 0, 1, 8, 0, 2, 18, 2, 0.015536071373634826, ["mov     rdi, memory_size; size", "call    _malloc", "mov     rdx, [rsp+88h+src]", "mov     rcx, rax", "mov     r9, [rsp+88h+a_allocated]", "mov     r10, [rsp+88h+d_allocated]", "mov     r8, [rsp+88h+var_58]", "jmp     loc_FC2A"], ["mov~rdi,memory_size", "call~FOO", "mov~rdx,[rsp+0]", "mov~rcx,rax", "mov~r9,[rsp+0]", "mov~r10,[rsp+0]", "mov~r8,[rsp+0]", "jmp~FOO"]], [1, 0, 198, 0, 0, 3, 0, 1, 21, 24, 0.44326513869661077, ["lea     edx, [c-25h]", "cmp     dl, 53h ; 'S'; switch 84 cases", "ja      loc_1002B; jumptable 000000000000FA45 default case"], ["lea~edx,[c-25h]+0]", "cmp~dl,0", "ja~FOO"]], [1, 0, 198, 0, 0, 2, 0, 1, 20, 25, 0.4476490796287751, ["cmp     bpl, 74h ; 't'", "jnz     short loc_FA28"], ["cmp~bpl,0", "jnz~FOO"]], [0, 0, 198, 0, 0, 2, 0, 1, 22, 32, 0.004871045480182536, ["mov     rbx, cp", "jmp     loc_F9BD"], ["mov~rbx,cp", "jmp~FOO"]], [1, 0, 198, 0, 0, 2, 0, 1, 21, 33, 0.006998923242578065, ["cmp     edx, 5", "jnz     error"], ["cmp~edx,0", "jnz~FOO"]], [0, 0, 5, 0, 0, 2, 0, 1, 14, -1, 0.022483720453263602, ["cmp     [rsp+88h+src], rcx", "jz      short loc_1003E"], ["cmp~[rsp+0],rcx", "jz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 1, 30, -1, 0.0022817002512433987, ["jmp     short error"], ["jmp~FOO"]], [1, 0, 198, 0, 0, 2, 0, 1, 19, 11, 0.007793672768292058, ["cmp     edx, 5", "jnz     error"], ["cmp~edx,0", "jnz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 13, -1, 0.0194585448392555, ["mov     rcx, [a+8]; jumptable 000000000000FA45 default case"], ["mov~rcx,[a+0]"]], [0, 0, 4, 0, 1, 2, 0, 1, 15, -1, 0.0, ["mov     rdi, rcx; ptr", "call    _free"], ["mov~rdi,rcx", "call~FOO"]], [0, 0, 198, 0, 0, 3, 0, 1, 20, 13, 0.03276419012459622, ["cmp     [rsp+88h+src], rdx", "mov     rax, [a]", "jz      loc_103C5"], ["cmp~[rsp+0],rdx", "mov~rax,<TAG>", "jz~FOO"]], [3, 0, 198, 2, 0, 5, 0, 0, 17, 33, 0.005024867969030406, ["add     cp, 1", "movzx   eax, byte ptr [cp]", "sub     eax, 30h ; '0'", "cmp     al, 9", "jbe     short loc_FE30"], ["add~cp,0", "movzx~eax,<TAG>", "sub~eax,0", "cmp~al,0", "jbe~FOO"]], [0, 0, 198, 0, 0, 1, 0, 0, 21, 12, 0.03363585089473414, ["mov     [a+8], rcx"], ["mov~[a+0],rcx"]], [1, 0, 198, 1, 1, 14, 0, 2, 21, 13, 0.0, ["mov     rsi, [rsp+88h+src]; src", "shl     rax, 5", "mov     rdi, memory; dest", "mov     rdx, rax; n", "mov     [rsp+88h+a_allocated], r9", "mov     [rsp+88h+d_allocated], r10", "mov     [rsp+88h+var_58], r8", "call    _memcpy", "mov     r9, [rsp+88h+a_allocated]", "mov     rcx, rax", "mov     r10, [rsp+88h+d_allocated]", "mov     rax, [a]", "mov     r8, [rsp+88h+var_58]", "jmp     loc_FC41"], ["mov~rsi,[rsp+0]", "shl~rax,0", "mov~rdi,memory", "mov~rdx,rax", "mov~[rsp+0],r9", "mov~[rsp+0],r10", "mov~[rsp+0],r8", "call~FOO", "mov~r9,[rsp+0]", "mov~rcx,rax", "mov~r10,[rsp+0]", "mov~rax,<TAG>", "mov~r8,[rsp+0]", "jmp~FOO"]], [0, 0, 3, 0, 0, 3, 0, 1, 15, -1, 0.013254371122391428, ["mov     rdi, [d+8]; ptr", "cmp     [rsp+88h+var_60], rdi", "jz      short loc_1004E"], ["mov~rdi,[d+0]", "cmp~[rsp+0],rdi", "jz~FOO"]], [0, 0, 2, 0, 1, 1, 0, 1, 16, -1, 0.0, ["call    _free"], ["call~FOO"]], [0, 0, 7, 0, 0, 1, 0, 0, 25, -1, 0.006657095489582795, ["mov     rcx, [a+8]"], ["mov~rcx,[a+0]"]], [0, 0, 198, 0, 0, 2, 1, 1, 24, 26, 0.046172383735835515, ["test    r10, r10", "js      loc_1044C"], ["test~r10,r10", "js~FOO"]], [1, 0, 198, 1, 0, 4, 0, 1, 25, 25, 0.03676357483464082, ["add     r10, r10", "mov     rax, 2E8BA2E8BA2E8BAh", "cmp     d_allocated_0, rax", "ja      loc_1044C"], ["add~r10,r10", "mov~rax,0", "cmp~d_allocated_0,rax", "ja~FOO"]], [0, 0, 198, 0, 1, 7, 1, 2, 27, 23, 0.013920935240732195, ["call    _realloc", "test    rax, rax", "mov     rcx, rax", "mov     r8, [rsp+88h+var_58]", "mov     r10, [rsp+88h+d_allocated]", "mov     r9, [rsp+88h+a_allocated]", "jz      loc_1044C"], ["call~FOO", "test~rax,rax", "mov~rcx,rax", "mov~r8,[rsp+0]", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "jz~FOO"]], [0, 0, 198, 0, 1, 9, 1, 2, 29, 28, 0.012369891811516178, ["mov     rdi, rcx; ptr", "call    _realloc", "test    rax, rax", "mov     rcx, rax", "mov     r11d, dword ptr [rsp+88h+var_58]", "mov     r8, [rsp+88h+d_allocated]", "mov     r10, [rsp+88h+a_allocated]", "mov     r9, [rsp+88h+var_40]", "jz      loc_1044C"], ["mov~rdi,rcx", "call~FOO", "test~rax,rax", "mov~rcx,rax", "mov~r11d,[word ptr [rsp+0]", "mov~r8,[rsp+0]", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "jz~FOO"]], [0, 0, 198, 0, 0, 1, 0, 0, 13, 10, 0.05283802491924319, ["mov     rsi, rdx"], ["mov~rsi,rdx"]], [2, 0, 198, 0, 0, 11, 1, 0, 12, 8, 0.15020766035994462, ["mov     rsi, [rsp+88h+max_width_length]", "mov     eax, 1", "mov     [r12+18h], rbx", "mov     [r12+20h], rdx", "test    rsi, rsi", "cmovnz  rax, rsi", "mov     [rsp+88h+max_width_length], rax", "movsx   eax, byte ptr [rbx+1]", "lea     esi, [rax-30h]", "cmp     sil, 9", "jbe     loc_FE62"], ["mov~rsi,[rsp+0]", "mov~eax,0", "mov~[r12+0],rbx", "mov~[r12+0],rdx", "test~rsi,rsi", "cmovnz~rax,rsi", "mov~[rsp+0],rax", "movsx~eax,[yte ptr [rbx+0]", "lea~esi,[rax-30h]+0]", "cmp~sil,0", "jbe~FOO"]], [2, 0, 198, 0, 0, 3, 0, 0, 23, 29, 0.0084801768388909, ["mov     r11d, 10h; jumptable 000000000000FA45 case 46", "mov     ebp, 73h ; 's'", "nop     word ptr [rax+rax+00h]"], ["mov~r11d,0", "mov~ebp,0", "nop~[ord ptr [rax+0]"]], [0, 0, 198, 0, 0, 1, 0, 0, 18, 13, 0.00915243808644824, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 198, 2, 0, 5, 0, 1, 17, 11, 0.1428241808952469, ["mov     rdx, rax", "shl     rdx, 5", "add     rdx, rcx", "cmp     rax, rbp", "ja      short loc_FC6E"], ["mov~rdx,rax", "shl~rdx,0", "add~rdx,rcx", "cmp~rax,rbp", "ja~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 17, -1, 0.022594814472987054, ["cmp     [rsp+88h+src], rcx", "jnz     loc_102C2"], ["cmp~[rsp+0],rcx", "jnz~FOO"]], [1, 0, 198, 1, 0, 7, 0, 1, 27, 30, 0.03212326308773009, ["add     a_allocated_0, a_allocated_0", "lea     rax, [r13+1]", "cmp     a_allocated_0, r13", "cmovbe  a_allocated_0, rax", "mov     rax, 7FFFFFFFFFFFFFFh", "cmp     a_allocated_0, rax", "ja      out_of_memory"], ["add~a_allocated_0,a_allocated_0", "lea~rax,[r13+0]", "cmp~a_allocated_0,r13", "cmovbe~a_allocated_0,rax", "mov~rax,0", "cmp~a_allocated_0,rax", "ja~FOO"]], [1, 0, 198, 1, 0, 7, 0, 1, 18, 4, 0.0386863559452392, ["add     a_allocated_0, a_allocated_0", "lea     rax, [rbx+1]", "cmp     a_allocated_0, rbx", "cmovbe  a_allocated_0, rax", "mov     rax, 7FFFFFFFFFFFFFFh", "cmp     a_allocated_0, rax", "ja      out_of_memory"], ["add~a_allocated_0,a_allocated_0", "lea~rax,[rbx+0]", "cmp~a_allocated_0,rbx", "cmovbe~a_allocated_0,rax", "mov~rax,0", "cmp~a_allocated_0,rax", "ja~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 20, 0, 0.001435676562580116, ["mov     rcx, rdx", "jmp     short out_of_memory"], ["mov~rcx,rdx", "jmp~FOO"]], [0, 0, 198, 0, 0, 1, 1, 0, 8, 23, 0.043454853099523155, ["xor     edx, edx"], ["xor~edx,edx"]], [1, 0, 198, 0, 0, 3, 0, 1, 7, 17, 0.06132389888735067, ["cmp     cl, 24h ; '$'", "mov     r13, r8", "jnz     loc_F933"], ["cmp~cl,0", "mov~r13,r8", "jnz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 1, 18, -1, 0.006682732571057449, ["jmp     loc_102CA"], ["jmp~FOO"]], [1, 0, 198, 0, 0, 2, 0, 1, 24, 28, 0.18202327846997898, ["cmp     arg_index, 0FFFFFFFFFFFFFFFFh", "jz      loc_100F7"], ["cmp~arg_index,0", "jz~FOO"]], [2, 0, 198, 0, 0, 3, 0, 1, 23, 29, 0.026682504685888685, ["cmp     eax, 0Fh; jumptable 000000000000FA45 case 73", "mov     r11d, 16h", "jg      loc_FA58"], ["cmp~eax,0", "mov~r11d,0", "jg~FOO"]], [1, 0, 198, 0, 0, 2, 1, 1, 24, 29, 0.01369020150746039, ["test    al, 4", "jnz     loc_FA58"], ["test~al,0", "jnz~FOO"]], [2, 0, 198, 0, 0, 3, 0, 1, 25, 29, 0.00915243808644824, ["cmp     eax, 7", "mov     r11d, 15h", "jg      loc_FA58"], ["cmp~eax,0", "mov~r11d,0", "jg~FOO"]], [1, 1, 198, 0, 0, 3, 1, 1, 26, 29, 0.004589037583961442, ["test    al, 2", "mov     r11d, 12h", "jnz     loc_FA58"], ["test~al,0", "mov~r11d,<STR>", "jnz~FOO"]], [2, 0, 198, 1, 0, 5, 2, 1, 27, 29, 0.0, ["xor     r11d, r11d", "test    al, 1", "setz    r11b", "add     r11d, 13h", "jmp     loc_FA58"], ["xor~r11d,r11d", "test~al,0", "setz~r11b", "add~r11d,0", "jmp~FOO"]], [2, 0, 198, 1, 0, 5, 1, 1, 23, 29, 0.0084801768388909, ["xor     r11d, r11d; jumptable 000000000000FA45 case 62", "cmp     eax, 7", "setnle  r11b", "add     r11d, 0Dh", "jmp     loc_FA58"], ["xor~r11d,r11d", "cmp~eax,0", "setnle~r11b", "add~r11d,0", "jmp~FOO"]], [2, 0, 198, 0, 0, 3, 0, 1, 23, 29, 0.026682504685888685, ["cmp     eax, 0Fh; jumptable 000000000000FA45 cases 63,68", "mov     r11d, 9", "jg      loc_FA58"], ["cmp~eax,0", "mov~r11d,0", "jg~FOO"]], [1, 0, 198, 0, 0, 2, 1, 1, 24, 29, 0.01369020150746039, ["test    al, 4", "jnz     loc_FA58"], ["test~al,0", "jnz~FOO"]], [2, 0, 198, 0, 0, 3, 0, 1, 25, 29, 0.00915243808644824, ["cmp     eax, 7", "mov     r11d, 7", "jg      loc_FA58"], ["cmp~eax,0", "mov~r11d,0", "jg~FOO"]], [2, 0, 198, 0, 0, 3, 1, 1, 26, 29, 0.004589037583961442, ["test    al, 2", "mov     r11d, 1", "jnz     loc_FA58"], ["test~al,0", "mov~r11d,0", "jnz~FOO"]], [4, 0, 198, 1, 0, 6, 2, 1, 27, 29, 0.0, ["and     eax, 1", "cmp     eax, 1", "sbb     r11d, r11d", "and     r11d, 2", "add     r11d, 3", "jmp     loc_FA58"], ["and~eax,0", "cmp~eax,0", "sbb~r11d,r11d", "and~r11d,0", "add~r11d,0", "jmp~FOO"]], [2, 0, 198, 1, 0, 5, 1, 1, 23, 29, 0.0084801768388909, ["xor     r11d, r11d; jumptable 000000000000FA45 case 78", "cmp     eax, 7", "setnle  r11b", "add     r11d, 0Fh", "jmp     loc_FA58"], ["xor~r11d,r11d", "cmp~eax,0", "setnle~r11b", "add~r11d,0", "jmp~FOO"]], [2, 0, 198, 1, 0, 5, 2, 1, 24, 29, 0.0, ["xor     r11d, r11d", "test    al, 4", "setnz   r11b", "add     r11d, 0Bh", "jmp     loc_FA58"], ["xor~r11d,r11d", "test~al,0", "setnz~r11b", "add~r11d,0", "jmp~FOO"]], [2, 0, 198, 0, 0, 3, 0, 1, 23, 29, 0.0084801768388909, ["mov     r11d, 0Eh; jumptable 000000000000FA45 case 30", "mov     ebp, 63h ; 'c'", "jmp     loc_FA58"], ["mov~r11d,0", "mov~ebp,0", "jmp~FOO"]], [2, 0, 198, 0, 0, 3, 0, 1, 23, 29, 0.026682504685888685, ["cmp     eax, 0Fh; jumptable 000000000000FA45 cases 51,74,80,83", "mov     r11d, 0Ah", "jg      loc_FA58"], ["cmp~eax,0", "mov~r11d,0", "jg~FOO"]], [1, 0, 198, 0, 0, 2, 1, 1, 24, 29, 0.01369020150746039, ["test    al, 4", "jnz     loc_FA58"], ["test~al,0", "jnz~FOO"]], [0, 0, 198, 1, 0, 9, 0, 1, 16, 32, 0.01868943239501615, ["mov     rsi, [rsp+88h+max_precision_length]", "mov     rax, rcx", "mov     [r12+38h], rcx", "sub     rax, rbx", "mov     rbx, rcx", "cmp     rsi, rax", "cmovnb  rax, rsi", "mov     [rsp+88h+max_precision_length], rax", "jmp     loc_F9BD"], ["mov~rsi,[rsp+0]", "mov~rax,rcx", "mov~[r12+0],rcx", "sub~rax,rbx", "mov~rbx,rcx", "cmp~rsi,rax", "cmovnb~rax,rsi", "mov~[rsp+0],rax", "jmp~FOO"]], [2, 0, 1, 0, 1, 4, 0, 2, 16, -1, 0.003819925139722094, ["call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     eax, 0FFFFFFFFh", "jmp     loc_F894"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 198, 0, 0, 1, 0, 0, 25, 27, 0.16912782648823257, ["mov     [r12+50h], arg_index"], ["mov~[r12+0],arg_index"]], [0, 0, 198, 0, 0, 2, 0, 1, 29, 23, 0.09080654258319233, ["cmp     edx, r11d", "jz      loc_FABB; jumptable 000000000000FA45 case 0"], ["cmp~edx,r11d", "jz~FOO"]], [1, 0, 198, 1, 0, 5, 1, 1, 28, 24, 0.17904937701892018, ["shl     r13, 5", "lea     rax, [rcx+r13]", "mov     edx, [rax]", "test    edx, edx", "jnz     loc_10063"], ["shl~r13,0", "lea~rax,<TAG>", "mov~edx,<TAG>", "test~edx,edx", "jnz~FOO"]], [1, 0, 198, 0, 0, 3, 0, 1, 2, 18, 0.4312413474850023, ["cmp     al, 25h ; '%'", "lea     rbx, [cp+1]", "jz      short loc_F8A8"], ["cmp~al,0", "lea~rbx,[cp+0]", "jz~FOO"]], [0, 0, 198, 0, 0, 3, 1, 1, 1, 19, 0.4357107453554154, ["movzx   eax, byte ptr [cp]", "test    al, al", "jnz     short loc_F860"], ["movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 198, 0, 0, 1, 0, 0, 3, 20, 0.4301987728383667, ["mov     rdi, rbx"], ["mov~rdi,rbx"]], [0, 0, 198, 0, 0, 2, 0, 1, 29, 21, 0.03364439658855903, ["mov     [d+8], rcx", "jmp     loc_F868"], ["mov~[d+0],rcx", "jmp~FOO"]], [0, 0, 198, 0, 0, 2, 0, 1, 24, 21, 0.39091421832538586, ["mov     rcx, [d+8]", "jmp     loc_F868"], ["mov~rcx,[d+0]", "jmp~FOO"]], [2, 1, 198, 2, 0, 5, 0, 0, 19, 12, 0.009588268471517203, ["add     rax, 1", "mov     dword ptr [rdx], 0", "add     rdx, 20h", "cmp     rax, rbp", "jbe     short loc_FC58"], ["add~rax,0", "mov~<TAG>,0", "add~rdx,<STR>", "cmp~rax,rbp", "jbe~FOO"]], [0, 0, 198, 0, 0, 1, 0, 0, 20, 11, 0.010024098856586167, ["mov     [a], rax"], ["mov~<TAG>,rax"]], [0, 0, 198, 0, 0, 3, 0, 0, 26, 26, 0.1794595703225145, ["cmp     a_allocated_0, r13", "mov     rcx, [a+8]", "jbe     loc_10070"], ["cmp~a_allocated_0,r13", "mov~rcx,[a+0]", "jbe~FOO"]], [0, 0, 198, 0, 0, 3, 0, 1, 26, 27, 0.004845408398707891, ["mov     arg_index, rsi", "mov     [rsp+88h+arg_posn], arg_posn_0", "jmp     loc_FA67"], ["mov~arg_index,rsi", "mov~[rsp+0],arg_posn_0", "jmp~FOO"]], [1, 0, 198, 1, 0, 7, 0, 1, 19, 3, 0.032866738450494794, ["mov     rsi, a_allocated_0", "mov     [rsp+88h+a_allocated], a_allocated_0", "mov     [rsp+88h+d_allocated], r10", "shl     rsi, 5; size", "cmp     [rsp+88h+src], rcx", "mov     [rsp+88h+var_58], r8", "jz      loc_10428"], ["mov~rsi,a_allocated_0", "mov~[rsp+0],a_allocated_0", "mov~[rsp+0],r10", "shl~rsi,0", "cmp~[rsp+0],rcx", "mov~[rsp+0],r8", "jz~FOO"]], [2, 0, 198, 1, 0, 5, 0, 0, 14, 9, 0.05327385530431216, ["add     np, 1", "movzx   edi, byte ptr [np]", "lea     r11d, [rdi-30h]", "cmp     r11b, 9", "jbe     short loc_FE65"], ["add~np,0", "movzx~edi,<TAG>", "lea~r11d,[rdi-30h]+0]", "cmp~r11b,0", "jbe~FOO"]], [1, 0, 198, 1, 0, 5, 1, 1, 18, 10, 0.14456750243552274, ["shl     rbp, 5", "lea     rax, [rcx+rbp]", "mov     edx, [rax]", "test    edx, edx", "jnz     loc_10136"], ["shl~rbp,0", "lea~rax,<TAG>", "mov~edx,<TAG>", "test~edx,edx", "jnz~FOO"]], [0, 0, 198, 0, 0, 1, 1, 0, 16, 12, 0.03984002461159822, ["xor     esi, esi"], ["xor~esi,esi"]], [1, 0, 198, 0, 0, 2, 0, 1, 15, 8, 0.05370968568938112, ["cmp     dil, 24h ; '$'", "jnz     loc_FB9A"], ["cmp~dil,0", "jnz~FOO"]], [1, 0, 198, 2, 0, 6, 0, 1, 27, 25, 0.1773060554786443, ["mov     rax, [a]", "mov     rdx, rax", "shl     rdx, 5", "add     rdx, rcx", "cmp     rax, r13", "ja      short loc_FAA6"], ["mov~rax,<TAG>", "mov~rdx,rax", "shl~rdx,0", "add~rdx,rcx", "cmp~rax,r13", "ja~FOO"]], [0, 0, 198, 0, 0, 2, 0, 1, 31, 26, 0.029098087473721994, ["mov     [a+8], rcx", "jmp     loc_FA74"], ["mov~[a+0],rcx", "jmp~FOO"]], [0, 0, 198, 0, 0, 1, 0, 0, 28, 27, 0.00915243808644824, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [2, 0, 198, 0, 0, 5, 0, 1, 19, 9, 0.13259498538686357, ["mov     dword ptr [rax], 5", "movzx   eax, byte ptr [rbx]", "lea     rcx, [rbx+1]", "cmp     al, 2Eh ; '.'", "jnz     loc_F9BD"], ["mov~<TAG>,0", "movzx~eax,<TAG>", "lea~rcx,[rbx+0]", "cmp~al,0", "jnz~FOO"]], [0, 0, 1, 0, 0, 8, 1, 0, 2, -1, 0.0002649165085713309, ["lea     rax, [rbp+rbp*4+0]", "lea     rax, [rbp+rax*2+0]", "mov     [rcx+rax*8], cp", "mov     rax, [rsp+88h+max_width_length]", "mov     [d+10h], rax", "mov     rax, [rsp+88h+max_precision_length]", "mov     [d+18h], rax", "xor     eax, eax"], ["lea~rax,[rbp+0]", "lea~rax,[rbp+0]", "mov~<TAG>,cp", "mov~rax,[rsp+0]", "mov~[d+0],rax", "mov~rax,[rsp+0]", "mov~[d+0],rax", "xor~eax,eax"]], [2, 0, 198, 1, 0, 6, 0, 1, 17, 11, 0.04073732246321079, ["mov     rdi, 1999999999999999h", "sub     eax, 30h ; '0'", "mov     rdx, r8", "cmp     n, rdi", "cdqe", "ja      short loc_FEA0"], ["mov~rdi,0", "sub~eax,0", "mov~rdx,r8", "cmp~n,rdi", "cdqe~", "ja~FOO"]], [1, 0, 198, 0, 0, 2, 0, 0, 20, 8, 0.04209608778136697, ["cmp     dil, 9", "jbe     short loc_FE82"], ["cmp~dil,0", "jbe~FOO"]], [1, 0, 198, 1, 1, 14, 0, 2, 23, 36, 0.0, ["mov     rsi, [rsp+88h+src]; src", "shl     rax, 5", "mov     rdi, memory; dest", "mov     rdx, rax; n", "mov     [rsp+88h+a_allocated], r9", "mov     [rsp+88h+d_allocated], r10", "mov     [rsp+88h+var_58], r8", "call    _memcpy", "mov     r9, [rsp+88h+a_allocated]", "mov     rcx, rax", "mov     r10, [rsp+88h+d_allocated]", "mov     rax, [a]", "mov     r8, [rsp+88h+var_58]", "jmp     loc_102AE"], ["mov~rsi,[rsp+0]", "shl~rax,0", "mov~rdi,memory", "mov~rdx,rax", "mov~[rsp+0],r9", "mov~[rsp+0],r10", "mov~[rsp+0],r8", "call~FOO", "mov~r9,[rsp+0]", "mov~rcx,rax", "mov~r10,[rsp+0]", "mov~rax,<TAG>", "mov~r8,[rsp+0]", "jmp~FOO"]], [0, 0, 198, 0, 0, 3, 0, 1, 22, 36, 0.03276419012459622, ["cmp     [rsp+88h+src], rdx", "mov     rax, [a]", "jz      loc_10460"], ["cmp~[rsp+0],rdx", "mov~rax,<TAG>", "jz~FOO"]], [1, 0, 198, 0, 0, 3, 1, 0, 14, 31, 0.4384710044608522, ["xor     eax, eax", "mov     esi, 1", "nop     dword ptr [flags+00h]"], ["xor~eax,eax", "mov~esi,0", "nop~[word ptr [flags+0]"]], [1, 0, 198, 0, 0, 3, 0, 1, 21, 32, 0.1374660308670461, ["mov     dword ptr [rax], 5", "mov     rbx, cp", "jmp     loc_F9BD"], ["mov~<TAG>,0", "mov~rbx,cp", "jmp~FOO"]], [1, 0, 198, 0, 0, 2, 0, 1, 13, 9, 0.29874891042403734, ["cmp     al, 2Eh ; '.'", "jz      loc_FC95"], ["cmp~al,0", "jz~FOO"]], [0, 0, 198, 0, 0, 2, 1, 1, 21, 1, 0.03417422960570169, ["test    memory, memory", "jz      loc_1049D"], ["test~memory,memory", "jz~FOO"]], [0, 0, 198, 0, 1, 8, 0, 2, 20, 2, 0.014343947085063837, ["mov     rdi, memory_size; size", "call    _malloc", "mov     rdx, [rsp+88h+src]", "mov     rcx, rax", "mov     r9, [rsp+88h+a_allocated]", "mov     r10, [rsp+88h+d_allocated]", "mov     r8, [rsp+88h+var_58]", "jmp     loc_10297"], ["mov~rdi,memory_size", "call~FOO", "mov~rdx,[rsp+0]", "mov~rcx,rax", "mov~r9,[rsp+0]", "mov~r10,[rsp+0]", "mov~r8,[rsp+0]", "jmp~FOO"]], [0, 0, 198, 0, 1, 7, 0, 1, 20, 2, 0.014343947085063837, ["mov     rdi, rcx; ptr", "call    _realloc", "mov     rdx, [a+8]", "mov     r8, [rsp+88h+var_58]", "mov     rcx, rax", "mov     r10, [rsp+88h+d_allocated]", "mov     r9, [rsp+88h+a_allocated]"], ["mov~rdi,rcx", "call~FOO", "mov~rdx,[a+0]", "mov~r8,[rsp+0]", "mov~rcx,rax", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]"]], [0, 0, 198, 1, 0, 2, 0, 0, 18, 11, 0.0, ["lea     rdx, [n+n*4]", "add     rdx, rdx"], ["lea~rdx,<TAG>", "add~rdx,rdx"]], [1, 0, 198, 0, 0, 3, 0, 1, 14, 8, 0.16992257601394659, ["cmp     byte ptr [rbx+1], 2Ah ; '*'", "mov     [r12+30h], rbx", "jnz     loc_FE1C"], ["cmp~[yte ptr [rbx+0],0", "mov~[r12+0],rbx", "jnz~FOO"]], [0, 0, 198, 0, 0, 1, 0, 0, 18, 10, 0.04160898323334872, ["mov     rbx, np"], ["mov~rbx,np"]], [2, 1, 198, 2, 0, 5, 0, 0, 29, 26, 0.009588268471517203, ["add     rax, 1", "mov     dword ptr [rdx], 0", "add     rdx, 20h", "cmp     rax, r13", "jbe     short loc_FA90"], ["add~rax,0", "mov~<TAG>,0", "add~rdx,<STR>", "cmp~rax,r13", "jbe~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 58h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     d", "pop     a", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~d", "pop~a", "retn"]], [2, 0, 1, 0, 1, 4, 0, 2, 20, -1, 0.0009143892392623357, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch", "mov     eax, 0FFFFFFFFh", "jmp     loc_F894"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 198, 0, 0, 1, 0, 0, 30, 25, 0.010024098856586167, ["mov     [a], rax"], ["mov~<TAG>,rax"]], [1, 0, 198, 0, 0, 2, 0, 1, 20, 11, 0.005665795005896529, ["cmp     dil, 9", "ja      loc_1002B; jumptable 000000000000FA45 default case"], ["cmp~dil,0", "ja~FOO"]], [1, 0, 198, 2, 0, 9, 2, 1, 19, 9, 0.05194072706763062, ["xor     r11d, r11d", "add     rdx, rax", "movsx   eax, byte ptr [np+1]", "setb    r11b", "add     np, 1", "mov     rsi, rdx", "test    r11, r11", "lea     edi, [rax-30h]", "jnz     loc_103AB"], ["xor~r11d,r11d", "add~rdx,rax", "movsx~eax,[yte ptr [np+0]", "setb~r11b", "add~np,0", "mov~rsi,rdx", "test~r11,r11", "lea~edi,[rax-30h]+0]", "jnz~FOO"]], [0, 0, 198, 1, 0, 2, 0, 0, 21, 11, 0.0, ["lea     rdx, [n+n*4]", "add     rdx, rdx"], ["lea~rdx,<TAG>", "add~rdx,rdx"]], [2, 0, 198, 1, 0, 6, 0, 1, 20, 11, 0.04073732246321079, ["mov     rsi, 1999999999999999h", "sub     eax, 30h ; '0'", "mov     rdx, r8", "cmp     n, rsi", "cdqe", "ja      short loc_10374"], ["mov~rsi,0", "sub~eax,0", "mov~rdx,r8", "cmp~n,rsi", "cdqe~", "ja~FOO"]], [1, 0, 198, 1, 0, 8, 0, 1, 28, 29, 0.02890153651574972, ["mov     rsi, a_allocated_0", "mov     [rsp+88h+var_40], a_allocated_0", "mov     [rsp+88h+a_allocated], r10", "shl     rsi, 5; size", "cmp     [rsp+88h+src], rcx", "mov     [rsp+88h+d_allocated], r8", "mov     dword ptr [rsp+88h+var_58], r11d", "jz      loc_1014B"], ["mov~rsi,a_allocated_0", "mov~[rsp+0],a_allocated_0", "mov~[rsp+0],r10", "shl~rsi,0", "cmp~[rsp+0],rcx", "mov~[rsp+0],r8", "mov~[word ptr [rsp+0],r11d", "jz~FOO"]], [0, 0, 198, 0, 0, 1, 0, 0, 29, 23, 0.08406399015536072, ["mov     [rax], r11d"], ["mov~<TAG>,r11d"]], [1, 0, 198, 1, 0, 5, 0, 1, 21, 10, 0.004845408398707891, ["sub     eax, 30h ; '0'", "mov     rdx, r8", "mov     rbx, np", "cdqe", "jmp     loc_FEA3"], ["sub~eax,0", "mov~rdx,r8", "mov~rbx,np", "cdqe~", "jmp~FOO"]], [0, 0, 5, 0, 0, 3, 0, 1, 28, -1, 0.000666564118340768, ["mov     rcx, [a+8]", "cmp     [rsp+88h+src], rcx", "jz      short loc_102DA"], ["mov~rcx,[a+0]", "cmp~[rsp+0],rcx", "jz~FOO"]], [0, 0, 198, 0, 1, 8, 1, 2, 27, 23, 0.0189458032097626, ["mov     rdi, memory_size; size", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "mov     r8, [rsp+88h+var_58]", "mov     r10, [rsp+88h+d_allocated]", "mov     r9, [rsp+88h+a_allocated]", "jz      loc_102B7"], ["mov~rdi,memory_size", "call~FOO", "test~rax,rax", "mov~rcx,rax", "mov~r8,[rsp+0]", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "jz~FOO"]], [0, 0, 4, 0, 1, 2, 0, 1, 18, -1, 0.006836555059905319, ["mov     rdi, rcx; ptr", "call    _free"], ["mov~rdi,rcx", "call~FOO"]], [3, 0, 198, 0, 0, 11, 0, 0, 15, 7, 0.14836179049377018, ["mov     rsi, [rsp+88h+max_precision_length]", "lea     rbp, [rbx+2]", "mov     eax, 2", "mov     [r12+38h], cp", "cmp     rsi, 2", "cmovnb  rax, rsi", "mov     [rsp+88h+max_precision_length], rax", "movsx   eax, byte ptr [rbx+2]", "lea     edx, [rax-30h]", "cmp     dl, 9", "jbe     loc_10338"], ["mov~rsi,[rsp+0]", "lea~rbp,[rbx+0]", "mov~eax,0", "mov~[r12+0],cp", "cmp~rsi,0", "cmovnb~rax,rsi", "mov~[rsp+0],rax", "movsx~eax,[yte ptr [rbx+0]", "lea~edx,[rax-30h]+0]", "cmp~dl,0", "jbe~FOO"]], [0, 0, 198, 0, 0, 7, 0, 1, 23, 22, 0.4412654463415885, ["mov     [r12+48h], bpl; jumptable 000000000000FA45 case 0", "mov     rax, [d]", "mov     [r12+8], rbx", "lea     rbp, [rax+1]", "cmp     r10, rbp", "mov     [d], rbp", "ja      loc_FB60"], ["mov~[r12+0],bpl", "mov~rax,<TAG>", "mov~[r12+0],rbx", "lea~rbp,[rax+0]", "cmp~r10,rbp", "mov~<TAG>,rbp", "ja~FOO"]], [0, 0, 3, 0, 0, 3, 0, 1, 19, -1, 0.009887367755388062, ["mov     rdi, [d+8]; ptr", "cmp     [rsp+88h+var_60], rdi", "jz      short loc_102DA"], ["mov~rdi,[d+0]", "cmp~[rsp+0],rdi", "jz~FOO"]], [0, 0, 198, 0, 1, 9, 1, 2, 29, 28, 0.012352800423866415, ["mov     rdi, memory_size; size", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "mov     r11d, dword ptr [rsp+88h+var_58]", "mov     r8, [rsp+88h+d_allocated]", "mov     r10, [rsp+88h+a_allocated]", "mov     r9, [rsp+88h+var_40]", "jz      loc_102CA"], ["mov~rdi,memory_size", "call~FOO", "test~rax,rax", "mov~rcx,rax", "mov~r11d,[word ptr [rsp+0]", "mov~r8,[rsp+0]", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "jz~FOO"]], [0, 0, 2, 0, 1, 1, 0, 1, 20, -1, 0.0, ["call    _free"], ["call~FOO"]], [1, 0, 198, 2, 0, 9, 2, 1, 22, 9, 0.05194072706763062, ["xor     r11d, r11d", "add     rdx, rax", "movsx   eax, byte ptr [rbp+1]", "setb    r11b", "add     rbp, 1", "mov     rcx, rdx", "test    r11, r11", "lea     edi, [rax-30h]", "jz      short loc_10402"], ["xor~r11d,r11d", "add~rdx,rax", "movsx~eax,[yte ptr [rbp+0]", "setb~r11b", "add~rbp,0", "mov~rcx,rdx", "test~r11,r11", "lea~edi,[rax-30h]+0]", "jz~FOO"]], [1, 0, 198, 0, 0, 3, 0, 1, 16, 6, 0.10565041275701174, ["mov     rbx, [r12+40h]", "cmp     rbx, 0FFFFFFFFFFFFFFFFh", "jz      loc_10313"], ["mov~rbx,[r12+0]", "cmp~rbx,0", "jz~FOO"]], [1, 0, 198, 0, 0, 2, 0, 1, 18, 7, 0.05370968568938112, ["cmp     cl, 24h ; '$'", "jnz     loc_FCD4"], ["cmp~cl,0", "jnz~FOO"]], [1, 0, 198, 1, 0, 3, 0, 1, 22, 6, 0.04214736194431626, ["mov     [r12+28h], rbp", "add     rbx, 2", "jmp     loc_FBBD"], ["mov~[r12+0],rbp", "add~rbx,0", "jmp~FOO"]], [1, 0, 198, 0, 0, 3, 0, 1, 21, 7, 0.04207045069989233, ["lea     rbp, [n-1]", "cmp     rbp, 0FFFFFFFFFFFFFFFDh", "ja      loc_1002B; jumptable 000000000000FA45 default case"], ["lea~rbp,[n-1]+0]", "cmp~rbp,0", "ja~FOO"]], [2, 0, 198, 1, 0, 6, 0, 1, 9, 22, 0.044352150951135726, ["mov     rsi, 1999999999999999h", "sub     eax, 30h ; '0'", "mov     rcx, r8", "cmp     n, rsi", "cdqe", "ja      short loc_FD84"], ["mov~rsi,0", "sub~eax,0", "mov~rcx,r8", "cmp~n,rsi", "cdqe~", "ja~FOO"]], [1, 0, 198, 1, 0, 5, 1, 1, 20, 33, 0.14864379838999128, ["shl     rbx, 5", "lea     rax, [rcx+rbx]", "mov     edx, [rax]", "test    edx, edx", "jnz     loc_10226"], ["shl~rbx,0", "lea~rax,<TAG>", "mov~edx,<TAG>", "test~edx,edx", "jnz~FOO"]], [0, 0, 198, 0, 0, 3, 0, 1, 30, 27, 0.011780238937599344, ["mov     memory, [rsp+88h+src]", "cmp     rax, [a+8]", "jz      loc_10173"], ["mov~memory,[rsp+0]", "cmp~rax,[a+0]", "jz~FOO"]], [0, 0, 198, 0, 0, 3, 0, 0, 17, 5, 0.1506434907450136, ["cmp     a_allocated_0, rbx", "mov     rcx, [a+8]", "jbe     loc_10237"], ["cmp~a_allocated_0,rbx", "mov~rcx,[a+0]", "jbe~FOO"]], [0, 0, 198, 0, 0, 3, 0, 1, 18, 6, 0.004845408398707891, ["mov     rbx, rsi", "mov     [rsp+88h+arg_posn], arg_posn_0", "jmp     loc_FCE3"], ["mov~rbx,rsi", "mov~[rsp+0],arg_posn_0", "jmp~FOO"]], [0, 0, 198, 0, 0, 3, 0, 1, 25, 6, 0.04214736194431626, ["mov     [r12+40h], rbx", "lea     rbp, [rsi+2]", "jmp     loc_FCE3"], ["mov~[r12+0],rbx", "lea~rbp,[rsi+0]", "jmp~FOO"]], [0, 0, 198, 0, 0, 1, 0, 0, 18, 35, 0.10777829051940728, ["mov     rax, [a]"], ["mov~rax,<TAG>"]], [1, 0, 198, 1, 1, 15, 0, 2, 30, 27, 0.011882787263497924, ["mov     rdx, [a]", "mov     rsi, [rsp+88h+src]; src", "mov     rdi, memory; dest", "mov     [rsp+88h+var_40], r9", "mov     [rsp+88h+a_allocated], r10", "mov     [rsp+88h+d_allocated], r8", "mov     dword ptr [rsp+88h+var_58], r11d", "shl     rdx, 5; n", "call    _memcpy", "mov     r9, [rsp+88h+var_40]", "mov     r10, [rsp+88h+a_allocated]", "mov     rcx, rax", "mov     r8, [rsp+88h+d_allocated]", "mov     r11d, dword ptr [rsp+88h+var_58]", "jmp     loc_100EE"], ["mov~rdx,<TAG>", "mov~rsi,[rsp+0]", "mov~rdi,memory", "mov~[rsp+0],r9", "mov~[rsp+0],r10", "mov~[rsp+0],r8", "mov~[word ptr [rsp+0],r11d", "shl~rdx,0", "call~FOO", "mov~r9,[rsp+0]", "mov~r10,[rsp+0]", "mov~rcx,rax", "mov~r8,[rsp+0]", "mov~r11d,[word ptr [rsp+0]", "jmp~FOO"]], [1, 0, 198, 2, 0, 5, 0, 1, 19, 34, 0.14690047684971544, ["mov     rdx, rax", "shl     rdx, 5", "add     rdx, rcx", "cmp     rax, rbx", "ja      short loc_FD1E"], ["mov~rdx,rax", "shl~rdx,0", "add~rdx,rcx", "cmp~rax,rbx", "ja~FOO"]], [0, 0, 198, 0, 0, 2, 0, 1, 23, 35, 0.03363585089473414, ["mov     [a+8], rcx", "jmp     loc_FCF3"], ["mov~[a+0],rcx", "jmp~FOO"]], [0, 0, 198, 0, 0, 1, 0, 0, 20, 36, 0.00915243808644824, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [6, 0, 198, 0, 0, 17, 0, 1, 3, 17, 0.43152335538122344, ["lea     c, [rbp+rbp*4+0]", "mov     r13, r8", "lea     rax, [rbp+rax*2+0]", "lea     r12, [rcx+rax*8]", "mov     [r12], rdi", "mov     dword ptr [r12+10h], 0", "mov     qword ptr [r12+18h], 0", "mov     qword ptr [r12+20h], 0", "mov     [r12+28h], r8", "mov     qword ptr [r12+30h], 0", "mov     qword ptr [r12+38h], 0", "mov     [r12+40h], r8", "mov     [r12+50h], r8", "movsx   eax, byte ptr [rdi+1]", "lea     edx, [rax-30h]", "cmp     dl, 9", "ja      short loc_F933"], ["lea~c,[rbp+0]", "mov~r13,r8", "lea~rax,[rbp+0]", "lea~r12,<TAG>", "mov~<TAG>,rdi", "mov~[word ptr [r12+0],0", "mov~[word ptr [r12+0],0", "mov~[word ptr [r12+0],0", "mov~[r12+0],r8", "mov~[word ptr [r12+0],0", "mov~[word ptr [r12+0],0", "mov~[r12+0],r8", "mov~[r12+0],r8", "movsx~eax,[yte ptr [rdi+0]", "lea~edx,[rax-30h]+0]", "cmp~dl,0", "ja~FOO"]], [1, 0, 198, 1, 1, 15, 0, 2, 28, 22, 0.014126031892529355, ["lea     rax, [rbp+rbp*4+0]", "mov     rsi, [rsp+88h+var_60]; src", "mov     rdi, memory; dest", "mov     [rsp+88h+a_allocated], r9", "mov     [rsp+88h+d_allocated], r10", "lea     rdx, [rbp+rax*2+0]", "mov     [rsp+88h+var_58], r8", "shl     rdx, 3; n", "call    _memcpy", "mov     rbp, [d]", "mov     rcx, rax", "mov     r9, [rsp+88h+a_allocated]", "mov     r10, [rsp+88h+d_allocated]", "mov     r8, [rsp+88h+var_58]", "jmp     loc_FB57"], ["lea~rax,[rbp+0]", "mov~rsi,[rsp+0]", "mov~rdi,memory", "mov~[rsp+0],r9", "mov~[rsp+0],r10", "lea~rdx,[rbp+0]", "mov~[rsp+0],r8", "shl~rdx,0", "call~FOO", "mov~rbp,<TAG>", "mov~rcx,rax", "mov~r9,[rsp+0]", "mov~r10,[rsp+0]", "mov~r8,[rsp+0]", "jmp~FOO"]], [0, 0, 198, 0, 0, 4, 0, 1, 28, 22, 0.014083303423404948, ["mov     memory, [rsp+88h+var_60]", "cmp     rax, [d+8]", "mov     rbp, [d]", "jz      loc_101DA"], ["mov~memory,[rsp+0]", "cmp~rax,[d+0]", "mov~rbp,<TAG>", "jz~FOO"]], [0, 0, 198, 0, 0, 1, 0, 1, 4, 20, 0.06001640773214378, ["jmp     loc_FD3E"], ["jmp~FOO"]], [1, 0, 198, 0, 0, 5, 0, 1, 25, 28, 0.008716607701379275, ["mov     rsi, [rsp+88h+arg_posn]", "cmp     rsi, 0FFFFFFFFFFFFFFFFh", "lea     rax, [rsi+1]", "mov     [r12+50h], rsi", "jz      loc_1002B; jumptable 000000000000FA45 default case"], ["mov~rsi,[rsp+0]", "cmp~rsi,0", "lea~rax,[rsi+0]", "mov~[r12+0],rsi", "jz~FOO"]], [1, 0, 198, 0, 0, 5, 0, 1, 13, 7, 0.10749628262318618, ["mov     rsi, [rsp+88h+arg_posn]", "cmp     rsi, 0FFFFFFFFFFFFFFFFh", "lea     rax, [rsi+1]", "mov     [r12+28h], rsi", "jz      loc_1002B; jumptable 000000000000FA45 default case"], ["mov~rsi,[rsp+0]", "cmp~rsi,0", "lea~rax,[rsi+0]", "mov~[r12+0],rsi", "jz~FOO"]], [2, 0, 198, 1, 0, 4, 0, 1, 13, 18, 0.04207045069989233, ["mov     r13, rcx", "sub     r13, 1", "cmp     r13, 0FFFFFFFFFFFFFFFDh", "ja      loc_1002B; jumptable 000000000000FA45 default case"], ["mov~r13,rcx", "sub~r13,0", "cmp~r13,0", "ja~FOO"]], [1, 0, 198, 0, 0, 2, 0, 1, 12, 22, 0.009280623493821465, ["cmp     r11b, 9", "ja      loc_1002B; jumptable 000000000000FA45 default case"], ["cmp~r11b,0", "ja~FOO"]], [1, 0, 198, 0, 0, 5, 0, 1, 17, 7, 0.007921858175665283, ["mov     rsi, [rsp+88h+arg_posn]", "cmp     rsi, 0FFFFFFFFFFFFFFFFh", "lea     rax, [rsi+1]", "mov     [r12+40h], rsi", "jz      loc_1002B; jumptable 000000000000FA45 default case"], ["mov~rsi,[rsp+0]", "cmp~rsi,0", "lea~rax,[rsi+0]", "mov~[r12+0],rsi", "jz~FOO"]], [1, 0, 198, 0, 0, 2, 0, 1, 23, 11, 0.005665795005896529, ["cmp     dil, 9", "ja      loc_1002B; jumptable 000000000000FA45 default case"], ["cmp~dil,0", "ja~FOO"]], [1, 0, 198, 0, 0, 5, 0, 1, 4, 16, 0.4741321847920833, ["movzx   eax, byte ptr [rbx]", "lea     rdx, [rbx+1]", "mov     rcx, rdx", "cmp     al, 27h ; '''", "jnz     short loc_F910"], ["movzx~eax,<TAG>", "lea~rdx,[rbx+0]", "mov~rcx,rdx", "cmp~al,0", "jnz~FOO"]], [1, 0, 198, 0, 0, 2, 0, 1, 6, 14, 0.4614161923806594, ["cmp     al, 2Bh ; '+'", "jz      short loc_F960"], ["cmp~al,0", "jz~FOO"]], [2, 1, 198, 2, 0, 5, 0, 0, 21, 35, 0.009588268471517203, ["add     rax, 1", "mov     dword ptr [rdx], 0", "add     rdx, 20h", "cmp     rax, rbx", "jbe     short loc_FD08"], ["add~rax,0", "mov~<TAG>,0", "add~rdx,<STR>", "cmp~rax,rbx", "jbe~FOO"]], [0, 1, 198, 0, 0, 2, 0, 1, 7, 13, 0.45710916269291907, ["cmp     al, 20h ; ' '", "jz      short loc_F970"], ["cmp~al,<STR>", "jz~FOO"]], [0, 0, 198, 0, 0, 1, 0, 0, 22, 34, 0.010024098856586167, ["mov     [a], rax"], ["mov~<TAG>,rax"]], [1, 0, 198, 0, 0, 2, 0, 1, 8, 12, 0.45275085884222943, ["cmp     al, 23h ; '#'", "jz      short loc_F980"], ["cmp~al,0", "jz~FOO"]], [0, 0, 198, 0, 0, 9, 0, 1, 26, 24, 0.037045582730861906, ["lea     rax, [d_allocated_0+d_allocated_0*4]", "mov     rdi, [d+8]; ptr", "cmp     [rsp+88h+var_60], rdi", "mov     [rsp+88h+a_allocated], a_allocated_0", "mov     [rsp+88h+d_allocated], d_allocated_0", "lea     rax, [d_allocated_0+rax*2]", "mov     [rsp+88h+var_58], r8", "lea     rsi, ds:0[rax*8]; size", "jz      loc_101B7"], ["lea~rax,<TAG>", "mov~rdi,[d+0]", "cmp~[rsp+0],rdi", "mov~[rsp+0],a_allocated_0", "mov~[rsp+0],d_allocated_0", "lea~rax,<TAG>", "mov~[rsp+0],r8", "lea~rsi,<TAG>", "jz~FOO"]], [1, 0, 198, 0, 0, 2, 0, 1, 9, 11, 0.4483412808285905, ["cmp     al, 30h ; '0'", "jz      short loc_F990"], ["cmp~al,0", "jz~FOO"]], [1, 0, 198, 0, 0, 2, 0, 1, 10, 10, 0.4438804286520023, ["cmp     al, 49h ; 'I'", "jnz     short loc_F9A0"], ["cmp~al,0", "jnz~FOO"]], [1, 0, 198, 0, 0, 2, 1, 0, 11, 18, 0.00033328205917038404, ["or      dword ptr [r12+10h], 40h", "xchg    ax, ax"], ["or~[word ptr [r12+0],0", "xchg~ax,ax"]], [0, 0, 198, 0, 0, 1, 0, 0, 6, 17, 0.03625083320514793, ["mov     rbx, rdx"], ["mov~rbx,rdx"]], [1, 0, 198, 0, 0, 2, 1, 1, 5, 18, 0.004281392606265703, ["or      dword ptr [r12+10h], 1", "jmp     short loc_F930"], ["or~[word ptr [r12+0],0", "jmp~FOO"]], [1, 0, 198, 0, 0, 2, 1, 1, 7, 18, 0.00012818540737322462, ["or      dword ptr [r12+10h], 4", "jmp     short loc_F930"], ["or~[word ptr [r12+0],0", "jmp~FOO"]], [1, 0, 198, 0, 0, 2, 1, 1, 8, 18, 0.0001794595703225145, ["or      dword ptr [r12+10h], 8", "jmp     short loc_F930"], ["or~[word ptr [r12+0],0", "jmp~FOO"]], [1, 0, 198, 0, 0, 2, 1, 1, 9, 18, 0.00023073373327180433, ["or      dword ptr [r12+10h], 10h", "jmp     short loc_F930"], ["or~[word ptr [r12+0],0", "jmp~FOO"]], [0, 1, 198, 0, 0, 2, 1, 1, 10, 18, 0.0002820078962210942, ["or      dword ptr [r12+10h], 20h", "jmp     short loc_F930"], ["or~[word ptr [r12+0],<STR>", "jmp~FOO"]], [1, 0, 198, 1, 0, 5, 0, 1, 13, 21, 0.004845408398707891, ["sub     eax, 30h ; '0'", "mov     rcx, r8", "mov     rsi, rbx", "cdqe", "jmp     loc_FD87"], ["sub~eax,0", "mov~rcx,r8", "mov~rsi,rbx", "cdqe~", "jmp~FOO"]], [0, 0, 198, 0, 0, 1, 0, 0, 16, 9, 0.05283802491924319, ["mov     rdx, cp"], ["mov~rdx,cp"]], [0, 0, 198, 0, 0, 2, 0, 1, 14, 17, 0.04214736194431626, ["lea     rbx, [rsi+2]", "jmp     loc_F933"], ["lea~rbx,[rsi+0]", "jmp~FOO"]], [0, 0, 198, 0, 0, 2, 0, 0, 5, 19, 0.06045223811721274, ["mov     rdx, cp", "nop     dword ptr [rax+00000000h]"], ["mov~rdx,cp", "nop~[word ptr [rax+0]"]], [0, 0, 198, 0, 0, 3, 0, 1, 20, 10, 0.005665795005896529, ["movzx   eax, byte ptr [rbx]", "lea     rcx, [rbx+1]", "jmp     loc_F9B5"], ["movzx~eax,<TAG>", "lea~rcx,[rbx+0]", "jmp~FOO"]], [2, 0, 198, 1, 0, 5, 0, 0, 17, 8, 0.05327385530431216, ["add     np, 1", "movzx   ecx, byte ptr [np]", "lea     esi, [rcx-30h]", "cmp     sil, 9", "jbe     short loc_1033B"], ["add~np,0", "movzx~ecx,<TAG>", "lea~esi,[rcx-30h]+0]", "cmp~sil,0", "jbe~FOO"]], [2, 0, 198, 1, 0, 5, 0, 0, 6, 18, 0.060888068502281706, ["add     np, 1", "movzx   ecx, byte ptr [np]", "lea     esi, [rcx-30h]", "cmp     sil, 9", "jbe     short loc_FD48"], ["add~np,0", "movzx~ecx,<TAG>", "lea~esi,[rcx-30h]+0]", "cmp~sil,0", "jbe~FOO"]], [0, 0, 198, 0, 0, 1, 1, 0, 19, 12, 0.03984002461159822, ["xor     ecx, ecx"], ["xor~ecx,ecx"]], [0, 0, 198, 0, 0, 1, 0, 0, 21, 10, 0.04160898323334872, ["mov     rsi, np"], ["mov~rsi,np"]], [0, 0, 198, 1, 0, 2, 0, 0, 10, 22, 0.0, ["lea     rcx, [n+n*4]", "add     rcx, rcx"], ["lea~rcx,<TAG>", "add~rcx,rcx"]], [0, 0, 198, 0, 0, 1, 0, 0, 10, 21, 0.045223811721273655, ["mov     rsi, rbx"], ["mov~rsi,rbx"]], [1, 0, 198, 1, 0, 5, 0, 1, 24, 10, 0.004845408398707891, ["sub     eax, 30h ; '0'", "mov     rdx, r8", "mov     rsi, np", "cdqe", "jmp     short loc_10377"], ["sub~eax,0", "mov~rdx,r8", "mov~rsi,np", "cdqe~", "jmp~FOO"]], [1, 0, 198, 0, 0, 2, 0, 1, 11, 9, 0.43936830231246476, ["cmp     al, 2Ah ; '*'", "jz      loc_FB69"], ["cmp~al,0", "jz~FOO"]], [2, 0, 198, 1, 0, 6, 0, 0, 13, 12, 0.022740091268010052, ["mov     [r12+18h], rbx", "movzx   eax, byte ptr [rbx]", "mov     rsi, rbx", "sub     eax, 30h ; '0'", "cmp     al, 9", "jbe     short loc_FDE7"], ["mov~[r12+0],rbx", "movzx~eax,<TAG>", "mov~rsi,rbx", "sub~eax,0", "cmp~al,0", "jbe~FOO"]], [1, 0, 198, 1, 0, 2, 0, 0, 15, 13, 0.0, ["mov     rbx, cp", "add     cp, 1"], ["mov~rbx,cp", "add~cp,0"]], [1, 0, 198, 0, 0, 3, 0, 0, 12, 10, 0.28498179767215304, ["lea     esi, [rax-30h]", "cmp     sil, 9", "jbe     loc_FDC8"], ["lea~esi,[rax-30h]+0]", "cmp~sil,0", "jbe~FOO"]], [0, 0, 198, 0, 0, 3, 0, 0, 14, 6, 0.10398400246115982, ["mov     rbp, rsi", "mov     rbx, cp", "mov     [rsp+88h+arg_posn], arg_posn_0"], ["mov~rbp,rsi", "mov~rbx,cp", "mov~[rsp+0],arg_posn_0"]]], "func_feature": [18, 51, 158, 3, 199, 316, 1, 777, 0.08517, 1, 67], "succs": [[67, 19], [0, 67], [176], [2, 167], [26, 34], [60, 4], [145, 162], [163, 6], [17], [8, 196], [25, 20], [10, 12], [10, 13], [10, 36], [10], [42, 150], [128, 15], [114], [17], [67], [21], [25, 20], [59], [5, 22], [21], [24, 11], [33], [67], [32, 68, 136, 73, 42, 79, 81, 82, 57, 27, 74], [45], [84, 29], [90], [80, 67], [44, 63], [33], [42, 28], [35, 14], [112], [37, 39], [48, 43], [39], [186, 39], [39], [48], [46, 47], [84, 45], [59], [46], [49, 85], [85], [60], [50, 52], [50, 172], [50, 158], [50, 147], [99], [161, 55], [67], [94], [58, 100], [66, 134], [129, 60], [98, 60], [60], [145], [64, 166], [137], [160, 86], [67, 69], [67, 70], [67, 71], [72, 67], [67], [67], [75, 67], [67, 76], [67, 77], [67, 78], [67], [67], [67], [67], [83, 67], [1, 67], [112], [122], [96], [40, 136], [130, 87], [91, 156], [89, 107], [90], [91], [91], [94, 95], [100], [61, 103], [96], [116, 117], [99, 102], [41, 106], [108], [161, 101], [88, 105], [103], [121], [112, 119], [122], [120, 118], [144, 108], [154], [154, 110], [21], [112], [112, 119], [63, 111], [115], [115], [120], [30, 135], [126], [121, 124], [], [122], [88], [42, 131], [125, 109], [190], [190, 127], [138, 54], [136], [126], [123, 134], [132, 157], [137], [141, 183], [51, 93], [123, 139], [152, 137], [123], [16, 165], [164, 148], [141, 189], [23], [42, 143], [192, 191], [113, 38], [104, 152], [62, 151], [148], [148], [153], [104], [146, 155], [153], [168], [166, 159], [92], [92, 157], [185], [97, 42], [42, 198], [184, 42], [42, 182], [42, 149], [193, 42], [177, 3], [169, 178], [168, 170], [171, 179], [146], [180, 173], [53, 133], [181, 174], [194, 175], [176], [166], [176], [176], [176], [176], [176], [7], [187], [166], [188], [114], [187, 142], [65, 188], [128], [140], [192], [7], [140], [56, 197], [9, 18], [9], [114, 195], [23]], "fname": "printf_parse", "n_num": 199}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 0, 0, 0, 0.16666666666666666, ["xor     ebx, ebx", "nop     dword ptr [rax+rax+00000000h]"], ["xor~ebx,ebx", "nop~[word ptr [rax+0]"]], [2, 0, 3, 2, 1, 17, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15, rdx", "push    r13", "push    r12", "lea     r12, __frame_dummy_init_array_entry", "push    rbp", "lea     rbp, __do_global_dtors_aux_fini_array_entry", "push    rbx", "mov     r13d, edi", "mov     r14, rsi", "sub     rbp, r12", "sub     rsp, 8", "sar     rbp, 3", "call    _init_proc", "test    rbp, rbp", "jz      short loc_10506"], ["push~r15", "push~r14", "mov~r15,rdx", "push~r13", "push~r12", "lea~r12,<TAG>", "push~rbp", "lea~rbp,<TAG>", "push~rbx", "mov~r13d,edi", "mov~r14,rsi", "sub~rbp,r12", "sub~rsp,0", "sar~rbp,0", "call~FOO", "test~rbp,rbp", "jz~FOO"]], [1, 0, 2, 1, 1, 7, 0, 2, 2, 1, 0.16666666666666666, ["mov     rdx, r15", "mov     rsi, r14", "mov     edi, r13d", "call    qword ptr [r12+rbx*8]", "add     rbx, 1", "cmp     rbp, rbx", "jnz     short loc_104F0"], ["mov~rdx,r15", "mov~rsi,r14", "mov~edi,r13d", "call~<TAG>", "add~rbx,0", "cmp~rbp,rbx", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 5, 0, 34, 0.08333, 2, 4], "succs": [[2], [0, 3], [2, 3], []], "fname": "__libc_csu_init", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_csu_fini", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rdx, cs:__dso_handle", "xor     esi, esi", "jmp     ___cxa_atexit"], ["mov~rdx,<TAG>", "xor~esi,esi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 1, 3, 0.0, 1, 0], "succs": [[1], []], "fname": "atexit", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[2, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0.0, ["sub     rsp, 8; _fini", "add     rsp, 8", "retn"], ["sub~rsp,0", "add~rsp,0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 2], "succs": [[]], "fname": "term_proc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_toupper_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_toupper_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getenv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigprocmask:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigprocmask", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __snprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__snprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn raise:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "raise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn free:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn abort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __errno_location:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fdatasync:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fdatasync", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn error_at_line:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "error_at_line", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strncmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fpending:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigaction_0:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigaction_0", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn localeconv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "localeconv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fcntl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn clock_gettime:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "clock_gettime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn write:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "write", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn textdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fclose:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn bindtextdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dcgettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_get_mb_cur_max:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strlen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __stack_chk_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getopt_long:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbrtowc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dup2:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dup2", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __overflow:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__overflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strrchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ftruncate:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ftruncate", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn lseek:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __assert_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __strtoul_internal:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__strtoul_internal", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ioctl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn close:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn posix_fadvise:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "posix_fadvise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn read:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "read", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __libc_start_main:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_start_main", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fputs_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn calloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __memcpy_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__memcpy_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigemptyset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigemptyset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fileno:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn malloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fflush:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn nl_langinfo:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __freading:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn realloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn setlocale:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __printf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memmove:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn error:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fsync:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fsync", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn open:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fseeko:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dcngettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dcngettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __cxa_atexit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getpagesize:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getpagesize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigismember:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigismember", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fwrite:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbsinit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswprint:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp___cxa_finalize:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp___cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigaddset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigaddset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_tolower_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_tolower_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_b_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __sprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__sprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O3_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __gmon_start__:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__gmon_start__", "n_num": 1}
