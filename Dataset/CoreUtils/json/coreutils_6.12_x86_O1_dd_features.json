{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    rax ; __gmon_start__"], ["call~rax"]], [1, 0, 2, 1, 0, 4, 1, 1, 0, 1, 0.0, ["sub     rsp, 8; _init", "mov     rax, cs:__gmon_start___ptr", "test    rax, rax", "jz      short loc_171A"], ["sub~rsp,0", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 3, 1, 7, 0.0, 1, 2], "succs": [[2], [0, 2], []], "fname": "init_proc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0.0, ["push    cs:qword_20CDA0", "jmp     cs:qword_20CDA8"], ["push~<TAG>", "jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 66, 2, 0.0, 2, 0], "succs": [[]], "fname": "sub_1720", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_toupper_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_toupper_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getenv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "getenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigprocmask_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigprocmask", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__snprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 6, 1, 0.0, 1, 0], "succs": [[]], "fname": "__snprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:raise_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "raise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:free_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 23, 1, 0.0, 1, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:abort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__errno_location_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 27, 1, 0.0, 1, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fdatasync_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fdatasync", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strncmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fpending_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigaction_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigaction", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:localeconv_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "localeconv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fcntl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:clock_gettime_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "clock_gettime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:write_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "write", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:textdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fclose_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:bindtextdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dcgettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 63, 1, 0.0, 1, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_get_mb_cur_max_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strlen_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 12, 1, 0.0, 1, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__stack_chk_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 19, 1, 0.0, 1, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getopt_long_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbrtowc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dup2_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "dup2", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__overflow_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__overflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ftruncate_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "ftruncate", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:lseek_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:gettimeofday_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "gettimeofday", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__assert_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__strtoul_internal_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__strtoul_internal", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:ioctl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:close_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:read_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "read", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fputs_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 18, 1, 0.0, 1, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:calloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__memcpy_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__memcpy_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigemptyset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigemptyset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 15, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:malloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 13, 1, 0.0, 1, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:realloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 12, 1, 0.0, 1, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:setlocale_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__printf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memmove_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:error_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 31, 1, 0.0, 1, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fsync_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fsync", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:open_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dcngettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "dcngettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_atexit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getpagesize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getpagesize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigismember_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigismember", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fwrite_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 11, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbsinit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswprint_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:sigaddset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "sigaddset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_tolower_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_tolower_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_b_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__sprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "__sprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_finalize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 282, 0, 0, 3, 1, 1, 0, 0, 0.00988835725677831, ["movzx   eax, byte ptr [rax]", "test    al, al", "jz      short loc_2306"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 282, 0, 0, 3, 1, 1, 12, 25, 0.008440682124892651, ["movzx   ecx, byte ptr [rdx]", "test    cl, cl", "jnz     short loc_22E7"], ["movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [1, 0, 282, 0, 0, 4, 0, 0, 14, 21, 0.05210403631456263, ["lea     rdx, aOflag; \"oflag\"", "mov     rax, r14", "mov     ecx, 6Fh ; 'o'", "nop     dword ptr [rax+rax+00h]"], ["lea~rdx,<TAG>", "mov~rax,r14", "mov~ecx,0", "nop~[word ptr [rax+0]"]], [2, 0, 282, 2, 0, 4, 0, 1, 13, 22, 0.05798061587535272, ["add     rax, 1", "add     rdx, 1", "cmp     [rax-1], cl", "jnz     loc_25F4"], ["add~rax,0", "add~rdx,0", "cmp~[rax-1]+0],cl", "jnz~FOO"]], [0, 0, 282, 0, 0, 2, 1, 1, 16, 22, 0.0007729112992270888, ["test    al, al", "jnz     loc_25F4"], ["test~al,al", "jnz~FOO"]], [1, 0, 1, 0, 2, 10, 3, 2, 41, -1, 0.0005398110661268556, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, rax; format", "mov     rax, [rsp+118h+var_100]", "mov     rcx, rbx", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error", "mov     [rsp+118h+code], 1"], ["xor~edi,edi", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~rcx,rbx", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "mov~[rsp+0],0"]], [1, 0, 2, 0, 1, 6, 0, 2, 41, -1, 0.00011655011655011655, ["mov     rdi, cs:output_file; name", "call    quote", "mov     edx, 5", "mov     rbx, rax", "lea     rsi, aFsyncFailedFor; \"fsync failed for %s\"", "jmp     loc_23E8"], ["mov~rdi,<TAG>", "call~FOO", "mov~edx,0", "mov~rbx,rax", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 2, 0, 1, 5, 0, 1, 40, -1, 0.0038093485461906515, ["mov     rdi, cs:output_file; name", "call    quote", "lea     rsi, aWritingS; \"writing %s\"", "mov     rbx, rax", "mov     edx, 5; category"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0"]], [1, 0, 6, 0, 0, 3, 0, 1, 40, -1, 0.003484235063182432, ["mov     rax, [rsp+118h+var_100]", "cmp     dword ptr [rax], 4", "jnz     loc_2FE6"], ["mov~rax,[rsp+0]", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 282, 0, 0, 3, 0, 0, 31, 4, 0.005741626794258373, ["lea     rcx, aCount; \"count\"", "mov     rdx, r14", "mov     esi, 63h ; 'c'"], ["lea~rcx,<TAG>", "mov~rdx,r14", "mov~esi,0"]], [2, 0, 282, 2, 0, 4, 0, 1, 30, 5, 0.01431726168568274, ["add     rdx, 1", "add     rcx, 1", "cmp     sil, [rdx-1]", "jnz     loc_3200"], ["add~rdx,0", "add~rcx,0", "cmp~sil,[rdx-1]+0]", "jnz~FOO"]], [1, 0, 282, 0, 0, 2, 0, 1, 33, 5, 9.81474665685192e-05, ["cmp     dl, 3Dh ; '='", "jnz     loc_3200"], ["cmp~dl,0", "jnz~FOO"]], [2, 0, 132, 0, 3, 14, 2, 3, 27, -1, 0.0, ["mov     rdi, cs:output_file; name", "call    quote", "lea     rsi, aCannotFstatS; \"cannot fstat %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     r14, rax", "call    _dcgettext", "mov     rdx, rax; format", "mov     rax, [rsp+118h+var_100]", "mov     rcx, r14", "mov     edi, 1; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~r14,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~rcx,r14", "mov~edi,0", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO"]], [2, 0, 133, 0, 1, 8, 1, 2, 26, -1, 0.0054839896945160106, ["mov     rax, [rsp+118h+var_100]", "mov     rdx, rbx; stat_buf", "mov     esi, 1; fildes", "mov     edi, 1; ver", "mov     r13d, [rax]", "call    ___fxstat", "test    eax, eax", "jz      short loc_2810"], ["mov~rax,[rsp+0]", "mov~rdx,rbx", "mov~esi,0", "mov~edi,0", "mov~r13d,<TAG>", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 21, 0, 0, 8, 0, 0, 37, -1, 0.003214329530119004, ["lea     rdx, [rax+1]", "movzx   esi, byte ptr cs:newline_character; \"\\n\"", "cmp     rdx, cs:output_blocksize", "mov     rcx, cs:obuf", "mov     cs:oc, rdx", "mov     [rcx+rax], sil", "mov     rax, rdx", "jb      loc_2B4F"], ["lea~rdx,[rax+0]", "movzx~esi,<TAG>", "cmp~rdx,<TAG>", "mov~rcx,<TAG>", "mov~<TAG>,rdx", "mov~<TAG>,sil", "mov~rax,rdx", "jb~FOO"]], [0, 0, 22, 0, 0, 3, 0, 1, 36, -1, 0.006404122193595878, ["mov     rbx, cs:conversion_blocksize", "cmp     cs:col, rbx", "jz      loc_3006"], ["mov~rbx,<TAG>", "cmp~<TAG>,rbx", "jz~FOO"]], [1, 0, 122, 0, 1, 5, 1, 2, 24, -1, 0.24247331615752665, ["lea     rdi, caught_signals; set", "mov     esi, 2; signo", "call    _sigismember", "test    eax, eax", "jz      short loc_2037"], ["lea~rdi,<TAG>", "mov~esi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 123, 0, 1, 8, 1, 2, 24, -1, 0.0, ["lea     rax, siginfo_handler", "xor     edx, edx; oact", "mov     rsi, rbx; act", "mov     edi, 0Ah; sig", "mov     dword ptr [rsp+118h+stdout_stat.__glibc_reserved+10h], 0", "mov     [rsp+118h+stdout_stat.st_dev], rax", "call    _sigaction", "jmp     loc_1FFC"], ["lea~rax,<TAG>", "xor~edx,edx", "mov~rsi,rbx", "mov~edi,0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],rax", "call~FOO", "jmp~FOO"]], [1, 1, 124, 0, 1, 9, 1, 2, 23, -1, 0.2434057170899276, ["lea     rdi, [rsp+118h+stdout_stat.st_ino]", "lea     rsi, caught_signals", "mov     ecx, 20h ; ' '", "rep movsd", "lea     rdi, caught_signals; set", "mov     esi, 0Ah; signo", "call    _sigismember", "test    eax, eax", "jnz     loc_2987"], ["lea~rdi,[rsp+0]", "lea~rsi,<TAG>", "mov~ecx,<STR>", "movsd~<TAG>,<TAG>", "lea~rdi,<TAG>", "mov~esi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 282, 0, 0, 7, 0, 0, 25, 34, 0.0, ["mov     rdx, cs:page_size", "neg     rdx", "cmp     rdx, r12", "cmova   rdx, r12", "cmp     rax, rdx", "setnbe  dl", "movzx   edx, dl"], ["mov~rdx,<TAG>", "neg~rdx", "cmp~rdx,r12", "cmova~rdx,r12", "cmp~rax,rdx", "setnbe~dl", "movzx~edx,dl"]], [1, 0, 282, 0, 0, 4, 1, 1, 24, 34, 0.017139001349527665, ["test    rax, rax", "movzx   ecx, [rsp+118h+var_D9]", "mov     edx, 1", "jz      short loc_2E13"], ["test~rax,rax", "movzx~ecx,[rsp+0]", "mov~edx,0", "jz~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 30, -1, 0.0, ["mov     edi, [rsp+118h+code]; code", "call    quit"], ["mov~edi,[rsp+0]", "call~FOO"]], [2, 0, 109, 0, 0, 3, 0, 1, 29, -1, 0.23268310636731687, ["cmp     cs:max_records, 0", "mov     [rsp+118h+code], 0", "jz      loc_240D"], ["cmp~<TAG>,0", "mov~[rsp+0],0", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 39, -1, 0.0007299717826033616, ["jmp     loc_240D"], ["jmp~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 40, -1, 1.840264998159735e-05, ["jmp     loc_240D"], ["jmp~FOO"]], [2, 0, 282, 2, 0, 4, 0, 1, 15, 20, 0.0551220709115446, ["add     rax, 1", "add     rdx, 1", "cmp     [rax-1], cl", "jnz     loc_2A3F"], ["add~rax,0", "add~rdx,0", "cmp~[rax-1]+0],cl", "jnz~FOO"]], [0, 0, 282, 0, 0, 3, 1, 1, 16, 21, 0.008735124524598209, ["movzx   ecx, byte ptr [rdx]", "test    cl, cl", "jnz     short loc_2608"], ["movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [1, 0, 282, 0, 0, 3, 0, 0, 8, 27, 0.05935468040731199, ["lea     rdx, aOf; \"of\"", "mov     rax, r14", "mov     ecx, 6Fh ; 'o'"], ["lea~rdx,<TAG>", "mov~rax,r14", "mov~ecx,0"]], [2, 0, 282, 2, 0, 4, 0, 1, 7, 28, 0.06920623236412711, ["add     rdx, 1", "add     rcx, 1", "cmp     [rdx-1], sil", "jnz     loc_2298"], ["add~rdx,0", "add~rcx,0", "cmp~[rdx-1]+0],sil", "jnz~FOO"]], [1, 0, 282, 0, 0, 2, 0, 1, 10, 28, 0.000993743099006257, ["cmp     al, 3Dh ; '='", "jnz     loc_2298"], ["cmp~al,0", "jnz~FOO"]], [0, 0, 162, 0, 1, 7, 0, 1, 14, -1, 0.0028953502637713165, ["mov     dword ptr [rsp+118h+invalid], esi", "call    ___ctype_toupper_loc", "mov     rdi, [rax]", "lea     rax, trans_table", "mov     esi, dword ptr [rsp+118h+invalid]", "lea     rcx, [rax+100h]", "nop     word ptr [rax+rax+00h]"], ["mov~[word ptr [rsp+0],esi", "call~FOO", "mov~rdi,<TAG>", "lea~rax,<TAG>", "mov~esi,[word ptr [rsp+0]", "lea~rcx,[rax+0]", "nop~[ord ptr [rax+0]"]], [1, 0, 167, 0, 0, 2, 1, 1, 13, -1, 0.2397129186602871, ["test    sil, 40h", "jz      loc_2688"], ["test~sil,0", "jz~FOO"]], [0, 0, 30, 0, 0, 3, 0, 0, 35, -1, 0.016820022083179977, ["cmp     rbx, cs:conversion_blocksize", "mov     rax, cs:oc", "jnb     loc_2F38"], ["cmp~rbx,<TAG>", "mov~rax,<TAG>", "jnb~FOO"]], [0, 0, 31, 0, 0, 3, 1, 1, 34, -1, 0.018549871181450128, ["mov     rbx, cs:col", "test    rbx, rbx", "jnz     short loc_2BA1"], ["mov~rbx,<TAG>", "test~rbx,rbx", "jnz~FOO"]], [1, 0, 30, 1, 0, 1, 0, 0, 37, -1, 0.000993743099006257, ["add     rbx, 1"], ["add~rbx,0"]], [0, 0, 40, 0, 0, 2, 0, 1, 34, -1, 0.0022696601643970066, ["mov     esi, cs:conversions_mask", "jmp     loc_2AC7"], ["mov~esi,<TAG>", "jmp~FOO"]], [0, 0, 108, 0, 1, 6, 2, 2, 33, -1, 0.16698155645524032, ["xor     edi, edi; fd", "mov     rdx, r13; size", "mov     rsi, rbx; buf", "call    iread", "test    rax, rax", "jz      loc_2D54"], ["xor~edi,edi", "mov~rdx,r13", "mov~rsi,rbx", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 282, 0, 0, 3, 1, 1, 29, 8, 0.009790209790209791, ["movzx   esi, byte ptr [rcx]", "test    sil, sil", "jz      loc_31E4"], ["movzx~esi,<TAG>", "test~sil,sil", "jz~FOO"]], [2, 0, 282, 2, 0, 4, 0, 1, 28, 7, 0.020218378113114957, ["add     rdx, 1", "add     rcx, 1", "cmp     [rdx-1], sil", "jz      short loc_30FF"], ["add~rdx,0", "add~rcx,0", "cmp~[rdx-1]+0],sil", "jz~FOO"]], [3, 0, 131, 1, 0, 5, 2, 1, 27, -1, 0.005042326094957674, ["mov     eax, [rsp+118h+stdout_stat.st_mode]", "and     eax, 0F000h", "sub     eax, 4000h", "test    eax, 0FFFFB000h", "jnz     loc_1F84"], ["mov~eax,[rsp+0]", "and~eax,0", "sub~eax,0", "test~eax,0", "jnz~FOO"]], [1, 0, 282, 0, 0, 3, 0, 1, 17, 21, 0.010330020856336646, ["movzx   eax, byte ptr [rax]", "cmp     al, 3Dh ; '='", "jz      short loc_262F"], ["movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [1, 0, 108, 0, 0, 2, 1, 1, 41, -1, 0.03632683106367317, ["test    sil, 8", "jnz     loc_2479"], ["test~sil,0", "jnz~FOO"]], [0, 0, 108, 0, 0, 2, 0, 1, 44, -1, 0.008845540424487793, ["lea     r14, [r10+1]", "jmp     loc_21AD"], ["lea~r14,[r10+0]", "jmp~FOO"]], [0, 1, 108, 0, 0, 4, 1, 1, 40, -1, 0.05112256164887744, ["mov     esi, cs:conversions_mask", "mov     r14, rbx", "test    sil, 80h", "jnz     loc_248F"], ["mov~esi,<TAG>", "mov~r14,rbx", "test~sil,<STR>", "jnz~FOO"]], [0, 0, 282, 0, 0, 2, 1, 1, 18, 20, 0.0006993006993006993, ["test    al, al", "jnz     loc_2A3F"], ["test~al,al", "jnz~FOO"]], [2, 0, 282, 0, 0, 5, 3, 0, 25, 33, 0.02175193227824807, ["or      edx, ecx", "or      cs:conversions_mask, 800h", "mov     cs:output_blocksize, rax", "mov     [rsp+118h+var_D9], dl", "and     [rsp+118h+var_D9], 1"], ["or~edx,ecx", "or~<TAG>,0", "mov~<TAG>,rax", "mov~[rsp+0],dl", "and~[rsp+0],0"]], [2, 0, 108, 1, 0, 5, 0, 0, 42, -1, 0.0, ["movzx   eax, cs:saved_char", "mov     r10, [rsp+118h+var_F0]", "add     r13, 1", "mov     cs:char_is_saved, 0", "mov     [rbx-1], al"], ["movzx~eax,<TAG>", "mov~r10,[rsp+0]", "add~r13,0", "mov~<TAG>,0", "mov~[rbx-1]+0],al"]], [1, 0, 108, 0, 0, 3, 0, 1, 41, -1, 0.02035333087964667, ["cmp     cs:char_is_saved, 0", "mov     r10, rbx", "jz      short loc_24B5"], ["cmp~<TAG>,0", "mov~r10,rbx", "jz~FOO"]], [0, 0, 282, 0, 0, 3, 1, 1, 34, 1, 0.012354312354312355, ["movzx   edx, byte ptr [rdx]", "test    dl, dl", "jz      short loc_3239"], ["movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [0, 0, 282, 0, 0, 3, 1, 1, 33, 2, 0.010084652189915349, ["movzx   esi, byte ptr [rcx]", "test    sil, sil", "jnz     short loc_320F"], ["movzx~esi,<TAG>", "test~sil,sil", "jnz~FOO"]], [1, 0, 162, 1, 0, 6, 0, 1, 15, -1, 0.003422892896577107, ["movzx   edx, byte ptr [rax]", "add     rax, 1", "mov     edx, [rdi+rdx*4]", "mov     [rax-1], dl", "cmp     rcx, rax", "jnz     short loc_1E20"], ["movzx~edx,<TAG>", "add~rax,0", "mov~edx,<TAG>", "mov~[rax-1]+0],dl", "cmp~rcx,rax", "jnz~FOO"]], [2, 0, 121, 0, 1, 7, 1, 1, 25, -1, 0.0, ["lea     rax, interrupt_handler", "xor     edx, edx; oact", "mov     rsi, rbx; act", "mov     edi, 2; sig", "mov     dword ptr [rsp+118h+stdout_stat.__glibc_reserved+10h], 0C0000000h", "mov     [rsp+118h+stdout_stat.st_dev], rax", "call    _sigaction"], ["lea~rax,<TAG>", "xor~edx,edx", "mov~rsi,rbx", "mov~edi,0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],rax", "call~FOO"]], [1, 0, 282, 0, 0, 2, 0, 1, 35, 1, 2.45368666421298e-05, ["cmp     dl, 3Dh ; '='", "jnz     loc_2416"], ["cmp~dl,0", "jnz~FOO"]], [1, 0, 38, 0, 0, 2, 1, 1, 33, -1, 0.04246513720197921, ["test    sil, 8", "jnz     loc_3044"], ["test~sil,0", "jnz~FOO"]], [1, 0, 39, 0, 0, 2, 0, 1, 32, -1, 0.1115037009773851, ["cmp     cs:char_is_saved, 0", "jz      short loc_2B1C"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 108, 5, 1, 21, 0, 1, 43, -1, 0.008808735124524599, ["mov     r12, cs:output_blocksize", "mov     r9, cs:oc", "mov     rsi, r14; src", "mov     r8, r12", "mov     rdi, r9", "mov     [rsp+118h+name], r9", "sub     r8, r9", "cmp     r8, r13", "cmova   r8, r13", "add     rdi, cs:obuf; dest", "mov     rdx, r8; n", "mov     [rsp+118h+invalid], r8", "call    _memcpy", "mov     r8, [rsp+118h+invalid]", "mov     r9, [rsp+118h+name]", "sub     r13, r8", "add     r14, r8", "add     r8, r9", "cmp     r12, r8", "mov     cs:oc, r8", "jbe     short loc_21D8"], ["mov~r12,<TAG>", "mov~r9,<TAG>", "mov~rsi,r14", "mov~r8,r12", "mov~rdi,r9", "mov~[rsp+0],r9", "sub~r8,r9", "cmp~r8,r13", "cmova~r8,r13", "add~rdi,<TAG>", "mov~rdx,r8", "mov~[rsp+0],r8", "call~FOO", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]", "sub~r13,r8", "add~r14,r8", "add~r8,r9", "cmp~r12,r8", "mov~<TAG>,r8", "jbe~FOO"]], [1, 0, 108, 0, 0, 2, 1, 1, 42, -1, 0.014611704085388297, ["and     esi, 10h", "jz      short loc_21E2"], ["and~esi,0", "jz~FOO"]], [0, 0, 108, 0, 0, 2, 1, 1, 44, -1, 0.0021040363145626304, ["test    r13, r13", "jnz     short loc_21E2"], ["test~r13,r13", "jnz~FOO"]], [0, 0, 108, 0, 1, 3, 1, 2, 44, -1, 0.0021040363145626304, ["call    write_output", "test    r13, r13", "jz      short loc_2240"], ["call~FOO", "test~r13,r13", "jz~FOO"]], [2, 0, 178, 0, 2, 11, 3, 3, 9, -1, 0.0, ["lea     rsi, aCannotCombineA; \"cannot combine any two of {ascii,ebcdic\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "mov     esi, cs:conversions_mask", "jmp     loc_1D5F"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~esi,<TAG>", "jmp~FOO"]], [1, 0, 179, 0, 0, 6, 2, 1, 8, -1, 0.2305852042694148, ["mov     esi, cs:conversions_mask", "mov     eax, esi", "and     eax, 7", "lea     edx, [rax-1]", "test    edx, eax", "jnz     loc_2A10"], ["mov~esi,<TAG>", "mov~eax,esi", "and~eax,0", "lea~edx,[rax-1]+0]", "test~edx,eax", "jnz~FOO"]], [1, 0, 127, 0, 1, 4, 0, 2, 23, -1, 0.0, ["lea     rdi, caught_signals; set", "mov     esi, 0Ah; signo", "call    _sigaddset", "jmp     loc_1FA8"], ["lea~rdi,<TAG>", "mov~esi,0", "call~FOO", "jmp~FOO"]], [2, 0, 128, 0, 1, 6, 1, 2, 22, -1, 0.0019138755980861245, ["xor     esi, esi; act", "mov     rdx, rbx; oact", "mov     edi, 0Ah; sig", "call    _sigaction", "cmp     [rsp+118h+stdout_stat.st_dev], 1", "jz      loc_1FA8"], ["xor~esi,esi", "mov~rdx,rbx", "mov~edi,0", "call~FOO", "cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 1, 1, 15, -1, 0.24383511225616492, ["test    sil, 2", "jz      loc_2650"], ["test~sil,0", "jz~FOO"]], [0, 1, 164, 0, 0, 2, 1, 1, 14, -1, 0.2359710464973623, ["test    sil, 20h", "jz      loc_1E39"], ["test~sil,<STR>", "jz~FOO"]], [1, 0, 160, 0, 0, 1, 0, 0, 16, -1, 0.009814746656851921, ["mov     cs:translation_needed, 1"], ["mov~<TAG>,0"]], [0, 0, 20, 0, 1, 3, 0, 2, 38, -1, 0.0, ["call    write_output", "mov     rax, cs:oc", "jmp     loc_2B4F"], ["call~FOO", "mov~rax,<TAG>", "jmp~FOO"]], [1, 0, 1, 0, 3, 13, 4, 3, 6, -1, 0.0011409642988590358, ["mov     rdi, r14; name", "call    quote", "lea     rsi, aUnrecognizedOp; \"unrecognized operand %s\"", "mov     rbx, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,r14", "call~FOO", "lea~rsi,<TAG>", "mov~rbx,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 282, 0, 1, 6, 1, 2, 5, 30, 0.06552570236780764, ["mov     r14, [r13+0]", "mov     esi, 3Dh ; '='; c", "mov     rdi, r14; s", "call    _strchr", "test    rax, rax", "jz      loc_2416"], ["mov~r14,[r13+0]", "mov~esi,0", "mov~rdi,r14", "call~FOO", "test~rax,rax", "jz~FOO"]], [2, 0, 282, 2, 0, 4, 0, 1, 32, 3, 0.00808489755858177, ["add     rdx, 1", "add     rcx, 1", "cmp     [rdx-1], sil", "jnz     loc_2416"], ["add~rdx,0", "add~rcx,0", "cmp~[rdx-1]+0],sil", "jnz~FOO"]], [2, 0, 176, 0, 2, 11, 3, 3, 10, -1, 0.0, ["lea     rsi, aCannotCombineB; \"cannot combine block and unblock\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "mov     esi, cs:conversions_mask", "jmp     loc_1D6F"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~esi,<TAG>", "jmp~FOO"]], [0, 1, 177, 0, 0, 5, 2, 1, 9, -1, 0.23235185866764815, ["mov     eax, esi", "and     eax, 18h", "lea     edx, [rax-1]", "test    edx, eax", "jnz     loc_29E1"], ["mov~eax,esi", "and~eax,<STR>", "lea~edx,[rax-1]+0]", "test~edx,eax", "jnz~FOO"]], [1, 0, 282, 0, 0, 4, 1, 1, 22, 34, 0.017715617715617717, ["test    rax, rax", "movzx   ecx, [rsp+118h+var_D9]", "mov     edx, 1", "jz      short loc_2FB2"], ["test~rax,rax", "movzx~ecx,[rsp+0]", "mov~edx,0", "jz~FOO"]], [1, 0, 282, 0, 0, 3, 0, 1, 21, 17, 0.014108698319224636, ["movzx   edx, byte ptr [rsi]", "cmp     dl, 3Dh ; '='", "jz      short loc_2F82"], ["movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [0, 0, 282, 0, 0, 2, 1, 1, 22, 16, 0.0005030057661636609, ["test    dl, dl", "jnz     loc_2DB1"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 108, 0, 0, 2, 0, 1, 45, -1, 0.003827751196172249, ["mov     esi, cs:conversions_mask", "jmp     loc_20D0"], ["mov~esi,<TAG>", "jmp~FOO"]], [2, 0, 135, 0, 2, 12, 3, 3, 25, -1, 0.0, ["lea     rsi, aOffsetTooLarge; \"offset too large: cannot truncate to a \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r8, obs", "mov     rdx, rax; format", "mov     rcx, rbx", "xor     esi, esi; errnum", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_279D"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r8,obs", "mov~rdx,rax", "mov~rcx,rbx", "xor~esi,esi", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 136, 2, 0, 8, 1, 1, 24, -1, 0.010747147589252853, ["mov     r13, cs:output_blocksize", "xor     edx, edx", "mov     rax, 7FFFFFFFFFFFFFFFh", "mov     rbp, rbx", "div     r13", "imul    rbp, r13", "cmp     rbx, rax", "ja      loc_2F43"], ["mov~r13,<TAG>", "xor~edx,edx", "mov~rax,0", "mov~rbp,rbx", "div~,r13", "imul~rbp,r13", "cmp~rbx,rax", "ja~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 1, -1, 0.0, ["mov     edi, 1; status", "call    usage"], ["mov~edi,0", "call~FOO"]], [5, 1, 286, 2, 7, 54, 5, 8, 0, 35, 0.0, ["push    r15", "push    r14", "lea     r15, trans_table", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     rbx, argv", "mov     ebp, edi", "mov     edi, 6; category", "sub     rsp, 0E8h", "mov     rax, fs:28h", "mov     [rsp+118h+var_40], rax", "xor     eax, eax", "mov     rax, [argv]", "lea     argv, aReportBugsToS+16h; locale", "mov     cs:program_name, rax", "call    _setlocale", "lea     rsi, dirname; \"/usr/local/share/locale\"", "lea     rdi, package; \"coreutils\"", "call    _bindtextdomain", "lea     rdi, package; \"coreutils\"", "call    _textdomain", "lea     rdi, maybe_close_stdout", "call    atexit", "call    _getpagesize", "cdqe", "push    0", "lea     r9, usage; usage_func", "mov     cs:page_size, rax", "lea     rax, aStuartKemp; \"Stuart Kemp\"", "lea     r8, version; \"6.12\"", "lea     rcx, package; \"coreutils\"", "lea     rdx, command_name; \"dd\"", "mov     rsi, argv; argv", "push    rax", "lea     rax, aDavidMackenzie; \"David MacKenzie\"", "mov     edi, ebp; argc", "push    rax", "lea     rax, aPaulRubin; \"Paul Rubin\"", "push    rax", "xor     eax, eax", "call    parse_long_options", "lea     rdx, aReportBugsToS+16h; shortopts", "add     rsp, 20h", "xor     r8d, r8d; longind", "xor     ecx, ecx; longopts", "mov     rsi, argv; argv", "mov     edi, ebp; argc", "mov     cs:close_stdout_required, 0", "call    _getopt_long", "xor     edx, edx", "cmp     eax, 0FFFFFFFFh", "jnz     loc_2445"], ["push~r15", "push~r14", "lea~r15,<TAG>", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~rbx,argv", "mov~ebp,edi", "mov~edi,0", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "lea~argv,<TAG>", "mov~<TAG>,rax", "call~FOO", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "call~FOO", "cdqe~", "push~0", "lea~r9,<TAG>", "mov~<TAG>,rax", "lea~rax,<TAG>", "lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,argv", "push~rax", "lea~rax,<TAG>", "mov~edi,ebp", "push~rax", "lea~rax,<TAG>", "push~rax", "xor~eax,eax", "call~FOO", "lea~rdx,<TAG>", "add~rsp,<STR>", "xor~r8d,r8d", "xor~ecx,ecx", "mov~rsi,argv", "mov~edi,ebp", "mov~<TAG>,0", "call~FOO", "xor~edx,edx", "cmp~eax,0", "jnz~FOO"]], [0, 0, 282, 0, 1, 6, 1, 2, 18, 32, 0.01354435038645565, ["lea     rdx, aInvalidOutputF; \"invalid output flag\"", "lea     rsi, flags; table", "mov     rdi, r9; str", "call    parse_symbols", "or      cs:output_flags, eax", "jmp     loc_1D00"], ["lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rdi,r9", "call~FOO", "or~<TAG>,eax", "jmp~FOO"]], [1, 0, 282, 0, 0, 4, 0, 0, 16, 19, 0.04895104895104895, ["lea     rdx, aStatus; \"status\"", "mov     rax, r14", "mov     ecx, 73h ; 's'", "xchg    ax, ax"], ["lea~rdx,<TAG>", "mov~rax,r14", "mov~ecx,0", "xchg~ax,ax"]], [0, 0, 282, 0, 0, 3, 1, 1, 31, 6, 0.009937430990062569, ["movzx   esi, byte ptr [rcx]", "test    sil, sil", "jnz     short loc_3128"], ["movzx~esi,<TAG>", "test~sil,sil", "jnz~FOO"]], [1, 0, 282, 0, 0, 3, 0, 0, 29, 6, 0.011900380321432954, ["lea     rcx, aSCannotSeek+0Bh; \"seek\"", "mov     rdx, r14", "mov     esi, 73h ; 's'"], ["lea~rcx,<TAG>", "mov~rdx,r14", "mov~esi,0"]], [0, 0, 8, 0, 0, 2, 0, 1, 39, -1, 0.0003925898662740768, ["mov     esi, cs:conversions_mask", "jmp     loc_2B6A"], ["mov~esi,<TAG>", "jmp~FOO"]], [1, 0, 12, 0, 1, 4, 1, 2, 38, -1, 0.013200834253465833, ["mov     edi, 1; fildes", "call    _fdatasync", "test    eax, eax", "jz      short loc_2EF8"], ["mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 9, 0, 0, 1, 1, 0, 40, -1, 0.0002208317997791682, ["or      cs:conversions_mask, 8000h"], ["or~<TAG>,0"]], [0, 0, 285, 0, 0, 1, 0, 0, 1, 34, 0.003484235063182432, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [1, 0, 156, 0, 0, 2, 1, 1, 16, -1, 0.23960250276039752, ["and     sil, 4", "jz      loc_1E88"], ["and~sil,0", "jz~FOO"]], [1, 0, 108, 0, 0, 2, 1, 1, 42, -1, 0.017065390749601277, ["test    r13b, 1", "jnz     loc_26EF"], ["test~r13b,0", "jnz~FOO"]], [0, 0, 154, 0, 0, 4, 0, 0, 16, -1, 0.003091645196908355, ["lea     rax, trans_table", "lea     rcx, ascii_to_ebcdic", "lea     rsi, [rax+100h]", "nop     dword ptr [rax+rax+00000000h]"], ["lea~rax,<TAG>", "lea~rcx,<TAG>", "lea~rsi,[rax+0]", "nop~[word ptr [rax+0]"]], [1, 0, 188, 0, 0, 3, 0, 1, 4, -1, 0.013691571586308428, ["cmp     cs:input_blocksize, 0", "mov     eax, cs:conversions_mask", "jnz     loc_31C7"], ["cmp~<TAG>,0", "mov~eax,<TAG>", "jnz~FOO"]], [0, 0, 283, 0, 0, 3, 0, 1, 3, 32, 0.010403631456263036, ["mov     eax, cs:optind@@GLIBC_2_2_5", "cmp     ebp, eax", "jle     loc_224B"], ["mov~eax,<TAG>", "cmp~ebp,eax", "jle~FOO"]], [0, 0, 190, 0, 0, 2, 1, 1, 12, -1, 0.20983928352349407, ["test    rbp, rbp", "jz      loc_224B"], ["test~rbp,rbp", "jz~FOO"]], [2, 0, 282, 2, 0, 4, 0, 1, 17, 18, 0.05189547294810453, ["add     rax, 1", "add     rdx, 1", "cmp     [rax-1], cl", "jnz     loc_2D67"], ["add~rax,0", "add~rdx,0", "cmp~[rax-1]+0],cl", "jnz~FOO"]], [0, 0, 282, 0, 0, 3, 1, 1, 18, 19, 0.008882345724450989, ["movzx   ecx, byte ptr [rdx]", "test    cl, cl", "jnz     short loc_2A50"], ["movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [0, 0, 108, 0, 0, 3, 0, 0, 41, -1, 0.005876579560790088, ["lea     rsi, [rbx+r13]", "mov     rax, rbx", "nop"], ["lea~rsi,<TAG>", "mov~rax,rbx", "nop"]], [0, 0, 108, 0, 0, 2, 1, 1, 40, -1, 0.008796466691203533, ["test    r13, r13", "jz      loc_219A"], ["test~r13,r13", "jz~FOO"]], [2, 0, 130, 0, 3, 15, 2, 4, 28, -1, 0.0, ["mov     rdi, cs:output_file; name", "call    quote", "lea     rsi, aTruncatingAtLu; \"truncating at %lu bytes in output file \"...", "mov     r14, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r8, r14", "mov     rdx, rax; format", "mov     rcx, size", "mov     esi, r13d; errnum", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_1F84"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~r14,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r8,r14", "mov~rdx,rax", "mov~rcx,size", "mov~esi,r13d", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [2, 0, 285, 1, 0, 4, 0, 1, 2, 33, 0.006956201693043799, ["mov     [r15+i], dl", "add     rdx, 1", "cmp     rdx, 100h", "jnz     short loc_1C58"], ["mov~<TAG>,dl", "add~rdx,0", "cmp~rdx,0", "jnz~FOO"]], [2, 0, 282, 0, 3, 14, 3, 4, 25, 32, 0.0, ["mov     rdi, r9; name", "call    quote", "lea     rsi, aInvalidNumberS; \"invalid number %s\"", "mov     r14, rax", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rcx, r14", "mov     rdx, rax; format", "xor     esi, esi; errnum", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_1D00"], ["mov~rdi,r9", "call~FOO", "lea~rsi,<TAG>", "mov~r14,rax", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rcx,r14", "mov~rdx,rax", "xor~esi,esi", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 282, 0, 0, 2, 0, 1, 24, 32, 0.1580910317752423, ["cmp     [rsp+118h+var_D9], 0", "jz      loc_1D00"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 282, 0, 0, 3, 0, 1, 19, 19, 0.010550852656115814, ["movzx   eax, byte ptr [rax]", "cmp     al, 3Dh ; '='", "jnz     loc_2D5F"], ["movzx~eax,<TAG>", "cmp~al,0", "jnz~FOO"]], [0, 0, 155, 0, 0, 4, 0, 0, 17, -1, 0.0031284504968715496, ["lea     rax, trans_table", "lea     rcx, ascii_to_ibm", "lea     rsi, [rax+100h]", "nop"], ["lea~rax,<TAG>", "lea~rcx,<TAG>", "lea~rsi,[rax+0]", "nop"]], [1, 0, 154, 1, 0, 6, 0, 1, 17, -1, 0.003422892896577107, ["movzx   edx, byte ptr [rax]", "add     rax, 1", "movzx   edx, byte ptr [rcx+rdx]", "mov     [rax-1], dl", "cmp     rsi, rax", "jnz     short loc_1E60"], ["movzx~edx,<TAG>", "add~rax,0", "movzx~edx,<TAG>", "mov~[rax-1]+0],dl", "cmp~rsi,rax", "jnz~FOO"]], [1, 0, 108, 1, 0, 6, 0, 1, 42, -1, 0.004232609495767391, ["movzx   edx, byte ptr [rax]", "add     rax, 1", "movzx   edx, byte ptr [r15+rdx]", "mov     [rax-1], dl", "cmp     rax, rsi", "jnz     short loc_2460"], ["movzx~edx,<TAG>", "add~rax,0", "movzx~edx,<TAG>", "mov~[rax-1]+0],dl", "cmp~rax,rsi", "jnz~FOO"]], [2, 0, 108, 0, 3, 17, 4, 4, 35, -1, 0.06076555023923445, ["mov     rdi, cs:input_file; name", "call    quote", "lea     rsi, aReadingS; \"reading %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r13, rax", "call    _dcgettext", "mov     r14, [rsp+118h+var_100]", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "mov     rcx, r13", "mov     esi, [r14]; errnum", "call    _error", "mov     esi, cs:conversions_mask", "test    esi, 100h", "jz      loc_2ABF"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r13,rax", "call~FOO", "mov~r14,[rsp+0]", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "mov~rcx,r13", "mov~esi,<TAG>", "call~FOO", "mov~esi,<TAG>", "test~esi,0", "jz~FOO"]], [0, 0, 108, 0, 0, 1, 0, 1, 34, -1, 0.16009896536212295, ["js      loc_24F9"], ["js~FOO"]], [0, 0, 108, 0, 0, 1, 0, 1, 43, -1, 0.002588639430744694, ["jmp     loc_219A"], ["jmp~FOO"]], [2, 0, 108, 1, 0, 4, 1, 1, 37, -1, 0.017580664949086004, ["mov     esi, cs:conversions_mask", "add     cs:r_partial, 1", "test    esi, 400h", "jz      loc_24F1"], ["mov~esi,<TAG>", "add~<TAG>,0", "test~esi,0", "jz~FOO"]], [0, 0, 108, 0, 0, 3, 0, 0, 36, -1, 0.10229828650881304, ["mov     r13, cs:input_blocksize", "cmp     r13, rbp", "jbe     loc_2327"], ["mov~r13,<TAG>", "cmp~r13,rbp", "jbe~FOO"]], [1, 0, 120, 2, 2, 14, 2, 3, 25, -1, 0.2414427677585572, ["call    gethrxtime", "mov     rdx, cs:page_size", "mov     cs:start_time, rax", "mov     rax, cs:input_blocksize", "lea     rdi, [rax+rdx*2+3]; n", "call    xmalloc", "mov     rcx, cs:page_size", "xor     edx, edx", "lea     rbx, [rax+rcx+1]", "mov     rax, rbx", "div     rcx", "sub     rbx, rdx", "test    byte ptr cs:conversions_mask+1, 8", "jnz     loc_2954"], ["call~FOO", "mov~rdx,<TAG>", "mov~<TAG>,rax", "mov~rax,<TAG>", "lea~rdi,[rax+0]", "call~FOO", "mov~rcx,<TAG>", "xor~edx,edx", "lea~rbx,[rax+0]", "mov~rax,rbx", "div~,rcx", "sub~rbx,rdx", "test~<TAG>,0", "jnz~FOO"]], [2, 1, 185, 0, 0, 5, 1, 1, 5, -1, 0.006821248926512085, ["or      ah, 8", "cmp     cs:output_blocksize, 0", "mov     cs:input_blocksize, 200h", "mov     cs:conversions_mask, eax", "jnz     loc_1D20"], ["or~ah,0", "cmp~<TAG>,0", "mov~<TAG>,<STR>", "mov~<TAG>,eax", "jnz~FOO"]], [2, 0, 148, 0, 3, 15, 2, 4, 19, -1, 0.0, ["mov     rdi, cs:input_file; name", "call    quote", "lea     rsi, aOpeningS; \"opening %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     rbx, rax", "call    _dcgettext", "mov     rdx, rax; format", "mov     rax, [rsp+118h+var_100]", "mov     rcx, rbx", "mov     edi, 1; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error", "jmp     loc_1EBE"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~rbx,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~rcx,rbx", "mov~edi,0", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 149, 0, 1, 7, 3, 2, 18, -1, 0.12329775487670225, ["xor     ecx, ecx; mode", "xor     edi, edi; desired_fd", "mov     edx, ebp; flags", "mov     rsi, rbx; file", "call    fd_reopen", "test    eax, eax", "js      loc_2C41"], ["xor~ecx,ecx", "xor~edi,edi", "mov~edx,ebp", "mov~rsi,rbx", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 118, 0, 0, 1, 0, 0, 26, -1, 0.11943319838056679, ["mov     cs:obuf, rbx"], ["mov~<TAG>,rbx"]], [3, 0, 152, 0, 0, 3, 0, 0, 18, -1, 0.009324009324009324, ["mov     cs:translation_needed, 1", "mov     byte ptr cs:newline_character, 25h ; '%'; \"\\n\"", "mov     byte ptr cs:space_character, 40h ; '@'; \" \""], ["mov~<TAG>,0", "mov~<TAG>,0", "mov~<TAG>,0"]], [0, 0, 153, 0, 0, 1, 0, 1, 19, -1, 0.0037664090295669245, ["jmp     loc_1E73"], ["jmp~FOO"]], [0, 0, 282, 0, 0, 2, 1, 1, 26, 11, 0.0004416635995583364, ["test    dl, dl", "jz      loc_315E"], ["test~dl,dl", "jz~FOO"]], [1, 0, 282, 0, 0, 3, 0, 1, 25, 12, 0.013777450619555884, ["movzx   edx, byte ptr [rdx]", "cmp     dl, 3Dh ; '='", "jz      loc_315E"], ["movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [1, 0, 155, 1, 0, 6, 0, 1, 18, -1, 0.003459698196540302, ["movzx   edx, byte ptr [rax]", "add     rax, 1", "movzx   edx, byte ptr [rcx+rdx]", "mov     [rax-1], dl", "cmp     rsi, rax", "jnz     short loc_2670"], ["movzx~edx,<TAG>", "add~rax,0", "movzx~edx,<TAG>", "mov~[rax-1]+0],dl", "cmp~rsi,rax", "jnz~FOO"]], [1, 0, 33, 0, 1, 5, 0, 2, 35, -1, 0.00015948963317384372, ["lea     rdi, saved_char; buf", "mov     esi, 1; nread", "call    copy_with_unblock", "mov     esi, cs:conversions_mask", "jmp     loc_2B1C"], ["lea~rdi,<TAG>", "mov~esi,0", "call~FOO", "mov~esi,<TAG>", "jmp~FOO"]], [1, 0, 36, 0, 0, 2, 1, 1, 34, -1, 0.036735778841041955, ["and     sil, 10h", "jnz     loc_2E71"], ["and~sil,0", "jnz~FOO"]], [0, 0, 108, 0, 1, 5, 0, 2, 42, -1, 0.017114464482885536, ["mov     rsi, r13; nread", "mov     rdi, r14; buf", "call    copy_with_block", "mov     esi, cs:conversions_mask", "jmp     loc_20D0"], ["mov~rsi,r13", "mov~rdi,r14", "call~FOO", "mov~esi,<TAG>", "jmp~FOO"]], [0, 1, 184, 0, 0, 2, 0, 1, 6, -1, 0.0022573917310759416, ["mov     cs:output_blocksize, 200h", "jmp     loc_1D20"], ["mov~<TAG>,<STR>", "jmp~FOO"]], [1, 0, 185, 0, 0, 2, 1, 1, 6, -1, 1.22684333210649e-05, ["or      cs:conversions_mask, 800h", "jmp     loc_2281"], ["or~<TAG>,0", "jmp~FOO"]], [0, 0, 282, 0, 0, 5, 2, 1, 29, 33, 0.01905287694761379, ["test    rax, rax", "mov     cs:conversion_blocksize, rax", "setz    dl", "or      [rsp+118h+var_D9], dl", "jmp     loc_2E2F"], ["test~rax,rax", "mov~<TAG>,rax", "setz~dl", "or~[rsp+0],dl", "jmp~FOO"]], [0, 0, 282, 0, 0, 3, 1, 1, 28, 10, 0.014881609618451724, ["movzx   edx, byte ptr [rdx]", "test    dl, dl", "jz      short loc_31B1"], ["movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [1, 0, 282, 0, 0, 2, 0, 1, 29, 9, 0.0002208317997791682, ["cmp     dl, 3Dh ; '='", "jnz     loc_30EE"], ["cmp~dl,0", "jnz~FOO"]], [1, 0, 108, 0, 0, 4, 1, 1, 38, -1, 0.026389400073610535, ["mov     rax, r13", "shr     rax, 3Fh", "or      cs:input_offset_overflow, al", "jnz     loc_2586"], ["mov~rax,r13", "shr~rax,0", "or~<TAG>,al", "jnz~FOO"]], [0, 0, 108, 2, 0, 9, 2, 1, 37, -1, 0.03377090745511794, ["mov     r14, cs:input_blocksize", "xor     eax, eax", "sub     r14, rbp", "mov     r13, r14", "add     r13, cs:input_offset", "setb    al", "mov     cs:input_offset, r13", "test    rax, rax", "jz      loc_2C81"], ["mov~r14,<TAG>", "xor~eax,eax", "sub~r14,rbp", "mov~r13,r14", "add~r13,<TAG>", "setb~al", "mov~<TAG>,r13", "test~rax,rax", "jz~FOO"]], [0, 0, 282, 0, 1, 6, 1, 2, 20, 32, 0.013912403386087598, ["lea     rdx, aInvalidStatusF; \"invalid status flag\"", "lea     rsi, statuses; table", "mov     rdi, r9; str", "call    parse_symbols", "or      cs:status_flags, eax", "jmp     loc_1D00"], ["lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rdi,r9", "call~FOO", "or~<TAG>,eax", "jmp~FOO"]], [0, 0, 282, 0, 0, 2, 1, 1, 20, 18, 0.0006256900993743099, ["test    al, al", "jz      loc_2A73"], ["test~al,al", "jz~FOO"]], [0, 0, 117, 0, 0, 3, 1, 1, 27, -1, 0.23971291866028704, ["mov     rdx, cs:skip_records; records", "test    rdx, rdx", "jnz     loc_2937"], ["mov~rdx,<TAG>", "test~rdx,rdx", "jnz~FOO"]], [0, 0, 118, 3, 1, 11, 1, 2, 26, -1, 0.11943319838056679, ["add     rcx, cs:output_blocksize", "lea     rdi, [rcx-1]; n", "call    xmalloc", "mov     rsi, cs:page_size", "xor     edx, edx", "lea     rcx, [rax+rsi-1]", "mov     rax, rcx", "div     rsi", "sub     rcx, rdx", "mov     cs:obuf, rcx", "jmp     loc_2086"], ["add~rcx,<TAG>", "lea~rdi,[rcx-1]+0]", "call~FOO", "mov~rsi,<TAG>", "xor~edx,edx", "lea~rcx,[rax+0]", "mov~rax,rcx", "div~,rsi", "sub~rcx,rdx", "mov~<TAG>,rcx", "jmp~FOO"]], [1, 0, 282, 0, 0, 4, 0, 1, 22, 13, 0.03135811556864189, ["mov     rdx, r14", "mov     esi, 62h ; 'b'", "lea     rcx, aCbs+1; \"bs\"", "jmp     short loc_309F"], ["mov~rdx,r14", "mov~esi,0", "lea~rcx,<TAG>", "jmp~FOO"]], [2, 0, 282, 2, 0, 4, 0, 1, 21, 14, 0.04082934609250399, ["add     rdx, 1", "add     rcx, 1", "cmp     [rdx-1], sil", "jnz     loc_3086"], ["add~rdx,0", "add~rcx,0", "cmp~[rdx-1]+0],sil", "jnz~FOO"]], [0, 0, 282, 0, 0, 2, 1, 1, 24, 14, 0.00040485829959514174, ["test    dl, dl", "jnz     loc_3086"], ["test~dl,dl", "jnz~FOO"]], [1, 0, 282, 2, 0, 10, 1, 0, 4, 31, 0.004551588762115078, ["movsxd  rdx, eax", "not     eax", "mov     r12, 7FFFFFFFFFFFFFFFh", "add     eax, ebp", "lea     r13, [argv+rdx*8]", "xor     ebp, ebp", "add     rax, rdx", "lea     argv, [argv+rax*8+8]", "lea     rax, [rsp+118h+var_D9]", "mov     [rsp+118h+invalid], rax"], ["movsxd~rdx,eax", "not~eax", "mov~r12,0", "add~eax,ebp", "lea~r13,<TAG>", "xor~ebp,ebp", "add~rax,rdx", "lea~argv,[argv+0]", "lea~rax,[rsp+0]", "mov~[rsp+0],rax"]], [1, 0, 108, 0, 0, 3, 0, 1, 44, -1, 0.003067108330266225, ["mov     rax, [rsp+118h+var_100]", "cmp     dword ptr [rax], 0", "jnz     loc_273A"], ["mov~rax,[rsp+0]", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 108, 0, 1, 6, 2, 1, 43, -1, 0.009692062323641271, ["mov     rdi, cs:input_file; filename", "xor     esi, esi; fdesc", "mov     rdx, r13; offset", "call    skip_via_lseek", "test    rax, rax", "jns     loc_25D2"], ["mov~rdi,<TAG>", "xor~esi,esi", "mov~rdx,r13", "call~FOO", "test~rax,rax", "jns~FOO"]], [0, 0, 115, 0, 0, 3, 1, 1, 28, -1, 0.2384370015948963, ["mov     rdx, cs:seek_records; records", "test    rdx, rdx", "jnz     loc_2888"], ["mov~rdx,<TAG>", "test~rdx,rdx", "jnz~FOO"]], [0, 0, 116, 0, 1, 6, 1, 2, 28, -1, 0.0, ["mov     rcx, cs:input_blocksize; blocksize", "mov     rsi, cs:input_file; file", "mov     r8, rbx; buf", "xor     edi, edi; fdesc", "call    skip", "jmp     loc_2096"], ["mov~rcx,<TAG>", "mov~rsi,<TAG>", "mov~r8,rbx", "xor~edi,edi", "call~FOO", "jmp~FOO"]], [1, 0, 7, 0, 0, 2, 1, 1, 38, -1, 0.0175990675990676, ["and     esi, 8000h", "jnz     short loc_2B85"], ["and~esi,0", "jnz~FOO"]], [1, 0, 13, 0, 0, 3, 1, 1, 37, -1, 0.03681143417985523, ["mov     esi, cs:conversions_mask", "test    esi, 4000h", "jnz     loc_2E8D"], ["mov~esi,<TAG>", "test~esi,0", "jnz~FOO"]], [0, 0, 151, 0, 1, 6, 1, 2, 17, -1, 0.24638694638694641, ["mov     rbx, cs:input_file", "mov     ebp, cs:input_flags", "call    ___errno_location", "mov     [rsp+118h+var_100], rax", "test    rbx, rbx", "jz      loc_2A94"], ["mov~rbx,<TAG>", "mov~ebp,<TAG>", "call~FOO", "mov~[rsp+0],rax", "test~rbx,rbx", "jz~FOO"]], [1, 0, 108, 1, 0, 3, 0, 1, 41, -1, 0.00710955710955711, ["add     cs:w_partial, 1", "mov     esi, cs:conversions_mask", "jmp     loc_20D0"], ["add~<TAG>,0", "mov~esi,<TAG>", "jmp~FOO"]], [0, 0, 108, 0, 0, 2, 0, 1, 40, -1, 0.01881977671451356, ["cmp     cs:input_blocksize, r13", "jz      loc_2FD3"], ["cmp~<TAG>,r13", "jz~FOO"]], [1, 0, 108, 0, 1, 6, 3, 2, 39, -1, 0.021351163456426618, ["xor     esi, esi; offset", "xor     edi, edi; fd", "mov     edx, 1; whence", "call    _lseek", "test    rax, rax", "js      loc_273A"], ["xor~esi,esi", "xor~edi,edi", "mov~edx,0", "call~FOO", "test~rax,rax", "js~FOO"]], [1, 0, 108, 0, 2, 10, 4, 3, 42, -1, 0.005017789228315544, ["lea     rsi, aWarningInvalid; \"warning: invalid file offset after fail\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_2CC6"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 108, 1, 0, 2, 0, 1, 41, -1, 0.014623972518709361, ["sub     r13, rax", "js      loc_3060"], ["sub~r13,rax", "js~FOO"]], [0, 0, 108, 0, 0, 2, 0, 0, 42, -1, 0.005017789228315544, ["cmp     r14, r13", "jb      loc_3060"], ["cmp~r14,r13", "jb~FOO"]], [0, 0, 163, 0, 1, 6, 0, 1, 15, -1, 0.0029321555637345114, ["mov     dword ptr [rsp+118h+invalid], esi", "call    ___ctype_tolower_loc", "mov     rdi, [rax]", "lea     rax, trans_table", "mov     esi, dword ptr [rsp+118h+invalid]", "lea     rcx, [rax+100h]"], ["mov~[word ptr [rsp+0],esi", "call~FOO", "mov~rdi,<TAG>", "lea~rax,<TAG>", "mov~esi,[word ptr [rsp+0]", "lea~rcx,[rax+0]"]], [2, 0, 282, 2, 0, 4, 0, 1, 23, 12, 0.033836339099496994, ["add     rdx, 1", "add     rcx, 1", "cmp     [rdx-1], sil", "jz      short loc_3097"], ["add~rdx,0", "add~rcx,0", "cmp~[rdx-1]+0],sil", "jz~FOO"]], [0, 0, 282, 0, 0, 3, 1, 1, 24, 13, 0.01164274322169059, ["movzx   esi, byte ptr [rcx]", "test    sil, sil", "jz      short loc_30AF"], ["movzx~esi,<TAG>", "test~sil,sil", "jz~FOO"]], [2, 0, 11, 1, 0, 6, 1, 1, 39, -1, 0.0066249539933750465, ["mov     rax, [rsp+118h+var_100]", "mov     eax, [rax]", "mov     dword ptr [rsp+118h+invalid], eax", "sub     eax, 16h", "and     eax, 0FFFFFFEFh", "jz      short loc_2EEE"], ["mov~rax,[rsp+0]", "mov~eax,<TAG>", "mov~[word ptr [rsp+0],eax", "sub~eax,0", "and~eax,0", "jz~FOO"]], [1, 0, 114, 0, 1, 8, 1, 2, 29, -1, 0.008342534658324132, ["mov     r8, cs:obuf; buf", "mov     rcx, cs:output_blocksize; blocksize", "mov     edi, 1; fdesc", "mov     rsi, cs:output_file; file", "call    skip", "test    rax, rax", "mov     rbp, rax", "jz      loc_20A6"], ["mov~r8,<TAG>", "mov~rcx,<TAG>", "mov~edi,0", "mov~rsi,<TAG>", "call~FOO", "test~rax,rax", "mov~rbp,rax", "jz~FOO"]], [0, 0, 108, 0, 0, 2, 0, 1, 40, -1, 0.01965811965811966, ["cmp     r13, rax", "jz      loc_25D2"], ["cmp~r13,rax", "jz~FOO"]], [2, 0, 130, 0, 2, 11, 1, 3, 20, -1, 0.22009569377990432, ["lea     rsi, aStandardOutput; \"standard output\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "lea     rbx, [rsp+118h+stdout_stat]", "call    _dcgettext", "mov     esi, ebp; add_flags", "mov     rdx, rax; name", "mov     edi, 1; fd", "mov     cs:output_file, rax", "call    set_fd_flags", "jmp     loc_1F84"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "lea~rbx,[rsp+0]", "call~FOO", "mov~esi,ebp", "mov~rdx,rax", "mov~edi,0", "mov~<TAG>,rax", "call~FOO", "jmp~FOO"]], [2, 0, 147, 0, 1, 16, 3, 2, 19, -1, 0.24707397865292605, ["xor     esi, esi; offset", "mov     edx, 1; whence", "xor     edi, edi; fd", "call    _lseek", "mov     rdx, offset", "mov     cs:input_offset, offset", "mov     offset, [rsp+118h+var_100]", "mov     rsi, cs:output_file; file", "not     offset", "mov     ebp, cs:output_flags", "shr     rdx, 3Fh", "mov     eax, [rax]", "mov     cs:input_seekable, dl", "test    rsi, rsi", "mov     cs:input_seek_errno, eax", "jz      loc_2BDD"], ["xor~esi,esi", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rdx,offset", "mov~<TAG>,offset", "mov~offset,[rsp+0]", "mov~rsi,<TAG>", "not~offset", "mov~ebp,<TAG>", "shr~rdx,0", "mov~eax,<TAG>", "mov~<TAG>,dl", "test~rsi,rsi", "mov~<TAG>,eax", "jz~FOO"]], [2, 0, 282, 2, 0, 4, 0, 1, 9, 26, 0.06259354680407313, ["add     rax, 1", "add     rdx, 1", "cmp     [rax-1], cl", "jnz     short loc_22D8"], ["add~rax,0", "add~rdx,0", "cmp~[rax-1]+0],cl", "jnz~FOO"]], [0, 0, 282, 0, 0, 3, 1, 1, 10, 27, 0.008293460925039874, ["movzx   ecx, byte ptr [rdx]", "test    cl, cl", "jnz     short loc_22A7"], ["movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [1, 0, 282, 1, 0, 3, 0, 1, 11, 31, 0.2662004662004662, ["add     r13, 8", "cmp     rbx, r13", "jnz     short loc_1CA0"], ["add~r13,0", "cmp~rbx,r13", "jnz~FOO"]], [1, 0, 113, 1, 0, 2, 0, 1, 32, -1, 0.002699055330634278, ["sub     rbp, 1", "jz      loc_20A6"], ["sub~rbp,0", "jz~FOO"]], [1, 0, 148, 0, 2, 10, 2, 3, 18, -1, 0.12165378481167956, ["lea     rsi, aStandardInput; \"standard input\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     esi, ebp; add_flags", "mov     rdx, rax; name", "xor     edi, edi; fd", "mov     cs:input_file, rax", "call    set_fd_flags", "jmp     loc_1EBE"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~esi,ebp", "mov~rdx,rax", "xor~edi,edi", "mov~<TAG>,rax", "call~FOO", "jmp~FOO"]], [0, 0, 282, 1, 0, 9, 0, 0, 27, 34, 0.0, ["mov     rdi, cs:page_size", "lea     rdx, [rdi+2]", "add     rdx, rdx", "neg     rdx", "cmp     rdx, r12", "cmova   rdx, r12", "cmp     rax, rdx", "setnbe  dl", "movzx   edx, dl"], ["mov~rdi,<TAG>", "lea~rdx,[rdi+0]", "add~rdx,rdx", "neg~rdx", "cmp~rdx,r12", "cmova~rdx,r12", "cmp~rax,rdx", "setnbe~dl", "movzx~edx,dl"]], [1, 0, 282, 0, 0, 4, 1, 1, 26, 34, 0.01765427554901239, ["test    rax, rax", "movzx   ecx, [rsp+118h+var_D9]", "mov     edx, 1", "jz      short loc_318E"], ["test~rax,rax", "movzx~ecx,[rsp+0]", "mov~edx,0", "jz~FOO"]], [1, 0, 40, 0, 0, 1, 0, 0, 36, -1, 0.0009364904101746207, ["mov     [rsp+118h+code], 1"], ["mov~[rsp+0],0"]], [0, 0, 282, 0, 0, 3, 1, 1, 11, 27, 0.009667525456999141, ["movzx   eax, byte ptr [rax]", "test    al, al", "jz      short loc_22C6"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 161, 0, 0, 1, 0, 1, 17, -1, 0.003962703962703963, ["jmp     loc_1E32"], ["jmp~FOO"]], [1, 0, 163, 1, 0, 6, 0, 1, 16, -1, 0.003459698196540302, ["movzx   edx, byte ptr [rax]", "add     rax, 1", "mov     edx, [rdi+rdx*4]", "mov     [rax-1], dl", "cmp     rcx, rax", "jnz     short loc_26B0"], ["movzx~edx,<TAG>", "add~rax,0", "mov~edx,<TAG>", "mov~[rax-1]+0],dl", "cmp~rcx,rax", "jnz~FOO"]], [0, 0, 24, 0, 0, 2, 0, 1, 36, -1, 0.001472211998527788, ["mov     esi, cs:conversions_mask", "jmp     loc_2B35"], ["mov~esi,<TAG>", "jmp~FOO"]], [1, 0, 282, 0, 0, 2, 0, 1, 12, 26, 0.0009201324990798675, ["cmp     al, 3Dh ; '='", "jnz     short loc_22D8"], ["cmp~al,0", "jnz~FOO"]], [0, 0, 16, 0, 0, 2, 0, 1, 38, -1, 0.007528728581360166, ["cmp     rax, cs:oc", "jz      loc_2B58"], ["cmp~rax,<TAG>", "jz~FOO"]], [0, 0, 18, 1, 1, 6, 1, 2, 37, -1, 0.013638408375250497, ["mov     rdi, cs:obuf; fd", "mov     rsi, rax; buf", "call    iwrite", "add     cs:w_bytes, rax", "test    rax, rax", "jz      short loc_2F26"], ["mov~rdi,<TAG>", "mov~rsi,rax", "call~FOO", "add~<TAG>,rax", "test~rax,rax", "jz~FOO"]], [1, 0, 17, 1, 0, 1, 0, 0, 38, -1, 0.0, ["add     cs:w_partial, 1"], ["add~<TAG>,0"]], [1, 0, 108, 0, 0, 4, 0, 1, 43, -1, 0.013777450619555884, ["mov     rdx, r13", "lea     rax, [r10+r13]", "shr     rdx, 1", "jz      short loc_24E8"], ["mov~rdx,r13", "lea~rax,<TAG>", "shr~rdx,0", "jz~FOO"]], [2, 0, 108, 1, 0, 5, 0, 1, 43, -1, 0.0, ["sub     r13, 1", "mov     cs:char_is_saved, 1", "movzx   eax, byte ptr [r10+r13]", "mov     cs:saved_char, al", "jmp     loc_24BF"], ["sub~r13,0", "mov~<TAG>,0", "movzx~eax,<TAG>", "mov~<TAG>,al", "jmp~FOO"]], [0, 0, 113, 0, 1, 6, 1, 2, 30, -1, 0.006293706293706294, ["mov     r13, cs:output_blocksize", "mov     rdi, cs:obuf; s", "xor     esi, esi; c", "mov     rdx, r13; n", "call    _memset", "jmp     short loc_28DA"], ["mov~r13,<TAG>", "mov~rdi,<TAG>", "xor~esi,esi", "mov~rdx,r13", "call~FOO", "jmp~FOO"]], [0, 0, 282, 0, 0, 2, 0, 1, 12, 32, 0.012440191387559809, ["mov     cs:output_file, r9", "jmp     loc_1D00"], ["mov~<TAG>,r9", "jmp~FOO"]], [0, 0, 108, 1, 0, 4, 0, 0, 31, -1, 0.28551098024782234, ["mov     rax, cs:r_full", "add     rax, cs:r_partial", "cmp     rax, cs:max_records", "jnb     loc_2AC7"], ["mov~rax,<TAG>", "add~rax,<TAG>", "cmp~rax,<TAG>", "jnb~FOO"]], [1, 0, 282, 0, 0, 5, 0, 0, 6, 29, 0.06589375536743958, ["lea     r9, [rax+1]", "lea     rcx, aIf; \"if\"", "mov     rdx, r14", "mov     esi, 69h ; 'i'", "nop     dword ptr [rax]"], ["lea~r9,[rax+0]", "lea~rcx,<TAG>", "mov~rdx,r14", "mov~esi,0", "nop~<TAG>"]], [1, 0, 282, 0, 0, 4, 0, 1, 25, 10, 0.026401668506931666, ["mov     rdx, r14", "mov     esi, 63h ; 'c'", "lea     rcx, aCbs; \"cbs\"", "jmp     short loc_30E0"], ["mov~rdx,r14", "mov~esi,0", "lea~rcx,<TAG>", "jmp~FOO"]], [0, 0, 282, 0, 0, 1, 0, 1, 24, 11, 0.02335909704330757, ["jmp     short loc_30C3"], ["jmp~FOO"]], [1, 0, 108, 1, 0, 3, 0, 0, 44, -1, 0.002944423997055576, ["imul    rdx, -2", "lea     rdi, [rax+rdx]", "nop     dword ptr [rax+rax+00h]"], ["imul~rdx,,0", "lea~rdi,<TAG>", "nop~[word ptr [rax+0]"]], [0, 0, 113, 0, 1, 6, 0, 2, 31, -1, 0.005582137161084529, ["mov     rdi, cs:obuf; fd", "mov     rsi, r13; buf", "call    iwrite", "cmp     rax, cs:output_blocksize", "mov     r13, rax", "jz      short loc_28D0"], ["mov~rdi,<TAG>", "mov~rsi,r13", "call~FOO", "cmp~rax,<TAG>", "mov~r13,rax", "jz~FOO"]], [1, 0, 175, 0, 0, 5, 2, 1, 10, -1, 0.23402036559931297, ["mov     eax, esi", "and     eax, 60h", "lea     edx, [rax-1]", "test    edx, eax", "jnz     loc_29B2"], ["mov~eax,esi", "and~eax,0", "lea~edx,[rax-1]+0]", "test~edx,eax", "jnz~FOO"]], [0, 0, 282, 0, 0, 3, 1, 1, 8, 29, 0.013004539320328795, ["movzx   esi, byte ptr [rcx]", "test    sil, sil", "jnz     short loc_1CD0"], ["movzx~esi,<TAG>", "test~sil,sil", "jnz~FOO"]], [3, 0, 143, 0, 1, 7, 2, 1, 21, -1, 0.02035333087964667, ["mov     edx, ebx", "mov     ecx, 1B6h; mode", "mov     edi, 1; desired_fd", "or      edx, 2; flags", "call    fd_reopen", "test    eax, eax", "jns     loc_1F66"], ["mov~edx,ebx", "mov~ecx,0", "mov~edi,0", "or~edx,0", "call~FOO", "test~eax,eax", "jns~FOO"]], [5, 1, 145, 0, 0, 13, 5, 1, 20, -1, 0.025395656974604344, ["mov     eax, cs:conversions_mask", "mov     edx, eax", "mov     ebx, eax", "and     edx, 1000h", "cmp     edx, 1", "sbb     edx, edx", "sar     ebx, 6", "and     ebx, 80h", "and     edx, 40h", "or      ebx, ebp", "or      ebx, edx", "cmp     cs:seek_records, 0", "jnz     loc_26C7"], ["mov~eax,<TAG>", "mov~edx,eax", "mov~ebx,eax", "and~edx,0", "cmp~edx,0", "sbb~edx,edx", "sar~ebx,0", "and~ebx,<STR>", "and~edx,0", "or~ebx,ebp", "or~ebx,edx", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 129, 0, 2, 7, 1, 3, 21, -1, 0.24530732425469268, ["lea     rdi, name; \"POSIXLY_CORRECT\"", "call    _getenv", "lea     rdi, caught_signals; set", "mov     rbp, rax", "call    _sigemptyset", "test    rbp, rbp", "jz      loc_2C10"], ["lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "mov~rbp,rax", "call~FOO", "test~rbp,rbp", "jz~FOO"]], [1, 0, 282, 0, 0, 3, 0, 0, 10, 25, 0.05730585204269415, ["lea     rdx, aConv; \"conv\"", "mov     rax, r14", "mov     ecx, 63h ; 'c'"], ["lea~rdx,<TAG>", "mov~rax,r14", "mov~ecx,0"]], [0, 0, 108, 0, 1, 5, 0, 2, 43, -1, 0.0012513801987486198, ["mov     rsi, r13; nread", "mov     rdi, r14; buf", "call    copy_with_unblock", "mov     esi, cs:conversions_mask", "jmp     loc_20D0"], ["mov~rsi,r13", "mov~rdi,r14", "call~FOO", "mov~esi,<TAG>", "jmp~FOO"]], [1, 0, 108, 0, 0, 3, 1, 1, 38, -1, 0.027268637794953584, ["mov     esi, cs:conversions_mask", "test    esi, 400h", "jz      loc_20D0"], ["mov~esi,<TAG>", "test~esi,0", "jz~FOO"]], [0, 0, 108, 0, 0, 2, 1, 1, 39, -1, 0.01200670674354885, ["test    rbp, rbp", "jnz     loc_20D0"], ["test~rbp,rbp", "jnz~FOO"]], [1, 0, 108, 1, 0, 3, 0, 1, 41, -1, 0.00710955710955711, ["add     cs:w_full, 1", "mov     esi, cs:conversions_mask", "jmp     loc_20D0"], ["add~<TAG>,0", "mov~esi,<TAG>", "jmp~FOO"]], [0, 0, 108, 0, 0, 5, 1, 0, 30, -1, 0.2297264139369402, ["lea     rax, [rbx-1]", "mov     esi, cs:conversions_mask", "xor     ebp, ebp", "mov     [rsp+118h+var_F0], rax", "nop     dword ptr [rax]"], ["lea~rax,[rbx-1]+0]", "mov~esi,<TAG>", "xor~ebp,ebp", "mov~[rsp+0],rax", "nop~<TAG>"]], [1, 0, 108, 1, 0, 5, 0, 1, 45, -1, 0.0013004539320328795, ["movzx   edx, byte ptr [rax-2]", "sub     rax, 2", "mov     [rax+2], dl", "cmp     rax, rdi", "jnz     short loc_24D8"], ["movzx~edx,[yte ptr [rax-2]+0]", "sub~rax,0", "mov~[rax+0],dl", "cmp~rax,rdi", "jnz~FOO"]], [0, 0, 142, 0, 0, 2, 0, 1, 22, -1, 2.45368666421298e-05, ["mov     rsi, cs:output_file", "jmp     loc_1F4A"], ["mov~rsi,<TAG>", "jmp~FOO"]], [2, 0, 10, 0, 3, 15, 3, 3, 40, -1, 0.0, ["mov     rdi, cs:output_file; name", "call    quote", "lea     rsi, aFdatasyncFaile; \"fdatasync failed for %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbx, rax", "call    _dcgettext", "mov     rdx, rax; format", "mov     rax, [rsp+118h+var_100]", "mov     rcx, rbx", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error", "mov     [rsp+118h+code], 1"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbx,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~rcx,rbx", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "mov~[rsp+0],0"]], [0, 0, 282, 0, 0, 3, 1, 1, 9, 29, 0.014304993252361673, ["movzx   eax, byte ptr [rdx]", "test    al, al", "jz      short loc_1CF9"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [2, 0, 282, 2, 0, 4, 0, 1, 11, 24, 0.060471107839528894, ["add     rax, 1", "add     rdx, 1", "cmp     [rax-1], cl", "jnz     short loc_2339"], ["add~rax,0", "add~rdx,0", "cmp~[rax-1]+0],cl", "jnz~FOO"]], [0, 0, 108, 0, 0, 2, 0, 1, 38, -1, 0.0012391117654275549, ["mov     r13, rbp", "jmp     loc_2180"], ["mov~r13,rbp", "jmp~FOO"]], [0, 0, 282, 0, 0, 1, 0, 0, 10, 32, 0.016930437983069563, ["mov     cs:input_file, r9"], ["mov~<TAG>,r9"]], [1, 0, 108, 0, 0, 1, 0, 0, 38, -1, 0.002780844886108056, ["mov     cs:input_offset_overflow, 1"], ["mov~<TAG>,0"]], [1, 0, 282, 0, 0, 4, 0, 1, 27, 8, 0.017740154582259846, ["mov     rdx, r14", "mov     esi, 73h ; 's'", "lea     rcx, aSkip; \"skip\"", "jmp     short loc_310B"], ["mov~rdx,r14", "mov~esi,0", "lea~rcx,<TAG>", "jmp~FOO"]], [2, 0, 282, 2, 0, 4, 0, 1, 26, 9, 0.0289412342043921, ["add     rdx, 1", "add     rcx, 1", "cmp     [rdx-1], sil", "jz      short loc_30D4"], ["add~rdx,0", "add~rcx,0", "cmp~[rdx-1]+0],sil", "jz~FOO"]], [2, 0, 108, 0, 0, 5, 1, 1, 32, -1, 0.17355743671533103, ["mov     eax, esi", "mov     r13, cs:input_blocksize", "and     eax, 500h", "cmp     eax, 500h", "jz      loc_2398"], ["mov~eax,esi", "mov~r13,<TAG>", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 282, 0, 0, 2, 0, 1, 14, 24, 0.0008465218991534782, ["cmp     al, 3Dh ; '='", "jnz     short loc_2339"], ["cmp~al,0", "jnz~FOO"]], [0, 0, 282, 0, 1, 6, 1, 2, 14, 32, 0.012808244387191756, ["lea     rdx, error_msgid; \"invalid conversion\"", "lea     rsi, conversions; table", "mov     rdi, r9; str", "call    parse_symbols", "or      cs:conversions_mask, eax", "jmp     loc_1D00"], ["lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rdi,r9", "call~FOO", "or~<TAG>,eax", "jmp~FOO"]], [0, 0, 282, 0, 1, 6, 1, 2, 16, 32, 0.013176297386823703, ["lea     rdx, aInvalidInputFl; \"invalid input flag\"", "lea     rsi, flags; table", "mov     rdi, r9; str", "call    parse_symbols", "or      cs:input_flags, eax", "jmp     loc_1D00"], ["lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rdi,r9", "call~FOO", "or~<TAG>,eax", "jmp~FOO"]], [0, 0, 30, 0, 0, 1, 0, 1, 37, -1, 0.0031407189301926146, ["jmp     short loc_2B98"], ["jmp~FOO"]], [0, 0, 30, 0, 0, 7, 0, 0, 36, -1, 0.00938535149061465, ["lea     rdx, [rax+1]", "movzx   esi, byte ptr cs:space_character; \" \"", "cmp     rdx, cs:output_blocksize", "mov     rcx, cs:obuf", "mov     cs:oc, rdx", "mov     [rcx+rax], sil", "jb      short loc_2B9D"], ["lea~rdx,[rax+0]", "movzx~esi,<TAG>", "cmp~rdx,<TAG>", "mov~rcx,<TAG>", "mov~<TAG>,rdx", "mov~<TAG>,sil", "jb~FOO"]], [0, 0, 34, 0, 0, 8, 0, 0, 35, -1, 0.03095734674682041, ["mov     rdx, cs:oc", "movzx   esi, cs:saved_char", "mov     rcx, cs:obuf", "lea     rax, [rdx+1]", "cmp     rax, cs:output_blocksize", "mov     [rcx+rdx], sil", "mov     cs:oc, rax", "jb      short loc_2B4F"], ["mov~rdx,<TAG>", "movzx~esi,<TAG>", "mov~rcx,<TAG>", "lea~rax,[rdx+0]", "cmp~rax,<TAG>", "mov~<TAG>,sil", "mov~<TAG>,rax", "jb~FOO"]], [0, 1, 108, 1, 0, 4, 1, 1, 39, -1, 0.005876579560790088, ["mov     rdx, r13", "sub     rdx, rbp; n", "and     esi, 18h", "jz      short loc_271A"], ["mov~rdx,r13", "sub~rdx,rbp", "and~esi,<STR>", "jz~FOO"]], [1, 0, 108, 0, 0, 2, 1, 1, 38, -1, 0.01174089068825911, ["test    esi, 100h", "jz      loc_270A"], ["test~esi,0", "jz~FOO"]], [0, 0, 108, 0, 1, 4, 0, 2, 34, -1, 0.002588639430744694, ["mov     rdx, r13; n", "mov     rdi, rbx; s", "call    _memset", "jmp     loc_2104"], ["mov~rdx,r13", "mov~rdi,rbx", "call~FOO", "jmp~FOO"]], [0, 1, 108, 0, 0, 1, 0, 0, 40, -1, 0.0, ["mov     esi, 20h ; ' '; c"], ["mov~esi,<STR>"]], [0, 0, 33, 0, 1, 2, 0, 1, 36, -1, 0.00015948963317384372, ["call    write_output", "mov     esi, cs:conversions_mask"], ["call~FOO", "mov~esi,<TAG>"]], [0, 0, 184, 0, 0, 2, 0, 0, 13, -1, 0.2054226475279107, ["mov     cs:output_blocksize, rbp", "mov     cs:input_blocksize, rbp"], ["mov~<TAG>,rbp", "mov~<TAG>,rbp"]], [0, 0, 19, 0, 0, 2, 1, 1, 36, -1, 0.056295751032593176, ["test    rax, rax", "jnz     loc_2F03"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 282, 0, 0, 3, 1, 1, 27, 10, 0.012808244387191756, ["movzx   esi, byte ptr [rcx]", "test    sil, sil", "jz      loc_31A1"], ["movzx~esi,<TAG>", "test~sil,sil", "jz~FOO"]], [1, 0, 32, 0, 0, 2, 1, 1, 33, -1, 0.06512493354598624, ["test    sil, 8", "jz      short loc_2B2E"], ["test~sil,0", "jz~FOO"]], [1, 0, 33, 0, 1, 5, 0, 2, 34, -1, 0.00015948963317384372, ["lea     rdi, saved_char; buf", "mov     esi, 1; nread", "call    copy_with_block", "mov     esi, cs:conversions_mask", "jmp     loc_2B1C"], ["lea~rdi,<TAG>", "mov~esi,0", "call~FOO", "mov~esi,<TAG>", "jmp~FOO"]], [0, 0, 108, 0, 1, 3, 0, 2, 40, -1, 0.002588639430744694, ["lea     rdi, [rbx+rbp]; s", "call    _memset", "jmp     loc_2180"], ["lea~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [1, 0, 183, 0, 0, 2, 0, 1, 6, -1, 0.22675745307324255, ["cmp     cs:conversion_blocksize, 0", "jnz     short loc_1D31"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 186, 0, 0, 2, 0, 1, 5, -1, 0.006821248926512085, ["cmp     cs:output_blocksize, 0", "jnz     loc_1D20"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 182, 0, 0, 1, 1, 0, 7, -1, 0.0, ["and     cs:conversions_mask, 0FFFFFFE7h"], ["and~<TAG>,0"]], [0, 0, 24, 0, 0, 1, 0, 0, 34, -1, 0.041078804236698886, ["mov     rax, cs:oc"], ["mov~rax,<TAG>"]], [1, 0, 108, 0, 2, 10, 4, 3, 45, -1, 0.0, ["lea     rsi, aCannotWorkArou; \"cannot work around kernel bug after all\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     loc_273A"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 108, 0, 0, 3, 0, 1, 37, -1, 0.016844558949822102, ["mov     eax, cs:input_seek_errno", "cmp     eax, 1Dh", "jz      loc_25D2"], ["mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 108, 0, 1, 3, 0, 2, 36, -1, 0.05521612890033943, ["call    print_stats", "cmp     cs:input_seekable, 0", "jz      loc_2728"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [2, 0, 0, 0, 4, 16, 3, 4, 32, -1, 0.0, ["mov     rdi, cs:output_file; name", "call    quote", "lea     rsi, aWritingToS; \"writing to %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbx, rax", "call    _dcgettext", "mov     rdx, rax; format", "mov     rax, [rsp+118h+var_100]", "xor     edi, edi; status", "mov     rcx, rbx", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error", "mov     edi, 1; code", "call    quit"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbx,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "xor~edi,edi", "mov~rcx,rbx", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "mov~edi,0", "call~FOO"]], [1, 0, 108, 1, 0, 4, 1, 1, 37, -1, 0.08011695906432764, ["mov     r13, rbp", "add     cs:r_full, 1", "xor     ebp, ebp", "jmp     loc_2180"], ["mov~r13,rbp", "add~<TAG>,0", "xor~ebp,ebp", "jmp~FOO"]], [0, 0, 108, 0, 0, 1, 0, 0, 38, -1, 0.003758230074019548, ["mov     [r14], eax"], ["mov~<TAG>,eax"]], [1, 0, 23, 0, 0, 2, 1, 1, 35, -1, 0.03995010837116093, ["and     sil, 10h", "jz      short loc_2B4F"], ["and~sil,0", "jz~FOO"]], [0, 0, 108, 1, 0, 8, 2, 1, 35, -1, 0.09473275262748973, ["mov     rdx, rax", "mov     rbp, rax", "xor     eax, eax", "add     rdx, cs:input_offset; size", "setb    al", "mov     cs:input_offset, rdx", "test    rax, rax", "jz      short loc_2145"], ["mov~rdx,rax", "mov~rbp,rax", "xor~eax,eax", "add~rdx,<TAG>", "setb~al", "mov~<TAG>,rdx", "test~rax,rax", "jz~FOO"]], [1, 0, 108, 0, 0, 1, 0, 0, 36, -1, 0.0, ["mov     cs:input_offset_overflow, 1"], ["mov~<TAG>,0"]], [1, 0, 282, 0, 0, 3, 0, 1, 23, 15, 0.013335787019997547, ["movzx   edx, byte ptr [rdx]", "cmp     dl, 3Dh ; '='", "jz      short loc_2DEA"], ["movzx~edx,<TAG>", "cmp~dl,0", "jz~FOO"]], [0, 0, 282, 0, 0, 3, 1, 1, 22, 15, 0.011446448288553552, ["movzx   esi, byte ptr [rcx]", "test    sil, sil", "jnz     short loc_2DC0"], ["movzx~esi,<TAG>", "test~sil,sil", "jnz~FOO"]], [1, 0, 180, 0, 0, 2, 1, 0, 8, -1, 0.0, ["or      eax, 101000h", "mov     cs:input_flags, eax"], ["or~eax,0", "mov~<TAG>,eax"]], [1, 0, 181, 0, 0, 3, 1, 1, 7, -1, 0.22872040240461294, ["mov     eax, cs:input_flags", "test    eax, 101000h", "jz      short loc_1D49"], ["mov~eax,<TAG>", "test~eax,0", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 39, -1, 0.003977017134911868, ["jmp     loc_23CD"], ["jmp~FOO"]], [1, 2, 142, 0, 0, 5, 3, 0, 21, -1, 0.0034106244632560426, ["and     eax, 200h", "cmp     eax, 1", "sbb     eax, eax", "and     eax, 200h", "or      ebx, eax"], ["and~eax,<STR>", "cmp~eax,0", "sbb~eax,eax", "and~eax,<STR>", "or~ebx,eax"]], [0, 0, 282, 0, 0, 3, 1, 1, 32, 6, 0.012133480554533187, ["movzx   edx, byte ptr [rdx]", "test    dl, dl", "jz      short loc_3152"], ["movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [0, 0, 108, 0, 0, 2, 1, 1, 40, -1, 0.009540751646014804, ["xor     ebp, ebp", "jmp     loc_2145"], ["xor~ebp,ebp", "jmp~FOO"]], [1, 0, 6, 0, 1, 4, 1, 2, 39, -1, 0.010225739173107595, ["mov     edi, 1; fd", "call    _fsync", "test    eax, eax", "jnz     short loc_2B77"], ["mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 282, 0, 0, 3, 1, 1, 14, 23, 0.008587903324745431, ["movzx   ecx, byte ptr [rdx]", "test    cl, cl", "jnz     short loc_2350"], ["movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [1, 0, 282, 0, 0, 4, 0, 0, 12, 23, 0.054888970678444365, ["lea     rdx, aIflag; \"iflag\"", "mov     rax, r14", "mov     ecx, 69h ; 'i'", "nop     dword ptr [rax+rax+00000000h]"], ["lea~rdx,<TAG>", "mov~rax,r14", "mov~ecx,0", "nop~[word ptr [rax+0]"]], [1, 0, 282, 0, 0, 3, 0, 0, 20, 15, 0.03810575389522758, ["lea     rcx, aObs; \"obs\"", "mov     rdx, r14", "mov     esi, 6Fh ; 'o'"], ["lea~rcx,<TAG>", "mov~rdx,r14", "mov~esi,0"]], [0, 0, 282, 0, 0, 3, 0, 1, 19, 16, 0.04825174825174825, ["cmp     [r14+rdx-1], cl", "lea     rsi, [r14+rdx]", "jz      short loc_2D8F"], ["cmp~[r14+0],cl", "lea~rsi,<TAG>", "jz~FOO"]], [3, 0, 141, 0, 1, 7, 2, 2, 22, -1, 0.005177278861489388, ["or      ebx, 1", "mov     ecx, 1B6h; mode", "mov     edi, 1; desired_fd", "mov     edx, ebx; flags", "call    fd_reopen", "test    eax, eax", "js      loc_2D14"], ["or~ebx,0", "mov~ecx,0", "mov~edi,0", "mov~edx,ebx", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 282, 0, 0, 3, 0, 1, 15, 23, 0.010109189056557479, ["movzx   eax, byte ptr [rax]", "cmp     al, 3Dh ; '='", "jz      short loc_2377"], ["movzx~eax,<TAG>", "cmp~al,0", "jz~FOO"]], [0, 0, 139, 0, 0, 3, 1, 1, 22, -1, 0.025469267574530732, ["mov     rbx, cs:seek_records", "test    rbx, rbx", "jz      short loc_1F7F"], ["mov~rbx,<TAG>", "test~rbx,rbx", "jz~FOO"]], [2, 0, 140, 0, 3, 15, 2, 4, 23, -1, 0.0, ["mov     rdi, cs:output_file; name", "call    quote", "lea     rsi, aOpeningS; \"opening %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     rbx, rax", "call    _dcgettext", "mov     rdx, rax; format", "mov     rax, [rsp+118h+var_100]", "mov     rcx, rbx", "mov     edi, 1; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error", "jmp     loc_1F66"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~rbx,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~rcx,rbx", "mov~edi,0", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 108, 0, 3, 15, 3, 4, 39, -1, 0.00489919437287858, ["mov     rdi, cs:input_file; name", "call    quote", "lea     rsi, aSCannotSeek; \"%s: cannot seek\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r13, rax", "call    _dcgettext", "mov     rdx, rax; format", "mov     rax, [rsp+118h+var_100]", "mov     rcx, r13", "xor     edi, edi; status", "mov     esi, [rax]; errnum", "xor     eax, eax", "call    _error", "jmp     loc_25B9"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r13,rax", "call~FOO", "mov~rdx,rax", "mov~rax,[rsp+0]", "mov~rcx,r13", "xor~edi,edi", "mov~esi,<TAG>", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 282, 0, 0, 3, 1, 1, 30, 8, 0.011924917188075083, ["movzx   edx, byte ptr [rdx]", "test    dl, dl", "jz      short loc_31F4"], ["movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [1, 0, 282, 1, 0, 5, 1, 1, 20, 17, 0.01231750705434916, ["lea     rdi, aInvalidStatusF+13h; \"\"", "add     rdx, 1", "movzx   ecx, byte ptr [rdx+rdi]", "test    cl, cl", "jz      loc_2F72"], ["lea~rdi,<TAG>", "add~rdx,0", "movzx~ecx,<TAG>", "test~cl,cl", "jz~FOO"]], [1, 0, 138, 0, 0, 2, 1, 1, 23, -1, 0.012452459820880874, ["test    byte ptr cs:conversions_mask+1, 2", "jz      loc_2777"], ["test~<TAG>,0", "jz~FOO"]], [0, 0, 108, 0, 0, 1, 0, 0, 39, -1, 0.0012636486320696848, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 134, 0, 1, 6, 1, 2, 25, -1, 0.010452705189547296, ["mov     rsi, size; length", "mov     edi, 1; fd", "lea     rbx, [rsp+118h+stdout_stat]", "call    _ftruncate", "test    eax, eax", "jz      loc_1F84"], ["mov~rsi,size", "mov~edi,0", "lea~rbx,[rsp+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 130, 0, 0, 1, 0, 0, 23, -1, 0.012759170653907496, ["lea     rbx, [rsp+118h+stdout_stat]"], ["lea~rbx,[rsp+0]"]], [0, 0, 282, 0, 0, 2, 0, 1, 35, 0, 0.016918169549748497, ["mov     cs:max_records, rax", "jmp     loc_2E2F"], ["mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 108, 1, 1, 6, 0, 2, 39, -1, 0.02355948145421831, ["mov     rsi, r13; buf", "mov     rdi, rbx; fd", "call    iwrite", "add     cs:w_bytes, rax", "cmp     rax, r13", "jz      loc_2868"], ["mov~rsi,r13", "mov~rdi,rbx", "call~FOO", "add~<TAG>,rax", "cmp~rax,r13", "jz~FOO"]], [0, 0, 108, 0, 0, 2, 0, 1, 38, -1, 0.0875025559236087, ["cmp     rbx, cs:obuf", "jz      loc_23B2"], ["cmp~rbx,<TAG>", "jz~FOO"]], [1, 0, 173, 0, 0, 5, 2, 1, 11, -1, 0.23559072506440928, ["mov     eax, esi", "and     eax, 3000h", "lea     edx, [rax-1]", "test    edx, eax", "jz      short loc_1DB7"], ["mov~eax,esi", "and~eax,0", "lea~edx,[rax-1]+0]", "test~edx,eax", "jz~FOO"]], [2, 0, 174, 0, 2, 11, 3, 3, 11, -1, 0.0, ["lea     rsi, aCannotCombineL; \"cannot combine lcase and ucase\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "mov     esi, cs:conversions_mask", "jmp     loc_1D7F"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~esi,<TAG>", "jmp~FOO"]], [3, 0, 282, 0, 1, 9, 0, 2, 18, 17, 0.045430008587903324, ["mov     rsi, [rsp+118h+invalid]; invalid", "mov     rdi, r9; str", "mov     [rsp+118h+name], r9", "mov     [rsp+118h+var_D9], 0", "call    parse_integer", "mov     edx, 1", "mov     ecx, 69h ; 'i'", "mov     r9, [rsp+118h+name]", "jmp     short loc_2DA6"], ["mov~rsi,[rsp+0]", "mov~rdi,r9", "mov~[rsp+0],r9", "mov~[rsp+0],0", "call~FOO", "mov~edx,0", "mov~ecx,0", "mov~r9,[rsp+0]", "jmp~FOO"]], [2, 0, 282, 0, 0, 6, 3, 1, 23, 33, 0.022328548644338118, ["or      edx, ecx", "mov     cs:input_blocksize, rax", "or      cs:conversions_mask, 800h", "mov     [rsp+118h+var_D9], dl", "and     [rsp+118h+var_D9], 1", "jmp     loc_2E2F"], ["or~edx,ecx", "mov~<TAG>,rax", "or~<TAG>,0", "mov~[rsp+0],dl", "and~[rsp+0],0", "jmp~FOO"]], [0, 0, 282, 0, 0, 2, 0, 1, 33, 33, 0.01655011655011655, ["mov     cs:seek_records, rax", "jmp     loc_2E2F"], ["mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 282, 0, 0, 5, 2, 1, 27, 33, 0.022267206477732795, ["or      edx, ecx", "mov     rbp, rax", "mov     [rsp+118h+var_D9], dl", "and     [rsp+118h+var_D9], 1", "jmp     loc_2E2F"], ["or~edx,ecx", "mov~rbp,rax", "mov~[rsp+0],dl", "and~[rsp+0],0", "jmp~FOO"]], [0, 0, 282, 0, 0, 2, 0, 1, 31, 33, 0.016231137283768862, ["mov     cs:skip_records, rax", "jmp     loc_2E2F"], ["mov~<TAG>,rax", "jmp~FOO"]], [1, 0, 108, 0, 0, 2, 0, 1, 39, -1, 0.05934241197399093, ["cmp     cs:translation_needed, 0", "jnz     loc_244F"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 30, 0, 1, 1, 0, 1, 38, -1, 0.0003435161329898172, ["call    write_output"], ["call~FOO"]], [0, 1, 108, 0, 0, 2, 1, 1, 33, -1, 0.005876579560790088, ["and     esi, 18h", "jz      short loc_23A2"], ["and~esi,<STR>", "jz~FOO"]], [0, 1, 108, 0, 0, 1, 0, 0, 34, -1, 0.0, ["mov     esi, 20h ; ' '; c"], ["mov~esi,<STR>"]], [0, 0, 282, 1, 0, 9, 0, 0, 23, 34, 0.0, ["mov     rdi, cs:page_size", "lea     rdx, [rdi+2]", "add     rdx, rdx", "neg     rdx", "cmp     rdx, r12", "cmova   rdx, r12", "cmp     rax, rdx", "setnbe  dl", "movzx   edx, dl"], ["mov~rdi,<TAG>", "lea~rdx,[rdi+0]", "add~rdx,rdx", "neg~rdx", "cmp~rdx,r12", "cmova~rdx,r12", "cmp~rax,rdx", "setnbe~dl", "movzx~edx,dl"]], [1, 0, 282, 0, 0, 2, 0, 1, 31, 7, 0.0001472211998527788, ["cmp     dl, 3Dh ; '='", "jnz     loc_3119"], ["cmp~dl,0", "jnz~FOO"]], [2, 0, 172, 0, 2, 10, 3, 2, 12, -1, 0.0, ["lea     rsi, msgid; \"cannot combine excl and nocreat\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "xor     esi, esi; errnum", "mov     rdx, rax; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "mov     esi, cs:conversions_mask"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "xor~esi,esi", "mov~rdx,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~esi,<TAG>"]], [1, 0, 108, 0, 3, 13, 4, 3, 39, -1, 0.004531141373246644, ["mov     rdi, cs:input_file; name", "call    quote", "lea     rsi, aOffsetOverflow; \"offset overflow while reading file %s\"", "mov     r13, rax", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, r13", "mov     rdx, rax; format", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~r13,rax", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rcx,r13", "mov~rdx,rax", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 171, 0, 0, 2, 1, 1, 12, -1, 0.23706293706293707, ["test    sil, 1", "jz      short loc_1DF2"], ["test~sil,0", "jz~FOO"]], [2, 0, 126, 0, 1, 6, 1, 2, 22, -1, 0.24423997055576, ["xor     esi, esi; act", "mov     rdx, rbx; oact", "mov     edi, 2; sig", "call    _sigaction", "cmp     [rsp+118h+stdout_stat.st_dev], 1", "jz      short loc_1FD0"], ["xor~esi,esi", "mov~rdx,rbx", "mov~edi,0", "call~FOO", "cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 168, 0, 0, 1, 0, 0, 15, -1, 0.004122193595877807, ["mov     cs:translation_needed, 1"], ["mov~<TAG>,0"]], [3, 0, 108, 0, 0, 3, 0, 0, 40, -1, 0.009099088046456467, ["mov     cs:input_seekable, 0", "mov     cs:input_seek_errno, 1Dh", "mov     [rsp+118h+code], 1"], ["mov~<TAG>,0", "mov~<TAG>,0", "mov~[rsp+0],0"]], [1, 0, 125, 0, 1, 3, 0, 1, 23, -1, 0.0, ["lea     rdi, caught_signals; set", "mov     esi, 2; signo", "call    _sigaddset"], ["lea~rdi,<TAG>", "mov~esi,0", "call~FOO"]], [0, 0, 170, 0, 0, 4, 0, 0, 13, -1, 0.002797202797202797, ["lea     rax, trans_table", "lea     rcx, ebcdic_to_ascii", "lea     rdi, [rax+100h]", "nop     word ptr [rax+rax+00h]"], ["lea~rax,<TAG>", "lea~rcx,<TAG>", "lea~rdi,[rax+0]", "nop~[ord ptr [rax+0]"]], [1, 0, 170, 1, 0, 6, 0, 1, 14, -1, 0.003471966629861367, ["movzx   edx, byte ptr [rax]", "add     rax, 1", "movzx   edx, byte ptr [rcx+rdx]", "mov     [rax-1], dl", "cmp     rdi, rax", "jnz     short loc_1DD8"], ["movzx~edx,<TAG>", "add~rax,0", "movzx~edx,<TAG>", "mov~[rax-1]+0],dl", "cmp~rdi,rax", "jnz~FOO"]]], "func_feature": [116, 213, 333, 3, 287, 448, 0, 1324, 0.03928, 95, 72], "succs": [[208, 209], [0, 201], [25], [2, 247], [2, 210], [21], [5], [5], [246, 6], [69], [9, 82], [9, 269], [39], [12, 39], [66, 220], [220, 14], [51, 111], [16], [16, 17], [45], [19, 45], [], [196, 21], [21], [21], [81, 26], [40, 25], [160], [27, 187], [27, 203], [50], [64, 30], [171, 212], [32, 228], [32], [54], [107, 35], [256, 38], [83, 37], [98, 190], [80, 44], [56, 123], [41], [41, 47], [80, 81], [101], [89], [89, 46], [52, 262], [48, 69], [65, 50], [111], [67, 262], [122, 223], [53, 222], [57, 58], [192, 55], [75, 55], [75, 55], [71], [59, 71], [281], [281, 61], [88, 90], [152, 63], [63], [220], [78], [67, 181], [49, 67], [186], [186, 70], [268, 276], [72, 74], [72, 249], [180], [260], [260, 76], [], [78, 87], [162], [94], [10, 244], [10], [143], [155, 84], [84], [99], [145, 103], [176, 177], [104], [112, 226], [138, 91], [91, 219], [267, 95], [102, 94], [105], [96, 43], [190], [99, 92], [162], [162, 100], [131, 132], [120], [104, 116], [105, 108], [231, 167], [106, 236], [43], [202, 215], [233, 109], [115, 134], [225, 124], [159], [113, 159], [133], [145], [116], [166, 182], [166, 118], [120, 117], [222], [121, 213], [180], [225], [124], [101], [128, 126], [205, 126], [148, 279], [129, 204], [162], [267, 131], [141, 142], [133], [153], [239, 135], [20, 135], [68], [229, 255], [193, 139], [156, 22], [141], [246, 23], [85, 143], [114, 164], [180], [146, 195], [157, 255], [140], [149, 151], [140, 149], [170], [154, 183], [153, 119], [86, 199], [178, 22], [193, 150], [190], [189, 158], [161, 191], [160, 168], [68, 93], [185, 22], [159], [270], [165, 270], [54], [179, 172], [65], [169, 170], [235], [179, 191], [144, 242], [173, 175], [173], [184, 42], [176], [185], [162], [54, 207], [28], [206], [182], [197], [232, 163], [265, 266], [200, 28], [253, 198], [243, 188], [281, 62], [201], [180], [194, 180], [180, 245], [180], [180], [42, 197], [251], [86], [203, 29], [248, 1], [264], [162], [279], [38], [205, 221], [274, 36], [248, 209], [162], [162], [273], [34, 211], [218, 220], [224, 217], [259, 214], [36], [224], [222], [225], [144, 174], [206, 127], [33, 228], [222], [264], [241, 227], [225, 125], [241], [235], [255], [193, 234], [130, 230], [], [264], [255], [220, 15], [237, 110], [110], [137, 20], [136, 238], [60], [240, 60], [7], [251], [11, 269], [110], [8, 24], [3, 252], [3], [136], [249, 257], [253, 254], [210, 4], [258, 261], [253], [283], [277, 271], [73, 250], [261, 77], [264], [13, 190], [190], [101], [147, 7], [272, 263], [280, 278], [265], [250], [101], [101], [101], [101], [97, 43], [34], [216, 275], [216], [268], [83, 271], [280], [283], [285, 31], [18, 284], [31], [193], [18], [286], [282, 286]], "fname": "main", "n_num": 287}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[1, 0, 0, 0, 1, 12, 2, 1, 0, 0, 0.0, ["xor     ebp, ebp", "mov     r9, rdx; rtld_fini", "pop     rsi; argc", "mov     rdx, rsp; ubp_av", "and     rsp, 0FFFFFFFFFFFFFFF0h", "push    rax", "push    rsp; stack_end", "lea     r8, __libc_csu_fini; fini", "lea     rcx, __libc_csu_init; init", "lea     rdi, main; main", "call    cs:__libc_start_main_ptr", "hlt"], ["xor~ebp,ebp", "mov~r9,rdx", "pop~rsi", "mov~rdx,rsp", "and~rsp,0", "push~rax", "push~rsp", "lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "call~<TAG>", "hlt"]]], "func_feature": [1, 2, 1, 0, 1, 0, 0, 12, 0.0, 4, 0], "succs": [[]], "fname": "_start", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_deregisterTMCloneTable_ptr", "test    rax, rax", "jz      short loc_32B0"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 6, 0, 1, 0, 1, 0.0, ["lea     rdi, __bss_start", "push    rbp", "lea     rax, __bss_start", "cmp     rax, rdi", "mov     rbp, rsp", "jz      short loc_32B0"], ["lea~rdi,<TAG>", "push~rbp", "lea~rax,<TAG>", "cmp~rax,rdi", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, -1, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 13, 0.04167, 2, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "deregister_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [3, 0, 3, 2, 0, 11, 0, 1, 0, 0, 0.0, ["lea     rdi, __bss_start", "lea     rsi, __bss_start", "push    rbp", "sub     rsi, rdi", "mov     rbp, rsp", "sar     rsi, 3", "mov     rax, rsi", "shr     rax, 3Fh", "add     rsi, rax", "sar     rsi, 1", "jz      short loc_3300"], ["lea~rdi,<TAG>", "lea~rsi,<TAG>", "push~rbp", "sub~rsi,rdi", "mov~rbp,rsp", "sar~rsi,0", "mov~rax,rsi", "shr~rax,0", "add~rsi,rax", "sar~rsi,0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_registerTMCloneTable_ptr", "test    rax, rax", "jz      short loc_3300"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, 0, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 18, 0.04167, 2, 2], "succs": [[], [0, 2], [0, 3], []], "fname": "register_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[1, 0, 0, 0, 1, 4, 0, 1, 0, 0, 0.0, ["call    deregister_tm_clones", "mov     cs:completed_7698, 1", "pop     rbp", "retn"], ["call~FOO", "mov~<TAG>,0", "pop~rbp", "retn"]], [1, 0, 2, 0, 0, 4, 0, 1, 1, -1, 0.16666666666666666, ["cmp     cs:__cxa_finalize_ptr, 0", "push    rbp", "mov     rbp, rsp", "jz      short loc_3333"], ["cmp~<TAG>,0", "push~rbp", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     rdi, cs:__dso_handle", "call    __cxa_finalize"], ["mov~rdi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:completed_7698, 0", "jnz     short locret_3348"], ["cmp~<TAG>,0", "jnz~FOO"]]], "func_feature": [2, 0, 4, 0, 5, 5, 0, 13, 0.03333, 3, 0], "succs": [[], [0, 2], [0], [], [1, 3]], "fname": "__do_global_dtors_aux", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "pop     rbp", "jmp     register_tm_clones"], ["push~rbp", "mov~rbp,rsp", "pop~rbp", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "frame_dummy", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:interrupt_signal, edi", "retn"], ["mov~<TAG>,edi", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "interrupt_handler", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[1, 0, 0, 1, 0, 4, 0, 0, 0, 0, 0.0, ["mov     eax, cs:info_signal_count", "add     eax, 1", "mov     cs:info_signal_count, eax", "retn"], ["mov~eax,<TAG>", "add~eax,0", "mov~<TAG>,eax", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 4, 0.0, 1, 1], "succs": [[]], "fname": "siginfo_handler", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 1, 2, 0, 1, 0, 0, 0.0, ["mov     edi, ebx; status", "call    _exit"], ["mov~edi,ebx", "call~FOO"]], [22, 0, 1, 0, 40, 165, 23, 41, 1, 0, 0.08333333333333333, ["lea     rsi, aUsageSOperandO; \"Usage: %s [OPERAND]...\\n  or:  %s OPTIO\"...", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aCopyAFileConve; \"Copy a file, converting and formatting \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aIfFileReadFrom; \"  if=FILE         read from FILE instea\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aBlocksAndBytes; \"\\nBLOCKS and BYTES may be followed by t\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aAsciiFromEbcdi; \"  ascii     from EBCDIC to ASCII\\n  ebc\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNocreatDoNotCr; \"  nocreat   do not create the output fi\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNoerrorContinu; \"  noerror   continue after read errors\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aEachFlagSymbol; \"\\nEach FLAG symbol may be:\\n\\n  append \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aDirectUseDirec; \"  direct    use direct I/O for data\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aDirectoryFailU; \"  directory fail unless a directory\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aDsyncUseSynchr; \"  dsync     use synchronized I/O for da\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aSyncLikewiseBu; \"  sync      likewise, but also for meta\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNonblockUseNon; \"  nonblock  use non-blocking I/O\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNoatimeDoNotUp; \"  noatime   do not update access time\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNocttyDoNotAss; \"  noctty    do not assign controlling t\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aNofollowDoNotF; \"  nofollow  do not follow symlinks\\n\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "lea     rsi, aSendingASSigna; \"\\nSending a %s signal to a running `dd'\"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rcx, aUsr1; \"USR1\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "mov     rdx, rcx", "call    ___printf_chk", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aHelpDisplayThi; \"      --help     display this help and \"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "lea     rsi, aVersionOutputV; \"      --version  output version informa\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "lea     rsi, aReportBugsToS; \"\\nReport bugs to <%s>.\\n\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, aBugCoreutilsGn; \"bug-coreutils@gnu.org\"", "mov     rsi, rax", "mov     edi, 1", "xor     eax, eax", "call    ___printf_chk", "jmp     loc_33BF"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rcx,rbp", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rcx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "mov~rdx,rcx", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 2, 9, 2, 2, 1, -1, 0.08333333333333333, ["lea     rsi, aTrySHelpForMor; \"Try `%s --help' for more information.\\n\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     rcx, rbp", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk"], ["lea~rsi,<TAG>", "xor~edi,edi", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~rcx,rbp", "mov~esi,0", "xor~eax,eax", "call~FOO"]], [2, 0, 3, 1, 0, 8, 1, 1, 0, 1, 0.0, ["push    rbp", "push    rbx", "mov     edx, 5; category", "mov     ebx, edi", "sub     rsp, 8", "test    edi, edi", "mov     rbp, cs:program_name", "jz      short loc_33C6"], ["push~rbp", "push~rbx", "mov~edx,0", "mov~ebx,edi", "sub~rsp,0", "test~edi,edi", "mov~rbp,<TAG>", "jz~FOO"]]], "func_feature": [43, 26, 45, 0, 4, 4, 3, 184, 0.04167, 26, 1], "succs": [[], [0], [0], [1, 2]], "fname": "usage", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0.16666666666666666, ["jmp     close_stdout"], ["jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.0, ["cmp     cs:close_stdout_required, 0", "jnz     short loc_36D0"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0.0, [], []]], "func_feature": [0, 0, 2, 0, 4, 3, 0, 4, 0.04167, 1, 0], "succs": [[3], [0, 2], [], []], "fname": "maybe_close_stdout", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[1, 0, 0, 1, 0, 7, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "mov     eax, ebx", "pop     value", "pop     table", "pop     error_msgid", "pop     str", "retn"], ["add~rsp,0", "mov~eax,ebx", "pop~value", "pop~table", "pop~error_msgid", "pop~str", "retn"]], [0, 0, 16, 0, 0, 3, 2, 1, 6, 8, 0.12083333333333333, ["or      ebx, edx", "test    strcomma, strcomma", "jz      short loc_3754"], ["or~ebx,edx", "test~strcomma,strcomma", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 6, 1, 0.15, ["test    strcomma, strcomma", "jz      short loc_37AF"], ["test~strcomma,strcomma", "jz~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 5, 2, 0.2833333333333333, ["cmp     byte ptr [entry], 0", "jz      short loc_3761"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 16, 0, 1, 5, 0, 1, 1, 6, 0.17083333333333334, ["mov     esi, 2Ch ; ','; c", "mov     rdi, str; s", "call    _strchr", "mov     r8, entry", "nop     dword ptr [strcomma]"], ["mov~esi,0", "mov~rdi,str", "call~FOO", "mov~r8,entry", "nop~<TAG>"]], [0, 0, 16, 0, 0, 2, 0, 1, 7, 7, 0.0875, ["lea     str, [strcomma+1]", "jmp     short loc_36F5"], ["lea~str,[strcomma+0]", "jmp~FOO"]], [1, 0, 16, 1, 0, 9, 1, 0, 0, 7, 0.0, ["push    r13", "push    r12", "mov     r13, str", "push    rbp", "push    rbx", "mov     rbp, table", "mov     r12, error_msgid", "xor     ebx, ebx", "sub     rsp, 8"], ["push~r13", "push~r12", "mov~r13,str", "push~rbp", "push~rbx", "mov~rbp,table", "mov~r12,error_msgid", "xor~ebx,ebx", "sub~rsp,0"]], [0, 0, 16, 0, 0, 4, 1, 1, 3, 4, 0.4, ["movzx   esi, byte ptr [rcx]", "movzx   edi, byte ptr [rdx]", "test    sil, sil", "jnz     short loc_3710"], ["movzx~esi,<TAG>", "movzx~edi,<TAG>", "test~sil,sil", "jnz~FOO"]], [0, 0, 16, 0, 0, 3, 0, 1, 2, 5, 0.35, ["mov     rcx, entry", "mov     rdx, str", "jmp     short loc_371D"], ["mov~rcx,entry", "mov~rdx,str", "jmp~FOO"]], [2, 0, 16, 2, 0, 4, 0, 1, 4, 3, 0.175, ["add     rdx, 1", "add     rcx, 1", "cmp     sil, dil", "jnz     short loc_373B"], ["add~rdx,0", "add~rcx,0", "cmp~sil,dil", "jnz~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 5, 3, 0.01875, ["test    dil, dil", "jnz     short loc_373B"], ["test~dil,dil", "jnz~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 4, 4, 0.19583333333333333, ["cmp     dil, 2Ch ; ','", "jz      short loc_3733"], ["cmp~dil,0", "jz~FOO"]], [0, 0, 16, 0, 0, 3, 1, 1, 5, 3, 0.16875, ["mov     edx, [entry+0Ch]", "test    edx, edx", "jnz     short loc_3747"], ["mov~edx,[entry+0]", "test~edx,edx", "jnz~FOO"]], [3, 0, 0, 0, 4, 19, 5, 4, 8, -1, 0.0, ["mov     rcx, slen; argsize", "mov     rdx, r13; arg", "mov     esi, 6; s", "xor     edi, edi; n", "call    quotearg_n_style_mem", "mov     edx, 5; category", "mov     rsi, error_msgid; msgid", "xor     edi, edi; domainname", "mov     value, rax", "call    _dcgettext", "lea     rdx, format; \"%s: %s\"", "mov     rcx, rax", "xor     edi, edi; status", "mov     r8, rbx", "xor     esi, esi; errnum", "xor     eax, eax", "call    _error", "mov     edi, 1; status", "call    usage"], ["mov~rcx,slen", "mov~rdx,r13", "mov~esi,0", "xor~edi,edi", "call~FOO", "mov~edx,0", "mov~rsi,error_msgid", "xor~edi,edi", "mov~value,rax", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "xor~edi,edi", "mov~r8,rbx", "xor~esi,esi", "xor~eax,eax", "call~FOO", "mov~edi,0", "call~FOO"]], [2, 0, 1, 1, 0, 8, 2, 1, 7, 0, 0.027083333333333334, ["xor     eax, eax", "or      rcx, 0FFFFFFFFFFFFFFFFh", "mov     rdi, str", "repne scasb", "mov     rax, rcx", "not     rax", "sub     rax, 1", "jmp     short loc_3769"], ["xor~eax,eax", "or~rcx,0", "mov~rdi,str", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "sub~rax,0", "jmp~FOO"]], [0, 0, 1, 1, 0, 1, 0, 0, 7, -1, 0.027083333333333334, ["sub     strcomma, str"], ["sub~strcomma,str"]], [1, 0, 16, 1, 0, 2, 0, 1, 6, 6, 0.1, ["add     entry, 10h", "jmp     short loc_3708"], ["add~entry,0", "jmp~FOO"]]], "func_feature": [5, 14, 17, 0, 17, 23, 4, 78, 0.13382, 1, 7], "succs": [[], [0, 5], [14, 15], [16, 2], [8], [4], [4], [9, 11], [7], [3, 7], [3, 12], [10, 12], [1, 3], [], [13], [13], [8]], "fname": "parse_symbols", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.17777777777777778, ["mov     rdx, [rsp+28h+var_10]", "xor     rdx, fs:28h", "mov     rax, rcx", "jnz     short loc_387A"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "mov~rax,rcx", "jnz~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 2, 2, 0.06666666666666667, ["mov     byte ptr [invalid], 1", "xor     ecx, ecx", "jmp     short loc_3811"], ["mov~<TAG>,0", "xor~ecx,ecx", "jmp~FOO"]], [1, 0, 6, 1, 1, 6, 1, 2, 2, 2, 0.06944444444444445, ["add     rdi, 1; str", "mov     rsi, invalid; invalid", "call    parse_integer", "test    rax, rax", "mov     rcx, rax", "jz      short loc_3811"], ["add~rdi,0", "mov~rsi,invalid", "call~FOO", "test~rax,rax", "mov~rcx,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 4, 2, 0.016666666666666666, ["jmp     short loc_3811"], ["jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 2, 2, 0.025, ["mov     rcx, [rsp+28h+n]"], ["mov~rcx,[rsp+0]"]], [2, 1, 10, 1, 1, 13, 1, 2, 0, 4, 0.0, ["push    rbx", "lea     r8, valid_suffixes; \"bcEGkKMPTwYZ0\"", "mov     rbx, invalid", "mov     edx, 0Ah; strtol_base", "sub     rsp, 20h", "lea     rcx, [rsp+28h+n]; val", "lea     invalid, [rsp+28h+suffix]; ptr", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "call    xstrtoumax", "cmp     eax, 2", "jz      short loc_3830"], ["push~rbx", "lea~r8,<TAG>", "mov~rbx,invalid", "mov~edx,0", "sub~rsp,<STR>", "lea~rcx,[rsp+0]", "lea~invalid,[rsp+0]", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "cmp~eax,0", "jz~FOO"]], [0, 1, 0, 1, 0, 3, 0, 0, 4, -1, 0.0, ["add     rsp, 20h", "pop     invalid", "retn"], ["add~rsp,<STR>", "pop~invalid", "retn"]], [0, 0, 5, 0, 0, 2, 1, 1, 1, 3, 0.03333333333333333, ["test    eax, eax", "jnz     short loc_383A"], ["test~eax,eax", "jnz~FOO"]], [0, 0, 5, 2, 0, 9, 1, 1, 3, 3, 0.044444444444444446, ["mov     rdi, [rsp+28h+n]", "xor     edx, edx", "mov     rsi, rdi", "imul    rsi, multiplier", "mov     multiplier, rsi", "div     multiplier", "mov     multiplier, rsi", "cmp     rdi, rax", "jnz     short loc_383A"], ["mov~rdi,[rsp+0]", "xor~edx,edx", "mov~rsi,rdi", "imul~rsi,multiplier", "mov~multiplier,rsi", "div~,multiplier", "mov~multiplier,rsi", "cmp~rdi,rax", "jnz~FOO"]], [1, 0, 7, 0, 0, 3, 0, 1, 1, 3, 0.05555555555555556, ["mov     rdi, [rsp+28h+suffix]", "cmp     byte ptr [rdi], 78h ; 'x'", "jz      short loc_3848"], ["mov~rdi,[rsp+0]", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 6, 11, 1, 11, 15, 2, 46, 0.04444, 2, 5], "succs": [[10, 6], [0], [0, 8], [0], [0], [9, 7], [], [1, 4], [1, 3], [1, 2], []], "fname": "parse_integer", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[1, 0, 6, 0, 0, 3, 1, 1, 0, 0, 0.0641025641025641, ["and     ebx, 0FFFEFFFFh", "cmp     ebx, r12d", "jnz     loc_38F3"], ["and~ebx,0", "cmp~ebx,r12d", "jnz~FOO"]], [2, 0, 8, 0, 0, 4, 1, 1, 5, 4, 0.10256410256410256, ["mov     eax, [rsp+0C8h+st.st_mode]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_3977"], ["mov~eax,[rsp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 9, 0, 1, 6, 1, 2, 4, 3, 0.10897435897435898, ["mov     rdx, rsp; stat_buf", "mov     esi, ebp; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "jnz     short loc_3908"], ["mov~rdx,rsp", "mov~esi,ebp", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 3, 0, 4, 16, 2, 5, 2, 2, 0.05448717948717949, ["mov     rdi, name; name", "call    quote", "lea     rsi, aSettingFlagsFo; \"setting flags for %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     fd, rax", "call    _dcgettext", "mov     new_flags, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, rbp", "mov     rdx, rbx; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_38AA"], ["mov~rdi,name", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~fd,rax", "call~FOO", "mov~new_flags,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,rbp", "mov~rdx,rbx", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 12, 0, 1, 8, 2, 2, 1, 3, 0.05769230769230769, ["mov     esi, 3; cmd", "mov     ebp, edi", "mov     r13, name", "call    _fcntl", "or      ebx, eax", "test    eax, eax", "mov     r12d, eax", "js      short loc_3908"], ["mov~esi,0", "mov~ebp,edi", "mov~r13,name", "call~FOO", "or~ebx,eax", "test~eax,eax", "mov~r12d,eax", "js~FOO"]], [1, 0, 4, 0, 1, 3, 0, 2, 6, 3, 0.01282051282051282, ["call    ___errno_location", "mov     dword ptr [rax], 14h", "jmp     short loc_3908"], ["call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [2, 0, 4, 1, 1, 7, 1, 2, 4, 2, 0.04807692307692307, ["xor     eax, eax", "mov     edx, ebx", "mov     esi, 4; cmd", "mov     edi, ebp; fd", "call    _fcntl", "add     eax, 1", "jnz     short loc_38AA"], ["xor~eax,eax", "mov~edx,ebx", "mov~esi,0", "mov~edi,ebp", "call~FOO", "add~eax,0", "jnz~FOO"]], [2, 0, 13, 1, 0, 11, 2, 1, 0, 2, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "mov     ebx, esi", "sub     rsp, 0A8h", "mov     rax, fs:28h", "mov     [rsp+0C8h+var_30], rax", "xor     eax, eax", "and     ebx, 0FFFDFEFFh", "jnz     short loc_38CF"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "mov~ebx,esi", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "and~ebx,0", "jnz~FOO"]], [1, 0, 10, 0, 0, 2, 1, 1, 3, 3, 0.12179487179487179, ["test    ebx, 10000h", "jnz     short loc_3947"], ["test~ebx,0", "jnz~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 2, 2, 0.09935897435897435, ["cmp     eax, ebx", "jz      short loc_38AA"], ["cmp~eax,ebx", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.14102564102564102, ["mov     rax, [rsp+0C8h+var_30]", "xor     rax, fs:28h", "jnz     loc_398B"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 7, 2, 0.016025641025641024, ["jmp     loc_38AA"], ["jmp~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 2, -1, 0.0, ["add     rsp, 0A8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]]], "func_feature": [9, 12, 21, 1, 14, 21, 2, 73, 0.05907, 2, 3], "succs": [[12, 6], [0, 5], [1, 3], [11], [9, 3], [3], [11, 3], [11, 4], [2, 6], [8, 11], [], [10, 13], [11], []], "fname": "set_fd_flags", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[5, 0, 9, 0, 3, 25, 2, 4, 0, 0, 0.13636363636363635, ["mov     rdi, cs:w_bytes; n", "lea     r12, [rsp+2D8h+hbuf]", "mov     r8d, 1; to_block_size", "mov     ecx, 1; from_block_size", "mov     edx, 1D1h; opts", "mov     rsi, r12; buf", "call    human_readable", "mov     rbx, cs:w_bytes", "lea     rdx, aLuBytesSCopied; \"%lu bytes (%s) copied\"", "lea     rsi, aLuByteSCopied; \"%lu byte (%s) copied\"", "xor     edi, edi; domainname", "mov     r8d, 5; category", "mov     r13, rax", "mov     rcx, rbx; n", "call    _dcngettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     r8, r13", "xor     eax, eax", "mov     rcx, rbx", "mov     esi, 1", "call    ___fprintf_chk", "mov     rax, cs:start_time", "cmp     rax, now", "jge     short loc_3B48"], ["mov~rdi,<TAG>", "lea~r12,[rsp+0]", "mov~r8d,0", "mov~ecx,0", "mov~edx,0", "mov~rsi,r12", "call~FOO", "mov~rbx,<TAG>", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~r8d,0", "mov~r13,rax", "mov~rcx,rbx", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~r8,r13", "xor~eax,eax", "mov~rcx,rbx", "mov~esi,0", "call~FOO", "mov~rax,<TAG>", "cmp~rax,now", "jge~FOO"]], [1, 0, 10, 0, 0, 2, 1, 1, 1, 2, 0.03787878787878788, ["test    byte ptr cs:status_flags, 1", "jz      short loc_3A90"], ["test~<TAG>,0", "jz~FOO"]], [3, 0, 10, 0, 2, 14, 3, 3, 1, 2, 0.03787878787878788, ["lea     rdx, msgid2; \"%lu truncated records\\n\"", "lea     rsi, msgid1; \"%lu truncated record\\n\"", "xor     edi, edi; domainname", "mov     r8d, 5; category", "mov     rcx, rbx; n", "call    _dcngettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     rcx, rbx", "xor     eax, eax", "mov     esi, 1", "call    ___fprintf_chk", "test    byte ptr cs:status_flags, 1", "jnz     short loc_3A25"], ["lea~rdx,<TAG>", "lea~rsi,<TAG>", "xor~edi,edi", "mov~r8d,0", "mov~rcx,rbx", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~rcx,rbx", "xor~eax,eax", "mov~esi,0", "call~FOO", "test~<TAG>,0", "jnz~FOO"]], [3, 1, 12, 2, 3, 34, 4, 4, 0, 3, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 2B0h", "mov     rax, fs:28h", "mov     [rsp+2D8h+var_30], rax", "xor     eax, eax", "call    gethrxtime", "mov     r14, cs:w_partial", "lea     rsi, aLuLuRecordsInL; \"%lu+%lu records in\\n%lu+%lu records out\"...", "mov     rbx, cs:r_full", "xor     edi, edi; domainname", "mov     r13, cs:w_full", "mov     r12, cs:r_partial", "mov     edx, 5; category", "mov     rbp, rax", "call    _dcgettext", "sub     rsp, 8", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "push    r14", "mov     rcx, rbx", "xor     eax, eax", "mov     r9, r13", "mov     r8, r12", "mov     esi, 1", "call    ___fprintf_chk", "mov     rbx, cs:r_truncate", "pop     rax", "pop     rdx", "test    rbx, rbx", "jnz     short loc_3A50"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~r14,<TAG>", "lea~rsi,<TAG>", "mov~rbx,<TAG>", "xor~edi,edi", "mov~r13,<TAG>", "mov~r12,<TAG>", "mov~edx,0", "mov~rbp,rax", "call~FOO", "sub~rsp,0", "mov~rdi,<TAG>", "mov~rdx,rax", "push~r14", "mov~rcx,rbx", "xor~eax,eax", "mov~r9,r13", "mov~r8,r12", "mov~esi,0", "call~FOO", "mov~rbx,<TAG>", "pop~rax", "pop~rdx", "test~rbx,rbx", "jnz~FOO"]], [2, 0, 5, 0, 0, 9, 2, 1, 4, 4, 0.03409090909090909, ["mov     rax, delta_xtime", "mov     rdx, delta_xtime", "pxor    xmm0, xmm0", "shr     rax, 1", "and     edx, 1", "or      rax, rdx", "cvtsi2sd xmm0, rax", "addsd   xmm0, xmm0", "jmp     loc_3B19"], ["mov~rax,delta_xtime", "mov~rdx,delta_xtime", "pxor~xmm0,xmm0", "shr~rax,0", "and~edx,0", "or~rax,rdx", "cvtsi2sd~xmm0,rax", "addsd~xmm0,xmm0", "jmp~FOO"]], [0, 0, 7, 1, 0, 3, 0, 1, 3, 5, 0.09090909090909091, ["mov     r8, now", "sub     r8, rax; to_block_size", "js      loc_3BA8"], ["mov~r8,now", "sub~r8,rax", "js~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.15151515151515152, ["mov     rax, [rsp+2D8h+var_30]", "xor     rax, fs:28h", "jnz     loc_3BC9"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 1, 0, 1, 0, 7, 0, 0, 3, -1, 0.0, ["add     rsp, 2B0h", "pop     rbx", "pop     now", "pop     r12", "pop     r13", "pop     r14", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~now", "pop~r12", "pop~r13", "pop~r14", "retn"]], [1, 0, 4, 0, 1, 7, 1, 1, 3, 3, 0.05303030303030303, ["lea     rsi, aInfinityB; \"Infinity B\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "pxor    xmm1, xmm1", "mov     rbx, rax", "movsd   [rsp+2D8h+delta_s], xmm1"], ["lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "call~FOO", "pxor~xmm1,xmm1", "mov~rbx,rax", "movsd~[rsp+0],xmm1"]], [2, 0, 4, 0, 1, 9, 0, 2, 5, 3, 0.09090909090909091, ["divsd   xmm0, cs:qword_AC80", "mov     rdi, cs:w_bytes; n", "mov     ecx, 3B9ACA00h; from_block_size", "mov     edx, 1D1h; opts", "mov     rsi, r12; buf", "movsd   [rsp+2D8h+delta_s], xmm0", "call    human_readable", "mov     rbx, rax", "jmp     short loc_3B68"], ["divsd~xmm0,<TAG>", "mov~rdi,<TAG>", "mov~ecx,0", "mov~edx,0", "mov~rsi,r12", "movsd~[rsp+0],xmm0", "call~FOO", "mov~rbx,rax", "jmp~FOO"]], [0, 0, 5, 0, 0, 2, 0, 0, 4, 4, 0.03409090909090909, ["pxor    xmm0, xmm0", "cvtsi2sd xmm0, delta_xtime"], ["pxor~xmm0,xmm0", "cvtsi2sd~xmm0,delta_xtime"]], [3, 0, 3, 0, 2, 12, 1, 3, 4, 2, 0.13636363636363635, ["lea     rsi, aGSSS; \", %g s, %s/s\\n\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "movsd   xmm0, [rsp+2D8h+delta_s]", "mov     rdx, rax", "mov     rcx, bytes_per_second", "mov     esi, 1", "mov     eax, 1", "call    ___fprintf_chk", "jmp     loc_3A25"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rdi,<TAG>", "movsd~xmm0,[rsp+0]", "mov~rdx,rax", "mov~rcx,bytes_per_second", "mov~esi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]]], "func_feature": [13, 15, 22, 1, 13, 17, 5, 128, 0.06177, 18, 4], "succs": [[9, 5], [0, 7], [0, 7], [1, 2], [10], [11, 4], [], [8, 6], [], [12], [12], [10], [7]], "fname": "print_stats", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[2, 0, 4, 0, 4, 16, 2, 5, 0, 0, 0.0, ["mov     rdi, cs:input_file; name", "call    quote", "lea     rsi, aClosingInputFi; \"closing input file %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     rbp, rax", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "mov     rcx, rbp", "mov     rdx, rbx; format", "mov     edi, 1; status", "xor     eax, eax", "call    _error", "jmp     loc_3BE1"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~rbp,rax", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "mov~rcx,rbp", "mov~rdx,rbx", "mov~edi,0", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 5, 1, 1, 7, 2, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "xor     edi, edi; fd", "sub     rsp, 8", "call    _close", "test    eax, eax", "js      short loc_3C48"], ["push~rbp", "push~rbx", "xor~edi,edi", "sub~rsp,0", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0.0, [], []], [3, 0, 1, 1, 3, 18, 2, 4, 2, 0, 0.15000000000000002, ["mov     rdi, cs:output_file; name", "call    quote", "lea     rsi, aClosingOutputF; \"closing output file %s\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     rbp, rax", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "add     rsp, 8", "mov     rcx, rbp", "mov     rdx, rbx; format", "mov     edi, 1; status", "xor     eax, eax", "pop     rbx", "pop     rbp", "jmp     _error"], ["mov~rdi,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~rbp,rax", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~esi,<TAG>", "add~rsp,0", "mov~rcx,rbp", "mov~rdx,rbx", "mov~edi,0", "xor~eax,eax", "pop~rbx", "pop~rbp", "jmp~FOO"]], [1, 0, 3, 0, 1, 4, 1, 2, 1, 0, 0.30000000000000004, ["mov     edi, 1; fd", "call    _close", "test    eax, eax", "js      short loc_3C00"], ["mov~edi,0", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 2, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]]], "func_feature": [9, 7, 13, 0, 6, 6, 2, 49, 0.075, 4, 3], "succs": [[4], [0, 4], [], [2], [3, 5], []], "fname": "cleanup", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 8, 0, 1, 8, 2, 2, 0, 0, 0.25, ["xor     edi, edi; how", "mov     rdx, rbp; oset", "mov     rsi, r12; set", "call    _sigprocmask", "mov     ebx, cs:interrupt_signal", "mov     eax, cs:info_signal_count", "test    eax, eax", "jz      short loc_3D0B"], ["xor~edi,edi", "mov~rdx,rbp", "mov~rsi,r12", "call~FOO", "mov~ebx,<TAG>", "mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 0, 8, 0, 0, 3, 0, 1, 1, 5, 0.06944444444444445, ["mov     rbp, rsp", "lea     r12, caught_signals", "jmp     short loc_3CE5"], ["mov~rbp,rsp", "lea~r12,<TAG>", "jmp~FOO"]], [0, 0, 8, 0, 3, 8, 1, 4, 4, 2, 0.10416666666666666, ["call    cleanup", "call    print_stats", "mov     edi, ebx; sig", "call    _raise", "mov     edx, cs:interrupt_signal", "mov     eax, cs:info_signal_count", "or      edx, eax", "jnz     short loc_3CE5"], ["call~FOO", "call~FOO", "mov~edi,ebx", "call~FOO", "mov~edx,<TAG>", "mov~eax,<TAG>", "or~edx,eax", "jnz~FOO"]], [0, 0, 8, 0, 1, 5, 1, 2, 4, 2, 0.10416666666666666, ["call    print_stats", "mov     edx, cs:interrupt_signal", "mov     eax, cs:info_signal_count", "or      edx, eax", "jz      short loc_3D3F"], ["call~FOO", "mov~edx,<TAG>", "mov~eax,<TAG>", "or~edx,eax", "jz~FOO"]], [1, 0, 8, 0, 1, 6, 2, 2, 3, 3, 0.2777777777777778, ["xor     edx, edx; oset", "mov     rsi, rbp; set", "mov     edi, 2; how", "call    _sigprocmask", "test    ebx, ebx", "jz      short loc_3CD0"], ["xor~edx,edx", "mov~rsi,rbp", "mov~edi,0", "call~FOO", "test~ebx,ebx", "jz~FOO"]], [1, 0, 8, 1, 0, 2, 0, 0, 3, 4, 0.0, ["sub     eax, 1", "mov     cs:info_signal_count, eax"], ["sub~eax,0", "mov~<TAG>,eax"]], [0, 1, 9, 1, 0, 11, 2, 1, 0, 2, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 90h", "mov     rax, fs:28h", "mov     [rsp+0A8h+var_20], rax", "xor     eax, eax", "mov     eax, cs:interrupt_signal", "mov     edx, cs:info_signal_count", "or      edx, eax", "jz      loc_3D3F"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~eax,<TAG>", "mov~edx,<TAG>", "or~edx,eax", "jz~FOO"]], [0, 1, 0, 1, 0, 5, 0, 0, 2, -1, 0.0, ["add     rsp, 90h", "pop     rbx", "pop     rbp", "pop     r12", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.19444444444444442, ["mov     rax, [rsp+0A8h+var_20]", "xor     rax, fs:28h", "jnz     short loc_3D5E"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [7, 9, 14, 1, 10, 14, 3, 52, 0.1, 4, 3], "succs": [[4, 5], [0], [0, 8], [0, 8], [2, 3], [4], [8, 1], [], [9, 7], []], "fname": "process_signals", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[1, 0, 3, 0, 1, 3, 0, 2, 0, 0, 0.0, ["call    ___errno_location", "cmp     dword ptr [rax], 4", "jnz     short loc_3DAD"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 3, 0, 2, 8, 1, 3, 1, 1, 0.3333333333333333, ["call    process_signals", "mov     rdx, size; nbytes", "mov     rsi, buf; buf", "mov     edi, r13d; fd", "call    _read", "test    rax, rax", "mov     rbx, rax", "js      short loc_3D88"], ["call~FOO", "mov~rdx,size", "mov~rsi,buf", "mov~edi,r13d", "call~FOO", "test~rax,rax", "mov~rbx,rax", "js~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 2, 0, 0.0, ["add     rsp, 8", "mov     rax, rbx", "pop     rbx", "pop     size", "pop     buf", "pop     fd", "retn"], ["add~rsp,0", "mov~rax,rbx", "pop~rbx", "pop~size", "pop~buf", "pop~fd", "retn"]], [1, 0, 3, 1, 0, 9, 0, 1, 0, 2, 0.0, ["push    r13", "push    r12", "mov     r13d, edi", "push    rbp", "push    rbx", "mov     r12, buf", "mov     rbp, size", "sub     rsp, 8", "jmp     short loc_3D92"], ["push~r13", "push~r12", "mov~r13d,edi", "push~rbp", "push~rbx", "mov~r12,buf", "mov~rbp,size", "sub~rsp,0", "jmp~FOO"]]], "func_feature": [3, 1, 6, 0, 4, 5, 2, 27, 0.08333, 0, 2], "succs": [[1, 2], [0, 2], [], [1]], "fname": "iread", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 4, 7, 0, 4, 0, 0, 0.0, ["push    rbx", "mov     ebx, edi", "call    cleanup", "call    print_stats", "call    process_signals", "mov     edi, ebx; status", "call    _exit"], ["push~rbx", "mov~ebx,edi", "call~FOO", "call~FOO", "call~FOO", "mov~edi,ebx", "call~FOO"]]], "func_feature": [4, 0, 4, 0, 1, 0, 4, 7, 0.0, 0, 0], "succs": [[]], "fname": "quit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[1, 0, 7, 0, 1, 7, 2, 2, 0, 0, 0.1111111111111111, ["lea     rdx, [rsp+98h+s2]", "xor     eax, eax", "mov     esi, 80306D02h; request", "mov     edi, ebx; fd", "call    _ioctl", "test    eax, eax", "jnz     short loc_3E60"], ["lea~rdx,[rsp+0]", "xor~eax,eax", "mov~esi,0", "mov~edi,ebx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 1, 2, 0.06944444444444445, ["test    new_position, new_position", "js      short loc_3E60"], ["test~new_position,new_position", "js~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 1, 1, 0.19444444444444442, ["mov     rcx, [rsp+98h+var_30]", "xor     rcx, fs:28h", "mov     rax, rbp", "jnz     short loc_3EBB"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~rax,rbp", "jnz~FOO"]], [3, 0, 9, 1, 2, 23, 2, 3, 0, 2, 0.0, ["push    r13", "push    r12", "mov     r13, filename", "push    rbp", "push    rbx", "mov     ebx, esi", "mov     rbp, offset", "mov     esi, 80306D02h; request", "mov     edi, ebx; fd", "sub     rsp, 78h", "mov     rax, fs:28h", "mov     [rsp+98h+var_30], rax", "xor     eax, eax", "mov     offset, rsp", "call    _ioctl", "mov     rsi, offset; offset", "mov     r12d, eax", "mov     edx, 1; whence", "mov     edi, ebx; fd", "call    _lseek", "test    r12d, r12d", "mov     offset, rax", "jnz     short loc_3E60"], ["push~r13", "push~r12", "mov~r13,filename", "push~rbp", "push~rbx", "mov~ebx,esi", "mov~rbp,offset", "mov~esi,0", "mov~edi,ebx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~offset,rsp", "call~FOO", "mov~rsi,offset", "mov~r12d,eax", "mov~edx,0", "mov~edi,ebx", "call~FOO", "test~r12d,r12d", "mov~offset,rax", "jnz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 3, 2, 0.125, ["mov     rax, [rsp+98h+s2.mt_resid]", "cmp     [rsp+98h+s1.mt_resid], rax", "jnz     short loc_3E60"], ["mov~rax,[rsp+0]", "cmp~[rsp+0],rax", "jnz~FOO"]], [3, 0, 3, 0, 3, 16, 5, 4, 5, 2, 0.020833333333333332, ["mov     fdesc, [rsp+98h+s2.mt_type]", "lea     rsi, aWarningWorking; \"warning: working around lseek kernel bu\"...", "mov     edx, 5; category", "xor     edi, edi; domainname", "or      new_position, 0FFFFFFFFFFFFFFFFh", "call    _dcgettext", "mov     r8, rbx", "mov     rdx, rax; format", "mov     rcx, filename", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "call    ___errno_location", "mov     dword ptr [rax], 0", "jmp     short loc_3E60"], ["mov~fdesc,[rsp+0]", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "or~new_position,0", "call~FOO", "mov~r8,rbx", "mov~rdx,rax", "mov~rcx,filename", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "call~FOO", "call~FOO", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 5, 2, 0.020833333333333332, ["nop"], ["nop"]], [1, 0, 0, 1, 0, 6, 0, 0, 2, -1, 0.0, ["add     rsp, 78h", "pop     rbx", "pop     rbp", "pop     r12", "pop     filename", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~filename", "retn"]], [0, 0, 5, 0, 0, 3, 0, 1, 4, 3, 0.1111111111111111, ["mov     rax, qword ptr [rsp+98h+s2.mt_fileno]", "cmp     qword ptr [rsp+98h+s1.mt_fileno], rax", "jz      short loc_3E7E"], ["mov~rax,[word ptr [rsp+0]", "cmp~[word ptr [rsp+0],rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [7, 11, 14, 1, 10, 14, 2, 66, 0.06528, 2, 2], "succs": [[2, 4], [0, 2], [9, 7], [1, 2], [8, 2], [2], [2], [], [5, 6], []], "fname": "skip_via_lseek", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[1, 0, 14, 1, 1, 3, 0, 2, 0, 0, 0.05526315789473684, ["call    print_stats", "sub     rbx, 1", "jnz     short loc_3F3F"], ["call~FOO", "sub~rbx,0", "jnz~FOO"]], [2, 0, 14, 0, 3, 14, 4, 4, 3, 1, 0.07105263157894737, ["call    quote", "lea     rsi, aReadingS; \"reading %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r15, rax", "call    _dcgettext", "mov     esi, [r14]; errnum", "mov     rdx, rax; format", "xor     edi, edi; status", "xor     eax, eax", "mov     rcx, r15", "call    _error", "test    byte ptr cs:conversions_mask+1, 1", "jz      loc_403D"], ["call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r15,rax", "call~FOO", "mov~esi,<TAG>", "mov~rdx,rax", "xor~edi,edi", "xor~eax,eax", "mov~rcx,r15", "call~FOO", "test~<TAG>,0", "jz~FOO"]], [0, 0, 14, 1, 0, 6, 2, 1, 4, 5, 0.02894736842105263, ["xor     edx, edx", "add     nread, cs:input_offset", "setb    dl", "mov     cs:input_offset, rax", "test    rdx, rdx", "jz      short loc_3F39"], ["xor~edx,edx", "add~nread,<TAG>", "setb~dl", "mov~<TAG>,rax", "test~rdx,rdx", "jz~FOO"]], [0, 0, 14, 0, 0, 2, 1, 1, 3, 5, 0.09999999999999999, ["test    ebp, ebp", "jnz     short loc_3F39"], ["test~ebp,ebp", "jnz~FOO"]], [0, 0, 1, 0, 0, 1, 1, 0, 4, -1, 0.02763157894736842, ["xor     eax, eax"], ["xor~eax,eax"]], [1, 0, 14, 1, 0, 2, 0, 1, 4, 4, 0.10789473684210527, ["sub     rbx, 1", "jz      short loc_3FA2"], ["sub~rbx,0", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 3, -1, 0.02894736842105263, ["test    ebp, ebp", "jnz     short loc_3FA2"], ["test~ebp,ebp", "jnz~FOO"]], [0, 0, 3, 1, 0, 6, 2, 1, 4, -1, 0.010526315789473684, ["xor     eax, eax", "add     rcx, cs:input_offset", "setb    al", "mov     cs:input_offset, rcx", "test    rax, rax", "jz      short loc_3FA2"], ["xor~eax,eax", "add~rcx,<TAG>", "setb~al", "mov~<TAG>,rcx", "test~rax,rax", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 3, -1, 0.010526315789473684, ["mov     nread, records", "jmp     short loc_3FA4"], ["mov~nread,records", "jmp~FOO"]], [0, 0, 14, 0, 0, 1, 0, 1, 2, 6, 0.14210526315789473, ["jz      loc_3FFE"], ["jz~FOO"]], [3, 1, 20, 2, 1, 21, 1, 1, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "mov     r13, buf", "push    rbp", "push    rbx", "mov     r12, blocksize", "mov     rbx, records", "mov     ebp, edi", "sub     rsp, 18h", "mov     [rsp+48h+file], file_0", "call    ___errno_location", "xor     edx, edx", "mov     r14, rax", "mov     dword ptr [rax], 0", "mov     rax, 7FFFFFFFFFFFFFFFh", "mov     [rsp+48h+errnum], 0", "div     blocksize", "cmp     rax, records", "jb      short loc_3F3F"], ["push~r15", "push~r14", "push~r13", "push~r12", "mov~r13,buf", "push~rbp", "push~rbx", "mov~r12,blocksize", "mov~rbx,records", "mov~ebp,edi", "sub~rsp,<STR>", "mov~<TAG>,file_0", "call~FOO", "xor~edx,edx", "mov~r14,rax", "mov~<TAG>,0", "mov~rax,0", "mov~[rsp+0],0", "div~,blocksize", "cmp~rax,records", "jb~FOO"]], [0, 0, 19, 0, 0, 1, 0, 1, 1, 6, 0.015789473684210527, ["jmp     loc_3FB3"], ["jmp~FOO"]], [0, 0, 14, 0, 0, 3, 0, 1, 3, 4, 0.06315789473684211, ["mov     eax, [r14]", "mov     [rsp+48h+errnum], eax", "jmp     loc_3F3F"], ["mov~eax,<TAG>", "mov~[rsp+0],eax", "jmp~FOO"]], [0, 0, 18, 1, 1, 10, 1, 2, 2, 5, 0.060526315789473685, ["mov     rcx, records", "mov     rdi, [rsp+48h+file]; filename", "mov     esi, ebp; fdesc", "imul    rcx, blocksize; whence", "mov     rdx, rcx; offset", "mov     qword ptr [rsp+48h+errnum], rcx", "call    skip_via_lseek", "test    rax, rax", "mov     rcx, qword ptr [rsp+48h+errnum]", "js      short loc_4003"], ["mov~rcx,records", "mov~rdi,<TAG>", "mov~esi,ebp", "imul~rcx,blocksize", "mov~rdx,rcx", "mov~[word ptr [rsp+0],rcx", "call~FOO", "test~rax,rax", "mov~rcx,[word ptr [rsp+0]", "js~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 18h", "pop     records", "pop     fdesc", "pop     blocksize", "pop     buf", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~records", "pop~fdesc", "pop~blocksize", "pop~buf", "pop~r14", "pop~r15", "retn"]], [1, 0, 1, 0, 0, 3, 1, 1, 5, -1, 0.0013157894736842105, ["mov     cs:input_offset_overflow, 1", "xor     eax, eax", "jmp     short loc_3FA4"], ["mov~<TAG>,0", "xor~eax,eax", "jmp~FOO"]], [0, 0, 14, 0, 1, 6, 1, 1, 1, 3, 0.2894736842105263, ["mov     rdx, blocksize; size", "mov     rsi, buf; buf", "mov     edi, ebp; fd", "call    iread", "test    nread, nread", "jns     short loc_3F10"], ["mov~rdx,blocksize", "mov~rsi,buf", "mov~edi,ebp", "call~FOO", "test~nread,nread", "jns~FOO"]], [0, 0, 14, 0, 0, 3, 1, 1, 2, 2, 0.11842105263157894, ["test    ebp, ebp", "mov     rdi, [rsp+48h+file]; name", "jnz     loc_400F"], ["test~ebp,ebp", "mov~rdi,<TAG>", "jnz~FOO"]], [1, 0, 14, 0, 0, 1, 0, 0, 5, 5, 0.0, ["mov     cs:input_offset_overflow, 1"], ["mov~<TAG>,0"]], [1, 0, 1, 0, 3, 12, 3, 3, 3, 1, 0.015789473684210527, ["call    quote", "lea     rsi, aSCannotSeek; \"%s: cannot seek\"", "mov     edx, 5; category", "xor     edi, edi; domainname", "mov     records, rax", "call    _dcgettext", "mov     esi, [rsp+48h+errnum]; errnum", "mov     rdx, rax; format", "mov     rcx, rbx", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["call~FOO", "lea~rsi,<TAG>", "mov~edx,0", "xor~edi,edi", "mov~records,rax", "call~FOO", "mov~esi,[rsp+0]", "mov~rdx,rax", "mov~rcx,rbx", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 4, 0, 0.0, ["mov     edi, 1; code", "call    quit"], ["mov~edi,0", "call~FOO"]]], "func_feature": [11, 19, 25, 0, 21, 31, 2, 109, 0.05464, 5, 8], "succs": [[16, 4], [0, 20], [18, 5], [2, 5], [14], [16, 4], [4, 7], [4, 15], [14], [8, 3], [16, 11], [13], [16], [12, 6], [], [14], [9, 17], [1, 19], [5], [20], []], "fname": "skip", "n_num": 21}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 7, 0, 0, 4, 1, 1, 0, 0, 0.08333333333333333, ["mov     rbp, size", "mov     r12, buf", "xor     ebx, ebx", "jmp     short loc_4072"], ["mov~rbp,size", "mov~r12,buf", "xor~ebx,ebx", "jmp~FOO"]], [0, 0, 9, 0, 0, 5, 1, 1, 0, 1, 0.0, ["test    size, size", "push    r12", "push    rbp", "push    rbx", "jz      short loc_40BB"], ["test~size,size", "push~r12", "push~rbp", "push~rbx", "jz~FOO"]], [0, 0, 0, 0, 0, 5, 0, 0, 2, -1, 0.0, ["mov     rax, rbx", "pop     rbx", "pop     rbp", "pop     r12", "retn"], ["mov~rax,rbx", "pop~rbx", "pop~rbp", "pop~r12", "retn"]], [0, 0, 7, 0, 0, 2, 0, 0, 4, -1, 0.16666666666666666, ["cmp     size, total_written", "jbe     short loc_409A"], ["cmp~size,total_written", "jbe~FOO"]], [0, 0, 1, 0, 0, 2, 1, 1, 1, 0, 0.013888888888888888, ["xor     ebx, ebx", "jmp     short loc_409A"], ["xor~ebx,ebx", "jmp~FOO"]], [1, 0, 7, 0, 1, 3, 0, 2, 3, -1, 0.06944444444444445, ["call    ___errno_location", "cmp     dword ptr [rax], 4", "jz      short loc_406D"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 3, -1, 0.15277777777777776, ["jz      short loc_40A8"], ["jz~FOO"]], [1, 0, 7, 1, 2, 8, 1, 2, 2, -1, 0.3055555555555555, ["call    process_signals", "mov     rdx, size", "lea     rsi, [buf+total_written]; buf", "mov     edi, 1; fd", "sub     rdx, total_written; n", "call    _write", "test    nwritten, nwritten", "jns     short loc_4068"], ["call~FOO", "mov~rdx,size", "lea~rsi,<TAG>", "mov~edi,0", "sub~rdx,total_written", "call~FOO", "test~nwritten,nwritten", "jns~FOO"]], [0, 0, 7, 1, 0, 1, 0, 0, 4, -1, 0.05555555555555555, ["add     total_written, nwritten"], ["add~total_written,nwritten"]], [1, 0, 0, 0, 1, 7, 0, 1, 4, -1, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 1Ch", "mov     rax, total_written", "pop     total_written", "pop     size", "pop     buf", "retn"], ["call~FOO", "mov~<TAG>,0", "mov~rax,total_written", "pop~total_written", "pop~size", "pop~buf", "retn"]]], "func_feature": [4, 4, 9, 0, 10, 13, 4, 38, 0.08472, 0, 2], "succs": [[7], [0, 4], [], [2, 7], [2], [2, 3], [8, 9], [5, 6], [3], []], "fname": "iwrite", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[1, 0, 2, 0, 4, 18, 4, 5, 0, 0, 0.16666666666666666, ["mov     rdi, cs:output_file; name", "mov     rbx, nwritten", "call    quote", "lea     rsi, aWritingToS; \"writing to %s\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "mov     r12, rax", "call    _dcgettext", "mov     rbp, rax", "call    ___errno_location", "mov     esi, [rax]; errnum", "xor     edi, edi; status", "xor     eax, eax", "mov     rcx, r12", "mov     rdx, rbp; format", "call    _error", "test    nwritten, nwritten", "jz      short loc_414A"], ["mov~rdi,<TAG>", "mov~rbx,nwritten", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "mov~r12,rax", "call~FOO", "mov~rbp,rax", "call~FOO", "mov~esi,<TAG>", "xor~edi,edi", "xor~eax,eax", "mov~rcx,r12", "mov~rdx,rbp", "call~FOO", "test~nwritten,nwritten", "jz~FOO"]], [0, 0, 4, 1, 1, 9, 0, 2, 0, 2, 0.0, ["mov     rsi, cs:output_blocksize; buf", "mov     rdi, cs:obuf; fd", "push    r12", "push    rbp", "push    rbx", "call    iwrite", "add     cs:w_bytes, nwritten", "cmp     cs:output_blocksize, nwritten", "jnz     short loc_40FF"], ["mov~rsi,<TAG>", "mov~rdi,<TAG>", "push~r12", "push~rbp", "push~rbx", "call~FOO", "add~<TAG>,nwritten", "cmp~<TAG>,nwritten", "jnz~FOO"]], [1, 0, 1, 1, 0, 1, 0, 0, 2, 1, 0.0, ["add     cs:w_partial, 1"], ["add~<TAG>,0"]], [2, 0, 0, 1, 0, 6, 0, 0, 1, -1, 0.0, ["pop     rbx", "add     cs:w_full, 1", "mov     cs:oc, 0", "pop     rbp", "pop     r12", "retn"], ["pop~rbx", "add~<TAG>,0", "mov~<TAG>,0", "pop~rbp", "pop~r12", "retn"]], [1, 0, 0, 0, 1, 2, 0, 1, 2, 0, 0.0, ["mov     edi, 1; code", "call    quit"], ["mov~edi,0", "call~FOO"]]], "func_feature": [6, 4, 8, 0, 5, 5, 8, 36, 0.03333, 8, 3], "succs": [[2, 4], [0, 3], [4], [], []], "fname": "write_output", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 14, 0, 0, 5, 0, 1, 0, 0, 0.5208333333333334, ["movzx   eax, byte ptr [buf+0]", "mov     rbx, cs:col", "cmp     al, byte ptr cs:newline_character; \"\\n\"", "mov     rdx, cs:conversion_blocksize", "jnz     short loc_4180"], ["movzx~eax,[yte ptr [buf+0]", "mov~rbx,<TAG>", "cmp~al,<TAG>", "mov~rdx,<TAG>", "jnz~FOO"]], [0, 0, 14, 0, 0, 6, 0, 1, 1, -1, 0.058333333333333334, ["push    r12", "lea     r12, [buf+i]", "push    rbp", "mov     rbp, buf", "push    rbx", "jmp     short loc_41C8"], ["push~r12", "lea~r12,<TAG>", "push~rbp", "mov~rbp,buf", "push~rbx", "jmp~FOO"]], [2, 0, 14, 1, 0, 4, 0, 1, 4, -1, 0.19583333333333333, ["add     buf, 1", "mov     cs:col, 0", "cmp     r12, buf", "jnz     short loc_41C8"], ["add~buf,0", "mov~<TAG>,0", "cmp~r12,buf", "jnz~FOO"]], [2, 0, 14, 2, 0, 5, 0, 1, 5, -1, 0.22083333333333333, ["add     buf, 1", "add     rbx, 1", "cmp     r12, rbp", "mov     cs:col, rbx", "jz      short loc_41FB"], ["add~buf,0", "add~rbx,0", "cmp~r12,rbp", "mov~<TAG>,rbx", "jz~FOO"]], [0, 0, 14, 0, 1, 1, 0, 1, 6, -1, 0.05, ["call    write_output"], ["call~FOO"]], [0, 0, 14, 0, 0, 1, 0, 1, 5, -1, 0.05416666666666667, ["jmp     short loc_4200"], ["jmp~FOO"]], [0, 0, 16, 0, 0, 2, 1, 1, 0, 1, 0.0, ["test    i, i", "jz      locret_4270"], ["test~i,i", "jz~FOO"]], [0, 0, 14, 0, 1, 3, 0, 2, 6, -1, 0.0, ["call    write_output", "mov     rbx, cs:col", "jmp     loc_41B4"], ["call~FOO", "mov~rbx,<TAG>", "jmp~FOO"]], [0, 0, 14, 0, 0, 7, 0, 0, 5, -1, 0.05416666666666667, ["mov     rcx, cs:oc", "mov     rsi, cs:obuf", "lea     rdx, [rcx+1]", "cmp     rdx, cs:output_blocksize", "mov     [rsi+rcx], al", "mov     cs:oc, rdx", "jnb     loc_4258"], ["mov~rcx,<TAG>", "mov~rsi,<TAG>", "lea~rdx,[rcx+0]", "cmp~rdx,<TAG>", "mov~<TAG>,al", "mov~<TAG>,rdx", "jnb~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 3, -1, 0.21666666666666667, ["cmp     rdx, rbx", "ja      short loc_4212"], ["cmp~rdx,rbx", "ja~FOO"]], [0, 0, 14, 0, 0, 1, 0, 0, 4, -1, 0.14166666666666666, ["jbe     short loc_41B4"], ["jbe~FOO"]], [1, 0, 14, 1, 0, 2, 0, 1, 4, -1, 0.0375, ["add     cs:r_truncate, 1", "jmp     loc_41B4"], ["add~<TAG>,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 14, 0, 0, 2, 0, 1, 3, -1, 0.24166666666666667, ["cmp     rdx, rbx", "jz      loc_4248"], ["cmp~rdx,rbx", "jz~FOO"]], [1, 0, 14, 1, 0, 3, 0, 0, 5, -1, 0.1375, ["add     j, 1", "cmp     cs:conversion_blocksize, j", "jbe     short loc_41E7"], ["add~j,0", "cmp~<TAG>,j", "jbe~FOO"]], [0, 0, 14, 0, 0, 8, 0, 0, 4, -1, 0.15, ["mov     rdx, cs:oc", "movzx   esi, byte ptr cs:space_character; \" \"", "mov     rcx, cs:obuf", "lea     rax, [rdx+1]", "cmp     rax, cs:output_blocksize", "mov     [rcx+rdx], sil", "mov     cs:oc, rax", "jb      short loc_4205"], ["mov~rdx,<TAG>", "movzx~esi,<TAG>", "mov~rcx,<TAG>", "lea~rax,[rdx+0]", "cmp~rax,<TAG>", "mov~<TAG>,sil", "mov~<TAG>,rax", "jb~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 5, -1, 0.0, ["pop     rbx", "pop     buf", "pop     r12", "retn"], ["pop~rbx", "pop~buf", "pop~r12", "retn"]]], "func_feature": [2, 1, 12, 0, 17, 25, 2, 57, 0.1223, 8, 5], "succs": [[9, 13], [0], [0, 16], [0, 16], [14], [4], [1, 12], [3], [3, 7], [2, 15], [8, 3], [3], [], [10, 11], [2, 15], [5, 14], []], "fname": "copy_with_block", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 15, 0, 0, 2, 0, 0, 0, 0, 0.014705882352941176, ["movzx   ecx, byte ptr cs:space_character; \" \"", "mov     rax, rdx"], ["movzx~ecx,<TAG>", "mov~rax,rdx"]], [1, 0, 15, 1, 1, 6, 0, 2, 6, -1, 0.08486519607843136, ["call    write_output", "sub     cs:pending_spaces_6752, 1", "mov     rdi, cs:obuf", "mov     rdx, cs:oc", "mov     rsi, cs:output_blocksize", "jnz     short loc_435A"], ["call~FOO", "sub~<TAG>,0", "mov~rdi,<TAG>", "mov~rdx,<TAG>", "mov~rsi,<TAG>", "jnz~FOO"]], [1, 0, 15, 1, 0, 2, 0, 1, 6, -1, 0.08486519607843136, ["sub     cs:pending_spaces_6752, 1", "jz      short loc_439B"], ["sub~<TAG>,0", "jz~FOO"]], [0, 0, 17, 0, 0, 2, 1, 1, 0, 1, 0.0, ["test    nread, nread", "jz      locret_43E8"], ["test~nread,nread", "jz~FOO"]], [3, 0, 15, 1, 0, 11, 0, 0, 3, -1, 0.04503676470588235, ["mov     rdx, cs:oc", "sub     i, 1", "movzx   esi, byte ptr cs:newline_character; \"\\n\"", "mov     rcx, cs:obuf", "mov     cs:pending_spaces_6752, 0", "mov     cs:col, 0", "lea     rax, [rdx+1]", "cmp     rax, cs:output_blocksize", "mov     [rcx+rdx], sil", "mov     cs:oc, rax", "jnb     loc_43B3"], ["mov~rdx,<TAG>", "sub~i,0", "movzx~esi,<TAG>", "mov~rcx,<TAG>", "mov~<TAG>,0", "mov~<TAG>,0", "lea~rax,[rdx+0]", "cmp~rax,<TAG>", "mov~<TAG>,sil", "mov~<TAG>,rax", "jnb~FOO"]], [0, 0, 15, 0, 0, 6, 0, 0, 2, -1, 0.47150735294117646, ["mov     rax, cs:col", "cmp     rax, cs:conversion_blocksize", "movzx   r13d, byte ptr [buf+i]", "lea     rdx, [rax+1]", "mov     cs:col, rdx", "jnb     short loc_42A0"], ["mov~rax,<TAG>", "cmp~rax,<TAG>", "movzx~r13d,<TAG>", "lea~rdx,[rax+0]", "mov~<TAG>,rdx", "jnb~FOO"]], [0, 0, 15, 0, 0, 5, 1, 1, 4, -1, 0.2931985294117647, ["test    rdx, rdx", "mov     rdi, cs:obuf", "mov     rax, cs:oc", "mov     rsi, cs:output_blocksize", "jnz     short loc_4364"], ["test~rdx,rdx", "mov~rdi,<TAG>", "mov~rax,<TAG>", "mov~rsi,<TAG>", "jnz~FOO"]], [0, 0, 15, 0, 0, 4, 0, 1, 3, -1, 0.3676470588235294, ["movzx   ecx, byte ptr cs:space_character; \" \"", "mov     rdx, cs:pending_spaces_6752", "cmp     cl, r13b", "jz      loc_43D0"], ["movzx~ecx,<TAG>", "mov~rdx,<TAG>", "cmp~cl,r13b", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 15, 0, 0, 5, 0, 0, 7, -1, 0.26746323529411764, ["lea     rax, [rdx+1]", "mov     [rdi+rdx], r13b", "cmp     rax, rsi", "mov     cs:oc, rax", "jb      loc_42EB"], ["lea~rax,[rdx+0]", "mov~<TAG>,r13b", "cmp~rax,rsi", "mov~<TAG>,rax", "jb~FOO"]], [0, 0, 15, 0, 0, 2, 0, 1, 6, -1, 0.06832107843137254, ["mov     rdx, rax", "jmp     short loc_439B"], ["mov~rdx,rax", "jmp~FOO"]], [1, 0, 15, 1, 0, 3, 0, 1, 4, -1, 0.015625, ["add     rdx, 1", "mov     cs:pending_spaces_6752, rdx", "jmp     loc_42EB"], ["add~rdx,0", "mov~<TAG>,rdx", "jmp~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 5, -1, 0.0, ["add     rsp, 8", "pop     i", "pop     nread", "pop     buf", "pop     c", "retn"], ["add~rsp,0", "pop~i", "pop~nread", "pop~buf", "pop~c", "retn"]], [1, 0, 15, 1, 0, 3, 0, 0, 4, -1, 0.21599264705882354, ["add     i, 1", "cmp     nread, i", "jbe     loc_43C5"], ["add~i,0", "cmp~nread,i", "jbe~FOO"]], [1, 0, 15, 1, 1, 4, 0, 2, 4, -1, 0.15625, ["add     i, 1", "call    write_output", "cmp     nread, i", "ja      loc_42F8"], ["add~i,0", "call~FOO", "cmp~nread,i", "ja~FOO"]], [0, 0, 15, 0, 0, 1, 0, 1, 5, -1, 0.07199754901960784, ["jmp     loc_43E0"], ["jmp~FOO"]], [0, 0, 15, 0, 0, 5, 0, 0, 5, -1, 0.22855392156862742, ["lea     rdx, [rax+1]", "mov     [rdi+rax], cl", "cmp     rdx, rsi", "mov     cs:oc, rdx", "jb      short loc_4350"], ["lea~rdx,[rax+0]", "mov~<TAG>,cl", "cmp~rdx,rsi", "mov~<TAG>,rdx", "jb~FOO"]], [1, 0, 15, 1, 0, 9, 1, 1, 1, -1, 0.05514705882352941, ["push    r13", "push    r12", "mov     r12, buf", "push    rbp", "push    rbx", "mov     rbp, nread", "xor     ebx, ebx", "sub     rsp, 8", "jmp     short loc_42F8"], ["push~r13", "push~r12", "mov~r12,buf", "push~rbp", "push~rbx", "mov~rbp,nread", "xor~ebx,ebx", "sub~rsp,0", "jmp~FOO"]]], "func_feature": [2, 3, 12, 0, 18, 27, 2, 77, 0.13562, 8, 8], "succs": [[16], [0, 9], [0, 9], [8, 17], [13, 14], [4, 7], [16, 15], [11, 6], [], [13, 14], [9], [13], [], [12, 5], [12, 5], [10], [1, 2], [5]], "fname": "copy_with_unblock", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 64, 0, 0, 3, 1, 1, 0, 0, 0.06197311460469356, ["test    valid_suffixes, valid_suffixes", "mov     [rsp+58h+var_50], rcx", "jnz     short loc_4500"], ["test~valid_suffixes,valid_suffixes", "mov~[rsp+0],rcx", "jnz~FOO"]], [1, 0, 71, 0, 2, 13, 1, 3, 4, 10, 0.05724538619275462, ["call    ___errno_location", "xor     ecx, ecx; group", "mov     dword ptr [rax], 0", "mov     edx, r15d; base", "mov     rsi, p; endptr", "mov     rdi, s; nptr", "mov     [rsp+58h+var_50], rax", "call    ___strtoul_internal", "mov     rcx, [p+0]", "mov     ch_0, rax", "mov     r8, [rsp+58h+var_50]", "cmp     rcx, s", "jz      short loc_44B8"], ["call~FOO", "xor~ecx,ecx", "mov~<TAG>,0", "mov~edx,r15d", "mov~rsi,p", "mov~rdi,s", "mov~[rsp+0],rax", "call~FOO", "mov~rcx,[p+0]", "mov~ch_0,rax", "mov~r8,[rsp+0]", "cmp~rcx,s", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 6, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, -1, 0.025290498974709502, ["mov     rdi, [rsp+58h+var_40]", "xor     rdi, fs:28h", "mov     eax, r12d", "jnz     loc_4776"], ["mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "mov~eax,r12d", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 1, 0, 13, -1, 0.016404647983595352, ["mov     r8d, 6; jumptable 00000000000045AE case 3", "xor     r9d, r9d"], ["mov~r8d,0", "xor~r9d,r9d"]], [0, 0, 50, 1, 0, 5, 0, 1, 12, 2, 0.18079289131920712, ["lea     rdx, off_ACC0", "movzx   r15d, r15b", "movsxd  rax, dword ptr [rdx+r15*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movzx~r15d,r15b", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [2, 0, 52, 0, 0, 3, 0, 1, 11, 4, 0.013328776486671225, ["mov     edi, 2", "mov     esi, 3E8h", "jmp     short loc_4592"], ["mov~edi,0", "mov~esi,0", "jmp~FOO"]], [1, 0, 57, 0, 0, 3, 0, 1, 10, 5, 0.010936431989063569, ["movzx   eax, byte ptr [rcx+1]", "cmp     al, 44h ; 'D'", "jz      short loc_4577"], ["movzx~eax,[yte ptr [rcx+0]", "cmp~al,0", "jz~FOO"]], [1, 0, 54, 0, 0, 2, 0, 1, 12, 5, 0.0005126452494873548, ["cmp     al, 42h ; 'B'", "jnz     short loc_4588"], ["cmp~al,0", "jnz~FOO"]], [0, 0, 62, 0, 0, 3, 1, 1, 6, 8, 0.06994759626338574, ["movzx   r15d, byte ptr [s]", "test    r15b, r15b", "jz      short loc_44C8"], ["movzx~r15d,<TAG>", "test~r15b,r15b", "jz~FOO"]], [0, 0, 9, 1, 0, 4, 0, 0, 14, -1, 0.01384142173615858, ["mov     rax, tmp", "mul     rsi", "mov     tmp, rax", "jo      loc_47B4"], ["mov~rax,tmp", "mul~,rsi", "mov~tmp,rax", "jo~FOO"]], [1, 0, 9, 1, 0, 2, 0, 1, 15, -1, 0.007347915242652085, ["sub     r8d, 1", "jnz     short loc_4680"], ["sub~r8d,0", "jnz~FOO"]], [1, 0, 9, 0, 0, 3, 1, 0, 13, -1, 0.016404647983595352, ["mov     r8d, 8; jumptable 00000000000045AE case 23", "xor     r9d, r9d", "nop     word ptr [rax+rax+00000000h]"], ["mov~r8d,0", "xor~r9d,r9d", "nop~[ord ptr [rax+0]"]], [2, 0, 9, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_468F"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [2, 0, 8, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_465F"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 8, 1, 0, 4, 0, 0, 14, -1, 0.013670539986329461, ["mov     rax, tmp", "mul     rsi", "mov     tmp, rax", "jo      loc_47D2"], ["mov~rax,tmp", "mul~,rsi", "mov~tmp,rax", "jo~FOO"]], [1, 0, 72, 0, 0, 2, 0, 1, 3, 11, 0.04921394395078606, ["cmp     bl, 2Dh ; '-'", "jz      short loc_44C8"], ["cmp~bl,0", "jz~FOO"]], [2, 0, 52, 0, 0, 6, 1, 1, 12, 4, 0.00888585099111415, ["xor     edi, edi", "cmp     byte ptr [rcx+2], 42h ; 'B'", "mov     esi, 400h", "setz    dil", "lea     edi, [rdi+rdi+1]", "jmp     loc_4592"], ["xor~edi,edi", "cmp~[yte ptr [rcx+0],0", "mov~esi,0", "setz~dil", "lea~edi,[rdi+0]", "jmp~FOO"]], [1, 0, 56, 0, 0, 2, 0, 1, 11, 5, 0.00598086124401914, ["cmp     al, 69h ; 'i'", "jz      loc_45FB"], ["cmp~al,0", "jz~FOO"]], [2, 0, 77, 1, 0, 12, 1, 1, 0, 14, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "cmp     edx, 24h ; '$'", "ja      loc_4757"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edx,0", "ja~FOO"]], [0, 0, 66, 0, 0, 3, 1, 1, 5, 10, 0.0053542948279790385, ["mov     eax, [r8]", "test    eax, eax", "jz      short loc_44F8"], ["mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 16, -1, 0.0034176349965823654, ["jmp     short loc_4665"], ["jmp~FOO"]], [2, 0, 51, 1, 0, 3, 0, 1, 11, 3, 0.1814764183185236, ["sub     r15d, 42h ; 'B'", "cmp     r15b, 35h ; '5'; switch 54 cases", "ja      short loc_45EF; jumptable 00000000000045AE default case"], ["sub~r15d,0", "cmp~r15b,0", "ja~FOO"]], [2, 0, 52, 0, 0, 2, 0, 0, 10, 4, 0.13636363636363638, ["mov     edi, 1", "mov     esi, 400h"], ["mov~edi,0", "mov~esi,0"]], [2, 0, 9, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_46AF"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 9, 1, 0, 4, 0, 0, 14, -1, 0.01384142173615858, ["mov     rax, tmp", "mul     rsi", "mov     tmp, rax", "jo      loc_4787"], ["mov~rax,tmp", "mul~,rsi", "mov~tmp,rax", "jo~FOO"]], [1, 0, 9, 0, 0, 2, 1, 0, 13, -1, 0.016404647983595352, ["mov     r8d, 4; jumptable 00000000000045AE cases 18,50", "xor     r9d, r9d"], ["mov~r8d,0", "xor~r9d,r9d"]], [1, 0, 6, 1, 0, 4, 0, 0, 13, -1, 0.005126452494873548, ["mov     edx, 2; jumptable 00000000000045AE case 53", "mov     rax, rdx", "mul     tmp", "jo      loc_46C6"], ["mov~edx,0", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]], [2, 0, 64, 0, 0, 3, 0, 1, 6, 9, 0.007575757575757577, ["cmp     eax, 22h ; '\"'", "mov     r12d, 1", "jnz     short loc_44C8"], ["cmp~eax,0", "mov~r12d,0", "jnz~FOO"]], [2, 0, 5, 0, 0, 3, 1, 1, 16, -1, 0.00589542036910458, ["mov     r8d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_45CB"], ["mov~r8d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 7, 1, 0, 2, 0, 0, 15, -1, 0.021872863978127138, ["mul     rsi", "jo      loc_4796"], ["mul~,rsi", "jo~FOO"]], [0, 0, 62, 0, 0, 2, 1, 1, 7, 8, 0.032809295967190705, ["test    valid_suffixes, valid_suffixes", "jz      short loc_44AF"], ["test~valid_suffixes,valid_suffixes", "jz~FOO"]], [0, 0, 63, 0, 0, 2, 1, 1, 6, 9, 0.006664388243335612, ["xor     r12d, r12d", "jmp     short loc_44A1"], ["xor~r12d,r12d", "jmp~FOO"]], [1, 0, 6, 1, 0, 4, 0, 0, 13, -1, 0.005126452494873548, ["mov     edx, 400h; jumptable 00000000000045AE case 0", "mov     rax, rdx", "mul     tmp", "jo      short loc_46C6"], ["mov~edx,0", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]], [1, 0, 61, 0, 1, 8, 2, 2, 7, 7, 0.07792207792207793, ["movsx   esi, r15b; c", "mov     rdi, valid_suffixes; s", "xor     r12d, r12d", "call    _strchr", "test    rax, rax", "mov     ebx, 1", "mov     rcx, [rsp+58h+var_50]", "jz      short loc_44C8"], ["movsx~esi,r15b", "mov~rdi,valid_suffixes", "xor~r12d,r12d", "call~FOO", "test~rax,rax", "mov~ebx,0", "mov~rcx,[rsp+0]", "jz~FOO"]], [0, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.0003417634996582365, ["add     tmp, tmp", "jmp     short loc_45D0; jumptable 00000000000045AE case 33"], ["add~tmp,tmp", "jmp~FOO"]], [1, 0, 9, 1, 0, 2, 0, 1, 15, -1, 0.007347915242652085, ["sub     r8d, 1", "jnz     short loc_46A0"], ["sub~r8d,0", "jnz~FOO"]], [1, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.0003417634996582365, ["shl     tmp, 0Ah", "jmp     loc_45D0; jumptable 00000000000045AE case 33"], ["shl~tmp,0", "jmp~FOO"]], [0, 0, 61, 0, 0, 3, 1, 1, 8, 7, 0.03896103896103897, ["movzx   r15d, byte ptr [rcx]", "test    r15b, r15b", "jnz     short loc_4528"], ["movzx~r15d,<TAG>", "test~r15b,r15b", "jnz~FOO"]], [2, 0, 8, 0, 0, 3, 1, 1, 14, -1, 0.00888585099111415, ["or      rax, 0FFFFFFFFFFFFFFFFh", "mov     r8d, 1", "jmp     loc_45BF"], ["or~rax,0", "mov~r8d,0", "jmp~FOO"]], [0, 0, 10, 1, 0, 3, 0, 0, 13, -1, 0.02460697197539303, ["mov     rax, tmp; jumptable 00000000000045AE cases 11,43", "mul     rsi", "jo      loc_47A5"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [0, 0, 5, 0, 0, 1, 0, 0, 16, -1, 0.00589542036910458, ["mov     rbx, rax"], ["mov~rbx,rax"]], [0, 0, 3, 0, 0, 2, 0, 1, 8, -1, 0.0015379357484620643, ["mov     [val], tmp", "jmp     short loc_44CE"], ["mov~<TAG>,tmp", "jmp~FOO"]], [0, 1, 6, 1, 0, 4, 0, 0, 13, -1, 0.005126452494873548, ["mov     edx, 200h; jumptable 00000000000045AE case 32", "mov     rax, rdx", "mul     tmp", "jo      loc_46C6"], ["mov~edx,<STR>", "mov~rax,rdx", "mul~,tmp", "jo~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 16, -1, 0.0034176349965823654, ["jmp     short loc_4665"], ["jmp~FOO"]], [0, 0, 5, 1, 0, 4, 0, 0, 13, -1, 0.0010252904989747095, ["mov     rax, tmp; jumptable 00000000000045AE cases 9,41", "mul     rsi", "mov     tmp, rax", "jno     loc_45D0; jumptable 00000000000045AE case 33"], ["mov~rax,tmp", "mul~,rsi", "mov~tmp,rax", "jno~FOO"]], [0, 0, 8, 0, 0, 1, 1, 0, 14, -1, 0.00888585099111415, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [1, 0, 4, 1, 0, 2, 0, 1, 14, -1, 0.0003417634996582365, ["shl     tmp, 9", "jmp     short loc_45D0; jumptable 00000000000045AE case 33"], ["shl~tmp,0", "jmp~FOO"]], [0, 0, 75, 0, 1, 13, 1, 2, 1, 13, 0.01281613123718387, ["lea     rax, [rsp+58h+t_ptr]", "mov     r12, s", "mov     rbp, ptr", "test    ptr, ptr", "mov     r14, val", "mov     r15d, edx", "mov     r13, valid_suffixes", "cmovz   rbp, rax", "movzx   ebx, byte ptr [q]", "call    ___ctype_b_loc", "mov     rcx, [rax]", "mov     rax, q", "jmp     short loc_444F"], ["lea~rax,[rsp+0]", "mov~r12,s", "mov~rbp,ptr", "test~ptr,ptr", "mov~r14,val", "mov~r15d,edx", "mov~r13,valid_suffixes", "cmovz~rbp,rax", "movzx~ebx,<TAG>", "call~FOO", "mov~rcx,<TAG>", "mov~rax,q", "jmp~FOO"]], [0, 0, 59, 0, 1, 7, 1, 2, 8, 6, 0.1339712918660287, ["movsx   esi, r15b; c", "mov     rdi, valid_suffixes; s", "mov     [rsp+58h+var_50], rcx", "call    _strchr", "test    rax, rax", "mov     rcx, [rsp+58h+var_50]", "jz      loc_45EF; jumptable 00000000000045AE default case"], ["movsx~esi,r15b", "mov~rdi,valid_suffixes", "mov~[rsp+0],rcx", "call~FOO", "test~rax,rax", "mov~rcx,[rsp+0]", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 6, -1, 0.0005696058327637275, ["nop     word ptr [rax+rax+00h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 9, 1, 0, 4, 0, 0, 14, -1, 0.01384142173615858, ["mov     rax, tmp", "mul     rsi", "mov     tmp, rax", "jo      short loc_477B"], ["mov~rax,tmp", "mul~,rsi", "mov~tmp,rax", "jo~FOO"]], [1, 0, 9, 1, 0, 2, 0, 1, 15, -1, 0.007347915242652085, ["sub     r8d, 1", "jnz     short loc_4704"], ["sub~r8d,0", "jnz~FOO"]], [0, 0, 10, 0, 0, 1, 1, 0, 14, -1, 0.004955570745044429, ["xor     r8d, r8d"], ["xor~r8d,r8d"]], [0, 0, 12, 1, 0, 3, 0, 0, 13, 1, 0.016404647983595352, ["mov     rax, tmp; jumptable 00000000000045AE cases 5,37", "mul     rsi", "jo      loc_47E1"], ["mov~rax,tmp", "mul~,rsi", "jo~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 4, -1, 0.006151742993848257, ["mov     r12d, 4"], ["mov~r12d,0"]], [1, 0, 8, 0, 0, 3, 1, 0, 13, -1, 0.016404647983595352, ["mov     r8d, 7; jumptable 00000000000045AE case 24", "xor     r9d, r9d", "nop     dword ptr [rax+00000000h]"], ["mov~r8d,0", "xor~r9d,r9d", "nop~[word ptr [rax+0]"]], [1, 0, 0, 0, 1, 5, 0, 1, 1, -1, 0.0, ["lea     val, __PRETTY_FUNCTION___4894; \"xstrtoumax\"", "lea     ptr, file; \"xstrtol.c\"", "lea     s, assertion; \"0 <= strtol_base && strtol_base <= 36\"", "mov     edx, 53h ; 'S'; line", "call    ___assert_fail"], ["lea~val,<TAG>", "lea~ptr,<TAG>", "lea~s,<TAG>", "mov~edx,0", "call~FOO"]], [1, 0, 75, 1, 0, 2, 0, 0, 3, 13, 0.0, ["add     q, 1", "movzx   ebx, byte ptr [q]"], ["add~q,0", "movzx~ebx,<TAG>"]], [0, 1, 75, 0, 0, 3, 1, 1, 2, 12, 0.03776486671223513, ["movzx   edx, bl", "test    byte ptr [rcx+rdx*2+1], 20h", "jnz     short loc_4448"], ["movzx~edx,bl", "test~[yte ptr [rcx+0],<STR>", "jnz~FOO"]], [2, 0, 9, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_46F0"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [0, 0, 9, 1, 0, 4, 0, 0, 14, -1, 0.01384142173615858, ["mov     rax, tmp", "mul     rsi", "mov     tmp, rax", "jo      loc_47C3"], ["mov~rax,tmp", "mul~,rsi", "mov~tmp,rax", "jo~FOO"]], [0, 0, 4, 0, 0, 2, 1, 0, 17, -1, 0.0075187969924812035, ["or      r12d, r8d", "xchg    ax, ax"], ["or~r12d,r8d", "xchg~ax,ax"]], [1, 0, 58, 0, 1, 7, 1, 2, 9, 5, 0.1384142173615858, ["mov     esi, 30h ; '0'; c", "mov     rdi, valid_suffixes; s", "mov     [rsp+58h+var_50], rcx", "call    _strchr", "test    rax, rax", "mov     rcx, [rsp+58h+var_50]", "jz      short loc_4588"], ["mov~esi,0", "mov~rdi,valid_suffixes", "mov~[rsp+0],rcx", "call~FOO", "test~rax,rax", "mov~rcx,[rsp+0]", "jz~FOO"]], [2, 0, 4, 0, 0, 3, 1, 1, 14, -1, 0.0010252904989747095, ["mov     r12d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     loc_45D0; jumptable 00000000000045AE case 33"], ["mov~r12d,0", "or~rbx,0", "jmp~FOO"]], [2, 0, 8, 0, 0, 3, 1, 1, 16, -1, 0.0, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_45BF"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [0, 0, 9, 1, 0, 2, 0, 0, 15, -1, 0.008714969241285031, ["mul     rsi", "jno     loc_45BF"], ["mul~,rsi", "jno~FOO"]], [2, 0, 9, 0, 0, 3, 1, 1, 15, -1, 0.0, ["mov     r9d, 1", "or      rbx, 0FFFFFFFFFFFFFFFFh", "jmp     short loc_470F"], ["mov~r9d,0", "or~rbx,0", "jmp~FOO"]], [1, 0, 8, 1, 0, 2, 0, 1, 15, -1, 0.006835269993164731, ["sub     r8d, 1", "jnz     short loc_4650"], ["sub~r8d,0", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 1, 0, 13, -1, 0.016404647983595352, ["mov     r8d, 5; jumptable 00000000000045AE case 14", "xor     r9d, r9d"], ["mov~r8d,0", "xor~r9d,r9d"]], [2, 0, 3, 1, 0, 9, 1, 1, 13, -1, 0.02332535885167464, ["movsxd  suffixes, edi; jumptable 00000000000045AE case 33", "mov     eax, r12d", "add     rcx, suffixes", "or      eax, 2", "mov     [p+0], rcx", "cmp     byte ptr [rcx], 0", "mov     [val], tmp", "cmovnz  r12d, eax", "jmp     loc_44CE"], ["movsxd~suffixes,edi", "mov~eax,r12d", "add~rcx,suffixes", "or~eax,0", "mov~[p+0],rcx", "cmp~<TAG>,0", "mov~<TAG>,tmp", "cmovnz~r12d,eax", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 9, -1, 0.004870129870129871, ["mov     [val], tmp; jumptable 00000000000045AE default case", "or      r12d, 2", "jmp     loc_44CE"], ["mov~<TAG>,tmp", "or~r12d,0", "jmp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 16, -1, 0.0034176349965823654, ["jmp     loc_4665"], ["jmp~FOO"]], [1, 0, 9, 1, 0, 2, 0, 1, 15, -1, 0.007347915242652085, ["sub     r8d, 1", "jnz     short loc_46E1"], ["sub~r8d,0", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 16, -1, 0.016404647983595352, ["or      r12d, r9d", "jmp     loc_45D0; jumptable 00000000000045AE case 33"], ["or~r12d,r9d", "jmp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 16, -1, 0.0034176349965823654, ["jmp     loc_4665"], ["jmp~FOO"]], [2, 0, 10, 0, 0, 3, 1, 1, 14, 0, 0.004955570745044429, ["mov     r8d, 1", "or      rax, 0FFFFFFFFFFFFFFFFh", "jmp     loc_473F"], ["mov~r8d,0", "or~rax,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 6, -1, 0.0, ["add     rsp, 28h", "pop     rbx", "pop     p", "pop     r12", "pop     valid_suffixes", "pop     val", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~p", "pop~r12", "pop~valid_suffixes", "pop~val", "pop~r15", "retn"]]], "func_feature": [8, 37, 57, 2, 78, 123, 2, 261, 0.0216, 5, 27], "succs": [[9, 50], [0, 20], [], [2, 77], [51], [33, 4, 69, 70, 71, 40, 43, 12, 45, 54, 56, 26, 27], [22], [18, 6], [6, 23], [34, 55], [11, 13], [10, 21], [10], [11], [68], [68, 14], [1, 55], [22], [8, 17], [48, 57], [32, 28], [74], [5, 71], [22], [36], [24, 36], [25], [64, 35], [55, 31], [62], [41, 29], [42, 38], [31], [64, 37], [49, 55], [70], [25, 44], [70], [49, 42], [30], [46, 39], [62], [3], [64, 47], [74], [64, 70], [30], [70], [59], [71, 63], [55], [67, 52], [75, 51], [66], [76, 53], [3], [15], [], [59], [16, 58], [73], [73, 60], [70], [7, 23], [70], [30], [65, 30], [52], [74, 15], [61], [3], [3], [74], [72, 61], [70], [74], [66], []], "fname": "xstrtoumax", "n_num": 78}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:file_name, file", "retn"], ["mov~<TAG>,file", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 2, 0, 1, 4, 1, 2, 0, 0, 0.06666666666666667, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jnz     short loc_4873"], ["mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 6, 0, 1, 7, 1, 2, 0, 2, 0.0, ["mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "push    r12", "push    rbp", "push    rbx", "call    close_stream", "test    eax, eax", "jnz     short loc_4829"], ["mov~rdi,<TAG>", "push~r12", "push~rbp", "push~rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["pop     rbx", "pop     rbp", "pop     r12", "retn"], ["pop~rbx", "pop~rbp", "pop~r12", "retn"]], [0, 0, 1, 0, 2, 9, 2, 2, 2, -1, 0.016666666666666666, ["mov     rdi, r12; arg", "call    quotearg_colon", "mov     esi, [rbx]; errnum", "lea     rdx, format; \"%s: %s\"", "mov     rcx, rax", "mov     r8, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error"], ["mov~rdi,r12", "call~FOO", "mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO"]], [1, 0, 3, 0, 2, 10, 2, 3, 1, 1, 0.06666666666666667, ["lea     rsi, aWriteError; \"write error\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     r12, cs:file_name", "mov     rbp, rax", "call    ___errno_location", "mov     rbx, rax", "test    r12, r12", "jz      short loc_487E"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~r12,<TAG>", "mov~rbp,rax", "call~FOO", "mov~rbx,rax", "test~r12,r12", "jz~FOO"]], [0, 0, 1, 0, 1, 7, 2, 2, 2, 0, 0.016666666666666666, ["mov     esi, [rax]; errnum", "lea     rdx, format+4; format", "mov     rcx, write_error", "xor     edi, edi; status", "xor     eax, eax", "call    _error", "jmp     short loc_4873"], ["mov~esi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,write_error", "xor~edi,edi", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     edi, cs:exit_failure; status", "call    __exit"], ["mov~edi,<TAG>", "call~FOO"]]], "func_feature": [8, 8, 12, 0, 7, 8, 1, 43, 0.02381, 7, 0], "succs": [[2, 6], [0, 4], [], [6], [3, 5], [6], []], "fname": "close_stdout", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[1, 0, 2, 2, 0, 5, 1, 1, 0, 0, 0.3333333333333333, ["imul    rax, [rsp+28h+ts.tv_sec], 3B9ACA00h", "add     rax, [rsp+28h+ts.tv_nsec]", "mov     rdx, [rsp+28h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_48F4"], ["imul~rax,<TAG>,0", "add~rax,[rsp+0]", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [1, 1, 4, 1, 1, 11, 2, 2, 0, 2, 0.0, ["push    rbx", "mov     edi, 1; clock_id", "sub     rsp, 20h", "mov     rbx, rsp", "mov     rsi, rbx; tp", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "call    _clock_gettime", "test    eax, eax", "jz      short loc_48D1"], ["push~rbx", "mov~edi,0", "sub~rsp,<STR>", "mov~rbx,rsp", "mov~rsi,rbx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 3, 0, 1, 2, 0, 1, 1, 2, 0.0, ["mov     rdi, rbx; ts", "call    gettime"], ["mov~rdi,rbx", "call~FOO"]], [0, 1, 0, 1, 0, 3, 0, 0, 2, -1, 0.0, ["add     rsp, 20h", "pop     rbx", "retn"], ["add~rsp,<STR>", "pop~rbx", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 3, 5, 1, 5, 5, 2, 22, 0.06667, 1, 4], "succs": [[3, 4], [0, 2], [0], [], []], "fname": "gethrxtime", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[1, 0, 3, 1, 1, 7, 1, 1, 0, 0, 0.0, ["mov     rdi, rsp; tv", "xor     esi, esi; tz", "call    _gettimeofday", "mov     rax, [rsp+28h+tv.tv_sec]", "mov     [ts], rax", "imul    rax, [rsp+28h+tv.tv_usec], 3E8h", "mov     [ts+8], rax"], ["mov~rdi,rsp", "xor~esi,esi", "call~FOO", "mov~rax,<TAG>", "mov~<TAG>,rax", "imul~rax,[rsp+0],0", "mov~[ts+0],rax"]], [0, 1, 4, 1, 1, 11, 3, 2, 0, 2, 0.0, ["push    rbx", "mov     rsi, ts; tp", "mov     rbx, ts", "xor     edi, edi; clock_id", "sub     rsp, 20h", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "call    _clock_gettime", "test    eax, eax", "jz      short loc_4944"], ["push~rbx", "mov~rsi,ts", "mov~rbx,ts", "xor~edi,edi", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 1, 0, 1, 0, 3, 0, 0, 2, -1, 0.0, ["add     rsp, 20h", "pop     ts", "retn"], ["add~rsp,<STR>", "pop~ts", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.3333333333333333, ["mov     rax, [rsp+28h+var_10]", "xor     rax, fs:28h", "jnz     short loc_495A"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 5, 5, 1, 5, 5, 1, 25, 0.06667, 1, 3], "succs": [[3], [0, 3], [], [2, 4], []], "fname": "gettime", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 11, 0, 0, 4, 1, 0, 0, 0, 0.18131868131868134, ["mov     [rsp+var_20], rax", "test    rax, rax", "fild    [rsp+var_20]", "jns     short loc_49A8"], ["mov~[rsp+0],rax", "test~rax,rax", "fild~<TAG>,[rsp+0]", "jns~FOO"]], [2, 0, 12, 0, 0, 13, 2, 1, 1, 6, 0.03296703296703297, ["fnstcw  [rsp+var_A]", "movzx   eax, [rsp+var_A]", "fsubr   st(1), st", "fxch    st(1)", "mov     rdx, 8000000000000000h", "or      ah, 0Ch", "mov     [rsp+var_C], ax", "fldcw   [rsp+var_C]", "fistp   [rsp+var_18]", "fldcw   [rsp+var_A]", "mov     rax, [rsp+var_18]", "xor     rax, rdx", "jmp     loc_4994"], ["fnstcw~[rsp+0]", "movzx~eax,[rsp+0]", "fsubr~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "mov~rdx,0", "or~ah,0", "mov~[rsp+0],ax", "fldcw~[rsp+0]", "fistp~<TAG>,[rsp+0]", "fldcw~[rsp+0]", "mov~rax,[rsp+0]", "xor~rax,rdx", "jmp~FOO"]], [1, 0, 12, 0, 0, 10, 1, 0, 1, 6, 0.03296703296703297, ["fstp    st(1)", "fnstcw  [rsp+var_A]", "movzx   eax, [rsp+var_A]", "or      ah, 0Ch", "mov     [rsp+var_C], ax", "fld     st", "fldcw   [rsp+var_C]", "fistp   [rsp+var_18]", "fldcw   [rsp+var_A]", "mov     rax, [rsp+var_18]"], ["fstp~<TAG>,<TAG>", "fnstcw~[rsp+0]", "movzx~eax,[rsp+0]", "or~ah,0", "mov~[rsp+0],ax", "fld~<TAG>,<TAG>", "fldcw~[rsp+0]", "fistp~<TAG>,[rsp+0]", "fldcw~[rsp+0]", "mov~rax,[rsp+0]"]], [1, 0, 3, 1, 0, 5, 1, 1, 6, 1, 0.1208791208791209, ["add     rax, 1", "mov     [rsp+var_20], rax", "test    rax, rax", "fild    [rsp+var_20]", "js      short loc_4A20"], ["add~rax,0", "mov~[rsp+0],rax", "test~rax,rax", "fild~<TAG>,[rsp+0]", "js~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 6, 2, 0.016483516483516484, ["fstp    st", "jmp     short loc_49C0"], ["fstp~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 5, 2, 0.11538461538461539, ["fstp    st", "nop     word ptr [rax+rax+00h]"], ["fstp~<TAG>,<TAG>", "nop~[ord ptr [rax+0]"]], [0, 0, 10, 0, 0, 1, 0, 0, 3, 5, 0.0, ["fadd    cs:flt_AE10"], ["fadd~<TAG>,<TAG>"]], [0, 0, 0, 0, 0, 2, 0, 0, 7, 0, 0.0, ["fadd    cs:flt_AE10", "retn"], ["fadd~<TAG>,<TAG>", "retn"]], [0, 0, 9, 0, 0, 2, 1, 1, 3, 4, 0.24725274725274726, ["test    edi, edi", "jnz     short loc_49D8"], ["test~edi,edi", "jnz~FOO"]], [0, 0, 14, 0, 0, 4, 0, 0, 0, 7, 0.0, ["fld     cs:flt_AE0C", "fld     [rsp+value.value]", "fucomi  st, st(1)", "jnb     short loc_49E0"], ["fld~<TAG>,<TAG>", "fld~<TAG>,[rsp+0]", "fucomi~<TAG>,<TAG>", "jnb~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 7, -1, 0.016483516483516484, ["jmp     short locret_49DA"], ["jmp~FOO"]], [0, 0, 7, 0, 0, 3, 0, 0, 4, 3, 0.19780219780219782, ["fxch    st(1)", "fucomip st, st(1)", "jp      short loc_49B8"], ["fxch~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "jp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 5, 3, 0.04395604395604396, ["jz      short locret_49DA"], ["jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 4, -1, 0.03296703296703297, ["fstp    st(1)"], ["fstp~<TAG>,<TAG>"]], [0, 0, 0, 0, 0, 1, 0, 0, 5, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 6, 6, 4, 15, 19, 3, 52, 0.06923, 2, 1], "succs": [[8, 6], [0], [0], [10, 7], [3], [3], [8], [], [11, 13], [1, 2], [14], [12, 5], [4, 14], [14], []], "fname": "adjust_value", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[2, 0, 54, 2, 0, 9, 1, 1, 0, 0, 0.041666666666666664, ["mov     rax, amt", "movsxd  rounding, edi", "and     eax, 1", "add     rax, rounding", "setnz   al", "movzx   eax, al", "add     r9d, eax", "cmp     r9d, 5", "jg      loc_5086"], ["mov~rax,amt", "movsxd~rounding,edi", "and~eax,0", "add~rax,rounding", "setnz~al", "movzx~eax,al", "add~r9d,eax", "cmp~r9d,0", "jg~FOO"]], [1, 0, 57, 0, 0, 2, 0, 1, 5, 10, 0.12826797385620914, ["cmp     r15d, 1", "jz      loc_51F0"], ["cmp~r15d,0", "jz~FOO"]], [3, 0, 45, 1, 2, 18, 1, 3, 12, 9, 0.009767610748002914, ["fstp    [rsp+0C8h+damt.value]", "sub     rsp, 10h", "lea     rcx, a1lf; \"%.1Lf\"", "mov     esi, 1", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "xor     eax, eax", "mov     decimal_point, [rsp+0D8h+buf]", "mov     rdi, r14", "fstp    [rsp+0D8h+value.value]", "call    ___sprintf_chk", "mov     rdi, r14; s", "call    _strlen", "pop     rcx", "pop     rsi", "cmp     rax, [rsp+0C8h+from_block_size]", "mov     r14, rax", "fld     [rsp+0C8h+damt.value]", "ja      loc_51B8"], ["fstp~<TAG>,[rsp+0]", "sub~rsp,0", "lea~rcx,<TAG>", "mov~esi,0", "mov~rdx,0", "xor~eax,eax", "mov~decimal_point,[rsp+0]", "mov~rdi,r14", "fstp~<TAG>,<TAG>", "call~FOO", "mov~rdi,r14", "call~FOO", "pop~rcx", "pop~rsi", "cmp~rax,[rsp+0]", "mov~r14,rax", "fld~<TAG>,[rsp+0]", "ja~FOO"]], [1, 0, 46, 1, 1, 10, 0, 2, 11, 10, 0.00297748729121278, ["sub     rsp, 10h", "mov     edi, r15d; inexact_style", "fld     st", "fstp    [rsp+0D8h+value.value]; value", "fstp    [rsp+0D8h+damt.value]", "call    adjust_value", "pop     rax", "pop     rdx", "fld     [rsp+0C8h+damt.value]", "jmp     loc_4BC9"], ["sub~rsp,0", "mov~edi,r15d", "fld~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "fstp~<TAG>,[rsp+0]", "call~FOO", "pop~rax", "pop~rdx", "fld~<TAG>,[rsp+0]", "jmp~FOO"]], [0, 0, 46, 0, 0, 1, 0, 0, 11, 10, 0.00297748729121278, ["fld     st"], ["fld~<TAG>,<TAG>"]], [0, 0, 79, 0, 0, 5, 3, 0, 12, 15, 0.012445533769063181, ["test    r15d, r15d", "setz    dl", "test    edi, edi", "setnle  r8b", "and     edx, r8d"], ["test~r15d,r15d", "setz~dl", "test~edi,edi", "setnle~r8b", "and~edx,r8d"]], [1, 0, 81, 0, 0, 2, 0, 1, 11, 16, 0.022549019607843137, ["cmp     r15d, 1", "jz      loc_52B2"], ["cmp~r15d,0", "jz~FOO"]], [0, 0, 37, 0, 0, 1, 0, 1, 7, 9, 0.0010076252723311546, ["jmp     loc_50A0"], ["jmp~FOO"]], [0, 0, 35, 0, 0, 5, 0, 1, 13, 7, 0.0009531590413943355, ["mov     edx, [decimal_point]", "mov     [p_0], edx", "mov     edx, [decimal_point+rax-4]", "mov     [p_0+rax-4], edx", "jmp     loc_5276"], ["mov~edx,<TAG>", "mov~<TAG>,edx", "mov~edx,[decimal_point+0]", "mov~[p_0+0],edx", "jmp~FOO"]], [1, 0, 39, 0, 0, 2, 1, 1, 12, 8, 0.011546840958605665, ["and     ebp, 4", "jnz     loc_5401"], ["and~ebp,0", "jnz~FOO"]], [0, 0, 78, 0, 0, 2, 1, 1, 13, 14, 0.032352941176470584, ["test    dl, dl", "jz      loc_5299"], ["test~dl,dl", "jz~FOO"]], [2, 0, 79, 1, 0, 6, 1, 1, 12, 15, 0.012445533769063181, ["mov     edx, eax", "and     edx, 1", "add     edx, edi", "cmp     edx, 2", "setnle  dl", "jmp     loc_5010"], ["mov~edx,eax", "and~edx,0", "add~edx,edi", "cmp~edx,0", "setnle~dl", "jmp~FOO"]], [1, 0, 43, 0, 0, 2, 1, 1, 11, 8, 0.022585330428467693, ["test    r12b, 8", "jz      loc_4D80"], ["test~r12b,0", "jz~FOO"]], [3, 0, 45, 1, 2, 19, 1, 2, 10, 9, 0.022312999273783586, ["sub     rsp, 10h", "lea     rcx, a1lf; \"%.1Lf\"", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "fld     st", "fstp    [rsp+0D8h+value.value]", "mov     decimal_point, [rsp+0D8h+buf]", "mov     esi, 1", "xor     eax, eax", "mov     rdi, r14", "fstp    [rsp+0D8h+damt.value]", "call    ___sprintf_chk", "mov     rdi, r14; s", "call    _strlen", "mov     r14, rax", "pop     buflen", "pop     rdx", "cmp     buflen, [rsp+0C8h+from_block_size]", "fld     [rsp+0C8h+damt.value]", "jbe     loc_4C12"], ["sub~rsp,0", "lea~rcx,<TAG>", "mov~rdx,0", "fld~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "mov~decimal_point,[rsp+0]", "mov~esi,0", "xor~eax,eax", "mov~rdi,r14", "fstp~<TAG>,[rsp+0]", "call~FOO", "mov~rdi,r14", "call~FOO", "mov~r14,rax", "pop~buflen", "pop~rdx", "cmp~buflen,[rsp+0]", "fld~<TAG>,[rsp+0]", "jbe~FOO"]], [0, 0, 7, 0, 0, 8, 1, 1, 16, -1, 0.02080610021786492, ["lea     rcx, power_letter", "movsxd  exponent_0, ebx", "mov     rdi, [rsp+0C8h+psuffix]", "test    eax, eax", "movzx   ecx, byte ptr [rcx+exponent_0]", "lea     rdx, [rdi+1]", "mov     [rdi], cl", "jz      loc_5254"], ["lea~rcx,<TAG>", "movsxd~exponent_0,ebx", "mov~rdi,[rsp+0]", "test~eax,eax", "movzx~ecx,<TAG>", "lea~rdx,[rdi+0]", "mov~<TAG>,cl", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 15, -1, 0.040522875816993466, ["cmp     ebx, 1", "jnz     short loc_4DFC"], ["cmp~ebx,0", "jnz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 16, -1, 0.006835511982570806, ["mov     r9d, [rsp+0C8h+var_98]", "test    r9d, r9d", "jz      loc_5240"], ["mov~r9d,[rsp+0]", "test~r9d,r9d", "jz~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 15, -1, 0.013997821350762527, ["test    eax, eax", "mov     rdx, [rsp+0C8h+psuffix]", "jnz     loc_4E2B"], ["test~eax,eax", "mov~rdx,[rsp+0]", "jnz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 14, -1, 0.0673202614379085, ["test    ebx, ebx", "jz      loc_5416"], ["test~ebx,ebx", "jz~FOO"]], [1, 0, 76, 0, 0, 3, 0, 1, 14, 14, 0.011383442265795206, ["lea     r9d, [tenths+1]", "cmp     r9d, 0Ah", "jz      loc_5321"], ["lea~r9d,[tenths+0]", "cmp~r9d,0", "jz~FOO"]], [1, 0, 93, 1, 0, 4, 0, 1, 4, 12, 0.0057461873638344225, ["setb    dil", "movzx   edi, dil", "add     edi, 2", "jmp     use_integer_arithmetic"], ["setb~dil", "movzx~edi,dil", "add~edi,0", "jmp~FOO"]], [0, 0, 95, 4, 0, 13, 2, 0, 3, 13, 0.006753812636165577, ["mov     divisor, n_0", "xor     edx, edx", "div     divisor", "mov     n_0, rax", "lea     rax, [rdx+rdx*4]", "xor     edx, edx", "mov     rsi, rbx", "add     rax, rax", "div     divisor", "add     rdx, rdx", "mov     r9d, eax", "cmp     divisor, r2", "jbe     loc_5218"], ["mov~divisor,n_0", "xor~edx,edx", "div~,divisor", "mov~n_0,rax", "lea~rax,<TAG>", "xor~edx,edx", "mov~rsi,rbx", "add~rax,rax", "div~,divisor", "add~rdx,rdx", "mov~r9d,eax", "cmp~divisor,r2", "jbe~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 17, -1, 0.006998910675381264, ["mov     r8d, [rsp+0C8h+var_98]", "test    r8d, r8d", "jnz     loc_4FE0"], ["mov~r8d,[rsp+0]", "test~r8d,r8d", "jnz~FOO"]], [1, 0, 41, 0, 0, 3, 0, 1, 12, 8, 0.005047204066811911, ["mov     rax, [rsp+0C8h+buf]", "cmp     byte ptr [rax+r14-1], 30h ; '0'", "jnz     loc_4D88"], ["mov~rax,<TAG>", "cmp~[yte ptr [rax+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 16, -1, 0.0007897603485838779, ["lea     rax, [psuffix_0+1]", "mov     byte ptr [psuffix_0], 42h ; 'B'", "mov     [rsp+0C8h+psuffix], rax"], ["lea~rax,[psuffix_0+0]", "mov~<TAG>,0", "mov~[rsp+0],rax"]], [1, 0, 4, 0, 0, 3, 0, 1, 18, -1, 0.0, ["lea     psuffix_0, [rdi+2]", "mov     byte ptr [rdi+1], 69h ; 'i'", "jmp     loc_4E2B"], ["lea~psuffix_0,[rdi+0]", "mov~[yte ptr [rdi+0],0", "jmp~FOO"]], [1, 0, 5, 0, 0, 5, 1, 1, 17, -1, 0.00021786492374727668, ["mov     exponent_0, [rsp+0C8h+psuffix]", "test    eax, eax", "lea     rdx, [rbx+1]", "mov     byte ptr [rbx], 6Bh ; 'k'", "jnz     loc_4E2B"], ["mov~exponent_0,[rsp+0]", "test~eax,eax", "lea~rdx,[rbx+0]", "mov~<TAG>,0", "jnz~FOO"]], [0, 0, 48, 0, 0, 3, 0, 1, 10, 11, 0.005519244734931007, ["fld     cs:tbyte_AE20", "fucomip st, st(1)", "ja      loc_4F98"], ["fld~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "ja~FOO"]], [0, 0, 58, 0, 0, 3, 1, 1, 6, 11, 0.0031590413943355117, ["mov     r8, [rsp+0C8h+psuffix]", "xor     ebx, ebx", "jmp     loc_5070"], ["mov~r8,[rsp+0]", "xor~ebx,ebx", "jmp~FOO"]], [0, 0, 91, 0, 0, 4, 0, 1, 5, 12, 0.017973856209150325, ["mov     r8d, [rsp+0C8h+base]", "cmp     r8, amt", "mov     r11, r8", "ja      loc_5230"], ["mov~r8d,[rsp+0]", "cmp~r8,amt", "mov~r11,r8", "ja~FOO"]], [1, 0, 39, 0, 0, 4, 0, 1, 13, 9, 0.0025417574437182275, ["fld     cs:flt_AE14", "cmp     r15d, 1", "fmul    st(1), st", "jnz     loc_51C0"], ["fld~<TAG>,<TAG>", "cmp~r15d,0", "fmul~<TAG>,<TAG>", "jnz~FOO"]], [0, 0, 36, 0, 0, 1, 0, 1, 14, 8, 0.0010348583877995642, ["jmp     loc_5173"], ["jmp~FOO"]], [1, 0, 68, 1, 0, 7, 0, 0, 16, 13, 0.02080610021786492, ["mov     rax, [rsp+0C8h+buf]", "lea     r8, [rax+287h]", "mov     [rax+287h], r9b", "mov     eax, ebp", "sub     p_0, rbp", "cmp     ebp, 8", "jnb     loc_52D1"], ["mov~rax,<TAG>", "lea~r8,[rax+0]", "mov~[rax+0],r9b", "mov~eax,ebp", "sub~p_0,rbp", "cmp~ebp,0", "jnb~FOO"]], [1, 0, 69, 0, 0, 2, 0, 1, 16, 14, 0.0017429193899782135, ["mov     r9d, 30h ; '0'", "jmp     loc_502A"], ["mov~r9d,0", "jmp~FOO"]], [1, 0, 69, 1, 0, 1, 0, 0, 15, 14, 0.01312636165577342, ["add     r9d, 30h ; '0'"], ["add~r9d,0"]], [1, 0, 60, 0, 0, 4, 1, 1, 19, 12, 0.0017429193899782135, ["movzx   edx, byte ptr [decimal_point]", "test    al, 2", "mov     [p_0], dl", "jnz     loc_53F0"], ["movzx~edx,<TAG>", "test~al,0", "mov~<TAG>,dl", "jnz~FOO"]], [0, 0, 61, 0, 0, 2, 1, 1, 18, 12, 0.004983660130718954, ["test    eax, eax", "jz      short loc_5067"], ["test~eax,eax", "jz~FOO"]], [0, 0, 132, 0, 0, 2, 1, 1, 1, 13, 0.002096949891067538, ["test    rcx, rcx", "jz      loc_4B15"], ["test~rcx,rcx", "jz~FOO"]], [9, 2, 136, 4, 3, 52, 4, 4, 0, 14, 0.0, ["push    r15", "push    r14", "mov     eax, edx", "push    r13", "push    r12", "mov     r15d, edx", "push    rbp", "push    rbx", "and     eax, 20h", "and     r15d, 3", "mov     r12d, edx", "mov     rbx, n_0", "sub     rsp, 98h", "mov     [rsp+0C8h+from_block_size], from_block_size_0", "mov     [rsp+0C8h+var_98], eax", "mov     from_block_size_0, fs:28h", "mov     [rsp+0C8h+var_40], from_block_size_0", "xor     ecx, ecx", "cmp     eax, 1", "mov     [rsp+0C8h+buf], buf_0", "mov     [rsp+0C8h+to_block_size], to_block_size_0", "sbb     eax, eax", "and     eax, 0FFFFFFE8h", "add     eax, 400h", "mov     [rsp+0C8h+base], eax", "call    _localeconv", "mov     r14, [rax]", "mov     r13, rax", "mov     rdi, r14; s", "call    _strlen", "mov     rcx, [l+10h]", "mov     l, [l+8]", "mov     rbp, rax", "sub     pointlen, 1", "mov     edx, 1", "cmp     rax, 10h", "lea     rax, asc_ADAF; \".\"", "mov     rdi, r13; s", "cmovnb  pointlen, rdx", "mov     [rsp+0C8h+grouping], rcx", "cmovnb  r14, rax", "call    _strlen", "cmp     rax, 11h", "lea     rax, aReportBugsToS+16h; \"\"", "mov     rdi, [rsp+0C8h+to_block_size]", "mov     rcx, [rsp+0C8h+from_block_size]", "cmovnb  r13, rax", "mov     rax, [rsp+0C8h+buf]", "add     rax, 288h", "cmp     rdi, rcx", "mov     [rsp+0C8h+psuffix], rax", "ja      loc_4C48"], ["push~r15", "push~r14", "mov~eax,edx", "push~r13", "push~r12", "mov~r15d,edx", "push~rbp", "push~rbx", "and~eax,<STR>", "and~r15d,0", "mov~r12d,edx", "mov~rbx,n_0", "sub~rsp,0", "mov~[rsp+0],from_block_size_0", "mov~[rsp+0],eax", "mov~from_block_size_0,<TAG>", "mov~[rsp+0],from_block_size_0", "xor~ecx,ecx", "cmp~eax,0", "mov~<TAG>,buf_0", "mov~[rsp+0],to_block_size_0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "mov~[rsp+0],eax", "call~FOO", "mov~r14,<TAG>", "mov~r13,rax", "mov~rdi,r14", "call~FOO", "mov~rcx,[l+0]", "mov~l,[l+0]", "mov~rbp,rax", "sub~pointlen,0", "mov~edx,0", "cmp~rax,0", "lea~rax,<TAG>", "mov~rdi,r13", "cmovnb~pointlen,rdx", "mov~[rsp+0],rcx", "cmovnb~r14,rax", "call~FOO", "cmp~rax,0", "lea~rax,<TAG>", "mov~rdi,[rsp+0]", "mov~rcx,[rsp+0]", "cmovnb~r13,rax", "mov~rax,<TAG>", "add~rax,<STR>", "cmp~rdi,rcx", "mov~[rsp+0],rax", "ja~FOO"]], [1, 0, 63, 0, 0, 2, 1, 1, 17, 13, 0.006535947712418301, ["test    bpl, 4", "jnz     loc_53D6"], ["test~bpl,0", "jnz~FOO"]], [1, 0, 2, 0, 0, 6, 1, 1, 11, -1, 0.014596949891067537, ["mov     rax, [rsp+0C8h+psuffix]", "mov     rcx, [rsp+0C8h+var_40]", "xor     rcx, fs:28h", "mov     byte ptr [rax], 0", "mov     rax, p_0", "jnz     loc_53EB"], ["mov~rax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~<TAG>,0", "mov~rax,p_0", "jnz~FOO"]], [0, 1, 24, 0, 0, 2, 1, 1, 10, -1, 0.14640522875816994, ["test    r12b, 80h", "jz      short loc_4E37"], ["test~r12b,<STR>", "jz~FOO"]], [1, 0, 16, 0, 0, 5, 2, 1, 12, -1, 0.08611111111111111, ["mov     eax, r12d", "and     eax, 100h", "mov     ecx, eax", "or      ecx, ebx", "jz      short loc_4E37"], ["mov~eax,r12d", "and~eax,0", "mov~ecx,eax", "or~ecx,ebx", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 17, -1, 0.0005174291938997821, ["mov     [rsp+0C8h+psuffix], psuffix_0", "jmp     loc_4E37"], ["mov~[rsp+0],psuffix_0", "jmp~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 16, -1, 0.000326797385620915, ["jmp     loc_4E37"], ["jmp~FOO"]], [0, 0, 131, 1, 0, 6, 2, 1, 2, 13, 0.003540305010893246, ["mov     psuffix_0, [rsp+0C8h+to_block_size]", "xor     edx, edx", "div     rcx", "test    rdx, rdx", "mov     r8, rax", "jnz     loc_4B15"], ["mov~psuffix_0,[rsp+0]", "xor~edx,edx", "div~,rcx", "test~rdx,rdx", "mov~r8,rax", "jnz~FOO"]], [1, 0, 57, 1, 0, 6, 0, 0, 7, 12, 0.019825708061002176, ["fld     st", "add     ebx, 1", "fmul    st, st(2)", "fxch    st(3)", "fucomi  st, st(3)", "jb      short loc_4B90"], ["fld~<TAG>,<TAG>", "add~ebx,0", "fmul~<TAG>,<TAG>", "fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "jb~FOO"]], [0, 0, 57, 0, 0, 4, 1, 1, 6, 13, 0.01437908496732026, ["fild    [rsp+0C8h+base]", "xor     ebx, ebx", "fld     st", "jmp     short loc_4B74"], ["fild~<TAG>,[rsp+0]", "xor~ebx,ebx", "fld~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 57, 0, 0, 2, 0, 0, 9, 13, 0.00010893246187363834, ["fstp    st(1)", "fxch    st(2)"], ["fstp~<TAG>,<TAG>", "fxch~<TAG>,<TAG>"]], [1, 0, 49, 0, 0, 2, 0, 1, 9, 8, 0.03461328976034858, ["cmp     ebx, 8", "jz      loc_50A0"], ["cmp~ebx,0", "jz~FOO"]], [0, 0, 51, 0, 0, 3, 0, 1, 8, 9, 0.03736383442265795, ["mov     eax, [rsp+0C8h+base]", "cmp     rax, amt", "jz      loc_5260"], ["mov~eax,[rsp+0]", "cmp~rax,amt", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 12, -1, 0.0, ["add     rsp, 98h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [0, 0, 58, 0, 0, 3, 2, 0, 17, 11, 0.04738562091503268, ["xor     edi, edi", "xor     r9d, r9d", "nop     dword ptr [rax+00h]"], ["xor~edi,edi", "xor~r9d,r9d", "nop~[word ptr [rax+0]"]], [3, 0, 62, 3, 0, 15, 2, 0, 17, 12, 0.014705882352941176, ["mov     rax, [decimal_point]", "mov     r9, decimal_point", "mov     [p_0], rax", "mov     eax, ebp", "mov     rdx, [decimal_point+rax-8]", "mov     [p_0+rax-8], rdx", "lea     rdx, [p_0+8]", "mov     rax, p_0", "and     rdx, 0FFFFFFFFFFFFFFF8h", "sub     rax, rdx", "sub     r9, rax", "add     eax, ebp", "and     eax, 0FFFFFFF8h", "cmp     eax, 8", "jb      loc_5067"], ["mov~rax,<TAG>", "mov~r9,decimal_point", "mov~<TAG>,rax", "mov~eax,ebp", "mov~rdx,[decimal_point+0]", "mov~[p_0+0],rdx", "lea~rdx,[p_0+0]", "mov~rax,p_0", "and~rdx,0", "sub~rax,rdx", "sub~r9,rax", "add~eax,ebp", "and~eax,0", "cmp~eax,0", "jb~FOO"]], [0, 0, 59, 0, 0, 1, 0, 1, 20, 12, 0.006427015250544662, ["jmp     loc_5067"], ["jmp~FOO"]], [0, 0, 59, 0, 0, 2, 0, 1, 16, 12, 0.007625272331154684, ["mov     r8, [rsp+0C8h+psuffix]", "jmp     loc_5067"], ["mov~r8,[rsp+0]", "jmp~FOO"]], [0, 0, 59, 0, 0, 5, 0, 1, 18, 12, 0.0016067538126361654, ["mov     edx, [decimal_point]", "mov     [p_0], edx", "mov     edx, [decimal_point+rax-4]", "mov     [p_0+rax-4], edx", "jmp     loc_5067"], ["mov~edx,<TAG>", "mov~<TAG>,edx", "mov~edx,[decimal_point+0]", "mov~[p_0+0],edx", "jmp~FOO"]], [0, 0, 59, 0, 0, 3, 0, 1, 20, 12, 0.0, ["movzx   edx, word ptr [decimal_point+rax-2]", "mov     [p_0+rax-2], dx", "jmp     loc_5067"], ["movzx~edx,[ord ptr [decimal_point+0]", "mov~[p_0+0],dx", "jmp~FOO"]], [2, 0, 20, 1, 0, 3, 0, 1, 15, -1, 0.006372549019607843, ["add     ebx, 1", "cmp     ebx, 8", "jnz     short loc_50FD"], ["add~ebx,0", "cmp~ebx,0", "jnz~FOO"]], [0, 0, 20, 1, 0, 3, 0, 0, 14, -1, 0.014025054466230936, ["imul    power, rdx", "cmp     rcx, power", "jbe     loc_4DC9"], ["imul~power,rdx", "cmp~rcx,power", "jbe~FOO"]], [2, 0, 45, 1, 0, 3, 1, 1, 10, 7, 0.03425925925925926, ["add     ebx, 1", "test    r12b, 8", "jz      loc_5332"], ["add~ebx,0", "test~r12b,0", "jz~FOO"]], [2, 0, 92, 0, 0, 5, 1, 1, 4, 11, 0.03676470588235294, ["mov     ecx, r12d", "mov     r8, [rsp+0C8h+psuffix]", "mov     ebx, 0FFFFFFFFh", "and     ecx, 10h", "jz      loc_5070"], ["mov~ecx,r12d", "mov~r8,[rsp+0]", "mov~ebx,0", "and~ecx,0", "jz~FOO"]], [0, 0, 58, 0, 0, 2, 0, 1, 11, 11, 0.022113289760348584, ["mov     r8, [rsp+0C8h+psuffix]", "jmp     loc_5070"], ["mov~r8,[rsp+0]", "jmp~FOO"]], [0, 0, 58, 0, 0, 3, 1, 1, 16, 11, 0.022113289760348584, ["mov     r8, [rsp+0C8h+psuffix]", "xor     r9d, r9d", "jmp     loc_5070"], ["mov~r8,[rsp+0]", "xor~r9d,r9d", "jmp~FOO"]], [0, 0, 38, 0, 0, 2, 0, 0, 13, 9, 0.002033405954974582, ["fld     cs:flt_AE14", "fmul    st(1), st"], ["fld~<TAG>,<TAG>", "fmul~<TAG>,<TAG>"]], [1, 0, 71, 0, 0, 2, 1, 1, 15, 12, 0.022930283224400872, ["test    r12b, 8", "jnz     short loc_52C4"], ["test~r12b,0", "jnz~FOO"]], [0, 0, 54, 0, 0, 2, 1, 1, 6, 9, 0.08480392156862746, ["test    r15d, r15d", "jnz     short loc_50A0"], ["test~r15d,r15d", "jnz~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 11, 6, 0.024074074074074074, ["lea     inexact_style, [integerlim_0-1]", "mov     byte ptr [integerlim_0-1], 31h ; '1'", "jmp     do_grouping"], ["lea~inexact_style,[integerlim_0-1]+0]", "mov~[yte ptr [integerlim_0-1]+0],0", "jmp~FOO"]], [0, 0, 37, 0, 0, 2, 1, 1, 13, 7, 0.006835511982570806, ["test    eax, eax", "jz      loc_5276"], ["test~eax,eax", "jz~FOO"]], [1, 0, 36, 0, 0, 4, 1, 1, 14, 7, 0.0029956427015250544, ["movzx   edx, byte ptr [decimal_point]", "test    al, 2", "mov     [p_0], dl", "jz      loc_5276"], ["movzx~edx,<TAG>", "test~al,0", "mov~<TAG>,dl", "jz~FOO"]], [0, 0, 35, 0, 0, 3, 0, 1, 15, 7, 0.0, ["movzx   edx, word ptr [decimal_point+rax-2]", "mov     [p_0+rax-2], dx", "jmp     loc_5276"], ["movzx~edx,[ord ptr [decimal_point+0]", "mov~[p_0+0],dx", "jmp~FOO"]], [3, 0, 38, 3, 0, 14, 2, 0, 12, 7, 0.01056644880174292, ["mov     rax, [decimal_point]", "lea     rcx, [p_0+8]", "and     rcx, 0FFFFFFFFFFFFFFF8h", "mov     [p_0], rax", "mov     eax, ebp", "mov     rdx, [decimal_point+rax-8]", "mov     [p_0+rax-8], rdx", "mov     rax, p_0", "sub     rax, rcx", "sub     decimal_point, rax", "add     eax, ebp", "and     eax, 0FFFFFFF8h", "cmp     eax, 8", "jb      loc_5276"], ["mov~rax,<TAG>", "lea~rcx,[p_0+0]", "and~rcx,0", "mov~<TAG>,rax", "mov~eax,ebp", "mov~rdx,[decimal_point+0]", "mov~[p_0+0],rdx", "mov~rax,p_0", "sub~rax,rcx", "sub~decimal_point,rax", "add~eax,ebp", "and~eax,0", "cmp~eax,0", "jb~FOO"]], [0, 0, 35, 0, 0, 1, 0, 1, 15, 7, 0.003812636165577342, ["jmp     loc_5276"], ["jmp~FOO"]], [0, 0, 129, 2, 0, 7, 1, 1, 2, 13, 0.006535947712418301, ["mov     rsi, n_0", "xor     edx, edx", "imul    rsi, multiplier", "mov     multiplier, amt", "div     multiplier", "cmp     rax, n_0", "jnz     loc_4B15"], ["mov~rsi,n_0", "xor~edx,edx", "imul~rsi,multiplier", "mov~multiplier,amt", "div~,multiplier", "cmp~rax,n_0", "jnz~FOO"]], [0, 0, 130, 1, 0, 6, 2, 1, 1, 13, 0.00520152505446623, ["xor     edx, edx", "mov     psuffix_0, rcx", "div     rdi", "test    rdx, rdx", "mov     rdi, rax", "jz      loc_4E70"], ["xor~edx,edx", "mov~psuffix_0,rcx", "div~,rdi", "test~rdx,rdx", "mov~rdi,rax", "jz~FOO"]], [0, 0, 25, 0, 0, 4, 0, 1, 14, 0, 0.0013616557734204792, ["mov     ebx, dword ptr [rsp+0C8h+damt.value]", "mov     r15, rax", "mov     r12d, r14d", "jmp     loc_4DBA"], ["mov~ebx,[word ptr [rsp+0]", "mov~r15,rax", "mov~r12d,r14d", "jmp~FOO"]], [0, 0, 32, 2, 1, 10, 1, 2, 13, 1, 0.011982570806100218, ["mov     rax, [rsp+0C8h+from_block_size]", "sub     r12, rbp", "sub     r8, rbp", "mov     rdi, r8; dest", "mov     rdx, rbp; n", "lea     rsi, [rax+r12]; src", "call    _memcpy", "test    r12, r12", "mov     r8, rax", "jz      loc_5428"], ["mov~rax,[rsp+0]", "sub~r12,rbp", "sub~r8,rbp", "mov~rdi,r8", "mov~rdx,rbp", "lea~rsi,<TAG>", "call~FOO", "test~r12,r12", "mov~r8,rax", "jz~FOO"]], [0, 0, 53, 1, 0, 3, 1, 1, 7, 9, 0.0008714596949891067, ["add     edi, r9d", "test    edi, edi", "jle     short loc_50A0"], ["add~edi,r9d", "test~edi,edi", "jle~FOO"]], [1, 0, 52, 1, 0, 3, 1, 1, 7, 9, 0.04022331154684096, ["add     amt, 1", "test    ecx, ecx", "jz      short loc_50A0"], ["add~amt,0", "test~ecx,ecx", "jz~FOO"]], [0, 0, 93, 0, 0, 3, 2, 1, 3, 12, 0.01056644880174292, ["xor     edi, edi", "xor     r9d, r9d", "jmp     use_integer_arithmetic"], ["xor~edi,edi", "xor~r9d,r9d", "jmp~FOO"]], [0, 0, 17, 0, 0, 2, 1, 1, 13, -1, 0.0009259259259259259, ["xor     ebx, ebx", "jmp     loc_4DC9"], ["xor~ebx,ebx", "jmp~FOO"]], [1, 0, 22, 0, 0, 3, 0, 0, 12, -1, 0.03104575163398693, ["mov     rcx, [rsp+0C8h+to_block_size]", "cmp     rcx, 1", "jbe     loc_5292"], ["mov~rcx,[rsp+0]", "cmp~rcx,0", "jbe~FOO"]], [0, 0, 93, 0, 0, 3, 2, 0, 4, 12, 0.0057461873638344225, ["xor     edi, edi", "test    r2, r2", "setnz   dil"], ["xor~edi,edi", "test~r2,r2", "setnz~dil"]], [0, 0, 37, 0, 0, 1, 0, 0, 9, 9, 8.169934640522875e-05, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 72, 0, 0, 2, 1, 1, 16, 13, 0.0008714596949891067, ["xor     edi, edi", "jmp     loc_52A1"], ["xor~edi,edi", "jmp~FOO"]], [0, 0, 73, 0, 0, 2, 1, 1, 14, 13, 0.022821350762527233, ["test    eax, eax", "jnz     loc_5026"], ["test~eax,eax", "jnz~FOO"]], [1, 0, 36, 0, 0, 3, 0, 0, 7, 8, 0.09188453159041395, ["mov     inexact_style, integerlim_0", "mov     rcx, 0CCCCCCCCCCCCCCCDh", "nop     dword ptr [rax]"], ["mov~inexact_style,integerlim_0", "mov~rcx,0", "nop~<TAG>"]], [0, 0, 89, 0, 0, 2, 1, 1, 6, 16, 0.01857298474945534, ["xor     ebx, ebx", "jmp     short loc_4CE7"], ["xor~ebx,ebx", "jmp~FOO"]], [0, 0, 89, 0, 0, 3, 1, 0, 8, 14, 0.01377995642701525, ["test    edi, edi", "setnz   dil", "movzx   edi, dil"], ["test~edi,edi", "setnz~dil", "movzx~edi,dil"]], [1, 0, 89, 3, 0, 16, 2, 1, 7, 15, 0.024509803921568627, ["mov     rax, amt", "xor     edx, edx", "mov     esi, edi", "div     r8", "sar     esi, 1", "mov     r10, rax", "lea     eax, [rdx+rdx*4]", "xor     edx, edx", "lea     eax, [tenths+rax*2]", "div     r11d", "lea     edx, [rsi+rdx*2]", "mov     r9d, eax", "mov     rsi, r10", "add     edi, edx", "cmp     r11d, edx", "ja      short loc_4CC8"], ["mov~rax,amt", "xor~edx,edx", "mov~esi,edi", "div~,r8", "sar~esi,0", "mov~r10,rax", "lea~eax,<TAG>", "xor~edx,edx", "lea~eax,<TAG>", "div~,r11d", "lea~edx,<TAG>", "mov~r9d,eax", "mov~rsi,r10", "add~edi,edx", "cmp~r11d,edx", "ja~FOO"]], [3, 0, 36, 5, 0, 12, 1, 1, 8, 7, 0.09090413943355119, ["mov     rax, amt", "sub     p_0, 1", "mul     rcx", "shr     rdx, 3", "lea     rax, [rdx+rdx*4]", "add     rax, rax", "sub     amt, rax", "add     esi, 30h ; '0'", "test    rdx, rdx", "mov     [p_0], sil", "mov     rsi, rdx", "jnz     short loc_50B0"], ["mov~rax,amt", "sub~p_0,0", "mul~,rcx", "shr~rdx,0", "lea~rax,<TAG>", "add~rax,rax", "sub~amt,rax", "add~esi,0", "test~rdx,rdx", "mov~<TAG>,sil", "mov~rsi,rdx", "jnz~FOO"]], [0, 0, 34, 0, 0, 1, 0, 1, 9, 6, 0.0898148148148148, ["jmp     do_grouping"], ["jmp~FOO"]], [1, 0, 89, 1, 0, 3, 0, 1, 9, 13, 0.036274509803921565, ["add     ebx, 1", "cmp     r8, r10", "ja      loc_4FED"], ["add~ebx,0", "cmp~r8,r10", "ja~FOO"]], [1, 0, 89, 1, 0, 5, 0, 1, 8, 14, 0.01377995642701525, ["cmp     r11d, edi", "setb    dil", "movzx   edi, dil", "add     edi, 2", "jmp     short loc_4CD2"], ["cmp~r11d,edi", "setb~dil", "movzx~edi,dil", "add~edi,0", "jmp~FOO"]], [1, 0, 89, 0, 0, 2, 0, 1, 10, 12, 0.008714596949891067, ["cmp     ebx, 8", "jz      loc_5288"], ["cmp~ebx,0", "jz~FOO"]], [1, 0, 37, 0, 0, 2, 2, 0, 13, 9, 0.0058823529411764705, ["and     eax, 0FFFFFFF8h", "xor     edx, edx"], ["and~eax,0", "xor~edx,edx"]], [1, 0, 23, 0, 0, 2, 0, 1, 11, -1, 0.12309368191721133, ["cmp     ebx, 0FFFFFFFFh", "jz      loc_50E0"], ["cmp~ebx,0", "jz~FOO"]], [2, 0, 32, 1, 2, 22, 0, 3, 10, 4, 0.03965141612200435, ["mov     r14, integerlim_0", "mov     rdi, thousands_sep; s", "mov     [rsp+0C8h+integerlim], integerlim_0", "sub     r14, p_0", "mov     rbp, 0FFFFFFFFFFFFFFFFh", "call    _strlen", "lea     rdi, [rsp+0C8h+var_78]", "mov     ecx, 29h ; ')'", "mov     rdx, r14", "mov     rsi, p_0", "mov     [rsp+0C8h+n], rax", "mov     [rsp+0C8h+from_block_size], rdi", "call    ___memcpy_chk", "mov     ecx, r12d", "mov     dword ptr [rsp+0C8h+damt.value], ebx", "mov     opts, r14", "mov     exponent_0, thousands_sep", "mov     r8, [rsp+0C8h+integerlim]", "mov     p_0, [rsp+0C8h+grouping]", "mov     thousands_sep, [rsp+0C8h+n]", "mov     r14d, ecx", "jmp     short loc_4F32"], ["mov~r14,integerlim_0", "mov~rdi,thousands_sep", "mov~[rsp+0],integerlim_0", "sub~r14,p_0", "mov~rbp,0", "call~FOO", "lea~rdi,[rsp+0]", "mov~ecx,0", "mov~rdx,r14", "mov~rsi,p_0", "mov~[rsp+0],rax", "mov~[rsp+0],rdi", "call~FOO", "mov~ecx,r12d", "mov~[word ptr [rsp+0],ebx", "mov~opts,r14", "mov~exponent_0,thousands_sep", "mov~r8,[rsp+0]", "mov~p_0,[rsp+0]", "mov~thousands_sep,[rsp+0]", "mov~r14d,ecx", "jmp~FOO"]], [1, 0, 33, 0, 0, 2, 1, 1, 9, 5, 0.18513071895424837, ["test    r12b, 4", "jnz     loc_4E98"], ["test~r12b,0", "jnz~FOO"]], [2, 0, 20, 0, 0, 3, 0, 0, 13, -1, 0.018790849673202614, ["mov     edx, [rsp+0C8h+base]", "mov     ebx, 1", "mov     eax, 1"], ["mov~edx,[rsp+0]", "mov~ebx,0", "mov~eax,0"]], [1, 0, 61, 0, 0, 2, 2, 0, 18, 14, 0.0033769063180827887, ["and     eax, 0FFFFFFF8h", "xor     edi, edi"], ["and~eax,0", "xor~edi,edi"]], [0, 0, 17, 0, 0, 1, 0, 1, 16, -1, 0.0004629629629629629, ["jmp     loc_4DC9"], ["jmp~FOO"]], [0, 0, 32, 0, 0, 2, 0, 0, 12, 2, 0.029030501089324617, ["cmp     rbp, r12", "jbe     short loc_4EF8"], ["cmp~rbp,r12", "jbe~FOO"]], [1, 0, 61, 1, 0, 6, 0, 0, 19, 13, 0.004956427015250544, ["mov     r10d, edi", "add     edi, 8", "mov     r11, [r9+r10]", "cmp     edi, eax", "mov     [rdx+r10], r11", "jb      short loc_530A"], ["mov~r10d,edi", "add~edi,0", "mov~r11,<TAG>", "cmp~edi,eax", "mov~<TAG>,r11", "jb~FOO"]], [0, 0, 68, 0, 0, 4, 1, 0, 2, 12, 0.017592592592592594, ["mov     [rsp+0C8h+from_block_size], rcx", "test    rcx, rcx", "fild    [rsp+0C8h+from_block_size]", "jns     short loc_4B29"], ["mov~[rsp+0],rcx", "test~rcx,rcx", "fild~<TAG>,[rsp+0]", "jns~FOO"]], [0, 0, 67, 0, 0, 1, 0, 0, 3, 12, 0.0, ["fadd    cs:flt_AE10"], ["fadd~<TAG>,<TAG>"]], [1, 0, 74, 0, 0, 3, 0, 1, 15, 13, 0.007080610021786492, ["lea     rsi, [r10+1]", "cmp     amt, 0Ah", "jz      short loc_5380"], ["lea~rsi,[r10+0]", "cmp~amt,0", "jz~FOO"]], [1, 0, 38, 0, 0, 2, 0, 1, 6, 8, 0.023910675381263617, ["cmp     r15d, 1", "jz      short loc_4D3C"], ["cmp~r15d,0", "jz~FOO"]], [1, 0, 62, 0, 0, 3, 1, 1, 5, 9, 0.03622004357298475, ["test    r12b, 10h", "fmulp   st(1), st", "jz      loc_4D28"], ["test~r12b,0", "fmulp~<TAG>,<TAG>", "jz~FOO"]], [0, 0, 32, 1, 1, 6, 0, 1, 14, 4, 0.0003812636165577342, ["sub     r8, r13", "mov     rdx, r13; n", "mov     rsi, thousands_sep; src", "mov     rdi, r8; dest", "call    _memcpy", "mov     r8, rax"], ["sub~r8,r13", "mov~rdx,r13", "mov~rsi,thousands_sep", "mov~rdi,r8", "call~FOO", "mov~r8,rax"]], [0, 0, 37, 0, 0, 3, 0, 1, 7, 8, 0.0007080610021786493, ["fld     cs:tbyte_AE20", "fucomip st, st(1)", "ja      loc_4FC0"], ["fld~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "ja~FOO"]], [0, 0, 32, 0, 0, 3, 1, 1, 11, 3, 0.037527233115468406, ["movzx   eax, byte ptr [r15]", "test    al, al", "jz      short loc_4F47"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 66, 0, 0, 5, 1, 0, 3, 11, 0.02423747276688453, ["mov     rax, [rsp+0C8h+to_block_size]", "mov     [rsp+0C8h+from_block_size], rax", "test    rax, rax", "fild    [rsp+0C8h+from_block_size]", "jns     short loc_4B42"], ["mov~rax,[rsp+0]", "mov~[rsp+0],rax", "test~rax,rax", "fild~<TAG>,[rsp+0]", "jns~FOO"]], [0, 0, 65, 0, 0, 1, 0, 0, 4, 11, 0.0, ["fadd    cs:flt_AE10"], ["fadd~<TAG>,<TAG>"]], [0, 0, 35, 0, 0, 2, 0, 0, 13, 7, 0.001906318082788671, ["fstp    st", "nop     word ptr [rax+rax+00h]"], ["fstp~<TAG>,<TAG>", "nop~[ord ptr [rax+0]"]], [2, 0, 32, 1, 0, 4, 0, 0, 12, 3, 0.0, ["cmp     al, 7Fh", "movzx   ebp, al", "cmovnb  rbp, r12", "add     r15, 1"], ["cmp~al,0", "movzx~ebp,al", "cmovnb~rbp,r12", "add~r15,0"]], [2, 0, 44, 1, 0, 7, 0, 0, 11, 8, 0.025490196078431372, ["mov     rax, rbp", "mov     byte ptr [r8-1], 30h ; '0'", "not     rax", "add     r8, rax", "cmp     ebp, 8", "mov     eax, ebp", "jnb     short loc_538A"], ["mov~rax,rbp", "mov~[yte ptr [r8-1]+0],0", "not~rax", "add~r8,rax", "cmp~ebp,0", "mov~eax,ebp", "jnb~FOO"]], [1, 0, 83, 0, 0, 2, 0, 1, 10, 12, 0.030555555555555555, ["cmp     r10, 9", "ja      loc_5288"], ["cmp~r10,0", "ja~FOO"]], [0, 0, 64, 0, 0, 5, 1, 0, 4, 10, 0.030446623093681915, ["fdivp   st(1), st", "mov     [rsp+0C8h+from_block_size], n_0", "test    n_0, n_0", "fild    [rsp+0C8h+from_block_size]", "jns     short loc_4B58"], ["fdivp~<TAG>,<TAG>", "mov~[rsp+0],n_0", "test~n_0,n_0", "fild~<TAG>,[rsp+0]", "jns~FOO"]], [0, 0, 63, 0, 0, 1, 0, 0, 5, 10, 0.0, ["fadd    cs:flt_AE10"], ["fadd~<TAG>,<TAG>"]], [2, 0, 51, 1, 0, 10, 2, 1, 9, 10, 0.02712418300653595, ["mov     ecx, [rsp+0C8h+var_98]", "add     rbp, 1", "xor     eax, eax", "fdivrp  st(1), st", "test    ecx, ecx", "setz    al", "cmp     r15d, 1", "lea     rax, [rbp+rax+1]", "mov     [rsp+0C8h+from_block_size], rax", "jz      loc_5120"], ["mov~ecx,[rsp+0]", "add~rbp,0", "xor~eax,eax", "fdivrp~<TAG>,<TAG>", "test~ecx,ecx", "setz~al", "cmp~r15d,0", "lea~rax,[rbp+0]", "mov~[rsp+0],rax", "jz~FOO"]], [0, 0, 25, 1, 1, 11, 0, 2, 13, -1, 0.006808278867102396, ["mov     eax, r14d", "mov     r15, r8", "mov     opts, r12", "mov     rsi, [rsp+0C8h+from_block_size]; src", "sub     r15, r14", "mov     rdx, r14; n", "mov     rdi, r15; dest", "mov     ebx, dword ptr [rsp+0C8h+damt.value]", "mov     r12d, eax", "call    _memcpy", "jmp     loc_4DBA"], ["mov~eax,r14d", "mov~r15,r8", "mov~opts,r12", "mov~rsi,[rsp+0]", "sub~r15,r14", "mov~rdx,r14", "mov~rdi,r15", "mov~ebx,[word ptr [rsp+0]", "mov~r12d,eax", "call~FOO", "jmp~FOO"]], [0, 0, 36, 0, 0, 2, 0, 0, 11, 8, 0.008714596949891067, ["fld     cs:flt_AE14", "fmul    st(1), st"], ["fld~<TAG>,<TAG>", "fmul~<TAG>,<TAG>"]], [1, 0, 57, 0, 0, 2, 0, 1, 8, 12, 0.0015795206971677559, ["cmp     ebx, 8", "jnz     short loc_4B70"], ["cmp~ebx,0", "jnz~FOO"]], [4, 0, 35, 1, 2, 17, 2, 3, 7, 7, 0.027668845315904137, ["sub     rsp, 10h", "lea     rcx, a0lf; \"%.0Lf\"", "mov     esi, 1", "mov     n_0, [rsp+0D8h+buf]", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "xor     eax, eax", "fstp    [rsp+0D8h+value.value]", "xor     ebp, ebp", "mov     rdi, rbx", "call    ___sprintf_chk", "mov     rdi, rbx; s", "mov     ebx, 0FFFFFFFFh", "call    _strlen", "pop     rsi", "pop     rdi", "mov     decimal_point, rax", "jmp     short loc_4D90"], ["sub~rsp,0", "lea~rcx,<TAG>", "mov~esi,0", "mov~n_0,[rsp+0]", "mov~rdx,0", "xor~eax,eax", "fstp~<TAG>,<TAG>", "xor~ebp,ebp", "mov~rdi,rbx", "call~FOO", "mov~rdi,rbx", "mov~ebx,0", "call~FOO", "pop~rsi", "pop~rdi", "mov~decimal_point,rax", "jmp~FOO"]], [1, 0, 36, 1, 1, 7, 0, 2, 8, 8, 0.0, ["sub     rsp, 10h", "mov     edi, r15d; inexact_style", "fstp    [rsp+0D8h+value.value]; value", "call    adjust_value", "pop     r8", "pop     r9", "jmp     loc_4D3C"], ["sub~rsp,0", "mov~edi,r15d", "fstp~<TAG>,<TAG>", "call~FOO", "pop~r8", "pop~r9", "jmp~FOO"]], [0, 0, 35, 0, 0, 2, 0, 1, 12, 7, 0.017156862745098037, ["fstp    st", "jmp     short loc_4D90"], ["fstp~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 52, 0, 0, 3, 0, 1, 9, 11, 0.002832244008714597, ["fstp    st(2)", "fstp    st(2)", "jmp     short loc_4B94"], ["fstp~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "jmp~FOO"]], [0, 1, 14, 0, 0, 5, 0, 1, 14, -1, 0.0, ["mov     rcx, [rsp+0C8h+buf]", "lea     rdi, [rcx+289h]", "mov     byte ptr [rcx+288h], 20h ; ' '", "mov     [rsp+0C8h+psuffix], rdi", "jmp     loc_4DE1"], ["mov~rcx,<TAG>", "lea~rdi,[rcx+0]", "mov~[yte ptr [rcx+0],<STR>", "mov~[rsp+0],rdi", "jmp~FOO"]], [1, 0, 15, 0, 0, 2, 1, 1, 13, -1, 0.07908496732026143, ["and     r12d, 40h", "jnz     loc_4F78"], ["and~r12d,0", "jnz~FOO"]], [0, 0, 52, 0, 0, 2, 0, 0, 8, 11, 0.0196078431372549, ["fstp    st(2)", "fstp    st(2)"], ["fstp~<TAG>,<TAG>", "fstp~<TAG>,<TAG>"]], [0, 0, 34, 3, 1, 9, 0, 1, 8, 6, 0.07129629629629629, ["mov     inexact_style, [rsp+0C8h+psuffix]", "mov     rsi, [rsp+0C8h+buf]; src", "mov     rdx, buflen; n", "sub     r15, buflen", "sub     buflen, nonintegerlen", "mov     rdi, p_0; dest", "call    _memmove", "mov     r8, r14", "add     r8, p_0"], ["mov~inexact_style,[rsp+0]", "mov~rsi,<TAG>", "mov~rdx,buflen", "sub~r15,buflen", "sub~buflen,nonintegerlen", "mov~rdi,p_0", "call~FOO", "mov~r8,r14", "add~r8,p_0"]], [3, 0, 35, 1, 2, 17, 2, 3, 12, 7, 0.01906318082788671, ["fdivp   st(1), st", "sub     rsp, 10h", "lea     rcx, a0lf; \"%.0Lf\"", "mov     r14, [rsp+0D8h+buf]", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "mov     esi, 1", "xor     eax, eax", "xor     ebp, ebp", "mov     rdi, r14", "fstp    [rsp+0D8h+value.value]", "call    ___sprintf_chk", "mov     rdi, r14; s", "call    _strlen", "pop     r10", "mov     r14, rax", "pop     r11", "jmp     loc_4D90"], ["fdivp~<TAG>,<TAG>", "sub~rsp,0", "lea~rcx,<TAG>", "mov~r14,[rsp+0]", "mov~rdx,0", "mov~esi,0", "xor~eax,eax", "xor~ebp,ebp", "mov~rdi,r14", "fstp~<TAG>,<TAG>", "call~FOO", "mov~rdi,r14", "call~FOO", "pop~r10", "mov~r14,rax", "pop~r11", "jmp~FOO"]], [0, 0, 37, 0, 0, 3, 0, 0, 14, 8, 0.004738562091503268, ["fld     cs:tbyte_AE20", "fucomip st, st(2)", "jbe     short loc_5173"], ["fld~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "jbe~FOO"]], [1, 0, 36, 1, 1, 9, 0, 2, 15, 8, 0.0, ["fstp    dword ptr [rsp+0C8h+from_block_size]", "sub     rsp, 10h", "mov     edi, r15d; inexact_style", "fstp    [rsp+0D8h+value.value]; value", "call    adjust_value", "pop     rbp", "pop     r14", "fld     dword ptr [rsp+0C8h+from_block_size]", "jmp     short loc_5173"], ["fstp~<TAG>,[word ptr [rsp+0]", "sub~rsp,0", "mov~edi,r15d", "fstp~<TAG>,<TAG>", "call~FOO", "pop~rbp", "pop~r14", "fld~<TAG>,[word ptr [rsp+0]", "jmp~FOO"]], [1, 0, 37, 1, 0, 6, 0, 0, 14, 8, 0.004901960784313725, ["mov     esi, edx", "add     edx, 8", "mov     rdi, [r14+rsi]", "cmp     edx, eax", "mov     [rcx+rsi], rdi", "jb      short loc_53C0"], ["mov~esi,edx", "add~edx,0", "mov~rdi,<TAG>", "cmp~edx,eax", "mov~<TAG>,rdi", "jb~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 12, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [21, 82, 117, 3, 137, 209, 2, 652, 0.02032, 9, 61], "succs": [[78, 7], [0, 66], [64, 12], [2], [2], [10], [11, 5], [86], [67], [8, 68], [19, 85], [10], [126, 23], [122, 12], [43, 22], [16, 14], [26, 14], [24, 44], [17, 15], [34, 106], [61], [82, 20], [24, 25], [114, 30], [40], [24], [24, 43], [3, 4], [1], [28, 87], [133, 31], [132], [53, 39], [32], [32], [57, 52], [35, 52], [104, 45], [74, 37], [56, 36], [136, 51], [40, 96], [40, 129], [40], [40], [104, 21], [130, 123], [46], [46], [60, 86], [49, 83], [], [1], [100, 52], [52], [52], [52], [52], [59, 101], [58, 42], [67, 116], [1, 29], [1], [1], [133], [33, 63], [77, 86], [98], [67, 69], [67, 70], [67], [67, 95], [67], [104, 79], [104, 73], [41], [75, 109], [86, 78], [50, 86], [61], [42], [80, 99], [61], [86], [65], [65, 34], [90], [89], [92], [88, 93], [90, 91], [98], [117, 94], [92], [89, 62], [135], [81, 42], [111], [97, 41], [59], [103], [42], [121, 76], [54, 103], [112, 105], [112], [84, 55], [124, 110], [107, 47], [111], [124, 125], [115, 102], [113, 118], [118], [131], [102], [9, 71], [6, 62], [108, 119], [108], [27, 13], [41], [132], [48, 127], [131], [124], [131], [120], [18], [128, 18], [120], [98], [131], [132, 134], [132], [72, 135], []], "fname": "human_readable", "n_num": 137}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[1, 1, 8, 0, 0, 3, 1, 1, 0, 0, 0.03561253561253561, ["or      ebp, 180h", "cmp     byte ptr [rcx-2], 69h ; 'i'", "jnz     loc_5528"], ["or~ebp,<STR>", "cmp~[yte ptr [rcx-2]+0],0", "jnz~FOO"]], [1, 0, 10, 0, 0, 2, 0, 1, 7, 5, 0.07692307692307693, ["cmp     byte ptr [rcx-1], 42h ; 'B'", "jz      short loc_55F8"], ["cmp~[yte ptr [rcx-1]+0],0", "jz~FOO"]], [0, 0, 14, 0, 0, 3, 0, 1, 5, 5, 0.09116809116809117, ["mov     rcx, [rsp+38h+var_38]", "cmp     rbx, rcx", "jnz     short loc_5519"], ["mov~rcx,<TAG>", "cmp~rbx,rcx", "jnz~FOO"]], [1, 0, 15, 0, 0, 4, 0, 0, 4, 4, 0.09971509971509972, ["movzx   esi, byte ptr [rbx]", "lea     edx, [rsi-30h]", "cmp     dl, 9", "jbe     short loc_5528"], ["movzx~esi,<TAG>", "lea~edx,[rsi-30h]+0]", "cmp~dl,0", "jbe~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 6, 6, 0.06410256410256411, ["jmp     loc_55E0"], ["jmp~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 9, 5, 0.0014245014245014246, ["jmp     short loc_55EA"], ["jmp~FOO"]], [0, 0, 26, 0, 1, 5, 1, 2, 1, 5, 0.005698005698005698, ["lea     rdi, aBlockSize; \"BLOCK_SIZE\"", "call    _getenv", "test    rax, rax", "mov     spec, rax", "jnz     loc_546C"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~spec,rax", "jnz~FOO"]], [0, 1, 27, 1, 0, 13, 2, 1, 0, 5, 0.0, ["push    r13", "push    r12", "mov     r13, opts", "push    rbp", "push    rbx", "mov     r12, block_size", "mov     rbx, spec", "sub     rsp, 18h", "mov     rax, fs:28h", "mov     [rsp+38h+var_30], rax", "xor     eax, eax", "test    spec, spec", "jz      loc_5580"], ["push~r13", "push~r12", "mov~r13,opts", "push~rbp", "push~rbx", "mov~r12,block_size", "mov~rbx,spec", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~spec,spec", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 0, 1, 7, 5, 0.007122507122507123, ["cmp     rbx, rcx", "jz      loc_55E0"], ["cmp~rbx,rcx", "jz~FOO"]], [2, 0, 13, 1, 0, 5, 0, 1, 6, 4, 0.029914529914529916, ["add     rbx, 1", "movzx   edi, byte ptr [rbx]", "lea     edx, [rdi-30h]", "cmp     dl, 9", "ja      short loc_5510"], ["add~rbx,0", "movzx~edi,<TAG>", "lea~edx,[rdi-30h]+0]", "cmp~dl,0", "ja~FOO"]], [1, 0, 19, 0, 1, 7, 1, 2, 2, 3, 0.12820512820512822, ["lea     rdx, block_size_opts; vallist", "lea     rsi, block_size_args; arglist", "mov     ecx, 4; valsize", "mov     rdi, rbx; arg", "call    argmatch", "test    eax, eax", "js      short loc_54D8"], ["lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~ecx,0", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "js~FOO"]], [1, 0, 21, 0, 0, 3, 1, 1, 1, 4, 0.08262108262108263, ["xor     ebp, ebp", "cmp     byte ptr [rbx], 27h ; '''", "jnz     short loc_547C"], ["xor~ebp,ebp", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 20, 1, 0, 2, 0, 0, 2, 4, 0.0, ["add     rbx, 1", "mov     ebp, 4"], ["add~rbx,0", "mov~ebp,0"]], [2, 0, 3, 0, 0, 4, 1, 1, 4, 2, 0.005698005698005698, ["mov     qword ptr [block_size], 400h", "xor     eax, eax", "mov     dword ptr [opts+0], 0", "jmp     loc_54B5"], ["mov~<TAG>,0", "xor~eax,eax", "mov~[word ptr [opts+0],0", "jmp~FOO"]], [0, 0, 5, 0, 1, 4, 1, 2, 3, 3, 0.01566951566951567, ["lea     rdi, name; \"POSIXLY_CORRECT\"", "call    _getenv", "test    rax, rax", "jz      short loc_560A"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 4, 1, 0.07122507122507123, ["mov     rcx, [rsp+38h+var_30]", "xor     rcx, fs:28h", "jnz     loc_5621"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 25, 0, 1, 5, 1, 2, 2, 4, 0.011396011396011397, ["lea     rdi, aBlocksize; \"BLOCKSIZE\"", "call    _getenv", "test    rax, rax", "mov     rbx, rax", "jnz     loc_546C"], ["lea~rdi,<TAG>", "call~FOO", "test~rax,rax", "mov~rbx,rax", "jnz~FOO"]], [0, 0, 5, 0, 0, 3, 0, 1, 5, 3, 0.07122507122507123, ["mov     rdx, [block_size]", "mov     [opts+0], ebp", "jmp     short loc_5544"], ["mov~rdx,<TAG>", "mov~[opts+0],ebp", "jmp~FOO"]], [0, 1, 6, 0, 0, 2, 1, 1, 9, 4, 0.017094017094017096, ["or      ebp, 20h", "jmp     loc_5528"], ["or~ebp,<STR>", "jmp~FOO"]], [1, 0, 3, 0, 0, 6, 2, 0, 3, 2, 0.01851851851851852, ["lea     rdx, block_size_opts", "cdqe", "mov     qword ptr [block_size], 1", "or      ebp, [rdx+rax*4]", "xor     eax, eax", "mov     [opts+0], ebp"], ["lea~rdx,<TAG>", "cdqe~", "mov~<TAG>,0", "or~ebp,<TAG>", "xor~eax,eax", "mov~[opts+0],ebp"]], [1, 0, 5, 0, 0, 2, 0, 0, 4, 3, 0.02421652421652422, ["mov     rdx, [block_size]", "mov     dword ptr [opts+0], 0"], ["mov~rdx,<TAG>", "mov~[word ptr [opts+0],0"]], [0, 0, 17, 0, 1, 8, 2, 2, 3, 4, 0.11965811965811966, ["lea     r8, aEeggkkmmppttyy; \"eEgGkKmMpPtTyYzZ0\"", "xor     edx, edx; strtol_base", "mov     rsi, rsp; ptr", "mov     rcx, block_size; val", "mov     rdi, rbx; s", "call    xstrtoumax", "test    eax, eax", "jnz     short loc_5538"], ["lea~r8,<TAG>", "xor~edx,edx", "mov~rsi,rsp", "mov~rcx,block_size", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 5, 2, 0.08262108262108263, ["test    rdx, rdx", "jnz     loc_54B5"], ["test~rdx,rdx", "jnz~FOO"]], [2, 2, 3, 1, 1, 9, 1, 2, 6, 2, 0.0, ["lea     rdi, name; \"POSIXLY_CORRECT\"", "call    _getenv", "cmp     rax, 1", "sbb     rax, rax", "and     eax, 200h", "add     rax, 200h", "mov     [block_size], rax", "mov     eax, 4", "jmp     loc_54B5"], ["lea~rdi,<TAG>", "call~FOO", "cmp~rax,0", "sbb~rax,rax", "and~eax,<STR>", "add~rax,<STR>", "mov~<TAG>,rax", "mov~eax,0", "jmp~FOO"]], [1, 1, 3, 0, 0, 4, 1, 1, 4, 2, 0.005698005698005698, ["mov     qword ptr [block_size], 200h", "xor     eax, eax", "mov     dword ptr [opts+0], 0", "jmp     loc_54B5"], ["mov~<TAG>,<STR>", "xor~eax,eax", "mov~[word ptr [opts+0],0", "jmp~FOO"]], [0, 1, 7, 0, 0, 1, 1, 0, 8, 5, 0.01851851851851852, ["or      bpl, 80h"], ["or~bpl,<STR>"]], [0, 1, 0, 1, 0, 6, 0, 0, 5, -1, 0.0, ["add     rsp, 18h", "pop     rbx", "pop     rbp", "pop     block_size", "pop     opts", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~block_size", "pop~opts", "retn"]]], "func_feature": [7, 19, 28, 2, 28, 41, 0, 111, 0.03872, 7, 5], "succs": [[18, 5], [0, 26], [9, 4], [2, 18], [1], [19], [17, 11], [11, 6], [9, 1], [8, 18], [20, 22], [10, 12], [10], [16], [25, 13], [], [27, 15], [11, 14], [23], [18], [16], [23], [3, 21], [16, 24], [16], [16], [19], []], "fname": "human_options", "n_num": 28}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 1, 0, 1, 3, 1, 2, 0, 0, 0.02777777777777778, ["xor     edi, edi", "call    r9", "jmp     short loc_570F"], ["xor~edi,edi", "call~r9", "jmp~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 3, 3, 0.13333333333333333, ["cmp     eax, 68h ; 'h'", "mov     r9, [rsp+108h+usage_func]", "jz      short loc_5760"], ["cmp~eax,0", "mov~r9,[rsp+0]", "jz~FOO"]], [1, 0, 2, 0, 0, 5, 1, 1, 2, 1, 0.13333333333333333, ["mov     rax, [rsp+108h+var_E0]", "xor     rax, fs:28h", "mov     cs:opterr@@GLIBC_2_2_5, ebx", "mov     cs:optind@@GLIBC_2_2_5, 0", "jnz     loc_5767"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "mov~<TAG>,ebx", "mov~<TAG>,0", "jnz~FOO"]], [1, 0, 7, 0, 1, 7, 1, 2, 2, 2, 0.13333333333333333, ["lea     package, long_options; longopts", "lea     command_name, shortopts; \"+\"", "xor     r8d, r8d; longind", "mov     [rsp+108h+usage_func], usage_func_0", "call    _getopt_long", "cmp     eax, 0FFFFFFFFh", "jz      short loc_56A9"], ["lea~package,<TAG>", "lea~command_name,<TAG>", "xor~r8d,r8d", "mov~[rsp+0],usage_func_0", "call~FOO", "cmp~eax,0", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 4, 2, 0.061111111111111116, ["cmp     eax, 76h ; 'v'", "jnz     short loc_56A9"], ["cmp~eax,0", "jnz~FOO"]], [2, 0, 8, 0, 0, 7, 1, 1, 1, 2, 0.17777777777777778, ["mov     rax, fs:28h", "mov     [rsp+108h+var_E0], rax", "xor     eax, eax", "cmp     edi, 2", "mov     ebx, cs:opterr@@GLIBC_2_2_5", "mov     cs:opterr@@GLIBC_2_2_5, 0", "jz      short loc_56E0"], ["mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~edi,0", "mov~ebx,<TAG>", "mov~<TAG>,0", "jz~FOO"]], [1, 0, 10, 1, 0, 10, 1, 1, 0, 3, 0.0, ["push    r13", "push    r12", "mov     r13, version", "push    rbp", "push    rbx", "mov     rbp, command_name", "mov     r12, package", "sub     rsp, 0E8h", "test    al, al", "jz      short loc_5684"], ["push~r13", "push~r12", "mov~r13,version", "push~rbp", "push~rbx", "mov~rbp,command_name", "mov~r12,package", "sub~rsp,0", "test~al,al", "jz~FOO"]], [0, 0, 9, 0, 0, 8, 0, 0, 1, 3, 0.0, ["movaps  [rsp+108h+var_A8], xmm0", "movaps  [rsp+108h+var_98], xmm1", "movaps  [rsp+108h+var_88], xmm2", "movaps  [rsp+108h+var_78], xmm3", "movaps  [rsp+108h+var_68], xmm4", "movaps  [rsp+108h+var_58], xmm5", "movaps  [rsp+108h+var_48], xmm6", "movaps  [rsp+108h+var_38], xmm7"], ["movaps~[rsp+0],xmm0", "movaps~[rsp+0],xmm1", "movaps~[rsp+0],xmm2", "movaps~[rsp+0],xmm3", "movaps~[rsp+0],xmm4", "movaps~[rsp+0],xmm5", "movaps~[rsp+0],xmm6", "movaps~[rsp+0],xmm7"]], [2, 0, 0, 0, 2, 14, 1, 2, 5, -1, 0.0, ["lea     rax, [rsp+108h+arg_0]", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "lea     r8, [rsp+108h+authors]; authors", "mov     rcx, version; version", "mov     rdx, package; package", "mov     rsi, command_name; command_name", "mov     [rsp+108h+authors.overflow_arg_area], rax", "lea     rax, [rsp+108h+var_D8]", "mov     [rsp+108h+authors.gp_offset], 30h ; '0'", "mov     [rsp+108h+authors.fp_offset], 30h ; '0'", "mov     [rsp+108h+authors.reg_save_area], rax", "call    version_etc_va", "xor     edi, edi; status", "call    _exit"], ["lea~rax,[rsp+0]", "mov~rdi,<TAG>", "lea~r8,[rsp+0]", "mov~rcx,version", "mov~rdx,package", "mov~rsi,command_name", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],rax", "call~FOO", "xor~edi,edi", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 0E8h", "pop     saved_opterr", "pop     command_name", "pop     package", "pop     version", "retn"], ["add~rsp,0", "pop~saved_opterr", "pop~command_name", "pop~package", "pop~version", "retn"]]], "func_feature": [5, 6, 12, 10, 11, 14, 1, 66, 0.06061, 6, 2], "succs": [[8], [0, 4], [9, 10], [1, 2], [8, 2], [2, 3], [5, 7], [5], [], [], []], "fname": "parse_long_options", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     rdx, name; arg", "mov     esi, 6; s", "jmp     quotearg_n_style"], ["mov~rdx,name", "mov~esi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 1, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quote_n", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[1, 0, 1, 0, 0, 4, 1, 1, 0, 0, 0.0, ["mov     rdx, name; arg", "mov     esi, 6; s", "xor     edi, edi; n", "jmp     quotearg_n_style"], ["mov~rdx,name", "mov~esi,0", "xor~edi,edi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 19, 4, 0.0, 0, 0], "succs": [[1], []], "fname": "quote", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[1, 0, 159, 0, 0, 3, 2, 1, 0, 0, 0.01578402622045886, ["xor     ebp, ebp", "test    byte ptr [rsp+0C8h+flags], 1", "jz      loc_5A8D"], ["xor~ebp,ebp", "test~[yte ptr [rsp+0],0", "jz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 9, -1, 0.0628725586031089, ["test    r11b, r11b; jumptable 00000000000058F8 case 0", "jnz     loc_5EC0; jumptable 0000000000005EB8 case 0"], ["test~r11b,r11b", "jnz~FOO"]], [0, 0, 162, 0, 0, 2, 1, 1, 3, -1, 0.00017250301880282904, ["test    buffersize, buffersize", "jz      loc_61CC"], ["test~buffersize,buffersize", "jz~FOO"]], [0, 0, 164, 0, 0, 2, 1, 1, 2, -1, 0.00023000402507043874, ["test    ebx, ebx; jumptable 0000000000005808 case 2", "jnz     loc_6284"], ["test~ebx,ebx", "jnz~FOO"]], [1, 0, 159, 1, 0, 1, 0, 0, 11, -1, 0.3026661299906082, ["add     i_0, 1"], ["add~i_0,0"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.14407963250468, ["cmp     [rsp+0C8h+var_B8], 0", "jz      short loc_5A03"], ["cmp~[rsp+0],0", "jz~FOO"]], [3, 0, 159, 1, 0, 10, 2, 1, 11, -1, 0.014894038423450197, ["mov     eax, ebp", "mov     rsi, [rsp+0C8h+var_B8]", "mov     ecx, ebp", "shr     al, 5", "and     ecx, 1Fh", "mov     edx, 1", "movzx   eax, al", "shl     edx, cl", "test    [rsi+rax*4], edx", "jz      short loc_5A03"], ["mov~eax,ebp", "mov~rsi,[rsp+0]", "mov~ecx,ebp", "shr~al,0", "and~ecx,0", "mov~edx,0", "movzx~eax,al", "shl~edx,cl", "test~<TAG>,edx", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.1325398194468402, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      loc_5A03"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 159, 1, 0, 1, 0, 0, 14, -1, 0.038985682249439366, ["add     rbx, 1"], ["add~rbx,0"]], [0, 0, 159, 0, 0, 2, 0, 1, 15, -1, 0.02624920936116382, ["mov     r12d, r11d", "jmp     loc_6141"], ["mov~r12d,r11d", "jmp~FOO"]], [0, 0, 159, 0, 0, 14, 0, 0, 14, -1, 0.027686734517854063, ["mov     rdi, r13", "mov     r13, [rsp+0C8h+argsize]", "mov     rsi, rbp", "mov     bytes, m", "mov     r9, arg_0", "mov     bytes, [rsp+0C8h+i]", "mov     r10, [rsp+0C8h+var_78]", "movzx   r11d, [rsp+0C8h+var_6A]", "cmp     rdi, r13", "movzx   ebp, [rsp+0C8h+c]", "mov     rbx, [rsp+0C8h+var_68]", "mov     r8, [rsp+0C8h+var_80]", "mov     arg_0, [rsp+0C8h+var_60]", "jnb     short loc_627C"], ["mov~rdi,r13", "mov~r13,[rsp+0]", "mov~rsi,rbp", "mov~bytes,m", "mov~r9,arg_0", "mov~bytes,[rsp+0]", "mov~r10,[rsp+0]", "movzx~r11d,[rsp+0]", "cmp~rdi,r13", "movzx~ebp,[rsp+0]", "mov~rbx,[rsp+0]", "mov~r8,[rsp+0]", "mov~arg_0,[rsp+0]", "jnb~FOO"]], [0, 0, 159, 0, 0, 1, 0, 1, 16, -1, 0.0022281639928698753, ["jmp     short loc_627C"], ["jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 17, -1, 0.0, ["cmp     byte ptr [r14+m], 0", "jz      short loc_627C"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 159, 1, 0, 4, 0, 1, 16, -1, 0.007029498016215284, ["add     m, 1", "lea     rdx, [r15+m]", "cmp     r13, rdx", "ja      short loc_6268"], ["add~m,0", "lea~rdx,<TAG>", "cmp~r13,rdx", "ja~FOO"]], [0, 0, 185, 1, 0, 6, 0, 1, 1, -1, 0.0053188430797538955, ["lea     rcx, off_AE80", "mov     edx, r15d", "mov     ebp, ebx", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "mov~edx,r15d", "mov~ebp,ebx", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [3, 0, 187, 1, 1, 25, 2, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15d, r8d", "push    r13", "push    r12", "mov     r14, buffersize", "push    rbp", "push    rbx", "mov     ebx, r9d", "mov     r13, arg_0", "mov     r12, argsize_0", "and     ebx, 2", "sub     rsp, 98h", "mov     rax, [rsp+0C8h+quote_these_too]", "mov     [rsp+0C8h+buffer], buffer_0", "mov     [rsp+0C8h+quoting_style], r8d", "mov     [rsp+0C8h+flags], r9d", "mov     [rsp+0C8h+var_B8], rax", "mov     rax, fs:28h", "mov     [rsp+0C8h+var_40], rax", "xor     eax, eax", "call    ___ctype_get_mb_cur_max", "cmp     r15d, 7; switch 8 cases", "mov     [rsp+0C8h+var_88], rax", "ja      loc_62CC; jumptable 0000000000005808 default case"], ["push~r15", "push~r14", "mov~r15d,r8d", "push~r13", "push~r12", "mov~r14,buffersize", "push~rbp", "push~rbx", "mov~ebx,r9d", "mov~r13,arg_0", "mov~r12,argsize_0", "and~ebx,0", "sub~rsp,0", "mov~rax,[rsp+0]", "mov~<TAG>,buffer_0", "mov~[rsp+0],r8d", "mov~[rsp+0],r9d", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "cmp~r15d,0", "mov~[rsp+0],rax", "ja~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 12, -1, 0.4664481628428498, ["cmp     rbx, r8", "jnb     short loc_5A14"], ["cmp~rbx,r8", "jnb~FOO"]], [0, 0, 159, 0, 0, 1, 0, 1, 15, -1, 0.13409234661606578, ["jmp     store_c"], ["jmp~FOO"]], [2, 0, 159, 1, 0, 3, 0, 1, 12, -1, 0.020892032277231517, ["add     i_0, 1", "mov     ebp, 5Ch ; '\\'", "jmp     store_c"], ["add~i_0,0", "mov~ebp,0", "jmp~FOO"]], [0, 0, 159, 0, 1, 11, 0, 1, 10, -1, 0.0, ["mov     rdi, arg_0; s", "mov     [rsp+0C8h+var_80], r8", "mov     byte ptr [rsp+0C8h+arg], r11b", "mov     [rsp+0C8h+i], r10", "mov     [rsp+0C8h+argsize], arg_0", "call    _strlen", "movzx   r11d, byte ptr [rsp+0C8h+arg]", "mov     r8, [rsp+0C8h+var_80]", "mov     argsize_0, rax", "mov     r10, [rsp+0C8h+i]", "mov     r9, [rsp+0C8h+argsize]"], ["mov~rdi,arg_0", "mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[rsp+0],r10", "mov~[rsp+0],arg_0", "call~FOO", "movzx~r11d,[yte ptr [rsp+0]", "mov~r8,[rsp+0]", "mov~argsize_0,rax", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]"]], [2, 0, 159, 0, 0, 5, 0, 1, 9, -1, 0.10643436260134553, ["lea     rax, [rsp+0C8h+mbstate]", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "mov     qword ptr [rsp+0C8h+mbstate.__count], 0", "mov     [rsp+0C8h+p], rax", "jnz     short loc_6013"], ["lea~rax,[rsp+0]", "cmp~argsize_0,0", "mov~[word ptr [rsp+0],0", "mov~[rsp+0],rax", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 13, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     [rax+rbx], bpl"], ["mov~rax,<TAG>", "mov~<TAG>,bpl"]], [1, 0, 159, 0, 0, 2, 0, 1, 8, -1, 0.1785981254671957, ["cmp     [rsp+0C8h+var_88], 1; jumptable 00000000000058F8 default case", "jnz     loc_5FC0"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 7, -1, 0.5060843822703409, ["movzx   ebp, byte ptr [r14]", "cmp     bpl, 7Eh ; '~'; switch 127 cases", "ja      loc_5C10; jumptable 00000000000058F8 default case"], ["movzx~ebp,<TAG>", "cmp~bpl,0", "ja~FOO"]], [0, 0, 159, 1, 0, 5, 0, 1, 8, -1, 0.32742875579687747, ["lea     rcx, off_AEA0", "movzx   edx, bpl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bpl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [1, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.03972954447337751, ["movzx   ebp, byte ptr [r14]", "cmp     bpl, 7Eh ; '~'; switch 127 cases", "ja      loc_5C10; jumptable 00000000000058F8 default case"], ["movzx~ebp,<TAG>", "cmp~bpl,0", "ja~FOO"]], [0, 0, 159, 1, 0, 5, 0, 1, 10, -1, 0.03691199516626465, ["lea     rcx, off_B09C", "movzx   edx, bpl", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movzx~edx,bpl", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [0, 0, 4, 0, 0, 4, 0, 1, 20, -1, 0.0008625150940141453, ["mov     r13, arg_0", "mov     printable, [rsp+0C8h+argsize]", "mov     arg_0, [rsp+0C8h+var_80]", "jmp     force_outer_quoting_style"], ["mov~r13,arg_0", "mov~printable,[rsp+0]", "mov~arg_0,[rsp+0]", "jmp~FOO"]], [2, 0, 159, 1, 0, 5, 1, 1, 19, -1, 0.00557759760795814, ["mov     edx, 1", "mov     rdi, 20000002Bh", "shl     rdx, cl", "test    rdx, rdi", "jnz     loc_61BA"], ["mov~edx,0", "mov~rdi,0", "shl~rdx,cl", "test~rdx,rdi", "jnz~FOO"]], [1, 0, 159, 1, 0, 2, 0, 1, 13, -1, 0.46587315278017366, ["add     rbx, 1", "jmp     loc_5840"], ["add~rbx,0", "jmp~FOO"]], [0, 0, 159, 0, 0, 11, 0, 1, 13, -1, 0.0039963199355988735, ["movzx   r11d, [rsp+0C8h+var_6A]", "mov     bytes, m", "mov     bytes, [rsp+0C8h+i]", "mov     r10, [rsp+0C8h+var_78]", "movzx   ebp, [rsp+0C8h+c]", "mov     r9, arg_0", "mov     m, [rsp+0C8h+var_68]", "mov     r8, [rsp+0C8h+var_80]", "mov     r13, [rsp+0C8h+argsize]", "mov     r12d, r11d", "jmp     loc_6141"], ["movzx~r11d,[rsp+0]", "mov~bytes,m", "mov~bytes,[rsp+0]", "mov~r10,[rsp+0]", "movzx~ebp,[rsp+0]", "mov~r9,arg_0", "mov~m,[rsp+0]", "mov~r8,[rsp+0]", "mov~r13,[rsp+0]", "mov~r12d,r11d", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 12, -1, 0.07972514519004083, ["cmp     bytes, 0FFFFFFFFFFFFFFFFh", "jz      loc_61EF"], ["cmp~bytes,0", "jz~FOO"]], [3, 0, 160, 0, 0, 6, 2, 0, 2, -1, 0.0023000402507043875, ["mov     [rsp+0C8h+elide_outer_quotes], 0; jumptable 0000000000005808 case 5", "mov     ebp, 1", "xor     r11d, r11d", "mov     [rsp+0C8h+quote_string], 0", "xor     ebx, ebx", "nop     word ptr [rax+rax+00h]"], ["mov~[rsp+0],0", "mov~ebp,0", "xor~r11d,r11d", "mov~[rsp+0],0", "xor~ebx,ebx", "nop~[ord ptr [rax+0]"]], [4, 0, 160, 0, 0, 8, 0, 1, 4, -1, 0.0023000402507043875, ["mov     rax, [rsp+0C8h+buffer]", "mov     [rsp+0C8h+elide_outer_quotes], 0", "mov     r11d, 1", "mov     ebx, 1", "mov     byte ptr [rax], 27h ; '''", "lea     rax, off_B5FC", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_5828"], ["mov~rax,<TAG>", "mov~[rsp+0],0", "mov~r11d,0", "mov~ebx,0", "mov~<TAG>,0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "jmp~FOO"]], [2, 0, 159, 0, 0, 4, 0, 1, 9, -1, 0.009573917543557013, ["cmp     argsize_0, 1; jumptable 00000000000058F8 cases 123,125", "setnz   al", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_5A35"], ["cmp~argsize_0,0", "setnz~al", "cmp~argsize_0,0", "jnz~FOO"]], [1, 0, 164, 1, 0, 4, 1, 1, 8, -1, 0.013915243516761544, ["add     rbx, 1", "movzx   eax, byte ptr [r15+len]", "test    al, al", "jnz     short loc_5D80"], ["add~rbx,0", "movzx~eax,<TAG>", "test~al,al", "jnz~FOO"]], [0, 0, 164, 0, 0, 2, 0, 0, 7, -1, 0.005175090564084872, ["cmp     buffersize, rbx", "jbe     short loc_5D88"], ["cmp~buffersize,rbx", "jbe~FOO"]], [0, 0, 164, 0, 0, 1, 0, 0, 8, -1, 0.0, ["mov     [rdx+rbx], al"], ["mov~<TAG>,al"]], [0, 0, 164, 0, 0, 2, 1, 1, 2, -1, 0.00023000402507043874, ["test    ebx, ebx; jumptable 0000000000005808 case 3", "jnz     loc_62A4"], ["test~ebx,ebx", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 10, -1, 0.0, ["cmp     byte ptr [arg_0+1], 0", "setnz   al"], ["cmp~[yte ptr [arg_0+0],0", "setnz~al"]], [0, 0, 159, 0, 0, 2, 1, 1, 10, -1, 0.008998907480880915, ["test    al, al", "jnz     loc_59B8; jumptable 00000000000058F8 cases 37,43-58,65-90,93,95,97-122"], ["test~al,al", "jnz~FOO"]], [0, 0, 162, 0, 0, 2, 1, 1, 3, -1, 0.00017250301880282904, ["test    buffersize, buffersize", "jz      short loc_5E42"], ["test~buffersize,buffersize", "jz~FOO"]], [0, 0, 159, 0, 0, 7, 1, 0, 3, -1, 0.12342590995342419, ["mov     r10, quote_string_len", "mov     r9, arg_0", "xor     r15d, r15d", "mov     r11d, ebp", "mov     r8, buffersize", "mov     arg_0, argsize_0", "nop     word ptr [rax+rax+00h]"], ["mov~r10,quote_string_len", "mov~r9,arg_0", "xor~r15d,r15d", "mov~r11d,ebp", "mov~r8,buffersize", "mov~arg_0,argsize_0", "nop~[ord ptr [rax+0]"]], [1, 0, 160, 0, 1, 7, 1, 2, 5, -1, 0.04600080501408775, ["mov     rdi, [rsp+0C8h+quote_string]; s", "test    ebp, ebp", "mov     ebp, 1", "setnz   [rsp+0C8h+elide_outer_quotes]", "call    _strlen", "mov     r11, rax", "jmp     loc_5828"], ["mov~rdi,[rsp+0]", "test~ebp,ebp", "mov~ebp,0", "setnz~[rsp+0]", "call~FOO", "mov~r11,rax", "jmp~FOO"]], [2, 0, 160, 0, 0, 6, 3, 1, 2, -1, 0.0023000402507043875, ["mov     [rsp+0C8h+elide_outer_quotes], 0; jumptable 0000000000005808 case 0", "xor     ebp, ebp", "xor     r11d, r11d", "mov     [rsp+0C8h+quote_string], 0", "xor     ebx, ebx", "jmp     loc_5828"], ["mov~[rsp+0],0", "xor~ebp,ebp", "xor~r11d,r11d", "mov~[rsp+0],0", "xor~ebx,ebx", "jmp~FOO"]], [3, 0, 160, 0, 0, 8, 2, 1, 2, -1, 0.0023000402507043875, ["lea     rax, off_B5FC; jumptable 0000000000005808 case 1", "mov     [rsp+0C8h+elide_outer_quotes], 1", "xor     ebp, ebp", "mov     r11d, 1", "xor     ebx, ebx", "mov     [rsp+0C8h+quoting_style], 2", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_5828"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "xor~ebp,ebp", "mov~r11d,0", "xor~ebx,ebx", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [4, 0, 160, 0, 0, 7, 0, 1, 4, -1, 0.00920016100281755, ["lea     rax, asc_AE37; \"\\\"\"", "mov     [rsp+0C8h+elide_outer_quotes], 0", "mov     ebp, 1", "mov     r11d, 1", "mov     ebx, 1", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_5828"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~ebp,0", "mov~r11d,0", "mov~ebx,0", "mov~[rsp+0],rax", "jmp~FOO"]], [4, 0, 160, 0, 0, 8, 1, 1, 2, -1, 0.0023000402507043875, ["lea     rax, asc_AE37; jumptable 0000000000005808 case 4", "mov     [rsp+0C8h+elide_outer_quotes], 1", "mov     ebp, 1", "mov     r11d, 1", "xor     ebx, ebx", "mov     [rsp+0C8h+quoting_style], 3", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_5828"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~ebp,0", "mov~r11d,0", "xor~ebx,ebx", "mov~[rsp+0],0", "mov~[rsp+0],rax", "jmp~FOO"]], [3, 0, 160, 0, 0, 7, 1, 1, 4, -1, 0.0023000402507043875, ["lea     rax, off_B5FC", "mov     [rsp+0C8h+elide_outer_quotes], 0", "xor     ebp, ebp", "mov     r11d, 1", "mov     ebx, 1", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_5828"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "xor~ebp,ebp", "mov~r11d,0", "mov~ebx,0", "mov~[rsp+0],rax", "jmp~FOO"]], [2, 0, 160, 0, 0, 7, 2, 1, 3, -1, 0.004600080501408775, ["lea     rax, off_B5FC", "mov     [rsp+0C8h+elide_outer_quotes], 1", "xor     ebp, ebp", "mov     r11d, 1", "xor     ebx, ebx", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_5828"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "xor~ebp,ebp", "mov~r11d,0", "xor~ebx,ebx", "mov~[rsp+0],rax", "jmp~FOO"]], [3, 0, 160, 0, 0, 7, 1, 1, 3, -1, 0.004600080501408775, ["lea     rax, asc_AE37; \"\\\"\"", "mov     [rsp+0C8h+elide_outer_quotes], 1", "mov     ebp, 1", "mov     r11d, 1", "xor     ebx, ebx", "mov     [rsp+0C8h+quote_string], rax", "jmp     loc_5828"], ["lea~rax,<TAG>", "mov~[rsp+0],0", "mov~ebp,0", "mov~r11d,0", "xor~ebx,ebx", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 159, 1, 0, 2, 0, 1, 11, -1, 0.014864010120177103, ["add     i_0, 1", "jmp     loc_5840"], ["add~i_0,0", "jmp~FOO"]], [1, 0, 161, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax], 22h ; '\"'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [0, 0, 159, 0, 0, 2, 1, 1, 9, -1, 0.0004743833017077799, ["test    i_0, i_0; jumptable 00000000000058F8 cases 35,126", "jnz     loc_59B8; jumptable 00000000000058F8 cases 37,43-58,65-90,93,95,97-122"], ["test~i_0,i_0", "jnz~FOO"]], [0, 0, 159, 0, 0, 4, 0, 0, 17, -1, 0.019377839112184464, ["lea     rcx, [arg_0+r15]", "lea     bytes, [arg_0+r13+1]", "lea     r8, [rcx+r13]", "nop     dword ptr [rax]"], ["lea~rcx,<TAG>", "lea~bytes,[arg_0+0]", "lea~r8,<TAG>", "nop~<TAG>"]], [1, 0, 159, 0, 0, 2, 0, 1, 16, -1, 0.023949169110459433, ["cmp     bytes, 1", "jz      short loc_60E7"], ["cmp~bytes,0", "jz~FOO"]], [0, 0, 159, 0, 0, 13, 1, 0, 10, -1, 0.10585935253866943, ["lea     rax, [rsp+0C8h+w]", "xor     edi, edi", "mov     [rsp+0C8h+var_60], r14", "mov     [rsp+0C8h+var_68], rbx", "mov     [rsp+0C8h+i], i_0", "mov     rbx, rdi", "mov     [rsp+0C8h+arg], rax", "mov     [rsp+0C8h+var_78], r10", "mov     r14, arg_0", "mov     [rsp+0C8h+var_6A], r11b", "mov     [rsp+0C8h+c], bpl", "mov     [rsp+0C8h+var_80], r8", "mov     [rsp+0C8h+argsize], r13"], ["lea~rax,[rsp+0]", "xor~edi,edi", "mov~[rsp+0],r14", "mov~[rsp+0],rbx", "mov~[rsp+0],i_0", "mov~rbx,rdi", "mov~[rsp+0],rax", "mov~[rsp+0],r10", "mov~r14,arg_0", "mov~[rsp+0],r11b", "mov~[rsp+0],bpl", "mov~[rsp+0],r8", "mov~[rsp+0],r13"]], [1, 0, 159, 0, 0, 2, 0, 1, 9, -1, 0.009962049335863378, ["cmp     [rsp+0C8h+quoting_style], 2; jumptable 00000000000058F8 cases 32-34,36,38,40-42,59-62,91,94,96,124", "jnz     loc_59B8; jumptable 00000000000058F8 cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 8, 0, 0, 2, 0, 0, 11, -1, 0.010235179115634523, ["cmp     r14, len", "jbe     short loc_6198"], ["cmp~r14,len", "jbe~FOO"]], [1, 0, 8, 1, 0, 4, 1, 1, 12, -1, 0.0004600080501408775, ["add     len, 1", "movzx   edx, byte ptr [rax+len]", "test    dl, dl", "jnz     short loc_6190"], ["add~len,0", "movzx~edx,<TAG>", "test~dl,dl", "jnz~FOO"]], [0, 0, 8, 1, 0, 3, 0, 0, 10, -1, 0.015007762635846128, ["mov     rcx, [rsp+0C8h+buffer]", "sub     rax, rbx", "nop"], ["mov~rcx,<TAG>", "sub~rax,rbx", "nop"]], [0, 0, 165, 0, 0, 3, 1, 1, 5, -1, 0.0008050140877465356, ["movzx   eax, byte ptr [quote_string_0]", "test    al, al", "jz      short loc_5D95"], ["movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 166, 0, 0, 3, 2, 1, 4, -1, 0.019435340118452073, ["xor     ebx, ebx", "test    ebp, ebp", "jnz     short loc_5D95"], ["xor~ebx,ebx", "test~ebp,ebp", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 5, -1, 0.0, ["cmp     byte ptr [arg_0+i_0], 0", "setnz   r12b"], ["cmp~<TAG>,0", "setnz~r12b"]], [1, 0, 159, 0, 0, 4, 0, 1, 4, -1, 0.6129894773158531, ["cmp     argsize_0, i_0", "setnz   r12b", "cmp     argsize_0, 0FFFFFFFFFFFFFFFFh", "jnz     short loc_5856"], ["cmp~argsize_0,i_0", "setnz~r12b", "cmp~argsize_0,0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.005333218331320799, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      loc_59B8; jumptable 00000000000058F8 cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 5, -1, 0.6124144672531769, ["test    r12b, r12b", "jz      loc_6150"], ["test~r12b,r12b", "jz~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 11, -1, 0.000646886320510609, ["jmp     loc_5B8D"], ["jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 15, -1, 0.014346501063768616, ["cmp     byte ptr [rsi], 0", "jnz     short loc_626F"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 14, 0, 0, 7, 1, 1, 6, -1, 0.0534184348226094, ["cmp     [rsp+0C8h+quoting_style], 2", "mov     r12, argsize_0", "mov     r14, r8", "mov     argsize_0, arg_0", "setz    al", "test    [rsp+0C8h+elide_outer_quotes], al", "jz      short loc_6170"], ["cmp~[rsp+0],0", "mov~r12,argsize_0", "mov~r14,r8", "mov~argsize_0,arg_0", "setz~al", "test~[rsp+0],al", "jz~FOO"]], [3, 0, 159, 0, 1, 16, 2, 1, 9, -1, 0.06704617330803289, ["mov     [rsp+0C8h+arg], arg_0", "mov     [rsp+0C8h+i], r8", "mov     byte ptr [rsp+0C8h+argsize], r11b", "mov     [rsp+0C8h+p], r10", "call    ___ctype_b_loc", "mov     rcx, [rax]", "movzx   edx, bpl", "movzx   r11d, byte ptr [rsp+0C8h+argsize]", "mov     r10, [rsp+0C8h+p]", "mov     r8, [rsp+0C8h+i]", "mov     eax, 1", "mov     r9, [rsp+0C8h+arg]", "movzx   r12d, word ptr [rcx+rdx*2]", "shr     r12w, 0Eh", "xor     r12d, 1", "and     r12d, r11d"], ["mov~[rsp+0],arg_0", "mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[rsp+0],r10", "call~FOO", "mov~rcx,<TAG>", "movzx~edx,bpl", "movzx~r11d,[yte ptr [rsp+0]", "mov~r10,[rsp+0]", "mov~r8,[rsp+0]", "mov~eax,0", "mov~r9,[rsp+0]", "movzx~r12d,<TAG>", "shr~r12w,0", "xor~r12d,0", "and~r12d,r11d"]], [0, 0, 159, 0, 0, 3, 1, 1, 6, -1, 0.5538496923696165, ["test    r10, r10", "lea     r14, [arg_0+i_0]", "jz      short loc_58D8"], ["test~r10,r10", "lea~r14,<TAG>", "jz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 10, -1, 0.07923638663676615, ["test    r12b, r12b", "jz      loc_59B8; jumptable 00000000000058F8 cases 37,43-58,65-90,93,95,97-122"], ["test~r12b,r12b", "jz~FOO"]], [0, 0, 159, 0, 0, 1, 0, 1, 14, -1, 0.007935138864930136, ["jmp     loc_5C67"], ["jmp~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 7, -1, 0.06937336681169703, ["test    r11b, r11b", "jz      short loc_58D8"], ["test~r11b,r11b", "jz~FOO"]], [2, 0, 159, 0, 0, 2, 0, 0, 9, -1, 0.0031043698026620293, ["mov     ebp, 9; jumptable 00000000000058F8 case 9", "mov     eax, 74h ; 't'"], ["mov~ebp,0", "mov~eax,0"]], [0, 0, 159, 0, 0, 1, 0, 0, 11, -1, 0.05712724972687022, ["mov     r12d, r11d"], ["mov~r12d,r11d"]], [0, 0, 159, 0, 0, 3, 0, 1, 8, -1, 0.06536267162453126, ["lea     rax, [i_0+r10]", "cmp     rax, argsize_0", "ja      loc_5E98"], ["lea~rax,<TAG>", "cmp~rax,argsize_0", "ja~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.024435874056367417, ["cmp     [rsp+0C8h+quoting_style], 2", "jnz     short c_escape"], ["cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.0031043698026620293, ["mov     ebp, 0Dh; jumptable 00000000000058F8 case 13", "mov     eax, 72h ; 'r'", "jmp     short c_and_shell_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.0031043698026620293, ["mov     ebp, 0Ah; jumptable 00000000000058F8 case 10", "mov     eax, 6Eh ; 'n'", "jmp     short c_and_shell_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 10, -1, 0.0017825311942959003, ["mov     ebp, 5Ch ; '\\'", "mov     eax, 5Ch ; '\\'", "jmp     c_and_shell_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 159, 1, 1, 12, 1, 2, 11, -1, 0.10873440285204991, ["mov     rax, [rsp+0C8h+i]", "mov     rdx, [rsp+0C8h+argsize]", "mov     rcx, [rsp+0C8h+p]; p", "mov     rdi, [rsp+0C8h+arg]; pwc", "lea     r13, [rax+m]", "lea     rbp, [arg_0+r13]", "sub     rdx, r13; n", "mov     rsi, rbp; s", "call    _mbrtowc", "test    rax, rax", "mov     r15, rax", "jz      loc_6110"], ["mov~rax,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rdi,[rsp+0]", "lea~r13,<TAG>", "lea~rbp,<TAG>", "sub~rdx,r13", "mov~rsi,rbp", "call~FOO", "test~rax,rax", "mov~r15,rax", "jz~FOO"]], [1, 0, 159, 1, 2, 10, 2, 3, 15, -1, 0.030073026277959866, ["mov     edi, [rsp+0C8h+w]; wc", "call    _iswprint", "mov     rdi, [rsp+0C8h+p]; ps", "test    eax, eax", "mov     eax, 0", "cmovz   r12d, eax", "add     m, bytes", "call    _mbsinit", "test    eax, eax", "jz      loc_604D"], ["mov~edi,[rsp+0]", "call~FOO", "mov~rdi,[rsp+0]", "test~eax,eax", "mov~eax,0", "cmovz~r12d,eax", "add~m,bytes", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 168, 0, 1, 9, 1, 2, 3, -1, 0.010120177103099304, ["lea     rsi, off_B5FC; msgid", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, rax", "mov     [rsp+0C8h+quote_string], rax", "lea     rax, off_B5FC", "cmp     rsi, rax", "jnz     short loc_5D66"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,rax", "mov~[rsp+0],rax", "lea~rax,<TAG>", "cmp~rsi,rax", "jnz~FOO"]], [0, 0, 167, 0, 0, 4, 1, 0, 4, -1, 0.0, ["lea     rax, asc_AE37; \"\\\"\"", "test    bl, bl", "cmovz   rax, rsi", "mov     [rsp+0C8h+quote_string], rax"], ["lea~rax,<TAG>", "test~bl,bl", "cmovz~rax,rsi", "mov~[rsp+0],rax"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.0010062676096831695, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_5B8D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 13, -1, 0.0706112356966247, ["cmp     bytes, 0FFFFFFFFFFFFFFFEh", "jz      loc_6221"], ["cmp~bytes,0", "jz~FOO"]], [0, 0, 159, 1, 0, 5, 0, 1, 12, -1, 0.14300500258754528, ["mov     rdx, rax", "movzx   esi, [rsp+0C8h+elide_outer_quotes]", "mov     rcx, [rsp+0C8h+buffer]", "add     rdx, r15", "jmp     short loc_5C9A"], ["mov~rdx,rax", "movzx~esi,[rsp+0]", "mov~rcx,<TAG>", "add~rdx,r15", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 13, -1, 0.0943879017882813, ["cmp     m, 1", "ja      loc_5C73"], ["cmp~m,0", "ja~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 10, -1, 0.04659710413979862, ["test    r11b, r11b", "jnz     loc_5B38"], ["test~r11b,r11b", "jnz~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.0034195072620119985, ["mov     ebp, 7; jumptable 00000000000058F8 case 7", "mov     eax, 61h ; 'a'", "jmp     c_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.0034195072620119985, ["mov     ebp, 0Ch; jumptable 00000000000058F8 case 12", "mov     eax, 66h ; 'f'", "jmp     c_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.0034195072620119985, ["mov     ebp, 0Bh; jumptable 00000000000058F8 case 11", "mov     eax, 76h ; 'v'", "jmp     c_escape"], ["mov~ebp,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 12, -1, 0.0, ["mov     [rcx+len], dl"], ["mov~<TAG>,dl"]], [0, 0, 159, 0, 0, 2, 0, 0, 15, -1, 0.012017710309930424, ["cmp     rbx, r8", "jnb     short loc_5C91"], ["cmp~rbx,r8", "jnb~FOO"]], [1, 0, 159, 1, 0, 3, 0, 0, 14, -1, 0.15122764648381348, ["add     i_0, 1", "cmp     r15, ilim", "jb      short loc_5C88"], ["add~i_0,0", "cmp~r15,ilim", "jb~FOO"]], [0, 0, 159, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     [rcx+rbx], bpl"], ["mov~<TAG>,bpl"]], [0, 0, 159, 0, 0, 2, 1, 1, 9, -1, 0.17992671816201233, ["test    r11b, r11b; jumptable 00000000000058F8 cases 37,43-58,65-90,93,95,97-122", "jz      loc_5A8D"], ["test~r11b,r11b", "jz~FOO"]], [2, 0, 159, 0, 0, 4, 1, 1, 9, -1, 0.011019223590381077, ["test    r11b, r11b; jumptable 00000000000058F8 case 8", "mov     ebp, 8", "mov     eax, 62h ; 'b'", "jz      loc_5A8D"], ["test~r11b,r11b", "mov~ebp,0", "mov~eax,0", "jz~FOO"]], [1, 0, 159, 1, 0, 2, 0, 0, 16, -1, 0.011442700247254328, ["movzx   ebp, byte ptr [arg_0+r15]", "add     rbx, 1"], ["movzx~ebp,<TAG>", "add~rbx,0"]], [0, 0, 159, 0, 0, 1, 0, 1, 11, -1, 0.001466275659824047, ["jmp     loc_59C1"], ["jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 14, -1, 0.03780691162095337, ["cmp     [rsp+0C8h+quoting_style], 2", "jnz     short loc_60E7"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 13, -1, 0.15870277729860274, ["test    r12b, r12b", "jz      short loc_5CE8"], ["test~r12b,r12b", "jz~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 14, -1, 0.03774941061468576, ["test    sil, sil", "jnz     loc_5B8D"], ["test~sil,sil", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 15, -1, 0.028491748605600598, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      short loc_60E7"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 15, -1, 0.03257432005060089, ["cmp     rbx, r8", "jnb     short loc_5CB1"], ["cmp~rbx,r8", "jnb~FOO"]], [1, 0, 159, 0, 0, 1, 0, 0, 16, -1, 0.0, ["mov     byte ptr [rcx+rbx], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 0, 159, 0, 1, 14, 1, 2, 9, -1, 0.020515537593336457, ["mov     rsi, [rsp+0C8h+quote_string]; s2", "mov     rdx, r10; n", "mov     rdi, r14; s1", "mov     [rsp+0C8h+arg], arg_0", "mov     [rsp+0C8h+i], r8", "mov     byte ptr [rsp+0C8h+argsize], r11b", "mov     [rsp+0C8h+p], r10", "call    _memcmp", "test    eax, eax", "mov     r10, [rsp+0C8h+p]", "movzx   r11d, byte ptr [rsp+0C8h+argsize]", "mov     r8, [rsp+0C8h+i]", "mov     r9, [rsp+0C8h+arg]", "jnz     short loc_58D8"], ["mov~rsi,[rsp+0]", "mov~rdx,r10", "mov~rdi,r14", "mov~[rsp+0],arg_0", "mov~[rsp+0],r8", "mov~[yte ptr [rsp+0],r11b", "mov~[rsp+0],r10", "call~FOO", "test~eax,eax", "mov~r10,[rsp+0]", "movzx~r11d,[yte ptr [rsp+0]", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]", "jnz~FOO"]], [0, 0, 159, 0, 0, 3, 0, 0, 16, -1, 0.03199930998792479, ["lea     rax, [rbx+1]", "cmp     r8, len", "jbe     short loc_5CC6"], ["lea~rax,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.01507963889368064, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_5B8D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 159, 0, 0, 4, 0, 1, 18, -1, 0.019320338105916855, ["movzx   edi, byte ptr [rax]", "lea     ecx, [rdi-5Bh]", "cmp     cl, 21h ; '!'", "ja      short loc_60DE"], ["movzx~edi,<TAG>", "lea~ecx,[rdi-5Bh]+0]", "cmp~cl,0", "ja~FOO"]], [1, 0, 159, 1, 0, 3, 0, 1, 19, -1, 0.013023977919613594, ["add     rax, 1", "cmp     r8, rax", "jnz     short loc_60B8"], ["add~rax,0", "cmp~r8,rax", "jnz~FOO"]], [2, 0, 159, 1, 0, 4, 0, 0, 17, -1, 0.0, ["mov     eax, ebp", "shr     al, 6", "add     eax, 30h ; '0'", "mov     [rcx+rbx+1], al"], ["mov~eax,ebp", "shr~al,0", "add~eax,0", "mov~[rcx+0],al"]], [0, 0, 159, 0, 0, 2, 0, 0, 11, -1, 0.01388649301362774, ["cmp     rbx, r8", "jnb     short loc_58CF"], ["cmp~rbx,r8", "jnb~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 10, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 9, -1, 0.010580185153240182, ["mov     rsi, [rsp+0C8h+var_40]", "xor     rsi, fs:28h", "mov     rax, rbx", "jnz     loc_62C7"], ["mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "mov~rax,rbx", "jnz~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 10, -1, 0.04326471546585398, ["cmp     [rsp+0C8h+elide_outer_quotes], 0; jumptable 0000000000005EB8 case 0", "mov     rdx, rbx", "jnz     loc_5B8D"], ["cmp~[rsp+0],0", "mov~rdx,rbx", "jnz~FOO"]], [2, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.03817587641117052, ["cmp     [rsp+0C8h+quoting_style], 2; jumptable 00000000000058F8 case 39", "mov     ebp, 27h ; '''", "jnz     loc_59B8; jumptable 00000000000058F8 cases 37,43-58,65-90,93,95,97-122"], ["cmp~[rsp+0],0", "mov~ebp,0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 12, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 5Ch ; '\\'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort; jumptable 0000000000005808 default case"], ["call~FOO"]], [0, 0, 159, 0, 0, 3, 0, 0, 17, -1, 0.03142429992524869, ["lea     rax, [rbx+2]", "cmp     r8, len", "jbe     short loc_5CDE"], ["lea~rax,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 11, -1, 0.041831982059686044, ["cmp     r8, rbx", "jbe     short loc_5EDB"], ["cmp~r8,rbx", "jbe~FOO"]], [1, 0, 159, 1, 0, 2, 0, 0, 12, -1, 0.013311482950951642, ["add     rbx, 1", "nop     dword ptr [rax+rax+00h]"], ["add~rbx,0", "nop~[word ptr [rax+0]"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.03371954842543077, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_5B8D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 12, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 5Ch ; '\\'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [3, 0, 159, 1, 0, 5, 1, 0, 18, -1, 0.0, ["mov     eax, ebp", "shr     al, 3", "and     eax, 7", "add     eax, 30h ; '0'", "mov     [rcx+rbx+2], al"], ["mov~eax,ebp", "shr~al,0", "and~eax,0", "add~eax,0", "mov~[rcx+0],al"]], [0, 0, 159, 0, 0, 2, 0, 0, 11, -1, 0.03257432005060089, ["cmp     r8, rbx", "jbe     short loc_5AE8"], ["cmp~r8,rbx", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 12, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 27h ; '''"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [3, 0, 159, 2, 0, 3, 1, 0, 18, -1, 0.030849289862572595, ["and     ebp, 7", "add     rbx, 3", "add     ebp, 30h ; '0'"], ["and~ebp,0", "add~rbx,0", "add~ebp,0"]], [2, 0, 159, 1, 0, 5, 0, 0, 12, -1, 0.04125697199700995, ["lea     rax, [i_0+1]", "add     rbx, 1", "mov     ebp, 30h ; '0'", "cmp     rax, argsize_0", "jnb     loc_59C1"], ["lea~rax,[i_0+0]", "add~rbx,0", "mov~ebp,0", "cmp~rax,argsize_0", "jnb~FOO"]], [0, 0, 159, 0, 0, 3, 0, 0, 12, -1, 0.03199930998792479, ["lea     rax, [rbx+1]", "cmp     r8, len", "jbe     short loc_5AFA"], ["lea~rax,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 13, -1, 0.0, ["mov     len, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx+1], 5Ch ; '\\'"], ["mov~len,<TAG>", "mov~[yte ptr [rax+0],0"]], [1, 0, 10, 0, 0, 2, 0, 1, 8, -1, 0.024725432695072165, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     short loc_61A4"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 11, 0, 0, 3, 1, 1, 7, -1, 0.041185095739175434, ["mov     rax, [rsp+0C8h+quote_string]", "test    rax, rax", "jz      short loc_61A4"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [2, 0, 159, 1, 0, 4, 0, 1, 13, -1, 0.023719165085388995, ["movzx   eax, byte ptr [arg_0+i_0+1]", "sub     eax, 30h ; '0'", "cmp     al, 9", "ja      loc_59C1"], ["movzx~eax,[yte ptr [arg_0+0]", "sub~eax,0", "cmp~al,0", "ja~FOO"]], [0, 0, 159, 0, 0, 3, 0, 0, 13, -1, 0.03142429992524869, ["lea     rax, [rbx+2]", "cmp     r8, len", "jbe     short loc_5B0C"], ["lea~rax,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 14, -1, 0.019032833074578807, ["cmp     r8, len", "jbe     short loc_5F0F"], ["cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 9, -1, 0.08334291683437794, ["mov     eax, [rsp+0C8h+quoting_style]; jumptable 00000000000058F8 case 63", "cmp     eax, 2", "jz      loc_5F90"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 15, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+len], 30h ; '0'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]], [1, 0, 159, 0, 0, 4, 0, 0, 12, -1, 0.06225442278573208, ["lea     rax, [i_0+2]", "mov     ebp, 3Fh ; '?'", "cmp     rax, argsize_0", "jnb     loc_59B8; jumptable 00000000000058F8 cases 37,43-58,65-90,93,95,97-122"], ["lea~rax,[i_0+0]", "mov~ebp,0", "cmp~rax,argsize_0", "jnb~FOO"]], [1, 0, 159, 0, 0, 2, 1, 1, 11, -1, 0.06460238054165948, ["test    byte ptr [rsp+0C8h+flags], 4", "jz      loc_5F9B"], ["test~[yte ptr [rsp+0],0", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.07325628198493474, ["cmp     eax, 3", "jnz     loc_5F9B"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 164, 0, 0, 2, 0, 0, 6, -1, 0.0006900120752113162, ["mov     rdx, [rsp+0C8h+buffer]", "nop     dword ptr [rax+rax+00000000h]"], ["mov~rdx,<TAG>", "nop~[word ptr [rax+0]"]], [2, 0, 159, 1, 0, 3, 0, 1, 14, -1, 0.030849289862572595, ["add     rbx, 3", "mov     ebp, 27h ; '''", "jmp     loc_59B8; jumptable 00000000000058F8 cases 37,43-58,65-90,93,95,97-122"], ["add~rbx,0", "mov~ebp,0", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 14, -1, 0.0, ["mov     len, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx+2], 27h ; '''"], ["mov~len,<TAG>", "mov~[yte ptr [rax+0],0"]], [0, 0, 159, 0, 0, 3, 0, 0, 15, -1, 0.01845782301190271, ["lea     rax, [rdx+2]", "cmp     r8, len", "jbe     short loc_5F21"], ["lea~rax,[rdx+0]", "cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 16, -1, 0.0, ["mov     len, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rdx+2], 30h ; '0'"], ["mov~len,<TAG>", "mov~[yte ptr [rax+0],0"]], [2, 0, 170, 0, 1, 10, 1, 2, 2, -1, 0.0005750100626760969, ["lea     rsi, asc_AE39; jumptable 0000000000005808 cases 6,7", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "cmp     [rsp+0C8h+quoting_style], 7", "mov     quoting_style_0, rax", "lea     rax, asc_AE39; \"`\"", "setz    bl", "cmp     r15, rax", "jnz     short loc_5D2D"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "cmp~[rsp+0],0", "mov~quoting_style_0,rax", "lea~rax,<TAG>", "setz~bl", "cmp~r15,rax", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.00083695909122854, ["mov     ebp, 61h ; 'a'; jumptable 0000000000005EB8 case 7", "jmp     store_escape"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 7, -1, 0.0030906790868840206, ["test    rbx, rbx", "jz      force_outer_quoting_style"], ["test~rbx,rbx", "jz~FOO"]], [0, 0, 169, 0, 0, 3, 1, 0, 3, -1, 0.0, ["lea     rax, asc_AE37; \"\\\"\"", "test    bl, bl", "cmovnz  r15, rax"], ["lea~rax,<TAG>", "test~bl,bl", "cmovnz~r15,rax"]], [1, 0, 159, 0, 0, 3, 0, 1, 16, -1, 0.017882812949226612, ["lea     rbx, [rdx+3]", "mov     ebp, 30h ; '0'", "jmp     loc_59C1"], ["lea~rbx,[rdx+0]", "mov~ebp,0", "jmp~FOO"]], [0, 0, 159, 0, 0, 1, 0, 0, 10, -1, 0.0022455283840483063, ["nop     dword ptr [esc+esc+00h]"], ["nop~[word ptr [esc+0]"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.00083695909122854, ["mov     ebp, 66h ; 'f'; jumptable 0000000000005EB8 case 12", "jmp     store_escape"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 13, -1, 0.055867019339505115, ["cmp     byte ptr [arg_0+i_0+1], 3Fh ; '?'", "jnz     short loc_59B8; jumptable 00000000000058F8 cases 37,43-58,65-90,93,95,97-122"], ["cmp~[yte ptr [arg_0+0],0", "jnz~FOO"]], [0, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.010489461343351282, ["mov     ebp, eax", "jmp     store_escape"], ["mov~ebp,eax", "jmp~FOO"]], [1, 0, 159, 0, 0, 11, 2, 0, 12, -1, 0.05534471853257432, ["movzx   r11d, [rsp+0C8h+var_6A]", "movzx   ebp, [rsp+0C8h+c]", "mov     rax, m", "mov     bytes, [rsp+0C8h+i]", "mov     r10, [rsp+0C8h+var_78]", "xor     r12d, 1", "mov     m, [rsp+0C8h+var_68]", "mov     r8, [rsp+0C8h+var_80]", "mov     r9, arg_0", "mov     r13, [rsp+0C8h+argsize]", "and     r12d, r11d"], ["movzx~r11d,[rsp+0]", "movzx~ebp,[rsp+0]", "mov~rax,m", "mov~bytes,[rsp+0]", "mov~r10,[rsp+0]", "xor~r12d,0", "mov~m,[rsp+0]", "mov~r8,[rsp+0]", "mov~r9,arg_0", "mov~r13,[rsp+0]", "and~r12d,r11d"]], [0, 0, 159, 0, 0, 2, 1, 1, 11, -1, 0.005754892377283269, ["test    r11b, r11b; jumptable 0000000000005EB8 case 92", "jz      short loc_5FA8"], ["test~r11b,r11b", "jz~FOO"]], [1, 0, 159, 0, 0, 3, 0, 1, 14, -1, 0.051554443869434384, ["movzx   ebp, byte ptr [arg_0+rax]", "cmp     bpl, 3Eh ; '>'", "ja      loc_5F9B"], ["movzx~ebp,<TAG>", "cmp~bpl,0", "ja~FOO"]], [0, 0, 159, 0, 0, 2, 1, 1, 11, -1, 0.012779598642976252, ["test    r10, r10", "jnz     loc_5F4C"], ["test~r10,r10", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 12, -1, 0.004834876277001514, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      short loc_5FA8"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 159, 0, 0, 3, 0, 0, 15, -1, 0.04712686638682844, ["mov     rdi, 7000A38200000000h", "bt      rdi, rbp", "jnb     loc_5F9B"], ["mov~rdi,0", "bt~rdi,rbp", "jnb~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 9, -1, 0.019895348168592952, ["movzx   edx, byte ptr [rax]", "test    dl, dl", "jz      short loc_61A4"], ["movzx~edx,<TAG>", "test~dl,dl", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 16, -1, 0.0427280394073563, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_5B8D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.00083695909122854, ["mov     ebp, 76h ; 'v'; jumptable 0000000000005EB8 case 11", "jmp     store_escape"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 159, 0, 0, 2, 0, 0, 17, -1, 0.04174573055028463, ["cmp     r8, rbx", "jbe     short loc_5976"], ["cmp~r8,rbx", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 18, -1, 0.0, ["mov     rdi, [rsp+0C8h+buffer]", "mov     byte ptr [rdi+rbx], 3Fh ; '?'"], ["mov~rdi,<TAG>", "mov~<TAG>,0"]], [0, 0, 159, 0, 0, 2, 1, 1, 9, -1, 0.018788453797941466, ["test    r11b, r11b; jumptable 00000000000058F8 case 92", "jz      loc_5FA8"], ["test~r11b,r11b", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.00083695909122854, ["mov     ebp, 62h ; 'b'; jumptable 0000000000005EB8 case 8", "jmp     store_escape"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 159, 0, 0, 3, 0, 0, 18, -1, 0.04117072048760854, ["lea     rdx, [rbx+1]", "cmp     r8, len", "jbe     short loc_5988"], ["lea~rdx,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.013469610718187568, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jz      loc_5FA8"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 1, 10, -1, 0.004969045291625938, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_5B8D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 19, -1, 0.0, ["mov     rdi, [rsp+0C8h+buffer]", "mov     byte ptr [rdi+rbx+1], 22h ; '\"'"], ["mov~rdi,<TAG>", "mov~[yte ptr [rdi+0],0"]], [0, 0, 159, 0, 0, 3, 0, 0, 19, -1, 0.04059571042493244, ["lea     len, [rbx+2]", "cmp     r8, len", "jbe     short loc_599A"], ["lea~len,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [0, 0, 4, 0, 0, 3, 0, 0, 11, -1, 0.013857742510493935, ["mov     r12, argsize_0", "mov     r14, r8", "mov     argsize_0, arg_0"], ["mov~r12,argsize_0", "mov~r14,r8", "mov~argsize_0,arg_0"]], [1, 0, 159, 0, 0, 2, 0, 1, 12, -1, 0.0468729036091465, ["cmp     [rsp+0C8h+elide_outer_quotes], 0", "jnz     loc_5B8D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 20, -1, 0.0, ["mov     rdi, [rsp+0C8h+buffer]", "mov     byte ptr [rdi+rbx+2], 22h ; '\"'"], ["mov~rdi,<TAG>", "mov~[yte ptr [rdi+0],0"]], [1, 0, 159, 0, 0, 2, 0, 1, 11, -1, 0.022502060452724588, ["mov     ebp, 3Fh ; '?'", "jmp     loc_59B8; jumptable 00000000000058F8 cases 37,43-58,65-90,93,95,97-122"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 159, 0, 0, 3, 0, 0, 20, -1, 0.04002070036225634, ["lea     len, [rbx+3]", "cmp     r8, len", "jbe     short loc_59AC"], ["lea~len,[rbx+0]", "cmp~r8,len", "jbe~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 21, -1, 0.0, ["mov     rdi, [rsp+0C8h+buffer]", "mov     byte ptr [rdi+rbx+3], 3Fh ; '?'"], ["mov~rdi,<TAG>", "mov~[yte ptr [rdi+0],0"]], [1, 0, 159, 1, 0, 3, 0, 0, 21, -1, 0.03944569029958024, ["add     rbx, 4", "mov     r15, i_0", "nop     dword ptr [rax+rax+00h]"], ["add~rbx,0", "mov~r15,i_0", "nop~[word ptr [rax+0]"]], [1, 0, 3, 0, 0, 3, 0, 1, 9, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 0", "jmp     loc_5BC2"], ["mov~rax,<TAG>", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 8, -1, 0.007575757575757576, ["cmp     rbx, r14", "jnb     loc_5BC2"], ["cmp~rbx,r14", "jnb~FOO"]], [3, 0, 3, 1, 1, 13, 1, 1, 8, -1, 0.013153355183715715, ["sub     rsp, 8", "mov     rdx, arg_0; arg", "mov     rcx, argsize_0; argsize", "push    0; quote_these_too", "mov     r9d, [rsp+0D8h+flags]", "mov     rsi, r14; buffersize", "mov     r8d, [rsp+0D8h+quoting_style]; quoting_style", "mov     rdi, [rsp+0D8h+buffer]; buffer", "and     r9d, 0FFFFFFFDh; flags", "call    quotearg_buffer_restyled", "mov     rbx, len", "pop     len", "pop     rdx"], ["sub~rsp,0", "mov~rdx,arg_0", "mov~rcx,argsize_0", "push~0", "mov~r9d,[rsp+0]", "mov~rsi,r14", "mov~r8d,[rsp+0]", "mov~rdi,[rsp+0]", "and~r9d,0", "call~FOO", "mov~rbx,len", "pop~len", "pop~rdx"]], [1, 0, 0, 1, 0, 8, 0, 0, 10, -1, 0.0, ["add     rsp, 98h", "pop     rbx", "pop     rbp", "pop     argsize_0", "pop     arg_0", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~argsize_0", "pop~arg_0", "pop~r14", "pop~r15", "retn"]], [0, 0, 159, 0, 0, 2, 0, 0, 13, -1, 0.03956069231211547, ["cmp     rbx, r8", "jnb     short loc_59FF"], ["cmp~rbx,r8", "jnb~FOO"]], [1, 0, 159, 0, 0, 2, 0, 0, 14, -1, 0.0, ["mov     rax, [rsp+0C8h+buffer]", "mov     byte ptr [rax+rbx], 5Ch ; '\\'"], ["mov~rax,<TAG>", "mov~<TAG>,0"]]], "func_feature": [13, 67, 129, 7, 188, 323, 6, 671, 0.04616, 7, 32], "succs": [[51, 7], [0, 117], [48, 33], [49, 2], [16], [4, 6], [176, 4], [4, 101], [4], [89], [9, 68], [9], [9, 13], [9, 12], [32, 3, 38, 44, 45, 47, 148], [120, 14], [21, 29], [16], [16], [56], [56, 19], [29], [20, 70], [24, 22], [1, 34, 99, 118, 168, 138, 75, 98, 79, 80, 53, 22, 57, 91, 92, 93], [26, 22], [98, 165, 169, 138, 75, 34, 79, 80, 53, 149, 118, 57, 22, 154, 158, 117], [184], [112, 27], [64], [89], [30, 87], [42], [42], [40, 39], [43, 36], [35, 37], [35], [41, 50], [40], [98, 53], [52, 46], [64], [42], [42], [42], [42], [42], [42], [42], [42], [64], [46], [57, 98], [111], [83, 54], [82], [65, 98], [59, 94], [58, 183], [58], [43, 143], [43, 61], [66], [66, 63], [98, 67], [69, 71], [175], [11, 13], [150, 134], [72], [74, 23], [98, 76], [72], [77, 23], [78], [88], [25, 108], [90, 86], [78], [78], [78], [157, 31], [82, 157], [85, 62], [62], [90, 175], [10, 102], [103], [88, 73], [156, 7], [90], [90], [90], [59], [97, 100], [17, 95], [100], [5, 7], [153, 7], [103], [5], [105, 83], [104, 96], [106, 175], [83, 55], [107, 109], [109], [110, 23], [113, 121], [114, 175], [112, 28], [83, 111], [121], [123, 119], [], [185, 115], [122, 175], [98, 124], [123], [], [129, 126], [130, 125], [23], [175, 127], [130], [129], [128, 131], [131], [96], [5, 135], [136, 132], [136], [163, 183], [133, 183], [137, 5], [144, 145], [146, 139], [172, 142], [146], [98, 155], [178, 140], [178, 141], [36], [98], [144], [152, 147], [152], [84, 151], [176], [184, 134], [84], [5], [156], [176], [98, 159], [176], [89], [81, 161], [162, 178], [18, 175], [81, 18], [178, 164], [60, 183], [166, 175], [176], [170, 167], [170], [81, 171], [176], [173, 174], [160, 81], [178, 175], [174], [177, 179], [184], [186, 175], [179], [98], [180, 181], [181], [98], [116], [116, 182], [116], [], [8, 187], [8]], "fname": "quotearg_buffer_restyled", "n_num": 188}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 9, 0, 0, 2, 0, 1, 0, 0, 0.08181818181818182, ["cmp     cs:nslots, r15d", "ja      short loc_637F"], ["cmp~<TAG>,r15d", "ja~FOO"]], [1, 0, 11, 1, 1, 18, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "movsxd  r15, edi", "push    r13", "push    r12", "mov     r14, argsize", "push    rbp", "push    rbx", "mov     rbp, options", "sub     rsp, 28h", "mov     [rsp+58h+arg], arg_0", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "test    r15d, r15d", "mov     rbx, cs:slotvec_0", "mov     [rsp+58h+e], eax", "js      loc_6473"], ["push~r15", "push~r14", "movsxd~r15,edi", "push~r13", "push~r12", "mov~r14,argsize", "push~rbp", "push~rbx", "mov~rbp,options", "sub~rsp,0", "mov~[rsp+0],arg_0", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "test~r15d,r15d", "mov~rbx,<TAG>", "mov~[rsp+0],eax", "js~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 0, 1, 0, 11, 0, 0, 3, -1, 0.0, ["mov     eax, [rsp+58h+e]", "mov     [r13+0], eax", "add     rsp, 28h", "mov     rax, val", "pop     rbx", "pop     options", "pop     val", "pop     r13", "pop     argsize", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~[r13+0],eax", "add~rsp,0", "mov~rax,val", "pop~rbx", "pop~options", "pop~val", "pop~r13", "pop~argsize", "pop~r15", "retn"]], [3, 0, 4, 3, 1, 23, 1, 2, 2, -1, 0.21818181818181817, ["mov     eax, [options+4]", "shl     n0, 4", "sub     rsp, 8", "add     sv, r15", "lea     r15, [options+8]", "mov     r8d, [options+0]; quoting_style", "mov     r11, [rbx]", "mov     r12, [rbx+8]", "mov     rcx, argsize; argsize", "or      eax, 1", "mov     [rsp+60h+flags], eax", "push    r15; quote_these_too", "mov     r9d, eax; flags", "mov     rdx, [rsp+68h+arg]; arg", "mov     rsi, size_0; buffersize", "mov     rdi, val; buffer", "mov     [rsp+68h+size], size_0", "call    quotearg_buffer_restyled", "pop     rcx", "pop     rsi", "mov     r11, [rsp+58h+size]", "cmp     r11, qsize", "ja      short loc_642B"], ["mov~eax,[options+0]", "shl~n0,0", "sub~rsp,0", "add~sv,r15", "lea~r15,[options+0]", "mov~r8d,[options+0]", "mov~r11,<TAG>", "mov~r12,[rbx+0]", "mov~rcx,argsize", "or~eax,0", "mov~[rsp+0],eax", "push~r15", "mov~r9d,eax", "mov~rdx,[rsp+0]", "mov~rsi,size_0", "mov~rdi,val", "mov~[rsp+0],size_0", "call~FOO", "pop~rcx", "pop~rsi", "mov~r11,[rsp+0]", "cmp~r11,qsize", "ja~FOO"]], [1, 0, 1, 1, 2, 16, 0, 2, 4, -1, 0.01818181818181818, ["mov     rdi, rsi; n", "mov     [rsp+58h+size], rsi", "call    xmalloc", "sub     rsp, 8", "mov     [rbx+8], rax", "mov     r8d, [options+0]; quoting_style", "push    r15; quote_these_too", "mov     r9d, [rsp+68h+flags]; flags", "mov     rcx, argsize; argsize", "mov     rdx, [rsp+68h+arg]; arg", "mov     rsi, [rsp+68h+size]; buffersize", "mov     rdi, rax; buffer", "mov     val, rax", "call    quotearg_buffer_restyled", "pop     rax", "pop     rdx"], ["mov~rdi,rsi", "mov~[rsp+0],rsi", "call~FOO", "sub~rsp,0", "mov~[rbx+0],rax", "mov~r8d,[options+0]", "push~r15", "mov~r9d,[rsp+0]", "mov~rcx,argsize", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,rax", "mov~val,rax", "call~FOO", "pop~rax", "pop~rdx"]], [2, 0, 5, 4, 1, 8, 1, 1, 4, -1, 0.13636363636363635, ["mov     edi, cs:nslots", "xor     esi, esi; c", "sub     rdx, rdi", "shl     rdi, 4", "shl     rdx, 4; n", "add     rdi, rbx; s", "call    _memset", "mov     cs:nslots, r12d"], ["mov~edi,<TAG>", "xor~esi,esi", "sub~rdx,rdi", "shl~rdi,0", "shl~rdx,0", "add~rdi,rbx", "call~FOO", "mov~<TAG>,r12d"]], [0, 0, 2, 0, 1, 4, 0, 1, 4, -1, 0.0, ["mov     rdi, val; ptr", "mov     [rsp+58h+size], size_0", "call    _free", "mov     rsi, [rsp+58h+size]"], ["mov~rdi,val", "mov~[rsp+0],size_0", "call~FOO", "mov~rsi,[rsp+0]"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.12727272727272726, ["lea     rsi, [qsize+1]", "lea     qsize, slot0", "cmp     val, rax", "mov     [rbx], size_0", "jz      short loc_63F1"], ["lea~rsi,[qsize+0]", "lea~qsize,<TAG>", "cmp~val,rax", "mov~<TAG>,size_0", "jz~FOO"]], [0, 0, 6, 0, 1, 9, 1, 2, 3, -1, 0.03636363636363636, ["xor     edi, edi; p", "mov     [rsp+58h+size], n1", "call    xrealloc", "movdqa  xmm0, xmmword ptr cs:slotvec0.size", "mov     sv, rax", "mov     cs:slotvec_0, sv", "mov     rdx, [rsp+58h+size]", "movups  xmmword ptr [sv], xmm0", "jmp     loc_635D"], ["xor~edi,edi", "mov~[rsp+0],n1", "call~FOO", "movdqa~xmm0,<TAG>", "mov~sv,rax", "mov~<TAG>,sv", "mov~rdx,[rsp+0]", "movups~<TAG>,xmm0", "jmp~FOO"]], [1, 0, 8, 1, 0, 7, 0, 1, 2, -1, 0.05454545454545454, ["lea     edx, [n0+1]", "lea     e_0, slotvec0", "mov     rsi, rdx", "mov     r12, rdx", "shl     rsi, 4; n", "cmp     sv, rax", "jz      loc_6448"], ["lea~edx,[n0+0]", "lea~e_0,<TAG>", "mov~rsi,rdx", "mov~r12,rdx", "shl~rsi,0", "cmp~sv,rax", "jz~FOO"]], [0, 0, 6, 0, 1, 6, 0, 1, 3, -1, 0.03636363636363636, ["mov     rdi, sv; p", "mov     [rsp+58h+size], n1", "call    xrealloc", "mov     rdx, [rsp+58h+size]", "mov     sv, rax", "mov     cs:slotvec_0, sv"], ["mov~rdi,sv", "mov~[rsp+0],n1", "call~FOO", "mov~rdx,[rsp+0]", "mov~sv,rax", "mov~<TAG>,sv"]]], "func_feature": [9, 4, 15, 0, 12, 15, 7, 110, 0.05909, 4, 11], "succs": [[10, 4], [0, 2], [], [], [8, 3], [3], [4], [5], [5, 7], [6], [9, 11], [6]], "fname": "quotearg_n_options", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[1, 0, 0, 0, 2, 18, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, o", "call    ___errno_location", "mov     r12d, [p]", "mov     rbp, p", "lea     p, default_quoting_options", "test    o, o", "mov     esi, 28h ; '('; s", "cmovz   o, p", "mov     rdi, rbx; p", "call    xmemdup", "mov     [rbp+0], r12d", "pop     rbx", "pop     rbp", "pop     e", "retn"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,o", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,p", "lea~p,<TAG>", "test~o,o", "mov~esi,0", "cmovz~o,p", "mov~rdi,rbx", "call~FOO", "mov~[rbp+0],r12d", "pop~rbx", "pop~rbp", "pop~e", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 18, 0.0, 1, 0], "succs": [[]], "fname": "clone_quoting_options", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     eax, [rdi]", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~eax,<TAG>", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "get_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    o, o", "cmovz   o, rax", "mov     [rdi], esi", "retn"], ["lea~rax,<TAG>", "test~o,o", "cmovz~o,rax", "mov~<TAG>,esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[4, 0, 0, 1, 0, 19, 6, 0, 0, 0, 0.0, ["lea     rax, default_quoting_options", "test    p, p", "mov     ecx, esi", "cmovz   p, rax", "mov     eax, esi", "and     ecx, 1Fh", "shr     al, 5", "movzx   eax, al", "lea     p, [p+rax*4+8]", "mov     esi, [p]", "mov     eax, esi", "shr     eax, cl", "xor     edx, eax", "and     eax, 1", "and     edx, 1", "shl     edx, cl", "xor     edx, esi", "mov     [p], edx", "retn"], ["lea~rax,<TAG>", "test~p,p", "mov~ecx,esi", "cmovz~p,rax", "mov~eax,esi", "and~ecx,0", "shr~al,0", "movzx~eax,al", "lea~p,[p+0]", "mov~esi,<TAG>", "mov~eax,esi", "shr~eax,cl", "xor~edx,eax", "and~eax,0", "and~edx,0", "shl~edx,cl", "xor~edx,esi", "mov~<TAG>,edx", "retn"]]], "func_feature": [0, 6, 0, 0, 1, 0, 0, 19, 0.0, 1, 1], "succs": [[]], "fname": "set_char_quoting", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0.0, ["lea     r, default_quoting_options", "test    o, o", "cmovz   o, r", "mov     eax, [o+4]", "mov     [o+4], esi", "retn"], ["lea~r,<TAG>", "test~o,o", "cmovz~o,r", "mov~eax,[o+0]", "mov~[o+0],esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 6, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_flags", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[2, 1, 0, 3, 2, 37, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "lea     r, default_quoting_options", "push    r13", "push    r12", "mov     r13, buffer", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, buffersize", "mov     r15, arg", "sub     rsp, 18h", "test    o, o", "cmovz   rbx, r", "mov     [rsp+48h+argsize], argsize_0", "call    ___errno_location", "mov     r12d, [r]", "mov     rbp, r", "lea     r, [p+8]", "sub     rsp, 8", "mov     r9d, [p+4]; flags", "mov     r8d, [p]; quoting_style", "push    r; quote_these_too", "mov     rcx, [rsp+58h+argsize]; argsize", "mov     rdx, arg; arg", "mov     rsi, buffersize; buffersize", "mov     rdi, buffer; buffer", "call    quotearg_buffer_restyled", "mov     [rbp+0], r12d", "add     rsp, 28h", "pop     p", "pop     rbp", "pop     e", "pop     buffer", "pop     buffersize", "pop     arg", "retn"], ["push~r15", "push~r14", "lea~r,<TAG>", "push~r13", "push~r12", "mov~r13,buffer", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,buffersize", "mov~r15,arg", "sub~rsp,<STR>", "test~o,o", "cmovz~rbx,r", "mov~[rsp+0],argsize_0", "call~FOO", "mov~r12d,<TAG>", "mov~rbp,r", "lea~r,[p+0]", "sub~rsp,0", "mov~r9d,[p+0]", "mov~r8d,<TAG>", "push~r", "mov~rcx,[rsp+0]", "mov~rdx,arg", "mov~rsi,buffersize", "mov~rdi,buffer", "call~FOO", "mov~[rbp+0],r12d", "add~rsp,0", "pop~p", "pop~rbp", "pop~e", "pop~buffer", "pop~buffersize", "pop~arg", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 37, 0.0, 1, 3], "succs": [[]], "fname": "quotearg_buffer", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[2, 0, 2, 2, 4, 54, 7, 5, 0, 0, 0.0, ["push    r15", "push    r14", "lea     rax, default_quoting_options", "push    r13", "push    r12", "mov     r12, size", "push    rbp", "push    rbx", "mov     rbx, o", "mov     r14, arg", "mov     r15, argsize", "sub     rsp, 38h", "test    o, o", "cmovz   rbx, rax", "xor     ebp, ebp", "call    ___errno_location", "test    size, size", "mov     r13, rax", "mov     eax, [rax]", "setz    bpl", "or      ebp, [p+4]", "lea     r10, [p+8]", "sub     rsp, 8", "mov     r8d, [p]; quoting_style", "mov     rcx, argsize; argsize", "mov     [rsp+70h+e], eax", "push    r10; quote_these_too", "mov     rdx, arg; arg", "xor     esi, esi; buffersize", "xor     edi, edi; buffer", "mov     r9d, ebp; flags", "mov     [rsp+78h+var_48], r10", "call    quotearg_buffer_restyled", "lea     rsi, [rax+1]", "mov     [rsp+78h+var_40], rax", "mov     rdi, bufsize_0; n", "mov     [rsp+78h+bufsize], bufsize_0", "call    xmalloc", "mov     r10, [rsp+78h+var_48]", "mov     rsi, [rsp+78h+bufsize]; buffersize", "mov     rdx, arg; arg", "mov     r8d, [p]; quoting_style", "mov     r9d, ebp; flags", "mov     rcx, argsize; argsize", "mov     rdi, rax; buffer", "mov     [rsp+78h+var_58], rax", "mov     [rsp+78h+quote_these_too], r10; quote_these_too", "call    quotearg_buffer_restyled", "mov     eax, [rsp+78h+e]", "test    size, size", "mov     [r13+0], eax", "pop     rax", "pop     rdx", "jz      short loc_668B"], ["push~r15", "push~r14", "lea~rax,<TAG>", "push~r13", "push~r12", "mov~r12,size", "push~rbp", "push~rbx", "mov~rbx,o", "mov~r14,arg", "mov~r15,argsize", "sub~rsp,0", "test~o,o", "cmovz~rbx,rax", "xor~ebp,ebp", "call~FOO", "test~size,size", "mov~r13,rax", "mov~eax,<TAG>", "setz~bpl", "or~ebp,[p+0]", "lea~r10,[p+0]", "sub~rsp,0", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~[rsp+0],eax", "push~r10", "mov~rdx,arg", "xor~esi,esi", "xor~edi,edi", "mov~r9d,ebp", "mov~[rsp+0],r10", "call~FOO", "lea~rsi,[rax+0]", "mov~[rsp+0],rax", "mov~rdi,bufsize_0", "mov~[rsp+0],bufsize_0", "call~FOO", "mov~r10,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdx,arg", "mov~r8d,<TAG>", "mov~r9d,ebp", "mov~rcx,argsize", "mov~rdi,rax", "mov~[rsp+0],rax", "mov~<TAG>,r10", "call~FOO", "mov~eax,[rsp+0]", "test~size,size", "mov~[r13+0],eax", "pop~rax", "pop~rdx", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 0, 0, 0.0, ["mov     rax, [rsp+68h+var_58]", "add     rsp, 38h", "pop     p", "pop     flags", "pop     size", "pop     r13", "pop     arg", "pop     argsize", "retn"], ["mov~rax,[rsp+0]", "add~rsp,0", "pop~p", "pop~flags", "pop~size", "pop~r13", "pop~arg", "pop~argsize", "retn"]], [0, 0, 1, 0, 0, 2, 0, 0, 0, 1, 0.0, ["mov     r11, [rsp+68h+var_40]", "mov     [size], r11"], ["mov~r11,[rsp+0]", "mov~<TAG>,r11"]]], "func_feature": [4, 7, 5, 3, 3, 3, 1, 65, 0.0, 1, 3], "succs": [[1, 2], [], [1]], "fname": "quotearg_alloc_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rcx, o", "xor     edx, edx", "jmp     quotearg_alloc_mem"], ["mov~rcx,o", "xor~edx,edx", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_alloc", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 4, 0, 0, 4, 0, 1, 0, 0, 0.2857142857142857, ["mov     rdi, [sv+8]; ptr", "lea     rbx, slot0", "cmp     rdi, rbx", "jz      short loc_6719"], ["mov~rdi,[sv+0]", "lea~rbx,<TAG>", "cmp~rdi,rbx", "jz~FOO"]], [1, 0, 7, 0, 0, 7, 0, 0, 0, 3, 0.0, ["mov     eax, cs:nslots", "push    r12", "mov     r12, cs:slotvec_0", "push    rbp", "push    rbx", "cmp     eax, 1", "jbe     short loc_66F1"], ["mov~eax,<TAG>", "push~r12", "mov~r12,<TAG>", "push~rbp", "push~rbx", "cmp~eax,0", "jbe~FOO"]], [1, 0, 6, 1, 1, 5, 0, 2, 2, 3, 0.11904761904761904, ["mov     rdi, [rbx]; ptr", "add     rbx, 10h", "call    _free", "cmp     rbx, rbp", "jnz     short loc_66E0"], ["mov~rdi,<TAG>", "add~rbx,0", "call~FOO", "cmp~rbx,rbp", "jnz~FOO"]], [1, 0, 0, 0, 0, 5, 0, 0, 3, 0, 0.0, ["pop     rbx", "mov     cs:nslots, 1", "pop     rbp", "pop     sv", "retn"], ["pop~rbx", "mov~<TAG>,0", "pop~rbp", "pop~sv", "retn"]], [0, 0, 2, 0, 0, 3, 0, 1, 2, 1, 0.23809523809523808, ["lea     rbx, slotvec0", "cmp     sv, rbx", "jz      short loc_6734"], ["lea~rbx,<TAG>", "cmp~sv,rbx", "jz~FOO"]], [0, 0, 1, 0, 1, 3, 0, 1, 3, 1, 0.0, ["mov     rdi, sv; ptr", "call    _free", "mov     cs:slotvec_0, rbx"], ["mov~rdi,sv", "call~FOO", "mov~<TAG>,rbx"]], [1, 0, 3, 0, 1, 3, 0, 1, 2, 2, 0.0, ["call    _free", "mov     cs:slotvec0.size, 100h", "mov     cs:slotvec0.val, rbx"], ["call~FOO", "mov~<TAG>,0", "mov~<TAG>,rbx"]], [2, 0, 6, 2, 0, 5, 0, 0, 1, 4, 0.023809523809523808, ["sub     eax, 2", "lea     rbx, [sv+18h]", "shl     rax, 4", "lea     rbp, [sv+rax+28h]", "nop     word ptr [rax+rax+00000000h]"], ["sub~eax,0", "lea~rbx,[sv+0]", "shl~rax,0", "lea~rbp,[sv+0]", "nop~[ord ptr [rax+0]"]]], "func_feature": [3, 0, 6, 0, 8, 11, 0, 35, 0.08333, 5, 3], "succs": [[4, 6], [0, 7], [0, 2], [], [3, 5], [3], [4], [2]], "fname": "quotearg_free", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rdx,0", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_n", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_n_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options; options", "mov     rsi, arg; arg", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "xor     edi, edi; n", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rsi,arg", "mov~rdx,0", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["lea     rcx, default_quoting_options; options", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "xor     edi, edi; n", "jmp     quotearg_n_options"], ["lea~rcx,<TAG>", "mov~rdx,argsize", "mov~argsize,arg", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 1, 0], "succs": [[], [0]], "fname": "quotearg_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[3, 0, 2, 1, 1, 23, 2, 2, 0, 0, 0.0, ["pxor    xmm0, xmm0", "sub     rsp, 68h", "mov     dword ptr [rsp+68h+s], esi", "mov     dword ptr [rsp+68h+s+4], 0", "mov     rax, arg", "mov     rcx, fs:28h", "mov     [rsp+68h+var_10], rcx", "xor     ecx, ecx", "movups  [rsp+68h+s+8], xmm0", "mov     rcx, rsp; options", "mov     s_0, rax; arg", "movups  [rsp+68h+var_20], xmm0", "movdqa  xmm0, [rsp+68h+s]", "mov     arg, qword ptr [rsp+68h+var_20+8]", "movaps  xmmword ptr [rsp+68h+o.style], xmm0", "movdqa  xmm0, xmmword ptr [rsp+40h]", "mov     qword ptr [rsp+68h+o.quote_these_too+18h], rdx", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "movaps  xmmword ptr [rsp+68h+o.quote_these_too+8], xmm0", "call    quotearg_n_options", "mov     rdx, [rsp+68h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_6837"], ["pxor~xmm0,xmm0", "sub~rsp,0", "mov~[word ptr [rsp+0],esi", "mov~[word ptr [rsp+0],0", "mov~rax,arg", "mov~rcx,<TAG>", "mov~[rsp+0],rcx", "xor~ecx,ecx", "movups~[rsp+0],xmm0", "mov~rcx,rsp", "mov~s_0,rax", "movups~[rsp+0],xmm0", "movdqa~xmm0,[rsp+0]", "mov~arg,[word ptr [rsp+0]", "movaps~<TAG>,xmm0", "movdqa~xmm0,[mmword ptr [rsp+0]", "mov~[word ptr [rsp+0],rdx", "mov~rdx,0", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 68h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 2, 3, 2, 3, 2, 4, 26, 0.0, 1, 2], "succs": [[1, 2], [], []], "fname": "quotearg_n_style", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 68h", "retn"], ["add~rsp,0", "retn"]], [2, 0, 2, 1, 1, 23, 2, 2, 0, 1, 0.0, ["pxor    xmm0, xmm0", "sub     rsp, 68h", "mov     dword ptr [rsp+68h+s], esi", "mov     dword ptr [rsp+68h+s+4], 0", "mov     rax, arg", "mov     arg, argsize; argsize", "mov     s_0, arg; arg", "movups  [rsp+68h+s+8], xmm0", "mov     argsize, fs:28h", "mov     [rsp+68h+var_10], argsize", "xor     ecx, ecx", "movups  [rsp+68h+var_20], xmm0", "movdqa  xmm0, [rsp+68h+s]", "mov     rcx, qword ptr [rsp+68h+var_20+8]", "movaps  xmmword ptr [rsp+68h+o.style], xmm0", "movdqa  xmm0, xmmword ptr [rsp+40h]", "mov     qword ptr [rsp+68h+o.quote_these_too+18h], rcx", "mov     rcx, rsp; options", "movaps  xmmword ptr [rsp+68h+o.quote_these_too+8], xmm0", "call    quotearg_n_options", "mov     rdx, [rsp+68h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_68B3"], ["pxor~xmm0,xmm0", "sub~rsp,0", "mov~[word ptr [rsp+0],esi", "mov~[word ptr [rsp+0],0", "mov~rax,arg", "mov~arg,argsize", "mov~s_0,arg", "movups~[rsp+0],xmm0", "mov~argsize,<TAG>", "mov~[rsp+0],argsize", "xor~ecx,ecx", "movups~[rsp+0],xmm0", "movdqa~xmm0,[rsp+0]", "mov~rcx,[word ptr [rsp+0]", "movaps~<TAG>,xmm0", "movdqa~xmm0,[mmword ptr [rsp+0]", "mov~[word ptr [rsp+0],rcx", "mov~rcx,rsp", "movaps~[mmword ptr [rsp+0],xmm0", "call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 2, 3, 2, 3, 2, 2, 26, 0.0, 1, 2], "succs": [[], [0, 2], []], "fname": "quotearg_n_style_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 1, 1, 0, 0, 0.0, ["mov     rdx, arg; arg", "mov     esi, edi; s", "xor     edi, edi; n", "jmp     quotearg_n_style"], ["mov~rdx,arg", "mov~esi,edi", "xor~edi,edi", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "quotearg_style", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 1, 0, 0, 5, 1, 1, 0, 0, 0.0, ["mov     rcx, argsize; argsize", "mov     argsize, arg; arg", "mov     esi, edi; s", "xor     edi, edi; n", "jmp     quotearg_n_style_mem"], ["mov~rcx,argsize", "mov~argsize,arg", "mov~esi,edi", "xor~edi,edi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 5, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_style_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 38h", "retn"], ["add~rsp,0", "retn"]], [4, 0, 2, 2, 1, 33, 6, 2, 0, 1, 0.0, ["sub     rsp, 38h", "mov     ecx, edx", "mov     rax, fs:28h", "mov     [rsp+38h+var_10], rax", "xor     eax, eax", "mov     rax, qword ptr cs:default_quoting_options.quote_these_too+18h", "mov     r8, rsp", "and     ecx, 1Fh", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.style", "mov     qword ptr [rsp+38h+options.quote_these_too+18h], rax", "mov     eax, edx", "shr     al, 5", "movzx   eax, al", "movaps  xmmword ptr [rsp+38h+options.style], xmm0", "lea     r9, [r8+rax*4+8]", "movdqa  xmm0, xmmword ptr cs:default_quoting_options.quote_these_too+8", "movaps  xmmword ptr [rsp+38h+options.quote_these_too+8], xmm0", "mov     edx, [r9]", "mov     eax, edx", "shr     eax, cl", "not     eax", "and     eax, 1", "shl     eax, cl", "mov     rcx, r8; options", "xor     eax, edx", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "mov     [r9], eax", "xor     edi, edi; n", "call    quotearg_n_options", "mov     rsi, [rsp+38h+var_10]", "xor     rsi, fs:28h", "jnz     short loc_6966"], ["sub~rsp,0", "mov~ecx,edx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rax,<TAG>", "mov~r8,rsp", "and~ecx,0", "movdqa~xmm0,<TAG>", "mov~[word ptr [rsp+0],rax", "mov~eax,edx", "shr~al,0", "movzx~eax,al", "movaps~<TAG>,xmm0", "lea~r9,[r8+0]", "movdqa~xmm0,<TAG>", "movaps~[mmword ptr [rsp+0],xmm0", "mov~edx,<TAG>", "mov~eax,edx", "shr~eax,cl", "not~eax", "and~eax,0", "shl~eax,cl", "mov~rcx,r8", "xor~eax,edx", "mov~rdx,argsize", "mov~argsize,arg", "mov~<TAG>,eax", "xor~edi,edi", "call~FOO", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 6, 3, 1, 3, 2, 3, 36, 0.0, 4, 3], "succs": [[], [0, 2], []], "fname": "quotearg_char_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["movsx   edx, sil", "mov     ch_0, 0FFFFFFFFFFFFFFFFh", "jmp     quotearg_char_mem"], ["movsx~edx,sil", "mov~ch_0,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_char", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[1, 1, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     edx, 3Ah ; ':'; ch_0", "mov     rsi, 0FFFFFFFFFFFFFFFFh; argsize", "jmp     quotearg_char_mem"], ["mov~edx,<STR>", "mov~rsi,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 1, 3, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_colon", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 1, 1, 0, 0, 2, 0, 1, 0, 0, 0.0, ["mov     edx, 3Ah ; ':'; ch_0", "jmp     quotearg_char_mem"], ["mov~edx,<STR>", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 2, 0.0, 0, 0], "succs": [[1], []], "fname": "quotearg_colon_mem", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_69C5"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    _malloc", "test    p, p", "jnz     short loc_69C3"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 4, 6, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "xmalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_69E5"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    _realloc", "test    p, p", "jnz     short loc_69E3"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 4, 0, 4, 4, 4, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 2], [], []], "fname": "xrealloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[1, 0, 3, 0, 0, 3, 0, 1, 0, 0, 0.1, ["mov     rdx, 0AAAAAAAAAAAAAAA9h", "cmp     rax, rdx", "ja      short loc_6A34"], ["mov~rdx,0", "cmp~rax,rdx", "ja~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 0, 2, 0.0, ["test    p, p", "mov     rax, [pn]", "jz      short loc_6A20"], ["test~p,p", "mov~rax,<TAG>", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 2, -1, 0.0, [], []], [1, 0, 1, 1, 0, 6, 0, 1, 2, -1, 0.05, ["lea     rdx, [rax+1]", "shr     rdx, 1", "add     rax, rdx", "mov     [pn], rax", "mov     pn, rax; n", "jmp     short xrealloc"], ["lea~rdx,[rax+0]", "shr~rdx,0", "add~rax,rdx", "mov~<TAG>,rax", "mov~pn,rax", "jmp~FOO"]], [1, 0, 1, 0, 0, 6, 1, 1, 1, -1, 0.05, ["test    rax, rax", "mov     edx, 40h ; '@'", "cmovz   rax, rdx", "mov     [pn], rax", "mov     pn, rax; n", "jmp     short xrealloc"], ["test~rax,rax", "mov~edx,0", "cmovz~rax,rdx", "mov~<TAG>,rax", "mov~pn,rax", "jmp~FOO"]], [1, 0, 0, 1, 1, 2, 0, 1, 2, 0, 0.0, ["sub     rsp, 8", "call    xalloc_die"], ["sub~rsp,0", "call~FOO"]]], "func_feature": [1, 2, 5, 0, 6, 6, 0, 20, 0.03333, 0, 2], "succs": [[3, 5], [0, 4], [], [2], [2], []], "fname": "x2realloc", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 1, 0, 1, 8, 1, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, s", "call    xmalloc", "mov     rdx, s; n", "xor     esi, esi; c", "mov     rdi, rax; s", "pop     s", "jmp     _memset"], ["push~rbx", "mov~rbx,s", "call~FOO", "mov~rdx,s", "xor~esi,esi", "mov~rdi,rax", "pop~s", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 1, 2, 0, 2, 1, 0, 8, 0.0, 0, 0], "succs": [[1], []], "fname": "xzalloc", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 4, 1, 2, 0, 1, 0.0, ["sub     rsp, 8", "call    _calloc", "test    p, p", "jz      short loc_6A73"], ["sub~rsp,0", "call~FOO", "test~p,p", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 1, 3, 0, 3, 2, 0, 7, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "xcalloc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[2, 0, 1, 2, 1, 14, 0, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "mov     rbp, p", "mov     p, s; n", "mov     rbx, s", "sub     rsp, 8", "call    xmalloc", "add     rsp, 8", "mov     rdx, s; n", "mov     rsi, p; src", "pop     s", "pop     p", "mov     rdi, rax; dest", "jmp     _memcpy"], ["push~rbp", "push~rbx", "mov~rbp,p", "mov~p,s", "mov~rbx,s", "sub~rsp,0", "call~FOO", "add~rsp,0", "mov~rdx,s", "mov~rsi,p", "pop~s", "pop~p", "mov~rdi,rax", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [1, 0, 2, 0, 2, 1, 2, 14, 0.0, 0, 2], "succs": [[1], []], "fname": "xmemdup", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 1, 7, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, string", "call    _strlen", "mov     rdi, string; p", "lea     rsi, [rax+1]; s", "pop     string", "jmp     short xmemdup"], ["push~rbx", "mov~rbx,string", "call~FOO", "mov~rdi,string", "lea~rsi,[rax+0]", "pop~string", "jmp~FOO"]]], "func_feature": [1, 0, 2, 0, 2, 1, 0, 7, 0.0, 0, 0], "succs": [[], [0]], "fname": "xstrdup", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    eax, eax", "js      short loc_6B19"], ["test~eax,eax", "js~FOO"]], [1, 0, 3, 1, 1, 14, 1, 2, 0, 1, 0.0, ["push    r13", "push    r12", "xor     eax, eax", "push    rbp", "push    rbx", "mov     ebp, edi", "mov     desired_fd, file; file", "mov     esi, edx; oflag", "mov     edx, ecx", "sub     rsp, 8", "call    _open", "cmp     ebp, eax", "mov     ebx, eax", "jz      short loc_6B19"], ["push~r13", "push~r12", "xor~eax,eax", "push~rbp", "push~rbx", "mov~ebp,edi", "mov~desired_fd,file", "mov~esi,edx", "mov~edx,ecx", "sub~rsp,0", "call~FOO", "cmp~ebp,eax", "mov~ebx,eax", "jz~FOO"]], [0, 0, 1, 0, 3, 11, 0, 3, 2, 1, 0.0, ["mov     esi, ebp; fd2", "mov     edi, eax; fd", "call    _dup2", "mov     r12d, eax", "call    ___errno_location", "mov     r13d, [rax]", "mov     desired_fd, rax", "mov     edi, ebx; fd", "call    _close", "mov     ebx, r12d", "mov     [rbp+0], r13d"], ["mov~esi,ebp", "mov~edi,eax", "call~FOO", "mov~r12d,eax", "call~FOO", "mov~r13d,<TAG>", "mov~desired_fd,rax", "mov~edi,ebx", "call~FOO", "mov~ebx,r12d", "mov~[rbp+0],r13d"]], [1, 0, 0, 1, 0, 7, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "mov     eax, ebx", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "mov~eax,ebx", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]]], "func_feature": [4, 2, 6, 0, 4, 5, 3, 34, 0.04167, 0, 2], "succs": [[2, 3], [0, 3], [3], []], "fname": "fd_reopen", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[1, 0, 24, 0, 0, 2, 0, 1, 0, 0, 0.18659420289855072, ["cmp     qword ptr [rdi], 0", "jz      short loc_6B90"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 24, 0, 0, 4, 0, 1, 2, 0, 0.05615942028985507, ["mov     rdi, [rsp+38h+tmp_authors.overflow_arg_area]", "lea     rax, [rdi+8]", "mov     [rsp+38h+tmp_authors.overflow_arg_area], rax", "jmp     loc_6B7F"], ["mov~rdi,[rsp+0]", "lea~rax,[rdi+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 24, 2, 0, 4, 0, 0, 2, 4, 0.05615942028985507, ["mov     edi, eax", "add     eax, 8", "add     rdi, r8", "mov     [rsp+38h+tmp_authors.gp_offset], eax"], ["mov~edi,eax", "add~eax,0", "add~rdi,r8", "mov~<TAG>,eax"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000006C20 case 5", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "jmp     loc_6C60"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [0, 0, 13, 1, 0, 4, 0, 1, 7, -1, 0.18115942028985507, ["lea     rdx, off_B538", "movsxd  rax, dword ptr [rdx+n_authors*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 24, 1, 0, 2, 0, 1, 4, 2, 0.012681159420289856, ["add     n_authors, 1", "jmp     short loc_6B68"], ["add~n_authors,0", "jmp~FOO"]], [5, 0, 15, 0, 4, 20, 3, 5, 6, -1, 0.24456521739130435, ["lea     rsi, aC; \"(C)\"", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     rcx, rax", "mov     r8d, 7D8h", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "xor     edi, edi; domainname", "mov     edx, 5; category", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     n_authors, 9; switch 10 cases", "ja      loc_6D40; jumptable 0000000000006C20 default case"], ["lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "lea~rdx,<TAG>", "mov~rcx,rax", "mov~r8d,0", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "lea~rsi,<TAG>", "xor~edi,edi", "mov~edx,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~n_authors,0", "ja~FOO"]], [1, 0, 16, 0, 1, 8, 1, 2, 5, -1, 0.10144927536231885, ["mov     r8, version", "mov     version, package", "lea     package, aSS_0; \"%s %s\\n\"", "mov     esi, 1", "mov     rdi, stream", "xor     eax, eax", "call    ___fprintf_chk", "jmp     loc_6BB8"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "mov~rdi,stream", "xor~eax,eax", "call~FOO", "jmp~FOO"]], [1, 0, 16, 0, 1, 8, 1, 1, 5, -1, 0.10144927536231885, ["mov     r8, package", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     r9, version", "mov     rdi, stream", "mov     version, command_name", "xor     eax, eax", "mov     esi, 1", "call    ___fprintf_chk"], ["mov~r8,package", "lea~package,<TAG>", "mov~r9,version", "mov~rdi,stream", "mov~version,command_name", "xor~eax,eax", "mov~esi,0", "call~FOO"]], [0, 1, 0, 1, 0, 5, 0, 0, 9, -1, 0.0, ["add     rsp, 20h", "pop     n_authors", "pop     stream", "pop     authors", "retn"], ["add~rsp,<STR>", "pop~n_authors", "pop~stream", "pop~authors", "retn"]], [0, 0, 2, 0, 2, 9, 2, 3, 8, -1, 0.07608695652173914, ["xor     edi, edi; domainname", "call    _dcgettext", "mov     rdx, authors; args", "mov     rsi, rax; format", "mov     rdi, stream; fp", "call    rpl_vfprintf", "mov     rax, [rsp+38h+var_20]", "xor     rax, fs:28h", "jnz     loc_6D56"], ["xor~edi,edi", "call~FOO", "mov~rdx,authors", "mov~rsi,rax", "mov~rdi,stream", "call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000006C20 case 9", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "jmp     short loc_6C60"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000006C20 case 1", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "jmp     short loc_6C60"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000006C20 case 2", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "jmp     short loc_6C60"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000006C20 case 3", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "jmp     short loc_6C60"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000006C20 case 4", "lea     rsi, aWrittenBySSSAn; \"Written by %s, %s, %s,\\nand %s.\\n\"", "jmp     loc_6C60"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000006C20 case 6", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "jmp     loc_6C60"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 8, -1, 0.0006038647342995169, ["mov     edx, 5; jumptable 0000000000006C20 case 7", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "jmp     loc_6C60"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 1, 7, -1, 0.05434782608695652, ["mov     edx, 5; jumptable 0000000000006C20 default case", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "jmp     loc_6C60"], ["mov~edx,0", "lea~rsi,<TAG>", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 8, -1, 0.0006038647342995169, ["lea     rsi, aWrittenBySSSSS; jumptable 0000000000006C20 case 8", "mov     edx, 5; category", "nop     dword ptr [rax+00h]"], ["lea~rsi,<TAG>", "mov~edx,0", "nop~[word ptr [rax+0]"]], [0, 0, 18, 0, 0, 2, 1, 1, 4, -1, 0.1956521739130435, ["test    command_name, command_name", "jz      loc_6C28"], ["test~command_name,command_name", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 8, -1, 0.0, ["call    _abort; jumptable 0000000000006C20 case 0"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 1, 24, 1, 0, 16, 2, 0, 0, 2, 0.0, ["push    r12", "push    rbp", "mov     r12, authors", "push    rbx", "mov     rbp, stream", "xor     ebx, ebx", "sub     rsp, 20h", "mov     rax, fs:28h", "mov     [rsp+38h+var_20], rax", "xor     eax, eax", "movdqu  xmm0, xmmword ptr [authors]", "movups  xmmword ptr [rsp+38h+tmp_authors.gp_offset], xmm0", "mov     rax, [authors+10h]", "mov     [rsp+38h+tmp_authors.reg_save_area], rax", "mov     authors, rax", "nop     dword ptr [rax]"], ["push~r12", "push~rbp", "mov~r12,authors", "push~rbx", "mov~rbp,stream", "xor~ebx,ebx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "movdqu~xmm0,<TAG>", "movups~<TAG>,xmm0", "mov~rax,[authors+0]", "mov~[rsp+0],rax", "mov~authors,rax", "nop~<TAG>"]], [1, 0, 24, 0, 0, 3, 0, 1, 1, 1, 0.08876811594202899, ["mov     eax, [rsp+38h+tmp_authors.gp_offset]", "cmp     eax, 2Fh ; '/'", "ja      loc_6D5B"], ["mov~eax,<TAG>", "cmp~eax,0", "ja~FOO"]]], "func_feature": [10, 10, 28, 1, 25, 36, 2, 119, 0.05442, 17, 6], "succs": [[20, 5], [0], [0], [10], [3, 11, 12, 13, 14, 15, 16, 17, 19, 21], [24], [18, 4], [6], [6], [], [9, 22], [10], [10], [10], [10], [10], [10], [10], [10], [10], [8, 7], [], [], [24], [1, 2]], "fname": "version_etc_va", "n_num": 25}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[1, 1, 2, 0, 1, 14, 2, 2, 0, 0, 0.3333333333333333, ["mov     rax, fs:28h", "mov     [rsp+0D8h+var_C0], rax", "xor     eax, eax", "lea     rax, [rsp+0D8h+arg_0]", "mov     r8, rsp; authors", "mov     [rsp+0D8h+authors.overflow_arg_area], rax", "lea     rax, [rsp+0D8h+var_B8]", "mov     [rsp+0D8h+authors.gp_offset], 20h ; ' '", "mov     [rsp+0D8h+authors.fp_offset], 30h ; '0'", "mov     [rsp+0D8h+authors.reg_save_area], rax", "call    version_etc_va", "mov     rax, [rsp+0D8h+var_C0]", "xor     rax, fs:28h", "jnz     short loc_6E12"], ["mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "mov~r8,rsp", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~<TAG>,<STR>", "mov~[rsp+0],0", "mov~[rsp+0],rax", "call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 1, 4, 1, 0, 5, 1, 1, 0, 2, 0.0, ["sub     rsp, 0D8h", "test    al, al", "mov     [rsp+0D8h+var_98], r8", "mov     [rsp+0D8h+var_90], r9", "jz      short loc_6DBC"], ["sub~rsp,<STR>", "test~al,al", "mov~[rsp+0],r8", "mov~[rsp+0],r9", "jz~FOO"]], [0, 0, 3, 0, 0, 8, 0, 0, 1, 2, 0.0, ["movaps  [rsp+0D8h+var_88], xmm0", "movaps  [rsp+0D8h+var_78], xmm1", "movaps  [rsp+0D8h+var_68], xmm2", "movaps  [rsp+0D8h+var_58], xmm3", "movaps  [rsp+0D8h+var_48], xmm4", "movaps  [rsp+0D8h+var_38], xmm5", "movaps  [rsp+0D8h+var_28], xmm6", "movaps  [rsp+0D8h+var_18], xmm7"], ["movaps~[rsp+0],xmm0", "movaps~[rsp+0],xmm1", "movaps~[rsp+0],xmm2", "movaps~[rsp+0],xmm3", "movaps~[rsp+0],xmm4", "movaps~[rsp+0],xmm5", "movaps~[rsp+0],xmm6", "movaps~[rsp+0],xmm7"]], [0, 1, 0, 1, 0, 2, 0, 0, 2, -1, 0.0, ["add     rsp, 0D8h", "retn"], ["add~rsp,<STR>", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 3, 4, 12, 5, 5, 0, 30, 0.06667, 1, 2], "succs": [[3, 4], [0, 2], [0], [], []], "fname": "version_etc", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[2, 0, 0, 1, 3, 12, 3, 3, 0, 0, 0.0, ["lea     rsi, aMemoryExhauste; \"memory exhausted\"", "sub     rsp, 8", "mov     edx, 5; category", "xor     edi, edi; domainname", "call    _dcgettext", "mov     edi, cs:exit_failure; status", "lea     rdx, format+4; format", "mov     rcx, rax", "xor     esi, esi; errnum", "xor     eax, eax", "call    _error", "call    _abort"], ["lea~rsi,<TAG>", "sub~rsp,0", "mov~edx,0", "xor~edi,edi", "call~FOO", "mov~edi,<TAG>", "lea~rdx,<TAG>", "mov~rcx,rax", "xor~esi,esi", "xor~eax,eax", "call~FOO", "call~FOO"]]], "func_feature": [3, 3, 3, 0, 1, 0, 4, 12, 0.0, 3, 1], "succs": [[]], "fname": "xalloc_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [1, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     edi, 1; status", "xor     eax, eax", "jmp     usage"], ["mov~edi,0", "xor~eax,eax", "jmp~FOO"]]], "func_feature": [0, 1, 1, 0, 2, 1, 0, 3, 0.0, 0, 0], "succs": [[], [0]], "fname": "__argmatch_die", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[1, 0, 12, 2, 0, 6, 1, 1, 0, 0, 0.10683760683760685, ["mov     [rsp+58h+var_58], i", "add     matchind, 1", "add     rbp, valsize", "mov     r14, [arglist+i*8]", "test    r14, r14", "jnz     short loc_6F07"], ["mov~<TAG>,i", "add~matchind,0", "add~rbp,valsize", "mov~r14,<TAG>", "test~r14,r14", "jnz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 4, 4, 0.26282051282051283, ["cmp     [rsp+58h+var_58], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_6EC0"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 6, -1, 0.03205128205128205, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [2, 0, 13, 1, 1, 17, 1, 2, 0, 4, 0.0, ["push    r15", "push    r14", "mov     r15, arglist", "push    r13", "push    r12", "mov     r13, valsize", "push    rbp", "push    rbx", "mov     rbp, vallist_0", "sub     rsp, 28h", "mov     [rsp+58h+arg], arg_0", "mov     [rsp+58h+vallist], vallist_0", "call    _strlen", "mov     r14, [arglist]", "mov     [rsp+58h+var_58], 0FFFFFFFFFFFFFFFFh", "test    r14, r14", "jz      loc_6F5D"], ["push~r15", "push~r14", "mov~r15,arglist", "push~r13", "push~r12", "mov~r13,valsize", "push~rbp", "push~rbx", "mov~rbp,vallist_0", "sub~rsp,0", "mov~[rsp+0],arg_0", "mov~[rsp+0],vallist_0", "call~FOO", "mov~r14,<TAG>", "mov~<TAG>,0", "test~r14,r14", "jz~FOO"]], [1, 0, 12, 2, 0, 5, 1, 1, 3, 3, 0.20512820512820512, ["add     i, 1", "add     rbp, valsize", "mov     r14, [arglist+i*8]", "test    r14, r14", "jz      short loc_6F48"], ["add~i,0", "add~rbp,valsize", "mov~r14,<TAG>", "test~r14,r14", "jz~FOO"]], [0, 0, 12, 0, 1, 6, 1, 2, 2, 2, 0.3696581196581197, ["mov     rsi, [rsp+58h+arg]; s2", "mov     rdx, arglen; n", "mov     rdi, r14; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_6EF7"], ["mov~rsi,[rsp+0]", "mov~rdx,arglen", "mov~rdi,r14", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 6, 4, 0.03311965811965812, ["mov     [rsp+58h+ambiguous], 1", "jmp     short loc_6EF7"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 12, 2, 1, 11, 1, 1, 6, 4, 0.03311965811965812, ["mov     rdi, [rsp+58h+var_58]", "mov     rdx, valsize; n", "mov     rsi, rbp; s2", "imul    rdi, valsize", "add     rdi, rax; s1", "call    _memcmp", "test    eax, eax", "movzx   eax, [rsp+58h+ambiguous]", "mov     ecx, 1", "cmovnz  eax, ecx", "mov     [rsp+58h+ambiguous], al"], ["mov~rdi,<TAG>", "mov~rdx,valsize", "mov~rsi,rbp", "imul~rdi,valsize", "add~rdi,rax", "call~FOO", "test~eax,eax", "movzx~eax,[rsp+0]", "mov~ecx,0", "cmovnz~eax,ecx", "mov~[rsp+0],al"]], [0, 0, 12, 0, 1, 4, 0, 2, 3, 1, 0.3269230769230769, ["mov     rdi, r14; s", "call    _strlen", "cmp     rax, arglen", "jz      short loc_6F80"], ["mov~rdi,r14", "call~FOO", "cmp~rax,arglen", "jz~FOO"]], [0, 0, 12, 0, 0, 3, 1, 1, 5, 5, 0.1111111111111111, ["mov     rax, [rsp+58h+vallist]", "test    rax, rax", "jz      loc_6F70"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 1, -1, 0.0, ["mov     rax, [rsp+58h+var_58]", "add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     r12", "pop     valsize", "pop     r14", "pop     arglist", "retn"], ["mov~rax,<TAG>", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~valsize", "pop~r14", "pop~arglist", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, 0, 0.01282051282051282, ["mov     [rsp+58h+var_58], i", "jmp     short loc_6F5D"], ["mov~<TAG>,i", "jmp~FOO"]], [2, 0, 1, 0, 0, 4, 0, 0, 4, -1, 0.05128205128205128, ["cmp     [rsp+58h+ambiguous], 0", "mov     rax, 0FFFFFFFFFFFFFFFEh", "cmovz   rax, [rsp+58h+var_58]", "mov     [rsp+58h+var_58], rax"], ["cmp~[rsp+0],0", "mov~rax,0", "cmovz~rax,<TAG>", "mov~<TAG>,rax"]], [1, 0, 12, 0, 0, 4, 1, 1, 1, 3, 0.07051282051282051, ["mov     r12, arglen", "mov     [rsp+58h+ambiguous], 0", "xor     ebx, ebx", "jmp     short loc_6F07"], ["mov~r12,arglen", "mov~[rsp+0],0", "xor~ebx,ebx", "jmp~FOO"]]], "func_feature": [4, 7, 14, 1, 14, 20, 2, 76, 0.11538, 0, 8], "succs": [[2, 5], [0, 9], [12], [10, 13], [12, 5], [8, 4], [4], [4], [1, 11], [6, 7], [], [10], [10], [5]], "fname": "argmatch", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[2, 0, 1, 0, 2, 18, 4, 3, 0, 0, 0.25, ["mov     rsi, context; name", "mov     edi, 1; n", "call    quote_n", "mov     rdx, value; arg", "mov     context, rax", "mov     esi, 6; s", "xor     edi, edi; n", "call    quotearg_n_style", "mov     r8, rbp", "mov     rdx, format; format", "mov     rcx, rax", "pop     format", "pop     rbp", "pop     value", "xor     esi, esi; errnum", "xor     edi, edi; status", "xor     eax, eax", "jmp     _error"], ["mov~rsi,context", "mov~edi,0", "call~FOO", "mov~rdx,value", "mov~context,rax", "mov~esi,0", "xor~edi,edi", "call~FOO", "mov~r8,rbp", "mov~rdx,format", "mov~rcx,rax", "pop~format", "pop~rbp", "pop~value", "xor~esi,esi", "xor~edi,edi", "xor~eax,eax", "jmp~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 1, 0, 0.08333333333333333, ["lea     value, aInvalidArgumen; \"invalid argument %s for %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax", "jmp     short loc_6FB6"], ["lea~value,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbx,rax", "jmp~FOO"]], [0, 0, 2, 0, 1, 4, 1, 1, 1, -1, 0.08333333333333333, ["lea     value, aAmbiguousArgum; \"ambiguous argument %s for %s\"", "xor     edi, edi; domainname", "call    _dcgettext", "mov     rbx, rax"], ["lea~value,<TAG>", "xor~edi,edi", "call~FOO", "mov~rbx,rax"]], [2, 0, 4, 0, 0, 8, 0, 1, 0, 1, 0.0, ["cmp     problem, 0FFFFFFFFFFFFFFFFh", "push    r12", "mov     edx, 5; category", "push    rbp", "mov     r12, value", "push    rbx", "mov     rbp, context", "jz      short loc_6FF0"], ["cmp~problem,0", "push~r12", "mov~edx,0", "push~rbp", "mov~r12,value", "push~rbx", "mov~rbp,context", "jz~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []]], "func_feature": [4, 6, 7, 0, 5, 5, 1, 35, 0.08333, 2, 0], "succs": [[4], [0], [0], [1, 2], []], "fname": "argmatch_invalid", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 9, 0, 0, 3, 2, 1, 0, 0, 0.05555555555555556, ["xor     r13d, r13d", "xor     ebx, ebx", "jmp     short loc_7091"], ["xor~r13d,r13d", "xor~ebx,ebx", "jmp~FOO"]], [2, 1, 10, 1, 2, 22, 3, 3, 0, 2, 0.0, ["push    r15", "push    r14", "mov     r14, arglist", "push    r13", "push    r12", "xor     edi, edi; domainname", "push    rbp", "push    rbx", "mov     rbp, vallist", "lea     vallist, aValidArguments; \"Valid arguments are:\"", "mov     r12, valsize", "mov     edx, 5; category", "sub     rsp, 18h", "call    _dcgettext", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     rdx, rax", "mov     esi, 1", "xor     eax, eax", "call    ___fprintf_chk", "mov     rcx, [arglist]", "test    rcx, rcx", "jz      loc_70E0"], ["push~r15", "push~r14", "mov~r14,arglist", "push~r13", "push~r12", "xor~edi,edi", "push~rbp", "push~rbx", "mov~rbp,vallist", "lea~vallist,<TAG>", "mov~r12,valsize", "mov~edx,0", "sub~rsp,<STR>", "call~FOO", "mov~rdi,<TAG>", "mov~rdx,rax", "mov~esi,0", "xor~eax,eax", "call~FOO", "mov~rcx,<TAG>", "test~rcx,rcx", "jz~FOO"]], [1, 1, 1, 1, 0, 9, 0, 1, 2, 0, 0.08888888888888889, ["add     rsp, 18h", "mov     esi, 0Ah; int", "pop     rbx", "pop     rbp", "pop     valsize", "pop     r13", "pop     arglist", "pop     r15", "jmp     ___overflow"], ["add~rsp,<STR>", "mov~esi,0", "pop~rbx", "pop~rbp", "pop~valsize", "pop~r13", "pop~arglist", "pop~r15", "jmp~FOO"]], [0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 0.23333333333333334, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_7110"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [2, 0, 9, 2, 1, 11, 2, 2, 3, 2, 0.1388888888888889, ["lea     rdx, aS; \"\\n  - `%s'\"", "xor     eax, eax", "add     i, 1", "mov     esi, 1", "mov     rdi, r15", "mov     last_val, rbp", "call    ___fprintf_chk", "mov     rcx, [arglist+i*8]", "add     last_val, valsize", "test    rcx, rcx", "jz      short loc_70E0"], ["lea~rdx,<TAG>", "xor~eax,eax", "add~i,0", "mov~esi,0", "mov~rdi,r15", "mov~last_val,rbp", "call~FOO", "mov~rcx,<TAG>", "add~last_val,valsize", "test~rcx,rcx", "jz~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 5, 2, 0.044444444444444446, ["nop"], ["nop"]], [1, 1, 0, 1, 0, 11, 0, 0, 2, -1, 0.0, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah", "add     rsp, 18h", "pop     rbx", "pop     rbp", "pop     valsize", "pop     r13", "pop     arglist", "pop     r15", "retn"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0", "add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~valsize", "pop~r13", "pop~arglist", "pop~r15", "retn"]], [0, 0, 0, 0, 0, 0, 0, 0, 3, -1, 0.0, [], []], [0, 0, 9, 0, 0, 3, 1, 1, 2, 3, 0.18888888888888888, ["test    i, i", "mov     r15, cs:stderr@@GLIBC_2_2_5", "jz      short loc_7068"], ["test~i,i", "mov~r15,<TAG>", "jz~FOO"]], [0, 0, 9, 0, 1, 8, 1, 2, 3, 3, 0.08888888888888889, ["mov     rdx, valsize; n", "mov     rsi, rbp; s2", "mov     rdi, last_val; s1", "mov     [rsp+48h+var_40], rcx", "call    _memcmp", "test    eax, eax", "mov     rcx, [rsp+48h+var_40]", "jnz     short loc_7068"], ["mov~rdx,valsize", "mov~rsi,rbp", "mov~rdi,last_val", "mov~[rsp+0],rcx", "call~FOO", "test~eax,eax", "mov~rcx,[rsp+0]", "jnz~FOO"]], [2, 0, 9, 2, 1, 10, 2, 2, 4, 3, 0.061111111111111116, ["lea     rdx, unk_B5F7", "xor     eax, eax", "add     i, 1", "mov     esi, 1", "mov     rdi, r15", "add     rbp, valsize", "call    ___fprintf_chk", "mov     rcx, [arglist+i*8]", "test    rcx, rcx", "jnz     short loc_7091"], ["lea~rdx,<TAG>", "xor~eax,eax", "add~i,0", "mov~esi,0", "mov~rdi,r15", "add~rbp,valsize", "call~FOO", "mov~rcx,<TAG>", "test~rcx,rcx", "jnz~FOO"]]], "func_feature": [5, 11, 12, 1, 11, 15, 1, 82, 0.08182, 4, 7], "succs": [[8], [0, 3], [7], [2, 6], [8, 3], [3], [], [], [9, 4], [10, 4], [8, 5]], "fname": "argmatch_valid", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[1, 0, 0, 1, 0, 8, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "pop     arglist", "pop     vallist", "pop     arg", "pop     exit_fn", "pop     context", "pop     valsize", "retn"], ["add~rsp,0", "pop~arglist", "pop~vallist", "pop~arg", "pop~exit_fn", "pop~context", "pop~valsize", "retn"]], [1, 0, 1, 0, 3, 11, 0, 4, 1, 0, 0.0, ["mov     rdx, res; problem", "mov     rsi, arg; value", "mov     rdi, context; context", "call    argmatch_invalid", "mov     rdx, valsize; valsize", "mov     rsi, vallist; vallist", "mov     rdi, arglist; arglist", "call    argmatch_valid", "call    exit_fn", "mov     rax, 0FFFFFFFFFFFFFFFFh", "jmp     short loc_7166"], ["mov~rdx,res", "mov~rsi,arg", "mov~rdi,context", "call~FOO", "mov~rdx,valsize", "mov~rsi,vallist", "mov~rdi,arglist", "call~FOO", "call~exit_fn", "mov~rax,0", "jmp~FOO"]], [1, 0, 2, 1, 1, 20, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r14, context", "push    r13", "push    r12", "mov     r12, arg", "push    rbp", "push    rbx", "mov     rbp, vallist", "mov     rbx, arglist", "mov     vallist, valsize; valsize", "mov     arglist, vallist; vallist", "sub     rsp, 8", "mov     arg, arglist; arglist", "mov     context, arg; arg", "mov     r15, valsize", "mov     r13, exit_fn", "call    argmatch", "test    res, res", "js      short loc_7175"], ["push~r15", "push~r14", "mov~r14,context", "push~r13", "push~r12", "mov~r12,arg", "push~rbp", "push~rbx", "mov~rbp,vallist", "mov~rbx,arglist", "mov~vallist,valsize", "mov~arglist,vallist", "sub~rsp,0", "mov~arg,arglist", "mov~context,arg", "mov~r15,valsize", "mov~r13,exit_fn", "call~FOO", "test~res,res", "js~FOO"]]], "func_feature": [4, 1, 6, 0, 3, 3, 0, 39, 0.0, 0, 2], "succs": [[], [0], [0, 1]], "fname": "__xargmatch_internal", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 3, 0, 1, 6, 1, 2, 0, 0, 0.25, ["mov     rdx, valsize; n", "mov     rsi, rbp; s2", "mov     rdi, value; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_71C0"], ["mov~rdx,valsize", "mov~rsi,rbp", "mov~rdi,value", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 1, 2, 0.16666666666666666, ["mov     r12, valsize", "mov     r13, value", "mov     rbp, vallist", "lea     rbx, [arglist+8]", "jmp     short loc_71CF"], ["mov~r12,valsize", "mov~r13,value", "mov~rbp,vallist", "lea~rbx,[arglist+0]", "jmp~FOO"]], [1, 0, 3, 2, 0, 5, 1, 1, 3, 1, 0.0, ["mov     r14, [rbx]", "add     rbp, valsize", "add     rbx, 8", "test    r14, r14", "jz      short loc_71E1"], ["mov~r14,<TAG>", "add~rbp,valsize", "add~rbx,0", "test~r14,r14", "jz~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 1, 0, 0.0, ["pop     rbx", "mov     rax, r14", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "retn"], ["pop~rbx", "mov~rax,r14", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "retn"]], [0, 0, 4, 0, 0, 8, 1, 1, 0, 1, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     r14, [arglist]", "test    r14, r14", "jz      short loc_71E1"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~r14,<TAG>", "test~r14,r14", "jz~FOO"]]], "func_feature": [1, 3, 5, 0, 5, 7, 0, 31, 0.08333, 0, 2], "succs": [[2, 3], [0], [0, 3], [], [1, 3]], "fname": "argmatch_to_argument", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[2, 0, 0, 0, 1, 7, 0, 1, 0, 0, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 0", "mov     eax, 0FFFFFFFFh", "pop     rbx", "pop     stream", "pop     r12", "retn"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "pop~rbx", "pop~stream", "pop~r12", "retn"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, -1, 0.047619047619047616, ["test    eax, eax", "jnz     short loc_7248"], ["test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["pop     rbx", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "pop~stream", "pop~r12", "retn"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, 2, 0.07142857142857142, ["test    eax, eax", "jz      short loc_721F"], ["test~eax,eax", "jz~FOO"]], [1, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.047619047619047616, ["test    r12, r12", "mov     eax, 0FFFFFFFFh", "jz      short loc_7258"], ["test~r12,r12", "mov~eax,0", "jz~FOO"]], [0, 1, 7, 0, 2, 12, 2, 3, 0, 3, 0.0, ["push    r12", "push    rbp", "mov     rbp, stream", "push    rbx", "call    ___fpending", "mov     ebx, [stream+0]", "mov     rdi, stream; stream", "mov     r12, rax", "call    _fclose", "and     ebx, 20h", "test    ebx, ebx", "jnz     short loc_7228"], ["push~r12", "push~rbp", "mov~rbp,stream", "push~rbx", "call~FOO", "mov~ebx,[stream+0]", "mov~rdi,stream", "mov~r12,rax", "call~FOO", "and~ebx,<STR>", "test~ebx,ebx", "jnz~FOO"]], [1, 0, 0, 0, 1, 9, 0, 1, 3, 0, 0.0, ["call    ___errno_location", "cmp     dword ptr [rax], 9", "pop     rbx", "pop     stream", "pop     r12", "setnz   al", "movzx   eax, al", "neg     eax", "retn"], ["call~FOO", "cmp~<TAG>,0", "pop~rbx", "pop~stream", "pop~r12", "setnz~al", "movzx~eax,al", "neg~eax", "retn"]], [1, 0, 0, 0, 0, 5, 0, 0, 2, -1, 0.0, ["pop     rbx", "mov     eax, 0FFFFFFFFh", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "mov~eax,0", "pop~stream", "pop~r12", "retn"]]], "func_feature": [4, 5, 8, 0, 8, 8, 2, 44, 0.02083, 0, 0], "succs": [[], [0, 7], [], [2, 4], [2, 6], [1, 3], [], []], "fname": "close_stream", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[1, 0, 5, 0, 0, 2, 0, 1, 0, 0, 0.0625, ["cmp     len, 7FFFFFFFh", "ja      short loc_7333"], ["cmp~len,0", "ja~FOO"]], [1, 0, 8, 0, 1, 8, 0, 1, 1, 3, 0.05555555555555555, ["mov     rcx, fp; s", "mov     rdx, len; n", "mov     esi, 1; size", "mov     rdi, output; ptr", "mov     rbp, output", "call    _fwrite", "cmp     rax, len", "jb      short loc_7310"], ["mov~rcx,fp", "mov~rdx,len", "mov~esi,0", "mov~rdi,output", "mov~rbp,output", "call~FOO", "cmp~rax,len", "jb~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 7F8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.19444444444444442, ["mov     rcx, [rsp+818h+var_30]", "xor     rcx, fs:28h", "mov     eax, ebx", "jnz     short loc_734D"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "mov~eax,ebx", "jnz~FOO"]], [1, 0, 3, 0, 1, 4, 0, 2, 1, 2, 0.08333333333333333, ["mov     rdi, fp; fp", "mov     ebx, 0FFFFFFFFh", "call    fseterr", "jmp     short loc_72E5"], ["mov~rdi,fp", "mov~ebx,0", "call~FOO", "jmp~FOO"]], [2, 0, 9, 1, 1, 20, 2, 2, 0, 3, 0.0, ["push    r13", "push    r12", "mov     rax, format", "push    rbp", "push    rbx", "mov     r13, fp", "sub     rsp, 7F8h", "lea     r12, [rsp+818h+buf]", "lea     format, [rsp+818h+lenbuf]; lengthp", "mov     [rsp+818h+lenbuf], 7D0h", "mov     rcx, fs:28h", "mov     [rsp+818h+var_30], rcx", "xor     ecx, ecx", "mov     fp, r12; resultbuf", "mov     rcx, args; args", "mov     args, format; format", "call    vasnprintf", "test    output, output", "mov     rbx, [rsp+818h+lenbuf]", "jz      short loc_733E"], ["push~r13", "push~r12", "mov~rax,format", "push~rbp", "push~rbx", "mov~r13,fp", "sub~rsp,0", "lea~r12,[rsp+0]", "lea~format,[rsp+0]", "mov~[rsp+0],0", "mov~rcx,<TAG>", "mov~[rsp+0],rcx", "xor~ecx,ecx", "mov~fp,r12", "mov~rcx,args", "mov~args,format", "call~FOO", "test~output,output", "mov~rbx,[rsp+0]", "jz~FOO"]], [1, 0, 4, 0, 1, 2, 0, 1, 3, 3, 0.027777777777777776, ["call    ___errno_location", "mov     dword ptr [rax], 4Bh ; 'K'"], ["call~FOO", "mov~<TAG>,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 4, 0, 0, 3, 0, 1, 2, 2, 0.048611111111111105, ["cmp     output, r12", "mov     ebx, 0FFFFFFFFh", "jz      short loc_72E5"], ["cmp~output,r12", "mov~ebx,0", "jz~FOO"]], [0, 0, 3, 0, 2, 7, 0, 3, 3, 2, 0.0, ["call    ___errno_location", "mov     r13d, [rax]", "mov     r12, rax", "mov     rdi, output; ptr", "call    _free", "mov     [r12], r13d", "jmp     short loc_72E5"], ["call~FOO", "mov~r13d,<TAG>", "mov~r12,rax", "mov~rdi,output", "call~FOO", "mov~<TAG>,r13d", "jmp~FOO"]]], "func_feature": [7, 3, 13, 1, 10, 13, 1, 57, 0.04722, 1, 2], "succs": [[3, 6], [0, 8], [], [2, 7], [3], [1, 4], [4], [], [9, 3], [3]], "fname": "rpl_vfprintf", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 0.0, ["or      dword ptr [fp], 20h", "retn"], ["or~<TAG>,<STR>", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 1, 2, 0.0, 0, 0], "succs": [[]], "fname": "fseterr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[1, 0, 344, 1, 0, 7, 0, 1, 0, 0, 0.02777734551283049, ["movsx   ecx, byte ptr [digitp]", "lea     r8, [digitp+1]", "sub     ecx, 30h ; '0'", "cmp     width_0, r10", "movsxd  rax, ecx", "mov     rcx, r9", "ja      short loc_8814"], ["movsx~ecx,<TAG>", "lea~r8,[digitp+0]", "sub~ecx,0", "cmp~width_0,r10", "movsxd~rax,ecx", "mov~rcx,r9", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 22, 38, 0.01438275159116727, ["cmp     rdi, digitp", "jnz     short loc_87F8"], ["cmp~rdi,digitp", "jnz~FOO"]], [1, 0, 344, 0, 0, 3, 1, 0, 18, 42, 0.027053733991067676, ["xor     edx, edx", "mov     r10, 1999999999999999h", "mov     r9, rsi"], ["xor~edx,edx", "mov~r10,0", "mov~r9,rsi"]], [0, 0, 344, 0, 0, 4, 1, 1, 32, 39, 0.030504505065280647, ["cmp     result_0, [rbp+result]", "setz    dl", "test    result_0, result_0", "jz      loc_7FD0"], ["cmp~result_0,[rbp+0]", "setz~dl", "test~result_0,result_0", "jz~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 31, 40, 0.01614509578126702, ["add     allocated, allocated", "cmp     allocated, rax", "jnb     loc_7800"], ["add~allocated,allocated", "cmp~allocated,rax", "jnb~FOO"]], [1, 0, 344, 0, 0, 1, 0, 0, 31, 40, 0.013795303527800687, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [0, 0, 344, 1, 0, 2, 0, 0, 20, 41, 0.0, ["lea     rcx, [width_0+width_0*4]", "add     rcx, rcx"], ["lea~rcx,<TAG>", "add~rcx,rcx"]], [0, 0, 344, 0, 1, 6, 0, 2, 36, 36, 0.0013266211232318204, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_7832"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 35, 37, 0.0023264499463126935, ["test    dl, dl", "jz      loc_8448"], ["test~dl,dl", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 33, 38, 0.02724695642250613, ["test    dl, dl", "jnz     loc_7FD0"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 344, 0, 0, 5, 1, 1, 33, 39, 0.015149157342711753, ["cmp     result_0, [rbp+result]", "mov     rbx, memory_size", "setz    dl", "test    result_0, result_0", "jnz     loc_7813"], ["cmp~result_0,[rbp+0]", "mov~rbx,memory_size", "setz~dl", "test~result_0,result_0", "jnz~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 20, 40, 0.028446491651234806, ["add     rax, rcx", "mov     width_0, rax", "jnb     short loc_8846"], ["add~rax,rcx", "mov~width_0,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 21, 39, 0.017837413049905854, ["cmp     rdi, digitp", "jz      loc_88F0"], ["cmp~rdi,digitp", "jz~FOO"]], [0, 0, 344, 0, 1, 5, 1, 2, 34, 37, 0.027335138471753215, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      out_of_memory"], ["mov~rsi,rbx", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 22, 40, 0.009702619006862638, ["lea     rax, [digitp+1]", "cmp     byte ptr [digitp-1], 30h ; '0'", "jnz     short loc_884B"], ["lea~rax,[digitp+0]", "cmp~[yte ptr [digitp-1]+0],0", "jnz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 24, 41, 6.224615240970417e-05, ["mov     r8, digitp", "jmp     short loc_8825"], ["mov~r8,digitp", "jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 35, 36, 0.02751279936508924, ["mov     result_0, memory"], ["mov~result_0,memory"]], [0, 0, 344, 0, 0, 2, 0, 1, 21, 39, 0.008609420955167209, ["mov     rax, digitp", "jmp     short loc_8832"], ["mov~rax,digitp", "jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 23, 39, 0.0027699537822318356, ["mov     rdx, r9"], ["mov~rdx,r9"]], [0, 0, 344, 0, 0, 4, 0, 1, 15, 25, 0.0016631393846967834, ["mov     rax, [rdx+10h]; jumptable 0000000000007E5C case 2", "mov     r12, length", "mov     [rax], r14d", "jmp     loc_7D84"], ["mov~rax,[rdx+0]", "mov~r12,length", "mov~<TAG>,r14d", "jmp~FOO"]], [0, 0, 344, 1, 0, 4, 0, 1, 14, 26, 0.013320676615676694, ["lea     rcx, off_B648", "movsxd  rax, dword ptr [rcx+rax*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["lea~rcx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [1, 0, 344, 0, 0, 3, 0, 0, 29, 35, 0.24093151367081123, ["mov     byte ptr [result_0+length], 0", "mov     [rbp+fbp], fbp_0", "xchg    ax, ax"], ["mov~<TAG>,0", "mov~[rbp+0],fbp_0", "xchg~ax,ax"]], [0, 0, 344, 0, 0, 2, 0, 0, 28, 36, 0.13081417967351894, ["cmp     allocated, rax", "jnb     short loc_7832"], ["cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 35, 36, 0.016514682311199635, ["mov     result_0, rcx", "jmp     loc_7832"], ["mov~result_0,rcx", "jmp~FOO"]], [2, 0, 344, 0, 0, 3, 0, 1, 28, 3, 0.10688053407198768, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "jz      loc_7832"], ["cmp~allocated,0", "mov~edx,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 23, 37, 0.031068610821493595, ["mov     dword ptr [rbp+has_width], 1", "jmp     loc_8131"], ["mov~[word ptr [rbp+0],0", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 22, 38, 0.01407152082911875, ["mov     rdx, rsi", "jmp     loc_8837"], ["mov~rdx,rsi", "jmp~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 15, 25, 0.0016631393846967834, ["mov     rax, [rdx+10h]; jumptable 0000000000007E5C case 1", "mov     r12, length", "mov     [rax], r14w", "jmp     loc_7D84"], ["mov~rax,[rdx+0]", "mov~r12,length", "mov~<TAG>,r14w", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 23, 39, 0.004933007578469056, ["cmp     rdi, digitp", "jz      loc_88F0"], ["cmp~rdi,digitp", "jz~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 15, 25, 0.0016631393846967834, ["mov     rax, [rdx+10h]; jumptable 0000000000007E5C case 0", "mov     r12, length", "mov     [rax], r14b", "jmp     loc_7D84"], ["mov~rax,[rdx+0]", "mov~r12,length", "mov~<TAG>,r14b", "jmp~FOO"]], [1, 0, 344, 0, 0, 3, 1, 1, 26, 35, 0.003649180685018907, ["test    byte ptr [rbp+flags], 8", "mov     rdi, rcx", "jz      loc_84EF"], ["test~[yte ptr [rbp+0],0", "mov~rdi,rcx", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 1, 1, 25, 36, 0.0069715690698868675, ["test    byte ptr [rbp+flags], 4", "jz      loc_8859"], ["test~[yte ptr [rbp+0],0", "jz~FOO"]], [4, 0, 344, 1, 0, 9, 0, 1, 30, 34, 0.3117209504987473, ["mov     eax, dword ptr [rbp+has_width]", "mov     r12, allocated", "mov     r10d, 7FFFFFFFh", "sub     r12, length", "mov     [rbp+retcount], 0FFFFFFFFh", "cmp     maxlen_0, 7FFFFFFFh", "cmovbe  r10, maxlen_0", "cmp     eax, 11h; switch 18 cases", "ja      loc_84B0; jumptable 000000000000787E default case"], ["mov~eax,[word ptr [rbp+0]", "mov~r12,allocated", "mov~r10d,0", "sub~r12,length", "mov~[rbp+0],0", "cmp~maxlen_0,0", "cmovbe~r10,maxlen_0", "cmp~eax,0", "ja~FOO"]], [0, 0, 344, 0, 0, 4, 0, 0, 41, 35, 0.015540789384956143, ["cmp     rax, rdx", "cmovb   rax, rdx", "cmp     allocated, rax", "jnb     loc_7840"], ["cmp~rax,rdx", "cmovb~rax,rdx", "cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 44, 35, 0.013880891987364028, ["mov     result_0, memory", "jmp     loc_7840"], ["mov~result_0,memory", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 40, 35, 0.02471172250665256, ["cmp     allocated, rdx", "jnb     loc_7840"], ["cmp~allocated,rdx", "jnb~FOO"]], [0, 0, 344, 0, 1, 6, 0, 2, 46, 35, 0.00132662112323182, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_7840"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 37, 35, 0.009609249778248083, ["mov     byte ptr [rdi+1], 0", "jmp     loc_7840"], ["mov~[yte ptr [rdi+0],0", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 45, 35, 0.015332005415415259, ["mov     result_0, rcx", "jmp     loc_7840"], ["mov~result_0,rcx", "jmp~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 39, 35, 0.00870927415799111, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "jz      loc_7840"], ["cmp~allocated,0", "jz~FOO"]], [0, 1, 344, 0, 0, 3, 0, 1, 27, 35, 0.0, ["lea     rdi, [rcx+1]", "mov     byte ptr [rcx], 20h ; ' '", "jmp     loc_84EF"], ["lea~rdi,[rcx+0]", "mov~<TAG>,<STR>", "jmp~FOO"]], [0, 0, 344, 0, 0, 3, 0, 0, 43, 39, 0.010006068999859946, ["cmp     rsi, rax", "mov     allocated, rsi", "jnb     short loc_7978"], ["cmp~rsi,rax", "mov~allocated,rsi", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 42, 40, 0.010020333743120504, ["test    allocated, allocated", "js      out_of_memory"], ["test~allocated,allocated", "js~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 29, 28, 0.007228334448576897, ["test    pad, pad", "jz      loc_82A0"], ["test~pad,pad", "jz~FOO"]], [1, 0, 344, 2, 0, 6, 1, 1, 28, 29, 0.025349745568852024, ["sub     rdx, r8", "lea     rsi, [p_0+pad]", "mov     r8, end", "sub     r8, rcx", "test    byte ptr [rbp+flags], 2", "jnz     loc_8875"], ["sub~rdx,r8", "lea~rsi,<TAG>", "mov~r8,end", "sub~r8,rcx", "test~[yte ptr [rbp+0],0", "jnz~FOO"]], [1, 0, 344, 1, 1, 10, 1, 2, 15, 20, 0.2130218950841101, ["fld     tbyte ptr [rdx+10h]", "sub     rsp, 10h", "fld     st", "fstp    [rsp+3D0h+x.value]; x", "fstp    [rbp+has_width]", "call    rpl_isnanl", "test    eax, eax", "pop     r11", "pop     r12", "jnz     short loc_80D8"], ["fld~<TAG>,[byte ptr [rdx+0]", "sub~rsp,0", "fld~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "fstp~<TAG>,[rbp+0]", "call~FOO", "test~eax,eax", "pop~r11", "pop~r12", "jnz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 14, 17, 0.3232481598481194, ["cmp     dword ptr [rbp+has_width], 0Ch", "jz      loc_8060"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [0, 0, 344, 1, 0, 4, 0, 1, 31, 33, 0.31162758127013274, ["lea     rsi, off_B600", "movsxd  rax, dword ptr [rsi+rax*4]", "add     rax, rsi", "jmp     rax; switch jump"], ["lea~rsi,<TAG>", "movsxd~rax,<TAG>", "add~rax,rsi", "jmp~rax"]], [1, 1, 344, 1, 0, 4, 0, 1, 30, 29, 0.0023264499463126935, ["add     p_0, 1", "mov     byte ptr [p_0-1], 20h ; ' '", "cmp     end, p_0", "jnz     short loc_887E"], ["add~p_0,0", "mov~[yte ptr [p_0-1]+0],<STR>", "cmp~end,p_0", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 31, 28, 0.0026610230155148535, ["jmp     loc_82A0"], ["jmp~FOO"]], [1, 0, 344, 0, 0, 9, 1, 1, 16, 19, 0.010317299761908467, ["fld     [rbp+has_width]", "mov     edx, 0", "fld     st", "fadd    st, st(1)", "fucomip st, st(1)", "setnp   al", "cmovnz  eax, edx", "test    al, al", "jz      short loc_80B1"], ["fld~<TAG>,[rbp+0]", "mov~edx,0", "fld~<TAG>,<TAG>", "fadd~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "setnp~al", "cmovnz~eax,edx", "test~al,al", "jz~FOO"]], [0, 0, 23, 0, 1, 5, 1, 2, 16, -1, 0.01058184590964971, ["mov     rdi, rbx; size", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "jz      out_of_memory"], ["mov~rdi,rbx", "call~FOO", "test~rax,rax", "mov~rcx,rax", "jz~FOO"]], [0, 0, 27, 0, 0, 4, 1, 1, 15, -1, 0.02050621683447192, ["cmp     result_0, [rbp+result]", "setz    r13b", "test    result_0, result_0", "jz      loc_8890"], ["cmp~result_0,[rbp+0]", "setz~r13b", "test~result_0,result_0", "jz~FOO"]], [0, 0, 26, 0, 0, 2, 1, 1, 16, -1, 0.005290922954824855, ["test    r13b, r13b", "jnz     loc_8890"], ["test~r13b,r13b", "jnz~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.031188369825140214, ["mov     rax, [dp+50h]; jumptable 000000000000787E cases 7-10,15-17", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "mov     r9, [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      loc_7D38"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "mov~r9,[rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 14, 0, 0, 2, 1, 1, 17, -1, 0.007858576741725153, ["test    length, length", "jz      loc_8950"], ["test~length,length", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 32, 0.006275968316708449, ["cmp     eax, 2", "jz      loc_7D20"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 344, 0, 0, 8, 1, 1, 17, 19, 0.003921507601811363, ["fldz", "mov     edx, 1", "fucomip st, st(1)", "fstp    st", "setp    al", "cmovnz  eax, edx", "test    al, al", "jnz     short loc_80D8"], ["fldz~<TAG>", "mov~edx,0", "fucomip~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "setp~al", "cmovnz~eax,edx", "test~al,al", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 18, 18, 0.0010504038219137579, ["jmp     short loc_80B3"], ["jmp~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 18, -1, 0.002482065327336954, ["test    r13b, r13b", "jz      loc_8950"], ["test~r13b,r13b", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 17, 18, 0.004396134513935357, ["fstp    st"], ["fstp~<TAG>,<TAG>"]], [1, 0, 344, 1, 0, 2, 0, 0, 34, 31, 0.0037970152969919544, ["sub     rsp, 8", "push    [rbp+var_388]"], ["sub~rsp,0", "push~[rbp+0]"]], [0, 0, 344, 0, 0, 1, 0, 1, 15, 31, 0.013927576601671309, ["js      out_of_memory"], ["js~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 14, 32, 0.034297629977747, ["test    allocated, allocated", "jnz     loc_8420"], ["test~allocated,allocated", "jnz~FOO"]], [0, 0, 11, 0, 1, 6, 0, 2, 19, -1, 4.279422978167162e-05, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_859A"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 32, 31, 0.013927576601671309, ["js      out_of_memory"], ["js~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 31, 32, 0.034297629977747, ["test    allocated, allocated", "jnz     loc_88CC"], ["test~allocated,allocated", "jnz~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 33, 30, 0.01400538429218344, ["add     allocated, allocated", "cmp     allocated, rax", "jnb     loc_8620"], ["add~allocated,allocated", "cmp~allocated,rax", "jnb~FOO"]], [2, 0, 344, 0, 1, 10, 1, 1, 35, 30, 0.007959726739390922, ["mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "pop     rsi", "pop     rdi", "mov     r10, [rbp+maxlen]"], ["mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "pop~rsi", "pop~rdi", "mov~r10,[rbp+0]"]], [1, 0, 344, 1, 0, 4, 0, 1, 34, 31, 0.0011593345886307402, ["sub     rsp, 10h", "mov     r9, [rbp+var_388]", "fstp    [rsp+3D0h+x.value]", "jmp     loc_78B9"], ["sub~rsp,0", "mov~r9,[rbp+0]", "fstp~<TAG>,<TAG>", "jmp~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 31, 0.00249762686543938, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 32, 31, 0.018370395729913943, ["cmp     rax, 0Ch", "ja      loc_88DE"], ["cmp~rax,0", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 34, 30, 0.0025754345559515102, ["mov     rbx, memory_size", "jmp     loc_8620"], ["mov~rbx,memory_size", "jmp~FOO"]], [0, 0, 344, 0, 0, 6, 0, 1, 16, 38, 0.20391061452513967, ["mov     eax, [dp+10h]", "mov     rdi, [dp+20h]", "mov     [rbp+flags], eax", "mov     flags_0, [dp+18h]", "cmp     rax, rdi", "jz      loc_8673"], ["mov~eax,[dp+0]", "mov~rdi,[dp+0]", "mov~[rbp+0],eax", "mov~flags_0,[dp+0]", "cmp~rax,rdi", "jz~FOO"]], [0, 0, 344, 0, 0, 3, 1, 1, 35, 29, 0.1274049060342461, ["movsxd  rcx, [rbp+retcount]", "test    ecx, ecx", "js      loc_7A2D"], ["movsxd~rcx,[rbp+0]", "test~ecx,ecx", "js~FOO"]], [4, 1, 344, 3, 1, 17, 1, 2, 34, 30, 0.023767007464351154, ["mov     eax, [rbp+prefixes+4]", "sub     rsp, 8", "push    [rbp+var_388]", "mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "sub     rsp, 18h", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "fstp    [rsp+3E8h+var_3E0]", "push    rax", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "add     rsp, 30h", "mov     r10, [rbp+maxlen]", "jmp     loc_78E6"], ["mov~eax,[rbp+0]", "sub~rsp,0", "push~[rbp+0]", "mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "sub~rsp,<STR>", "mov~rcx,0", "mov~edx,0", "fstp~<TAG>,[rsp+0]", "push~rax", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "add~rsp,0", "mov~r10,[rbp+0]", "jmp~FOO"]], [3, 0, 344, 0, 1, 12, 0, 2, 34, 30, 0.02644748240249406, ["mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     eax, 1", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "pop     r8", "mov     r10, [rbp+maxlen]", "pop     r9", "jmp     loc_78E6"], ["mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "mov~eax,0", "mov~[rbp+0],maxlen_0", "call~FOO", "pop~r8", "mov~r10,[rbp+0]", "pop~r9", "jmp~FOO"]], [2, 1, 344, 1, 1, 11, 1, 2, 34, 30, 0.03445000337166659, ["mov     r9d, [rbp+prefixes]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "add     rsp, 20h", "mov     r10, [rbp+maxlen]", "jmp     loc_78E6"], ["mov~r9d,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "add~rsp,<STR>", "mov~r10,[rbp+0]", "jmp~FOO"]], [3, 0, 344, 0, 1, 10, 0, 2, 34, 30, 0.02377089784887676, ["mov     r9, [rbp+var_388]", "mov     r8, [rbp+buf]", "mov     rsi, maxlen_0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     eax, 1", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "mov     r10, [rbp+maxlen]", "jmp     loc_78E6"], ["mov~r9,[rbp+0]", "mov~r8,[rbp+0]", "mov~rsi,maxlen_0", "mov~rcx,0", "mov~edx,0", "mov~eax,0", "mov~[rbp+0],maxlen_0", "call~FOO", "mov~r10,[rbp+0]", "jmp~FOO"]], [2, 0, 344, 1, 0, 3, 0, 1, 26, 8, 0.0013188403541806067, ["mov     byte ptr [r12], 4Ch ; 'L'", "add     r12, 1", "jmp     loc_775F"], ["mov~<TAG>,0", "add~r12,0", "jmp~FOO"]], [1, 0, 344, 0, 0, 2, 1, 1, 25, 9, 0.0069715690698868675, ["test    ah, 10h", "jnz     loc_8020"], ["test~ah,0", "jnz~FOO"]], [0, 0, 344, 0, 0, 3, 0, 0, 36, 28, 0.18268597334827202, ["movsxd  rdx, ecx", "cmp     rdx, r10", "jnb     short loc_790B"], ["movsxd~rdx,ecx", "cmp~rdx,r10", "jnb~FOO"]], [2, 0, 344, 0, 1, 13, 2, 1, 35, 29, 0.19359072117354795, ["mov     r8, [rbp+buf]", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     edx, 1", "mov     rsi, maxlen_0", "xor     eax, eax", "mov     [rbp+maxlen], maxlen_0", "call    ___snprintf_chk", "pop     rdx", "pop     rcx", "movsxd  rcx, [rbp+retcount]", "mov     r10, [rbp+maxlen]", "test    ecx, ecx", "jns     loc_78F5"], ["mov~r8,[rbp+0]", "mov~rcx,0", "mov~edx,0", "mov~rsi,maxlen_0", "xor~eax,eax", "mov~[rbp+0],maxlen_0", "call~FOO", "pop~rdx", "pop~rcx", "movsxd~rcx,[rbp+0]", "mov~r10,[rbp+0]", "test~ecx,ecx", "jns~FOO"]], [1, 0, 344, 1, 0, 3, 0, 1, 37, 28, 0.0002878884548948818, ["add     rdx, result_0", "cmp     byte ptr [rdx+length], 0", "jnz     loc_84B0; jumptable 000000000000787E default case"], ["add~rdx,result_0", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 33, 0, 0, 3, 0, 1, 11, -1, 0.018378176498965157, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "mov     eax, 1", "jz      loc_859A"], ["cmp~allocated,0", "mov~eax,0", "jz~FOO"]], [1, 0, 41, 1, 0, 4, 1, 0, 10, -1, 0.07104620220662611, ["mov     r12, length", "xor     eax, eax", "add     r12, 1", "jb      loc_8900"], ["mov~r12,length", "xor~eax,eax", "add~r12,0", "jb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 37, 27, 0.18305945026273027, ["cmp     ecx, eax", "jl      loc_7D00"], ["cmp~ecx,eax", "jl~FOO"]], [2, 0, 344, 2, 0, 5, 0, 1, 18, 38, 0.0072438959866793235, ["mov     rax, [rbp+a.arg]", "shl     rsi, 5", "add     rax, rsi", "cmp     dword ptr [rax], 5", "jnz     loc_84B0; jumptable 000000000000787E default case"], ["mov~rax,[rbp+0]", "shl~rsi,0", "add~rax,rsi", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 17, 39, 0.03629728762390875, ["mov     rsi, [dp+28h]", "cmp     rsi, 0FFFFFFFFFFFFFFFFh", "jz      loc_87E9"], ["mov~rsi,[dp+0]", "cmp~rsi,0", "jz~FOO"]], [0, 0, 31, 0, 0, 1, 0, 1, 13, -1, 0.0037736729898383155, ["js      out_of_memory"], ["js~FOO"]], [0, 0, 32, 0, 0, 2, 1, 1, 12, -1, 0.006675899845940773, ["test    allocated, allocated", "jz      out_of_memory"], ["test~allocated,allocated", "jz~FOO"]], [0, 0, 344, 0, 0, 3, 0, 0, 38, 26, 0.09111150879486243, ["lea     eax, [rcx+1]", "cmp     rax, r10", "jb      loc_7D15"], ["lea~eax,[rcx+0]", "cmp~rax,r10", "jb~FOO"]], [1, 0, 30, 0, 0, 2, 0, 1, 14, -1, 0.005520455641835639, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [1, 0, 32, 0, 0, 2, 0, 1, 13, -1, 0.0166119419243398, ["cmp     r12, 0Ch", "ja      loc_891E"], ["cmp~r12,0", "ja~FOO"]], [0, 0, 31, 0, 0, 1, 0, 1, 15, -1, 8.947884408894975e-05, ["jmp     short loc_891E"], ["jmp~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 31, 0, 4.279422978167162e-05, ["jmp     out_of_memory"], ["jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 30, 1, 0.009500319011531099, ["jns     loc_7FA0"], ["jns~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 39, 37, 0.03830602283396357, ["cmp     r12, 7FFFFFFEh", "ja      overflow"], ["cmp~r12,0", "ja~FOO"]], [0, 0, 344, 0, 0, 5, 0, 0, 38, 26, 0.18250312527556853, ["movsxd  rcx, eax", "mov     [rbp+retcount], eax", "lea     eax, [rcx+1]", "cmp     rax, r10", "jnb     loc_791F"], ["movsxd~rcx,eax", "mov~[rbp+0],eax", "lea~eax,[rcx+0]", "cmp~rax,r10", "jnb~FOO"]], [1, 0, 344, 0, 0, 5, 1, 1, 19, 37, 0.007508442134420566, ["movsxd  rdx, dword ptr [rax+10h]", "mov     dword ptr [rbp+has_width], 1", "test    edx, edx", "mov     rax, rdx", "js      loc_849D"], ["movsxd~rdx,[word ptr [rax+0]", "mov~[word ptr [rbp+0],0", "test~edx,edx", "mov~rax,rdx", "js~FOO"]], [0, 0, 28, 0, 0, 2, 0, 1, 16, -1, 0.0007313922908140241, ["mov     rbx, memory_size", "jmp     loc_8566"], ["mov~rbx,memory_size", "jmp~FOO"]], [0, 0, 29, 0, 0, 2, 1, 1, 15, -1, 0.0030267191609218654, ["test    rax, rax", "jnz     out_of_memory"], ["test~rax,rax", "jnz~FOO"]], [0, 0, 33, 0, 0, 1, 0, 1, 13, -1, 0.01555375733337483, ["js      out_of_memory"], ["js~FOO"]], [0, 0, 36, 0, 0, 2, 1, 1, 12, -1, 0.03661629915500848, ["test    allocated, allocated", "jnz     loc_8939"], ["test~allocated,allocated", "jnz~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 18, 36, 0.21019747591851978, ["mov     rcx, [dp+30h]", "mov     r8, [dp+38h]", "cmp     rcx, r8", "jz      short loc_8188"], ["mov~rcx,[dp+0]", "mov~r8,[dp+0]", "cmp~rcx,r8", "jz~FOO"]], [1, 0, 344, 0, 0, 4, 1, 1, 20, 37, 0.0, ["neg     eax", "or      [rbp+flags], 2", "movsxd  arg, eax", "jmp     loc_8131"], ["neg~eax", "or~[rbp+0],0", "movsxd~arg,eax", "jmp~FOO"]], [1, 0, 344, 0, 0, 3, 1, 1, 17, 37, 0.16561366925506918, ["xor     edx, edx", "mov     dword ptr [rbp+has_width], 0", "jmp     loc_8131"], ["xor~edx,edx", "mov~[word ptr [rbp+0],0", "jmp~FOO"]], [1, 0, 344, 1, 0, 7, 1, 0, 40, 36, 0.01886577135950784, ["lea     rsi, [allocated+allocated]", "lea     edx, [rcx+2]", "test    allocated, allocated", "mov     rax, 0FFFFFFFFFFFFFFFFh", "cmovns  rax, rsi", "add     rdx, length", "jb      loc_7F00"], ["lea~rsi,<TAG>", "lea~edx,[rcx+0]", "test~allocated,allocated", "mov~rax,0", "cmovns~rax,rsi", "add~rdx,length", "jb~FOO"]], [0, 0, 32, 1, 0, 3, 0, 0, 14, -1, 0.013203965079908498, ["add     allocated, allocated", "cmp     allocated, r12", "jnb     loc_8566"], ["add~allocated,allocated", "cmp~allocated,r12", "jnb~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 19, 37, 0.042988749007951944, ["mov     rdi, [dp+40h]", "cmp     rdi, 0FFFFFFFFFFFFFFFFh", "jz      loc_8771"], ["mov~rdi,[dp+0]", "cmp~rdi,0", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 18, -1, 0.0005641057562129441, ["mov     result_0, rcx", "jmp     loc_859A"], ["mov~result_0,rcx", "jmp~FOO"]], [2, 0, 344, 2, 0, 5, 0, 1, 20, 37, 0.009103499789919235, ["mov     rax, [rbp+a.arg]", "shl     rdi, 5", "add     rax, rdi", "cmp     dword ptr [rax], 5", "jnz     loc_84B0; jumptable 000000000000787E default case"], ["mov~rax,[rbp+0]", "shl~rdi,0", "add~rax,rdi", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 21, 35, 0.005049719114237251, ["mov     r12d, 0Ch", "jmp     loc_818E"], ["mov~r12d,0", "jmp~FOO"]], [1, 0, 344, 1, 0, 3, 0, 1, 20, 36, 0.031885591571870965, ["add     rcx, 1", "cmp     r8, digitp", "jz      loc_8958"], ["add~rcx,0", "cmp~r8,digitp", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, -1, 0.005524346026361245, ["mov     rbx, [rbp+var_38]", "xor     rbx, fs:28h", "mov     rax, r15", "jnz     loc_8963"], ["mov~rbx,[rbp+0]", "xor~rbx,<TAG>", "mov~rax,r15", "jnz~FOO"]], [0, 0, 344, 0, 0, 3, 1, 1, 21, 36, 0.009290238247148348, ["movsxd  rax, dword ptr [rax+10h]", "test    eax, eax", "js      short loc_8188"], ["movsxd~rax,[word ptr [rax+0]", "test~eax,eax", "js~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 44, 40, 0.002412038405876037, ["cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 344, 1, 0, 4, 1, 0, 27, 4, 0.23969437139166835, ["mov     rax, length", "xor     edx, edx", "add     rax, 2", "jb      loc_8968"], ["mov~rax,length", "xor~edx,edx", "add~rax,0", "jb~FOO"]], [1, 0, 344, 0, 0, 3, 1, 1, 22, 35, 0.03741512477759968, ["test    rax, rax", "mov     r12d, 0Ch", "jz      short loc_818E"], ["test~rax,rax", "mov~r12d,0", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 26, 36, 0.02774622243662564, ["jmp     loc_816B"], ["jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 45, 39, 0.0025754345559515094, ["mov     rbx, rax"], ["mov~rbx,rax"]], [0, 0, 344, 0, 0, 2, 1, 1, 29, 2, 0.012246930486609296, ["test    allocated, allocated", "jz      out_of_memory"], ["test~allocated,allocated", "jz~FOO"]], [1, 0, 344, 1, 0, 3, 0, 0, 23, 36, 0.0025546858384816093, ["add     rax, 0Ch", "mov     r12, rax", "jb      out_of_memory"], ["add~rax,0", "mov~r12,rax", "jb~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 24, 35, 0.0025754345559515102, ["jmp     short loc_818E"], ["jmp~FOO"]], [0, 0, 344, 0, 0, 4, 1, 1, 44, 38, 0.010838611288339739, ["cmp     result_0, [rbp+result]", "setz    r12b", "test    result_0, result_0", "jz      loc_7A90"], ["cmp~result_0,[rbp+0]", "setz~r12b", "test~result_0,result_0", "jz~FOO"]], [0, 1, 344, 0, 0, 1, 0, 0, 19, 35, 0.16783378202434862, ["mov     r12d, 12h"], ["mov~r12d,<STR>"]], [0, 0, 344, 0, 0, 2, 1, 1, 42, 37, 0.019044729047685737, ["test    r12b, r12b", "jnz     loc_7A90"], ["test~r12b,r12b", "jnz~FOO"]], [0, 0, 344, 0, 0, 7, 1, 1, 41, 38, 0.020043261075924745, ["cmp     allocated, rdx", "mov     rbx, rdx", "cmovnb  rbx, allocated", "cmp     result_0, [rbp+result]", "setz    r12b", "test    result_0, result_0", "jnz     loc_798C"], ["cmp~allocated,rdx", "mov~rbx,rdx", "cmovnb~rbx,allocated", "cmp~result_0,[rbp+0]", "setz~r12b", "test~result_0,result_0", "jnz~FOO"]], [1, 0, 344, 1, 0, 4, 0, 0, 20, 34, 0.21632612834119194, ["cmp     width_0, r12", "cmovnb  r12, width_0", "add     r12, 1", "jb      out_of_memory"], ["cmp~width_0,r12", "cmovnb~r12,width_0", "add~r12,0", "jb~FOO"]], [0, 0, 344, 0, 1, 5, 1, 2, 43, 36, 0.013731760580549111, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      out_of_memory"], ["mov~rsi,rbx", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [0, 1, 344, 0, 0, 2, 0, 1, 21, 33, 0.21363657583915593, ["cmp     r12, 2BCh", "ja      loc_8458"], ["cmp~r12,<STR>", "ja~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 22, 32, 0.20689842984080548, ["lea     rcx, [rbp+tmpbuf]"], ["lea~rcx,[rbp+0]"]], [0, 0, 344, 0, 0, 2, 0, 1, 37, 26, 0.016522463080250852, ["mov     result_0, r9", "jmp     loc_82E0"], ["mov~result_0,r9", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 36, 27, 0.019514168780442258, ["test    length, length", "jz      loc_88F8"], ["test~length,length", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 37, 27, 0.0023264499463126935, ["test    dl, dl", "jz      loc_88F8"], ["test~dl,dl", "jz~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.04304671573738348, ["mov     rax, [dp+50h]; jumptable 000000000000787E cases 5,6,13,14", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "mov     r9d, [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      loc_7C00"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "mov~r9d,[rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 31, 0.09337026605042947, ["cmp     eax, 2", "jz      loc_7C48"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.023930987172105362, ["mov     rax, [dp+50h]; jumptable 000000000000787E case 4", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movzx   r9d, word ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jnz     loc_79DE"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movzx~r9d,[ord ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jnz~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.023930987172105362, ["mov     rax, [dp+50h]; jumptable 000000000000787E case 2", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movzx   r9d, byte ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jnz     loc_79DE"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movzx~r9d,[yte ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jnz~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.023930987172105362, ["mov     rax, [dp+50h]; jumptable 000000000000787E case 1", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movsx   r9d, byte ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jnz     loc_79DE"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movsx~r9d,[yte ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jnz~FOO"]], [1, 0, 344, 1, 0, 2, 0, 0, 34, 30, 0.11343421100408188, ["sub     rsp, 8", "push    [rbp+var_388]"], ["sub~rsp,0", "push~[rbp+0]"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 31, 0.023677334101035834, ["cmp     eax, 2", "jnz     loc_79E7"], ["cmp~eax,0", "jnz~FOO"]], [2, 0, 344, 3, 1, 18, 1, 2, 23, 31, 0.21237609125285942, ["mov     rax, [dp+50h]", "sub     rsp, 10h", "mov     [rbp+maxlen], rcx", "mov     [rbp+fbp], rdx", "shl     rax, 5", "add     rax, [rbp+a.arg]", "fld     tbyte ptr [rax+10h]", "fld     st", "fstp    [rsp+3D0h+x.value]; x", "fstp    [rbp+n]", "call    rpl_isnanl", "test    eax, eax", "pop     r9", "mov     rdx, [rbp+fbp]", "mov     rcx, [rbp+maxlen]", "pop     r10", "fld     [rbp+n]", "jz      loc_84B8"], ["mov~rax,[dp+0]", "sub~rsp,0", "mov~[rbp+0],rcx", "mov~[rbp+0],rdx", "shl~rax,0", "add~rax,[rbp+0]", "fld~<TAG>,[byte ptr [rax+0]", "fld~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "fstp~<TAG>,[rbp+0]", "call~FOO", "test~eax,eax", "pop~r9", "mov~rdx,[rbp+0]", "mov~rcx,[rbp+0]", "pop~r10", "fld~<TAG>,[rbp+0]", "jz~FOO"]], [0, 0, 344, 0, 1, 6, 1, 2, 23, 32, 0.004901884502264204, ["mov     rdi, r12; size", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "mov     rdx, qword ptr [rbp+n]", "jnz     loc_81B3"], ["mov~rdi,r12", "call~FOO", "test~rax,rax", "mov~rcx,rax", "mov~rdx,[word ptr [rbp+0]", "jnz~FOO"]], [0, 1, 344, 0, 0, 6, 0, 1, 24, 30, 0.18053329391077014, ["fstp    st", "movzx   edi, byte ptr [dp+48h]", "lea     rax, [rcx+3]", "lea     esi, [rdi-41h]", "cmp     sil, 19h", "ja      loc_86B0"], ["fstp~<TAG>,<TAG>", "movzx~edi,[yte ptr [dp+0]", "lea~rax,[rcx+0]", "lea~esi,[rdi-41h]+0]", "cmp~sil,<STR>", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 34, 30, 0.07715313331569693, ["mov     r9d, [rbp+prefixes]", "jmp     loc_79F1"], ["mov~r9d,[rbp+0]", "jmp~FOO"]], [2, 0, 344, 0, 0, 3, 0, 0, 25, 29, 0.0892668181323042, ["mov     r8d, 414Eh", "mov     byte ptr [rcx+2], 4Eh ; 'N'", "mov     [rcx], r8w"], ["mov~r8d,0", "mov~[yte ptr [rcx+0],0", "mov~<TAG>,r8w"]], [1, 0, 344, 0, 0, 3, 0, 1, 36, 28, 0.13897879999792484, ["mov     rdi, [rbp+fbp]", "cmp     byte ptr [rdi+1], 0", "jnz     loc_7D48"], ["mov~rdi,[rbp+0]", "cmp~[yte ptr [rdi+0],0", "jnz~FOO"]], [0, 0, 344, 1, 0, 5, 1, 1, 26, 28, 0.21555453541027994, ["mov     r10d, dword ptr [rbp+has_width]", "mov     r8, p_0", "sub     r8, rcx", "test    r10d, r10d", "jz      short loc_82A0"], ["mov~r10d,[word ptr [rbp+0]", "mov~r8,p_0", "sub~r8,rcx", "test~r10d,r10d", "jz~FOO"]], [0, 0, 344, 0, 0, 3, 0, 1, 31, 29, 0.03134871850733727, ["mov     word ptr [rbp+retcount], r8w", "fldcw   word ptr [rbp+retcount]", "jmp     loc_822D"], ["mov~[ord ptr [rbp+0],r8w", "fldcw~[ord ptr [rbp+0]", "jmp~FOO"]], [2, 0, 344, 0, 0, 4, 0, 1, 25, 29, 0.0892668181323042, ["mov     edi, 616Eh", "mov     byte ptr [rcx+2], 6Eh ; 'n'", "mov     [rcx], di", "jmp     loc_822D"], ["mov~edi,0", "mov~[yte ptr [rcx+0],0", "mov~<TAG>,di", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 0, 37, 27, 0.12736989257351497, ["test    eax, eax", "jns     loc_7D00"], ["test~eax,eax", "jns~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 27, 28, 0.027590607055601374, ["cmp     rdx, r8", "jbe     short loc_82A0"], ["cmp~rdx,r8", "jbe~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 38, 36, 0.035149624188854825, ["test    allocated, allocated", "js      loc_7F00"], ["test~allocated,allocated", "js~FOO"]], [1, 0, 344, 1, 0, 4, 0, 0, 39, 36, 0.028100247428455828, ["lea     retcount_0, [allocated+allocated]", "mov     rdx, rax", "add     rdx, 0Ch", "jb      out_of_memory"], ["lea~retcount_0,<TAG>", "mov~rdx,rax", "add~rdx,0", "jb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 29, 29, 0.01612175347411338, ["cmp     rcx, p_0", "jnb     short loc_8283"], ["cmp~rcx,p_0", "jnb~FOO"]], [0, 0, 344, 2, 0, 3, 0, 0, 30, 31, 0.004645119123574174, ["mov     rdi, rcx", "sub     rdi, p_0", "add     rdi, q"], ["mov~rdi,rcx", "sub~rdi,p_0", "add~rdi,q"]], [0, 0, 344, 0, 1, 7, 1, 2, 36, 27, 0.01489628234854733, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "mov     qword ptr [rbp+n], r8", "mov     qword ptr [rbp+has_width], rcx", "call    _realloc", "test    memory, memory", "jz      out_of_memory"], ["mov~rsi,rbx", "mov~rdi,result_0", "mov~[word ptr [rbp+0],r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "test~memory,memory", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 35, 28, 0.014643407354382907, ["test    dl, dl", "jnz     loc_86F1"], ["test~dl,dl", "jnz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 30, 41, 0.018144753427428766, ["cmp     rax, 0Ch", "ja      loc_7FA0"], ["cmp~rax,0", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 29, 42, 0.036211699164345405, ["test    allocated, allocated", "jnz     loc_7F88"], ["test~allocated,allocated", "jnz~FOO"]], [2, 0, 344, 2, 0, 6, 0, 1, 31, 30, 0.004979692192776334, ["sub     p_0, 1", "movzx   r9d, byte ptr [p_0]", "sub     q, 1", "cmp     rdi, q", "mov     [q], r9b", "jnz     short loc_826C"], ["sub~p_0,0", "movzx~r9d,<TAG>", "sub~q,0", "cmp~rdi,q", "mov~<TAG>,r9b", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 32, 29, 0.005314265261978494, ["mov     p_0, rcx"], ["mov~p_0,rcx"]], [0, 0, 344, 0, 0, 2, 1, 1, 30, 28, 0.01746004575092202, ["test    pad, pad", "jz      short loc_82A0"], ["test~pad,pad", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 42, 38, 0.005565843461301049, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [0, 0, 344, 1, 0, 1, 0, 0, 31, 30, 0.004645119123574174, ["add     pad, p_0"], ["add~pad,p_0"]], [1, 1, 344, 1, 0, 4, 0, 1, 32, 29, 0.004979692192776334, ["add     p_0, 1", "mov     byte ptr [p_0-1], 20h ; ' '", "cmp     p_0, rdx", "jnz     short loc_828B"], ["add~p_0,0", "mov~[yte ptr [p_0-1]+0],<STR>", "cmp~p_0,rdx", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 33, 28, 0.005314265261978494, ["nop     dword ptr [rax+rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 344, 0, 1, 5, 1, 2, 43, 37, 0.018488404060524006, ["mov     rdi, rbx; size", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "jz      out_of_memory"], ["mov~rdi,rbx", "call~FOO", "test~rax,rax", "mov~rcx,rax", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 27, 27, 0.2202385583791102, ["cmp     r12, r8", "jbe     loc_84B0; jumptable 000000000000787E default case"], ["cmp~r12,r8", "jbe~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 44, 36, 0.018323711115606666, ["test    length, length", "jz      loc_7DB0"], ["test~length,length", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 45, 36, 0.0023264499463126935, ["test    r12b, r12b", "jz      loc_7DB0"], ["test~r12b,r12b", "jz~FOO"]], [0, 0, 344, 2, 0, 9, 1, 1, 28, 26, 0.22030469491604548, ["mov     rdx, allocated", "mov     rax, length", "xor     esi, esi", "sub     rdx, length", "add     rax, r8", "setb    sil", "cmp     rdx, r8", "mov     r12, rax", "ja      short loc_82E0"], ["mov~rdx,allocated", "mov~rax,length", "xor~esi,esi", "sub~rdx,length", "add~rax,r8", "setb~sil", "cmp~rdx,r8", "mov~r12,rax", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 29, 27, 0.046178864318949284, ["test    rsi, rsi", "jz      loc_85FF"], ["test~rsi,rsi", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 30, 27, 0.005322046031029707, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "jnz     out_of_memory"], ["cmp~allocated,0", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 31, 26, 0.0025754345559515102, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.052272503280891024, ["mov     rax, [dp+50h]; jumptable 000000000000787E case 12", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "fld     tbyte ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      loc_8390"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "fld~<TAG>,[byte ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 8, 0, 1, 3, 0, 2, 12, -1, 0.00018673845722911252, ["mov     rdi, result_0; ptr", "call    _free", "jmp     loc_74C3"], ["mov~rdi,result_0", "call~FOO", "jmp~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 11, -1, 0.002427599943978463, ["test    result_0, result_0", "jnz     loc_7F20"], ["test~result_0,result_0", "jnz~FOO"]], [0, 0, 344, 0, 1, 7, 1, 2, 15, 25, 0.014919624655700969, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "mov     qword ptr [rbp+n], cp_0", "mov     qword ptr [rbp+has_width], n_0", "call    _realloc", "test    memory, memory", "jz      loc_7F20"], ["mov~rsi,rbx", "mov~rdi,result_0", "mov~[word ptr [rbp+0],cp_0", "mov~[word ptr [rbp+0],n_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [0, 0, 344, 0, 1, 5, 1, 2, 19, 27, 0.014919624655700969, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      short loc_7F20"], ["mov~rsi,rbx", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 31, 0.026925999699143662, ["cmp     eax, 2", "jnz     loc_7F70"], ["cmp~eax,0", "jnz~FOO"]], [0, 0, 344, 0, 1, 9, 0, 2, 29, 25, 0.22322248331025038, ["lea     rdi, [result_0+length]; dest", "mov     rsi, rcx; src", "mov     rdx, r8; n", "mov     qword ptr [rbp+has_width], rcx", "call    _memcpy", "mov     rcx, qword ptr [rbp+has_width]", "lea     rax, [rbp+tmpbuf]", "cmp     rcx, rax", "jz      loc_7D84"], ["lea~rdi,<TAG>", "mov~rsi,rcx", "mov~rdx,r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "lea~rax,[rbp+0]", "cmp~rcx,rax", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 30, 26, 0.03885716064175783, ["cmp     allocated, rax", "jnb     loc_82E0"], ["cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 4, 0, 1, 37, 26, 0.015102472728404476, ["mov     result_0, memory", "mov     rcx, qword ptr [rbp+has_width]", "mov     r8, qword ptr [rbp+n]", "jmp     loc_82E0"], ["mov~result_0,memory", "mov~rcx,[word ptr [rbp+0]", "mov~r8,[word ptr [rbp+0]", "jmp~FOO"]], [0, 0, 344, 0, 1, 10, 0, 2, 38, 26, 0.0013266211232318202, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "mov     qword ptr [rbp+n], r8", "mov     qword ptr [rbp+has_width], rcx", "call    _memcpy", "mov     rcx, qword ptr [rbp+has_width]", "mov     result_0, rax", "mov     r8, qword ptr [rbp+n]", "jmp     loc_82E0"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "mov~[word ptr [rbp+0],r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "mov~result_0,rax", "mov~r8,[word ptr [rbp+0]", "jmp~FOO"]], [0, 0, 344, 0, 1, 3, 0, 2, 30, 25, 0.0, ["mov     rdi, rcx; ptr", "call    _free", "jmp     loc_7D84"], ["mov~rdi,rcx", "call~FOO", "jmp~FOO"]], [0, 0, 344, 0, 1, 7, 1, 2, 18, 28, 0.01954529185664711, ["mov     rdi, rbx; size", "mov     byte ptr [rbp+has_width], dl", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "movzx   edx, byte ptr [rbp+has_width]", "jz      out_of_memory"], ["mov~rdi,rbx", "mov~[yte ptr [rbp+0],dl", "call~FOO", "test~rax,rax", "mov~rcx,rax", "movzx~edx,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 344, 0, 0, 4, 1, 1, 17, 29, 0.03613000108930767, ["cmp     result_0, [rbp+result]", "setz    dl", "test    result_0, result_0", "jz      loc_8320"], ["cmp~result_0,[rbp+0]", "setz~dl", "test~result_0,result_0", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 18, 28, 0.014670640046062153, ["test    dl, dl", "jnz     loc_8320"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 19, 27, 0.019514168780442258, ["test    length, length", "jz      loc_8450"], ["test~length,length", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 20, 27, 0.0023264499463126935, ["test    dl, dl", "jz      loc_8450"], ["test~dl,dl", "jz~FOO"]], [0, 0, 344, 0, 1, 6, 0, 2, 21, 26, 0.0013266211232318202, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "call    _memcpy", "mov     result_0, rax", "jmp     loc_7D7F"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "call~FOO", "mov~result_0,rax", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 16, 24, 0.016522463080250852, ["mov     result_0, r9", "jmp     loc_75CB"], ["mov~result_0,r9", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 15, 25, 0.019514168780442258, ["test    length, length", "jz      loc_8370"], ["test~length,length", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 16, 25, 0.0023264499463126935, ["test    dl, dl", "jz      loc_8370"], ["test~dl,dl", "jz~FOO"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.05121431868992604, ["mov     rax, [dp+50h]; jumptable 000000000000787E case 11", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movsd   xmm0, qword ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      loc_8380"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movsd~xmm0,[word ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 33, 31, 0.02577833626408972, ["cmp     eax, 2", "jnz     loc_7F30"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 344, 1, 0, 3, 0, 1, 33, 31, 0.023436324779674573, ["sub     rsp, 8", "push    [rbp+var_388]", "jmp     loc_7B95"], ["sub~rsp,0", "push~[rbp+0]", "jmp~FOO"]], [0, 0, 344, 0, 0, 3, 0, 0, 34, 31, 7.780769051213022e-06, ["mov     eax, [rbp+prefixes+4]", "push    [rbp+var_388]", "push    rax"], ["mov~eax,[rbp+0]", "push~[rbp+0]", "push~rax"]], [2, 0, 344, 2, 0, 5, 0, 1, 33, 31, 0.023346845935585617, ["sub     rsp, 8", "push    [rbp+var_388]", "sub     rsp, 10h", "fstp    [rsp+3E0h+var_3E0]", "jmp     loc_7C5B"], ["sub~rsp,0", "push~[rbp+0]", "sub~rsp,0", "fstp~<TAG>,<TAG>", "jmp~FOO"]], [0, 0, 10, 0, 0, 2, 0, 1, 40, -1, 0.017432813059242776, ["cmp     result_0, [rbp+result]", "jz      short loc_83C2"], ["cmp~result_0,[rbp+0]", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 41, -1, 0.0023497922534663324, ["test    result_0, result_0", "jnz     loc_8490"], ["test~result_0,result_0", "jnz~FOO"]], [1, 0, 359, 1, 1, 22, 2, 2, 0, 31, 0.0, ["push    rbp", "mov     rbp, rsp", "push    r15", "push    r14", "push    r13", "push    r12", "mov     r12, format", "push    rbx", "lea     rbx, [rbp+a]", "mov     r13, args", "sub     rsp, 398h", "mov     [rbp+lengthp], lengthp_0", "lea     lengthp_0, [rbp+d]; d", "mov     [rbp+result], resultbuf_0", "mov     format, rbx; a", "mov     resultbuf_0, format; format", "mov     rax, fs:28h", "mov     [rbp+var_38], rax", "xor     eax, eax", "call    printf_parse", "test    eax, eax", "js      loc_8410"], ["push~rbp", "mov~rbp,rsp", "push~r15", "push~r14", "push~r13", "push~r12", "mov~r12,format", "push~rbx", "lea~rbx,[rbp+0]", "mov~r13,args", "sub~rsp,0", "mov~[rbp+0],lengthp_0", "lea~lengthp_0,[rbp+0]", "mov~[rbp+0],resultbuf_0", "mov~format,rbx", "mov~resultbuf_0,format", "mov~rax,<TAG>", "mov~[rbp+0],rax", "xor~eax,eax", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 41, -1, 0.01057017475607289, ["mov     rax, [rbp+buf_malloced]", "test    rax, rax", "jz      short loc_83D6"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 8, 0, 1, 3, 0, 2, 42, -1, 0.0, ["mov     rdi, result_0; ptr", "call    _free", "jmp     loc_83C2"], ["mov~rdi,result_0", "call~FOO", "jmp~FOO"]], [0, 0, 6, 0, 1, 2, 0, 1, 42, -1, 0.0, ["mov     rdi, rax; ptr", "call    _free"], ["mov~rdi,rax", "call~FOO"]], [0, 0, 357, 0, 1, 5, 1, 2, 1, 30, 0.00275439224412941, ["mov     rsi, rbx; a", "mov     rdi, args; args", "call    printf_fetchargs", "test    eax, eax", "js      loc_86C1"], ["mov~rsi,rbx", "mov~rdi,args", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 42, -1, 0.005917274863447503, ["mov     rdi, [rbp+d.dir]; ptr", "call    _free", "mov     rdi, [rbp+a.arg]; ptr", "test    rdi, rdi", "jz      short loc_83F3"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~rdi,[rbp+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 43, -1, 0.0, ["call    _free"], ["call~FOO"]], [3, 0, 353, 2, 0, 7, 0, 0, 2, 29, 0.005446538335849115, ["mov     rax, [rbp+d.max_width_length]", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "add     rax, 7", "cmp     rax, 6", "cmovbe  rax, rdx", "add     rax, [rbp+d.max_precision_length]", "jb      out_of_memory_1"], ["mov~rax,[rbp+0]", "mov~rdx,0", "add~rax,0", "cmp~rax,0", "cmovbe~rax,rdx", "add~rax,[rbp+0]", "jb~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 33, 32, 1.5561538102426044e-05, ["nop"], ["nop"]], [1, 0, 3, 0, 1, 4, 1, 2, 43, -1, 0.0012021288184124118, ["call    ___errno_location", "xor     r15d, r15d", "mov     dword ptr [rax], 4Bh ; 'K'", "jmp     loc_7502"], ["call~FOO", "xor~r15d,r15d", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 0, 33, 31, 0.05123701259965857, ["push    [rbp+var_388]", "push    r9"], ["push~[rbp+0]", "push~r9"]], [2, 0, 344, 2, 0, 8, 0, 1, 32, 32, 0.04609988951307933, ["mov     rax, [dp+50h]; jumptable 000000000000787E case 3", "lea     rdi, [result_0+length]", "shl     rax, 5", "add     rax, [rbp+a.arg]", "movsx   r9d, word ptr [rax+10h]", "mov     eax, dword ptr [rbp+n]", "cmp     eax, 1", "jz      short loc_7C00"], ["mov~rax,[dp+0]", "lea~rdi,<TAG>", "shl~rax,0", "add~rax,[rbp+0]", "movsx~r9d,[ord ptr [rax+0]", "mov~eax,[word ptr [rbp+0]", "cmp~eax,0", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 33, 32, 1.5561538102426044e-05, ["jmp     loc_7C00"], ["jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 33, 32, 1.5561538102426044e-05, ["jmp     loc_7C00"], ["jmp~FOO"]], [1, 0, 352, 1, 0, 3, 0, 0, 3, 28, 0.008076438275159116, ["mov     rdi, rax", "add     rdi, 6; size", "jb      out_of_memory_1"], ["mov~rdi,rax", "add~rdi,0", "jb~FOO"]], [0, 0, 344, 0, 0, 3, 0, 1, 33, 31, 0.02291274386227001, ["push    [rbp+var_388]", "push    arg", "jmp     loc_7C08"], ["push~[rbp+0]", "push~arg", "jmp~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 1, -1, 2.3342307153639065e-05, ["xor     r15d, r15d", "jmp     loc_7502"], ["xor~r15d,r15d", "jmp~FOO"]], [1, 0, 351, 0, 0, 2, 0, 0, 4, 27, 0.01073746129067397, ["cmp     rdi, 0F9Fh", "jbe     loc_7530"], ["cmp~rdi,0", "jbe~FOO"]], [1, 0, 349, 0, 0, 2, 0, 1, 5, 28, 0.00012449230481940835, ["cmp     buf_memsize, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory_1"], ["cmp~buf_memsize,0", "jz~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 16, 30, 0.01400538429218344, ["add     allocated, allocated", "cmp     allocated, rax", "jnb     loc_7E81"], ["add~allocated,allocated", "cmp~allocated,rax", "jnb~FOO"]], [0, 0, 348, 0, 1, 4, 1, 2, 6, 27, 0.0026999268607709186, ["call    _malloc", "test    rax, rax", "mov     [rbp+buf], rax", "jz      out_of_memory_1"], ["call~FOO", "test~rax,rax", "mov~[rbp+0],rax", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 16, 31, 0.0024937364809137735, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 15, 31, 0.018370395729913943, ["cmp     rax, 0Ch", "ja      loc_8432"], ["cmp~rax,0", "ja~FOO"]], [0, 0, 347, 0, 0, 1, 0, 0, 7, 26, 0.005306484492927281, ["mov     [rbp+buf_malloced], buf_0"], ["mov~[rbp+0],buf_0"]], [0, 0, 344, 0, 0, 2, 0, 1, 17, 30, 0.0025754345559515102, ["mov     rbx, memory_size", "jmp     loc_7E81"], ["mov~rbx,memory_size", "jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 34, 33, 6.224615240970417e-05, ["nop     dword ptr [rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 344, 0, 0, 2, 1, 1, 34, 37, 0.019506388011391044, ["test    length, length", "jz      loc_8448"], ["test~length,length", "jz~FOO"]], [1, 0, 346, 0, 0, 3, 1, 1, 6, 25, 0.023902522525326403, ["xor     ebx, ebx", "cmp     [rbp+result], 0", "jz      short loc_7458"], ["xor~ebx,ebx", "cmp~[rbp+0],0", "jz~FOO"]], [4, 0, 347, 2, 0, 8, 2, 1, 5, 26, 0.013266211232318203, ["add     rax, 24h", "mov     [rbp+buf_malloced], 0", "and     rax, 0FFFFFFFFFFFFFFF0h", "sub     rsp, rax", "lea     rax, [rsp+3C0h+flags+3]", "and     rax, 0FFFFFFFFFFFFFFF0h", "mov     [rbp+buf], rax", "jmp     loc_7442"], ["add~rax,0", "mov~[rbp+0],0", "and~rax,0", "sub~rsp,rax", "lea~rax,[rsp+0]", "and~rax,0", "mov~[rbp+0],rax", "jmp~FOO"]], [1, 0, 344, 1, 0, 3, 0, 0, 34, 32, 0.0046171083549897745, ["sub     rsp, 8", "push    [rbp+var_388]", "push    r9"], ["sub~rsp,0", "push~[rbp+0]", "push~r9"]], [0, 0, 344, 0, 0, 2, 0, 1, 20, 26, 0.016522463080250852, ["mov     result_0, rcx", "jmp     loc_7D7F"], ["mov~result_0,rcx", "jmp~FOO"]], [0, 0, 345, 0, 0, 2, 0, 0, 7, 25, 0.0, ["mov     rax, [rbp+lengthp]", "mov     rbx, [rax]"], ["mov~rax,[rbp+0]", "mov~rbx,<TAG>"]], [0, 0, 344, 0, 0, 2, 0, 0, 35, 31, 0.008099780582312756, ["mov     eax, [rbp+prefixes+4]", "push    rax"], ["mov~eax,[rbp+0]", "push~rax"]], [1, 0, 344, 1, 0, 4, 0, 1, 34, 32, 0.0004792953735547249, ["sub     rsp, 8", "push    [rbp+var_388]", "push    arg", "jmp     loc_7C54"], ["sub~rsp,0", "push~[rbp+0]", "push~arg", "jmp~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 22, 33, 0.00473848835218873, ["cmp     r12, 0FFFFFFFFFFFFFFFFh", "mov     qword ptr [rbp+n], width_0", "jz      out_of_memory"], ["cmp~r12,0", "mov~[word ptr [rbp+0],width_0", "jz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 24, -1, 8.558845956334324e-05, ["jmp     out_of_memory"], ["jmp~FOO"]], [1, 0, 344, 0, 0, 11, 1, 1, 7, 24, 0.029115637789639128, ["mov     args, [rbp+d.dir]", "mov     r8, cp_0", "lea     rax, [rbp+retcount]", "xor     r10d, r10d", "mov     r15, [rbp+result]", "mov     [rbp+i], 0", "mov     [rbp+var_388], rax", "mov     cp_0, r10", "mov     rcx, [dp+0]", "cmp     rcx, cp_0", "jz      loc_7DA1"], ["mov~args,[rbp+0]", "mov~r8,cp_0", "lea~rax,[rbp+0]", "xor~r10d,r10d", "mov~r15,[rbp+0]", "mov~[rbp+0],0", "mov~[rbp+0],rax", "mov~cp_0,r10", "mov~rcx,[dp+0]", "cmp~rcx,cp_0", "jz~FOO"]], [0, 0, 344, 2, 0, 5, 0, 0, 8, 25, 0.04840675785727995, ["sub     rcx, cp_0", "mov     rax, length", "add     rax, n_0", "mov     r14, rax", "jnb     loc_7560"], ["sub~rcx,cp_0", "mov~rax,length", "add~rax,n_0", "mov~r14,rax", "jnb~FOO"]], [1, 1, 344, 2, 0, 6, 0, 1, 15, 24, 0.5391320811482341, ["mov     r8, [dp+8]", "add     dp, 58h", "mov     rcx, [dp+0]", "add     [rbp+i], 1", "cmp     rcx, cp_0", "jnz     loc_7495"], ["mov~r8,[dp+0]", "add~dp,<STR>", "mov~rcx,[dp+0]", "add~[rbp+0],0", "cmp~rcx,cp_0", "jnz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 9, 25, 0.005371324235020722, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "jz      loc_7EF8"], ["cmp~allocated,0", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 27, -1, 7.586249824932697e-05, ["fstp    st"], ["fstp~<TAG>,<TAG>"]], [0, 0, 344, 0, 0, 5, 0, 0, 26, 34, 0.031850578111140504, ["fldz", "fxch    st(1)", "fucomi  st, st(1)", "fstp    st(1)", "jbe     short loc_84AE"], ["fldz~<TAG>", "fxch~<TAG>,<TAG>", "fucomi~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "jbe~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 12, -1, 0.0, ["call    _abort; jumptable 000000000000787E default case"], ["call~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 11, 20, 0.44815284542724204, ["cmp     rdx, 0FFFFFFFFFFFFFFFFh", "jz      loc_84B0; jumptable 000000000000787E default case"], ["cmp~rdx,0", "jz~FOO"]], [2, 0, 344, 2, 0, 4, 0, 1, 25, 7, 0.002536530710695445, ["shl     rax, 5", "add     rax, r8", "cmp     dword ptr [rax], 5", "jnz     loc_84B0; jumptable 000000000000787E default case"], ["shl~rax,0", "add~rax,r8", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 344, 2, 0, 4, 0, 1, 27, 6, 0.0023497922534663324, ["shl     rax, 5", "add     r8, rax", "cmp     dword ptr [r8], 5", "jnz     loc_84B0; jumptable 000000000000787E default case"], ["shl~rax,0", "add~r8,rax", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 11, 28, 0.05127137766296821, ["cmp     rdx, 0FFFFFFFFFFFFFFFFh", "jnz     loc_84B0; jumptable 000000000000787E default case"], ["cmp~rdx,0", "jnz~FOO"]], [1, 1, 344, 1, 0, 4, 0, 1, 13, 27, 0.013001665084576959, ["mov     eax, edi", "sub     eax, 12h", "cmp     eax, 4; switch 5 cases", "ja      loc_84B0; jumptable 000000000000787E default case"], ["mov~eax,edi", "sub~eax,<STR>", "cmp~eax,0", "ja~FOO"]], [0, 0, 344, 0, 0, 5, 0, 0, 27, 33, 0.02976727719767822, ["fld     st", "fadd    st, st(1)", "fucomip st, st(1)", "fstp    st", "jp      short loc_84B0; jumptable 000000000000787E default case"], ["fld~<TAG>,<TAG>", "fadd~<TAG>,<TAG>", "fucomip~<TAG>,<TAG>", "fstp~<TAG>,<TAG>", "jp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 28, 32, 0.030018206999579838, ["jnz     short loc_84B0; jumptable 000000000000787E default case"], ["jnz~FOO"]], [0, 0, 10, 0, 0, 2, 0, 1, 10, -1, 0.02313611677378192, ["cmp     result_0, [rbp+result]", "jz      short loc_74C3"], ["cmp~result_0,[rbp+0]", "jz~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 13, 27, 0.0025832153250027233, ["cmp     allocated, 0FFFFFFFFFFFFFFFFh", "jnz     out_of_memory"], ["cmp~allocated,0", "jnz~FOO"]], [0, 0, 344, 0, 1, 11, 1, 2, 14, 26, 0.01954529185664711, ["mov     rdi, rbx; size", "mov     [rbp+fbp], cp_0", "mov     byte ptr [rbp+n], dl", "mov     qword ptr [rbp+has_width], n_0", "call    _malloc", "test    rax, rax", "mov     r9, rax", "mov     rcx, qword ptr [rbp+has_width]", "movzx   edx, byte ptr [rbp+n]", "mov     r8, [rbp+fbp]", "jz      out_of_memory"], ["mov~rdi,rbx", "mov~[rbp+0],cp_0", "mov~[yte ptr [rbp+0],dl", "mov~[word ptr [rbp+0],n_0", "call~FOO", "test~rax,rax", "mov~r9,rax", "mov~rcx,[word ptr [rbp+0]", "movzx~edx,[yte ptr [rbp+0]", "mov~r8,[rbp+0]", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 11, 29, 0.013927576601671309, ["js      out_of_memory"], ["js~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 12, 29, 0.0024937364809137735, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 40, -1, 0.0002632493528993739, ["jmp     out_of_memory"], ["jmp~FOO"]], [0, 0, 344, 0, 0, 1, 0, 1, 30, 41, 0.01606728809075489, ["js      out_of_memory"], ["js~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 31, 41, 0.01490795350212415, ["cmp     memory_size, 0FFFFFFFFFFFFFFFFh", "jz      out_of_memory"], ["cmp~memory_size,0", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 32, 40, 0.014900172733072937, ["test    rdx, rdx", "jnz     out_of_memory"], ["test~rdx,rdx", "jnz~FOO"]], [0, 0, 344, 0, 1, 7, 1, 2, 33, 38, 0.01965681621304783, ["mov     rdi, rbx; size", "mov     byte ptr [rbp+fbp], dl", "call    _malloc", "test    rax, rax", "mov     rcx, rax", "movzx   edx, byte ptr [rbp+fbp]", "jz      out_of_memory"], ["mov~rdi,rbx", "mov~[yte ptr [rbp+0],dl", "call~FOO", "test~rax,rax", "mov~rcx,rax", "movzx~edx,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 20, 0, 1, 5, 1, 2, 17, -1, 0.0029450210858841287, ["mov     rsi, rbx; size", "mov     rdi, result_0; ptr", "call    _realloc", "test    memory, memory", "jz      out_of_memory"], ["mov~rsi,rbx", "mov~rdi,result_0", "call~FOO", "test~memory,memory", "jz~FOO"]], [0, 0, 344, 0, 1, 11, 1, 2, 35, 28, 0.019564743779275143, ["mov     rdi, rbx; size", "mov     byte ptr [rbp+fbp], dl", "mov     qword ptr [rbp+n], r8", "mov     qword ptr [rbp+has_width], rcx", "call    _malloc", "test    rax, rax", "mov     r9, rax", "mov     rcx, qword ptr [rbp+has_width]", "mov     r8, qword ptr [rbp+n]", "movzx   edx, byte ptr [rbp+fbp]", "jz      out_of_memory"], ["mov~rdi,rbx", "mov~[yte ptr [rbp+0],dl", "mov~[word ptr [rbp+0],r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "test~rax,rax", "mov~r9,rax", "mov~rcx,[word ptr [rbp+0]", "mov~r8,[word ptr [rbp+0]", "movzx~edx,[yte ptr [rbp+0]", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 24, 40, 0.009679276699709001, ["cmp     r8, digitp", "jz      out_of_memory"], ["cmp~r8,digitp", "jz~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 26, 40, 0.00249762686543938, ["cmp     r8, digitp", "jz      out_of_memory"], ["cmp~r8,digitp", "jz~FOO"]], [1, 0, 344, 1, 0, 6, 0, 1, 18, 17, 0.008449915189617341, ["mov     rax, [dp+50h]", "mov     r8, [rbp+a.arg]", "shl     rax, 5", "mov     eax, [r8+rax]", "mov     dword ptr [rbp+has_width], eax", "jmp     loc_7643"], ["mov~rax,[dp+0]", "mov~r8,[rbp+0]", "shl~rax,0", "mov~eax,<TAG>", "mov~[word ptr [rbp+0],eax", "jmp~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 11, -1, 0.01605561693717807, ["mov     rax, [rbp+buf_malloced]", "test    rax, rax", "jz      short out_of_memory_1"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 6, 0, 1, 2, 0, 1, 12, -1, 0.0, ["mov     rdi, rax; ptr", "call    _free"], ["mov~rdi,rax", "call~FOO"]], [2, 0, 344, 0, 0, 10, 2, 1, 24, 36, 0.029843139695927546, ["fnstcw  word ptr [rbp+retcount]", "movzx   r8d, word ptr [rbp+retcount]", "mov     eax, r8d", "or      ah, 3", "mov     word ptr [rbp+retcount], ax", "fldcw   word ptr [rbp+retcount]", "fxam", "fnstsw  ax", "test    ah, 2", "jz      loc_8697"], ["fnstcw~[ord ptr [rbp+0]", "movzx~r8d,[ord ptr [rbp+0]", "mov~eax,r8d", "or~ah,0", "mov~[ord ptr [rbp+0],ax", "fldcw~[ord ptr [rbp+0]", "fxam~<TAG>", "fnstsw~ax", "test~ah,0", "jz~FOO"]], [1, 0, 344, 0, 0, 3, 0, 0, 25, 35, 0.02087191297987893, ["fchs", "lea     rdi, [rcx+1]", "mov     byte ptr [rcx], 2Dh ; '-'"], ["fchs~<TAG>", "lea~rdi,[rcx+0]", "mov~<TAG>,0"]], [0, 0, 5, 0, 1, 5, 1, 2, 3, -1, 0.011356032430245406, ["mov     rdi, [rbp+d.dir]; ptr", "call    _free", "mov     rdi, [rbp+a.arg]; ptr", "test    rdi, rdi", "jz      short loc_74F4"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~rdi,[rbp+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    _free"], ["call~FOO"]], [1, 0, 3, 0, 1, 3, 1, 1, 4, -1, 0.006314094085059367, ["call    ___errno_location", "xor     r15d, r15d", "mov     dword ptr [rax], 0Ch"], ["call~FOO", "xor~r15d,r15d", "mov~<TAG>,0"]], [0, 0, 3, 0, 0, 3, 0, 1, 15, -1, 0.0005602153716873376, ["mov     rax, [rbp+lengthp]", "mov     [rax], length", "jmp     loc_7502"], ["mov~rax,[rbp+0]", "mov~<TAG>,length", "jmp~FOO"]], [1, 0, 3, 0, 1, 4, 1, 2, 3, -1, 7.00269214609172e-05, ["call    ___errno_location", "xor     r15d, r15d", "mov     dword ptr [rax], 16h", "jmp     loc_7502"], ["call~FOO", "xor~r15d,r15d", "mov~<TAG>,0", "jmp~FOO"]], [1, 1, 344, 1, 0, 5, 0, 1, 29, 31, 0.030344999299730786, ["movzx   esi, byte ptr [dp+48h]", "lea     rax, [p_0+3]", "sub     esi, 41h ; 'A'", "cmp     sil, 19h", "ja      loc_8684"], ["movzx~esi,[yte ptr [dp+0]", "lea~rax,[p_0+0]", "sub~esi,0", "cmp~sil,<STR>", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 39, 25, 0.23597775737487223, ["lea     r12, [rcx+length]", "jmp     short loc_7D84"], ["lea~r12,<TAG>", "jmp~FOO"]], [1, 1, 344, 0, 0, 3, 0, 0, 30, 30, 0.01417267082678452, ["mov     esi, 4E49h", "mov     byte ptr [rdi+2], 46h ; 'F'", "mov     [rdi], si"], ["mov~esi,<STR>", "mov~[yte ptr [rdi+0],0", "mov~<TAG>,si"]], [0, 0, 0, 0, 0, 8, 0, 0, 3, -1, 0.0, ["lea     rsp, [rbp-28h]", "pop     rbx", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "pop     rbp", "retn"], ["lea~rsp,[rbp-28h]+0]", "pop~rbx", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "pop~rbp", "retn"]], [2, 0, 344, 0, 0, 4, 0, 1, 30, 30, 0.01417267082678452, ["mov     r11d, 6E69h", "mov     byte ptr [rdi+2], 66h ; 'f'", "mov     [rdi], r11w", "jmp     loc_8527"], ["mov~r11d,0", "mov~[yte ptr [rdi+0],0", "mov~<TAG>,r11w", "jmp~FOO"]], [0, 0, 344, 0, 0, 3, 0, 1, 9, 22, 0.5744775213582111, ["mov     rax, [rbp+i]", "cmp     [rbp+d.count], rax", "jz      loc_853A"], ["mov~rax,[rbp+0]", "cmp~[rbp+0],rax", "jz~FOO"]], [0, 0, 37, 0, 0, 2, 0, 0, 11, -1, 0.048287452731828016, ["cmp     allocated, r12", "jnb     short loc_859A"], ["cmp~allocated,r12", "jnb~FOO"]], [1, 0, 344, 0, 0, 4, 0, 1, 10, 21, 0.501423880736372, ["movzx   eax, byte ptr [dp+48h]", "mov     rdx, [dp+50h]", "cmp     al, 25h ; '%'", "jz      loc_7D58"], ["movzx~eax,[yte ptr [dp+0]", "mov~rdx,[dp+0]", "cmp~al,0", "jz~FOO"]], [1, 0, 28, 0, 0, 1, 0, 0, 14, -1, 0.010807488212134887, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [0, 0, 344, 0, 0, 2, 0, 0, 9, 24, 0.04103577597609748, ["cmp     allocated, rax", "jnb     short loc_75CB"], ["cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 10, 30, 0.034297629977747, ["test    allocated, allocated", "jnz     loc_7ED0"], ["test~allocated,allocated", "jnz~FOO"]], [1, 0, 344, 1, 0, 4, 0, 0, 12, 27, 0.051259706509391385, ["mov     rax, length", "add     rax, 1", "mov     r12, rax", "jnb     loc_7E60"], ["mov~rax,length", "add~rax,0", "mov~r12,rax", "jnb~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 11, 29, 0.018370395729913943, ["cmp     rax, 0Ch", "ja      loc_7EE2"], ["cmp~rax,0", "ja~FOO"]], [1, 0, 344, 0, 0, 1, 0, 0, 12, 28, 0.013989822754081014, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [0, 0, 344, 0, 0, 1, 0, 0, 14, 26, 0.0025754345559515102, ["mov     r12, allocated"], ["mov~r12,allocated"]], [1, 0, 344, 0, 0, 1, 0, 0, 14, 25, 0.056597314078523524, ["mov     byte ptr [result_0+length], 25h ; '%'"], ["mov~<TAG>,0"]], [0, 0, 344, 0, 0, 2, 0, 0, 13, 26, 0.046676833538226915, ["cmp     allocated, rax", "jnb     loc_7D7F"], ["cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 20, 26, 0.0151180342665069, ["mov     result_0, memory", "jmp     loc_7D7F"], ["mov~result_0,memory", "jmp~FOO"]], [0, 0, 344, 0, 0, 4, 1, 1, 13, 27, 0.03613000108930767, ["cmp     result_0, [rbp+result]", "setz    dl", "test    result_0, result_0", "jz      loc_7DC0"], ["cmp~result_0,[rbp+0]", "setz~dl", "test~result_0,result_0", "jz~FOO"]], [0, 0, 344, 1, 0, 3, 0, 0, 12, 28, 0.01400538429218344, ["add     allocated, allocated", "cmp     allocated, rax", "jnb     loc_757D"], ["add~allocated,allocated", "cmp~allocated,rax", "jnb~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 13, 28, 0.0025754345559515102, ["mov     rbx, memory_size", "jmp     loc_757D"], ["mov~rbx,memory_size", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 1, 1, 14, 26, 0.014670640046062153, ["test    dl, dl", "jnz     loc_7DC0"], ["test~dl,dl", "jnz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 0, 18, -1, 0.0004979692192776334, ["mov     result_0, memory"], ["mov~result_0,memory"]], [0, 0, 344, 0, 0, 4, 0, 1, 15, 25, 0.0016631393846967834, ["mov     rax, [rdx+10h]; jumptable 0000000000007E5C cases 3,4", "mov     r12, length", "mov     [rax], length", "jmp     loc_7D84"], ["mov~rax,[rdx+0]", "mov~r12,length", "mov~<TAG>,length", "jmp~FOO"]], [1, 0, 10, 0, 0, 3, 0, 0, 12, -1, 0.018043603429762998, ["cmp     allocated, r12", "mov     byte ptr [result_0+length], 0", "jbe     short loc_85BF"], ["cmp~allocated,r12", "mov~<TAG>,0", "jbe~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 8, 23, 0.5205178879880488, ["mov     r14, length", "jmp     loc_75DA"], ["mov~r14,length", "jmp~FOO"]], [0, 0, 9, 0, 0, 2, 0, 1, 13, -1, 0.002528749941644232, ["cmp     result_0, [rbp+result]", "jz      short loc_85BF"], ["cmp~result_0,[rbp+0]", "jz~FOO"]], [0, 0, 8, 0, 1, 5, 1, 1, 14, -1, 0.0, ["mov     rdi, result_0; ptr", "mov     rsi, r12; size", "call    _realloc", "test    memory, memory", "cmovnz  result_0, memory"], ["mov~rdi,result_0", "mov~rsi,r12", "call~FOO", "test~memory,memory", "cmovnz~result_0,memory"]], [0, 0, 344, 0, 0, 3, 0, 0, 16, 24, 0.0151180342665069, ["mov     rcx, qword ptr [rbp+has_width]", "mov     r8, qword ptr [rbp+n]", "mov     result_0, memory"], ["mov~rcx,[word ptr [rbp+0]", "mov~r8,[word ptr [rbp+0]", "mov~result_0,memory"]], [0, 0, 7, 0, 0, 3, 1, 1, 13, -1, 0.010644092062059414, ["mov     rax, [rbp+buf_malloced]", "test    rax, rax", "jz      short loc_85D3"], ["mov~rax,[rbp+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 26, 35, 0.0013227307387062136, ["lea     rdi, [rcx+1]", "mov     byte ptr [rcx], 2Bh ; '+'", "jmp     loc_84EF"], ["lea~rdi,[rcx+0]", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 6, 0, 1, 2, 0, 1, 14, -1, 0.0, ["mov     rdi, rax; ptr", "call    _free"], ["mov~rdi,rax", "call~FOO"]], [0, 0, 344, 0, 1, 4, 0, 1, 10, 23, 0.05095625651639408, ["lea     rdi, [result_0+length]; dest", "mov     rdx, rcx; n", "mov     rsi, r8; src", "call    _memcpy"], ["lea~rdi,<TAG>", "mov~rdx,rcx", "mov~rsi,r8", "call~FOO"]], [0, 0, 344, 0, 1, 10, 0, 2, 17, 24, 0.0013266211232318202, ["mov     rsi, result_0; src", "mov     rdx, length; n", "mov     rdi, memory; dest", "mov     qword ptr [rbp+n], r8", "mov     qword ptr [rbp+has_width], rcx", "call    _memcpy", "mov     rcx, qword ptr [rbp+has_width]", "mov     result_0, rax", "mov     r8, qword ptr [rbp+n]", "jmp     loc_75CB"], ["mov~rsi,result_0", "mov~rdx,length", "mov~rdi,memory", "mov~[word ptr [rbp+0],r8", "mov~[word ptr [rbp+0],rcx", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "mov~result_0,rax", "mov~r8,[word ptr [rbp+0]", "jmp~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 10, 24, 0.0025754345559515102, ["mov     r14, allocated", "jmp     loc_75CB"], ["mov~r14,allocated", "jmp~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 14, -1, 0.005633276793078228, ["mov     rdi, [rbp+d.dir]; ptr", "call    _free", "mov     rdi, [rbp+a.arg]; ptr", "test    rdi, rdi", "jz      short loc_85F0"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~rdi,[rbp+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 15, -1, 0.0, ["call    _free"], ["call~FOO"]], [1, 0, 344, 0, 0, 1, 0, 0, 33, 30, 0.013989822754081014, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [2, 0, 344, 2, 0, 7, 0, 1, 12, 19, 0.4481411742736652, ["mov     r8, [rbp+a.arg]", "shl     rdx, 5", "add     rdx, r8", "cmp     al, 6Eh ; 'n'", "mov     edi, [rdx]", "mov     dword ptr [rbp+has_width], edi", "jz      loc_7E40"], ["mov~r8,[rbp+0]", "shl~rdx,0", "add~rdx,r8", "cmp~al,0", "mov~edi,<TAG>", "mov~[word ptr [rbp+0],edi", "jz~FOO"]], [0, 0, 344, 0, 0, 4, 1, 1, 34, 29, 0.03612611070478206, ["cmp     result_0, [rbp+result]", "setz    dl", "test    result_0, result_0", "jz      loc_86F1"], ["cmp~result_0,[rbp+0]", "setz~dl", "test~result_0,result_0", "jz~FOO"]], [2, 0, 344, 0, 0, 4, 1, 0, 13, 18, 0.4331398515429265, ["and     eax, 0FFFFFFDFh", "lea     ecx, [rax-45h]", "cmp     cl, 2", "jbe     short loc_7636"], ["and~eax,0", "lea~ecx,[rax-45h]+0]", "cmp~cl,0", "jbe~FOO"]], [1, 0, 344, 0, 0, 2, 0, 1, 14, 17, 0.10951821478034889, ["cmp     al, 41h ; 'A'", "jnz     short loc_7643"], ["cmp~al,0", "jnz~FOO"]], [2, 0, 344, 0, 0, 6, 1, 1, 15, 16, 0.22990616392524238, ["mov     eax, [dp+10h]", "mov     rdi, [rbp+buf]", "test    al, 1", "mov     byte ptr [rdi], 25h ; '%'", "lea     r12, [rdi+1]", "jz      short loc_7668"], ["mov~eax,[dp+0]", "mov~rdi,[rbp+0]", "test~al,0", "mov~<TAG>,0", "lea~r12,[rdi+0]", "jz~FOO"]], [1, 0, 344, 0, 0, 3, 0, 0, 16, 16, 0.0, ["mov     rdi, [rbp+buf]", "lea     fbp_0, [rdi+2]", "mov     byte ptr [rdi+1], 27h ; '''"], ["mov~rdi,[rbp+0]", "lea~fbp_0,[rdi+0]", "mov~[yte ptr [rdi+0],0"]], [1, 0, 344, 0, 0, 2, 1, 1, 16, 15, 0.23057531006364668, ["test    al, 2", "jz      short loc_7675"], ["test~al,0", "jz~FOO"]], [2, 0, 344, 1, 0, 2, 0, 0, 17, 15, 0.0, ["mov     byte ptr [r12], 2Dh ; '-'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [1, 0, 344, 0, 0, 2, 1, 1, 17, 14, 0.231244456202051, ["test    al, 4", "jz      short loc_7682"], ["test~al,0", "jz~FOO"]], [1, 0, 344, 0, 0, 1, 0, 0, 16, 30, 0.013989822754081014, ["mov     ebx, 0Ch"], ["mov~ebx,0"]], [2, 0, 344, 1, 0, 2, 0, 0, 18, 14, 0.0, ["mov     byte ptr [r12], 2Bh ; '+'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [1, 0, 344, 0, 0, 2, 1, 1, 18, 13, 0.23191360234045533, ["test    al, 8", "jz      short loc_768F"], ["test~al,0", "jz~FOO"]], [1, 1, 344, 1, 0, 2, 0, 0, 19, 13, 0.0, ["mov     byte ptr [r12], 20h ; ' '", "add     r12, 1"], ["mov~<TAG>,<STR>", "add~r12,0"]], [1, 0, 344, 0, 0, 2, 1, 1, 19, 12, 0.23258274847885965, ["test    al, 10h", "jz      short loc_769C"], ["test~al,0", "jz~FOO"]], [2, 0, 344, 1, 0, 2, 0, 0, 20, 12, 0.0, ["mov     byte ptr [r12], 23h ; '#'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [0, 1, 344, 0, 0, 2, 1, 1, 20, 11, 0.23325189461726398, ["test    al, 20h", "jz      short loc_76A9"], ["test~al,<STR>", "jz~FOO"]], [2, 0, 344, 1, 0, 2, 0, 0, 21, 11, 0.0, ["mov     byte ptr [r12], 30h ; '0'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [0, 0, 344, 0, 0, 4, 0, 1, 21, 10, 0.23392104075566827, ["mov     rsi, [dp+18h]; src", "mov     rdx, [dp+20h]", "cmp     rsi, rdx", "jz      short loc_76E6"], ["mov~rsi,[dp+0]", "mov~rdx,[dp+0]", "cmp~rsi,rdx", "jz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 34, 39, 0.00016469294491734226, ["nop     dword ptr [rax+00000000h]"], ["nop~[word ptr [rax+0]"]], [1, 0, 344, 0, 0, 2, 0, 1, 25, 6, 0.23306515616003484, ["mov     dword ptr [rbp+n], 0", "jmp     loc_779F"], ["mov~[word ptr [rbp+0],0", "jmp~FOO"]], [2, 0, 344, 0, 0, 6, 0, 1, 24, 7, 0.23760134451689205, ["movzx   eax, byte ptr [dp+48h]", "mov     byte ptr [fbp_0+1], 0", "mov     [fbp_0], al", "mov     rax, [dp+28h]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      loc_7EB8"], ["movzx~eax,[yte ptr [dp+0]", "mov~[yte ptr [fbp_0+0],0", "mov~<TAG>,al", "mov~rax,[dp+0]", "cmp~rax,0", "jz~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 2, -1, 5.446538335849115e-05, ["mov     rdi, [rbp+d.dir]; ptr", "call    _free", "mov     rdi, [rbp+a.arg]; ptr", "test    rdi, rdi", "jz      short loc_86DE"], ["mov~rdi,[rbp+0]", "call~FOO", "mov~rdi,[rbp+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 4, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    _free"], ["call~FOO"]], [0, 0, 344, 2, 1, 10, 0, 1, 22, 10, 0.0, ["mov     rcx, rdx", "mov     rdi, fbp_0; dest", "mov     [rbp+fbp], r8", "sub     rcx, rsi", "mov     rdx, n_1; n", "mov     qword ptr [rbp+n], n_1", "call    _memcpy", "mov     rcx, qword ptr [rbp+n]", "mov     r8, [rbp+fbp]", "add     fbp_0, rcx"], ["mov~rcx,rdx", "mov~rdi,fbp_0", "mov~[rbp+0],r8", "sub~rcx,rsi", "mov~rdx,n_1", "mov~[word ptr [rbp+0],n_1", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "mov~r8,[rbp+0]", "add~fbp_0,rcx"]], [0, 0, 344, 0, 0, 4, 0, 1, 22, 9, 0.2345901868940726, ["mov     rsi, [dp+30h]; src", "mov     rdx, [dp+38h]", "cmp     rsi, rdx", "jz      short loc_7723"], ["mov~rsi,[dp+0]", "mov~rdx,[dp+0]", "cmp~rsi,rdx", "jz~FOO"]], [0, 0, 344, 2, 1, 10, 0, 1, 23, 9, 0.0, ["mov     rcx, rdx", "mov     rdi, fbp_0; dest", "mov     [rbp+fbp], r8", "sub     rcx, rsi", "mov     rdx, n_2; n", "mov     qword ptr [rbp+n], n_2", "call    _memcpy", "mov     rcx, qword ptr [rbp+n]", "mov     r8, [rbp+fbp]", "add     fbp_0, rcx"], ["mov~rcx,rdx", "mov~rdi,fbp_0", "mov~[rbp+0],r8", "sub~rcx,rsi", "mov~rdx,n_2", "mov~[word ptr [rbp+0],n_2", "call~FOO", "mov~rcx,[word ptr [rbp+0]", "mov~r8,[rbp+0]", "add~fbp_0,rcx"]], [1, 0, 344, 0, 0, 3, 0, 1, 23, 8, 0.23525933303247692, ["mov     edi, dword ptr [rbp+has_width]", "cmp     edi, 10h", "ja      short loc_775F"], ["mov~edi,[word ptr [rbp+0]", "cmp~edi,0", "ja~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 26, 5, 0.23872177526026672, ["mov     rax, [dp+40h]", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      short loc_77D4"], ["mov~rax,[dp+0]", "cmp~rax,0", "jz~FOO"]], [0, 0, 344, 0, 0, 5, 0, 0, 28, 5, 0.00265324224646364, ["mov     eax, dword ptr [rbp+n]", "mov     edx, [r8+10h]", "mov     [rbp+rax*4+prefixes], edx", "lea     eax, [rax+1]", "mov     dword ptr [rbp+n], eax"], ["mov~eax,[word ptr [rbp+0]", "mov~edx,[r8+0]", "mov~[rbp+0],edx", "lea~eax,[rax+0]", "mov~[word ptr [rbp+0],eax"]], [2, 0, 344, 1, 0, 5, 1, 1, 24, 9, 0.011577784348204976, ["mov     eax, 1", "mov     ecx, edi", "shl     rax, cl", "test    eax, 14180h", "jnz     short loc_7756"], ["mov~eax,0", "mov~ecx,edi", "shl~rax,cl", "test~eax,0", "jnz~FOO"]], [1, 0, 344, 0, 0, 2, 1, 1, 26, 8, 0.0036530710695445133, ["test    ah, 6", "jz      short loc_775F"], ["test~ah,0", "jz~FOO"]], [2, 0, 344, 1, 0, 2, 0, 0, 27, 9, 1.5561538102426044e-05, ["mov     byte ptr [r12], 6Ch ; 'l'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [2, 0, 344, 1, 0, 2, 0, 0, 25, 8, 0.005290922954824854, ["mov     byte ptr [r12], 6Ch ; 'l'", "add     r12, 1"], ["mov~<TAG>,0", "add~r12,0"]], [1, 0, 344, 0, 0, 2, 1, 0, 21, 41, 0.024836214811471965, ["xor     eax, eax", "mov     r10, 1999999999999999h"], ["xor~eax,eax", "mov~r10,0"]], [1, 0, 344, 0, 0, 3, 0, 0, 26, 6, 0.0026532422464636404, ["mov     eax, [rax+10h]", "mov     dword ptr [rbp+n], 1", "mov     [rbp+prefixes], eax"], ["mov~eax,[rax+0]", "mov~[word ptr [rbp+0],0", "mov~[rbp+0],eax"]], [0, 0, 344, 0, 0, 1, 0, 0, 32, 42, 0.0001050403821913758, ["nop     word ptr [memory_size+memory_size+00h]"], ["nop~[ord ptr [memory_size+0]"]], [1, 0, 344, 1, 0, 7, 0, 1, 22, 40, 0.025637634023746903, ["movsx   esi, byte ptr [digitp]", "lea     r9, [digitp+1]", "sub     esi, 30h ; '0'", "cmp     rax, r10", "movsxd  rcx, esi", "mov     rsi, rdi", "ja      short loc_87A6"], ["movsx~esi,<TAG>", "lea~r9,[digitp+0]", "sub~esi,0", "cmp~rax,r10", "movsxd~rcx,esi", "mov~rsi,rdi", "ja~FOO"]], [0, 0, 344, 0, 0, 2, 0, 1, 25, 37, 0.027878495510496256, ["cmp     r8, digitp", "jnz     short loc_878A"], ["cmp~r8,digitp", "jnz~FOO"]], [0, 0, 344, 1, 0, 2, 0, 0, 23, 40, 0.0, ["lea     rsi, [rax+rax*4]", "add     rsi, rsi"], ["lea~rsi,<TAG>", "add~rsi,rsi"]], [0, 0, 344, 1, 0, 3, 0, 0, 23, 39, 0.02630678016215122, ["add     rcx, rsi", "mov     rax, precision", "jnb     short loc_87E4"], ["add~rcx,rsi", "mov~rax,precision", "jnb~FOO"]], [1, 0, 344, 0, 0, 3, 0, 1, 25, 39, 0.009500319011531099, ["lea     rcx, [digitp+1]", "cmp     byte ptr [digitp-1], 30h ; '0'", "jz      short loc_87D7"], ["lea~rcx,[digitp+0]", "cmp~[yte ptr [digitp-1]+0],0", "jz~FOO"]], [1, 0, 344, 0, 0, 4, 0, 1, 27, 39, 0.0025754345559515102, ["mov     r9, digitp", "lea     digitp, [r9+1]", "cmp     byte ptr [digitp-1], 30h ; '0'", "jnz     short loc_87C1"], ["mov~r9,digitp", "lea~digitp,[r9+0]", "cmp~[yte ptr [digitp-1]+0],0", "jnz~FOO"]], [0, 0, 344, 0, 0, 1, 0, 0, 26, 38, 0.01024727284044755, ["mov     rax, rdi"], ["mov~rax,rdi"]], [0, 0, 344, 0, 0, 2, 0, 1, 24, 38, 0.014627845816280481, ["mov     rcx, digitp", "jmp     short loc_87DA"], ["mov~rcx,digitp", "jmp~FOO"]]], "func_feature": [54, 114, 306, 3, 360, 586, 1, 1250, 0.04697, 3, 103], "succs": [[11, 6], [0, 25], [0], [9, 263], [3, 351], [3], [11], [21], [23, 7], [13, 263], [9, 334], [17, 12], [26, 14], [16, 254], [18, 28], [14], [21], [1], [1], [242], [27, 19, 29, 301], [32], [161, 21], [21], [122, 21], [104], [25], [242], [26, 15], [242], [40, 245], [308, 30], [246, 47], [32, 42], [32], [32, 128], [32], [32], [32], [32, 259], [245], [117, 125], [41, 254], [48, 170], [43, 156], [73, 50], [320, 45], [197, 136, 138, 139, 140, 177, 246, 215, 54], [48, 49], [170], [57, 60], [254, 55], [51, 53], [264, 51], [56, 219], [59, 110], [61, 237], [73, 58], [268], [64, 110], [268], [68], [254, 223], [226, 62], [302], [67, 254], [65, 71], [317, 70], [74], [68], [72, 254], [315, 70], [317], [88, 106], [81, 148], [74], [74], [74], [74], [336], [346, 79], [83, 86], [81, 148], [246, 86], [90, 302], [284, 84], [98, 91], [99, 246], [2, 87], [92, 254], [89, 254], [97, 279], [101, 254], [92, 286], [92], [254], [261, 95], [202, 107], [97, 279], [104, 105], [52], [100, 254], [108, 254], [93, 102], [109, 126], [104], [104], [33, 39], [52, 94], [113, 111], [302], [116, 246], [129], [112, 349], [], [281, 114], [126, 119], [121, 254], [24, 22], [129, 123], [119], [125], [96, 254], [124, 254], [129], [169, 127], [129], [169, 130], [165, 127], [131, 254], [34, 254], [132, 238], [143], [183], [133, 135], [186, 133], [137, 214], [233, 141], [137, 212], [216, 137], [137, 217], [82], [141, 229], [145, 271], [239, 143], [147, 151], [82], [149], [152, 37], [153, 170], [149], [149], [154, 98], [170, 44], [155, 39], [35, 254], [164, 157], [162], [185, 254], [265, 158], [261, 5], [160, 260], [162, 163], [164], [170, 166], [169], [167], [168, 167], [170], [171, 254], [173, 246], [172, 38], [36, 38], [174, 183], [184, 175], [176, 254], [183], [201, 182], [269], [178, 269], [178, 306], [178, 295], [75, 69], [242, 187], [66, 183], [183], [183], [242], [254, 191], [188, 190], [188, 181], [192, 234], [193, 234], [293], [310], [194, 196], [194, 311], [198, 199], [200, 78], [76], [76], [77], [203, 205], [205, 206], [208, 220], [209, 207], [205], [209], [337, 211], [210, 213], [213], [273, 218], [214], [115], [146], [142, 214], [214], [214], [273, 221], [146], [115], [232, 222], [224, 273], [225, 189], [273, 227], [228, 254], [225, 325], [231], [189], [233], [8, 23], [240, 235], [231], [236], [293], [240], [77], [236], [144, 254], [254], [241, 303], [243, 287], [241, 303], [312, 254], [246], [252, 244], [], [316, 246], [350, 246], [344, 246], [289, 246], [20, 246], [253, 246], [278, 246], [179, 269], [292, 254], [195, 254], [297, 254], [298, 254], [254], [4, 254], [262, 254], [10, 254], [230, 254], [300, 254], [134, 254], [356, 254], [357, 254], [320], [273, 270], [273], [272, 31], [245], [274, 275], [275], [115], [115], [115], [280, 282], [242], [150], [], [150], [85, 285], [302, 103], [250, 247], [52], [288, 310], [257, 290], [294, 255], [258, 291], [296], [293], [242], [293, 63], [293], [256, 299], [296, 258], [296], [256, 180], [302], [242], [304, 307], [283], [305, 307], [307], [310], [313, 309], [245], [313], [283], [310], [310], [314, 276], [276], [317], [251, 318], [265, 159], [46, 319], [320, 46], [321, 322], [322], [323, 324], [324], [326, 327], [189], [327], [328, 329], [329], [330, 331], [331], [332, 333], [333], [339, 340], [263], [343], [248, 335], [338, 277], [277], [340], [341, 342], [342], [336, 345], [249, 118], [118], [80, 348], [336, 347], [348], [336], [352], [343], [261], [354, 355], [352, 120], [355], [266, 359], [267, 358], [267, 358], [353], [353]], "fname": "vasnprintf", "n_num": 360}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [2, 1, 4, 0, 0, 9, 1, 1, 0, 2, 0.0, ["mov     rdx, qword ptr [rsp+x.value]", "mov     rax, qword ptr [rsp+x.value+8]", "mov     rsi, rdx", "mov     ecx, eax", "shr     rsi, 20h", "mov     eax, esi", "shr     eax, 1Fh", "and     ecx, 7FFFh", "jz      short locret_89C0"], ["mov~rdx,[word ptr [rsp+0]", "mov~rax,[word ptr [rsp+0]", "mov~rsi,rdx", "mov~ecx,eax", "shr~rsi,<STR>", "mov~eax,esi", "shr~eax,0", "and~ecx,0", "jz~FOO"]], [2, 0, 2, 0, 0, 3, 1, 1, 1, 1, 0.16666666666666666, ["xor     eax, 1", "cmp     ecx, 7FFFh", "jz      short loc_89C8"], ["xor~eax,0", "cmp~ecx,0", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 0, 1, 0, 5, 2, 0, 2, 0, 0.0, ["add     esi, 80000000h", "xor     eax, eax", "or      esi, edx", "setnz   al", "retn"], ["add~esi,0", "xor~eax,eax", "or~esi,edx", "setnz~al", "retn"]]], "func_feature": [0, 4, 2, 0, 5, 4, 2, 19, 0.03333, 0, 1], "succs": [[], [0, 2], [3, 4], [], []], "fname": "rpl_isnanl", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 34, 0, 0, 5, 1, 0, 0, 0, 0.027731092436974792, ["lea     r8, off_B670", "lea     r10, wide_null_string_2670", "lea     r9, aNull; \"(NULL)\"", "xor     ecx, ecx", "nop     dword ptr [ap+00000000h]"], ["lea~r8,<TAG>", "lea~r10,<TAG>", "lea~r9,<TAG>", "xor~ecx,ecx", "nop~[word ptr [ap+0]"]], [1, 0, 35, 0, 0, 3, 0, 1, 0, 5, 0.0, ["cmp     qword ptr [a], 0", "mov     rax, [a+8]", "jz      short loc_8A4D"], ["cmp~<TAG>,0", "mov~rax,[a+0]", "jz~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000008A16 cases 5,6,13,14", "cmp     r11d, 2Fh ; '/'", "ja      loc_8BBC"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [0, 0, 34, 1, 0, 4, 0, 1, 3, 2, 0.7546218487394959, ["mov     edx, [ap]", "movsxd  rdx, dword ptr [r8+rdx*4]", "add     rdx, r8", "jmp     rdx; switch jump"], ["mov~edx,<TAG>", "movsxd~rdx,<TAG>", "add~rdx,r8", "jmp~rdx"]], [1, 0, 34, 0, 0, 2, 0, 1, 2, 3, 0.7823529411764706, ["cmp     dword ptr [ap], 16h; switch 23 cases", "ja      short loc_8A50; jumptable 0000000000008A16 default case"], ["cmp~<TAG>,0", "ja~FOO"]], [1, 1, 34, 2, 0, 4, 0, 1, 5, 4, 0.7537815126050421, ["add     i, 1", "add     ap, 20h", "cmp     [a], i", "ja      short loc_8A08"], ["add~i,0", "add~ap,<STR>", "cmp~<TAG>,i", "ja~FOO"]], [0, 0, 34, 0, 0, 5, 1, 1, 6, 5, 0.07899159663865547, ["mov     rdx, [rdx]", "test    rdx, rdx", "cmovz   rdx, r9", "mov     [ap+10h], rdx", "jmp     loc_8A40"], ["mov~rdx,<TAG>", "test~rdx,rdx", "cmovz~rdx,r9", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_8AFF"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     short loc_8B57"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000008A16 case 16", "cmp     r11d, 2Fh ; '/'", "ja      short loc_8B8C"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     edx, [rdx]", "mov     [ap+10h], edx", "jmp     short loc_8A40"], ["mov~edx,<TAG>", "mov~[ap+0],edx", "jmp~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_8A95"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 1, 0.07899159663865547, ["mov     r11d, [args+4]; jumptable 0000000000008A16 case 11", "cmp     r11d, 0AFh", "ja      loc_8BCD"], ["mov~r11d,[args+0]", "cmp~r11d,0", "ja~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000008A16 cases 1,2", "cmp     r11d, 2Fh ; '/'", "ja      loc_8BAB"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_8A71"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000008A16 cases 7-10,17-22", "cmp     r11d, 2Fh ; '/'", "ja      loc_8B9A"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000008A16 case 15", "cmp     r11d, 2Fh ; '/'", "ja      loc_8B7B"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 10h", "mov     [args+4], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~[args+0],r11d"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_8AB7"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [2, 0, 34, 1, 0, 8, 1, 0, 4, 5, 0.0067226890756302525, ["mov     rdx, [args+8]; jumptable 0000000000008A16 case 12", "add     rdx, 0Fh", "and     rdx, 0FFFFFFFFFFFFFFF0h", "lea     r11, [rdx+10h]", "mov     [args+8], r11", "fld     tbyte ptr [rdx]", "fstp    tbyte ptr [ap+10h]", "nop     dword ptr [ap+00000000h]"], ["mov~rdx,[args+0]", "add~rdx,0", "and~rdx,0", "lea~r11,[rdx+0]", "mov~[args+0],r11", "fld~<TAG>,<TAG>", "fstp~<TAG>,[byte ptr [ap+0]", "nop~[word ptr [ap+0]"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["movsd   xmm0, qword ptr [rdx]", "movsd   qword ptr [ap+10h], xmm0", "jmp     loc_8A40"], ["movsd~xmm0,<TAG>", "movsd~[word ptr [ap+0],xmm0", "jmp~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 0, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_8B32"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     edx, [rdx]", "mov     [ap+10h], dl", "jmp     short loc_8A40"], ["mov~edx,<TAG>", "mov~[ap+0],dl", "jmp~FOO"]], [1, 0, 34, 0, 0, 3, 0, 1, 4, 7, 0.07899159663865547, ["mov     r11d, [args]; jumptable 0000000000008A16 cases 3,4", "cmp     r11d, 2Fh ; '/'", "ja      loc_8B6A"], ["mov~r11d,<TAG>", "cmp~r11d,0", "ja~FOO"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     rdx, [rdx]", "mov     [ap+10h], rdx", "jmp     short loc_8A40"], ["mov~rdx,<TAG>", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 34, 0, 0, 3, 0, 1, 6, 5, 0.07899159663865547, ["mov     edx, [rdx]", "mov     [ap+10h], dx", "jmp     loc_8A40"], ["mov~edx,<TAG>", "mov~[ap+0],dx", "jmp~FOO"]], [0, 0, 34, 0, 0, 5, 1, 1, 6, 5, 0.07899159663865547, ["mov     rdx, [rdx]", "test    rdx, rdx", "cmovz   rdx, r10", "mov     [ap+10h], rdx", "jmp     loc_8A40"], ["mov~rdx,<TAG>", "test~rdx,rdx", "cmovz~rdx,r10", "mov~[ap+0],rdx", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 1, 0, 1, -1, 0.0, ["xor     eax, eax", "retn"], ["xor~eax,eax", "retn"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [1, 0, 0, 0, 0, 2, 0, 0, 3, -1, 0.0, ["mov     eax, 0FFFFFFFFh; jumptable 0000000000008A16 default case", "retn"], ["mov~eax,0", "retn"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]], [0, 0, 34, 0, 0, 4, 0, 1, 5, 6, 0.02563025210084034, ["mov     rdx, [args+8]", "lea     r11, [rdx+8]", "mov     [args+8], r11", "jmp     loc_8AD9"], ["mov~rdx,[args+0]", "lea~r11,[rdx+0]", "mov~[args+0],r11", "jmp~FOO"]], [1, 0, 34, 2, 0, 4, 0, 0, 5, 6, 0.02563025210084034, ["mov     edx, r11d", "add     rdx, [args+10h]", "add     r11d, 8", "mov     [args], r11d"], ["mov~edx,r11d", "add~rdx,[args+0]", "add~r11d,0", "mov~<TAG>,r11d"]]], "func_feature": [0, 5, 25, 0, 36, 52, 1, 132, 0.10528, 3, 18], "succs": [[4], [0, 30], [9, 13], [32, 2, 11, 14, 15, 17, 18, 22, 26], [32, 3], [4, 30], [5], [6], [6], [12], [29], [10, 31], [5], [12], [24, 19], [20, 21], [27], [16, 35], [8, 7], [23], [25], [25], [5], [5], [23], [5], [33, 34], [5], [5], [5], [], [29], [], [28], [28], [27]], "fname": "printf_fetchargs", "n_num": 36}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 184, 1, 0, 5, 0, 1, 0, 0, 0.4343419506462985, ["lea     rsi, off_B6EC", "movzx   ecx, cl", "movsxd  rcx, dword ptr [rsi+rcx*4]", "add     rcx, rsi", "jmp     rcx; switch jump"], ["lea~rsi,<TAG>", "movzx~ecx,cl", "movsxd~rcx,<TAG>", "add~rcx,rsi", "jmp~rcx"]], [1, 0, 184, 0, 0, 3, 0, 1, 21, 23, 0.43827849588719153, ["lea     ecx, [c-25h]", "cmp     cl, 53h ; 'S'; switch 84 cases", "ja      loc_93AD; jumptable 0000000000008E05 default case"], ["lea~ecx,[c-25h]+0]", "cmp~cl,0", "ja~FOO"]], [2, 0, 184, 1, 0, 5, 0, 0, 14, 14, 0.05707990599294947, ["add     np, 1", "movzx   r11d, byte ptr [np]", "lea     ebx, [r11-30h]", "cmp     bl, 9", "jbe     short loc_91F8"], ["add~np,0", "movzx~r11d,<TAG>", "lea~ebx,[r11-30h]+0]", "cmp~bl,0", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 13, 15, 0.05666862514688602, ["mov     rdi, rax"], ["mov~rdi,rax"]], [1, 0, 184, 1, 0, 5, 1, 1, 17, 8, 0.1394535840188014, ["shl     rbx, 5", "lea     rcx, [rax+rbx]", "mov     esi, [rcx]", "test    esi, esi", "jnz     loc_94AF"], ["shl~rbx,0", "lea~rcx,<TAG>", "mov~esi,<TAG>", "test~esi,esi", "jnz~FOO"]], [1, 0, 184, 2, 0, 6, 0, 1, 16, 9, 0.1378084606345476, ["mov     rcx, [a]", "mov     rsi, rcx", "shl     rsi, 5", "add     rsi, rax", "cmp     rcx, rbx", "ja      short loc_8FFE"], ["mov~rcx,<TAG>", "mov~rsi,rcx", "shl~rsi,0", "add~rsi,rax", "cmp~rcx,rbx", "ja~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 19, 9, 0.010663924794359578, ["mov     [a], rcx"], ["mov~<TAG>,rcx"]], [1, 0, 184, 1, 0, 7, 0, 1, 27, 29, 0.02925969447708578, ["add     a_allocated_0, a_allocated_0", "lea     rsi, [r13+1]", "cmp     a_allocated_0, r13", "cmovbe  a_allocated_0, rsi", "mov     rsi, 7FFFFFFFFFFFFFFh", "cmp     a_allocated_0, rsi", "ja      out_of_memory"], ["add~a_allocated_0,a_allocated_0", "lea~rsi,[r13+0]", "cmp~a_allocated_0,r13", "cmovbe~a_allocated_0,rsi", "mov~rsi,0", "cmp~a_allocated_0,rsi", "ja~FOO"]], [0, 0, 184, 0, 0, 3, 0, 0, 26, 25, 0.186310223266745, ["cmp     a_allocated_0, r13", "mov     rax, [a+8]", "jbe     loc_93F0"], ["cmp~a_allocated_0,r13", "mov~rax,[a+0]", "jbe~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 15, 13, 0.05749118683901293, ["cmp     r11b, 24h ; '$'", "jnz     loc_8F35"], ["cmp~r11b,0", "jnz~FOO"]], [1, 2, 185, 1, 1, 16, 1, 2, 0, 20, 0.0, ["push    r15", "push    r14", "mov     r15, a", "push    r13", "push    r12", "mov     r14, d", "push    rbp", "push    rbx", "mov     rbx, format", "mov     edi, 58h ; 'X'; size", "sub     rsp, 48h", "mov     qword ptr [d], 0", "call    _malloc", "test    rax, rax", "mov     [d+8], rax", "jz      out_of_memory_1"], ["push~r15", "push~r14", "mov~r15,a", "push~r13", "push~r12", "mov~r14,d", "push~rbp", "push~rbx", "mov~rbx,format", "mov~edi,<STR>", "sub~rsp,<STR>", "mov~<TAG>,0", "call~FOO", "test~rax,rax", "mov~[d+0],rax", "jz~FOO"]], [2, 0, 184, 0, 0, 3, 0, 0, 23, 28, 0.008578143360752051, ["mov     ecx, 10h; jumptable 0000000000008E05 case 46", "mov     ebx, 73h ; 's'", "nop     dword ptr [rax+00000000h]"], ["mov~ecx,0", "mov~ebx,0", "nop~[word ptr [rax+0]"]], [0, 0, 184, 0, 0, 1, 1, 0, 16, 17, 0.04274383078730905, ["xor     edi, edi"], ["xor~edi,edi"]], [1, 0, 184, 0, 0, 2, 0, 1, 24, 27, 0.18960047003525266, ["cmp     arg_index, 0FFFFFFFFFFFFFFFFh", "jz      loc_946B"], ["cmp~arg_index,0", "jz~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.02814336075205633, ["cmp     eax, 0Fh; jumptable 0000000000008E05 cases 51,74,80,83", "mov     ecx, 0Ah", "jg      loc_8E18"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 24, 28, 0.01471797884841363, ["test    al, 4", "jnz     loc_8E18"], ["test~al,0", "jnz~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 25, 28, 0.009841363102232667, ["cmp     eax, 7", "mov     ecx, 8", "jg      loc_8E18"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [2, 0, 184, 0, 0, 3, 1, 1, 26, 28, 0.004935370152761457, ["test    al, 2", "mov     ecx, 2", "jnz     loc_8E18"], ["test~al,0", "mov~ecx,0", "jnz~FOO"]], [4, 0, 184, 1, 0, 6, 2, 1, 27, 28, 0.0, ["and     eax, 1", "cmp     eax, 1", "sbb     ecx, ecx", "and     ecx, 2", "add     ecx, 4", "jmp     loc_8E18"], ["and~eax,0", "cmp~eax,0", "sbb~ecx,ecx", "and~ecx,0", "add~ecx,0", "jmp~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.02814336075205633, ["cmp     eax, 0Fh; jumptable 0000000000008E05 case 73", "mov     ecx, 16h", "jg      loc_8E18"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 24, 28, 0.01471797884841363, ["test    al, 4", "jnz     loc_8E18"], ["test~al,0", "jnz~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 25, 28, 0.009841363102232667, ["cmp     eax, 7", "mov     ecx, 15h", "jg      loc_8E18"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [1, 1, 184, 0, 0, 3, 1, 1, 26, 28, 0.004935370152761457, ["test    al, 2", "mov     ecx, 12h", "jnz     loc_8E18"], ["test~al,0", "mov~ecx,<STR>", "jnz~FOO"]], [2, 0, 184, 1, 0, 5, 2, 1, 27, 28, 0.0, ["xor     ecx, ecx", "test    al, 1", "setz    cl", "add     ecx, 13h", "jmp     loc_8E18"], ["xor~ecx,ecx", "test~al,0", "setz~cl", "add~ecx,0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 23, 28, 0.008578143360752051, ["mov     ecx, 11h; jumptable 0000000000008E05 case 75", "jmp     loc_8E18"], ["mov~ecx,0", "jmp~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.008578143360752051, ["mov     ecx, 0Eh; jumptable 0000000000008E05 case 30", "mov     ebx, 63h ; 'c'", "jmp     loc_8E18"], ["mov~ecx,0", "mov~ebx,0", "jmp~FOO"]], [2, 0, 184, 1, 0, 5, 1, 1, 23, 28, 0.008578143360752051, ["xor     ecx, ecx; jumptable 0000000000008E05 case 78", "cmp     eax, 7", "setnle  cl", "add     ecx, 0Fh", "jmp     loc_8E18"], ["xor~ecx,ecx", "cmp~eax,0", "setnle~cl", "add~ecx,0", "jmp~FOO"]], [2, 0, 184, 1, 0, 5, 1, 1, 23, 28, 0.008578143360752051, ["xor     ecx, ecx; jumptable 0000000000008E05 case 62", "cmp     eax, 7", "setnle  cl", "add     ecx, 0Dh", "jmp     loc_8E18"], ["xor~ecx,ecx", "cmp~eax,0", "setnle~cl", "add~ecx,0", "jmp~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.02814336075205633, ["cmp     eax, 0Fh; jumptable 0000000000008E05 cases 63,68", "mov     ecx, 9", "jg      loc_8E18"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 24, 28, 0.01471797884841363, ["test    al, 4", "jnz     loc_8E18"], ["test~al,0", "jnz~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 25, 28, 0.009841363102232667, ["cmp     eax, 7", "mov     ecx, 7", "jg      loc_8E18"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [2, 0, 184, 0, 0, 3, 1, 1, 26, 28, 0.004935370152761457, ["test    al, 2", "mov     ecx, 1", "jnz     loc_8E18"], ["test~al,0", "mov~ecx,0", "jnz~FOO"]], [4, 0, 184, 1, 0, 6, 2, 1, 27, 28, 0.0, ["and     eax, 1", "cmp     eax, 1", "sbb     ecx, ecx", "and     ecx, 2", "add     ecx, 3", "jmp     loc_8E18"], ["and~eax,0", "cmp~eax,0", "sbb~ecx,ecx", "and~ecx,0", "add~ecx,0", "jmp~FOO"]], [2, 0, 184, 0, 0, 3, 0, 1, 23, 28, 0.01351351351351347, ["cmp     eax, 0Fh; jumptable 0000000000008E05 cases 28,32-34,60,64-66", "mov     ecx, 0Ch", "jg      loc_8E18"], ["cmp~eax,0", "mov~ecx,0", "jg~FOO"]], [2, 0, 184, 1, 0, 5, 2, 1, 24, 28, 0.0, ["xor     ecx, ecx", "test    al, 4", "setnz   cl", "add     ecx, 0Bh", "jmp     loc_8E18"], ["xor~ecx,ecx", "test~al,0", "setnz~cl", "add~ecx,0", "jmp~FOO"]], [2, 0, 184, 0, 0, 5, 0, 1, 18, 7, 0.12690951821386606, ["mov     dword ptr [rcx], 5", "movzx   ebx, byte ptr [rbp+0]", "lea     rcx, [rbp+1]", "cmp     bl, 2Eh ; '.'", "jnz     loc_8D8F"], ["mov~<TAG>,0", "movzx~ebx,[yte ptr [rbp+0]", "lea~rcx,[rbp+0]", "cmp~bl,0", "jnz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 25, 26, 0.1753819036427732, ["mov     [dp+50h], arg_index"], ["mov~[dp+0],arg_index"]], [1, 0, 184, 0, 0, 2, 0, 1, 18, 5, 0.05749118683901293, ["cmp     dil, 24h ; '$'", "jnz     loc_9067"], ["cmp~dil,0", "jnz~FOO"]], [2, 0, 184, 1, 0, 5, 0, 0, 17, 6, 0.05707990599294947, ["add     np, 1", "movzx   edi, byte ptr [np]", "lea     r11d, [rdi-30h]", "cmp     r11b, 9", "jbe     short loc_9612"], ["add~np,0", "movzx~edi,<TAG>", "lea~r11d,[rdi-30h]+0]", "cmp~r11b,0", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 1, 0, 19, 10, 0.04274383078730905, ["xor     r11d, r11d"], ["xor~r11d,r11d"]], [0, 0, 184, 0, 0, 3, 0, 1, 26, 26, 0.0051410105757931845, ["mov     arg_index, [rsp+78h+arg_posn]", "mov     [rsp+78h+arg_posn], arg_posn_0", "jmp     loc_8E27"], ["mov~arg_index,[rsp+0]", "mov~[rsp+0],arg_posn_0", "jmp~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 14, 6, 0.17273795534665098, ["cmp     byte ptr [rbp+1], 2Ah ; '*'", "mov     [dp+30h], rbp", "jnz     loc_91B4"], ["cmp~[yte ptr [rbp+0],0", "mov~[dp+0],rbp", "jnz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 13, 7, 0.30608108108108106, ["cmp     bl, 2Eh ; '.'", "jz      loc_9027"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 184, 1, 0, 9, 1, 1, 28, 28, 0.0254406580493537, ["mov     rsi, a_allocated_0", "mov     [rsp+78h+var_40], a_allocated_0", "mov     [rsp+78h+d_allocated], r9", "shl     rsi, 5; size", "test    rax, rax", "mov     [rsp+78h+a_allocated], r10", "mov     [rsp+78h+max_width_length], rdx", "mov     dword ptr [rsp+78h+cp], ecx", "jz      loc_94C5"], ["mov~rsi,a_allocated_0", "mov~[rsp+0],a_allocated_0", "mov~[rsp+0],r9", "shl~rsi,0", "test~rax,rax", "mov~[rsp+0],r10", "mov~[rsp+0],rdx", "mov~[word ptr [rsp+0],ecx", "jz~FOO"]], [0, 0, 184, 1, 0, 2, 0, 0, 18, 16, 0.0, ["lea     rsi, [n+n*4]", "add     rsi, rsi"], ["lea~rsi,<TAG>", "add~rsi,rsi"]], [2, 0, 184, 1, 0, 7, 0, 1, 17, 16, 0.043683901292596944, ["movsx   eax, sil", "mov     rbx, 1999999999999999h", "mov     rsi, rdx", "sub     eax, 30h ; '0'", "cmp     n, rbx", "cdqe", "ja      short loc_9237"], ["movsx~eax,sil", "mov~rbx,0", "mov~rsi,rdx", "sub~eax,0", "cmp~n,rbx", "cdqe~", "ja~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 18, 15, 0.044506462984723855, ["mov     rbp, np"], ["mov~rbp,np"]], [0, 0, 184, 0, 0, 3, 0, 1, 18, 4, 0.005141010575793185, ["mov     rbx, [rsp+78h+arg_posn]", "mov     [rsp+78h+arg_posn], arg_posn_0", "jmp     loc_9076"], ["mov~rbx,[rsp+0]", "mov~[rsp+0],arg_posn_0", "jmp~FOO"]], [1, 0, 184, 0, 0, 5, 0, 1, 17, 5, 0.008431257344300823, ["mov     rdi, [rsp+78h+arg_posn]", "cmp     rdi, 0FFFFFFFFFFFFFFFFh", "lea     rax, [rdi+1]", "mov     [dp+40h], rdi", "jz      loc_93AD; jumptable 0000000000008E05 default case"], ["mov~rdi,[rsp+0]", "cmp~rdi,0", "lea~rax,[rdi+0]", "mov~[dp+0],rdi", "jz~FOO"]], [1, 0, 184, 2, 0, 6, 0, 1, 27, 24, 0.18331374853113983, ["mov     rsi, [a]", "mov     r11, rsi", "shl     r11, 5", "add     r11, rax", "cmp     rsi, r13", "ja      short loc_8E67"], ["mov~rsi,<TAG>", "mov~r11,rsi", "shl~r11,0", "add~r11,rax", "cmp~rsi,r13", "ja~FOO"]], [0, 0, 184, 0, 0, 2, 0, 1, 31, 25, 0.0254406580493537, ["mov     [a+8], memory", "jmp     loc_8E34"], ["mov~[a+0],memory", "jmp~FOO"]], [2, 0, 184, 1, 0, 6, 0, 1, 20, 9, 0.043683901292596944, ["mov     rdi, 1999999999999999h", "sub     eax, 30h ; '0'", "mov     rsi, rdx", "cmp     n, rdi", "cdqe", "ja      short loc_964E"], ["mov~rdi,0", "sub~eax,0", "mov~rsi,rdx", "cmp~n,rdi", "cdqe~", "ja~FOO"]], [1, 0, 184, 0, 0, 2, 0, 0, 23, 6, 0.04471210340775558, ["cmp     bl, 9", "jbe     short loc_9630"], ["cmp~bl,0", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 28, 26, 0.009841363102232667, ["nop     word ptr [rax+rax+00000000h]"], ["nop~[ord ptr [rax+0]"]], [3, 0, 184, 0, 0, 11, 0, 0, 15, 5, 0.14559341950646298, ["mov     rdi, [rsp+78h+max_precision_length]", "lea     rcx, [rbp+2]", "mov     eax, 2", "mov     [dp+38h], cp_0", "cmp     rdi, 2", "cmovnb  rax, rdi", "mov     [rsp+78h+max_precision_length], rax", "movsx   eax, byte ptr [rbp+2]", "lea     esi, [rax-30h]", "cmp     sil, 9", "jbe     loc_960F"], ["mov~rdi,[rsp+0]", "lea~rcx,[rbp+0]", "mov~eax,0", "mov~[dp+0],cp_0", "cmp~rdi,0", "cmovnb~rax,rdi", "mov~[rsp+0],rax", "movsx~eax,[yte ptr [rbp+0]", "lea~esi,[rax-30h]+0]", "cmp~sil,0", "jbe~FOO"]], [6, 0, 184, 0, 0, 10, 3, 1, 1, 19, 0.005346650998824912, ["mov     qword ptr [a], 0", "mov     qword ptr [a+8], 0", "xor     esi, esi", "mov     [rsp+78h+max_precision_length], 0", "xor     r10d, r10d", "xor     r8d, r8d", "mov     r9d, 1", "mov     [rsp+78h+arg_posn], 0", "mov     rdx, 0FFFFFFFFFFFFFFFFh", "jmp     short loc_8C5C"], ["mov~<TAG>,0", "mov~[word ptr [a+0],0", "xor~esi,esi", "mov~[rsp+0],0", "xor~r10d,r10d", "xor~r8d,r8d", "mov~r9d,0", "mov~[rsp+0],0", "mov~rdx,0", "jmp~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 21, 8, 0.044506462984723855, ["mov     rdi, np"], ["mov~rdi,np"]], [0, 0, 184, 1, 0, 2, 0, 0, 21, 9, 0.0, ["lea     rsi, [n+n*4]", "add     rsi, rsi"], ["lea~rsi,<TAG>", "add~rsi,rsi"]], [1, 0, 184, 2, 0, 9, 2, 1, 19, 14, 0.05543478260869565, ["xor     ebx, ebx", "add     rax, rsi", "movzx   esi, byte ptr [np+1]", "setb    bl", "add     np, 1", "mov     rdi, rax", "test    rbx, rbx", "lea     r11d, [rsi-30h]", "jnz     loc_95CA"], ["xor~ebx,ebx", "add~rax,rsi", "movzx~esi,[yte ptr [np+0]", "setb~bl", "add~np,0", "mov~rdi,rax", "test~rbx,rbx", "lea~r11d,[rsi-30h]+0]", "jnz~FOO"]], [1, 0, 184, 1, 0, 6, 0, 1, 21, 15, 0.005141010575793185, ["movsx   eax, sil", "mov     rbp, np", "mov     rsi, rdx", "sub     eax, 30h ; '0'", "cdqe", "jmp     loc_923A"], ["movsx~eax,sil", "mov~rbp,np", "mov~rsi,rdx", "sub~eax,0", "cdqe~", "jmp~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 3, 17, 0.43484136310223265, ["cmp     cl, 25h ; '%'", "lea     rbp, [cp_0+1]", "jz      short loc_8C90"], ["cmp~cl,0", "lea~rbp,[cp_0+0]", "jz~FOO"]], [0, 0, 184, 0, 0, 3, 1, 1, 2, 18, 0.43967391304347825, ["movzx   ecx, byte ptr [cp_0]", "test    cl, cl", "jnz     short loc_8C50"], ["movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 4, 19, 0.42851057579318447, ["mov     rbx, rbp"], ["mov~rbx,rbp"]], [0, 0, 184, 0, 0, 3, 0, 1, 27, 20, 0.015349588719153937, ["mov     [d+8], memory", "mov     rsi, [d]", "jmp     loc_8C59"], ["mov~[d+0],memory", "mov~rsi,<TAG>", "jmp~FOO"]], [0, 0, 184, 0, 0, 2, 0, 1, 24, 20, 0.4071680376028202, ["mov     rax, [d+8]", "jmp     loc_8C59"], ["mov~rax,[d+0]", "jmp~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 16, 7, 0.05666862514688602, ["mov     rsi, cp_0"], ["mov~rsi,cp_0"]], [0, 0, 184, 0, 0, 2, 1, 1, 30, 26, 0.026674500587544066, ["test    memory, memory", "jz      loc_94EA"], ["test~memory,memory", "jz~FOO"]], [0, 0, 184, 0, 1, 8, 0, 2, 29, 27, 0.010443595769682726, ["mov     rdi, memory_size; size", "call    _malloc", "mov     r8, [rsp+78h+var_40]", "mov     r9, [rsp+78h+d_allocated]", "mov     r10, [rsp+78h+a_allocated]", "mov     rdx, [rsp+78h+max_width_length]", "mov     ecx, dword ptr [rsp+78h+cp]", "jmp     loc_9459"], ["mov~rdi,memory_size", "call~FOO", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]", "mov~r10,[rsp+0]", "mov~rdx,[rsp+0]", "mov~ecx,[word ptr [rsp+0]", "jmp~FOO"]], [0, 0, 184, 0, 1, 7, 0, 1, 29, 27, 0.010443595769682726, ["mov     rdi, rax; ptr", "call    _realloc", "mov     ecx, dword ptr [rsp+78h+cp]", "mov     rdx, [rsp+78h+max_width_length]", "mov     r10, [rsp+78h+a_allocated]", "mov     r9, [rsp+78h+d_allocated]", "mov     r8, [rsp+78h+var_40]"], ["mov~rdi,rax", "call~FOO", "mov~ecx,[word ptr [rsp+0]", "mov~rdx,[rsp+0]", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]"]], [1, 0, 184, 0, 0, 2, 0, 0, 20, 13, 0.04471210340775559, ["cmp     r11b, 9", "jbe     short loc_9215"], ["cmp~r11b,0", "jbe~FOO"]], [0, 0, 184, 0, 0, 2, 0, 1, 29, 22, 0.09380141010575793, ["cmp     edi, ecx", "jz      loc_8E7B; jumptable 0000000000008E05 case 0"], ["cmp~edi,ecx", "jz~FOO"]], [1, 0, 184, 1, 0, 5, 1, 1, 28, 23, 0.18495887191539365, ["shl     r13, 5", "lea     rsi, [rax+r13]", "mov     edi, [rsi]", "test    edi, edi", "jnz     loc_93E1"], ["shl~r13,0", "lea~rsi,<TAG>", "mov~edi,<TAG>", "test~edi,edi", "jnz~FOO"]], [2, 1, 184, 2, 0, 5, 0, 0, 29, 25, 0.010252643948296123, ["add     rsi, 1", "mov     dword ptr [r11], 0", "add     r11, 20h", "cmp     rsi, r13", "jbe     short loc_8E50"], ["add~rsi,0", "mov~<TAG>,0", "add~r11,<STR>", "cmp~rsi,r13", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 30, 24, 0.010663924794359576, ["mov     [a], rsi"], ["mov~<TAG>,rsi"]], [1, 0, 184, 2, 0, 9, 2, 1, 22, 7, 0.05543478260869565, ["xor     ebp, ebp", "add     rsi, rax", "setb    bpl", "add     np, 1", "movsx   eax, byte ptr [rcx]", "test    rbp, rbp", "mov     r11, rsi", "lea     ebx, [rax-30h]", "jnz     short loc_968D"], ["xor~ebp,ebp", "add~rsi,rax", "setb~bpl", "add~np,0", "movsx~eax,<TAG>", "test~rbp,rbp", "mov~r11,rsi", "lea~ebx,[rax-30h]+0]", "jnz~FOO"]], [1, 0, 184, 1, 0, 5, 0, 1, 24, 8, 0.005141010575793185, ["sub     eax, 30h ; '0'", "mov     rsi, rdx", "mov     rdi, np", "cdqe", "jmp     short loc_9651"], ["sub~eax,0", "mov~rsi,rdx", "mov~rdi,np", "cdqe~", "jmp~FOO"]], [2, 0, 184, 1, 0, 4, 0, 1, 21, 12, 0.044594594594594604, ["mov     rbx, n", "sub     rbx, 1", "cmp     rbx, 0FFFFFFFFFFFFFFFDh", "ja      loc_93AD; jumptable 0000000000008E05 default case"], ["mov~rbx,n", "sub~rbx,0", "cmp~rbx,0", "ja~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 16, 4, 0.09952996474735605, ["mov     rbx, [dp+40h]", "cmp     rbx, 0FFFFFFFFFFFFFFFFh", "jz      loc_95E8"], ["mov~rbx,[dp+0]", "cmp~rbx,0", "jz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 29, 22, 0.08660399529964748, ["mov     [rsi], ecx"], ["mov~<TAG>,ecx"]], [1, 0, 184, 1, 0, 3, 0, 1, 22, 11, 0.044594594594594604, ["mov     [dp+28h], rbx", "add     rbp, 2", "jmp     loc_8F5A"], ["mov~[dp+0],rbx", "add~rbp,0", "jmp~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 16, 34, 0.004935370152761457, ["nop"], ["nop"]], [2, 0, 184, 1, 0, 4, 0, 1, 15, 33, 0.022591069330199765, ["movzx   eax, byte ptr [rbp+1]", "sub     eax, 30h ; '0'", "cmp     al, 9", "ja      short loc_91CE"], ["movzx~eax,[yte ptr [rbp+0]", "sub~eax,0", "cmp~al,0", "ja~FOO"]], [0, 0, 1, 0, 0, 7, 1, 0, 3, -1, 0.00024970622796709755, ["lea     rdx, [rsi+rsi*4]", "lea     rdx, [rsi+rdx*2]", "mov     [rax+rdx*8], cp_0", "mov     rax, [rsp+78h+max_precision_length]", "mov     [d+10h], max_width_length_0", "mov     [d+18h], rax", "xor     eax, eax"], ["lea~rdx,<TAG>", "lea~rdx,<TAG>", "mov~<TAG>,cp_0", "mov~rax,[rsp+0]", "mov~[d+0],max_width_length_0", "mov~[d+0],rax", "xor~eax,eax"]], [0, 0, 184, 0, 0, 3, 0, 0, 17, 3, 0.14703290246768508, ["cmp     a_allocated_0, rbx", "mov     rax, [a+8]", "jbe     loc_9530"], ["cmp~a_allocated_0,rbx", "mov~rax,[a+0]", "jbe~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 25, 4, 0.044594594594594604, ["mov     [dp+40h], rbx", "lea     rcx, [rdi+2]", "jmp     loc_9076"], ["mov~[dp+0],rbx", "lea~rcx,[rdi+0]", "jmp~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 24, 5, 0.044594594594594604, ["lea     rbx, [n-1]", "cmp     rbx, 0FFFFFFFFFFFFFFFDh", "ja      loc_93AD; jumptable 0000000000008E05 default case"], ["lea~rbx,[n-1]+0]", "cmp~rbx,0", "ja~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 2, -1, 0.0, ["add     rsp, 48h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     d", "pop     a", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~d", "pop~a", "retn"]], [2, 0, 1, 0, 1, 4, 0, 2, 17, -1, 0.00390716803760282, ["call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     eax, 0FFFFFFFFh", "jmp     loc_8C7E"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [2, 0, 1, 0, 1, 4, 0, 2, 1, -1, 0.001189776733254994, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch", "mov     eax, 0FFFFFFFFh", "jmp     loc_8C7E"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 184, 0, 0, 5, 0, 1, 25, 27, 0.009665099882491186, ["mov     rsi, [rsp+78h+arg_posn]", "cmp     rsi, 0FFFFFFFFFFFFFFFFh", "lea     rax, [rsi+1]", "mov     [dp+50h], rsi", "jz      loc_93AD; jumptable 0000000000008E05 default case"], ["mov~rsi,[rsp+0]", "cmp~rsi,0", "lea~rax,[rsi+0]", "mov~[dp+0],rsi", "jz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 23, 9, 0.006169212690951821, ["cmp     bl, 9", "ja      loc_93AD; jumptable 0000000000008E05 default case"], ["cmp~bl,0", "ja~FOO"]], [0, 0, 184, 0, 0, 7, 0, 0, 23, 21, 0.43278495887191537, ["mov     [dp+48h], bl; jumptable 0000000000008E05 case 0", "mov     rax, [d]", "mov     [dp+8], rbp", "lea     rsi, [rax+1]", "cmp     rsi, r9", "mov     [d], rsi", "jb      short loc_8F05"], ["mov~[dp+0],bl", "mov~rax,<TAG>", "mov~[dp+0],rbp", "lea~rsi,[rax+0]", "cmp~rsi,r9", "mov~<TAG>,rsi", "jb~FOO"]], [1, 0, 184, 2, 0, 6, 0, 1, 18, 33, 0.1422150411280846, ["mov     rsi, [a]", "mov     rdi, rsi", "shl     rdi, 5", "add     rdi, rax", "cmp     rsi, rbx", "ja      short loc_90AE"], ["mov~rsi,<TAG>", "mov~rdi,rsi", "shl~rdi,0", "add~rdi,rax", "cmp~rsi,rbx", "ja~FOO"]], [0, 0, 184, 0, 0, 2, 0, 1, 22, 34, 0.025440658049353703, ["mov     [a+8], memory", "jmp     loc_9083"], ["mov~[a+0],memory", "jmp~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 19, 35, 0.009841363102232667, ["nop     dword ptr [rax]"], ["nop~<TAG>"]], [1, 0, 184, 0, 0, 2, 0, 1, 13, 21, 0.008372502937720329, ["cmp     dil, 9", "ja      loc_93AD; jumptable 0000000000008E05 default case"], ["cmp~dil,0", "ja~FOO"]], [1, 0, 184, 2, 0, 9, 2, 1, 12, 19, 0.057638072855464156, ["movzx   ebx, byte ptr [rbp+1]", "xor     r11d, r11d", "add     rax, rdi", "setb    r11b", "add     rbp, 1", "mov     rcx, rax", "test    r11, r11", "lea     edi, [rbx-30h]", "jnz     loc_9492"], ["movzx~ebx,[yte ptr [rbp+0]", "xor~r11d,r11d", "add~rax,rdi", "setb~r11b", "add~rbp,0", "mov~rcx,rax", "test~r11,r11", "lea~edi,[rbx-30h]+0]", "jnz~FOO"]], [0, 0, 184, 0, 0, 2, 1, 1, 24, 23, 0.021063454759106932, ["test    r9, r9", "js      loc_94EA"], ["test~r9,r9", "js~FOO"]], [0, 0, 184, 0, 1, 7, 0, 2, 18, 12, 0.010825499412455935, ["mov     rdi, memory_size; size", "call    _malloc", "mov     r8, [rsp+78h+d_allocated]", "mov     r9, [rsp+78h+a_allocated]", "mov     r10, [rsp+78h+max_width_length]", "mov     rdx, [rsp+78h+cp]", "jmp     loc_8FC4"], ["mov~rdi,memory_size", "call~FOO", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]", "mov~r10,[rsp+0]", "mov~rdx,[rsp+0]", "jmp~FOO"]], [1, 0, 184, 1, 0, 8, 1, 1, 17, 13, 0.026204465334900118, ["mov     rsi, a_allocated_0", "mov     [rsp+78h+d_allocated], a_allocated_0", "mov     [rsp+78h+a_allocated], d_allocated_0", "shl     rsi, 5; size", "test    rax, rax", "mov     [rsp+78h+max_width_length], max_width_length_0", "mov     [rsp+78h+cp], rdx", "jz      loc_95A9"], ["mov~rsi,a_allocated_0", "mov~[rsp+0],a_allocated_0", "mov~[rsp+0],d_allocated_0", "shl~rsi,0", "test~rax,rax", "mov~[rsp+0],max_width_length_0", "mov~[rsp+0],rdx", "jz~FOO"]], [2, 1, 184, 2, 0, 5, 0, 0, 20, 34, 0.010252643948296123, ["add     rsi, 1", "mov     dword ptr [rdi], 0", "add     rdi, 20h", "cmp     rsi, rbx", "jbe     short loc_9098"], ["add~rsi,0", "mov~<TAG>,0", "add~rdi,<STR>", "cmp~rsi,rbx", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 21, 33, 0.010663924794359578, ["mov     [a], rsi"], ["mov~<TAG>,rsi"]], [1, 0, 184, 0, 0, 2, 0, 1, 18, 9, 0.007990599294947122, ["cmp     esi, 5", "jnz     error"], ["cmp~esi,0", "jnz~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 18, -1, 0.011236780258519388, ["mov     rdi, [d+8]; ptr", "test    rdi, rdi", "jz      short out_of_memory_1"], ["mov~rdi,[d+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 17, -1, 0.021107520564042304, ["test    rax, rax", "jz      short loc_94FB"], ["test~rax,rax", "jz~FOO"]], [0, 0, 4, 0, 1, 2, 0, 1, 18, -1, 0.0, ["mov     rdi, rax; ptr", "call    _free"], ["mov~rdi,rax", "call~FOO"]], [1, 0, 184, 1, 0, 5, 1, 1, 19, 32, 0.14386016451233843, ["shl     rbx, 5", "lea     rsi, [rax+rbx]", "mov     edi, [rsi]", "test    edi, edi", "jnz     loc_951E"], ["shl~rbx,0", "lea~rsi,<TAG>", "mov~edi,<TAG>", "test~edi,edi", "jnz~FOO"]], [1, 0, 184, 1, 0, 7, 0, 1, 25, 22, 0.014923619271445358, ["add     r9, r9", "mov     rax, 2E8BA2E8BA2E8BAh", "mov     [rsp+78h+a_allocated], a_allocated_0", "cmp     d_allocated_0, rax", "mov     [rsp+78h+max_width_length], r10", "mov     [rsp+78h+cp], rdx", "ja      loc_94EA"], ["add~r9,r9", "mov~rax,0", "mov~[rsp+0],a_allocated_0", "cmp~d_allocated_0,rax", "mov~[rsp+0],r10", "mov~[rsp+0],rdx", "ja~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 19, 8, 0.005992949471210342, ["movzx   ebx, byte ptr [rbp+0]", "lea     rcx, [rbp+1]", "jmp     loc_8D86"], ["movzx~ebx,[yte ptr [rbp+0]", "lea~rcx,[rbp+0]", "jmp~FOO"]], [0, 0, 184, 0, 1, 8, 0, 2, 20, 0, 0.010575793184488837, ["mov     rdi, memory_size; size", "call    _malloc", "mov     r8, [rsp+78h+var_40]", "mov     r9, [rsp+78h+d_allocated]", "mov     r10, [rsp+78h+a_allocated]", "mov     rdx, [rsp+78h+max_width_length]", "mov     rcx, [rsp+78h+cp]", "jmp     loc_9597"], ["mov~rdi,memory_size", "call~FOO", "mov~r8,[rsp+0]", "mov~r9,[rsp+0]", "mov~r10,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rcx,[rsp+0]", "jmp~FOO"]], [1, 0, 184, 1, 0, 9, 1, 1, 19, 1, 0.025705052878965923, ["mov     rsi, a_allocated_0", "mov     [rsp+78h+var_40], a_allocated_0", "mov     [rsp+78h+d_allocated], r9", "shl     rsi, 5; size", "test    rax, rax", "mov     [rsp+78h+a_allocated], max_width_length_0", "mov     [rsp+78h+max_width_length], rdx", "mov     [rsp+78h+cp], cp_0", "jz      loc_96A3"], ["mov~rsi,a_allocated_0", "mov~[rsp+0],a_allocated_0", "mov~[rsp+0],r9", "shl~rsi,0", "test~rax,rax", "mov~[rsp+0],max_width_length_0", "mov~[rsp+0],rdx", "mov~[rsp+0],cp_0", "jz~FOO"]], [1, 0, 184, 0, 0, 4, 0, 1, 20, 31, 0.1312573443008226, ["mov     dword ptr [rsi], 5", "mov     rbp, rcx", "movzx   ebx, byte ptr [rcx]", "jmp     loc_8D8F"], ["mov~<TAG>,0", "mov~rbp,rcx", "movzx~ebx,<TAG>", "jmp~FOO"]], [0, 0, 184, 0, 0, 2, 0, 0, 6, 18, 0.06304347826086956, ["mov     rax, cp_0", "nop     dword ptr [rax+00h]"], ["mov~rax,cp_0", "nop~[word ptr [rax+0]"]], [0, 0, 184, 0, 0, 1, 0, 1, 5, 19, 0.0626321974148061, ["jmp     loc_90D1"], ["jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 20, 16, 0.006169212690951821, ["cmp     r11b, 9", "ja      loc_93AD; jumptable 0000000000008E05 default case"], ["cmp~r11b,0", "ja~FOO"]], [2, 0, 184, 1, 0, 5, 0, 0, 7, 17, 0.06345475910693302, ["add     np, 1", "movzx   ecx, byte ptr [np]", "lea     esi, [rcx-30h]", "cmp     sil, 9", "jbe     short loc_90D8"], ["add~np,0", "movzx~ecx,<TAG>", "lea~esi,[rcx-30h]+0]", "cmp~sil,0", "jbe~FOO"]], [6, 0, 184, 0, 0, 17, 0, 1, 4, 16, 0.4350470035252644, ["lea     c, [rsi+rsi*4]", "mov     r13, rdx", "lea     rcx, [rsi+rcx*2]", "lea     r12, [rax+rcx*8]", "mov     [dp], rbx", "mov     dword ptr [dp+10h], 0", "mov     qword ptr [dp+18h], 0", "mov     qword ptr [dp+20h], 0", "mov     [dp+28h], rdx", "mov     qword ptr [dp+30h], 0", "mov     qword ptr [dp+38h], 0", "mov     [dp+40h], rdx", "mov     [dp+50h], rdx", "movzx   ebx, byte ptr [rbx+1]", "lea     eax, [rbx-30h]", "cmp     al, 9", "ja      short loc_8D16"], ["lea~c,<TAG>", "mov~r13,rdx", "lea~rcx,<TAG>", "lea~r12,<TAG>", "mov~<TAG>,rbx", "mov~[word ptr [dp+0],0", "mov~[word ptr [dp+0],0", "mov~[word ptr [dp+0],0", "mov~[dp+0],rdx", "mov~[word ptr [dp+0],0", "mov~[word ptr [dp+0],0", "mov~[dp+0],rdx", "mov~[dp+0],rdx", "movzx~ebx,[yte ptr [rbx+0]", "lea~eax,[rbx-30h]+0]", "cmp~al,0", "ja~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 14, -1, 0.02144535840188014, ["mov     rax, [a+8]; jumptable 0000000000008E05 default case"], ["mov~rax,[a+0]"]], [1, 0, 184, 0, 0, 5, 0, 1, 13, 12, 0.10005875440658049, ["mov     rdi, [rsp+78h+arg_posn]", "cmp     rdi, 0FFFFFFFFFFFFFFFFh", "lea     rcx, [rdi+1]", "mov     [dp+28h], rdi", "jz      loc_93AD; jumptable 0000000000008E05 default case"], ["mov~rdi,[rsp+0]", "cmp~rdi,0", "lea~rcx,[rdi+0]", "mov~[dp+0],rdi", "jz~FOO"]], [2, 0, 184, 1, 0, 4, 0, 1, 14, 17, 0.0445945945945946, ["mov     r13, n", "sub     r13, 1", "cmp     r13, 0FFFFFFFFFFFFFFFDh", "ja      loc_93AD; jumptable 0000000000008E05 default case"], ["mov~r13,n", "sub~r13,0", "cmp~r13,0", "ja~FOO"]], [1, 0, 184, 0, 0, 3, 0, 1, 8, 16, 0.06386603995299647, ["cmp     cl, 24h ; '$'", "mov     r13, rdx", "jnz     loc_8D16"], ["cmp~cl,0", "mov~r13,rdx", "jnz~FOO"]], [1, 0, 184, 1, 0, 7, 0, 1, 16, 14, 0.03381316098707403, ["add     a_allocated_0, a_allocated_0", "lea     rcx, [rbx+1]", "cmp     a_allocated_0, rbx", "cmovbe  a_allocated_0, rcx", "mov     rcx, 7FFFFFFFFFFFFFFh", "cmp     a_allocated_0, rcx", "ja      out_of_memory"], ["add~a_allocated_0,a_allocated_0", "lea~rcx,[rbx+0]", "cmp~a_allocated_0,rbx", "cmovbe~a_allocated_0,rcx", "mov~rcx,0", "cmp~a_allocated_0,rcx", "ja~FOO"]], [1, 0, 184, 1, 0, 7, 0, 1, 18, 2, 0.03108108108108108, ["add     a_allocated_0, a_allocated_0", "lea     rsi, [rbx+1]", "cmp     a_allocated_0, rbx", "cmovbe  a_allocated_0, rsi", "mov     rsi, 7FFFFFFFFFFFFFFh", "cmp     a_allocated_0, rsi", "ja      short out_of_memory"], ["add~a_allocated_0,a_allocated_0", "lea~rsi,[rbx+0]", "cmp~a_allocated_0,rbx", "cmovbe~a_allocated_0,rsi", "mov~rsi,0", "cmp~a_allocated_0,rsi", "ja~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 20, -1, 0.007917156286721504, ["mov     rax, [a+8]"], ["mov~rax,[a+0]"]], [1, 0, 184, 0, 0, 2, 0, 1, 6, 14, 0.46630434782608693, ["cmp     bl, 2Dh ; '-'", "jz      short loc_8D30"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 184, 0, 0, 4, 0, 1, 5, 15, 0.4754994124559342, ["lea     rax, [rbp+1]", "cmp     bl, 27h ; '''", "mov     rcx, rax", "jnz     short loc_8CF0"], ["lea~rax,[rbp+0]", "cmp~bl,0", "mov~rcx,rax", "jnz~FOO"]], [0, 0, 184, 0, 0, 1, 1, 0, 9, 22, 0.04494712103407755, ["xor     ecx, ecx"], ["xor~ecx,ecx"]], [1, 0, 184, 0, 0, 2, 0, 1, 7, 13, 0.46166274970622795, ["cmp     bl, 2Bh ; '+'", "jz      short loc_8D40"], ["cmp~bl,0", "jz~FOO"]], [0, 1, 184, 0, 0, 2, 0, 1, 8, 12, 0.4569623971797885, ["cmp     bl, 20h ; ' '", "jz      short loc_8D50"], ["cmp~bl,<STR>", "jz~FOO"]], [1, 0, 184, 1, 1, 12, 1, 2, 26, 21, 0.015129259694477086, ["lea     rax, [d_allocated_0+d_allocated_0*4]", "mov     rdi, [d+8]; ptr", "mov     [rsp+78h+d_allocated], d_allocated_0", "lea     rsi, [d_allocated_0+rax*2]", "shl     rsi, 3; size", "call    _realloc", "test    memory, memory", "mov     r9, [rsp+78h+d_allocated]", "mov     rdx, [rsp+78h+cp]", "mov     r10, [rsp+78h+max_width_length]", "mov     r8, [rsp+78h+a_allocated]", "jz      loc_94EA"], ["lea~rax,<TAG>", "mov~rdi,[d+0]", "mov~[rsp+0],d_allocated_0", "lea~rsi,<TAG>", "shl~rsi,0", "call~FOO", "test~memory,memory", "mov~r9,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r10,[rsp+0]", "mov~r8,[rsp+0]", "jz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 9, 11, 0.45220329024676853, ["cmp     bl, 23h ; '#'", "jz      short loc_8D60"], ["cmp~bl,0", "jz~FOO"]], [0, 0, 2, 0, 1, 1, 0, 1, 19, -1, 0.0, ["call    _free"], ["call~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 10, 10, 0.44738542890716804, ["cmp     bl, 30h ; '0'", "jnz     short loc_8D70"], ["cmp~bl,0", "jnz~FOO"]], [2, 0, 184, 1, 0, 7, 0, 1, 10, 21, 0.04588719153936545, ["movsx   eax, bl", "mov     rsi, 1999999999999999h", "mov     rdi, rdx", "sub     eax, 30h ; '0'", "cmp     n, rsi", "cdqe", "ja      short loc_9117"], ["movsx~eax,bl", "mov~rsi,0", "mov~rdi,rdx", "sub~eax,0", "cmp~n,rsi", "cdqe~", "ja~FOO"]], [1, 0, 184, 0, 0, 2, 0, 0, 13, 18, 0.04471210340775558, ["cmp     dil, 9", "jbe     short loc_90F6"], ["cmp~dil,0", "jbe~FOO"]], [0, 1, 184, 0, 0, 2, 1, 0, 11, 17, 0.0003231492361927144, ["or      dword ptr [dp+10h], 20h", "nop"], ["or~[word ptr [dp+0],<STR>", "nop"]], [0, 0, 184, 0, 0, 2, 0, 0, 7, 16, 0.03296122209165688, ["movzx   ebx, byte ptr [rax]", "mov     rbp, rax"], ["movzx~ebx,<TAG>", "mov~rbp,rax"]], [1, 0, 184, 0, 0, 2, 1, 1, 6, 17, 0.004641598119858989, ["or      dword ptr [dp+10h], 1", "jmp     short loc_8D10"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 7, 17, 8.813160987074031e-05, ["or      dword ptr [dp+10h], 2", "jmp     short loc_8D10"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 8, 17, 0.00014688601645123384, ["or      dword ptr [dp+10h], 4", "jmp     short loc_8D10"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 9, 17, 0.00020564042303172737, ["or      dword ptr [dp+10h], 8", "jmp     short loc_8D10"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 10, 17, 0.0002643948296122209, ["or      dword ptr [dp+10h], 10h", "jmp     short loc_8D10"], ["or~[word ptr [dp+0],0", "jmp~FOO"]], [0, 0, 184, 1, 0, 2, 0, 0, 11, 21, 0.0, ["lea     rdi, [n+n*4]", "add     rdi, rdi"], ["lea~rdi,<TAG>", "add~rdi,rdi"]], [0, 0, 184, 0, 0, 1, 0, 0, 11, 20, 0.04670975323149236, ["mov     rsi, rbp"], ["mov~rsi,rbp"]], [0, 0, 184, 0, 0, 3, 0, 1, 15, 16, 0.0445945945945946, ["lea     rbp, [rsi+2]", "movzx   ebx, byte ptr [rsi+2]", "jmp     loc_8D16"], ["lea~rbp,[rsi+0]", "movzx~ebx,[yte ptr [rsi+0]", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 20, 32, 0.008049353701527614, ["cmp     edi, 5", "jz      loc_91EA"], ["cmp~edi,0", "jz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 1, 21, -1, 0.002408930669800235, ["jmp     error"], ["jmp~FOO"]], [2, 0, 184, 0, 0, 9, 1, 0, 12, 13, 0.14612220916568744, ["test    max_width_length_0, max_width_length_0", "mov     esi, 1", "mov     [dp+18h], rbp", "cmovz   max_width_length_0, rsi", "mov     [dp+20h], rax", "movzx   esi, byte ptr [rbp+1]", "lea     edi, [rsi-30h]", "cmp     dil, 9", "jbe     loc_91F5"], ["test~max_width_length_0,max_width_length_0", "mov~esi,0", "mov~[dp+0],rbp", "cmovz~max_width_length_0,rsi", "mov~[dp+0],rax", "movzx~esi,[yte ptr [rbp+0]", "lea~edi,[rsi-30h]+0]", "cmp~dil,0", "jbe~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 11, 9, 0.44250881316098706, ["cmp     bl, 2Ah ; '*'", "jz      loc_8F0E"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 184, 1, 0, 6, 0, 1, 14, 20, 0.0051410105757931845, ["movsx   eax, bl", "mov     rdi, rdx", "mov     rsi, rbp", "sub     eax, 30h ; '0'", "cdqe", "jmp     loc_911A"], ["movsx~eax,bl", "mov~rdi,rdx", "mov~rsi,rbp", "sub~eax,0", "cdqe~", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 1, 1, 17, 31, 8.813160987074031e-05, ["or      eax, 4", "jmp     short loc_8DC3"], ["or~eax,0", "jmp~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 16, 28, 0.45193889541715626, ["cmp     bl, 4Ch ; 'L'", "jz      short loc_8DE0"], ["cmp~bl,0", "jz~FOO"]], [0, 0, 184, 0, 0, 3, 0, 0, 14, 11, 0.0949764982373678, ["mov     rbx, [rsp+78h+arg_posn]", "mov     rbp, cp_0", "mov     [rsp+78h+arg_posn], arg_posn_0"], ["mov~rbx,[rsp+0]", "mov~rbp,cp_0", "mov~[rsp+0],arg_posn_0"]], [0, 0, 184, 0, 0, 3, 0, 1, 15, 10, 0.145358401880141, ["cmp     a_allocated_0, rbx", "mov     rax, [a+8]", "ja      short loc_8FD1"], ["cmp~a_allocated_0,rbx", "mov~rax,[a+0]", "ja~FOO"]], [2, 0, 184, 1, 0, 6, 0, 0, 13, 10, 0.02444183313748531, ["mov     [dp+18h], rbp", "movzx   esi, byte ptr [rbp+0]", "mov     rdi, rbp", "sub     esi, 30h ; '0'", "cmp     sil, 9", "jbe     short loc_9187"], ["mov~[dp+0],rbp", "movzx~esi,[yte ptr [rbp+0]", "mov~rdi,rbp", "sub~esi,0", "cmp~sil,0", "jbe~FOO"]], [1, 0, 184, 0, 0, 3, 0, 0, 12, 8, 0.2918331374853114, ["lea     esi, [rbx-30h]", "cmp     sil, 9", "jbe     loc_915F"], ["lea~esi,[rbx-30h]+0]", "cmp~sil,0", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 1, 14, 9, 0.010076380728554641, ["jmp     short loc_91A6"], ["jmp~FOO"]], [0, 0, 184, 0, 0, 2, 1, 1, 19, 11, 0.02743830787309048, ["test    memory, memory", "jz      loc_94EA"], ["test~memory,memory", "jz~FOO"]], [0, 0, 184, 0, 0, 2, 1, 1, 21, 35, 0.026938895417156286, ["test    memory, memory", "jz      loc_94EA"], ["test~memory,memory", "jz~FOO"]], [1, 0, 184, 1, 0, 2, 0, 0, 15, 11, 0.0, ["mov     rbp, cp_0", "add     cp_0, 1"], ["mov~rbp,cp_0", "add~cp_0,0"]], [1, 0, 184, 0, 0, 4, 0, 0, 14, 10, 0.015188014101057579, ["movzx   esi, byte ptr [cp_0]", "lea     ecx, [rsi-30h]", "cmp     cl, 9", "jbe     short loc_9180"], ["movzx~esi,<TAG>", "lea~ecx,[rsi-30h]+0]", "cmp~cl,0", "jbe~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 15, 8, 0.026498237367802588, ["mov     [dp+20h], rbp", "movzx   ebx, byte ptr [rbp+0]", "jmp     loc_8D86"], ["mov~[dp+0],rbp", "movzx~ebx,[yte ptr [rbp+0]", "jmp~FOO"]], [0, 0, 184, 1, 0, 6, 0, 0, 15, 9, 0.010634547591069332, ["mov     rsi, cp_0", "lea     rcx, [rbp+2]", "mov     rbp, cp_0", "sub     rsi, rdi", "cmp     max_width_length_0, rsi", "cmovb   max_width_length_0, rsi"], ["mov~rsi,cp_0", "lea~rcx,[rbp+0]", "mov~rbp,cp_0", "sub~rsi,rdi", "cmp~max_width_length_0,rsi", "cmovb~max_width_length_0,rsi"]], [0, 0, 184, 0, 1, 7, 0, 1, 20, 36, 0.010575793184488837, ["mov     rdi, rax; ptr", "call    _realloc", "mov     rcx, [rsp+78h+cp]", "mov     rdx, [rsp+78h+max_width_length]", "mov     r10, [rsp+78h+a_allocated]", "mov     r9, [rsp+78h+d_allocated]", "mov     r8, [rsp+78h+var_40]"], ["mov~rdi,rax", "call~FOO", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]"]], [1, 0, 184, 0, 0, 3, 1, 1, 14, 30, 0.43334312573443007, ["xor     eax, eax", "mov     esi, 1", "jmp     short loc_8DC7"], ["xor~eax,eax", "mov~esi,0", "jmp~FOO"]], [0, 0, 184, 0, 0, 3, 0, 1, 17, 31, 0.03025851938895418, ["movzx   ebx, byte ptr [rcx]", "mov     rbp, rcx", "jmp     loc_8D8F"], ["movzx~ebx,<TAG>", "mov~rbp,rcx", "jmp~FOO"]], [2, 0, 184, 1, 0, 3, 0, 1, 15, 29, 0.461192714453584, ["add     rbp, 1", "cmp     bl, 68h ; 'h'", "jnz     short loc_8DA0"], ["add~rbp,0", "cmp~bl,0", "jnz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 17, 27, 0.4472972972972973, ["cmp     bl, 6Ch ; 'l'", "jz      short loc_8DC0"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 18, 26, 0.4427144535840188, ["cmp     bl, 6Ah ; 'j'", "jz      short loc_8DC0"], ["cmp~bl,0", "jz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 15, -1, 0.024118683901292598, ["test    rax, rax", "jz      short loc_93BE"], ["test~rax,rax", "jz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 1, 30, -1, 0.002408930669800235, ["jmp     short error"], ["jmp~FOO"]], [2, 0, 184, 0, 0, 4, 1, 1, 19, 25, 0.4429200940070505, ["mov     ecx, ebx", "and     ecx, 0FFFFFFDFh", "cmp     cl, 5Ah ; 'Z'", "jz      short loc_8DC0"], ["mov~ecx,ebx", "and~ecx,0", "cmp~cl,0", "jz~FOO"]], [0, 0, 4, 0, 1, 2, 0, 1, 16, -1, 0.0, ["mov     rdi, rax; ptr", "call    _free"], ["mov~rdi,rax", "call~FOO"]], [1, 0, 184, 0, 0, 2, 0, 1, 20, 24, 0.443096357226792, ["cmp     bl, 74h ; 't'", "jnz     short loc_8DE8"], ["cmp~bl,0", "jnz~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 21, 32, 0.0002643948296122209, ["xchg    ax, ax"], ["xchg~ax,ax"]], [0, 0, 184, 0, 1, 6, 0, 1, 18, 12, 0.010825499412455935, ["mov     rdi, rax; ptr", "call    _realloc", "mov     rdx, [rsp+78h+cp]", "mov     r10, [rsp+78h+max_width_length]", "mov     r9, [rsp+78h+a_allocated]", "mov     r8, [rsp+78h+d_allocated]"], ["mov~rdi,rax", "call~FOO", "mov~rdx,[rsp+0]", "mov~r10,[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]"]], [1, 0, 184, 1, 0, 1, 0, 0, 18, 31, 0.006110458284371329, ["add     eax, 8"], ["add~eax,0"]], [0, 0, 184, 0, 0, 1, 0, 0, 17, 30, 0.022062279670975328, ["movzx   ebx, byte ptr [rbp+0]"], ["movzx~ebx,[yte ptr [rbp+0]"]], [1, 0, 184, 1, 0, 6, 2, 1, 16, 31, 0.004700352526439483, ["mov     ecx, eax", "mov     edi, esi", "and     ecx, 1", "shl     edi, cl", "or      eax, edi", "jmp     short loc_8DC3"], ["mov~ecx,eax", "mov~edi,esi", "and~ecx,0", "shl~edi,cl", "or~eax,edi", "jmp~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 16, -1, 0.014130434782608696, ["mov     rdi, [d+8]; ptr", "test    rdi, rdi", "jz      short loc_93CC"], ["mov~rdi,[d+0]", "test~rdi,rdi", "jz~FOO"]], [3, 0, 184, 2, 0, 5, 0, 0, 17, 33, 0.005346650998824913, ["add     cp_0, 1", "movzx   eax, byte ptr [cp_0]", "sub     eax, 30h ; '0'", "cmp     al, 9", "jbe     short loc_91C0"], ["add~cp_0,0", "movzx~eax,<TAG>", "sub~eax,0", "cmp~al,0", "jbe~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 20, 10, 0.025440658049353703, ["mov     [a+8], memory"], ["mov~[a+0],memory"]], [0, 0, 2, 0, 1, 1, 0, 1, 17, -1, 0.0, ["call    _free"], ["call~FOO"]], [0, 0, 184, 0, 0, 1, 0, 0, 17, 11, 0.009841363102232667, ["nop     dword ptr [rax+rax+00h]"], ["nop~[word ptr [rax+0]"]], [0, 0, 184, 1, 0, 7, 0, 0, 16, 32, 0.02382491186839013, ["mov     rdi, [rsp+78h+max_precision_length]", "mov     rax, rcx", "mov     [dp+38h], rcx", "sub     rax, rbp", "cmp     rdi, rax", "cmovnb  rax, rdi", "mov     [rsp+78h+max_precision_length], rax"], ["mov~rdi,[rsp+0]", "mov~rax,rcx", "mov~[dp+0],rcx", "sub~rax,rbp", "cmp~rdi,rax", "cmovnb~rax,rdi", "mov~[rsp+0],rax"]], [2, 1, 184, 2, 0, 5, 0, 0, 18, 10, 0.010252643948296123, ["add     rcx, 1", "mov     dword ptr [rsi], 0", "add     rsi, 20h", "cmp     rcx, rbx", "jbe     short loc_8FE8"], ["add~rcx,0", "mov~<TAG>,0", "add~rsi,<STR>", "cmp~rcx,rbx", "jbe~FOO"]]], "func_feature": [14, 58, 138, 1, 186, 294, 1, 687, 0.08677, 1, 63], "succs": [[33, 27, 11, 14, 19, 117, 24, 25, 26, 91, 28], [0, 117], [9, 2], [2], [35, 102], [4, 183], [4], [104, 43], [49, 7], [12, 118], [88, 55], [13], [45], [89, 36], [13, 15], [16, 13], [17, 13], [18, 13], [13], [20, 13], [13, 21], [13, 22], [13, 23], [13], [13], [13], [13], [13], [13, 29], [13, 30], [13, 31], [32, 13], [13], [34, 13], [13], [41, 164], [8], [77, 39], [37, 38], [51], [8], [81, 54], [41, 164], [67, 68], [46], [44, 46], [58], [83], [117, 47], [53, 71], [49], [56, 57], [51, 85], [72], [65, 77], [61], [74], [56], [114, 69], [58], [116, 62], [82, 60], [61], [62], [62], [38], [50, 123], [66], [66], [76, 45], [170, 91], [78, 70], [72, 73], [71], [90, 52], [74], [117, 79], [48, 83], [91], [153], [180], [80, 184], [86], [122, 92], [83], [84, 117], [], [86], [86], [40, 117], [75, 117], [64, 97], [106, 94], [92], [100], [117, 149], [134, 95], [123, 107], [157], [98, 175], [100, 101], [106], [169, 108], [88, 131], [105, 103], [103], [145, 111], [129, 123], [42], [158], [163, 109], [164], [115], [112], [59, 117], [120, 115], [113, 125], [169], [152, 117], [144, 117], [125, 126], [104, 99], [104, 110], [104], [138, 127], [137, 124], [133], [128, 139], [130, 140], [123, 63], [132, 141], [88], [148, 135], [142, 143], [133, 119], [136], [125], [136], [136], [136], [136], [136], [143], [96], [125], [146, 165], [169], [3, 118], [147, 155], [96], [177], [150, 167], [153], [121, 5], [160, 156], [154, 42], [161], [123, 181], [123, 93], [160], [162, 159], [42], [161], [158], [166], [164], [178, 151], [168, 176], [176, 171], [179, 172], [169], [176, 173], [179], [1, 174], [176], [157], [177], [166], [177], [182, 87], [184, 180], [5], [87], [185], [165], [185, 6]], "fname": "printf_parse", "n_num": 186}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 0, 0, 0, 0.16666666666666666, ["xor     ebx, ebx", "nop     dword ptr [rax+rax+00000000h]"], ["xor~ebx,ebx", "nop~[word ptr [rax+0]"]], [2, 0, 3, 2, 1, 17, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15, rdx", "push    r13", "push    r12", "lea     r12, __frame_dummy_init_array_entry", "push    rbp", "lea     rbp, __do_global_dtors_aux_fini_array_entry", "push    rbx", "mov     r13d, edi", "mov     r14, rsi", "sub     rbp, r12", "sub     rsp, 8", "sar     rbp, 3", "call    _init_proc", "test    rbp, rbp", "jz      short loc_9726"], ["push~r15", "push~r14", "mov~r15,rdx", "push~r13", "push~r12", "lea~r12,<TAG>", "push~rbp", "lea~rbp,<TAG>", "push~rbx", "mov~r13d,edi", "mov~r14,rsi", "sub~rbp,r12", "sub~rsp,0", "sar~rbp,0", "call~FOO", "test~rbp,rbp", "jz~FOO"]], [1, 0, 2, 1, 1, 7, 0, 2, 2, 1, 0.16666666666666666, ["mov     rdx, r15", "mov     rsi, r14", "mov     edi, r13d", "call    qword ptr [r12+rbx*8]", "add     rbx, 1", "cmp     rbp, rbx", "jnz     short loc_9710"], ["mov~rdx,r15", "mov~rsi,r14", "mov~edi,r13d", "call~<TAG>", "add~rbx,0", "cmp~rbp,rbx", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 5, 0, 34, 0.08333, 2, 4], "succs": [[2], [0, 3], [2, 3], []], "fname": "__libc_csu_init", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_csu_fini", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rdx, cs:__dso_handle", "xor     esi, esi", "jmp     ___cxa_atexit"], ["mov~rdx,<TAG>", "xor~esi,esi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 1, 3, 0.0, 1, 0], "succs": [[1], []], "fname": "atexit", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[2, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0.0, ["sub     rsp, 8; _fini", "add     rsp, 8", "retn"], ["sub~rsp,0", "add~rsp,0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 2], "succs": [[]], "fname": "term_proc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_toupper_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_toupper_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getenv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getenv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigprocmask:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigprocmask", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __snprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__snprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn raise:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "raise", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn free:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn abort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __errno_location:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fdatasync:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fdatasync", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strncmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fpending:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigaction_0:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigaction_0", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn localeconv:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "localeconv", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fcntl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn clock_gettime:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "clock_gettime", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn write:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "write", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn textdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fclose:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn bindtextdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dcgettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_get_mb_cur_max:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strlen:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strlen", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __stack_chk_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getopt_long:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbrtowc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dup2:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dup2", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __overflow:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__overflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ftruncate:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ftruncate", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn lseek:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn gettimeofday:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "gettimeofday", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __assert_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __strtoul_internal:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__strtoul_internal", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn ioctl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "ioctl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn close:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn read:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "read", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __libc_start_main:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_start_main", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fputs_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn calloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __memcpy_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__memcpy_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigemptyset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigemptyset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn malloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn realloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn setlocale:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __printf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memmove:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn error:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fsync:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fsync", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn open:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dcngettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dcngettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __cxa_atexit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getpagesize:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getpagesize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigismember:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigismember", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fwrite:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbsinit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswprint:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp___cxa_finalize:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp___cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn sigaddset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "sigaddset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_tolower_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_tolower_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_b_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __sprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__sprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_6.12_x86_O1_dd.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __gmon_start__:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__gmon_start__", "n_num": 1}
