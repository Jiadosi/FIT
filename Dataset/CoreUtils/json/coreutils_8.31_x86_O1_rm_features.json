{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    rax ; __gmon_start__"], ["call~rax"]], [1, 0, 2, 1, 0, 4, 1, 1, 0, 1, 0.0, ["sub     rsp, 8; _init", "mov     rax, cs:__gmon_start___ptr", "test    rax, rax", "jz      short loc_193A"], ["sub~rsp,0", "mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 3, 1, 7, 0.0, 1, 2], "succs": [[2], [0, 2], []], "fname": "init_proc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0.0, ["push    cs:qword_20EDB0", "jmp     cs:qword_20EDB8"], ["push~<TAG>", "jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 64, 2, 0.0, 2, 0], "succs": [[]], "fname": "sub_1940", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:abort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 21, 1, 0.0, 1, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__errno_location_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 58, 1, 0.0, 1, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strncmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:_exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fpending_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:unlinkat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "unlinkat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:qsort_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "qsort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:isatty_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "isatty", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:faccessat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "faccessat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fcntl_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 9, 1, 0.0, 1, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:textdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fclose_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:bindtextdomain_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dcgettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 78, 1, 0.0, 1, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_get_mb_cur_max_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__lxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "__lxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:openat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "openat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__stack_chk_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 26, 1, 0.0, 1, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:getopt_long_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbrtowc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstatat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstatat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__overflow_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__overflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strrchr_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:lseek_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__assert_fail_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memset_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:geteuid_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "geteuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:close_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 17, 1, 0.0, 1, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:closedir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 10, 1, 0.0, 1, 0], "succs": [[]], "fname": "closedir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fputs_unlocked_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 13, 1, 0.0, 1, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:calloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__getdelim_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__getdelim", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:strcmp_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dirfd_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "dirfd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:rpmatch_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "rpmatch", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fileno_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__xstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__xstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:readdir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "readdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:malloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 10, 1, 0.0, 1, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fflush_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:nl_langinfo_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fxstat_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__freading_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fchdir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 5, 1, 0.0, 1, 0], "succs": [[]], "fname": "fchdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:realloc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:setlocale_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__printf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 11, 1, 0.0, 1, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mempcpy_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "mempcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:memmove_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 4, 1, 0.0, 1, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:error_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 27, 1, 0.0, 1, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:open_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fseeko_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:dcngettext_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "dcngettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fdopendir_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 3, 1, 0.0, 1, 0], "succs": [[]], "fname": "fdopendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fstatfs_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fstatfs", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_atexit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:exit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 2, 1, 0.0, 1, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:fwrite_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__fprintf_chk_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 24, 1, 0.0, 1, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:mbsinit_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:iswprint_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__ctype_b_loc_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:data_freer"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 39, 1, 0.0, 1, 0], "succs": [[]], "fname": "free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0.0, ["jmp     cs:__cxa_finalize_ptr"], ["jmp~<TAG>"]]], "func_feature": [0, 0, 1, 0, 1, 0, 1, 1, 0.0, 1, 0], "succs": [[]], "fname": "__cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 0, 0, 1, 12, 2, 1, 0, 0, 0.0, ["xor     ebp, ebp", "mov     r9, rdx; rtld_fini", "pop     rsi; argc", "mov     rdx, rsp; ubp_av", "and     rsp, 0FFFFFFFFFFFFFFF0h", "push    rax", "push    rsp; stack_end", "lea     r8, __libc_csu_fini; fini", "lea     rcx, __libc_csu_init; init", "lea     rdi, main; main", "call    cs:__libc_start_main_ptr", "hlt"], ["xor~ebp,ebp", "mov~r9,rdx", "pop~rsi", "mov~rdx,rsp", "and~rsp,0", "push~rax", "push~rsp", "lea~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdi,<TAG>", "call~<TAG>", "hlt"]]], "func_feature": [1, 2, 1, 0, 1, 0, 0, 12, 0.0, 4, 0], "succs": [[]], "fname": "_start", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 2, 0, 0, 3, 1, 1, 0, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_deregisterTMCloneTable_ptr", "test    rax, rax", "jz      short loc_1DC0"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 3, 0, 0, 6, 0, 1, 0, 1, 0.0, ["lea     rdi, __bss_start", "push    rbp", "lea     rax, __bss_start", "cmp     rax, rdi", "mov     rbp, rsp", "jz      short loc_1DC0"], ["lea~rdi,<TAG>", "push~rbp", "lea~rax,<TAG>", "cmp~rax,rdi", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, -1, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 13, 0.04167, 2, 0], "succs": [[2, 3], [0, 3], [], []], "fname": "deregister_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     rbp", "retn"], ["pop~rbp", "retn"]], [3, 0, 3, 2, 0, 11, 0, 1, 0, 0, 0.0, ["lea     rdi, __bss_start", "lea     rsi, __bss_start", "push    rbp", "sub     rsi, rdi", "mov     rbp, rsp", "sar     rsi, 3", "mov     rax, rsi", "shr     rax, 3Fh", "add     rsi, rax", "sar     rsi, 1", "jz      short loc_1E10"], ["lea~rdi,<TAG>", "lea~rsi,<TAG>", "push~rbp", "sub~rsi,rdi", "mov~rbp,rsp", "sar~rsi,0", "mov~rax,rsi", "shr~rax,0", "add~rsi,rax", "sar~rsi,0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 1, 0, 0.16666666666666666, ["mov     rax, cs:_ITM_registerTMCloneTable_ptr", "test    rax, rax", "jz      short loc_1E10"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 1, 2, 0, 0.0, ["pop     rbp", "jmp     rax"], ["pop~rbp", "jmp~rax"]]], "func_feature": [0, 1, 3, 0, 4, 4, 1, 18, 0.04167, 2, 2], "succs": [[], [0, 2], [0, 3], []], "fname": "register_tm_clones", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 0, 0, 1, 4, 0, 1, 0, 0, 0.0, ["call    deregister_tm_clones", "mov     cs:completed_7698, 1", "pop     rbp", "retn"], ["call~FOO", "mov~<TAG>,0", "pop~rbp", "retn"]], [1, 0, 2, 0, 0, 4, 0, 1, 1, -1, 0.16666666666666666, ["cmp     cs:__cxa_finalize_ptr, 0", "push    rbp", "mov     rbp, rsp", "jz      short loc_1E43"], ["cmp~<TAG>,0", "push~rbp", "mov~rbp,rsp", "jz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     rdi, cs:__dso_handle", "call    __cxa_finalize"], ["mov~rdi,<TAG>", "call~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 4, 0, 0, 2, 0, 1, 0, 1, 0.0, ["cmp     cs:completed_7698, 0", "jnz     short locret_1E58"], ["cmp~<TAG>,0", "jnz~FOO"]]], "func_feature": [2, 0, 4, 0, 5, 5, 0, 13, 0.03333, 3, 0], "succs": [[], [0, 2], [0], [], [1, 3]], "fname": "__do_global_dtors_aux", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []], [0, 0, 1, 0, 0, 4, 0, 1, 0, 0, 0.0, ["push    rbp", "mov     rbp, rsp", "pop     rbp", "jmp     register_tm_clones"], ["push~rbp", "mov~rbp,rsp", "pop~rbp", "jmp~FOO"]]], "func_feature": [0, 0, 1, 0, 2, 1, 0, 4, 0.0, 0, 0], "succs": [[], [0]], "fname": "frame_dummy", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[6, 0, 5, 0, 3, 15, 1, 4, 0, 0, 0.08125, ["mov     edx, 5; category", "lea     rsi, aSOnlineHelpS; \"\\n%s online help: <%s>\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, package; \"GNU \"", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     esi, 0; locale", "mov     edi, 5; category", "call    _setlocale", "test    rax, rax", "jz      short loc_21BF"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~esi,0", "mov~edi,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 11, 0, 0, 3, 1, 1, 3, 3, 0.17916666666666667, ["mov     rbp, [rdx+8]", "test    rbp, rbp", "jz      loc_22C1"], ["mov~rbp,[rdx+0]", "test~rbp,rbp", "jz~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 2, -1, 0.0, ["mov     edi, ebx; status", "call    _exit"], ["mov~edi,ebx", "call~FOO"]], [4, 0, 1, 0, 2, 11, 0, 3, 6, -1, 0.05416666666666667, ["mov     edx, 5; category", "lea     rsi, aOrAvailableLoc; \"or available locally via: info '(coreut\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "jmp     loc_1EC1"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,r12", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [4, 0, 1, 0, 2, 11, 0, 2, 1, -1, 0.004166666666666667, ["mov     rbp, cs:program_name", "mov     edx, 5; category", "lea     rsi, msgid; \"Try '%s --help' for more information.\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     eax, 0", "call    ___fprintf_chk"], ["mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "mov~esi,0", "mov~rdi,<TAG>", "mov~eax,0", "call~FOO"]], [0, 0, 4, 0, 0, 1, 0, 0, 6, -1, 0.016666666666666666, ["lea     rbp, command_name; \"rm\""], ["lea~rbp,<TAG>"]], [1, 0, 6, 0, 1, 6, 1, 2, 5, 1, 0.058333333333333334, ["mov     edx, 3; n", "lea     rsi, s2; \"en_\"", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     loc_2244"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 16, 1, 0, 10, 2, 1, 0, 6, 0.0, ["push    r12", "push    rbp", "push    rbx", "add     rsp, 0FFFFFFFFFFFFFF80h", "mov     ebx, edi", "mov     rax, fs:28h", "mov     [rsp+98h+var_20], rax", "xor     eax, eax", "test    edi, edi", "jz      short loc_1EC8"], ["push~r12", "push~rbp", "push~rbx", "add~rsp,0", "mov~ebx,edi", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~edi,edi", "jz~FOO"]], [28, 0, 14, 0, 22, 118, 0, 22, 1, 5, 0.05416666666666667, ["mov     rbp, cs:program_name", "mov     edx, 5; category", "lea     rsi, aUsageSOptionFi; \"Usage: %s [OPTION]... [FILE]...\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aRemoveUnlinkTh; \"Remove (unlink) the FILE(s).\\n\\n  -f, -\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aIPromptOnceBef; \"  -I                    prompt once bef\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aOneFileSystemW; \"      --one-file-system  when removing \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aNoPreserveRoot_0; \"      --no-preserve-root  do not treat \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aRRRecursiveRem; \"  -r, -R, --recursive   remove director\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aHelpDisplayThi; \"      --help     display this help and \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aVersionOutputV; \"      --version  output version informa\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aByDefaultRmDoe; \"\\nBy default, rm does not remove direct\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     rbp, cs:program_name", "mov     edx, 5; category", "lea     rsi, aToRemoveAFileW; \"\\nTo remove a file whose name starts wi\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rbp", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     rbp, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aNoteThatIfYouU; \"\\nNote that if you use rm to remove a f\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbp; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "lea     rax, asc_A3E7; \"[\"", "mov     [rsp+98h+var_98], rax", "lea     rax, aTestInvocation; \"test invocation\"", "mov     [rsp+98h+var_90], rax", "lea     rax, domainname; \"coreutils\"", "mov     [rsp+98h+var_88], rax", "lea     rax, aMultiCallInvoc; \"Multi-call invocation\"", "mov     [rsp+98h+var_80], rax", "lea     rax, aSha224sum; \"sha224sum\"", "mov     [rsp+98h+var_78], rax", "lea     rax, aSha2Utilities; \"sha2 utilities\"", "mov     [rsp+98h+var_70], rax", "lea     rcx, aSha256sum; \"sha256sum\"", "mov     [rsp+98h+var_68], rcx", "mov     [rsp+98h+var_60], rax", "lea     rcx, aSha384sum; \"sha384sum\"", "mov     [rsp+98h+var_58], rcx", "mov     [rsp+98h+var_50], rax", "lea     rcx, aSha512sum; \"sha512sum\"", "mov     [rsp+98h+var_48], rcx", "mov     [rsp+98h+var_40], rax", "mov     [rsp+98h+var_38], 0", "mov     [rsp+98h+var_30], 0", "mov     rdx, rsp", "lea     r8, command_name; \"rm\""], ["mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbp", "mov~rdx,rbp", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rbp,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbp", "mov~rdi,rax", "call~FOO", "lea~rax,<TAG>", "mov~<TAG>,rax", "lea~rax,<TAG>", "mov~[rsp+0],rax", "lea~rax,<TAG>", "mov~[rsp+0],rax", "lea~rax,<TAG>", "mov~[rsp+0],rax", "lea~rax,<TAG>", "mov~[rsp+0],rax", "lea~rax,<TAG>", "mov~[rsp+0],rax", "lea~rcx,<TAG>", "mov~[rsp+0],rcx", "mov~[rsp+0],rax", "lea~rcx,<TAG>", "mov~[rsp+0],rcx", "mov~[rsp+0],rax", "lea~rcx,<TAG>", "mov~[rsp+0],rcx", "mov~[rsp+0],rax", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~rdx,rsp", "lea~r8,<TAG>"]], [2, 0, 3, 0, 2, 9, 0, 3, 6, -1, 0.020833333333333332, ["mov     r12, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aReportAnyTrans; \"Report any translation bugs to <https:/\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, r12; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "jmp     loc_21BF"], ["mov~r12,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,r12", "mov~rdi,rax", "call~FOO", "jmp~FOO"]], [1, 0, 4, 0, 1, 6, 1, 2, 5, -1, 0.025, ["mov     edx, 3; n", "lea     rsi, s2; \"en_\"", "mov     rdi, rax; s1", "call    _strncmp", "test    eax, eax", "jnz     loc_224B"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,rax", "call~FOO", "test~eax,eax", "jnz~FOO"]], [4, 0, 2, 0, 2, 13, 0, 3, 5, -1, 0.027083333333333334, ["mov     edx, 5; category", "lea     rsi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "lea     rcx, command_name; \"rm\"", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "lea     rbp, command_name; \"rm\"", "lea     r12, aMultiCallInvoc+0Ah; \" invocation\"", "jmp     loc_2211"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "lea~rbp,<TAG>", "lea~r12,<TAG>", "jmp~FOO"]], [6, 0, 8, 0, 3, 15, 1, 4, 4, 2, 0.10208333333333333, ["mov     edx, 5; category", "lea     rsi, aSOnlineHelpS; \"\\n%s online help: <%s>\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, package; \"GNU \"", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     esi, 0; locale", "mov     edi, 5; category", "call    _setlocale", "test    rax, rax", "jz      loc_2278"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~esi,0", "mov~edi,0", "call~FOO", "test~rax,rax", "jz~FOO"]], [2, 0, 14, 0, 0, 7, 1, 1, 3, 4, 0.0, ["mov     ecx, 3", "mov     rsi, r8", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     short loc_212D"], ["mov~ecx,0", "mov~rsi,r8", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [1, 0, 14, 1, 0, 4, 1, 1, 2, 4, 0.10416666666666667, ["add     rdx, 10h", "mov     rdi, [rdx]", "test    rdi, rdi", "jz      short loc_214C"], ["add~rdx,0", "mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [4, 0, 2, 0, 2, 15, 0, 2, 5, -1, 0.052083333333333336, ["mov     edx, 5; category", "lea     rsi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "lea     rcx, command_name; \"rm\"", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "lea     rax, command_name; \"rm\"", "cmp     rbp, rax", "lea     r12, aMultiCallInvoc+0Ah; \" invocation\"", "lea     rax, aWrittenBySSAnd+1Bh; \"\"", "cmovnz  r12, rax"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "lea~rax,<TAG>", "cmp~rbp,rax", "lea~r12,<TAG>", "lea~rax,<TAG>", "cmovnz~r12,rax"]], [4, 0, 2, 0, 2, 13, 0, 3, 6, 0, 0.008333333333333333, ["mov     edx, 5; category", "lea     rsi, aFullDocumentat; \"Full documentation <%s%s>\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "lea     rcx, command_name; \"rm\"", "lea     rdx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "lea     rbp, command_name; \"rm\"", "lea     r12, aMultiCallInvoc+0Ah; \" invocation\"", "jmp     loc_2211"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "lea~rbp,<TAG>", "lea~r12,<TAG>", "jmp~FOO"]]], "func_feature": [43, 9, 55, 15, 17, 24, 4, 259, 0.04632, 35, 2], "succs": [[10, 15], [0, 12], [], [2], [2], [9], [16, 5], [8, 4], [14], [15], [9, 15], [3], [11, 6], [1, 14], [1, 13], [3], [3]], "fname": "usage", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[2, 0, 71, 0, 0, 9, 1, 1, 0, 0, 0.021629778672032193, ["movsxd  c, cs:optind@@GLIBC_2_2_5", "mov     rsi, [argv+rax*8-8]", "mov     ecx, 13h", "mov     rdi, r13", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     short loc_268D"], ["movsxd~c,<TAG>", "mov~rsi,[argv+0]", "mov~ecx,0", "mov~rdi,r13", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 7, 7, 0.04084507042253521, ["cmp     eax, 83h", "jl      loc_2663"], ["cmp~eax,0", "jl~FOO"]], [2, 0, 4, 0, 1, 9, 0, 1, 5, 2, 0.015593561368209255, ["mov     rsi, rsp; x", "mov     rdi, file; file", "call    rm", "lea     edx, [status-2]", "cmp     eax, 4", "setz    al", "movzx   eax, al", "cmp     edx, 2", "jbe     loc_27F7"], ["mov~rsi,rsp", "mov~rdi,file", "call~FOO", "lea~edx,[status-2]+0]", "cmp~eax,0", "setz~al", "movzx~eax,al", "cmp~edx,0", "jbe~FOO"]], [0, 0, 12, 0, 0, 5, 1, 1, 4, 3, 0.07042253521126758, ["mov     eax, cs:optind@@GLIBC_2_2_5", "movsxd  rdx, eax", "lea     r13, [argv+rdx*8]", "test    r12b, r12b", "jz      short loc_28E7"], ["mov~eax,<TAG>", "movsxd~rdx,eax", "lea~r13,<TAG>", "test~r12b,r12b", "jz~FOO"]], [0, 0, 10, 0, 0, 2, 1, 1, 6, 3, 0.001006036217303823, ["test    al, al", "jz      short loc_28E7"], ["test~al,al", "jz~FOO"]], [2, 0, 6, 0, 2, 10, 1, 3, 8, 3, 0.014285714285714285, ["mov     r8, rbx", "mov     rcx, rbp", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     eax, 0", "call    ___fprintf_chk", "call    yesno", "test    al, al", "jz      loc_29AF"], ["mov~r8,rbx", "mov~rcx,rbp", "mov~rdx,rax", "mov~esi,0", "mov~rdi,<TAG>", "mov~eax,0", "call~FOO", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 71, 0, 0, 3, 1, 1, 8, 6, 0.04939637826961771, ["mov     rsi, cs:optarg@@GLIBC_2_2_5; arg", "test    rsi, rsi", "jz      short loc_25CD"], ["mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [0, 1, 71, 0, 0, 2, 0, 1, 7, 7, 0.06488933601609657, ["cmp     eax, 80h", "jnz     short loc_25E4"], ["cmp~eax,<STR>", "jnz~FOO"]], [5, 0, 8, 0, 4, 16, 0, 4, 6, 5, 0.011066398390342045, ["lea     rsi, aLibs+6; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     argc, rax", "mov     edx, 5; category", "lea     rsi, aFailedToGetAtt; \"failed to get attributes of %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     argv, rax", "call    ___errno_location", "mov     rcx, rbp", "mov     rdx, rbx; format", "mov     esi, [rax]; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~argc,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~argv,rax", "call~FOO", "mov~rcx,rbp", "mov~rdx,rbx", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO"]], [0, 0, 14, 0, 1, 5, 1, 2, 5, 4, 0.019114688128772643, ["lea     rdi, dev_ino_buf_6971; root_d_i", "call    get_root_dev_ino", "mov     [rsp+0E8h+x.root_dev_ino], rax", "test    rax, rax", "jnz     loc_2865"], ["lea~rdi,<TAG>", "call~FOO", "mov~[rsp+0],rax", "test~rax,rax", "jnz~FOO"]], [1, 0, 11, 1, 0, 5, 0, 1, 5, 4, 0.043259557344064406, ["sub     ebp, eax", "movsxd  argv, ebp", "movzx   eax, [rsp+0E8h+x.recursive]", "cmp     rbx, 3", "ja      short loc_288B"], ["sub~ebp,eax", "movsxd~argv,ebp", "movzx~eax,[rsp+0]", "cmp~rbx,0", "ja~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 6, 7, 0.07987927565392354, ["cmp     eax, 83h", "jz      loc_26BA"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 5, 7, 0.16448692152917505, ["cmp     eax, 81h", "jle     loc_2569"], ["cmp~eax,0", "jle~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 9, 5, 0.017605633802816902, ["mov     r14d, 0", "jmp     loc_2436"], ["mov~r14d,0", "jmp~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 9, -1, 0.053822937625754526, ["lea     eax, [r12+1]", "cmp     ebp, eax", "jle     loc_27CF"], ["lea~eax,[r12+0]", "cmp~ebp,eax", "jle~FOO"]], [1, 0, 7, 0, 0, 3, 0, 1, 8, -1, 0.059154929577464786, ["mov     r12d, 0", "lea     preserve_root, [rsp+0E8h+stat_buf]", "jmp     loc_273B"], ["mov~r12d,0", "lea~preserve_root,[rsp+0]", "jmp~FOO"]], [1, 0, 7, 1, 0, 1, 0, 0, 11, -1, 0.0015090543259557343, ["add     r12, 1"], ["add~r12,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 4, 1, 0.022132796780684104, ["mov     rdx, [rsp+0E8h+var_30]", "xor     rdx, fs:28h", "jnz     loc_29B9"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 0, 15, 0, 0, 2, 1, 1, 4, 4, 0.0267605633802817, ["test    r14b, r14b", "jnz     loc_2926"], ["test~r14b,r14b", "jnz~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 3, 4, 0.1072434607645875, ["cmp     [rsp+0E8h+x.recursive], 0", "jz      short loc_2865"], ["cmp~[rsp+0],0", "jz~FOO"]], [3, 0, 71, 0, 0, 4, 0, 1, 3, 5, 0.004225352112676056, ["mov     [rsp+0E8h+x.interactive], 3", "mov     [rsp+0E8h+x.ignore_missing_files], 0", "mov     r12d, 0", "jmp     loc_2436"], ["mov~[rsp+0],0", "mov~<TAG>,0", "mov~r12d,0", "jmp~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 2, 6, 0.31368209255533197, ["cmp     eax, 69h ; 'i'", "jz      loc_2601"], ["cmp~eax,0", "jz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 6, 5, 0.026760563380281672, ["mov     rbp, cs:program_name", "test    al, al", "jz      loc_2989"], ["mov~rbp,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 71, 0, 0, 3, 1, 1, 7, 6, 0.053923541247484906, ["mov     preserve_root, cs:optarg@@GLIBC_2_2_5", "test    r14, r14", "jz      loc_27D9"], ["mov~preserve_root,<TAG>", "test~r14,r14", "jz~FOO"]], [5, 0, 71, 0, 2, 9, 0, 2, 9, 7, 0.002414486921529175, ["mov     edx, 5; category", "lea     rsi, aYouMayNotAbbre; \"you may not abbreviate the --no-preserv\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 8, 6, 0.017605633802816902, ["cmp     eax, 84h", "jnz     loc_2559"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 5, -1, 0.0, ["add     rsp, 0C0h", "pop     rbx", "pop     rbp", "pop     prompt_once", "pop     r13", "pop     preserve_root", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~prompt_once", "pop~r13", "pop~preserve_root", "retn"]], [1, 0, 0, 0, 1, 5, 0, 1, 6, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___6977; \"main\"", "mov     edx, 173h; line", "lea     rsi, file; \"src/rm.c\"", "lea     rdi, assertion; \"VALID_STATUS (status)\"", "call    ___assert_fail"], ["lea~rcx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO"]], [0, 0, 71, 0, 1, 5, 1, 2, 8, 6, 0.016297786720321932, ["lea     rsi, aAll; \"all\"", "mov     rdi, r14; s1", "call    _strcmp", "test    eax, eax", "jnz     short loc_26ED"], ["lea~rsi,<TAG>", "mov~rdi,r14", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 9, 5, 0.017404426559356135, ["mov     [rsp+0E8h+x.stdin_tty], 1", "jmp     short loc_2436"], ["mov~[rsp+0],0", "jmp~FOO"]], [6, 0, 71, 0, 3, 14, 0, 3, 9, 6, 0.0012072434607645875, ["mov     rsi, r14; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     argv, rax", "mov     edx, 5; category", "lea     rsi, aUnrecognizedPr; \"unrecognized --preserve-root argument: \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 1; status", "mov     eax, 0", "call    _error"], ["mov~rsi,r14", "mov~edi,0", "call~FOO", "mov~argv,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [3, 0, 71, 0, 0, 4, 0, 1, 5, 5, 0.012374245472837022, ["mov     [rsp+0E8h+x.interactive], 4", "mov     [rsp+0E8h+x.ignore_missing_files], 0", "mov     r12d, 1", "jmp     loc_2436"], ["mov~[rsp+0],0", "mov~<TAG>,0", "mov~r12d,0", "jmp~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 4, 6, 0.13058350100603622, ["cmp     eax, 49h ; 'I'", "jz      loc_2618"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 3, 7, 0.30784708249496984, ["cmp     eax, 69h ; 'i'", "jle     short loc_24A9"], ["cmp~eax,0", "jle~FOO"]], [14, 0, 71, 1, 6, 39, 2, 6, 0, 5, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 0C0h", "mov     ebp, edi", "mov     rbx, argv", "mov     rax, fs:28h", "mov     [rsp+0E8h+var_30], rax", "xor     eax, eax", "mov     argc, [argv]; argv0", "call    set_program_name", "lea     rsi, aWrittenBySSAnd+1Bh; locale", "mov     edi, 6; category", "call    _setlocale", "lea     rsi, dirname; \"/usr/local/share/locale\"", "lea     rdi, domainname; \"coreutils\"", "call    _bindtextdomain", "lea     rdi, domainname; \"coreutils\"", "call    _textdomain", "lea     rdi, close_stdin", "call    atexit", "mov     [rsp+0E8h+x.ignore_missing_files], 0", "mov     [rsp+0E8h+x.interactive], 4", "mov     [rsp+0E8h+x.one_file_system], 0", "mov     [rsp+0E8h+x.remove_empty_directories], 0", "mov     [rsp+0E8h+x.recursive], 0", "mov     [rsp+0E8h+x.root_dev_ino], 0", "mov     [rsp+0E8h+x.preserve_all_root], 0", "mov     edi, 0; fd", "call    _isatty", "test    eax, eax", "setnz   [rsp+0E8h+x.stdin_tty]", "mov     [rsp+0E8h+x.verbose], 0", "mov     [rsp+0E8h+x.require_restore_cwd], 0", "mov     r12d, 0", "mov     r14d, 1", "lea     r13, aNoPreserveRoot; \"--no-preserve-root\""], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~ebp,edi", "mov~rbx,argv", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~argc,<TAG>", "call~FOO", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "lea~rdi,<TAG>", "call~FOO", "mov~<TAG>,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~edi,0", "call~FOO", "test~eax,eax", "setnz~[rsp+0]", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r12d,0", "mov~r14d,0", "lea~r13,<TAG>"]], [1, 0, 3, 0, 0, 2, 0, 1, 9, 2, 0.0015090543259557343, ["mov     eax, 0", "jmp     loc_27F7"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 4, 0, 0, 3, 0, 1, 3, 2, 0.03299798792756539, ["mov     eax, 0", "cmp     [rsp+0E8h+x.ignore_missing_files], 0", "jz      short loc_281E"], ["mov~eax,0", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 7, 5, 0.0317907444668008, ["mov     [rsp+0E8h+x.verbose], 1", "jmp     loc_2436"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 6, 6, 0.0829979879275654, ["cmp     eax, 76h ; 'v'", "jz      loc_272D"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 5, 7, 0.11659959758551308, ["cmp     eax, 49h ; 'I'", "jle     short loc_24E0"], ["cmp~eax,0", "jle~FOO"]], [2, 0, 7, 0, 1, 6, 0, 1, 7, 4, 0.0069416498993963805, ["mov     r8d, 5; category", "mov     rcx, rbx; n", "lea     rdx, msgid2; \"%s: remove %lu arguments recursively? \"", "lea     rsi, msgid1; \"%s: remove %lu argument recursively? \"", "mov     edi, 0; domainname", "call    _dcngettext"], ["mov~r8d,0", "mov~rcx,rbx", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO"]], [1, 0, 7, 0, 0, 3, 0, 1, 10, -1, 0.03621730382293763, ["mov     r13, [argv+r12*8+8]", "cmp     byte ptr [r13+0], 2Dh ; '-'", "jnz     short loc_2737"], ["mov~r13,[argv+0]", "cmp~[yte ptr [r13+0],0", "jnz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 11, -1, 0.01851106639839034, ["cmp     byte ptr [r13+1], 0", "jz      short loc_2737"], ["cmp~[yte ptr [r13+0],0", "jz~FOO"]], [1, 0, 7, 0, 1, 6, 1, 2, 12, -1, 0.009557344064386318, ["mov     rdx, r14; stat_buf", "mov     rsi, r13; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jnz     short loc_2737"], ["mov~rdx,r14", "mov~rsi,r13", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 71, 0, 1, 10, 0, 2, 9, 6, 0.030181086519114688, ["mov     r9, cs:argmatch_die; exit_fn", "mov     r8d, 4; valsize", "lea     rcx, interactive_types; vallist", "lea     rdx, interactive_args; arglist", "lea     rdi, context; \"--interactive\"", "call    __xargmatch_internal", "lea     rdx, interactive_types", "mov     eax, [rdx+rax*4]", "cmp     eax, 1", "jz      loc_2642"], ["mov~r9,<TAG>", "mov~r8d,0", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "lea~rdi,<TAG>", "call~FOO", "lea~rdx,<TAG>", "mov~eax,<TAG>", "cmp~eax,0", "jz~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 6, 6, 0.04396378269617706, ["cmp     eax, 64h ; 'd'", "jz      loc_25F7"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 8, 5, 0.03601609657947686, ["mov     r14d, 1", "jmp     loc_2436"], ["mov~r14d,0", "jmp~FOO"]], [2, 0, 71, 0, 0, 3, 0, 1, 11, 5, 0.006740442655935613, ["mov     [rsp+0E8h+x.interactive], 5", "mov     r12d, 0", "jmp     loc_2436"], ["mov~[rsp+0],0", "mov~r12d,0", "jmp~FOO"]], [1, 0, 71, 0, 0, 2, 0, 0, 10, 6, 0.015492957746478873, ["cmp     eax, 1", "jb      short loc_262F"], ["cmp~eax,0", "jb~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 7, 6, 0.020422535211267606, ["cmp     eax, 66h ; 'f'", "jnz     loc_2550"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 7, -1, 0.056539235412474846, ["cmp     eax, 0FFFFFF7Eh", "jnz     short loc_2559"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 6, -1, 0.07082494969818913, ["cmp     eax, 0FFFFFF7Dh", "jnz     short loc_253F"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 11, 5, 0.007142857142857143, ["cmp     eax, 2", "jnz     loc_2436"], ["cmp~eax,0", "jnz~FOO"]], [7, 0, 1, 0, 4, 22, 0, 4, 13, -1, 0.0003018108651911469, ["mov     rsi, r13; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     r12, rax", "mov     rdx, r13; arg", "mov     esi, 3; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     argc, rax", "mov     argv, [argv]", "mov     edx, 5; category", "lea     rsi, aTrySSToRemoveT; \"Try '%s ./%s' to remove the file %s.\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r9, r12", "mov     r8, rbp", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     eax, 0", "call    ___fprintf_chk"], ["mov~rsi,r13", "mov~edi,0", "call~FOO", "mov~r12,rax", "mov~rdx,r13", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~argc,rax", "mov~argv,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r9,r12", "mov~r8,rbp", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,<TAG>", "mov~eax,0", "call~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 8, -1, 0.0, ["mov     edi, 0; status", "call    usage"], ["mov~edi,0", "call~FOO"]], [6, 0, 0, 0, 3, 11, 0, 3, 4, -1, 0.0, ["mov     edx, 5; category", "lea     rsi, aMissingOperand; \"missing operand\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     edi, 1; status", "call    usage"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~edi,0", "call~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 8, 6, 0.006941649899396378, ["cmp     eax, 52h ; 'R'", "jz      loc_25ED"], ["cmp~eax,0", "jz~FOO"]], [3, 0, 71, 0, 0, 4, 0, 1, 10, 5, 0.013078470824949697, ["mov     [rsp+0E8h+x.interactive], 4", "mov     [rsp+0E8h+x.ignore_missing_files], 0", "mov     r12d, 1", "jmp     loc_2436"], ["mov~[rsp+0],0", "mov~<TAG>,0", "mov~r12d,0", "jmp~FOO"]], [2, 0, 71, 0, 1, 8, 0, 2, 1, 4, 0.46841046277665993, ["mov     r8d, 0; longind", "lea     rcx, long_opts; longopts", "lea     rdx, shortopts; \"dfirvIR\"", "mov     rsi, argv; argv", "mov     edi, ebp; argc", "call    _getopt_long", "cmp     eax, 0FFFFFFFFh", "jz      loc_27E4"], ["mov~r8d,0", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,argv", "mov~edi,ebp", "call~FOO", "cmp~eax,0", "jz~FOO"]], [3, 0, 71, 0, 0, 4, 0, 1, 8, 5, 0.01187122736418511, ["mov     [rsp+0E8h+x.interactive], 5", "mov     [rsp+0E8h+x.ignore_missing_files], 1", "mov     r12d, 0", "jmp     loc_2436"], ["mov~[rsp+0],0", "mov~<TAG>,0", "mov~r12d,0", "jmp~FOO"]], [3, 0, 71, 0, 0, 4, 0, 1, 9, 5, 0.018209255533199194, ["mov     [rsp+0E8h+x.interactive], 3", "mov     [rsp+0E8h+x.ignore_missing_files], 0", "mov     r12d, 0", "jmp     loc_2436"], ["mov~[rsp+0],0", "mov~<TAG>,0", "mov~r12d,0", "jmp~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 9, 5, 0.02987927565392354, ["mov     [rsp+0E8h+x.recursive], 1", "jmp     loc_2436"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 7, 5, 0.02193158953722334, ["mov     [rsp+0E8h+x.remove_empty_directories], 1", "jmp     loc_2436"], ["mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 5, 5, 0.009557344064386318, ["mov     [rsp+0E8h+x.one_file_system], 1", "jmp     loc_2436"], ["mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 71, 0, 0, 3, 0, 1, 9, 5, 0.013480885311871227, ["mov     [rsp+0E8h+x.preserve_all_root], 1", "mov     r14d, 1", "jmp     loc_2436"], ["mov~[rsp+0],0", "mov~r14d,0", "jmp~FOO"]], [0, 0, 19, 0, 0, 2, 0, 1, 2, 3, 0.1529175050301811, ["cmp     cs:optind@@GLIBC_2_2_5, ebp", "jl      short loc_2855"], ["cmp~<TAG>,ebp", "jl~FOO"]], [4, 1, 0, 2, 2, 17, 0, 2, 7, -1, 0.0, ["sub     rsp, 8", "push    0", "lea     c, aJimMeyering; \"Jim Meyering\"", "push    rax", "lea     rax, aRichardMStallm; \"Richard M. Stallman\"", "push    rax", "lea     r9, aDavidMackenzie; \"David MacKenzie\"", "lea     r8, aPaulRubin; \"Paul Rubin\"", "mov     rcx, cs:Version; version", "lea     rdx, package; \"GNU \"", "lea     rsi, command_name; \"rm\"", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "mov     eax, 0", "call    version_etc", "add     rsp, 20h", "mov     edi, 0; status", "call    _exit"], ["sub~rsp,0", "push~0", "lea~c,<TAG>", "push~rax", "lea~rax,<TAG>", "push~rax", "lea~r9,<TAG>", "lea~r8,<TAG>", "mov~rcx,<TAG>", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~rdi,<TAG>", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "mov~edi,0", "call~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 4, 6, 0.17565392354124748, ["cmp     eax, 81h", "jz      loc_2659"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 7, 0, 1, 7, 0, 2, 7, 4, 0.0147887323943662, ["mov     r8d, 5; category", "mov     rcx, rbx; n", "lea     rdx, aSRemoveLuArgum_1; \"%s: remove %lu arguments? \"", "lea     rsi, aSRemoveLuArgum_2; \"%s: remove %lu argument? \"", "mov     edi, 0; domainname", "call    _dcngettext", "jmp     loc_28BB"], ["mov~r8d,0", "mov~rcx,rbx", "lea~rdx,<TAG>", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "jmp~FOO"]], [1, 0, 71, 0, 0, 2, 0, 1, 8, 6, 0.013883299798792756, ["cmp     eax, 72h ; 'r'", "jnz     loc_2559"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 0, 0, 1, 2, 0, 1, 10, -1, 0.0, ["mov     edi, 1; status", "call    usage"], ["mov~edi,0", "call~FOO"]]], "func_feature": [38, 14, 94, 1, 72, 106, 0, 345, 0.04672, 39, 6], "succs": [[25, 13], [0, 26], [18, 28], [2, 10], [2, 23], [2, 36], [45, 61], [70, 6], [69], [8, 3], [4, 23], [24, 1], [11, 39], [59], [42, 71], [14], [14], [], [17, 27], [9, 3], [3, 19], [59], [34, 21], [41, 69], [29, 47], [24], [30, 15], [], [], [65, 31], [59], [38], [59], [32, 40], [33, 68], [59], [18], [56, 18], [59], [38, 7], [52, 46], [5], [16, 43], [16, 44], [16, 54], [49, 58], [50, 63], [59], [59], [48, 53], [57, 60], [15, 55], [67, 51], [59, 61], [71], [], [], [62, 15], [59], [66, 22], [59], [59], [59], [59], [59], [59], [20, 37], [], [64, 12], [5], [62, 15], []], "fname": "main", "n_num": 72}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[2, 0, 3, 0, 0, 4, 0, 1, 0, 0, 0.15000000000000002, ["mov     qword ptr [p+20h], 1", "mov     p, [p+8]", "cmp     qword ptr [p+58h], 0", "js      short locret_29EA"], ["mov~[word ptr [p+0],0", "mov~p,[p+0]", "cmp~[word ptr [p+0],0", "js~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 3, -1, 0.0, ["cmp     qword ptr [p+20h], 0", "jz      short loc_29D0"], ["cmp~[word ptr [p+0],0", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 1, 1, 0.15000000000000002, ["cmp     qword ptr [p+20h], 0", "jnz     short locret_29EC"], ["cmp~[word ptr [p+0],0", "jnz~FOO"]], [1, 0, 5, 0, 0, 3, 0, 1, 0, 2, 0.0, ["mov     p, [ent+8]", "cmp     qword ptr [p+58h], 0", "js      short locret_29EA"], ["mov~p,[ent+0]", "cmp~[word ptr [p+0],0", "js~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 4, 0, 6, 8, 4, 13, 0.05, 0, 0], "succs": [[1, 4], [0, 4], [0, 5], [2, 4], [], []], "fname": "mark_ancestor_dirs", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0.04444444444444444, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 1, 0.1722222222222222, ["cmp     qword ptr [st+30h], 0", "js      short loc_2A34"], ["cmp~[word ptr [st+0],0", "js~FOO"]], [1, 0, 1, 0, 1, 5, 0, 2, 2, 0, 0.08888888888888888, ["call    ___errno_location", "mov     rdx, [st+8]", "mov     [rax], edx", "mov     eax, 0FFFFFFFFh", "jmp     short loc_2A05"], ["call~FOO", "mov~rdx,[st+0]", "mov~<TAG>,edx", "mov~eax,0", "jmp~FOO"]], [1, 0, 2, 0, 1, 4, 0, 1, 2, 1, 0.027777777777777776, ["mov     qword ptr [st+30h], 0FFFFFFFFFFFFFFFEh", "call    ___errno_location", "movsxd  rax, dword ptr [rax]", "mov     [st+8], rax"], ["mov~[word ptr [st+0],0", "call~FOO", "movsxd~rax,<TAG>", "mov~[st+0],rax"]], [0, 0, 0, 0, 0, 2, 0, 0, 3, -1, 0.0, ["pop     st", "retn"], ["pop~st", "retn"]], [1, 0, 5, 0, 1, 8, 1, 2, 1, 2, 0.03333333333333333, ["mov     r8d, ecx; flag", "mov     flag, st; stat_buf", "mov     st, file; filename", "mov     esi, edi; fildes", "mov     edi, 1; ver", "call    ___fxstatat", "test    eax, eax", "jz      short loc_29F9"], ["mov~r8d,ecx", "mov~flag,st", "mov~st,file", "mov~esi,edi", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 6, 0, 0, 4, 0, 1, 0, 2, 0.0, ["push    rbx", "mov     rbx, st", "cmp     qword ptr [st+30h], 0FFFFFFFFFFFFFFFFh", "jz      short loc_2A07"], ["push~rbx", "mov~rbx,st", "cmp~[word ptr [st+0],0", "jz~FOO"]]], "func_feature": [3, 1, 7, 0, 7, 9, 3, 26, 0.05238, 0, 0], "succs": [[4], [0, 2], [4], [2], [], [1, 3], [1, 5]], "fname": "cache_fstatat", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 6, 0, 0, 3, 0, 1, 0, 0, 0.043076923076923075, ["mov     eax, [ent+40h]", "cmp     eax, 1", "jz      short loc_2C07"], ["mov~eax,[ent+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 7, 0, 0, 3, 0, 0, 5, 3, 0.06, ["mov     rdx, 8000320000h", "bt      rdx, rax", "jnb     short loc_2B94"], ["mov~rdx,0", "bt~rdx,rax", "jnb~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 7, 3, 0.003076923076923077, ["cmp     eax, 0Dh", "jnz     short loc_2B94"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 3, 5, 0.013076923076923076, ["mov     dword ptr [rbp+0], 1Eh", "jmp     short loc_2B31"], ["mov~[word ptr [rbp+0],0", "jmp~FOO"]], [2, 0, 19, 0, 1, 8, 1, 2, 2, 6, 0.006153846153846154, ["mov     rcx, rsp; stat_buf", "mov     rdx, [ent+30h]; filename", "mov     esi, [fts+2Ch]; fildes", "mov     r8d, 100h; flag", "mov     edi, 1; ver", "call    ___fxstatat", "test    eax, eax", "jz      short loc_2B7F"], ["mov~rcx,rsp", "mov~rdx,[ent+0]", "mov~esi,[fts+0]", "mov~r8d,0", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 3, 5, 0.013076923076923076, ["cmp     dword ptr [rbp+0], 2", "jz      short loc_2B31"], ["cmp~[word ptr [rbp+0],0", "jz~FOO"]], [3, 0, 3, 0, 1, 6, 0, 2, 4, 2, 0.013846153846153847, ["mov     rdx, rbx", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     eax, 2", "jmp     short loc_2A9C"], ["mov~rdx,rbx", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~eax,0", "jmp~FOO"]], [2, 0, 4, 0, 1, 6, 0, 2, 3, 3, 0.004615384615384615, ["mov     edx, 5; category", "lea     rsi, aRemovedS; \"removed %s\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rax", "jmp     short loc_2AF0"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rax", "jmp~FOO"]], [2, 0, 4, 0, 1, 5, 0, 1, 3, 3, 0.004615384615384615, ["mov     edx, 5; category", "lea     rsi, aRemovedDirecto; \"removed directory %s\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rax"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rax"]], [2, 0, 26, 2, 1, 21, 3, 2, 0, 3, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 0A8h", "mov     r12, fts", "mov     rbx, ent", "mov     r13, x", "mov     ebp, ecx", "mov     rax, fs:28h", "mov     [rsp+0C8h+var_30], rax", "xor     eax, eax", "test    cl, cl", "setnz   dl", "movzx   edx, dl", "shl     edx, 9; flag", "mov     ent, [ent+30h]; name", "mov     edi, [fts+2Ch]; fd", "call    _unlinkat", "test    eax, eax", "jnz     loc_2B24"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r12,fts", "mov~rbx,ent", "mov~r13,x", "mov~ebp,ecx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~cl,cl", "setnz~dl", "movzx~edx,dl", "shl~edx,0", "mov~ent,[ent+0]", "mov~edi,[fts+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 5, 3, 0.024615384615384615, ["cmp     eax, 2", "jz      short loc_2B4F"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 4, 4, 0.043076923076923075, ["cmp     eax, 14h", "jle     short loc_2B88"], ["cmp~eax,0", "jle~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.07384615384615384, ["mov     rcx, [rsp+0C8h+var_30]", "xor     rcx, fs:28h", "jnz     loc_2C0C"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 3, 3, 0.11307692307692307, ["cmp     word ptr [ent+70h], 4", "jz      short loc_2BE5"], ["cmp~[ord ptr [ent+0],0", "jz~FOO"]], [1, 0, 16, 0, 0, 3, 0, 1, 2, 4, 0.11846153846153847, ["mov     eax, [rbp+0]", "cmp     byte ptr [x+0], 0", "jz      short loc_2B8D"], ["mov~eax,[rbp+0]", "cmp~[yte ptr [x+0],0", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 6, 3, 0.010769230769230769, ["cmp     eax, 54h ; 'T'", "jnz     short loc_2B8D"], ["cmp~eax,0", "jnz~FOO"]], [2, 0, 7, 0, 0, 3, 0, 1, 1, 2, 0.010769230769230769, ["mov     eax, 2", "cmp     byte ptr [x+1Ah], 0", "jnz     short loc_2AC1"], ["mov~eax,0", "cmp~[yte ptr [x+0],0", "jnz~FOO"]], [1, 0, 6, 0, 1, 6, 1, 2, 2, 4, 0.00923076923076923, ["mov     rsi, [ent+38h]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     ent, rax", "test    bpl, bpl", "jz      short loc_2B09"], ["mov~rsi,[ent+0]", "mov~edi,0", "call~FOO", "mov~ent,rax", "test~bpl,bpl", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, 2, 0.03461538461538462, ["mov     eax, 2", "jmp     loc_2A9C"], ["mov~eax,0", "jmp~FOO"]], [6, 0, 3, 0, 4, 18, 0, 5, 4, 2, 0.03923076923076923, ["mov     rsi, [ent+38h]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     fts, rax", "mov     edx, 5; category", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, r12", "mov     rdx, rax; format", "mov     esi, [rbp+0]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     rdi, ent; ent", "call    mark_ancestor_dirs", "mov     eax, 4", "jmp     loc_2A9C"], ["mov~rsi,[ent+0]", "mov~edi,0", "call~FOO", "mov~fts,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,r12", "mov~rdx,rax", "mov~esi,[rbp+0]", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rdi,ent", "call~FOO", "mov~eax,0", "jmp~FOO"]], [1, 0, 20, 0, 1, 4, 0, 2, 1, 5, 0.026153846153846153, ["call    ___errno_location", "mov     rbp, rax", "cmp     dword ptr [rax], 1Eh", "jz      short loc_2B59"], ["call~FOO", "mov~rbp,rax", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 1, 7, 3, 0.003076923076923077, ["mov     [rbp+0], eax", "jmp     short loc_2B94"], ["mov~[rbp+0],eax", "jmp~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 3, 3, 0.057692307692307696, ["cmp     eax, 14h", "jz      short loc_2B4F"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 0A8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     x", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~x", "retn"]], [1, 0, 12, 0, 0, 2, 0, 1, 5, 3, 0.015384615384615385, ["cmp     eax, 16h", "jz      short loc_2B4F"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 4, 3, 0.07384615384615384, ["cmp     eax, 27h ; '''", "ja      short loc_2B94"], ["cmp~eax,0", "ja~FOO"]]], "func_feature": [12, 6, 35, 1, 27, 43, 2, 120, 0.0302, 4, 3], "succs": [[2, 22], [0, 20], [20, 22], [15], [3, 5], [3, 15], [13], [6], [6], [17, 21], [19, 14], [25, 10], [], [24, 12], [26, 20], [14, 23], [19, 14], [18, 13], [8, 7], [13], [13], [4, 15], [20], [19, 11], [], [16, 19], [1, 20]], "fname": "excise", "n_num": 27}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 0, 0, 2, 8, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, fts", "mov     edx, 4; instr", "call    rpl_fts_set", "mov     rdi, fts; sp_0", "call    rpl_fts_read", "pop     fts", "retn"], ["push~rbx", "mov~rbx,fts", "mov~edx,0", "call~FOO", "mov~rdi,fts", "call~FOO", "pop~fts", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 8, 8, 0.0, 0, 0], "succs": [[]], "fname": "fts_skip_tree", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 22, 0, 0, 2, 0, 1, 0, 0, 0.02670807453416149, ["cmp     byte ptr [x+0Ah], 0", "jz      short loc_2E8D"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [1, 0, 24, 0, 0, 2, 0, 1, 9, 6, 0.05186335403726708, ["cmp     byte ptr [x+9], 0", "jnz     loc_3093"], ["cmp~[yte ptr [x+0],0", "jnz~FOO"]], [2, 0, 5, 0, 1, 4, 0, 1, 14, 4, 0.008488612836438923, ["mov     edx, 5; category", "lea     rsi, aSDescendIntoWr; \"%s: descend into write-protected direct\"...", "mov     edi, 0; domainname", "call    _dcgettext"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 13, 5, 0.03706004140786749, ["mov     rbx, cs:program_name", "test    r12d, r12d", "jz      loc_2EF6"], ["mov~rbx,<TAG>", "test~r12d,r12d", "jz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 11, 5, 0.011180124223602485, ["cmp     byte ptr [rsp+0F8h+is_empty], 0", "jnz     loc_3114"], ["cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 17, 0, 0, 1, 0, 1, 11, 6, 0.017598343685300208, ["jmp     short loc_3098"], ["jmp~FOO"]], [3, 0, 18, 0, 0, 4, 0, 1, 10, 2, 0.02805383022774327, ["mov     eax, 2", "mov     ebx, 0Ah", "cmp     dword ptr [x+4], 3", "jnz     loc_2E00"], ["mov~eax,0", "mov~ebx,0", "cmp~[word ptr [x+0],0", "jnz~FOO"]], [1, 0, 32, 0, 1, 4, 0, 2, 8, 6, 0.0344375431331953, ["call    ___errno_location", "mov     ebp, [rax]", "mov     r12d, 0FFFFFFFFh", "jmp     loc_2DDD"], ["call~FOO", "mov~ebp,<TAG>", "mov~r12d,0", "jmp~FOO"]], [1, 0, 49, 0, 1, 7, 1, 2, 7, 5, 0.0474120082815735, ["lea     rdx, [rsp+0F8h+st]; st", "mov     ecx, 100h; flag", "mov     rsi, filename; file", "mov     edi, r14d; fd", "call    cache_fstatat", "test    eax, eax", "jnz     loc_311E"], ["lea~rdx,[rsp+0]", "mov~ecx,0", "mov~rsi,filename", "mov~edi,r14d", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 42, 0, 1, 3, 0, 2, 10, 7, 0.017943409247757076, ["call    ___errno_location", "cmp     dword ptr [rax], 0Dh", "jnz     loc_311E"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 9, 3, 0.11128364389233954, ["cmp     ebx, 0Ah", "jz      short loc_307C"], ["cmp~ebx,0", "jz~FOO"]], [0, 0, 21, 0, 0, 2, 1, 1, 11, 3, 0.015217391304347827, ["test    r12d, r12d", "js      loc_2EAD"], ["test~r12d,r12d", "js~FOO"]], [2, 0, 5, 0, 1, 5, 0, 2, 14, 4, 0.008488612836438923, ["mov     edx, 5; category", "lea     rsi, aSDescendIntoDi; \"%s: descend into directory %s? \"", "mov     edi, 0; domainname", "call    _dcgettext", "jmp     loc_30F0"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "jmp~FOO"]], [1, 0, 5, 0, 0, 1, 0, 0, 11, 4, 0.004554865424430642, ["mov     ebp, 15h"], ["mov~ebp,0"]], [0, 0, 50, 0, 1, 3, 1, 2, 6, 4, 0.05993788819875776, ["call    can_write_any_file", "test    al, al", "jz      short loc_2D78"], ["call~FOO", "test~al,al", "jz~FOO"]], [2, 0, 58, 0, 1, 5, 0, 2, 6, 4, 0.030020703933747412, ["mov     rdi, [rsp+0F8h+is_empty]; dirp", "call    _closedir", "mov     byte ptr [rsp+0F8h+is_empty], 0", "mov     eax, 3", "jmp     short loc_2D25"], ["mov~rdi,<TAG>", "call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 5, 5, 0.0033126293995859213, ["cmp     byte ptr [rax+13h], 2Eh ; '.'", "jnz     short loc_2CFF"], ["cmp~[yte ptr [rax+0],0", "jnz~FOO"]], [1, 0, 64, 0, 0, 2, 0, 1, 7, 5, 0.006211180124223602, ["cmp     al, 2Fh ; '/'", "jz      short loc_2CD0"], ["cmp~al,0", "jz~FOO"]], [2, 0, 4, 0, 1, 8, 0, 2, 15, 3, 0.007867494824016562, ["mov     r8, quoted_name", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     eax, 0", "call    ___fprintf_chk", "jmp     loc_2F7F"], ["mov~r8,quoted_name", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,<TAG>", "mov~eax,0", "call~FOO", "jmp~FOO"]], [4, 0, 57, 0, 0, 11, 2, 1, 1, 3, 0.011801242236024845, ["mov     [rsp+0F8h+st.st_size], 0FFFFFFFFFFFFFFFFh", "cmp     dl, 1", "sbb     ebx, ebx", "not     ebx", "and     ebx, 4", "test    dl, dl", "mov     eax, 0", "movzx   esi, byte ptr [rsp+0F8h+is_empty]", "cmovnz  esi, eax", "mov     byte ptr [rsp+0F8h+is_empty], sil", "jmp     loc_2D29"], ["mov~[rsp+0],0", "cmp~dl,0", "sbb~ebx,ebx", "not~ebx", "and~ebx,0", "test~dl,dl", "mov~eax,0", "movzx~esi,<TAG>", "cmovnz~esi,eax", "mov~<TAG>,sil", "jmp~FOO"]], [1, 0, 70, 1, 0, 20, 2, 1, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 0C8h", "mov     rbp, ent", "mov     r13, x", "mov     [rsp+0F8h+mode], r8d", "mov     byte ptr [rsp+0F8h+is_empty], dl", "mov     rax, fs:28h", "mov     [rsp+0F8h+var_40], rax", "xor     eax, eax", "mov     r14d, [fts+2Ch]", "mov     rax, [ent+38h]", "mov     [rsp+0F8h+full_name], rax", "mov     r15, [ent+30h]", "test    is_empty_p, is_empty_p", "jz      loc_2FEE"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,ent", "mov~r13,x", "mov~[rsp+0],r8d", "mov~<TAG>,dl", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~r14d,[fts+0]", "mov~rax,[ent+0]", "mov~[rsp+0],rax", "mov~r15,[ent+0]", "test~is_empty_p,is_empty_p", "jz~FOO"]], [0, 0, 59, 0, 1, 2, 0, 1, 3, 5, 0.012215320910973085, ["mov     edi, [rsp+0F8h+fd]; fd", "call    _close"], ["mov~edi,[rsp+0]", "call~FOO"]], [0, 0, 67, 0, 1, 5, 1, 2, 2, 6, 0.0033126293995859213, ["mov     edi, eax; fd", "call    _fdopendir", "mov     [rsp+0F8h+is_empty], rax", "test    rax, rax", "jz      short loc_2D13"], ["mov~edi,eax", "call~FOO", "mov~<TAG>,rax", "test~rax,rax", "jz~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 12, 4, 0.046583850931677016, ["cmp     byte ptr [rsp+0F8h+is_empty], 0", "jnz     loc_2F11"], ["cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 15, 0, 0, 6, 1, 1, 11, 4, 0.1248447204968944, ["cmp     ebx, 4", "setz    dl", "cmp     [rsp+0F8h+mode], 2", "setz    al", "test    dl, al", "jz      loc_2F11"], ["cmp~ebx,0", "setz~dl", "cmp~[rsp+0],0", "setz~al", "test~dl,al", "jz~FOO"]], [0, 0, 26, 0, 0, 2, 1, 1, 12, 4, 0.008799171842650104, ["test    r12d, r12d", "js      short loc_2EAD"], ["test~r12d,r12d", "js~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 11, 5, 0.018426501035196687, ["cmp     eax, 4000h", "jnz     loc_2DDD"], ["cmp~eax,0", "jnz~FOO"]], [1, 0, 16, 0, 1, 4, 0, 1, 11, 5, 0.038198757763975154, ["mov     rsi, [rsp+0F8h+full_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbp, rax"], ["mov~rsi,[rsp+0]", "mov~edi,0", "call~FOO", "mov~rbp,rax"]], [1, 0, 17, 0, 0, 2, 0, 1, 12, 6, 0.005797101449275362, ["mov     ebx, 4", "jmp     loc_3098"], ["mov~ebx,0", "jmp~FOO"]], [1, 0, 17, 0, 0, 1, 0, 0, 10, 6, 0.013975155279503106, ["mov     ebx, 4"], ["mov~ebx,0"]], [0, 0, 7, 0, 1, 6, 1, 2, 13, 5, 0.03768115942028986, ["lea     rdi, [rsp+0F8h+st]; st", "call    file_type", "mov     x, rax", "mov     rbx, cs:program_name", "test    r12d, r12d", "jz      loc_2FD3"], ["lea~rdi,[rsp+0]", "call~FOO", "mov~x,rax", "mov~rbx,<TAG>", "test~r12d,r12d", "jz~FOO"]], [1, 0, 9, 0, 1, 7, 1, 2, 12, 3, 0.06231884057971014, ["lea     rdx, [rsp+0F8h+st]; st", "mov     ecx, 100h; flag", "mov     rsi, filename; file", "mov     edi, r14d; fd", "call    cache_fstatat", "test    eax, eax", "jnz     short loc_2F94"], ["lea~rdx,[rsp+0]", "mov~ecx,0", "mov~rsi,filename", "mov~edi,r14d", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 58, 0, 0, 2, 0, 0, 2, 4, 0.036231884057971016, ["mov     byte ptr [rsp+0F8h+is_empty], 0", "mov     eax, 3"], ["mov~<TAG>,0", "mov~eax,0"]], [5, 0, 68, 1, 1, 15, 2, 2, 1, 5, 0.002277432712215321, ["mov     r12, is_empty_p", "mov     dword ptr [is_empty_p], 2", "mov     [rsp+0F8h+st.st_size], 0FFFFFFFFFFFFFFFFh", "test    dl, dl", "setnz   bl", "movzx   ebx, bl", "shl     ebx, 2", "mov     edx, 30900h; oflag", "mov     ent, filename; file", "mov     edi, r14d; fd", "mov     eax, 0", "call    _openat", "mov     [rsp+0F8h+fd], eax", "test    eax, eax", "js      short loc_2D1C"], ["mov~r12,is_empty_p", "mov~<TAG>,0", "mov~[rsp+0],0", "test~dl,dl", "setnz~bl", "movzx~ebx,bl", "shl~ebx,0", "mov~edx,0", "mov~ent,filename", "mov~edi,r14d", "mov~eax,0", "call~FOO", "mov~[rsp+0],eax", "test~eax,eax", "js~FOO"]], [2, 0, 36, 0, 0, 4, 1, 1, 10, 4, 0.03985507246376811, ["mov     eax, [rsp+0F8h+st.st_mode]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      loc_3073"], ["mov~eax,[rsp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 38, 0, 1, 7, 1, 2, 9, 5, 0.05600414078674948, ["lea     rdx, [rsp+0F8h+st]; st", "mov     ecx, 100h; flag", "mov     rsi, filename; file", "mov     edi, r14d; fd", "call    cache_fstatat", "test    eax, eax", "jnz     short loc_2EA6"], ["lea~rdx,[rsp+0]", "mov~ecx,0", "mov~rsi,filename", "mov~edi,r14d", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 48, 0, 0, 4, 1, 1, 8, 4, 0.020289855072463767, ["mov     eax, [rsp+0F8h+st.st_mode]", "and     eax, 0F000h", "cmp     eax, 0A000h", "jz      short loc_2D6F"], ["mov~eax,[rsp+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 4, 0, 1, 5, 0, 2, 11, 3, 0.009420289855072464, ["mov     rsi, [rsp+0F8h+full_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbx, rax", "jmp     short loc_2EBF"], ["mov~rsi,[rsp+0]", "mov~edi,0", "call~FOO", "mov~rbx,rax", "jmp~FOO"]], [0, 0, 5, 0, 0, 1, 0, 1, 10, 4, 0.011697722567287785, ["jmp     loc_2E92"], ["jmp~FOO"]], [0, 0, 57, 0, 0, 1, 0, 0, 3, 3, 0.1298136645962733, ["mov     [is_empty_p], eax"], ["mov~<TAG>,eax"]], [2, 0, 58, 1, 1, 12, 0, 2, 5, 4, 0.030020703933747412, ["mov     rax, qword ptr [rsp+0F8h+fd]", "mov     eax, [rax]", "mov     [rsp+0F8h+fd], eax", "mov     rdi, [rsp+0F8h+is_empty]; dirp", "call    _closedir", "mov     eax, [rsp+0F8h+fd]", "cmp     eax, 1", "setb    byte ptr [rsp+0F8h+is_empty]", "sbb     eax, eax", "not     eax", "add     eax, 4", "jmp     loc_2D25"], ["mov~rax,[word ptr [rsp+0]", "mov~eax,<TAG>", "mov~[rsp+0],eax", "mov~rdi,<TAG>", "call~FOO", "mov~eax,[rsp+0]", "cmp~eax,0", "setb~<TAG>", "sbb~eax,eax", "not~eax", "add~eax,0", "jmp~FOO"]], [1, 0, 16, 0, 1, 5, 0, 2, 10, 5, 0.0901656314699793, ["mov     rsi, [rsp+0F8h+full_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbp, rax", "jmp     short loc_30AA"], ["mov~rsi,[rsp+0]", "mov~edi,0", "call~FOO", "mov~rbp,rax", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 0C8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     fd_cwd", "pop     filename", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~fd_cwd", "pop~filename", "retn"]], [0, 0, 2, 0, 0, 3, 1, 1, 3, 1, 0.028157349896480333, ["mov     rcx, [rsp+0F8h+var_40]", "xor     rcx, fs:28h", "jnz     loc_3130"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 5, 0, 1, 2, 0, 1, 10, 4, 0.010766045548654244, ["call    ___errno_location", "mov     ebp, [rax]"], ["call~FOO", "mov~ebp,<TAG>"]], [1, 0, 39, 0, 0, 2, 0, 1, 12, 6, 0.005797101449275362, ["mov     r12d, 1", "jmp     short loc_2E34"], ["mov~r12d,0", "jmp~FOO"]], [1, 0, 40, 0, 1, 5, 1, 2, 11, 6, 0.015182884748102142, ["call    ___errno_location", "mov     ebp, [rax]", "mov     r12d, 1", "test    ebx, ebx", "jz      short loc_2E29"], ["call~FOO", "mov~ebp,<TAG>", "mov~r12d,0", "test~ebx,ebx", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 39, 0, 0, 1, 0, 0, 8, 6, 0.04047619047619048, ["mov     r12d, ebx"], ["mov~r12d,ebx"]], [1, 0, 40, 0, 0, 3, 1, 1, 7, 5, 0.1625948930296756, ["mov     r12d, 0", "test    ebx, ebx", "jz      loc_2E31"], ["mov~r12d,0", "test~ebx,ebx", "jz~FOO"]], [2, 0, 56, 0, 0, 3, 0, 1, 2, 2, 0.16231884057971013, ["mov     eax, 3", "cmp     qword ptr [ent+20h], 0", "jnz     loc_2E00"], ["mov~eax,0", "cmp~[word ptr [ent+0],0", "jnz~FOO"]], [1, 1, 47, 0, 1, 7, 1, 2, 9, 4, 0.016149068322981366, ["mov     ecx, 200h; flag", "mov     edx, 2; type", "mov     rsi, filename; file", "mov     edi, r14d; fd", "call    _faccessat", "test    eax, eax", "jz      short loc_2D6F"], ["mov~ecx,<STR>", "mov~edx,0", "mov~rsi,filename", "mov~edi,r14d", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 31, 0, 0, 2, 1, 0, 9, 5, 0.0559351276742581, ["test    r12d, r12d", "jns     loc_3051"], ["test~r12d,r12d", "jns~FOO"]], [2, 0, 41, 0, 0, 3, 0, 1, 6, 2, 0.16414768806073152, ["mov     eax, 2", "cmp     dword ptr [x+4], 3", "jz      loc_3043"], ["mov~eax,0", "cmp~[word ptr [x+0],0", "jz~FOO"]], [1, 0, 3, 1, 1, 6, 1, 2, 16, 2, 0.004968944099378882, ["call    yesno", "test    al, al", "setz    al", "movzx   eax, al", "add     eax, 2", "jmp     loc_2E00"], ["call~FOO", "test~al,al", "setz~al", "movzx~eax,al", "add~eax,0", "jmp~FOO"]], [2, 0, 4, 0, 1, 8, 0, 1, 15, 3, 0.007867494824016562, ["mov     r9, quoted_name", "mov     r8, r13", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     eax, 0", "call    ___fprintf_chk"], ["mov~r9,quoted_name", "mov~r8,r13", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,<TAG>", "mov~eax,0", "call~FOO"]], [2, 0, 55, 0, 0, 4, 0, 1, 3, 2, 0.16149068322981366, ["mov     edx, [x+4]", "mov     eax, 2", "cmp     edx, 5", "jz      loc_2E00"], ["mov~edx,[x+0]", "mov~eax,0", "cmp~edx,0", "jz~FOO"]], [1, 0, 64, 0, 1, 3, 0, 1, 3, 6, 0.0037267080745341614, ["call    ___errno_location", "mov     qword ptr [rsp+0F8h+fd], rax", "mov     dword ptr [rax], 0"], ["call~FOO", "mov~[word ptr [rsp+0],rax", "mov~<TAG>,0"]], [1, 0, 29, 0, 0, 2, 0, 1, 8, 4, 0.16055900621118013, ["cmp     ebx, 4", "jz      loc_2E71"], ["cmp~ebx,0", "jz~FOO"]], [5, 0, 3, 0, 3, 14, 0, 4, 13, 2, 0.004968944099378882, ["mov     edx, 5; category", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rbx, rax", "call    ___errno_location", "mov     rcx, quoted_name", "mov     rdx, rbx; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     eax, 4", "jmp     loc_2E00"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "call~FOO", "mov~rcx,quoted_name", "mov~rdx,rbx", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~eax,0", "jmp~FOO"]], [1, 0, 54, 0, 0, 2, 0, 1, 4, 4, 0.168944099378882, ["cmp     byte ptr [x+0], 0", "jnz     loc_2DEB"], ["cmp~[yte ptr [x+0],0", "jnz~FOO"]], [2, 0, 5, 0, 1, 5, 0, 2, 14, 4, 0.008592132505175983, ["mov     edx, 5; category", "lea     rsi, aSRemoveSS; \"%s: remove %s %s? \"", "mov     edi, 0; domainname", "call    _dcgettext", "jmp     loc_2F5D"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "jmp~FOO"]], [2, 0, 5, 0, 1, 4, 0, 1, 14, 4, 0.008592132505175983, ["mov     edx, 5; category", "lea     rsi, aSRemoveWritePr; \"%s: remove write-protected %s %s? \"", "mov     edi, 0; domainname", "call    _dcgettext"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO"]], [1, 0, 52, 0, 0, 2, 0, 1, 5, 3, 0.04782608695652174, ["cmp     edx, 3", "jz      short loc_2D66"], ["cmp~edx,0", "jz~FOO"]], [0, 0, 64, 0, 1, 4, 1, 2, 4, 5, 0.02339544513457557, ["mov     rdi, [rsp+0F8h+is_empty]; dirp", "call    _readdir", "test    rax, rax", "jz      loc_3018"], ["mov~rdi,<TAG>", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 64, 0, 0, 6, 1, 1, 6, 6, 0.0016563146997929607, ["cmp     byte ptr [rax+14h], 2Eh ; '.'", "setz    dl", "movzx   edx, dl", "movzx   eax, byte ptr [rax+rdx+14h]", "test    al, al", "jz      short loc_2CD0"], ["cmp~[yte ptr [rax+0],0", "setz~dl", "movzx~edx,dl", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [1, 0, 51, 0, 0, 2, 0, 1, 6, 2, 0.0009316770186335404, ["cmp     byte ptr [x+19h], 0", "jz      loc_2E00"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [5, 0, 3, 0, 2, 12, 0, 3, 12, 2, 0.008385093167701863, ["mov     edx, 5; category", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, quoted_name", "mov     rdx, rax; format", "mov     esi, ebp; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     eax, 4", "jmp     loc_2E00"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,quoted_name", "mov~rdx,rax", "mov~esi,ebp", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~eax,0", "jmp~FOO"]], [1, 0, 4, 0, 1, 4, 0, 1, 11, 3, 0.007039337474120083, ["mov     rsi, [rsp+0F8h+full_name]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbx, rax"], ["mov~rsi,[rsp+0]", "mov~edi,0", "call~FOO", "mov~rbx,rax"]], [1, 0, 42, 0, 0, 1, 0, 0, 5, 3, 0.12525879917184266, ["mov     ebp, 0"], ["mov~ebp,0"]], [0, 0, 42, 0, 1, 3, 0, 2, 7, 3, 0.0266735679779158, ["call    ___errno_location", "mov     ebp, [rax]", "jmp     short loc_2DF0"], ["call~FOO", "mov~ebp,<TAG>", "jmp~FOO"]]], "func_feature": [35, 26, 89, 1, 71, 107, 2, 310, 0.03901, 8, 5], "succs": [[4, 13], [0, 29], [18], [2, 12], [28, 13], [27], [43, 5], [52], [36, 7], [46, 7], [41, 6], [68, 6], [18], [37], [8, 70], [39], [65, 15], [64, 15], [54], [50], [33, 19], [32], [57, 21], [3, 31], [31, 23], [1, 68], [25, 52], [24], [27], [27], [61, 62], [59, 30], [39], [32, 22], [26, 11], [34, 44], [51, 70], [67], [37], [50], [39], [24], [], [42, 47], [68], [35], [52, 45], [], [35], [48, 58], [56, 43], [9, 70], [58, 38], [49, 43], [43], [54], [43, 60], [64], [1, 10], [43], [69, 63], [55], [55], [66, 14], [16, 40], [64, 17], [43, 14], [43], [67], [53], [53]], "fname": "prompt", "n_num": 71}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[6, 0, 66, 0, 4, 19, 0, 5, 0, 0, 0.0037313432835820895, ["mov     rdx, [ent+38h]; jumptable 000000000000372F case 7", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     rbp, rax", "mov     edx, 5; category", "lea     rsi, aTraversalFaile; \"traversal failed: %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     esi, [ent+40h]; errnum", "mov     rcx, rbp", "mov     rdx, rax; format", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     rsi, ent; ent", "mov     rdi, fts; fts", "call    fts_skip_tree", "jmp     loc_3701"], ["mov~rdx,[ent+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbp,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~esi,[ent+0]", "mov~rcx,rbp", "mov~rdx,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rsi,ent", "mov~rdi,fts", "call~FOO", "jmp~FOO"]], [0, 0, 66, 1, 0, 4, 0, 1, 4, 7, 0.5184372256365233, ["movzx   eax, dx", "movsxd  rax, dword ptr [r14+rax*4]", "add     rax, r14", "jmp     rax; switch jump"], ["movzx~eax,dx", "movsxd~rax,<TAG>", "add~rax,r14", "jmp~rax"]], [1, 0, 66, 0, 0, 1, 0, 0, 6, 5, 0.41147205150717003, ["mov     r13d, 4"], ["mov~r13d,0"]], [5, 0, 66, 0, 5, 20, 0, 6, 8, 6, 0.1141352063213345, ["mov     rsi, [ent+38h]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rm_status, rax", "mov     edx, 5; category", "lea     rsi, aCannotRemoveS; \"cannot remove %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, r13", "mov     rdx, rax; format", "mov     esi, ebp; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     rdi, ent; ent", "call    mark_ancestor_dirs", "mov     rsi, ent; ent", "mov     rdi, fts; fts", "call    fts_skip_tree", "jmp     loc_3701"], ["mov~rsi,[ent+0]", "mov~edi,0", "call~FOO", "mov~rm_status,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,r13", "mov~rdx,rax", "mov~esi,ebp", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rdi,ent", "call~FOO", "mov~rsi,ent", "mov~rdi,fts", "call~FOO", "jmp~FOO"]], [11, 0, 66, 0, 6, 31, 0, 7, 9, 6, 0.03292361720807726, ["mov     rdx, [ent+38h]; arg", "mov     esi, 4; s", "mov     edi, 2; n", "call    quotearg_n_style", "mov     rbp, rax", "lea     rdx, dir; \"..\"", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     rm_status, rax", "lea     rdx, dir+1; arg", "mov     esi, 4; s", "mov     edi, 0; n", "call    quotearg_n_style", "mov     qword ptr [rsp+108h+fd], rax", "mov     edx, 5; category", "lea     rsi, aRefusingToRemo; \"refusing to remove %s or %s directory: \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r9, rbp", "mov     r8, r13", "mov     rcx, qword ptr [rsp+108h+fd]", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     rsi, ent; ent", "mov     rdi, fts; fts", "call    fts_skip_tree", "jmp     loc_3701"], ["mov~rdx,[ent+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbp,rax", "lea~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rm_status,rax", "lea~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~[word ptr [rsp+0],rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r9,rbp", "mov~r8,r13", "mov~rcx,[word ptr [rsp+0]", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rsi,ent", "mov~rdi,fts", "call~FOO", "jmp~FOO"]], [5, 0, 66, 0, 3, 13, 0, 4, 13, 6, 0.05728709394205443, ["mov     edx, 5; category", "lea     rsi, aUseNoPreserveR; \"use --no-preserve-root to override this\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     rsi, ent; ent", "mov     rdi, fts; fts", "call    fts_skip_tree", "jmp     loc_3701"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rsi,ent", "mov~rdi,fts", "call~FOO", "jmp~FOO"]], [0, 0, 66, 0, 1, 4, 0, 2, 12, 6, 0.08384547848990342, ["mov     rsi, ent; ent", "mov     rdi, fts; fts", "call    fts_skip_tree", "jmp     loc_3701"], ["mov~rsi,ent", "mov~rdi,fts", "call~FOO", "jmp~FOO"]], [6, 0, 66, 0, 4, 17, 0, 5, 9, 6, 0.028680128767925084, ["mov     rdi, ent; ent", "call    mark_ancestor_dirs", "mov     rsi, [ent+38h]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     ent, rax", "mov     edx, 5; category", "lea     rsi, aSkippingSSince; \"skipping %s, since it's on a different \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     short loc_3701"], ["mov~rdi,ent", "call~FOO", "mov~rsi,[ent+0]", "mov~edi,0", "call~FOO", "mov~ent,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [7, 0, 66, 0, 4, 18, 0, 4, 5, 6, 0.0037313432835820895, ["mov     rdx, [ent+38h]; jumptable 000000000000372F case 2", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     rbp, rax", "mov     edx, 5; category", "lea     rsi, aWarningCircula; \"WARNING: Circular directory structure.\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     rsi, ent; ent", "mov     rdi, fts; fts", "call    fts_skip_tree"], ["mov~rdx,[ent+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbp,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rsi,ent", "mov~rdi,fts", "call~FOO"]], [2, 0, 66, 0, 0, 9, 1, 1, 11, 8, 0.05267778753292362, ["mov     rdx, [ent+38h]", "mov     ecx, 2", "mov     rsi, rdx", "lea     rdi, aLibs+6; \"/\"", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     short loc_3481"], ["mov~rdx,[ent+0]", "mov~ecx,0", "mov~rsi,rdx", "lea~rdi,<TAG>", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [0, 0, 66, 0, 0, 3, 0, 1, 10, 9, 0.05509218612818262, ["mov     rax, [rax+8]", "cmp     [ent+78h], rax", "jnz     loc_388F"], ["mov~rax,[rax+0]", "cmp~[ent+0],rax", "jnz~FOO"]], [9, 0, 66, 0, 5, 23, 0, 5, 11, 7, 0.056409130816505705, ["mov     rdx, [ent+30h]; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     rm_status, rax", "mov     rdx, rbp; arg", "mov     esi, 4; s", "mov     edi, 0; n", "call    quotearg_n_style", "mov     qword ptr [rsp+108h+fd], rax", "mov     edx, 5; category", "lea     rsi, aFailedToStatSS; \"failed to stat %s: skipping %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8, r13", "mov     rcx, qword ptr [rsp+108h+fd]", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     rdi, rbp; ptr", "call    free"], ["mov~rdx,[ent+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rm_status,rax", "mov~rdx,rbp", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~[word ptr [rsp+0],rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8,r13", "mov~rcx,[word ptr [rsp+0]", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rdi,rbp", "call~FOO"]], [1, 0, 66, 0, 1, 7, 1, 2, 10, 8, 0.08340649692712906, ["mov     edx, 0; base_in_result", "lea     rsi, dir; \"..\"", "mov     rdi, rbp; dir", "call    file_name_concat", "mov     rbp, rax", "test    rax, rax", "jz      short loc_351E"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,rbp", "call~FOO", "mov~rbp,rax", "test~rax,rax", "jz~FOO"]], [1, 0, 66, 0, 1, 6, 1, 2, 11, 8, 0.027216856892010536, ["mov     rdx, [rsp+108h+stat_buf]; stat_buf", "mov     rsi, rax; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jz      loc_38DB"], ["mov~rdx,[rsp+0]", "mov~rsi,rax", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [5, 0, 3, 0, 2, 11, 0, 3, 5, 2, 0.0, ["mov     edx, 5; category", "lea     rsi, aFtsCloseFailed; \"fts_close failed\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rax; format", "mov     esi, [rbx]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     r13d, 4", "jmp     loc_31CD"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rax", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~r13d,0", "jmp~FOO"]], [0, 0, 4, 0, 1, 4, 1, 2, 4, 2, 0.0528972783143108, ["mov     rdi, fts; sp_0", "call    rpl_fts_close", "test    eax, eax", "jnz     loc_37FC"], ["mov~rdi,fts", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 66, 0, 0, 5, 1, 1, 10, 5, 0.0, ["cmp     r13d, 2", "setz    al", "test    al, al", "cmovnz  r13d, ebp", "jmp     loc_3707"], ["cmp~r13d,0", "setz~al", "test~al,al", "cmovnz~r13d,ebp", "jmp~FOO"]], [1, 0, 66, 0, 0, 2, 0, 1, 9, 5, 0.07960199004975124, ["cmp     ebp, 3", "jnz     loc_3707"], ["cmp~ebp,0", "jnz~FOO"]], [0, 0, 66, 0, 1, 4, 1, 2, 10, 9, 0.1165496049165935, ["mov     rdi, rbp; dirp", "call    _readdir", "test    rax, rax", "jz      loc_383C"], ["mov~rdi,rbp", "call~FOO", "test~rax,rax", "jz~FOO"]], [1, 0, 66, 0, 0, 6, 1, 1, 12, 10, 0.019534679543459176, ["cmp     byte ptr [rax+14h], 2Eh ; '.'", "setz    dl", "movzx   edx, dl", "movzx   eax, byte ptr [rax+rdx+14h]", "test    al, al", "jz      short loc_3280"], ["cmp~[yte ptr [rax+0],0", "setz~dl", "movzx~edx,dl", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [1, 0, 66, 0, 0, 2, 0, 1, 13, 9, 0.003511852502194908, ["cmp     al, 2Fh ; '/'", "jz      short loc_3280"], ["cmp~al,0", "jz~FOO"]], [1, 0, 66, 0, 1, 3, 0, 1, 9, 10, 0.08999122036874452, ["call    ___errno_location", "mov     qword ptr [rsp+108h+fd], rax", "mov     dword ptr [rax], 0"], ["call~FOO", "mov~[word ptr [rsp+0],rax", "mov~<TAG>,0"]], [1, 0, 66, 0, 0, 2, 0, 1, 9, 9, 0.09877085162423178, ["cmp     byte ptr [x+18h], 0", "jnz     loc_34E8"], ["cmp~[yte ptr [x+0],0", "jnz~FOO"]], [0, 0, 66, 0, 1, 5, 1, 2, 2, 4, 0.6180860403863038, ["mov     rdi, fts; sp_0", "call    rpl_fts_read", "mov     rbx, rax", "test    ent, ent", "jz      loc_31B0"], ["mov~rdi,fts", "call~FOO", "mov~rbx,rax", "test~ent,ent", "jz~FOO"]], [5, 0, 66, 1, 1, 15, 1, 2, 1, 5, 0.01382791922739245, ["mov     r15, x", "cmp     byte ptr [x+8], 1", "sbb     esi, esi", "and     esi, 0FFFFFFC0h", "add     esi, 258h; options", "mov     edx, 0; compar", "call    xfts_open", "mov     r12, rax", "mov     r13d, 2", "lea     r14, off_B298", "lea     fts, [rsp+108h+var_DC]", "mov     [rsp+108h+is_empty_p], rax", "lea     rax, [rsp+108h+var_D8]", "mov     [rsp+108h+stat_buf], rax", "jmp     loc_3707"], ["mov~r15,x", "cmp~[yte ptr [x+0],0", "sbb~esi,esi", "and~esi,0", "add~esi,0", "mov~edx,0", "call~FOO", "mov~r12,rax", "mov~r13d,0", "lea~r14,<TAG>", "lea~fts,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 66, 0, 0, 2, 0, 1, 9, 5, 0.06709101551068189, ["mov     r13d, ebp", "jmp     loc_3707"], ["mov~r13d,ebp", "jmp~FOO"]], [11, 0, 66, 0, 5, 24, 0, 6, 13, 7, 0.011633011413520631, ["mov     rsi, [ent+38h]; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbp, rax", "mov     edx, 5; category", "lea     rsi, aSkippingSSince; \"skipping %s, since it's on a different \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     edx, 5; category", "lea     rsi, aAndPreserveRoo; \"and --preserve-root=all is in effect\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     loc_3588"], ["mov~rsi,[ent+0]", "mov~edi,0", "call~FOO", "mov~rbp,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [0, 0, 66, 0, 0, 3, 1, 1, 8, 10, 0.15956979806848112, ["mov     rax, [x+10h]", "test    rax, rax", "jz      short loc_388F"], ["mov~rax,[x+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 66, 0, 0, 3, 0, 1, 9, 10, 0.06057945566286216, ["mov     rcx, [rax]", "cmp     [ent+80h], rcx", "jz      loc_33D8"], ["mov~rcx,<TAG>", "cmp~[ent+0],rcx", "jz~FOO"]], [1, 0, 66, 0, 0, 2, 0, 1, 11, 9, 0.03687445127304653, ["cmp     byte ptr [rax+13h], 2Eh ; '.'", "jnz     short loc_32AE"], ["cmp~[yte ptr [rax+0],0", "jnz~FOO"]], [5, 0, 66, 0, 1, 15, 1, 2, 6, 8, 0.06987123207491953, ["and     edx, 0FFFFFFFDh", "cmp     dx, 4", "setz    al", "movzx   eax, al", "mov     [rsp+108h+fd], eax", "mov     r9d, 0; is_empty_p", "mov     r8d, 3; mode", "mov     rcx, x; x", "mov     edx, eax; is_dir", "mov     rsi, ent; ent", "mov     rdi, fts; fts", "call    prompt", "mov     ebp, eax", "cmp     eax, 2", "jz      short loc_3697"], ["and~edx,0", "cmp~dx,0", "setz~al", "movzx~eax,al", "mov~[rsp+0],eax", "mov~r9d,0", "mov~r8d,0", "mov~rcx,x", "mov~edx,eax", "mov~rsi,ent", "mov~rdi,fts", "call~FOO", "mov~ebp,eax", "cmp~eax,0", "jz~FOO"]], [1, 0, 66, 0, 0, 2, 0, 1, 5, 9, 0.10513608428446006, ["cmp     dx, 6; jumptable 000000000000372F cases 3,4,6,8,10-13", "jnz     short loc_35E8"], ["cmp~dx,0", "jnz~FOO"]], [1, 0, 66, 0, 0, 2, 0, 1, 6, 9, 0.03709394205443371, ["cmp     byte ptr [x+8], 0", "jz      short loc_35E8"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [1, 0, 66, 0, 0, 2, 0, 1, 7, 8, 0.029119110330699447, ["cmp     qword ptr [ent+58h], 0", "jle     short loc_35E8"], ["cmp~[word ptr [ent+0],0", "jle~FOO"]], [0, 0, 66, 0, 0, 3, 0, 1, 8, 7, 0.028899619549312267, ["mov     rax, [fts+18h]", "cmp     [ent+78h], rax", "jnz     short loc_364C"], ["mov~rax,[fts+0]", "cmp~[ent+0],rax", "jnz~FOO"]], [1, 0, 66, 0, 0, 2, 0, 1, 8, 8, 0.04510535557506585, ["cmp     [rsp+108h+var_DC], 4", "jnz     short loc_361C"], ["cmp~[rsp+0],0", "jnz~FOO"]], [3, 0, 66, 0, 1, 10, 0, 2, 7, 9, 0.07594381035996488, ["mov     r9, [rsp+108h+is_empty_p]; is_empty_p", "mov     r8d, 2; mode", "mov     rcx, x; x", "mov     edx, 1; is_dir", "mov     rsi, ent; ent", "mov     rdi, fts; fts", "call    prompt", "mov     ebp, eax", "cmp     eax, 2", "jz      loc_3598"], ["mov~r9,[rsp+0]", "mov~r8d,0", "mov~rcx,x", "mov~edx,0", "mov~rsi,ent", "mov~rdi,fts", "call~FOO", "mov~ebp,eax", "cmp~eax,0", "jz~FOO"]], [1, 0, 66, 0, 0, 3, 0, 1, 7, 7, 0.16930055604331284, ["lea     eax, [rbp-2]", "cmp     eax, 2", "ja      loc_37DD"], ["lea~eax,[rbp-2]+0]", "cmp~eax,0", "ja~FOO"]], [2, 0, 66, 0, 2, 11, 0, 3, 9, 8, 0.012730465320456541, ["mov     ecx, 1; is_dir", "mov     rdx, x; x", "mov     rsi, ent; ent", "mov     rdi, fts; fts", "call    excise", "mov     ebp, eax", "mov     rsi, ent; ent", "mov     rdi, fts; fts", "call    fts_skip_tree", "cmp     ebp, 2", "jz      short loc_361C"], ["mov~ecx,0", "mov~rdx,x", "mov~rsi,ent", "mov~rdi,fts", "call~FOO", "mov~ebp,eax", "mov~rsi,ent", "mov~rdi,fts", "call~FOO", "cmp~ebp,0", "jz~FOO"]], [0, 0, 66, 0, 1, 7, 0, 2, 7, 8, 0.0, ["mov     ecx, [rsp+108h+fd]; is_dir", "mov     rdx, x; x", "mov     rsi, ent; ent", "mov     rdi, fts; fts", "call    excise", "mov     ebp, eax", "jmp     loc_361C"], ["mov~ecx,[rsp+0]", "mov~rdx,x", "mov~rsi,ent", "mov~rdi,fts", "call~FOO", "mov~ebp,eax", "jmp~FOO"]], [0, 0, 66, 0, 2, 6, 0, 3, 8, 8, 0.03435030728709394, ["mov     rdi, ent; ent", "call    mark_ancestor_dirs", "mov     rsi, ent; ent", "mov     rdi, fts; fts", "call    fts_skip_tree", "jmp     loc_361C"], ["mov~rdi,ent", "call~FOO", "mov~rsi,ent", "mov~rdi,fts", "call~FOO", "jmp~FOO"]], [1, 1, 68, 1, 0, 12, 1, 1, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 0D8h", "mov     rax, fs:28h", "mov     [rsp+108h+var_40], rax", "xor     eax, eax", "cmp     qword ptr [file], 0", "jz      loc_3831"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~<TAG>,0", "jz~FOO"]], [3, 0, 66, 1, 0, 5, 1, 1, 8, 7, 0.07835820895522388, ["cmp     byte ptr [x+0Ah], 1", "sbb     ebp, ebp", "and     ebp, 0FFFFFFEEh", "add     ebp, 27h ; '''", "jmp     short loc_32D5"], ["cmp~[yte ptr [x+0],0", "sbb~ebp,ebp", "and~ebp,0", "add~ebp,0", "jmp~FOO"]], [1, 0, 66, 0, 0, 1, 0, 0, 7, 7, 0.01997366110623354, ["mov     ebp, 15h"], ["mov~ebp,0"]], [5, 0, 5, 0, 2, 11, 0, 3, 4, 3, 0.0, ["mov     edx, 5; category", "lea     rsi, aFtsReadFailed; \"fts_read failed\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rdx, rax; format", "mov     esi, [rbx]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "mov     r13d, 4", "jmp     short loc_31BD"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rdx,rax", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~r13d,0", "jmp~FOO"]], [1, 0, 6, 0, 1, 4, 0, 2, 3, 3, 0.07704126426690079, ["call    ___errno_location", "mov     ent, rax", "cmp     dword ptr [rax], 0", "jnz     short loc_31F9"], ["call~FOO", "mov~ent,rax", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 66, 0, 0, 2, 0, 1, 8, 6, 0.1578870354111794, ["cmp     ebp, 4", "jz      loc_31A8"], ["cmp~ebp,0", "jz~FOO"]], [1, 0, 66, 0, 0, 3, 0, 1, 3, 8, 0.5296312554872695, ["movzx   edx, word ptr [ent+70h]", "cmp     dx, 0Dh; switch 14 cases", "ja      short loc_3785; jumptable 000000000000372F default case"], ["movzx~edx,[ord ptr [ent+0]", "cmp~dx,0", "ja~FOO"]], [1, 0, 66, 0, 0, 2, 0, 1, 5, 9, 0.3689640035118525, ["cmp     byte ptr [x+9], 0; jumptable 000000000000372F case 1", "jnz     loc_385A"], ["cmp~[yte ptr [x+0],0", "jnz~FOO"]], [0, 0, 66, 0, 1, 2, 0, 1, 12, 8, 0.01646180860403863, ["mov     rdi, rbp; dirp", "call    _closedir"], ["mov~rdi,rbp", "call~FOO"]], [0, 0, 66, 0, 1, 5, 0, 2, 12, 8, 0.017339771729587356, ["mov     rdi, rbp; ptr", "call    free", "mov     rax, [rsp+108h+var_D8]", "cmp     [fts+18h], rax", "jz      short loc_389A"], ["mov~rdi,rbp", "call~FOO", "mov~rax,[rsp+0]", "cmp~[fts+0],rax", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 2, 0.0006584723441615452, ["mov     r13d, 2", "jmp     loc_31CD"], ["mov~r13d,0", "jmp~FOO"]], [1, 0, 66, 0, 0, 2, 0, 1, 6, 8, 0.15298507462686567, ["cmp     byte ptr [x+0Ah], 0", "jz      loc_32D0"], ["cmp~[yte ptr [x+0],0", "jz~FOO"]], [1, 0, 66, 0, 0, 6, 1, 1, 8, 7, 0.040825285338015806, ["cmp     byte ptr [rax+1], 2Eh ; '.'", "setz    dl", "movzx   edx, dl", "movzx   eax, byte ptr [rax+rdx+1]", "test    al, al", "jz      short loc_3346"], ["cmp~[yte ptr [rax+0],0", "setz~dl", "movzx~edx,dl", "movzx~eax,[yte ptr [rax+0]", "test~al,al", "jz~FOO"]], [1, 0, 66, 0, 1, 5, 0, 2, 7, 8, 0.20061457418788411, ["mov     rbp, [ent+30h]", "mov     rdi, rbp; name", "call    last_component", "cmp     byte ptr [rax], 2Eh ; '.'", "jz      loc_332B"], ["mov~rbp,[ent+0]", "mov~rdi,rbp", "call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 66, 0, 0, 2, 0, 1, 6, 9, 0.2636084284460053, ["cmp     qword ptr [ent+58h], 0", "jnz     short loc_389A"], ["cmp~[word ptr [ent+0],0", "jnz~FOO"]], [6, 0, 66, 0, 3, 14, 0, 3, 12, 7, 0.020741878841088673, ["mov     rsi, rdx; arg", "mov     edi, 4; s", "call    quotearg_style", "mov     rbp, rax", "mov     edx, 5; category", "lea     rsi, aItIsDangerousT; \"it is dangerous to operate recursively \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbp", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error"], ["mov~rsi,rdx", "mov~edi,0", "call~FOO", "mov~rbp,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbp", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 66, 0, 0, 2, 0, 1, 9, 7, 0.005487269534679543, ["cmp     al, 2Fh ; '/'", "jnz     loc_3876"], ["cmp~al,0", "jnz~FOO"]], [2, 0, 66, 0, 1, 8, 1, 2, 7, 8, 0.12181738366988587, ["mov     rsi, [ent+30h]; file", "mov     edi, [fts+2Ch]; fd", "mov     edx, 30900h; oflag", "mov     eax, 0", "call    _openat", "mov     [rsp+108h+fd], eax", "test    eax, eax", "js      short loc_32B6"], ["mov~rsi,[ent+0]", "mov~edi,[fts+0]", "mov~edx,0", "mov~eax,0", "call~FOO", "mov~[rsp+0],eax", "test~eax,eax", "js~FOO"]], [0, 0, 66, 0, 1, 3, 0, 2, 9, 8, 0.005926251097453907, ["mov     edi, [rsp+108h+fd]; fd", "call    _close", "jmp     short loc_32B6"], ["mov~edi,[rsp+0]", "call~FOO", "jmp~FOO"]], [1, 0, 66, 0, 1, 7, 0, 2, 11, 8, 0.0684811237928007, ["mov     rax, qword ptr [rsp+108h+fd]", "mov     eax, [rax]", "mov     [rsp+108h+fd], eax", "mov     rdi, rbp; dirp", "call    _closedir", "cmp     [rsp+108h+fd], 0", "jnz     loc_32B6"], ["mov~rax,[word ptr [rsp+0]", "mov~eax,<TAG>", "mov~[rsp+0],eax", "mov~rdi,rbp", "call~FOO", "cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 66, 0, 0, 1, 0, 1, 10, 9, 0.0004389815627743635, ["jmp     loc_38C3"], ["jmp~FOO"]], [0, 0, 66, 0, 1, 5, 1, 2, 8, 9, 0.10711150131694469, ["mov     edi, eax; fd", "call    _fdopendir", "mov     rbp, rax", "test    rax, rax", "jz      short loc_32C5"], ["mov~edi,eax", "call~FOO", "mov~rbp,rax", "test~rax,rax", "jz~FOO"]], [7, 0, 0, 0, 4, 19, 0, 4, 4, -1, 0.0, ["mov     rdx, [ent+38h]; jumptable 000000000000372F default case", "mov     esi, 3; s", "mov     edi, 0; n", "call    quotearg_n_style_colon", "mov     rbp, rax", "movzx   ebx, word ptr [ent+70h]", "mov     edx, 5; category", "lea     rsi, aUnexpectedFail; \"unexpected failure: fts_info=%d: %s\\npl\"...", "mov     edi, 0; domainname", "call    _dcgettext", "lea     r9, aBugCoreutilsGn; \"bug-coreutils@gnu.org\"", "mov     r8, rbp", "mov     ecx, ebx", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "call    _abort"], ["mov~rdx,[ent+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbp,rax", "movzx~ebx,[ord ptr [ent+0]", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~r9,<TAG>", "mov~r8,rbp", "mov~ecx,ebx", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.028094820017559263, ["mov     eax, r13d", "mov     rcx, [rsp+108h+var_40]", "xor     rcx, fs:28h", "jnz     loc_3962"], ["mov~eax,r13d", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [9, 0, 66, 0, 4, 22, 0, 5, 12, 7, 0.020741878841088673, ["lea     rdx, aLibs+6; arg", "mov     esi, 4; s", "mov     edi, 1; n", "call    quotearg_n_style", "mov     rbp, rax", "mov     rdx, [ent+38h]; arg", "mov     esi, 4; s", "mov     edi, 0; n", "call    quotearg_n_style", "mov     rm_status, rax", "mov     edx, 5; category", "lea     rsi, aItIsDangerousT_0; \"it is dangerous to operate recursively \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8, rbp", "mov     rcx, r13", "mov     rdx, rax; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     loc_3444"], ["lea~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rbp,rax", "mov~rdx,[ent+0]", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~rm_status,rax", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8,rbp", "mov~rcx,r13", "mov~rdx,rax", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [0, 1, 0, 0, 1, 5, 0, 1, 8, -1, 0.0, ["lea     rcx, __PRETTY_FUNCTION___7067; \"rm\"", "mov     edx, 261h; line", "lea     rsi, aSrcRemoveC; \"src/remove.c\"", "lea     rdi, aValidStatusS; \"VALID_STATUS (s)\"", "call    ___assert_fail"], ["lea~rcx,<TAG>", "mov~edx,<STR>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 0D8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [76, 17, 134, 3, 69, 107, 1, 494, 0.08505, 22, 5], "succs": [[2], [0, 48, 63, 8, 31], [23], [2], [2], [2], [2], [2], [2], [56, 66], [9, 22], [6], [11, 13], [50, 11], [64], [64, 14], [23], [16, 23], [60, 29], [18, 20], [49, 18], [18], [36, 12], [45, 47], [23], [23], [6], [28, 22], [10, 22], [49, 19], [37, 39], [32, 30], [33, 30], [34, 30], [30, 7], [37, 38], [40, 35], [67, 46], [37, 61], [37], [37], [24, 51], [3], [3], [15], [44, 15], [25, 17], [1, 63], [52, 55], [42], [26, 36], [64], [58, 43], [57, 4], [27, 53], [36, 54], [5], [27, 4], [42, 62], [42], [42, 55], [40], [59, 21], [], [65, 68], [], [5], [], []], "fname": "rm", "n_num": 69}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[2, 0, 0, 1, 1, 3, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     edi, 1; status", "call    usage"], ["sub~rsp,0", "mov~edi,0", "call~FOO"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 3, 0.0, 0, 1], "succs": [[]], "fname": "__argmatch_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 11, 0, 0, 2, 0, 1, 0, 0, 0.030303030303030304, ["mov     [rsp+58h+ambiguous], 1", "jmp     loc_39E0"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 11, 0, 0, 3, 1, 1, 5, 4, 0.12121212121212122, ["mov     rax, [rsp+58h+vallist]", "test    rax, rax", "jz      short loc_3A5B"], ["mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 11, 0, 1, 6, 1, 2, 2, 3, 0.3787878787878788, ["mov     rdx, arglen; n", "mov     rsi, [rsp+58h+s2]; s2", "mov     rdi, rbx; s1", "call    _strncmp", "test    eax, eax", "jnz     short loc_39E0"], ["mov~rdx,arglen", "mov~rsi,[rsp+0]", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 11, 0, 0, 9, 0, 1, 1, 4, 0.07575757575757576, ["not     rcx", "lea     r12, [rcx-1]", "mov     [rsp+58h+vallist], vallist_0", "mov     r15, arglist", "mov     [rsp+58h+s2], r8", "mov     r13, vallist_0", "mov     [rsp+58h+ambiguous], 0", "mov     ebp, 0", "jmp     short loc_39F0"], ["not~rcx", "lea~r12,[rcx-1]+0]", "mov~[rsp+0],vallist_0", "mov~r15,arglist", "mov~[rsp+0],r8", "mov~r13,vallist_0", "mov~[rsp+0],0", "mov~ebp,0", "jmp~FOO"]], [1, 0, 11, 2, 0, 5, 1, 1, 3, 2, 0.34090909090909094, ["add     i, 1", "mov     rbx, [arglist+i*8]", "add     r13, valsize", "test    rbx, rbx", "jz      short loc_3A65"], ["add~i,0", "mov~rbx,<TAG>", "add~r13,valsize", "test~rbx,rbx", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 4, 4, 0.25, ["cmp     [rsp+58h+var_58], 0FFFFFFFFFFFFFFFFh", "jz      short loc_39DC"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 11, 1, 0, 8, 0, 1, 3, 2, 0.33333333333333337, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     rdi, rbx", "repne scasb", "mov     rbx, rcx", "not     rbx", "sub     rbx, 1", "cmp     rbx, arglen", "jz      short loc_39D3"], ["mov~rcx,0", "mov~rdi,rbx", "scasb~<TAG>,", "mov~rbx,rcx", "not~rbx", "sub~rbx,0", "cmp~rbx,arglen", "jz~FOO"]], [4, 0, 12, 1, 0, 16, 1, 1, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 28h", "mov     r8, arg", "mov     r14, valsize", "mov     valsize, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "repne scasb", "mov     rbx, [arglist]", "mov     [rsp+58h+var_58], 0FFFFFFFFFFFFFFFFh", "test    rbx, rbx", "jz      loc_3A7A"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r8,arg", "mov~r14,valsize", "mov~valsize,0", "mov~eax,0", "scasb~<TAG>,", "mov~rbx,<TAG>", "mov~<TAG>,0", "test~rbx,rbx", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 1, 0, 0.0, ["mov     rax, [rsp+58h+var_58]", "add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     valsize", "pop     r15", "retn"], ["mov~rax,<TAG>", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~valsize", "pop~r15", "retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, 1, 0.015151515151515152, ["mov     [rsp+58h+var_58], i", "jmp     loc_3A7A"], ["mov~<TAG>,i", "jmp~FOO"]], [2, 0, 1, 0, 0, 4, 0, 0, 4, 1, 0.05303030303030303, ["cmp     [rsp+58h+ambiguous], 0", "mov     rax, 0FFFFFFFFFFFFFFFEh", "cmovz   rax, [rsp+58h+var_58]", "mov     [rsp+58h+var_58], rax"], ["cmp~[rsp+0],0", "mov~rax,0", "cmovz~rax,<TAG>", "mov~<TAG>,rax"]], [1, 0, 11, 2, 1, 12, 1, 2, 6, 3, 0.030303030303030304, ["mov     rdi, [rsp+58h+var_58]", "imul    rdi, valsize", "add     rdi, rax; s1", "mov     rdx, valsize; n", "mov     rsi, r13; s2", "call    _memcmp", "test    eax, eax", "movzx   eax, [rsp+58h+ambiguous]", "mov     edx, 1", "cmovnz  eax, edx", "mov     [rsp+58h+ambiguous], al", "jmp     short loc_39E0"], ["mov~rdi,<TAG>", "imul~rdi,valsize", "add~rdi,rax", "mov~rdx,valsize", "mov~rsi,r13", "call~FOO", "test~eax,eax", "movzx~eax,[rsp+0]", "mov~edx,0", "cmovnz~eax,edx", "mov~[rsp+0],al", "jmp~FOO"]], [0, 0, 11, 0, 0, 1, 0, 0, 5, 3, 0.06818181818181818, ["mov     [rsp+58h+var_58], i"], ["mov~<TAG>,i"]]], "func_feature": [2, 5, 12, 1, 13, 18, 1, 79, 0.13054, 0, 7], "succs": [[4], [0, 11], [4, 6], [2], [2, 10], [1, 12], [9, 5], [8, 3], [], [8], [8], [4], [4]], "fname": "argmatch", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[2, 0, 1, 0, 1, 6, 0, 2, 0, 0, 0.08333333333333333, ["mov     edx, 5; category", "lea     value, aInvalidArgumen; \"invalid argument %s for %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rbx, rax", "jmp     short loc_3AB6"], ["mov~edx,0", "lea~value,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "jmp~FOO"]], [1, 0, 3, 0, 0, 7, 0, 1, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbp, context", "mov     r12, value", "cmp     problem, 0FFFFFFFFFFFFFFFFh", "jz      short loc_3AFA"], ["push~r12", "push~rbp", "push~rbx", "mov~rbp,context", "mov~r12,value", "cmp~problem,0", "jz~FOO"]], [6, 0, 0, 0, 3, 19, 0, 3, 2, 0, 0.0, ["mov     rsi, context; arg", "mov     edi, 1; n", "call    quote_n", "mov     context, rax", "mov     rdx, value; arg", "mov     esi, 8; s", "mov     edi, 0; n", "call    quotearg_n_style", "mov     r8, rbp", "mov     rcx, rax", "mov     rdx, format; format", "mov     esi, 0; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "pop     format", "pop     rbp", "pop     value", "retn"], ["mov~rsi,context", "mov~edi,0", "call~FOO", "mov~context,rax", "mov~rdx,value", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~r8,rbp", "mov~rcx,rax", "mov~rdx,format", "mov~esi,0", "mov~edi,0", "mov~eax,0", "call~FOO", "pop~format", "pop~rbp", "pop~value", "retn"]], [2, 0, 1, 0, 1, 5, 0, 1, 1, 0, 0.08333333333333333, ["mov     edx, 5; category", "lea     value, aAmbiguousArgum; \"ambiguous argument %s for %s\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rbx, rax"], ["mov~edx,0", "lea~value,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax"]]], "func_feature": [5, 0, 7, 0, 4, 4, 1, 37, 0.04167, 2, 0], "succs": [[2], [0, 3], [], [2]], "fname": "argmatch_invalid", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 0, 0, 0, 0.044444444444444446, ["lea     rdx, [rax+1]", "mov     [rdi+28h], rdx", "mov     byte ptr [rax], 0Ah"], ["lea~rdx,[rax+0]", "mov~[rdi+0],rdx", "mov~<TAG>,0"]], [0, 0, 3, 0, 0, 4, 0, 0, 1, 1, 0.23333333333333334, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; _IO_FILE *", "mov     rax, [rdi+28h]", "cmp     rax, [rdi+30h]", "jnb     short loc_3C14"], ["mov~rdi,<TAG>", "mov~rax,[rdi+0]", "cmp~rax,[rdi+0]", "jnb~FOO"]], [2, 0, 9, 0, 0, 3, 0, 1, 1, 5, 0.05555555555555556, ["mov     r14d, 0", "mov     ebx, 0", "jmp     short loc_3BA8"], ["mov~r14d,0", "mov~ebx,0", "jmp~FOO"]], [3, 0, 10, 1, 2, 21, 1, 3, 0, 2, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r15, arglist", "mov     rbp, vallist", "mov     r13, valsize", "mov     rbx, cs:stderr@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     vallist, aValidArguments; \"Valid arguments are:\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "mov     r12, [arglist]", "test    r12, r12", "jz      loc_3BE9"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r15,arglist", "mov~rbp,vallist", "mov~r13,valsize", "mov~rbx,<TAG>", "mov~edx,0", "lea~vallist,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "mov~r12,<TAG>", "test~r12,r12", "jz~FOO"]], [1, 0, 9, 2, 0, 5, 1, 1, 4, 2, 0.3, ["add     i, 1", "mov     r12, [arglist+i*8]", "add     rbp, valsize", "test    r12, r12", "jz      short loc_3BE9"], ["add~i,0", "mov~r12,<TAG>", "add~rbp,valsize", "test~r12,r12", "jz~FOO"]], [2, 0, 9, 0, 2, 9, 0, 3, 4, 3, 0.03333333333333333, ["mov     rdi, r12; arg", "call    quote", "mov     rcx, rax", "lea     rdx, aS; \", %s\"", "mov     esi, 1", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     eax, 0", "call    ___fprintf_chk", "jmp     short loc_3B98"], ["mov~rdi,r12", "call~FOO", "mov~rcx,rax", "lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,<TAG>", "mov~eax,0", "call~FOO", "jmp~FOO"]], [2, 0, 9, 0, 2, 9, 0, 2, 3, 3, 0.15555555555555556, ["mov     rdi, r12; arg", "call    quote", "mov     rcx, rax", "lea     rdx, aS_0; \"\\n  - %s\"", "mov     esi, 1", "mov     rdi, cs:stderr@@GLIBC_2_2_5", "mov     eax, 0", "call    ___fprintf_chk", "mov     last_val, rbp"], ["mov~rdi,r12", "call~FOO", "mov~rcx,rax", "lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,<TAG>", "mov~eax,0", "call~FOO", "mov~last_val,rbp"]], [0, 0, 9, 0, 1, 6, 1, 2, 3, 4, 0.05555555555555556, ["mov     rdx, valsize; n", "mov     rsi, rbp; s2", "mov     rdi, last_val; s1", "call    _memcmp", "test    eax, eax", "jnz     short loc_3B6D"], ["mov~rdx,valsize", "mov~rsi,rbp", "mov~rdi,last_val", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 2, 4, 0.2111111111111111, ["test    i, i", "jz      short loc_3B6D"], ["test~i,i", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     valsize", "pop     r14", "pop     arglist", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~valsize", "pop~r14", "pop~arglist", "retn"]], [1, 0, 1, 0, 1, 3, 0, 2, 2, 0, 0.044444444444444446, ["mov     esi, 0Ah; int", "call    ___overflow", "jmp     short loc_3C05"], ["mov~esi,0", "call~FOO", "jmp~FOO"]]], "func_feature": [8, 4, 15, 0, 11, 15, 1, 73, 0.10303, 4, 4], "succs": [[9], [0, 10], [8], [1, 2], [8, 1], [4], [4], [5, 6], [6, 7], [], [9]], "fname": "argmatch_valid", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 0, 1, 0, 8, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "pop     arglist", "pop     vallist", "pop     valsize", "pop     arg", "pop     exit_fn", "pop     context", "retn"], ["add~rsp,0", "pop~arglist", "pop~vallist", "pop~valsize", "pop~arg", "pop~exit_fn", "pop~context", "retn"]], [1, 0, 1, 0, 3, 11, 0, 4, 1, 0, 0.0, ["mov     rdx, res; problem", "mov     rsi, arg; value", "mov     rdi, context; context", "call    argmatch_invalid", "mov     rdx, valsize; valsize", "mov     rsi, vallist; vallist", "mov     rdi, arglist; arglist", "call    argmatch_valid", "call    exit_fn", "mov     rax, 0FFFFFFFFFFFFFFFFh", "jmp     short loc_3C56"], ["mov~rdx,res", "mov~rsi,arg", "mov~rdi,context", "call~FOO", "mov~rdx,valsize", "mov~rsi,vallist", "mov~rdi,arglist", "call~FOO", "call~exit_fn", "mov~rax,0", "jmp~FOO"]], [1, 0, 2, 1, 1, 20, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r15, context", "mov     r13, arg", "mov     rbx, arglist", "mov     rbp, vallist", "mov     r12, valsize", "mov     r14, exit_fn", "mov     vallist, valsize; valsize", "mov     arglist, vallist; vallist", "mov     arg, arglist; arglist", "mov     context, arg; arg", "call    argmatch", "test    res, res", "js      short loc_3C65"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r15,context", "mov~r13,arg", "mov~rbx,arglist", "mov~rbp,vallist", "mov~r12,valsize", "mov~r14,exit_fn", "mov~vallist,valsize", "mov~arglist,vallist", "mov~arg,arglist", "mov~context,arg", "call~FOO", "test~res,res", "js~FOO"]]], "func_feature": [4, 1, 6, 0, 3, 3, 1, 39, 0.0, 0, 2], "succs": [[], [0], [0, 1]], "fname": "__xargmatch_internal", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 3, 0, 0, 4, 0, 0, 0, 0, 0.1, ["mov     r13, valsize", "mov     r14, value", "mov     rbp, vallist", "lea     rbx, [arglist+8]"], ["mov~r13,valsize", "mov~r14,value", "mov~rbp,vallist", "lea~rbx,[arglist+0]"]], [0, 0, 5, 0, 0, 8, 1, 1, 0, 1, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     r12, [arglist]", "test    r12, r12", "jz      short loc_3CD7"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~r12,<TAG>", "test~r12,r12", "jz~FOO"]], [1, 0, 3, 2, 0, 5, 1, 1, 3, -1, 0.0, ["mov     r12, [rbx]", "add     rbp, valsize", "add     rbx, 8", "test    r12, r12", "jnz     short loc_3CAA"], ["mov~r12,<TAG>", "add~rbp,valsize", "add~rbx,0", "test~r12,r12", "jnz~FOO"]], [0, 0, 3, 0, 1, 6, 1, 2, 2, -1, 0.15000000000000002, ["mov     rdx, valsize; n", "mov     rsi, rbp; s2", "mov     rdi, value; s1", "call    _memcmp", "test    eax, eax", "jz      short loc_3CCB"], ["mov~rdx,valsize", "mov~rsi,rbp", "mov~rdi,value", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 0, 7, 0, 0, 2, -1, 0.0, ["mov     rax, r12", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "retn"], ["mov~rax,r12", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.05, ["mov     r12d, 0", "jmp     short loc_3CCB"], ["mov~r12d,0", "jmp~FOO"]]], "func_feature": [1, 3, 5, 0, 6, 8, 0, 32, 0.05, 0, 2], "succs": [[3], [0, 5], [3, 4], [2, 4], [], [4]], "fname": "argmatch_to_argument", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:file_name, file", "retn"], ["mov~<TAG>,file", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdin_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[2, 0, 1, 0, 3, 10, 0, 3, 0, 0, 0.041666666666666664, ["call    quotearg_colon", "mov     rbp, rax", "call    ___errno_location", "mov     r8, close_error", "mov     rcx, rbp", "lea     rdx, format; \"%s: %s\"", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error"], ["call~FOO", "mov~rbp,rax", "call~FOO", "mov~r8,close_error", "mov~rcx,rbp", "lea~rdx,<TAG>", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO"]], [2, 0, 3, 0, 1, 8, 1, 2, 2, 1, 0.20833333333333331, ["mov     edx, 5; category", "lea     rsi, aErrorClosingFi; \"error closing file\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rbx, rax", "mov     rdi, cs:file_name; arg", "test    rdi, rdi", "jz      loc_3DC9"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [1, 0, 0, 1, 1, 5, 0, 1, 2, -1, 0.0, ["call    close_stdout", "add     rsp, 8", "pop     rbx", "pop     rbp", "retn"], ["call~FOO", "add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [0, 0, 5, 0, 1, 4, 1, 2, 1, 2, 0.1111111111111111, ["mov     rdi, cs:stdin@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jz      loc_3DBD"], ["mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 3, 2, 0.013888888888888888, ["test    ebx, ebx", "jnz     loc_3D15"], ["test~ebx,ebx", "jnz~FOO"]], [2, 0, 1, 0, 2, 8, 0, 3, 3, 0, 0.041666666666666664, ["call    ___errno_location", "mov     rcx, close_error", "lea     rdx, aS+2; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     loc_3D69"], ["call~FOO", "mov~rcx,close_error", "lea~rdx,<TAG>", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [2, 0, 8, 0, 1, 6, 1, 2, 1, 3, 0.027777777777777776, ["mov     edx, 1; whence", "mov     esi, 0; offset", "mov     rdi, rbx; fp", "call    rpl_fseeko", "test    eax, eax", "jnz     loc_3D01"], ["mov~edx,0", "mov~esi,0", "mov~rdi,rbx", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 9, 1, 1, 8, 1, 2, 0, 3, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbx, cs:stdin@@GLIBC_2_2_5", "mov     rdi, rbx; fp", "call    freadahead", "test    rax, rax", "jnz     short loc_3D79"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,<TAG>", "mov~rdi,rbx", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 2, 3, 0, 2, 4, -1, 0.0, ["call    close_stdout", "mov     edi, cs:exit_failure; status", "call    __exit"], ["call~FOO", "mov~edi,<TAG>", "call~FOO"]], [0, 0, 6, 0, 2, 7, 1, 3, 2, 2, 0.05555555555555555, ["mov     rdi, cs:stdin@@GLIBC_2_2_5; stream", "call    rpl_fflush", "mov     ebx, eax", "mov     rdi, cs:stdin@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jnz     loc_3D15"], ["mov~rdi,<TAG>", "call~FOO", "mov~ebx,eax", "mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]]], "func_feature": [14, 6, 21, 0, 10, 14, 0, 61, 0.05, 6, 2], "succs": [[8], [0, 5], [], [1, 2], [1, 2], [8], [9, 3], [3, 6], [], [1, 4]], "fname": "close_stdin", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:file_name_0, file", "retn"], ["mov~<TAG>,file", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_file_name", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     cs:ignore_EPIPE, dil", "retn"], ["mov~<TAG>,dil", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 1, 0], "succs": [[]], "fname": "close_stdout_set_ignore_EPIPE", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 0, 1, 0, 4, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "retn"]], [0, 0, 2, 0, 1, 4, 1, 2, 1, 1, 0.08333333333333333, ["mov     rdi, cs:stderr@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jnz     loc_3EBF"], ["mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 3, 0, 1, 8, 1, 2, 2, -1, 0.125, ["mov     edx, 5; category", "lea     rsi, aWriteError; \"write error\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rbx, rax", "mov     rdi, cs:file_name_0; arg", "test    rdi, rdi", "jz      short loc_3E9D"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rbx,rax", "mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 1, 3, 0.06944444444444445, ["cmp     cs:ignore_EPIPE, 0", "jz      short loc_3E42"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 1, 7, 0, 1, 3, 0, 2, 2, 2, 0.041666666666666664, ["call    ___errno_location", "cmp     dword ptr [rax], 20h ; ' '", "jnz     short loc_3E42"], ["call~FOO", "cmp~<TAG>,<STR>", "jnz~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 2, 0, 0.0, ["mov     edi, cs:exit_failure; status", "call    __exit"], ["mov~edi,<TAG>", "call~FOO"]], [2, 0, 1, 0, 3, 10, 0, 3, 3, -1, 0.027777777777777776, ["call    quotearg_colon", "mov     rbp, rax", "call    ___errno_location", "mov     r8, write_error", "mov     rcx, rbp", "lea     rdx, format; \"%s: %s\"", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error"], ["call~FOO", "mov~rbp,rax", "call~FOO", "mov~r8,write_error", "mov~rcx,rbp", "lea~rdx,<TAG>", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO"]], [1, 0, 9, 1, 1, 7, 1, 2, 0, 2, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rdi, cs:stdout@@GLIBC_2_2_5; stream", "call    close_stream", "test    eax, eax", "jz      short loc_3E27"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rdi,<TAG>", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 1, 2, 0, 1, 4, -1, 0.0, ["mov     edi, cs:exit_failure; status", "call    __exit"], ["mov~edi,<TAG>", "call~FOO"]], [2, 0, 1, 0, 2, 8, 0, 3, 3, -1, 0.027777777777777776, ["call    ___errno_location", "mov     rcx, write_error", "lea     rdx, aS+2; format", "mov     esi, [rax]; errnum", "mov     edi, 0; status", "mov     eax, 0", "call    _error", "jmp     short loc_3E92"], ["call~FOO", "mov~rcx,write_error", "lea~rdx,<TAG>", "mov~esi,<TAG>", "mov~edi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]]], "func_feature": [11, 3, 17, 0, 10, 12, 2, 50, 0.0375, 8, 2], "succs": [[], [0, 5], [9, 6], [2, 4], [1, 2], [], [8], [1, 3], [], [8]], "fname": "close_stdout", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 7, 0, 0, 3, 1, 1, 0, 0, 0.19444444444444442, ["movzx   ecx, byte ptr [p]", "test    cl, cl", "jz      short locret_3F16"], ["movzx~ecx,<TAG>", "test~cl,cl", "jz~FOO"]], [1, 0, 9, 0, 0, 3, 0, 1, 0, 2, 0.0, ["mov     rax, name", "cmp     byte ptr [base], 2Fh ; '/'", "jnz     short loc_3EDB"], ["mov~rax,name", "cmp~<TAG>,0", "jnz~FOO"]], [2, 0, 9, 1, 0, 3, 0, 1, 1, 2, 0.0, ["add     base, 1", "cmp     byte ptr [base], 2Fh ; '/'", "jz      short loc_3ED2"], ["add~base,0", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 6, 1, 0, 4, 1, 1, 5, 1, 0.18055555555555555, ["add     p, 1", "movzx   ecx, byte ptr [p]", "test    cl, cl", "jz      short locret_3F16"], ["add~p,0", "movzx~ecx,<TAG>", "test~cl,cl", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 4, 2, 0.14583333333333331, ["test    sil, sil", "jz      short loc_3EF9"], ["test~sil,sil", "jz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 5, 2, 0.0, ["mov     base, p", "mov     esi, r8d", "jmp     short loc_3EF9"], ["mov~base,p", "mov~esi,r8d", "jmp~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 4, 2, 0.048611111111111105, ["mov     esi, edi"], ["mov~esi,edi"]], [1, 0, 6, 0, 0, 2, 0, 1, 3, 3, 0.3472222222222222, ["cmp     cl, 2Fh ; '/'", "jz      short loc_3EF7"], ["cmp~cl,0", "jz~FOO"]], [3, 0, 6, 0, 0, 5, 0, 1, 2, 4, 0.20833333333333331, ["mov     rdx, p", "mov     esi, 0", "mov     edi, 1", "mov     r8d, 0", "jmp     short loc_3F04"], ["mov~rdx,p", "mov~esi,0", "mov~edi,0", "mov~r8d,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 3, 8, 0, 10, 15, 2, 27, 0.1125, 0, 2], "succs": [[8, 9], [0, 2], [0, 2], [9, 7], [3, 5], [3], [3], [4, 6], [7], []], "fname": "last_component", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, len", "retn"], ["mov~rax,len", "retn"]], [1, 0, 6, 0, 0, 2, 0, 1, 2, 0, 0.30952380952380953, ["cmp     len, 1", "jz      short loc_3F5F"], ["cmp~len,0", "jz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 1, 0, 0.11904761904761904, ["lea     rcx, [len-1]", "cmp     byte ptr [rdx+len-1], 2Fh ; '/'", "jz      short loc_3F49"], ["lea~rcx,[len-1]+0]", "cmp~[yte ptr [rdx+0],0", "jz~FOO"]], [4, 0, 7, 1, 0, 9, 0, 0, 0, 0, 0.0, ["mov     rdx, name", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "repne scasb", "mov     rax, rcx", "not     rax", "sub     rax, 1", "cmp     len, 1", "jbe     short locret_3F44"], ["mov~rdx,name", "mov~rcx,0", "mov~eax,0", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "sub~rax,0", "cmp~len,0", "jbe~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 1, 0, 0, 2, 0, 1, 4, 0, 0.07142857142857142, ["mov     rax, len", "jmp     short locret_3F44"], ["mov~rax,len", "jmp~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 4, 0, 0.047619047619047616, ["mov     len, rax"], ["mov~len,rax"]], [1, 0, 6, 0, 0, 3, 0, 1, 3, 0, 0.21428571428571427, ["lea     rax, [len-1]", "cmp     byte ptr [rdx+len-1], 2Fh ; '/'", "jz      short loc_3F46"], ["lea~rax,[len-1]+0]", "cmp~[yte ptr [rdx+0],0", "jz~FOO"]]], "func_feature": [0, 0, 4, 0, 8, 10, 1, 23, 0.09524, 0, 1], "succs": [[], [0, 7], [1, 4], [2, 4], [], [4], [1], [5, 6]], "fname": "base_len", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[2, 0, 1, 0, 1, 5, 0, 2, 0, 0, 0.004901960784313725, ["mov     edx, 5; category", "lea     rsi, aDirectory; \"directory\"", "mov     edi, 0; domainname", "call    _dcgettext", "jmp     short loc_3FCE"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "jmp~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 1, 6, 0.04534313725490196, ["cmp     eax, 4000h", "jz      loc_400A"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 1, 0, 1, 5, 0, 2, 4, -1, 0.003676470588235294, ["mov     edx, 5; category", "lea     rsi, aBlockSpecialFi; \"block special file\"", "mov     edi, 0; domainname", "call    _dcgettext", "jmp     loc_3FCE"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "jmp~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 3, 4, 0.08823529411764705, ["cmp     eax, 6000h", "jz      loc_403A"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 1, 0, 1, 5, 0, 2, 6, -1, 0.003676470588235294, ["mov     edx, 5; category", "lea     rsi, aFifo; \"fifo\"", "mov     edi, 0; domainname", "call    _dcgettext", "jmp     loc_3FCE"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "jmp~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 5, 2, 0.07352941176470588, ["cmp     eax, 1000h", "jz      loc_4070"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 2, 5, 0.07352941176470588, ["cmp     eax, 0A000h", "jz      loc_4022"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 4, 3, 0.08823529411764705, ["cmp     eax, 2000h", "jz      loc_4055"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 1, 0, 1, 5, 0, 2, 2, -1, 0.003063725490196078, ["mov     edx, 5; category", "lea     rsi, aRegularFile; \"regular file\"", "mov     edi, 0; domainname", "call    _dcgettext", "jmp     short loc_3FCE"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, -1, 0.00980392156862745, ["cmp     qword ptr [st+30h], 0", "jnz     short loc_3FF2"], ["cmp~[word ptr [st+0],0", "jnz~FOO"]], [2, 0, 1, 0, 1, 4, 0, 1, 7, -1, 0.001838235294117647, ["mov     edx, 5; category", "lea     rsi, aWeirdFile; \"weird file\"", "mov     edi, 0; domainname", "call    _dcgettext"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, 1, 0.044117647058823525, ["cmp     eax, 0C000h", "jz      loc_408B"], ["cmp~eax,0", "jz~FOO"]], [2, 0, 1, 0, 1, 5, 0, 2, 5, -1, 0.003676470588235294, ["mov     edx, 5; category", "lea     rsi, aCharacterSpeci; \"character special file\"", "mov     edi, 0; domainname", "call    _dcgettext", "jmp     loc_3FCE"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "jmp~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [2, 0, 1, 0, 1, 5, 0, 2, 2, -1, 0.003063725490196078, ["mov     edx, 5; category", "lea     rsi, aRegularEmptyFi; \"regular empty file\"", "mov     edi, 0; domainname", "call    _dcgettext", "jmp     short loc_3FCE"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "jmp~FOO"]], [2, 0, 1, 0, 1, 5, 0, 2, 3, -1, 0.003676470588235294, ["mov     edx, 5; category", "lea     rsi, aSymbolicLink; \"symbolic link\"", "mov     edi, 0; domainname", "call    _dcgettext", "jmp     short loc_3FCE"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "jmp~FOO"]], [2, 0, 1, 0, 1, 5, 0, 2, 7, 0, 0.001838235294117647, ["mov     edx, 5; category", "lea     rsi, aSocket; \"socket\"", "mov     edi, 0; domainname", "call    _dcgettext", "jmp     loc_3FCE"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "jmp~FOO"]], [3, 0, 17, 1, 0, 5, 1, 1, 0, 7, 0.0, ["sub     rsp, 8", "mov     eax, [st+18h]", "and     eax, 0F000h", "cmp     eax, 8000h", "jz      short loc_3FD3"], ["sub~rsp,0", "mov~eax,[st+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]]], "func_feature": [9, 1, 25, 0, 18, 25, 1, 65, 0.02512, 9, 2], "succs": [[13], [0, 6], [13], [2, 7], [13], [11, 4], [3, 15], [12, 5], [13], [8, 14], [13], [16, 10], [13], [], [13], [13], [13], [9, 1]], "fname": "file_type", "n_num": 18}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 2, 1, 1, 4, 1, 2, 0, 1, 0.0, ["sub     rsp, 8", "call    mfile_name_concat", "test    p, p", "jz      short loc_40B9"], ["sub~rsp,0", "call~FOO", "test~p,p", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 1, 3, 0, 3, 2, 1, 7, 0.0, 0, 2], "succs": [[], [0, 2], []], "fname": "file_name_concat", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[2, 0, 6, 0, 0, 3, 0, 1, 0, 0, 0.0625, ["mov     r12d, 0", "cmp     byte ptr [dir+dirlen-1], 2Fh ; '/'", "jz      short loc_414A"], ["mov~r12d,0", "cmp~[yte ptr [dir+0],0", "jz~FOO"]], [2, 1, 8, 3, 2, 28, 1, 3, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     r13, dir", "mov     rbx, base", "mov     [rsp+48h+base_in_result], base_in_result_0", "call    last_component", "mov     rbp, rax", "mov     rdi, dirbase; name", "call    base_len", "mov     rdx, rax", "sub     dirbase, dir", "add     rbp, dirbaselen", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     r8, base", "mov     [rsp+48h+src], base", "mov     rdi, base", "repne scasb", "mov     rsi, rcx", "not     rsi", "lea     rbx, [rsi-1]", "test    dirbaselen, dirbaselen", "jz      short loc_4134"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~r13,dir", "mov~rbx,base", "mov~[rsp+0],base_in_result_0", "call~FOO", "mov~rbp,rax", "mov~rdi,dirbase", "call~FOO", "mov~rdx,rax", "sub~dirbase,dir", "add~rbp,dirbaselen", "mov~rcx,0", "mov~eax,0", "mov~r8,base", "mov~<TAG>,base", "mov~rdi,base", "scasb~<TAG>,", "mov~rsi,rcx", "not~rsi", "lea~rbx,[rsi-1]+0]", "test~dirbaselen,dirbaselen", "jz~FOO"]], [3, 0, 5, 0, 0, 5, 0, 0, 1, 2, 0.04464285714285714, ["mov     rax, [rsp+48h+src]", "cmp     byte ptr [rax], 2Fh ; '/'", "mov     r12d, 0", "mov     eax, 2Eh ; '.'", "cmovz   r12d, eax"], ["mov~rax,<TAG>", "cmp~<TAG>,0", "mov~r12d,0", "mov~eax,0", "cmovz~r12d,eax"]], [0, 0, 3, 0, 1, 9, 1, 2, 3, 2, 0.17857142857142855, ["mov     rdx, dirlen; n", "mov     rsi, dir; src", "mov     rdi, p_concat; dest", "call    _mempcpy", "mov     [rax], r12b", "lea     rdi, [rax+r15]; dest", "mov     rax, [rsp+48h+base_in_result]", "test    rax, rax", "jz      short loc_418C"], ["mov~rdx,dirlen", "mov~rsi,dir", "mov~rdi,p_concat", "call~FOO", "mov~<TAG>,r12b", "lea~rdi,<TAG>", "mov~rax,[rsp+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 4, 1, 1, 9, 2, 2, 2, 1, 0.2857142857142857, ["test    r12b, r12b", "setnz   r15b", "movzx   r15d, r15b", "lea     rdi, [dirlen+baselen+1]", "add     rdi, r15; size", "call    _malloc", "mov     r14, rax", "test    p_concat, p_concat", "jz      short loc_419B"], ["test~r12b,r12b", "setnz~r15b", "movzx~r15d,r15b", "lea~rdi,[dirlen+0]", "add~rdi,r15", "call~FOO", "mov~r14,rax", "test~p_concat,p_concat", "jz~FOO"]], [2, 0, 5, 0, 0, 4, 0, 1, 2, 2, 0.0, ["cmp     byte ptr [r8], 2Fh ; '/'", "mov     eax, 2Fh ; '/'", "cmovnz  r12d, eax", "jmp     short loc_414A"], ["cmp~<TAG>,0", "mov~eax,0", "cmovnz~r12d,eax", "jmp~FOO"]], [0, 0, 2, 0, 0, 1, 0, 0, 4, 2, 0.0, ["mov     [rax], p"], ["mov~<TAG>,p"]], [0, 1, 0, 1, 0, 9, 0, 0, 3, 0, 0.0, ["mov     rax, p_concat", "add     rsp, 18h", "pop     baselen", "pop     dirlen", "pop     sep", "pop     dir", "pop     p_concat", "pop     r15", "retn"], ["mov~rax,p_concat", "add~rsp,<STR>", "pop~baselen", "pop~dirlen", "pop~sep", "pop~dir", "pop~p_concat", "pop~r15", "retn"]], [1, 0, 1, 0, 1, 4, 0, 1, 4, 1, 0.03571428571428571, ["mov     rdx, baselen; n", "mov     rsi, [rsp+48h+src]; src", "call    _mempcpy", "mov     byte ptr [rax], 0"], ["mov~rdx,baselen", "mov~rsi,<TAG>", "call~FOO", "mov~<TAG>,0"]]], "func_feature": [5, 4, 10, 0, 9, 12, 1, 72, 0.06746, 0, 5], "succs": [[4, 5], [0, 2], [4], [8, 6], [3, 7], [4], [8], [], [7]], "fname": "mfile_name_concat", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0.0, ["lea     rbx, [base+3]", "mov     cs:__bss_start, argv0"], ["lea~rbx,[base+0]", "mov~<TAG>,argv0"]], [2, 0, 2, 0, 0, 9, 1, 1, 3, -1, 0.1, ["mov     ecx, 3", "lea     rdi, aLt; \"lt-\"", "mov     rsi, base", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "mov     rbx, base", "test    dl, dl", "jnz     short loc_421F"], ["mov~ecx,0", "lea~rdi,<TAG>", "mov~rsi,base", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "mov~rbx,base", "test~dl,dl", "jnz~FOO"]], [2, 0, 0, 0, 2, 6, 0, 2, 1, 0, 0.0, ["mov     rcx, cs:stderr@@GLIBC_2_2_5; s", "mov     edx, 37h ; '7'; n", "mov     esi, 1; size", "lea     argv0, aANullArgv0WasP; \"A NULL argv[0] was passed through an ex\"...", "call    _fwrite", "call    _abort"], ["mov~rcx,<TAG>", "mov~edx,0", "mov~esi,0", "lea~argv0,<TAG>", "call~FOO", "call~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 0, 1, 0.0, ["push    rbx", "test    argv0, argv0", "jz      short loc_422F"], ["push~rbx", "test~argv0,argv0", "jz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["mov     cs:program_name, argv0", "mov     cs:program_invocation_name@@GLIBC_2_2_5, argv0", "pop     argv0", "retn"], ["mov~<TAG>,argv0", "mov~<TAG>,argv0", "pop~argv0", "retn"]], [2, 0, 4, 1, 1, 11, 1, 2, 1, -1, 0.13333333333333333, ["mov     rbx, argv0", "mov     esi, 2Fh ; '/'; c", "call    _strrchr", "lea     rdx, [slash+1]", "test    slash, slash", "mov     slash, rdx", "cmovz   rax, argv0", "mov     rdx, base", "sub     rdx, argv0", "cmp     rdx, 6", "jle     short loc_421F"], ["mov~rbx,argv0", "mov~esi,0", "call~FOO", "lea~rdx,[slash+0]", "test~slash,slash", "mov~slash,rdx", "cmovz~rax,argv0", "mov~rdx,base", "sub~rdx,argv0", "cmp~rdx,0", "jle~FOO"]], [2, 0, 3, 0, 0, 8, 1, 1, 2, -1, 0.13333333333333333, ["lea     rsi, [base-7]", "mov     ecx, 7", "lea     rdi, aLibs; \"/.libs/\"", "repe cmpsb", "setnbe  dl", "sbb     dl, 0", "test    dl, dl", "jnz     short loc_421F"], ["lea~rsi,[base-7]+0]", "mov~ecx,0", "lea~rdi,<TAG>", "cmpsb~<TAG>,<TAG>", "setnbe~dl", "sbb~dl,0", "test~dl,dl", "jnz~FOO"]]], "func_feature": [3, 4, 7, 0, 7, 9, 1, 43, 0.05238, 7, 1], "succs": [[4], [0, 4], [], [2, 5], [], [4, 6], [1, 4]], "fname": "set_program_name", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 9, 0, 0, 4, 1, 0, 0, 0, 0.09923076923076923, ["movzx   eax, byte ptr [s1+7]", "and     eax, 0FFFFFFDFh", "cmp     al, r9b", "setz    dl"], ["movzx~eax,[yte ptr [s1+0]", "and~eax,0", "cmp~al,r9b", "setz~dl"]], [1, 0, 11, 0, 0, 3, 0, 1, 12, 5, 0.23076923076923078, ["lea     eax, [s27-41h]", "cmp     al, 19h", "ja      loc_437B"], ["lea~eax,[s27-41h]+0]", "cmp~al,0", "ja~FOO"]], [0, 0, 9, 0, 0, 3, 0, 1, 13, 4, 0.09923076923076923, ["cmp     [s1+7], r9b", "setz    dl", "jmp     loc_4303"], ["cmp~[s1+0],r9b", "setz~dl", "jmp~FOO"]], [1, 0, 22, 0, 0, 3, 1, 1, 3, 14, 0.12923076923076923, ["mov     eax, 1", "test    dl, dl", "jz      loc_4353"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]], [1, 0, 23, 0, 0, 3, 1, 1, 2, 15, 0.10615384615384615, ["mov     eax, 0", "test    r10b, r10b", "jz      loc_4353"], ["mov~eax,0", "test~r10b,r10b", "jz~FOO"]], [1, 0, 8, 0, 0, 3, 1, 1, 14, 3, 0.19846153846153847, ["mov     eax, 0", "test    dl, dl", "jz      short loc_4353"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 0, 1, 17, 0, 0.04923076923076923, ["cmp     [s1+8], r11b", "setz    dl", "jmp     short loc_432B"], ["cmp~[s1+0],r11b", "setz~dl", "jmp~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 16, 1, 0.15384615384615385, ["lea     eax, [r11-41h]", "cmp     al, 19h", "ja      short loc_4387"], ["lea~eax,[r11-41h]+0]", "cmp~al,0", "ja~FOO"]], [1, 0, 21, 0, 0, 3, 0, 1, 4, 13, 0.15384615384615385, ["lea     eax, [s25-41h]", "cmp     al, 19h", "ja      loc_4364"], ["lea~eax,[s25-41h]+0]", "cmp~al,0", "ja~FOO"]], [1, 0, 7, 0, 0, 3, 1, 1, 15, 2, 0.1753846153846154, ["mov     eax, 1", "test    r9b, r9b", "jz      short loc_4353"], ["mov~eax,0", "test~r9b,r9b", "jz~FOO"]], [1, 0, 19, 0, 0, 4, 1, 0, 5, 12, 0.08384615384615385, ["movzx   eax, byte ptr [s1+5]", "and     eax, 0FFFFFFDFh", "cmp     al, cl", "setz    dl"], ["movzx~eax,[yte ptr [s1+0]", "and~eax,0", "cmp~al,cl", "setz~dl"]], [1, 0, 4, 0, 0, 4, 1, 0, 17, -1, 0.04923076923076923, ["movzx   eax, byte ptr [s1+8]", "and     eax, 0FFFFFFDFh", "cmp     al, r11b", "setz    dl"], ["movzx~eax,[yte ptr [s1+0]", "and~eax,0", "cmp~al,r11b", "setz~dl"]], [1, 0, 18, 0, 0, 3, 1, 1, 6, 11, 0.21384615384615385, ["mov     eax, 0", "test    dl, dl", "jz      loc_4353"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]], [0, 0, 19, 0, 0, 3, 0, 1, 5, 12, 0.08384615384615385, ["cmp     [s1+5], cl", "setz    dl", "jmp     loc_42A4"], ["cmp~[s1+0],cl", "setz~dl", "jmp~FOO"]], [1, 0, 3, 0, 0, 3, 1, 1, 18, -1, 0.07538461538461538, ["mov     eax, 0", "test    dl, dl", "jz      short loc_4353"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]], [1, 0, 17, 0, 0, 3, 1, 1, 7, 10, 0.22153846153846155, ["mov     eax, 1", "test    cl, cl", "jz      loc_4353"], ["mov~eax,0", "test~cl,cl", "jz~FOO"]], [0, 0, 24, 0, 0, 3, 0, 1, 1, 16, 0.01846153846153846, ["cmp     [s1+4], dl", "setz    r10b", "jmp     loc_4272"], ["cmp~[s1+0],dl", "setz~r10b", "jmp~FOO"]], [2, 0, 26, 1, 0, 5, 0, 1, 0, 17, 0.0, ["sub     rsp, 8", "mov     r11d, [rsp+8+s28]", "lea     eax, [s24-41h]", "cmp     al, 19h", "ja      loc_4358"], ["sub~rsp,0", "mov~r11d,[rsp+0]", "lea~eax,[s24-41h]+0]", "cmp~al,0", "ja~FOO"]], [1, 0, 2, 0, 0, 3, 1, 1, 19, -1, 0.03692307692307692, ["mov     eax, 1", "test    r11b, r11b", "jz      short loc_4353"], ["mov~eax,0", "test~r11b,r11b", "jz~FOO"]], [1, 0, 16, 0, 0, 3, 0, 1, 8, 9, 0.23076923076923078, ["lea     eax, [s26-41h]", "cmp     al, 19h", "ja      loc_436F"], ["lea~eax,[s26-41h]+0]", "cmp~al,0", "ja~FOO"]], [2, 0, 1, 2, 1, 6, 1, 1, 20, -1, 0.0, ["add     s2, 9; s2", "add     s1, 9; s1", "call    c_strcasecmp", "test    eax, eax", "setz    al", "movzx   eax, al"], ["add~s2,0", "add~s1,0", "call~FOO", "test~eax,eax", "setz~al", "movzx~eax,al"]], [1, 0, 14, 0, 0, 4, 1, 0, 9, 8, 0.11076923076923077, ["movzx   eax, byte ptr [s1+6]", "and     eax, 0FFFFFFDFh", "cmp     al, r8b", "setz    dl"], ["movzx~eax,[yte ptr [s1+0]", "and~eax,0", "cmp~al,r8b", "setz~dl"]], [1, 0, 0, 1, 0, 2, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 13, 0, 0, 3, 1, 1, 10, 7, 0.24461538461538462, ["mov     eax, 0", "test    dl, dl", "jz      short loc_4353"], ["mov~eax,0", "test~dl,dl", "jz~FOO"]], [1, 0, 12, 0, 0, 3, 1, 1, 11, 6, 0.23692307692307693, ["mov     eax, 1", "test    r8b, r8b", "jz      short loc_4353"], ["mov~eax,0", "test~r8b,r8b", "jz~FOO"]], [0, 0, 14, 0, 0, 3, 0, 1, 9, 8, 0.11076923076923077, ["cmp     [s1+6], r8b", "setz    dl", "jmp     loc_42D7"], ["cmp~[s1+0],r8b", "setz~dl", "jmp~FOO"]], [1, 0, 24, 0, 0, 4, 1, 0, 1, 16, 0.01846153846153846, ["movzx   eax, byte ptr [s1+4]", "and     eax, 0FFFFFFDFh", "cmp     al, dl", "setz    r10b"], ["movzx~eax,[yte ptr [s1+0]", "and~eax,0", "cmp~al,dl", "setz~r10b"]]], "func_feature": [1, 16, 21, 0, 27, 41, 2, 90, 0.11595, 0, 4], "succs": [[5], [0, 2], [5], [8, 22], [3, 22], [9, 22], [14], [11, 6], [10, 13], [22, 7], [12], [14], [22, 15], [12], [18, 22], [19, 22], [4], [16, 26], [20, 22], [25, 21], [22], [23], [], [24, 22], [1, 22], [23], [4]], "fname": "strcaseeq4", "n_num": 27}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 4, 0, 0, 2, 0, 1, 0, 0, 0.05494505494505495, ["cmp     byte ptr [locale_code+3], 38h ; '8'", "jnz     loc_44B2"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 4, 1, 0.06593406593406594, ["cmp     byte ptr [locale_code+2], 31h ; '1'", "jnz     loc_44B2"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [1, 0, 1, 0, 0, 5, 0, 1, 7, -1, 0.0027472527472527475, ["cmp     byte ptr [msgid], 60h ; '`'", "lea     rax, unk_B427", "lea     rdx, unk_B420", "cmovnz  rax, rdx", "jmp     loc_43B2"], ["cmp~<TAG>,0", "lea~rax,<TAG>", "lea~rdx,<TAG>", "cmovnz~rax,rdx", "jmp~FOO"]], [7, 0, 3, 2, 1, 12, 1, 2, 6, 1, 0.03296703296703297, ["sub     rsp, 8", "push    0; s28", "mov     r9d, 0; s27", "mov     r8d, 30h ; '0'; s26", "mov     ecx, 33h ; '3'; s25", "mov     edx, 30h ; '0'; s24", "lea     rsi, aGb18030; \"GB18030\"", "mov     rdi, locale_code; s1", "call    strcaseeq4", "add     rsp, 10h", "test    eax, eax", "jz      loc_44B2"], ["sub~rsp,0", "push~0", "mov~r9d,0", "mov~r8d,0", "mov~ecx,0", "mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,locale_code", "call~FOO", "add~rsp,0", "test~eax,eax", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 4, 1, 0.04395604395604396, ["cmp     byte ptr [locale_code+3], 2Dh ; '-'", "jnz     short loc_44B2"], ["cmp~[yte ptr [locale_code+0],0", "jnz~FOO"]], [2, 0, 5, 0, 0, 4, 1, 1, 3, 1, 0.049450549450549455, ["movzx   edx, byte ptr [locale_code+2]", "and     edx, 0FFFFFFDFh", "cmp     dl, 46h ; 'F'", "jnz     short loc_44B2"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [2, 0, 6, 0, 0, 4, 1, 1, 3, 1, 0.06593406593406594, ["movzx   edx, byte ptr [locale_code+1]", "and     edx, 0FFFFFFDFh", "cmp     dl, 42h ; 'B'", "jnz     loc_44B2"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [2, 0, 13, 0, 1, 5, 1, 2, 1, 2, 0.06593406593406594, ["call    locale_charset", "movzx   edx, byte ptr [locale_code]", "and     edx, 0FFFFFFDFh", "cmp     dl, 55h ; 'U'", "jz      short loc_4447"], ["call~FOO", "movzx~edx,<TAG>", "and~edx,0", "cmp~dl,0", "jz~FOO"]], [3, 0, 14, 1, 1, 11, 0, 2, 0, 3, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbx, msgid", "mov     ebp, esi", "mov     edx, 5; category", "mov     s, msgid; msgid", "mov     edi, 0; domainname", "call    _dcgettext", "cmp     msgid, translation", "jz      short loc_43B9"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,msgid", "mov~ebp,esi", "mov~edx,0", "mov~s,msgid", "mov~edi,0", "call~FOO", "cmp~msgid,translation", "jz~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 2, 1, 0.0631868131868132, ["cmp     dl, 47h ; 'G'", "jnz     loc_44B2"], ["cmp~dl,0", "jnz~FOO"]], [1, 0, 1, 0, 0, 5, 0, 1, 6, -1, 0.0027472527472527475, ["cmp     byte ptr [msgid], 60h ; '`'", "lea     rax, unk_B42B", "lea     rdx, unk_B41C", "cmovnz  rax, rdx", "jmp     loc_43B2"], ["cmp~<TAG>,0", "lea~rax,<TAG>", "lea~rdx,<TAG>", "cmovnz~rax,rdx", "jmp~FOO"]], [7, 0, 3, 2, 1, 12, 1, 2, 5, 1, 0.027472527472527476, ["sub     rsp, 8", "push    0; s28", "mov     r9d, 0; s27", "mov     r8d, 0; s26", "mov     ecx, 0; s25", "mov     edx, 38h ; '8'; s24", "lea     rsi, aUtf8; \"UTF-8\"", "mov     rdi, locale_code; s1", "call    strcaseeq4", "add     rsp, 10h", "test    eax, eax", "jz      short loc_44B2"], ["sub~rsp,0", "push~0", "mov~r9d,0", "mov~r8d,0", "mov~ecx,0", "mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,locale_code", "call~FOO", "add~rsp,0", "test~eax,eax", "jz~FOO"]], [2, 0, 6, 0, 0, 4, 1, 1, 2, 1, 0.0521978021978022, ["movzx   edx, byte ptr [locale_code+1]", "and     edx, 0FFFFFFDFh", "cmp     dl, 54h ; 'T'", "jnz     short loc_44B2"], ["movzx~edx,[yte ptr [locale_code+0]", "and~edx,0", "cmp~dl,0", "jnz~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 1, -1, 0.0, ["add     rsp, 8", "pop     msgid", "pop     s", "retn"], ["add~rsp,0", "pop~msgid", "pop~s", "retn"]], [1, 0, 1, 0, 0, 5, 0, 1, 3, 0, 0.049450549450549455, ["cmp     ebp, 9", "lea     rax, asc_B425; \"\\\"\"", "lea     rdx, asc_B423; \"'\"", "cmovnz  rax, rdx", "jmp     loc_43B2"], ["cmp~ebp,0", "lea~rax,<TAG>", "lea~rdx,<TAG>", "cmovnz~rax,rdx", "jmp~FOO"]]], "func_feature": [4, 6, 18, 0, 15, 25, 2, 79, 0.03846, 8, 6], "succs": [[3, 14], [0, 14], [13], [2, 14], [11, 14], [4, 14], [1, 14], [9, 12], [13, 7], [14, 6], [13], [10, 14], [5, 14], [], [13]], "fname": "gettext_quote", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 266, 0, 0, 2, 0, 1, 0, 0, 0.003674280039721946, ["mov     ebp, 0", "jmp     short loc_5024"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 16, 10, 0.019860973187686197, ["cmp     byte ptr [rsi], 0", "jz      loc_5000"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 266, 1, 0, 2, 0, 0, 18, 13, 0.022258476379628314, ["add     r14, 3", "mov     [rsp+0E8h+pending_shell_escape_end], al"], ["add~r14,0", "mov~[rsp+0],al"]], [0, 0, 266, 0, 0, 3, 0, 0, 17, 14, 0.021435664633281316, ["lea     len_0, [r14+2]", "cmp     buffersize_0, len_0", "jbe     short loc_4C03"], ["lea~len_0,[r14+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 18, 14, 0.0, ["mov     rcx, [rsp+0E8h+buffer]", "mov     byte ptr [rcx+r14+2], 27h ; '''"], ["mov~rcx,[rsp+0]", "mov~[yte ptr [rcx+0],0"]], [1, 0, 266, 0, 0, 4, 2, 1, 11, 8, 0.15643353667186832, ["mov     ebx, ebp", "xor     ebx, 1", "and     bl, [rsp+0E8h+backslash_escapes]", "jz      loc_4B64"], ["mov~ebx,ebp", "xor~ebx,0", "and~bl,[rsp+0]", "jz~FOO"]], [0, 0, 266, 0, 0, 1, 0, 1, 15, 9, 0.055284437508866476, ["jmp     loc_4E00"], ["jmp~FOO"]], [2, 0, 266, 0, 1, 7, 1, 1, 10, 9, 0.09697829479358774, ["call    ___ctype_b_loc", "movzx   r12d, r12b", "mov     rax, [rax]", "movzx   ebp, word ptr [rax+r12*2]", "shr     bp, 0Eh", "and     ebp, 1", "mov     rdi, rbx"], ["call~FOO", "movzx~r12d,r12b", "mov~rax,<TAG>", "movzx~ebp,<TAG>", "shr~bp,0", "and~ebp,0", "mov~rdi,rbx"]], [1, 0, 266, 0, 0, 4, 0, 1, 8, 8, 0.026372535111363313, ["mov     rax, [rsp+0E8h+quote_string_len]", "lea     rdx, [i+rax+0]", "cmp     [rsp+0E8h+argsize], 0FFFFFFFFFFFFFFFFh", "jnz     short loc_4832"], ["mov~rax,[rsp+0]", "lea~rdx,[i+0]", "cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 266, 0, 0, 9, 2, 1, 7, 8, 0.549553128103277, ["cmp     [rsp+0E8h+quoting_style], 2", "setnz   bl", "and     bl, [rsp+0E8h+backslash_escapes]", "cmp     [rsp+0E8h+quote_string_len], 0", "setnz   byte ptr [rsp+0E8h+ps]", "movzx   eax, byte ptr [rsp+0E8h+ps]", "and     al, bl", "mov     [rsp+0E8h+is_right_quote], al", "jnz     loc_47FB"], ["cmp~[rsp+0],0", "setnz~bl", "and~bl,[rsp+0]", "cmp~[rsp+0],0", "setnz~[yte ptr [rsp+0]", "movzx~eax,[yte ptr [rsp+0]", "and~al,bl", "mov~[rsp+0],al", "jnz~FOO"]], [3, 0, 266, 0, 0, 4, 0, 1, 15, 9, 0.0034898567172648603, ["mov     ebp, 0", "mov     ebx, 0", "mov     [rsp+0E8h+c], 3Fh ; '?'", "jmp     loc_4B64"], ["mov~ebp,0", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 14, 7, 0.04914172223010356, ["mov     rsi, [rsp+0E8h+arg]", "cmp     byte ptr [rsi+i+1], 3Fh ; '?'", "jz      short loc_4A12"], ["mov~rsi,[rsp+0]", "cmp~[yte ptr [rsi+0],0", "jz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 15, 12, 0.054948692485931816, ["cmp     buffersize_0, len_0", "jbe     short loc_4C1A"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [2, 0, 266, 0, 0, 6, 2, 1, 14, 13, 0.05165744550054382, ["cmp     [rsp+0E8h+quoting_style], 2", "setz    al", "movzx   edx, [rsp+0E8h+pending_shell_escape_end]", "xor     edx, 1", "and     al, dl", "jz      short loc_4C0B"], ["cmp~[rsp+0],0", "setz~al", "movzx~edx,[rsp+0]", "xor~edx,0", "and~al,dl", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 14, 13, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax+len_0], 27h ; '''"], ["mov~rax,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 266, 0, 0, 2, 0, 0, 13, 13, 0.013264292807490424, ["cmp     buffersize_0, len_0", "jbe     short loc_4DB2"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 9, 8, 0.003333806213647326, ["cmp     rax, 1", "jbe     short loc_4832"], ["cmp~rax,0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 16, 12, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax+len_0], 5Ch ; '\\'"], ["mov~rax,[rsp+0]", "mov~<TAG>,0"]], [1, 0, 266, 0, 0, 4, 2, 1, 8, 4, 0.160568875017733, ["movzx   edx, [rsp+0E8h+elide_outer_quotes]", "xor     edx, 1", "test    al, dl", "jz      short loc_52A5"], ["movzx~edx,[rsp+0]", "xor~edx,0", "test~al,dl", "jz~FOO"]], [1, 0, 266, 0, 0, 4, 1, 1, 7, 5, 0.16603418924670166, ["cmp     [rsp+0E8h+quoting_style], 2", "setz    al", "test    len_0, len_0", "jnz     short loc_522B"], ["cmp~[rsp+0],0", "setz~al", "test~len_0,len_0", "jnz~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 8, 5, 0.00621010072350688, ["test    [rsp+0E8h+elide_outer_quotes], al", "jnz     loc_53B2"], ["test~[rsp+0],al", "jnz~FOO"]], [1, 0, 266, 1, 0, 1, 0, 0, 16, 11, 0.05577150423227881, ["add     len_0, 1"], ["add~len_0,0"]], [1, 0, 266, 0, 0, 3, 0, 1, 9, 10, 0.18792736558377074, ["mov     rbx, [rsp+0E8h+var_80]; jumptable 0000000000004CC1 default case", "cmp     rbx, 1", "jnz     short loc_4E47"], ["mov~rbx,[rsp+0]", "cmp~rbx,0", "jnz~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 15, 6, 0.0427152787629451, ["movzx   ecx, byte ptr [rsi+rax]", "lea     edx, [rcx-21h]", "cmp     dl, 1Dh; switch 30 cases", "ja      loc_51BC; jumptable 0000000000004A33 default case"], ["movzx~ecx,<TAG>", "lea~edx,[rcx-21h]+0]", "cmp~dl,0", "ja~FOO"]], [4, 0, 266, 0, 0, 8, 0, 1, 5, 9, 0.0018655128387005248, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax], 22h ; '\"'", "mov     [rsp+0E8h+backslash_escapes], 1", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_B425; \"\\\"\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 1", "jmp     short loc_45C9"], ["mov~rax,[rsp+0]", "mov~<TAG>,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 4, 10, 0.006667612427294652, ["test    buffersize_0, buffersize_0", "jz      loc_4781"], ["test~buffersize_0,buffersize_0", "jz~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 6, 6, 0.7185239040998723, ["test    bpl, bpl", "jz      loc_5214"], ["test~bpl,bpl", "jz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 14, 10, 0.5604482905376649, ["cmp     len_0, buffersize_0", "jnb     short loc_4C31"], ["cmp~len_0,buffersize_0", "jnb~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 13, 11, 0.49803754669693107, ["cmp     bl, 1", "jz      loc_4C1E"], ["cmp~bl,0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 14, 11, 0.01652716697403887, ["cmp     [rsp+0E8h+pending_shell_escape_end], 0", "jz      loc_4C1E"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 266, 1, 0, 3, 0, 1, 17, 11, 0.014895729890764646, ["add     r14, 2", "mov     [rsp+0E8h+pending_shell_escape_end], 0", "jmp     loc_4C1E"], ["add~r14,0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 17, 11, 0.013250106398070647, ["cmp     r15, len_0", "jbe     short loc_506A"], ["cmp~r15,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 4, 2, 1, 16, 10, 0.030827067669172932, ["mov     edx, ebx", "xor     edx, 1", "and     dl, r9b", "jz      loc_5162"], ["mov~edx,ebx", "xor~edx,0", "and~dl,r9b", "jz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 15, 13, 0.013250106398070647, ["cmp     buffersize_0, len_0", "jbe     short loc_4B12"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 3, 11, 0.029507731593133777, ["mov     ebx, [rsp+0E8h+quoting_style]; jumptable 000000000000459A cases 8-10", "cmp     ebx, 0Ah", "jnz     short loc_466B"], ["mov~ebx,[rsp+0]", "cmp~ebx,0", "jnz~FOO"]], [0, 0, 266, 1, 0, 5, 0, 1, 2, 10, 0.1235494396368279, ["mov     edx, eax", "lea     rcx, off_B4A0", "movsxd  rax, dword ptr [rcx+rdx*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["mov~edx,eax", "lea~rcx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 8, 0.007387572705348276, ["mov     eax, 76h ; 'v'; jumptable 0000000000004CC1 case 11", "jmp     c_escape"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 266, 1, 0, 5, 0, 1, 9, 6, 0.3594978011065399, ["movzx   eax, r12b", "lea     rsi, off_B544", "movsxd  rax, dword ptr [rsi+rax*4]", "add     rax, rsi", "jmp     rax; switch jump"], ["movzx~eax,r12b", "lea~rsi,<TAG>", "movsxd~rax,<TAG>", "add~rax,rsi", "jmp~rax"]], [1, 0, 266, 0, 0, 2, 0, 1, 14, 8, 0.0947084692864236, ["cmp     m, 1", "ja      loc_4E0F"], ["cmp~m,0", "ja~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 20, 9, 0.003716839267981274, ["mov     rdi, m", "mov     ebp, 0", "jmp     loc_5024"], ["mov~rdi,m", "mov~ebp,0", "jmp~FOO"]], [0, 0, 266, 0, 0, 4, 0, 1, 17, 9, 0.02686905944105547, ["mov     rdi, m", "mov     r14, [rsp+0E8h+len]", "mov     m, [rsp+0E8h+buffersize]", "jmp     short loc_5024"], ["mov~rdi,m", "mov~r14,[rsp+0]", "mov~m,[rsp+0]", "jmp~FOO"]], [1, 0, 266, 0, 0, 5, 0, 1, 14, 9, 0.0034331110795857572, ["mov     rdi, m", "mov     r14, [rsp+0E8h+len]", "mov     m, [rsp+0E8h+buffersize]", "mov     ebp, 0", "jmp     short loc_5024"], ["mov~rdi,m", "mov~r14,[rsp+0]", "mov~m,[rsp+0]", "mov~ebp,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 16, 9, 0.007036459072208823, ["mov     ebp, 0", "jmp     short loc_5024"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 19, 9, 0.007419492126542772, ["mov     rdi, m", "mov     ebp, 0", "jmp     short loc_5024"], ["mov~rdi,m", "mov~ebp,0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 13, 9, 0.019591431408710454, ["mov     rdi, m", "mov     r14, [rsp+0E8h+len]", "mov     m, [rsp+0E8h+buffersize]"], ["mov~rdi,m", "mov~r14,[rsp+0]", "mov~m,[rsp+0]"]], [0, 0, 9, 1, 0, 3, 0, 1, 12, 6, 0.01361895304298482, ["mov     rdx, len_0", "sub     rax, len_0", "jmp     short loc_52D7"], ["mov~rdx,len_0", "sub~rax,len_0", "jmp~FOO"]], [0, 0, 10, 0, 0, 3, 1, 1, 11, 3, 0.016952759256632144, ["movzx   ecx, byte ptr [rax]", "test    cl, cl", "jz      short loc_52E9"], ["movzx~ecx,<TAG>", "test~cl,cl", "jz~FOO"]], [2, 0, 266, 0, 0, 7, 0, 0, 10, 8, 0.0, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, [rsp+0E8h+arg]", "repne scasb", "not     rcx", "lea     rax, [rcx-1]", "mov     [rsp+0E8h+argsize], rax"], ["mov~rcx,0", "mov~eax,0", "mov~rdi,[rsp+0]", "scasb~<TAG>,", "not~rcx", "lea~rax,[rcx-1]+0]", "mov~[rsp+0],rax"]], [0, 0, 266, 0, 0, 4, 0, 1, 20, 12, 0.05084409136047666, ["mov     [rsp+0E8h+pending_shell_escape_end], r9b", "mov     [rsp+0E8h+c], al", "mov     ebx, ecx", "jmp     store_c"], ["mov~[rsp+0],r9b", "mov~[rsp+0],al", "mov~ebx,ecx", "jmp~FOO"]], [3, 0, 266, 2, 0, 6, 1, 0, 19, 10, 0.06083132359199886, ["add     r14, 3", "and     eax, 7", "add     eax, 30h ; '0'", "lea     r8, [i+1]", "cmp     ilim, r8", "jbe     short loc_5152"], ["add~r14,0", "and~eax,0", "add~eax,0", "lea~r8,[i+0]", "cmp~ilim,r8", "jbe~FOO"]], [2, 0, 266, 0, 0, 3, 0, 1, 4, 10, 0.030330543339480775, ["mov     r14d, 0", "cmp     [rsp+0E8h+elide_outer_quotes], 0", "jz      short loc_4693"], ["mov~r14d,0", "cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 266, 0, 2, 9, 0, 3, 4, 11, 0.0, ["mov     esi, ebx; s", "lea     rdi, asc_B43D; \"`\"", "call    gettext_quote", "mov     [rsp+0E8h+quote_string_1], rax", "mov     esi, ebx; s", "lea     rdi, asc_B423; \"'\"", "call    gettext_quote", "mov     [rsp+0E8h+quote_string_0], rax", "jmp     short loc_4628"], ["mov~esi,ebx", "lea~rdi,<TAG>", "call~FOO", "mov~[rsp+0],rax", "mov~esi,ebx", "lea~rdi,<TAG>", "call~FOO", "mov~[rsp+0],rax", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 14, 12, 0.1133068520357497, ["test    dl, dl", "jz      short loc_5045"], ["test~dl,dl", "jz~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 13, 6, 0.17916016456234932, ["test    cl, cl", "jz      short loc_5033"], ["test~cl,cl", "jz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 1, 9, 7, 0.027606752730883814, ["cmp     rdx, [rsp+0E8h+argsize]", "ja      short loc_4868"], ["cmp~rdx,[rsp+0]", "ja~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 17, 4, 0.0331394524045964, ["cmp     [rsp+0E8h+elide_outer_quotes], 0; jumptable 0000000000004A33 cases 0,6-8,12,14,27-29", "jnz     loc_53BA"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 266, 1, 0, 5, 0, 1, 16, 5, 0.03627464888636686, ["movzx   edx, dl", "lea     rsi, off_B4CC", "movsxd  rdx, dword ptr [rsi+rdx*4]", "add     rdx, rsi", "jmp     rdx; switch jump"], ["movzx~edx,dl", "lea~rsi,<TAG>", "movsxd~rdx,<TAG>", "add~rdx,rsi", "jmp~rdx"]], [1, 0, 266, 0, 0, 1, 0, 0, 16, 13, 0.0, ["mov     byte ptr [r10+len_0], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 0, 266, 0, 0, 2, 0, 0, 15, 13, 0.006653426017874876, ["cmp     r15, len_0", "jbe     short loc_5041"], ["cmp~r15,len_0", "jbe~FOO"]], [1, 0, 266, 1, 0, 5, 1, 0, 15, 9, 0.5612711022840119, ["add     len_0, 1", "test    bpl, bpl", "movzx   eax, [rsp+0E8h+all_c_and_shell_quote_compat]", "cmovz   eax, ebp", "mov     [rsp+0E8h+all_c_and_shell_quote_compat], al"], ["add~len_0,0", "test~bpl,bpl", "movzx~eax,[rsp+0]", "cmovz~eax,ebp", "mov~[rsp+0],al"]], [0, 0, 266, 0, 0, 3, 0, 0, 15, 10, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "movzx   ecx, [rsp+0E8h+c]", "mov     [rax+len_0], cl"], ["mov~rax,[rsp+0]", "movzx~ecx,[rsp+0]", "mov~<TAG>,cl"]], [1, 0, 266, 1, 0, 1, 0, 0, 16, 12, 0.007476237764221875, ["add     len_0, 1"], ["add~len_0,0"]], [2, 0, 266, 1, 0, 13, 2, 1, 12, 7, 0.12964959568733148, ["add     m, i", "mov     ebx, 0", "mov     ecx, ebp", "xor     ecx, 1", "and     cl, [rsp+0E8h+backslash_escapes]", "mov     esi, ecx", "movzx   r12d, [rsp+0E8h+elide_outer_quotes]", "movzx   r9d, [rsp+0E8h+pending_shell_escape_end]", "movzx   eax, [rsp+0E8h+c]", "movzx   edx, [rsp+0E8h+is_right_quote]", "mov     r10, [rsp+0E8h+buffer]", "mov     r11, [rsp+0E8h+arg]", "jmp     loc_5097"], ["add~m,i", "mov~ebx,0", "mov~ecx,ebp", "xor~ecx,0", "and~cl,[rsp+0]", "mov~esi,ecx", "movzx~r12d,[rsp+0]", "movzx~r9d,[rsp+0]", "movzx~eax,[rsp+0]", "movzx~edx,[rsp+0]", "mov~r10,[rsp+0]", "mov~r11,[rsp+0]", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 3, 0.12524471556249112, ["cmp     [rsp+0E8h+all_c_and_shell_quote_compat], 0", "jnz     short loc_5262"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 9, 4, 0.12499645339764505, ["cmp     [rsp+0E8h+encountered_single_quote], 0", "jz      short loc_52A5"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 266, 1, 0, 1, 0, 0, 12, 8, 0.5780500780252518, ["add     i, 1"], ["add~i,0"]], [1, 0, 266, 0, 0, 2, 1, 1, 11, 9, 0.016782522343594834, ["test    byte ptr [rsp+0E8h+flags], 1", "jnz     loc_4C44"], ["test~[yte ptr [rsp+0],0", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 6, 0.032841537806781104, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 0000000000004CC1 case 92", "jz      short loc_4ADB"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 18, 13, 0.02983401900978862, ["mov     [rsp+0E8h+c], cl", "cmp     buffersize_0, len_0", "jbe     short loc_4A53"], ["mov~[rsp+0],cl", "cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 1, 0, 4, 0, 0, 18, 10, 0.0136898850900837, ["add     m, 1", "lea     rdx, [i+m+0]", "cmp     rcx, rdx", "jbe     loc_5007"], ["add~m,0", "lea~rdx,[i+0]", "cmp~rcx,rdx", "jbe~FOO"]], [3, 0, 266, 0, 0, 4, 0, 1, 14, 9, 0.0034614838984253085, ["mov     ebp, 0", "mov     ebx, 0", "mov     [rsp+0E8h+c], 3Fh ; '?'", "jmp     loc_4B64"], ["mov~ebp,0", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 13, 8, 0.05553979287842247, ["lea     rax, [i+2]", "cmp     rax, [rsp+0E8h+argsize]", "jnb     loc_51A8"], ["lea~rax,[i+0]", "cmp~rax,[rsp+0]", "jnb~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 15, 11, 0.11495247552844369, ["lea     r8, [i+1]", "cmp     r8, ilim", "jnb     loc_5144"], ["lea~r8,[i+0]", "cmp~r8,ilim", "jnb~FOO"]], [2, 1, 3, 2, 1, 14, 0, 2, 11, 2, 6.383884238899135e-05, ["sub     rsp, 8", "push    [rsp+0F0h+quote_string_0]; right_quote", "push    [rsp+0F8h+quote_string_1]; left_quote", "push    [rsp+100h+var_A8]; quote_these_too", "mov     r9d, [rsp+108h+flags]; flags", "mov     r8d, 5; quoting_style", "mov     rcx, [rsp+108h+argsize]; argsize", "mov     rdx, [rsp+108h+arg]; arg", "mov     rsi, [rsp+108h+orig_buffersize]; buffersize", "mov     rdi, [rsp+108h+buffer]; buffer", "call    quotearg_buffer_restyled", "mov     buffersize_0, rax", "add     rsp, 20h", "jmp     loc_537A"], ["sub~rsp,0", "push~[rsp+0]", "push~[rsp+0]", "push~[rsp+0]", "mov~r9d,[rsp+0]", "mov~r8d,0", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "mov~rdi,[rsp+0]", "call~FOO", "mov~buffersize_0,rax", "add~rsp,<STR>", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 19, 13, 0.0, ["mov     rsi, [rsp+0E8h+buffer]", "mov     byte ptr [rsi+len_0], 3Fh ; '?'"], ["mov~rsi,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 266, 0, 1, 7, 1, 2, 10, 6, 0.010341892467016597, ["mov     rax, [rsp+0E8h+arg]", "lea     rdi, [rax+i]; s1", "mov     rdx, [rsp+0E8h+quote_string_len]; n", "mov     rsi, [rsp+0E8h+quote_string]; s2", "call    _memcmp", "test    eax, eax", "jnz     short loc_4872"], ["mov~rax,[rsp+0]", "lea~rdi,<TAG>", "mov~rdx,[rsp+0]", "mov~rsi,[rsp+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 266, 0, 0, 6, 2, 1, 11, 4, 0.12223010356078876, ["test    buffersize_0, buffersize_0", "setz    cl", "cmp     [rsp+0E8h+orig_buffersize], 0", "setnz   al", "test    cl, al", "jz      short loc_52A5"], ["test~buffersize_0,buffersize_0", "setz~cl", "cmp~[rsp+0],0", "setnz~al", "test~cl,al", "jz~FOO"]], [1, 0, 266, 0, 0, 5, 0, 1, 5, 7, 0.7177010923535253, ["mov     rax, [rsp+0E8h+argsize]", "cmp     rax, i", "setnz   bpl", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      loc_5201"], ["mov~rax,[rsp+0]", "cmp~rax,i", "setnz~bpl", "cmp~rax,0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 4, 8, 0.1354802099588594, ["mov     r13d, 0", "jmp     loc_4C48"], ["mov~r13d,0", "jmp~FOO"]], [2, 0, 266, 0, 0, 3, 0, 1, 10, 12, 0.0880124840402894, ["mov     qword ptr [rsp+0E8h+mbstate.__count], 0", "cmp     [rsp+0E8h+argsize], 0FFFFFFFFFFFFFFFFh", "jz      short loc_4E92"], ["mov~[word ptr [rsp+0],0", "cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 11, 5, 0.005589445311391686, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jz      loc_4C8F"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 11, 8, 0.0, ["mov     rax, [rsp+0E8h+arg]", "cmp     byte ptr [rax+1], 0", "setnz   al", "jmp     short loc_4CE7"], ["mov~rax,[rsp+0]", "cmp~[yte ptr [rax+0],0", "setnz~al", "jmp~FOO"]], [2, 0, 266, 0, 0, 5, 0, 1, 10, 8, 0.009958859412682649, ["mov     rcx, [rsp+0E8h+argsize]; jumptable 0000000000004CC1 cases 123,125", "cmp     rcx, 1", "setnz   al", "cmp     rcx, 0FFFFFFFFFFFFFFFFh", "jz      short loc_4D03"], ["mov~rcx,[rsp+0]", "cmp~rcx,0", "setnz~al", "cmp~rcx,0", "jz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 1, 12, 12, 0.1223152220173074, ["mov     buffersize_0, [rsp+0E8h+orig_buffersize]", "jmp     process_input"], ["mov~buffersize_0,[rsp+0]", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 16, 17, 0.019790041140587317, ["cmp     r15, len_0", "jbe     short loc_50C2"], ["cmp~r15,len_0", "jbe~FOO"]], [2, 0, 266, 0, 0, 6, 2, 1, 15, 14, 0.05507164136756987, ["cmp     [rsp+0E8h+quoting_style], 2", "setz    bl", "mov     r8d, r9d", "xor     r8d, 1", "and     r8b, bl", "jz      short loc_50E7"], ["cmp~[rsp+0],0", "setz~bl", "mov~r8d,r9d", "xor~r8d,0", "and~r8b,bl", "jz~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 18, 11, 0.0, ["mov     byte ptr [r10+len_0], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 6, 0, 0, 2, 0, 1, 12, 4, 0.00017023691303731024, ["mov     len_0, buffersize_0", "jmp     short force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 1, 1, 11, 5, 0.008426727195346857, ["movzx   eax, [rsp+0E8h+elide_outer_quotes]", "test    al, al", "jnz     loc_530C"], ["movzx~eax,[rsp+0]", "test~al,al", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 20, 12, 0.0, ["mov     rdi, [rsp+0E8h+buffer]", "mov     byte ptr [rdi+r14+1], 22h ; '\"'"], ["mov~rdi,[rsp+0]", "mov~[yte ptr [rdi+0],0"]], [0, 0, 266, 0, 0, 3, 0, 0, 19, 12, 0.03065683075613562, ["lea     rdx, [len_0+1]", "cmp     buffersize_0, len_0", "jbe     short loc_4A67"], ["lea~rdx,[len_0+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 12, 4, 0.0005107107391119308, ["mov     len_0, buffersize_0", "jmp     force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [2, 0, 266, 0, 0, 3, 0, 1, 13, 11, 0.016896013618953043, ["mov     eax, 0", "cmp     [rsp+0E8h+orig_buffersize], 0", "jnz     short loc_4DA3"], ["mov~eax,0", "cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 12, 12, 0.03302596112923819, ["test    buffersize_0, buffersize_0", "jz      short loc_4DA3"], ["test~buffersize_0,buffersize_0", "jz~FOO"]], [4, 0, 266, 1, 0, 12, 0, 1, 5, 9, 0.033210384451695274, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, [rsp+0E8h+quote_string_0]", "repne scasb", "mov     rax, rcx", "not     rax", "sub     rax, 1", "mov     [rsp+0E8h+quote_string_len], rax", "mov     rdi, [rsp+0E8h+quote_string_0]", "mov     [rsp+0E8h+quote_string], rdi", "mov     [rsp+0E8h+backslash_escapes], 1", "jmp     loc_45C9"], ["mov~rcx,0", "mov~eax,0", "mov~rdi,[rsp+0]", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "sub~rax,0", "mov~[rsp+0],rax", "mov~rdi,[rsp+0]", "mov~[rsp+0],rdi", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 1, 0, 4, 1, 1, 8, 10, 0.011193077032203149, ["add     len_0, 1", "movzx   eax, byte ptr [rdx+len_0]", "test    al, al", "jz      short loc_4635"], ["add~len_0,0", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 6, 10, 0.003688466449141722, ["mov     r14d, 0", "jmp     loc_4635"], ["mov~r14d,0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 18, 11, 0.06000851184565186, ["lea     r8, [r14+2]", "cmp     r15, len_0", "jbe     short loc_5127"], ["lea~r8,[r14+0]", "cmp~r15,len_0", "jbe~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 17, 12, 0.059185700099304864, ["lea     r8, [len_0+1]", "cmp     r15, len_0", "jbe     short loc_510A"], ["lea~r8,[len_0+0]", "cmp~r15,len_0", "jbe~FOO"]], [2, 0, 266, 1, 0, 4, 0, 0, 18, 12, 0.0, ["mov     r8d, eax", "shr     r8b, 6", "add     r8d, 30h ; '0'", "mov     [r10+r14+1], r8b"], ["mov~r8d,eax", "shr~r8b,0", "add~r8d,0", "mov~[r10+0],r8b"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 8, 0.014328273513973613, ["mov     [rsp+0E8h+is_right_quote], 0", "jmp     loc_4C8F"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 20, 11, 0.03147964250248262, ["lea     len_0, [r14+2]", "cmp     buffersize_0, len_0", "jbe     short loc_4A7B"], ["lea~len_0,[r14+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 18, 10, 0.014072918144417646, ["lea     rdx, [len_0+1]", "cmp     r15, len_0", "jbe     short loc_5079"], ["lea~rdx,[len_0+0]", "cmp~r15,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 19, 10, 0.0, ["mov     byte ptr [r10+r14+1], 27h ; '''"], ["mov~[yte ptr [r10+0],0"]], [1, 0, 266, 0, 0, 2, 0, 0, 21, 11, 0.0, ["mov     rsi, [rsp+0E8h+buffer]", "mov     byte ptr [rsi+r14+2], 22h ; '\"'"], ["mov~rsi,[rsp+0]", "mov~[yte ptr [rsi+0],0"]], [1, 0, 266, 0, 0, 2, 0, 1, 11, 8, 0.0018158604057313093, ["mov     [rsp+0E8h+is_right_quote], 0", "jmp     loc_4C8F"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 12, 4, 0.00017023691303731024, ["mov     len_0, buffersize_0", "jmp     short force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 1, 1, 11, 5, 0.019633990636969783, ["movzx   ebx, [rsp+0E8h+elide_outer_quotes]", "test    bl, bl", "jnz     loc_5311"], ["movzx~ebx,[rsp+0]", "test~bl,bl", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 7, 0.0032959757885279235, ["mov     eax, 72h ; 'r'; jumptable 0000000000004CC1 case 13", "jmp     c_and_shell_escape"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 21, 10, 0.03230245424882962, ["lea     len_0, [r14+3]", "cmp     buffersize_0, len_0", "jbe     short loc_4A8F"], ["lea~len_0,[r14+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 11, 0, 0, 2, 1, 1, 10, 3, 0.02025819265143992, ["test    dl, dl", "jz      short loc_52E9"], ["test~dl,dl", "jz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 18, 8, 0.04451695275925663, ["cmp     r15, len_0", "jbe     short loc_508E"], ["cmp~r15,len_0", "jbe~FOO"]], [0, 0, 266, 0, 0, 3, 0, 1, 20, 9, 0.007050645481628599, ["mov     ebx, esi", "mov     i, r8", "jmp     loc_5085"], ["mov~ebx,esi", "mov~i,r8", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 0, 1, 17, 9, 0.014640374521208682, ["mov     i, r8", "jmp     loc_5085"], ["mov~i,r8", "jmp~FOO"]], [1, 0, 266, 1, 0, 4, 0, 0, 19, 9, 0.014895729890764646, ["add     r14, 2", "mov     edx, esi", "mov     i, r8", "mov     r9d, esi"], ["add~r14,0", "mov~edx,esi", "mov~i,r8", "mov~r9d,esi"]], [1, 0, 266, 0, 0, 2, 0, 0, 22, 10, 0.0, ["mov     rdi, [rsp+0E8h+buffer]", "mov     byte ptr [rdi+r14+3], 3Fh ; '?'"], ["mov~rdi,[rsp+0]", "mov~[yte ptr [rdi+0],0"]], [0, 0, 266, 0, 0, 1, 0, 0, 19, 8, 0.0, ["mov     [r10+len_0], al"], ["mov~<TAG>,al"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 8, 0.007387572705348276, ["mov     eax, 62h ; 'b'; jumptable 0000000000004CC1 case 8", "jmp     c_escape"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 9, 0, 1, 11, 11, 0.0888352957866364, ["mov     esi, 0", "lea     rax, [rsp+0E8h+mbstate]", "mov     [rsp+0E8h+ps], rax", "lea     rax, [rsp+0E8h+w]", "mov     [rsp+0E8h+pwc], rax", "mov     [rsp+0E8h+len], len_0", "mov     [rsp+0E8h+buffersize], buffersize_0", "mov     buffersize_0, rsi", "jmp     loc_4F5D"], ["mov~esi,0", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~[rsp+0],len_0", "mov~[rsp+0],buffersize_0", "mov~buffersize_0,rsi", "jmp~FOO"]], [3, 0, 266, 1, 0, 9, 0, 1, 11, 12, 0.0, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, [rsp+0E8h+arg]", "repne scasb", "mov     rax, rcx", "not     rax", "sub     rax, 1", "mov     [rsp+0E8h+argsize], rax", "jmp     short loc_4E5B"], ["mov~rcx,0", "mov~eax,0", "mov~rdi,[rsp+0]", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "sub~rax,0", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 266, 1, 0, 2, 0, 0, 19, 7, 0.045339764505603626, ["add     len_0, 1", "movzx   eax, byte ptr [r11+i]"], ["add~len_0,0", "movzx~eax,<TAG>"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 6, 0.08733153638814016, ["cmp     [rsp+0E8h+backslash_escapes], 0; jumptable 0000000000004CC1 case 0", "jz      loc_497E"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 4, 0, 0, 4, 0, 0, 11, 3, 0.0, ["cmp     [rsp+0E8h+backslash_escapes], 0", "mov     eax, 4", "cmovz   eax, edi", "mov     [rsp+0E8h+quoting_style], eax"], ["cmp~[rsp+0],0", "mov~eax,0", "cmovz~eax,edi", "mov~[rsp+0],eax"]], [1, 0, 5, 0, 0, 3, 0, 1, 10, 3, 0.014321180309263725, ["mov     edi, [rsp+0E8h+quoting_style]", "cmp     edi, 2", "jnz     short loc_533D"], ["mov~edi,[rsp+0]", "cmp~edi,0", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 12, 4, 0.00017023691303731024, ["mov     len_0, buffersize_0", "jmp     short force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 11, 5, 0.03614697120158888, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jnz     loc_5316"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 9, 0.004184990778833877, ["mov     ebx, 0; jumptable 0000000000004CC1 cases 37,43-58,65-90,93,95,97-122", "jmp     loc_4B64"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 266, 0, 0, 4, 1, 1, 5, 11, 0.016541353383458645, ["mov     rdx, [rsp+0E8h+quote_string_1]", "movzx   eax, byte ptr [rdx]", "test    al, al", "jz      short loc_46BE"], ["mov~rdx,[rsp+0]", "movzx~eax,<TAG>", "test~al,al", "jz~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 14, 5, 0.06291672577670591, ["test    r12b, r12b", "jnz     loc_53A2"], ["test~r12b,r12b", "jnz~FOO"]], [0, 0, 266, 2, 0, 5, 0, 1, 18, 7, 0.013519648177046388, ["mov     bytes, [rsp+0E8h+arg]", "lea     rdx, [rax+rbx+1]", "add     rax, bytes", "add     rbx, rax", "jmp     loc_4F19"], ["mov~bytes,[rsp+0]", "lea~rdx,[rax+0]", "add~rax,bytes", "add~rbx,rax", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 17, 8, 0.016711590296495955, ["cmp     bytes, 1", "jbe     short loc_4F36"], ["cmp~bytes,0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 11, 5, 0.06761242729465172, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jnz     loc_52FE"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 14, 4, 0.0058909065115619235, ["mov     len_0, buffersize_0", "jmp     force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 13, 5, 0.06049912517141912, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jnz     loc_53AA"], ["cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 0, 21, 4, 0.0006383884238899134, ["mov     r14, [rsp+0E8h+buffersize]; jumptable 0000000000004F34 cases 0,1,3,5,33"], ["mov~r14,[rsp+0]"]], [0, 0, 266, 1, 0, 5, 0, 1, 20, 5, 0.00390126259043836, ["movzx   eax, al", "lea     rdi, off_B740", "movsxd  rax, dword ptr [rdi+rax*4]", "add     rax, rdi", "jmp     rax; switch jump"], ["movzx~eax,al", "lea~rdi,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdi", "jmp~rax"]], [0, 0, 266, 0, 0, 2, 0, 1, 6, 12, 0.009916300184423322, ["mov     rcx, [rsp+0E8h+buffer]", "jmp     short loc_46B3"], ["mov~rcx,[rsp+0]", "jmp~FOO"]], [3, 0, 266, 0, 0, 4, 0, 1, 13, 12, 0.006681798836714427, ["mov     ebp, 0", "mov     ebx, 0", "mov     [rsp+0E8h+c], 5Ch ; '\\'", "jmp     store_c"], ["mov~ebp,0", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 12, 9, 0.006667612427294652, ["cmp     byte ptr [rsp+0E8h+ps], 0", "jnz     loc_51ED"], ["cmp~[yte ptr [rsp+0],0", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 8, 0.007387572705348276, ["mov     eax, 66h ; 'f'; jumptable 0000000000004CC1 case 12", "jmp     c_escape"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 266, 1, 0, 7, 0, 1, 8, 7, 0.5493828911902398, ["mov     rax, [rsp+0E8h+arg]", "add     rax, i", "mov     [rsp+0E8h+var_B0], rax", "movzx   r12d, byte ptr [rax]", "mov     [rsp+0E8h+c], r12b", "cmp     r12b, 7Eh ; '~'; switch 127 cases", "ja      loc_4DDA; jumptable 0000000000004CC1 default case"], ["mov~rax,[rsp+0]", "add~rax,i", "mov~[rsp+0],rax", "movzx~r12d,<TAG>", "mov~[rsp+0],r12b", "cmp~r12b,0", "ja~FOO"]], [0, 0, 266, 0, 0, 3, 1, 1, 11, 9, 0.010270960419917718, ["movzx   esi, [rsp+0E8h+elide_outer_quotes]", "test    [rsp+0E8h+backslash_escapes], sil", "jz      short loc_4AD4"], ["movzx~esi,[rsp+0]", "test~[rsp+0],sil", "jz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 7, 11, 0.01037026528585615, ["cmp     buffersize_0, len_0", "jbe     short loc_46A6"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 266, 0, 0, 2, 0, 1, 8, 11, 0.0, ["mov     [rcx+len_0], al", "jmp     short loc_46A6"], ["mov~<TAG>,al", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 17, 16, 0.020612852886934315, ["lea     pending_shell_escape_end_0, [len_0+1]", "cmp     r15, len_0", "jbe     short loc_50D1"], ["lea~pending_shell_escape_end_0,[len_0+0]", "cmp~r15,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 17, 17, 0.0, ["mov     byte ptr [r10+len_0], 27h ; '''"], ["mov~<TAG>,0"]], [0, 0, 12, 0, 0, 6, 1, 1, 9, 3, 0.03311107958575684, ["mov     rax, buffersize_0", "mov     buffersize_0, len_0", "mov     len_0, buffersize_0", "mov     buffersize_0, [rsp+0E8h+quote_string]", "test    rax, rax", "jz      short loc_52E9"], ["mov~rax,buffersize_0", "mov~buffersize_0,len_0", "mov~len_0,buffersize_0", "mov~buffersize_0,[rsp+0]", "test~rax,rax", "jz~FOO"]], [2, 0, 266, 0, 0, 7, 2, 1, 12, 12, 0.06449141722230103, ["cmp     [rsp+0E8h+quoting_style], 2", "setz    al", "movzx   ecx, [rsp+0E8h+pending_shell_escape_end]", "xor     ecx, 1", "mov     rdx, len_0", "and     al, cl", "jz      short loc_48FC"], ["cmp~[rsp+0],0", "setz~al", "movzx~ecx,[rsp+0]", "xor~ecx,0", "mov~rdx,len_0", "and~al,cl", "jz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 13, 15, 0.019790041140587317, ["cmp     buffersize_0, r14", "jbe     short loc_48CC"], ["cmp~buffersize_0,r14", "jbe~FOO"]], [3, 0, 266, 0, 0, 4, 0, 1, 16, 9, 0.007050645481628599, ["mov     ebp, 0; jumptable 0000000000004A33 default case", "mov     ebx, 0", "mov     [rsp+0E8h+c], 3Fh ; '?'", "jmp     loc_4B64"], ["mov~ebp,0", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [3, 1, 3, 2, 1, 14, 1, 1, 11, 2, 0.00776705915732728, ["sub     rsp, 8", "push    [rsp+0F0h+quote_string_0]; right_quote", "push    [rsp+0F8h+quote_string_1]; left_quote", "push    0; quote_these_too", "mov     r9d, [rsp+108h+flags]", "and     r9d, 0FFFFFFFDh; flags", "mov     r8d, [rsp+108h+quoting_style]; quoting_style", "mov     rcx, [rsp+108h+argsize]; argsize", "mov     rdx, [rsp+108h+arg]; arg", "mov     rsi, buffersize_0; buffersize", "mov     rdi, [rsp+108h+buffer]; buffer", "call    quotearg_buffer_restyled", "mov     r15, rax", "add     rsp, 20h"], ["sub~rsp,0", "push~[rsp+0]", "push~[rsp+0]", "push~0", "mov~r9d,[rsp+0]", "and~r9d,0", "mov~r8d,[rsp+0]", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,buffersize_0", "mov~rdi,[rsp+0]", "call~FOO", "mov~r15,rax", "add~rsp,<STR>"]], [0, 0, 4, 0, 0, 2, 0, 1, 18, 3, 0.00035466023549439636, ["mov     len_0, buffersize_0", "jmp     loc_533D"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 13, 4, 0.00042559228259327563, ["mov     len_0, buffersize_0", "jmp     force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 12, 5, 0.003688466449141722, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jnz     loc_4CC3"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 14, 15, 0.0, ["mov     rcx, [rsp+0E8h+buffer]", "mov     byte ptr [rcx+r14], 27h ; '''"], ["mov~rcx,[rsp+0]", "mov~<TAG>,0"]], [1, 0, 266, 0, 0, 2, 0, 1, 16, 9, 0.019889346006525747, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jz      short loc_4F36"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 15, 10, 0.029621222868491982, ["cmp     [rsp+0E8h+quoting_style], 2", "jnz     short loc_4F36"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 18, 16, 0.0, ["mov     byte ptr [r10+r14+1], 24h ; '$'"], ["mov~[yte ptr [r10+0],0"]], [3, 0, 266, 1, 0, 5, 1, 0, 19, 11, 0.0, ["mov     r8d, eax", "shr     r8b, 3", "and     r8d, 7", "add     r8d, 30h ; '0'", "mov     [r10+r14+2], r8b"], ["mov~r8d,eax", "shr~r8b,0", "and~r8d,0", "add~r8d,0", "mov~[r10+0],r8b"]], [1, 0, 266, 0, 0, 2, 0, 1, 3, 10, 0.006667612427294652, ["cmp     [rsp+0E8h+elide_outer_quotes], 0; jumptable 000000000000459A case 4", "jnz     loc_47A6"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 8, 0.007387572705348276, ["mov     eax, 61h ; 'a'; jumptable 0000000000004CC1 case 7", "jmp     c_escape"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 14, 14, 0.020612852886934315, ["lea     len_0, [r14+1]", "cmp     buffersize_0, len_0", "jbe     short loc_48E0"], ["lea~len_0,[r14+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 4, 11, 4.255922825932756e-05, ["mov     [rsp+0E8h+backslash_escapes], 1"], ["mov~[rsp+0],0"]], [0, 0, 266, 0, 0, 8, 0, 0, 15, 10, 0.02983401900978862, ["mov     rsi, r14", "mov     bytes, m", "mov     rdi, m", "mov     r14, [rsp+0E8h+len]", "mov     m, [rsp+0E8h+buffersize]", "mov     rcx, [rsp+0E8h+argsize]", "cmp     rbx, rcx", "jnb     loc_4FF9"], ["mov~rsi,r14", "mov~bytes,m", "mov~rdi,m", "mov~r14,[rsp+0]", "mov~m,[rsp+0]", "mov~rcx,[rsp+0]", "cmp~rbx,rcx", "jnb~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 14, 11, 0.062391828628174203, ["cmp     bytes, 0FFFFFFFFFFFFFFFEh", "jz      loc_4EB6"], ["cmp~bytes,0", "jz~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 18, 15, 0.021435664633281316, ["lea     len_0, [r14+2]", "cmp     r15, len_0", "jbe     short loc_50E0"], ["lea~len_0,[r14+0]", "cmp~r15,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 12, 8, 0.001063980706483189, ["mov     eax, 5Ch ; '\\'", "jmp     short c_escape"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 15, 14, 0.0, ["mov     rsi, [rsp+0E8h+buffer]", "mov     byte ptr [rsi+r14+1], 24h ; '$'"], ["mov~rsi,[rsp+0]", "mov~[yte ptr [rsi+0],0"]], [0, 0, 266, 0, 0, 2, 0, 0, 15, 16, 0.019790041140587317, ["cmp     buffersize_0, len_0", "jbe     short loc_4BDB"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 4, 10, 0.010384451695275925, ["test    buffersize_0, buffersize_0", "jz      loc_47CE"], ["test~buffersize_0,buffersize_0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 3, 10, 0.013221733579231097, ["cmp     [rsp+0E8h+elide_outer_quotes], 0; jumptable 000000000000459A case 2", "jz      short loc_46D9"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 9, 0, 0, 2, 0, 0, 13, 5, 0.010341892467016597, ["cmp     buffersize_0, len_0", "jbe     short loc_52CB"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 9, 1, 0, 4, 1, 1, 14, 4, 0.003674280039721946, ["add     len_0, 1", "movzx   ecx, byte ptr [rax+len_0]", "test    cl, cl", "jz      short loc_52E6"], ["add~len_0,0", "movzx~ecx,<TAG>", "test~cl,cl", "jz~FOO"]], [0, 0, 266, 0, 0, 1, 0, 0, 17, 11, 0.013250106398070647, ["mov     rsi, [rsp+0E8h+var_B0]"], ["mov~rsi,[rsp+0]"]], [0, 0, 266, 0, 0, 3, 0, 0, 15, 13, 0.021435664633281316, ["lea     len_0, [r14+2]", "cmp     buffersize_0, len_0", "jbe     short loc_48F4"], ["lea~len_0,[r14+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 11, 7, 0.010781671159029648, ["test    al, al", "jnz     loc_51D0"], ["test~al,al", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 12, 12, 0.016512980564619095, ["mov     ebp, ebx", "mov     [rsp+0E8h+c], 5Ch ; '\\'"], ["mov~ebp,ebx", "mov~[rsp+0],0"]], [1, 0, 266, 0, 0, 1, 0, 0, 17, 13, 0.0, ["mov     byte ptr [r10+len_0], 5Ch ; '\\'"], ["mov~<TAG>,0"]], [0, 0, 266, 0, 0, 2, 0, 0, 16, 13, 0.058362888352957866, ["cmp     r15, len_0", "jbe     short loc_50F1"], ["cmp~r15,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 16, 13, 0.0, ["mov     rcx, [rsp+0E8h+buffer]", "mov     byte ptr [rcx+r14+2], 27h ; '''"], ["mov~rcx,[rsp+0]", "mov~[yte ptr [rcx+0],0"]], [1, 0, 266, 0, 0, 2, 0, 1, 13, 6, 0.34383127630396776, ["cmp     [rsp+0E8h+is_right_quote], 0", "jz      store_c"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 266, 0, 0, 3, 0, 1, 16, 12, 0.08118882110937717, ["mov     [rsp+0E8h+pending_shell_escape_end], r9b", "mov     [rsp+0E8h+c], al", "jmp     store_c"], ["mov~[rsp+0],r9b", "mov~[rsp+0],al", "jmp~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 6, 7, 0.0, ["mov     argsize_0, [rsp+0E8h+arg]", "cmp     byte ptr [rax+i], 0", "setnz   bpl", "jmp     loc_4C5E"], ["mov~argsize_0,[rsp+0]", "cmp~<TAG>,0", "setnz~bpl", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 16, 12, 0.022258476379628314, ["lea     len_0, [r14+3]", "mov     [rsp+0E8h+pending_shell_escape_end], al"], ["lea~len_0,[r14+0]", "mov~[rsp+0],al"]], [1, 0, 3, 0, 0, 3, 0, 1, 11, 2, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax+len_0], 0", "jmp     short loc_537A"], ["mov~rax,[rsp+0]", "mov~<TAG>,0", "jmp~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 10, 2, 0.006667612427294652, ["cmp     buffersize_0, len_0", "jbe     loc_537A"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [2, 0, 266, 0, 0, 3, 0, 1, 11, 9, 0.0018158604057313093, ["mov     ebp, 0", "mov     ebx, 0", "jmp     loc_4B64"], ["mov~ebp,0", "mov~ebx,0", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 1, 1, 10, 6, 0.003674280039721946, ["test    i, i; jumptable 0000000000004CC1 cases 35,126", "jz      short loc_4D16; jumptable 0000000000004CC1 case 32"], ["test~i,i", "jz~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 13, 11, 0.06778266420768903, ["cmp     buffersize_0, len_0", "jbe     short loc_490A"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 19, 10, 0.003333806213647326, ["cmp     byte ptr [rsi+m], 0", "jnz     short loc_4EEB"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 14, 11, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax+len_0], 5Ch ; '\\'"], ["mov~rax,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 6, 0, 0, 4, 0, 1, 12, 4, 0.00017023691303731024, ["mov     len_0, buffersize_0", "movzx   eax, [rsp+0E8h+elide_outer_quotes]", "mov     [rsp+0E8h+backslash_escapes], al", "jmp     short force_outer_quoting_style"], ["mov~len_0,buffersize_0", "movzx~eax,[rsp+0]", "mov~[rsp+0],al", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 16, 13, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax+len_0], 27h ; '''"], ["mov~rax,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 266, 0, 0, 3, 1, 1, 14, 10, 0.06860547595403603, ["lea     r14, [len_0+1]", "test    bl, bl", "jz      loc_5174"], ["lea~r14,[len_0+0]", "test~bl,bl", "jz~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 10, 6, 0.0, ["mov     ebp, 0; jumptable 0000000000004CC1 cases 33,34,36,38,40-42,59-62,91,94,96,124"], ["mov~ebp,0"]], [5, 0, 266, 0, 0, 9, 0, 1, 5, 9, 0.0037239324726911615, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax], 27h ; '''", "mov     [rsp+0E8h+elide_outer_quotes], 0", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_B423; \"'\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 1", "mov     [rsp+0E8h+quoting_style], 2", "jmp     loc_45C9"], ["mov~rax,[rsp+0]", "mov~<TAG>,0", "mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 1, 0, 3, 0, 1, 20, 7, 0.010895162434387855, ["add     rdx, 1; jumptable 0000000000004F34 default case", "cmp     rdx, rbx", "jz      short loc_4F36"], ["add~rdx,0", "cmp~rdx,rbx", "jz~FOO"]], [2, 0, 266, 1, 0, 4, 0, 1, 19, 6, 0.014072918144417646, ["movzx   eax, byte ptr [rdx]", "sub     eax, 5Bh ; '['", "cmp     al, 21h ; '!'; switch 34 cases", "ja      short loc_4F10; jumptable 0000000000004F34 default case"], ["movzx~eax,<TAG>", "sub~eax,0", "cmp~al,0", "ja~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 16, 12, 0.014072918144417646, ["lea     rax, [len_0+1]", "cmp     buffersize_0, len_0", "jbe     short loc_4B26"], ["lea~rax,[len_0+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 266, 1, 1, 12, 1, 2, 12, 10, 0.09128954461625761, ["lea     rbx, [i+m+0]", "mov     rax, [rsp+0E8h+arg]", "lea     r14, [rax+rbx]", "mov     rdx, [rsp+0E8h+argsize]", "sub     rdx, rbx; n", "mov     rcx, [rsp+0E8h+ps]; ps", "mov     rsi, r14; s", "mov     rdi, [rsp+0E8h+pwc]; pwc", "call    rpl_mbrtowc", "mov     r12, rax", "test    bytes, bytes", "jz      loc_5011"], ["lea~rbx,[i+0]", "mov~rax,[rsp+0]", "lea~r14,<TAG>", "mov~rdx,[rsp+0]", "sub~rdx,rbx", "mov~rcx,[rsp+0]", "mov~rsi,r14", "mov~rdi,[rsp+0]", "call~FOO", "mov~r12,rax", "test~bytes,bytes", "jz~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 19, 15, 0.0, ["mov     byte ptr [r10+r14+2], 27h ; '''"], ["mov~[yte ptr [r10+0],0"]], [0, 0, 266, 0, 0, 3, 0, 0, 15, 10, 0.02312384735423464, ["lea     rax, [i+1]", "cmp     rax, [rsp+0E8h+argsize]", "jnb     loc_5185"], ["lea~rax,[i+0]", "cmp~rax,[rsp+0]", "jnb~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 17, 12, 0.0, ["mov     len_0, [rsp+0E8h+buffer]", "mov     byte ptr [rax+r14+1], 27h ; '''"], ["mov~len_0,[rsp+0]", "mov~[yte ptr [rax+0],0"]], [1, 0, 266, 0, 0, 4, 1, 1, 10, 5, 0.013845935593701234, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 0000000000004CC1 case 32", "setz    bl", "and     bl, [rsp+0E8h+elide_outer_quotes]", "jz      loc_4B64"], ["cmp~[rsp+0],0", "setz~bl", "and~bl,[rsp+0]", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 11, 4, 0.0009363030217052064, ["mov     len_0, buffersize_0", "jmp     force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 15, 4, 0.00489431124982267, ["mov     len_0, r15", "jmp     force_outer_quoting_style"], ["mov~len_0,r15", "jmp~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 9, 4, 0.00292594694282877, ["mov     len_0, buffersize_0", "jmp     force_outer_quoting_style"], ["mov~len_0,buffersize_0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 6, 0.04257341466874734, ["cmp     [rsp+0E8h+quoting_style], 2; jumptable 0000000000004CC1 case 39", "jz      short loc_4D4B"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 266, 0, 0, 5, 0, 1, 4, 9, 0.003702652858561498, ["mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_B423; \"'\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 0", "jmp     loc_45C9"], ["mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 10, 7, 0.0032959757885279235, ["mov     eax, 74h ; 't'; jumptable 0000000000004CC1 case 9"], ["mov~eax,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    _abort; jumptable 000000000000459A default case"], ["call~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 1, 11, 0.1265002127961413, ["mov     eax, [rsp+0E8h+quoting_style]", "cmp     eax, 0Ah; switch 11 cases", "ja      loc_473E; jumptable 000000000000459A default case"], ["mov~eax,[rsp+0]", "cmp~eax,0", "ja~FOO"]], [3, 0, 266, 1, 0, 8, 0, 1, 16, 9, 0.018357213789189954, ["mov     rax, [rsp+0E8h+arg]", "movzx   eax, byte ptr [rax+i+1]", "mov     byte ptr [rsp+0E8h+ps], al", "sub     eax, 30h ; '0'", "movzx   ebp, [rsp+0E8h+elide_outer_quotes]", "mov     [rsp+0E8h+c], 30h ; '0'", "cmp     al, 9", "ja      loc_4B64"], ["mov~rax,[rsp+0]", "movzx~eax,[yte ptr [rax+0]", "mov~[yte ptr [rsp+0],al", "sub~eax,0", "movzx~ebp,[rsp+0]", "mov~[rsp+0],0", "cmp~al,0", "ja~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 11, 6, 0.017818130231238474, ["cmp     [rsp+0E8h+quoting_style], 2", "jnz     short c_escape"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 10, 7, 0.0032959757885279235, ["mov     eax, 6Eh ; 'n'; jumptable 0000000000004CC1 case 10", "jmp     short c_and_shell_escape"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 266, 0, 0, 4, 0, 1, 11, 9, 0.0034898567172648603, ["mov     [rsp+0E8h+encountered_single_quote], bpl", "mov     ebx, 0", "mov     [rsp+0E8h+c], 27h ; '''", "jmp     loc_4B64"], ["mov~[rsp+0],bpl", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 17, 11, 0.013250106398070647, ["cmp     buffersize_0, len_0", "jbe     short loc_4958"], ["cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 18, 11, 0.0, ["mov     rax, [rsp+0E8h+buffer]", "mov     byte ptr [rax+len_0], 30h ; '0'"], ["mov~rax,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 9, 0, 0, 3, 0, 1, 14, 5, 0.0, ["mov     rsi, [rsp+0E8h+buffer]", "mov     [rsi+len_0], cl", "jmp     short loc_52CB"], ["mov~rsi,[rsp+0]", "mov~<TAG>,cl", "jmp~FOO"]], [5, 0, 266, 0, 0, 8, 0, 1, 3, 9, 0.008621790324868775, ["mov     [rsp+0E8h+elide_outer_quotes], 1; jumptable 000000000000459A case 6", "mov     [rsp+0E8h+backslash_escapes], 1", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_B425; \"\\\"\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 0", "mov     [rsp+0E8h+quoting_style], 5", "jmp     loc_45C9"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 1, 1, 11, 7, 0.06426443467158462, ["movzx   edi, [rsp+0E8h+backslash_escapes]", "test    dil, dil", "jnz     loc_51DF"], ["movzx~edi,[rsp+0]", "test~dil,dil", "jnz~FOO"]], [1, 0, 266, 1, 2, 10, 2, 3, 16, 10, 0.02850049652432969, ["mov     edi, [rsp+0E8h+w]; wc", "call    _iswprint", "test    eax, eax", "mov     eax, 0", "cmovz   ebp, eax", "add     m, bytes", "mov     rdi, [rsp+0E8h+ps]; ps", "call    _mbsinit", "test    eax, eax", "jnz     short loc_4FCA"], ["mov~edi,[rsp+0]", "call~FOO", "test~eax,eax", "mov~eax,0", "cmovz~ebp,eax", "add~m,bytes", "mov~rdi,[rsp+0]", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 18, 10, 0.014072918144417646, ["lea     rax, [rdx+2]", "cmp     buffersize_0, len_0", "jbe     short loc_496B"], ["lea~rax,[rdx+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [0, 0, 266, 0, 0, 2, 0, 0, 12, 9, 0.026013146072728994, ["mov     ebp, edi", "mov     ebx, edi"], ["mov~ebp,edi", "mov~ebx,edi"]], [1, 0, 266, 0, 0, 2, 0, 0, 19, 10, 0.0, ["mov     len_0, [rsp+0E8h+buffer]", "mov     byte ptr [rax+rdx+2], 30h ; '0'"], ["mov~len_0,[rsp+0]", "mov~[yte ptr [rax+0],0"]], [0, 0, 5, 0, 0, 1, 0, 0, 15, 3, 0.0002837281883955171, ["mov     r15, len_0"], ["mov~r15,len_0"]], [0, 0, 266, 0, 0, 3, 0, 0, 14, 10, 0.035905802241452685, ["lea     rdx, [r14+2]", "cmp     len_0, rax", "jnb     short loc_4D7C"], ["lea~rdx,[r14+0]", "cmp~len_0,rax", "jnb~FOO"]], [1, 0, 266, 0, 0, 5, 0, 1, 15, 11, 0.005575258901971911, ["mov     len_0, [rsp+0E8h+buffer]", "mov     byte ptr [rax+r14+1], 5Ch ; '\\'", "mov     rax, buffersize_0", "mov     buffersize_0, [rsp+0E8h+orig_buffersize]", "jmp     short loc_4D68"], ["mov~len_0,[rsp+0]", "mov~[yte ptr [rax+0],0", "mov~rax,buffersize_0", "mov~buffersize_0,[rsp+0]", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 1, 15, 11, 0.005575258901971911, ["mov     len_0, buffersize_0", "mov     buffersize_0, [rsp+0E8h+orig_buffersize]", "jmp     short loc_4D68"], ["mov~len_0,buffersize_0", "mov~buffersize_0,[rsp+0]", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 15, 10, 0.0, ["mov     rdi, [rsp+0E8h+buffer]", "mov     byte ptr [rdi+r14+2], 27h ; '''"], ["mov~rdi,[rsp+0]", "mov~[yte ptr [rdi+0],0"]], [1, 0, 266, 0, 0, 2, 0, 1, 13, 10, 0.06876152645765357, ["cmp     bytes, 0FFFFFFFFFFFFFFFFh", "jz      short loc_4FDF"], ["cmp~bytes,0", "jz~FOO"]], [3, 0, 266, 0, 0, 7, 2, 1, 11, 8, 0.3504882489241973, ["movzx   eax, [rsp+0E8h+backslash_escapes]", "xor     eax, 1", "cmp     [rsp+0E8h+quoting_style], 2", "setz    dl", "or      eax, edx", "cmp     al, 1", "jnz     short loc_4B81"], ["movzx~eax,[rsp+0]", "xor~eax,0", "cmp~[rsp+0],0", "setz~dl", "or~eax,edx", "cmp~al,0", "jnz~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 19, 9, 0.014895729890764646, ["lea     r14, [rdx+3]", "movzx   ebp, [rsp+0E8h+elide_outer_quotes]", "mov     [rsp+0E8h+c], 30h ; '0'", "jmp     loc_4B64"], ["lea~r14,[rdx+0]", "movzx~ebp,[rsp+0]", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 12, 9, 0.0008263583487019434, ["movzx   ebx, [rsp+0E8h+backslash_escapes]", "mov     ebp, ebx", "mov     [rsp+0E8h+c], 0", "jmp     loc_4B64"], ["movzx~ebx,[rsp+0]", "mov~ebp,ebx", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 266, 0, 0, 4, 0, 1, 12, 9, 0.005107107391119308, ["mov     ebp, 0", "mov     ebx, 0", "mov     [rsp+0E8h+c], 3Fh ; '?'", "jmp     loc_4B64"], ["mov~ebp,0", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 12, 9, 0.005305717122996169, ["mov     ebp, eax", "mov     ebx, eax", "mov     [rsp+0E8h+c], 3Fh ; '?'", "jmp     loc_4B64"], ["mov~ebp,eax", "mov~ebx,eax", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 1, 0, 5, 0, 1, 22, 9, 0.033125265995176616, ["add     r14, 4", "movzx   ebx, [rsp+0E8h+elide_outer_quotes]", "mov     ebp, ebx", "mov     r13, i", "jmp     loc_4B64"], ["add~r14,0", "movzx~ebx,[rsp+0]", "mov~ebp,ebx", "mov~r13,i", "jmp~FOO"]], [2, 0, 266, 1, 0, 9, 0, 1, 15, 9, 0.03672861398779969, ["add     r14, 3", "movzx   esi, [rsp+0E8h+elide_outer_quotes]", "mov     ebx, esi", "mov     [rsp+0E8h+encountered_single_quote], bpl", "mov     [rsp+0E8h+pending_shell_escape_end], sil", "mov     [rsp+0E8h+orig_buffersize], r15", "mov     r15, rax", "mov     [rsp+0E8h+c], 27h ; '''", "jmp     loc_4B64"], ["add~r14,0", "movzx~esi,[rsp+0]", "mov~ebx,esi", "mov~[rsp+0],bpl", "mov~[rsp+0],sil", "mov~[rsp+0],r15", "mov~r15,rax", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 4, 0, 1, 15, 9, 0.04254504184990779, ["mov     ebp, ebx", "movzx   ebx, [rsp+0E8h+backslash_escapes]", "mov     [rsp+0E8h+c], 30h ; '0'", "jmp     loc_4B64"], ["mov~ebp,ebx", "movzx~ebx,[rsp+0]", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 16, 9, 0.0018300468151510852, ["movzx   ebp, [rsp+0E8h+elide_outer_quotes]", "mov     [rsp+0E8h+c], 30h ; '0'", "jmp     loc_4B64"], ["movzx~ebp,[rsp+0]", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 266, 0, 0, 4, 0, 1, 13, 9, 0.003433111079585757, ["mov     ebp, 0", "mov     ebx, 0", "mov     [rsp+0E8h+c], 3Fh ; '?'", "jmp     loc_4B64"], ["mov~ebp,0", "mov~ebx,0", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 266, 0, 0, 3, 0, 1, 12, 9, 0.010767484749609873, ["mov     ebp, 0", "mov     ebx, 0", "jmp     loc_4B64"], ["mov~ebp,0", "mov~ebx,0", "jmp~FOO"]], [10, 0, 266, 1, 1, 37, 2, 1, 0, 12, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 0B8h", "mov     [rsp+0E8h+buffer], buffer_0", "mov     r14, buffersize_0", "mov     [rsp+0E8h+arg], arg_0", "mov     [rsp+0E8h+argsize], argsize_0", "mov     [rsp+0E8h+quoting_style], r8d", "mov     ebx, r9d", "mov     [rsp+0E8h+flags], r9d", "mov     rax, [rsp+0E8h+quote_these_too]", "mov     [rsp+0E8h+var_A8], rax", "mov     rax, [rsp+0E8h+left_quote]", "mov     [rsp+0E8h+quote_string_1], rax", "mov     rax, [rsp+0E8h+right_quote]", "mov     [rsp+0E8h+quote_string_0], rax", "mov     rax, fs:28h", "mov     [rsp+0E8h+var_40], rax", "xor     eax, eax", "call    ___ctype_get_mb_cur_max", "mov     [rsp+0E8h+var_80], rax", "mov     eax, ebx", "shr     eax, 1", "and     eax, 1", "mov     [rsp+0E8h+elide_outer_quotes], al", "mov     [rsp+0E8h+all_c_and_shell_quote_compat], 1", "mov     [rsp+0E8h+encountered_single_quote], 0", "mov     [rsp+0E8h+pending_shell_escape_end], 0", "mov     [rsp+0E8h+backslash_escapes], 0", "mov     [rsp+0E8h+quote_string_len], 0", "mov     [rsp+0E8h+quote_string], 0", "mov     [rsp+0E8h+orig_buffersize], 0", "mov     r15, buffersize_0"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~[rsp+0],buffer_0", "mov~r14,buffersize_0", "mov~[rsp+0],arg_0", "mov~[rsp+0],argsize_0", "mov~[rsp+0],r8d", "mov~ebx,r9d", "mov~[rsp+0],r9d", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "call~FOO", "mov~[rsp+0],rax", "mov~eax,ebx", "shr~eax,0", "and~eax,0", "mov~[rsp+0],al", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r15,buffersize_0"]], [2, 0, 266, 0, 0, 7, 0, 1, 4, 9, 0.003702652858561498, ["movzx   eax, [rsp+0E8h+elide_outer_quotes]", "mov     [rsp+0E8h+backslash_escapes], al", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_B425; \"\\\"\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 0", "jmp     loc_45C9"], ["movzx~eax,[rsp+0]", "mov~[rsp+0],al", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 3, 10, 0.013306852035749751, ["cmp     [rsp+0E8h+elide_outer_quotes], 0; jumptable 000000000000459A case 5", "jnz     loc_4758"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 266, 1, 0, 2, 0, 0, 19, 14, 0.022258476379628314, ["add     r14, 3", "mov     r9d, r8d"], ["add~r14,0", "mov~r9d,r8d"]], [1, 0, 266, 0, 0, 2, 0, 1, 12, 7, 0.16817397266751802, ["cmp     [rsp+0E8h+elide_outer_quotes], 0", "jz      short loc_4BA2"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 12, -1, 0.0, ["add     rsp, 0B8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     i", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~i", "pop~r14", "pop~r15", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 11, 1, 0.007462051354802099, ["mov     rax, r15", "mov     rcx, [rsp+0E8h+var_40]", "xor     rcx, fs:28h", "jnz     short loc_53F4"], ["mov~rax,r15", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 266, 0, 0, 3, 1, 1, 12, 7, 0.17940606232562523, ["mov     rcx, [rsp+0E8h+var_A8]", "test    rcx, rcx", "jz      short loc_4BA2"], ["mov~rcx,[rsp+0]", "test~rcx,rcx", "jz~FOO"]], [1, 0, 266, 0, 0, 1, 0, 0, 3, 10, 0.0, ["mov     [rsp+0E8h+backslash_escapes], 1; jumptable 000000000000459A case 3"], ["mov~[rsp+0],0"]], [1, 0, 266, 0, 0, 8, 0, 0, 13, 6, 0.00803305433394807, ["movzx   edi, [rsp+0E8h+c]", "mov     eax, edi", "shr     al, 5", "movzx   eax, al", "mov     eax, [rcx+rax*4]", "mov     ecx, edi", "bt      eax, ecx", "jb      short store_escape"], ["movzx~edi,[rsp+0]", "mov~eax,edi", "shr~al,0", "movzx~eax,al", "mov~eax,<TAG>", "mov~ecx,edi", "bt~eax,ecx", "jb~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 10, 6, 0.0813164987941552, ["mov     eax, [rsp+0E8h+quoting_style]; jumptable 0000000000004CC1 case 63", "cmp     eax, 2", "jz      short loc_49BC"], ["mov~eax,[rsp+0]", "cmp~eax,0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 1, 1, 12, 9, 0.061909490707901825, ["test    byte ptr [rsp+0E8h+flags], 4", "jz      loc_5194"], ["test~[yte ptr [rsp+0],0", "jz~FOO"]], [1, 0, 266, 0, 0, 2, 0, 1, 11, 10, 0.06995318484891473, ["cmp     eax, 5", "jz      short loc_49D7"], ["cmp~eax,0", "jz~FOO"]], [1, 0, 266, 0, 0, 3, 0, 1, 12, 6, 0.03531470184896203, ["mov     [rsp+0E8h+c], al", "mov     ebp, 0", "jmp     store_escape"], ["mov~[rsp+0],al", "mov~ebp,0", "jmp~FOO"]], [0, 0, 266, 0, 0, 3, 0, 0, 14, 12, 0.014087104553837423, ["lea     rax, [len_0+1]", "cmp     buffersize_0, len_0", "jbe     short loc_4DD0"], ["lea~rax,[len_0+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [4, 0, 266, 0, 0, 6, 0, 0, 3, 9, 0.012367002411689601, ["mov     [rsp+0E8h+elide_outer_quotes], 1; jumptable 000000000000459A case 1", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_B423; \"'\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 0", "mov     [rsp+0E8h+quoting_style], 2"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "mov~[rsp+0],0"]], [0, 0, 266, 0, 0, 3, 0, 0, 16, 15, 0.020612852886934315, ["lea     rdx, [len_0+1]", "cmp     buffersize_0, len_0", "jbe     short loc_4BEF"], ["lea~rdx,[len_0+0]", "cmp~buffersize_0,len_0", "jbe~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 17, 15, 0.0, ["mov     rdi, [rsp+0E8h+buffer]", "mov     byte ptr [rdi+r14+1], 24h ; '$'"], ["mov~rdi,[rsp+0]", "mov~[yte ptr [rdi+0],0"]], [3, 0, 266, 0, 0, 6, 0, 1, 5, 9, 0.0018655128387005248, ["mov     [rsp+0E8h+backslash_escapes], 1", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_B425; \"\\\"\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 1", "jmp     loc_45C9"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "jmp~FOO"]], [3, 0, 266, 0, 0, 6, 0, 1, 4, 9, 0.003688466449141722, ["mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_B423; \"'\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 0", "mov     [rsp+0E8h+quoting_style], 2", "jmp     loc_45C9"], ["mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 266, 0, 0, 3, 0, 1, 3, 9, 0.008621790324868775, ["mov     [rsp+0E8h+elide_outer_quotes], 0; jumptable 000000000000459A case 0", "mov     r14d, 0", "jmp     short loc_45C9"], ["mov~[rsp+0],0", "mov~r14d,0", "jmp~FOO"]], [3, 0, 266, 0, 0, 4, 0, 1, 3, 9, 0.008621790324868775, ["mov     [rsp+0E8h+elide_outer_quotes], 0; jumptable 000000000000459A case 7", "mov     [rsp+0E8h+backslash_escapes], 1", "mov     r14d, 0", "jmp     loc_45C9"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r14d,0", "jmp~FOO"]], [4, 0, 266, 0, 0, 7, 0, 1, 5, 9, 0.0037239324726911615, ["mov     [rsp+0E8h+elide_outer_quotes], 0", "mov     [rsp+0E8h+quote_string_len], 1", "lea     rax, asc_B423; \"'\"", "mov     [rsp+0E8h+quote_string], rax", "mov     r14d, 1", "mov     [rsp+0E8h+quoting_style], 2", "jmp     loc_45C9"], ["mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rax,<TAG>", "mov~[rsp+0],rax", "mov~r14d,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 266, 0, 0, 2, 0, 0, 16, 16, 0.0, ["mov     rcx, [rsp+0E8h+buffer]", "mov     byte ptr [rcx+len_0], 27h ; '''"], ["mov~rcx,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 0, 0, 1, 1, 0, 1, 12, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [12, 58, 180, 4, 267, 417, 7, 919, 0.04717, 8, 40], "succs": [[38], [0, 173], [12], [2, 4], [2], [62, 231], [5], [5], [16, 54], [8, 140], [231], [10, 23], [17, 21], [168, 12], [256], [256, 14], [54, 47], [21], [64, 146], [18, 20], [18, 206], [27], [79, 7], [56, 149], [78], [24, 260], [9, 19], [59, 60], [27, 29], [33, 27], [27], [102, 86], [113, 31], [192, 198], [50, 51], [257, 34, 262, 263, 170, 244, 250, 219, 159], [220], [160, 194, 67, 36, 214, 139, 108, 207, 209, 82, 117, 22, 121, 187, 252, 203, 126], [62, 6], [38], [38], [38], [38], [38], [38], [171], [185, 45], [54], [28], [48, 112], [94, 127], [50], [72, 58], [128, 52], [75, 100], [68, 151], [149, 55], [61], [57, 61], [65], [59], [72], [53], [73, 76], [146, 63], [77], [65, 233], [107, 141], [74, 90], [43, 189], [231], [11, 70], [32, 181], [248], [90], [80, 105], [146, 83], [26, 182], [77], [118, 119], [91, 140], [175], [81, 175], [211], [144, 145], [178, 84], [102], [123], [235, 87], [101], [89, 101], [123], [226, 15], [92, 15], [78], [142, 94], [94], [49, 158], [97, 99], [97], [140], [104, 109], [114, 103], [114], [109], [140], [123], [176, 106], [213], [115, 236], [185, 46], [120, 116], [111], [111], [111], [236], [120], [220], [199], [118], [53], [66, 131], [150], [122, 150], [123], [124, 93], [231], [136, 96], [85, 205], [197], [129, 221], [147, 191], [123], [132, 13], [123], [196, 134], [142], [28], [137, 166], [220], [37, 22], [138, 166], [143, 95], [95], [157, 165], [144], [185, 110], [188, 148], [161, 154], [231], [248], [150], [123], [152, 220], [161], [130, 221], [155, 221], [165], [49], [162, 261], [220], [174, 167], [169], [1, 42], [163, 156], [200, 245], [220], [174], [265, 258], [264, 195], [208, 169], [218, 172], [225, 171], [69], [179, 183], [241, 187], [28], [98], [177, 98], [183], [28, 133], [28], [26], [188], [248], [184, 248], [231], [186, 203], [193, 190], [69, 39], [193], [123], [198], [201, 238], [203], [78], [197, 221], [196, 135], [202, 30], [44, 230], [245], [212, 239], [30], [204, 231], [123], [123], [123], [125, 215], [78], [213], [], [210, 35], [216, 231], [153, 220], [213], [231], [217, 222], [222], [172], [78], [255, 223], [40, 199], [224, 232], [231], [232], [185], [229, 237], [226], [226], [237], [41, 164], [249, 246], [231], [231], [231], [231], [231], [231], [231], [231], [231], [231], [211], [78], [25, 243], [178], [249, 180], [], [266, 247], [251, 180], [257], [180, 133], [88, 254], [240, 71], [234, 253], [133], [227, 228], [78], [259, 3], [3], [78], [78], [78], [78], [78], [258], []], "fname": "quotearg_buffer_restyled", "n_num": 267}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 10, 0, 0, 2, 0, 1, 0, 0, 0.0641025641025641, ["cmp     ebx, 7FFFFFFFh", "jz      loc_5567"], ["cmp~ebx,0", "jz~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 1, 3, 0.07051282051282051, ["cmp     cs:nslots, ebx", "jg      short loc_54A1"], ["cmp~<TAG>,ebx", "jg~FOO"]], [0, 0, 3, 0, 0, 5, 0, 1, 3, -1, 0.10256410256410256, ["lea     size, [qsize+1]", "mov     [rbx], size", "lea     qsize, slot0", "cmp     val, rax", "jz      short loc_550C"], ["lea~size,[qsize+0]", "mov~<TAG>,size", "lea~qsize,<TAG>", "cmp~val,rax", "jz~FOO"]], [3, 1, 4, 4, 1, 23, 1, 2, 2, -1, 0.1794871794871795, ["movsxd  n, ebx", "shl     n, 4", "add     rbx, sv", "mov     r13, [rbx]", "mov     sv, [rbx+8]", "mov     eax, [options+4]", "or      eax, 1", "mov     [rsp+58h+flags], eax", "lea     r15, [options+8]", "sub     rsp, 8", "push    qword ptr [options+30h]; right_quote", "push    qword ptr [options+28h]; left_quote", "push    r15; quote_these_too", "mov     r9d, eax; flags", "mov     r8d, [options+0]; quoting_style", "mov     rcx, [rsp+78h+argsize]; argsize", "mov     rdx, [rsp+78h+arg]; arg", "mov     rsi, size; buffersize", "mov     rdi, val; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h", "cmp     size, qsize", "ja      short loc_5549"], ["movsxd~n,ebx", "shl~n,0", "add~rbx,sv", "mov~r13,<TAG>", "mov~sv,[rbx+0]", "mov~eax,[options+0]", "or~eax,0", "mov~[rsp+0],eax", "lea~r15,[options+0]", "sub~rsp,0", "push~[word ptr [options+0]", "push~[word ptr [options+0]", "push~r15", "mov~r9d,eax", "mov~r8d,[options+0]", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,size", "mov~rdi,val", "call~FOO", "add~rsp,<STR>", "cmp~size,qsize", "ja~FOO"]], [1, 0, 6, 0, 1, 9, 0, 2, 4, 0, 0.04487179487179487, ["mov     edi, 0; p", "call    xrealloc", "mov     sv, rax", "mov     cs:slotvec_0, sv", "mov     sv, cs:slotvec0.size", "mov     rdx, cs:slotvec0.val", "mov     [sv], rax", "mov     [sv+8], rdx", "jmp     loc_5474"], ["mov~edi,0", "call~FOO", "mov~sv,rax", "mov~<TAG>,sv", "mov~sv,<TAG>", "mov~rdx,<TAG>", "mov~<TAG>,rax", "mov~[sv+0],rdx", "jmp~FOO"]], [1, 0, 8, 1, 0, 6, 0, 1, 3, 1, 0.08974358974358974, ["lea     r13d, [n+1]", "movsxd  rsi, r13d", "shl     rsi, 4; n", "lea     e_0, slotvec0", "cmp     sv, rax", "jz      loc_556C"], ["lea~r13d,[n+0]", "movsxd~rsi,r13d", "shl~rsi,0", "lea~e_0,<TAG>", "cmp~sv,rax", "jz~FOO"]], [1, 1, 1, 2, 2, 16, 0, 2, 4, -1, 0.01282051282051282, ["mov     rdi, size; n", "call    xmalloc", "mov     val, rax", "mov     [rbx+8], rax", "sub     rsp, 8", "push    qword ptr [options+30h]; right_quote", "push    qword ptr [options+28h]; left_quote", "push    r15; quote_these_too", "mov     r9d, [rsp+78h+flags]; flags", "mov     r8d, [options+0]; quoting_style", "mov     rcx, [rsp+78h+argsize]; argsize", "mov     rdx, [rsp+78h+arg]; arg", "mov     rsi, size; buffersize", "mov     rdi, rax; buffer", "call    quotearg_buffer_restyled", "add     rsp, 20h"], ["mov~rdi,size", "call~FOO", "mov~val,rax", "mov~[rbx+0],rax", "sub~rsp,0", "push~[word ptr [options+0]", "push~[word ptr [options+0]", "push~r15", "mov~r9d,[rsp+0]", "mov~r8d,[options+0]", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,size", "mov~rdi,rax", "call~FOO", "add~rsp,<STR>"]], [0, 0, 2, 0, 1, 2, 0, 1, 4, -1, 0.0, ["mov     rdi, val; ptr", "call    free"], ["mov~rdi,val", "call~FOO"]], [1, 0, 0, 1, 0, 11, 0, 0, 3, -1, 0.0, ["mov     eax, [rsp+58h+e]", "mov     [r14], eax", "mov     rax, val", "add     rsp, 28h", "pop     rbx", "pop     options", "pop     val", "pop     size", "pop     r14", "pop     r15", "retn"], ["mov~eax,[rsp+0]", "mov~<TAG>,eax", "mov~rax,val", "add~rsp,0", "pop~rbx", "pop~options", "pop~val", "pop~size", "pop~r14", "pop~r15", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 13, 1, 1, 18, 1, 2, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 28h", "mov     ebx, edi", "mov     [rsp+58h+arg], arg_0", "mov     [rsp+58h+argsize], argsize_0", "mov     rbp, options", "call    ___errno_location", "mov     r14, rax", "mov     eax, [rax]", "mov     [rsp+58h+e], eax", "mov     r12, cs:slotvec_0", "test    ebx, ebx", "js      loc_5562"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~ebx,edi", "mov~[rsp+0],arg_0", "mov~[rsp+0],argsize_0", "mov~rbp,options", "call~FOO", "mov~r14,rax", "mov~eax,<TAG>", "mov~[rsp+0],eax", "mov~r12,<TAG>", "test~ebx,ebx", "js~FOO"]], [0, 0, 6, 0, 1, 4, 0, 1, 4, -1, 0.04487179487179487, ["mov     rdi, sv; p", "call    xrealloc", "mov     sv, rax", "mov     cs:slotvec_0, sv"], ["mov~rdi,sv", "call~FOO", "mov~sv,rax", "mov~<TAG>,sv"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [3, 0, 5, 4, 1, 11, 0, 1, 5, -1, 0.1282051282051282, ["mov     edi, cs:nslots", "mov     edx, r13d", "sub     edx, edi", "movsxd  rdx, edx", "shl     rdx, 4; n", "movsxd  rdi, edi", "shl     rdi, 4", "add     rdi, sv; s", "mov     esi, 0; c", "call    _memset", "mov     cs:nslots, r13d"], ["mov~edi,<TAG>", "mov~edx,r13d", "sub~edx,edi", "movsxd~rdx,edx", "shl~rdx,0", "movsxd~rdi,edi", "shl~rdi,0", "add~rdi,sv", "mov~esi,0", "call~FOO", "mov~<TAG>,r13d"]]], "func_feature": [10, 2, 17, 0, 14, 17, 8, 111, 0.05266, 5, 13], "succs": [[9, 5], [0, 3], [6, 7], [8, 2], [13], [11, 4], [8], [6], [], [], [1, 12], [13], [], [3]], "fname": "quotearg_n_options", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 0, 0, 2, 18, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, o", "call    ___errno_location", "mov     rbp, p", "mov     r12d, [p]", "test    o, o", "lea     p, default_quoting_options", "cmovz   o, p", "mov     esi, 38h ; '8'; s", "mov     rdi, rbx; p", "call    xmemdup", "mov     [rbp+0], r12d", "pop     rbx", "pop     rbp", "pop     e", "retn"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,o", "call~FOO", "mov~rbp,p", "mov~r12d,<TAG>", "test~o,o", "lea~p,<TAG>", "cmovz~o,p", "mov~esi,0", "mov~rdi,rbx", "call~FOO", "mov~[rbp+0],r12d", "pop~rbx", "pop~rbp", "pop~e", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 18, 0.0, 1, 0], "succs": [[]], "fname": "clone_quoting_options", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["test    o, o", "lea     rax, default_quoting_options", "cmovz   o, rax", "mov     eax, [rdi]", "retn"], ["test~o,o", "lea~rax,<TAG>", "cmovz~o,rax", "mov~eax,<TAG>", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "get_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0.0, ["test    o, o", "lea     rax, default_quoting_options", "cmovz   o, rax", "mov     [rdi], esi", "retn"], ["test~o,o", "lea~rax,<TAG>", "cmovz~o,rax", "mov~<TAG>,esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 5, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[4, 0, 0, 1, 0, 19, 6, 0, 0, 0, 0.0, ["test    p, p", "lea     rax, default_quoting_options", "cmovz   p, rax", "mov     eax, esi", "shr     al, 5", "movzx   eax, al", "lea     p, [p+rax*4+8]", "mov     ecx, esi", "and     ecx, 1Fh", "mov     esi, [p]", "mov     eax, esi", "shr     eax, cl", "xor     edx, eax", "and     edx, 1", "shl     edx, cl", "xor     edx, esi", "mov     [p], edx", "and     eax, 1", "retn"], ["test~p,p", "lea~rax,<TAG>", "cmovz~p,rax", "mov~eax,esi", "shr~al,0", "movzx~eax,al", "lea~p,[p+0]", "mov~ecx,esi", "and~ecx,0", "mov~esi,<TAG>", "mov~eax,esi", "shr~eax,cl", "xor~edx,eax", "and~edx,0", "shl~edx,cl", "xor~edx,esi", "mov~<TAG>,edx", "and~eax,0", "retn"]]], "func_feature": [0, 6, 0, 0, 1, 0, 2, 19, 0.0, 1, 1], "succs": [[]], "fname": "set_char_quoting", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0.0, ["test    o, o", "lea     r, default_quoting_options", "cmovz   o, r", "mov     eax, [o+4]", "mov     [o+4], esi", "retn"], ["test~o,o", "lea~r,<TAG>", "cmovz~o,r", "mov~eax,[o+0]", "mov~[o+0],esi", "retn"]]], "func_feature": [0, 1, 0, 0, 1, 0, 0, 6, 0.0, 1, 0], "succs": [[]], "fname": "set_quoting_flags", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 0, 1, 1, 2, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]], [1, 0, 3, 0, 0, 6, 2, 1, 0, 0, 0.0, ["test    o, o", "lea     rax, default_quoting_options", "cmovz   o, rax", "mov     dword ptr [o], 0Ah", "test    left_quote, left_quote", "jz      short loc_5665"], ["test~o,o", "lea~rax,<TAG>", "cmovz~o,rax", "mov~<TAG>,0", "test~left_quote,left_quote", "jz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 1, 0, 0.16666666666666666, ["test    right_quote, right_quote", "jz      short loc_5665"], ["test~right_quote,right_quote", "jz~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0.0, ["mov     [o+28h], left_quote", "mov     [o+30h], right_quote", "retn"], ["mov~[o+0],left_quote", "mov~[o+0],right_quote", "retn"]]], "func_feature": [1, 3, 3, 0, 4, 4, 1, 13, 0.04167, 1, 1], "succs": [[], [0, 2], [0, 3], []], "fname": "set_custom_quoting", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[2, 1, 0, 3, 2, 39, 1, 2, 0, 0, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     [rsp+48h+buffer], buffer_0", "mov     r13, buffersize", "mov     r14, arg", "mov     r15, argsize", "mov     rbx, o", "test    o, o", "lea     r, default_quoting_options", "cmovz   rbx, r", "call    ___errno_location", "mov     rbp, r", "mov     r12d, [r]", "sub     rsp, 8", "push    qword ptr [p+30h]; right_quote", "push    qword ptr [p+28h]; left_quote", "lea     r, [p+8]", "push    r; quote_these_too", "mov     r9d, [p+4]; flags", "mov     r8d, [p]; quoting_style", "mov     rcx, argsize; argsize", "mov     rdx, arg; arg", "mov     rsi, buffersize; buffersize", "mov     rdi, [rsp+68h+buffer]; buffer", "call    quotearg_buffer_restyled", "mov     [rbp+0], r12d", "add     rsp, 38h", "pop     p", "pop     rbp", "pop     e", "pop     buffersize", "pop     arg", "pop     argsize", "retn"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~[rsp+0],buffer_0", "mov~r13,buffersize", "mov~r14,arg", "mov~r15,argsize", "mov~rbx,o", "test~o,o", "lea~r,<TAG>", "cmovz~rbx,r", "call~FOO", "mov~rbp,r", "mov~r12d,<TAG>", "sub~rsp,0", "push~[word ptr [p+0]", "push~[word ptr [p+0]", "lea~r,[p+0]", "push~r", "mov~r9d,[p+0]", "mov~r8d,<TAG>", "mov~rcx,argsize", "mov~rdx,arg", "mov~rsi,buffersize", "mov~rdi,[rsp+0]", "call~FOO", "mov~[rbp+0],r12d", "add~rsp,0", "pop~p", "pop~rbp", "pop~e", "pop~buffersize", "pop~arg", "pop~argsize", "retn"]]], "func_feature": [2, 1, 2, 0, 1, 0, 0, 39, 0.0, 1, 3], "succs": [[]], "fname": "quotearg_buffer", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 0, 1, 0, 9, 0, 0, 0, 0, 0.0, ["mov     rax, [rsp+68h+var_50]", "add     rsp, 38h", "pop     p", "pop     flags", "pop     size", "pop     r13", "pop     bufsize", "pop     r15", "retn"], ["mov~rax,[rsp+0]", "add~rsp,0", "pop~p", "pop~flags", "pop~size", "pop~r13", "pop~bufsize", "pop~r15", "retn"]], [5, 2, 2, 5, 4, 57, 4, 5, 0, 0, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 38h", "mov     r14, arg_0", "mov     [rsp+68h+argsize], argsize_0", "mov     r12, size", "mov     rbx, o", "test    o, o", "lea     rax, default_quoting_options", "cmovz   rbx, rax", "call    ___errno_location", "mov     r13, rax", "mov     eax, [rax]", "mov     [rsp+68h+e], eax", "test    size, size", "setz    bpl", "movzx   ebp, bpl", "or      ebp, [p+4]", "lea     r15, [p+8]", "sub     rsp, 8", "push    qword ptr [p+30h]; right_quote", "push    qword ptr [p+28h]; left_quote", "push    r15; quote_these_too", "mov     r9d, ebp; flags", "mov     r8d, [p]; quoting_style", "mov     rcx, [rsp+88h+argsize]; argsize", "mov     [rsp+88h+arg], arg_0", "mov     rdx, arg_0; arg", "mov     esi, 0; buffersize", "mov     edi, 0; buffer", "call    quotearg_buffer_restyled", "mov     [rsp+88h+var_40], rax", "lea     arg_0, [rax+1]", "add     rsp, 20h", "mov     rdi, bufsize; n", "call    xmalloc", "mov     [rsp+68h+var_50], rax", "sub     rsp, 8", "push    qword ptr [p+30h]; right_quote", "push    qword ptr [p+28h]; left_quote", "push    r15; quote_these_too", "mov     r9d, ebp; flags", "mov     r8d, [p]; quoting_style", "mov     rcx, [rsp+88h+argsize]; argsize", "mov     rdx, [rsp+88h+arg]; arg", "mov     rsi, bufsize; buffersize", "mov     rdi, rax; buffer", "call    quotearg_buffer_restyled", "mov     edx, [rsp+88h+e]", "mov     [r13+0], edx", "add     rsp, 20h", "test    size, size", "jz      short loc_57B5"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r14,arg_0", "mov~[rsp+0],argsize_0", "mov~r12,size", "mov~rbx,o", "test~o,o", "lea~rax,<TAG>", "cmovz~rbx,rax", "call~FOO", "mov~r13,rax", "mov~eax,<TAG>", "mov~[rsp+0],eax", "test~size,size", "setz~bpl", "movzx~ebp,bpl", "or~ebp,[p+0]", "lea~r15,[p+0]", "sub~rsp,0", "push~[word ptr [p+0]", "push~[word ptr [p+0]", "push~r15", "mov~r9d,ebp", "mov~r8d,<TAG>", "mov~rcx,[rsp+0]", "mov~[rsp+0],arg_0", "mov~rdx,arg_0", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~[rsp+0],rax", "lea~arg_0,[rax+0]", "add~rsp,<STR>", "mov~rdi,bufsize", "call~FOO", "mov~[rsp+0],rax", "sub~rsp,0", "push~[word ptr [p+0]", "push~[word ptr [p+0]", "push~r15", "mov~r9d,ebp", "mov~r8d,<TAG>", "mov~rcx,[rsp+0]", "mov~rdx,[rsp+0]", "mov~rsi,bufsize", "mov~rdi,rax", "call~FOO", "mov~edx,[rsp+0]", "mov~[r13+0],edx", "add~rsp,<STR>", "test~size,size", "jz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     rax, [rsp+68h+var_40]", "mov     [size], rax"], ["mov~rax,[rsp+0]", "mov~<TAG>,rax"]]], "func_feature": [4, 4, 5, 2, 3, 3, 1, 68, 0.0, 1, 6], "succs": [[], [0, 2], [0]], "fname": "quotearg_alloc_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[3, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rcx, o; o", "mov     edx, 0; size", "call    quotearg_alloc_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rcx,o", "mov~edx,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 6, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_alloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 6, 1, 0, 4, 0, 0, 0, 0, 0.023809523809523808, ["lea     rbx, [sv+18h]", "lea     eax, [rax-2]", "shl     rax, 4", "lea     rbp, [sv+rax+28h]"], ["lea~rbx,[sv+0]", "lea~eax,[rax-2]+0]", "shl~rax,0", "lea~rbp,[sv+0]"]], [1, 0, 7, 0, 0, 7, 0, 1, 0, 3, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     r12, cs:slotvec_0", "mov     eax, cs:nslots", "cmp     eax, 1", "jle     short loc_5817"], ["push~r12", "push~rbp", "push~rbx", "mov~r12,<TAG>", "mov~eax,<TAG>", "cmp~eax,0", "jle~FOO"]], [0, 0, 4, 0, 0, 4, 0, 1, 1, 2, 0.2857142857142857, ["mov     rdi, [sv+8]; ptr", "lea     rax, slot0", "cmp     rdi, rax", "jz      short loc_5846"], ["mov~rdi,[sv+0]", "lea~rax,<TAG>", "cmp~rdi,rax", "jz~FOO"]], [1, 0, 6, 1, 1, 5, 0, 2, 2, 3, 0.11904761904761904, ["mov     rdi, [rbx]; ptr", "call    free", "add     rbx, 10h", "cmp     rbx, rbp", "jnz     short loc_5806"], ["mov~rdi,<TAG>", "call~FOO", "add~rbx,0", "cmp~rbx,rbp", "jnz~FOO"]], [0, 0, 1, 0, 1, 4, 0, 1, 3, 1, 0.0, ["mov     rdi, sv; ptr", "call    free", "lea     rax, slotvec0", "mov     cs:slotvec_0, rax"], ["mov~rdi,sv", "call~FOO", "lea~rax,<TAG>", "mov~<TAG>,rax"]], [0, 0, 2, 0, 0, 3, 0, 1, 2, 1, 0.23809523809523808, ["lea     rax, slotvec0", "cmp     sv, rax", "jz      short loc_5868"], ["lea~rax,<TAG>", "cmp~sv,rax", "jz~FOO"]], [1, 0, 3, 0, 1, 4, 0, 1, 2, 2, 0.0, ["call    free", "mov     cs:slotvec0.size, 100h", "lea     rax, slot0", "mov     cs:slotvec0.val, rax"], ["call~FOO", "mov~<TAG>,0", "lea~rax,<TAG>", "mov~<TAG>,rax"]], [1, 0, 0, 0, 0, 5, 0, 0, 3, 0, 0.0, ["mov     cs:nslots, 1", "pop     rbx", "pop     rbp", "pop     sv", "retn"], ["mov~<TAG>,0", "pop~rbx", "pop~rbp", "pop~sv", "retn"]]], "func_feature": [3, 0, 7, 0, 8, 11, 0, 36, 0.08333, 5, 2], "succs": [[3], [0, 2], [5, 6], [2, 3], [7], [4, 7], [5], []], "fname": "quotearg_free", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[3, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "lea     rcx, default_quoting_options; options", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "call    quotearg_n_options", "add     rsp, 8", "retn"], ["sub~rsp,0", "lea~rcx,<TAG>", "mov~rdx,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 6, 0.0, 1, 2], "succs": [[]], "fname": "quotearg_n", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[2, 0, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "lea     rcx, default_quoting_options; options", "call    quotearg_n_options", "add     rsp, 8", "retn"], ["sub~rsp,0", "lea~rcx,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 5, 0.0, 1, 2], "succs": [[]], "fname": "quotearg_n_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[3, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rsi, arg; arg", "mov     edi, 0; n", "call    quotearg_n", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rsi,arg", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 6, 0.0, 0, 2], "succs": [[]], "fname": "quotearg", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[3, 0, 0, 2, 1, 7, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "mov     edi, 0; n", "call    quotearg_n_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rdx,argsize", "mov~argsize,arg", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 7, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [12, 0, 2, 0, 1, 19, 1, 2, 1, 0, 0.16666666666666666, ["mov     [rsp+48h+o.style], esi", "mov     [rsp+48h+o.flags], 0", "mov     [rsp+48h+o.quote_these_too], 0", "mov     [rsp+48h+o.quote_these_too+4], 0", "mov     [rsp+48h+o.quote_these_too+8], 0", "mov     [rsp+48h+o.quote_these_too+0Ch], 0", "mov     [rsp+48h+o.quote_these_too+10h], 0", "mov     [rsp+48h+o.quote_these_too+14h], 0", "mov     [rsp+48h+o.quote_these_too+18h], 0", "mov     [rsp+48h+o.quote_these_too+1Ch], 0", "mov     [rsp+48h+o.left_quote], 0", "mov     [rsp+48h+o.right_quote], 0", "mov     rcx, rsp; options", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     s, arg; arg", "call    quotearg_n_options", "mov     rcx, [rsp+48h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_5980"], ["mov~<TAG>,esi", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~rcx,rsp", "mov~rdx,0", "mov~s,arg", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 1, 4, 1, 0, 7, 1, 1, 0, 0, 0.0, ["sub     rsp, 48h", "mov     rax, arg", "mov     arg, fs:28h", "mov     [rsp+48h+var_10], arg", "xor     edx, edx", "cmp     esi, 0Ah", "jz      loc_597B"], ["sub~rsp,<STR>", "mov~rax,arg", "mov~arg,<TAG>", "mov~[rsp+0],arg", "xor~edx,edx", "cmp~esi,0", "jz~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 2, 0, 0.0, ["add     rsp, 48h", "retn"], ["add~rsp,<STR>", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [3, 2, 5, 1, 5, 4, 10, 30, 0.03333, 1, 2], "succs": [[], [0, 3], [1, 4], [], []], "fname": "quotearg_n_style", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 1, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 48h", "retn"], ["add~rsp,<STR>", "retn"]], [11, 0, 2, 0, 1, 18, 1, 2, 1, 1, 0.16666666666666666, ["mov     [rsp+48h+o.style], esi", "mov     [rsp+48h+o.flags], 0", "mov     [rsp+48h+o.quote_these_too], 0", "mov     [rsp+48h+o.quote_these_too+4], 0", "mov     [rsp+48h+o.quote_these_too+8], 0", "mov     [rsp+48h+o.quote_these_too+0Ch], 0", "mov     [rsp+48h+o.quote_these_too+10h], 0", "mov     [rsp+48h+o.quote_these_too+14h], 0", "mov     [rsp+48h+o.quote_these_too+18h], 0", "mov     [rsp+48h+o.quote_these_too+1Ch], 0", "mov     [rsp+48h+o.left_quote], 0", "mov     [rsp+48h+o.right_quote], 0", "mov     rcx, rsp; options", "mov     s, arg; arg", "call    quotearg_n_options", "mov     rdx, [rsp+48h+var_10]", "xor     rdx, fs:28h", "jnz     short loc_5A26"], ["mov~<TAG>,esi", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~rcx,rsp", "mov~s,arg", "call~FOO", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 1, 4, 1, 0, 8, 1, 1, 0, 2, 0.0, ["sub     rsp, 48h", "mov     rax, arg", "mov     arg, argsize; argsize", "mov     argsize, fs:28h", "mov     [rsp+48h+var_10], argsize", "xor     ecx, ecx", "cmp     esi, 0Ah", "jz      short loc_5A21"], ["sub~rsp,<STR>", "mov~rax,arg", "mov~arg,argsize", "mov~argsize,<TAG>", "mov~[rsp+0],argsize", "xor~ecx,ecx", "cmp~esi,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 2, 5, 1, 5, 4, 1, 30, 0.03333, 1, 2], "succs": [[], [0, 4], [], [1, 2], []], "fname": "quotearg_n_style_mem", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[3, 0, 0, 2, 1, 7, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rdx, arg; arg", "mov     esi, edi; s", "mov     edi, 0; n", "call    quotearg_n_style", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rdx,arg", "mov~esi,edi", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 13, 7, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_style", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[3, 0, 0, 2, 1, 8, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rcx, argsize; argsize", "mov     argsize, arg; arg", "mov     esi, edi; s", "mov     edi, 0; n", "call    quotearg_n_style_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rcx,argsize", "mov~argsize,arg", "mov~esi,edi", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 8, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_style_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[3, 0, 2, 1, 2, 36, 2, 3, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 40h", "mov     rbp, arg", "mov     r12, argsize", "mov     rax, fs:28h", "mov     [rsp+58h+var_20], rax", "xor     eax, eax", "mov     rcx, qword ptr cs:default_quoting_options.style", "mov     rbx, qword ptr cs:default_quoting_options.quote_these_too", "mov     qword ptr [rsp+58h+options.style], rcx", "mov     qword ptr [rsp+58h+options.quote_these_too], rbx", "mov     rcx, qword ptr cs:default_quoting_options.quote_these_too+8", "mov     rbx, qword ptr cs:default_quoting_options.quote_these_too+10h", "mov     qword ptr [rsp+58h+options.quote_these_too+8], rcx", "mov     qword ptr [rsp+58h+options.quote_these_too+10h], rbx", "mov     rcx, qword ptr cs:default_quoting_options.quote_these_too+18h", "mov     rbx, cs:default_quoting_options.left_quote", "mov     qword ptr [rsp+58h+options.quote_these_too+18h], rcx", "mov     [rsp+58h+options.left_quote], rbx", "mov     rax, cs:default_quoting_options.right_quote", "mov     [rsp+58h+options.right_quote], rax", "movsx   esi, dl; c", "mov     rbx, rsp", "mov     edx, 1; i", "mov     arg, rbx; o", "call    set_char_quoting", "mov     rcx, rbx; options", "mov     rdx, argsize; argsize", "mov     rsi, arg; arg", "mov     edi, 0; n", "call    quotearg_n_options", "mov     rdi, [rsp+58h+var_20]", "xor     rdi, fs:28h", "jnz     short loc_5B0E"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,arg", "mov~r12,argsize", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rcx,<TAG>", "mov~rbx,<TAG>", "mov~<TAG>,rcx", "mov~[word ptr [rsp+0],rbx", "mov~rcx,<TAG>", "mov~rbx,<TAG>", "mov~[word ptr [rsp+0],rcx", "mov~[word ptr [rsp+0],rbx", "mov~rcx,<TAG>", "mov~rbx,<TAG>", "mov~[word ptr [rsp+0],rcx", "mov~[rsp+0],rbx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "movsx~esi,dl", "mov~rbx,rsp", "mov~edx,0", "mov~arg,rbx", "call~FOO", "mov~rcx,rbx", "mov~rdx,argsize", "mov~rsi,arg", "mov~edi,0", "call~FOO", "mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "jnz~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 0, -1, 0.0, ["add     rsp, 40h", "pop     rbx", "pop     arg", "pop     argsize", "retn"], ["add~rsp,0", "pop~rbx", "pop~arg", "pop~argsize", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 2, 4, 1, 3, 2, 2, 42, 0.0, 8, 2], "succs": [[1, 2], [], []], "fname": "quotearg_char_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[3, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "movsx   edx, sil; ch_0", "mov     ch_0, 0FFFFFFFFFFFFFFFFh; argsize", "call    quotearg_char_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "movsx~edx,sil", "mov~ch_0,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 6, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_char", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[2, 1, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     esi, 3Ah ; ':'; ch_0", "call    quotearg_char", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~esi,<STR>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 5, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_colon", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[2, 1, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     edx, 3Ah ; ':'; ch_0", "call    quotearg_char_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~edx,<STR>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 5, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_colon_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [13, 1, 2, 0, 2, 27, 1, 3, 1, 0, 0.16666666666666666, ["mov     ebp, edi", "mov     r12, arg", "mov     [rsp+58h+options.style], esi", "mov     [rsp+58h+options.flags], 0", "mov     [rsp+58h+options.quote_these_too], 0", "mov     [rsp+58h+options.quote_these_too+4], 0", "mov     [rsp+58h+options.quote_these_too+8], 0", "mov     [rsp+58h+options.quote_these_too+0Ch], 0", "mov     [rsp+58h+options.quote_these_too+10h], 0", "mov     [rsp+58h+options.quote_these_too+14h], 0", "mov     [rsp+58h+options.quote_these_too+18h], 0", "mov     [rsp+58h+options.quote_these_too+1Ch], 0", "mov     [rsp+58h+options.left_quote], 0", "mov     [rsp+58h+options.right_quote], 0", "mov     rbx, rsp", "mov     edx, 1; i", "mov     esi, 3Ah ; ':'; c", "mov     n, rbx; o", "call    set_char_quoting", "mov     rcx, rbx; options", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "mov     rsi, arg; arg", "mov     edi, ebp; n", "call    quotearg_n_options", "mov     rcx, [rsp+58h+var_20]", "xor     rcx, fs:28h", "jnz     short loc_5C1C"], ["mov~ebp,edi", "mov~r12,arg", "mov~<TAG>,esi", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~rbx,rsp", "mov~edx,0", "mov~esi,<STR>", "mov~n,rbx", "call~FOO", "mov~rcx,rbx", "mov~rdx,0", "mov~rsi,arg", "mov~edi,ebp", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [2, 0, 4, 1, 0, 9, 1, 1, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 40h", "mov     rax, fs:28h", "mov     [rsp+58h+var_20], rax", "xor     eax, eax", "cmp     esi, 0Ah", "jz      loc_5C17"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "cmp~esi,0", "jz~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 2, 0, 0.0, ["add     rsp, 40h", "pop     rbx", "pop     n", "pop     arg", "retn"], ["add~rsp,0", "pop~rbx", "pop~n", "pop~arg", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [4, 2, 6, 1, 5, 4, 3, 43, 0.03333, 1, 2], "succs": [[], [0, 3], [1, 4], [], []], "fname": "quotearg_n_style_colon", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 1, 0, 1, 0, 6, 0, 0, 0, 0, 0.0, ["add     rsp, 48h", "pop     rbx", "pop     n", "pop     arg", "pop     argsize", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~n", "pop~arg", "pop~argsize", "retn"]], [0, 1, 2, 1, 2, 36, 2, 3, 0, 1, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 48h", "mov     ebp, edi", "mov     r12, arg", "mov     r13, argsize", "mov     rax, fs:28h", "mov     [rsp+68h+var_30], rax", "xor     eax, eax", "mov     arg, qword ptr cs:default_quoting_options.style", "mov     rbx, qword ptr cs:default_quoting_options.quote_these_too", "mov     qword ptr [rsp+68h+o.style], rcx", "mov     qword ptr [rsp+68h+o.quote_these_too], rbx", "mov     rcx, qword ptr cs:default_quoting_options.quote_these_too+8", "mov     rbx, qword ptr cs:default_quoting_options.quote_these_too+10h", "mov     qword ptr [rsp+68h+o.quote_these_too+8], rcx", "mov     qword ptr [rsp+68h+o.quote_these_too+10h], rbx", "mov     rcx, qword ptr cs:default_quoting_options.quote_these_too+18h", "mov     rbx, cs:default_quoting_options.left_quote", "mov     qword ptr [rsp+68h+o.quote_these_too+18h], rcx", "mov     [rsp+68h+o.left_quote], rbx", "mov     rax, cs:default_quoting_options.right_quote", "mov     [rsp+68h+o.right_quote], rax", "mov     rbx, rsp", "mov     n, rbx; o", "call    set_custom_quoting", "mov     rcx, rbx; options", "mov     rdx, argsize; argsize", "mov     rsi, arg; arg", "mov     edi, ebp; n", "call    quotearg_n_options", "mov     rdi, [rsp+68h+var_30]", "xor     rdi, fs:28h", "jnz     short loc_5CCC"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~ebp,edi", "mov~r12,arg", "mov~r13,argsize", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~arg,<TAG>", "mov~rbx,<TAG>", "mov~<TAG>,rcx", "mov~[word ptr [rsp+0],rbx", "mov~rcx,<TAG>", "mov~rbx,<TAG>", "mov~[word ptr [rsp+0],rcx", "mov~[word ptr [rsp+0],rbx", "mov~rcx,<TAG>", "mov~rbx,<TAG>", "mov~[word ptr [rsp+0],rcx", "mov~[rsp+0],rbx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "mov~rbx,rsp", "mov~n,rbx", "call~FOO", "mov~rcx,rbx", "mov~rdx,argsize", "mov~rsi,arg", "mov~edi,ebp", "call~FOO", "mov~rdi,[rsp+0]", "xor~rdi,<TAG>", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 2, 4, 1, 3, 2, 2, 43, 0.0, 8, 2], "succs": [[], [0, 2], []], "fname": "quotearg_n_custom_mem", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[3, 0, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     r8, 0FFFFFFFFFFFFFFFFh; argsize", "call    quotearg_n_custom_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~r8,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 5, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_n_custom", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[3, 0, 0, 2, 1, 8, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rcx, arg; arg", "mov     arg, right_quote; right_quote", "mov     right_quote, left_quote; left_quote", "mov     edi, 0; n", "call    quotearg_n_custom", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rcx,arg", "mov~arg,right_quote", "mov~right_quote,left_quote", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 8, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_custom", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[3, 0, 0, 2, 1, 9, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     r8, argsize; argsize", "mov     argsize, arg; arg", "mov     arg, right_quote; right_quote", "mov     right_quote, left_quote; left_quote", "mov     edi, 0; n", "call    quotearg_n_custom_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~r8,argsize", "mov~argsize,arg", "mov~arg,right_quote", "mov~right_quote,left_quote", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 9, 0.0, 0, 2], "succs": [[]], "fname": "quotearg_custom_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[2, 0, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "lea     rcx, quote_quoting_options; options", "call    quotearg_n_options", "add     rsp, 8", "retn"], ["sub~rsp,0", "lea~rcx,<TAG>", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 5, 0.0, 1, 2], "succs": [[]], "fname": "quote_n_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[3, 0, 0, 2, 1, 7, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rdx, argsize; argsize", "mov     argsize, arg; arg", "mov     edi, 0; n", "call    quote_n_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rdx,argsize", "mov~argsize,arg", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 7, 0.0, 0, 2], "succs": [[]], "fname": "quote_mem", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[3, 0, 0, 2, 1, 5, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rdx, 0FFFFFFFFFFFFFFFFh; argsize", "call    quote_n_mem", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rdx,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 5, 0.0, 0, 2], "succs": [[]], "fname": "quote_n", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[3, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rsi, arg; arg", "mov     edi, 0; n", "call    quote_n", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rsi,arg", "mov~edi,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 2, 6, 0.0, 0, 2], "succs": [[]], "fname": "quote", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 3, 0, 0, 5, 0, 0, 0, 0, 0.07500000000000001, ["mov     rax, [rsp+0A8h+statbuf.st_ino]", "mov     [root_d_i], rax", "mov     rax, [rsp+0A8h+statbuf.st_dev]", "mov     [root_d_i+8], rax", "mov     rax, root_d_i"], ["mov~rax,[rsp+0]", "mov~<TAG>,rax", "mov~rax,<TAG>", "mov~[root_d_i+0],rax", "mov~rax,root_d_i"]], [2, 0, 5, 1, 1, 12, 2, 2, 0, 3, 0.0, ["push    rbx", "sub     rsp, 0A0h", "mov     rbx, root_d_i", "mov     rax, fs:28h", "mov     [rsp+0A8h+var_10], rax", "xor     eax, eax", "mov     rdx, rsp; stat_buf", "lea     rsi, aLibs+6; filename", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jnz     short loc_5DDF"], ["push~rbx", "sub~rsp,0", "mov~rbx,root_d_i", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rdx,rsp", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 1, 2, 0.07500000000000001, ["mov     eax, 0", "jmp     short loc_5DC3"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.30000000000000004, ["mov     rcx, [rsp+0A8h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_5DE6"], ["mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 0, 1, 0, 3, 0, 0, 3, -1, 0.0, ["add     rsp, 0A0h", "pop     root_d_i", "retn"], ["add~rsp,0", "pop~root_d_i", "retn"]]], "func_feature": [2, 3, 5, 1, 6, 6, 1, 26, 0.075, 2, 2], "succs": [[4], [0, 2], [4], [], [3, 5], []], "fname": "get_root_dev_ino", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[5, 1, 1, 2, 2, 25, 0, 3, 0, 0, 0.0, ["mov     r15, [authors+28h]; jumptable 0000000000005E9B case 6", "mov     r14, [authors+20h]", "mov     r13, [authors+18h]", "mov     n_authors, [authors+10h]", "mov     rax, [authors+8]", "mov     [rsp+58h+var_58], rax", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSSS; \"Written by %s, %s, %s,\\n%s, %s, and %s.\"...", "mov     edi, 0; domainname", "call    _dcgettext", "sub     rsp, 8", "push    r15", "push    r14", "push    r13", "mov     r9, r12", "mov     r8, [rsp+78h+var_58]", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 20h", "jmp     loc_5EEF; jumptable 0000000000005E9B case 0"], ["mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~rax,[authors+0]", "mov~<TAG>,rax", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "sub~rsp,0", "push~r15", "push~r14", "push~r13", "mov~r9,r12", "mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [0, 0, 10, 1, 0, 4, 0, 1, 3, -1, 0.18095238095238098, ["lea     rdx, off_BAEC", "movsxd  rax, dword ptr [rdx+n_authors*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 15, 1, 0, 12, 1, 1, 0, 3, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 28h", "mov     rbp, stream", "mov     rbx, authors", "mov     r12, n_authors", "test    command_name, command_name", "jz      loc_5E9D"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,stream", "mov~rbx,authors", "mov~r12,n_authors", "test~command_name,command_name", "jz~FOO"]], [8, 0, 12, 0, 4, 20, 0, 5, 2, 1, 0.17142857142857143, ["mov     edx, 5; category", "lea     rsi, aC_0; \"(C)\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8d, 7E3h", "mov     rcx, rax", "lea     rdx, version_etc_copyright; \"Copyright %s %d Free Software Foundatio\"...", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "mov     edx, 5; category", "lea     rsi, aLicenseGplv3Gn; \"\\nLicense GPLv3+: GNU GPL version 3 or \"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, stream; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "cmp     n_authors, 9; switch 10 cases", "ja      loc_61F8; jumptable 0000000000005E9B default case"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8d,0", "mov~rcx,rax", "lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,stream", "mov~rdi,rax", "call~FOO", "cmp~n_authors,0", "ja~FOO"]], [2, 0, 13, 0, 1, 7, 0, 2, 1, 2, 0.030952380952380953, ["mov     r8, version", "mov     version, package", "lea     package, aSS_0; \"%s %s\\n\"", "mov     esi, 1", "mov     eax, 0", "call    ___fprintf_chk", "jmp     loc_5E2A"], ["mov~r8,version", "mov~version,package", "lea~package,<TAG>", "mov~esi,0", "mov~eax,0", "call~FOO", "jmp~FOO"]], [2, 0, 13, 0, 1, 7, 0, 1, 1, 2, 0.030952380952380953, ["mov     n_authors, version", "mov     authors, package", "mov     version, command_name", "lea     package, aSSS; \"%s (%s) %s\\n\"", "mov     esi, 1", "mov     eax, 0", "call    ___fprintf_chk"], ["mov~n_authors,version", "mov~authors,package", "mov~version,command_name", "lea~package,<TAG>", "mov~esi,0", "mov~eax,0", "call~FOO"]], [6, 0, 1, 2, 2, 20, 0, 3, 4, -1, 0.0, ["mov     r14, [authors+18h]; jumptable 0000000000005E9B case 4", "mov     r13, [authors+10h]", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSAn; \"Written by %s, %s, %s,\\nand %s.\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "sub     rsp, 8", "push    r14", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 10h", "jmp     loc_5EEF; jumptable 0000000000005E9B case 0"], ["mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "sub~rsp,0", "push~r14", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [4, 0, 1, 0, 2, 11, 0, 2, 4, -1, 0.0, ["mov     authors, [authors]; jumptable 0000000000005E9B case 1", "mov     edx, 5; category", "lea     rsi, aWrittenByS; \"Written by %s.\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk"], ["mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO"]], [6, 0, 1, 2, 2, 31, 0, 3, 4, -1, 0.0, ["mov     r15, [authors+38h]; jumptable 0000000000005E9B case 8", "mov     r14, [authors+30h]", "mov     r13, [authors+28h]", "mov     n_authors, [authors+20h]", "mov     rax, [authors+18h]", "mov     [rsp+58h+var_58], rax", "mov     rcx, [authors+10h]", "mov     [rsp+58h+var_50], rcx", "mov     rdi, [authors+8]", "mov     [rsp+58h+var_48], rdi", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSSS_1; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     edi, 0; domainname", "call    _dcgettext", "sub     rsp, 8", "push    r15", "push    r14", "push    r13", "push    r12", "push    [rsp+80h+var_58]", "mov     r9, [rsp+88h+var_50]", "mov     r8, [rsp+88h+var_48]", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 30h", "jmp     loc_5EEF; jumptable 0000000000005E9B case 0"], ["mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~rax,[authors+0]", "mov~<TAG>,rax", "mov~rcx,[authors+0]", "mov~[rsp+0],rcx", "mov~rdi,[authors+0]", "mov~[rsp+0],rdi", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "sub~rsp,0", "push~r15", "push~r14", "push~r13", "push~r12", "push~[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [4, 1, 1, 1, 2, 27, 0, 3, 4, -1, 0.0, ["mov     r15, [authors+30h]; jumptable 0000000000005E9B case 7", "mov     r14, [authors+28h]", "mov     r13, [authors+20h]", "mov     n_authors, [authors+18h]", "mov     rax, [authors+10h]", "mov     [rsp+58h+var_58], rax", "mov     rcx, [authors+8]", "mov     [rsp+58h+var_50], rcx", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSSS_0; \"Written by %s, %s, %s,\\n%s, %s, %s, and\"...", "mov     edi, 0; domainname", "call    _dcgettext", "push    r15", "push    r14", "push    r13", "push    r12", "mov     r9, [rsp+78h+var_58]", "mov     r8, [rsp+78h+var_50]", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 20h", "jmp     loc_5EEF; jumptable 0000000000005E9B case 0"], ["mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~rax,[authors+0]", "mov~<TAG>,rax", "mov~rcx,[authors+0]", "mov~[rsp+0],rcx", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "push~r15", "push~r14", "push~r13", "push~r12", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,<STR>", "jmp~FOO"]], [5, 0, 1, 1, 2, 21, 0, 3, 4, -1, 0.0, ["mov     r15, [authors+20h]; jumptable 0000000000005E9B case 5", "mov     r14, [authors+18h]", "mov     r13, [authors+10h]", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSSA; \"Written by %s, %s, %s,\\n%s, and %s.\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "push    r15", "push    r14", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 10h", "jmp     loc_5EEF; jumptable 0000000000005E9B case 0"], ["mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "push~r15", "push~r14", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [5, 0, 1, 1, 2, 33, 0, 3, 4, -1, 0.0, ["mov     r15, [authors+40h]; jumptable 0000000000005E9B case 9", "mov     r14, [authors+38h]", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     rax, [authors+20h]", "mov     [rsp+58h+var_58], rax", "mov     rcx, [authors+18h]", "mov     [rsp+58h+var_50], rcx", "mov     rdi, [authors+10h]", "mov     [rsp+58h+var_48], rdi", "mov     rsi, [authors+8]", "mov     [rsp+58h+var_40], rsi", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSSS_2; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     edi, 0; domainname", "call    _dcgettext", "push    r15", "push    r14", "push    r13", "push    r12", "push    [rsp+78h+var_58]", "push    [rsp+80h+var_50]", "mov     r9, [rsp+88h+var_48]", "mov     r8, [rsp+88h+var_40]", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 30h", "jmp     loc_5EEF; jumptable 0000000000005E9B case 0"], ["mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~rax,[authors+0]", "mov~<TAG>,rax", "mov~rcx,[authors+0]", "mov~[rsp+0],rcx", "mov~rdi,[authors+0]", "mov~[rsp+0],rdi", "mov~rsi,[authors+0]", "mov~[rsp+0],rsi", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "push~r15", "push~r14", "push~r13", "push~r12", "push~[rsp+0]", "push~[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [4, 0, 1, 0, 2, 14, 0, 3, 4, -1, 0.0, ["mov     n_authors, [authors+8]; jumptable 0000000000005E9B case 2", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySAndS; \"Written by %s and %s.\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r8, r12", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "jmp     short loc_5EEF; jumptable 0000000000005E9B case 0"], ["mov~n_authors,[authors+0]", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r8,r12", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "jmp~FOO"]], [4, 0, 1, 0, 2, 16, 0, 3, 4, -1, 0.0, ["mov     r13, [authors+10h]; jumptable 0000000000005E9B case 3", "mov     n_authors, [authors+8]", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSAnd; \"Written by %s, %s, and %s.\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     r9, r13", "mov     r8, r12", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "jmp     loc_5EEF; jumptable 0000000000005E9B case 0"], ["mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~r9,r13", "mov~r8,r12", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "jmp~FOO"]], [5, 0, 1, 1, 2, 33, 0, 3, 3, 0, 0.009523809523809525, ["mov     r15, [authors+40h]; jumptable 0000000000005E9B default case", "mov     r14, [authors+38h]", "mov     r13, [authors+30h]", "mov     n_authors, [authors+28h]", "mov     rax, [authors+20h]", "mov     [rsp+58h+var_58], rax", "mov     rcx, [authors+18h]", "mov     [rsp+58h+var_50], rcx", "mov     rdi, [authors+10h]", "mov     [rsp+58h+var_48], rdi", "mov     rsi, [authors+8]", "mov     [rsp+58h+var_40], rsi", "mov     authors, [authors]", "mov     edx, 5; category", "lea     rsi, aWrittenBySSSSS_3; \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\"...", "mov     edi, 0; domainname", "call    _dcgettext", "push    r15", "push    r14", "push    r13", "push    r12", "push    [rsp+78h+var_58]", "push    [rsp+80h+var_50]", "mov     r9, [rsp+88h+var_48]", "mov     r8, [rsp+88h+var_40]", "mov     rcx, rbx", "mov     rdx, rax", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "add     rsp, 30h", "jmp     loc_5EEF; jumptable 0000000000005E9B case 0"], ["mov~r15,[authors+0]", "mov~r14,[authors+0]", "mov~r13,[authors+0]", "mov~n_authors,[authors+0]", "mov~rax,[authors+0]", "mov~<TAG>,rax", "mov~rcx,[authors+0]", "mov~[rsp+0],rcx", "mov~rdi,[authors+0]", "mov~[rsp+0],rdi", "mov~rsi,[authors+0]", "mov~[rsp+0],rsi", "mov~authors,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "push~r15", "push~r14", "push~r13", "push~r12", "push~[rsp+0]", "push~[rsp+0]", "mov~r9,[rsp+0]", "mov~r8,[rsp+0]", "mov~rcx,rbx", "mov~rdx,rax", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "add~rsp,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 28h; jumptable 0000000000005E9B case 0", "pop     rbx", "pop     stream", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~stream", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [26, 1, 39, 4, 16, 26, 2, 289, 0.02649, 16, 13], "succs": [[15], [0, 6, 7, 8, 9, 10, 11, 12, 13, 15], [4, 5], [1, 14], [3], [3], [15], [15], [15], [15], [15], [15], [15], [15], [15], []], "fname": "version_etc_arn", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[2, 0, 2, 1, 0, 3, 0, 1, 0, 0, 0.08333333333333333, ["add     n_authors, 1; n_authors", "cmp     qword ptr [authors+n_authors*8], 0", "jnz     short loc_628F"], ["add~n_authors,0", "cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 2, 0, 0, 1, 0, 0, 1, -1, 0.08333333333333333, ["mov     r9d, 0"], ["mov~r9d,0"]], [2, 0, 4, 1, 0, 3, 0, 1, 0, 1, 0.0, ["sub     rsp, 8", "cmp     qword ptr [authors], 0", "jz      short loc_62A4"], ["sub~rsp,0", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.08333333333333333, ["mov     r9d, 0", "jmp     short loc_629A"], ["mov~r9d,0", "jmp~FOO"]], [1, 0, 0, 1, 1, 3, 0, 1, 2, -1, 0.0, ["call    version_etc_arn", "add     rsp, 8", "retn"], ["call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 4, 0, 5, 6, 0, 12, 0.05, 0, 3], "succs": [[0, 4], [0], [1, 3], [4], []], "fname": "version_etc_ar", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 4, 0, 0.21428571428571427, ["mov     authors, rsp; authors", "call    version_etc_arn", "mov     rax, [rsp+68h+var_10]", "xor     rax, fs:28h", "jnz     short loc_6320"], ["mov~authors,rsp", "call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [1, 0, 8, 2, 0, 5, 0, 1, 2, 0, 0.09821428571428571, ["mov     eax, r10d", "add     rax, [authors+10h]", "add     r10d, 8", "mov     [authors], r10d", "jmp     short loc_62D4"], ["mov~eax,r10d", "add~rax,[authors+0]", "add~r10d,0", "mov~<TAG>,r10d", "jmp~FOO"]], [1, 0, 8, 0, 0, 3, 0, 1, 1, 0, 0.25, ["mov     r10d, [authors]", "cmp     r10d, 2Fh ; '/'", "ja      short loc_62C8"], ["mov~r10d,<TAG>", "cmp~r10d,0", "ja~FOO"]], [2, 0, 8, 1, 0, 6, 1, 1, 0, 0, 0.0, ["sub     rsp, 68h", "mov     rax, fs:28h", "mov     [rsp+68h+var_10], rax", "xor     eax, eax", "mov     r9d, 0", "jmp     short loc_62EA"], ["sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~r9d,0", "jmp~FOO"]], [2, 0, 8, 1, 0, 3, 0, 1, 4, 0, 0.125, ["add     n_authors, 1; n_authors", "cmp     n_authors, 0Ah", "jz      short loc_6303"], ["add~n_authors,0", "cmp~n_authors,0", "jz~FOO"]], [0, 0, 8, 0, 0, 4, 1, 1, 3, 0, 0.3571428571428571, ["mov     rax, [rax]", "mov     [rsp+n_authors*8+68h+authtab], rax", "test    rax, rax", "jz      short loc_6303"], ["mov~rax,<TAG>", "mov~<TAG>,rax", "test~rax,rax", "jz~FOO"]], [0, 0, 8, 0, 0, 3, 0, 0, 2, 0, 0.09821428571428571, ["mov     rax, [authors+8]", "lea     r10, [rax+8]", "mov     [authors+8], r10"], ["mov~rax,[authors+0]", "lea~r10,[rax+0]", "mov~[authors+0],r10"]], [1, 0, 0, 1, 0, 2, 0, 0, 5, 0, 0.0, ["add     rsp, 68h", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [2, 3, 8, 1, 9, 11, 1, 32, 0.12698, 1, 5], "succs": [[], [0, 8], [6], [2, 7], [3], [1, 3], [1, 5], [6], []], "fname": "version_etc_va", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 1, 4, 1, 0, 5, 1, 1, 0, 0, 0.0, ["sub     rsp, 0D8h", "mov     [rsp+0D8h+var_98], r8", "mov     [rsp+0D8h+var_90], r9", "test    al, al", "jz      short loc_6371"], ["sub~rsp,<STR>", "mov~[rsp+0],r8", "mov~[rsp+0],r9", "test~al,al", "jz~FOO"]], [0, 0, 3, 0, 0, 8, 0, 0, 0, 2, 0.0, ["movaps  [rsp+0D8h+var_88], xmm0", "movaps  [rsp+0D8h+var_78], xmm1", "movaps  [rsp+0D8h+var_68], xmm2", "movaps  [rsp+0D8h+var_58], xmm3", "movaps  [rsp+0D8h+var_48], xmm4", "movaps  [rsp+0D8h+var_38], xmm5", "movaps  [rsp+0D8h+var_28], xmm6", "movaps  [rsp+0D8h+var_18], xmm7"], ["movaps~[rsp+0],xmm0", "movaps~[rsp+0],xmm1", "movaps~[rsp+0],xmm2", "movaps~[rsp+0],xmm3", "movaps~[rsp+0],xmm4", "movaps~[rsp+0],xmm5", "movaps~[rsp+0],xmm6", "movaps~[rsp+0],xmm7"]], [1, 1, 2, 0, 1, 14, 2, 2, 0, 1, 0.3333333333333333, ["mov     rax, fs:28h", "mov     [rsp+0D8h+var_C0], rax", "xor     eax, eax", "mov     [rsp+0D8h+authors.gp_offset], 20h ; ' '", "mov     [rsp+0D8h+authors.fp_offset], 30h ; '0'", "lea     rax, [rsp+0D8h+arg_0]", "mov     [rsp+0D8h+authors.overflow_arg_area], rax", "lea     rax, [rsp+0D8h+var_B8]", "mov     [rsp+0D8h+authors.reg_save_area], rax", "mov     r8, rsp; authors", "call    version_etc_va", "mov     rax, [rsp+0D8h+var_C0]", "xor     rax, fs:28h", "jnz     short loc_63C7"], ["mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~<TAG>,<STR>", "mov~[rsp+0],0", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~r8,rsp", "call~FOO", "mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 0D8h", "retn"], ["add~rsp,<STR>", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 3, 4, 12, 5, 5, 1, 30, 0.06667, 1, 2], "succs": [[1, 2], [2], [3, 4], [], []], "fname": "version_etc", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[10, 0, 0, 0, 6, 30, 0, 6, 0, 0, 0.0, ["push    rbx", "mov     edx, 5; category", "lea     rsi, aReportBugsToS; \"\\nReport bugs to: %s\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "lea     rdx, aBugCoreutilsGn; \"bug-coreutils@gnu.org\"", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     edx, 5; category", "lea     rsi, aSHomePageS; \"%s home page: <%s>\\n\"", "mov     edi, 0; domainname", "call    _dcgettext", "lea     rcx, aHttpsWwwGnuOrg; \"https://www.gnu.org/software/coreutils/\"", "lea     rdx, package; \"GNU \"", "mov     rsi, rax", "mov     edi, 1", "mov     eax, 0", "call    ___printf_chk", "mov     rbx, cs:stdout@@GLIBC_2_2_5", "mov     edx, 5; category", "lea     rsi, aGeneralHelpUsi; \"General help using GNU software: <https\"...", "mov     edi, 0; domainname", "call    _dcgettext", "mov     rsi, rbx; stream", "mov     rdi, rax; s", "call    _fputs_unlocked", "pop     rbx", "retn"], ["push~rbx", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~rsi,rax", "mov~edi,0", "mov~eax,0", "call~FOO", "mov~rbx,<TAG>", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~rsi,rbx", "mov~rdi,rax", "call~FOO", "pop~rbx", "retn"]]], "func_feature": [6, 0, 6, 0, 1, 0, 0, 30, 0.0, 7, 0], "succs": [[]], "fname": "emit_bug_reporting_address", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[3, 0, 0, 2, 1, 8, 1, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    _geteuid", "test    eax, eax", "setz    cs:can_write_3065", "mov     cs:initialized_3064, 1", "movzx   eax, cs:can_write_3065", "add     rsp, 8", "retn"], ["sub~rsp,0", "call~FOO", "test~eax,eax", "setz~<TAG>", "mov~<TAG>,0", "movzx~eax,<TAG>", "add~rsp,0", "retn"]], [1, 0, 2, 0, 0, 2, 0, 1, 0, 0, 0.0, ["cmp     cs:initialized_3064, 0", "jz      short loc_646D"], ["cmp~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["movzx   eax, cs:can_write_3065", "retn"], ["movzx~eax,<TAG>", "retn"]]], "func_feature": [1, 1, 2, 0, 3, 2, 1, 12, 0.0, 2, 2], "succs": [[], [0, 2], []], "fname": "can_write_any_file", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 1, 0, 0, 0.16666666666666666, ["test    n, n", "jnz     short loc_64A7"], ["test~n,n", "jnz~FOO"]], [0, 0, 3, 0, 1, 5, 1, 2, 0, 2, 0.0, ["push    rbx", "mov     rbx, n", "call    _malloc", "test    p, p", "jnz     short loc_64A5"], ["push~rbx", "mov~rbx,n", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 1, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 4, 0, 4, 4, 6, 10, 0.04167, 0, 0], "succs": [[2, 3], [0, 2], [], []], "fname": "xmalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 0, 2, 1, 4, 0, 1, 0, 0, 0.0, ["imul    n, s; n", "call    xmalloc", "add     rsp, 8", "retn"], ["imul~n,s", "call~FOO", "add~rsp,0", "retn"]], [2, 0, 2, 2, 0, 10, 2, 1, 0, 1, 0.0, ["sub     rsp, 8", "mov     rax, n", "mul     s", "seto    dl", "movzx   edx, dl", "test    rax, rax", "mov     eax, 1", "cmovns  rax, rdx", "test    al, al", "jnz     short loc_64DA"], ["sub~rsp,0", "mov~rax,n", "mul~,s", "seto~dl", "movzx~edx,dl", "test~rax,rax", "mov~eax,0", "cmovns~rax,rdx", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 3, 0, 3, 2, 0, 15, 0.0, 0, 4], "succs": [[], [0, 2], []], "fname": "xnmalloc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[2, 0, 0, 2, 1, 4, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    xmalloc", "add     rsp, 8", "retn"], ["sub~rsp,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 4, 0.0, 0, 2], "succs": [[]], "fname": "xcharalloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 3, 0, 1, 4, 1, 2, 0, 0, 0.18333333333333332, ["mov     n, rbx; size", "call    _realloc", "test    p, p", "jnz     short loc_650D"], ["mov~n,rbx", "call~FOO", "test~p,p", "jnz~FOO"]], [0, 0, 6, 0, 0, 4, 1, 1, 0, 3, 0.0, ["push    rbx", "mov     rbx, n", "test    n, n", "jnz     short loc_64FB"], ["push~rbx", "mov~rbx,n", "test~n,n", "jnz~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 1, 3, 0.03333333333333333, ["test    p, p", "jnz     short loc_650F"], ["test~p,p", "jnz~FOO"]], [0, 0, 2, 0, 0, 2, 1, 1, 2, 1, 0.1, ["test    n, n", "jnz     short loc_651B"], ["test~n,n", "jnz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, -1, 0.0, ["pop     n", "retn"], ["pop~n", "retn"]], [1, 0, 1, 0, 1, 3, 0, 2, 2, -1, 0.016666666666666666, ["call    free", "mov     eax, 0", "jmp     short loc_650D"], ["call~FOO", "mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [3, 4, 8, 0, 7, 9, 5, 18, 0.04762, 0, 0], "succs": [[3, 4], [0, 2], [0, 5], [4, 6], [], [4], []], "fname": "xrealloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 0, 2, 1, 4, 0, 1, 0, 0, 0.0, ["imul    n, s; n", "call    xrealloc", "add     rsp, 8", "retn"], ["imul~n,s", "call~FOO", "add~rsp,0", "retn"]], [2, 0, 2, 2, 0, 11, 2, 1, 0, 1, 0.0, ["sub     rsp, 8", "mov     rcx, s", "mov     rax, n", "mul     rcx", "seto    dl", "movzx   edx, dl", "test    rax, rax", "mov     eax, 1", "cmovns  rax, rdx", "test    al, al", "jnz     short loc_6551"], ["sub~rsp,0", "mov~rcx,s", "mov~rax,n", "mul~,rcx", "seto~dl", "movzx~edx,dl", "test~rax,rax", "mov~eax,0", "cmovns~rax,rdx", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 2, 3, 0, 3, 2, 0, 16, 0.0, 0, 4], "succs": [[], [0, 2], []], "fname": "xnrealloc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 0, 0, 0, 0.026785714285714284, ["mov     rax, n", "shr     rax, 1", "lea     n, [rax+n+1]"], ["mov~rax,n", "shr~rax,0", "lea~n,[rax+0]"]], [2, 0, 3, 1, 0, 5, 0, 0, 1, 1, 0.04464285714285714, ["mov     rax, 5555555555555554h", "mov     edx, 0", "div     s", "cmp     rax, n", "jbe     short loc_65DD"], ["mov~rax,0", "mov~edx,0", "div~,s", "cmp~rax,n", "jbe~FOO"]], [1, 0, 8, 1, 0, 5, 1, 1, 0, 2, 0.0, ["sub     rsp, 8", "mov     r9, s", "mov     rcx, [pn]", "test    p, p", "jz      short loc_659B"], ["sub~rsp,0", "mov~r9,s", "mov~rcx,<TAG>", "test~p,p", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 2, 1, 0, 9, 2, 1, 2, -1, 0.09821428571428571, ["mov     rax, n", "mul     s", "seto    dl", "movzx   edx, dl", "test    rax, rax", "mov     eax, 1", "cmovns  rax, rdx", "test    al, al", "jz      short loc_6587"], ["mov~rax,n", "mul~,s", "seto~dl", "movzx~edx,dl", "test~rax,rax", "mov~eax,0", "cmovns~rax,rdx", "test~al,al", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 1, -1, 0.0625, ["test    n, n", "jnz     short loc_65BC"], ["test~n,n", "jnz~FOO"]], [1, 1, 3, 1, 0, 7, 1, 0, 2, -1, 0.0, ["mov     eax, 80h", "mov     edx, 0", "div     s", "test    n, n", "setz    r8b", "movzx   r8d, r8b", "lea     rcx, [r8+n]"], ["mov~eax,<STR>", "mov~edx,0", "div~,s", "test~n,n", "setz~r8b", "movzx~r8d,r8b", "lea~rcx,<TAG>"]], [1, 0, 0, 2, 1, 6, 0, 1, 3, -1, 0.0, ["mov     [pn], n", "imul    n, s", "mov     pn, rcx; n", "call    xrealloc", "add     rsp, 8", "retn"], ["mov~<TAG>,n", "imul~n,s", "mov~pn,rcx", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [3, 5, 6, 0, 9, 10, 0, 39, 0.02579, 0, 6], "succs": [[8], [0, 3], [1, 6], [], [], [8, 4], [5, 7], [5], []], "fname": "x2nrealloc", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 0, 0, 0, 0.03333333333333333, ["mov     rdx, rax", "shr     rdx, 1", "lea     rax, [rdx+rax+1]"], ["mov~rdx,rax", "shr~rdx,0", "lea~rax,[rdx+0]"]], [1, 0, 3, 0, 0, 3, 0, 1, 1, 1, 0.06666666666666667, ["mov     rdx, 5555555555555553h", "cmp     rax, rdx", "ja      short loc_662E"], ["mov~rdx,0", "cmp~rax,rdx", "ja~FOO"]], [0, 1, 2, 0, 0, 5, 2, 0, 1, -1, 0.06666666666666667, ["test    rax, rax", "mov     edx, 80h", "cmovz   rax, rdx", "test    rax, rax", "jns     short loc_6608"], ["test~rax,rax", "mov~edx,<STR>", "cmovz~rax,rdx", "test~rax,rax", "jns~FOO"]], [1, 0, 6, 1, 0, 4, 1, 1, 0, 2, 0.0, ["sub     rsp, 8", "mov     rax, [pn]", "test    p, p", "jz      short loc_6618"], ["sub~rsp,0", "mov~rax,<TAG>", "test~p,p", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]], [1, 0, 0, 1, 1, 5, 0, 1, 2, -1, 0.0, ["mov     [pn], rax", "mov     pn, rax; n", "call    xrealloc", "add     rsp, 8", "retn"], ["mov~<TAG>,rax", "mov~pn,rax", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [3, 3, 5, 0, 7, 7, 0, 22, 0.02381, 0, 2], "succs": [[6], [0, 5], [4, 6], [1, 2], [], [], []], "fname": "x2realloc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 0, 0, 2, 9, 0, 2, 0, 0, 0.0, ["push    rbx", "mov     rbx, s", "call    xmalloc", "mov     rdx, s; n", "mov     esi, 0; c", "mov     rdi, rax; s", "call    _memset", "pop     s", "retn"], ["push~rbx", "mov~rbx,s", "call~FOO", "mov~rdx,s", "mov~esi,0", "mov~rdi,rax", "call~FOO", "pop~s", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 0, 9, 0.0, 0, 0], "succs": [[]], "fname": "xzalloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [0, 0, 2, 0, 1, 3, 1, 2, 1, 1, 0.16666666666666666, ["call    _calloc", "test    p, p", "jz      short loc_667D"], ["call~FOO", "test~p,p", "jz~FOO"]], [2, 0, 3, 2, 0, 10, 2, 1, 0, 1, 0.0, ["sub     rsp, 8", "mov     rax, n", "mul     s", "seto    dl", "movzx   edx, dl", "test    rax, rax", "mov     eax, 1", "cmovns  rax, rdx", "test    al, al", "jnz     short loc_667D"], ["sub~rsp,0", "mov~rax,n", "mul~,s", "seto~dl", "movzx~edx,dl", "test~rax,rax", "mov~eax,0", "cmovns~rax,rdx", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0.0, ["call    xalloc_die"], ["call~FOO"]]], "func_feature": [2, 3, 4, 0, 4, 4, 0, 16, 0.04167, 0, 3], "succs": [[], [0, 3], [1, 3], []], "fname": "xcalloc", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[2, 0, 0, 2, 2, 15, 0, 2, 0, 0, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbp, p", "mov     rbx, s", "mov     p, s; n", "call    xmalloc", "mov     rdx, s; n", "mov     rsi, p; src", "mov     rdi, rax; dest", "call    _memcpy", "add     rsp, 8", "pop     s", "pop     p", "retn"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,p", "mov~rbx,s", "mov~p,s", "call~FOO", "mov~rdx,s", "mov~rsi,p", "mov~rdi,rax", "call~FOO", "add~rsp,0", "pop~s", "pop~p", "retn"]]], "func_feature": [2, 0, 2, 0, 1, 0, 2, 15, 0.0, 0, 2], "succs": [[]], "fname": "xmemdup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[4, 0, 0, 2, 1, 11, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     rdx, string", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "repne scasb", "not     rcx", "mov     rsi, rcx; s", "mov     rdi, rdx; p", "call    xmemdup", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~rdx,string", "mov~rcx,0", "mov~eax,0", "scasb~<TAG>,", "not~rcx", "mov~rsi,rcx", "mov~rdi,rdx", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 0, 11, 0.0, 0, 2], "succs": [[]], "fname": "xstrdup", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[5, 0, 0, 1, 3, 12, 0, 3, 0, 0, 0.0, ["sub     rsp, 8", "mov     edx, 5; category", "lea     rsi, aMemoryExhauste; \"memory exhausted\"", "mov     edi, 0; domainname", "call    _dcgettext", "mov     edi, cs:exit_failure; status", "mov     rcx, rax", "lea     rdx, aS+2; format", "mov     esi, 0; errnum", "mov     eax, 0", "call    _error", "call    _abort"], ["sub~rsp,0", "mov~edx,0", "lea~rsi,<TAG>", "mov~edi,0", "call~FOO", "mov~edi,<TAG>", "mov~rcx,rax", "lea~rdx,<TAG>", "mov~esi,0", "mov~eax,0", "call~FOO", "call~FOO"]]], "func_feature": [3, 0, 3, 0, 1, 0, 12, 12, 0.0, 3, 1], "succs": [[]], "fname": "xalloc_die", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 1, 4, 1, 1, 5, 2, 2, 0, 2, 0.0, ["sub     rsp, 8", "or      esi, 200h; options", "call    rpl_fts_open", "test    fts, fts", "jz      short loc_672A"], ["sub~rsp,0", "or~esi,<STR>", "call~FOO", "test~fts,fts", "jz~FOO"]], [1, 0, 2, 0, 1, 3, 0, 2, 1, 1, 0.16666666666666666, ["call    ___errno_location", "cmp     dword ptr [rax], 16h", "jz      short loc_6739"], ["call~FOO", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    xalloc_die"], ["call~FOO"]], [0, 1, 0, 0, 1, 5, 0, 1, 2, 0, 0.0, ["lea     rcx, __PRETTY_FUNCTION___3434; \"xfts_open\"", "mov     edx, 29h ; ')'; line", "lea     rsi, aLibXftsC; \"lib/xfts.c\"", "lea     rdi, aErrnoEinval; \"errno != EINVAL\"", "call    ___assert_fail"], ["lea~rcx,<TAG>", "mov~edx,<STR>", "lea~rsi,<TAG>", "lea~rdi,<TAG>", "call~FOO"]]], "func_feature": [4, 2, 6, 0, 5, 4, 1, 16, 0.03333, 3, 2], "succs": [[], [0, 2], [3, 4], [], []], "fname": "xfts_open", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[2, 0, 2, 0, 0, 3, 0, 1, 0, 0, 0.16666666666666666, ["mov     eax, 0", "cmp     edx, 11h", "jz      short loc_6776"], ["mov~eax,0", "cmp~edx,0", "jz~FOO"]], [3, 0, 3, 0, 0, 5, 1, 1, 0, 2, 0.0, ["mov     edx, [fts+48h]", "and     edx, 11h", "mov     eax, 1", "cmp     edx, 10h", "jz      short loc_6772"], ["mov~edx,[fts+0]", "and~edx,0", "mov~eax,0", "cmp~edx,0", "jz~FOO"]], [1, 0, 1, 0, 0, 4, 0, 1, 2, 0, 0.0, ["cmp     qword ptr [ent+58h], 0", "setnz   al", "movzx   eax, al", "jmp     short loc_6772"], ["cmp~[word ptr [ent+0],0", "setnz~al", "movzx~eax,al", "jmp~FOO"]], [1, 0, 0, 0, 0, 2, 1, 0, 1, -1, 0.0, ["and     eax, 1", "retn"], ["and~eax,0", "retn"]]], "func_feature": [0, 2, 3, 0, 4, 5, 0, 14, 0.04167, 0, 0], "succs": [[2, 3], [0, 3], [3], []], "fname": "cycle_warning_required", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 2, 0, 1, 6, 1, 2, 0, 0, 0.26666666666666666, ["mov     rdi, [rsp+28h+response]; ptr", "call    free", "mov     eax, ebx", "mov     rcx, [rsp+28h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_6814"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~eax,ebx", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [4, 1, 6, 1, 1, 15, 2, 2, 0, 2, 0.0, ["push    rbx", "sub     rsp, 20h", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "mov     [rsp+28h+response], 0", "mov     [rsp+28h+response_size], 0", "lea     rsi, [rsp+28h+response_size]; n", "lea     rdi, [rsp+28h+response]; lineptr", "mov     rcx, cs:stdin@@GLIBC_2_2_5; stream", "mov     edx, 0Ah; delimiter", "call    ___getdelim", "mov     ebx, 0", "test    rax, rax", "jle     short loc_67ED"], ["push~rbx", "sub~rsp,<STR>", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~[rsp+0],0", "mov~[rsp+0],0", "lea~rsi,[rsp+0]", "lea~rdi,[rsp+0]", "mov~rcx,<TAG>", "mov~edx,0", "call~FOO", "mov~ebx,0", "test~rax,rax", "jle~FOO"]], [0, 0, 3, 0, 1, 4, 1, 1, 2, 2, 0.2, ["mov     rdi, [rsp+28h+response]; response", "call    _rpmatch", "test    eax, eax", "setnle  bl"], ["mov~rdi,[rsp+0]", "call~FOO", "test~eax,eax", "setnle~bl"]], [1, 0, 4, 0, 0, 2, 0, 1, 2, 3, 0.0, ["mov     byte ptr [rax], 0", "jmp     short loc_67DE"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 5, 0, 0, 4, 0, 1, 1, 3, 0.06666666666666667, ["mov     rdx, [rsp+28h+response]", "lea     rax, [rdx+rax-1]", "cmp     byte ptr [rax], 0Ah", "jz      short loc_680F"], ["mov~rdx,[rsp+0]", "lea~rax,[rdx+0]", "cmp~<TAG>,0", "jz~FOO"]], [0, 1, 0, 1, 0, 3, 0, 0, 2, -1, 0.0, ["add     rsp, 20h", "pop     yes", "retn"], ["add~rsp,<STR>", "pop~yes", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [4, 4, 8, 1, 7, 8, 2, 35, 0.07619, 2, 2], "succs": [[5, 6], [0, 4], [0], [2], [2, 3], [], []], "fname": "yesno", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 6, 0, 0, 4, 1, 1, 0, 0, 0.0, ["push    rbx", "mov     rbx, stream", "test    stream, stream", "jz      short loc_682B"], ["push~rbx", "mov~rbx,stream", "test~stream,stream", "jz~FOO"]], [0, 0, 1, 0, 1, 3, 0, 2, 0, -1, 0.06666666666666667, ["mov     rdi, stream; stream", "call    _fflush", "jmp     short loc_6833"], ["mov~rdi,stream", "call~FOO", "jmp~FOO"]], [2, 0, 2, 0, 1, 5, 0, 2, 0, 0, 0.0, ["mov     edx, 1; whence", "mov     esi, 0; offset", "mov     rdi, stream; fp", "call    rpl_fseeko", "jmp     short loc_683D"], ["mov~edx,0", "mov~esi,0", "mov~rdi,stream", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 1, 1, 0, 1, 0.13333333333333333, ["test    dword ptr [stream], 100h", "jnz     short loc_6847"], ["test~<TAG>,0", "jnz~FOO"]], [0, 0, 5, 0, 1, 3, 1, 2, 0, 2, 0.1, ["call    ___freading", "test    eax, eax", "jnz     short loc_6835"], ["call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 0, -1, 0.06666666666666667, ["mov     rdi, stream; stream", "call    _fflush"], ["mov~rdi,stream", "call~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 0, -1, 0.0, ["pop     stream", "retn"], ["pop~stream", "retn"]]], "func_feature": [4, 3, 9, 0, 7, 9, 2, 21, 0.05238, 0, 0], "succs": [[4, 5], [6], [1], [1, 2], [3, 5], [6], []], "fname": "rpl_fflush", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 4, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     eax, 0", "mov     rcx, [fp+20h]", "cmp     [fp+28h], rcx", "ja      short locret_688D"], ["mov~eax,0", "mov~rcx,[fp+0]", "cmp~[fp+0],rcx", "ja~FOO"]], [2, 0, 3, 1, 0, 6, 1, 1, 0, 2, 0.16666666666666666, ["mov     rax, [fp+10h]", "sub     rax, [fp+8]", "mov     rdx, rax", "mov     eax, 0", "test    dword ptr [fp], 100h", "jz      short loc_688A"], ["mov~rax,[fp+0]", "sub~rax,[fp+0]", "mov~rdx,rax", "mov~eax,0", "test~<TAG>,0", "jz~FOO"]], [0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0.16666666666666666, ["add     rax, rdx"], ["add~rax,rdx"]], [0, 0, 2, 1, 0, 2, 0, 0, 0, 2, 0.0, ["mov     rax, [fp+58h]", "sub     rax, [fp+48h]"], ["mov~rax,[fp+0]", "sub~rax,[fp+0]"]], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 1, 2, 0, 5, 6, 1, 14, 0.06667, 0, 3], "succs": [[1, 4], [2, 3], [4], [2], []], "fname": "freadahead", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 3, 0, 2, 7, 0, 3, 0, 0, 0.14285714285714285, ["call    _fileno", "mov     edx, r12d; whence", "mov     rsi, offset; offset", "mov     edi, eax; fd", "call    _lseek", "cmp     pos, 0FFFFFFFFFFFFFFFFh", "jz      short loc_68F3"], ["call~FOO", "mov~edx,r12d", "mov~rsi,offset", "mov~edi,eax", "call~FOO", "cmp~pos,0", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, 2, 0.14285714285714285, ["cmp     qword ptr [rdi+48h], 0", "jnz     short loc_68A6"], ["cmp~[word ptr [rdi+0],0", "jnz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 1, 3, 0.09523809523809523, ["mov     rax, [rdi+20h]", "cmp     [rdi+28h], rax", "jnz     short loc_68A6"], ["mov~rax,[rdi+0]", "cmp~[rdi+0],rax", "jnz~FOO"]], [0, 0, 7, 0, 0, 9, 0, 1, 0, 4, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, fp", "mov     rbp, offset", "mov     r12d, edx", "mov     rax, [fp+8]", "cmp     [fp+10h], rax", "jz      short loc_68B9"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,fp", "mov~rbp,offset", "mov~r12d,edx", "mov~rax,[fp+0]", "cmp~[fp+0],rax", "jz~FOO"]], [0, 0, 1, 0, 1, 4, 0, 1, 1, -1, 0.07142857142857142, ["mov     edx, r12d; whence", "mov     offset, rbp; off", "mov     fp, rbx; stream", "call    _fseeko"], ["mov~edx,r12d", "mov~offset,rbp", "mov~fp,rbx", "call~FOO"]], [2, 0, 1, 0, 0, 4, 1, 1, 4, -1, 0.011904761904761904, ["and     dword ptr [fp], 0FFFFFFEFh", "mov     [fp+90h], pos", "mov     eax, 0", "jmp     short loc_68B4"], ["and~<TAG>,0", "mov~[fp+0],pos", "mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["pop     fp", "pop     offset", "pop     whence", "retn"], ["pop~fp", "pop~offset", "pop~whence", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, 0, 0.011904761904761904, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_68B4"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [3, 1, 9, 0, 8, 11, 2, 35, 0.05952, 0, 0], "succs": [[5, 7], [0, 4], [1, 4], [2, 4], [6], [6], [], [6]], "fname": "rpl_fseeko", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 1, 0, 0, 5, 0, 1, 0, 0, 0.0, ["mov     rax, [ay]", "cmp     [ax_0], rax", "setz    al", "movzx   eax, al", "jmp     short loc_6909"], ["mov~rax,<TAG>", "cmp~<TAG>,rax", "setz~al", "movzx~eax,al", "jmp~FOO"]], [1, 0, 2, 0, 0, 4, 0, 1, 0, 0, 0.0, ["mov     eax, 0", "mov     rdx, [ay+8]", "cmp     [ax_0+8], rdx", "jz      short loc_690D"], ["mov~eax,0", "mov~rdx,[ay+0]", "cmp~[ax_0+0],rdx", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 1, 0, 1, 0, 0.0, ["and     eax, 1", "retn"], ["and~eax,0", "retn"]]], "func_feature": [0, 1, 2, 0, 3, 3, 0, 11, 0.0, 0, 0], "succs": [[2], [0, 2], []], "fname": "AD_compare", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 0, 1, 0, 5, 0, 0, 0, 0, 0.0, ["mov     rax, [ax_0+8]", "mov     edx, 0", "div     table_size", "mov     rax, rdx", "retn"], ["mov~rax,[ax_0+0]", "mov~edx,0", "div~,table_size", "mov~rax,rdx", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 5, 0.0, 0, 1], "succs": [[]], "fname": "AD_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 0, 1, 0, 5, 0, 0, 0, 0, 0.0, ["mov     rax, [ax_0]", "mov     edx, 0", "div     table_size", "mov     rax, rdx", "retn"], ["mov~rax,<TAG>", "mov~edx,0", "div~,table_size", "mov~rax,rdx", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 5, 0.0, 0, 1], "succs": [[]], "fname": "dev_type_hash", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0.0, ["mov     rax, [ay]", "cmp     [ax_0], rax", "setz    al", "retn"], ["mov~rax,<TAG>", "cmp~<TAG>,rax", "setz~al", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 4, 0.0, 0, 0], "succs": [[]], "fname": "dev_type_compare", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     eax, 0FFFFFFFFh", "retn"], ["mov~eax,0", "retn"]], [0, 0, 2, 0, 0, 6, 0, 0, 0, 0, 0.0, ["mov     rax, [a]", "mov     rdx, [rax+80h]", "mov     rax, [b]", "mov     rax, [rax+80h]", "cmp     rdx, rax", "jb      short loc_6964"], ["mov~rax,<TAG>", "mov~rdx,[rax+0]", "mov~rax,<TAG>", "mov~rax,[rax+0]", "cmp~rdx,rax", "jb~FOO"]], [0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0.0, ["setnbe  al", "movzx   eax, al", "retn"], ["setnbe~al", "movzx~eax,al", "retn"]]], "func_feature": [0, 0, 0, 0, 3, 2, 0, 11, 0.0, 0, 0], "succs": [[], [0, 2], []], "fname": "fts_compare_ino", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 3, 0, 1, 5, 1, 2, 0, 0, 0.1, ["mov     [sp_0+30h], new_len", "mov     sp_0, [sp_0+20h]; ptr", "call    _realloc", "test    p, p", "jz      short loc_69BF"], ["mov~[sp_0+0],new_len", "mov~sp_0,[sp_0+0]", "call~FOO", "test~p,p", "jz~FOO"]], [0, 0, 5, 0, 0, 6, 0, 1, 0, 2, 0.0, ["push    rbx", "mov     rbx, sp_0", "mov     rax, [sp_0+30h]", "lea     more, [rax+more+100h]; size", "cmp     rax, new_len", "ja      short loc_699C"], ["push~rbx", "mov~rbx,sp_0", "mov~rax,[sp_0+0]", "lea~more,[rax+0]", "cmp~rax,new_len", "ja~FOO"]], [2, 0, 1, 0, 1, 5, 0, 2, 2, 0, 0.025, ["mov     rdi, [sp_0+20h]; ptr", "call    free", "mov     qword ptr [sp_0+20h], 0", "mov     eax, 0", "jmp     short loc_69BD"], ["mov~rdi,[sp_0+0]", "call~FOO", "mov~[word ptr [sp_0+0],0", "mov~eax,0", "jmp~FOO"]], [3, 0, 1, 0, 2, 6, 0, 2, 1, -1, 0.05, ["mov     rdi, [rdi+20h]; ptr", "call    free", "mov     qword ptr [sp_0+20h], 0", "call    ___errno_location", "mov     dword ptr [rax], 24h ; '$'", "mov     eax, 0"], ["mov~rdi,[rdi+0]", "call~FOO", "mov~[word ptr [sp_0+0],0", "call~FOO", "mov~<TAG>,0", "mov~eax,0"]], [1, 0, 1, 0, 0, 3, 0, 1, 2, -1, 0.025, ["mov     [sp_0+20h], p", "mov     eax, 1", "jmp     short loc_69BD"], ["mov~[sp_0+0],p", "mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, -1, 0.0, ["pop     sp_0", "retn"], ["pop~sp_0", "retn"]]], "func_feature": [4, 1, 8, 0, 6, 7, 2, 27, 0.03333, 0, 0], "succs": [[2, 4], [0, 3], [5], [5], [5], []], "fname": "fts_palloc", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 6, 0, 0, 2, 0, 1, 0, 0, 0.015810276679841896, ["cmp     qword ptr [p+58h], 0", "jle     short loc_6B1D"], ["cmp~[word ptr [p+0],0", "jle~FOO"]], [2, 0, 7, 0, 0, 4, 0, 0, 4, -1, 0.08514193316564857, ["mov     rdx, [p+88h]", "mov     rax, 0FFFFFFFFFFFFFFFFh", "cmp     rdx, 1", "jbe     short loc_6B1D"], ["mov~rdx,[p+0]", "mov~rax,0", "cmp~rdx,0", "jbe~FOO"]], [0, 0, 2, 0, 0, 2, 0, 0, 4, -1, 0.012678165049706553, ["mov     eax, [r12]", "mov     [p+40h], eax"], ["mov~eax,<TAG>", "mov~[p+0],eax"]], [1, 0, 4, 0, 1, 6, 1, 2, 4, -1, 0.014325068870523415, ["mov     rsi, [p+30h]; filename", "mov     rdx, sbp; stat_buf", "mov     edi, 1; ver", "call    ___lxstat", "test    eax, eax", "jnz     short loc_6A28"], ["mov~rsi,[p+0]", "mov~rdx,sbp", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 5, 0, 1, 4, 0, 2, 3, -1, 0.03886094143011139, ["call    ___errno_location", "mov     sp_0, rax", "cmp     dword ptr [rax], 2", "jz      short loc_6A6A"], ["call~FOO", "mov~sp_0,rax", "cmp~<TAG>,0", "jz~FOO"]], [2, 0, 1, 0, 0, 3, 0, 1, 5, -1, 0.004443645945622229, ["mov     dword ptr [r12], 0", "mov     eax, 0Dh", "jmp     short loc_6A65"], ["mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [1, 0, 17, 0, 1, 6, 1, 2, 2, 3, 0.1174092705713259, ["mov     p, [rbp+30h]; filename", "mov     rdx, sbp; stat_buf", "mov     edi, 1; ver", "call    ___xstat", "test    eax, eax", "jz      loc_6AAE"], ["mov~p,[rbp+0]", "mov~rdx,sbp", "mov~edi,0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 22, 0, 0, 2, 1, 1, 1, 4, 0.017367349383159657, ["test    byte ptr [sp_0+48h], 1", "jnz     short loc_6A02"], ["test~[yte ptr [sp_0+0],0", "jnz~FOO"]], [1, 0, 21, 0, 0, 2, 1, 1, 1, 4, 0.030063480656366028, ["test    byte ptr [r12+48h], 2", "jnz     short loc_6A02"], ["test~[yte ptr [r12+0],0", "jnz~FOO"]], [0, 0, 20, 0, 0, 2, 1, 1, 2, 4, 0.01401365432985986, ["test    dl, dl", "jz      loc_6A8E"], ["test~dl,dl", "jz~FOO"]], [0, 1, 5, 2, 0, 7, 1, 0, 6, -1, 0.0, ["mov     eax, [sp_0+48h]", "and     eax, 20h", "setz    al", "movzx   eax, al", "add     rax, rax", "sub     rdx, rax", "mov     rax, rdx"], ["mov~eax,[sp_0+0]", "and~eax,<STR>", "setz~al", "movzx~eax,al", "add~rax,rax", "sub~rdx,rax", "mov~rax,rdx"]], [2, 0, 14, 0, 1, 8, 1, 2, 3, 3, 0.024883219547251163, ["mov     follow, [rbp+30h]; filename", "mov     esi, [r12+2Ch]; fildes", "mov     r8d, 100h; flag", "mov     rcx, sbp; stat_buf", "mov     edi, 1; ver", "call    ___fxstatat", "test    eax, eax", "jnz     short loc_6ADC"], ["mov~follow,[rbp+0]", "mov~esi,[r12+0]", "mov~r8d,0", "mov~rcx,sbp", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 4, 0, 0, 4, 0, 1, 5, -1, 0.06735537190082644, ["mov     [p+68h], rax", "mov     eax, 1", "cmp     byte ptr [p+108h], 2Eh ; '.'", "jnz     loc_6A65"], ["mov~[p+0],rax", "mov~eax,0", "cmp~[yte ptr [p+0],0", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, -1, 0.043478260869565216, ["cmp     byte ptr [p+109h], 0", "jz      short loc_6B54"], ["cmp~[yte ptr [p+0],0", "jz~FOO"]], [2, 0, 11, 0, 0, 4, 1, 1, 3, 2, 0.12301473230326986, ["mov     eax, [p+90h]", "and     eax, 0F000h", "cmp     eax, 4000h", "jz      short loc_6AEB"], ["mov~eax,[p+0]", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, 1, 0.03194394538268056, ["cmp     eax, 0A000h", "jz      loc_6B66"], ["cmp~eax,0", "jz~FOO"]], [1, 1, 2, 0, 0, 4, 1, 1, 7, -1, 0.0009881422924901185, ["mov     edx, [p+108h]", "and     edx, 0FFFF00h", "cmp     edx, 2E00h", "jnz     loc_6A65"], ["mov~edx,[p+0]", "and~edx,0", "cmp~edx,<STR>", "jnz~FOO"]], [1, 0, 1, 0, 0, 5, 0, 1, 5, -1, 0.0031261228889687383, ["cmp     eax, 8000h", "setz    al", "movzx   eax, al", "lea     eax, [rax+rax*4+3]", "jmp     short loc_6A65"], ["cmp~eax,0", "setz~al", "movzx~eax,al", "lea~eax,[rax+0]", "jmp~FOO"]], [6, 0, 1, 1, 0, 11, 1, 0, 5, -1, 0.010881542699724517, ["mov     qword ptr [p+78h], 0", "mov     qword ptr [sbp+88h], 0", "lea     rdi, [sbp+8]", "and     rdi, 0FFFFFFFFFFFFFFF8h", "sub     sbp, rdi", "lea     ecx, [rbx+90h]", "shr     ecx, 3", "mov     ecx, ecx", "mov     eax, 0", "rep stosq", "mov     eax, 0Ah"], ["mov~[word ptr [p+0],0", "mov~[word ptr [sbp+0],0", "lea~rdi,[sbp+0]", "and~rdi,0", "sub~sbp,rdi", "lea~ecx,[rbx+0]", "shr~ecx,0", "mov~ecx,ecx", "mov~eax,0", "stosq~<TAG>,", "mov~eax,0"]], [0, 0, 2, 0, 1, 4, 0, 2, 4, -1, 0.010061085159899386, ["call    ___errno_location", "mov     eax, [rax]", "mov     [p+40h], eax", "jmp     err"], ["call~FOO", "mov~eax,<TAG>", "mov~[p+0],eax", "jmp~FOO"]], [3, 0, 1, 1, 0, 5, 1, 1, 7, -1, 0.0009881422924901185, ["cmp     qword ptr [p+58h], 1", "sbb     eax, eax", "and     eax, 0FFFFFFFCh", "add     eax, 5", "jmp     loc_6A65"], ["cmp~[word ptr [p+0],0", "sbb~eax,eax", "and~eax,0", "add~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 6, -1, 0.0, ["pop     rbx", "pop     p", "pop     r12", "retn"], ["pop~rbx", "pop~p", "pop~r12", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 5, 0, 0.0031261228889687383, ["mov     eax, 0Ch", "jmp     loc_6A65"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 23, 0, 0, 8, 0, 1, 0, 5, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     r12, sp_0", "mov     rbp, p", "lea     rbx, [p+78h]", "cmp     qword ptr [p+58h], 0", "jnz     short loc_69F2"], ["push~r12", "push~rbp", "push~rbx", "mov~r12,sp_0", "mov~rbp,p", "lea~rbx,[p+0]", "cmp~[word ptr [p+0],0", "jnz~FOO"]]], "func_feature": [5, 11, 24, 0, 24, 38, 8, 103, 0.02792, 0, 4], "succs": [[10, 12], [0, 12], [18], [2, 5], [2, 3], [21], [4, 14], [8, 6], [9, 6], [11, 6], [12], [19, 14], [13, 21], [16, 20], [1, 15], [17, 22], [20, 21], [21], [21], [18], [21], [], [21], [8, 7]], "fname": "fts_stat", "n_num": 24}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 4, 0, 0, 1, 0, 0, 0, 0, 0.10606060606060606, ["mov     rdx, ap"], ["mov~rdx,ap"]], [2, 0, 5, 1, 1, 10, 0, 2, 2, -1, 0.20454545454545456, ["mov     rdi, [sp_0+10h]; base", "mov     rcx, compare; compar", "mov     edx, 8; size", "mov     rsi, nitems; nmemb", "call    _qsort", "mov     r8, [sp_0+10h]", "mov     rax, [ap]", "mov     rcx, rbp", "sub     rcx, 1", "jz      short loc_6C1D"], ["mov~rdi,[sp_0+0]", "mov~rcx,compare", "mov~edx,0", "mov~rsi,nitems", "call~FOO", "mov~r8,[sp_0+0]", "mov~rax,<TAG>", "mov~rcx,rbp", "sub~rcx,0", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 0, 3, -1, 0.05303030303030303, ["mov     rdx, [r8]", "mov     qword ptr [rdx+10h], 0"], ["mov~rdx,<TAG>", "mov~[word ptr [rdx+0],0"]], [0, 0, 2, 0, 0, 1, 0, 0, 5, -1, 0.030303030303030304, ["lea     r8, [r8+rbp*8-8]"], ["lea~r8,[r8+0]"]], [1, 0, 11, 0, 0, 5, 0, 1, 1, 1, 0.030303030303030304, ["lea     head, [nitems+28h]", "mov     [sp_0+38h], rsi", "mov     rax, 1FFFFFFFFFFFFFFFh", "cmp     rsi, rax", "ja      loc_6C33"], ["lea~head,[nitems+0]", "mov~[sp_0+0],rsi", "mov~rax,0", "cmp~rsi,rax", "ja~FOO"]], [1, 0, 12, 1, 0, 11, 0, 0, 0, 2, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r12, sp_0", "mov     rbx, head", "mov     rbp, nitems", "mov     r13, [sp_0+40h]", "cmp     [sp_0+38h], nitems", "jnb     short loc_6BBF"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r12,sp_0", "mov~rbx,head", "mov~rbp,nitems", "mov~r13,[sp_0+0]", "cmp~[sp_0+0],nitems", "jnb~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 1, -1, 0.1893939393939394, ["mov     rax, [sp_0+10h]", "test    p, p", "jz      short loc_6BDA"], ["mov~rax,[sp_0+0]", "test~p,p", "jz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 3, -1, 0.10606060606060606, ["mov     [sp_0+10h], a"], ["mov~[sp_0+0],a"]], [2, 0, 4, 2, 0, 6, 0, 1, 4, -1, 0.07575757575757576, ["mov     rsi, [ap]", "mov     rdi, [ap+8]", "mov     [rsi+10h], rdi", "add     ap, 8", "sub     rcx, 1", "jnz     short loc_6C03"], ["mov~rsi,<TAG>", "mov~rdi,[ap+0]", "mov~[rsi+0],rdi", "add~ap,0", "sub~rcx,0", "jnz~FOO"]], [2, 0, 1, 0, 1, 6, 0, 2, 2, 0, 0.022727272727272728, ["mov     rdi, [sp_0+10h]; ptr", "call    free", "mov     qword ptr [sp_0+10h], 0", "mov     qword ptr [sp_0+38h], 0", "mov     rax, head", "jmp     short loc_6C28"], ["mov~rdi,[sp_0+0]", "call~FOO", "mov~[word ptr [sp_0+0],0", "mov~[word ptr [sp_0+0],0", "mov~rax,head", "jmp~FOO"]], [1, 0, 10, 1, 1, 5, 1, 2, 2, 1, 0.06818181818181818, ["shl     rsi, 3; size", "mov     sp_0, [sp_0+10h]; ptr", "call    _realloc", "test    a, a", "jz      short loc_6C33"], ["shl~rsi,0", "mov~sp_0,[sp_0+0]", "call~FOO", "test~a,a", "jz~FOO"]], [1, 0, 7, 1, 0, 5, 1, 1, 2, -1, 0.0, ["add     ap, 8", "mov     [ap-8], p", "mov     p, [p+10h]", "test    p, p", "jnz     short loc_6BC9"], ["add~ap,0", "mov~[ap-8]+0],p", "mov~p,[p+0]", "test~p,p", "jnz~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 3, -1, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     sp_0", "pop     compare", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~sp_0", "pop~compare", "retn"]]], "func_feature": [3, 3, 10, 0, 13, 19, 3, 62, 0.06818, 0, 7], "succs": [[8], [0, 2], [12], [2], [9, 10], [4, 6], [1, 11], [6], [8, 3], [12], [9, 7], [1, 11], []], "fname": "fts_sort", "n_num": 13}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 0, 1, 0, 7, 0, 0, 0, 0, 0.0, ["mov     rax, p", "add     rsp, 8", "pop     p", "pop     namelen", "pop     sp_0", "pop     name", "retn"], ["mov~rax,p", "add~rsp,0", "pop~p", "pop~namelen", "pop~sp_0", "pop~name", "retn"]], [2, 0, 2, 1, 1, 14, 2, 2, 0, 0, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r12, sp_0", "mov     r13, name", "mov     rbp, namelen", "lea     sp_0, [namelen+110h]", "and     rdi, 0FFFFFFFFFFFFFFF8h; size", "call    _malloc", "mov     rbx, rax", "test    p, p", "jz      short loc_6CD5"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r12,sp_0", "mov~r13,name", "mov~rbp,namelen", "lea~sp_0,[namelen+0]", "and~rdi,0", "call~FOO", "mov~rbx,rax", "test~p,p", "jz~FOO"]], [7, 0, 1, 0, 1, 15, 0, 1, 1, 0, 0.0, ["lea     rdi, [p+108h]; dest", "mov     rdx, namelen; n", "mov     rsi, name; src", "call    _memcpy", "mov     byte ptr [p+namelen+108h], 0", "mov     [p+60h], namelen", "mov     [p+50h], sp_0", "mov     rax, [sp_0+20h]", "mov     [p+38h], rax", "mov     dword ptr [p+40h], 0", "mov     qword ptr [p+18h], 0", "mov     word ptr [p+72h], 0", "mov     word ptr [p+74h], 3", "mov     qword ptr [p+20h], 0", "mov     qword ptr [p+28h], 0"], ["lea~rdi,[p+0]", "mov~rdx,namelen", "mov~rsi,name", "call~FOO", "mov~[yte ptr [p+0],0", "mov~[p+0],namelen", "mov~[p+0],sp_0", "mov~rax,[sp_0+0]", "mov~[p+0],rax", "mov~[word ptr [p+0],0", "mov~[word ptr [p+0],0", "mov~[ord ptr [p+0],0", "mov~[ord ptr [p+0],0", "mov~[word ptr [p+0],0", "mov~[word ptr [p+0],0"]]], "func_feature": [2, 2, 3, 0, 3, 3, 4, 36, 0.0, 0, 2], "succs": [[], [0, 2], [0]], "fname": "fts_alloc", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 1, 2, 0, 1, 7, 1, 2, 0, 0, 0.125, ["mov     edi, 20h ; ' '; size", "call    _malloc", "mov     rdi, rax; state", "mov     [fts+58h], rax", "mov     eax, 0", "test    rdi, rdi", "jz      short loc_6D1E"], ["mov~edi,<STR>", "call~FOO", "mov~rdi,rax", "mov~[fts+0],rax", "mov~eax,0", "test~rdi,rdi", "jz~FOO"]], [1, 0, 4, 0, 0, 4, 1, 1, 0, 2, 0.0, ["push    rbx", "mov     rbx, fts", "test    dword ptr [fts+48h], 102h", "jz      short loc_6D20"], ["push~rbx", "mov~rbx,fts", "test~[word ptr [fts+0],0", "jz~FOO"]], [2, 0, 1, 0, 1, 9, 1, 1, 1, -1, 0.041666666666666664, ["mov     r8, cs:data_freer; data_freer", "lea     rcx, AD_compare; comparator", "lea     rdx, AD_hash; hasher", "mov     esi, 0; tuning", "mov     edi, 1Fh; candidate", "call    hash_initialize", "mov     [fts+58h], rax", "test    rax, rax", "setnz   al"], ["mov~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~[fts+0],rax", "test~rax,rax", "setnz~al"]], [1, 0, 1, 0, 1, 3, 0, 2, 2, 0, 0.0, ["call    cycle_check_init", "mov     eax, 1", "jmp     short loc_6D1E"], ["call~FOO", "mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, -1, 0.0, ["pop     fts", "retn"], ["pop~fts", "retn"]]], "func_feature": [3, 3, 6, 0, 5, 6, 2, 25, 0.03333, 3, 0], "succs": [[3, 4], [0, 2], [4], [4], []], "fname": "setup_dir", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 1, 0, 1, 6, 0, 2, 1, 0, 0.08333333333333333, ["mov     edi, [sp_0+2Ch]; fd", "mov     edx, esi; flags", "mov     open_flags, dir; file", "mov     eax, 0", "call    openat_safer", "jmp     short loc_6D74"], ["mov~edi,[sp_0+0]", "mov~edx,esi", "mov~open_flags,dir", "mov~eax,0", "call~FOO", "jmp~FOO"]], [1, 0, 1, 0, 1, 3, 0, 1, 1, -1, 0.08333333333333333, ["mov     sp_0, dir; file", "mov     eax, 0", "call    open_safer"], ["mov~sp_0,dir", "mov~eax,0", "call~FOO"]], [5, 0, 3, 2, 0, 9, 3, 1, 0, 1, 0.0, ["sub     rsp, 8", "mov     rcx, dir", "mov     eax, [sp_0+48h]", "mov     esi, eax", "shl     esi, 0Dh", "and     esi, 20000h", "or      esi, 90900h; flags", "test    ah, 2", "jnz     short loc_6D79"], ["sub~rsp,0", "mov~rcx,dir", "mov~eax,[sp_0+0]", "mov~esi,eax", "shl~esi,0", "and~esi,0", "or~esi,0", "test~ah,0", "jnz~FOO"]]], "func_feature": [2, 3, 4, 0, 4, 4, 5, 20, 0.04167, 0, 3], "succs": [[], [0], [0], [1, 2]], "fname": "diropen", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 4, 0, 1, 5, 1, 2, 0, 0, 0.25, ["mov     rdi, p; ptr", "call    free", "mov     rbx, p", "test    p, p", "jz      short loc_6D9B"], ["mov~rdi,p", "call~FOO", "mov~rbx,p", "test~p,p", "jz~FOO"]], [0, 0, 4, 0, 0, 4, 1, 1, 1, 1, 0.25, ["mov     rbp, [p+10h]", "mov     rdi, [p+18h]; dirp", "test    rdi, rdi", "jz      short loc_6DA2"], ["mov~rbp,[p+0]", "mov~rdi,[p+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 4, 0, 1, 2, 0, 2, 2, 0, 0.0, ["call    _closedir", "jmp     short loc_6DA2"], ["call~FOO", "jmp~FOO"]], [1, 0, 4, 1, 0, 6, 1, 1, 0, 2, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbx, head", "test    p, p", "jnz     short loc_6DB2"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,head", "test~p,p", "jnz~FOO"]], [1, 0, 0, 1, 0, 4, 0, 0, 1, -1, 0.0, ["add     rsp, 8", "pop     p", "pop     rbp", "retn"], ["add~rsp,0", "pop~p", "pop~rbp", "retn"]]], "func_feature": [2, 3, 6, 0, 5, 7, 9, 21, 0.1, 0, 2], "succs": [[1, 4], [0, 2], [0], [1, 4], []], "fname": "fts_lfree", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[2, 0, 4, 1, 0, 3, 1, 1, 0, 0, 0.0, ["sub     rsp, 8", "test    dword ptr [sp_0+48h], 102h", "jz      short loc_6DE6"], ["sub~rsp,0", "test~[word ptr [sp_0+0],0", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 0, -1, 0.125, ["mov     sp_0, [sp_0+58h]; table", "test    rdi, rdi", "jz      short loc_6DE1"], ["mov~sp_0,[sp_0+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 1, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    hash_free"], ["call~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [0, 0, 1, 0, 1, 3, 0, 2, 0, 0, 0.041666666666666664, ["mov     sp_0, [sp_0+58h]; ptr", "call    free", "jmp     short loc_6DE1"], ["mov~sp_0,[sp_0+0]", "call~FOO", "jmp~FOO"]]], "func_feature": [2, 2, 5, 0, 5, 6, 3, 12, 0.03333, 0, 2], "succs": [[1, 4], [2, 3], [3], [], [3]], "fname": "free_dir", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["pop     fd_ring", "retn"], ["pop~fd_ring", "retn"]], [0, 0, 4, 0, 1, 4, 1, 2, 1, 0, 0.5, ["mov     rdi, fd_ring; ir", "call    i_ring_empty", "test    al, al", "jnz     short loc_6E16"], ["mov~rdi,fd_ring", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 0, 0, 0.0, ["push    rbx", "mov     rbx, fd_ring"], ["push~rbx", "mov~rbx,fd_ring"]], [0, 0, 4, 0, 1, 4, 1, 2, 2, 0, 0.16666666666666666, ["mov     rdi, fd_ring; ir", "call    i_ring_pop", "test    eax, eax", "js      short loc_6DF5"], ["mov~rdi,fd_ring", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 4, 0, 1, 3, 0, 2, 3, 0, 0.0, ["mov     edi, eax; fd", "call    _close", "jmp     short loc_6DF5"], ["mov~edi,eax", "call~FOO", "jmp~FOO"]]], "func_feature": [3, 2, 6, 0, 5, 6, 3, 15, 0.13333, 0, 0], "succs": [[], [0, 3], [1], [1, 4], [1]], "fname": "fd_ring_clear", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[2, 0, 19, 1, 0, 11, 2, 1, 0, 0, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 98h", "mov     rax, fs:28h", "mov     [rsp+0B8h+var_30], rax", "xor     eax, eax", "mov     rbx, [p+50h]", "test    byte ptr [sp_0+49h], 2", "jz      loc_6F12"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rbx,[p+0]", "test~[yte ptr [sp_0+0],0", "jz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 0, 2, 0.043859649122807015, ["mov     rax, [rsp+0B8h+fs_buf.f_type]", "jmp     short loc_6F17"], ["mov~rax,[rsp+0]", "jmp~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 0, 3, 0.10526315789473684, ["test    h, h", "jz      short loc_6EFC"], ["test~h,h", "jz~FOO"]], [1, 0, 8, 0, 1, 5, 1, 2, 0, 3, 0.08187134502923976, ["mov     edi, 10h; size", "call    _malloc", "mov     sp_0, rax", "test    t2, t2", "jz      short loc_6EFC"], ["mov~edi,0", "call~FOO", "mov~sp_0,rax", "test~t2,t2", "jz~FOO"]], [0, 0, 4, 0, 1, 3, 0, 2, 0, 3, 0.005847953216374269, ["mov     rdi, t2; ptr", "call    free", "jmp     short loc_6EFC"], ["mov~rdi,t2", "call~FOO", "jmp~FOO"]], [0, 0, 5, 0, 0, 2, 0, 1, 0, 3, 0.03216374269005848, ["cmp     t2, ent", "jnz     short loc_6F03"], ["cmp~t2,ent", "jnz~FOO"]], [0, 0, 11, 0, 1, 5, 1, 2, 0, 3, 0.11695906432748537, ["lea     rsi, [rsp+0B8h+fs_buf]; buf", "mov     edi, r13d; fildes", "call    _fstatfs", "test    eax, eax", "jnz     short loc_6F3F"], ["lea~rsi,[rsp+0]", "mov~edi,r13d", "call~FOO", "test~eax,eax", "jnz~FOO"]], [2, 0, 16, 0, 1, 10, 1, 2, 0, 4, 0.03216374269005848, ["mov     r8, cs:data_freer; data_freer", "lea     rcx, dev_type_compare; comparator", "lea     rdx, dev_type_hash; hasher", "mov     esi, 0; tuning", "mov     edi, 0Dh; candidate", "call    hash_initialize", "mov     h, rax", "mov     [sp_0+50h], rax", "test    h, h", "jnz     short loc_6E55"], ["mov~r8,<TAG>", "lea~rcx,<TAG>", "lea~rdx,<TAG>", "mov~esi,0", "mov~edi,0", "call~FOO", "mov~h,rax", "mov~[sp_0+0],rax", "test~h,h", "jnz~FOO"]], [0, 0, 17, 0, 0, 5, 1, 1, 0, 4, 0.04093567251461988, ["mov     rbp, p", "mov     r13d, esi", "mov     r12, [sp_0+50h]", "test    r12, r12", "jz      short loc_6E76"], ["mov~rbp,p", "mov~r13d,esi", "mov~r12,[sp_0+0]", "test~r12,r12", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 0, 1, 0.0935672514619883, ["mov     rdx, [rsp+0B8h+var_30]", "xor     rdx, fs:28h", "jnz     short loc_6F46"], ["mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 0, 1, 0, 2, 0.021929824561403508, ["mov     ent, [ent+8]", "jmp     loc_6F17"], ["mov~ent,[ent+0]", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 0, 2, 0.013157894736842105, ["mov     eax, 0", "jmp     short loc_6F17"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 0, 2, 0.008771929824561403, ["mov     eax, 0", "jmp     short loc_6F17"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 0, 2, 0.008771929824561403, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 13, 0, 0, 2, 1, 1, 0, 3, 0.12134502923976608, ["test    r13d, r13d", "js      loc_6F38"], ["test~r13d,r13d", "js~FOO"]], [0, 0, 15, 0, 1, 7, 1, 2, 0, 3, 0.054093567251461985, ["mov     rax, [p+78h]", "mov     [rsp+0B8h+tmp.st_dev], rax", "mov     rsi, rsp; entry", "mov     rdi, h; table", "call    hash_lookup", "test    ent, ent", "jz      short loc_6EA6"], ["mov~rax,[p+0]", "mov~<TAG>,rax", "mov~rsi,rsp", "mov~rdi,h", "call~FOO", "test~ent,ent", "jz~FOO"]], [0, 0, 7, 0, 1, 9, 1, 2, 0, 4, 0.07017543859649122, ["mov     t2, [p+78h]", "mov     [t2], rax", "mov     rax, [rsp+0B8h+fs_buf.f_type]", "mov     [t2+8], rax", "mov     rsi, t2; entry", "mov     rdi, h; table", "call    hash_insert", "test    ent, ent", "jz      short loc_6F08"], ["mov~t2,[p+0]", "mov~<TAG>,rax", "mov~rax,[rsp+0]", "mov~[t2+0],rax", "mov~rsi,t2", "mov~rdi,h", "call~FOO", "test~ent,ent", "jz~FOO"]], [1, 0, 0, 1, 0, 6, 0, 0, 0, -1, 0.0, ["add     rsp, 98h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, -1, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [8, 11, 24, 1, 20, 28, 2, 81, 0.04254, 4, 2], "succs": [[8, 14], [10], [1, 3], [1, 17], [1], [1, 19], [2, 13], [16, 15], [16, 7], [], [9, 18], [10], [10], [10], [10], [12, 6], [11, 15], [4, 5], [], []], "fname": "filesystem_type", "n_num": 20}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 10, 0, 0, 2, 0, 1, 0, 0, 0.07272727272727272, ["cmp     rax, 52654973h", "jle     short loc_6F88"], ["cmp~rax,0", "jle~FOO"]], [2, 0, 11, 1, 1, 4, 0, 2, 0, 1, 0.0, ["sub     rsp, 8", "call    filesystem_type", "cmp     rax, 52654973h", "jz      short loc_6FA4"], ["sub~rsp,0", "call~FOO", "cmp~rax,0", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 2, -1, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 5, -1, 0.00909090909090909, ["mov     eax, 1", "jmp     short loc_6F83"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.022727272727272728, ["mov     eax, 2", "jmp     short loc_6F83"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, -1, 0.04090909090909091, ["mov     eax, 0"], ["mov~eax,0"]], [1, 0, 6, 0, 0, 2, 0, 1, 2, 1, 0.05909090909090909, ["cmp     rax, 58465342h", "jz      short loc_6FA4"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 4, -1, 0.02727272727272727, ["cmp     rax, 5346414Fh", "jnz     short loc_6F9D"], ["cmp~rax,0", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 4, -1, 0.02727272727272727, ["test    rax, rax", "jz      short loc_6F7E"], ["test~rax,rax", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 2, -1, 0.06818181818181818, ["cmp     rax, 6969h", "jz      short loc_6F7E"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 4, 0, 0, 3, 0, 1, 3, -1, 0.05454545454545454, ["mov     edx, 0FF534D42h", "cmp     rax, rdx", "jz      short loc_6F7E"], ["mov~edx,0", "cmp~rax,rdx", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 3, -1, 0.045454545454545456, ["cmp     rax, 9FA0h", "jz      short loc_6F7E"], ["cmp~rax,0", "jz~FOO"]]], "func_feature": [1, 1, 11, 0, 12, 19, 2, 26, 0.03561, 0, 2], "succs": [[9, 6], [0, 4], [], [2], [2], [2], [10, 4], [3, 5], [3, 5], [11, 5], [5, 7], [8, 5]], "fname": "leaf_optimization_0", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0.008928571428571428, ["mov     [ent], ent", "mov     word ptr [ent+70h], 2"], ["mov~<TAG>,ent", "mov~[ord ptr [ent+0],0"]], [0, 0, 3, 0, 1, 5, 1, 2, 1, 1, 0.03571428571428571, ["lea     rsi, [rsi+78h]; sb", "mov     fts, [fts+58h]; state", "call    cycle_check", "test    al, al", "jz      short loc_704C"], ["lea~rsi,[rsi+0]", "mov~fts,[fts+0]", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, -1, 0.0, ["pop     ent", "pop     rbp", "pop     r12", "retn"], ["pop~ent", "pop~rbp", "pop~r12", "retn"]], [1, 1, 4, 0, 1, 6, 1, 2, 1, -1, 0.07142857142857142, ["mov     edi, 18h; size", "call    _malloc", "mov     r12, rax", "mov     eax, 0", "test    ad, ad", "jz      short loc_7047"], ["mov~edi,<STR>", "call~FOO", "mov~r12,rax", "mov~eax,0", "test~ad,ad", "jz~FOO"]], [1, 0, 3, 0, 1, 12, 0, 2, 2, -1, 0.07142857142857142, ["mov     rax, [ent+78h]", "mov     [ad], rax", "mov     rax, [ent+80h]", "mov     [ad+8], rax", "mov     [ad+10h], ent", "mov     rdi, [fts+58h]; table", "mov     rsi, ad; entry", "call    hash_insert", "mov     fts, rax", "mov     eax, 1", "cmp     ad, ad_from_table", "jz      short loc_7047"], ["mov~rax,[ent+0]", "mov~<TAG>,rax", "mov~rax,[ent+0]", "mov~[ad+0],rax", "mov~[ad+0],ent", "mov~rdi,[fts+0]", "mov~rsi,ad", "call~FOO", "mov~fts,rax", "mov~eax,0", "cmp~ad,ad_from_table", "jz~FOO"]], [1, 0, 2, 0, 1, 5, 1, 2, 3, -1, 0.05357142857142857, ["mov     rdi, ad; ptr", "call    free", "mov     eax, 0", "test    ad_from_table, ad_from_table", "jz      short loc_7047"], ["mov~rdi,ad", "call~FOO", "mov~eax,0", "test~ad_from_table,ad_from_table", "jz~FOO"]], [2, 0, 1, 0, 0, 5, 0, 1, 4, -1, 0.0, ["mov     rax, [ad_from_table+10h]", "mov     [ent], rax", "mov     word ptr [ent+70h], 2", "mov     eax, 1", "jmp     short loc_7047"], ["mov~rax,[ad_from_table+0]", "mov~<TAG>,rax", "mov~[ord ptr [ent+0],0", "mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, 0, 0.008928571428571428, ["mov     eax, 1", "jmp     short loc_7047"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 8, 0, 0, 7, 1, 1, 0, 2, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbp, fts", "mov     rbx, ent", "test    dword ptr [fts+48h], 102h", "jz      short loc_702D"], ["push~r12", "push~rbp", "push~rbx", "mov~rbp,fts", "mov~rbx,ent", "test~[word ptr [fts+0],0", "jz~FOO"]]], "func_feature": [4, 4, 11, 0, 9, 13, 2, 48, 0.02778, 0, 0], "succs": [[2], [0, 7], [], [2, 4], [2, 5], [2, 6], [2], [2], [1, 3]], "fname": "enter_dir", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 0, 1, 0, 5, 0, 0, 0, 0, 0.0, ["mov     [sp_0+2Ch], ebp", "add     rsp, 8", "pop     sp_0", "pop     fd", "retn"], ["mov~[sp_0+0],ebp", "add~rsp,0", "pop~sp_0", "pop~fd", "retn"]], [1, 0, 3, 0, 0, 2, 1, 1, 2, 2, 0.10416666666666666, ["test    byte ptr [rbx+48h], 4", "jnz     short loc_7078"], ["test~[yte ptr [rbx+0],0", "jnz~FOO"]], [0, 0, 2, 0, 1, 4, 1, 2, 2, -1, 0.0625, ["lea     rdi, [sp_0+60h]; ir", "call    i_ring_push", "test    eax, eax", "js      short loc_7078"], ["lea~rdi,[sp_0+0]", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 1, 0, 1, 3, 0, 2, 3, -1, 0.0, ["mov     edi, eax; fd", "call    _close", "jmp     short loc_7078"], ["mov~edi,eax", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 1, 3, 0, 2, 4, 0, 0.0, ["mov     edi, esi; fd", "call    _close", "jmp     short loc_7078"], ["mov~edi,esi", "call~FOO", "jmp~FOO"]], [0, 0, 2, 0, 0, 2, 1, 0, 3, 1, 0.05555555555555555, ["test    esi, esi", "jns     short loc_709D"], ["test~esi,esi", "jns~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 1, 4, 0.013888888888888888, ["cmp     esi, 0FFFFFF9Ch", "jnz     short loc_7082"], ["cmp~esi,0", "jnz~FOO"]], [1, 0, 9, 1, 0, 8, 0, 1, 0, 4, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbx, sp_0", "mov     ebp, esi", "mov     esi, [sp_0+2Ch]; val", "cmp     esi, ebp", "jnz     short loc_706A"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,sp_0", "mov~ebp,esi", "mov~esi,[sp_0+0]", "cmp~esi,ebp", "jnz~FOO"]], [0, 0, 6, 0, 0, 2, 1, 1, 1, 3, 0.16666666666666666, ["test    dl, dl", "jnz     short loc_7087"], ["test~dl,dl", "jnz~FOO"]]], "func_feature": [4, 4, 11, 0, 10, 14, 4, 32, 0.04028, 0, 2], "succs": [[], [0, 5], [0, 3], [0], [0], [0, 4], [], [9, 6], [9, 7], [1, 2]], "fname": "cwd_advance_fd", "n_num": 10}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[2, 0, 1, 0, 1, 4, 0, 2, 0, 0, 0.025, ["mov     edx, 1; chdir_down_one", "mov     esi, 0FFFFFF9Ch; fd", "call    cwd_advance_fd", "jmp     short loc_70E8"], ["mov~edx,0", "mov~esi,0", "call~FOO", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 1, 1, 1, 2, 0.1, ["test    ah, 2", "jnz     short loc_70D2"], ["test~ah,0", "jnz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0.05, ["mov     ebp, 0"], ["mov~ebp,0"]], [2, 0, 5, 1, 0, 8, 1, 1, 0, 2, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbx, sp_0", "mov     eax, [sp_0+48h]", "mov     ebp, eax", "and     ebp, 4", "jnz     short loc_70E3"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,sp_0", "mov~eax,[sp_0+0]", "mov~ebp,eax", "and~ebp,0", "jnz~FOO"]], [0, 0, 1, 0, 1, 6, 1, 2, 2, 1, 0.025, ["mov     edi, [sp_0+28h]; sp_0", "call    _fchdir", "test    eax, eax", "setnz   bpl", "movzx   ebp, bpl", "jmp     short loc_70E8"], ["mov~edi,[sp_0+0]", "call~FOO", "test~eax,eax", "setnz~bpl", "movzx~ebp,bpl", "jmp~FOO"]], [1, 0, 0, 1, 1, 7, 0, 1, 2, 0, 0.0, ["lea     rdi, [sp_0+60h]; fd_ring", "call    fd_ring_clear", "mov     eax, ebp", "add     rsp, 8", "pop     sp_0", "pop     fail", "retn"], ["lea~rdi,[sp_0+0]", "call~FOO", "mov~eax,ebp", "add~rsp,0", "pop~sp_0", "pop~fail", "retn"]]], "func_feature": [3, 3, 7, 0, 6, 7, 3, 28, 0.03333, 0, 2], "succs": [[5], [0, 4], [5], [1, 2], [5], []], "fname": "restore_initial_cwd", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 24, 0, 1, 5, 1, 2, 0, 0, 0.015291607396870556, ["lea     r14, [sp_0+60h]", "mov     rdi, r14; ir", "call    i_ring_empty", "test    al, al", "jz      short loc_71AD"], ["lea~r14,[sp_0+0]", "mov~rdi,r14", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 25, 0, 0, 2, 1, 1, 4, 5, 0.022048364153627313, ["test    ah, 2", "jz      short loc_7179"], ["test~ah,0", "jz~FOO"]], [2, 0, 14, 0, 0, 8, 1, 1, 6, 4, 0.004267425320056899, ["mov     ecx, 3", "lea     rdi, dir; \"..\"", "mov     rsi, rbx", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     short loc_71CF"], ["mov~ecx,0", "lea~rdi,<TAG>", "mov~rsi,rbx", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [0, 0, 15, 0, 0, 2, 1, 1, 5, 4, 0.04054054054054054, ["test    rbx, rbx", "jz      short loc_71CF"], ["test~rbx,rbx", "jz~FOO"]], [1, 0, 14, 0, 0, 3, 0, 1, 8, 5, 0.01256519677572309, ["mov     r12d, r14d", "mov     r15d, 1", "jmp     short loc_7218"], ["mov~r12d,r14d", "mov~r15d,0", "jmp~FOO"]], [1, 0, 16, 0, 0, 2, 1, 1, 7, 5, 0.024063537221431956, ["test    byte ptr [sp_0+48h], 2", "jnz     loc_7281"], ["test~[yte ptr [sp_0+0],0", "jnz~FOO"]], [2, 0, 3, 0, 1, 7, 1, 2, 7, 2, 0.017069701280227598, ["xor     r15d, 1", "movzx   edx, r15b; chdir_down_one", "mov     esi, r14d; fd", "mov     rdi, sp_0; sp_0", "call    cwd_advance_fd", "mov     ebx, 0", "jmp     short loc_72D7"], ["xor~r15d,0", "movzx~edx,r15b", "mov~esi,r14d", "mov~rdi,sp_0", "call~FOO", "mov~ebx,0", "jmp~FOO"]], [1, 0, 7, 0, 0, 2, 1, 1, 6, 3, 0.0559506875296349, ["test    byte ptr [sp_0+49h], 2", "jnz     loc_729F"], ["test~[yte ptr [sp_0+0],0", "jnz~FOO"]], [0, 0, 18, 0, 1, 6, 1, 1, 4, 3, 0.05844001896633475, ["mov     rsi, dir; dir", "mov     rdi, sp_0; sp_0", "call    diropen", "mov     r14d, eax", "test    eax, eax", "jns     short loc_71F3"], ["mov~rsi,dir", "mov~rdi,sp_0", "call~FOO", "mov~r14d,eax", "test~eax,eax", "jns~FOO"]], [1, 0, 19, 0, 0, 2, 0, 1, 3, 4, 0.007823613086770981, ["mov     r15d, 0", "jmp     loc_717F"], ["mov~r15d,0", "jmp~FOO"]], [1, 0, 19, 0, 0, 1, 0, 0, 5, 4, 0.03141299193930773, ["mov     r15d, 1"], ["mov~r15d,0"]], [1, 0, 3, 0, 0, 2, 0, 1, 5, 2, 0.017069701280227598, ["mov     ebx, 0FFFFFFFFh", "jmp     loc_72D7"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 11, 0, 0, 3, 0, 1, 7, 5, 0.021337126600284497, ["mov     rax, [rsp+0D8h+sb.st_ino]", "cmp     [p+80h], rax", "jnz     short loc_7236"], ["mov~rax,[rsp+0]", "cmp~[p+0],rax", "jnz~FOO"]], [0, 0, 12, 0, 0, 3, 0, 1, 6, 5, 0.04694167852062589, ["mov     rax, [rsp+0D8h+sb.st_dev]", "cmp     [p+78h], rax", "jz      short loc_728C"], ["mov~rax,<TAG>", "cmp~[p+0],rax", "jz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 1, 8, 4, 0.009601706970128023, ["jmp     loc_71CF"], ["jmp~FOO"]], [1, 0, 3, 0, 1, 4, 0, 2, 4, 2, 0.0010668563300142249, ["mov     edi, r12d; fd", "call    _close", "mov     ebx, 0", "jmp     loc_72D7"], ["mov~edi,r12d", "call~FOO", "mov~ebx,0", "jmp~FOO"]], [0, 0, 5, 0, 0, 2, 1, 0, 3, 3, 0.0035561877667140826, ["test    r12d, r12d", "jns     loc_719B"], ["test~r12d,r12d", "jns~FOO"]], [1, 0, 13, 0, 1, 6, 1, 2, 5, 4, 0.09803224276908487, ["mov     rdx, rsp; stat_buf", "mov     esi, r14d; fildes", "mov     edi, 1; ver", "call    ___fxstat", "test    eax, eax", "jnz     short loc_7241"], ["mov~rdx,rsp", "mov~esi,r14d", "mov~edi,0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 16, 0, 0, 2, 1, 1, 4, 5, 0.11960644855381697, ["test    byte ptr [sp_0+48h], 2", "jnz     short loc_7218"], ["test~[yte ptr [sp_0+0],0", "jnz~FOO"]], [1, 0, 38, 1, 0, 16, 2, 1, 0, 5, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 0A8h", "mov     rbp, sp_0", "mov     r13, p", "mov     r12d, edx", "mov     rbx, dir", "mov     rax, fs:28h", "mov     [rsp+0D8h+var_40], rax", "xor     eax, eax", "test    dir, dir", "jz      loc_72B9"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,sp_0", "mov~r13,p", "mov~r12d,edx", "mov~rbx,dir", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~dir,dir", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 0, 7, 2, 0.03698435277382646, ["test    r12d, r12d", "jns     loc_72D7"], ["test~r12d,r12d", "jns~FOO"]], [0, 0, 5, 0, 1, 4, 0, 2, 7, 3, 0.008297771455666193, ["mov     edi, r14d; fd", "call    _fchdir", "mov     ebx, eax", "jmp     short bail"], ["mov~edi,r14d", "call~FOO", "mov~ebx,eax", "jmp~FOO"]], [1, 0, 5, 0, 0, 1, 0, 0, 6, 3, 0.04148885727833096, ["mov     ebx, 0FFFFFFFFh"], ["mov~ebx,0"]], [0, 0, 23, 0, 1, 5, 1, 2, 6, 5, 0.019084874348032244, ["mov     rdi, r14; ir", "call    i_ring_pop", "mov     r14d, eax", "test    eax, eax", "js      short loc_7179"], ["mov~rdi,r14", "call~FOO", "mov~r14d,eax", "test~eax,eax", "js~FOO"]], [1, 0, 6, 0, 1, 2, 0, 1, 7, 4, 0.007467994310099574, ["call    ___errno_location", "mov     dword ptr [rax], 2"], ["call~FOO", "mov~<TAG>,0"]], [1, 0, 26, 0, 0, 3, 1, 1, 1, 4, 0.029516358463726886, ["mov     eax, [sp_0+48h]", "test    al, 4", "jz      loc_71E5"], ["mov~eax,[sp_0+0]", "test~al,0", "jz~FOO"]], [2, 0, 37, 0, 0, 8, 1, 1, 1, 5, 0.007112375533428165, ["mov     ecx, 3", "lea     sp_0, dir; \"..\"", "mov     p, dir", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "jnz     loc_72B9"], ["mov~ecx,0", "lea~sp_0,<TAG>", "mov~p,dir", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "jnz~FOO"]], [1, 0, 6, 0, 0, 2, 1, 1, 2, 3, 0.017069701280227598, ["test    ah, 2", "jz      short loc_72D2"], ["test~ah,0", "jz~FOO"]], [1, 0, 32, 0, 0, 3, 1, 1, 2, 4, 0.02027027027027027, ["mov     eax, [sp_0+48h]", "test    al, 4", "jnz     loc_72C4"], ["mov~eax,[sp_0+0]", "test~al,0", "jnz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 0, 8, 4, 0.011498340445708865, ["mov     r12d, eax", "mov     r15d, 1"], ["mov~r12d,eax", "mov~r15d,0"]], [1, 0, 3, 0, 0, 1, 0, 0, 3, 2, 0.011735419630156473, ["mov     ebx, 0"], ["mov~ebx,0"]], [0, 0, 27, 0, 0, 2, 1, 0, 3, 6, 0.033428165007112376, ["test    edx, edx", "jns     loc_7273"], ["test~edx,edx", "jns~FOO"]], [0, 0, 3, 0, 2, 7, 0, 3, 8, 2, 0.0, ["call    ___errno_location", "mov     sp_0, rax", "mov     r12d, [rax]", "mov     edi, r14d; fd", "call    _close", "mov     [rbp+0], r12d", "jmp     short loc_72D7"], ["call~FOO", "mov~sp_0,rax", "mov~r12d,<TAG>", "mov~edi,r14d", "call~FOO", "mov~[rbp+0],r12d", "jmp~FOO"]], [0, 0, 21, 0, 0, 2, 1, 1, 2, 5, 0.033428165007112376, ["test    r12d, r12d", "js      short loc_7268"], ["test~r12d,r12d", "js~FOO"]], [1, 0, 17, 0, 0, 3, 0, 1, 4, 6, 0.024893314366998577, ["mov     r14d, edx", "mov     r15d, 1", "jmp     loc_71F3"], ["mov~r14d,edx", "mov~r15d,0", "jmp~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 4, 1, 0.05120910384068279, ["mov     eax, ebx", "mov     rdx, [rsp+0D8h+var_40]", "xor     rdx, fs:28h", "jnz     short loc_72FE"], ["mov~eax,ebx", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 0, 3, 6, 0.03485064011379801, ["mov     r14d, r12d", "mov     r15d, 0"], ["mov~r14d,r12d", "mov~r15d,0"]], [1, 0, 0, 1, 0, 8, 0, 0, 5, -1, 0.0, ["add     rsp, 0A8h", "pop     rbx", "pop     rbp", "pop     r12", "pop     p", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~p", "pop~r14", "pop~r15", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [11, 22, 38, 1, 39, 59, 4, 141, 0.02551, 2, 2], "succs": [[10, 23], [0, 10], [17, 7], [2, 7], [17], [4, 29], [35], [21, 6], [18, 11], [8], [8], [35], [24, 14], [24, 12], [7], [35], [30, 15], [13, 22], [17, 3], [25, 26], [32, 35], [20], [20], [10, 5], [22], [33, 27], [25, 28], [16, 30], [27, 31], [7], [35], [1, 34], [35], [9, 36], [18], [37, 38], [18], [], []], "fname": "fts_safe_changedir", "n_num": 39}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 5, 0, 1, 9, 1, 2, 1, 3, 0.01282051282051282, ["mov     rax, [ent+78h]", "mov     [rsp+28h+obj.dev], rax", "mov     rax, [ent+80h]", "mov     [rsp+28h+obj.ino], rax", "mov     ent, rsp; entry", "mov     fts, [fts+58h]; table", "call    hash_delete", "test    found, found", "jz      short loc_73AB"], ["mov~rax,[ent+0]", "mov~<TAG>,rax", "mov~rax,[ent+0]", "mov~[rsp+0],rax", "mov~ent,rsp", "mov~fts,[fts+0]", "call~FOO", "test~found,found", "jz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.11538461538461538, ["mov     rax, [rsp+28h+var_10]", "xor     rax, fs:28h", "jnz     short loc_73B5"], ["mov~rax,[rsp+0]", "xor~rax,<TAG>", "jnz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 1, 2, 0.05769230769230769, ["mov     rax, [ent+8]", "test    parent, parent", "jz      short loc_7396"], ["mov~rax,[ent+0]", "test~parent,parent", "jz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 2, 2, 0.0641025641025641, ["cmp     qword ptr [parent+58h], 0", "js      short loc_7396"], ["cmp~[word ptr [parent+0],0", "js~FOO"]], [0, 0, 5, 0, 0, 3, 0, 1, 4, 2, 0.07051282051282051, ["mov     rcx, [ent+80h]", "cmp     [rdx], rcx", "jnz     short loc_7396"], ["mov~rcx,[ent+0]", "cmp~<TAG>,rcx", "jnz~FOO"]], [0, 0, 4, 0, 0, 3, 0, 1, 5, 2, 0.03205128205128205, ["mov     rcx, [ent+78h]", "cmp     [rdx+8], rcx", "jnz     short loc_7396"], ["mov~rcx,[ent+0]", "cmp~[rdx+0],rcx", "jnz~FOO"]], [0, 0, 3, 0, 0, 6, 0, 1, 6, 2, 0.0, ["mov     rcx, [parent+78h]", "mov     [rdx+8], rcx", "mov     rdx, [fts+58h]", "mov     parent, [parent+80h]", "mov     [rdx], rax", "jmp     short loc_7396"], ["mov~rcx,[parent+0]", "mov~[rdx+0],rcx", "mov~rdx,[fts+0]", "mov~parent,[parent+0]", "mov~<TAG>,rax", "jmp~FOO"]], [0, 0, 3, 0, 1, 2, 0, 1, 2, 2, 0.019230769230769232, ["mov     rdi, found; ptr", "call    free"], ["mov~rdi,found", "call~FOO"]], [1, 0, 7, 0, 0, 3, 0, 1, 3, 3, 0.07692307692307693, ["mov     rdx, [fts+58h]", "cmp     qword ptr [rdx+10h], 0", "jz      short loc_73B0"], ["mov~rdx,[fts+0]", "cmp~[word ptr [rdx+0],0", "jz~FOO"]], [2, 0, 13, 1, 0, 6, 2, 1, 0, 3, 0.0, ["sub     rsp, 28h", "mov     rax, fs:28h", "mov     [rsp+28h+var_10], rax", "xor     eax, eax", "test    dword ptr [fts+48h], 102h", "jnz     short loc_7369"], ["sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~[word ptr [fts+0],0", "jnz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 3, -1, 0.0, ["add     rsp, 28h", "retn"], ["add~rsp,0", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [5, 5, 14, 1, 14, 18, 4, 45, 0.03205, 1, 2], "succs": [[], [0, 8], [11, 13], [2, 4], [9, 2], [2, 6], [2, 7], [2], [2], [12, 5], [1, 3], [], [], []], "fname": "leave_dir", "n_num": 14}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[2, 0, 115, 0, 0, 3, 0, 1, 0, 0, 0.204227145403616, ["mov     qword ptr [p+10h], 0", "cmp     [rsp+0A8h+head], 0", "jz      loc_7BD7"], ["mov~[word ptr [p+0],0", "cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 115, 0, 1, 6, 0, 2, 15, 12, 0.0659112129700365, ["mov     edx, 0; follow", "mov     rsi, p; p", "mov     rdi, sp_0; sp_0", "call    fts_stat", "mov     [p+70h], ax", "jmp     loc_79F7"], ["mov~edx,0", "mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "mov~[p+0],ax", "jmp~FOO"]], [0, 0, 115, 0, 0, 1, 0, 0, 18, 12, 0.13279857397504458, ["mov     [p+0A8h], rax"], ["mov~[p+0],rax"]], [1, 0, 4, 0, 0, 2, 0, 0, 13, 2, 0.005772005772005772, ["cmp     nitems, 1", "jbe     loc_78FD"], ["cmp~nitems,0", "jbe~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 12, 2, 0.01282149223325694, ["cmp     qword ptr [sp_0+40h], 0", "jz      loc_78FD"], ["cmp~[word ptr [sp_0+0],0", "jz~FOO"]], [1, 0, 115, 0, 0, 3, 0, 1, 21, 10, 0.00819115524997878, ["mov     edx, 0FF534D42h", "cmp     rax, rdx", "jz      short loc_7C1D"], ["mov~edx,0", "cmp~rax,rdx", "jz~FOO"]], [1, 0, 115, 0, 1, 5, 0, 2, 20, 10, 0.016254986843222137, ["mov     esi, [rsp+0A8h+dir_fd]; fd", "mov     rdi, cur; p", "call    filesystem_type", "cmp     rax, 1021994h", "jz      short loc_7C1D"], ["mov~esi,[rsp+0]", "mov~rdi,cur", "call~FOO", "cmp~rax,0", "jz~FOO"]], [2, 0, 118, 0, 0, 3, 0, 1, 13, 9, 0.03004838298955946, ["mov     qword ptr [cur+18h], 0", "mov     [rsp+0A8h+descend], 0", "jmp     loc_7421"], ["mov~[word ptr [cur+0],0", "mov~[rsp+0],0", "jmp~FOO"]], [3, 0, 121, 0, 1, 6, 2, 2, 12, 10, 0.018207282913165267, ["or      word ptr [cur+72h], 1", "mov     rdi, [cur+18h]; dirp", "call    _closedir", "mov     qword ptr [cur+18h], 0", "test    byte ptr [sp_0+49h], 2", "jz      short loc_7603"], ["or~[ord ptr [cur+0],0", "mov~rdi,[cur+0]", "call~FOO", "mov~[word ptr [cur+0],0", "test~[yte ptr [sp_0+0],0", "jz~FOO"]], [0, 0, 119, 0, 1, 2, 0, 2, 14, 10, 0.0, ["call    _close", "jmp     loc_7603"], ["call~FOO", "jmp~FOO"]], [0, 0, 120, 0, 0, 3, 1, 0, 13, 10, 0.001103471691706986, ["mov     edi, [rsp+0A8h+dir_fd]; fd", "test    edi, edi", "jns     loc_7738"], ["mov~edi,[rsp+0]", "test~edi,edi", "jns~FOO"]], [1, 0, 115, 0, 0, 2, 0, 1, 22, 10, 0.0041167982344452935, ["cmp     rax, 6969h", "jz      short loc_7C1D"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 115, 0, 0, 2, 0, 1, 23, 9, 0.0023767082590612004, ["mov     [rsp+0A8h+sort_by_inode], 1", "jmp     loc_7A21"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 145, 0, 0, 2, 0, 1, 3, 4, 0.0, ["mov     edi, [sp_0+2Ch]", "jmp     loc_7536"], ["mov~edi,[sp_0+0]", "jmp~FOO"]], [2, 1, 146, 0, 0, 5, 1, 1, 2, 4, 0.01977760801290213, ["mov     type_0, [cur+30h]; dir", "and     eax, 204h", "mov     edi, 0FFFFFF9Ch; dir_fd", "cmp     eax, 200h", "jz      loc_7615"], ["mov~type_0,[cur+0]", "and~eax,0", "mov~edi,0", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 115, 0, 0, 2, 0, 1, 18, 9, 0.20626432391138275, ["cmp     nitems, 2710h", "jz      loc_7BE1"], ["cmp~nitems,0", "jz~FOO"]], [0, 0, 115, 0, 0, 2, 0, 1, 17, 10, 0.10037348272642391, ["mov     [rsp+0A8h+head], p", "jmp     loc_7A14"], ["mov~[rsp+0],p", "jmp~FOO"]], [0, 0, 115, 0, 0, 2, 0, 0, 17, 10, 0.10037348272642391, ["mov     rax, [rsp+0A8h+tail]", "mov     [rax+10h], p"], ["mov~rax,[rsp+0]", "mov~[rax+0],p"]], [4, 0, 118, 1, 0, 6, 1, 0, 2, 9, 0.009761480349715645, ["cmp     qword ptr [sp_0+40h], 1", "sbb     rax, rax", "and     eax, 186A1h", "sub     rax, 1", "mov     [rsp+0A8h+max_entries], rax", "mov     [rsp+0A8h+descend], 1"], ["cmp~[word ptr [sp_0+0],0", "sbb~rax,rax", "and~eax,0", "sub~rax,0", "mov~[rsp+0],rax", "mov~[rsp+0],0"]], [0, 0, 121, 0, 1, 4, 1, 2, 1, 3, 0.005135387488328665, ["call    _dirfd", "mov     [rsp+0A8h+dir_fd], eax", "test    eax, eax", "js      loc_74B5"], ["call~FOO", "mov~[rsp+0],eax", "test~eax,eax", "js~FOO"]], [0, 0, 38, 0, 0, 4, 1, 1, 8, 9, 0.04626092861386979, ["mov     rcx, [sp_0+20h]", "mov     rax, [sp_0+8]", "test    rax, rax", "jnz     short loc_7C70"], ["mov~rcx,[sp_0+0]", "mov~rax,[sp_0+0]", "test~rax,rax", "jnz~FOO"]], [1, 0, 39, 0, 0, 2, 0, 1, 7, 7, 0.16615737203972497, ["cmp     [rsp+0A8h+doadjust], 0", "jnz     loc_7C4D"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 115, 0, 0, 2, 0, 1, 21, 9, 0.01175621763857058, ["mov     [rsp+0A8h+sort_by_inode], 0", "jmp     loc_7A21"], ["mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 3, 0, 1, 6, 0, 2, 14, 2, 0.0, ["mov     rdx, nitems; nitems", "mov     rsi, [rsp+0A8h+head]; head", "mov     rdi, sp_0; sp_0", "call    fts_sort", "mov     [rsp+0A8h+head], rax", "jmp     loc_78FD"], ["mov~rdx,nitems", "mov~rsi,[rsp+0]", "mov~rdi,sp_0", "call~FOO", "mov~[rsp+0],rax", "jmp~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 13, 3, 0.005772005772005772, ["cmp     ax, 4", "jz      short loc_7D35"], ["cmp~ax,0", "jz~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 12, 3, 0.01145912910618793, ["movzx   eax, word ptr [cur+70h]", "cmp     ax, 7", "jz      short loc_7D35"], ["movzx~eax,[ord ptr [cur+0]", "cmp~ax,0", "jz~FOO"]], [1, 0, 115, 1, 0, 3, 0, 0, 19, 8, 0.21101774042950514, ["add     nitems, 1", "cmp     nitems, [rsp+0A8h+max_entries]", "jnb     loc_7C27"], ["add~nitems,0", "cmp~nitems,[rsp+0]", "jnb~FOO"]], [1, 0, 115, 0, 0, 2, 0, 1, 19, 9, 0.020202020202020204, ["cmp     qword ptr [sp_0+40h], 0", "jnz     loc_7A21"], ["cmp~[word ptr [sp_0+0],0", "jnz~FOO"]], [1, 0, 43, 0, 0, 2, 0, 1, 9, 10, 0.003034547152194211, ["mov     eax, 7", "jmp     loc_7774"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 45, 0, 0, 3, 1, 1, 8, 11, 0.012732365673542145, ["mov     [cur+40h], eax", "test    nitems, nitems", "jnz     loc_7828"], ["mov~[cur+0],eax", "test~nitems,nitems", "jnz~FOO"]], [2, 0, 44, 0, 0, 3, 0, 1, 9, 10, 0.003034547152194211, ["mov     eax, 4", "cmp     [rsp+0A8h+dp], 0", "jnz     loc_7828"], ["mov~eax,0", "cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 115, 0, 0, 1, 0, 0, 11, 7, 0.14090484678719972, ["mov     [rsp+0A8h+tail], rbx"], ["mov~[rsp+0],rbx"]], [0, 0, 115, 0, 0, 2, 0, 1, 11, 8, 0.002206943383413972, ["mov     rbx, [rsp+0A8h+tail]", "jmp     loc_7A30"], ["mov~rbx,[rsp+0]", "jmp~FOO"]], [0, 0, 115, 0, 0, 2, 0, 1, 10, 8, 0.00789406671759613, ["mov     rbx, [rsp+0A8h+tail]", "jmp     loc_7A30"], ["mov~rbx,[rsp+0]", "jmp~FOO"]], [1, 0, 115, 0, 0, 2, 0, 1, 9, 5, 0.018079959256429846, ["cmp     byte ptr [rax+14h], 0", "jz      loc_7C35"], ["cmp~[yte ptr [rax+0],0", "jz~FOO"]], [1, 0, 115, 0, 0, 2, 0, 1, 8, 4, 0.019989814107461167, ["cmp     byte ptr [rax+13h], 2Eh ; '.'", "jz      loc_7832"], ["cmp~[yte ptr [rax+0],0", "jz~FOO"]], [1, 0, 115, 0, 0, 2, 0, 1, 5, 6, 0.3110092521857228, ["cmp     qword ptr [cur+18h], 0", "jz      loc_7C3F"], ["cmp~[word ptr [cur+0],0", "jz~FOO"]], [7, 0, 115, 3, 0, 18, 0, 1, 4, 7, 0.16454460572107632, ["mov     rax, [rsp+0A8h+len]", "add     rax, 1", "mov     [rsp+0A8h+var_90], rax", "mov     rdx, [sp_0+30h]", "sub     rdx, len_0", "mov     [rsp+0A8h+maxlen], rdx", "mov     len_0, [cur+58h]", "add     rax, 1", "mov     [rsp+0A8h+level], rax", "mov     [rsp+0A8h+sort_by_inode], 0", "mov     [rsp+0A8h+doadjust], 0", "mov     [rsp+0A8h+tail], 0", "mov     r15d, 0", "mov     [rsp+0A8h+head], 0", "mov     level_0, cur", "mov     cur, r15", "mov     r15, cur", "jmp     loc_7A35"], ["mov~rax,[rsp+0]", "add~rax,0", "mov~[rsp+0],rax", "mov~rdx,[sp_0+0]", "sub~rdx,len_0", "mov~[rsp+0],rdx", "mov~len_0,[cur+0]", "add~rax,0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~[rsp+0],0", "mov~r15d,0", "mov~[rsp+0],0", "mov~level_0,cur", "mov~cur,r15", "mov~r15,cur", "jmp~FOO"]], [1, 0, 115, 0, 0, 2, 0, 1, 10, 4, 0.006705712588065529, ["cmp     word ptr [rax+14h], 2Eh ; '.'", "jnz     loc_7A77"], ["cmp~[ord ptr [rax+0],0", "jnz~FOO"]], [0, 0, 34, 0, 0, 2, 0, 1, 9, 8, 0.03352856294032765, ["mov     rax, [rsp+0A8h+head]", "jmp     short loc_7C9D"], ["mov~rax,[rsp+0]", "jmp~FOO"]], [0, 0, 38, 0, 0, 4, 1, 1, 10, 9, 0.0030133265427383076, ["mov     [rax+38h], rcx", "mov     rax, [rax+10h]", "test    rax, rax", "jz      short loc_7C5C"], ["mov~[rax+0],rcx", "mov~rax,[rax+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 40, 0, 0, 4, 0, 1, 6, 8, 0.06752397928868517, ["mov     rax, cur", "mov     cur, nitems", "mov     nitems, cur", "jmp     break_without_closedir"], ["mov~rax,cur", "mov~cur,nitems", "mov~nitems,cur", "jmp~FOO"]], [3, 0, 117, 0, 0, 9, 1, 1, 3, 8, 0.15749936338171633, ["mov     rax, [cur+48h]", "lea     rsi, [rax-1]", "mov     rdx, [cur+38h]", "cmp     byte ptr [rdx+rax-1], 2Fh ; '/'", "cmovz   rax, rsi", "mov     [rsp+0A8h+len], rax", "mov     [rsp+0A8h+cp], 0", "test    byte ptr [sp_0+48h], 4", "jz      short loc_745D"], ["mov~rax,[cur+0]", "lea~rsi,[rax-1]+0]", "mov~rdx,[cur+0]", "cmp~[yte ptr [rdx+0],0", "cmovz~rax,rsi", "mov~[rsp+0],rax", "mov~[rsp+0],0", "test~[yte ptr [sp_0+0],0", "jz~FOO"]], [5, 0, 136, 1, 0, 8, 1, 1, 6, 9, 0.057338086749851455, ["cmp     qword ptr [sp_0+40h], 1", "sbb     rax, rax", "and     eax, 186A1h", "sub     rax, 1", "mov     [rsp+0A8h+max_entries], rax", "mov     [rsp+0A8h+descend], 0", "cmp     [rsp+0A8h+type], 2", "jz      loc_7421"], ["cmp~[word ptr [sp_0+0],0", "sbb~rax,rax", "and~eax,0", "sub~rax,0", "mov~[rsp+0],rax", "mov~[rsp+0],0", "cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 131, 0, 0, 2, 1, 1, 10, 9, 0.01566080977845684, ["test    al, al", "jz      loc_7421"], ["test~al,al", "jz~FOO"]], [1, 0, 118, 0, 0, 2, 0, 1, 12, 9, 0.03004838298955946, ["mov     [rsp+0A8h+descend], 1", "jmp     loc_7421"], ["mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 3, 0, 1, 6, 0, 2, 5, 2, 0.0, ["mov     word ptr [cur+70h], 4", "call    ___errno_location", "mov     eax, [rax]", "mov     [cur+40h], eax", "mov     [rsp+0A8h+head], 0", "jmp     loc_78FD"], ["mov~[ord ptr [cur+0],0", "call~FOO", "mov~eax,<TAG>", "mov~[cur+0],eax", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 4, 0, 0, 3, 0, 1, 4, 2, 0.0010610304727951788, ["mov     [rsp+0A8h+head], 0", "cmp     [rsp+0A8h+type], 3", "jnz     loc_78FD"], ["mov~[rsp+0],0", "cmp~[rsp+0],0", "jnz~FOO"]], [2, 0, 115, 0, 0, 3, 0, 1, 17, 13, 0.008700449876920466, ["mov     dword ptr [p+90h], 6000h; jumptable 0000000000007B3F case 6", "mov     eax, 2", "jmp     loc_79F0"], ["mov~[word ptr [p+0],0", "mov~eax,0", "jmp~FOO"]], [0, 0, 115, 1, 0, 5, 0, 1, 16, 14, 0.061645870469399885, ["movzx   eax, byte ptr [r13+12h]", "lea     rcx, off_BBC0", "movsxd  rax, dword ptr [rcx+rax*4]", "add     rax, rcx", "jmp     rax; switch jump"], ["movzx~eax,[yte ptr [r13+0]", "lea~rcx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rcx", "jmp~rax"]], [1, 0, 116, 1, 0, 4, 0, 0, 4, 8, 0.0, ["add     len_0, [sp_0+20h]", "lea     rcx, [cp_0+1]", "mov     [rsp+0A8h+cp], rcx", "mov     byte ptr [rax], 2Fh ; '/'"], ["add~len_0,[sp_0+0]", "lea~rcx,[cp_0+0]", "mov~[rsp+0],rcx", "mov~<TAG>,0"]], [1, 0, 115, 0, 2, 8, 1, 3, 6, 5, 0.23996265172735762, ["call    ___errno_location", "mov     [rsp+0A8h+var_80], rax", "mov     dword ptr [rax], 0", "mov     rdi, [cur+18h]; dirp", "call    _readdir", "mov     r13, rax", "test    rax, rax", "jz      loc_7742"], ["call~FOO", "mov~[rsp+0],rax", "mov~<TAG>,0", "mov~rdi,[cur+0]", "call~FOO", "mov~r13,rax", "test~rax,rax", "jz~FOO"]], [1, 0, 3, 0, 1, 4, 0, 2, 12, 2, 0.0018079959256429845, ["mov     rdi, [rsp+0A8h+head]; head", "call    fts_lfree", "mov     [rsp+0A8h+head], 0", "jmp     loc_78FD"], ["mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 14, 3, 0.0, ["mov     word ptr [cur+70h], 6", "jmp     short loc_7D35"], ["mov~[ord ptr [cur+0],0", "jmp~FOO"]], [1, 0, 7, 0, 0, 2, 0, 1, 11, 3, 0.024047194635429932, ["cmp     [rsp+0A8h+type], 3", "jz      short loc_7D4D"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 137, 0, 1, 6, 0, 2, 5, 10, 0.02030812324929972, ["mov     edx, 0; follow", "mov     rsi, cur; p", "mov     rdi, sp_0; sp_0", "call    fts_stat", "mov     [cur+70h], ax", "jmp     loc_7565"], ["mov~edx,0", "mov~rsi,cur", "mov~rdi,sp_0", "call~FOO", "mov~[cur+0],ax", "jmp~FOO"]], [1, 0, 141, 0, 0, 2, 0, 1, 4, 5, 0.03611747729394788, ["cmp     word ptr [cur+70h], 0Bh", "jz      loc_7653"], ["cmp~[ord ptr [cur+0],0", "jz~FOO"]], [0, 1, 115, 0, 0, 2, 1, 1, 7, 4, 0.2096596214243273, ["test    byte ptr [sp_0+48h], 20h", "jnz     short loc_7A77"], ["test~[yte ptr [sp_0+0],<STR>", "jnz~FOO"]], [0, 0, 38, 0, 0, 4, 0, 1, 9, 10, 0.00937950937950938, ["mov     rdx, [rax+30h]", "lea     rsi, [rax+108h]", "cmp     rdx, rsi", "jz      short loc_7C63"], ["mov~rdx,[rax+0]", "lea~rsi,[rax+0]", "cmp~rdx,rsi", "jz~FOO"]], [0, 0, 38, 2, 0, 4, 0, 1, 10, 10, 0.0, ["sub     rdx, [rax+38h]", "add     rdx, rcx", "mov     [rax+30h], rdx", "jmp     short loc_7C63"], ["sub~rdx,[rax+0]", "add~rdx,rcx", "mov~[rax+0],rdx", "jmp~FOO"]], [0, 0, 115, 0, 1, 8, 1, 2, 10, 3, 0.016361089890501654, ["mov     p, [sp_0+20h]", "mov     [rsp+0A8h+maxlen], rax", "mov     oldaddr_0, [rsp+0A8h+len]", "lea     rsi, [rax+d_namelen+2]; more", "mov     rdi, sp_0; sp_0", "call    fts_palloc", "test    al, al", "jz      short mem1"], ["mov~p,[sp_0+0]", "mov~[rsp+0],rax", "mov~oldaddr_0,[rsp+0]", "lea~rsi,[rax+0]", "mov~rdi,sp_0", "call~FOO", "test~al,al", "jz~FOO"]], [0, 0, 115, 0, 0, 2, 0, 0, 9, 4, 0.18020541549953314, ["cmp     [rsp+0A8h+maxlen], d_namelen", "jbe     loc_7851"], ["cmp~[rsp+0],d_namelen", "jbe~FOO"]], [0, 0, 115, 0, 0, 3, 0, 1, 11, 6, 0.016764281470163823, ["mov     rdx, [sp_0+20h]", "cmp     rdx, [rsp+0A8h+maxlen]", "jz      loc_7925"], ["mov~rdx,[sp_0+0]", "cmp~rdx,[rsp+0]", "jz~FOO"]], [1, 0, 138, 0, 3, 12, 1, 4, 6, 3, 0.0006366182836771072, ["mov     rsi, cur; ent", "mov     rdi, sp_0; fts", "call    leave_dir", "mov     edx, 0; follow", "mov     rsi, cur; p", "mov     rdi, sp_0; sp_0", "call    fts_stat", "mov     rsi, cur; ent", "mov     rdi, sp_0; fts", "call    enter_dir", "test    al, al", "jnz     loc_7565"], ["mov~rsi,cur", "mov~rdi,sp_0", "call~FOO", "mov~edx,0", "mov~rsi,cur", "mov~rdi,sp_0", "call~FOO", "mov~rsi,cur", "mov~rdi,sp_0", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 139, 0, 0, 2, 1, 1, 5, 4, 0.021114506408624056, ["test    byte ptr [sp_0+49h], 1", "jnz     loc_766D"], ["test~[yte ptr [sp_0+0],0", "jnz~FOO"]], [1, 0, 115, 1, 0, 6, 2, 0, 12, 5, 0.006642050759697819, ["mov     ecx, [sp_0+48h]", "and     ecx, 4", "add     rdx, [rsp+0A8h+var_90]", "test    ecx, ecx", "cmovz   rdx, [rsp+0A8h+cp]", "mov     [rsp+0A8h+cp], rdx"], ["mov~ecx,[sp_0+0]", "and~ecx,0", "add~rdx,[rsp+0]", "test~ecx,ecx", "cmovz~rdx,[rsp+0]", "mov~[rsp+0],rdx"]], [0, 0, 34, 0, 0, 4, 1, 1, 12, 9, 0.012477718360071301, ["mov     [rax+38h], rcx", "mov     rdx, [rax+10h]", "test    rdx, rdx", "jz      short loc_7CC5"], ["mov~[rax+0],rcx", "mov~rdx,[rax+0]", "test~rdx,rdx", "jz~FOO"]], [0, 0, 34, 0, 0, 4, 0, 1, 11, 10, 0.01977760801290213, ["mov     rdx, [rax+30h]", "lea     rsi, [rax+108h]", "cmp     rdx, rsi", "jz      short loc_7C8D"], ["mov~rdx,[rax+0]", "lea~rsi,[rax+0]", "cmp~rdx,rsi", "jz~FOO"]], [0, 0, 34, 2, 0, 4, 0, 1, 12, 10, 0.0, ["sub     rdx, [rax+38h]", "add     rdx, rcx", "mov     [rax+30h], rdx", "jmp     short loc_7C8D"], ["sub~rdx,[rax+0]", "add~rdx,rcx", "mov~[rax+0],rdx", "jmp~FOO"]], [0, 0, 34, 0, 0, 1, 0, 0, 13, 8, 0.005177828707240472, ["mov     rax, rdx"], ["mov~rax,rdx"]], [0, 0, 34, 0, 0, 2, 0, 1, 13, 9, 0.0, ["mov     rdx, [rax+8]", "jmp     short loc_7C9A"], ["mov~rdx,[rax+0]", "jmp~FOO"]], [1, 0, 34, 0, 0, 2, 0, 1, 10, 7, 0.03649944826415415, ["cmp     qword ptr [rax+58h], 0", "js      loc_779A"], ["cmp~[word ptr [rax+0],0", "js~FOO"]], [2, 0, 115, 0, 1, 14, 1, 2, 8, 3, 0.19395637042695865, ["lea     rsi, [r13+13h]; name", "mov     eax, 0", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     rdi, rsi", "repne scasb", "mov     rax, rcx", "not     rax", "lea     rbp, [rax-1]", "mov     rdx, d_namelen; namelen", "mov     rdi, sp_0; sp_0", "call    fts_alloc", "mov     rbx, rax", "test    p, p", "jz      mem1"], ["lea~rsi,[r13+0]", "mov~eax,0", "mov~rcx,0", "mov~rdi,rsi", "scasb~<TAG>,", "mov~rax,rcx", "not~rax", "lea~rbp,[rax-1]+0]", "mov~rdx,d_namelen", "mov~rdi,sp_0", "call~FOO", "mov~rbx,rax", "test~p,p", "jz~FOO"]], [0, 0, 115, 1, 0, 5, 0, 1, 13, 4, 0.018801459977930566, ["mov     rsi, [sp_0+30h]", "sub     rsi, [rsp+0A8h+var_90]", "mov     [rsp+0A8h+maxlen], rsi", "mov     [rsp+0A8h+doadjust], al", "jmp     loc_7AB8"], ["mov~rsi,[sp_0+0]", "sub~rsi,[rsp+0]", "mov~[rsp+0],rsi", "mov~[rsp+0],al", "jmp~FOO"]], [0, 0, 115, 0, 0, 2, 0, 1, 12, 5, 0.006642050759697819, ["movzx   eax, [rsp+0A8h+doadjust]", "jmp     loc_789B"], ["movzx~eax,[rsp+0]", "jmp~FOO"]], [2, 0, 3, 0, 1, 4, 0, 2, 7, 2, 0.0003819709702062643, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch", "mov     [rsp+0A8h+head], 0", "jmp     loc_78FD"], ["call~FOO", "mov~<TAG>,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 115, 0, 0, 1, 0, 0, 17, 15, 0.003975327504739269, ["mov     eax, 0; jumptable 0000000000007B3F case 8"], ["mov~eax,0"]], [1, 0, 134, 0, 0, 2, 0, 1, 8, 11, 0.0066632713691537225, ["cmp     qword ptr [cur+88h], 2", "jnz     loc_759D"], ["cmp~[word ptr [cur+0],0", "jnz~FOO"]], [1, 1, 135, 0, 0, 4, 1, 1, 7, 12, 0.008658008658008658, ["mov     eax, [sp_0+48h]", "and     eax, 38h", "cmp     eax, 18h", "jz      loc_76B4"], ["mov~eax,[sp_0+0]", "and~eax,0", "cmp~eax,<STR>", "jz~FOO"]], [0, 0, 115, 1, 0, 2, 0, 0, 10, 3, 0.1840039045921399, ["add     d_namelen, [rsp+0A8h+var_90]", "jb      loc_792F"], ["add~d_namelen,[rsp+0]", "jb~FOO"]], [2, 0, 115, 0, 0, 3, 0, 1, 17, 13, 0.008700449876920466, ["mov     dword ptr [p+90h], 2000h; jumptable 0000000000007B3F case 2", "mov     eax, 2", "jmp     loc_79F0"], ["mov~[word ptr [p+0],0", "mov~eax,0", "jmp~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 12, 5, 0.02195059842118666, ["cmp     qword ptr [cur+58h], 0", "jnz     short loc_7D0F"], ["cmp~[word ptr [cur+0],0", "jnz~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 11, 6, 0.03234020881079705, ["cmp     [rsp+0A8h+type], 1", "jz      loc_7CCB"], ["cmp~[rsp+0],0", "jz~FOO"]], [0, 0, 19, 0, 0, 2, 1, 1, 12, 5, 0.0005432476020711315, ["test    nitems, nitems", "jz      loc_7CCB"], ["test~nitems,nitems", "jz~FOO"]], [3, 0, 4, 0, 1, 6, 0, 2, 2, 2, 0.0003395297512944572, ["mov     rdi, [cur+18h]; dirp", "call    _closedir", "mov     qword ptr [cur+18h], 0", "mov     [rsp+0A8h+head], 0", "cmp     [rsp+0A8h+type], 3", "jnz     loc_78FD"], ["mov~rdi,[cur+0]", "call~FOO", "mov~[word ptr [cur+0],0", "mov~[rsp+0],0", "cmp~[rsp+0],0", "jnz~FOO"]], [0, 0, 16, 0, 1, 4, 1, 1, 13, 4, 0.005839911722264664, ["mov     rdi, sp_0; sp_0", "call    restore_initial_cwd", "test    eax, eax", "setnz   al"], ["mov~rdi,sp_0", "call~FOO", "test~eax,eax", "setnz~al"]], [0, 0, 15, 0, 0, 2, 1, 1, 14, 3, 0.007435701553348612, ["test    al, al", "jz      loc_77E4"], ["test~al,al", "jz~FOO"]], [1, 0, 16, 0, 1, 8, 1, 2, 13, 4, 0.005839911722264664, ["mov     rsi, [cur+8]; p", "lea     rcx, dir; \"..\"", "mov     edx, 0FFFFFFFFh; fd", "mov     rdi, sp_0; sp_0", "call    fts_safe_changedir", "test    eax, eax", "setnz   al", "jmp     short loc_7CDF"], ["mov~rsi,[cur+0]", "lea~rcx,<TAG>", "mov~edx,0", "mov~rdi,sp_0", "call~FOO", "test~eax,eax", "setnz~al", "jmp~FOO"]], [1, 0, 132, 0, 1, 9, 1, 2, 9, 10, 0.01145912910618793, ["mov     esi, [rsp+0A8h+dir_fd]; dir_fd", "mov     rdi, cur; p", "call    leaf_optimization_0", "test    eax, eax", "setz    [rsp+0A8h+descend]", "movzx   eax, [rsp+0A8h+descend]", "cmp     [rsp+0A8h+type], 3", "setz    bl", "jz      loc_75AA"], ["mov~esi,[rsp+0]", "mov~rdi,cur", "call~FOO", "test~eax,eax", "setz~[rsp+0]", "movzx~eax,[rsp+0]", "cmp~[rsp+0],0", "setz~bl", "jz~FOO"]], [1, 0, 115, 0, 0, 9, 1, 1, 11, 16, 0.17978100331041508, ["mov     rax, [rsp+0A8h+level]", "mov     [p+58h], rax", "mov     rax, [sp_0]", "mov     [p+8], rax", "mov     [p+48h], new_len", "mov     rax, [r13+0]", "mov     [p+80h], rax", "test    byte ptr [sp_0+48h], 4", "jnz     loc_7978"], ["mov~rax,[rsp+0]", "mov~[p+0],rax", "mov~rax,<TAG>", "mov~[p+0],rax", "mov~[p+0],new_len", "mov~rax,[r13+0]", "mov~[p+0],rax", "test~[yte ptr [sp_0+0],0", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, 1, 0.012902130549189372, ["mov     rax, [rsp+0A8h+head]", "mov     rcx, [rsp+0A8h+var_40]", "xor     rcx, fs:28h", "jnz     loc_7DD2"], ["mov~rax,[rsp+0]", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 130, 0, 0, 1, 0, 1, 11, 13, 0.0005092946269416858, ["jmp     loc_75AA"], ["jmp~FOO"]], [4, 0, 3, 0, 3, 14, 1, 3, 9, 2, 0.01050420168067227, ["mov     nitems, cur", "mov     cur, [rsp+0A8h+var_80]", "mov     ebp, [r15]", "mov     rdi, p; ptr", "call    free", "mov     rdi, [rsp+0A8h+head]; head", "call    fts_lfree", "mov     rdi, [cur+18h]; dirp", "call    _closedir", "mov     qword ptr [cur+18h], 0", "mov     word ptr [cur+70h], 7", "or      dword ptr [sp_0+48h], 2000h", "mov     [r15], ebp", "mov     [rsp+0A8h+head], 0"], ["mov~nitems,cur", "mov~cur,[rsp+0]", "mov~ebp,<TAG>", "mov~rdi,p", "call~FOO", "mov~rdi,[rsp+0]", "call~FOO", "mov~rdi,[cur+0]", "call~FOO", "mov~[word ptr [cur+0],0", "mov~[ord ptr [cur+0],0", "or~[word ptr [sp_0+0],0", "mov~<TAG>,ebp", "mov~[rsp+0],0"]], [2, 0, 3, 0, 1, 6, 0, 2, 3, 2, 0.0, ["mov     word ptr [cur+70h], 4", "call    ___errno_location", "mov     eax, [rax]", "mov     [cur+40h], eax", "mov     [rsp+0A8h+head], 0", "jmp     loc_78FD"], ["mov~[ord ptr [cur+0],0", "call~FOO", "mov~eax,<TAG>", "mov~[cur+0],eax", "mov~[rsp+0],0", "jmp~FOO"]], [0, 0, 115, 0, 0, 2, 0, 0, 12, 15, 0.08815041167982345, ["lea     rax, [p+108h]", "mov     [p+30h], rax"], ["lea~rax,[p+0]", "mov~[p+0],rax"]], [0, 0, 122, 0, 1, 3, 0, 1, 13, 11, 0.0, ["call    ___errno_location", "mov     eax, [rax]", "mov     [cur+40h], eax"], ["call~FOO", "mov~eax,<TAG>", "mov~[cur+0],eax"]], [1, 0, 123, 0, 0, 2, 0, 1, 12, 11, 0.0009761480349715644, ["cmp     [rsp+0A8h+descend], 0", "jz      short loc_75D8"], ["cmp~[rsp+0],0", "jz~FOO"]], [2, 0, 115, 0, 0, 3, 0, 1, 15, 15, 0.07220666044195456, ["mov     word ptr [p+70h], 0Bh", "cmp     byte ptr [r13+12h], 0Ch; switch 13 cases", "ja      short loc_7BA0; jumptable 0000000000007B3F default case"], ["mov~[ord ptr [p+0],0", "cmp~[yte ptr [r13+0],0", "ja~FOO"]], [1, 0, 115, 0, 0, 2, 1, 1, 15, 16, 0.04044648162295221, ["test    byte ptr [r13+12h], 0FBh", "jz      loc_7B1F"], ["test~[yte ptr [r13+0],0", "jz~FOO"]], [0, 2, 115, 0, 0, 4, 1, 1, 14, 16, 0.11310584839996606, ["mov     eax, [sp_0+48h]", "and     eax, 18h", "cmp     eax, 18h", "jz      loc_799E"], ["mov~eax,[sp_0+0]", "and~eax,<STR>", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 115, 0, 0, 2, 0, 1, 13, 14, 0.18181818181818182, ["cmp     qword ptr [sp_0+40h], 0", "jz      short loc_7B0E"], ["cmp~[word ptr [sp_0+0],0", "jz~FOO"]], [0, 0, 115, 0, 1, 8, 0, 2, 12, 15, 0.08815041167982345, ["mov     rax, [p+38h]", "mov     [p+30h], rax", "mov     rax, [p+60h]", "lea     rdx, [rax+1]; n", "lea     rsi, [p+108h]; src", "mov     rdi, [rsp+0A8h+cp]; dest", "call    _memmove", "jmp     loc_7AFA"], ["mov~rax,[p+0]", "mov~[p+0],rax", "mov~rax,[p+0]", "lea~rdx,[rax+0]", "lea~rsi,[p+0]", "mov~rdi,[rsp+0]", "call~FOO", "jmp~FOO"]], [1, 0, 149, 0, 0, 4, 1, 1, 1, 5, 0.0013156777862660216, ["mov     eax, [sp_0+48h]", "mov     edx, eax", "and     edx, 10h", "jz      short loc_751D"], ["mov~eax,[sp_0+0]", "mov~edx,eax", "and~edx,0", "jz~FOO"]], [1, 0, 154, 1, 0, 17, 2, 1, 0, 4, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 78h", "mov     r12, sp_0", "mov     [rsp+0A8h+type], esi", "mov     rax, fs:28h", "mov     [rsp+0A8h+var_40], rax", "xor     eax, eax", "mov     r14, [sp_0]", "mov     sp_0, [cur+18h]; dirp", "mov     [rsp+0A8h+dp], rdi", "test    rdi, rdi", "jz      loc_74FA"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r12,sp_0", "mov~[rsp+0],esi", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~r14,<TAG>", "mov~sp_0,[cur+0]", "mov~[rsp+0],rdi", "test~rdi,rdi", "jz~FOO"]], [1, 0, 115, 0, 0, 2, 1, 1, 14, 13, 0.0665053900348018, ["test    byte ptr [sp_0+49h], 4", "jz      loc_7BBE"], ["test~[yte ptr [sp_0+0],0", "jz~FOO"]], [3, 0, 3, 0, 1, 6, 1, 2, 15, 2, 0.0005602240896358543, ["mov     word ptr [cur+70h], 7", "or      dword ptr [sp_0+48h], 2000h", "mov     rdi, [rsp+0A8h+head]; head", "call    fts_lfree", "mov     [rsp+0A8h+head], 0", "jmp     loc_78FD"], ["mov~[ord ptr [cur+0],0", "or~[word ptr [sp_0+0],0", "mov~rdi,[rsp+0]", "call~FOO", "mov~[rsp+0],0", "jmp~FOO"]], [2, 0, 148, 0, 0, 3, 1, 1, 2, 5, 8.48824378236143e-05, ["mov     edx, 20000h", "test    al, 1", "jz      short loc_751D"], ["mov~edx,0", "test~al,0", "jz~FOO"]], [0, 0, 144, 0, 1, 5, 1, 2, 3, 3, 0.03166114930820813, ["lea     rcx, [rsp+0A8h+dir_fd]; pnew_fd", "call    opendirat", "mov     [cur+18h], rax", "test    rax, rax", "jz      loc_761F"], ["lea~rcx,[rsp+0]", "call~FOO", "mov~[cur+0],rax", "test~rax,rax", "jz~FOO"]], [5, 0, 3, 0, 3, 13, 1, 4, 11, 2, 0.0007002801120448179, ["mov     rdi, p; ptr", "call    free", "mov     rdi, [rsp+0A8h+head]; head", "call    fts_lfree", "mov     rdi, [cur+18h]; dirp", "call    _closedir", "mov     qword ptr [cur+18h], 0", "mov     word ptr [cur+70h], 7", "or      dword ptr [sp_0+48h], 2000h", "mov     rax, [rsp+0A8h+var_80]", "mov     dword ptr [rax], 24h ; '$'", "mov     [rsp+0A8h+head], 0", "jmp     short loc_78FD"], ["mov~rdi,p", "call~FOO", "mov~rdi,[rsp+0]", "call~FOO", "mov~rdi,[cur+0]", "call~FOO", "mov~[word ptr [cur+0],0", "mov~[ord ptr [cur+0],0", "or~[word ptr [sp_0+0],0", "mov~rax,[rsp+0]", "mov~<TAG>,0", "mov~[rsp+0],0", "jmp~FOO"]], [1, 0, 3, 0, 1, 9, 0, 2, 12, 2, 0.0013623631270690095, ["lea     rax, fts_compare_ino", "mov     [sp_0+40h], rax", "mov     rdx, nitems; nitems", "mov     rsi, [rsp+0A8h+head]; head", "mov     rdi, sp_0; sp_0", "call    fts_sort", "mov     [rsp+0A8h+head], rax", "mov     qword ptr [sp_0+40h], 0", "jmp     loc_78FD"], ["lea~rax,<TAG>", "mov~[sp_0+0],rax", "mov~rdx,nitems", "mov~rsi,[rsp+0]", "mov~rdi,sp_0", "call~FOO", "mov~[rsp+0],rax", "mov~[word ptr [sp_0+0],0", "jmp~FOO"]], [3, 0, 128, 0, 1, 7, 0, 2, 10, 12, 0.0, ["mov     edx, 3", "mov     esi, 406h; action", "mov     edi, [rsp+0A8h+dir_fd]; fd", "mov     eax, 0", "call    rpl_fcntl", "mov     [rsp+0A8h+dir_fd], eax", "jmp     loc_75B6"], ["mov~edx,0", "mov~esi,0", "mov~edi,[rsp+0]", "mov~eax,0", "call~FOO", "mov~[rsp+0],eax", "jmp~FOO"]], [1, 0, 129, 0, 0, 2, 1, 1, 9, 12, 0.0184194890077243, ["test    byte ptr [sp_0+49h], 2", "jnz     loc_76F5"], ["test~[yte ptr [sp_0+0],0", "jnz~FOO"]], [2, 0, 147, 1, 0, 4, 0, 0, 3, 5, 0.0, ["cmp     qword ptr [cur+58h], 0", "setnz   dl", "movzx   edx, dl", "shl     edx, 11h; extra_flags"], ["cmp~[word ptr [cur+0],0", "setnz~dl", "movzx~edx,dl", "shl~edx,0"]], [0, 0, 40, 0, 0, 4, 0, 1, 20, 8, 0.08636788048552754, ["mov     rax, cur", "mov     cur, nitems", "mov     nitems, cur", "jmp     break_without_closedir"], ["mov~rax,cur", "mov~cur,nitems", "mov~nitems,cur", "jmp~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 4, -1, 0.0, ["add     rsp, 78h", "pop     rbx", "pop     rbp", "pop     sp_0", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~sp_0", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 126, 0, 1, 6, 1, 2, 11, 10, 0.025931584755114166, ["mov     ecx, 0; dir", "mov     rsi, cur; p", "mov     rdi, sp_0; sp_0", "call    fts_safe_changedir", "test    eax, eax", "jnz     loc_75C2"], ["mov~ecx,0", "mov~rsi,cur", "mov~rdi,sp_0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [0, 0, 127, 0, 0, 3, 1, 0, 10, 11, 0.02767167473049826, ["mov     edx, [rsp+0A8h+dir_fd]; fd", "test    edx, edx", "jns     loc_7716"], ["mov~edx,[rsp+0]", "test~edx,edx", "jns~FOO"]], [1, 0, 115, 0, 0, 2, 0, 1, 18, 15, 0.00010610304727951786, ["mov     eax, 1; jumptable 00000000000079CD case 1", "jmp     short loc_7B4D"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 115, 1, 0, 5, 0, 1, 17, 14, 0.03456129926718162, ["movzx   eax, byte ptr [r13+12h]", "lea     rdx, off_BB8C", "movsxd  rax, dword ptr [rdx+rax*4]", "add     rax, rdx", "jmp     rax; switch jump"], ["movzx~eax,[yte ptr [r13+0]", "lea~rdx,<TAG>", "movsxd~rax,<TAG>", "add~rax,rdx", "jmp~rax"]], [1, 0, 115, 0, 0, 1, 0, 0, 17, 15, 0.003975327504739269, ["mov     eax, 0; jumptable 0000000000007B3F case 1"], ["mov~eax,0"]], [1, 0, 115, 0, 0, 2, 0, 1, 18, 14, 0.009598789010553718, ["mov     edx, 1000h", "jmp     loc_79E0"], ["mov~edx,0", "jmp~FOO"]], [0, 0, 46, 0, 0, 7, 1, 1, 7, 9, 0.02678040913335031, ["mov     rax, cur", "mov     cur, nitems", "mov     nitems, cur", "mov     cur, [rsp+0A8h+var_80]", "mov     eax, [rax]", "test    eax, eax", "jz      short loc_7779"], ["mov~rax,cur", "mov~cur,nitems", "mov~nitems,cur", "mov~cur,[rsp+0]", "mov~eax,<TAG>", "test~eax,eax", "jz~FOO"]], [1, 0, 115, 0, 0, 2, 0, 1, 18, 15, 0.00010610304727951786, ["mov     eax, 1; jumptable 00000000000079CD case 10", "jmp     short loc_7B63"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 115, 0, 0, 1, 0, 0, 17, 15, 0.003975327504739269, ["mov     eax, 0; jumptable 0000000000007B3F case 10"], ["mov~eax,0"]], [1, 0, 115, 0, 0, 2, 0, 1, 18, 14, 0.009598789010553718, ["mov     edx, 0A000h", "jmp     loc_79E0"], ["mov~edx,0", "jmp~FOO"]], [1, 0, 115, 0, 0, 2, 0, 1, 18, 15, 0.00010610304727951786, ["mov     eax, 1; jumptable 00000000000079CD case 8", "jmp     short loc_7B79"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 42, 0, 0, 1, 0, 0, 10, 9, 0.0053475935828877, ["mov     [cur+70h], ax"], ["mov~[cur+0],ax"]], [1, 0, 115, 0, 0, 2, 0, 1, 18, 14, 0.009598789010553718, ["mov     edx, 0C000h", "jmp     loc_79E0"], ["mov~edx,0", "jmp~FOO"]], [1, 0, 115, 0, 0, 2, 0, 1, 18, 15, 0.00010610304727951786, ["mov     eax, 1; jumptable 00000000000079CD case 12", "jmp     short loc_7B8F"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 115, 0, 0, 1, 0, 0, 17, 15, 0.003975327504739269, ["mov     eax, 0; jumptable 0000000000007B3F case 12"], ["mov~eax,0"]], [1, 0, 115, 0, 0, 2, 0, 1, 18, 14, 0.009598789010553718, ["mov     edx, 8000h", "jmp     loc_79E0"], ["mov~edx,0", "jmp~FOO"]], [0, 0, 41, 0, 0, 3, 1, 1, 8, 8, 0.014472455648926238, ["mov     rdi, [cur+18h]; dirp", "test    rdi, rdi", "jz      short break_without_closedir"], ["mov~rdi,[cur+0]", "test~rdi,rdi", "jz~FOO"]], [1, 0, 40, 0, 1, 2, 0, 1, 9, 8, 0.0, ["call    _closedir", "mov     qword ptr [cur+18h], 0"], ["call~FOO", "mov~[word ptr [cur+0],0"]], [1, 0, 7, 0, 0, 2, 0, 1, 11, 3, 0.02534589593413123, ["cmp     [rsp+0A8h+sort_by_inode], 0", "jnz     loc_7D67"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 115, 0, 0, 2, 0, 1, 17, 15, 0.0001414707297060238, ["mov     eax, 1; jumptable 00000000000079CD default case", "jmp     short loc_7BA5"], ["mov~eax,0", "jmp~FOO"]], [2, 0, 115, 0, 0, 3, 0, 1, 16, 15, 0.03809806750983222, ["mov     word ptr [p+70h], 0Bh", "cmp     byte ptr [r13+12h], 0Ch; switch 13 cases", "ja      loc_7B99; jumptable 00000000000079CD default case"], ["mov~[ord ptr [p+0],0", "cmp~[yte ptr [r13+0],0", "ja~FOO"]], [1, 0, 27, 0, 0, 2, 1, 1, 8, 6, 0.12490450725744844, ["test    byte ptr [sp_0+48h], 4", "jz      short loc_77C1"], ["test~[yte ptr [sp_0+0],0", "jz~FOO"]], [2, 0, 130, 0, 0, 3, 0, 0, 8, 13, 0.006875477463712758, ["cmp     [rsp+0A8h+type], 3", "setz    bl", "mov     [rsp+0A8h+descend], 1"], ["cmp~[rsp+0],0", "setz~bl", "mov~[rsp+0],0"]], [1, 0, 115, 0, 0, 2, 0, 1, 17, 14, 0.012831395184336361, ["mov     edx, 0", "jmp     loc_79E0"], ["mov~edx,0", "jmp~FOO"]], [1, 0, 115, 0, 0, 1, 0, 0, 16, 15, 0.007172565996095408, ["mov     eax, 0; jumptable 0000000000007B3F default case"], ["mov~eax,0"]], [0, 0, 26, 0, 0, 3, 0, 1, 9, 8, 0.015406162464985995, ["mov     rax, [rsp+0A8h+var_90]", "cmp     [sp_0+30h], rax", "jz      short loc_77B3"], ["mov~rax,[rsp+0]", "cmp~[sp_0+0],rax", "jz~FOO"]], [0, 0, 25, 0, 0, 2, 1, 1, 10, 7, 0.0030769883711060184, ["test    nitems, nitems", "jnz     short loc_77B9"], ["test~nitems,nitems", "jnz~FOO"]], [1, 0, 24, 1, 0, 1, 0, 0, 10, 7, 0.0030769883711060184, ["sub     [rsp+0A8h+cp], 1"], ["sub~[rsp+0],0"]], [2, 0, 115, 0, 0, 3, 0, 1, 18, 14, 7.78089013383131e-05, ["mov     eax, 1; jumptable 00000000000079CD case 2", "mov     edx, 2000h", "jmp     loc_79E0"], ["mov~eax,0", "mov~edx,0", "jmp~FOO"]], [1, 0, 23, 0, 0, 2, 0, 0, 11, 6, 0.0029284441049146934, ["mov     rax, [rsp+0A8h+cp]", "mov     byte ptr [rax], 0"], ["mov~rax,[rsp+0]", "mov~<TAG>,0"]], [0, 0, 124, 0, 0, 2, 1, 1, 11, 11, 0.0056022408963585435, ["test    bl, bl", "jz      short loc_75D8"], ["test~bl,bl", "jz~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 9, 5, 0.10410830999066294, ["cmp     [rsp+0A8h+dp], 0", "jnz     short loc_77E4"], ["cmp~[rsp+0],0", "jnz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 10, 5, 0.03743315508021391, ["cmp     [rsp+0A8h+descend], 0", "jz      short loc_77E4"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 115, 0, 0, 2, 0, 1, 18, 15, 0.00010610304727951786, ["mov     eax, 1; jumptable 00000000000079CD case 4", "jmp     short loc_79DB"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 115, 0, 0, 1, 0, 0, 17, 15, 0.003975327504739269, ["mov     eax, 0; jumptable 0000000000007B3F case 4"], ["mov~eax,0"]], [1, 0, 115, 0, 0, 1, 0, 0, 18, 14, 0.009598789010553718, ["mov     edx, 4000h"], ["mov~edx,0"]], [2, 0, 115, 0, 0, 3, 0, 1, 18, 13, 0.009591715474068415, ["mov     dword ptr [p+90h], 6000h; jumptable 00000000000079CD case 6", "mov     eax, 1", "jmp     loc_79F0"], ["mov~[word ptr [p+0],0", "mov~eax,0", "jmp~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 10, 4, 0.06021560139207198, ["test    nitems, nitems", "jz      loc_7D2E"], ["test~nitems,nitems", "jz~FOO"]], [2, 0, 115, 1, 0, 4, 1, 0, 18, 13, 0.09061200237670826, ["mov     [p+90h], edx", "xor     eax, 1", "movzx   eax, al", "add     rax, 1"], ["mov~[p+0],edx", "xor~eax,0", "movzx~eax,al", "add~rax,0"]]], "func_feature": [37, 50, 159, 3, 155, 244, 4, 570, 0.03651, 5, 21], "succs": [[16, 17], [0], [0], [91, 23], [91, 3], [11, 22], [5, 22], [42], [10, 7], [7], [9, 7], [12, 22], [26], [108], [108, 13], [26, 27], [15], [15], [42], [18, 84], [58, 39], [137, 20], [26], [91], [52, 53], [24, 52], [114, 31], [26, 6], [127], [28, 30], [28, 127], [36], [31], [31], [33, 38], [72, 34], [41, 51], [36], [32, 72], [71], [58, 39], [21], [50, 37], [42, 78], [42, 92], [42], [91], [91, 46], [2], [80, 130, 140, 76, 48, 150, 120, 124], [37], [57, 122], [91], [52], [25, 52], [43], [64, 55], [72, 35], [40, 59], [40], [93, 62], [60, 79], [65, 74], [43, 75], [43, 63], [73], [69, 70], [66, 68], [66], [71], [69], [137, 67], [61, 93], [79], [73], [91], [131], [88, 138], [138, 77], [89, 109], [2], [85, 87], [81, 83], [81, 153], [91, 94], [86], [153, 106], [86], [112, 44], [102, 95], [], [90, 115], [112], [91], [91], [101], [8], [96, 8], [49, 140], [136, 98], [98, 99], [105, 100], [101], [107, 14], [19, 103], [1, 100], [91], [113, 14], [56, 47], [91], [91], [117], [117, 111], [14], [21], [], [146, 45], [146, 116], [121], [129, 135, 144, 149, 118, 152, 123, 126], [121], [154], [132, 29], [125], [125], [154], [131], [132], [154], [128], [128], [154], [133, 21], [21], [4, 110], [139], [119, 135], [147, 141], [112], [154], [139], [142, 143], [145, 143], [145], [154], [147], [8, 97], [153, 148], [153, 82], [151], [151], [154], [2], [134, 54], [2]], "fname": "fts_build", "n_num": 155}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 10, 0, 0, 2, 0, 1, 0, 0, 0.017857142857142856, ["mov     r13d, 0", "jmp     short loc_809E"], ["mov~r13d,0", "jmp~FOO"]], [1, 0, 34, 0, 0, 5, 2, 1, 13, 1, 0.1575814536340852, ["and     eax, 1", "mov     [rsp+58h+defer_stat], al", "mov     rsi, [argv]", "test    rsi, rsi", "jz      loc_80FA"], ["and~eax,0", "mov~[rsp+0],al", "mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [0, 0, 35, 0, 0, 1, 0, 1, 12, 2, 0.04443400167084378, ["jmp     loc_8180"], ["jmp~FOO"]], [2, 0, 37, 0, 0, 6, 1, 1, 11, 3, 0.08463868003341686, ["mov     parent, 0FFFFFFFFFFFFFFFFh", "mov     [parent+58h], rax", "mov     [parent+68h], rax", "mov     eax, 1", "test    compar, compar", "jnz     loc_8177"], ["mov~parent,0", "mov~[parent+0],rax", "mov~[parent+0],rax", "mov~eax,0", "test~compar,compar", "jnz~FOO"]], [2, 0, 55, 0, 0, 7, 1, 1, 1, 13, 0.016917293233082706, ["mov     r14, argv", "mov     ebx, esi", "mov     r15, compar", "mov     eax, esi", "and     eax, 204h", "cmp     eax, 204h", "jz      loc_7F1B"], ["mov~r14,argv", "mov~ebx,esi", "mov~r15,compar", "mov~eax,esi", "and~eax,0", "cmp~eax,0", "jz~FOO"]], [2, 0, 57, 1, 0, 9, 1, 1, 0, 14, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 28h", "test    esi, 0FFFFF000h", "jnz     loc_7F06"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "test~esi,0", "jnz~FOO"]], [1, 0, 32, 0, 0, 2, 0, 1, 17, -1, 0.05607769423558897, ["cmp     byte ptr [v+len-1], 2Fh ; '/'", "jnz     loc_7F5F"], ["cmp~[yte ptr [v+0],0", "jnz~FOO"]], [1, 0, 32, 0, 0, 2, 0, 0, 16, -1, 0.06641604010025062, ["cmp     len, 2", "jbe     loc_7F5F"], ["cmp~len,0", "jbe~FOO"]], [1, 0, 11, 0, 0, 2, 0, 0, 23, -1, 0.012844611528822054, ["cmp     nitems, 1", "jbe     short loc_809E"], ["cmp~nitems,0", "jbe~FOO"]], [0, 0, 12, 0, 0, 2, 1, 1, 22, -1, 0.06944444444444443, ["test    compar, compar", "jz      short loc_809E"], ["test~compar,compar", "jz~FOO"]], [2, 0, 35, 0, 0, 3, 1, 0, 12, 2, 0.09717000835421886, ["mov     eax, [sp_0+48h]", "shr     eax, 0Ah", "and     eax, 1"], ["mov~eax,[sp_0+0]", "shr~eax,0", "and~eax,0"]], [3, 0, 45, 0, 0, 4, 0, 0, 7, 8, 0.002506265664160401, ["mov     rdx, argv", "mov     esi, 0", "mov     r8, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0"], ["mov~rdx,argv", "mov~esi,0", "mov~r8,0", "mov~eax,0"]], [1, 0, 47, 0, 0, 4, 1, 1, 6, 8, 0.10181704260651628, ["mov     dword ptr [sp_0+2Ch], 0FFFFFF9Ch", "mov     rdi, [argv]", "test    rdi, rdi", "jz      loc_7F55"], ["mov~[word ptr [sp_0+0],0", "mov~rdi,<TAG>", "test~rdi,rdi", "jz~FOO"]], [1, 0, 32, 0, 0, 2, 0, 0, 18, -1, 0.045426065162907266, ["cmp     len, 1", "jbe     loc_7F5F"], ["cmp~len,0", "jbe~FOO"]], [1, 0, 32, 0, 0, 7, 1, 1, 17, -1, 0.15538847117794485, ["mov     qword ptr [p+58h], 0", "mov     p, [rsp+58h+ptr]", "mov     [p+8], rax", "lea     rax, [p+108h]", "mov     [p+30h], rax", "test    root, root", "jz      loc_803C"], ["mov~[word ptr [p+0],0", "mov~p,[rsp+0]", "mov~[p+0],rax", "lea~rax,[p+0]", "mov~[p+0],rax", "test~root,root", "jz~FOO"]], [0, 0, 32, 0, 1, 5, 1, 2, 16, -1, 0.1761695906432748, ["mov     rdi, sp_0; sp_0", "call    fts_alloc", "mov     rbx, rax", "test    p, p", "jz      mem3"], ["mov~rdi,sp_0", "call~FOO", "mov~rbx,rax", "test~p,p", "jz~FOO"]], [2, 0, 1, 0, 1, 4, 0, 2, 1, -1, 0.0003132832080200501, ["call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     ebp, 0", "jmp     loc_8157"], ["call~FOO", "mov~<TAG>,0", "mov~ebp,0", "jmp~FOO"]], [0, 0, 10, 0, 1, 5, 0, 1, 24, -1, 0.0, ["mov     rdx, nitems; nitems", "mov     rsi, root; head", "mov     rdi, sp_0; sp_0", "call    fts_sort", "mov     root, rax"], ["mov~rdx,nitems", "mov~rsi,root", "mov~rdi,sp_0", "call~FOO", "mov~root,rax"]], [1, 0, 32, 0, 0, 2, 0, 1, 19, -1, 0.03446115288220551, ["cmp     byte ptr [v+len-2], 2Fh ; '/'", "jnz     loc_7F5F"], ["cmp~[yte ptr [v+0],0", "jnz~FOO"]], [1, 0, 32, 0, 0, 2, 0, 1, 18, -1, 0.011904761904761904, ["cmp     [rsp+58h+defer_stat], 0", "jz      loc_803C"], ["cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 32, 1, 0, 4, 1, 1, 21, -1, 0.13283208020050125, ["add     nitems, 1", "mov     rsi, [r14+nitems*8]; name", "test    rsi, rsi", "jz      loc_8082"], ["add~nitems,0", "mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [0, 1, 51, 0, 1, 5, 1, 2, 3, 11, 0.04714912280701754, ["mov     edi, 80h; size", "call    _malloc", "mov     rbp, rax", "test    sp_0, sp_0", "jz      loc_8157"], ["mov~edi,<STR>", "call~FOO", "mov~rbp,rax", "test~sp_0,sp_0", "jz~FOO"]], [0, 1, 53, 0, 0, 2, 1, 1, 2, 12, 0.03258145363408521, ["test    sil, 12h", "jz      loc_7F30"], ["test~sil,<STR>", "jz~FOO"]], [0, 0, 3, 0, 1, 6, 1, 1, 15, -1, 0.015037593984962405, ["lea     rsi, dir+1; dir", "mov     rdi, sp_0; sp_0", "call    diropen", "mov     [sp_0+28h], eax", "test    eax, eax", "jns     short loc_80EA"], ["lea~rsi,<TAG>", "mov~rdi,sp_0", "call~FOO", "mov~[sp_0+0],eax", "test~eax,eax", "jns~FOO"]], [1, 0, 4, 0, 0, 2, 1, 1, 14, -1, 0.04741019214703424, ["test    dword ptr [sp_0+48h], 204h", "jz      short loc_8113"], ["test~[word ptr [sp_0+0],0", "jz~FOO"]], [2, 0, 32, 0, 0, 2, 0, 0, 19, -1, 0.0045426065162907266, ["mov     word ptr [p+70h], 0Bh", "mov     qword ptr [p+0A8h], 2"], ["mov~[ord ptr [p+0],0", "mov~[word ptr [p+0],0"]], [2, 0, 32, 1, 0, 3, 0, 1, 20, -1, 0.028038847117794485, ["sub     len, 1", "cmp     len, 1", "jz      loc_7F5F"], ["sub~len,0", "cmp~len,0", "jz~FOO"]], [1, 0, 32, 0, 0, 2, 0, 1, 21, -1, 0.011904761904761904, ["cmp     byte ptr [v+len-2], 2Fh ; '/'", "jz      short loc_8022"], ["cmp~[yte ptr [v+0],0", "jz~FOO"]], [2, 0, 1, 0, 1, 4, 0, 2, 2, -1, 0.0003132832080200501, ["call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     ebp, 0", "jmp     loc_8157"], ["call~FOO", "mov~<TAG>,0", "mov~ebp,0", "jmp~FOO"]], [1, 0, 2, 0, 0, 2, 1, 1, 16, -1, 0.0, ["or      dword ptr [sp_0+48h], 4", "jmp     short loc_80EA"], ["or~[word ptr [sp_0+0],0", "jmp~FOO"]], [3, 0, 43, 1, 1, 8, 1, 2, 8, 6, 0.1469298245614035, ["add     rsi, 1", "cmp     rsi, 1000h", "mov     eax, 1000h", "cmovb   rsi, rax; more", "mov     rdi, sp_0; sp_0", "call    fts_palloc", "test    al, al", "jz      mem1"], ["add~rsi,0", "cmp~rsi,0", "mov~eax,0", "cmovb~rsi,rax", "mov~rdi,sp_0", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 44, 0, 0, 2, 0, 1, 7, 7, 0.10902255639097744, ["mov     esi, 0", "jmp     loc_7E91"], ["mov~esi,0", "jmp~FOO"]], [2, 0, 45, 2, 0, 10, 1, 1, 8, 7, 0.013784461152882205, ["mov     rcx, r8", "repne scasb", "not     rcx", "sub     rcx, 1", "cmp     rsi, rcx", "cmovb   rsi, rcx", "add     rdx, 8", "mov     rdi, [rdx]", "test    rdi, rdi", "jnz     short loc_7E72"], ["mov~rcx,r8", "scasb~<TAG>,", "not~rcx", "sub~rcx,0", "cmp~rsi,rcx", "cmovb~rsi,rcx", "add~rdx,0", "mov~rdi,<TAG>", "test~rdi,rdi", "jnz~FOO"]], [0, 0, 32, 0, 0, 2, 1, 1, 19, -1, 0.14536340852130325, ["test    compar, compar", "jz      loc_8055"], ["test~compar,compar", "jz~FOO"]], [1, 0, 32, 0, 1, 6, 0, 2, 18, -1, 0.13361528822055138, ["mov     edx, 0; follow", "mov     rsi, p; p", "mov     rdi, sp_0; sp_0", "call    fts_stat", "mov     [p+70h], ax", "jmp     loc_7FB4"], ["mov~edx,0", "mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "mov~[p+0],ax", "jmp~FOO"]], [1, 0, 42, 0, 0, 2, 0, 1, 9, 5, 0.15037593984962405, ["cmp     qword ptr [argv], 0", "jz      loc_8169"], ["cmp~<TAG>,0", "jz~FOO"]], [6, 0, 32, 0, 0, 9, 2, 1, 14, 0, 0.13784461152882205, ["mov     [rsp+58h+tmp], 0", "mov     r12d, 0", "mov     r13d, 0", "shr     ebx, 0Bh", "xor     ebx, 1", "mov     eax, ebx", "and     eax, 1", "mov     [rsp+58h+var_42], al", "jmp     loc_7FD5"], ["mov~[rsp+0],0", "mov~r12d,0", "mov~r13d,0", "shr~ebx,0", "xor~ebx,0", "mov~eax,ebx", "and~eax,0", "mov~[rsp+0],al", "jmp~FOO"]], [2, 0, 1, 0, 1, 4, 0, 2, 3, -1, 0.00015664160401002505, ["call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     ebp, 0", "jmp     loc_8157"], ["call~FOO", "mov~<TAG>,0", "mov~ebp,0", "jmp~FOO"]], [0, 0, 32, 0, 0, 2, 0, 0, 20, -1, 0.10682957393483708, ["mov     [p+10h], root", "mov     r13, root"], ["mov~[p+0],root", "mov~r13,root"]], [3, 0, 50, 0, 0, 7, 1, 1, 4, 10, 0.06140350877192982, ["mov     ecx, 10h", "mov     eax, 0", "mov     rdi, sp_0", "rep stosq", "mov     [sp_0+40h], compar", "test    bl, 2", "jnz     loc_7F45"], ["mov~ecx,0", "mov~eax,0", "mov~rdi,sp_0", "stosq~<TAG>,", "mov~[sp_0+0],compar", "test~bl,0", "jnz~FOO"]], [0, 0, 2, 0, 1, 2, 0, 1, 11, -1, 0.01931913116123642, ["mov     rdi, [sp_0+20h]; ptr", "call    free"], ["mov~rdi,[sp_0+0]", "call~FOO"]], [1, 0, 38, 0, 1, 8, 1, 2, 10, 4, 0.08275898078529656, ["mov     edx, 0; namelen", "lea     rsi, aWrittenBySSAnd+1Bh; name", "mov     rdi, sp_0; sp_0", "call    fts_alloc", "mov     rdx, rax", "mov     [rsp+58h+ptr], rax", "test    parent, parent", "jz      mem2"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,sp_0", "call~FOO", "mov~rdx,rax", "mov~[rsp+0],rax", "test~parent,parent", "jz~FOO"]], [0, 0, 3, 0, 2, 4, 0, 2, 13, -1, 0.027777777777777776, ["mov     rdi, root; head", "call    fts_lfree", "mov     rdi, [rsp+58h+ptr]; ptr", "call    free"], ["mov~rdi,root", "call~FOO", "mov~rdi,[rsp+0]", "call~FOO"]], [0, 0, 48, 0, 0, 1, 0, 0, 5, 9, 0.03696741854636591, ["mov     [sp_0+48h], ebx"], ["mov~[sp_0+0],ebx"]], [0, 0, 32, 0, 0, 1, 0, 1, 22, -1, 0.0045426065162907266, ["jmp     loc_7F5F"], ["jmp~FOO"]], [0, 0, 32, 0, 0, 4, 0, 1, 21, -1, 0.0045426065162907266, ["mov     rax, [rsp+58h+tmp]", "mov     [rax+10h], p", "mov     [rsp+58h+tmp], p", "jmp     loc_7FC4"], ["mov~rax,[rsp+0]", "mov~[rax+0],p", "mov~[rsp+0],p", "jmp~FOO"]], [0, 0, 32, 0, 0, 3, 0, 1, 21, -1, 0.0045426065162907266, ["mov     [rsp+58h+tmp], p", "mov     root, p", "jmp     loc_7FC4"], ["mov~[rsp+0],p", "mov~root,p", "jmp~FOO"]], [2, 0, 48, 0, 0, 5, 2, 1, 5, 9, 0.03696741854636591, ["mov     eax, ebx", "and     ah, 0FDh", "or      eax, 4", "mov     [sp_0+48h], eax", "jmp     loc_7E4B"], ["mov~eax,ebx", "and~ah,0", "or~eax,0", "mov~[sp_0+0],eax", "jmp~FOO"]], [1, 0, 1, 0, 1, 3, 0, 1, 9, -1, 0.01086048454469507, ["mov     rdi, sp_0; ptr", "call    free", "mov     ebp, 0"], ["mov~rdi,sp_0", "call~FOO", "mov~ebp,0"]], [1, 0, 9, 0, 1, 7, 1, 2, 12, -1, 0.09544695071010859, ["mov     edx, 0; namelen", "lea     rsi, aWrittenBySSAnd+1Bh; name", "mov     rdi, sp_0; sp_0", "call    fts_alloc", "mov     [sp_0+0], rax", "test    rax, rax", "jz      short mem3"], ["mov~edx,0", "lea~rsi,<TAG>", "mov~rdi,sp_0", "call~FOO", "mov~[sp_0+0],rax", "test~rax,rax", "jz~FOO"]], [2, 0, 10, 0, 0, 3, 0, 1, 11, -1, 0.03164160401002506, ["mov     [rsp+58h+ptr], 0", "mov     r13d, 0", "jmp     short loc_809E"], ["mov~[rsp+0],0", "mov~r13d,0", "jmp~FOO"]], [2, 0, 8, 0, 1, 9, 1, 2, 13, -1, 0.06056808688387637, ["mov     [rax+10h], root", "mov     rax, [sp_0+0]", "mov     word ptr [rax+70h], 9", "mov     rax, [sp_0+0]", "mov     qword ptr [rax+58h], 1", "mov     rdi, sp_0; fts", "call    setup_dir", "test    al, al", "jz      short mem3"], ["mov~[rax+0],root", "mov~rax,[sp_0+0]", "mov~[ord ptr [rax+0],0", "mov~rax,[sp_0+0]", "mov~[word ptr [rax+0],0", "mov~rdi,sp_0", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 32, 0, 0, 3, 1, 1, 20, -1, 0.023809523809523808, ["mov     qword ptr [p+10h], 0", "test    root, root", "jz      short loc_8075"], ["mov~[word ptr [p+0],0", "test~root,root", "jz~FOO"]], [0, 0, 38, 0, 0, 2, 1, 1, 10, 4, 0.07262949039264831, ["test    compar, compar", "jz      short loc_8102"], ["test~compar,compar", "jz~FOO"]], [3, 0, 32, 0, 0, 8, 0, 1, 15, -1, 0.19621971595655807, ["mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     rdi, rsi", "mov     eax, 0", "repne scasb", "not     rcx", "lea     rdx, [rcx-1]; namelen", "cmp     [rsp+58h+var_42], 0", "jz      loc_7F5F"], ["mov~rcx,0", "mov~rdi,rsi", "mov~eax,0", "scasb~<TAG>,", "not~rcx", "lea~rdx,[rcx-1]+0]", "cmp~[rsp+0],0", "jz~FOO"]], [1, 0, 36, 0, 0, 1, 0, 0, 11, 3, 0.04412071846282372, ["mov     [rsp+58h+ptr], 0"], ["mov~[rsp+0],0"]], [1, 0, 0, 1, 0, 9, 0, 0, 2, -1, 0.0, ["mov     rax, rbp", "add     rsp, 28h", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~rax,rbp", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 1, 0, 1, 4, 0, 2, 15, -1, 0.004177109440267336, ["lea     rdi, [sp_0+60h]; ir", "mov     esi, 0FFFFFFFFh; default_val", "call    i_ring_init", "jmp     short loc_8157"], ["lea~rdi,[sp_0+0]", "mov~esi,0", "call~FOO", "jmp~FOO"]]], "func_feature": [17, 29, 60, 0, 58, 89, 1, 237, 0.05575, 2, 7], "succs": [[49], [0, 36], [1], [2, 10], [28, 22], [16, 4], [13, 15], [6, 15], [17, 49], [8, 49], [1], [32], [11, 31], [18, 15], [34, 19], [42, 14], [56], [49], [26, 15], [25, 34], [9, 54], [56, 39], [21, 37], [57, 29], [57, 23], [33], [27, 15], [26, 44], [56], [57], [48, 35], [30], [32, 30], [52, 38], [33], [41, 53], [54], [56], [20], [43, 47], [48], [40, 3], [40], [12], [15], [20], [20], [12], [56], [42, 51], [49], [24, 42], [45, 46], [50, 55], [7, 15], [10], [], [56]], "fname": "rpl_fts_open", "n_num": 58}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 2, 0, 2, 6, 1, 3, 0, 0, 0.04923076923076923, ["mov     rdi, sp_0; sp_0", "call    free_dir", "mov     rdi, sp_0; ptr", "call    free", "test    ebx, ebx", "jnz     short loc_82C6"], ["mov~rdi,sp_0", "call~FOO", "mov~rdi,sp_0", "call~FOO", "test~ebx,ebx", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 7, -1, 0.016153846153846154, ["jmp     short loc_8270"], ["jmp~FOO"]], [0, 0, 3, 0, 1, 1, 0, 1, 5, -1, 0.05923076923076923, ["call    hash_free"], ["call~FOO"]], [1, 0, 17, 0, 2, 7, 1, 3, 2, 3, 0.2353846153846154, ["mov     rdi, [sp_0+10h]; ptr", "call    free", "mov     rdi, [sp_0+20h]; ptr", "call    free", "mov     eax, [sp_0+48h]", "test    ah, 2", "jz      short loc_8250"], ["mov~rdi,[sp_0+0]", "call~FOO", "mov~rdi,[sp_0+0]", "call~FOO", "mov~eax,[sp_0+0]", "test~ah,0", "jz~FOO"]], [0, 0, 19, 0, 0, 3, 1, 1, 1, 4, 0.20461538461538462, ["mov     rdi, [sp_0+8]; head", "test    rdi, rdi", "jz      short loc_81ED"], ["mov~rdi,[sp_0+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 18, 0, 1, 1, 0, 1, 2, 4, 0.0, ["call    fts_lfree"], ["call~FOO"]], [0, 0, 10, 0, 0, 3, 1, 1, 3, 2, 0.09230769230769231, ["mov     edi, [sp_0+2Ch]; fd", "test    edi, edi", "js      short loc_8254"], ["mov~edi,[sp_0+0]", "test~edi,edi", "js~FOO"]], [0, 0, 9, 0, 1, 3, 1, 2, 4, 2, 0.03538461538461538, ["call    _close", "test    eax, eax", "jz      short loc_8254"], ["call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 10, 0, 1, 5, 1, 2, 4, -1, 0.08615384615384615, ["mov     edi, [sp_0+28h]; fd", "call    _fchdir", "mov     ebx, eax", "test    eax, eax", "jz      short loc_82A2"], ["mov~edi,[sp_0+0]", "call~FOO", "mov~ebx,eax", "test~eax,eax", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 1, 1, 3, 2, 0.13846153846153847, ["test    al, 4", "jz      short loc_828D"], ["test~al,0", "jz~FOO"]], [0, 0, 6, 0, 1, 2, 0, 1, 5, -1, 0.021538461538461538, ["call    ___errno_location", "mov     ebx, [rax]"], ["call~FOO", "mov~ebx,<TAG>"]], [0, 0, 9, 0, 1, 2, 0, 1, 5, -1, 0.0, ["call    ___errno_location", "mov     ebx, [rax]"], ["call~FOO", "mov~ebx,<TAG>"]], [0, 0, 8, 0, 1, 4, 1, 2, 5, -1, 0.07692307692307693, ["mov     edi, [sp_0+28h]; fd", "call    _close", "test    ebx, ebx", "jnz     loc_821E"], ["mov~edi,[sp_0+0]", "call~FOO", "test~ebx,ebx", "jnz~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 6, -1, 0.06615384615384616, ["lea     rdi, [sp_0+60h]; fd_ring", "call    fd_ring_clear", "mov     rdi, [sp_0+50h]", "test    rdi, rdi", "jnz     short loc_826B"], ["lea~rdi,[sp_0+0]", "call~FOO", "mov~rdi,[sp_0+0]", "test~rdi,rdi", "jnz~FOO"]], [0, 0, 7, 0, 0, 2, 1, 1, 6, -1, 0.021538461538461538, ["test    eax, eax", "jz      loc_821E"], ["test~eax,eax", "jz~FOO"]], [0, 0, 6, 0, 1, 3, 0, 2, 7, -1, 0.0, ["call    ___errno_location", "mov     ebx, [rax]", "jmp     loc_821E"], ["call~FOO", "mov~ebx,<TAG>", "jmp~FOO"]], [1, 0, 1, 0, 1, 4, 0, 2, 7, -1, 0.0, ["call    ___errno_location", "mov     [rax], ebx", "mov     ebx, 0FFFFFFFFh", "jmp     short loc_8284"], ["call~FOO", "mov~<TAG>,ebx", "mov~ebx,0", "jmp~FOO"]], [1, 0, 24, 0, 1, 4, 0, 2, 3, 6, 0.06615384615384616, ["call    free", "mov     rdi, p; ptr", "cmp     qword ptr [p+58h], 0", "js      short loc_81D7"], ["call~FOO", "mov~rdi,p", "cmp~[word ptr [p+0],0", "js~FOO"]], [0, 0, 24, 0, 0, 3, 1, 1, 2, 7, 0.007692307692307693, ["mov     rbx, [p+10h]", "test    rbx, rbx", "jnz     short loc_8232"], ["mov~rbx,[p+0]", "test~rbx,rbx", "jnz~FOO"]], [0, 0, 24, 0, 0, 2, 0, 1, 3, 7, 0.0, ["mov     rbx, [p+8]", "jmp     short loc_8232"], ["mov~rbx,[p+0]", "jmp~FOO"]], [1, 0, 25, 0, 0, 2, 0, 0, 1, 7, 0.007692307692307693, ["cmp     qword ptr [p+58h], 0", "jns     short loc_8241"], ["cmp~[word ptr [p+0],0", "jns~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 6, -1, 0.0, ["mov     eax, ebx", "add     rsp, 8", "pop     rbx", "pop     sp_0", "retn"], ["mov~eax,ebx", "add~rsp,0", "pop~rbx", "pop~sp_0", "retn"]], [1, 0, 1, 0, 2, 6, 0, 3, 5, 0, 0.021538461538461538, ["mov     rdi, sp_0; sp_0", "call    free_dir", "mov     rdi, sp_0; ptr", "call    free", "mov     ebx, 0", "jmp     short loc_8284"], ["mov~rdi,sp_0", "call~FOO", "mov~rdi,sp_0", "call~FOO", "mov~ebx,0", "jmp~FOO"]], [1, 0, 26, 1, 0, 7, 1, 1, 0, 5, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbp, sp_0", "mov     sp_0, [sp_0]", "test    rdi, rdi", "jz      short loc_81DF"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,sp_0", "mov~sp_0,<TAG>", "test~rdi,rdi", "jz~FOO"]], [0, 0, 21, 0, 0, 1, 0, 0, 2, 6, 0.033846153846153845, ["mov     rbx, p"], ["mov~rbx,p"]], [0, 0, 20, 0, 1, 2, 0, 1, 3, 5, 0.15384615384615385, ["mov     rdi, p; ptr", "call    free"], ["mov~rdi,p", "call~FOO"]], [1, 0, 5, 0, 1, 6, 1, 2, 4, 1, 0.1, ["lea     rdi, [sp_0+60h]; fd_ring", "call    fd_ring_clear", "mov     rdi, [sp_0+50h]; table", "mov     ebx, 0", "test    rdi, rdi", "jz      short loc_82D4"], ["lea~rdi,[sp_0+0]", "call~FOO", "mov~rdi,[sp_0+0]", "mov~ebx,0", "test~rdi,rdi", "jz~FOO"]]], "func_feature": [19, 13, 38, 0, 27, 41, 1, 92, 0.05533, 0, 2], "succs": [[16, 21], [0], [0], [9, 6], [3, 5], [3], [26, 7], [10, 26], [11, 12], [8, 26], [13], [12], [13, 14], [1, 2], [13, 15], [13], [21], [25, 18], [17, 19], [17], [24, 18], [], [21], [4, 20], [25], [4], [2, 22]], "fname": "rpl_fts_close", "n_num": 27}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 24, 0, 1, 6, 1, 2, 0, 0, 0.0012578616352201257, ["lea     rsi, dir+1; dir", "mov     rdi, sp_0; sp_0", "call    diropen", "mov     [p+44h], eax", "test    eax, eax", "js      short loc_840C"], ["lea~rsi,<TAG>", "mov~rdi,sp_0", "call~FOO", "mov~[p+0],eax", "test~eax,eax", "js~FOO"]], [1, 0, 25, 0, 0, 2, 1, 1, 6, -1, 0.0016172506738544475, ["test    byte ptr [sp_0+48h], 4", "jnz     check_for_dir"], ["test~[yte ptr [sp_0+0],0", "jnz~FOO"]], [0, 2, 16, 0, 0, 4, 1, 1, 9, -1, 0.00880503144654088, ["mov     eax, [sp_0+48h]", "and     eax, 18h", "cmp     eax, 18h", "jz      short loc_8856"], ["mov~eax,[sp_0+0]", "and~eax,<STR>", "cmp~eax,<STR>", "jz~FOO"]], [1, 0, 17, 0, 0, 3, 0, 1, 8, -1, 0.04788858939802336, ["mov     rbx, [p+8]", "cmp     qword ptr [parent+68h], 0", "jnz     short loc_8802"], ["mov~rbx,[p+0]", "cmp~[word ptr [parent+0],0", "jnz~FOO"]], [1, 0, 22, 0, 0, 2, 1, 1, 8, -1, 0.0009883198562443845, ["or      word ptr [p+72h], 2", "jmp     check_for_dir"], ["or~[ord ptr [p+0],0", "jmp~FOO"]], [1, 0, 2, 0, 1, 4, 0, 1, 13, -1, 8.984725965858041e-05, ["mov     word ptr [p+70h], 6", "mov     rsi, p; ent", "mov     rdi, sp_0; fts", "call    leave_dir"], ["mov~[ord ptr [p+0],0", "mov~rsi,p", "mov~rdi,sp_0", "call~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 12, 1, 0.0052111410601976636, ["cmp     dword ptr [p+40h], 0", "jnz     loc_895D"], ["cmp~[word ptr [p+0],0", "jnz~FOO"]], [1, 0, 22, 0, 1, 5, 0, 2, 8, -1, 0.0009883198562443845, ["call    ___errno_location", "mov     eax, [rax]", "mov     [p+40h], eax", "mov     word ptr [p+70h], 7", "jmp     check_for_dir"], ["call~FOO", "mov~eax,<TAG>", "mov~[p+0],eax", "mov~[ord ptr [p+0],0", "jmp~FOO"]], [2, 0, 1, 0, 0, 5, 1, 1, 12, -1, 0.0016172506738544475, ["mov     eax, [sp_0+48h]", "and     eax, 2000h", "mov     ebp, 0", "cmovz   rbp, p", "jmp     loc_839B"], ["mov~eax,[sp_0+0]", "and~eax,0", "mov~ebp,0", "cmovz~rbp,p", "jmp~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 11, 2, 0.011320754716981131, ["cmp     word ptr [p+70h], 2", "jz      short loc_8610"], ["cmp~[ord ptr [p+0],0", "jz~FOO"]], [1, 0, 2, 0, 0, 2, 0, 1, 13, 0, 8.984725965858041e-05, ["mov     word ptr [p+70h], 7", "jmp     loc_8610"], ["mov~[ord ptr [p+0],0", "jmp~FOO"]], [3, 0, 13, 0, 1, 9, 1, 2, 9, -1, 0.03387241689128481, ["mov     edx, 0; follow", "mov     rsi, p; p", "mov     rdi, sp_0; sp_0", "call    fts_stat", "mov     [p+70h], ax", "mov     edx, [p+90h]", "and     edx, 0F000h", "cmp     edx, 4000h", "jnz     loc_872C"], ["mov~edx,0", "mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "mov~[p+0],ax", "mov~edx,[p+0]", "and~edx,0", "cmp~edx,0", "jnz~FOO"]], [1, 0, 15, 0, 1, 5, 0, 2, 10, -1, 0.004492362982929021, ["mov     esi, [sp_0+2Ch]; dir_fd", "mov     rdi, parent; p", "call    leaf_optimization_0", "cmp     eax, 2", "jnz     short loc_8802"], ["mov~esi,[sp_0+0]", "mov~rdi,parent", "call~FOO", "cmp~eax,0", "jnz~FOO"]], [0, 0, 4, 0, 1, 3, 0, 2, 7, -1, 0.0, ["mov     edi, [p+44h]; fd", "call    _close", "jmp     loc_835F"], ["mov~edi,[p+0]", "call~FOO", "jmp~FOO"]], [1, 0, 5, 0, 0, 2, 1, 1, 6, -1, 0.0042527702905061394, ["test    byte ptr [p+72h], 2", "jnz     loc_8421"], ["test~[yte ptr [p+0],0", "jnz~FOO"]], [0, 0, 29, 0, 1, 4, 1, 2, 7, -1, 0.009359089547768791, ["mov     rdi, sp_0; sp_0", "call    restore_initial_cwd", "test    eax, eax", "jnz     loc_86BC"], ["mov~rdi,sp_0", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 68, 0, 1, 5, 0, 2, 6, 10, 0.016501946690625935, ["mov     [sp_0], p", "mov     rdi, tmp; ptr", "call    free", "cmp     qword ptr [p+58h], 0", "jz      loc_8628"], ["mov~<TAG>,p", "mov~rdi,tmp", "call~FOO", "cmp~[word ptr [p+0],0", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 10, -1, 0.028032345013477088, ["cmp     qword ptr [p+58h], 0", "jz      loc_894E"], ["cmp~[word ptr [p+0],0", "jz~FOO"]], [0, 0, 37, 0, 0, 3, 1, 1, 7, -1, 0.02183288409703504, ["mov     sp_0, [r12+8]; head", "test    rdi, rdi", "jz      short loc_849B"], ["mov~sp_0,[r12+0]", "test~rdi,rdi", "jz~FOO"]], [1, 0, 44, 0, 0, 3, 1, 1, 6, -1, 0.018328840970350403, ["mov     eax, [r12+48h]", "test    al, 40h", "jz      loc_842E"], ["mov~eax,[r12+0]", "test~al,0", "jz~FOO"]], [0, 0, 43, 0, 0, 3, 0, 1, 7, -1, 0.0018867924528301887, ["mov     rcx, [r12+18h]", "cmp     [p+78h], rcx", "jz      loc_842E"], ["mov~rcx,[r12+0]", "cmp~[p+0],rcx", "jz~FOO"]], [1, 0, 36, 0, 0, 2, 1, 1, 8, -1, 0.005390835579514825, ["test    ah, 10h", "jnz     short loc_8485"], ["test~ah,0", "jnz~FOO"]], [1, 0, 29, 0, 0, 2, 0, 1, 8, -1, 0.010676849356094639, ["cmp     ax, 2", "jz      loc_876F"], ["cmp~ax,0", "jz~FOO"]], [1, 0, 68, 0, 0, 4, 0, 1, 7, 9, 0.011455525606469003, ["movzx   eax, word ptr [p+74h]", "mov     tmp, p", "cmp     ax, 4", "jnz     loc_86DA"], ["movzx~eax,[ord ptr [p+0]", "mov~tmp,p", "cmp~ax,0", "jnz~FOO"]], [1, 0, 9, 0, 0, 4, 0, 0, 11, -1, 0.014555256064690027, ["mov     rcx, [parent+68h]", "lea     rdx, [rcx-1]", "cmp     rdx, 0FFFFFFFFFFFFFFFDh", "jbe     short loc_886D"], ["mov~rcx,[parent+0]", "lea~rdx,[rcx-1]+0]", "cmp~rdx,0", "jbe~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 12, -1, 0.0052111410601976636, ["cmp     ax, 1", "jnz     loc_839B"], ["cmp~ax,0", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 13, -1, 0.0004492362982929021, ["jmp     loc_8747"], ["jmp~FOO"]], [1, 0, 27, 0, 1, 7, 1, 2, 9, -1, 0.005570530098831986, ["mov     rcx, [p+30h]; dir", "mov     edx, 0FFFFFFFFh; fd", "mov     rsi, p; p", "mov     rdi, sp_0; sp_0", "call    fts_safe_changedir", "test    eax, eax", "jz      short loc_84B2"], ["mov~rcx,[p+0]", "mov~edx,0", "mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 24, 0, 0, 2, 1, 1, 12, -1, 0.0010781671159029648, ["or      word ptr [p+72h], 2", "jmp     short loc_8789"], ["or~[ord ptr [p+0],0", "jmp~FOO"]], [0, 0, 26, 0, 1, 6, 1, 2, 11, -1, 0.002336028751123091, ["lea     rsi, dir+1; dir", "mov     rdi, sp_0; sp_0", "call    diropen", "mov     [p+44h], eax", "test    eax, eax", "js      short loc_87BC"], ["lea~rsi,<TAG>", "mov~rdi,sp_0", "call~FOO", "mov~[p+0],eax", "test~eax,eax", "js~FOO"]], [0, 0, 6, 0, 0, 1, 0, 1, 11, -1, 0.0002695417789757412, ["jmp     loc_872C"], ["jmp~FOO"]], [1, 0, 26, 0, 1, 7, 2, 2, 10, -1, 0.0025157232704402514, ["call    ___errno_location", "mov     eax, [rax]", "mov     [p+40h], eax", "or      word ptr [p+72h], 1", "mov     rax, [sp_0+8]", "test    p, p", "jz      short loc_84B2"], ["call~FOO", "mov~eax,<TAG>", "mov~[p+0],eax", "or~[ord ptr [p+0],0", "mov~rax,[sp_0+0]", "test~p,p", "jz~FOO"]], [2, 0, 27, 1, 3, 14, 1, 4, 8, -1, 0.009658580413297395, ["mov     rdi, sp_0; sp_0", "call    free_dir", "mov     rdx, [p+60h]", "mov     [p+48h], rdx", "lea     tmp, [p+108h]", "add     rdx, 1; n", "mov     rdi, [sp_0+20h]; dest", "mov     rsi, rbp; src", "call    _memmove", "mov     esi, 2Fh ; '/'; c", "mov     rdi, rbp; s", "call    _strrchr", "test    rax, rax", "jz      short loc_86A2"], ["mov~rdi,sp_0", "call~FOO", "mov~rdx,[p+0]", "mov~[p+0],rdx", "lea~tmp,[p+0]", "add~rdx,0", "mov~rdi,[sp_0+0]", "mov~rsi,rbp", "call~FOO", "mov~esi,0", "mov~rdi,rbp", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 6, 0, 0, 2, 0, 1, 12, -1, 0.0004492362982929021, ["mov     [parent+68h], rdx", "jmp     loc_872C"], ["mov~[parent+0],rdx", "jmp~FOO"]], [0, 0, 26, 0, 0, 2, 0, 1, 9, -1, 0.003234501347708895, ["cmp     rbp, rax", "jz      short loc_86CF"], ["cmp~rbp,rax", "jz~FOO"]], [0, 0, 26, 0, 0, 6, 1, 1, 11, -1, 0.0013477088948787063, ["mov     rdx, [p+8]", "mov     rdx, [rdx+30h]", "mov     [p+30h], rdx", "mov     p, [p+10h]", "test    p, p", "jnz     short loc_846E"], ["mov~rdx,[p+0]", "mov~rdx,[rdx+0]", "mov~[p+0],rdx", "mov~p,[p+0]", "test~p,p", "jnz~FOO"]], [0, 0, 24, 0, 0, 1, 0, 1, 12, -1, 0.0021563342318059297, ["jmp     short loc_84B2"], ["jmp~FOO"]], [2, 0, 48, 0, 1, 10, 1, 2, 7, 8, 0.0071877807726864335, ["mov     [sp_0], p", "mov     rdx, [sp_0+20h]", "mov     p, [p+48h]", "mov     byte ptr [rdx+rax], 0", "mov     esi, 3; type", "mov     rdi, sp_0; sp_0", "call    fts_build", "mov     rbx, rax", "test    p, p", "jz      short loc_852A"], ["mov~<TAG>,p", "mov~rdx,[sp_0+0]", "mov~p,[p+0]", "mov~<TAG>,0", "mov~esi,0", "mov~rdi,sp_0", "call~FOO", "mov~rbx,rax", "test~p,p", "jz~FOO"]], [1, 0, 49, 0, 0, 3, 0, 1, 6, 7, 0.025756214435459716, ["mov     rax, [tmp+8]", "cmp     qword ptr [rax+18h], 0", "jnz     loc_84F4"], ["mov~rax,[tmp+0]", "cmp~[word ptr [rax+0],0", "jnz~FOO"]], [2, 0, 31, 0, 1, 4, 1, 1, 9, -1, 0.0007187780772686433, ["and     ah, 0EFh", "mov     [sp_0+48h], eax", "call    fts_lfree", "mov     qword ptr [sp_0+8], 0"], ["and~ah,0", "mov~[sp_0+0],eax", "call~FOO", "mov~[word ptr [sp_0+0],0"]], [3, 0, 1, 0, 2, 7, 0, 3, 8, -1, 0.0003294399520814615, ["mov     rdi, p; ptr", "call    free", "call    ___errno_location", "mov     dword ptr [rax], 0", "mov     qword ptr [sp_0], 0", "mov     ebp, 0", "jmp     loc_839B"], ["mov~rdi,p", "call~FOO", "call~FOO", "mov~<TAG>,0", "mov~<TAG>,0", "mov~ebp,0", "jmp~FOO"]], [1, 0, 22, 0, 1, 6, 0, 2, 7, 6, 0.02476789457921533, ["mov     rbx, [tmp+8]", "mov     [sp_0], p", "mov     rdi, tmp; ptr", "call    free", "cmp     qword ptr [p+58h], 0FFFFFFFFFFFFFFFFh", "jz      loc_8876"], ["mov~rbx,[tmp+0]", "mov~<TAG>,p", "mov~rdi,tmp", "call~FOO", "cmp~[word ptr [p+0],0", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    _abort"], ["call~FOO"]], [1, 0, 20, 0, 0, 2, 0, 1, 8, 5, 0.023899371069182388, ["cmp     word ptr [p+70h], 0Bh", "jz      loc_889B"], ["cmp~[ord ptr [p+0],0", "jz~FOO"]], [2, 0, 23, 0, 1, 11, 0, 1, 10, -1, 0.0030997304582210243, ["lea     rsi, [rax+1]; src", "mov     rcx, 0FFFFFFFFFFFFFFFFh", "mov     eax, 0", "mov     rdi, rsi", "repne scasb", "not     rcx", "mov     rdx, rcx; n", "lea     r13, [rcx-1]", "mov     rdi, rbp; dest", "call    _memmove", "mov     [p+60h], r13"], ["lea~rsi,[rax+0]", "mov~rcx,0", "mov~eax,0", "mov~rdi,rsi", "scasb~<TAG>,", "not~rcx", "mov~rdx,rcx", "lea~r13,[rcx-1]+0]", "mov~rdi,rbp", "call~FOO", "mov~[p+0],r13"]], [1, 0, 25, 0, 0, 2, 0, 1, 10, -1, 0.0011680143755615454, ["cmp     byte ptr [p+109h], 0", "jnz     short loc_8677"], ["cmp~[yte ptr [p+0],0", "jnz~FOO"]], [0, 0, 7, 0, 1, 4, 1, 2, 10, 3, 0.00880503144654088, ["mov     rdi, sp_0; sp_0", "call    restore_initial_cwd", "test    eax, eax", "jz      loc_85EE"], ["mov~rdi,sp_0", "call~FOO", "test~eax,eax", "jz~FOO"]], [2, 0, 18, 0, 0, 5, 0, 1, 9, 4, 0.023000898472596586, ["mov     rdx, [sp_0+20h]", "mov     rax, [p+48h]", "mov     byte ptr [rdx+rax], 0", "cmp     qword ptr [p+58h], 0", "jz      loc_88A0"], ["mov~rdx,[sp_0+0]", "mov~rax,[p+0]", "mov~<TAG>,0", "cmp~[word ptr [p+0],0", "jz~FOO"]], [1, 0, 6, 0, 1, 5, 1, 2, 11, 3, 0.0, ["call    ___errno_location", "mov     eax, [rax]", "mov     [p+40h], eax", "or      dword ptr [sp_0+48h], 2000h", "jmp     loc_85EE"], ["call~FOO", "mov~eax,<TAG>", "mov~[p+0],eax", "or~[word ptr [sp_0+0],0", "jmp~FOO"]], [1, 0, 8, 0, 0, 2, 1, 1, 11, 3, 0.0035938903863432167, ["test    al, 1", "jnz     loc_85EE"], ["test~al,0", "jnz~FOO"]], [1, 0, 7, 0, 1, 7, 1, 2, 12, 3, 0.0016172506738544475, ["mov     rsi, [p+8]; p", "lea     rcx, dir; \"..\"", "mov     edx, 0FFFFFFFFh; fd", "mov     rdi, sp_0; sp_0", "call    fts_safe_changedir", "test    eax, eax", "jz      loc_85EE"], ["mov~rsi,[p+0]", "lea~rcx,<TAG>", "mov~edx,0", "mov~rdi,sp_0", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 6, 0, 1, 5, 1, 2, 13, 3, 0.0, ["call    ___errno_location", "mov     eax, [rax]", "mov     [p+40h], eax", "or      dword ptr [sp_0+48h], 2000h", "jmp     loc_85EE"], ["call~FOO", "mov~eax,<TAG>", "mov~[p+0],eax", "or~[word ptr [sp_0+0],0", "jmp~FOO"]], [0, 0, 6, 0, 1, 2, 0, 1, 12, 3, 0.0026954177897574125, ["mov     edi, [p+44h]; fd", "call    _close"], ["mov~edi,[p+0]", "call~FOO"]], [1, 0, 30, 0, 1, 6, 1, 2, 8, -1, 0.020934411500449238, ["mov     esi, 3; type", "mov     rdi, sp_0; sp_0", "call    fts_build", "mov     [sp_0+8], rax", "test    rax, rax", "jz      short loc_84C5"], ["mov~esi,0", "mov~rdi,sp_0", "call~FOO", "mov~[sp_0+0],rax", "test~rax,rax", "jz~FOO"]], [0, 0, 22, 0, 1, 7, 0, 2, 9, -1, 0.014600179694519317, ["mov     rax, [sp_0+20h]", "mov     [p+38h], rax", "mov     [p+30h], rax", "mov     rdi, sp_0; fts", "call    setup_dir", "mov     rbp, p", "jmp     short check_for_dir"], ["mov~rax,[sp_0+0]", "mov~[p+0],rax", "mov~[p+0],rax", "mov~rdi,sp_0", "call~FOO", "mov~rbp,p", "jmp~FOO"]], [0, 0, 23, 0, 0, 1, 0, 1, 11, -1, 0.0010332434860736747, ["jmp     short loc_86A2"], ["jmp~FOO"]], [1, 0, 23, 0, 0, 3, 0, 1, 9, -1, 0.02407906558849955, ["mov     rbp, [sp_0+8]", "mov     qword ptr [sp_0+8], 0", "jmp     name"], ["mov~rbp,[sp_0+0]", "mov~[word ptr [sp_0+0],0", "jmp~FOO"]], [2, 0, 1, 0, 0, 3, 1, 1, 8, -1, 0.0003294399520814615, ["or      dword ptr [sp_0+48h], 2000h", "mov     ebp, 0", "jmp     loc_839B"], ["or~[word ptr [sp_0+0],0", "mov~ebp,0", "jmp~FOO"]], [0, 1, 6, 0, 0, 2, 1, 1, 9, -1, 0.0071877807726864335, ["test    byte ptr [sp_0+49h], 20h", "jnz     loc_8944"], ["test~[yte ptr [sp_0+0],<STR>", "jnz~FOO"]], [0, 0, 8, 0, 1, 4, 1, 2, 13, 4, 0.0020215633423180594, ["mov     edi, [p+44h]; fd", "call    _fchdir", "test    eax, eax", "jz      loc_85E6"], ["mov~edi,[p+0]", "call~FOO", "test~eax,eax", "jz~FOO"]], [1, 0, 10, 0, 0, 2, 1, 1, 12, 5, 0.004851752021563342, ["test    ah, 2", "jz      loc_88C8"], ["test~ah,0", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 10, -1, 0.004312668463611859, ["cmp     dword ptr [p+40h], 0", "jz      short loc_84E4"], ["cmp~[word ptr [p+0],0", "jz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 11, -1, 0.001527403414195867, ["cmp     word ptr [p+70h], 4", "jz      short loc_84E4"], ["cmp~[ord ptr [p+0],0", "jz~FOO"]], [1, 0, 2, 0, 0, 1, 0, 0, 12, -1, 0.0, ["mov     word ptr [p+70h], 7"], ["mov~[ord ptr [p+0],0"]], [1, 0, 7, 0, 1, 5, 1, 2, 14, 4, 0.0, ["call    ___errno_location", "mov     eax, [rax]", "mov     [p+40h], eax", "or      dword ptr [sp_0+48h], 2000h", "jmp     loc_85E6"], ["call~FOO", "mov~eax,<TAG>", "mov~[p+0],eax", "or~[word ptr [sp_0+0],0", "jmp~FOO"]], [0, 0, 1, 0, 1, 4, 0, 2, 11, -1, 0.0002695417789757412, ["mov     rsi, p; ent", "mov     rdi, sp_0; fts", "call    leave_dir", "jmp     loc_839B"], ["mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "jmp~FOO"]], [1, 0, 15, 0, 0, 3, 1, 1, 10, 4, 0.01293800539083558, ["movzx   eax, word ptr [p+72h]", "test    al, 2", "jz      loc_88F0"], ["movzx~eax,[ord ptr [p+0]", "test~al,0", "jz~FOO"]], [1, 0, 106, 1, 0, 8, 1, 1, 0, 13, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbp, [sp_0]", "test    rbp, rbp", "jz      loc_8930"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,<TAG>", "test~rbp,rbp", "jz~FOO"]], [0, 1, 104, 0, 0, 2, 1, 1, 1, 12, 0.009254267744833783, ["test    byte ptr [sp_0+49h], 20h", "jnz     loc_893A"], ["test~[yte ptr [sp_0+0],<STR>", "jnz~FOO"]], [3, 0, 22, 2, 1, 13, 0, 1, 9, -1, 0.05119796346211441, ["mov     rdx, [p+8]", "mov     rax, [rdx+48h]", "lea     rdi, [rax-1]", "mov     rdx, [rdx+38h]", "cmp     byte ptr [rdx+rax-1], 2Fh ; '/'", "cmovnz  rdi, rax", "add     rdi, [sp_0+20h]", "mov     byte ptr [rdi], 2Fh ; '/'", "mov     rax, [p+60h]", "lea     rdx, [rax+1]; n", "lea     rsi, [p+108h]; src", "add     rdi, 1; dest", "call    _memmove"], ["mov~rdx,[p+0]", "mov~rax,[rdx+0]", "lea~rdi,[rax-1]+0]", "mov~rdx,[rdx+0]", "cmp~[yte ptr [rdx+0],0", "cmovnz~rdi,rax", "add~rdi,[sp_0+0]", "mov~<TAG>,0", "mov~rax,[p+0]", "lea~rdx,[rax+0]", "lea~rsi,[p+0]", "add~rdi,0", "call~FOO"]], [0, 0, 23, 0, 1, 4, 0, 2, 8, -1, 0.0061994609164420485, ["mov     rdi, tmp; ptr", "call    free", "mov     tmp, p", "jmp     name"], ["mov~rdi,tmp", "call~FOO", "mov~tmp,p", "jmp~FOO"]], [1, 0, 23, 0, 0, 3, 0, 1, 10, -1, 0.010332434860736747, ["mov     word ptr [p+74h], 3", "mov     rbp, p", "jmp     name"], ["mov~[ord ptr [p+0],0", "mov~rbp,p", "jmp~FOO"]], [2, 0, 102, 0, 0, 5, 0, 1, 2, 11, 0.018149146451033243, ["mov     r12, sp_0", "movzx   eax, word ptr [p+74h]", "mov     word ptr [p+74h], 3", "cmp     ax, 1", "jz      short loc_838A"], ["mov~r12,sp_0", "movzx~eax,[ord ptr [p+0]", "mov~[ord ptr [p+0],0", "cmp~ax,0", "jz~FOO"]], [1, 0, 100, 0, 0, 2, 0, 1, 3, 10, 0.026684636118598382, ["cmp     ax, 2", "jz      loc_83A9"], ["cmp~ax,0", "jz~FOO"]], [1, 0, 21, 0, 0, 3, 0, 1, 6, -1, 0.08511530398322852, ["mov     [sp_0], p", "cmp     word ptr [p+70h], 0Bh", "jz      loc_87CE"], ["mov~<TAG>,p", "cmp~[ord ptr [p+0],0", "jz~FOO"]], [2, 0, 26, 0, 1, 6, 0, 2, 5, -1, 0.011410601976639713, ["mov     edx, 1; follow", "mov     rsi, p; p", "call    fts_stat", "mov     [p+70h], ax", "cmp     ax, 1", "jnz     check_for_dir"], ["mov~edx,0", "mov~rsi,p", "call~FOO", "mov~[p+0],ax", "cmp~ax,0", "jnz~FOO"]], [1, 0, 91, 0, 0, 2, 0, 1, 4, 9, 0.024797843665768194, ["cmp     word ptr [p+70h], 1", "jnz     next"], ["cmp~[ord ptr [p+0],0", "jnz~FOO"]], [0, 1, 24, 0, 0, 2, 1, 1, 8, 7, 0.0031446540880503146, ["test    byte ptr [sp_0+49h], 20h", "jz      short cd_dot_dot"], ["test~[yte ptr [sp_0+0],<STR>", "jz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 7, -1, 0.022761305780173702, ["cmp     word ptr [p+70h], 1", "jnz     loc_839B"], ["cmp~[ord ptr [p+0],0", "jnz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 9, -1, 0.00017969451931716083, ["mov     tmp, p", "jmp     loc_839B"], ["mov~tmp,p", "jmp~FOO"]], [1, 0, 45, 0, 0, 2, 0, 1, 5, -1, 0.009913147648996706, ["cmp     ax, 4", "jz      short loc_8355"], ["cmp~ax,0", "jz~FOO"]], [1, 0, 4, 0, 0, 2, 0, 1, 8, -1, 0.014914645103324348, ["cmp     qword ptr [p+58h], 0", "jnz     short loc_8747"], ["cmp~[word ptr [p+0],0", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, -1, 8.984725965858041e-05, ["mov     ebp, 0", "jmp     loc_839B"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 45, 0, 0, 1, 0, 1, 6, -1, 0.003953279424977538, ["jmp     loc_8339"], ["jmp~FOO"]], [0, 0, 3, 0, 0, 2, 0, 0, 9, -1, 0.0005390835579514824, ["mov     rax, [p+78h]", "mov     [sp_0+18h], rax"], ["mov~rax,[p+0]", "mov~[sp_0+0],rax"]], [0, 0, 4, 0, 0, 1, 0, 1, 12, -1, 0.0004492362982929021, ["jmp     loc_873E"], ["jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 10, -1, 0.0005390835579514824, ["mov     ebp, 0", "jmp     loc_839B"], ["mov~ebp,0", "jmp~FOO"]], [0, 0, 68, 0, 0, 3, 1, 1, 5, 8, 0.037945492662473795, ["mov     rbx, [tmp+10h]", "test    rbx, rbx", "jnz     short loc_853A"], ["mov~rbx,[tmp+0]", "test~rbx,rbx", "jnz~FOO"]], [1, 0, 5, 0, 0, 2, 0, 1, 11, -1, 0.005031446540880503, ["cmp     ax, 1", "jnz     loc_839B"], ["cmp~ax,0", "jnz~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 9, -1, 0.006019766397124888, ["mov     rsi, p; ent", "mov     rdi, sp_0; fts", "call    enter_dir", "test    al, al", "jnz     loc_839B"], ["mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "test~al,al", "jnz~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 7, -1, 0.002815214135968853, ["mov     rdi, [sp_0+8]; head", "test    rdi, rdi", "jz      short loc_8377"], ["mov~rdi,[sp_0+0]", "test~rdi,rdi", "jz~FOO"]], [1, 0, 91, 0, 0, 2, 0, 1, 5, 9, 0.00655884995507637, ["cmp     ax, 1", "jnz     next"], ["cmp~ax,0", "jnz~FOO"]], [2, 0, 1, 0, 1, 4, 0, 2, 10, -1, 0.0, ["call    ___errno_location", "mov     dword ptr [rax], 0Ch", "mov     ebp, 0", "jmp     loc_839B"], ["call~FOO", "mov~<TAG>,0", "mov~ebp,0", "jmp~FOO"]], [1, 0, 2, 0, 1, 2, 0, 1, 8, -1, 0.0, ["call    fts_lfree", "mov     qword ptr [sp_0+8], 0"], ["call~FOO", "mov~[word ptr [sp_0+0],0"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, -1, 8.984725965858041e-05, ["mov     ebp, 0", "jmp     loc_839B"], ["mov~ebp,0", "jmp~FOO"]], [2, 0, 28, 0, 1, 7, 0, 2, 9, -1, 0.004941599281221923, ["mov     edx, 1; follow", "mov     rsi, p; p", "mov     rdi, sp_0; sp_0", "call    fts_stat", "mov     [p+70h], ax", "cmp     ax, 1", "jz      short loc_8797"], ["mov~edx,0", "mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "mov~[p+0],ax", "cmp~ax,0", "jz~FOO"]], [1, 0, 1, 0, 1, 5, 0, 2, 8, -1, 0.000658879904162923, ["mov     word ptr [p+70h], 6", "mov     rsi, p; ent", "mov     rdi, sp_0; sp_0", "call    leave_dir", "jmp     short loc_839B"], ["mov~[ord ptr [p+0],0", "mov~rsi,p", "mov~rdi,sp_0", "call~FOO", "jmp~FOO"]], [1, 0, 27, 0, 0, 2, 1, 1, 10, -1, 0.003234501347708895, ["test    byte ptr [sp_0+48h], 4", "jnz     short loc_8789"], ["test~[yte ptr [sp_0+0],0", "jnz~FOO"]], [1, 0, 24, 0, 1, 5, 0, 2, 12, -1, 0.0010781671159029648, ["call    ___errno_location", "mov     eax, [rax]", "mov     [p+40h], eax", "mov     word ptr [p+70h], 7", "jmp     short loc_8789"], ["call~FOO", "mov~eax,<TAG>", "mov~[p+0],eax", "mov~[ord ptr [p+0],0", "jmp~FOO"]], [1, 0, 1, 0, 1, 4, 0, 1, 3, -1, 8.984725965858041e-05, ["mov     edx, 0; follow", "mov     rsi, p; p", "call    fts_stat", "mov     [p+70h], ax"], ["mov~edx,0", "mov~rsi,p", "call~FOO", "mov~[p+0],ax"]], [1, 0, 0, 1, 0, 7, 0, 0, 2, -1, 0.0, ["mov     rax, rbp", "add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["mov~rax,rbp", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]], [1, 0, 2, 0, 0, 2, 0, 1, 8, -1, 0.00440251572327044, ["cmp     rax, 1", "jz      loc_839B"], ["cmp~rax,0", "jz~FOO"]], [1, 0, 97, 0, 0, 4, 0, 0, 4, 10, 0.010152740341419587, ["movzx   eax, word ptr [p+70h]", "lea     edx, [rax-0Ch]", "cmp     dx, 1", "jbe     short loc_83C5"], ["movzx~eax,[ord ptr [p+0]", "lea~edx,[rax-0Ch]+0]", "cmp~dx,0", "jbe~FOO"]], [1, 0, 11, 0, 0, 3, 1, 1, 11, 4, 0.007637017070979335, ["mov     eax, [sp_0+48h]", "test    al, 4", "jnz     short loc_85E6"], ["mov~eax,[sp_0+0]", "test~al,0", "jnz~FOO"]], [1, 0, 20, 0, 0, 3, 0, 1, 7, -1, 0.05911949685534591, ["mov     rax, [p+0A8h]", "cmp     rax, 2", "jz      short loc_87EA"], ["mov~rax,[p+0]", "cmp~rax,0", "jz~FOO"]], [1, 0, 7, 0, 1, 4, 0, 1, 13, 4, 0.00031446540880503143, ["mov     esi, [p+44h]; fd", "mov     edx, 1; chdir_down_one", "mov     rdi, sp_0; sp_0", "call    cwd_advance_fd"], ["mov~esi,[p+0]", "mov~edx,0", "mov~rdi,sp_0", "call~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 9, -1, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [43, 40, 135, 0, 107, 168, 2, 396, 0.00902, 2, 5], "succs": [[4, 7], [0, 74], [11, 12], [2, 11], [74], [8], [10, 5], [74], [100], [8, 6], [8], [17, 78], [11, 30], [90], [90, 13], [32, 57], [23, 15], [24, 88], [21, 53], [18, 20], [18, 14], [27, 39], [69, 95], [22, 87], [25, 33], [26, 100], [89], [56, 31], [71], [98, 28], [78], [56, 35], [34, 54], [78], [44, 45], [35, 36], [56], [77, 70], [41, 37], [53], [100], [40, 43], [], [42, 47], [54], [44, 55], [48, 9], [66, 46], [9], [9, 50], [9, 51], [9], [9], [56, 58], [74], [54], [69], [100], [61, 86], [64, 52], [105, 59], [65, 62], [65, 63], [65], [52], [100], [49, 103], [82, 68], [72, 94], [74], [69], [69], [73, 99], [76, 102], [104, 78], [1, 74], [80, 87], [41, 79], [81, 100], [100], [19, 14], [89, 84], [100], [19], [89], [84], [100], [16, 38], [100, 85], [100, 92], [96, 93], [83, 87], [100], [96], [100], [97, 71], [100], [29, 71], [71], [100], [], [106, 100], [75, 91], [52, 60], [3, 101], [52], []], "fname": "rpl_fts_read", "n_num": 107}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 2, 0, 0, 2, 0, 1, 0, 0, 0.0, ["cmp     edx, 4", "ja      short loc_8977"], ["cmp~edx,0", "ja~FOO"]], [1, 0, 0, 0, 0, 3, 0, 0, 0, -1, 0.0, ["mov     [p+74h], dx", "mov     eax, 0", "retn"], ["mov~[p+0],dx", "mov~eax,0", "retn"]], [4, 0, 0, 2, 1, 6, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     eax, 1", "add     rsp, 8", "retn"], ["sub~rsp,0", "call~FOO", "mov~<TAG>,0", "mov~eax,0", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 2, 0, 3, 2, 1, 11, 0.0, 0, 2], "succs": [[1, 2], [], []], "fname": "rpl_fts_set", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 11, 0, 0, 3, 0, 1, 0, 0, 0.14673913043478262, ["mov     rax, [p+30h]", "cmp     byte ptr [rax], 2Fh ; '/'", "jz      short loc_8A0C"], ["mov~rax,[p+0]", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 6, -1, 0.16666666666666666, ["cmp     qword ptr [p+58h], 0", "jnz     short loc_8A0C"], ["cmp~[word ptr [p+0],0", "jnz~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 12, -1, 0.004528985507246377, ["mov     rax, [sp_0+8]", "jmp     short loc_8A1B"], ["mov~rax,[sp_0+0]", "jmp~FOO"]], [0, 0, 2, 0, 1, 3, 0, 2, 12, -1, 0.0018115942028985507, ["mov     edi, ebp; fd", "call    _close", "jmp     short loc_8A84"], ["mov~edi,ebp", "call~FOO", "jmp~FOO"]], [1, 0, 2, 0, 1, 4, 0, 1, 11, -1, 0.024456521739130436, ["mov     edx, 1; chdir_down_one", "mov     esi, ebp; fd", "mov     rdi, sp_0; sp_0", "call    cwd_advance_fd"], ["mov~edx,0", "mov~esi,ebp", "mov~rdi,sp_0", "call~FOO"]], [1, 0, 10, 0, 0, 2, 1, 1, 8, -1, 0.14492753623188406, ["test    byte ptr [sp_0+48h], 4", "jz      short loc_8A4B"], ["test~[yte ptr [sp_0+0],0", "jz~FOO"]], [0, 0, 1, 0, 1, 4, 0, 1, 7, -1, 0.012681159420289856, ["mov     esi, r14d; type", "mov     rdi, sp_0; sp_0", "call    fts_build", "mov     [sp_0+8], rax"], ["mov~esi,r14d", "mov~rdi,sp_0", "call~FOO", "mov~[sp_0+0],rax"]], [2, 0, 1, 0, 0, 3, 0, 1, 10, -1, 0.0018115942028985507, ["mov     qword ptr [sp_0+8], 0", "mov     eax, 0", "jmp     short loc_8A1B"], ["mov~[word ptr [sp_0+0],0", "mov~eax,0", "jmp~FOO"]], [0, 0, 8, 0, 1, 6, 1, 2, 9, -1, 0.13949275362318841, ["lea     rsi, dir+1; dir", "mov     rdi, sp_0; sp_0", "call    diropen", "mov     ebp, eax", "test    eax, eax", "js      short loc_8A8A"], ["lea~rsi,<TAG>", "mov~rdi,sp_0", "call~FOO", "mov~ebp,eax", "test~eax,eax", "js~FOO"]], [1, 0, 24, 0, 0, 7, 1, 1, 0, 4, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "test    esi, 0FFFFEFFFh", "jnz     loc_8A24"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "test~esi,0", "jnz~FOO"]], [0, 0, 4, 0, 1, 4, 1, 2, 11, -1, 0.04800724637681159, ["mov     edi, ebp; fd", "call    _fchdir", "test    eax, eax", "jnz     short loc_8AAD"], ["mov~edi,ebp", "call~FOO", "test~eax,eax", "jnz~FOO"]], [1, 0, 6, 0, 1, 6, 1, 2, 10, -1, 0.10869565217391304, ["mov     esi, r14d; type", "mov     rdi, sp_0; sp_0", "call    fts_build", "mov     [sp_0+8], rax", "test    byte ptr [sp_0+49h], 2", "jz      short loc_8A99"], ["mov~esi,r14d", "mov~rdi,sp_0", "call~FOO", "mov~[sp_0+0],rax", "test~[yte ptr [sp_0+0],0", "jz~FOO"]], [0, 0, 0, 0, 0, 6, 0, 0, 2, -1, 0.0, ["pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "retn"], ["pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "retn"]], [2, 0, 1, 0, 1, 4, 0, 2, 1, -1, 0.0018115942028985507, ["call    ___errno_location", "mov     dword ptr [rax], 16h", "mov     eax, 0", "jmp     short loc_8A1B"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0", "jmp~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 3, -1, 0.0018115942028985507, ["mov     rax, [p+10h]", "jmp     short loc_8A1B"], ["mov~rax,[p+0]", "jmp~FOO"]], [1, 0, 1, 0, 1, 6, 0, 2, 12, -1, 0.002717391304347826, ["mov     ebx, [r13+0]", "mov     edi, ebp; fd", "call    _close", "mov     [r13+0], ebx", "mov     eax, 0", "jmp     loc_8A1B"], ["mov~ebx,[r13+0]", "mov~edi,ebp", "call~FOO", "mov~[r13+0],ebx", "mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 2, -1, 0.0018115942028985507, ["mov     eax, 0", "jmp     loc_8A1B"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, 0, 0.0018115942028985507, ["mov     eax, 0", "jmp     loc_8A1B"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 20, 0, 0, 3, 0, 1, 2, 2, 0.06884057971014493, ["movzx   eax, word ptr [p+70h]", "cmp     ax, 9", "jz      short loc_8A36"], ["movzx~eax,[ord ptr [p+0]", "cmp~ax,0", "jz~FOO"]], [1, 1, 22, 0, 1, 8, 1, 2, 1, 3, 0.03804347826086957, ["mov     rbx, sp_0", "mov     r12d, esi", "mov     rbp, [sp_0]", "call    ___errno_location", "mov     r13, rax", "mov     dword ptr [rax], 0", "test    byte ptr [sp_0+49h], 20h", "jnz     loc_8AC6"], ["mov~rbx,sp_0", "mov~r12d,esi", "mov~rbp,<TAG>", "call~FOO", "mov~r13,rax", "mov~<TAG>,0", "test~[yte ptr [sp_0+0],<STR>", "jnz~FOO"]], [2, 0, 13, 0, 0, 3, 1, 1, 6, -1, 0.0, ["or      dword ptr [sp_0+48h], 1000h", "mov     r14d, 2", "jmp     short loc_89F6"], ["or~[word ptr [sp_0+0],0", "mov~r14d,0", "jmp~FOO"]], [2, 0, 14, 0, 0, 3, 0, 1, 5, -1, 0.14492753623188406, ["mov     r14d, 1", "cmp     r12d, 1000h", "jz      short loc_8A3C"], ["mov~r14d,0", "cmp~r12d,0", "jz~FOO"]], [1, 0, 18, 0, 0, 2, 0, 1, 3, 1, 0.0923913043478261, ["cmp     ax, 1", "jnz     loc_8AD0"], ["cmp~ax,0", "jnz~FOO"]], [0, 0, 16, 0, 0, 3, 1, 1, 4, -1, 0.10869565217391304, ["mov     rdi, [sp_0+8]; head", "test    rdi, rdi", "jz      short loc_89E7"], ["mov~rdi,[sp_0+0]", "test~rdi,rdi", "jz~FOO"]], [0, 0, 15, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    fts_lfree"], ["call~FOO"]]], "func_feature": [10, 8, 31, 0, 25, 36, 0, 91, 0.05051, 1, 0], "succs": [[5, 6], [0, 6], [12], [2], [2], [8, 6], [12], [12], [11, 7], [19, 13], [3, 15], [10, 4], [], [12], [12], [12], [12], [12], [22, 14], [16, 18], [1], [1, 20], [17, 23], [24, 21], [21]], "fname": "rpl_fts_children", "n_num": 25}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.26666666666666666, ["mov     rax, rbp", "mov     rdx, [rsp+38h+var_30]", "xor     rdx, fs:28h", "jnz     short loc_8B57"], ["mov~rax,rbp", "mov~rdx,[rsp+0]", "xor~rdx,<TAG>", "jnz~FOO"]], [1, 1, 6, 1, 1, 19, 2, 1, 0, 2, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     rbx, pwc", "mov     r13, s", "mov     r12, n", "mov     rax, fs:28h", "mov     [rsp+38h+var_30], rax", "xor     eax, eax", "lea     rax, [rsp+38h+wc]", "test    pwc, pwc", "cmovz   rbx, rax", "mov     rdi, pwc; pwc", "call    _mbrtowc", "mov     rbp, rax", "cmp     ret, 0FFFFFFFFFFFFFFFDh", "jbe     short loc_8B39"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~rbx,pwc", "mov~r13,s", "mov~r12,n", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "lea~rax,[rsp+0]", "test~pwc,pwc", "cmovz~rbx,rax", "mov~rdi,pwc", "call~FOO", "mov~rbp,rax", "cmp~ret,0", "jbe~FOO"]], [0, 0, 5, 0, 0, 2, 1, 1, 1, 2, 0.06666666666666667, ["test    n, n", "jz      short loc_8B39"], ["test~n,n", "jz~FOO"]], [1, 0, 4, 0, 1, 4, 1, 2, 2, 2, 0.06666666666666667, ["mov     edi, 0; category", "call    hard_locale", "test    al, al", "jnz     short loc_8B39"], ["mov~edi,0", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 3, 0, 0, 3, 0, 0, 3, 2, 0.0, ["movzx   eax, byte ptr [s+0]", "mov     [pwc], eax", "mov     ebp, 1"], ["movzx~eax,[yte ptr [s+0]", "mov~<TAG>,eax", "mov~ebp,0"]], [0, 1, 0, 1, 0, 6, 0, 0, 2, -1, 0.0, ["add     rsp, 18h", "pop     pwc", "pop     rbp", "pop     n", "pop     s", "retn"], ["add~rsp,<STR>", "pop~pwc", "pop~rbp", "pop~n", "pop~s", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [3, 5, 6, 1, 7, 9, 1, 39, 0.05714, 1, 2], "succs": [[5, 6], [0, 2], [0, 3], [0, 4], [0], [], []], "fname": "rpl_mbrtowc", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]], [1, 0, 4, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     eax, 0", "cmp     p1, p2", "jz      short locret_8BA4"], ["mov~eax,0", "cmp~p1,p2", "jz~FOO"]], [0, 0, 1, 1, 0, 3, 0, 0, 2, 0, 0.16666666666666666, ["movzx   eax, al", "movzx   edx, dl", "sub     eax, edx"], ["movzx~eax,al", "movzx~edx,dl", "sub~eax,edx"]], [2, 0, 4, 2, 0, 4, 0, 1, 2, 0, 0.0, ["add     p1, 1", "add     p2, 1", "cmp     al, dl", "jz      short loc_8B66"], ["add~p1,0", "add~p2,0", "cmp~al,dl", "jz~FOO"]], [4, 0, 4, 2, 0, 14, 1, 1, 1, 0, 0.16666666666666666, ["movzx   edx, byte ptr [p1]", "movzx   eax, dl", "sub     edx, 41h ; 'A'", "lea     ecx, [rax+20h]", "cmp     dl, 1Ah", "cmovb   eax, ecx", "movzx   ecx, byte ptr [p2]", "movzx   edx, cl", "sub     ecx, 41h ; 'A'", "lea     r9d, [rdx+20h]", "cmp     cl, 1Ah", "cmovb   edx, r9d", "test    al, al", "jz      short loc_8B9C"], ["movzx~edx,<TAG>", "movzx~eax,dl", "sub~edx,0", "lea~ecx,[rax+0]", "cmp~dl,0", "cmovb~eax,ecx", "movzx~ecx,<TAG>", "movzx~edx,cl", "sub~ecx,0", "lea~r9d,[rdx+0]", "cmp~cl,0", "cmovb~edx,r9d", "test~al,al", "jz~FOO"]]], "func_feature": [0, 1, 3, 0, 5, 7, 1, 25, 0.06667, 0, 5], "succs": [[], [0, 4], [0], [2, 4], [2, 3]], "fname": "c_strcasecmp", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 1, 7, 0, 2, 12, 2, 3, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbp, stream", "call    ___fpending", "mov     r12, rax", "mov     ebx, [stream+0]", "and     ebx, 20h", "mov     rdi, stream; fp", "call    rpl_fclose", "test    ebx, ebx", "jnz     short loc_8BE7"], ["push~r12", "push~rbp", "push~rbx", "mov~rbp,stream", "call~FOO", "mov~r12,rax", "mov~ebx,[stream+0]", "and~ebx,<STR>", "mov~rdi,stream", "call~FOO", "test~ebx,ebx", "jnz~FOO"]], [0, 0, 3, 0, 0, 2, 1, 1, 0, -1, 0.07142857142857142, ["test    eax, eax", "jz      short loc_8BFB"], ["test~eax,eax", "jz~FOO"]], [1, 0, 2, 0, 0, 3, 1, 1, 0, -1, 0.047619047619047616, ["mov     eax, 0FFFFFFFFh", "test    r12, r12", "jnz     short loc_8BFB"], ["mov~eax,0", "test~r12,r12", "jnz~FOO"]], [2, 0, 1, 0, 1, 3, 0, 1, 0, -1, 0.011904761904761904, ["call    ___errno_location", "mov     dword ptr [rax], 0", "mov     eax, 0FFFFFFFFh"], ["call~FOO", "mov~<TAG>,0", "mov~eax,0"]], [0, 0, 3, 0, 0, 2, 1, 1, 0, 1, 0.047619047619047616, ["test    eax, eax", "jnz     short loc_8C00"], ["test~eax,eax", "jnz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 0, -1, 0.0, ["pop     rbx", "pop     stream", "pop     r12", "retn"], ["pop~rbx", "pop~stream", "pop~r12", "retn"]], [1, 0, 1, 0, 1, 6, 0, 2, 0, -1, 0.0, ["call    ___errno_location", "cmp     dword ptr [rax], 9", "setnz   al", "movzx   eax, al", "neg     eax", "jmp     short loc_8BFB"], ["call~FOO", "cmp~<TAG>,0", "setnz~al", "movzx~eax,al", "neg~eax", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.011904761904761904, ["mov     eax, 0FFFFFFFFh", "jmp     short loc_8BFB"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [4, 5, 10, 0, 8, 11, 4, 34, 0.02381, 0, 0], "succs": [[1, 4], [2, 5], [5, 6], [5], [3, 7], [], [5], [5]], "fname": "close_stream", "n_num": 8}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[2, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["mov     qword ptr [state+10h], 0", "mov     dword ptr [state+18h], 95F616h", "retn"], ["mov~[word ptr [state+0],0", "mov~[word ptr [state+0],0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 3, 0.0, 0, 0], "succs": [[]], "fname": "cycle_check_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 4, 0, 0, 5, 1, 1, 0, 0, 0.12272727272727273, ["lea     rcx, [rdx+1]", "mov     [state+10h], rcx", "mov     eax, 0", "test    rdx, rcx", "jz      short loc_8C79"], ["lea~rcx,[rdx+0]", "mov~[state+0],rcx", "mov~eax,0", "test~rdx,rcx", "jz~FOO"]], [1, 0, 6, 0, 0, 4, 0, 1, 3, 3, 0.02727272727272727, ["mov     eax, 1", "mov     rcx, [state+8]", "cmp     [sb], rcx", "jnz     short loc_8C32"], ["mov~eax,0", "mov~rcx,[state+0]", "cmp~<TAG>,rcx", "jnz~FOO"]], [0, 0, 7, 0, 0, 3, 0, 1, 2, 3, 0.10909090909090909, ["mov     rax, [state]", "cmp     [sb+8], rax", "jz      short loc_8C69"], ["mov~rax,<TAG>", "cmp~[sb+0],rax", "jz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 5, -1, 0.0, ["mov     eax, 1", "retn"], ["mov~eax,0", "retn"]], [0, 0, 2, 0, 0, 2, 1, 1, 4, 1, 0.07272727272727272, ["test    rcx, rcx", "jnz     short loc_8C8C"], ["test~rcx,rcx", "jnz~FOO"]], [2, 0, 0, 1, 1, 6, 0, 1, 1, -1, 0.0, ["sub     rsp, 8", "lea     rcx, __PRETTY_FUNCTION___3994; \"cycle_check\"", "mov     edx, 3Ch ; '<'; line", "lea     sb, aLibCycleCheckC; \"lib/cycle-check.c\"", "lea     state, aStateMagic9827; \"state->magic == 9827862\"", "call    ___assert_fail"], ["sub~rsp,0", "lea~rcx,<TAG>", "mov~edx,0", "lea~sb,<TAG>", "lea~state,<TAG>", "call~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 0, 3, 0.0, ["cmp     dword ptr [state+18h], 95F616h", "jnz     short loc_8C46"], ["cmp~[word ptr [state+0],0", "jnz~FOO"]], [0, 0, 9, 0, 0, 3, 1, 1, 1, 2, 0.08181818181818182, ["mov     rdx, [state+10h]", "test    rdx, rdx", "jz      short loc_8C84"], ["mov~rdx,[state+0]", "test~rdx,rdx", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 2, 1, 0.01818181818181818, ["mov     qword ptr [state+10h], 1"], ["mov~[word ptr [state+0],0"]], [0, 0, 1, 0, 0, 1, 0, 1, 4, -1, 0.004545454545454545, ["jmp     short locret_8C44"], ["jmp~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 0, 0, 0, 6, 0, 0, 3, 0, 0.0, ["mov     rax, [sb]", "mov     [state+8], rax", "mov     rax, [sb+8]", "mov     [state], rax", "mov     eax, 0", "retn"], ["mov~rax,<TAG>", "mov~[state+0],rax", "mov~rax,[sb+0]", "mov~<TAG>,rax", "mov~eax,0", "retn"]]], "func_feature": [1, 3, 8, 0, 12, 14, 1, 36, 0.03636, 3, 1], "succs": [[10, 4], [0, 9], [0, 1], [], [11, 3], [], [5, 7], [8, 2], [11], [10], [], []], "fname": "cycle_check", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [1, 0, 2, 0, 2, 7, 1, 3, 1, 0, 0.3333333333333333, ["mov     eax, 0", "call    _open", "mov     edi, eax; fd", "call    fd_safer", "mov     rcx, [rsp+58h+var_40]", "xor     rcx, fs:28h", "jnz     short loc_8D0B"], ["mov~eax,0", "call~FOO", "mov~edi,eax", "call~FOO", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 2, 0, 0.0, ["add     rsp, 58h", "retn"], ["add~rsp,<STR>", "retn"]], [2, 1, 4, 1, 0, 8, 2, 1, 0, 0, 0.0, ["sub     rsp, 58h", "mov     [rsp+58h+var_28], rdx", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "mov     edx, 0", "test    sil, 40h", "jnz     short loc_8CEA"], ["sub~rsp,<STR>", "mov~[rsp+0],rdx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~edx,0", "test~sil,0", "jnz~FOO"]], [0, 1, 3, 0, 0, 7, 0, 1, 1, 0, 0.0, ["lea     rax, [rsp+58h+arg_0]", "mov     [rsp+58h+ap.overflow_arg_area], rax", "lea     rax, [rsp+58h+var_38]", "mov     [rsp+58h+ap.reg_save_area], rax", "mov     [rsp+58h+ap.gp_offset], 18h", "mov     edx, dword ptr [rsp+58h+var_28]", "jmp     short loc_8CC4"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~<TAG>,<STR>", "mov~edx,[word ptr [rsp+0]", "jmp~FOO"]]], "func_feature": [3, 3, 6, 3, 5, 5, 1, 25, 0.06667, 1, 2], "succs": [[], [0, 2], [], [1, 4], [1]], "fname": "open_safer", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[3, 0, 3, 1, 1, 7, 1, 2, 0, 0, 0.0, ["sub     rsp, 8", "mov     esi, 0; locale", "call    _setlocale", "mov     rdx, rax", "mov     eax, 1", "test    p, p", "jz      short loc_8D66"], ["sub~rsp,0", "mov~esi,0", "call~FOO", "mov~rdx,rax", "mov~eax,0", "test~p,p", "jz~FOO"]], [1, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]], [3, 0, 2, 0, 0, 9, 1, 1, 0, 1, 0.16666666666666666, ["mov     ecx, 2", "lea     rdi, aC; \"C\"", "mov     rsi, p", "repe cmpsb", "setnbe  cl", "sbb     cl, 0", "mov     eax, 0", "test    cl, cl", "jz      short loc_8D66"], ["mov~ecx,0", "lea~rdi,<TAG>", "mov~rsi,p", "cmpsb~<TAG>,<TAG>", "setnbe~cl", "sbb~cl,0", "mov~eax,0", "test~cl,cl", "jz~FOO"]], [2, 0, 1, 0, 0, 8, 1, 0, 0, 1, 0.0, ["mov     ecx, 6", "lea     rdi, aPosix; \"POSIX\"", "mov     rsi, rdx", "repe cmpsb", "setnbe  al", "sbb     al, 0", "test    al, al", "setnz   al"], ["mov~ecx,0", "lea~rdi,<TAG>", "mov~rsi,rdx", "cmpsb~<TAG>,<TAG>", "setnbe~al", "sbb~al,0", "test~al,al", "setnz~al"]]], "func_feature": [1, 3, 3, 0, 4, 5, 1, 26, 0.04167, 2, 2], "succs": [[1, 2], [], [1, 3], [1]], "fname": "hard_locale", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[2, 0, 0, 1, 0, 6, 0, 0, 0, 0, 0.0, ["mov     rax, data", "ror     rax, 3", "mov     edx, 0", "div     n", "mov     rax, rdx", "retn"], ["mov~rax,data", "ror~rax,0", "mov~edx,0", "div~,n", "mov~rax,rdx", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 6, 0.0, 0, 1], "succs": [[]], "fname": "raw_hasher", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0.0, ["cmp     a, b", "setz    al", "retn"], ["cmp~a,b", "setz~al", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 0], "succs": [[]], "fname": "raw_comparator", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 5, 0, 0, 4, 0, 0, 0, 0, 0.16666666666666669, ["addss   xmm1, cs:dword_BCC4", "movss   xmm2, dword ptr [tuning+4]", "ucomiss xmm2, xmm1", "jbe     short loc_8DEF"], ["addss~xmm1,<TAG>", "movss~xmm2,[word ptr [tuning+0]", "ucomiss~xmm2,xmm1", "jbe~FOO"]], [0, 0, 6, 0, 0, 3, 0, 0, 4, 4, 0.17777777777777778, ["movss   xmm1, dword ptr [tuning]", "ucomiss xmm1, cs:dword_BCD0", "jb      short loc_8DEF"], ["movss~xmm1,<TAG>", "ucomiss~xmm1,<TAG>", "jb~FOO"]], [0, 0, 7, 0, 0, 3, 0, 0, 3, 5, 0.16666666666666669, ["movss   xmm1, dword ptr [tuning+0Ch]", "ucomiss xmm1, cs:dword_BCCC", "jbe     short loc_8DEF"], ["movss~xmm1,[word ptr [tuning+0]", "ucomiss~xmm1,<TAG>", "jbe~FOO"]], [0, 0, 8, 0, 0, 3, 0, 0, 2, 6, 0.13333333333333333, ["movss   xmm1, cs:dword_BCC8", "ucomiss xmm1, xmm0", "jbe     short loc_8DEF"], ["movss~xmm1,<TAG>", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [0, 0, 3, 0, 0, 2, 0, 0, 7, 1, 0.07777777777777778, ["ucomiss xmm0, xmm1", "jbe     short loc_8DEF"], ["ucomiss~xmm0,xmm1", "jbe~FOO"]], [0, 0, 4, 0, 0, 3, 0, 0, 6, 2, 0.13333333333333333, ["movss   xmm3, cs:dword_BCD4", "ucomiss xmm3, xmm2", "jnb     short loc_8E01"], ["movss~xmm3,<TAG>", "ucomiss~xmm3,xmm2", "jnb~FOO"]], [0, 0, 1, 0, 0, 1, 0, 1, 8, 0, 0.005555555555555556, ["jmp     short locret_8DFF"], ["jmp~FOO"]], [0, 0, 9, 0, 0, 3, 0, 0, 1, 7, 0.08888888888888889, ["movss   xmm0, dword ptr [tuning+8]", "ucomiss xmm0, cs:dword_BCC4", "jbe     short loc_8DEF"], ["movss~xmm0,[word ptr [tuning+0]", "ucomiss~xmm0,<TAG>", "jbe~FOO"]], [1, 0, 10, 0, 0, 5, 0, 1, 0, 8, 0.0, ["mov     tuning, [table+28h]", "mov     eax, 1", "lea     rcx, default_tuning", "cmp     tuning, rcx", "jz      short locret_8DFF"], ["mov~tuning,[table+0]", "mov~eax,0", "lea~rcx,<TAG>", "cmp~tuning,rcx", "jz~FOO"]], [1, 0, 1, 0, 0, 3, 0, 0, 2, -1, 0.07222222222222223, ["lea     rax, default_tuning", "mov     [table+28h], rax", "mov     eax, 0"], ["lea~rax,<TAG>", "mov~[table+0],rax", "mov~eax,0"]], [0, 0, 0, 0, 0, 1, 0, 0, 1, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 2, 0, 11, 18, 3, 31, 0.09293, 6, 0], "succs": [[9, 5], [0, 9], [1, 9], [9, 2], [9, 6], [9, 4], [10], [9, 3], [10, 7], [10], []], "fname": "check_tuning", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 13, 0, 0, 2, 0, 0, 0, 0, 0.25, ["cmp     rdi, 9", "jbe     short loc_8ED5"], ["cmp~rdi,0", "jbe~FOO"]], [5, 0, 13, 0, 0, 7, 1, 1, 1, 2, 0.23650793650793653, ["cmp     candidate, 0Ah", "mov     eax, 0Ah", "cmovb   candidate, rax", "or      rdi, 1", "mov     r9, 0AAAAAAAAAAAAAAABh", "cmp     rdi, 0FFFFFFFFFFFFFFFFh", "jnz     loc_8EFC"], ["cmp~candidate,0", "mov~eax,0", "cmovb~candidate,rax", "or~rdi,0", "mov~r9,0", "cmp~rdi,0", "jnz~FOO"]], [2, 0, 13, 1, 0, 3, 0, 1, 4, 2, 0.10714285714285715, ["add     rdi, 2", "cmp     rdi, 0FFFFFFFFFFFFFFFFh", "jz      loc_8E66"], ["add~rdi,0", "cmp~rdi,0", "jz~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 0, 3, 0.0, ["cmp     byte ptr [tuning+10h], 0", "jnz     short loc_8E41"], ["cmp~[yte ptr [tuning+0],0", "jnz~FOO"]], [3, 0, 1, 0, 0, 6, 2, 0, 3, -1, 0.03650793650793651, ["test    rax, rax", "mov     eax, 1", "cmovs   rcx, rax", "and     ecx, 1", "mov     eax, 0", "cmovnz  rdi, rax"], ["test~rax,rax", "mov~eax,0", "cmovs~rcx,rax", "and~ecx,0", "mov~eax,0", "cmovnz~rdi,rax"]], [1, 0, 2, 0, 0, 2, 0, 1, 3, 0, 0.0, ["mov     ecx, 1", "jmp     loc_8E7C"], ["mov~ecx,0", "jmp~FOO"]], [2, 0, 3, 1, 0, 5, 0, 0, 2, 1, 0.11746031746031746, ["mov     ecx, 0", "mov     edx, 8", "mov     rax, rdx", "mul     rdi", "jo      loc_8F46"], ["mov~ecx,0", "mov~edx,0", "mov~rax,rdx", "mul~,rdi", "jo~FOO"]], [0, 0, 20, 0, 0, 2, 1, 1, 1, 7, 0.015873015873015872, ["test    candidate, candidate", "js      loc_8E98"], ["test~candidate,candidate", "js~FOO"]], [1, 0, 13, 1, 0, 6, 0, 1, 3, 3, 0.1642857142857143, ["mov     rax, rdi", "mul     r9", "shr     rdx, 1", "lea     rax, [rdx+rdx*2]", "cmp     rdi, rax", "jz      short loc_8EEE"], ["mov~rax,rdi", "mul~,r9", "shr~rdx,0", "lea~rax,<TAG>", "cmp~rdi,rax", "jz~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 4, -1, 0.0, ["mov     rax, rdi", "retn"], ["mov~rax,rdi", "retn"]], [1, 0, 17, 0, 0, 4, 0, 0, 3, 5, 0.13015873015873017, ["divss   xmm0, dword ptr [tuning+8]", "mov     edi, 0", "ucomiss xmm0, cs:dword_BCD8", "jnb     short loc_8E94"], ["divss~xmm0,[word ptr [tuning+0]", "mov~edi,0", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 18, 0, 0, 2, 0, 0, 2, 6, 0.026984126984126985, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, candidate"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,candidate"]], [3, 0, 13, 0, 0, 3, 0, 0, 4, 4, 0.10714285714285715, ["mov     r8d, 10h", "mov     esi, 9", "mov     ecx, 3"], ["mov~r8d,0", "mov~esi,0", "mov~ecx,0"]], [2, 0, 18, 0, 0, 8, 2, 1, 2, 6, 0.026984126984126985, ["mov     rax, candidate", "shr     rax, 1", "and     edi, 1", "or      rax, rdi", "pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax", "addss   xmm0, xmm0", "jmp     loc_8E20"], ["mov~rax,candidate", "shr~rax,0", "and~edi,0", "or~rax,rdi", "pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax", "addss~xmm0,xmm0", "jmp~FOO"]], [1, 0, 13, 2, 0, 4, 0, 0, 5, 3, 0.10476190476190478, ["add     rsi, r8", "add     rcx, 2", "cmp     rsi, rdi", "jnb     short loc_8EDA"], ["add~rsi,r8", "add~rcx,0", "cmp~rsi,rdi", "jnb~FOO"]], [2, 0, 13, 2, 0, 6, 1, 1, 6, 4, 0.0380952380952381, ["add     r8, 8", "mov     rax, rdi", "mov     edx, 0", "div     rcx", "test    rdx, rdx", "jnz     short loc_8F24"], ["add~r8,0", "mov~rax,rdi", "mov~edx,0", "div~,rcx", "test~rdx,rdx", "jnz~FOO"]], [0, 0, 16, 0, 0, 2, 0, 0, 4, 4, 0.14761904761904762, ["ucomiss xmm0, cs:dword_BCDC", "jnb     short loc_8EB6"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 14, 0, 0, 1, 0, 0, 5, 3, 0.07857142857142858, ["cvttss2si rdi, xmm0"], ["cvttss2si~rdi,xmm0"]], [0, 0, 13, 0, 0, 1, 0, 1, 7, 3, 0.01666666666666667, ["jmp     short loc_8EEE"], ["jmp~FOO"]], [1, 0, 13, 1, 0, 5, 1, 1, 4, 2, 0.0761904761904762, ["mov     rax, rdi", "mov     edx, 0", "div     rcx", "test    rdx, rdx", "jnz     loc_8E66"], ["mov~rax,rdi", "mov~edx,0", "div~,rcx", "test~rdx,rdx", "jnz~FOO"]], [1, 0, 14, 0, 0, 5, 1, 1, 5, 3, 0.07857142857142858, ["subss   xmm0, cs:dword_BCDC", "cvttss2si rdi, xmm0", "mov     rax, 8000000000000000h", "xor     rdi, rax", "jmp     loc_8E41"], ["subss~xmm0,<TAG>", "cvttss2si~rdi,xmm0", "mov~rax,0", "xor~rdi,rax", "jmp~FOO"]], [1, 0, 13, 0, 0, 1, 0, 0, 3, 3, 0.03333333333333334, ["mov     ecx, 3"], ["mov~ecx,0"]]], "func_feature": [0, 9, 11, 0, 22, 33, 2, 79, 0.08149, 2, 8], "succs": [[8, 21], [0, 6], [0, 6], [1, 7], [9], [4], [4, 5], [11, 13], [2, 12], [], [16, 9], [10], [14], [10], [19, 15], [18, 14], [17, 20], [1], [2], [2, 6], [1], [19]], "fname": "compute_bucket_size", "n_num": 22}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 2, 0, 1, 7, 0, 1, 0, 0, 0.0, ["push    rbx", "mov     rbx, table", "mov     table, key", "mov     key, [table+10h]", "call    qword ptr [table+30h]", "cmp     [table+10h], n", "jbe     short loc_8F6D"], ["push~rbx", "mov~rbx,table", "mov~table,key", "mov~key,[table+0]", "call~[word ptr [table+0]", "cmp~[table+0],n", "jbe~FOO"]], [1, 0, 0, 2, 0, 4, 0, 0, 0, -1, 0.0, ["shl     n, 4", "add     rax, [table]", "pop     table", "retn"], ["shl~n,0", "add~rax,<TAG>", "pop~table", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [2, 0, 2, 0, 3, 2, 5, 12, 0.0, 0, 2], "succs": [[1, 2], [], []], "fname": "safe_hasher", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 19, 0, 1, 7, 0, 2, 0, 0, 0.1131578947368421, ["mov     rbp, [cursor]", "mov     rsi, data; key", "mov     rdi, dst; table", "call    safe_hasher", "mov     rdx, [cursor+8]", "cmp     qword ptr [new_bucket], 0", "jz      short loc_8FA4"], ["mov~rbp,<TAG>", "mov~rsi,data", "mov~rdi,dst", "call~FOO", "mov~rdx,[cursor+0]", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 19, 0, 0, 3, 1, 1, 2, 5, 0.33421052631578946, ["mov     rbx, [bucket+8]", "test    cursor, cursor", "jnz     loc_8FCA"], ["mov~rbx,[bucket+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 19, 0, 0, 3, 1, 1, 5, 4, 0.12894736842105262, ["mov     rbx, next", "test    next, next", "jz      short loc_8FF0"], ["mov~rbx,next", "test~next,next", "jz~FOO"]], [0, 0, 19, 0, 0, 4, 0, 0, 8, 4, 0.11842105263157894, ["mov     [rax], data", "mov     rdx, [new_bucket+8]", "mov     [rax+8], rdx", "mov     [new_bucket+8], rax"], ["mov~<TAG>,data", "mov~rdx,[new_bucket+0]", "mov~[rax+0],rdx", "mov~[new_bucket+0],rax"]], [1, 0, 19, 0, 1, 4, 1, 2, 7, 2, 0.08289473684210526, ["mov     edi, 10h; size", "call    _malloc", "test    rax, rax", "jnz     short loc_9028"], ["mov~edi,0", "call~FOO", "test~rax,rax", "jnz~FOO"]], [0, 0, 19, 0, 0, 2, 0, 0, 7, 5, 0.035526315789473684, ["mov     rdx, [rax+8]", "mov     [dst+48h], rdx"], ["mov~rdx,[rax+0]", "mov~[dst+0],rdx"]], [1, 0, 19, 0, 0, 2, 0, 1, 1, 3, 0.34210526315789475, ["cmp     qword ptr [bucket+0], 0", "jz      short loc_9044"], ["cmp~[word ptr [bucket+0],0", "jz~FOO"]], [0, 1, 20, 1, 0, 14, 0, 0, 0, 2, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 18h", "mov     r12, dst", "mov     r14, src", "mov     [rsp+48h+var_3C], edx", "mov     r15d, edx", "mov     r13, [src]", "cmp     bucket, [src+8]", "jb      loc_904E"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~r12,dst", "mov~r14,src", "mov~[rsp+0],edx", "mov~r15d,edx", "mov~r13,<TAG>", "cmp~bucket,[src+0]", "jb~FOO"]], [1, 0, 19, 1, 0, 3, 0, 0, 2, 2, 0.3684210526315789, ["add     bucket, 10h", "cmp     [src+8], bucket", "jbe     short loc_9085"], ["add~bucket,0", "cmp~[src+0],bucket", "jbe~FOO"]], [0, 0, 19, 0, 0, 3, 1, 1, 6, 3, 0.15526315789473683, ["mov     new_bucket, [dst+48h]", "test    rax, rax", "jz      short loc_9064"], ["mov~new_bucket,[dst+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 19, 1, 0, 3, 0, 1, 6, 4, 0.05526315789473684, ["mov     [new_bucket], data", "add     qword ptr [dst+18h], 1", "jmp     short loc_9037"], ["mov~<TAG>,data", "add~[word ptr [dst+0],0", "jmp~FOO"]], [1, 0, 19, 0, 1, 6, 0, 2, 5, 4, 0.24736842105263157, ["mov     rsi, data; key", "mov     rdi, dst; table", "call    safe_hasher", "mov     rbp, rax", "cmp     qword ptr [new_bucket], 0", "jz      short loc_907A"], ["mov~rsi,data", "mov~rdi,dst", "call~FOO", "mov~rbp,rax", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 3, 1, 0.034210526315789476, ["mov     eax, 1"], ["mov~eax,0"]], [0, 0, 19, 0, 0, 4, 0, 1, 4, 5, 0.038157894736842106, ["mov     rcx, [new_bucket+8]", "mov     [cursor+8], rcx", "mov     [new_bucket+8], cursor", "jmp     short loc_8FC2"], ["mov~rcx,[new_bucket+0]", "mov~[cursor+0],rcx", "mov~[new_bucket+0],cursor", "jmp~FOO"]], [2, 0, 19, 1, 0, 6, 0, 0, 4, 5, 0.038157894736842106, ["mov     [new_bucket], data", "add     qword ptr [dst+18h], 1", "mov     qword ptr [cursor], 0", "mov     new_bucket, [dst+48h]", "mov     [cursor+8], rax", "mov     [dst+48h], cursor"], ["mov~<TAG>,data", "add~[word ptr [dst+0],0", "mov~<TAG>,0", "mov~new_bucket,[dst+0]", "mov~[cursor+0],rax", "mov~[dst+0],cursor"]], [2, 0, 19, 1, 0, 2, 0, 0, 7, 3, 0.2263157894736842, ["mov     qword ptr [bucket+0], 0", "sub     qword ptr [src+18h], 1"], ["mov~[word ptr [bucket+0],0", "sub~[word ptr [src+0],0"]], [1, 0, 19, 0, 0, 4, 1, 1, 4, 3, 0.3657894736842105, ["mov     cursor, [bucket+0]", "mov     qword ptr [bucket+8], 0", "test    r15b, r15b", "jnz     short loc_9044"], ["mov~cursor,[bucket+0]", "mov~[word ptr [bucket+0],0", "test~r15b,r15b", "jnz~FOO"]], [0, 0, 19, 0, 0, 1, 0, 1, 3, 4, 0.2026315789473684, ["jmp     short loc_8FF0"], ["jmp~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 8, 1, 0.007894736842105263, ["movzx   eax, byte ptr [rsp+48h+var_3C]", "jmp     short loc_908A"], ["movzx~eax,[yte ptr [rsp+0]", "jmp~FOO"]], [0, 1, 0, 1, 0, 8, 0, 0, 2, 0, 0.0, ["add     rsp, 18h", "pop     rbx", "pop     rbp", "pop     dst", "pop     bucket", "pop     src", "pop     safe", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~dst", "pop~bucket", "pop~src", "pop~safe", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 1, 0.002631578947368421, ["mov     eax, 1", "jmp     loc_908A"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [3, 5, 16, 1, 21, 30, 3, 84, 0.13797, 0, 6], "succs": [[13, 14], [0, 17], [0, 16], [15], [18, 3], [3], [8, 1], [20, 6], [12, 6], [4, 5], [15], [9, 10], [19], [2], [2], [8], [8, 11], [16], [19], [], [19]], "fname": "transfer_entries", "n_num": 21}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 6, 0, 0, 4, 1, 1, 0, 0, 0.030952380952380953, ["mov     cursor, [cursor+8]", "mov     rax, [cursor+8]", "test    rax, rax", "jz      short loc_9116"], ["mov~cursor,[cursor+0]", "mov~rax,[cursor+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 6, 0, 1, 4, 1, 2, 5, -1, 0.05238095238095239, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_910A"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, 0, 0.004761904761904762, ["mov     eax, 0", "jmp     short loc_9116"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 8, 0, 0, 3, 1, 1, 3, 1, 0.1, ["mov     rax, [cursor+8]", "test    rax, rax", "jz      loc_917D"], ["mov~rax,[cursor+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 14, 0, 0, 2, 0, 1, 1, 3, 0.06190476190476191, ["cmp     rax, entry", "jz      short loc_911F"], ["cmp~rax,entry", "jz~FOO"]], [0, 0, 15, 0, 1, 15, 1, 2, 0, 4, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     r12, table", "mov     rbp, entry", "mov     r14, bucket_head", "mov     r13d, ecx", "call    safe_hasher", "mov     rbx, rax", "mov     [bucket_head], bucket", "mov     bucket, [bucket]", "test    rax, rax", "jz      short loc_9116"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~r12,table", "mov~rbp,entry", "mov~r14,bucket_head", "mov~r13d,ecx", "call~FOO", "mov~rbx,rax", "mov~<TAG>,bucket", "mov~bucket,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 2, -1, 0.05238095238095239, ["mov     rax, [bucket]", "test    r13b, r13b", "jz      short loc_9116"], ["mov~rax,<TAG>", "test~r13b,r13b", "jz~FOO"]], [0, 0, 13, 0, 1, 5, 1, 2, 2, 2, 0.0761904761904762, ["mov     rsi, rax", "mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_911F"], ["mov~rsi,rax", "mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 4, -1, 0.09523809523809525, ["mov     rsi, [rax]", "cmp     entry, rsi", "jz      short loc_910A"], ["mov~rsi,<TAG>", "cmp~entry,rsi", "jz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 7, -1, 0.014285714285714287, ["mov     rsi, [rax]", "cmp     rsi, entry", "jnz     short loc_90E9"], ["mov~rsi,<TAG>", "cmp~rsi,entry", "jnz~FOO"]], [1, 0, 1, 0, 0, 9, 0, 1, 4, -1, 0.002380952380952381, ["mov     rsi, [next]", "mov     rdi, [next+8]", "mov     [bucket], rsi", "mov     [bucket+8], rdi", "mov     qword ptr [next], 0", "mov     rcx, [table+48h]", "mov     [next+8], rcx", "mov     [table+48h], next", "jmp     short loc_9116"], ["mov~rsi,<TAG>", "mov~rdi,[next+0]", "mov~<TAG>,rsi", "mov~[bucket+0],rdi", "mov~<TAG>,0", "mov~rcx,[table+0]", "mov~[next+0],rcx", "mov~[table+0],next", "jmp~FOO"]], [0, 0, 3, 0, 0, 3, 1, 1, 3, -1, 0.0380952380952381, ["mov     rdx, [bucket+8]", "test    rdx, rdx", "jz      short loc_9155"], ["mov~rdx,[bucket+0]", "test~rdx,rdx", "jz~FOO"]], [1, 0, 1, 0, 0, 7, 0, 1, 6, -1, 0.0, ["mov     rcx, [next+8]", "mov     [cursor+8], rcx", "mov     qword ptr [next], 0", "mov     rcx, [table+48h]", "mov     [next+8], rcx", "mov     [table+48h], next", "jmp     short loc_9116"], ["mov~rcx,[next+0]", "mov~[cursor+0],rcx", "mov~<TAG>,0", "mov~rcx,[table+0]", "mov~[next+0],rcx", "mov~[table+0],next", "jmp~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 5, -1, 0.05, ["mov     rdx, [cursor+8]", "mov     rax, [rdx]", "test    r13b, r13b", "jnz     short loc_915E"], ["mov~rdx,[cursor+0]", "mov~rax,<TAG>", "test~r13b,r13b", "jnz~FOO"]], [0, 0, 0, 0, 0, 6, 0, 0, 1, -1, 0.0, ["pop     rbx", "pop     entry", "pop     table", "pop     r13", "pop     bucket_head", "retn"], ["pop~rbx", "pop~entry", "pop~table", "pop~r13", "pop~bucket_head", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 4, -1, 0.002380952380952381, ["mov     qword ptr [bucket], 0", "jmp     short loc_9116"], ["mov~<TAG>,0", "jmp~FOO"]]], "func_feature": [3, 8, 18, 0, 16, 26, 3, 75, 0.03631, 0, 0], "succs": [[9, 14], [0, 13], [14], [8, 2], [6, 7], [4, 14], [11, 14], [3, 6], [1, 13], [1, 13], [14], [10, 15], [14], [12, 14], [], [14]], "fname": "hash_find_entry", "n_num": 16}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+10h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_buckets", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+18h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_buckets_used", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     rax, [table+20h]", "retn"], ["mov~rax,[table+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 2, 0.0, 0, 0], "succs": [[]], "fname": "hash_get_n_entries", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 9, 0, 0, 2, 0, 1, 0, 0, 0.08181818181818182, ["mov     eax, 0", "jmp     short loc_91BB"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 11, 0, 0, 4, 0, 0, 0, 1, 0.0, ["mov     bucket, [table]", "mov     table, [table+8]", "cmp     bucket, rdi", "jnb     short loc_91E0"], ["mov~bucket,<TAG>", "mov~table,[table+0]", "cmp~bucket,rdi", "jnb~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0.0, ["mov     eax, 0", "retn"], ["mov~eax,0", "retn"]], [1, 0, 9, 0, 0, 1, 0, 0, 4, -1, 0.07272727272727272, ["mov     ecx, 1"], ["mov~ecx,0"]], [0, 0, 9, 0, 0, 3, 1, 1, 3, -1, 0.3, ["mov     rdx, [cursor+8]", "test    cursor, cursor", "jz      short loc_91A6"], ["mov~rdx,[cursor+0]", "test~cursor,cursor", "jz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 2, -1, 0.36363636363636365, ["cmp     qword ptr [bucket], 0", "jz      short loc_91B2"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 9, 0, 0, 1, 0, 0, 4, -1, 0.13636363636363635, ["mov     ecx, 1"], ["mov~ecx,0"]], [0, 0, 9, 0, 0, 2, 0, 0, 5, -1, 0.2545454545454545, ["cmp     max_bucket_length, rcx", "cmovb   max_bucket_length, rcx"], ["cmp~max_bucket_length,rcx", "cmovb~max_bucket_length,rcx"]], [0, 0, 9, 0, 0, 1, 0, 1, 6, -1, 0.11818181818181818, ["jmp     short loc_91AB"], ["jmp~FOO"]], [1, 0, 9, 1, 0, 3, 0, 0, 3, -1, 0.3, ["add     bucket, 10h", "cmp     bucket, rdi", "jnb     short locret_91DE"], ["add~bucket,0", "cmp~bucket,rdi", "jnb~FOO"]], [1, 0, 9, 1, 0, 4, 1, 1, 5, -1, 0.12727272727272726, ["add     bucket_length, 1", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_91CF"], ["add~bucket_length,0", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 2, 5, 0, 12, 15, 1, 26, 0.14621, 0, 2], "succs": [[5], [0, 2], [], [7], [3, 6], [9, 4], [10], [9], [7], [11, 5], [8, 10], []], "fname": "hash_get_max_bucket_length", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 2, 0, 0, 3, 0, 1, 0, 0, 0.17777777777777778, ["mov     eax, 0", "cmp     [table+18h], rsi", "jz      short loc_9244"], ["mov~eax,0", "cmp~[table+0],rsi", "jz~FOO"]], [1, 0, 8, 1, 0, 3, 0, 0, 3, 2, 0.23333333333333334, ["add     bucket, 10h", "cmp     bucket, r8", "jnb     short loc_9237"], ["add~bucket,0", "cmp~bucket,r8", "jnb~FOO"]], [2, 0, 3, 0, 0, 2, 0, 0, 1, 2, 0.03333333333333333, ["mov     edx, 0", "mov     esi, 0"], ["mov~edx,0", "mov~esi,0"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, -1, 0.0, ["rep retn"], ["retn"]], [0, 0, 1, 0, 0, 3, 0, 1, 3, 0, 0.0, ["cmp     [table+20h], rdx", "setz    al", "jmp     short locret_9242"], ["cmp~[table+0],rdx", "setz~al", "jmp~FOO"]], [0, 0, 8, 0, 0, 1, 0, 1, 5, 3, 0.06666666666666667, ["jmp     short loc_91FE"], ["jmp~FOO"]], [1, 0, 8, 1, 0, 4, 1, 1, 4, 4, 0.05555555555555556, ["add     n_entries, 1", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_921E"], ["add~n_entries,0", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 2, 3, 0.18888888888888888, ["cmp     qword ptr [bucket], 0", "jz      short loc_91FE"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 8, 2, 0, 5, 1, 1, 3, 3, 0.1, ["add     n_buckets_used, 1", "add     n_entries, 1", "mov     rax, [cursor+8]", "test    cursor, cursor", "jz      short loc_91FE"], ["add~n_buckets_used,0", "add~n_entries,0", "mov~rax,[cursor+0]", "test~cursor,cursor", "jz~FOO"]], [2, 0, 8, 0, 0, 3, 0, 1, 1, 4, 0.05555555555555556, ["mov     edx, 0", "mov     esi, 0", "jmp     short loc_9207"], ["mov~edx,0", "mov~esi,0", "jmp~FOO"]], [0, 0, 10, 0, 0, 4, 0, 0, 0, 3, 0.0, ["mov     bucket, [table]", "mov     r8, [table+8]", "cmp     bucket, r8", "jnb     short loc_922D"], ["mov~bucket,<TAG>", "mov~r8,[table+0]", "cmp~bucket,r8", "jnb~FOO"]]], "func_feature": [0, 2, 7, 0, 11, 16, 0, 31, 0.08283, 0, 4], "succs": [[3, 4], [0, 7], [0], [], [3], [1], [5, 6], [8, 1], [1, 6], [7], [9, 2]], "fname": "hash_table_ok", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 0.06666666666666667, ["pxor    xmm1, xmm1", "cvtsi2sd xmm1, rbx"], ["pxor~xmm1,xmm1", "cvtsi2sd~xmm1,rbx"]], [0, 0, 3, 0, 0, 3, 1, 1, 2, 1, 0.3, ["mulsd   xmm0, cs:qword_BCE0", "test    rbx, rbx", "js      short loc_932B"], ["mulsd~xmm0,<TAG>", "test~rbx,rbx", "js~FOO"]], [2, 0, 1, 0, 0, 8, 2, 1, 3, 0, 0.06666666666666667, ["mov     rax, rbx", "shr     rax, 1", "and     ebx, 1", "or      rax, rbx", "pxor    xmm1, xmm1", "cvtsi2sd xmm1, rax", "addsd   xmm1, xmm1", "jmp     short loc_92C8"], ["mov~rax,rbx", "shr~rax,0", "and~ebx,0", "or~rax,rbx", "pxor~xmm1,xmm1", "cvtsi2sd~xmm1,rax", "addsd~xmm1,xmm1", "jmp~FOO"]], [4, 0, 6, 0, 3, 25, 1, 4, 0, 3, 0.0, ["push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "mov     r14, table", "mov     rbp, stream", "mov     rbx, [table+10h]", "mov     r12, [table+18h]", "call    hash_get_max_bucket_length", "mov     r13, rax", "mov     rcx, [table+20h]", "lea     rdx, aEntriesLu; \"# entries:         %lu\\n\"", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "mov     rcx, rbx", "lea     rdx, aBucketsLu; \"# buckets:         %lu\\n\"", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "test    r12, r12", "js      short loc_930D"], ["push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "mov~r14,table", "mov~rbp,stream", "mov~rbx,[table+0]", "mov~r12,[table+0]", "call~FOO", "mov~r13,rax", "mov~rcx,[table+0]", "lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "mov~rcx,rbx", "lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "test~r12,r12", "js~FOO"]], [2, 0, 4, 0, 0, 9, 2, 1, 1, 2, 0.06666666666666667, ["mov     rax, r12", "shr     rax, 1", "mov     rdx, r12", "and     edx, 1", "or      rax, rdx", "pxor    xmm0, xmm0", "cvtsi2sd xmm0, rax", "addsd   xmm0, xmm0", "jmp     short loc_92B2"], ["mov~rax,r12", "shr~rax,0", "mov~rdx,r12", "and~edx,0", "or~rax,rdx", "pxor~xmm0,xmm0", "cvtsi2sd~xmm0,rax", "addsd~xmm0,xmm0", "jmp~FOO"]], [4, 0, 0, 0, 2, 19, 0, 2, 4, -1, 0.0, ["divsd   xmm0, xmm1", "mov     rcx, r12", "lea     rdx, aBucketsUsedLu2; \"# buckets used:    %lu (%.2f%%)\\n\"", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 1", "call    ___fprintf_chk", "mov     rcx, max_bucket_length", "lea     rdx, aMaxBucketLengt; \"max bucket length: %lu\\n\"", "mov     esi, 1", "mov     rdi, stream", "mov     eax, 0", "call    ___fprintf_chk", "pop     rbx", "pop     stream", "pop     r12", "pop     max_bucket_length", "pop     table", "retn"], ["divsd~xmm0,xmm1", "mov~rcx,r12", "lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "mov~rcx,max_bucket_length", "lea~rdx,<TAG>", "mov~esi,0", "mov~rdi,stream", "mov~eax,0", "call~FOO", "pop~rbx", "pop~stream", "pop~r12", "pop~max_bucket_length", "pop~table", "retn"]], [0, 0, 4, 0, 0, 2, 0, 0, 1, 2, 0.06666666666666667, ["pxor    xmm0, xmm0", "cvtsi2sd xmm0, r12"], ["pxor~xmm0,xmm0", "cvtsi2sd~xmm0,r12"]]], "func_feature": [5, 6, 9, 0, 7, 8, 0, 68, 0.08095, 5, 0], "succs": [[5], [0, 2], [5], [4, 6], [1], [], [1]], "fname": "hash_print_statistics", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.011111111111111112, ["mov     eax, 0", "jmp     short loc_938A"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 8, 0, 0, 3, 1, 1, 1, 0, 0.07777777777777778, ["mov     rbx, bucket", "test    cursor, cursor", "jz      short loc_939D"], ["mov~rbx,bucket", "test~cursor,cursor", "jz~FOO"]], [0, 0, 10, 0, 1, 9, 1, 2, 0, 0, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     r12, table", "mov     rbp, entry", "call    safe_hasher", "mov     rsi, [bucket]", "test    rsi, rsi", "jz      short loc_9396"], ["push~r12", "push~rbp", "push~rbx", "mov~r12,table", "mov~rbp,entry", "call~FOO", "mov~rsi,<TAG>", "test~rsi,rsi", "jz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 1, 5, 0, 0.022222222222222223, ["mov     rsi, [cursor]", "cmp     rsi, entry", "jnz     short loc_936A"], ["mov~rsi,<TAG>", "cmp~rsi,entry", "jnz~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 4, 0, 0.1, ["mov     cursor, [cursor+8]", "test    cursor, cursor", "jz      short loc_938F"], ["mov~cursor,[cursor+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 3, 0, 0.03333333333333333, ["mov     rax, [cursor]"], ["mov~rax,<TAG>"]], [0, 0, 6, 0, 0, 2, 0, 1, 2, 0, 0.11111111111111112, ["cmp     rsi, entry", "jz      short loc_9387"], ["cmp~rsi,entry", "jz~FOO"]], [0, 0, 6, 0, 1, 4, 1, 2, 3, 0, 0.12222222222222223, ["mov     rdi, entry", "call    qword ptr [table+38h]", "test    al, al", "jnz     short loc_9387"], ["mov~rdi,entry", "call~[word ptr [table+0]", "test~al,al", "jnz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.011111111111111112, ["mov     eax, 0", "jmp     short loc_938A"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, 0, 0.0, ["pop     rbx", "pop     entry", "pop     table", "retn"], ["pop~rbx", "pop~entry", "pop~table", "retn"]], [1, 0, 1, 0, 0, 2, 0, 1, 5, 0, 0.011111111111111112, ["mov     eax, 0", "jmp     short loc_938A"], ["mov~eax,0", "jmp~FOO"]]], "func_feature": [2, 4, 11, 0, 11, 16, 1, 35, 0.04545, 0, 0], "succs": [[9], [0, 6], [8, 1], [5, 7], [10, 3], [9], [5, 7], [4, 5], [9], [], [9]], "fname": "hash_lookup", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.017857142857142856, ["mov     eax, 0", "jmp     short locret_93D0"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 0, 0, 0.0, ["cmp     qword ptr [table+20h], 0", "jz      short loc_93DD"], ["cmp~[word ptr [table+0],0", "jz~FOO"]], [1, 0, 4, 1, 0, 3, 0, 0, 3, 0, 0.125, ["add     bucket, 10h", "cmp     bucket, rcx", "jnb     short loc_93D4"], ["add~bucket,0", "cmp~bucket,rcx", "jnb~FOO"]], [0, 0, 4, 0, 0, 3, 1, 1, 4, 0, 0.05357142857142857, ["mov     rax, [bucket]", "test    rax, rax", "jz      short loc_93BF"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 2, 0, 0.125, ["mov     rax, [bucket]", "test    rax, rax", "jnz     short locret_93D2"], ["mov~rax,<TAG>", "test~rax,rax", "jnz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 0, 0, 0, 1, 0, 0, 3, 0, 0.0, ["rep retn"], ["retn"]], [0, 0, 6, 0, 0, 4, 0, 0, 1, 0, 0.08928571428571427, ["mov     rdx, [table]", "mov     rcx, [table+8]", "cmp     bucket, rcx", "jnb     short loc_93D4"], ["mov~rdx,<TAG>", "mov~rcx,[table+0]", "cmp~bucket,rcx", "jnb~FOO"]], [1, 0, 0, 1, 1, 2, 0, 1, 2, 0, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]]], "func_feature": [1, 2, 5, 0, 9, 11, 0, 21, 0.04563, 0, 2], "succs": [[5], [0, 7], [8, 3], [2, 5], [2, 6], [], [], [8, 4], []], "fname": "hash_get_first", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 11, 0, 0, 3, 1, 1, 0, 0, 0.01818181818181818, ["mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_93FB"], ["mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 11, 0, 0, 2, 0, 1, 1, 3, 0.11818181818181818, ["cmp     [cursor], entry", "jz      short loc_940B"], ["cmp~<TAG>,entry", "jz~FOO"]], [0, 0, 6, 0, 0, 1, 0, 1, 3, 4, 0.045454545454545456, ["jmp     short loc_9414"], ["jmp~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 5, 2, 0.06363636363636363, ["mov     rax, [bucket]", "test    rax, rax", "jz      short loc_9418"], ["mov~rax,<TAG>", "test~rax,rax", "jz~FOO"]], [1, 0, 5, 1, 0, 3, 0, 0, 4, 2, 0.1909090909090909, ["add     bucket, 10h", "cmp     rdx, bucket", "jbe     short loc_9430"], ["add~bucket,0", "cmp~rdx,bucket", "jbe~FOO"]], [0, 0, 1, 0, 0, 2, 0, 1, 3, 1, 0.03636363636363636, ["mov     rax, [rax]", "jmp     short loc_9435"], ["mov~rax,<TAG>", "jmp~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 2, 2, 0.14545454545454545, ["mov     bucket, [cursor+8]", "test    rax, rax", "jnz     short loc_942B"], ["mov~bucket,[cursor+0]", "test~rax,rax", "jnz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 5, 1, 0.02727272727272727, ["mov     eax, 0"], ["mov~eax,0"]], [0, 0, 5, 0, 0, 1, 0, 0, 3, 3, 0.1909090909090909, ["mov     rdx, [table+8]"], ["mov~rdx,[table+0]"]], [0, 0, 1, 0, 0, 1, 0, 1, 6, 1, 0.00909090909090909, ["jmp     short loc_9435"], ["jmp~FOO"]], [1, 0, 11, 1, 1, 8, 0, 1, 0, 4, 0.0, ["push    rbp", "push    rbx", "sub     rsp, 8", "mov     rbp, table", "mov     rbx, entry", "call    safe_hasher", "mov     rcx, rax", "mov     rdx, cursor"], ["push~rbp", "push~rbx", "sub~rsp,0", "mov~rbp,table", "mov~rbx,entry", "call~FOO", "mov~rcx,rax", "mov~rdx,cursor"]], [1, 0, 0, 1, 0, 4, 0, 0, 4, 0, 0.0, ["add     rsp, 8", "pop     entry", "pop     table", "retn"], ["add~rsp,0", "pop~entry", "pop~table", "retn"]]], "func_feature": [1, 3, 8, 0, 12, 16, 0, 32, 0.07045, 0, 3], "succs": [[1, 2], [0, 6], [8], [9, 4], [3, 7], [11], [8, 5], [11], [4], [11], [1], []], "fname": "hash_get_next", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 9, 0, 0, 2, 0, 1, 0, 0, 0.01818181818181818, ["cmp     buffer_size, counter", "jnz     short loc_9469"], ["cmp~buffer_size,counter", "jnz~FOO"]], [1, 0, 9, 1, 0, 6, 1, 1, 6, -1, 0.20909090909090908, ["add     counter, 1", "mov     r8, [cursor]", "mov     [buffer+counter*8-8], r8", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jz      short loc_944C"], ["add~counter,0", "mov~r8,<TAG>", "mov~[buffer+0],r8", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 11, 0, 0, 3, 0, 0, 0, 1, 0.0, ["mov     bucket, [table]", "cmp     bucket, [table+8]", "jnb     short loc_9487"], ["mov~bucket,<TAG>", "cmp~bucket,[table+0]", "jnb~FOO"]], [0, 0, 9, 0, 0, 2, 0, 0, 4, -1, 0.1909090909090909, ["cmp     buffer_size, counter", "jbe     short locret_9483"], ["cmp~buffer_size,counter", "jbe~FOO"]], [0, 0, 9, 0, 0, 2, 1, 1, 3, -1, 0.21818181818181817, ["test    cursor, cursor", "jz      short loc_944C"], ["test~cursor,cursor", "jz~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 4, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 9, 1, 0, 3, 0, 0, 3, -1, 0.19999999999999998, ["add     bucket, 10h", "cmp     [table+8], bucket", "jbe     short locret_9485"], ["add~bucket,0", "cmp~[table+0],bucket", "jbe~FOO"]], [0, 0, 9, 0, 0, 1, 0, 0, 5, -1, 0.14545454545454545, ["mov     rcx, cursor"], ["mov~rcx,cursor"]], [1, 0, 9, 0, 0, 2, 0, 1, 1, -1, 0.07272727272727272, ["mov     eax, 0", "jmp     short loc_9456"], ["mov~eax,0", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.00909090909090909, ["mov     eax, 0", "jmp     short locret_9483"], ["mov~eax,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 1, 0, 0, 2, -1, 0.0, ["rep retn"], ["retn"]], [1, 0, 9, 0, 0, 2, 0, 1, 2, -1, 0.2727272727272727, ["cmp     qword ptr [bucket], 0", "jz      short loc_944C"], ["cmp~<TAG>,0", "jz~FOO"]]], "func_feature": [0, 2, 6, 0, 12, 17, 0, 27, 0.11136, 0, 2], "succs": [[1, 10], [0, 6], [8, 9], [10, 7], [3, 6], [], [11, 5], [1], [11], [10], [], [4, 6]], "fname": "hash_get_entries", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 0, 1, 0, 9, 0, 0, 0, 0, 0.0, ["mov     rax, rbp", "add     rsp, 8", "pop     rbx", "pop     rbp", "pop     bucket", "pop     r13", "pop     r14", "pop     r15", "retn"], ["mov~rax,rbp", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~bucket", "pop~r13", "pop~r14", "pop~r15", "retn"]], [1, 0, 8, 1, 0, 3, 0, 0, 3, 0, 0.2, ["add     bucket, 10h", "cmp     [table+8], bucket", "jbe     short loc_94EF"], ["add~bucket,0", "cmp~[table+0],bucket", "jbe~FOO"]], [0, 0, 8, 0, 1, 5, 1, 2, 5, 0, 0.2, ["mov     rsi, processor_data", "mov     rdi, [cursor]", "call    processor", "test    al, al", "jz      short loc_94EF"], ["mov~rsi,processor_data", "mov~rdi,<TAG>", "call~processor", "test~al,al", "jz~FOO"]], [1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0.011111111111111112, ["mov     ebp, 0"], ["mov~ebp,0"]], [1, 0, 10, 1, 0, 10, 0, 0, 0, 0, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r12, [table]", "cmp     bucket, [table+8]", "jnb     short loc_94EA"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r12,<TAG>", "cmp~bucket,[table+0]", "jnb~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 2, 0, 0.3, ["cmp     qword ptr [bucket], 0", "jz      short loc_94B5"], ["cmp~<TAG>,0", "jz~FOO"]], [1, 0, 8, 0, 0, 5, 0, 1, 1, 0, 0.07777777777777778, ["mov     r14, processor_data", "mov     r13, processor", "mov     r15, table", "mov     ebp, 0", "jmp     short loc_94BF"], ["mov~r14,processor_data", "mov~r13,processor", "mov~r15,table", "mov~ebp,0", "jmp~FOO"]], [1, 0, 8, 1, 0, 4, 1, 1, 6, 0, 0.15555555555555556, ["add     counter, 1", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_94CE"], ["add~counter,0", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 1, 7, 0, 0.12222222222222223, ["jmp     short loc_94B5"], ["jmp~FOO"]], [0, 0, 8, 0, 0, 2, 1, 1, 3, 0, 0.23333333333333334, ["test    cursor, cursor", "jz      short loc_94B5"], ["test~cursor,cursor", "jz~FOO"]], [0, 0, 8, 0, 0, 1, 0, 0, 4, 0, 0.18888888888888888, ["mov     rbx, cursor"], ["mov~rbx,cursor"]]], "func_feature": [1, 3, 7, 0, 11, 16, 0, 43, 0.13535, 0, 4], "succs": [[], [0, 5], [0, 7], [0], [3, 6], [9, 1], [5], [8, 2], [1], [1, 10], [2]], "fname": "hash_do_for_each", "n_num": 11}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0.08333333333333333, ["mov     edx, 0"], ["mov~edx,0"]], [0, 0, 4, 0, 0, 3, 1, 1, 0, 1, 0.0, ["movzx   ecx, byte ptr [string]", "test    cl, cl", "jz      short loc_9534"], ["movzx~ecx,<TAG>", "test~cl,cl", "jz~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.08333333333333333, ["mov     edx, 0", "jmp     short loc_9530"], ["mov~edx,0", "jmp~FOO"]], [0, 0, 0, 0, 0, 2, 0, 0, 2, -1, 0.0, ["mov     rax, rdx", "retn"], ["mov~rax,rdx", "retn"]], [3, 0, 2, 5, 0, 11, 1, 1, 2, -1, 0.08333333333333333, ["mov     rax, value", "shl     rax, 5", "sub     rax, value", "movzx   ecx, cl", "add     rax, ch_0", "mov     edx, 0", "div     n_buckets", "add     string, 1", "movzx   ecx, byte ptr [string]", "test    cl, cl", "jnz     short loc_950D"], ["mov~rax,value", "shl~rax,0", "sub~rax,value", "movzx~ecx,cl", "add~rax,ch_0", "mov~edx,0", "div~,n_buckets", "add~string,0", "movzx~ecx,<TAG>", "test~cl,cl", "jnz~FOO"]]], "func_feature": [0, 2, 3, 0, 5, 6, 0, 19, 0.05, 0, 5], "succs": [[4], [0, 2], [3], [], [3, 4]], "fname": "hash_string", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[5, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0.0, ["mov     dword ptr [tuning], 0", "mov     dword ptr [tuning+4], 3F800000h", "mov     dword ptr [tuning+8], 3F4CCCCDh", "mov     dword ptr [tuning+0Ch], 3FB4FDF4h", "mov     byte ptr [tuning+10h], 0", "retn"], ["mov~<TAG>,0", "mov~[word ptr [tuning+0],0", "mov~[word ptr [tuning+0],0", "mov~[word ptr [tuning+0],0", "mov~[yte ptr [tuning+0],0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 6, 0.0, 0, 0], "succs": [[]], "fname": "hash_reset_tuning", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 5, 0, 1, 8, 2, 2, 0, 0, 0.13333333333333333, ["test    tuning, tuning", "lea     table, default_tuning", "cmovz   tuning, rax", "mov     [table+28h], tuning", "mov     rdi, table; table", "call    check_tuning", "test    al, al", "jz      short fail"], ["test~tuning,tuning", "lea~table,<TAG>", "cmovz~tuning,rax", "mov~[table+0],tuning", "mov~rdi,table", "call~FOO", "test~al,al", "jz~FOO"]], [1, 1, 6, 1, 1, 23, 3, 2, 0, 2, 0.0, ["push    r15", "push    r14", "push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r15, candidate", "mov     rbp, tuning", "mov     r13, hasher", "mov     r12, comparator", "mov     r14, data_freer", "test    hasher, hasher", "lea     rax, raw_hasher", "cmovz   r13, rax", "test    comparator, comparator", "lea     rax, raw_comparator", "cmovz   r12, rax", "mov     edi, 50h ; 'P'; size", "call    _malloc", "mov     rbx, rax", "test    table, table", "jz      short loc_961F"], ["push~r15", "push~r14", "push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r15,candidate", "mov~rbp,tuning", "mov~r13,hasher", "mov~r12,comparator", "mov~r14,data_freer", "test~hasher,hasher", "lea~rax,<TAG>", "cmovz~r13,rax", "test~comparator,comparator", "lea~rax,<TAG>", "cmovz~r12,rax", "mov~edi,<STR>", "call~FOO", "mov~rbx,rax", "test~table,table", "jz~FOO"]], [1, 0, 3, 0, 1, 6, 1, 2, 3, 1, 0.1, ["mov     esi, 10h; size", "mov     rdi, rax; nmemb", "call    _calloc", "mov     [table], rax", "test    rax, rax", "jz      short fail"], ["mov~esi,0", "mov~rdi,rax", "call~FOO", "mov~<TAG>,rax", "test~rax,rax", "jz~FOO"]], [0, 0, 4, 0, 1, 7, 1, 2, 2, 1, 0.13333333333333333, ["mov     rsi, tuning; tuning", "mov     rdi, candidate; candidate", "call    compute_bucket_size", "mov     tuning, rax", "mov     [table+10h], rax", "test    rax, rax", "jz      short fail"], ["mov~rsi,tuning", "mov~rdi,candidate", "call~FOO", "mov~tuning,rax", "mov~[table+0],rax", "test~rax,rax", "jz~FOO"]], [1, 0, 0, 1, 0, 9, 0, 0, 1, -1, 0.0, ["mov     rax, rbx", "add     rsp, 8", "pop     rbx", "pop     rbp", "pop     comparator", "pop     hasher", "pop     data_freer", "pop     candidate", "retn"], ["mov~rax,rbx", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~comparator", "pop~hasher", "pop~data_freer", "pop~candidate", "retn"]], [1, 0, 1, 0, 1, 4, 0, 2, 2, 0, 0.08333333333333333, ["mov     rdi, table; ptr", "call    free", "mov     ebx, 0", "jmp     short loc_961F"], ["mov~rdi,table", "call~FOO", "mov~ebx,0", "jmp~FOO"]], [4, 0, 1, 2, 0, 9, 0, 0, 4, -1, 0.016666666666666666, ["shl     rbp, 4", "add     rbp, rax", "mov     [table+8], rbp", "mov     qword ptr [table+18h], 0", "mov     qword ptr [table+20h], 0", "mov     [table+30h], hasher", "mov     [table+38h], comparator", "mov     [table+40h], data_freer", "mov     qword ptr [table+48h], 0"], ["shl~rbp,0", "add~rbp,rax", "mov~[table+0],rbp", "mov~[word ptr [table+0],0", "mov~[word ptr [table+0],0", "mov~[table+0],hasher", "mov~[table+0],comparator", "mov~[table+0],data_freer", "mov~[word ptr [table+0],0"]]], "func_feature": [5, 7, 10, 0, 7, 10, 2, 66, 0.06667, 3, 4], "succs": [[3, 5], [0, 4], [5, 6], [2, 5], [], [4], [4]], "fname": "hash_initialize", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[2, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0.0, ["mov     qword ptr [table+18h], 0", "mov     qword ptr [table+20h], 0", "pop     rbx", "pop     table", "pop     bucket", "retn"], ["mov~[word ptr [table+0],0", "mov~[word ptr [table+0],0", "pop~rbx", "pop~table", "pop~bucket", "retn"]], [1, 0, 11, 1, 0, 3, 0, 0, 2, 5, 0.3818181818181818, ["add     bucket, 10h", "cmp     [table+8], bucket", "jbe     short loc_9650"], ["add~bucket,0", "cmp~[table+0],bucket", "jbe~FOO"]], [0, 0, 11, 0, 0, 7, 0, 0, 0, 5, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbp, table", "mov     r12, [table]", "cmp     bucket, [table+8]", "jb      short loc_968F"], ["push~r12", "push~rbp", "push~rbx", "mov~rbp,table", "mov~r12,<TAG>", "cmp~bucket,[table+0]", "jb~FOO"]], [0, 0, 11, 0, 0, 3, 1, 1, 3, 2, 0.21818181818181817, ["mov     rax, [table+40h]", "test    rax, rax", "jz      short loc_96AE"], ["mov~rax,[table+0]", "test~rax,rax", "jz~FOO"]], [1, 0, 11, 0, 0, 8, 1, 1, 4, 1, 0.21818181818181817, ["mov     qword ptr [cursor], 0", "mov     rax, [cursor+8]", "mov     rdx, [table+48h]", "mov     [cursor+8], rdx", "mov     [table+48h], cursor", "mov     rbx, cursor", "test    cursor, cursor", "jnz     short loc_96A0"], ["mov~<TAG>,0", "mov~rax,[cursor+0]", "mov~rdx,[table+0]", "mov~[cursor+0],rdx", "mov~[table+0],cursor", "mov~rbx,cursor", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 11, 0, 0, 3, 1, 1, 2, 3, 0.35454545454545455, ["mov     rbx, [bucket+8]", "test    cursor, cursor", "jz      short loc_9665"], ["mov~rbx,[bucket+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 11, 0, 1, 2, 0, 1, 4, 2, 0.0, ["mov     rdi, [cursor]", "call    rax"], ["mov~rdi,<TAG>", "call~rax"]], [0, 0, 11, 0, 0, 3, 1, 1, 3, 7, 0.35454545454545455, ["mov     rax, [table+40h]", "test    rax, rax", "jz      short loc_9674"], ["mov~rax,[table+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 11, 0, 0, 1, 0, 1, 5, 0, 0.1909090909090909, ["jmp     short loc_9665"], ["jmp~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 1, 4, 0.3818181818181818, ["cmp     qword ptr [bucket], 0", "jz      short loc_9685"], ["cmp~<TAG>,0", "jz~FOO"]], [2, 0, 11, 0, 0, 2, 0, 0, 4, 6, 0.35454545454545455, ["mov     qword ptr [bucket], 0", "mov     qword ptr [bucket+8], 0"], ["mov~<TAG>,0", "mov~[word ptr [bucket+0],0"]], [0, 0, 11, 0, 1, 2, 0, 1, 4, 7, 0.0, ["mov     rdi, [bucket]", "call    rax"], ["mov~rdi,<TAG>", "call~rax"]]], "func_feature": [2, 4, 8, 0, 12, 18, 0, 42, 0.20455, 0, 1], "succs": [[], [0, 9], [0, 9], [4, 6], [8, 3], [3, 7], [4], [10, 11], [7], [1, 5], [1], [10]], "fname": "hash_clear", "n_num": 12}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 6, 0, 1, 5, 1, 2, 0, 0, 0.0, ["mov     rbx, [cursor+8]", "call    free", "mov     rdi, next", "test    next, next", "jnz     short loc_9730"], ["mov~rbx,[cursor+0]", "call~FOO", "mov~rdi,next", "test~next,next", "jnz~FOO"]], [0, 0, 6, 0, 0, 3, 1, 1, 2, 3, 0.0875, ["mov     rdi, [bucket+8]; ptr", "test    cursor, cursor", "jz      short loc_9741"], ["mov~rdi,[bucket+0]", "test~cursor,cursor", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 1, 3, 0.03333333333333333, ["cmp     qword ptr [table+20h], 0", "jz      short loc_971C"], ["cmp~[word ptr [table+0],0", "jz~FOO"]], [1, 0, 16, 0, 0, 6, 0, 1, 0, 3, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     r12, table", "cmp     qword ptr [table+40h], 0", "jz      short loc_971C"], ["push~r12", "push~rbp", "push~rbx", "mov~r12,table", "cmp~[word ptr [table+0],0", "jz~FOO"]], [0, 0, 13, 0, 0, 2, 1, 1, 4, 4, 0.075, ["test    cursor, cursor", "jz      short loc_96EF"], ["test~cursor,cursor", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 3, 4, 0.12083333333333333, ["cmp     qword ptr [bucket+0], 0", "jz      short loc_96EF"], ["cmp~[word ptr [bucket+0],0", "jz~FOO"]], [0, 0, 6, 0, 0, 3, 0, 0, 1, 2, 0.2125, ["mov     rbp, [table]", "cmp     bucket, [table+8]", "jnb     short loc_974C"], ["mov~rbp,<TAG>", "cmp~bucket,[table+0]", "jnb~FOO"]], [1, 0, 13, 1, 0, 3, 0, 0, 4, 3, 0.20416666666666666, ["add     bucket, 10h", "cmp     [table+8], bucket", "jbe     short loc_971C"], ["add~bucket,0", "cmp~[table+0],bucket", "jbe~FOO"]], [0, 0, 13, 0, 0, 1, 0, 0, 5, 6, 0.05416666666666667, ["mov     rbx, cursor"], ["mov~rbx,cursor"]], [1, 0, 6, 1, 0, 3, 0, 1, 3, 2, 0.029166666666666667, ["add     bucket, 10h", "cmp     [table+8], bucket", "ja      short loc_9727"], ["add~bucket,0", "cmp~[table+0],bucket", "ja~FOO"]], [0, 0, 14, 0, 0, 3, 0, 0, 2, 3, 0.058333333333333334, ["mov     rbp, [table]", "cmp     bucket, [table+8]", "jb      short loc_96FA"], ["mov~rbp,<TAG>", "cmp~bucket,[table+0]", "jb~FOO"]], [0, 0, 3, 0, 0, 1, 0, 1, 3, 2, 0.0125, ["jmp     short loc_974C"], ["jmp~FOO"]], [0, 0, 13, 0, 1, 5, 1, 2, 6, 5, 0.07083333333333333, ["mov     rdi, [cursor]", "call    qword ptr [table+40h]", "mov     cursor, [cursor+8]", "test    cursor, cursor", "jnz     short loc_9709"], ["mov~rdi,<TAG>", "call~[word ptr [table+0]", "mov~cursor,[cursor+0]", "test~cursor,cursor", "jnz~FOO"]], [0, 0, 2, 0, 0, 3, 1, 1, 2, 1, 0.11666666666666667, ["mov     rdi, [table+48h]; ptr", "test    cursor, cursor", "jz      short loc_9767"], ["mov~rdi,[table+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 2, 0, 1, 5, 1, 2, 3, 1, 0.0, ["mov     rbx, [cursor+8]", "call    free", "mov     rdi, next", "test    next, next", "jnz     short loc_9756"], ["mov~rbx,[cursor+0]", "call~FOO", "mov~rdi,next", "test~next,next", "jnz~FOO"]], [0, 0, 13, 0, 0, 1, 0, 1, 7, 4, 0.0875, ["jmp     short loc_96EF"], ["jmp~FOO"]], [0, 0, 0, 0, 2, 8, 0, 2, 3, 0, 0.0, ["mov     cursor, [table]; ptr", "call    free", "mov     rdi, table; ptr", "call    free", "pop     rbx", "pop     bucket", "pop     table", "retn"], ["mov~cursor,<TAG>", "call~FOO", "mov~rdi,table", "call~FOO", "pop~rbx", "pop~bucket", "pop~table", "retn"]]], "func_feature": [5, 6, 17, 0, 17, 29, 2, 56, 0.06838, 0, 2], "succs": [[0, 9], [0, 9], [10, 6], [2, 6], [8, 7], [4, 7], [1, 13], [5, 6], [12], [1, 13], [11, 5], [13], [12, 15], [16, 14], [16, 14], [7], []], "fname": "hash_free", "n_num": 17}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0.016483516483516484, ["mov     ebp, 0", "jmp     short loc_98B4"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 10, 0, 1, 6, 1, 2, 2, 3, 0.07692307692307693, ["mov     esi, 10h; size", "mov     rdi, new_size_0; nmemb", "call    _calloc", "mov     [new_table+78h+new_size], rax", "test    rax, rax", "jz      loc_98D6"], ["mov~esi,0", "mov~rdi,new_size_0", "call~FOO", "mov~<TAG>,rax", "test~rax,rax", "jz~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 2, 1, 0.1208791208791209, ["mov     eax, ebp", "mov     rcx, [rsp+78h+var_20]", "xor     rcx, fs:28h", "jnz     short loc_98DD"], ["mov~eax,ebp", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 3, 0, 1, 3, 0, 2, 6, 2, 0.03296703296703297, ["mov     rdi, [new_table+78h+new_size]; ptr", "call    free", "jmp     short loc_98B4"], ["mov~rdi,<TAG>", "call~FOO", "jmp~FOO"]], [0, 0, 3, 0, 1, 13, 0, 2, 4, 2, 0.016483516483516484, ["mov     rdi, [table]; ptr", "call    free", "mov     rax, [new_table+78h+new_size]", "mov     [table], rax", "mov     rax, [new_table+78h+var_70]", "mov     [table+8], rax", "mov     rax, [new_table+78h+var_68]", "mov     [table+10h], rax", "mov     rax, [new_table+78h+var_60]", "mov     [table+18h], rax", "mov     rax, [new_table+78h+var_30]", "mov     [table+48h], rax", "jmp     short loc_98B4"], ["mov~rdi,<TAG>", "call~FOO", "mov~rax,<TAG>", "mov~<TAG>,rax", "mov~rax,[new_table+0]", "mov~[table+0],rax", "mov~rax,[new_table+0]", "mov~[table+0],rax", "mov~rax,[new_table+0]", "mov~[table+0],rax", "mov~rax,[new_table+0]", "mov~[table+0],rax", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 2, 2, 0.016483516483516484, ["mov     ebp, 1", "jmp     short loc_98B4"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 1, 0, 0, 1, 2, 0.016483516483516484, ["mov     ebp, 0"], ["mov~ebp,0"]], [1, 0, 5, 0, 1, 6, 1, 2, 5, 3, 0.04395604395604396, ["mov     rsi, new_table; src", "mov     edx, 0; safe", "mov     rdi, table; dst", "call    transfer_entries", "test    al, al", "jz      short loc_98AA"], ["mov~rsi,new_table", "mov~edx,0", "mov~rdi,table", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 6, 0, 1, 8, 1, 2, 4, 4, 0.06593406593406594, ["mov     rax, [new_table+78h+var_30]", "mov     [table+48h], rax", "mov     rsi, new_table; src", "mov     edx, 1; safe", "mov     rdi, table; dst", "call    transfer_entries", "test    al, al", "jz      short loc_98AA"], ["mov~rax,[new_table+0]", "mov~[table+0],rax", "mov~rsi,new_table", "mov~edx,0", "mov~rdi,table", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 14, 1, 1, 14, 2, 2, 0, 3, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 60h", "mov     rbx, table", "mov     table, candidate; candidate", "mov     rax, fs:28h", "mov     [rsp+78h+var_20], rax", "xor     eax, eax", "mov     r12, [table+28h]", "mov     candidate, r12; tuning", "call    compute_bucket_size", "test    new_size_0, new_size_0", "jz      loc_98AF"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,table", "mov~table,candidate", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~r12,[table+0]", "mov~candidate,r12", "call~FOO", "test~new_size_0,new_size_0", "jz~FOO"]], [0, 0, 12, 0, 0, 3, 0, 1, 1, 3, 0.049450549450549455, ["mov     rbp, new_size_0", "cmp     [table+10h], new_size_0", "jz      loc_98CF"], ["mov~rbp,new_size_0", "cmp~[table+0],new_size_0", "jz~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 3, -1, 0.0, ["add     rsp, 60h", "pop     table", "pop     rbp", "pop     r12", "retn"], ["add~rsp,0", "pop~table", "pop~rbp", "pop~r12", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 3, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [4, 0, 8, 2, 1, 22, 1, 2, 3, 3, 0.08241758241758243, ["mov     [new_table+78h+var_68], new_size_0", "shl     new_size_0, 4", "add     rbp, rax", "mov     [new_table+78h+var_70], rbp", "mov     [new_table+78h+var_60], 0", "mov     [new_table+78h+var_58], 0", "mov     [new_table+78h+var_50], r12", "mov     rax, [table+30h]", "mov     [new_table+78h+var_48], rax", "mov     rax, [table+38h]", "mov     [new_table+78h+var_40], rax", "mov     rax, [table+40h]", "mov     [new_table+78h+var_38], rax", "mov     rax, [table+48h]", "mov     [new_table+78h+var_30], rax", "mov     rdi, new_table; dst", "mov     edx, 0; safe", "mov     rsi, table; src", "call    transfer_entries", "mov     ebp, eax", "test    al, al", "jnz     short loc_9875"], ["mov~[new_table+0],new_size_0", "shl~new_size_0,0", "add~rbp,rax", "mov~[new_table+0],rbp", "mov~[new_table+0],0", "mov~[new_table+0],0", "mov~[new_table+0],r12", "mov~rax,[table+0]", "mov~[new_table+0],rax", "mov~rax,[table+0]", "mov~[new_table+0],rax", "mov~rax,[table+0]", "mov~[new_table+0],rax", "mov~rax,[table+0]", "mov~[new_table+0],rax", "mov~rdi,new_table", "mov~edx,0", "mov~rsi,table", "call~FOO", "mov~ebp,eax", "test~al,al", "jnz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, -1, 0.0, ["call    _abort"], ["call~FOO"]]], "func_feature": [9, 7, 20, 10, 15, 19, 2, 91, 0.0359, 1, 4], "succs": [[2], [0, 13], [11, 12], [2], [2], [2], [2], [3, 14], [14, 7], [10, 6], [1, 5], [], [], [8, 4], []], "fname": "hash_rehash", "n_num": 15}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 13, 0, 1, 4, 1, 2, 0, 0, 0.08141025641025641, ["mov     rdi, table; table", "call    hash_rehash", "test    al, al", "jz      loc_9B4F"], ["mov~rdi,table", "call~FOO", "test~al,al", "jz~FOO"]], [1, 0, 14, 0, 0, 5, 1, 1, 16, 4, 0.0391025641025641, ["subss   xmm0, cs:dword_BCDC", "cvttss2si rsi, xmm0", "mov     rax, 8000000000000000h", "xor     rsi, rax", "jmp     loc_9A77"], ["subss~xmm0,<TAG>", "cvttss2si~rsi,xmm0", "mov~rax,0", "xor~rsi,rax", "jmp~FOO"]], [0, 0, 14, 0, 0, 1, 0, 0, 16, 4, 0.0391025641025641, ["cvttss2si rsi, xmm0; candidate"], ["cvttss2si~rsi,xmm0"]], [1, 0, 9, 0, 0, 3, 0, 1, 7, 3, 0.125, ["mov     rax, [rsp+28h+bucket]", "cmp     qword ptr [rax], 0", "jz      loc_9B2E"], ["mov~rax,<TAG>", "cmp~<TAG>,0", "jz~FOO"]], [0, 0, 22, 0, 0, 4, 0, 0, 11, 4, 0.15384615384615385, ["movaps  xmm3, xmm2", "mulss   xmm3, xmm0", "ucomiss xmm1, xmm3", "jbe     loc_997E"], ["movaps~xmm3,xmm2", "mulss~xmm3,xmm0", "ucomiss~xmm1,xmm3", "jbe~FOO"]], [1, 0, 11, 0, 1, 7, 1, 2, 18, 4, 0.05128205128205128, ["mov     rdx, rsp; bucket_head", "mov     ecx, 0; delete", "mov     rsi, entry; entry", "mov     rdi, table; table", "call    hash_find_entry", "test    rax, rax", "jz      loc_997E"], ["mov~rdx,rsp", "mov~ecx,0", "mov~rsi,entry", "mov~rdi,table", "call~FOO", "test~rax,rax", "jz~FOO"]], [0, 0, 29, 0, 0, 3, 0, 1, 6, 4, 0.14487179487179488, ["mulss   xmm0, dword ptr [rdx+8]", "ucomiss xmm1, xmm0", "ja      short loc_99FC"], ["mulss~xmm0,[word ptr [rdx+0]", "ucomiss~xmm1,xmm0", "ja~FOO"]], [0, 0, 16, 0, 0, 2, 0, 0, 15, 5, 0.09487179487179487, ["ucomiss xmm0, cs:dword_BCDC", "jnb     loc_9AF2"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 7, 0, 0, 3, 1, 1, 8, 4, 0.06666666666666667, ["mov     rax, [table+48h]", "test    rax, rax", "jz      loc_9B11"], ["mov~rax,[table+0]", "test~rax,rax", "jz~FOO"]], [0, 0, 28, 0, 1, 7, 1, 2, 7, 8, 0.10384615384615385, ["mov     rdi, table; table", "call    check_tuning", "mov     rdx, [table+28h]", "movss   xmm2, dword ptr [rdx+8]", "mov     rax, [table+10h]", "test    rax, rax", "js      loc_9AA8"], ["mov~rdi,table", "call~FOO", "mov~rdx,[table+0]", "movss~xmm2,[word ptr [rdx+0]", "mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 4, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 3, 1, 0.046153846153846156, ["mov     eax, edx", "mov     rcx, [rsp+28h+var_20]", "xor     rcx, fs:28h", "jnz     loc_9B59"], ["mov~eax,edx", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [1, 0, 38, 0, 1, 8, 1, 2, 1, 3, 0.02435897435897436, ["mov     rbx, table", "mov     rbp, entry", "mov     r12, matched_ent", "mov     matched_ent, rsp; bucket_head", "mov     ecx, 0; delete", "call    hash_find_entry", "test    data, data", "jz      short loc_994C"], ["mov~rbx,table", "mov~rbp,entry", "mov~r12,matched_ent", "mov~matched_ent,rsp", "mov~ecx,0", "call~FOO", "test~data,data", "jz~FOO"]], [1, 0, 40, 1, 0, 9, 2, 1, 0, 4, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 10h", "mov     rax, fs:28h", "mov     [rsp+28h+var_20], rax", "xor     eax, eax", "test    entry, entry", "jz      short loc_9947"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "test~entry,entry", "jz~FOO"]], [0, 0, 4, 0, 0, 2, 0, 0, 9, 3, 0.009294871794871795, ["mov     rdx, [rax+8]", "mov     [table+48h], rdx"], ["mov~rdx,[rax+0]", "mov~[table+0],rdx"]], [0, 0, 26, 0, 0, 2, 0, 0, 8, 7, 0.05448717948717949, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [1, 0, 4, 0, 0, 3, 1, 1, 2, 2, 0.005128205128205128, ["mov     edx, 0", "test    matched_ent, matched_ent", "jz      short loc_9928"], ["mov~edx,0", "test~matched_ent,matched_ent", "jz~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 19, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 3, 2, 0.0, ["mov     [matched_ent], data"], ["mov~<TAG>,data"]], [0, 0, 3, 0, 0, 1, 0, 1, 10, 2, 0.0016025641025641025, ["jmp     loc_9928"], ["jmp~FOO"]], [2, 0, 5, 0, 1, 5, 1, 2, 9, 3, 0.027243589743589744, ["mov     edi, 10h; size", "call    _malloc", "mov     edx, 0FFFFFFFFh", "test    rax, rax", "jnz     loc_99A1"], ["mov~edi,0", "call~FOO", "mov~edx,0", "test~rax,rax", "jnz~FOO"]], [0, 0, 25, 0, 0, 3, 1, 1, 9, 6, 0.1346153846153846, ["mov     rax, [table+18h]", "test    rax, rax", "js      loc_9AC6"], ["mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [2, 0, 26, 0, 0, 8, 2, 1, 8, 7, 0.05448717948717949, ["mov     rcx, rax", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "pxor    xmm0, xmm0", "cvtsi2ss xmm0, rcx", "addss   xmm0, xmm0", "jmp     loc_9A23"], ["mov~rcx,rax", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rcx", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 23, 0, 0, 2, 0, 0, 10, 5, 0.06698717948717949, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [2, 0, 3, 1, 0, 8, 0, 1, 10, 2, 0.004166666666666667, ["mov     [rax], entry", "mov     rdx, [rsp+28h+bucket]", "mov     rcx, [rdx+8]", "mov     [rax+8], rcx", "mov     [rdx+8], rax", "add     qword ptr [table+20h], 1", "mov     edx, 1", "jmp     loc_9928"], ["mov~<TAG>,entry", "mov~rdx,<TAG>", "mov~rcx,[rdx+0]", "mov~[rax+0],rcx", "mov~[rdx+0],rax", "add~[word ptr [table+0],0", "mov~edx,0", "jmp~FOO"]], [3, 0, 3, 2, 0, 5, 0, 1, 8, 2, 0.03076923076923077, ["mov     [rax], entry", "add     qword ptr [table+20h], 1", "add     qword ptr [table+18h], 1", "mov     edx, 1", "jmp     loc_9928"], ["mov~<TAG>,entry", "add~[word ptr [table+0],0", "add~[word ptr [table+0],0", "mov~edx,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 15, 2, 0.007692307692307693, ["mov     edx, 0FFFFFFFFh", "jmp     loc_9928"], ["mov~edx,0", "jmp~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 18, 2, 0.007692307692307693, ["mov     edx, 0FFFFFFFFh", "jmp     loc_9928"], ["mov~edx,0", "jmp~FOO"]], [2, 0, 23, 0, 0, 8, 2, 1, 10, 5, 0.06698717948717949, ["mov     rcx, rax", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "pxor    xmm1, xmm1", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_9A39"], ["mov~rcx,rax", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 4, -1, 0.0, ["add     rsp, 10h", "pop     table", "pop     entry", "pop     matched_ent", "retn"], ["add~rsp,0", "pop~table", "pop~entry", "pop~matched_ent", "retn"]], [0, 0, 0, 0, 1, 1, 0, 1, 1, -1, 0.0, ["call    _abort"], ["call~FOO"]], [0, 0, 18, 0, 0, 2, 0, 0, 14, 3, 0.11666666666666667, ["ucomiss xmm0, cs:dword_BCD8", "jnb     loc_9B45"], ["ucomiss~xmm0,<TAG>", "jnb~FOO"]], [1, 0, 21, 0, 0, 2, 0, 1, 12, 5, 0.11282051282051282, ["cmp     byte ptr [tuning+10h], 0", "jz      loc_9AE4"], ["cmp~[yte ptr [tuning+0],0", "jz~FOO"]], [0, 0, 35, 0, 0, 3, 1, 1, 2, 8, 0.041025641025641026, ["mov     data, [table+18h]", "test    rax, rax", "js      short loc_99C3"], ["mov~data,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 33, 0, 0, 2, 0, 0, 3, 7, 0.02980769230769231, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [2, 0, 33, 0, 0, 8, 2, 1, 3, 7, 0.02980769230769231, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "pxor    xmm1, xmm1", "cvtsi2ss xmm1, rdx", "addss   xmm1, xmm1", "jmp     short loc_995E"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rdx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 19, 0, 0, 3, 0, 1, 13, 4, 0.052243589743589745, ["mulss   xmm0, dword ptr [tuning+0Ch]", "mulss   xmm0, xmm2", "jmp     loc_9A58"], ["mulss~xmm0,[word ptr [tuning+0]", "mulss~xmm0,xmm2", "jmp~FOO"]], [0, 0, 19, 0, 0, 1, 0, 0, 13, 4, 0.052243589743589745, ["mulss   xmm0, dword ptr [tuning+0Ch]"], ["mulss~xmm0,[word ptr [tuning+0]"]], [0, 0, 32, 0, 0, 4, 1, 1, 4, 6, 0.09871794871794871, ["mov     rdx, [table+28h]", "mov     rax, [table+10h]", "test    rax, rax", "js      short loc_99DE"], ["mov~rdx,[table+0]", "mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 30, 0, 0, 2, 0, 0, 5, 5, 0.05576923076923077, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [2, 0, 30, 0, 0, 8, 2, 1, 5, 5, 0.05576923076923077, ["mov     rcx, rax", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "pxor    xmm0, xmm0", "cvtsi2ss xmm0, rcx", "addss   xmm0, xmm0", "jmp     loc_9974"], ["mov~rcx,rax", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rcx", "addss~xmm0,xmm0", "jmp~FOO"]]], "func_feature": [8, 22, 34, 1, 41, 55, 1, 155, 0.05089, 3, 5], "succs": [[27, 5], [0], [0], [8, 25], [32, 3], [17, 3], [9, 3], [1, 2], [20, 14], [22, 15], [], [10, 29], [16, 33], [12, 30], [24], [21], [18, 11], [], [11], [11], [24, 19], [28, 23], [21], [4], [11], [11], [11], [11], [4], [], [], [26, 7], [36, 37], [34, 35], [38], [38], [31], [31], [40, 39], [6], [6]], "fname": "hash_insert_if_absent", "n_num": 41}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[2, 0, 6, 1, 1, 10, 1, 2, 0, 0, 0.0, ["push    rbx", "sub     rsp, 10h", "mov     rbx, entry", "mov     rax, fs:28h", "mov     [rsp+18h+var_10], rax", "xor     eax, eax", "mov     rdx, rsp; matched_ent", "call    hash_insert_if_absent", "cmp     eax, 0FFFFFFFFh", "jz      short loc_9BA4"], ["push~rbx", "sub~rsp,0", "mov~rbx,entry", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rdx,rsp", "call~FOO", "cmp~eax,0", "jz~FOO"]], [1, 0, 0, 1, 0, 3, 0, 0, 0, -1, 0.0, ["add     rsp, 10h", "pop     rbx", "retn"], ["add~rsp,0", "pop~rbx", "retn"]], [0, 0, 2, 0, 0, 4, 1, 1, 0, 1, 0.26666666666666666, ["mov     err, rbx", "mov     rcx, [rsp+18h+var_10]", "xor     rcx, fs:28h", "jnz     short loc_9BAB"], ["mov~err,rbx", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 0, 4, 0, 0, 2, 1, 1, 0, 2, 0.08333333333333333, ["test    eax, eax", "jnz     short loc_9B8B"], ["test~eax,eax", "jnz~FOO"]], [0, 0, 3, 0, 0, 1, 0, 0, 0, 2, 0.0, ["mov     entry, [rsp+18h+matched_ent]"], ["mov~entry,<TAG>"]], [1, 0, 3, 0, 0, 2, 0, 1, 0, 2, 0.05, ["mov     ebx, 0", "jmp     short loc_9B8B"], ["mov~ebx,0", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]]], "func_feature": [2, 3, 6, 1, 7, 8, 2, 23, 0.05714, 1, 2], "succs": [[3, 5], [], [1, 6], [2, 4], [2], [2], []], "fname": "hash_insert", "n_num": 7}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 2, 0, 0, 4, 1, 1, 0, 0, 0.0665024630541872, ["mov     rax, data", "mov     rcx, [rsp+28h+var_20]", "xor     rcx, fs:28h", "jnz     loc_9DC3"], ["mov~rax,data", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [2, 0, 29, 1, 1, 14, 2, 2, 0, 2, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 10h", "mov     rbx, table", "mov     rax, fs:28h", "mov     [rsp+28h+var_20], rax", "xor     eax, eax", "mov     rdx, rsp; bucket_head", "mov     ecx, 1; delete", "call    hash_find_entry", "mov     rbp, rax", "test    data, data", "jz      short loc_9BEF"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~rbx,table", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~rdx,rsp", "mov~ecx,0", "call~FOO", "mov~rbp,rax", "test~data,data", "jz~FOO"]], [0, 0, 21, 0, 0, 3, 0, 0, 6, 2, 0.19950738916256158, ["mulss   xmm1, dword ptr [rdx]", "ucomiss xmm1, xmm0", "jbe     short loc_9BEF"], ["mulss~xmm1,<TAG>", "ucomiss~xmm1,xmm0", "jbe~FOO"]], [0, 0, 14, 0, 0, 4, 0, 0, 11, 2, 0.22536945812807882, ["movaps  xmm2, xmm0", "mulss   xmm2, dword ptr [rdx]", "ucomiss xmm2, xmm1", "jbe     loc_9BEF"], ["movaps~xmm2,xmm0", "mulss~xmm2,<TAG>", "ucomiss~xmm2,xmm1", "jbe~FOO"]], [0, 0, 6, 0, 1, 4, 1, 2, 15, 2, 0.11083743842364532, ["mov     rdi, table; table", "call    hash_rehash", "test    al, al", "jnz     loc_9BEF"], ["mov~rdi,table", "call~FOO", "test~al,al", "jnz~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 17, 2, 0.007389162561576354, ["mov     qword ptr [table+48h], 0", "jmp     loc_9BEF"], ["mov~[word ptr [table+0],0", "jmp~FOO"]], [2, 0, 28, 1, 0, 4, 0, 1, 1, 2, 0.03078817733990148, ["sub     qword ptr [table+20h], 1", "mov     data, [rsp+28h+bucket]", "cmp     qword ptr [rax], 0", "jz      short loc_9C0F"], ["sub~[word ptr [table+0],0", "mov~data,<TAG>", "cmp~<TAG>,0", "jz~FOO"]], [1, 0, 7, 0, 0, 5, 1, 1, 14, 3, 0.026169950738916255, ["subss   xmm0, cs:dword_BCDC", "cvttss2si rsi, xmm0", "mov     rax, 8000000000000000h", "xor     rsi, rax", "jmp     loc_9CB9"], ["subss~xmm0,<TAG>", "cvttss2si~rsi,xmm0", "mov~rax,0", "xor~rsi,rax", "jmp~FOO"]], [0, 0, 9, 0, 0, 3, 0, 0, 13, 4, 0.08559113300492611, ["mulss   xmm0, dword ptr [tuning+4]", "ucomiss xmm0, cs:dword_BCDC", "jnb     loc_9D68"], ["mulss~xmm0,[word ptr [tuning+0]", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [0, 0, 15, 0, 0, 2, 0, 0, 10, 3, 0.10344827586206896, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [0, 0, 17, 0, 0, 3, 1, 1, 9, 4, 0.21798029556650247, ["mov     rax, [table+18h]", "test    rax, rax", "js      loc_9D4A"], ["mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [2, 0, 25, 0, 0, 8, 2, 1, 3, 5, 0.04248768472906404, ["mov     rdx, rax", "shr     rdx, 1", "and     eax, 1", "or      rdx, rax", "pxor    xmm0, xmm0", "cvtsi2ss xmm0, rdx", "addss   xmm0, xmm0", "jmp     loc_9C2D"], ["mov~rdx,rax", "shr~rdx,0", "and~eax,0", "or~rdx,rax", "pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rdx", "addss~xmm0,xmm0", "jmp~FOO"]], [1, 0, 27, 1, 0, 5, 1, 1, 2, 6, 0.059113300492610835, ["mov     rax, [table+18h]", "sub     rax, 1", "mov     [table+18h], rax", "test    rax, rax", "js      loc_9CF0"], ["mov~rax,[table+0]", "sub~rax,0", "mov~[table+0],rax", "test~rax,rax", "js~FOO"]], [1, 0, 0, 1, 0, 5, 0, 0, 2, -1, 0.0, ["add     rsp, 10h", "pop     table", "pop     rbp", "pop     r12", "retn"], ["add~rsp,0", "pop~table", "pop~rbp", "pop~r12", "retn"]], [0, 0, 18, 0, 0, 2, 0, 0, 8, 5, 0.09421182266009852, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [0, 0, 20, 0, 1, 6, 1, 2, 7, 6, 0.18842364532019704, ["mov     rdi, table; table", "call    check_tuning", "mov     rdx, [table+28h]", "mov     rax, [table+10h]", "test    rax, rax", "js      loc_9D2C"], ["mov~rdi,table", "call~FOO", "mov~rdx,[table+0]", "mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [2, 0, 15, 0, 0, 8, 2, 1, 10, 3, 0.10344827586206896, ["mov     rcx, rax", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "pxor    xmm1, xmm1", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_9C88"], ["mov~rcx,rax", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 2, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 9, 0, 0, 4, 0, 0, 13, 4, 0.08559113300492611, ["mulss   xmm0, dword ptr [tuning+4]", "mulss   xmm0, dword ptr [tuning+8]", "ucomiss xmm0, cs:dword_BCDC", "jnb     short loc_9DA4"], ["mulss~xmm0,[word ptr [tuning+0]", "mulss~xmm0,[word ptr [tuning+0]", "ucomiss~xmm0,<TAG>", "jnb~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 12, 5, 0.19704433497536947, ["cmp     byte ptr [tuning+10h], 0", "jz      loc_9D87"], ["cmp~[yte ptr [tuning+0],0", "jz~FOO"]], [0, 0, 7, 0, 0, 2, 0, 1, 14, 3, 0.026169950738916255, ["cvttss2si rsi, xmm0", "jmp     loc_9CB9"], ["cvttss2si~rsi,xmm0", "jmp~FOO"]], [2, 0, 22, 0, 0, 8, 2, 1, 5, 3, 0.07758620689655173, ["mov     rcx, rax", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "pxor    xmm1, xmm1", "cvtsi2ss xmm1, rcx", "addss   xmm1, xmm1", "jmp     loc_9C47"], ["mov~rcx,rax", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rcx", "addss~xmm1,xmm1", "jmp~FOO"]], [0, 0, 24, 0, 0, 4, 1, 1, 4, 4, 0.14039408866995073, ["mov     rdx, [table+28h]", "mov     rax, [table+10h]", "test    rax, rax", "js      loc_9D0E"], ["mov~rdx,[table+0]", "mov~rax,[table+0]", "test~rax,rax", "js~FOO"]], [0, 0, 25, 0, 0, 2, 0, 0, 3, 5, 0.04248768472906404, ["pxor    xmm0, xmm0", "cvtsi2ss xmm0, rax"], ["pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rax"]], [0, 0, 7, 0, 0, 1, 0, 0, 14, 3, 0.026169950738916255, ["cvttss2si rsi, xmm0; candidate"], ["cvttss2si~rsi,xmm0"]], [1, 0, 7, 0, 0, 5, 1, 1, 14, 3, 0.026169950738916255, ["subss   xmm0, cs:dword_BCDC", "cvttss2si rsi, xmm0", "mov     rax, 8000000000000000h", "xor     rsi, rax", "jmp     loc_9CB9"], ["subss~xmm0,<TAG>", "cvttss2si~rsi,xmm0", "mov~rax,0", "xor~rsi,rax", "jmp~FOO"]], [0, 0, 22, 0, 0, 2, 0, 0, 5, 3, 0.07758620689655173, ["pxor    xmm1, xmm1", "cvtsi2ss xmm1, rax"], ["pxor~xmm1,xmm1", "cvtsi2ss~xmm1,rax"]], [2, 0, 18, 0, 0, 8, 2, 1, 8, 5, 0.09421182266009852, ["mov     rcx, rax", "shr     rcx, 1", "and     eax, 1", "or      rcx, rax", "pxor    xmm0, xmm0", "cvtsi2ss xmm0, rcx", "addss   xmm0, xmm0", "jmp     loc_9C72"], ["mov~rcx,rax", "shr~rcx,0", "and~eax,0", "or~rcx,rax", "pxor~xmm0,xmm0", "cvtsi2ss~xmm0,rcx", "addss~xmm0,xmm0", "jmp~FOO"]], [0, 0, 5, 0, 0, 3, 1, 1, 16, 3, 0.059113300492610835, ["mov     rdi, [table+48h]; ptr", "test    cursor, cursor", "jz      short loc_9CE3"], ["mov~rdi,[table+0]", "test~cursor,cursor", "jz~FOO"]], [0, 0, 5, 0, 1, 5, 1, 2, 17, 3, 0.0, ["mov     r12, [cursor+8]", "call    free", "mov     rdi, next", "test    next, next", "jnz     short loc_9CD2"], ["mov~r12,[cursor+0]", "call~FOO", "mov~rdi,next", "test~next,next", "jnz~FOO"]]], "func_feature": [5, 20, 24, 1, 30, 43, 1, 129, 0.08046, 2, 4], "succs": [[17, 13], [0, 6], [0, 15], [0, 19], [0, 28], [0], [0, 12], [4], [24, 7], [3], [16, 9], [22], [11, 23], [], [10], [27, 14], [3], [], [25, 20], [8, 18], [4], [2], [26, 21], [22], [4], [4], [2], [10], [29, 5], [29, 5]], "fname": "hash_delete", "n_num": 30}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[3, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0.0, ["mov     byte ptr [ir+1Ch], 1", "mov     dword ptr [ir+14h], 0", "mov     dword ptr [ir+18h], 0", "mov     [ir], esi", "mov     [ir+4], esi", "mov     [ir+8], esi", "mov     [ir+0Ch], esi", "mov     [ir+10h], esi", "retn"], ["mov~[yte ptr [ir+0],0", "mov~[word ptr [ir+0],0", "mov~[word ptr [ir+0],0", "mov~<TAG>,esi", "mov~[ir+0],esi", "mov~[ir+0],esi", "mov~[ir+0],esi", "mov~[ir+0],esi", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 9, 0.0, 0, 0], "succs": [[]], "fname": "i_ring_init", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["movzx   eax, byte ptr [ir+1Ch]", "retn"], ["movzx~eax,[yte ptr [ir+0]", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 2, 2, 0.0, 0, 0], "succs": [[]], "fname": "i_ring_empty", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     byte ptr [ir+1Ch], 0", "retn"], ["mov~[yte ptr [ir+0],0", "retn"]], [1, 0, 1, 1, 0, 4, 1, 1, 1, 0, 0.0, ["add     edx, esi", "and     edx, 3", "mov     [ir+18h], edx", "jmp     short loc_9E16"], ["add~edx,esi", "and~edx,0", "mov~[ir+0],edx", "jmp~FOO"]], [2, 0, 2, 1, 0, 14, 2, 1, 0, 1, 0.0, ["movzx   edx, byte ptr [ir+1Ch]", "xor     edx, 1", "movzx   edx, dl", "mov     ecx, edx", "add     ecx, [ir+14h]", "and     ecx, 3", "mov     eax, ecx", "lea     r8, [ir+old_val*4]", "mov     eax, [r8]", "mov     [r8], esi", "mov     [ir+14h], ecx", "mov     esi, [ir+18h]", "cmp     esi, ecx", "jz      short loc_9E1B"], ["movzx~edx,[yte ptr [ir+0]", "xor~edx,0", "movzx~edx,dl", "mov~ecx,edx", "add~ecx,[ir+0]", "and~ecx,0", "mov~eax,ecx", "lea~r8,<TAG>", "mov~eax,<TAG>", "mov~<TAG>,esi", "mov~[ir+0],ecx", "mov~esi,[ir+0]", "cmp~esi,ecx", "jz~FOO"]]], "func_feature": [0, 3, 2, 0, 3, 3, 1, 20, 0.0, 0, 2], "succs": [[], [0], [0, 1]], "fname": "i_ring_push", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 4, 0, 0, 2, 0, 1, 0, 0, 0.0, ["cmp     byte ptr [ir+1Ch], 0", "jnz     short loc_9E4A"], ["cmp~[yte ptr [ir+0],0", "jnz~FOO"]], [1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0.0, ["mov     byte ptr [ir+1Ch], 1", "retn"], ["mov~[yte ptr [ir+0],0", "retn"]], [0, 0, 2, 0, 0, 8, 0, 1, 0, 1, 0.16666666666666666, ["mov     edx, [ir+14h]", "mov     eax, edx", "lea     rcx, [ir+rax*4]", "mov     eax, [rcx]", "mov     esi, [ir+10h]", "mov     [rcx], esi", "cmp     edx, [ir+18h]", "jz      short loc_9E53"], ["mov~edx,[ir+0]", "mov~eax,edx", "lea~rcx,<TAG>", "mov~eax,<TAG>", "mov~esi,[ir+0]", "mov~<TAG>,esi", "cmp~edx,[ir+0]", "jz~FOO"]], [1, 0, 0, 1, 1, 2, 0, 1, 0, -1, 0.0, ["sub     rsp, 8", "call    _abort"], ["sub~rsp,0", "call~FOO"]], [2, 0, 0, 1, 0, 4, 1, 0, 0, -1, 0.0, ["add     edx, 3", "and     edx, 3", "mov     [ir+14h], edx", "retn"], ["add~edx,0", "and~edx,0", "mov~[ir+0],edx", "retn"]]], "func_feature": [1, 1, 3, 0, 5, 4, 2, 18, 0.03333, 0, 2], "succs": [[2, 3], [], [1, 4], [], []], "fname": "i_ring_pop", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 0.08333333333333333, ["lea     codeset, aAscii; \"ASCII\"", "jmp     short loc_9E79"], ["lea~codeset,<TAG>", "jmp~FOO"]], [2, 0, 3, 1, 1, 5, 1, 2, 0, 0, 0.0, ["sub     rsp, 8", "mov     edi, 0Eh; item", "call    _nl_langinfo", "test    codeset, codeset", "jz      short loc_9E7E"], ["sub~rsp,0", "mov~edi,0", "call~FOO", "test~codeset,codeset", "jz~FOO"]], [1, 0, 1, 0, 0, 3, 0, 0, 1, 0, 0.08333333333333333, ["cmp     byte ptr [codeset], 0", "lea     rdx, aAscii; \"ASCII\"", "cmovz   codeset, rdx"], ["cmp~<TAG>,0", "lea~rdx,<TAG>", "cmovz~codeset,rdx"]], [1, 0, 0, 1, 0, 2, 0, 0, 2, 0, 0.0, ["add     rsp, 8", "retn"], ["add~rsp,0", "retn"]]], "func_feature": [1, 1, 3, 0, 4, 4, 1, 12, 0.04167, 1, 2], "succs": [[3], [0, 2], [3], []], "fname": "locale_charset", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[2, 1, 4, 1, 0, 8, 2, 1, 0, 0, 0.0, ["sub     rsp, 58h", "mov     [rsp+58h+var_20], rcx", "mov     rax, fs:28h", "mov     [rsp+58h+var_40], rax", "xor     eax, eax", "mov     ecx, 0", "test    dl, 40h", "jnz     short loc_9ED0"], ["sub~rsp,<STR>", "mov~[rsp+0],rcx", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~ecx,0", "test~dl,0", "jnz~FOO"]], [1, 0, 2, 0, 2, 7, 1, 3, 0, 1, 0.3333333333333333, ["mov     eax, 0", "call    _openat", "mov     edi, eax; fd", "call    fd_safer", "mov     rsi, [rsp+58h+var_40]", "xor     rsi, fs:28h", "jnz     short loc_9EF1"], ["mov~eax,0", "call~FOO", "mov~edi,eax", "call~FOO", "mov~rsi,[rsp+0]", "xor~rsi,<TAG>", "jnz~FOO"]], [0, 1, 3, 0, 0, 7, 0, 1, 0, 2, 0.0, ["lea     rax, [rsp+58h+arg_0]", "mov     [rsp+58h+ap.overflow_arg_area], rax", "lea     rax, [rsp+58h+var_38]", "mov     [rsp+58h+ap.reg_save_area], rax", "mov     [rsp+58h+ap.gp_offset], 20h ; ' '", "mov     ecx, dword ptr [rsp+58h+var_20]", "jmp     short loc_9EAA"], ["lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "mov~<TAG>,<STR>", "mov~ecx,[word ptr [rsp+0]", "jmp~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 1, 0, 1, 0, 2, 0, 0, 0, -1, 0.0, ["add     rsp, 58h", "retn"], ["add~rsp,<STR>", "retn"]]], "func_feature": [3, 3, 6, 3, 5, 5, 2, 25, 0.06667, 1, 2], "succs": [[1, 2], [3, 4], [1], [], []], "fname": "openat_safer", "n_num": 5}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 3, 0, 1, 6, 1, 2, 0, 0, 0.1, ["mov     ebx, eax", "mov     edi, eax; fd", "call    _fdopendir", "mov     rbp, rax", "test    dirp, dirp", "jz      short loc_9F3A"], ["mov~ebx,eax", "mov~edi,eax", "call~FOO", "mov~rbp,rax", "test~dirp,dirp", "jz~FOO"]], [3, 0, 5, 1, 1, 11, 2, 2, 0, 1, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     r12, pnew_fd", "or      edx, 90900h; flags", "mov     eax, 0", "call    openat_safer", "test    eax, eax", "js      short loc_9F52"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~r12,pnew_fd", "or~edx,0", "mov~eax,0", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 1, 0, 0, 1, 0, 0, 2, -1, 0.025, ["mov     [pnew_fd], ebx"], ["mov~<TAG>,ebx"]], [0, 0, 1, 0, 2, 7, 0, 3, 2, -1, 0.025, ["call    ___errno_location", "mov     pnew_fd, rax", "mov     r13d, [rax]", "mov     edi, ebx; fd", "call    _close", "mov     [r12], r13d", "jmp     short loc_9F2C"], ["call~FOO", "mov~pnew_fd,rax", "mov~r13d,<TAG>", "mov~edi,ebx", "call~FOO", "mov~<TAG>,r13d", "jmp~FOO"]], [1, 0, 1, 0, 0, 2, 0, 1, 1, 0, 0.05, ["mov     ebp, 0", "jmp     short loc_9F2C"], ["mov~ebp,0", "jmp~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 2, -1, 0.0, ["mov     rax, rbp", "add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["mov~rax,rbp", "add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "retn"]]], "func_feature": [4, 3, 8, 0, 6, 7, 1, 34, 0.03333, 0, 2], "succs": [[2, 3], [0, 4], [5], [5], [5], []], "fname": "opendirat", "n_num": 6}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[2, 0, 2, 1, 0, 8, 0, 0, 0, 0, 0.0, ["push    r13", "push    r12", "push    rbp", "push    rbx", "sub     rsp, 8", "mov     ebx, edi", "cmp     edi, 2", "jbe     short loc_9F77"], ["push~r13", "push~r12", "push~rbp", "push~rbx", "sub~rsp,0", "mov~ebx,edi", "cmp~edi,0", "jbe~FOO"]], [0, 0, 1, 0, 3, 10, 0, 4, 0, 0, 0.0, ["call    dup_safer", "mov     r12d, eax", "call    ___errno_location", "mov     rbp, rax", "mov     r13d, [rax]", "mov     edi, ebx; fd", "call    _close", "mov     [rbp+0], r13d", "mov     ebx, r12d", "jmp     short loc_9F6A"], ["call~FOO", "mov~r12d,eax", "call~FOO", "mov~rbp,rax", "mov~r13d,<TAG>", "mov~edi,ebx", "call~FOO", "mov~[rbp+0],r13d", "mov~ebx,r12d", "jmp~FOO"]], [1, 0, 0, 1, 0, 7, 0, 0, 0, -1, 0.0, ["mov     eax, ebx", "add     rsp, 8", "pop     fd", "pop     rbp", "pop     r12", "pop     r13", "retn"], ["mov~eax,ebx", "add~rsp,0", "pop~fd", "pop~rbp", "pop~r12", "pop~r13", "retn"]]], "func_feature": [3, 0, 4, 0, 3, 3, 2, 25, 0.0, 0, 2], "succs": [[1, 2], [2], []], "fname": "fd_safer", "n_num": 3}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0.0, ["mov     [rbp+0], r12d", "mov     eax, 0FFFFFFFFh", "jmp     short loc_A016"], ["mov~[rbp+0],r12d", "mov~eax,0", "jmp~FOO"]], [0, 0, 2, 0, 2, 7, 1, 3, 3, 1, 0.0863095238095238, ["call    ___errno_location", "mov     rbp, rax", "mov     r12d, [rax]", "mov     rdi, fp; stream", "call    _fclose", "test    r12d, r12d", "jz      short loc_A016"], ["call~FOO", "mov~rbp,rax", "mov~r12d,<TAG>", "mov~rdi,fp", "call~FOO", "test~r12d,r12d", "jz~FOO"]], [0, 0, 8, 0, 1, 7, 1, 2, 0, 2, 0.0, ["push    r12", "push    rbp", "push    rbx", "mov     rbx, fp", "call    _fileno", "test    eax, eax", "js      short loc_A004"], ["push~r12", "push~rbp", "push~rbx", "mov~rbx,fp", "call~FOO", "test~eax,eax", "js~FOO"]], [0, 0, 1, 0, 1, 3, 0, 2, 1, 1, 0.017857142857142856, ["mov     rdi, fp; stream", "call    _fclose", "jmp     short loc_A016"], ["mov~rdi,fp", "call~FOO", "jmp~FOO"]], [0, 0, 1, 0, 1, 2, 0, 1, 3, 1, 0.038690476190476185, ["mov     rdi, fp; stream", "call    _fclose"], ["mov~rdi,fp", "call~FOO"]], [3, 0, 5, 0, 2, 8, 0, 3, 2, 2, 0.023809523809523808, ["mov     rdi, fp; stream", "call    _fileno", "mov     edx, 1; whence", "mov     esi, 0; offset", "mov     edi, eax; fd", "call    _lseek", "cmp     rax, 0FFFFFFFFFFFFFFFFh", "jz      short loc_A00E"], ["mov~rdi,fp", "call~FOO", "mov~edx,0", "mov~esi,0", "mov~edi,eax", "call~FOO", "cmp~rax,0", "jz~FOO"]], [0, 0, 4, 0, 1, 4, 1, 2, 2, 2, 0.1369047619047619, ["mov     rdi, fp; stream", "call    rpl_fflush", "test    eax, eax", "jz      short loc_A00E"], ["mov~rdi,fp", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 6, 0, 1, 4, 1, 2, 1, 3, 0.08928571428571427, ["mov     rdi, fp; fp", "call    ___freading", "test    eax, eax", "jz      short loc_9FD5"], ["mov~rdi,fp", "call~FOO", "test~eax,eax", "jz~FOO"]], [0, 0, 0, 0, 0, 4, 0, 0, 2, 0, 0.0, ["pop     fp", "pop     rbp", "pop     r12", "retn"], ["pop~fp", "pop~rbp", "pop~r12", "retn"]]], "func_feature": [9, 4, 16, 0, 9, 13, 1, 42, 0.04365, 0, 0], "succs": [[8], [0, 8], [3, 7], [8], [8], [4, 6], [1, 4], [5, 6], []], "fname": "rpl_fclose", "n_num": 9}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[1, 0, 32, 0, 0, 2, 0, 1, 0, 0, 0.030478955007256895, ["cmp     esi, 0Bh", "jg      loc_A26B"], ["cmp~esi,0", "jg~FOO"]], [1, 0, 33, 0, 0, 2, 0, 1, 2, 3, 0.023222060957910014, ["cmp     esi, 0Bh", "jz      loc_A2DA"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 6, 3, 0.007982583454281567, ["cmp     esi, 401h", "jz      short loc_A2DA"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 15, 0, 0, 2, 0, 1, 5, 4, 0.009796806966618287, ["cmp     esi, 406h", "jge     short loc_A23D"], ["cmp~esi,0", "jge~FOO"]], [0, 0, 4, 0, 0, 4, 0, 1, 7, 3, 0.007801161103047896, ["mov     rax, [rsp+68h+arg.overflow_arg_area]", "lea     rdx, [rax+8]", "mov     [rsp+68h+arg.overflow_arg_area], rdx", "jmp     loc_A256"], ["mov~rax,[rsp+0]", "lea~rdx,[rax+0]", "mov~[rsp+0],rdx", "jmp~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 6, 4, 0.03011611030478955, ["mov     edx, [rsp+68h+arg.gp_offset]", "cmp     edx, 2Fh ; '/'", "ja      loc_A2ED"], ["mov~edx,<TAG>", "cmp~edx,0", "ja~FOO"]], [1, 0, 23, 0, 0, 2, 0, 1, 4, 3, 0.01741654571843251, ["cmp     esi, 3", "jz      loc_A2DA"], ["cmp~esi,0", "jz~FOO"]], [0, 0, 4, 0, 0, 4, 0, 1, 9, 3, 0.00634978229317852, ["mov     rax, [rsp+68h+arg.overflow_arg_area]", "lea     rdx, [rax+8]", "mov     [rsp+68h+arg.overflow_arg_area], rdx", "jmp     short loc_A2A8"], ["mov~rax,[rsp+0]", "lea~rdx,[rax+0]", "mov~[rsp+0],rdx", "jmp~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 8, 4, 0.027213352685050797, ["mov     edx, [rsp+68h+arg.gp_offset]", "cmp     edx, 2Fh ; '/'", "ja      short loc_A300"], ["mov~edx,<TAG>", "cmp~edx,0", "ja~FOO"]], [0, 0, 0, 0, 1, 1, 0, 1, 5, 0, 0.0, ["call    ___stack_chk_fail"], ["call~FOO"]], [0, 0, 2, 0, 0, 4, 1, 1, 4, 1, 0.03701015965166909, ["mov     eax, ebx", "mov     rcx, [rsp+68h+var_50]", "xor     rcx, fs:28h", "jnz     loc_A310"], ["mov~eax,ebx", "mov~rcx,[rsp+0]", "xor~rcx,<TAG>", "jnz~FOO"]], [0, 1, 11, 0, 0, 2, 0, 1, 8, 5, 0.0043541364296081275, ["cmp     esi, 400h", "jz      short loc_A23D"], ["cmp~esi,<STR>", "jz~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 7, 5, 0.006894049346879536, ["cmp     esi, 402h", "jz      short loc_A23D"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 22, 0, 0, 2, 0, 1, 5, 4, 0.02104499274310595, ["cmp     esi, 3", "jle     loc_A224"], ["cmp~esi,0", "jle~FOO"]], [2, 0, 7, 0, 1, 8, 1, 2, 7, 2, 0.005624092888243832, ["mov     edx, r12d", "mov     esi, 0; cmd", "mov     edi, ebp; fd", "mov     eax, 0", "call    _fcntl", "mov     ebx, eax", "test    eax, eax", "js      loc_A0EB"], ["mov~edx,r12d", "mov~esi,0", "mov~edi,ebp", "mov~eax,0", "call~FOO", "mov~ebx,eax", "test~eax,eax", "js~FOO"]], [1, 0, 9, 0, 1, 3, 0, 2, 6, 3, 0.006168359941944848, ["call    ___errno_location", "cmp     dword ptr [rax], 16h", "jnz     short loc_A155"], ["call~FOO", "cmp~<TAG>,0", "jnz~FOO"]], [0, 0, 4, 0, 0, 4, 0, 1, 2, 3, 0.0012699564586357039, ["mov     rax, [rsp+68h+arg.overflow_arg_area]", "lea     rdx, [rax+8]", "mov     [rsp+68h+arg.overflow_arg_area], rdx", "jmp     short loc_A0D6"], ["mov~rax,[rsp+0]", "lea~rdx,[rax+0]", "mov~[rsp+0],rdx", "jmp~FOO"]], [1, 0, 6, 0, 0, 3, 0, 1, 1, 4, 0.00181422351233672, ["mov     edx, [rsp+68h+arg.gp_offset]", "cmp     edx, 2Fh ; '/'", "ja      short loc_A10A"], ["mov~edx,<TAG>", "cmp~edx,0", "ja~FOO"]], [1, 0, 12, 0, 0, 2, 0, 1, 9, 5, 0.006168359941944848, ["cmp     esi, 0Ah", "jnz     loc_A293"], ["cmp~esi,0", "jnz~FOO"]], [0, 0, 12, 0, 0, 2, 1, 1, 8, 5, 0.00725689404934688, ["test    esi, esi", "jnz     short loc_A293"], ["test~esi,esi", "jnz~FOO"]], [1, 0, 11, 0, 0, 2, 0, 1, 8, 5, 0.005805515239477504, ["cmp     esi, 4", "jnz     short loc_A293"], ["cmp~esi,0", "jnz~FOO"]], [1, 0, 8, 0, 0, 2, 0, 1, 7, 3, 0.010159651669085631, ["cmp     esi, 40Ah", "jnz     short loc_A293"], ["cmp~esi,0", "jnz~FOO"]], [1, 0, 17, 0, 0, 2, 0, 1, 6, 5, 0.015239477503628448, ["cmp     esi, 8", "jz      loc_A23D"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 3, 0, 2, 8, 0, 3, 8, 2, 0.0010885341074020319, ["call    ___errno_location", "mov     fd, rax", "mov     r12d, [rax]", "mov     edi, ebx; fd", "call    _close", "mov     [rbp+0], r12d", "mov     ebx, 0FFFFFFFFh", "jmp     loc_A0EB"], ["call~FOO", "mov~fd,rax", "mov~r12d,<TAG>", "mov~edi,ebx", "call~FOO", "mov~[rbp+0],r12d", "mov~ebx,0", "jmp~FOO"]], [2, 0, 5, 0, 1, 6, 1, 2, 7, 3, 0.009796806966618287, ["mov     esi, 1; cmd", "mov     edi, ebx; fd", "mov     eax, 0", "call    _fcntl", "test    eax, eax", "js      short loc_A204"], ["mov~esi,0", "mov~edi,ebx", "mov~eax,0", "call~FOO", "test~eax,eax", "js~FOO"]], [4, 0, 4, 0, 1, 8, 1, 2, 8, 2, 0.0010885341074020319, ["or      eax, 1", "mov     edx, eax", "mov     esi, 2; cmd", "mov     edi, ebx; fd", "mov     eax, 0", "call    _fcntl", "cmp     eax, 0FFFFFFFFh", "jnz     loc_A0EB"], ["or~eax,0", "mov~edx,eax", "mov~esi,0", "mov~edi,ebx", "mov~eax,0", "call~FOO", "cmp~eax,0", "jnz~FOO"]], [1, 0, 16, 0, 0, 3, 0, 1, 2, 5, 0.009433962264150943, ["mov     edx, [rsp+68h+arg.gp_offset]", "cmp     edx, 2Fh ; '/'", "ja      short loc_A161"], ["mov~edx,<TAG>", "cmp~edx,0", "ja~FOO"]], [1, 0, 48, 0, 0, 2, 0, 1, 1, 4, 0.016690856313497822, ["cmp     esi, 406h", "jz      loc_A11A"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 8, 4, 0.003265602322206096, ["mov     cs:have_dupfd_cloexec_3326, 0FFFFFFFFh", "jmp     short loc_A1D0"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 16, 0, 0, 2, 0, 1, 7, 4, 0.013788098693759071, ["cmp     esi, 8", "jle     loc_A238"], ["cmp~esi,0", "jle~FOO"]], [1, 0, 4, 2, 0, 4, 0, 0, 9, 3, 0.00634978229317852, ["mov     eax, edx", "add     rax, [rsp+68h+arg.reg_save_area]", "add     edx, 8", "mov     [rsp+68h+arg.gp_offset], edx"], ["mov~eax,edx", "add~rax,[rsp+0]", "add~edx,0", "mov~<TAG>,edx"]], [1, 0, 15, 0, 0, 2, 0, 1, 6, 3, 0.009433962264150943, ["cmp     esi, 1", "jz      loc_A2DA"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 14, 2, 0, 4, 0, 0, 3, 4, 0.006531204644412192, ["mov     eax, edx", "add     rax, [rsp+68h+arg.reg_save_area]", "add     edx, 8", "mov     [rsp+68h+arg.gp_offset], edx"], ["mov~eax,edx", "add~rax,[rsp+0]", "add~edx,0", "mov~<TAG>,edx"]], [1, 0, 14, 0, 0, 2, 0, 1, 8, 3, 0.007982583454281567, ["cmp     esi, 9", "jz      loc_A2DA"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 13, 0, 0, 2, 0, 1, 7, 5, 0.009433962264150943, ["cmp     esi, 1", "jg      short loc_A23D"], ["cmp~esi,0", "jg~FOO"]], [0, 1, 0, 1, 0, 5, 0, 0, 5, -1, 0.0, ["add     rsp, 50h", "pop     rbx", "pop     rbp", "pop     r12", "retn"], ["add~rsp,<STR>", "pop~rbx", "pop~rbp", "pop~r12", "retn"]], [1, 0, 13, 0, 0, 3, 0, 1, 4, 3, 0.021407837445573296, ["mov     r12d, [rax]", "cmp     cs:have_dupfd_cloexec_3326, 0", "js      short loc_A1A5"], ["mov~r12d,<TAG>", "cmp~<TAG>,0", "js~FOO"]], [0, 0, 14, 0, 0, 4, 0, 1, 3, 4, 0.006531204644412192, ["mov     rax, [rsp+68h+arg.overflow_arg_area]", "lea     rdx, [rax+8]", "mov     [rsp+68h+arg.overflow_arg_area], rdx", "jmp     short loc_A12F"], ["mov~rax,[rsp+0]", "lea~rdx,[rax+0]", "mov~[rsp+0],rdx", "jmp~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 10, 5, 0.002902757619738752, ["jmp     loc_A23D"], ["jmp~FOO"]], [2, 0, 7, 0, 1, 8, 1, 2, 5, 2, 0.013062409288824383, ["mov     edx, r12d", "mov     esi, 0; cmd", "mov     edi, ebp; fd", "mov     eax, 0", "call    _fcntl", "mov     ebx, eax", "test    eax, eax", "js      loc_A0EB"], ["mov~edx,r12d", "mov~esi,0", "mov~edi,ebp", "mov~eax,0", "call~FOO", "mov~ebx,eax", "test~eax,eax", "js~FOO"]], [0, 0, 7, 0, 0, 1, 0, 1, 9, 5, 0.001451378809869376, ["jmp     short loc_A23D"], ["jmp~FOO"]], [1, 0, 14, 0, 0, 2, 0, 1, 5, 4, 0.015239477503628448, ["cmp     esi, 409h", "jz      loc_A23D"], ["cmp~esi,0", "jz~FOO"]], [1, 0, 19, 0, 0, 2, 0, 1, 4, 5, 0.02177068214804064, ["cmp     esi, 407h", "jg      short loc_A2BE"], ["cmp~esi,0", "jg~FOO"]], [1, 1, 53, 1, 0, 19, 2, 1, 0, 5, 0.0, ["push    r12", "push    rbp", "push    rbx", "sub     rsp, 50h", "mov     ebp, edi", "mov     [rsp+68h+var_38], rdx", "mov     [rsp+68h+var_30], rcx", "mov     [rsp+68h+var_28], r8", "mov     [rsp+68h+var_20], r9", "mov     rax, fs:28h", "mov     [rsp+68h+var_50], rax", "xor     eax, eax", "mov     [rsp+68h+arg.gp_offset], 10h", "lea     rax, [rsp+68h+arg_0]", "mov     [rsp+68h+arg.overflow_arg_area], rax", "lea     rax, [rsp+68h+var_48]", "mov     [rsp+68h+arg.reg_save_area], rax", "test    esi, esi", "jz      short loc_A0C1"], ["push~r12", "push~rbp", "push~rbx", "sub~rsp,<STR>", "mov~ebp,edi", "mov~[rsp+0],rdx", "mov~[rsp+0],rcx", "mov~[rsp+0],r8", "mov~[rsp+0],r9", "mov~rax,<TAG>", "mov~[rsp+0],rax", "xor~eax,eax", "mov~<TAG>,0", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "lea~rax,[rsp+0]", "mov~[rsp+0],rax", "test~esi,esi", "jz~FOO"]], [1, 0, 3, 0, 1, 6, 0, 2, 10, 2, 0.006531204644412192, ["mov     rdx, [rax]", "mov     edi, ebp; fd", "mov     eax, 0", "call    _fcntl", "mov     ebx, eax", "jmp     loc_A0EB"], ["mov~rdx,<TAG>", "mov~edi,ebp", "mov~eax,0", "call~FOO", "mov~ebx,eax", "jmp~FOO"]], [1, 0, 6, 0, 0, 2, 0, 1, 6, 2, 0.007619738751814224, ["cmp     cs:have_dupfd_cloexec_3326, 0FFFFFFFFh", "jnz     loc_A0EB"], ["cmp~<TAG>,0", "jnz~FOO"]], [1, 0, 9, 0, 0, 2, 0, 1, 6, 3, 0.013062409288824383, ["cmp     esi, 409h", "jl      short loc_A2DA"], ["cmp~esi,0", "jl~FOO"]], [1, 0, 4, 2, 0, 4, 0, 0, 7, 3, 0.007801161103047896, ["mov     eax, edx", "add     rax, [rsp+68h+arg.reg_save_area]", "add     edx, 8", "mov     [rsp+68h+arg.gp_offset], edx"], ["mov~eax,edx", "add~rax,[rsp+0]", "add~edx,0", "mov~<TAG>,edx"]], [2, 0, 10, 0, 1, 8, 1, 2, 5, 3, 0.008708272859216255, ["mov     edx, r12d", "mov     esi, 406h; cmd", "mov     edi, ebp; fd", "mov     eax, 0", "call    _fcntl", "mov     ebx, eax", "test    eax, eax", "js      short loc_A171"], ["mov~edx,r12d", "mov~esi,0", "mov~edi,ebp", "mov~eax,0", "call~FOO", "mov~ebx,eax", "test~eax,eax", "js~FOO"]], [1, 0, 3, 0, 0, 2, 0, 1, 6, 2, 0.001632801161103048, ["mov     cs:have_dupfd_cloexec_3326, 1", "jmp     short loc_A0EB"], ["mov~<TAG>,0", "jmp~FOO"]], [1, 0, 3, 0, 1, 6, 0, 2, 8, 2, 0.009433962264150943, ["mov     edx, [rax]", "mov     edi, ebp; fd", "mov     eax, 0", "call    _fcntl", "mov     ebx, eax", "jmp     loc_A0EB"], ["mov~edx,<TAG>", "mov~edi,ebp", "mov~eax,0", "call~FOO", "mov~ebx,eax", "jmp~FOO"]], [1, 0, 3, 0, 1, 5, 0, 2, 3, 2, 0.015965166908563134, ["mov     edi, ebp; fd", "mov     eax, 0", "call    _fcntl", "mov     ebx, eax", "jmp     loc_A0EB"], ["mov~edi,ebp", "mov~eax,0", "call~FOO", "mov~ebx,eax", "jmp~FOO"]], [2, 0, 3, 0, 1, 6, 0, 1, 3, 2, 0.0039912917271407835, ["mov     edx, [rax]", "mov     esi, 0; cmd", "mov     edi, ebp; fd", "mov     eax, 0", "call    _fcntl", "mov     ebx, eax"], ["mov~edx,<TAG>", "mov~esi,0", "mov~edi,ebp", "mov~eax,0", "call~FOO", "mov~ebx,eax"]], [1, 0, 4, 2, 0, 4, 0, 0, 2, 3, 0.0012699564586357039, ["mov     eax, edx", "add     rax, [rsp+68h+arg.reg_save_area]", "add     edx, 8", "mov     [rsp+68h+arg.gp_offset], edx"], ["mov~eax,edx", "add~rax,[rsp+0]", "add~edx,0", "mov~<TAG>,edx"]]], "func_feature": [13, 9, 60, 6, 54, 87, 2, 198, 0.01005, 2, 10], "succs": [[42, 6], [0, 51], [51, 12], [2, 5], [50], [4, 47], [51, 13], [44], [30, 7], [], [9, 35], [8, 5], [11, 5], [22, 31], [10, 28], [49, 14], [52], [16, 53], [8, 38], [8, 40], [8, 5], [8, 51], [29, 5], [10], [25, 23], [10, 23], [32, 37], [1, 26], [24], [33, 20], [44], [34, 51], [36], [18, 51], [19, 5], [], [48, 39], [36], [5], [10, 45], [5], [5, 46], [41, 3], [17, 27], [10], [24, 10], [51, 21], [50], [49, 15], [10], [10], [10], [10], [52]], "fname": "rpl_fcntl", "n_num": 54}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[5, 0, 0, 2, 1, 7, 0, 1, 0, 0, 0.0, ["sub     rsp, 8", "mov     edx, 3", "mov     esi, 0; action", "mov     eax, 0", "call    rpl_fcntl", "add     rsp, 8", "retn"], ["sub~rsp,0", "mov~edx,0", "mov~esi,0", "mov~eax,0", "call~FOO", "add~rsp,0", "retn"]]], "func_feature": [1, 0, 1, 0, 1, 0, 1, 7, 0.0, 0, 2], "succs": [[]], "fname": "dup_safer", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 2, 0, 0, 2, 1, 0, 0, 0, 0.16666666666666666, ["xor     ebx, ebx", "nop     dword ptr [rax+rax+00000000h]"], ["xor~ebx,ebx", "nop~[word ptr [rax+0]"]], [2, 0, 3, 2, 1, 17, 1, 2, 0, 1, 0.0, ["push    r15", "push    r14", "mov     r15, rdx", "push    r13", "push    r12", "lea     r12, __frame_dummy_init_array_entry", "push    rbp", "lea     rbp, __do_global_dtors_aux_fini_array_entry", "push    rbx", "mov     r13d, edi", "mov     r14, rsi", "sub     rbp, r12", "sub     rsp, 8", "sar     rbp, 3", "call    _init_proc", "test    rbp, rbp", "jz      short loc_A396"], ["push~r15", "push~r14", "mov~r15,rdx", "push~r13", "push~r12", "lea~r12,<TAG>", "push~rbp", "lea~rbp,<TAG>", "push~rbx", "mov~r13d,edi", "mov~r14,rsi", "sub~rbp,r12", "sub~rsp,0", "sar~rbp,0", "call~FOO", "test~rbp,rbp", "jz~FOO"]], [1, 0, 2, 1, 1, 7, 0, 2, 2, 1, 0.16666666666666666, ["mov     rdx, r15", "mov     rsi, r14", "mov     edi, r13d", "call    qword ptr [r12+rbx*8]", "add     rbx, 1", "cmp     rbp, rbx", "jnz     short loc_A380"], ["mov~rdx,r15", "mov~rsi,r14", "mov~edi,r13d", "call~<TAG>", "add~rbx,0", "cmp~rbp,rbx", "jnz~FOO"]], [1, 0, 0, 1, 0, 8, 0, 0, 1, 0, 0.0, ["add     rsp, 8", "pop     rbx", "pop     rbp", "pop     r12", "pop     r13", "pop     r14", "pop     r15", "retn"], ["add~rsp,0", "pop~rbx", "pop~rbp", "pop~r12", "pop~r13", "pop~r14", "pop~r15", "retn"]]], "func_feature": [2, 2, 4, 0, 4, 5, 0, 34, 0.08333, 2, 4], "succs": [[2], [0, 3], [2, 3], []], "fname": "__libc_csu_init", "n_num": 4}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["rep retn"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_csu_fini", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 1, 0, 0, 3, 1, 1, 0, 0, 0.0, ["mov     rdx, cs:__dso_handle", "xor     esi, esi", "jmp     ___cxa_atexit"], ["mov~rdx,<TAG>", "xor~esi,esi", "jmp~FOO"]], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, [], []]], "func_feature": [0, 1, 1, 0, 2, 1, 1, 3, 0.0, 1, 0], "succs": [[1], []], "fname": "atexit", "n_num": 2}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[2, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0.0, ["sub     rsp, 8; _fini", "add     rsp, 8", "retn"], ["sub~rsp,0", "add~rsp,0", "retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 3, 0.0, 0, 2], "succs": [[]], "fname": "term_proc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp_free:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp_free", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn abort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "abort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __errno_location:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__errno_location", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strncmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strncmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn _exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "_exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fpending:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fpending", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn unlinkat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "unlinkat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn qsort:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "qsort", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn isatty:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "isatty", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn faccessat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "faccessat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fcntl:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fcntl", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn textdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "textdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fclose:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fclose", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn bindtextdomain:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "bindtextdomain", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dcgettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dcgettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_get_mb_cur_max:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_get_mb_cur_max", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __lxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__lxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn openat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "openat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __stack_chk_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__stack_chk_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn getopt_long:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "getopt_long", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbrtowc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbrtowc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstatat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstatat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __overflow:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__overflow", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strrchr:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strrchr", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn lseek:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "lseek", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __assert_fail:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__assert_fail", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memset:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memset", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn geteuid:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "geteuid", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn close:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "close", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn closedir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "closedir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __libc_start_main:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__libc_start_main", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fputs_unlocked:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fputs_unlocked", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn calloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "calloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __getdelim:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__getdelim", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn strcmp:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "strcmp", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dirfd:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dirfd", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn rpmatch:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "rpmatch", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fileno:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fileno", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __xstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__xstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn readdir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "readdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn malloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "malloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fflush:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fflush", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn nl_langinfo:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "nl_langinfo", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fxstat:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fxstat", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __freading:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__freading", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fchdir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fchdir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn realloc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "realloc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn setlocale:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "setlocale", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __printf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__printf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mempcpy:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mempcpy", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn memmove:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "memmove", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn error:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "error", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn open:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "open", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fseeko:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fseeko", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn dcngettext:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "dcngettext", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fdopendir:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fdopendir", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fstatfs:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fstatfs", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __cxa_atexit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__cxa_atexit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn exit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "exit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn fwrite:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "fwrite", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __fprintf_chk:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__fprintf_chk", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn mbsinit:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "mbsinit", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn iswprint:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "iswprint", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __imp___cxa_finalize:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__imp___cxa_finalize", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __ctype_b_loc:near"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 0, 1, 0.0, 0, 0], "succs": [[]], "fname": "__ctype_b_loc", "n_num": 1}
{"src": "/Users/eacials/projIoT/output/coreutils_8.31_x86_O1_rm.ida", "features": [[0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0.0, ["extrn __gmon_start__:near ; weak"], ["retn"]]], "func_feature": [0, 0, 0, 0, 1, 0, 1, 1, 0.0, 0, 0], "succs": [[]], "fname": "__gmon_start__", "n_num": 1}
